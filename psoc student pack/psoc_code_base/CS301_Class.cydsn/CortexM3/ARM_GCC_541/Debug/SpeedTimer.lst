ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SpeedTimer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SpeedTimer_initVar
  20              		.bss
  21              		.type	SpeedTimer_initVar, %object
  22              		.size	SpeedTimer_initVar, 1
  23              	SpeedTimer_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.SpeedTimer_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SpeedTimer_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	SpeedTimer_Init, %function
  31              	SpeedTimer_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\SpeedTimer.c"
   1:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SpeedTimer.c **** * File Name: SpeedTimer.c
   3:Generated_Source\PSoC5/SpeedTimer.c **** * Version 2.80
   4:Generated_Source\PSoC5/SpeedTimer.c **** *
   5:Generated_Source\PSoC5/SpeedTimer.c **** * Description:
   6:Generated_Source\PSoC5/SpeedTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/SpeedTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/SpeedTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/SpeedTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/SpeedTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/SpeedTimer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/SpeedTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/SpeedTimer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/SpeedTimer.c **** *
  15:Generated_Source\PSoC5/SpeedTimer.c **** * Note:
  16:Generated_Source\PSoC5/SpeedTimer.c **** *
  17:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/SpeedTimer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/SpeedTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/SpeedTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/SpeedTimer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/SpeedTimer.c **** 
  24:Generated_Source\PSoC5/SpeedTimer.c **** #include "SpeedTimer.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 2


  25:Generated_Source\PSoC5/SpeedTimer.c **** 
  26:Generated_Source\PSoC5/SpeedTimer.c **** uint8 SpeedTimer_initVar = 0u;
  27:Generated_Source\PSoC5/SpeedTimer.c **** 
  28:Generated_Source\PSoC5/SpeedTimer.c **** 
  29:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_Init
  31:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/SpeedTimer.c **** *
  33:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
  34:Generated_Source\PSoC5/SpeedTimer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/SpeedTimer.c **** *
  36:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
  37:Generated_Source\PSoC5/SpeedTimer.c **** *  void
  38:Generated_Source\PSoC5/SpeedTimer.c **** *
  39:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
  40:Generated_Source\PSoC5/SpeedTimer.c **** *  void
  41:Generated_Source\PSoC5/SpeedTimer.c **** *
  42:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_Init(void) 
  44:Generated_Source\PSoC5/SpeedTimer.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/SpeedTimer.c ****     #if(!SpeedTimer_UsingFixedFunction)
  46:Generated_Source\PSoC5/SpeedTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/SpeedTimer.c ****             uint8 SpeedTimer_interruptState;
  48:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/SpeedTimer.c **** 
  50:Generated_Source\PSoC5/SpeedTimer.c ****     #if (SpeedTimer_UsingFixedFunction)
  51:Generated_Source\PSoC5/SpeedTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_CONTROL &= SpeedTimer_CTRL_ENABLE;
  44              		.loc 1 52 0
  45 0004 214A     		ldr	r2, .L2
  46 0006 214B     		ldr	r3, .L2
  47 0008 1B78     		ldrb	r3, [r3]
  48 000a DBB2     		uxtb	r3, r3
  49 000c 03F00103 		and	r3, r3, #1
  50 0010 DBB2     		uxtb	r3, r3
  51 0012 1370     		strb	r3, [r2]
  53:Generated_Source\PSoC5/SpeedTimer.c **** 
  54:Generated_Source\PSoC5/SpeedTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/SpeedTimer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/SpeedTimer.c ****             SpeedTimer_CONTROL2 &= ((uint8)(~SpeedTimer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/SpeedTimer.c **** 
  59:Generated_Source\PSoC5/SpeedTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/SpeedTimer.c ****             SpeedTimer_CONTROL3 &= ((uint8)(~SpeedTimer_CTRL_MODE_MASK));
  52              		.loc 1 60 0
  53 0014 1E4A     		ldr	r2, .L2+4
  54 0016 1E4B     		ldr	r3, .L2+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 3


  55 0018 1B78     		ldrb	r3, [r3]
  56 001a DBB2     		uxtb	r3, r3
  57 001c 23F00303 		bic	r3, r3, #3
  58 0020 DBB2     		uxtb	r3, r3
  59 0022 1370     		strb	r3, [r2]
  61:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/SpeedTimer.c **** 
  63:Generated_Source\PSoC5/SpeedTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/SpeedTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/SpeedTimer.c ****             SpeedTimer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/SpeedTimer.c **** 
  69:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/SpeedTimer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/SpeedTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/SpeedTimer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/SpeedTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/SpeedTimer.c **** 
  76:Generated_Source\PSoC5/SpeedTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/SpeedTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/SpeedTimer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/SpeedTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/SpeedTimer.c **** 
  82:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/SpeedTimer.c **** 
  84:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/SpeedTimer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/SpeedTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL2 |= SpeedTimer_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/SpeedTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/SpeedTimer.c **** 
  90:Generated_Source\PSoC5/SpeedTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/SpeedTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL3 &= ((uint8)(~SpeedTimer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= SpeedTimer_CTRL_RCOD;
  94:Generated_Source\PSoC5/SpeedTimer.c **** 
  95:Generated_Source\PSoC5/SpeedTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL3 &= ((uint8)(~SpeedTimer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= SpeedTimer_CTRL_ENBL;
  98:Generated_Source\PSoC5/SpeedTimer.c **** 
  99:Generated_Source\PSoC5/SpeedTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= SpeedTimer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/SpeedTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/SpeedTimer.c **** 
 103:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/SpeedTimer.c **** 
 105:Generated_Source\PSoC5/SpeedTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_RT1 &= ((uint8)(~SpeedTimer_RT1_MASK));
  60              		.loc 1 106 0
  61 0024 1B4A     		ldr	r2, .L2+8
  62 0026 1B4B     		ldr	r3, .L2+8
  63 0028 1B78     		ldrb	r3, [r3]
  64 002a DBB2     		uxtb	r3, r3
  65 002c 23F03003 		bic	r3, r3, #48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 4


  66 0030 DBB2     		uxtb	r3, r3
  67 0032 1370     		strb	r3, [r2]
 107:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_RT1 |= SpeedTimer_SYNC;
  68              		.loc 1 107 0
  69 0034 174A     		ldr	r2, .L2+8
  70 0036 174B     		ldr	r3, .L2+8
  71 0038 1B78     		ldrb	r3, [r3]
  72 003a DBB2     		uxtb	r3, r3
  73 003c 43F03003 		orr	r3, r3, #48
  74 0040 DBB2     		uxtb	r3, r3
  75 0042 1370     		strb	r3, [r2]
 108:Generated_Source\PSoC5/SpeedTimer.c **** 
 109:Generated_Source\PSoC5/SpeedTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_RT1 &= ((uint8)(~SpeedTimer_SYNCDSI_MASK));
  76              		.loc 1 110 0
  77 0044 134A     		ldr	r2, .L2+8
  78 0046 134B     		ldr	r3, .L2+8
  79 0048 1B78     		ldrb	r3, [r3]
  80 004a DBB2     		uxtb	r3, r3
  81 004c 23F00F03 		bic	r3, r3, #15
  82 0050 DBB2     		uxtb	r3, r3
  83 0052 1370     		strb	r3, [r2]
 111:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_RT1 |= SpeedTimer_SYNCDSI_EN;
  84              		.loc 1 111 0
  85 0054 0F4A     		ldr	r2, .L2+8
  86 0056 0F4B     		ldr	r3, .L2+8
  87 0058 1B78     		ldrb	r3, [r3]
  88 005a DBB2     		uxtb	r3, r3
  89 005c 43F00F03 		orr	r3, r3, #15
  90 0060 DBB2     		uxtb	r3, r3
  91 0062 1370     		strb	r3, [r2]
 112:Generated_Source\PSoC5/SpeedTimer.c **** 
 113:Generated_Source\PSoC5/SpeedTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_CONTROL2 |= SpeedTimer_CTRL2_IRQ_SEL;
  92              		.loc 1 114 0
  93 0064 0C4A     		ldr	r2, .L2+12
  94 0066 0C4B     		ldr	r3, .L2+12
  95 0068 1B78     		ldrb	r3, [r3]
  96 006a DBB2     		uxtb	r3, r3
  97 006c 43F00103 		orr	r3, r3, #1
  98 0070 DBB2     		uxtb	r3, r3
  99 0072 1370     		strb	r3, [r2]
 115:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/SpeedTimer.c **** 
 117:Generated_Source\PSoC5/SpeedTimer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/SpeedTimer.c ****     SpeedTimer_WritePeriod(SpeedTimer_INIT_PERIOD);
 100              		.loc 1 118 0
 101 0074 3120     		movs	r0, #49
 102 0076 FFF7FEFF 		bl	SpeedTimer_WritePeriod
 119:Generated_Source\PSoC5/SpeedTimer.c ****     SpeedTimer_WriteCounter(SpeedTimer_INIT_PERIOD);
 103              		.loc 1 119 0
 104 007a 3120     		movs	r0, #49
 105 007c FFF7FEFF 		bl	SpeedTimer_WriteCounter
 120:Generated_Source\PSoC5/SpeedTimer.c **** 
 121:Generated_Source\PSoC5/SpeedTimer.c ****     #if (SpeedTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_CAPTURE_COUNT_CTRL |= SpeedTimer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_SetCaptureCount(SpeedTimer_INIT_CAPTURE_COUNT);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 5


 124:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/SpeedTimer.c **** 
 126:Generated_Source\PSoC5/SpeedTimer.c ****     #if (!SpeedTimer_UsingFixedFunction)
 127:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/SpeedTimer.c ****             SpeedTimer_SetCaptureMode(SpeedTimer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/SpeedTimer.c **** 
 131:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/SpeedTimer.c ****             #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/SpeedTimer.c ****                 if (0u == (SpeedTimer_CONTROL & SpeedTimer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/SpeedTimer.c ****                 {
 135:Generated_Source\PSoC5/SpeedTimer.c ****                     SpeedTimer_SetTriggerMode(SpeedTimer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/SpeedTimer.c ****                 }
 137:Generated_Source\PSoC5/SpeedTimer.c ****             #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/SpeedTimer.c **** 
 140:Generated_Source\PSoC5/SpeedTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/SpeedTimer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/SpeedTimer.c **** 
 144:Generated_Source\PSoC5/SpeedTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_STATUS_AUX_CTRL |= SpeedTimer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/SpeedTimer.c **** 
 147:Generated_Source\PSoC5/SpeedTimer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/SpeedTimer.c ****         CyExitCriticalSection(SpeedTimer_interruptState);
 149:Generated_Source\PSoC5/SpeedTimer.c **** 
 150:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_EnableTriggerMode)
 151:Generated_Source\PSoC5/SpeedTimer.c ****             SpeedTimer_EnableTrigger();
 152:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/SpeedTimer.c **** 		
 154:Generated_Source\PSoC5/SpeedTimer.c **** 		
 155:Generated_Source\PSoC5/SpeedTimer.c ****         #if (SpeedTimer_InterruptOnCaptureCount && !SpeedTimer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/SpeedTimer.c ****             SpeedTimer_SetInterruptCount(SpeedTimer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/SpeedTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/SpeedTimer.c **** 
 159:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_ClearFIFO();
 160:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/SpeedTimer.c **** 
 162:Generated_Source\PSoC5/SpeedTimer.c ****     SpeedTimer_SetInterruptMode(SpeedTimer_INIT_INTERRUPT_MODE);
 106              		.loc 1 162 0
 107 0080 0820     		movs	r0, #8
 108 0082 FFF7FEFF 		bl	SpeedTimer_SetInterruptMode
 163:Generated_Source\PSoC5/SpeedTimer.c **** }
 109              		.loc 1 163 0
 110 0086 00BF     		nop
 111 0088 80BD     		pop	{r7, pc}
 112              	.L3:
 113 008a 00BF     		.align	2
 114              	.L2:
 115 008c 184F0040 		.word	1073762072
 116 0090 1A4F0040 		.word	1073762074
 117 0094 234F0040 		.word	1073762083
 118 0098 194F0040 		.word	1073762073
 119              		.cfi_endproc
 120              	.LFE0:
 121              		.size	SpeedTimer_Init, .-SpeedTimer_Init
 122              		.section	.text.SpeedTimer_Enable,"ax",%progbits
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 6


 123              		.align	2
 124              		.global	SpeedTimer_Enable
 125              		.thumb
 126              		.thumb_func
 127              		.type	SpeedTimer_Enable, %function
 128              	SpeedTimer_Enable:
 129              	.LFB1:
 164:Generated_Source\PSoC5/SpeedTimer.c **** 
 165:Generated_Source\PSoC5/SpeedTimer.c **** 
 166:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_Enable
 168:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/SpeedTimer.c **** *
 170:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 171:Generated_Source\PSoC5/SpeedTimer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/SpeedTimer.c **** *
 173:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 174:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 175:Generated_Source\PSoC5/SpeedTimer.c **** *
 176:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 177:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 178:Generated_Source\PSoC5/SpeedTimer.c **** *
 179:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_Enable(void) 
 181:Generated_Source\PSoC5/SpeedTimer.c **** {
 130              		.loc 1 181 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/SpeedTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/SpeedTimer.c ****     #if (SpeedTimer_UsingFixedFunction)
 184:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_GLOBAL_ENABLE |= SpeedTimer_BLOCK_EN_MASK;
 140              		.loc 1 184 0
 141 0004 0D4A     		ldr	r2, .L5
 142 0006 0D4B     		ldr	r3, .L5
 143 0008 1B78     		ldrb	r3, [r3]
 144 000a DBB2     		uxtb	r3, r3
 145 000c 43F00403 		orr	r3, r3, #4
 146 0010 DBB2     		uxtb	r3, r3
 147 0012 1370     		strb	r3, [r2]
 185:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_GLOBAL_STBY_ENABLE |= SpeedTimer_BLOCK_STBY_EN_MASK;
 148              		.loc 1 185 0
 149 0014 0A4A     		ldr	r2, .L5+4
 150 0016 0A4B     		ldr	r3, .L5+4
 151 0018 1B78     		ldrb	r3, [r3]
 152 001a DBB2     		uxtb	r3, r3
 153 001c 43F00403 		orr	r3, r3, #4
 154 0020 DBB2     		uxtb	r3, r3
 155 0022 1370     		strb	r3, [r2]
 186:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/SpeedTimer.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 7


 188:Generated_Source\PSoC5/SpeedTimer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED || SpeedTimer_UsingFixedFunction)
 190:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_CONTROL |= SpeedTimer_CTRL_ENABLE;
 156              		.loc 1 190 0
 157 0024 074A     		ldr	r2, .L5+8
 158 0026 074B     		ldr	r3, .L5+8
 159 0028 1B78     		ldrb	r3, [r3]
 160 002a DBB2     		uxtb	r3, r3
 161 002c 43F00103 		orr	r3, r3, #1
 162 0030 DBB2     		uxtb	r3, r3
 163 0032 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/SpeedTimer.c **** }
 164              		.loc 1 192 0
 165 0034 00BF     		nop
 166 0036 BD46     		mov	sp, r7
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 0038 80BC     		pop	{r7}
 170              		.cfi_restore 7
 171              		.cfi_def_cfa_offset 0
 172 003a 7047     		bx	lr
 173              	.L6:
 174              		.align	2
 175              	.L5:
 176 003c A3430040 		.word	1073759139
 177 0040 B3430040 		.word	1073759155
 178 0044 184F0040 		.word	1073762072
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	SpeedTimer_Enable, .-SpeedTimer_Enable
 182              		.section	.text.SpeedTimer_Start,"ax",%progbits
 183              		.align	2
 184              		.global	SpeedTimer_Start
 185              		.thumb
 186              		.thumb_func
 187              		.type	SpeedTimer_Start, %function
 188              	SpeedTimer_Start:
 189              	.LFB2:
 193:Generated_Source\PSoC5/SpeedTimer.c **** 
 194:Generated_Source\PSoC5/SpeedTimer.c **** 
 195:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_Start
 197:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/SpeedTimer.c **** *
 199:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 200:Generated_Source\PSoC5/SpeedTimer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/SpeedTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/SpeedTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/SpeedTimer.c **** *
 204:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 205:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 206:Generated_Source\PSoC5/SpeedTimer.c **** *
 207:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 208:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 209:Generated_Source\PSoC5/SpeedTimer.c **** *
 210:Generated_Source\PSoC5/SpeedTimer.c **** * Global variables:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 8


 211:Generated_Source\PSoC5/SpeedTimer.c **** *  SpeedTimer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/SpeedTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/SpeedTimer.c **** *
 214:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_Start(void) 
 216:Generated_Source\PSoC5/SpeedTimer.c **** {
 190              		.loc 1 216 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/SpeedTimer.c ****     if(SpeedTimer_initVar == 0u)
 200              		.loc 1 217 0
 201 0004 064B     		ldr	r3, .L9
 202 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 203 0008 002B     		cmp	r3, #0
 204 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC5/SpeedTimer.c ****     {
 219:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_Init();
 205              		.loc 1 219 0
 206 000c FFF7FEFF 		bl	SpeedTimer_Init
 220:Generated_Source\PSoC5/SpeedTimer.c **** 
 221:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_initVar = 1u;   /* Clear this bit for Initialization */
 207              		.loc 1 221 0
 208 0010 034B     		ldr	r3, .L9
 209 0012 0122     		movs	r2, #1
 210 0014 1A70     		strb	r2, [r3]
 211              	.L8:
 222:Generated_Source\PSoC5/SpeedTimer.c ****     }
 223:Generated_Source\PSoC5/SpeedTimer.c **** 
 224:Generated_Source\PSoC5/SpeedTimer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/SpeedTimer.c ****     SpeedTimer_Enable();
 212              		.loc 1 225 0
 213 0016 FFF7FEFF 		bl	SpeedTimer_Enable
 226:Generated_Source\PSoC5/SpeedTimer.c **** }
 214              		.loc 1 226 0
 215 001a 00BF     		nop
 216 001c 80BD     		pop	{r7, pc}
 217              	.L10:
 218 001e 00BF     		.align	2
 219              	.L9:
 220 0020 00000000 		.word	SpeedTimer_initVar
 221              		.cfi_endproc
 222              	.LFE2:
 223              		.size	SpeedTimer_Start, .-SpeedTimer_Start
 224              		.section	.text.SpeedTimer_Stop,"ax",%progbits
 225              		.align	2
 226              		.global	SpeedTimer_Stop
 227              		.thumb
 228              		.thumb_func
 229              		.type	SpeedTimer_Stop, %function
 230              	SpeedTimer_Stop:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 9


 231              	.LFB3:
 227:Generated_Source\PSoC5/SpeedTimer.c **** 
 228:Generated_Source\PSoC5/SpeedTimer.c **** 
 229:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_Stop
 231:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/SpeedTimer.c **** *
 233:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 234:Generated_Source\PSoC5/SpeedTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/SpeedTimer.c **** *  interrupts.
 236:Generated_Source\PSoC5/SpeedTimer.c **** *
 237:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 238:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 239:Generated_Source\PSoC5/SpeedTimer.c **** *
 240:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 241:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 242:Generated_Source\PSoC5/SpeedTimer.c **** *
 243:Generated_Source\PSoC5/SpeedTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/SpeedTimer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/SpeedTimer.c **** *
 246:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_Stop(void) 
 248:Generated_Source\PSoC5/SpeedTimer.c **** {
 232              		.loc 1 248 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237 0000 80B4     		push	{r7}
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 7, -4
 240 0002 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/SpeedTimer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/SpeedTimer.c ****     #if(!SpeedTimer_UDB_CONTROL_REG_REMOVED || SpeedTimer_UsingFixedFunction)
 251:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_CONTROL &= ((uint8)(~SpeedTimer_CTRL_ENABLE));
 242              		.loc 1 251 0
 243 0004 0D4A     		ldr	r2, .L12
 244 0006 0D4B     		ldr	r3, .L12
 245 0008 1B78     		ldrb	r3, [r3]
 246 000a DBB2     		uxtb	r3, r3
 247 000c 23F00103 		bic	r3, r3, #1
 248 0010 DBB2     		uxtb	r3, r3
 249 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/SpeedTimer.c **** 
 254:Generated_Source\PSoC5/SpeedTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/SpeedTimer.c ****     #if (SpeedTimer_UsingFixedFunction)
 256:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_GLOBAL_ENABLE &= ((uint8)(~SpeedTimer_BLOCK_EN_MASK));
 250              		.loc 1 256 0
 251 0014 0A4A     		ldr	r2, .L12+4
 252 0016 0A4B     		ldr	r3, .L12+4
 253 0018 1B78     		ldrb	r3, [r3]
 254 001a DBB2     		uxtb	r3, r3
 255 001c 23F00403 		bic	r3, r3, #4
 256 0020 DBB2     		uxtb	r3, r3
 257 0022 1370     		strb	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 10


 257:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~SpeedTimer_BLOCK_STBY_EN_MASK));
 258              		.loc 1 257 0
 259 0024 074A     		ldr	r2, .L12+8
 260 0026 074B     		ldr	r3, .L12+8
 261 0028 1B78     		ldrb	r3, [r3]
 262 002a DBB2     		uxtb	r3, r3
 263 002c 23F00403 		bic	r3, r3, #4
 264 0030 DBB2     		uxtb	r3, r3
 265 0032 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/SpeedTimer.c **** }
 266              		.loc 1 259 0
 267 0034 00BF     		nop
 268 0036 BD46     		mov	sp, r7
 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 0038 80BC     		pop	{r7}
 272              		.cfi_restore 7
 273              		.cfi_def_cfa_offset 0
 274 003a 7047     		bx	lr
 275              	.L13:
 276              		.align	2
 277              	.L12:
 278 003c 184F0040 		.word	1073762072
 279 0040 A3430040 		.word	1073759139
 280 0044 B3430040 		.word	1073759155
 281              		.cfi_endproc
 282              	.LFE3:
 283              		.size	SpeedTimer_Stop, .-SpeedTimer_Stop
 284              		.section	.text.SpeedTimer_SetInterruptMode,"ax",%progbits
 285              		.align	2
 286              		.global	SpeedTimer_SetInterruptMode
 287              		.thumb
 288              		.thumb_func
 289              		.type	SpeedTimer_SetInterruptMode, %function
 290              	SpeedTimer_SetInterruptMode:
 291              	.LFB4:
 260:Generated_Source\PSoC5/SpeedTimer.c **** 
 261:Generated_Source\PSoC5/SpeedTimer.c **** 
 262:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_SetInterruptMode
 264:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/SpeedTimer.c **** *
 266:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 267:Generated_Source\PSoC5/SpeedTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/SpeedTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/SpeedTimer.c **** *  be selected.
 270:Generated_Source\PSoC5/SpeedTimer.c **** *
 271:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 272:Generated_Source\PSoC5/SpeedTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/SpeedTimer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/SpeedTimer.c **** *
 275:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 276:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 277:Generated_Source\PSoC5/SpeedTimer.c **** *
 278:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_SetInterruptMode(uint8 interruptMode) 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 11


 280:Generated_Source\PSoC5/SpeedTimer.c **** {
 292              		.loc 1 280 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 80B4     		push	{r7}
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0002 83B0     		sub	sp, sp, #12
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 0346     		mov	r3, r0
 305 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/SpeedTimer.c ****     SpeedTimer_STATUS_MASK = interruptMode;
 306              		.loc 1 281 0
 307 000a 044A     		ldr	r2, .L15
 308 000c FB79     		ldrb	r3, [r7, #7]
 309 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/SpeedTimer.c **** }
 310              		.loc 1 282 0
 311 0010 00BF     		nop
 312 0012 0C37     		adds	r7, r7, #12
 313              		.cfi_def_cfa_offset 4
 314 0014 BD46     		mov	sp, r7
 315              		.cfi_def_cfa_register 13
 316              		@ sp needed
 317 0016 80BC     		pop	{r7}
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 0018 7047     		bx	lr
 321              	.L16:
 322 001a 00BF     		.align	2
 323              	.L15:
 324 001c 1B4F0040 		.word	1073762075
 325              		.cfi_endproc
 326              	.LFE4:
 327              		.size	SpeedTimer_SetInterruptMode, .-SpeedTimer_SetInterruptMode
 328              		.section	.text.SpeedTimer_SoftwareCapture,"ax",%progbits
 329              		.align	2
 330              		.global	SpeedTimer_SoftwareCapture
 331              		.thumb
 332              		.thumb_func
 333              		.type	SpeedTimer_SoftwareCapture, %function
 334              	SpeedTimer_SoftwareCapture:
 335              	.LFB5:
 283:Generated_Source\PSoC5/SpeedTimer.c **** 
 284:Generated_Source\PSoC5/SpeedTimer.c **** 
 285:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_SoftwareCapture
 287:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SpeedTimer.c **** *
 289:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 290:Generated_Source\PSoC5/SpeedTimer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/SpeedTimer.c **** *
 292:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 12


 293:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 294:Generated_Source\PSoC5/SpeedTimer.c **** *
 295:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 296:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 297:Generated_Source\PSoC5/SpeedTimer.c **** *
 298:Generated_Source\PSoC5/SpeedTimer.c **** * Side Effects:
 299:Generated_Source\PSoC5/SpeedTimer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/SpeedTimer.c **** *
 301:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/SpeedTimer.c **** {
 336              		.loc 1 303 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              		.cfi_def_cfa_offset 4
 343              		.cfi_offset 7, -4
 344 0002 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SpeedTimer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 306:Generated_Source\PSoC5/SpeedTimer.c ****         (void)CY_GET_REG16(SpeedTimer_COUNTER_LSB_PTR);
 346              		.loc 1 306 0
 347 0004 024B     		ldr	r3, .L18
 348 0006 1B88     		ldrh	r3, [r3]	@ movhi
 307:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 308:Generated_Source\PSoC5/SpeedTimer.c ****         (void)CY_GET_REG8(SpeedTimer_COUNTER_LSB_PTR_8BIT);
 309:Generated_Source\PSoC5/SpeedTimer.c ****     #endif/* (SpeedTimer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/SpeedTimer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/SpeedTimer.c **** }
 349              		.loc 1 311 0
 350 0008 00BF     		nop
 351 000a BD46     		mov	sp, r7
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 000c 80BC     		pop	{r7}
 355              		.cfi_restore 7
 356              		.cfi_def_cfa_offset 0
 357 000e 7047     		bx	lr
 358              	.L19:
 359              		.align	2
 360              	.L18:
 361 0010 1E4F0040 		.word	1073762078
 362              		.cfi_endproc
 363              	.LFE5:
 364              		.size	SpeedTimer_SoftwareCapture, .-SpeedTimer_SoftwareCapture
 365              		.section	.text.SpeedTimer_ReadStatusRegister,"ax",%progbits
 366              		.align	2
 367              		.global	SpeedTimer_ReadStatusRegister
 368              		.thumb
 369              		.thumb_func
 370              		.type	SpeedTimer_ReadStatusRegister, %function
 371              	SpeedTimer_ReadStatusRegister:
 372              	.LFB6:
 312:Generated_Source\PSoC5/SpeedTimer.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 13


 313:Generated_Source\PSoC5/SpeedTimer.c **** 
 314:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_ReadStatusRegister
 316:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/SpeedTimer.c **** *
 318:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 319:Generated_Source\PSoC5/SpeedTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/SpeedTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/SpeedTimer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/SpeedTimer.c **** *
 323:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 324:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 325:Generated_Source\PSoC5/SpeedTimer.c **** *
 326:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 327:Generated_Source\PSoC5/SpeedTimer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/SpeedTimer.c **** *
 329:Generated_Source\PSoC5/SpeedTimer.c **** * Side Effects:
 330:Generated_Source\PSoC5/SpeedTimer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/SpeedTimer.c **** *
 332:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/SpeedTimer.c **** uint8   SpeedTimer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/SpeedTimer.c **** {
 373              		.loc 1 334 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/SpeedTimer.c ****     return (SpeedTimer_STATUS);
 383              		.loc 1 335 0
 384 0004 034B     		ldr	r3, .L22
 385 0006 1B78     		ldrb	r3, [r3]
 386 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC5/SpeedTimer.c **** }
 387              		.loc 1 336 0
 388 000a 1846     		mov	r0, r3
 389 000c BD46     		mov	sp, r7
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 000e 80BC     		pop	{r7}
 393              		.cfi_restore 7
 394              		.cfi_def_cfa_offset 0
 395 0010 7047     		bx	lr
 396              	.L23:
 397 0012 00BF     		.align	2
 398              	.L22:
 399 0014 1B4F0040 		.word	1073762075
 400              		.cfi_endproc
 401              	.LFE6:
 402              		.size	SpeedTimer_ReadStatusRegister, .-SpeedTimer_ReadStatusRegister
 403              		.section	.text.SpeedTimer_ReadControlRegister,"ax",%progbits
 404              		.align	2
 405              		.global	SpeedTimer_ReadControlRegister
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 14


 406              		.thumb
 407              		.thumb_func
 408              		.type	SpeedTimer_ReadControlRegister, %function
 409              	SpeedTimer_ReadControlRegister:
 410              	.LFB7:
 337:Generated_Source\PSoC5/SpeedTimer.c **** 
 338:Generated_Source\PSoC5/SpeedTimer.c **** 
 339:Generated_Source\PSoC5/SpeedTimer.c **** #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/SpeedTimer.c **** 
 341:Generated_Source\PSoC5/SpeedTimer.c **** 
 342:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_ReadControlRegister
 344:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/SpeedTimer.c **** *
 346:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 347:Generated_Source\PSoC5/SpeedTimer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/SpeedTimer.c **** *
 349:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 350:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 351:Generated_Source\PSoC5/SpeedTimer.c **** *
 352:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 353:Generated_Source\PSoC5/SpeedTimer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/SpeedTimer.c **** *
 355:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/SpeedTimer.c **** uint8 SpeedTimer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/SpeedTimer.c **** {
 411              		.loc 1 357 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              		.cfi_def_cfa_offset 4
 418              		.cfi_offset 7, -4
 419 0002 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC5/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/SpeedTimer.c ****         return ((uint8)SpeedTimer_CONTROL);
 421              		.loc 1 359 0
 422 0004 034B     		ldr	r3, .L26
 423 0006 1B78     		ldrb	r3, [r3]
 424 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 361:Generated_Source\PSoC5/SpeedTimer.c ****         return (0);
 362:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/SpeedTimer.c **** }
 425              		.loc 1 363 0
 426 000a 1846     		mov	r0, r3
 427 000c BD46     		mov	sp, r7
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 000e 80BC     		pop	{r7}
 431              		.cfi_restore 7
 432              		.cfi_def_cfa_offset 0
 433 0010 7047     		bx	lr
 434              	.L27:
 435 0012 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 15


 436              	.L26:
 437 0014 184F0040 		.word	1073762072
 438              		.cfi_endproc
 439              	.LFE7:
 440              		.size	SpeedTimer_ReadControlRegister, .-SpeedTimer_ReadControlRegister
 441              		.section	.text.SpeedTimer_WriteControlRegister,"ax",%progbits
 442              		.align	2
 443              		.global	SpeedTimer_WriteControlRegister
 444              		.thumb
 445              		.thumb_func
 446              		.type	SpeedTimer_WriteControlRegister, %function
 447              	SpeedTimer_WriteControlRegister:
 448              	.LFB8:
 364:Generated_Source\PSoC5/SpeedTimer.c **** 
 365:Generated_Source\PSoC5/SpeedTimer.c **** 
 366:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_WriteControlRegister
 368:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/SpeedTimer.c **** *
 370:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 371:Generated_Source\PSoC5/SpeedTimer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/SpeedTimer.c **** *
 373:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 374:Generated_Source\PSoC5/SpeedTimer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/SpeedTimer.c **** *
 376:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 377:Generated_Source\PSoC5/SpeedTimer.c **** *
 378:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/SpeedTimer.c **** {
 449              		.loc 1 380 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 8
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 80B4     		push	{r7}
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 83B0     		sub	sp, sp, #12
 458              		.cfi_def_cfa_offset 16
 459 0004 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 461 0006 0346     		mov	r3, r0
 462 0008 FB71     		strb	r3, [r7, #7]
 381:Generated_Source\PSoC5/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/SpeedTimer.c ****         SpeedTimer_CONTROL = control;
 463              		.loc 1 382 0
 464 000a 044A     		ldr	r2, .L29
 465 000c FB79     		ldrb	r3, [r7, #7]
 466 000e 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 384:Generated_Source\PSoC5/SpeedTimer.c ****         control = 0u;
 385:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/SpeedTimer.c **** }
 467              		.loc 1 386 0
 468 0010 00BF     		nop
 469 0012 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 16


 470              		.cfi_def_cfa_offset 4
 471 0014 BD46     		mov	sp, r7
 472              		.cfi_def_cfa_register 13
 473              		@ sp needed
 474 0016 80BC     		pop	{r7}
 475              		.cfi_restore 7
 476              		.cfi_def_cfa_offset 0
 477 0018 7047     		bx	lr
 478              	.L30:
 479 001a 00BF     		.align	2
 480              	.L29:
 481 001c 184F0040 		.word	1073762072
 482              		.cfi_endproc
 483              	.LFE8:
 484              		.size	SpeedTimer_WriteControlRegister, .-SpeedTimer_WriteControlRegister
 485              		.section	.text.SpeedTimer_ReadPeriod,"ax",%progbits
 486              		.align	2
 487              		.global	SpeedTimer_ReadPeriod
 488              		.thumb
 489              		.thumb_func
 490              		.type	SpeedTimer_ReadPeriod, %function
 491              	SpeedTimer_ReadPeriod:
 492              	.LFB9:
 387:Generated_Source\PSoC5/SpeedTimer.c **** 
 388:Generated_Source\PSoC5/SpeedTimer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/SpeedTimer.c **** 
 390:Generated_Source\PSoC5/SpeedTimer.c **** 
 391:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_ReadPeriod
 393:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/SpeedTimer.c **** *
 395:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 396:Generated_Source\PSoC5/SpeedTimer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/SpeedTimer.c **** *
 398:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 399:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 400:Generated_Source\PSoC5/SpeedTimer.c **** *
 401:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 402:Generated_Source\PSoC5/SpeedTimer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/SpeedTimer.c **** *
 404:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/SpeedTimer.c **** uint16 SpeedTimer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/SpeedTimer.c **** {
 493              		.loc 1 406 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0000 80B4     		push	{r7}
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 0002 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/SpeedTimer.c ****    #if(SpeedTimer_UsingFixedFunction)
 408:Generated_Source\PSoC5/SpeedTimer.c ****        return ((uint16)CY_GET_REG16(SpeedTimer_PERIOD_LSB_PTR));
 503              		.loc 1 408 0
 504 0004 034B     		ldr	r3, .L33
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 17


 505 0006 1B88     		ldrh	r3, [r3]	@ movhi
 506 0008 9BB2     		uxth	r3, r3
 409:Generated_Source\PSoC5/SpeedTimer.c ****    #else
 410:Generated_Source\PSoC5/SpeedTimer.c ****        return (CY_GET_REG16(SpeedTimer_PERIOD_LSB_PTR));
 411:Generated_Source\PSoC5/SpeedTimer.c ****    #endif /* (SpeedTimer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/SpeedTimer.c **** }
 507              		.loc 1 412 0
 508 000a 1846     		mov	r0, r3
 509 000c BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 000e 80BC     		pop	{r7}
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 0010 7047     		bx	lr
 516              	.L34:
 517 0012 00BF     		.align	2
 518              	.L33:
 519 0014 1C4F0040 		.word	1073762076
 520              		.cfi_endproc
 521              	.LFE9:
 522              		.size	SpeedTimer_ReadPeriod, .-SpeedTimer_ReadPeriod
 523              		.section	.text.SpeedTimer_WritePeriod,"ax",%progbits
 524              		.align	2
 525              		.global	SpeedTimer_WritePeriod
 526              		.thumb
 527              		.thumb_func
 528              		.type	SpeedTimer_WritePeriod, %function
 529              	SpeedTimer_WritePeriod:
 530              	.LFB10:
 413:Generated_Source\PSoC5/SpeedTimer.c **** 
 414:Generated_Source\PSoC5/SpeedTimer.c **** 
 415:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_WritePeriod
 417:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/SpeedTimer.c **** *
 419:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 420:Generated_Source\PSoC5/SpeedTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/SpeedTimer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/SpeedTimer.c **** *
 423:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 424:Generated_Source\PSoC5/SpeedTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/SpeedTimer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/SpeedTimer.c **** *
 427:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 428:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 429:Generated_Source\PSoC5/SpeedTimer.c **** *
 430:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/SpeedTimer.c **** {
 531              		.loc 1 432 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 16
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 18


 538              		.cfi_offset 7, -4
 539 0002 85B0     		sub	sp, sp, #20
 540              		.cfi_def_cfa_offset 24
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 543 0006 0346     		mov	r3, r0
 544 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 433:Generated_Source\PSoC5/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 434:Generated_Source\PSoC5/SpeedTimer.c ****         uint16 period_temp = (uint16)period;
 545              		.loc 1 434 0
 546 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 547 000c FB81     		strh	r3, [r7, #14]	@ movhi
 435:Generated_Source\PSoC5/SpeedTimer.c ****         CY_SET_REG16(SpeedTimer_PERIOD_LSB_PTR, period_temp);
 548              		.loc 1 435 0
 549 000e 044A     		ldr	r2, .L36
 550 0010 FB89     		ldrh	r3, [r7, #14]	@ movhi
 551 0012 1380     		strh	r3, [r2]	@ movhi
 436:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 437:Generated_Source\PSoC5/SpeedTimer.c ****         CY_SET_REG16(SpeedTimer_PERIOD_LSB_PTR, period);
 438:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/SpeedTimer.c **** }
 552              		.loc 1 439 0
 553 0014 00BF     		nop
 554 0016 1437     		adds	r7, r7, #20
 555              		.cfi_def_cfa_offset 4
 556 0018 BD46     		mov	sp, r7
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 001a 80BC     		pop	{r7}
 560              		.cfi_restore 7
 561              		.cfi_def_cfa_offset 0
 562 001c 7047     		bx	lr
 563              	.L37:
 564 001e 00BF     		.align	2
 565              	.L36:
 566 0020 1C4F0040 		.word	1073762076
 567              		.cfi_endproc
 568              	.LFE10:
 569              		.size	SpeedTimer_WritePeriod, .-SpeedTimer_WritePeriod
 570              		.section	.text.SpeedTimer_ReadCapture,"ax",%progbits
 571              		.align	2
 572              		.global	SpeedTimer_ReadCapture
 573              		.thumb
 574              		.thumb_func
 575              		.type	SpeedTimer_ReadCapture, %function
 576              	SpeedTimer_ReadCapture:
 577              	.LFB11:
 440:Generated_Source\PSoC5/SpeedTimer.c **** 
 441:Generated_Source\PSoC5/SpeedTimer.c **** 
 442:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_ReadCapture
 444:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/SpeedTimer.c **** *
 446:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 447:Generated_Source\PSoC5/SpeedTimer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/SpeedTimer.c **** *
 449:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 19


 450:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 451:Generated_Source\PSoC5/SpeedTimer.c **** *
 452:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 453:Generated_Source\PSoC5/SpeedTimer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/SpeedTimer.c **** *
 455:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/SpeedTimer.c **** uint16 SpeedTimer_ReadCapture(void) 
 457:Generated_Source\PSoC5/SpeedTimer.c **** {
 578              		.loc 1 457 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583 0000 80B4     		push	{r7}
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 7, -4
 586 0002 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/SpeedTimer.c ****    #if(SpeedTimer_UsingFixedFunction)
 459:Generated_Source\PSoC5/SpeedTimer.c ****        return ((uint16)CY_GET_REG16(SpeedTimer_CAPTURE_LSB_PTR));
 588              		.loc 1 459 0
 589 0004 034B     		ldr	r3, .L40
 590 0006 1B88     		ldrh	r3, [r3]	@ movhi
 591 0008 9BB2     		uxth	r3, r3
 460:Generated_Source\PSoC5/SpeedTimer.c ****    #else
 461:Generated_Source\PSoC5/SpeedTimer.c ****        return (CY_GET_REG16(SpeedTimer_CAPTURE_LSB_PTR));
 462:Generated_Source\PSoC5/SpeedTimer.c ****    #endif /* (SpeedTimer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/SpeedTimer.c **** }
 592              		.loc 1 463 0
 593 000a 1846     		mov	r0, r3
 594 000c BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 000e 80BC     		pop	{r7}
 598              		.cfi_restore 7
 599              		.cfi_def_cfa_offset 0
 600 0010 7047     		bx	lr
 601              	.L41:
 602 0012 00BF     		.align	2
 603              	.L40:
 604 0014 204F0040 		.word	1073762080
 605              		.cfi_endproc
 606              	.LFE11:
 607              		.size	SpeedTimer_ReadCapture, .-SpeedTimer_ReadCapture
 608              		.section	.text.SpeedTimer_WriteCounter,"ax",%progbits
 609              		.align	2
 610              		.global	SpeedTimer_WriteCounter
 611              		.thumb
 612              		.thumb_func
 613              		.type	SpeedTimer_WriteCounter, %function
 614              	SpeedTimer_WriteCounter:
 615              	.LFB12:
 464:Generated_Source\PSoC5/SpeedTimer.c **** 
 465:Generated_Source\PSoC5/SpeedTimer.c **** 
 466:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_WriteCounter
 468:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 20


 469:Generated_Source\PSoC5/SpeedTimer.c **** *
 470:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 471:Generated_Source\PSoC5/SpeedTimer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/SpeedTimer.c **** *
 473:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 474:Generated_Source\PSoC5/SpeedTimer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/SpeedTimer.c **** *
 476:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 477:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 478:Generated_Source\PSoC5/SpeedTimer.c **** *
 479:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/SpeedTimer.c **** void SpeedTimer_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/SpeedTimer.c **** {
 616              		.loc 1 481 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 7, -4
 624 0002 83B0     		sub	sp, sp, #12
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 0346     		mov	r3, r0
 629 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 482:Generated_Source\PSoC5/SpeedTimer.c ****    #if(SpeedTimer_UsingFixedFunction)
 483:Generated_Source\PSoC5/SpeedTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/SpeedTimer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/SpeedTimer.c ****          */
 486:Generated_Source\PSoC5/SpeedTimer.c ****         CY_SET_REG16(SpeedTimer_COUNTER_LSB_PTR, (uint16)counter);
 630              		.loc 1 486 0
 631 000a 044A     		ldr	r2, .L43
 632 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 633 000e 1380     		strh	r3, [r2]	@ movhi
 487:Generated_Source\PSoC5/SpeedTimer.c ****         
 488:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 489:Generated_Source\PSoC5/SpeedTimer.c ****         CY_SET_REG16(SpeedTimer_COUNTER_LSB_PTR, counter);
 490:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/SpeedTimer.c **** }
 634              		.loc 1 491 0
 635 0010 00BF     		nop
 636 0012 0C37     		adds	r7, r7, #12
 637              		.cfi_def_cfa_offset 4
 638 0014 BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 0016 80BC     		pop	{r7}
 642              		.cfi_restore 7
 643              		.cfi_def_cfa_offset 0
 644 0018 7047     		bx	lr
 645              	.L44:
 646 001a 00BF     		.align	2
 647              	.L43:
 648 001c 1E4F0040 		.word	1073762078
 649              		.cfi_endproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 21


 650              	.LFE12:
 651              		.size	SpeedTimer_WriteCounter, .-SpeedTimer_WriteCounter
 652              		.section	.text.SpeedTimer_ReadCounter,"ax",%progbits
 653              		.align	2
 654              		.global	SpeedTimer_ReadCounter
 655              		.thumb
 656              		.thumb_func
 657              		.type	SpeedTimer_ReadCounter, %function
 658              	SpeedTimer_ReadCounter:
 659              	.LFB13:
 492:Generated_Source\PSoC5/SpeedTimer.c **** 
 493:Generated_Source\PSoC5/SpeedTimer.c **** 
 494:Generated_Source\PSoC5/SpeedTimer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/SpeedTimer.c **** * Function Name: SpeedTimer_ReadCounter
 496:Generated_Source\PSoC5/SpeedTimer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/SpeedTimer.c **** *
 498:Generated_Source\PSoC5/SpeedTimer.c **** * Summary:
 499:Generated_Source\PSoC5/SpeedTimer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/SpeedTimer.c **** *
 501:Generated_Source\PSoC5/SpeedTimer.c **** * Parameters:
 502:Generated_Source\PSoC5/SpeedTimer.c **** *  void
 503:Generated_Source\PSoC5/SpeedTimer.c **** *
 504:Generated_Source\PSoC5/SpeedTimer.c **** * Return:
 505:Generated_Source\PSoC5/SpeedTimer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/SpeedTimer.c **** *
 507:Generated_Source\PSoC5/SpeedTimer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/SpeedTimer.c **** uint16 SpeedTimer_ReadCounter(void) 
 509:Generated_Source\PSoC5/SpeedTimer.c **** {
 660              		.loc 1 509 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 80B4     		push	{r7}
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 7, -4
 668 0002 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/SpeedTimer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/SpeedTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/SpeedTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 514:Generated_Source\PSoC5/SpeedTimer.c ****         (void)CY_GET_REG16(SpeedTimer_COUNTER_LSB_PTR);
 670              		.loc 1 514 0
 671 0004 044B     		ldr	r3, .L47
 672 0006 1B88     		ldrh	r3, [r3]	@ movhi
 515:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 516:Generated_Source\PSoC5/SpeedTimer.c ****         (void)CY_GET_REG8(SpeedTimer_COUNTER_LSB_PTR_8BIT);
 517:Generated_Source\PSoC5/SpeedTimer.c ****     #endif/* (SpeedTimer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/SpeedTimer.c **** 
 519:Generated_Source\PSoC5/SpeedTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 521:Generated_Source\PSoC5/SpeedTimer.c ****         return ((uint16)CY_GET_REG16(SpeedTimer_CAPTURE_LSB_PTR));
 673              		.loc 1 521 0
 674 0008 044B     		ldr	r3, .L47+4
 675 000a 1B88     		ldrh	r3, [r3]	@ movhi
 676 000c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 22


 522:Generated_Source\PSoC5/SpeedTimer.c ****     #else
 523:Generated_Source\PSoC5/SpeedTimer.c ****         return (CY_GET_REG16(SpeedTimer_CAPTURE_LSB_PTR));
 524:Generated_Source\PSoC5/SpeedTimer.c ****     #endif /* (SpeedTimer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/SpeedTimer.c **** }
 677              		.loc 1 525 0
 678 000e 1846     		mov	r0, r3
 679 0010 BD46     		mov	sp, r7
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 0012 80BC     		pop	{r7}
 683              		.cfi_restore 7
 684              		.cfi_def_cfa_offset 0
 685 0014 7047     		bx	lr
 686              	.L48:
 687 0016 00BF     		.align	2
 688              	.L47:
 689 0018 1E4F0040 		.word	1073762078
 690 001c 204F0040 		.word	1073762080
 691              		.cfi_endproc
 692              	.LFE13:
 693              		.size	SpeedTimer_ReadCounter, .-SpeedTimer_ReadCounter
 694              		.text
 695              	.Letext0:
 696              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 697              		.section	.debug_info,"",%progbits
 698              	.Ldebug_info0:
 699 0000 3A020000 		.4byte	0x23a
 700 0004 0400     		.2byte	0x4
 701 0006 00000000 		.4byte	.Ldebug_abbrev0
 702 000a 04       		.byte	0x4
 703 000b 01       		.uleb128 0x1
 704 000c 25000000 		.4byte	.LASF35
 705 0010 0C       		.byte	0xc
 706 0011 A5020000 		.4byte	.LASF36
 707 0015 E1010000 		.4byte	.LASF37
 708 0019 00000000 		.4byte	.Ldebug_ranges0+0
 709 001d 00000000 		.4byte	0
 710 0021 00000000 		.4byte	.Ldebug_line0
 711 0025 02       		.uleb128 0x2
 712 0026 01       		.byte	0x1
 713 0027 06       		.byte	0x6
 714 0028 45030000 		.4byte	.LASF0
 715 002c 02       		.uleb128 0x2
 716 002d 01       		.byte	0x1
 717 002e 08       		.byte	0x8
 718 002f 5F010000 		.4byte	.LASF1
 719 0033 02       		.uleb128 0x2
 720 0034 02       		.byte	0x2
 721 0035 05       		.byte	0x5
 722 0036 FE020000 		.4byte	.LASF2
 723 003a 02       		.uleb128 0x2
 724 003b 02       		.byte	0x2
 725 003c 07       		.byte	0x7
 726 003d FC000000 		.4byte	.LASF3
 727 0041 02       		.uleb128 0x2
 728 0042 04       		.byte	0x4
 729 0043 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 23


 730 0044 1F030000 		.4byte	.LASF4
 731 0048 02       		.uleb128 0x2
 732 0049 04       		.byte	0x4
 733 004a 07       		.byte	0x7
 734 004b 89010000 		.4byte	.LASF5
 735 004f 02       		.uleb128 0x2
 736 0050 08       		.byte	0x8
 737 0051 05       		.byte	0x5
 738 0052 97020000 		.4byte	.LASF6
 739 0056 02       		.uleb128 0x2
 740 0057 08       		.byte	0x8
 741 0058 07       		.byte	0x7
 742 0059 6B020000 		.4byte	.LASF7
 743 005d 03       		.uleb128 0x3
 744 005e 04       		.byte	0x4
 745 005f 05       		.byte	0x5
 746 0060 696E7400 		.ascii	"int\000"
 747 0064 02       		.uleb128 0x2
 748 0065 04       		.byte	0x4
 749 0066 07       		.byte	0x7
 750 0067 5E020000 		.4byte	.LASF8
 751 006b 04       		.uleb128 0x4
 752 006c 9B010000 		.4byte	.LASF9
 753 0070 02       		.byte	0x2
 754 0071 E701     		.2byte	0x1e7
 755 0073 2C000000 		.4byte	0x2c
 756 0077 04       		.uleb128 0x4
 757 0078 45020000 		.4byte	.LASF10
 758 007c 02       		.byte	0x2
 759 007d E801     		.2byte	0x1e8
 760 007f 3A000000 		.4byte	0x3a
 761 0083 02       		.uleb128 0x2
 762 0084 04       		.byte	0x4
 763 0085 04       		.byte	0x4
 764 0086 3B010000 		.4byte	.LASF11
 765 008a 02       		.uleb128 0x2
 766 008b 08       		.byte	0x8
 767 008c 04       		.byte	0x4
 768 008d DA010000 		.4byte	.LASF12
 769 0091 02       		.uleb128 0x2
 770 0092 01       		.byte	0x1
 771 0093 08       		.byte	0x8
 772 0094 28030000 		.4byte	.LASF13
 773 0098 04       		.uleb128 0x4
 774 0099 6D010000 		.4byte	.LASF14
 775 009d 02       		.byte	0x2
 776 009e 9102     		.2byte	0x291
 777 00a0 A4000000 		.4byte	0xa4
 778 00a4 05       		.uleb128 0x5
 779 00a5 6B000000 		.4byte	0x6b
 780 00a9 04       		.uleb128 0x4
 781 00aa 00000000 		.4byte	.LASF15
 782 00ae 02       		.byte	0x2
 783 00af 9202     		.2byte	0x292
 784 00b1 B5000000 		.4byte	0xb5
 785 00b5 05       		.uleb128 0x5
 786 00b6 77000000 		.4byte	0x77
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 24


 787 00ba 02       		.uleb128 0x2
 788 00bb 04       		.byte	0x4
 789 00bc 07       		.byte	0x7
 790 00bd 8E020000 		.4byte	.LASF16
 791 00c1 06       		.uleb128 0x6
 792 00c2 EE020000 		.4byte	.LASF17
 793 00c6 01       		.byte	0x1
 794 00c7 2B       		.byte	0x2b
 795 00c8 00000000 		.4byte	.LFB0
 796 00cc 9C000000 		.4byte	.LFE0-.LFB0
 797 00d0 01       		.uleb128 0x1
 798 00d1 9C       		.byte	0x9c
 799 00d2 07       		.uleb128 0x7
 800 00d3 4C020000 		.4byte	.LASF18
 801 00d7 01       		.byte	0x1
 802 00d8 B4       		.byte	0xb4
 803 00d9 00000000 		.4byte	.LFB1
 804 00dd 48000000 		.4byte	.LFE1-.LFB1
 805 00e1 01       		.uleb128 0x1
 806 00e2 9C       		.byte	0x9c
 807 00e3 06       		.uleb128 0x6
 808 00e4 A9010000 		.4byte	.LASF19
 809 00e8 01       		.byte	0x1
 810 00e9 D7       		.byte	0xd7
 811 00ea 00000000 		.4byte	.LFB2
 812 00ee 24000000 		.4byte	.LFE2-.LFB2
 813 00f2 01       		.uleb128 0x1
 814 00f3 9C       		.byte	0x9c
 815 00f4 07       		.uleb128 0x7
 816 00f5 0F010000 		.4byte	.LASF20
 817 00f9 01       		.byte	0x1
 818 00fa F7       		.byte	0xf7
 819 00fb 00000000 		.4byte	.LFB3
 820 00ff 48000000 		.4byte	.LFE3-.LFB3
 821 0103 01       		.uleb128 0x1
 822 0104 9C       		.byte	0x9c
 823 0105 08       		.uleb128 0x8
 824 0106 1F010000 		.4byte	.LASF24
 825 010a 01       		.byte	0x1
 826 010b 1701     		.2byte	0x117
 827 010d 00000000 		.4byte	.LFB4
 828 0111 20000000 		.4byte	.LFE4-.LFB4
 829 0115 01       		.uleb128 0x1
 830 0116 9C       		.byte	0x9c
 831 0117 2B010000 		.4byte	0x12b
 832 011b 09       		.uleb128 0x9
 833 011c C9020000 		.4byte	.LASF26
 834 0120 01       		.byte	0x1
 835 0121 1701     		.2byte	0x117
 836 0123 6B000000 		.4byte	0x6b
 837 0127 02       		.uleb128 0x2
 838 0128 91       		.byte	0x91
 839 0129 77       		.sleb128 -9
 840 012a 00       		.byte	0
 841 012b 0A       		.uleb128 0xa
 842 012c E1000000 		.4byte	.LASF21
 843 0130 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 25


 844 0131 2E01     		.2byte	0x12e
 845 0133 00000000 		.4byte	.LFB5
 846 0137 14000000 		.4byte	.LFE5-.LFB5
 847 013b 01       		.uleb128 0x1
 848 013c 9C       		.byte	0x9c
 849 013d 0B       		.uleb128 0xb
 850 013e C3000000 		.4byte	.LASF22
 851 0142 01       		.byte	0x1
 852 0143 4D01     		.2byte	0x14d
 853 0145 6B000000 		.4byte	0x6b
 854 0149 00000000 		.4byte	.LFB6
 855 014d 18000000 		.4byte	.LFE6-.LFB6
 856 0151 01       		.uleb128 0x1
 857 0152 9C       		.byte	0x9c
 858 0153 0B       		.uleb128 0xb
 859 0154 06000000 		.4byte	.LASF23
 860 0158 01       		.byte	0x1
 861 0159 6401     		.2byte	0x164
 862 015b 6B000000 		.4byte	0x6b
 863 015f 00000000 		.4byte	.LFB7
 864 0163 18000000 		.4byte	.LFE7-.LFB7
 865 0167 01       		.uleb128 0x1
 866 0168 9C       		.byte	0x9c
 867 0169 08       		.uleb128 0x8
 868 016a BA010000 		.4byte	.LASF25
 869 016e 01       		.byte	0x1
 870 016f 7B01     		.2byte	0x17b
 871 0171 00000000 		.4byte	.LFB8
 872 0175 20000000 		.4byte	.LFE8-.LFB8
 873 0179 01       		.uleb128 0x1
 874 017a 9C       		.byte	0x9c
 875 017b 8F010000 		.4byte	0x18f
 876 017f 09       		.uleb128 0x9
 877 0180 A1010000 		.4byte	.LASF27
 878 0184 01       		.byte	0x1
 879 0185 7B01     		.2byte	0x17b
 880 0187 6B000000 		.4byte	0x6b
 881 018b 02       		.uleb128 0x2
 882 018c 91       		.byte	0x91
 883 018d 77       		.sleb128 -9
 884 018e 00       		.byte	0
 885 018f 0B       		.uleb128 0xb
 886 0190 49010000 		.4byte	.LASF28
 887 0194 01       		.byte	0x1
 888 0195 9501     		.2byte	0x195
 889 0197 77000000 		.4byte	0x77
 890 019b 00000000 		.4byte	.LFB9
 891 019f 18000000 		.4byte	.LFE9-.LFB9
 892 01a3 01       		.uleb128 0x1
 893 01a4 9C       		.byte	0x9c
 894 01a5 08       		.uleb128 0x8
 895 01a6 72010000 		.4byte	.LASF29
 896 01aa 01       		.byte	0x1
 897 01ab AF01     		.2byte	0x1af
 898 01ad 00000000 		.4byte	.LFB10
 899 01b1 24000000 		.4byte	.LFE10-.LFB10
 900 01b5 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 26


 901 01b6 9C       		.byte	0x9c
 902 01b7 DA010000 		.4byte	0x1da
 903 01bb 09       		.uleb128 0x9
 904 01bc BC000000 		.4byte	.LASF30
 905 01c0 01       		.byte	0x1
 906 01c1 AF01     		.2byte	0x1af
 907 01c3 77000000 		.4byte	0x77
 908 01c7 02       		.uleb128 0x2
 909 01c8 91       		.byte	0x91
 910 01c9 6E       		.sleb128 -18
 911 01ca 0C       		.uleb128 0xc
 912 01cb 82020000 		.4byte	.LASF38
 913 01cf 01       		.byte	0x1
 914 01d0 B201     		.2byte	0x1b2
 915 01d2 77000000 		.4byte	0x77
 916 01d6 02       		.uleb128 0x2
 917 01d7 91       		.byte	0x91
 918 01d8 76       		.sleb128 -10
 919 01d9 00       		.byte	0
 920 01da 0B       		.uleb128 0xb
 921 01db 08030000 		.4byte	.LASF31
 922 01df 01       		.byte	0x1
 923 01e0 C801     		.2byte	0x1c8
 924 01e2 77000000 		.4byte	0x77
 925 01e6 00000000 		.4byte	.LFB11
 926 01ea 18000000 		.4byte	.LFE11-.LFB11
 927 01ee 01       		.uleb128 0x1
 928 01ef 9C       		.byte	0x9c
 929 01f0 08       		.uleb128 0x8
 930 01f1 2D030000 		.4byte	.LASF32
 931 01f5 01       		.byte	0x1
 932 01f6 E001     		.2byte	0x1e0
 933 01f8 00000000 		.4byte	.LFB12
 934 01fc 20000000 		.4byte	.LFE12-.LFB12
 935 0200 01       		.uleb128 0x1
 936 0201 9C       		.byte	0x9c
 937 0202 16020000 		.4byte	0x216
 938 0206 09       		.uleb128 0x9
 939 0207 41010000 		.4byte	.LASF33
 940 020b 01       		.byte	0x1
 941 020c E001     		.2byte	0x1e0
 942 020e 77000000 		.4byte	0x77
 943 0212 02       		.uleb128 0x2
 944 0213 91       		.byte	0x91
 945 0214 76       		.sleb128 -10
 946 0215 00       		.byte	0
 947 0216 0B       		.uleb128 0xb
 948 0217 D7020000 		.4byte	.LASF34
 949 021b 01       		.byte	0x1
 950 021c FC01     		.2byte	0x1fc
 951 021e 77000000 		.4byte	0x77
 952 0222 00000000 		.4byte	.LFB13
 953 0226 20000000 		.4byte	.LFE13-.LFB13
 954 022a 01       		.uleb128 0x1
 955 022b 9C       		.byte	0x9c
 956 022c 0D       		.uleb128 0xd
 957 022d 32020000 		.4byte	.LASF39
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 27


 958 0231 01       		.byte	0x1
 959 0232 1A       		.byte	0x1a
 960 0233 6B000000 		.4byte	0x6b
 961 0237 05       		.uleb128 0x5
 962 0238 03       		.byte	0x3
 963 0239 00000000 		.4byte	SpeedTimer_initVar
 964 023d 00       		.byte	0
 965              		.section	.debug_abbrev,"",%progbits
 966              	.Ldebug_abbrev0:
 967 0000 01       		.uleb128 0x1
 968 0001 11       		.uleb128 0x11
 969 0002 01       		.byte	0x1
 970 0003 25       		.uleb128 0x25
 971 0004 0E       		.uleb128 0xe
 972 0005 13       		.uleb128 0x13
 973 0006 0B       		.uleb128 0xb
 974 0007 03       		.uleb128 0x3
 975 0008 0E       		.uleb128 0xe
 976 0009 1B       		.uleb128 0x1b
 977 000a 0E       		.uleb128 0xe
 978 000b 55       		.uleb128 0x55
 979 000c 17       		.uleb128 0x17
 980 000d 11       		.uleb128 0x11
 981 000e 01       		.uleb128 0x1
 982 000f 10       		.uleb128 0x10
 983 0010 17       		.uleb128 0x17
 984 0011 00       		.byte	0
 985 0012 00       		.byte	0
 986 0013 02       		.uleb128 0x2
 987 0014 24       		.uleb128 0x24
 988 0015 00       		.byte	0
 989 0016 0B       		.uleb128 0xb
 990 0017 0B       		.uleb128 0xb
 991 0018 3E       		.uleb128 0x3e
 992 0019 0B       		.uleb128 0xb
 993 001a 03       		.uleb128 0x3
 994 001b 0E       		.uleb128 0xe
 995 001c 00       		.byte	0
 996 001d 00       		.byte	0
 997 001e 03       		.uleb128 0x3
 998 001f 24       		.uleb128 0x24
 999 0020 00       		.byte	0
 1000 0021 0B       		.uleb128 0xb
 1001 0022 0B       		.uleb128 0xb
 1002 0023 3E       		.uleb128 0x3e
 1003 0024 0B       		.uleb128 0xb
 1004 0025 03       		.uleb128 0x3
 1005 0026 08       		.uleb128 0x8
 1006 0027 00       		.byte	0
 1007 0028 00       		.byte	0
 1008 0029 04       		.uleb128 0x4
 1009 002a 16       		.uleb128 0x16
 1010 002b 00       		.byte	0
 1011 002c 03       		.uleb128 0x3
 1012 002d 0E       		.uleb128 0xe
 1013 002e 3A       		.uleb128 0x3a
 1014 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 28


 1015 0030 3B       		.uleb128 0x3b
 1016 0031 05       		.uleb128 0x5
 1017 0032 49       		.uleb128 0x49
 1018 0033 13       		.uleb128 0x13
 1019 0034 00       		.byte	0
 1020 0035 00       		.byte	0
 1021 0036 05       		.uleb128 0x5
 1022 0037 35       		.uleb128 0x35
 1023 0038 00       		.byte	0
 1024 0039 49       		.uleb128 0x49
 1025 003a 13       		.uleb128 0x13
 1026 003b 00       		.byte	0
 1027 003c 00       		.byte	0
 1028 003d 06       		.uleb128 0x6
 1029 003e 2E       		.uleb128 0x2e
 1030 003f 00       		.byte	0
 1031 0040 3F       		.uleb128 0x3f
 1032 0041 19       		.uleb128 0x19
 1033 0042 03       		.uleb128 0x3
 1034 0043 0E       		.uleb128 0xe
 1035 0044 3A       		.uleb128 0x3a
 1036 0045 0B       		.uleb128 0xb
 1037 0046 3B       		.uleb128 0x3b
 1038 0047 0B       		.uleb128 0xb
 1039 0048 27       		.uleb128 0x27
 1040 0049 19       		.uleb128 0x19
 1041 004a 11       		.uleb128 0x11
 1042 004b 01       		.uleb128 0x1
 1043 004c 12       		.uleb128 0x12
 1044 004d 06       		.uleb128 0x6
 1045 004e 40       		.uleb128 0x40
 1046 004f 18       		.uleb128 0x18
 1047 0050 9642     		.uleb128 0x2116
 1048 0052 19       		.uleb128 0x19
 1049 0053 00       		.byte	0
 1050 0054 00       		.byte	0
 1051 0055 07       		.uleb128 0x7
 1052 0056 2E       		.uleb128 0x2e
 1053 0057 00       		.byte	0
 1054 0058 3F       		.uleb128 0x3f
 1055 0059 19       		.uleb128 0x19
 1056 005a 03       		.uleb128 0x3
 1057 005b 0E       		.uleb128 0xe
 1058 005c 3A       		.uleb128 0x3a
 1059 005d 0B       		.uleb128 0xb
 1060 005e 3B       		.uleb128 0x3b
 1061 005f 0B       		.uleb128 0xb
 1062 0060 27       		.uleb128 0x27
 1063 0061 19       		.uleb128 0x19
 1064 0062 11       		.uleb128 0x11
 1065 0063 01       		.uleb128 0x1
 1066 0064 12       		.uleb128 0x12
 1067 0065 06       		.uleb128 0x6
 1068 0066 40       		.uleb128 0x40
 1069 0067 18       		.uleb128 0x18
 1070 0068 9742     		.uleb128 0x2117
 1071 006a 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 29


 1072 006b 00       		.byte	0
 1073 006c 00       		.byte	0
 1074 006d 08       		.uleb128 0x8
 1075 006e 2E       		.uleb128 0x2e
 1076 006f 01       		.byte	0x1
 1077 0070 3F       		.uleb128 0x3f
 1078 0071 19       		.uleb128 0x19
 1079 0072 03       		.uleb128 0x3
 1080 0073 0E       		.uleb128 0xe
 1081 0074 3A       		.uleb128 0x3a
 1082 0075 0B       		.uleb128 0xb
 1083 0076 3B       		.uleb128 0x3b
 1084 0077 05       		.uleb128 0x5
 1085 0078 27       		.uleb128 0x27
 1086 0079 19       		.uleb128 0x19
 1087 007a 11       		.uleb128 0x11
 1088 007b 01       		.uleb128 0x1
 1089 007c 12       		.uleb128 0x12
 1090 007d 06       		.uleb128 0x6
 1091 007e 40       		.uleb128 0x40
 1092 007f 18       		.uleb128 0x18
 1093 0080 9742     		.uleb128 0x2117
 1094 0082 19       		.uleb128 0x19
 1095 0083 01       		.uleb128 0x1
 1096 0084 13       		.uleb128 0x13
 1097 0085 00       		.byte	0
 1098 0086 00       		.byte	0
 1099 0087 09       		.uleb128 0x9
 1100 0088 05       		.uleb128 0x5
 1101 0089 00       		.byte	0
 1102 008a 03       		.uleb128 0x3
 1103 008b 0E       		.uleb128 0xe
 1104 008c 3A       		.uleb128 0x3a
 1105 008d 0B       		.uleb128 0xb
 1106 008e 3B       		.uleb128 0x3b
 1107 008f 05       		.uleb128 0x5
 1108 0090 49       		.uleb128 0x49
 1109 0091 13       		.uleb128 0x13
 1110 0092 02       		.uleb128 0x2
 1111 0093 18       		.uleb128 0x18
 1112 0094 00       		.byte	0
 1113 0095 00       		.byte	0
 1114 0096 0A       		.uleb128 0xa
 1115 0097 2E       		.uleb128 0x2e
 1116 0098 00       		.byte	0
 1117 0099 3F       		.uleb128 0x3f
 1118 009a 19       		.uleb128 0x19
 1119 009b 03       		.uleb128 0x3
 1120 009c 0E       		.uleb128 0xe
 1121 009d 3A       		.uleb128 0x3a
 1122 009e 0B       		.uleb128 0xb
 1123 009f 3B       		.uleb128 0x3b
 1124 00a0 05       		.uleb128 0x5
 1125 00a1 27       		.uleb128 0x27
 1126 00a2 19       		.uleb128 0x19
 1127 00a3 11       		.uleb128 0x11
 1128 00a4 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 30


 1129 00a5 12       		.uleb128 0x12
 1130 00a6 06       		.uleb128 0x6
 1131 00a7 40       		.uleb128 0x40
 1132 00a8 18       		.uleb128 0x18
 1133 00a9 9742     		.uleb128 0x2117
 1134 00ab 19       		.uleb128 0x19
 1135 00ac 00       		.byte	0
 1136 00ad 00       		.byte	0
 1137 00ae 0B       		.uleb128 0xb
 1138 00af 2E       		.uleb128 0x2e
 1139 00b0 00       		.byte	0
 1140 00b1 3F       		.uleb128 0x3f
 1141 00b2 19       		.uleb128 0x19
 1142 00b3 03       		.uleb128 0x3
 1143 00b4 0E       		.uleb128 0xe
 1144 00b5 3A       		.uleb128 0x3a
 1145 00b6 0B       		.uleb128 0xb
 1146 00b7 3B       		.uleb128 0x3b
 1147 00b8 05       		.uleb128 0x5
 1148 00b9 27       		.uleb128 0x27
 1149 00ba 19       		.uleb128 0x19
 1150 00bb 49       		.uleb128 0x49
 1151 00bc 13       		.uleb128 0x13
 1152 00bd 11       		.uleb128 0x11
 1153 00be 01       		.uleb128 0x1
 1154 00bf 12       		.uleb128 0x12
 1155 00c0 06       		.uleb128 0x6
 1156 00c1 40       		.uleb128 0x40
 1157 00c2 18       		.uleb128 0x18
 1158 00c3 9742     		.uleb128 0x2117
 1159 00c5 19       		.uleb128 0x19
 1160 00c6 00       		.byte	0
 1161 00c7 00       		.byte	0
 1162 00c8 0C       		.uleb128 0xc
 1163 00c9 34       		.uleb128 0x34
 1164 00ca 00       		.byte	0
 1165 00cb 03       		.uleb128 0x3
 1166 00cc 0E       		.uleb128 0xe
 1167 00cd 3A       		.uleb128 0x3a
 1168 00ce 0B       		.uleb128 0xb
 1169 00cf 3B       		.uleb128 0x3b
 1170 00d0 05       		.uleb128 0x5
 1171 00d1 49       		.uleb128 0x49
 1172 00d2 13       		.uleb128 0x13
 1173 00d3 02       		.uleb128 0x2
 1174 00d4 18       		.uleb128 0x18
 1175 00d5 00       		.byte	0
 1176 00d6 00       		.byte	0
 1177 00d7 0D       		.uleb128 0xd
 1178 00d8 34       		.uleb128 0x34
 1179 00d9 00       		.byte	0
 1180 00da 03       		.uleb128 0x3
 1181 00db 0E       		.uleb128 0xe
 1182 00dc 3A       		.uleb128 0x3a
 1183 00dd 0B       		.uleb128 0xb
 1184 00de 3B       		.uleb128 0x3b
 1185 00df 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 31


 1186 00e0 49       		.uleb128 0x49
 1187 00e1 13       		.uleb128 0x13
 1188 00e2 3F       		.uleb128 0x3f
 1189 00e3 19       		.uleb128 0x19
 1190 00e4 02       		.uleb128 0x2
 1191 00e5 18       		.uleb128 0x18
 1192 00e6 00       		.byte	0
 1193 00e7 00       		.byte	0
 1194 00e8 00       		.byte	0
 1195              		.section	.debug_aranges,"",%progbits
 1196 0000 84000000 		.4byte	0x84
 1197 0004 0200     		.2byte	0x2
 1198 0006 00000000 		.4byte	.Ldebug_info0
 1199 000a 04       		.byte	0x4
 1200 000b 00       		.byte	0
 1201 000c 0000     		.2byte	0
 1202 000e 0000     		.2byte	0
 1203 0010 00000000 		.4byte	.LFB0
 1204 0014 9C000000 		.4byte	.LFE0-.LFB0
 1205 0018 00000000 		.4byte	.LFB1
 1206 001c 48000000 		.4byte	.LFE1-.LFB1
 1207 0020 00000000 		.4byte	.LFB2
 1208 0024 24000000 		.4byte	.LFE2-.LFB2
 1209 0028 00000000 		.4byte	.LFB3
 1210 002c 48000000 		.4byte	.LFE3-.LFB3
 1211 0030 00000000 		.4byte	.LFB4
 1212 0034 20000000 		.4byte	.LFE4-.LFB4
 1213 0038 00000000 		.4byte	.LFB5
 1214 003c 14000000 		.4byte	.LFE5-.LFB5
 1215 0040 00000000 		.4byte	.LFB6
 1216 0044 18000000 		.4byte	.LFE6-.LFB6
 1217 0048 00000000 		.4byte	.LFB7
 1218 004c 18000000 		.4byte	.LFE7-.LFB7
 1219 0050 00000000 		.4byte	.LFB8
 1220 0054 20000000 		.4byte	.LFE8-.LFB8
 1221 0058 00000000 		.4byte	.LFB9
 1222 005c 18000000 		.4byte	.LFE9-.LFB9
 1223 0060 00000000 		.4byte	.LFB10
 1224 0064 24000000 		.4byte	.LFE10-.LFB10
 1225 0068 00000000 		.4byte	.LFB11
 1226 006c 18000000 		.4byte	.LFE11-.LFB11
 1227 0070 00000000 		.4byte	.LFB12
 1228 0074 20000000 		.4byte	.LFE12-.LFB12
 1229 0078 00000000 		.4byte	.LFB13
 1230 007c 20000000 		.4byte	.LFE13-.LFB13
 1231 0080 00000000 		.4byte	0
 1232 0084 00000000 		.4byte	0
 1233              		.section	.debug_ranges,"",%progbits
 1234              	.Ldebug_ranges0:
 1235 0000 00000000 		.4byte	.LFB0
 1236 0004 9C000000 		.4byte	.LFE0
 1237 0008 00000000 		.4byte	.LFB1
 1238 000c 48000000 		.4byte	.LFE1
 1239 0010 00000000 		.4byte	.LFB2
 1240 0014 24000000 		.4byte	.LFE2
 1241 0018 00000000 		.4byte	.LFB3
 1242 001c 48000000 		.4byte	.LFE3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 32


 1243 0020 00000000 		.4byte	.LFB4
 1244 0024 20000000 		.4byte	.LFE4
 1245 0028 00000000 		.4byte	.LFB5
 1246 002c 14000000 		.4byte	.LFE5
 1247 0030 00000000 		.4byte	.LFB6
 1248 0034 18000000 		.4byte	.LFE6
 1249 0038 00000000 		.4byte	.LFB7
 1250 003c 18000000 		.4byte	.LFE7
 1251 0040 00000000 		.4byte	.LFB8
 1252 0044 20000000 		.4byte	.LFE8
 1253 0048 00000000 		.4byte	.LFB9
 1254 004c 18000000 		.4byte	.LFE9
 1255 0050 00000000 		.4byte	.LFB10
 1256 0054 24000000 		.4byte	.LFE10
 1257 0058 00000000 		.4byte	.LFB11
 1258 005c 18000000 		.4byte	.LFE11
 1259 0060 00000000 		.4byte	.LFB12
 1260 0064 20000000 		.4byte	.LFE12
 1261 0068 00000000 		.4byte	.LFB13
 1262 006c 20000000 		.4byte	.LFE13
 1263 0070 00000000 		.4byte	0
 1264 0074 00000000 		.4byte	0
 1265              		.section	.debug_line,"",%progbits
 1266              	.Ldebug_line0:
 1267 0000 5E010000 		.section	.debug_str,"MS",%progbits,1
 1267      02004700 
 1267      00000201 
 1267      FB0E0D00 
 1267      01010101 
 1268              	.LASF15:
 1269 0000 72656731 		.ascii	"reg16\000"
 1269      3600
 1270              	.LASF23:
 1271 0006 53706565 		.ascii	"SpeedTimer_ReadControlRegister\000"
 1271      6454696D 
 1271      65725F52 
 1271      65616443 
 1271      6F6E7472 
 1272              	.LASF35:
 1273 0025 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1273      43393920 
 1273      352E342E 
 1273      31203230 
 1273      31363036 
 1274 0058 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1274      20726576 
 1274      6973696F 
 1274      6E203233 
 1274      37373135 
 1275 008b 30202D73 		.ascii	"0 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 1275      74643D63 
 1275      3939202D 
 1275      6666756E 
 1275      6374696F 
 1276              	.LASF30:
 1277 00bc 70657269 		.ascii	"period\000"
 1277      6F6400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 33


 1278              	.LASF22:
 1279 00c3 53706565 		.ascii	"SpeedTimer_ReadStatusRegister\000"
 1279      6454696D 
 1279      65725F52 
 1279      65616453 
 1279      74617475 
 1280              	.LASF21:
 1281 00e1 53706565 		.ascii	"SpeedTimer_SoftwareCapture\000"
 1281      6454696D 
 1281      65725F53 
 1281      6F667477 
 1281      61726543 
 1282              	.LASF3:
 1283 00fc 73686F72 		.ascii	"short unsigned int\000"
 1283      7420756E 
 1283      7369676E 
 1283      65642069 
 1283      6E7400
 1284              	.LASF20:
 1285 010f 53706565 		.ascii	"SpeedTimer_Stop\000"
 1285      6454696D 
 1285      65725F53 
 1285      746F7000 
 1286              	.LASF24:
 1287 011f 53706565 		.ascii	"SpeedTimer_SetInterruptMode\000"
 1287      6454696D 
 1287      65725F53 
 1287      6574496E 
 1287      74657272 
 1288              	.LASF11:
 1289 013b 666C6F61 		.ascii	"float\000"
 1289      7400
 1290              	.LASF33:
 1291 0141 636F756E 		.ascii	"counter\000"
 1291      74657200 
 1292              	.LASF28:
 1293 0149 53706565 		.ascii	"SpeedTimer_ReadPeriod\000"
 1293      6454696D 
 1293      65725F52 
 1293      65616450 
 1293      6572696F 
 1294              	.LASF1:
 1295 015f 756E7369 		.ascii	"unsigned char\000"
 1295      676E6564 
 1295      20636861 
 1295      7200
 1296              	.LASF14:
 1297 016d 72656738 		.ascii	"reg8\000"
 1297      00
 1298              	.LASF29:
 1299 0172 53706565 		.ascii	"SpeedTimer_WritePeriod\000"
 1299      6454696D 
 1299      65725F57 
 1299      72697465 
 1299      50657269 
 1300              	.LASF5:
 1301 0189 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 34


 1301      20756E73 
 1301      69676E65 
 1301      6420696E 
 1301      7400
 1302              	.LASF9:
 1303 019b 75696E74 		.ascii	"uint8\000"
 1303      3800
 1304              	.LASF27:
 1305 01a1 636F6E74 		.ascii	"control\000"
 1305      726F6C00 
 1306              	.LASF19:
 1307 01a9 53706565 		.ascii	"SpeedTimer_Start\000"
 1307      6454696D 
 1307      65725F53 
 1307      74617274 
 1307      00
 1308              	.LASF25:
 1309 01ba 53706565 		.ascii	"SpeedTimer_WriteControlRegister\000"
 1309      6454696D 
 1309      65725F57 
 1309      72697465 
 1309      436F6E74 
 1310              	.LASF12:
 1311 01da 646F7562 		.ascii	"double\000"
 1311      6C6500
 1312              	.LASF37:
 1313 01e1 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 1313      6F63756D 
 1313      656E7473 
 1313      5C476974 
 1313      4875625C 
 1314 0210 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 1314      635F636F 
 1314      64655F62 
 1314      6173655C 
 1314      43533330 
 1315              	.LASF39:
 1316 0232 53706565 		.ascii	"SpeedTimer_initVar\000"
 1316      6454696D 
 1316      65725F69 
 1316      6E697456 
 1316      617200
 1317              	.LASF10:
 1318 0245 75696E74 		.ascii	"uint16\000"
 1318      313600
 1319              	.LASF18:
 1320 024c 53706565 		.ascii	"SpeedTimer_Enable\000"
 1320      6454696D 
 1320      65725F45 
 1320      6E61626C 
 1320      6500
 1321              	.LASF8:
 1322 025e 756E7369 		.ascii	"unsigned int\000"
 1322      676E6564 
 1322      20696E74 
 1322      00
 1323              	.LASF7:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 35


 1324 026b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1324      206C6F6E 
 1324      6720756E 
 1324      7369676E 
 1324      65642069 
 1325              	.LASF38:
 1326 0282 70657269 		.ascii	"period_temp\000"
 1326      6F645F74 
 1326      656D7000 
 1327              	.LASF16:
 1328 028e 73697A65 		.ascii	"sizetype\000"
 1328      74797065 
 1328      00
 1329              	.LASF6:
 1330 0297 6C6F6E67 		.ascii	"long long int\000"
 1330      206C6F6E 
 1330      6720696E 
 1330      7400
 1331              	.LASF36:
 1332 02a5 47656E65 		.ascii	"Generated_Source\\PSoC5\\SpeedTimer.c\000"
 1332      72617465 
 1332      645F536F 
 1332      75726365 
 1332      5C50536F 
 1333              	.LASF26:
 1334 02c9 696E7465 		.ascii	"interruptMode\000"
 1334      72727570 
 1334      744D6F64 
 1334      6500
 1335              	.LASF34:
 1336 02d7 53706565 		.ascii	"SpeedTimer_ReadCounter\000"
 1336      6454696D 
 1336      65725F52 
 1336      65616443 
 1336      6F756E74 
 1337              	.LASF17:
 1338 02ee 53706565 		.ascii	"SpeedTimer_Init\000"
 1338      6454696D 
 1338      65725F49 
 1338      6E697400 
 1339              	.LASF2:
 1340 02fe 73686F72 		.ascii	"short int\000"
 1340      7420696E 
 1340      7400
 1341              	.LASF31:
 1342 0308 53706565 		.ascii	"SpeedTimer_ReadCapture\000"
 1342      6454696D 
 1342      65725F52 
 1342      65616443 
 1342      61707475 
 1343              	.LASF4:
 1344 031f 6C6F6E67 		.ascii	"long int\000"
 1344      20696E74 
 1344      00
 1345              	.LASF13:
 1346 0328 63686172 		.ascii	"char\000"
 1346      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccYQgY9C.s 			page 36


 1347              	.LASF32:
 1348 032d 53706565 		.ascii	"SpeedTimer_WriteCounter\000"
 1348      6454696D 
 1348      65725F57 
 1348      72697465 
 1348      436F756E 
 1349              	.LASF0:
 1350 0345 7369676E 		.ascii	"signed char\000"
 1350      65642063 
 1350      68617200 
 1351              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
