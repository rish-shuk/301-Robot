ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBUART_initVar
  20              		.bss
  21              		.type	USBUART_initVar, %object
  22              		.size	USBUART_initVar, 1
  23              	USBUART_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBUART_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBUART_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	USBUART_Start, %function
  31              	USBUART_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 2


  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 3


  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 4


 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 0A46     		mov	r2, r1
  48 000a FB71     		strb	r3, [r7, #7]
  49 000c 1346     		mov	r3, r2
  50 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
  51              		.loc 1 188 0
  52 0010 094B     		ldr	r3, .L3
  53 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0014 002B     		cmp	r3, #0
  55 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
  56              		.loc 1 190 0
  57 0018 FFF7FEFF 		bl	USBUART_Init
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
  58              		.loc 1 191 0
  59 001c 064B     		ldr	r3, .L3
  60 001e 0122     		movs	r2, #1
  61 0020 1A70     		strb	r2, [r3]
  62              	.L2:
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
  63              		.loc 1 194 0
  64 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  65 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0026 1146     		mov	r1, r2
  67 0028 1846     		mov	r0, r3
  68 002a FFF7FEFF 		bl	USBUART_InitComponent
 195:Generated_Source\PSoC5/USBUART.c **** }
  69              		.loc 1 195 0
  70 002e 00BF     		nop
  71 0030 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0032 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0034 80BD     		pop	{r7, pc}
  77              	.L4:
  78 0036 00BF     		.align	2
  79              	.L3:
  80 0038 00000000 		.word	USBUART_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBUART_Start, .-USBUART_Start
  84              		.section	.text.USBUART_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USBUART_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBUART_Init, %function
  90              	USBUART_Init:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 6


  91              	.LFB1:
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  92              		.loc 1 212 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 7


 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 250 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c FB71     		strb	r3, [r7, #7]
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 108              		.loc 1 257 0
 109 000e 544A     		ldr	r2, .L6
 110 0010 534B     		ldr	r3, .L6
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 116              		.loc 1 259 0
 117 001e 514A     		ldr	r2, .L6+4
 118 0020 504B     		ldr	r3, .L6+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 124              		.loc 1 262 0
 125 002e 4E4B     		ldr	r3, .L6+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 128              		.loc 1 264 0
 129 0034 4D4B     		ldr	r3, .L6+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 8


 132              		.loc 1 268 0
 133 003a 4D4A     		ldr	r2, .L6+16
 134 003c 4C4B     		ldr	r3, .L6+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 140              		.loc 1 269 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 143              		.loc 1 274 0
 144 0050 484A     		ldr	r2, .L6+20
 145 0052 484B     		ldr	r3, .L6+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 151              		.loc 1 278 0
 152 0060 454A     		ldr	r2, .L6+24
 153 0062 454B     		ldr	r3, .L6+24
 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 159              		.loc 1 281 0
 160 0070 404A     		ldr	r2, .L6+20
 161 0072 404B     		ldr	r3, .L6+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 167              		.loc 1 283 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 170              		.loc 1 285 0
 171 0086 2820     		movs	r0, #40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 9


 172 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 173              		.loc 1 287 0
 174 008c 3B4A     		ldr	r2, .L6+28
 175 008e 3B4B     		ldr	r3, .L6+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 181              		.loc 1 288 0
 182 009c 374A     		ldr	r2, .L6+28
 183 009e 374B     		ldr	r3, .L6+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 189              		.loc 1 291 0
 190 00ac 314A     		ldr	r2, .L6+20
 191 00ae 314B     		ldr	r3, .L6+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 197              		.loc 1 292 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 294 0
 201 00c2 2C4A     		ldr	r2, .L6+20
 202 00c4 2B4B     		ldr	r3, .L6+20
 203 00c6 1B78     		ldrb	r3, [r3]
 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 208              		.loc 1 297 0
 209 00d2 2B4B     		ldr	r3, .L6+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 212              		.loc 1 298 0
 213 00d8 2A4B     		ldr	r3, .L6+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 10


 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 312 0
 217 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 00e0 1846     		mov	r0, r3
 219 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 220              		.loc 1 331 0
 221 00e6 0721     		movs	r1, #7
 222 00e8 1720     		movs	r0, #23
 223 00ea FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 224              		.loc 1 332 0
 225 00ee 2649     		ldr	r1, .L6+40
 226 00f0 1720     		movs	r0, #23
 227 00f2 FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 228              		.loc 1 335 0
 229 00f6 0721     		movs	r1, #7
 230 00f8 1820     		movs	r0, #24
 231 00fa FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 232              		.loc 1 336 0
 233 00fe 2349     		ldr	r1, .L6+44
 234 0100 1820     		movs	r0, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 11


 235 0102 FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 236              		.loc 1 340 0
 237 0106 0721     		movs	r1, #7
 238 0108 1520     		movs	r0, #21
 239 010a FFF7FEFF 		bl	CyIntSetPriority
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 240              		.loc 1 341 0
 241 010e 2049     		ldr	r1, .L6+48
 242 0110 1520     		movs	r0, #21
 243 0112 FFF7FEFF 		bl	CyIntSetVector
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 244              		.loc 1 346 0
 245 0116 0721     		movs	r1, #7
 246 0118 0620     		movs	r0, #6
 247 011a FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 248              		.loc 1 347 0
 249 011e 1D49     		ldr	r1, .L6+52
 250 0120 0620     		movs	r0, #6
 251 0122 FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 252              		.loc 1 352 0
 253 0126 0721     		movs	r1, #7
 254 0128 0720     		movs	r0, #7
 255 012a FFF7FEFF 		bl	CyIntSetPriority
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 256              		.loc 1 353 0
 257 012e 1A49     		ldr	r1, .L6+56
 258 0130 0720     		movs	r0, #7
 259 0132 FFF7FEFF 		bl	CyIntSetVector
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 260              		.loc 1 358 0
 261 0136 0721     		movs	r1, #7
 262 0138 0820     		movs	r0, #8
 263 013a FFF7FEFF 		bl	CyIntSetPriority
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 264              		.loc 1 359 0
 265 013e 1749     		ldr	r1, .L6+60
 266 0140 0820     		movs	r0, #8
 267 0142 FFF7FEFF 		bl	CyIntSetVector
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 12


 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 268              		.loc 1 401 0
 269 0146 0721     		movs	r1, #7
 270 0148 0C20     		movs	r0, #12
 271 014a FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 272              		.loc 1 402 0
 273 014e 1449     		ldr	r1, .L6+64
 274 0150 0C20     		movs	r0, #12
 275 0152 FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 13


 276              		.loc 1 409 0
 277 0156 00BF     		nop
 278 0158 0837     		adds	r7, r7, #8
 279              		.cfi_def_cfa_offset 8
 280 015a BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 015c 80BD     		pop	{r7, pc}
 284              	.L7:
 285 015e 00BF     		.align	2
 286              	.L6:
 287 0160 A5430040 		.word	1073759141
 288 0164 B5430040 		.word	1073759157
 289 0168 9D600040 		.word	1073766557
 290 016c 09600040 		.word	1073766409
 291 0170 10600040 		.word	1073766416
 292 0174 94430040 		.word	1073759124
 293 0178 12600040 		.word	1073766418
 294 017c F8510040 		.word	1073762808
 295 0180 84600040 		.word	1073766532
 296 0184 85600040 		.word	1073766533
 297 0188 00000000 		.word	USBUART_BUS_RESET_ISR
 298 018c 00000000 		.word	USBUART_EP_0_ISR
 299 0190 00000000 		.word	USBUART_SOF_ISR
 300 0194 00000000 		.word	USBUART_EP_1_ISR
 301 0198 00000000 		.word	USBUART_EP_2_ISR
 302 019c 00000000 		.word	USBUART_EP_3_ISR
 303 01a0 00000000 		.word	USBUART_DP_ISR
 304              		.cfi_endproc
 305              	.LFE1:
 306              		.size	USBUART_Init, .-USBUART_Init
 307              		.section	.text.USBUART_InitComponent,"ax",%progbits
 308              		.align	2
 309              		.global	USBUART_InitComponent
 310              		.thumb
 311              		.thumb_func
 312              		.type	USBUART_InitComponent, %function
 313              	USBUART_InitComponent:
 314              	.LFB2:
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 14


 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 315              		.loc 1 461 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 8
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 82B0     		sub	sp, sp, #8
 324              		.cfi_def_cfa_offset 16
 325 0004 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 327 0006 0346     		mov	r3, r0
 328 0008 0A46     		mov	r2, r1
 329 000a FB71     		strb	r3, [r7, #7]
 330 000c 1346     		mov	r3, r2
 331 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 15


 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 332              		.loc 1 476 0
 333 0010 2F4A     		ldr	r2, .L14
 334 0012 FB79     		ldrb	r3, [r7, #7]
 335 0014 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 336              		.loc 1 479 0
 337 0016 2F4B     		ldr	r3, .L14+4
 338 0018 0022     		movs	r2, #0
 339 001a 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 340              		.loc 1 480 0
 341 001c 2E4B     		ldr	r3, .L14+8
 342 001e 0022     		movs	r2, #0
 343 0020 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 344              		.loc 1 481 0
 345 0022 2E4B     		ldr	r3, .L14+12
 346 0024 0022     		movs	r2, #0
 347 0026 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 348              		.loc 1 482 0
 349 0028 2D4B     		ldr	r3, .L14+16
 350 002a 0022     		movs	r2, #0
 351 002c 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 352              		.loc 1 483 0
 353 002e 2D4B     		ldr	r3, .L14+20
 354 0030 0022     		movs	r2, #0
 355 0032 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 356              		.loc 1 484 0
 357 0034 2C4B     		ldr	r3, .L14+24
 358 0036 0022     		movs	r2, #0
 359 0038 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 360              		.loc 1 485 0
 361 003a 2C4B     		ldr	r3, .L14+28
 362 003c 0022     		movs	r2, #0
 363 003e 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 16


 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 364              		.loc 1 493 0
 365 0040 2B4B     		ldr	r3, .L14+32
 366 0042 4FF40002 		mov	r2, #8388608
 367 0046 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 368              		.loc 1 494 0
 369 0048 294B     		ldr	r3, .L14+32
 370 004a 4FF08072 		mov	r2, #16777216
 371 004e 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 372              		.loc 1 497 0
 373 0050 274B     		ldr	r3, .L14+32
 374 0052 4FF40012 		mov	r2, #2097152
 375 0056 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 376              		.loc 1 501 0
 377 0058 254B     		ldr	r3, .L14+32
 378 005a 4022     		movs	r2, #64
 379 005c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 380              		.loc 1 505 0
 381 005e 244B     		ldr	r3, .L14+32
 382 0060 8022     		movs	r2, #128
 383 0062 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 384              		.loc 1 509 0
 385 0064 224B     		ldr	r3, .L14+32
 386 0066 4FF48072 		mov	r2, #256
 387 006a 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 17


 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 388              		.loc 1 573 0
 389 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 390 006e 002B     		cmp	r3, #0
 391 0070 02D0     		beq	.L10
 392 0072 012B     		cmp	r3, #1
 393 0074 09D0     		beq	.L11
 394 0076 11E0     		b	.L13
 395              	.L10:
 574:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 18


 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 396              		.loc 1 577 0
 397 0078 1E4A     		ldr	r2, .L14+36
 398 007a 1E4B     		ldr	r3, .L14+36
 399 007c 1B78     		ldrb	r3, [r3]
 400 007e DBB2     		uxtb	r3, r3
 401 0080 23F00103 		bic	r3, r3, #1
 402 0084 DBB2     		uxtb	r3, r3
 403 0086 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 404              		.loc 1 578 0
 405 0088 11E0     		b	.L12
 406              	.L11:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 407              		.loc 1 582 0
 408 008a 1A4A     		ldr	r2, .L14+36
 409 008c 194B     		ldr	r3, .L14+36
 410 008e 1B78     		ldrb	r3, [r3]
 411 0090 DBB2     		uxtb	r3, r3
 412 0092 43F00103 		orr	r3, r3, #1
 413 0096 DBB2     		uxtb	r3, r3
 414 0098 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 415              		.loc 1 583 0
 416 009a 08E0     		b	.L12
 417              	.L13:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 418              		.loc 1 591 0
 419 009c 154A     		ldr	r2, .L14+36
 420 009e 154B     		ldr	r3, .L14+36
 421 00a0 1B78     		ldrb	r3, [r3]
 422 00a2 DBB2     		uxtb	r3, r3
 423 00a4 43F00103 		orr	r3, r3, #1
 424 00a8 DBB2     		uxtb	r3, r3
 425 00aa 1370     		strb	r3, [r2]
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 426              		.loc 1 593 0
 427 00ac 00BF     		nop
 428              	.L12:
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 19


 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 429              		.loc 1 627 0
 430 00ae 124B     		ldr	r3, .L14+40
 431 00b0 0322     		movs	r2, #3
 432 00b2 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 433              		.loc 1 630 0
 434 00b4 114B     		ldr	r3, .L14+44
 435 00b6 8022     		movs	r2, #128
 436 00b8 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 437              		.loc 1 631 0
 438 00ba 0120     		movs	r0, #1
 439 00bc FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 440              		.loc 1 635 0
 441 00c0 0F4B     		ldr	r3, .L14+48
 442 00c2 0422     		movs	r2, #4
 443 00c4 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USBUART.c **** }
 444              		.loc 1 636 0
 445 00c6 00BF     		nop
 446 00c8 0837     		adds	r7, r7, #8
 447              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 20


 448 00ca BD46     		mov	sp, r7
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 00cc 80BD     		pop	{r7, pc}
 452              	.L15:
 453 00ce 00BF     		.align	2
 454              	.L14:
 455 00d0 00000000 		.word	USBUART_device
 456 00d4 00000000 		.word	USBUART_transferState
 457 00d8 00000000 		.word	USBUART_configurationChanged
 458 00dc 00000000 		.word	USBUART_configuration
 459 00e0 00000000 		.word	USBUART_interfaceNumber
 460 00e4 00000000 		.word	USBUART_deviceAddress
 461 00e8 00000000 		.word	USBUART_deviceStatus
 462 00ec 00000000 		.word	USBUART_lastPacketSize
 463 00f0 00E100E0 		.word	-536813312
 464 00f4 09600040 		.word	1073766409
 465 00f8 28600040 		.word	1073766440
 466 00fc 08600040 		.word	1073766408
 467 0100 12600040 		.word	1073766418
 468              		.cfi_endproc
 469              	.LFE2:
 470              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 471              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 472              		.align	2
 473              		.global	USBUART_ReInitComponent
 474              		.thumb
 475              		.thumb_func
 476              		.type	USBUART_ReInitComponent, %function
 477              	USBUART_ReInitComponent:
 478              	.LFB3:
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 21


 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 479              		.loc 1 672 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 80B4     		push	{r7}
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 489              		.loc 1 686 0
 490 0004 0F4B     		ldr	r3, .L17
 491 0006 0022     		movs	r2, #0
 492 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 493              		.loc 1 687 0
 494 000a 0F4B     		ldr	r3, .L17+4
 495 000c 0022     		movs	r2, #0
 496 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 497              		.loc 1 688 0
 498 0010 0E4B     		ldr	r3, .L17+8
 499 0012 0022     		movs	r2, #0
 500 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 501              		.loc 1 689 0
 502 0016 0E4B     		ldr	r3, .L17+12
 503 0018 0022     		movs	r2, #0
 504 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 505              		.loc 1 690 0
 506 001c 0D4B     		ldr	r3, .L17+16
 507 001e 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 22


 508 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 509              		.loc 1 691 0
 510 0022 0D4B     		ldr	r3, .L17+20
 511 0024 0022     		movs	r2, #0
 512 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 513              		.loc 1 692 0
 514 0028 0C4B     		ldr	r3, .L17+24
 515 002a 0022     		movs	r2, #0
 516 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 517              		.loc 1 699 0
 518 002e 0C4B     		ldr	r3, .L17+28
 519 0030 0322     		movs	r2, #3
 520 0032 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 521              		.loc 1 703 0
 522 0034 0B4B     		ldr	r3, .L17+32
 523 0036 8022     		movs	r2, #128
 524 0038 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USBUART.c **** }
 525              		.loc 1 704 0
 526 003a 00BF     		nop
 527 003c BD46     		mov	sp, r7
 528              		.cfi_def_cfa_register 13
 529              		@ sp needed
 530 003e 80BC     		pop	{r7}
 531              		.cfi_restore 7
 532              		.cfi_def_cfa_offset 0
 533 0040 7047     		bx	lr
 534              	.L18:
 535 0042 00BF     		.align	2
 536              	.L17:
 537 0044 00000000 		.word	USBUART_transferState
 538 0048 00000000 		.word	USBUART_configurationChanged
 539 004c 00000000 		.word	USBUART_configuration
 540 0050 00000000 		.word	USBUART_interfaceNumber
 541 0054 00000000 		.word	USBUART_deviceAddress
 542 0058 00000000 		.word	USBUART_deviceStatus
 543 005c 00000000 		.word	USBUART_lastPacketSize
 544 0060 28600040 		.word	1073766440
 545 0064 08600040 		.word	1073766408
 546              		.cfi_endproc
 547              	.LFE3:
 548              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 549              		.section	.text.USBUART_Stop,"ax",%progbits
 550              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 23


 551              		.global	USBUART_Stop
 552              		.thumb
 553              		.thumb_func
 554              		.type	USBUART_Stop, %function
 555              	USBUART_Stop:
 556              	.LFB4:
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 557              		.loc 1 730 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 82B0     		sub	sp, sp, #8
 566              		.cfi_def_cfa_offset 16
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 569              		.loc 1 738 0
 570 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 571 000a 0346     		mov	r3, r0
 572 000c FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 24


 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 573              		.loc 1 741 0
 574 000e 334A     		ldr	r2, .L20
 575 0010 324B     		ldr	r3, .L20
 576 0012 1B78     		ldrb	r3, [r3]
 577 0014 DBB2     		uxtb	r3, r3
 578 0016 03F07F03 		and	r3, r3, #127
 579 001a DBB2     		uxtb	r3, r3
 580 001c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 581              		.loc 1 744 0
 582 001e 304A     		ldr	r2, .L20+4
 583 0020 2F4B     		ldr	r3, .L20+4
 584 0022 1B78     		ldrb	r3, [r3]
 585 0024 DBB2     		uxtb	r3, r3
 586 0026 23F00403 		bic	r3, r3, #4
 587 002a DBB2     		uxtb	r3, r3
 588 002c 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 589              		.loc 1 751 0
 590 002e 2D4A     		ldr	r2, .L20+8
 591 0030 2C4B     		ldr	r3, .L20+8
 592 0032 1B78     		ldrb	r3, [r3]
 593 0034 DBB2     		uxtb	r3, r3
 594 0036 23F00103 		bic	r3, r3, #1
 595 003a DBB2     		uxtb	r3, r3
 596 003c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 597              		.loc 1 752 0
 598 003e 2A4A     		ldr	r2, .L20+12
 599 0040 294B     		ldr	r3, .L20+12
 600 0042 1B78     		ldrb	r3, [r3]
 601 0044 DBB2     		uxtb	r3, r3
 602 0046 23F00103 		bic	r3, r3, #1
 603 004a DBB2     		uxtb	r3, r3
 604 004c 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 605              		.loc 1 756 0
 606 004e 274A     		ldr	r2, .L20+16
 607 0050 264B     		ldr	r3, .L20+16
 608 0052 1B78     		ldrb	r3, [r3]
 609 0054 DBB2     		uxtb	r3, r3
 610 0056 63F07F03 		orn	r3, r3, #127
 611 005a DBB2     		uxtb	r3, r3
 612 005c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 25


 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 613              		.loc 1 757 0
 614 005e 234A     		ldr	r2, .L20+16
 615 0060 224B     		ldr	r3, .L20+16
 616 0062 1B78     		ldrb	r3, [r3]
 617 0064 DBB2     		uxtb	r3, r3
 618 0066 43F04003 		orr	r3, r3, #64
 619 006a DBB2     		uxtb	r3, r3
 620 006c 1370     		strb	r3, [r2]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 621              		.loc 1 761 0
 622 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 623 0070 1846     		mov	r0, r3
 624 0072 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 625              		.loc 1 770 0
 626 0076 1E4B     		ldr	r3, .L20+20
 627 0078 4FF40002 		mov	r2, #8388608
 628 007c 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 629              		.loc 1 771 0
 630 007e 1C4B     		ldr	r3, .L20+20
 631 0080 4FF08072 		mov	r2, #16777216
 632 0084 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 633              		.loc 1 774 0
 634 0086 1A4B     		ldr	r3, .L20+20
 635 0088 4FF40012 		mov	r2, #2097152
 636 008c 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 637              		.loc 1 778 0
 638 008e 184B     		ldr	r3, .L20+20
 639 0090 4022     		movs	r2, #64
 640 0092 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 641              		.loc 1 782 0
 642 0094 164B     		ldr	r3, .L20+20
 643 0096 8022     		movs	r2, #128
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 26


 644 0098 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 645              		.loc 1 786 0
 646 009a 154B     		ldr	r3, .L20+20
 647 009c 4FF48072 		mov	r2, #256
 648 00a0 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 649              		.loc 1 811 0
 650 00a2 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 651              		.loc 1 812 0
 652 00a6 134B     		ldr	r3, .L20+24
 653 00a8 4FF48052 		mov	r2, #4096
 654 00ac 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 655              		.loc 1 818 0
 656 00ae 124B     		ldr	r3, .L20+28
 657 00b0 0022     		movs	r2, #0
 658 00b2 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 659              		.loc 1 819 0
 660 00b4 114B     		ldr	r3, .L20+32
 661 00b6 0022     		movs	r2, #0
 662 00b8 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 27


 663              		.loc 1 820 0
 664 00ba 114B     		ldr	r3, .L20+36
 665 00bc 0022     		movs	r2, #0
 666 00be 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 667              		.loc 1 821 0
 668 00c0 104B     		ldr	r3, .L20+40
 669 00c2 0022     		movs	r2, #0
 670 00c4 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 671              		.loc 1 822 0
 672 00c6 104B     		ldr	r3, .L20+44
 673 00c8 0022     		movs	r2, #0
 674 00ca 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 675              		.loc 1 825 0
 676 00cc 0F4B     		ldr	r3, .L20+48
 677 00ce 0022     		movs	r2, #0
 678 00d0 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USBUART.c **** }
 679              		.loc 1 826 0
 680 00d2 00BF     		nop
 681 00d4 0837     		adds	r7, r7, #8
 682              		.cfi_def_cfa_offset 8
 683 00d6 BD46     		mov	sp, r7
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 00d8 80BD     		pop	{r7, pc}
 687              	.L21:
 688 00da 00BF     		.align	2
 689              	.L20:
 690 00dc 08600040 		.word	1073766408
 691 00e0 12600040 		.word	1073766418
 692 00e4 A5430040 		.word	1073759141
 693 00e8 B5430040 		.word	1073759157
 694 00ec F8510040 		.word	1073762808
 695 00f0 80E100E0 		.word	-536813184
 696 00f4 80E200E0 		.word	-536812928
 697 00f8 00000000 		.word	USBUART_configurationChanged
 698 00fc 00000000 		.word	USBUART_configuration
 699 0100 00000000 		.word	USBUART_interfaceNumber
 700 0104 00000000 		.word	USBUART_deviceAddress
 701 0108 00000000 		.word	USBUART_deviceStatus
 702 010c 00000000 		.word	USBUART_initVar
 703              		.cfi_endproc
 704              	.LFE4:
 705              		.size	USBUART_Stop, .-USBUART_Stop
 706              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 707              		.align	2
 708              		.global	USBUART_CheckActivity
 709              		.thumb
 710              		.thumb_func
 711              		.type	USBUART_CheckActivity, %function
 712              	USBUART_CheckActivity:
 713              	.LFB5:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 28


 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 714              		.loc 1 850 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 8
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 7, -4
 722 0002 83B0     		sub	sp, sp, #12
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 726              		.loc 1 851 0
 727 0006 0B4B     		ldr	r3, .L26
 728 0008 1B78     		ldrb	r3, [r3]
 729 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 730              		.loc 1 854 0
 731 000c 094A     		ldr	r2, .L26
 732 000e FB79     		ldrb	r3, [r7, #7]
 733 0010 23F00403 		bic	r3, r3, #4
 734 0014 DBB2     		uxtb	r3, r3
 735 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 736              		.loc 1 857 0
 737 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 738 001a 03F00403 		and	r3, r3, #4
 739 001e 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 29


 740 0020 01D0     		beq	.L23
 741              		.loc 1 857 0 is_stmt 0 discriminator 1
 742 0022 0123     		movs	r3, #1
 743 0024 00E0     		b	.L24
 744              	.L23:
 745              		.loc 1 857 0 discriminator 2
 746 0026 0023     		movs	r3, #0
 747              	.L24:
 858:Generated_Source\PSoC5/USBUART.c **** }
 748              		.loc 1 858 0 is_stmt 1 discriminator 4
 749 0028 1846     		mov	r0, r3
 750 002a 0C37     		adds	r7, r7, #12
 751              		.cfi_def_cfa_offset 4
 752 002c BD46     		mov	sp, r7
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 002e 80BC     		pop	{r7}
 756              		.cfi_restore 7
 757              		.cfi_def_cfa_offset 0
 758 0030 7047     		bx	lr
 759              	.L27:
 760 0032 00BF     		.align	2
 761              	.L26:
 762 0034 09600040 		.word	1073766409
 763              		.cfi_endproc
 764              	.LFE5:
 765              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 766              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 767              		.align	2
 768              		.global	USBUART_GetConfiguration
 769              		.thumb
 770              		.thumb_func
 771              		.type	USBUART_GetConfiguration, %function
 772              	USBUART_GetConfiguration:
 773              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 774              		.loc 1 873 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779 0000 80B4     		push	{r7}
 780              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 30


 781              		.cfi_offset 7, -4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 784              		.loc 1 874 0
 785 0004 034B     		ldr	r3, .L30
 786 0006 1B78     		ldrb	r3, [r3]
 787 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USBUART.c **** }
 788              		.loc 1 875 0
 789 000a 1846     		mov	r0, r3
 790 000c BD46     		mov	sp, r7
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 000e 80BC     		pop	{r7}
 794              		.cfi_restore 7
 795              		.cfi_def_cfa_offset 0
 796 0010 7047     		bx	lr
 797              	.L31:
 798 0012 00BF     		.align	2
 799              	.L30:
 800 0014 00000000 		.word	USBUART_configuration
 801              		.cfi_endproc
 802              	.LFE6:
 803              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 804              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 805              		.align	2
 806              		.global	USBUART_IsConfigurationChanged
 807              		.thumb
 808              		.thumb_func
 809              		.type	USBUART_IsConfigurationChanged, %function
 810              	USBUART_IsConfigurationChanged:
 811              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 31


 812              		.loc 1 899 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 8
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 817 0000 80B4     		push	{r7}
 818              		.cfi_def_cfa_offset 4
 819              		.cfi_offset 7, -4
 820 0002 83B0     		sub	sp, sp, #12
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 824              		.loc 1 900 0
 825 0006 0023     		movs	r3, #0
 826 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 827              		.loc 1 902 0
 828 000a 084B     		ldr	r3, .L35
 829 000c 1B78     		ldrb	r3, [r3]
 830 000e DBB2     		uxtb	r3, r3
 831 0010 002B     		cmp	r3, #0
 832 0012 05D0     		beq	.L33
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 833              		.loc 1 904 0
 834 0014 054B     		ldr	r3, .L35
 835 0016 1B78     		ldrb	r3, [r3]
 836 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 837              		.loc 1 905 0
 838 001a 044B     		ldr	r3, .L35
 839 001c 0022     		movs	r2, #0
 840 001e 1A70     		strb	r2, [r3]
 841              	.L33:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 842              		.loc 1 908 0
 843 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USBUART.c **** }
 844              		.loc 1 909 0
 845 0022 1846     		mov	r0, r3
 846 0024 0C37     		adds	r7, r7, #12
 847              		.cfi_def_cfa_offset 4
 848 0026 BD46     		mov	sp, r7
 849              		.cfi_def_cfa_register 13
 850              		@ sp needed
 851 0028 80BC     		pop	{r7}
 852              		.cfi_restore 7
 853              		.cfi_def_cfa_offset 0
 854 002a 7047     		bx	lr
 855              	.L36:
 856              		.align	2
 857              	.L35:
 858 002c 00000000 		.word	USBUART_configurationChanged
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 32


 859              		.cfi_endproc
 860              	.LFE7:
 861              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 862              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 863              		.align	2
 864              		.global	USBUART_GetInterfaceSetting
 865              		.thumb
 866              		.thumb_func
 867              		.type	USBUART_GetInterfaceSetting, %function
 868              	USBUART_GetInterfaceSetting:
 869              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 870              		.loc 1 929 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 8
 873              		@ frame_needed = 1, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875 0000 80B4     		push	{r7}
 876              		.cfi_def_cfa_offset 4
 877              		.cfi_offset 7, -4
 878 0002 83B0     		sub	sp, sp, #12
 879              		.cfi_def_cfa_offset 16
 880 0004 00AF     		add	r7, sp, #0
 881              		.cfi_def_cfa_register 7
 882 0006 0346     		mov	r3, r0
 883 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 884              		.loc 1 930 0
 885 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 886 000c 034A     		ldr	r2, .L39
 887 000e D35C     		ldrb	r3, [r2, r3]
 888 0010 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC5/USBUART.c **** }
 889              		.loc 1 931 0
 890 0012 1846     		mov	r0, r3
 891 0014 0C37     		adds	r7, r7, #12
 892              		.cfi_def_cfa_offset 4
 893 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 33


 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 0018 80BC     		pop	{r7}
 897              		.cfi_restore 7
 898              		.cfi_def_cfa_offset 0
 899 001a 7047     		bx	lr
 900              	.L40:
 901              		.align	2
 902              	.L39:
 903 001c 00000000 		.word	USBUART_interfaceSetting
 904              		.cfi_endproc
 905              	.LFE8:
 906              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 907              		.section	.text.USBUART_GetEPState,"ax",%progbits
 908              		.align	2
 909              		.global	USBUART_GetEPState
 910              		.thumb
 911              		.thumb_func
 912              		.type	USBUART_GetEPState, %function
 913              	USBUART_GetEPState:
 914              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 915              		.loc 1 960 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 8
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920 0000 80B4     		push	{r7}
 921              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 34


 922              		.cfi_offset 7, -4
 923 0002 83B0     		sub	sp, sp, #12
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 927 0006 0346     		mov	r3, r0
 928 0008 FB71     		strb	r3, [r7, #7]
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 929              		.loc 1 961 0
 930 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 931 000c 0649     		ldr	r1, .L43
 932 000e 1346     		mov	r3, r2
 933 0010 5B00     		lsls	r3, r3, #1
 934 0012 1344     		add	r3, r3, r2
 935 0014 9B00     		lsls	r3, r3, #2
 936 0016 0B44     		add	r3, r3, r1
 937 0018 0133     		adds	r3, r3, #1
 938 001a 1B78     		ldrb	r3, [r3]
 939 001c DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USBUART.c **** }
 940              		.loc 1 962 0
 941 001e 1846     		mov	r0, r3
 942 0020 0C37     		adds	r7, r7, #12
 943              		.cfi_def_cfa_offset 4
 944 0022 BD46     		mov	sp, r7
 945              		.cfi_def_cfa_register 13
 946              		@ sp needed
 947 0024 80BC     		pop	{r7}
 948              		.cfi_restore 7
 949              		.cfi_def_cfa_offset 0
 950 0026 7047     		bx	lr
 951              	.L44:
 952              		.align	2
 953              	.L43:
 954 0028 00000000 		.word	USBUART_EP
 955              		.cfi_endproc
 956              	.LFE9:
 957              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 958              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 959              		.align	2
 960              		.global	USBUART_GetEPCount
 961              		.thumb
 962              		.thumb_func
 963              		.type	USBUART_GetEPCount, %function
 964              	USBUART_GetEPCount:
 965              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 35


 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 966              		.loc 1 983 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 16
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971 0000 80B4     		push	{r7}
 972              		.cfi_def_cfa_offset 4
 973              		.cfi_offset 7, -4
 974 0002 85B0     		sub	sp, sp, #20
 975              		.cfi_def_cfa_offset 24
 976 0004 00AF     		add	r7, sp, #0
 977              		.cfi_def_cfa_register 7
 978 0006 0346     		mov	r3, r0
 979 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 980              		.loc 1 984 0
 981 000a 0023     		movs	r3, #0
 982 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 983              		.loc 1 986 0
 984 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 985 0010 002B     		cmp	r3, #0
 986 0012 1CD0     		beq	.L46
 987              		.loc 1 986 0 is_stmt 0 discriminator 1
 988 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 989 0016 082B     		cmp	r3, #8
 990 0018 19D8     		bhi	.L46
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 991              		.loc 1 989 0 is_stmt 1
 992 001a 104A     		ldr	r2, .L48
 993 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 994 001e 1B01     		lsls	r3, r3, #4
 995 0020 1344     		add	r3, r3, r2
 996 0022 1B78     		ldrb	r3, [r3]
 997 0024 DBB2     		uxtb	r3, r3
 998 0026 9BB2     		uxth	r3, r3
 999 0028 03F00F03 		and	r3, r3, #15
 1000 002c FB81     		strh	r3, [r7, #14]	@ movhi
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 1001              		.loc 1 990 0
 1002 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1003 0030 1B02     		lsls	r3, r3, #8
 1004 0032 9AB2     		uxth	r2, r3
 1005 0034 0949     		ldr	r1, .L48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 36


 1006 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1007 0038 1B01     		lsls	r3, r3, #4
 1008 003a 0B44     		add	r3, r3, r1
 1009 003c 0133     		adds	r3, r3, #1
 1010 003e 1B78     		ldrb	r3, [r3]
 1011 0040 DBB2     		uxtb	r3, r3
 1012 0042 9BB2     		uxth	r3, r3
 1013 0044 1343     		orrs	r3, r3, r2
 1014 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 1015              		.loc 1 991 0
 1016 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1017 004a 023B     		subs	r3, r3, #2
 1018 004c FB81     		strh	r3, [r7, #14]	@ movhi
 1019              	.L46:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 1020              		.loc 1 994 0
 1021 004e FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USBUART.c **** }
 1022              		.loc 1 995 0
 1023 0050 1846     		mov	r0, r3
 1024 0052 1437     		adds	r7, r7, #20
 1025              		.cfi_def_cfa_offset 4
 1026 0054 BD46     		mov	sp, r7
 1027              		.cfi_def_cfa_register 13
 1028              		@ sp needed
 1029 0056 80BC     		pop	{r7}
 1030              		.cfi_restore 7
 1031              		.cfi_def_cfa_offset 0
 1032 0058 7047     		bx	lr
 1033              	.L49:
 1034 005a 00BF     		.align	2
 1035              	.L48:
 1036 005c FC5F0040 		.word	1073766396
 1037              		.cfi_endproc
 1038              	.LFE10:
 1039              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 1040              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 1041              		.align	2
 1042              		.global	USBUART_LoadInEP
 1043              		.thumb
 1044              		.thumb_func
 1045              		.type	USBUART_LoadInEP, %function
 1046              	USBUART_LoadInEP:
 1047              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 37


1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 38


1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 39


1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 40


1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 41


1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 42


1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 1048              		.loc 1 1344 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 43


 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052              		@ link register save eliminated.
 1053 0000 B0B4     		push	{r4, r5, r7}
 1054              		.cfi_def_cfa_offset 12
 1055              		.cfi_offset 4, -12
 1056              		.cfi_offset 5, -8
 1057              		.cfi_offset 7, -4
 1058 0002 85B0     		sub	sp, sp, #20
 1059              		.cfi_def_cfa_offset 32
 1060 0004 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
 1062 0006 0346     		mov	r3, r0
 1063 0008 3960     		str	r1, [r7]
 1064 000a FB71     		strb	r3, [r7, #7]
 1065 000c 1346     		mov	r3, r2	@ movhi
 1066 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1067              		.loc 1 1345 0
 1068 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1069 0012 002B     		cmp	r3, #0
 1070 0014 6DD0     		beq	.L56
 1071              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1072 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 0018 082B     		cmp	r3, #8
 1074 001a 6AD8     		bhi	.L56
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1075              		.loc 1 1349 0 is_stmt 1
 1076 001c B988     		ldrh	r1, [r7, #4]
 1077 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1078 0020 3648     		ldr	r0, .L57
 1079 0022 1346     		mov	r3, r2
 1080 0024 5B00     		lsls	r3, r3, #1
 1081 0026 1344     		add	r3, r3, r2
 1082 0028 9B00     		lsls	r3, r3, #2
 1083 002a 0344     		add	r3, r3, r0
 1084 002c 0633     		adds	r3, r3, #6
 1085 002e 1B88     		ldrh	r3, [r3]	@ movhi
 1086 0030 9BB2     		uxth	r3, r3
 1087 0032 C3F50073 		rsb	r3, r3, #512
 1088 0036 9942     		cmp	r1, r3
 1089 0038 0CD9     		bls	.L52
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1090              		.loc 1 1351 0
 1091 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1092 003c 2F49     		ldr	r1, .L57
 1093 003e 1346     		mov	r3, r2
 1094 0040 5B00     		lsls	r3, r3, #1
 1095 0042 1344     		add	r3, r3, r2
 1096 0044 9B00     		lsls	r3, r3, #2
 1097 0046 0B44     		add	r3, r3, r1
 1098 0048 0633     		adds	r3, r3, #6
 1099 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1100 004c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 44


 1101 004e C3F50073 		rsb	r3, r3, #512
 1102 0052 BB80     		strh	r3, [r7, #4]	@ movhi
 1103              	.L52:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 1104              		.loc 1 1356 0
 1105 0054 2A4C     		ldr	r4, .L57+4
 1106 0056 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1107 0058 BB88     		ldrh	r3, [r7, #4]
 1108 005a 1B0A     		lsrs	r3, r3, #8
 1109 005c 9BB2     		uxth	r3, r3
 1110 005e D8B2     		uxtb	r0, r3
 1111 0060 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1112 0062 264D     		ldr	r5, .L57
 1113 0064 1346     		mov	r3, r2
 1114 0066 5B00     		lsls	r3, r3, #1
 1115 0068 1344     		add	r3, r3, r2
 1116 006a 9B00     		lsls	r3, r3, #2
 1117 006c 2B44     		add	r3, r3, r5
 1118 006e 0333     		adds	r3, r3, #3
 1119 0070 1B78     		ldrb	r3, [r3]
 1120 0072 DBB2     		uxtb	r3, r3
 1121 0074 0343     		orrs	r3, r3, r0
 1122 0076 DAB2     		uxtb	r2, r3
 1123 0078 0B01     		lsls	r3, r1, #4
 1124 007a 2344     		add	r3, r3, r4
 1125 007c 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1126              		.loc 1 1357 0
 1127 007e 204A     		ldr	r2, .L57+4
 1128 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1129 0082 B988     		ldrh	r1, [r7, #4]	@ movhi
 1130 0084 C9B2     		uxtb	r1, r1
 1131 0086 1B01     		lsls	r3, r3, #4
 1132 0088 1344     		add	r3, r3, r2
 1133 008a 0133     		adds	r3, r3, #1
 1134 008c 0A46     		mov	r2, r1
 1135 008e 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 1136              		.loc 1 1360 0
 1137 0090 3B68     		ldr	r3, [r7]
 1138 0092 002B     		cmp	r3, #0
 1139 0094 13D0     		beq	.L53
 1140              	.LBB2:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1141              		.loc 1 1364 0
 1142 0096 0023     		movs	r3, #0
 1143 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 1144 009a 0CE0     		b	.L54
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 45


 1145              	.L55:
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1146              		.loc 1 1366 0 discriminator 3
 1147 009c 1948     		ldr	r0, .L57+8
 1148 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1149 00a0 FA89     		ldrh	r2, [r7, #14]
 1150 00a2 3968     		ldr	r1, [r7]
 1151 00a4 0A44     		add	r2, r2, r1
 1152 00a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1153 00a8 1B01     		lsls	r3, r3, #4
 1154 00aa 0344     		add	r3, r3, r0
 1155 00ac 0833     		adds	r3, r3, #8
 1156 00ae 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1157              		.loc 1 1364 0 discriminator 3
 1158 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1159 00b2 0133     		adds	r3, r3, #1
 1160 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1161              	.L54:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1162              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1163 00b6 FA89     		ldrh	r2, [r7, #14]
 1164 00b8 BB88     		ldrh	r3, [r7, #4]
 1165 00ba 9A42     		cmp	r2, r3
 1166 00bc EED3     		bcc	.L55
 1167              	.L53:
 1168              	.LBE2:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1169              		.loc 1 1371 0 is_stmt 1
 1170 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1171 00c0 0E49     		ldr	r1, .L57
 1172 00c2 1346     		mov	r3, r2
 1173 00c4 5B00     		lsls	r3, r3, #1
 1174 00c6 1344     		add	r3, r3, r2
 1175 00c8 9B00     		lsls	r3, r3, #2
 1176 00ca 0B44     		add	r3, r3, r1
 1177 00cc 0133     		adds	r3, r3, #1
 1178 00ce 0022     		movs	r2, #0
 1179 00d0 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1180              		.loc 1 1374 0
 1181 00d2 0B48     		ldr	r0, .L57+4
 1182 00d4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1183 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1184 00d8 084C     		ldr	r4, .L57
 1185 00da 1346     		mov	r3, r2
 1186 00dc 5B00     		lsls	r3, r3, #1
 1187 00de 1344     		add	r3, r3, r2
 1188 00e0 9B00     		lsls	r3, r3, #2
 1189 00e2 2344     		add	r3, r3, r4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 46


 1190 00e4 0533     		adds	r3, r3, #5
 1191 00e6 1B78     		ldrb	r3, [r3]
 1192 00e8 DAB2     		uxtb	r2, r3
 1193 00ea 0B01     		lsls	r3, r1, #4
 1194 00ec 0344     		add	r3, r3, r0
 1195 00ee 0233     		adds	r3, r3, #2
 1196 00f0 1A70     		strb	r2, [r3]
 1197              	.L56:
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 47


1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 48


1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 49


1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 50


1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
 1198              		.loc 1 1604 0
 1199 00f2 00BF     		nop
 1200 00f4 1437     		adds	r7, r7, #20
 1201              		.cfi_def_cfa_offset 12
 1202 00f6 BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 00f8 B0BC     		pop	{r4, r5, r7}
 1206              		.cfi_restore 7
 1207              		.cfi_restore 5
 1208              		.cfi_restore 4
 1209              		.cfi_def_cfa_offset 0
 1210 00fa 7047     		bx	lr
 1211              	.L58:
 1212              		.align	2
 1213              	.L57:
 1214 00fc 00000000 		.word	USBUART_EP
 1215 0100 FC5F0040 		.word	1073766396
 1216 0104 70600040 		.word	1073766512
 1217              		.cfi_endproc
 1218              	.LFE11:
 1219              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1220              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1221              		.align	2
 1222              		.global	USBUART_ReadOutEP
 1223              		.thumb
 1224              		.thumb_func
 1225              		.type	USBUART_ReadOutEP, %function
 1226              	USBUART_ReadOutEP:
 1227              	.LFB12:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 51


1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
 1228              		.loc 1 1655 0
 1229              		.cfi_startproc
 1230              		@ args = 0, pretend = 0, frame = 16
 1231              		@ frame_needed = 1, uses_anonymous_args = 0
 1232 0000 80B5     		push	{r7, lr}
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 84B0     		sub	sp, sp, #16
 1237              		.cfi_def_cfa_offset 24
 1238 0004 00AF     		add	r7, sp, #0
 1239              		.cfi_def_cfa_register 7
 1240 0006 0346     		mov	r3, r0
 1241 0008 3960     		str	r1, [r7]
 1242 000a FB71     		strb	r3, [r7, #7]
 1243 000c 1346     		mov	r3, r2	@ movhi
 1244 000e BB80     		strh	r3, [r7, #4]	@ movhi
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1245              		.loc 1 1656 0
 1246 0010 3B68     		ldr	r3, [r7]
 1247 0012 002B     		cmp	r3, #0
 1248 0014 30D0     		beq	.L60
 1249              		.loc 1 1656 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 52


 1250 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1251 0018 002B     		cmp	r3, #0
 1252 001a 2DD0     		beq	.L60
 1253              		.loc 1 1656 0 discriminator 2
 1254 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1255 001e 082B     		cmp	r3, #8
 1256 0020 2AD8     		bhi	.L60
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1257              		.loc 1 1660 0 is_stmt 1
 1258 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1259 0024 1846     		mov	r0, r3
 1260 0026 FFF7FEFF 		bl	USBUART_GetEPCount
 1261 002a 0346     		mov	r3, r0
 1262 002c 1A46     		mov	r2, r3
 1263 002e BB88     		ldrh	r3, [r7, #4]
 1264 0030 9342     		cmp	r3, r2
 1265 0032 05D9     		bls	.L61
 1266              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1267 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1268 0036 1846     		mov	r0, r3
 1269 0038 FFF7FEFF 		bl	USBUART_GetEPCount
 1270 003c 0346     		mov	r3, r0
 1271 003e 00E0     		b	.L62
 1272              	.L61:
 1273              		.loc 1 1660 0 discriminator 2
 1274 0040 BB88     		ldrh	r3, [r7, #4]
 1275              	.L62:
 1276              		.loc 1 1660 0 discriminator 4
 1277 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 1278              	.LBB3:
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1279              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1280 0044 0023     		movs	r3, #0
 1281 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1282 0048 0DE0     		b	.L63
 1283              	.L64:
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1284              		.loc 1 1669 0 discriminator 3
 1285 004a FB89     		ldrh	r3, [r7, #14]
 1286 004c 3A68     		ldr	r2, [r7]
 1287 004e 1344     		add	r3, r3, r2
 1288 0050 0D49     		ldr	r1, .L67
 1289 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1290 0054 1201     		lsls	r2, r2, #4
 1291 0056 0A44     		add	r2, r2, r1
 1292 0058 0832     		adds	r2, r2, #8
 1293 005a 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 53


 1294 005c D2B2     		uxtb	r2, r2
 1295 005e 1A70     		strb	r2, [r3]
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1296              		.loc 1 1667 0 discriminator 3
 1297 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1298 0062 0133     		adds	r3, r3, #1
 1299 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 1300              	.L63:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1301              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1302 0066 FA89     		ldrh	r2, [r7, #14]
 1303 0068 BB88     		ldrh	r3, [r7, #4]
 1304 006a 9A42     		cmp	r2, r3
 1305 006c EDD3     		bcc	.L64
 1306              	.LBE3:
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
 1307              		.loc 1 1674 0 is_stmt 1
 1308 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1309 0070 1846     		mov	r0, r3
 1310 0072 FFF7FEFF 		bl	USBUART_EnableOutEP
 1311 0076 01E0     		b	.L65
 1312              	.L60:
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 54


1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 55


1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 56


1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
 1313              		.loc 1 1820 0
 1314 0078 0023     		movs	r3, #0
 1315 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1316              	.L65:
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
 1317              		.loc 1 1823 0
 1318 007c BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USBUART.c **** }
 1319              		.loc 1 1824 0
 1320 007e 1846     		mov	r0, r3
 1321 0080 1037     		adds	r7, r7, #16
 1322              		.cfi_def_cfa_offset 8
 1323 0082 BD46     		mov	sp, r7
 1324              		.cfi_def_cfa_register 13
 1325              		@ sp needed
 1326 0084 80BD     		pop	{r7, pc}
 1327              	.L68:
 1328 0086 00BF     		.align	2
 1329              	.L67:
 1330 0088 70600040 		.word	1073766512
 1331              		.cfi_endproc
 1332              	.LFE12:
 1333              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1334              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1335              		.align	2
 1336              		.global	USBUART_EnableOutEP
 1337              		.thumb
 1338              		.thumb_func
 1339              		.type	USBUART_EnableOutEP, %function
 1340              	USBUART_EnableOutEP:
 1341              	.LFB13:
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 57


1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 58


1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 59


1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 60


2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 61


2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 62


2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 63


2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 64


2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 1342              		.loc 1 2277 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 8
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346              		@ link register save eliminated.
 1347 0000 90B4     		push	{r4, r7}
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 4, -8
 1350              		.cfi_offset 7, -4
 1351 0002 82B0     		sub	sp, sp, #8
 1352              		.cfi_def_cfa_offset 16
 1353 0004 00AF     		add	r7, sp, #0
 1354              		.cfi_def_cfa_register 7
 1355 0006 0346     		mov	r3, r0
 1356 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1357              		.loc 1 2278 0
 1358 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1359 000c 002B     		cmp	r3, #0
 1360 000e 1CD0     		beq	.L71
 1361              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1362 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1363 0012 082B     		cmp	r3, #8
 1364 0014 19D8     		bhi	.L71
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 65


 1365              		.loc 1 2280 0 is_stmt 1
 1366 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1367 0018 0E49     		ldr	r1, .L72
 1368 001a 1346     		mov	r3, r2
 1369 001c 5B00     		lsls	r3, r3, #1
 1370 001e 1344     		add	r3, r3, r2
 1371 0020 9B00     		lsls	r3, r3, #2
 1372 0022 0B44     		add	r3, r3, r1
 1373 0024 0133     		adds	r3, r3, #1
 1374 0026 0022     		movs	r2, #0
 1375 0028 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1376              		.loc 1 2283 0
 1377 002a 0B48     		ldr	r0, .L72+4
 1378 002c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1379 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1380 0030 084C     		ldr	r4, .L72
 1381 0032 1346     		mov	r3, r2
 1382 0034 5B00     		lsls	r3, r3, #1
 1383 0036 1344     		add	r3, r3, r2
 1384 0038 9B00     		lsls	r3, r3, #2
 1385 003a 2344     		add	r3, r3, r4
 1386 003c 0533     		adds	r3, r3, #5
 1387 003e 1B78     		ldrb	r3, [r3]
 1388 0040 DAB2     		uxtb	r2, r3
 1389 0042 0B01     		lsls	r3, r1, #4
 1390 0044 0344     		add	r3, r3, r0
 1391 0046 0233     		adds	r3, r3, #2
 1392 0048 1A70     		strb	r2, [r3]
 1393              	.L71:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
 1394              		.loc 1 2286 0
 1395 004a 00BF     		nop
 1396 004c 0837     		adds	r7, r7, #8
 1397              		.cfi_def_cfa_offset 8
 1398 004e BD46     		mov	sp, r7
 1399              		.cfi_def_cfa_register 13
 1400              		@ sp needed
 1401 0050 90BC     		pop	{r4, r7}
 1402              		.cfi_restore 7
 1403              		.cfi_restore 4
 1404              		.cfi_def_cfa_offset 0
 1405 0052 7047     		bx	lr
 1406              	.L73:
 1407              		.align	2
 1408              	.L72:
 1409 0054 00000000 		.word	USBUART_EP
 1410 0058 FC5F0040 		.word	1073766396
 1411              		.cfi_endproc
 1412              	.LFE13:
 1413              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1414              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1415              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 66


 1416              		.global	USBUART_DisableOutEP
 1417              		.thumb
 1418              		.thumb_func
 1419              		.type	USBUART_DisableOutEP, %function
 1420              	USBUART_DisableOutEP:
 1421              	.LFB14:
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1422              		.loc 1 2301 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 8
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 1427 0000 80B4     		push	{r7}
 1428              		.cfi_def_cfa_offset 4
 1429              		.cfi_offset 7, -4
 1430 0002 83B0     		sub	sp, sp, #12
 1431              		.cfi_def_cfa_offset 16
 1432 0004 00AF     		add	r7, sp, #0
 1433              		.cfi_def_cfa_register 7
 1434 0006 0346     		mov	r3, r0
 1435 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1436              		.loc 1 2302 0
 1437 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1438 000c 002B     		cmp	r3, #0
 1439 000e 09D0     		beq	.L76
 1440              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1441 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1442 0012 082B     		cmp	r3, #8
 1443 0014 06D8     		bhi	.L76
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1444              		.loc 1 2305 0 is_stmt 1
 1445 0016 064A     		ldr	r2, .L77
 1446 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1447 001a 1B01     		lsls	r3, r3, #4
 1448 001c 1344     		add	r3, r3, r2
 1449 001e 0233     		adds	r3, r3, #2
 1450 0020 0822     		movs	r2, #8
 1451 0022 1A70     		strb	r2, [r3]
 1452              	.L76:
2306:Generated_Source\PSoC5/USBUART.c ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 67


2307:Generated_Source\PSoC5/USBUART.c **** }
 1453              		.loc 1 2307 0
 1454 0024 00BF     		nop
 1455 0026 0C37     		adds	r7, r7, #12
 1456              		.cfi_def_cfa_offset 4
 1457 0028 BD46     		mov	sp, r7
 1458              		.cfi_def_cfa_register 13
 1459              		@ sp needed
 1460 002a 80BC     		pop	{r7}
 1461              		.cfi_restore 7
 1462              		.cfi_def_cfa_offset 0
 1463 002c 7047     		bx	lr
 1464              	.L78:
 1465 002e 00BF     		.align	2
 1466              	.L77:
 1467 0030 FC5F0040 		.word	1073766396
 1468              		.cfi_endproc
 1469              	.LFE14:
 1470              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1471              		.section	.text.USBUART_Force,"ax",%progbits
 1472              		.align	2
 1473              		.global	USBUART_Force
 1474              		.thumb
 1475              		.thumb_func
 1476              		.type	USBUART_Force, %function
 1477              	USBUART_Force:
 1478              	.LFB15:
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1479              		.loc 1 2331 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 8
 1482              		@ frame_needed = 1, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 68


 1485              		.cfi_def_cfa_offset 4
 1486              		.cfi_offset 7, -4
 1487 0002 83B0     		sub	sp, sp, #12
 1488              		.cfi_def_cfa_offset 16
 1489 0004 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 1491 0006 0346     		mov	r3, r0
 1492 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1493              		.loc 1 2335 0
 1494 000a 044A     		ldr	r2, .L80
 1495 000c FB79     		ldrb	r3, [r7, #7]
 1496 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USBUART.c **** }
 1497              		.loc 1 2336 0
 1498 0010 00BF     		nop
 1499 0012 0C37     		adds	r7, r7, #12
 1500              		.cfi_def_cfa_offset 4
 1501 0014 BD46     		mov	sp, r7
 1502              		.cfi_def_cfa_register 13
 1503              		@ sp needed
 1504 0016 80BC     		pop	{r7}
 1505              		.cfi_restore 7
 1506              		.cfi_def_cfa_offset 0
 1507 0018 7047     		bx	lr
 1508              	.L81:
 1509 001a 00BF     		.align	2
 1510              	.L80:
 1511 001c 10600040 		.word	1073766416
 1512              		.cfi_endproc
 1513              	.LFE15:
 1514              		.size	USBUART_Force, .-USBUART_Force
 1515              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1516              		.align	2
 1517              		.global	USBUART_GetEPAckState
 1518              		.thumb
 1519              		.thumb_func
 1520              		.type	USBUART_GetEPAckState, %function
 1521              	USBUART_GetEPAckState:
 1522              	.LFB16:
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 69


2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1523              		.loc 1 2356 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 16
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
 1528 0000 80B4     		push	{r7}
 1529              		.cfi_def_cfa_offset 4
 1530              		.cfi_offset 7, -4
 1531 0002 85B0     		sub	sp, sp, #20
 1532              		.cfi_def_cfa_offset 24
 1533 0004 00AF     		add	r7, sp, #0
 1534              		.cfi_def_cfa_register 7
 1535 0006 0346     		mov	r3, r0
 1536 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1537              		.loc 1 2357 0
 1538 000a 0023     		movs	r3, #0
 1539 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1540              		.loc 1 2359 0
 1541 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1542 0010 002B     		cmp	r3, #0
 1543 0012 0CD0     		beq	.L83
 1544              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1545 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1546 0016 082B     		cmp	r3, #8
 1547 0018 09D8     		bhi	.L83
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1548              		.loc 1 2361 0 is_stmt 1
 1549 001a 084A     		ldr	r2, .L85
 1550 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1551 001e 1B01     		lsls	r3, r3, #4
 1552 0020 1344     		add	r3, r3, r2
 1553 0022 0233     		adds	r3, r3, #2
 1554 0024 1B78     		ldrb	r3, [r3]
 1555 0026 DBB2     		uxtb	r3, r3
 1556 0028 03F01003 		and	r3, r3, #16
 1557 002c FB73     		strb	r3, [r7, #15]
 1558              	.L83:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
 1559              		.loc 1 2364 0
 1560 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USBUART.c **** }
 1561              		.loc 1 2365 0
 1562 0030 1846     		mov	r0, r3
 1563 0032 1437     		adds	r7, r7, #20
 1564              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 70


 1565 0034 BD46     		mov	sp, r7
 1566              		.cfi_def_cfa_register 13
 1567              		@ sp needed
 1568 0036 80BC     		pop	{r7}
 1569              		.cfi_restore 7
 1570              		.cfi_def_cfa_offset 0
 1571 0038 7047     		bx	lr
 1572              	.L86:
 1573 003a 00BF     		.align	2
 1574              	.L85:
 1575 003c FC5F0040 		.word	1073766396
 1576              		.cfi_endproc
 1577              	.LFE16:
 1578              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1579              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1580              		.align	2
 1581              		.global	USBUART_SetPowerStatus
 1582              		.thumb
 1583              		.thumb_func
 1584              		.type	USBUART_SetPowerStatus, %function
 1585              	USBUART_SetPowerStatus:
 1586              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1587              		.loc 1 2397 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 71


 1590              		@ frame_needed = 1, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
 1592 0000 80B4     		push	{r7}
 1593              		.cfi_def_cfa_offset 4
 1594              		.cfi_offset 7, -4
 1595 0002 83B0     		sub	sp, sp, #12
 1596              		.cfi_def_cfa_offset 16
 1597 0004 00AF     		add	r7, sp, #0
 1598              		.cfi_def_cfa_register 7
 1599 0006 0346     		mov	r3, r0
 1600 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1601              		.loc 1 2398 0
 1602 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1603 000c 002B     		cmp	r3, #0
 1604 000e 08D0     		beq	.L88
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1605              		.loc 1 2400 0
 1606 0010 0A4B     		ldr	r3, .L91
 1607 0012 1B78     		ldrb	r3, [r3]
 1608 0014 DBB2     		uxtb	r3, r3
 1609 0016 43F00103 		orr	r3, r3, #1
 1610 001a DAB2     		uxtb	r2, r3
 1611 001c 074B     		ldr	r3, .L91
 1612 001e 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
 1613              		.loc 1 2406 0
 1614 0020 07E0     		b	.L90
 1615              	.L88:
2404:Generated_Source\PSoC5/USBUART.c ****     }
 1616              		.loc 1 2404 0
 1617 0022 064B     		ldr	r3, .L91
 1618 0024 1B78     		ldrb	r3, [r3]
 1619 0026 DBB2     		uxtb	r3, r3
 1620 0028 23F00103 		bic	r3, r3, #1
 1621 002c DAB2     		uxtb	r2, r3
 1622 002e 034B     		ldr	r3, .L91
 1623 0030 1A70     		strb	r2, [r3]
 1624              	.L90:
 1625              		.loc 1 2406 0
 1626 0032 00BF     		nop
 1627 0034 0C37     		adds	r7, r7, #12
 1628              		.cfi_def_cfa_offset 4
 1629 0036 BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 0038 80BC     		pop	{r7}
 1633              		.cfi_restore 7
 1634              		.cfi_def_cfa_offset 0
 1635 003a 7047     		bx	lr
 1636              	.L92:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 72


 1637              		.align	2
 1638              	.L91:
 1639 003c 00000000 		.word	USBUART_deviceStatus
 1640              		.cfi_endproc
 1641              	.LFE17:
 1642              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1643              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1644              		.align	2
 1645              		.global	USBUART_RWUEnabled
 1646              		.thumb
 1647              		.thumb_func
 1648              		.type	USBUART_RWUEnabled, %function
 1649              	USBUART_RWUEnabled:
 1650              	.LFB18:
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 73


2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1651              		.loc 1 2454 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 8
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
 1655              		@ link register save eliminated.
 1656 0000 80B4     		push	{r7}
 1657              		.cfi_def_cfa_offset 4
 1658              		.cfi_offset 7, -4
 1659 0002 83B0     		sub	sp, sp, #12
 1660              		.cfi_def_cfa_offset 16
 1661 0004 00AF     		add	r7, sp, #0
 1662              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1663              		.loc 1 2455 0
 1664 0006 0023     		movs	r3, #0
 1665 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1666              		.loc 1 2457 0
 1667 000a 074B     		ldr	r3, .L96
 1668 000c 1B78     		ldrb	r3, [r3]
 1669 000e DBB2     		uxtb	r3, r3
 1670 0010 03F00203 		and	r3, r3, #2
 1671 0014 002B     		cmp	r3, #0
 1672 0016 01D0     		beq	.L94
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1673              		.loc 1 2459 0
 1674 0018 0123     		movs	r3, #1
 1675 001a FB71     		strb	r3, [r7, #7]
 1676              	.L94:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
 1677              		.loc 1 2462 0
 1678 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USBUART.c **** }
 1679              		.loc 1 2463 0
 1680 001e 1846     		mov	r0, r3
 1681 0020 0C37     		adds	r7, r7, #12
 1682              		.cfi_def_cfa_offset 4
 1683 0022 BD46     		mov	sp, r7
 1684              		.cfi_def_cfa_register 13
 1685              		@ sp needed
 1686 0024 80BC     		pop	{r7}
 1687              		.cfi_restore 7
 1688              		.cfi_def_cfa_offset 0
 1689 0026 7047     		bx	lr
 1690              	.L97:
 1691              		.align	2
 1692              	.L96:
 1693 0028 00000000 		.word	USBUART_deviceStatus
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 74


 1694              		.cfi_endproc
 1695              	.LFE18:
 1696              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1697              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1698              		.align	2
 1699              		.global	USBUART_GetDeviceAddress
 1700              		.thumb
 1701              		.thumb_func
 1702              		.type	USBUART_GetDeviceAddress, %function
 1703              	USBUART_GetDeviceAddress:
 1704              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 1705              		.loc 1 2478 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709              		@ link register save eliminated.
 1710 0000 80B4     		push	{r7}
 1711              		.cfi_def_cfa_offset 4
 1712              		.cfi_offset 7, -4
 1713 0002 00AF     		add	r7, sp, #0
 1714              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1715              		.loc 1 2479 0
 1716 0004 044B     		ldr	r3, .L100
 1717 0006 1B78     		ldrb	r3, [r3]
 1718 0008 DBB2     		uxtb	r3, r3
 1719 000a 03F07F03 		and	r3, r3, #127
 1720 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USBUART.c **** }
 1721              		.loc 1 2480 0
 1722 0010 1846     		mov	r0, r3
 1723 0012 BD46     		mov	sp, r7
 1724              		.cfi_def_cfa_register 13
 1725              		@ sp needed
 1726 0014 80BC     		pop	{r7}
 1727              		.cfi_restore 7
 1728              		.cfi_def_cfa_offset 0
 1729 0016 7047     		bx	lr
 1730              	.L101:
 1731              		.align	2
 1732              	.L100:
 1733 0018 08600040 		.word	1073766408
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 75


 1734              		.cfi_endproc
 1735              	.LFE19:
 1736              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1737              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1738              		.align	2
 1739              		.global	USBUART_EnableSofInt
 1740              		.thumb
 1741              		.thumb_func
 1742              		.type	USBUART_EnableSofInt, %function
 1743              	USBUART_EnableSofInt:
 1744              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1745              		.loc 1 2492 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 0
 1748              		@ frame_needed = 1, uses_anonymous_args = 0
 1749              		@ link register save eliminated.
 1750 0000 80B4     		push	{r7}
 1751              		.cfi_def_cfa_offset 4
 1752              		.cfi_offset 7, -4
 1753 0002 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1755              		.loc 1 2499 0
 1756 0004 034B     		ldr	r3, .L103
 1757 0006 4FF40012 		mov	r2, #2097152
 1758 000a 1A60     		str	r2, [r3]
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
 1759              		.loc 1 2502 0
 1760 000c 00BF     		nop
 1761 000e BD46     		mov	sp, r7
 1762              		.cfi_def_cfa_register 13
 1763              		@ sp needed
 1764 0010 80BC     		pop	{r7}
 1765              		.cfi_restore 7
 1766              		.cfi_def_cfa_offset 0
 1767 0012 7047     		bx	lr
 1768              	.L104:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 76


 1769              		.align	2
 1770              	.L103:
 1771 0014 00E100E0 		.word	-536813312
 1772              		.cfi_endproc
 1773              	.LFE20:
 1774              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1775              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1776              		.align	2
 1777              		.global	USBUART_DisableSofInt
 1778              		.thumb
 1779              		.thumb_func
 1780              		.type	USBUART_DisableSofInt, %function
 1781              	USBUART_DisableSofInt:
 1782              	.LFB21:
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1783              		.loc 1 2514 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 1, uses_anonymous_args = 0
 1787              		@ link register save eliminated.
 1788 0000 80B4     		push	{r7}
 1789              		.cfi_def_cfa_offset 4
 1790              		.cfi_offset 7, -4
 1791 0002 00AF     		add	r7, sp, #0
 1792              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1793              		.loc 1 2521 0
 1794 0004 034B     		ldr	r3, .L106
 1795 0006 4FF40012 		mov	r2, #2097152
 1796 000a 1A60     		str	r2, [r3]
2522:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USBUART.c **** }
 1797              		.loc 1 2524 0
 1798 000c 00BF     		nop
 1799 000e BD46     		mov	sp, r7
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 0010 80BC     		pop	{r7}
 1803              		.cfi_restore 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 77


 1804              		.cfi_def_cfa_offset 0
 1805 0012 7047     		bx	lr
 1806              	.L107:
 1807              		.align	2
 1808              	.L106:
 1809 0014 80E100E0 		.word	-536813184
 1810              		.cfi_endproc
 1811              	.LFE21:
 1812              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1813              		.text
 1814              	.Letext0:
 1815              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1816              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1817              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1818              		.section	.debug_info,"",%progbits
 1819              	.Ldebug_info0:
 1820 0000 0C070000 		.4byte	0x70c
 1821 0004 0400     		.2byte	0x4
 1822 0006 00000000 		.4byte	.Ldebug_abbrev0
 1823 000a 04       		.byte	0x4
 1824 000b 01       		.uleb128 0x1
 1825 000c 53030000 		.4byte	.LASF91
 1826 0010 0C       		.byte	0xc
 1827 0011 EC020000 		.4byte	.LASF92
 1828 0015 E7000000 		.4byte	.LASF93
 1829 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1830 001d 00000000 		.4byte	0
 1831 0021 00000000 		.4byte	.Ldebug_line0
 1832 0025 02       		.uleb128 0x2
 1833 0026 01       		.byte	0x1
 1834 0027 06       		.byte	0x6
 1835 0028 4F000000 		.4byte	.LASF0
 1836 002c 02       		.uleb128 0x2
 1837 002d 01       		.byte	0x1
 1838 002e 08       		.byte	0x8
 1839 002f 5C040000 		.4byte	.LASF1
 1840 0033 02       		.uleb128 0x2
 1841 0034 02       		.byte	0x2
 1842 0035 05       		.byte	0x5
 1843 0036 6A040000 		.4byte	.LASF2
 1844 003a 02       		.uleb128 0x2
 1845 003b 02       		.byte	0x2
 1846 003c 07       		.byte	0x7
 1847 003d 6F020000 		.4byte	.LASF3
 1848 0041 02       		.uleb128 0x2
 1849 0042 04       		.byte	0x4
 1850 0043 05       		.byte	0x5
 1851 0044 94010000 		.4byte	.LASF4
 1852 0048 02       		.uleb128 0x2
 1853 0049 04       		.byte	0x4
 1854 004a 07       		.byte	0x7
 1855 004b 5D020000 		.4byte	.LASF5
 1856 004f 02       		.uleb128 0x2
 1857 0050 08       		.byte	0x8
 1858 0051 05       		.byte	0x5
 1859 0052 D9000000 		.4byte	.LASF6
 1860 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 78


 1861 0057 08       		.byte	0x8
 1862 0058 07       		.byte	0x7
 1863 0059 83000000 		.4byte	.LASF7
 1864 005d 03       		.uleb128 0x3
 1865 005e 04       		.byte	0x4
 1866 005f 05       		.byte	0x5
 1867 0060 696E7400 		.ascii	"int\000"
 1868 0064 02       		.uleb128 0x2
 1869 0065 04       		.byte	0x4
 1870 0066 07       		.byte	0x7
 1871 0067 50020000 		.4byte	.LASF8
 1872 006b 04       		.uleb128 0x4
 1873 006c 9D010000 		.4byte	.LASF9
 1874 0070 02       		.byte	0x2
 1875 0071 E701     		.2byte	0x1e7
 1876 0073 2C000000 		.4byte	0x2c
 1877 0077 04       		.uleb128 0x4
 1878 0078 00000000 		.4byte	.LASF10
 1879 007c 02       		.byte	0x2
 1880 007d E801     		.2byte	0x1e8
 1881 007f 3A000000 		.4byte	0x3a
 1882 0083 04       		.uleb128 0x4
 1883 0084 1E020000 		.4byte	.LASF11
 1884 0088 02       		.byte	0x2
 1885 0089 E901     		.2byte	0x1e9
 1886 008b 48000000 		.4byte	0x48
 1887 008f 02       		.uleb128 0x2
 1888 0090 04       		.byte	0x4
 1889 0091 04       		.byte	0x4
 1890 0092 1B040000 		.4byte	.LASF12
 1891 0096 02       		.uleb128 0x2
 1892 0097 08       		.byte	0x8
 1893 0098 04       		.byte	0x4
 1894 0099 B1010000 		.4byte	.LASF13
 1895 009d 02       		.uleb128 0x2
 1896 009e 01       		.byte	0x1
 1897 009f 08       		.byte	0x8
 1898 00a0 CD040000 		.4byte	.LASF14
 1899 00a4 04       		.uleb128 0x4
 1900 00a5 3E040000 		.4byte	.LASF15
 1901 00a9 02       		.byte	0x2
 1902 00aa 9102     		.2byte	0x291
 1903 00ac B0000000 		.4byte	0xb0
 1904 00b0 05       		.uleb128 0x5
 1905 00b1 6B000000 		.4byte	0x6b
 1906 00b5 04       		.uleb128 0x4
 1907 00b6 D0020000 		.4byte	.LASF16
 1908 00ba 02       		.byte	0x2
 1909 00bb 9302     		.2byte	0x293
 1910 00bd C1000000 		.4byte	0xc1
 1911 00c1 05       		.uleb128 0x5
 1912 00c2 83000000 		.4byte	0x83
 1913 00c6 02       		.uleb128 0x2
 1914 00c7 04       		.byte	0x4
 1915 00c8 07       		.byte	0x7
 1916 00c9 44030000 		.4byte	.LASF17
 1917 00cd 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 79


 1918 00ce 0C       		.byte	0xc
 1919 00cf 03       		.byte	0x3
 1920 00d0 8E       		.byte	0x8e
 1921 00d1 42010000 		.4byte	0x142
 1922 00d5 07       		.uleb128 0x7
 1923 00d6 F8030000 		.4byte	.LASF18
 1924 00da 03       		.byte	0x3
 1925 00db 90       		.byte	0x90
 1926 00dc 6B000000 		.4byte	0x6b
 1927 00e0 00       		.byte	0
 1928 00e1 07       		.uleb128 0x7
 1929 00e2 33040000 		.4byte	.LASF19
 1930 00e6 03       		.byte	0x3
 1931 00e7 91       		.byte	0x91
 1932 00e8 6B000000 		.4byte	0x6b
 1933 00ec 01       		.byte	0x1
 1934 00ed 07       		.uleb128 0x7
 1935 00ee 23030000 		.4byte	.LASF20
 1936 00f2 03       		.byte	0x3
 1937 00f3 92       		.byte	0x92
 1938 00f4 6B000000 		.4byte	0x6b
 1939 00f8 02       		.byte	0x2
 1940 00f9 07       		.uleb128 0x7
 1941 00fa A3010000 		.4byte	.LASF21
 1942 00fe 03       		.byte	0x3
 1943 00ff 93       		.byte	0x93
 1944 0100 6B000000 		.4byte	0x6b
 1945 0104 03       		.byte	0x3
 1946 0105 07       		.uleb128 0x7
 1947 0106 9A000000 		.4byte	.LASF22
 1948 010a 03       		.byte	0x3
 1949 010b 94       		.byte	0x94
 1950 010c 6B000000 		.4byte	0x6b
 1951 0110 04       		.byte	0x4
 1952 0111 07       		.uleb128 0x7
 1953 0112 2B020000 		.4byte	.LASF23
 1954 0116 03       		.byte	0x3
 1955 0117 95       		.byte	0x95
 1956 0118 6B000000 		.4byte	0x6b
 1957 011c 05       		.byte	0x5
 1958 011d 07       		.uleb128 0x7
 1959 011e F9040000 		.4byte	.LASF24
 1960 0122 03       		.byte	0x3
 1961 0123 96       		.byte	0x96
 1962 0124 77000000 		.4byte	0x77
 1963 0128 06       		.byte	0x6
 1964 0129 07       		.uleb128 0x7
 1965 012a D7040000 		.4byte	.LASF25
 1966 012e 03       		.byte	0x3
 1967 012f 97       		.byte	0x97
 1968 0130 77000000 		.4byte	0x77
 1969 0134 08       		.byte	0x8
 1970 0135 07       		.uleb128 0x7
 1971 0136 BF020000 		.4byte	.LASF26
 1972 013a 03       		.byte	0x3
 1973 013b 98       		.byte	0x98
 1974 013c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 80


 1975 0140 0A       		.byte	0xa
 1976 0141 00       		.byte	0
 1977 0142 08       		.uleb128 0x8
 1978 0143 E2040000 		.4byte	.LASF27
 1979 0147 03       		.byte	0x3
 1980 0148 99       		.byte	0x99
 1981 0149 CD000000 		.4byte	0xcd
 1982 014d 06       		.uleb128 0x6
 1983 014e 10       		.byte	0x10
 1984 014f 03       		.byte	0x3
 1985 0150 D5       		.byte	0xd5
 1986 0151 86010000 		.4byte	0x186
 1987 0155 07       		.uleb128 0x7
 1988 0156 07040000 		.4byte	.LASF28
 1989 015a 03       		.byte	0x3
 1990 015b D7       		.byte	0xd7
 1991 015c 6B000000 		.4byte	0x6b
 1992 0160 00       		.byte	0
 1993 0161 07       		.uleb128 0x7
 1994 0162 0E040000 		.4byte	.LASF29
 1995 0166 03       		.byte	0x3
 1996 0167 D8       		.byte	0xd8
 1997 0168 6B000000 		.4byte	0x6b
 1998 016c 01       		.byte	0x1
 1999 016d 07       		.uleb128 0x7
 2000 016e 15040000 		.4byte	.LASF30
 2001 0172 03       		.byte	0x3
 2002 0173 D9       		.byte	0xd9
 2003 0174 6B000000 		.4byte	0x6b
 2004 0178 02       		.byte	0x2
 2005 0179 09       		.uleb128 0x9
 2006 017a 67617000 		.ascii	"gap\000"
 2007 017e 03       		.byte	0x3
 2008 017f DA       		.byte	0xda
 2009 0180 86010000 		.4byte	0x186
 2010 0184 03       		.byte	0x3
 2011 0185 00       		.byte	0
 2012 0186 0A       		.uleb128 0xa
 2013 0187 6B000000 		.4byte	0x6b
 2014 018b 96010000 		.4byte	0x196
 2015 018f 0B       		.uleb128 0xb
 2016 0190 C6000000 		.4byte	0xc6
 2017 0194 0C       		.byte	0xc
 2018 0195 00       		.byte	0
 2019 0196 08       		.uleb128 0x8
 2020 0197 A9040000 		.4byte	.LASF31
 2021 019b 03       		.byte	0x3
 2022 019c DB       		.byte	0xdb
 2023 019d 4D010000 		.4byte	0x14d
 2024 01a1 06       		.uleb128 0x6
 2025 01a2 10       		.byte	0x10
 2026 01a3 03       		.byte	0x3
 2027 01a4 E7       		.byte	0xe7
 2028 01a5 22020000 		.4byte	0x222
 2029 01a9 07       		.uleb128 0x7
 2030 01aa 9F000000 		.4byte	.LASF32
 2031 01ae 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 81


 2032 01af E9       		.byte	0xe9
 2033 01b0 6B000000 		.4byte	0x6b
 2034 01b4 00       		.byte	0
 2035 01b5 07       		.uleb128 0x7
 2036 01b6 88050000 		.4byte	.LASF33
 2037 01ba 03       		.byte	0x3
 2038 01bb EA       		.byte	0xea
 2039 01bc 6B000000 		.4byte	0x6b
 2040 01c0 01       		.byte	0x1
 2041 01c1 07       		.uleb128 0x7
 2042 01c2 F1010000 		.4byte	.LASF34
 2043 01c6 03       		.byte	0x3
 2044 01c7 EB       		.byte	0xeb
 2045 01c8 6B000000 		.4byte	0x6b
 2046 01cc 02       		.byte	0x2
 2047 01cd 07       		.uleb128 0x7
 2048 01ce 32020000 		.4byte	.LASF35
 2049 01d2 03       		.byte	0x3
 2050 01d3 EC       		.byte	0xec
 2051 01d4 6B000000 		.4byte	0x6b
 2052 01d8 03       		.byte	0x3
 2053 01d9 07       		.uleb128 0x7
 2054 01da AC010000 		.4byte	.LASF36
 2055 01de 03       		.byte	0x3
 2056 01df ED       		.byte	0xed
 2057 01e0 6B000000 		.4byte	0x6b
 2058 01e4 04       		.byte	0x4
 2059 01e5 07       		.uleb128 0x7
 2060 01e6 A1040000 		.4byte	.LASF37
 2061 01ea 03       		.byte	0x3
 2062 01eb EE       		.byte	0xee
 2063 01ec 6B000000 		.4byte	0x6b
 2064 01f0 05       		.byte	0x5
 2065 01f1 07       		.uleb128 0x7
 2066 01f2 87040000 		.4byte	.LASF38
 2067 01f6 03       		.byte	0x3
 2068 01f7 EF       		.byte	0xef
 2069 01f8 6B000000 		.4byte	0x6b
 2070 01fc 06       		.byte	0x6
 2071 01fd 07       		.uleb128 0x7
 2072 01fe FF030000 		.4byte	.LASF39
 2073 0202 03       		.byte	0x3
 2074 0203 F0       		.byte	0xf0
 2075 0204 6B000000 		.4byte	0x6b
 2076 0208 07       		.byte	0x7
 2077 0209 07       		.uleb128 0x7
 2078 020a 38050000 		.4byte	.LASF40
 2079 020e 03       		.byte	0x3
 2080 020f F1       		.byte	0xf1
 2081 0210 6B000000 		.4byte	0x6b
 2082 0214 08       		.byte	0x8
 2083 0215 09       		.uleb128 0x9
 2084 0216 67617000 		.ascii	"gap\000"
 2085 021a 03       		.byte	0x3
 2086 021b F2       		.byte	0xf2
 2087 021c 22020000 		.4byte	0x222
 2088 0220 09       		.byte	0x9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 82


 2089 0221 00       		.byte	0
 2090 0222 0A       		.uleb128 0xa
 2091 0223 6B000000 		.4byte	0x6b
 2092 0227 32020000 		.4byte	0x232
 2093 022b 0B       		.uleb128 0xb
 2094 022c C6000000 		.4byte	0xc6
 2095 0230 06       		.byte	0x6
 2096 0231 00       		.byte	0
 2097 0232 08       		.uleb128 0x8
 2098 0233 0D030000 		.4byte	.LASF41
 2099 0237 03       		.byte	0x3
 2100 0238 F3       		.byte	0xf3
 2101 0239 A1010000 		.4byte	0x1a1
 2102 023d 0C       		.uleb128 0xc
 2103 023e 90       		.byte	0x90
 2104 023f 03       		.byte	0x3
 2105 0240 0F01     		.2byte	0x10f
 2106 0242 54020000 		.4byte	0x254
 2107 0246 0D       		.uleb128 0xd
 2108 0247 4D030000 		.4byte	.LASF42
 2109 024b 03       		.byte	0x3
 2110 024c 1101     		.2byte	0x111
 2111 024e 54020000 		.4byte	0x254
 2112 0252 00       		.byte	0
 2113 0253 00       		.byte	0
 2114 0254 0A       		.uleb128 0xa
 2115 0255 96010000 		.4byte	0x196
 2116 0259 64020000 		.4byte	0x264
 2117 025d 0B       		.uleb128 0xb
 2118 025e C6000000 		.4byte	0xc6
 2119 0262 08       		.byte	0x8
 2120 0263 00       		.byte	0
 2121 0264 04       		.uleb128 0x4
 2122 0265 67010000 		.4byte	.LASF43
 2123 0269 03       		.byte	0x3
 2124 026a 1201     		.2byte	0x112
 2125 026c 3D020000 		.4byte	0x23d
 2126 0270 0C       		.uleb128 0xc
 2127 0271 90       		.byte	0x90
 2128 0272 03       		.byte	0x3
 2129 0273 1501     		.2byte	0x115
 2130 0275 87020000 		.4byte	0x287
 2131 0279 0D       		.uleb128 0xd
 2132 027a B9020000 		.4byte	.LASF44
 2133 027e 03       		.byte	0x3
 2134 027f 1701     		.2byte	0x117
 2135 0281 87020000 		.4byte	0x287
 2136 0285 00       		.byte	0
 2137 0286 00       		.byte	0
 2138 0287 0A       		.uleb128 0xa
 2139 0288 32020000 		.4byte	0x232
 2140 028c 97020000 		.4byte	0x297
 2141 0290 0B       		.uleb128 0xb
 2142 0291 C6000000 		.4byte	0xc6
 2143 0295 08       		.byte	0x8
 2144 0296 00       		.byte	0
 2145 0297 04       		.uleb128 0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 83


 2146 0298 2D030000 		.4byte	.LASF45
 2147 029c 03       		.byte	0x3
 2148 029d 1801     		.2byte	0x118
 2149 029f 70020000 		.4byte	0x270
 2150 02a3 0E       		.uleb128 0xe
 2151 02a4 82020000 		.4byte	.LASF48
 2152 02a8 01       		.byte	0x1
 2153 02a9 BA       		.byte	0xba
 2154 02aa 00000000 		.4byte	.LFB0
 2155 02ae 3C000000 		.4byte	.LFE0-.LFB0
 2156 02b2 01       		.uleb128 0x1
 2157 02b3 9C       		.byte	0x9c
 2158 02b4 D5020000 		.4byte	0x2d5
 2159 02b8 0F       		.uleb128 0xf
 2160 02b9 B9000000 		.4byte	.LASF46
 2161 02bd 01       		.byte	0x1
 2162 02be BA       		.byte	0xba
 2163 02bf 6B000000 		.4byte	0x6b
 2164 02c3 02       		.uleb128 0x2
 2165 02c4 91       		.byte	0x91
 2166 02c5 77       		.sleb128 -9
 2167 02c6 0F       		.uleb128 0xf
 2168 02c7 D2040000 		.4byte	.LASF47
 2169 02cb 01       		.byte	0x1
 2170 02cc BA       		.byte	0xba
 2171 02cd 6B000000 		.4byte	0x6b
 2172 02d1 02       		.uleb128 0x2
 2173 02d2 91       		.byte	0x91
 2174 02d3 76       		.sleb128 -10
 2175 02d4 00       		.byte	0
 2176 02d5 0E       		.uleb128 0xe
 2177 02d6 AC020000 		.4byte	.LASF49
 2178 02da 01       		.byte	0x1
 2179 02db D3       		.byte	0xd3
 2180 02dc 00000000 		.4byte	.LFB1
 2181 02e0 A4010000 		.4byte	.LFE1-.LFB1
 2182 02e4 01       		.uleb128 0x1
 2183 02e5 9C       		.byte	0x9c
 2184 02e6 F9020000 		.4byte	0x2f9
 2185 02ea 10       		.uleb128 0x10
 2186 02eb 27050000 		.4byte	.LASF52
 2187 02ef 01       		.byte	0x1
 2188 02f0 FA       		.byte	0xfa
 2189 02f1 6B000000 		.4byte	0x6b
 2190 02f5 02       		.uleb128 0x2
 2191 02f6 91       		.byte	0x91
 2192 02f7 77       		.sleb128 -9
 2193 02f8 00       		.byte	0
 2194 02f9 11       		.uleb128 0x11
 2195 02fa 3D050000 		.4byte	.LASF50
 2196 02fe 01       		.byte	0x1
 2197 02ff CC01     		.2byte	0x1cc
 2198 0301 00000000 		.4byte	.LFB2
 2199 0305 04010000 		.4byte	.LFE2-.LFB2
 2200 0309 01       		.uleb128 0x1
 2201 030a 9C       		.byte	0x9c
 2202 030b 2E030000 		.4byte	0x32e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 84


 2203 030f 12       		.uleb128 0x12
 2204 0310 B9000000 		.4byte	.LASF46
 2205 0314 01       		.byte	0x1
 2206 0315 CC01     		.2byte	0x1cc
 2207 0317 6B000000 		.4byte	0x6b
 2208 031b 02       		.uleb128 0x2
 2209 031c 91       		.byte	0x91
 2210 031d 77       		.sleb128 -9
 2211 031e 12       		.uleb128 0x12
 2212 031f D2040000 		.4byte	.LASF47
 2213 0323 01       		.byte	0x1
 2214 0324 CC01     		.2byte	0x1cc
 2215 0326 6B000000 		.4byte	0x6b
 2216 032a 02       		.uleb128 0x2
 2217 032b 91       		.byte	0x91
 2218 032c 76       		.sleb128 -10
 2219 032d 00       		.byte	0
 2220 032e 13       		.uleb128 0x13
 2221 032f 90050000 		.4byte	.LASF77
 2222 0333 01       		.byte	0x1
 2223 0334 9F02     		.2byte	0x29f
 2224 0336 00000000 		.4byte	.LFB3
 2225 033a 68000000 		.4byte	.LFE3-.LFB3
 2226 033e 01       		.uleb128 0x1
 2227 033f 9C       		.byte	0x9c
 2228 0340 11       		.uleb128 0x11
 2229 0341 2F000000 		.4byte	.LASF51
 2230 0345 01       		.byte	0x1
 2231 0346 D902     		.2byte	0x2d9
 2232 0348 00000000 		.4byte	.LFB4
 2233 034c 10010000 		.4byte	.LFE4-.LFB4
 2234 0350 01       		.uleb128 0x1
 2235 0351 9C       		.byte	0x9c
 2236 0352 66030000 		.4byte	0x366
 2237 0356 14       		.uleb128 0x14
 2238 0357 27050000 		.4byte	.LASF52
 2239 035b 01       		.byte	0x1
 2240 035c DB02     		.2byte	0x2db
 2241 035e 6B000000 		.4byte	0x6b
 2242 0362 02       		.uleb128 0x2
 2243 0363 91       		.byte	0x91
 2244 0364 77       		.sleb128 -9
 2245 0365 00       		.byte	0
 2246 0366 15       		.uleb128 0x15
 2247 0367 7E010000 		.4byte	.LASF54
 2248 036b 01       		.byte	0x1
 2249 036c 5103     		.2byte	0x351
 2250 036e 6B000000 		.4byte	0x6b
 2251 0372 00000000 		.4byte	.LFB5
 2252 0376 38000000 		.4byte	.LFE5-.LFB5
 2253 037a 01       		.uleb128 0x1
 2254 037b 9C       		.byte	0x9c
 2255 037c 90030000 		.4byte	0x390
 2256 0380 14       		.uleb128 0x14
 2257 0381 C9020000 		.4byte	.LASF53
 2258 0385 01       		.byte	0x1
 2259 0386 5303     		.2byte	0x353
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 85


 2260 0388 6B000000 		.4byte	0x6b
 2261 038c 02       		.uleb128 0x2
 2262 038d 91       		.byte	0x91
 2263 038e 77       		.sleb128 -9
 2264 038f 00       		.byte	0
 2265 0390 16       		.uleb128 0x16
 2266 0391 C0000000 		.4byte	.LASF75
 2267 0395 01       		.byte	0x1
 2268 0396 6803     		.2byte	0x368
 2269 0398 6B000000 		.4byte	0x6b
 2270 039c 00000000 		.4byte	.LFB6
 2271 03a0 18000000 		.4byte	.LFE6-.LFB6
 2272 03a4 01       		.uleb128 0x1
 2273 03a5 9C       		.byte	0x9c
 2274 03a6 15       		.uleb128 0x15
 2275 03a7 69050000 		.4byte	.LASF55
 2276 03ab 01       		.byte	0x1
 2277 03ac 8203     		.2byte	0x382
 2278 03ae 6B000000 		.4byte	0x6b
 2279 03b2 00000000 		.4byte	.LFB7
 2280 03b6 30000000 		.4byte	.LFE7-.LFB7
 2281 03ba 01       		.uleb128 0x1
 2282 03bb 9C       		.byte	0x9c
 2283 03bc D0030000 		.4byte	0x3d0
 2284 03c0 17       		.uleb128 0x17
 2285 03c1 72657300 		.ascii	"res\000"
 2286 03c5 01       		.byte	0x1
 2287 03c6 8403     		.2byte	0x384
 2288 03c8 6B000000 		.4byte	0x6b
 2289 03cc 02       		.uleb128 0x2
 2290 03cd 91       		.byte	0x91
 2291 03ce 77       		.sleb128 -9
 2292 03cf 00       		.byte	0
 2293 03d0 15       		.uleb128 0x15
 2294 03d1 90020000 		.4byte	.LASF56
 2295 03d5 01       		.byte	0x1
 2296 03d6 9F03     		.2byte	0x39f
 2297 03d8 6B000000 		.4byte	0x6b
 2298 03dc 00000000 		.4byte	.LFB8
 2299 03e0 20000000 		.4byte	.LFE8-.LFB8
 2300 03e4 01       		.uleb128 0x1
 2301 03e5 9C       		.byte	0x9c
 2302 03e6 FA030000 		.4byte	0x3fa
 2303 03ea 12       		.uleb128 0x12
 2304 03eb 04050000 		.4byte	.LASF57
 2305 03ef 01       		.byte	0x1
 2306 03f0 9F03     		.2byte	0x39f
 2307 03f2 6B000000 		.4byte	0x6b
 2308 03f6 02       		.uleb128 0x2
 2309 03f7 91       		.byte	0x91
 2310 03f8 77       		.sleb128 -9
 2311 03f9 00       		.byte	0
 2312 03fa 15       		.uleb128 0x15
 2313 03fb 74040000 		.4byte	.LASF58
 2314 03ff 01       		.byte	0x1
 2315 0400 BF03     		.2byte	0x3bf
 2316 0402 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 86


 2317 0406 00000000 		.4byte	.LFB9
 2318 040a 2C000000 		.4byte	.LFE9-.LFB9
 2319 040e 01       		.uleb128 0x1
 2320 040f 9C       		.byte	0x9c
 2321 0410 24040000 		.4byte	0x424
 2322 0414 12       		.uleb128 0x12
 2323 0415 B0000000 		.4byte	.LASF59
 2324 0419 01       		.byte	0x1
 2325 041a BF03     		.2byte	0x3bf
 2326 041c 6B000000 		.4byte	0x6b
 2327 0420 02       		.uleb128 0x2
 2328 0421 91       		.byte	0x91
 2329 0422 77       		.sleb128 -9
 2330 0423 00       		.byte	0
 2331 0424 15       		.uleb128 0x15
 2332 0425 14050000 		.4byte	.LASF60
 2333 0429 01       		.byte	0x1
 2334 042a D603     		.2byte	0x3d6
 2335 042c 77000000 		.4byte	0x77
 2336 0430 00000000 		.4byte	.LFB10
 2337 0434 60000000 		.4byte	.LFE10-.LFB10
 2338 0438 01       		.uleb128 0x1
 2339 0439 9C       		.byte	0x9c
 2340 043a 5D040000 		.4byte	0x45d
 2341 043e 12       		.uleb128 0x12
 2342 043f B0000000 		.4byte	.LASF59
 2343 0443 01       		.byte	0x1
 2344 0444 D603     		.2byte	0x3d6
 2345 0446 6B000000 		.4byte	0x6b
 2346 044a 02       		.uleb128 0x2
 2347 044b 91       		.byte	0x91
 2348 044c 6F       		.sleb128 -17
 2349 044d 14       		.uleb128 0x14
 2350 044e 62010000 		.4byte	.LASF61
 2351 0452 01       		.byte	0x1
 2352 0453 D803     		.2byte	0x3d8
 2353 0455 77000000 		.4byte	0x77
 2354 0459 02       		.uleb128 0x2
 2355 045a 91       		.byte	0x91
 2356 045b 76       		.sleb128 -10
 2357 045c 00       		.byte	0
 2358 045d 18       		.uleb128 0x18
 2359 045e 72000000 		.4byte	.LASF62
 2360 0462 01       		.byte	0x1
 2361 0463 3E05     		.2byte	0x53e
 2362 0465 00000000 		.4byte	.LFB11
 2363 0469 08010000 		.4byte	.LFE11-.LFB11
 2364 046d 01       		.uleb128 0x1
 2365 046e 9C       		.byte	0x9c
 2366 046f B8040000 		.4byte	0x4b8
 2367 0473 12       		.uleb128 0x12
 2368 0474 B0000000 		.4byte	.LASF59
 2369 0478 01       		.byte	0x1
 2370 0479 3E05     		.2byte	0x53e
 2371 047b 6B000000 		.4byte	0x6b
 2372 047f 02       		.uleb128 0x2
 2373 0480 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 87


 2374 0481 67       		.sleb128 -25
 2375 0482 12       		.uleb128 0x12
 2376 0483 25020000 		.4byte	.LASF63
 2377 0487 01       		.byte	0x1
 2378 0488 3E05     		.2byte	0x53e
 2379 048a B8040000 		.4byte	0x4b8
 2380 048e 02       		.uleb128 0x2
 2381 048f 91       		.byte	0x91
 2382 0490 60       		.sleb128 -32
 2383 0491 12       		.uleb128 0x12
 2384 0492 C6040000 		.4byte	.LASF64
 2385 0496 01       		.byte	0x1
 2386 0497 3E05     		.2byte	0x53e
 2387 0499 77000000 		.4byte	0x77
 2388 049d 02       		.uleb128 0x2
 2389 049e 91       		.byte	0x91
 2390 049f 64       		.sleb128 -28
 2391 04a0 19       		.uleb128 0x19
 2392 04a1 96000000 		.4byte	.LBB2
 2393 04a5 28000000 		.4byte	.LBE2-.LBB2
 2394 04a9 17       		.uleb128 0x17
 2395 04aa 6900     		.ascii	"i\000"
 2396 04ac 01       		.byte	0x1
 2397 04ad 5305     		.2byte	0x553
 2398 04af 77000000 		.4byte	0x77
 2399 04b3 02       		.uleb128 0x2
 2400 04b4 91       		.byte	0x91
 2401 04b5 6E       		.sleb128 -18
 2402 04b6 00       		.byte	0
 2403 04b7 00       		.byte	0
 2404 04b8 1A       		.uleb128 0x1a
 2405 04b9 04       		.byte	0x4
 2406 04ba BE040000 		.4byte	0x4be
 2407 04be 1B       		.uleb128 0x1b
 2408 04bf 6B000000 		.4byte	0x6b
 2409 04c3 1C       		.uleb128 0x1c
 2410 04c4 21040000 		.4byte	.LASF65
 2411 04c8 01       		.byte	0x1
 2412 04c9 7506     		.2byte	0x675
 2413 04cb 77000000 		.4byte	0x77
 2414 04cf 00000000 		.4byte	.LFB12
 2415 04d3 8C000000 		.4byte	.LFE12-.LFB12
 2416 04d7 01       		.uleb128 0x1
 2417 04d8 9C       		.byte	0x9c
 2418 04d9 22050000 		.4byte	0x522
 2419 04dd 12       		.uleb128 0x12
 2420 04de B0000000 		.4byte	.LASF59
 2421 04e2 01       		.byte	0x1
 2422 04e3 7506     		.2byte	0x675
 2423 04e5 6B000000 		.4byte	0x6b
 2424 04e9 02       		.uleb128 0x2
 2425 04ea 91       		.byte	0x91
 2426 04eb 6F       		.sleb128 -17
 2427 04ec 12       		.uleb128 0x12
 2428 04ed 25020000 		.4byte	.LASF63
 2429 04f1 01       		.byte	0x1
 2430 04f2 7506     		.2byte	0x675
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 88


 2431 04f4 22050000 		.4byte	0x522
 2432 04f8 02       		.uleb128 0x2
 2433 04f9 91       		.byte	0x91
 2434 04fa 68       		.sleb128 -24
 2435 04fb 12       		.uleb128 0x12
 2436 04fc C6040000 		.4byte	.LASF64
 2437 0500 01       		.byte	0x1
 2438 0501 7506     		.2byte	0x675
 2439 0503 77000000 		.4byte	0x77
 2440 0507 02       		.uleb128 0x2
 2441 0508 91       		.byte	0x91
 2442 0509 6C       		.sleb128 -20
 2443 050a 19       		.uleb128 0x19
 2444 050b 44000000 		.4byte	.LBB3
 2445 050f 2A000000 		.4byte	.LBE3-.LBB3
 2446 0513 17       		.uleb128 0x17
 2447 0514 6900     		.ascii	"i\000"
 2448 0516 01       		.byte	0x1
 2449 0517 8206     		.2byte	0x682
 2450 0519 77000000 		.4byte	0x77
 2451 051d 02       		.uleb128 0x2
 2452 051e 91       		.byte	0x91
 2453 051f 76       		.sleb128 -10
 2454 0520 00       		.byte	0
 2455 0521 00       		.byte	0
 2456 0522 1A       		.uleb128 0x1a
 2457 0523 04       		.byte	0x4
 2458 0524 6B000000 		.4byte	0x6b
 2459 0528 18       		.uleb128 0x18
 2460 0529 38010000 		.4byte	.LASF66
 2461 052d 01       		.byte	0x1
 2462 052e E408     		.2byte	0x8e4
 2463 0530 00000000 		.4byte	.LFB13
 2464 0534 5C000000 		.4byte	.LFE13-.LFB13
 2465 0538 01       		.uleb128 0x1
 2466 0539 9C       		.byte	0x9c
 2467 053a 4E050000 		.4byte	0x54e
 2468 053e 12       		.uleb128 0x12
 2469 053f B0000000 		.4byte	.LASF59
 2470 0543 01       		.byte	0x1
 2471 0544 E408     		.2byte	0x8e4
 2472 0546 6B000000 		.4byte	0x6b
 2473 054a 02       		.uleb128 0x2
 2474 054b 91       		.byte	0x91
 2475 054c 77       		.sleb128 -9
 2476 054d 00       		.byte	0
 2477 054e 18       		.uleb128 0x18
 2478 054f 8C040000 		.4byte	.LASF67
 2479 0553 01       		.byte	0x1
 2480 0554 FC08     		.2byte	0x8fc
 2481 0556 00000000 		.4byte	.LFB14
 2482 055a 34000000 		.4byte	.LFE14-.LFB14
 2483 055e 01       		.uleb128 0x1
 2484 055f 9C       		.byte	0x9c
 2485 0560 74050000 		.4byte	0x574
 2486 0564 12       		.uleb128 0x12
 2487 0565 B0000000 		.4byte	.LASF59
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 89


 2488 0569 01       		.byte	0x1
 2489 056a FC08     		.2byte	0x8fc
 2490 056c 6B000000 		.4byte	0x6b
 2491 0570 02       		.uleb128 0x2
 2492 0571 91       		.byte	0x91
 2493 0572 77       		.sleb128 -9
 2494 0573 00       		.byte	0
 2495 0574 18       		.uleb128 0x18
 2496 0575 EA030000 		.4byte	.LASF68
 2497 0579 01       		.byte	0x1
 2498 057a 1A09     		.2byte	0x91a
 2499 057c 00000000 		.4byte	.LFB15
 2500 0580 20000000 		.4byte	.LFE15-.LFB15
 2501 0584 01       		.uleb128 0x1
 2502 0585 9C       		.byte	0x9c
 2503 0586 9A050000 		.4byte	0x59a
 2504 058a 12       		.uleb128 0x12
 2505 058b BF040000 		.4byte	.LASF69
 2506 058f 01       		.byte	0x1
 2507 0590 1A09     		.2byte	0x91a
 2508 0592 6B000000 		.4byte	0x6b
 2509 0596 02       		.uleb128 0x2
 2510 0597 91       		.byte	0x91
 2511 0598 77       		.sleb128 -9
 2512 0599 00       		.byte	0
 2513 059a 15       		.uleb128 0x15
 2514 059b 4C010000 		.4byte	.LASF70
 2515 059f 01       		.byte	0x1
 2516 05a0 3309     		.2byte	0x933
 2517 05a2 6B000000 		.4byte	0x6b
 2518 05a6 00000000 		.4byte	.LFB16
 2519 05aa 40000000 		.4byte	.LFE16-.LFB16
 2520 05ae 01       		.uleb128 0x1
 2521 05af 9C       		.byte	0x9c
 2522 05b0 D2050000 		.4byte	0x5d2
 2523 05b4 12       		.uleb128 0x12
 2524 05b5 B0000000 		.4byte	.LASF59
 2525 05b9 01       		.byte	0x1
 2526 05ba 3309     		.2byte	0x933
 2527 05bc 6B000000 		.4byte	0x6b
 2528 05c0 02       		.uleb128 0x2
 2529 05c1 91       		.byte	0x91
 2530 05c2 6F       		.sleb128 -17
 2531 05c3 17       		.uleb128 0x17
 2532 05c4 637200   		.ascii	"cr\000"
 2533 05c7 01       		.byte	0x1
 2534 05c8 3509     		.2byte	0x935
 2535 05ca 6B000000 		.4byte	0x6b
 2536 05ce 02       		.uleb128 0x2
 2537 05cf 91       		.byte	0x91
 2538 05d0 77       		.sleb128 -9
 2539 05d1 00       		.byte	0
 2540 05d2 18       		.uleb128 0x18
 2541 05d3 DA010000 		.4byte	.LASF71
 2542 05d7 01       		.byte	0x1
 2543 05d8 5C09     		.2byte	0x95c
 2544 05da 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 90


 2545 05de 40000000 		.4byte	.LFE17-.LFB17
 2546 05e2 01       		.uleb128 0x1
 2547 05e3 9C       		.byte	0x9c
 2548 05e4 F8050000 		.4byte	0x5f8
 2549 05e8 12       		.uleb128 0x12
 2550 05e9 B8010000 		.4byte	.LASF72
 2551 05ed 01       		.byte	0x1
 2552 05ee 5C09     		.2byte	0x95c
 2553 05f0 6B000000 		.4byte	0x6b
 2554 05f4 02       		.uleb128 0x2
 2555 05f5 91       		.byte	0x91
 2556 05f6 77       		.sleb128 -9
 2557 05f7 00       		.byte	0
 2558 05f8 15       		.uleb128 0x15
 2559 05f9 3C000000 		.4byte	.LASF73
 2560 05fd 01       		.byte	0x1
 2561 05fe 9509     		.2byte	0x995
 2562 0600 6B000000 		.4byte	0x6b
 2563 0604 00000000 		.4byte	.LFB18
 2564 0608 2C000000 		.4byte	.LFE18-.LFB18
 2565 060c 01       		.uleb128 0x1
 2566 060d 9C       		.byte	0x9c
 2567 060e 22060000 		.4byte	0x622
 2568 0612 14       		.uleb128 0x14
 2569 0613 F0050000 		.4byte	.LASF74
 2570 0617 01       		.byte	0x1
 2571 0618 9709     		.2byte	0x997
 2572 061a 6B000000 		.4byte	0x6b
 2573 061e 02       		.uleb128 0x2
 2574 061f 91       		.byte	0x91
 2575 0620 77       		.sleb128 -9
 2576 0621 00       		.byte	0
 2577 0622 16       		.uleb128 0x16
 2578 0623 16000000 		.4byte	.LASF76
 2579 0627 01       		.byte	0x1
 2580 0628 AD09     		.2byte	0x9ad
 2581 062a 6B000000 		.4byte	0x6b
 2582 062e 00000000 		.4byte	.LFB19
 2583 0632 1C000000 		.4byte	.LFE19-.LFB19
 2584 0636 01       		.uleb128 0x1
 2585 0637 9C       		.byte	0x9c
 2586 0638 13       		.uleb128 0x13
 2587 0639 BE050000 		.4byte	.LASF78
 2588 063d 01       		.byte	0x1
 2589 063e BB09     		.2byte	0x9bb
 2590 0640 00000000 		.4byte	.LFB20
 2591 0644 18000000 		.4byte	.LFE20-.LFB20
 2592 0648 01       		.uleb128 0x1
 2593 0649 9C       		.byte	0x9c
 2594 064a 13       		.uleb128 0x13
 2595 064b C4010000 		.4byte	.LASF79
 2596 064f 01       		.byte	0x1
 2597 0650 D109     		.2byte	0x9d1
 2598 0652 00000000 		.4byte	.LFB21
 2599 0656 18000000 		.4byte	.LFE21-.LFB21
 2600 065a 01       		.uleb128 0x1
 2601 065b 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 91


 2602 065c 1D       		.uleb128 0x1d
 2603 065d F6010000 		.4byte	.LASF80
 2604 0661 01       		.byte	0x1
 2605 0662 28       		.byte	0x28
 2606 0663 6B000000 		.4byte	0x6b
 2607 0667 05       		.uleb128 0x5
 2608 0668 03       		.byte	0x3
 2609 0669 00000000 		.4byte	USBUART_initVar
 2610 066d 1E       		.uleb128 0x1e
 2611 066e 07000000 		.4byte	.LASF81
 2612 0672 03       		.byte	0x3
 2613 0673 D302     		.2byte	0x2d3
 2614 0675 B0000000 		.4byte	0xb0
 2615 0679 1E       		.uleb128 0x1e
 2616 067a A8050000 		.4byte	.LASF82
 2617 067e 03       		.byte	0x3
 2618 067f D402     		.2byte	0x2d4
 2619 0681 B0000000 		.4byte	0xb0
 2620 0685 1E       		.uleb128 0x1e
 2621 0686 53050000 		.4byte	.LASF83
 2622 068a 03       		.byte	0x3
 2623 068b D502     		.2byte	0x2d5
 2624 068d B0000000 		.4byte	0xb0
 2625 0691 1E       		.uleb128 0x1e
 2626 0692 D3050000 		.4byte	.LASF84
 2627 0696 03       		.byte	0x3
 2628 0697 D602     		.2byte	0x2d6
 2629 0699 B0000000 		.4byte	0xb0
 2630 069d 1E       		.uleb128 0x1e
 2631 069e 3B020000 		.4byte	.LASF85
 2632 06a2 03       		.byte	0x3
 2633 06a3 D702     		.2byte	0x2d7
 2634 06a5 B0000000 		.4byte	0xb0
 2635 06a9 1F       		.uleb128 0x1f
 2636 06aa 06020000 		.4byte	.LASF86
 2637 06ae 04       		.byte	0x4
 2638 06af 72       		.byte	0x72
 2639 06b0 B0000000 		.4byte	0xb0
 2640 06b4 0A       		.uleb128 0xa
 2641 06b5 B0000000 		.4byte	0xb0
 2642 06b9 C4060000 		.4byte	0x6c4
 2643 06bd 0B       		.uleb128 0xb
 2644 06be C6000000 		.4byte	0xc6
 2645 06c2 01       		.byte	0x1
 2646 06c3 00       		.byte	0
 2647 06c4 1F       		.uleb128 0x1f
 2648 06c5 43040000 		.4byte	.LASF87
 2649 06c9 04       		.byte	0x4
 2650 06ca 73       		.byte	0x73
 2651 06cb CF060000 		.4byte	0x6cf
 2652 06cf 05       		.uleb128 0x5
 2653 06d0 B4060000 		.4byte	0x6b4
 2654 06d4 1F       		.uleb128 0x1f
 2655 06d5 D6020000 		.4byte	.LASF88
 2656 06d9 04       		.byte	0x4
 2657 06da 75       		.byte	0x75
 2658 06db B0000000 		.4byte	0xb0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 92


 2659 06df 0A       		.uleb128 0xa
 2660 06e0 EF060000 		.4byte	0x6ef
 2661 06e4 EF060000 		.4byte	0x6ef
 2662 06e8 0B       		.uleb128 0xb
 2663 06e9 C6000000 		.4byte	0xc6
 2664 06ed 08       		.byte	0x8
 2665 06ee 00       		.byte	0
 2666 06ef 05       		.uleb128 0x5
 2667 06f0 42010000 		.4byte	0x142
 2668 06f4 1F       		.uleb128 0x1f
 2669 06f5 A5000000 		.4byte	.LASF89
 2670 06f9 04       		.byte	0x4
 2671 06fa 79       		.byte	0x79
 2672 06fb FF060000 		.4byte	0x6ff
 2673 06ff 05       		.uleb128 0x5
 2674 0700 DF060000 		.4byte	0x6df
 2675 0704 1F       		.uleb128 0x1f
 2676 0705 5B000000 		.4byte	.LASF90
 2677 0709 04       		.byte	0x4
 2678 070a 9B       		.byte	0x9b
 2679 070b B0000000 		.4byte	0xb0
 2680 070f 00       		.byte	0
 2681              		.section	.debug_abbrev,"",%progbits
 2682              	.Ldebug_abbrev0:
 2683 0000 01       		.uleb128 0x1
 2684 0001 11       		.uleb128 0x11
 2685 0002 01       		.byte	0x1
 2686 0003 25       		.uleb128 0x25
 2687 0004 0E       		.uleb128 0xe
 2688 0005 13       		.uleb128 0x13
 2689 0006 0B       		.uleb128 0xb
 2690 0007 03       		.uleb128 0x3
 2691 0008 0E       		.uleb128 0xe
 2692 0009 1B       		.uleb128 0x1b
 2693 000a 0E       		.uleb128 0xe
 2694 000b 55       		.uleb128 0x55
 2695 000c 17       		.uleb128 0x17
 2696 000d 11       		.uleb128 0x11
 2697 000e 01       		.uleb128 0x1
 2698 000f 10       		.uleb128 0x10
 2699 0010 17       		.uleb128 0x17
 2700 0011 00       		.byte	0
 2701 0012 00       		.byte	0
 2702 0013 02       		.uleb128 0x2
 2703 0014 24       		.uleb128 0x24
 2704 0015 00       		.byte	0
 2705 0016 0B       		.uleb128 0xb
 2706 0017 0B       		.uleb128 0xb
 2707 0018 3E       		.uleb128 0x3e
 2708 0019 0B       		.uleb128 0xb
 2709 001a 03       		.uleb128 0x3
 2710 001b 0E       		.uleb128 0xe
 2711 001c 00       		.byte	0
 2712 001d 00       		.byte	0
 2713 001e 03       		.uleb128 0x3
 2714 001f 24       		.uleb128 0x24
 2715 0020 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 93


 2716 0021 0B       		.uleb128 0xb
 2717 0022 0B       		.uleb128 0xb
 2718 0023 3E       		.uleb128 0x3e
 2719 0024 0B       		.uleb128 0xb
 2720 0025 03       		.uleb128 0x3
 2721 0026 08       		.uleb128 0x8
 2722 0027 00       		.byte	0
 2723 0028 00       		.byte	0
 2724 0029 04       		.uleb128 0x4
 2725 002a 16       		.uleb128 0x16
 2726 002b 00       		.byte	0
 2727 002c 03       		.uleb128 0x3
 2728 002d 0E       		.uleb128 0xe
 2729 002e 3A       		.uleb128 0x3a
 2730 002f 0B       		.uleb128 0xb
 2731 0030 3B       		.uleb128 0x3b
 2732 0031 05       		.uleb128 0x5
 2733 0032 49       		.uleb128 0x49
 2734 0033 13       		.uleb128 0x13
 2735 0034 00       		.byte	0
 2736 0035 00       		.byte	0
 2737 0036 05       		.uleb128 0x5
 2738 0037 35       		.uleb128 0x35
 2739 0038 00       		.byte	0
 2740 0039 49       		.uleb128 0x49
 2741 003a 13       		.uleb128 0x13
 2742 003b 00       		.byte	0
 2743 003c 00       		.byte	0
 2744 003d 06       		.uleb128 0x6
 2745 003e 13       		.uleb128 0x13
 2746 003f 01       		.byte	0x1
 2747 0040 0B       		.uleb128 0xb
 2748 0041 0B       		.uleb128 0xb
 2749 0042 3A       		.uleb128 0x3a
 2750 0043 0B       		.uleb128 0xb
 2751 0044 3B       		.uleb128 0x3b
 2752 0045 0B       		.uleb128 0xb
 2753 0046 01       		.uleb128 0x1
 2754 0047 13       		.uleb128 0x13
 2755 0048 00       		.byte	0
 2756 0049 00       		.byte	0
 2757 004a 07       		.uleb128 0x7
 2758 004b 0D       		.uleb128 0xd
 2759 004c 00       		.byte	0
 2760 004d 03       		.uleb128 0x3
 2761 004e 0E       		.uleb128 0xe
 2762 004f 3A       		.uleb128 0x3a
 2763 0050 0B       		.uleb128 0xb
 2764 0051 3B       		.uleb128 0x3b
 2765 0052 0B       		.uleb128 0xb
 2766 0053 49       		.uleb128 0x49
 2767 0054 13       		.uleb128 0x13
 2768 0055 38       		.uleb128 0x38
 2769 0056 0B       		.uleb128 0xb
 2770 0057 00       		.byte	0
 2771 0058 00       		.byte	0
 2772 0059 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 94


 2773 005a 16       		.uleb128 0x16
 2774 005b 00       		.byte	0
 2775 005c 03       		.uleb128 0x3
 2776 005d 0E       		.uleb128 0xe
 2777 005e 3A       		.uleb128 0x3a
 2778 005f 0B       		.uleb128 0xb
 2779 0060 3B       		.uleb128 0x3b
 2780 0061 0B       		.uleb128 0xb
 2781 0062 49       		.uleb128 0x49
 2782 0063 13       		.uleb128 0x13
 2783 0064 00       		.byte	0
 2784 0065 00       		.byte	0
 2785 0066 09       		.uleb128 0x9
 2786 0067 0D       		.uleb128 0xd
 2787 0068 00       		.byte	0
 2788 0069 03       		.uleb128 0x3
 2789 006a 08       		.uleb128 0x8
 2790 006b 3A       		.uleb128 0x3a
 2791 006c 0B       		.uleb128 0xb
 2792 006d 3B       		.uleb128 0x3b
 2793 006e 0B       		.uleb128 0xb
 2794 006f 49       		.uleb128 0x49
 2795 0070 13       		.uleb128 0x13
 2796 0071 38       		.uleb128 0x38
 2797 0072 0B       		.uleb128 0xb
 2798 0073 00       		.byte	0
 2799 0074 00       		.byte	0
 2800 0075 0A       		.uleb128 0xa
 2801 0076 01       		.uleb128 0x1
 2802 0077 01       		.byte	0x1
 2803 0078 49       		.uleb128 0x49
 2804 0079 13       		.uleb128 0x13
 2805 007a 01       		.uleb128 0x1
 2806 007b 13       		.uleb128 0x13
 2807 007c 00       		.byte	0
 2808 007d 00       		.byte	0
 2809 007e 0B       		.uleb128 0xb
 2810 007f 21       		.uleb128 0x21
 2811 0080 00       		.byte	0
 2812 0081 49       		.uleb128 0x49
 2813 0082 13       		.uleb128 0x13
 2814 0083 2F       		.uleb128 0x2f
 2815 0084 0B       		.uleb128 0xb
 2816 0085 00       		.byte	0
 2817 0086 00       		.byte	0
 2818 0087 0C       		.uleb128 0xc
 2819 0088 13       		.uleb128 0x13
 2820 0089 01       		.byte	0x1
 2821 008a 0B       		.uleb128 0xb
 2822 008b 0B       		.uleb128 0xb
 2823 008c 3A       		.uleb128 0x3a
 2824 008d 0B       		.uleb128 0xb
 2825 008e 3B       		.uleb128 0x3b
 2826 008f 05       		.uleb128 0x5
 2827 0090 01       		.uleb128 0x1
 2828 0091 13       		.uleb128 0x13
 2829 0092 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 95


 2830 0093 00       		.byte	0
 2831 0094 0D       		.uleb128 0xd
 2832 0095 0D       		.uleb128 0xd
 2833 0096 00       		.byte	0
 2834 0097 03       		.uleb128 0x3
 2835 0098 0E       		.uleb128 0xe
 2836 0099 3A       		.uleb128 0x3a
 2837 009a 0B       		.uleb128 0xb
 2838 009b 3B       		.uleb128 0x3b
 2839 009c 05       		.uleb128 0x5
 2840 009d 49       		.uleb128 0x49
 2841 009e 13       		.uleb128 0x13
 2842 009f 38       		.uleb128 0x38
 2843 00a0 0B       		.uleb128 0xb
 2844 00a1 00       		.byte	0
 2845 00a2 00       		.byte	0
 2846 00a3 0E       		.uleb128 0xe
 2847 00a4 2E       		.uleb128 0x2e
 2848 00a5 01       		.byte	0x1
 2849 00a6 3F       		.uleb128 0x3f
 2850 00a7 19       		.uleb128 0x19
 2851 00a8 03       		.uleb128 0x3
 2852 00a9 0E       		.uleb128 0xe
 2853 00aa 3A       		.uleb128 0x3a
 2854 00ab 0B       		.uleb128 0xb
 2855 00ac 3B       		.uleb128 0x3b
 2856 00ad 0B       		.uleb128 0xb
 2857 00ae 27       		.uleb128 0x27
 2858 00af 19       		.uleb128 0x19
 2859 00b0 11       		.uleb128 0x11
 2860 00b1 01       		.uleb128 0x1
 2861 00b2 12       		.uleb128 0x12
 2862 00b3 06       		.uleb128 0x6
 2863 00b4 40       		.uleb128 0x40
 2864 00b5 18       		.uleb128 0x18
 2865 00b6 9642     		.uleb128 0x2116
 2866 00b8 19       		.uleb128 0x19
 2867 00b9 01       		.uleb128 0x1
 2868 00ba 13       		.uleb128 0x13
 2869 00bb 00       		.byte	0
 2870 00bc 00       		.byte	0
 2871 00bd 0F       		.uleb128 0xf
 2872 00be 05       		.uleb128 0x5
 2873 00bf 00       		.byte	0
 2874 00c0 03       		.uleb128 0x3
 2875 00c1 0E       		.uleb128 0xe
 2876 00c2 3A       		.uleb128 0x3a
 2877 00c3 0B       		.uleb128 0xb
 2878 00c4 3B       		.uleb128 0x3b
 2879 00c5 0B       		.uleb128 0xb
 2880 00c6 49       		.uleb128 0x49
 2881 00c7 13       		.uleb128 0x13
 2882 00c8 02       		.uleb128 0x2
 2883 00c9 18       		.uleb128 0x18
 2884 00ca 00       		.byte	0
 2885 00cb 00       		.byte	0
 2886 00cc 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 96


 2887 00cd 34       		.uleb128 0x34
 2888 00ce 00       		.byte	0
 2889 00cf 03       		.uleb128 0x3
 2890 00d0 0E       		.uleb128 0xe
 2891 00d1 3A       		.uleb128 0x3a
 2892 00d2 0B       		.uleb128 0xb
 2893 00d3 3B       		.uleb128 0x3b
 2894 00d4 0B       		.uleb128 0xb
 2895 00d5 49       		.uleb128 0x49
 2896 00d6 13       		.uleb128 0x13
 2897 00d7 02       		.uleb128 0x2
 2898 00d8 18       		.uleb128 0x18
 2899 00d9 00       		.byte	0
 2900 00da 00       		.byte	0
 2901 00db 11       		.uleb128 0x11
 2902 00dc 2E       		.uleb128 0x2e
 2903 00dd 01       		.byte	0x1
 2904 00de 3F       		.uleb128 0x3f
 2905 00df 19       		.uleb128 0x19
 2906 00e0 03       		.uleb128 0x3
 2907 00e1 0E       		.uleb128 0xe
 2908 00e2 3A       		.uleb128 0x3a
 2909 00e3 0B       		.uleb128 0xb
 2910 00e4 3B       		.uleb128 0x3b
 2911 00e5 05       		.uleb128 0x5
 2912 00e6 27       		.uleb128 0x27
 2913 00e7 19       		.uleb128 0x19
 2914 00e8 11       		.uleb128 0x11
 2915 00e9 01       		.uleb128 0x1
 2916 00ea 12       		.uleb128 0x12
 2917 00eb 06       		.uleb128 0x6
 2918 00ec 40       		.uleb128 0x40
 2919 00ed 18       		.uleb128 0x18
 2920 00ee 9642     		.uleb128 0x2116
 2921 00f0 19       		.uleb128 0x19
 2922 00f1 01       		.uleb128 0x1
 2923 00f2 13       		.uleb128 0x13
 2924 00f3 00       		.byte	0
 2925 00f4 00       		.byte	0
 2926 00f5 12       		.uleb128 0x12
 2927 00f6 05       		.uleb128 0x5
 2928 00f7 00       		.byte	0
 2929 00f8 03       		.uleb128 0x3
 2930 00f9 0E       		.uleb128 0xe
 2931 00fa 3A       		.uleb128 0x3a
 2932 00fb 0B       		.uleb128 0xb
 2933 00fc 3B       		.uleb128 0x3b
 2934 00fd 05       		.uleb128 0x5
 2935 00fe 49       		.uleb128 0x49
 2936 00ff 13       		.uleb128 0x13
 2937 0100 02       		.uleb128 0x2
 2938 0101 18       		.uleb128 0x18
 2939 0102 00       		.byte	0
 2940 0103 00       		.byte	0
 2941 0104 13       		.uleb128 0x13
 2942 0105 2E       		.uleb128 0x2e
 2943 0106 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 97


 2944 0107 3F       		.uleb128 0x3f
 2945 0108 19       		.uleb128 0x19
 2946 0109 03       		.uleb128 0x3
 2947 010a 0E       		.uleb128 0xe
 2948 010b 3A       		.uleb128 0x3a
 2949 010c 0B       		.uleb128 0xb
 2950 010d 3B       		.uleb128 0x3b
 2951 010e 05       		.uleb128 0x5
 2952 010f 27       		.uleb128 0x27
 2953 0110 19       		.uleb128 0x19
 2954 0111 11       		.uleb128 0x11
 2955 0112 01       		.uleb128 0x1
 2956 0113 12       		.uleb128 0x12
 2957 0114 06       		.uleb128 0x6
 2958 0115 40       		.uleb128 0x40
 2959 0116 18       		.uleb128 0x18
 2960 0117 9742     		.uleb128 0x2117
 2961 0119 19       		.uleb128 0x19
 2962 011a 00       		.byte	0
 2963 011b 00       		.byte	0
 2964 011c 14       		.uleb128 0x14
 2965 011d 34       		.uleb128 0x34
 2966 011e 00       		.byte	0
 2967 011f 03       		.uleb128 0x3
 2968 0120 0E       		.uleb128 0xe
 2969 0121 3A       		.uleb128 0x3a
 2970 0122 0B       		.uleb128 0xb
 2971 0123 3B       		.uleb128 0x3b
 2972 0124 05       		.uleb128 0x5
 2973 0125 49       		.uleb128 0x49
 2974 0126 13       		.uleb128 0x13
 2975 0127 02       		.uleb128 0x2
 2976 0128 18       		.uleb128 0x18
 2977 0129 00       		.byte	0
 2978 012a 00       		.byte	0
 2979 012b 15       		.uleb128 0x15
 2980 012c 2E       		.uleb128 0x2e
 2981 012d 01       		.byte	0x1
 2982 012e 3F       		.uleb128 0x3f
 2983 012f 19       		.uleb128 0x19
 2984 0130 03       		.uleb128 0x3
 2985 0131 0E       		.uleb128 0xe
 2986 0132 3A       		.uleb128 0x3a
 2987 0133 0B       		.uleb128 0xb
 2988 0134 3B       		.uleb128 0x3b
 2989 0135 05       		.uleb128 0x5
 2990 0136 27       		.uleb128 0x27
 2991 0137 19       		.uleb128 0x19
 2992 0138 49       		.uleb128 0x49
 2993 0139 13       		.uleb128 0x13
 2994 013a 11       		.uleb128 0x11
 2995 013b 01       		.uleb128 0x1
 2996 013c 12       		.uleb128 0x12
 2997 013d 06       		.uleb128 0x6
 2998 013e 40       		.uleb128 0x40
 2999 013f 18       		.uleb128 0x18
 3000 0140 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 98


 3001 0142 19       		.uleb128 0x19
 3002 0143 01       		.uleb128 0x1
 3003 0144 13       		.uleb128 0x13
 3004 0145 00       		.byte	0
 3005 0146 00       		.byte	0
 3006 0147 16       		.uleb128 0x16
 3007 0148 2E       		.uleb128 0x2e
 3008 0149 00       		.byte	0
 3009 014a 3F       		.uleb128 0x3f
 3010 014b 19       		.uleb128 0x19
 3011 014c 03       		.uleb128 0x3
 3012 014d 0E       		.uleb128 0xe
 3013 014e 3A       		.uleb128 0x3a
 3014 014f 0B       		.uleb128 0xb
 3015 0150 3B       		.uleb128 0x3b
 3016 0151 05       		.uleb128 0x5
 3017 0152 27       		.uleb128 0x27
 3018 0153 19       		.uleb128 0x19
 3019 0154 49       		.uleb128 0x49
 3020 0155 13       		.uleb128 0x13
 3021 0156 11       		.uleb128 0x11
 3022 0157 01       		.uleb128 0x1
 3023 0158 12       		.uleb128 0x12
 3024 0159 06       		.uleb128 0x6
 3025 015a 40       		.uleb128 0x40
 3026 015b 18       		.uleb128 0x18
 3027 015c 9742     		.uleb128 0x2117
 3028 015e 19       		.uleb128 0x19
 3029 015f 00       		.byte	0
 3030 0160 00       		.byte	0
 3031 0161 17       		.uleb128 0x17
 3032 0162 34       		.uleb128 0x34
 3033 0163 00       		.byte	0
 3034 0164 03       		.uleb128 0x3
 3035 0165 08       		.uleb128 0x8
 3036 0166 3A       		.uleb128 0x3a
 3037 0167 0B       		.uleb128 0xb
 3038 0168 3B       		.uleb128 0x3b
 3039 0169 05       		.uleb128 0x5
 3040 016a 49       		.uleb128 0x49
 3041 016b 13       		.uleb128 0x13
 3042 016c 02       		.uleb128 0x2
 3043 016d 18       		.uleb128 0x18
 3044 016e 00       		.byte	0
 3045 016f 00       		.byte	0
 3046 0170 18       		.uleb128 0x18
 3047 0171 2E       		.uleb128 0x2e
 3048 0172 01       		.byte	0x1
 3049 0173 3F       		.uleb128 0x3f
 3050 0174 19       		.uleb128 0x19
 3051 0175 03       		.uleb128 0x3
 3052 0176 0E       		.uleb128 0xe
 3053 0177 3A       		.uleb128 0x3a
 3054 0178 0B       		.uleb128 0xb
 3055 0179 3B       		.uleb128 0x3b
 3056 017a 05       		.uleb128 0x5
 3057 017b 27       		.uleb128 0x27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 99


 3058 017c 19       		.uleb128 0x19
 3059 017d 11       		.uleb128 0x11
 3060 017e 01       		.uleb128 0x1
 3061 017f 12       		.uleb128 0x12
 3062 0180 06       		.uleb128 0x6
 3063 0181 40       		.uleb128 0x40
 3064 0182 18       		.uleb128 0x18
 3065 0183 9742     		.uleb128 0x2117
 3066 0185 19       		.uleb128 0x19
 3067 0186 01       		.uleb128 0x1
 3068 0187 13       		.uleb128 0x13
 3069 0188 00       		.byte	0
 3070 0189 00       		.byte	0
 3071 018a 19       		.uleb128 0x19
 3072 018b 0B       		.uleb128 0xb
 3073 018c 01       		.byte	0x1
 3074 018d 11       		.uleb128 0x11
 3075 018e 01       		.uleb128 0x1
 3076 018f 12       		.uleb128 0x12
 3077 0190 06       		.uleb128 0x6
 3078 0191 00       		.byte	0
 3079 0192 00       		.byte	0
 3080 0193 1A       		.uleb128 0x1a
 3081 0194 0F       		.uleb128 0xf
 3082 0195 00       		.byte	0
 3083 0196 0B       		.uleb128 0xb
 3084 0197 0B       		.uleb128 0xb
 3085 0198 49       		.uleb128 0x49
 3086 0199 13       		.uleb128 0x13
 3087 019a 00       		.byte	0
 3088 019b 00       		.byte	0
 3089 019c 1B       		.uleb128 0x1b
 3090 019d 26       		.uleb128 0x26
 3091 019e 00       		.byte	0
 3092 019f 49       		.uleb128 0x49
 3093 01a0 13       		.uleb128 0x13
 3094 01a1 00       		.byte	0
 3095 01a2 00       		.byte	0
 3096 01a3 1C       		.uleb128 0x1c
 3097 01a4 2E       		.uleb128 0x2e
 3098 01a5 01       		.byte	0x1
 3099 01a6 3F       		.uleb128 0x3f
 3100 01a7 19       		.uleb128 0x19
 3101 01a8 03       		.uleb128 0x3
 3102 01a9 0E       		.uleb128 0xe
 3103 01aa 3A       		.uleb128 0x3a
 3104 01ab 0B       		.uleb128 0xb
 3105 01ac 3B       		.uleb128 0x3b
 3106 01ad 05       		.uleb128 0x5
 3107 01ae 27       		.uleb128 0x27
 3108 01af 19       		.uleb128 0x19
 3109 01b0 49       		.uleb128 0x49
 3110 01b1 13       		.uleb128 0x13
 3111 01b2 11       		.uleb128 0x11
 3112 01b3 01       		.uleb128 0x1
 3113 01b4 12       		.uleb128 0x12
 3114 01b5 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 100


 3115 01b6 40       		.uleb128 0x40
 3116 01b7 18       		.uleb128 0x18
 3117 01b8 9642     		.uleb128 0x2116
 3118 01ba 19       		.uleb128 0x19
 3119 01bb 01       		.uleb128 0x1
 3120 01bc 13       		.uleb128 0x13
 3121 01bd 00       		.byte	0
 3122 01be 00       		.byte	0
 3123 01bf 1D       		.uleb128 0x1d
 3124 01c0 34       		.uleb128 0x34
 3125 01c1 00       		.byte	0
 3126 01c2 03       		.uleb128 0x3
 3127 01c3 0E       		.uleb128 0xe
 3128 01c4 3A       		.uleb128 0x3a
 3129 01c5 0B       		.uleb128 0xb
 3130 01c6 3B       		.uleb128 0x3b
 3131 01c7 0B       		.uleb128 0xb
 3132 01c8 49       		.uleb128 0x49
 3133 01c9 13       		.uleb128 0x13
 3134 01ca 3F       		.uleb128 0x3f
 3135 01cb 19       		.uleb128 0x19
 3136 01cc 02       		.uleb128 0x2
 3137 01cd 18       		.uleb128 0x18
 3138 01ce 00       		.byte	0
 3139 01cf 00       		.byte	0
 3140 01d0 1E       		.uleb128 0x1e
 3141 01d1 34       		.uleb128 0x34
 3142 01d2 00       		.byte	0
 3143 01d3 03       		.uleb128 0x3
 3144 01d4 0E       		.uleb128 0xe
 3145 01d5 3A       		.uleb128 0x3a
 3146 01d6 0B       		.uleb128 0xb
 3147 01d7 3B       		.uleb128 0x3b
 3148 01d8 05       		.uleb128 0x5
 3149 01d9 49       		.uleb128 0x49
 3150 01da 13       		.uleb128 0x13
 3151 01db 3F       		.uleb128 0x3f
 3152 01dc 19       		.uleb128 0x19
 3153 01dd 3C       		.uleb128 0x3c
 3154 01de 19       		.uleb128 0x19
 3155 01df 00       		.byte	0
 3156 01e0 00       		.byte	0
 3157 01e1 1F       		.uleb128 0x1f
 3158 01e2 34       		.uleb128 0x34
 3159 01e3 00       		.byte	0
 3160 01e4 03       		.uleb128 0x3
 3161 01e5 0E       		.uleb128 0xe
 3162 01e6 3A       		.uleb128 0x3a
 3163 01e7 0B       		.uleb128 0xb
 3164 01e8 3B       		.uleb128 0x3b
 3165 01e9 0B       		.uleb128 0xb
 3166 01ea 49       		.uleb128 0x49
 3167 01eb 13       		.uleb128 0x13
 3168 01ec 3F       		.uleb128 0x3f
 3169 01ed 19       		.uleb128 0x19
 3170 01ee 3C       		.uleb128 0x3c
 3171 01ef 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 101


 3172 01f0 00       		.byte	0
 3173 01f1 00       		.byte	0
 3174 01f2 00       		.byte	0
 3175              		.section	.debug_aranges,"",%progbits
 3176 0000 C4000000 		.4byte	0xc4
 3177 0004 0200     		.2byte	0x2
 3178 0006 00000000 		.4byte	.Ldebug_info0
 3179 000a 04       		.byte	0x4
 3180 000b 00       		.byte	0
 3181 000c 0000     		.2byte	0
 3182 000e 0000     		.2byte	0
 3183 0010 00000000 		.4byte	.LFB0
 3184 0014 3C000000 		.4byte	.LFE0-.LFB0
 3185 0018 00000000 		.4byte	.LFB1
 3186 001c A4010000 		.4byte	.LFE1-.LFB1
 3187 0020 00000000 		.4byte	.LFB2
 3188 0024 04010000 		.4byte	.LFE2-.LFB2
 3189 0028 00000000 		.4byte	.LFB3
 3190 002c 68000000 		.4byte	.LFE3-.LFB3
 3191 0030 00000000 		.4byte	.LFB4
 3192 0034 10010000 		.4byte	.LFE4-.LFB4
 3193 0038 00000000 		.4byte	.LFB5
 3194 003c 38000000 		.4byte	.LFE5-.LFB5
 3195 0040 00000000 		.4byte	.LFB6
 3196 0044 18000000 		.4byte	.LFE6-.LFB6
 3197 0048 00000000 		.4byte	.LFB7
 3198 004c 30000000 		.4byte	.LFE7-.LFB7
 3199 0050 00000000 		.4byte	.LFB8
 3200 0054 20000000 		.4byte	.LFE8-.LFB8
 3201 0058 00000000 		.4byte	.LFB9
 3202 005c 2C000000 		.4byte	.LFE9-.LFB9
 3203 0060 00000000 		.4byte	.LFB10
 3204 0064 60000000 		.4byte	.LFE10-.LFB10
 3205 0068 00000000 		.4byte	.LFB11
 3206 006c 08010000 		.4byte	.LFE11-.LFB11
 3207 0070 00000000 		.4byte	.LFB12
 3208 0074 8C000000 		.4byte	.LFE12-.LFB12
 3209 0078 00000000 		.4byte	.LFB13
 3210 007c 5C000000 		.4byte	.LFE13-.LFB13
 3211 0080 00000000 		.4byte	.LFB14
 3212 0084 34000000 		.4byte	.LFE14-.LFB14
 3213 0088 00000000 		.4byte	.LFB15
 3214 008c 20000000 		.4byte	.LFE15-.LFB15
 3215 0090 00000000 		.4byte	.LFB16
 3216 0094 40000000 		.4byte	.LFE16-.LFB16
 3217 0098 00000000 		.4byte	.LFB17
 3218 009c 40000000 		.4byte	.LFE17-.LFB17
 3219 00a0 00000000 		.4byte	.LFB18
 3220 00a4 2C000000 		.4byte	.LFE18-.LFB18
 3221 00a8 00000000 		.4byte	.LFB19
 3222 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3223 00b0 00000000 		.4byte	.LFB20
 3224 00b4 18000000 		.4byte	.LFE20-.LFB20
 3225 00b8 00000000 		.4byte	.LFB21
 3226 00bc 18000000 		.4byte	.LFE21-.LFB21
 3227 00c0 00000000 		.4byte	0
 3228 00c4 00000000 		.4byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 102


 3229              		.section	.debug_ranges,"",%progbits
 3230              	.Ldebug_ranges0:
 3231 0000 00000000 		.4byte	.LFB0
 3232 0004 3C000000 		.4byte	.LFE0
 3233 0008 00000000 		.4byte	.LFB1
 3234 000c A4010000 		.4byte	.LFE1
 3235 0010 00000000 		.4byte	.LFB2
 3236 0014 04010000 		.4byte	.LFE2
 3237 0018 00000000 		.4byte	.LFB3
 3238 001c 68000000 		.4byte	.LFE3
 3239 0020 00000000 		.4byte	.LFB4
 3240 0024 10010000 		.4byte	.LFE4
 3241 0028 00000000 		.4byte	.LFB5
 3242 002c 38000000 		.4byte	.LFE5
 3243 0030 00000000 		.4byte	.LFB6
 3244 0034 18000000 		.4byte	.LFE6
 3245 0038 00000000 		.4byte	.LFB7
 3246 003c 30000000 		.4byte	.LFE7
 3247 0040 00000000 		.4byte	.LFB8
 3248 0044 20000000 		.4byte	.LFE8
 3249 0048 00000000 		.4byte	.LFB9
 3250 004c 2C000000 		.4byte	.LFE9
 3251 0050 00000000 		.4byte	.LFB10
 3252 0054 60000000 		.4byte	.LFE10
 3253 0058 00000000 		.4byte	.LFB11
 3254 005c 08010000 		.4byte	.LFE11
 3255 0060 00000000 		.4byte	.LFB12
 3256 0064 8C000000 		.4byte	.LFE12
 3257 0068 00000000 		.4byte	.LFB13
 3258 006c 5C000000 		.4byte	.LFE13
 3259 0070 00000000 		.4byte	.LFB14
 3260 0074 34000000 		.4byte	.LFE14
 3261 0078 00000000 		.4byte	.LFB15
 3262 007c 20000000 		.4byte	.LFE15
 3263 0080 00000000 		.4byte	.LFB16
 3264 0084 40000000 		.4byte	.LFE16
 3265 0088 00000000 		.4byte	.LFB17
 3266 008c 40000000 		.4byte	.LFE17
 3267 0090 00000000 		.4byte	.LFB18
 3268 0094 2C000000 		.4byte	.LFE18
 3269 0098 00000000 		.4byte	.LFB19
 3270 009c 1C000000 		.4byte	.LFE19
 3271 00a0 00000000 		.4byte	.LFB20
 3272 00a4 18000000 		.4byte	.LFE20
 3273 00a8 00000000 		.4byte	.LFB21
 3274 00ac 18000000 		.4byte	.LFE21
 3275 00b0 00000000 		.4byte	0
 3276 00b4 00000000 		.4byte	0
 3277              		.section	.debug_line,"",%progbits
 3278              	.Ldebug_line0:
 3279 0000 03030000 		.section	.debug_str,"MS",%progbits,1
 3279      02006200 
 3279      00000201 
 3279      FB0E0D00 
 3279      01010101 
 3280              	.LASF10:
 3281 0000 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 103


 3281      313600
 3282              	.LASF81:
 3283 0007 55534255 		.ascii	"USBUART_device\000"
 3283      4152545F 
 3283      64657669 
 3283      636500
 3284              	.LASF76:
 3285 0016 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3285      4152545F 
 3285      47657444 
 3285      65766963 
 3285      65416464 
 3286              	.LASF51:
 3287 002f 55534255 		.ascii	"USBUART_Stop\000"
 3287      4152545F 
 3287      53746F70 
 3287      00
 3288              	.LASF73:
 3289 003c 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3289      4152545F 
 3289      52575545 
 3289      6E61626C 
 3289      656400
 3290              	.LASF0:
 3291 004f 7369676E 		.ascii	"signed char\000"
 3291      65642063 
 3291      68617200 
 3292              	.LASF90:
 3293 005b 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3293      4152545F 
 3293      6C617374 
 3293      5061636B 
 3293      65745369 
 3294              	.LASF62:
 3295 0072 55534255 		.ascii	"USBUART_LoadInEP\000"
 3295      4152545F 
 3295      4C6F6164 
 3295      496E4550 
 3295      00
 3296              	.LASF7:
 3297 0083 6C6F6E67 		.ascii	"long long unsigned int\000"
 3297      206C6F6E 
 3297      6720756E 
 3297      7369676E 
 3297      65642069 
 3298              	.LASF22:
 3299 009a 61646472 		.ascii	"addr\000"
 3299      00
 3300              	.LASF32:
 3301 009f 65704366 		.ascii	"epCfg\000"
 3301      6700
 3302              	.LASF89:
 3303 00a5 55534255 		.ascii	"USBUART_EP\000"
 3303      4152545F 
 3303      455000
 3304              	.LASF59:
 3305 00b0 65704E75 		.ascii	"epNumber\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 104


 3305      6D626572 
 3305      00
 3306              	.LASF46:
 3307 00b9 64657669 		.ascii	"device\000"
 3307      636500
 3308              	.LASF75:
 3309 00c0 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3309      4152545F 
 3309      47657443 
 3309      6F6E6669 
 3309      67757261 
 3310              	.LASF6:
 3311 00d9 6C6F6E67 		.ascii	"long long int\000"
 3311      206C6F6E 
 3311      6720696E 
 3311      7400
 3312              	.LASF93:
 3313 00e7 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3313      6F63756D 
 3313      656E7473 
 3313      5C476974 
 3313      4875625C 
 3314 0116 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3314      635F636F 
 3314      64655F62 
 3314      6173655C 
 3314      43533330 
 3315              	.LASF66:
 3316 0138 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3316      4152545F 
 3316      456E6162 
 3316      6C654F75 
 3316      74455000 
 3317              	.LASF70:
 3318 014c 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3318      4152545F 
 3318      47657445 
 3318      5041636B 
 3318      53746174 
 3319              	.LASF61:
 3320 0162 636E7472 		.ascii	"cntr\000"
 3320      00
 3321              	.LASF43:
 3322 0167 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3322      4152545F 
 3322      7369655F 
 3322      6570735F 
 3322      73747275 
 3323              	.LASF54:
 3324 017e 55534255 		.ascii	"USBUART_CheckActivity\000"
 3324      4152545F 
 3324      43686563 
 3324      6B416374 
 3324      69766974 
 3325              	.LASF4:
 3326 0194 6C6F6E67 		.ascii	"long int\000"
 3326      20696E74 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 105


 3326      00
 3327              	.LASF9:
 3328 019d 75696E74 		.ascii	"uint8\000"
 3328      3800
 3329              	.LASF21:
 3330 01a3 6570546F 		.ascii	"epToggle\000"
 3330      67676C65 
 3330      00
 3331              	.LASF36:
 3332 01ac 72775761 		.ascii	"rwWa\000"
 3332      00
 3333              	.LASF13:
 3334 01b1 646F7562 		.ascii	"double\000"
 3334      6C6500
 3335              	.LASF72:
 3336 01b8 706F7765 		.ascii	"powerStatus\000"
 3336      72537461 
 3336      74757300 
 3337              	.LASF79:
 3338 01c4 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3338      4152545F 
 3338      44697361 
 3338      626C6553 
 3338      6F66496E 
 3339              	.LASF71:
 3340 01da 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3340      4152545F 
 3340      53657450 
 3340      6F776572 
 3340      53746174 
 3341              	.LASF34:
 3342 01f1 65705372 		.ascii	"epSr\000"
 3342      00
 3343              	.LASF80:
 3344 01f6 55534255 		.ascii	"USBUART_initVar\000"
 3344      4152545F 
 3344      696E6974 
 3344      56617200 
 3345              	.LASF86:
 3346 0206 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3346      4152545F 
 3346      696E7465 
 3346      72666163 
 3346      654E756D 
 3347              	.LASF11:
 3348 021e 75696E74 		.ascii	"uint32\000"
 3348      333200
 3349              	.LASF63:
 3350 0225 70446174 		.ascii	"pData\000"
 3350      6100
 3351              	.LASF23:
 3352 022b 65704D6F 		.ascii	"epMode\000"
 3352      646500
 3353              	.LASF35:
 3354 0232 72657365 		.ascii	"reserved\000"
 3354      72766564 
 3354      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 106


 3355              	.LASF85:
 3356 023b 55534255 		.ascii	"USBUART_deviceStatus\000"
 3356      4152545F 
 3356      64657669 
 3356      63655374 
 3356      61747573 
 3357              	.LASF8:
 3358 0250 756E7369 		.ascii	"unsigned int\000"
 3358      676E6564 
 3358      20696E74 
 3358      00
 3359              	.LASF5:
 3360 025d 6C6F6E67 		.ascii	"long unsigned int\000"
 3360      20756E73 
 3360      69676E65 
 3360      6420696E 
 3360      7400
 3361              	.LASF3:
 3362 026f 73686F72 		.ascii	"short unsigned int\000"
 3362      7420756E 
 3362      7369676E 
 3362      65642069 
 3362      6E7400
 3363              	.LASF48:
 3364 0282 55534255 		.ascii	"USBUART_Start\000"
 3364      4152545F 
 3364      53746172 
 3364      7400
 3365              	.LASF56:
 3366 0290 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3366      4152545F 
 3366      47657449 
 3366      6E746572 
 3366      66616365 
 3367              	.LASF49:
 3368 02ac 55534255 		.ascii	"USBUART_Init\000"
 3368      4152545F 
 3368      496E6974 
 3368      00
 3369              	.LASF44:
 3370 02b9 61726245 		.ascii	"arbEp\000"
 3370      7000
 3371              	.LASF26:
 3372 02bf 696E7465 		.ascii	"interface\000"
 3372      72666163 
 3372      6500
 3373              	.LASF53:
 3374 02c9 63723152 		.ascii	"cr1Reg\000"
 3374      656700
 3375              	.LASF16:
 3376 02d0 72656733 		.ascii	"reg32\000"
 3376      3200
 3377              	.LASF88:
 3378 02d6 55534255 		.ascii	"USBUART_deviceAddress\000"
 3378      4152545F 
 3378      64657669 
 3378      63654164 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 107


 3378      64726573 
 3379              	.LASF92:
 3380 02ec 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3380      72617465 
 3380      645F536F 
 3380      75726365 
 3380      5C50536F 
 3381              	.LASF41:
 3382 030d 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3382      4152545F 
 3382      6172625F 
 3382      65705F73 
 3382      74727563 
 3383              	.LASF20:
 3384 0323 68774570 		.ascii	"hwEpState\000"
 3384      53746174 
 3384      6500
 3385              	.LASF45:
 3386 032d 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3386      4152545F 
 3386      6172625F 
 3386      6570735F 
 3386      73747275 
 3387              	.LASF17:
 3388 0344 73697A65 		.ascii	"sizetype\000"
 3388      74797065 
 3388      00
 3389              	.LASF42:
 3390 034d 73696545 		.ascii	"sieEp\000"
 3390      7000
 3391              	.LASF91:
 3392 0353 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3392      43393920 
 3392      352E342E 
 3392      31203230 
 3392      31363036 
 3393 0386 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3393      20726576 
 3393      6973696F 
 3393      6E203233 
 3393      37373135 
 3394 03b9 30202D73 		.ascii	"0 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 3394      74643D63 
 3394      3939202D 
 3394      6666756E 
 3394      6374696F 
 3395              	.LASF68:
 3396 03ea 55534255 		.ascii	"USBUART_Force\000"
 3396      4152545F 
 3396      466F7263 
 3396      6500
 3397              	.LASF18:
 3398 03f8 61747472 		.ascii	"attrib\000"
 3398      696200
 3399              	.LASF39:
 3400 03ff 72775261 		.ascii	"rwRaMsb\000"
 3400      4D736200 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 108


 3401              	.LASF28:
 3402 0407 6570436E 		.ascii	"epCnt0\000"
 3402      743000
 3403              	.LASF29:
 3404 040e 6570436E 		.ascii	"epCnt1\000"
 3404      743100
 3405              	.LASF30:
 3406 0415 65704372 		.ascii	"epCr0\000"
 3406      3000
 3407              	.LASF12:
 3408 041b 666C6F61 		.ascii	"float\000"
 3408      7400
 3409              	.LASF65:
 3410 0421 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3410      4152545F 
 3410      52656164 
 3410      4F757445 
 3410      5000
 3411              	.LASF19:
 3412 0433 61706945 		.ascii	"apiEpState\000"
 3412      70537461 
 3412      746500
 3413              	.LASF15:
 3414 043e 72656738 		.ascii	"reg8\000"
 3414      00
 3415              	.LASF87:
 3416 0443 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3416      4152545F 
 3416      696E7465 
 3416      72666163 
 3416      65536574 
 3417              	.LASF1:
 3418 045c 756E7369 		.ascii	"unsigned char\000"
 3418      676E6564 
 3418      20636861 
 3418      7200
 3419              	.LASF2:
 3420 046a 73686F72 		.ascii	"short int\000"
 3420      7420696E 
 3420      7400
 3421              	.LASF58:
 3422 0474 55534255 		.ascii	"USBUART_GetEPState\000"
 3422      4152545F 
 3422      47657445 
 3422      50537461 
 3422      746500
 3423              	.LASF38:
 3424 0487 72775261 		.ascii	"rwRa\000"
 3424      00
 3425              	.LASF67:
 3426 048c 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3426      4152545F 
 3426      44697361 
 3426      626C654F 
 3426      75744550 
 3427              	.LASF37:
 3428 04a1 72775761 		.ascii	"rwWaMsb\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 109


 3428      4D736200 
 3429              	.LASF31:
 3430 04a9 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3430      4152545F 
 3430      7369655F 
 3430      65705F73 
 3430      74727563 
 3431              	.LASF69:
 3432 04bf 62537461 		.ascii	"bState\000"
 3432      746500
 3433              	.LASF64:
 3434 04c6 6C656E67 		.ascii	"length\000"
 3434      746800
 3435              	.LASF14:
 3436 04cd 63686172 		.ascii	"char\000"
 3436      00
 3437              	.LASF47:
 3438 04d2 6D6F6465 		.ascii	"mode\000"
 3438      00
 3439              	.LASF25:
 3440 04d7 62756666 		.ascii	"bufferSize\000"
 3440      65725369 
 3440      7A6500
 3441              	.LASF27:
 3442 04e2 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3442      42554152 
 3442      545F4550 
 3442      5F43544C 
 3442      5F424C4F 
 3443              	.LASF24:
 3444 04f9 62756666 		.ascii	"buffOffset\000"
 3444      4F666673 
 3444      657400
 3445              	.LASF57:
 3446 0504 696E7465 		.ascii	"interfaceNumber\000"
 3446      72666163 
 3446      654E756D 
 3446      62657200 
 3447              	.LASF60:
 3448 0514 55534255 		.ascii	"USBUART_GetEPCount\000"
 3448      4152545F 
 3448      47657445 
 3448      50436F75 
 3448      6E7400
 3449              	.LASF52:
 3450 0527 656E6162 		.ascii	"enableInterrupts\000"
 3450      6C65496E 
 3450      74657272 
 3450      75707473 
 3450      00
 3451              	.LASF40:
 3452 0538 72774472 		.ascii	"rwDr\000"
 3452      00
 3453              	.LASF50:
 3454 053d 55534255 		.ascii	"USBUART_InitComponent\000"
 3454      4152545F 
 3454      496E6974 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cctnYR91.s 			page 110


 3454      436F6D70 
 3454      6F6E656E 
 3455              	.LASF83:
 3456 0553 55534255 		.ascii	"USBUART_configuration\000"
 3456      4152545F 
 3456      636F6E66 
 3456      69677572 
 3456      6174696F 
 3457              	.LASF55:
 3458 0569 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3458      4152545F 
 3458      4973436F 
 3458      6E666967 
 3458      75726174 
 3459              	.LASF33:
 3460 0588 6570496E 		.ascii	"epIntEn\000"
 3460      74456E00 
 3461              	.LASF77:
 3462 0590 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3462      4152545F 
 3462      5265496E 
 3462      6974436F 
 3462      6D706F6E 
 3463              	.LASF82:
 3464 05a8 55534255 		.ascii	"USBUART_transferState\000"
 3464      4152545F 
 3464      7472616E 
 3464      73666572 
 3464      53746174 
 3465              	.LASF78:
 3466 05be 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3466      4152545F 
 3466      456E6162 
 3466      6C65536F 
 3466      66496E74 
 3467              	.LASF84:
 3468 05d3 55534255 		.ascii	"USBUART_configurationChanged\000"
 3468      4152545F 
 3468      636F6E66 
 3468      69677572 
 3468      6174696F 
 3469              	.LASF74:
 3470 05f0 72657375 		.ascii	"result\000"
 3470      6C7400
 3471              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
