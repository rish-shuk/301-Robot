ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 03       		.byte	3
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.comm	s3,1,1
 124              		.comm	s4,1,1
 125              		.comm	s5,1,1
 126              		.global	s6
 127              		.bss
 128              		.type	s6, %object
 129              		.size	s6, 1
 130              	s6:
 131 0013 00       		.space	1
 132              		.global	totalMilliseconds
 133              		.align	2
 134              		.type	totalMilliseconds, %object
 135              		.size	totalMilliseconds, 4
 136              	totalMilliseconds:
 137 0014 00000000 		.space	4
 138              		.global	totalDistance
 139              		.align	2
 140              		.type	totalDistance, %object
 141              		.size	totalDistance, 4
 142              	totalDistance:
 143 0018 00000000 		.space	4
 144              		.comm	buffer,69,4
 145              		.global	quadDec2Count
 146              		.align	2
 147              		.type	quadDec2Count, %object
 148              		.size	quadDec2Count, 4
 149              	quadDec2Count:
 150 001c 00000000 		.space	4
 151              		.global	timerInt
 152              		.align	2
 153              		.type	timerInt, %object
 154              		.size	timerInt, 4
 155              	timerInt:
 156 0020 00000000 		.space	4
 157              		.global	keepLedOn
 158              		.align	2
 159              		.type	keepLedOn, %object
 160              		.size	keepLedOn, 4
 161              	keepLedOn:
 162 0024 00000000 		.space	4
 163              		.global	stopBuffer
 164              		.align	2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 4


 165              		.type	stopBuffer, %object
 166              		.size	stopBuffer, 4
 167              	stopBuffer:
 168 0028 00000000 		.space	4
 169              		.global	__aeabi_i2d
 170              		.global	__aeabi_dmul
 171              		.global	__aeabi_ddiv
 172              		.global	__aeabi_d2f
 173              		.global	__aeabi_fadd
 174              		.section	.text.speedTimer,"ax",%progbits
 175              		.align	2
 176              		.global	speedTimer
 177              		.thumb
 178              		.thumb_func
 179              		.type	speedTimer, %function
 180              	speedTimer:
 181              	.LFB64:
 182              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 5


  40:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  41:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  42:main.c        **** enum OrientationState currentOrientation, previousOrientation = Right;
  43:main.c        **** Instruction currentInstruction;
  44:main.c        **** int numSteps;
  45:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  46:main.c        **** Instruction * instructionList;
  47:main.c        **** // ----------------------------------------
  48:main.c        **** uint8 s3, s4, s5, s6 = 0;
  49:main.c        **** //* ========================================
  50:main.c        **** // Calculating Distance
  51:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  52:main.c        **** 
  53:main.c        **** uint32 totalMilliseconds = 0;
  54:main.c        **** float totalDistance = 0; // in mm
  55:main.c        **** //* ========================================
  56:main.c        **** char buffer[69];
  57:main.c        **** int quadDec2Count = 0;
  58:main.c        **** int timerInt = 0;
  59:main.c        **** int keepLedOn = 0;
  60:main.c        **** uint32 stopBuffer = 0;
  61:main.c        **** 
  62:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  63:main.c        **** 
  64:main.c        **** CY_ISR (speedTimer) {
 183              		.loc 1 64 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 90B5     		push	{r4, r7, lr}
 188              		.cfi_def_cfa_offset 12
 189              		.cfi_offset 4, -12
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 83B0     		sub	sp, sp, #12
 193              		.cfi_def_cfa_offset 24
 194 0004 00AF     		add	r7, sp, #0
 195              		.cfi_def_cfa_register 7
  65:main.c        ****     timerInt = 1;
 196              		.loc 1 65 0
 197 0006 364B     		ldr	r3, .L4+16
 198 0008 0122     		movs	r2, #1
 199 000a 1A60     		str	r2, [r3]
  66:main.c        ****     //quadDec_M1 used for turning macros
  67:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 200              		.loc 1 67 0
 201 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 202 0010 0346     		mov	r3, r0
 203 0012 1A46     		mov	r2, r3
 204 0014 334B     		ldr	r3, .L4+20
 205 0016 1A60     		str	r2, [r3]
  68:main.c        ****     
  69:main.c        ****     if ((currentDirection == Forward || 
 206              		.loc 1 69 0
 207 0018 334B     		ldr	r3, .L4+24
 208 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 209 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 6


 210 001e 17D0     		beq	.L2
  70:main.c        ****         currentDirection == waitForTurn || 
 211              		.loc 1 70 0 discriminator 1
 212 0020 314B     		ldr	r3, .L4+24
 213 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69:main.c        ****         currentDirection == waitForTurn || 
 214              		.loc 1 69 0 discriminator 1
 215 0024 072B     		cmp	r3, #7
 216 0026 13D0     		beq	.L2
  71:main.c        ****         currentDirection == waitForLeftTurn ||
 217              		.loc 1 71 0
 218 0028 2F4B     		ldr	r3, .L4+24
 219 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70:main.c        ****         currentDirection == waitForTurn || 
 220              		.loc 1 70 0
 221 002c 012B     		cmp	r3, #1
 222 002e 0FD0     		beq	.L2
  72:main.c        ****         currentDirection == waitForRightTurn ||
 223              		.loc 1 72 0
 224 0030 2D4B     		ldr	r3, .L4+24
 225 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71:main.c        ****         currentDirection == waitForLeftTurn ||
 226              		.loc 1 71 0
 227 0034 022B     		cmp	r3, #2
 228 0036 0BD0     		beq	.L2
  73:main.c        ****         currentDirection == ForwardAfterTurn ||
 229              		.loc 1 73 0
 230 0038 2B4B     		ldr	r3, .L4+24
 231 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72:main.c        ****         currentDirection == waitForRightTurn ||
 232              		.loc 1 72 0
 233 003c 082B     		cmp	r3, #8
 234 003e 07D0     		beq	.L2
  74:main.c        ****         currentDirection == AdjustToTheLeft ||
 235              		.loc 1 74 0
 236 0040 294B     		ldr	r3, .L4+24
 237 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  73:main.c        ****         currentDirection == ForwardAfterTurn ||
 238              		.loc 1 73 0
 239 0044 032B     		cmp	r3, #3
 240 0046 03D0     		beq	.L2
  75:main.c        ****         currentDirection == AdjustToTheRight) &&
 241              		.loc 1 75 0
 242 0048 274B     		ldr	r3, .L4+24
 243 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74:main.c        ****         currentDirection == AdjustToTheLeft ||
 244              		.loc 1 74 0
 245 004c 042B     		cmp	r3, #4
 246 004e 34D1     		bne	.L3
 247              	.L2:
  76:main.c        ****         quadDec2Count != 0) {
 248              		.loc 1 76 0
 249 0050 244B     		ldr	r3, .L4+20
 250 0052 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == AdjustToTheRight) &&
 251              		.loc 1 75 0
 252 0054 002B     		cmp	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 7


 253 0056 30D0     		beq	.L3
 254              	.LBB2:
  77:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  78:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 255              		.loc 1 78 0
 256 0058 224B     		ldr	r3, .L4+20
 257 005a 1B68     		ldr	r3, [r3]
 258 005c 002B     		cmp	r3, #0
 259 005e B8BF     		it	lt
 260 0060 5B42     		rsblt	r3, r3, #0
 261 0062 1846     		mov	r0, r3
 262 0064 FFF7FEFF 		bl	__aeabi_i2d
 263 0068 19A3     		adr	r3, .L4
 264 006a D3E90023 		ldrd	r2, [r3]
 265 006e FFF7FEFF 		bl	__aeabi_dmul
 266 0072 0346     		mov	r3, r0
 267 0074 0C46     		mov	r4, r1
 268 0076 1846     		mov	r0, r3
 269 0078 2146     		mov	r1, r4
 270 007a 17A3     		adr	r3, .L4+8
 271 007c D3E90023 		ldrd	r2, [r3]
 272 0080 FFF7FEFF 		bl	__aeabi_dmul
 273 0084 0346     		mov	r3, r0
 274 0086 0C46     		mov	r4, r1
 275 0088 1846     		mov	r0, r3
 276 008a 2146     		mov	r1, r4
 277 008c 4FF00002 		mov	r2, #0
 278 0090 164B     		ldr	r3, .L4+28
 279 0092 FFF7FEFF 		bl	__aeabi_ddiv
 280 0096 0346     		mov	r3, r0
 281 0098 0C46     		mov	r4, r1
 282 009a 1846     		mov	r0, r3
 283 009c 2146     		mov	r1, r4
 284 009e FFF7FEFF 		bl	__aeabi_d2f
 285 00a2 0346     		mov	r3, r0
 286 00a4 7B60     		str	r3, [r7, #4]	@ float
  79:main.c        ****         
  80:main.c        ****         totalDistance = totalDistance + newDistance;
 287              		.loc 1 80 0
 288 00a6 124B     		ldr	r3, .L4+32
 289 00a8 1B68     		ldr	r3, [r3]	@ float
 290 00aa 7968     		ldr	r1, [r7, #4]	@ float
 291 00ac 1846     		mov	r0, r3
 292 00ae FFF7FEFF 		bl	__aeabi_fadd
 293 00b2 0346     		mov	r3, r0
 294 00b4 1A46     		mov	r2, r3
 295 00b6 0E4B     		ldr	r3, .L4+32
 296 00b8 1A60     		str	r2, [r3]	@ float
 297              	.L3:
 298              	.LBE2:
  81:main.c        ****     }
  82:main.c        ****     
  83:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 299              		.loc 1 83 0
 300 00ba 0020     		movs	r0, #0
 301 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  84:main.c        ****     QuadDec_M2_Start(); // restart counter
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 8


 302              		.loc 1 84 0
 303 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  85:main.c        ****     
  86:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 304              		.loc 1 86 0
 305 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  87:main.c        **** }
 306              		.loc 1 87 0
 307 00c8 00BF     		nop
 308 00ca 0C37     		adds	r7, r7, #12
 309              		.cfi_def_cfa_offset 12
 310 00cc BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 00ce 90BD     		pop	{r4, r7, pc}
 314              	.L5:
 315              		.align	3
 316              	.L4:
 317 00d0 182D4454 		.word	1413754136
 318 00d4 FB210940 		.word	1074340347
 319 00d8 00000000 		.word	0
 320 00dc 00205040 		.word	1078992896
 321 00e0 00000000 		.word	timerInt
 322 00e4 00000000 		.word	quadDec2Count
 323 00e8 00000000 		.word	currentDirection
 324 00ec 00806C40 		.word	1080852480
 325 00f0 00000000 		.word	totalDistance
 326              		.cfi_endproc
 327              	.LFE64:
 328              		.size	speedTimer, .-speedTimer
 329              		.section	.text.S3_DETECTED,"ax",%progbits
 330              		.align	2
 331              		.global	S3_DETECTED
 332              		.thumb
 333              		.thumb_func
 334              		.type	S3_DETECTED, %function
 335              	S3_DETECTED:
 336              	.LFB65:
  88:main.c        **** 
  89:main.c        **** CY_ISR(S3_DETECTED) {
 337              		.loc 1 89 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
  90:main.c        ****     // Sensor has detected WHITE
  91:main.c        ****     s3 = 1; // , Black = 0, White = 1
 347              		.loc 1 91 0
 348 0004 034B     		ldr	r3, .L7
 349 0006 0122     		movs	r2, #1
 350 0008 1A70     		strb	r2, [r3]
  92:main.c        ****     //LED_Write(1u);
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 9


  93:main.c        **** }
 351              		.loc 1 93 0
 352 000a 00BF     		nop
 353 000c BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 000e 80BC     		pop	{r7}
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0010 7047     		bx	lr
 360              	.L8:
 361 0012 00BF     		.align	2
 362              	.L7:
 363 0014 00000000 		.word	s3
 364              		.cfi_endproc
 365              	.LFE65:
 366              		.size	S3_DETECTED, .-S3_DETECTED
 367              		.section	.text.S4_DETECTED,"ax",%progbits
 368              		.align	2
 369              		.global	S4_DETECTED
 370              		.thumb
 371              		.thumb_func
 372              		.type	S4_DETECTED, %function
 373              	S4_DETECTED:
 374              	.LFB66:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S4_DETECTED) {
 375              		.loc 1 95 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 7, -4
 383 0002 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s4 = 1; // , Black = 0, White = 1
 385              		.loc 1 97 0
 386 0004 034B     		ldr	r3, .L10
 387 0006 0122     		movs	r2, #1
 388 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 389              		.loc 1 99 0
 390 000a 00BF     		nop
 391 000c BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 000e 80BC     		pop	{r7}
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
 397 0010 7047     		bx	lr
 398              	.L11:
 399 0012 00BF     		.align	2
 400              	.L10:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 10


 401 0014 00000000 		.word	s4
 402              		.cfi_endproc
 403              	.LFE66:
 404              		.size	S4_DETECTED, .-S4_DETECTED
 405              		.section	.text.S5_DETECTED,"ax",%progbits
 406              		.align	2
 407              		.global	S5_DETECTED
 408              		.thumb
 409              		.thumb_func
 410              		.type	S5_DETECTED, %function
 411              	S5_DETECTED:
 412              	.LFB67:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S5_DETECTED) {
 413              		.loc 1 101 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418 0000 80B4     		push	{r7}
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s5 = 1; // , Black = 0, White = 1
 423              		.loc 1 103 0
 424 0004 034B     		ldr	r3, .L13
 425 0006 0122     		movs	r2, #1
 426 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 427              		.loc 1 105 0
 428 000a 00BF     		nop
 429 000c BD46     		mov	sp, r7
 430              		.cfi_def_cfa_register 13
 431              		@ sp needed
 432 000e 80BC     		pop	{r7}
 433              		.cfi_restore 7
 434              		.cfi_def_cfa_offset 0
 435 0010 7047     		bx	lr
 436              	.L14:
 437 0012 00BF     		.align	2
 438              	.L13:
 439 0014 00000000 		.word	s5
 440              		.cfi_endproc
 441              	.LFE67:
 442              		.size	S5_DETECTED, .-S5_DETECTED
 443              		.section	.text.S6_DETECTED,"ax",%progbits
 444              		.align	2
 445              		.global	S6_DETECTED
 446              		.thumb
 447              		.thumb_func
 448              		.type	S6_DETECTED, %function
 449              	S6_DETECTED:
 450              	.LFB68:
 106:main.c        **** 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 11


 107:main.c        **** CY_ISR(S6_DETECTED) {
 451              		.loc 1 107 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 1, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456 0000 80B4     		push	{r7}
 457              		.cfi_def_cfa_offset 4
 458              		.cfi_offset 7, -4
 459 0002 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s6 = 1; // , Black = 0, White = 1
 461              		.loc 1 109 0
 462 0004 034B     		ldr	r3, .L16
 463 0006 0122     		movs	r2, #1
 464 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 465              		.loc 1 111 0
 466 000a 00BF     		nop
 467 000c BD46     		mov	sp, r7
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
 470 000e 80BC     		pop	{r7}
 471              		.cfi_restore 7
 472              		.cfi_def_cfa_offset 0
 473 0010 7047     		bx	lr
 474              	.L17:
 475 0012 00BF     		.align	2
 476              	.L16:
 477 0014 00000000 		.word	s6
 478              		.cfi_endproc
 479              	.LFE68:
 480              		.size	S6_DETECTED, .-S6_DETECTED
 481              		.section	.text.TIMER_FINISH,"ax",%progbits
 482              		.align	2
 483              		.global	TIMER_FINISH
 484              		.thumb
 485              		.thumb_func
 486              		.type	TIMER_FINISH, %function
 487              	TIMER_FINISH:
 488              	.LFB69:
 112:main.c        **** 
 113:main.c        **** CY_ISR(TIMER_FINISH) {
 489              		.loc 1 113 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 114:main.c        ****     if (currentDirection == Stop) {
 499              		.loc 1 114 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 12


 500 0004 0A4B     		ldr	r3, .L21
 501 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0008 052B     		cmp	r3, #5
 503 000a 05D1     		bne	.L19
 115:main.c        ****         stopBuffer = stopBuffer + 1;
 504              		.loc 1 115 0
 505 000c 094B     		ldr	r3, .L21+4
 506 000e 1B68     		ldr	r3, [r3]
 507 0010 0133     		adds	r3, r3, #1
 508 0012 084A     		ldr	r2, .L21+4
 509 0014 1360     		str	r3, [r2]
 510 0016 02E0     		b	.L20
 511              	.L19:
 116:main.c        ****     } else {
 117:main.c        ****         stopBuffer = 0;
 512              		.loc 1 117 0
 513 0018 064B     		ldr	r3, .L21+4
 514 001a 0022     		movs	r2, #0
 515 001c 1A60     		str	r2, [r3]
 516              	.L20:
 118:main.c        ****     }
 119:main.c        ****     SetRobotMovement(); 
 517              		.loc 1 119 0
 518 001e FFF7FEFF 		bl	SetRobotMovement
 120:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 519              		.loc 1 120 0
 520 0022 FFF7FEFF 		bl	ResetSensorFlags
 121:main.c        ****     Timer_LED_ReadStatusRegister();
 521              		.loc 1 121 0
 522 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 122:main.c        **** }
 523              		.loc 1 122 0
 524 002a 00BF     		nop
 525 002c 80BD     		pop	{r7, pc}
 526              	.L22:
 527 002e 00BF     		.align	2
 528              	.L21:
 529 0030 00000000 		.word	currentDirection
 530 0034 00000000 		.word	stopBuffer
 531              		.cfi_endproc
 532              	.LFE69:
 533              		.size	TIMER_FINISH, .-TIMER_FINISH
 534              		.section	.text.main,"ax",%progbits
 535              		.align	2
 536              		.global	main
 537              		.thumb
 538              		.thumb_func
 539              		.type	main, %function
 540              	main:
 541              	.LFB70:
 123:main.c        **** 
 124:main.c        **** 
 125:main.c        **** int main()
 126:main.c        **** {
 542              		.loc 1 126 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 13


 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 127:main.c        **** // ----- INITIALIZATIONS ----------
 128:main.c        ****     CYGlobalIntEnable;
 552              		.loc 1 128 0
 553              		.syntax unified
 554              	@ 128 "main.c" 1
 555 0004 62B6     		CPSIE   i
 556              	@ 0 "" 2
 129:main.c        ****     ResetSensorFlags();
 557              		.loc 1 129 0
 558              		.thumb
 559              		.syntax unified
 560 0006 FFF7FEFF 		bl	ResetSensorFlags
 130:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 561              		.loc 1 130 0
 562 000a FFF7FEFF 		bl	init
 131:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 563              		.loc 1 131 0
 564 000e 1E48     		ldr	r0, .L27
 565 0010 FFF7FEFF 		bl	isr_speed_StartEx
 132:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 566              		.loc 1 132 0
 567 0014 1D48     		ldr	r0, .L27+4
 568 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 133:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 569              		.loc 1 133 0
 570 001a 1D48     		ldr	r0, .L27+8
 571 001c FFF7FEFF 		bl	S3_detected_StartEx
 134:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 572              		.loc 1 134 0
 573 0020 1C48     		ldr	r0, .L27+12
 574 0022 FFF7FEFF 		bl	S4_detected_StartEx
 135:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 575              		.loc 1 135 0
 576 0026 1C48     		ldr	r0, .L27+16
 577 0028 FFF7FEFF 		bl	S5_detected_StartEx
 136:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 578              		.loc 1 136 0
 579 002c 1B48     		ldr	r0, .L27+20
 580 002e FFF7FEFF 		bl	S6_detected_StartEx
 137:main.c        ****     Timer_LED_Start();
 581              		.loc 1 137 0
 582 0032 FFF7FEFF 		bl	Timer_LED_Start
 138:main.c        ****     instructionList = findPath(map, food_list);
 583              		.loc 1 138 0
 584 0036 1A49     		ldr	r1, .L27+24
 585 0038 1A48     		ldr	r0, .L27+28
 586 003a FFF7FEFF 		bl	findPath
 587 003e 0246     		mov	r2, r0
 588 0040 194B     		ldr	r3, .L27+32
 589 0042 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 14


 139:main.c        ****     numSteps = instructionsListLength();
 590              		.loc 1 139 0
 591 0044 FFF7FEFF 		bl	instructionsListLength
 592 0048 0246     		mov	r2, r0
 593 004a 184B     		ldr	r3, .L27+36
 594 004c 1A60     		str	r2, [r3]
 140:main.c        ****     
 141:main.c        **** // ------USB SETUP ----------------    
 142:main.c        **** #ifdef USE_USB    
 143:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 595              		.loc 1 143 0
 596 004e 0121     		movs	r1, #1
 597 0050 0020     		movs	r0, #0
 598 0052 FFF7FEFF 		bl	USBUART_Start
 144:main.c        **** #endif        
 145:main.c        ****     RF_BT_SELECT_Write(0);
 599              		.loc 1 145 0
 600 0056 0020     		movs	r0, #0
 601 0058 FFF7FEFF 		bl	RF_BT_SELECT_Write
 602              	.L26:
 146:main.c        ****     
 147:main.c        ****     //usbPutString("Initialised UART");
 148:main.c        ****     for(;;)
 149:main.c        ****     {
 150:main.c        ****         if(timerInt == 1) {
 603              		.loc 1 150 0
 604 005c 144B     		ldr	r3, .L27+40
 605 005e 1B68     		ldr	r3, [r3]
 606 0060 012B     		cmp	r3, #1
 607 0062 08D1     		bne	.L24
 151:main.c        ****             timerInt = 0;
 608              		.loc 1 151 0
 609 0064 124B     		ldr	r3, .L27+40
 610 0066 0022     		movs	r2, #0
 611 0068 1A60     		str	r2, [r3]
 152:main.c        ****             // calculate RPM of M2
 153:main.c        ****             quadCountToRPM(quadDec2Count);
 612              		.loc 1 153 0
 613 006a 124B     		ldr	r3, .L27+44
 614 006c 1B68     		ldr	r3, [r3]
 615 006e 9BB2     		uxth	r3, r3
 616 0070 1846     		mov	r0, r3
 617 0072 FFF7FEFF 		bl	quadCountToRPM
 618              	.L24:
 154:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 155:main.c        ****             //usbPutString(buffer);
 156:main.c        ****             //usbPutString(" ");
 157:main.c        ****         }
 158:main.c        ****         //handle_usb();
 159:main.c        ****         if (flag_KB_string == 1)
 619              		.loc 1 159 0
 620 0076 104B     		ldr	r3, .L27+48
 621 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 622 007a 012B     		cmp	r3, #1
 623 007c EED1     		bne	.L26
 160:main.c        ****         {
 161:main.c        ****             //usbPutString("Total Distance: ");
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 15


 162:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 163:main.c        ****             //usbPutString(buffer);
 164:main.c        ****             flag_KB_string = 0;
 624              		.loc 1 164 0
 625 007e 0E4B     		ldr	r3, .L27+48
 626 0080 0022     		movs	r2, #0
 627 0082 1A70     		strb	r2, [r3]
 165:main.c        ****         }           
 166:main.c        ****     }
 628              		.loc 1 166 0
 629 0084 EAE7     		b	.L26
 630              	.L28:
 631 0086 00BF     		.align	2
 632              	.L27:
 633 0088 00000000 		.word	speedTimer
 634 008c 00000000 		.word	TIMER_FINISH
 635 0090 00000000 		.word	S3_DETECTED
 636 0094 00000000 		.word	S4_DETECTED
 637 0098 00000000 		.word	S5_DETECTED
 638 009c 00000000 		.word	S6_DETECTED
 639 00a0 00000000 		.word	food_list
 640 00a4 00000000 		.word	map
 641 00a8 00000000 		.word	instructionList
 642 00ac 00000000 		.word	numSteps
 643 00b0 00000000 		.word	timerInt
 644 00b4 00000000 		.word	quadDec2Count
 645 00b8 00000000 		.word	flag_KB_string
 646              		.cfi_endproc
 647              	.LFE70:
 648              		.size	main, .-main
 649              		.global	__aeabi_fmul
 650              		.global	__aeabi_f2iz
 651              		.section	.text.quadCountToRPM,"ax",%progbits
 652              		.align	2
 653              		.global	quadCountToRPM
 654              		.thumb
 655              		.thumb_func
 656              		.type	quadCountToRPM, %function
 657              	quadCountToRPM:
 658              	.LFB71:
 167:main.c        ****     return 0;
 168:main.c        **** }
 169:main.c        **** 
 170:main.c        **** // Calculations
 171:main.c        **** //* ========================================
 172:main.c        **** int16 quadCountToRPM(uint16 count)
 173:main.c        **** {
 659              		.loc 1 173 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 90B5     		push	{r4, r7, lr}
 664              		.cfi_def_cfa_offset 12
 665              		.cfi_offset 4, -12
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 16


 669              		.cfi_def_cfa_offset 32
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 0346     		mov	r3, r0
 673 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 174:main.c        ****     float cps = count/57.00;
 674              		.loc 1 174 0
 675 000a FB88     		ldrh	r3, [r7, #6]
 676 000c 1846     		mov	r0, r3
 677 000e FFF7FEFF 		bl	__aeabi_i2d
 678 0012 4FF00002 		mov	r2, #0
 679 0016 0D4B     		ldr	r3, .L31
 680 0018 FFF7FEFF 		bl	__aeabi_ddiv
 681 001c 0346     		mov	r3, r0
 682 001e 0C46     		mov	r4, r1
 683 0020 1846     		mov	r0, r3
 684 0022 2146     		mov	r1, r4
 685 0024 FFF7FEFF 		bl	__aeabi_d2f
 686 0028 0346     		mov	r3, r0
 687 002a FB60     		str	r3, [r7, #12]	@ float
 175:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 688              		.loc 1 175 0
 689 002c 0849     		ldr	r1, .L31+4
 690 002e F868     		ldr	r0, [r7, #12]	@ float
 691 0030 FFF7FEFF 		bl	__aeabi_fmul
 692 0034 0346     		mov	r3, r0
 693 0036 1846     		mov	r0, r3
 694 0038 FFF7FEFF 		bl	__aeabi_f2iz
 695 003c 0346     		mov	r3, r0
 696 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 176:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 177:main.c        ****     return rpm;
 697              		.loc 1 177 0
 698 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 178:main.c        ****     //usbPutString(buffer);
 179:main.c        ****     //usbPutString("rpm ");
 180:main.c        **** }
 699              		.loc 1 180 0
 700 0044 1846     		mov	r0, r3
 701 0046 1437     		adds	r7, r7, #20
 702              		.cfi_def_cfa_offset 12
 703 0048 BD46     		mov	sp, r7
 704              		.cfi_def_cfa_register 13
 705              		@ sp needed
 706 004a 90BD     		pop	{r4, r7, pc}
 707              	.L32:
 708              		.align	2
 709              	.L31:
 710 004c 00804C40 		.word	1078755328
 711 0050 00007041 		.word	1097859072
 712              		.cfi_endproc
 713              	.LFE71:
 714              		.size	quadCountToRPM, .-quadCountToRPM
 715              		.section	.text.ResetSensorFlags,"ax",%progbits
 716              		.align	2
 717              		.global	ResetSensorFlags
 718              		.thumb
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 17


 719              		.thumb_func
 720              		.type	ResetSensorFlags, %function
 721              	ResetSensorFlags:
 722              	.LFB72:
 181:main.c        **** 
 182:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 183:main.c        **** void ResetSensorFlags() {
 723              		.loc 1 183 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 0000 80B4     		push	{r7}
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 0002 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 184:main.c        ****     s3 = 0;
 733              		.loc 1 184 0
 734 0004 074B     		ldr	r3, .L34
 735 0006 0022     		movs	r2, #0
 736 0008 1A70     		strb	r2, [r3]
 185:main.c        ****     s4 = 0;
 737              		.loc 1 185 0
 738 000a 074B     		ldr	r3, .L34+4
 739 000c 0022     		movs	r2, #0
 740 000e 1A70     		strb	r2, [r3]
 186:main.c        ****     s5 = 0;
 741              		.loc 1 186 0
 742 0010 064B     		ldr	r3, .L34+8
 743 0012 0022     		movs	r2, #0
 744 0014 1A70     		strb	r2, [r3]
 187:main.c        ****     s6 = 0;
 745              		.loc 1 187 0
 746 0016 064B     		ldr	r3, .L34+12
 747 0018 0022     		movs	r2, #0
 748 001a 1A70     		strb	r2, [r3]
 188:main.c        **** }
 749              		.loc 1 188 0
 750 001c 00BF     		nop
 751 001e BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 0020 80BC     		pop	{r7}
 755              		.cfi_restore 7
 756              		.cfi_def_cfa_offset 0
 757 0022 7047     		bx	lr
 758              	.L35:
 759              		.align	2
 760              	.L34:
 761 0024 00000000 		.word	s3
 762 0028 00000000 		.word	s4
 763 002c 00000000 		.word	s5
 764 0030 00000000 		.word	s6
 765              		.cfi_endproc
 766              	.LFE72:
 767              		.size	ResetSensorFlags, .-ResetSensorFlags
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 18


 768              		.global	xBlocksize
 769              		.data
 770 0045 000000   		.align	2
 771              		.type	xBlocksize, %object
 772              		.size	xBlocksize, 4
 773              	xBlocksize:
 774 0048 0000FF42 		.word	1124007936
 775              		.global	yBlocksize
 776              		.align	2
 777              		.type	yBlocksize, %object
 778              		.size	yBlocksize, 4
 779              	yBlocksize:
 780 004c 0000A042 		.word	1117782016
 781              		.global	currentRow
 782              		.type	currentRow, %object
 783              		.size	currentRow, 1
 784              	currentRow:
 785 0050 01       		.byte	1
 786              		.global	currentCol
 787              		.type	currentCol, %object
 788              		.size	currentCol, 1
 789              	currentCol:
 790 0051 01       		.byte	1
 791              		.global	stoppedAfterTurn
 792              		.bss
 793              		.type	stoppedAfterTurn, %object
 794              		.size	stoppedAfterTurn, 1
 795              	stoppedAfterTurn:
 796 002c 00       		.space	1
 797              		.global	ignoreSensor
 798              		.type	ignoreSensor, %object
 799              		.size	ignoreSensor, 1
 800              	ignoreSensor:
 801 002d 00       		.space	1
 802              		.global	__aeabi_fcmpge
 803              		.section	.text.CheckSensorDirection,"ax",%progbits
 804              		.align	2
 805              		.global	CheckSensorDirection
 806              		.thumb
 807              		.thumb_func
 808              		.type	CheckSensorDirection, %function
 809              	CheckSensorDirection:
 810              	.LFB73:
 189:main.c        **** 
 190:main.c        **** float xBlocksize = 127.5; // 127.5
 191:main.c        **** float yBlocksize = 80; // 80
 192:main.c        **** uint8 currentRow = 1;
 193:main.c        **** uint8 currentCol = 1;
 194:main.c        **** 
 195:main.c        **** /*enum DirectionState GetNextStep() {
 196:main.c        ****     enum DirectionState directionState;
 197:main.c        ****     // Determines robot movement and orientation to follow optimal path
 198:main.c        ****     // enum DirectionState directionState = Stop;
 199:main.c        ****     previousOrientation = currentOrientation;
 200:main.c        ****     
 201:main.c        ****     if(map[currentRow][currentCol] == 9) {
 202:main.c        ****         directionState = Stop; // reached target
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 19


 203:main.c        ****         return directionState;
 204:main.c        ****     }
 205:main.c        ****         
 206:main.c        ****     switch (previousOrientation) {
 207:main.c        ****             case Up:
 208:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 209:main.c        ****                     currentOrientation = Up; 
 210:main.c        ****                     directionState = Forward;
 211:main.c        ****                     currentRow--;// update position
 212:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 213:main.c        ****                     currentOrientation = Left;
 214:main.c        ****                     directionState = waitForLeftTurn;
 215:main.c        ****                     //currentRow--;
 216:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 217:main.c        ****                     currentOrientation = Right;
 218:main.c        ****                     directionState = waitForRightTurn;
 219:main.c        ****                     //currentRow++; // update position
 220:main.c        ****                 }
 221:main.c        ****                 break;
 222:main.c        ****             case Down:
 223:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 224:main.c        ****                     currentOrientation = Down;
 225:main.c        ****                     directionState = Forward;
 226:main.c        ****                     currentRow++;
 227:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 228:main.c        ****                     currentOrientation = Left;
 229:main.c        ****                     directionState = waitForRightTurn;
 230:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 231:main.c        ****                     currentOrientation = Right;
 232:main.c        ****                     directionState = waitForLeftTurn;
 233:main.c        ****                 }
 234:main.c        ****                 break;
 235:main.c        ****             case Left:
 236:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 237:main.c        ****                     currentOrientation = Left;
 238:main.c        ****                     directionState = Forward;
 239:main.c        ****                     currentCol--; // update position
 240:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 241:main.c        ****                     currentOrientation = Up;
 242:main.c        ****                     directionState = waitForRightTurn;
 243:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 244:main.c        ****                     currentOrientation = Down;
 245:main.c        ****                     directionState = waitForLeftTurn;
 246:main.c        ****                 }
 247:main.c        ****                 break;
 248:main.c        ****             case Right:
 249:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 250:main.c        ****                     currentOrientation = Right;
 251:main.c        ****                     directionState = Forward;
 252:main.c        ****                     currentCol++; // update position
 253:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 254:main.c        ****                     currentOrientation = Up;
 255:main.c        ****                     directionState = waitForLeftTurn;
 256:main.c        ****                     //currentCol++; // update position
 257:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 258:main.c        ****                     currentOrientation = Down;
 259:main.c        ****                     directionState = waitForRightTurn;
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 20


 260:main.c        ****                     //currentCol--; // update position
 261:main.c        ****                 }
 262:main.c        ****                 break;
 263:main.c        ****             default:
 264:main.c        ****                 break;
 265:main.c        ****         }
 266:main.c        ****     
 267:main.c        ****     return directionState;
 268:main.c        **** }
 269:main.c        **** */
 270:main.c        **** uint8 stoppedAfterTurn = 0;
 271:main.c        **** uint8 ignoreSensor = 0;
 272:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 273:main.c        **** enum RobotMovement CheckSensorDirection() {
 811              		.loc 1 273 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 80B5     		push	{r7, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 82B0     		sub	sp, sp, #8
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 274:main.c        ****     float blocksize;
 275:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 823              		.loc 1 275 0
 824 0006 9A4B     		ldr	r3, .L66
 825 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 826 000a 002B     		cmp	r3, #0
 827 000c 03D0     		beq	.L37
 828              		.loc 1 275 0 is_stmt 0 discriminator 1
 829 000e 984B     		ldr	r3, .L66
 830 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 0012 012B     		cmp	r3, #1
 832 0014 03D1     		bne	.L38
 833              	.L37:
 276:main.c        ****         blocksize = yBlocksize;
 834              		.loc 1 276 0 is_stmt 1
 835 0016 974B     		ldr	r3, .L66+4
 836 0018 1B68     		ldr	r3, [r3]	@ float
 837 001a 7B60     		str	r3, [r7, #4]	@ float
 838 001c 02E0     		b	.L39
 839              	.L38:
 277:main.c        ****     } else {
 278:main.c        ****         blocksize = xBlocksize;
 840              		.loc 1 278 0
 841 001e 964B     		ldr	r3, .L66+8
 842 0020 1B68     		ldr	r3, [r3]	@ float
 843 0022 7B60     		str	r3, [r7, #4]	@ float
 844              	.L39:
 279:main.c        ****     }
 280:main.c        ****     //if(currentInstruction)
 281:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 845              		.loc 1 281 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 21


 846 0024 0523     		movs	r3, #5
 847 0026 FB70     		strb	r3, [r7, #3]
 282:main.c        ****     
 283:main.c        ****     if (stoppedAfterTurn == 1) {
 848              		.loc 1 283 0
 849 0028 944B     		ldr	r3, .L66+12
 850 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 851 002c 012B     		cmp	r3, #1
 852 002e 1AD1     		bne	.L40
 853              	.LBB3:
 284:main.c        ****         if (stopBuffer <= 50) {
 854              		.loc 1 284 0
 855 0030 934B     		ldr	r3, .L66+16
 856 0032 1B68     		ldr	r3, [r3]
 857 0034 322B     		cmp	r3, #50
 858 0036 06D8     		bhi	.L41
 285:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 859              		.loc 1 285 0
 860 0038 0523     		movs	r3, #5
 861 003a FB70     		strb	r3, [r7, #3]
 286:main.c        ****             previousDirection = directionState;
 862              		.loc 1 286 0
 863 003c 914A     		ldr	r2, .L66+20
 864 003e FB78     		ldrb	r3, [r7, #3]
 865 0040 1370     		strb	r3, [r2]
 287:main.c        ****             return directionState;
 866              		.loc 1 287 0
 867 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 868 0044 0FE1     		b	.L42
 869              	.L41:
 288:main.c        ****         }
 289:main.c        ****         directionState = GetNextStep(); // get next step at each block
 870              		.loc 1 289 0
 871 0046 FFF7FEFF 		bl	GetNextStep
 872 004a 0346     		mov	r3, r0
 873 004c FB70     		strb	r3, [r7, #3]
 290:main.c        ****         totalDistance = 0; // reset distance
 874              		.loc 1 290 0
 875 004e 8E4B     		ldr	r3, .L66+24
 876 0050 4FF00002 		mov	r2, #0
 877 0054 1A60     		str	r2, [r3]	@ float
 291:main.c        ****         previousDirection = directionState;
 878              		.loc 1 291 0
 879 0056 8B4A     		ldr	r2, .L66+20
 880 0058 FB78     		ldrb	r3, [r7, #3]
 881 005a 1370     		strb	r3, [r2]
 292:main.c        ****         stoppedAfterTurn = 0;
 882              		.loc 1 292 0
 883 005c 874B     		ldr	r3, .L66+12
 884 005e 0022     		movs	r2, #0
 885 0060 1A70     		strb	r2, [r3]
 293:main.c        ****         return directionState;
 886              		.loc 1 293 0
 887 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 888 0064 FFE0     		b	.L42
 889              	.L40:
 890              	.LBE3:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 22


 294:main.c        ****     }
 295:main.c        ****     if (totalDistance >= blocksize) {
 891              		.loc 1 295 0
 892 0066 884B     		ldr	r3, .L66+24
 893 0068 1B68     		ldr	r3, [r3]	@ float
 894 006a 7968     		ldr	r1, [r7, #4]	@ float
 895 006c 1846     		mov	r0, r3
 896 006e FFF7FEFF 		bl	__aeabi_fcmpge
 897 0072 0346     		mov	r3, r0
 898 0074 002B     		cmp	r3, #0
 899 0076 0CD0     		beq	.L65
 900              	.LBB4:
 296:main.c        ****         directionState = GetNextStep(); // get next step at each block
 901              		.loc 1 296 0
 902 0078 FFF7FEFF 		bl	GetNextStep
 903 007c 0346     		mov	r3, r0
 904 007e FB70     		strb	r3, [r7, #3]
 297:main.c        ****         totalDistance = 0; // reset distance
 905              		.loc 1 297 0
 906 0080 814B     		ldr	r3, .L66+24
 907 0082 4FF00002 		mov	r2, #0
 908 0086 1A60     		str	r2, [r3]	@ float
 298:main.c        ****         previousDirection = directionState;
 909              		.loc 1 298 0
 910 0088 7E4A     		ldr	r2, .L66+20
 911 008a FB78     		ldrb	r3, [r7, #3]
 912 008c 1370     		strb	r3, [r2]
 299:main.c        ****         return directionState;
 913              		.loc 1 299 0
 914 008e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 915 0090 E9E0     		b	.L42
 916              	.L65:
 917              	.LBE4:
 300:main.c        ****     }
 301:main.c        ****     
 302:main.c        ****     // STOP BUFFER * ========================================
 303:main.c        ****     if (previousDirection == Stop) {
 918              		.loc 1 303 0
 919 0092 7C4B     		ldr	r3, .L66+20
 920 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 921 0096 052B     		cmp	r3, #5
 922 0098 0AD1     		bne	.L45
 304:main.c        ****         if (stopBuffer <= 50) {
 923              		.loc 1 304 0
 924 009a 794B     		ldr	r3, .L66+16
 925 009c 1B68     		ldr	r3, [r3]
 926 009e 322B     		cmp	r3, #50
 927 00a0 04D8     		bhi	.L46
 305:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 928              		.loc 1 305 0
 929 00a2 0523     		movs	r3, #5
 930 00a4 FB70     		strb	r3, [r7, #3]
 306:main.c        ****             previousDirection = directionState;
 931              		.loc 1 306 0
 932 00a6 774A     		ldr	r2, .L66+20
 933 00a8 FB78     		ldrb	r3, [r7, #3]
 934 00aa 1370     		strb	r3, [r2]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 23


 935              	.L46:
 307:main.c        ****         } else {
 308:main.c        ****             //directionState = ForwardAfterTurn;
 309:main.c        ****         }
 310:main.c        ****         return directionState;
 936              		.loc 1 310 0
 937 00ac FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 938 00ae DAE0     		b	.L42
 939              	.L45:
 311:main.c        ****     }
 312:main.c        **** 
 313:main.c        ****     // TURNING * ========================================    
 314:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 940              		.loc 1 314 0
 941 00b0 744B     		ldr	r3, .L66+20
 942 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 943 00b4 082B     		cmp	r3, #8
 944 00b6 0ED1     		bne	.L47
 315:main.c        ****         if (s3 || s4) {
 945              		.loc 1 315 0
 946 00b8 744B     		ldr	r3, .L66+28
 947 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 948 00bc 002B     		cmp	r3, #0
 949 00be 03D1     		bne	.L48
 950              		.loc 1 315 0 is_stmt 0 discriminator 1
 951 00c0 734B     		ldr	r3, .L66+32
 952 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 953 00c4 002B     		cmp	r3, #0
 954 00c6 06D0     		beq	.L47
 955              	.L48:
 316:main.c        ****             //ignoreSensor = 0;
 317:main.c        ****             //usbPutString("Forward\n");
 318:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 956              		.loc 1 318 0 is_stmt 1
 957 00c8 0023     		movs	r3, #0
 958 00ca FB70     		strb	r3, [r7, #3]
 319:main.c        ****             previousDirection = directionState;
 959              		.loc 1 319 0
 960 00cc 6D4A     		ldr	r2, .L66+20
 961 00ce FB78     		ldrb	r3, [r7, #3]
 962 00d0 1370     		strb	r3, [r2]
 320:main.c        ****             return directionState;
 963              		.loc 1 320 0
 964 00d2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 965 00d4 C7E0     		b	.L42
 966              	.L47:
 321:main.c        ****         }
 322:main.c        ****     }
 323:main.c        **** 
 324:main.c        ****     if(previousDirection == waitForRightTurn) {
 967              		.loc 1 324 0
 968 00d6 6B4B     		ldr	r3, .L66+20
 969 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 970 00da 022B     		cmp	r3, #2
 971 00dc 11D1     		bne	.L49
 325:main.c        ****         //ignoreSensor = 0;
 326:main.c        ****         if(!s4) {
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 24


 972              		.loc 1 326 0
 973 00de 6C4B     		ldr	r3, .L66+32
 974 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 975 00e2 002B     		cmp	r3, #0
 976 00e4 06D1     		bne	.L50
 327:main.c        ****             //usbPutString("Turn Right\n");
 328:main.c        ****             directionState = TurnRight;
 977              		.loc 1 328 0
 978 00e6 0123     		movs	r3, #1
 979 00e8 FB70     		strb	r3, [r7, #3]
 329:main.c        ****             previousDirection = directionState;
 980              		.loc 1 329 0
 981 00ea 664A     		ldr	r2, .L66+20
 982 00ec FB78     		ldrb	r3, [r7, #3]
 983 00ee 1370     		strb	r3, [r2]
 330:main.c        ****             return directionState;
 984              		.loc 1 330 0
 985 00f0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 986 00f2 B8E0     		b	.L42
 987              	.L50:
 331:main.c        ****         } else {
 332:main.c        ****             //usbPutString("Wait for Right Turn\n");
 333:main.c        ****             directionState = waitForRightTurn;
 988              		.loc 1 333 0
 989 00f4 0223     		movs	r3, #2
 990 00f6 FB70     		strb	r3, [r7, #3]
 334:main.c        ****             previousDirection = directionState;
 991              		.loc 1 334 0
 992 00f8 624A     		ldr	r2, .L66+20
 993 00fa FB78     		ldrb	r3, [r7, #3]
 994 00fc 1370     		strb	r3, [r2]
 335:main.c        ****             return directionState;
 995              		.loc 1 335 0
 996 00fe FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 997 0100 B1E0     		b	.L42
 998              	.L49:
 336:main.c        ****         }
 337:main.c        ****     }
 338:main.c        **** 
 339:main.c        ****     if(previousDirection == waitForLeftTurn) {
 999              		.loc 1 339 0
 1000 0102 604B     		ldr	r3, .L66+20
 1001 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 0106 012B     		cmp	r3, #1
 1003 0108 11D1     		bne	.L51
 340:main.c        ****         //ignoreSensor = 0;
 341:main.c        ****         if(!s3) {
 1004              		.loc 1 341 0
 1005 010a 604B     		ldr	r3, .L66+28
 1006 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 010e 002B     		cmp	r3, #0
 1008 0110 06D1     		bne	.L52
 342:main.c        ****             //usbPutString("Turn Left\n");
 343:main.c        ****             directionState = TurnLeft;
 1009              		.loc 1 343 0
 1010 0112 0223     		movs	r3, #2
 1011 0114 FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 25


 344:main.c        ****             previousDirection = directionState;
 1012              		.loc 1 344 0
 1013 0116 5B4A     		ldr	r2, .L66+20
 1014 0118 FB78     		ldrb	r3, [r7, #3]
 1015 011a 1370     		strb	r3, [r2]
 345:main.c        ****             return directionState;
 1016              		.loc 1 345 0
 1017 011c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1018 011e A2E0     		b	.L42
 1019              	.L52:
 346:main.c        ****         } else {
 347:main.c        ****             //usbPutString("Wait for Left Turn\n");
 348:main.c        ****             directionState = waitForLeftTurn;
 1020              		.loc 1 348 0
 1021 0120 0123     		movs	r3, #1
 1022 0122 FB70     		strb	r3, [r7, #3]
 349:main.c        ****             previousDirection = directionState;
 1023              		.loc 1 349 0
 1024 0124 574A     		ldr	r2, .L66+20
 1025 0126 FB78     		ldrb	r3, [r7, #3]
 1026 0128 1370     		strb	r3, [r2]
 350:main.c        ****             return directionState;
 1027              		.loc 1 350 0
 1028 012a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1029 012c 9BE0     		b	.L42
 1030              	.L51:
 351:main.c        ****         }
 352:main.c        ****     }
 353:main.c        **** 
 354:main.c        ****     if(previousDirection == TurnRight) {
 1031              		.loc 1 354 0
 1032 012e 554B     		ldr	r3, .L66+20
 1033 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1034 0132 012B     		cmp	r3, #1
 1035 0134 24D1     		bne	.L53
 355:main.c        ****         if(s5 && s6) {
 1036              		.loc 1 355 0
 1037 0136 574B     		ldr	r3, .L66+36
 1038 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1039 013a 002B     		cmp	r3, #0
 1040 013c 0AD0     		beq	.L54
 1041              		.loc 1 355 0 is_stmt 0 discriminator 1
 1042 013e 564B     		ldr	r3, .L66+40
 1043 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0142 002B     		cmp	r3, #0
 1045 0144 06D0     		beq	.L54
 356:main.c        ****             //usbPutString("Turn Right\n");
 357:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1046              		.loc 1 357 0 is_stmt 1
 1047 0146 0123     		movs	r3, #1
 1048 0148 FB70     		strb	r3, [r7, #3]
 358:main.c        ****             previousDirection = directionState;
 1049              		.loc 1 358 0
 1050 014a 4E4A     		ldr	r2, .L66+20
 1051 014c FB78     		ldrb	r3, [r7, #3]
 1052 014e 1370     		strb	r3, [r2]
 359:main.c        ****             return directionState;
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 26


 1053              		.loc 1 359 0
 1054 0150 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1055 0152 88E0     		b	.L42
 1056              	.L54:
 360:main.c        ****         } 
 361:main.c        ****         else if (!s5 || !s6) {
 1057              		.loc 1 361 0
 1058 0154 4F4B     		ldr	r3, .L66+36
 1059 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 0158 002B     		cmp	r3, #0
 1061 015a 03D0     		beq	.L55
 1062              		.loc 1 361 0 is_stmt 0 discriminator 1
 1063 015c 4E4B     		ldr	r3, .L66+40
 1064 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1065 0160 002B     		cmp	r3, #0
 1066 0162 0DD1     		bne	.L53
 1067              	.L55:
 362:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 363:main.c        ****             //usbPutString("Stop after Right Turn");
 364:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1068              		.loc 1 364 0 is_stmt 1
 1069 0164 0523     		movs	r3, #5
 1070 0166 FB70     		strb	r3, [r7, #3]
 365:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1071              		.loc 1 365 0
 1072 0168 474B     		ldr	r3, .L66+24
 1073 016a 4FF00002 		mov	r2, #0
 1074 016e 1A60     		str	r2, [r3]	@ float
 366:main.c        ****             previousDirection = directionState;
 1075              		.loc 1 366 0
 1076 0170 444A     		ldr	r2, .L66+20
 1077 0172 FB78     		ldrb	r3, [r7, #3]
 1078 0174 1370     		strb	r3, [r2]
 367:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1079              		.loc 1 367 0
 1080 0176 414B     		ldr	r3, .L66+12
 1081 0178 0122     		movs	r2, #1
 1082 017a 1A70     		strb	r2, [r3]
 368:main.c        ****             return directionState;
 1083              		.loc 1 368 0
 1084 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1085 017e 72E0     		b	.L42
 1086              	.L53:
 369:main.c        ****         }
 370:main.c        ****     }    
 371:main.c        **** 
 372:main.c        ****     if(previousDirection == TurnLeft) {
 1087              		.loc 1 372 0
 1088 0180 404B     		ldr	r3, .L66+20
 1089 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1090 0184 022B     		cmp	r3, #2
 1091 0186 24D1     		bne	.L56
 373:main.c        ****         if(s5 && s6) {
 1092              		.loc 1 373 0
 1093 0188 424B     		ldr	r3, .L66+36
 1094 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1095 018c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 27


 1096 018e 0AD0     		beq	.L57
 1097              		.loc 1 373 0 is_stmt 0 discriminator 1
 1098 0190 414B     		ldr	r3, .L66+40
 1099 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1100 0194 002B     		cmp	r3, #0
 1101 0196 06D0     		beq	.L57
 374:main.c        ****             //usbPutString("Turn Left\n");
 375:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1102              		.loc 1 375 0 is_stmt 1
 1103 0198 0223     		movs	r3, #2
 1104 019a FB70     		strb	r3, [r7, #3]
 376:main.c        ****             previousDirection = directionState;
 1105              		.loc 1 376 0
 1106 019c 394A     		ldr	r2, .L66+20
 1107 019e FB78     		ldrb	r3, [r7, #3]
 1108 01a0 1370     		strb	r3, [r2]
 377:main.c        ****             return directionState;
 1109              		.loc 1 377 0
 1110 01a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1111 01a4 5FE0     		b	.L42
 1112              	.L57:
 378:main.c        ****         } 
 379:main.c        ****         else if (!s5 || !s6) {
 1113              		.loc 1 379 0
 1114 01a6 3B4B     		ldr	r3, .L66+36
 1115 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116 01aa 002B     		cmp	r3, #0
 1117 01ac 03D0     		beq	.L58
 1118              		.loc 1 379 0 is_stmt 0 discriminator 1
 1119 01ae 3A4B     		ldr	r3, .L66+40
 1120 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1121 01b2 002B     		cmp	r3, #0
 1122 01b4 0DD1     		bne	.L56
 1123              	.L58:
 380:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 381:main.c        ****            // usbPutString("Stop after Left Turn\n");
 382:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1124              		.loc 1 382 0 is_stmt 1
 1125 01b6 0523     		movs	r3, #5
 1126 01b8 FB70     		strb	r3, [r7, #3]
 383:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1127              		.loc 1 383 0
 1128 01ba 334B     		ldr	r3, .L66+24
 1129 01bc 4FF00002 		mov	r2, #0
 1130 01c0 1A60     		str	r2, [r3]	@ float
 384:main.c        ****             previousDirection = directionState;
 1131              		.loc 1 384 0
 1132 01c2 304A     		ldr	r2, .L66+20
 1133 01c4 FB78     		ldrb	r3, [r7, #3]
 1134 01c6 1370     		strb	r3, [r2]
 385:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1135              		.loc 1 385 0
 1136 01c8 2C4B     		ldr	r3, .L66+12
 1137 01ca 0122     		movs	r2, #1
 1138 01cc 1A70     		strb	r2, [r3]
 386:main.c        ****             return directionState;
 1139              		.loc 1 386 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 28


 1140 01ce FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1141 01d0 49E0     		b	.L42
 1142              	.L56:
 387:main.c        ****         }
 388:main.c        ****     }
 389:main.c        ****     
 390:main.c        ****     // COURSE CORRECTION * ========================================
 391:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1143              		.loc 1 391 0
 1144 01d2 2C4B     		ldr	r3, .L66+20
 1145 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1146 01d6 002B     		cmp	r3, #0
 1147 01d8 07D0     		beq	.L59
 1148              		.loc 1 391 0 is_stmt 0 discriminator 1
 1149 01da 2A4B     		ldr	r3, .L66+20
 1150 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 01de 032B     		cmp	r3, #3
 1152 01e0 03D0     		beq	.L59
 1153              		.loc 1 391 0 discriminator 2
 1154 01e2 284B     		ldr	r3, .L66+20
 1155 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 01e6 042B     		cmp	r3, #4
 1157 01e8 15D1     		bne	.L60
 1158              	.L59:
 392:main.c        ****         //ignoreSensor = 0;
 393:main.c        ****         if(s6) {
 1159              		.loc 1 393 0 is_stmt 1
 1160 01ea 2B4B     		ldr	r3, .L66+40
 1161 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162 01ee 002B     		cmp	r3, #0
 1163 01f0 06D0     		beq	.L61
 394:main.c        ****             //usbPutString("Adjust to the left\n");
 395:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1164              		.loc 1 395 0
 1165 01f2 0323     		movs	r3, #3
 1166 01f4 FB70     		strb	r3, [r7, #3]
 396:main.c        ****             previousDirection = directionState;
 1167              		.loc 1 396 0
 1168 01f6 234A     		ldr	r2, .L66+20
 1169 01f8 FB78     		ldrb	r3, [r7, #3]
 1170 01fa 1370     		strb	r3, [r2]
 397:main.c        ****             return directionState;
 1171              		.loc 1 397 0
 1172 01fc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1173 01fe 32E0     		b	.L42
 1174              	.L61:
 398:main.c        ****         }
 399:main.c        ****         if(s5) {
 1175              		.loc 1 399 0
 1176 0200 244B     		ldr	r3, .L66+36
 1177 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1178 0204 002B     		cmp	r3, #0
 1179 0206 06D0     		beq	.L60
 400:main.c        ****             //usbPutString("Adjust to the right\n");
 401:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1180              		.loc 1 401 0
 1181 0208 0423     		movs	r3, #4
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 29


 1182 020a FB70     		strb	r3, [r7, #3]
 402:main.c        ****             previousDirection = directionState;
 1183              		.loc 1 402 0
 1184 020c 1D4A     		ldr	r2, .L66+20
 1185 020e FB78     		ldrb	r3, [r7, #3]
 1186 0210 1370     		strb	r3, [r2]
 403:main.c        ****             return directionState;
 1187              		.loc 1 403 0
 1188 0212 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1189 0214 27E0     		b	.L42
 1190              	.L60:
 404:main.c        ****         }
 405:main.c        ****     }
 406:main.c        ****     
 407:main.c        ****     // FORWARD * ========================================
 408:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1191              		.loc 1 408 0
 1192 0216 1D4B     		ldr	r3, .L66+28
 1193 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1194 021a 002B     		cmp	r3, #0
 1195 021c 12D0     		beq	.L62
 1196              		.loc 1 408 0 is_stmt 0 discriminator 1
 1197 021e 1C4B     		ldr	r3, .L66+32
 1198 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 0222 002B     		cmp	r3, #0
 1200 0224 0ED0     		beq	.L62
 1201              		.loc 1 408 0 discriminator 2
 1202 0226 1B4B     		ldr	r3, .L66+36
 1203 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204 022a 002B     		cmp	r3, #0
 1205 022c 0AD1     		bne	.L62
 1206              		.loc 1 408 0 discriminator 3
 1207 022e 1A4B     		ldr	r3, .L66+40
 1208 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1209 0232 002B     		cmp	r3, #0
 1210 0234 06D1     		bne	.L62
 409:main.c        ****         //usbPutString("Forward\n");
 410:main.c        ****         directionState = Forward;
 1211              		.loc 1 410 0 is_stmt 1
 1212 0236 0023     		movs	r3, #0
 1213 0238 FB70     		strb	r3, [r7, #3]
 411:main.c        ****         previousDirection = directionState;
 1214              		.loc 1 411 0
 1215 023a 124A     		ldr	r2, .L66+20
 1216 023c FB78     		ldrb	r3, [r7, #3]
 1217 023e 1370     		strb	r3, [r2]
 412:main.c        ****         return directionState;   
 1218              		.loc 1 412 0
 1219 0240 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1220 0242 10E0     		b	.L42
 1221              	.L62:
 413:main.c        ****     }
 414:main.c        **** 
 415:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 416:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 417:main.c        ****     if (previousDirection == Unknown) {
 1222              		.loc 1 417 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 30


 1223 0244 0F4B     		ldr	r3, .L66+20
 1224 0246 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 0248 062B     		cmp	r3, #6
 1226 024a 06D1     		bne	.L63
 418:main.c        ****         directionState = Forward;
 1227              		.loc 1 418 0
 1228 024c 0023     		movs	r3, #0
 1229 024e FB70     		strb	r3, [r7, #3]
 419:main.c        ****         previousDirection = directionState;
 1230              		.loc 1 419 0
 1231 0250 0C4A     		ldr	r2, .L66+20
 1232 0252 FB78     		ldrb	r3, [r7, #3]
 1233 0254 1370     		strb	r3, [r2]
 420:main.c        ****         return directionState;
 1234              		.loc 1 420 0
 1235 0256 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1236 0258 05E0     		b	.L42
 1237              	.L63:
 421:main.c        ****     }
 422:main.c        **** 
 423:main.c        ****     // Possible reason
 424:main.c        ****     previousDirection = currentDirection;
 1238              		.loc 1 424 0
 1239 025a 104B     		ldr	r3, .L66+44
 1240 025c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1241 025e 094B     		ldr	r3, .L66+20
 1242 0260 1A70     		strb	r2, [r3]
 425:main.c        ****     return previousDirection;
 1243              		.loc 1 425 0
 1244 0262 084B     		ldr	r3, .L66+20
 1245 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246              	.L42:
 426:main.c        **** }
 1247              		.loc 1 426 0
 1248 0266 1846     		mov	r0, r3
 1249 0268 0837     		adds	r7, r7, #8
 1250              		.cfi_def_cfa_offset 8
 1251 026a BD46     		mov	sp, r7
 1252              		.cfi_def_cfa_register 13
 1253              		@ sp needed
 1254 026c 80BD     		pop	{r7, pc}
 1255              	.L67:
 1256 026e 00BF     		.align	2
 1257              	.L66:
 1258 0270 00000000 		.word	currentOrientation
 1259 0274 00000000 		.word	yBlocksize
 1260 0278 00000000 		.word	xBlocksize
 1261 027c 00000000 		.word	stoppedAfterTurn
 1262 0280 00000000 		.word	stopBuffer
 1263 0284 00000000 		.word	previousDirection
 1264 0288 00000000 		.word	totalDistance
 1265 028c 00000000 		.word	s3
 1266 0290 00000000 		.word	s4
 1267 0294 00000000 		.word	s5
 1268 0298 00000000 		.word	s6
 1269 029c 00000000 		.word	currentDirection
 1270              		.cfi_endproc
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 31


 1271              	.LFE73:
 1272              		.size	CheckSensorDirection, .-CheckSensorDirection
 1273              		.section	.text.getNextInstruction,"ax",%progbits
 1274              		.align	2
 1275              		.global	getNextInstruction
 1276              		.thumb
 1277              		.thumb_func
 1278              		.type	getNextInstruction, %function
 1279              	getNextInstruction:
 1280              	.LFB74:
 427:main.c        **** 
 428:main.c        **** // get next instruction
 429:main.c        **** Instruction getNextInstruction(int numSteps, Instruction instructionList[numSteps]) {
 1281              		.loc 1 429 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 32
 1284              		@ frame_needed = 1, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286 0000 90B4     		push	{r4, r7}
 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 4, -8
 1289              		.cfi_offset 7, -4
 1290 0002 88B0     		sub	sp, sp, #32
 1291              		.cfi_def_cfa_offset 40
 1292 0004 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
 1294 0006 F860     		str	r0, [r7, #12]
 1295 0008 B960     		str	r1, [r7, #8]
 1296 000a 7A60     		str	r2, [r7, #4]
 1297              	.LBB5:
 430:main.c        ****     Instruction out;
 431:main.c        ****     // input is list of instructions and robot will react accordingly
 432:main.c        ****     for(int i = 0; i < numSteps; i++) {
 1298              		.loc 1 432 0
 1299 000c 0023     		movs	r3, #0
 1300 000e FB61     		str	r3, [r7, #28]
 1301 0010 34E0     		b	.L69
 1302              	.L72:
 433:main.c        ****         if(instructionList[i].direction != Skip) {
 1303              		.loc 1 433 0
 1304 0012 FA69     		ldr	r2, [r7, #28]
 1305 0014 1346     		mov	r3, r2
 1306 0016 5B00     		lsls	r3, r3, #1
 1307 0018 1344     		add	r3, r3, r2
 1308 001a 9B00     		lsls	r3, r3, #2
 1309 001c 1A46     		mov	r2, r3
 1310 001e 7B68     		ldr	r3, [r7, #4]
 1311 0020 1344     		add	r3, r3, r2
 1312 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1313 0024 062B     		cmp	r3, #6
 1314 0026 26D0     		beq	.L70
 434:main.c        ****             out.direction = instructionList[i].direction;
 1315              		.loc 1 434 0
 1316 0028 FA69     		ldr	r2, [r7, #28]
 1317 002a 1346     		mov	r3, r2
 1318 002c 5B00     		lsls	r3, r3, #1
 1319 002e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 32


 1320 0030 9B00     		lsls	r3, r3, #2
 1321 0032 1A46     		mov	r2, r3
 1322 0034 7B68     		ldr	r3, [r7, #4]
 1323 0036 1344     		add	r3, r3, r2
 1324 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 003a 3B74     		strb	r3, [r7, #16]
 435:main.c        ****             out.ignoreL = instructionList[i].ignoreL;
 1326              		.loc 1 435 0
 1327 003c FA69     		ldr	r2, [r7, #28]
 1328 003e 1346     		mov	r3, r2
 1329 0040 5B00     		lsls	r3, r3, #1
 1330 0042 1344     		add	r3, r3, r2
 1331 0044 9B00     		lsls	r3, r3, #2
 1332 0046 1A46     		mov	r2, r3
 1333 0048 7B68     		ldr	r3, [r7, #4]
 1334 004a 1344     		add	r3, r3, r2
 1335 004c 5B68     		ldr	r3, [r3, #4]
 1336 004e 7B61     		str	r3, [r7, #20]
 436:main.c        ****             out.ignoreR = instructionList[i].ignoreR;
 1337              		.loc 1 436 0
 1338 0050 FA69     		ldr	r2, [r7, #28]
 1339 0052 1346     		mov	r3, r2
 1340 0054 5B00     		lsls	r3, r3, #1
 1341 0056 1344     		add	r3, r3, r2
 1342 0058 9B00     		lsls	r3, r3, #2
 1343 005a 1A46     		mov	r2, r3
 1344 005c 7B68     		ldr	r3, [r7, #4]
 1345 005e 1344     		add	r3, r3, r2
 1346 0060 9B68     		ldr	r3, [r3, #8]
 1347 0062 BB61     		str	r3, [r7, #24]
 437:main.c        ****             return out; // return next instruction
 1348              		.loc 1 437 0
 1349 0064 FB68     		ldr	r3, [r7, #12]
 1350 0066 1C46     		mov	r4, r3
 1351 0068 07F11003 		add	r3, r7, #16
 1352 006c 93E80700 		ldmia	r3, {r0, r1, r2}
 1353 0070 84E80700 		stmia	r4, {r0, r1, r2}
 1354 0074 0EE0     		b	.L68
 1355              	.L70:
 432:main.c        ****         if(instructionList[i].direction != Skip) {
 1356              		.loc 1 432 0 discriminator 2
 1357 0076 FB69     		ldr	r3, [r7, #28]
 1358 0078 0133     		adds	r3, r3, #1
 1359 007a FB61     		str	r3, [r7, #28]
 1360              	.L69:
 432:main.c        ****         if(instructionList[i].direction != Skip) {
 1361              		.loc 1 432 0 is_stmt 0 discriminator 1
 1362 007c FA69     		ldr	r2, [r7, #28]
 1363 007e BB68     		ldr	r3, [r7, #8]
 1364 0080 9A42     		cmp	r2, r3
 1365 0082 C6DB     		blt	.L72
 1366              	.LBE5:
 438:main.c        ****         }
 439:main.c        ****     }
 440:main.c        ****     return out;
 1367              		.loc 1 440 0 is_stmt 1
 1368 0084 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 33


 1369 0086 1C46     		mov	r4, r3
 1370 0088 07F11003 		add	r3, r7, #16
 1371 008c 93E80700 		ldmia	r3, {r0, r1, r2}
 1372 0090 84E80700 		stmia	r4, {r0, r1, r2}
 1373              	.L68:
 441:main.c        **** }
 1374              		.loc 1 441 0
 1375 0094 F868     		ldr	r0, [r7, #12]
 1376 0096 2037     		adds	r7, r7, #32
 1377              		.cfi_def_cfa_offset 8
 1378 0098 BD46     		mov	sp, r7
 1379              		.cfi_def_cfa_register 13
 1380              		@ sp needed
 1381 009a 90BC     		pop	{r4, r7}
 1382              		.cfi_restore 7
 1383              		.cfi_restore 4
 1384              		.cfi_def_cfa_offset 0
 1385 009c 7047     		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE74:
 1388              		.size	getNextInstruction, .-getNextInstruction
 1389 009e 00BF     		.section	.text.SetRobotMovement,"ax",%progbits
 1390              		.align	2
 1391              		.global	SetRobotMovement
 1392              		.thumb
 1393              		.thumb_func
 1394              		.type	SetRobotMovement, %function
 1395              	SetRobotMovement:
 1396              	.LFB75:
 442:main.c        **** 
 443:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 444:main.c        **** void SetRobotMovement() {
 1397              		.loc 1 444 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 16
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401 0000 90B5     		push	{r4, r7, lr}
 1402              		.cfi_def_cfa_offset 12
 1403              		.cfi_offset 4, -12
 1404              		.cfi_offset 7, -8
 1405              		.cfi_offset 14, -4
 1406 0002 85B0     		sub	sp, sp, #20
 1407              		.cfi_def_cfa_offset 32
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 445:main.c        ****     currentInstruction = getNextInstruction(numSteps, instructionList); // get current/ next instru
 1410              		.loc 1 445 0
 1411 0006 264B     		ldr	r3, .L89
 1412 0008 1968     		ldr	r1, [r3]
 1413 000a 264B     		ldr	r3, .L89+4
 1414 000c 1A68     		ldr	r2, [r3]
 1415 000e 264C     		ldr	r4, .L89+8
 1416 0010 3B46     		mov	r3, r7
 1417 0012 1846     		mov	r0, r3
 1418 0014 FFF7FEFF 		bl	getNextInstruction
 1419 0018 3B46     		mov	r3, r7
 1420 001a 93E80700 		ldmia	r3, {r0, r1, r2}
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 34


 1421 001e 84E80700 		stmia	r4, {r0, r1, r2}
 446:main.c        ****     currentDirection = CheckSensorDirection(); // check sensors, adjust robot movement
 1422              		.loc 1 446 0
 1423 0022 FFF7FEFF 		bl	CheckSensorDirection
 1424 0026 0346     		mov	r3, r0
 1425 0028 1A46     		mov	r2, r3
 1426 002a 204B     		ldr	r3, .L89+12
 1427 002c 1A70     		strb	r2, [r3]
 447:main.c        ****     // move robot depending on sensors
 448:main.c        ****     switch (currentDirection) {
 1428              		.loc 1 448 0
 1429 002e 1F4B     		ldr	r3, .L89+12
 1430 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1431 0032 092B     		cmp	r3, #9
 1432 0034 2FD8     		bhi	.L87
 1433 0036 01A2     		adr	r2, .L77
 1434 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1435              		.p2align 2
 1436              	.L77:
 1437 003c 65000000 		.word	.L76+1
 1438 0040 6B000000 		.word	.L78+1
 1439 0044 71000000 		.word	.L79+1
 1440 0048 7D000000 		.word	.L80+1
 1441 004c 77000000 		.word	.L81+1
 1442 0050 83000000 		.word	.L82+1
 1443 0054 95000000 		.word	.L88+1
 1444 0058 95000000 		.word	.L88+1
 1445 005c 89000000 		.word	.L85+1
 1446 0060 8F000000 		.word	.L86+1
 1447              		.p2align 1
 1448              	.L76:
 449:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 450:main.c        ****         case Forward:
 451:main.c        ****             moveForward();
 1449              		.loc 1 451 0
 1450 0064 FFF7FEFF 		bl	moveForward
 452:main.c        ****             break;
 1451              		.loc 1 452 0
 1452 0068 15E0     		b	.L75
 1453              	.L78:
 453:main.c        ****         case TurnRight:
 454:main.c        ****             turnRight();
 1454              		.loc 1 454 0
 1455 006a FFF7FEFF 		bl	turnRight
 455:main.c        ****             break;
 1456              		.loc 1 455 0
 1457 006e 12E0     		b	.L75
 1458              	.L79:
 456:main.c        ****         case TurnLeft:
 457:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1459              		.loc 1 457 0
 1460 0070 FFF7FEFF 		bl	turnLeft
 458:main.c        ****             break;
 1461              		.loc 1 458 0
 1462 0074 0FE0     		b	.L75
 1463              	.L81:
 459:main.c        ****         case AdjustToTheRight:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 35


 460:main.c        ****             adjustRight();
 1464              		.loc 1 460 0
 1465 0076 FFF7FEFF 		bl	adjustRight
 461:main.c        ****             break;
 1466              		.loc 1 461 0
 1467 007a 0CE0     		b	.L75
 1468              	.L80:
 462:main.c        ****         case AdjustToTheLeft:
 463:main.c        ****             adjustLeft();
 1469              		.loc 1 463 0
 1470 007c FFF7FEFF 		bl	adjustLeft
 464:main.c        ****             break;
 1471              		.loc 1 464 0
 1472 0080 09E0     		b	.L75
 1473              	.L82:
 465:main.c        ****         case Stop:
 466:main.c        ****             stopMoving();
 1474              		.loc 1 466 0
 1475 0082 FFF7FEFF 		bl	stopMoving
 467:main.c        ****             break;
 1476              		.loc 1 467 0
 1477 0086 06E0     		b	.L75
 1478              	.L85:
 468:main.c        ****         case ForwardAfterTurn:
 469:main.c        ****             moveForward();
 1479              		.loc 1 469 0
 1480 0088 FFF7FEFF 		bl	moveForward
 470:main.c        ****             break;
 1481              		.loc 1 470 0
 1482 008c 03E0     		b	.L75
 1483              	.L86:
 471:main.c        ****         case Backward:
 472:main.c        ****             moveBackward();
 1484              		.loc 1 472 0
 1485 008e FFF7FEFF 		bl	moveBackward
 473:main.c        ****             break;
 1486              		.loc 1 473 0
 1487 0092 00E0     		b	.L75
 1488              	.L88:
 474:main.c        ****         case waitForTurn:
 475:main.c        ****             break;
 476:main.c        ****         /*case waitForLeftTurn:
 477:main.c        ****             moveForward();
 478:main.c        ****             break;
 479:main.c        ****         case waitForRightTurn:
 480:main.c        ****             moveForward();
 481:main.c        ****             break;*/
 482:main.c        ****         case Unknown:
 483:main.c        ****             // UNKNOWN CONFIGURATION
 484:main.c        ****             break;  
 1489              		.loc 1 484 0
 1490 0094 00BF     		nop
 1491              	.L75:
 1492              	.L87:
 485:main.c        ****     }
 486:main.c        **** }...
 1493              		.loc 1 486 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 36


 1494 0096 00BF     		nop
 1495 0098 1437     		adds	r7, r7, #20
 1496              		.cfi_def_cfa_offset 12
 1497 009a BD46     		mov	sp, r7
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 009c 90BD     		pop	{r4, r7, pc}
 1501              	.L90:
 1502 009e 00BF     		.align	2
 1503              	.L89:
 1504 00a0 00000000 		.word	numSteps
 1505 00a4 00000000 		.word	instructionList
 1506 00a8 00000000 		.word	currentInstruction
 1507 00ac 00000000 		.word	currentDirection
 1508              		.cfi_endproc
 1509              	.LFE75:
 1510              		.size	SetRobotMovement, .-SetRobotMovement
 1511              		.text
 1512              	.Letext0:
 1513              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1514              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1515              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1516              		.file 5 "vars.h"
 1517              		.file 6 "pathfinding.h"
 1518              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1519              		.file 8 "map.h"
 1520              		.section	.debug_info,"",%progbits
 1521              	.Ldebug_info0:
 1522 0000 CE070000 		.4byte	0x7ce
 1523 0004 0400     		.2byte	0x4
 1524 0006 00000000 		.4byte	.Ldebug_abbrev0
 1525 000a 04       		.byte	0x4
 1526 000b 01       		.uleb128 0x1
 1527 000c 72000000 		.4byte	.LASF123
 1528 0010 0C       		.byte	0xc
 1529 0011 30000000 		.4byte	.LASF124
 1530 0015 73010000 		.4byte	.LASF125
 1531 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1532 001d 00000000 		.4byte	0
 1533 0021 00000000 		.4byte	.Ldebug_line0
 1534 0025 02       		.uleb128 0x2
 1535 0026 01       		.byte	0x1
 1536 0027 06       		.byte	0x6
 1537 0028 AB050000 		.4byte	.LASF0
 1538 002c 02       		.uleb128 0x2
 1539 002d 01       		.byte	0x1
 1540 002e 08       		.byte	0x8
 1541 002f 31050000 		.4byte	.LASF1
 1542 0033 02       		.uleb128 0x2
 1543 0034 02       		.byte	0x2
 1544 0035 05       		.byte	0x5
 1545 0036 45040000 		.4byte	.LASF2
 1546 003a 02       		.uleb128 0x2
 1547 003b 02       		.byte	0x2
 1548 003c 07       		.byte	0x7
 1549 003d C2050000 		.4byte	.LASF3
 1550 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 37


 1551 0042 55000000 		.4byte	.LASF12
 1552 0046 02       		.byte	0x2
 1553 0047 3F       		.byte	0x3f
 1554 0048 4C000000 		.4byte	0x4c
 1555 004c 02       		.uleb128 0x2
 1556 004d 04       		.byte	0x4
 1557 004e 05       		.byte	0x5
 1558 004f 67040000 		.4byte	.LASF4
 1559 0053 02       		.uleb128 0x2
 1560 0054 04       		.byte	0x4
 1561 0055 07       		.byte	0x7
 1562 0056 E7040000 		.4byte	.LASF5
 1563 005a 02       		.uleb128 0x2
 1564 005b 08       		.byte	0x8
 1565 005c 05       		.byte	0x5
 1566 005d 39030000 		.4byte	.LASF6
 1567 0061 02       		.uleb128 0x2
 1568 0062 08       		.byte	0x8
 1569 0063 07       		.byte	0x7
 1570 0064 E8010000 		.4byte	.LASF7
 1571 0068 04       		.uleb128 0x4
 1572 0069 04       		.byte	0x4
 1573 006a 05       		.byte	0x5
 1574 006b 696E7400 		.ascii	"int\000"
 1575 006f 02       		.uleb128 0x2
 1576 0070 04       		.byte	0x4
 1577 0071 07       		.byte	0x7
 1578 0072 48000000 		.4byte	.LASF8
 1579 0076 02       		.uleb128 0x2
 1580 0077 08       		.byte	0x8
 1581 0078 04       		.byte	0x4
 1582 0079 09040000 		.4byte	.LASF9
 1583 007d 02       		.uleb128 0x2
 1584 007e 04       		.byte	0x4
 1585 007f 07       		.byte	0x7
 1586 0080 DE040000 		.4byte	.LASF10
 1587 0084 02       		.uleb128 0x2
 1588 0085 01       		.byte	0x1
 1589 0086 08       		.byte	0x8
 1590 0087 D7020000 		.4byte	.LASF11
 1591 008b 03       		.uleb128 0x3
 1592 008c 0A050000 		.4byte	.LASF13
 1593 0090 03       		.byte	0x3
 1594 0091 2C       		.byte	0x2c
 1595 0092 41000000 		.4byte	0x41
 1596 0096 05       		.uleb128 0x5
 1597 0097 2B060000 		.4byte	.LASF14
 1598 009b 04       		.byte	0x4
 1599 009c E901     		.2byte	0x1e9
 1600 009e 2C000000 		.4byte	0x2c
 1601 00a2 05       		.uleb128 0x5
 1602 00a3 F5020000 		.4byte	.LASF15
 1603 00a7 04       		.byte	0x4
 1604 00a8 EA01     		.2byte	0x1ea
 1605 00aa 3A000000 		.4byte	0x3a
 1606 00ae 05       		.uleb128 0x5
 1607 00af B9030000 		.4byte	.LASF16
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 38


 1608 00b3 04       		.byte	0x4
 1609 00b4 EB01     		.2byte	0x1eb
 1610 00b6 53000000 		.4byte	0x53
 1611 00ba 05       		.uleb128 0x5
 1612 00bb FC020000 		.4byte	.LASF17
 1613 00bf 04       		.byte	0x4
 1614 00c0 EC01     		.2byte	0x1ec
 1615 00c2 25000000 		.4byte	0x25
 1616 00c6 05       		.uleb128 0x5
 1617 00c7 5F000000 		.4byte	.LASF18
 1618 00cb 04       		.byte	0x4
 1619 00cc ED01     		.2byte	0x1ed
 1620 00ce 33000000 		.4byte	0x33
 1621 00d2 02       		.uleb128 0x2
 1622 00d3 04       		.byte	0x4
 1623 00d4 04       		.byte	0x4
 1624 00d5 04050000 		.4byte	.LASF19
 1625 00d9 02       		.uleb128 0x2
 1626 00da 08       		.byte	0x8
 1627 00db 04       		.byte	0x4
 1628 00dc 31060000 		.4byte	.LASF20
 1629 00e0 06       		.uleb128 0x6
 1630 00e1 DB030000 		.4byte	.LASF45
 1631 00e5 20       		.byte	0x20
 1632 00e6 05       		.byte	0x5
 1633 00e7 28       		.byte	0x28
 1634 00e8 B9010000 		.4byte	0x1b9
 1635 00ec 07       		.uleb128 0x7
 1636 00ed E5030000 		.4byte	.LASF21
 1637 00f1 05       		.byte	0x5
 1638 00f2 2A       		.byte	0x2a
 1639 00f3 BA000000 		.4byte	0xba
 1640 00f7 00       		.byte	0
 1641 00f8 07       		.uleb128 0x7
 1642 00f9 E2010000 		.4byte	.LASF22
 1643 00fd 05       		.byte	0x5
 1644 00fe 2B       		.byte	0x2b
 1645 00ff 96000000 		.4byte	0x96
 1646 0103 01       		.byte	0x1
 1647 0104 07       		.uleb128 0x7
 1648 0105 12050000 		.4byte	.LASF23
 1649 0109 05       		.byte	0x5
 1650 010a 2C       		.byte	0x2c
 1651 010b C6000000 		.4byte	0xc6
 1652 010f 02       		.byte	0x2
 1653 0110 07       		.uleb128 0x7
 1654 0111 AE020000 		.4byte	.LASF24
 1655 0115 05       		.byte	0x5
 1656 0116 2D       		.byte	0x2d
 1657 0117 C6000000 		.4byte	0xc6
 1658 011b 04       		.byte	0x4
 1659 011c 07       		.uleb128 0x7
 1660 011d D5050000 		.4byte	.LASF25
 1661 0121 05       		.byte	0x5
 1662 0122 2E       		.byte	0x2e
 1663 0123 C6000000 		.4byte	0xc6
 1664 0127 06       		.byte	0x6
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 39


 1665 0128 07       		.uleb128 0x7
 1666 0129 58060000 		.4byte	.LASF26
 1667 012d 05       		.byte	0x5
 1668 012e 2F       		.byte	0x2f
 1669 012f C6000000 		.4byte	0xc6
 1670 0133 08       		.byte	0x8
 1671 0134 07       		.uleb128 0x7
 1672 0135 7E030000 		.4byte	.LASF27
 1673 0139 05       		.byte	0x5
 1674 013a 30       		.byte	0x30
 1675 013b C6000000 		.4byte	0xc6
 1676 013f 0A       		.byte	0xa
 1677 0140 07       		.uleb128 0x7
 1678 0141 DC020000 		.4byte	.LASF28
 1679 0145 05       		.byte	0x5
 1680 0146 31       		.byte	0x31
 1681 0147 C6000000 		.4byte	0xc6
 1682 014b 0C       		.byte	0xc
 1683 014c 07       		.uleb128 0x7
 1684 014d EA030000 		.4byte	.LASF29
 1685 0151 05       		.byte	0x5
 1686 0152 32       		.byte	0x32
 1687 0153 C6000000 		.4byte	0xc6
 1688 0157 0E       		.byte	0xe
 1689 0158 07       		.uleb128 0x7
 1690 0159 47030000 		.4byte	.LASF30
 1691 015d 05       		.byte	0x5
 1692 015e 33       		.byte	0x33
 1693 015f C6000000 		.4byte	0xc6
 1694 0163 10       		.byte	0x10
 1695 0164 07       		.uleb128 0x7
 1696 0165 C5040000 		.4byte	.LASF31
 1697 0169 05       		.byte	0x5
 1698 016a 34       		.byte	0x34
 1699 016b C6000000 		.4byte	0xc6
 1700 016f 12       		.byte	0x12
 1701 0170 07       		.uleb128 0x7
 1702 0171 78060000 		.4byte	.LASF32
 1703 0175 05       		.byte	0x5
 1704 0176 35       		.byte	0x35
 1705 0177 C6000000 		.4byte	0xc6
 1706 017b 14       		.byte	0x14
 1707 017c 07       		.uleb128 0x7
 1708 017d 0C030000 		.4byte	.LASF33
 1709 0181 05       		.byte	0x5
 1710 0182 36       		.byte	0x36
 1711 0183 C6000000 		.4byte	0xc6
 1712 0187 16       		.byte	0x16
 1713 0188 07       		.uleb128 0x7
 1714 0189 1A010000 		.4byte	.LASF34
 1715 018d 05       		.byte	0x5
 1716 018e 37       		.byte	0x37
 1717 018f C6000000 		.4byte	0xc6
 1718 0193 18       		.byte	0x18
 1719 0194 07       		.uleb128 0x7
 1720 0195 A1040000 		.4byte	.LASF35
 1721 0199 05       		.byte	0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 40


 1722 019a 38       		.byte	0x38
 1723 019b C6000000 		.4byte	0xc6
 1724 019f 1A       		.byte	0x1a
 1725 01a0 07       		.uleb128 0x7
 1726 01a1 75030000 		.4byte	.LASF36
 1727 01a5 05       		.byte	0x5
 1728 01a6 39       		.byte	0x39
 1729 01a7 C6000000 		.4byte	0xc6
 1730 01ab 1C       		.byte	0x1c
 1731 01ac 07       		.uleb128 0x7
 1732 01ad 58010000 		.4byte	.LASF37
 1733 01b1 05       		.byte	0x5
 1734 01b2 3A       		.byte	0x3a
 1735 01b3 C6000000 		.4byte	0xc6
 1736 01b7 1E       		.byte	0x1e
 1737 01b8 00       		.byte	0
 1738 01b9 08       		.uleb128 0x8
 1739 01ba 1B000000 		.4byte	.LASF50
 1740 01be 01       		.byte	0x1
 1741 01bf 2C000000 		.4byte	0x2c
 1742 01c3 06       		.byte	0x6
 1743 01c4 19       		.byte	0x19
 1744 01c5 F4010000 		.4byte	0x1f4
 1745 01c9 09       		.uleb128 0x9
 1746 01ca 95050000 		.4byte	.LASF38
 1747 01ce 00       		.byte	0
 1748 01cf 09       		.uleb128 0x9
 1749 01d0 29030000 		.4byte	.LASF39
 1750 01d4 01       		.byte	0x1
 1751 01d5 09       		.uleb128 0x9
 1752 01d6 C0030000 		.4byte	.LASF40
 1753 01da 02       		.byte	0x2
 1754 01db 09       		.uleb128 0x9
 1755 01dc 63030000 		.4byte	.LASF41
 1756 01e0 03       		.byte	0x3
 1757 01e1 09       		.uleb128 0x9
 1758 01e2 4B020000 		.4byte	.LASF42
 1759 01e6 04       		.byte	0x4
 1760 01e7 09       		.uleb128 0x9
 1761 01e8 95020000 		.4byte	.LASF43
 1762 01ec 05       		.byte	0x5
 1763 01ed 09       		.uleb128 0x9
 1764 01ee 82050000 		.4byte	.LASF44
 1765 01f2 06       		.byte	0x6
 1766 01f3 00       		.byte	0
 1767 01f4 06       		.uleb128 0x6
 1768 01f5 FF010000 		.4byte	.LASF46
 1769 01f9 0C       		.byte	0xc
 1770 01fa 06       		.byte	0x6
 1771 01fb 1A       		.byte	0x1a
 1772 01fc 25020000 		.4byte	0x225
 1773 0200 07       		.uleb128 0x7
 1774 0201 00000000 		.4byte	.LASF47
 1775 0205 06       		.byte	0x6
 1776 0206 1B       		.byte	0x1b
 1777 0207 B9010000 		.4byte	0x1b9
 1778 020b 00       		.byte	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 41


 1779 020c 07       		.uleb128 0x7
 1780 020d 81060000 		.4byte	.LASF48
 1781 0211 06       		.byte	0x6
 1782 0212 1C       		.byte	0x1c
 1783 0213 68000000 		.4byte	0x68
 1784 0217 04       		.byte	0x4
 1785 0218 07       		.uleb128 0x7
 1786 0219 89060000 		.4byte	.LASF49
 1787 021d 06       		.byte	0x6
 1788 021e 1D       		.byte	0x1d
 1789 021f 68000000 		.4byte	0x68
 1790 0223 08       		.byte	0x8
 1791 0224 00       		.byte	0
 1792 0225 03       		.uleb128 0x3
 1793 0226 FF010000 		.4byte	.LASF46
 1794 022a 06       		.byte	0x6
 1795 022b 1E       		.byte	0x1e
 1796 022c F4010000 		.4byte	0x1f4
 1797 0230 08       		.uleb128 0x8
 1798 0231 A9040000 		.4byte	.LASF51
 1799 0235 01       		.byte	0x1
 1800 0236 2C000000 		.4byte	0x2c
 1801 023a 06       		.byte	0x6
 1802 023b 20       		.byte	0x20
 1803 023c 58020000 		.4byte	0x258
 1804 0240 0A       		.uleb128 0xa
 1805 0241 557000   		.ascii	"Up\000"
 1806 0244 00       		.byte	0
 1807 0245 09       		.uleb128 0x9
 1808 0246 BA040000 		.4byte	.LASF52
 1809 024a 01       		.byte	0x1
 1810 024b 09       		.uleb128 0x9
 1811 024c 19030000 		.4byte	.LASF53
 1812 0250 02       		.byte	0x2
 1813 0251 09       		.uleb128 0x9
 1814 0252 BF040000 		.4byte	.LASF54
 1815 0256 03       		.byte	0x3
 1816 0257 00       		.byte	0
 1817 0258 08       		.uleb128 0x8
 1818 0259 23050000 		.4byte	.LASF55
 1819 025d 01       		.byte	0x1
 1820 025e 2C000000 		.4byte	0x2c
 1821 0262 01       		.byte	0x1
 1822 0263 28       		.byte	0x28
 1823 0264 A5020000 		.4byte	0x2a5
 1824 0268 09       		.uleb128 0x9
 1825 0269 87040000 		.4byte	.LASF56
 1826 026d 00       		.byte	0
 1827 026e 09       		.uleb128 0x9
 1828 026f D1030000 		.4byte	.LASF57
 1829 0273 01       		.byte	0x1
 1830 0274 09       		.uleb128 0x9
 1831 0275 90030000 		.4byte	.LASF58
 1832 0279 02       		.byte	0x2
 1833 027a 09       		.uleb128 0x9
 1834 027b 12060000 		.4byte	.LASF59
 1835 027f 03       		.byte	0x3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 42


 1836 0280 09       		.uleb128 0x9
 1837 0281 55050000 		.4byte	.LASF60
 1838 0285 04       		.byte	0x4
 1839 0286 09       		.uleb128 0x9
 1840 0287 66050000 		.4byte	.LASF61
 1841 028b 05       		.byte	0x5
 1842 028c 09       		.uleb128 0x9
 1843 028d A2030000 		.4byte	.LASF62
 1844 0291 06       		.byte	0x6
 1845 0292 09       		.uleb128 0x9
 1846 0293 A2020000 		.4byte	.LASF63
 1847 0297 07       		.byte	0x7
 1848 0298 09       		.uleb128 0x9
 1849 0299 0A000000 		.4byte	.LASF64
 1850 029d 08       		.byte	0x8
 1851 029e 09       		.uleb128 0x9
 1852 029f 22060000 		.4byte	.LASF65
 1853 02a3 09       		.byte	0x9
 1854 02a4 00       		.byte	0
 1855 02a5 0B       		.uleb128 0xb
 1856 02a6 1E030000 		.4byte	.LASF73
 1857 02aa 01       		.byte	0x1
 1858 02ab 40       		.byte	0x40
 1859 02ac 00000000 		.4byte	.LFB64
 1860 02b0 F4000000 		.4byte	.LFE64-.LFB64
 1861 02b4 01       		.uleb128 0x1
 1862 02b5 9C       		.byte	0x9c
 1863 02b6 D3020000 		.4byte	0x2d3
 1864 02ba 0C       		.uleb128 0xc
 1865 02bb 58000000 		.4byte	.LBB2
 1866 02bf 62000000 		.4byte	.LBE2-.LBB2
 1867 02c3 0D       		.uleb128 0xd
 1868 02c4 69030000 		.4byte	.LASF72
 1869 02c8 01       		.byte	0x1
 1870 02c9 4E       		.byte	0x4e
 1871 02ca D2000000 		.4byte	0xd2
 1872 02ce 02       		.uleb128 0x2
 1873 02cf 91       		.byte	0x91
 1874 02d0 6C       		.sleb128 -20
 1875 02d1 00       		.byte	0
 1876 02d2 00       		.byte	0
 1877 02d3 0E       		.uleb128 0xe
 1878 02d4 5B040000 		.4byte	.LASF66
 1879 02d8 01       		.byte	0x1
 1880 02d9 59       		.byte	0x59
 1881 02da 00000000 		.4byte	.LFB65
 1882 02de 18000000 		.4byte	.LFE65-.LFB65
 1883 02e2 01       		.uleb128 0x1
 1884 02e3 9C       		.byte	0x9c
 1885 02e4 0E       		.uleb128 0xe
 1886 02e5 4F040000 		.4byte	.LASF67
 1887 02e9 01       		.byte	0x1
 1888 02ea 5F       		.byte	0x5f
 1889 02eb 00000000 		.4byte	.LFB66
 1890 02ef 18000000 		.4byte	.LFE66-.LFB66
 1891 02f3 01       		.uleb128 0x1
 1892 02f4 9C       		.byte	0x9c
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 43


 1893 02f5 0E       		.uleb128 0xe
 1894 02f6 9F050000 		.4byte	.LASF68
 1895 02fa 01       		.byte	0x1
 1896 02fb 65       		.byte	0x65
 1897 02fc 00000000 		.4byte	.LFB67
 1898 0300 18000000 		.4byte	.LFE67-.LFB67
 1899 0304 01       		.uleb128 0x1
 1900 0305 9C       		.byte	0x9c
 1901 0306 0E       		.uleb128 0xe
 1902 0307 00010000 		.4byte	.LASF69
 1903 030b 01       		.byte	0x1
 1904 030c 6B       		.byte	0x6b
 1905 030d 00000000 		.4byte	.LFB68
 1906 0311 18000000 		.4byte	.LFE68-.LFB68
 1907 0315 01       		.uleb128 0x1
 1908 0316 9C       		.byte	0x9c
 1909 0317 0F       		.uleb128 0xf
 1910 0318 28020000 		.4byte	.LASF70
 1911 031c 01       		.byte	0x1
 1912 031d 71       		.byte	0x71
 1913 031e 00000000 		.4byte	.LFB69
 1914 0322 38000000 		.4byte	.LFE69-.LFB69
 1915 0326 01       		.uleb128 0x1
 1916 0327 9C       		.byte	0x9c
 1917 0328 10       		.uleb128 0x10
 1918 0329 E7050000 		.4byte	.LASF71
 1919 032d 01       		.byte	0x1
 1920 032e 7D       		.byte	0x7d
 1921 032f 68000000 		.4byte	0x68
 1922 0333 00000000 		.4byte	.LFB70
 1923 0337 BC000000 		.4byte	.LFE70-.LFB70
 1924 033b 01       		.uleb128 0x1
 1925 033c 9C       		.byte	0x9c
 1926 033d 11       		.uleb128 0x11
 1927 033e 79020000 		.4byte	.LASF78
 1928 0342 01       		.byte	0x1
 1929 0343 AC       		.byte	0xac
 1930 0344 C6000000 		.4byte	0xc6
 1931 0348 00000000 		.4byte	.LFB71
 1932 034c 54000000 		.4byte	.LFE71-.LFB71
 1933 0350 01       		.uleb128 0x1
 1934 0351 9C       		.byte	0x9c
 1935 0352 81030000 		.4byte	0x381
 1936 0356 12       		.uleb128 0x12
 1937 0357 DC010000 		.4byte	.LASF80
 1938 035b 01       		.byte	0x1
 1939 035c AC       		.byte	0xac
 1940 035d A2000000 		.4byte	0xa2
 1941 0361 02       		.uleb128 0x2
 1942 0362 91       		.byte	0x91
 1943 0363 66       		.sleb128 -26
 1944 0364 13       		.uleb128 0x13
 1945 0365 63707300 		.ascii	"cps\000"
 1946 0369 01       		.byte	0x1
 1947 036a AE       		.byte	0xae
 1948 036b D2000000 		.4byte	0xd2
 1949 036f 02       		.uleb128 0x2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 44


 1950 0370 91       		.byte	0x91
 1951 0371 6C       		.sleb128 -20
 1952 0372 13       		.uleb128 0x13
 1953 0373 72706D00 		.ascii	"rpm\000"
 1954 0377 01       		.byte	0x1
 1955 0378 AF       		.byte	0xaf
 1956 0379 C6000000 		.4byte	0xc6
 1957 037d 02       		.uleb128 0x2
 1958 037e 91       		.byte	0x91
 1959 037f 6A       		.sleb128 -22
 1960 0380 00       		.byte	0
 1961 0381 14       		.uleb128 0x14
 1962 0382 47010000 		.4byte	.LASF83
 1963 0386 01       		.byte	0x1
 1964 0387 B7       		.byte	0xb7
 1965 0388 00000000 		.4byte	.LFB72
 1966 038c 34000000 		.4byte	.LFE72-.LFB72
 1967 0390 01       		.uleb128 0x1
 1968 0391 9C       		.byte	0x9c
 1969 0392 15       		.uleb128 0x15
 1970 0393 38060000 		.4byte	.LASF74
 1971 0397 01       		.byte	0x1
 1972 0398 1101     		.2byte	0x111
 1973 039a 58020000 		.4byte	0x258
 1974 039e 00000000 		.4byte	.LFB73
 1975 03a2 A0020000 		.4byte	.LFE73-.LFB73
 1976 03a6 01       		.uleb128 0x1
 1977 03a7 9C       		.byte	0x9c
 1978 03a8 FF030000 		.4byte	0x3ff
 1979 03ac 16       		.uleb128 0x16
 1980 03ad 37000000 		.4byte	.LASF75
 1981 03b1 01       		.byte	0x1
 1982 03b2 1201     		.2byte	0x112
 1983 03b4 D2000000 		.4byte	0xd2
 1984 03b8 02       		.uleb128 0x2
 1985 03b9 91       		.byte	0x91
 1986 03ba 74       		.sleb128 -12
 1987 03bb 16       		.uleb128 0x16
 1988 03bc AA030000 		.4byte	.LASF76
 1989 03c0 01       		.byte	0x1
 1990 03c1 1901     		.2byte	0x119
 1991 03c3 58020000 		.4byte	0x258
 1992 03c7 02       		.uleb128 0x2
 1993 03c8 91       		.byte	0x91
 1994 03c9 73       		.sleb128 -13
 1995 03ca 17       		.uleb128 0x17
 1996 03cb 30000000 		.4byte	.LBB3
 1997 03cf 36000000 		.4byte	.LBE3-.LBB3
 1998 03d3 E6030000 		.4byte	0x3e6
 1999 03d7 18       		.uleb128 0x18
 2000 03d8 35020000 		.4byte	.LASF77
 2001 03dc 01       		.byte	0x1
 2002 03dd 2101     		.2byte	0x121
 2003 03df 68000000 		.4byte	0x68
 2004 03e3 19       		.uleb128 0x19
 2005 03e4 00       		.byte	0
 2006 03e5 00       		.byte	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 45


 2007 03e6 0C       		.uleb128 0xc
 2008 03e7 78000000 		.4byte	.LBB4
 2009 03eb 1A000000 		.4byte	.LBE4-.LBB4
 2010 03ef 18       		.uleb128 0x18
 2011 03f0 35020000 		.4byte	.LASF77
 2012 03f4 01       		.byte	0x1
 2013 03f5 2101     		.2byte	0x121
 2014 03f7 68000000 		.4byte	0x68
 2015 03fb 19       		.uleb128 0x19
 2016 03fc 00       		.byte	0
 2017 03fd 00       		.byte	0
 2018 03fe 00       		.byte	0
 2019 03ff 1A       		.uleb128 0x1a
 2020 0400 EC050000 		.4byte	.LASF79
 2021 0404 01       		.byte	0x1
 2022 0405 AD01     		.2byte	0x1ad
 2023 0407 25020000 		.4byte	0x225
 2024 040b 00000000 		.4byte	.LFB74
 2025 040f 9E000000 		.4byte	.LFE74-.LFB74
 2026 0413 01       		.uleb128 0x1
 2027 0414 9C       		.byte	0x9c
 2028 0415 5E040000 		.4byte	0x45e
 2029 0419 1B       		.uleb128 0x1b
 2030 041a 22010000 		.4byte	.LASF81
 2031 041e 01       		.byte	0x1
 2032 041f AD01     		.2byte	0x1ad
 2033 0421 68000000 		.4byte	0x68
 2034 0425 02       		.uleb128 0x2
 2035 0426 91       		.byte	0x91
 2036 0427 60       		.sleb128 -32
 2037 0428 1B       		.uleb128 0x1b
 2038 0429 E5020000 		.4byte	.LASF82
 2039 042d 01       		.byte	0x1
 2040 042e AD01     		.2byte	0x1ad
 2041 0430 5E040000 		.4byte	0x45e
 2042 0434 02       		.uleb128 0x2
 2043 0435 91       		.byte	0x91
 2044 0436 5C       		.sleb128 -36
 2045 0437 1C       		.uleb128 0x1c
 2046 0438 6F757400 		.ascii	"out\000"
 2047 043c 01       		.byte	0x1
 2048 043d AE01     		.2byte	0x1ae
 2049 043f 25020000 		.4byte	0x225
 2050 0443 02       		.uleb128 0x2
 2051 0444 91       		.byte	0x91
 2052 0445 68       		.sleb128 -24
 2053 0446 0C       		.uleb128 0xc
 2054 0447 0C000000 		.4byte	.LBB5
 2055 044b 78000000 		.4byte	.LBE5-.LBB5
 2056 044f 1C       		.uleb128 0x1c
 2057 0450 6900     		.ascii	"i\000"
 2058 0452 01       		.byte	0x1
 2059 0453 B001     		.2byte	0x1b0
 2060 0455 68000000 		.4byte	0x68
 2061 0459 02       		.uleb128 0x2
 2062 045a 91       		.byte	0x91
 2063 045b 74       		.sleb128 -12
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 46


 2064 045c 00       		.byte	0
 2065 045d 00       		.byte	0
 2066 045e 1D       		.uleb128 0x1d
 2067 045f 04       		.byte	0x4
 2068 0460 25020000 		.4byte	0x225
 2069 0464 1E       		.uleb128 0x1e
 2070 0465 17020000 		.4byte	.LASF84
 2071 0469 01       		.byte	0x1
 2072 046a BC01     		.2byte	0x1bc
 2073 046c 00000000 		.4byte	.LFB75
 2074 0470 B0000000 		.4byte	.LFE75-.LFB75
 2075 0474 01       		.uleb128 0x1
 2076 0475 9C       		.byte	0x9c
 2077 0476 1F       		.uleb128 0x1f
 2078 0477 70040000 		.4byte	.LASF85
 2079 047b 07       		.byte	0x7
 2080 047c 1207     		.2byte	0x712
 2081 047e 82040000 		.4byte	0x482
 2082 0482 20       		.uleb128 0x20
 2083 0483 8B000000 		.4byte	0x8b
 2084 0487 21       		.uleb128 0x21
 2085 0488 747300   		.ascii	"ts\000"
 2086 048b 05       		.byte	0x5
 2087 048c 10       		.byte	0x10
 2088 048d 96000000 		.4byte	0x96
 2089 0491 05       		.uleb128 0x5
 2090 0492 03       		.byte	0x3
 2091 0493 00000000 		.4byte	ts
 2092 0497 22       		.uleb128 0x22
 2093 0498 6B050000 		.4byte	.LASF86
 2094 049c 05       		.byte	0x5
 2095 049d 11       		.byte	0x11
 2096 049e A2000000 		.4byte	0xa2
 2097 04a2 05       		.uleb128 0x5
 2098 04a3 03       		.byte	0x3
 2099 04a4 00000000 		.4byte	ts_enc
 2100 04a8 22       		.uleb128 0x22
 2101 04a9 7D040000 		.4byte	.LASF87
 2102 04ad 05       		.byte	0x5
 2103 04ae 12       		.byte	0x12
 2104 04af A2000000 		.4byte	0xa2
 2105 04b3 05       		.uleb128 0x5
 2106 04b4 03       		.byte	0x3
 2107 04b5 00000000 		.4byte	ts_update
 2108 04b9 22       		.uleb128 0x22
 2109 04ba 99030000 		.4byte	.LASF88
 2110 04be 05       		.byte	0x5
 2111 04bf 13       		.byte	0x13
 2112 04c0 A2000000 		.4byte	0xa2
 2113 04c4 05       		.uleb128 0x5
 2114 04c5 03       		.byte	0x3
 2115 04c6 00000000 		.4byte	ts_speed
 2116 04ca 22       		.uleb128 0x22
 2117 04cb B9020000 		.4byte	.LASF89
 2118 04cf 05       		.byte	0x5
 2119 04d0 14       		.byte	0x14
 2120 04d1 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 47


 2121 04d5 05       		.uleb128 0x5
 2122 04d6 03       		.byte	0x3
 2123 04d7 00000000 		.4byte	ts_display
 2124 04db 22       		.uleb128 0x22
 2125 04dc 6D020000 		.4byte	.LASF90
 2126 04e0 05       		.byte	0x5
 2127 04e1 16       		.byte	0x16
 2128 04e2 96000000 		.4byte	0x96
 2129 04e6 05       		.uleb128 0x5
 2130 04e7 03       		.byte	0x3
 2131 04e8 00000000 		.4byte	flag_ts_enc
 2132 04ec 22       		.uleb128 0x22
 2133 04ed 5E020000 		.4byte	.LASF91
 2134 04f1 05       		.byte	0x5
 2135 04f2 17       		.byte	0x17
 2136 04f3 96000000 		.4byte	0x96
 2137 04f7 05       		.uleb128 0x5
 2138 04f8 03       		.byte	0x3
 2139 04f9 00000000 		.4byte	flag_ts_update
 2140 04fd 22       		.uleb128 0x22
 2141 04fe 15040000 		.4byte	.LASF92
 2142 0502 05       		.byte	0x5
 2143 0503 18       		.byte	0x18
 2144 0504 96000000 		.4byte	0x96
 2145 0508 05       		.uleb128 0x5
 2146 0509 03       		.byte	0x3
 2147 050a 00000000 		.4byte	flag_ts_speed
 2148 050e 22       		.uleb128 0x22
 2149 050f 72050000 		.4byte	.LASF93
 2150 0513 05       		.byte	0x5
 2151 0514 19       		.byte	0x19
 2152 0515 96000000 		.4byte	0x96
 2153 0519 05       		.uleb128 0x5
 2154 051a 03       		.byte	0x3
 2155 051b 00000000 		.4byte	flag_ts_display
 2156 051f 22       		.uleb128 0x22
 2157 0520 32040000 		.4byte	.LASF94
 2158 0524 05       		.byte	0x5
 2159 0525 1B       		.byte	0x1b
 2160 0526 96000000 		.4byte	0x96
 2161 052a 05       		.uleb128 0x5
 2162 052b 03       		.byte	0x3
 2163 052c 00000000 		.4byte	flag_rx
 2164 0530 22       		.uleb128 0x22
 2165 0531 0B020000 		.4byte	.LASF95
 2166 0535 05       		.byte	0x5
 2167 0536 1C       		.byte	0x1c
 2168 0537 96000000 		.4byte	0x96
 2169 053b 05       		.uleb128 0x5
 2170 053c 03       		.byte	0x3
 2171 053d 00000000 		.4byte	flag_packet
 2172 0541 22       		.uleb128 0x22
 2173 0542 69060000 		.4byte	.LASF96
 2174 0546 05       		.byte	0x5
 2175 0547 1D       		.byte	0x1d
 2176 0548 96000000 		.4byte	0x96
 2177 054c 05       		.uleb128 0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 48


 2178 054d 03       		.byte	0x3
 2179 054e 00000000 		.4byte	flag_KB_string
 2180 0552 22       		.uleb128 0x22
 2181 0553 23040000 		.4byte	.LASF97
 2182 0557 05       		.byte	0x5
 2183 0558 1F       		.byte	0x1f
 2184 0559 96000000 		.4byte	0x96
 2185 055d 05       		.uleb128 0x5
 2186 055e 03       		.byte	0x3
 2187 055f 00000000 		.4byte	dataready_flag
 2188 0563 22       		.uleb128 0x22
 2189 0564 2B010000 		.4byte	.LASF98
 2190 0568 05       		.byte	0x5
 2191 0569 21       		.byte	0x21
 2192 056a 96000000 		.4byte	0x96
 2193 056e 05       		.uleb128 0x5
 2194 056f 03       		.byte	0x3
 2195 0570 00000000 		.4byte	flag_rf_transmission_active
 2196 0574 23       		.uleb128 0x23
 2197 0575 84000000 		.4byte	0x84
 2198 0579 84050000 		.4byte	0x584
 2199 057d 24       		.uleb128 0x24
 2200 057e 7D000000 		.4byte	0x7d
 2201 0582 3F       		.byte	0x3f
 2202 0583 00       		.byte	0
 2203 0584 22       		.uleb128 0x22
 2204 0585 87050000 		.4byte	.LASF99
 2205 0589 05       		.byte	0x5
 2206 058a 24       		.byte	0x24
 2207 058b 74050000 		.4byte	0x574
 2208 058f 05       		.uleb128 0x5
 2209 0590 03       		.byte	0x3
 2210 0591 00000000 		.4byte	displaystring
 2211 0595 22       		.uleb128 0x22
 2212 0596 50050000 		.4byte	.LASF100
 2213 059a 05       		.byte	0x5
 2214 059b 25       		.byte	0x25
 2215 059c 74050000 		.4byte	0x574
 2216 05a0 05       		.uleb128 0x5
 2217 05a1 03       		.byte	0x3
 2218 05a2 00000000 		.4byte	line
 2219 05a6 22       		.uleb128 0x22
 2220 05a7 1D050000 		.4byte	.LASF101
 2221 05ab 05       		.byte	0x5
 2222 05ac 25       		.byte	0x25
 2223 05ad 74050000 		.4byte	0x574
 2224 05b1 05       		.uleb128 0x5
 2225 05b2 03       		.byte	0x3
 2226 05b3 00000000 		.4byte	entry
 2227 05b7 23       		.uleb128 0x23
 2228 05b8 96000000 		.4byte	0x96
 2229 05bc C7050000 		.4byte	0x5c7
 2230 05c0 24       		.uleb128 0x24
 2231 05c1 7D000000 		.4byte	0x7d
 2232 05c5 3F       		.byte	0x3f
 2233 05c6 00       		.byte	0
 2234 05c7 22       		.uleb128 0x22
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 49


 2235 05c8 D2010000 		.4byte	.LASF102
 2236 05cc 05       		.byte	0x5
 2237 05cd 26       		.byte	0x26
 2238 05ce B7050000 		.4byte	0x5b7
 2239 05d2 05       		.uleb128 0x5
 2240 05d3 03       		.byte	0x3
 2241 05d4 00000000 		.4byte	usbBuffer
 2242 05d8 22       		.uleb128 0x22
 2243 05d9 65000000 		.4byte	.LASF103
 2244 05dd 05       		.byte	0x5
 2245 05de 3C       		.byte	0x3c
 2246 05df E0000000 		.4byte	0xe0
 2247 05e3 05       		.uleb128 0x5
 2248 05e4 03       		.byte	0x3
 2249 05e5 00000000 		.4byte	system_state
 2250 05e9 23       		.uleb128 0x23
 2251 05ea 68000000 		.4byte	0x68
 2252 05ee FF050000 		.4byte	0x5ff
 2253 05f2 24       		.uleb128 0x24
 2254 05f3 7D000000 		.4byte	0x7d
 2255 05f7 0E       		.byte	0xe
 2256 05f8 24       		.uleb128 0x24
 2257 05f9 7D000000 		.4byte	0x7d
 2258 05fd 12       		.byte	0x12
 2259 05fe 00       		.byte	0
 2260 05ff 25       		.uleb128 0x25
 2261 0600 6D617000 		.ascii	"map\000"
 2262 0604 08       		.byte	0x8
 2263 0605 04       		.byte	0x4
 2264 0606 E9050000 		.4byte	0x5e9
 2265 060a 23       		.uleb128 0x23
 2266 060b 68000000 		.4byte	0x68
 2267 060f 20060000 		.4byte	0x620
 2268 0613 24       		.uleb128 0x24
 2269 0614 7D000000 		.4byte	0x7d
 2270 0618 04       		.byte	0x4
 2271 0619 24       		.uleb128 0x24
 2272 061a 7D000000 		.4byte	0x7d
 2273 061e 01       		.byte	0x1
 2274 061f 00       		.byte	0
 2275 0620 26       		.uleb128 0x26
 2276 0621 86030000 		.4byte	.LASF104
 2277 0625 08       		.byte	0x8
 2278 0626 05       		.byte	0x5
 2279 0627 0A060000 		.4byte	0x60a
 2280 062b 22       		.uleb128 0x22
 2281 062c CD040000 		.4byte	.LASF105
 2282 0630 01       		.byte	0x1
 2283 0631 29       		.byte	0x29
 2284 0632 58020000 		.4byte	0x258
 2285 0636 05       		.uleb128 0x5
 2286 0637 03       		.byte	0x3
 2287 0638 00000000 		.4byte	currentDirection
 2288 063c 22       		.uleb128 0x22
 2289 063d F7030000 		.4byte	.LASF106
 2290 0641 01       		.byte	0x1
 2291 0642 29       		.byte	0x29
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 50


 2292 0643 58020000 		.4byte	0x258
 2293 0647 05       		.uleb128 0x5
 2294 0648 03       		.byte	0x3
 2295 0649 00000000 		.4byte	previousDirection
 2296 064d 22       		.uleb128 0x22
 2297 064e C4020000 		.4byte	.LASF107
 2298 0652 01       		.byte	0x1
 2299 0653 2A       		.byte	0x2a
 2300 0654 30020000 		.4byte	0x230
 2301 0658 05       		.uleb128 0x5
 2302 0659 03       		.byte	0x3
 2303 065a 00000000 		.4byte	currentOrientation
 2304 065e 22       		.uleb128 0x22
 2305 065f 4F030000 		.4byte	.LASF108
 2306 0663 01       		.byte	0x1
 2307 0664 2A       		.byte	0x2a
 2308 0665 30020000 		.4byte	0x230
 2309 0669 05       		.uleb128 0x5
 2310 066a 03       		.byte	0x3
 2311 066b 00000000 		.4byte	previousOrientation
 2312 066f 22       		.uleb128 0x22
 2313 0670 FF050000 		.4byte	.LASF109
 2314 0674 01       		.byte	0x1
 2315 0675 2B       		.byte	0x2b
 2316 0676 25020000 		.4byte	0x225
 2317 067a 05       		.uleb128 0x5
 2318 067b 03       		.byte	0x3
 2319 067c 00000000 		.4byte	currentInstruction
 2320 0680 22       		.uleb128 0x22
 2321 0681 22010000 		.4byte	.LASF81
 2322 0685 01       		.byte	0x1
 2323 0686 2C       		.byte	0x2c
 2324 0687 68000000 		.4byte	0x68
 2325 068b 05       		.uleb128 0x5
 2326 068c 03       		.byte	0x3
 2327 068d 00000000 		.4byte	numSteps
 2328 0691 22       		.uleb128 0x22
 2329 0692 E5020000 		.4byte	.LASF82
 2330 0696 01       		.byte	0x1
 2331 0697 2E       		.byte	0x2e
 2332 0698 5E040000 		.4byte	0x45e
 2333 069c 05       		.uleb128 0x5
 2334 069d 03       		.byte	0x3
 2335 069e 00000000 		.4byte	instructionList
 2336 06a2 21       		.uleb128 0x21
 2337 06a3 733300   		.ascii	"s3\000"
 2338 06a6 01       		.byte	0x1
 2339 06a7 30       		.byte	0x30
 2340 06a8 96000000 		.4byte	0x96
 2341 06ac 05       		.uleb128 0x5
 2342 06ad 03       		.byte	0x3
 2343 06ae 00000000 		.4byte	s3
 2344 06b2 21       		.uleb128 0x21
 2345 06b3 733400   		.ascii	"s4\000"
 2346 06b6 01       		.byte	0x1
 2347 06b7 30       		.byte	0x30
 2348 06b8 96000000 		.4byte	0x96
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 51


 2349 06bc 05       		.uleb128 0x5
 2350 06bd 03       		.byte	0x3
 2351 06be 00000000 		.4byte	s4
 2352 06c2 21       		.uleb128 0x21
 2353 06c3 733500   		.ascii	"s5\000"
 2354 06c6 01       		.byte	0x1
 2355 06c7 30       		.byte	0x30
 2356 06c8 96000000 		.4byte	0x96
 2357 06cc 05       		.uleb128 0x5
 2358 06cd 03       		.byte	0x3
 2359 06ce 00000000 		.4byte	s5
 2360 06d2 21       		.uleb128 0x21
 2361 06d3 733600   		.ascii	"s6\000"
 2362 06d6 01       		.byte	0x1
 2363 06d7 30       		.byte	0x30
 2364 06d8 96000000 		.4byte	0x96
 2365 06dc 05       		.uleb128 0x5
 2366 06dd 03       		.byte	0x3
 2367 06de 00000000 		.4byte	s6
 2368 06e2 22       		.uleb128 0x22
 2369 06e3 8F040000 		.4byte	.LASF110
 2370 06e7 01       		.byte	0x1
 2371 06e8 35       		.byte	0x35
 2372 06e9 AE000000 		.4byte	0xae
 2373 06ed 05       		.uleb128 0x5
 2374 06ee 03       		.byte	0x3
 2375 06ef 00000000 		.4byte	totalMilliseconds
 2376 06f3 22       		.uleb128 0x22
 2377 06f4 0C010000 		.4byte	.LASF111
 2378 06f8 01       		.byte	0x1
 2379 06f9 36       		.byte	0x36
 2380 06fa D2000000 		.4byte	0xd2
 2381 06fe 05       		.uleb128 0x5
 2382 06ff 03       		.byte	0x3
 2383 0700 00000000 		.4byte	totalDistance
 2384 0704 23       		.uleb128 0x23
 2385 0705 84000000 		.4byte	0x84
 2386 0709 14070000 		.4byte	0x714
 2387 070d 24       		.uleb128 0x24
 2388 070e 7D000000 		.4byte	0x7d
 2389 0712 44       		.byte	0x44
 2390 0713 00       		.byte	0
 2391 0714 22       		.uleb128 0x22
 2392 0715 41000000 		.4byte	.LASF112
 2393 0719 01       		.byte	0x1
 2394 071a 38       		.byte	0x38
 2395 071b 04070000 		.4byte	0x704
 2396 071f 05       		.uleb128 0x5
 2397 0720 03       		.byte	0x3
 2398 0721 00000000 		.4byte	buffer
 2399 0725 22       		.uleb128 0x22
 2400 0726 65010000 		.4byte	.LASF113
 2401 072a 01       		.byte	0x1
 2402 072b 39       		.byte	0x39
 2403 072c 68000000 		.4byte	0x68
 2404 0730 05       		.uleb128 0x5
 2405 0731 03       		.byte	0x3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 52


 2406 0732 00000000 		.4byte	quadDec2Count
 2407 0736 22       		.uleb128 0x22
 2408 0737 60060000 		.4byte	.LASF114
 2409 073b 01       		.byte	0x1
 2410 073c 3A       		.byte	0x3a
 2411 073d 68000000 		.4byte	0x68
 2412 0741 05       		.uleb128 0x5
 2413 0742 03       		.byte	0x3
 2414 0743 00000000 		.4byte	timerInt
 2415 0747 22       		.uleb128 0x22
 2416 0748 41020000 		.4byte	.LASF115
 2417 074c 01       		.byte	0x1
 2418 074d 3B       		.byte	0x3b
 2419 074e 68000000 		.4byte	0x68
 2420 0752 05       		.uleb128 0x5
 2421 0753 03       		.byte	0x3
 2422 0754 00000000 		.4byte	keepLedOn
 2423 0758 22       		.uleb128 0x22
 2424 0759 F9040000 		.4byte	.LASF116
 2425 075d 01       		.byte	0x1
 2426 075e 3C       		.byte	0x3c
 2427 075f AE000000 		.4byte	0xae
 2428 0763 05       		.uleb128 0x5
 2429 0764 03       		.byte	0x3
 2430 0765 00000000 		.4byte	stopBuffer
 2431 0769 22       		.uleb128 0x22
 2432 076a 01030000 		.4byte	.LASF117
 2433 076e 01       		.byte	0x1
 2434 076f BE       		.byte	0xbe
 2435 0770 D2000000 		.4byte	0xd2
 2436 0774 05       		.uleb128 0x5
 2437 0775 03       		.byte	0x3
 2438 0776 00000000 		.4byte	xBlocksize
 2439 077a 22       		.uleb128 0x22
 2440 077b 3A040000 		.4byte	.LASF118
 2441 077f 01       		.byte	0x1
 2442 0780 BF       		.byte	0xbf
 2443 0781 D2000000 		.4byte	0xd2
 2444 0785 05       		.uleb128 0x5
 2445 0786 03       		.byte	0x3
 2446 0787 00000000 		.4byte	yBlocksize
 2447 078b 22       		.uleb128 0x22
 2448 078c B7050000 		.4byte	.LASF119
 2449 0790 01       		.byte	0x1
 2450 0791 C0       		.byte	0xc0
 2451 0792 96000000 		.4byte	0x96
 2452 0796 05       		.uleb128 0x5
 2453 0797 03       		.byte	0x3
 2454 0798 00000000 		.4byte	currentRow
 2455 079c 22       		.uleb128 0x22
 2456 079d 4D060000 		.4byte	.LASF120
 2457 07a1 01       		.byte	0x1
 2458 07a2 C1       		.byte	0xc1
 2459 07a3 96000000 		.4byte	0x96
 2460 07a7 05       		.uleb128 0x5
 2461 07a8 03       		.byte	0x3
 2462 07a9 00000000 		.4byte	currentCol
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 53


 2463 07ad 27       		.uleb128 0x27
 2464 07ae 3F050000 		.4byte	.LASF121
 2465 07b2 01       		.byte	0x1
 2466 07b3 0E01     		.2byte	0x10e
 2467 07b5 96000000 		.4byte	0x96
 2468 07b9 05       		.uleb128 0x5
 2469 07ba 03       		.byte	0x3
 2470 07bb 00000000 		.4byte	stoppedAfterTurn
 2471 07bf 27       		.uleb128 0x27
 2472 07c0 88020000 		.4byte	.LASF122
 2473 07c4 01       		.byte	0x1
 2474 07c5 0F01     		.2byte	0x10f
 2475 07c7 96000000 		.4byte	0x96
 2476 07cb 05       		.uleb128 0x5
 2477 07cc 03       		.byte	0x3
 2478 07cd 00000000 		.4byte	ignoreSensor
 2479 07d1 00       		.byte	0
 2480              		.section	.debug_abbrev,"",%progbits
 2481              	.Ldebug_abbrev0:
 2482 0000 01       		.uleb128 0x1
 2483 0001 11       		.uleb128 0x11
 2484 0002 01       		.byte	0x1
 2485 0003 25       		.uleb128 0x25
 2486 0004 0E       		.uleb128 0xe
 2487 0005 13       		.uleb128 0x13
 2488 0006 0B       		.uleb128 0xb
 2489 0007 03       		.uleb128 0x3
 2490 0008 0E       		.uleb128 0xe
 2491 0009 1B       		.uleb128 0x1b
 2492 000a 0E       		.uleb128 0xe
 2493 000b 55       		.uleb128 0x55
 2494 000c 17       		.uleb128 0x17
 2495 000d 11       		.uleb128 0x11
 2496 000e 01       		.uleb128 0x1
 2497 000f 10       		.uleb128 0x10
 2498 0010 17       		.uleb128 0x17
 2499 0011 00       		.byte	0
 2500 0012 00       		.byte	0
 2501 0013 02       		.uleb128 0x2
 2502 0014 24       		.uleb128 0x24
 2503 0015 00       		.byte	0
 2504 0016 0B       		.uleb128 0xb
 2505 0017 0B       		.uleb128 0xb
 2506 0018 3E       		.uleb128 0x3e
 2507 0019 0B       		.uleb128 0xb
 2508 001a 03       		.uleb128 0x3
 2509 001b 0E       		.uleb128 0xe
 2510 001c 00       		.byte	0
 2511 001d 00       		.byte	0
 2512 001e 03       		.uleb128 0x3
 2513 001f 16       		.uleb128 0x16
 2514 0020 00       		.byte	0
 2515 0021 03       		.uleb128 0x3
 2516 0022 0E       		.uleb128 0xe
 2517 0023 3A       		.uleb128 0x3a
 2518 0024 0B       		.uleb128 0xb
 2519 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 54


 2520 0026 0B       		.uleb128 0xb
 2521 0027 49       		.uleb128 0x49
 2522 0028 13       		.uleb128 0x13
 2523 0029 00       		.byte	0
 2524 002a 00       		.byte	0
 2525 002b 04       		.uleb128 0x4
 2526 002c 24       		.uleb128 0x24
 2527 002d 00       		.byte	0
 2528 002e 0B       		.uleb128 0xb
 2529 002f 0B       		.uleb128 0xb
 2530 0030 3E       		.uleb128 0x3e
 2531 0031 0B       		.uleb128 0xb
 2532 0032 03       		.uleb128 0x3
 2533 0033 08       		.uleb128 0x8
 2534 0034 00       		.byte	0
 2535 0035 00       		.byte	0
 2536 0036 05       		.uleb128 0x5
 2537 0037 16       		.uleb128 0x16
 2538 0038 00       		.byte	0
 2539 0039 03       		.uleb128 0x3
 2540 003a 0E       		.uleb128 0xe
 2541 003b 3A       		.uleb128 0x3a
 2542 003c 0B       		.uleb128 0xb
 2543 003d 3B       		.uleb128 0x3b
 2544 003e 05       		.uleb128 0x5
 2545 003f 49       		.uleb128 0x49
 2546 0040 13       		.uleb128 0x13
 2547 0041 00       		.byte	0
 2548 0042 00       		.byte	0
 2549 0043 06       		.uleb128 0x6
 2550 0044 13       		.uleb128 0x13
 2551 0045 01       		.byte	0x1
 2552 0046 03       		.uleb128 0x3
 2553 0047 0E       		.uleb128 0xe
 2554 0048 0B       		.uleb128 0xb
 2555 0049 0B       		.uleb128 0xb
 2556 004a 3A       		.uleb128 0x3a
 2557 004b 0B       		.uleb128 0xb
 2558 004c 3B       		.uleb128 0x3b
 2559 004d 0B       		.uleb128 0xb
 2560 004e 01       		.uleb128 0x1
 2561 004f 13       		.uleb128 0x13
 2562 0050 00       		.byte	0
 2563 0051 00       		.byte	0
 2564 0052 07       		.uleb128 0x7
 2565 0053 0D       		.uleb128 0xd
 2566 0054 00       		.byte	0
 2567 0055 03       		.uleb128 0x3
 2568 0056 0E       		.uleb128 0xe
 2569 0057 3A       		.uleb128 0x3a
 2570 0058 0B       		.uleb128 0xb
 2571 0059 3B       		.uleb128 0x3b
 2572 005a 0B       		.uleb128 0xb
 2573 005b 49       		.uleb128 0x49
 2574 005c 13       		.uleb128 0x13
 2575 005d 38       		.uleb128 0x38
 2576 005e 0B       		.uleb128 0xb
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 55


 2577 005f 00       		.byte	0
 2578 0060 00       		.byte	0
 2579 0061 08       		.uleb128 0x8
 2580 0062 04       		.uleb128 0x4
 2581 0063 01       		.byte	0x1
 2582 0064 03       		.uleb128 0x3
 2583 0065 0E       		.uleb128 0xe
 2584 0066 0B       		.uleb128 0xb
 2585 0067 0B       		.uleb128 0xb
 2586 0068 49       		.uleb128 0x49
 2587 0069 13       		.uleb128 0x13
 2588 006a 3A       		.uleb128 0x3a
 2589 006b 0B       		.uleb128 0xb
 2590 006c 3B       		.uleb128 0x3b
 2591 006d 0B       		.uleb128 0xb
 2592 006e 01       		.uleb128 0x1
 2593 006f 13       		.uleb128 0x13
 2594 0070 00       		.byte	0
 2595 0071 00       		.byte	0
 2596 0072 09       		.uleb128 0x9
 2597 0073 28       		.uleb128 0x28
 2598 0074 00       		.byte	0
 2599 0075 03       		.uleb128 0x3
 2600 0076 0E       		.uleb128 0xe
 2601 0077 1C       		.uleb128 0x1c
 2602 0078 0B       		.uleb128 0xb
 2603 0079 00       		.byte	0
 2604 007a 00       		.byte	0
 2605 007b 0A       		.uleb128 0xa
 2606 007c 28       		.uleb128 0x28
 2607 007d 00       		.byte	0
 2608 007e 03       		.uleb128 0x3
 2609 007f 08       		.uleb128 0x8
 2610 0080 1C       		.uleb128 0x1c
 2611 0081 0B       		.uleb128 0xb
 2612 0082 00       		.byte	0
 2613 0083 00       		.byte	0
 2614 0084 0B       		.uleb128 0xb
 2615 0085 2E       		.uleb128 0x2e
 2616 0086 01       		.byte	0x1
 2617 0087 3F       		.uleb128 0x3f
 2618 0088 19       		.uleb128 0x19
 2619 0089 03       		.uleb128 0x3
 2620 008a 0E       		.uleb128 0xe
 2621 008b 3A       		.uleb128 0x3a
 2622 008c 0B       		.uleb128 0xb
 2623 008d 3B       		.uleb128 0x3b
 2624 008e 0B       		.uleb128 0xb
 2625 008f 27       		.uleb128 0x27
 2626 0090 19       		.uleb128 0x19
 2627 0091 11       		.uleb128 0x11
 2628 0092 01       		.uleb128 0x1
 2629 0093 12       		.uleb128 0x12
 2630 0094 06       		.uleb128 0x6
 2631 0095 40       		.uleb128 0x40
 2632 0096 18       		.uleb128 0x18
 2633 0097 9642     		.uleb128 0x2116
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 56


 2634 0099 19       		.uleb128 0x19
 2635 009a 01       		.uleb128 0x1
 2636 009b 13       		.uleb128 0x13
 2637 009c 00       		.byte	0
 2638 009d 00       		.byte	0
 2639 009e 0C       		.uleb128 0xc
 2640 009f 0B       		.uleb128 0xb
 2641 00a0 01       		.byte	0x1
 2642 00a1 11       		.uleb128 0x11
 2643 00a2 01       		.uleb128 0x1
 2644 00a3 12       		.uleb128 0x12
 2645 00a4 06       		.uleb128 0x6
 2646 00a5 00       		.byte	0
 2647 00a6 00       		.byte	0
 2648 00a7 0D       		.uleb128 0xd
 2649 00a8 34       		.uleb128 0x34
 2650 00a9 00       		.byte	0
 2651 00aa 03       		.uleb128 0x3
 2652 00ab 0E       		.uleb128 0xe
 2653 00ac 3A       		.uleb128 0x3a
 2654 00ad 0B       		.uleb128 0xb
 2655 00ae 3B       		.uleb128 0x3b
 2656 00af 0B       		.uleb128 0xb
 2657 00b0 49       		.uleb128 0x49
 2658 00b1 13       		.uleb128 0x13
 2659 00b2 02       		.uleb128 0x2
 2660 00b3 18       		.uleb128 0x18
 2661 00b4 00       		.byte	0
 2662 00b5 00       		.byte	0
 2663 00b6 0E       		.uleb128 0xe
 2664 00b7 2E       		.uleb128 0x2e
 2665 00b8 00       		.byte	0
 2666 00b9 3F       		.uleb128 0x3f
 2667 00ba 19       		.uleb128 0x19
 2668 00bb 03       		.uleb128 0x3
 2669 00bc 0E       		.uleb128 0xe
 2670 00bd 3A       		.uleb128 0x3a
 2671 00be 0B       		.uleb128 0xb
 2672 00bf 3B       		.uleb128 0x3b
 2673 00c0 0B       		.uleb128 0xb
 2674 00c1 27       		.uleb128 0x27
 2675 00c2 19       		.uleb128 0x19
 2676 00c3 11       		.uleb128 0x11
 2677 00c4 01       		.uleb128 0x1
 2678 00c5 12       		.uleb128 0x12
 2679 00c6 06       		.uleb128 0x6
 2680 00c7 40       		.uleb128 0x40
 2681 00c8 18       		.uleb128 0x18
 2682 00c9 9742     		.uleb128 0x2117
 2683 00cb 19       		.uleb128 0x19
 2684 00cc 00       		.byte	0
 2685 00cd 00       		.byte	0
 2686 00ce 0F       		.uleb128 0xf
 2687 00cf 2E       		.uleb128 0x2e
 2688 00d0 00       		.byte	0
 2689 00d1 3F       		.uleb128 0x3f
 2690 00d2 19       		.uleb128 0x19
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 57


 2691 00d3 03       		.uleb128 0x3
 2692 00d4 0E       		.uleb128 0xe
 2693 00d5 3A       		.uleb128 0x3a
 2694 00d6 0B       		.uleb128 0xb
 2695 00d7 3B       		.uleb128 0x3b
 2696 00d8 0B       		.uleb128 0xb
 2697 00d9 27       		.uleb128 0x27
 2698 00da 19       		.uleb128 0x19
 2699 00db 11       		.uleb128 0x11
 2700 00dc 01       		.uleb128 0x1
 2701 00dd 12       		.uleb128 0x12
 2702 00de 06       		.uleb128 0x6
 2703 00df 40       		.uleb128 0x40
 2704 00e0 18       		.uleb128 0x18
 2705 00e1 9642     		.uleb128 0x2116
 2706 00e3 19       		.uleb128 0x19
 2707 00e4 00       		.byte	0
 2708 00e5 00       		.byte	0
 2709 00e6 10       		.uleb128 0x10
 2710 00e7 2E       		.uleb128 0x2e
 2711 00e8 00       		.byte	0
 2712 00e9 3F       		.uleb128 0x3f
 2713 00ea 19       		.uleb128 0x19
 2714 00eb 03       		.uleb128 0x3
 2715 00ec 0E       		.uleb128 0xe
 2716 00ed 3A       		.uleb128 0x3a
 2717 00ee 0B       		.uleb128 0xb
 2718 00ef 3B       		.uleb128 0x3b
 2719 00f0 0B       		.uleb128 0xb
 2720 00f1 49       		.uleb128 0x49
 2721 00f2 13       		.uleb128 0x13
 2722 00f3 11       		.uleb128 0x11
 2723 00f4 01       		.uleb128 0x1
 2724 00f5 12       		.uleb128 0x12
 2725 00f6 06       		.uleb128 0x6
 2726 00f7 40       		.uleb128 0x40
 2727 00f8 18       		.uleb128 0x18
 2728 00f9 9642     		.uleb128 0x2116
 2729 00fb 19       		.uleb128 0x19
 2730 00fc 00       		.byte	0
 2731 00fd 00       		.byte	0
 2732 00fe 11       		.uleb128 0x11
 2733 00ff 2E       		.uleb128 0x2e
 2734 0100 01       		.byte	0x1
 2735 0101 3F       		.uleb128 0x3f
 2736 0102 19       		.uleb128 0x19
 2737 0103 03       		.uleb128 0x3
 2738 0104 0E       		.uleb128 0xe
 2739 0105 3A       		.uleb128 0x3a
 2740 0106 0B       		.uleb128 0xb
 2741 0107 3B       		.uleb128 0x3b
 2742 0108 0B       		.uleb128 0xb
 2743 0109 27       		.uleb128 0x27
 2744 010a 19       		.uleb128 0x19
 2745 010b 49       		.uleb128 0x49
 2746 010c 13       		.uleb128 0x13
 2747 010d 11       		.uleb128 0x11
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 58


 2748 010e 01       		.uleb128 0x1
 2749 010f 12       		.uleb128 0x12
 2750 0110 06       		.uleb128 0x6
 2751 0111 40       		.uleb128 0x40
 2752 0112 18       		.uleb128 0x18
 2753 0113 9642     		.uleb128 0x2116
 2754 0115 19       		.uleb128 0x19
 2755 0116 01       		.uleb128 0x1
 2756 0117 13       		.uleb128 0x13
 2757 0118 00       		.byte	0
 2758 0119 00       		.byte	0
 2759 011a 12       		.uleb128 0x12
 2760 011b 05       		.uleb128 0x5
 2761 011c 00       		.byte	0
 2762 011d 03       		.uleb128 0x3
 2763 011e 0E       		.uleb128 0xe
 2764 011f 3A       		.uleb128 0x3a
 2765 0120 0B       		.uleb128 0xb
 2766 0121 3B       		.uleb128 0x3b
 2767 0122 0B       		.uleb128 0xb
 2768 0123 49       		.uleb128 0x49
 2769 0124 13       		.uleb128 0x13
 2770 0125 02       		.uleb128 0x2
 2771 0126 18       		.uleb128 0x18
 2772 0127 00       		.byte	0
 2773 0128 00       		.byte	0
 2774 0129 13       		.uleb128 0x13
 2775 012a 34       		.uleb128 0x34
 2776 012b 00       		.byte	0
 2777 012c 03       		.uleb128 0x3
 2778 012d 08       		.uleb128 0x8
 2779 012e 3A       		.uleb128 0x3a
 2780 012f 0B       		.uleb128 0xb
 2781 0130 3B       		.uleb128 0x3b
 2782 0131 0B       		.uleb128 0xb
 2783 0132 49       		.uleb128 0x49
 2784 0133 13       		.uleb128 0x13
 2785 0134 02       		.uleb128 0x2
 2786 0135 18       		.uleb128 0x18
 2787 0136 00       		.byte	0
 2788 0137 00       		.byte	0
 2789 0138 14       		.uleb128 0x14
 2790 0139 2E       		.uleb128 0x2e
 2791 013a 00       		.byte	0
 2792 013b 3F       		.uleb128 0x3f
 2793 013c 19       		.uleb128 0x19
 2794 013d 03       		.uleb128 0x3
 2795 013e 0E       		.uleb128 0xe
 2796 013f 3A       		.uleb128 0x3a
 2797 0140 0B       		.uleb128 0xb
 2798 0141 3B       		.uleb128 0x3b
 2799 0142 0B       		.uleb128 0xb
 2800 0143 11       		.uleb128 0x11
 2801 0144 01       		.uleb128 0x1
 2802 0145 12       		.uleb128 0x12
 2803 0146 06       		.uleb128 0x6
 2804 0147 40       		.uleb128 0x40
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 59


 2805 0148 18       		.uleb128 0x18
 2806 0149 9742     		.uleb128 0x2117
 2807 014b 19       		.uleb128 0x19
 2808 014c 00       		.byte	0
 2809 014d 00       		.byte	0
 2810 014e 15       		.uleb128 0x15
 2811 014f 2E       		.uleb128 0x2e
 2812 0150 01       		.byte	0x1
 2813 0151 3F       		.uleb128 0x3f
 2814 0152 19       		.uleb128 0x19
 2815 0153 03       		.uleb128 0x3
 2816 0154 0E       		.uleb128 0xe
 2817 0155 3A       		.uleb128 0x3a
 2818 0156 0B       		.uleb128 0xb
 2819 0157 3B       		.uleb128 0x3b
 2820 0158 05       		.uleb128 0x5
 2821 0159 49       		.uleb128 0x49
 2822 015a 13       		.uleb128 0x13
 2823 015b 11       		.uleb128 0x11
 2824 015c 01       		.uleb128 0x1
 2825 015d 12       		.uleb128 0x12
 2826 015e 06       		.uleb128 0x6
 2827 015f 40       		.uleb128 0x40
 2828 0160 18       		.uleb128 0x18
 2829 0161 9642     		.uleb128 0x2116
 2830 0163 19       		.uleb128 0x19
 2831 0164 01       		.uleb128 0x1
 2832 0165 13       		.uleb128 0x13
 2833 0166 00       		.byte	0
 2834 0167 00       		.byte	0
 2835 0168 16       		.uleb128 0x16
 2836 0169 34       		.uleb128 0x34
 2837 016a 00       		.byte	0
 2838 016b 03       		.uleb128 0x3
 2839 016c 0E       		.uleb128 0xe
 2840 016d 3A       		.uleb128 0x3a
 2841 016e 0B       		.uleb128 0xb
 2842 016f 3B       		.uleb128 0x3b
 2843 0170 05       		.uleb128 0x5
 2844 0171 49       		.uleb128 0x49
 2845 0172 13       		.uleb128 0x13
 2846 0173 02       		.uleb128 0x2
 2847 0174 18       		.uleb128 0x18
 2848 0175 00       		.byte	0
 2849 0176 00       		.byte	0
 2850 0177 17       		.uleb128 0x17
 2851 0178 0B       		.uleb128 0xb
 2852 0179 01       		.byte	0x1
 2853 017a 11       		.uleb128 0x11
 2854 017b 01       		.uleb128 0x1
 2855 017c 12       		.uleb128 0x12
 2856 017d 06       		.uleb128 0x6
 2857 017e 01       		.uleb128 0x1
 2858 017f 13       		.uleb128 0x13
 2859 0180 00       		.byte	0
 2860 0181 00       		.byte	0
 2861 0182 18       		.uleb128 0x18
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 60


 2862 0183 2E       		.uleb128 0x2e
 2863 0184 01       		.byte	0x1
 2864 0185 3F       		.uleb128 0x3f
 2865 0186 19       		.uleb128 0x19
 2866 0187 03       		.uleb128 0x3
 2867 0188 0E       		.uleb128 0xe
 2868 0189 3A       		.uleb128 0x3a
 2869 018a 0B       		.uleb128 0xb
 2870 018b 3B       		.uleb128 0x3b
 2871 018c 05       		.uleb128 0x5
 2872 018d 49       		.uleb128 0x49
 2873 018e 13       		.uleb128 0x13
 2874 018f 3C       		.uleb128 0x3c
 2875 0190 19       		.uleb128 0x19
 2876 0191 00       		.byte	0
 2877 0192 00       		.byte	0
 2878 0193 19       		.uleb128 0x19
 2879 0194 18       		.uleb128 0x18
 2880 0195 00       		.byte	0
 2881 0196 00       		.byte	0
 2882 0197 00       		.byte	0
 2883 0198 1A       		.uleb128 0x1a
 2884 0199 2E       		.uleb128 0x2e
 2885 019a 01       		.byte	0x1
 2886 019b 3F       		.uleb128 0x3f
 2887 019c 19       		.uleb128 0x19
 2888 019d 03       		.uleb128 0x3
 2889 019e 0E       		.uleb128 0xe
 2890 019f 3A       		.uleb128 0x3a
 2891 01a0 0B       		.uleb128 0xb
 2892 01a1 3B       		.uleb128 0x3b
 2893 01a2 05       		.uleb128 0x5
 2894 01a3 27       		.uleb128 0x27
 2895 01a4 19       		.uleb128 0x19
 2896 01a5 49       		.uleb128 0x49
 2897 01a6 13       		.uleb128 0x13
 2898 01a7 11       		.uleb128 0x11
 2899 01a8 01       		.uleb128 0x1
 2900 01a9 12       		.uleb128 0x12
 2901 01aa 06       		.uleb128 0x6
 2902 01ab 40       		.uleb128 0x40
 2903 01ac 18       		.uleb128 0x18
 2904 01ad 9742     		.uleb128 0x2117
 2905 01af 19       		.uleb128 0x19
 2906 01b0 01       		.uleb128 0x1
 2907 01b1 13       		.uleb128 0x13
 2908 01b2 00       		.byte	0
 2909 01b3 00       		.byte	0
 2910 01b4 1B       		.uleb128 0x1b
 2911 01b5 05       		.uleb128 0x5
 2912 01b6 00       		.byte	0
 2913 01b7 03       		.uleb128 0x3
 2914 01b8 0E       		.uleb128 0xe
 2915 01b9 3A       		.uleb128 0x3a
 2916 01ba 0B       		.uleb128 0xb
 2917 01bb 3B       		.uleb128 0x3b
 2918 01bc 05       		.uleb128 0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 61


 2919 01bd 49       		.uleb128 0x49
 2920 01be 13       		.uleb128 0x13
 2921 01bf 02       		.uleb128 0x2
 2922 01c0 18       		.uleb128 0x18
 2923 01c1 00       		.byte	0
 2924 01c2 00       		.byte	0
 2925 01c3 1C       		.uleb128 0x1c
 2926 01c4 34       		.uleb128 0x34
 2927 01c5 00       		.byte	0
 2928 01c6 03       		.uleb128 0x3
 2929 01c7 08       		.uleb128 0x8
 2930 01c8 3A       		.uleb128 0x3a
 2931 01c9 0B       		.uleb128 0xb
 2932 01ca 3B       		.uleb128 0x3b
 2933 01cb 05       		.uleb128 0x5
 2934 01cc 49       		.uleb128 0x49
 2935 01cd 13       		.uleb128 0x13
 2936 01ce 02       		.uleb128 0x2
 2937 01cf 18       		.uleb128 0x18
 2938 01d0 00       		.byte	0
 2939 01d1 00       		.byte	0
 2940 01d2 1D       		.uleb128 0x1d
 2941 01d3 0F       		.uleb128 0xf
 2942 01d4 00       		.byte	0
 2943 01d5 0B       		.uleb128 0xb
 2944 01d6 0B       		.uleb128 0xb
 2945 01d7 49       		.uleb128 0x49
 2946 01d8 13       		.uleb128 0x13
 2947 01d9 00       		.byte	0
 2948 01da 00       		.byte	0
 2949 01db 1E       		.uleb128 0x1e
 2950 01dc 2E       		.uleb128 0x2e
 2951 01dd 00       		.byte	0
 2952 01de 3F       		.uleb128 0x3f
 2953 01df 19       		.uleb128 0x19
 2954 01e0 03       		.uleb128 0x3
 2955 01e1 0E       		.uleb128 0xe
 2956 01e2 3A       		.uleb128 0x3a
 2957 01e3 0B       		.uleb128 0xb
 2958 01e4 3B       		.uleb128 0x3b
 2959 01e5 05       		.uleb128 0x5
 2960 01e6 11       		.uleb128 0x11
 2961 01e7 01       		.uleb128 0x1
 2962 01e8 12       		.uleb128 0x12
 2963 01e9 06       		.uleb128 0x6
 2964 01ea 40       		.uleb128 0x40
 2965 01eb 18       		.uleb128 0x18
 2966 01ec 9642     		.uleb128 0x2116
 2967 01ee 19       		.uleb128 0x19
 2968 01ef 00       		.byte	0
 2969 01f0 00       		.byte	0
 2970 01f1 1F       		.uleb128 0x1f
 2971 01f2 34       		.uleb128 0x34
 2972 01f3 00       		.byte	0
 2973 01f4 03       		.uleb128 0x3
 2974 01f5 0E       		.uleb128 0xe
 2975 01f6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 62


 2976 01f7 0B       		.uleb128 0xb
 2977 01f8 3B       		.uleb128 0x3b
 2978 01f9 05       		.uleb128 0x5
 2979 01fa 49       		.uleb128 0x49
 2980 01fb 13       		.uleb128 0x13
 2981 01fc 3F       		.uleb128 0x3f
 2982 01fd 19       		.uleb128 0x19
 2983 01fe 3C       		.uleb128 0x3c
 2984 01ff 19       		.uleb128 0x19
 2985 0200 00       		.byte	0
 2986 0201 00       		.byte	0
 2987 0202 20       		.uleb128 0x20
 2988 0203 35       		.uleb128 0x35
 2989 0204 00       		.byte	0
 2990 0205 49       		.uleb128 0x49
 2991 0206 13       		.uleb128 0x13
 2992 0207 00       		.byte	0
 2993 0208 00       		.byte	0
 2994 0209 21       		.uleb128 0x21
 2995 020a 34       		.uleb128 0x34
 2996 020b 00       		.byte	0
 2997 020c 03       		.uleb128 0x3
 2998 020d 08       		.uleb128 0x8
 2999 020e 3A       		.uleb128 0x3a
 3000 020f 0B       		.uleb128 0xb
 3001 0210 3B       		.uleb128 0x3b
 3002 0211 0B       		.uleb128 0xb
 3003 0212 49       		.uleb128 0x49
 3004 0213 13       		.uleb128 0x13
 3005 0214 3F       		.uleb128 0x3f
 3006 0215 19       		.uleb128 0x19
 3007 0216 02       		.uleb128 0x2
 3008 0217 18       		.uleb128 0x18
 3009 0218 00       		.byte	0
 3010 0219 00       		.byte	0
 3011 021a 22       		.uleb128 0x22
 3012 021b 34       		.uleb128 0x34
 3013 021c 00       		.byte	0
 3014 021d 03       		.uleb128 0x3
 3015 021e 0E       		.uleb128 0xe
 3016 021f 3A       		.uleb128 0x3a
 3017 0220 0B       		.uleb128 0xb
 3018 0221 3B       		.uleb128 0x3b
 3019 0222 0B       		.uleb128 0xb
 3020 0223 49       		.uleb128 0x49
 3021 0224 13       		.uleb128 0x13
 3022 0225 3F       		.uleb128 0x3f
 3023 0226 19       		.uleb128 0x19
 3024 0227 02       		.uleb128 0x2
 3025 0228 18       		.uleb128 0x18
 3026 0229 00       		.byte	0
 3027 022a 00       		.byte	0
 3028 022b 23       		.uleb128 0x23
 3029 022c 01       		.uleb128 0x1
 3030 022d 01       		.byte	0x1
 3031 022e 49       		.uleb128 0x49
 3032 022f 13       		.uleb128 0x13
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 63


 3033 0230 01       		.uleb128 0x1
 3034 0231 13       		.uleb128 0x13
 3035 0232 00       		.byte	0
 3036 0233 00       		.byte	0
 3037 0234 24       		.uleb128 0x24
 3038 0235 21       		.uleb128 0x21
 3039 0236 00       		.byte	0
 3040 0237 49       		.uleb128 0x49
 3041 0238 13       		.uleb128 0x13
 3042 0239 2F       		.uleb128 0x2f
 3043 023a 0B       		.uleb128 0xb
 3044 023b 00       		.byte	0
 3045 023c 00       		.byte	0
 3046 023d 25       		.uleb128 0x25
 3047 023e 34       		.uleb128 0x34
 3048 023f 00       		.byte	0
 3049 0240 03       		.uleb128 0x3
 3050 0241 08       		.uleb128 0x8
 3051 0242 3A       		.uleb128 0x3a
 3052 0243 0B       		.uleb128 0xb
 3053 0244 3B       		.uleb128 0x3b
 3054 0245 0B       		.uleb128 0xb
 3055 0246 49       		.uleb128 0x49
 3056 0247 13       		.uleb128 0x13
 3057 0248 3F       		.uleb128 0x3f
 3058 0249 19       		.uleb128 0x19
 3059 024a 3C       		.uleb128 0x3c
 3060 024b 19       		.uleb128 0x19
 3061 024c 00       		.byte	0
 3062 024d 00       		.byte	0
 3063 024e 26       		.uleb128 0x26
 3064 024f 34       		.uleb128 0x34
 3065 0250 00       		.byte	0
 3066 0251 03       		.uleb128 0x3
 3067 0252 0E       		.uleb128 0xe
 3068 0253 3A       		.uleb128 0x3a
 3069 0254 0B       		.uleb128 0xb
 3070 0255 3B       		.uleb128 0x3b
 3071 0256 0B       		.uleb128 0xb
 3072 0257 49       		.uleb128 0x49
 3073 0258 13       		.uleb128 0x13
 3074 0259 3F       		.uleb128 0x3f
 3075 025a 19       		.uleb128 0x19
 3076 025b 3C       		.uleb128 0x3c
 3077 025c 19       		.uleb128 0x19
 3078 025d 00       		.byte	0
 3079 025e 00       		.byte	0
 3080 025f 27       		.uleb128 0x27
 3081 0260 34       		.uleb128 0x34
 3082 0261 00       		.byte	0
 3083 0262 03       		.uleb128 0x3
 3084 0263 0E       		.uleb128 0xe
 3085 0264 3A       		.uleb128 0x3a
 3086 0265 0B       		.uleb128 0xb
 3087 0266 3B       		.uleb128 0x3b
 3088 0267 05       		.uleb128 0x5
 3089 0268 49       		.uleb128 0x49
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 64


 3090 0269 13       		.uleb128 0x13
 3091 026a 3F       		.uleb128 0x3f
 3092 026b 19       		.uleb128 0x19
 3093 026c 02       		.uleb128 0x2
 3094 026d 18       		.uleb128 0x18
 3095 026e 00       		.byte	0
 3096 026f 00       		.byte	0
 3097 0270 00       		.byte	0
 3098              		.section	.debug_aranges,"",%progbits
 3099 0000 74000000 		.4byte	0x74
 3100 0004 0200     		.2byte	0x2
 3101 0006 00000000 		.4byte	.Ldebug_info0
 3102 000a 04       		.byte	0x4
 3103 000b 00       		.byte	0
 3104 000c 0000     		.2byte	0
 3105 000e 0000     		.2byte	0
 3106 0010 00000000 		.4byte	.LFB64
 3107 0014 F4000000 		.4byte	.LFE64-.LFB64
 3108 0018 00000000 		.4byte	.LFB65
 3109 001c 18000000 		.4byte	.LFE65-.LFB65
 3110 0020 00000000 		.4byte	.LFB66
 3111 0024 18000000 		.4byte	.LFE66-.LFB66
 3112 0028 00000000 		.4byte	.LFB67
 3113 002c 18000000 		.4byte	.LFE67-.LFB67
 3114 0030 00000000 		.4byte	.LFB68
 3115 0034 18000000 		.4byte	.LFE68-.LFB68
 3116 0038 00000000 		.4byte	.LFB69
 3117 003c 38000000 		.4byte	.LFE69-.LFB69
 3118 0040 00000000 		.4byte	.LFB70
 3119 0044 BC000000 		.4byte	.LFE70-.LFB70
 3120 0048 00000000 		.4byte	.LFB71
 3121 004c 54000000 		.4byte	.LFE71-.LFB71
 3122 0050 00000000 		.4byte	.LFB72
 3123 0054 34000000 		.4byte	.LFE72-.LFB72
 3124 0058 00000000 		.4byte	.LFB73
 3125 005c A0020000 		.4byte	.LFE73-.LFB73
 3126 0060 00000000 		.4byte	.LFB74
 3127 0064 9E000000 		.4byte	.LFE74-.LFB74
 3128 0068 00000000 		.4byte	.LFB75
 3129 006c B0000000 		.4byte	.LFE75-.LFB75
 3130 0070 00000000 		.4byte	0
 3131 0074 00000000 		.4byte	0
 3132              		.section	.debug_ranges,"",%progbits
 3133              	.Ldebug_ranges0:
 3134 0000 00000000 		.4byte	.LFB64
 3135 0004 F4000000 		.4byte	.LFE64
 3136 0008 00000000 		.4byte	.LFB65
 3137 000c 18000000 		.4byte	.LFE65
 3138 0010 00000000 		.4byte	.LFB66
 3139 0014 18000000 		.4byte	.LFE66
 3140 0018 00000000 		.4byte	.LFB67
 3141 001c 18000000 		.4byte	.LFE67
 3142 0020 00000000 		.4byte	.LFB68
 3143 0024 18000000 		.4byte	.LFE68
 3144 0028 00000000 		.4byte	.LFB69
 3145 002c 38000000 		.4byte	.LFE69
 3146 0030 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 65


 3147 0034 BC000000 		.4byte	.LFE70
 3148 0038 00000000 		.4byte	.LFB71
 3149 003c 54000000 		.4byte	.LFE71
 3150 0040 00000000 		.4byte	.LFB72
 3151 0044 34000000 		.4byte	.LFE72
 3152 0048 00000000 		.4byte	.LFB73
 3153 004c A0020000 		.4byte	.LFE73
 3154 0050 00000000 		.4byte	.LFB74
 3155 0054 9E000000 		.4byte	.LFE74
 3156 0058 00000000 		.4byte	.LFB75
 3157 005c B0000000 		.4byte	.LFE75
 3158 0060 00000000 		.4byte	0
 3159 0064 00000000 		.4byte	0
 3160              		.section	.debug_line,"",%progbits
 3161              	.Ldebug_line0:
 3162 0000 4D030000 		.section	.debug_str,"MS",%progbits,1
 3162      02007001 
 3162      00000201 
 3162      FB0E0D00 
 3162      01010101 
 3163              	.LASF47:
 3164 0000 64697265 		.ascii	"direction\000"
 3164      6374696F 
 3164      6E00
 3165              	.LASF64:
 3166 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3166      61726441 
 3166      66746572 
 3166      5475726E 
 3166      00
 3167              	.LASF50:
 3168 001b 496E7374 		.ascii	"InstructionDirection\000"
 3168      72756374 
 3168      696F6E44 
 3168      69726563 
 3168      74696F6E 
 3169              	.LASF124:
 3170 0030 6D61696E 		.ascii	"main.c\000"
 3170      2E6300
 3171              	.LASF75:
 3172 0037 626C6F63 		.ascii	"blocksize\000"
 3172      6B73697A 
 3172      6500
 3173              	.LASF112:
 3174 0041 62756666 		.ascii	"buffer\000"
 3174      657200
 3175              	.LASF8:
 3176 0048 756E7369 		.ascii	"unsigned int\000"
 3176      676E6564 
 3176      20696E74 
 3176      00
 3177              	.LASF12:
 3178 0055 5F5F696E 		.ascii	"__int32_t\000"
 3178      7433325F 
 3178      7400
 3179              	.LASF18:
 3180 005f 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 66


 3180      3600
 3181              	.LASF103:
 3182 0065 73797374 		.ascii	"system_state\000"
 3182      656D5F73 
 3182      74617465 
 3182      00
 3183              	.LASF123:
 3184 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3184      43313120 
 3184      352E342E 
 3184      31203230 
 3184      31363036 
 3185 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3185      20726576 
 3185      6973696F 
 3185      6E203233 
 3185      37373135 
 3186 00d8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3186      66756E63 
 3186      74696F6E 
 3186      2D736563 
 3186      74696F6E 
 3187              	.LASF69:
 3188 0100 53365F44 		.ascii	"S6_DETECTED\000"
 3188      45544543 
 3188      54454400 
 3189              	.LASF111:
 3190 010c 746F7461 		.ascii	"totalDistance\000"
 3190      6C446973 
 3190      74616E63 
 3190      6500
 3191              	.LASF34:
 3192 011a 67325F78 		.ascii	"g2_xpos\000"
 3192      706F7300 
 3193              	.LASF81:
 3194 0122 6E756D53 		.ascii	"numSteps\000"
 3194      74657073 
 3194      00
 3195              	.LASF98:
 3196 012b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3196      5F72665F 
 3196      7472616E 
 3196      736D6973 
 3196      73696F6E 
 3197              	.LASF83:
 3198 0147 52657365 		.ascii	"ResetSensorFlags\000"
 3198      7453656E 
 3198      736F7246 
 3198      6C616773 
 3198      00
 3199              	.LASF37:
 3200 0158 67325F64 		.ascii	"g2_direction\000"
 3200      69726563 
 3200      74696F6E 
 3200      00
 3201              	.LASF113:
 3202 0165 71756164 		.ascii	"quadDec2Count\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 67


 3202      44656332 
 3202      436F756E 
 3202      7400
 3203              	.LASF125:
 3204 0173 433A5C55 		.ascii	"C:\\Users\\ianku\\OneDrive\\Documents\\301-Robot\\p"
 3204      73657273 
 3204      5C69616E 
 3204      6B755C4F 
 3204      6E654472 
 3205 01a0 736F6320 		.ascii	"soc student pack\\psoc_code_base\\CS301_Class.cydsn"
 3205      73747564 
 3205      656E7420 
 3205      7061636B 
 3205      5C70736F 
 3206 01d1 00       		.ascii	"\000"
 3207              	.LASF102:
 3208 01d2 75736242 		.ascii	"usbBuffer\000"
 3208      75666665 
 3208      7200
 3209              	.LASF80:
 3210 01dc 636F756E 		.ascii	"count\000"
 3210      7400
 3211              	.LASF22:
 3212 01e2 696E6465 		.ascii	"index\000"
 3212      7800
 3213              	.LASF7:
 3214 01e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 3214      206C6F6E 
 3214      6720756E 
 3214      7369676E 
 3214      65642069 
 3215              	.LASF46:
 3216 01ff 496E7374 		.ascii	"Instruction\000"
 3216      72756374 
 3216      696F6E00 
 3217              	.LASF95:
 3218 020b 666C6167 		.ascii	"flag_packet\000"
 3218      5F706163 
 3218      6B657400 
 3219              	.LASF84:
 3220 0217 53657452 		.ascii	"SetRobotMovement\000"
 3220      6F626F74 
 3220      4D6F7665 
 3220      6D656E74 
 3220      00
 3221              	.LASF70:
 3222 0228 54494D45 		.ascii	"TIMER_FINISH\000"
 3222      525F4649 
 3222      4E495348 
 3222      00
 3223              	.LASF77:
 3224 0235 4765744E 		.ascii	"GetNextStep\000"
 3224      65787453 
 3224      74657000 
 3225              	.LASF115:
 3226 0241 6B656570 		.ascii	"keepLedOn\000"
 3226      4C65644F 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 68


 3226      6E00
 3227              	.LASF42:
 3228 024b 466F7277 		.ascii	"ForwardUntilTarget\000"
 3228      61726455 
 3228      6E74696C 
 3228      54617267 
 3228      657400
 3229              	.LASF91:
 3230 025e 666C6167 		.ascii	"flag_ts_update\000"
 3230      5F74735F 
 3230      75706461 
 3230      746500
 3231              	.LASF90:
 3232 026d 666C6167 		.ascii	"flag_ts_enc\000"
 3232      5F74735F 
 3232      656E6300 
 3233              	.LASF78:
 3234 0279 71756164 		.ascii	"quadCountToRPM\000"
 3234      436F756E 
 3234      74546F52 
 3234      504D00
 3235              	.LASF122:
 3236 0288 69676E6F 		.ascii	"ignoreSensor\000"
 3236      72655365 
 3236      6E736F72 
 3236      00
 3237              	.LASF43:
 3238 0295 53746F70 		.ascii	"StopAtTarget\000"
 3238      41745461 
 3238      72676574 
 3238      00
 3239              	.LASF63:
 3240 02a2 77616974 		.ascii	"waitForTurn\000"
 3240      466F7254 
 3240      75726E00 
 3241              	.LASF24:
 3242 02ae 726F626F 		.ascii	"robot_ypos\000"
 3242      745F7970 
 3242      6F7300
 3243              	.LASF89:
 3244 02b9 74735F64 		.ascii	"ts_display\000"
 3244      6973706C 
 3244      617900
 3245              	.LASF107:
 3246 02c4 63757272 		.ascii	"currentOrientation\000"
 3246      656E744F 
 3246      7269656E 
 3246      74617469 
 3246      6F6E00
 3247              	.LASF11:
 3248 02d7 63686172 		.ascii	"char\000"
 3248      00
 3249              	.LASF28:
 3250 02dc 67305F73 		.ascii	"g0_speed\000"
 3250      70656564 
 3250      00
 3251              	.LASF82:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 69


 3252 02e5 696E7374 		.ascii	"instructionList\000"
 3252      72756374 
 3252      696F6E4C 
 3252      69737400 
 3253              	.LASF15:
 3254 02f5 75696E74 		.ascii	"uint16\000"
 3254      313600
 3255              	.LASF17:
 3256 02fc 696E7438 		.ascii	"int8\000"
 3256      00
 3257              	.LASF117:
 3258 0301 78426C6F 		.ascii	"xBlocksize\000"
 3258      636B7369 
 3258      7A6500
 3259              	.LASF33:
 3260 030c 67315F64 		.ascii	"g1_direction\000"
 3260      69726563 
 3260      74696F6E 
 3260      00
 3261              	.LASF53:
 3262 0319 4C656674 		.ascii	"Left\000"
 3262      00
 3263              	.LASF73:
 3264 031e 73706565 		.ascii	"speedTimer\000"
 3264      6454696D 
 3264      657200
 3265              	.LASF39:
 3266 0329 77616974 		.ascii	"waitForLeftTurn\000"
 3266      466F724C 
 3266      65667454 
 3266      75726E00 
 3267              	.LASF6:
 3268 0339 6C6F6E67 		.ascii	"long long int\000"
 3268      206C6F6E 
 3268      6720696E 
 3268      7400
 3269              	.LASF30:
 3270 0347 67315F78 		.ascii	"g1_xpos\000"
 3270      706F7300 
 3271              	.LASF108:
 3272 034f 70726576 		.ascii	"previousOrientation\000"
 3272      696F7573 
 3272      4F726965 
 3272      6E746174 
 3272      696F6E00 
 3273              	.LASF41:
 3274 0363 75547572 		.ascii	"uTurn\000"
 3274      6E00
 3275              	.LASF72:
 3276 0369 6E657744 		.ascii	"newDistance\000"
 3276      69737461 
 3276      6E636500 
 3277              	.LASF36:
 3278 0375 67325F73 		.ascii	"g2_speed\000"
 3278      70656564 
 3278      00
 3279              	.LASF27:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 70


 3280 037e 67305F79 		.ascii	"g0_ypos\000"
 3280      706F7300 
 3281              	.LASF104:
 3282 0386 666F6F64 		.ascii	"food_list\000"
 3282      5F6C6973 
 3282      7400
 3283              	.LASF58:
 3284 0390 5475726E 		.ascii	"TurnLeft\000"
 3284      4C656674 
 3284      00
 3285              	.LASF88:
 3286 0399 74735F73 		.ascii	"ts_speed\000"
 3286      70656564 
 3286      00
 3287              	.LASF62:
 3288 03a2 556E6B6E 		.ascii	"Unknown\000"
 3288      6F776E00 
 3289              	.LASF76:
 3290 03aa 64697265 		.ascii	"directionState\000"
 3290      6374696F 
 3290      6E537461 
 3290      746500
 3291              	.LASF16:
 3292 03b9 75696E74 		.ascii	"uint32\000"
 3292      333200
 3293              	.LASF40:
 3294 03c0 77616974 		.ascii	"waitForRightTurn\000"
 3294      466F7252 
 3294      69676874 
 3294      5475726E 
 3294      00
 3295              	.LASF57:
 3296 03d1 5475726E 		.ascii	"TurnRight\000"
 3296      52696768 
 3296      7400
 3297              	.LASF45:
 3298 03db 64617461 		.ascii	"data_main\000"
 3298      5F6D6169 
 3298      6E00
 3299              	.LASF21:
 3300 03e5 72737369 		.ascii	"rssi\000"
 3300      00
 3301              	.LASF29:
 3302 03ea 67305F64 		.ascii	"g0_direction\000"
 3302      69726563 
 3302      74696F6E 
 3302      00
 3303              	.LASF106:
 3304 03f7 70726576 		.ascii	"previousDirection\000"
 3304      696F7573 
 3304      44697265 
 3304      6374696F 
 3304      6E00
 3305              	.LASF9:
 3306 0409 6C6F6E67 		.ascii	"long double\000"
 3306      20646F75 
 3306      626C6500 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 71


 3307              	.LASF92:
 3308 0415 666C6167 		.ascii	"flag_ts_speed\000"
 3308      5F74735F 
 3308      73706565 
 3308      6400
 3309              	.LASF97:
 3310 0423 64617461 		.ascii	"dataready_flag\000"
 3310      72656164 
 3310      795F666C 
 3310      616700
 3311              	.LASF94:
 3312 0432 666C6167 		.ascii	"flag_rx\000"
 3312      5F727800 
 3313              	.LASF118:
 3314 043a 79426C6F 		.ascii	"yBlocksize\000"
 3314      636B7369 
 3314      7A6500
 3315              	.LASF2:
 3316 0445 73686F72 		.ascii	"short int\000"
 3316      7420696E 
 3316      7400
 3317              	.LASF67:
 3318 044f 53345F44 		.ascii	"S4_DETECTED\000"
 3318      45544543 
 3318      54454400 
 3319              	.LASF66:
 3320 045b 53335F44 		.ascii	"S3_DETECTED\000"
 3320      45544543 
 3320      54454400 
 3321              	.LASF4:
 3322 0467 6C6F6E67 		.ascii	"long int\000"
 3322      20696E74 
 3322      00
 3323              	.LASF85:
 3324 0470 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3324      52784275 
 3324      66666572 
 3324      00
 3325              	.LASF87:
 3326 047d 74735F75 		.ascii	"ts_update\000"
 3326      70646174 
 3326      6500
 3327              	.LASF56:
 3328 0487 466F7277 		.ascii	"Forward\000"
 3328      61726400 
 3329              	.LASF110:
 3330 048f 746F7461 		.ascii	"totalMilliseconds\000"
 3330      6C4D696C 
 3330      6C697365 
 3330      636F6E64 
 3330      7300
 3331              	.LASF35:
 3332 04a1 67325F79 		.ascii	"g2_ypos\000"
 3332      706F7300 
 3333              	.LASF51:
 3334 04a9 4F726965 		.ascii	"OrientationState\000"
 3334      6E746174 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 72


 3334      696F6E53 
 3334      74617465 
 3334      00
 3335              	.LASF52:
 3336 04ba 446F776E 		.ascii	"Down\000"
 3336      00
 3337              	.LASF54:
 3338 04bf 52696768 		.ascii	"Right\000"
 3338      7400
 3339              	.LASF31:
 3340 04c5 67315F79 		.ascii	"g1_ypos\000"
 3340      706F7300 
 3341              	.LASF105:
 3342 04cd 63757272 		.ascii	"currentDirection\000"
 3342      656E7444 
 3342      69726563 
 3342      74696F6E 
 3342      00
 3343              	.LASF10:
 3344 04de 73697A65 		.ascii	"sizetype\000"
 3344      74797065 
 3344      00
 3345              	.LASF5:
 3346 04e7 6C6F6E67 		.ascii	"long unsigned int\000"
 3346      20756E73 
 3346      69676E65 
 3346      6420696E 
 3346      7400
 3347              	.LASF116:
 3348 04f9 73746F70 		.ascii	"stopBuffer\000"
 3348      42756666 
 3348      657200
 3349              	.LASF19:
 3350 0504 666C6F61 		.ascii	"float\000"
 3350      7400
 3351              	.LASF13:
 3352 050a 696E7433 		.ascii	"int32_t\000"
 3352      325F7400 
 3353              	.LASF23:
 3354 0512 726F626F 		.ascii	"robot_xpos\000"
 3354      745F7870 
 3354      6F7300
 3355              	.LASF101:
 3356 051d 656E7472 		.ascii	"entry\000"
 3356      7900
 3357              	.LASF55:
 3358 0523 526F626F 		.ascii	"RobotMovement\000"
 3358      744D6F76 
 3358      656D656E 
 3358      7400
 3359              	.LASF1:
 3360 0531 756E7369 		.ascii	"unsigned char\000"
 3360      676E6564 
 3360      20636861 
 3360      7200
 3361              	.LASF121:
 3362 053f 73746F70 		.ascii	"stoppedAfterTurn\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 73


 3362      70656441 
 3362      66746572 
 3362      5475726E 
 3362      00
 3363              	.LASF100:
 3364 0550 6C696E65 		.ascii	"line\000"
 3364      00
 3365              	.LASF60:
 3366 0555 41646A75 		.ascii	"AdjustToTheRight\000"
 3366      7374546F 
 3366      54686552 
 3366      69676874 
 3366      00
 3367              	.LASF61:
 3368 0566 53746F70 		.ascii	"Stop\000"
 3368      00
 3369              	.LASF86:
 3370 056b 74735F65 		.ascii	"ts_enc\000"
 3370      6E6300
 3371              	.LASF93:
 3372 0572 666C6167 		.ascii	"flag_ts_display\000"
 3372      5F74735F 
 3372      64697370 
 3372      6C617900 
 3373              	.LASF44:
 3374 0582 536B6970 		.ascii	"Skip\000"
 3374      00
 3375              	.LASF99:
 3376 0587 64697370 		.ascii	"displaystring\000"
 3376      6C617973 
 3376      7472696E 
 3376      6700
 3377              	.LASF38:
 3378 0595 476F466F 		.ascii	"GoForward\000"
 3378      72776172 
 3378      6400
 3379              	.LASF68:
 3380 059f 53355F44 		.ascii	"S5_DETECTED\000"
 3380      45544543 
 3380      54454400 
 3381              	.LASF0:
 3382 05ab 7369676E 		.ascii	"signed char\000"
 3382      65642063 
 3382      68617200 
 3383              	.LASF119:
 3384 05b7 63757272 		.ascii	"currentRow\000"
 3384      656E7452 
 3384      6F7700
 3385              	.LASF3:
 3386 05c2 73686F72 		.ascii	"short unsigned int\000"
 3386      7420756E 
 3386      7369676E 
 3386      65642069 
 3386      6E7400
 3387              	.LASF25:
 3388 05d5 726F626F 		.ascii	"robot_orientation\000"
 3388      745F6F72 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 74


 3388      69656E74 
 3388      6174696F 
 3388      6E00
 3389              	.LASF71:
 3390 05e7 6D61696E 		.ascii	"main\000"
 3390      00
 3391              	.LASF79:
 3392 05ec 6765744E 		.ascii	"getNextInstruction\000"
 3392      65787449 
 3392      6E737472 
 3392      75637469 
 3392      6F6E00
 3393              	.LASF109:
 3394 05ff 63757272 		.ascii	"currentInstruction\000"
 3394      656E7449 
 3394      6E737472 
 3394      75637469 
 3394      6F6E00
 3395              	.LASF59:
 3396 0612 41646A75 		.ascii	"AdjustToTheLeft\000"
 3396      7374546F 
 3396      5468654C 
 3396      65667400 
 3397              	.LASF65:
 3398 0622 4261636B 		.ascii	"Backward\000"
 3398      77617264 
 3398      00
 3399              	.LASF14:
 3400 062b 75696E74 		.ascii	"uint8\000"
 3400      3800
 3401              	.LASF20:
 3402 0631 646F7562 		.ascii	"double\000"
 3402      6C6500
 3403              	.LASF74:
 3404 0638 43686563 		.ascii	"CheckSensorDirection\000"
 3404      6B53656E 
 3404      736F7244 
 3404      69726563 
 3404      74696F6E 
 3405              	.LASF120:
 3406 064d 63757272 		.ascii	"currentCol\000"
 3406      656E7443 
 3406      6F6C00
 3407              	.LASF26:
 3408 0658 67305F78 		.ascii	"g0_xpos\000"
 3408      706F7300 
 3409              	.LASF114:
 3410 0660 74696D65 		.ascii	"timerInt\000"
 3410      72496E74 
 3410      00
 3411              	.LASF96:
 3412 0669 666C6167 		.ascii	"flag_KB_string\000"
 3412      5F4B425F 
 3412      73747269 
 3412      6E6700
 3413              	.LASF32:
 3414 0678 67315F73 		.ascii	"g1_speed\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cceKUbK0.s 			page 75


 3414      70656564 
 3414      00
 3415              	.LASF48:
 3416 0681 69676E6F 		.ascii	"ignoreL\000"
 3416      72654C00 
 3417              	.LASF49:
 3418 0689 69676E6F 		.ascii	"ignoreR\000"
 3418      72655200 
 3419              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
