ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 03       		.byte	3
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.comm	s3,1,1
 124              		.comm	s4,1,1
 125              		.comm	s5,1,1
 126              		.global	s6
 127              		.bss
 128              		.type	s6, %object
 129              		.size	s6, 1
 130              	s6:
 131 0013 00       		.space	1
 132              		.global	totalMilliseconds
 133              		.align	2
 134              		.type	totalMilliseconds, %object
 135              		.size	totalMilliseconds, 4
 136              	totalMilliseconds:
 137 0014 00000000 		.space	4
 138              		.global	totalDistance
 139              		.align	2
 140              		.type	totalDistance, %object
 141              		.size	totalDistance, 4
 142              	totalDistance:
 143 0018 00000000 		.space	4
 144              		.comm	buffer,69,4
 145              		.global	quadDec2Count
 146              		.align	2
 147              		.type	quadDec2Count, %object
 148              		.size	quadDec2Count, 4
 149              	quadDec2Count:
 150 001c 00000000 		.space	4
 151              		.global	timerInt
 152              		.align	2
 153              		.type	timerInt, %object
 154              		.size	timerInt, 4
 155              	timerInt:
 156 0020 00000000 		.space	4
 157              		.global	keepLedOn
 158              		.align	2
 159              		.type	keepLedOn, %object
 160              		.size	keepLedOn, 4
 161              	keepLedOn:
 162 0024 00000000 		.space	4
 163              		.global	stopBuffer
 164              		.align	2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 4


 165              		.type	stopBuffer, %object
 166              		.size	stopBuffer, 4
 167              	stopBuffer:
 168 0028 00000000 		.space	4
 169              		.global	__aeabi_i2d
 170              		.global	__aeabi_dmul
 171              		.global	__aeabi_ddiv
 172              		.global	__aeabi_d2f
 173              		.global	__aeabi_fadd
 174              		.section	.text.speedTimer,"ax",%progbits
 175              		.align	2
 176              		.global	speedTimer
 177              		.thumb
 178              		.thumb_func
 179              		.type	speedTimer, %function
 180              	speedTimer:
 181              	.LFB64:
 182              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 5


  40:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  41:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  42:main.c        **** enum OrientationState currentOrientation, previousOrientation = Right;
  43:main.c        **** Instruction currentInstruction;
  44:main.c        **** int numSteps;
  45:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  46:main.c        **** Instruction * instructionList;
  47:main.c        **** // ----------------------------------------
  48:main.c        **** uint8 s3, s4, s5, s6 = 0;
  49:main.c        **** //* ========================================
  50:main.c        **** // Calculating Distance
  51:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  52:main.c        **** 
  53:main.c        **** uint32 totalMilliseconds = 0;
  54:main.c        **** float totalDistance = 0; // in mm
  55:main.c        **** //* ========================================
  56:main.c        **** char buffer[69];
  57:main.c        **** int quadDec2Count = 0;
  58:main.c        **** int timerInt = 0;
  59:main.c        **** int keepLedOn = 0;
  60:main.c        **** uint32 stopBuffer = 0;
  61:main.c        **** 
  62:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  63:main.c        **** 
  64:main.c        **** CY_ISR (speedTimer) {
 183              		.loc 1 64 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 90B5     		push	{r4, r7, lr}
 188              		.cfi_def_cfa_offset 12
 189              		.cfi_offset 4, -12
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 83B0     		sub	sp, sp, #12
 193              		.cfi_def_cfa_offset 24
 194 0004 00AF     		add	r7, sp, #0
 195              		.cfi_def_cfa_register 7
  65:main.c        ****     timerInt = 1;
 196              		.loc 1 65 0
 197 0006 364B     		ldr	r3, .L4+16
 198 0008 0122     		movs	r2, #1
 199 000a 1A60     		str	r2, [r3]
  66:main.c        ****     //quadDec_M1 used for turning macros
  67:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 200              		.loc 1 67 0
 201 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 202 0010 0346     		mov	r3, r0
 203 0012 1A46     		mov	r2, r3
 204 0014 334B     		ldr	r3, .L4+20
 205 0016 1A60     		str	r2, [r3]
  68:main.c        ****     
  69:main.c        ****     if ((currentDirection == Forward || 
 206              		.loc 1 69 0
 207 0018 334B     		ldr	r3, .L4+24
 208 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 209 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 6


 210 001e 17D0     		beq	.L2
  70:main.c        ****         currentDirection == waitForTurn || 
 211              		.loc 1 70 0 discriminator 1
 212 0020 314B     		ldr	r3, .L4+24
 213 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69:main.c        ****         currentDirection == waitForTurn || 
 214              		.loc 1 69 0 discriminator 1
 215 0024 072B     		cmp	r3, #7
 216 0026 13D0     		beq	.L2
  71:main.c        ****         currentDirection == waitForLeftTurn ||
 217              		.loc 1 71 0
 218 0028 2F4B     		ldr	r3, .L4+24
 219 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70:main.c        ****         currentDirection == waitForTurn || 
 220              		.loc 1 70 0
 221 002c 012B     		cmp	r3, #1
 222 002e 0FD0     		beq	.L2
  72:main.c        ****         currentDirection == waitForRightTurn ||
 223              		.loc 1 72 0
 224 0030 2D4B     		ldr	r3, .L4+24
 225 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71:main.c        ****         currentDirection == waitForLeftTurn ||
 226              		.loc 1 71 0
 227 0034 022B     		cmp	r3, #2
 228 0036 0BD0     		beq	.L2
  73:main.c        ****         currentDirection == ForwardAfterTurn ||
 229              		.loc 1 73 0
 230 0038 2B4B     		ldr	r3, .L4+24
 231 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72:main.c        ****         currentDirection == waitForRightTurn ||
 232              		.loc 1 72 0
 233 003c 082B     		cmp	r3, #8
 234 003e 07D0     		beq	.L2
  74:main.c        ****         currentDirection == AdjustToTheLeft ||
 235              		.loc 1 74 0
 236 0040 294B     		ldr	r3, .L4+24
 237 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  73:main.c        ****         currentDirection == ForwardAfterTurn ||
 238              		.loc 1 73 0
 239 0044 032B     		cmp	r3, #3
 240 0046 03D0     		beq	.L2
  75:main.c        ****         currentDirection == AdjustToTheRight) &&
 241              		.loc 1 75 0
 242 0048 274B     		ldr	r3, .L4+24
 243 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74:main.c        ****         currentDirection == AdjustToTheLeft ||
 244              		.loc 1 74 0
 245 004c 042B     		cmp	r3, #4
 246 004e 34D1     		bne	.L3
 247              	.L2:
  76:main.c        ****         quadDec2Count != 0) {
 248              		.loc 1 76 0
 249 0050 244B     		ldr	r3, .L4+20
 250 0052 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == AdjustToTheRight) &&
 251              		.loc 1 75 0
 252 0054 002B     		cmp	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 7


 253 0056 30D0     		beq	.L3
 254              	.LBB2:
  77:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  78:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 255              		.loc 1 78 0
 256 0058 224B     		ldr	r3, .L4+20
 257 005a 1B68     		ldr	r3, [r3]
 258 005c 002B     		cmp	r3, #0
 259 005e B8BF     		it	lt
 260 0060 5B42     		rsblt	r3, r3, #0
 261 0062 1846     		mov	r0, r3
 262 0064 FFF7FEFF 		bl	__aeabi_i2d
 263 0068 19A3     		adr	r3, .L4
 264 006a D3E90023 		ldrd	r2, [r3]
 265 006e FFF7FEFF 		bl	__aeabi_dmul
 266 0072 0346     		mov	r3, r0
 267 0074 0C46     		mov	r4, r1
 268 0076 1846     		mov	r0, r3
 269 0078 2146     		mov	r1, r4
 270 007a 17A3     		adr	r3, .L4+8
 271 007c D3E90023 		ldrd	r2, [r3]
 272 0080 FFF7FEFF 		bl	__aeabi_dmul
 273 0084 0346     		mov	r3, r0
 274 0086 0C46     		mov	r4, r1
 275 0088 1846     		mov	r0, r3
 276 008a 2146     		mov	r1, r4
 277 008c 4FF00002 		mov	r2, #0
 278 0090 164B     		ldr	r3, .L4+28
 279 0092 FFF7FEFF 		bl	__aeabi_ddiv
 280 0096 0346     		mov	r3, r0
 281 0098 0C46     		mov	r4, r1
 282 009a 1846     		mov	r0, r3
 283 009c 2146     		mov	r1, r4
 284 009e FFF7FEFF 		bl	__aeabi_d2f
 285 00a2 0346     		mov	r3, r0
 286 00a4 7B60     		str	r3, [r7, #4]	@ float
  79:main.c        ****         
  80:main.c        ****         totalDistance = totalDistance + newDistance;
 287              		.loc 1 80 0
 288 00a6 124B     		ldr	r3, .L4+32
 289 00a8 1B68     		ldr	r3, [r3]	@ float
 290 00aa 7968     		ldr	r1, [r7, #4]	@ float
 291 00ac 1846     		mov	r0, r3
 292 00ae FFF7FEFF 		bl	__aeabi_fadd
 293 00b2 0346     		mov	r3, r0
 294 00b4 1A46     		mov	r2, r3
 295 00b6 0E4B     		ldr	r3, .L4+32
 296 00b8 1A60     		str	r2, [r3]	@ float
 297              	.L3:
 298              	.LBE2:
  81:main.c        ****     }
  82:main.c        ****     
  83:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 299              		.loc 1 83 0
 300 00ba 0020     		movs	r0, #0
 301 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  84:main.c        ****     QuadDec_M2_Start(); // restart counter
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 8


 302              		.loc 1 84 0
 303 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  85:main.c        ****     
  86:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 304              		.loc 1 86 0
 305 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  87:main.c        **** }
 306              		.loc 1 87 0
 307 00c8 00BF     		nop
 308 00ca 0C37     		adds	r7, r7, #12
 309              		.cfi_def_cfa_offset 12
 310 00cc BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 00ce 90BD     		pop	{r4, r7, pc}
 314              	.L5:
 315              		.align	3
 316              	.L4:
 317 00d0 182D4454 		.word	1413754136
 318 00d4 FB210940 		.word	1074340347
 319 00d8 00000000 		.word	0
 320 00dc 00205040 		.word	1078992896
 321 00e0 00000000 		.word	timerInt
 322 00e4 00000000 		.word	quadDec2Count
 323 00e8 00000000 		.word	currentDirection
 324 00ec 00806C40 		.word	1080852480
 325 00f0 00000000 		.word	totalDistance
 326              		.cfi_endproc
 327              	.LFE64:
 328              		.size	speedTimer, .-speedTimer
 329              		.section	.text.S3_DETECTED,"ax",%progbits
 330              		.align	2
 331              		.global	S3_DETECTED
 332              		.thumb
 333              		.thumb_func
 334              		.type	S3_DETECTED, %function
 335              	S3_DETECTED:
 336              	.LFB65:
  88:main.c        **** 
  89:main.c        **** CY_ISR(S3_DETECTED) {
 337              		.loc 1 89 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
  90:main.c        ****     // Sensor has detected WHITE
  91:main.c        ****     s3 = 1; // , Black = 0, White = 1
 347              		.loc 1 91 0
 348 0004 034B     		ldr	r3, .L7
 349 0006 0122     		movs	r2, #1
 350 0008 1A70     		strb	r2, [r3]
  92:main.c        ****     //LED_Write(1u);
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 9


  93:main.c        **** }
 351              		.loc 1 93 0
 352 000a 00BF     		nop
 353 000c BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 000e 80BC     		pop	{r7}
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0010 7047     		bx	lr
 360              	.L8:
 361 0012 00BF     		.align	2
 362              	.L7:
 363 0014 00000000 		.word	s3
 364              		.cfi_endproc
 365              	.LFE65:
 366              		.size	S3_DETECTED, .-S3_DETECTED
 367              		.section	.text.S4_DETECTED,"ax",%progbits
 368              		.align	2
 369              		.global	S4_DETECTED
 370              		.thumb
 371              		.thumb_func
 372              		.type	S4_DETECTED, %function
 373              	S4_DETECTED:
 374              	.LFB66:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S4_DETECTED) {
 375              		.loc 1 95 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 7, -4
 383 0002 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s4 = 1; // , Black = 0, White = 1
 385              		.loc 1 97 0
 386 0004 034B     		ldr	r3, .L10
 387 0006 0122     		movs	r2, #1
 388 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 389              		.loc 1 99 0
 390 000a 00BF     		nop
 391 000c BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 000e 80BC     		pop	{r7}
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
 397 0010 7047     		bx	lr
 398              	.L11:
 399 0012 00BF     		.align	2
 400              	.L10:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 10


 401 0014 00000000 		.word	s4
 402              		.cfi_endproc
 403              	.LFE66:
 404              		.size	S4_DETECTED, .-S4_DETECTED
 405              		.section	.text.S5_DETECTED,"ax",%progbits
 406              		.align	2
 407              		.global	S5_DETECTED
 408              		.thumb
 409              		.thumb_func
 410              		.type	S5_DETECTED, %function
 411              	S5_DETECTED:
 412              	.LFB67:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S5_DETECTED) {
 413              		.loc 1 101 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418 0000 80B4     		push	{r7}
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s5 = 1; // , Black = 0, White = 1
 423              		.loc 1 103 0
 424 0004 034B     		ldr	r3, .L13
 425 0006 0122     		movs	r2, #1
 426 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 427              		.loc 1 105 0
 428 000a 00BF     		nop
 429 000c BD46     		mov	sp, r7
 430              		.cfi_def_cfa_register 13
 431              		@ sp needed
 432 000e 80BC     		pop	{r7}
 433              		.cfi_restore 7
 434              		.cfi_def_cfa_offset 0
 435 0010 7047     		bx	lr
 436              	.L14:
 437 0012 00BF     		.align	2
 438              	.L13:
 439 0014 00000000 		.word	s5
 440              		.cfi_endproc
 441              	.LFE67:
 442              		.size	S5_DETECTED, .-S5_DETECTED
 443              		.section	.text.S6_DETECTED,"ax",%progbits
 444              		.align	2
 445              		.global	S6_DETECTED
 446              		.thumb
 447              		.thumb_func
 448              		.type	S6_DETECTED, %function
 449              	S6_DETECTED:
 450              	.LFB68:
 106:main.c        **** 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 11


 107:main.c        **** CY_ISR(S6_DETECTED) {
 451              		.loc 1 107 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 1, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456 0000 80B4     		push	{r7}
 457              		.cfi_def_cfa_offset 4
 458              		.cfi_offset 7, -4
 459 0002 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s6 = 1; // , Black = 0, White = 1
 461              		.loc 1 109 0
 462 0004 034B     		ldr	r3, .L16
 463 0006 0122     		movs	r2, #1
 464 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 465              		.loc 1 111 0
 466 000a 00BF     		nop
 467 000c BD46     		mov	sp, r7
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
 470 000e 80BC     		pop	{r7}
 471              		.cfi_restore 7
 472              		.cfi_def_cfa_offset 0
 473 0010 7047     		bx	lr
 474              	.L17:
 475 0012 00BF     		.align	2
 476              	.L16:
 477 0014 00000000 		.word	s6
 478              		.cfi_endproc
 479              	.LFE68:
 480              		.size	S6_DETECTED, .-S6_DETECTED
 481              		.section	.text.TIMER_FINISH,"ax",%progbits
 482              		.align	2
 483              		.global	TIMER_FINISH
 484              		.thumb
 485              		.thumb_func
 486              		.type	TIMER_FINISH, %function
 487              	TIMER_FINISH:
 488              	.LFB69:
 112:main.c        **** 
 113:main.c        **** CY_ISR(TIMER_FINISH) {
 489              		.loc 1 113 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 114:main.c        ****     if (currentDirection == Stop) {
 499              		.loc 1 114 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 12


 500 0004 0A4B     		ldr	r3, .L21
 501 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0008 052B     		cmp	r3, #5
 503 000a 05D1     		bne	.L19
 115:main.c        ****         stopBuffer = stopBuffer + 1;
 504              		.loc 1 115 0
 505 000c 094B     		ldr	r3, .L21+4
 506 000e 1B68     		ldr	r3, [r3]
 507 0010 0133     		adds	r3, r3, #1
 508 0012 084A     		ldr	r2, .L21+4
 509 0014 1360     		str	r3, [r2]
 510 0016 02E0     		b	.L20
 511              	.L19:
 116:main.c        ****     } else {
 117:main.c        ****         stopBuffer = 0;
 512              		.loc 1 117 0
 513 0018 064B     		ldr	r3, .L21+4
 514 001a 0022     		movs	r2, #0
 515 001c 1A60     		str	r2, [r3]
 516              	.L20:
 118:main.c        ****     }
 119:main.c        ****     SetRobotMovement(); 
 517              		.loc 1 119 0
 518 001e FFF7FEFF 		bl	SetRobotMovement
 120:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 519              		.loc 1 120 0
 520 0022 FFF7FEFF 		bl	ResetSensorFlags
 121:main.c        ****     Timer_LED_ReadStatusRegister();
 521              		.loc 1 121 0
 522 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 122:main.c        **** }
 523              		.loc 1 122 0
 524 002a 00BF     		nop
 525 002c 80BD     		pop	{r7, pc}
 526              	.L22:
 527 002e 00BF     		.align	2
 528              	.L21:
 529 0030 00000000 		.word	currentDirection
 530 0034 00000000 		.word	stopBuffer
 531              		.cfi_endproc
 532              	.LFE69:
 533              		.size	TIMER_FINISH, .-TIMER_FINISH
 534              		.section	.text.main,"ax",%progbits
 535              		.align	2
 536              		.global	main
 537              		.thumb
 538              		.thumb_func
 539              		.type	main, %function
 540              	main:
 541              	.LFB70:
 123:main.c        **** 
 124:main.c        **** 
 125:main.c        **** int main()
 126:main.c        **** {
 542              		.loc 1 126 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 13


 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 127:main.c        **** // ----- INITIALIZATIONS ----------
 128:main.c        ****     CYGlobalIntEnable;
 552              		.loc 1 128 0
 553              		.syntax unified
 554              	@ 128 "main.c" 1
 555 0004 62B6     		CPSIE   i
 556              	@ 0 "" 2
 129:main.c        ****     ResetSensorFlags();
 557              		.loc 1 129 0
 558              		.thumb
 559              		.syntax unified
 560 0006 FFF7FEFF 		bl	ResetSensorFlags
 130:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 561              		.loc 1 130 0
 562 000a FFF7FEFF 		bl	init
 131:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 563              		.loc 1 131 0
 564 000e 1F48     		ldr	r0, .L27
 565 0010 FFF7FEFF 		bl	isr_speed_StartEx
 132:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 566              		.loc 1 132 0
 567 0014 1E48     		ldr	r0, .L27+4
 568 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 133:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 569              		.loc 1 133 0
 570 001a 1E48     		ldr	r0, .L27+8
 571 001c FFF7FEFF 		bl	S3_detected_StartEx
 134:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 572              		.loc 1 134 0
 573 0020 1D48     		ldr	r0, .L27+12
 574 0022 FFF7FEFF 		bl	S4_detected_StartEx
 135:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 575              		.loc 1 135 0
 576 0026 1D48     		ldr	r0, .L27+16
 577 0028 FFF7FEFF 		bl	S5_detected_StartEx
 136:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 578              		.loc 1 136 0
 579 002c 1C48     		ldr	r0, .L27+20
 580 002e FFF7FEFF 		bl	S6_detected_StartEx
 137:main.c        ****     Timer_LED_Start();
 581              		.loc 1 137 0
 582 0032 FFF7FEFF 		bl	Timer_LED_Start
 138:main.c        ****     instructionList = findPath(map, food_list, 0);
 583              		.loc 1 138 0
 584 0036 0022     		movs	r2, #0
 585 0038 1A49     		ldr	r1, .L27+24
 586 003a 1B48     		ldr	r0, .L27+28
 587 003c FFF7FEFF 		bl	findPath
 588 0040 0246     		mov	r2, r0
 589 0042 1A4B     		ldr	r3, .L27+32
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 14


 590 0044 1A60     		str	r2, [r3]
 139:main.c        ****     numSteps = instructionsListLength();
 591              		.loc 1 139 0
 592 0046 FFF7FEFF 		bl	instructionsListLength
 593 004a 0346     		mov	r3, r0
 594 004c 1A46     		mov	r2, r3
 595 004e 184B     		ldr	r3, .L27+36
 596 0050 1A60     		str	r2, [r3]
 140:main.c        ****     
 141:main.c        **** // ------USB SETUP ----------------    
 142:main.c        **** #ifdef USE_USB    
 143:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 597              		.loc 1 143 0
 598 0052 0121     		movs	r1, #1
 599 0054 0020     		movs	r0, #0
 600 0056 FFF7FEFF 		bl	USBUART_Start
 144:main.c        **** #endif        
 145:main.c        ****     RF_BT_SELECT_Write(0);
 601              		.loc 1 145 0
 602 005a 0020     		movs	r0, #0
 603 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 604              	.L26:
 146:main.c        ****     
 147:main.c        ****     //usbPutString("Initialised UART");
 148:main.c        ****     for(;;)
 149:main.c        ****     {
 150:main.c        ****         if(timerInt == 1) {
 605              		.loc 1 150 0
 606 0060 144B     		ldr	r3, .L27+40
 607 0062 1B68     		ldr	r3, [r3]
 608 0064 012B     		cmp	r3, #1
 609 0066 08D1     		bne	.L24
 151:main.c        ****             timerInt = 0;
 610              		.loc 1 151 0
 611 0068 124B     		ldr	r3, .L27+40
 612 006a 0022     		movs	r2, #0
 613 006c 1A60     		str	r2, [r3]
 152:main.c        ****             // calculate RPM of M2
 153:main.c        ****             quadCountToRPM(quadDec2Count);
 614              		.loc 1 153 0
 615 006e 124B     		ldr	r3, .L27+44
 616 0070 1B68     		ldr	r3, [r3]
 617 0072 9BB2     		uxth	r3, r3
 618 0074 1846     		mov	r0, r3
 619 0076 FFF7FEFF 		bl	quadCountToRPM
 620              	.L24:
 154:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 155:main.c        ****             //usbPutString(buffer);
 156:main.c        ****             //usbPutString(" ");
 157:main.c        ****         }
 158:main.c        ****         //handle_usb();
 159:main.c        ****         if (flag_KB_string == 1)
 621              		.loc 1 159 0
 622 007a 104B     		ldr	r3, .L27+48
 623 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 007e 012B     		cmp	r3, #1
 625 0080 EED1     		bne	.L26
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 15


 160:main.c        ****         {
 161:main.c        ****             //usbPutString("Total Distance: ");
 162:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 163:main.c        ****             //usbPutString(buffer);
 164:main.c        ****             flag_KB_string = 0;
 626              		.loc 1 164 0
 627 0082 0E4B     		ldr	r3, .L27+48
 628 0084 0022     		movs	r2, #0
 629 0086 1A70     		strb	r2, [r3]
 165:main.c        ****         }           
 166:main.c        ****     }
 630              		.loc 1 166 0
 631 0088 EAE7     		b	.L26
 632              	.L28:
 633 008a 00BF     		.align	2
 634              	.L27:
 635 008c 00000000 		.word	speedTimer
 636 0090 00000000 		.word	TIMER_FINISH
 637 0094 00000000 		.word	S3_DETECTED
 638 0098 00000000 		.word	S4_DETECTED
 639 009c 00000000 		.word	S5_DETECTED
 640 00a0 00000000 		.word	S6_DETECTED
 641 00a4 00000000 		.word	food_list
 642 00a8 00000000 		.word	map
 643 00ac 00000000 		.word	instructionList
 644 00b0 00000000 		.word	numSteps
 645 00b4 00000000 		.word	timerInt
 646 00b8 00000000 		.word	quadDec2Count
 647 00bc 00000000 		.word	flag_KB_string
 648              		.cfi_endproc
 649              	.LFE70:
 650              		.size	main, .-main
 651              		.global	__aeabi_fmul
 652              		.global	__aeabi_f2iz
 653              		.section	.text.quadCountToRPM,"ax",%progbits
 654              		.align	2
 655              		.global	quadCountToRPM
 656              		.thumb
 657              		.thumb_func
 658              		.type	quadCountToRPM, %function
 659              	quadCountToRPM:
 660              	.LFB71:
 167:main.c        ****     return 0;
 168:main.c        **** }
 169:main.c        **** 
 170:main.c        **** // Calculations
 171:main.c        **** //* ========================================
 172:main.c        **** int16 quadCountToRPM(uint16 count)
 173:main.c        **** {
 661              		.loc 1 173 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 16
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665 0000 90B5     		push	{r4, r7, lr}
 666              		.cfi_def_cfa_offset 12
 667              		.cfi_offset 4, -12
 668              		.cfi_offset 7, -8
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 16


 669              		.cfi_offset 14, -4
 670 0002 85B0     		sub	sp, sp, #20
 671              		.cfi_def_cfa_offset 32
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 674 0006 0346     		mov	r3, r0
 675 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 174:main.c        ****     float cps = count/57.00;
 676              		.loc 1 174 0
 677 000a FB88     		ldrh	r3, [r7, #6]
 678 000c 1846     		mov	r0, r3
 679 000e FFF7FEFF 		bl	__aeabi_i2d
 680 0012 4FF00002 		mov	r2, #0
 681 0016 0D4B     		ldr	r3, .L31
 682 0018 FFF7FEFF 		bl	__aeabi_ddiv
 683 001c 0346     		mov	r3, r0
 684 001e 0C46     		mov	r4, r1
 685 0020 1846     		mov	r0, r3
 686 0022 2146     		mov	r1, r4
 687 0024 FFF7FEFF 		bl	__aeabi_d2f
 688 0028 0346     		mov	r3, r0
 689 002a FB60     		str	r3, [r7, #12]	@ float
 175:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 690              		.loc 1 175 0
 691 002c 0849     		ldr	r1, .L31+4
 692 002e F868     		ldr	r0, [r7, #12]	@ float
 693 0030 FFF7FEFF 		bl	__aeabi_fmul
 694 0034 0346     		mov	r3, r0
 695 0036 1846     		mov	r0, r3
 696 0038 FFF7FEFF 		bl	__aeabi_f2iz
 697 003c 0346     		mov	r3, r0
 698 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 176:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 177:main.c        ****     return rpm;
 699              		.loc 1 177 0
 700 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 178:main.c        ****     //usbPutString(buffer);
 179:main.c        ****     //usbPutString("rpm ");
 180:main.c        **** }
 701              		.loc 1 180 0
 702 0044 1846     		mov	r0, r3
 703 0046 1437     		adds	r7, r7, #20
 704              		.cfi_def_cfa_offset 12
 705 0048 BD46     		mov	sp, r7
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
 708 004a 90BD     		pop	{r4, r7, pc}
 709              	.L32:
 710              		.align	2
 711              	.L31:
 712 004c 00804C40 		.word	1078755328
 713 0050 00007041 		.word	1097859072
 714              		.cfi_endproc
 715              	.LFE71:
 716              		.size	quadCountToRPM, .-quadCountToRPM
 717              		.section	.text.ResetSensorFlags,"ax",%progbits
 718              		.align	2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 17


 719              		.global	ResetSensorFlags
 720              		.thumb
 721              		.thumb_func
 722              		.type	ResetSensorFlags, %function
 723              	ResetSensorFlags:
 724              	.LFB72:
 181:main.c        **** 
 182:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 183:main.c        **** void ResetSensorFlags() {
 725              		.loc 1 183 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0000 80B4     		push	{r7}
 731              		.cfi_def_cfa_offset 4
 732              		.cfi_offset 7, -4
 733 0002 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
 184:main.c        ****     s3 = 0;
 735              		.loc 1 184 0
 736 0004 074B     		ldr	r3, .L34
 737 0006 0022     		movs	r2, #0
 738 0008 1A70     		strb	r2, [r3]
 185:main.c        ****     s4 = 0;
 739              		.loc 1 185 0
 740 000a 074B     		ldr	r3, .L34+4
 741 000c 0022     		movs	r2, #0
 742 000e 1A70     		strb	r2, [r3]
 186:main.c        ****     s5 = 0;
 743              		.loc 1 186 0
 744 0010 064B     		ldr	r3, .L34+8
 745 0012 0022     		movs	r2, #0
 746 0014 1A70     		strb	r2, [r3]
 187:main.c        ****     s6 = 0;
 747              		.loc 1 187 0
 748 0016 064B     		ldr	r3, .L34+12
 749 0018 0022     		movs	r2, #0
 750 001a 1A70     		strb	r2, [r3]
 188:main.c        **** }
 751              		.loc 1 188 0
 752 001c 00BF     		nop
 753 001e BD46     		mov	sp, r7
 754              		.cfi_def_cfa_register 13
 755              		@ sp needed
 756 0020 80BC     		pop	{r7}
 757              		.cfi_restore 7
 758              		.cfi_def_cfa_offset 0
 759 0022 7047     		bx	lr
 760              	.L35:
 761              		.align	2
 762              	.L34:
 763 0024 00000000 		.word	s3
 764 0028 00000000 		.word	s4
 765 002c 00000000 		.word	s5
 766 0030 00000000 		.word	s6
 767              		.cfi_endproc
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 18


 768              	.LFE72:
 769              		.size	ResetSensorFlags, .-ResetSensorFlags
 770              		.global	xBlocksize
 771              		.data
 772 0045 000000   		.align	2
 773              		.type	xBlocksize, %object
 774              		.size	xBlocksize, 4
 775              	xBlocksize:
 776 0048 0000FF42 		.word	1124007936
 777              		.global	yBlocksize
 778              		.align	2
 779              		.type	yBlocksize, %object
 780              		.size	yBlocksize, 4
 781              	yBlocksize:
 782 004c 0000A042 		.word	1117782016
 783              		.global	currentRow
 784              		.type	currentRow, %object
 785              		.size	currentRow, 1
 786              	currentRow:
 787 0050 01       		.byte	1
 788              		.global	currentCol
 789              		.type	currentCol, %object
 790              		.size	currentCol, 1
 791              	currentCol:
 792 0051 01       		.byte	1
 793              		.global	stoppedAfterTurn
 794              		.bss
 795              		.type	stoppedAfterTurn, %object
 796              		.size	stoppedAfterTurn, 1
 797              	stoppedAfterTurn:
 798 002c 00       		.space	1
 799              		.global	ignoreSensor
 800              		.type	ignoreSensor, %object
 801              		.size	ignoreSensor, 1
 802              	ignoreSensor:
 803 002d 00       		.space	1
 804              		.global	__aeabi_fcmpge
 805              		.section	.text.CheckSensorDirection,"ax",%progbits
 806              		.align	2
 807              		.global	CheckSensorDirection
 808              		.thumb
 809              		.thumb_func
 810              		.type	CheckSensorDirection, %function
 811              	CheckSensorDirection:
 812              	.LFB73:
 189:main.c        **** 
 190:main.c        **** float xBlocksize = 127.5; // 127.5
 191:main.c        **** float yBlocksize = 80; // 80
 192:main.c        **** uint8 currentRow = 1;
 193:main.c        **** uint8 currentCol = 1;
 194:main.c        **** 
 195:main.c        **** /*enum DirectionState GetNextStep() {
 196:main.c        ****     enum DirectionState directionState;
 197:main.c        ****     // Determines robot movement and orientation to follow optimal path
 198:main.c        ****     // enum DirectionState directionState = Stop;
 199:main.c        ****     previousOrientation = currentOrientation;
 200:main.c        ****     
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 19


 201:main.c        ****     if(map[currentRow][currentCol] == 9) {
 202:main.c        ****         directionState = Stop; // reached target
 203:main.c        ****         return directionState;
 204:main.c        ****     }
 205:main.c        ****         
 206:main.c        ****     switch (previousOrientation) {
 207:main.c        ****             case Up:
 208:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 209:main.c        ****                     currentOrientation = Up; 
 210:main.c        ****                     directionState = Forward;
 211:main.c        ****                     currentRow--;// update position
 212:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 213:main.c        ****                     currentOrientation = Left;
 214:main.c        ****                     directionState = waitForLeftTurn;
 215:main.c        ****                     //currentRow--;
 216:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 217:main.c        ****                     currentOrientation = Right;
 218:main.c        ****                     directionState = waitForRightTurn;
 219:main.c        ****                     //currentRow++; // update position
 220:main.c        ****                 }
 221:main.c        ****                 break;
 222:main.c        ****             case Down:
 223:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 224:main.c        ****                     currentOrientation = Down;
 225:main.c        ****                     directionState = Forward;
 226:main.c        ****                     currentRow++;
 227:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 228:main.c        ****                     currentOrientation = Left;
 229:main.c        ****                     directionState = waitForRightTurn;
 230:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 231:main.c        ****                     currentOrientation = Right;
 232:main.c        ****                     directionState = waitForLeftTurn;
 233:main.c        ****                 }
 234:main.c        ****                 break;
 235:main.c        ****             case Left:
 236:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 237:main.c        ****                     currentOrientation = Left;
 238:main.c        ****                     directionState = Forward;
 239:main.c        ****                     currentCol--; // update position
 240:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 241:main.c        ****                     currentOrientation = Up;
 242:main.c        ****                     directionState = waitForRightTurn;
 243:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 244:main.c        ****                     currentOrientation = Down;
 245:main.c        ****                     directionState = waitForLeftTurn;
 246:main.c        ****                 }
 247:main.c        ****                 break;
 248:main.c        ****             case Right:
 249:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 250:main.c        ****                     currentOrientation = Right;
 251:main.c        ****                     directionState = Forward;
 252:main.c        ****                     currentCol++; // update position
 253:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 254:main.c        ****                     currentOrientation = Up;
 255:main.c        ****                     directionState = waitForLeftTurn;
 256:main.c        ****                     //currentCol++; // update position
 257:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 20


 258:main.c        ****                     currentOrientation = Down;
 259:main.c        ****                     directionState = waitForRightTurn;
 260:main.c        ****                     //currentCol--; // update position
 261:main.c        ****                 }
 262:main.c        ****                 break;
 263:main.c        ****             default:
 264:main.c        ****                 break;
 265:main.c        ****         }
 266:main.c        ****     
 267:main.c        ****     return directionState;
 268:main.c        **** }
 269:main.c        **** */
 270:main.c        **** uint8 stoppedAfterTurn = 0;
 271:main.c        **** uint8 ignoreSensor = 0;
 272:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 273:main.c        **** enum RobotMovement CheckSensorDirection() {
 813              		.loc 1 273 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 82B0     		sub	sp, sp, #8
 822              		.cfi_def_cfa_offset 16
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 274:main.c        ****     float blocksize;
 275:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 825              		.loc 1 275 0
 826 0006 964B     		ldr	r3, .L66
 827 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 000a 002B     		cmp	r3, #0
 829 000c 03D0     		beq	.L37
 830              		.loc 1 275 0 is_stmt 0 discriminator 1
 831 000e 944B     		ldr	r3, .L66
 832 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0012 012B     		cmp	r3, #1
 834 0014 03D1     		bne	.L38
 835              	.L37:
 276:main.c        ****         blocksize = yBlocksize;
 836              		.loc 1 276 0 is_stmt 1
 837 0016 934B     		ldr	r3, .L66+4
 838 0018 1B68     		ldr	r3, [r3]	@ float
 839 001a 7B60     		str	r3, [r7, #4]	@ float
 840 001c 02E0     		b	.L39
 841              	.L38:
 277:main.c        ****     } else {
 278:main.c        ****         blocksize = xBlocksize;
 842              		.loc 1 278 0
 843 001e 924B     		ldr	r3, .L66+8
 844 0020 1B68     		ldr	r3, [r3]	@ float
 845 0022 7B60     		str	r3, [r7, #4]	@ float
 846              	.L39:
 279:main.c        ****     }
 280:main.c        ****     //if(currentInstruction)
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 21


 281:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 847              		.loc 1 281 0
 848 0024 0523     		movs	r3, #5
 849 0026 FB70     		strb	r3, [r7, #3]
 282:main.c        ****     
 283:main.c        ****     if (stoppedAfterTurn == 1) {
 850              		.loc 1 283 0
 851 0028 904B     		ldr	r3, .L66+12
 852 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 853 002c 012B     		cmp	r3, #1
 854 002e 16D1     		bne	.L40
 284:main.c        ****         if (stopBuffer <= 50) {
 855              		.loc 1 284 0
 856 0030 8F4B     		ldr	r3, .L66+16
 857 0032 1B68     		ldr	r3, [r3]
 858 0034 322B     		cmp	r3, #50
 859 0036 06D8     		bhi	.L41
 285:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 860              		.loc 1 285 0
 861 0038 0523     		movs	r3, #5
 862 003a FB70     		strb	r3, [r7, #3]
 286:main.c        ****             previousDirection = directionState;
 863              		.loc 1 286 0
 864 003c 8D4A     		ldr	r2, .L66+20
 865 003e FB78     		ldrb	r3, [r7, #3]
 866 0040 1370     		strb	r3, [r2]
 287:main.c        ****             return directionState;
 867              		.loc 1 287 0
 868 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 869 0044 07E1     		b	.L42
 870              	.L41:
 288:main.c        ****         }
 289:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 290:main.c        ****         totalDistance = 0; // reset distance
 871              		.loc 1 290 0
 872 0046 8C4B     		ldr	r3, .L66+24
 873 0048 4FF00002 		mov	r2, #0
 874 004c 1A60     		str	r2, [r3]	@ float
 291:main.c        ****         previousDirection = directionState;
 875              		.loc 1 291 0
 876 004e 894A     		ldr	r2, .L66+20
 877 0050 FB78     		ldrb	r3, [r7, #3]
 878 0052 1370     		strb	r3, [r2]
 292:main.c        ****         stoppedAfterTurn = 0;
 879              		.loc 1 292 0
 880 0054 854B     		ldr	r3, .L66+12
 881 0056 0022     		movs	r2, #0
 882 0058 1A70     		strb	r2, [r3]
 293:main.c        ****         return directionState;
 883              		.loc 1 293 0
 884 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 885 005c FBE0     		b	.L42
 886              	.L40:
 294:main.c        ****     }
 295:main.c        ****     if (totalDistance >= blocksize) {
 887              		.loc 1 295 0
 888 005e 864B     		ldr	r3, .L66+24
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 22


 889 0060 1B68     		ldr	r3, [r3]	@ float
 890 0062 7968     		ldr	r1, [r7, #4]	@ float
 891 0064 1846     		mov	r0, r3
 892 0066 FFF7FEFF 		bl	__aeabi_fcmpge
 893 006a 0346     		mov	r3, r0
 894 006c 002B     		cmp	r3, #0
 895 006e 08D0     		beq	.L65
 296:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 297:main.c        ****         totalDistance = 0; // reset distance
 896              		.loc 1 297 0
 897 0070 814B     		ldr	r3, .L66+24
 898 0072 4FF00002 		mov	r2, #0
 899 0076 1A60     		str	r2, [r3]	@ float
 298:main.c        ****         previousDirection = directionState;
 900              		.loc 1 298 0
 901 0078 7E4A     		ldr	r2, .L66+20
 902 007a FB78     		ldrb	r3, [r7, #3]
 903 007c 1370     		strb	r3, [r2]
 299:main.c        ****         return directionState;
 904              		.loc 1 299 0
 905 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 906 0080 E9E0     		b	.L42
 907              	.L65:
 300:main.c        ****     }
 301:main.c        ****     
 302:main.c        ****     // STOP BUFFER * ========================================
 303:main.c        ****     if (previousDirection == Stop) {
 908              		.loc 1 303 0
 909 0082 7C4B     		ldr	r3, .L66+20
 910 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 911 0086 052B     		cmp	r3, #5
 912 0088 0AD1     		bne	.L45
 304:main.c        ****         if (stopBuffer <= 50) {
 913              		.loc 1 304 0
 914 008a 794B     		ldr	r3, .L66+16
 915 008c 1B68     		ldr	r3, [r3]
 916 008e 322B     		cmp	r3, #50
 917 0090 04D8     		bhi	.L46
 305:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 918              		.loc 1 305 0
 919 0092 0523     		movs	r3, #5
 920 0094 FB70     		strb	r3, [r7, #3]
 306:main.c        ****             previousDirection = directionState;
 921              		.loc 1 306 0
 922 0096 774A     		ldr	r2, .L66+20
 923 0098 FB78     		ldrb	r3, [r7, #3]
 924 009a 1370     		strb	r3, [r2]
 925              	.L46:
 307:main.c        ****         } else {
 308:main.c        ****             //directionState = ForwardAfterTurn;
 309:main.c        ****         }
 310:main.c        ****         return directionState;
 926              		.loc 1 310 0
 927 009c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 928 009e DAE0     		b	.L42
 929              	.L45:
 311:main.c        ****     }
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 23


 312:main.c        **** 
 313:main.c        ****     // TURNING * ========================================    
 314:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 930              		.loc 1 314 0
 931 00a0 744B     		ldr	r3, .L66+20
 932 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 00a4 082B     		cmp	r3, #8
 934 00a6 0ED1     		bne	.L47
 315:main.c        ****         if (s3 || s4) {
 935              		.loc 1 315 0
 936 00a8 744B     		ldr	r3, .L66+28
 937 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 938 00ac 002B     		cmp	r3, #0
 939 00ae 03D1     		bne	.L48
 940              		.loc 1 315 0 is_stmt 0 discriminator 1
 941 00b0 734B     		ldr	r3, .L66+32
 942 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 943 00b4 002B     		cmp	r3, #0
 944 00b6 06D0     		beq	.L47
 945              	.L48:
 316:main.c        ****             //ignoreSensor = 0;
 317:main.c        ****             //usbPutString("Forward\n");
 318:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 946              		.loc 1 318 0 is_stmt 1
 947 00b8 0023     		movs	r3, #0
 948 00ba FB70     		strb	r3, [r7, #3]
 319:main.c        ****             previousDirection = directionState;
 949              		.loc 1 319 0
 950 00bc 6D4A     		ldr	r2, .L66+20
 951 00be FB78     		ldrb	r3, [r7, #3]
 952 00c0 1370     		strb	r3, [r2]
 320:main.c        ****             return directionState;
 953              		.loc 1 320 0
 954 00c2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 955 00c4 C7E0     		b	.L42
 956              	.L47:
 321:main.c        ****         }
 322:main.c        ****     }
 323:main.c        **** 
 324:main.c        ****     if(previousDirection == waitForRightTurn) {
 957              		.loc 1 324 0
 958 00c6 6B4B     		ldr	r3, .L66+20
 959 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 00ca 022B     		cmp	r3, #2
 961 00cc 11D1     		bne	.L49
 325:main.c        ****         //ignoreSensor = 0;
 326:main.c        ****         if(!s4) {
 962              		.loc 1 326 0
 963 00ce 6C4B     		ldr	r3, .L66+32
 964 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 965 00d2 002B     		cmp	r3, #0
 966 00d4 06D1     		bne	.L50
 327:main.c        ****             //usbPutString("Turn Right\n");
 328:main.c        ****             directionState = TurnRight;
 967              		.loc 1 328 0
 968 00d6 0123     		movs	r3, #1
 969 00d8 FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 24


 329:main.c        ****             previousDirection = directionState;
 970              		.loc 1 329 0
 971 00da 664A     		ldr	r2, .L66+20
 972 00dc FB78     		ldrb	r3, [r7, #3]
 973 00de 1370     		strb	r3, [r2]
 330:main.c        ****             return directionState;
 974              		.loc 1 330 0
 975 00e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 976 00e2 B8E0     		b	.L42
 977              	.L50:
 331:main.c        ****         } else {
 332:main.c        ****             //usbPutString("Wait for Right Turn\n");
 333:main.c        ****             directionState = waitForRightTurn;
 978              		.loc 1 333 0
 979 00e4 0223     		movs	r3, #2
 980 00e6 FB70     		strb	r3, [r7, #3]
 334:main.c        ****             previousDirection = directionState;
 981              		.loc 1 334 0
 982 00e8 624A     		ldr	r2, .L66+20
 983 00ea FB78     		ldrb	r3, [r7, #3]
 984 00ec 1370     		strb	r3, [r2]
 335:main.c        ****             return directionState;
 985              		.loc 1 335 0
 986 00ee FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 987 00f0 B1E0     		b	.L42
 988              	.L49:
 336:main.c        ****         }
 337:main.c        ****     }
 338:main.c        **** 
 339:main.c        ****     if(previousDirection == waitForLeftTurn) {
 989              		.loc 1 339 0
 990 00f2 604B     		ldr	r3, .L66+20
 991 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 00f6 012B     		cmp	r3, #1
 993 00f8 11D1     		bne	.L51
 340:main.c        ****         //ignoreSensor = 0;
 341:main.c        ****         if(!s3) {
 994              		.loc 1 341 0
 995 00fa 604B     		ldr	r3, .L66+28
 996 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 997 00fe 002B     		cmp	r3, #0
 998 0100 06D1     		bne	.L52
 342:main.c        ****             //usbPutString("Turn Left\n");
 343:main.c        ****             directionState = TurnLeft;
 999              		.loc 1 343 0
 1000 0102 0223     		movs	r3, #2
 1001 0104 FB70     		strb	r3, [r7, #3]
 344:main.c        ****             previousDirection = directionState;
 1002              		.loc 1 344 0
 1003 0106 5B4A     		ldr	r2, .L66+20
 1004 0108 FB78     		ldrb	r3, [r7, #3]
 1005 010a 1370     		strb	r3, [r2]
 345:main.c        ****             return directionState;
 1006              		.loc 1 345 0
 1007 010c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1008 010e A2E0     		b	.L42
 1009              	.L52:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 25


 346:main.c        ****         } else {
 347:main.c        ****             //usbPutString("Wait for Left Turn\n");
 348:main.c        ****             directionState = waitForLeftTurn;
 1010              		.loc 1 348 0
 1011 0110 0123     		movs	r3, #1
 1012 0112 FB70     		strb	r3, [r7, #3]
 349:main.c        ****             previousDirection = directionState;
 1013              		.loc 1 349 0
 1014 0114 574A     		ldr	r2, .L66+20
 1015 0116 FB78     		ldrb	r3, [r7, #3]
 1016 0118 1370     		strb	r3, [r2]
 350:main.c        ****             return directionState;
 1017              		.loc 1 350 0
 1018 011a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1019 011c 9BE0     		b	.L42
 1020              	.L51:
 351:main.c        ****         }
 352:main.c        ****     }
 353:main.c        **** 
 354:main.c        ****     if(previousDirection == TurnRight) {
 1021              		.loc 1 354 0
 1022 011e 554B     		ldr	r3, .L66+20
 1023 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 0122 012B     		cmp	r3, #1
 1025 0124 24D1     		bne	.L53
 355:main.c        ****         if(s5 && s6) {
 1026              		.loc 1 355 0
 1027 0126 574B     		ldr	r3, .L66+36
 1028 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1029 012a 002B     		cmp	r3, #0
 1030 012c 0AD0     		beq	.L54
 1031              		.loc 1 355 0 is_stmt 0 discriminator 1
 1032 012e 564B     		ldr	r3, .L66+40
 1033 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1034 0132 002B     		cmp	r3, #0
 1035 0134 06D0     		beq	.L54
 356:main.c        ****             //usbPutString("Turn Right\n");
 357:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1036              		.loc 1 357 0 is_stmt 1
 1037 0136 0123     		movs	r3, #1
 1038 0138 FB70     		strb	r3, [r7, #3]
 358:main.c        ****             previousDirection = directionState;
 1039              		.loc 1 358 0
 1040 013a 4E4A     		ldr	r2, .L66+20
 1041 013c FB78     		ldrb	r3, [r7, #3]
 1042 013e 1370     		strb	r3, [r2]
 359:main.c        ****             return directionState;
 1043              		.loc 1 359 0
 1044 0140 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1045 0142 88E0     		b	.L42
 1046              	.L54:
 360:main.c        ****         } 
 361:main.c        ****         else if (!s5 || !s6) {
 1047              		.loc 1 361 0
 1048 0144 4F4B     		ldr	r3, .L66+36
 1049 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 0148 002B     		cmp	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 26


 1051 014a 03D0     		beq	.L55
 1052              		.loc 1 361 0 is_stmt 0 discriminator 1
 1053 014c 4E4B     		ldr	r3, .L66+40
 1054 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 0150 002B     		cmp	r3, #0
 1056 0152 0DD1     		bne	.L53
 1057              	.L55:
 362:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 363:main.c        ****             //usbPutString("Stop after Right Turn");
 364:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1058              		.loc 1 364 0 is_stmt 1
 1059 0154 0523     		movs	r3, #5
 1060 0156 FB70     		strb	r3, [r7, #3]
 365:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1061              		.loc 1 365 0
 1062 0158 474B     		ldr	r3, .L66+24
 1063 015a 4FF00002 		mov	r2, #0
 1064 015e 1A60     		str	r2, [r3]	@ float
 366:main.c        ****             previousDirection = directionState;
 1065              		.loc 1 366 0
 1066 0160 444A     		ldr	r2, .L66+20
 1067 0162 FB78     		ldrb	r3, [r7, #3]
 1068 0164 1370     		strb	r3, [r2]
 367:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1069              		.loc 1 367 0
 1070 0166 414B     		ldr	r3, .L66+12
 1071 0168 0122     		movs	r2, #1
 1072 016a 1A70     		strb	r2, [r3]
 368:main.c        ****             return directionState;
 1073              		.loc 1 368 0
 1074 016c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1075 016e 72E0     		b	.L42
 1076              	.L53:
 369:main.c        ****         }
 370:main.c        ****     }    
 371:main.c        **** 
 372:main.c        ****     if(previousDirection == TurnLeft) {
 1077              		.loc 1 372 0
 1078 0170 404B     		ldr	r3, .L66+20
 1079 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1080 0174 022B     		cmp	r3, #2
 1081 0176 24D1     		bne	.L56
 373:main.c        ****         if(s5 && s6) {
 1082              		.loc 1 373 0
 1083 0178 424B     		ldr	r3, .L66+36
 1084 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1085 017c 002B     		cmp	r3, #0
 1086 017e 0AD0     		beq	.L57
 1087              		.loc 1 373 0 is_stmt 0 discriminator 1
 1088 0180 414B     		ldr	r3, .L66+40
 1089 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1090 0184 002B     		cmp	r3, #0
 1091 0186 06D0     		beq	.L57
 374:main.c        ****             //usbPutString("Turn Left\n");
 375:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1092              		.loc 1 375 0 is_stmt 1
 1093 0188 0223     		movs	r3, #2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 27


 1094 018a FB70     		strb	r3, [r7, #3]
 376:main.c        ****             previousDirection = directionState;
 1095              		.loc 1 376 0
 1096 018c 394A     		ldr	r2, .L66+20
 1097 018e FB78     		ldrb	r3, [r7, #3]
 1098 0190 1370     		strb	r3, [r2]
 377:main.c        ****             return directionState;
 1099              		.loc 1 377 0
 1100 0192 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1101 0194 5FE0     		b	.L42
 1102              	.L57:
 378:main.c        ****         } 
 379:main.c        ****         else if (!s5 || !s6) {
 1103              		.loc 1 379 0
 1104 0196 3B4B     		ldr	r3, .L66+36
 1105 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 019a 002B     		cmp	r3, #0
 1107 019c 03D0     		beq	.L58
 1108              		.loc 1 379 0 is_stmt 0 discriminator 1
 1109 019e 3A4B     		ldr	r3, .L66+40
 1110 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1111 01a2 002B     		cmp	r3, #0
 1112 01a4 0DD1     		bne	.L56
 1113              	.L58:
 380:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 381:main.c        ****            // usbPutString("Stop after Left Turn\n");
 382:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1114              		.loc 1 382 0 is_stmt 1
 1115 01a6 0523     		movs	r3, #5
 1116 01a8 FB70     		strb	r3, [r7, #3]
 383:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1117              		.loc 1 383 0
 1118 01aa 334B     		ldr	r3, .L66+24
 1119 01ac 4FF00002 		mov	r2, #0
 1120 01b0 1A60     		str	r2, [r3]	@ float
 384:main.c        ****             previousDirection = directionState;
 1121              		.loc 1 384 0
 1122 01b2 304A     		ldr	r2, .L66+20
 1123 01b4 FB78     		ldrb	r3, [r7, #3]
 1124 01b6 1370     		strb	r3, [r2]
 385:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1125              		.loc 1 385 0
 1126 01b8 2C4B     		ldr	r3, .L66+12
 1127 01ba 0122     		movs	r2, #1
 1128 01bc 1A70     		strb	r2, [r3]
 386:main.c        ****             return directionState;
 1129              		.loc 1 386 0
 1130 01be FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1131 01c0 49E0     		b	.L42
 1132              	.L56:
 387:main.c        ****         }
 388:main.c        ****     }
 389:main.c        ****     
 390:main.c        ****     // COURSE CORRECTION * ========================================
 391:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1133              		.loc 1 391 0
 1134 01c2 2C4B     		ldr	r3, .L66+20
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 28


 1135 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1136 01c6 002B     		cmp	r3, #0
 1137 01c8 07D0     		beq	.L59
 1138              		.loc 1 391 0 is_stmt 0 discriminator 1
 1139 01ca 2A4B     		ldr	r3, .L66+20
 1140 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1141 01ce 032B     		cmp	r3, #3
 1142 01d0 03D0     		beq	.L59
 1143              		.loc 1 391 0 discriminator 2
 1144 01d2 284B     		ldr	r3, .L66+20
 1145 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1146 01d6 042B     		cmp	r3, #4
 1147 01d8 15D1     		bne	.L60
 1148              	.L59:
 392:main.c        ****         //ignoreSensor = 0;
 393:main.c        ****         if(s6) {
 1149              		.loc 1 393 0 is_stmt 1
 1150 01da 2B4B     		ldr	r3, .L66+40
 1151 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 01de 002B     		cmp	r3, #0
 1153 01e0 06D0     		beq	.L61
 394:main.c        ****             //usbPutString("Adjust to the left\n");
 395:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1154              		.loc 1 395 0
 1155 01e2 0323     		movs	r3, #3
 1156 01e4 FB70     		strb	r3, [r7, #3]
 396:main.c        ****             previousDirection = directionState;
 1157              		.loc 1 396 0
 1158 01e6 234A     		ldr	r2, .L66+20
 1159 01e8 FB78     		ldrb	r3, [r7, #3]
 1160 01ea 1370     		strb	r3, [r2]
 397:main.c        ****             return directionState;
 1161              		.loc 1 397 0
 1162 01ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1163 01ee 32E0     		b	.L42
 1164              	.L61:
 398:main.c        ****         }
 399:main.c        ****         if(s5) {
 1165              		.loc 1 399 0
 1166 01f0 244B     		ldr	r3, .L66+36
 1167 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1168 01f4 002B     		cmp	r3, #0
 1169 01f6 06D0     		beq	.L60
 400:main.c        ****             //usbPutString("Adjust to the right\n");
 401:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1170              		.loc 1 401 0
 1171 01f8 0423     		movs	r3, #4
 1172 01fa FB70     		strb	r3, [r7, #3]
 402:main.c        ****             previousDirection = directionState;
 1173              		.loc 1 402 0
 1174 01fc 1D4A     		ldr	r2, .L66+20
 1175 01fe FB78     		ldrb	r3, [r7, #3]
 1176 0200 1370     		strb	r3, [r2]
 403:main.c        ****             return directionState;
 1177              		.loc 1 403 0
 1178 0202 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1179 0204 27E0     		b	.L42
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 29


 1180              	.L60:
 404:main.c        ****         }
 405:main.c        ****     }
 406:main.c        ****     
 407:main.c        ****     // FORWARD * ========================================
 408:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1181              		.loc 1 408 0
 1182 0206 1D4B     		ldr	r3, .L66+28
 1183 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 020a 002B     		cmp	r3, #0
 1185 020c 12D0     		beq	.L62
 1186              		.loc 1 408 0 is_stmt 0 discriminator 1
 1187 020e 1C4B     		ldr	r3, .L66+32
 1188 0210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189 0212 002B     		cmp	r3, #0
 1190 0214 0ED0     		beq	.L62
 1191              		.loc 1 408 0 discriminator 2
 1192 0216 1B4B     		ldr	r3, .L66+36
 1193 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1194 021a 002B     		cmp	r3, #0
 1195 021c 0AD1     		bne	.L62
 1196              		.loc 1 408 0 discriminator 3
 1197 021e 1A4B     		ldr	r3, .L66+40
 1198 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 0222 002B     		cmp	r3, #0
 1200 0224 06D1     		bne	.L62
 409:main.c        ****         //usbPutString("Forward\n");
 410:main.c        ****         directionState = Forward;
 1201              		.loc 1 410 0 is_stmt 1
 1202 0226 0023     		movs	r3, #0
 1203 0228 FB70     		strb	r3, [r7, #3]
 411:main.c        ****         previousDirection = directionState;
 1204              		.loc 1 411 0
 1205 022a 124A     		ldr	r2, .L66+20
 1206 022c FB78     		ldrb	r3, [r7, #3]
 1207 022e 1370     		strb	r3, [r2]
 412:main.c        ****         return directionState;   
 1208              		.loc 1 412 0
 1209 0230 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1210 0232 10E0     		b	.L42
 1211              	.L62:
 413:main.c        ****     }
 414:main.c        **** 
 415:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 416:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 417:main.c        ****     if (previousDirection == Unknown) {
 1212              		.loc 1 417 0
 1213 0234 0F4B     		ldr	r3, .L66+20
 1214 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1215 0238 062B     		cmp	r3, #6
 1216 023a 06D1     		bne	.L63
 418:main.c        ****         directionState = Forward;
 1217              		.loc 1 418 0
 1218 023c 0023     		movs	r3, #0
 1219 023e FB70     		strb	r3, [r7, #3]
 419:main.c        ****         previousDirection = directionState;
 1220              		.loc 1 419 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 30


 1221 0240 0C4A     		ldr	r2, .L66+20
 1222 0242 FB78     		ldrb	r3, [r7, #3]
 1223 0244 1370     		strb	r3, [r2]
 420:main.c        ****         return directionState;
 1224              		.loc 1 420 0
 1225 0246 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1226 0248 05E0     		b	.L42
 1227              	.L63:
 421:main.c        ****     }
 422:main.c        **** 
 423:main.c        ****     // Possible reason
 424:main.c        ****     previousDirection = currentDirection;
 1228              		.loc 1 424 0
 1229 024a 104B     		ldr	r3, .L66+44
 1230 024c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1231 024e 094B     		ldr	r3, .L66+20
 1232 0250 1A70     		strb	r2, [r3]
 425:main.c        ****     return previousDirection;
 1233              		.loc 1 425 0
 1234 0252 084B     		ldr	r3, .L66+20
 1235 0254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236              	.L42:
 426:main.c        **** }
 1237              		.loc 1 426 0
 1238 0256 1846     		mov	r0, r3
 1239 0258 0837     		adds	r7, r7, #8
 1240              		.cfi_def_cfa_offset 8
 1241 025a BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 025c 80BD     		pop	{r7, pc}
 1245              	.L67:
 1246 025e 00BF     		.align	2
 1247              	.L66:
 1248 0260 00000000 		.word	currentOrientation
 1249 0264 00000000 		.word	yBlocksize
 1250 0268 00000000 		.word	xBlocksize
 1251 026c 00000000 		.word	stoppedAfterTurn
 1252 0270 00000000 		.word	stopBuffer
 1253 0274 00000000 		.word	previousDirection
 1254 0278 00000000 		.word	totalDistance
 1255 027c 00000000 		.word	s3
 1256 0280 00000000 		.word	s4
 1257 0284 00000000 		.word	s5
 1258 0288 00000000 		.word	s6
 1259 028c 00000000 		.word	currentDirection
 1260              		.cfi_endproc
 1261              	.LFE73:
 1262              		.size	CheckSensorDirection, .-CheckSensorDirection
 1263              		.section	.text.getNextInstruction,"ax",%progbits
 1264              		.align	2
 1265              		.global	getNextInstruction
 1266              		.thumb
 1267              		.thumb_func
 1268              		.type	getNextInstruction, %function
 1269              	getNextInstruction:
 1270              	.LFB74:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 31


 427:main.c        **** 
 428:main.c        **** // get next instruction
 429:main.c        **** Instruction getNextInstruction(int numSteps, Instruction instructionList[numSteps]) {
 1271              		.loc 1 429 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 32
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 1276 0000 90B4     		push	{r4, r7}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 4, -8
 1279              		.cfi_offset 7, -4
 1280 0002 88B0     		sub	sp, sp, #32
 1281              		.cfi_def_cfa_offset 40
 1282 0004 00AF     		add	r7, sp, #0
 1283              		.cfi_def_cfa_register 7
 1284 0006 F860     		str	r0, [r7, #12]
 1285 0008 B960     		str	r1, [r7, #8]
 1286 000a 7A60     		str	r2, [r7, #4]
 1287              	.LBB3:
 430:main.c        ****     Instruction out;
 431:main.c        ****     // input is list of instructions and robot will react accordingly
 432:main.c        ****     for(int i = 0; i < numSteps; i++) {
 1288              		.loc 1 432 0
 1289 000c 0023     		movs	r3, #0
 1290 000e FB61     		str	r3, [r7, #28]
 1291 0010 34E0     		b	.L69
 1292              	.L72:
 433:main.c        ****         if(instructionList[i].direction != Skip) {
 1293              		.loc 1 433 0
 1294 0012 FA69     		ldr	r2, [r7, #28]
 1295 0014 1346     		mov	r3, r2
 1296 0016 5B00     		lsls	r3, r3, #1
 1297 0018 1344     		add	r3, r3, r2
 1298 001a 9B00     		lsls	r3, r3, #2
 1299 001c 1A46     		mov	r2, r3
 1300 001e 7B68     		ldr	r3, [r7, #4]
 1301 0020 1344     		add	r3, r3, r2
 1302 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1303 0024 062B     		cmp	r3, #6
 1304 0026 26D0     		beq	.L70
 434:main.c        ****             out.direction = instructionList[i].direction;
 1305              		.loc 1 434 0
 1306 0028 FA69     		ldr	r2, [r7, #28]
 1307 002a 1346     		mov	r3, r2
 1308 002c 5B00     		lsls	r3, r3, #1
 1309 002e 1344     		add	r3, r3, r2
 1310 0030 9B00     		lsls	r3, r3, #2
 1311 0032 1A46     		mov	r2, r3
 1312 0034 7B68     		ldr	r3, [r7, #4]
 1313 0036 1344     		add	r3, r3, r2
 1314 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1315 003a 3B74     		strb	r3, [r7, #16]
 435:main.c        ****             out.ignoreL = instructionList[i].ignoreL;
 1316              		.loc 1 435 0
 1317 003c FA69     		ldr	r2, [r7, #28]
 1318 003e 1346     		mov	r3, r2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 32


 1319 0040 5B00     		lsls	r3, r3, #1
 1320 0042 1344     		add	r3, r3, r2
 1321 0044 9B00     		lsls	r3, r3, #2
 1322 0046 1A46     		mov	r2, r3
 1323 0048 7B68     		ldr	r3, [r7, #4]
 1324 004a 1344     		add	r3, r3, r2
 1325 004c 5B68     		ldr	r3, [r3, #4]
 1326 004e 7B61     		str	r3, [r7, #20]
 436:main.c        ****             out.ignoreR = instructionList[i].ignoreR;
 1327              		.loc 1 436 0
 1328 0050 FA69     		ldr	r2, [r7, #28]
 1329 0052 1346     		mov	r3, r2
 1330 0054 5B00     		lsls	r3, r3, #1
 1331 0056 1344     		add	r3, r3, r2
 1332 0058 9B00     		lsls	r3, r3, #2
 1333 005a 1A46     		mov	r2, r3
 1334 005c 7B68     		ldr	r3, [r7, #4]
 1335 005e 1344     		add	r3, r3, r2
 1336 0060 9B68     		ldr	r3, [r3, #8]
 1337 0062 BB61     		str	r3, [r7, #24]
 437:main.c        ****             return out; // return next instruction
 1338              		.loc 1 437 0
 1339 0064 FB68     		ldr	r3, [r7, #12]
 1340 0066 1C46     		mov	r4, r3
 1341 0068 07F11003 		add	r3, r7, #16
 1342 006c 93E80700 		ldmia	r3, {r0, r1, r2}
 1343 0070 84E80700 		stmia	r4, {r0, r1, r2}
 1344 0074 0EE0     		b	.L68
 1345              	.L70:
 432:main.c        ****         if(instructionList[i].direction != Skip) {
 1346              		.loc 1 432 0 discriminator 2
 1347 0076 FB69     		ldr	r3, [r7, #28]
 1348 0078 0133     		adds	r3, r3, #1
 1349 007a FB61     		str	r3, [r7, #28]
 1350              	.L69:
 432:main.c        ****         if(instructionList[i].direction != Skip) {
 1351              		.loc 1 432 0 is_stmt 0 discriminator 1
 1352 007c FA69     		ldr	r2, [r7, #28]
 1353 007e BB68     		ldr	r3, [r7, #8]
 1354 0080 9A42     		cmp	r2, r3
 1355 0082 C6DB     		blt	.L72
 1356              	.LBE3:
 438:main.c        ****         }
 439:main.c        ****     }
 440:main.c        ****     return out;
 1357              		.loc 1 440 0 is_stmt 1
 1358 0084 FB68     		ldr	r3, [r7, #12]
 1359 0086 1C46     		mov	r4, r3
 1360 0088 07F11003 		add	r3, r7, #16
 1361 008c 93E80700 		ldmia	r3, {r0, r1, r2}
 1362 0090 84E80700 		stmia	r4, {r0, r1, r2}
 1363              	.L68:
 441:main.c        **** }
 1364              		.loc 1 441 0
 1365 0094 F868     		ldr	r0, [r7, #12]
 1366 0096 2037     		adds	r7, r7, #32
 1367              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 33


 1368 0098 BD46     		mov	sp, r7
 1369              		.cfi_def_cfa_register 13
 1370              		@ sp needed
 1371 009a 90BC     		pop	{r4, r7}
 1372              		.cfi_restore 7
 1373              		.cfi_restore 4
 1374              		.cfi_def_cfa_offset 0
 1375 009c 7047     		bx	lr
 1376              		.cfi_endproc
 1377              	.LFE74:
 1378              		.size	getNextInstruction, .-getNextInstruction
 1379 009e 00BF     		.section	.text.SetRobotMovement,"ax",%progbits
 1380              		.align	2
 1381              		.global	SetRobotMovement
 1382              		.thumb
 1383              		.thumb_func
 1384              		.type	SetRobotMovement, %function
 1385              	SetRobotMovement:
 1386              	.LFB75:
 442:main.c        **** 
 443:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 444:main.c        **** void SetRobotMovement() {
 1387              		.loc 1 444 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 16
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 90B5     		push	{r4, r7, lr}
 1392              		.cfi_def_cfa_offset 12
 1393              		.cfi_offset 4, -12
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 85B0     		sub	sp, sp, #20
 1397              		.cfi_def_cfa_offset 32
 1398 0004 00AF     		add	r7, sp, #0
 1399              		.cfi_def_cfa_register 7
 445:main.c        ****     currentInstruction = getNextInstruction(numSteps, instructionList); // get current/ next instru
 1400              		.loc 1 445 0
 1401 0006 264B     		ldr	r3, .L89
 1402 0008 1968     		ldr	r1, [r3]
 1403 000a 264B     		ldr	r3, .L89+4
 1404 000c 1A68     		ldr	r2, [r3]
 1405 000e 264C     		ldr	r4, .L89+8
 1406 0010 3B46     		mov	r3, r7
 1407 0012 1846     		mov	r0, r3
 1408 0014 FFF7FEFF 		bl	getNextInstruction
 1409 0018 3B46     		mov	r3, r7
 1410 001a 93E80700 		ldmia	r3, {r0, r1, r2}
 1411 001e 84E80700 		stmia	r4, {r0, r1, r2}
 446:main.c        ****     currentDirection = CheckSensorDirection(); // check sensors, adjust robot movement
 1412              		.loc 1 446 0
 1413 0022 FFF7FEFF 		bl	CheckSensorDirection
 1414 0026 0346     		mov	r3, r0
 1415 0028 1A46     		mov	r2, r3
 1416 002a 204B     		ldr	r3, .L89+12
 1417 002c 1A70     		strb	r2, [r3]
 447:main.c        ****     // move robot depending on sensors
 448:main.c        ****     switch (currentDirection) {
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 34


 1418              		.loc 1 448 0
 1419 002e 1F4B     		ldr	r3, .L89+12
 1420 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 0032 092B     		cmp	r3, #9
 1422 0034 2FD8     		bhi	.L87
 1423 0036 01A2     		adr	r2, .L77
 1424 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1425              		.p2align 2
 1426              	.L77:
 1427 003c 65000000 		.word	.L76+1
 1428 0040 6B000000 		.word	.L78+1
 1429 0044 71000000 		.word	.L79+1
 1430 0048 7D000000 		.word	.L80+1
 1431 004c 77000000 		.word	.L81+1
 1432 0050 83000000 		.word	.L82+1
 1433 0054 95000000 		.word	.L88+1
 1434 0058 95000000 		.word	.L88+1
 1435 005c 89000000 		.word	.L85+1
 1436 0060 8F000000 		.word	.L86+1
 1437              		.p2align 1
 1438              	.L76:
 449:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 450:main.c        ****         case Forward:
 451:main.c        ****             moveForward();
 1439              		.loc 1 451 0
 1440 0064 FFF7FEFF 		bl	moveForward
 452:main.c        ****             break;
 1441              		.loc 1 452 0
 1442 0068 15E0     		b	.L75
 1443              	.L78:
 453:main.c        ****         case TurnRight:
 454:main.c        ****             turnRight();
 1444              		.loc 1 454 0
 1445 006a FFF7FEFF 		bl	turnRight
 455:main.c        ****             break;
 1446              		.loc 1 455 0
 1447 006e 12E0     		b	.L75
 1448              	.L79:
 456:main.c        ****         case TurnLeft:
 457:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1449              		.loc 1 457 0
 1450 0070 FFF7FEFF 		bl	turnLeft
 458:main.c        ****             break;
 1451              		.loc 1 458 0
 1452 0074 0FE0     		b	.L75
 1453              	.L81:
 459:main.c        ****         case AdjustToTheRight:
 460:main.c        ****             adjustRight();
 1454              		.loc 1 460 0
 1455 0076 FFF7FEFF 		bl	adjustRight
 461:main.c        ****             break;
 1456              		.loc 1 461 0
 1457 007a 0CE0     		b	.L75
 1458              	.L80:
 462:main.c        ****         case AdjustToTheLeft:
 463:main.c        ****             adjustLeft();
 1459              		.loc 1 463 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 35


 1460 007c FFF7FEFF 		bl	adjustLeft
 464:main.c        ****             break;
 1461              		.loc 1 464 0
 1462 0080 09E0     		b	.L75
 1463              	.L82:
 465:main.c        ****         case Stop:
 466:main.c        ****             stopMoving();
 1464              		.loc 1 466 0
 1465 0082 FFF7FEFF 		bl	stopMoving
 467:main.c        ****             break;
 1466              		.loc 1 467 0
 1467 0086 06E0     		b	.L75
 1468              	.L85:
 468:main.c        ****         case ForwardAfterTurn:
 469:main.c        ****             moveForward();
 1469              		.loc 1 469 0
 1470 0088 FFF7FEFF 		bl	moveForward
 470:main.c        ****             break;
 1471              		.loc 1 470 0
 1472 008c 03E0     		b	.L75
 1473              	.L86:
 471:main.c        ****         case Backward:
 472:main.c        ****             moveBackward();
 1474              		.loc 1 472 0
 1475 008e FFF7FEFF 		bl	moveBackward
 473:main.c        ****             break;
 1476              		.loc 1 473 0
 1477 0092 00E0     		b	.L75
 1478              	.L88:
 474:main.c        ****         case waitForTurn:
 475:main.c        ****             break;
 476:main.c        ****         /*case waitForLeftTurn:
 477:main.c        ****             moveForward();
 478:main.c        ****             break;
 479:main.c        ****         case waitForRightTurn:
 480:main.c        ****             moveForward();
 481:main.c        ****             break;*/
 482:main.c        ****         case Unknown:
 483:main.c        ****             // UNKNOWN CONFIGURATION
 484:main.c        ****             break;  
 1479              		.loc 1 484 0
 1480 0094 00BF     		nop
 1481              	.L75:
 1482              	.L87:
 485:main.c        ****     }
 486:main.c        **** }...
 1483              		.loc 1 486 0
 1484 0096 00BF     		nop
 1485 0098 1437     		adds	r7, r7, #20
 1486              		.cfi_def_cfa_offset 12
 1487 009a BD46     		mov	sp, r7
 1488              		.cfi_def_cfa_register 13
 1489              		@ sp needed
 1490 009c 90BD     		pop	{r4, r7, pc}
 1491              	.L90:
 1492 009e 00BF     		.align	2
 1493              	.L89:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 36


 1494 00a0 00000000 		.word	numSteps
 1495 00a4 00000000 		.word	instructionList
 1496 00a8 00000000 		.word	currentInstruction
 1497 00ac 00000000 		.word	currentDirection
 1498              		.cfi_endproc
 1499              	.LFE75:
 1500              		.size	SetRobotMovement, .-SetRobotMovement
 1501              		.text
 1502              	.Letext0:
 1503              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1504              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1505              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1506              		.file 5 "vars.h"
 1507              		.file 6 "pathfinding.h"
 1508              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1509              		.file 8 "map.h"
 1510              		.section	.debug_info,"",%progbits
 1511              	.Ldebug_info0:
 1512 0000 9A070000 		.4byte	0x79a
 1513 0004 0400     		.2byte	0x4
 1514 0006 00000000 		.4byte	.Ldebug_abbrev0
 1515 000a 04       		.byte	0x4
 1516 000b 01       		.uleb128 0x1
 1517 000c 72000000 		.4byte	.LASF122
 1518 0010 0C       		.byte	0xc
 1519 0011 30000000 		.4byte	.LASF123
 1520 0015 73010000 		.4byte	.LASF124
 1521 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1522 001d 00000000 		.4byte	0
 1523 0021 00000000 		.4byte	.Ldebug_line0
 1524 0025 02       		.uleb128 0x2
 1525 0026 01       		.byte	0x1
 1526 0027 06       		.byte	0x6
 1527 0028 9F050000 		.4byte	.LASF0
 1528 002c 02       		.uleb128 0x2
 1529 002d 01       		.byte	0x1
 1530 002e 08       		.byte	0x8
 1531 002f 25050000 		.4byte	.LASF1
 1532 0033 02       		.uleb128 0x2
 1533 0034 02       		.byte	0x2
 1534 0035 05       		.byte	0x5
 1535 0036 39040000 		.4byte	.LASF2
 1536 003a 02       		.uleb128 0x2
 1537 003b 02       		.byte	0x2
 1538 003c 07       		.byte	0x7
 1539 003d B6050000 		.4byte	.LASF3
 1540 0041 03       		.uleb128 0x3
 1541 0042 55000000 		.4byte	.LASF12
 1542 0046 02       		.byte	0x2
 1543 0047 3F       		.byte	0x3f
 1544 0048 4C000000 		.4byte	0x4c
 1545 004c 02       		.uleb128 0x2
 1546 004d 04       		.byte	0x4
 1547 004e 05       		.byte	0x5
 1548 004f 5B040000 		.4byte	.LASF4
 1549 0053 02       		.uleb128 0x2
 1550 0054 04       		.byte	0x4
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 37


 1551 0055 07       		.byte	0x7
 1552 0056 DB040000 		.4byte	.LASF5
 1553 005a 02       		.uleb128 0x2
 1554 005b 08       		.byte	0x8
 1555 005c 05       		.byte	0x5
 1556 005d 2D030000 		.4byte	.LASF6
 1557 0061 02       		.uleb128 0x2
 1558 0062 08       		.byte	0x8
 1559 0063 07       		.byte	0x7
 1560 0064 E8010000 		.4byte	.LASF7
 1561 0068 04       		.uleb128 0x4
 1562 0069 04       		.byte	0x4
 1563 006a 05       		.byte	0x5
 1564 006b 696E7400 		.ascii	"int\000"
 1565 006f 02       		.uleb128 0x2
 1566 0070 04       		.byte	0x4
 1567 0071 07       		.byte	0x7
 1568 0072 48000000 		.4byte	.LASF8
 1569 0076 02       		.uleb128 0x2
 1570 0077 08       		.byte	0x8
 1571 0078 04       		.byte	0x4
 1572 0079 FD030000 		.4byte	.LASF9
 1573 007d 02       		.uleb128 0x2
 1574 007e 04       		.byte	0x4
 1575 007f 07       		.byte	0x7
 1576 0080 D2040000 		.4byte	.LASF10
 1577 0084 02       		.uleb128 0x2
 1578 0085 01       		.byte	0x1
 1579 0086 08       		.byte	0x8
 1580 0087 CB020000 		.4byte	.LASF11
 1581 008b 03       		.uleb128 0x3
 1582 008c FE040000 		.4byte	.LASF13
 1583 0090 03       		.byte	0x3
 1584 0091 2C       		.byte	0x2c
 1585 0092 41000000 		.4byte	0x41
 1586 0096 05       		.uleb128 0x5
 1587 0097 1F060000 		.4byte	.LASF14
 1588 009b 04       		.byte	0x4
 1589 009c E901     		.2byte	0x1e9
 1590 009e 2C000000 		.4byte	0x2c
 1591 00a2 05       		.uleb128 0x5
 1592 00a3 E9020000 		.4byte	.LASF15
 1593 00a7 04       		.byte	0x4
 1594 00a8 EA01     		.2byte	0x1ea
 1595 00aa 3A000000 		.4byte	0x3a
 1596 00ae 05       		.uleb128 0x5
 1597 00af AD030000 		.4byte	.LASF16
 1598 00b3 04       		.byte	0x4
 1599 00b4 EB01     		.2byte	0x1eb
 1600 00b6 53000000 		.4byte	0x53
 1601 00ba 05       		.uleb128 0x5
 1602 00bb F0020000 		.4byte	.LASF17
 1603 00bf 04       		.byte	0x4
 1604 00c0 EC01     		.2byte	0x1ec
 1605 00c2 25000000 		.4byte	0x25
 1606 00c6 05       		.uleb128 0x5
 1607 00c7 5F000000 		.4byte	.LASF18
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 38


 1608 00cb 04       		.byte	0x4
 1609 00cc ED01     		.2byte	0x1ed
 1610 00ce 33000000 		.4byte	0x33
 1611 00d2 02       		.uleb128 0x2
 1612 00d3 04       		.byte	0x4
 1613 00d4 04       		.byte	0x4
 1614 00d5 F8040000 		.4byte	.LASF19
 1615 00d9 02       		.uleb128 0x2
 1616 00da 08       		.byte	0x8
 1617 00db 04       		.byte	0x4
 1618 00dc 25060000 		.4byte	.LASF20
 1619 00e0 06       		.uleb128 0x6
 1620 00e1 CF030000 		.4byte	.LASF45
 1621 00e5 20       		.byte	0x20
 1622 00e6 05       		.byte	0x5
 1623 00e7 28       		.byte	0x28
 1624 00e8 B9010000 		.4byte	0x1b9
 1625 00ec 07       		.uleb128 0x7
 1626 00ed D9030000 		.4byte	.LASF21
 1627 00f1 05       		.byte	0x5
 1628 00f2 2A       		.byte	0x2a
 1629 00f3 BA000000 		.4byte	0xba
 1630 00f7 00       		.byte	0
 1631 00f8 07       		.uleb128 0x7
 1632 00f9 E2010000 		.4byte	.LASF22
 1633 00fd 05       		.byte	0x5
 1634 00fe 2B       		.byte	0x2b
 1635 00ff 96000000 		.4byte	0x96
 1636 0103 01       		.byte	0x1
 1637 0104 07       		.uleb128 0x7
 1638 0105 06050000 		.4byte	.LASF23
 1639 0109 05       		.byte	0x5
 1640 010a 2C       		.byte	0x2c
 1641 010b C6000000 		.4byte	0xc6
 1642 010f 02       		.byte	0x2
 1643 0110 07       		.uleb128 0x7
 1644 0111 A2020000 		.4byte	.LASF24
 1645 0115 05       		.byte	0x5
 1646 0116 2D       		.byte	0x2d
 1647 0117 C6000000 		.4byte	0xc6
 1648 011b 04       		.byte	0x4
 1649 011c 07       		.uleb128 0x7
 1650 011d C9050000 		.4byte	.LASF25
 1651 0121 05       		.byte	0x5
 1652 0122 2E       		.byte	0x2e
 1653 0123 C6000000 		.4byte	0xc6
 1654 0127 06       		.byte	0x6
 1655 0128 07       		.uleb128 0x7
 1656 0129 4C060000 		.4byte	.LASF26
 1657 012d 05       		.byte	0x5
 1658 012e 2F       		.byte	0x2f
 1659 012f C6000000 		.4byte	0xc6
 1660 0133 08       		.byte	0x8
 1661 0134 07       		.uleb128 0x7
 1662 0135 72030000 		.4byte	.LASF27
 1663 0139 05       		.byte	0x5
 1664 013a 30       		.byte	0x30
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 39


 1665 013b C6000000 		.4byte	0xc6
 1666 013f 0A       		.byte	0xa
 1667 0140 07       		.uleb128 0x7
 1668 0141 D0020000 		.4byte	.LASF28
 1669 0145 05       		.byte	0x5
 1670 0146 31       		.byte	0x31
 1671 0147 C6000000 		.4byte	0xc6
 1672 014b 0C       		.byte	0xc
 1673 014c 07       		.uleb128 0x7
 1674 014d DE030000 		.4byte	.LASF29
 1675 0151 05       		.byte	0x5
 1676 0152 32       		.byte	0x32
 1677 0153 C6000000 		.4byte	0xc6
 1678 0157 0E       		.byte	0xe
 1679 0158 07       		.uleb128 0x7
 1680 0159 3B030000 		.4byte	.LASF30
 1681 015d 05       		.byte	0x5
 1682 015e 33       		.byte	0x33
 1683 015f C6000000 		.4byte	0xc6
 1684 0163 10       		.byte	0x10
 1685 0164 07       		.uleb128 0x7
 1686 0165 B9040000 		.4byte	.LASF31
 1687 0169 05       		.byte	0x5
 1688 016a 34       		.byte	0x34
 1689 016b C6000000 		.4byte	0xc6
 1690 016f 12       		.byte	0x12
 1691 0170 07       		.uleb128 0x7
 1692 0171 6C060000 		.4byte	.LASF32
 1693 0175 05       		.byte	0x5
 1694 0176 35       		.byte	0x35
 1695 0177 C6000000 		.4byte	0xc6
 1696 017b 14       		.byte	0x14
 1697 017c 07       		.uleb128 0x7
 1698 017d 00030000 		.4byte	.LASF33
 1699 0181 05       		.byte	0x5
 1700 0182 36       		.byte	0x36
 1701 0183 C6000000 		.4byte	0xc6
 1702 0187 16       		.byte	0x16
 1703 0188 07       		.uleb128 0x7
 1704 0189 1A010000 		.4byte	.LASF34
 1705 018d 05       		.byte	0x5
 1706 018e 37       		.byte	0x37
 1707 018f C6000000 		.4byte	0xc6
 1708 0193 18       		.byte	0x18
 1709 0194 07       		.uleb128 0x7
 1710 0195 95040000 		.4byte	.LASF35
 1711 0199 05       		.byte	0x5
 1712 019a 38       		.byte	0x38
 1713 019b C6000000 		.4byte	0xc6
 1714 019f 1A       		.byte	0x1a
 1715 01a0 07       		.uleb128 0x7
 1716 01a1 69030000 		.4byte	.LASF36
 1717 01a5 05       		.byte	0x5
 1718 01a6 39       		.byte	0x39
 1719 01a7 C6000000 		.4byte	0xc6
 1720 01ab 1C       		.byte	0x1c
 1721 01ac 07       		.uleb128 0x7
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 40


 1722 01ad 58010000 		.4byte	.LASF37
 1723 01b1 05       		.byte	0x5
 1724 01b2 3A       		.byte	0x3a
 1725 01b3 C6000000 		.4byte	0xc6
 1726 01b7 1E       		.byte	0x1e
 1727 01b8 00       		.byte	0
 1728 01b9 08       		.uleb128 0x8
 1729 01ba 1B000000 		.4byte	.LASF50
 1730 01be 01       		.byte	0x1
 1731 01bf 2C000000 		.4byte	0x2c
 1732 01c3 06       		.byte	0x6
 1733 01c4 0D       		.byte	0xd
 1734 01c5 F4010000 		.4byte	0x1f4
 1735 01c9 09       		.uleb128 0x9
 1736 01ca 89050000 		.4byte	.LASF38
 1737 01ce 00       		.byte	0
 1738 01cf 09       		.uleb128 0x9
 1739 01d0 1D030000 		.4byte	.LASF39
 1740 01d4 01       		.byte	0x1
 1741 01d5 09       		.uleb128 0x9
 1742 01d6 B4030000 		.4byte	.LASF40
 1743 01da 02       		.byte	0x2
 1744 01db 09       		.uleb128 0x9
 1745 01dc 57030000 		.4byte	.LASF41
 1746 01e0 03       		.byte	0x3
 1747 01e1 09       		.uleb128 0x9
 1748 01e2 3F020000 		.4byte	.LASF42
 1749 01e6 04       		.byte	0x4
 1750 01e7 09       		.uleb128 0x9
 1751 01e8 89020000 		.4byte	.LASF43
 1752 01ec 05       		.byte	0x5
 1753 01ed 09       		.uleb128 0x9
 1754 01ee 76050000 		.4byte	.LASF44
 1755 01f2 06       		.byte	0x6
 1756 01f3 00       		.byte	0
 1757 01f4 06       		.uleb128 0x6
 1758 01f5 FF010000 		.4byte	.LASF46
 1759 01f9 0C       		.byte	0xc
 1760 01fa 06       		.byte	0x6
 1761 01fb 0E       		.byte	0xe
 1762 01fc 25020000 		.4byte	0x225
 1763 0200 07       		.uleb128 0x7
 1764 0201 00000000 		.4byte	.LASF47
 1765 0205 06       		.byte	0x6
 1766 0206 0F       		.byte	0xf
 1767 0207 B9010000 		.4byte	0x1b9
 1768 020b 00       		.byte	0
 1769 020c 07       		.uleb128 0x7
 1770 020d 75060000 		.4byte	.LASF48
 1771 0211 06       		.byte	0x6
 1772 0212 10       		.byte	0x10
 1773 0213 68000000 		.4byte	0x68
 1774 0217 04       		.byte	0x4
 1775 0218 07       		.uleb128 0x7
 1776 0219 7D060000 		.4byte	.LASF49
 1777 021d 06       		.byte	0x6
 1778 021e 11       		.byte	0x11
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 41


 1779 021f 68000000 		.4byte	0x68
 1780 0223 08       		.byte	0x8
 1781 0224 00       		.byte	0
 1782 0225 03       		.uleb128 0x3
 1783 0226 FF010000 		.4byte	.LASF46
 1784 022a 06       		.byte	0x6
 1785 022b 12       		.byte	0x12
 1786 022c F4010000 		.4byte	0x1f4
 1787 0230 08       		.uleb128 0x8
 1788 0231 9D040000 		.4byte	.LASF51
 1789 0235 01       		.byte	0x1
 1790 0236 2C000000 		.4byte	0x2c
 1791 023a 06       		.byte	0x6
 1792 023b 14       		.byte	0x14
 1793 023c 58020000 		.4byte	0x258
 1794 0240 0A       		.uleb128 0xa
 1795 0241 557000   		.ascii	"Up\000"
 1796 0244 00       		.byte	0
 1797 0245 09       		.uleb128 0x9
 1798 0246 AE040000 		.4byte	.LASF52
 1799 024a 01       		.byte	0x1
 1800 024b 09       		.uleb128 0x9
 1801 024c 0D030000 		.4byte	.LASF53
 1802 0250 02       		.byte	0x2
 1803 0251 09       		.uleb128 0x9
 1804 0252 B3040000 		.4byte	.LASF54
 1805 0256 03       		.byte	0x3
 1806 0257 00       		.byte	0
 1807 0258 08       		.uleb128 0x8
 1808 0259 17050000 		.4byte	.LASF55
 1809 025d 01       		.byte	0x1
 1810 025e 2C000000 		.4byte	0x2c
 1811 0262 01       		.byte	0x1
 1812 0263 28       		.byte	0x28
 1813 0264 A5020000 		.4byte	0x2a5
 1814 0268 09       		.uleb128 0x9
 1815 0269 7B040000 		.4byte	.LASF56
 1816 026d 00       		.byte	0
 1817 026e 09       		.uleb128 0x9
 1818 026f C5030000 		.4byte	.LASF57
 1819 0273 01       		.byte	0x1
 1820 0274 09       		.uleb128 0x9
 1821 0275 84030000 		.4byte	.LASF58
 1822 0279 02       		.byte	0x2
 1823 027a 09       		.uleb128 0x9
 1824 027b 06060000 		.4byte	.LASF59
 1825 027f 03       		.byte	0x3
 1826 0280 09       		.uleb128 0x9
 1827 0281 49050000 		.4byte	.LASF60
 1828 0285 04       		.byte	0x4
 1829 0286 09       		.uleb128 0x9
 1830 0287 5A050000 		.4byte	.LASF61
 1831 028b 05       		.byte	0x5
 1832 028c 09       		.uleb128 0x9
 1833 028d 96030000 		.4byte	.LASF62
 1834 0291 06       		.byte	0x6
 1835 0292 09       		.uleb128 0x9
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 42


 1836 0293 96020000 		.4byte	.LASF63
 1837 0297 07       		.byte	0x7
 1838 0298 09       		.uleb128 0x9
 1839 0299 0A000000 		.4byte	.LASF64
 1840 029d 08       		.byte	0x8
 1841 029e 09       		.uleb128 0x9
 1842 029f 16060000 		.4byte	.LASF65
 1843 02a3 09       		.byte	0x9
 1844 02a4 00       		.byte	0
 1845 02a5 0B       		.uleb128 0xb
 1846 02a6 12030000 		.4byte	.LASF73
 1847 02aa 01       		.byte	0x1
 1848 02ab 40       		.byte	0x40
 1849 02ac 00000000 		.4byte	.LFB64
 1850 02b0 F4000000 		.4byte	.LFE64-.LFB64
 1851 02b4 01       		.uleb128 0x1
 1852 02b5 9C       		.byte	0x9c
 1853 02b6 D3020000 		.4byte	0x2d3
 1854 02ba 0C       		.uleb128 0xc
 1855 02bb 58000000 		.4byte	.LBB2
 1856 02bf 62000000 		.4byte	.LBE2-.LBB2
 1857 02c3 0D       		.uleb128 0xd
 1858 02c4 5D030000 		.4byte	.LASF72
 1859 02c8 01       		.byte	0x1
 1860 02c9 4E       		.byte	0x4e
 1861 02ca D2000000 		.4byte	0xd2
 1862 02ce 02       		.uleb128 0x2
 1863 02cf 91       		.byte	0x91
 1864 02d0 6C       		.sleb128 -20
 1865 02d1 00       		.byte	0
 1866 02d2 00       		.byte	0
 1867 02d3 0E       		.uleb128 0xe
 1868 02d4 4F040000 		.4byte	.LASF66
 1869 02d8 01       		.byte	0x1
 1870 02d9 59       		.byte	0x59
 1871 02da 00000000 		.4byte	.LFB65
 1872 02de 18000000 		.4byte	.LFE65-.LFB65
 1873 02e2 01       		.uleb128 0x1
 1874 02e3 9C       		.byte	0x9c
 1875 02e4 0E       		.uleb128 0xe
 1876 02e5 43040000 		.4byte	.LASF67
 1877 02e9 01       		.byte	0x1
 1878 02ea 5F       		.byte	0x5f
 1879 02eb 00000000 		.4byte	.LFB66
 1880 02ef 18000000 		.4byte	.LFE66-.LFB66
 1881 02f3 01       		.uleb128 0x1
 1882 02f4 9C       		.byte	0x9c
 1883 02f5 0E       		.uleb128 0xe
 1884 02f6 93050000 		.4byte	.LASF68
 1885 02fa 01       		.byte	0x1
 1886 02fb 65       		.byte	0x65
 1887 02fc 00000000 		.4byte	.LFB67
 1888 0300 18000000 		.4byte	.LFE67-.LFB67
 1889 0304 01       		.uleb128 0x1
 1890 0305 9C       		.byte	0x9c
 1891 0306 0E       		.uleb128 0xe
 1892 0307 00010000 		.4byte	.LASF69
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 43


 1893 030b 01       		.byte	0x1
 1894 030c 6B       		.byte	0x6b
 1895 030d 00000000 		.4byte	.LFB68
 1896 0311 18000000 		.4byte	.LFE68-.LFB68
 1897 0315 01       		.uleb128 0x1
 1898 0316 9C       		.byte	0x9c
 1899 0317 0F       		.uleb128 0xf
 1900 0318 28020000 		.4byte	.LASF70
 1901 031c 01       		.byte	0x1
 1902 031d 71       		.byte	0x71
 1903 031e 00000000 		.4byte	.LFB69
 1904 0322 38000000 		.4byte	.LFE69-.LFB69
 1905 0326 01       		.uleb128 0x1
 1906 0327 9C       		.byte	0x9c
 1907 0328 10       		.uleb128 0x10
 1908 0329 DB050000 		.4byte	.LASF71
 1909 032d 01       		.byte	0x1
 1910 032e 7D       		.byte	0x7d
 1911 032f 68000000 		.4byte	0x68
 1912 0333 00000000 		.4byte	.LFB70
 1913 0337 C0000000 		.4byte	.LFE70-.LFB70
 1914 033b 01       		.uleb128 0x1
 1915 033c 9C       		.byte	0x9c
 1916 033d 11       		.uleb128 0x11
 1917 033e 6D020000 		.4byte	.LASF77
 1918 0342 01       		.byte	0x1
 1919 0343 AC       		.byte	0xac
 1920 0344 C6000000 		.4byte	0xc6
 1921 0348 00000000 		.4byte	.LFB71
 1922 034c 54000000 		.4byte	.LFE71-.LFB71
 1923 0350 01       		.uleb128 0x1
 1924 0351 9C       		.byte	0x9c
 1925 0352 81030000 		.4byte	0x381
 1926 0356 12       		.uleb128 0x12
 1927 0357 DC010000 		.4byte	.LASF79
 1928 035b 01       		.byte	0x1
 1929 035c AC       		.byte	0xac
 1930 035d A2000000 		.4byte	0xa2
 1931 0361 02       		.uleb128 0x2
 1932 0362 91       		.byte	0x91
 1933 0363 66       		.sleb128 -26
 1934 0364 13       		.uleb128 0x13
 1935 0365 63707300 		.ascii	"cps\000"
 1936 0369 01       		.byte	0x1
 1937 036a AE       		.byte	0xae
 1938 036b D2000000 		.4byte	0xd2
 1939 036f 02       		.uleb128 0x2
 1940 0370 91       		.byte	0x91
 1941 0371 6C       		.sleb128 -20
 1942 0372 13       		.uleb128 0x13
 1943 0373 72706D00 		.ascii	"rpm\000"
 1944 0377 01       		.byte	0x1
 1945 0378 AF       		.byte	0xaf
 1946 0379 C6000000 		.4byte	0xc6
 1947 037d 02       		.uleb128 0x2
 1948 037e 91       		.byte	0x91
 1949 037f 6A       		.sleb128 -22
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 44


 1950 0380 00       		.byte	0
 1951 0381 14       		.uleb128 0x14
 1952 0382 47010000 		.4byte	.LASF82
 1953 0386 01       		.byte	0x1
 1954 0387 B7       		.byte	0xb7
 1955 0388 00000000 		.4byte	.LFB72
 1956 038c 34000000 		.4byte	.LFE72-.LFB72
 1957 0390 01       		.uleb128 0x1
 1958 0391 9C       		.byte	0x9c
 1959 0392 15       		.uleb128 0x15
 1960 0393 2C060000 		.4byte	.LASF74
 1961 0397 01       		.byte	0x1
 1962 0398 1101     		.2byte	0x111
 1963 039a 58020000 		.4byte	0x258
 1964 039e 00000000 		.4byte	.LFB73
 1965 03a2 90020000 		.4byte	.LFE73-.LFB73
 1966 03a6 01       		.uleb128 0x1
 1967 03a7 9C       		.byte	0x9c
 1968 03a8 CB030000 		.4byte	0x3cb
 1969 03ac 16       		.uleb128 0x16
 1970 03ad 37000000 		.4byte	.LASF75
 1971 03b1 01       		.byte	0x1
 1972 03b2 1201     		.2byte	0x112
 1973 03b4 D2000000 		.4byte	0xd2
 1974 03b8 02       		.uleb128 0x2
 1975 03b9 91       		.byte	0x91
 1976 03ba 74       		.sleb128 -12
 1977 03bb 16       		.uleb128 0x16
 1978 03bc 9E030000 		.4byte	.LASF76
 1979 03c0 01       		.byte	0x1
 1980 03c1 1901     		.2byte	0x119
 1981 03c3 58020000 		.4byte	0x258
 1982 03c7 02       		.uleb128 0x2
 1983 03c8 91       		.byte	0x91
 1984 03c9 73       		.sleb128 -13
 1985 03ca 00       		.byte	0
 1986 03cb 17       		.uleb128 0x17
 1987 03cc E0050000 		.4byte	.LASF78
 1988 03d0 01       		.byte	0x1
 1989 03d1 AD01     		.2byte	0x1ad
 1990 03d3 25020000 		.4byte	0x225
 1991 03d7 00000000 		.4byte	.LFB74
 1992 03db 9E000000 		.4byte	.LFE74-.LFB74
 1993 03df 01       		.uleb128 0x1
 1994 03e0 9C       		.byte	0x9c
 1995 03e1 2A040000 		.4byte	0x42a
 1996 03e5 18       		.uleb128 0x18
 1997 03e6 22010000 		.4byte	.LASF80
 1998 03ea 01       		.byte	0x1
 1999 03eb AD01     		.2byte	0x1ad
 2000 03ed 68000000 		.4byte	0x68
 2001 03f1 02       		.uleb128 0x2
 2002 03f2 91       		.byte	0x91
 2003 03f3 60       		.sleb128 -32
 2004 03f4 18       		.uleb128 0x18
 2005 03f5 D9020000 		.4byte	.LASF81
 2006 03f9 01       		.byte	0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 45


 2007 03fa AD01     		.2byte	0x1ad
 2008 03fc 2A040000 		.4byte	0x42a
 2009 0400 02       		.uleb128 0x2
 2010 0401 91       		.byte	0x91
 2011 0402 5C       		.sleb128 -36
 2012 0403 19       		.uleb128 0x19
 2013 0404 6F757400 		.ascii	"out\000"
 2014 0408 01       		.byte	0x1
 2015 0409 AE01     		.2byte	0x1ae
 2016 040b 25020000 		.4byte	0x225
 2017 040f 02       		.uleb128 0x2
 2018 0410 91       		.byte	0x91
 2019 0411 68       		.sleb128 -24
 2020 0412 0C       		.uleb128 0xc
 2021 0413 0C000000 		.4byte	.LBB3
 2022 0417 78000000 		.4byte	.LBE3-.LBB3
 2023 041b 19       		.uleb128 0x19
 2024 041c 6900     		.ascii	"i\000"
 2025 041e 01       		.byte	0x1
 2026 041f B001     		.2byte	0x1b0
 2027 0421 68000000 		.4byte	0x68
 2028 0425 02       		.uleb128 0x2
 2029 0426 91       		.byte	0x91
 2030 0427 74       		.sleb128 -12
 2031 0428 00       		.byte	0
 2032 0429 00       		.byte	0
 2033 042a 1A       		.uleb128 0x1a
 2034 042b 04       		.byte	0x4
 2035 042c 25020000 		.4byte	0x225
 2036 0430 1B       		.uleb128 0x1b
 2037 0431 17020000 		.4byte	.LASF83
 2038 0435 01       		.byte	0x1
 2039 0436 BC01     		.2byte	0x1bc
 2040 0438 00000000 		.4byte	.LFB75
 2041 043c B0000000 		.4byte	.LFE75-.LFB75
 2042 0440 01       		.uleb128 0x1
 2043 0441 9C       		.byte	0x9c
 2044 0442 1C       		.uleb128 0x1c
 2045 0443 64040000 		.4byte	.LASF84
 2046 0447 07       		.byte	0x7
 2047 0448 1207     		.2byte	0x712
 2048 044a 4E040000 		.4byte	0x44e
 2049 044e 1D       		.uleb128 0x1d
 2050 044f 8B000000 		.4byte	0x8b
 2051 0453 1E       		.uleb128 0x1e
 2052 0454 747300   		.ascii	"ts\000"
 2053 0457 05       		.byte	0x5
 2054 0458 10       		.byte	0x10
 2055 0459 96000000 		.4byte	0x96
 2056 045d 05       		.uleb128 0x5
 2057 045e 03       		.byte	0x3
 2058 045f 00000000 		.4byte	ts
 2059 0463 1F       		.uleb128 0x1f
 2060 0464 5F050000 		.4byte	.LASF85
 2061 0468 05       		.byte	0x5
 2062 0469 11       		.byte	0x11
 2063 046a A2000000 		.4byte	0xa2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 46


 2064 046e 05       		.uleb128 0x5
 2065 046f 03       		.byte	0x3
 2066 0470 00000000 		.4byte	ts_enc
 2067 0474 1F       		.uleb128 0x1f
 2068 0475 71040000 		.4byte	.LASF86
 2069 0479 05       		.byte	0x5
 2070 047a 12       		.byte	0x12
 2071 047b A2000000 		.4byte	0xa2
 2072 047f 05       		.uleb128 0x5
 2073 0480 03       		.byte	0x3
 2074 0481 00000000 		.4byte	ts_update
 2075 0485 1F       		.uleb128 0x1f
 2076 0486 8D030000 		.4byte	.LASF87
 2077 048a 05       		.byte	0x5
 2078 048b 13       		.byte	0x13
 2079 048c A2000000 		.4byte	0xa2
 2080 0490 05       		.uleb128 0x5
 2081 0491 03       		.byte	0x3
 2082 0492 00000000 		.4byte	ts_speed
 2083 0496 1F       		.uleb128 0x1f
 2084 0497 AD020000 		.4byte	.LASF88
 2085 049b 05       		.byte	0x5
 2086 049c 14       		.byte	0x14
 2087 049d A2000000 		.4byte	0xa2
 2088 04a1 05       		.uleb128 0x5
 2089 04a2 03       		.byte	0x3
 2090 04a3 00000000 		.4byte	ts_display
 2091 04a7 1F       		.uleb128 0x1f
 2092 04a8 61020000 		.4byte	.LASF89
 2093 04ac 05       		.byte	0x5
 2094 04ad 16       		.byte	0x16
 2095 04ae 96000000 		.4byte	0x96
 2096 04b2 05       		.uleb128 0x5
 2097 04b3 03       		.byte	0x3
 2098 04b4 00000000 		.4byte	flag_ts_enc
 2099 04b8 1F       		.uleb128 0x1f
 2100 04b9 52020000 		.4byte	.LASF90
 2101 04bd 05       		.byte	0x5
 2102 04be 17       		.byte	0x17
 2103 04bf 96000000 		.4byte	0x96
 2104 04c3 05       		.uleb128 0x5
 2105 04c4 03       		.byte	0x3
 2106 04c5 00000000 		.4byte	flag_ts_update
 2107 04c9 1F       		.uleb128 0x1f
 2108 04ca 09040000 		.4byte	.LASF91
 2109 04ce 05       		.byte	0x5
 2110 04cf 18       		.byte	0x18
 2111 04d0 96000000 		.4byte	0x96
 2112 04d4 05       		.uleb128 0x5
 2113 04d5 03       		.byte	0x3
 2114 04d6 00000000 		.4byte	flag_ts_speed
 2115 04da 1F       		.uleb128 0x1f
 2116 04db 66050000 		.4byte	.LASF92
 2117 04df 05       		.byte	0x5
 2118 04e0 19       		.byte	0x19
 2119 04e1 96000000 		.4byte	0x96
 2120 04e5 05       		.uleb128 0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 47


 2121 04e6 03       		.byte	0x3
 2122 04e7 00000000 		.4byte	flag_ts_display
 2123 04eb 1F       		.uleb128 0x1f
 2124 04ec 26040000 		.4byte	.LASF93
 2125 04f0 05       		.byte	0x5
 2126 04f1 1B       		.byte	0x1b
 2127 04f2 96000000 		.4byte	0x96
 2128 04f6 05       		.uleb128 0x5
 2129 04f7 03       		.byte	0x3
 2130 04f8 00000000 		.4byte	flag_rx
 2131 04fc 1F       		.uleb128 0x1f
 2132 04fd 0B020000 		.4byte	.LASF94
 2133 0501 05       		.byte	0x5
 2134 0502 1C       		.byte	0x1c
 2135 0503 96000000 		.4byte	0x96
 2136 0507 05       		.uleb128 0x5
 2137 0508 03       		.byte	0x3
 2138 0509 00000000 		.4byte	flag_packet
 2139 050d 1F       		.uleb128 0x1f
 2140 050e 5D060000 		.4byte	.LASF95
 2141 0512 05       		.byte	0x5
 2142 0513 1D       		.byte	0x1d
 2143 0514 96000000 		.4byte	0x96
 2144 0518 05       		.uleb128 0x5
 2145 0519 03       		.byte	0x3
 2146 051a 00000000 		.4byte	flag_KB_string
 2147 051e 1F       		.uleb128 0x1f
 2148 051f 17040000 		.4byte	.LASF96
 2149 0523 05       		.byte	0x5
 2150 0524 1F       		.byte	0x1f
 2151 0525 96000000 		.4byte	0x96
 2152 0529 05       		.uleb128 0x5
 2153 052a 03       		.byte	0x3
 2154 052b 00000000 		.4byte	dataready_flag
 2155 052f 1F       		.uleb128 0x1f
 2156 0530 2B010000 		.4byte	.LASF97
 2157 0534 05       		.byte	0x5
 2158 0535 21       		.byte	0x21
 2159 0536 96000000 		.4byte	0x96
 2160 053a 05       		.uleb128 0x5
 2161 053b 03       		.byte	0x3
 2162 053c 00000000 		.4byte	flag_rf_transmission_active
 2163 0540 20       		.uleb128 0x20
 2164 0541 84000000 		.4byte	0x84
 2165 0545 50050000 		.4byte	0x550
 2166 0549 21       		.uleb128 0x21
 2167 054a 7D000000 		.4byte	0x7d
 2168 054e 3F       		.byte	0x3f
 2169 054f 00       		.byte	0
 2170 0550 1F       		.uleb128 0x1f
 2171 0551 7B050000 		.4byte	.LASF98
 2172 0555 05       		.byte	0x5
 2173 0556 24       		.byte	0x24
 2174 0557 40050000 		.4byte	0x540
 2175 055b 05       		.uleb128 0x5
 2176 055c 03       		.byte	0x3
 2177 055d 00000000 		.4byte	displaystring
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 48


 2178 0561 1F       		.uleb128 0x1f
 2179 0562 44050000 		.4byte	.LASF99
 2180 0566 05       		.byte	0x5
 2181 0567 25       		.byte	0x25
 2182 0568 40050000 		.4byte	0x540
 2183 056c 05       		.uleb128 0x5
 2184 056d 03       		.byte	0x3
 2185 056e 00000000 		.4byte	line
 2186 0572 1F       		.uleb128 0x1f
 2187 0573 11050000 		.4byte	.LASF100
 2188 0577 05       		.byte	0x5
 2189 0578 25       		.byte	0x25
 2190 0579 40050000 		.4byte	0x540
 2191 057d 05       		.uleb128 0x5
 2192 057e 03       		.byte	0x3
 2193 057f 00000000 		.4byte	entry
 2194 0583 20       		.uleb128 0x20
 2195 0584 96000000 		.4byte	0x96
 2196 0588 93050000 		.4byte	0x593
 2197 058c 21       		.uleb128 0x21
 2198 058d 7D000000 		.4byte	0x7d
 2199 0591 3F       		.byte	0x3f
 2200 0592 00       		.byte	0
 2201 0593 1F       		.uleb128 0x1f
 2202 0594 D2010000 		.4byte	.LASF101
 2203 0598 05       		.byte	0x5
 2204 0599 26       		.byte	0x26
 2205 059a 83050000 		.4byte	0x583
 2206 059e 05       		.uleb128 0x5
 2207 059f 03       		.byte	0x3
 2208 05a0 00000000 		.4byte	usbBuffer
 2209 05a4 1F       		.uleb128 0x1f
 2210 05a5 65000000 		.4byte	.LASF102
 2211 05a9 05       		.byte	0x5
 2212 05aa 3C       		.byte	0x3c
 2213 05ab E0000000 		.4byte	0xe0
 2214 05af 05       		.uleb128 0x5
 2215 05b0 03       		.byte	0x3
 2216 05b1 00000000 		.4byte	system_state
 2217 05b5 20       		.uleb128 0x20
 2218 05b6 68000000 		.4byte	0x68
 2219 05ba CB050000 		.4byte	0x5cb
 2220 05be 21       		.uleb128 0x21
 2221 05bf 7D000000 		.4byte	0x7d
 2222 05c3 0E       		.byte	0xe
 2223 05c4 21       		.uleb128 0x21
 2224 05c5 7D000000 		.4byte	0x7d
 2225 05c9 12       		.byte	0x12
 2226 05ca 00       		.byte	0
 2227 05cb 22       		.uleb128 0x22
 2228 05cc 6D617000 		.ascii	"map\000"
 2229 05d0 08       		.byte	0x8
 2230 05d1 04       		.byte	0x4
 2231 05d2 B5050000 		.4byte	0x5b5
 2232 05d6 20       		.uleb128 0x20
 2233 05d7 68000000 		.4byte	0x68
 2234 05db EC050000 		.4byte	0x5ec
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 49


 2235 05df 21       		.uleb128 0x21
 2236 05e0 7D000000 		.4byte	0x7d
 2237 05e4 04       		.byte	0x4
 2238 05e5 21       		.uleb128 0x21
 2239 05e6 7D000000 		.4byte	0x7d
 2240 05ea 01       		.byte	0x1
 2241 05eb 00       		.byte	0
 2242 05ec 23       		.uleb128 0x23
 2243 05ed 7A030000 		.4byte	.LASF103
 2244 05f1 08       		.byte	0x8
 2245 05f2 05       		.byte	0x5
 2246 05f3 D6050000 		.4byte	0x5d6
 2247 05f7 1F       		.uleb128 0x1f
 2248 05f8 C1040000 		.4byte	.LASF104
 2249 05fc 01       		.byte	0x1
 2250 05fd 29       		.byte	0x29
 2251 05fe 58020000 		.4byte	0x258
 2252 0602 05       		.uleb128 0x5
 2253 0603 03       		.byte	0x3
 2254 0604 00000000 		.4byte	currentDirection
 2255 0608 1F       		.uleb128 0x1f
 2256 0609 EB030000 		.4byte	.LASF105
 2257 060d 01       		.byte	0x1
 2258 060e 29       		.byte	0x29
 2259 060f 58020000 		.4byte	0x258
 2260 0613 05       		.uleb128 0x5
 2261 0614 03       		.byte	0x3
 2262 0615 00000000 		.4byte	previousDirection
 2263 0619 1F       		.uleb128 0x1f
 2264 061a B8020000 		.4byte	.LASF106
 2265 061e 01       		.byte	0x1
 2266 061f 2A       		.byte	0x2a
 2267 0620 30020000 		.4byte	0x230
 2268 0624 05       		.uleb128 0x5
 2269 0625 03       		.byte	0x3
 2270 0626 00000000 		.4byte	currentOrientation
 2271 062a 1F       		.uleb128 0x1f
 2272 062b 43030000 		.4byte	.LASF107
 2273 062f 01       		.byte	0x1
 2274 0630 2A       		.byte	0x2a
 2275 0631 30020000 		.4byte	0x230
 2276 0635 05       		.uleb128 0x5
 2277 0636 03       		.byte	0x3
 2278 0637 00000000 		.4byte	previousOrientation
 2279 063b 1F       		.uleb128 0x1f
 2280 063c F3050000 		.4byte	.LASF108
 2281 0640 01       		.byte	0x1
 2282 0641 2B       		.byte	0x2b
 2283 0642 25020000 		.4byte	0x225
 2284 0646 05       		.uleb128 0x5
 2285 0647 03       		.byte	0x3
 2286 0648 00000000 		.4byte	currentInstruction
 2287 064c 1F       		.uleb128 0x1f
 2288 064d 22010000 		.4byte	.LASF80
 2289 0651 01       		.byte	0x1
 2290 0652 2C       		.byte	0x2c
 2291 0653 68000000 		.4byte	0x68
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 50


 2292 0657 05       		.uleb128 0x5
 2293 0658 03       		.byte	0x3
 2294 0659 00000000 		.4byte	numSteps
 2295 065d 1F       		.uleb128 0x1f
 2296 065e D9020000 		.4byte	.LASF81
 2297 0662 01       		.byte	0x1
 2298 0663 2E       		.byte	0x2e
 2299 0664 2A040000 		.4byte	0x42a
 2300 0668 05       		.uleb128 0x5
 2301 0669 03       		.byte	0x3
 2302 066a 00000000 		.4byte	instructionList
 2303 066e 1E       		.uleb128 0x1e
 2304 066f 733300   		.ascii	"s3\000"
 2305 0672 01       		.byte	0x1
 2306 0673 30       		.byte	0x30
 2307 0674 96000000 		.4byte	0x96
 2308 0678 05       		.uleb128 0x5
 2309 0679 03       		.byte	0x3
 2310 067a 00000000 		.4byte	s3
 2311 067e 1E       		.uleb128 0x1e
 2312 067f 733400   		.ascii	"s4\000"
 2313 0682 01       		.byte	0x1
 2314 0683 30       		.byte	0x30
 2315 0684 96000000 		.4byte	0x96
 2316 0688 05       		.uleb128 0x5
 2317 0689 03       		.byte	0x3
 2318 068a 00000000 		.4byte	s4
 2319 068e 1E       		.uleb128 0x1e
 2320 068f 733500   		.ascii	"s5\000"
 2321 0692 01       		.byte	0x1
 2322 0693 30       		.byte	0x30
 2323 0694 96000000 		.4byte	0x96
 2324 0698 05       		.uleb128 0x5
 2325 0699 03       		.byte	0x3
 2326 069a 00000000 		.4byte	s5
 2327 069e 1E       		.uleb128 0x1e
 2328 069f 733600   		.ascii	"s6\000"
 2329 06a2 01       		.byte	0x1
 2330 06a3 30       		.byte	0x30
 2331 06a4 96000000 		.4byte	0x96
 2332 06a8 05       		.uleb128 0x5
 2333 06a9 03       		.byte	0x3
 2334 06aa 00000000 		.4byte	s6
 2335 06ae 1F       		.uleb128 0x1f
 2336 06af 83040000 		.4byte	.LASF109
 2337 06b3 01       		.byte	0x1
 2338 06b4 35       		.byte	0x35
 2339 06b5 AE000000 		.4byte	0xae
 2340 06b9 05       		.uleb128 0x5
 2341 06ba 03       		.byte	0x3
 2342 06bb 00000000 		.4byte	totalMilliseconds
 2343 06bf 1F       		.uleb128 0x1f
 2344 06c0 0C010000 		.4byte	.LASF110
 2345 06c4 01       		.byte	0x1
 2346 06c5 36       		.byte	0x36
 2347 06c6 D2000000 		.4byte	0xd2
 2348 06ca 05       		.uleb128 0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 51


 2349 06cb 03       		.byte	0x3
 2350 06cc 00000000 		.4byte	totalDistance
 2351 06d0 20       		.uleb128 0x20
 2352 06d1 84000000 		.4byte	0x84
 2353 06d5 E0060000 		.4byte	0x6e0
 2354 06d9 21       		.uleb128 0x21
 2355 06da 7D000000 		.4byte	0x7d
 2356 06de 44       		.byte	0x44
 2357 06df 00       		.byte	0
 2358 06e0 1F       		.uleb128 0x1f
 2359 06e1 41000000 		.4byte	.LASF111
 2360 06e5 01       		.byte	0x1
 2361 06e6 38       		.byte	0x38
 2362 06e7 D0060000 		.4byte	0x6d0
 2363 06eb 05       		.uleb128 0x5
 2364 06ec 03       		.byte	0x3
 2365 06ed 00000000 		.4byte	buffer
 2366 06f1 1F       		.uleb128 0x1f
 2367 06f2 65010000 		.4byte	.LASF112
 2368 06f6 01       		.byte	0x1
 2369 06f7 39       		.byte	0x39
 2370 06f8 68000000 		.4byte	0x68
 2371 06fc 05       		.uleb128 0x5
 2372 06fd 03       		.byte	0x3
 2373 06fe 00000000 		.4byte	quadDec2Count
 2374 0702 1F       		.uleb128 0x1f
 2375 0703 54060000 		.4byte	.LASF113
 2376 0707 01       		.byte	0x1
 2377 0708 3A       		.byte	0x3a
 2378 0709 68000000 		.4byte	0x68
 2379 070d 05       		.uleb128 0x5
 2380 070e 03       		.byte	0x3
 2381 070f 00000000 		.4byte	timerInt
 2382 0713 1F       		.uleb128 0x1f
 2383 0714 35020000 		.4byte	.LASF114
 2384 0718 01       		.byte	0x1
 2385 0719 3B       		.byte	0x3b
 2386 071a 68000000 		.4byte	0x68
 2387 071e 05       		.uleb128 0x5
 2388 071f 03       		.byte	0x3
 2389 0720 00000000 		.4byte	keepLedOn
 2390 0724 1F       		.uleb128 0x1f
 2391 0725 ED040000 		.4byte	.LASF115
 2392 0729 01       		.byte	0x1
 2393 072a 3C       		.byte	0x3c
 2394 072b AE000000 		.4byte	0xae
 2395 072f 05       		.uleb128 0x5
 2396 0730 03       		.byte	0x3
 2397 0731 00000000 		.4byte	stopBuffer
 2398 0735 1F       		.uleb128 0x1f
 2399 0736 F5020000 		.4byte	.LASF116
 2400 073a 01       		.byte	0x1
 2401 073b BE       		.byte	0xbe
 2402 073c D2000000 		.4byte	0xd2
 2403 0740 05       		.uleb128 0x5
 2404 0741 03       		.byte	0x3
 2405 0742 00000000 		.4byte	xBlocksize
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 52


 2406 0746 1F       		.uleb128 0x1f
 2407 0747 2E040000 		.4byte	.LASF117
 2408 074b 01       		.byte	0x1
 2409 074c BF       		.byte	0xbf
 2410 074d D2000000 		.4byte	0xd2
 2411 0751 05       		.uleb128 0x5
 2412 0752 03       		.byte	0x3
 2413 0753 00000000 		.4byte	yBlocksize
 2414 0757 1F       		.uleb128 0x1f
 2415 0758 AB050000 		.4byte	.LASF118
 2416 075c 01       		.byte	0x1
 2417 075d C0       		.byte	0xc0
 2418 075e 96000000 		.4byte	0x96
 2419 0762 05       		.uleb128 0x5
 2420 0763 03       		.byte	0x3
 2421 0764 00000000 		.4byte	currentRow
 2422 0768 1F       		.uleb128 0x1f
 2423 0769 41060000 		.4byte	.LASF119
 2424 076d 01       		.byte	0x1
 2425 076e C1       		.byte	0xc1
 2426 076f 96000000 		.4byte	0x96
 2427 0773 05       		.uleb128 0x5
 2428 0774 03       		.byte	0x3
 2429 0775 00000000 		.4byte	currentCol
 2430 0779 24       		.uleb128 0x24
 2431 077a 33050000 		.4byte	.LASF120
 2432 077e 01       		.byte	0x1
 2433 077f 0E01     		.2byte	0x10e
 2434 0781 96000000 		.4byte	0x96
 2435 0785 05       		.uleb128 0x5
 2436 0786 03       		.byte	0x3
 2437 0787 00000000 		.4byte	stoppedAfterTurn
 2438 078b 24       		.uleb128 0x24
 2439 078c 7C020000 		.4byte	.LASF121
 2440 0790 01       		.byte	0x1
 2441 0791 0F01     		.2byte	0x10f
 2442 0793 96000000 		.4byte	0x96
 2443 0797 05       		.uleb128 0x5
 2444 0798 03       		.byte	0x3
 2445 0799 00000000 		.4byte	ignoreSensor
 2446 079d 00       		.byte	0
 2447              		.section	.debug_abbrev,"",%progbits
 2448              	.Ldebug_abbrev0:
 2449 0000 01       		.uleb128 0x1
 2450 0001 11       		.uleb128 0x11
 2451 0002 01       		.byte	0x1
 2452 0003 25       		.uleb128 0x25
 2453 0004 0E       		.uleb128 0xe
 2454 0005 13       		.uleb128 0x13
 2455 0006 0B       		.uleb128 0xb
 2456 0007 03       		.uleb128 0x3
 2457 0008 0E       		.uleb128 0xe
 2458 0009 1B       		.uleb128 0x1b
 2459 000a 0E       		.uleb128 0xe
 2460 000b 55       		.uleb128 0x55
 2461 000c 17       		.uleb128 0x17
 2462 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 53


 2463 000e 01       		.uleb128 0x1
 2464 000f 10       		.uleb128 0x10
 2465 0010 17       		.uleb128 0x17
 2466 0011 00       		.byte	0
 2467 0012 00       		.byte	0
 2468 0013 02       		.uleb128 0x2
 2469 0014 24       		.uleb128 0x24
 2470 0015 00       		.byte	0
 2471 0016 0B       		.uleb128 0xb
 2472 0017 0B       		.uleb128 0xb
 2473 0018 3E       		.uleb128 0x3e
 2474 0019 0B       		.uleb128 0xb
 2475 001a 03       		.uleb128 0x3
 2476 001b 0E       		.uleb128 0xe
 2477 001c 00       		.byte	0
 2478 001d 00       		.byte	0
 2479 001e 03       		.uleb128 0x3
 2480 001f 16       		.uleb128 0x16
 2481 0020 00       		.byte	0
 2482 0021 03       		.uleb128 0x3
 2483 0022 0E       		.uleb128 0xe
 2484 0023 3A       		.uleb128 0x3a
 2485 0024 0B       		.uleb128 0xb
 2486 0025 3B       		.uleb128 0x3b
 2487 0026 0B       		.uleb128 0xb
 2488 0027 49       		.uleb128 0x49
 2489 0028 13       		.uleb128 0x13
 2490 0029 00       		.byte	0
 2491 002a 00       		.byte	0
 2492 002b 04       		.uleb128 0x4
 2493 002c 24       		.uleb128 0x24
 2494 002d 00       		.byte	0
 2495 002e 0B       		.uleb128 0xb
 2496 002f 0B       		.uleb128 0xb
 2497 0030 3E       		.uleb128 0x3e
 2498 0031 0B       		.uleb128 0xb
 2499 0032 03       		.uleb128 0x3
 2500 0033 08       		.uleb128 0x8
 2501 0034 00       		.byte	0
 2502 0035 00       		.byte	0
 2503 0036 05       		.uleb128 0x5
 2504 0037 16       		.uleb128 0x16
 2505 0038 00       		.byte	0
 2506 0039 03       		.uleb128 0x3
 2507 003a 0E       		.uleb128 0xe
 2508 003b 3A       		.uleb128 0x3a
 2509 003c 0B       		.uleb128 0xb
 2510 003d 3B       		.uleb128 0x3b
 2511 003e 05       		.uleb128 0x5
 2512 003f 49       		.uleb128 0x49
 2513 0040 13       		.uleb128 0x13
 2514 0041 00       		.byte	0
 2515 0042 00       		.byte	0
 2516 0043 06       		.uleb128 0x6
 2517 0044 13       		.uleb128 0x13
 2518 0045 01       		.byte	0x1
 2519 0046 03       		.uleb128 0x3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 54


 2520 0047 0E       		.uleb128 0xe
 2521 0048 0B       		.uleb128 0xb
 2522 0049 0B       		.uleb128 0xb
 2523 004a 3A       		.uleb128 0x3a
 2524 004b 0B       		.uleb128 0xb
 2525 004c 3B       		.uleb128 0x3b
 2526 004d 0B       		.uleb128 0xb
 2527 004e 01       		.uleb128 0x1
 2528 004f 13       		.uleb128 0x13
 2529 0050 00       		.byte	0
 2530 0051 00       		.byte	0
 2531 0052 07       		.uleb128 0x7
 2532 0053 0D       		.uleb128 0xd
 2533 0054 00       		.byte	0
 2534 0055 03       		.uleb128 0x3
 2535 0056 0E       		.uleb128 0xe
 2536 0057 3A       		.uleb128 0x3a
 2537 0058 0B       		.uleb128 0xb
 2538 0059 3B       		.uleb128 0x3b
 2539 005a 0B       		.uleb128 0xb
 2540 005b 49       		.uleb128 0x49
 2541 005c 13       		.uleb128 0x13
 2542 005d 38       		.uleb128 0x38
 2543 005e 0B       		.uleb128 0xb
 2544 005f 00       		.byte	0
 2545 0060 00       		.byte	0
 2546 0061 08       		.uleb128 0x8
 2547 0062 04       		.uleb128 0x4
 2548 0063 01       		.byte	0x1
 2549 0064 03       		.uleb128 0x3
 2550 0065 0E       		.uleb128 0xe
 2551 0066 0B       		.uleb128 0xb
 2552 0067 0B       		.uleb128 0xb
 2553 0068 49       		.uleb128 0x49
 2554 0069 13       		.uleb128 0x13
 2555 006a 3A       		.uleb128 0x3a
 2556 006b 0B       		.uleb128 0xb
 2557 006c 3B       		.uleb128 0x3b
 2558 006d 0B       		.uleb128 0xb
 2559 006e 01       		.uleb128 0x1
 2560 006f 13       		.uleb128 0x13
 2561 0070 00       		.byte	0
 2562 0071 00       		.byte	0
 2563 0072 09       		.uleb128 0x9
 2564 0073 28       		.uleb128 0x28
 2565 0074 00       		.byte	0
 2566 0075 03       		.uleb128 0x3
 2567 0076 0E       		.uleb128 0xe
 2568 0077 1C       		.uleb128 0x1c
 2569 0078 0B       		.uleb128 0xb
 2570 0079 00       		.byte	0
 2571 007a 00       		.byte	0
 2572 007b 0A       		.uleb128 0xa
 2573 007c 28       		.uleb128 0x28
 2574 007d 00       		.byte	0
 2575 007e 03       		.uleb128 0x3
 2576 007f 08       		.uleb128 0x8
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 55


 2577 0080 1C       		.uleb128 0x1c
 2578 0081 0B       		.uleb128 0xb
 2579 0082 00       		.byte	0
 2580 0083 00       		.byte	0
 2581 0084 0B       		.uleb128 0xb
 2582 0085 2E       		.uleb128 0x2e
 2583 0086 01       		.byte	0x1
 2584 0087 3F       		.uleb128 0x3f
 2585 0088 19       		.uleb128 0x19
 2586 0089 03       		.uleb128 0x3
 2587 008a 0E       		.uleb128 0xe
 2588 008b 3A       		.uleb128 0x3a
 2589 008c 0B       		.uleb128 0xb
 2590 008d 3B       		.uleb128 0x3b
 2591 008e 0B       		.uleb128 0xb
 2592 008f 27       		.uleb128 0x27
 2593 0090 19       		.uleb128 0x19
 2594 0091 11       		.uleb128 0x11
 2595 0092 01       		.uleb128 0x1
 2596 0093 12       		.uleb128 0x12
 2597 0094 06       		.uleb128 0x6
 2598 0095 40       		.uleb128 0x40
 2599 0096 18       		.uleb128 0x18
 2600 0097 9642     		.uleb128 0x2116
 2601 0099 19       		.uleb128 0x19
 2602 009a 01       		.uleb128 0x1
 2603 009b 13       		.uleb128 0x13
 2604 009c 00       		.byte	0
 2605 009d 00       		.byte	0
 2606 009e 0C       		.uleb128 0xc
 2607 009f 0B       		.uleb128 0xb
 2608 00a0 01       		.byte	0x1
 2609 00a1 11       		.uleb128 0x11
 2610 00a2 01       		.uleb128 0x1
 2611 00a3 12       		.uleb128 0x12
 2612 00a4 06       		.uleb128 0x6
 2613 00a5 00       		.byte	0
 2614 00a6 00       		.byte	0
 2615 00a7 0D       		.uleb128 0xd
 2616 00a8 34       		.uleb128 0x34
 2617 00a9 00       		.byte	0
 2618 00aa 03       		.uleb128 0x3
 2619 00ab 0E       		.uleb128 0xe
 2620 00ac 3A       		.uleb128 0x3a
 2621 00ad 0B       		.uleb128 0xb
 2622 00ae 3B       		.uleb128 0x3b
 2623 00af 0B       		.uleb128 0xb
 2624 00b0 49       		.uleb128 0x49
 2625 00b1 13       		.uleb128 0x13
 2626 00b2 02       		.uleb128 0x2
 2627 00b3 18       		.uleb128 0x18
 2628 00b4 00       		.byte	0
 2629 00b5 00       		.byte	0
 2630 00b6 0E       		.uleb128 0xe
 2631 00b7 2E       		.uleb128 0x2e
 2632 00b8 00       		.byte	0
 2633 00b9 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 56


 2634 00ba 19       		.uleb128 0x19
 2635 00bb 03       		.uleb128 0x3
 2636 00bc 0E       		.uleb128 0xe
 2637 00bd 3A       		.uleb128 0x3a
 2638 00be 0B       		.uleb128 0xb
 2639 00bf 3B       		.uleb128 0x3b
 2640 00c0 0B       		.uleb128 0xb
 2641 00c1 27       		.uleb128 0x27
 2642 00c2 19       		.uleb128 0x19
 2643 00c3 11       		.uleb128 0x11
 2644 00c4 01       		.uleb128 0x1
 2645 00c5 12       		.uleb128 0x12
 2646 00c6 06       		.uleb128 0x6
 2647 00c7 40       		.uleb128 0x40
 2648 00c8 18       		.uleb128 0x18
 2649 00c9 9742     		.uleb128 0x2117
 2650 00cb 19       		.uleb128 0x19
 2651 00cc 00       		.byte	0
 2652 00cd 00       		.byte	0
 2653 00ce 0F       		.uleb128 0xf
 2654 00cf 2E       		.uleb128 0x2e
 2655 00d0 00       		.byte	0
 2656 00d1 3F       		.uleb128 0x3f
 2657 00d2 19       		.uleb128 0x19
 2658 00d3 03       		.uleb128 0x3
 2659 00d4 0E       		.uleb128 0xe
 2660 00d5 3A       		.uleb128 0x3a
 2661 00d6 0B       		.uleb128 0xb
 2662 00d7 3B       		.uleb128 0x3b
 2663 00d8 0B       		.uleb128 0xb
 2664 00d9 27       		.uleb128 0x27
 2665 00da 19       		.uleb128 0x19
 2666 00db 11       		.uleb128 0x11
 2667 00dc 01       		.uleb128 0x1
 2668 00dd 12       		.uleb128 0x12
 2669 00de 06       		.uleb128 0x6
 2670 00df 40       		.uleb128 0x40
 2671 00e0 18       		.uleb128 0x18
 2672 00e1 9642     		.uleb128 0x2116
 2673 00e3 19       		.uleb128 0x19
 2674 00e4 00       		.byte	0
 2675 00e5 00       		.byte	0
 2676 00e6 10       		.uleb128 0x10
 2677 00e7 2E       		.uleb128 0x2e
 2678 00e8 00       		.byte	0
 2679 00e9 3F       		.uleb128 0x3f
 2680 00ea 19       		.uleb128 0x19
 2681 00eb 03       		.uleb128 0x3
 2682 00ec 0E       		.uleb128 0xe
 2683 00ed 3A       		.uleb128 0x3a
 2684 00ee 0B       		.uleb128 0xb
 2685 00ef 3B       		.uleb128 0x3b
 2686 00f0 0B       		.uleb128 0xb
 2687 00f1 49       		.uleb128 0x49
 2688 00f2 13       		.uleb128 0x13
 2689 00f3 11       		.uleb128 0x11
 2690 00f4 01       		.uleb128 0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 57


 2691 00f5 12       		.uleb128 0x12
 2692 00f6 06       		.uleb128 0x6
 2693 00f7 40       		.uleb128 0x40
 2694 00f8 18       		.uleb128 0x18
 2695 00f9 9642     		.uleb128 0x2116
 2696 00fb 19       		.uleb128 0x19
 2697 00fc 00       		.byte	0
 2698 00fd 00       		.byte	0
 2699 00fe 11       		.uleb128 0x11
 2700 00ff 2E       		.uleb128 0x2e
 2701 0100 01       		.byte	0x1
 2702 0101 3F       		.uleb128 0x3f
 2703 0102 19       		.uleb128 0x19
 2704 0103 03       		.uleb128 0x3
 2705 0104 0E       		.uleb128 0xe
 2706 0105 3A       		.uleb128 0x3a
 2707 0106 0B       		.uleb128 0xb
 2708 0107 3B       		.uleb128 0x3b
 2709 0108 0B       		.uleb128 0xb
 2710 0109 27       		.uleb128 0x27
 2711 010a 19       		.uleb128 0x19
 2712 010b 49       		.uleb128 0x49
 2713 010c 13       		.uleb128 0x13
 2714 010d 11       		.uleb128 0x11
 2715 010e 01       		.uleb128 0x1
 2716 010f 12       		.uleb128 0x12
 2717 0110 06       		.uleb128 0x6
 2718 0111 40       		.uleb128 0x40
 2719 0112 18       		.uleb128 0x18
 2720 0113 9642     		.uleb128 0x2116
 2721 0115 19       		.uleb128 0x19
 2722 0116 01       		.uleb128 0x1
 2723 0117 13       		.uleb128 0x13
 2724 0118 00       		.byte	0
 2725 0119 00       		.byte	0
 2726 011a 12       		.uleb128 0x12
 2727 011b 05       		.uleb128 0x5
 2728 011c 00       		.byte	0
 2729 011d 03       		.uleb128 0x3
 2730 011e 0E       		.uleb128 0xe
 2731 011f 3A       		.uleb128 0x3a
 2732 0120 0B       		.uleb128 0xb
 2733 0121 3B       		.uleb128 0x3b
 2734 0122 0B       		.uleb128 0xb
 2735 0123 49       		.uleb128 0x49
 2736 0124 13       		.uleb128 0x13
 2737 0125 02       		.uleb128 0x2
 2738 0126 18       		.uleb128 0x18
 2739 0127 00       		.byte	0
 2740 0128 00       		.byte	0
 2741 0129 13       		.uleb128 0x13
 2742 012a 34       		.uleb128 0x34
 2743 012b 00       		.byte	0
 2744 012c 03       		.uleb128 0x3
 2745 012d 08       		.uleb128 0x8
 2746 012e 3A       		.uleb128 0x3a
 2747 012f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 58


 2748 0130 3B       		.uleb128 0x3b
 2749 0131 0B       		.uleb128 0xb
 2750 0132 49       		.uleb128 0x49
 2751 0133 13       		.uleb128 0x13
 2752 0134 02       		.uleb128 0x2
 2753 0135 18       		.uleb128 0x18
 2754 0136 00       		.byte	0
 2755 0137 00       		.byte	0
 2756 0138 14       		.uleb128 0x14
 2757 0139 2E       		.uleb128 0x2e
 2758 013a 00       		.byte	0
 2759 013b 3F       		.uleb128 0x3f
 2760 013c 19       		.uleb128 0x19
 2761 013d 03       		.uleb128 0x3
 2762 013e 0E       		.uleb128 0xe
 2763 013f 3A       		.uleb128 0x3a
 2764 0140 0B       		.uleb128 0xb
 2765 0141 3B       		.uleb128 0x3b
 2766 0142 0B       		.uleb128 0xb
 2767 0143 11       		.uleb128 0x11
 2768 0144 01       		.uleb128 0x1
 2769 0145 12       		.uleb128 0x12
 2770 0146 06       		.uleb128 0x6
 2771 0147 40       		.uleb128 0x40
 2772 0148 18       		.uleb128 0x18
 2773 0149 9742     		.uleb128 0x2117
 2774 014b 19       		.uleb128 0x19
 2775 014c 00       		.byte	0
 2776 014d 00       		.byte	0
 2777 014e 15       		.uleb128 0x15
 2778 014f 2E       		.uleb128 0x2e
 2779 0150 01       		.byte	0x1
 2780 0151 3F       		.uleb128 0x3f
 2781 0152 19       		.uleb128 0x19
 2782 0153 03       		.uleb128 0x3
 2783 0154 0E       		.uleb128 0xe
 2784 0155 3A       		.uleb128 0x3a
 2785 0156 0B       		.uleb128 0xb
 2786 0157 3B       		.uleb128 0x3b
 2787 0158 05       		.uleb128 0x5
 2788 0159 49       		.uleb128 0x49
 2789 015a 13       		.uleb128 0x13
 2790 015b 11       		.uleb128 0x11
 2791 015c 01       		.uleb128 0x1
 2792 015d 12       		.uleb128 0x12
 2793 015e 06       		.uleb128 0x6
 2794 015f 40       		.uleb128 0x40
 2795 0160 18       		.uleb128 0x18
 2796 0161 9642     		.uleb128 0x2116
 2797 0163 19       		.uleb128 0x19
 2798 0164 01       		.uleb128 0x1
 2799 0165 13       		.uleb128 0x13
 2800 0166 00       		.byte	0
 2801 0167 00       		.byte	0
 2802 0168 16       		.uleb128 0x16
 2803 0169 34       		.uleb128 0x34
 2804 016a 00       		.byte	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 59


 2805 016b 03       		.uleb128 0x3
 2806 016c 0E       		.uleb128 0xe
 2807 016d 3A       		.uleb128 0x3a
 2808 016e 0B       		.uleb128 0xb
 2809 016f 3B       		.uleb128 0x3b
 2810 0170 05       		.uleb128 0x5
 2811 0171 49       		.uleb128 0x49
 2812 0172 13       		.uleb128 0x13
 2813 0173 02       		.uleb128 0x2
 2814 0174 18       		.uleb128 0x18
 2815 0175 00       		.byte	0
 2816 0176 00       		.byte	0
 2817 0177 17       		.uleb128 0x17
 2818 0178 2E       		.uleb128 0x2e
 2819 0179 01       		.byte	0x1
 2820 017a 3F       		.uleb128 0x3f
 2821 017b 19       		.uleb128 0x19
 2822 017c 03       		.uleb128 0x3
 2823 017d 0E       		.uleb128 0xe
 2824 017e 3A       		.uleb128 0x3a
 2825 017f 0B       		.uleb128 0xb
 2826 0180 3B       		.uleb128 0x3b
 2827 0181 05       		.uleb128 0x5
 2828 0182 27       		.uleb128 0x27
 2829 0183 19       		.uleb128 0x19
 2830 0184 49       		.uleb128 0x49
 2831 0185 13       		.uleb128 0x13
 2832 0186 11       		.uleb128 0x11
 2833 0187 01       		.uleb128 0x1
 2834 0188 12       		.uleb128 0x12
 2835 0189 06       		.uleb128 0x6
 2836 018a 40       		.uleb128 0x40
 2837 018b 18       		.uleb128 0x18
 2838 018c 9742     		.uleb128 0x2117
 2839 018e 19       		.uleb128 0x19
 2840 018f 01       		.uleb128 0x1
 2841 0190 13       		.uleb128 0x13
 2842 0191 00       		.byte	0
 2843 0192 00       		.byte	0
 2844 0193 18       		.uleb128 0x18
 2845 0194 05       		.uleb128 0x5
 2846 0195 00       		.byte	0
 2847 0196 03       		.uleb128 0x3
 2848 0197 0E       		.uleb128 0xe
 2849 0198 3A       		.uleb128 0x3a
 2850 0199 0B       		.uleb128 0xb
 2851 019a 3B       		.uleb128 0x3b
 2852 019b 05       		.uleb128 0x5
 2853 019c 49       		.uleb128 0x49
 2854 019d 13       		.uleb128 0x13
 2855 019e 02       		.uleb128 0x2
 2856 019f 18       		.uleb128 0x18
 2857 01a0 00       		.byte	0
 2858 01a1 00       		.byte	0
 2859 01a2 19       		.uleb128 0x19
 2860 01a3 34       		.uleb128 0x34
 2861 01a4 00       		.byte	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 60


 2862 01a5 03       		.uleb128 0x3
 2863 01a6 08       		.uleb128 0x8
 2864 01a7 3A       		.uleb128 0x3a
 2865 01a8 0B       		.uleb128 0xb
 2866 01a9 3B       		.uleb128 0x3b
 2867 01aa 05       		.uleb128 0x5
 2868 01ab 49       		.uleb128 0x49
 2869 01ac 13       		.uleb128 0x13
 2870 01ad 02       		.uleb128 0x2
 2871 01ae 18       		.uleb128 0x18
 2872 01af 00       		.byte	0
 2873 01b0 00       		.byte	0
 2874 01b1 1A       		.uleb128 0x1a
 2875 01b2 0F       		.uleb128 0xf
 2876 01b3 00       		.byte	0
 2877 01b4 0B       		.uleb128 0xb
 2878 01b5 0B       		.uleb128 0xb
 2879 01b6 49       		.uleb128 0x49
 2880 01b7 13       		.uleb128 0x13
 2881 01b8 00       		.byte	0
 2882 01b9 00       		.byte	0
 2883 01ba 1B       		.uleb128 0x1b
 2884 01bb 2E       		.uleb128 0x2e
 2885 01bc 00       		.byte	0
 2886 01bd 3F       		.uleb128 0x3f
 2887 01be 19       		.uleb128 0x19
 2888 01bf 03       		.uleb128 0x3
 2889 01c0 0E       		.uleb128 0xe
 2890 01c1 3A       		.uleb128 0x3a
 2891 01c2 0B       		.uleb128 0xb
 2892 01c3 3B       		.uleb128 0x3b
 2893 01c4 05       		.uleb128 0x5
 2894 01c5 11       		.uleb128 0x11
 2895 01c6 01       		.uleb128 0x1
 2896 01c7 12       		.uleb128 0x12
 2897 01c8 06       		.uleb128 0x6
 2898 01c9 40       		.uleb128 0x40
 2899 01ca 18       		.uleb128 0x18
 2900 01cb 9642     		.uleb128 0x2116
 2901 01cd 19       		.uleb128 0x19
 2902 01ce 00       		.byte	0
 2903 01cf 00       		.byte	0
 2904 01d0 1C       		.uleb128 0x1c
 2905 01d1 34       		.uleb128 0x34
 2906 01d2 00       		.byte	0
 2907 01d3 03       		.uleb128 0x3
 2908 01d4 0E       		.uleb128 0xe
 2909 01d5 3A       		.uleb128 0x3a
 2910 01d6 0B       		.uleb128 0xb
 2911 01d7 3B       		.uleb128 0x3b
 2912 01d8 05       		.uleb128 0x5
 2913 01d9 49       		.uleb128 0x49
 2914 01da 13       		.uleb128 0x13
 2915 01db 3F       		.uleb128 0x3f
 2916 01dc 19       		.uleb128 0x19
 2917 01dd 3C       		.uleb128 0x3c
 2918 01de 19       		.uleb128 0x19
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 61


 2919 01df 00       		.byte	0
 2920 01e0 00       		.byte	0
 2921 01e1 1D       		.uleb128 0x1d
 2922 01e2 35       		.uleb128 0x35
 2923 01e3 00       		.byte	0
 2924 01e4 49       		.uleb128 0x49
 2925 01e5 13       		.uleb128 0x13
 2926 01e6 00       		.byte	0
 2927 01e7 00       		.byte	0
 2928 01e8 1E       		.uleb128 0x1e
 2929 01e9 34       		.uleb128 0x34
 2930 01ea 00       		.byte	0
 2931 01eb 03       		.uleb128 0x3
 2932 01ec 08       		.uleb128 0x8
 2933 01ed 3A       		.uleb128 0x3a
 2934 01ee 0B       		.uleb128 0xb
 2935 01ef 3B       		.uleb128 0x3b
 2936 01f0 0B       		.uleb128 0xb
 2937 01f1 49       		.uleb128 0x49
 2938 01f2 13       		.uleb128 0x13
 2939 01f3 3F       		.uleb128 0x3f
 2940 01f4 19       		.uleb128 0x19
 2941 01f5 02       		.uleb128 0x2
 2942 01f6 18       		.uleb128 0x18
 2943 01f7 00       		.byte	0
 2944 01f8 00       		.byte	0
 2945 01f9 1F       		.uleb128 0x1f
 2946 01fa 34       		.uleb128 0x34
 2947 01fb 00       		.byte	0
 2948 01fc 03       		.uleb128 0x3
 2949 01fd 0E       		.uleb128 0xe
 2950 01fe 3A       		.uleb128 0x3a
 2951 01ff 0B       		.uleb128 0xb
 2952 0200 3B       		.uleb128 0x3b
 2953 0201 0B       		.uleb128 0xb
 2954 0202 49       		.uleb128 0x49
 2955 0203 13       		.uleb128 0x13
 2956 0204 3F       		.uleb128 0x3f
 2957 0205 19       		.uleb128 0x19
 2958 0206 02       		.uleb128 0x2
 2959 0207 18       		.uleb128 0x18
 2960 0208 00       		.byte	0
 2961 0209 00       		.byte	0
 2962 020a 20       		.uleb128 0x20
 2963 020b 01       		.uleb128 0x1
 2964 020c 01       		.byte	0x1
 2965 020d 49       		.uleb128 0x49
 2966 020e 13       		.uleb128 0x13
 2967 020f 01       		.uleb128 0x1
 2968 0210 13       		.uleb128 0x13
 2969 0211 00       		.byte	0
 2970 0212 00       		.byte	0
 2971 0213 21       		.uleb128 0x21
 2972 0214 21       		.uleb128 0x21
 2973 0215 00       		.byte	0
 2974 0216 49       		.uleb128 0x49
 2975 0217 13       		.uleb128 0x13
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 62


 2976 0218 2F       		.uleb128 0x2f
 2977 0219 0B       		.uleb128 0xb
 2978 021a 00       		.byte	0
 2979 021b 00       		.byte	0
 2980 021c 22       		.uleb128 0x22
 2981 021d 34       		.uleb128 0x34
 2982 021e 00       		.byte	0
 2983 021f 03       		.uleb128 0x3
 2984 0220 08       		.uleb128 0x8
 2985 0221 3A       		.uleb128 0x3a
 2986 0222 0B       		.uleb128 0xb
 2987 0223 3B       		.uleb128 0x3b
 2988 0224 0B       		.uleb128 0xb
 2989 0225 49       		.uleb128 0x49
 2990 0226 13       		.uleb128 0x13
 2991 0227 3F       		.uleb128 0x3f
 2992 0228 19       		.uleb128 0x19
 2993 0229 3C       		.uleb128 0x3c
 2994 022a 19       		.uleb128 0x19
 2995 022b 00       		.byte	0
 2996 022c 00       		.byte	0
 2997 022d 23       		.uleb128 0x23
 2998 022e 34       		.uleb128 0x34
 2999 022f 00       		.byte	0
 3000 0230 03       		.uleb128 0x3
 3001 0231 0E       		.uleb128 0xe
 3002 0232 3A       		.uleb128 0x3a
 3003 0233 0B       		.uleb128 0xb
 3004 0234 3B       		.uleb128 0x3b
 3005 0235 0B       		.uleb128 0xb
 3006 0236 49       		.uleb128 0x49
 3007 0237 13       		.uleb128 0x13
 3008 0238 3F       		.uleb128 0x3f
 3009 0239 19       		.uleb128 0x19
 3010 023a 3C       		.uleb128 0x3c
 3011 023b 19       		.uleb128 0x19
 3012 023c 00       		.byte	0
 3013 023d 00       		.byte	0
 3014 023e 24       		.uleb128 0x24
 3015 023f 34       		.uleb128 0x34
 3016 0240 00       		.byte	0
 3017 0241 03       		.uleb128 0x3
 3018 0242 0E       		.uleb128 0xe
 3019 0243 3A       		.uleb128 0x3a
 3020 0244 0B       		.uleb128 0xb
 3021 0245 3B       		.uleb128 0x3b
 3022 0246 05       		.uleb128 0x5
 3023 0247 49       		.uleb128 0x49
 3024 0248 13       		.uleb128 0x13
 3025 0249 3F       		.uleb128 0x3f
 3026 024a 19       		.uleb128 0x19
 3027 024b 02       		.uleb128 0x2
 3028 024c 18       		.uleb128 0x18
 3029 024d 00       		.byte	0
 3030 024e 00       		.byte	0
 3031 024f 00       		.byte	0
 3032              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 63


 3033 0000 74000000 		.4byte	0x74
 3034 0004 0200     		.2byte	0x2
 3035 0006 00000000 		.4byte	.Ldebug_info0
 3036 000a 04       		.byte	0x4
 3037 000b 00       		.byte	0
 3038 000c 0000     		.2byte	0
 3039 000e 0000     		.2byte	0
 3040 0010 00000000 		.4byte	.LFB64
 3041 0014 F4000000 		.4byte	.LFE64-.LFB64
 3042 0018 00000000 		.4byte	.LFB65
 3043 001c 18000000 		.4byte	.LFE65-.LFB65
 3044 0020 00000000 		.4byte	.LFB66
 3045 0024 18000000 		.4byte	.LFE66-.LFB66
 3046 0028 00000000 		.4byte	.LFB67
 3047 002c 18000000 		.4byte	.LFE67-.LFB67
 3048 0030 00000000 		.4byte	.LFB68
 3049 0034 18000000 		.4byte	.LFE68-.LFB68
 3050 0038 00000000 		.4byte	.LFB69
 3051 003c 38000000 		.4byte	.LFE69-.LFB69
 3052 0040 00000000 		.4byte	.LFB70
 3053 0044 C0000000 		.4byte	.LFE70-.LFB70
 3054 0048 00000000 		.4byte	.LFB71
 3055 004c 54000000 		.4byte	.LFE71-.LFB71
 3056 0050 00000000 		.4byte	.LFB72
 3057 0054 34000000 		.4byte	.LFE72-.LFB72
 3058 0058 00000000 		.4byte	.LFB73
 3059 005c 90020000 		.4byte	.LFE73-.LFB73
 3060 0060 00000000 		.4byte	.LFB74
 3061 0064 9E000000 		.4byte	.LFE74-.LFB74
 3062 0068 00000000 		.4byte	.LFB75
 3063 006c B0000000 		.4byte	.LFE75-.LFB75
 3064 0070 00000000 		.4byte	0
 3065 0074 00000000 		.4byte	0
 3066              		.section	.debug_ranges,"",%progbits
 3067              	.Ldebug_ranges0:
 3068 0000 00000000 		.4byte	.LFB64
 3069 0004 F4000000 		.4byte	.LFE64
 3070 0008 00000000 		.4byte	.LFB65
 3071 000c 18000000 		.4byte	.LFE65
 3072 0010 00000000 		.4byte	.LFB66
 3073 0014 18000000 		.4byte	.LFE66
 3074 0018 00000000 		.4byte	.LFB67
 3075 001c 18000000 		.4byte	.LFE67
 3076 0020 00000000 		.4byte	.LFB68
 3077 0024 18000000 		.4byte	.LFE68
 3078 0028 00000000 		.4byte	.LFB69
 3079 002c 38000000 		.4byte	.LFE69
 3080 0030 00000000 		.4byte	.LFB70
 3081 0034 C0000000 		.4byte	.LFE70
 3082 0038 00000000 		.4byte	.LFB71
 3083 003c 54000000 		.4byte	.LFE71
 3084 0040 00000000 		.4byte	.LFB72
 3085 0044 34000000 		.4byte	.LFE72
 3086 0048 00000000 		.4byte	.LFB73
 3087 004c 90020000 		.4byte	.LFE73
 3088 0050 00000000 		.4byte	.LFB74
 3089 0054 9E000000 		.4byte	.LFE74
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 64


 3090 0058 00000000 		.4byte	.LFB75
 3091 005c B0000000 		.4byte	.LFE75
 3092 0060 00000000 		.4byte	0
 3093 0064 00000000 		.4byte	0
 3094              		.section	.debug_line,"",%progbits
 3095              	.Ldebug_line0:
 3096 0000 4B030000 		.section	.debug_str,"MS",%progbits,1
 3096      02007001 
 3096      00000201 
 3096      FB0E0D00 
 3096      01010101 
 3097              	.LASF47:
 3098 0000 64697265 		.ascii	"direction\000"
 3098      6374696F 
 3098      6E00
 3099              	.LASF64:
 3100 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3100      61726441 
 3100      66746572 
 3100      5475726E 
 3100      00
 3101              	.LASF50:
 3102 001b 496E7374 		.ascii	"InstructionDirection\000"
 3102      72756374 
 3102      696F6E44 
 3102      69726563 
 3102      74696F6E 
 3103              	.LASF123:
 3104 0030 6D61696E 		.ascii	"main.c\000"
 3104      2E6300
 3105              	.LASF75:
 3106 0037 626C6F63 		.ascii	"blocksize\000"
 3106      6B73697A 
 3106      6500
 3107              	.LASF111:
 3108 0041 62756666 		.ascii	"buffer\000"
 3108      657200
 3109              	.LASF8:
 3110 0048 756E7369 		.ascii	"unsigned int\000"
 3110      676E6564 
 3110      20696E74 
 3110      00
 3111              	.LASF12:
 3112 0055 5F5F696E 		.ascii	"__int32_t\000"
 3112      7433325F 
 3112      7400
 3113              	.LASF18:
 3114 005f 696E7431 		.ascii	"int16\000"
 3114      3600
 3115              	.LASF102:
 3116 0065 73797374 		.ascii	"system_state\000"
 3116      656D5F73 
 3116      74617465 
 3116      00
 3117              	.LASF122:
 3118 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3118      43313120 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 65


 3118      352E342E 
 3118      31203230 
 3118      31363036 
 3119 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3119      20726576 
 3119      6973696F 
 3119      6E203233 
 3119      37373135 
 3120 00d8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3120      66756E63 
 3120      74696F6E 
 3120      2D736563 
 3120      74696F6E 
 3121              	.LASF69:
 3122 0100 53365F44 		.ascii	"S6_DETECTED\000"
 3122      45544543 
 3122      54454400 
 3123              	.LASF110:
 3124 010c 746F7461 		.ascii	"totalDistance\000"
 3124      6C446973 
 3124      74616E63 
 3124      6500
 3125              	.LASF34:
 3126 011a 67325F78 		.ascii	"g2_xpos\000"
 3126      706F7300 
 3127              	.LASF80:
 3128 0122 6E756D53 		.ascii	"numSteps\000"
 3128      74657073 
 3128      00
 3129              	.LASF97:
 3130 012b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3130      5F72665F 
 3130      7472616E 
 3130      736D6973 
 3130      73696F6E 
 3131              	.LASF82:
 3132 0147 52657365 		.ascii	"ResetSensorFlags\000"
 3132      7453656E 
 3132      736F7246 
 3132      6C616773 
 3132      00
 3133              	.LASF37:
 3134 0158 67325F64 		.ascii	"g2_direction\000"
 3134      69726563 
 3134      74696F6E 
 3134      00
 3135              	.LASF112:
 3136 0165 71756164 		.ascii	"quadDec2Count\000"
 3136      44656332 
 3136      436F756E 
 3136      7400
 3137              	.LASF124:
 3138 0173 433A5C55 		.ascii	"C:\\Users\\ianku\\OneDrive\\Documents\\301-Robot\\p"
 3138      73657273 
 3138      5C69616E 
 3138      6B755C4F 
 3138      6E654472 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 66


 3139 01a0 736F6320 		.ascii	"soc student pack\\psoc_code_base\\CS301_Class.cydsn"
 3139      73747564 
 3139      656E7420 
 3139      7061636B 
 3139      5C70736F 
 3140 01d1 00       		.ascii	"\000"
 3141              	.LASF101:
 3142 01d2 75736242 		.ascii	"usbBuffer\000"
 3142      75666665 
 3142      7200
 3143              	.LASF79:
 3144 01dc 636F756E 		.ascii	"count\000"
 3144      7400
 3145              	.LASF22:
 3146 01e2 696E6465 		.ascii	"index\000"
 3146      7800
 3147              	.LASF7:
 3148 01e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 3148      206C6F6E 
 3148      6720756E 
 3148      7369676E 
 3148      65642069 
 3149              	.LASF46:
 3150 01ff 496E7374 		.ascii	"Instruction\000"
 3150      72756374 
 3150      696F6E00 
 3151              	.LASF94:
 3152 020b 666C6167 		.ascii	"flag_packet\000"
 3152      5F706163 
 3152      6B657400 
 3153              	.LASF83:
 3154 0217 53657452 		.ascii	"SetRobotMovement\000"
 3154      6F626F74 
 3154      4D6F7665 
 3154      6D656E74 
 3154      00
 3155              	.LASF70:
 3156 0228 54494D45 		.ascii	"TIMER_FINISH\000"
 3156      525F4649 
 3156      4E495348 
 3156      00
 3157              	.LASF114:
 3158 0235 6B656570 		.ascii	"keepLedOn\000"
 3158      4C65644F 
 3158      6E00
 3159              	.LASF42:
 3160 023f 466F7277 		.ascii	"ForwardUntilTarget\000"
 3160      61726455 
 3160      6E74696C 
 3160      54617267 
 3160      657400
 3161              	.LASF90:
 3162 0252 666C6167 		.ascii	"flag_ts_update\000"
 3162      5F74735F 
 3162      75706461 
 3162      746500
 3163              	.LASF89:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 67


 3164 0261 666C6167 		.ascii	"flag_ts_enc\000"
 3164      5F74735F 
 3164      656E6300 
 3165              	.LASF77:
 3166 026d 71756164 		.ascii	"quadCountToRPM\000"
 3166      436F756E 
 3166      74546F52 
 3166      504D00
 3167              	.LASF121:
 3168 027c 69676E6F 		.ascii	"ignoreSensor\000"
 3168      72655365 
 3168      6E736F72 
 3168      00
 3169              	.LASF43:
 3170 0289 53746F70 		.ascii	"StopAtTarget\000"
 3170      41745461 
 3170      72676574 
 3170      00
 3171              	.LASF63:
 3172 0296 77616974 		.ascii	"waitForTurn\000"
 3172      466F7254 
 3172      75726E00 
 3173              	.LASF24:
 3174 02a2 726F626F 		.ascii	"robot_ypos\000"
 3174      745F7970 
 3174      6F7300
 3175              	.LASF88:
 3176 02ad 74735F64 		.ascii	"ts_display\000"
 3176      6973706C 
 3176      617900
 3177              	.LASF106:
 3178 02b8 63757272 		.ascii	"currentOrientation\000"
 3178      656E744F 
 3178      7269656E 
 3178      74617469 
 3178      6F6E00
 3179              	.LASF11:
 3180 02cb 63686172 		.ascii	"char\000"
 3180      00
 3181              	.LASF28:
 3182 02d0 67305F73 		.ascii	"g0_speed\000"
 3182      70656564 
 3182      00
 3183              	.LASF81:
 3184 02d9 696E7374 		.ascii	"instructionList\000"
 3184      72756374 
 3184      696F6E4C 
 3184      69737400 
 3185              	.LASF15:
 3186 02e9 75696E74 		.ascii	"uint16\000"
 3186      313600
 3187              	.LASF17:
 3188 02f0 696E7438 		.ascii	"int8\000"
 3188      00
 3189              	.LASF116:
 3190 02f5 78426C6F 		.ascii	"xBlocksize\000"
 3190      636B7369 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 68


 3190      7A6500
 3191              	.LASF33:
 3192 0300 67315F64 		.ascii	"g1_direction\000"
 3192      69726563 
 3192      74696F6E 
 3192      00
 3193              	.LASF53:
 3194 030d 4C656674 		.ascii	"Left\000"
 3194      00
 3195              	.LASF73:
 3196 0312 73706565 		.ascii	"speedTimer\000"
 3196      6454696D 
 3196      657200
 3197              	.LASF39:
 3198 031d 77616974 		.ascii	"waitForLeftTurn\000"
 3198      466F724C 
 3198      65667454 
 3198      75726E00 
 3199              	.LASF6:
 3200 032d 6C6F6E67 		.ascii	"long long int\000"
 3200      206C6F6E 
 3200      6720696E 
 3200      7400
 3201              	.LASF30:
 3202 033b 67315F78 		.ascii	"g1_xpos\000"
 3202      706F7300 
 3203              	.LASF107:
 3204 0343 70726576 		.ascii	"previousOrientation\000"
 3204      696F7573 
 3204      4F726965 
 3204      6E746174 
 3204      696F6E00 
 3205              	.LASF41:
 3206 0357 75547572 		.ascii	"uTurn\000"
 3206      6E00
 3207              	.LASF72:
 3208 035d 6E657744 		.ascii	"newDistance\000"
 3208      69737461 
 3208      6E636500 
 3209              	.LASF36:
 3210 0369 67325F73 		.ascii	"g2_speed\000"
 3210      70656564 
 3210      00
 3211              	.LASF27:
 3212 0372 67305F79 		.ascii	"g0_ypos\000"
 3212      706F7300 
 3213              	.LASF103:
 3214 037a 666F6F64 		.ascii	"food_list\000"
 3214      5F6C6973 
 3214      7400
 3215              	.LASF58:
 3216 0384 5475726E 		.ascii	"TurnLeft\000"
 3216      4C656674 
 3216      00
 3217              	.LASF87:
 3218 038d 74735F73 		.ascii	"ts_speed\000"
 3218      70656564 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 69


 3218      00
 3219              	.LASF62:
 3220 0396 556E6B6E 		.ascii	"Unknown\000"
 3220      6F776E00 
 3221              	.LASF76:
 3222 039e 64697265 		.ascii	"directionState\000"
 3222      6374696F 
 3222      6E537461 
 3222      746500
 3223              	.LASF16:
 3224 03ad 75696E74 		.ascii	"uint32\000"
 3224      333200
 3225              	.LASF40:
 3226 03b4 77616974 		.ascii	"waitForRightTurn\000"
 3226      466F7252 
 3226      69676874 
 3226      5475726E 
 3226      00
 3227              	.LASF57:
 3228 03c5 5475726E 		.ascii	"TurnRight\000"
 3228      52696768 
 3228      7400
 3229              	.LASF45:
 3230 03cf 64617461 		.ascii	"data_main\000"
 3230      5F6D6169 
 3230      6E00
 3231              	.LASF21:
 3232 03d9 72737369 		.ascii	"rssi\000"
 3232      00
 3233              	.LASF29:
 3234 03de 67305F64 		.ascii	"g0_direction\000"
 3234      69726563 
 3234      74696F6E 
 3234      00
 3235              	.LASF105:
 3236 03eb 70726576 		.ascii	"previousDirection\000"
 3236      696F7573 
 3236      44697265 
 3236      6374696F 
 3236      6E00
 3237              	.LASF9:
 3238 03fd 6C6F6E67 		.ascii	"long double\000"
 3238      20646F75 
 3238      626C6500 
 3239              	.LASF91:
 3240 0409 666C6167 		.ascii	"flag_ts_speed\000"
 3240      5F74735F 
 3240      73706565 
 3240      6400
 3241              	.LASF96:
 3242 0417 64617461 		.ascii	"dataready_flag\000"
 3242      72656164 
 3242      795F666C 
 3242      616700
 3243              	.LASF93:
 3244 0426 666C6167 		.ascii	"flag_rx\000"
 3244      5F727800 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 70


 3245              	.LASF117:
 3246 042e 79426C6F 		.ascii	"yBlocksize\000"
 3246      636B7369 
 3246      7A6500
 3247              	.LASF2:
 3248 0439 73686F72 		.ascii	"short int\000"
 3248      7420696E 
 3248      7400
 3249              	.LASF67:
 3250 0443 53345F44 		.ascii	"S4_DETECTED\000"
 3250      45544543 
 3250      54454400 
 3251              	.LASF66:
 3252 044f 53335F44 		.ascii	"S3_DETECTED\000"
 3252      45544543 
 3252      54454400 
 3253              	.LASF4:
 3254 045b 6C6F6E67 		.ascii	"long int\000"
 3254      20696E74 
 3254      00
 3255              	.LASF84:
 3256 0464 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3256      52784275 
 3256      66666572 
 3256      00
 3257              	.LASF86:
 3258 0471 74735F75 		.ascii	"ts_update\000"
 3258      70646174 
 3258      6500
 3259              	.LASF56:
 3260 047b 466F7277 		.ascii	"Forward\000"
 3260      61726400 
 3261              	.LASF109:
 3262 0483 746F7461 		.ascii	"totalMilliseconds\000"
 3262      6C4D696C 
 3262      6C697365 
 3262      636F6E64 
 3262      7300
 3263              	.LASF35:
 3264 0495 67325F79 		.ascii	"g2_ypos\000"
 3264      706F7300 
 3265              	.LASF51:
 3266 049d 4F726965 		.ascii	"OrientationState\000"
 3266      6E746174 
 3266      696F6E53 
 3266      74617465 
 3266      00
 3267              	.LASF52:
 3268 04ae 446F776E 		.ascii	"Down\000"
 3268      00
 3269              	.LASF54:
 3270 04b3 52696768 		.ascii	"Right\000"
 3270      7400
 3271              	.LASF31:
 3272 04b9 67315F79 		.ascii	"g1_ypos\000"
 3272      706F7300 
 3273              	.LASF104:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 71


 3274 04c1 63757272 		.ascii	"currentDirection\000"
 3274      656E7444 
 3274      69726563 
 3274      74696F6E 
 3274      00
 3275              	.LASF10:
 3276 04d2 73697A65 		.ascii	"sizetype\000"
 3276      74797065 
 3276      00
 3277              	.LASF5:
 3278 04db 6C6F6E67 		.ascii	"long unsigned int\000"
 3278      20756E73 
 3278      69676E65 
 3278      6420696E 
 3278      7400
 3279              	.LASF115:
 3280 04ed 73746F70 		.ascii	"stopBuffer\000"
 3280      42756666 
 3280      657200
 3281              	.LASF19:
 3282 04f8 666C6F61 		.ascii	"float\000"
 3282      7400
 3283              	.LASF13:
 3284 04fe 696E7433 		.ascii	"int32_t\000"
 3284      325F7400 
 3285              	.LASF23:
 3286 0506 726F626F 		.ascii	"robot_xpos\000"
 3286      745F7870 
 3286      6F7300
 3287              	.LASF100:
 3288 0511 656E7472 		.ascii	"entry\000"
 3288      7900
 3289              	.LASF55:
 3290 0517 526F626F 		.ascii	"RobotMovement\000"
 3290      744D6F76 
 3290      656D656E 
 3290      7400
 3291              	.LASF1:
 3292 0525 756E7369 		.ascii	"unsigned char\000"
 3292      676E6564 
 3292      20636861 
 3292      7200
 3293              	.LASF120:
 3294 0533 73746F70 		.ascii	"stoppedAfterTurn\000"
 3294      70656441 
 3294      66746572 
 3294      5475726E 
 3294      00
 3295              	.LASF99:
 3296 0544 6C696E65 		.ascii	"line\000"
 3296      00
 3297              	.LASF60:
 3298 0549 41646A75 		.ascii	"AdjustToTheRight\000"
 3298      7374546F 
 3298      54686552 
 3298      69676874 
 3298      00
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 72


 3299              	.LASF61:
 3300 055a 53746F70 		.ascii	"Stop\000"
 3300      00
 3301              	.LASF85:
 3302 055f 74735F65 		.ascii	"ts_enc\000"
 3302      6E6300
 3303              	.LASF92:
 3304 0566 666C6167 		.ascii	"flag_ts_display\000"
 3304      5F74735F 
 3304      64697370 
 3304      6C617900 
 3305              	.LASF44:
 3306 0576 536B6970 		.ascii	"Skip\000"
 3306      00
 3307              	.LASF98:
 3308 057b 64697370 		.ascii	"displaystring\000"
 3308      6C617973 
 3308      7472696E 
 3308      6700
 3309              	.LASF38:
 3310 0589 476F466F 		.ascii	"GoForward\000"
 3310      72776172 
 3310      6400
 3311              	.LASF68:
 3312 0593 53355F44 		.ascii	"S5_DETECTED\000"
 3312      45544543 
 3312      54454400 
 3313              	.LASF0:
 3314 059f 7369676E 		.ascii	"signed char\000"
 3314      65642063 
 3314      68617200 
 3315              	.LASF118:
 3316 05ab 63757272 		.ascii	"currentRow\000"
 3316      656E7452 
 3316      6F7700
 3317              	.LASF3:
 3318 05b6 73686F72 		.ascii	"short unsigned int\000"
 3318      7420756E 
 3318      7369676E 
 3318      65642069 
 3318      6E7400
 3319              	.LASF25:
 3320 05c9 726F626F 		.ascii	"robot_orientation\000"
 3320      745F6F72 
 3320      69656E74 
 3320      6174696F 
 3320      6E00
 3321              	.LASF71:
 3322 05db 6D61696E 		.ascii	"main\000"
 3322      00
 3323              	.LASF78:
 3324 05e0 6765744E 		.ascii	"getNextInstruction\000"
 3324      65787449 
 3324      6E737472 
 3324      75637469 
 3324      6F6E00
 3325              	.LASF108:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc0QjN5D.s 			page 73


 3326 05f3 63757272 		.ascii	"currentInstruction\000"
 3326      656E7449 
 3326      6E737472 
 3326      75637469 
 3326      6F6E00
 3327              	.LASF59:
 3328 0606 41646A75 		.ascii	"AdjustToTheLeft\000"
 3328      7374546F 
 3328      5468654C 
 3328      65667400 
 3329              	.LASF65:
 3330 0616 4261636B 		.ascii	"Backward\000"
 3330      77617264 
 3330      00
 3331              	.LASF14:
 3332 061f 75696E74 		.ascii	"uint8\000"
 3332      3800
 3333              	.LASF20:
 3334 0625 646F7562 		.ascii	"double\000"
 3334      6C6500
 3335              	.LASF74:
 3336 062c 43686563 		.ascii	"CheckSensorDirection\000"
 3336      6B53656E 
 3336      736F7244 
 3336      69726563 
 3336      74696F6E 
 3337              	.LASF119:
 3338 0641 63757272 		.ascii	"currentCol\000"
 3338      656E7443 
 3338      6F6C00
 3339              	.LASF26:
 3340 064c 67305F78 		.ascii	"g0_xpos\000"
 3340      706F7300 
 3341              	.LASF113:
 3342 0654 74696D65 		.ascii	"timerInt\000"
 3342      72496E74 
 3342      00
 3343              	.LASF95:
 3344 065d 666C6167 		.ascii	"flag_KB_string\000"
 3344      5F4B425F 
 3344      73747269 
 3344      6E6700
 3345              	.LASF32:
 3346 066c 67315F73 		.ascii	"g1_speed\000"
 3346      70656564 
 3346      00
 3347              	.LASF48:
 3348 0675 69676E6F 		.ascii	"ignoreL\000"
 3348      72654C00 
 3349              	.LASF49:
 3350 067d 69676E6F 		.ascii	"ignoreR\000"
 3350      72655200 
 3351              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
