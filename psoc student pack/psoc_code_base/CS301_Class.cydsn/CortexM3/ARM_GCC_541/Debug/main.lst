ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	previousInstruction,20,4
 122              		.comm	numSteps,4,4
 123              		.comm	instructionList,4,4
 124              		.bss
 125 0013 00       		.align	2
 126              	instructionIndex:
 127 0014 00000000 		.space	4
 128              		.comm	s3,1,1
 129              		.comm	s4,1,1
 130              		.comm	s5,1,1
 131              		.global	s6
 132              		.type	s6, %object
 133              		.size	s6, 1
 134              	s6:
 135 0018 00       		.space	1
 136              		.global	totalMilliseconds
 137 0019 000000   		.align	2
 138              		.type	totalMilliseconds, %object
 139              		.size	totalMilliseconds, 4
 140              	totalMilliseconds:
 141 001c 00000000 		.space	4
 142              		.global	totalDistance
 143              		.align	2
 144              		.type	totalDistance, %object
 145              		.size	totalDistance, 4
 146              	totalDistance:
 147 0020 00000000 		.space	4
 148              		.comm	buffer,69,4
 149              		.global	quadDec2Count
 150              		.align	2
 151              		.type	quadDec2Count, %object
 152              		.size	quadDec2Count, 4
 153              	quadDec2Count:
 154 0024 00000000 		.space	4
 155              		.global	timerInt
 156              		.align	2
 157              		.type	timerInt, %object
 158              		.size	timerInt, 4
 159              	timerInt:
 160 0028 00000000 		.space	4
 161              		.global	keepLedOn
 162              		.align	2
 163              		.type	keepLedOn, %object
 164              		.size	keepLedOn, 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 4


 165              	keepLedOn:
 166 002c 00000000 		.space	4
 167              		.global	stopBuffer
 168              		.align	2
 169              		.type	stopBuffer, %object
 170              		.size	stopBuffer, 4
 171              	stopBuffer:
 172 0030 00000000 		.space	4
 173              		.global	forwardBuffer
 174              		.align	1
 175              		.type	forwardBuffer, %object
 176              		.size	forwardBuffer, 2
 177              	forwardBuffer:
 178 0034 0000     		.space	2
 179              	turnStartedFlag:
 180 0036 00       		.space	1
 181              	turnFinishedFlag:
 182 0037 00       		.space	1
 183              	forwardUntilTargetStartedFlag:
 184 0038 00       		.space	1
 185              	uTurnStartedFlag:
 186 0039 00       		.space	1
 187              	uTurnFinishedFlag:
 188 003a 00       		.space	1
 189              	leftStatusFlag:
 190 003b 00       		.space	1
 191              	rightStatusFlag:
 192 003c 00       		.space	1
 193              	spinCourseCorrectionStarted:
 194 003d 00       		.space	1
 195              	currentIgnoreL:
 196 003e 00       		.space	1
 197              	currentIgnoreR:
 198 003f 00       		.space	1
 199              	totalLineCount:
 200 0040 00       		.space	1
 201              	lineCount:
 202 0041 00       		.space	1
 203              	onLineFlag:
 204 0042 00       		.space	1
 205              	tooEarlyFlag:
 206 0043 00       		.space	1
 207              	tooLateFlag:
 208 0044 00       		.space	1
 209              	dontOverwriteRightIgnore:
 210 0045 00       		.space	1
 211              	dontOverwriteLeftIgnore:
 212 0046 00       		.space	1
 213              		.global	junctionConfiguration
 214 0047 00       		.align	2
 215              		.type	junctionConfiguration, %object
 216              		.size	junctionConfiguration, 4
 217              	junctionConfiguration:
 218 0048 00000000 		.space	4
 219              		.global	currentFoodListIndex
 220              		.type	currentFoodListIndex, %object
 221              		.size	currentFoodListIndex, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 5


 222              	currentFoodListIndex:
 223 004c 00       		.space	1
 224              		.global	blockSizeTotal
 225 004d 000000   		.align	2
 226              		.type	blockSizeTotal, %object
 227              		.size	blockSizeTotal, 4
 228              	blockSizeTotal:
 229 0050 00000000 		.space	4
 230              		.global	__aeabi_i2d
 231              		.global	__aeabi_dmul
 232              		.global	__aeabi_ddiv
 233              		.global	__aeabi_d2f
 234              		.global	__aeabi_fadd
 235              		.section	.text.speedTimer,"ax",%progbits
 236              		.align	2
 237              		.global	speedTimer
 238              		.thumb
 239              		.thumb_func
 240              		.type	speedTimer, %function
 241              	speedTimer:
 242              	.LFB64:
 243              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** Instruction previousInstruction;
  30:main.c        **** int numSteps;
  31:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  32:main.c        **** Instruction * instructionList; // pointer to array
  33:main.c        **** volatile static uint32 instructionIndex = 0;
  34:main.c        **** Instruction GetInstructionAtIndex();
  35:main.c        **** float CalculateDistanceToTravel(float blockSize);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 6


  36:main.c        **** void MoveToNextInstruction();
  37:main.c        **** // ----------------------------------------
  38:main.c        **** uint8 s3, s4, s5, s6 = 0;
  39:main.c        **** //* ========================================
  40:main.c        **** // Calculating Distance
  41:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  42:main.c        **** 
  43:main.c        **** uint32 totalMilliseconds = 0;
  44:main.c        **** float totalDistance = 0; // in mm
  45:main.c        **** //* ========================================
  46:main.c        **** char buffer[69];
  47:main.c        **** int quadDec2Count = 0;
  48:main.c        **** int timerInt = 0;
  49:main.c        **** int keepLedOn = 0;
  50:main.c        **** // ========================================= FLAGS
  51:main.c        **** uint32 stopBuffer = 0;
  52:main.c        **** uint16 forwardBuffer = 0;
  53:main.c        **** volatile static uint8 turnStartedFlag = 0;
  54:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  55:main.c        **** 
  56:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  58:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  59:main.c        **** 
  60:main.c        **** volatile static uint8 leftStatusFlag = 0;
  61:main.c        **** volatile static uint8 rightStatusFlag = 0;
  62:main.c        **** 
  63:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  64:main.c        **** volatile static uint8 currentIgnoreL = 0;
  65:main.c        **** volatile static uint8 currentIgnoreR = 0;
  66:main.c        **** 
  67:main.c        **** void RotateClockwise180Degrees();
  68:main.c        **** 
  69:main.c        **** volatile static uint8 totalLineCount = 0;
  70:main.c        **** volatile static uint8 lineCount = 0;
  71:main.c        **** volatile static uint8 onLineFlag = 0;
  72:main.c        **** 
  73:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  74:main.c        **** volatile static uint8 tooLateFlag = 0;
  75:main.c        **** 
  76:main.c        **** volatile static uint8 dontOverwriteRightIgnore = 0;
  77:main.c        **** volatile static uint8 dontOverwriteLeftIgnore = 0;
  78:main.c        **** 
  79:main.c        **** uint8 junctionConfiguration[4] = {0};
  80:main.c        **** uint8 currentFoodListIndex = 0;
  81:main.c        **** 
  82:main.c        **** float blockSizeTotal = 0;
  83:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  84:main.c        **** 
  85:main.c        **** CY_ISR (speedTimer) {
 244              		.loc 1 85 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 90B5     		push	{r4, r7, lr}
 249              		.cfi_def_cfa_offset 12
 250              		.cfi_offset 4, -12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 7


 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 24
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  86:main.c        ****     timerInt = 1;
 257              		.loc 1 86 0
 258 0006 344B     		ldr	r3, .L4+16
 259 0008 0122     		movs	r2, #1
 260 000a 1A60     		str	r2, [r3]
  87:main.c        ****     //quadDec_M1 used for turning macros
  88:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 261              		.loc 1 88 0
 262 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 263 0010 0346     		mov	r3, r0
 264 0012 1A46     		mov	r2, r3
 265 0014 314B     		ldr	r3, .L4+20
 266 0016 1A60     		str	r2, [r3]
  89:main.c        ****     
  90:main.c        ****     if ((currentDirection == Forward || 
 267              		.loc 1 90 0
 268 0018 314B     		ldr	r3, .L4+24
 269 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 001c 002B     		cmp	r3, #0
 271 001e 13D0     		beq	.L2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 272              		.loc 1 91 0 discriminator 1
 273 0020 2F4B     		ldr	r3, .L4+24
 274 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:main.c        ****         currentDirection == ForwardAfterTurn ||
 275              		.loc 1 90 0 discriminator 1
 276 0024 082B     		cmp	r3, #8
 277 0026 0FD0     		beq	.L2
  92:main.c        ****         currentDirection == waitForTurn || 
 278              		.loc 1 92 0
 279 0028 2D4B     		ldr	r3, .L4+24
 280 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 281              		.loc 1 91 0
 282 002c 072B     		cmp	r3, #7
 283 002e 0BD0     		beq	.L2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 284              		.loc 1 93 0
 285 0030 2B4B     		ldr	r3, .L4+24
 286 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****         currentDirection == waitForTurn || 
 287              		.loc 1 92 0
 288 0034 032B     		cmp	r3, #3
 289 0036 07D0     		beq	.L2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 290              		.loc 1 94 0
 291 0038 294B     		ldr	r3, .L4+24
 292 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 293              		.loc 1 93 0
 294 003c 042B     		cmp	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 8


 295 003e 03D0     		beq	.L2
  95:main.c        ****         currentDirection == Backward) &&
 296              		.loc 1 95 0
 297 0040 274B     		ldr	r3, .L4+24
 298 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 299              		.loc 1 94 0
 300 0044 092B     		cmp	r3, #9
 301 0046 34D1     		bne	.L3
 302              	.L2:
  96:main.c        ****         quadDec2Count != 0) {
 303              		.loc 1 96 0
 304 0048 244B     		ldr	r3, .L4+20
 305 004a 1B68     		ldr	r3, [r3]
  95:main.c        ****         currentDirection == Backward) &&
 306              		.loc 1 95 0
 307 004c 002B     		cmp	r3, #0
 308 004e 30D0     		beq	.L3
 309              	.LBB2:
  97:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  98:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 310              		.loc 1 98 0
 311 0050 224B     		ldr	r3, .L4+20
 312 0052 1B68     		ldr	r3, [r3]
 313 0054 002B     		cmp	r3, #0
 314 0056 B8BF     		it	lt
 315 0058 5B42     		rsblt	r3, r3, #0
 316 005a 1846     		mov	r0, r3
 317 005c FFF7FEFF 		bl	__aeabi_i2d
 318 0060 19A3     		adr	r3, .L4
 319 0062 D3E90023 		ldrd	r2, [r3]
 320 0066 FFF7FEFF 		bl	__aeabi_dmul
 321 006a 0346     		mov	r3, r0
 322 006c 0C46     		mov	r4, r1
 323 006e 1846     		mov	r0, r3
 324 0070 2146     		mov	r1, r4
 325 0072 17A3     		adr	r3, .L4+8
 326 0074 D3E90023 		ldrd	r2, [r3]
 327 0078 FFF7FEFF 		bl	__aeabi_dmul
 328 007c 0346     		mov	r3, r0
 329 007e 0C46     		mov	r4, r1
 330 0080 1846     		mov	r0, r3
 331 0082 2146     		mov	r1, r4
 332 0084 4FF00002 		mov	r2, #0
 333 0088 164B     		ldr	r3, .L4+28
 334 008a FFF7FEFF 		bl	__aeabi_ddiv
 335 008e 0346     		mov	r3, r0
 336 0090 0C46     		mov	r4, r1
 337 0092 1846     		mov	r0, r3
 338 0094 2146     		mov	r1, r4
 339 0096 FFF7FEFF 		bl	__aeabi_d2f
 340 009a 0346     		mov	r3, r0
 341 009c 7B60     		str	r3, [r7, #4]	@ float
  99:main.c        ****         
 100:main.c        ****         totalDistance = totalDistance + newDistance;
 342              		.loc 1 100 0
 343 009e 124B     		ldr	r3, .L4+32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 9


 344 00a0 1B68     		ldr	r3, [r3]	@ float
 345 00a2 7968     		ldr	r1, [r7, #4]	@ float
 346 00a4 1846     		mov	r0, r3
 347 00a6 FFF7FEFF 		bl	__aeabi_fadd
 348 00aa 0346     		mov	r3, r0
 349 00ac 1A46     		mov	r2, r3
 350 00ae 0E4B     		ldr	r3, .L4+32
 351 00b0 1A60     		str	r2, [r3]	@ float
 352              	.L3:
 353              	.LBE2:
 101:main.c        ****     }
 102:main.c        ****     
 103:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 354              		.loc 1 103 0
 355 00b2 0020     		movs	r0, #0
 356 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 104:main.c        ****     QuadDec_M2_Start(); // restart counter
 357              		.loc 1 104 0
 358 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        ****     
 106:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 359              		.loc 1 106 0
 360 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 107:main.c        **** }
 361              		.loc 1 107 0
 362 00c0 00BF     		nop
 363 00c2 0C37     		adds	r7, r7, #12
 364              		.cfi_def_cfa_offset 12
 365 00c4 BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 00c6 90BD     		pop	{r4, r7, pc}
 369              	.L5:
 370              		.align	3
 371              	.L4:
 372 00c8 182D4454 		.word	1413754136
 373 00cc FB210940 		.word	1074340347
 374 00d0 00000000 		.word	0
 375 00d4 00205040 		.word	1078992896
 376 00d8 00000000 		.word	timerInt
 377 00dc 00000000 		.word	quadDec2Count
 378 00e0 00000000 		.word	currentDirection
 379 00e4 00806C40 		.word	1080852480
 380 00e8 00000000 		.word	totalDistance
 381              		.cfi_endproc
 382              	.LFE64:
 383              		.size	speedTimer, .-speedTimer
 384              		.section	.text.S3_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S3_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S3_DETECTED, %function
 390              	S3_DETECTED:
 391              	.LFB65:
 108:main.c        **** 
 109:main.c        **** CY_ISR(S3_DETECTED) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 10


 392              		.loc 1 109 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 110:main.c        ****     // Sensor has detected WHITE
 111:main.c        ****     s3 = 1; // , Black = 0, White = 1
 402              		.loc 1 111 0
 403 0004 034B     		ldr	r3, .L7
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 112:main.c        ****     //LED_Write(1u);
 113:main.c        **** }
 406              		.loc 1 113 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L8:
 416 0012 00BF     		.align	2
 417              	.L7:
 418 0014 00000000 		.word	s3
 419              		.cfi_endproc
 420              	.LFE65:
 421              		.size	S3_DETECTED, .-S3_DETECTED
 422              		.section	.text.S4_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S4_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S4_DETECTED, %function
 428              	S4_DETECTED:
 429              	.LFB66:
 114:main.c        **** 
 115:main.c        **** CY_ISR(S4_DETECTED) {
 430              		.loc 1 115 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 116:main.c        ****     // Sensor has detected WHITE
 117:main.c        ****     s4 = 1; // , Black = 0, White = 1
 440              		.loc 1 117 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 11


 441 0004 034B     		ldr	r3, .L10
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 118:main.c        ****     //LED_Write(1u);
 119:main.c        **** }
 444              		.loc 1 119 0
 445 000a 00BF     		nop
 446 000c BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L11:
 454 0012 00BF     		.align	2
 455              	.L10:
 456 0014 00000000 		.word	s4
 457              		.cfi_endproc
 458              	.LFE66:
 459              		.size	S4_DETECTED, .-S4_DETECTED
 460              		.section	.text.S5_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S5_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S5_DETECTED, %function
 466              	S5_DETECTED:
 467              	.LFB67:
 120:main.c        **** 
 121:main.c        **** CY_ISR(S5_DETECTED) {
 468              		.loc 1 121 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 122:main.c        ****     // Sensor has detected WHITE
 123:main.c        ****     s5 = 1; // , Black = 0, White = 1
 478              		.loc 1 123 0
 479 0004 034B     		ldr	r3, .L13
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 124:main.c        ****     //LED_Write(1u);
 125:main.c        **** }
 482              		.loc 1 125 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 12


 490 0010 7047     		bx	lr
 491              	.L14:
 492 0012 00BF     		.align	2
 493              	.L13:
 494 0014 00000000 		.word	s5
 495              		.cfi_endproc
 496              	.LFE67:
 497              		.size	S5_DETECTED, .-S5_DETECTED
 498              		.section	.text.S6_DETECTED,"ax",%progbits
 499              		.align	2
 500              		.global	S6_DETECTED
 501              		.thumb
 502              		.thumb_func
 503              		.type	S6_DETECTED, %function
 504              	S6_DETECTED:
 505              	.LFB68:
 126:main.c        **** 
 127:main.c        **** CY_ISR(S6_DETECTED) {
 506              		.loc 1 127 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 128:main.c        ****     // Sensor has detected WHITE
 129:main.c        ****     s6 = 1; // , Black = 0, White = 1
 516              		.loc 1 129 0
 517 0004 034B     		ldr	r3, .L16
 518 0006 0122     		movs	r2, #1
 519 0008 1A70     		strb	r2, [r3]
 130:main.c        ****     //LED_Write(1u);
 131:main.c        **** }
 520              		.loc 1 131 0
 521 000a 00BF     		nop
 522 000c BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 000e 80BC     		pop	{r7}
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 0010 7047     		bx	lr
 529              	.L17:
 530 0012 00BF     		.align	2
 531              	.L16:
 532 0014 00000000 		.word	s6
 533              		.cfi_endproc
 534              	.LFE68:
 535              		.size	S6_DETECTED, .-S6_DETECTED
 536              		.section	.text.TIMER_FINISH,"ax",%progbits
 537              		.align	2
 538              		.global	TIMER_FINISH
 539              		.thumb
 540              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 13


 541              		.type	TIMER_FINISH, %function
 542              	TIMER_FINISH:
 543              	.LFB69:
 132:main.c        **** 
 133:main.c        **** CY_ISR(TIMER_FINISH) {
 544              		.loc 1 133 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 134:main.c        ****     if (currentDirection == Stop) {
 554              		.loc 1 134 0
 555 0004 174B     		ldr	r3, .L24
 556 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 0008 052B     		cmp	r3, #5
 558 000a 05D1     		bne	.L19
 135:main.c        ****         stopBuffer = stopBuffer + 1;
 559              		.loc 1 135 0
 560 000c 164B     		ldr	r3, .L24+4
 561 000e 1B68     		ldr	r3, [r3]
 562 0010 0133     		adds	r3, r3, #1
 563 0012 154A     		ldr	r2, .L24+4
 564 0014 1360     		str	r3, [r2]
 565 0016 02E0     		b	.L20
 566              	.L19:
 136:main.c        ****     } else {
 137:main.c        ****         stopBuffer = 0;
 567              		.loc 1 137 0
 568 0018 134B     		ldr	r3, .L24+4
 569 001a 0022     		movs	r2, #0
 570 001c 1A60     		str	r2, [r3]
 571              	.L20:
 138:main.c        ****     }
 139:main.c        ****     if (currentDirection == Forward || 
 572              		.loc 1 139 0
 573 001e 114B     		ldr	r3, .L24
 574 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0022 002B     		cmp	r3, #0
 576 0024 0BD0     		beq	.L21
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
 577              		.loc 1 140 0 discriminator 1
 578 0026 0F4B     		ldr	r3, .L24
 579 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:main.c        ****         currentDirection == AdjustToTheLeft ||
 580              		.loc 1 139 0 discriminator 1
 581 002a 032B     		cmp	r3, #3
 582 002c 07D0     		beq	.L21
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 583              		.loc 1 141 0
 584 002e 0D4B     		ldr	r3, .L24
 585 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 14


 586              		.loc 1 140 0
 587 0032 042B     		cmp	r3, #4
 588 0034 03D0     		beq	.L21
 142:main.c        ****         currentDirection == ForwardAfterTurn) {
 589              		.loc 1 142 0
 590 0036 0B4B     		ldr	r3, .L24
 591 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 592              		.loc 1 141 0
 593 003a 082B     		cmp	r3, #8
 594 003c 06D1     		bne	.L22
 595              	.L21:
 143:main.c        ****         forwardBuffer = forwardBuffer + 1;
 596              		.loc 1 143 0
 597 003e 0B4B     		ldr	r3, .L24+8
 598 0040 1B88     		ldrh	r3, [r3]
 599 0042 0133     		adds	r3, r3, #1
 600 0044 9AB2     		uxth	r2, r3
 601 0046 094B     		ldr	r3, .L24+8
 602 0048 1A80     		strh	r2, [r3]	@ movhi
 603 004a 02E0     		b	.L23
 604              	.L22:
 144:main.c        ****     } else {
 145:main.c        ****         forwardBuffer = 0;    
 605              		.loc 1 145 0
 606 004c 074B     		ldr	r3, .L24+8
 607 004e 0022     		movs	r2, #0
 608 0050 1A80     		strh	r2, [r3]	@ movhi
 609              	.L23:
 146:main.c        ****     }
 147:main.c        ****     SetRobotMovement(); 
 610              		.loc 1 147 0
 611 0052 FFF7FEFF 		bl	SetRobotMovement
 148:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 612              		.loc 1 148 0
 613 0056 FFF7FEFF 		bl	ResetSensorFlags
 149:main.c        ****     Timer_LED_ReadStatusRegister();
 614              		.loc 1 149 0
 615 005a FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 150:main.c        **** }
 616              		.loc 1 150 0
 617 005e 00BF     		nop
 618 0060 80BD     		pop	{r7, pc}
 619              	.L25:
 620 0062 00BF     		.align	2
 621              	.L24:
 622 0064 00000000 		.word	currentDirection
 623 0068 00000000 		.word	stopBuffer
 624 006c 00000000 		.word	forwardBuffer
 625              		.cfi_endproc
 626              	.LFE69:
 627              		.size	TIMER_FINISH, .-TIMER_FINISH
 628              		.section	.text.main,"ax",%progbits
 629              		.align	2
 630              		.global	main
 631              		.thumb
 632              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 15


 633              		.type	main, %function
 634              	main:
 635              	.LFB70:
 151:main.c        **** 
 152:main.c        **** 
 153:main.c        **** int main() {
 636              		.loc 1 153 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 24
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 B0B5     		push	{r4, r5, r7, lr}
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 86B0     		sub	sp, sp, #24
 647              		.cfi_def_cfa_offset 40
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 154:main.c        **** // ----- INITIALIZATIONS ----------
 155:main.c        ****     CYGlobalIntEnable;
 650              		.loc 1 155 0
 651              		.syntax unified
 652              	@ 155 "main.c" 1
 653 0006 62B6     		CPSIE   i
 654              	@ 0 "" 2
 156:main.c        ****     ResetSensorFlags();
 655              		.loc 1 156 0
 656              		.thumb
 657              		.syntax unified
 658 0008 FFF7FEFF 		bl	ResetSensorFlags
 157:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 659              		.loc 1 157 0
 660 000c FFF7FEFF 		bl	init
 158:main.c        ****     
 159:main.c        ****     // MAKE SURE TO CHANGE ORIENTATION
 160:main.c        ****     instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, Down); // initia
 661              		.loc 1 160 0
 662 0010 2B4B     		ldr	r3, .L29
 663 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664 0014 1A46     		mov	r2, r3
 665 0016 0123     		movs	r3, #1
 666 0018 2A49     		ldr	r1, .L29+4
 667 001a 2B48     		ldr	r0, .L29+8
 668 001c FFF7FEFF 		bl	findPathNewOrientation
 669 0020 0246     		mov	r2, r0
 670 0022 2A4B     		ldr	r3, .L29+12
 671 0024 1A60     		str	r2, [r3]
 161:main.c        ****     numSteps = instructionsListLength();
 672              		.loc 1 161 0
 673 0026 FFF7FEFF 		bl	instructionsListLength
 674 002a 0346     		mov	r3, r0
 675 002c 1A46     		mov	r2, r3
 676 002e 284B     		ldr	r3, .L29+16
 677 0030 1A60     		str	r2, [r3]
 162:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 16


 163:main.c        ****     currentInstruction = GetInstructionAtIndex();
 678              		.loc 1 163 0
 679 0032 284C     		ldr	r4, .L29+20
 680 0034 3B46     		mov	r3, r7
 681 0036 1846     		mov	r0, r3
 682 0038 FFF7FEFF 		bl	GetInstructionAtIndex
 683 003c 2546     		mov	r5, r4
 684 003e 3C46     		mov	r4, r7
 685 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 686 0042 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 687 0044 2368     		ldr	r3, [r4]
 688 0046 2B60     		str	r3, [r5]
 164:main.c        ****     
 165:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 689              		.loc 1 165 0
 690 0048 204B     		ldr	r3, .L29+12
 691 004a 1968     		ldr	r1, [r3]
 692 004c 224B     		ldr	r3, .L29+24
 693 004e 1A68     		ldr	r2, [r3]
 694 0050 1346     		mov	r3, r2
 695 0052 9B00     		lsls	r3, r3, #2
 696 0054 1344     		add	r3, r3, r2
 697 0056 9B00     		lsls	r3, r3, #2
 698 0058 0B44     		add	r3, r3, r1
 699 005a 5B68     		ldr	r3, [r3, #4]
 700 005c DAB2     		uxtb	r2, r3
 701 005e 1F4B     		ldr	r3, .L29+28
 702 0060 1A70     		strb	r2, [r3]
 166:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 703              		.loc 1 166 0
 704 0062 1A4B     		ldr	r3, .L29+12
 705 0064 1968     		ldr	r1, [r3]
 706 0066 1C4B     		ldr	r3, .L29+24
 707 0068 1A68     		ldr	r2, [r3]
 708 006a 1346     		mov	r3, r2
 709 006c 9B00     		lsls	r3, r3, #2
 710 006e 1344     		add	r3, r3, r2
 711 0070 9B00     		lsls	r3, r3, #2
 712 0072 0B44     		add	r3, r3, r1
 713 0074 9B68     		ldr	r3, [r3, #8]
 714 0076 DAB2     		uxtb	r2, r3
 715 0078 194B     		ldr	r3, .L29+32
 716 007a 1A70     		strb	r2, [r3]
 167:main.c        ****     
 168:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 717              		.loc 1 168 0
 718 007c 1948     		ldr	r0, .L29+36
 719 007e FFF7FEFF 		bl	isr_speed_StartEx
 169:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 720              		.loc 1 169 0
 721 0082 1948     		ldr	r0, .L29+40
 722 0084 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 170:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 723              		.loc 1 170 0
 724 0088 1848     		ldr	r0, .L29+44
 725 008a FFF7FEFF 		bl	S3_detected_StartEx
 171:main.c        ****     S4_detected_StartEx(S4_DETECTED);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 17


 726              		.loc 1 171 0
 727 008e 1848     		ldr	r0, .L29+48
 728 0090 FFF7FEFF 		bl	S4_detected_StartEx
 172:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 729              		.loc 1 172 0
 730 0094 1748     		ldr	r0, .L29+52
 731 0096 FFF7FEFF 		bl	S5_detected_StartEx
 173:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 732              		.loc 1 173 0
 733 009a 1748     		ldr	r0, .L29+56
 734 009c FFF7FEFF 		bl	S6_detected_StartEx
 174:main.c        ****     Timer_LED_Start();
 735              		.loc 1 174 0
 736 00a0 FFF7FEFF 		bl	Timer_LED_Start
 737              	.L28:
 175:main.c        **** 
 176:main.c        ****     for(;;)
 177:main.c        ****     {
 178:main.c        ****         if(timerInt == 1) {
 738              		.loc 1 178 0
 739 00a4 154B     		ldr	r3, .L29+60
 740 00a6 1B68     		ldr	r3, [r3]
 741 00a8 012B     		cmp	r3, #1
 742 00aa FBD1     		bne	.L28
 179:main.c        ****             timerInt = 0;
 743              		.loc 1 179 0
 744 00ac 134B     		ldr	r3, .L29+60
 745 00ae 0022     		movs	r2, #0
 746 00b0 1A60     		str	r2, [r3]
 180:main.c        ****             // calculate RPM of M2
 181:main.c        ****             quadCountToRPM(quadDec2Count);
 747              		.loc 1 181 0
 748 00b2 134B     		ldr	r3, .L29+64
 749 00b4 1B68     		ldr	r3, [r3]
 750 00b6 9BB2     		uxth	r3, r3
 751 00b8 1846     		mov	r0, r3
 752 00ba FFF7FEFF 		bl	quadCountToRPM
 182:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 183:main.c        ****             //usbPutString(buffer);
 184:main.c        ****             //usbPutString(" ");
 185:main.c        ****         }
 186:main.c        ****     }
 753              		.loc 1 186 0
 754 00be F1E7     		b	.L28
 755              	.L30:
 756              		.align	2
 757              	.L29:
 758 00c0 00000000 		.word	currentFoodListIndex
 759 00c4 00000000 		.word	food_list
 760 00c8 00000000 		.word	map
 761 00cc 00000000 		.word	instructionList
 762 00d0 00000000 		.word	numSteps
 763 00d4 00000000 		.word	currentInstruction
 764 00d8 14000000 		.word	instructionIndex
 765 00dc 3E000000 		.word	currentIgnoreL
 766 00e0 3F000000 		.word	currentIgnoreR
 767 00e4 00000000 		.word	speedTimer
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 18


 768 00e8 00000000 		.word	TIMER_FINISH
 769 00ec 00000000 		.word	S3_DETECTED
 770 00f0 00000000 		.word	S4_DETECTED
 771 00f4 00000000 		.word	S5_DETECTED
 772 00f8 00000000 		.word	S6_DETECTED
 773 00fc 00000000 		.word	timerInt
 774 0100 00000000 		.word	quadDec2Count
 775              		.cfi_endproc
 776              	.LFE70:
 777              		.size	main, .-main
 778              		.global	__aeabi_fmul
 779              		.global	__aeabi_f2iz
 780              		.section	.text.quadCountToRPM,"ax",%progbits
 781              		.align	2
 782              		.global	quadCountToRPM
 783              		.thumb
 784              		.thumb_func
 785              		.type	quadCountToRPM, %function
 786              	quadCountToRPM:
 787              	.LFB71:
 187:main.c        ****     return 0;
 188:main.c        **** }
 189:main.c        **** 
 190:main.c        **** // Calculations
 191:main.c        **** //* ========================================
 192:main.c        **** int16 quadCountToRPM(uint16 count) {
 788              		.loc 1 192 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 16
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 90B5     		push	{r4, r7, lr}
 793              		.cfi_def_cfa_offset 12
 794              		.cfi_offset 4, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 85B0     		sub	sp, sp, #20
 798              		.cfi_def_cfa_offset 32
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 801 0006 0346     		mov	r3, r0
 802 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 193:main.c        ****     float cps = count/57.00;
 803              		.loc 1 193 0
 804 000a FB88     		ldrh	r3, [r7, #6]
 805 000c 1846     		mov	r0, r3
 806 000e FFF7FEFF 		bl	__aeabi_i2d
 807 0012 4FF00002 		mov	r2, #0
 808 0016 0D4B     		ldr	r3, .L33
 809 0018 FFF7FEFF 		bl	__aeabi_ddiv
 810 001c 0346     		mov	r3, r0
 811 001e 0C46     		mov	r4, r1
 812 0020 1846     		mov	r0, r3
 813 0022 2146     		mov	r1, r4
 814 0024 FFF7FEFF 		bl	__aeabi_d2f
 815 0028 0346     		mov	r3, r0
 816 002a FB60     		str	r3, [r7, #12]	@ float
 194:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 19


 817              		.loc 1 194 0
 818 002c 0849     		ldr	r1, .L33+4
 819 002e F868     		ldr	r0, [r7, #12]	@ float
 820 0030 FFF7FEFF 		bl	__aeabi_fmul
 821 0034 0346     		mov	r3, r0
 822 0036 1846     		mov	r0, r3
 823 0038 FFF7FEFF 		bl	__aeabi_f2iz
 824 003c 0346     		mov	r3, r0
 825 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 195:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 196:main.c        ****     return rpm;
 826              		.loc 1 196 0
 827 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 197:main.c        ****     //usbPutString(buffer);
 198:main.c        ****     //usbPutString("rpm ");
 199:main.c        **** }
 828              		.loc 1 199 0
 829 0044 1846     		mov	r0, r3
 830 0046 1437     		adds	r7, r7, #20
 831              		.cfi_def_cfa_offset 12
 832 0048 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 004a 90BD     		pop	{r4, r7, pc}
 836              	.L34:
 837              		.align	2
 838              	.L33:
 839 004c 00804C40 		.word	1078755328
 840 0050 00007041 		.word	1097859072
 841              		.cfi_endproc
 842              	.LFE71:
 843              		.size	quadCountToRPM, .-quadCountToRPM
 844              		.section	.text.ResetSensorFlags,"ax",%progbits
 845              		.align	2
 846              		.global	ResetSensorFlags
 847              		.thumb
 848              		.thumb_func
 849              		.type	ResetSensorFlags, %function
 850              	ResetSensorFlags:
 851              	.LFB72:
 200:main.c        **** 
 201:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 202:main.c        **** void ResetSensorFlags() {
 852              		.loc 1 202 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857 0000 80B4     		push	{r7}
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 203:main.c        ****     s3 = 0;
 862              		.loc 1 203 0
 863 0004 074B     		ldr	r3, .L36
 864 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 20


 865 0008 1A70     		strb	r2, [r3]
 204:main.c        ****     s4 = 0;
 866              		.loc 1 204 0
 867 000a 074B     		ldr	r3, .L36+4
 868 000c 0022     		movs	r2, #0
 869 000e 1A70     		strb	r2, [r3]
 205:main.c        ****     s5 = 0;
 870              		.loc 1 205 0
 871 0010 064B     		ldr	r3, .L36+8
 872 0012 0022     		movs	r2, #0
 873 0014 1A70     		strb	r2, [r3]
 206:main.c        ****     s6 = 0;
 874              		.loc 1 206 0
 875 0016 064B     		ldr	r3, .L36+12
 876 0018 0022     		movs	r2, #0
 877 001a 1A70     		strb	r2, [r3]
 207:main.c        **** }
 878              		.loc 1 207 0
 879 001c 00BF     		nop
 880 001e BD46     		mov	sp, r7
 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0020 80BC     		pop	{r7}
 884              		.cfi_restore 7
 885              		.cfi_def_cfa_offset 0
 886 0022 7047     		bx	lr
 887              	.L37:
 888              		.align	2
 889              	.L36:
 890 0024 00000000 		.word	s3
 891 0028 00000000 		.word	s4
 892 002c 00000000 		.word	s5
 893 0030 00000000 		.word	s6
 894              		.cfi_endproc
 895              	.LFE72:
 896              		.size	ResetSensorFlags, .-ResetSensorFlags
 897              		.global	xBlocksize
 898              		.data
 899 0045 000000   		.align	2
 900              		.type	xBlocksize, %object
 901              		.size	xBlocksize, 4
 902              	xBlocksize:
 903 0048 0000E842 		.word	1122500608
 904              		.global	yBlocksize
 905              		.align	2
 906              		.type	yBlocksize, %object
 907              		.size	yBlocksize, 4
 908              	yBlocksize:
 909 004c 00009042 		.word	1116733440
 910              		.global	currentRow
 911              		.type	currentRow, %object
 912              		.size	currentRow, 1
 913              	currentRow:
 914 0050 01       		.byte	1
 915              		.global	currentCol
 916              		.type	currentCol, %object
 917              		.size	currentCol, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 21


 918              	currentCol:
 919 0051 01       		.byte	1
 920              		.global	stoppedAfterTurn
 921              		.bss
 922              		.type	stoppedAfterTurn, %object
 923              		.size	stoppedAfterTurn, 1
 924              	stoppedAfterTurn:
 925 0054 00       		.space	1
 926              		.global	ignoreSensor
 927              		.type	ignoreSensor, %object
 928              		.size	ignoreSensor, 1
 929              	ignoreSensor:
 930 0055 00       		.space	1
 931              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 932              		.align	2
 933              		.global	ForwardCourseCorrection
 934              		.thumb
 935              		.thumb_func
 936              		.type	ForwardCourseCorrection, %function
 937              	ForwardCourseCorrection:
 938              	.LFB73:
 208:main.c        **** 
 209:main.c        **** float xBlocksize = 116; // 122 mm
 210:main.c        **** float yBlocksize = 72; // 80 mm
 211:main.c        **** uint8 currentRow = 1;
 212:main.c        **** uint8 currentCol = 1;
 213:main.c        **** 
 214:main.c        **** uint8 stoppedAfterTurn = 0;
 215:main.c        **** uint8 ignoreSensor = 0;
 216:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 217:main.c        **** 
 218:main.c        **** enum RobotMovement ForwardCourseCorrection();
 219:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 939              		.loc 1 219 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
 220:main.c        ****     // if S5 and S6 are on black, move forward
 221:main.c        ****     if (!s5 && !s6) {
 949              		.loc 1 221 0
 950 0004 1C4B     		ldr	r3, .L46
 951 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 0008 002B     		cmp	r3, #0
 953 000a 0FD1     		bne	.L39
 954              		.loc 1 221 0 is_stmt 0 discriminator 1
 955 000c 1B4B     		ldr	r3, .L46+4
 956 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957 0010 002B     		cmp	r3, #0
 958 0012 0BD1     		bne	.L39
 222:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 959              		.loc 1 222 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 22


 960 0014 1A4B     		ldr	r3, .L46+8
 961 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0018 032B     		cmp	r3, #3
 963 001a 01D0     		beq	.L40
 223:main.c        ****             return AdjustToTheLeft;
 964              		.loc 1 223 0
 965 001c 0323     		movs	r3, #3
 966 001e 26E0     		b	.L41
 967              	.L40:
 224:main.c        ****         }
 225:main.c        ****         if (previousDirection != AdjustToTheRight) {
 968              		.loc 1 225 0
 969 0020 174B     		ldr	r3, .L46+8
 970 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0024 042B     		cmp	r3, #4
 972 0026 01D0     		beq	.L39
 226:main.c        ****             return AdjustToTheRight;    
 973              		.loc 1 226 0
 974 0028 0423     		movs	r3, #4
 975 002a 20E0     		b	.L41
 976              	.L39:
 227:main.c        ****         }
 228:main.c        ****     }
 229:main.c        ****     
 230:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 231:main.c        ****     if (s5 && s6) {
 977              		.loc 1 231 0
 978 002c 124B     		ldr	r3, .L46
 979 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0030 002B     		cmp	r3, #0
 981 0032 0FD0     		beq	.L42
 982              		.loc 1 231 0 is_stmt 0 discriminator 1
 983 0034 114B     		ldr	r3, .L46+4
 984 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 985 0038 002B     		cmp	r3, #0
 986 003a 0BD0     		beq	.L42
 232:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 987              		.loc 1 232 0 is_stmt 1
 988 003c 104B     		ldr	r3, .L46+8
 989 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 0040 032B     		cmp	r3, #3
 991 0042 01D0     		beq	.L43
 233:main.c        ****             return AdjustToTheLeft;
 992              		.loc 1 233 0
 993 0044 0323     		movs	r3, #3
 994 0046 12E0     		b	.L41
 995              	.L43:
 234:main.c        ****         }
 235:main.c        ****         if (previousDirection != AdjustToTheRight) {
 996              		.loc 1 235 0
 997 0048 0D4B     		ldr	r3, .L46+8
 998 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 004c 042B     		cmp	r3, #4
 1000 004e 01D0     		beq	.L42
 236:main.c        ****             return AdjustToTheRight;    
 1001              		.loc 1 236 0
 1002 0050 0423     		movs	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 23


 1003 0052 0CE0     		b	.L41
 1004              	.L42:
 237:main.c        ****         }
 238:main.c        ****     }
 239:main.c        **** 
 240:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 241:main.c        ****     if (s5) {
 1005              		.loc 1 241 0
 1006 0054 084B     		ldr	r3, .L46
 1007 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 0058 002B     		cmp	r3, #0
 1009 005a 01D0     		beq	.L44
 242:main.c        ****         return AdjustToTheRight;    
 1010              		.loc 1 242 0
 1011 005c 0423     		movs	r3, #4
 1012 005e 06E0     		b	.L41
 1013              	.L44:
 243:main.c        ****     }
 244:main.c        ****     if (s6) {
 1014              		.loc 1 244 0
 1015 0060 064B     		ldr	r3, .L46+4
 1016 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 0064 002B     		cmp	r3, #0
 1018 0066 01D0     		beq	.L45
 245:main.c        ****         return AdjustToTheLeft;    
 1019              		.loc 1 245 0
 1020 0068 0323     		movs	r3, #3
 1021 006a 00E0     		b	.L41
 1022              	.L45:
 246:main.c        ****     }
 247:main.c        ****    
 248:main.c        ****     // We should never actually get to this point
 249:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 250:main.c        ****     return Stop;
 1023              		.loc 1 250 0
 1024 006c 0523     		movs	r3, #5
 1025              	.L41:
 251:main.c        **** }
 1026              		.loc 1 251 0
 1027 006e 1846     		mov	r0, r3
 1028 0070 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 0072 80BC     		pop	{r7}
 1032              		.cfi_restore 7
 1033              		.cfi_def_cfa_offset 0
 1034 0074 7047     		bx	lr
 1035              	.L47:
 1036 0076 00BF     		.align	2
 1037              	.L46:
 1038 0078 00000000 		.word	s5
 1039 007c 00000000 		.word	s6
 1040 0080 00000000 		.word	previousDirection
 1041              		.cfi_endproc
 1042              	.LFE73:
 1043              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1044              		.global	lastDirectionAfter180
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 24


 1045              		.data
 1046              		.type	lastDirectionAfter180, %object
 1047              		.size	lastDirectionAfter180, 1
 1048              	lastDirectionAfter180:
 1049 0052 06       		.byte	6
 1050              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1051              		.align	2
 1052              		.global	SpinCourseCorrection
 1053              		.thumb
 1054              		.thumb_func
 1055              		.type	SpinCourseCorrection, %function
 1056              	SpinCourseCorrection:
 1057              	.LFB74:
 252:main.c        **** 
 253:main.c        **** enum RobotMovement SpinCourseCorrection();
 254:main.c        **** 
 255:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 256:main.c        **** 
 257:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1058              		.loc 1 257 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
 1063 0000 80B4     		push	{r7}
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 258:main.c        ****     // Set first iteration flag.
 259:main.c        ****     if (!spinCourseCorrectionStarted) {
 1068              		.loc 1 259 0
 1069 0004 184B     		ldr	r3, .L55
 1070 0006 1B78     		ldrb	r3, [r3]
 1071 0008 DBB2     		uxtb	r3, r3
 1072 000a 002B     		cmp	r3, #0
 1073 000c 06D1     		bne	.L49
 260:main.c        ****         spinCourseCorrectionStarted = 1;    
 1074              		.loc 1 260 0
 1075 000e 164B     		ldr	r3, .L55
 1076 0010 0122     		movs	r2, #1
 1077 0012 1A70     		strb	r2, [r3]
 261:main.c        ****         lastDirectionAfter180 = currentDirection;
 1078              		.loc 1 261 0
 1079 0014 154B     		ldr	r3, .L55+4
 1080 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1081 0018 154B     		ldr	r3, .L55+8
 1082 001a 1A70     		strb	r2, [r3]
 1083              	.L49:
 262:main.c        ****     }
 263:main.c        ****     
 264:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 265:main.c        ****     if (s5 && s6) {
 1084              		.loc 1 265 0
 1085 001c 154B     		ldr	r3, .L55+12
 1086 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 25


 1088 0022 0FD0     		beq	.L50
 1089              		.loc 1 265 0 is_stmt 0 discriminator 1
 1090 0024 144B     		ldr	r3, .L55+16
 1091 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0028 002B     		cmp	r3, #0
 1093 002a 0BD0     		beq	.L50
 266:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1094              		.loc 1 266 0 is_stmt 1
 1095 002c 104B     		ldr	r3, .L55+8
 1096 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0030 022B     		cmp	r3, #2
 1098 0032 01D0     		beq	.L51
 267:main.c        ****             return TurnLeft;
 1099              		.loc 1 267 0
 1100 0034 0223     		movs	r3, #2
 1101 0036 12E0     		b	.L52
 1102              	.L51:
 268:main.c        ****         }
 269:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1103              		.loc 1 269 0
 1104 0038 0D4B     		ldr	r3, .L55+8
 1105 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 003c 012B     		cmp	r3, #1
 1107 003e 01D0     		beq	.L50
 270:main.c        ****             return TurnRight;    
 1108              		.loc 1 270 0
 1109 0040 0123     		movs	r3, #1
 1110 0042 0CE0     		b	.L52
 1111              	.L50:
 271:main.c        ****         }
 272:main.c        ****     }
 273:main.c        **** 
 274:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 275:main.c        ****     if (s5) {
 1112              		.loc 1 275 0
 1113 0044 0B4B     		ldr	r3, .L55+12
 1114 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0048 002B     		cmp	r3, #0
 1116 004a 01D0     		beq	.L53
 276:main.c        ****         return TurnRight;    
 1117              		.loc 1 276 0
 1118 004c 0123     		movs	r3, #1
 1119 004e 06E0     		b	.L52
 1120              	.L53:
 277:main.c        ****     }
 278:main.c        ****     if (s6) {
 1121              		.loc 1 278 0
 1122 0050 094B     		ldr	r3, .L55+16
 1123 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0054 002B     		cmp	r3, #0
 1125 0056 01D0     		beq	.L54
 279:main.c        ****         return TurnLeft;    
 1126              		.loc 1 279 0
 1127 0058 0223     		movs	r3, #2
 1128 005a 00E0     		b	.L52
 1129              	.L54:
 280:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 26


 281:main.c        ****    
 282:main.c        ****     // We should never actually get to this point
 283:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 284:main.c        ****     return Stop;
 1130              		.loc 1 284 0
 1131 005c 0523     		movs	r3, #5
 1132              	.L52:
 285:main.c        **** }
 1133              		.loc 1 285 0
 1134 005e 1846     		mov	r0, r3
 1135 0060 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0062 80BC     		pop	{r7}
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0064 7047     		bx	lr
 1142              	.L56:
 1143 0066 00BF     		.align	2
 1144              	.L55:
 1145 0068 3D000000 		.word	spinCourseCorrectionStarted
 1146 006c 00000000 		.word	currentDirection
 1147 0070 00000000 		.word	lastDirectionAfter180
 1148 0074 00000000 		.word	s5
 1149 0078 00000000 		.word	s6
 1150              		.cfi_endproc
 1151              	.LFE74:
 1152              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1153              		.section	.text.SpinTurnCourseCorrection,"ax",%progbits
 1154              		.align	2
 1155              		.global	SpinTurnCourseCorrection
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	SpinTurnCourseCorrection, %function
 1159              	SpinTurnCourseCorrection:
 1160              	.LFB75:
 286:main.c        **** enum RobotMovement SpinTurnCourseCorrection();
 287:main.c        **** enum RobotMovement SpinTurnCourseCorrection() {
 1161              		.loc 1 287 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166 0000 80B4     		push	{r7}
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 00AF     		add	r7, sp, #0
 1170              		.cfi_def_cfa_register 7
 288:main.c        ****     // if S5 and S6 are on black, move forward
 289:main.c        ****     if (!s5 && !s6) {
 1171              		.loc 1 289 0
 1172 0004 1C4B     		ldr	r3, .L65
 1173 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1174 0008 002B     		cmp	r3, #0
 1175 000a 0FD1     		bne	.L58
 1176              		.loc 1 289 0 is_stmt 0 discriminator 1
 1177 000c 1B4B     		ldr	r3, .L65+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 27


 1178 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 0010 002B     		cmp	r3, #0
 1180 0012 0BD1     		bne	.L58
 290:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1181              		.loc 1 290 0 is_stmt 1
 1182 0014 1A4B     		ldr	r3, .L65+8
 1183 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 0018 032B     		cmp	r3, #3
 1185 001a 01D0     		beq	.L59
 291:main.c        ****             return TurnLeft;
 1186              		.loc 1 291 0
 1187 001c 0223     		movs	r3, #2
 1188 001e 26E0     		b	.L60
 1189              	.L59:
 292:main.c        ****         }
 293:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1190              		.loc 1 293 0
 1191 0020 174B     		ldr	r3, .L65+8
 1192 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0024 042B     		cmp	r3, #4
 1194 0026 01D0     		beq	.L58
 294:main.c        ****             return TurnRight;    
 1195              		.loc 1 294 0
 1196 0028 0123     		movs	r3, #1
 1197 002a 20E0     		b	.L60
 1198              	.L58:
 295:main.c        ****         }
 296:main.c        ****     }
 297:main.c        ****     
 298:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 299:main.c        ****     if (s5 && s6) {
 1199              		.loc 1 299 0
 1200 002c 124B     		ldr	r3, .L65
 1201 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 0030 002B     		cmp	r3, #0
 1203 0032 0FD0     		beq	.L61
 1204              		.loc 1 299 0 is_stmt 0 discriminator 1
 1205 0034 114B     		ldr	r3, .L65+4
 1206 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 0038 002B     		cmp	r3, #0
 1208 003a 0BD0     		beq	.L61
 300:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1209              		.loc 1 300 0 is_stmt 1
 1210 003c 104B     		ldr	r3, .L65+8
 1211 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 0040 032B     		cmp	r3, #3
 1213 0042 01D0     		beq	.L62
 301:main.c        ****             return TurnLeft;
 1214              		.loc 1 301 0
 1215 0044 0223     		movs	r3, #2
 1216 0046 12E0     		b	.L60
 1217              	.L62:
 302:main.c        ****         }
 303:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1218              		.loc 1 303 0
 1219 0048 0D4B     		ldr	r3, .L65+8
 1220 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 28


 1221 004c 042B     		cmp	r3, #4
 1222 004e 01D0     		beq	.L61
 304:main.c        ****             return TurnRight;    
 1223              		.loc 1 304 0
 1224 0050 0123     		movs	r3, #1
 1225 0052 0CE0     		b	.L60
 1226              	.L61:
 305:main.c        ****         }
 306:main.c        ****     }
 307:main.c        **** 
 308:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 309:main.c        ****     if (s5) {
 1227              		.loc 1 309 0
 1228 0054 084B     		ldr	r3, .L65
 1229 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0058 002B     		cmp	r3, #0
 1231 005a 01D0     		beq	.L63
 310:main.c        ****         return TurnRight;    
 1232              		.loc 1 310 0
 1233 005c 0123     		movs	r3, #1
 1234 005e 06E0     		b	.L60
 1235              	.L63:
 311:main.c        ****     }
 312:main.c        ****     if (s6) {
 1236              		.loc 1 312 0
 1237 0060 064B     		ldr	r3, .L65+4
 1238 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0064 002B     		cmp	r3, #0
 1240 0066 01D0     		beq	.L64
 313:main.c        ****         return TurnLeft;    
 1241              		.loc 1 313 0
 1242 0068 0223     		movs	r3, #2
 1243 006a 00E0     		b	.L60
 1244              	.L64:
 314:main.c        ****     }
 315:main.c        ****    
 316:main.c        ****     // We should never actually get to this point
 317:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 318:main.c        ****     return Stop;
 1245              		.loc 1 318 0
 1246 006c 0523     		movs	r3, #5
 1247              	.L60:
 319:main.c        **** }
 1248              		.loc 1 319 0
 1249 006e 1846     		mov	r0, r3
 1250 0070 BD46     		mov	sp, r7
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 0072 80BC     		pop	{r7}
 1254              		.cfi_restore 7
 1255              		.cfi_def_cfa_offset 0
 1256 0074 7047     		bx	lr
 1257              	.L66:
 1258 0076 00BF     		.align	2
 1259              	.L65:
 1260 0078 00000000 		.word	s5
 1261 007c 00000000 		.word	s6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 29


 1262 0080 00000000 		.word	previousDirection
 1263              		.cfi_endproc
 1264              	.LFE75:
 1265              		.size	SpinTurnCourseCorrection, .-SpinTurnCourseCorrection
 1266              		.global	firstTurnIteration
 1267              		.bss
 1268              		.type	firstTurnIteration, %object
 1269              		.size	firstTurnIteration, 1
 1270              	firstTurnIteration:
 1271 0056 00       		.space	1
 1272              	forwardAfterTurnLIgnore:
 1273 0057 00       		.space	1
 1274              	forwardAfterTurnRIgnore:
 1275 0058 00       		.space	1
 1276              		.global	__aeabi_i2f
 1277              		.global	__aeabi_fcmpge
 1278              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1279              		.align	2
 1280              		.global	GetMovementAccordingToInstruction
 1281              		.thumb
 1282              		.thumb_func
 1283              		.type	GetMovementAccordingToInstruction, %function
 1284              	GetMovementAccordingToInstruction:
 1285              	.LFB76:
 320:main.c        **** 
 321:main.c        **** uint8 firstTurnIteration = 0;
 322:main.c        **** volatile static uint8 forwardAfterTurnLIgnore = 0;
 323:main.c        **** volatile static uint8 forwardAfterTurnRIgnore = 0;
 324:main.c        **** 
 325:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1286              		.loc 1 325 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 40
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 B0B5     		push	{r4, r5, r7, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 8AB0     		sub	sp, sp, #40
 1297              		.cfi_def_cfa_offset 56
 1298 0004 00AF     		add	r7, sp, #0
 1299              		.cfi_def_cfa_register 7
 326:main.c        ****     float blocksize;
 327:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1300              		.loc 1 327 0
 1301 0006 A24B     		ldr	r3, .L136
 1302 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1303 000a 002B     		cmp	r3, #0
 1304 000c 03D0     		beq	.L68
 1305              		.loc 1 327 0 is_stmt 0 discriminator 1
 1306 000e A04B     		ldr	r3, .L136
 1307 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1308 0012 012B     		cmp	r3, #1
 1309 0014 03D1     		bne	.L69
 1310              	.L68:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 30


 328:main.c        ****         blocksize = yBlocksize;
 1311              		.loc 1 328 0 is_stmt 1
 1312 0016 9F4B     		ldr	r3, .L136+4
 1313 0018 1B68     		ldr	r3, [r3]	@ float
 1314 001a 7B62     		str	r3, [r7, #36]	@ float
 1315 001c 02E0     		b	.L70
 1316              	.L69:
 329:main.c        ****     } else {
 330:main.c        ****         blocksize = xBlocksize;
 1317              		.loc 1 330 0
 1318 001e 9E4B     		ldr	r3, .L136+8
 1319 0020 1B68     		ldr	r3, [r3]	@ float
 1320 0022 7B62     		str	r3, [r7, #36]	@ float
 1321              	.L70:
 331:main.c        ****     }
 332:main.c        ****     
 333:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 334:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 335:main.c        ****         // OR an EVENT happens in the current instruction
 336:main.c        ****         // e.g. CurrentInstruction: GoForward 
 337:main.c        ****         //      S3 on BLACK
 338:main.c        ****         //      Check Ignore Count
 339:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 340:main.c        ****     
 341:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1322              		.loc 1 341 0
 1323 0024 9A4B     		ldr	r3, .L136
 1324 0026 1B78     		ldrb	r3, [r3]
 1325 0028 87F82330 		strb	r3, [r7, #35]
 342:main.c        ****     
 343:main.c        ****     /*
 344:main.c        ****     if (instructionList[instructionIndex + 1].direction == uTurn && currentInstructionDirection == 
 345:main.c        ****         if (s5 && s6) {
 346:main.c        ****             MoveToNextInstruction(); // case to start uTurns when needed. prevents uTurn overshooti
 347:main.c        ****             return Stop;
 348:main.c        ****         }
 349:main.c        ****     }
 350:main.c        ****     */
 351:main.c        ****     
 352:main.c        ****     switch (currentInstructionDirection) {
 1326              		.loc 1 352 0
 1327 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1328 0030 052B     		cmp	r3, #5
 1329 0032 00F22E83 		bhi	.L71
 1330 0036 01A2     		adr	r2, .L73
 1331 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1332              		.p2align 2
 1333              	.L73:
 1334 003c 55000000 		.word	.L72+1
 1335 0040 4B010000 		.word	.L74+1
 1336 0044 77020000 		.word	.L75+1
 1337 0048 01060000 		.word	.L76+1
 1338 004c F3030000 		.word	.L77+1
 1339 0050 F5040000 		.word	.L78+1
 1340              		.p2align 1
 1341              	.L72:
 353:main.c        ****         case GoForward:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 31


 354:main.c        ****             if(currentDirection == Stop) {
 1342              		.loc 1 354 0
 1343 0054 914B     		ldr	r3, .L136+12
 1344 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1345 0058 052B     		cmp	r3, #5
 1346 005a 08D1     		bne	.L79
 355:main.c        ****                 if(stopBuffer <= 25) {
 1347              		.loc 1 355 0
 1348 005c 904B     		ldr	r3, .L136+16
 1349 005e 1B68     		ldr	r3, [r3]
 1350 0060 192B     		cmp	r3, #25
 1351 0062 01D8     		bhi	.L80
 356:main.c        ****                     return Stop;
 1352              		.loc 1 356 0
 1353 0064 0523     		movs	r3, #5
 1354 0066 15E3     		b	.L81
 1355              	.L80:
 357:main.c        ****                 } else {
 358:main.c        ****                     stopBuffer = 100;
 1356              		.loc 1 358 0
 1357 0068 8D4B     		ldr	r3, .L136+16
 1358 006a 6422     		movs	r2, #100
 1359 006c 1A60     		str	r2, [r3]
 1360              	.L79:
 359:main.c        ****                 }
 360:main.c        ****             }
 361:main.c        ****             if (s3) {
 1361              		.loc 1 361 0
 1362 006e 8D4B     		ldr	r3, .L136+20
 1363 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1364 0072 002B     		cmp	r3, #0
 1365 0074 02D0     		beq	.L82
 362:main.c        ****                 leftStatusFlag = 1;
 1366              		.loc 1 362 0
 1367 0076 8C4B     		ldr	r3, .L136+24
 1368 0078 0122     		movs	r2, #1
 1369 007a 1A70     		strb	r2, [r3]
 1370              	.L82:
 363:main.c        ****             }
 364:main.c        ****             
 365:main.c        ****             if (s4) {
 1371              		.loc 1 365 0
 1372 007c 8B4B     		ldr	r3, .L136+28
 1373 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1374 0080 002B     		cmp	r3, #0
 1375 0082 02D0     		beq	.L83
 366:main.c        ****                 rightStatusFlag = 1;
 1376              		.loc 1 366 0
 1377 0084 8A4B     		ldr	r3, .L136+32
 1378 0086 0122     		movs	r2, #1
 1379 0088 1A70     		strb	r2, [r3]
 1380              	.L83:
 367:main.c        ****             }
 368:main.c        ****             
 369:main.c        ****             
 370:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 371:main.c        ****             if (leftStatusFlag) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 32


 1381              		.loc 1 371 0
 1382 008a 874B     		ldr	r3, .L136+24
 1383 008c 1B78     		ldrb	r3, [r3]
 1384 008e DBB2     		uxtb	r3, r3
 1385 0090 002B     		cmp	r3, #0
 1386 0092 28D0     		beq	.L84
 372:main.c        ****                 if (!s3) {
 1387              		.loc 1 372 0
 1388 0094 834B     		ldr	r3, .L136+20
 1389 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 0098 002B     		cmp	r3, #0
 1391 009a 24D1     		bne	.L84
 373:main.c        ****                     leftStatusFlag = 0;    
 1392              		.loc 1 373 0
 1393 009c 824B     		ldr	r3, .L136+24
 1394 009e 0022     		movs	r2, #0
 1395 00a0 1A70     		strb	r2, [r3]
 374:main.c        ****                     if (forwardAfterTurnLIgnore > 0) {
 1396              		.loc 1 374 0
 1397 00a2 844B     		ldr	r3, .L136+36
 1398 00a4 1B78     		ldrb	r3, [r3]
 1399 00a6 DBB2     		uxtb	r3, r3
 1400 00a8 002B     		cmp	r3, #0
 1401 00aa 07D0     		beq	.L85
 375:main.c        ****                         forwardAfterTurnLIgnore--;
 1402              		.loc 1 375 0
 1403 00ac 814B     		ldr	r3, .L136+36
 1404 00ae 1B78     		ldrb	r3, [r3]
 1405 00b0 DBB2     		uxtb	r3, r3
 1406 00b2 013B     		subs	r3, r3, #1
 1407 00b4 DAB2     		uxtb	r2, r3
 1408 00b6 7F4B     		ldr	r3, .L136+36
 1409 00b8 1A70     		strb	r2, [r3]
 1410 00ba 14E0     		b	.L84
 1411              	.L85:
 376:main.c        ****                     } else {
 377:main.c        ****                         if (currentIgnoreL == 0) {
 1412              		.loc 1 377 0
 1413 00bc 7E4B     		ldr	r3, .L136+40
 1414 00be 1B78     		ldrb	r3, [r3]
 1415 00c0 DBB2     		uxtb	r3, r3
 1416 00c2 002B     		cmp	r3, #0
 1417 00c4 03D1     		bne	.L86
 378:main.c        ****                             MoveToNextInstruction();
 1418              		.loc 1 378 0
 1419 00c6 FFF7FEFF 		bl	MoveToNextInstruction
 379:main.c        ****                             return Stop;
 1420              		.loc 1 379 0
 1421 00ca 0523     		movs	r3, #5
 1422 00cc E2E2     		b	.L81
 1423              	.L86:
 380:main.c        ****                         }
 381:main.c        ****                         if (currentIgnoreL > 0) {
 1424              		.loc 1 381 0
 1425 00ce 7A4B     		ldr	r3, .L136+40
 1426 00d0 1B78     		ldrb	r3, [r3]
 1427 00d2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 33


 1428 00d4 002B     		cmp	r3, #0
 1429 00d6 06D0     		beq	.L84
 382:main.c        ****                             currentIgnoreL--;    
 1430              		.loc 1 382 0
 1431 00d8 774B     		ldr	r3, .L136+40
 1432 00da 1B78     		ldrb	r3, [r3]
 1433 00dc DBB2     		uxtb	r3, r3
 1434 00de 013B     		subs	r3, r3, #1
 1435 00e0 DAB2     		uxtb	r2, r3
 1436 00e2 754B     		ldr	r3, .L136+40
 1437 00e4 1A70     		strb	r2, [r3]
 1438              	.L84:
 383:main.c        ****                         }
 384:main.c        ****                     }
 385:main.c        ****                 }
 386:main.c        ****             }
 387:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 388:main.c        ****             if (rightStatusFlag) {
 1439              		.loc 1 388 0
 1440 00e6 724B     		ldr	r3, .L136+32
 1441 00e8 1B78     		ldrb	r3, [r3]
 1442 00ea DBB2     		uxtb	r3, r3
 1443 00ec 002B     		cmp	r3, #0
 1444 00ee 28D0     		beq	.L87
 389:main.c        ****                 if (!s4) {
 1445              		.loc 1 389 0
 1446 00f0 6E4B     		ldr	r3, .L136+28
 1447 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 00f4 002B     		cmp	r3, #0
 1449 00f6 24D1     		bne	.L87
 390:main.c        ****                     rightStatusFlag = 0;           
 1450              		.loc 1 390 0
 1451 00f8 6D4B     		ldr	r3, .L136+32
 1452 00fa 0022     		movs	r2, #0
 1453 00fc 1A70     		strb	r2, [r3]
 391:main.c        ****                     if (forwardAfterTurnRIgnore > 0) {
 1454              		.loc 1 391 0
 1455 00fe 6F4B     		ldr	r3, .L136+44
 1456 0100 1B78     		ldrb	r3, [r3]
 1457 0102 DBB2     		uxtb	r3, r3
 1458 0104 002B     		cmp	r3, #0
 1459 0106 07D0     		beq	.L88
 392:main.c        ****                         forwardAfterTurnRIgnore--;
 1460              		.loc 1 392 0
 1461 0108 6C4B     		ldr	r3, .L136+44
 1462 010a 1B78     		ldrb	r3, [r3]
 1463 010c DBB2     		uxtb	r3, r3
 1464 010e 013B     		subs	r3, r3, #1
 1465 0110 DAB2     		uxtb	r2, r3
 1466 0112 6A4B     		ldr	r3, .L136+44
 1467 0114 1A70     		strb	r2, [r3]
 1468 0116 14E0     		b	.L87
 1469              	.L88:
 393:main.c        ****                     } else {
 394:main.c        ****                         if (currentIgnoreR == 0) {
 1470              		.loc 1 394 0
 1471 0118 694B     		ldr	r3, .L136+48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 34


 1472 011a 1B78     		ldrb	r3, [r3]
 1473 011c DBB2     		uxtb	r3, r3
 1474 011e 002B     		cmp	r3, #0
 1475 0120 03D1     		bne	.L89
 395:main.c        ****                             MoveToNextInstruction();
 1476              		.loc 1 395 0
 1477 0122 FFF7FEFF 		bl	MoveToNextInstruction
 396:main.c        ****                             return Stop;
 1478              		.loc 1 396 0
 1479 0126 0523     		movs	r3, #5
 1480 0128 B4E2     		b	.L81
 1481              	.L89:
 397:main.c        ****                         }
 398:main.c        ****                         if (currentIgnoreR > 0) {
 1482              		.loc 1 398 0
 1483 012a 654B     		ldr	r3, .L136+48
 1484 012c 1B78     		ldrb	r3, [r3]
 1485 012e DBB2     		uxtb	r3, r3
 1486 0130 002B     		cmp	r3, #0
 1487 0132 06D0     		beq	.L87
 399:main.c        ****                             currentIgnoreR--;   
 1488              		.loc 1 399 0
 1489 0134 624B     		ldr	r3, .L136+48
 1490 0136 1B78     		ldrb	r3, [r3]
 1491 0138 DBB2     		uxtb	r3, r3
 1492 013a 013B     		subs	r3, r3, #1
 1493 013c DAB2     		uxtb	r2, r3
 1494 013e 604B     		ldr	r3, .L136+48
 1495 0140 1A70     		strb	r2, [r3]
 1496              	.L87:
 400:main.c        ****                         }
 401:main.c        ****                     }
 402:main.c        ****                     
 403:main.c        ****                 }
 404:main.c        ****                    
 405:main.c        ****             }
 406:main.c        ****             
 407:main.c        ****           
 408:main.c        ****             return ForwardCourseCorrection();
 1497              		.loc 1 408 0
 1498 0142 FFF7FEFF 		bl	ForwardCourseCorrection
 1499 0146 0346     		mov	r3, r0
 1500 0148 A4E2     		b	.L81
 1501              	.L74:
 409:main.c        ****             break;
 410:main.c        ****         case waitForLeftTurn:
 411:main.c        ****             // continue moving forward until s3 goes on black
 412:main.c        ****             // if we are turning left already
 413:main.c        ****                 // wait until s5 || s6 are on black
 414:main.c        ****                 // return stop
 415:main.c        ****             if (!firstTurnIteration) {
 1502              		.loc 1 415 0
 1503 014a 5E4B     		ldr	r3, .L136+52
 1504 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 014e 002B     		cmp	r3, #0
 1506 0150 08D1     		bne	.L90
 416:main.c        ****                 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 35


 417:main.c        ****                 if (!s3) {
 1507              		.loc 1 417 0
 1508 0152 544B     		ldr	r3, .L136+20
 1509 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1510 0156 002B     		cmp	r3, #0
 1511 0158 04D1     		bne	.L90
 418:main.c        ****                     firstTurnIteration = 1;
 1512              		.loc 1 418 0
 1513 015a 5A4B     		ldr	r3, .L136+52
 1514 015c 0122     		movs	r2, #1
 1515 015e 1A70     		strb	r2, [r3]
 419:main.c        ****                     return Stop;    
 1516              		.loc 1 419 0
 1517 0160 0523     		movs	r3, #5
 1518 0162 97E2     		b	.L81
 1519              	.L90:
 420:main.c        ****                 }
 421:main.c        ****                 if (s3) {
 422:main.c        ****                     //return Backward;    
 423:main.c        ****                 }
 424:main.c        ****             }
 425:main.c        ****             
 426:main.c        ****             if (turnFinishedFlag) {
 1520              		.loc 1 426 0
 1521 0164 584B     		ldr	r3, .L136+56
 1522 0166 1B78     		ldrb	r3, [r3]
 1523 0168 DBB2     		uxtb	r3, r3
 1524 016a 002B     		cmp	r3, #0
 1525 016c 31D0     		beq	.L92
 427:main.c        ****                 if (!s3 && !s5 && !s6) {
 1526              		.loc 1 427 0
 1527 016e 4D4B     		ldr	r3, .L136+20
 1528 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1529 0172 002B     		cmp	r3, #0
 1530 0174 0BD1     		bne	.L93
 1531              		.loc 1 427 0 is_stmt 0 discriminator 1
 1532 0176 554B     		ldr	r3, .L136+60
 1533 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 017a 002B     		cmp	r3, #0
 1535 017c 07D1     		bne	.L93
 1536              		.loc 1 427 0 discriminator 2
 1537 017e 544B     		ldr	r3, .L136+64
 1538 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1539 0182 002B     		cmp	r3, #0
 1540 0184 03D1     		bne	.L93
 428:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 429:main.c        ****                     return ForwardCourseCorrection();
 1541              		.loc 1 429 0 is_stmt 1
 1542 0186 FFF7FEFF 		bl	ForwardCourseCorrection
 1543 018a 0346     		mov	r3, r0
 1544 018c 82E2     		b	.L81
 1545              	.L93:
 430:main.c        ****                 }
 431:main.c        ****                 if (s5 || s6) {
 1546              		.loc 1 431 0
 1547 018e 4F4B     		ldr	r3, .L136+60
 1548 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 36


 1549 0192 002B     		cmp	r3, #0
 1550 0194 03D1     		bne	.L94
 1551              		.loc 1 431 0 is_stmt 0 discriminator 1
 1552 0196 4E4B     		ldr	r3, .L136+64
 1553 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 019a 002B     		cmp	r3, #0
 1555 019c 03D0     		beq	.L95
 1556              	.L94:
 432:main.c        ****                     return SpinCourseCorrection();
 1557              		.loc 1 432 0 is_stmt 1
 1558 019e FFF7FEFF 		bl	SpinCourseCorrection
 1559 01a2 0346     		mov	r3, r0
 1560 01a4 76E2     		b	.L81
 1561              	.L95:
 433:main.c        ****                 }
 434:main.c        ****                 if (forwardBuffer <= 10) {
 1562              		.loc 1 434 0
 1563 01a6 4B4B     		ldr	r3, .L136+68
 1564 01a8 1B88     		ldrh	r3, [r3]
 1565 01aa 0A2B     		cmp	r3, #10
 1566 01ac 03D8     		bhi	.L96
 435:main.c        ****                     return ForwardCourseCorrection();    
 1567              		.loc 1 435 0
 1568 01ae FFF7FEFF 		bl	ForwardCourseCorrection
 1569 01b2 0346     		mov	r3, r0
 1570 01b4 6EE2     		b	.L81
 1571              	.L96:
 436:main.c        **** 
 437:main.c        ****                 } else {
 438:main.c        ****                     forwardBuffer = 100;
 1572              		.loc 1 438 0
 1573 01b6 474B     		ldr	r3, .L136+68
 1574 01b8 6422     		movs	r2, #100
 1575 01ba 1A80     		strh	r2, [r3]	@ movhi
 439:main.c        ****                     if (s3) {
 1576              		.loc 1 439 0
 1577 01bc 394B     		ldr	r3, .L136+20
 1578 01be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 01c0 002B     		cmp	r3, #0
 1580 01c2 06D0     		beq	.L92
 440:main.c        ****                         turnFinishedFlag = 0;
 1581              		.loc 1 440 0
 1582 01c4 404B     		ldr	r3, .L136+56
 1583 01c6 0022     		movs	r2, #0
 1584 01c8 1A70     		strb	r2, [r3]
 441:main.c        ****                         MoveToNextInstruction();   
 1585              		.loc 1 441 0
 1586 01ca FFF7FEFF 		bl	MoveToNextInstruction
 442:main.c        ****                         return Stop;  
 1587              		.loc 1 442 0
 1588 01ce 0523     		movs	r3, #5
 1589 01d0 60E2     		b	.L81
 1590              	.L92:
 443:main.c        ****                     }
 444:main.c        ****                 }
 445:main.c        ****             }
 446:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 37


 447:main.c        ****             
 448:main.c        ****             if (currentDirection == Stop) {
 1591              		.loc 1 448 0
 1592 01d2 324B     		ldr	r3, .L136+12
 1593 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 01d6 052B     		cmp	r3, #5
 1595 01d8 09D1     		bne	.L97
 449:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 450:main.c        ****                 if (stopBuffer <= 25) {
 1596              		.loc 1 450 0
 1597 01da 314B     		ldr	r3, .L136+16
 1598 01dc 1B68     		ldr	r3, [r3]
 1599 01de 192B     		cmp	r3, #25
 1600 01e0 01D8     		bhi	.L98
 451:main.c        ****                     return Stop;   
 1601              		.loc 1 451 0
 1602 01e2 0523     		movs	r3, #5
 1603 01e4 56E2     		b	.L81
 1604              	.L98:
 452:main.c        ****                 }
 453:main.c        ****                 return ForwardCourseCorrection();
 1605              		.loc 1 453 0
 1606 01e6 FFF7FEFF 		bl	ForwardCourseCorrection
 1607 01ea 0346     		mov	r3, r0
 1608 01ec 52E2     		b	.L81
 1609              	.L97:
 454:main.c        ****             }
 455:main.c        ****          
 456:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 457:main.c        ****             if (currentDirection == TurnLeft) {
 1610              		.loc 1 457 0
 1611 01ee 2B4B     		ldr	r3, .L136+12
 1612 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1613 01f2 022B     		cmp	r3, #2
 1614 01f4 32D1     		bne	.L99
 458:main.c        ****                 // If turn started and we are still on black, continue turning
 459:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 460:main.c        ****                 if (turnStartedFlag) {
 1615              		.loc 1 460 0
 1616 01f6 384B     		ldr	r3, .L136+72
 1617 01f8 1B78     		ldrb	r3, [r3]
 1618 01fa DBB2     		uxtb	r3, r3
 1619 01fc 002B     		cmp	r3, #0
 1620 01fe 0ED0     		beq	.L100
 461:main.c        ****                     if (s3 && (s5 && s6)) {
 1621              		.loc 1 461 0
 1622 0200 284B     		ldr	r3, .L136+20
 1623 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1624 0204 002B     		cmp	r3, #0
 1625 0206 0AD0     		beq	.L100
 1626              		.loc 1 461 0 is_stmt 0 discriminator 1
 1627 0208 304B     		ldr	r3, .L136+60
 1628 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1629 020c 002B     		cmp	r3, #0
 1630 020e 06D0     		beq	.L100
 1631              		.loc 1 461 0 discriminator 2
 1632 0210 2F4B     		ldr	r3, .L136+64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 38


 1633 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0214 002B     		cmp	r3, #0
 1635 0216 02D0     		beq	.L100
 462:main.c        ****                         turnStartedFlag = 0;
 1636              		.loc 1 462 0 is_stmt 1
 1637 0218 2F4B     		ldr	r3, .L136+72
 1638 021a 0022     		movs	r2, #0
 1639 021c 1A70     		strb	r2, [r3]
 1640              	.L100:
 463:main.c        ****                     }
 464:main.c        ****                 }
 465:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1641              		.loc 1 465 0
 1642 021e 2E4B     		ldr	r3, .L136+72
 1643 0220 1B78     		ldrb	r3, [r3]
 1644 0222 DBB2     		uxtb	r3, r3
 1645 0224 002B     		cmp	r3, #0
 1646 0226 17D1     		bne	.L101
 1647              		.loc 1 465 0 is_stmt 0 discriminator 1
 1648 0228 1E4B     		ldr	r3, .L136+20
 1649 022a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1650 022c 002B     		cmp	r3, #0
 1651 022e 13D1     		bne	.L101
 1652              		.loc 1 465 0 discriminator 2
 1653 0230 264B     		ldr	r3, .L136+60
 1654 0232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 0234 002B     		cmp	r3, #0
 1656 0236 03D0     		beq	.L102
 1657              		.loc 1 465 0 discriminator 3
 1658 0238 254B     		ldr	r3, .L136+64
 1659 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 023c 002B     		cmp	r3, #0
 1661 023e 0BD1     		bne	.L101
 1662              	.L102:
 466:main.c        ****                     turnFinishedFlag = 1;
 1663              		.loc 1 466 0 is_stmt 1
 1664 0240 214B     		ldr	r3, .L136+56
 1665 0242 0122     		movs	r2, #1
 1666 0244 1A70     		strb	r2, [r3]
 467:main.c        ****                     firstTurnIteration = 0;
 1667              		.loc 1 467 0
 1668 0246 1F4B     		ldr	r3, .L136+52
 1669 0248 0022     		movs	r2, #0
 1670 024a 1A70     		strb	r2, [r3]
 468:main.c        ****                     totalDistance = 0;
 1671              		.loc 1 468 0
 1672 024c 234B     		ldr	r3, .L136+76
 1673 024e 4FF00002 		mov	r2, #0
 1674 0252 1A60     		str	r2, [r3]	@ float
 469:main.c        ****                     return ForwardAfterTurn;
 1675              		.loc 1 469 0
 1676 0254 0823     		movs	r3, #8
 1677 0256 1DE2     		b	.L81
 1678              	.L101:
 470:main.c        ****                 }
 471:main.c        ****                 else
 472:main.c        ****                 {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 39


 473:main.c        ****                     return TurnLeft;
 1679              		.loc 1 473 0
 1680 0258 0223     		movs	r3, #2
 1681 025a 1BE2     		b	.L81
 1682              	.L99:
 474:main.c        ****                 }
 475:main.c        ****             }
 476:main.c        ****             
 477:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 478:main.c        ****             if (!s3) {
 1683              		.loc 1 478 0
 1684 025c 114B     		ldr	r3, .L136+20
 1685 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1686 0260 002B     		cmp	r3, #0
 1687 0262 04D1     		bne	.L103
 479:main.c        ****                 turnStartedFlag = 1;
 1688              		.loc 1 479 0
 1689 0264 1C4B     		ldr	r3, .L136+72
 1690 0266 0122     		movs	r2, #1
 1691 0268 1A70     		strb	r2, [r3]
 480:main.c        ****                 return TurnLeft;
 1692              		.loc 1 480 0
 1693 026a 0223     		movs	r3, #2
 1694 026c 12E2     		b	.L81
 1695              	.L103:
 481:main.c        ****             }
 482:main.c        ****             
 483:main.c        ****             // Otherwise, keep going forward
 484:main.c        ****             return ForwardCourseCorrection(); 
 1696              		.loc 1 484 0
 1697 026e FFF7FEFF 		bl	ForwardCourseCorrection
 1698 0272 0346     		mov	r3, r0
 1699 0274 0EE2     		b	.L81
 1700              	.L75:
 485:main.c        ****             break;
 486:main.c        ****         case waitForRightTurn:
 487:main.c        ****             // continue moving forward until s4 goes on black
 488:main.c        ****             // if we are turning left already
 489:main.c        ****                 // wait until s5 || s6 are on black
 490:main.c        ****                 // return stop
 491:main.c        ****             if (!firstTurnIteration) {
 1701              		.loc 1 491 0
 1702 0276 134B     		ldr	r3, .L136+52
 1703 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1704 027a 002B     		cmp	r3, #0
 1705 027c 30D1     		bne	.L104
 492:main.c        ****                 
 493:main.c        ****                 if (!s4) {
 1706              		.loc 1 493 0
 1707 027e 0B4B     		ldr	r3, .L136+28
 1708 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1709 0282 002B     		cmp	r3, #0
 1710 0284 2CD1     		bne	.L104
 494:main.c        ****                     firstTurnIteration = 1; 
 1711              		.loc 1 494 0
 1712 0286 0F4B     		ldr	r3, .L136+52
 1713 0288 0122     		movs	r2, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 40


 1714 028a 1A70     		strb	r2, [r3]
 495:main.c        ****                     return Stop;
 1715              		.loc 1 495 0
 1716 028c 0523     		movs	r3, #5
 1717 028e 01E2     		b	.L81
 1718              	.L137:
 1719              		.align	2
 1720              	.L136:
 1721 0290 00000000 		.word	currentInstruction
 1722 0294 00000000 		.word	yBlocksize
 1723 0298 00000000 		.word	xBlocksize
 1724 029c 00000000 		.word	currentDirection
 1725 02a0 00000000 		.word	stopBuffer
 1726 02a4 00000000 		.word	s3
 1727 02a8 3B000000 		.word	leftStatusFlag
 1728 02ac 00000000 		.word	s4
 1729 02b0 3C000000 		.word	rightStatusFlag
 1730 02b4 57000000 		.word	forwardAfterTurnLIgnore
 1731 02b8 3E000000 		.word	currentIgnoreL
 1732 02bc 58000000 		.word	forwardAfterTurnRIgnore
 1733 02c0 3F000000 		.word	currentIgnoreR
 1734 02c4 00000000 		.word	firstTurnIteration
 1735 02c8 37000000 		.word	turnFinishedFlag
 1736 02cc 00000000 		.word	s5
 1737 02d0 00000000 		.word	s6
 1738 02d4 00000000 		.word	forwardBuffer
 1739 02d8 36000000 		.word	turnStartedFlag
 1740 02dc 00000000 		.word	totalDistance
 1741              	.L104:
 496:main.c        ****                 }
 497:main.c        ****                 if (s4) {
 498:main.c        ****                     //return Backward;    
 499:main.c        ****                 }
 500:main.c        ****             }
 501:main.c        **** 
 502:main.c        ****             if (turnFinishedFlag) {
 1742              		.loc 1 502 0
 1743 02e0 934B     		ldr	r3, .L138
 1744 02e2 1B78     		ldrb	r3, [r3]
 1745 02e4 DBB2     		uxtb	r3, r3
 1746 02e6 002B     		cmp	r3, #0
 1747 02e8 34D0     		beq	.L106
 503:main.c        ****                 if (!s4 && !s5 && !s6) {
 1748              		.loc 1 503 0
 1749 02ea 924B     		ldr	r3, .L138+4
 1750 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1751 02ee 002B     		cmp	r3, #0
 1752 02f0 0BD1     		bne	.L107
 1753              		.loc 1 503 0 is_stmt 0 discriminator 1
 1754 02f2 914B     		ldr	r3, .L138+8
 1755 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1756 02f6 002B     		cmp	r3, #0
 1757 02f8 07D1     		bne	.L107
 1758              		.loc 1 503 0 discriminator 2
 1759 02fa 904B     		ldr	r3, .L138+12
 1760 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1761 02fe 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 41


 1762 0300 03D1     		bne	.L107
 504:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 505:main.c        ****                     return ForwardCourseCorrection();
 1763              		.loc 1 505 0 is_stmt 1
 1764 0302 FFF7FEFF 		bl	ForwardCourseCorrection
 1765 0306 0346     		mov	r3, r0
 1766 0308 C4E1     		b	.L81
 1767              	.L107:
 506:main.c        ****                 }
 507:main.c        ****                 if (s5 || s6) {
 1768              		.loc 1 507 0
 1769 030a 8B4B     		ldr	r3, .L138+8
 1770 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1771 030e 002B     		cmp	r3, #0
 1772 0310 03D1     		bne	.L108
 1773              		.loc 1 507 0 is_stmt 0 discriminator 1
 1774 0312 8A4B     		ldr	r3, .L138+12
 1775 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 0316 002B     		cmp	r3, #0
 1777 0318 03D0     		beq	.L109
 1778              	.L108:
 508:main.c        ****                     return SpinCourseCorrection();
 1779              		.loc 1 508 0 is_stmt 1
 1780 031a FFF7FEFF 		bl	SpinCourseCorrection
 1781 031e 0346     		mov	r3, r0
 1782 0320 B8E1     		b	.L81
 1783              	.L109:
 509:main.c        ****                 }
 510:main.c        ****                 if (forwardBuffer <= 10) {
 1784              		.loc 1 510 0
 1785 0322 874B     		ldr	r3, .L138+16
 1786 0324 1B88     		ldrh	r3, [r3]
 1787 0326 0A2B     		cmp	r3, #10
 1788 0328 03D8     		bhi	.L110
 511:main.c        ****                     return ForwardCourseCorrection();    
 1789              		.loc 1 511 0
 1790 032a FFF7FEFF 		bl	ForwardCourseCorrection
 1791 032e 0346     		mov	r3, r0
 1792 0330 B0E1     		b	.L81
 1793              	.L110:
 512:main.c        **** 
 513:main.c        ****                 } else {
 514:main.c        ****                     forwardBuffer = 100;
 1794              		.loc 1 514 0
 1795 0332 834B     		ldr	r3, .L138+16
 1796 0334 6422     		movs	r2, #100
 1797 0336 1A80     		strh	r2, [r3]	@ movhi
 515:main.c        ****                     if (s4) {
 1798              		.loc 1 515 0
 1799 0338 7E4B     		ldr	r3, .L138+4
 1800 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 033c 002B     		cmp	r3, #0
 1802 033e 09D0     		beq	.L106
 516:main.c        ****                         firstTurnIteration = 0;
 1803              		.loc 1 516 0
 1804 0340 804B     		ldr	r3, .L138+20
 1805 0342 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 42


 1806 0344 1A70     		strb	r2, [r3]
 517:main.c        ****                         turnFinishedFlag = 0;
 1807              		.loc 1 517 0
 1808 0346 7A4B     		ldr	r3, .L138
 1809 0348 0022     		movs	r2, #0
 1810 034a 1A70     		strb	r2, [r3]
 518:main.c        ****                         MoveToNextInstruction();   
 1811              		.loc 1 518 0
 1812 034c FFF7FEFF 		bl	MoveToNextInstruction
 519:main.c        ****                         return Stop;  
 1813              		.loc 1 519 0
 1814 0350 0523     		movs	r3, #5
 1815 0352 9FE1     		b	.L81
 1816              	.L106:
 520:main.c        ****                     }
 521:main.c        ****                 }
 522:main.c        ****             }
 523:main.c        ****             
 524:main.c        ****             if (currentDirection == Stop) {
 1817              		.loc 1 524 0
 1818 0354 7C4B     		ldr	r3, .L138+24
 1819 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1820 0358 052B     		cmp	r3, #5
 1821 035a 09D1     		bne	.L111
 525:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 526:main.c        ****                 if (stopBuffer <= 25) {
 1822              		.loc 1 526 0
 1823 035c 7B4B     		ldr	r3, .L138+28
 1824 035e 1B68     		ldr	r3, [r3]
 1825 0360 192B     		cmp	r3, #25
 1826 0362 01D8     		bhi	.L112
 527:main.c        ****                     return Stop;   
 1827              		.loc 1 527 0
 1828 0364 0523     		movs	r3, #5
 1829 0366 95E1     		b	.L81
 1830              	.L112:
 528:main.c        ****                 }
 529:main.c        **** 
 530:main.c        ****                 return ForwardCourseCorrection();
 1831              		.loc 1 530 0
 1832 0368 FFF7FEFF 		bl	ForwardCourseCorrection
 1833 036c 0346     		mov	r3, r0
 1834 036e 91E1     		b	.L81
 1835              	.L111:
 531:main.c        ****             }
 532:main.c        ****                       
 533:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 534:main.c        ****             if (currentDirection == TurnRight) {
 1836              		.loc 1 534 0
 1837 0370 754B     		ldr	r3, .L138+24
 1838 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1839 0374 012B     		cmp	r3, #1
 1840 0376 2FD1     		bne	.L113
 535:main.c        ****                 // If turn started and we are still on black, continue turning
 536:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 537:main.c        ****                 if (turnStartedFlag) {
 1841              		.loc 1 537 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 43


 1842 0378 754B     		ldr	r3, .L138+32
 1843 037a 1B78     		ldrb	r3, [r3]
 1844 037c DBB2     		uxtb	r3, r3
 1845 037e 002B     		cmp	r3, #0
 1846 0380 0ED0     		beq	.L114
 538:main.c        ****                     if (s4 && (s5 && s6)) {
 1847              		.loc 1 538 0
 1848 0382 6C4B     		ldr	r3, .L138+4
 1849 0384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 0386 002B     		cmp	r3, #0
 1851 0388 0AD0     		beq	.L114
 1852              		.loc 1 538 0 is_stmt 0 discriminator 1
 1853 038a 6B4B     		ldr	r3, .L138+8
 1854 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1855 038e 002B     		cmp	r3, #0
 1856 0390 06D0     		beq	.L114
 1857              		.loc 1 538 0 discriminator 2
 1858 0392 6A4B     		ldr	r3, .L138+12
 1859 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1860 0396 002B     		cmp	r3, #0
 1861 0398 02D0     		beq	.L114
 539:main.c        ****                         turnStartedFlag = 0;
 1862              		.loc 1 539 0 is_stmt 1
 1863 039a 6D4B     		ldr	r3, .L138+32
 1864 039c 0022     		movs	r2, #0
 1865 039e 1A70     		strb	r2, [r3]
 1866              	.L114:
 540:main.c        ****                     }
 541:main.c        ****                 }
 542:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1867              		.loc 1 542 0
 1868 03a0 6B4B     		ldr	r3, .L138+32
 1869 03a2 1B78     		ldrb	r3, [r3]
 1870 03a4 DBB2     		uxtb	r3, r3
 1871 03a6 002B     		cmp	r3, #0
 1872 03a8 14D1     		bne	.L115
 1873              		.loc 1 542 0 is_stmt 0 discriminator 1
 1874 03aa 624B     		ldr	r3, .L138+4
 1875 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1876 03ae 002B     		cmp	r3, #0
 1877 03b0 10D1     		bne	.L115
 1878              		.loc 1 542 0 discriminator 2
 1879 03b2 614B     		ldr	r3, .L138+8
 1880 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1881 03b6 002B     		cmp	r3, #0
 1882 03b8 03D0     		beq	.L116
 1883              		.loc 1 542 0 discriminator 3
 1884 03ba 604B     		ldr	r3, .L138+12
 1885 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1886 03be 002B     		cmp	r3, #0
 1887 03c0 08D1     		bne	.L115
 1888              	.L116:
 543:main.c        ****                     turnFinishedFlag = 1;
 1889              		.loc 1 543 0 is_stmt 1
 1890 03c2 5B4B     		ldr	r3, .L138
 1891 03c4 0122     		movs	r2, #1
 1892 03c6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 44


 544:main.c        ****                     totalDistance = 0;
 1893              		.loc 1 544 0
 1894 03c8 624B     		ldr	r3, .L138+36
 1895 03ca 4FF00002 		mov	r2, #0
 1896 03ce 1A60     		str	r2, [r3]	@ float
 545:main.c        ****                     return ForwardAfterTurn;
 1897              		.loc 1 545 0
 1898 03d0 0823     		movs	r3, #8
 1899 03d2 5FE1     		b	.L81
 1900              	.L115:
 546:main.c        ****                 }
 547:main.c        ****                 else
 548:main.c        ****                 {
 549:main.c        ****                     return TurnRight;
 1901              		.loc 1 549 0
 1902 03d4 0123     		movs	r3, #1
 1903 03d6 5DE1     		b	.L81
 1904              	.L113:
 550:main.c        ****                 }
 551:main.c        ****             }
 552:main.c        ****             
 553:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 554:main.c        ****             if (!s4) {
 1905              		.loc 1 554 0
 1906 03d8 564B     		ldr	r3, .L138+4
 1907 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1908 03dc 002B     		cmp	r3, #0
 1909 03de 04D1     		bne	.L117
 555:main.c        ****                 turnStartedFlag = 1;
 1910              		.loc 1 555 0
 1911 03e0 5B4B     		ldr	r3, .L138+32
 1912 03e2 0122     		movs	r2, #1
 1913 03e4 1A70     		strb	r2, [r3]
 556:main.c        ****                 return TurnRight;
 1914              		.loc 1 556 0
 1915 03e6 0123     		movs	r3, #1
 1916 03e8 54E1     		b	.L81
 1917              	.L117:
 557:main.c        ****             }
 558:main.c        ****             
 559:main.c        ****             // Otherwise, keep going forward
 560:main.c        ****             return ForwardCourseCorrection(); 
 1918              		.loc 1 560 0
 1919 03ea FFF7FEFF 		bl	ForwardCourseCorrection
 1920 03ee 0346     		mov	r3, r0
 1921 03f0 50E1     		b	.L81
 1922              	.L77:
 561:main.c        ****             break;
 562:main.c        ****         case ForwardUntilTarget:       
 563:main.c        ****             // Reset distance on first iteration of this instruction
 564:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1923              		.loc 1 564 0
 1924 03f2 594B     		ldr	r3, .L138+40
 1925 03f4 1B78     		ldrb	r3, [r3]
 1926 03f6 DBB2     		uxtb	r3, r3
 1927 03f8 002B     		cmp	r3, #0
 1928 03fa 11D1     		bne	.L118
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 45


 1929              	.LBB3:
 565:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1930              		.loc 1 565 0
 1931 03fc 564B     		ldr	r3, .L138+40
 1932 03fe 0122     		movs	r2, #1
 1933 0400 1A70     		strb	r2, [r3]
 566:main.c        ****                 //uTurnIgnoreL = 0;
 567:main.c        ****                 //uTurnIgnoreR = 0;
 568:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 569:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1934              		.loc 1 569 0
 1935 0402 564B     		ldr	r3, .L138+44
 1936 0404 DB68     		ldr	r3, [r3, #12]
 1937 0406 FB61     		str	r3, [r7, #28]
 570:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 1938              		.loc 1 570 0
 1939 0408 F869     		ldr	r0, [r7, #28]
 1940 040a FFF7FEFF 		bl	__aeabi_i2f
 1941 040e 0346     		mov	r3, r0
 1942 0410 796A     		ldr	r1, [r7, #36]	@ float
 1943 0412 1846     		mov	r0, r3
 1944 0414 FFF7FEFF 		bl	__aeabi_fmul
 1945 0418 0346     		mov	r3, r0
 1946 041a 1A46     		mov	r2, r3
 1947 041c 504B     		ldr	r3, .L138+48
 1948 041e 1A60     		str	r2, [r3]	@ float
 1949              	.L118:
 1950              	.LBE3:
 571:main.c        ****             }
 572:main.c        ****             
 573:main.c        ****             if (s3) {
 1951              		.loc 1 573 0
 1952 0420 504B     		ldr	r3, .L138+52
 1953 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1954 0424 002B     		cmp	r3, #0
 1955 0426 02D0     		beq	.L119
 574:main.c        ****                 leftStatusFlag = 1;
 1956              		.loc 1 574 0
 1957 0428 4F4B     		ldr	r3, .L138+56
 1958 042a 0122     		movs	r2, #1
 1959 042c 1A70     		strb	r2, [r3]
 1960              	.L119:
 575:main.c        ****             }
 576:main.c        ****             
 577:main.c        ****             if (s4) {
 1961              		.loc 1 577 0
 1962 042e 414B     		ldr	r3, .L138+4
 1963 0430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1964 0432 002B     		cmp	r3, #0
 1965 0434 02D0     		beq	.L120
 578:main.c        ****                 rightStatusFlag = 1;
 1966              		.loc 1 578 0
 1967 0436 4D4B     		ldr	r3, .L138+60
 1968 0438 0122     		movs	r2, #1
 1969 043a 1A70     		strb	r2, [r3]
 1970              	.L120:
 579:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 46


 580:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 581:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 582:main.c        ****             if (leftStatusFlag) {
 1971              		.loc 1 582 0
 1972 043c 4A4B     		ldr	r3, .L138+56
 1973 043e 1B78     		ldrb	r3, [r3]
 1974 0440 DBB2     		uxtb	r3, r3
 1975 0442 002B     		cmp	r3, #0
 1976 0444 0FD0     		beq	.L121
 583:main.c        ****                 if (!s3) {
 1977              		.loc 1 583 0
 1978 0446 474B     		ldr	r3, .L138+52
 1979 0448 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1980 044a 002B     		cmp	r3, #0
 1981 044c 0BD1     		bne	.L121
 584:main.c        ****                     leftStatusFlag = 0;    
 1982              		.loc 1 584 0
 1983 044e 464B     		ldr	r3, .L138+56
 1984 0450 0022     		movs	r2, #0
 1985 0452 1A70     		strb	r2, [r3]
 585:main.c        ****                     forwardAfterTurnRIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING OPP
 1986              		.loc 1 585 0
 1987 0454 464B     		ldr	r3, .L138+64
 1988 0456 1B78     		ldrb	r3, [r3]
 1989 0458 DBB2     		uxtb	r3, r3
 1990 045a 0133     		adds	r3, r3, #1
 1991 045c DAB2     		uxtb	r2, r3
 1992 045e 444B     		ldr	r3, .L138+64
 1993 0460 1A70     		strb	r2, [r3]
 586:main.c        ****                     return Backward;
 1994              		.loc 1 586 0
 1995 0462 0923     		movs	r3, #9
 1996 0464 16E1     		b	.L81
 1997              	.L121:
 587:main.c        ****                 }
 588:main.c        ****             }
 589:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 590:main.c        ****             if (rightStatusFlag) {
 1998              		.loc 1 590 0
 1999 0466 414B     		ldr	r3, .L138+60
 2000 0468 1B78     		ldrb	r3, [r3]
 2001 046a DBB2     		uxtb	r3, r3
 2002 046c 002B     		cmp	r3, #0
 2003 046e 0FD0     		beq	.L122
 591:main.c        ****                 if (!s4) {
 2004              		.loc 1 591 0
 2005 0470 304B     		ldr	r3, .L138+4
 2006 0472 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2007 0474 002B     		cmp	r3, #0
 2008 0476 0BD1     		bne	.L122
 592:main.c        ****                     rightStatusFlag = 0;
 2009              		.loc 1 592 0
 2010 0478 3C4B     		ldr	r3, .L138+60
 2011 047a 0022     		movs	r2, #0
 2012 047c 1A70     		strb	r2, [r3]
 593:main.c        ****                     forwardAfterTurnLIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING OPP
 2013              		.loc 1 593 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 47


 2014 047e 3D4B     		ldr	r3, .L138+68
 2015 0480 1B78     		ldrb	r3, [r3]
 2016 0482 DBB2     		uxtb	r3, r3
 2017 0484 0133     		adds	r3, r3, #1
 2018 0486 DAB2     		uxtb	r2, r3
 2019 0488 3A4B     		ldr	r3, .L138+68
 2020 048a 1A70     		strb	r2, [r3]
 594:main.c        ****                     return Backward; // CHEECK IF CONDITION IS ACTUALLY BEING FULFILLED
 2021              		.loc 1 594 0
 2022 048c 0923     		movs	r3, #9
 2023 048e 01E1     		b	.L81
 2024              	.L122:
 595:main.c        ****                 }
 596:main.c        ****             }
 597:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 598:main.c        ****             
 599:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 600:main.c        ****             if (totalDistance >= blockSizeTotal && (currentInstruction.ignoreL > 0 && currentInstru
 2025              		.loc 1 600 0
 2026 0490 304B     		ldr	r3, .L138+36
 2027 0492 1A68     		ldr	r2, [r3]	@ float
 2028 0494 324B     		ldr	r3, .L138+48
 2029 0496 1B68     		ldr	r3, [r3]	@ float
 2030 0498 1946     		mov	r1, r3
 2031 049a 1046     		mov	r0, r2
 2032 049c FFF7FEFF 		bl	__aeabi_fcmpge
 2033 04a0 0346     		mov	r3, r0
 2034 04a2 002B     		cmp	r3, #0
 2035 04a4 0BD0     		beq	.L123
 2036              		.loc 1 600 0 is_stmt 0 discriminator 1
 2037 04a6 2D4B     		ldr	r3, .L138+44
 2038 04a8 5B68     		ldr	r3, [r3, #4]
 2039 04aa 002B     		cmp	r3, #0
 2040 04ac 07DD     		ble	.L123
 2041              		.loc 1 600 0 discriminator 2
 2042 04ae 2B4B     		ldr	r3, .L138+44
 2043 04b0 9B68     		ldr	r3, [r3, #8]
 2044 04b2 002B     		cmp	r3, #0
 2045 04b4 03DD     		ble	.L123
 601:main.c        ****                 // Get next instruction
 602:main.c        ****                 MoveToNextInstruction();
 2046              		.loc 1 602 0 is_stmt 1
 2047 04b6 FFF7FEFF 		bl	MoveToNextInstruction
 603:main.c        **** 
 604:main.c        ****                 
 605:main.c        ****                 return Stop;
 2048              		.loc 1 605 0
 2049 04ba 0523     		movs	r3, #5
 2050 04bc EAE0     		b	.L81
 2051              	.L123:
 606:main.c        ****             }
 607:main.c        ****             else if (totalDistance >= blockSizeTotal || (currentInstruction.ignoreL == 0 || current
 2052              		.loc 1 607 0
 2053 04be 254B     		ldr	r3, .L138+36
 2054 04c0 1A68     		ldr	r2, [r3]	@ float
 2055 04c2 274B     		ldr	r3, .L138+48
 2056 04c4 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 48


 2057 04c6 1946     		mov	r1, r3
 2058 04c8 1046     		mov	r0, r2
 2059 04ca FFF7FEFF 		bl	__aeabi_fcmpge
 2060 04ce 0346     		mov	r3, r0
 2061 04d0 002B     		cmp	r3, #0
 2062 04d2 07D1     		bne	.L125
 2063              		.loc 1 607 0 is_stmt 0 discriminator 1
 2064 04d4 214B     		ldr	r3, .L138+44
 2065 04d6 5B68     		ldr	r3, [r3, #4]
 2066 04d8 002B     		cmp	r3, #0
 2067 04da 03D0     		beq	.L125
 2068              		.loc 1 607 0 discriminator 2
 2069 04dc 1F4B     		ldr	r3, .L138+44
 2070 04de 9B68     		ldr	r3, [r3, #8]
 2071 04e0 002B     		cmp	r3, #0
 2072 04e2 03D1     		bne	.L126
 2073              	.L125:
 608:main.c        ****                 MoveToNextInstruction();
 2074              		.loc 1 608 0 is_stmt 1
 2075 04e4 FFF7FEFF 		bl	MoveToNextInstruction
 609:main.c        ****                 return Stop;
 2076              		.loc 1 609 0
 2077 04e8 0523     		movs	r3, #5
 2078 04ea D3E0     		b	.L81
 2079              	.L126:
 610:main.c        ****             }
 611:main.c        ****             
 612:main.c        ****             return ForwardCourseCorrection();
 2080              		.loc 1 612 0
 2081 04ec FFF7FEFF 		bl	ForwardCourseCorrection
 2082 04f0 0346     		mov	r3, r0
 2083 04f2 CFE0     		b	.L81
 2084              	.L78:
 613:main.c        ****             break;
 614:main.c        ****         case StopAtTarget:
 615:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 616:main.c        ****             // Reset flags
 617:main.c        ****             totalDistance = 0;
 2085              		.loc 1 617 0
 2086 04f4 174B     		ldr	r3, .L138+36
 2087 04f6 4FF00002 		mov	r2, #0
 2088 04fa 1A60     		str	r2, [r3]	@ float
 618:main.c        ****             forwardUntilTargetStartedFlag = 0;
 2089              		.loc 1 618 0
 2090 04fc 164B     		ldr	r3, .L138+40
 2091 04fe 0022     		movs	r2, #0
 2092 0500 1A70     		strb	r2, [r3]
 619:main.c        ****             blockSizeTotal = 0;
 2093              		.loc 1 619 0
 2094 0502 174B     		ldr	r3, .L138+48
 2095 0504 4FF00002 		mov	r2, #0
 2096 0508 1A60     		str	r2, [r3]	@ float
 620:main.c        ****             
 621:main.c        ****             if (currentDirection == Stop) {
 2097              		.loc 1 621 0
 2098 050a 0F4B     		ldr	r3, .L138+24
 2099 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 49


 2100 050e 052B     		cmp	r3, #5
 2101 0510 08D1     		bne	.L127
 622:main.c        ****                 if (stopBuffer <= 50) {
 2102              		.loc 1 622 0
 2103 0512 0E4B     		ldr	r3, .L138+28
 2104 0514 1B68     		ldr	r3, [r3]
 2105 0516 322B     		cmp	r3, #50
 2106 0518 01D8     		bhi	.L128
 623:main.c        ****                     return Stop;    
 2107              		.loc 1 623 0
 2108 051a 0523     		movs	r3, #5
 2109 051c BAE0     		b	.L81
 2110              	.L128:
 624:main.c        ****                 } else {
 625:main.c        ****                     stopBuffer = 250;
 2111              		.loc 1 625 0
 2112 051e 0B4B     		ldr	r3, .L138+28
 2113 0520 FA22     		movs	r2, #250
 2114 0522 1A60     		str	r2, [r3]
 2115              	.L127:
 626:main.c        ****                 }
 627:main.c        ****             }
 628:main.c        ****             
 629:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 630:main.c        ****             // Make sure index doesn't go over cap
 631:main.c        ****             // Stop at final location
 632:main.c        ****             if (currentFoodListIndex == 4) {
 2116              		.loc 1 632 0
 2117 0524 144B     		ldr	r3, .L138+72
 2118 0526 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2119 0528 042B     		cmp	r3, #4
 2120 052a 27D1     		bne	.L129
 633:main.c        ****                 return Stop;    
 2121              		.loc 1 633 0
 2122 052c 0523     		movs	r3, #5
 2123 052e B1E0     		b	.L81
 2124              	.L139:
 2125              		.align	2
 2126              	.L138:
 2127 0530 37000000 		.word	turnFinishedFlag
 2128 0534 00000000 		.word	s4
 2129 0538 00000000 		.word	s5
 2130 053c 00000000 		.word	s6
 2131 0540 00000000 		.word	forwardBuffer
 2132 0544 00000000 		.word	firstTurnIteration
 2133 0548 00000000 		.word	currentDirection
 2134 054c 00000000 		.word	stopBuffer
 2135 0550 36000000 		.word	turnStartedFlag
 2136 0554 00000000 		.word	totalDistance
 2137 0558 38000000 		.word	forwardUntilTargetStartedFlag
 2138 055c 00000000 		.word	currentInstruction
 2139 0560 00000000 		.word	blockSizeTotal
 2140 0564 00000000 		.word	s3
 2141 0568 3B000000 		.word	leftStatusFlag
 2142 056c 3C000000 		.word	rightStatusFlag
 2143 0570 58000000 		.word	forwardAfterTurnRIgnore
 2144 0574 57000000 		.word	forwardAfterTurnLIgnore
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 50


 2145 0578 00000000 		.word	currentFoodListIndex
 2146              	.L129:
 634:main.c        ****             }
 635:main.c        ****             
 636:main.c        ****             currentFoodListIndex++;
 2147              		.loc 1 636 0
 2148 057c 474B     		ldr	r3, .L140
 2149 057e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2150 0580 0133     		adds	r3, r3, #1
 2151 0582 DAB2     		uxtb	r2, r3
 2152 0584 454B     		ldr	r3, .L140
 2153 0586 1A70     		strb	r2, [r3]
 637:main.c        ****             instructionIndex = 0;
 2154              		.loc 1 637 0
 2155 0588 454B     		ldr	r3, .L140+4
 2156 058a 0022     		movs	r2, #0
 2157 058c 1A60     		str	r2, [r3]
 638:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 2158              		.loc 1 638 0
 2159 058e 434B     		ldr	r3, .L140
 2160 0590 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2161 0592 1A46     		mov	r2, r3
 2162 0594 434B     		ldr	r3, .L140+8
 2163 0596 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2164 0598 4349     		ldr	r1, .L140+12
 2165 059a 4448     		ldr	r0, .L140+16
 2166 059c FFF7FEFF 		bl	findPathNewOrientation
 2167 05a0 0246     		mov	r2, r0
 2168 05a2 434B     		ldr	r3, .L140+20
 2169 05a4 1A60     		str	r2, [r3]
 639:main.c        ****             numSteps = instructionsListLength();
 2170              		.loc 1 639 0
 2171 05a6 FFF7FEFF 		bl	instructionsListLength
 2172 05aa 0346     		mov	r3, r0
 2173 05ac 1A46     		mov	r2, r3
 2174 05ae 414B     		ldr	r3, .L140+24
 2175 05b0 1A60     		str	r2, [r3]
 640:main.c        ****     
 641:main.c        ****             currentInstruction = GetInstructionAtIndex();
 2176              		.loc 1 641 0
 2177 05b2 3C4C     		ldr	r4, .L140+8
 2178 05b4 3B46     		mov	r3, r7
 2179 05b6 1846     		mov	r0, r3
 2180 05b8 FFF7FEFF 		bl	GetInstructionAtIndex
 2181 05bc 2546     		mov	r5, r4
 2182 05be 3C46     		mov	r4, r7
 2183 05c0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2184 05c2 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2185 05c4 2368     		ldr	r3, [r4]
 2186 05c6 2B60     		str	r3, [r5]
 642:main.c        **** 
 643:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2187              		.loc 1 643 0
 2188 05c8 394B     		ldr	r3, .L140+20
 2189 05ca 1968     		ldr	r1, [r3]
 2190 05cc 344B     		ldr	r3, .L140+4
 2191 05ce 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 51


 2192 05d0 1346     		mov	r3, r2
 2193 05d2 9B00     		lsls	r3, r3, #2
 2194 05d4 1344     		add	r3, r3, r2
 2195 05d6 9B00     		lsls	r3, r3, #2
 2196 05d8 0B44     		add	r3, r3, r1
 2197 05da 5B68     		ldr	r3, [r3, #4]
 2198 05dc DAB2     		uxtb	r2, r3
 2199 05de 364B     		ldr	r3, .L140+28
 2200 05e0 1A70     		strb	r2, [r3]
 644:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2201              		.loc 1 644 0
 2202 05e2 334B     		ldr	r3, .L140+20
 2203 05e4 1968     		ldr	r1, [r3]
 2204 05e6 2E4B     		ldr	r3, .L140+4
 2205 05e8 1A68     		ldr	r2, [r3]
 2206 05ea 1346     		mov	r3, r2
 2207 05ec 9B00     		lsls	r3, r3, #2
 2208 05ee 1344     		add	r3, r3, r2
 2209 05f0 9B00     		lsls	r3, r3, #2
 2210 05f2 0B44     		add	r3, r3, r1
 2211 05f4 9B68     		ldr	r3, [r3, #8]
 2212 05f6 DAB2     		uxtb	r2, r3
 2213 05f8 304B     		ldr	r3, .L140+32
 2214 05fa 1A70     		strb	r2, [r3]
 645:main.c        ****             
 646:main.c        ****             return Stop;
 2215              		.loc 1 646 0
 2216 05fc 0523     		movs	r3, #5
 2217 05fe 49E0     		b	.L81
 2218              	.L76:
 647:main.c        ****             break;
 648:main.c        ****         case uTurn:
 649:main.c        ****             if (currentDirection == Stop) {
 2219              		.loc 1 649 0
 2220 0600 2F4B     		ldr	r3, .L140+36
 2221 0602 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2222 0604 052B     		cmp	r3, #5
 2223 0606 08D1     		bne	.L130
 650:main.c        ****                 if (stopBuffer <= 50) {
 2224              		.loc 1 650 0
 2225 0608 2E4B     		ldr	r3, .L140+40
 2226 060a 1B68     		ldr	r3, [r3]
 2227 060c 322B     		cmp	r3, #50
 2228 060e 01D8     		bhi	.L131
 651:main.c        ****                     return Stop;    
 2229              		.loc 1 651 0
 2230 0610 0523     		movs	r3, #5
 2231 0612 3FE0     		b	.L81
 2232              	.L131:
 652:main.c        ****                 } else {
 653:main.c        ****                     stopBuffer = 100;    
 2233              		.loc 1 653 0
 2234 0614 2B4B     		ldr	r3, .L140+40
 2235 0616 6422     		movs	r2, #100
 2236 0618 1A60     		str	r2, [r3]
 2237              	.L130:
 654:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 52


 655:main.c        ****             }
 656:main.c        ****             
 657:main.c        ****             
 658:main.c        ****             if (!uTurnStartedFlag) {
 2238              		.loc 1 658 0
 2239 061a 2B4B     		ldr	r3, .L140+44
 2240 061c 1B78     		ldrb	r3, [r3]
 2241 061e DBB2     		uxtb	r3, r3
 2242 0620 002B     		cmp	r3, #0
 2243 0622 07D1     		bne	.L132
 659:main.c        ****                 uTurnStartedFlag = 1;
 2244              		.loc 1 659 0
 2245 0624 284B     		ldr	r3, .L140+44
 2246 0626 0122     		movs	r2, #1
 2247 0628 1A70     		strb	r2, [r3]
 660:main.c        ****                 spinCourseCorrectionStarted = 0;
 2248              		.loc 1 660 0
 2249 062a 284B     		ldr	r3, .L140+48
 2250 062c 0022     		movs	r2, #0
 2251 062e 1A70     		strb	r2, [r3]
 661:main.c        ****                 return Spin180;
 2252              		.loc 1 661 0
 2253 0630 0A23     		movs	r3, #10
 2254 0632 2FE0     		b	.L81
 2255              	.L132:
 662:main.c        ****             } 
 663:main.c        ****             
 664:main.c        ****             if (uTurnFinishedFlag) {
 2256              		.loc 1 664 0
 2257 0634 264B     		ldr	r3, .L140+52
 2258 0636 1B78     		ldrb	r3, [r3]
 2259 0638 DBB2     		uxtb	r3, r3
 2260 063a 002B     		cmp	r3, #0
 2261 063c 09D0     		beq	.L133
 665:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 666:main.c        ****                 uTurnFinishedFlag = 0;
 2262              		.loc 1 666 0
 2263 063e 244B     		ldr	r3, .L140+52
 2264 0640 0022     		movs	r2, #0
 2265 0642 1A70     		strb	r2, [r3]
 667:main.c        ****                 uTurnStartedFlag = 0;
 2266              		.loc 1 667 0
 2267 0644 204B     		ldr	r3, .L140+44
 2268 0646 0022     		movs	r2, #0
 2269 0648 1A70     		strb	r2, [r3]
 668:main.c        ****                 MoveToNextInstruction();
 2270              		.loc 1 668 0
 2271 064a FFF7FEFF 		bl	MoveToNextInstruction
 669:main.c        ****                 return Stop;    
 2272              		.loc 1 669 0
 2273 064e 0523     		movs	r3, #5
 2274 0650 20E0     		b	.L81
 2275              	.L133:
 670:main.c        ****             }
 671:main.c        ****             
 672:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 673:main.c        ****             if (uTurnStartedFlag) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 53


 2276              		.loc 1 673 0
 2277 0652 1D4B     		ldr	r3, .L140+44
 2278 0654 1B78     		ldrb	r3, [r3]
 2279 0656 DBB2     		uxtb	r3, r3
 2280 0658 002B     		cmp	r3, #0
 2281 065a 16D0     		beq	.L134
 674:main.c        ****                 if (!s5 && !s6) {
 2282              		.loc 1 674 0
 2283 065c 1D4B     		ldr	r3, .L140+56
 2284 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2285 0660 002B     		cmp	r3, #0
 2286 0662 12D1     		bne	.L134
 2287              		.loc 1 674 0 is_stmt 0 discriminator 1
 2288 0664 1C4B     		ldr	r3, .L140+60
 2289 0666 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2290 0668 002B     		cmp	r3, #0
 2291 066a 0ED1     		bne	.L134
 675:main.c        ****                     totalLineCount = 0;
 2292              		.loc 1 675 0 is_stmt 1
 2293 066c 1B4B     		ldr	r3, .L140+64
 2294 066e 0022     		movs	r2, #0
 2295 0670 1A70     		strb	r2, [r3]
 676:main.c        ****                     lineCount = 0;
 2296              		.loc 1 676 0
 2297 0672 1B4B     		ldr	r3, .L140+68
 2298 0674 0022     		movs	r2, #0
 2299 0676 1A70     		strb	r2, [r3]
 677:main.c        ****                     tooEarlyFlag = 0;
 2300              		.loc 1 677 0
 2301 0678 1A4B     		ldr	r3, .L140+72
 2302 067a 0022     		movs	r2, #0
 2303 067c 1A70     		strb	r2, [r3]
 678:main.c        ****                     tooLateFlag = 0;
 2304              		.loc 1 678 0
 2305 067e 1A4B     		ldr	r3, .L140+76
 2306 0680 0022     		movs	r2, #0
 2307 0682 1A70     		strb	r2, [r3]
 679:main.c        ****                     uTurnFinishedFlag = 1;    
 2308              		.loc 1 679 0
 2309 0684 124B     		ldr	r3, .L140+52
 2310 0686 0122     		movs	r2, #1
 2311 0688 1A70     		strb	r2, [r3]
 2312              	.L134:
 680:main.c        ****                 }    
 681:main.c        ****             }
 682:main.c        ****             
 683:main.c        ****             return SpinCourseCorrection();
 2313              		.loc 1 683 0
 2314 068a FFF7FEFF 		bl	SpinCourseCorrection
 2315 068e 0346     		mov	r3, r0
 2316 0690 00E0     		b	.L81
 2317              	.L71:
 684:main.c        ****             break;
 685:main.c        ****         default:
 686:main.c        ****             return Stop;
 2318              		.loc 1 686 0
 2319 0692 0523     		movs	r3, #5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 54


 2320              	.L81:
 687:main.c        ****             break;
 688:main.c        ****     }
 689:main.c        ****     return Stop;
 690:main.c        **** }
 2321              		.loc 1 690 0
 2322 0694 1846     		mov	r0, r3
 2323 0696 2837     		adds	r7, r7, #40
 2324              		.cfi_def_cfa_offset 16
 2325 0698 BD46     		mov	sp, r7
 2326              		.cfi_def_cfa_register 13
 2327              		@ sp needed
 2328 069a B0BD     		pop	{r4, r5, r7, pc}
 2329              	.L141:
 2330              		.align	2
 2331              	.L140:
 2332 069c 00000000 		.word	currentFoodListIndex
 2333 06a0 14000000 		.word	instructionIndex
 2334 06a4 00000000 		.word	currentInstruction
 2335 06a8 00000000 		.word	food_list
 2336 06ac 00000000 		.word	map
 2337 06b0 00000000 		.word	instructionList
 2338 06b4 00000000 		.word	numSteps
 2339 06b8 3E000000 		.word	currentIgnoreL
 2340 06bc 3F000000 		.word	currentIgnoreR
 2341 06c0 00000000 		.word	currentDirection
 2342 06c4 00000000 		.word	stopBuffer
 2343 06c8 39000000 		.word	uTurnStartedFlag
 2344 06cc 3D000000 		.word	spinCourseCorrectionStarted
 2345 06d0 3A000000 		.word	uTurnFinishedFlag
 2346 06d4 00000000 		.word	s5
 2347 06d8 00000000 		.word	s6
 2348 06dc 40000000 		.word	totalLineCount
 2349 06e0 41000000 		.word	lineCount
 2350 06e4 43000000 		.word	tooEarlyFlag
 2351 06e8 44000000 		.word	tooLateFlag
 2352              		.cfi_endproc
 2353              	.LFE76:
 2354              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2355              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2356              		.align	2
 2357              		.global	MoveToNextInstruction
 2358              		.thumb
 2359              		.thumb_func
 2360              		.type	MoveToNextInstruction, %function
 2361              	MoveToNextInstruction:
 2362              	.LFB77:
 691:main.c        **** 
 692:main.c        **** // get next instruction
 693:main.c        **** void MoveToNextInstruction() {
 2363              		.loc 1 693 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 1, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
 2368 0000 80B4     		push	{r7}
 2369              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 55


 2370              		.cfi_offset 7, -4
 2371 0002 00AF     		add	r7, sp, #0
 2372              		.cfi_def_cfa_register 7
 694:main.c        ****     currentIgnoreL = 0;
 2373              		.loc 1 694 0
 2374 0004 144B     		ldr	r3, .L143
 2375 0006 0022     		movs	r2, #0
 2376 0008 1A70     		strb	r2, [r3]
 695:main.c        ****     currentIgnoreR = 0;
 2377              		.loc 1 695 0
 2378 000a 144B     		ldr	r3, .L143+4
 2379 000c 0022     		movs	r2, #0
 2380 000e 1A70     		strb	r2, [r3]
 696:main.c        **** 
 697:main.c        ****     instructionIndex++;
 2381              		.loc 1 697 0
 2382 0010 134B     		ldr	r3, .L143+8
 2383 0012 1B68     		ldr	r3, [r3]
 2384 0014 0133     		adds	r3, r3, #1
 2385 0016 124A     		ldr	r2, .L143+8
 2386 0018 1360     		str	r3, [r2]
 698:main.c        ****     
 699:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2387              		.loc 1 699 0
 2388 001a 124B     		ldr	r3, .L143+12
 2389 001c 1968     		ldr	r1, [r3]
 2390 001e 104B     		ldr	r3, .L143+8
 2391 0020 1A68     		ldr	r2, [r3]
 2392 0022 1346     		mov	r3, r2
 2393 0024 9B00     		lsls	r3, r3, #2
 2394 0026 1344     		add	r3, r3, r2
 2395 0028 9B00     		lsls	r3, r3, #2
 2396 002a 0B44     		add	r3, r3, r1
 2397 002c 5B68     		ldr	r3, [r3, #4]
 2398 002e DAB2     		uxtb	r2, r3
 2399 0030 094B     		ldr	r3, .L143
 2400 0032 1A70     		strb	r2, [r3]
 700:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2401              		.loc 1 700 0
 2402 0034 0B4B     		ldr	r3, .L143+12
 2403 0036 1968     		ldr	r1, [r3]
 2404 0038 094B     		ldr	r3, .L143+8
 2405 003a 1A68     		ldr	r2, [r3]
 2406 003c 1346     		mov	r3, r2
 2407 003e 9B00     		lsls	r3, r3, #2
 2408 0040 1344     		add	r3, r3, r2
 2409 0042 9B00     		lsls	r3, r3, #2
 2410 0044 0B44     		add	r3, r3, r1
 2411 0046 9B68     		ldr	r3, [r3, #8]
 2412 0048 DAB2     		uxtb	r2, r3
 2413 004a 044B     		ldr	r3, .L143+4
 2414 004c 1A70     		strb	r2, [r3]
 701:main.c        **** 
 702:main.c        **** }
 2415              		.loc 1 702 0
 2416 004e 00BF     		nop
 2417 0050 BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 56


 2418              		.cfi_def_cfa_register 13
 2419              		@ sp needed
 2420 0052 80BC     		pop	{r7}
 2421              		.cfi_restore 7
 2422              		.cfi_def_cfa_offset 0
 2423 0054 7047     		bx	lr
 2424              	.L144:
 2425 0056 00BF     		.align	2
 2426              	.L143:
 2427 0058 3E000000 		.word	currentIgnoreL
 2428 005c 3F000000 		.word	currentIgnoreR
 2429 0060 14000000 		.word	instructionIndex
 2430 0064 00000000 		.word	instructionList
 2431              		.cfi_endproc
 2432              	.LFE77:
 2433              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2434              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2435              		.align	2
 2436              		.global	GetInstructionAtIndex
 2437              		.thumb
 2438              		.thumb_func
 2439              		.type	GetInstructionAtIndex, %function
 2440              	GetInstructionAtIndex:
 2441              	.LFB78:
 703:main.c        **** 
 704:main.c        **** Instruction GetInstructionAtIndex() {
 2442              		.loc 1 704 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 32
 2445              		@ frame_needed = 1, uses_anonymous_args = 0
 2446              		@ link register save eliminated.
 2447 0000 B0B4     		push	{r4, r5, r7}
 2448              		.cfi_def_cfa_offset 12
 2449              		.cfi_offset 4, -12
 2450              		.cfi_offset 5, -8
 2451              		.cfi_offset 7, -4
 2452 0002 89B0     		sub	sp, sp, #36
 2453              		.cfi_def_cfa_offset 48
 2454 0004 00AF     		add	r7, sp, #0
 2455              		.cfi_def_cfa_register 7
 2456 0006 7860     		str	r0, [r7, #4]
 705:main.c        ****     Instruction nextInstruction;
 706:main.c        ****     // input is list of instructions and robot will react accordingly
 707:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2457              		.loc 1 707 0
 2458 0008 164B     		ldr	r3, .L147
 2459 000a 1968     		ldr	r1, [r3]
 2460 000c 164B     		ldr	r3, .L147+4
 2461 000e 1A68     		ldr	r2, [r3]
 2462 0010 1346     		mov	r3, r2
 2463 0012 9B00     		lsls	r3, r3, #2
 2464 0014 1344     		add	r3, r3, r2
 2465 0016 9B00     		lsls	r3, r3, #2
 2466 0018 0B44     		add	r3, r3, r1
 2467 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 001c 3B73     		strb	r3, [r7, #12]
 708:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 57


 2469              		.loc 1 708 0
 2470 001e 114B     		ldr	r3, .L147
 2471 0020 1968     		ldr	r1, [r3]
 2472 0022 114B     		ldr	r3, .L147+4
 2473 0024 1A68     		ldr	r2, [r3]
 2474 0026 1346     		mov	r3, r2
 2475 0028 9B00     		lsls	r3, r3, #2
 2476 002a 1344     		add	r3, r3, r2
 2477 002c 9B00     		lsls	r3, r3, #2
 2478 002e 0B44     		add	r3, r3, r1
 2479 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2480 0032 3B77     		strb	r3, [r7, #28]
 709:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2481              		.loc 1 709 0
 2482 0034 0B4B     		ldr	r3, .L147
 2483 0036 1968     		ldr	r1, [r3]
 2484 0038 0B4B     		ldr	r3, .L147+4
 2485 003a 1A68     		ldr	r2, [r3]
 2486 003c 1346     		mov	r3, r2
 2487 003e 9B00     		lsls	r3, r3, #2
 2488 0040 1344     		add	r3, r3, r2
 2489 0042 9B00     		lsls	r3, r3, #2
 2490 0044 0B44     		add	r3, r3, r1
 2491 0046 DB68     		ldr	r3, [r3, #12]
 2492 0048 BB61     		str	r3, [r7, #24]
 710:main.c        ****     return nextInstruction;
 2493              		.loc 1 710 0
 2494 004a 7B68     		ldr	r3, [r7, #4]
 2495 004c 1D46     		mov	r5, r3
 2496 004e 07F10C04 		add	r4, r7, #12
 2497 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2498 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2499 0056 2368     		ldr	r3, [r4]
 2500 0058 2B60     		str	r3, [r5]
 711:main.c        **** }
 2501              		.loc 1 711 0
 2502 005a 7868     		ldr	r0, [r7, #4]
 2503 005c 2437     		adds	r7, r7, #36
 2504              		.cfi_def_cfa_offset 12
 2505 005e BD46     		mov	sp, r7
 2506              		.cfi_def_cfa_register 13
 2507              		@ sp needed
 2508 0060 B0BC     		pop	{r4, r5, r7}
 2509              		.cfi_restore 7
 2510              		.cfi_restore 5
 2511              		.cfi_restore 4
 2512              		.cfi_def_cfa_offset 0
 2513 0062 7047     		bx	lr
 2514              	.L148:
 2515              		.align	2
 2516              	.L147:
 2517 0064 00000000 		.word	instructionList
 2518 0068 14000000 		.word	instructionIndex
 2519              		.cfi_endproc
 2520              	.LFE78:
 2521              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2522              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 58


 2523              		.align	2
 2524              		.global	RotateClockwise180Degrees
 2525              		.thumb
 2526              		.thumb_func
 2527              		.type	RotateClockwise180Degrees, %function
 2528              	RotateClockwise180Degrees:
 2529              	.LFB79:
 712:main.c        **** 
 713:main.c        **** void RotateClockwise180Degrees() {
 2530              		.loc 1 713 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 8
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534 0000 80B5     		push	{r7, lr}
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 7, -8
 2537              		.cfi_offset 14, -4
 2538 0002 82B0     		sub	sp, sp, #8
 2539              		.cfi_def_cfa_offset 16
 2540 0004 00AF     		add	r7, sp, #0
 2541              		.cfi_def_cfa_register 7
 714:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2542              		.loc 1 714 0
 2543 0006 49F20873 		movw	r3, #38664
 2544 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 715:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2545              		.loc 1 715 0
 2546 000c 49F20873 		movw	r3, #38664
 2547 0010 3B80     		strh	r3, [r7]	@ movhi
 716:main.c        ****     PWM_1_WriteCompare(count1);
 2548              		.loc 1 716 0
 2549 0012 7B88     		ldrh	r3, [r7, #2]
 2550 0014 1846     		mov	r0, r3
 2551 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 717:main.c        ****     PWM_2_WriteCompare(count2);
 2552              		.loc 1 717 0
 2553 001a 3B88     		ldrh	r3, [r7]
 2554 001c 1846     		mov	r0, r3
 2555 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 718:main.c        ****     
 719:main.c        ****     int quadPulseCount = 0;
 2556              		.loc 1 719 0
 2557 0022 0023     		movs	r3, #0
 2558 0024 7B60     		str	r3, [r7, #4]
 720:main.c        ****     QuadDec_M1_SetCounter(0);
 2559              		.loc 1 720 0
 2560 0026 0020     		movs	r0, #0
 2561 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 721:main.c        ****     // Before 180, save initial configuration
 722:main.c        ****     if (!s3) {
 2562              		.loc 1 722 0
 2563 002c 3A4B     		ldr	r3, .L162
 2564 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 0030 002B     		cmp	r3, #0
 2566 0032 06D1     		bne	.L150
 723:main.c        ****         totalLineCount++;    
 2567              		.loc 1 723 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 59


 2568 0034 394B     		ldr	r3, .L162+4
 2569 0036 1B78     		ldrb	r3, [r3]
 2570 0038 DBB2     		uxtb	r3, r3
 2571 003a 0133     		adds	r3, r3, #1
 2572 003c DAB2     		uxtb	r2, r3
 2573 003e 374B     		ldr	r3, .L162+4
 2574 0040 1A70     		strb	r2, [r3]
 2575              	.L150:
 724:main.c        ****     }
 725:main.c        ****     if (!s4) {
 2576              		.loc 1 725 0
 2577 0042 374B     		ldr	r3, .L162+8
 2578 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2579 0046 002B     		cmp	r3, #0
 2580 0048 06D1     		bne	.L151
 726:main.c        ****         totalLineCount++;    
 2581              		.loc 1 726 0
 2582 004a 344B     		ldr	r3, .L162+4
 2583 004c 1B78     		ldrb	r3, [r3]
 2584 004e DBB2     		uxtb	r3, r3
 2585 0050 0133     		adds	r3, r3, #1
 2586 0052 DAB2     		uxtb	r2, r3
 2587 0054 314B     		ldr	r3, .L162+4
 2588 0056 1A70     		strb	r2, [r3]
 2589              	.L151:
 727:main.c        ****     }
 728:main.c        ****     if (!s5 || !s6) {
 2590              		.loc 1 728 0
 2591 0058 324B     		ldr	r3, .L162+12
 2592 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2593 005c 002B     		cmp	r3, #0
 2594 005e 03D0     		beq	.L152
 2595              		.loc 1 728 0 is_stmt 0 discriminator 1
 2596 0060 314B     		ldr	r3, .L162+16
 2597 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2598 0064 002B     		cmp	r3, #0
 2599 0066 2AD1     		bne	.L154
 2600              	.L152:
 729:main.c        ****         totalLineCount++;    
 2601              		.loc 1 729 0 is_stmt 1
 2602 0068 2C4B     		ldr	r3, .L162+4
 2603 006a 1B78     		ldrb	r3, [r3]
 2604 006c DBB2     		uxtb	r3, r3
 2605 006e 0133     		adds	r3, r3, #1
 2606 0070 DAB2     		uxtb	r2, r3
 2607 0072 2A4B     		ldr	r3, .L162+4
 2608 0074 1A70     		strb	r2, [r3]
 730:main.c        ****     }
 731:main.c        ****     
 732:main.c        ****     // During 180
 733:main.c        ****     while(quadPulseCount < 210) {
 2609              		.loc 1 733 0
 2610 0076 22E0     		b	.L154
 2611              	.L157:
 734:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2612              		.loc 1 734 0
 2613 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 60


 2614 007c 0346     		mov	r3, r0
 2615 007e 7B60     		str	r3, [r7, #4]
 735:main.c        ****         if (!s3) {
 2616              		.loc 1 735 0
 2617 0080 254B     		ldr	r3, .L162
 2618 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2619 0084 002B     		cmp	r3, #0
 2620 0086 02D1     		bne	.L155
 736:main.c        ****             onLineFlag = 1;    
 2621              		.loc 1 736 0
 2622 0088 284B     		ldr	r3, .L162+20
 2623 008a 0122     		movs	r2, #1
 2624 008c 1A70     		strb	r2, [r3]
 2625              	.L155:
 737:main.c        ****         }
 738:main.c        ****         
 739:main.c        ****         if (onLineFlag) {
 2626              		.loc 1 739 0
 2627 008e 274B     		ldr	r3, .L162+20
 2628 0090 1B78     		ldrb	r3, [r3]
 2629 0092 DBB2     		uxtb	r3, r3
 2630 0094 002B     		cmp	r3, #0
 2631 0096 06D0     		beq	.L156
 740:main.c        ****             lineCount++;    
 2632              		.loc 1 740 0
 2633 0098 254B     		ldr	r3, .L162+24
 2634 009a 1B78     		ldrb	r3, [r3]
 2635 009c DBB2     		uxtb	r3, r3
 2636 009e 0133     		adds	r3, r3, #1
 2637 00a0 DAB2     		uxtb	r2, r3
 2638 00a2 234B     		ldr	r3, .L162+24
 2639 00a4 1A70     		strb	r2, [r3]
 2640              	.L156:
 741:main.c        ****         }
 742:main.c        ****         
 743:main.c        ****         if (!onLineFlag) {
 2641              		.loc 1 743 0
 2642 00a6 214B     		ldr	r3, .L162+20
 2643 00a8 1B78     		ldrb	r3, [r3]
 2644 00aa DBB2     		uxtb	r3, r3
 2645 00ac 002B     		cmp	r3, #0
 2646 00ae 06D1     		bne	.L154
 744:main.c        ****             if (s3) {
 2647              		.loc 1 744 0
 2648 00b0 194B     		ldr	r3, .L162
 2649 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2650 00b4 002B     		cmp	r3, #0
 2651 00b6 02D0     		beq	.L154
 745:main.c        ****                 onLineFlag = 0;    
 2652              		.loc 1 745 0
 2653 00b8 1C4B     		ldr	r3, .L162+20
 2654 00ba 0022     		movs	r2, #0
 2655 00bc 1A70     		strb	r2, [r3]
 2656              	.L154:
 733:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2657              		.loc 1 733 0
 2658 00be 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 61


 2659 00c0 D12B     		cmp	r3, #209
 2660 00c2 D9DD     		ble	.L157
 746:main.c        ****             }
 747:main.c        ****         }
 748:main.c        ****     }
 749:main.c        ****     
 750:main.c        ****     // After 180
 751:main.c        ****     if (totalLineCount == 0) {
 2661              		.loc 1 751 0
 2662 00c4 154B     		ldr	r3, .L162+4
 2663 00c6 1B78     		ldrb	r3, [r3]
 2664 00c8 DBB2     		uxtb	r3, r3
 2665 00ca 002B     		cmp	r3, #0
 2666 00cc 06D1     		bne	.L158
 752:main.c        ****         // we are on no lines
 753:main.c        ****         tooEarlyFlag = 1;
 2667              		.loc 1 753 0
 2668 00ce 194B     		ldr	r3, .L162+28
 2669 00d0 0122     		movs	r2, #1
 2670 00d2 1A70     		strb	r2, [r3]
 754:main.c        ****         QuadDec_M1_SetCounter(0);
 2671              		.loc 1 754 0
 2672 00d4 0020     		movs	r0, #0
 2673 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 755:main.c        ****         return;
 2674              		.loc 1 755 0
 2675 00da 19E0     		b	.L149
 2676              	.L158:
 756:main.c        ****     }
 757:main.c        ****     else if (lineCount > totalLineCount) {
 2677              		.loc 1 757 0
 2678 00dc 144B     		ldr	r3, .L162+24
 2679 00de 1B78     		ldrb	r3, [r3]
 2680 00e0 DAB2     		uxtb	r2, r3
 2681 00e2 0E4B     		ldr	r3, .L162+4
 2682 00e4 1B78     		ldrb	r3, [r3]
 2683 00e6 DBB2     		uxtb	r3, r3
 2684 00e8 9A42     		cmp	r2, r3
 2685 00ea 03D9     		bls	.L160
 758:main.c        ****         tooLateFlag = 1;    
 2686              		.loc 1 758 0
 2687 00ec 124B     		ldr	r3, .L162+32
 2688 00ee 0122     		movs	r2, #1
 2689 00f0 1A70     		strb	r2, [r3]
 2690 00f2 0AE0     		b	.L161
 2691              	.L160:
 759:main.c        ****     }
 760:main.c        ****     else if (lineCount < totalLineCount) {
 2692              		.loc 1 760 0
 2693 00f4 0E4B     		ldr	r3, .L162+24
 2694 00f6 1B78     		ldrb	r3, [r3]
 2695 00f8 DAB2     		uxtb	r2, r3
 2696 00fa 084B     		ldr	r3, .L162+4
 2697 00fc 1B78     		ldrb	r3, [r3]
 2698 00fe DBB2     		uxtb	r3, r3
 2699 0100 9A42     		cmp	r2, r3
 2700 0102 02D2     		bcs	.L161
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 62


 761:main.c        ****         tooEarlyFlag = 1;    
 2701              		.loc 1 761 0
 2702 0104 0B4B     		ldr	r3, .L162+28
 2703 0106 0122     		movs	r2, #1
 2704 0108 1A70     		strb	r2, [r3]
 2705              	.L161:
 762:main.c        ****     }
 763:main.c        ****     QuadDec_M1_SetCounter(0);
 2706              		.loc 1 763 0
 2707 010a 0020     		movs	r0, #0
 2708 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2709              	.L149:
 764:main.c        **** }
 2710              		.loc 1 764 0
 2711 0110 0837     		adds	r7, r7, #8
 2712              		.cfi_def_cfa_offset 8
 2713 0112 BD46     		mov	sp, r7
 2714              		.cfi_def_cfa_register 13
 2715              		@ sp needed
 2716 0114 80BD     		pop	{r7, pc}
 2717              	.L163:
 2718 0116 00BF     		.align	2
 2719              	.L162:
 2720 0118 00000000 		.word	s3
 2721 011c 40000000 		.word	totalLineCount
 2722 0120 00000000 		.word	s4
 2723 0124 00000000 		.word	s5
 2724 0128 00000000 		.word	s6
 2725 012c 42000000 		.word	onLineFlag
 2726 0130 41000000 		.word	lineCount
 2727 0134 43000000 		.word	tooEarlyFlag
 2728 0138 44000000 		.word	tooLateFlag
 2729              		.cfi_endproc
 2730              	.LFE79:
 2731              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2732              		.section	.text.SetRobotMovement,"ax",%progbits
 2733              		.align	2
 2734              		.global	SetRobotMovement
 2735              		.thumb
 2736              		.thumb_func
 2737              		.type	SetRobotMovement, %function
 2738              	SetRobotMovement:
 2739              	.LFB80:
 765:main.c        **** 
 766:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 767:main.c        **** void SetRobotMovement() {
 2740              		.loc 1 767 0
 2741              		.cfi_startproc
 2742              		@ args = 0, pretend = 0, frame = 24
 2743              		@ frame_needed = 1, uses_anonymous_args = 0
 2744 0000 B0B5     		push	{r4, r5, r7, lr}
 2745              		.cfi_def_cfa_offset 16
 2746              		.cfi_offset 4, -16
 2747              		.cfi_offset 5, -12
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 63


 2751              		.cfi_def_cfa_offset 40
 2752 0004 00AF     		add	r7, sp, #0
 2753              		.cfi_def_cfa_register 7
 768:main.c        ****     //MoveToNextInstruction(); // debug purposes
 769:main.c        ****     previousInstruction = currentInstruction;
 2754              		.loc 1 769 0
 2755 0006 2D4A     		ldr	r2, .L180
 2756 0008 2D4B     		ldr	r3, .L180+4
 2757 000a 1446     		mov	r4, r2
 2758 000c 1D46     		mov	r5, r3
 2759 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2760 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2761 0012 2B68     		ldr	r3, [r5]
 2762 0014 2360     		str	r3, [r4]
 770:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2763              		.loc 1 770 0
 2764 0016 2A4C     		ldr	r4, .L180+4
 2765 0018 3B46     		mov	r3, r7
 2766 001a 1846     		mov	r0, r3
 2767 001c FFF7FEFF 		bl	GetInstructionAtIndex
 2768 0020 2546     		mov	r5, r4
 2769 0022 3C46     		mov	r4, r7
 2770 0024 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2771 0026 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2772 0028 2368     		ldr	r3, [r4]
 2773 002a 2B60     		str	r3, [r5]
 771:main.c        ****     previousDirection = currentDirection;
 2774              		.loc 1 771 0
 2775 002c 254B     		ldr	r3, .L180+8
 2776 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2777 0030 254B     		ldr	r3, .L180+12
 2778 0032 1A70     		strb	r2, [r3]
 772:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2779              		.loc 1 772 0
 2780 0034 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2781 0038 0346     		mov	r3, r0
 2782 003a 1A46     		mov	r2, r3
 2783 003c 214B     		ldr	r3, .L180+8
 2784 003e 1A70     		strb	r2, [r3]
 773:main.c        ****     // move robot depending on sensors
 774:main.c        ****     switch (currentDirection) {
 2785              		.loc 1 774 0
 2786 0040 204B     		ldr	r3, .L180+8
 2787 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2788 0044 0A2B     		cmp	r3, #10
 2789 0046 35D8     		bhi	.L178
 2790 0048 01A2     		adr	r2, .L167
 2791 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2792 004e 00BF     		.p2align 2
 2793              	.L167:
 2794 0050 7D000000 		.word	.L166+1
 2795 0054 83000000 		.word	.L168+1
 2796 0058 89000000 		.word	.L169+1
 2797 005c 95000000 		.word	.L170+1
 2798 0060 8F000000 		.word	.L171+1
 2799 0064 9B000000 		.word	.L172+1
 2800 0068 B3000000 		.word	.L179+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 64


 2801 006c B3000000 		.word	.L179+1
 2802 0070 A1000000 		.word	.L175+1
 2803 0074 A7000000 		.word	.L176+1
 2804 0078 AD000000 		.word	.L177+1
 2805              		.p2align 1
 2806              	.L166:
 775:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 776:main.c        ****         case Forward:
 777:main.c        ****             moveForward();
 2807              		.loc 1 777 0
 2808 007c FFF7FEFF 		bl	moveForward
 778:main.c        ****             break;
 2809              		.loc 1 778 0
 2810 0080 18E0     		b	.L165
 2811              	.L168:
 779:main.c        ****         case TurnRight:
 780:main.c        ****             turnRight();
 2812              		.loc 1 780 0
 2813 0082 FFF7FEFF 		bl	turnRight
 781:main.c        ****             break;
 2814              		.loc 1 781 0
 2815 0086 15E0     		b	.L165
 2816              	.L169:
 782:main.c        ****         case TurnLeft:
 783:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2817              		.loc 1 783 0
 2818 0088 FFF7FEFF 		bl	turnLeft
 784:main.c        ****             break;
 2819              		.loc 1 784 0
 2820 008c 12E0     		b	.L165
 2821              	.L171:
 785:main.c        ****         case AdjustToTheRight:
 786:main.c        ****             adjustRight();
 2822              		.loc 1 786 0
 2823 008e FFF7FEFF 		bl	adjustRight
 787:main.c        ****             break;
 2824              		.loc 1 787 0
 2825 0092 0FE0     		b	.L165
 2826              	.L170:
 788:main.c        ****         case AdjustToTheLeft:
 789:main.c        ****             adjustLeft();
 2827              		.loc 1 789 0
 2828 0094 FFF7FEFF 		bl	adjustLeft
 790:main.c        ****             break;
 2829              		.loc 1 790 0
 2830 0098 0CE0     		b	.L165
 2831              	.L172:
 791:main.c        ****         case Stop:
 792:main.c        ****             stopMoving();
 2832              		.loc 1 792 0
 2833 009a FFF7FEFF 		bl	stopMoving
 793:main.c        ****             break;
 2834              		.loc 1 793 0
 2835 009e 09E0     		b	.L165
 2836              	.L175:
 794:main.c        ****         case ForwardAfterTurn:
 795:main.c        ****             moveForward();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 65


 2837              		.loc 1 795 0
 2838 00a0 FFF7FEFF 		bl	moveForward
 796:main.c        ****             break;
 2839              		.loc 1 796 0
 2840 00a4 06E0     		b	.L165
 2841              	.L176:
 797:main.c        ****         case Backward:
 798:main.c        ****             moveBackward();
 2842              		.loc 1 798 0
 2843 00a6 FFF7FEFF 		bl	moveBackward
 799:main.c        ****             break;
 2844              		.loc 1 799 0
 2845 00aa 03E0     		b	.L165
 2846              	.L177:
 800:main.c        ****         case waitForTurn:
 801:main.c        ****             break;
 802:main.c        ****         case Spin180:
 803:main.c        ****             RotateClockwise180Degrees();
 2847              		.loc 1 803 0
 2848 00ac FFF7FEFF 		bl	RotateClockwise180Degrees
 804:main.c        ****             break;
 2849              		.loc 1 804 0
 2850 00b0 00E0     		b	.L165
 2851              	.L179:
 805:main.c        ****         case Unknown:
 806:main.c        ****             break;  
 2852              		.loc 1 806 0
 2853 00b2 00BF     		nop
 2854              	.L165:
 2855              	.L178:
 807:main.c        ****     }
 808:main.c        **** }
 2856              		.loc 1 808 0
 2857 00b4 00BF     		nop
 2858 00b6 1837     		adds	r7, r7, #24
 2859              		.cfi_def_cfa_offset 16
 2860 00b8 BD46     		mov	sp, r7
 2861              		.cfi_def_cfa_register 13
 2862              		@ sp needed
 2863 00ba B0BD     		pop	{r4, r5, r7, pc}
 2864              	.L181:
 2865              		.align	2
 2866              	.L180:
 2867 00bc 00000000 		.word	previousInstruction
 2868 00c0 00000000 		.word	currentInstruction
 2869 00c4 00000000 		.word	currentDirection
 2870 00c8 00000000 		.word	previousDirection
 2871              		.cfi_endproc
 2872              	.LFE80:
 2873              		.size	SetRobotMovement, .-SetRobotMovement
 2874              		.text
 2875              	.Letext0:
 2876              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2877              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2878              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2879              		.file 5 "vars.h"
 2880              		.file 6 "pathfinding.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 66


 2881              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2882              		.file 8 "map.h"
 2883              		.section	.debug_info,"",%progbits
 2884              	.Ldebug_info0:
 2885 0000 130A0000 		.4byte	0xa13
 2886 0004 0400     		.2byte	0x4
 2887 0006 00000000 		.4byte	.Ldebug_abbrev0
 2888 000a 04       		.byte	0x4
 2889 000b 01       		.uleb128 0x1
 2890 000c F5000000 		.4byte	.LASF158
 2891 0010 0C       		.byte	0xc
 2892 0011 AF040000 		.4byte	.LASF159
 2893 0015 85000000 		.4byte	.LASF160
 2894 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2895 001d 00000000 		.4byte	0
 2896 0021 00000000 		.4byte	.Ldebug_line0
 2897 0025 02       		.uleb128 0x2
 2898 0026 01       		.byte	0x1
 2899 0027 06       		.byte	0x6
 2900 0028 79000000 		.4byte	.LASF0
 2901 002c 02       		.uleb128 0x2
 2902 002d 01       		.byte	0x1
 2903 002e 08       		.byte	0x8
 2904 002f 68060000 		.4byte	.LASF1
 2905 0033 02       		.uleb128 0x2
 2906 0034 02       		.byte	0x2
 2907 0035 05       		.byte	0x5
 2908 0036 D4040000 		.4byte	.LASF2
 2909 003a 02       		.uleb128 0x2
 2910 003b 02       		.byte	0x2
 2911 003c 07       		.byte	0x7
 2912 003d 4B040000 		.4byte	.LASF3
 2913 0041 03       		.uleb128 0x3
 2914 0042 A5040000 		.4byte	.LASF12
 2915 0046 02       		.byte	0x2
 2916 0047 3F       		.byte	0x3f
 2917 0048 4C000000 		.4byte	0x4c
 2918 004c 02       		.uleb128 0x2
 2919 004d 04       		.byte	0x4
 2920 004e 05       		.byte	0x5
 2921 004f 84020000 		.4byte	.LASF4
 2922 0053 02       		.uleb128 0x2
 2923 0054 04       		.byte	0x4
 2924 0055 07       		.byte	0x7
 2925 0056 F0030000 		.4byte	.LASF5
 2926 005a 02       		.uleb128 0x2
 2927 005b 08       		.byte	0x8
 2928 005c 05       		.byte	0x5
 2929 005d ED020000 		.4byte	.LASF6
 2930 0061 02       		.uleb128 0x2
 2931 0062 08       		.byte	0x8
 2932 0063 07       		.byte	0x7
 2933 0064 A5010000 		.4byte	.LASF7
 2934 0068 04       		.uleb128 0x4
 2935 0069 04       		.byte	0x4
 2936 006a 05       		.byte	0x5
 2937 006b 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 67


 2938 006f 02       		.uleb128 0x2
 2939 0070 04       		.byte	0x4
 2940 0071 07       		.byte	0x7
 2941 0072 96070000 		.4byte	.LASF8
 2942 0076 02       		.uleb128 0x2
 2943 0077 08       		.byte	0x8
 2944 0078 04       		.byte	0x4
 2945 0079 75070000 		.4byte	.LASF9
 2946 007d 02       		.uleb128 0x2
 2947 007e 04       		.byte	0x4
 2948 007f 07       		.byte	0x7
 2949 0080 5F050000 		.4byte	.LASF10
 2950 0084 02       		.uleb128 0x2
 2951 0085 01       		.byte	0x1
 2952 0086 08       		.byte	0x8
 2953 0087 81070000 		.4byte	.LASF11
 2954 008b 03       		.uleb128 0x3
 2955 008c 60060000 		.4byte	.LASF13
 2956 0090 03       		.byte	0x3
 2957 0091 2C       		.byte	0x2c
 2958 0092 41000000 		.4byte	0x41
 2959 0096 05       		.uleb128 0x5
 2960 0097 E7020000 		.4byte	.LASF14
 2961 009b 04       		.byte	0x4
 2962 009c E701     		.2byte	0x1e7
 2963 009e 2C000000 		.4byte	0x2c
 2964 00a2 05       		.uleb128 0x5
 2965 00a3 76060000 		.4byte	.LASF15
 2966 00a7 04       		.byte	0x4
 2967 00a8 E801     		.2byte	0x1e8
 2968 00aa 3A000000 		.4byte	0x3a
 2969 00ae 05       		.uleb128 0x5
 2970 00af 65030000 		.4byte	.LASF16
 2971 00b3 04       		.byte	0x4
 2972 00b4 E901     		.2byte	0x1e9
 2973 00b6 53000000 		.4byte	0x53
 2974 00ba 05       		.uleb128 0x5
 2975 00bb 95040000 		.4byte	.LASF17
 2976 00bf 04       		.byte	0x4
 2977 00c0 EA01     		.2byte	0x1ea
 2978 00c2 25000000 		.4byte	0x25
 2979 00c6 05       		.uleb128 0x5
 2980 00c7 D2080000 		.4byte	.LASF18
 2981 00cb 04       		.byte	0x4
 2982 00cc EB01     		.2byte	0x1eb
 2983 00ce 33000000 		.4byte	0x33
 2984 00d2 02       		.uleb128 0x2
 2985 00d3 04       		.byte	0x4
 2986 00d4 04       		.byte	0x4
 2987 00d5 05060000 		.4byte	.LASF19
 2988 00d9 02       		.uleb128 0x2
 2989 00da 08       		.byte	0x8
 2990 00db 04       		.byte	0x4
 2991 00dc FB020000 		.4byte	.LASF20
 2992 00e0 06       		.uleb128 0x6
 2993 00e1 96000000 		.4byte	0x96
 2994 00e5 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 68


 2995 00e6 AE000000 		.4byte	0xae
 2996 00ea 07       		.uleb128 0x7
 2997 00eb 96000000 		.4byte	0x96
 2998 00ef FA000000 		.4byte	0xfa
 2999 00f3 08       		.uleb128 0x8
 3000 00f4 7D000000 		.4byte	0x7d
 3001 00f8 03       		.byte	0x3
 3002 00f9 00       		.byte	0
 3003 00fa 09       		.uleb128 0x9
 3004 00fb D5030000 		.4byte	.LASF49
 3005 00ff 20       		.byte	0x20
 3006 0100 05       		.byte	0x5
 3007 0101 28       		.byte	0x28
 3008 0102 D3010000 		.4byte	0x1d3
 3009 0106 0A       		.uleb128 0xa
 3010 0107 A3070000 		.4byte	.LASF21
 3011 010b 05       		.byte	0x5
 3012 010c 2A       		.byte	0x2a
 3013 010d BA000000 		.4byte	0xba
 3014 0111 00       		.byte	0
 3015 0112 0A       		.uleb128 0xa
 3016 0113 A8070000 		.4byte	.LASF22
 3017 0117 05       		.byte	0x5
 3018 0118 2B       		.byte	0x2b
 3019 0119 96000000 		.4byte	0x96
 3020 011d 01       		.byte	0x1
 3021 011e 0A       		.uleb128 0xa
 3022 011f ED070000 		.4byte	.LASF23
 3023 0123 05       		.byte	0x5
 3024 0124 2C       		.byte	0x2c
 3025 0125 C6000000 		.4byte	0xc6
 3026 0129 02       		.byte	0x2
 3027 012a 0A       		.uleb128 0xa
 3028 012b FA060000 		.4byte	.LASF24
 3029 012f 05       		.byte	0x5
 3030 0130 2D       		.byte	0x2d
 3031 0131 C6000000 		.4byte	0xc6
 3032 0135 04       		.byte	0x4
 3033 0136 0A       		.uleb128 0xa
 3034 0137 31090000 		.4byte	.LASF25
 3035 013b 05       		.byte	0x5
 3036 013c 2E       		.byte	0x2e
 3037 013d C6000000 		.4byte	0xc6
 3038 0141 06       		.byte	0x6
 3039 0142 0A       		.uleb128 0xa
 3040 0143 D6010000 		.4byte	.LASF26
 3041 0147 05       		.byte	0x5
 3042 0148 2F       		.byte	0x2f
 3043 0149 C6000000 		.4byte	0xc6
 3044 014d 08       		.byte	0x8
 3045 014e 0A       		.uleb128 0xa
 3046 014f 86070000 		.4byte	.LASF27
 3047 0153 05       		.byte	0x5
 3048 0154 30       		.byte	0x30
 3049 0155 C6000000 		.4byte	0xc6
 3050 0159 0A       		.byte	0xa
 3051 015a 0A       		.uleb128 0xa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 69


 3052 015b 10090000 		.4byte	.LASF28
 3053 015f 05       		.byte	0x5
 3054 0160 31       		.byte	0x31
 3055 0161 C6000000 		.4byte	0xc6
 3056 0165 0C       		.byte	0xc
 3057 0166 0A       		.uleb128 0xa
 3058 0167 92010000 		.4byte	.LASF29
 3059 016b 05       		.byte	0x5
 3060 016c 32       		.byte	0x32
 3061 016d C6000000 		.4byte	0xc6
 3062 0171 0E       		.byte	0xe
 3063 0172 0A       		.uleb128 0xa
 3064 0173 A7050000 		.4byte	.LASF30
 3065 0177 05       		.byte	0x5
 3066 0178 33       		.byte	0x33
 3067 0179 C6000000 		.4byte	0xc6
 3068 017d 10       		.byte	0x10
 3069 017e 0A       		.uleb128 0xa
 3070 017f B6040000 		.4byte	.LASF31
 3071 0183 05       		.byte	0x5
 3072 0184 34       		.byte	0x34
 3073 0185 C6000000 		.4byte	0xc6
 3074 0189 12       		.byte	0x12
 3075 018a 0A       		.uleb128 0xa
 3076 018b 3F050000 		.4byte	.LASF32
 3077 018f 05       		.byte	0x5
 3078 0190 35       		.byte	0x35
 3079 0191 C6000000 		.4byte	0xc6
 3080 0195 14       		.byte	0x14
 3081 0196 0A       		.uleb128 0xa
 3082 0197 80050000 		.4byte	.LASF33
 3083 019b 05       		.byte	0x5
 3084 019c 36       		.byte	0x36
 3085 019d C6000000 		.4byte	0xc6
 3086 01a1 16       		.byte	0x16
 3087 01a2 0A       		.uleb128 0xa
 3088 01a3 92060000 		.4byte	.LASF34
 3089 01a7 05       		.byte	0x5
 3090 01a8 37       		.byte	0x37
 3091 01a9 C6000000 		.4byte	0xc6
 3092 01ad 18       		.byte	0x18
 3093 01ae 0A       		.uleb128 0xa
 3094 01af AF050000 		.4byte	.LASF35
 3095 01b3 05       		.byte	0x5
 3096 01b4 38       		.byte	0x38
 3097 01b5 C6000000 		.4byte	0xc6
 3098 01b9 1A       		.byte	0x1a
 3099 01ba 0A       		.uleb128 0xa
 3100 01bb 1F000000 		.4byte	.LASF36
 3101 01bf 05       		.byte	0x5
 3102 01c0 39       		.byte	0x39
 3103 01c1 C6000000 		.4byte	0xc6
 3104 01c5 1C       		.byte	0x1c
 3105 01c6 0A       		.uleb128 0xa
 3106 01c7 87030000 		.4byte	.LASF37
 3107 01cb 05       		.byte	0x5
 3108 01cc 3A       		.byte	0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 70


 3109 01cd C6000000 		.4byte	0xc6
 3110 01d1 1E       		.byte	0x1e
 3111 01d2 00       		.byte	0
 3112 01d3 0B       		.uleb128 0xb
 3113 01d4 0E000000 		.4byte	.LASF41
 3114 01d8 01       		.byte	0x1
 3115 01d9 2C000000 		.4byte	0x2c
 3116 01dd 06       		.byte	0x6
 3117 01de 0D       		.byte	0xd
 3118 01df FB010000 		.4byte	0x1fb
 3119 01e3 0C       		.uleb128 0xc
 3120 01e4 557000   		.ascii	"Up\000"
 3121 01e7 00       		.byte	0
 3122 01e8 0D       		.uleb128 0xd
 3123 01e9 C4070000 		.4byte	.LASF38
 3124 01ed 01       		.byte	0x1
 3125 01ee 0D       		.uleb128 0xd
 3126 01ef 48050000 		.4byte	.LASF39
 3127 01f3 02       		.byte	0x2
 3128 01f4 0D       		.uleb128 0xd
 3129 01f5 1F070000 		.4byte	.LASF40
 3130 01f9 03       		.byte	0x3
 3131 01fa 00       		.byte	0
 3132 01fb 0B       		.uleb128 0xb
 3133 01fc 7D060000 		.4byte	.LASF42
 3134 0200 01       		.byte	0x1
 3135 0201 2C000000 		.4byte	0x2c
 3136 0205 06       		.byte	0x6
 3137 0206 0E       		.byte	0xe
 3138 0207 30020000 		.4byte	0x230
 3139 020b 0D       		.uleb128 0xd
 3140 020c 15070000 		.4byte	.LASF43
 3141 0210 00       		.byte	0
 3142 0211 0D       		.uleb128 0xd
 3143 0212 97050000 		.4byte	.LASF44
 3144 0216 01       		.byte	0x1
 3145 0217 0D       		.uleb128 0xd
 3146 0218 64080000 		.4byte	.LASF45
 3147 021c 02       		.byte	0x2
 3148 021d 0D       		.uleb128 0xd
 3149 021e D0010000 		.4byte	.LASF46
 3150 0222 03       		.byte	0x3
 3151 0223 0D       		.uleb128 0xd
 3152 0224 CB020000 		.4byte	.LASF47
 3153 0228 04       		.byte	0x4
 3154 0229 0D       		.uleb128 0xd
 3155 022a 05020000 		.4byte	.LASF48
 3156 022e 05       		.byte	0x5
 3157 022f 00       		.byte	0
 3158 0230 09       		.uleb128 0x9
 3159 0231 68020000 		.4byte	.LASF50
 3160 0235 14       		.byte	0x14
 3161 0236 06       		.byte	0x6
 3162 0237 10       		.byte	0x10
 3163 0238 79020000 		.4byte	0x279
 3164 023c 0A       		.uleb128 0xa
 3165 023d E2000000 		.4byte	.LASF51
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 71


 3166 0241 06       		.byte	0x6
 3167 0242 11       		.byte	0x11
 3168 0243 FB010000 		.4byte	0x1fb
 3169 0247 00       		.byte	0
 3170 0248 0A       		.uleb128 0xa
 3171 0249 E7080000 		.4byte	.LASF52
 3172 024d 06       		.byte	0x6
 3173 024e 12       		.byte	0x12
 3174 024f 68000000 		.4byte	0x68
 3175 0253 04       		.byte	0x4
 3176 0254 0A       		.uleb128 0xa
 3177 0255 F8080000 		.4byte	.LASF53
 3178 0259 06       		.byte	0x6
 3179 025a 13       		.byte	0x13
 3180 025b 68000000 		.4byte	0x68
 3181 025f 08       		.byte	0x8
 3182 0260 0A       		.uleb128 0xa
 3183 0261 F4010000 		.4byte	.LASF54
 3184 0265 06       		.byte	0x6
 3185 0266 14       		.byte	0x14
 3186 0267 68000000 		.4byte	0x68
 3187 026b 0C       		.byte	0xc
 3188 026c 0A       		.uleb128 0xa
 3189 026d BC010000 		.4byte	.LASF55
 3190 0271 06       		.byte	0x6
 3191 0272 15       		.byte	0x15
 3192 0273 D3010000 		.4byte	0x1d3
 3193 0277 10       		.byte	0x10
 3194 0278 00       		.byte	0
 3195 0279 03       		.uleb128 0x3
 3196 027a 68020000 		.4byte	.LASF50
 3197 027e 06       		.byte	0x6
 3198 027f 16       		.byte	0x16
 3199 0280 30020000 		.4byte	0x230
 3200 0284 0B       		.uleb128 0xb
 3201 0285 46000000 		.4byte	.LASF56
 3202 0289 01       		.byte	0x1
 3203 028a 2C000000 		.4byte	0x2c
 3204 028e 01       		.byte	0x1
 3205 028f 18       		.byte	0x18
 3206 0290 D7020000 		.4byte	0x2d7
 3207 0294 0D       		.uleb128 0xd
 3208 0295 43040000 		.4byte	.LASF57
 3209 0299 00       		.byte	0
 3210 029a 0D       		.uleb128 0xd
 3211 029b BA030000 		.4byte	.LASF58
 3212 029f 01       		.byte	0x1
 3213 02a0 0D       		.uleb128 0xd
 3214 02a1 EF080000 		.4byte	.LASF59
 3215 02a5 02       		.byte	0x2
 3216 02a6 0D       		.uleb128 0xd
 3217 02a7 05070000 		.4byte	.LASF60
 3218 02ab 03       		.byte	0x3
 3219 02ac 0D       		.uleb128 0xd
 3220 02ad 34030000 		.4byte	.LASF61
 3221 02b1 04       		.byte	0x4
 3222 02b2 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 72


 3223 02b3 7F020000 		.4byte	.LASF62
 3224 02b7 05       		.byte	0x5
 3225 02b8 0D       		.uleb128 0xd
 3226 02b9 1D060000 		.4byte	.LASF63
 3227 02bd 06       		.byte	0x6
 3228 02be 0D       		.uleb128 0xd
 3229 02bf 37040000 		.4byte	.LASF64
 3230 02c3 07       		.byte	0x7
 3231 02c4 0D       		.uleb128 0xd
 3232 02c5 C4030000 		.4byte	.LASF65
 3233 02c9 08       		.byte	0x8
 3234 02ca 0D       		.uleb128 0xd
 3235 02cb DE020000 		.4byte	.LASF66
 3236 02cf 09       		.byte	0x9
 3237 02d0 0D       		.uleb128 0xd
 3238 02d1 8E070000 		.4byte	.LASF67
 3239 02d5 0A       		.byte	0xa
 3240 02d6 00       		.byte	0
 3241 02d7 0E       		.uleb128 0xe
 3242 02d8 9A040000 		.4byte	.LASF78
 3243 02dc 01       		.byte	0x1
 3244 02dd 55       		.byte	0x55
 3245 02de 00000000 		.4byte	.LFB64
 3246 02e2 EC000000 		.4byte	.LFE64-.LFB64
 3247 02e6 01       		.uleb128 0x1
 3248 02e7 9C       		.byte	0x9c
 3249 02e8 05030000 		.4byte	0x305
 3250 02ec 0F       		.uleb128 0xf
 3251 02ed 50000000 		.4byte	.LBB2
 3252 02f1 62000000 		.4byte	.LBE2-.LBB2
 3253 02f5 10       		.uleb128 0x10
 3254 02f6 69070000 		.4byte	.LASF74
 3255 02fa 01       		.byte	0x1
 3256 02fb 62       		.byte	0x62
 3257 02fc D2000000 		.4byte	0xd2
 3258 0300 02       		.uleb128 0x2
 3259 0301 91       		.byte	0x91
 3260 0302 6C       		.sleb128 -20
 3261 0303 00       		.byte	0
 3262 0304 00       		.byte	0
 3263 0305 11       		.uleb128 0x11
 3264 0306 31020000 		.4byte	.LASF68
 3265 030a 01       		.byte	0x1
 3266 030b 6D       		.byte	0x6d
 3267 030c 00000000 		.4byte	.LFB65
 3268 0310 18000000 		.4byte	.LFE65-.LFB65
 3269 0314 01       		.uleb128 0x1
 3270 0315 9C       		.byte	0x9c
 3271 0316 11       		.uleb128 0x11
 3272 0317 D6000000 		.4byte	.LASF69
 3273 031b 01       		.byte	0x1
 3274 031c 73       		.byte	0x73
 3275 031d 00000000 		.4byte	.LFB66
 3276 0321 18000000 		.4byte	.LFE66-.LFB66
 3277 0325 01       		.uleb128 0x1
 3278 0326 9C       		.byte	0x9c
 3279 0327 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 73


 3280 0328 4C020000 		.4byte	.LASF70
 3281 032c 01       		.byte	0x1
 3282 032d 79       		.byte	0x79
 3283 032e 00000000 		.4byte	.LFB67
 3284 0332 18000000 		.4byte	.LFE67-.LFB67
 3285 0336 01       		.uleb128 0x1
 3286 0337 9C       		.byte	0x9c
 3287 0338 11       		.uleb128 0x11
 3288 0339 AE070000 		.4byte	.LASF71
 3289 033d 01       		.byte	0x1
 3290 033e 7F       		.byte	0x7f
 3291 033f 00000000 		.4byte	.LFB68
 3292 0343 18000000 		.4byte	.LFE68-.LFB68
 3293 0347 01       		.uleb128 0x1
 3294 0348 9C       		.byte	0x9c
 3295 0349 12       		.uleb128 0x12
 3296 034a B4080000 		.4byte	.LASF72
 3297 034e 01       		.byte	0x1
 3298 034f 85       		.byte	0x85
 3299 0350 00000000 		.4byte	.LFB69
 3300 0354 70000000 		.4byte	.LFE69-.LFB69
 3301 0358 01       		.uleb128 0x1
 3302 0359 9C       		.byte	0x9c
 3303 035a 13       		.uleb128 0x13
 3304 035b 20030000 		.4byte	.LASF73
 3305 035f 01       		.byte	0x1
 3306 0360 99       		.byte	0x99
 3307 0361 68000000 		.4byte	0x68
 3308 0365 00000000 		.4byte	.LFB70
 3309 0369 04010000 		.4byte	.LFE70-.LFB70
 3310 036d 01       		.uleb128 0x1
 3311 036e 9C       		.byte	0x9c
 3312 036f 14       		.uleb128 0x14
 3313 0370 D8080000 		.4byte	.LASF161
 3314 0374 01       		.byte	0x1
 3315 0375 C0       		.byte	0xc0
 3316 0376 C6000000 		.4byte	0xc6
 3317 037a 00000000 		.4byte	.LFB71
 3318 037e 54000000 		.4byte	.LFE71-.LFB71
 3319 0382 01       		.uleb128 0x1
 3320 0383 9C       		.byte	0x9c
 3321 0384 B3030000 		.4byte	0x3b3
 3322 0388 15       		.uleb128 0x15
 3323 0389 7C030000 		.4byte	.LASF162
 3324 038d 01       		.byte	0x1
 3325 038e C0       		.byte	0xc0
 3326 038f A2000000 		.4byte	0xa2
 3327 0393 02       		.uleb128 0x2
 3328 0394 91       		.byte	0x91
 3329 0395 66       		.sleb128 -26
 3330 0396 16       		.uleb128 0x16
 3331 0397 63707300 		.ascii	"cps\000"
 3332 039b 01       		.byte	0x1
 3333 039c C1       		.byte	0xc1
 3334 039d D2000000 		.4byte	0xd2
 3335 03a1 02       		.uleb128 0x2
 3336 03a2 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 74


 3337 03a3 6C       		.sleb128 -20
 3338 03a4 16       		.uleb128 0x16
 3339 03a5 72706D00 		.ascii	"rpm\000"
 3340 03a9 01       		.byte	0x1
 3341 03aa C2       		.byte	0xc2
 3342 03ab C6000000 		.4byte	0xc6
 3343 03af 02       		.uleb128 0x2
 3344 03b0 91       		.byte	0x91
 3345 03b1 6A       		.sleb128 -22
 3346 03b2 00       		.byte	0
 3347 03b3 17       		.uleb128 0x17
 3348 03b4 C1080000 		.4byte	.LASF83
 3349 03b8 01       		.byte	0x1
 3350 03b9 CA       		.byte	0xca
 3351 03ba 00000000 		.4byte	.LFB72
 3352 03be 34000000 		.4byte	.LFE72-.LFB72
 3353 03c2 01       		.uleb128 0x1
 3354 03c3 9C       		.byte	0x9c
 3355 03c4 18       		.uleb128 0x18
 3356 03c5 0D050000 		.4byte	.LASF75
 3357 03c9 01       		.byte	0x1
 3358 03ca DB       		.byte	0xdb
 3359 03cb 84020000 		.4byte	0x284
 3360 03cf 00000000 		.4byte	.LFB73
 3361 03d3 84000000 		.4byte	.LFE73-.LFB73
 3362 03d7 01       		.uleb128 0x1
 3363 03d8 9C       		.byte	0x9c
 3364 03d9 19       		.uleb128 0x19
 3365 03da 44070000 		.4byte	.LASF76
 3366 03de 01       		.byte	0x1
 3367 03df 0101     		.2byte	0x101
 3368 03e1 84020000 		.4byte	0x284
 3369 03e5 00000000 		.4byte	.LFB74
 3370 03e9 7C000000 		.4byte	.LFE74-.LFB74
 3371 03ed 01       		.uleb128 0x1
 3372 03ee 9C       		.byte	0x9c
 3373 03ef 19       		.uleb128 0x19
 3374 03f0 B2020000 		.4byte	.LASF77
 3375 03f4 01       		.byte	0x1
 3376 03f5 1F01     		.2byte	0x11f
 3377 03f7 84020000 		.4byte	0x284
 3378 03fb 00000000 		.4byte	.LFB75
 3379 03ff 84000000 		.4byte	.LFE75-.LFB75
 3380 0403 01       		.uleb128 0x1
 3381 0404 9C       		.byte	0x9c
 3382 0405 1A       		.uleb128 0x1a
 3383 0406 21080000 		.4byte	.LASF79
 3384 040a 01       		.byte	0x1
 3385 040b 4501     		.2byte	0x145
 3386 040d 84020000 		.4byte	0x284
 3387 0411 00000000 		.4byte	.LFB76
 3388 0415 EC060000 		.4byte	.LFE76-.LFB76
 3389 0419 01       		.uleb128 0x1
 3390 041a 9C       		.byte	0x9c
 3391 041b 57040000 		.4byte	0x457
 3392 041f 1B       		.uleb128 0x1b
 3393 0420 DF030000 		.4byte	.LASF80
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 75


 3394 0424 01       		.byte	0x1
 3395 0425 4601     		.2byte	0x146
 3396 0427 D2000000 		.4byte	0xd2
 3397 042b 02       		.uleb128 0x2
 3398 042c 91       		.byte	0x91
 3399 042d 6C       		.sleb128 -20
 3400 042e 1B       		.uleb128 0x1b
 3401 042f DE060000 		.4byte	.LASF81
 3402 0433 01       		.byte	0x1
 3403 0434 5501     		.2byte	0x155
 3404 0436 FB010000 		.4byte	0x1fb
 3405 043a 02       		.uleb128 0x2
 3406 043b 91       		.byte	0x91
 3407 043c 6B       		.sleb128 -21
 3408 043d 0F       		.uleb128 0xf
 3409 043e FC030000 		.4byte	.LBB3
 3410 0442 24000000 		.4byte	.LBE3-.LBB3
 3411 0446 1B       		.uleb128 0x1b
 3412 0447 83010000 		.4byte	.LASF82
 3413 044b 01       		.byte	0x1
 3414 044c 3902     		.2byte	0x239
 3415 044e 68000000 		.4byte	0x68
 3416 0452 02       		.uleb128 0x2
 3417 0453 91       		.byte	0x91
 3418 0454 64       		.sleb128 -28
 3419 0455 00       		.byte	0
 3420 0456 00       		.byte	0
 3421 0457 1C       		.uleb128 0x1c
 3422 0458 BE040000 		.4byte	.LASF84
 3423 045c 01       		.byte	0x1
 3424 045d B502     		.2byte	0x2b5
 3425 045f 00000000 		.4byte	.LFB77
 3426 0463 68000000 		.4byte	.LFE77-.LFB77
 3427 0467 01       		.uleb128 0x1
 3428 0468 9C       		.byte	0x9c
 3429 0469 1D       		.uleb128 0x1d
 3430 046a 25060000 		.4byte	.LASF85
 3431 046e 01       		.byte	0x1
 3432 046f C002     		.2byte	0x2c0
 3433 0471 79020000 		.4byte	0x279
 3434 0475 00000000 		.4byte	.LFB78
 3435 0479 6C000000 		.4byte	.LFE78-.LFB78
 3436 047d 01       		.uleb128 0x1
 3437 047e 9C       		.byte	0x9c
 3438 047f 93040000 		.4byte	0x493
 3439 0483 1B       		.uleb128 0x1b
 3440 0484 6C030000 		.4byte	.LASF86
 3441 0488 01       		.byte	0x1
 3442 0489 C102     		.2byte	0x2c1
 3443 048b 79020000 		.4byte	0x279
 3444 048f 02       		.uleb128 0x2
 3445 0490 91       		.byte	0x91
 3446 0491 5C       		.sleb128 -36
 3447 0492 00       		.byte	0
 3448 0493 1E       		.uleb128 0x1e
 3449 0494 1D040000 		.4byte	.LASF163
 3450 0498 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 76


 3451 0499 C902     		.2byte	0x2c9
 3452 049b 00000000 		.4byte	.LFB79
 3453 049f 3C010000 		.4byte	.LFE79-.LFB79
 3454 04a3 01       		.uleb128 0x1
 3455 04a4 9C       		.byte	0x9c
 3456 04a5 D7040000 		.4byte	0x4d7
 3457 04a9 1B       		.uleb128 0x1b
 3458 04aa AD080000 		.4byte	.LASF87
 3459 04ae 01       		.byte	0x1
 3460 04af CA02     		.2byte	0x2ca
 3461 04b1 A2000000 		.4byte	0xa2
 3462 04b5 02       		.uleb128 0x2
 3463 04b6 91       		.byte	0x91
 3464 04b7 72       		.sleb128 -14
 3465 04b8 1B       		.uleb128 0x1b
 3466 04b9 9A020000 		.4byte	.LASF88
 3467 04bd 01       		.byte	0x1
 3468 04be CB02     		.2byte	0x2cb
 3469 04c0 A2000000 		.4byte	0xa2
 3470 04c4 02       		.uleb128 0x2
 3471 04c5 91       		.byte	0x91
 3472 04c6 70       		.sleb128 -16
 3473 04c7 1B       		.uleb128 0x1b
 3474 04c8 DE040000 		.4byte	.LASF89
 3475 04cc 01       		.byte	0x1
 3476 04cd CF02     		.2byte	0x2cf
 3477 04cf 68000000 		.4byte	0x68
 3478 04d3 02       		.uleb128 0x2
 3479 04d4 91       		.byte	0x91
 3480 04d5 74       		.sleb128 -12
 3481 04d6 00       		.byte	0
 3482 04d7 1F       		.uleb128 0x1f
 3483 04d8 84040000 		.4byte	.LASF90
 3484 04dc 01       		.byte	0x1
 3485 04dd FF02     		.2byte	0x2ff
 3486 04df 00000000 		.4byte	.LFB80
 3487 04e3 CC000000 		.4byte	.LFE80-.LFB80
 3488 04e7 01       		.uleb128 0x1
 3489 04e8 9C       		.byte	0x9c
 3490 04e9 10       		.uleb128 0x10
 3491 04ea A1020000 		.4byte	.LASF91
 3492 04ee 01       		.byte	0x1
 3493 04ef 21       		.byte	0x21
 3494 04f0 E5000000 		.4byte	0xe5
 3495 04f4 05       		.uleb128 0x5
 3496 04f5 03       		.byte	0x3
 3497 04f6 14000000 		.4byte	instructionIndex
 3498 04fa 10       		.uleb128 0x10
 3499 04fb 00090000 		.4byte	.LASF92
 3500 04ff 01       		.byte	0x1
 3501 0500 35       		.byte	0x35
 3502 0501 E0000000 		.4byte	0xe0
 3503 0505 05       		.uleb128 0x5
 3504 0506 03       		.byte	0x3
 3505 0507 36000000 		.4byte	turnStartedFlag
 3506 050b 10       		.uleb128 0x10
 3507 050c 43080000 		.4byte	.LASF93
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 77


 3508 0510 01       		.byte	0x1
 3509 0511 36       		.byte	0x36
 3510 0512 E0000000 		.4byte	0xe0
 3511 0516 05       		.uleb128 0x5
 3512 0517 03       		.byte	0x3
 3513 0518 37000000 		.4byte	turnFinishedFlag
 3514 051c 10       		.uleb128 0x10
 3515 051d 28000000 		.4byte	.LASF94
 3516 0521 01       		.byte	0x1
 3517 0522 38       		.byte	0x38
 3518 0523 E0000000 		.4byte	0xe0
 3519 0527 05       		.uleb128 0x5
 3520 0528 03       		.byte	0x3
 3521 0529 38000000 		.4byte	forwardUntilTargetStartedFlag
 3522 052d 10       		.uleb128 0x10
 3523 052e 4F060000 		.4byte	.LASF95
 3524 0532 01       		.byte	0x1
 3525 0533 39       		.byte	0x39
 3526 0534 E0000000 		.4byte	0xe0
 3527 0538 05       		.uleb128 0x5
 3528 0539 03       		.byte	0x3
 3529 053a 39000000 		.4byte	uTurnStartedFlag
 3530 053e 10       		.uleb128 0x10
 3531 053f 4D050000 		.4byte	.LASF96
 3532 0543 01       		.byte	0x1
 3533 0544 3A       		.byte	0x3a
 3534 0545 E0000000 		.4byte	0xe0
 3535 0549 05       		.uleb128 0x5
 3536 054a 03       		.byte	0x3
 3537 054b 3A000000 		.4byte	uTurnFinishedFlag
 3538 054f 10       		.uleb128 0x10
 3539 0550 CF060000 		.4byte	.LASF97
 3540 0554 01       		.byte	0x1
 3541 0555 3C       		.byte	0x3c
 3542 0556 E0000000 		.4byte	0xe0
 3543 055a 05       		.uleb128 0x5
 3544 055b 03       		.byte	0x3
 3545 055c 3B000000 		.4byte	leftStatusFlag
 3546 0560 10       		.uleb128 0x10
 3547 0561 58020000 		.4byte	.LASF98
 3548 0565 01       		.byte	0x1
 3549 0566 3D       		.byte	0x3d
 3550 0567 E0000000 		.4byte	0xe0
 3551 056b 05       		.uleb128 0x5
 3552 056c 03       		.byte	0x3
 3553 056d 3C000000 		.4byte	rightStatusFlag
 3554 0571 10       		.uleb128 0x10
 3555 0572 B7050000 		.4byte	.LASF99
 3556 0576 01       		.byte	0x1
 3557 0577 3F       		.byte	0x3f
 3558 0578 E0000000 		.4byte	0xe0
 3559 057c 05       		.uleb128 0x5
 3560 057d 03       		.byte	0x3
 3561 057e 3D000000 		.4byte	spinCourseCorrectionStarted
 3562 0582 10       		.uleb128 0x10
 3563 0583 02030000 		.4byte	.LASF100
 3564 0587 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 78


 3565 0588 40       		.byte	0x40
 3566 0589 E0000000 		.4byte	0xe0
 3567 058d 05       		.uleb128 0x5
 3568 058e 03       		.byte	0x3
 3569 058f 3E000000 		.4byte	currentIgnoreL
 3570 0593 10       		.uleb128 0x10
 3571 0594 25030000 		.4byte	.LASF101
 3572 0598 01       		.byte	0x1
 3573 0599 41       		.byte	0x41
 3574 059a E0000000 		.4byte	0xe0
 3575 059e 05       		.uleb128 0x5
 3576 059f 03       		.byte	0x3
 3577 05a0 3F000000 		.4byte	currentIgnoreR
 3578 05a4 10       		.uleb128 0x10
 3579 05a5 9E080000 		.4byte	.LASF102
 3580 05a9 01       		.byte	0x1
 3581 05aa 45       		.byte	0x45
 3582 05ab E0000000 		.4byte	0xe0
 3583 05af 05       		.uleb128 0x5
 3584 05b0 03       		.byte	0x3
 3585 05b1 40000000 		.4byte	totalLineCount
 3586 05b5 10       		.uleb128 0x10
 3587 05b6 66000000 		.4byte	.LASF103
 3588 05ba 01       		.byte	0x1
 3589 05bb 46       		.byte	0x46
 3590 05bc E0000000 		.4byte	0xe0
 3591 05c0 05       		.uleb128 0x5
 3592 05c1 03       		.byte	0x3
 3593 05c2 41000000 		.4byte	lineCount
 3594 05c6 10       		.uleb128 0x10
 3595 05c7 E9010000 		.4byte	.LASF104
 3596 05cb 01       		.byte	0x1
 3597 05cc 47       		.byte	0x47
 3598 05cd E0000000 		.4byte	0xe0
 3599 05d1 05       		.uleb128 0x5
 3600 05d2 03       		.byte	0x3
 3601 05d3 42000000 		.4byte	onLineFlag
 3602 05d7 10       		.uleb128 0x10
 3603 05d8 77040000 		.4byte	.LASF105
 3604 05dc 01       		.byte	0x1
 3605 05dd 49       		.byte	0x49
 3606 05de E0000000 		.4byte	0xe0
 3607 05e2 05       		.uleb128 0x5
 3608 05e3 03       		.byte	0x3
 3609 05e4 43000000 		.4byte	tooEarlyFlag
 3610 05e8 10       		.uleb128 0x10
 3611 05e9 02040000 		.4byte	.LASF106
 3612 05ed 01       		.byte	0x1
 3613 05ee 4A       		.byte	0x4a
 3614 05ef E0000000 		.4byte	0xe0
 3615 05f3 05       		.uleb128 0x5
 3616 05f4 03       		.byte	0x3
 3617 05f5 44000000 		.4byte	tooLateFlag
 3618 05f9 10       		.uleb128 0x10
 3619 05fa 5E040000 		.4byte	.LASF107
 3620 05fe 01       		.byte	0x1
 3621 05ff 4C       		.byte	0x4c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 79


 3622 0600 E0000000 		.4byte	0xe0
 3623 0604 05       		.uleb128 0x5
 3624 0605 03       		.byte	0x3
 3625 0606 45000000 		.4byte	dontOverwriteRightIgnore
 3626 060a 10       		.uleb128 0x10
 3627 060b 94030000 		.4byte	.LASF108
 3628 060f 01       		.byte	0x1
 3629 0610 4D       		.byte	0x4d
 3630 0611 E0000000 		.4byte	0xe0
 3631 0615 05       		.uleb128 0x5
 3632 0616 03       		.byte	0x3
 3633 0617 46000000 		.4byte	dontOverwriteLeftIgnore
 3634 061b 1B       		.uleb128 0x1b
 3635 061c 45030000 		.4byte	.LASF109
 3636 0620 01       		.byte	0x1
 3637 0621 4201     		.2byte	0x142
 3638 0623 E0000000 		.4byte	0xe0
 3639 0627 05       		.uleb128 0x5
 3640 0628 03       		.byte	0x3
 3641 0629 57000000 		.4byte	forwardAfterTurnLIgnore
 3642 062d 1B       		.uleb128 0x1b
 3643 062e 19090000 		.4byte	.LASF110
 3644 0632 01       		.byte	0x1
 3645 0633 4301     		.2byte	0x143
 3646 0635 E0000000 		.4byte	0xe0
 3647 0639 05       		.uleb128 0x5
 3648 063a 03       		.byte	0x3
 3649 063b 58000000 		.4byte	forwardAfterTurnRIgnore
 3650 063f 20       		.uleb128 0x20
 3651 0640 8D020000 		.4byte	.LASF111
 3652 0644 07       		.byte	0x7
 3653 0645 1207     		.2byte	0x712
 3654 0647 4B060000 		.4byte	0x64b
 3655 064b 06       		.uleb128 0x6
 3656 064c 8B000000 		.4byte	0x8b
 3657 0650 21       		.uleb128 0x21
 3658 0651 747300   		.ascii	"ts\000"
 3659 0654 05       		.byte	0x5
 3660 0655 10       		.byte	0x10
 3661 0656 96000000 		.4byte	0x96
 3662 065a 05       		.uleb128 0x5
 3663 065b 03       		.byte	0x3
 3664 065c 00000000 		.4byte	ts
 3665 0660 22       		.uleb128 0x22
 3666 0661 E9030000 		.4byte	.LASF112
 3667 0665 05       		.byte	0x5
 3668 0666 11       		.byte	0x11
 3669 0667 A2000000 		.4byte	0xa2
 3670 066b 05       		.uleb128 0x5
 3671 066c 03       		.byte	0x3
 3672 066d 00000000 		.4byte	ts_enc
 3673 0671 22       		.uleb128 0x22
 3674 0672 45060000 		.4byte	.LASF113
 3675 0676 05       		.byte	0x5
 3676 0677 12       		.byte	0x12
 3677 0678 A2000000 		.4byte	0xa2
 3678 067c 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 80


 3679 067d 03       		.byte	0x3
 3680 067e 00000000 		.4byte	ts_update
 3681 0682 22       		.uleb128 0x22
 3682 0683 70000000 		.4byte	.LASF114
 3683 0687 05       		.byte	0x5
 3684 0688 13       		.byte	0x13
 3685 0689 A2000000 		.4byte	0xa2
 3686 068d 05       		.uleb128 0x5
 3687 068e 03       		.byte	0x3
 3688 068f 00000000 		.4byte	ts_speed
 3689 0693 22       		.uleb128 0x22
 3690 0694 ED040000 		.4byte	.LASF115
 3691 0698 05       		.byte	0x5
 3692 0699 14       		.byte	0x14
 3693 069a A2000000 		.4byte	0xa2
 3694 069e 05       		.uleb128 0x5
 3695 069f 03       		.byte	0x3
 3696 06a0 00000000 		.4byte	ts_display
 3697 06a4 22       		.uleb128 0x22
 3698 06a5 25020000 		.4byte	.LASF116
 3699 06a9 05       		.byte	0x5
 3700 06aa 16       		.byte	0x16
 3701 06ab 96000000 		.4byte	0x96
 3702 06af 05       		.uleb128 0x5
 3703 06b0 03       		.byte	0x3
 3704 06b1 00000000 		.4byte	flag_ts_enc
 3705 06b5 22       		.uleb128 0x22
 3706 06b6 D0070000 		.4byte	.LASF117
 3707 06ba 05       		.byte	0x5
 3708 06bb 17       		.byte	0x17
 3709 06bc 96000000 		.4byte	0x96
 3710 06c0 05       		.uleb128 0x5
 3711 06c1 03       		.byte	0x3
 3712 06c2 00000000 		.4byte	flag_ts_update
 3713 06c6 22       		.uleb128 0x22
 3714 06c7 31050000 		.4byte	.LASF118
 3715 06cb 05       		.byte	0x5
 3716 06cc 18       		.byte	0x18
 3717 06cd 96000000 		.4byte	0x96
 3718 06d1 05       		.uleb128 0x5
 3719 06d2 03       		.byte	0x3
 3720 06d3 00000000 		.4byte	flag_ts_speed
 3721 06d7 22       		.uleb128 0x22
 3722 06d8 59070000 		.4byte	.LASF119
 3723 06dc 05       		.byte	0x5
 3724 06dd 19       		.byte	0x19
 3725 06de 96000000 		.4byte	0x96
 3726 06e2 05       		.uleb128 0x5
 3727 06e3 03       		.byte	0x3
 3728 06e4 00000000 		.4byte	flag_ts_display
 3729 06e8 22       		.uleb128 0x22
 3730 06e9 5D030000 		.4byte	.LASF120
 3731 06ed 05       		.byte	0x5
 3732 06ee 1B       		.byte	0x1b
 3733 06ef 96000000 		.4byte	0x96
 3734 06f3 05       		.uleb128 0x5
 3735 06f4 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 81


 3736 06f5 00000000 		.4byte	flag_rx
 3737 06f9 22       		.uleb128 0x22
 3738 06fa 25050000 		.4byte	.LASF121
 3739 06fe 05       		.byte	0x5
 3740 06ff 1C       		.byte	0x1c
 3741 0700 96000000 		.4byte	0x96
 3742 0704 05       		.uleb128 0x5
 3743 0705 03       		.byte	0x3
 3744 0706 00000000 		.4byte	flag_packet
 3745 070a 22       		.uleb128 0x22
 3746 070b 3D020000 		.4byte	.LASF122
 3747 070f 05       		.byte	0x5
 3748 0710 1D       		.byte	0x1d
 3749 0711 96000000 		.4byte	0x96
 3750 0715 05       		.uleb128 0x5
 3751 0716 03       		.byte	0x3
 3752 0717 00000000 		.4byte	flag_KB_string
 3753 071b 22       		.uleb128 0x22
 3754 071c 11030000 		.4byte	.LASF123
 3755 0720 05       		.byte	0x5
 3756 0721 1F       		.byte	0x1f
 3757 0722 96000000 		.4byte	0x96
 3758 0726 05       		.uleb128 0x5
 3759 0727 03       		.byte	0x3
 3760 0728 00000000 		.4byte	dataready_flag
 3761 072c 22       		.uleb128 0x22
 3762 072d D3050000 		.4byte	.LASF124
 3763 0731 05       		.byte	0x5
 3764 0732 21       		.byte	0x21
 3765 0733 96000000 		.4byte	0x96
 3766 0737 05       		.uleb128 0x5
 3767 0738 03       		.byte	0x3
 3768 0739 00000000 		.4byte	flag_rf_transmission_active
 3769 073d 07       		.uleb128 0x7
 3770 073e 84000000 		.4byte	0x84
 3771 0742 4D070000 		.4byte	0x74d
 3772 0746 08       		.uleb128 0x8
 3773 0747 7D000000 		.4byte	0x7d
 3774 074b 3F       		.byte	0x3f
 3775 074c 00       		.byte	0
 3776 074d 22       		.uleb128 0x22
 3777 074e DF070000 		.4byte	.LASF125
 3778 0752 05       		.byte	0x5
 3779 0753 24       		.byte	0x24
 3780 0754 3D070000 		.4byte	0x73d
 3781 0758 05       		.uleb128 0x5
 3782 0759 03       		.byte	0x3
 3783 075a 00000000 		.4byte	displaystring
 3784 075e 22       		.uleb128 0x22
 3785 075f 82030000 		.4byte	.LASF126
 3786 0763 05       		.byte	0x5
 3787 0764 25       		.byte	0x25
 3788 0765 3D070000 		.4byte	0x73d
 3789 0769 05       		.uleb128 0x5
 3790 076a 03       		.byte	0x3
 3791 076b 00000000 		.4byte	line
 3792 076f 22       		.uleb128 0x22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 82


 3793 0770 9F010000 		.4byte	.LASF127
 3794 0774 05       		.byte	0x5
 3795 0775 25       		.byte	0x25
 3796 0776 3D070000 		.4byte	0x73d
 3797 077a 05       		.uleb128 0x5
 3798 077b 03       		.byte	0x3
 3799 077c 00000000 		.4byte	entry
 3800 0780 07       		.uleb128 0x7
 3801 0781 96000000 		.4byte	0x96
 3802 0785 90070000 		.4byte	0x790
 3803 0789 08       		.uleb128 0x8
 3804 078a 7D000000 		.4byte	0x7d
 3805 078e 3F       		.byte	0x3f
 3806 078f 00       		.byte	0
 3807 0790 22       		.uleb128 0x22
 3808 0791 8D050000 		.4byte	.LASF128
 3809 0795 05       		.byte	0x5
 3810 0796 26       		.byte	0x26
 3811 0797 80070000 		.4byte	0x780
 3812 079b 05       		.uleb128 0x5
 3813 079c 03       		.byte	0x3
 3814 079d 00000000 		.4byte	usbBuffer
 3815 07a1 22       		.uleb128 0x22
 3816 07a2 73050000 		.4byte	.LASF129
 3817 07a6 05       		.byte	0x5
 3818 07a7 3C       		.byte	0x3c
 3819 07a8 FA000000 		.4byte	0xfa
 3820 07ac 05       		.uleb128 0x5
 3821 07ad 03       		.byte	0x3
 3822 07ae 00000000 		.4byte	system_state
 3823 07b2 07       		.uleb128 0x7
 3824 07b3 68000000 		.4byte	0x68
 3825 07b7 C8070000 		.4byte	0x7c8
 3826 07bb 08       		.uleb128 0x8
 3827 07bc 7D000000 		.4byte	0x7d
 3828 07c0 0E       		.byte	0xe
 3829 07c1 08       		.uleb128 0x8
 3830 07c2 7D000000 		.4byte	0x7d
 3831 07c6 12       		.byte	0x12
 3832 07c7 00       		.byte	0
 3833 07c8 23       		.uleb128 0x23
 3834 07c9 6D617000 		.ascii	"map\000"
 3835 07cd 08       		.byte	0x8
 3836 07ce 04       		.byte	0x4
 3837 07cf B2070000 		.4byte	0x7b2
 3838 07d3 07       		.uleb128 0x7
 3839 07d4 68000000 		.4byte	0x68
 3840 07d8 E9070000 		.4byte	0x7e9
 3841 07dc 08       		.uleb128 0x8
 3842 07dd 7D000000 		.4byte	0x7d
 3843 07e1 05       		.byte	0x5
 3844 07e2 08       		.uleb128 0x8
 3845 07e3 7D000000 		.4byte	0x7d
 3846 07e7 01       		.byte	0x1
 3847 07e8 00       		.byte	0
 3848 07e9 24       		.uleb128 0x24
 3849 07ea BA070000 		.4byte	.LASF130
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 83


 3850 07ee 08       		.byte	0x8
 3851 07ef 05       		.byte	0x5
 3852 07f0 D3070000 		.4byte	0x7d3
 3853 07f4 22       		.uleb128 0x22
 3854 07f5 10080000 		.4byte	.LASF131
 3855 07f9 01       		.byte	0x1
 3856 07fa 19       		.byte	0x19
 3857 07fb 84020000 		.4byte	0x284
 3858 07ff 05       		.uleb128 0x5
 3859 0800 03       		.byte	0x3
 3860 0801 00000000 		.4byte	currentDirection
 3861 0805 22       		.uleb128 0x22
 3862 0806 54000000 		.4byte	.LASF132
 3863 080a 01       		.byte	0x1
 3864 080b 19       		.byte	0x19
 3865 080c 84020000 		.4byte	0x284
 3866 0810 05       		.uleb128 0x5
 3867 0811 03       		.byte	0x3
 3868 0812 00000000 		.4byte	previousDirection
 3869 0816 22       		.uleb128 0x22
 3870 0817 F8070000 		.4byte	.LASF133
 3871 081b 01       		.byte	0x1
 3872 081c 1B       		.byte	0x1b
 3873 081d D3010000 		.4byte	0x1d3
 3874 0821 05       		.uleb128 0x5
 3875 0822 03       		.byte	0x3
 3876 0823 00000000 		.4byte	currentRobotOrientation
 3877 0827 22       		.uleb128 0x22
 3878 0828 AE060000 		.4byte	.LASF134
 3879 082c 01       		.byte	0x1
 3880 082d 1B       		.byte	0x1b
 3881 082e D3010000 		.4byte	0x1d3
 3882 0832 05       		.uleb128 0x5
 3883 0833 03       		.byte	0x3
 3884 0834 00000000 		.4byte	previousOrientation
 3885 0838 22       		.uleb128 0x22
 3886 0839 8B080000 		.4byte	.LASF135
 3887 083d 01       		.byte	0x1
 3888 083e 1C       		.byte	0x1c
 3889 083f 79020000 		.4byte	0x279
 3890 0843 05       		.uleb128 0x5
 3891 0844 03       		.byte	0x3
 3892 0845 00000000 		.4byte	currentInstruction
 3893 0849 22       		.uleb128 0x22
 3894 084a 9A060000 		.4byte	.LASF136
 3895 084e 01       		.byte	0x1
 3896 084f 1D       		.byte	0x1d
 3897 0850 79020000 		.4byte	0x279
 3898 0854 05       		.uleb128 0x5
 3899 0855 03       		.byte	0x3
 3900 0856 00000000 		.4byte	previousInstruction
 3901 085a 22       		.uleb128 0x22
 3902 085b 3B070000 		.4byte	.LASF137
 3903 085f 01       		.byte	0x1
 3904 0860 1E       		.byte	0x1e
 3905 0861 68000000 		.4byte	0x68
 3906 0865 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 84


 3907 0866 03       		.byte	0x3
 3908 0867 00000000 		.4byte	numSteps
 3909 086b 22       		.uleb128 0x22
 3910 086c 54080000 		.4byte	.LASF138
 3911 0870 01       		.byte	0x1
 3912 0871 20       		.byte	0x20
 3913 0872 7C080000 		.4byte	0x87c
 3914 0876 05       		.uleb128 0x5
 3915 0877 03       		.byte	0x3
 3916 0878 00000000 		.4byte	instructionList
 3917 087c 25       		.uleb128 0x25
 3918 087d 04       		.byte	0x4
 3919 087e 79020000 		.4byte	0x279
 3920 0882 21       		.uleb128 0x21
 3921 0883 733300   		.ascii	"s3\000"
 3922 0886 01       		.byte	0x1
 3923 0887 26       		.byte	0x26
 3924 0888 96000000 		.4byte	0x96
 3925 088c 05       		.uleb128 0x5
 3926 088d 03       		.byte	0x3
 3927 088e 00000000 		.4byte	s3
 3928 0892 21       		.uleb128 0x21
 3929 0893 733400   		.ascii	"s4\000"
 3930 0896 01       		.byte	0x1
 3931 0897 26       		.byte	0x26
 3932 0898 96000000 		.4byte	0x96
 3933 089c 05       		.uleb128 0x5
 3934 089d 03       		.byte	0x3
 3935 089e 00000000 		.4byte	s4
 3936 08a2 21       		.uleb128 0x21
 3937 08a3 733500   		.ascii	"s5\000"
 3938 08a6 01       		.byte	0x1
 3939 08a7 26       		.byte	0x26
 3940 08a8 96000000 		.4byte	0x96
 3941 08ac 05       		.uleb128 0x5
 3942 08ad 03       		.byte	0x3
 3943 08ae 00000000 		.4byte	s5
 3944 08b2 21       		.uleb128 0x21
 3945 08b3 733600   		.ascii	"s6\000"
 3946 08b6 01       		.byte	0x1
 3947 08b7 26       		.byte	0x26
 3948 08b8 96000000 		.4byte	0x96
 3949 08bc 05       		.uleb128 0x5
 3950 08bd 03       		.byte	0x3
 3951 08be 00000000 		.4byte	s6
 3952 08c2 22       		.uleb128 0x22
 3953 08c3 0B060000 		.4byte	.LASF139
 3954 08c7 01       		.byte	0x1
 3955 08c8 2B       		.byte	0x2b
 3956 08c9 AE000000 		.4byte	0xae
 3957 08cd 05       		.uleb128 0x5
 3958 08ce 03       		.byte	0x3
 3959 08cf 00000000 		.4byte	totalMilliseconds
 3960 08d3 22       		.uleb128 0x22
 3961 08d4 00000000 		.4byte	.LASF140
 3962 08d8 01       		.byte	0x1
 3963 08d9 2C       		.byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 85


 3964 08da D2000000 		.4byte	0xd2
 3965 08de 05       		.uleb128 0x5
 3966 08df 03       		.byte	0x3
 3967 08e0 00000000 		.4byte	totalDistance
 3968 08e4 07       		.uleb128 0x7
 3969 08e5 84000000 		.4byte	0x84
 3970 08e9 F4080000 		.4byte	0x8f4
 3971 08ed 08       		.uleb128 0x8
 3972 08ee 7D000000 		.4byte	0x7d
 3973 08f2 44       		.byte	0x44
 3974 08f3 00       		.byte	0
 3975 08f4 22       		.uleb128 0x22
 3976 08f5 C9070000 		.4byte	.LASF141
 3977 08f9 01       		.byte	0x1
 3978 08fa 2E       		.byte	0x2e
 3979 08fb E4080000 		.4byte	0x8e4
 3980 08ff 05       		.uleb128 0x5
 3981 0900 03       		.byte	0x3
 3982 0901 00000000 		.4byte	buffer
 3983 0905 22       		.uleb128 0x22
 3984 0906 AC030000 		.4byte	.LASF142
 3985 090a 01       		.byte	0x1
 3986 090b 2F       		.byte	0x2f
 3987 090c 68000000 		.4byte	0x68
 3988 0910 05       		.uleb128 0x5
 3989 0911 03       		.byte	0x3
 3990 0912 00000000 		.4byte	quadDec2Count
 3991 0916 22       		.uleb128 0x22
 3992 0917 EC000000 		.4byte	.LASF143
 3993 091b 01       		.byte	0x1
 3994 091c 30       		.byte	0x30
 3995 091d 68000000 		.4byte	0x68
 3996 0921 05       		.uleb128 0x5
 3997 0922 03       		.byte	0x3
 3998 0923 00000000 		.4byte	timerInt
 3999 0927 22       		.uleb128 0x22
 4000 0928 3B060000 		.4byte	.LASF144
 4001 092c 01       		.byte	0x1
 4002 092d 31       		.byte	0x31
 4003 092e 68000000 		.4byte	0x68
 4004 0932 05       		.uleb128 0x5
 4005 0933 03       		.byte	0x3
 4006 0934 00000000 		.4byte	keepLedOn
 4007 0938 22       		.uleb128 0x22
 4008 0939 DE010000 		.4byte	.LASF145
 4009 093d 01       		.byte	0x1
 4010 093e 33       		.byte	0x33
 4011 093f AE000000 		.4byte	0xae
 4012 0943 05       		.uleb128 0x5
 4013 0944 03       		.byte	0x3
 4014 0945 00000000 		.4byte	stopBuffer
 4015 0949 22       		.uleb128 0x22
 4016 094a 54090000 		.4byte	.LASF146
 4017 094e 01       		.byte	0x1
 4018 094f 34       		.byte	0x34
 4019 0950 A2000000 		.4byte	0xa2
 4020 0954 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 86


 4021 0955 03       		.byte	0x3
 4022 0956 00000000 		.4byte	forwardBuffer
 4023 095a 22       		.uleb128 0x22
 4024 095b 75080000 		.4byte	.LASF147
 4025 095f 01       		.byte	0x1
 4026 0960 4F       		.byte	0x4f
 4027 0961 EA000000 		.4byte	0xea
 4028 0965 05       		.uleb128 0x5
 4029 0966 03       		.byte	0x3
 4030 0967 00000000 		.4byte	junctionConfiguration
 4031 096b 22       		.uleb128 0x22
 4032 096c F8040000 		.4byte	.LASF148
 4033 0970 01       		.byte	0x1
 4034 0971 50       		.byte	0x50
 4035 0972 96000000 		.4byte	0x96
 4036 0976 05       		.uleb128 0x5
 4037 0977 03       		.byte	0x3
 4038 0978 00000000 		.4byte	currentFoodListIndex
 4039 097c 22       		.uleb128 0x22
 4040 097d 0E040000 		.4byte	.LASF149
 4041 0981 01       		.byte	0x1
 4042 0982 52       		.byte	0x52
 4043 0983 D2000000 		.4byte	0xd2
 4044 0987 05       		.uleb128 0x5
 4045 0988 03       		.byte	0x3
 4046 0989 00000000 		.4byte	blockSizeTotal
 4047 098d 22       		.uleb128 0x22
 4048 098e EF050000 		.4byte	.LASF150
 4049 0992 01       		.byte	0x1
 4050 0993 D1       		.byte	0xd1
 4051 0994 D2000000 		.4byte	0xd2
 4052 0998 05       		.uleb128 0x5
 4053 0999 03       		.byte	0x3
 4054 099a 00000000 		.4byte	xBlocksize
 4055 099e 22       		.uleb128 0x22
 4056 099f FA050000 		.4byte	.LASF151
 4057 09a3 01       		.byte	0x1
 4058 09a4 D2       		.byte	0xd2
 4059 09a5 D2000000 		.4byte	0xd2
 4060 09a9 05       		.uleb128 0x5
 4061 09aa 03       		.byte	0x3
 4062 09ab 00000000 		.4byte	yBlocksize
 4063 09af 22       		.uleb128 0x22
 4064 09b0 68050000 		.4byte	.LASF152
 4065 09b4 01       		.byte	0x1
 4066 09b5 D3       		.byte	0xd3
 4067 09b6 96000000 		.4byte	0x96
 4068 09ba 05       		.uleb128 0x5
 4069 09bb 03       		.byte	0x3
 4070 09bc 00000000 		.4byte	currentRow
 4071 09c0 22       		.uleb128 0x22
 4072 09c1 74020000 		.4byte	.LASF153
 4073 09c5 01       		.byte	0x1
 4074 09c6 D4       		.byte	0xd4
 4075 09c7 96000000 		.4byte	0x96
 4076 09cb 05       		.uleb128 0x5
 4077 09cc 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 87


 4078 09cd 00000000 		.4byte	currentCol
 4079 09d1 22       		.uleb128 0x22
 4080 09d2 43090000 		.4byte	.LASF154
 4081 09d6 01       		.byte	0x1
 4082 09d7 D6       		.byte	0xd6
 4083 09d8 96000000 		.4byte	0x96
 4084 09dc 05       		.uleb128 0x5
 4085 09dd 03       		.byte	0x3
 4086 09de 00000000 		.4byte	stoppedAfterTurn
 4087 09e2 22       		.uleb128 0x22
 4088 09e3 C2060000 		.4byte	.LASF155
 4089 09e7 01       		.byte	0x1
 4090 09e8 D7       		.byte	0xd7
 4091 09e9 96000000 		.4byte	0x96
 4092 09ed 05       		.uleb128 0x5
 4093 09ee 03       		.byte	0x3
 4094 09ef 00000000 		.4byte	ignoreSensor
 4095 09f3 22       		.uleb128 0x22
 4096 09f4 25070000 		.4byte	.LASF156
 4097 09f8 01       		.byte	0x1
 4098 09f9 FF       		.byte	0xff
 4099 09fa 84020000 		.4byte	0x284
 4100 09fe 05       		.uleb128 0x5
 4101 09ff 03       		.byte	0x3
 4102 0a00 00000000 		.4byte	lastDirectionAfter180
 4103 0a04 26       		.uleb128 0x26
 4104 0a05 12020000 		.4byte	.LASF157
 4105 0a09 01       		.byte	0x1
 4106 0a0a 4101     		.2byte	0x141
 4107 0a0c 96000000 		.4byte	0x96
 4108 0a10 05       		.uleb128 0x5
 4109 0a11 03       		.byte	0x3
 4110 0a12 00000000 		.4byte	firstTurnIteration
 4111 0a16 00       		.byte	0
 4112              		.section	.debug_abbrev,"",%progbits
 4113              	.Ldebug_abbrev0:
 4114 0000 01       		.uleb128 0x1
 4115 0001 11       		.uleb128 0x11
 4116 0002 01       		.byte	0x1
 4117 0003 25       		.uleb128 0x25
 4118 0004 0E       		.uleb128 0xe
 4119 0005 13       		.uleb128 0x13
 4120 0006 0B       		.uleb128 0xb
 4121 0007 03       		.uleb128 0x3
 4122 0008 0E       		.uleb128 0xe
 4123 0009 1B       		.uleb128 0x1b
 4124 000a 0E       		.uleb128 0xe
 4125 000b 55       		.uleb128 0x55
 4126 000c 17       		.uleb128 0x17
 4127 000d 11       		.uleb128 0x11
 4128 000e 01       		.uleb128 0x1
 4129 000f 10       		.uleb128 0x10
 4130 0010 17       		.uleb128 0x17
 4131 0011 00       		.byte	0
 4132 0012 00       		.byte	0
 4133 0013 02       		.uleb128 0x2
 4134 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 88


 4135 0015 00       		.byte	0
 4136 0016 0B       		.uleb128 0xb
 4137 0017 0B       		.uleb128 0xb
 4138 0018 3E       		.uleb128 0x3e
 4139 0019 0B       		.uleb128 0xb
 4140 001a 03       		.uleb128 0x3
 4141 001b 0E       		.uleb128 0xe
 4142 001c 00       		.byte	0
 4143 001d 00       		.byte	0
 4144 001e 03       		.uleb128 0x3
 4145 001f 16       		.uleb128 0x16
 4146 0020 00       		.byte	0
 4147 0021 03       		.uleb128 0x3
 4148 0022 0E       		.uleb128 0xe
 4149 0023 3A       		.uleb128 0x3a
 4150 0024 0B       		.uleb128 0xb
 4151 0025 3B       		.uleb128 0x3b
 4152 0026 0B       		.uleb128 0xb
 4153 0027 49       		.uleb128 0x49
 4154 0028 13       		.uleb128 0x13
 4155 0029 00       		.byte	0
 4156 002a 00       		.byte	0
 4157 002b 04       		.uleb128 0x4
 4158 002c 24       		.uleb128 0x24
 4159 002d 00       		.byte	0
 4160 002e 0B       		.uleb128 0xb
 4161 002f 0B       		.uleb128 0xb
 4162 0030 3E       		.uleb128 0x3e
 4163 0031 0B       		.uleb128 0xb
 4164 0032 03       		.uleb128 0x3
 4165 0033 08       		.uleb128 0x8
 4166 0034 00       		.byte	0
 4167 0035 00       		.byte	0
 4168 0036 05       		.uleb128 0x5
 4169 0037 16       		.uleb128 0x16
 4170 0038 00       		.byte	0
 4171 0039 03       		.uleb128 0x3
 4172 003a 0E       		.uleb128 0xe
 4173 003b 3A       		.uleb128 0x3a
 4174 003c 0B       		.uleb128 0xb
 4175 003d 3B       		.uleb128 0x3b
 4176 003e 05       		.uleb128 0x5
 4177 003f 49       		.uleb128 0x49
 4178 0040 13       		.uleb128 0x13
 4179 0041 00       		.byte	0
 4180 0042 00       		.byte	0
 4181 0043 06       		.uleb128 0x6
 4182 0044 35       		.uleb128 0x35
 4183 0045 00       		.byte	0
 4184 0046 49       		.uleb128 0x49
 4185 0047 13       		.uleb128 0x13
 4186 0048 00       		.byte	0
 4187 0049 00       		.byte	0
 4188 004a 07       		.uleb128 0x7
 4189 004b 01       		.uleb128 0x1
 4190 004c 01       		.byte	0x1
 4191 004d 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 89


 4192 004e 13       		.uleb128 0x13
 4193 004f 01       		.uleb128 0x1
 4194 0050 13       		.uleb128 0x13
 4195 0051 00       		.byte	0
 4196 0052 00       		.byte	0
 4197 0053 08       		.uleb128 0x8
 4198 0054 21       		.uleb128 0x21
 4199 0055 00       		.byte	0
 4200 0056 49       		.uleb128 0x49
 4201 0057 13       		.uleb128 0x13
 4202 0058 2F       		.uleb128 0x2f
 4203 0059 0B       		.uleb128 0xb
 4204 005a 00       		.byte	0
 4205 005b 00       		.byte	0
 4206 005c 09       		.uleb128 0x9
 4207 005d 13       		.uleb128 0x13
 4208 005e 01       		.byte	0x1
 4209 005f 03       		.uleb128 0x3
 4210 0060 0E       		.uleb128 0xe
 4211 0061 0B       		.uleb128 0xb
 4212 0062 0B       		.uleb128 0xb
 4213 0063 3A       		.uleb128 0x3a
 4214 0064 0B       		.uleb128 0xb
 4215 0065 3B       		.uleb128 0x3b
 4216 0066 0B       		.uleb128 0xb
 4217 0067 01       		.uleb128 0x1
 4218 0068 13       		.uleb128 0x13
 4219 0069 00       		.byte	0
 4220 006a 00       		.byte	0
 4221 006b 0A       		.uleb128 0xa
 4222 006c 0D       		.uleb128 0xd
 4223 006d 00       		.byte	0
 4224 006e 03       		.uleb128 0x3
 4225 006f 0E       		.uleb128 0xe
 4226 0070 3A       		.uleb128 0x3a
 4227 0071 0B       		.uleb128 0xb
 4228 0072 3B       		.uleb128 0x3b
 4229 0073 0B       		.uleb128 0xb
 4230 0074 49       		.uleb128 0x49
 4231 0075 13       		.uleb128 0x13
 4232 0076 38       		.uleb128 0x38
 4233 0077 0B       		.uleb128 0xb
 4234 0078 00       		.byte	0
 4235 0079 00       		.byte	0
 4236 007a 0B       		.uleb128 0xb
 4237 007b 04       		.uleb128 0x4
 4238 007c 01       		.byte	0x1
 4239 007d 03       		.uleb128 0x3
 4240 007e 0E       		.uleb128 0xe
 4241 007f 0B       		.uleb128 0xb
 4242 0080 0B       		.uleb128 0xb
 4243 0081 49       		.uleb128 0x49
 4244 0082 13       		.uleb128 0x13
 4245 0083 3A       		.uleb128 0x3a
 4246 0084 0B       		.uleb128 0xb
 4247 0085 3B       		.uleb128 0x3b
 4248 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 90


 4249 0087 01       		.uleb128 0x1
 4250 0088 13       		.uleb128 0x13
 4251 0089 00       		.byte	0
 4252 008a 00       		.byte	0
 4253 008b 0C       		.uleb128 0xc
 4254 008c 28       		.uleb128 0x28
 4255 008d 00       		.byte	0
 4256 008e 03       		.uleb128 0x3
 4257 008f 08       		.uleb128 0x8
 4258 0090 1C       		.uleb128 0x1c
 4259 0091 0B       		.uleb128 0xb
 4260 0092 00       		.byte	0
 4261 0093 00       		.byte	0
 4262 0094 0D       		.uleb128 0xd
 4263 0095 28       		.uleb128 0x28
 4264 0096 00       		.byte	0
 4265 0097 03       		.uleb128 0x3
 4266 0098 0E       		.uleb128 0xe
 4267 0099 1C       		.uleb128 0x1c
 4268 009a 0B       		.uleb128 0xb
 4269 009b 00       		.byte	0
 4270 009c 00       		.byte	0
 4271 009d 0E       		.uleb128 0xe
 4272 009e 2E       		.uleb128 0x2e
 4273 009f 01       		.byte	0x1
 4274 00a0 3F       		.uleb128 0x3f
 4275 00a1 19       		.uleb128 0x19
 4276 00a2 03       		.uleb128 0x3
 4277 00a3 0E       		.uleb128 0xe
 4278 00a4 3A       		.uleb128 0x3a
 4279 00a5 0B       		.uleb128 0xb
 4280 00a6 3B       		.uleb128 0x3b
 4281 00a7 0B       		.uleb128 0xb
 4282 00a8 27       		.uleb128 0x27
 4283 00a9 19       		.uleb128 0x19
 4284 00aa 11       		.uleb128 0x11
 4285 00ab 01       		.uleb128 0x1
 4286 00ac 12       		.uleb128 0x12
 4287 00ad 06       		.uleb128 0x6
 4288 00ae 40       		.uleb128 0x40
 4289 00af 18       		.uleb128 0x18
 4290 00b0 9642     		.uleb128 0x2116
 4291 00b2 19       		.uleb128 0x19
 4292 00b3 01       		.uleb128 0x1
 4293 00b4 13       		.uleb128 0x13
 4294 00b5 00       		.byte	0
 4295 00b6 00       		.byte	0
 4296 00b7 0F       		.uleb128 0xf
 4297 00b8 0B       		.uleb128 0xb
 4298 00b9 01       		.byte	0x1
 4299 00ba 11       		.uleb128 0x11
 4300 00bb 01       		.uleb128 0x1
 4301 00bc 12       		.uleb128 0x12
 4302 00bd 06       		.uleb128 0x6
 4303 00be 00       		.byte	0
 4304 00bf 00       		.byte	0
 4305 00c0 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 91


 4306 00c1 34       		.uleb128 0x34
 4307 00c2 00       		.byte	0
 4308 00c3 03       		.uleb128 0x3
 4309 00c4 0E       		.uleb128 0xe
 4310 00c5 3A       		.uleb128 0x3a
 4311 00c6 0B       		.uleb128 0xb
 4312 00c7 3B       		.uleb128 0x3b
 4313 00c8 0B       		.uleb128 0xb
 4314 00c9 49       		.uleb128 0x49
 4315 00ca 13       		.uleb128 0x13
 4316 00cb 02       		.uleb128 0x2
 4317 00cc 18       		.uleb128 0x18
 4318 00cd 00       		.byte	0
 4319 00ce 00       		.byte	0
 4320 00cf 11       		.uleb128 0x11
 4321 00d0 2E       		.uleb128 0x2e
 4322 00d1 00       		.byte	0
 4323 00d2 3F       		.uleb128 0x3f
 4324 00d3 19       		.uleb128 0x19
 4325 00d4 03       		.uleb128 0x3
 4326 00d5 0E       		.uleb128 0xe
 4327 00d6 3A       		.uleb128 0x3a
 4328 00d7 0B       		.uleb128 0xb
 4329 00d8 3B       		.uleb128 0x3b
 4330 00d9 0B       		.uleb128 0xb
 4331 00da 27       		.uleb128 0x27
 4332 00db 19       		.uleb128 0x19
 4333 00dc 11       		.uleb128 0x11
 4334 00dd 01       		.uleb128 0x1
 4335 00de 12       		.uleb128 0x12
 4336 00df 06       		.uleb128 0x6
 4337 00e0 40       		.uleb128 0x40
 4338 00e1 18       		.uleb128 0x18
 4339 00e2 9742     		.uleb128 0x2117
 4340 00e4 19       		.uleb128 0x19
 4341 00e5 00       		.byte	0
 4342 00e6 00       		.byte	0
 4343 00e7 12       		.uleb128 0x12
 4344 00e8 2E       		.uleb128 0x2e
 4345 00e9 00       		.byte	0
 4346 00ea 3F       		.uleb128 0x3f
 4347 00eb 19       		.uleb128 0x19
 4348 00ec 03       		.uleb128 0x3
 4349 00ed 0E       		.uleb128 0xe
 4350 00ee 3A       		.uleb128 0x3a
 4351 00ef 0B       		.uleb128 0xb
 4352 00f0 3B       		.uleb128 0x3b
 4353 00f1 0B       		.uleb128 0xb
 4354 00f2 27       		.uleb128 0x27
 4355 00f3 19       		.uleb128 0x19
 4356 00f4 11       		.uleb128 0x11
 4357 00f5 01       		.uleb128 0x1
 4358 00f6 12       		.uleb128 0x12
 4359 00f7 06       		.uleb128 0x6
 4360 00f8 40       		.uleb128 0x40
 4361 00f9 18       		.uleb128 0x18
 4362 00fa 9642     		.uleb128 0x2116
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 92


 4363 00fc 19       		.uleb128 0x19
 4364 00fd 00       		.byte	0
 4365 00fe 00       		.byte	0
 4366 00ff 13       		.uleb128 0x13
 4367 0100 2E       		.uleb128 0x2e
 4368 0101 00       		.byte	0
 4369 0102 3F       		.uleb128 0x3f
 4370 0103 19       		.uleb128 0x19
 4371 0104 03       		.uleb128 0x3
 4372 0105 0E       		.uleb128 0xe
 4373 0106 3A       		.uleb128 0x3a
 4374 0107 0B       		.uleb128 0xb
 4375 0108 3B       		.uleb128 0x3b
 4376 0109 0B       		.uleb128 0xb
 4377 010a 49       		.uleb128 0x49
 4378 010b 13       		.uleb128 0x13
 4379 010c 11       		.uleb128 0x11
 4380 010d 01       		.uleb128 0x1
 4381 010e 12       		.uleb128 0x12
 4382 010f 06       		.uleb128 0x6
 4383 0110 40       		.uleb128 0x40
 4384 0111 18       		.uleb128 0x18
 4385 0112 9642     		.uleb128 0x2116
 4386 0114 19       		.uleb128 0x19
 4387 0115 00       		.byte	0
 4388 0116 00       		.byte	0
 4389 0117 14       		.uleb128 0x14
 4390 0118 2E       		.uleb128 0x2e
 4391 0119 01       		.byte	0x1
 4392 011a 3F       		.uleb128 0x3f
 4393 011b 19       		.uleb128 0x19
 4394 011c 03       		.uleb128 0x3
 4395 011d 0E       		.uleb128 0xe
 4396 011e 3A       		.uleb128 0x3a
 4397 011f 0B       		.uleb128 0xb
 4398 0120 3B       		.uleb128 0x3b
 4399 0121 0B       		.uleb128 0xb
 4400 0122 27       		.uleb128 0x27
 4401 0123 19       		.uleb128 0x19
 4402 0124 49       		.uleb128 0x49
 4403 0125 13       		.uleb128 0x13
 4404 0126 11       		.uleb128 0x11
 4405 0127 01       		.uleb128 0x1
 4406 0128 12       		.uleb128 0x12
 4407 0129 06       		.uleb128 0x6
 4408 012a 40       		.uleb128 0x40
 4409 012b 18       		.uleb128 0x18
 4410 012c 9642     		.uleb128 0x2116
 4411 012e 19       		.uleb128 0x19
 4412 012f 01       		.uleb128 0x1
 4413 0130 13       		.uleb128 0x13
 4414 0131 00       		.byte	0
 4415 0132 00       		.byte	0
 4416 0133 15       		.uleb128 0x15
 4417 0134 05       		.uleb128 0x5
 4418 0135 00       		.byte	0
 4419 0136 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 93


 4420 0137 0E       		.uleb128 0xe
 4421 0138 3A       		.uleb128 0x3a
 4422 0139 0B       		.uleb128 0xb
 4423 013a 3B       		.uleb128 0x3b
 4424 013b 0B       		.uleb128 0xb
 4425 013c 49       		.uleb128 0x49
 4426 013d 13       		.uleb128 0x13
 4427 013e 02       		.uleb128 0x2
 4428 013f 18       		.uleb128 0x18
 4429 0140 00       		.byte	0
 4430 0141 00       		.byte	0
 4431 0142 16       		.uleb128 0x16
 4432 0143 34       		.uleb128 0x34
 4433 0144 00       		.byte	0
 4434 0145 03       		.uleb128 0x3
 4435 0146 08       		.uleb128 0x8
 4436 0147 3A       		.uleb128 0x3a
 4437 0148 0B       		.uleb128 0xb
 4438 0149 3B       		.uleb128 0x3b
 4439 014a 0B       		.uleb128 0xb
 4440 014b 49       		.uleb128 0x49
 4441 014c 13       		.uleb128 0x13
 4442 014d 02       		.uleb128 0x2
 4443 014e 18       		.uleb128 0x18
 4444 014f 00       		.byte	0
 4445 0150 00       		.byte	0
 4446 0151 17       		.uleb128 0x17
 4447 0152 2E       		.uleb128 0x2e
 4448 0153 00       		.byte	0
 4449 0154 3F       		.uleb128 0x3f
 4450 0155 19       		.uleb128 0x19
 4451 0156 03       		.uleb128 0x3
 4452 0157 0E       		.uleb128 0xe
 4453 0158 3A       		.uleb128 0x3a
 4454 0159 0B       		.uleb128 0xb
 4455 015a 3B       		.uleb128 0x3b
 4456 015b 0B       		.uleb128 0xb
 4457 015c 11       		.uleb128 0x11
 4458 015d 01       		.uleb128 0x1
 4459 015e 12       		.uleb128 0x12
 4460 015f 06       		.uleb128 0x6
 4461 0160 40       		.uleb128 0x40
 4462 0161 18       		.uleb128 0x18
 4463 0162 9742     		.uleb128 0x2117
 4464 0164 19       		.uleb128 0x19
 4465 0165 00       		.byte	0
 4466 0166 00       		.byte	0
 4467 0167 18       		.uleb128 0x18
 4468 0168 2E       		.uleb128 0x2e
 4469 0169 00       		.byte	0
 4470 016a 3F       		.uleb128 0x3f
 4471 016b 19       		.uleb128 0x19
 4472 016c 03       		.uleb128 0x3
 4473 016d 0E       		.uleb128 0xe
 4474 016e 3A       		.uleb128 0x3a
 4475 016f 0B       		.uleb128 0xb
 4476 0170 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 94


 4477 0171 0B       		.uleb128 0xb
 4478 0172 49       		.uleb128 0x49
 4479 0173 13       		.uleb128 0x13
 4480 0174 11       		.uleb128 0x11
 4481 0175 01       		.uleb128 0x1
 4482 0176 12       		.uleb128 0x12
 4483 0177 06       		.uleb128 0x6
 4484 0178 40       		.uleb128 0x40
 4485 0179 18       		.uleb128 0x18
 4486 017a 9742     		.uleb128 0x2117
 4487 017c 19       		.uleb128 0x19
 4488 017d 00       		.byte	0
 4489 017e 00       		.byte	0
 4490 017f 19       		.uleb128 0x19
 4491 0180 2E       		.uleb128 0x2e
 4492 0181 00       		.byte	0
 4493 0182 3F       		.uleb128 0x3f
 4494 0183 19       		.uleb128 0x19
 4495 0184 03       		.uleb128 0x3
 4496 0185 0E       		.uleb128 0xe
 4497 0186 3A       		.uleb128 0x3a
 4498 0187 0B       		.uleb128 0xb
 4499 0188 3B       		.uleb128 0x3b
 4500 0189 05       		.uleb128 0x5
 4501 018a 49       		.uleb128 0x49
 4502 018b 13       		.uleb128 0x13
 4503 018c 11       		.uleb128 0x11
 4504 018d 01       		.uleb128 0x1
 4505 018e 12       		.uleb128 0x12
 4506 018f 06       		.uleb128 0x6
 4507 0190 40       		.uleb128 0x40
 4508 0191 18       		.uleb128 0x18
 4509 0192 9742     		.uleb128 0x2117
 4510 0194 19       		.uleb128 0x19
 4511 0195 00       		.byte	0
 4512 0196 00       		.byte	0
 4513 0197 1A       		.uleb128 0x1a
 4514 0198 2E       		.uleb128 0x2e
 4515 0199 01       		.byte	0x1
 4516 019a 3F       		.uleb128 0x3f
 4517 019b 19       		.uleb128 0x19
 4518 019c 03       		.uleb128 0x3
 4519 019d 0E       		.uleb128 0xe
 4520 019e 3A       		.uleb128 0x3a
 4521 019f 0B       		.uleb128 0xb
 4522 01a0 3B       		.uleb128 0x3b
 4523 01a1 05       		.uleb128 0x5
 4524 01a2 49       		.uleb128 0x49
 4525 01a3 13       		.uleb128 0x13
 4526 01a4 11       		.uleb128 0x11
 4527 01a5 01       		.uleb128 0x1
 4528 01a6 12       		.uleb128 0x12
 4529 01a7 06       		.uleb128 0x6
 4530 01a8 40       		.uleb128 0x40
 4531 01a9 18       		.uleb128 0x18
 4532 01aa 9642     		.uleb128 0x2116
 4533 01ac 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 95


 4534 01ad 01       		.uleb128 0x1
 4535 01ae 13       		.uleb128 0x13
 4536 01af 00       		.byte	0
 4537 01b0 00       		.byte	0
 4538 01b1 1B       		.uleb128 0x1b
 4539 01b2 34       		.uleb128 0x34
 4540 01b3 00       		.byte	0
 4541 01b4 03       		.uleb128 0x3
 4542 01b5 0E       		.uleb128 0xe
 4543 01b6 3A       		.uleb128 0x3a
 4544 01b7 0B       		.uleb128 0xb
 4545 01b8 3B       		.uleb128 0x3b
 4546 01b9 05       		.uleb128 0x5
 4547 01ba 49       		.uleb128 0x49
 4548 01bb 13       		.uleb128 0x13
 4549 01bc 02       		.uleb128 0x2
 4550 01bd 18       		.uleb128 0x18
 4551 01be 00       		.byte	0
 4552 01bf 00       		.byte	0
 4553 01c0 1C       		.uleb128 0x1c
 4554 01c1 2E       		.uleb128 0x2e
 4555 01c2 00       		.byte	0
 4556 01c3 3F       		.uleb128 0x3f
 4557 01c4 19       		.uleb128 0x19
 4558 01c5 03       		.uleb128 0x3
 4559 01c6 0E       		.uleb128 0xe
 4560 01c7 3A       		.uleb128 0x3a
 4561 01c8 0B       		.uleb128 0xb
 4562 01c9 3B       		.uleb128 0x3b
 4563 01ca 05       		.uleb128 0x5
 4564 01cb 11       		.uleb128 0x11
 4565 01cc 01       		.uleb128 0x1
 4566 01cd 12       		.uleb128 0x12
 4567 01ce 06       		.uleb128 0x6
 4568 01cf 40       		.uleb128 0x40
 4569 01d0 18       		.uleb128 0x18
 4570 01d1 9742     		.uleb128 0x2117
 4571 01d3 19       		.uleb128 0x19
 4572 01d4 00       		.byte	0
 4573 01d5 00       		.byte	0
 4574 01d6 1D       		.uleb128 0x1d
 4575 01d7 2E       		.uleb128 0x2e
 4576 01d8 01       		.byte	0x1
 4577 01d9 3F       		.uleb128 0x3f
 4578 01da 19       		.uleb128 0x19
 4579 01db 03       		.uleb128 0x3
 4580 01dc 0E       		.uleb128 0xe
 4581 01dd 3A       		.uleb128 0x3a
 4582 01de 0B       		.uleb128 0xb
 4583 01df 3B       		.uleb128 0x3b
 4584 01e0 05       		.uleb128 0x5
 4585 01e1 49       		.uleb128 0x49
 4586 01e2 13       		.uleb128 0x13
 4587 01e3 11       		.uleb128 0x11
 4588 01e4 01       		.uleb128 0x1
 4589 01e5 12       		.uleb128 0x12
 4590 01e6 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 96


 4591 01e7 40       		.uleb128 0x40
 4592 01e8 18       		.uleb128 0x18
 4593 01e9 9742     		.uleb128 0x2117
 4594 01eb 19       		.uleb128 0x19
 4595 01ec 01       		.uleb128 0x1
 4596 01ed 13       		.uleb128 0x13
 4597 01ee 00       		.byte	0
 4598 01ef 00       		.byte	0
 4599 01f0 1E       		.uleb128 0x1e
 4600 01f1 2E       		.uleb128 0x2e
 4601 01f2 01       		.byte	0x1
 4602 01f3 3F       		.uleb128 0x3f
 4603 01f4 19       		.uleb128 0x19
 4604 01f5 03       		.uleb128 0x3
 4605 01f6 0E       		.uleb128 0xe
 4606 01f7 3A       		.uleb128 0x3a
 4607 01f8 0B       		.uleb128 0xb
 4608 01f9 3B       		.uleb128 0x3b
 4609 01fa 05       		.uleb128 0x5
 4610 01fb 11       		.uleb128 0x11
 4611 01fc 01       		.uleb128 0x1
 4612 01fd 12       		.uleb128 0x12
 4613 01fe 06       		.uleb128 0x6
 4614 01ff 40       		.uleb128 0x40
 4615 0200 18       		.uleb128 0x18
 4616 0201 9642     		.uleb128 0x2116
 4617 0203 19       		.uleb128 0x19
 4618 0204 01       		.uleb128 0x1
 4619 0205 13       		.uleb128 0x13
 4620 0206 00       		.byte	0
 4621 0207 00       		.byte	0
 4622 0208 1F       		.uleb128 0x1f
 4623 0209 2E       		.uleb128 0x2e
 4624 020a 00       		.byte	0
 4625 020b 3F       		.uleb128 0x3f
 4626 020c 19       		.uleb128 0x19
 4627 020d 03       		.uleb128 0x3
 4628 020e 0E       		.uleb128 0xe
 4629 020f 3A       		.uleb128 0x3a
 4630 0210 0B       		.uleb128 0xb
 4631 0211 3B       		.uleb128 0x3b
 4632 0212 05       		.uleb128 0x5
 4633 0213 11       		.uleb128 0x11
 4634 0214 01       		.uleb128 0x1
 4635 0215 12       		.uleb128 0x12
 4636 0216 06       		.uleb128 0x6
 4637 0217 40       		.uleb128 0x40
 4638 0218 18       		.uleb128 0x18
 4639 0219 9642     		.uleb128 0x2116
 4640 021b 19       		.uleb128 0x19
 4641 021c 00       		.byte	0
 4642 021d 00       		.byte	0
 4643 021e 20       		.uleb128 0x20
 4644 021f 34       		.uleb128 0x34
 4645 0220 00       		.byte	0
 4646 0221 03       		.uleb128 0x3
 4647 0222 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 97


 4648 0223 3A       		.uleb128 0x3a
 4649 0224 0B       		.uleb128 0xb
 4650 0225 3B       		.uleb128 0x3b
 4651 0226 05       		.uleb128 0x5
 4652 0227 49       		.uleb128 0x49
 4653 0228 13       		.uleb128 0x13
 4654 0229 3F       		.uleb128 0x3f
 4655 022a 19       		.uleb128 0x19
 4656 022b 3C       		.uleb128 0x3c
 4657 022c 19       		.uleb128 0x19
 4658 022d 00       		.byte	0
 4659 022e 00       		.byte	0
 4660 022f 21       		.uleb128 0x21
 4661 0230 34       		.uleb128 0x34
 4662 0231 00       		.byte	0
 4663 0232 03       		.uleb128 0x3
 4664 0233 08       		.uleb128 0x8
 4665 0234 3A       		.uleb128 0x3a
 4666 0235 0B       		.uleb128 0xb
 4667 0236 3B       		.uleb128 0x3b
 4668 0237 0B       		.uleb128 0xb
 4669 0238 49       		.uleb128 0x49
 4670 0239 13       		.uleb128 0x13
 4671 023a 3F       		.uleb128 0x3f
 4672 023b 19       		.uleb128 0x19
 4673 023c 02       		.uleb128 0x2
 4674 023d 18       		.uleb128 0x18
 4675 023e 00       		.byte	0
 4676 023f 00       		.byte	0
 4677 0240 22       		.uleb128 0x22
 4678 0241 34       		.uleb128 0x34
 4679 0242 00       		.byte	0
 4680 0243 03       		.uleb128 0x3
 4681 0244 0E       		.uleb128 0xe
 4682 0245 3A       		.uleb128 0x3a
 4683 0246 0B       		.uleb128 0xb
 4684 0247 3B       		.uleb128 0x3b
 4685 0248 0B       		.uleb128 0xb
 4686 0249 49       		.uleb128 0x49
 4687 024a 13       		.uleb128 0x13
 4688 024b 3F       		.uleb128 0x3f
 4689 024c 19       		.uleb128 0x19
 4690 024d 02       		.uleb128 0x2
 4691 024e 18       		.uleb128 0x18
 4692 024f 00       		.byte	0
 4693 0250 00       		.byte	0
 4694 0251 23       		.uleb128 0x23
 4695 0252 34       		.uleb128 0x34
 4696 0253 00       		.byte	0
 4697 0254 03       		.uleb128 0x3
 4698 0255 08       		.uleb128 0x8
 4699 0256 3A       		.uleb128 0x3a
 4700 0257 0B       		.uleb128 0xb
 4701 0258 3B       		.uleb128 0x3b
 4702 0259 0B       		.uleb128 0xb
 4703 025a 49       		.uleb128 0x49
 4704 025b 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 98


 4705 025c 3F       		.uleb128 0x3f
 4706 025d 19       		.uleb128 0x19
 4707 025e 3C       		.uleb128 0x3c
 4708 025f 19       		.uleb128 0x19
 4709 0260 00       		.byte	0
 4710 0261 00       		.byte	0
 4711 0262 24       		.uleb128 0x24
 4712 0263 34       		.uleb128 0x34
 4713 0264 00       		.byte	0
 4714 0265 03       		.uleb128 0x3
 4715 0266 0E       		.uleb128 0xe
 4716 0267 3A       		.uleb128 0x3a
 4717 0268 0B       		.uleb128 0xb
 4718 0269 3B       		.uleb128 0x3b
 4719 026a 0B       		.uleb128 0xb
 4720 026b 49       		.uleb128 0x49
 4721 026c 13       		.uleb128 0x13
 4722 026d 3F       		.uleb128 0x3f
 4723 026e 19       		.uleb128 0x19
 4724 026f 3C       		.uleb128 0x3c
 4725 0270 19       		.uleb128 0x19
 4726 0271 00       		.byte	0
 4727 0272 00       		.byte	0
 4728 0273 25       		.uleb128 0x25
 4729 0274 0F       		.uleb128 0xf
 4730 0275 00       		.byte	0
 4731 0276 0B       		.uleb128 0xb
 4732 0277 0B       		.uleb128 0xb
 4733 0278 49       		.uleb128 0x49
 4734 0279 13       		.uleb128 0x13
 4735 027a 00       		.byte	0
 4736 027b 00       		.byte	0
 4737 027c 26       		.uleb128 0x26
 4738 027d 34       		.uleb128 0x34
 4739 027e 00       		.byte	0
 4740 027f 03       		.uleb128 0x3
 4741 0280 0E       		.uleb128 0xe
 4742 0281 3A       		.uleb128 0x3a
 4743 0282 0B       		.uleb128 0xb
 4744 0283 3B       		.uleb128 0x3b
 4745 0284 05       		.uleb128 0x5
 4746 0285 49       		.uleb128 0x49
 4747 0286 13       		.uleb128 0x13
 4748 0287 3F       		.uleb128 0x3f
 4749 0288 19       		.uleb128 0x19
 4750 0289 02       		.uleb128 0x2
 4751 028a 18       		.uleb128 0x18
 4752 028b 00       		.byte	0
 4753 028c 00       		.byte	0
 4754 028d 00       		.byte	0
 4755              		.section	.debug_aranges,"",%progbits
 4756 0000 9C000000 		.4byte	0x9c
 4757 0004 0200     		.2byte	0x2
 4758 0006 00000000 		.4byte	.Ldebug_info0
 4759 000a 04       		.byte	0x4
 4760 000b 00       		.byte	0
 4761 000c 0000     		.2byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 99


 4762 000e 0000     		.2byte	0
 4763 0010 00000000 		.4byte	.LFB64
 4764 0014 EC000000 		.4byte	.LFE64-.LFB64
 4765 0018 00000000 		.4byte	.LFB65
 4766 001c 18000000 		.4byte	.LFE65-.LFB65
 4767 0020 00000000 		.4byte	.LFB66
 4768 0024 18000000 		.4byte	.LFE66-.LFB66
 4769 0028 00000000 		.4byte	.LFB67
 4770 002c 18000000 		.4byte	.LFE67-.LFB67
 4771 0030 00000000 		.4byte	.LFB68
 4772 0034 18000000 		.4byte	.LFE68-.LFB68
 4773 0038 00000000 		.4byte	.LFB69
 4774 003c 70000000 		.4byte	.LFE69-.LFB69
 4775 0040 00000000 		.4byte	.LFB70
 4776 0044 04010000 		.4byte	.LFE70-.LFB70
 4777 0048 00000000 		.4byte	.LFB71
 4778 004c 54000000 		.4byte	.LFE71-.LFB71
 4779 0050 00000000 		.4byte	.LFB72
 4780 0054 34000000 		.4byte	.LFE72-.LFB72
 4781 0058 00000000 		.4byte	.LFB73
 4782 005c 84000000 		.4byte	.LFE73-.LFB73
 4783 0060 00000000 		.4byte	.LFB74
 4784 0064 7C000000 		.4byte	.LFE74-.LFB74
 4785 0068 00000000 		.4byte	.LFB75
 4786 006c 84000000 		.4byte	.LFE75-.LFB75
 4787 0070 00000000 		.4byte	.LFB76
 4788 0074 EC060000 		.4byte	.LFE76-.LFB76
 4789 0078 00000000 		.4byte	.LFB77
 4790 007c 68000000 		.4byte	.LFE77-.LFB77
 4791 0080 00000000 		.4byte	.LFB78
 4792 0084 6C000000 		.4byte	.LFE78-.LFB78
 4793 0088 00000000 		.4byte	.LFB79
 4794 008c 3C010000 		.4byte	.LFE79-.LFB79
 4795 0090 00000000 		.4byte	.LFB80
 4796 0094 CC000000 		.4byte	.LFE80-.LFB80
 4797 0098 00000000 		.4byte	0
 4798 009c 00000000 		.4byte	0
 4799              		.section	.debug_ranges,"",%progbits
 4800              	.Ldebug_ranges0:
 4801 0000 00000000 		.4byte	.LFB64
 4802 0004 EC000000 		.4byte	.LFE64
 4803 0008 00000000 		.4byte	.LFB65
 4804 000c 18000000 		.4byte	.LFE65
 4805 0010 00000000 		.4byte	.LFB66
 4806 0014 18000000 		.4byte	.LFE66
 4807 0018 00000000 		.4byte	.LFB67
 4808 001c 18000000 		.4byte	.LFE67
 4809 0020 00000000 		.4byte	.LFB68
 4810 0024 18000000 		.4byte	.LFE68
 4811 0028 00000000 		.4byte	.LFB69
 4812 002c 70000000 		.4byte	.LFE69
 4813 0030 00000000 		.4byte	.LFB70
 4814 0034 04010000 		.4byte	.LFE70
 4815 0038 00000000 		.4byte	.LFB71
 4816 003c 54000000 		.4byte	.LFE71
 4817 0040 00000000 		.4byte	.LFB72
 4818 0044 34000000 		.4byte	.LFE72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 100


 4819 0048 00000000 		.4byte	.LFB73
 4820 004c 84000000 		.4byte	.LFE73
 4821 0050 00000000 		.4byte	.LFB74
 4822 0054 7C000000 		.4byte	.LFE74
 4823 0058 00000000 		.4byte	.LFB75
 4824 005c 84000000 		.4byte	.LFE75
 4825 0060 00000000 		.4byte	.LFB76
 4826 0064 EC060000 		.4byte	.LFE76
 4827 0068 00000000 		.4byte	.LFB77
 4828 006c 68000000 		.4byte	.LFE77
 4829 0070 00000000 		.4byte	.LFB78
 4830 0074 6C000000 		.4byte	.LFE78
 4831 0078 00000000 		.4byte	.LFB79
 4832 007c 3C010000 		.4byte	.LFE79
 4833 0080 00000000 		.4byte	.LFB80
 4834 0084 CC000000 		.4byte	.LFE80
 4835 0088 00000000 		.4byte	0
 4836 008c 00000000 		.4byte	0
 4837              		.section	.debug_line,"",%progbits
 4838              	.Ldebug_line0:
 4839 0000 BB040000 		.section	.debug_str,"MS",%progbits,1
 4839      02007001 
 4839      00000201 
 4839      FB0E0D00 
 4839      01010101 
 4840              	.LASF140:
 4841 0000 746F7461 		.ascii	"totalDistance\000"
 4841      6C446973 
 4841      74616E63 
 4841      6500
 4842              	.LASF41:
 4843 000e 4F726965 		.ascii	"OrientationState\000"
 4843      6E746174 
 4843      696F6E53 
 4843      74617465 
 4843      00
 4844              	.LASF36:
 4845 001f 67325F73 		.ascii	"g2_speed\000"
 4845      70656564 
 4845      00
 4846              	.LASF94:
 4847 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4847      61726455 
 4847      6E74696C 
 4847      54617267 
 4847      65745374 
 4848              	.LASF56:
 4849 0046 526F626F 		.ascii	"RobotMovement\000"
 4849      744D6F76 
 4849      656D656E 
 4849      7400
 4850              	.LASF132:
 4851 0054 70726576 		.ascii	"previousDirection\000"
 4851      696F7573 
 4851      44697265 
 4851      6374696F 
 4851      6E00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 101


 4852              	.LASF103:
 4853 0066 6C696E65 		.ascii	"lineCount\000"
 4853      436F756E 
 4853      7400
 4854              	.LASF114:
 4855 0070 74735F73 		.ascii	"ts_speed\000"
 4855      70656564 
 4855      00
 4856              	.LASF0:
 4857 0079 7369676E 		.ascii	"signed char\000"
 4857      65642063 
 4857      68617200 
 4858              	.LASF160:
 4859 0085 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4859      6F63756D 
 4859      656E7473 
 4859      5C476974 
 4859      4875625C 
 4860 00b4 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4860      635F636F 
 4860      64655F62 
 4860      6173655C 
 4860      43533330 
 4861              	.LASF69:
 4862 00d6 53345F44 		.ascii	"S4_DETECTED\000"
 4862      45544543 
 4862      54454400 
 4863              	.LASF51:
 4864 00e2 64697265 		.ascii	"direction\000"
 4864      6374696F 
 4864      6E00
 4865              	.LASF143:
 4866 00ec 74696D65 		.ascii	"timerInt\000"
 4866      72496E74 
 4866      00
 4867              	.LASF158:
 4868 00f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4868      43313120 
 4868      352E342E 
 4868      31203230 
 4868      31363036 
 4869 0128 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4869      20726576 
 4869      6973696F 
 4869      6E203233 
 4869      37373135 
 4870 015b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4870      66756E63 
 4870      74696F6E 
 4870      2D736563 
 4870      74696F6E 
 4871              	.LASF82:
 4872 0183 626C6F63 		.ascii	"blocksToTarget\000"
 4872      6B73546F 
 4872      54617267 
 4872      657400
 4873              	.LASF29:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 102


 4874 0192 67305F64 		.ascii	"g0_direction\000"
 4874      69726563 
 4874      74696F6E 
 4874      00
 4875              	.LASF127:
 4876 019f 656E7472 		.ascii	"entry\000"
 4876      7900
 4877              	.LASF7:
 4878 01a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4878      206C6F6E 
 4878      6720756E 
 4878      7369676E 
 4878      65642069 
 4879              	.LASF55:
 4880 01bc 65787065 		.ascii	"expectedOrientation\000"
 4880      63746564 
 4880      4F726965 
 4880      6E746174 
 4880      696F6E00 
 4881              	.LASF46:
 4882 01d0 75547572 		.ascii	"uTurn\000"
 4882      6E00
 4883              	.LASF26:
 4884 01d6 67305F78 		.ascii	"g0_xpos\000"
 4884      706F7300 
 4885              	.LASF145:
 4886 01de 73746F70 		.ascii	"stopBuffer\000"
 4886      42756666 
 4886      657200
 4887              	.LASF104:
 4888 01e9 6F6E4C69 		.ascii	"onLineFlag\000"
 4888      6E65466C 
 4888      616700
 4889              	.LASF54:
 4890 01f4 64697374 		.ascii	"distanceToTarget\000"
 4890      616E6365 
 4890      546F5461 
 4890      72676574 
 4890      00
 4891              	.LASF48:
 4892 0205 53746F70 		.ascii	"StopAtTarget\000"
 4892      41745461 
 4892      72676574 
 4892      00
 4893              	.LASF157:
 4894 0212 66697273 		.ascii	"firstTurnIteration\000"
 4894      74547572 
 4894      6E497465 
 4894      72617469 
 4894      6F6E00
 4895              	.LASF116:
 4896 0225 666C6167 		.ascii	"flag_ts_enc\000"
 4896      5F74735F 
 4896      656E6300 
 4897              	.LASF68:
 4898 0231 53335F44 		.ascii	"S3_DETECTED\000"
 4898      45544543 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 103


 4898      54454400 
 4899              	.LASF122:
 4900 023d 666C6167 		.ascii	"flag_KB_string\000"
 4900      5F4B425F 
 4900      73747269 
 4900      6E6700
 4901              	.LASF70:
 4902 024c 53355F44 		.ascii	"S5_DETECTED\000"
 4902      45544543 
 4902      54454400 
 4903              	.LASF98:
 4904 0258 72696768 		.ascii	"rightStatusFlag\000"
 4904      74537461 
 4904      74757346 
 4904      6C616700 
 4905              	.LASF50:
 4906 0268 496E7374 		.ascii	"Instruction\000"
 4906      72756374 
 4906      696F6E00 
 4907              	.LASF153:
 4908 0274 63757272 		.ascii	"currentCol\000"
 4908      656E7443 
 4908      6F6C00
 4909              	.LASF62:
 4910 027f 53746F70 		.ascii	"Stop\000"
 4910      00
 4911              	.LASF4:
 4912 0284 6C6F6E67 		.ascii	"long int\000"
 4912      20696E74 
 4912      00
 4913              	.LASF111:
 4914 028d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4914      52784275 
 4914      66666572 
 4914      00
 4915              	.LASF88:
 4916 029a 636F756E 		.ascii	"count2\000"
 4916      743200
 4917              	.LASF91:
 4918 02a1 696E7374 		.ascii	"instructionIndex\000"
 4918      72756374 
 4918      696F6E49 
 4918      6E646578 
 4918      00
 4919              	.LASF77:
 4920 02b2 5370696E 		.ascii	"SpinTurnCourseCorrection\000"
 4920      5475726E 
 4920      436F7572 
 4920      7365436F 
 4920      72726563 
 4921              	.LASF47:
 4922 02cb 466F7277 		.ascii	"ForwardUntilTarget\000"
 4922      61726455 
 4922      6E74696C 
 4922      54617267 
 4922      657400
 4923              	.LASF66:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 104


 4924 02de 4261636B 		.ascii	"Backward\000"
 4924      77617264 
 4924      00
 4925              	.LASF14:
 4926 02e7 75696E74 		.ascii	"uint8\000"
 4926      3800
 4927              	.LASF6:
 4928 02ed 6C6F6E67 		.ascii	"long long int\000"
 4928      206C6F6E 
 4928      6720696E 
 4928      7400
 4929              	.LASF20:
 4930 02fb 646F7562 		.ascii	"double\000"
 4930      6C6500
 4931              	.LASF100:
 4932 0302 63757272 		.ascii	"currentIgnoreL\000"
 4932      656E7449 
 4932      676E6F72 
 4932      654C00
 4933              	.LASF123:
 4934 0311 64617461 		.ascii	"dataready_flag\000"
 4934      72656164 
 4934      795F666C 
 4934      616700
 4935              	.LASF73:
 4936 0320 6D61696E 		.ascii	"main\000"
 4936      00
 4937              	.LASF101:
 4938 0325 63757272 		.ascii	"currentIgnoreR\000"
 4938      656E7449 
 4938      676E6F72 
 4938      655200
 4939              	.LASF61:
 4940 0334 41646A75 		.ascii	"AdjustToTheRight\000"
 4940      7374546F 
 4940      54686552 
 4940      69676874 
 4940      00
 4941              	.LASF109:
 4942 0345 666F7277 		.ascii	"forwardAfterTurnLIgnore\000"
 4942      61726441 
 4942      66746572 
 4942      5475726E 
 4942      4C49676E 
 4943              	.LASF120:
 4944 035d 666C6167 		.ascii	"flag_rx\000"
 4944      5F727800 
 4945              	.LASF16:
 4946 0365 75696E74 		.ascii	"uint32\000"
 4946      333200
 4947              	.LASF86:
 4948 036c 6E657874 		.ascii	"nextInstruction\000"
 4948      496E7374 
 4948      72756374 
 4948      696F6E00 
 4949              	.LASF162:
 4950 037c 636F756E 		.ascii	"count\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 105


 4950      7400
 4951              	.LASF126:
 4952 0382 6C696E65 		.ascii	"line\000"
 4952      00
 4953              	.LASF37:
 4954 0387 67325F64 		.ascii	"g2_direction\000"
 4954      69726563 
 4954      74696F6E 
 4954      00
 4955              	.LASF108:
 4956 0394 646F6E74 		.ascii	"dontOverwriteLeftIgnore\000"
 4956      4F766572 
 4956      77726974 
 4956      654C6566 
 4956      7449676E 
 4957              	.LASF142:
 4958 03ac 71756164 		.ascii	"quadDec2Count\000"
 4958      44656332 
 4958      436F756E 
 4958      7400
 4959              	.LASF58:
 4960 03ba 5475726E 		.ascii	"TurnRight\000"
 4960      52696768 
 4960      7400
 4961              	.LASF65:
 4962 03c4 466F7277 		.ascii	"ForwardAfterTurn\000"
 4962      61726441 
 4962      66746572 
 4962      5475726E 
 4962      00
 4963              	.LASF49:
 4964 03d5 64617461 		.ascii	"data_main\000"
 4964      5F6D6169 
 4964      6E00
 4965              	.LASF80:
 4966 03df 626C6F63 		.ascii	"blocksize\000"
 4966      6B73697A 
 4966      6500
 4967              	.LASF112:
 4968 03e9 74735F65 		.ascii	"ts_enc\000"
 4968      6E6300
 4969              	.LASF5:
 4970 03f0 6C6F6E67 		.ascii	"long unsigned int\000"
 4970      20756E73 
 4970      69676E65 
 4970      6420696E 
 4970      7400
 4971              	.LASF106:
 4972 0402 746F6F4C 		.ascii	"tooLateFlag\000"
 4972      61746546 
 4972      6C616700 
 4973              	.LASF149:
 4974 040e 626C6F63 		.ascii	"blockSizeTotal\000"
 4974      6B53697A 
 4974      65546F74 
 4974      616C00
 4975              	.LASF163:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 106


 4976 041d 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4976      7465436C 
 4976      6F636B77 
 4976      69736531 
 4976      38304465 
 4977              	.LASF64:
 4978 0437 77616974 		.ascii	"waitForTurn\000"
 4978      466F7254 
 4978      75726E00 
 4979              	.LASF57:
 4980 0443 466F7277 		.ascii	"Forward\000"
 4980      61726400 
 4981              	.LASF3:
 4982 044b 73686F72 		.ascii	"short unsigned int\000"
 4982      7420756E 
 4982      7369676E 
 4982      65642069 
 4982      6E7400
 4983              	.LASF107:
 4984 045e 646F6E74 		.ascii	"dontOverwriteRightIgnore\000"
 4984      4F766572 
 4984      77726974 
 4984      65526967 
 4984      68744967 
 4985              	.LASF105:
 4986 0477 746F6F45 		.ascii	"tooEarlyFlag\000"
 4986      61726C79 
 4986      466C6167 
 4986      00
 4987              	.LASF90:
 4988 0484 53657452 		.ascii	"SetRobotMovement\000"
 4988      6F626F74 
 4988      4D6F7665 
 4988      6D656E74 
 4988      00
 4989              	.LASF17:
 4990 0495 696E7438 		.ascii	"int8\000"
 4990      00
 4991              	.LASF78:
 4992 049a 73706565 		.ascii	"speedTimer\000"
 4992      6454696D 
 4992      657200
 4993              	.LASF12:
 4994 04a5 5F5F696E 		.ascii	"__int32_t\000"
 4994      7433325F 
 4994      7400
 4995              	.LASF159:
 4996 04af 6D61696E 		.ascii	"main.c\000"
 4996      2E6300
 4997              	.LASF31:
 4998 04b6 67315F79 		.ascii	"g1_ypos\000"
 4998      706F7300 
 4999              	.LASF84:
 5000 04be 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 5000      546F4E65 
 5000      7874496E 
 5000      73747275 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 107


 5000      6374696F 
 5001              	.LASF2:
 5002 04d4 73686F72 		.ascii	"short int\000"
 5002      7420696E 
 5002      7400
 5003              	.LASF89:
 5004 04de 71756164 		.ascii	"quadPulseCount\000"
 5004      50756C73 
 5004      65436F75 
 5004      6E7400
 5005              	.LASF115:
 5006 04ed 74735F64 		.ascii	"ts_display\000"
 5006      6973706C 
 5006      617900
 5007              	.LASF148:
 5008 04f8 63757272 		.ascii	"currentFoodListIndex\000"
 5008      656E7446 
 5008      6F6F644C 
 5008      69737449 
 5008      6E646578 
 5009              	.LASF75:
 5010 050d 466F7277 		.ascii	"ForwardCourseCorrection\000"
 5010      61726443 
 5010      6F757273 
 5010      65436F72 
 5010      72656374 
 5011              	.LASF121:
 5012 0525 666C6167 		.ascii	"flag_packet\000"
 5012      5F706163 
 5012      6B657400 
 5013              	.LASF118:
 5014 0531 666C6167 		.ascii	"flag_ts_speed\000"
 5014      5F74735F 
 5014      73706565 
 5014      6400
 5015              	.LASF32:
 5016 053f 67315F73 		.ascii	"g1_speed\000"
 5016      70656564 
 5016      00
 5017              	.LASF39:
 5018 0548 4C656674 		.ascii	"Left\000"
 5018      00
 5019              	.LASF96:
 5020 054d 75547572 		.ascii	"uTurnFinishedFlag\000"
 5020      6E46696E 
 5020      69736865 
 5020      64466C61 
 5020      6700
 5021              	.LASF10:
 5022 055f 73697A65 		.ascii	"sizetype\000"
 5022      74797065 
 5022      00
 5023              	.LASF152:
 5024 0568 63757272 		.ascii	"currentRow\000"
 5024      656E7452 
 5024      6F7700
 5025              	.LASF129:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 108


 5026 0573 73797374 		.ascii	"system_state\000"
 5026      656D5F73 
 5026      74617465 
 5026      00
 5027              	.LASF33:
 5028 0580 67315F64 		.ascii	"g1_direction\000"
 5028      69726563 
 5028      74696F6E 
 5028      00
 5029              	.LASF128:
 5030 058d 75736242 		.ascii	"usbBuffer\000"
 5030      75666665 
 5030      7200
 5031              	.LASF44:
 5032 0597 77616974 		.ascii	"waitForLeftTurn\000"
 5032      466F724C 
 5032      65667454 
 5032      75726E00 
 5033              	.LASF30:
 5034 05a7 67315F78 		.ascii	"g1_xpos\000"
 5034      706F7300 
 5035              	.LASF35:
 5036 05af 67325F79 		.ascii	"g2_ypos\000"
 5036      706F7300 
 5037              	.LASF99:
 5038 05b7 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 5038      436F7572 
 5038      7365436F 
 5038      72726563 
 5038      74696F6E 
 5039              	.LASF124:
 5040 05d3 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5040      5F72665F 
 5040      7472616E 
 5040      736D6973 
 5040      73696F6E 
 5041              	.LASF150:
 5042 05ef 78426C6F 		.ascii	"xBlocksize\000"
 5042      636B7369 
 5042      7A6500
 5043              	.LASF151:
 5044 05fa 79426C6F 		.ascii	"yBlocksize\000"
 5044      636B7369 
 5044      7A6500
 5045              	.LASF19:
 5046 0605 666C6F61 		.ascii	"float\000"
 5046      7400
 5047              	.LASF139:
 5048 060b 746F7461 		.ascii	"totalMilliseconds\000"
 5048      6C4D696C 
 5048      6C697365 
 5048      636F6E64 
 5048      7300
 5049              	.LASF63:
 5050 061d 556E6B6E 		.ascii	"Unknown\000"
 5050      6F776E00 
 5051              	.LASF85:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 109


 5052 0625 47657449 		.ascii	"GetInstructionAtIndex\000"
 5052      6E737472 
 5052      75637469 
 5052      6F6E4174 
 5052      496E6465 
 5053              	.LASF144:
 5054 063b 6B656570 		.ascii	"keepLedOn\000"
 5054      4C65644F 
 5054      6E00
 5055              	.LASF113:
 5056 0645 74735F75 		.ascii	"ts_update\000"
 5056      70646174 
 5056      6500
 5057              	.LASF95:
 5058 064f 75547572 		.ascii	"uTurnStartedFlag\000"
 5058      6E537461 
 5058      72746564 
 5058      466C6167 
 5058      00
 5059              	.LASF13:
 5060 0660 696E7433 		.ascii	"int32_t\000"
 5060      325F7400 
 5061              	.LASF1:
 5062 0668 756E7369 		.ascii	"unsigned char\000"
 5062      676E6564 
 5062      20636861 
 5062      7200
 5063              	.LASF15:
 5064 0676 75696E74 		.ascii	"uint16\000"
 5064      313600
 5065              	.LASF42:
 5066 067d 496E7374 		.ascii	"InstructionDirection\000"
 5066      72756374 
 5066      696F6E44 
 5066      69726563 
 5066      74696F6E 
 5067              	.LASF34:
 5068 0692 67325F78 		.ascii	"g2_xpos\000"
 5068      706F7300 
 5069              	.LASF136:
 5070 069a 70726576 		.ascii	"previousInstruction\000"
 5070      696F7573 
 5070      496E7374 
 5070      72756374 
 5070      696F6E00 
 5071              	.LASF134:
 5072 06ae 70726576 		.ascii	"previousOrientation\000"
 5072      696F7573 
 5072      4F726965 
 5072      6E746174 
 5072      696F6E00 
 5073              	.LASF155:
 5074 06c2 69676E6F 		.ascii	"ignoreSensor\000"
 5074      72655365 
 5074      6E736F72 
 5074      00
 5075              	.LASF97:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 110


 5076 06cf 6C656674 		.ascii	"leftStatusFlag\000"
 5076      53746174 
 5076      7573466C 
 5076      616700
 5077              	.LASF81:
 5078 06de 63757272 		.ascii	"currentInstructionDirection\000"
 5078      656E7449 
 5078      6E737472 
 5078      75637469 
 5078      6F6E4469 
 5079              	.LASF24:
 5080 06fa 726F626F 		.ascii	"robot_ypos\000"
 5080      745F7970 
 5080      6F7300
 5081              	.LASF60:
 5082 0705 41646A75 		.ascii	"AdjustToTheLeft\000"
 5082      7374546F 
 5082      5468654C 
 5082      65667400 
 5083              	.LASF43:
 5084 0715 476F466F 		.ascii	"GoForward\000"
 5084      72776172 
 5084      6400
 5085              	.LASF40:
 5086 071f 52696768 		.ascii	"Right\000"
 5086      7400
 5087              	.LASF156:
 5088 0725 6C617374 		.ascii	"lastDirectionAfter180\000"
 5088      44697265 
 5088      6374696F 
 5088      6E416674 
 5088      65723138 
 5089              	.LASF137:
 5090 073b 6E756D53 		.ascii	"numSteps\000"
 5090      74657073 
 5090      00
 5091              	.LASF76:
 5092 0744 5370696E 		.ascii	"SpinCourseCorrection\000"
 5092      436F7572 
 5092      7365436F 
 5092      72726563 
 5092      74696F6E 
 5093              	.LASF119:
 5094 0759 666C6167 		.ascii	"flag_ts_display\000"
 5094      5F74735F 
 5094      64697370 
 5094      6C617900 
 5095              	.LASF74:
 5096 0769 6E657744 		.ascii	"newDistance\000"
 5096      69737461 
 5096      6E636500 
 5097              	.LASF9:
 5098 0775 6C6F6E67 		.ascii	"long double\000"
 5098      20646F75 
 5098      626C6500 
 5099              	.LASF11:
 5100 0781 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 111


 5100      00
 5101              	.LASF27:
 5102 0786 67305F79 		.ascii	"g0_ypos\000"
 5102      706F7300 
 5103              	.LASF67:
 5104 078e 5370696E 		.ascii	"Spin180\000"
 5104      31383000 
 5105              	.LASF8:
 5106 0796 756E7369 		.ascii	"unsigned int\000"
 5106      676E6564 
 5106      20696E74 
 5106      00
 5107              	.LASF21:
 5108 07a3 72737369 		.ascii	"rssi\000"
 5108      00
 5109              	.LASF22:
 5110 07a8 696E6465 		.ascii	"index\000"
 5110      7800
 5111              	.LASF71:
 5112 07ae 53365F44 		.ascii	"S6_DETECTED\000"
 5112      45544543 
 5112      54454400 
 5113              	.LASF130:
 5114 07ba 666F6F64 		.ascii	"food_list\000"
 5114      5F6C6973 
 5114      7400
 5115              	.LASF38:
 5116 07c4 446F776E 		.ascii	"Down\000"
 5116      00
 5117              	.LASF141:
 5118 07c9 62756666 		.ascii	"buffer\000"
 5118      657200
 5119              	.LASF117:
 5120 07d0 666C6167 		.ascii	"flag_ts_update\000"
 5120      5F74735F 
 5120      75706461 
 5120      746500
 5121              	.LASF125:
 5122 07df 64697370 		.ascii	"displaystring\000"
 5122      6C617973 
 5122      7472696E 
 5122      6700
 5123              	.LASF23:
 5124 07ed 726F626F 		.ascii	"robot_xpos\000"
 5124      745F7870 
 5124      6F7300
 5125              	.LASF133:
 5126 07f8 63757272 		.ascii	"currentRobotOrientation\000"
 5126      656E7452 
 5126      6F626F74 
 5126      4F726965 
 5126      6E746174 
 5127              	.LASF131:
 5128 0810 63757272 		.ascii	"currentDirection\000"
 5128      656E7444 
 5128      69726563 
 5128      74696F6E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 112


 5128      00
 5129              	.LASF79:
 5130 0821 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 5130      6F76656D 
 5130      656E7441 
 5130      63636F72 
 5130      64696E67 
 5131              	.LASF93:
 5132 0843 7475726E 		.ascii	"turnFinishedFlag\000"
 5132      46696E69 
 5132      73686564 
 5132      466C6167 
 5132      00
 5133              	.LASF138:
 5134 0854 696E7374 		.ascii	"instructionList\000"
 5134      72756374 
 5134      696F6E4C 
 5134      69737400 
 5135              	.LASF45:
 5136 0864 77616974 		.ascii	"waitForRightTurn\000"
 5136      466F7252 
 5136      69676874 
 5136      5475726E 
 5136      00
 5137              	.LASF147:
 5138 0875 6A756E63 		.ascii	"junctionConfiguration\000"
 5138      74696F6E 
 5138      436F6E66 
 5138      69677572 
 5138      6174696F 
 5139              	.LASF135:
 5140 088b 63757272 		.ascii	"currentInstruction\000"
 5140      656E7449 
 5140      6E737472 
 5140      75637469 
 5140      6F6E00
 5141              	.LASF102:
 5142 089e 746F7461 		.ascii	"totalLineCount\000"
 5142      6C4C696E 
 5142      65436F75 
 5142      6E7400
 5143              	.LASF87:
 5144 08ad 636F756E 		.ascii	"count1\000"
 5144      743100
 5145              	.LASF72:
 5146 08b4 54494D45 		.ascii	"TIMER_FINISH\000"
 5146      525F4649 
 5146      4E495348 
 5146      00
 5147              	.LASF83:
 5148 08c1 52657365 		.ascii	"ResetSensorFlags\000"
 5148      7453656E 
 5148      736F7246 
 5148      6C616773 
 5148      00
 5149              	.LASF18:
 5150 08d2 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccLJZpTU.s 			page 113


 5150      3600
 5151              	.LASF161:
 5152 08d8 71756164 		.ascii	"quadCountToRPM\000"
 5152      436F756E 
 5152      74546F52 
 5152      504D00
 5153              	.LASF52:
 5154 08e7 69676E6F 		.ascii	"ignoreL\000"
 5154      72654C00 
 5155              	.LASF59:
 5156 08ef 5475726E 		.ascii	"TurnLeft\000"
 5156      4C656674 
 5156      00
 5157              	.LASF53:
 5158 08f8 69676E6F 		.ascii	"ignoreR\000"
 5158      72655200 
 5159              	.LASF92:
 5160 0900 7475726E 		.ascii	"turnStartedFlag\000"
 5160      53746172 
 5160      74656446 
 5160      6C616700 
 5161              	.LASF28:
 5162 0910 67305F73 		.ascii	"g0_speed\000"
 5162      70656564 
 5162      00
 5163              	.LASF110:
 5164 0919 666F7277 		.ascii	"forwardAfterTurnRIgnore\000"
 5164      61726441 
 5164      66746572 
 5164      5475726E 
 5164      5249676E 
 5165              	.LASF25:
 5166 0931 726F626F 		.ascii	"robot_orientation\000"
 5166      745F6F72 
 5166      69656E74 
 5166      6174696F 
 5166      6E00
 5167              	.LASF154:
 5168 0943 73746F70 		.ascii	"stoppedAfterTurn\000"
 5168      70656441 
 5168      66746572 
 5168      5475726E 
 5168      00
 5169              	.LASF146:
 5170 0954 666F7277 		.ascii	"forwardBuffer\000"
 5170      61726442 
 5170      75666665 
 5170      7200
 5171              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
