ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,16,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              	turnStartedFlag:
 173 0034 00       		.space	1
 174              	turnFinishedFlag:
 175 0035 00       		.space	1
 176              	forwardUntilTargetStartedFlag:
 177 0036 00       		.space	1
 178              	uTurnStartedFlag:
 179 0037 00       		.space	1
 180              	uTurnFinishedFlag:
 181 0038 00       		.space	1
 182              	leftStatusFlag:
 183 0039 00       		.space	1
 184              	rightStatusFlag:
 185 003a 00       		.space	1
 186              	spinCourseCorrectionStarted:
 187 003b 00       		.space	1
 188              	currentIgnoreL:
 189 003c 00       		.space	1
 190              		.data
 191              		.type	currentIgnoreR, %object
 192              		.size	currentIgnoreR, 1
 193              	currentIgnoreR:
 194 0045 01       		.byte	1
 195              		.global	junctionConfiguration
 196              		.bss
 197 003d 000000   		.align	2
 198              		.type	junctionConfiguration, %object
 199              		.size	junctionConfiguration, 4
 200              	junctionConfiguration:
 201 0040 00000000 		.space	4
 202              		.global	blockSizeTotal
 203              		.align	2
 204              		.type	blockSizeTotal, %object
 205              		.size	blockSizeTotal, 4
 206              	blockSizeTotal:
 207 0044 00000000 		.space	4
 208              		.global	__aeabi_i2d
 209              		.global	__aeabi_dmul
 210              		.global	__aeabi_ddiv
 211              		.global	__aeabi_d2f
 212              		.global	__aeabi_fadd
 213              		.section	.text.speedTimer,"ax",%progbits
 214              		.align	2
 215              		.global	speedTimer
 216              		.thumb
 217              		.thumb_func
 218              		.type	speedTimer, %function
 219              	speedTimer:
 220              	.LFB64:
 221              		.file 1 "main.c"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 5


   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** 
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 6


  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** uint8 junctionConfiguration[4] = {0};
  67:main.c        **** 
  68:main.c        **** float blockSizeTotal = 0;
  69:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  70:main.c        **** 
  71:main.c        **** CY_ISR (speedTimer) {
 222              		.loc 1 71 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 90B5     		push	{r4, r7, lr}
 227              		.cfi_def_cfa_offset 12
 228              		.cfi_offset 4, -12
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 83B0     		sub	sp, sp, #12
 232              		.cfi_def_cfa_offset 24
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
  72:main.c        ****     timerInt = 1;
 235              		.loc 1 72 0
 236 0006 344B     		ldr	r3, .L4+16
 237 0008 0122     		movs	r2, #1
 238 000a 1A60     		str	r2, [r3]
  73:main.c        ****     //quadDec_M1 used for turning macros
  74:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 239              		.loc 1 74 0
 240 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 241 0010 0346     		mov	r3, r0
 242 0012 1A46     		mov	r2, r3
 243 0014 314B     		ldr	r3, .L4+20
 244 0016 1A60     		str	r2, [r3]
  75:main.c        ****     
  76:main.c        ****     if ((currentDirection == Forward || 
 245              		.loc 1 76 0
 246 0018 314B     		ldr	r3, .L4+24
 247 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248 001c 002B     		cmp	r3, #0
 249 001e 13D0     		beq	.L2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 250              		.loc 1 77 0 discriminator 1
 251 0020 2F4B     		ldr	r3, .L4+24
 252 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 253              		.loc 1 76 0 discriminator 1
 254 0024 082B     		cmp	r3, #8
 255 0026 0FD0     		beq	.L2
  78:main.c        ****         currentDirection == waitForTurn || 
 256              		.loc 1 78 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 7


 257 0028 2D4B     		ldr	r3, .L4+24
 258 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 259              		.loc 1 77 0
 260 002c 072B     		cmp	r3, #7
 261 002e 0BD0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 262              		.loc 1 79 0
 263 0030 2B4B     		ldr	r3, .L4+24
 264 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:main.c        ****         currentDirection == waitForTurn || 
 265              		.loc 1 78 0
 266 0034 032B     		cmp	r3, #3
 267 0036 07D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 268              		.loc 1 80 0
 269 0038 294B     		ldr	r3, .L4+24
 270 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 271              		.loc 1 79 0
 272 003c 042B     		cmp	r3, #4
 273 003e 03D0     		beq	.L2
  81:main.c        ****         currentDirection == Backward) &&
 274              		.loc 1 81 0
 275 0040 274B     		ldr	r3, .L4+24
 276 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 277              		.loc 1 80 0
 278 0044 092B     		cmp	r3, #9
 279 0046 34D1     		bne	.L3
 280              	.L2:
  82:main.c        ****         quadDec2Count != 0) {
 281              		.loc 1 82 0
 282 0048 244B     		ldr	r3, .L4+20
 283 004a 1B68     		ldr	r3, [r3]
  81:main.c        ****         currentDirection == Backward) &&
 284              		.loc 1 81 0
 285 004c 002B     		cmp	r3, #0
 286 004e 30D0     		beq	.L3
 287              	.LBB2:
  83:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  84:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 288              		.loc 1 84 0
 289 0050 224B     		ldr	r3, .L4+20
 290 0052 1B68     		ldr	r3, [r3]
 291 0054 002B     		cmp	r3, #0
 292 0056 B8BF     		it	lt
 293 0058 5B42     		rsblt	r3, r3, #0
 294 005a 1846     		mov	r0, r3
 295 005c FFF7FEFF 		bl	__aeabi_i2d
 296 0060 19A3     		adr	r3, .L4
 297 0062 D3E90023 		ldrd	r2, [r3]
 298 0066 FFF7FEFF 		bl	__aeabi_dmul
 299 006a 0346     		mov	r3, r0
 300 006c 0C46     		mov	r4, r1
 301 006e 1846     		mov	r0, r3
 302 0070 2146     		mov	r1, r4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 8


 303 0072 17A3     		adr	r3, .L4+8
 304 0074 D3E90023 		ldrd	r2, [r3]
 305 0078 FFF7FEFF 		bl	__aeabi_dmul
 306 007c 0346     		mov	r3, r0
 307 007e 0C46     		mov	r4, r1
 308 0080 1846     		mov	r0, r3
 309 0082 2146     		mov	r1, r4
 310 0084 4FF00002 		mov	r2, #0
 311 0088 164B     		ldr	r3, .L4+28
 312 008a FFF7FEFF 		bl	__aeabi_ddiv
 313 008e 0346     		mov	r3, r0
 314 0090 0C46     		mov	r4, r1
 315 0092 1846     		mov	r0, r3
 316 0094 2146     		mov	r1, r4
 317 0096 FFF7FEFF 		bl	__aeabi_d2f
 318 009a 0346     		mov	r3, r0
 319 009c 7B60     		str	r3, [r7, #4]	@ float
  85:main.c        ****         
  86:main.c        ****         totalDistance = totalDistance + newDistance;
 320              		.loc 1 86 0
 321 009e 124B     		ldr	r3, .L4+32
 322 00a0 1B68     		ldr	r3, [r3]	@ float
 323 00a2 7968     		ldr	r1, [r7, #4]	@ float
 324 00a4 1846     		mov	r0, r3
 325 00a6 FFF7FEFF 		bl	__aeabi_fadd
 326 00aa 0346     		mov	r3, r0
 327 00ac 1A46     		mov	r2, r3
 328 00ae 0E4B     		ldr	r3, .L4+32
 329 00b0 1A60     		str	r2, [r3]	@ float
 330              	.L3:
 331              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     
  89:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 332              		.loc 1 89 0
 333 00b2 0020     		movs	r0, #0
 334 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  90:main.c        ****     QuadDec_M2_Start(); // restart counter
 335              		.loc 1 90 0
 336 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        ****     
  92:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 337              		.loc 1 92 0
 338 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  93:main.c        **** }
 339              		.loc 1 93 0
 340 00c0 00BF     		nop
 341 00c2 0C37     		adds	r7, r7, #12
 342              		.cfi_def_cfa_offset 12
 343 00c4 BD46     		mov	sp, r7
 344              		.cfi_def_cfa_register 13
 345              		@ sp needed
 346 00c6 90BD     		pop	{r4, r7, pc}
 347              	.L5:
 348              		.align	3
 349              	.L4:
 350 00c8 182D4454 		.word	1413754136
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 9


 351 00cc FB210940 		.word	1074340347
 352 00d0 00000000 		.word	0
 353 00d4 00205040 		.word	1078992896
 354 00d8 00000000 		.word	timerInt
 355 00dc 00000000 		.word	quadDec2Count
 356 00e0 00000000 		.word	currentDirection
 357 00e4 00806C40 		.word	1080852480
 358 00e8 00000000 		.word	totalDistance
 359              		.cfi_endproc
 360              	.LFE64:
 361              		.size	speedTimer, .-speedTimer
 362              		.section	.text.S3_DETECTED,"ax",%progbits
 363              		.align	2
 364              		.global	S3_DETECTED
 365              		.thumb
 366              		.thumb_func
 367              		.type	S3_DETECTED, %function
 368              	S3_DETECTED:
 369              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 370              		.loc 1 95 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 0000 80B4     		push	{r7}
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 380              		.loc 1 97 0
 381 0004 034B     		ldr	r3, .L7
 382 0006 0122     		movs	r2, #1
 383 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 384              		.loc 1 99 0
 385 000a 00BF     		nop
 386 000c BD46     		mov	sp, r7
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 000e 80BC     		pop	{r7}
 390              		.cfi_restore 7
 391              		.cfi_def_cfa_offset 0
 392 0010 7047     		bx	lr
 393              	.L8:
 394 0012 00BF     		.align	2
 395              	.L7:
 396 0014 00000000 		.word	s3
 397              		.cfi_endproc
 398              	.LFE65:
 399              		.size	S3_DETECTED, .-S3_DETECTED
 400              		.section	.text.S4_DETECTED,"ax",%progbits
 401              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 10


 402              		.global	S4_DETECTED
 403              		.thumb
 404              		.thumb_func
 405              		.type	S4_DETECTED, %function
 406              	S4_DETECTED:
 407              	.LFB66:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 408              		.loc 1 101 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 418              		.loc 1 103 0
 419 0004 034B     		ldr	r3, .L10
 420 0006 0122     		movs	r2, #1
 421 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 422              		.loc 1 105 0
 423 000a 00BF     		nop
 424 000c BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 000e 80BC     		pop	{r7}
 428              		.cfi_restore 7
 429              		.cfi_def_cfa_offset 0
 430 0010 7047     		bx	lr
 431              	.L11:
 432 0012 00BF     		.align	2
 433              	.L10:
 434 0014 00000000 		.word	s4
 435              		.cfi_endproc
 436              	.LFE66:
 437              		.size	S4_DETECTED, .-S4_DETECTED
 438              		.section	.text.S5_DETECTED,"ax",%progbits
 439              		.align	2
 440              		.global	S5_DETECTED
 441              		.thumb
 442              		.thumb_func
 443              		.type	S5_DETECTED, %function
 444              	S5_DETECTED:
 445              	.LFB67:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 446              		.loc 1 107 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 11


 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 456              		.loc 1 109 0
 457 0004 034B     		ldr	r3, .L13
 458 0006 0122     		movs	r2, #1
 459 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 460              		.loc 1 111 0
 461 000a 00BF     		nop
 462 000c BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 000e 80BC     		pop	{r7}
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0010 7047     		bx	lr
 469              	.L14:
 470 0012 00BF     		.align	2
 471              	.L13:
 472 0014 00000000 		.word	s5
 473              		.cfi_endproc
 474              	.LFE67:
 475              		.size	S5_DETECTED, .-S5_DETECTED
 476              		.section	.text.S6_DETECTED,"ax",%progbits
 477              		.align	2
 478              		.global	S6_DETECTED
 479              		.thumb
 480              		.thumb_func
 481              		.type	S6_DETECTED, %function
 482              	S6_DETECTED:
 483              	.LFB68:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 484              		.loc 1 113 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 494              		.loc 1 115 0
 495 0004 034B     		ldr	r3, .L16
 496 0006 0122     		movs	r2, #1
 497 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 12


 498              		.loc 1 117 0
 499 000a 00BF     		nop
 500 000c BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 000e 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 0010 7047     		bx	lr
 507              	.L17:
 508 0012 00BF     		.align	2
 509              	.L16:
 510 0014 00000000 		.word	s6
 511              		.cfi_endproc
 512              	.LFE68:
 513              		.size	S6_DETECTED, .-S6_DETECTED
 514              		.section	.text.TIMER_FINISH,"ax",%progbits
 515              		.align	2
 516              		.global	TIMER_FINISH
 517              		.thumb
 518              		.thumb_func
 519              		.type	TIMER_FINISH, %function
 520              	TIMER_FINISH:
 521              	.LFB69:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 522              		.loc 1 119 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526 0000 80B5     		push	{r7, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 7, -8
 529              		.cfi_offset 14, -4
 530 0002 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 120:main.c        ****     if (currentDirection == Stop) {
 532              		.loc 1 120 0
 533 0004 0A4B     		ldr	r3, .L21
 534 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535 0008 052B     		cmp	r3, #5
 536 000a 05D1     		bne	.L19
 121:main.c        ****         stopBuffer = stopBuffer + 1;
 537              		.loc 1 121 0
 538 000c 094B     		ldr	r3, .L21+4
 539 000e 1B68     		ldr	r3, [r3]
 540 0010 0133     		adds	r3, r3, #1
 541 0012 084A     		ldr	r2, .L21+4
 542 0014 1360     		str	r3, [r2]
 543 0016 02E0     		b	.L20
 544              	.L19:
 122:main.c        ****     } else {
 123:main.c        ****         stopBuffer = 0;
 545              		.loc 1 123 0
 546 0018 064B     		ldr	r3, .L21+4
 547 001a 0022     		movs	r2, #0
 548 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 13


 549              	.L20:
 124:main.c        ****     }
 125:main.c        ****     SetRobotMovement(); 
 550              		.loc 1 125 0
 551 001e FFF7FEFF 		bl	SetRobotMovement
 126:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 552              		.loc 1 126 0
 553 0022 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     Timer_LED_ReadStatusRegister();
 554              		.loc 1 127 0
 555 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 128:main.c        **** }
 556              		.loc 1 128 0
 557 002a 00BF     		nop
 558 002c 80BD     		pop	{r7, pc}
 559              	.L22:
 560 002e 00BF     		.align	2
 561              	.L21:
 562 0030 00000000 		.word	currentDirection
 563 0034 00000000 		.word	stopBuffer
 564              		.cfi_endproc
 565              	.LFE69:
 566              		.size	TIMER_FINISH, .-TIMER_FINISH
 567              		.section	.text.main,"ax",%progbits
 568              		.align	2
 569              		.global	main
 570              		.thumb
 571              		.thumb_func
 572              		.type	main, %function
 573              	main:
 574              	.LFB70:
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** int main() {
 575              		.loc 1 131 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 90B5     		push	{r4, r7, lr}
 580              		.cfi_def_cfa_offset 12
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 85B0     		sub	sp, sp, #20
 585              		.cfi_def_cfa_offset 32
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 588              		.loc 1 133 0
 589              		.syntax unified
 590              	@ 133 "main.c" 1
 591 0006 62B6     		CPSIE   i
 592              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 593              		.loc 1 134 0
 594              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 14


 595              		.syntax unified
 596 0008 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 597              		.loc 1 135 0
 598 000c FFF7FEFF 		bl	init
 136:main.c        ****     
 137:main.c        ****     instructionList = findPath(map, food_list, 0);
 599              		.loc 1 137 0
 600 0010 0022     		movs	r2, #0
 601 0012 2F49     		ldr	r1, .L27
 602 0014 2F48     		ldr	r0, .L27+4
 603 0016 FFF7FEFF 		bl	findPath
 604 001a 0246     		mov	r2, r0
 605 001c 2E4B     		ldr	r3, .L27+8
 606 001e 1A60     		str	r2, [r3]
 138:main.c        ****     numSteps = instructionsListLength();
 607              		.loc 1 138 0
 608 0020 FFF7FEFF 		bl	instructionsListLength
 609 0024 0346     		mov	r3, r0
 610 0026 1A46     		mov	r2, r3
 611 0028 2C4B     		ldr	r3, .L27+12
 612 002a 1A60     		str	r2, [r3]
 139:main.c        ****     
 140:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 613              		.loc 1 140 0
 614 002c 2B4B     		ldr	r3, .L27+12
 615 002e 1968     		ldr	r1, [r3]
 616 0030 294B     		ldr	r3, .L27+8
 617 0032 1A68     		ldr	r2, [r3]
 618 0034 2A4C     		ldr	r4, .L27+16
 619 0036 3B46     		mov	r3, r7
 620 0038 1846     		mov	r0, r3
 621 003a FFF7FEFF 		bl	GetInstructionAtIndex
 622 003e 3B46     		mov	r3, r7
 623 0040 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 624 0042 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 141:main.c        ****     
 142:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 625              		.loc 1 142 0
 626 0046 244B     		ldr	r3, .L27+8
 627 0048 1A68     		ldr	r2, [r3]
 628 004a 264B     		ldr	r3, .L27+20
 629 004c 1B68     		ldr	r3, [r3]
 630 004e 1B01     		lsls	r3, r3, #4
 631 0050 1344     		add	r3, r3, r2
 632 0052 5B68     		ldr	r3, [r3, #4]
 633 0054 DAB2     		uxtb	r2, r3
 634 0056 244B     		ldr	r3, .L27+24
 635 0058 1A70     		strb	r2, [r3]
 143:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 636              		.loc 1 143 0
 637 005a 1F4B     		ldr	r3, .L27+8
 638 005c 1A68     		ldr	r2, [r3]
 639 005e 214B     		ldr	r3, .L27+20
 640 0060 1B68     		ldr	r3, [r3]
 641 0062 1B01     		lsls	r3, r3, #4
 642 0064 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 15


 643 0066 9B68     		ldr	r3, [r3, #8]
 644 0068 DAB2     		uxtb	r2, r3
 645 006a 204B     		ldr	r3, .L27+28
 646 006c 1A70     		strb	r2, [r3]
 144:main.c        ****     
 145:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 647              		.loc 1 145 0
 648 006e 2048     		ldr	r0, .L27+32
 649 0070 FFF7FEFF 		bl	isr_speed_StartEx
 146:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 650              		.loc 1 146 0
 651 0074 1F48     		ldr	r0, .L27+36
 652 0076 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 147:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 653              		.loc 1 147 0
 654 007a 1F48     		ldr	r0, .L27+40
 655 007c FFF7FEFF 		bl	S3_detected_StartEx
 148:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 656              		.loc 1 148 0
 657 0080 1E48     		ldr	r0, .L27+44
 658 0082 FFF7FEFF 		bl	S4_detected_StartEx
 149:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 659              		.loc 1 149 0
 660 0086 1E48     		ldr	r0, .L27+48
 661 0088 FFF7FEFF 		bl	S5_detected_StartEx
 150:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 662              		.loc 1 150 0
 663 008c 1D48     		ldr	r0, .L27+52
 664 008e FFF7FEFF 		bl	S6_detected_StartEx
 151:main.c        ****     Timer_LED_Start();
 665              		.loc 1 151 0
 666 0092 FFF7FEFF 		bl	Timer_LED_Start
 152:main.c        **** 
 153:main.c        ****     
 154:main.c        **** // ------USB SETUP ----------------    
 155:main.c        **** #ifdef USE_USB    
 156:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 667              		.loc 1 156 0
 668 0096 0121     		movs	r1, #1
 669 0098 0020     		movs	r0, #0
 670 009a FFF7FEFF 		bl	USBUART_Start
 157:main.c        **** #endif        
 158:main.c        ****     RF_BT_SELECT_Write(0);
 671              		.loc 1 158 0
 672 009e 0020     		movs	r0, #0
 673 00a0 FFF7FEFF 		bl	RF_BT_SELECT_Write
 674              	.L26:
 159:main.c        ****     
 160:main.c        ****     //usbPutString("Initialised UART");
 161:main.c        ****     for(;;)
 162:main.c        ****     {
 163:main.c        ****         if(timerInt == 1) {
 675              		.loc 1 163 0
 676 00a4 184B     		ldr	r3, .L27+56
 677 00a6 1B68     		ldr	r3, [r3]
 678 00a8 012B     		cmp	r3, #1
 679 00aa 08D1     		bne	.L24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 16


 164:main.c        ****             timerInt = 0;
 680              		.loc 1 164 0
 681 00ac 164B     		ldr	r3, .L27+56
 682 00ae 0022     		movs	r2, #0
 683 00b0 1A60     		str	r2, [r3]
 165:main.c        ****             // calculate RPM of M2
 166:main.c        ****             quadCountToRPM(quadDec2Count);
 684              		.loc 1 166 0
 685 00b2 164B     		ldr	r3, .L27+60
 686 00b4 1B68     		ldr	r3, [r3]
 687 00b6 9BB2     		uxth	r3, r3
 688 00b8 1846     		mov	r0, r3
 689 00ba FFF7FEFF 		bl	quadCountToRPM
 690              	.L24:
 167:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 168:main.c        ****             //usbPutString(buffer);
 169:main.c        ****             //usbPutString(" ");
 170:main.c        ****         }
 171:main.c        ****         //handle_usb();
 172:main.c        ****         if (flag_KB_string == 1)
 691              		.loc 1 172 0
 692 00be 144B     		ldr	r3, .L27+64
 693 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 694 00c2 012B     		cmp	r3, #1
 695 00c4 EED1     		bne	.L26
 173:main.c        ****         {
 174:main.c        ****             //usbPutString("Total Distance: ");
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             flag_KB_string = 0;
 696              		.loc 1 177 0
 697 00c6 124B     		ldr	r3, .L27+64
 698 00c8 0022     		movs	r2, #0
 699 00ca 1A70     		strb	r2, [r3]
 178:main.c        ****         }           
 179:main.c        ****     }
 700              		.loc 1 179 0
 701 00cc EAE7     		b	.L26
 702              	.L28:
 703 00ce 00BF     		.align	2
 704              	.L27:
 705 00d0 00000000 		.word	food_list
 706 00d4 00000000 		.word	map
 707 00d8 00000000 		.word	instructionList
 708 00dc 00000000 		.word	numSteps
 709 00e0 00000000 		.word	currentInstruction
 710 00e4 14000000 		.word	instructionIndex
 711 00e8 3C000000 		.word	currentIgnoreL
 712 00ec 45000000 		.word	currentIgnoreR
 713 00f0 00000000 		.word	speedTimer
 714 00f4 00000000 		.word	TIMER_FINISH
 715 00f8 00000000 		.word	S3_DETECTED
 716 00fc 00000000 		.word	S4_DETECTED
 717 0100 00000000 		.word	S5_DETECTED
 718 0104 00000000 		.word	S6_DETECTED
 719 0108 00000000 		.word	timerInt
 720 010c 00000000 		.word	quadDec2Count
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 17


 721 0110 00000000 		.word	flag_KB_string
 722              		.cfi_endproc
 723              	.LFE70:
 724              		.size	main, .-main
 725              		.global	__aeabi_fmul
 726              		.global	__aeabi_f2iz
 727              		.section	.text.quadCountToRPM,"ax",%progbits
 728              		.align	2
 729              		.global	quadCountToRPM
 730              		.thumb
 731              		.thumb_func
 732              		.type	quadCountToRPM, %function
 733              	quadCountToRPM:
 734              	.LFB71:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count) {
 735              		.loc 1 185 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 16
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 90B5     		push	{r4, r7, lr}
 740              		.cfi_def_cfa_offset 12
 741              		.cfi_offset 4, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 85B0     		sub	sp, sp, #20
 745              		.cfi_def_cfa_offset 32
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 0346     		mov	r3, r0
 749 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 186:main.c        ****     float cps = count/57.00;
 750              		.loc 1 186 0
 751 000a FB88     		ldrh	r3, [r7, #6]
 752 000c 1846     		mov	r0, r3
 753 000e FFF7FEFF 		bl	__aeabi_i2d
 754 0012 4FF00002 		mov	r2, #0
 755 0016 0D4B     		ldr	r3, .L31
 756 0018 FFF7FEFF 		bl	__aeabi_ddiv
 757 001c 0346     		mov	r3, r0
 758 001e 0C46     		mov	r4, r1
 759 0020 1846     		mov	r0, r3
 760 0022 2146     		mov	r1, r4
 761 0024 FFF7FEFF 		bl	__aeabi_d2f
 762 0028 0346     		mov	r3, r0
 763 002a FB60     		str	r3, [r7, #12]	@ float
 187:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 764              		.loc 1 187 0
 765 002c 0849     		ldr	r1, .L31+4
 766 002e F868     		ldr	r0, [r7, #12]	@ float
 767 0030 FFF7FEFF 		bl	__aeabi_fmul
 768 0034 0346     		mov	r3, r0
 769 0036 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 18


 770 0038 FFF7FEFF 		bl	__aeabi_f2iz
 771 003c 0346     		mov	r3, r0
 772 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 188:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 189:main.c        ****     return rpm;
 773              		.loc 1 189 0
 774 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 190:main.c        ****     //usbPutString(buffer);
 191:main.c        ****     //usbPutString("rpm ");
 192:main.c        **** }
 775              		.loc 1 192 0
 776 0044 1846     		mov	r0, r3
 777 0046 1437     		adds	r7, r7, #20
 778              		.cfi_def_cfa_offset 12
 779 0048 BD46     		mov	sp, r7
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 004a 90BD     		pop	{r4, r7, pc}
 783              	.L32:
 784              		.align	2
 785              	.L31:
 786 004c 00804C40 		.word	1078755328
 787 0050 00007041 		.word	1097859072
 788              		.cfi_endproc
 789              	.LFE71:
 790              		.size	quadCountToRPM, .-quadCountToRPM
 791              		.section	.text.ResetSensorFlags,"ax",%progbits
 792              		.align	2
 793              		.global	ResetSensorFlags
 794              		.thumb
 795              		.thumb_func
 796              		.type	ResetSensorFlags, %function
 797              	ResetSensorFlags:
 798              	.LFB72:
 193:main.c        **** 
 194:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 195:main.c        **** void ResetSensorFlags() {
 799              		.loc 1 195 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 196:main.c        ****     s3 = 0;
 809              		.loc 1 196 0
 810 0004 074B     		ldr	r3, .L34
 811 0006 0022     		movs	r2, #0
 812 0008 1A70     		strb	r2, [r3]
 197:main.c        ****     s4 = 0;
 813              		.loc 1 197 0
 814 000a 074B     		ldr	r3, .L34+4
 815 000c 0022     		movs	r2, #0
 816 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 19


 198:main.c        ****     s5 = 0;
 817              		.loc 1 198 0
 818 0010 064B     		ldr	r3, .L34+8
 819 0012 0022     		movs	r2, #0
 820 0014 1A70     		strb	r2, [r3]
 199:main.c        ****     s6 = 0;
 821              		.loc 1 199 0
 822 0016 064B     		ldr	r3, .L34+12
 823 0018 0022     		movs	r2, #0
 824 001a 1A70     		strb	r2, [r3]
 200:main.c        **** }
 825              		.loc 1 200 0
 826 001c 00BF     		nop
 827 001e BD46     		mov	sp, r7
 828              		.cfi_def_cfa_register 13
 829              		@ sp needed
 830 0020 80BC     		pop	{r7}
 831              		.cfi_restore 7
 832              		.cfi_def_cfa_offset 0
 833 0022 7047     		bx	lr
 834              	.L35:
 835              		.align	2
 836              	.L34:
 837 0024 00000000 		.word	s3
 838 0028 00000000 		.word	s4
 839 002c 00000000 		.word	s5
 840 0030 00000000 		.word	s6
 841              		.cfi_endproc
 842              	.LFE72:
 843              		.size	ResetSensorFlags, .-ResetSensorFlags
 844              		.global	xBlocksize
 845              		.data
 846 0046 0000     		.align	2
 847              		.type	xBlocksize, %object
 848              		.size	xBlocksize, 4
 849              	xBlocksize:
 850 0048 0000F442 		.word	1123287040
 851              		.global	yBlocksize
 852              		.align	2
 853              		.type	yBlocksize, %object
 854              		.size	yBlocksize, 4
 855              	yBlocksize:
 856 004c 0000A042 		.word	1117782016
 857              		.global	currentRow
 858              		.type	currentRow, %object
 859              		.size	currentRow, 1
 860              	currentRow:
 861 0050 01       		.byte	1
 862              		.global	currentCol
 863              		.type	currentCol, %object
 864              		.size	currentCol, 1
 865              	currentCol:
 866 0051 01       		.byte	1
 867              		.global	stoppedAfterTurn
 868              		.bss
 869              		.type	stoppedAfterTurn, %object
 870              		.size	stoppedAfterTurn, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 20


 871              	stoppedAfterTurn:
 872 0048 00       		.space	1
 873              		.global	ignoreSensor
 874              		.type	ignoreSensor, %object
 875              		.size	ignoreSensor, 1
 876              	ignoreSensor:
 877 0049 00       		.space	1
 878              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 879              		.align	2
 880              		.global	ForwardCourseCorrection
 881              		.thumb
 882              		.thumb_func
 883              		.type	ForwardCourseCorrection, %function
 884              	ForwardCourseCorrection:
 885              	.LFB73:
 201:main.c        **** 
 202:main.c        **** float xBlocksize = 122; // 122 mm
 203:main.c        **** float yBlocksize = 80; // 80 mm
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1;
 206:main.c        **** 
 207:main.c        **** uint8 stoppedAfterTurn = 0;
 208:main.c        **** uint8 ignoreSensor = 0;
 209:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 210:main.c        **** 
 211:main.c        **** enum RobotMovement ForwardCourseCorrection();
 212:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 886              		.loc 1 212 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 80B4     		push	{r7}
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 0002 00AF     		add	r7, sp, #0
 895              		.cfi_def_cfa_register 7
 213:main.c        ****     // if S5 and S6 are on black, move forward
 214:main.c        ****     if (!s5 && !s6) {
 896              		.loc 1 214 0
 897 0004 1C4B     		ldr	r3, .L44
 898 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 0008 002B     		cmp	r3, #0
 900 000a 0FD1     		bne	.L37
 901              		.loc 1 214 0 is_stmt 0 discriminator 1
 902 000c 1B4B     		ldr	r3, .L44+4
 903 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0010 002B     		cmp	r3, #0
 905 0012 0BD1     		bne	.L37
 215:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 906              		.loc 1 215 0 is_stmt 1
 907 0014 1A4B     		ldr	r3, .L44+8
 908 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 0018 032B     		cmp	r3, #3
 910 001a 01D0     		beq	.L38
 216:main.c        ****             return AdjustToTheLeft;
 911              		.loc 1 216 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 21


 912 001c 0323     		movs	r3, #3
 913 001e 26E0     		b	.L39
 914              	.L38:
 217:main.c        ****         }
 218:main.c        ****         if (previousDirection != AdjustToTheRight) {
 915              		.loc 1 218 0
 916 0020 174B     		ldr	r3, .L44+8
 917 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 918 0024 042B     		cmp	r3, #4
 919 0026 01D0     		beq	.L37
 219:main.c        ****             return AdjustToTheRight;    
 920              		.loc 1 219 0
 921 0028 0423     		movs	r3, #4
 922 002a 20E0     		b	.L39
 923              	.L37:
 220:main.c        ****         }
 221:main.c        ****     }
 222:main.c        ****     
 223:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 224:main.c        ****     if (s5 && s6) {
 924              		.loc 1 224 0
 925 002c 124B     		ldr	r3, .L44
 926 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0030 002B     		cmp	r3, #0
 928 0032 0FD0     		beq	.L40
 929              		.loc 1 224 0 is_stmt 0 discriminator 1
 930 0034 114B     		ldr	r3, .L44+4
 931 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 932 0038 002B     		cmp	r3, #0
 933 003a 0BD0     		beq	.L40
 225:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 934              		.loc 1 225 0 is_stmt 1
 935 003c 104B     		ldr	r3, .L44+8
 936 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 0040 032B     		cmp	r3, #3
 938 0042 01D0     		beq	.L41
 226:main.c        ****             return AdjustToTheLeft;
 939              		.loc 1 226 0
 940 0044 0323     		movs	r3, #3
 941 0046 12E0     		b	.L39
 942              	.L41:
 227:main.c        ****         }
 228:main.c        ****         if (previousDirection != AdjustToTheRight) {
 943              		.loc 1 228 0
 944 0048 0D4B     		ldr	r3, .L44+8
 945 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 004c 042B     		cmp	r3, #4
 947 004e 01D0     		beq	.L40
 229:main.c        ****             return AdjustToTheRight;    
 948              		.loc 1 229 0
 949 0050 0423     		movs	r3, #4
 950 0052 0CE0     		b	.L39
 951              	.L40:
 230:main.c        ****         }
 231:main.c        ****     }
 232:main.c        **** 
 233:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 22


 234:main.c        ****     if (s5) {
 952              		.loc 1 234 0
 953 0054 084B     		ldr	r3, .L44
 954 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 955 0058 002B     		cmp	r3, #0
 956 005a 01D0     		beq	.L42
 235:main.c        ****         return AdjustToTheRight;    
 957              		.loc 1 235 0
 958 005c 0423     		movs	r3, #4
 959 005e 06E0     		b	.L39
 960              	.L42:
 236:main.c        ****     }
 237:main.c        ****     if (s6) {
 961              		.loc 1 237 0
 962 0060 064B     		ldr	r3, .L44+4
 963 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 0064 002B     		cmp	r3, #0
 965 0066 01D0     		beq	.L43
 238:main.c        ****         return AdjustToTheLeft;    
 966              		.loc 1 238 0
 967 0068 0323     		movs	r3, #3
 968 006a 00E0     		b	.L39
 969              	.L43:
 239:main.c        ****     }
 240:main.c        ****    
 241:main.c        ****     // We should never actually get to this point
 242:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 243:main.c        ****     return Stop;
 970              		.loc 1 243 0
 971 006c 0523     		movs	r3, #5
 972              	.L39:
 244:main.c        **** }
 973              		.loc 1 244 0
 974 006e 1846     		mov	r0, r3
 975 0070 BD46     		mov	sp, r7
 976              		.cfi_def_cfa_register 13
 977              		@ sp needed
 978 0072 80BC     		pop	{r7}
 979              		.cfi_restore 7
 980              		.cfi_def_cfa_offset 0
 981 0074 7047     		bx	lr
 982              	.L45:
 983 0076 00BF     		.align	2
 984              	.L44:
 985 0078 00000000 		.word	s5
 986 007c 00000000 		.word	s6
 987 0080 00000000 		.word	previousDirection
 988              		.cfi_endproc
 989              	.LFE73:
 990              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 991              		.global	lastDirectionAfter180
 992              		.data
 993              		.type	lastDirectionAfter180, %object
 994              		.size	lastDirectionAfter180, 1
 995              	lastDirectionAfter180:
 996 0052 06       		.byte	6
 997              		.section	.text.SpinCourseCorrection,"ax",%progbits
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 23


 998              		.align	2
 999              		.global	SpinCourseCorrection
 1000              		.thumb
 1001              		.thumb_func
 1002              		.type	SpinCourseCorrection, %function
 1003              	SpinCourseCorrection:
 1004              	.LFB74:
 245:main.c        **** 
 246:main.c        **** enum RobotMovement SpinCourseCorrection();
 247:main.c        **** 
 248:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 249:main.c        **** 
 250:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1005              		.loc 1 250 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 1, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010 0000 80B4     		push	{r7}
 1011              		.cfi_def_cfa_offset 4
 1012              		.cfi_offset 7, -4
 1013 0002 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 251:main.c        ****     // Set first iteration flag.
 252:main.c        ****     if (!spinCourseCorrectionStarted) {
 1015              		.loc 1 252 0
 1016 0004 184B     		ldr	r3, .L53
 1017 0006 1B78     		ldrb	r3, [r3]
 1018 0008 DBB2     		uxtb	r3, r3
 1019 000a 002B     		cmp	r3, #0
 1020 000c 06D1     		bne	.L47
 253:main.c        ****         spinCourseCorrectionStarted = 1;    
 1021              		.loc 1 253 0
 1022 000e 164B     		ldr	r3, .L53
 1023 0010 0122     		movs	r2, #1
 1024 0012 1A70     		strb	r2, [r3]
 254:main.c        ****         lastDirectionAfter180 = currentDirection;
 1025              		.loc 1 254 0
 1026 0014 154B     		ldr	r3, .L53+4
 1027 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1028 0018 154B     		ldr	r3, .L53+8
 1029 001a 1A70     		strb	r2, [r3]
 1030              	.L47:
 255:main.c        ****     }
 256:main.c        ****     
 257:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 258:main.c        ****     if (s5 && s6) {
 1031              		.loc 1 258 0
 1032 001c 154B     		ldr	r3, .L53+12
 1033 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1034 0020 002B     		cmp	r3, #0
 1035 0022 0FD0     		beq	.L48
 1036              		.loc 1 258 0 is_stmt 0 discriminator 1
 1037 0024 144B     		ldr	r3, .L53+16
 1038 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1039 0028 002B     		cmp	r3, #0
 1040 002a 0BD0     		beq	.L48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 24


 259:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1041              		.loc 1 259 0 is_stmt 1
 1042 002c 104B     		ldr	r3, .L53+8
 1043 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0030 022B     		cmp	r3, #2
 1045 0032 01D0     		beq	.L49
 260:main.c        ****             return TurnLeft;
 1046              		.loc 1 260 0
 1047 0034 0223     		movs	r3, #2
 1048 0036 12E0     		b	.L50
 1049              	.L49:
 261:main.c        ****         }
 262:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1050              		.loc 1 262 0
 1051 0038 0D4B     		ldr	r3, .L53+8
 1052 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 003c 012B     		cmp	r3, #1
 1054 003e 01D0     		beq	.L48
 263:main.c        ****             return TurnRight;    
 1055              		.loc 1 263 0
 1056 0040 0123     		movs	r3, #1
 1057 0042 0CE0     		b	.L50
 1058              	.L48:
 264:main.c        ****         }
 265:main.c        ****     }
 266:main.c        **** 
 267:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 268:main.c        ****     if (s5) {
 1059              		.loc 1 268 0
 1060 0044 0B4B     		ldr	r3, .L53+12
 1061 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 0048 002B     		cmp	r3, #0
 1063 004a 01D0     		beq	.L51
 269:main.c        ****         return TurnRight;    
 1064              		.loc 1 269 0
 1065 004c 0123     		movs	r3, #1
 1066 004e 06E0     		b	.L50
 1067              	.L51:
 270:main.c        ****     }
 271:main.c        ****     if (s6) {
 1068              		.loc 1 271 0
 1069 0050 094B     		ldr	r3, .L53+16
 1070 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1071 0054 002B     		cmp	r3, #0
 1072 0056 01D0     		beq	.L52
 272:main.c        ****         return TurnLeft;    
 1073              		.loc 1 272 0
 1074 0058 0223     		movs	r3, #2
 1075 005a 00E0     		b	.L50
 1076              	.L52:
 273:main.c        ****     }
 274:main.c        ****    
 275:main.c        ****     // We should never actually get to this point
 276:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 277:main.c        ****     return Stop;
 1077              		.loc 1 277 0
 1078 005c 0523     		movs	r3, #5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 25


 1079              	.L50:
 278:main.c        **** }
 1080              		.loc 1 278 0
 1081 005e 1846     		mov	r0, r3
 1082 0060 BD46     		mov	sp, r7
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0062 80BC     		pop	{r7}
 1086              		.cfi_restore 7
 1087              		.cfi_def_cfa_offset 0
 1088 0064 7047     		bx	lr
 1089              	.L54:
 1090 0066 00BF     		.align	2
 1091              	.L53:
 1092 0068 3B000000 		.word	spinCourseCorrectionStarted
 1093 006c 00000000 		.word	currentDirection
 1094 0070 00000000 		.word	lastDirectionAfter180
 1095 0074 00000000 		.word	s5
 1096 0078 00000000 		.word	s6
 1097              		.cfi_endproc
 1098              	.LFE74:
 1099              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1100              		.global	__aeabi_fcmpge
 1101              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1102              		.align	2
 1103              		.global	GetMovementAccordingToInstruction
 1104              		.thumb
 1105              		.thumb_func
 1106              		.type	GetMovementAccordingToInstruction, %function
 1107              	GetMovementAccordingToInstruction:
 1108              	.LFB75:
 279:main.c        **** 
 280:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1109              		.loc 1 280 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 8
 1112              		@ frame_needed = 1, uses_anonymous_args = 0
 1113 0000 80B5     		push	{r7, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 7, -8
 1116              		.cfi_offset 14, -4
 1117 0002 82B0     		sub	sp, sp, #8
 1118              		.cfi_def_cfa_offset 16
 1119 0004 00AF     		add	r7, sp, #0
 1120              		.cfi_def_cfa_register 7
 281:main.c        ****     float blocksize;
 282:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 1121              		.loc 1 282 0
 1122 0006 A24B     		ldr	r3, .L103
 1123 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 000a 002B     		cmp	r3, #0
 1125 000c 03D0     		beq	.L56
 1126              		.loc 1 282 0 is_stmt 0 discriminator 1
 1127 000e A04B     		ldr	r3, .L103
 1128 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1129 0012 012B     		cmp	r3, #1
 1130 0014 03D1     		bne	.L57
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 26


 1131              	.L56:
 283:main.c        ****         blocksize = yBlocksize;
 1132              		.loc 1 283 0 is_stmt 1
 1133 0016 9F4B     		ldr	r3, .L103+4
 1134 0018 1B68     		ldr	r3, [r3]	@ float
 1135 001a 7B60     		str	r3, [r7, #4]	@ float
 1136 001c 02E0     		b	.L58
 1137              	.L57:
 284:main.c        ****     } else {
 285:main.c        ****         blocksize = xBlocksize;
 1138              		.loc 1 285 0
 1139 001e 9E4B     		ldr	r3, .L103+8
 1140 0020 1B68     		ldr	r3, [r3]	@ float
 1141 0022 7B60     		str	r3, [r7, #4]	@ float
 1142              	.L58:
 286:main.c        ****     }
 287:main.c        ****     
 288:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 289:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 290:main.c        ****         // OR an EVENT happens in the current instruction
 291:main.c        ****         // e.g. CurrentInstruction: GoForward 
 292:main.c        ****         //      S3 on BLACK
 293:main.c        ****         //      Check Ignore Count
 294:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 295:main.c        ****     
 296:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1143              		.loc 1 296 0
 1144 0024 9D4B     		ldr	r3, .L103+12
 1145 0026 1B78     		ldrb	r3, [r3]
 1146 0028 FB70     		strb	r3, [r7, #3]
 297:main.c        ****     
 298:main.c        ****     switch (currentInstructionDirection) {
 1147              		.loc 1 298 0
 1148 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1149 002c 052B     		cmp	r3, #5
 1150 002e 00F2C181 		bhi	.L59
 1151 0032 01A2     		adr	r2, .L61
 1152 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1153              		.p2align 2
 1154              	.L61:
 1155 0038 51000000 		.word	.L60+1
 1156 003c 13010000 		.word	.L62+1
 1157 0040 D1010000 		.word	.L63+1
 1158 0044 47030000 		.word	.L64+1
 1159 0048 D1020000 		.word	.L65+1
 1160 004c 21030000 		.word	.L66+1
 1161              		.p2align 1
 1162              	.L60:
 299:main.c        ****         case GoForward:
 300:main.c        ****             if(currentDirection == Stop) {
 1163              		.loc 1 300 0
 1164 0050 934B     		ldr	r3, .L103+16
 1165 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 0054 052B     		cmp	r3, #5
 1167 0056 08D1     		bne	.L67
 301:main.c        ****                 if(stopBuffer <= 150) {
 1168              		.loc 1 301 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 27


 1169 0058 924B     		ldr	r3, .L103+20
 1170 005a 1B68     		ldr	r3, [r3]
 1171 005c 962B     		cmp	r3, #150
 1172 005e 01D8     		bhi	.L68
 302:main.c        ****                     return Stop;
 1173              		.loc 1 302 0
 1174 0060 0523     		movs	r3, #5
 1175 0062 A8E1     		b	.L69
 1176              	.L68:
 303:main.c        ****                 } else {
 304:main.c        ****                     stopBuffer = 170;
 1177              		.loc 1 304 0
 1178 0064 8F4B     		ldr	r3, .L103+20
 1179 0066 AA22     		movs	r2, #170
 1180 0068 1A60     		str	r2, [r3]
 1181              	.L67:
 305:main.c        ****                 }
 306:main.c        ****             }
 307:main.c        ****             if (s3) {
 1182              		.loc 1 307 0
 1183 006a 8F4B     		ldr	r3, .L103+24
 1184 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1185 006e 002B     		cmp	r3, #0
 1186 0070 02D0     		beq	.L70
 308:main.c        ****                 leftStatusFlag = 1;
 1187              		.loc 1 308 0
 1188 0072 8E4B     		ldr	r3, .L103+28
 1189 0074 0122     		movs	r2, #1
 1190 0076 1A70     		strb	r2, [r3]
 1191              	.L70:
 309:main.c        ****             }
 310:main.c        ****             
 311:main.c        ****             if (s4) {
 1192              		.loc 1 311 0
 1193 0078 8D4B     		ldr	r3, .L103+32
 1194 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 007c 002B     		cmp	r3, #0
 1196 007e 02D0     		beq	.L71
 312:main.c        ****                 rightStatusFlag = 1;
 1197              		.loc 1 312 0
 1198 0080 8C4B     		ldr	r3, .L103+36
 1199 0082 0122     		movs	r2, #1
 1200 0084 1A70     		strb	r2, [r3]
 1201              	.L71:
 313:main.c        ****             }
 314:main.c        ****             
 315:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 316:main.c        ****             if (leftStatusFlag) {
 1202              		.loc 1 316 0
 1203 0086 894B     		ldr	r3, .L103+28
 1204 0088 1B78     		ldrb	r3, [r3]
 1205 008a DBB2     		uxtb	r3, r3
 1206 008c 002B     		cmp	r3, #0
 1207 008e 1BD0     		beq	.L72
 317:main.c        ****                 if (!s3) {
 1208              		.loc 1 317 0
 1209 0090 854B     		ldr	r3, .L103+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 28


 1210 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 0094 002B     		cmp	r3, #0
 1212 0096 17D1     		bne	.L72
 318:main.c        ****                     leftStatusFlag = 0;    
 1213              		.loc 1 318 0
 1214 0098 844B     		ldr	r3, .L103+28
 1215 009a 0022     		movs	r2, #0
 1216 009c 1A70     		strb	r2, [r3]
 319:main.c        ****                     if (currentIgnoreL == 0) {
 1217              		.loc 1 319 0
 1218 009e 864B     		ldr	r3, .L103+40
 1219 00a0 1B78     		ldrb	r3, [r3]
 1220 00a2 DBB2     		uxtb	r3, r3
 1221 00a4 002B     		cmp	r3, #0
 1222 00a6 03D1     		bne	.L73
 320:main.c        ****                         MoveToNextInstruction();
 1223              		.loc 1 320 0
 1224 00a8 FFF7FEFF 		bl	MoveToNextInstruction
 321:main.c        ****                         return Stop;
 1225              		.loc 1 321 0
 1226 00ac 0523     		movs	r3, #5
 1227 00ae 82E1     		b	.L69
 1228              	.L73:
 322:main.c        ****                     }
 323:main.c        ****                     if (currentIgnoreL > 0) {
 1229              		.loc 1 323 0
 1230 00b0 814B     		ldr	r3, .L103+40
 1231 00b2 1B78     		ldrb	r3, [r3]
 1232 00b4 DBB2     		uxtb	r3, r3
 1233 00b6 002B     		cmp	r3, #0
 1234 00b8 06D0     		beq	.L72
 324:main.c        ****                         currentIgnoreL--;    
 1235              		.loc 1 324 0
 1236 00ba 7F4B     		ldr	r3, .L103+40
 1237 00bc 1B78     		ldrb	r3, [r3]
 1238 00be DBB2     		uxtb	r3, r3
 1239 00c0 013B     		subs	r3, r3, #1
 1240 00c2 DAB2     		uxtb	r2, r3
 1241 00c4 7C4B     		ldr	r3, .L103+40
 1242 00c6 1A70     		strb	r2, [r3]
 1243              	.L72:
 325:main.c        ****                     }
 326:main.c        ****                 }
 327:main.c        ****             }
 328:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 329:main.c        ****             if (rightStatusFlag) {
 1244              		.loc 1 329 0
 1245 00c8 7A4B     		ldr	r3, .L103+36
 1246 00ca 1B78     		ldrb	r3, [r3]
 1247 00cc DBB2     		uxtb	r3, r3
 1248 00ce 002B     		cmp	r3, #0
 1249 00d0 1BD0     		beq	.L74
 330:main.c        ****                 if (!s4) {
 1250              		.loc 1 330 0
 1251 00d2 774B     		ldr	r3, .L103+32
 1252 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1253 00d6 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 29


 1254 00d8 17D1     		bne	.L74
 331:main.c        ****                     rightStatusFlag = 0;
 1255              		.loc 1 331 0
 1256 00da 764B     		ldr	r3, .L103+36
 1257 00dc 0022     		movs	r2, #0
 1258 00de 1A70     		strb	r2, [r3]
 332:main.c        ****                     if (currentIgnoreR == 0) {
 1259              		.loc 1 332 0
 1260 00e0 764B     		ldr	r3, .L103+44
 1261 00e2 1B78     		ldrb	r3, [r3]
 1262 00e4 DBB2     		uxtb	r3, r3
 1263 00e6 002B     		cmp	r3, #0
 1264 00e8 03D1     		bne	.L75
 333:main.c        ****                         MoveToNextInstruction();
 1265              		.loc 1 333 0
 1266 00ea FFF7FEFF 		bl	MoveToNextInstruction
 334:main.c        ****                         return Stop;
 1267              		.loc 1 334 0
 1268 00ee 0523     		movs	r3, #5
 1269 00f0 61E1     		b	.L69
 1270              	.L75:
 335:main.c        ****                     }
 336:main.c        ****                     if (currentIgnoreR > 0) {
 1271              		.loc 1 336 0
 1272 00f2 724B     		ldr	r3, .L103+44
 1273 00f4 1B78     		ldrb	r3, [r3]
 1274 00f6 DBB2     		uxtb	r3, r3
 1275 00f8 002B     		cmp	r3, #0
 1276 00fa 06D0     		beq	.L74
 337:main.c        ****                         currentIgnoreR--;    
 1277              		.loc 1 337 0
 1278 00fc 6F4B     		ldr	r3, .L103+44
 1279 00fe 1B78     		ldrb	r3, [r3]
 1280 0100 DBB2     		uxtb	r3, r3
 1281 0102 013B     		subs	r3, r3, #1
 1282 0104 DAB2     		uxtb	r2, r3
 1283 0106 6D4B     		ldr	r3, .L103+44
 1284 0108 1A70     		strb	r2, [r3]
 1285              	.L74:
 338:main.c        ****                     }
 339:main.c        ****                 }
 340:main.c        ****             }
 341:main.c        ****           
 342:main.c        ****             return ForwardCourseCorrection();
 1286              		.loc 1 342 0
 1287 010a FFF7FEFF 		bl	ForwardCourseCorrection
 1288 010e 0346     		mov	r3, r0
 1289 0110 51E1     		b	.L69
 1290              	.L62:
 343:main.c        ****             break;
 344:main.c        ****         case waitForLeftTurn:
 345:main.c        ****             // continue moving forward until s3 goes on black
 346:main.c        ****             // if we are turning left already
 347:main.c        ****                 // wait until s5 || s6 are on black
 348:main.c        ****                 // return stop
 349:main.c        **** 
 350:main.c        ****             if (turnFinishedFlag) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 30


 1291              		.loc 1 350 0
 1292 0112 6B4B     		ldr	r3, .L103+48
 1293 0114 1B78     		ldrb	r3, [r3]
 1294 0116 DBB2     		uxtb	r3, r3
 1295 0118 002B     		cmp	r3, #0
 1296 011a 0ED0     		beq	.L76
 351:main.c        ****                 if (s3) {
 1297              		.loc 1 351 0
 1298 011c 624B     		ldr	r3, .L103+24
 1299 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1300 0120 002B     		cmp	r3, #0
 1301 0122 06D0     		beq	.L77
 352:main.c        ****                     turnFinishedFlag = 0;
 1302              		.loc 1 352 0
 1303 0124 664B     		ldr	r3, .L103+48
 1304 0126 0022     		movs	r2, #0
 1305 0128 1A70     		strb	r2, [r3]
 353:main.c        ****                     MoveToNextInstruction();    
 1306              		.loc 1 353 0
 1307 012a FFF7FEFF 		bl	MoveToNextInstruction
 354:main.c        ****                     return Stop;
 1308              		.loc 1 354 0
 1309 012e 0523     		movs	r3, #5
 1310 0130 41E1     		b	.L69
 1311              	.L77:
 355:main.c        ****                 }
 356:main.c        ****                 else {
 357:main.c        ****                     return ForwardCourseCorrection();        
 1312              		.loc 1 357 0
 1313 0132 FFF7FEFF 		bl	ForwardCourseCorrection
 1314 0136 0346     		mov	r3, r0
 1315 0138 3DE1     		b	.L69
 1316              	.L76:
 358:main.c        ****                 }
 359:main.c        ****             }
 360:main.c        ****             
 361:main.c        ****             
 362:main.c        ****             if (currentDirection == Stop) {
 1317              		.loc 1 362 0
 1318 013a 594B     		ldr	r3, .L103+16
 1319 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1320 013e 052B     		cmp	r3, #5
 1321 0140 09D1     		bne	.L78
 363:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 364:main.c        ****                 if (stopBuffer <= 50) {
 1322              		.loc 1 364 0
 1323 0142 584B     		ldr	r3, .L103+20
 1324 0144 1B68     		ldr	r3, [r3]
 1325 0146 322B     		cmp	r3, #50
 1326 0148 01D8     		bhi	.L79
 365:main.c        ****                     return Stop;   
 1327              		.loc 1 365 0
 1328 014a 0523     		movs	r3, #5
 1329 014c 33E1     		b	.L69
 1330              	.L79:
 366:main.c        ****                 }
 367:main.c        ****                 return ForwardCourseCorrection();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 31


 1331              		.loc 1 367 0
 1332 014e FFF7FEFF 		bl	ForwardCourseCorrection
 1333 0152 0346     		mov	r3, r0
 1334 0154 2FE1     		b	.L69
 1335              	.L78:
 368:main.c        ****             }
 369:main.c        ****          
 370:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 371:main.c        ****             if (currentDirection == TurnLeft) {
 1336              		.loc 1 371 0
 1337 0156 524B     		ldr	r3, .L103+16
 1338 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 015a 022B     		cmp	r3, #2
 1340 015c 2BD1     		bne	.L80
 372:main.c        ****                 // If turn started and we are still on black, continue turning
 373:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 374:main.c        ****                 if (turnStartedFlag) {
 1341              		.loc 1 374 0
 1342 015e 594B     		ldr	r3, .L103+52
 1343 0160 1B78     		ldrb	r3, [r3]
 1344 0162 DBB2     		uxtb	r3, r3
 1345 0164 002B     		cmp	r3, #0
 1346 0166 0ED0     		beq	.L81
 375:main.c        ****                     if (s3 && (s5 && s6)) {
 1347              		.loc 1 375 0
 1348 0168 4F4B     		ldr	r3, .L103+24
 1349 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 016c 002B     		cmp	r3, #0
 1351 016e 0AD0     		beq	.L81
 1352              		.loc 1 375 0 is_stmt 0 discriminator 1
 1353 0170 554B     		ldr	r3, .L103+56
 1354 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1355 0174 002B     		cmp	r3, #0
 1356 0176 06D0     		beq	.L81
 1357              		.loc 1 375 0 discriminator 2
 1358 0178 544B     		ldr	r3, .L103+60
 1359 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1360 017c 002B     		cmp	r3, #0
 1361 017e 02D0     		beq	.L81
 376:main.c        ****                         turnStartedFlag = 0;
 1362              		.loc 1 376 0 is_stmt 1
 1363 0180 504B     		ldr	r3, .L103+52
 1364 0182 0022     		movs	r2, #0
 1365 0184 1A70     		strb	r2, [r3]
 1366              	.L81:
 377:main.c        ****                     }
 378:main.c        ****                 }
 379:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1367              		.loc 1 379 0
 1368 0186 4F4B     		ldr	r3, .L103+52
 1369 0188 1B78     		ldrb	r3, [r3]
 1370 018a DBB2     		uxtb	r3, r3
 1371 018c 002B     		cmp	r3, #0
 1372 018e 10D1     		bne	.L82
 1373              		.loc 1 379 0 is_stmt 0 discriminator 1
 1374 0190 454B     		ldr	r3, .L103+24
 1375 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 32


 1376 0194 002B     		cmp	r3, #0
 1377 0196 0CD1     		bne	.L82
 1378              		.loc 1 379 0 discriminator 2
 1379 0198 4B4B     		ldr	r3, .L103+56
 1380 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 019c 002B     		cmp	r3, #0
 1382 019e 08D1     		bne	.L82
 1383              		.loc 1 379 0 discriminator 3
 1384 01a0 4A4B     		ldr	r3, .L103+60
 1385 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 01a4 002B     		cmp	r3, #0
 1387 01a6 04D1     		bne	.L82
 380:main.c        ****                     turnFinishedFlag = 1;
 1388              		.loc 1 380 0 is_stmt 1
 1389 01a8 454B     		ldr	r3, .L103+48
 1390 01aa 0122     		movs	r2, #1
 1391 01ac 1A70     		strb	r2, [r3]
 381:main.c        ****                     return ForwardAfterTurn;
 1392              		.loc 1 381 0
 1393 01ae 0823     		movs	r3, #8
 1394 01b0 01E1     		b	.L69
 1395              	.L82:
 382:main.c        ****                 }
 383:main.c        ****                 else
 384:main.c        ****                 {
 385:main.c        ****                     return TurnLeft;
 1396              		.loc 1 385 0
 1397 01b2 0223     		movs	r3, #2
 1398 01b4 FFE0     		b	.L69
 1399              	.L80:
 386:main.c        ****                 }
 387:main.c        ****             }
 388:main.c        ****             
 389:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 390:main.c        ****             if (!s3) {
 1400              		.loc 1 390 0
 1401 01b6 3C4B     		ldr	r3, .L103+24
 1402 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403 01ba 002B     		cmp	r3, #0
 1404 01bc 04D1     		bne	.L83
 391:main.c        ****                 turnStartedFlag = 1;
 1405              		.loc 1 391 0
 1406 01be 414B     		ldr	r3, .L103+52
 1407 01c0 0122     		movs	r2, #1
 1408 01c2 1A70     		strb	r2, [r3]
 392:main.c        ****                 return TurnLeft;
 1409              		.loc 1 392 0
 1410 01c4 0223     		movs	r3, #2
 1411 01c6 F6E0     		b	.L69
 1412              	.L83:
 393:main.c        ****             }
 394:main.c        ****             
 395:main.c        ****             // Otherwise, keep going forward
 396:main.c        ****             return ForwardCourseCorrection(); 
 1413              		.loc 1 396 0
 1414 01c8 FFF7FEFF 		bl	ForwardCourseCorrection
 1415 01cc 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 33


 1416 01ce F2E0     		b	.L69
 1417              	.L63:
 397:main.c        ****             break;
 398:main.c        ****         case waitForRightTurn:
 399:main.c        ****             // continue moving forward until s4 goes on black
 400:main.c        ****             // if we are turning left already
 401:main.c        ****                 // wait until s5 || s6 are on black
 402:main.c        ****                 // return stop
 403:main.c        **** 
 404:main.c        ****             if (turnFinishedFlag) {
 1418              		.loc 1 404 0
 1419 01d0 3B4B     		ldr	r3, .L103+48
 1420 01d2 1B78     		ldrb	r3, [r3]
 1421 01d4 DBB2     		uxtb	r3, r3
 1422 01d6 002B     		cmp	r3, #0
 1423 01d8 0ED0     		beq	.L84
 405:main.c        ****                 if (s4) {
 1424              		.loc 1 405 0
 1425 01da 354B     		ldr	r3, .L103+32
 1426 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1427 01de 002B     		cmp	r3, #0
 1428 01e0 06D0     		beq	.L85
 406:main.c        ****                     turnFinishedFlag = 0;
 1429              		.loc 1 406 0
 1430 01e2 374B     		ldr	r3, .L103+48
 1431 01e4 0022     		movs	r2, #0
 1432 01e6 1A70     		strb	r2, [r3]
 407:main.c        ****                     MoveToNextInstruction();   
 1433              		.loc 1 407 0
 1434 01e8 FFF7FEFF 		bl	MoveToNextInstruction
 408:main.c        ****                     return Stop;
 1435              		.loc 1 408 0
 1436 01ec 0523     		movs	r3, #5
 1437 01ee E2E0     		b	.L69
 1438              	.L85:
 409:main.c        ****                 }
 410:main.c        ****                 else {
 411:main.c        ****                     return ForwardCourseCorrection();        
 1439              		.loc 1 411 0
 1440 01f0 FFF7FEFF 		bl	ForwardCourseCorrection
 1441 01f4 0346     		mov	r3, r0
 1442 01f6 DEE0     		b	.L69
 1443              	.L84:
 412:main.c        ****                 }
 413:main.c        ****             }
 414:main.c        ****             
 415:main.c        ****             
 416:main.c        ****             if (currentDirection == Stop) {
 1444              		.loc 1 416 0
 1445 01f8 294B     		ldr	r3, .L103+16
 1446 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 01fc 052B     		cmp	r3, #5
 1448 01fe 09D1     		bne	.L86
 417:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 418:main.c        ****                 if (stopBuffer <= 50) {
 1449              		.loc 1 418 0
 1450 0200 284B     		ldr	r3, .L103+20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 34


 1451 0202 1B68     		ldr	r3, [r3]
 1452 0204 322B     		cmp	r3, #50
 1453 0206 01D8     		bhi	.L87
 419:main.c        ****                     return Stop;   
 1454              		.loc 1 419 0
 1455 0208 0523     		movs	r3, #5
 1456 020a D4E0     		b	.L69
 1457              	.L87:
 420:main.c        ****                 }
 421:main.c        **** 
 422:main.c        ****                 return ForwardCourseCorrection();
 1458              		.loc 1 422 0
 1459 020c FFF7FEFF 		bl	ForwardCourseCorrection
 1460 0210 0346     		mov	r3, r0
 1461 0212 D0E0     		b	.L69
 1462              	.L86:
 423:main.c        ****             }
 424:main.c        ****                       
 425:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 426:main.c        ****             if (currentDirection == TurnRight) {
 1463              		.loc 1 426 0
 1464 0214 224B     		ldr	r3, .L103+16
 1465 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1466 0218 012B     		cmp	r3, #1
 1467 021a 2BD1     		bne	.L88
 427:main.c        ****                 // If turn started and we are still on black, continue turning
 428:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 429:main.c        ****                 if (turnStartedFlag) {
 1468              		.loc 1 429 0
 1469 021c 294B     		ldr	r3, .L103+52
 1470 021e 1B78     		ldrb	r3, [r3]
 1471 0220 DBB2     		uxtb	r3, r3
 1472 0222 002B     		cmp	r3, #0
 1473 0224 0ED0     		beq	.L89
 430:main.c        ****                     if (s4 && (s5 && s6)) {
 1474              		.loc 1 430 0
 1475 0226 224B     		ldr	r3, .L103+32
 1476 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1477 022a 002B     		cmp	r3, #0
 1478 022c 0AD0     		beq	.L89
 1479              		.loc 1 430 0 is_stmt 0 discriminator 1
 1480 022e 264B     		ldr	r3, .L103+56
 1481 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 0232 002B     		cmp	r3, #0
 1483 0234 06D0     		beq	.L89
 1484              		.loc 1 430 0 discriminator 2
 1485 0236 254B     		ldr	r3, .L103+60
 1486 0238 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1487 023a 002B     		cmp	r3, #0
 1488 023c 02D0     		beq	.L89
 431:main.c        ****                         turnStartedFlag = 0;
 1489              		.loc 1 431 0 is_stmt 1
 1490 023e 214B     		ldr	r3, .L103+52
 1491 0240 0022     		movs	r2, #0
 1492 0242 1A70     		strb	r2, [r3]
 1493              	.L89:
 432:main.c        ****                     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 35


 433:main.c        ****                 }
 434:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1494              		.loc 1 434 0
 1495 0244 1F4B     		ldr	r3, .L103+52
 1496 0246 1B78     		ldrb	r3, [r3]
 1497 0248 DBB2     		uxtb	r3, r3
 1498 024a 002B     		cmp	r3, #0
 1499 024c 10D1     		bne	.L90
 1500              		.loc 1 434 0 is_stmt 0 discriminator 1
 1501 024e 184B     		ldr	r3, .L103+32
 1502 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 0252 002B     		cmp	r3, #0
 1504 0254 0CD1     		bne	.L90
 1505              		.loc 1 434 0 discriminator 2
 1506 0256 1C4B     		ldr	r3, .L103+56
 1507 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 025a 002B     		cmp	r3, #0
 1509 025c 08D1     		bne	.L90
 1510              		.loc 1 434 0 discriminator 3
 1511 025e 1B4B     		ldr	r3, .L103+60
 1512 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0262 002B     		cmp	r3, #0
 1514 0264 04D1     		bne	.L90
 435:main.c        ****                     turnFinishedFlag = 1;
 1515              		.loc 1 435 0 is_stmt 1
 1516 0266 164B     		ldr	r3, .L103+48
 1517 0268 0122     		movs	r2, #1
 1518 026a 1A70     		strb	r2, [r3]
 436:main.c        ****                     return ForwardAfterTurn;
 1519              		.loc 1 436 0
 1520 026c 0823     		movs	r3, #8
 1521 026e A2E0     		b	.L69
 1522              	.L90:
 437:main.c        ****                 }
 438:main.c        ****                 else
 439:main.c        ****                 {
 440:main.c        ****                     return TurnRight;
 1523              		.loc 1 440 0
 1524 0270 0123     		movs	r3, #1
 1525 0272 A0E0     		b	.L69
 1526              	.L88:
 441:main.c        ****                 }
 442:main.c        ****             }
 443:main.c        ****             
 444:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 445:main.c        ****             if (!s4) {
 1527              		.loc 1 445 0
 1528 0274 0E4B     		ldr	r3, .L103+32
 1529 0276 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 0278 002B     		cmp	r3, #0
 1531 027a 04D1     		bne	.L91
 446:main.c        ****                 turnStartedFlag = 1;
 1532              		.loc 1 446 0
 1533 027c 114B     		ldr	r3, .L103+52
 1534 027e 0122     		movs	r2, #1
 1535 0280 1A70     		strb	r2, [r3]
 447:main.c        ****                 return TurnRight;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 36


 1536              		.loc 1 447 0
 1537 0282 0123     		movs	r3, #1
 1538 0284 97E0     		b	.L69
 1539              	.L91:
 448:main.c        ****             }
 449:main.c        ****             
 450:main.c        ****             // Otherwise, keep going forward
 451:main.c        ****             return ForwardCourseCorrection(); 
 1540              		.loc 1 451 0
 1541 0286 FFF7FEFF 		bl	ForwardCourseCorrection
 1542 028a 0346     		mov	r3, r0
 1543 028c 93E0     		b	.L69
 1544              	.L104:
 1545 028e 00BF     		.align	2
 1546              	.L103:
 1547 0290 00000000 		.word	currentRobotOrientation
 1548 0294 00000000 		.word	yBlocksize
 1549 0298 00000000 		.word	xBlocksize
 1550 029c 00000000 		.word	currentInstruction
 1551 02a0 00000000 		.word	currentDirection
 1552 02a4 00000000 		.word	stopBuffer
 1553 02a8 00000000 		.word	s3
 1554 02ac 39000000 		.word	leftStatusFlag
 1555 02b0 00000000 		.word	s4
 1556 02b4 3A000000 		.word	rightStatusFlag
 1557 02b8 3C000000 		.word	currentIgnoreL
 1558 02bc 45000000 		.word	currentIgnoreR
 1559 02c0 35000000 		.word	turnFinishedFlag
 1560 02c4 34000000 		.word	turnStartedFlag
 1561 02c8 00000000 		.word	s5
 1562 02cc 00000000 		.word	s6
 1563              	.L65:
 452:main.c        ****             break;
 453:main.c        ****         case ForwardUntilTarget:
 454:main.c        ****             // Reset distance on first iteration of this instruction
 455:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1564              		.loc 1 455 0
 1565 02d0 3B4B     		ldr	r3, .L105
 1566 02d2 1B78     		ldrb	r3, [r3]
 1567 02d4 DBB2     		uxtb	r3, r3
 1568 02d6 002B     		cmp	r3, #0
 1569 02d8 0FD1     		bne	.L92
 456:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1570              		.loc 1 456 0
 1571 02da 394B     		ldr	r3, .L105
 1572 02dc 0122     		movs	r2, #1
 1573 02de 1A70     		strb	r2, [r3]
 457:main.c        ****                 totalDistance = 0;
 1574              		.loc 1 457 0
 1575 02e0 384B     		ldr	r3, .L105+4
 1576 02e2 4FF00002 		mov	r2, #0
 1577 02e6 1A60     		str	r2, [r3]	@ float
 458:main.c        **** 
 459:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 460:main.c        ****                 blockSizeTotal = blocksize * 2;
 1578              		.loc 1 460 0
 1579 02e8 7B68     		ldr	r3, [r7, #4]	@ float
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 37


 1580 02ea 1946     		mov	r1, r3
 1581 02ec 1846     		mov	r0, r3
 1582 02ee FFF7FEFF 		bl	__aeabi_fadd
 1583 02f2 0346     		mov	r3, r0
 1584 02f4 1A46     		mov	r2, r3
 1585 02f6 344B     		ldr	r3, .L105+8
 1586 02f8 1A60     		str	r2, [r3]	@ float
 1587              	.L92:
 461:main.c        ****             }
 462:main.c        ****             
 463:main.c        ****             
 464:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 465:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1588              		.loc 1 465 0
 1589 02fa 324B     		ldr	r3, .L105+4
 1590 02fc 1A68     		ldr	r2, [r3]	@ float
 1591 02fe 324B     		ldr	r3, .L105+8
 1592 0300 1B68     		ldr	r3, [r3]	@ float
 1593 0302 1946     		mov	r1, r3
 1594 0304 1046     		mov	r0, r2
 1595 0306 FFF7FEFF 		bl	__aeabi_fcmpge
 1596 030a 0346     		mov	r3, r0
 1597 030c 002B     		cmp	r3, #0
 1598 030e 03D0     		beq	.L102
 466:main.c        ****                 // Get next instruction
 467:main.c        ****                 MoveToNextInstruction();
 1599              		.loc 1 467 0
 1600 0310 FFF7FEFF 		bl	MoveToNextInstruction
 468:main.c        **** 
 469:main.c        ****                 
 470:main.c        ****                 return Stop;
 1601              		.loc 1 470 0
 1602 0314 0523     		movs	r3, #5
 1603 0316 4EE0     		b	.L69
 1604              	.L102:
 471:main.c        ****             }
 472:main.c        ****             
 473:main.c        ****             return ForwardCourseCorrection();
 1605              		.loc 1 473 0
 1606 0318 FFF7FEFF 		bl	ForwardCourseCorrection
 1607 031c 0346     		mov	r3, r0
 1608 031e 4AE0     		b	.L69
 1609              	.L66:
 474:main.c        ****             break;
 475:main.c        ****         case StopAtTarget:
 476:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 477:main.c        ****             // Reset flags
 478:main.c        ****             totalDistance = 0;
 1610              		.loc 1 478 0
 1611 0320 284B     		ldr	r3, .L105+4
 1612 0322 4FF00002 		mov	r2, #0
 1613 0326 1A60     		str	r2, [r3]	@ float
 479:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1614              		.loc 1 479 0
 1615 0328 254B     		ldr	r3, .L105
 1616 032a 0022     		movs	r2, #0
 1617 032c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 38


 480:main.c        ****             blockSizeTotal = 0;
 1618              		.loc 1 480 0
 1619 032e 264B     		ldr	r3, .L105+8
 1620 0330 4FF00002 		mov	r2, #0
 1621 0334 1A60     		str	r2, [r3]	@ float
 481:main.c        ****             
 482:main.c        ****             if (stopBuffer <= 200) {
 1622              		.loc 1 482 0
 1623 0336 254B     		ldr	r3, .L105+12
 1624 0338 1B68     		ldr	r3, [r3]
 1625 033a C82B     		cmp	r3, #200
 1626 033c 01D8     		bhi	.L95
 483:main.c        ****                 return Stop;    
 1627              		.loc 1 483 0
 1628 033e 0523     		movs	r3, #5
 1629 0340 39E0     		b	.L69
 1630              	.L95:
 484:main.c        ****             }
 485:main.c        ****             return TurnRight;
 1631              		.loc 1 485 0
 1632 0342 0123     		movs	r3, #1
 1633 0344 37E0     		b	.L69
 1634              	.L64:
 486:main.c        ****             break;
 487:main.c        ****         case uTurn:
 488:main.c        ****             if (currentDirection == Stop) {
 1635              		.loc 1 488 0
 1636 0346 224B     		ldr	r3, .L105+16
 1637 0348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 034a 052B     		cmp	r3, #5
 1639 034c 08D1     		bne	.L96
 489:main.c        ****                 if (stopBuffer <= 50) {
 1640              		.loc 1 489 0
 1641 034e 1F4B     		ldr	r3, .L105+12
 1642 0350 1B68     		ldr	r3, [r3]
 1643 0352 322B     		cmp	r3, #50
 1644 0354 01D8     		bhi	.L97
 490:main.c        ****                     return Stop;    
 1645              		.loc 1 490 0
 1646 0356 0523     		movs	r3, #5
 1647 0358 2DE0     		b	.L69
 1648              	.L97:
 491:main.c        ****                 } else {
 492:main.c        ****                     stopBuffer = 100;    
 1649              		.loc 1 492 0
 1650 035a 1C4B     		ldr	r3, .L105+12
 1651 035c 6422     		movs	r2, #100
 1652 035e 1A60     		str	r2, [r3]
 1653              	.L96:
 493:main.c        ****                 }
 494:main.c        ****             }
 495:main.c        ****             
 496:main.c        ****             
 497:main.c        ****             if (!uTurnStartedFlag) {
 1654              		.loc 1 497 0
 1655 0360 1C4B     		ldr	r3, .L105+20
 1656 0362 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 39


 1657 0364 DBB2     		uxtb	r3, r3
 1658 0366 002B     		cmp	r3, #0
 1659 0368 07D1     		bne	.L98
 498:main.c        ****                 uTurnStartedFlag = 1;
 1660              		.loc 1 498 0
 1661 036a 1A4B     		ldr	r3, .L105+20
 1662 036c 0122     		movs	r2, #1
 1663 036e 1A70     		strb	r2, [r3]
 499:main.c        ****                 spinCourseCorrectionStarted = 0;
 1664              		.loc 1 499 0
 1665 0370 194B     		ldr	r3, .L105+24
 1666 0372 0022     		movs	r2, #0
 1667 0374 1A70     		strb	r2, [r3]
 500:main.c        ****                 return Spin180;
 1668              		.loc 1 500 0
 1669 0376 0A23     		movs	r3, #10
 1670 0378 1DE0     		b	.L69
 1671              	.L98:
 501:main.c        ****             } 
 502:main.c        ****             
 503:main.c        ****             if (uTurnFinishedFlag) {
 1672              		.loc 1 503 0
 1673 037a 184B     		ldr	r3, .L105+28
 1674 037c 1B78     		ldrb	r3, [r3]
 1675 037e DBB2     		uxtb	r3, r3
 1676 0380 002B     		cmp	r3, #0
 1677 0382 03D0     		beq	.L99
 504:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 505:main.c        ****                 MoveToNextInstruction();
 1678              		.loc 1 505 0
 1679 0384 FFF7FEFF 		bl	MoveToNextInstruction
 506:main.c        ****                 return Stop;    
 1680              		.loc 1 506 0
 1681 0388 0523     		movs	r3, #5
 1682 038a 14E0     		b	.L69
 1683              	.L99:
 507:main.c        ****             }
 508:main.c        ****             
 509:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 510:main.c        ****             if (uTurnStartedFlag) {
 1684              		.loc 1 510 0
 1685 038c 114B     		ldr	r3, .L105+20
 1686 038e 1B78     		ldrb	r3, [r3]
 1687 0390 DBB2     		uxtb	r3, r3
 1688 0392 002B     		cmp	r3, #0
 1689 0394 0AD0     		beq	.L100
 511:main.c        ****                 if (!s5 && !s6) {
 1690              		.loc 1 511 0
 1691 0396 124B     		ldr	r3, .L105+32
 1692 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1693 039a 002B     		cmp	r3, #0
 1694 039c 06D1     		bne	.L100
 1695              		.loc 1 511 0 is_stmt 0 discriminator 1
 1696 039e 114B     		ldr	r3, .L105+36
 1697 03a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 03a2 002B     		cmp	r3, #0
 1699 03a4 02D1     		bne	.L100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 40


 512:main.c        ****                     uTurnFinishedFlag = 1;    
 1700              		.loc 1 512 0 is_stmt 1
 1701 03a6 0D4B     		ldr	r3, .L105+28
 1702 03a8 0122     		movs	r2, #1
 1703 03aa 1A70     		strb	r2, [r3]
 1704              	.L100:
 513:main.c        ****                 }    
 514:main.c        ****             }
 515:main.c        ****             
 516:main.c        ****             return SpinCourseCorrection();
 1705              		.loc 1 516 0
 1706 03ac FFF7FEFF 		bl	SpinCourseCorrection
 1707 03b0 0346     		mov	r3, r0
 1708 03b2 00E0     		b	.L69
 1709              	.L59:
 517:main.c        ****             break;
 518:main.c        ****         default:
 519:main.c        ****             return Stop;
 1710              		.loc 1 519 0
 1711 03b4 0523     		movs	r3, #5
 1712              	.L69:
 520:main.c        ****             break;
 521:main.c        ****     }
 522:main.c        ****     return Stop;
 523:main.c        **** }
 1713              		.loc 1 523 0
 1714 03b6 1846     		mov	r0, r3
 1715 03b8 0837     		adds	r7, r7, #8
 1716              		.cfi_def_cfa_offset 8
 1717 03ba BD46     		mov	sp, r7
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
 1720 03bc 80BD     		pop	{r7, pc}
 1721              	.L106:
 1722 03be 00BF     		.align	2
 1723              	.L105:
 1724 03c0 36000000 		.word	forwardUntilTargetStartedFlag
 1725 03c4 00000000 		.word	totalDistance
 1726 03c8 00000000 		.word	blockSizeTotal
 1727 03cc 00000000 		.word	stopBuffer
 1728 03d0 00000000 		.word	currentDirection
 1729 03d4 37000000 		.word	uTurnStartedFlag
 1730 03d8 3B000000 		.word	spinCourseCorrectionStarted
 1731 03dc 38000000 		.word	uTurnFinishedFlag
 1732 03e0 00000000 		.word	s5
 1733 03e4 00000000 		.word	s6
 1734              		.cfi_endproc
 1735              	.LFE75:
 1736              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1737              		.global	__aeabi_i2f
 1738              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1739              		.align	2
 1740              		.global	CalculateDistanceToTravel
 1741              		.thumb
 1742              		.thumb_func
 1743              		.type	CalculateDistanceToTravel, %function
 1744              	CalculateDistanceToTravel:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 41


 1745              	.LFB76:
 524:main.c        **** 
 525:main.c        **** // Calculate total blocksize to travel until target
 526:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1746              		.loc 1 526 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 40
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750 0000 80B5     		push	{r7, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 7, -8
 1753              		.cfi_offset 14, -4
 1754 0002 8AB0     		sub	sp, sp, #40
 1755              		.cfi_def_cfa_offset 48
 1756 0004 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 1758 0006 7860     		str	r0, [r7, #4]	@ float
 527:main.c        ****     float totalBlockSize;
 528:main.c        ****     
 529:main.c        ****     // Check for Row, Col that target is 
 530:main.c        ****     int targetRow = food_list[0][0];
 1759              		.loc 1 530 0
 1760 0008 9E4B     		ldr	r3, .L152
 1761 000a 1B68     		ldr	r3, [r3]
 1762 000c 3B61     		str	r3, [r7, #16]
 531:main.c        ****     int targetCol = food_list[0][1];
 1763              		.loc 1 531 0
 1764 000e 9D4B     		ldr	r3, .L152
 1765 0010 5B68     		ldr	r3, [r3, #4]
 1766 0012 FB60     		str	r3, [r7, #12]
 532:main.c        ****     
 533:main.c        ****     int pathCount = 0;
 1767              		.loc 1 533 0
 1768 0014 0023     		movs	r3, #0
 1769 0016 7B62     		str	r3, [r7, #36]
 534:main.c        ****     
 535:main.c        ****     // Depending on the robot orientation
 536:main.c        ****     // count++ if row, col is 8
 537:main.c        ****     // count reset if row, col is 1 or 0
 538:main.c        ****     // save count if row, col is 9
 539:main.c        ****     switch (currentRobotOrientation) {
 1770              		.loc 1 539 0
 1771 0018 9B4B     		ldr	r3, .L152+4
 1772 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 001c 032B     		cmp	r3, #3
 1774 001e 00F21F81 		bhi	.L108
 1775 0022 01A2     		adr	r2, .L110
 1776 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1777              		.p2align 2
 1778              	.L110:
 1779 0028 39000000 		.word	.L109+1
 1780 002c C3000000 		.word	.L111+1
 1781 0030 4D010000 		.word	.L112+1
 1782 0034 D7010000 		.word	.L113+1
 1783              		.p2align 1
 1784              	.L109:
 1785              	.LBB3:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 42


 540:main.c        ****         case Up:
 541:main.c        ****             // Column
 542:main.c        ****             // Start from Bottom (since we're facing up)
 543:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1786              		.loc 1 543 0
 1787 0038 0F23     		movs	r3, #15
 1788 003a 3B62     		str	r3, [r7, #32]
 1789 003c 3BE0     		b	.L114
 1790              	.L120:
 544:main.c        ****                 if (map[i][targetCol] == 9) {
 1791              		.loc 1 544 0
 1792 003e 9349     		ldr	r1, .L152+8
 1793 0040 3A6A     		ldr	r2, [r7, #32]
 1794 0042 1346     		mov	r3, r2
 1795 0044 DB00     		lsls	r3, r3, #3
 1796 0046 1344     		add	r3, r3, r2
 1797 0048 5B00     		lsls	r3, r3, #1
 1798 004a 1344     		add	r3, r3, r2
 1799 004c FA68     		ldr	r2, [r7, #12]
 1800 004e 1344     		add	r3, r3, r2
 1801 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1802 0054 092B     		cmp	r3, #9
 1803 0056 32D0     		beq	.L147
 545:main.c        ****                     break;    
 546:main.c        ****                 }
 547:main.c        ****                 if (map[i][targetCol] == 8) {
 1804              		.loc 1 547 0
 1805 0058 8C49     		ldr	r1, .L152+8
 1806 005a 3A6A     		ldr	r2, [r7, #32]
 1807 005c 1346     		mov	r3, r2
 1808 005e DB00     		lsls	r3, r3, #3
 1809 0060 1344     		add	r3, r3, r2
 1810 0062 5B00     		lsls	r3, r3, #1
 1811 0064 1344     		add	r3, r3, r2
 1812 0066 FA68     		ldr	r2, [r7, #12]
 1813 0068 1344     		add	r3, r3, r2
 1814 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1815 006e 082B     		cmp	r3, #8
 1816 0070 02D1     		bne	.L117
 548:main.c        ****                     pathCount++;    
 1817              		.loc 1 548 0
 1818 0072 7B6A     		ldr	r3, [r7, #36]
 1819 0074 0133     		adds	r3, r3, #1
 1820 0076 7B62     		str	r3, [r7, #36]
 1821              	.L117:
 549:main.c        ****                 }
 550:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1822              		.loc 1 550 0
 1823 0078 8449     		ldr	r1, .L152+8
 1824 007a 3A6A     		ldr	r2, [r7, #32]
 1825 007c 1346     		mov	r3, r2
 1826 007e DB00     		lsls	r3, r3, #3
 1827 0080 1344     		add	r3, r3, r2
 1828 0082 5B00     		lsls	r3, r3, #1
 1829 0084 1344     		add	r3, r3, r2
 1830 0086 FA68     		ldr	r2, [r7, #12]
 1831 0088 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 43


 1832 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1833 008e 002B     		cmp	r3, #0
 1834 0090 0CD0     		beq	.L118
 1835              		.loc 1 550 0 is_stmt 0 discriminator 1
 1836 0092 7E49     		ldr	r1, .L152+8
 1837 0094 3A6A     		ldr	r2, [r7, #32]
 1838 0096 1346     		mov	r3, r2
 1839 0098 DB00     		lsls	r3, r3, #3
 1840 009a 1344     		add	r3, r3, r2
 1841 009c 5B00     		lsls	r3, r3, #1
 1842 009e 1344     		add	r3, r3, r2
 1843 00a0 FA68     		ldr	r2, [r7, #12]
 1844 00a2 1344     		add	r3, r3, r2
 1845 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1846 00a8 012B     		cmp	r3, #1
 1847 00aa 01D1     		bne	.L119
 1848              	.L118:
 551:main.c        ****                     pathCount = 0;
 1849              		.loc 1 551 0 is_stmt 1
 1850 00ac 0023     		movs	r3, #0
 1851 00ae 7B62     		str	r3, [r7, #36]
 1852              	.L119:
 543:main.c        ****                 if (map[i][targetCol] == 9) {
 1853              		.loc 1 543 0 discriminator 2
 1854 00b0 3B6A     		ldr	r3, [r7, #32]
 1855 00b2 013B     		subs	r3, r3, #1
 1856 00b4 3B62     		str	r3, [r7, #32]
 1857              	.L114:
 543:main.c        ****                 if (map[i][targetCol] == 9) {
 1858              		.loc 1 543 0 is_stmt 0 discriminator 1
 1859 00b6 3B6A     		ldr	r3, [r7, #32]
 1860 00b8 002B     		cmp	r3, #0
 1861 00ba C0DA     		bge	.L120
 1862              	.LBE3:
 552:main.c        ****                 }
 553:main.c        ****             }
 554:main.c        ****             break;
 1863              		.loc 1 554 0 is_stmt 1
 1864 00bc D0E0     		b	.L108
 1865              	.L147:
 1866              	.LBB4:
 545:main.c        ****                 }
 1867              		.loc 1 545 0
 1868 00be 00BF     		nop
 1869              	.LBE4:
 1870              		.loc 1 554 0
 1871 00c0 CEE0     		b	.L108
 1872              	.L111:
 1873              	.LBB5:
 555:main.c        ****         case Down:
 556:main.c        ****             // Target Column, Check Row
 557:main.c        ****             // Start from Top
 558:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1874              		.loc 1 558 0
 1875 00c2 0023     		movs	r3, #0
 1876 00c4 FB61     		str	r3, [r7, #28]
 1877 00c6 3BE0     		b	.L121
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 44


 1878              	.L127:
 559:main.c        ****                 if (map[i][targetCol] == 9) {
 1879              		.loc 1 559 0
 1880 00c8 7049     		ldr	r1, .L152+8
 1881 00ca FA69     		ldr	r2, [r7, #28]
 1882 00cc 1346     		mov	r3, r2
 1883 00ce DB00     		lsls	r3, r3, #3
 1884 00d0 1344     		add	r3, r3, r2
 1885 00d2 5B00     		lsls	r3, r3, #1
 1886 00d4 1344     		add	r3, r3, r2
 1887 00d6 FA68     		ldr	r2, [r7, #12]
 1888 00d8 1344     		add	r3, r3, r2
 1889 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1890 00de 092B     		cmp	r3, #9
 1891 00e0 32D0     		beq	.L148
 560:main.c        ****                     break;    
 561:main.c        ****                 }
 562:main.c        ****                 if (map[i][targetCol] == 8) {
 1892              		.loc 1 562 0
 1893 00e2 6A49     		ldr	r1, .L152+8
 1894 00e4 FA69     		ldr	r2, [r7, #28]
 1895 00e6 1346     		mov	r3, r2
 1896 00e8 DB00     		lsls	r3, r3, #3
 1897 00ea 1344     		add	r3, r3, r2
 1898 00ec 5B00     		lsls	r3, r3, #1
 1899 00ee 1344     		add	r3, r3, r2
 1900 00f0 FA68     		ldr	r2, [r7, #12]
 1901 00f2 1344     		add	r3, r3, r2
 1902 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1903 00f8 082B     		cmp	r3, #8
 1904 00fa 02D1     		bne	.L124
 563:main.c        ****                     pathCount++;    
 1905              		.loc 1 563 0
 1906 00fc 7B6A     		ldr	r3, [r7, #36]
 1907 00fe 0133     		adds	r3, r3, #1
 1908 0100 7B62     		str	r3, [r7, #36]
 1909              	.L124:
 564:main.c        ****                 }
 565:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1910              		.loc 1 565 0
 1911 0102 6249     		ldr	r1, .L152+8
 1912 0104 FA69     		ldr	r2, [r7, #28]
 1913 0106 1346     		mov	r3, r2
 1914 0108 DB00     		lsls	r3, r3, #3
 1915 010a 1344     		add	r3, r3, r2
 1916 010c 5B00     		lsls	r3, r3, #1
 1917 010e 1344     		add	r3, r3, r2
 1918 0110 FA68     		ldr	r2, [r7, #12]
 1919 0112 1344     		add	r3, r3, r2
 1920 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1921 0118 002B     		cmp	r3, #0
 1922 011a 0CD0     		beq	.L125
 1923              		.loc 1 565 0 is_stmt 0 discriminator 1
 1924 011c 5B49     		ldr	r1, .L152+8
 1925 011e FA69     		ldr	r2, [r7, #28]
 1926 0120 1346     		mov	r3, r2
 1927 0122 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 45


 1928 0124 1344     		add	r3, r3, r2
 1929 0126 5B00     		lsls	r3, r3, #1
 1930 0128 1344     		add	r3, r3, r2
 1931 012a FA68     		ldr	r2, [r7, #12]
 1932 012c 1344     		add	r3, r3, r2
 1933 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1934 0132 012B     		cmp	r3, #1
 1935 0134 01D1     		bne	.L126
 1936              	.L125:
 566:main.c        ****                     pathCount = 0;
 1937              		.loc 1 566 0 is_stmt 1
 1938 0136 0023     		movs	r3, #0
 1939 0138 7B62     		str	r3, [r7, #36]
 1940              	.L126:
 558:main.c        ****                 if (map[i][targetCol] == 9) {
 1941              		.loc 1 558 0 discriminator 2
 1942 013a FB69     		ldr	r3, [r7, #28]
 1943 013c 0133     		adds	r3, r3, #1
 1944 013e FB61     		str	r3, [r7, #28]
 1945              	.L121:
 558:main.c        ****                 if (map[i][targetCol] == 9) {
 1946              		.loc 1 558 0 is_stmt 0 discriminator 1
 1947 0140 FB69     		ldr	r3, [r7, #28]
 1948 0142 0E2B     		cmp	r3, #14
 1949 0144 C0DD     		ble	.L127
 1950              	.LBE5:
 567:main.c        ****                 }
 568:main.c        ****             }
 569:main.c        ****             break;
 1951              		.loc 1 569 0 is_stmt 1
 1952 0146 8BE0     		b	.L108
 1953              	.L148:
 1954              	.LBB6:
 560:main.c        ****                 }
 1955              		.loc 1 560 0
 1956 0148 00BF     		nop
 1957              	.LBE6:
 1958              		.loc 1 569 0
 1959 014a 89E0     		b	.L108
 1960              	.L112:
 1961              	.LBB7:
 570:main.c        ****         case Left:
 571:main.c        ****             // Target Row, Check Col
 572:main.c        ****             // Start from Right
 573:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1962              		.loc 1 573 0
 1963 014c 1323     		movs	r3, #19
 1964 014e BB61     		str	r3, [r7, #24]
 1965 0150 3BE0     		b	.L128
 1966              	.L134:
 574:main.c        ****                 if (map[targetRow][i] == 9) {
 1967              		.loc 1 574 0
 1968 0152 4E49     		ldr	r1, .L152+8
 1969 0154 3A69     		ldr	r2, [r7, #16]
 1970 0156 1346     		mov	r3, r2
 1971 0158 DB00     		lsls	r3, r3, #3
 1972 015a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 46


 1973 015c 5B00     		lsls	r3, r3, #1
 1974 015e 1344     		add	r3, r3, r2
 1975 0160 BA69     		ldr	r2, [r7, #24]
 1976 0162 1344     		add	r3, r3, r2
 1977 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1978 0168 092B     		cmp	r3, #9
 1979 016a 32D0     		beq	.L149
 575:main.c        ****                     break;    
 576:main.c        ****                 }
 577:main.c        ****                 if (map[targetRow][i] == 8) {
 1980              		.loc 1 577 0
 1981 016c 4749     		ldr	r1, .L152+8
 1982 016e 3A69     		ldr	r2, [r7, #16]
 1983 0170 1346     		mov	r3, r2
 1984 0172 DB00     		lsls	r3, r3, #3
 1985 0174 1344     		add	r3, r3, r2
 1986 0176 5B00     		lsls	r3, r3, #1
 1987 0178 1344     		add	r3, r3, r2
 1988 017a BA69     		ldr	r2, [r7, #24]
 1989 017c 1344     		add	r3, r3, r2
 1990 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1991 0182 082B     		cmp	r3, #8
 1992 0184 02D1     		bne	.L131
 578:main.c        ****                     pathCount++;    
 1993              		.loc 1 578 0
 1994 0186 7B6A     		ldr	r3, [r7, #36]
 1995 0188 0133     		adds	r3, r3, #1
 1996 018a 7B62     		str	r3, [r7, #36]
 1997              	.L131:
 579:main.c        ****                 }
 580:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1998              		.loc 1 580 0
 1999 018c 3F49     		ldr	r1, .L152+8
 2000 018e 3A69     		ldr	r2, [r7, #16]
 2001 0190 1346     		mov	r3, r2
 2002 0192 DB00     		lsls	r3, r3, #3
 2003 0194 1344     		add	r3, r3, r2
 2004 0196 5B00     		lsls	r3, r3, #1
 2005 0198 1344     		add	r3, r3, r2
 2006 019a BA69     		ldr	r2, [r7, #24]
 2007 019c 1344     		add	r3, r3, r2
 2008 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2009 01a2 002B     		cmp	r3, #0
 2010 01a4 0CD0     		beq	.L132
 2011              		.loc 1 580 0 is_stmt 0 discriminator 1
 2012 01a6 3949     		ldr	r1, .L152+8
 2013 01a8 BA69     		ldr	r2, [r7, #24]
 2014 01aa 1346     		mov	r3, r2
 2015 01ac DB00     		lsls	r3, r3, #3
 2016 01ae 1344     		add	r3, r3, r2
 2017 01b0 5B00     		lsls	r3, r3, #1
 2018 01b2 1344     		add	r3, r3, r2
 2019 01b4 FA68     		ldr	r2, [r7, #12]
 2020 01b6 1344     		add	r3, r3, r2
 2021 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2022 01bc 012B     		cmp	r3, #1
 2023 01be 01D1     		bne	.L133
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 47


 2024              	.L132:
 581:main.c        ****                     pathCount = 0;
 2025              		.loc 1 581 0 is_stmt 1
 2026 01c0 0023     		movs	r3, #0
 2027 01c2 7B62     		str	r3, [r7, #36]
 2028              	.L133:
 573:main.c        ****                 if (map[targetRow][i] == 9) {
 2029              		.loc 1 573 0 discriminator 2
 2030 01c4 BB69     		ldr	r3, [r7, #24]
 2031 01c6 013B     		subs	r3, r3, #1
 2032 01c8 BB61     		str	r3, [r7, #24]
 2033              	.L128:
 573:main.c        ****                 if (map[targetRow][i] == 9) {
 2034              		.loc 1 573 0 is_stmt 0 discriminator 1
 2035 01ca BB69     		ldr	r3, [r7, #24]
 2036 01cc 002B     		cmp	r3, #0
 2037 01ce C0DA     		bge	.L134
 2038              	.LBE7:
 582:main.c        ****                 }
 583:main.c        ****             }
 584:main.c        ****             break;
 2039              		.loc 1 584 0 is_stmt 1
 2040 01d0 46E0     		b	.L108
 2041              	.L149:
 2042              	.LBB8:
 575:main.c        ****                 }
 2043              		.loc 1 575 0
 2044 01d2 00BF     		nop
 2045              	.LBE8:
 2046              		.loc 1 584 0
 2047 01d4 44E0     		b	.L108
 2048              	.L113:
 2049              	.LBB9:
 585:main.c        ****         
 586:main.c        ****         case Right:
 587:main.c        ****             // Target Row, Check Col
 588:main.c        ****             // Start from Left
 589:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 2050              		.loc 1 589 0
 2051 01d6 0023     		movs	r3, #0
 2052 01d8 7B61     		str	r3, [r7, #20]
 2053 01da 3BE0     		b	.L135
 2054              	.L141:
 590:main.c        ****                 if (map[targetRow][i] == 9) {
 2055              		.loc 1 590 0
 2056 01dc 2B49     		ldr	r1, .L152+8
 2057 01de 3A69     		ldr	r2, [r7, #16]
 2058 01e0 1346     		mov	r3, r2
 2059 01e2 DB00     		lsls	r3, r3, #3
 2060 01e4 1344     		add	r3, r3, r2
 2061 01e6 5B00     		lsls	r3, r3, #1
 2062 01e8 1344     		add	r3, r3, r2
 2063 01ea 7A69     		ldr	r2, [r7, #20]
 2064 01ec 1344     		add	r3, r3, r2
 2065 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2066 01f2 092B     		cmp	r3, #9
 2067 01f4 32D0     		beq	.L150
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 48


 591:main.c        ****                     break;    
 592:main.c        ****                 }
 593:main.c        ****                 if (map[targetRow][i] == 8) {
 2068              		.loc 1 593 0
 2069 01f6 2549     		ldr	r1, .L152+8
 2070 01f8 3A69     		ldr	r2, [r7, #16]
 2071 01fa 1346     		mov	r3, r2
 2072 01fc DB00     		lsls	r3, r3, #3
 2073 01fe 1344     		add	r3, r3, r2
 2074 0200 5B00     		lsls	r3, r3, #1
 2075 0202 1344     		add	r3, r3, r2
 2076 0204 7A69     		ldr	r2, [r7, #20]
 2077 0206 1344     		add	r3, r3, r2
 2078 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2079 020c 082B     		cmp	r3, #8
 2080 020e 02D1     		bne	.L138
 594:main.c        ****                     pathCount++;    
 2081              		.loc 1 594 0
 2082 0210 7B6A     		ldr	r3, [r7, #36]
 2083 0212 0133     		adds	r3, r3, #1
 2084 0214 7B62     		str	r3, [r7, #36]
 2085              	.L138:
 595:main.c        ****                 }
 596:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2086              		.loc 1 596 0
 2087 0216 1D49     		ldr	r1, .L152+8
 2088 0218 3A69     		ldr	r2, [r7, #16]
 2089 021a 1346     		mov	r3, r2
 2090 021c DB00     		lsls	r3, r3, #3
 2091 021e 1344     		add	r3, r3, r2
 2092 0220 5B00     		lsls	r3, r3, #1
 2093 0222 1344     		add	r3, r3, r2
 2094 0224 7A69     		ldr	r2, [r7, #20]
 2095 0226 1344     		add	r3, r3, r2
 2096 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2097 022c 002B     		cmp	r3, #0
 2098 022e 0CD0     		beq	.L139
 2099              		.loc 1 596 0 is_stmt 0 discriminator 1
 2100 0230 1649     		ldr	r1, .L152+8
 2101 0232 7A69     		ldr	r2, [r7, #20]
 2102 0234 1346     		mov	r3, r2
 2103 0236 DB00     		lsls	r3, r3, #3
 2104 0238 1344     		add	r3, r3, r2
 2105 023a 5B00     		lsls	r3, r3, #1
 2106 023c 1344     		add	r3, r3, r2
 2107 023e FA68     		ldr	r2, [r7, #12]
 2108 0240 1344     		add	r3, r3, r2
 2109 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2110 0246 012B     		cmp	r3, #1
 2111 0248 01D1     		bne	.L140
 2112              	.L139:
 597:main.c        ****                     pathCount = 0;
 2113              		.loc 1 597 0 is_stmt 1
 2114 024a 0023     		movs	r3, #0
 2115 024c 7B62     		str	r3, [r7, #36]
 2116              	.L140:
 589:main.c        ****                 if (map[targetRow][i] == 9) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 49


 2117              		.loc 1 589 0 discriminator 2
 2118 024e 7B69     		ldr	r3, [r7, #20]
 2119 0250 0133     		adds	r3, r3, #1
 2120 0252 7B61     		str	r3, [r7, #20]
 2121              	.L135:
 589:main.c        ****                 if (map[targetRow][i] == 9) {
 2122              		.loc 1 589 0 is_stmt 0 discriminator 1
 2123 0254 7B69     		ldr	r3, [r7, #20]
 2124 0256 122B     		cmp	r3, #18
 2125 0258 C0DD     		ble	.L141
 2126              	.LBE9:
 598:main.c        ****                 }
 599:main.c        **** 
 600:main.c        ****             }
 601:main.c        ****             break;
 2127              		.loc 1 601 0 is_stmt 1
 2128 025a 00E0     		b	.L151
 2129              	.L150:
 2130              	.LBB10:
 591:main.c        ****                 }
 2131              		.loc 1 591 0
 2132 025c 00BF     		nop
 2133              	.L151:
 2134              	.LBE10:
 2135              		.loc 1 601 0
 2136 025e 00BF     		nop
 2137              	.L108:
 602:main.c        ****     }
 603:main.c        ****     totalBlockSize = blockSize * pathCount;
 2138              		.loc 1 603 0
 2139 0260 786A     		ldr	r0, [r7, #36]
 2140 0262 FFF7FEFF 		bl	__aeabi_i2f
 2141 0266 0346     		mov	r3, r0
 2142 0268 7968     		ldr	r1, [r7, #4]	@ float
 2143 026a 1846     		mov	r0, r3
 2144 026c FFF7FEFF 		bl	__aeabi_fmul
 2145 0270 0346     		mov	r3, r0
 2146 0272 BB60     		str	r3, [r7, #8]	@ float
 604:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 2147              		.loc 1 604 0
 2148 0274 0548     		ldr	r0, .L152+8
 2149 0276 FFF7FEFF 		bl	clearMap
 605:main.c        ****     return totalBlockSize;
 2150              		.loc 1 605 0
 2151 027a BB68     		ldr	r3, [r7, #8]	@ float
 606:main.c        **** }
 2152              		.loc 1 606 0
 2153 027c 1846     		mov	r0, r3
 2154 027e 2837     		adds	r7, r7, #40
 2155              		.cfi_def_cfa_offset 8
 2156 0280 BD46     		mov	sp, r7
 2157              		.cfi_def_cfa_register 13
 2158              		@ sp needed
 2159 0282 80BD     		pop	{r7, pc}
 2160              	.L153:
 2161              		.align	2
 2162              	.L152:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 50


 2163 0284 00000000 		.word	food_list
 2164 0288 00000000 		.word	currentRobotOrientation
 2165 028c 00000000 		.word	map
 2166              		.cfi_endproc
 2167              	.LFE76:
 2168              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 2169              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2170              		.align	2
 2171              		.global	MoveToNextInstruction
 2172              		.thumb
 2173              		.thumb_func
 2174              		.type	MoveToNextInstruction, %function
 2175              	MoveToNextInstruction:
 2176              	.LFB77:
 607:main.c        **** 
 608:main.c        **** // get next instruction
 609:main.c        **** void MoveToNextInstruction() {
 2177              		.loc 1 609 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 8
 2180              		@ frame_needed = 1, uses_anonymous_args = 0
 2181              		@ link register save eliminated.
 2182 0000 80B4     		push	{r7}
 2183              		.cfi_def_cfa_offset 4
 2184              		.cfi_offset 7, -4
 2185 0002 83B0     		sub	sp, sp, #12
 2186              		.cfi_def_cfa_offset 16
 2187 0004 00AF     		add	r7, sp, #0
 2188              		.cfi_def_cfa_register 7
 610:main.c        ****     currentIgnoreL = 0;
 2189              		.loc 1 610 0
 2190 0006 1E4B     		ldr	r3, .L159
 2191 0008 0022     		movs	r2, #0
 2192 000a 1A70     		strb	r2, [r3]
 611:main.c        ****     currentIgnoreR = 0;
 2193              		.loc 1 611 0
 2194 000c 1D4B     		ldr	r3, .L159+4
 2195 000e 0022     		movs	r2, #0
 2196 0010 1A70     		strb	r2, [r3]
 612:main.c        ****     instructionIndex++;
 2197              		.loc 1 612 0
 2198 0012 1D4B     		ldr	r3, .L159+8
 2199 0014 1B68     		ldr	r3, [r3]
 2200 0016 0133     		adds	r3, r3, #1
 2201 0018 1B4A     		ldr	r2, .L159+8
 2202 001a 1360     		str	r3, [r2]
 2203              	.LBB11:
 613:main.c        **** 
 614:main.c        ****     for (int i = instructionIndex; i < numSteps; i++) {
 2204              		.loc 1 614 0
 2205 001c 1A4B     		ldr	r3, .L159+8
 2206 001e 1B68     		ldr	r3, [r3]
 2207 0020 7B60     		str	r3, [r7, #4]
 2208 0022 22E0     		b	.L155
 2209              	.L158:
 615:main.c        ****         if (instructionList[i].direction != Skip) {
 2210              		.loc 1 615 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 51


 2211 0024 194B     		ldr	r3, .L159+12
 2212 0026 1A68     		ldr	r2, [r3]
 2213 0028 7B68     		ldr	r3, [r7, #4]
 2214 002a 1B01     		lsls	r3, r3, #4
 2215 002c 1344     		add	r3, r3, r2
 2216 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2217 0030 062B     		cmp	r3, #6
 2218 0032 17D0     		beq	.L156
 616:main.c        ****             instructionIndex = i;             
 2219              		.loc 1 616 0
 2220 0034 7B68     		ldr	r3, [r7, #4]
 2221 0036 144A     		ldr	r2, .L159+8
 2222 0038 1360     		str	r3, [r2]
 617:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2223              		.loc 1 617 0
 2224 003a 144B     		ldr	r3, .L159+12
 2225 003c 1A68     		ldr	r2, [r3]
 2226 003e 124B     		ldr	r3, .L159+8
 2227 0040 1B68     		ldr	r3, [r3]
 2228 0042 1B01     		lsls	r3, r3, #4
 2229 0044 1344     		add	r3, r3, r2
 2230 0046 5B68     		ldr	r3, [r3, #4]
 2231 0048 DAB2     		uxtb	r2, r3
 2232 004a 0D4B     		ldr	r3, .L159
 2233 004c 1A70     		strb	r2, [r3]
 618:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2234              		.loc 1 618 0
 2235 004e 0F4B     		ldr	r3, .L159+12
 2236 0050 1A68     		ldr	r2, [r3]
 2237 0052 0D4B     		ldr	r3, .L159+8
 2238 0054 1B68     		ldr	r3, [r3]
 2239 0056 1B01     		lsls	r3, r3, #4
 2240 0058 1344     		add	r3, r3, r2
 2241 005a 9B68     		ldr	r3, [r3, #8]
 2242 005c DAB2     		uxtb	r2, r3
 2243 005e 094B     		ldr	r3, .L159+4
 2244 0060 1A70     		strb	r2, [r3]
 619:main.c        ****             break;
 2245              		.loc 1 619 0
 2246 0062 07E0     		b	.L157
 2247              	.L156:
 614:main.c        ****         if (instructionList[i].direction != Skip) {
 2248              		.loc 1 614 0 discriminator 2
 2249 0064 7B68     		ldr	r3, [r7, #4]
 2250 0066 0133     		adds	r3, r3, #1
 2251 0068 7B60     		str	r3, [r7, #4]
 2252              	.L155:
 614:main.c        ****         if (instructionList[i].direction != Skip) {
 2253              		.loc 1 614 0 is_stmt 0 discriminator 1
 2254 006a 094B     		ldr	r3, .L159+16
 2255 006c 1B68     		ldr	r3, [r3]
 2256 006e 7A68     		ldr	r2, [r7, #4]
 2257 0070 9A42     		cmp	r2, r3
 2258 0072 D7DB     		blt	.L158
 2259              	.L157:
 2260              	.LBE11:
 620:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 52


 621:main.c        ****     }
 622:main.c        ****     
 623:main.c        ****     
 624:main.c        **** }
 2261              		.loc 1 624 0 is_stmt 1
 2262 0074 00BF     		nop
 2263 0076 0C37     		adds	r7, r7, #12
 2264              		.cfi_def_cfa_offset 4
 2265 0078 BD46     		mov	sp, r7
 2266              		.cfi_def_cfa_register 13
 2267              		@ sp needed
 2268 007a 80BC     		pop	{r7}
 2269              		.cfi_restore 7
 2270              		.cfi_def_cfa_offset 0
 2271 007c 7047     		bx	lr
 2272              	.L160:
 2273 007e 00BF     		.align	2
 2274              	.L159:
 2275 0080 3C000000 		.word	currentIgnoreL
 2276 0084 45000000 		.word	currentIgnoreR
 2277 0088 14000000 		.word	instructionIndex
 2278 008c 00000000 		.word	instructionList
 2279 0090 00000000 		.word	numSteps
 2280              		.cfi_endproc
 2281              	.LFE77:
 2282              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2283              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2284              		.align	2
 2285              		.global	GetInstructionAtIndex
 2286              		.thumb
 2287              		.thumb_func
 2288              		.type	GetInstructionAtIndex, %function
 2289              	GetInstructionAtIndex:
 2290              	.LFB78:
 625:main.c        **** 
 626:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]) {
 2291              		.loc 1 626 0
 2292              		.cfi_startproc
 2293              		@ args = 0, pretend = 0, frame = 40
 2294              		@ frame_needed = 1, uses_anonymous_args = 0
 2295              		@ link register save eliminated.
 2296 0000 90B4     		push	{r4, r7}
 2297              		.cfi_def_cfa_offset 8
 2298              		.cfi_offset 4, -8
 2299              		.cfi_offset 7, -4
 2300 0002 8AB0     		sub	sp, sp, #40
 2301              		.cfi_def_cfa_offset 48
 2302 0004 00AF     		add	r7, sp, #0
 2303              		.cfi_def_cfa_register 7
 2304 0006 F860     		str	r0, [r7, #12]
 2305 0008 B960     		str	r1, [r7, #8]
 2306 000a 7A60     		str	r2, [r7, #4]
 2307              	.LBB12:
 627:main.c        ****     Instruction nextInstruction;
 628:main.c        ****     // input is list of instructions and robot will react accordingly
 629:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 2308              		.loc 1 629 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 53


 2309 000c 1A4B     		ldr	r3, .L167
 2310 000e 1B68     		ldr	r3, [r3]
 2311 0010 7B62     		str	r3, [r7, #36]
 2312 0012 21E0     		b	.L162
 2313              	.L165:
 630:main.c        ****         if(instructionList[i].direction != Skip) {
 2314              		.loc 1 630 0
 2315 0014 7B6A     		ldr	r3, [r7, #36]
 2316 0016 1B01     		lsls	r3, r3, #4
 2317 0018 7A68     		ldr	r2, [r7, #4]
 2318 001a 1344     		add	r3, r3, r2
 2319 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 001e 062B     		cmp	r3, #6
 2321 0020 17D0     		beq	.L163
 631:main.c        ****             nextInstruction.direction = instructionList[i].direction;        
 2322              		.loc 1 631 0
 2323 0022 7B6A     		ldr	r3, [r7, #36]
 2324 0024 1B01     		lsls	r3, r3, #4
 2325 0026 7A68     		ldr	r2, [r7, #4]
 2326 0028 1344     		add	r3, r3, r2
 2327 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2328 002c 3B75     		strb	r3, [r7, #20]
 632:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 2329              		.loc 1 632 0
 2330 002e 7B6A     		ldr	r3, [r7, #36]
 2331 0030 1B01     		lsls	r3, r3, #4
 2332 0032 7A68     		ldr	r2, [r7, #4]
 2333 0034 1344     		add	r3, r3, r2
 2334 0036 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2335 0038 87F82030 		strb	r3, [r7, #32]
 633:main.c        ****             instructionIndex = i;
 2336              		.loc 1 633 0
 2337 003c 7B6A     		ldr	r3, [r7, #36]
 2338 003e 0E4A     		ldr	r2, .L167
 2339 0040 1360     		str	r3, [r2]
 634:main.c        ****             return nextInstruction; // return next instruction
 2340              		.loc 1 634 0
 2341 0042 FB68     		ldr	r3, [r7, #12]
 2342 0044 1C46     		mov	r4, r3
 2343 0046 07F11403 		add	r3, r7, #20
 2344 004a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2345 004c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2346 0050 0DE0     		b	.L161
 2347              	.L163:
 629:main.c        ****         if(instructionList[i].direction != Skip) {
 2348              		.loc 1 629 0 discriminator 2
 2349 0052 7B6A     		ldr	r3, [r7, #36]
 2350 0054 0133     		adds	r3, r3, #1
 2351 0056 7B62     		str	r3, [r7, #36]
 2352              	.L162:
 629:main.c        ****         if(instructionList[i].direction != Skip) {
 2353              		.loc 1 629 0 is_stmt 0 discriminator 1
 2354 0058 7A6A     		ldr	r2, [r7, #36]
 2355 005a BB68     		ldr	r3, [r7, #8]
 2356 005c 9A42     		cmp	r2, r3
 2357 005e D9DB     		blt	.L165
 2358              	.LBE12:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 54


 635:main.c        ****         }
 636:main.c        ****     }
 637:main.c        ****     return nextInstruction;
 2359              		.loc 1 637 0 is_stmt 1
 2360 0060 FB68     		ldr	r3, [r7, #12]
 2361 0062 1C46     		mov	r4, r3
 2362 0064 07F11403 		add	r3, r7, #20
 2363 0068 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2364 006a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2365              	.L161:
 638:main.c        **** }
 2366              		.loc 1 638 0
 2367 006e F868     		ldr	r0, [r7, #12]
 2368 0070 2837     		adds	r7, r7, #40
 2369              		.cfi_def_cfa_offset 8
 2370 0072 BD46     		mov	sp, r7
 2371              		.cfi_def_cfa_register 13
 2372              		@ sp needed
 2373 0074 90BC     		pop	{r4, r7}
 2374              		.cfi_restore 7
 2375              		.cfi_restore 4
 2376              		.cfi_def_cfa_offset 0
 2377 0076 7047     		bx	lr
 2378              	.L168:
 2379              		.align	2
 2380              	.L167:
 2381 0078 14000000 		.word	instructionIndex
 2382              		.cfi_endproc
 2383              	.LFE78:
 2384              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2385              		.section	.text.SetRobotMovement,"ax",%progbits
 2386              		.align	2
 2387              		.global	SetRobotMovement
 2388              		.thumb
 2389              		.thumb_func
 2390              		.type	SetRobotMovement, %function
 2391              	SetRobotMovement:
 2392              	.LFB79:
 639:main.c        **** 
 640:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 641:main.c        **** void SetRobotMovement() {
 2393              		.loc 1 641 0
 2394              		.cfi_startproc
 2395              		@ args = 0, pretend = 0, frame = 16
 2396              		@ frame_needed = 1, uses_anonymous_args = 0
 2397 0000 90B5     		push	{r4, r7, lr}
 2398              		.cfi_def_cfa_offset 12
 2399              		.cfi_offset 4, -12
 2400              		.cfi_offset 7, -8
 2401              		.cfi_offset 14, -4
 2402 0002 85B0     		sub	sp, sp, #20
 2403              		.cfi_def_cfa_offset 32
 2404 0004 00AF     		add	r7, sp, #0
 2405              		.cfi_def_cfa_register 7
 642:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList); // get current/ next ins
 2406              		.loc 1 642 0
 2407 0006 2A4B     		ldr	r3, .L185
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 55


 2408 0008 1968     		ldr	r1, [r3]
 2409 000a 2A4B     		ldr	r3, .L185+4
 2410 000c 1A68     		ldr	r2, [r3]
 2411 000e 2A4C     		ldr	r4, .L185+8
 2412 0010 3B46     		mov	r3, r7
 2413 0012 1846     		mov	r0, r3
 2414 0014 FFF7FEFF 		bl	GetInstructionAtIndex
 2415 0018 3B46     		mov	r3, r7
 2416 001a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2417 001c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 643:main.c        ****     previousDirection = currentDirection;
 2418              		.loc 1 643 0
 2419 0020 264B     		ldr	r3, .L185+12
 2420 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2421 0024 264B     		ldr	r3, .L185+16
 2422 0026 1A70     		strb	r2, [r3]
 644:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2423              		.loc 1 644 0
 2424 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2425 002c 0346     		mov	r3, r0
 2426 002e 1A46     		mov	r2, r3
 2427 0030 224B     		ldr	r3, .L185+12
 2428 0032 1A70     		strb	r2, [r3]
 645:main.c        ****     // move robot depending on sensors
 646:main.c        ****     switch (currentDirection) {
 2429              		.loc 1 646 0
 2430 0034 214B     		ldr	r3, .L185+12
 2431 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2432 0038 0A2B     		cmp	r3, #10
 2433 003a 35D8     		bhi	.L183
 2434 003c 01A2     		adr	r2, .L172
 2435 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2436 0042 00BF     		.p2align 2
 2437              	.L172:
 2438 0044 71000000 		.word	.L171+1
 2439 0048 77000000 		.word	.L173+1
 2440 004c 7D000000 		.word	.L174+1
 2441 0050 89000000 		.word	.L175+1
 2442 0054 83000000 		.word	.L176+1
 2443 0058 8F000000 		.word	.L177+1
 2444 005c A7000000 		.word	.L184+1
 2445 0060 A7000000 		.word	.L184+1
 2446 0064 95000000 		.word	.L180+1
 2447 0068 9B000000 		.word	.L181+1
 2448 006c A1000000 		.word	.L182+1
 2449              		.p2align 1
 2450              	.L171:
 647:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 648:main.c        ****         case Forward:
 649:main.c        ****             moveForward();
 2451              		.loc 1 649 0
 2452 0070 FFF7FEFF 		bl	moveForward
 650:main.c        ****             break;
 2453              		.loc 1 650 0
 2454 0074 18E0     		b	.L170
 2455              	.L173:
 651:main.c        ****         case TurnRight:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 56


 652:main.c        ****             turnRight();
 2456              		.loc 1 652 0
 2457 0076 FFF7FEFF 		bl	turnRight
 653:main.c        ****             break;
 2458              		.loc 1 653 0
 2459 007a 15E0     		b	.L170
 2460              	.L174:
 654:main.c        ****         case TurnLeft:
 655:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2461              		.loc 1 655 0
 2462 007c FFF7FEFF 		bl	turnLeft
 656:main.c        ****             break;
 2463              		.loc 1 656 0
 2464 0080 12E0     		b	.L170
 2465              	.L176:
 657:main.c        ****         case AdjustToTheRight:
 658:main.c        ****             adjustRight();
 2466              		.loc 1 658 0
 2467 0082 FFF7FEFF 		bl	adjustRight
 659:main.c        ****             break;
 2468              		.loc 1 659 0
 2469 0086 0FE0     		b	.L170
 2470              	.L175:
 660:main.c        ****         case AdjustToTheLeft:
 661:main.c        ****             adjustLeft();
 2471              		.loc 1 661 0
 2472 0088 FFF7FEFF 		bl	adjustLeft
 662:main.c        ****             break;
 2473              		.loc 1 662 0
 2474 008c 0CE0     		b	.L170
 2475              	.L177:
 663:main.c        ****         case Stop:
 664:main.c        ****             stopMoving();
 2476              		.loc 1 664 0
 2477 008e FFF7FEFF 		bl	stopMoving
 665:main.c        ****             break;
 2478              		.loc 1 665 0
 2479 0092 09E0     		b	.L170
 2480              	.L180:
 666:main.c        ****         case ForwardAfterTurn:
 667:main.c        ****             HardForward();
 2481              		.loc 1 667 0
 2482 0094 FFF7FEFF 		bl	HardForward
 668:main.c        ****             break;
 2483              		.loc 1 668 0
 2484 0098 06E0     		b	.L170
 2485              	.L181:
 669:main.c        ****         case Backward:
 670:main.c        ****             moveBackward();
 2486              		.loc 1 670 0
 2487 009a FFF7FEFF 		bl	moveBackward
 671:main.c        ****             break;
 2488              		.loc 1 671 0
 2489 009e 03E0     		b	.L170
 2490              	.L182:
 672:main.c        ****         case waitForTurn:
 673:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 57


 674:main.c        ****         case Spin180:
 675:main.c        ****             RotateClockwise180Degrees();
 2491              		.loc 1 675 0
 2492 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 676:main.c        ****             break;
 2493              		.loc 1 676 0
 2494 00a4 00E0     		b	.L170
 2495              	.L184:
 677:main.c        ****         /*case waitForLeftTurn:
 678:main.c        ****             moveForward();
 679:main.c        ****             break;
 680:main.c        ****         case waitForRightTurn:
 681:main.c        ****             moveForward();
 682:main.c        ****             break;*/
 683:main.c        ****         case Unknown:
 684:main.c        ****             // UNKNOWN CONFIGURATION
 685:main.c        ****             break;  
 2496              		.loc 1 685 0
 2497 00a6 00BF     		nop
 2498              	.L170:
 2499              	.L183:
 686:main.c        ****     }
 687:main.c        **** }...
 2500              		.loc 1 687 0
 2501 00a8 00BF     		nop
 2502 00aa 1437     		adds	r7, r7, #20
 2503              		.cfi_def_cfa_offset 12
 2504 00ac BD46     		mov	sp, r7
 2505              		.cfi_def_cfa_register 13
 2506              		@ sp needed
 2507 00ae 90BD     		pop	{r4, r7, pc}
 2508              	.L186:
 2509              		.align	2
 2510              	.L185:
 2511 00b0 00000000 		.word	numSteps
 2512 00b4 00000000 		.word	instructionList
 2513 00b8 00000000 		.word	currentInstruction
 2514 00bc 00000000 		.word	currentDirection
 2515 00c0 00000000 		.word	previousDirection
 2516              		.cfi_endproc
 2517              	.LFE79:
 2518              		.size	SetRobotMovement, .-SetRobotMovement
 2519              		.text
 2520              	.Letext0:
 2521              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2522              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2523              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2524              		.file 5 "vars.h"
 2525              		.file 6 "pathfinding.h"
 2526              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2527              		.file 8 "map.h"
 2528              		.section	.debug_info,"",%progbits
 2529              	.Ldebug_info0:
 2530 0000 C8090000 		.4byte	0x9c8
 2531 0004 0400     		.2byte	0x4
 2532 0006 00000000 		.4byte	.Ldebug_abbrev0
 2533 000a 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 58


 2534 000b 01       		.uleb128 0x1
 2535 000c A2000000 		.4byte	.LASF147
 2536 0010 0C       		.byte	0xc
 2537 0011 30000000 		.4byte	.LASF148
 2538 0015 7B030000 		.4byte	.LASF149
 2539 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2540 001d 00000000 		.4byte	0
 2541 0021 00000000 		.4byte	.Ldebug_line0
 2542 0025 02       		.uleb128 0x2
 2543 0026 01       		.byte	0x1
 2544 0027 06       		.byte	0x6
 2545 0028 93070000 		.4byte	.LASF0
 2546 002c 02       		.uleb128 0x2
 2547 002d 01       		.byte	0x1
 2548 002e 08       		.byte	0x8
 2549 002f CB060000 		.4byte	.LASF1
 2550 0033 02       		.uleb128 0x2
 2551 0034 02       		.byte	0x2
 2552 0035 05       		.byte	0x5
 2553 0036 A2050000 		.4byte	.LASF2
 2554 003a 02       		.uleb128 0x2
 2555 003b 02       		.byte	0x2
 2556 003c 07       		.byte	0x7
 2557 003d AA070000 		.4byte	.LASF3
 2558 0041 03       		.uleb128 0x3
 2559 0042 75000000 		.4byte	.LASF12
 2560 0046 02       		.byte	0x2
 2561 0047 3F       		.byte	0x3f
 2562 0048 4C000000 		.4byte	0x4c
 2563 004c 02       		.uleb128 0x2
 2564 004d 04       		.byte	0x4
 2565 004e 05       		.byte	0x5
 2566 004f B8050000 		.4byte	.LASF4
 2567 0053 02       		.uleb128 0x2
 2568 0054 04       		.byte	0x4
 2569 0055 07       		.byte	0x7
 2570 0056 75060000 		.4byte	.LASF5
 2571 005a 02       		.uleb128 0x2
 2572 005b 08       		.byte	0x8
 2573 005c 05       		.byte	0x5
 2574 005d 5C040000 		.4byte	.LASF6
 2575 0061 02       		.uleb128 0x2
 2576 0062 08       		.byte	0x8
 2577 0063 07       		.byte	0x7
 2578 0064 9B020000 		.4byte	.LASF7
 2579 0068 04       		.uleb128 0x4
 2580 0069 04       		.byte	0x4
 2581 006a 05       		.byte	0x5
 2582 006b 696E7400 		.ascii	"int\000"
 2583 006f 02       		.uleb128 0x2
 2584 0070 04       		.byte	0x4
 2585 0071 07       		.byte	0x7
 2586 0072 68000000 		.4byte	.LASF8
 2587 0076 02       		.uleb128 0x2
 2588 0077 08       		.byte	0x8
 2589 0078 04       		.byte	0x4
 2590 0079 66050000 		.4byte	.LASF9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 59


 2591 007d 02       		.uleb128 0x2
 2592 007e 04       		.byte	0x4
 2593 007f 07       		.byte	0x7
 2594 0080 6C060000 		.4byte	.LASF10
 2595 0084 02       		.uleb128 0x2
 2596 0085 01       		.byte	0x1
 2597 0086 08       		.byte	0x8
 2598 0087 76030000 		.4byte	.LASF11
 2599 008b 03       		.uleb128 0x3
 2600 008c A4060000 		.4byte	.LASF13
 2601 0090 03       		.byte	0x3
 2602 0091 2C       		.byte	0x2c
 2603 0092 41000000 		.4byte	0x41
 2604 0096 05       		.uleb128 0x5
 2605 0097 00080000 		.4byte	.LASF14
 2606 009b 04       		.byte	0x4
 2607 009c E701     		.2byte	0x1e7
 2608 009e 2C000000 		.4byte	0x2c
 2609 00a2 05       		.uleb128 0x5
 2610 00a3 F6030000 		.4byte	.LASF15
 2611 00a7 04       		.byte	0x4
 2612 00a8 E801     		.2byte	0x1e8
 2613 00aa 3A000000 		.4byte	0x3a
 2614 00ae 05       		.uleb128 0x5
 2615 00af 0E050000 		.4byte	.LASF16
 2616 00b3 04       		.byte	0x4
 2617 00b4 E901     		.2byte	0x1e9
 2618 00b6 53000000 		.4byte	0x53
 2619 00ba 05       		.uleb128 0x5
 2620 00bb FD030000 		.4byte	.LASF17
 2621 00bf 04       		.byte	0x4
 2622 00c0 EA01     		.2byte	0x1ea
 2623 00c2 25000000 		.4byte	0x25
 2624 00c6 05       		.uleb128 0x5
 2625 00c7 7F000000 		.4byte	.LASF18
 2626 00cb 04       		.byte	0x4
 2627 00cc EB01     		.2byte	0x1eb
 2628 00ce 33000000 		.4byte	0x33
 2629 00d2 02       		.uleb128 0x2
 2630 00d3 04       		.byte	0x4
 2631 00d4 04       		.byte	0x4
 2632 00d5 63020000 		.4byte	.LASF19
 2633 00d9 02       		.uleb128 0x2
 2634 00da 08       		.byte	0x8
 2635 00db 04       		.byte	0x4
 2636 00dc 06080000 		.4byte	.LASF20
 2637 00e0 06       		.uleb128 0x6
 2638 00e1 96000000 		.4byte	0x96
 2639 00e5 06       		.uleb128 0x6
 2640 00e6 AE000000 		.4byte	0xae
 2641 00ea 07       		.uleb128 0x7
 2642 00eb 96000000 		.4byte	0x96
 2643 00ef FA000000 		.4byte	0xfa
 2644 00f3 08       		.uleb128 0x8
 2645 00f4 7D000000 		.4byte	0x7d
 2646 00f8 03       		.byte	0x3
 2647 00f9 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 60


 2648 00fa 09       		.uleb128 0x9
 2649 00fb 30050000 		.4byte	.LASF50
 2650 00ff 20       		.byte	0x20
 2651 0100 05       		.byte	0x5
 2652 0101 28       		.byte	0x28
 2653 0102 D3010000 		.4byte	0x1d3
 2654 0106 0A       		.uleb128 0xa
 2655 0107 3A050000 		.4byte	.LASF21
 2656 010b 05       		.byte	0x5
 2657 010c 2A       		.byte	0x2a
 2658 010d BA000000 		.4byte	0xba
 2659 0111 00       		.byte	0
 2660 0112 0A       		.uleb128 0xa
 2661 0113 95020000 		.4byte	.LASF22
 2662 0117 05       		.byte	0x5
 2663 0118 2B       		.byte	0x2b
 2664 0119 96000000 		.4byte	0x96
 2665 011d 01       		.byte	0x1
 2666 011e 0A       		.uleb128 0xa
 2667 011f AC060000 		.4byte	.LASF23
 2668 0123 05       		.byte	0x5
 2669 0124 2C       		.byte	0x2c
 2670 0125 C6000000 		.4byte	0xc6
 2671 0129 02       		.byte	0x2
 2672 012a 0A       		.uleb128 0xa
 2673 012b 60030000 		.4byte	.LASF24
 2674 012f 05       		.byte	0x5
 2675 0130 2D       		.byte	0x2d
 2676 0131 C6000000 		.4byte	0xc6
 2677 0135 04       		.byte	0x4
 2678 0136 0A       		.uleb128 0xa
 2679 0137 BD070000 		.4byte	.LASF25
 2680 013b 05       		.byte	0x5
 2681 013c 2E       		.byte	0x2e
 2682 013d C6000000 		.4byte	0xc6
 2683 0141 06       		.byte	0x6
 2684 0142 0A       		.uleb128 0xa
 2685 0143 27080000 		.4byte	.LASF26
 2686 0147 05       		.byte	0x5
 2687 0148 2F       		.byte	0x2f
 2688 0149 C6000000 		.4byte	0xc6
 2689 014d 08       		.byte	0x8
 2690 014e 0A       		.uleb128 0xa
 2691 014f CC040000 		.4byte	.LASF27
 2692 0153 05       		.byte	0x5
 2693 0154 30       		.byte	0x30
 2694 0155 C6000000 		.4byte	0xc6
 2695 0159 0A       		.byte	0xa
 2696 015a 0A       		.uleb128 0xa
 2697 015b CC030000 		.4byte	.LASF28
 2698 015f 05       		.byte	0x5
 2699 0160 31       		.byte	0x31
 2700 0161 C6000000 		.4byte	0xc6
 2701 0165 0C       		.byte	0xc
 2702 0166 0A       		.uleb128 0xa
 2703 0167 3F050000 		.4byte	.LASF29
 2704 016b 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 61


 2705 016c 32       		.byte	0x32
 2706 016d C6000000 		.4byte	0xc6
 2707 0171 0E       		.byte	0xe
 2708 0172 0A       		.uleb128 0xa
 2709 0173 6A040000 		.4byte	.LASF30
 2710 0177 05       		.byte	0x5
 2711 0178 33       		.byte	0x33
 2712 0179 C6000000 		.4byte	0xc6
 2713 017d 10       		.byte	0x10
 2714 017e 0A       		.uleb128 0xa
 2715 017f 2C060000 		.4byte	.LASF31
 2716 0183 05       		.byte	0x5
 2717 0184 34       		.byte	0x34
 2718 0185 C6000000 		.4byte	0xc6
 2719 0189 12       		.byte	0x12
 2720 018a 0A       		.uleb128 0xa
 2721 018b 47080000 		.4byte	.LASF32
 2722 018f 05       		.byte	0x5
 2723 0190 35       		.byte	0x35
 2724 0191 C6000000 		.4byte	0xc6
 2725 0195 14       		.byte	0x14
 2726 0196 0A       		.uleb128 0xa
 2727 0197 0D040000 		.4byte	.LASF33
 2728 019b 05       		.byte	0x5
 2729 019c 36       		.byte	0x36
 2730 019d C6000000 		.4byte	0xc6
 2731 01a1 16       		.byte	0x16
 2732 01a2 0A       		.uleb128 0xa
 2733 01a3 86010000 		.4byte	.LASF34
 2734 01a7 05       		.byte	0x5
 2735 01a8 37       		.byte	0x37
 2736 01a9 C6000000 		.4byte	0xc6
 2737 01ad 18       		.byte	0x18
 2738 01ae 0A       		.uleb128 0xa
 2739 01af F2050000 		.4byte	.LASF35
 2740 01b3 05       		.byte	0x5
 2741 01b4 38       		.byte	0x38
 2742 01b5 C6000000 		.4byte	0xc6
 2743 01b9 1A       		.byte	0x1a
 2744 01ba 0A       		.uleb128 0xa
 2745 01bb C3040000 		.4byte	.LASF36
 2746 01bf 05       		.byte	0x5
 2747 01c0 39       		.byte	0x39
 2748 01c1 C6000000 		.4byte	0xc6
 2749 01c5 1C       		.byte	0x1c
 2750 01c6 0A       		.uleb128 0xa
 2751 01c7 3E020000 		.4byte	.LASF37
 2752 01cb 05       		.byte	0x5
 2753 01cc 3A       		.byte	0x3a
 2754 01cd C6000000 		.4byte	0xc6
 2755 01d1 1E       		.byte	0x1e
 2756 01d2 00       		.byte	0
 2757 01d3 0B       		.uleb128 0xb
 2758 01d4 10060000 		.4byte	.LASF41
 2759 01d8 01       		.byte	0x1
 2760 01d9 2C000000 		.4byte	0x2c
 2761 01dd 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 62


 2762 01de 0D       		.byte	0xd
 2763 01df FB010000 		.4byte	0x1fb
 2764 01e3 0C       		.uleb128 0xc
 2765 01e4 557000   		.ascii	"Up\000"
 2766 01e7 00       		.byte	0
 2767 01e8 0D       		.uleb128 0xd
 2768 01e9 21060000 		.4byte	.LASF38
 2769 01ed 01       		.byte	0x1
 2770 01ee 0D       		.uleb128 0xd
 2771 01ef F2020000 		.4byte	.LASF39
 2772 01f3 02       		.byte	0x2
 2773 01f4 0D       		.uleb128 0xd
 2774 01f5 26060000 		.4byte	.LASF40
 2775 01f9 03       		.byte	0x3
 2776 01fa 00       		.byte	0
 2777 01fb 0B       		.uleb128 0xb
 2778 01fc 1B000000 		.4byte	.LASF42
 2779 0200 01       		.byte	0x1
 2780 0201 2C000000 		.4byte	0x2c
 2781 0205 06       		.byte	0x6
 2782 0206 0E       		.byte	0xe
 2783 0207 36020000 		.4byte	0x236
 2784 020b 0D       		.uleb128 0xd
 2785 020c 7D070000 		.4byte	.LASF43
 2786 0210 00       		.byte	0
 2787 0211 0D       		.uleb128 0xd
 2788 0212 4C040000 		.4byte	.LASF44
 2789 0216 01       		.byte	0x1
 2790 0217 0D       		.uleb128 0xd
 2791 0218 15050000 		.4byte	.LASF45
 2792 021c 02       		.byte	0x2
 2793 021d 0D       		.uleb128 0xd
 2794 021e 95040000 		.4byte	.LASF46
 2795 0222 03       		.byte	0x3
 2796 0223 0D       		.uleb128 0xd
 2797 0224 30010000 		.4byte	.LASF47
 2798 0228 04       		.byte	0x4
 2799 0229 0D       		.uleb128 0xd
 2800 022a 47030000 		.4byte	.LASF48
 2801 022e 05       		.byte	0x5
 2802 022f 0D       		.uleb128 0xd
 2803 0230 6A070000 		.4byte	.LASF49
 2804 0234 06       		.byte	0x6
 2805 0235 00       		.byte	0
 2806 0236 09       		.uleb128 0x9
 2807 0237 B2020000 		.4byte	.LASF51
 2808 023b 10       		.byte	0x10
 2809 023c 06       		.byte	0x6
 2810 023d 10       		.byte	0x10
 2811 023e 73020000 		.4byte	0x273
 2812 0242 0A       		.uleb128 0xa
 2813 0243 00000000 		.4byte	.LASF52
 2814 0247 06       		.byte	0x6
 2815 0248 11       		.byte	0x11
 2816 0249 FB010000 		.4byte	0x1fb
 2817 024d 00       		.byte	0
 2818 024e 0A       		.uleb128 0xa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 63


 2819 024f 50080000 		.4byte	.LASF53
 2820 0253 06       		.byte	0x6
 2821 0254 12       		.byte	0x12
 2822 0255 68000000 		.4byte	0x68
 2823 0259 04       		.byte	0x4
 2824 025a 0A       		.uleb128 0xa
 2825 025b 58080000 		.4byte	.LASF54
 2826 025f 06       		.byte	0x6
 2827 0260 13       		.byte	0x13
 2828 0261 68000000 		.4byte	0x68
 2829 0265 08       		.byte	0x8
 2830 0266 0A       		.uleb128 0xa
 2831 0267 43010000 		.4byte	.LASF55
 2832 026b 06       		.byte	0x6
 2833 026c 14       		.byte	0x14
 2834 026d D3010000 		.4byte	0x1d3
 2835 0271 0C       		.byte	0xc
 2836 0272 00       		.byte	0
 2837 0273 03       		.uleb128 0x3
 2838 0274 B2020000 		.4byte	.LASF51
 2839 0278 06       		.byte	0x6
 2840 0279 15       		.byte	0x15
 2841 027a 36020000 		.4byte	0x236
 2842 027e 0B       		.uleb128 0xb
 2843 027f BD060000 		.4byte	.LASF56
 2844 0283 01       		.byte	0x1
 2845 0284 2C000000 		.4byte	0x2c
 2846 0288 01       		.byte	0x1
 2847 0289 18       		.byte	0x18
 2848 028a D1020000 		.4byte	0x2d1
 2849 028e 0D       		.uleb128 0xd
 2850 028f D8050000 		.4byte	.LASF57
 2851 0293 00       		.byte	0
 2852 0294 0D       		.uleb128 0xd
 2853 0295 26050000 		.4byte	.LASF58
 2854 0299 01       		.byte	0x1
 2855 029a 0D       		.uleb128 0xd
 2856 029b DE040000 		.4byte	.LASF59
 2857 029f 02       		.byte	0x2
 2858 02a0 0D       		.uleb128 0xd
 2859 02a1 E7070000 		.4byte	.LASF60
 2860 02a5 03       		.byte	0x3
 2861 02a6 0D       		.uleb128 0xd
 2862 02a7 09070000 		.4byte	.LASF61
 2863 02ab 04       		.byte	0x4
 2864 02ac 0D       		.uleb128 0xd
 2865 02ad 1A070000 		.4byte	.LASF62
 2866 02b1 05       		.byte	0x5
 2867 02b2 0D       		.uleb128 0xd
 2868 02b3 06050000 		.4byte	.LASF63
 2869 02b7 06       		.byte	0x6
 2870 02b8 0D       		.uleb128 0xd
 2871 02b9 54030000 		.4byte	.LASF64
 2872 02bd 07       		.byte	0x7
 2873 02be 0D       		.uleb128 0xd
 2874 02bf 0A000000 		.4byte	.LASF65
 2875 02c3 08       		.byte	0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 64


 2876 02c4 0D       		.uleb128 0xd
 2877 02c5 F7070000 		.4byte	.LASF66
 2878 02c9 09       		.byte	0x9
 2879 02ca 0D       		.uleb128 0xd
 2880 02cb 5E050000 		.4byte	.LASF67
 2881 02cf 0A       		.byte	0xa
 2882 02d0 00       		.byte	0
 2883 02d1 0E       		.uleb128 0xe
 2884 02d2 26040000 		.4byte	.LASF77
 2885 02d6 01       		.byte	0x1
 2886 02d7 47       		.byte	0x47
 2887 02d8 00000000 		.4byte	.LFB64
 2888 02dc EC000000 		.4byte	.LFE64-.LFB64
 2889 02e0 01       		.uleb128 0x1
 2890 02e1 9C       		.byte	0x9c
 2891 02e2 FF020000 		.4byte	0x2ff
 2892 02e6 0F       		.uleb128 0xf
 2893 02e7 50000000 		.4byte	.LBB2
 2894 02eb 62000000 		.4byte	.LBE2-.LBB2
 2895 02ef 10       		.uleb128 0x10
 2896 02f0 B7040000 		.4byte	.LASF74
 2897 02f4 01       		.byte	0x1
 2898 02f5 54       		.byte	0x54
 2899 02f6 D2000000 		.4byte	0xd2
 2900 02fa 02       		.uleb128 0x2
 2901 02fb 91       		.byte	0x91
 2902 02fc 6C       		.sleb128 -20
 2903 02fd 00       		.byte	0
 2904 02fe 00       		.byte	0
 2905 02ff 11       		.uleb128 0x11
 2906 0300 1A040000 		.4byte	.LASF68
 2907 0304 01       		.byte	0x1
 2908 0305 5F       		.byte	0x5f
 2909 0306 00000000 		.4byte	.LFB65
 2910 030a 18000000 		.4byte	.LFE65-.LFB65
 2911 030e 01       		.uleb128 0x1
 2912 030f 9C       		.byte	0x9c
 2913 0310 11       		.uleb128 0x11
 2914 0311 AC050000 		.4byte	.LASF69
 2915 0315 01       		.byte	0x1
 2916 0316 65       		.byte	0x65
 2917 0317 00000000 		.4byte	.LFB66
 2918 031b 18000000 		.4byte	.LFE66-.LFB66
 2919 031f 01       		.uleb128 0x1
 2920 0320 9C       		.byte	0x9c
 2921 0321 11       		.uleb128 0x11
 2922 0322 87070000 		.4byte	.LASF70
 2923 0326 01       		.byte	0x1
 2924 0327 6B       		.byte	0x6b
 2925 0328 00000000 		.4byte	.LFB67
 2926 032c 18000000 		.4byte	.LFE67-.LFB67
 2927 0330 01       		.uleb128 0x1
 2928 0331 9C       		.byte	0x9c
 2929 0332 11       		.uleb128 0x11
 2930 0333 6C010000 		.4byte	.LASF71
 2931 0337 01       		.byte	0x1
 2932 0338 71       		.byte	0x71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 65


 2933 0339 00000000 		.4byte	.LFB68
 2934 033d 18000000 		.4byte	.LFE68-.LFB68
 2935 0341 01       		.uleb128 0x1
 2936 0342 9C       		.byte	0x9c
 2937 0343 12       		.uleb128 0x12
 2938 0344 DB020000 		.4byte	.LASF72
 2939 0348 01       		.byte	0x1
 2940 0349 77       		.byte	0x77
 2941 034a 00000000 		.4byte	.LFB69
 2942 034e 38000000 		.4byte	.LFE69-.LFB69
 2943 0352 01       		.uleb128 0x1
 2944 0353 9C       		.byte	0x9c
 2945 0354 13       		.uleb128 0x13
 2946 0355 CF070000 		.4byte	.LASF73
 2947 0359 01       		.byte	0x1
 2948 035a 83       		.byte	0x83
 2949 035b 68000000 		.4byte	0x68
 2950 035f 00000000 		.4byte	.LFB70
 2951 0363 14010000 		.4byte	.LFE70-.LFB70
 2952 0367 01       		.uleb128 0x1
 2953 0368 9C       		.byte	0x9c
 2954 0369 14       		.uleb128 0x14
 2955 036a 21030000 		.4byte	.LASF81
 2956 036e 01       		.byte	0x1
 2957 036f B9       		.byte	0xb9
 2958 0370 C6000000 		.4byte	0xc6
 2959 0374 00000000 		.4byte	.LFB71
 2960 0378 54000000 		.4byte	.LFE71-.LFB71
 2961 037c 01       		.uleb128 0x1
 2962 037d 9C       		.byte	0x9c
 2963 037e AD030000 		.4byte	0x3ad
 2964 0382 15       		.uleb128 0x15
 2965 0383 8F020000 		.4byte	.LASF83
 2966 0387 01       		.byte	0x1
 2967 0388 B9       		.byte	0xb9
 2968 0389 A2000000 		.4byte	0xa2
 2969 038d 02       		.uleb128 0x2
 2970 038e 91       		.byte	0x91
 2971 038f 66       		.sleb128 -26
 2972 0390 16       		.uleb128 0x16
 2973 0391 63707300 		.ascii	"cps\000"
 2974 0395 01       		.byte	0x1
 2975 0396 BA       		.byte	0xba
 2976 0397 D2000000 		.4byte	0xd2
 2977 039b 02       		.uleb128 0x2
 2978 039c 91       		.byte	0x91
 2979 039d 6C       		.sleb128 -20
 2980 039e 16       		.uleb128 0x16
 2981 039f 72706D00 		.ascii	"rpm\000"
 2982 03a3 01       		.byte	0x1
 2983 03a4 BB       		.byte	0xbb
 2984 03a5 C6000000 		.4byte	0xc6
 2985 03a9 02       		.uleb128 0x2
 2986 03aa 91       		.byte	0x91
 2987 03ab 6A       		.sleb128 -22
 2988 03ac 00       		.byte	0
 2989 03ad 17       		.uleb128 0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 66


 2990 03ae 2D020000 		.4byte	.LASF93
 2991 03b2 01       		.byte	0x1
 2992 03b3 C3       		.byte	0xc3
 2993 03b4 00000000 		.4byte	.LFB72
 2994 03b8 34000000 		.4byte	.LFE72-.LFB72
 2995 03bc 01       		.uleb128 0x1
 2996 03bd 9C       		.byte	0x9c
 2997 03be 18       		.uleb128 0x18
 2998 03bf FD010000 		.4byte	.LASF75
 2999 03c3 01       		.byte	0x1
 3000 03c4 D4       		.byte	0xd4
 3001 03c5 7E020000 		.4byte	0x27e
 3002 03c9 00000000 		.4byte	.LFB73
 3003 03cd 84000000 		.4byte	.LFE73-.LFB73
 3004 03d1 01       		.uleb128 0x1
 3005 03d2 9C       		.byte	0x9c
 3006 03d3 18       		.uleb128 0x18
 3007 03d4 57010000 		.4byte	.LASF76
 3008 03d8 01       		.byte	0x1
 3009 03d9 FA       		.byte	0xfa
 3010 03da 7E020000 		.4byte	0x27e
 3011 03de 00000000 		.4byte	.LFB74
 3012 03e2 7C000000 		.4byte	.LFE74-.LFB74
 3013 03e6 01       		.uleb128 0x1
 3014 03e7 9C       		.byte	0x9c
 3015 03e8 19       		.uleb128 0x19
 3016 03e9 BF010000 		.4byte	.LASF78
 3017 03ed 01       		.byte	0x1
 3018 03ee 1801     		.2byte	0x118
 3019 03f0 7E020000 		.4byte	0x27e
 3020 03f4 00000000 		.4byte	.LFB75
 3021 03f8 E8030000 		.4byte	.LFE75-.LFB75
 3022 03fc 01       		.uleb128 0x1
 3023 03fd 9C       		.byte	0x9c
 3024 03fe 21040000 		.4byte	0x421
 3025 0402 1A       		.uleb128 0x1a
 3026 0403 57000000 		.4byte	.LASF79
 3027 0407 01       		.byte	0x1
 3028 0408 1901     		.2byte	0x119
 3029 040a D2000000 		.4byte	0xd2
 3030 040e 02       		.uleb128 0x2
 3031 040f 91       		.byte	0x91
 3032 0410 74       		.sleb128 -12
 3033 0411 1A       		.uleb128 0x1a
 3034 0412 69020000 		.4byte	.LASF80
 3035 0416 01       		.byte	0x1
 3036 0417 2801     		.2byte	0x128
 3037 0419 FB010000 		.4byte	0x1fb
 3038 041d 02       		.uleb128 0x2
 3039 041e 91       		.byte	0x91
 3040 041f 73       		.sleb128 -13
 3041 0420 00       		.byte	0
 3042 0421 1B       		.uleb128 0x1b
 3043 0422 EF060000 		.4byte	.LASF82
 3044 0426 01       		.byte	0x1
 3045 0427 0E02     		.2byte	0x20e
 3046 0429 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 67


 3047 042d 00000000 		.4byte	.LFB76
 3048 0431 90020000 		.4byte	.LFE76-.LFB76
 3049 0435 01       		.uleb128 0x1
 3050 0436 9C       		.byte	0x9c
 3051 0437 DF040000 		.4byte	0x4df
 3052 043b 1C       		.uleb128 0x1c
 3053 043c 30030000 		.4byte	.LASF84
 3054 0440 01       		.byte	0x1
 3055 0441 0E02     		.2byte	0x20e
 3056 0443 D2000000 		.4byte	0xd2
 3057 0447 02       		.uleb128 0x2
 3058 0448 91       		.byte	0x91
 3059 0449 54       		.sleb128 -44
 3060 044a 1A       		.uleb128 0x1a
 3061 044b 18080000 		.4byte	.LASF85
 3062 044f 01       		.byte	0x1
 3063 0450 0F02     		.2byte	0x20f
 3064 0452 D2000000 		.4byte	0xd2
 3065 0456 02       		.uleb128 0x2
 3066 0457 91       		.byte	0x91
 3067 0458 58       		.sleb128 -40
 3068 0459 1A       		.uleb128 0x1a
 3069 045a B5010000 		.4byte	.LASF86
 3070 045e 01       		.byte	0x1
 3071 045f 1202     		.2byte	0x212
 3072 0461 68000000 		.4byte	0x68
 3073 0465 02       		.uleb128 0x2
 3074 0466 91       		.byte	0x91
 3075 0467 60       		.sleb128 -32
 3076 0468 1A       		.uleb128 0x1a
 3077 0469 4B020000 		.4byte	.LASF87
 3078 046d 01       		.byte	0x1
 3079 046e 1302     		.2byte	0x213
 3080 0470 68000000 		.4byte	0x68
 3081 0474 02       		.uleb128 0x2
 3082 0475 91       		.byte	0x91
 3083 0476 5C       		.sleb128 -36
 3084 0477 1A       		.uleb128 0x1a
 3085 0478 31040000 		.4byte	.LASF88
 3086 047c 01       		.byte	0x1
 3087 047d 1502     		.2byte	0x215
 3088 047f 68000000 		.4byte	0x68
 3089 0483 02       		.uleb128 0x2
 3090 0484 91       		.byte	0x91
 3091 0485 74       		.sleb128 -12
 3092 0486 1D       		.uleb128 0x1d
 3093 0487 00000000 		.4byte	.Ldebug_ranges0+0
 3094 048b 9D040000 		.4byte	0x49d
 3095 048f 1E       		.uleb128 0x1e
 3096 0490 6900     		.ascii	"i\000"
 3097 0492 01       		.byte	0x1
 3098 0493 1F02     		.2byte	0x21f
 3099 0495 68000000 		.4byte	0x68
 3100 0499 02       		.uleb128 0x2
 3101 049a 91       		.byte	0x91
 3102 049b 70       		.sleb128 -16
 3103 049c 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 68


 3104 049d 1D       		.uleb128 0x1d
 3105 049e 18000000 		.4byte	.Ldebug_ranges0+0x18
 3106 04a2 B4040000 		.4byte	0x4b4
 3107 04a6 1E       		.uleb128 0x1e
 3108 04a7 6900     		.ascii	"i\000"
 3109 04a9 01       		.byte	0x1
 3110 04aa 2E02     		.2byte	0x22e
 3111 04ac 68000000 		.4byte	0x68
 3112 04b0 02       		.uleb128 0x2
 3113 04b1 91       		.byte	0x91
 3114 04b2 6C       		.sleb128 -20
 3115 04b3 00       		.byte	0
 3116 04b4 1D       		.uleb128 0x1d
 3117 04b5 30000000 		.4byte	.Ldebug_ranges0+0x30
 3118 04b9 CB040000 		.4byte	0x4cb
 3119 04bd 1E       		.uleb128 0x1e
 3120 04be 6900     		.ascii	"i\000"
 3121 04c0 01       		.byte	0x1
 3122 04c1 3D02     		.2byte	0x23d
 3123 04c3 68000000 		.4byte	0x68
 3124 04c7 02       		.uleb128 0x2
 3125 04c8 91       		.byte	0x91
 3126 04c9 68       		.sleb128 -24
 3127 04ca 00       		.byte	0
 3128 04cb 1F       		.uleb128 0x1f
 3129 04cc 48000000 		.4byte	.Ldebug_ranges0+0x48
 3130 04d0 1E       		.uleb128 0x1e
 3131 04d1 6900     		.ascii	"i\000"
 3132 04d3 01       		.byte	0x1
 3133 04d4 4D02     		.2byte	0x24d
 3134 04d6 68000000 		.4byte	0x68
 3135 04da 02       		.uleb128 0x2
 3136 04db 91       		.byte	0x91
 3137 04dc 64       		.sleb128 -28
 3138 04dd 00       		.byte	0
 3139 04de 00       		.byte	0
 3140 04df 20       		.uleb128 0x20
 3141 04e0 FA050000 		.4byte	.LASF150
 3142 04e4 01       		.byte	0x1
 3143 04e5 6102     		.2byte	0x261
 3144 04e7 00000000 		.4byte	.LFB77
 3145 04eb 94000000 		.4byte	.LFE77-.LFB77
 3146 04ef 01       		.uleb128 0x1
 3147 04f0 9C       		.byte	0x9c
 3148 04f1 0D050000 		.4byte	0x50d
 3149 04f5 0F       		.uleb128 0xf
 3150 04f6 1C000000 		.4byte	.LBB11
 3151 04fa 58000000 		.4byte	.LBE11-.LBB11
 3152 04fe 1E       		.uleb128 0x1e
 3153 04ff 6900     		.ascii	"i\000"
 3154 0501 01       		.byte	0x1
 3155 0502 6602     		.2byte	0x266
 3156 0504 68000000 		.4byte	0x68
 3157 0508 02       		.uleb128 0x2
 3158 0509 91       		.byte	0x91
 3159 050a 74       		.sleb128 -12
 3160 050b 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 69


 3161 050c 00       		.byte	0
 3162 050d 21       		.uleb128 0x21
 3163 050e 1F070000 		.4byte	.LASF89
 3164 0512 01       		.byte	0x1
 3165 0513 7202     		.2byte	0x272
 3166 0515 73020000 		.4byte	0x273
 3167 0519 00000000 		.4byte	.LFB78
 3168 051d 7C000000 		.4byte	.LFE78-.LFB78
 3169 0521 01       		.uleb128 0x1
 3170 0522 9C       		.byte	0x9c
 3171 0523 6C050000 		.4byte	0x56c
 3172 0527 1C       		.uleb128 0x1c
 3173 0528 AC010000 		.4byte	.LASF90
 3174 052c 01       		.byte	0x1
 3175 052d 7202     		.2byte	0x272
 3176 052f 68000000 		.4byte	0x68
 3177 0533 02       		.uleb128 0x2
 3178 0534 91       		.byte	0x91
 3179 0535 58       		.sleb128 -40
 3180 0536 1C       		.uleb128 0x1c
 3181 0537 D5030000 		.4byte	.LASF91
 3182 053b 01       		.byte	0x1
 3183 053c 7202     		.2byte	0x272
 3184 053e 6C050000 		.4byte	0x56c
 3185 0542 02       		.uleb128 0x2
 3186 0543 91       		.byte	0x91
 3187 0544 54       		.sleb128 -44
 3188 0545 1A       		.uleb128 0x1a
 3189 0546 92000000 		.4byte	.LASF92
 3190 054a 01       		.byte	0x1
 3191 054b 7302     		.2byte	0x273
 3192 054d 73020000 		.4byte	0x273
 3193 0551 02       		.uleb128 0x2
 3194 0552 91       		.byte	0x91
 3195 0553 64       		.sleb128 -28
 3196 0554 0F       		.uleb128 0xf
 3197 0555 0C000000 		.4byte	.LBB12
 3198 0559 54000000 		.4byte	.LBE12-.LBB12
 3199 055d 1E       		.uleb128 0x1e
 3200 055e 6900     		.ascii	"i\000"
 3201 0560 01       		.byte	0x1
 3202 0561 7502     		.2byte	0x275
 3203 0563 68000000 		.4byte	0x68
 3204 0567 02       		.uleb128 0x2
 3205 0568 91       		.byte	0x91
 3206 0569 74       		.sleb128 -12
 3207 056a 00       		.byte	0
 3208 056b 00       		.byte	0
 3209 056c 22       		.uleb128 0x22
 3210 056d 04       		.byte	0x4
 3211 056e 73020000 		.4byte	0x273
 3212 0572 23       		.uleb128 0x23
 3213 0573 CA020000 		.4byte	.LASF94
 3214 0577 01       		.byte	0x1
 3215 0578 8102     		.2byte	0x281
 3216 057a 00000000 		.4byte	.LFB79
 3217 057e C4000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 70


 3218 0582 01       		.uleb128 0x1
 3219 0583 9C       		.byte	0x9c
 3220 0584 10       		.uleb128 0x10
 3221 0585 E5030000 		.4byte	.LASF95
 3222 0589 01       		.byte	0x1
 3223 058a 20       		.byte	0x20
 3224 058b E5000000 		.4byte	0xe5
 3225 058f 05       		.uleb128 0x5
 3226 0590 03       		.byte	0x3
 3227 0591 14000000 		.4byte	instructionIndex
 3228 0595 10       		.uleb128 0x10
 3229 0596 47000000 		.4byte	.LASF96
 3230 059a 01       		.byte	0x1
 3231 059b 34       		.byte	0x34
 3232 059c E0000000 		.4byte	0xe0
 3233 05a0 05       		.uleb128 0x5
 3234 05a1 03       		.byte	0x3
 3235 05a2 34000000 		.4byte	turnStartedFlag
 3236 05a6 10       		.uleb128 0x10
 3237 05a7 3B040000 		.4byte	.LASF97
 3238 05ab 01       		.byte	0x1
 3239 05ac 35       		.byte	0x35
 3240 05ad E0000000 		.4byte	0xe0
 3241 05b1 05       		.uleb128 0x5
 3242 05b2 03       		.byte	0x3
 3243 05b3 35000000 		.4byte	turnFinishedFlag
 3244 05b7 10       		.uleb128 0x10
 3245 05b8 8E010000 		.4byte	.LASF98
 3246 05bc 01       		.byte	0x1
 3247 05bd 37       		.byte	0x37
 3248 05be E0000000 		.4byte	0xe0
 3249 05c2 05       		.uleb128 0x5
 3250 05c3 03       		.byte	0x3
 3251 05c4 36000000 		.4byte	forwardUntilTargetStartedFlag
 3252 05c8 10       		.uleb128 0x10
 3253 05c9 45060000 		.4byte	.LASF99
 3254 05cd 01       		.byte	0x1
 3255 05ce 38       		.byte	0x38
 3256 05cf E0000000 		.4byte	0xe0
 3257 05d3 05       		.uleb128 0x5
 3258 05d4 03       		.byte	0x3
 3259 05d5 37000000 		.4byte	uTurnStartedFlag
 3260 05d9 10       		.uleb128 0x10
 3261 05da 92060000 		.4byte	.LASF100
 3262 05de 01       		.byte	0x1
 3263 05df 39       		.byte	0x39
 3264 05e0 E0000000 		.4byte	0xe0
 3265 05e4 05       		.uleb128 0x5
 3266 05e5 03       		.byte	0x3
 3267 05e6 38000000 		.4byte	uTurnFinishedFlag
 3268 05ea 10       		.uleb128 0x10
 3269 05eb 12030000 		.4byte	.LASF101
 3270 05ef 01       		.byte	0x1
 3271 05f0 3B       		.byte	0x3b
 3272 05f1 E0000000 		.4byte	0xe0
 3273 05f5 05       		.uleb128 0x5
 3274 05f6 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 71


 3275 05f7 39000000 		.4byte	leftStatusFlag
 3276 05fb 10       		.uleb128 0x10
 3277 05fc 37000000 		.4byte	.LASF102
 3278 0600 01       		.byte	0x1
 3279 0601 3C       		.byte	0x3c
 3280 0602 E0000000 		.4byte	0xe0
 3281 0606 05       		.uleb128 0x5
 3282 0607 03       		.byte	0x3
 3283 0608 3A000000 		.4byte	rightStatusFlag
 3284 060c 10       		.uleb128 0x10
 3285 060d 9B040000 		.4byte	.LASF103
 3286 0611 01       		.byte	0x1
 3287 0612 3E       		.byte	0x3e
 3288 0613 E0000000 		.4byte	0xe0
 3289 0617 05       		.uleb128 0x5
 3290 0618 03       		.byte	0x3
 3291 0619 3B000000 		.4byte	spinCourseCorrectionStarted
 3292 061d 10       		.uleb128 0x10
 3293 061e 4C070000 		.4byte	.LASF104
 3294 0622 01       		.byte	0x1
 3295 0623 3F       		.byte	0x3f
 3296 0624 E0000000 		.4byte	0xe0
 3297 0628 05       		.uleb128 0x5
 3298 0629 03       		.byte	0x3
 3299 062a 3C000000 		.4byte	currentIgnoreL
 3300 062e 10       		.uleb128 0x10
 3301 062f 5B070000 		.4byte	.LASF105
 3302 0633 01       		.byte	0x1
 3303 0634 40       		.byte	0x40
 3304 0635 E0000000 		.4byte	0xe0
 3305 0639 05       		.uleb128 0x5
 3306 063a 03       		.byte	0x3
 3307 063b 45000000 		.4byte	currentIgnoreR
 3308 063f 24       		.uleb128 0x24
 3309 0640 C1050000 		.4byte	.LASF106
 3310 0644 07       		.byte	0x7
 3311 0645 1207     		.2byte	0x712
 3312 0647 4B060000 		.4byte	0x64b
 3313 064b 06       		.uleb128 0x6
 3314 064c 8B000000 		.4byte	0x8b
 3315 0650 25       		.uleb128 0x25
 3316 0651 747300   		.ascii	"ts\000"
 3317 0654 05       		.byte	0x5
 3318 0655 10       		.byte	0x10
 3319 0656 96000000 		.4byte	0x96
 3320 065a 05       		.uleb128 0x5
 3321 065b 03       		.byte	0x3
 3322 065c 00000000 		.4byte	ts
 3323 0660 26       		.uleb128 0x26
 3324 0661 35070000 		.4byte	.LASF107
 3325 0665 05       		.byte	0x5
 3326 0666 11       		.byte	0x11
 3327 0667 A2000000 		.4byte	0xa2
 3328 066b 05       		.uleb128 0x5
 3329 066c 03       		.byte	0x3
 3330 066d 00000000 		.4byte	ts_enc
 3331 0671 26       		.uleb128 0x26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 72


 3332 0672 CE050000 		.4byte	.LASF108
 3333 0676 05       		.byte	0x5
 3334 0677 12       		.byte	0x12
 3335 0678 A2000000 		.4byte	0xa2
 3336 067c 05       		.uleb128 0x5
 3337 067d 03       		.byte	0x3
 3338 067e 00000000 		.4byte	ts_update
 3339 0682 26       		.uleb128 0x26
 3340 0683 E7040000 		.4byte	.LASF109
 3341 0687 05       		.byte	0x5
 3342 0688 13       		.byte	0x13
 3343 0689 A2000000 		.4byte	0xa2
 3344 068d 05       		.uleb128 0x5
 3345 068e 03       		.byte	0x3
 3346 068f 00000000 		.4byte	ts_speed
 3347 0693 26       		.uleb128 0x26
 3348 0694 6B030000 		.4byte	.LASF110
 3349 0698 05       		.byte	0x5
 3350 0699 14       		.byte	0x14
 3351 069a A2000000 		.4byte	0xa2
 3352 069e 05       		.uleb128 0x5
 3353 069f 03       		.byte	0x3
 3354 06a0 00000000 		.4byte	ts_display
 3355 06a4 26       		.uleb128 0x26
 3356 06a5 06030000 		.4byte	.LASF111
 3357 06a9 05       		.byte	0x5
 3358 06aa 16       		.byte	0x16
 3359 06ab 96000000 		.4byte	0x96
 3360 06af 05       		.uleb128 0x5
 3361 06b0 03       		.byte	0x3
 3362 06b1 00000000 		.4byte	flag_ts_enc
 3363 06b5 26       		.uleb128 0x26
 3364 06b6 F7020000 		.4byte	.LASF112
 3365 06ba 05       		.byte	0x5
 3366 06bb 17       		.byte	0x17
 3367 06bc 96000000 		.4byte	0x96
 3368 06c0 05       		.uleb128 0x5
 3369 06c1 03       		.byte	0x3
 3370 06c2 00000000 		.4byte	flag_ts_update
 3371 06c6 26       		.uleb128 0x26
 3372 06c7 72050000 		.4byte	.LASF113
 3373 06cb 05       		.byte	0x5
 3374 06cc 18       		.byte	0x18
 3375 06cd 96000000 		.4byte	0x96
 3376 06d1 05       		.uleb128 0x5
 3377 06d2 03       		.byte	0x3
 3378 06d3 00000000 		.4byte	flag_ts_speed
 3379 06d7 26       		.uleb128 0x26
 3380 06d8 3C070000 		.4byte	.LASF114
 3381 06dc 05       		.byte	0x5
 3382 06dd 19       		.byte	0x19
 3383 06de 96000000 		.4byte	0x96
 3384 06e2 05       		.uleb128 0x5
 3385 06e3 03       		.byte	0x3
 3386 06e4 00000000 		.4byte	flag_ts_display
 3387 06e8 26       		.uleb128 0x26
 3388 06e9 8F050000 		.4byte	.LASF115
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 73


 3389 06ed 05       		.byte	0x5
 3390 06ee 1B       		.byte	0x1b
 3391 06ef 96000000 		.4byte	0x96
 3392 06f3 05       		.uleb128 0x5
 3393 06f4 03       		.byte	0x3
 3394 06f5 00000000 		.4byte	flag_rx
 3395 06f9 26       		.uleb128 0x26
 3396 06fa BE020000 		.4byte	.LASF116
 3397 06fe 05       		.byte	0x5
 3398 06ff 1C       		.byte	0x1c
 3399 0700 96000000 		.4byte	0x96
 3400 0704 05       		.uleb128 0x5
 3401 0705 03       		.byte	0x3
 3402 0706 00000000 		.4byte	flag_packet
 3403 070a 26       		.uleb128 0x26
 3404 070b 38080000 		.4byte	.LASF117
 3405 070f 05       		.byte	0x5
 3406 0710 1D       		.byte	0x1d
 3407 0711 96000000 		.4byte	0x96
 3408 0715 05       		.uleb128 0x5
 3409 0716 03       		.byte	0x3
 3410 0717 00000000 		.4byte	flag_KB_string
 3411 071b 26       		.uleb128 0x26
 3412 071c 80050000 		.4byte	.LASF118
 3413 0720 05       		.byte	0x5
 3414 0721 1F       		.byte	0x1f
 3415 0722 96000000 		.4byte	0x96
 3416 0726 05       		.uleb128 0x5
 3417 0727 03       		.byte	0x3
 3418 0728 00000000 		.4byte	dataready_flag
 3419 072c 26       		.uleb128 0x26
 3420 072d E1010000 		.4byte	.LASF119
 3421 0731 05       		.byte	0x5
 3422 0732 21       		.byte	0x21
 3423 0733 96000000 		.4byte	0x96
 3424 0737 05       		.uleb128 0x5
 3425 0738 03       		.byte	0x3
 3426 0739 00000000 		.4byte	flag_rf_transmission_active
 3427 073d 07       		.uleb128 0x7
 3428 073e 84000000 		.4byte	0x84
 3429 0742 4D070000 		.4byte	0x74d
 3430 0746 08       		.uleb128 0x8
 3431 0747 7D000000 		.4byte	0x7d
 3432 074b 3F       		.byte	0x3f
 3433 074c 00       		.byte	0
 3434 074d 26       		.uleb128 0x26
 3435 074e 6F070000 		.4byte	.LASF120
 3436 0752 05       		.byte	0x5
 3437 0753 24       		.byte	0x24
 3438 0754 3D070000 		.4byte	0x73d
 3439 0758 05       		.uleb128 0x5
 3440 0759 03       		.byte	0x3
 3441 075a 00000000 		.4byte	displaystring
 3442 075e 26       		.uleb128 0x26
 3443 075f EA060000 		.4byte	.LASF121
 3444 0763 05       		.byte	0x5
 3445 0764 25       		.byte	0x25
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 74


 3446 0765 3D070000 		.4byte	0x73d
 3447 0769 05       		.uleb128 0x5
 3448 076a 03       		.byte	0x3
 3449 076b 00000000 		.4byte	line
 3450 076f 26       		.uleb128 0x26
 3451 0770 B7060000 		.4byte	.LASF122
 3452 0774 05       		.byte	0x5
 3453 0775 25       		.byte	0x25
 3454 0776 3D070000 		.4byte	0x73d
 3455 077a 05       		.uleb128 0x5
 3456 077b 03       		.byte	0x3
 3457 077c 00000000 		.4byte	entry
 3458 0780 07       		.uleb128 0x7
 3459 0781 96000000 		.4byte	0x96
 3460 0785 90070000 		.4byte	0x790
 3461 0789 08       		.uleb128 0x8
 3462 078a 7D000000 		.4byte	0x7d
 3463 078e 3F       		.byte	0x3f
 3464 078f 00       		.byte	0
 3465 0790 26       		.uleb128 0x26
 3466 0791 85020000 		.4byte	.LASF123
 3467 0795 05       		.byte	0x5
 3468 0796 26       		.byte	0x26
 3469 0797 80070000 		.4byte	0x780
 3470 079b 05       		.uleb128 0x5
 3471 079c 03       		.byte	0x3
 3472 079d 00000000 		.4byte	usbBuffer
 3473 07a1 26       		.uleb128 0x26
 3474 07a2 85000000 		.4byte	.LASF124
 3475 07a6 05       		.byte	0x5
 3476 07a7 3C       		.byte	0x3c
 3477 07a8 FA000000 		.4byte	0xfa
 3478 07ac 05       		.uleb128 0x5
 3479 07ad 03       		.byte	0x3
 3480 07ae 00000000 		.4byte	system_state
 3481 07b2 07       		.uleb128 0x7
 3482 07b3 68000000 		.4byte	0x68
 3483 07b7 C8070000 		.4byte	0x7c8
 3484 07bb 08       		.uleb128 0x8
 3485 07bc 7D000000 		.4byte	0x7d
 3486 07c0 0E       		.byte	0xe
 3487 07c1 08       		.uleb128 0x8
 3488 07c2 7D000000 		.4byte	0x7d
 3489 07c6 12       		.byte	0x12
 3490 07c7 00       		.byte	0
 3491 07c8 27       		.uleb128 0x27
 3492 07c9 6D617000 		.ascii	"map\000"
 3493 07cd 08       		.byte	0x8
 3494 07ce 04       		.byte	0x4
 3495 07cf B2070000 		.4byte	0x7b2
 3496 07d3 07       		.uleb128 0x7
 3497 07d4 68000000 		.4byte	0x68
 3498 07d8 E9070000 		.4byte	0x7e9
 3499 07dc 08       		.uleb128 0x8
 3500 07dd 7D000000 		.4byte	0x7d
 3501 07e1 04       		.byte	0x4
 3502 07e2 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 75


 3503 07e3 7D000000 		.4byte	0x7d
 3504 07e7 01       		.byte	0x1
 3505 07e8 00       		.byte	0
 3506 07e9 28       		.uleb128 0x28
 3507 07ea D4040000 		.4byte	.LASF125
 3508 07ee 08       		.byte	0x8
 3509 07ef 05       		.byte	0x5
 3510 07f0 D3070000 		.4byte	0x7d3
 3511 07f4 26       		.uleb128 0x26
 3512 07f5 34060000 		.4byte	.LASF126
 3513 07f9 01       		.byte	0x1
 3514 07fa 19       		.byte	0x19
 3515 07fb 7E020000 		.4byte	0x27e
 3516 07ff 05       		.uleb128 0x5
 3517 0800 03       		.byte	0x3
 3518 0801 00000000 		.4byte	currentDirection
 3519 0805 26       		.uleb128 0x26
 3520 0806 4C050000 		.4byte	.LASF127
 3521 080a 01       		.byte	0x1
 3522 080b 19       		.byte	0x19
 3523 080c 7E020000 		.4byte	0x27e
 3524 0810 05       		.uleb128 0x5
 3525 0811 03       		.byte	0x3
 3526 0812 00000000 		.4byte	previousDirection
 3527 0816 26       		.uleb128 0x26
 3528 0817 15020000 		.4byte	.LASF128
 3529 081b 01       		.byte	0x1
 3530 081c 1B       		.byte	0x1b
 3531 081d D3010000 		.4byte	0x1d3
 3532 0821 05       		.uleb128 0x5
 3533 0822 03       		.byte	0x3
 3534 0823 00000000 		.4byte	currentRobotOrientation
 3535 0827 26       		.uleb128 0x26
 3536 0828 81040000 		.4byte	.LASF129
 3537 082c 01       		.byte	0x1
 3538 082d 1B       		.byte	0x1b
 3539 082e D3010000 		.4byte	0x1d3
 3540 0832 05       		.uleb128 0x5
 3541 0833 03       		.byte	0x3
 3542 0834 00000000 		.4byte	previousOrientation
 3543 0838 26       		.uleb128 0x26
 3544 0839 D4070000 		.4byte	.LASF130
 3545 083d 01       		.byte	0x1
 3546 083e 1C       		.byte	0x1c
 3547 083f 73020000 		.4byte	0x273
 3548 0843 05       		.uleb128 0x5
 3549 0844 03       		.byte	0x3
 3550 0845 00000000 		.4byte	currentInstruction
 3551 0849 26       		.uleb128 0x26
 3552 084a AC010000 		.4byte	.LASF90
 3553 084e 01       		.byte	0x1
 3554 084f 1D       		.byte	0x1d
 3555 0850 68000000 		.4byte	0x68
 3556 0854 05       		.uleb128 0x5
 3557 0855 03       		.byte	0x3
 3558 0856 00000000 		.4byte	numSteps
 3559 085a 26       		.uleb128 0x26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 76


 3560 085b D5030000 		.4byte	.LASF91
 3561 085f 01       		.byte	0x1
 3562 0860 1F       		.byte	0x1f
 3563 0861 6C050000 		.4byte	0x56c
 3564 0865 05       		.uleb128 0x5
 3565 0866 03       		.byte	0x3
 3566 0867 00000000 		.4byte	instructionList
 3567 086b 25       		.uleb128 0x25
 3568 086c 733300   		.ascii	"s3\000"
 3569 086f 01       		.byte	0x1
 3570 0870 25       		.byte	0x25
 3571 0871 96000000 		.4byte	0x96
 3572 0875 05       		.uleb128 0x5
 3573 0876 03       		.byte	0x3
 3574 0877 00000000 		.4byte	s3
 3575 087b 25       		.uleb128 0x25
 3576 087c 733400   		.ascii	"s4\000"
 3577 087f 01       		.byte	0x1
 3578 0880 25       		.byte	0x25
 3579 0881 96000000 		.4byte	0x96
 3580 0885 05       		.uleb128 0x5
 3581 0886 03       		.byte	0x3
 3582 0887 00000000 		.4byte	s4
 3583 088b 25       		.uleb128 0x25
 3584 088c 733500   		.ascii	"s5\000"
 3585 088f 01       		.byte	0x1
 3586 0890 25       		.byte	0x25
 3587 0891 96000000 		.4byte	0x96
 3588 0895 05       		.uleb128 0x5
 3589 0896 03       		.byte	0x3
 3590 0897 00000000 		.4byte	s5
 3591 089b 25       		.uleb128 0x25
 3592 089c 733600   		.ascii	"s6\000"
 3593 089f 01       		.byte	0x1
 3594 08a0 25       		.byte	0x25
 3595 08a1 96000000 		.4byte	0x96
 3596 08a5 05       		.uleb128 0x5
 3597 08a6 03       		.byte	0x3
 3598 08a7 00000000 		.4byte	s6
 3599 08ab 26       		.uleb128 0x26
 3600 08ac E0050000 		.4byte	.LASF131
 3601 08b0 01       		.byte	0x1
 3602 08b1 2A       		.byte	0x2a
 3603 08b2 AE000000 		.4byte	0xae
 3604 08b6 05       		.uleb128 0x5
 3605 08b7 03       		.byte	0x3
 3606 08b8 00000000 		.4byte	totalMilliseconds
 3607 08bc 26       		.uleb128 0x26
 3608 08bd 78010000 		.4byte	.LASF132
 3609 08c1 01       		.byte	0x1
 3610 08c2 2B       		.byte	0x2b
 3611 08c3 D2000000 		.4byte	0xd2
 3612 08c7 05       		.uleb128 0x5
 3613 08c8 03       		.byte	0x3
 3614 08c9 00000000 		.4byte	totalDistance
 3615 08cd 07       		.uleb128 0x7
 3616 08ce 84000000 		.4byte	0x84
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 77


 3617 08d2 DD080000 		.4byte	0x8dd
 3618 08d6 08       		.uleb128 0x8
 3619 08d7 7D000000 		.4byte	0x7d
 3620 08db 44       		.byte	0x44
 3621 08dc 00       		.byte	0
 3622 08dd 26       		.uleb128 0x26
 3623 08de 61000000 		.4byte	.LASF133
 3624 08e2 01       		.byte	0x1
 3625 08e3 2D       		.byte	0x2d
 3626 08e4 CD080000 		.4byte	0x8cd
 3627 08e8 05       		.uleb128 0x5
 3628 08e9 03       		.byte	0x3
 3629 08ea 00000000 		.4byte	buffer
 3630 08ee 26       		.uleb128 0x26
 3631 08ef 55020000 		.4byte	.LASF134
 3632 08f3 01       		.byte	0x1
 3633 08f4 2E       		.byte	0x2e
 3634 08f5 68000000 		.4byte	0x68
 3635 08f9 05       		.uleb128 0x5
 3636 08fa 03       		.byte	0x3
 3637 08fb 00000000 		.4byte	quadDec2Count
 3638 08ff 26       		.uleb128 0x26
 3639 0900 2F080000 		.4byte	.LASF135
 3640 0904 01       		.byte	0x1
 3641 0905 2F       		.byte	0x2f
 3642 0906 68000000 		.4byte	0x68
 3643 090a 05       		.uleb128 0x5
 3644 090b 03       		.byte	0x3
 3645 090c 00000000 		.4byte	timerInt
 3646 0910 26       		.uleb128 0x26
 3647 0911 E8020000 		.4byte	.LASF136
 3648 0915 01       		.byte	0x1
 3649 0916 30       		.byte	0x30
 3650 0917 68000000 		.4byte	0x68
 3651 091b 05       		.uleb128 0x5
 3652 091c 03       		.byte	0x3
 3653 091d 00000000 		.4byte	keepLedOn
 3654 0921 26       		.uleb128 0x26
 3655 0922 87060000 		.4byte	.LASF137
 3656 0926 01       		.byte	0x1
 3657 0927 32       		.byte	0x32
 3658 0928 AE000000 		.4byte	0xae
 3659 092c 05       		.uleb128 0x5
 3660 092d 03       		.byte	0x3
 3661 092e 00000000 		.4byte	stopBuffer
 3662 0932 26       		.uleb128 0x26
 3663 0933 F0040000 		.4byte	.LASF138
 3664 0937 01       		.byte	0x1
 3665 0938 42       		.byte	0x42
 3666 0939 EA000000 		.4byte	0xea
 3667 093d 05       		.uleb128 0x5
 3668 093e 03       		.byte	0x3
 3669 093f 00000000 		.4byte	junctionConfiguration
 3670 0943 26       		.uleb128 0x26
 3671 0944 72040000 		.4byte	.LASF139
 3672 0948 01       		.byte	0x1
 3673 0949 44       		.byte	0x44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 78


 3674 094a D2000000 		.4byte	0xd2
 3675 094e 05       		.uleb128 0x5
 3676 094f 03       		.byte	0x3
 3677 0950 00000000 		.4byte	blockSizeTotal
 3678 0954 26       		.uleb128 0x26
 3679 0955 02040000 		.4byte	.LASF140
 3680 0959 01       		.byte	0x1
 3681 095a CA       		.byte	0xca
 3682 095b D2000000 		.4byte	0xd2
 3683 095f 05       		.uleb128 0x5
 3684 0960 03       		.byte	0x3
 3685 0961 00000000 		.4byte	xBlocksize
 3686 0965 26       		.uleb128 0x26
 3687 0966 97050000 		.4byte	.LASF141
 3688 096a 01       		.byte	0x1
 3689 096b CB       		.byte	0xcb
 3690 096c D2000000 		.4byte	0xd2
 3691 0970 05       		.uleb128 0x5
 3692 0971 03       		.byte	0x3
 3693 0972 00000000 		.4byte	yBlocksize
 3694 0976 26       		.uleb128 0x26
 3695 0977 9F070000 		.4byte	.LASF142
 3696 097b 01       		.byte	0x1
 3697 097c CC       		.byte	0xcc
 3698 097d 96000000 		.4byte	0x96
 3699 0981 05       		.uleb128 0x5
 3700 0982 03       		.byte	0x3
 3701 0983 00000000 		.4byte	currentRow
 3702 0987 26       		.uleb128 0x26
 3703 0988 0D080000 		.4byte	.LASF143
 3704 098c 01       		.byte	0x1
 3705 098d CD       		.byte	0xcd
 3706 098e 96000000 		.4byte	0x96
 3707 0992 05       		.uleb128 0x5
 3708 0993 03       		.byte	0x3
 3709 0994 00000000 		.4byte	currentCol
 3710 0998 26       		.uleb128 0x26
 3711 0999 D9060000 		.4byte	.LASF144
 3712 099d 01       		.byte	0x1
 3713 099e CF       		.byte	0xcf
 3714 099f 96000000 		.4byte	0x96
 3715 09a3 05       		.uleb128 0x5
 3716 09a4 03       		.byte	0x3
 3717 09a5 00000000 		.4byte	stoppedAfterTurn
 3718 09a9 26       		.uleb128 0x26
 3719 09aa 3A030000 		.4byte	.LASF145
 3720 09ae 01       		.byte	0x1
 3721 09af D0       		.byte	0xd0
 3722 09b0 96000000 		.4byte	0x96
 3723 09b4 05       		.uleb128 0x5
 3724 09b5 03       		.byte	0x3
 3725 09b6 00000000 		.4byte	ignoreSensor
 3726 09ba 26       		.uleb128 0x26
 3727 09bb 56060000 		.4byte	.LASF146
 3728 09bf 01       		.byte	0x1
 3729 09c0 F8       		.byte	0xf8
 3730 09c1 7E020000 		.4byte	0x27e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 79


 3731 09c5 05       		.uleb128 0x5
 3732 09c6 03       		.byte	0x3
 3733 09c7 00000000 		.4byte	lastDirectionAfter180
 3734 09cb 00       		.byte	0
 3735              		.section	.debug_abbrev,"",%progbits
 3736              	.Ldebug_abbrev0:
 3737 0000 01       		.uleb128 0x1
 3738 0001 11       		.uleb128 0x11
 3739 0002 01       		.byte	0x1
 3740 0003 25       		.uleb128 0x25
 3741 0004 0E       		.uleb128 0xe
 3742 0005 13       		.uleb128 0x13
 3743 0006 0B       		.uleb128 0xb
 3744 0007 03       		.uleb128 0x3
 3745 0008 0E       		.uleb128 0xe
 3746 0009 1B       		.uleb128 0x1b
 3747 000a 0E       		.uleb128 0xe
 3748 000b 55       		.uleb128 0x55
 3749 000c 17       		.uleb128 0x17
 3750 000d 11       		.uleb128 0x11
 3751 000e 01       		.uleb128 0x1
 3752 000f 10       		.uleb128 0x10
 3753 0010 17       		.uleb128 0x17
 3754 0011 00       		.byte	0
 3755 0012 00       		.byte	0
 3756 0013 02       		.uleb128 0x2
 3757 0014 24       		.uleb128 0x24
 3758 0015 00       		.byte	0
 3759 0016 0B       		.uleb128 0xb
 3760 0017 0B       		.uleb128 0xb
 3761 0018 3E       		.uleb128 0x3e
 3762 0019 0B       		.uleb128 0xb
 3763 001a 03       		.uleb128 0x3
 3764 001b 0E       		.uleb128 0xe
 3765 001c 00       		.byte	0
 3766 001d 00       		.byte	0
 3767 001e 03       		.uleb128 0x3
 3768 001f 16       		.uleb128 0x16
 3769 0020 00       		.byte	0
 3770 0021 03       		.uleb128 0x3
 3771 0022 0E       		.uleb128 0xe
 3772 0023 3A       		.uleb128 0x3a
 3773 0024 0B       		.uleb128 0xb
 3774 0025 3B       		.uleb128 0x3b
 3775 0026 0B       		.uleb128 0xb
 3776 0027 49       		.uleb128 0x49
 3777 0028 13       		.uleb128 0x13
 3778 0029 00       		.byte	0
 3779 002a 00       		.byte	0
 3780 002b 04       		.uleb128 0x4
 3781 002c 24       		.uleb128 0x24
 3782 002d 00       		.byte	0
 3783 002e 0B       		.uleb128 0xb
 3784 002f 0B       		.uleb128 0xb
 3785 0030 3E       		.uleb128 0x3e
 3786 0031 0B       		.uleb128 0xb
 3787 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 80


 3788 0033 08       		.uleb128 0x8
 3789 0034 00       		.byte	0
 3790 0035 00       		.byte	0
 3791 0036 05       		.uleb128 0x5
 3792 0037 16       		.uleb128 0x16
 3793 0038 00       		.byte	0
 3794 0039 03       		.uleb128 0x3
 3795 003a 0E       		.uleb128 0xe
 3796 003b 3A       		.uleb128 0x3a
 3797 003c 0B       		.uleb128 0xb
 3798 003d 3B       		.uleb128 0x3b
 3799 003e 05       		.uleb128 0x5
 3800 003f 49       		.uleb128 0x49
 3801 0040 13       		.uleb128 0x13
 3802 0041 00       		.byte	0
 3803 0042 00       		.byte	0
 3804 0043 06       		.uleb128 0x6
 3805 0044 35       		.uleb128 0x35
 3806 0045 00       		.byte	0
 3807 0046 49       		.uleb128 0x49
 3808 0047 13       		.uleb128 0x13
 3809 0048 00       		.byte	0
 3810 0049 00       		.byte	0
 3811 004a 07       		.uleb128 0x7
 3812 004b 01       		.uleb128 0x1
 3813 004c 01       		.byte	0x1
 3814 004d 49       		.uleb128 0x49
 3815 004e 13       		.uleb128 0x13
 3816 004f 01       		.uleb128 0x1
 3817 0050 13       		.uleb128 0x13
 3818 0051 00       		.byte	0
 3819 0052 00       		.byte	0
 3820 0053 08       		.uleb128 0x8
 3821 0054 21       		.uleb128 0x21
 3822 0055 00       		.byte	0
 3823 0056 49       		.uleb128 0x49
 3824 0057 13       		.uleb128 0x13
 3825 0058 2F       		.uleb128 0x2f
 3826 0059 0B       		.uleb128 0xb
 3827 005a 00       		.byte	0
 3828 005b 00       		.byte	0
 3829 005c 09       		.uleb128 0x9
 3830 005d 13       		.uleb128 0x13
 3831 005e 01       		.byte	0x1
 3832 005f 03       		.uleb128 0x3
 3833 0060 0E       		.uleb128 0xe
 3834 0061 0B       		.uleb128 0xb
 3835 0062 0B       		.uleb128 0xb
 3836 0063 3A       		.uleb128 0x3a
 3837 0064 0B       		.uleb128 0xb
 3838 0065 3B       		.uleb128 0x3b
 3839 0066 0B       		.uleb128 0xb
 3840 0067 01       		.uleb128 0x1
 3841 0068 13       		.uleb128 0x13
 3842 0069 00       		.byte	0
 3843 006a 00       		.byte	0
 3844 006b 0A       		.uleb128 0xa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 81


 3845 006c 0D       		.uleb128 0xd
 3846 006d 00       		.byte	0
 3847 006e 03       		.uleb128 0x3
 3848 006f 0E       		.uleb128 0xe
 3849 0070 3A       		.uleb128 0x3a
 3850 0071 0B       		.uleb128 0xb
 3851 0072 3B       		.uleb128 0x3b
 3852 0073 0B       		.uleb128 0xb
 3853 0074 49       		.uleb128 0x49
 3854 0075 13       		.uleb128 0x13
 3855 0076 38       		.uleb128 0x38
 3856 0077 0B       		.uleb128 0xb
 3857 0078 00       		.byte	0
 3858 0079 00       		.byte	0
 3859 007a 0B       		.uleb128 0xb
 3860 007b 04       		.uleb128 0x4
 3861 007c 01       		.byte	0x1
 3862 007d 03       		.uleb128 0x3
 3863 007e 0E       		.uleb128 0xe
 3864 007f 0B       		.uleb128 0xb
 3865 0080 0B       		.uleb128 0xb
 3866 0081 49       		.uleb128 0x49
 3867 0082 13       		.uleb128 0x13
 3868 0083 3A       		.uleb128 0x3a
 3869 0084 0B       		.uleb128 0xb
 3870 0085 3B       		.uleb128 0x3b
 3871 0086 0B       		.uleb128 0xb
 3872 0087 01       		.uleb128 0x1
 3873 0088 13       		.uleb128 0x13
 3874 0089 00       		.byte	0
 3875 008a 00       		.byte	0
 3876 008b 0C       		.uleb128 0xc
 3877 008c 28       		.uleb128 0x28
 3878 008d 00       		.byte	0
 3879 008e 03       		.uleb128 0x3
 3880 008f 08       		.uleb128 0x8
 3881 0090 1C       		.uleb128 0x1c
 3882 0091 0B       		.uleb128 0xb
 3883 0092 00       		.byte	0
 3884 0093 00       		.byte	0
 3885 0094 0D       		.uleb128 0xd
 3886 0095 28       		.uleb128 0x28
 3887 0096 00       		.byte	0
 3888 0097 03       		.uleb128 0x3
 3889 0098 0E       		.uleb128 0xe
 3890 0099 1C       		.uleb128 0x1c
 3891 009a 0B       		.uleb128 0xb
 3892 009b 00       		.byte	0
 3893 009c 00       		.byte	0
 3894 009d 0E       		.uleb128 0xe
 3895 009e 2E       		.uleb128 0x2e
 3896 009f 01       		.byte	0x1
 3897 00a0 3F       		.uleb128 0x3f
 3898 00a1 19       		.uleb128 0x19
 3899 00a2 03       		.uleb128 0x3
 3900 00a3 0E       		.uleb128 0xe
 3901 00a4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 82


 3902 00a5 0B       		.uleb128 0xb
 3903 00a6 3B       		.uleb128 0x3b
 3904 00a7 0B       		.uleb128 0xb
 3905 00a8 27       		.uleb128 0x27
 3906 00a9 19       		.uleb128 0x19
 3907 00aa 11       		.uleb128 0x11
 3908 00ab 01       		.uleb128 0x1
 3909 00ac 12       		.uleb128 0x12
 3910 00ad 06       		.uleb128 0x6
 3911 00ae 40       		.uleb128 0x40
 3912 00af 18       		.uleb128 0x18
 3913 00b0 9642     		.uleb128 0x2116
 3914 00b2 19       		.uleb128 0x19
 3915 00b3 01       		.uleb128 0x1
 3916 00b4 13       		.uleb128 0x13
 3917 00b5 00       		.byte	0
 3918 00b6 00       		.byte	0
 3919 00b7 0F       		.uleb128 0xf
 3920 00b8 0B       		.uleb128 0xb
 3921 00b9 01       		.byte	0x1
 3922 00ba 11       		.uleb128 0x11
 3923 00bb 01       		.uleb128 0x1
 3924 00bc 12       		.uleb128 0x12
 3925 00bd 06       		.uleb128 0x6
 3926 00be 00       		.byte	0
 3927 00bf 00       		.byte	0
 3928 00c0 10       		.uleb128 0x10
 3929 00c1 34       		.uleb128 0x34
 3930 00c2 00       		.byte	0
 3931 00c3 03       		.uleb128 0x3
 3932 00c4 0E       		.uleb128 0xe
 3933 00c5 3A       		.uleb128 0x3a
 3934 00c6 0B       		.uleb128 0xb
 3935 00c7 3B       		.uleb128 0x3b
 3936 00c8 0B       		.uleb128 0xb
 3937 00c9 49       		.uleb128 0x49
 3938 00ca 13       		.uleb128 0x13
 3939 00cb 02       		.uleb128 0x2
 3940 00cc 18       		.uleb128 0x18
 3941 00cd 00       		.byte	0
 3942 00ce 00       		.byte	0
 3943 00cf 11       		.uleb128 0x11
 3944 00d0 2E       		.uleb128 0x2e
 3945 00d1 00       		.byte	0
 3946 00d2 3F       		.uleb128 0x3f
 3947 00d3 19       		.uleb128 0x19
 3948 00d4 03       		.uleb128 0x3
 3949 00d5 0E       		.uleb128 0xe
 3950 00d6 3A       		.uleb128 0x3a
 3951 00d7 0B       		.uleb128 0xb
 3952 00d8 3B       		.uleb128 0x3b
 3953 00d9 0B       		.uleb128 0xb
 3954 00da 27       		.uleb128 0x27
 3955 00db 19       		.uleb128 0x19
 3956 00dc 11       		.uleb128 0x11
 3957 00dd 01       		.uleb128 0x1
 3958 00de 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 83


 3959 00df 06       		.uleb128 0x6
 3960 00e0 40       		.uleb128 0x40
 3961 00e1 18       		.uleb128 0x18
 3962 00e2 9742     		.uleb128 0x2117
 3963 00e4 19       		.uleb128 0x19
 3964 00e5 00       		.byte	0
 3965 00e6 00       		.byte	0
 3966 00e7 12       		.uleb128 0x12
 3967 00e8 2E       		.uleb128 0x2e
 3968 00e9 00       		.byte	0
 3969 00ea 3F       		.uleb128 0x3f
 3970 00eb 19       		.uleb128 0x19
 3971 00ec 03       		.uleb128 0x3
 3972 00ed 0E       		.uleb128 0xe
 3973 00ee 3A       		.uleb128 0x3a
 3974 00ef 0B       		.uleb128 0xb
 3975 00f0 3B       		.uleb128 0x3b
 3976 00f1 0B       		.uleb128 0xb
 3977 00f2 27       		.uleb128 0x27
 3978 00f3 19       		.uleb128 0x19
 3979 00f4 11       		.uleb128 0x11
 3980 00f5 01       		.uleb128 0x1
 3981 00f6 12       		.uleb128 0x12
 3982 00f7 06       		.uleb128 0x6
 3983 00f8 40       		.uleb128 0x40
 3984 00f9 18       		.uleb128 0x18
 3985 00fa 9642     		.uleb128 0x2116
 3986 00fc 19       		.uleb128 0x19
 3987 00fd 00       		.byte	0
 3988 00fe 00       		.byte	0
 3989 00ff 13       		.uleb128 0x13
 3990 0100 2E       		.uleb128 0x2e
 3991 0101 00       		.byte	0
 3992 0102 3F       		.uleb128 0x3f
 3993 0103 19       		.uleb128 0x19
 3994 0104 03       		.uleb128 0x3
 3995 0105 0E       		.uleb128 0xe
 3996 0106 3A       		.uleb128 0x3a
 3997 0107 0B       		.uleb128 0xb
 3998 0108 3B       		.uleb128 0x3b
 3999 0109 0B       		.uleb128 0xb
 4000 010a 49       		.uleb128 0x49
 4001 010b 13       		.uleb128 0x13
 4002 010c 11       		.uleb128 0x11
 4003 010d 01       		.uleb128 0x1
 4004 010e 12       		.uleb128 0x12
 4005 010f 06       		.uleb128 0x6
 4006 0110 40       		.uleb128 0x40
 4007 0111 18       		.uleb128 0x18
 4008 0112 9642     		.uleb128 0x2116
 4009 0114 19       		.uleb128 0x19
 4010 0115 00       		.byte	0
 4011 0116 00       		.byte	0
 4012 0117 14       		.uleb128 0x14
 4013 0118 2E       		.uleb128 0x2e
 4014 0119 01       		.byte	0x1
 4015 011a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 84


 4016 011b 19       		.uleb128 0x19
 4017 011c 03       		.uleb128 0x3
 4018 011d 0E       		.uleb128 0xe
 4019 011e 3A       		.uleb128 0x3a
 4020 011f 0B       		.uleb128 0xb
 4021 0120 3B       		.uleb128 0x3b
 4022 0121 0B       		.uleb128 0xb
 4023 0122 27       		.uleb128 0x27
 4024 0123 19       		.uleb128 0x19
 4025 0124 49       		.uleb128 0x49
 4026 0125 13       		.uleb128 0x13
 4027 0126 11       		.uleb128 0x11
 4028 0127 01       		.uleb128 0x1
 4029 0128 12       		.uleb128 0x12
 4030 0129 06       		.uleb128 0x6
 4031 012a 40       		.uleb128 0x40
 4032 012b 18       		.uleb128 0x18
 4033 012c 9642     		.uleb128 0x2116
 4034 012e 19       		.uleb128 0x19
 4035 012f 01       		.uleb128 0x1
 4036 0130 13       		.uleb128 0x13
 4037 0131 00       		.byte	0
 4038 0132 00       		.byte	0
 4039 0133 15       		.uleb128 0x15
 4040 0134 05       		.uleb128 0x5
 4041 0135 00       		.byte	0
 4042 0136 03       		.uleb128 0x3
 4043 0137 0E       		.uleb128 0xe
 4044 0138 3A       		.uleb128 0x3a
 4045 0139 0B       		.uleb128 0xb
 4046 013a 3B       		.uleb128 0x3b
 4047 013b 0B       		.uleb128 0xb
 4048 013c 49       		.uleb128 0x49
 4049 013d 13       		.uleb128 0x13
 4050 013e 02       		.uleb128 0x2
 4051 013f 18       		.uleb128 0x18
 4052 0140 00       		.byte	0
 4053 0141 00       		.byte	0
 4054 0142 16       		.uleb128 0x16
 4055 0143 34       		.uleb128 0x34
 4056 0144 00       		.byte	0
 4057 0145 03       		.uleb128 0x3
 4058 0146 08       		.uleb128 0x8
 4059 0147 3A       		.uleb128 0x3a
 4060 0148 0B       		.uleb128 0xb
 4061 0149 3B       		.uleb128 0x3b
 4062 014a 0B       		.uleb128 0xb
 4063 014b 49       		.uleb128 0x49
 4064 014c 13       		.uleb128 0x13
 4065 014d 02       		.uleb128 0x2
 4066 014e 18       		.uleb128 0x18
 4067 014f 00       		.byte	0
 4068 0150 00       		.byte	0
 4069 0151 17       		.uleb128 0x17
 4070 0152 2E       		.uleb128 0x2e
 4071 0153 00       		.byte	0
 4072 0154 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 85


 4073 0155 19       		.uleb128 0x19
 4074 0156 03       		.uleb128 0x3
 4075 0157 0E       		.uleb128 0xe
 4076 0158 3A       		.uleb128 0x3a
 4077 0159 0B       		.uleb128 0xb
 4078 015a 3B       		.uleb128 0x3b
 4079 015b 0B       		.uleb128 0xb
 4080 015c 11       		.uleb128 0x11
 4081 015d 01       		.uleb128 0x1
 4082 015e 12       		.uleb128 0x12
 4083 015f 06       		.uleb128 0x6
 4084 0160 40       		.uleb128 0x40
 4085 0161 18       		.uleb128 0x18
 4086 0162 9742     		.uleb128 0x2117
 4087 0164 19       		.uleb128 0x19
 4088 0165 00       		.byte	0
 4089 0166 00       		.byte	0
 4090 0167 18       		.uleb128 0x18
 4091 0168 2E       		.uleb128 0x2e
 4092 0169 00       		.byte	0
 4093 016a 3F       		.uleb128 0x3f
 4094 016b 19       		.uleb128 0x19
 4095 016c 03       		.uleb128 0x3
 4096 016d 0E       		.uleb128 0xe
 4097 016e 3A       		.uleb128 0x3a
 4098 016f 0B       		.uleb128 0xb
 4099 0170 3B       		.uleb128 0x3b
 4100 0171 0B       		.uleb128 0xb
 4101 0172 49       		.uleb128 0x49
 4102 0173 13       		.uleb128 0x13
 4103 0174 11       		.uleb128 0x11
 4104 0175 01       		.uleb128 0x1
 4105 0176 12       		.uleb128 0x12
 4106 0177 06       		.uleb128 0x6
 4107 0178 40       		.uleb128 0x40
 4108 0179 18       		.uleb128 0x18
 4109 017a 9742     		.uleb128 0x2117
 4110 017c 19       		.uleb128 0x19
 4111 017d 00       		.byte	0
 4112 017e 00       		.byte	0
 4113 017f 19       		.uleb128 0x19
 4114 0180 2E       		.uleb128 0x2e
 4115 0181 01       		.byte	0x1
 4116 0182 3F       		.uleb128 0x3f
 4117 0183 19       		.uleb128 0x19
 4118 0184 03       		.uleb128 0x3
 4119 0185 0E       		.uleb128 0xe
 4120 0186 3A       		.uleb128 0x3a
 4121 0187 0B       		.uleb128 0xb
 4122 0188 3B       		.uleb128 0x3b
 4123 0189 05       		.uleb128 0x5
 4124 018a 49       		.uleb128 0x49
 4125 018b 13       		.uleb128 0x13
 4126 018c 11       		.uleb128 0x11
 4127 018d 01       		.uleb128 0x1
 4128 018e 12       		.uleb128 0x12
 4129 018f 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 86


 4130 0190 40       		.uleb128 0x40
 4131 0191 18       		.uleb128 0x18
 4132 0192 9642     		.uleb128 0x2116
 4133 0194 19       		.uleb128 0x19
 4134 0195 01       		.uleb128 0x1
 4135 0196 13       		.uleb128 0x13
 4136 0197 00       		.byte	0
 4137 0198 00       		.byte	0
 4138 0199 1A       		.uleb128 0x1a
 4139 019a 34       		.uleb128 0x34
 4140 019b 00       		.byte	0
 4141 019c 03       		.uleb128 0x3
 4142 019d 0E       		.uleb128 0xe
 4143 019e 3A       		.uleb128 0x3a
 4144 019f 0B       		.uleb128 0xb
 4145 01a0 3B       		.uleb128 0x3b
 4146 01a1 05       		.uleb128 0x5
 4147 01a2 49       		.uleb128 0x49
 4148 01a3 13       		.uleb128 0x13
 4149 01a4 02       		.uleb128 0x2
 4150 01a5 18       		.uleb128 0x18
 4151 01a6 00       		.byte	0
 4152 01a7 00       		.byte	0
 4153 01a8 1B       		.uleb128 0x1b
 4154 01a9 2E       		.uleb128 0x2e
 4155 01aa 01       		.byte	0x1
 4156 01ab 3F       		.uleb128 0x3f
 4157 01ac 19       		.uleb128 0x19
 4158 01ad 03       		.uleb128 0x3
 4159 01ae 0E       		.uleb128 0xe
 4160 01af 3A       		.uleb128 0x3a
 4161 01b0 0B       		.uleb128 0xb
 4162 01b1 3B       		.uleb128 0x3b
 4163 01b2 05       		.uleb128 0x5
 4164 01b3 27       		.uleb128 0x27
 4165 01b4 19       		.uleb128 0x19
 4166 01b5 49       		.uleb128 0x49
 4167 01b6 13       		.uleb128 0x13
 4168 01b7 11       		.uleb128 0x11
 4169 01b8 01       		.uleb128 0x1
 4170 01b9 12       		.uleb128 0x12
 4171 01ba 06       		.uleb128 0x6
 4172 01bb 40       		.uleb128 0x40
 4173 01bc 18       		.uleb128 0x18
 4174 01bd 9642     		.uleb128 0x2116
 4175 01bf 19       		.uleb128 0x19
 4176 01c0 01       		.uleb128 0x1
 4177 01c1 13       		.uleb128 0x13
 4178 01c2 00       		.byte	0
 4179 01c3 00       		.byte	0
 4180 01c4 1C       		.uleb128 0x1c
 4181 01c5 05       		.uleb128 0x5
 4182 01c6 00       		.byte	0
 4183 01c7 03       		.uleb128 0x3
 4184 01c8 0E       		.uleb128 0xe
 4185 01c9 3A       		.uleb128 0x3a
 4186 01ca 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 87


 4187 01cb 3B       		.uleb128 0x3b
 4188 01cc 05       		.uleb128 0x5
 4189 01cd 49       		.uleb128 0x49
 4190 01ce 13       		.uleb128 0x13
 4191 01cf 02       		.uleb128 0x2
 4192 01d0 18       		.uleb128 0x18
 4193 01d1 00       		.byte	0
 4194 01d2 00       		.byte	0
 4195 01d3 1D       		.uleb128 0x1d
 4196 01d4 0B       		.uleb128 0xb
 4197 01d5 01       		.byte	0x1
 4198 01d6 55       		.uleb128 0x55
 4199 01d7 17       		.uleb128 0x17
 4200 01d8 01       		.uleb128 0x1
 4201 01d9 13       		.uleb128 0x13
 4202 01da 00       		.byte	0
 4203 01db 00       		.byte	0
 4204 01dc 1E       		.uleb128 0x1e
 4205 01dd 34       		.uleb128 0x34
 4206 01de 00       		.byte	0
 4207 01df 03       		.uleb128 0x3
 4208 01e0 08       		.uleb128 0x8
 4209 01e1 3A       		.uleb128 0x3a
 4210 01e2 0B       		.uleb128 0xb
 4211 01e3 3B       		.uleb128 0x3b
 4212 01e4 05       		.uleb128 0x5
 4213 01e5 49       		.uleb128 0x49
 4214 01e6 13       		.uleb128 0x13
 4215 01e7 02       		.uleb128 0x2
 4216 01e8 18       		.uleb128 0x18
 4217 01e9 00       		.byte	0
 4218 01ea 00       		.byte	0
 4219 01eb 1F       		.uleb128 0x1f
 4220 01ec 0B       		.uleb128 0xb
 4221 01ed 01       		.byte	0x1
 4222 01ee 55       		.uleb128 0x55
 4223 01ef 17       		.uleb128 0x17
 4224 01f0 00       		.byte	0
 4225 01f1 00       		.byte	0
 4226 01f2 20       		.uleb128 0x20
 4227 01f3 2E       		.uleb128 0x2e
 4228 01f4 01       		.byte	0x1
 4229 01f5 3F       		.uleb128 0x3f
 4230 01f6 19       		.uleb128 0x19
 4231 01f7 03       		.uleb128 0x3
 4232 01f8 0E       		.uleb128 0xe
 4233 01f9 3A       		.uleb128 0x3a
 4234 01fa 0B       		.uleb128 0xb
 4235 01fb 3B       		.uleb128 0x3b
 4236 01fc 05       		.uleb128 0x5
 4237 01fd 11       		.uleb128 0x11
 4238 01fe 01       		.uleb128 0x1
 4239 01ff 12       		.uleb128 0x12
 4240 0200 06       		.uleb128 0x6
 4241 0201 40       		.uleb128 0x40
 4242 0202 18       		.uleb128 0x18
 4243 0203 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 88


 4244 0205 19       		.uleb128 0x19
 4245 0206 01       		.uleb128 0x1
 4246 0207 13       		.uleb128 0x13
 4247 0208 00       		.byte	0
 4248 0209 00       		.byte	0
 4249 020a 21       		.uleb128 0x21
 4250 020b 2E       		.uleb128 0x2e
 4251 020c 01       		.byte	0x1
 4252 020d 3F       		.uleb128 0x3f
 4253 020e 19       		.uleb128 0x19
 4254 020f 03       		.uleb128 0x3
 4255 0210 0E       		.uleb128 0xe
 4256 0211 3A       		.uleb128 0x3a
 4257 0212 0B       		.uleb128 0xb
 4258 0213 3B       		.uleb128 0x3b
 4259 0214 05       		.uleb128 0x5
 4260 0215 27       		.uleb128 0x27
 4261 0216 19       		.uleb128 0x19
 4262 0217 49       		.uleb128 0x49
 4263 0218 13       		.uleb128 0x13
 4264 0219 11       		.uleb128 0x11
 4265 021a 01       		.uleb128 0x1
 4266 021b 12       		.uleb128 0x12
 4267 021c 06       		.uleb128 0x6
 4268 021d 40       		.uleb128 0x40
 4269 021e 18       		.uleb128 0x18
 4270 021f 9742     		.uleb128 0x2117
 4271 0221 19       		.uleb128 0x19
 4272 0222 01       		.uleb128 0x1
 4273 0223 13       		.uleb128 0x13
 4274 0224 00       		.byte	0
 4275 0225 00       		.byte	0
 4276 0226 22       		.uleb128 0x22
 4277 0227 0F       		.uleb128 0xf
 4278 0228 00       		.byte	0
 4279 0229 0B       		.uleb128 0xb
 4280 022a 0B       		.uleb128 0xb
 4281 022b 49       		.uleb128 0x49
 4282 022c 13       		.uleb128 0x13
 4283 022d 00       		.byte	0
 4284 022e 00       		.byte	0
 4285 022f 23       		.uleb128 0x23
 4286 0230 2E       		.uleb128 0x2e
 4287 0231 00       		.byte	0
 4288 0232 3F       		.uleb128 0x3f
 4289 0233 19       		.uleb128 0x19
 4290 0234 03       		.uleb128 0x3
 4291 0235 0E       		.uleb128 0xe
 4292 0236 3A       		.uleb128 0x3a
 4293 0237 0B       		.uleb128 0xb
 4294 0238 3B       		.uleb128 0x3b
 4295 0239 05       		.uleb128 0x5
 4296 023a 11       		.uleb128 0x11
 4297 023b 01       		.uleb128 0x1
 4298 023c 12       		.uleb128 0x12
 4299 023d 06       		.uleb128 0x6
 4300 023e 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 89


 4301 023f 18       		.uleb128 0x18
 4302 0240 9642     		.uleb128 0x2116
 4303 0242 19       		.uleb128 0x19
 4304 0243 00       		.byte	0
 4305 0244 00       		.byte	0
 4306 0245 24       		.uleb128 0x24
 4307 0246 34       		.uleb128 0x34
 4308 0247 00       		.byte	0
 4309 0248 03       		.uleb128 0x3
 4310 0249 0E       		.uleb128 0xe
 4311 024a 3A       		.uleb128 0x3a
 4312 024b 0B       		.uleb128 0xb
 4313 024c 3B       		.uleb128 0x3b
 4314 024d 05       		.uleb128 0x5
 4315 024e 49       		.uleb128 0x49
 4316 024f 13       		.uleb128 0x13
 4317 0250 3F       		.uleb128 0x3f
 4318 0251 19       		.uleb128 0x19
 4319 0252 3C       		.uleb128 0x3c
 4320 0253 19       		.uleb128 0x19
 4321 0254 00       		.byte	0
 4322 0255 00       		.byte	0
 4323 0256 25       		.uleb128 0x25
 4324 0257 34       		.uleb128 0x34
 4325 0258 00       		.byte	0
 4326 0259 03       		.uleb128 0x3
 4327 025a 08       		.uleb128 0x8
 4328 025b 3A       		.uleb128 0x3a
 4329 025c 0B       		.uleb128 0xb
 4330 025d 3B       		.uleb128 0x3b
 4331 025e 0B       		.uleb128 0xb
 4332 025f 49       		.uleb128 0x49
 4333 0260 13       		.uleb128 0x13
 4334 0261 3F       		.uleb128 0x3f
 4335 0262 19       		.uleb128 0x19
 4336 0263 02       		.uleb128 0x2
 4337 0264 18       		.uleb128 0x18
 4338 0265 00       		.byte	0
 4339 0266 00       		.byte	0
 4340 0267 26       		.uleb128 0x26
 4341 0268 34       		.uleb128 0x34
 4342 0269 00       		.byte	0
 4343 026a 03       		.uleb128 0x3
 4344 026b 0E       		.uleb128 0xe
 4345 026c 3A       		.uleb128 0x3a
 4346 026d 0B       		.uleb128 0xb
 4347 026e 3B       		.uleb128 0x3b
 4348 026f 0B       		.uleb128 0xb
 4349 0270 49       		.uleb128 0x49
 4350 0271 13       		.uleb128 0x13
 4351 0272 3F       		.uleb128 0x3f
 4352 0273 19       		.uleb128 0x19
 4353 0274 02       		.uleb128 0x2
 4354 0275 18       		.uleb128 0x18
 4355 0276 00       		.byte	0
 4356 0277 00       		.byte	0
 4357 0278 27       		.uleb128 0x27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 90


 4358 0279 34       		.uleb128 0x34
 4359 027a 00       		.byte	0
 4360 027b 03       		.uleb128 0x3
 4361 027c 08       		.uleb128 0x8
 4362 027d 3A       		.uleb128 0x3a
 4363 027e 0B       		.uleb128 0xb
 4364 027f 3B       		.uleb128 0x3b
 4365 0280 0B       		.uleb128 0xb
 4366 0281 49       		.uleb128 0x49
 4367 0282 13       		.uleb128 0x13
 4368 0283 3F       		.uleb128 0x3f
 4369 0284 19       		.uleb128 0x19
 4370 0285 3C       		.uleb128 0x3c
 4371 0286 19       		.uleb128 0x19
 4372 0287 00       		.byte	0
 4373 0288 00       		.byte	0
 4374 0289 28       		.uleb128 0x28
 4375 028a 34       		.uleb128 0x34
 4376 028b 00       		.byte	0
 4377 028c 03       		.uleb128 0x3
 4378 028d 0E       		.uleb128 0xe
 4379 028e 3A       		.uleb128 0x3a
 4380 028f 0B       		.uleb128 0xb
 4381 0290 3B       		.uleb128 0x3b
 4382 0291 0B       		.uleb128 0xb
 4383 0292 49       		.uleb128 0x49
 4384 0293 13       		.uleb128 0x13
 4385 0294 3F       		.uleb128 0x3f
 4386 0295 19       		.uleb128 0x19
 4387 0296 3C       		.uleb128 0x3c
 4388 0297 19       		.uleb128 0x19
 4389 0298 00       		.byte	0
 4390 0299 00       		.byte	0
 4391 029a 00       		.byte	0
 4392              		.section	.debug_aranges,"",%progbits
 4393 0000 94000000 		.4byte	0x94
 4394 0004 0200     		.2byte	0x2
 4395 0006 00000000 		.4byte	.Ldebug_info0
 4396 000a 04       		.byte	0x4
 4397 000b 00       		.byte	0
 4398 000c 0000     		.2byte	0
 4399 000e 0000     		.2byte	0
 4400 0010 00000000 		.4byte	.LFB64
 4401 0014 EC000000 		.4byte	.LFE64-.LFB64
 4402 0018 00000000 		.4byte	.LFB65
 4403 001c 18000000 		.4byte	.LFE65-.LFB65
 4404 0020 00000000 		.4byte	.LFB66
 4405 0024 18000000 		.4byte	.LFE66-.LFB66
 4406 0028 00000000 		.4byte	.LFB67
 4407 002c 18000000 		.4byte	.LFE67-.LFB67
 4408 0030 00000000 		.4byte	.LFB68
 4409 0034 18000000 		.4byte	.LFE68-.LFB68
 4410 0038 00000000 		.4byte	.LFB69
 4411 003c 38000000 		.4byte	.LFE69-.LFB69
 4412 0040 00000000 		.4byte	.LFB70
 4413 0044 14010000 		.4byte	.LFE70-.LFB70
 4414 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 91


 4415 004c 54000000 		.4byte	.LFE71-.LFB71
 4416 0050 00000000 		.4byte	.LFB72
 4417 0054 34000000 		.4byte	.LFE72-.LFB72
 4418 0058 00000000 		.4byte	.LFB73
 4419 005c 84000000 		.4byte	.LFE73-.LFB73
 4420 0060 00000000 		.4byte	.LFB74
 4421 0064 7C000000 		.4byte	.LFE74-.LFB74
 4422 0068 00000000 		.4byte	.LFB75
 4423 006c E8030000 		.4byte	.LFE75-.LFB75
 4424 0070 00000000 		.4byte	.LFB76
 4425 0074 90020000 		.4byte	.LFE76-.LFB76
 4426 0078 00000000 		.4byte	.LFB77
 4427 007c 94000000 		.4byte	.LFE77-.LFB77
 4428 0080 00000000 		.4byte	.LFB78
 4429 0084 7C000000 		.4byte	.LFE78-.LFB78
 4430 0088 00000000 		.4byte	.LFB79
 4431 008c C4000000 		.4byte	.LFE79-.LFB79
 4432 0090 00000000 		.4byte	0
 4433 0094 00000000 		.4byte	0
 4434              		.section	.debug_ranges,"",%progbits
 4435              	.Ldebug_ranges0:
 4436 0000 38000000 		.4byte	.LBB3
 4437 0004 BC000000 		.4byte	.LBE3
 4438 0008 BE000000 		.4byte	.LBB4
 4439 000c C0000000 		.4byte	.LBE4
 4440 0010 00000000 		.4byte	0
 4441 0014 00000000 		.4byte	0
 4442 0018 C2000000 		.4byte	.LBB5
 4443 001c 46010000 		.4byte	.LBE5
 4444 0020 48010000 		.4byte	.LBB6
 4445 0024 4A010000 		.4byte	.LBE6
 4446 0028 00000000 		.4byte	0
 4447 002c 00000000 		.4byte	0
 4448 0030 4C010000 		.4byte	.LBB7
 4449 0034 D0010000 		.4byte	.LBE7
 4450 0038 D2010000 		.4byte	.LBB8
 4451 003c D4010000 		.4byte	.LBE8
 4452 0040 00000000 		.4byte	0
 4453 0044 00000000 		.4byte	0
 4454 0048 D6010000 		.4byte	.LBB9
 4455 004c 5A020000 		.4byte	.LBE9
 4456 0050 5C020000 		.4byte	.LBB10
 4457 0054 5E020000 		.4byte	.LBE10
 4458 0058 00000000 		.4byte	0
 4459 005c 00000000 		.4byte	0
 4460 0060 00000000 		.4byte	.LFB64
 4461 0064 EC000000 		.4byte	.LFE64
 4462 0068 00000000 		.4byte	.LFB65
 4463 006c 18000000 		.4byte	.LFE65
 4464 0070 00000000 		.4byte	.LFB66
 4465 0074 18000000 		.4byte	.LFE66
 4466 0078 00000000 		.4byte	.LFB67
 4467 007c 18000000 		.4byte	.LFE67
 4468 0080 00000000 		.4byte	.LFB68
 4469 0084 18000000 		.4byte	.LFE68
 4470 0088 00000000 		.4byte	.LFB69
 4471 008c 38000000 		.4byte	.LFE69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 92


 4472 0090 00000000 		.4byte	.LFB70
 4473 0094 14010000 		.4byte	.LFE70
 4474 0098 00000000 		.4byte	.LFB71
 4475 009c 54000000 		.4byte	.LFE71
 4476 00a0 00000000 		.4byte	.LFB72
 4477 00a4 34000000 		.4byte	.LFE72
 4478 00a8 00000000 		.4byte	.LFB73
 4479 00ac 84000000 		.4byte	.LFE73
 4480 00b0 00000000 		.4byte	.LFB74
 4481 00b4 7C000000 		.4byte	.LFE74
 4482 00b8 00000000 		.4byte	.LFB75
 4483 00bc E8030000 		.4byte	.LFE75
 4484 00c0 00000000 		.4byte	.LFB76
 4485 00c4 90020000 		.4byte	.LFE76
 4486 00c8 00000000 		.4byte	.LFB77
 4487 00cc 94000000 		.4byte	.LFE77
 4488 00d0 00000000 		.4byte	.LFB78
 4489 00d4 7C000000 		.4byte	.LFE78
 4490 00d8 00000000 		.4byte	.LFB79
 4491 00dc C4000000 		.4byte	.LFE79
 4492 00e0 00000000 		.4byte	0
 4493 00e4 00000000 		.4byte	0
 4494              		.section	.debug_line,"",%progbits
 4495              	.Ldebug_line0:
 4496 0000 8D040000 		.section	.debug_str,"MS",%progbits,1
 4496      02007001 
 4496      00000201 
 4496      FB0E0D00 
 4496      01010101 
 4497              	.LASF52:
 4498 0000 64697265 		.ascii	"direction\000"
 4498      6374696F 
 4498      6E00
 4499              	.LASF65:
 4500 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4500      61726441 
 4500      66746572 
 4500      5475726E 
 4500      00
 4501              	.LASF42:
 4502 001b 496E7374 		.ascii	"InstructionDirection\000"
 4502      72756374 
 4502      696F6E44 
 4502      69726563 
 4502      74696F6E 
 4503              	.LASF148:
 4504 0030 6D61696E 		.ascii	"main.c\000"
 4504      2E6300
 4505              	.LASF102:
 4506 0037 72696768 		.ascii	"rightStatusFlag\000"
 4506      74537461 
 4506      74757346 
 4506      6C616700 
 4507              	.LASF96:
 4508 0047 7475726E 		.ascii	"turnStartedFlag\000"
 4508      53746172 
 4508      74656446 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 93


 4508      6C616700 
 4509              	.LASF79:
 4510 0057 626C6F63 		.ascii	"blocksize\000"
 4510      6B73697A 
 4510      6500
 4511              	.LASF133:
 4512 0061 62756666 		.ascii	"buffer\000"
 4512      657200
 4513              	.LASF8:
 4514 0068 756E7369 		.ascii	"unsigned int\000"
 4514      676E6564 
 4514      20696E74 
 4514      00
 4515              	.LASF12:
 4516 0075 5F5F696E 		.ascii	"__int32_t\000"
 4516      7433325F 
 4516      7400
 4517              	.LASF18:
 4518 007f 696E7431 		.ascii	"int16\000"
 4518      3600
 4519              	.LASF124:
 4520 0085 73797374 		.ascii	"system_state\000"
 4520      656D5F73 
 4520      74617465 
 4520      00
 4521              	.LASF92:
 4522 0092 6E657874 		.ascii	"nextInstruction\000"
 4522      496E7374 
 4522      72756374 
 4522      696F6E00 
 4523              	.LASF147:
 4524 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4524      43313120 
 4524      352E342E 
 4524      31203230 
 4524      31363036 
 4525 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4525      20726576 
 4525      6973696F 
 4525      6E203233 
 4525      37373135 
 4526 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4526      66756E63 
 4526      74696F6E 
 4526      2D736563 
 4526      74696F6E 
 4527              	.LASF47:
 4528 0130 466F7277 		.ascii	"ForwardUntilTarget\000"
 4528      61726455 
 4528      6E74696C 
 4528      54617267 
 4528      657400
 4529              	.LASF55:
 4530 0143 65787065 		.ascii	"expectedOrientation\000"
 4530      63746564 
 4530      4F726965 
 4530      6E746174 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 94


 4530      696F6E00 
 4531              	.LASF76:
 4532 0157 5370696E 		.ascii	"SpinCourseCorrection\000"
 4532      436F7572 
 4532      7365436F 
 4532      72726563 
 4532      74696F6E 
 4533              	.LASF71:
 4534 016c 53365F44 		.ascii	"S6_DETECTED\000"
 4534      45544543 
 4534      54454400 
 4535              	.LASF132:
 4536 0178 746F7461 		.ascii	"totalDistance\000"
 4536      6C446973 
 4536      74616E63 
 4536      6500
 4537              	.LASF34:
 4538 0186 67325F78 		.ascii	"g2_xpos\000"
 4538      706F7300 
 4539              	.LASF98:
 4540 018e 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4540      61726455 
 4540      6E74696C 
 4540      54617267 
 4540      65745374 
 4541              	.LASF90:
 4542 01ac 6E756D53 		.ascii	"numSteps\000"
 4542      74657073 
 4542      00
 4543              	.LASF86:
 4544 01b5 74617267 		.ascii	"targetRow\000"
 4544      6574526F 
 4544      7700
 4545              	.LASF78:
 4546 01bf 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4546      6F76656D 
 4546      656E7441 
 4546      63636F72 
 4546      64696E67 
 4547              	.LASF119:
 4548 01e1 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4548      5F72665F 
 4548      7472616E 
 4548      736D6973 
 4548      73696F6E 
 4549              	.LASF75:
 4550 01fd 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4550      61726443 
 4550      6F757273 
 4550      65436F72 
 4550      72656374 
 4551              	.LASF128:
 4552 0215 63757272 		.ascii	"currentRobotOrientation\000"
 4552      656E7452 
 4552      6F626F74 
 4552      4F726965 
 4552      6E746174 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 95


 4553              	.LASF93:
 4554 022d 52657365 		.ascii	"ResetSensorFlags\000"
 4554      7453656E 
 4554      736F7246 
 4554      6C616773 
 4554      00
 4555              	.LASF37:
 4556 023e 67325F64 		.ascii	"g2_direction\000"
 4556      69726563 
 4556      74696F6E 
 4556      00
 4557              	.LASF87:
 4558 024b 74617267 		.ascii	"targetCol\000"
 4558      6574436F 
 4558      6C00
 4559              	.LASF134:
 4560 0255 71756164 		.ascii	"quadDec2Count\000"
 4560      44656332 
 4560      436F756E 
 4560      7400
 4561              	.LASF19:
 4562 0263 666C6F61 		.ascii	"float\000"
 4562      7400
 4563              	.LASF80:
 4564 0269 63757272 		.ascii	"currentInstructionDirection\000"
 4564      656E7449 
 4564      6E737472 
 4564      75637469 
 4564      6F6E4469 
 4565              	.LASF123:
 4566 0285 75736242 		.ascii	"usbBuffer\000"
 4566      75666665 
 4566      7200
 4567              	.LASF83:
 4568 028f 636F756E 		.ascii	"count\000"
 4568      7400
 4569              	.LASF22:
 4570 0295 696E6465 		.ascii	"index\000"
 4570      7800
 4571              	.LASF7:
 4572 029b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4572      206C6F6E 
 4572      6720756E 
 4572      7369676E 
 4572      65642069 
 4573              	.LASF51:
 4574 02b2 496E7374 		.ascii	"Instruction\000"
 4574      72756374 
 4574      696F6E00 
 4575              	.LASF116:
 4576 02be 666C6167 		.ascii	"flag_packet\000"
 4576      5F706163 
 4576      6B657400 
 4577              	.LASF94:
 4578 02ca 53657452 		.ascii	"SetRobotMovement\000"
 4578      6F626F74 
 4578      4D6F7665 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 96


 4578      6D656E74 
 4578      00
 4579              	.LASF72:
 4580 02db 54494D45 		.ascii	"TIMER_FINISH\000"
 4580      525F4649 
 4580      4E495348 
 4580      00
 4581              	.LASF136:
 4582 02e8 6B656570 		.ascii	"keepLedOn\000"
 4582      4C65644F 
 4582      6E00
 4583              	.LASF39:
 4584 02f2 4C656674 		.ascii	"Left\000"
 4584      00
 4585              	.LASF112:
 4586 02f7 666C6167 		.ascii	"flag_ts_update\000"
 4586      5F74735F 
 4586      75706461 
 4586      746500
 4587              	.LASF111:
 4588 0306 666C6167 		.ascii	"flag_ts_enc\000"
 4588      5F74735F 
 4588      656E6300 
 4589              	.LASF101:
 4590 0312 6C656674 		.ascii	"leftStatusFlag\000"
 4590      53746174 
 4590      7573466C 
 4590      616700
 4591              	.LASF81:
 4592 0321 71756164 		.ascii	"quadCountToRPM\000"
 4592      436F756E 
 4592      74546F52 
 4592      504D00
 4593              	.LASF84:
 4594 0330 626C6F63 		.ascii	"blockSize\000"
 4594      6B53697A 
 4594      6500
 4595              	.LASF145:
 4596 033a 69676E6F 		.ascii	"ignoreSensor\000"
 4596      72655365 
 4596      6E736F72 
 4596      00
 4597              	.LASF48:
 4598 0347 53746F70 		.ascii	"StopAtTarget\000"
 4598      41745461 
 4598      72676574 
 4598      00
 4599              	.LASF64:
 4600 0354 77616974 		.ascii	"waitForTurn\000"
 4600      466F7254 
 4600      75726E00 
 4601              	.LASF24:
 4602 0360 726F626F 		.ascii	"robot_ypos\000"
 4602      745F7970 
 4602      6F7300
 4603              	.LASF110:
 4604 036b 74735F64 		.ascii	"ts_display\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 97


 4604      6973706C 
 4604      617900
 4605              	.LASF11:
 4606 0376 63686172 		.ascii	"char\000"
 4606      00
 4607              	.LASF149:
 4608 037b 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4608      6F63756D 
 4608      656E7473 
 4608      5C476974 
 4608      4875625C 
 4609 03aa 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4609      635F636F 
 4609      64655F62 
 4609      6173655C 
 4609      43533330 
 4610              	.LASF28:
 4611 03cc 67305F73 		.ascii	"g0_speed\000"
 4611      70656564 
 4611      00
 4612              	.LASF91:
 4613 03d5 696E7374 		.ascii	"instructionList\000"
 4613      72756374 
 4613      696F6E4C 
 4613      69737400 
 4614              	.LASF95:
 4615 03e5 696E7374 		.ascii	"instructionIndex\000"
 4615      72756374 
 4615      696F6E49 
 4615      6E646578 
 4615      00
 4616              	.LASF15:
 4617 03f6 75696E74 		.ascii	"uint16\000"
 4617      313600
 4618              	.LASF17:
 4619 03fd 696E7438 		.ascii	"int8\000"
 4619      00
 4620              	.LASF140:
 4621 0402 78426C6F 		.ascii	"xBlocksize\000"
 4621      636B7369 
 4621      7A6500
 4622              	.LASF33:
 4623 040d 67315F64 		.ascii	"g1_direction\000"
 4623      69726563 
 4623      74696F6E 
 4623      00
 4624              	.LASF68:
 4625 041a 53335F44 		.ascii	"S3_DETECTED\000"
 4625      45544543 
 4625      54454400 
 4626              	.LASF77:
 4627 0426 73706565 		.ascii	"speedTimer\000"
 4627      6454696D 
 4627      657200
 4628              	.LASF88:
 4629 0431 70617468 		.ascii	"pathCount\000"
 4629      436F756E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 98


 4629      7400
 4630              	.LASF97:
 4631 043b 7475726E 		.ascii	"turnFinishedFlag\000"
 4631      46696E69 
 4631      73686564 
 4631      466C6167 
 4631      00
 4632              	.LASF44:
 4633 044c 77616974 		.ascii	"waitForLeftTurn\000"
 4633      466F724C 
 4633      65667454 
 4633      75726E00 
 4634              	.LASF6:
 4635 045c 6C6F6E67 		.ascii	"long long int\000"
 4635      206C6F6E 
 4635      6720696E 
 4635      7400
 4636              	.LASF30:
 4637 046a 67315F78 		.ascii	"g1_xpos\000"
 4637      706F7300 
 4638              	.LASF139:
 4639 0472 626C6F63 		.ascii	"blockSizeTotal\000"
 4639      6B53697A 
 4639      65546F74 
 4639      616C00
 4640              	.LASF129:
 4641 0481 70726576 		.ascii	"previousOrientation\000"
 4641      696F7573 
 4641      4F726965 
 4641      6E746174 
 4641      696F6E00 
 4642              	.LASF46:
 4643 0495 75547572 		.ascii	"uTurn\000"
 4643      6E00
 4644              	.LASF103:
 4645 049b 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4645      436F7572 
 4645      7365436F 
 4645      72726563 
 4645      74696F6E 
 4646              	.LASF74:
 4647 04b7 6E657744 		.ascii	"newDistance\000"
 4647      69737461 
 4647      6E636500 
 4648              	.LASF36:
 4649 04c3 67325F73 		.ascii	"g2_speed\000"
 4649      70656564 
 4649      00
 4650              	.LASF27:
 4651 04cc 67305F79 		.ascii	"g0_ypos\000"
 4651      706F7300 
 4652              	.LASF125:
 4653 04d4 666F6F64 		.ascii	"food_list\000"
 4653      5F6C6973 
 4653      7400
 4654              	.LASF59:
 4655 04de 5475726E 		.ascii	"TurnLeft\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 99


 4655      4C656674 
 4655      00
 4656              	.LASF109:
 4657 04e7 74735F73 		.ascii	"ts_speed\000"
 4657      70656564 
 4657      00
 4658              	.LASF138:
 4659 04f0 6A756E63 		.ascii	"junctionConfiguration\000"
 4659      74696F6E 
 4659      436F6E66 
 4659      69677572 
 4659      6174696F 
 4660              	.LASF63:
 4661 0506 556E6B6E 		.ascii	"Unknown\000"
 4661      6F776E00 
 4662              	.LASF16:
 4663 050e 75696E74 		.ascii	"uint32\000"
 4663      333200
 4664              	.LASF45:
 4665 0515 77616974 		.ascii	"waitForRightTurn\000"
 4665      466F7252 
 4665      69676874 
 4665      5475726E 
 4665      00
 4666              	.LASF58:
 4667 0526 5475726E 		.ascii	"TurnRight\000"
 4667      52696768 
 4667      7400
 4668              	.LASF50:
 4669 0530 64617461 		.ascii	"data_main\000"
 4669      5F6D6169 
 4669      6E00
 4670              	.LASF21:
 4671 053a 72737369 		.ascii	"rssi\000"
 4671      00
 4672              	.LASF29:
 4673 053f 67305F64 		.ascii	"g0_direction\000"
 4673      69726563 
 4673      74696F6E 
 4673      00
 4674              	.LASF127:
 4675 054c 70726576 		.ascii	"previousDirection\000"
 4675      696F7573 
 4675      44697265 
 4675      6374696F 
 4675      6E00
 4676              	.LASF67:
 4677 055e 5370696E 		.ascii	"Spin180\000"
 4677      31383000 
 4678              	.LASF9:
 4679 0566 6C6F6E67 		.ascii	"long double\000"
 4679      20646F75 
 4679      626C6500 
 4680              	.LASF113:
 4681 0572 666C6167 		.ascii	"flag_ts_speed\000"
 4681      5F74735F 
 4681      73706565 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 100


 4681      6400
 4682              	.LASF118:
 4683 0580 64617461 		.ascii	"dataready_flag\000"
 4683      72656164 
 4683      795F666C 
 4683      616700
 4684              	.LASF115:
 4685 058f 666C6167 		.ascii	"flag_rx\000"
 4685      5F727800 
 4686              	.LASF141:
 4687 0597 79426C6F 		.ascii	"yBlocksize\000"
 4687      636B7369 
 4687      7A6500
 4688              	.LASF2:
 4689 05a2 73686F72 		.ascii	"short int\000"
 4689      7420696E 
 4689      7400
 4690              	.LASF69:
 4691 05ac 53345F44 		.ascii	"S4_DETECTED\000"
 4691      45544543 
 4691      54454400 
 4692              	.LASF4:
 4693 05b8 6C6F6E67 		.ascii	"long int\000"
 4693      20696E74 
 4693      00
 4694              	.LASF106:
 4695 05c1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4695      52784275 
 4695      66666572 
 4695      00
 4696              	.LASF108:
 4697 05ce 74735F75 		.ascii	"ts_update\000"
 4697      70646174 
 4697      6500
 4698              	.LASF57:
 4699 05d8 466F7277 		.ascii	"Forward\000"
 4699      61726400 
 4700              	.LASF131:
 4701 05e0 746F7461 		.ascii	"totalMilliseconds\000"
 4701      6C4D696C 
 4701      6C697365 
 4701      636F6E64 
 4701      7300
 4702              	.LASF35:
 4703 05f2 67325F79 		.ascii	"g2_ypos\000"
 4703      706F7300 
 4704              	.LASF150:
 4705 05fa 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4705      546F4E65 
 4705      7874496E 
 4705      73747275 
 4705      6374696F 
 4706              	.LASF41:
 4707 0610 4F726965 		.ascii	"OrientationState\000"
 4707      6E746174 
 4707      696F6E53 
 4707      74617465 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 101


 4707      00
 4708              	.LASF38:
 4709 0621 446F776E 		.ascii	"Down\000"
 4709      00
 4710              	.LASF40:
 4711 0626 52696768 		.ascii	"Right\000"
 4711      7400
 4712              	.LASF31:
 4713 062c 67315F79 		.ascii	"g1_ypos\000"
 4713      706F7300 
 4714              	.LASF126:
 4715 0634 63757272 		.ascii	"currentDirection\000"
 4715      656E7444 
 4715      69726563 
 4715      74696F6E 
 4715      00
 4716              	.LASF99:
 4717 0645 75547572 		.ascii	"uTurnStartedFlag\000"
 4717      6E537461 
 4717      72746564 
 4717      466C6167 
 4717      00
 4718              	.LASF146:
 4719 0656 6C617374 		.ascii	"lastDirectionAfter180\000"
 4719      44697265 
 4719      6374696F 
 4719      6E416674 
 4719      65723138 
 4720              	.LASF10:
 4721 066c 73697A65 		.ascii	"sizetype\000"
 4721      74797065 
 4721      00
 4722              	.LASF5:
 4723 0675 6C6F6E67 		.ascii	"long unsigned int\000"
 4723      20756E73 
 4723      69676E65 
 4723      6420696E 
 4723      7400
 4724              	.LASF137:
 4725 0687 73746F70 		.ascii	"stopBuffer\000"
 4725      42756666 
 4725      657200
 4726              	.LASF100:
 4727 0692 75547572 		.ascii	"uTurnFinishedFlag\000"
 4727      6E46696E 
 4727      69736865 
 4727      64466C61 
 4727      6700
 4728              	.LASF13:
 4729 06a4 696E7433 		.ascii	"int32_t\000"
 4729      325F7400 
 4730              	.LASF23:
 4731 06ac 726F626F 		.ascii	"robot_xpos\000"
 4731      745F7870 
 4731      6F7300
 4732              	.LASF122:
 4733 06b7 656E7472 		.ascii	"entry\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 102


 4733      7900
 4734              	.LASF56:
 4735 06bd 526F626F 		.ascii	"RobotMovement\000"
 4735      744D6F76 
 4735      656D656E 
 4735      7400
 4736              	.LASF1:
 4737 06cb 756E7369 		.ascii	"unsigned char\000"
 4737      676E6564 
 4737      20636861 
 4737      7200
 4738              	.LASF144:
 4739 06d9 73746F70 		.ascii	"stoppedAfterTurn\000"
 4739      70656441 
 4739      66746572 
 4739      5475726E 
 4739      00
 4740              	.LASF121:
 4741 06ea 6C696E65 		.ascii	"line\000"
 4741      00
 4742              	.LASF82:
 4743 06ef 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4743      756C6174 
 4743      65446973 
 4743      74616E63 
 4743      65546F54 
 4744              	.LASF61:
 4745 0709 41646A75 		.ascii	"AdjustToTheRight\000"
 4745      7374546F 
 4745      54686552 
 4745      69676874 
 4745      00
 4746              	.LASF62:
 4747 071a 53746F70 		.ascii	"Stop\000"
 4747      00
 4748              	.LASF89:
 4749 071f 47657449 		.ascii	"GetInstructionAtIndex\000"
 4749      6E737472 
 4749      75637469 
 4749      6F6E4174 
 4749      496E6465 
 4750              	.LASF107:
 4751 0735 74735F65 		.ascii	"ts_enc\000"
 4751      6E6300
 4752              	.LASF114:
 4753 073c 666C6167 		.ascii	"flag_ts_display\000"
 4753      5F74735F 
 4753      64697370 
 4753      6C617900 
 4754              	.LASF104:
 4755 074c 63757272 		.ascii	"currentIgnoreL\000"
 4755      656E7449 
 4755      676E6F72 
 4755      654C00
 4756              	.LASF105:
 4757 075b 63757272 		.ascii	"currentIgnoreR\000"
 4757      656E7449 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 103


 4757      676E6F72 
 4757      655200
 4758              	.LASF49:
 4759 076a 536B6970 		.ascii	"Skip\000"
 4759      00
 4760              	.LASF120:
 4761 076f 64697370 		.ascii	"displaystring\000"
 4761      6C617973 
 4761      7472696E 
 4761      6700
 4762              	.LASF43:
 4763 077d 476F466F 		.ascii	"GoForward\000"
 4763      72776172 
 4763      6400
 4764              	.LASF70:
 4765 0787 53355F44 		.ascii	"S5_DETECTED\000"
 4765      45544543 
 4765      54454400 
 4766              	.LASF0:
 4767 0793 7369676E 		.ascii	"signed char\000"
 4767      65642063 
 4767      68617200 
 4768              	.LASF142:
 4769 079f 63757272 		.ascii	"currentRow\000"
 4769      656E7452 
 4769      6F7700
 4770              	.LASF3:
 4771 07aa 73686F72 		.ascii	"short unsigned int\000"
 4771      7420756E 
 4771      7369676E 
 4771      65642069 
 4771      6E7400
 4772              	.LASF25:
 4773 07bd 726F626F 		.ascii	"robot_orientation\000"
 4773      745F6F72 
 4773      69656E74 
 4773      6174696F 
 4773      6E00
 4774              	.LASF73:
 4775 07cf 6D61696E 		.ascii	"main\000"
 4775      00
 4776              	.LASF130:
 4777 07d4 63757272 		.ascii	"currentInstruction\000"
 4777      656E7449 
 4777      6E737472 
 4777      75637469 
 4777      6F6E00
 4778              	.LASF60:
 4779 07e7 41646A75 		.ascii	"AdjustToTheLeft\000"
 4779      7374546F 
 4779      5468654C 
 4779      65667400 
 4780              	.LASF66:
 4781 07f7 4261636B 		.ascii	"Backward\000"
 4781      77617264 
 4781      00
 4782              	.LASF14:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwCvmdT.s 			page 104


 4783 0800 75696E74 		.ascii	"uint8\000"
 4783      3800
 4784              	.LASF20:
 4785 0806 646F7562 		.ascii	"double\000"
 4785      6C6500
 4786              	.LASF143:
 4787 080d 63757272 		.ascii	"currentCol\000"
 4787      656E7443 
 4787      6F6C00
 4788              	.LASF85:
 4789 0818 746F7461 		.ascii	"totalBlockSize\000"
 4789      6C426C6F 
 4789      636B5369 
 4789      7A6500
 4790              	.LASF26:
 4791 0827 67305F78 		.ascii	"g0_xpos\000"
 4791      706F7300 
 4792              	.LASF135:
 4793 082f 74696D65 		.ascii	"timerInt\000"
 4793      72496E74 
 4793      00
 4794              	.LASF117:
 4795 0838 666C6167 		.ascii	"flag_KB_string\000"
 4795      5F4B425F 
 4795      73747269 
 4795      6E6700
 4796              	.LASF32:
 4797 0847 67315F73 		.ascii	"g1_speed\000"
 4797      70656564 
 4797      00
 4798              	.LASF53:
 4799 0850 69676E6F 		.ascii	"ignoreL\000"
 4799      72654C00 
 4800              	.LASF54:
 4801 0858 69676E6F 		.ascii	"ignoreR\000"
 4801      72655200 
 4802              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
