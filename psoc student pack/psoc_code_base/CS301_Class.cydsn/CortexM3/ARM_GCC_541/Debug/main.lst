ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              		.global	forwardBuffer
 173              		.align	1
 174              		.type	forwardBuffer, %object
 175              		.size	forwardBuffer, 2
 176              	forwardBuffer:
 177 0034 0000     		.space	2
 178              	turnStartedFlag:
 179 0036 00       		.space	1
 180              	turnFinishedFlag:
 181 0037 00       		.space	1
 182              	forwardUntilTargetStartedFlag:
 183 0038 00       		.space	1
 184              	uTurnStartedFlag:
 185 0039 00       		.space	1
 186              	uTurnFinishedFlag:
 187 003a 00       		.space	1
 188              	leftStatusFlag:
 189 003b 00       		.space	1
 190              	rightStatusFlag:
 191 003c 00       		.space	1
 192              	spinCourseCorrectionStarted:
 193 003d 00       		.space	1
 194              	currentIgnoreL:
 195 003e 00       		.space	1
 196              		.data
 197              		.type	currentIgnoreR, %object
 198              		.size	currentIgnoreR, 1
 199              	currentIgnoreR:
 200 0045 01       		.byte	1
 201              		.bss
 202              	totalLineCount:
 203 003f 00       		.space	1
 204              	lineCount:
 205 0040 00       		.space	1
 206              	onLineFlag:
 207 0041 00       		.space	1
 208              	tooEarlyFlag:
 209 0042 00       		.space	1
 210              	tooLateFlag:
 211 0043 00       		.space	1
 212              		.global	junctionConfiguration
 213              		.align	2
 214              		.type	junctionConfiguration, %object
 215              		.size	junctionConfiguration, 4
 216              	junctionConfiguration:
 217 0044 00000000 		.space	4
 218              		.global	currentFoodListIndex
 219              		.type	currentFoodListIndex, %object
 220              		.size	currentFoodListIndex, 1
 221              	currentFoodListIndex:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 5


 222 0048 00       		.space	1
 223              		.global	blockSizeTotal
 224 0049 000000   		.align	2
 225              		.type	blockSizeTotal, %object
 226              		.size	blockSizeTotal, 4
 227              	blockSizeTotal:
 228 004c 00000000 		.space	4
 229              		.global	__aeabi_i2d
 230              		.global	__aeabi_dmul
 231              		.global	__aeabi_ddiv
 232              		.global	__aeabi_d2f
 233              		.global	__aeabi_fadd
 234              		.section	.text.speedTimer,"ax",%progbits
 235              		.align	2
 236              		.global	speedTimer
 237              		.thumb
 238              		.thumb_func
 239              		.type	speedTimer, %function
 240              	speedTimer:
 241              	.LFB64:
 242              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 6


  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint16 forwardBuffer = 0;
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** void RotateClockwise180Degrees();
  67:main.c        **** 
  68:main.c        **** volatile static uint8 totalLineCount = 0;
  69:main.c        **** volatile static uint8 lineCount = 0;
  70:main.c        **** volatile static uint8 onLineFlag = 0;
  71:main.c        **** 
  72:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  73:main.c        **** volatile static uint8 tooLateFlag = 0;
  74:main.c        **** 
  75:main.c        **** uint8 junctionConfiguration[4] = {0};
  76:main.c        **** uint8 currentFoodListIndex = 0;
  77:main.c        **** 
  78:main.c        **** float blockSizeTotal = 0;
  79:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  80:main.c        **** 
  81:main.c        **** CY_ISR (speedTimer) {
 243              		.loc 1 81 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 90B5     		push	{r4, r7, lr}
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 7


 255              		.cfi_def_cfa_register 7
  82:main.c        ****     timerInt = 1;
 256              		.loc 1 82 0
 257 0006 344B     		ldr	r3, .L4+16
 258 0008 0122     		movs	r2, #1
 259 000a 1A60     		str	r2, [r3]
  83:main.c        ****     //quadDec_M1 used for turning macros
  84:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 260              		.loc 1 84 0
 261 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 262 0010 0346     		mov	r3, r0
 263 0012 1A46     		mov	r2, r3
 264 0014 314B     		ldr	r3, .L4+20
 265 0016 1A60     		str	r2, [r3]
  85:main.c        ****     
  86:main.c        ****     if ((currentDirection == Forward || 
 266              		.loc 1 86 0
 267 0018 314B     		ldr	r3, .L4+24
 268 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 001c 002B     		cmp	r3, #0
 270 001e 13D0     		beq	.L2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 271              		.loc 1 87 0 discriminator 1
 272 0020 2F4B     		ldr	r3, .L4+24
 273 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  86:main.c        ****         currentDirection == ForwardAfterTurn ||
 274              		.loc 1 86 0 discriminator 1
 275 0024 082B     		cmp	r3, #8
 276 0026 0FD0     		beq	.L2
  88:main.c        ****         currentDirection == waitForTurn || 
 277              		.loc 1 88 0
 278 0028 2D4B     		ldr	r3, .L4+24
 279 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 280              		.loc 1 87 0
 281 002c 072B     		cmp	r3, #7
 282 002e 0BD0     		beq	.L2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 283              		.loc 1 89 0
 284 0030 2B4B     		ldr	r3, .L4+24
 285 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****         currentDirection == waitForTurn || 
 286              		.loc 1 88 0
 287 0034 032B     		cmp	r3, #3
 288 0036 07D0     		beq	.L2
  90:main.c        ****         currentDirection == AdjustToTheRight ||
 289              		.loc 1 90 0
 290 0038 294B     		ldr	r3, .L4+24
 291 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 292              		.loc 1 89 0
 293 003c 042B     		cmp	r3, #4
 294 003e 03D0     		beq	.L2
  91:main.c        ****         currentDirection == Backward) &&
 295              		.loc 1 91 0
 296 0040 274B     		ldr	r3, .L4+24
 297 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 8


  90:main.c        ****         currentDirection == AdjustToTheRight ||
 298              		.loc 1 90 0
 299 0044 092B     		cmp	r3, #9
 300 0046 34D1     		bne	.L3
 301              	.L2:
  92:main.c        ****         quadDec2Count != 0) {
 302              		.loc 1 92 0
 303 0048 244B     		ldr	r3, .L4+20
 304 004a 1B68     		ldr	r3, [r3]
  91:main.c        ****         currentDirection == Backward) &&
 305              		.loc 1 91 0
 306 004c 002B     		cmp	r3, #0
 307 004e 30D0     		beq	.L3
 308              	.LBB2:
  93:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  94:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 309              		.loc 1 94 0
 310 0050 224B     		ldr	r3, .L4+20
 311 0052 1B68     		ldr	r3, [r3]
 312 0054 002B     		cmp	r3, #0
 313 0056 B8BF     		it	lt
 314 0058 5B42     		rsblt	r3, r3, #0
 315 005a 1846     		mov	r0, r3
 316 005c FFF7FEFF 		bl	__aeabi_i2d
 317 0060 19A3     		adr	r3, .L4
 318 0062 D3E90023 		ldrd	r2, [r3]
 319 0066 FFF7FEFF 		bl	__aeabi_dmul
 320 006a 0346     		mov	r3, r0
 321 006c 0C46     		mov	r4, r1
 322 006e 1846     		mov	r0, r3
 323 0070 2146     		mov	r1, r4
 324 0072 17A3     		adr	r3, .L4+8
 325 0074 D3E90023 		ldrd	r2, [r3]
 326 0078 FFF7FEFF 		bl	__aeabi_dmul
 327 007c 0346     		mov	r3, r0
 328 007e 0C46     		mov	r4, r1
 329 0080 1846     		mov	r0, r3
 330 0082 2146     		mov	r1, r4
 331 0084 4FF00002 		mov	r2, #0
 332 0088 164B     		ldr	r3, .L4+28
 333 008a FFF7FEFF 		bl	__aeabi_ddiv
 334 008e 0346     		mov	r3, r0
 335 0090 0C46     		mov	r4, r1
 336 0092 1846     		mov	r0, r3
 337 0094 2146     		mov	r1, r4
 338 0096 FFF7FEFF 		bl	__aeabi_d2f
 339 009a 0346     		mov	r3, r0
 340 009c 7B60     		str	r3, [r7, #4]	@ float
  95:main.c        ****         
  96:main.c        ****         totalDistance = totalDistance + newDistance;
 341              		.loc 1 96 0
 342 009e 124B     		ldr	r3, .L4+32
 343 00a0 1B68     		ldr	r3, [r3]	@ float
 344 00a2 7968     		ldr	r1, [r7, #4]	@ float
 345 00a4 1846     		mov	r0, r3
 346 00a6 FFF7FEFF 		bl	__aeabi_fadd
 347 00aa 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 9


 348 00ac 1A46     		mov	r2, r3
 349 00ae 0E4B     		ldr	r3, .L4+32
 350 00b0 1A60     		str	r2, [r3]	@ float
 351              	.L3:
 352              	.LBE2:
  97:main.c        ****     }
  98:main.c        ****     
  99:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 353              		.loc 1 99 0
 354 00b2 0020     		movs	r0, #0
 355 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 100:main.c        ****     QuadDec_M2_Start(); // restart counter
 356              		.loc 1 100 0
 357 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 101:main.c        ****     
 102:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 358              		.loc 1 102 0
 359 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 103:main.c        **** }
 360              		.loc 1 103 0
 361 00c0 00BF     		nop
 362 00c2 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 12
 364 00c4 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 00c6 90BD     		pop	{r4, r7, pc}
 368              	.L5:
 369              		.align	3
 370              	.L4:
 371 00c8 182D4454 		.word	1413754136
 372 00cc FB210940 		.word	1074340347
 373 00d0 00000000 		.word	0
 374 00d4 00205040 		.word	1078992896
 375 00d8 00000000 		.word	timerInt
 376 00dc 00000000 		.word	quadDec2Count
 377 00e0 00000000 		.word	currentDirection
 378 00e4 00806C40 		.word	1080852480
 379 00e8 00000000 		.word	totalDistance
 380              		.cfi_endproc
 381              	.LFE64:
 382              		.size	speedTimer, .-speedTimer
 383              		.section	.text.S3_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S3_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S3_DETECTED, %function
 389              	S3_DETECTED:
 390              	.LFB65:
 104:main.c        **** 
 105:main.c        **** CY_ISR(S3_DETECTED) {
 391              		.loc 1 105 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 10


 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 106:main.c        ****     // Sensor has detected WHITE
 107:main.c        ****     s3 = 1; // , Black = 0, White = 1
 401              		.loc 1 107 0
 402 0004 034B     		ldr	r3, .L7
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
 108:main.c        ****     //LED_Write(1u);
 109:main.c        **** }
 405              		.loc 1 109 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L8:
 415 0012 00BF     		.align	2
 416              	.L7:
 417 0014 00000000 		.word	s3
 418              		.cfi_endproc
 419              	.LFE65:
 420              		.size	S3_DETECTED, .-S3_DETECTED
 421              		.section	.text.S4_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S4_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S4_DETECTED, %function
 427              	S4_DETECTED:
 428              	.LFB66:
 110:main.c        **** 
 111:main.c        **** CY_ISR(S4_DETECTED) {
 429              		.loc 1 111 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 112:main.c        ****     // Sensor has detected WHITE
 113:main.c        ****     s4 = 1; // , Black = 0, White = 1
 439              		.loc 1 113 0
 440 0004 034B     		ldr	r3, .L10
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
 114:main.c        ****     //LED_Write(1u);
 115:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 11


 443              		.loc 1 115 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L11:
 453 0012 00BF     		.align	2
 454              	.L10:
 455 0014 00000000 		.word	s4
 456              		.cfi_endproc
 457              	.LFE66:
 458              		.size	S4_DETECTED, .-S4_DETECTED
 459              		.section	.text.S5_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S5_DETECTED
 462              		.thumb
 463              		.thumb_func
 464              		.type	S5_DETECTED, %function
 465              	S5_DETECTED:
 466              	.LFB67:
 116:main.c        **** 
 117:main.c        **** CY_ISR(S5_DETECTED) {
 467              		.loc 1 117 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 118:main.c        ****     // Sensor has detected WHITE
 119:main.c        ****     s5 = 1; // , Black = 0, White = 1
 477              		.loc 1 119 0
 478 0004 034B     		ldr	r3, .L13
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 120:main.c        ****     //LED_Write(1u);
 121:main.c        **** }
 481              		.loc 1 121 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L14:
 491 0012 00BF     		.align	2
 492              	.L13:
 493 0014 00000000 		.word	s5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 12


 494              		.cfi_endproc
 495              	.LFE67:
 496              		.size	S5_DETECTED, .-S5_DETECTED
 497              		.section	.text.S6_DETECTED,"ax",%progbits
 498              		.align	2
 499              		.global	S6_DETECTED
 500              		.thumb
 501              		.thumb_func
 502              		.type	S6_DETECTED, %function
 503              	S6_DETECTED:
 504              	.LFB68:
 122:main.c        **** 
 123:main.c        **** CY_ISR(S6_DETECTED) {
 505              		.loc 1 123 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 124:main.c        ****     // Sensor has detected WHITE
 125:main.c        ****     s6 = 1; // , Black = 0, White = 1
 515              		.loc 1 125 0
 516 0004 034B     		ldr	r3, .L16
 517 0006 0122     		movs	r2, #1
 518 0008 1A70     		strb	r2, [r3]
 126:main.c        ****     //LED_Write(1u);
 127:main.c        **** }
 519              		.loc 1 127 0
 520 000a 00BF     		nop
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L17:
 529 0012 00BF     		.align	2
 530              	.L16:
 531 0014 00000000 		.word	s6
 532              		.cfi_endproc
 533              	.LFE68:
 534              		.size	S6_DETECTED, .-S6_DETECTED
 535              		.section	.text.TIMER_FINISH,"ax",%progbits
 536              		.align	2
 537              		.global	TIMER_FINISH
 538              		.thumb
 539              		.thumb_func
 540              		.type	TIMER_FINISH, %function
 541              	TIMER_FINISH:
 542              	.LFB69:
 128:main.c        **** 
 129:main.c        **** CY_ISR(TIMER_FINISH) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 13


 543              		.loc 1 129 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 130:main.c        ****     if (currentDirection == Stop) {
 553              		.loc 1 130 0
 554 0004 154B     		ldr	r3, .L24
 555 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0008 052B     		cmp	r3, #5
 557 000a 05D1     		bne	.L19
 131:main.c        ****         stopBuffer = stopBuffer + 1;
 558              		.loc 1 131 0
 559 000c 144B     		ldr	r3, .L24+4
 560 000e 1B68     		ldr	r3, [r3]
 561 0010 0133     		adds	r3, r3, #1
 562 0012 134A     		ldr	r2, .L24+4
 563 0014 1360     		str	r3, [r2]
 564 0016 02E0     		b	.L20
 565              	.L19:
 132:main.c        ****     } else {
 133:main.c        ****         stopBuffer = 0;
 566              		.loc 1 133 0
 567 0018 114B     		ldr	r3, .L24+4
 568 001a 0022     		movs	r2, #0
 569 001c 1A60     		str	r2, [r3]
 570              	.L20:
 134:main.c        ****     }
 135:main.c        ****     if (currentDirection == Forward || currentDirection == AdjustToTheLeft || currentDirection ==  
 571              		.loc 1 135 0
 572 001e 0F4B     		ldr	r3, .L24
 573 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0022 002B     		cmp	r3, #0
 575 0024 07D0     		beq	.L21
 576              		.loc 1 135 0 is_stmt 0 discriminator 1
 577 0026 0D4B     		ldr	r3, .L24
 578 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 002a 032B     		cmp	r3, #3
 580 002c 03D0     		beq	.L21
 581              		.loc 1 135 0 discriminator 2
 582 002e 0B4B     		ldr	r3, .L24
 583 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0032 042B     		cmp	r3, #4
 585 0034 06D1     		bne	.L22
 586              	.L21:
 136:main.c        ****         forwardBuffer = forwardBuffer + 1;
 587              		.loc 1 136 0 is_stmt 1
 588 0036 0B4B     		ldr	r3, .L24+8
 589 0038 1B88     		ldrh	r3, [r3]
 590 003a 0133     		adds	r3, r3, #1
 591 003c 9AB2     		uxth	r2, r3
 592 003e 094B     		ldr	r3, .L24+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 14


 593 0040 1A80     		strh	r2, [r3]	@ movhi
 594 0042 02E0     		b	.L23
 595              	.L22:
 137:main.c        ****     } else {
 138:main.c        ****         forwardBuffer = 0;    
 596              		.loc 1 138 0
 597 0044 074B     		ldr	r3, .L24+8
 598 0046 0022     		movs	r2, #0
 599 0048 1A80     		strh	r2, [r3]	@ movhi
 600              	.L23:
 139:main.c        ****     }
 140:main.c        ****     SetRobotMovement(); 
 601              		.loc 1 140 0
 602 004a FFF7FEFF 		bl	SetRobotMovement
 141:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 603              		.loc 1 141 0
 604 004e FFF7FEFF 		bl	ResetSensorFlags
 142:main.c        ****     Timer_LED_ReadStatusRegister();
 605              		.loc 1 142 0
 606 0052 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 143:main.c        **** }
 607              		.loc 1 143 0
 608 0056 00BF     		nop
 609 0058 80BD     		pop	{r7, pc}
 610              	.L25:
 611 005a 00BF     		.align	2
 612              	.L24:
 613 005c 00000000 		.word	currentDirection
 614 0060 00000000 		.word	stopBuffer
 615 0064 00000000 		.word	forwardBuffer
 616              		.cfi_endproc
 617              	.LFE69:
 618              		.size	TIMER_FINISH, .-TIMER_FINISH
 619              		.section	.text.main,"ax",%progbits
 620              		.align	2
 621              		.global	main
 622              		.thumb
 623              		.thumb_func
 624              		.type	main, %function
 625              	main:
 626              	.LFB70:
 144:main.c        **** 
 145:main.c        **** 
 146:main.c        **** int main() {
 627              		.loc 1 146 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 24
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 B0B5     		push	{r4, r5, r7, lr}
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 4, -16
 634              		.cfi_offset 5, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 86B0     		sub	sp, sp, #24
 638              		.cfi_def_cfa_offset 40
 639 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 15


 640              		.cfi_def_cfa_register 7
 147:main.c        **** // ----- INITIALIZATIONS ----------
 148:main.c        ****     CYGlobalIntEnable;
 641              		.loc 1 148 0
 642              		.syntax unified
 643              	@ 148 "main.c" 1
 644 0006 62B6     		CPSIE   i
 645              	@ 0 "" 2
 149:main.c        ****     ResetSensorFlags();
 646              		.loc 1 149 0
 647              		.thumb
 648              		.syntax unified
 649 0008 FFF7FEFF 		bl	ResetSensorFlags
 150:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 650              		.loc 1 150 0
 651 000c FFF7FEFF 		bl	init
 151:main.c        ****     
 152:main.c        ****     instructionList = findPath(map, food_list, currentFoodListIndex);
 652              		.loc 1 152 0
 653 0010 344B     		ldr	r3, .L30
 654 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 0014 1A46     		mov	r2, r3
 656 0016 3449     		ldr	r1, .L30+4
 657 0018 3448     		ldr	r0, .L30+8
 658 001a FFF7FEFF 		bl	findPath
 659 001e 0246     		mov	r2, r0
 660 0020 334B     		ldr	r3, .L30+12
 661 0022 1A60     		str	r2, [r3]
 153:main.c        ****     numSteps = instructionsListLength();
 662              		.loc 1 153 0
 663 0024 FFF7FEFF 		bl	instructionsListLength
 664 0028 0346     		mov	r3, r0
 665 002a 1A46     		mov	r2, r3
 666 002c 314B     		ldr	r3, .L30+16
 667 002e 1A60     		str	r2, [r3]
 154:main.c        ****     
 155:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 668              		.loc 1 155 0
 669 0030 304B     		ldr	r3, .L30+16
 670 0032 1968     		ldr	r1, [r3]
 671 0034 2E4B     		ldr	r3, .L30+12
 672 0036 1A68     		ldr	r2, [r3]
 673 0038 2F4C     		ldr	r4, .L30+20
 674 003a 3B46     		mov	r3, r7
 675 003c 1846     		mov	r0, r3
 676 003e FFF7FEFF 		bl	GetInstructionAtIndex
 677 0042 2546     		mov	r5, r4
 678 0044 3C46     		mov	r4, r7
 679 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 680 0048 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 681 004a 2368     		ldr	r3, [r4]
 682 004c 2B60     		str	r3, [r5]
 156:main.c        ****     
 157:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 683              		.loc 1 157 0
 684 004e 284B     		ldr	r3, .L30+12
 685 0050 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 16


 686 0052 2A4B     		ldr	r3, .L30+24
 687 0054 1A68     		ldr	r2, [r3]
 688 0056 1346     		mov	r3, r2
 689 0058 9B00     		lsls	r3, r3, #2
 690 005a 1344     		add	r3, r3, r2
 691 005c 9B00     		lsls	r3, r3, #2
 692 005e 0B44     		add	r3, r3, r1
 693 0060 5B68     		ldr	r3, [r3, #4]
 694 0062 DAB2     		uxtb	r2, r3
 695 0064 264B     		ldr	r3, .L30+28
 696 0066 1A70     		strb	r2, [r3]
 158:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 697              		.loc 1 158 0
 698 0068 214B     		ldr	r3, .L30+12
 699 006a 1968     		ldr	r1, [r3]
 700 006c 234B     		ldr	r3, .L30+24
 701 006e 1A68     		ldr	r2, [r3]
 702 0070 1346     		mov	r3, r2
 703 0072 9B00     		lsls	r3, r3, #2
 704 0074 1344     		add	r3, r3, r2
 705 0076 9B00     		lsls	r3, r3, #2
 706 0078 0B44     		add	r3, r3, r1
 707 007a 9B68     		ldr	r3, [r3, #8]
 708 007c DAB2     		uxtb	r2, r3
 709 007e 214B     		ldr	r3, .L30+32
 710 0080 1A70     		strb	r2, [r3]
 159:main.c        ****     
 160:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 711              		.loc 1 160 0
 712 0082 2148     		ldr	r0, .L30+36
 713 0084 FFF7FEFF 		bl	isr_speed_StartEx
 161:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 714              		.loc 1 161 0
 715 0088 2048     		ldr	r0, .L30+40
 716 008a FFF7FEFF 		bl	isr_Timer_LED_StartEx
 162:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 717              		.loc 1 162 0
 718 008e 2048     		ldr	r0, .L30+44
 719 0090 FFF7FEFF 		bl	S3_detected_StartEx
 163:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 720              		.loc 1 163 0
 721 0094 1F48     		ldr	r0, .L30+48
 722 0096 FFF7FEFF 		bl	S4_detected_StartEx
 164:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 723              		.loc 1 164 0
 724 009a 1F48     		ldr	r0, .L30+52
 725 009c FFF7FEFF 		bl	S5_detected_StartEx
 165:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 726              		.loc 1 165 0
 727 00a0 1E48     		ldr	r0, .L30+56
 728 00a2 FFF7FEFF 		bl	S6_detected_StartEx
 166:main.c        ****     Timer_LED_Start();
 729              		.loc 1 166 0
 730 00a6 FFF7FEFF 		bl	Timer_LED_Start
 167:main.c        **** 
 168:main.c        ****     
 169:main.c        **** // ------USB SETUP ----------------    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 17


 170:main.c        **** #ifdef USE_USB    
 171:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 731              		.loc 1 171 0
 732 00aa 0121     		movs	r1, #1
 733 00ac 0020     		movs	r0, #0
 734 00ae FFF7FEFF 		bl	USBUART_Start
 172:main.c        **** #endif        
 173:main.c        ****     RF_BT_SELECT_Write(0);
 735              		.loc 1 173 0
 736 00b2 0020     		movs	r0, #0
 737 00b4 FFF7FEFF 		bl	RF_BT_SELECT_Write
 738              	.L29:
 174:main.c        ****     
 175:main.c        ****     //usbPutString("Initialised UART");
 176:main.c        ****     for(;;)
 177:main.c        ****     {
 178:main.c        ****         if(timerInt == 1) {
 739              		.loc 1 178 0
 740 00b8 194B     		ldr	r3, .L30+60
 741 00ba 1B68     		ldr	r3, [r3]
 742 00bc 012B     		cmp	r3, #1
 743 00be 08D1     		bne	.L27
 179:main.c        ****             timerInt = 0;
 744              		.loc 1 179 0
 745 00c0 174B     		ldr	r3, .L30+60
 746 00c2 0022     		movs	r2, #0
 747 00c4 1A60     		str	r2, [r3]
 180:main.c        ****             // calculate RPM of M2
 181:main.c        ****             quadCountToRPM(quadDec2Count);
 748              		.loc 1 181 0
 749 00c6 174B     		ldr	r3, .L30+64
 750 00c8 1B68     		ldr	r3, [r3]
 751 00ca 9BB2     		uxth	r3, r3
 752 00cc 1846     		mov	r0, r3
 753 00ce FFF7FEFF 		bl	quadCountToRPM
 754              	.L27:
 182:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 183:main.c        ****             //usbPutString(buffer);
 184:main.c        ****             //usbPutString(" ");
 185:main.c        ****         }
 186:main.c        ****         //handle_usb();
 187:main.c        ****         if (flag_KB_string == 1)
 755              		.loc 1 187 0
 756 00d2 154B     		ldr	r3, .L30+68
 757 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 758 00d6 012B     		cmp	r3, #1
 759 00d8 EED1     		bne	.L29
 188:main.c        ****         {
 189:main.c        ****             //usbPutString("Total Distance: ");
 190:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 191:main.c        ****             //usbPutString(buffer);
 192:main.c        ****             flag_KB_string = 0;
 760              		.loc 1 192 0
 761 00da 134B     		ldr	r3, .L30+68
 762 00dc 0022     		movs	r2, #0
 763 00de 1A70     		strb	r2, [r3]
 193:main.c        ****         }           
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 18


 194:main.c        ****     }
 764              		.loc 1 194 0
 765 00e0 EAE7     		b	.L29
 766              	.L31:
 767 00e2 00BF     		.align	2
 768              	.L30:
 769 00e4 00000000 		.word	currentFoodListIndex
 770 00e8 00000000 		.word	food_list
 771 00ec 00000000 		.word	map
 772 00f0 00000000 		.word	instructionList
 773 00f4 00000000 		.word	numSteps
 774 00f8 00000000 		.word	currentInstruction
 775 00fc 14000000 		.word	instructionIndex
 776 0100 3E000000 		.word	currentIgnoreL
 777 0104 45000000 		.word	currentIgnoreR
 778 0108 00000000 		.word	speedTimer
 779 010c 00000000 		.word	TIMER_FINISH
 780 0110 00000000 		.word	S3_DETECTED
 781 0114 00000000 		.word	S4_DETECTED
 782 0118 00000000 		.word	S5_DETECTED
 783 011c 00000000 		.word	S6_DETECTED
 784 0120 00000000 		.word	timerInt
 785 0124 00000000 		.word	quadDec2Count
 786 0128 00000000 		.word	flag_KB_string
 787              		.cfi_endproc
 788              	.LFE70:
 789              		.size	main, .-main
 790              		.global	__aeabi_fmul
 791              		.global	__aeabi_f2iz
 792              		.section	.text.quadCountToRPM,"ax",%progbits
 793              		.align	2
 794              		.global	quadCountToRPM
 795              		.thumb
 796              		.thumb_func
 797              		.type	quadCountToRPM, %function
 798              	quadCountToRPM:
 799              	.LFB71:
 195:main.c        ****     return 0;
 196:main.c        **** }
 197:main.c        **** 
 198:main.c        **** // Calculations
 199:main.c        **** //* ========================================
 200:main.c        **** int16 quadCountToRPM(uint16 count) {
 800              		.loc 1 200 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 16
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 90B5     		push	{r4, r7, lr}
 805              		.cfi_def_cfa_offset 12
 806              		.cfi_offset 4, -12
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 85B0     		sub	sp, sp, #20
 810              		.cfi_def_cfa_offset 32
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 19


 814 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 201:main.c        ****     float cps = count/57.00;
 815              		.loc 1 201 0
 816 000a FB88     		ldrh	r3, [r7, #6]
 817 000c 1846     		mov	r0, r3
 818 000e FFF7FEFF 		bl	__aeabi_i2d
 819 0012 4FF00002 		mov	r2, #0
 820 0016 0D4B     		ldr	r3, .L34
 821 0018 FFF7FEFF 		bl	__aeabi_ddiv
 822 001c 0346     		mov	r3, r0
 823 001e 0C46     		mov	r4, r1
 824 0020 1846     		mov	r0, r3
 825 0022 2146     		mov	r1, r4
 826 0024 FFF7FEFF 		bl	__aeabi_d2f
 827 0028 0346     		mov	r3, r0
 828 002a FB60     		str	r3, [r7, #12]	@ float
 202:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 829              		.loc 1 202 0
 830 002c 0849     		ldr	r1, .L34+4
 831 002e F868     		ldr	r0, [r7, #12]	@ float
 832 0030 FFF7FEFF 		bl	__aeabi_fmul
 833 0034 0346     		mov	r3, r0
 834 0036 1846     		mov	r0, r3
 835 0038 FFF7FEFF 		bl	__aeabi_f2iz
 836 003c 0346     		mov	r3, r0
 837 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 203:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 204:main.c        ****     return rpm;
 838              		.loc 1 204 0
 839 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 205:main.c        ****     //usbPutString(buffer);
 206:main.c        ****     //usbPutString("rpm ");
 207:main.c        **** }
 840              		.loc 1 207 0
 841 0044 1846     		mov	r0, r3
 842 0046 1437     		adds	r7, r7, #20
 843              		.cfi_def_cfa_offset 12
 844 0048 BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 004a 90BD     		pop	{r4, r7, pc}
 848              	.L35:
 849              		.align	2
 850              	.L34:
 851 004c 00804C40 		.word	1078755328
 852 0050 00007041 		.word	1097859072
 853              		.cfi_endproc
 854              	.LFE71:
 855              		.size	quadCountToRPM, .-quadCountToRPM
 856              		.section	.text.ResetSensorFlags,"ax",%progbits
 857              		.align	2
 858              		.global	ResetSensorFlags
 859              		.thumb
 860              		.thumb_func
 861              		.type	ResetSensorFlags, %function
 862              	ResetSensorFlags:
 863              	.LFB72:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 20


 208:main.c        **** 
 209:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 210:main.c        **** void ResetSensorFlags() {
 864              		.loc 1 210 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              		.cfi_def_cfa_offset 4
 871              		.cfi_offset 7, -4
 872 0002 00AF     		add	r7, sp, #0
 873              		.cfi_def_cfa_register 7
 211:main.c        ****     s3 = 0;
 874              		.loc 1 211 0
 875 0004 074B     		ldr	r3, .L37
 876 0006 0022     		movs	r2, #0
 877 0008 1A70     		strb	r2, [r3]
 212:main.c        ****     s4 = 0;
 878              		.loc 1 212 0
 879 000a 074B     		ldr	r3, .L37+4
 880 000c 0022     		movs	r2, #0
 881 000e 1A70     		strb	r2, [r3]
 213:main.c        ****     s5 = 0;
 882              		.loc 1 213 0
 883 0010 064B     		ldr	r3, .L37+8
 884 0012 0022     		movs	r2, #0
 885 0014 1A70     		strb	r2, [r3]
 214:main.c        ****     s6 = 0;
 886              		.loc 1 214 0
 887 0016 064B     		ldr	r3, .L37+12
 888 0018 0022     		movs	r2, #0
 889 001a 1A70     		strb	r2, [r3]
 215:main.c        **** }
 890              		.loc 1 215 0
 891 001c 00BF     		nop
 892 001e BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 0020 80BC     		pop	{r7}
 896              		.cfi_restore 7
 897              		.cfi_def_cfa_offset 0
 898 0022 7047     		bx	lr
 899              	.L38:
 900              		.align	2
 901              	.L37:
 902 0024 00000000 		.word	s3
 903 0028 00000000 		.word	s4
 904 002c 00000000 		.word	s5
 905 0030 00000000 		.word	s6
 906              		.cfi_endproc
 907              	.LFE72:
 908              		.size	ResetSensorFlags, .-ResetSensorFlags
 909              		.global	xBlocksize
 910              		.data
 911 0046 0000     		.align	2
 912              		.type	xBlocksize, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 21


 913              		.size	xBlocksize, 4
 914              	xBlocksize:
 915 0048 0000F442 		.word	1123287040
 916              		.global	yBlocksize
 917              		.align	2
 918              		.type	yBlocksize, %object
 919              		.size	yBlocksize, 4
 920              	yBlocksize:
 921 004c 0000A042 		.word	1117782016
 922              		.global	currentRow
 923              		.type	currentRow, %object
 924              		.size	currentRow, 1
 925              	currentRow:
 926 0050 01       		.byte	1
 927              		.global	currentCol
 928              		.type	currentCol, %object
 929              		.size	currentCol, 1
 930              	currentCol:
 931 0051 01       		.byte	1
 932              		.global	stoppedAfterTurn
 933              		.bss
 934              		.type	stoppedAfterTurn, %object
 935              		.size	stoppedAfterTurn, 1
 936              	stoppedAfterTurn:
 937 0050 00       		.space	1
 938              		.global	ignoreSensor
 939              		.type	ignoreSensor, %object
 940              		.size	ignoreSensor, 1
 941              	ignoreSensor:
 942 0051 00       		.space	1
 943              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 944              		.align	2
 945              		.global	ForwardCourseCorrection
 946              		.thumb
 947              		.thumb_func
 948              		.type	ForwardCourseCorrection, %function
 949              	ForwardCourseCorrection:
 950              	.LFB73:
 216:main.c        **** 
 217:main.c        **** float xBlocksize = 122; // 122 mm
 218:main.c        **** float yBlocksize = 80; // 80 mm
 219:main.c        **** uint8 currentRow = 1;
 220:main.c        **** uint8 currentCol = 1;
 221:main.c        **** 
 222:main.c        **** uint8 stoppedAfterTurn = 0;
 223:main.c        **** uint8 ignoreSensor = 0;
 224:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 225:main.c        **** 
 226:main.c        **** enum RobotMovement ForwardCourseCorrection();
 227:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 951              		.loc 1 227 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956 0000 80B4     		push	{r7}
 957              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 22


 958              		.cfi_offset 7, -4
 959 0002 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 228:main.c        ****     // if S5 and S6 are on black, move forward
 229:main.c        ****     if (!s5 && !s6) {
 961              		.loc 1 229 0
 962 0004 1C4B     		ldr	r3, .L47
 963 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 0008 002B     		cmp	r3, #0
 965 000a 0FD1     		bne	.L40
 966              		.loc 1 229 0 is_stmt 0 discriminator 1
 967 000c 1B4B     		ldr	r3, .L47+4
 968 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 969 0010 002B     		cmp	r3, #0
 970 0012 0BD1     		bne	.L40
 230:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 971              		.loc 1 230 0 is_stmt 1
 972 0014 1A4B     		ldr	r3, .L47+8
 973 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974 0018 032B     		cmp	r3, #3
 975 001a 01D0     		beq	.L41
 231:main.c        ****             return AdjustToTheLeft;
 976              		.loc 1 231 0
 977 001c 0323     		movs	r3, #3
 978 001e 26E0     		b	.L42
 979              	.L41:
 232:main.c        ****         }
 233:main.c        ****         if (previousDirection != AdjustToTheRight) {
 980              		.loc 1 233 0
 981 0020 174B     		ldr	r3, .L47+8
 982 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 983 0024 042B     		cmp	r3, #4
 984 0026 01D0     		beq	.L40
 234:main.c        ****             return AdjustToTheRight;    
 985              		.loc 1 234 0
 986 0028 0423     		movs	r3, #4
 987 002a 20E0     		b	.L42
 988              	.L40:
 235:main.c        ****         }
 236:main.c        ****     }
 237:main.c        ****     
 238:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 239:main.c        ****     if (s5 && s6) {
 989              		.loc 1 239 0
 990 002c 124B     		ldr	r3, .L47
 991 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 0030 002B     		cmp	r3, #0
 993 0032 0FD0     		beq	.L43
 994              		.loc 1 239 0 is_stmt 0 discriminator 1
 995 0034 114B     		ldr	r3, .L47+4
 996 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 997 0038 002B     		cmp	r3, #0
 998 003a 0BD0     		beq	.L43
 240:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 999              		.loc 1 240 0 is_stmt 1
 1000 003c 104B     		ldr	r3, .L47+8
 1001 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 23


 1002 0040 032B     		cmp	r3, #3
 1003 0042 01D0     		beq	.L44
 241:main.c        ****             return AdjustToTheLeft;
 1004              		.loc 1 241 0
 1005 0044 0323     		movs	r3, #3
 1006 0046 12E0     		b	.L42
 1007              	.L44:
 242:main.c        ****         }
 243:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1008              		.loc 1 243 0
 1009 0048 0D4B     		ldr	r3, .L47+8
 1010 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1011 004c 042B     		cmp	r3, #4
 1012 004e 01D0     		beq	.L43
 244:main.c        ****             return AdjustToTheRight;    
 1013              		.loc 1 244 0
 1014 0050 0423     		movs	r3, #4
 1015 0052 0CE0     		b	.L42
 1016              	.L43:
 245:main.c        ****         }
 246:main.c        ****     }
 247:main.c        **** 
 248:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 249:main.c        ****     if (s5) {
 1017              		.loc 1 249 0
 1018 0054 084B     		ldr	r3, .L47
 1019 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 0058 002B     		cmp	r3, #0
 1021 005a 01D0     		beq	.L45
 250:main.c        ****         return AdjustToTheRight;    
 1022              		.loc 1 250 0
 1023 005c 0423     		movs	r3, #4
 1024 005e 06E0     		b	.L42
 1025              	.L45:
 251:main.c        ****     }
 252:main.c        ****     if (s6) {
 1026              		.loc 1 252 0
 1027 0060 064B     		ldr	r3, .L47+4
 1028 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1029 0064 002B     		cmp	r3, #0
 1030 0066 01D0     		beq	.L46
 253:main.c        ****         return AdjustToTheLeft;    
 1031              		.loc 1 253 0
 1032 0068 0323     		movs	r3, #3
 1033 006a 00E0     		b	.L42
 1034              	.L46:
 254:main.c        ****     }
 255:main.c        ****    
 256:main.c        ****     // We should never actually get to this point
 257:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 258:main.c        ****     return Stop;
 1035              		.loc 1 258 0
 1036 006c 0523     		movs	r3, #5
 1037              	.L42:
 259:main.c        **** }
 1038              		.loc 1 259 0
 1039 006e 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 24


 1040 0070 BD46     		mov	sp, r7
 1041              		.cfi_def_cfa_register 13
 1042              		@ sp needed
 1043 0072 80BC     		pop	{r7}
 1044              		.cfi_restore 7
 1045              		.cfi_def_cfa_offset 0
 1046 0074 7047     		bx	lr
 1047              	.L48:
 1048 0076 00BF     		.align	2
 1049              	.L47:
 1050 0078 00000000 		.word	s5
 1051 007c 00000000 		.word	s6
 1052 0080 00000000 		.word	previousDirection
 1053              		.cfi_endproc
 1054              	.LFE73:
 1055              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1056              		.global	lastDirectionAfter180
 1057              		.data
 1058              		.type	lastDirectionAfter180, %object
 1059              		.size	lastDirectionAfter180, 1
 1060              	lastDirectionAfter180:
 1061 0052 06       		.byte	6
 1062              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1063              		.align	2
 1064              		.global	SpinCourseCorrection
 1065              		.thumb
 1066              		.thumb_func
 1067              		.type	SpinCourseCorrection, %function
 1068              	SpinCourseCorrection:
 1069              	.LFB74:
 260:main.c        **** 
 261:main.c        **** enum RobotMovement SpinCourseCorrection();
 262:main.c        **** 
 263:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 264:main.c        **** 
 265:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1070              		.loc 1 265 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075 0000 80B4     		push	{r7}
 1076              		.cfi_def_cfa_offset 4
 1077              		.cfi_offset 7, -4
 1078 0002 00AF     		add	r7, sp, #0
 1079              		.cfi_def_cfa_register 7
 266:main.c        ****     // Set first iteration flag.
 267:main.c        ****     if (!spinCourseCorrectionStarted) {
 1080              		.loc 1 267 0
 1081 0004 184B     		ldr	r3, .L56
 1082 0006 1B78     		ldrb	r3, [r3]
 1083 0008 DBB2     		uxtb	r3, r3
 1084 000a 002B     		cmp	r3, #0
 1085 000c 06D1     		bne	.L50
 268:main.c        ****         spinCourseCorrectionStarted = 1;    
 1086              		.loc 1 268 0
 1087 000e 164B     		ldr	r3, .L56
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 25


 1088 0010 0122     		movs	r2, #1
 1089 0012 1A70     		strb	r2, [r3]
 269:main.c        ****         lastDirectionAfter180 = currentDirection;
 1090              		.loc 1 269 0
 1091 0014 154B     		ldr	r3, .L56+4
 1092 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1093 0018 154B     		ldr	r3, .L56+8
 1094 001a 1A70     		strb	r2, [r3]
 1095              	.L50:
 270:main.c        ****     }
 271:main.c        ****     
 272:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 273:main.c        ****     if (s5 && s6) {
 1096              		.loc 1 273 0
 1097 001c 154B     		ldr	r3, .L56+12
 1098 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1099 0020 002B     		cmp	r3, #0
 1100 0022 0FD0     		beq	.L51
 1101              		.loc 1 273 0 is_stmt 0 discriminator 1
 1102 0024 144B     		ldr	r3, .L56+16
 1103 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 0028 002B     		cmp	r3, #0
 1105 002a 0BD0     		beq	.L51
 274:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1106              		.loc 1 274 0 is_stmt 1
 1107 002c 104B     		ldr	r3, .L56+8
 1108 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1109 0030 022B     		cmp	r3, #2
 1110 0032 01D0     		beq	.L52
 275:main.c        ****             return TurnLeft;
 1111              		.loc 1 275 0
 1112 0034 0223     		movs	r3, #2
 1113 0036 12E0     		b	.L53
 1114              	.L52:
 276:main.c        ****         }
 277:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1115              		.loc 1 277 0
 1116 0038 0D4B     		ldr	r3, .L56+8
 1117 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1118 003c 012B     		cmp	r3, #1
 1119 003e 01D0     		beq	.L51
 278:main.c        ****             return TurnRight;    
 1120              		.loc 1 278 0
 1121 0040 0123     		movs	r3, #1
 1122 0042 0CE0     		b	.L53
 1123              	.L51:
 279:main.c        ****         }
 280:main.c        ****     }
 281:main.c        **** 
 282:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 283:main.c        ****     if (s5) {
 1124              		.loc 1 283 0
 1125 0044 0B4B     		ldr	r3, .L56+12
 1126 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 0048 002B     		cmp	r3, #0
 1128 004a 01D0     		beq	.L54
 284:main.c        ****         return TurnRight;    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 26


 1129              		.loc 1 284 0
 1130 004c 0123     		movs	r3, #1
 1131 004e 06E0     		b	.L53
 1132              	.L54:
 285:main.c        ****     }
 286:main.c        ****     if (s6) {
 1133              		.loc 1 286 0
 1134 0050 094B     		ldr	r3, .L56+16
 1135 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1136 0054 002B     		cmp	r3, #0
 1137 0056 01D0     		beq	.L55
 287:main.c        ****         return TurnLeft;    
 1138              		.loc 1 287 0
 1139 0058 0223     		movs	r3, #2
 1140 005a 00E0     		b	.L53
 1141              	.L55:
 288:main.c        ****     }
 289:main.c        ****    
 290:main.c        ****     // We should never actually get to this point
 291:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 292:main.c        ****     return Stop;
 1142              		.loc 1 292 0
 1143 005c 0523     		movs	r3, #5
 1144              	.L53:
 293:main.c        **** }
 1145              		.loc 1 293 0
 1146 005e 1846     		mov	r0, r3
 1147 0060 BD46     		mov	sp, r7
 1148              		.cfi_def_cfa_register 13
 1149              		@ sp needed
 1150 0062 80BC     		pop	{r7}
 1151              		.cfi_restore 7
 1152              		.cfi_def_cfa_offset 0
 1153 0064 7047     		bx	lr
 1154              	.L57:
 1155 0066 00BF     		.align	2
 1156              	.L56:
 1157 0068 3D000000 		.word	spinCourseCorrectionStarted
 1158 006c 00000000 		.word	currentDirection
 1159 0070 00000000 		.word	lastDirectionAfter180
 1160 0074 00000000 		.word	s5
 1161 0078 00000000 		.word	s6
 1162              		.cfi_endproc
 1163              	.LFE74:
 1164              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1165              		.global	__aeabi_fcmpge
 1166              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1167              		.align	2
 1168              		.global	GetMovementAccordingToInstruction
 1169              		.thumb
 1170              		.thumb_func
 1171              		.type	GetMovementAccordingToInstruction, %function
 1172              	GetMovementAccordingToInstruction:
 1173              	.LFB75:
 294:main.c        **** 
 295:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1174              		.loc 1 295 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 27


 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 32
 1177              		@ frame_needed = 1, uses_anonymous_args = 0
 1178 0000 B0B5     		push	{r4, r5, r7, lr}
 1179              		.cfi_def_cfa_offset 16
 1180              		.cfi_offset 4, -16
 1181              		.cfi_offset 5, -12
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 88B0     		sub	sp, sp, #32
 1185              		.cfi_def_cfa_offset 48
 1186 0004 00AF     		add	r7, sp, #0
 1187              		.cfi_def_cfa_register 7
 296:main.c        ****     float blocksize;
 297:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 1188              		.loc 1 297 0
 1189 0006 9F4B     		ldr	r3, .L115
 1190 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 000a 002B     		cmp	r3, #0
 1192 000c 03D0     		beq	.L59
 1193              		.loc 1 297 0 is_stmt 0 discriminator 1
 1194 000e 9D4B     		ldr	r3, .L115
 1195 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 0012 012B     		cmp	r3, #1
 1197 0014 03D1     		bne	.L60
 1198              	.L59:
 298:main.c        ****         blocksize = yBlocksize;
 1199              		.loc 1 298 0 is_stmt 1
 1200 0016 9C4B     		ldr	r3, .L115+4
 1201 0018 1B68     		ldr	r3, [r3]	@ float
 1202 001a FB61     		str	r3, [r7, #28]	@ float
 1203 001c 02E0     		b	.L61
 1204              	.L60:
 299:main.c        ****     } else {
 300:main.c        ****         blocksize = xBlocksize;
 1205              		.loc 1 300 0
 1206 001e 9B4B     		ldr	r3, .L115+8
 1207 0020 1B68     		ldr	r3, [r3]	@ float
 1208 0022 FB61     		str	r3, [r7, #28]	@ float
 1209              	.L61:
 301:main.c        ****     }
 302:main.c        ****     
 303:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 304:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 305:main.c        ****         // OR an EVENT happens in the current instruction
 306:main.c        ****         // e.g. CurrentInstruction: GoForward 
 307:main.c        ****         //      S3 on BLACK
 308:main.c        ****         //      Check Ignore Count
 309:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 310:main.c        ****     
 311:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1210              		.loc 1 311 0
 1211 0024 9A4B     		ldr	r3, .L115+12
 1212 0026 1B78     		ldrb	r3, [r3]
 1213 0028 FB76     		strb	r3, [r7, #27]
 312:main.c        ****     
 313:main.c        ****     switch (currentInstructionDirection) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 28


 1214              		.loc 1 313 0
 1215 002a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1216 002c 052B     		cmp	r3, #5
 1217 002e 00F27782 		bhi	.L62
 1218 0032 01A2     		adr	r2, .L64
 1219 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1220              		.p2align 2
 1221              	.L64:
 1222 0038 51000000 		.word	.L63+1
 1223 003c 13010000 		.word	.L65+1
 1224 0040 2D020000 		.word	.L66+1
 1225 0044 9B040000 		.word	.L67+1
 1226 0048 8B030000 		.word	.L68+1
 1227 004c DB030000 		.word	.L69+1
 1228              		.p2align 1
 1229              	.L63:
 314:main.c        ****         case GoForward:
 315:main.c        ****             if(currentDirection == Stop) {
 1230              		.loc 1 315 0
 1231 0050 904B     		ldr	r3, .L115+16
 1232 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1233 0054 052B     		cmp	r3, #5
 1234 0056 08D1     		bne	.L70
 316:main.c        ****                 if(stopBuffer <= 25) {
 1235              		.loc 1 316 0
 1236 0058 8F4B     		ldr	r3, .L115+20
 1237 005a 1B68     		ldr	r3, [r3]
 1238 005c 192B     		cmp	r3, #25
 1239 005e 01D8     		bhi	.L71
 317:main.c        ****                     return Stop;
 1240              		.loc 1 317 0
 1241 0060 0523     		movs	r3, #5
 1242 0062 5EE2     		b	.L72
 1243              	.L71:
 318:main.c        ****                 } else {
 319:main.c        ****                     stopBuffer = 100;
 1244              		.loc 1 319 0
 1245 0064 8C4B     		ldr	r3, .L115+20
 1246 0066 6422     		movs	r2, #100
 1247 0068 1A60     		str	r2, [r3]
 1248              	.L70:
 320:main.c        ****                 }
 321:main.c        ****             }
 322:main.c        ****             if (s3) {
 1249              		.loc 1 322 0
 1250 006a 8C4B     		ldr	r3, .L115+24
 1251 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 006e 002B     		cmp	r3, #0
 1253 0070 02D0     		beq	.L73
 323:main.c        ****                 leftStatusFlag = 1;
 1254              		.loc 1 323 0
 1255 0072 8B4B     		ldr	r3, .L115+28
 1256 0074 0122     		movs	r2, #1
 1257 0076 1A70     		strb	r2, [r3]
 1258              	.L73:
 324:main.c        ****             }
 325:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 29


 326:main.c        ****             if (s4) {
 1259              		.loc 1 326 0
 1260 0078 8A4B     		ldr	r3, .L115+32
 1261 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 007c 002B     		cmp	r3, #0
 1263 007e 02D0     		beq	.L74
 327:main.c        ****                 rightStatusFlag = 1;
 1264              		.loc 1 327 0
 1265 0080 894B     		ldr	r3, .L115+36
 1266 0082 0122     		movs	r2, #1
 1267 0084 1A70     		strb	r2, [r3]
 1268              	.L74:
 328:main.c        ****             }
 329:main.c        ****             
 330:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 331:main.c        ****             if (leftStatusFlag) {
 1269              		.loc 1 331 0
 1270 0086 864B     		ldr	r3, .L115+28
 1271 0088 1B78     		ldrb	r3, [r3]
 1272 008a DBB2     		uxtb	r3, r3
 1273 008c 002B     		cmp	r3, #0
 1274 008e 1BD0     		beq	.L75
 332:main.c        ****                 if (!s3) {
 1275              		.loc 1 332 0
 1276 0090 824B     		ldr	r3, .L115+24
 1277 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1278 0094 002B     		cmp	r3, #0
 1279 0096 17D1     		bne	.L75
 333:main.c        ****                     leftStatusFlag = 0;    
 1280              		.loc 1 333 0
 1281 0098 814B     		ldr	r3, .L115+28
 1282 009a 0022     		movs	r2, #0
 1283 009c 1A70     		strb	r2, [r3]
 334:main.c        ****                     if (currentIgnoreL == 0) {
 1284              		.loc 1 334 0
 1285 009e 834B     		ldr	r3, .L115+40
 1286 00a0 1B78     		ldrb	r3, [r3]
 1287 00a2 DBB2     		uxtb	r3, r3
 1288 00a4 002B     		cmp	r3, #0
 1289 00a6 03D1     		bne	.L76
 335:main.c        ****                         MoveToNextInstruction();
 1290              		.loc 1 335 0
 1291 00a8 FFF7FEFF 		bl	MoveToNextInstruction
 336:main.c        ****                         return Stop;
 1292              		.loc 1 336 0
 1293 00ac 0523     		movs	r3, #5
 1294 00ae 38E2     		b	.L72
 1295              	.L76:
 337:main.c        ****                     }
 338:main.c        ****                     if (currentIgnoreL > 0) {
 1296              		.loc 1 338 0
 1297 00b0 7E4B     		ldr	r3, .L115+40
 1298 00b2 1B78     		ldrb	r3, [r3]
 1299 00b4 DBB2     		uxtb	r3, r3
 1300 00b6 002B     		cmp	r3, #0
 1301 00b8 06D0     		beq	.L75
 339:main.c        ****                         currentIgnoreL--;    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 30


 1302              		.loc 1 339 0
 1303 00ba 7C4B     		ldr	r3, .L115+40
 1304 00bc 1B78     		ldrb	r3, [r3]
 1305 00be DBB2     		uxtb	r3, r3
 1306 00c0 013B     		subs	r3, r3, #1
 1307 00c2 DAB2     		uxtb	r2, r3
 1308 00c4 794B     		ldr	r3, .L115+40
 1309 00c6 1A70     		strb	r2, [r3]
 1310              	.L75:
 340:main.c        ****                     }
 341:main.c        ****                 }
 342:main.c        ****             }
 343:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 344:main.c        ****             if (rightStatusFlag) {
 1311              		.loc 1 344 0
 1312 00c8 774B     		ldr	r3, .L115+36
 1313 00ca 1B78     		ldrb	r3, [r3]
 1314 00cc DBB2     		uxtb	r3, r3
 1315 00ce 002B     		cmp	r3, #0
 1316 00d0 1BD0     		beq	.L77
 345:main.c        ****                 if (!s4) {
 1317              		.loc 1 345 0
 1318 00d2 744B     		ldr	r3, .L115+32
 1319 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1320 00d6 002B     		cmp	r3, #0
 1321 00d8 17D1     		bne	.L77
 346:main.c        ****                     rightStatusFlag = 0;
 1322              		.loc 1 346 0
 1323 00da 734B     		ldr	r3, .L115+36
 1324 00dc 0022     		movs	r2, #0
 1325 00de 1A70     		strb	r2, [r3]
 347:main.c        ****                     if (currentIgnoreR == 0) {
 1326              		.loc 1 347 0
 1327 00e0 734B     		ldr	r3, .L115+44
 1328 00e2 1B78     		ldrb	r3, [r3]
 1329 00e4 DBB2     		uxtb	r3, r3
 1330 00e6 002B     		cmp	r3, #0
 1331 00e8 03D1     		bne	.L78
 348:main.c        ****                         MoveToNextInstruction();
 1332              		.loc 1 348 0
 1333 00ea FFF7FEFF 		bl	MoveToNextInstruction
 349:main.c        ****                         return Stop;
 1334              		.loc 1 349 0
 1335 00ee 0523     		movs	r3, #5
 1336 00f0 17E2     		b	.L72
 1337              	.L78:
 350:main.c        ****                     }
 351:main.c        ****                     if (currentIgnoreR > 0) {
 1338              		.loc 1 351 0
 1339 00f2 6F4B     		ldr	r3, .L115+44
 1340 00f4 1B78     		ldrb	r3, [r3]
 1341 00f6 DBB2     		uxtb	r3, r3
 1342 00f8 002B     		cmp	r3, #0
 1343 00fa 06D0     		beq	.L77
 352:main.c        ****                         currentIgnoreR--;    
 1344              		.loc 1 352 0
 1345 00fc 6C4B     		ldr	r3, .L115+44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 31


 1346 00fe 1B78     		ldrb	r3, [r3]
 1347 0100 DBB2     		uxtb	r3, r3
 1348 0102 013B     		subs	r3, r3, #1
 1349 0104 DAB2     		uxtb	r2, r3
 1350 0106 6A4B     		ldr	r3, .L115+44
 1351 0108 1A70     		strb	r2, [r3]
 1352              	.L77:
 353:main.c        ****                     }
 354:main.c        ****                 }
 355:main.c        ****             }
 356:main.c        ****           
 357:main.c        ****             return ForwardCourseCorrection();
 1353              		.loc 1 357 0
 1354 010a FFF7FEFF 		bl	ForwardCourseCorrection
 1355 010e 0346     		mov	r3, r0
 1356 0110 07E2     		b	.L72
 1357              	.L65:
 358:main.c        ****             break;
 359:main.c        ****         case waitForLeftTurn:
 360:main.c        ****             // continue moving forward until s3 goes on black
 361:main.c        ****             // if we are turning left already
 362:main.c        ****                 // wait until s5 || s6 are on black
 363:main.c        ****                 // return stop
 364:main.c        ****             if (!turnStartedFlag) {
 1358              		.loc 1 364 0
 1359 0112 684B     		ldr	r3, .L115+48
 1360 0114 1B78     		ldrb	r3, [r3]
 1361 0116 DBB2     		uxtb	r3, r3
 1362 0118 002B     		cmp	r3, #0
 1363 011a 05D1     		bne	.L79
 365:main.c        ****                 if (s3) {
 1364              		.loc 1 365 0
 1365 011c 5F4B     		ldr	r3, .L115+24
 1366 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0120 002B     		cmp	r3, #0
 1368 0122 01D0     		beq	.L79
 366:main.c        ****                     return Backward;    
 1369              		.loc 1 366 0
 1370 0124 0923     		movs	r3, #9
 1371 0126 FCE1     		b	.L72
 1372              	.L79:
 367:main.c        ****                 }
 368:main.c        ****             }
 369:main.c        ****             
 370:main.c        ****             if (turnFinishedFlag) {
 1373              		.loc 1 370 0
 1374 0128 634B     		ldr	r3, .L115+52
 1375 012a 1B78     		ldrb	r3, [r3]
 1376 012c DBB2     		uxtb	r3, r3
 1377 012e 002B     		cmp	r3, #0
 1378 0130 31D0     		beq	.L80
 371:main.c        ****                 if (!s3 && !s5 && !s6) {
 1379              		.loc 1 371 0
 1380 0132 5A4B     		ldr	r3, .L115+24
 1381 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 0136 002B     		cmp	r3, #0
 1383 0138 0BD1     		bne	.L81
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 32


 1384              		.loc 1 371 0 is_stmt 0 discriminator 1
 1385 013a 604B     		ldr	r3, .L115+56
 1386 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 013e 002B     		cmp	r3, #0
 1388 0140 07D1     		bne	.L81
 1389              		.loc 1 371 0 discriminator 2
 1390 0142 5F4B     		ldr	r3, .L115+60
 1391 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1392 0146 002B     		cmp	r3, #0
 1393 0148 03D1     		bne	.L81
 372:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 373:main.c        ****                     return ForwardCourseCorrection();
 1394              		.loc 1 373 0 is_stmt 1
 1395 014a FFF7FEFF 		bl	ForwardCourseCorrection
 1396 014e 0346     		mov	r3, r0
 1397 0150 E7E1     		b	.L72
 1398              	.L81:
 374:main.c        ****                 }
 375:main.c        ****                 if (s5 || s6) {
 1399              		.loc 1 375 0
 1400 0152 5A4B     		ldr	r3, .L115+56
 1401 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 0156 002B     		cmp	r3, #0
 1403 0158 03D1     		bne	.L82
 1404              		.loc 1 375 0 is_stmt 0 discriminator 1
 1405 015a 594B     		ldr	r3, .L115+60
 1406 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 015e 002B     		cmp	r3, #0
 1408 0160 03D0     		beq	.L83
 1409              	.L82:
 376:main.c        ****                     return SpinCourseCorrection();
 1410              		.loc 1 376 0 is_stmt 1
 1411 0162 FFF7FEFF 		bl	SpinCourseCorrection
 1412 0166 0346     		mov	r3, r0
 1413 0168 DBE1     		b	.L72
 1414              	.L83:
 377:main.c        ****                 }
 378:main.c        ****                 if (forwardBuffer <= 10) {
 1415              		.loc 1 378 0
 1416 016a 564B     		ldr	r3, .L115+64
 1417 016c 1B88     		ldrh	r3, [r3]
 1418 016e 0A2B     		cmp	r3, #10
 1419 0170 03D8     		bhi	.L84
 379:main.c        ****                     return ForwardCourseCorrection();    
 1420              		.loc 1 379 0
 1421 0172 FFF7FEFF 		bl	ForwardCourseCorrection
 1422 0176 0346     		mov	r3, r0
 1423 0178 D3E1     		b	.L72
 1424              	.L84:
 380:main.c        **** 
 381:main.c        ****                 } else {
 382:main.c        ****                     forwardBuffer = 100;
 1425              		.loc 1 382 0
 1426 017a 524B     		ldr	r3, .L115+64
 1427 017c 6422     		movs	r2, #100
 1428 017e 1A80     		strh	r2, [r3]	@ movhi
 383:main.c        ****                     if (s3) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 33


 1429              		.loc 1 383 0
 1430 0180 464B     		ldr	r3, .L115+24
 1431 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 0184 002B     		cmp	r3, #0
 1433 0186 06D0     		beq	.L80
 384:main.c        ****                         turnFinishedFlag = 0;
 1434              		.loc 1 384 0
 1435 0188 4B4B     		ldr	r3, .L115+52
 1436 018a 0022     		movs	r2, #0
 1437 018c 1A70     		strb	r2, [r3]
 385:main.c        ****                         MoveToNextInstruction();   
 1438              		.loc 1 385 0
 1439 018e FFF7FEFF 		bl	MoveToNextInstruction
 386:main.c        ****                         return Stop;  
 1440              		.loc 1 386 0
 1441 0192 0523     		movs	r3, #5
 1442 0194 C5E1     		b	.L72
 1443              	.L80:
 387:main.c        ****                     }
 388:main.c        ****                 }
 389:main.c        ****             }
 390:main.c        ****             
 391:main.c        ****             
 392:main.c        ****             if (currentDirection == Stop) {
 1444              		.loc 1 392 0
 1445 0196 3F4B     		ldr	r3, .L115+16
 1446 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 019a 052B     		cmp	r3, #5
 1448 019c 09D1     		bne	.L85
 393:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 394:main.c        ****                 if (stopBuffer <= 25) {
 1449              		.loc 1 394 0
 1450 019e 3E4B     		ldr	r3, .L115+20
 1451 01a0 1B68     		ldr	r3, [r3]
 1452 01a2 192B     		cmp	r3, #25
 1453 01a4 01D8     		bhi	.L86
 395:main.c        ****                     return Stop;   
 1454              		.loc 1 395 0
 1455 01a6 0523     		movs	r3, #5
 1456 01a8 BBE1     		b	.L72
 1457              	.L86:
 396:main.c        ****                 }
 397:main.c        ****                 return ForwardCourseCorrection();
 1458              		.loc 1 397 0
 1459 01aa FFF7FEFF 		bl	ForwardCourseCorrection
 1460 01ae 0346     		mov	r3, r0
 1461 01b0 B7E1     		b	.L72
 1462              	.L85:
 398:main.c        ****             }
 399:main.c        ****          
 400:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 401:main.c        ****             if (currentDirection == TurnLeft) {
 1463              		.loc 1 401 0
 1464 01b2 384B     		ldr	r3, .L115+16
 1465 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1466 01b6 022B     		cmp	r3, #2
 1467 01b8 2BD1     		bne	.L87
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 34


 402:main.c        ****                 // If turn started and we are still on black, continue turning
 403:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 404:main.c        ****                 if (turnStartedFlag) {
 1468              		.loc 1 404 0
 1469 01ba 3E4B     		ldr	r3, .L115+48
 1470 01bc 1B78     		ldrb	r3, [r3]
 1471 01be DBB2     		uxtb	r3, r3
 1472 01c0 002B     		cmp	r3, #0
 1473 01c2 0ED0     		beq	.L88
 405:main.c        ****                     if (s3 && (s5 && s6)) {
 1474              		.loc 1 405 0
 1475 01c4 354B     		ldr	r3, .L115+24
 1476 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1477 01c8 002B     		cmp	r3, #0
 1478 01ca 0AD0     		beq	.L88
 1479              		.loc 1 405 0 is_stmt 0 discriminator 1
 1480 01cc 3B4B     		ldr	r3, .L115+56
 1481 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 01d0 002B     		cmp	r3, #0
 1483 01d2 06D0     		beq	.L88
 1484              		.loc 1 405 0 discriminator 2
 1485 01d4 3A4B     		ldr	r3, .L115+60
 1486 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1487 01d8 002B     		cmp	r3, #0
 1488 01da 02D0     		beq	.L88
 406:main.c        ****                         turnStartedFlag = 0;
 1489              		.loc 1 406 0 is_stmt 1
 1490 01dc 354B     		ldr	r3, .L115+48
 1491 01de 0022     		movs	r2, #0
 1492 01e0 1A70     		strb	r2, [r3]
 1493              	.L88:
 407:main.c        ****                     }
 408:main.c        ****                 }
 409:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1494              		.loc 1 409 0
 1495 01e2 344B     		ldr	r3, .L115+48
 1496 01e4 1B78     		ldrb	r3, [r3]
 1497 01e6 DBB2     		uxtb	r3, r3
 1498 01e8 002B     		cmp	r3, #0
 1499 01ea 10D1     		bne	.L89
 1500              		.loc 1 409 0 is_stmt 0 discriminator 1
 1501 01ec 2B4B     		ldr	r3, .L115+24
 1502 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 01f0 002B     		cmp	r3, #0
 1504 01f2 0CD1     		bne	.L89
 1505              		.loc 1 409 0 discriminator 2
 1506 01f4 314B     		ldr	r3, .L115+56
 1507 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 01f8 002B     		cmp	r3, #0
 1509 01fa 08D1     		bne	.L89
 1510              		.loc 1 409 0 discriminator 3
 1511 01fc 304B     		ldr	r3, .L115+60
 1512 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0200 002B     		cmp	r3, #0
 1514 0202 04D1     		bne	.L89
 410:main.c        ****                     turnFinishedFlag = 1;
 1515              		.loc 1 410 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 35


 1516 0204 2C4B     		ldr	r3, .L115+52
 1517 0206 0122     		movs	r2, #1
 1518 0208 1A70     		strb	r2, [r3]
 411:main.c        ****                     return ForwardAfterTurn;
 1519              		.loc 1 411 0
 1520 020a 0823     		movs	r3, #8
 1521 020c 89E1     		b	.L72
 1522              	.L89:
 412:main.c        ****                 }
 413:main.c        ****                 else
 414:main.c        ****                 {
 415:main.c        ****                     return TurnLeft;
 1523              		.loc 1 415 0
 1524 020e 0223     		movs	r3, #2
 1525 0210 87E1     		b	.L72
 1526              	.L87:
 416:main.c        ****                 }
 417:main.c        ****             }
 418:main.c        ****             
 419:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 420:main.c        ****             if (!s3) {
 1527              		.loc 1 420 0
 1528 0212 224B     		ldr	r3, .L115+24
 1529 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 0216 002B     		cmp	r3, #0
 1531 0218 04D1     		bne	.L90
 421:main.c        ****                 turnStartedFlag = 1;
 1532              		.loc 1 421 0
 1533 021a 264B     		ldr	r3, .L115+48
 1534 021c 0122     		movs	r2, #1
 1535 021e 1A70     		strb	r2, [r3]
 422:main.c        ****                 return TurnLeft;
 1536              		.loc 1 422 0
 1537 0220 0223     		movs	r3, #2
 1538 0222 7EE1     		b	.L72
 1539              	.L90:
 423:main.c        ****             }
 424:main.c        ****             
 425:main.c        ****             // Otherwise, keep going forward
 426:main.c        ****             return ForwardCourseCorrection(); 
 1540              		.loc 1 426 0
 1541 0224 FFF7FEFF 		bl	ForwardCourseCorrection
 1542 0228 0346     		mov	r3, r0
 1543 022a 7AE1     		b	.L72
 1544              	.L66:
 427:main.c        ****             break;
 428:main.c        ****         case waitForRightTurn:
 429:main.c        ****             // continue moving forward until s4 goes on black
 430:main.c        ****             // if we are turning left already
 431:main.c        ****                 // wait until s5 || s6 are on black
 432:main.c        ****                 // return stop
 433:main.c        ****             if (!turnStartedFlag) {
 1545              		.loc 1 433 0
 1546 022c 214B     		ldr	r3, .L115+48
 1547 022e 1B78     		ldrb	r3, [r3]
 1548 0230 DBB2     		uxtb	r3, r3
 1549 0232 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 36


 1550 0234 05D1     		bne	.L91
 434:main.c        ****                 if (s4) {
 1551              		.loc 1 434 0
 1552 0236 1B4B     		ldr	r3, .L115+32
 1553 0238 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 023a 002B     		cmp	r3, #0
 1555 023c 01D0     		beq	.L91
 435:main.c        ****                     return Backward;    
 1556              		.loc 1 435 0
 1557 023e 0923     		movs	r3, #9
 1558 0240 6FE1     		b	.L72
 1559              	.L91:
 436:main.c        ****                 }
 437:main.c        ****             }
 438:main.c        **** 
 439:main.c        ****             if (turnFinishedFlag) {
 1560              		.loc 1 439 0
 1561 0242 1D4B     		ldr	r3, .L115+52
 1562 0244 1B78     		ldrb	r3, [r3]
 1563 0246 DBB2     		uxtb	r3, r3
 1564 0248 002B     		cmp	r3, #0
 1565 024a 53D0     		beq	.L92
 440:main.c        ****                 if (!s4 && !s5 && !s6) {
 1566              		.loc 1 440 0
 1567 024c 154B     		ldr	r3, .L115+32
 1568 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 0250 002B     		cmp	r3, #0
 1570 0252 0BD1     		bne	.L93
 1571              		.loc 1 440 0 is_stmt 0 discriminator 1
 1572 0254 194B     		ldr	r3, .L115+56
 1573 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1574 0258 002B     		cmp	r3, #0
 1575 025a 07D1     		bne	.L93
 1576              		.loc 1 440 0 discriminator 2
 1577 025c 184B     		ldr	r3, .L115+60
 1578 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 0260 002B     		cmp	r3, #0
 1580 0262 03D1     		bne	.L93
 441:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 442:main.c        ****                     return ForwardCourseCorrection();
 1581              		.loc 1 442 0 is_stmt 1
 1582 0264 FFF7FEFF 		bl	ForwardCourseCorrection
 1583 0268 0346     		mov	r3, r0
 1584 026a 5AE1     		b	.L72
 1585              	.L93:
 443:main.c        ****                 }
 444:main.c        ****                 if (s5 || s6) {
 1586              		.loc 1 444 0
 1587 026c 134B     		ldr	r3, .L115+56
 1588 026e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1589 0270 002B     		cmp	r3, #0
 1590 0272 03D1     		bne	.L94
 1591              		.loc 1 444 0 is_stmt 0 discriminator 1
 1592 0274 124B     		ldr	r3, .L115+60
 1593 0276 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 0278 002B     		cmp	r3, #0
 1595 027a 25D0     		beq	.L95
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 37


 1596              	.L94:
 445:main.c        ****                     return SpinCourseCorrection();
 1597              		.loc 1 445 0 is_stmt 1
 1598 027c FFF7FEFF 		bl	SpinCourseCorrection
 1599 0280 0346     		mov	r3, r0
 1600 0282 4EE1     		b	.L72
 1601              	.L116:
 1602              		.align	2
 1603              	.L115:
 1604 0284 00000000 		.word	currentRobotOrientation
 1605 0288 00000000 		.word	yBlocksize
 1606 028c 00000000 		.word	xBlocksize
 1607 0290 00000000 		.word	currentInstruction
 1608 0294 00000000 		.word	currentDirection
 1609 0298 00000000 		.word	stopBuffer
 1610 029c 00000000 		.word	s3
 1611 02a0 3B000000 		.word	leftStatusFlag
 1612 02a4 00000000 		.word	s4
 1613 02a8 3C000000 		.word	rightStatusFlag
 1614 02ac 3E000000 		.word	currentIgnoreL
 1615 02b0 45000000 		.word	currentIgnoreR
 1616 02b4 36000000 		.word	turnStartedFlag
 1617 02b8 37000000 		.word	turnFinishedFlag
 1618 02bc 00000000 		.word	s5
 1619 02c0 00000000 		.word	s6
 1620 02c4 00000000 		.word	forwardBuffer
 1621              	.L95:
 446:main.c        ****                 }
 447:main.c        ****                 if (forwardBuffer <= 10) {
 1622              		.loc 1 447 0
 1623 02c8 984B     		ldr	r3, .L117
 1624 02ca 1B88     		ldrh	r3, [r3]
 1625 02cc 0A2B     		cmp	r3, #10
 1626 02ce 03D8     		bhi	.L96
 448:main.c        ****                     return ForwardCourseCorrection();    
 1627              		.loc 1 448 0
 1628 02d0 FFF7FEFF 		bl	ForwardCourseCorrection
 1629 02d4 0346     		mov	r3, r0
 1630 02d6 24E1     		b	.L72
 1631              	.L96:
 449:main.c        **** 
 450:main.c        ****                 } else {
 451:main.c        ****                     forwardBuffer = 100;
 1632              		.loc 1 451 0
 1633 02d8 944B     		ldr	r3, .L117
 1634 02da 6422     		movs	r2, #100
 1635 02dc 1A80     		strh	r2, [r3]	@ movhi
 452:main.c        ****                     if (s4) {
 1636              		.loc 1 452 0
 1637 02de 944B     		ldr	r3, .L117+4
 1638 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1639 02e2 002B     		cmp	r3, #0
 1640 02e4 06D0     		beq	.L92
 453:main.c        ****                         turnFinishedFlag = 0;
 1641              		.loc 1 453 0
 1642 02e6 934B     		ldr	r3, .L117+8
 1643 02e8 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 38


 1644 02ea 1A70     		strb	r2, [r3]
 454:main.c        ****                         MoveToNextInstruction();   
 1645              		.loc 1 454 0
 1646 02ec FFF7FEFF 		bl	MoveToNextInstruction
 455:main.c        ****                         return Stop;  
 1647              		.loc 1 455 0
 1648 02f0 0523     		movs	r3, #5
 1649 02f2 16E1     		b	.L72
 1650              	.L92:
 456:main.c        ****                     }
 457:main.c        ****                 }
 458:main.c        ****             }
 459:main.c        ****             
 460:main.c        ****             if (currentDirection == Stop) {
 1651              		.loc 1 460 0
 1652 02f4 904B     		ldr	r3, .L117+12
 1653 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1654 02f8 052B     		cmp	r3, #5
 1655 02fa 09D1     		bne	.L97
 461:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 462:main.c        ****                 if (stopBuffer <= 25) {
 1656              		.loc 1 462 0
 1657 02fc 8F4B     		ldr	r3, .L117+16
 1658 02fe 1B68     		ldr	r3, [r3]
 1659 0300 192B     		cmp	r3, #25
 1660 0302 01D8     		bhi	.L98
 463:main.c        ****                     return Stop;   
 1661              		.loc 1 463 0
 1662 0304 0523     		movs	r3, #5
 1663 0306 0CE1     		b	.L72
 1664              	.L98:
 464:main.c        ****                 }
 465:main.c        **** 
 466:main.c        ****                 return ForwardCourseCorrection();
 1665              		.loc 1 466 0
 1666 0308 FFF7FEFF 		bl	ForwardCourseCorrection
 1667 030c 0346     		mov	r3, r0
 1668 030e 08E1     		b	.L72
 1669              	.L97:
 467:main.c        ****             }
 468:main.c        ****                       
 469:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 470:main.c        ****             if (currentDirection == TurnRight) {
 1670              		.loc 1 470 0
 1671 0310 894B     		ldr	r3, .L117+12
 1672 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 0314 012B     		cmp	r3, #1
 1674 0316 2BD1     		bne	.L99
 471:main.c        ****                 // If turn started and we are still on black, continue turning
 472:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 473:main.c        ****                 if (turnStartedFlag) {
 1675              		.loc 1 473 0
 1676 0318 894B     		ldr	r3, .L117+20
 1677 031a 1B78     		ldrb	r3, [r3]
 1678 031c DBB2     		uxtb	r3, r3
 1679 031e 002B     		cmp	r3, #0
 1680 0320 0ED0     		beq	.L100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 39


 474:main.c        ****                     if (s4 && (s5 && s6)) {
 1681              		.loc 1 474 0
 1682 0322 834B     		ldr	r3, .L117+4
 1683 0324 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684 0326 002B     		cmp	r3, #0
 1685 0328 0AD0     		beq	.L100
 1686              		.loc 1 474 0 is_stmt 0 discriminator 1
 1687 032a 864B     		ldr	r3, .L117+24
 1688 032c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1689 032e 002B     		cmp	r3, #0
 1690 0330 06D0     		beq	.L100
 1691              		.loc 1 474 0 discriminator 2
 1692 0332 854B     		ldr	r3, .L117+28
 1693 0334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1694 0336 002B     		cmp	r3, #0
 1695 0338 02D0     		beq	.L100
 475:main.c        ****                         turnStartedFlag = 0;
 1696              		.loc 1 475 0 is_stmt 1
 1697 033a 814B     		ldr	r3, .L117+20
 1698 033c 0022     		movs	r2, #0
 1699 033e 1A70     		strb	r2, [r3]
 1700              	.L100:
 476:main.c        ****                     }
 477:main.c        ****                 }
 478:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1701              		.loc 1 478 0
 1702 0340 7F4B     		ldr	r3, .L117+20
 1703 0342 1B78     		ldrb	r3, [r3]
 1704 0344 DBB2     		uxtb	r3, r3
 1705 0346 002B     		cmp	r3, #0
 1706 0348 10D1     		bne	.L101
 1707              		.loc 1 478 0 is_stmt 0 discriminator 1
 1708 034a 794B     		ldr	r3, .L117+4
 1709 034c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 034e 002B     		cmp	r3, #0
 1711 0350 0CD1     		bne	.L101
 1712              		.loc 1 478 0 discriminator 2
 1713 0352 7C4B     		ldr	r3, .L117+24
 1714 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1715 0356 002B     		cmp	r3, #0
 1716 0358 08D1     		bne	.L101
 1717              		.loc 1 478 0 discriminator 3
 1718 035a 7B4B     		ldr	r3, .L117+28
 1719 035c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1720 035e 002B     		cmp	r3, #0
 1721 0360 04D1     		bne	.L101
 479:main.c        ****                     turnFinishedFlag = 1;
 1722              		.loc 1 479 0 is_stmt 1
 1723 0362 744B     		ldr	r3, .L117+8
 1724 0364 0122     		movs	r2, #1
 1725 0366 1A70     		strb	r2, [r3]
 480:main.c        ****                     return ForwardAfterTurn;
 1726              		.loc 1 480 0
 1727 0368 0823     		movs	r3, #8
 1728 036a DAE0     		b	.L72
 1729              	.L101:
 481:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 40


 482:main.c        ****                 else
 483:main.c        ****                 {
 484:main.c        ****                     return TurnRight;
 1730              		.loc 1 484 0
 1731 036c 0123     		movs	r3, #1
 1732 036e D8E0     		b	.L72
 1733              	.L99:
 485:main.c        ****                 }
 486:main.c        ****             }
 487:main.c        ****             
 488:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 489:main.c        ****             if (!s4) {
 1734              		.loc 1 489 0
 1735 0370 6F4B     		ldr	r3, .L117+4
 1736 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1737 0374 002B     		cmp	r3, #0
 1738 0376 04D1     		bne	.L102
 490:main.c        ****                 turnStartedFlag = 1;
 1739              		.loc 1 490 0
 1740 0378 714B     		ldr	r3, .L117+20
 1741 037a 0122     		movs	r2, #1
 1742 037c 1A70     		strb	r2, [r3]
 491:main.c        ****                 return TurnRight;
 1743              		.loc 1 491 0
 1744 037e 0123     		movs	r3, #1
 1745 0380 CFE0     		b	.L72
 1746              	.L102:
 492:main.c        ****             }
 493:main.c        ****             
 494:main.c        ****             // Otherwise, keep going forward
 495:main.c        ****             return ForwardCourseCorrection(); 
 1747              		.loc 1 495 0
 1748 0382 FFF7FEFF 		bl	ForwardCourseCorrection
 1749 0386 0346     		mov	r3, r0
 1750 0388 CBE0     		b	.L72
 1751              	.L68:
 496:main.c        ****             break;
 497:main.c        ****         case ForwardUntilTarget:
 498:main.c        ****             // Reset distance on first iteration of this instruction
 499:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1752              		.loc 1 499 0
 1753 038a 704B     		ldr	r3, .L117+32
 1754 038c 1B78     		ldrb	r3, [r3]
 1755 038e DBB2     		uxtb	r3, r3
 1756 0390 002B     		cmp	r3, #0
 1757 0392 0FD1     		bne	.L103
 500:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1758              		.loc 1 500 0
 1759 0394 6D4B     		ldr	r3, .L117+32
 1760 0396 0122     		movs	r2, #1
 1761 0398 1A70     		strb	r2, [r3]
 501:main.c        ****                 totalDistance = 0;
 1762              		.loc 1 501 0
 1763 039a 6D4B     		ldr	r3, .L117+36
 1764 039c 4FF00002 		mov	r2, #0
 1765 03a0 1A60     		str	r2, [r3]	@ float
 502:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 41


 503:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 504:main.c        ****                 blockSizeTotal = blocksize * 4;
 1766              		.loc 1 504 0
 1767 03a2 4FF08141 		mov	r1, #1082130432
 1768 03a6 F869     		ldr	r0, [r7, #28]	@ float
 1769 03a8 FFF7FEFF 		bl	__aeabi_fmul
 1770 03ac 0346     		mov	r3, r0
 1771 03ae 1A46     		mov	r2, r3
 1772 03b0 684B     		ldr	r3, .L117+40
 1773 03b2 1A60     		str	r2, [r3]	@ float
 1774              	.L103:
 505:main.c        ****             }
 506:main.c        ****             
 507:main.c        ****             
 508:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 509:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1775              		.loc 1 509 0
 1776 03b4 664B     		ldr	r3, .L117+36
 1777 03b6 1A68     		ldr	r2, [r3]	@ float
 1778 03b8 664B     		ldr	r3, .L117+40
 1779 03ba 1B68     		ldr	r3, [r3]	@ float
 1780 03bc 1946     		mov	r1, r3
 1781 03be 1046     		mov	r0, r2
 1782 03c0 FFF7FEFF 		bl	__aeabi_fcmpge
 1783 03c4 0346     		mov	r3, r0
 1784 03c6 002B     		cmp	r3, #0
 1785 03c8 03D0     		beq	.L114
 510:main.c        ****                 // Get next instruction
 511:main.c        ****                 MoveToNextInstruction();
 1786              		.loc 1 511 0
 1787 03ca FFF7FEFF 		bl	MoveToNextInstruction
 512:main.c        **** 
 513:main.c        ****                 
 514:main.c        ****                 return Stop;
 1788              		.loc 1 514 0
 1789 03ce 0523     		movs	r3, #5
 1790 03d0 A7E0     		b	.L72
 1791              	.L114:
 515:main.c        ****             }
 516:main.c        ****             
 517:main.c        ****             return ForwardCourseCorrection();
 1792              		.loc 1 517 0
 1793 03d2 FFF7FEFF 		bl	ForwardCourseCorrection
 1794 03d6 0346     		mov	r3, r0
 1795 03d8 A3E0     		b	.L72
 1796              	.L69:
 518:main.c        ****             break;
 519:main.c        ****         case StopAtTarget:
 520:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 521:main.c        ****             // Reset flags
 522:main.c        ****             totalDistance = 0;
 1797              		.loc 1 522 0
 1798 03da 5D4B     		ldr	r3, .L117+36
 1799 03dc 4FF00002 		mov	r2, #0
 1800 03e0 1A60     		str	r2, [r3]	@ float
 523:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1801              		.loc 1 523 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 42


 1802 03e2 5A4B     		ldr	r3, .L117+32
 1803 03e4 0022     		movs	r2, #0
 1804 03e6 1A70     		strb	r2, [r3]
 524:main.c        ****             blockSizeTotal = 0;
 1805              		.loc 1 524 0
 1806 03e8 5A4B     		ldr	r3, .L117+40
 1807 03ea 4FF00002 		mov	r2, #0
 1808 03ee 1A60     		str	r2, [r3]	@ float
 525:main.c        ****             
 526:main.c        ****             if (currentDirection == Stop) {
 1809              		.loc 1 526 0
 1810 03f0 514B     		ldr	r3, .L117+12
 1811 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1812 03f4 052B     		cmp	r3, #5
 1813 03f6 0AD1     		bne	.L106
 527:main.c        ****                 if (stopBuffer <= 200) {
 1814              		.loc 1 527 0
 1815 03f8 504B     		ldr	r3, .L117+16
 1816 03fa 1B68     		ldr	r3, [r3]
 1817 03fc C82B     		cmp	r3, #200
 1818 03fe 01D8     		bhi	.L107
 528:main.c        ****                     return Stop;    
 1819              		.loc 1 528 0
 1820 0400 0523     		movs	r3, #5
 1821 0402 8EE0     		b	.L72
 1822              	.L107:
 529:main.c        ****                 } else {
 530:main.c        ****                     stopBuffer = 250;
 1823              		.loc 1 530 0
 1824 0404 4D4B     		ldr	r3, .L117+16
 1825 0406 FA22     		movs	r2, #250
 1826 0408 1A60     		str	r2, [r3]
 531:main.c        ****                     return TurnRight;
 1827              		.loc 1 531 0
 1828 040a 0123     		movs	r3, #1
 1829 040c 89E0     		b	.L72
 1830              	.L106:
 532:main.c        ****                 }
 533:main.c        ****             }
 534:main.c        ****             
 535:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 536:main.c        ****             currentFoodListIndex++;
 1831              		.loc 1 536 0
 1832 040e 524B     		ldr	r3, .L117+44
 1833 0410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 0412 0133     		adds	r3, r3, #1
 1835 0414 DAB2     		uxtb	r2, r3
 1836 0416 504B     		ldr	r3, .L117+44
 1837 0418 1A70     		strb	r2, [r3]
 537:main.c        ****             instructionIndex = 0;
 1838              		.loc 1 537 0
 1839 041a 504B     		ldr	r3, .L117+48
 1840 041c 0022     		movs	r2, #0
 1841 041e 1A60     		str	r2, [r3]
 538:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 1842              		.loc 1 538 0
 1843 0420 4D4B     		ldr	r3, .L117+44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 43


 1844 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 0424 1A46     		mov	r2, r3
 1846 0426 4E4B     		ldr	r3, .L117+52
 1847 0428 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1848 042a 4E49     		ldr	r1, .L117+56
 1849 042c 4E48     		ldr	r0, .L117+60
 1850 042e FFF7FEFF 		bl	findPathNewOrientation
 1851 0432 0246     		mov	r2, r0
 1852 0434 4D4B     		ldr	r3, .L117+64
 1853 0436 1A60     		str	r2, [r3]
 539:main.c        ****             numSteps = instructionsListLength();
 1854              		.loc 1 539 0
 1855 0438 FFF7FEFF 		bl	instructionsListLength
 1856 043c 0346     		mov	r3, r0
 1857 043e 1A46     		mov	r2, r3
 1858 0440 4B4B     		ldr	r3, .L117+68
 1859 0442 1A60     		str	r2, [r3]
 540:main.c        ****     
 541:main.c        ****             currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 1860              		.loc 1 541 0
 1861 0444 4A4B     		ldr	r3, .L117+68
 1862 0446 1968     		ldr	r1, [r3]
 1863 0448 484B     		ldr	r3, .L117+64
 1864 044a 1A68     		ldr	r2, [r3]
 1865 044c 444C     		ldr	r4, .L117+52
 1866 044e 3B46     		mov	r3, r7
 1867 0450 1846     		mov	r0, r3
 1868 0452 FFF7FEFF 		bl	GetInstructionAtIndex
 1869 0456 2546     		mov	r5, r4
 1870 0458 3C46     		mov	r4, r7
 1871 045a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1872 045c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1873 045e 2368     		ldr	r3, [r4]
 1874 0460 2B60     		str	r3, [r5]
 542:main.c        **** 
 543:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 1875              		.loc 1 543 0
 1876 0462 424B     		ldr	r3, .L117+64
 1877 0464 1968     		ldr	r1, [r3]
 1878 0466 3D4B     		ldr	r3, .L117+48
 1879 0468 1A68     		ldr	r2, [r3]
 1880 046a 1346     		mov	r3, r2
 1881 046c 9B00     		lsls	r3, r3, #2
 1882 046e 1344     		add	r3, r3, r2
 1883 0470 9B00     		lsls	r3, r3, #2
 1884 0472 0B44     		add	r3, r3, r1
 1885 0474 5B68     		ldr	r3, [r3, #4]
 1886 0476 DAB2     		uxtb	r2, r3
 1887 0478 3E4B     		ldr	r3, .L117+72
 1888 047a 1A70     		strb	r2, [r3]
 544:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 1889              		.loc 1 544 0
 1890 047c 3B4B     		ldr	r3, .L117+64
 1891 047e 1968     		ldr	r1, [r3]
 1892 0480 364B     		ldr	r3, .L117+48
 1893 0482 1A68     		ldr	r2, [r3]
 1894 0484 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 44


 1895 0486 9B00     		lsls	r3, r3, #2
 1896 0488 1344     		add	r3, r3, r2
 1897 048a 9B00     		lsls	r3, r3, #2
 1898 048c 0B44     		add	r3, r3, r1
 1899 048e 9B68     		ldr	r3, [r3, #8]
 1900 0490 DAB2     		uxtb	r2, r3
 1901 0492 394B     		ldr	r3, .L117+76
 1902 0494 1A70     		strb	r2, [r3]
 545:main.c        ****             
 546:main.c        ****             return Stop;
 1903              		.loc 1 546 0
 1904 0496 0523     		movs	r3, #5
 1905 0498 43E0     		b	.L72
 1906              	.L67:
 547:main.c        ****             break;
 548:main.c        ****         case uTurn:
 549:main.c        ****             if (currentDirection == Stop) {
 1907              		.loc 1 549 0
 1908 049a 274B     		ldr	r3, .L117+12
 1909 049c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1910 049e 052B     		cmp	r3, #5
 1911 04a0 08D1     		bne	.L108
 550:main.c        ****                 if (stopBuffer <= 50) {
 1912              		.loc 1 550 0
 1913 04a2 264B     		ldr	r3, .L117+16
 1914 04a4 1B68     		ldr	r3, [r3]
 1915 04a6 322B     		cmp	r3, #50
 1916 04a8 01D8     		bhi	.L109
 551:main.c        ****                     return Stop;    
 1917              		.loc 1 551 0
 1918 04aa 0523     		movs	r3, #5
 1919 04ac 39E0     		b	.L72
 1920              	.L109:
 552:main.c        ****                 } else {
 553:main.c        ****                     stopBuffer = 100;    
 1921              		.loc 1 553 0
 1922 04ae 234B     		ldr	r3, .L117+16
 1923 04b0 6422     		movs	r2, #100
 1924 04b2 1A60     		str	r2, [r3]
 1925              	.L108:
 554:main.c        ****                 }
 555:main.c        ****             }
 556:main.c        ****             
 557:main.c        ****             
 558:main.c        ****             if (!uTurnStartedFlag) {
 1926              		.loc 1 558 0
 1927 04b4 314B     		ldr	r3, .L117+80
 1928 04b6 1B78     		ldrb	r3, [r3]
 1929 04b8 DBB2     		uxtb	r3, r3
 1930 04ba 002B     		cmp	r3, #0
 1931 04bc 07D1     		bne	.L110
 559:main.c        ****                 uTurnStartedFlag = 1;
 1932              		.loc 1 559 0
 1933 04be 2F4B     		ldr	r3, .L117+80
 1934 04c0 0122     		movs	r2, #1
 1935 04c2 1A70     		strb	r2, [r3]
 560:main.c        ****                 spinCourseCorrectionStarted = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 45


 1936              		.loc 1 560 0
 1937 04c4 2E4B     		ldr	r3, .L117+84
 1938 04c6 0022     		movs	r2, #0
 1939 04c8 1A70     		strb	r2, [r3]
 561:main.c        ****                 return Spin180;
 1940              		.loc 1 561 0
 1941 04ca 0A23     		movs	r3, #10
 1942 04cc 29E0     		b	.L72
 1943              	.L110:
 562:main.c        ****             } 
 563:main.c        ****             
 564:main.c        ****             if (uTurnFinishedFlag) {
 1944              		.loc 1 564 0
 1945 04ce 2D4B     		ldr	r3, .L117+88
 1946 04d0 1B78     		ldrb	r3, [r3]
 1947 04d2 DBB2     		uxtb	r3, r3
 1948 04d4 002B     		cmp	r3, #0
 1949 04d6 03D0     		beq	.L111
 565:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 566:main.c        ****                 MoveToNextInstruction();
 1950              		.loc 1 566 0
 1951 04d8 FFF7FEFF 		bl	MoveToNextInstruction
 567:main.c        ****                 return Stop;    
 1952              		.loc 1 567 0
 1953 04dc 0523     		movs	r3, #5
 1954 04de 20E0     		b	.L72
 1955              	.L111:
 568:main.c        ****             }
 569:main.c        ****             
 570:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 571:main.c        ****             if (uTurnStartedFlag) {
 1956              		.loc 1 571 0
 1957 04e0 264B     		ldr	r3, .L117+80
 1958 04e2 1B78     		ldrb	r3, [r3]
 1959 04e4 DBB2     		uxtb	r3, r3
 1960 04e6 002B     		cmp	r3, #0
 1961 04e8 16D0     		beq	.L112
 572:main.c        ****                 if (!s5 && !s6) {
 1962              		.loc 1 572 0
 1963 04ea 164B     		ldr	r3, .L117+24
 1964 04ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1965 04ee 002B     		cmp	r3, #0
 1966 04f0 12D1     		bne	.L112
 1967              		.loc 1 572 0 is_stmt 0 discriminator 1
 1968 04f2 154B     		ldr	r3, .L117+28
 1969 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1970 04f6 002B     		cmp	r3, #0
 1971 04f8 0ED1     		bne	.L112
 573:main.c        ****                     totalLineCount = 0;
 1972              		.loc 1 573 0 is_stmt 1
 1973 04fa 234B     		ldr	r3, .L117+92
 1974 04fc 0022     		movs	r2, #0
 1975 04fe 1A70     		strb	r2, [r3]
 574:main.c        ****                     lineCount = 0;
 1976              		.loc 1 574 0
 1977 0500 224B     		ldr	r3, .L117+96
 1978 0502 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 46


 1979 0504 1A70     		strb	r2, [r3]
 575:main.c        ****                     tooEarlyFlag = 0;
 1980              		.loc 1 575 0
 1981 0506 224B     		ldr	r3, .L117+100
 1982 0508 0022     		movs	r2, #0
 1983 050a 1A70     		strb	r2, [r3]
 576:main.c        ****                     tooLateFlag = 0;
 1984              		.loc 1 576 0
 1985 050c 214B     		ldr	r3, .L117+104
 1986 050e 0022     		movs	r2, #0
 1987 0510 1A70     		strb	r2, [r3]
 577:main.c        ****                     uTurnFinishedFlag = 1;    
 1988              		.loc 1 577 0
 1989 0512 1C4B     		ldr	r3, .L117+88
 1990 0514 0122     		movs	r2, #1
 1991 0516 1A70     		strb	r2, [r3]
 1992              	.L112:
 578:main.c        ****                 }    
 579:main.c        ****             }
 580:main.c        ****             
 581:main.c        ****             return SpinCourseCorrection();
 1993              		.loc 1 581 0
 1994 0518 FFF7FEFF 		bl	SpinCourseCorrection
 1995 051c 0346     		mov	r3, r0
 1996 051e 00E0     		b	.L72
 1997              	.L62:
 582:main.c        ****             break;
 583:main.c        ****         default:
 584:main.c        ****             return Stop;
 1998              		.loc 1 584 0
 1999 0520 0523     		movs	r3, #5
 2000              	.L72:
 585:main.c        ****             break;
 586:main.c        ****     }
 587:main.c        ****     return Stop;
 588:main.c        **** }
 2001              		.loc 1 588 0
 2002 0522 1846     		mov	r0, r3
 2003 0524 2037     		adds	r7, r7, #32
 2004              		.cfi_def_cfa_offset 16
 2005 0526 BD46     		mov	sp, r7
 2006              		.cfi_def_cfa_register 13
 2007              		@ sp needed
 2008 0528 B0BD     		pop	{r4, r5, r7, pc}
 2009              	.L118:
 2010 052a 00BF     		.align	2
 2011              	.L117:
 2012 052c 00000000 		.word	forwardBuffer
 2013 0530 00000000 		.word	s4
 2014 0534 37000000 		.word	turnFinishedFlag
 2015 0538 00000000 		.word	currentDirection
 2016 053c 00000000 		.word	stopBuffer
 2017 0540 36000000 		.word	turnStartedFlag
 2018 0544 00000000 		.word	s5
 2019 0548 00000000 		.word	s6
 2020 054c 38000000 		.word	forwardUntilTargetStartedFlag
 2021 0550 00000000 		.word	totalDistance
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 47


 2022 0554 00000000 		.word	blockSizeTotal
 2023 0558 00000000 		.word	currentFoodListIndex
 2024 055c 14000000 		.word	instructionIndex
 2025 0560 00000000 		.word	currentInstruction
 2026 0564 00000000 		.word	food_list
 2027 0568 00000000 		.word	map
 2028 056c 00000000 		.word	instructionList
 2029 0570 00000000 		.word	numSteps
 2030 0574 3E000000 		.word	currentIgnoreL
 2031 0578 45000000 		.word	currentIgnoreR
 2032 057c 39000000 		.word	uTurnStartedFlag
 2033 0580 3D000000 		.word	spinCourseCorrectionStarted
 2034 0584 3A000000 		.word	uTurnFinishedFlag
 2035 0588 3F000000 		.word	totalLineCount
 2036 058c 40000000 		.word	lineCount
 2037 0590 42000000 		.word	tooEarlyFlag
 2038 0594 43000000 		.word	tooLateFlag
 2039              		.cfi_endproc
 2040              	.LFE75:
 2041              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2042              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2043              		.align	2
 2044              		.global	MoveToNextInstruction
 2045              		.thumb
 2046              		.thumb_func
 2047              		.type	MoveToNextInstruction, %function
 2048              	MoveToNextInstruction:
 2049              	.LFB76:
 589:main.c        **** /*
 590:main.c        **** // Calculate total blocksize to travel until target
 591:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 592:main.c        ****     float totalBlockSize;
 593:main.c        ****     
 594:main.c        ****     // Check for Row, Col that target is 
 595:main.c        ****     int targetRow = food_list[0][0];
 596:main.c        ****     int targetCol = food_list[0][1];
 597:main.c        ****     
 598:main.c        ****     int pathCount = 0;
 599:main.c        ****     currentRobotOrientation = currentInstruction.expectedOrientation;
 600:main.c        ****     // Depending on the robot orientation
 601:main.c        ****     // count++ if row, col is 8
 602:main.c        ****     // count reset if row, col is 1 or 0
 603:main.c        ****     // save count if row, col is 9
 604:main.c        ****     switch (currentRobotOrientation) {
 605:main.c        ****         case Up:
 606:main.c        ****             // Column
 607:main.c        ****             // Start from Bottom (since we're facing up)
 608:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 609:main.c        ****                 if (map[i][targetCol] == 9) {
 610:main.c        ****                     break;    
 611:main.c        ****                 }
 612:main.c        ****                 if (map[i][targetCol] == 0) {
 613:main.c        ****                     pathCount++;    
 614:main.c        ****                 }
 615:main.c        ****                 if (map[i][targetCol] == 1) {
 616:main.c        ****                     pathCount = 0;
 617:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 48


 618:main.c        ****             }
 619:main.c        ****             break;
 620:main.c        ****         case Down:
 621:main.c        ****             // Target Column, Check Row
 622:main.c        ****             // Start from Top
 623:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 624:main.c        ****                 if (map[i][targetCol] == 9) {
 625:main.c        ****                     break;    
 626:main.c        ****                 }
 627:main.c        ****                 if (map[i][targetCol] == 0) {
 628:main.c        ****                     pathCount++;    
 629:main.c        ****                 }
 630:main.c        ****                 if (map[i][targetCol] == 1) {
 631:main.c        ****                     pathCount = 0;
 632:main.c        ****                 }
 633:main.c        ****             }
 634:main.c        ****             break;
 635:main.c        ****         case Left:
 636:main.c        ****             // Target Row, Check Col
 637:main.c        ****             // Start from Right
 638:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 639:main.c        ****                 if (map[targetRow][i] == 9) {
 640:main.c        ****                     break;    
 641:main.c        ****                 }
 642:main.c        ****                 if (map[targetRow][i] == 0) {
 643:main.c        ****                     pathCount++;    
 644:main.c        ****                 }
 645:main.c        ****                 if (map[i][targetCol] == 1) {
 646:main.c        ****                     pathCount = 0;
 647:main.c        ****                 }
 648:main.c        ****             }
 649:main.c        ****             break;
 650:main.c        ****         
 651:main.c        ****         case Right:
 652:main.c        ****             // Target Row, Check Col
 653:main.c        ****             // Start from Left
 654:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 655:main.c        ****                 if (map[targetRow][i] == 9) {
 656:main.c        ****                     break;    
 657:main.c        ****                 }
 658:main.c        ****                 if (map[targetRow][i] == 0) {
 659:main.c        ****                     pathCount++;    
 660:main.c        ****                 }
 661:main.c        ****                 if (map[i][targetCol] == 1) {
 662:main.c        ****                     pathCount = 0;
 663:main.c        ****                 }
 664:main.c        **** 
 665:main.c        ****             }
 666:main.c        ****             break;
 667:main.c        ****     }
 668:main.c        ****     totalBlockSize = blockSize * pathCount;
 669:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 670:main.c        ****     return totalBlockSize;
 671:main.c        **** }
 672:main.c        **** */
 673:main.c        **** // get next instruction
 674:main.c        **** void MoveToNextInstruction() {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 49


 2050              		.loc 1 674 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 1, uses_anonymous_args = 0
 2054              		@ link register save eliminated.
 2055 0000 80B4     		push	{r7}
 2056              		.cfi_def_cfa_offset 4
 2057              		.cfi_offset 7, -4
 2058 0002 00AF     		add	r7, sp, #0
 2059              		.cfi_def_cfa_register 7
 675:main.c        ****     currentIgnoreL = 0;
 2060              		.loc 1 675 0
 2061 0004 144B     		ldr	r3, .L120
 2062 0006 0022     		movs	r2, #0
 2063 0008 1A70     		strb	r2, [r3]
 676:main.c        ****     currentIgnoreR = 0;
 2064              		.loc 1 676 0
 2065 000a 144B     		ldr	r3, .L120+4
 2066 000c 0022     		movs	r2, #0
 2067 000e 1A70     		strb	r2, [r3]
 677:main.c        ****     instructionIndex++;
 2068              		.loc 1 677 0
 2069 0010 134B     		ldr	r3, .L120+8
 2070 0012 1B68     		ldr	r3, [r3]
 2071 0014 0133     		adds	r3, r3, #1
 2072 0016 124A     		ldr	r2, .L120+8
 2073 0018 1360     		str	r3, [r2]
 678:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2074              		.loc 1 678 0
 2075 001a 124B     		ldr	r3, .L120+12
 2076 001c 1968     		ldr	r1, [r3]
 2077 001e 104B     		ldr	r3, .L120+8
 2078 0020 1A68     		ldr	r2, [r3]
 2079 0022 1346     		mov	r3, r2
 2080 0024 9B00     		lsls	r3, r3, #2
 2081 0026 1344     		add	r3, r3, r2
 2082 0028 9B00     		lsls	r3, r3, #2
 2083 002a 0B44     		add	r3, r3, r1
 2084 002c 5B68     		ldr	r3, [r3, #4]
 2085 002e DAB2     		uxtb	r2, r3
 2086 0030 094B     		ldr	r3, .L120
 2087 0032 1A70     		strb	r2, [r3]
 679:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2088              		.loc 1 679 0
 2089 0034 0B4B     		ldr	r3, .L120+12
 2090 0036 1968     		ldr	r1, [r3]
 2091 0038 094B     		ldr	r3, .L120+8
 2092 003a 1A68     		ldr	r2, [r3]
 2093 003c 1346     		mov	r3, r2
 2094 003e 9B00     		lsls	r3, r3, #2
 2095 0040 1344     		add	r3, r3, r2
 2096 0042 9B00     		lsls	r3, r3, #2
 2097 0044 0B44     		add	r3, r3, r1
 2098 0046 9B68     		ldr	r3, [r3, #8]
 2099 0048 DAB2     		uxtb	r2, r3
 2100 004a 044B     		ldr	r3, .L120+4
 2101 004c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 50


 680:main.c        ****     /*for (int i = instructionIndex; i < numSteps; i++) {
 681:main.c        ****         if (instructionList[i].direction != Skip) {
 682:main.c        ****             instructionIndex = i;             
 683:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 684:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 685:main.c        ****             break;
 686:main.c        ****         }
 687:main.c        ****     }*/
 688:main.c        ****     
 689:main.c        ****     
 690:main.c        **** }
 2102              		.loc 1 690 0
 2103 004e 00BF     		nop
 2104 0050 BD46     		mov	sp, r7
 2105              		.cfi_def_cfa_register 13
 2106              		@ sp needed
 2107 0052 80BC     		pop	{r7}
 2108              		.cfi_restore 7
 2109              		.cfi_def_cfa_offset 0
 2110 0054 7047     		bx	lr
 2111              	.L121:
 2112 0056 00BF     		.align	2
 2113              	.L120:
 2114 0058 3E000000 		.word	currentIgnoreL
 2115 005c 45000000 		.word	currentIgnoreR
 2116 0060 14000000 		.word	instructionIndex
 2117 0064 00000000 		.word	instructionList
 2118              		.cfi_endproc
 2119              	.LFE76:
 2120              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2121              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2122              		.align	2
 2123              		.global	GetInstructionAtIndex
 2124              		.thumb
 2125              		.thumb_func
 2126              		.type	GetInstructionAtIndex, %function
 2127              	GetInstructionAtIndex:
 2128              	.LFB77:
 691:main.c        **** 
 692:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]) {
 2129              		.loc 1 692 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 40
 2132              		@ frame_needed = 1, uses_anonymous_args = 0
 2133              		@ link register save eliminated.
 2134 0000 B0B4     		push	{r4, r5, r7}
 2135              		.cfi_def_cfa_offset 12
 2136              		.cfi_offset 4, -12
 2137              		.cfi_offset 5, -8
 2138              		.cfi_offset 7, -4
 2139 0002 8BB0     		sub	sp, sp, #44
 2140              		.cfi_def_cfa_offset 56
 2141 0004 00AF     		add	r7, sp, #0
 2142              		.cfi_def_cfa_register 7
 2143 0006 F860     		str	r0, [r7, #12]
 2144 0008 B960     		str	r1, [r7, #8]
 2145 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 51


 693:main.c        ****     Instruction nextInstruction;
 694:main.c        ****     // input is list of instructions and robot will react accordingly
 695:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2146              		.loc 1 695 0
 2147 000c 114B     		ldr	r3, .L124
 2148 000e 1A68     		ldr	r2, [r3]
 2149 0010 1346     		mov	r3, r2
 2150 0012 9B00     		lsls	r3, r3, #2
 2151 0014 1344     		add	r3, r3, r2
 2152 0016 9B00     		lsls	r3, r3, #2
 2153 0018 1A46     		mov	r2, r3
 2154 001a 7B68     		ldr	r3, [r7, #4]
 2155 001c 1344     		add	r3, r3, r2
 2156 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2157 0020 3B75     		strb	r3, [r7, #20]
 696:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2158              		.loc 1 696 0
 2159 0022 0C4B     		ldr	r3, .L124
 2160 0024 1A68     		ldr	r2, [r3]
 2161 0026 1346     		mov	r3, r2
 2162 0028 9B00     		lsls	r3, r3, #2
 2163 002a 1344     		add	r3, r3, r2
 2164 002c 9B00     		lsls	r3, r3, #2
 2165 002e 1A46     		mov	r2, r3
 2166 0030 7B68     		ldr	r3, [r7, #4]
 2167 0032 1344     		add	r3, r3, r2
 2168 0034 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2169 0036 87F82430 		strb	r3, [r7, #36]
 697:main.c        ****     
 698:main.c        ****     /*
 699:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 700:main.c        ****         if(instructionList[i].direction != Skip) {
 701:main.c        ****             nextInstruction.direction = instructionList[i].direction;        
 702:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 703:main.c        ****             instructionIndex = i;
 704:main.c        ****             return nextInstruction; // return next instruction
 705:main.c        ****         }
 706:main.c        ****     }*/
 707:main.c        ****     return nextInstruction;
 2170              		.loc 1 707 0
 2171 003a FB68     		ldr	r3, [r7, #12]
 2172 003c 1D46     		mov	r5, r3
 2173 003e 07F11404 		add	r4, r7, #20
 2174 0042 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2175 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2176 0046 2368     		ldr	r3, [r4]
 2177 0048 2B60     		str	r3, [r5]
 708:main.c        **** }
 2178              		.loc 1 708 0
 2179 004a F868     		ldr	r0, [r7, #12]
 2180 004c 2C37     		adds	r7, r7, #44
 2181              		.cfi_def_cfa_offset 12
 2182 004e BD46     		mov	sp, r7
 2183              		.cfi_def_cfa_register 13
 2184              		@ sp needed
 2185 0050 B0BC     		pop	{r4, r5, r7}
 2186              		.cfi_restore 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 52


 2187              		.cfi_restore 5
 2188              		.cfi_restore 4
 2189              		.cfi_def_cfa_offset 0
 2190 0052 7047     		bx	lr
 2191              	.L125:
 2192              		.align	2
 2193              	.L124:
 2194 0054 14000000 		.word	instructionIndex
 2195              		.cfi_endproc
 2196              	.LFE77:
 2197              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2198              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2199              		.align	2
 2200              		.global	RotateClockwise180Degrees
 2201              		.thumb
 2202              		.thumb_func
 2203              		.type	RotateClockwise180Degrees, %function
 2204              	RotateClockwise180Degrees:
 2205              	.LFB78:
 709:main.c        **** 
 710:main.c        **** void RotateClockwise180Degrees() {
 2206              		.loc 1 710 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 8
 2209              		@ frame_needed = 1, uses_anonymous_args = 0
 2210 0000 80B5     		push	{r7, lr}
 2211              		.cfi_def_cfa_offset 8
 2212              		.cfi_offset 7, -8
 2213              		.cfi_offset 14, -4
 2214 0002 82B0     		sub	sp, sp, #8
 2215              		.cfi_def_cfa_offset 16
 2216 0004 00AF     		add	r7, sp, #0
 2217              		.cfi_def_cfa_register 7
 711:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2218              		.loc 1 711 0
 2219 0006 49F20873 		movw	r3, #38664
 2220 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 712:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2221              		.loc 1 712 0
 2222 000c 49F20873 		movw	r3, #38664
 2223 0010 3B80     		strh	r3, [r7]	@ movhi
 713:main.c        ****     PWM_1_WriteCompare(count1);
 2224              		.loc 1 713 0
 2225 0012 7B88     		ldrh	r3, [r7, #2]
 2226 0014 1846     		mov	r0, r3
 2227 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 714:main.c        ****     PWM_2_WriteCompare(count2);
 2228              		.loc 1 714 0
 2229 001a 3B88     		ldrh	r3, [r7]
 2230 001c 1846     		mov	r0, r3
 2231 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 715:main.c        ****     
 716:main.c        ****     int quadPulseCount = 0;
 2232              		.loc 1 716 0
 2233 0022 0023     		movs	r3, #0
 2234 0024 7B60     		str	r3, [r7, #4]
 717:main.c        ****     QuadDec_M1_SetCounter(0);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 53


 2235              		.loc 1 717 0
 2236 0026 0020     		movs	r0, #0
 2237 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 718:main.c        ****     // Before 180, save initial configuration
 719:main.c        ****     if (!s3) {
 2238              		.loc 1 719 0
 2239 002c 3A4B     		ldr	r3, .L139
 2240 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2241 0030 002B     		cmp	r3, #0
 2242 0032 06D1     		bne	.L127
 720:main.c        ****         totalLineCount++;    
 2243              		.loc 1 720 0
 2244 0034 394B     		ldr	r3, .L139+4
 2245 0036 1B78     		ldrb	r3, [r3]
 2246 0038 DBB2     		uxtb	r3, r3
 2247 003a 0133     		adds	r3, r3, #1
 2248 003c DAB2     		uxtb	r2, r3
 2249 003e 374B     		ldr	r3, .L139+4
 2250 0040 1A70     		strb	r2, [r3]
 2251              	.L127:
 721:main.c        ****     }
 722:main.c        ****     if (!s4) {
 2252              		.loc 1 722 0
 2253 0042 374B     		ldr	r3, .L139+8
 2254 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2255 0046 002B     		cmp	r3, #0
 2256 0048 06D1     		bne	.L128
 723:main.c        ****         totalLineCount++;    
 2257              		.loc 1 723 0
 2258 004a 344B     		ldr	r3, .L139+4
 2259 004c 1B78     		ldrb	r3, [r3]
 2260 004e DBB2     		uxtb	r3, r3
 2261 0050 0133     		adds	r3, r3, #1
 2262 0052 DAB2     		uxtb	r2, r3
 2263 0054 314B     		ldr	r3, .L139+4
 2264 0056 1A70     		strb	r2, [r3]
 2265              	.L128:
 724:main.c        ****     }
 725:main.c        ****     if (!s5 || !s6) {
 2266              		.loc 1 725 0
 2267 0058 324B     		ldr	r3, .L139+12
 2268 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2269 005c 002B     		cmp	r3, #0
 2270 005e 03D0     		beq	.L129
 2271              		.loc 1 725 0 is_stmt 0 discriminator 1
 2272 0060 314B     		ldr	r3, .L139+16
 2273 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2274 0064 002B     		cmp	r3, #0
 2275 0066 2AD1     		bne	.L131
 2276              	.L129:
 726:main.c        ****         totalLineCount++;    
 2277              		.loc 1 726 0 is_stmt 1
 2278 0068 2C4B     		ldr	r3, .L139+4
 2279 006a 1B78     		ldrb	r3, [r3]
 2280 006c DBB2     		uxtb	r3, r3
 2281 006e 0133     		adds	r3, r3, #1
 2282 0070 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 54


 2283 0072 2A4B     		ldr	r3, .L139+4
 2284 0074 1A70     		strb	r2, [r3]
 727:main.c        ****     }
 728:main.c        ****     
 729:main.c        ****     // During 180
 730:main.c        ****     while(quadPulseCount < 210) {
 2285              		.loc 1 730 0
 2286 0076 22E0     		b	.L131
 2287              	.L134:
 731:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2288              		.loc 1 731 0
 2289 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2290 007c 0346     		mov	r3, r0
 2291 007e 7B60     		str	r3, [r7, #4]
 732:main.c        ****         if (!s3) {
 2292              		.loc 1 732 0
 2293 0080 254B     		ldr	r3, .L139
 2294 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 0084 002B     		cmp	r3, #0
 2296 0086 02D1     		bne	.L132
 733:main.c        ****             onLineFlag = 1;    
 2297              		.loc 1 733 0
 2298 0088 284B     		ldr	r3, .L139+20
 2299 008a 0122     		movs	r2, #1
 2300 008c 1A70     		strb	r2, [r3]
 2301              	.L132:
 734:main.c        ****         }
 735:main.c        ****         
 736:main.c        ****         if (onLineFlag) {
 2302              		.loc 1 736 0
 2303 008e 274B     		ldr	r3, .L139+20
 2304 0090 1B78     		ldrb	r3, [r3]
 2305 0092 DBB2     		uxtb	r3, r3
 2306 0094 002B     		cmp	r3, #0
 2307 0096 06D0     		beq	.L133
 737:main.c        ****             lineCount++;    
 2308              		.loc 1 737 0
 2309 0098 254B     		ldr	r3, .L139+24
 2310 009a 1B78     		ldrb	r3, [r3]
 2311 009c DBB2     		uxtb	r3, r3
 2312 009e 0133     		adds	r3, r3, #1
 2313 00a0 DAB2     		uxtb	r2, r3
 2314 00a2 234B     		ldr	r3, .L139+24
 2315 00a4 1A70     		strb	r2, [r3]
 2316              	.L133:
 738:main.c        ****         }
 739:main.c        ****         
 740:main.c        ****         if (!onLineFlag) {
 2317              		.loc 1 740 0
 2318 00a6 214B     		ldr	r3, .L139+20
 2319 00a8 1B78     		ldrb	r3, [r3]
 2320 00aa DBB2     		uxtb	r3, r3
 2321 00ac 002B     		cmp	r3, #0
 2322 00ae 06D1     		bne	.L131
 741:main.c        ****             if (s3) {
 2323              		.loc 1 741 0
 2324 00b0 194B     		ldr	r3, .L139
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 55


 2325 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2326 00b4 002B     		cmp	r3, #0
 2327 00b6 02D0     		beq	.L131
 742:main.c        ****                 onLineFlag = 0;    
 2328              		.loc 1 742 0
 2329 00b8 1C4B     		ldr	r3, .L139+20
 2330 00ba 0022     		movs	r2, #0
 2331 00bc 1A70     		strb	r2, [r3]
 2332              	.L131:
 730:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2333              		.loc 1 730 0
 2334 00be 7B68     		ldr	r3, [r7, #4]
 2335 00c0 D12B     		cmp	r3, #209
 2336 00c2 D9DD     		ble	.L134
 743:main.c        ****             }
 744:main.c        ****         }
 745:main.c        ****     }
 746:main.c        ****     
 747:main.c        ****     // After 180
 748:main.c        ****     if (totalLineCount == 0) {
 2337              		.loc 1 748 0
 2338 00c4 154B     		ldr	r3, .L139+4
 2339 00c6 1B78     		ldrb	r3, [r3]
 2340 00c8 DBB2     		uxtb	r3, r3
 2341 00ca 002B     		cmp	r3, #0
 2342 00cc 06D1     		bne	.L135
 749:main.c        ****         // we are on no lines
 750:main.c        ****         tooEarlyFlag = 1;
 2343              		.loc 1 750 0
 2344 00ce 194B     		ldr	r3, .L139+28
 2345 00d0 0122     		movs	r2, #1
 2346 00d2 1A70     		strb	r2, [r3]
 751:main.c        ****         QuadDec_M1_SetCounter(0);
 2347              		.loc 1 751 0
 2348 00d4 0020     		movs	r0, #0
 2349 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 752:main.c        ****         return;
 2350              		.loc 1 752 0
 2351 00da 19E0     		b	.L126
 2352              	.L135:
 753:main.c        ****     }
 754:main.c        ****     else if (lineCount > totalLineCount) {
 2353              		.loc 1 754 0
 2354 00dc 144B     		ldr	r3, .L139+24
 2355 00de 1B78     		ldrb	r3, [r3]
 2356 00e0 DAB2     		uxtb	r2, r3
 2357 00e2 0E4B     		ldr	r3, .L139+4
 2358 00e4 1B78     		ldrb	r3, [r3]
 2359 00e6 DBB2     		uxtb	r3, r3
 2360 00e8 9A42     		cmp	r2, r3
 2361 00ea 03D9     		bls	.L137
 755:main.c        ****         tooLateFlag = 1;    
 2362              		.loc 1 755 0
 2363 00ec 124B     		ldr	r3, .L139+32
 2364 00ee 0122     		movs	r2, #1
 2365 00f0 1A70     		strb	r2, [r3]
 2366 00f2 0AE0     		b	.L138
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 56


 2367              	.L137:
 756:main.c        ****     }
 757:main.c        ****     else if (lineCount < totalLineCount) {
 2368              		.loc 1 757 0
 2369 00f4 0E4B     		ldr	r3, .L139+24
 2370 00f6 1B78     		ldrb	r3, [r3]
 2371 00f8 DAB2     		uxtb	r2, r3
 2372 00fa 084B     		ldr	r3, .L139+4
 2373 00fc 1B78     		ldrb	r3, [r3]
 2374 00fe DBB2     		uxtb	r3, r3
 2375 0100 9A42     		cmp	r2, r3
 2376 0102 02D2     		bcs	.L138
 758:main.c        ****         tooEarlyFlag = 1;    
 2377              		.loc 1 758 0
 2378 0104 0B4B     		ldr	r3, .L139+28
 2379 0106 0122     		movs	r2, #1
 2380 0108 1A70     		strb	r2, [r3]
 2381              	.L138:
 759:main.c        ****     }
 760:main.c        ****     QuadDec_M1_SetCounter(0);
 2382              		.loc 1 760 0
 2383 010a 0020     		movs	r0, #0
 2384 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2385              	.L126:
 761:main.c        **** }
 2386              		.loc 1 761 0
 2387 0110 0837     		adds	r7, r7, #8
 2388              		.cfi_def_cfa_offset 8
 2389 0112 BD46     		mov	sp, r7
 2390              		.cfi_def_cfa_register 13
 2391              		@ sp needed
 2392 0114 80BD     		pop	{r7, pc}
 2393              	.L140:
 2394 0116 00BF     		.align	2
 2395              	.L139:
 2396 0118 00000000 		.word	s3
 2397 011c 3F000000 		.word	totalLineCount
 2398 0120 00000000 		.word	s4
 2399 0124 00000000 		.word	s5
 2400 0128 00000000 		.word	s6
 2401 012c 41000000 		.word	onLineFlag
 2402 0130 40000000 		.word	lineCount
 2403 0134 42000000 		.word	tooEarlyFlag
 2404 0138 43000000 		.word	tooLateFlag
 2405              		.cfi_endproc
 2406              	.LFE78:
 2407              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2408              		.section	.text.SetRobotMovement,"ax",%progbits
 2409              		.align	2
 2410              		.global	SetRobotMovement
 2411              		.thumb
 2412              		.thumb_func
 2413              		.type	SetRobotMovement, %function
 2414              	SetRobotMovement:
 2415              	.LFB79:
 762:main.c        **** 
 763:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 57


 764:main.c        **** void SetRobotMovement() {
 2416              		.loc 1 764 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 24
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0000 B0B5     		push	{r4, r5, r7, lr}
 2421              		.cfi_def_cfa_offset 16
 2422              		.cfi_offset 4, -16
 2423              		.cfi_offset 5, -12
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 86B0     		sub	sp, sp, #24
 2427              		.cfi_def_cfa_offset 40
 2428 0004 00AF     		add	r7, sp, #0
 2429              		.cfi_def_cfa_register 7
 765:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList); // get current/ next ins
 2430              		.loc 1 765 0
 2431 0006 2B4B     		ldr	r3, .L157
 2432 0008 1968     		ldr	r1, [r3]
 2433 000a 2B4B     		ldr	r3, .L157+4
 2434 000c 1A68     		ldr	r2, [r3]
 2435 000e 2B4C     		ldr	r4, .L157+8
 2436 0010 3B46     		mov	r3, r7
 2437 0012 1846     		mov	r0, r3
 2438 0014 FFF7FEFF 		bl	GetInstructionAtIndex
 2439 0018 2546     		mov	r5, r4
 2440 001a 3C46     		mov	r4, r7
 2441 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2442 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2443 0020 2368     		ldr	r3, [r4]
 2444 0022 2B60     		str	r3, [r5]
 766:main.c        ****     previousDirection = currentDirection;
 2445              		.loc 1 766 0
 2446 0024 264B     		ldr	r3, .L157+12
 2447 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2448 0028 264B     		ldr	r3, .L157+16
 2449 002a 1A70     		strb	r2, [r3]
 767:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2450              		.loc 1 767 0
 2451 002c FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2452 0030 0346     		mov	r3, r0
 2453 0032 1A46     		mov	r2, r3
 2454 0034 224B     		ldr	r3, .L157+12
 2455 0036 1A70     		strb	r2, [r3]
 768:main.c        ****     // move robot depending on sensors
 769:main.c        ****     switch (currentDirection) {
 2456              		.loc 1 769 0
 2457 0038 214B     		ldr	r3, .L157+12
 2458 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2459 003c 0A2B     		cmp	r3, #10
 2460 003e 35D8     		bhi	.L155
 2461 0040 01A2     		adr	r2, .L144
 2462 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2463 0046 00BF     		.p2align 2
 2464              	.L144:
 2465 0048 75000000 		.word	.L143+1
 2466 004c 7B000000 		.word	.L145+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 58


 2467 0050 81000000 		.word	.L146+1
 2468 0054 8D000000 		.word	.L147+1
 2469 0058 87000000 		.word	.L148+1
 2470 005c 93000000 		.word	.L149+1
 2471 0060 AB000000 		.word	.L156+1
 2472 0064 AB000000 		.word	.L156+1
 2473 0068 99000000 		.word	.L152+1
 2474 006c 9F000000 		.word	.L153+1
 2475 0070 A5000000 		.word	.L154+1
 2476              		.p2align 1
 2477              	.L143:
 770:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 771:main.c        ****         case Forward:
 772:main.c        ****             moveForward();
 2478              		.loc 1 772 0
 2479 0074 FFF7FEFF 		bl	moveForward
 773:main.c        ****             break;
 2480              		.loc 1 773 0
 2481 0078 18E0     		b	.L142
 2482              	.L145:
 774:main.c        ****         case TurnRight:
 775:main.c        ****             turnRight();
 2483              		.loc 1 775 0
 2484 007a FFF7FEFF 		bl	turnRight
 776:main.c        ****             break;
 2485              		.loc 1 776 0
 2486 007e 15E0     		b	.L142
 2487              	.L146:
 777:main.c        ****         case TurnLeft:
 778:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2488              		.loc 1 778 0
 2489 0080 FFF7FEFF 		bl	turnLeft
 779:main.c        ****             break;
 2490              		.loc 1 779 0
 2491 0084 12E0     		b	.L142
 2492              	.L148:
 780:main.c        ****         case AdjustToTheRight:
 781:main.c        ****             adjustRight();
 2493              		.loc 1 781 0
 2494 0086 FFF7FEFF 		bl	adjustRight
 782:main.c        ****             break;
 2495              		.loc 1 782 0
 2496 008a 0FE0     		b	.L142
 2497              	.L147:
 783:main.c        ****         case AdjustToTheLeft:
 784:main.c        ****             adjustLeft();
 2498              		.loc 1 784 0
 2499 008c FFF7FEFF 		bl	adjustLeft
 785:main.c        ****             break;
 2500              		.loc 1 785 0
 2501 0090 0CE0     		b	.L142
 2502              	.L149:
 786:main.c        ****         case Stop:
 787:main.c        ****             stopMoving();
 2503              		.loc 1 787 0
 2504 0092 FFF7FEFF 		bl	stopMoving
 788:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 59


 2505              		.loc 1 788 0
 2506 0096 09E0     		b	.L142
 2507              	.L152:
 789:main.c        ****         case ForwardAfterTurn:
 790:main.c        ****             moveForward();
 2508              		.loc 1 790 0
 2509 0098 FFF7FEFF 		bl	moveForward
 791:main.c        ****             break;
 2510              		.loc 1 791 0
 2511 009c 06E0     		b	.L142
 2512              	.L153:
 792:main.c        ****         case Backward:
 793:main.c        ****             moveBackward();
 2513              		.loc 1 793 0
 2514 009e FFF7FEFF 		bl	moveBackward
 794:main.c        ****             break;
 2515              		.loc 1 794 0
 2516 00a2 03E0     		b	.L142
 2517              	.L154:
 795:main.c        ****         case waitForTurn:
 796:main.c        ****             break;
 797:main.c        ****         case Spin180:
 798:main.c        ****             RotateClockwise180Degrees();
 2518              		.loc 1 798 0
 2519 00a4 FFF7FEFF 		bl	RotateClockwise180Degrees
 799:main.c        ****             break;
 2520              		.loc 1 799 0
 2521 00a8 00E0     		b	.L142
 2522              	.L156:
 800:main.c        ****         /*case waitForLeftTurn:
 801:main.c        ****             moveForward();
 802:main.c        ****             break;
 803:main.c        ****         case waitForRightTurn:
 804:main.c        ****             moveForward();
 805:main.c        ****             break;*/
 806:main.c        ****         case Unknown:
 807:main.c        ****             // UNKNOWN CONFIGURATION
 808:main.c        ****             break;  
 2523              		.loc 1 808 0
 2524 00aa 00BF     		nop
 2525              	.L142:
 2526              	.L155:
 809:main.c        ****     }
 810:main.c        **** }
 2527              		.loc 1 810 0
 2528 00ac 00BF     		nop
 2529 00ae 1837     		adds	r7, r7, #24
 2530              		.cfi_def_cfa_offset 16
 2531 00b0 BD46     		mov	sp, r7
 2532              		.cfi_def_cfa_register 13
 2533              		@ sp needed
 2534 00b2 B0BD     		pop	{r4, r5, r7, pc}
 2535              	.L158:
 2536              		.align	2
 2537              	.L157:
 2538 00b4 00000000 		.word	numSteps
 2539 00b8 00000000 		.word	instructionList
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 60


 2540 00bc 00000000 		.word	currentInstruction
 2541 00c0 00000000 		.word	currentDirection
 2542 00c4 00000000 		.word	previousDirection
 2543              		.cfi_endproc
 2544              	.LFE79:
 2545              		.size	SetRobotMovement, .-SetRobotMovement
 2546              		.text
 2547              	.Letext0:
 2548              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2549              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2550              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2551              		.file 5 "vars.h"
 2552              		.file 6 "pathfinding.h"
 2553              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2554              		.file 8 "map.h"
 2555              		.section	.debug_info,"",%progbits
 2556              	.Ldebug_info0:
 2557 0000 A0090000 		.4byte	0x9a0
 2558 0004 0400     		.2byte	0x4
 2559 0006 00000000 		.4byte	.Ldebug_abbrev0
 2560 000a 04       		.byte	0x4
 2561 000b 01       		.uleb128 0x1
 2562 000c A2000000 		.4byte	.LASF153
 2563 0010 0C       		.byte	0xc
 2564 0011 30000000 		.4byte	.LASF154
 2565 0015 AD030000 		.4byte	.LASF155
 2566 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2567 001d 00000000 		.4byte	0
 2568 0021 00000000 		.4byte	.Ldebug_line0
 2569 0025 02       		.uleb128 0x2
 2570 0026 01       		.byte	0x1
 2571 0027 06       		.byte	0x6
 2572 0028 CA070000 		.4byte	.LASF0
 2573 002c 02       		.uleb128 0x2
 2574 002d 01       		.byte	0x1
 2575 002e 08       		.byte	0x8
 2576 002f 1C070000 		.4byte	.LASF1
 2577 0033 02       		.uleb128 0x2
 2578 0034 02       		.byte	0x2
 2579 0035 05       		.byte	0x5
 2580 0036 E7050000 		.4byte	.LASF2
 2581 003a 02       		.uleb128 0x2
 2582 003b 02       		.byte	0x2
 2583 003c 07       		.byte	0x7
 2584 003d F6070000 		.4byte	.LASF3
 2585 0041 03       		.uleb128 0x3
 2586 0042 75000000 		.4byte	.LASF12
 2587 0046 02       		.byte	0x2
 2588 0047 3F       		.byte	0x3f
 2589 0048 4C000000 		.4byte	0x4c
 2590 004c 02       		.uleb128 0x2
 2591 004d 04       		.byte	0x4
 2592 004e 05       		.byte	0x5
 2593 004f FD050000 		.4byte	.LASF4
 2594 0053 02       		.uleb128 0x2
 2595 0054 04       		.byte	0x4
 2596 0055 07       		.byte	0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 61


 2597 0056 C6060000 		.4byte	.LASF5
 2598 005a 02       		.uleb128 0x2
 2599 005b 08       		.byte	0x8
 2600 005c 05       		.byte	0x5
 2601 005d A0040000 		.4byte	.LASF6
 2602 0061 02       		.uleb128 0x2
 2603 0062 08       		.byte	0x8
 2604 0063 07       		.byte	0x7
 2605 0064 BE020000 		.4byte	.LASF7
 2606 0068 04       		.uleb128 0x4
 2607 0069 04       		.byte	0x4
 2608 006a 05       		.byte	0x5
 2609 006b 696E7400 		.ascii	"int\000"
 2610 006f 02       		.uleb128 0x2
 2611 0070 04       		.byte	0x4
 2612 0071 07       		.byte	0x7
 2613 0072 68000000 		.4byte	.LASF8
 2614 0076 02       		.uleb128 0x2
 2615 0077 08       		.byte	0x8
 2616 0078 04       		.byte	0x4
 2617 0079 AB050000 		.4byte	.LASF9
 2618 007d 02       		.uleb128 0x2
 2619 007e 04       		.byte	0x4
 2620 007f 07       		.byte	0x7
 2621 0080 BD060000 		.4byte	.LASF10
 2622 0084 02       		.uleb128 0x2
 2623 0085 01       		.byte	0x1
 2624 0086 08       		.byte	0x8
 2625 0087 A8030000 		.4byte	.LASF11
 2626 008b 03       		.uleb128 0x3
 2627 008c F5060000 		.4byte	.LASF13
 2628 0090 03       		.byte	0x3
 2629 0091 2C       		.byte	0x2c
 2630 0092 41000000 		.4byte	0x41
 2631 0096 05       		.uleb128 0x5
 2632 0097 4C080000 		.4byte	.LASF14
 2633 009b 04       		.byte	0x4
 2634 009c E701     		.2byte	0x1e7
 2635 009e 2C000000 		.4byte	0x2c
 2636 00a2 05       		.uleb128 0x5
 2637 00a3 37040000 		.4byte	.LASF15
 2638 00a7 04       		.byte	0x4
 2639 00a8 E801     		.2byte	0x1e8
 2640 00aa 3A000000 		.4byte	0x3a
 2641 00ae 05       		.uleb128 0x5
 2642 00af 53050000 		.4byte	.LASF16
 2643 00b3 04       		.byte	0x4
 2644 00b4 E901     		.2byte	0x1e9
 2645 00b6 53000000 		.4byte	0x53
 2646 00ba 05       		.uleb128 0x5
 2647 00bb 3E040000 		.4byte	.LASF17
 2648 00bf 04       		.byte	0x4
 2649 00c0 EA01     		.2byte	0x1ea
 2650 00c2 25000000 		.4byte	0x25
 2651 00c6 05       		.uleb128 0x5
 2652 00c7 7F000000 		.4byte	.LASF18
 2653 00cb 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 62


 2654 00cc EB01     		.2byte	0x1eb
 2655 00ce 33000000 		.4byte	0x33
 2656 00d2 02       		.uleb128 0x2
 2657 00d3 04       		.byte	0x4
 2658 00d4 04       		.byte	0x4
 2659 00d5 86020000 		.4byte	.LASF19
 2660 00d9 02       		.uleb128 0x2
 2661 00da 08       		.byte	0x8
 2662 00db 04       		.byte	0x4
 2663 00dc 52080000 		.4byte	.LASF20
 2664 00e0 06       		.uleb128 0x6
 2665 00e1 96000000 		.4byte	0x96
 2666 00e5 06       		.uleb128 0x6
 2667 00e6 AE000000 		.4byte	0xae
 2668 00ea 07       		.uleb128 0x7
 2669 00eb 96000000 		.4byte	0x96
 2670 00ef FA000000 		.4byte	0xfa
 2671 00f3 08       		.uleb128 0x8
 2672 00f4 7D000000 		.4byte	0x7d
 2673 00f8 03       		.byte	0x3
 2674 00f9 00       		.byte	0
 2675 00fa 09       		.uleb128 0x9
 2676 00fb 75050000 		.4byte	.LASF50
 2677 00ff 20       		.byte	0x20
 2678 0100 05       		.byte	0x5
 2679 0101 28       		.byte	0x28
 2680 0102 D3010000 		.4byte	0x1d3
 2681 0106 0A       		.uleb128 0xa
 2682 0107 7F050000 		.4byte	.LASF21
 2683 010b 05       		.byte	0x5
 2684 010c 2A       		.byte	0x2a
 2685 010d BA000000 		.4byte	0xba
 2686 0111 00       		.byte	0
 2687 0112 0A       		.uleb128 0xa
 2688 0113 B8020000 		.4byte	.LASF22
 2689 0117 05       		.byte	0x5
 2690 0118 2B       		.byte	0x2b
 2691 0119 96000000 		.4byte	0x96
 2692 011d 01       		.byte	0x1
 2693 011e 0A       		.uleb128 0xa
 2694 011f FD060000 		.4byte	.LASF23
 2695 0123 05       		.byte	0x5
 2696 0124 2C       		.byte	0x2c
 2697 0125 C6000000 		.4byte	0xc6
 2698 0129 02       		.byte	0x2
 2699 012a 0A       		.uleb128 0xa
 2700 012b 84030000 		.4byte	.LASF24
 2701 012f 05       		.byte	0x5
 2702 0130 2D       		.byte	0x2d
 2703 0131 C6000000 		.4byte	0xc6
 2704 0135 04       		.byte	0x4
 2705 0136 0A       		.uleb128 0xa
 2706 0137 09080000 		.4byte	.LASF25
 2707 013b 05       		.byte	0x5
 2708 013c 2E       		.byte	0x2e
 2709 013d C6000000 		.4byte	0xc6
 2710 0141 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 63


 2711 0142 0A       		.uleb128 0xa
 2712 0143 7E080000 		.4byte	.LASF26
 2713 0147 05       		.byte	0x5
 2714 0148 2F       		.byte	0x2f
 2715 0149 C6000000 		.4byte	0xc6
 2716 014d 08       		.byte	0x8
 2717 014e 0A       		.uleb128 0xa
 2718 014f 11050000 		.4byte	.LASF27
 2719 0153 05       		.byte	0x5
 2720 0154 30       		.byte	0x30
 2721 0155 C6000000 		.4byte	0xc6
 2722 0159 0A       		.byte	0xa
 2723 015a 0A       		.uleb128 0xa
 2724 015b FE030000 		.4byte	.LASF28
 2725 015f 05       		.byte	0x5
 2726 0160 31       		.byte	0x31
 2727 0161 C6000000 		.4byte	0xc6
 2728 0165 0C       		.byte	0xc
 2729 0166 0A       		.uleb128 0xa
 2730 0167 84050000 		.4byte	.LASF29
 2731 016b 05       		.byte	0x5
 2732 016c 32       		.byte	0x32
 2733 016d C6000000 		.4byte	0xc6
 2734 0171 0E       		.byte	0xe
 2735 0172 0A       		.uleb128 0xa
 2736 0173 AE040000 		.4byte	.LASF30
 2737 0177 05       		.byte	0x5
 2738 0178 33       		.byte	0x33
 2739 0179 C6000000 		.4byte	0xc6
 2740 017d 10       		.byte	0x10
 2741 017e 0A       		.uleb128 0xa
 2742 017f 7D060000 		.4byte	.LASF31
 2743 0183 05       		.byte	0x5
 2744 0184 34       		.byte	0x34
 2745 0185 C6000000 		.4byte	0xc6
 2746 0189 12       		.byte	0x12
 2747 018a 0A       		.uleb128 0xa
 2748 018b 9E080000 		.4byte	.LASF32
 2749 018f 05       		.byte	0x5
 2750 0190 35       		.byte	0x35
 2751 0191 C6000000 		.4byte	0xc6
 2752 0195 14       		.byte	0x14
 2753 0196 0A       		.uleb128 0xa
 2754 0197 4E040000 		.4byte	.LASF33
 2755 019b 05       		.byte	0x5
 2756 019c 36       		.byte	0x36
 2757 019d C6000000 		.4byte	0xc6
 2758 01a1 16       		.byte	0x16
 2759 01a2 0A       		.uleb128 0xa
 2760 01a3 90010000 		.4byte	.LASF34
 2761 01a7 05       		.byte	0x5
 2762 01a8 37       		.byte	0x37
 2763 01a9 C6000000 		.4byte	0xc6
 2764 01ad 18       		.byte	0x18
 2765 01ae 0A       		.uleb128 0xa
 2766 01af 43060000 		.4byte	.LASF35
 2767 01b3 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 64


 2768 01b4 38       		.byte	0x38
 2769 01b5 C6000000 		.4byte	0xc6
 2770 01b9 1A       		.byte	0x1a
 2771 01ba 0A       		.uleb128 0xa
 2772 01bb 08050000 		.4byte	.LASF36
 2773 01bf 05       		.byte	0x5
 2774 01c0 39       		.byte	0x39
 2775 01c1 C6000000 		.4byte	0xc6
 2776 01c5 1C       		.byte	0x1c
 2777 01c6 0A       		.uleb128 0xa
 2778 01c7 4F020000 		.4byte	.LASF37
 2779 01cb 05       		.byte	0x5
 2780 01cc 3A       		.byte	0x3a
 2781 01cd C6000000 		.4byte	0xc6
 2782 01d1 1E       		.byte	0x1e
 2783 01d2 00       		.byte	0
 2784 01d3 0B       		.uleb128 0xb
 2785 01d4 61060000 		.4byte	.LASF41
 2786 01d8 01       		.byte	0x1
 2787 01d9 2C000000 		.4byte	0x2c
 2788 01dd 06       		.byte	0x6
 2789 01de 0D       		.byte	0xd
 2790 01df FB010000 		.4byte	0x1fb
 2791 01e3 0C       		.uleb128 0xc
 2792 01e4 557000   		.ascii	"Up\000"
 2793 01e7 00       		.byte	0
 2794 01e8 0D       		.uleb128 0xd
 2795 01e9 72060000 		.4byte	.LASF38
 2796 01ed 01       		.byte	0x1
 2797 01ee 0D       		.uleb128 0xd
 2798 01ef 15030000 		.4byte	.LASF39
 2799 01f3 02       		.byte	0x2
 2800 01f4 0D       		.uleb128 0xd
 2801 01f5 77060000 		.4byte	.LASF40
 2802 01f9 03       		.byte	0x3
 2803 01fa 00       		.byte	0
 2804 01fb 0B       		.uleb128 0xb
 2805 01fc 1B000000 		.4byte	.LASF42
 2806 0200 01       		.byte	0x1
 2807 0201 2C000000 		.4byte	0x2c
 2808 0205 06       		.byte	0x6
 2809 0206 0E       		.byte	0xe
 2810 0207 36020000 		.4byte	0x236
 2811 020b 0D       		.uleb128 0xd
 2812 020c B4070000 		.4byte	.LASF43
 2813 0210 00       		.byte	0
 2814 0211 0D       		.uleb128 0xd
 2815 0212 90040000 		.4byte	.LASF44
 2816 0216 01       		.byte	0x1
 2817 0217 0D       		.uleb128 0xd
 2818 0218 5A050000 		.4byte	.LASF45
 2819 021c 02       		.byte	0x2
 2820 021d 0D       		.uleb128 0xd
 2821 021e E8040000 		.4byte	.LASF46
 2822 0222 03       		.byte	0x3
 2823 0223 0D       		.uleb128 0xd
 2824 0224 30010000 		.4byte	.LASF47
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 65


 2825 0228 04       		.byte	0x4
 2826 0229 0D       		.uleb128 0xd
 2827 022a 6B030000 		.4byte	.LASF48
 2828 022e 05       		.byte	0x5
 2829 022f 0D       		.uleb128 0xd
 2830 0230 A1070000 		.4byte	.LASF49
 2831 0234 06       		.byte	0x6
 2832 0235 00       		.byte	0
 2833 0236 09       		.uleb128 0x9
 2834 0237 D5020000 		.4byte	.LASF51
 2835 023b 14       		.byte	0x14
 2836 023c 06       		.byte	0x6
 2837 023d 10       		.byte	0x10
 2838 023e 7F020000 		.4byte	0x27f
 2839 0242 0A       		.uleb128 0xa
 2840 0243 00000000 		.4byte	.LASF52
 2841 0247 06       		.byte	0x6
 2842 0248 11       		.byte	0x11
 2843 0249 FB010000 		.4byte	0x1fb
 2844 024d 00       		.byte	0
 2845 024e 0A       		.uleb128 0xa
 2846 024f A7080000 		.4byte	.LASF53
 2847 0253 06       		.byte	0x6
 2848 0254 12       		.byte	0x12
 2849 0255 68000000 		.4byte	0x68
 2850 0259 04       		.byte	0x4
 2851 025a 0A       		.uleb128 0xa
 2852 025b AF080000 		.4byte	.LASF54
 2853 025f 06       		.byte	0x6
 2854 0260 13       		.byte	0x13
 2855 0261 68000000 		.4byte	0x68
 2856 0265 08       		.byte	0x8
 2857 0266 0A       		.uleb128 0xa
 2858 0267 B6010000 		.4byte	.LASF55
 2859 026b 06       		.byte	0x6
 2860 026c 14       		.byte	0x14
 2861 026d 68000000 		.4byte	0x68
 2862 0271 0C       		.byte	0xc
 2863 0272 0A       		.uleb128 0xa
 2864 0273 4D010000 		.4byte	.LASF56
 2865 0277 06       		.byte	0x6
 2866 0278 15       		.byte	0x15
 2867 0279 D3010000 		.4byte	0x1d3
 2868 027d 10       		.byte	0x10
 2869 027e 00       		.byte	0
 2870 027f 03       		.uleb128 0x3
 2871 0280 D5020000 		.4byte	.LASF51
 2872 0284 06       		.byte	0x6
 2873 0285 16       		.byte	0x16
 2874 0286 36020000 		.4byte	0x236
 2875 028a 0B       		.uleb128 0xb
 2876 028b 0E070000 		.4byte	.LASF57
 2877 028f 01       		.byte	0x1
 2878 0290 2C000000 		.4byte	0x2c
 2879 0294 01       		.byte	0x1
 2880 0295 18       		.byte	0x18
 2881 0296 DD020000 		.4byte	0x2dd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 66


 2882 029a 0D       		.uleb128 0xd
 2883 029b 29060000 		.4byte	.LASF58
 2884 029f 00       		.byte	0
 2885 02a0 0D       		.uleb128 0xd
 2886 02a1 6B050000 		.4byte	.LASF59
 2887 02a5 01       		.byte	0x1
 2888 02a6 0D       		.uleb128 0xd
 2889 02a7 23050000 		.4byte	.LASF60
 2890 02ab 02       		.byte	0x2
 2891 02ac 0D       		.uleb128 0xd
 2892 02ad 33080000 		.4byte	.LASF61
 2893 02b1 03       		.byte	0x3
 2894 02b2 0D       		.uleb128 0xd
 2895 02b3 40070000 		.4byte	.LASF62
 2896 02b7 04       		.byte	0x4
 2897 02b8 0D       		.uleb128 0xd
 2898 02b9 51070000 		.4byte	.LASF63
 2899 02bd 05       		.byte	0x5
 2900 02be 0D       		.uleb128 0xd
 2901 02bf 4B050000 		.4byte	.LASF64
 2902 02c3 06       		.byte	0x6
 2903 02c4 0D       		.uleb128 0xd
 2904 02c5 78030000 		.4byte	.LASF65
 2905 02c9 07       		.byte	0x7
 2906 02ca 0D       		.uleb128 0xd
 2907 02cb 0A000000 		.4byte	.LASF66
 2908 02cf 08       		.byte	0x8
 2909 02d0 0D       		.uleb128 0xd
 2910 02d1 43080000 		.4byte	.LASF67
 2911 02d5 09       		.byte	0x9
 2912 02d6 0D       		.uleb128 0xd
 2913 02d7 A3050000 		.4byte	.LASF68
 2914 02db 0A       		.byte	0xa
 2915 02dc 00       		.byte	0
 2916 02dd 0E       		.uleb128 0xe
 2917 02de 74040000 		.4byte	.LASF78
 2918 02e2 01       		.byte	0x1
 2919 02e3 51       		.byte	0x51
 2920 02e4 00000000 		.4byte	.LFB64
 2921 02e8 EC000000 		.4byte	.LFE64-.LFB64
 2922 02ec 01       		.uleb128 0x1
 2923 02ed 9C       		.byte	0x9c
 2924 02ee 0B030000 		.4byte	0x30b
 2925 02f2 0F       		.uleb128 0xf
 2926 02f3 50000000 		.4byte	.LBB2
 2927 02f7 62000000 		.4byte	.LBE2-.LBB2
 2928 02fb 10       		.uleb128 0x10
 2929 02fc FC040000 		.4byte	.LASF75
 2930 0300 01       		.byte	0x1
 2931 0301 5E       		.byte	0x5e
 2932 0302 D2000000 		.4byte	0xd2
 2933 0306 02       		.uleb128 0x2
 2934 0307 91       		.byte	0x91
 2935 0308 6C       		.sleb128 -20
 2936 0309 00       		.byte	0
 2937 030a 00       		.byte	0
 2938 030b 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 67


 2939 030c 68040000 		.4byte	.LASF69
 2940 0310 01       		.byte	0x1
 2941 0311 69       		.byte	0x69
 2942 0312 00000000 		.4byte	.LFB65
 2943 0316 18000000 		.4byte	.LFE65-.LFB65
 2944 031a 01       		.uleb128 0x1
 2945 031b 9C       		.byte	0x9c
 2946 031c 11       		.uleb128 0x11
 2947 031d F1050000 		.4byte	.LASF70
 2948 0321 01       		.byte	0x1
 2949 0322 6F       		.byte	0x6f
 2950 0323 00000000 		.4byte	.LFB66
 2951 0327 18000000 		.4byte	.LFE66-.LFB66
 2952 032b 01       		.uleb128 0x1
 2953 032c 9C       		.byte	0x9c
 2954 032d 11       		.uleb128 0x11
 2955 032e BE070000 		.4byte	.LASF71
 2956 0332 01       		.byte	0x1
 2957 0333 75       		.byte	0x75
 2958 0334 00000000 		.4byte	.LFB67
 2959 0338 18000000 		.4byte	.LFE67-.LFB67
 2960 033c 01       		.uleb128 0x1
 2961 033d 9C       		.byte	0x9c
 2962 033e 11       		.uleb128 0x11
 2963 033f 76010000 		.4byte	.LASF72
 2964 0343 01       		.byte	0x1
 2965 0344 7B       		.byte	0x7b
 2966 0345 00000000 		.4byte	.LFB68
 2967 0349 18000000 		.4byte	.LFE68-.LFB68
 2968 034d 01       		.uleb128 0x1
 2969 034e 9C       		.byte	0x9c
 2970 034f 12       		.uleb128 0x12
 2971 0350 FE020000 		.4byte	.LASF73
 2972 0354 01       		.byte	0x1
 2973 0355 81       		.byte	0x81
 2974 0356 00000000 		.4byte	.LFB69
 2975 035a 68000000 		.4byte	.LFE69-.LFB69
 2976 035e 01       		.uleb128 0x1
 2977 035f 9C       		.byte	0x9c
 2978 0360 13       		.uleb128 0x13
 2979 0361 1B080000 		.4byte	.LASF74
 2980 0365 01       		.byte	0x1
 2981 0366 92       		.byte	0x92
 2982 0367 68000000 		.4byte	0x68
 2983 036b 00000000 		.4byte	.LFB70
 2984 036f 2C010000 		.4byte	.LFE70-.LFB70
 2985 0373 01       		.uleb128 0x1
 2986 0374 9C       		.byte	0x9c
 2987 0375 14       		.uleb128 0x14
 2988 0376 44030000 		.4byte	.LASF84
 2989 037a 01       		.byte	0x1
 2990 037b C8       		.byte	0xc8
 2991 037c C6000000 		.4byte	0xc6
 2992 0380 00000000 		.4byte	.LFB71
 2993 0384 54000000 		.4byte	.LFE71-.LFB71
 2994 0388 01       		.uleb128 0x1
 2995 0389 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 68


 2996 038a B9030000 		.4byte	0x3b9
 2997 038e 15       		.uleb128 0x15
 2998 038f B2020000 		.4byte	.LASF86
 2999 0393 01       		.byte	0x1
 3000 0394 C8       		.byte	0xc8
 3001 0395 A2000000 		.4byte	0xa2
 3002 0399 02       		.uleb128 0x2
 3003 039a 91       		.byte	0x91
 3004 039b 66       		.sleb128 -26
 3005 039c 16       		.uleb128 0x16
 3006 039d 63707300 		.ascii	"cps\000"
 3007 03a1 01       		.byte	0x1
 3008 03a2 C9       		.byte	0xc9
 3009 03a3 D2000000 		.4byte	0xd2
 3010 03a7 02       		.uleb128 0x2
 3011 03a8 91       		.byte	0x91
 3012 03a9 6C       		.sleb128 -20
 3013 03aa 16       		.uleb128 0x16
 3014 03ab 72706D00 		.ascii	"rpm\000"
 3015 03af 01       		.byte	0x1
 3016 03b0 CA       		.byte	0xca
 3017 03b1 C6000000 		.4byte	0xc6
 3018 03b5 02       		.uleb128 0x2
 3019 03b6 91       		.byte	0x91
 3020 03b7 6A       		.sleb128 -22
 3021 03b8 00       		.byte	0
 3022 03b9 17       		.uleb128 0x17
 3023 03ba 3E020000 		.4byte	.LASF82
 3024 03be 01       		.byte	0x1
 3025 03bf D2       		.byte	0xd2
 3026 03c0 00000000 		.4byte	.LFB72
 3027 03c4 34000000 		.4byte	.LFE72-.LFB72
 3028 03c8 01       		.uleb128 0x1
 3029 03c9 9C       		.byte	0x9c
 3030 03ca 18       		.uleb128 0x18
 3031 03cb 0E020000 		.4byte	.LASF76
 3032 03cf 01       		.byte	0x1
 3033 03d0 E3       		.byte	0xe3
 3034 03d1 8A020000 		.4byte	0x28a
 3035 03d5 00000000 		.4byte	.LFB73
 3036 03d9 84000000 		.4byte	.LFE73-.LFB73
 3037 03dd 01       		.uleb128 0x1
 3038 03de 9C       		.byte	0x9c
 3039 03df 19       		.uleb128 0x19
 3040 03e0 61010000 		.4byte	.LASF77
 3041 03e4 01       		.byte	0x1
 3042 03e5 0901     		.2byte	0x109
 3043 03e7 8A020000 		.4byte	0x28a
 3044 03eb 00000000 		.4byte	.LFB74
 3045 03ef 7C000000 		.4byte	.LFE74-.LFB74
 3046 03f3 01       		.uleb128 0x1
 3047 03f4 9C       		.byte	0x9c
 3048 03f5 1A       		.uleb128 0x1a
 3049 03f6 D0010000 		.4byte	.LASF79
 3050 03fa 01       		.byte	0x1
 3051 03fb 2701     		.2byte	0x127
 3052 03fd 8A020000 		.4byte	0x28a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 69


 3053 0401 00000000 		.4byte	.LFB75
 3054 0405 98050000 		.4byte	.LFE75-.LFB75
 3055 0409 01       		.uleb128 0x1
 3056 040a 9C       		.byte	0x9c
 3057 040b 2E040000 		.4byte	0x42e
 3058 040f 1B       		.uleb128 0x1b
 3059 0410 57000000 		.4byte	.LASF80
 3060 0414 01       		.byte	0x1
 3061 0415 2801     		.2byte	0x128
 3062 0417 D2000000 		.4byte	0xd2
 3063 041b 02       		.uleb128 0x2
 3064 041c 91       		.byte	0x91
 3065 041d 6C       		.sleb128 -20
 3066 041e 1B       		.uleb128 0x1b
 3067 041f 8C020000 		.4byte	.LASF81
 3068 0423 01       		.byte	0x1
 3069 0424 3701     		.2byte	0x137
 3070 0426 FB010000 		.4byte	0x1fb
 3071 042a 02       		.uleb128 0x2
 3072 042b 91       		.byte	0x91
 3073 042c 6B       		.sleb128 -21
 3074 042d 00       		.byte	0
 3075 042e 1C       		.uleb128 0x1c
 3076 042f 4B060000 		.4byte	.LASF83
 3077 0433 01       		.byte	0x1
 3078 0434 A202     		.2byte	0x2a2
 3079 0436 00000000 		.4byte	.LFB76
 3080 043a 68000000 		.4byte	.LFE76-.LFB76
 3081 043e 01       		.uleb128 0x1
 3082 043f 9C       		.byte	0x9c
 3083 0440 1D       		.uleb128 0x1d
 3084 0441 56070000 		.4byte	.LASF85
 3085 0445 01       		.byte	0x1
 3086 0446 B402     		.2byte	0x2b4
 3087 0448 7F020000 		.4byte	0x27f
 3088 044c 00000000 		.4byte	.LFB77
 3089 0450 58000000 		.4byte	.LFE77-.LFB77
 3090 0454 01       		.uleb128 0x1
 3091 0455 9C       		.byte	0x9c
 3092 0456 88040000 		.4byte	0x488
 3093 045a 1E       		.uleb128 0x1e
 3094 045b C7010000 		.4byte	.LASF87
 3095 045f 01       		.byte	0x1
 3096 0460 B402     		.2byte	0x2b4
 3097 0462 68000000 		.4byte	0x68
 3098 0466 02       		.uleb128 0x2
 3099 0467 91       		.byte	0x91
 3100 0468 50       		.sleb128 -48
 3101 0469 1E       		.uleb128 0x1e
 3102 046a 16040000 		.4byte	.LASF88
 3103 046e 01       		.byte	0x1
 3104 046f B402     		.2byte	0x2b4
 3105 0471 88040000 		.4byte	0x488
 3106 0475 02       		.uleb128 0x2
 3107 0476 91       		.byte	0x91
 3108 0477 4C       		.sleb128 -52
 3109 0478 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 70


 3110 0479 92000000 		.4byte	.LASF89
 3111 047d 01       		.byte	0x1
 3112 047e B502     		.2byte	0x2b5
 3113 0480 7F020000 		.4byte	0x27f
 3114 0484 02       		.uleb128 0x2
 3115 0485 91       		.byte	0x91
 3116 0486 5C       		.sleb128 -36
 3117 0487 00       		.byte	0
 3118 0488 1F       		.uleb128 0x1f
 3119 0489 04       		.byte	0x4
 3120 048a 7F020000 		.4byte	0x27f
 3121 048e 20       		.uleb128 0x20
 3122 048f 64080000 		.4byte	.LASF156
 3123 0493 01       		.byte	0x1
 3124 0494 C602     		.2byte	0x2c6
 3125 0496 00000000 		.4byte	.LFB78
 3126 049a 3C010000 		.4byte	.LFE78-.LFB78
 3127 049e 01       		.uleb128 0x1
 3128 049f 9C       		.byte	0x9c
 3129 04a0 D2040000 		.4byte	0x4d2
 3130 04a4 1B       		.uleb128 0x1b
 3131 04a5 EE040000 		.4byte	.LASF90
 3132 04a9 01       		.byte	0x1
 3133 04aa C702     		.2byte	0x2c7
 3134 04ac A2000000 		.4byte	0xa2
 3135 04b0 02       		.uleb128 0x2
 3136 04b1 91       		.byte	0x91
 3137 04b2 72       		.sleb128 -14
 3138 04b3 1B       		.uleb128 0x1b
 3139 04b4 F5040000 		.4byte	.LASF91
 3140 04b8 01       		.byte	0x1
 3141 04b9 C802     		.2byte	0x2c8
 3142 04bb A2000000 		.4byte	0xa2
 3143 04bf 02       		.uleb128 0x2
 3144 04c0 91       		.byte	0x91
 3145 04c1 70       		.sleb128 -16
 3146 04c2 1B       		.uleb128 0x1b
 3147 04c3 07040000 		.4byte	.LASF92
 3148 04c7 01       		.byte	0x1
 3149 04c8 CC02     		.2byte	0x2cc
 3150 04ca 68000000 		.4byte	0x68
 3151 04ce 02       		.uleb128 0x2
 3152 04cf 91       		.byte	0x91
 3153 04d0 74       		.sleb128 -12
 3154 04d1 00       		.byte	0
 3155 04d2 21       		.uleb128 0x21
 3156 04d3 ED020000 		.4byte	.LASF93
 3157 04d7 01       		.byte	0x1
 3158 04d8 FC02     		.2byte	0x2fc
 3159 04da 00000000 		.4byte	.LFB79
 3160 04de C8000000 		.4byte	.LFE79-.LFB79
 3161 04e2 01       		.uleb128 0x1
 3162 04e3 9C       		.byte	0x9c
 3163 04e4 10       		.uleb128 0x10
 3164 04e5 26040000 		.4byte	.LASF94
 3165 04e9 01       		.byte	0x1
 3166 04ea 20       		.byte	0x20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 71


 3167 04eb E5000000 		.4byte	0xe5
 3168 04ef 05       		.uleb128 0x5
 3169 04f0 03       		.byte	0x3
 3170 04f1 14000000 		.4byte	instructionIndex
 3171 04f5 10       		.uleb128 0x10
 3172 04f6 47000000 		.4byte	.LASF95
 3173 04fa 01       		.byte	0x1
 3174 04fb 34       		.byte	0x34
 3175 04fc E0000000 		.4byte	0xe0
 3176 0500 05       		.uleb128 0x5
 3177 0501 03       		.byte	0x3
 3178 0502 36000000 		.4byte	turnStartedFlag
 3179 0506 10       		.uleb128 0x10
 3180 0507 7F040000 		.4byte	.LASF96
 3181 050b 01       		.byte	0x1
 3182 050c 35       		.byte	0x35
 3183 050d E0000000 		.4byte	0xe0
 3184 0511 05       		.uleb128 0x5
 3185 0512 03       		.byte	0x3
 3186 0513 37000000 		.4byte	turnFinishedFlag
 3187 0517 10       		.uleb128 0x10
 3188 0518 98010000 		.4byte	.LASF97
 3189 051c 01       		.byte	0x1
 3190 051d 37       		.byte	0x37
 3191 051e E0000000 		.4byte	0xe0
 3192 0522 05       		.uleb128 0x5
 3193 0523 03       		.byte	0x3
 3194 0524 38000000 		.4byte	forwardUntilTargetStartedFlag
 3195 0528 10       		.uleb128 0x10
 3196 0529 96060000 		.4byte	.LASF98
 3197 052d 01       		.byte	0x1
 3198 052e 38       		.byte	0x38
 3199 052f E0000000 		.4byte	0xe0
 3200 0533 05       		.uleb128 0x5
 3201 0534 03       		.byte	0x3
 3202 0535 39000000 		.4byte	uTurnStartedFlag
 3203 0539 10       		.uleb128 0x10
 3204 053a E3060000 		.4byte	.LASF99
 3205 053e 01       		.byte	0x1
 3206 053f 39       		.byte	0x39
 3207 0540 E0000000 		.4byte	0xe0
 3208 0544 05       		.uleb128 0x5
 3209 0545 03       		.byte	0x3
 3210 0546 3A000000 		.4byte	uTurnFinishedFlag
 3211 054a 10       		.uleb128 0x10
 3212 054b 35030000 		.4byte	.LASF100
 3213 054f 01       		.byte	0x1
 3214 0550 3B       		.byte	0x3b
 3215 0551 E0000000 		.4byte	0xe0
 3216 0555 05       		.uleb128 0x5
 3217 0556 03       		.byte	0x3
 3218 0557 3B000000 		.4byte	leftStatusFlag
 3219 055b 10       		.uleb128 0x10
 3220 055c 37000000 		.4byte	.LASF101
 3221 0560 01       		.byte	0x1
 3222 0561 3C       		.byte	0x3c
 3223 0562 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 72


 3224 0566 05       		.uleb128 0x5
 3225 0567 03       		.byte	0x3
 3226 0568 3C000000 		.4byte	rightStatusFlag
 3227 056c 10       		.uleb128 0x10
 3228 056d 6A020000 		.4byte	.LASF102
 3229 0571 01       		.byte	0x1
 3230 0572 3E       		.byte	0x3e
 3231 0573 E0000000 		.4byte	0xe0
 3232 0577 05       		.uleb128 0x5
 3233 0578 03       		.byte	0x3
 3234 0579 3D000000 		.4byte	spinCourseCorrectionStarted
 3235 057d 10       		.uleb128 0x10
 3236 057e 83070000 		.4byte	.LASF103
 3237 0582 01       		.byte	0x1
 3238 0583 3F       		.byte	0x3f
 3239 0584 E0000000 		.4byte	0xe0
 3240 0588 05       		.uleb128 0x5
 3241 0589 03       		.byte	0x3
 3242 058a 3E000000 		.4byte	currentIgnoreL
 3243 058e 10       		.uleb128 0x10
 3244 058f 92070000 		.4byte	.LASF104
 3245 0593 01       		.byte	0x1
 3246 0594 40       		.byte	0x40
 3247 0595 E0000000 		.4byte	0xe0
 3248 0599 05       		.uleb128 0x5
 3249 059a 03       		.byte	0x3
 3250 059b 45000000 		.4byte	currentIgnoreR
 3251 059f 10       		.uleb128 0x10
 3252 05a0 C5040000 		.4byte	.LASF105
 3253 05a4 01       		.byte	0x1
 3254 05a5 44       		.byte	0x44
 3255 05a6 E0000000 		.4byte	0xe0
 3256 05aa 05       		.uleb128 0x5
 3257 05ab 03       		.byte	0x3
 3258 05ac 3F000000 		.4byte	totalLineCount
 3259 05b0 10       		.uleb128 0x10
 3260 05b1 43010000 		.4byte	.LASF106
 3261 05b5 01       		.byte	0x1
 3262 05b6 45       		.byte	0x45
 3263 05b7 E0000000 		.4byte	0xe0
 3264 05bb 05       		.uleb128 0x5
 3265 05bc 03       		.byte	0x3
 3266 05bd 40000000 		.4byte	lineCount
 3267 05c1 10       		.uleb128 0x10
 3268 05c2 53030000 		.4byte	.LASF107
 3269 05c6 01       		.byte	0x1
 3270 05c7 46       		.byte	0x46
 3271 05c8 E0000000 		.4byte	0xe0
 3272 05cc 05       		.uleb128 0x5
 3273 05cd 03       		.byte	0x3
 3274 05ce 41000000 		.4byte	onLineFlag
 3275 05d2 10       		.uleb128 0x10
 3276 05d3 5B040000 		.4byte	.LASF108
 3277 05d7 01       		.byte	0x1
 3278 05d8 48       		.byte	0x48
 3279 05d9 E0000000 		.4byte	0xe0
 3280 05dd 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 73


 3281 05de 03       		.byte	0x3
 3282 05df 42000000 		.4byte	tooEarlyFlag
 3283 05e3 10       		.uleb128 0x10
 3284 05e4 1D060000 		.4byte	.LASF109
 3285 05e8 01       		.byte	0x1
 3286 05e9 49       		.byte	0x49
 3287 05ea E0000000 		.4byte	0xe0
 3288 05ee 05       		.uleb128 0x5
 3289 05ef 03       		.byte	0x3
 3290 05f0 43000000 		.4byte	tooLateFlag
 3291 05f4 22       		.uleb128 0x22
 3292 05f5 06060000 		.4byte	.LASF110
 3293 05f9 07       		.byte	0x7
 3294 05fa 1207     		.2byte	0x712
 3295 05fc 00060000 		.4byte	0x600
 3296 0600 06       		.uleb128 0x6
 3297 0601 8B000000 		.4byte	0x8b
 3298 0605 23       		.uleb128 0x23
 3299 0606 747300   		.ascii	"ts\000"
 3300 0609 05       		.byte	0x5
 3301 060a 10       		.byte	0x10
 3302 060b 96000000 		.4byte	0x96
 3303 060f 05       		.uleb128 0x5
 3304 0610 03       		.byte	0x3
 3305 0611 00000000 		.4byte	ts
 3306 0615 24       		.uleb128 0x24
 3307 0616 6C070000 		.4byte	.LASF111
 3308 061a 05       		.byte	0x5
 3309 061b 11       		.byte	0x11
 3310 061c A2000000 		.4byte	0xa2
 3311 0620 05       		.uleb128 0x5
 3312 0621 03       		.byte	0x3
 3313 0622 00000000 		.4byte	ts_enc
 3314 0626 24       		.uleb128 0x24
 3315 0627 13060000 		.4byte	.LASF112
 3316 062b 05       		.byte	0x5
 3317 062c 12       		.byte	0x12
 3318 062d A2000000 		.4byte	0xa2
 3319 0631 05       		.uleb128 0x5
 3320 0632 03       		.byte	0x3
 3321 0633 00000000 		.4byte	ts_update
 3322 0637 24       		.uleb128 0x24
 3323 0638 2C050000 		.4byte	.LASF113
 3324 063c 05       		.byte	0x5
 3325 063d 13       		.byte	0x13
 3326 063e A2000000 		.4byte	0xa2
 3327 0642 05       		.uleb128 0x5
 3328 0643 03       		.byte	0x3
 3329 0644 00000000 		.4byte	ts_speed
 3330 0648 24       		.uleb128 0x24
 3331 0649 8F030000 		.4byte	.LASF114
 3332 064d 05       		.byte	0x5
 3333 064e 14       		.byte	0x14
 3334 064f A2000000 		.4byte	0xa2
 3335 0653 05       		.uleb128 0x5
 3336 0654 03       		.byte	0x3
 3337 0655 00000000 		.4byte	ts_display
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 74


 3338 0659 24       		.uleb128 0x24
 3339 065a 29030000 		.4byte	.LASF115
 3340 065e 05       		.byte	0x5
 3341 065f 16       		.byte	0x16
 3342 0660 96000000 		.4byte	0x96
 3343 0664 05       		.uleb128 0x5
 3344 0665 03       		.byte	0x3
 3345 0666 00000000 		.4byte	flag_ts_enc
 3346 066a 24       		.uleb128 0x24
 3347 066b 1A030000 		.4byte	.LASF116
 3348 066f 05       		.byte	0x5
 3349 0670 17       		.byte	0x17
 3350 0671 96000000 		.4byte	0x96
 3351 0675 05       		.uleb128 0x5
 3352 0676 03       		.byte	0x3
 3353 0677 00000000 		.4byte	flag_ts_update
 3354 067b 24       		.uleb128 0x24
 3355 067c B7050000 		.4byte	.LASF117
 3356 0680 05       		.byte	0x5
 3357 0681 18       		.byte	0x18
 3358 0682 96000000 		.4byte	0x96
 3359 0686 05       		.uleb128 0x5
 3360 0687 03       		.byte	0x3
 3361 0688 00000000 		.4byte	flag_ts_speed
 3362 068c 24       		.uleb128 0x24
 3363 068d 73070000 		.4byte	.LASF118
 3364 0691 05       		.byte	0x5
 3365 0692 19       		.byte	0x19
 3366 0693 96000000 		.4byte	0x96
 3367 0697 05       		.uleb128 0x5
 3368 0698 03       		.byte	0x3
 3369 0699 00000000 		.4byte	flag_ts_display
 3370 069d 24       		.uleb128 0x24
 3371 069e D4050000 		.4byte	.LASF119
 3372 06a2 05       		.byte	0x5
 3373 06a3 1B       		.byte	0x1b
 3374 06a4 96000000 		.4byte	0x96
 3375 06a8 05       		.uleb128 0x5
 3376 06a9 03       		.byte	0x3
 3377 06aa 00000000 		.4byte	flag_rx
 3378 06ae 24       		.uleb128 0x24
 3379 06af E1020000 		.4byte	.LASF120
 3380 06b3 05       		.byte	0x5
 3381 06b4 1C       		.byte	0x1c
 3382 06b5 96000000 		.4byte	0x96
 3383 06b9 05       		.uleb128 0x5
 3384 06ba 03       		.byte	0x3
 3385 06bb 00000000 		.4byte	flag_packet
 3386 06bf 24       		.uleb128 0x24
 3387 06c0 8F080000 		.4byte	.LASF121
 3388 06c4 05       		.byte	0x5
 3389 06c5 1D       		.byte	0x1d
 3390 06c6 96000000 		.4byte	0x96
 3391 06ca 05       		.uleb128 0x5
 3392 06cb 03       		.byte	0x3
 3393 06cc 00000000 		.4byte	flag_KB_string
 3394 06d0 24       		.uleb128 0x24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 75


 3395 06d1 C5050000 		.4byte	.LASF122
 3396 06d5 05       		.byte	0x5
 3397 06d6 1F       		.byte	0x1f
 3398 06d7 96000000 		.4byte	0x96
 3399 06db 05       		.uleb128 0x5
 3400 06dc 03       		.byte	0x3
 3401 06dd 00000000 		.4byte	dataready_flag
 3402 06e1 24       		.uleb128 0x24
 3403 06e2 F2010000 		.4byte	.LASF123
 3404 06e6 05       		.byte	0x5
 3405 06e7 21       		.byte	0x21
 3406 06e8 96000000 		.4byte	0x96
 3407 06ec 05       		.uleb128 0x5
 3408 06ed 03       		.byte	0x3
 3409 06ee 00000000 		.4byte	flag_rf_transmission_active
 3410 06f2 07       		.uleb128 0x7
 3411 06f3 84000000 		.4byte	0x84
 3412 06f7 02070000 		.4byte	0x702
 3413 06fb 08       		.uleb128 0x8
 3414 06fc 7D000000 		.4byte	0x7d
 3415 0700 3F       		.byte	0x3f
 3416 0701 00       		.byte	0
 3417 0702 24       		.uleb128 0x24
 3418 0703 A6070000 		.4byte	.LASF124
 3419 0707 05       		.byte	0x5
 3420 0708 24       		.byte	0x24
 3421 0709 F2060000 		.4byte	0x6f2
 3422 070d 05       		.uleb128 0x5
 3423 070e 03       		.byte	0x3
 3424 070f 00000000 		.4byte	displaystring
 3425 0713 24       		.uleb128 0x24
 3426 0714 3B070000 		.4byte	.LASF125
 3427 0718 05       		.byte	0x5
 3428 0719 25       		.byte	0x25
 3429 071a F2060000 		.4byte	0x6f2
 3430 071e 05       		.uleb128 0x5
 3431 071f 03       		.byte	0x3
 3432 0720 00000000 		.4byte	line
 3433 0724 24       		.uleb128 0x24
 3434 0725 08070000 		.4byte	.LASF126
 3435 0729 05       		.byte	0x5
 3436 072a 25       		.byte	0x25
 3437 072b F2060000 		.4byte	0x6f2
 3438 072f 05       		.uleb128 0x5
 3439 0730 03       		.byte	0x3
 3440 0731 00000000 		.4byte	entry
 3441 0735 07       		.uleb128 0x7
 3442 0736 96000000 		.4byte	0x96
 3443 073a 45070000 		.4byte	0x745
 3444 073e 08       		.uleb128 0x8
 3445 073f 7D000000 		.4byte	0x7d
 3446 0743 3F       		.byte	0x3f
 3447 0744 00       		.byte	0
 3448 0745 24       		.uleb128 0x24
 3449 0746 A8020000 		.4byte	.LASF127
 3450 074a 05       		.byte	0x5
 3451 074b 26       		.byte	0x26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 76


 3452 074c 35070000 		.4byte	0x735
 3453 0750 05       		.uleb128 0x5
 3454 0751 03       		.byte	0x3
 3455 0752 00000000 		.4byte	usbBuffer
 3456 0756 24       		.uleb128 0x24
 3457 0757 85000000 		.4byte	.LASF128
 3458 075b 05       		.byte	0x5
 3459 075c 3C       		.byte	0x3c
 3460 075d FA000000 		.4byte	0xfa
 3461 0761 05       		.uleb128 0x5
 3462 0762 03       		.byte	0x3
 3463 0763 00000000 		.4byte	system_state
 3464 0767 07       		.uleb128 0x7
 3465 0768 68000000 		.4byte	0x68
 3466 076c 7D070000 		.4byte	0x77d
 3467 0770 08       		.uleb128 0x8
 3468 0771 7D000000 		.4byte	0x7d
 3469 0775 0E       		.byte	0xe
 3470 0776 08       		.uleb128 0x8
 3471 0777 7D000000 		.4byte	0x7d
 3472 077b 12       		.byte	0x12
 3473 077c 00       		.byte	0
 3474 077d 25       		.uleb128 0x25
 3475 077e 6D617000 		.ascii	"map\000"
 3476 0782 08       		.byte	0x8
 3477 0783 04       		.byte	0x4
 3478 0784 67070000 		.4byte	0x767
 3479 0788 07       		.uleb128 0x7
 3480 0789 68000000 		.4byte	0x68
 3481 078d 9E070000 		.4byte	0x79e
 3482 0791 08       		.uleb128 0x8
 3483 0792 7D000000 		.4byte	0x7d
 3484 0796 04       		.byte	0x4
 3485 0797 08       		.uleb128 0x8
 3486 0798 7D000000 		.4byte	0x7d
 3487 079c 01       		.byte	0x1
 3488 079d 00       		.byte	0
 3489 079e 26       		.uleb128 0x26
 3490 079f 19050000 		.4byte	.LASF129
 3491 07a3 08       		.byte	0x8
 3492 07a4 05       		.byte	0x5
 3493 07a5 88070000 		.4byte	0x788
 3494 07a9 24       		.uleb128 0x24
 3495 07aa 85060000 		.4byte	.LASF130
 3496 07ae 01       		.byte	0x1
 3497 07af 19       		.byte	0x19
 3498 07b0 8A020000 		.4byte	0x28a
 3499 07b4 05       		.uleb128 0x5
 3500 07b5 03       		.byte	0x3
 3501 07b6 00000000 		.4byte	currentDirection
 3502 07ba 24       		.uleb128 0x24
 3503 07bb 91050000 		.4byte	.LASF131
 3504 07bf 01       		.byte	0x1
 3505 07c0 19       		.byte	0x19
 3506 07c1 8A020000 		.4byte	0x28a
 3507 07c5 05       		.uleb128 0x5
 3508 07c6 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 77


 3509 07c7 00000000 		.4byte	previousDirection
 3510 07cb 24       		.uleb128 0x24
 3511 07cc 26020000 		.4byte	.LASF132
 3512 07d0 01       		.byte	0x1
 3513 07d1 1B       		.byte	0x1b
 3514 07d2 D3010000 		.4byte	0x1d3
 3515 07d6 05       		.uleb128 0x5
 3516 07d7 03       		.byte	0x3
 3517 07d8 00000000 		.4byte	currentRobotOrientation
 3518 07dc 24       		.uleb128 0x24
 3519 07dd D4040000 		.4byte	.LASF133
 3520 07e1 01       		.byte	0x1
 3521 07e2 1B       		.byte	0x1b
 3522 07e3 D3010000 		.4byte	0x1d3
 3523 07e7 05       		.uleb128 0x5
 3524 07e8 03       		.byte	0x3
 3525 07e9 00000000 		.4byte	previousOrientation
 3526 07ed 24       		.uleb128 0x24
 3527 07ee 20080000 		.4byte	.LASF134
 3528 07f2 01       		.byte	0x1
 3529 07f3 1C       		.byte	0x1c
 3530 07f4 7F020000 		.4byte	0x27f
 3531 07f8 05       		.uleb128 0x5
 3532 07f9 03       		.byte	0x3
 3533 07fa 00000000 		.4byte	currentInstruction
 3534 07fe 24       		.uleb128 0x24
 3535 07ff C7010000 		.4byte	.LASF87
 3536 0803 01       		.byte	0x1
 3537 0804 1D       		.byte	0x1d
 3538 0805 68000000 		.4byte	0x68
 3539 0809 05       		.uleb128 0x5
 3540 080a 03       		.byte	0x3
 3541 080b 00000000 		.4byte	numSteps
 3542 080f 24       		.uleb128 0x24
 3543 0810 16040000 		.4byte	.LASF88
 3544 0814 01       		.byte	0x1
 3545 0815 1F       		.byte	0x1f
 3546 0816 88040000 		.4byte	0x488
 3547 081a 05       		.uleb128 0x5
 3548 081b 03       		.byte	0x3
 3549 081c 00000000 		.4byte	instructionList
 3550 0820 23       		.uleb128 0x23
 3551 0821 733300   		.ascii	"s3\000"
 3552 0824 01       		.byte	0x1
 3553 0825 25       		.byte	0x25
 3554 0826 96000000 		.4byte	0x96
 3555 082a 05       		.uleb128 0x5
 3556 082b 03       		.byte	0x3
 3557 082c 00000000 		.4byte	s3
 3558 0830 23       		.uleb128 0x23
 3559 0831 733400   		.ascii	"s4\000"
 3560 0834 01       		.byte	0x1
 3561 0835 25       		.byte	0x25
 3562 0836 96000000 		.4byte	0x96
 3563 083a 05       		.uleb128 0x5
 3564 083b 03       		.byte	0x3
 3565 083c 00000000 		.4byte	s4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 78


 3566 0840 23       		.uleb128 0x23
 3567 0841 733500   		.ascii	"s5\000"
 3568 0844 01       		.byte	0x1
 3569 0845 25       		.byte	0x25
 3570 0846 96000000 		.4byte	0x96
 3571 084a 05       		.uleb128 0x5
 3572 084b 03       		.byte	0x3
 3573 084c 00000000 		.4byte	s5
 3574 0850 23       		.uleb128 0x23
 3575 0851 733600   		.ascii	"s6\000"
 3576 0854 01       		.byte	0x1
 3577 0855 25       		.byte	0x25
 3578 0856 96000000 		.4byte	0x96
 3579 085a 05       		.uleb128 0x5
 3580 085b 03       		.byte	0x3
 3581 085c 00000000 		.4byte	s6
 3582 0860 24       		.uleb128 0x24
 3583 0861 31060000 		.4byte	.LASF135
 3584 0865 01       		.byte	0x1
 3585 0866 2A       		.byte	0x2a
 3586 0867 AE000000 		.4byte	0xae
 3587 086b 05       		.uleb128 0x5
 3588 086c 03       		.byte	0x3
 3589 086d 00000000 		.4byte	totalMilliseconds
 3590 0871 24       		.uleb128 0x24
 3591 0872 82010000 		.4byte	.LASF136
 3592 0876 01       		.byte	0x1
 3593 0877 2B       		.byte	0x2b
 3594 0878 D2000000 		.4byte	0xd2
 3595 087c 05       		.uleb128 0x5
 3596 087d 03       		.byte	0x3
 3597 087e 00000000 		.4byte	totalDistance
 3598 0882 07       		.uleb128 0x7
 3599 0883 84000000 		.4byte	0x84
 3600 0887 92080000 		.4byte	0x892
 3601 088b 08       		.uleb128 0x8
 3602 088c 7D000000 		.4byte	0x7d
 3603 0890 44       		.byte	0x44
 3604 0891 00       		.byte	0
 3605 0892 24       		.uleb128 0x24
 3606 0893 61000000 		.4byte	.LASF137
 3607 0897 01       		.byte	0x1
 3608 0898 2D       		.byte	0x2d
 3609 0899 82080000 		.4byte	0x882
 3610 089d 05       		.uleb128 0x5
 3611 089e 03       		.byte	0x3
 3612 089f 00000000 		.4byte	buffer
 3613 08a3 24       		.uleb128 0x24
 3614 08a4 5C020000 		.4byte	.LASF138
 3615 08a8 01       		.byte	0x1
 3616 08a9 2E       		.byte	0x2e
 3617 08aa 68000000 		.4byte	0x68
 3618 08ae 05       		.uleb128 0x5
 3619 08af 03       		.byte	0x3
 3620 08b0 00000000 		.4byte	quadDec2Count
 3621 08b4 24       		.uleb128 0x24
 3622 08b5 86080000 		.4byte	.LASF139
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 79


 3623 08b9 01       		.byte	0x1
 3624 08ba 2F       		.byte	0x2f
 3625 08bb 68000000 		.4byte	0x68
 3626 08bf 05       		.uleb128 0x5
 3627 08c0 03       		.byte	0x3
 3628 08c1 00000000 		.4byte	timerInt
 3629 08c5 24       		.uleb128 0x24
 3630 08c6 0B030000 		.4byte	.LASF140
 3631 08ca 01       		.byte	0x1
 3632 08cb 30       		.byte	0x30
 3633 08cc 68000000 		.4byte	0x68
 3634 08d0 05       		.uleb128 0x5
 3635 08d1 03       		.byte	0x3
 3636 08d2 00000000 		.4byte	keepLedOn
 3637 08d6 24       		.uleb128 0x24
 3638 08d7 D8060000 		.4byte	.LASF141
 3639 08db 01       		.byte	0x1
 3640 08dc 32       		.byte	0x32
 3641 08dd AE000000 		.4byte	0xae
 3642 08e1 05       		.uleb128 0x5
 3643 08e2 03       		.byte	0x3
 3644 08e3 00000000 		.4byte	stopBuffer
 3645 08e7 24       		.uleb128 0x24
 3646 08e8 9A030000 		.4byte	.LASF142
 3647 08ec 01       		.byte	0x1
 3648 08ed 33       		.byte	0x33
 3649 08ee A2000000 		.4byte	0xa2
 3650 08f2 05       		.uleb128 0x5
 3651 08f3 03       		.byte	0x3
 3652 08f4 00000000 		.4byte	forwardBuffer
 3653 08f8 24       		.uleb128 0x24
 3654 08f9 35050000 		.4byte	.LASF143
 3655 08fd 01       		.byte	0x1
 3656 08fe 4B       		.byte	0x4b
 3657 08ff EA000000 		.4byte	0xea
 3658 0903 05       		.uleb128 0x5
 3659 0904 03       		.byte	0x3
 3660 0905 00000000 		.4byte	junctionConfiguration
 3661 0909 24       		.uleb128 0x24
 3662 090a E1070000 		.4byte	.LASF144
 3663 090e 01       		.byte	0x1
 3664 090f 4C       		.byte	0x4c
 3665 0910 96000000 		.4byte	0x96
 3666 0914 05       		.uleb128 0x5
 3667 0915 03       		.byte	0x3
 3668 0916 00000000 		.4byte	currentFoodListIndex
 3669 091a 24       		.uleb128 0x24
 3670 091b B6040000 		.4byte	.LASF145
 3671 091f 01       		.byte	0x1
 3672 0920 4E       		.byte	0x4e
 3673 0921 D2000000 		.4byte	0xd2
 3674 0925 05       		.uleb128 0x5
 3675 0926 03       		.byte	0x3
 3676 0927 00000000 		.4byte	blockSizeTotal
 3677 092b 24       		.uleb128 0x24
 3678 092c 43040000 		.4byte	.LASF146
 3679 0930 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 80


 3680 0931 D9       		.byte	0xd9
 3681 0932 D2000000 		.4byte	0xd2
 3682 0936 05       		.uleb128 0x5
 3683 0937 03       		.byte	0x3
 3684 0938 00000000 		.4byte	xBlocksize
 3685 093c 24       		.uleb128 0x24
 3686 093d DC050000 		.4byte	.LASF147
 3687 0941 01       		.byte	0x1
 3688 0942 DA       		.byte	0xda
 3689 0943 D2000000 		.4byte	0xd2
 3690 0947 05       		.uleb128 0x5
 3691 0948 03       		.byte	0x3
 3692 0949 00000000 		.4byte	yBlocksize
 3693 094d 24       		.uleb128 0x24
 3694 094e D6070000 		.4byte	.LASF148
 3695 0952 01       		.byte	0x1
 3696 0953 DB       		.byte	0xdb
 3697 0954 96000000 		.4byte	0x96
 3698 0958 05       		.uleb128 0x5
 3699 0959 03       		.byte	0x3
 3700 095a 00000000 		.4byte	currentRow
 3701 095e 24       		.uleb128 0x24
 3702 095f 59080000 		.4byte	.LASF149
 3703 0963 01       		.byte	0x1
 3704 0964 DC       		.byte	0xdc
 3705 0965 96000000 		.4byte	0x96
 3706 0969 05       		.uleb128 0x5
 3707 096a 03       		.byte	0x3
 3708 096b 00000000 		.4byte	currentCol
 3709 096f 24       		.uleb128 0x24
 3710 0970 2A070000 		.4byte	.LASF150
 3711 0974 01       		.byte	0x1
 3712 0975 DE       		.byte	0xde
 3713 0976 96000000 		.4byte	0x96
 3714 097a 05       		.uleb128 0x5
 3715 097b 03       		.byte	0x3
 3716 097c 00000000 		.4byte	stoppedAfterTurn
 3717 0980 24       		.uleb128 0x24
 3718 0981 5E030000 		.4byte	.LASF151
 3719 0985 01       		.byte	0x1
 3720 0986 DF       		.byte	0xdf
 3721 0987 96000000 		.4byte	0x96
 3722 098b 05       		.uleb128 0x5
 3723 098c 03       		.byte	0x3
 3724 098d 00000000 		.4byte	ignoreSensor
 3725 0991 27       		.uleb128 0x27
 3726 0992 A7060000 		.4byte	.LASF152
 3727 0996 01       		.byte	0x1
 3728 0997 0701     		.2byte	0x107
 3729 0999 8A020000 		.4byte	0x28a
 3730 099d 05       		.uleb128 0x5
 3731 099e 03       		.byte	0x3
 3732 099f 00000000 		.4byte	lastDirectionAfter180
 3733 09a3 00       		.byte	0
 3734              		.section	.debug_abbrev,"",%progbits
 3735              	.Ldebug_abbrev0:
 3736 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 81


 3737 0001 11       		.uleb128 0x11
 3738 0002 01       		.byte	0x1
 3739 0003 25       		.uleb128 0x25
 3740 0004 0E       		.uleb128 0xe
 3741 0005 13       		.uleb128 0x13
 3742 0006 0B       		.uleb128 0xb
 3743 0007 03       		.uleb128 0x3
 3744 0008 0E       		.uleb128 0xe
 3745 0009 1B       		.uleb128 0x1b
 3746 000a 0E       		.uleb128 0xe
 3747 000b 55       		.uleb128 0x55
 3748 000c 17       		.uleb128 0x17
 3749 000d 11       		.uleb128 0x11
 3750 000e 01       		.uleb128 0x1
 3751 000f 10       		.uleb128 0x10
 3752 0010 17       		.uleb128 0x17
 3753 0011 00       		.byte	0
 3754 0012 00       		.byte	0
 3755 0013 02       		.uleb128 0x2
 3756 0014 24       		.uleb128 0x24
 3757 0015 00       		.byte	0
 3758 0016 0B       		.uleb128 0xb
 3759 0017 0B       		.uleb128 0xb
 3760 0018 3E       		.uleb128 0x3e
 3761 0019 0B       		.uleb128 0xb
 3762 001a 03       		.uleb128 0x3
 3763 001b 0E       		.uleb128 0xe
 3764 001c 00       		.byte	0
 3765 001d 00       		.byte	0
 3766 001e 03       		.uleb128 0x3
 3767 001f 16       		.uleb128 0x16
 3768 0020 00       		.byte	0
 3769 0021 03       		.uleb128 0x3
 3770 0022 0E       		.uleb128 0xe
 3771 0023 3A       		.uleb128 0x3a
 3772 0024 0B       		.uleb128 0xb
 3773 0025 3B       		.uleb128 0x3b
 3774 0026 0B       		.uleb128 0xb
 3775 0027 49       		.uleb128 0x49
 3776 0028 13       		.uleb128 0x13
 3777 0029 00       		.byte	0
 3778 002a 00       		.byte	0
 3779 002b 04       		.uleb128 0x4
 3780 002c 24       		.uleb128 0x24
 3781 002d 00       		.byte	0
 3782 002e 0B       		.uleb128 0xb
 3783 002f 0B       		.uleb128 0xb
 3784 0030 3E       		.uleb128 0x3e
 3785 0031 0B       		.uleb128 0xb
 3786 0032 03       		.uleb128 0x3
 3787 0033 08       		.uleb128 0x8
 3788 0034 00       		.byte	0
 3789 0035 00       		.byte	0
 3790 0036 05       		.uleb128 0x5
 3791 0037 16       		.uleb128 0x16
 3792 0038 00       		.byte	0
 3793 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 82


 3794 003a 0E       		.uleb128 0xe
 3795 003b 3A       		.uleb128 0x3a
 3796 003c 0B       		.uleb128 0xb
 3797 003d 3B       		.uleb128 0x3b
 3798 003e 05       		.uleb128 0x5
 3799 003f 49       		.uleb128 0x49
 3800 0040 13       		.uleb128 0x13
 3801 0041 00       		.byte	0
 3802 0042 00       		.byte	0
 3803 0043 06       		.uleb128 0x6
 3804 0044 35       		.uleb128 0x35
 3805 0045 00       		.byte	0
 3806 0046 49       		.uleb128 0x49
 3807 0047 13       		.uleb128 0x13
 3808 0048 00       		.byte	0
 3809 0049 00       		.byte	0
 3810 004a 07       		.uleb128 0x7
 3811 004b 01       		.uleb128 0x1
 3812 004c 01       		.byte	0x1
 3813 004d 49       		.uleb128 0x49
 3814 004e 13       		.uleb128 0x13
 3815 004f 01       		.uleb128 0x1
 3816 0050 13       		.uleb128 0x13
 3817 0051 00       		.byte	0
 3818 0052 00       		.byte	0
 3819 0053 08       		.uleb128 0x8
 3820 0054 21       		.uleb128 0x21
 3821 0055 00       		.byte	0
 3822 0056 49       		.uleb128 0x49
 3823 0057 13       		.uleb128 0x13
 3824 0058 2F       		.uleb128 0x2f
 3825 0059 0B       		.uleb128 0xb
 3826 005a 00       		.byte	0
 3827 005b 00       		.byte	0
 3828 005c 09       		.uleb128 0x9
 3829 005d 13       		.uleb128 0x13
 3830 005e 01       		.byte	0x1
 3831 005f 03       		.uleb128 0x3
 3832 0060 0E       		.uleb128 0xe
 3833 0061 0B       		.uleb128 0xb
 3834 0062 0B       		.uleb128 0xb
 3835 0063 3A       		.uleb128 0x3a
 3836 0064 0B       		.uleb128 0xb
 3837 0065 3B       		.uleb128 0x3b
 3838 0066 0B       		.uleb128 0xb
 3839 0067 01       		.uleb128 0x1
 3840 0068 13       		.uleb128 0x13
 3841 0069 00       		.byte	0
 3842 006a 00       		.byte	0
 3843 006b 0A       		.uleb128 0xa
 3844 006c 0D       		.uleb128 0xd
 3845 006d 00       		.byte	0
 3846 006e 03       		.uleb128 0x3
 3847 006f 0E       		.uleb128 0xe
 3848 0070 3A       		.uleb128 0x3a
 3849 0071 0B       		.uleb128 0xb
 3850 0072 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 83


 3851 0073 0B       		.uleb128 0xb
 3852 0074 49       		.uleb128 0x49
 3853 0075 13       		.uleb128 0x13
 3854 0076 38       		.uleb128 0x38
 3855 0077 0B       		.uleb128 0xb
 3856 0078 00       		.byte	0
 3857 0079 00       		.byte	0
 3858 007a 0B       		.uleb128 0xb
 3859 007b 04       		.uleb128 0x4
 3860 007c 01       		.byte	0x1
 3861 007d 03       		.uleb128 0x3
 3862 007e 0E       		.uleb128 0xe
 3863 007f 0B       		.uleb128 0xb
 3864 0080 0B       		.uleb128 0xb
 3865 0081 49       		.uleb128 0x49
 3866 0082 13       		.uleb128 0x13
 3867 0083 3A       		.uleb128 0x3a
 3868 0084 0B       		.uleb128 0xb
 3869 0085 3B       		.uleb128 0x3b
 3870 0086 0B       		.uleb128 0xb
 3871 0087 01       		.uleb128 0x1
 3872 0088 13       		.uleb128 0x13
 3873 0089 00       		.byte	0
 3874 008a 00       		.byte	0
 3875 008b 0C       		.uleb128 0xc
 3876 008c 28       		.uleb128 0x28
 3877 008d 00       		.byte	0
 3878 008e 03       		.uleb128 0x3
 3879 008f 08       		.uleb128 0x8
 3880 0090 1C       		.uleb128 0x1c
 3881 0091 0B       		.uleb128 0xb
 3882 0092 00       		.byte	0
 3883 0093 00       		.byte	0
 3884 0094 0D       		.uleb128 0xd
 3885 0095 28       		.uleb128 0x28
 3886 0096 00       		.byte	0
 3887 0097 03       		.uleb128 0x3
 3888 0098 0E       		.uleb128 0xe
 3889 0099 1C       		.uleb128 0x1c
 3890 009a 0B       		.uleb128 0xb
 3891 009b 00       		.byte	0
 3892 009c 00       		.byte	0
 3893 009d 0E       		.uleb128 0xe
 3894 009e 2E       		.uleb128 0x2e
 3895 009f 01       		.byte	0x1
 3896 00a0 3F       		.uleb128 0x3f
 3897 00a1 19       		.uleb128 0x19
 3898 00a2 03       		.uleb128 0x3
 3899 00a3 0E       		.uleb128 0xe
 3900 00a4 3A       		.uleb128 0x3a
 3901 00a5 0B       		.uleb128 0xb
 3902 00a6 3B       		.uleb128 0x3b
 3903 00a7 0B       		.uleb128 0xb
 3904 00a8 27       		.uleb128 0x27
 3905 00a9 19       		.uleb128 0x19
 3906 00aa 11       		.uleb128 0x11
 3907 00ab 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 84


 3908 00ac 12       		.uleb128 0x12
 3909 00ad 06       		.uleb128 0x6
 3910 00ae 40       		.uleb128 0x40
 3911 00af 18       		.uleb128 0x18
 3912 00b0 9642     		.uleb128 0x2116
 3913 00b2 19       		.uleb128 0x19
 3914 00b3 01       		.uleb128 0x1
 3915 00b4 13       		.uleb128 0x13
 3916 00b5 00       		.byte	0
 3917 00b6 00       		.byte	0
 3918 00b7 0F       		.uleb128 0xf
 3919 00b8 0B       		.uleb128 0xb
 3920 00b9 01       		.byte	0x1
 3921 00ba 11       		.uleb128 0x11
 3922 00bb 01       		.uleb128 0x1
 3923 00bc 12       		.uleb128 0x12
 3924 00bd 06       		.uleb128 0x6
 3925 00be 00       		.byte	0
 3926 00bf 00       		.byte	0
 3927 00c0 10       		.uleb128 0x10
 3928 00c1 34       		.uleb128 0x34
 3929 00c2 00       		.byte	0
 3930 00c3 03       		.uleb128 0x3
 3931 00c4 0E       		.uleb128 0xe
 3932 00c5 3A       		.uleb128 0x3a
 3933 00c6 0B       		.uleb128 0xb
 3934 00c7 3B       		.uleb128 0x3b
 3935 00c8 0B       		.uleb128 0xb
 3936 00c9 49       		.uleb128 0x49
 3937 00ca 13       		.uleb128 0x13
 3938 00cb 02       		.uleb128 0x2
 3939 00cc 18       		.uleb128 0x18
 3940 00cd 00       		.byte	0
 3941 00ce 00       		.byte	0
 3942 00cf 11       		.uleb128 0x11
 3943 00d0 2E       		.uleb128 0x2e
 3944 00d1 00       		.byte	0
 3945 00d2 3F       		.uleb128 0x3f
 3946 00d3 19       		.uleb128 0x19
 3947 00d4 03       		.uleb128 0x3
 3948 00d5 0E       		.uleb128 0xe
 3949 00d6 3A       		.uleb128 0x3a
 3950 00d7 0B       		.uleb128 0xb
 3951 00d8 3B       		.uleb128 0x3b
 3952 00d9 0B       		.uleb128 0xb
 3953 00da 27       		.uleb128 0x27
 3954 00db 19       		.uleb128 0x19
 3955 00dc 11       		.uleb128 0x11
 3956 00dd 01       		.uleb128 0x1
 3957 00de 12       		.uleb128 0x12
 3958 00df 06       		.uleb128 0x6
 3959 00e0 40       		.uleb128 0x40
 3960 00e1 18       		.uleb128 0x18
 3961 00e2 9742     		.uleb128 0x2117
 3962 00e4 19       		.uleb128 0x19
 3963 00e5 00       		.byte	0
 3964 00e6 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 85


 3965 00e7 12       		.uleb128 0x12
 3966 00e8 2E       		.uleb128 0x2e
 3967 00e9 00       		.byte	0
 3968 00ea 3F       		.uleb128 0x3f
 3969 00eb 19       		.uleb128 0x19
 3970 00ec 03       		.uleb128 0x3
 3971 00ed 0E       		.uleb128 0xe
 3972 00ee 3A       		.uleb128 0x3a
 3973 00ef 0B       		.uleb128 0xb
 3974 00f0 3B       		.uleb128 0x3b
 3975 00f1 0B       		.uleb128 0xb
 3976 00f2 27       		.uleb128 0x27
 3977 00f3 19       		.uleb128 0x19
 3978 00f4 11       		.uleb128 0x11
 3979 00f5 01       		.uleb128 0x1
 3980 00f6 12       		.uleb128 0x12
 3981 00f7 06       		.uleb128 0x6
 3982 00f8 40       		.uleb128 0x40
 3983 00f9 18       		.uleb128 0x18
 3984 00fa 9642     		.uleb128 0x2116
 3985 00fc 19       		.uleb128 0x19
 3986 00fd 00       		.byte	0
 3987 00fe 00       		.byte	0
 3988 00ff 13       		.uleb128 0x13
 3989 0100 2E       		.uleb128 0x2e
 3990 0101 00       		.byte	0
 3991 0102 3F       		.uleb128 0x3f
 3992 0103 19       		.uleb128 0x19
 3993 0104 03       		.uleb128 0x3
 3994 0105 0E       		.uleb128 0xe
 3995 0106 3A       		.uleb128 0x3a
 3996 0107 0B       		.uleb128 0xb
 3997 0108 3B       		.uleb128 0x3b
 3998 0109 0B       		.uleb128 0xb
 3999 010a 49       		.uleb128 0x49
 4000 010b 13       		.uleb128 0x13
 4001 010c 11       		.uleb128 0x11
 4002 010d 01       		.uleb128 0x1
 4003 010e 12       		.uleb128 0x12
 4004 010f 06       		.uleb128 0x6
 4005 0110 40       		.uleb128 0x40
 4006 0111 18       		.uleb128 0x18
 4007 0112 9642     		.uleb128 0x2116
 4008 0114 19       		.uleb128 0x19
 4009 0115 00       		.byte	0
 4010 0116 00       		.byte	0
 4011 0117 14       		.uleb128 0x14
 4012 0118 2E       		.uleb128 0x2e
 4013 0119 01       		.byte	0x1
 4014 011a 3F       		.uleb128 0x3f
 4015 011b 19       		.uleb128 0x19
 4016 011c 03       		.uleb128 0x3
 4017 011d 0E       		.uleb128 0xe
 4018 011e 3A       		.uleb128 0x3a
 4019 011f 0B       		.uleb128 0xb
 4020 0120 3B       		.uleb128 0x3b
 4021 0121 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 86


 4022 0122 27       		.uleb128 0x27
 4023 0123 19       		.uleb128 0x19
 4024 0124 49       		.uleb128 0x49
 4025 0125 13       		.uleb128 0x13
 4026 0126 11       		.uleb128 0x11
 4027 0127 01       		.uleb128 0x1
 4028 0128 12       		.uleb128 0x12
 4029 0129 06       		.uleb128 0x6
 4030 012a 40       		.uleb128 0x40
 4031 012b 18       		.uleb128 0x18
 4032 012c 9642     		.uleb128 0x2116
 4033 012e 19       		.uleb128 0x19
 4034 012f 01       		.uleb128 0x1
 4035 0130 13       		.uleb128 0x13
 4036 0131 00       		.byte	0
 4037 0132 00       		.byte	0
 4038 0133 15       		.uleb128 0x15
 4039 0134 05       		.uleb128 0x5
 4040 0135 00       		.byte	0
 4041 0136 03       		.uleb128 0x3
 4042 0137 0E       		.uleb128 0xe
 4043 0138 3A       		.uleb128 0x3a
 4044 0139 0B       		.uleb128 0xb
 4045 013a 3B       		.uleb128 0x3b
 4046 013b 0B       		.uleb128 0xb
 4047 013c 49       		.uleb128 0x49
 4048 013d 13       		.uleb128 0x13
 4049 013e 02       		.uleb128 0x2
 4050 013f 18       		.uleb128 0x18
 4051 0140 00       		.byte	0
 4052 0141 00       		.byte	0
 4053 0142 16       		.uleb128 0x16
 4054 0143 34       		.uleb128 0x34
 4055 0144 00       		.byte	0
 4056 0145 03       		.uleb128 0x3
 4057 0146 08       		.uleb128 0x8
 4058 0147 3A       		.uleb128 0x3a
 4059 0148 0B       		.uleb128 0xb
 4060 0149 3B       		.uleb128 0x3b
 4061 014a 0B       		.uleb128 0xb
 4062 014b 49       		.uleb128 0x49
 4063 014c 13       		.uleb128 0x13
 4064 014d 02       		.uleb128 0x2
 4065 014e 18       		.uleb128 0x18
 4066 014f 00       		.byte	0
 4067 0150 00       		.byte	0
 4068 0151 17       		.uleb128 0x17
 4069 0152 2E       		.uleb128 0x2e
 4070 0153 00       		.byte	0
 4071 0154 3F       		.uleb128 0x3f
 4072 0155 19       		.uleb128 0x19
 4073 0156 03       		.uleb128 0x3
 4074 0157 0E       		.uleb128 0xe
 4075 0158 3A       		.uleb128 0x3a
 4076 0159 0B       		.uleb128 0xb
 4077 015a 3B       		.uleb128 0x3b
 4078 015b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 87


 4079 015c 11       		.uleb128 0x11
 4080 015d 01       		.uleb128 0x1
 4081 015e 12       		.uleb128 0x12
 4082 015f 06       		.uleb128 0x6
 4083 0160 40       		.uleb128 0x40
 4084 0161 18       		.uleb128 0x18
 4085 0162 9742     		.uleb128 0x2117
 4086 0164 19       		.uleb128 0x19
 4087 0165 00       		.byte	0
 4088 0166 00       		.byte	0
 4089 0167 18       		.uleb128 0x18
 4090 0168 2E       		.uleb128 0x2e
 4091 0169 00       		.byte	0
 4092 016a 3F       		.uleb128 0x3f
 4093 016b 19       		.uleb128 0x19
 4094 016c 03       		.uleb128 0x3
 4095 016d 0E       		.uleb128 0xe
 4096 016e 3A       		.uleb128 0x3a
 4097 016f 0B       		.uleb128 0xb
 4098 0170 3B       		.uleb128 0x3b
 4099 0171 0B       		.uleb128 0xb
 4100 0172 49       		.uleb128 0x49
 4101 0173 13       		.uleb128 0x13
 4102 0174 11       		.uleb128 0x11
 4103 0175 01       		.uleb128 0x1
 4104 0176 12       		.uleb128 0x12
 4105 0177 06       		.uleb128 0x6
 4106 0178 40       		.uleb128 0x40
 4107 0179 18       		.uleb128 0x18
 4108 017a 9742     		.uleb128 0x2117
 4109 017c 19       		.uleb128 0x19
 4110 017d 00       		.byte	0
 4111 017e 00       		.byte	0
 4112 017f 19       		.uleb128 0x19
 4113 0180 2E       		.uleb128 0x2e
 4114 0181 00       		.byte	0
 4115 0182 3F       		.uleb128 0x3f
 4116 0183 19       		.uleb128 0x19
 4117 0184 03       		.uleb128 0x3
 4118 0185 0E       		.uleb128 0xe
 4119 0186 3A       		.uleb128 0x3a
 4120 0187 0B       		.uleb128 0xb
 4121 0188 3B       		.uleb128 0x3b
 4122 0189 05       		.uleb128 0x5
 4123 018a 49       		.uleb128 0x49
 4124 018b 13       		.uleb128 0x13
 4125 018c 11       		.uleb128 0x11
 4126 018d 01       		.uleb128 0x1
 4127 018e 12       		.uleb128 0x12
 4128 018f 06       		.uleb128 0x6
 4129 0190 40       		.uleb128 0x40
 4130 0191 18       		.uleb128 0x18
 4131 0192 9742     		.uleb128 0x2117
 4132 0194 19       		.uleb128 0x19
 4133 0195 00       		.byte	0
 4134 0196 00       		.byte	0
 4135 0197 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 88


 4136 0198 2E       		.uleb128 0x2e
 4137 0199 01       		.byte	0x1
 4138 019a 3F       		.uleb128 0x3f
 4139 019b 19       		.uleb128 0x19
 4140 019c 03       		.uleb128 0x3
 4141 019d 0E       		.uleb128 0xe
 4142 019e 3A       		.uleb128 0x3a
 4143 019f 0B       		.uleb128 0xb
 4144 01a0 3B       		.uleb128 0x3b
 4145 01a1 05       		.uleb128 0x5
 4146 01a2 49       		.uleb128 0x49
 4147 01a3 13       		.uleb128 0x13
 4148 01a4 11       		.uleb128 0x11
 4149 01a5 01       		.uleb128 0x1
 4150 01a6 12       		.uleb128 0x12
 4151 01a7 06       		.uleb128 0x6
 4152 01a8 40       		.uleb128 0x40
 4153 01a9 18       		.uleb128 0x18
 4154 01aa 9642     		.uleb128 0x2116
 4155 01ac 19       		.uleb128 0x19
 4156 01ad 01       		.uleb128 0x1
 4157 01ae 13       		.uleb128 0x13
 4158 01af 00       		.byte	0
 4159 01b0 00       		.byte	0
 4160 01b1 1B       		.uleb128 0x1b
 4161 01b2 34       		.uleb128 0x34
 4162 01b3 00       		.byte	0
 4163 01b4 03       		.uleb128 0x3
 4164 01b5 0E       		.uleb128 0xe
 4165 01b6 3A       		.uleb128 0x3a
 4166 01b7 0B       		.uleb128 0xb
 4167 01b8 3B       		.uleb128 0x3b
 4168 01b9 05       		.uleb128 0x5
 4169 01ba 49       		.uleb128 0x49
 4170 01bb 13       		.uleb128 0x13
 4171 01bc 02       		.uleb128 0x2
 4172 01bd 18       		.uleb128 0x18
 4173 01be 00       		.byte	0
 4174 01bf 00       		.byte	0
 4175 01c0 1C       		.uleb128 0x1c
 4176 01c1 2E       		.uleb128 0x2e
 4177 01c2 00       		.byte	0
 4178 01c3 3F       		.uleb128 0x3f
 4179 01c4 19       		.uleb128 0x19
 4180 01c5 03       		.uleb128 0x3
 4181 01c6 0E       		.uleb128 0xe
 4182 01c7 3A       		.uleb128 0x3a
 4183 01c8 0B       		.uleb128 0xb
 4184 01c9 3B       		.uleb128 0x3b
 4185 01ca 05       		.uleb128 0x5
 4186 01cb 11       		.uleb128 0x11
 4187 01cc 01       		.uleb128 0x1
 4188 01cd 12       		.uleb128 0x12
 4189 01ce 06       		.uleb128 0x6
 4190 01cf 40       		.uleb128 0x40
 4191 01d0 18       		.uleb128 0x18
 4192 01d1 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 89


 4193 01d3 19       		.uleb128 0x19
 4194 01d4 00       		.byte	0
 4195 01d5 00       		.byte	0
 4196 01d6 1D       		.uleb128 0x1d
 4197 01d7 2E       		.uleb128 0x2e
 4198 01d8 01       		.byte	0x1
 4199 01d9 3F       		.uleb128 0x3f
 4200 01da 19       		.uleb128 0x19
 4201 01db 03       		.uleb128 0x3
 4202 01dc 0E       		.uleb128 0xe
 4203 01dd 3A       		.uleb128 0x3a
 4204 01de 0B       		.uleb128 0xb
 4205 01df 3B       		.uleb128 0x3b
 4206 01e0 05       		.uleb128 0x5
 4207 01e1 27       		.uleb128 0x27
 4208 01e2 19       		.uleb128 0x19
 4209 01e3 49       		.uleb128 0x49
 4210 01e4 13       		.uleb128 0x13
 4211 01e5 11       		.uleb128 0x11
 4212 01e6 01       		.uleb128 0x1
 4213 01e7 12       		.uleb128 0x12
 4214 01e8 06       		.uleb128 0x6
 4215 01e9 40       		.uleb128 0x40
 4216 01ea 18       		.uleb128 0x18
 4217 01eb 9742     		.uleb128 0x2117
 4218 01ed 19       		.uleb128 0x19
 4219 01ee 01       		.uleb128 0x1
 4220 01ef 13       		.uleb128 0x13
 4221 01f0 00       		.byte	0
 4222 01f1 00       		.byte	0
 4223 01f2 1E       		.uleb128 0x1e
 4224 01f3 05       		.uleb128 0x5
 4225 01f4 00       		.byte	0
 4226 01f5 03       		.uleb128 0x3
 4227 01f6 0E       		.uleb128 0xe
 4228 01f7 3A       		.uleb128 0x3a
 4229 01f8 0B       		.uleb128 0xb
 4230 01f9 3B       		.uleb128 0x3b
 4231 01fa 05       		.uleb128 0x5
 4232 01fb 49       		.uleb128 0x49
 4233 01fc 13       		.uleb128 0x13
 4234 01fd 02       		.uleb128 0x2
 4235 01fe 18       		.uleb128 0x18
 4236 01ff 00       		.byte	0
 4237 0200 00       		.byte	0
 4238 0201 1F       		.uleb128 0x1f
 4239 0202 0F       		.uleb128 0xf
 4240 0203 00       		.byte	0
 4241 0204 0B       		.uleb128 0xb
 4242 0205 0B       		.uleb128 0xb
 4243 0206 49       		.uleb128 0x49
 4244 0207 13       		.uleb128 0x13
 4245 0208 00       		.byte	0
 4246 0209 00       		.byte	0
 4247 020a 20       		.uleb128 0x20
 4248 020b 2E       		.uleb128 0x2e
 4249 020c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 90


 4250 020d 3F       		.uleb128 0x3f
 4251 020e 19       		.uleb128 0x19
 4252 020f 03       		.uleb128 0x3
 4253 0210 0E       		.uleb128 0xe
 4254 0211 3A       		.uleb128 0x3a
 4255 0212 0B       		.uleb128 0xb
 4256 0213 3B       		.uleb128 0x3b
 4257 0214 05       		.uleb128 0x5
 4258 0215 11       		.uleb128 0x11
 4259 0216 01       		.uleb128 0x1
 4260 0217 12       		.uleb128 0x12
 4261 0218 06       		.uleb128 0x6
 4262 0219 40       		.uleb128 0x40
 4263 021a 18       		.uleb128 0x18
 4264 021b 9642     		.uleb128 0x2116
 4265 021d 19       		.uleb128 0x19
 4266 021e 01       		.uleb128 0x1
 4267 021f 13       		.uleb128 0x13
 4268 0220 00       		.byte	0
 4269 0221 00       		.byte	0
 4270 0222 21       		.uleb128 0x21
 4271 0223 2E       		.uleb128 0x2e
 4272 0224 00       		.byte	0
 4273 0225 3F       		.uleb128 0x3f
 4274 0226 19       		.uleb128 0x19
 4275 0227 03       		.uleb128 0x3
 4276 0228 0E       		.uleb128 0xe
 4277 0229 3A       		.uleb128 0x3a
 4278 022a 0B       		.uleb128 0xb
 4279 022b 3B       		.uleb128 0x3b
 4280 022c 05       		.uleb128 0x5
 4281 022d 11       		.uleb128 0x11
 4282 022e 01       		.uleb128 0x1
 4283 022f 12       		.uleb128 0x12
 4284 0230 06       		.uleb128 0x6
 4285 0231 40       		.uleb128 0x40
 4286 0232 18       		.uleb128 0x18
 4287 0233 9642     		.uleb128 0x2116
 4288 0235 19       		.uleb128 0x19
 4289 0236 00       		.byte	0
 4290 0237 00       		.byte	0
 4291 0238 22       		.uleb128 0x22
 4292 0239 34       		.uleb128 0x34
 4293 023a 00       		.byte	0
 4294 023b 03       		.uleb128 0x3
 4295 023c 0E       		.uleb128 0xe
 4296 023d 3A       		.uleb128 0x3a
 4297 023e 0B       		.uleb128 0xb
 4298 023f 3B       		.uleb128 0x3b
 4299 0240 05       		.uleb128 0x5
 4300 0241 49       		.uleb128 0x49
 4301 0242 13       		.uleb128 0x13
 4302 0243 3F       		.uleb128 0x3f
 4303 0244 19       		.uleb128 0x19
 4304 0245 3C       		.uleb128 0x3c
 4305 0246 19       		.uleb128 0x19
 4306 0247 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 91


 4307 0248 00       		.byte	0
 4308 0249 23       		.uleb128 0x23
 4309 024a 34       		.uleb128 0x34
 4310 024b 00       		.byte	0
 4311 024c 03       		.uleb128 0x3
 4312 024d 08       		.uleb128 0x8
 4313 024e 3A       		.uleb128 0x3a
 4314 024f 0B       		.uleb128 0xb
 4315 0250 3B       		.uleb128 0x3b
 4316 0251 0B       		.uleb128 0xb
 4317 0252 49       		.uleb128 0x49
 4318 0253 13       		.uleb128 0x13
 4319 0254 3F       		.uleb128 0x3f
 4320 0255 19       		.uleb128 0x19
 4321 0256 02       		.uleb128 0x2
 4322 0257 18       		.uleb128 0x18
 4323 0258 00       		.byte	0
 4324 0259 00       		.byte	0
 4325 025a 24       		.uleb128 0x24
 4326 025b 34       		.uleb128 0x34
 4327 025c 00       		.byte	0
 4328 025d 03       		.uleb128 0x3
 4329 025e 0E       		.uleb128 0xe
 4330 025f 3A       		.uleb128 0x3a
 4331 0260 0B       		.uleb128 0xb
 4332 0261 3B       		.uleb128 0x3b
 4333 0262 0B       		.uleb128 0xb
 4334 0263 49       		.uleb128 0x49
 4335 0264 13       		.uleb128 0x13
 4336 0265 3F       		.uleb128 0x3f
 4337 0266 19       		.uleb128 0x19
 4338 0267 02       		.uleb128 0x2
 4339 0268 18       		.uleb128 0x18
 4340 0269 00       		.byte	0
 4341 026a 00       		.byte	0
 4342 026b 25       		.uleb128 0x25
 4343 026c 34       		.uleb128 0x34
 4344 026d 00       		.byte	0
 4345 026e 03       		.uleb128 0x3
 4346 026f 08       		.uleb128 0x8
 4347 0270 3A       		.uleb128 0x3a
 4348 0271 0B       		.uleb128 0xb
 4349 0272 3B       		.uleb128 0x3b
 4350 0273 0B       		.uleb128 0xb
 4351 0274 49       		.uleb128 0x49
 4352 0275 13       		.uleb128 0x13
 4353 0276 3F       		.uleb128 0x3f
 4354 0277 19       		.uleb128 0x19
 4355 0278 3C       		.uleb128 0x3c
 4356 0279 19       		.uleb128 0x19
 4357 027a 00       		.byte	0
 4358 027b 00       		.byte	0
 4359 027c 26       		.uleb128 0x26
 4360 027d 34       		.uleb128 0x34
 4361 027e 00       		.byte	0
 4362 027f 03       		.uleb128 0x3
 4363 0280 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 92


 4364 0281 3A       		.uleb128 0x3a
 4365 0282 0B       		.uleb128 0xb
 4366 0283 3B       		.uleb128 0x3b
 4367 0284 0B       		.uleb128 0xb
 4368 0285 49       		.uleb128 0x49
 4369 0286 13       		.uleb128 0x13
 4370 0287 3F       		.uleb128 0x3f
 4371 0288 19       		.uleb128 0x19
 4372 0289 3C       		.uleb128 0x3c
 4373 028a 19       		.uleb128 0x19
 4374 028b 00       		.byte	0
 4375 028c 00       		.byte	0
 4376 028d 27       		.uleb128 0x27
 4377 028e 34       		.uleb128 0x34
 4378 028f 00       		.byte	0
 4379 0290 03       		.uleb128 0x3
 4380 0291 0E       		.uleb128 0xe
 4381 0292 3A       		.uleb128 0x3a
 4382 0293 0B       		.uleb128 0xb
 4383 0294 3B       		.uleb128 0x3b
 4384 0295 05       		.uleb128 0x5
 4385 0296 49       		.uleb128 0x49
 4386 0297 13       		.uleb128 0x13
 4387 0298 3F       		.uleb128 0x3f
 4388 0299 19       		.uleb128 0x19
 4389 029a 02       		.uleb128 0x2
 4390 029b 18       		.uleb128 0x18
 4391 029c 00       		.byte	0
 4392 029d 00       		.byte	0
 4393 029e 00       		.byte	0
 4394              		.section	.debug_aranges,"",%progbits
 4395 0000 94000000 		.4byte	0x94
 4396 0004 0200     		.2byte	0x2
 4397 0006 00000000 		.4byte	.Ldebug_info0
 4398 000a 04       		.byte	0x4
 4399 000b 00       		.byte	0
 4400 000c 0000     		.2byte	0
 4401 000e 0000     		.2byte	0
 4402 0010 00000000 		.4byte	.LFB64
 4403 0014 EC000000 		.4byte	.LFE64-.LFB64
 4404 0018 00000000 		.4byte	.LFB65
 4405 001c 18000000 		.4byte	.LFE65-.LFB65
 4406 0020 00000000 		.4byte	.LFB66
 4407 0024 18000000 		.4byte	.LFE66-.LFB66
 4408 0028 00000000 		.4byte	.LFB67
 4409 002c 18000000 		.4byte	.LFE67-.LFB67
 4410 0030 00000000 		.4byte	.LFB68
 4411 0034 18000000 		.4byte	.LFE68-.LFB68
 4412 0038 00000000 		.4byte	.LFB69
 4413 003c 68000000 		.4byte	.LFE69-.LFB69
 4414 0040 00000000 		.4byte	.LFB70
 4415 0044 2C010000 		.4byte	.LFE70-.LFB70
 4416 0048 00000000 		.4byte	.LFB71
 4417 004c 54000000 		.4byte	.LFE71-.LFB71
 4418 0050 00000000 		.4byte	.LFB72
 4419 0054 34000000 		.4byte	.LFE72-.LFB72
 4420 0058 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 93


 4421 005c 84000000 		.4byte	.LFE73-.LFB73
 4422 0060 00000000 		.4byte	.LFB74
 4423 0064 7C000000 		.4byte	.LFE74-.LFB74
 4424 0068 00000000 		.4byte	.LFB75
 4425 006c 98050000 		.4byte	.LFE75-.LFB75
 4426 0070 00000000 		.4byte	.LFB76
 4427 0074 68000000 		.4byte	.LFE76-.LFB76
 4428 0078 00000000 		.4byte	.LFB77
 4429 007c 58000000 		.4byte	.LFE77-.LFB77
 4430 0080 00000000 		.4byte	.LFB78
 4431 0084 3C010000 		.4byte	.LFE78-.LFB78
 4432 0088 00000000 		.4byte	.LFB79
 4433 008c C8000000 		.4byte	.LFE79-.LFB79
 4434 0090 00000000 		.4byte	0
 4435 0094 00000000 		.4byte	0
 4436              		.section	.debug_ranges,"",%progbits
 4437              	.Ldebug_ranges0:
 4438 0000 00000000 		.4byte	.LFB64
 4439 0004 EC000000 		.4byte	.LFE64
 4440 0008 00000000 		.4byte	.LFB65
 4441 000c 18000000 		.4byte	.LFE65
 4442 0010 00000000 		.4byte	.LFB66
 4443 0014 18000000 		.4byte	.LFE66
 4444 0018 00000000 		.4byte	.LFB67
 4445 001c 18000000 		.4byte	.LFE67
 4446 0020 00000000 		.4byte	.LFB68
 4447 0024 18000000 		.4byte	.LFE68
 4448 0028 00000000 		.4byte	.LFB69
 4449 002c 68000000 		.4byte	.LFE69
 4450 0030 00000000 		.4byte	.LFB70
 4451 0034 2C010000 		.4byte	.LFE70
 4452 0038 00000000 		.4byte	.LFB71
 4453 003c 54000000 		.4byte	.LFE71
 4454 0040 00000000 		.4byte	.LFB72
 4455 0044 34000000 		.4byte	.LFE72
 4456 0048 00000000 		.4byte	.LFB73
 4457 004c 84000000 		.4byte	.LFE73
 4458 0050 00000000 		.4byte	.LFB74
 4459 0054 7C000000 		.4byte	.LFE74
 4460 0058 00000000 		.4byte	.LFB75
 4461 005c 98050000 		.4byte	.LFE75
 4462 0060 00000000 		.4byte	.LFB76
 4463 0064 68000000 		.4byte	.LFE76
 4464 0068 00000000 		.4byte	.LFB77
 4465 006c 58000000 		.4byte	.LFE77
 4466 0070 00000000 		.4byte	.LFB78
 4467 0074 3C010000 		.4byte	.LFE78
 4468 0078 00000000 		.4byte	.LFB79
 4469 007c C8000000 		.4byte	.LFE79
 4470 0080 00000000 		.4byte	0
 4471 0084 00000000 		.4byte	0
 4472              		.section	.debug_line,"",%progbits
 4473              	.Ldebug_line0:
 4474 0000 57040000 		.section	.debug_str,"MS",%progbits,1
 4474      02007001 
 4474      00000201 
 4474      FB0E0D00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 94


 4474      01010101 
 4475              	.LASF52:
 4476 0000 64697265 		.ascii	"direction\000"
 4476      6374696F 
 4476      6E00
 4477              	.LASF66:
 4478 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4478      61726441 
 4478      66746572 
 4478      5475726E 
 4478      00
 4479              	.LASF42:
 4480 001b 496E7374 		.ascii	"InstructionDirection\000"
 4480      72756374 
 4480      696F6E44 
 4480      69726563 
 4480      74696F6E 
 4481              	.LASF154:
 4482 0030 6D61696E 		.ascii	"main.c\000"
 4482      2E6300
 4483              	.LASF101:
 4484 0037 72696768 		.ascii	"rightStatusFlag\000"
 4484      74537461 
 4484      74757346 
 4484      6C616700 
 4485              	.LASF95:
 4486 0047 7475726E 		.ascii	"turnStartedFlag\000"
 4486      53746172 
 4486      74656446 
 4486      6C616700 
 4487              	.LASF80:
 4488 0057 626C6F63 		.ascii	"blocksize\000"
 4488      6B73697A 
 4488      6500
 4489              	.LASF137:
 4490 0061 62756666 		.ascii	"buffer\000"
 4490      657200
 4491              	.LASF8:
 4492 0068 756E7369 		.ascii	"unsigned int\000"
 4492      676E6564 
 4492      20696E74 
 4492      00
 4493              	.LASF12:
 4494 0075 5F5F696E 		.ascii	"__int32_t\000"
 4494      7433325F 
 4494      7400
 4495              	.LASF18:
 4496 007f 696E7431 		.ascii	"int16\000"
 4496      3600
 4497              	.LASF128:
 4498 0085 73797374 		.ascii	"system_state\000"
 4498      656D5F73 
 4498      74617465 
 4498      00
 4499              	.LASF89:
 4500 0092 6E657874 		.ascii	"nextInstruction\000"
 4500      496E7374 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 95


 4500      72756374 
 4500      696F6E00 
 4501              	.LASF153:
 4502 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4502      43313120 
 4502      352E342E 
 4502      31203230 
 4502      31363036 
 4503 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4503      20726576 
 4503      6973696F 
 4503      6E203233 
 4503      37373135 
 4504 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4504      66756E63 
 4504      74696F6E 
 4504      2D736563 
 4504      74696F6E 
 4505              	.LASF47:
 4506 0130 466F7277 		.ascii	"ForwardUntilTarget\000"
 4506      61726455 
 4506      6E74696C 
 4506      54617267 
 4506      657400
 4507              	.LASF106:
 4508 0143 6C696E65 		.ascii	"lineCount\000"
 4508      436F756E 
 4508      7400
 4509              	.LASF56:
 4510 014d 65787065 		.ascii	"expectedOrientation\000"
 4510      63746564 
 4510      4F726965 
 4510      6E746174 
 4510      696F6E00 
 4511              	.LASF77:
 4512 0161 5370696E 		.ascii	"SpinCourseCorrection\000"
 4512      436F7572 
 4512      7365436F 
 4512      72726563 
 4512      74696F6E 
 4513              	.LASF72:
 4514 0176 53365F44 		.ascii	"S6_DETECTED\000"
 4514      45544543 
 4514      54454400 
 4515              	.LASF136:
 4516 0182 746F7461 		.ascii	"totalDistance\000"
 4516      6C446973 
 4516      74616E63 
 4516      6500
 4517              	.LASF34:
 4518 0190 67325F78 		.ascii	"g2_xpos\000"
 4518      706F7300 
 4519              	.LASF97:
 4520 0198 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4520      61726455 
 4520      6E74696C 
 4520      54617267 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 96


 4520      65745374 
 4521              	.LASF55:
 4522 01b6 64697374 		.ascii	"distanceToTarget\000"
 4522      616E6365 
 4522      546F5461 
 4522      72676574 
 4522      00
 4523              	.LASF87:
 4524 01c7 6E756D53 		.ascii	"numSteps\000"
 4524      74657073 
 4524      00
 4525              	.LASF79:
 4526 01d0 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4526      6F76656D 
 4526      656E7441 
 4526      63636F72 
 4526      64696E67 
 4527              	.LASF123:
 4528 01f2 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4528      5F72665F 
 4528      7472616E 
 4528      736D6973 
 4528      73696F6E 
 4529              	.LASF76:
 4530 020e 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4530      61726443 
 4530      6F757273 
 4530      65436F72 
 4530      72656374 
 4531              	.LASF132:
 4532 0226 63757272 		.ascii	"currentRobotOrientation\000"
 4532      656E7452 
 4532      6F626F74 
 4532      4F726965 
 4532      6E746174 
 4533              	.LASF82:
 4534 023e 52657365 		.ascii	"ResetSensorFlags\000"
 4534      7453656E 
 4534      736F7246 
 4534      6C616773 
 4534      00
 4535              	.LASF37:
 4536 024f 67325F64 		.ascii	"g2_direction\000"
 4536      69726563 
 4536      74696F6E 
 4536      00
 4537              	.LASF138:
 4538 025c 71756164 		.ascii	"quadDec2Count\000"
 4538      44656332 
 4538      436F756E 
 4538      7400
 4539              	.LASF102:
 4540 026a 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4540      436F7572 
 4540      7365436F 
 4540      72726563 
 4540      74696F6E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 97


 4541              	.LASF19:
 4542 0286 666C6F61 		.ascii	"float\000"
 4542      7400
 4543              	.LASF81:
 4544 028c 63757272 		.ascii	"currentInstructionDirection\000"
 4544      656E7449 
 4544      6E737472 
 4544      75637469 
 4544      6F6E4469 
 4545              	.LASF127:
 4546 02a8 75736242 		.ascii	"usbBuffer\000"
 4546      75666665 
 4546      7200
 4547              	.LASF86:
 4548 02b2 636F756E 		.ascii	"count\000"
 4548      7400
 4549              	.LASF22:
 4550 02b8 696E6465 		.ascii	"index\000"
 4550      7800
 4551              	.LASF7:
 4552 02be 6C6F6E67 		.ascii	"long long unsigned int\000"
 4552      206C6F6E 
 4552      6720756E 
 4552      7369676E 
 4552      65642069 
 4553              	.LASF51:
 4554 02d5 496E7374 		.ascii	"Instruction\000"
 4554      72756374 
 4554      696F6E00 
 4555              	.LASF120:
 4556 02e1 666C6167 		.ascii	"flag_packet\000"
 4556      5F706163 
 4556      6B657400 
 4557              	.LASF93:
 4558 02ed 53657452 		.ascii	"SetRobotMovement\000"
 4558      6F626F74 
 4558      4D6F7665 
 4558      6D656E74 
 4558      00
 4559              	.LASF73:
 4560 02fe 54494D45 		.ascii	"TIMER_FINISH\000"
 4560      525F4649 
 4560      4E495348 
 4560      00
 4561              	.LASF140:
 4562 030b 6B656570 		.ascii	"keepLedOn\000"
 4562      4C65644F 
 4562      6E00
 4563              	.LASF39:
 4564 0315 4C656674 		.ascii	"Left\000"
 4564      00
 4565              	.LASF116:
 4566 031a 666C6167 		.ascii	"flag_ts_update\000"
 4566      5F74735F 
 4566      75706461 
 4566      746500
 4567              	.LASF115:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 98


 4568 0329 666C6167 		.ascii	"flag_ts_enc\000"
 4568      5F74735F 
 4568      656E6300 
 4569              	.LASF100:
 4570 0335 6C656674 		.ascii	"leftStatusFlag\000"
 4570      53746174 
 4570      7573466C 
 4570      616700
 4571              	.LASF84:
 4572 0344 71756164 		.ascii	"quadCountToRPM\000"
 4572      436F756E 
 4572      74546F52 
 4572      504D00
 4573              	.LASF107:
 4574 0353 6F6E4C69 		.ascii	"onLineFlag\000"
 4574      6E65466C 
 4574      616700
 4575              	.LASF151:
 4576 035e 69676E6F 		.ascii	"ignoreSensor\000"
 4576      72655365 
 4576      6E736F72 
 4576      00
 4577              	.LASF48:
 4578 036b 53746F70 		.ascii	"StopAtTarget\000"
 4578      41745461 
 4578      72676574 
 4578      00
 4579              	.LASF65:
 4580 0378 77616974 		.ascii	"waitForTurn\000"
 4580      466F7254 
 4580      75726E00 
 4581              	.LASF24:
 4582 0384 726F626F 		.ascii	"robot_ypos\000"
 4582      745F7970 
 4582      6F7300
 4583              	.LASF114:
 4584 038f 74735F64 		.ascii	"ts_display\000"
 4584      6973706C 
 4584      617900
 4585              	.LASF142:
 4586 039a 666F7277 		.ascii	"forwardBuffer\000"
 4586      61726442 
 4586      75666665 
 4586      7200
 4587              	.LASF11:
 4588 03a8 63686172 		.ascii	"char\000"
 4588      00
 4589              	.LASF155:
 4590 03ad 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4590      6F63756D 
 4590      656E7473 
 4590      5C476974 
 4590      4875625C 
 4591 03dc 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4591      635F636F 
 4591      64655F62 
 4591      6173655C 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 99


 4591      43533330 
 4592              	.LASF28:
 4593 03fe 67305F73 		.ascii	"g0_speed\000"
 4593      70656564 
 4593      00
 4594              	.LASF92:
 4595 0407 71756164 		.ascii	"quadPulseCount\000"
 4595      50756C73 
 4595      65436F75 
 4595      6E7400
 4596              	.LASF88:
 4597 0416 696E7374 		.ascii	"instructionList\000"
 4597      72756374 
 4597      696F6E4C 
 4597      69737400 
 4598              	.LASF94:
 4599 0426 696E7374 		.ascii	"instructionIndex\000"
 4599      72756374 
 4599      696F6E49 
 4599      6E646578 
 4599      00
 4600              	.LASF15:
 4601 0437 75696E74 		.ascii	"uint16\000"
 4601      313600
 4602              	.LASF17:
 4603 043e 696E7438 		.ascii	"int8\000"
 4603      00
 4604              	.LASF146:
 4605 0443 78426C6F 		.ascii	"xBlocksize\000"
 4605      636B7369 
 4605      7A6500
 4606              	.LASF33:
 4607 044e 67315F64 		.ascii	"g1_direction\000"
 4607      69726563 
 4607      74696F6E 
 4607      00
 4608              	.LASF108:
 4609 045b 746F6F45 		.ascii	"tooEarlyFlag\000"
 4609      61726C79 
 4609      466C6167 
 4609      00
 4610              	.LASF69:
 4611 0468 53335F44 		.ascii	"S3_DETECTED\000"
 4611      45544543 
 4611      54454400 
 4612              	.LASF78:
 4613 0474 73706565 		.ascii	"speedTimer\000"
 4613      6454696D 
 4613      657200
 4614              	.LASF96:
 4615 047f 7475726E 		.ascii	"turnFinishedFlag\000"
 4615      46696E69 
 4615      73686564 
 4615      466C6167 
 4615      00
 4616              	.LASF44:
 4617 0490 77616974 		.ascii	"waitForLeftTurn\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 100


 4617      466F724C 
 4617      65667454 
 4617      75726E00 
 4618              	.LASF6:
 4619 04a0 6C6F6E67 		.ascii	"long long int\000"
 4619      206C6F6E 
 4619      6720696E 
 4619      7400
 4620              	.LASF30:
 4621 04ae 67315F78 		.ascii	"g1_xpos\000"
 4621      706F7300 
 4622              	.LASF145:
 4623 04b6 626C6F63 		.ascii	"blockSizeTotal\000"
 4623      6B53697A 
 4623      65546F74 
 4623      616C00
 4624              	.LASF105:
 4625 04c5 746F7461 		.ascii	"totalLineCount\000"
 4625      6C4C696E 
 4625      65436F75 
 4625      6E7400
 4626              	.LASF133:
 4627 04d4 70726576 		.ascii	"previousOrientation\000"
 4627      696F7573 
 4627      4F726965 
 4627      6E746174 
 4627      696F6E00 
 4628              	.LASF46:
 4629 04e8 75547572 		.ascii	"uTurn\000"
 4629      6E00
 4630              	.LASF90:
 4631 04ee 636F756E 		.ascii	"count1\000"
 4631      743100
 4632              	.LASF91:
 4633 04f5 636F756E 		.ascii	"count2\000"
 4633      743200
 4634              	.LASF75:
 4635 04fc 6E657744 		.ascii	"newDistance\000"
 4635      69737461 
 4635      6E636500 
 4636              	.LASF36:
 4637 0508 67325F73 		.ascii	"g2_speed\000"
 4637      70656564 
 4637      00
 4638              	.LASF27:
 4639 0511 67305F79 		.ascii	"g0_ypos\000"
 4639      706F7300 
 4640              	.LASF129:
 4641 0519 666F6F64 		.ascii	"food_list\000"
 4641      5F6C6973 
 4641      7400
 4642              	.LASF60:
 4643 0523 5475726E 		.ascii	"TurnLeft\000"
 4643      4C656674 
 4643      00
 4644              	.LASF113:
 4645 052c 74735F73 		.ascii	"ts_speed\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 101


 4645      70656564 
 4645      00
 4646              	.LASF143:
 4647 0535 6A756E63 		.ascii	"junctionConfiguration\000"
 4647      74696F6E 
 4647      436F6E66 
 4647      69677572 
 4647      6174696F 
 4648              	.LASF64:
 4649 054b 556E6B6E 		.ascii	"Unknown\000"
 4649      6F776E00 
 4650              	.LASF16:
 4651 0553 75696E74 		.ascii	"uint32\000"
 4651      333200
 4652              	.LASF45:
 4653 055a 77616974 		.ascii	"waitForRightTurn\000"
 4653      466F7252 
 4653      69676874 
 4653      5475726E 
 4653      00
 4654              	.LASF59:
 4655 056b 5475726E 		.ascii	"TurnRight\000"
 4655      52696768 
 4655      7400
 4656              	.LASF50:
 4657 0575 64617461 		.ascii	"data_main\000"
 4657      5F6D6169 
 4657      6E00
 4658              	.LASF21:
 4659 057f 72737369 		.ascii	"rssi\000"
 4659      00
 4660              	.LASF29:
 4661 0584 67305F64 		.ascii	"g0_direction\000"
 4661      69726563 
 4661      74696F6E 
 4661      00
 4662              	.LASF131:
 4663 0591 70726576 		.ascii	"previousDirection\000"
 4663      696F7573 
 4663      44697265 
 4663      6374696F 
 4663      6E00
 4664              	.LASF68:
 4665 05a3 5370696E 		.ascii	"Spin180\000"
 4665      31383000 
 4666              	.LASF9:
 4667 05ab 6C6F6E67 		.ascii	"long double\000"
 4667      20646F75 
 4667      626C6500 
 4668              	.LASF117:
 4669 05b7 666C6167 		.ascii	"flag_ts_speed\000"
 4669      5F74735F 
 4669      73706565 
 4669      6400
 4670              	.LASF122:
 4671 05c5 64617461 		.ascii	"dataready_flag\000"
 4671      72656164 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 102


 4671      795F666C 
 4671      616700
 4672              	.LASF119:
 4673 05d4 666C6167 		.ascii	"flag_rx\000"
 4673      5F727800 
 4674              	.LASF147:
 4675 05dc 79426C6F 		.ascii	"yBlocksize\000"
 4675      636B7369 
 4675      7A6500
 4676              	.LASF2:
 4677 05e7 73686F72 		.ascii	"short int\000"
 4677      7420696E 
 4677      7400
 4678              	.LASF70:
 4679 05f1 53345F44 		.ascii	"S4_DETECTED\000"
 4679      45544543 
 4679      54454400 
 4680              	.LASF4:
 4681 05fd 6C6F6E67 		.ascii	"long int\000"
 4681      20696E74 
 4681      00
 4682              	.LASF110:
 4683 0606 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4683      52784275 
 4683      66666572 
 4683      00
 4684              	.LASF112:
 4685 0613 74735F75 		.ascii	"ts_update\000"
 4685      70646174 
 4685      6500
 4686              	.LASF109:
 4687 061d 746F6F4C 		.ascii	"tooLateFlag\000"
 4687      61746546 
 4687      6C616700 
 4688              	.LASF58:
 4689 0629 466F7277 		.ascii	"Forward\000"
 4689      61726400 
 4690              	.LASF135:
 4691 0631 746F7461 		.ascii	"totalMilliseconds\000"
 4691      6C4D696C 
 4691      6C697365 
 4691      636F6E64 
 4691      7300
 4692              	.LASF35:
 4693 0643 67325F79 		.ascii	"g2_ypos\000"
 4693      706F7300 
 4694              	.LASF83:
 4695 064b 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4695      546F4E65 
 4695      7874496E 
 4695      73747275 
 4695      6374696F 
 4696              	.LASF41:
 4697 0661 4F726965 		.ascii	"OrientationState\000"
 4697      6E746174 
 4697      696F6E53 
 4697      74617465 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 103


 4697      00
 4698              	.LASF38:
 4699 0672 446F776E 		.ascii	"Down\000"
 4699      00
 4700              	.LASF40:
 4701 0677 52696768 		.ascii	"Right\000"
 4701      7400
 4702              	.LASF31:
 4703 067d 67315F79 		.ascii	"g1_ypos\000"
 4703      706F7300 
 4704              	.LASF130:
 4705 0685 63757272 		.ascii	"currentDirection\000"
 4705      656E7444 
 4705      69726563 
 4705      74696F6E 
 4705      00
 4706              	.LASF98:
 4707 0696 75547572 		.ascii	"uTurnStartedFlag\000"
 4707      6E537461 
 4707      72746564 
 4707      466C6167 
 4707      00
 4708              	.LASF152:
 4709 06a7 6C617374 		.ascii	"lastDirectionAfter180\000"
 4709      44697265 
 4709      6374696F 
 4709      6E416674 
 4709      65723138 
 4710              	.LASF10:
 4711 06bd 73697A65 		.ascii	"sizetype\000"
 4711      74797065 
 4711      00
 4712              	.LASF5:
 4713 06c6 6C6F6E67 		.ascii	"long unsigned int\000"
 4713      20756E73 
 4713      69676E65 
 4713      6420696E 
 4713      7400
 4714              	.LASF141:
 4715 06d8 73746F70 		.ascii	"stopBuffer\000"
 4715      42756666 
 4715      657200
 4716              	.LASF99:
 4717 06e3 75547572 		.ascii	"uTurnFinishedFlag\000"
 4717      6E46696E 
 4717      69736865 
 4717      64466C61 
 4717      6700
 4718              	.LASF13:
 4719 06f5 696E7433 		.ascii	"int32_t\000"
 4719      325F7400 
 4720              	.LASF23:
 4721 06fd 726F626F 		.ascii	"robot_xpos\000"
 4721      745F7870 
 4721      6F7300
 4722              	.LASF126:
 4723 0708 656E7472 		.ascii	"entry\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 104


 4723      7900
 4724              	.LASF57:
 4725 070e 526F626F 		.ascii	"RobotMovement\000"
 4725      744D6F76 
 4725      656D656E 
 4725      7400
 4726              	.LASF1:
 4727 071c 756E7369 		.ascii	"unsigned char\000"
 4727      676E6564 
 4727      20636861 
 4727      7200
 4728              	.LASF150:
 4729 072a 73746F70 		.ascii	"stoppedAfterTurn\000"
 4729      70656441 
 4729      66746572 
 4729      5475726E 
 4729      00
 4730              	.LASF125:
 4731 073b 6C696E65 		.ascii	"line\000"
 4731      00
 4732              	.LASF62:
 4733 0740 41646A75 		.ascii	"AdjustToTheRight\000"
 4733      7374546F 
 4733      54686552 
 4733      69676874 
 4733      00
 4734              	.LASF63:
 4735 0751 53746F70 		.ascii	"Stop\000"
 4735      00
 4736              	.LASF85:
 4737 0756 47657449 		.ascii	"GetInstructionAtIndex\000"
 4737      6E737472 
 4737      75637469 
 4737      6F6E4174 
 4737      496E6465 
 4738              	.LASF111:
 4739 076c 74735F65 		.ascii	"ts_enc\000"
 4739      6E6300
 4740              	.LASF118:
 4741 0773 666C6167 		.ascii	"flag_ts_display\000"
 4741      5F74735F 
 4741      64697370 
 4741      6C617900 
 4742              	.LASF103:
 4743 0783 63757272 		.ascii	"currentIgnoreL\000"
 4743      656E7449 
 4743      676E6F72 
 4743      654C00
 4744              	.LASF104:
 4745 0792 63757272 		.ascii	"currentIgnoreR\000"
 4745      656E7449 
 4745      676E6F72 
 4745      655200
 4746              	.LASF49:
 4747 07a1 536B6970 		.ascii	"Skip\000"
 4747      00
 4748              	.LASF124:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 105


 4749 07a6 64697370 		.ascii	"displaystring\000"
 4749      6C617973 
 4749      7472696E 
 4749      6700
 4750              	.LASF43:
 4751 07b4 476F466F 		.ascii	"GoForward\000"
 4751      72776172 
 4751      6400
 4752              	.LASF71:
 4753 07be 53355F44 		.ascii	"S5_DETECTED\000"
 4753      45544543 
 4753      54454400 
 4754              	.LASF0:
 4755 07ca 7369676E 		.ascii	"signed char\000"
 4755      65642063 
 4755      68617200 
 4756              	.LASF148:
 4757 07d6 63757272 		.ascii	"currentRow\000"
 4757      656E7452 
 4757      6F7700
 4758              	.LASF144:
 4759 07e1 63757272 		.ascii	"currentFoodListIndex\000"
 4759      656E7446 
 4759      6F6F644C 
 4759      69737449 
 4759      6E646578 
 4760              	.LASF3:
 4761 07f6 73686F72 		.ascii	"short unsigned int\000"
 4761      7420756E 
 4761      7369676E 
 4761      65642069 
 4761      6E7400
 4762              	.LASF25:
 4763 0809 726F626F 		.ascii	"robot_orientation\000"
 4763      745F6F72 
 4763      69656E74 
 4763      6174696F 
 4763      6E00
 4764              	.LASF74:
 4765 081b 6D61696E 		.ascii	"main\000"
 4765      00
 4766              	.LASF134:
 4767 0820 63757272 		.ascii	"currentInstruction\000"
 4767      656E7449 
 4767      6E737472 
 4767      75637469 
 4767      6F6E00
 4768              	.LASF61:
 4769 0833 41646A75 		.ascii	"AdjustToTheLeft\000"
 4769      7374546F 
 4769      5468654C 
 4769      65667400 
 4770              	.LASF67:
 4771 0843 4261636B 		.ascii	"Backward\000"
 4771      77617264 
 4771      00
 4772              	.LASF14:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccpdcULL.s 			page 106


 4773 084c 75696E74 		.ascii	"uint8\000"
 4773      3800
 4774              	.LASF20:
 4775 0852 646F7562 		.ascii	"double\000"
 4775      6C6500
 4776              	.LASF149:
 4777 0859 63757272 		.ascii	"currentCol\000"
 4777      656E7443 
 4777      6F6C00
 4778              	.LASF156:
 4779 0864 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4779      7465436C 
 4779      6F636B77 
 4779      69736531 
 4779      38304465 
 4780              	.LASF26:
 4781 087e 67305F78 		.ascii	"g0_xpos\000"
 4781      706F7300 
 4782              	.LASF139:
 4783 0886 74696D65 		.ascii	"timerInt\000"
 4783      72496E74 
 4783      00
 4784              	.LASF121:
 4785 088f 666C6167 		.ascii	"flag_KB_string\000"
 4785      5F4B425F 
 4785      73747269 
 4785      6E6700
 4786              	.LASF32:
 4787 089e 67315F73 		.ascii	"g1_speed\000"
 4787      70656564 
 4787      00
 4788              	.LASF53:
 4789 08a7 69676E6F 		.ascii	"ignoreL\000"
 4789      72654C00 
 4790              	.LASF54:
 4791 08af 69676E6F 		.ascii	"ignoreR\000"
 4791      72655200 
 4792              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
