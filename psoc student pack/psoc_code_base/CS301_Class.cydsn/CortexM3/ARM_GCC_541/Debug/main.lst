ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.align	2
 107              		.type	map, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 3


 108              		.size	map, 1140
 109              	map:
 110 0044 01000000 		.word	1
 111 0048 01000000 		.word	1
 112 004c 01000000 		.word	1
 113 0050 01000000 		.word	1
 114 0054 01000000 		.word	1
 115 0058 01000000 		.word	1
 116 005c 01000000 		.word	1
 117 0060 01000000 		.word	1
 118 0064 01000000 		.word	1
 119 0068 01000000 		.word	1
 120 006c 01000000 		.word	1
 121 0070 01000000 		.word	1
 122 0074 01000000 		.word	1
 123 0078 01000000 		.word	1
 124 007c 01000000 		.word	1
 125 0080 01000000 		.word	1
 126 0084 01000000 		.word	1
 127 0088 01000000 		.word	1
 128 008c 01000000 		.word	1
 129 0090 01000000 		.word	1
 130 0094 00000000 		.word	0
 131 0098 00000000 		.word	0
 132 009c 00000000 		.word	0
 133 00a0 00000000 		.word	0
 134 00a4 00000000 		.word	0
 135 00a8 01000000 		.word	1
 136 00ac 00000000 		.word	0
 137 00b0 00000000 		.word	0
 138 00b4 00000000 		.word	0
 139 00b8 00000000 		.word	0
 140 00bc 00000000 		.word	0
 141 00c0 00000000 		.word	0
 142 00c4 00000000 		.word	0
 143 00c8 00000000 		.word	0
 144 00cc 00000000 		.word	0
 145 00d0 00000000 		.word	0
 146 00d4 00000000 		.word	0
 147 00d8 01000000 		.word	1
 148 00dc 01000000 		.word	1
 149 00e0 01000000 		.word	1
 150 00e4 01000000 		.word	1
 151 00e8 01000000 		.word	1
 152 00ec 01000000 		.word	1
 153 00f0 00000000 		.word	0
 154 00f4 01000000 		.word	1
 155 00f8 00000000 		.word	0
 156 00fc 01000000 		.word	1
 157 0100 01000000 		.word	1
 158 0104 01000000 		.word	1
 159 0108 01000000 		.word	1
 160 010c 01000000 		.word	1
 161 0110 01000000 		.word	1
 162 0114 01000000 		.word	1
 163 0118 00000000 		.word	0
 164 011c 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 4


 165 0120 00000000 		.word	0
 166 0124 01000000 		.word	1
 167 0128 01000000 		.word	1
 168 012c 00000000 		.word	0
 169 0130 00000000 		.word	0
 170 0134 00000000 		.word	0
 171 0138 00000000 		.word	0
 172 013c 00000000 		.word	0
 173 0140 00000000 		.word	0
 174 0144 00000000 		.word	0
 175 0148 00000000 		.word	0
 176 014c 00000000 		.word	0
 177 0150 00000000 		.word	0
 178 0154 00000000 		.word	0
 179 0158 00000000 		.word	0
 180 015c 00000000 		.word	0
 181 0160 01000000 		.word	1
 182 0164 00000000 		.word	0
 183 0168 01000000 		.word	1
 184 016c 00000000 		.word	0
 185 0170 01000000 		.word	1
 186 0174 01000000 		.word	1
 187 0178 00000000 		.word	0
 188 017c 01000000 		.word	1
 189 0180 00000000 		.word	0
 190 0184 01000000 		.word	1
 191 0188 01000000 		.word	1
 192 018c 01000000 		.word	1
 193 0190 01000000 		.word	1
 194 0194 01000000 		.word	1
 195 0198 00000000 		.word	0
 196 019c 01000000 		.word	1
 197 01a0 00000000 		.word	0
 198 01a4 01000000 		.word	1
 199 01a8 01000000 		.word	1
 200 01ac 01000000 		.word	1
 201 01b0 00000000 		.word	0
 202 01b4 01000000 		.word	1
 203 01b8 00000000 		.word	0
 204 01bc 01000000 		.word	1
 205 01c0 01000000 		.word	1
 206 01c4 00000000 		.word	0
 207 01c8 01000000 		.word	1
 208 01cc 00000000 		.word	0
 209 01d0 00000000 		.word	0
 210 01d4 00000000 		.word	0
 211 01d8 01000000 		.word	1
 212 01dc 00000000 		.word	0
 213 01e0 00000000 		.word	0
 214 01e4 00000000 		.word	0
 215 01e8 01000000 		.word	1
 216 01ec 00000000 		.word	0
 217 01f0 01000000 		.word	1
 218 01f4 00000000 		.word	0
 219 01f8 00000000 		.word	0
 220 01fc 00000000 		.word	0
 221 0200 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 5


 222 0204 00000000 		.word	0
 223 0208 01000000 		.word	1
 224 020c 01000000 		.word	1
 225 0210 00000000 		.word	0
 226 0214 01000000 		.word	1
 227 0218 01000000 		.word	1
 228 021c 01000000 		.word	1
 229 0220 00000000 		.word	0
 230 0224 01000000 		.word	1
 231 0228 00000000 		.word	0
 232 022c 01000000 		.word	1
 233 0230 00000000 		.word	0
 234 0234 01000000 		.word	1
 235 0238 00000000 		.word	0
 236 023c 01000000 		.word	1
 237 0240 00000000 		.word	0
 238 0244 01000000 		.word	1
 239 0248 01000000 		.word	1
 240 024c 01000000 		.word	1
 241 0250 00000000 		.word	0
 242 0254 01000000 		.word	1
 243 0258 01000000 		.word	1
 244 025c 00000000 		.word	0
 245 0260 00000000 		.word	0
 246 0264 00000000 		.word	0
 247 0268 00000000 		.word	0
 248 026c 00000000 		.word	0
 249 0270 01000000 		.word	1
 250 0274 00000000 		.word	0
 251 0278 01000000 		.word	1
 252 027c 00000000 		.word	0
 253 0280 01000000 		.word	1
 254 0284 00000000 		.word	0
 255 0288 01000000 		.word	1
 256 028c 00000000 		.word	0
 257 0290 01000000 		.word	1
 258 0294 00000000 		.word	0
 259 0298 00000000 		.word	0
 260 029c 00000000 		.word	0
 261 02a0 01000000 		.word	1
 262 02a4 01000000 		.word	1
 263 02a8 00000000 		.word	0
 264 02ac 01000000 		.word	1
 265 02b0 01000000 		.word	1
 266 02b4 01000000 		.word	1
 267 02b8 01000000 		.word	1
 268 02bc 01000000 		.word	1
 269 02c0 00000000 		.word	0
 270 02c4 01000000 		.word	1
 271 02c8 00000000 		.word	0
 272 02cc 01000000 		.word	1
 273 02d0 01000000 		.word	1
 274 02d4 01000000 		.word	1
 275 02d8 00000000 		.word	0
 276 02dc 01000000 		.word	1
 277 02e0 00000000 		.word	0
 278 02e4 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 6


 279 02e8 01000000 		.word	1
 280 02ec 01000000 		.word	1
 281 02f0 01000000 		.word	1
 282 02f4 00000000 		.word	0
 283 02f8 00000000 		.word	0
 284 02fc 00000000 		.word	0
 285 0300 00000000 		.word	0
 286 0304 00000000 		.word	0
 287 0308 00000000 		.word	0
 288 030c 00000000 		.word	0
 289 0310 01000000 		.word	1
 290 0314 00000000 		.word	0
 291 0318 00000000 		.word	0
 292 031c 00000000 		.word	0
 293 0320 01000000 		.word	1
 294 0324 00000000 		.word	0
 295 0328 01000000 		.word	1
 296 032c 00000000 		.word	0
 297 0330 00000000 		.word	0
 298 0334 00000000 		.word	0
 299 0338 01000000 		.word	1
 300 033c 01000000 		.word	1
 301 0340 01000000 		.word	1
 302 0344 01000000 		.word	1
 303 0348 01000000 		.word	1
 304 034c 01000000 		.word	1
 305 0350 01000000 		.word	1
 306 0354 01000000 		.word	1
 307 0358 00000000 		.word	0
 308 035c 01000000 		.word	1
 309 0360 01000000 		.word	1
 310 0364 01000000 		.word	1
 311 0368 00000000 		.word	0
 312 036c 01000000 		.word	1
 313 0370 00000000 		.word	0
 314 0374 01000000 		.word	1
 315 0378 01000000 		.word	1
 316 037c 01000000 		.word	1
 317 0380 00000000 		.word	0
 318 0384 01000000 		.word	1
 319 0388 01000000 		.word	1
 320 038c 00000000 		.word	0
 321 0390 00000000 		.word	0
 322 0394 00000000 		.word	0
 323 0398 00000000 		.word	0
 324 039c 00000000 		.word	0
 325 03a0 00000000 		.word	0
 326 03a4 00000000 		.word	0
 327 03a8 00000000 		.word	0
 328 03ac 00000000 		.word	0
 329 03b0 01000000 		.word	1
 330 03b4 00000000 		.word	0
 331 03b8 01000000 		.word	1
 332 03bc 00000000 		.word	0
 333 03c0 00000000 		.word	0
 334 03c4 00000000 		.word	0
 335 03c8 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 7


 336 03cc 00000000 		.word	0
 337 03d0 01000000 		.word	1
 338 03d4 01000000 		.word	1
 339 03d8 00000000 		.word	0
 340 03dc 01000000 		.word	1
 341 03e0 01000000 		.word	1
 342 03e4 01000000 		.word	1
 343 03e8 01000000 		.word	1
 344 03ec 01000000 		.word	1
 345 03f0 01000000 		.word	1
 346 03f4 01000000 		.word	1
 347 03f8 00000000 		.word	0
 348 03fc 01000000 		.word	1
 349 0400 00000000 		.word	0
 350 0404 01000000 		.word	1
 351 0408 01000000 		.word	1
 352 040c 01000000 		.word	1
 353 0410 01000000 		.word	1
 354 0414 01000000 		.word	1
 355 0418 00000000 		.word	0
 356 041c 01000000 		.word	1
 357 0420 01000000 		.word	1
 358 0424 00000000 		.word	0
 359 0428 00000000 		.word	0
 360 042c 00000000 		.word	0
 361 0430 00000000 		.word	0
 362 0434 00000000 		.word	0
 363 0438 00000000 		.word	0
 364 043c 00000000 		.word	0
 365 0440 01000000 		.word	1
 366 0444 00000000 		.word	0
 367 0448 00000000 		.word	0
 368 044c 00000000 		.word	0
 369 0450 00000000 		.word	0
 370 0454 00000000 		.word	0
 371 0458 00000000 		.word	0
 372 045c 00000000 		.word	0
 373 0460 00000000 		.word	0
 374 0464 00000000 		.word	0
 375 0468 01000000 		.word	1
 376 046c 01000000 		.word	1
 377 0470 01000000 		.word	1
 378 0474 01000000 		.word	1
 379 0478 01000000 		.word	1
 380 047c 01000000 		.word	1
 381 0480 01000000 		.word	1
 382 0484 01000000 		.word	1
 383 0488 01000000 		.word	1
 384 048c 01000000 		.word	1
 385 0490 01000000 		.word	1
 386 0494 01000000 		.word	1
 387 0498 01000000 		.word	1
 388 049c 01000000 		.word	1
 389 04a0 01000000 		.word	1
 390 04a4 01000000 		.word	1
 391 04a8 01000000 		.word	1
 392 04ac 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 8


 393 04b0 01000000 		.word	1
 394 04b4 01000000 		.word	1
 395              		.align	2
 396              		.type	food_list, %object
 397              		.size	food_list, 40
 398              	food_list:
 399 04b8 01000000 		.word	1
 400 04bc 09000000 		.word	9
 401 04c0 05000000 		.word	5
 402 04c4 05000000 		.word	5
 403 04c8 07000000 		.word	7
 404 04cc 01000000 		.word	1
 405 04d0 0D000000 		.word	13
 406 04d4 05000000 		.word	5
 407 04d8 09000000 		.word	9
 408 04dc 09000000 		.word	9
 409              		.comm	directionState,4,4
 410              		.global	currentDirection
 411              		.align	2
 412              		.type	currentDirection, %object
 413              		.size	currentDirection, 4
 414              	currentDirection:
 415 04e0 05000000 		.word	5
 416              		.global	previousDirection
 417              		.align	2
 418              		.type	previousDirection, %object
 419              		.size	previousDirection, 4
 420              	previousDirection:
 421 04e4 06000000 		.word	6
 422              		.global	currentOrientation
 423              		.bss
 424              		.type	currentOrientation, %object
 425              		.size	currentOrientation, 1
 426              	currentOrientation:
 427 0012 00       		.space	1
 428              		.global	previousOrientation
 429              		.type	previousOrientation, %object
 430              		.size	previousOrientation, 1
 431              	previousOrientation:
 432 0013 00       		.space	1
 433              		.comm	s1,1,1
 434              		.comm	s2,1,1
 435              		.comm	s3,1,1
 436              		.comm	s4,1,1
 437              		.comm	s5,1,1
 438              		.global	s6
 439              		.type	s6, %object
 440              		.size	s6, 1
 441              	s6:
 442 0014 00       		.space	1
 443              		.global	totalMilliseconds
 444 0015 000000   		.align	2
 445              		.type	totalMilliseconds, %object
 446              		.size	totalMilliseconds, 4
 447              	totalMilliseconds:
 448 0018 00000000 		.space	4
 449              		.global	totalDistance
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 9


 450              		.align	2
 451              		.type	totalDistance, %object
 452              		.size	totalDistance, 4
 453              	totalDistance:
 454 001c 00000000 		.space	4
 455              		.comm	buffer,69,4
 456              		.global	quadDec2Count
 457              		.align	2
 458              		.type	quadDec2Count, %object
 459              		.size	quadDec2Count, 4
 460              	quadDec2Count:
 461 0020 00000000 		.space	4
 462              		.global	timerInt
 463              		.align	2
 464              		.type	timerInt, %object
 465              		.size	timerInt, 4
 466              	timerInt:
 467 0024 00000000 		.space	4
 468              		.global	keepLedOn
 469              		.align	2
 470              		.type	keepLedOn, %object
 471              		.size	keepLedOn, 4
 472              	keepLedOn:
 473 0028 00000000 		.space	4
 474              		.global	stopBuffer
 475              		.align	2
 476              		.type	stopBuffer, %object
 477              		.size	stopBuffer, 4
 478              	stopBuffer:
 479 002c 00000000 		.space	4
 480              		.global	__aeabi_i2d
 481              		.global	__aeabi_dmul
 482              		.global	__aeabi_ddiv
 483              		.global	__aeabi_d2f
 484              		.global	__aeabi_fadd
 485              		.section	.text.speedTimer,"ax",%progbits
 486              		.align	2
 487              		.global	speedTimer
 488              		.thumb
 489              		.thumb_func
 490              		.type	speedTimer, %function
 491              	speedTimer:
 492              	.LFB64:
 493              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 10


  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState getDirection();
  41:main.c        **** enum DirectionState CheckSensorDirection();
  42:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  43:main.c        **** enum DirectionState directionState;
  44:main.c        **** enum Orientation {Up, Down, Left, Right}; // taken from origin at bottom left corner
  45:main.c        **** enum DirectionState currentDirection = Stop;
  46:main.c        **** enum DirectionState previousDirection = Unknown;
  47:main.c        **** enum Orientation currentOrientation = Up;
  48:main.c        **** enum Orientation previousOrientation = Up;
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s1, s2, s3, s4, s5, s6 = 0; // black = 0, white = 1- initialise sensor signals
  51:main.c        **** //* ========================================
  52:main.c        **** uint32 totalMilliseconds = 0;
  53:main.c        **** float totalDistance = 0; // in mm
  54:main.c        **** //* ========================================
  55:main.c        **** char buffer[69];
  56:main.c        **** int quadDec2Count = 0;
  57:main.c        **** int timerInt = 0;
  58:main.c        **** int keepLedOn = 0;
  59:main.c        **** uint32 stopBuffer = 0;
  60:main.c        **** 
  61:main.c        **** CY_ISR (speedTimer) {
 494              		.loc 1 61 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 90B5     		push	{r4, r7, lr}
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 11


 503 0002 83B0     		sub	sp, sp, #12
 504              		.cfi_def_cfa_offset 24
 505 0004 00AF     		add	r7, sp, #0
 506              		.cfi_def_cfa_register 7
  62:main.c        ****     timerInt = 1;
 507              		.loc 1 62 0
 508 0006 344B     		ldr	r3, .L4+16
 509 0008 0122     		movs	r2, #1
 510 000a 1A60     		str	r2, [r3]
  63:main.c        ****     //quadDec_M1 used for turning macros
  64:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 511              		.loc 1 64 0
 512 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 513 0010 0346     		mov	r3, r0
 514 0012 1A46     		mov	r2, r3
 515 0014 314B     		ldr	r3, .L4+20
 516 0016 1A60     		str	r2, [r3]
  65:main.c        ****     
  66:main.c        ****     if ((currentDirection == Forward || 
 517              		.loc 1 66 0
 518 0018 314B     		ldr	r3, .L4+24
 519 001a 1B68     		ldr	r3, [r3]
 520 001c 002B     		cmp	r3, #0
 521 001e 13D0     		beq	.L2
  67:main.c        ****         currentDirection == HardForward ||
 522              		.loc 1 67 0 discriminator 1
 523 0020 2F4B     		ldr	r3, .L4+24
 524 0022 1B68     		ldr	r3, [r3]
  66:main.c        ****         currentDirection == HardForward ||
 525              		.loc 1 66 0 discriminator 1
 526 0024 072B     		cmp	r3, #7
 527 0026 0FD0     		beq	.L2
  68:main.c        ****         currentDirection == waitForTurn || 
 528              		.loc 1 68 0
 529 0028 2D4B     		ldr	r3, .L4+24
 530 002a 1B68     		ldr	r3, [r3]
  67:main.c        ****         currentDirection == HardForward ||
 531              		.loc 1 67 0
 532 002c 082B     		cmp	r3, #8
 533 002e 0BD0     		beq	.L2
  69:main.c        ****         currentDirection == ForwardAfterTurn ||
 534              		.loc 1 69 0
 535 0030 2B4B     		ldr	r3, .L4+24
 536 0032 1B68     		ldr	r3, [r3]
  68:main.c        ****         currentDirection == waitForTurn || 
 537              		.loc 1 68 0
 538 0034 092B     		cmp	r3, #9
 539 0036 07D0     		beq	.L2
  70:main.c        ****         currentDirection == AdjustToTheLeft ||
 540              		.loc 1 70 0
 541 0038 294B     		ldr	r3, .L4+24
 542 003a 1B68     		ldr	r3, [r3]
  69:main.c        ****         currentDirection == ForwardAfterTurn ||
 543              		.loc 1 69 0
 544 003c 032B     		cmp	r3, #3
 545 003e 03D0     		beq	.L2
  71:main.c        ****         currentDirection == AdjustToTheRight) &&
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 12


 546              		.loc 1 71 0
 547 0040 274B     		ldr	r3, .L4+24
 548 0042 1B68     		ldr	r3, [r3]
  70:main.c        ****         currentDirection == AdjustToTheLeft ||
 549              		.loc 1 70 0
 550 0044 042B     		cmp	r3, #4
 551 0046 34D1     		bne	.L3
 552              	.L2:
  72:main.c        ****         quadDec2Count != 0) {
 553              		.loc 1 72 0
 554 0048 244B     		ldr	r3, .L4+20
 555 004a 1B68     		ldr	r3, [r3]
  71:main.c        ****         currentDirection == AdjustToTheRight) &&
 556              		.loc 1 71 0
 557 004c 002B     		cmp	r3, #0
 558 004e 30D0     		beq	.L3
 559              	.LBB2:
  73:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  74:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 560              		.loc 1 74 0
 561 0050 224B     		ldr	r3, .L4+20
 562 0052 1B68     		ldr	r3, [r3]
 563 0054 002B     		cmp	r3, #0
 564 0056 B8BF     		it	lt
 565 0058 5B42     		rsblt	r3, r3, #0
 566 005a 1846     		mov	r0, r3
 567 005c FFF7FEFF 		bl	__aeabi_i2d
 568 0060 19A3     		adr	r3, .L4
 569 0062 D3E90023 		ldrd	r2, [r3]
 570 0066 FFF7FEFF 		bl	__aeabi_dmul
 571 006a 0346     		mov	r3, r0
 572 006c 0C46     		mov	r4, r1
 573 006e 1846     		mov	r0, r3
 574 0070 2146     		mov	r1, r4
 575 0072 17A3     		adr	r3, .L4+8
 576 0074 D3E90023 		ldrd	r2, [r3]
 577 0078 FFF7FEFF 		bl	__aeabi_dmul
 578 007c 0346     		mov	r3, r0
 579 007e 0C46     		mov	r4, r1
 580 0080 1846     		mov	r0, r3
 581 0082 2146     		mov	r1, r4
 582 0084 4FF00002 		mov	r2, #0
 583 0088 164B     		ldr	r3, .L4+28
 584 008a FFF7FEFF 		bl	__aeabi_ddiv
 585 008e 0346     		mov	r3, r0
 586 0090 0C46     		mov	r4, r1
 587 0092 1846     		mov	r0, r3
 588 0094 2146     		mov	r1, r4
 589 0096 FFF7FEFF 		bl	__aeabi_d2f
 590 009a 0346     		mov	r3, r0
 591 009c 7B60     		str	r3, [r7, #4]	@ float
  75:main.c        ****         totalDistance = totalDistance + newDistance;
 592              		.loc 1 75 0
 593 009e 124B     		ldr	r3, .L4+32
 594 00a0 1B68     		ldr	r3, [r3]	@ float
 595 00a2 7968     		ldr	r1, [r7, #4]	@ float
 596 00a4 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 13


 597 00a6 FFF7FEFF 		bl	__aeabi_fadd
 598 00aa 0346     		mov	r3, r0
 599 00ac 1A46     		mov	r2, r3
 600 00ae 0E4B     		ldr	r3, .L4+32
 601 00b0 1A60     		str	r2, [r3]	@ float
 602              	.L3:
 603              	.LBE2:
  76:main.c        ****     }
  77:main.c        ****     
  78:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 604              		.loc 1 78 0
 605 00b2 0020     		movs	r0, #0
 606 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  79:main.c        ****     QuadDec_M2_Start(); // restart counter
 607              		.loc 1 79 0
 608 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  80:main.c        ****     
  81:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 609              		.loc 1 81 0
 610 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  82:main.c        **** }
 611              		.loc 1 82 0
 612 00c0 00BF     		nop
 613 00c2 0C37     		adds	r7, r7, #12
 614              		.cfi_def_cfa_offset 12
 615 00c4 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 00c6 90BD     		pop	{r4, r7, pc}
 619              	.L5:
 620              		.align	3
 621              	.L4:
 622 00c8 182D4454 		.word	1413754136
 623 00cc FB210940 		.word	1074340347
 624 00d0 00000000 		.word	0
 625 00d4 00205040 		.word	1078992896
 626 00d8 00000000 		.word	timerInt
 627 00dc 00000000 		.word	quadDec2Count
 628 00e0 00000000 		.word	currentDirection
 629 00e4 00806C40 		.word	1080852480
 630 00e8 00000000 		.word	totalDistance
 631              		.cfi_endproc
 632              	.LFE64:
 633              		.size	speedTimer, .-speedTimer
 634              		.section	.text.S3_DETECTED,"ax",%progbits
 635              		.align	2
 636              		.global	S3_DETECTED
 637              		.thumb
 638              		.thumb_func
 639              		.type	S3_DETECTED, %function
 640              	S3_DETECTED:
 641              	.LFB65:
  83:main.c        **** 
  84:main.c        **** CY_ISR(S3_DETECTED) {
 642              		.loc 1 84 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 14


 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0000 80B4     		push	{r7}
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
  85:main.c        ****     // Sensor has detected WHITE
  86:main.c        ****     s3 = 1; // , Black = 0, White = 1
 652              		.loc 1 86 0
 653 0004 034B     		ldr	r3, .L7
 654 0006 0122     		movs	r2, #1
 655 0008 1A70     		strb	r2, [r3]
  87:main.c        ****     //LED_Write(1u);
  88:main.c        **** }
 656              		.loc 1 88 0
 657 000a 00BF     		nop
 658 000c BD46     		mov	sp, r7
 659              		.cfi_def_cfa_register 13
 660              		@ sp needed
 661 000e 80BC     		pop	{r7}
 662              		.cfi_restore 7
 663              		.cfi_def_cfa_offset 0
 664 0010 7047     		bx	lr
 665              	.L8:
 666 0012 00BF     		.align	2
 667              	.L7:
 668 0014 00000000 		.word	s3
 669              		.cfi_endproc
 670              	.LFE65:
 671              		.size	S3_DETECTED, .-S3_DETECTED
 672              		.section	.text.S4_DETECTED,"ax",%progbits
 673              		.align	2
 674              		.global	S4_DETECTED
 675              		.thumb
 676              		.thumb_func
 677              		.type	S4_DETECTED, %function
 678              	S4_DETECTED:
 679              	.LFB66:
  89:main.c        **** 
  90:main.c        **** CY_ISR(S4_DETECTED) {
 680              		.loc 1 90 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 0000 80B4     		push	{r7}
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 0002 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
  91:main.c        ****     // Sensor has detected WHITE
  92:main.c        ****     s4 = 1; // , Black = 0, White = 1
 690              		.loc 1 92 0
 691 0004 034B     		ldr	r3, .L10
 692 0006 0122     		movs	r2, #1
 693 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 15


  93:main.c        ****     //LED_Write(1u);
  94:main.c        **** }
 694              		.loc 1 94 0
 695 000a 00BF     		nop
 696 000c BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 000e 80BC     		pop	{r7}
 700              		.cfi_restore 7
 701              		.cfi_def_cfa_offset 0
 702 0010 7047     		bx	lr
 703              	.L11:
 704 0012 00BF     		.align	2
 705              	.L10:
 706 0014 00000000 		.word	s4
 707              		.cfi_endproc
 708              	.LFE66:
 709              		.size	S4_DETECTED, .-S4_DETECTED
 710              		.section	.text.S5_DETECTED,"ax",%progbits
 711              		.align	2
 712              		.global	S5_DETECTED
 713              		.thumb
 714              		.thumb_func
 715              		.type	S5_DETECTED, %function
 716              	S5_DETECTED:
 717              	.LFB67:
  95:main.c        **** 
  96:main.c        **** CY_ISR(S5_DETECTED) {
 718              		.loc 1 96 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
  97:main.c        ****     // Sensor has detected WHITE
  98:main.c        ****     s5 = 1; // , Black = 0, White = 1
 728              		.loc 1 98 0
 729 0004 034B     		ldr	r3, .L13
 730 0006 0122     		movs	r2, #1
 731 0008 1A70     		strb	r2, [r3]
  99:main.c        ****     //LED_Write(1u);
 100:main.c        **** }
 732              		.loc 1 100 0
 733 000a 00BF     		nop
 734 000c BD46     		mov	sp, r7
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 000e 80BC     		pop	{r7}
 738              		.cfi_restore 7
 739              		.cfi_def_cfa_offset 0
 740 0010 7047     		bx	lr
 741              	.L14:
 742 0012 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 16


 743              	.L13:
 744 0014 00000000 		.word	s5
 745              		.cfi_endproc
 746              	.LFE67:
 747              		.size	S5_DETECTED, .-S5_DETECTED
 748              		.section	.text.S6_DETECTED,"ax",%progbits
 749              		.align	2
 750              		.global	S6_DETECTED
 751              		.thumb
 752              		.thumb_func
 753              		.type	S6_DETECTED, %function
 754              	S6_DETECTED:
 755              	.LFB68:
 101:main.c        **** 
 102:main.c        **** CY_ISR(S6_DETECTED) {
 756              		.loc 1 102 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 0000 80B4     		push	{r7}
 762              		.cfi_def_cfa_offset 4
 763              		.cfi_offset 7, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 103:main.c        ****     // Sensor has detected WHITE
 104:main.c        ****     s6 = 1; // , Black = 0, White = 1
 766              		.loc 1 104 0
 767 0004 034B     		ldr	r3, .L16
 768 0006 0122     		movs	r2, #1
 769 0008 1A70     		strb	r2, [r3]
 105:main.c        ****     //LED_Write(1u);
 106:main.c        **** }
 770              		.loc 1 106 0
 771 000a 00BF     		nop
 772 000c BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 000e 80BC     		pop	{r7}
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0010 7047     		bx	lr
 779              	.L17:
 780 0012 00BF     		.align	2
 781              	.L16:
 782 0014 00000000 		.word	s6
 783              		.cfi_endproc
 784              	.LFE68:
 785              		.size	S6_DETECTED, .-S6_DETECTED
 786              		.section	.text.TIMER_FINISH,"ax",%progbits
 787              		.align	2
 788              		.global	TIMER_FINISH
 789              		.thumb
 790              		.thumb_func
 791              		.type	TIMER_FINISH, %function
 792              	TIMER_FINISH:
 793              	.LFB69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 17


 107:main.c        **** 
 108:main.c        **** CY_ISR(TIMER_FINISH) {
 794              		.loc 1 108 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 109:main.c        ****     //LED_Write(0u);
 110:main.c        ****     if (currentDirection == Stop) {
 804              		.loc 1 110 0
 805 0004 0A4B     		ldr	r3, .L21
 806 0006 1B68     		ldr	r3, [r3]
 807 0008 052B     		cmp	r3, #5
 808 000a 05D1     		bne	.L19
 111:main.c        ****         stopBuffer = stopBuffer + 1;
 809              		.loc 1 111 0
 810 000c 094B     		ldr	r3, .L21+4
 811 000e 1B68     		ldr	r3, [r3]
 812 0010 0133     		adds	r3, r3, #1
 813 0012 084A     		ldr	r2, .L21+4
 814 0014 1360     		str	r3, [r2]
 815 0016 02E0     		b	.L20
 816              	.L19:
 112:main.c        ****     } else {
 113:main.c        ****         stopBuffer = 0;
 817              		.loc 1 113 0
 818 0018 064B     		ldr	r3, .L21+4
 819 001a 0022     		movs	r2, #0
 820 001c 1A60     		str	r2, [r3]
 821              	.L20:
 114:main.c        ****     }
 115:main.c        ****     SetRobotMovement(); 
 822              		.loc 1 115 0
 823 001e FFF7FEFF 		bl	SetRobotMovement
 116:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 824              		.loc 1 116 0
 825 0022 FFF7FEFF 		bl	ResetSensorFlags
 117:main.c        ****     Timer_LED_ReadStatusRegister();
 826              		.loc 1 117 0
 827 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 118:main.c        **** }
 828              		.loc 1 118 0
 829 002a 00BF     		nop
 830 002c 80BD     		pop	{r7, pc}
 831              	.L22:
 832 002e 00BF     		.align	2
 833              	.L21:
 834 0030 00000000 		.word	currentDirection
 835 0034 00000000 		.word	stopBuffer
 836              		.cfi_endproc
 837              	.LFE69:
 838              		.size	TIMER_FINISH, .-TIMER_FINISH
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 18


 839              		.section	.text.main,"ax",%progbits
 840              		.align	2
 841              		.global	main
 842              		.thumb
 843              		.thumb_func
 844              		.type	main, %function
 845              	main:
 846              	.LFB70:
 119:main.c        **** 
 120:main.c        **** 
 121:main.c        **** int main()
 122:main.c        **** {
 847              		.loc 1 122 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851 0000 80B5     		push	{r7, lr}
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 855 0002 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 123:main.c        **** // --------------------------------    
 124:main.c        **** // ----- INITIALIZATIONS ----------
 125:main.c        ****     CYGlobalIntEnable;
 857              		.loc 1 125 0
 858              		.syntax unified
 859              	@ 125 "main.c" 1
 860 0004 62B6     		CPSIE   i
 861              	@ 0 "" 2
 126:main.c        ****     ResetSensorFlags();
 862              		.loc 1 126 0
 863              		.thumb
 864              		.syntax unified
 865 0006 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 866              		.loc 1 127 0
 867 000a FFF7FEFF 		bl	init
 128:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 129:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 868              		.loc 1 129 0
 869 000e 1948     		ldr	r0, .L27
 870 0010 FFF7FEFF 		bl	isr_speed_StartEx
 130:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 871              		.loc 1 130 0
 872 0014 1848     		ldr	r0, .L27+4
 873 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 131:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 874              		.loc 1 131 0
 875 001a 1848     		ldr	r0, .L27+8
 876 001c FFF7FEFF 		bl	S3_detected_StartEx
 132:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 877              		.loc 1 132 0
 878 0020 1748     		ldr	r0, .L27+12
 879 0022 FFF7FEFF 		bl	S4_detected_StartEx
 133:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 880              		.loc 1 133 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 19


 881 0026 1748     		ldr	r0, .L27+16
 882 0028 FFF7FEFF 		bl	S5_detected_StartEx
 134:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 883              		.loc 1 134 0
 884 002c 1648     		ldr	r0, .L27+20
 885 002e FFF7FEFF 		bl	S6_detected_StartEx
 135:main.c        ****     findPath(map);
 886              		.loc 1 135 0
 887 0032 1648     		ldr	r0, .L27+24
 888 0034 FFF7FEFF 		bl	findPath
 136:main.c        ****     Timer_LED_Start();
 889              		.loc 1 136 0
 890 0038 FFF7FEFF 		bl	Timer_LED_Start
 137:main.c        ****     //stopMoving();
 138:main.c        **** 
 139:main.c        **** // ------USB SETUP ----------------    
 140:main.c        **** #ifdef USE_USB    
 141:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 891              		.loc 1 141 0
 892 003c 0121     		movs	r1, #1
 893 003e 0020     		movs	r0, #0
 894 0040 FFF7FEFF 		bl	USBUART_Start
 142:main.c        **** #endif        
 143:main.c        ****     RF_BT_SELECT_Write(0);
 895              		.loc 1 143 0
 896 0044 0020     		movs	r0, #0
 897 0046 FFF7FEFF 		bl	RF_BT_SELECT_Write
 898              	.L26:
 144:main.c        ****     
 145:main.c        ****     //usbPutString("Initialised UART");
 146:main.c        ****     for(;;)
 147:main.c        ****     {
 148:main.c        ****         //traverseMap(map);
 149:main.c        ****         //rotationAntiClockwise();
 150:main.c        ****         //rotationClockwise();
 151:main.c        ****         
 152:main.c        ****         
 153:main.c        ****         
 154:main.c        ****         if(timerInt == 1) {
 899              		.loc 1 154 0
 900 004a 114B     		ldr	r3, .L27+28
 901 004c 1B68     		ldr	r3, [r3]
 902 004e 012B     		cmp	r3, #1
 903 0050 08D1     		bne	.L24
 155:main.c        ****             timerInt = 0;
 904              		.loc 1 155 0
 905 0052 0F4B     		ldr	r3, .L27+28
 906 0054 0022     		movs	r2, #0
 907 0056 1A60     		str	r2, [r3]
 156:main.c        ****             // calculate RPM of M2
 157:main.c        ****             quadCountToRPM(quadDec2Count);
 908              		.loc 1 157 0
 909 0058 0E4B     		ldr	r3, .L27+32
 910 005a 1B68     		ldr	r3, [r3]
 911 005c 9BB2     		uxth	r3, r3
 912 005e 1846     		mov	r0, r3
 913 0060 FFF7FEFF 		bl	quadCountToRPM
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 20


 914              	.L24:
 158:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 159:main.c        ****             //usbPutString(buffer);
 160:main.c        ****             //usbPutString(" ");
 161:main.c        ****         }
 162:main.c        ****         //handle_usb();
 163:main.c        ****         if (flag_KB_string == 1)
 915              		.loc 1 163 0
 916 0064 0C4B     		ldr	r3, .L27+36
 917 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 918 0068 012B     		cmp	r3, #1
 919 006a EED1     		bne	.L26
 164:main.c        ****         {
 165:main.c        ****             //usbPutString("Total Distance: ");
 166:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 167:main.c        ****             //usbPutString(buffer);
 168:main.c        ****             flag_KB_string = 0;
 920              		.loc 1 168 0
 921 006c 0A4B     		ldr	r3, .L27+36
 922 006e 0022     		movs	r2, #0
 923 0070 1A70     		strb	r2, [r3]
 169:main.c        ****         }           
 170:main.c        ****     }
 924              		.loc 1 170 0
 925 0072 EAE7     		b	.L26
 926              	.L28:
 927              		.align	2
 928              	.L27:
 929 0074 00000000 		.word	speedTimer
 930 0078 00000000 		.word	TIMER_FINISH
 931 007c 00000000 		.word	S3_DETECTED
 932 0080 00000000 		.word	S4_DETECTED
 933 0084 00000000 		.word	S5_DETECTED
 934 0088 00000000 		.word	S6_DETECTED
 935 008c 44000000 		.word	map
 936 0090 00000000 		.word	timerInt
 937 0094 00000000 		.word	quadDec2Count
 938 0098 00000000 		.word	flag_KB_string
 939              		.cfi_endproc
 940              	.LFE70:
 941              		.size	main, .-main
 942              		.global	__aeabi_fmul
 943              		.global	__aeabi_f2iz
 944              		.section	.text.quadCountToRPM,"ax",%progbits
 945              		.align	2
 946              		.global	quadCountToRPM
 947              		.thumb
 948              		.thumb_func
 949              		.type	quadCountToRPM, %function
 950              	quadCountToRPM:
 951              	.LFB71:
 171:main.c        ****     return 0;
 172:main.c        **** }
 173:main.c        **** 
 174:main.c        **** // Calculations
 175:main.c        **** //* ========================================
 176:main.c        **** int16 quadCountToRPM(uint16 count)
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 21


 177:main.c        **** {
 952              		.loc 1 177 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 16
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 0000 90B5     		push	{r4, r7, lr}
 957              		.cfi_def_cfa_offset 12
 958              		.cfi_offset 4, -12
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 85B0     		sub	sp, sp, #20
 962              		.cfi_def_cfa_offset 32
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 0346     		mov	r3, r0
 966 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 178:main.c        ****     float cps = count/57.00;
 967              		.loc 1 178 0
 968 000a FB88     		ldrh	r3, [r7, #6]
 969 000c 1846     		mov	r0, r3
 970 000e FFF7FEFF 		bl	__aeabi_i2d
 971 0012 4FF00002 		mov	r2, #0
 972 0016 0D4B     		ldr	r3, .L31
 973 0018 FFF7FEFF 		bl	__aeabi_ddiv
 974 001c 0346     		mov	r3, r0
 975 001e 0C46     		mov	r4, r1
 976 0020 1846     		mov	r0, r3
 977 0022 2146     		mov	r1, r4
 978 0024 FFF7FEFF 		bl	__aeabi_d2f
 979 0028 0346     		mov	r3, r0
 980 002a FB60     		str	r3, [r7, #12]	@ float
 179:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 981              		.loc 1 179 0
 982 002c 0849     		ldr	r1, .L31+4
 983 002e F868     		ldr	r0, [r7, #12]	@ float
 984 0030 FFF7FEFF 		bl	__aeabi_fmul
 985 0034 0346     		mov	r3, r0
 986 0036 1846     		mov	r0, r3
 987 0038 FFF7FEFF 		bl	__aeabi_f2iz
 988 003c 0346     		mov	r3, r0
 989 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 180:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 181:main.c        ****     return rpm;
 990              		.loc 1 181 0
 991 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 182:main.c        ****     //usbPutString(buffer);
 183:main.c        ****     //usbPutString("rpm ");
 184:main.c        **** }
 992              		.loc 1 184 0
 993 0044 1846     		mov	r0, r3
 994 0046 1437     		adds	r7, r7, #20
 995              		.cfi_def_cfa_offset 12
 996 0048 BD46     		mov	sp, r7
 997              		.cfi_def_cfa_register 13
 998              		@ sp needed
 999 004a 90BD     		pop	{r4, r7, pc}
 1000              	.L32:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 22


 1001              		.align	2
 1002              	.L31:
 1003 004c 00804C40 		.word	1078755328
 1004 0050 00007041 		.word	1097859072
 1005              		.cfi_endproc
 1006              	.LFE71:
 1007              		.size	quadCountToRPM, .-quadCountToRPM
 1008              		.section	.text.ResetSensorFlags,"ax",%progbits
 1009              		.align	2
 1010              		.global	ResetSensorFlags
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	ResetSensorFlags, %function
 1014              	ResetSensorFlags:
 1015              	.LFB72:
 185:main.c        **** 
 186:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 187:main.c        **** void ResetSensorFlags() {
 1016              		.loc 1 187 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021 0000 80B4     		push	{r7}
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 7, -4
 1024 0002 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 188:main.c        ****     s1 = 0;
 1026              		.loc 1 188 0
 1027 0004 0A4B     		ldr	r3, .L34
 1028 0006 0022     		movs	r2, #0
 1029 0008 1A70     		strb	r2, [r3]
 189:main.c        ****     s2 = 0;
 1030              		.loc 1 189 0
 1031 000a 0A4B     		ldr	r3, .L34+4
 1032 000c 0022     		movs	r2, #0
 1033 000e 1A70     		strb	r2, [r3]
 190:main.c        ****     s3 = 0;
 1034              		.loc 1 190 0
 1035 0010 094B     		ldr	r3, .L34+8
 1036 0012 0022     		movs	r2, #0
 1037 0014 1A70     		strb	r2, [r3]
 191:main.c        ****     s4 = 0;
 1038              		.loc 1 191 0
 1039 0016 094B     		ldr	r3, .L34+12
 1040 0018 0022     		movs	r2, #0
 1041 001a 1A70     		strb	r2, [r3]
 192:main.c        ****     s5 = 0;
 1042              		.loc 1 192 0
 1043 001c 084B     		ldr	r3, .L34+16
 1044 001e 0022     		movs	r2, #0
 1045 0020 1A70     		strb	r2, [r3]
 193:main.c        ****     s6 = 0;
 1046              		.loc 1 193 0
 1047 0022 084B     		ldr	r3, .L34+20
 1048 0024 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 23


 1049 0026 1A70     		strb	r2, [r3]
 194:main.c        **** }
 1050              		.loc 1 194 0
 1051 0028 00BF     		nop
 1052 002a BD46     		mov	sp, r7
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 002c 80BC     		pop	{r7}
 1056              		.cfi_restore 7
 1057              		.cfi_def_cfa_offset 0
 1058 002e 7047     		bx	lr
 1059              	.L35:
 1060              		.align	2
 1061              	.L34:
 1062 0030 00000000 		.word	s1
 1063 0034 00000000 		.word	s2
 1064 0038 00000000 		.word	s3
 1065 003c 00000000 		.word	s4
 1066 0040 00000000 		.word	s5
 1067 0044 00000000 		.word	s6
 1068              		.cfi_endproc
 1069              	.LFE72:
 1070              		.size	ResetSensorFlags, .-ResetSensorFlags
 1071              		.global	yBlockSize
 1072              		.data
 1073              		.align	2
 1074              		.type	yBlockSize, %object
 1075              		.size	yBlockSize, 4
 1076              	yBlockSize:
 1077 04e8 A4704D41 		.word	1095594148
 1078              		.global	xBlockSize
 1079              		.align	2
 1080              		.type	xBlockSize, %object
 1081              		.size	xBlockSize, 4
 1082              	xBlockSize:
 1083 04ec 7B141241 		.word	1091703931
 1084              		.comm	blockSize,4,4
 1085              		.global	currentRow
 1086              		.type	currentRow, %object
 1087              		.size	currentRow, 1
 1088              	currentRow:
 1089 04f0 01       		.byte	1
 1090              		.global	currentCol
 1091              		.type	currentCol, %object
 1092              		.size	currentCol, 1
 1093              	currentCol:
 1094 04f1 01       		.byte	1
 1095              		.global	__aeabi_fcmple
 1096              		.section	.text.getDirection,"ax",%progbits
 1097              		.align	2
 1098              		.global	getDirection
 1099              		.thumb
 1100              		.thumb_func
 1101              		.type	getDirection, %function
 1102              	getDirection:
 1103              	.LFB73:
 195:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 24


 196:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 197:main.c        **** // returns a enum direction state depending on the flag configuration
 198:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 199:main.c        **** // s1 = 0 -- Black
 200:main.c        **** // s1 = 1 -- White
 201:main.c        **** float yBlockSize = 12.84;
 202:main.c        **** float xBlockSize = 9.13;
 203:main.c        **** float blockSize;
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1; // need to initialise
 206:main.c        **** 
 207:main.c        **** enum DirectionState getDirection() {
 1104              		.loc 1 207 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108 0000 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
 208:main.c        ****     //directionState = Stop;
 209:main.c        ****     currentOrientation = Up; // initialise at start
 1114              		.loc 1 209 0
 1115 0004 954B     		ldr	r3, .L79
 1116 0006 0022     		movs	r2, #0
 1117 0008 1A70     		strb	r2, [r3]
 210:main.c        ****     previousDirection = currentDirection;
 1118              		.loc 1 210 0
 1119 000a 954B     		ldr	r3, .L79+4
 1120 000c 1B68     		ldr	r3, [r3]
 1121 000e 954A     		ldr	r2, .L79+8
 1122 0010 1360     		str	r3, [r2]
 211:main.c        **** 
 212:main.c        ****     if(currentRow == 1 && currentCol == 5) {
 1123              		.loc 1 212 0
 1124 0012 954B     		ldr	r3, .L79+12
 1125 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 0016 012B     		cmp	r3, #1
 1127 0018 09D1     		bne	.L37
 1128              		.loc 1 212 0 is_stmt 0 discriminator 1
 1129 001a 944B     		ldr	r3, .L79+16
 1130 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1131 001e 052B     		cmp	r3, #5
 1132 0020 05D1     		bne	.L37
 213:main.c        ****         directionState = Stop;
 1133              		.loc 1 213 0 is_stmt 1
 1134 0022 934B     		ldr	r3, .L79+20
 1135 0024 0522     		movs	r2, #5
 1136 0026 1A60     		str	r2, [r3]
 214:main.c        ****         return directionState;
 1137              		.loc 1 214 0
 1138 0028 914B     		ldr	r3, .L79+20
 1139 002a 1B68     		ldr	r3, [r3]
 1140 002c 1AE2     		b	.L38
 1141              	.L37:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 25


 215:main.c        ****     }
 216:main.c        ****     //currentDirection = Stop;
 217:main.c        ****     // determine block size
 218:main.c        ****     if(previousOrientation == Up || previousOrientation == Down) {
 1142              		.loc 1 218 0
 1143 002e 914B     		ldr	r3, .L79+24
 1144 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1145 0032 002B     		cmp	r3, #0
 1146 0034 03D0     		beq	.L39
 1147              		.loc 1 218 0 is_stmt 0 discriminator 1
 1148 0036 8F4B     		ldr	r3, .L79+24
 1149 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1150 003a 012B     		cmp	r3, #1
 1151 003c 04D1     		bne	.L40
 1152              	.L39:
 219:main.c        ****         blockSize = yBlockSize;
 1153              		.loc 1 219 0 is_stmt 1
 1154 003e 8E4B     		ldr	r3, .L79+28
 1155 0040 1B68     		ldr	r3, [r3]	@ float
 1156 0042 8E4A     		ldr	r2, .L79+32
 1157 0044 1360     		str	r3, [r2]	@ float
 1158 0046 03E0     		b	.L41
 1159              	.L40:
 220:main.c        ****     } else {
 221:main.c        ****         blockSize = xBlockSize;
 1160              		.loc 1 221 0
 1161 0048 8D4B     		ldr	r3, .L79+36
 1162 004a 1B68     		ldr	r3, [r3]	@ float
 1163 004c 8B4A     		ldr	r2, .L79+32
 1164 004e 1360     		str	r3, [r2]	@ float
 1165              	.L41:
 222:main.c        ****     }
 223:main.c        ****     // find next direction after we reach a new coordinate
 224:main.c        ****     if(totalDistance <= blockSize) {
 1166              		.loc 1 224 0
 1167 0050 8C4B     		ldr	r3, .L79+40
 1168 0052 1A68     		ldr	r2, [r3]	@ float
 1169 0054 894B     		ldr	r3, .L79+32
 1170 0056 1B68     		ldr	r3, [r3]	@ float
 1171 0058 1946     		mov	r1, r3
 1172 005a 1046     		mov	r0, r2
 1173 005c FFF7FEFF 		bl	__aeabi_fcmple
 1174 0060 0346     		mov	r3, r0
 1175 0062 002B     		cmp	r3, #0
 1176 0064 51D0     		beq	.L73
 225:main.c        ****         // MOVEMENT
 226:main.c        ****         if (previousDirection == Stop) {
 1177              		.loc 1 226 0
 1178 0066 7F4B     		ldr	r3, .L79+8
 1179 0068 1B68     		ldr	r3, [r3]
 1180 006a 052B     		cmp	r3, #5
 1181 006c 0DD1     		bne	.L44
 227:main.c        ****             if (stopBuffer <= 10) {
 1182              		.loc 1 227 0
 1183 006e 864B     		ldr	r3, .L79+44
 1184 0070 1B68     		ldr	r3, [r3]
 1185 0072 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 26


 1186 0074 03D8     		bhi	.L45
 228:main.c        ****                 directionState = Stop;
 1187              		.loc 1 228 0
 1188 0076 7E4B     		ldr	r3, .L79+20
 1189 0078 0522     		movs	r2, #5
 1190 007a 1A60     		str	r2, [r3]
 1191 007c 02E0     		b	.L46
 1192              	.L45:
 229:main.c        ****             } else {
 230:main.c        ****                 directionState = Backward;
 1193              		.loc 1 230 0
 1194 007e 7C4B     		ldr	r3, .L79+20
 1195 0080 0A22     		movs	r2, #10
 1196 0082 1A60     		str	r2, [r3]
 1197              	.L46:
 231:main.c        ****             }
 232:main.c        ****             //currentDirection = previousDirection;
 233:main.c        ****             return directionState;
 1198              		.loc 1 233 0
 1199 0084 7A4B     		ldr	r3, .L79+20
 1200 0086 1B68     		ldr	r3, [r3]
 1201 0088 ECE1     		b	.L38
 1202              	.L44:
 234:main.c        ****         }
 235:main.c        ****         /*
 236:main.c        ****         
 237:main.c        ****         if (previousDirection == ForwardAfterTurn) {
 238:main.c        ****             if (s3 || s4) {
 239:main.c        ****                 //totalDistance = 0; // reset total distance after turn
 240:main.c        ****                 directionState = Forward;
 241:main.c        ****                 //currentDirection = previousDirection;
 242:main.c        ****                 return directionState;
 243:main.c        ****             }
 244:main.c        ****         }
 245:main.c        **** 
 246:main.c        ****         if(previousDirection == TurnRight) {
 247:main.c        ****             if(s5 && s6) {
 248:main.c        ****                 directionState = TurnRight;
 249:main.c        ****                 //currentDirection = previousDirection;
 250:main.c        ****                 return directionState;
 251:main.c        ****             } 
 252:main.c        ****             else if (!s5 || !s6) {
 253:main.c        ****                 directionState = Stop;
 254:main.c        ****                 //currentDirection = previousDirection;
 255:main.c        ****                 return directionState;
 256:main.c        ****             }
 257:main.c        ****         }    
 258:main.c        **** 
 259:main.c        ****         if(previousDirection == TurnLeft) {
 260:main.c        ****             if(s5 && s6) {
 261:main.c        ****                 directionState = TurnLeft;
 262:main.c        ****                 //currentDirection = previousDirection;
 263:main.c        ****                 return directionState;
 264:main.c        ****             } 
 265:main.c        ****             else if (!s5 || !s6) {
 266:main.c        ****                 directionState = Stop;
 267:main.c        ****                 //currentDirection = previousDirection;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 27


 268:main.c        ****                 return directionState;
 269:main.c        ****             }
 270:main.c        ****         }
 271:main.c        **** 
 272:main.c        ****         */
 273:main.c        ****         // course correction
 274:main.c        ****         if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirecti
 1203              		.loc 1 274 0
 1204 008a 764B     		ldr	r3, .L79+8
 1205 008c 1B68     		ldr	r3, [r3]
 1206 008e 002B     		cmp	r3, #0
 1207 0090 07D0     		beq	.L47
 1208              		.loc 1 274 0 is_stmt 0 discriminator 1
 1209 0092 744B     		ldr	r3, .L79+8
 1210 0094 1B68     		ldr	r3, [r3]
 1211 0096 032B     		cmp	r3, #3
 1212 0098 03D0     		beq	.L47
 1213              		.loc 1 274 0 discriminator 2
 1214 009a 724B     		ldr	r3, .L79+8
 1215 009c 1B68     		ldr	r3, [r3]
 1216 009e 042B     		cmp	r3, #4
 1217 00a0 10D1     		bne	.L48
 1218              	.L47:
 275:main.c        ****             if(s6) {
 1219              		.loc 1 275 0 is_stmt 1
 1220 00a2 7A4B     		ldr	r3, .L79+48
 1221 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222 00a6 002B     		cmp	r3, #0
 1223 00a8 02D0     		beq	.L49
 276:main.c        ****                 directionState = AdjustToTheLeft; // keep adjusting to the left
 1224              		.loc 1 276 0
 1225 00aa 714B     		ldr	r3, .L79+20
 1226 00ac 0322     		movs	r2, #3
 1227 00ae 1A60     		str	r2, [r3]
 1228              	.L49:
 277:main.c        ****             }
 278:main.c        ****             if(s5) {
 1229              		.loc 1 278 0
 1230 00b0 774B     		ldr	r3, .L79+52
 1231 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1232 00b4 002B     		cmp	r3, #0
 1233 00b6 02D0     		beq	.L50
 279:main.c        ****                 directionState = AdjustToTheRight; // keep adjusting to the right
 1234              		.loc 1 279 0
 1235 00b8 6D4B     		ldr	r3, .L79+20
 1236 00ba 0422     		movs	r2, #4
 1237 00bc 1A60     		str	r2, [r3]
 1238              	.L50:
 280:main.c        ****             }
 281:main.c        ****             //previousOrientation = currentOrientation; // unchanged orientation
 282:main.c        ****             return directionState;
 1239              		.loc 1 282 0
 1240 00be 6C4B     		ldr	r3, .L79+20
 1241 00c0 1B68     		ldr	r3, [r3]
 1242 00c2 CFE1     		b	.L38
 1243              	.L48:
 283:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 28


 284:main.c        ****         
 285:main.c        ****         // forward 1100
 286:main.c        ****         if (s3 && s4 && !s5 && !s6) {
 1244              		.loc 1 286 0
 1245 00c4 734B     		ldr	r3, .L79+56
 1246 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1247 00c8 002B     		cmp	r3, #0
 1248 00ca 11D0     		beq	.L51
 1249              		.loc 1 286 0 is_stmt 0 discriminator 1
 1250 00cc 724B     		ldr	r3, .L79+60
 1251 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 00d0 002B     		cmp	r3, #0
 1253 00d2 0DD0     		beq	.L51
 1254              		.loc 1 286 0 discriminator 2
 1255 00d4 6E4B     		ldr	r3, .L79+52
 1256 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 00d8 002B     		cmp	r3, #0
 1258 00da 09D1     		bne	.L51
 1259              		.loc 1 286 0 discriminator 3
 1260 00dc 6B4B     		ldr	r3, .L79+48
 1261 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 00e0 002B     		cmp	r3, #0
 1263 00e2 05D1     		bne	.L51
 287:main.c        ****             directionState = Forward;
 1264              		.loc 1 287 0 is_stmt 1
 1265 00e4 624B     		ldr	r3, .L79+20
 1266 00e6 0022     		movs	r2, #0
 1267 00e8 1A60     		str	r2, [r3]
 288:main.c        ****             //previousOrientation = currentOrientation; // unchanged orientation
 289:main.c        ****             return directionState;   
 1268              		.loc 1 289 0
 1269 00ea 614B     		ldr	r3, .L79+20
 1270 00ec 1B68     		ldr	r3, [r3]
 1271 00ee B9E1     		b	.L38
 1272              	.L51:
 290:main.c        ****         }
 291:main.c        **** 
 292:main.c        ****         if (previousDirection == Unknown) {
 1273              		.loc 1 292 0
 1274 00f0 5C4B     		ldr	r3, .L79+8
 1275 00f2 1B68     		ldr	r3, [r3]
 1276 00f4 062B     		cmp	r3, #6
 1277 00f6 05D1     		bne	.L52
 293:main.c        ****             directionState = Forward;
 1278              		.loc 1 293 0
 1279 00f8 5D4B     		ldr	r3, .L79+20
 1280 00fa 0022     		movs	r2, #0
 1281 00fc 1A60     		str	r2, [r3]
 294:main.c        ****             //previousDirection = currentDirection;
 295:main.c        ****             return directionState;
 1282              		.loc 1 295 0
 1283 00fe 5C4B     		ldr	r3, .L79+20
 1284 0100 1B68     		ldr	r3, [r3]
 1285 0102 AFE1     		b	.L38
 1286              	.L52:
 296:main.c        ****         }
 297:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 29


 298:main.c        ****         // Possible reason
 299:main.c        ****         //previousDirection = currentDirection;
 300:main.c        ****         return previousDirection;
 1287              		.loc 1 300 0
 1288 0104 574B     		ldr	r3, .L79+8
 1289 0106 1B68     		ldr	r3, [r3]
 1290 0108 ACE1     		b	.L38
 1291              	.L73:
 301:main.c        **** 
 302:main.c        ****     } else {
 303:main.c        ****         switch (previousOrientation) {
 1292              		.loc 1 303 0
 1293 010a 5A4B     		ldr	r3, .L79+24
 1294 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295 010e 032B     		cmp	r3, #3
 1296 0110 00F29981 		bhi	.L74
 1297 0114 01A2     		adr	r2, .L55
 1298 0116 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1299 011a 00BF     		.p2align 2
 1300              	.L55:
 1301 011c 2D010000 		.word	.L54+1
 1302 0120 E3010000 		.word	.L56+1
 1303 0124 DF020000 		.word	.L57+1
 1304 0128 93030000 		.word	.L58+1
 1305              		.p2align 1
 1306              	.L54:
 304:main.c        ****             case Up:
 305:main.c        ****                 if(map[currentRow][currentCol + 1] == 8) {
 1307              		.loc 1 305 0
 1308 012c 4E4B     		ldr	r3, .L79+12
 1309 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0130 1A46     		mov	r2, r3
 1311 0132 4E4B     		ldr	r3, .L79+16
 1312 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1313 0136 591C     		adds	r1, r3, #1
 1314 0138 5848     		ldr	r0, .L79+64
 1315 013a 1346     		mov	r3, r2
 1316 013c DB00     		lsls	r3, r3, #3
 1317 013e 1344     		add	r3, r3, r2
 1318 0140 5B00     		lsls	r3, r3, #1
 1319 0142 1344     		add	r3, r3, r2
 1320 0144 0B44     		add	r3, r3, r1
 1321 0146 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1322 014a 082B     		cmp	r3, #8
 1323 014c 0CD1     		bne	.L59
 306:main.c        ****                     currentCol++;
 1324              		.loc 1 306 0
 1325 014e 474B     		ldr	r3, .L79+16
 1326 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 0152 0133     		adds	r3, r3, #1
 1328 0154 DAB2     		uxtb	r2, r3
 1329 0156 454B     		ldr	r3, .L79+16
 1330 0158 1A70     		strb	r2, [r3]
 307:main.c        ****                     currentOrientation = Up;
 1331              		.loc 1 307 0
 1332 015a 404B     		ldr	r3, .L79
 1333 015c 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 30


 1334 015e 1A70     		strb	r2, [r3]
 308:main.c        ****                     directionState = Forward;
 1335              		.loc 1 308 0
 1336 0160 434B     		ldr	r3, .L79+20
 1337 0162 0022     		movs	r2, #0
 1338 0164 1A60     		str	r2, [r3]
 309:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 310:main.c        ****                     currentRow--;
 311:main.c        ****                     currentOrientation = Left;
 312:main.c        ****                     directionState = TurnLeft;
 313:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 314:main.c        ****                     currentRow++;
 315:main.c        ****                     currentOrientation = Right;
 316:main.c        ****                     directionState = TurnRight;
 317:main.c        ****                 }
 318:main.c        ****                 break;
 1339              		.loc 1 318 0
 1340 0166 70E1     		b	.L75
 1341              	.L59:
 309:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1342              		.loc 1 309 0
 1343 0168 3F4B     		ldr	r3, .L79+12
 1344 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1345 016c 5A1E     		subs	r2, r3, #1
 1346 016e 3F4B     		ldr	r3, .L79+16
 1347 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 0172 1846     		mov	r0, r3
 1349 0174 4949     		ldr	r1, .L79+64
 1350 0176 1346     		mov	r3, r2
 1351 0178 DB00     		lsls	r3, r3, #3
 1352 017a 1344     		add	r3, r3, r2
 1353 017c 5B00     		lsls	r3, r3, #1
 1354 017e 1344     		add	r3, r3, r2
 1355 0180 0344     		add	r3, r3, r0
 1356 0182 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1357 0186 082B     		cmp	r3, #8
 1358 0188 0CD1     		bne	.L61
 310:main.c        ****                     currentOrientation = Left;
 1359              		.loc 1 310 0
 1360 018a 374B     		ldr	r3, .L79+12
 1361 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 018e 013B     		subs	r3, r3, #1
 1363 0190 DAB2     		uxtb	r2, r3
 1364 0192 354B     		ldr	r3, .L79+12
 1365 0194 1A70     		strb	r2, [r3]
 311:main.c        ****                     directionState = TurnLeft;
 1366              		.loc 1 311 0
 1367 0196 314B     		ldr	r3, .L79
 1368 0198 0222     		movs	r2, #2
 1369 019a 1A70     		strb	r2, [r3]
 312:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 1370              		.loc 1 312 0
 1371 019c 344B     		ldr	r3, .L79+20
 1372 019e 0222     		movs	r2, #2
 1373 01a0 1A60     		str	r2, [r3]
 1374              		.loc 1 318 0
 1375 01a2 52E1     		b	.L75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 31


 1376              	.L61:
 313:main.c        ****                     currentRow++;
 1377              		.loc 1 313 0
 1378 01a4 304B     		ldr	r3, .L79+12
 1379 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 01a8 5A1C     		adds	r2, r3, #1
 1381 01aa 304B     		ldr	r3, .L79+16
 1382 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 01ae 1846     		mov	r0, r3
 1384 01b0 3A49     		ldr	r1, .L79+64
 1385 01b2 1346     		mov	r3, r2
 1386 01b4 DB00     		lsls	r3, r3, #3
 1387 01b6 1344     		add	r3, r3, r2
 1388 01b8 5B00     		lsls	r3, r3, #1
 1389 01ba 1344     		add	r3, r3, r2
 1390 01bc 0344     		add	r3, r3, r0
 1391 01be 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1392 01c2 082B     		cmp	r3, #8
 1393 01c4 40F04181 		bne	.L75
 314:main.c        ****                     currentOrientation = Right;
 1394              		.loc 1 314 0
 1395 01c8 274B     		ldr	r3, .L79+12
 1396 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 01cc 0133     		adds	r3, r3, #1
 1398 01ce DAB2     		uxtb	r2, r3
 1399 01d0 254B     		ldr	r3, .L79+12
 1400 01d2 1A70     		strb	r2, [r3]
 315:main.c        ****                     directionState = TurnRight;
 1401              		.loc 1 315 0
 1402 01d4 214B     		ldr	r3, .L79
 1403 01d6 0322     		movs	r2, #3
 1404 01d8 1A70     		strb	r2, [r3]
 316:main.c        ****                 }
 1405              		.loc 1 316 0
 1406 01da 254B     		ldr	r3, .L79+20
 1407 01dc 0122     		movs	r2, #1
 1408 01de 1A60     		str	r2, [r3]
 1409              		.loc 1 318 0
 1410 01e0 33E1     		b	.L75
 1411              	.L56:
 319:main.c        ****             case Down:
 320:main.c        ****                 if(map[currentRow][currentCol - 1] == 8) {
 1412              		.loc 1 320 0
 1413 01e2 214B     		ldr	r3, .L79+12
 1414 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1415 01e6 1A46     		mov	r2, r3
 1416 01e8 204B     		ldr	r3, .L79+16
 1417 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 01ec 591E     		subs	r1, r3, #1
 1419 01ee 2B48     		ldr	r0, .L79+64
 1420 01f0 1346     		mov	r3, r2
 1421 01f2 DB00     		lsls	r3, r3, #3
 1422 01f4 1344     		add	r3, r3, r2
 1423 01f6 5B00     		lsls	r3, r3, #1
 1424 01f8 1344     		add	r3, r3, r2
 1425 01fa 0B44     		add	r3, r3, r1
 1426 01fc 50F82330 		ldr	r3, [r0, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 32


 1427 0200 082B     		cmp	r3, #8
 1428 0202 0CD1     		bne	.L63
 321:main.c        ****                     currentCol--;
 1429              		.loc 1 321 0
 1430 0204 194B     		ldr	r3, .L79+16
 1431 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 0208 013B     		subs	r3, r3, #1
 1433 020a DAB2     		uxtb	r2, r3
 1434 020c 174B     		ldr	r3, .L79+16
 1435 020e 1A70     		strb	r2, [r3]
 322:main.c        ****                     currentOrientation = Down;
 1436              		.loc 1 322 0
 1437 0210 124B     		ldr	r3, .L79
 1438 0212 0122     		movs	r2, #1
 1439 0214 1A70     		strb	r2, [r3]
 323:main.c        ****                     directionState = Forward;
 1440              		.loc 1 323 0
 1441 0216 164B     		ldr	r3, .L79+20
 1442 0218 0022     		movs	r2, #0
 1443 021a 1A60     		str	r2, [r3]
 324:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 325:main.c        ****                     currentRow--;
 326:main.c        ****                     currentOrientation = Right;
 327:main.c        ****                     directionState = TurnRight;
 328:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 329:main.c        ****                     currentRow++;
 330:main.c        ****                     currentOrientation = Left;
 331:main.c        ****                     directionState = TurnLeft;
 332:main.c        ****                 }
 333:main.c        ****                 break;
 1444              		.loc 1 333 0
 1445 021c 17E1     		b	.L76
 1446              	.L63:
 324:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1447              		.loc 1 324 0
 1448 021e 124B     		ldr	r3, .L79+12
 1449 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 0222 5A1E     		subs	r2, r3, #1
 1451 0224 114B     		ldr	r3, .L79+16
 1452 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 0228 1846     		mov	r0, r3
 1454 022a 1C49     		ldr	r1, .L79+64
 1455 022c 1346     		mov	r3, r2
 1456 022e DB00     		lsls	r3, r3, #3
 1457 0230 1344     		add	r3, r3, r2
 1458 0232 5B00     		lsls	r3, r3, #1
 1459 0234 1344     		add	r3, r3, r2
 1460 0236 0344     		add	r3, r3, r0
 1461 0238 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1462 023c 082B     		cmp	r3, #8
 1463 023e 2FD1     		bne	.L65
 325:main.c        ****                     currentOrientation = Right;
 1464              		.loc 1 325 0
 1465 0240 094B     		ldr	r3, .L79+12
 1466 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 0244 013B     		subs	r3, r3, #1
 1468 0246 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 33


 1469 0248 074B     		ldr	r3, .L79+12
 1470 024a 1A70     		strb	r2, [r3]
 326:main.c        ****                     directionState = TurnRight;
 1471              		.loc 1 326 0
 1472 024c 034B     		ldr	r3, .L79
 1473 024e 0322     		movs	r2, #3
 1474 0250 1A70     		strb	r2, [r3]
 327:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 1475              		.loc 1 327 0
 1476 0252 074B     		ldr	r3, .L79+20
 1477 0254 0122     		movs	r2, #1
 1478 0256 1A60     		str	r2, [r3]
 1479              		.loc 1 333 0
 1480 0258 F9E0     		b	.L76
 1481              	.L80:
 1482 025a 00BF     		.align	2
 1483              	.L79:
 1484 025c 00000000 		.word	currentOrientation
 1485 0260 00000000 		.word	currentDirection
 1486 0264 00000000 		.word	previousDirection
 1487 0268 00000000 		.word	currentRow
 1488 026c 00000000 		.word	currentCol
 1489 0270 00000000 		.word	directionState
 1490 0274 00000000 		.word	previousOrientation
 1491 0278 00000000 		.word	yBlockSize
 1492 027c 00000000 		.word	blockSize
 1493 0280 00000000 		.word	xBlockSize
 1494 0284 00000000 		.word	totalDistance
 1495 0288 00000000 		.word	stopBuffer
 1496 028c 00000000 		.word	s6
 1497 0290 00000000 		.word	s5
 1498 0294 00000000 		.word	s3
 1499 0298 00000000 		.word	s4
 1500 029c 44000000 		.word	map
 1501              	.L65:
 328:main.c        ****                     currentRow++;
 1502              		.loc 1 328 0
 1503 02a0 714B     		ldr	r3, .L81
 1504 02a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 02a4 5A1C     		adds	r2, r3, #1
 1506 02a6 714B     		ldr	r3, .L81+4
 1507 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 02aa 1846     		mov	r0, r3
 1509 02ac 7049     		ldr	r1, .L81+8
 1510 02ae 1346     		mov	r3, r2
 1511 02b0 DB00     		lsls	r3, r3, #3
 1512 02b2 1344     		add	r3, r3, r2
 1513 02b4 5B00     		lsls	r3, r3, #1
 1514 02b6 1344     		add	r3, r3, r2
 1515 02b8 0344     		add	r3, r3, r0
 1516 02ba 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1517 02be 082B     		cmp	r3, #8
 1518 02c0 40F0C580 		bne	.L76
 329:main.c        ****                     currentOrientation = Left;
 1519              		.loc 1 329 0
 1520 02c4 684B     		ldr	r3, .L81
 1521 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 34


 1522 02c8 0133     		adds	r3, r3, #1
 1523 02ca DAB2     		uxtb	r2, r3
 1524 02cc 664B     		ldr	r3, .L81
 1525 02ce 1A70     		strb	r2, [r3]
 330:main.c        ****                     directionState = TurnLeft;
 1526              		.loc 1 330 0
 1527 02d0 684B     		ldr	r3, .L81+12
 1528 02d2 0222     		movs	r2, #2
 1529 02d4 1A70     		strb	r2, [r3]
 331:main.c        ****                 }
 1530              		.loc 1 331 0
 1531 02d6 684B     		ldr	r3, .L81+16
 1532 02d8 0222     		movs	r2, #2
 1533 02da 1A60     		str	r2, [r3]
 1534              		.loc 1 333 0
 1535 02dc B7E0     		b	.L76
 1536              	.L57:
 334:main.c        ****             case Left:
 335:main.c        ****                 if(map[currentRow - 1][currentCol] == 8) {
 1537              		.loc 1 335 0
 1538 02de 624B     		ldr	r3, .L81
 1539 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 02e2 5A1E     		subs	r2, r3, #1
 1541 02e4 614B     		ldr	r3, .L81+4
 1542 02e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1543 02e8 1846     		mov	r0, r3
 1544 02ea 6149     		ldr	r1, .L81+8
 1545 02ec 1346     		mov	r3, r2
 1546 02ee DB00     		lsls	r3, r3, #3
 1547 02f0 1344     		add	r3, r3, r2
 1548 02f2 5B00     		lsls	r3, r3, #1
 1549 02f4 1344     		add	r3, r3, r2
 1550 02f6 0344     		add	r3, r3, r0
 1551 02f8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1552 02fc 082B     		cmp	r3, #8
 1553 02fe 0CD1     		bne	.L66
 336:main.c        ****                     currentRow--;
 1554              		.loc 1 336 0
 1555 0300 594B     		ldr	r3, .L81
 1556 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0304 013B     		subs	r3, r3, #1
 1558 0306 DAB2     		uxtb	r2, r3
 1559 0308 574B     		ldr	r3, .L81
 1560 030a 1A70     		strb	r2, [r3]
 337:main.c        ****                     currentOrientation = Left;
 1561              		.loc 1 337 0
 1562 030c 594B     		ldr	r3, .L81+12
 1563 030e 0222     		movs	r2, #2
 1564 0310 1A70     		strb	r2, [r3]
 338:main.c        ****                     directionState = Forward;
 1565              		.loc 1 338 0
 1566 0312 594B     		ldr	r3, .L81+16
 1567 0314 0022     		movs	r2, #0
 1568 0316 1A60     		str	r2, [r3]
 339:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 340:main.c        ****                     currentCol++;
 341:main.c        ****                     currentOrientation = Up;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 35


 342:main.c        ****                     directionState = TurnRight;
 343:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 344:main.c        ****                     currentCol--;
 345:main.c        ****                     currentOrientation = Down;
 346:main.c        ****                     directionState = TurnLeft;
 347:main.c        ****                 }
 348:main.c        ****                 break;
 1569              		.loc 1 348 0
 1570 0318 9BE0     		b	.L77
 1571              	.L66:
 339:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 1572              		.loc 1 339 0
 1573 031a 534B     		ldr	r3, .L81
 1574 031c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 031e 1A46     		mov	r2, r3
 1576 0320 524B     		ldr	r3, .L81+4
 1577 0322 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1578 0324 591C     		adds	r1, r3, #1
 1579 0326 5248     		ldr	r0, .L81+8
 1580 0328 1346     		mov	r3, r2
 1581 032a DB00     		lsls	r3, r3, #3
 1582 032c 1344     		add	r3, r3, r2
 1583 032e 5B00     		lsls	r3, r3, #1
 1584 0330 1344     		add	r3, r3, r2
 1585 0332 0B44     		add	r3, r3, r1
 1586 0334 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1587 0338 082B     		cmp	r3, #8
 1588 033a 0CD1     		bne	.L68
 340:main.c        ****                     currentOrientation = Up;
 1589              		.loc 1 340 0
 1590 033c 4B4B     		ldr	r3, .L81+4
 1591 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1592 0340 0133     		adds	r3, r3, #1
 1593 0342 DAB2     		uxtb	r2, r3
 1594 0344 494B     		ldr	r3, .L81+4
 1595 0346 1A70     		strb	r2, [r3]
 341:main.c        ****                     directionState = TurnRight;
 1596              		.loc 1 341 0
 1597 0348 4A4B     		ldr	r3, .L81+12
 1598 034a 0022     		movs	r2, #0
 1599 034c 1A70     		strb	r2, [r3]
 342:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 1600              		.loc 1 342 0
 1601 034e 4A4B     		ldr	r3, .L81+16
 1602 0350 0122     		movs	r2, #1
 1603 0352 1A60     		str	r2, [r3]
 1604              		.loc 1 348 0
 1605 0354 7DE0     		b	.L77
 1606              	.L68:
 343:main.c        ****                     currentCol--;
 1607              		.loc 1 343 0
 1608 0356 444B     		ldr	r3, .L81
 1609 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 035a 1A46     		mov	r2, r3
 1611 035c 434B     		ldr	r3, .L81+4
 1612 035e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1613 0360 591E     		subs	r1, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 36


 1614 0362 4348     		ldr	r0, .L81+8
 1615 0364 1346     		mov	r3, r2
 1616 0366 DB00     		lsls	r3, r3, #3
 1617 0368 1344     		add	r3, r3, r2
 1618 036a 5B00     		lsls	r3, r3, #1
 1619 036c 1344     		add	r3, r3, r2
 1620 036e 0B44     		add	r3, r3, r1
 1621 0370 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1622 0374 082B     		cmp	r3, #8
 1623 0376 6CD1     		bne	.L77
 344:main.c        ****                     currentOrientation = Down;
 1624              		.loc 1 344 0
 1625 0378 3C4B     		ldr	r3, .L81+4
 1626 037a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1627 037c 013B     		subs	r3, r3, #1
 1628 037e DAB2     		uxtb	r2, r3
 1629 0380 3A4B     		ldr	r3, .L81+4
 1630 0382 1A70     		strb	r2, [r3]
 345:main.c        ****                     directionState = TurnLeft;
 1631              		.loc 1 345 0
 1632 0384 3B4B     		ldr	r3, .L81+12
 1633 0386 0122     		movs	r2, #1
 1634 0388 1A70     		strb	r2, [r3]
 346:main.c        ****                 }
 1635              		.loc 1 346 0
 1636 038a 3B4B     		ldr	r3, .L81+16
 1637 038c 0222     		movs	r2, #2
 1638 038e 1A60     		str	r2, [r3]
 1639              		.loc 1 348 0
 1640 0390 5FE0     		b	.L77
 1641              	.L58:
 349:main.c        ****             case Right:
 350:main.c        ****                 if(map[currentRow + 1][currentCol] == 8) {
 1642              		.loc 1 350 0
 1643 0392 354B     		ldr	r3, .L81
 1644 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1645 0396 5A1C     		adds	r2, r3, #1
 1646 0398 344B     		ldr	r3, .L81+4
 1647 039a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1648 039c 1846     		mov	r0, r3
 1649 039e 3449     		ldr	r1, .L81+8
 1650 03a0 1346     		mov	r3, r2
 1651 03a2 DB00     		lsls	r3, r3, #3
 1652 03a4 1344     		add	r3, r3, r2
 1653 03a6 5B00     		lsls	r3, r3, #1
 1654 03a8 1344     		add	r3, r3, r2
 1655 03aa 0344     		add	r3, r3, r0
 1656 03ac 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1657 03b0 082B     		cmp	r3, #8
 1658 03b2 0CD1     		bne	.L69
 351:main.c        ****                     currentRow++;
 1659              		.loc 1 351 0
 1660 03b4 2C4B     		ldr	r3, .L81
 1661 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1662 03b8 0133     		adds	r3, r3, #1
 1663 03ba DAB2     		uxtb	r2, r3
 1664 03bc 2A4B     		ldr	r3, .L81
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 37


 1665 03be 1A70     		strb	r2, [r3]
 352:main.c        ****                     currentOrientation = Right;
 1666              		.loc 1 352 0
 1667 03c0 2C4B     		ldr	r3, .L81+12
 1668 03c2 0322     		movs	r2, #3
 1669 03c4 1A70     		strb	r2, [r3]
 353:main.c        ****                     directionState = Forward;
 1670              		.loc 1 353 0
 1671 03c6 2C4B     		ldr	r3, .L81+16
 1672 03c8 0022     		movs	r2, #0
 1673 03ca 1A60     		str	r2, [r3]
 354:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 355:main.c        ****                     currentCol++;
 356:main.c        ****                     currentOrientation = Up;
 357:main.c        ****                     directionState = TurnLeft;
 358:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 359:main.c        ****                     currentCol--;
 360:main.c        ****                     currentOrientation = Down;
 361:main.c        ****                     directionState = TurnRight;
 362:main.c        ****                 }
 363:main.c        ****                 break;
 1674              		.loc 1 363 0
 1675 03cc 43E0     		b	.L78
 1676              	.L69:
 354:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 1677              		.loc 1 354 0
 1678 03ce 264B     		ldr	r3, .L81
 1679 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1680 03d2 1A46     		mov	r2, r3
 1681 03d4 254B     		ldr	r3, .L81+4
 1682 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 03d8 591C     		adds	r1, r3, #1
 1684 03da 2548     		ldr	r0, .L81+8
 1685 03dc 1346     		mov	r3, r2
 1686 03de DB00     		lsls	r3, r3, #3
 1687 03e0 1344     		add	r3, r3, r2
 1688 03e2 5B00     		lsls	r3, r3, #1
 1689 03e4 1344     		add	r3, r3, r2
 1690 03e6 0B44     		add	r3, r3, r1
 1691 03e8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1692 03ec 082B     		cmp	r3, #8
 1693 03ee 0CD1     		bne	.L71
 355:main.c        ****                     currentOrientation = Up;
 1694              		.loc 1 355 0
 1695 03f0 1E4B     		ldr	r3, .L81+4
 1696 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1697 03f4 0133     		adds	r3, r3, #1
 1698 03f6 DAB2     		uxtb	r2, r3
 1699 03f8 1C4B     		ldr	r3, .L81+4
 1700 03fa 1A70     		strb	r2, [r3]
 356:main.c        ****                     directionState = TurnLeft;
 1701              		.loc 1 356 0
 1702 03fc 1D4B     		ldr	r3, .L81+12
 1703 03fe 0022     		movs	r2, #0
 1704 0400 1A70     		strb	r2, [r3]
 357:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 1705              		.loc 1 357 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 38


 1706 0402 1D4B     		ldr	r3, .L81+16
 1707 0404 0222     		movs	r2, #2
 1708 0406 1A60     		str	r2, [r3]
 1709              		.loc 1 363 0
 1710 0408 25E0     		b	.L78
 1711              	.L71:
 358:main.c        ****                     currentCol--;
 1712              		.loc 1 358 0
 1713 040a 174B     		ldr	r3, .L81
 1714 040c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1715 040e 1A46     		mov	r2, r3
 1716 0410 164B     		ldr	r3, .L81+4
 1717 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1718 0414 591E     		subs	r1, r3, #1
 1719 0416 1648     		ldr	r0, .L81+8
 1720 0418 1346     		mov	r3, r2
 1721 041a DB00     		lsls	r3, r3, #3
 1722 041c 1344     		add	r3, r3, r2
 1723 041e 5B00     		lsls	r3, r3, #1
 1724 0420 1344     		add	r3, r3, r2
 1725 0422 0B44     		add	r3, r3, r1
 1726 0424 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1727 0428 082B     		cmp	r3, #8
 1728 042a 14D1     		bne	.L78
 359:main.c        ****                     currentOrientation = Down;
 1729              		.loc 1 359 0
 1730 042c 0F4B     		ldr	r3, .L81+4
 1731 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1732 0430 013B     		subs	r3, r3, #1
 1733 0432 DAB2     		uxtb	r2, r3
 1734 0434 0D4B     		ldr	r3, .L81+4
 1735 0436 1A70     		strb	r2, [r3]
 360:main.c        ****                     directionState = TurnRight;
 1736              		.loc 1 360 0
 1737 0438 0E4B     		ldr	r3, .L81+12
 1738 043a 0122     		movs	r2, #1
 1739 043c 1A70     		strb	r2, [r3]
 361:main.c        ****                 }
 1740              		.loc 1 361 0
 1741 043e 0E4B     		ldr	r3, .L81+16
 1742 0440 0122     		movs	r2, #1
 1743 0442 1A60     		str	r2, [r3]
 1744              		.loc 1 363 0
 1745 0444 07E0     		b	.L78
 1746              	.L74:
 364:main.c        ****             default:
 365:main.c        ****                 break;
 1747              		.loc 1 365 0
 1748 0446 00BF     		nop
 1749 0448 06E0     		b	.L62
 1750              	.L75:
 318:main.c        ****             case Down:
 1751              		.loc 1 318 0
 1752 044a 00BF     		nop
 1753 044c 04E0     		b	.L62
 1754              	.L76:
 333:main.c        ****             case Left:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 39


 1755              		.loc 1 333 0
 1756 044e 00BF     		nop
 1757 0450 02E0     		b	.L62
 1758              	.L77:
 348:main.c        ****             case Right:
 1759              		.loc 1 348 0
 1760 0452 00BF     		nop
 1761 0454 00E0     		b	.L62
 1762              	.L78:
 363:main.c        ****             default:
 1763              		.loc 1 363 0
 1764 0456 00BF     		nop
 1765              	.L62:
 366:main.c        ****         }
 367:main.c        ****         totalDistance = 0; // reset total distance
 1766              		.loc 1 367 0
 1767 0458 084B     		ldr	r3, .L81+20
 1768 045a 4FF00002 		mov	r2, #0
 1769 045e 1A60     		str	r2, [r3]	@ float
 368:main.c        ****     }
 369:main.c        ****     return previousDirection;
 1770              		.loc 1 369 0
 1771 0460 074B     		ldr	r3, .L81+24
 1772 0462 1B68     		ldr	r3, [r3]
 1773              	.L38:
 370:main.c        **** }
 1774              		.loc 1 370 0
 1775 0464 1846     		mov	r0, r3
 1776 0466 80BD     		pop	{r7, pc}
 1777              	.L82:
 1778              		.align	2
 1779              	.L81:
 1780 0468 00000000 		.word	currentRow
 1781 046c 00000000 		.word	currentCol
 1782 0470 44000000 		.word	map
 1783 0474 00000000 		.word	currentOrientation
 1784 0478 00000000 		.word	directionState
 1785 047c 00000000 		.word	totalDistance
 1786 0480 00000000 		.word	previousDirection
 1787              		.cfi_endproc
 1788              	.LFE73:
 1789              		.size	getDirection, .-getDirection
 1790              		.global	__aeabi_fcmpge
 1791              		.section	.text.CheckSensorDirection,"ax",%progbits
 1792              		.align	2
 1793              		.global	CheckSensorDirection
 1794              		.thumb
 1795              		.thumb_func
 1796              		.type	CheckSensorDirection, %function
 1797              	CheckSensorDirection:
 1798              	.LFB74:
 371:main.c        **** 
 372:main.c        **** enum DirectionState CheckSensorDirection() {
 1799              		.loc 1 372 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 40


 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 00AF     		add	r7, sp, #0
 1808              		.cfi_def_cfa_register 7
 373:main.c        ****     directionState = Stop;
 1809              		.loc 1 373 0
 1810 0004 914B     		ldr	r3, .L140
 1811 0006 0522     		movs	r2, #5
 1812 0008 1A60     		str	r2, [r3]
 374:main.c        ****     currentOrientation = Up; // initialise at start
 1813              		.loc 1 374 0
 1814 000a 914B     		ldr	r3, .L140+4
 1815 000c 0022     		movs	r2, #0
 1816 000e 1A70     		strb	r2, [r3]
 375:main.c        ****     previousDirection = currentDirection;
 1817              		.loc 1 375 0
 1818 0010 904B     		ldr	r3, .L140+8
 1819 0012 1B68     		ldr	r3, [r3]
 1820 0014 904A     		ldr	r2, .L140+12
 1821 0016 1360     		str	r3, [r2]
 376:main.c        ****     // determine orientation and relevant blocksize
 377:main.c        ****     if(currentOrientation == Up || Down) {
 378:main.c        ****         blockSize = yBlockSize;
 1822              		.loc 1 378 0
 1823 0018 904B     		ldr	r3, .L140+16
 1824 001a 1B68     		ldr	r3, [r3]	@ float
 1825 001c 904A     		ldr	r2, .L140+20
 1826 001e 1360     		str	r3, [r2]	@ float
 379:main.c        ****     } else {
 380:main.c        ****         blockSize = xBlockSize;
 381:main.c        ****     }
 382:main.c        ****     // BLOCK TRACKING
 383:main.c        ****     if (totalDistance >= blockSize) {
 1827              		.loc 1 383 0
 1828 0020 904B     		ldr	r3, .L140+24
 1829 0022 1A68     		ldr	r2, [r3]	@ float
 1830 0024 8E4B     		ldr	r3, .L140+20
 1831 0026 1B68     		ldr	r3, [r3]	@ float
 1832 0028 1946     		mov	r1, r3
 1833 002a 1046     		mov	r0, r2
 1834 002c FFF7FEFF 		bl	__aeabi_fcmpge
 1835 0030 0346     		mov	r3, r0
 1836 0032 002B     		cmp	r3, #0
 1837 0034 2FD0     		beq	.L84
 384:main.c        ****         switch(currentOrientation) {
 1838              		.loc 1 384 0
 1839 0036 864B     		ldr	r3, .L140+4
 1840 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 003a 032B     		cmp	r3, #3
 1842 003c 26D8     		bhi	.L134
 1843 003e 01A2     		adr	r2, .L88
 1844 0040 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1845              		.p2align 2
 1846              	.L88:
 1847 0044 55000000 		.word	.L87+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 41


 1848 0048 63000000 		.word	.L89+1
 1849 004c 71000000 		.word	.L90+1
 1850 0050 7F000000 		.word	.L91+1
 1851              		.p2align 1
 1852              	.L87:
 385:main.c        ****             case Up:
 386:main.c        ****                 currentCol++;
 1853              		.loc 1 386 0
 1854 0054 844B     		ldr	r3, .L140+28
 1855 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1856 0058 0133     		adds	r3, r3, #1
 1857 005a DAB2     		uxtb	r2, r3
 1858 005c 824B     		ldr	r3, .L140+28
 1859 005e 1A70     		strb	r2, [r3]
 387:main.c        ****                 break;
 1860              		.loc 1 387 0
 1861 0060 15E0     		b	.L92
 1862              	.L89:
 388:main.c        ****             case Down:
 389:main.c        ****                 currentCol--;
 1863              		.loc 1 389 0
 1864 0062 814B     		ldr	r3, .L140+28
 1865 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1866 0066 013B     		subs	r3, r3, #1
 1867 0068 DAB2     		uxtb	r2, r3
 1868 006a 7F4B     		ldr	r3, .L140+28
 1869 006c 1A70     		strb	r2, [r3]
 390:main.c        ****                 break;
 1870              		.loc 1 390 0
 1871 006e 0EE0     		b	.L92
 1872              	.L90:
 391:main.c        ****             case Left:
 392:main.c        ****                 currentRow--;
 1873              		.loc 1 392 0
 1874 0070 7E4B     		ldr	r3, .L140+32
 1875 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1876 0074 013B     		subs	r3, r3, #1
 1877 0076 DAB2     		uxtb	r2, r3
 1878 0078 7C4B     		ldr	r3, .L140+32
 1879 007a 1A70     		strb	r2, [r3]
 393:main.c        ****                 break;
 1880              		.loc 1 393 0
 1881 007c 07E0     		b	.L92
 1882              	.L91:
 394:main.c        ****             case Right:
 395:main.c        ****                 currentRow++;
 1883              		.loc 1 395 0
 1884 007e 7B4B     		ldr	r3, .L140+32
 1885 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1886 0082 0133     		adds	r3, r3, #1
 1887 0084 DAB2     		uxtb	r2, r3
 1888 0086 794B     		ldr	r3, .L140+32
 1889 0088 1A70     		strb	r2, [r3]
 396:main.c        ****                 break;
 1890              		.loc 1 396 0
 1891 008a 00E0     		b	.L92
 1892              	.L134:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 42


 397:main.c        ****             default:
 398:main.c        ****                 break;
 1893              		.loc 1 398 0
 1894 008c 00BF     		nop
 1895              	.L92:
 399:main.c        ****         }
 400:main.c        ****         totalDistance = 0; // reset total distance
 1896              		.loc 1 400 0
 1897 008e 754B     		ldr	r3, .L140+24
 1898 0090 4FF00002 		mov	r2, #0
 1899 0094 1A60     		str	r2, [r3]	@ float
 1900              	.L84:
 401:main.c        ****     }
 402:main.c        **** 
 403:main.c        ****    // MOVEMENT
 404:main.c        ****     if (previousDirection == Stop) {
 1901              		.loc 1 404 0
 1902 0096 704B     		ldr	r3, .L140+12
 1903 0098 1B68     		ldr	r3, [r3]
 1904 009a 052B     		cmp	r3, #5
 1905 009c 11D1     		bne	.L93
 405:main.c        ****         if (stopBuffer <= 10) {
 1906              		.loc 1 405 0
 1907 009e 744B     		ldr	r3, .L140+36
 1908 00a0 1B68     		ldr	r3, [r3]
 1909 00a2 0A2B     		cmp	r3, #10
 1910 00a4 03D8     		bhi	.L94
 406:main.c        ****             directionState = Stop;
 1911              		.loc 1 406 0
 1912 00a6 694B     		ldr	r3, .L140
 1913 00a8 0522     		movs	r2, #5
 1914 00aa 1A60     		str	r2, [r3]
 1915 00ac 02E0     		b	.L95
 1916              	.L94:
 407:main.c        ****         } else {
 408:main.c        ****             directionState = ForwardAfterTurn;
 1917              		.loc 1 408 0
 1918 00ae 674B     		ldr	r3, .L140
 1919 00b0 0922     		movs	r2, #9
 1920 00b2 1A60     		str	r2, [r3]
 1921              	.L95:
 409:main.c        ****         }
 410:main.c        ****         currentDirection = previousDirection;
 1922              		.loc 1 410 0
 1923 00b4 684B     		ldr	r3, .L140+12
 1924 00b6 1B68     		ldr	r3, [r3]
 1925 00b8 664A     		ldr	r2, .L140+8
 1926 00ba 1360     		str	r3, [r2]
 411:main.c        ****         return directionState;
 1927              		.loc 1 411 0
 1928 00bc 634B     		ldr	r3, .L140
 1929 00be 1B68     		ldr	r3, [r3]
 1930 00c0 31E2     		b	.L96
 1931              	.L93:
 412:main.c        ****     }
 413:main.c        ****     
 414:main.c        ****     // If one of the sensors are still on the line after we turn, move forward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 43


 415:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1932              		.loc 1 415 0
 1933 00c2 654B     		ldr	r3, .L140+12
 1934 00c4 1B68     		ldr	r3, [r3]
 1935 00c6 092B     		cmp	r3, #9
 1936 00c8 15D1     		bne	.L97
 416:main.c        ****         if (s3 || s4) {
 1937              		.loc 1 416 0
 1938 00ca 6A4B     		ldr	r3, .L140+40
 1939 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1940 00ce 002B     		cmp	r3, #0
 1941 00d0 03D1     		bne	.L98
 1942              		.loc 1 416 0 is_stmt 0 discriminator 1
 1943 00d2 694B     		ldr	r3, .L140+44
 1944 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 00d6 002B     		cmp	r3, #0
 1946 00d8 0DD0     		beq	.L97
 1947              	.L98:
 417:main.c        ****             totalDistance = 0; // reset total distance after turn
 1948              		.loc 1 417 0 is_stmt 1
 1949 00da 624B     		ldr	r3, .L140+24
 1950 00dc 4FF00002 		mov	r2, #0
 1951 00e0 1A60     		str	r2, [r3]	@ float
 418:main.c        ****             directionState = Forward;
 1952              		.loc 1 418 0
 1953 00e2 5A4B     		ldr	r3, .L140
 1954 00e4 0022     		movs	r2, #0
 1955 00e6 1A60     		str	r2, [r3]
 419:main.c        ****             currentDirection = previousDirection;
 1956              		.loc 1 419 0
 1957 00e8 5B4B     		ldr	r3, .L140+12
 1958 00ea 1B68     		ldr	r3, [r3]
 1959 00ec 594A     		ldr	r2, .L140+8
 1960 00ee 1360     		str	r3, [r2]
 420:main.c        ****             return directionState;
 1961              		.loc 1 420 0
 1962 00f0 564B     		ldr	r3, .L140
 1963 00f2 1B68     		ldr	r3, [r3]
 1964 00f4 17E2     		b	.L96
 1965              	.L97:
 421:main.c        ****         }
 422:main.c        ****     }
 423:main.c        **** 
 424:main.c        ****     if(previousDirection == TurnRight) {
 1966              		.loc 1 424 0
 1967 00f6 584B     		ldr	r3, .L140+12
 1968 00f8 1B68     		ldr	r3, [r3]
 1969 00fa 012B     		cmp	r3, #1
 1970 00fc 23D1     		bne	.L99
 425:main.c        ****         if(s5 && s6) {
 1971              		.loc 1 425 0
 1972 00fe 5F4B     		ldr	r3, .L140+48
 1973 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1974 0102 002B     		cmp	r3, #0
 1975 0104 0DD0     		beq	.L100
 1976              		.loc 1 425 0 is_stmt 0 discriminator 1
 1977 0106 5E4B     		ldr	r3, .L140+52
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 44


 1978 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1979 010a 002B     		cmp	r3, #0
 1980 010c 09D0     		beq	.L100
 426:main.c        ****             directionState = TurnRight;
 1981              		.loc 1 426 0 is_stmt 1
 1982 010e 4F4B     		ldr	r3, .L140
 1983 0110 0122     		movs	r2, #1
 1984 0112 1A60     		str	r2, [r3]
 427:main.c        ****             currentDirection = previousDirection;
 1985              		.loc 1 427 0
 1986 0114 504B     		ldr	r3, .L140+12
 1987 0116 1B68     		ldr	r3, [r3]
 1988 0118 4E4A     		ldr	r2, .L140+8
 1989 011a 1360     		str	r3, [r2]
 428:main.c        ****             return directionState;
 1990              		.loc 1 428 0
 1991 011c 4B4B     		ldr	r3, .L140
 1992 011e 1B68     		ldr	r3, [r3]
 1993 0120 01E2     		b	.L96
 1994              	.L100:
 429:main.c        ****         } 
 430:main.c        ****         else if (!s5 || !s6) {
 1995              		.loc 1 430 0
 1996 0122 564B     		ldr	r3, .L140+48
 1997 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1998 0126 002B     		cmp	r3, #0
 1999 0128 03D0     		beq	.L101
 2000              		.loc 1 430 0 is_stmt 0 discriminator 1
 2001 012a 554B     		ldr	r3, .L140+52
 2002 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2003 012e 002B     		cmp	r3, #0
 2004 0130 09D1     		bne	.L99
 2005              	.L101:
 431:main.c        ****             directionState = Stop;
 2006              		.loc 1 431 0 is_stmt 1
 2007 0132 464B     		ldr	r3, .L140
 2008 0134 0522     		movs	r2, #5
 2009 0136 1A60     		str	r2, [r3]
 432:main.c        ****             currentDirection = previousDirection;
 2010              		.loc 1 432 0
 2011 0138 474B     		ldr	r3, .L140+12
 2012 013a 1B68     		ldr	r3, [r3]
 2013 013c 454A     		ldr	r2, .L140+8
 2014 013e 1360     		str	r3, [r2]
 433:main.c        ****             return directionState;
 2015              		.loc 1 433 0
 2016 0140 424B     		ldr	r3, .L140
 2017 0142 1B68     		ldr	r3, [r3]
 2018 0144 EFE1     		b	.L96
 2019              	.L99:
 434:main.c        ****         }
 435:main.c        ****     }    
 436:main.c        **** 
 437:main.c        ****     if(previousDirection == TurnLeft) {
 2020              		.loc 1 437 0
 2021 0146 444B     		ldr	r3, .L140+12
 2022 0148 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 45


 2023 014a 022B     		cmp	r3, #2
 2024 014c 23D1     		bne	.L102
 438:main.c        ****         if(s5 && s6) {
 2025              		.loc 1 438 0
 2026 014e 4B4B     		ldr	r3, .L140+48
 2027 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2028 0152 002B     		cmp	r3, #0
 2029 0154 0DD0     		beq	.L103
 2030              		.loc 1 438 0 is_stmt 0 discriminator 1
 2031 0156 4A4B     		ldr	r3, .L140+52
 2032 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2033 015a 002B     		cmp	r3, #0
 2034 015c 09D0     		beq	.L103
 439:main.c        ****             directionState = TurnLeft;
 2035              		.loc 1 439 0 is_stmt 1
 2036 015e 3B4B     		ldr	r3, .L140
 2037 0160 0222     		movs	r2, #2
 2038 0162 1A60     		str	r2, [r3]
 440:main.c        ****             currentDirection = previousDirection;
 2039              		.loc 1 440 0
 2040 0164 3C4B     		ldr	r3, .L140+12
 2041 0166 1B68     		ldr	r3, [r3]
 2042 0168 3A4A     		ldr	r2, .L140+8
 2043 016a 1360     		str	r3, [r2]
 441:main.c        ****             return directionState;
 2044              		.loc 1 441 0
 2045 016c 374B     		ldr	r3, .L140
 2046 016e 1B68     		ldr	r3, [r3]
 2047 0170 D9E1     		b	.L96
 2048              	.L103:
 442:main.c        ****         } 
 443:main.c        ****         else if (!s5 || !s6) {
 2049              		.loc 1 443 0
 2050 0172 424B     		ldr	r3, .L140+48
 2051 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2052 0176 002B     		cmp	r3, #0
 2053 0178 03D0     		beq	.L104
 2054              		.loc 1 443 0 is_stmt 0 discriminator 1
 2055 017a 414B     		ldr	r3, .L140+52
 2056 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2057 017e 002B     		cmp	r3, #0
 2058 0180 09D1     		bne	.L102
 2059              	.L104:
 444:main.c        ****             directionState = Stop;
 2060              		.loc 1 444 0 is_stmt 1
 2061 0182 324B     		ldr	r3, .L140
 2062 0184 0522     		movs	r2, #5
 2063 0186 1A60     		str	r2, [r3]
 445:main.c        ****             currentDirection = previousDirection;
 2064              		.loc 1 445 0
 2065 0188 334B     		ldr	r3, .L140+12
 2066 018a 1B68     		ldr	r3, [r3]
 2067 018c 314A     		ldr	r2, .L140+8
 2068 018e 1360     		str	r3, [r2]
 446:main.c        ****             return directionState;
 2069              		.loc 1 446 0
 2070 0190 2E4B     		ldr	r3, .L140
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 46


 2071 0192 1B68     		ldr	r3, [r3]
 2072 0194 C7E1     		b	.L96
 2073              	.L102:
 447:main.c        ****         }
 448:main.c        ****     }
 449:main.c        ****     
 450:main.c        ****     /*if (previousDirection == waitForTurn) {
 451:main.c        ****         // If we are waiting for a turn, look for left sensor and right sensor, otherwise keep wait
 452:main.c        ****         if (!s3) {
 453:main.c        ****             directionState = TurnLeft;
 454:main.c        ****             return directionState;
 455:main.c        ****         }
 456:main.c        ****         if (!s4) {
 457:main.c        ****             directionState = TurnRight;   
 458:main.c        ****             return directionState;
 459:main.c        ****         }
 460:main.c        ****         directionState = waitForTurn;
 461:main.c        ****         return directionState;
 462:main.c        ****     }*/
 463:main.c        **** 
 464:main.c        ****     // reached fork/ alternate paths or needs to turn
 465:main.c        ****     if((previousDirection == Forward && (s3 || s4)) || (previousDirection == waitForTurn && s3 && s
 2074              		.loc 1 465 0
 2075 0196 304B     		ldr	r3, .L140+12
 2076 0198 1B68     		ldr	r3, [r3]
 2077 019a 002B     		cmp	r3, #0
 2078 019c 07D1     		bne	.L105
 2079              		.loc 1 465 0 is_stmt 0 discriminator 1
 2080 019e 354B     		ldr	r3, .L140+40
 2081 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2082 01a2 002B     		cmp	r3, #0
 2083 01a4 12D1     		bne	.L106
 2084              		.loc 1 465 0 discriminator 3
 2085 01a6 344B     		ldr	r3, .L140+44
 2086 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2087 01aa 002B     		cmp	r3, #0
 2088 01ac 0ED1     		bne	.L106
 2089              	.L105:
 2090              		.loc 1 465 0 discriminator 4
 2091 01ae 2A4B     		ldr	r3, .L140+12
 2092 01b0 1B68     		ldr	r3, [r3]
 2093 01b2 082B     		cmp	r3, #8
 2094 01b4 40F06881 		bne	.L107
 2095              		.loc 1 465 0 discriminator 5
 2096 01b8 2E4B     		ldr	r3, .L140+40
 2097 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2098 01bc 002B     		cmp	r3, #0
 2099 01be 00F06381 		beq	.L107
 2100              		.loc 1 465 0 discriminator 6
 2101 01c2 2D4B     		ldr	r3, .L140+44
 2102 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2103 01c6 002B     		cmp	r3, #0
 2104 01c8 00F05E81 		beq	.L107
 2105              	.L106:
 466:main.c        ****         // check for next step in calculated path, robot will know it's location and next step
 467:main.c        ****         // optimal steps are marked with an 8
 468:main.c        ****         switch (previousOrientation) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 47


 2106              		.loc 1 468 0 is_stmt 1
 2107 01cc 2D4B     		ldr	r3, .L140+56
 2108 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2109 01d0 032B     		cmp	r3, #3
 2110 01d2 00F24D81 		bhi	.L135
 2111 01d6 01A2     		adr	r2, .L110
 2112 01d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2113              		.p2align 2
 2114              	.L110:
 2115 01dc ED010000 		.word	.L109+1
 2116 01e0 BF020000 		.word	.L111+1
 2117 01e4 51030000 		.word	.L112+1
 2118 01e8 E1030000 		.word	.L113+1
 2119              		.p2align 1
 2120              	.L109:
 469:main.c        ****             case Up:
 470:main.c        ****                 if(map[currentRow][currentCol + 1] == 8) {
 2121              		.loc 1 470 0
 2122 01ec 1F4B     		ldr	r3, .L140+32
 2123 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2124 01f0 1A46     		mov	r2, r3
 2125 01f2 1D4B     		ldr	r3, .L140+28
 2126 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2127 01f6 591C     		adds	r1, r3, #1
 2128 01f8 2348     		ldr	r0, .L140+60
 2129 01fa 1346     		mov	r3, r2
 2130 01fc DB00     		lsls	r3, r3, #3
 2131 01fe 1344     		add	r3, r3, r2
 2132 0200 5B00     		lsls	r3, r3, #1
 2133 0202 1344     		add	r3, r3, r2
 2134 0204 0B44     		add	r3, r3, r1
 2135 0206 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2136 020a 082B     		cmp	r3, #8
 2137 020c 06D1     		bne	.L114
 471:main.c        ****                     currentOrientation = Up;
 2138              		.loc 1 471 0
 2139 020e 104B     		ldr	r3, .L140+4
 2140 0210 0022     		movs	r2, #0
 2141 0212 1A70     		strb	r2, [r3]
 472:main.c        ****                     directionState = Forward;
 2142              		.loc 1 472 0
 2143 0214 0D4B     		ldr	r3, .L140
 2144 0216 0022     		movs	r2, #0
 2145 0218 1A60     		str	r2, [r3]
 473:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 474:main.c        ****                     currentOrientation = Left;
 475:main.c        ****                     directionState = TurnLeft;
 476:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 477:main.c        ****                     currentOrientation = Right;
 478:main.c        ****                     directionState = TurnRight;
 479:main.c        ****                 }
 480:main.c        ****                 break;
 2146              		.loc 1 480 0
 2147 021a 2BE1     		b	.L136
 2148              	.L114:
 473:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 2149              		.loc 1 473 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 48


 2150 021c 134B     		ldr	r3, .L140+32
 2151 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 0220 5A1E     		subs	r2, r3, #1
 2153 0222 114B     		ldr	r3, .L140+28
 2154 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0226 1846     		mov	r0, r3
 2156 0228 1749     		ldr	r1, .L140+60
 2157 022a 1346     		mov	r3, r2
 2158 022c DB00     		lsls	r3, r3, #3
 2159 022e 1344     		add	r3, r3, r2
 2160 0230 5B00     		lsls	r3, r3, #1
 2161 0232 1344     		add	r3, r3, r2
 2162 0234 0344     		add	r3, r3, r0
 2163 0236 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2164 023a 082B     		cmp	r3, #8
 2165 023c 26D1     		bne	.L116
 474:main.c        ****                     directionState = TurnLeft;
 2166              		.loc 1 474 0
 2167 023e 044B     		ldr	r3, .L140+4
 2168 0240 0222     		movs	r2, #2
 2169 0242 1A70     		strb	r2, [r3]
 475:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 2170              		.loc 1 475 0
 2171 0244 014B     		ldr	r3, .L140
 2172 0246 0222     		movs	r2, #2
 2173 0248 1A60     		str	r2, [r3]
 2174              		.loc 1 480 0
 2175 024a 13E1     		b	.L136
 2176              	.L141:
 2177              		.align	2
 2178              	.L140:
 2179 024c 00000000 		.word	directionState
 2180 0250 00000000 		.word	currentOrientation
 2181 0254 00000000 		.word	currentDirection
 2182 0258 00000000 		.word	previousDirection
 2183 025c 00000000 		.word	yBlockSize
 2184 0260 00000000 		.word	blockSize
 2185 0264 00000000 		.word	totalDistance
 2186 0268 00000000 		.word	currentCol
 2187 026c 00000000 		.word	currentRow
 2188 0270 00000000 		.word	stopBuffer
 2189 0274 00000000 		.word	s3
 2190 0278 00000000 		.word	s4
 2191 027c 00000000 		.word	s5
 2192 0280 00000000 		.word	s6
 2193 0284 00000000 		.word	previousOrientation
 2194 0288 44000000 		.word	map
 2195              	.L116:
 476:main.c        ****                     currentOrientation = Right;
 2196              		.loc 1 476 0
 2197 028c A74B     		ldr	r3, .L142
 2198 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2199 0290 5A1C     		adds	r2, r3, #1
 2200 0292 A74B     		ldr	r3, .L142+4
 2201 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2202 0296 1846     		mov	r0, r3
 2203 0298 A649     		ldr	r1, .L142+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 49


 2204 029a 1346     		mov	r3, r2
 2205 029c DB00     		lsls	r3, r3, #3
 2206 029e 1344     		add	r3, r3, r2
 2207 02a0 5B00     		lsls	r3, r3, #1
 2208 02a2 1344     		add	r3, r3, r2
 2209 02a4 0344     		add	r3, r3, r0
 2210 02a6 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2211 02aa 082B     		cmp	r3, #8
 2212 02ac 40F0E280 		bne	.L136
 477:main.c        ****                     directionState = TurnRight;
 2213              		.loc 1 477 0
 2214 02b0 A14B     		ldr	r3, .L142+12
 2215 02b2 0322     		movs	r2, #3
 2216 02b4 1A70     		strb	r2, [r3]
 478:main.c        ****                 }
 2217              		.loc 1 478 0
 2218 02b6 A14B     		ldr	r3, .L142+16
 2219 02b8 0122     		movs	r2, #1
 2220 02ba 1A60     		str	r2, [r3]
 2221              		.loc 1 480 0
 2222 02bc DAE0     		b	.L136
 2223              	.L111:
 481:main.c        ****             case Down:
 482:main.c        ****                 if(map[currentRow][currentCol - 1] == 8) {
 2224              		.loc 1 482 0
 2225 02be 9B4B     		ldr	r3, .L142
 2226 02c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2227 02c2 1A46     		mov	r2, r3
 2228 02c4 9A4B     		ldr	r3, .L142+4
 2229 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 02c8 591E     		subs	r1, r3, #1
 2231 02ca 9A48     		ldr	r0, .L142+8
 2232 02cc 1346     		mov	r3, r2
 2233 02ce DB00     		lsls	r3, r3, #3
 2234 02d0 1344     		add	r3, r3, r2
 2235 02d2 5B00     		lsls	r3, r3, #1
 2236 02d4 1344     		add	r3, r3, r2
 2237 02d6 0B44     		add	r3, r3, r1
 2238 02d8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2239 02dc 082B     		cmp	r3, #8
 2240 02de 06D1     		bne	.L118
 483:main.c        ****                     currentOrientation = Down;
 2241              		.loc 1 483 0
 2242 02e0 954B     		ldr	r3, .L142+12
 2243 02e2 0122     		movs	r2, #1
 2244 02e4 1A70     		strb	r2, [r3]
 484:main.c        ****                     directionState = Forward;
 2245              		.loc 1 484 0
 2246 02e6 954B     		ldr	r3, .L142+16
 2247 02e8 0022     		movs	r2, #0
 2248 02ea 1A60     		str	r2, [r3]
 485:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 486:main.c        ****                     currentOrientation = Right;
 487:main.c        ****                     directionState = TurnRight;
 488:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 489:main.c        ****                     currentOrientation = Left;
 490:main.c        ****                     directionState = TurnLeft;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 50


 491:main.c        ****                 }
 492:main.c        ****                 break;
 2249              		.loc 1 492 0
 2250 02ec C4E0     		b	.L137
 2251              	.L118:
 485:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 2252              		.loc 1 485 0
 2253 02ee 8F4B     		ldr	r3, .L142
 2254 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2255 02f2 5A1E     		subs	r2, r3, #1
 2256 02f4 8E4B     		ldr	r3, .L142+4
 2257 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2258 02f8 1846     		mov	r0, r3
 2259 02fa 8E49     		ldr	r1, .L142+8
 2260 02fc 1346     		mov	r3, r2
 2261 02fe DB00     		lsls	r3, r3, #3
 2262 0300 1344     		add	r3, r3, r2
 2263 0302 5B00     		lsls	r3, r3, #1
 2264 0304 1344     		add	r3, r3, r2
 2265 0306 0344     		add	r3, r3, r0
 2266 0308 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2267 030c 082B     		cmp	r3, #8
 2268 030e 06D1     		bne	.L120
 486:main.c        ****                     directionState = TurnRight;
 2269              		.loc 1 486 0
 2270 0310 894B     		ldr	r3, .L142+12
 2271 0312 0322     		movs	r2, #3
 2272 0314 1A70     		strb	r2, [r3]
 487:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 2273              		.loc 1 487 0
 2274 0316 894B     		ldr	r3, .L142+16
 2275 0318 0122     		movs	r2, #1
 2276 031a 1A60     		str	r2, [r3]
 2277              		.loc 1 492 0
 2278 031c ACE0     		b	.L137
 2279              	.L120:
 488:main.c        ****                     currentOrientation = Left;
 2280              		.loc 1 488 0
 2281 031e 834B     		ldr	r3, .L142
 2282 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0322 5A1C     		adds	r2, r3, #1
 2284 0324 824B     		ldr	r3, .L142+4
 2285 0326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 0328 1846     		mov	r0, r3
 2287 032a 8249     		ldr	r1, .L142+8
 2288 032c 1346     		mov	r3, r2
 2289 032e DB00     		lsls	r3, r3, #3
 2290 0330 1344     		add	r3, r3, r2
 2291 0332 5B00     		lsls	r3, r3, #1
 2292 0334 1344     		add	r3, r3, r2
 2293 0336 0344     		add	r3, r3, r0
 2294 0338 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2295 033c 082B     		cmp	r3, #8
 2296 033e 40F09B80 		bne	.L137
 489:main.c        ****                     directionState = TurnLeft;
 2297              		.loc 1 489 0
 2298 0342 7D4B     		ldr	r3, .L142+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 51


 2299 0344 0222     		movs	r2, #2
 2300 0346 1A70     		strb	r2, [r3]
 490:main.c        ****                 }
 2301              		.loc 1 490 0
 2302 0348 7C4B     		ldr	r3, .L142+16
 2303 034a 0222     		movs	r2, #2
 2304 034c 1A60     		str	r2, [r3]
 2305              		.loc 1 492 0
 2306 034e 93E0     		b	.L137
 2307              	.L112:
 493:main.c        ****             case Left:
 494:main.c        ****                 if(map[currentRow - 1][currentCol] == 8) {
 2308              		.loc 1 494 0
 2309 0350 764B     		ldr	r3, .L142
 2310 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2311 0354 5A1E     		subs	r2, r3, #1
 2312 0356 764B     		ldr	r3, .L142+4
 2313 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2314 035a 1846     		mov	r0, r3
 2315 035c 7549     		ldr	r1, .L142+8
 2316 035e 1346     		mov	r3, r2
 2317 0360 DB00     		lsls	r3, r3, #3
 2318 0362 1344     		add	r3, r3, r2
 2319 0364 5B00     		lsls	r3, r3, #1
 2320 0366 1344     		add	r3, r3, r2
 2321 0368 0344     		add	r3, r3, r0
 2322 036a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2323 036e 082B     		cmp	r3, #8
 2324 0370 06D1     		bne	.L121
 495:main.c        ****                     currentOrientation = Left;
 2325              		.loc 1 495 0
 2326 0372 714B     		ldr	r3, .L142+12
 2327 0374 0222     		movs	r2, #2
 2328 0376 1A70     		strb	r2, [r3]
 496:main.c        ****                     directionState = Forward;
 2329              		.loc 1 496 0
 2330 0378 704B     		ldr	r3, .L142+16
 2331 037a 0022     		movs	r2, #0
 2332 037c 1A60     		str	r2, [r3]
 497:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 498:main.c        ****                     currentOrientation = Up;
 499:main.c        ****                     directionState = TurnRight;
 500:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 501:main.c        ****                     currentOrientation = Down;
 502:main.c        ****                     directionState = TurnLeft;
 503:main.c        ****                 }
 504:main.c        ****                 break;
 2333              		.loc 1 504 0
 2334 037e 7DE0     		b	.L138
 2335              	.L121:
 497:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 2336              		.loc 1 497 0
 2337 0380 6A4B     		ldr	r3, .L142
 2338 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2339 0384 1A46     		mov	r2, r3
 2340 0386 6A4B     		ldr	r3, .L142+4
 2341 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 52


 2342 038a 591C     		adds	r1, r3, #1
 2343 038c 6948     		ldr	r0, .L142+8
 2344 038e 1346     		mov	r3, r2
 2345 0390 DB00     		lsls	r3, r3, #3
 2346 0392 1344     		add	r3, r3, r2
 2347 0394 5B00     		lsls	r3, r3, #1
 2348 0396 1344     		add	r3, r3, r2
 2349 0398 0B44     		add	r3, r3, r1
 2350 039a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2351 039e 082B     		cmp	r3, #8
 2352 03a0 06D1     		bne	.L123
 498:main.c        ****                     directionState = TurnRight;
 2353              		.loc 1 498 0
 2354 03a2 654B     		ldr	r3, .L142+12
 2355 03a4 0022     		movs	r2, #0
 2356 03a6 1A70     		strb	r2, [r3]
 499:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 2357              		.loc 1 499 0
 2358 03a8 644B     		ldr	r3, .L142+16
 2359 03aa 0122     		movs	r2, #1
 2360 03ac 1A60     		str	r2, [r3]
 2361              		.loc 1 504 0
 2362 03ae 65E0     		b	.L138
 2363              	.L123:
 500:main.c        ****                     currentOrientation = Down;
 2364              		.loc 1 500 0
 2365 03b0 5E4B     		ldr	r3, .L142
 2366 03b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 03b4 1A46     		mov	r2, r3
 2368 03b6 5E4B     		ldr	r3, .L142+4
 2369 03b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2370 03ba 591E     		subs	r1, r3, #1
 2371 03bc 5D48     		ldr	r0, .L142+8
 2372 03be 1346     		mov	r3, r2
 2373 03c0 DB00     		lsls	r3, r3, #3
 2374 03c2 1344     		add	r3, r3, r2
 2375 03c4 5B00     		lsls	r3, r3, #1
 2376 03c6 1344     		add	r3, r3, r2
 2377 03c8 0B44     		add	r3, r3, r1
 2378 03ca 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2379 03ce 082B     		cmp	r3, #8
 2380 03d0 54D1     		bne	.L138
 501:main.c        ****                     directionState = TurnLeft;
 2381              		.loc 1 501 0
 2382 03d2 594B     		ldr	r3, .L142+12
 2383 03d4 0122     		movs	r2, #1
 2384 03d6 1A70     		strb	r2, [r3]
 502:main.c        ****                 }
 2385              		.loc 1 502 0
 2386 03d8 584B     		ldr	r3, .L142+16
 2387 03da 0222     		movs	r2, #2
 2388 03dc 1A60     		str	r2, [r3]
 2389              		.loc 1 504 0
 2390 03de 4DE0     		b	.L138
 2391              	.L113:
 505:main.c        ****             case Right:
 506:main.c        ****                 if(map[currentRow + 1][currentCol] == 8) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 53


 2392              		.loc 1 506 0
 2393 03e0 524B     		ldr	r3, .L142
 2394 03e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2395 03e4 5A1C     		adds	r2, r3, #1
 2396 03e6 524B     		ldr	r3, .L142+4
 2397 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2398 03ea 1846     		mov	r0, r3
 2399 03ec 5149     		ldr	r1, .L142+8
 2400 03ee 1346     		mov	r3, r2
 2401 03f0 DB00     		lsls	r3, r3, #3
 2402 03f2 1344     		add	r3, r3, r2
 2403 03f4 5B00     		lsls	r3, r3, #1
 2404 03f6 1344     		add	r3, r3, r2
 2405 03f8 0344     		add	r3, r3, r0
 2406 03fa 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2407 03fe 082B     		cmp	r3, #8
 2408 0400 06D1     		bne	.L124
 507:main.c        ****                     currentOrientation = Right;
 2409              		.loc 1 507 0
 2410 0402 4D4B     		ldr	r3, .L142+12
 2411 0404 0322     		movs	r2, #3
 2412 0406 1A70     		strb	r2, [r3]
 508:main.c        ****                     directionState = Forward;
 2413              		.loc 1 508 0
 2414 0408 4C4B     		ldr	r3, .L142+16
 2415 040a 0022     		movs	r2, #0
 2416 040c 1A60     		str	r2, [r3]
 509:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 510:main.c        ****                     currentOrientation = Up;
 511:main.c        ****                     directionState = TurnLeft;
 512:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 513:main.c        ****                     currentOrientation = Down;
 514:main.c        ****                     directionState = TurnRight;
 515:main.c        ****                 }
 516:main.c        ****                 break;
 2417              		.loc 1 516 0
 2418 040e 37E0     		b	.L139
 2419              	.L124:
 509:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 2420              		.loc 1 509 0
 2421 0410 464B     		ldr	r3, .L142
 2422 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2423 0414 1A46     		mov	r2, r3
 2424 0416 464B     		ldr	r3, .L142+4
 2425 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2426 041a 591C     		adds	r1, r3, #1
 2427 041c 4548     		ldr	r0, .L142+8
 2428 041e 1346     		mov	r3, r2
 2429 0420 DB00     		lsls	r3, r3, #3
 2430 0422 1344     		add	r3, r3, r2
 2431 0424 5B00     		lsls	r3, r3, #1
 2432 0426 1344     		add	r3, r3, r2
 2433 0428 0B44     		add	r3, r3, r1
 2434 042a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2435 042e 082B     		cmp	r3, #8
 2436 0430 06D1     		bne	.L126
 510:main.c        ****                     directionState = TurnLeft;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 54


 2437              		.loc 1 510 0
 2438 0432 414B     		ldr	r3, .L142+12
 2439 0434 0022     		movs	r2, #0
 2440 0436 1A70     		strb	r2, [r3]
 511:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 2441              		.loc 1 511 0
 2442 0438 404B     		ldr	r3, .L142+16
 2443 043a 0222     		movs	r2, #2
 2444 043c 1A60     		str	r2, [r3]
 2445              		.loc 1 516 0
 2446 043e 1FE0     		b	.L139
 2447              	.L126:
 512:main.c        ****                     currentOrientation = Down;
 2448              		.loc 1 512 0
 2449 0440 3A4B     		ldr	r3, .L142
 2450 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 0444 1A46     		mov	r2, r3
 2452 0446 3A4B     		ldr	r3, .L142+4
 2453 0448 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2454 044a 591E     		subs	r1, r3, #1
 2455 044c 3948     		ldr	r0, .L142+8
 2456 044e 1346     		mov	r3, r2
 2457 0450 DB00     		lsls	r3, r3, #3
 2458 0452 1344     		add	r3, r3, r2
 2459 0454 5B00     		lsls	r3, r3, #1
 2460 0456 1344     		add	r3, r3, r2
 2461 0458 0B44     		add	r3, r3, r1
 2462 045a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2463 045e 082B     		cmp	r3, #8
 2464 0460 0ED1     		bne	.L139
 513:main.c        ****                     directionState = TurnRight;
 2465              		.loc 1 513 0
 2466 0462 354B     		ldr	r3, .L142+12
 2467 0464 0122     		movs	r2, #1
 2468 0466 1A70     		strb	r2, [r3]
 514:main.c        ****                 }
 2469              		.loc 1 514 0
 2470 0468 344B     		ldr	r3, .L142+16
 2471 046a 0122     		movs	r2, #1
 2472 046c 1A60     		str	r2, [r3]
 2473              		.loc 1 516 0
 2474 046e 07E0     		b	.L139
 2475              	.L135:
 517:main.c        ****             default:
 518:main.c        ****                 break;
 2476              		.loc 1 518 0
 2477 0470 00BF     		nop
 2478 0472 06E0     		b	.L117
 2479              	.L136:
 480:main.c        ****             case Down:
 2480              		.loc 1 480 0
 2481 0474 00BF     		nop
 2482 0476 04E0     		b	.L117
 2483              	.L137:
 492:main.c        ****             case Left:
 2484              		.loc 1 492 0
 2485 0478 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 55


 2486 047a 02E0     		b	.L117
 2487              	.L138:
 504:main.c        ****             case Right:
 2488              		.loc 1 504 0
 2489 047c 00BF     		nop
 2490 047e 00E0     		b	.L117
 2491              	.L139:
 516:main.c        ****             default:
 2492              		.loc 1 516 0
 2493 0480 00BF     		nop
 2494              	.L117:
 519:main.c        ****         }
 520:main.c        ****         return directionState;
 2495              		.loc 1 520 0
 2496 0482 2E4B     		ldr	r3, .L142+16
 2497 0484 1B68     		ldr	r3, [r3]
 2498 0486 4EE0     		b	.L96
 2499              	.L107:
 521:main.c        ****     }
 522:main.c        **** 
 523:main.c        ****     // wait for turn at end of line
 524:main.c        ****     /*if(s5 && s6 && (previousDirection == Forward || (previousDirection == AdjustToTheLeft || prev
 525:main.c        ****         directionState = waitForTurn; // need to wait to check for a black line
 526:main.c        ****         return directionState;
 527:main.c        ****     }*/
 528:main.c        ****     
 529:main.c        ****     // course correction
 530:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 2500              		.loc 1 530 0
 2501 0488 2D4B     		ldr	r3, .L142+20
 2502 048a 1B68     		ldr	r3, [r3]
 2503 048c 002B     		cmp	r3, #0
 2504 048e 07D0     		beq	.L127
 2505              		.loc 1 530 0 is_stmt 0 discriminator 1
 2506 0490 2B4B     		ldr	r3, .L142+20
 2507 0492 1B68     		ldr	r3, [r3]
 2508 0494 032B     		cmp	r3, #3
 2509 0496 03D0     		beq	.L127
 2510              		.loc 1 530 0 discriminator 2
 2511 0498 294B     		ldr	r3, .L142+20
 2512 049a 1B68     		ldr	r3, [r3]
 2513 049c 042B     		cmp	r3, #4
 2514 049e 14D1     		bne	.L128
 2515              	.L127:
 531:main.c        ****         if(s6) {
 2516              		.loc 1 531 0 is_stmt 1
 2517 04a0 284B     		ldr	r3, .L142+24
 2518 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2519 04a4 002B     		cmp	r3, #0
 2520 04a6 02D0     		beq	.L129
 532:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 2521              		.loc 1 532 0
 2522 04a8 244B     		ldr	r3, .L142+16
 2523 04aa 0322     		movs	r2, #3
 2524 04ac 1A60     		str	r2, [r3]
 2525              	.L129:
 533:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 56


 534:main.c        ****         if(s5) {
 2526              		.loc 1 534 0
 2527 04ae 264B     		ldr	r3, .L142+28
 2528 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2529 04b2 002B     		cmp	r3, #0
 2530 04b4 02D0     		beq	.L130
 535:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 2531              		.loc 1 535 0
 2532 04b6 214B     		ldr	r3, .L142+16
 2533 04b8 0422     		movs	r2, #4
 2534 04ba 1A60     		str	r2, [r3]
 2535              	.L130:
 536:main.c        ****         }
 537:main.c        ****         previousOrientation = currentOrientation; // unchanged orientation
 2536              		.loc 1 537 0
 2537 04bc 1E4B     		ldr	r3, .L142+12
 2538 04be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2539 04c0 224B     		ldr	r3, .L142+32
 2540 04c2 1A70     		strb	r2, [r3]
 538:main.c        ****         return directionState;
 2541              		.loc 1 538 0
 2542 04c4 1D4B     		ldr	r3, .L142+16
 2543 04c6 1B68     		ldr	r3, [r3]
 2544 04c8 2DE0     		b	.L96
 2545              	.L128:
 539:main.c        ****     }
 540:main.c        ****     
 541:main.c        ****     // forward 1100
 542:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 2546              		.loc 1 542 0
 2547 04ca 214B     		ldr	r3, .L142+36
 2548 04cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2549 04ce 002B     		cmp	r3, #0
 2550 04d0 15D0     		beq	.L131
 2551              		.loc 1 542 0 is_stmt 0 discriminator 1
 2552 04d2 204B     		ldr	r3, .L142+40
 2553 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2554 04d6 002B     		cmp	r3, #0
 2555 04d8 11D0     		beq	.L131
 2556              		.loc 1 542 0 discriminator 2
 2557 04da 1B4B     		ldr	r3, .L142+28
 2558 04dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2559 04de 002B     		cmp	r3, #0
 2560 04e0 0DD1     		bne	.L131
 2561              		.loc 1 542 0 discriminator 3
 2562 04e2 184B     		ldr	r3, .L142+24
 2563 04e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2564 04e6 002B     		cmp	r3, #0
 2565 04e8 09D1     		bne	.L131
 543:main.c        ****         directionState = Forward;
 2566              		.loc 1 543 0 is_stmt 1
 2567 04ea 144B     		ldr	r3, .L142+16
 2568 04ec 0022     		movs	r2, #0
 2569 04ee 1A60     		str	r2, [r3]
 544:main.c        ****         previousOrientation = currentOrientation; // unchanged orientation
 2570              		.loc 1 544 0
 2571 04f0 114B     		ldr	r3, .L142+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 57


 2572 04f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2573 04f4 154B     		ldr	r3, .L142+32
 2574 04f6 1A70     		strb	r2, [r3]
 545:main.c        ****         return directionState;   
 2575              		.loc 1 545 0
 2576 04f8 104B     		ldr	r3, .L142+16
 2577 04fa 1B68     		ldr	r3, [r3]
 2578 04fc 13E0     		b	.L96
 2579              	.L131:
 546:main.c        ****     }
 547:main.c        ****     
 548:main.c        ****     //turn left 0111
 549:main.c        ****     /*if (!s3 && s4 && s5 && s6) {
 550:main.c        ****         directionState = TurnLeft;
 551:main.c        ****         switch(previousOrientation) {
 552:main.c        ****             case Up:
 553:main.c        ****                 currentDirection = Left;
 554:main.c        ****                 break;
 555:main.c        ****             case Down:
 556:main.c        ****                 currentDirection = Right;
 557:main.c        ****                 break;
 558:main.c        ****             case Left:
 559:main.c        ****                 currentDirection = Up;
 560:main.c        ****                 break;
 561:main.c        ****             case Right:
 562:main.c        ****                 currentDirection = Down;
 563:main.c        ****                 break;
 564:main.c        ****             default:
 565:main.c        ****                 break;
 566:main.c        ****         }
 567:main.c        ****         previousDirection = currentDirection;
 568:main.c        ****         return directionState;
 569:main.c        ****     }*/
 570:main.c        ****     
 571:main.c        ****     // turn right if 1011
 572:main.c        ****     /*if (s3 && !s4 && s5 && s6) {
 573:main.c        ****         directionState = TurnRight;
 574:main.c        ****         switch(previousOrientation) {
 575:main.c        ****             case Up:
 576:main.c        ****                 currentDirection = Right;
 577:main.c        ****                 break;
 578:main.c        ****             case Down:
 579:main.c        ****                 currentDirection = Left;
 580:main.c        ****                 break;
 581:main.c        ****             case Left:
 582:main.c        ****                 currentDirection = Down;
 583:main.c        ****                 break;
 584:main.c        ****             case Right:
 585:main.c        ****                 currentDirection = Up;
 586:main.c        ****                 break;
 587:main.c        ****             default:
 588:main.c        ****                 break;
 589:main.c        ****         }
 590:main.c        ****         previousDirection = currentDirection;
 591:main.c        ****         return directionState;
 592:main.c        ****     }*/
 593:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 58


 594:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 595:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 596:main.c        ****     if (previousDirection == Unknown) {
 2580              		.loc 1 596 0
 2581 04fe 104B     		ldr	r3, .L142+20
 2582 0500 1B68     		ldr	r3, [r3]
 2583 0502 062B     		cmp	r3, #6
 2584 0504 09D1     		bne	.L132
 597:main.c        ****         directionState = Forward;
 2585              		.loc 1 597 0
 2586 0506 0D4B     		ldr	r3, .L142+16
 2587 0508 0022     		movs	r2, #0
 2588 050a 1A60     		str	r2, [r3]
 598:main.c        ****         previousDirection = currentDirection;
 2589              		.loc 1 598 0
 2590 050c 124B     		ldr	r3, .L142+44
 2591 050e 1B68     		ldr	r3, [r3]
 2592 0510 0B4A     		ldr	r2, .L142+20
 2593 0512 1360     		str	r3, [r2]
 599:main.c        ****         return directionState;
 2594              		.loc 1 599 0
 2595 0514 094B     		ldr	r3, .L142+16
 2596 0516 1B68     		ldr	r3, [r3]
 2597 0518 05E0     		b	.L96
 2598              	.L132:
 600:main.c        ****     }
 601:main.c        ****     
 602:main.c        ****     // Possible reason
 603:main.c        ****     previousDirection = currentDirection;
 2599              		.loc 1 603 0
 2600 051a 0F4B     		ldr	r3, .L142+44
 2601 051c 1B68     		ldr	r3, [r3]
 2602 051e 084A     		ldr	r2, .L142+20
 2603 0520 1360     		str	r3, [r2]
 604:main.c        ****     return previousDirection;
 2604              		.loc 1 604 0
 2605 0522 074B     		ldr	r3, .L142+20
 2606 0524 1B68     		ldr	r3, [r3]
 2607              	.L96:
 605:main.c        **** }
 2608              		.loc 1 605 0
 2609 0526 1846     		mov	r0, r3
 2610 0528 80BD     		pop	{r7, pc}
 2611              	.L143:
 2612 052a 00BF     		.align	2
 2613              	.L142:
 2614 052c 00000000 		.word	currentRow
 2615 0530 00000000 		.word	currentCol
 2616 0534 44000000 		.word	map
 2617 0538 00000000 		.word	currentOrientation
 2618 053c 00000000 		.word	directionState
 2619 0540 00000000 		.word	previousDirection
 2620 0544 00000000 		.word	s6
 2621 0548 00000000 		.word	s5
 2622 054c 00000000 		.word	previousOrientation
 2623 0550 00000000 		.word	s3
 2624 0554 00000000 		.word	s4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 59


 2625 0558 00000000 		.word	currentDirection
 2626              		.cfi_endproc
 2627              	.LFE74:
 2628              		.size	CheckSensorDirection, .-CheckSensorDirection
 2629              		.section	.text.SetRobotMovement,"ax",%progbits
 2630              		.align	2
 2631              		.global	SetRobotMovement
 2632              		.thumb
 2633              		.thumb_func
 2634              		.type	SetRobotMovement, %function
 2635              	SetRobotMovement:
 2636              	.LFB75:
 606:main.c        **** 
 607:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 608:main.c        **** void SetRobotMovement() {
 2637              		.loc 1 608 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 0
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641 0000 80B5     		push	{r7, lr}
 2642              		.cfi_def_cfa_offset 8
 2643              		.cfi_offset 7, -8
 2644              		.cfi_offset 14, -4
 2645 0002 00AF     		add	r7, sp, #0
 2646              		.cfi_def_cfa_register 7
 609:main.c        ****     currentDirection = getDirection();   
 2647              		.loc 1 609 0
 2648 0004 FFF7FEFF 		bl	getDirection
 2649 0008 0246     		mov	r2, r0
 2650 000a 1E4B     		ldr	r3, .L160
 2651 000c 1A60     		str	r2, [r3]
 610:main.c        ****     
 611:main.c        ****     switch (currentDirection) {
 2652              		.loc 1 611 0
 2653 000e 1D4B     		ldr	r3, .L160
 2654 0010 1B68     		ldr	r3, [r3]
 2655 0012 0A2B     		cmp	r3, #10
 2656 0014 34D8     		bhi	.L158
 2657 0016 01A2     		adr	r2, .L147
 2658 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2659              		.p2align 2
 2660              	.L147:
 2661 001c 49000000 		.word	.L146+1
 2662 0020 4F000000 		.word	.L148+1
 2663 0024 55000000 		.word	.L149+1
 2664 0028 61000000 		.word	.L150+1
 2665 002c 5B000000 		.word	.L151+1
 2666 0030 67000000 		.word	.L152+1
 2667 0034 7F000000 		.word	.L159+1
 2668 0038 7F000000 		.word	.L159+1
 2669 003c 6D000000 		.word	.L155+1
 2670 0040 73000000 		.word	.L156+1
 2671 0044 79000000 		.word	.L157+1
 2672              		.p2align 1
 2673              	.L146:
 612:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 613:main.c        ****         case Forward:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 60


 614:main.c        ****             moveForward();
 2674              		.loc 1 614 0
 2675 0048 FFF7FEFF 		bl	moveForward
 615:main.c        ****             break;
 2676              		.loc 1 615 0
 2677 004c 18E0     		b	.L145
 2678              	.L148:
 616:main.c        ****         case TurnRight:
 617:main.c        ****             turnRight();
 2679              		.loc 1 617 0
 2680 004e FFF7FEFF 		bl	turnRight
 618:main.c        ****             break;
 2681              		.loc 1 618 0
 2682 0052 15E0     		b	.L145
 2683              	.L149:
 619:main.c        ****         case TurnLeft:
 620:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2684              		.loc 1 620 0
 2685 0054 FFF7FEFF 		bl	turnLeft
 621:main.c        ****             break;
 2686              		.loc 1 621 0
 2687 0058 12E0     		b	.L145
 2688              	.L151:
 622:main.c        ****         case AdjustToTheRight:
 623:main.c        ****             adjustRight();
 2689              		.loc 1 623 0
 2690 005a FFF7FEFF 		bl	adjustRight
 624:main.c        ****             break;
 2691              		.loc 1 624 0
 2692 005e 0FE0     		b	.L145
 2693              	.L150:
 625:main.c        ****         case AdjustToTheLeft:
 626:main.c        ****             adjustLeft();
 2694              		.loc 1 626 0
 2695 0060 FFF7FEFF 		bl	adjustLeft
 627:main.c        ****             break;
 2696              		.loc 1 627 0
 2697 0064 0CE0     		b	.L145
 2698              	.L152:
 628:main.c        ****         case Stop:
 629:main.c        ****             stopMoving();
 2699              		.loc 1 629 0
 2700 0066 FFF7FEFF 		bl	stopMoving
 630:main.c        ****             break;
 2701              		.loc 1 630 0
 2702 006a 09E0     		b	.L145
 2703              	.L155:
 631:main.c        ****         case HardForward:
 632:main.c        ****             break;
 633:main.c        ****         case waitForTurn:
 634:main.c        ****             moveForward(); 
 2704              		.loc 1 634 0
 2705 006c FFF7FEFF 		bl	moveForward
 635:main.c        ****             break;
 2706              		.loc 1 635 0
 2707 0070 06E0     		b	.L145
 2708              	.L156:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 61


 636:main.c        ****         case ForwardAfterTurn:
 637:main.c        ****             moveForward();
 2709              		.loc 1 637 0
 2710 0072 FFF7FEFF 		bl	moveForward
 638:main.c        ****             break;
 2711              		.loc 1 638 0
 2712 0076 03E0     		b	.L145
 2713              	.L157:
 639:main.c        ****         case Backward:
 640:main.c        ****             moveBackward();
 2714              		.loc 1 640 0
 2715 0078 FFF7FEFF 		bl	moveBackward
 641:main.c        ****             break;
 2716              		.loc 1 641 0
 2717 007c 00E0     		b	.L145
 2718              	.L159:
 642:main.c        ****         case Unknown:
 643:main.c        ****             // UNKNOWN CONFIGURATION
 644:main.c        ****             break;  
 2719              		.loc 1 644 0
 2720 007e 00BF     		nop
 2721              	.L145:
 2722              	.L158:
 645:main.c        ****     }
 646:main.c        **** }
 2723              		.loc 1 646 0
 2724 0080 00BF     		nop
 2725 0082 80BD     		pop	{r7, pc}
 2726              	.L161:
 2727              		.align	2
 2728              	.L160:
 2729 0084 00000000 		.word	currentDirection
 2730              		.cfi_endproc
 2731              	.LFE75:
 2732              		.size	SetRobotMovement, .-SetRobotMovement
 2733              		.text
 2734              	.Letext0:
 2735              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2736              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2737              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2738              		.file 5 "vars.h"
 2739              		.file 6 "map.h"
 2740              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2741              		.section	.debug_info,"",%progbits
 2742              	.Ldebug_info0:
 2743 0000 A6060000 		.4byte	0x6a6
 2744 0004 0400     		.2byte	0x4
 2745 0006 00000000 		.4byte	.Ldebug_abbrev0
 2746 000a 04       		.byte	0x4
 2747 000b 01       		.uleb128 0x1
 2748 000c 0C000000 		.4byte	.LASF101
 2749 0010 0C       		.byte	0xc
 2750 0011 7B040000 		.4byte	.LASF102
 2751 0015 C2030000 		.4byte	.LASF103
 2752 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2753 001d 00000000 		.4byte	0
 2754 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 62


 2755 0025 02       		.uleb128 0x2
 2756 0026 01       		.byte	0x1
 2757 0027 06       		.byte	0x6
 2758 0028 EA020000 		.4byte	.LASF0
 2759 002c 02       		.uleb128 0x2
 2760 002d 01       		.byte	0x1
 2761 002e 08       		.byte	0x8
 2762 002f 87020000 		.4byte	.LASF1
 2763 0033 02       		.uleb128 0x2
 2764 0034 02       		.byte	0x2
 2765 0035 05       		.byte	0x5
 2766 0036 FF000000 		.4byte	.LASF2
 2767 003a 02       		.uleb128 0x2
 2768 003b 02       		.byte	0x2
 2769 003c 07       		.byte	0x7
 2770 003d 7E030000 		.4byte	.LASF3
 2771 0041 03       		.uleb128 0x3
 2772 0042 DD040000 		.4byte	.LASF11
 2773 0046 02       		.byte	0x2
 2774 0047 3F       		.byte	0x3f
 2775 0048 4C000000 		.4byte	0x4c
 2776 004c 02       		.uleb128 0x2
 2777 004d 04       		.byte	0x4
 2778 004e 05       		.byte	0x5
 2779 004f B1030000 		.4byte	.LASF4
 2780 0053 02       		.uleb128 0x2
 2781 0054 04       		.byte	0x4
 2782 0055 07       		.byte	0x7
 2783 0056 82040000 		.4byte	.LASF5
 2784 005a 02       		.uleb128 0x2
 2785 005b 08       		.byte	0x8
 2786 005c 05       		.byte	0x5
 2787 005d E2010000 		.4byte	.LASF6
 2788 0061 02       		.uleb128 0x2
 2789 0062 08       		.byte	0x8
 2790 0063 07       		.byte	0x7
 2791 0064 FE020000 		.4byte	.LASF7
 2792 0068 04       		.uleb128 0x4
 2793 0069 04       		.byte	0x4
 2794 006a 05       		.byte	0x5
 2795 006b 696E7400 		.ascii	"int\000"
 2796 006f 02       		.uleb128 0x2
 2797 0070 04       		.byte	0x4
 2798 0071 07       		.byte	0x7
 2799 0072 26030000 		.4byte	.LASF8
 2800 0076 02       		.uleb128 0x2
 2801 0077 04       		.byte	0x4
 2802 0078 07       		.byte	0x7
 2803 0079 16010000 		.4byte	.LASF9
 2804 007d 02       		.uleb128 0x2
 2805 007e 01       		.byte	0x1
 2806 007f 08       		.byte	0x8
 2807 0080 AC030000 		.4byte	.LASF10
 2808 0084 03       		.uleb128 0x3
 2809 0085 F6020000 		.4byte	.LASF12
 2810 0089 03       		.byte	0x3
 2811 008a 2C       		.byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 63


 2812 008b 41000000 		.4byte	0x41
 2813 008f 05       		.uleb128 0x5
 2814 0090 B2010000 		.4byte	.LASF13
 2815 0094 04       		.byte	0x4
 2816 0095 E701     		.2byte	0x1e7
 2817 0097 2C000000 		.4byte	0x2c
 2818 009b 05       		.uleb128 0x5
 2819 009c 66040000 		.4byte	.LASF14
 2820 00a0 04       		.byte	0x4
 2821 00a1 E801     		.2byte	0x1e8
 2822 00a3 3A000000 		.4byte	0x3a
 2823 00a7 05       		.uleb128 0x5
 2824 00a8 74040000 		.4byte	.LASF15
 2825 00ac 04       		.byte	0x4
 2826 00ad E901     		.2byte	0x1e9
 2827 00af 53000000 		.4byte	0x53
 2828 00b3 05       		.uleb128 0x5
 2829 00b4 F0010000 		.4byte	.LASF16
 2830 00b8 04       		.byte	0x4
 2831 00b9 EA01     		.2byte	0x1ea
 2832 00bb 25000000 		.4byte	0x25
 2833 00bf 05       		.uleb128 0x5
 2834 00c0 A0010000 		.4byte	.LASF17
 2835 00c4 04       		.byte	0x4
 2836 00c5 EB01     		.2byte	0x1eb
 2837 00c7 33000000 		.4byte	0x33
 2838 00cb 02       		.uleb128 0x2
 2839 00cc 04       		.byte	0x4
 2840 00cd 04       		.byte	0x4
 2841 00ce CA010000 		.4byte	.LASF18
 2842 00d2 02       		.uleb128 0x2
 2843 00d3 08       		.byte	0x8
 2844 00d4 04       		.byte	0x4
 2845 00d5 9D040000 		.4byte	.LASF19
 2846 00d9 06       		.uleb128 0x6
 2847 00da 91030000 		.4byte	.LASF104
 2848 00de 20       		.byte	0x20
 2849 00df 05       		.byte	0x5
 2850 00e0 28       		.byte	0x28
 2851 00e1 B2010000 		.4byte	0x1b2
 2852 00e5 07       		.uleb128 0x7
 2853 00e6 84050000 		.4byte	.LASF20
 2854 00ea 05       		.byte	0x5
 2855 00eb 2A       		.byte	0x2a
 2856 00ec B3000000 		.4byte	0xb3
 2857 00f0 00       		.byte	0
 2858 00f1 07       		.uleb128 0x7
 2859 00f2 8F010000 		.4byte	.LASF21
 2860 00f6 05       		.byte	0x5
 2861 00f7 2B       		.byte	0x2b
 2862 00f8 8F000000 		.4byte	0x8f
 2863 00fc 01       		.byte	0x1
 2864 00fd 07       		.uleb128 0x7
 2865 00fe 51040000 		.4byte	.LASF22
 2866 0102 05       		.byte	0x5
 2867 0103 2C       		.byte	0x2c
 2868 0104 BF000000 		.4byte	0xbf
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 64


 2869 0108 02       		.byte	0x2
 2870 0109 07       		.uleb128 0x7
 2871 010a 34050000 		.4byte	.LASF23
 2872 010e 05       		.byte	0x5
 2873 010f 2D       		.byte	0x2d
 2874 0110 BF000000 		.4byte	0xbf
 2875 0114 04       		.byte	0x4
 2876 0115 07       		.uleb128 0x7
 2877 0116 89050000 		.4byte	.LASF24
 2878 011a 05       		.byte	0x5
 2879 011b 2E       		.byte	0x2e
 2880 011c BF000000 		.4byte	0xbf
 2881 0120 06       		.byte	0x6
 2882 0121 07       		.uleb128 0x7
 2883 0122 19020000 		.4byte	.LASF25
 2884 0126 05       		.byte	0x5
 2885 0127 2F       		.byte	0x2f
 2886 0128 BF000000 		.4byte	0xbf
 2887 012c 08       		.byte	0x8
 2888 012d 07       		.uleb128 0x7
 2889 012e EC040000 		.4byte	.LASF26
 2890 0132 05       		.byte	0x5
 2891 0133 30       		.byte	0x30
 2892 0134 BF000000 		.4byte	0xbf
 2893 0138 0A       		.byte	0xa
 2894 0139 07       		.uleb128 0x7
 2895 013a CA020000 		.4byte	.LASF27
 2896 013e 05       		.byte	0x5
 2897 013f 31       		.byte	0x31
 2898 0140 BF000000 		.4byte	0xbf
 2899 0144 0C       		.byte	0xc
 2900 0145 07       		.uleb128 0x7
 2901 0146 0C020000 		.4byte	.LASF28
 2902 014a 05       		.byte	0x5
 2903 014b 32       		.byte	0x32
 2904 014c BF000000 		.4byte	0xbf
 2905 0150 0E       		.byte	0xe
 2906 0151 07       		.uleb128 0x7
 2907 0152 E2020000 		.4byte	.LASF29
 2908 0156 05       		.byte	0x5
 2909 0157 33       		.byte	0x33
 2910 0158 BF000000 		.4byte	0xbf
 2911 015c 10       		.byte	0x10
 2912 015d 07       		.uleb128 0x7
 2913 015e 7F020000 		.4byte	.LASF30
 2914 0162 05       		.byte	0x5
 2915 0163 34       		.byte	0x34
 2916 0164 BF000000 		.4byte	0xbf
 2917 0168 12       		.byte	0x12
 2918 0169 07       		.uleb128 0x7
 2919 016a 3A040000 		.4byte	.LASF31
 2920 016e 05       		.byte	0x5
 2921 016f 35       		.byte	0x35
 2922 0170 BF000000 		.4byte	0xbf
 2923 0174 14       		.byte	0x14
 2924 0175 07       		.uleb128 0x7
 2925 0176 B8010000 		.4byte	.LASF32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 65


 2926 017a 05       		.byte	0x5
 2927 017b 36       		.byte	0x36
 2928 017c BF000000 		.4byte	0xbf
 2929 0180 16       		.byte	0x16
 2930 0181 07       		.uleb128 0x7
 2931 0182 F7000000 		.4byte	.LASF33
 2932 0186 05       		.byte	0x5
 2933 0187 37       		.byte	0x37
 2934 0188 BF000000 		.4byte	0xbf
 2935 018c 18       		.byte	0x18
 2936 018d 07       		.uleb128 0x7
 2937 018e 04020000 		.4byte	.LASF34
 2938 0192 05       		.byte	0x5
 2939 0193 38       		.byte	0x38
 2940 0194 BF000000 		.4byte	0xbf
 2941 0198 1A       		.byte	0x1a
 2942 0199 07       		.uleb128 0x7
 2943 019a 69030000 		.4byte	.LASF35
 2944 019e 05       		.byte	0x5
 2945 019f 39       		.byte	0x39
 2946 01a0 BF000000 		.4byte	0xbf
 2947 01a4 1C       		.byte	0x1c
 2948 01a5 07       		.uleb128 0x7
 2949 01a6 2D040000 		.4byte	.LASF36
 2950 01aa 05       		.byte	0x5
 2951 01ab 3A       		.byte	0x3a
 2952 01ac BF000000 		.4byte	0xbf
 2953 01b0 1E       		.byte	0x1e
 2954 01b1 00       		.byte	0
 2955 01b2 08       		.uleb128 0x8
 2956 01b3 2A010000 		.4byte	.LASF48
 2957 01b7 04       		.byte	0x4
 2958 01b8 6F000000 		.4byte	0x6f
 2959 01bc 01       		.byte	0x1
 2960 01bd 28       		.byte	0x28
 2961 01be 05020000 		.4byte	0x205
 2962 01c2 09       		.uleb128 0x9
 2963 01c3 BA030000 		.4byte	.LASF37
 2964 01c7 00       		.byte	0
 2965 01c8 09       		.uleb128 0x9
 2966 01c9 5C040000 		.4byte	.LASF38
 2967 01cd 01       		.byte	0x1
 2968 01ce 09       		.uleb128 0x9
 2969 01cf A3000000 		.4byte	.LASF39
 2970 01d3 02       		.byte	0x2
 2971 01d4 09       		.uleb128 0x9
 2972 01d5 69010000 		.4byte	.LASF40
 2973 01d9 03       		.byte	0x3
 2974 01da 09       		.uleb128 0x9
 2975 01db 15030000 		.4byte	.LASF41
 2976 01df 04       		.byte	0x4
 2977 01e0 09       		.uleb128 0x9
 2978 01e1 E7040000 		.4byte	.LASF42
 2979 01e5 05       		.byte	0x5
 2980 01e6 09       		.uleb128 0x9
 2981 01e7 A4040000 		.4byte	.LASF43
 2982 01eb 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 66


 2983 01ec 09       		.uleb128 0x9
 2984 01ed A6010000 		.4byte	.LASF44
 2985 01f1 07       		.byte	0x7
 2986 01f2 09       		.uleb128 0x9
 2987 01f3 DD000000 		.4byte	.LASF45
 2988 01f7 08       		.byte	0x8
 2989 01f8 09       		.uleb128 0x9
 2990 01f9 C0000000 		.4byte	.LASF46
 2991 01fd 09       		.byte	0x9
 2992 01fe 09       		.uleb128 0x9
 2993 01ff 94040000 		.4byte	.LASF47
 2994 0203 0A       		.byte	0xa
 2995 0204 00       		.byte	0
 2996 0205 08       		.uleb128 0x8
 2997 0206 21040000 		.4byte	.LASF49
 2998 020a 01       		.byte	0x1
 2999 020b 2C000000 		.4byte	0x2c
 3000 020f 01       		.byte	0x1
 3001 0210 2C       		.byte	0x2c
 3002 0211 2D020000 		.4byte	0x22d
 3003 0215 0A       		.uleb128 0xa
 3004 0216 557000   		.ascii	"Up\000"
 3005 0219 00       		.byte	0
 3006 021a 09       		.uleb128 0x9
 3007 021b 5F050000 		.4byte	.LASF50
 3008 021f 01       		.byte	0x1
 3009 0220 09       		.uleb128 0x9
 3010 0221 35020000 		.4byte	.LASF51
 3011 0225 02       		.byte	0x2
 3012 0226 09       		.uleb128 0x9
 3013 0227 D0010000 		.4byte	.LASF52
 3014 022b 03       		.byte	0x3
 3015 022c 00       		.byte	0
 3016 022d 0B       		.uleb128 0xb
 3017 022e 95010000 		.4byte	.LASF105
 3018 0232 01       		.byte	0x1
 3019 0233 3D       		.byte	0x3d
 3020 0234 00000000 		.4byte	.LFB64
 3021 0238 EC000000 		.4byte	.LFE64-.LFB64
 3022 023c 01       		.uleb128 0x1
 3023 023d 9C       		.byte	0x9c
 3024 023e 5B020000 		.4byte	0x25b
 3025 0242 0C       		.uleb128 0xc
 3026 0243 50000000 		.4byte	.LBB2
 3027 0247 62000000 		.4byte	.LBE2-.LBB2
 3028 024b 0D       		.uleb128 0xd
 3029 024c D6010000 		.4byte	.LASF59
 3030 0250 01       		.byte	0x1
 3031 0251 4A       		.byte	0x4a
 3032 0252 CB000000 		.4byte	0xcb
 3033 0256 02       		.uleb128 0x2
 3034 0257 91       		.byte	0x91
 3035 0258 6C       		.sleb128 -20
 3036 0259 00       		.byte	0
 3037 025a 00       		.byte	0
 3038 025b 0E       		.uleb128 0xe
 3039 025c B6040000 		.4byte	.LASF53
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 67


 3040 0260 01       		.byte	0x1
 3041 0261 54       		.byte	0x54
 3042 0262 00000000 		.4byte	.LFB65
 3043 0266 18000000 		.4byte	.LFE65-.LFB65
 3044 026a 01       		.uleb128 0x1
 3045 026b 9C       		.byte	0x9c
 3046 026c 0E       		.uleb128 0xe
 3047 026d 5D010000 		.4byte	.LASF54
 3048 0271 01       		.byte	0x1
 3049 0272 5A       		.byte	0x5a
 3050 0273 00000000 		.4byte	.LFB66
 3051 0277 18000000 		.4byte	.LFE66-.LFB66
 3052 027b 01       		.uleb128 0x1
 3053 027c 9C       		.byte	0x9c
 3054 027d 0E       		.uleb128 0xe
 3055 027e 72030000 		.4byte	.LASF55
 3056 0282 01       		.byte	0x1
 3057 0283 60       		.byte	0x60
 3058 0284 00000000 		.4byte	.LFB67
 3059 0288 18000000 		.4byte	.LFE67-.LFB67
 3060 028c 01       		.uleb128 0x1
 3061 028d 9C       		.byte	0x9c
 3062 028e 0E       		.uleb128 0xe
 3063 028f 00000000 		.4byte	.LASF56
 3064 0293 01       		.byte	0x1
 3065 0294 66       		.byte	0x66
 3066 0295 00000000 		.4byte	.LFB68
 3067 0299 18000000 		.4byte	.LFE68-.LFB68
 3068 029d 01       		.uleb128 0x1
 3069 029e 9C       		.byte	0x9c
 3070 029f 0F       		.uleb128 0xf
 3071 02a0 5C030000 		.4byte	.LASF57
 3072 02a4 01       		.byte	0x1
 3073 02a5 6C       		.byte	0x6c
 3074 02a6 00000000 		.4byte	.LFB69
 3075 02aa 38000000 		.4byte	.LFE69-.LFB69
 3076 02ae 01       		.uleb128 0x1
 3077 02af 9C       		.byte	0x9c
 3078 02b0 10       		.uleb128 0x10
 3079 02b1 4D010000 		.4byte	.LASF58
 3080 02b5 01       		.byte	0x1
 3081 02b6 79       		.byte	0x79
 3082 02b7 68000000 		.4byte	0x68
 3083 02bb 00000000 		.4byte	.LFB70
 3084 02bf 9C000000 		.4byte	.LFE70-.LFB70
 3085 02c3 01       		.uleb128 0x1
 3086 02c4 9C       		.byte	0x9c
 3087 02c5 11       		.uleb128 0x11
 3088 02c6 09050000 		.4byte	.LASF106
 3089 02ca 01       		.byte	0x1
 3090 02cb B0       		.byte	0xb0
 3091 02cc BF000000 		.4byte	0xbf
 3092 02d0 00000000 		.4byte	.LFB71
 3093 02d4 54000000 		.4byte	.LFE71-.LFB71
 3094 02d8 01       		.uleb128 0x1
 3095 02d9 9C       		.byte	0x9c
 3096 02da 09030000 		.4byte	0x309
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 68


 3097 02de 12       		.uleb128 0x12
 3098 02df CB040000 		.4byte	.LASF107
 3099 02e3 01       		.byte	0x1
 3100 02e4 B0       		.byte	0xb0
 3101 02e5 9B000000 		.4byte	0x9b
 3102 02e9 02       		.uleb128 0x2
 3103 02ea 91       		.byte	0x91
 3104 02eb 66       		.sleb128 -26
 3105 02ec 13       		.uleb128 0x13
 3106 02ed 63707300 		.ascii	"cps\000"
 3107 02f1 01       		.byte	0x1
 3108 02f2 B2       		.byte	0xb2
 3109 02f3 CB000000 		.4byte	0xcb
 3110 02f7 02       		.uleb128 0x2
 3111 02f8 91       		.byte	0x91
 3112 02f9 6C       		.sleb128 -20
 3113 02fa 13       		.uleb128 0x13
 3114 02fb 72706D00 		.ascii	"rpm\000"
 3115 02ff 01       		.byte	0x1
 3116 0300 B3       		.byte	0xb3
 3117 0301 BF000000 		.4byte	0xbf
 3118 0305 02       		.uleb128 0x2
 3119 0306 91       		.byte	0x91
 3120 0307 6A       		.sleb128 -22
 3121 0308 00       		.byte	0
 3122 0309 14       		.uleb128 0x14
 3123 030a 9B030000 		.4byte	.LASF62
 3124 030e 01       		.byte	0x1
 3125 030f BB       		.byte	0xbb
 3126 0310 00000000 		.4byte	.LFB72
 3127 0314 48000000 		.4byte	.LFE72-.LFB72
 3128 0318 01       		.uleb128 0x1
 3129 0319 9C       		.byte	0x9c
 3130 031a 10       		.uleb128 0x10
 3131 031b AC000000 		.4byte	.LASF60
 3132 031f 01       		.byte	0x1
 3133 0320 CF       		.byte	0xcf
 3134 0321 B2010000 		.4byte	0x1b2
 3135 0325 00000000 		.4byte	.LFB73
 3136 0329 84040000 		.4byte	.LFE73-.LFB73
 3137 032d 01       		.uleb128 0x1
 3138 032e 9C       		.byte	0x9c
 3139 032f 15       		.uleb128 0x15
 3140 0330 3A020000 		.4byte	.LASF61
 3141 0334 01       		.byte	0x1
 3142 0335 7401     		.2byte	0x174
 3143 0337 B2010000 		.4byte	0x1b2
 3144 033b 00000000 		.4byte	.LFB74
 3145 033f 5C050000 		.4byte	.LFE74-.LFB74
 3146 0343 01       		.uleb128 0x1
 3147 0344 9C       		.byte	0x9c
 3148 0345 16       		.uleb128 0x16
 3149 0346 4B030000 		.4byte	.LASF63
 3150 034a 01       		.byte	0x1
 3151 034b 6002     		.2byte	0x260
 3152 034d 00000000 		.4byte	.LFB75
 3153 0351 88000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 69


 3154 0355 01       		.uleb128 0x1
 3155 0356 9C       		.byte	0x9c
 3156 0357 17       		.uleb128 0x17
 3157 0358 68000000 		.4byte	0x68
 3158 035c 6D030000 		.4byte	0x36d
 3159 0360 18       		.uleb128 0x18
 3160 0361 76000000 		.4byte	0x76
 3161 0365 0E       		.byte	0xe
 3162 0366 18       		.uleb128 0x18
 3163 0367 76000000 		.4byte	0x76
 3164 036b 12       		.byte	0x12
 3165 036c 00       		.byte	0
 3166 036d 13       		.uleb128 0x13
 3167 036e 6D617000 		.ascii	"map\000"
 3168 0372 06       		.byte	0x6
 3169 0373 14       		.byte	0x14
 3170 0374 57030000 		.4byte	0x357
 3171 0378 05       		.uleb128 0x5
 3172 0379 03       		.byte	0x3
 3173 037a 44000000 		.4byte	map
 3174 037e 17       		.uleb128 0x17
 3175 037f 68000000 		.4byte	0x68
 3176 0383 94030000 		.4byte	0x394
 3177 0387 18       		.uleb128 0x18
 3178 0388 76000000 		.4byte	0x76
 3179 038c 04       		.byte	0x4
 3180 038d 18       		.uleb128 0x18
 3181 038e 76000000 		.4byte	0x76
 3182 0392 01       		.byte	0x1
 3183 0393 00       		.byte	0
 3184 0394 0D       		.uleb128 0xd
 3185 0395 AC040000 		.4byte	.LASF64
 3186 0399 06       		.byte	0x6
 3187 039a 26       		.byte	0x26
 3188 039b 7E030000 		.4byte	0x37e
 3189 039f 05       		.uleb128 0x5
 3190 03a0 03       		.byte	0x3
 3191 03a1 B8040000 		.4byte	food_list
 3192 03a5 19       		.uleb128 0x19
 3193 03a6 3F050000 		.4byte	.LASF65
 3194 03aa 07       		.byte	0x7
 3195 03ab 1207     		.2byte	0x712
 3196 03ad B1030000 		.4byte	0x3b1
 3197 03b1 1A       		.uleb128 0x1a
 3198 03b2 84000000 		.4byte	0x84
 3199 03b6 1B       		.uleb128 0x1b
 3200 03b7 747300   		.ascii	"ts\000"
 3201 03ba 05       		.byte	0x5
 3202 03bb 10       		.byte	0x10
 3203 03bc 8F000000 		.4byte	0x8f
 3204 03c0 05       		.uleb128 0x5
 3205 03c1 03       		.byte	0x3
 3206 03c2 00000000 		.4byte	ts
 3207 03c6 1C       		.uleb128 0x1c
 3208 03c7 B9000000 		.4byte	.LASF66
 3209 03cb 05       		.byte	0x5
 3210 03cc 11       		.byte	0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 70


 3211 03cd 9B000000 		.4byte	0x9b
 3212 03d1 05       		.uleb128 0x5
 3213 03d2 03       		.byte	0x3
 3214 03d3 00000000 		.4byte	ts_enc
 3215 03d7 1C       		.uleb128 0x1c
 3216 03d8 FF040000 		.4byte	.LASF67
 3217 03dc 05       		.byte	0x5
 3218 03dd 12       		.byte	0x12
 3219 03de 9B000000 		.4byte	0x9b
 3220 03e2 05       		.uleb128 0x5
 3221 03e3 03       		.byte	0x3
 3222 03e4 00000000 		.4byte	ts_update
 3223 03e8 1C       		.uleb128 0x1c
 3224 03e9 C2040000 		.4byte	.LASF68
 3225 03ed 05       		.byte	0x5
 3226 03ee 13       		.byte	0x13
 3227 03ef 9B000000 		.4byte	0x9b
 3228 03f3 05       		.uleb128 0x5
 3229 03f4 03       		.byte	0x3
 3230 03f5 00000000 		.4byte	ts_speed
 3231 03f9 1C       		.uleb128 0x1c
 3232 03fa F4040000 		.4byte	.LASF69
 3233 03fe 05       		.byte	0x5
 3234 03ff 14       		.byte	0x14
 3235 0400 9B000000 		.4byte	0x9b
 3236 0404 05       		.uleb128 0x5
 3237 0405 03       		.byte	0x3
 3238 0406 00000000 		.4byte	ts_display
 3239 040a 1C       		.uleb128 0x1c
 3240 040b D1040000 		.4byte	.LASF70
 3241 040f 05       		.byte	0x5
 3242 0410 16       		.byte	0x16
 3243 0411 8F000000 		.4byte	0x8f
 3244 0415 05       		.uleb128 0x5
 3245 0416 03       		.byte	0x3
 3246 0417 00000000 		.4byte	flag_ts_enc
 3247 041b 1C       		.uleb128 0x1c
 3248 041c F5010000 		.4byte	.LASF71
 3249 0420 05       		.byte	0x5
 3250 0421 17       		.byte	0x17
 3251 0422 8F000000 		.4byte	0x8f
 3252 0426 05       		.uleb128 0x5
 3253 0427 03       		.byte	0x3
 3254 0428 00000000 		.4byte	flag_ts_update
 3255 042c 1C       		.uleb128 0x1c
 3256 042d E9000000 		.4byte	.LASF72
 3257 0431 05       		.byte	0x5
 3258 0432 18       		.byte	0x18
 3259 0433 8F000000 		.4byte	0x8f
 3260 0437 05       		.uleb128 0x5
 3261 0438 03       		.byte	0x3
 3262 0439 00000000 		.4byte	flag_ts_speed
 3263 043d 1C       		.uleb128 0x1c
 3264 043e 4F020000 		.4byte	.LASF73
 3265 0442 05       		.byte	0x5
 3266 0443 19       		.byte	0x19
 3267 0444 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 71


 3268 0448 05       		.uleb128 0x5
 3269 0449 03       		.byte	0x3
 3270 044a 00000000 		.4byte	flag_ts_display
 3271 044e 1C       		.uleb128 0x1c
 3272 044f 5F020000 		.4byte	.LASF74
 3273 0453 05       		.byte	0x5
 3274 0454 1B       		.byte	0x1b
 3275 0455 8F000000 		.4byte	0x8f
 3276 0459 05       		.uleb128 0x5
 3277 045a 03       		.byte	0x3
 3278 045b 00000000 		.4byte	flag_rx
 3279 045f 1C       		.uleb128 0x1c
 3280 0460 D1000000 		.4byte	.LASF75
 3281 0464 05       		.byte	0x5
 3282 0465 1C       		.byte	0x1c
 3283 0466 8F000000 		.4byte	0x8f
 3284 046a 05       		.uleb128 0x5
 3285 046b 03       		.byte	0x3
 3286 046c 00000000 		.4byte	flag_packet
 3287 0470 1C       		.uleb128 0x1c
 3288 0471 3C030000 		.4byte	.LASF76
 3289 0475 05       		.byte	0x5
 3290 0476 1D       		.byte	0x1d
 3291 0477 8F000000 		.4byte	0x8f
 3292 047b 05       		.uleb128 0x5
 3293 047c 03       		.byte	0x3
 3294 047d 00000000 		.4byte	flag_KB_string
 3295 0481 1C       		.uleb128 0x1c
 3296 0482 D3020000 		.4byte	.LASF77
 3297 0486 05       		.byte	0x5
 3298 0487 1F       		.byte	0x1f
 3299 0488 8F000000 		.4byte	0x8f
 3300 048c 05       		.uleb128 0x5
 3301 048d 03       		.byte	0x3
 3302 048e 00000000 		.4byte	dataready_flag
 3303 0492 1C       		.uleb128 0x1c
 3304 0493 18050000 		.4byte	.LASF78
 3305 0497 05       		.byte	0x5
 3306 0498 21       		.byte	0x21
 3307 0499 8F000000 		.4byte	0x8f
 3308 049d 05       		.uleb128 0x5
 3309 049e 03       		.byte	0x3
 3310 049f 00000000 		.4byte	flag_rf_transmission_active
 3311 04a3 17       		.uleb128 0x17
 3312 04a4 7D000000 		.4byte	0x7d
 3313 04a8 B3040000 		.4byte	0x4b3
 3314 04ac 18       		.uleb128 0x18
 3315 04ad 76000000 		.4byte	0x76
 3316 04b1 3F       		.byte	0x3f
 3317 04b2 00       		.byte	0
 3318 04b3 1C       		.uleb128 0x1c
 3319 04b4 43040000 		.4byte	.LASF79
 3320 04b8 05       		.byte	0x5
 3321 04b9 24       		.byte	0x24
 3322 04ba A3040000 		.4byte	0x4a3
 3323 04be 05       		.uleb128 0x5
 3324 04bf 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 72


 3325 04c0 00000000 		.4byte	displaystring
 3326 04c4 1C       		.uleb128 0x1c
 3327 04c5 C5010000 		.4byte	.LASF80
 3328 04c9 05       		.byte	0x5
 3329 04ca 25       		.byte	0x25
 3330 04cb A3040000 		.4byte	0x4a3
 3331 04cf 05       		.uleb128 0x5
 3332 04d0 03       		.byte	0x3
 3333 04d1 00000000 		.4byte	line
 3334 04d5 1C       		.uleb128 0x1c
 3335 04d6 79020000 		.4byte	.LASF81
 3336 04da 05       		.byte	0x5
 3337 04db 25       		.byte	0x25
 3338 04dc A3040000 		.4byte	0x4a3
 3339 04e0 05       		.uleb128 0x5
 3340 04e1 03       		.byte	0x3
 3341 04e2 00000000 		.4byte	entry
 3342 04e6 17       		.uleb128 0x17
 3343 04e7 8F000000 		.4byte	0x8f
 3344 04eb F6040000 		.4byte	0x4f6
 3345 04ef 18       		.uleb128 0x18
 3346 04f0 76000000 		.4byte	0x76
 3347 04f4 3F       		.byte	0x3f
 3348 04f5 00       		.byte	0
 3349 04f6 1C       		.uleb128 0x1c
 3350 04f7 39010000 		.4byte	.LASF82
 3351 04fb 05       		.byte	0x5
 3352 04fc 26       		.byte	0x26
 3353 04fd E6040000 		.4byte	0x4e6
 3354 0501 05       		.uleb128 0x5
 3355 0502 03       		.byte	0x3
 3356 0503 00000000 		.4byte	usbBuffer
 3357 0507 1C       		.uleb128 0x1c
 3358 0508 09010000 		.4byte	.LASF83
 3359 050c 05       		.byte	0x5
 3360 050d 3C       		.byte	0x3c
 3361 050e D9000000 		.4byte	0xd9
 3362 0512 05       		.uleb128 0x5
 3363 0513 03       		.byte	0x3
 3364 0514 00000000 		.4byte	system_state
 3365 0518 1C       		.uleb128 0x1c
 3366 0519 75050000 		.4byte	.LASF84
 3367 051d 01       		.byte	0x1
 3368 051e 2B       		.byte	0x2b
 3369 051f B2010000 		.4byte	0x1b2
 3370 0523 05       		.uleb128 0x5
 3371 0524 03       		.byte	0x3
 3372 0525 00000000 		.4byte	directionState
 3373 0529 1C       		.uleb128 0x1c
 3374 052a 64050000 		.4byte	.LASF85
 3375 052e 01       		.byte	0x1
 3376 052f 2D       		.byte	0x2d
 3377 0530 B2010000 		.4byte	0x1b2
 3378 0534 05       		.uleb128 0x5
 3379 0535 03       		.byte	0x3
 3380 0536 00000000 		.4byte	currentDirection
 3381 053a 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 73


 3382 053b A0020000 		.4byte	.LASF86
 3383 053f 01       		.byte	0x1
 3384 0540 2E       		.byte	0x2e
 3385 0541 B2010000 		.4byte	0x1b2
 3386 0545 05       		.uleb128 0x5
 3387 0546 03       		.byte	0x3
 3388 0547 00000000 		.4byte	previousDirection
 3389 054b 1C       		.uleb128 0x1c
 3390 054c 4C050000 		.4byte	.LASF87
 3391 0550 01       		.byte	0x1
 3392 0551 2F       		.byte	0x2f
 3393 0552 05020000 		.4byte	0x205
 3394 0556 05       		.uleb128 0x5
 3395 0557 03       		.byte	0x3
 3396 0558 00000000 		.4byte	currentOrientation
 3397 055c 1C       		.uleb128 0x1c
 3398 055d 21020000 		.4byte	.LASF88
 3399 0561 01       		.byte	0x1
 3400 0562 30       		.byte	0x30
 3401 0563 05020000 		.4byte	0x205
 3402 0567 05       		.uleb128 0x5
 3403 0568 03       		.byte	0x3
 3404 0569 00000000 		.4byte	previousOrientation
 3405 056d 1B       		.uleb128 0x1b
 3406 056e 733100   		.ascii	"s1\000"
 3407 0571 01       		.byte	0x1
 3408 0572 32       		.byte	0x32
 3409 0573 8F000000 		.4byte	0x8f
 3410 0577 05       		.uleb128 0x5
 3411 0578 03       		.byte	0x3
 3412 0579 00000000 		.4byte	s1
 3413 057d 1B       		.uleb128 0x1b
 3414 057e 733200   		.ascii	"s2\000"
 3415 0581 01       		.byte	0x1
 3416 0582 32       		.byte	0x32
 3417 0583 8F000000 		.4byte	0x8f
 3418 0587 05       		.uleb128 0x5
 3419 0588 03       		.byte	0x3
 3420 0589 00000000 		.4byte	s2
 3421 058d 1B       		.uleb128 0x1b
 3422 058e 733300   		.ascii	"s3\000"
 3423 0591 01       		.byte	0x1
 3424 0592 32       		.byte	0x32
 3425 0593 8F000000 		.4byte	0x8f
 3426 0597 05       		.uleb128 0x5
 3427 0598 03       		.byte	0x3
 3428 0599 00000000 		.4byte	s3
 3429 059d 1B       		.uleb128 0x1b
 3430 059e 733400   		.ascii	"s4\000"
 3431 05a1 01       		.byte	0x1
 3432 05a2 32       		.byte	0x32
 3433 05a3 8F000000 		.4byte	0x8f
 3434 05a7 05       		.uleb128 0x5
 3435 05a8 03       		.byte	0x3
 3436 05a9 00000000 		.4byte	s4
 3437 05ad 1B       		.uleb128 0x1b
 3438 05ae 733500   		.ascii	"s5\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 74


 3439 05b1 01       		.byte	0x1
 3440 05b2 32       		.byte	0x32
 3441 05b3 8F000000 		.4byte	0x8f
 3442 05b7 05       		.uleb128 0x5
 3443 05b8 03       		.byte	0x3
 3444 05b9 00000000 		.4byte	s5
 3445 05bd 1B       		.uleb128 0x1b
 3446 05be 733600   		.ascii	"s6\000"
 3447 05c1 01       		.byte	0x1
 3448 05c2 32       		.byte	0x32
 3449 05c3 8F000000 		.4byte	0x8f
 3450 05c7 05       		.uleb128 0x5
 3451 05c8 03       		.byte	0x3
 3452 05c9 00000000 		.4byte	s6
 3453 05cd 1C       		.uleb128 0x1c
 3454 05ce 67020000 		.4byte	.LASF89
 3455 05d2 01       		.byte	0x1
 3456 05d3 34       		.byte	0x34
 3457 05d4 A7000000 		.4byte	0xa7
 3458 05d8 05       		.uleb128 0x5
 3459 05d9 03       		.byte	0x3
 3460 05da 00000000 		.4byte	totalMilliseconds
 3461 05de 1C       		.uleb128 0x1c
 3462 05df B2020000 		.4byte	.LASF90
 3463 05e3 01       		.byte	0x1
 3464 05e4 35       		.byte	0x35
 3465 05e5 CB000000 		.4byte	0xcb
 3466 05e9 05       		.uleb128 0x5
 3467 05ea 03       		.byte	0x3
 3468 05eb 00000000 		.4byte	totalDistance
 3469 05ef 17       		.uleb128 0x17
 3470 05f0 7D000000 		.4byte	0x7d
 3471 05f4 FF050000 		.4byte	0x5ff
 3472 05f8 18       		.uleb128 0x18
 3473 05f9 76000000 		.4byte	0x76
 3474 05fd 44       		.byte	0x44
 3475 05fe 00       		.byte	0
 3476 05ff 1C       		.uleb128 0x1c
 3477 0600 6D040000 		.4byte	.LASF91
 3478 0604 01       		.byte	0x1
 3479 0605 37       		.byte	0x37
 3480 0606 EF050000 		.4byte	0x5ef
 3481 060a 05       		.uleb128 0x5
 3482 060b 03       		.byte	0x3
 3483 060c 00000000 		.4byte	buffer
 3484 0610 1C       		.uleb128 0x1c
 3485 0611 13040000 		.4byte	.LASF92
 3486 0615 01       		.byte	0x1
 3487 0616 38       		.byte	0x38
 3488 0617 68000000 		.4byte	0x68
 3489 061b 05       		.uleb128 0x5
 3490 061c 03       		.byte	0x3
 3491 061d 00000000 		.4byte	quadDec2Count
 3492 0621 1C       		.uleb128 0x1c
 3493 0622 33030000 		.4byte	.LASF93
 3494 0626 01       		.byte	0x1
 3495 0627 39       		.byte	0x39
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 75


 3496 0628 68000000 		.4byte	0x68
 3497 062c 05       		.uleb128 0x5
 3498 062d 03       		.byte	0x3
 3499 062e 00000000 		.4byte	timerInt
 3500 0632 1C       		.uleb128 0x1c
 3501 0633 C0020000 		.4byte	.LASF94
 3502 0637 01       		.byte	0x1
 3503 0638 3A       		.byte	0x3a
 3504 0639 68000000 		.4byte	0x68
 3505 063d 05       		.uleb128 0x5
 3506 063e 03       		.byte	0x3
 3507 063f 00000000 		.4byte	keepLedOn
 3508 0643 1C       		.uleb128 0x1c
 3509 0644 1F010000 		.4byte	.LASF95
 3510 0648 01       		.byte	0x1
 3511 0649 3B       		.byte	0x3b
 3512 064a A7000000 		.4byte	0xa7
 3513 064e 05       		.uleb128 0x5
 3514 064f 03       		.byte	0x3
 3515 0650 00000000 		.4byte	stopBuffer
 3516 0654 1C       		.uleb128 0x1c
 3517 0655 84010000 		.4byte	.LASF96
 3518 0659 01       		.byte	0x1
 3519 065a C9       		.byte	0xc9
 3520 065b CB000000 		.4byte	0xcb
 3521 065f 05       		.uleb128 0x5
 3522 0660 03       		.byte	0x3
 3523 0661 00000000 		.4byte	yBlockSize
 3524 0665 1C       		.uleb128 0x1c
 3525 0666 52010000 		.4byte	.LASF97
 3526 066a 01       		.byte	0x1
 3527 066b CA       		.byte	0xca
 3528 066c CB000000 		.4byte	0xcb
 3529 0670 05       		.uleb128 0x5
 3530 0671 03       		.byte	0x3
 3531 0672 00000000 		.4byte	xBlockSize
 3532 0676 1C       		.uleb128 0x1c
 3533 0677 43010000 		.4byte	.LASF98
 3534 067b 01       		.byte	0x1
 3535 067c CB       		.byte	0xcb
 3536 067d CB000000 		.4byte	0xcb
 3537 0681 05       		.uleb128 0x5
 3538 0682 03       		.byte	0x3
 3539 0683 00000000 		.4byte	blockSize
 3540 0687 1C       		.uleb128 0x1c
 3541 0688 79010000 		.4byte	.LASF99
 3542 068c 01       		.byte	0x1
 3543 068d CC       		.byte	0xcc
 3544 068e 8F000000 		.4byte	0x8f
 3545 0692 05       		.uleb128 0x5
 3546 0693 03       		.byte	0x3
 3547 0694 00000000 		.4byte	currentRow
 3548 0698 1C       		.uleb128 0x1c
 3549 0699 95020000 		.4byte	.LASF100
 3550 069d 01       		.byte	0x1
 3551 069e CD       		.byte	0xcd
 3552 069f 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 76


 3553 06a3 05       		.uleb128 0x5
 3554 06a4 03       		.byte	0x3
 3555 06a5 00000000 		.4byte	currentCol
 3556 06a9 00       		.byte	0
 3557              		.section	.debug_abbrev,"",%progbits
 3558              	.Ldebug_abbrev0:
 3559 0000 01       		.uleb128 0x1
 3560 0001 11       		.uleb128 0x11
 3561 0002 01       		.byte	0x1
 3562 0003 25       		.uleb128 0x25
 3563 0004 0E       		.uleb128 0xe
 3564 0005 13       		.uleb128 0x13
 3565 0006 0B       		.uleb128 0xb
 3566 0007 03       		.uleb128 0x3
 3567 0008 0E       		.uleb128 0xe
 3568 0009 1B       		.uleb128 0x1b
 3569 000a 0E       		.uleb128 0xe
 3570 000b 55       		.uleb128 0x55
 3571 000c 17       		.uleb128 0x17
 3572 000d 11       		.uleb128 0x11
 3573 000e 01       		.uleb128 0x1
 3574 000f 10       		.uleb128 0x10
 3575 0010 17       		.uleb128 0x17
 3576 0011 00       		.byte	0
 3577 0012 00       		.byte	0
 3578 0013 02       		.uleb128 0x2
 3579 0014 24       		.uleb128 0x24
 3580 0015 00       		.byte	0
 3581 0016 0B       		.uleb128 0xb
 3582 0017 0B       		.uleb128 0xb
 3583 0018 3E       		.uleb128 0x3e
 3584 0019 0B       		.uleb128 0xb
 3585 001a 03       		.uleb128 0x3
 3586 001b 0E       		.uleb128 0xe
 3587 001c 00       		.byte	0
 3588 001d 00       		.byte	0
 3589 001e 03       		.uleb128 0x3
 3590 001f 16       		.uleb128 0x16
 3591 0020 00       		.byte	0
 3592 0021 03       		.uleb128 0x3
 3593 0022 0E       		.uleb128 0xe
 3594 0023 3A       		.uleb128 0x3a
 3595 0024 0B       		.uleb128 0xb
 3596 0025 3B       		.uleb128 0x3b
 3597 0026 0B       		.uleb128 0xb
 3598 0027 49       		.uleb128 0x49
 3599 0028 13       		.uleb128 0x13
 3600 0029 00       		.byte	0
 3601 002a 00       		.byte	0
 3602 002b 04       		.uleb128 0x4
 3603 002c 24       		.uleb128 0x24
 3604 002d 00       		.byte	0
 3605 002e 0B       		.uleb128 0xb
 3606 002f 0B       		.uleb128 0xb
 3607 0030 3E       		.uleb128 0x3e
 3608 0031 0B       		.uleb128 0xb
 3609 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 77


 3610 0033 08       		.uleb128 0x8
 3611 0034 00       		.byte	0
 3612 0035 00       		.byte	0
 3613 0036 05       		.uleb128 0x5
 3614 0037 16       		.uleb128 0x16
 3615 0038 00       		.byte	0
 3616 0039 03       		.uleb128 0x3
 3617 003a 0E       		.uleb128 0xe
 3618 003b 3A       		.uleb128 0x3a
 3619 003c 0B       		.uleb128 0xb
 3620 003d 3B       		.uleb128 0x3b
 3621 003e 05       		.uleb128 0x5
 3622 003f 49       		.uleb128 0x49
 3623 0040 13       		.uleb128 0x13
 3624 0041 00       		.byte	0
 3625 0042 00       		.byte	0
 3626 0043 06       		.uleb128 0x6
 3627 0044 13       		.uleb128 0x13
 3628 0045 01       		.byte	0x1
 3629 0046 03       		.uleb128 0x3
 3630 0047 0E       		.uleb128 0xe
 3631 0048 0B       		.uleb128 0xb
 3632 0049 0B       		.uleb128 0xb
 3633 004a 3A       		.uleb128 0x3a
 3634 004b 0B       		.uleb128 0xb
 3635 004c 3B       		.uleb128 0x3b
 3636 004d 0B       		.uleb128 0xb
 3637 004e 01       		.uleb128 0x1
 3638 004f 13       		.uleb128 0x13
 3639 0050 00       		.byte	0
 3640 0051 00       		.byte	0
 3641 0052 07       		.uleb128 0x7
 3642 0053 0D       		.uleb128 0xd
 3643 0054 00       		.byte	0
 3644 0055 03       		.uleb128 0x3
 3645 0056 0E       		.uleb128 0xe
 3646 0057 3A       		.uleb128 0x3a
 3647 0058 0B       		.uleb128 0xb
 3648 0059 3B       		.uleb128 0x3b
 3649 005a 0B       		.uleb128 0xb
 3650 005b 49       		.uleb128 0x49
 3651 005c 13       		.uleb128 0x13
 3652 005d 38       		.uleb128 0x38
 3653 005e 0B       		.uleb128 0xb
 3654 005f 00       		.byte	0
 3655 0060 00       		.byte	0
 3656 0061 08       		.uleb128 0x8
 3657 0062 04       		.uleb128 0x4
 3658 0063 01       		.byte	0x1
 3659 0064 03       		.uleb128 0x3
 3660 0065 0E       		.uleb128 0xe
 3661 0066 0B       		.uleb128 0xb
 3662 0067 0B       		.uleb128 0xb
 3663 0068 49       		.uleb128 0x49
 3664 0069 13       		.uleb128 0x13
 3665 006a 3A       		.uleb128 0x3a
 3666 006b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 78


 3667 006c 3B       		.uleb128 0x3b
 3668 006d 0B       		.uleb128 0xb
 3669 006e 01       		.uleb128 0x1
 3670 006f 13       		.uleb128 0x13
 3671 0070 00       		.byte	0
 3672 0071 00       		.byte	0
 3673 0072 09       		.uleb128 0x9
 3674 0073 28       		.uleb128 0x28
 3675 0074 00       		.byte	0
 3676 0075 03       		.uleb128 0x3
 3677 0076 0E       		.uleb128 0xe
 3678 0077 1C       		.uleb128 0x1c
 3679 0078 0B       		.uleb128 0xb
 3680 0079 00       		.byte	0
 3681 007a 00       		.byte	0
 3682 007b 0A       		.uleb128 0xa
 3683 007c 28       		.uleb128 0x28
 3684 007d 00       		.byte	0
 3685 007e 03       		.uleb128 0x3
 3686 007f 08       		.uleb128 0x8
 3687 0080 1C       		.uleb128 0x1c
 3688 0081 0B       		.uleb128 0xb
 3689 0082 00       		.byte	0
 3690 0083 00       		.byte	0
 3691 0084 0B       		.uleb128 0xb
 3692 0085 2E       		.uleb128 0x2e
 3693 0086 01       		.byte	0x1
 3694 0087 3F       		.uleb128 0x3f
 3695 0088 19       		.uleb128 0x19
 3696 0089 03       		.uleb128 0x3
 3697 008a 0E       		.uleb128 0xe
 3698 008b 3A       		.uleb128 0x3a
 3699 008c 0B       		.uleb128 0xb
 3700 008d 3B       		.uleb128 0x3b
 3701 008e 0B       		.uleb128 0xb
 3702 008f 27       		.uleb128 0x27
 3703 0090 19       		.uleb128 0x19
 3704 0091 11       		.uleb128 0x11
 3705 0092 01       		.uleb128 0x1
 3706 0093 12       		.uleb128 0x12
 3707 0094 06       		.uleb128 0x6
 3708 0095 40       		.uleb128 0x40
 3709 0096 18       		.uleb128 0x18
 3710 0097 9642     		.uleb128 0x2116
 3711 0099 19       		.uleb128 0x19
 3712 009a 01       		.uleb128 0x1
 3713 009b 13       		.uleb128 0x13
 3714 009c 00       		.byte	0
 3715 009d 00       		.byte	0
 3716 009e 0C       		.uleb128 0xc
 3717 009f 0B       		.uleb128 0xb
 3718 00a0 01       		.byte	0x1
 3719 00a1 11       		.uleb128 0x11
 3720 00a2 01       		.uleb128 0x1
 3721 00a3 12       		.uleb128 0x12
 3722 00a4 06       		.uleb128 0x6
 3723 00a5 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 79


 3724 00a6 00       		.byte	0
 3725 00a7 0D       		.uleb128 0xd
 3726 00a8 34       		.uleb128 0x34
 3727 00a9 00       		.byte	0
 3728 00aa 03       		.uleb128 0x3
 3729 00ab 0E       		.uleb128 0xe
 3730 00ac 3A       		.uleb128 0x3a
 3731 00ad 0B       		.uleb128 0xb
 3732 00ae 3B       		.uleb128 0x3b
 3733 00af 0B       		.uleb128 0xb
 3734 00b0 49       		.uleb128 0x49
 3735 00b1 13       		.uleb128 0x13
 3736 00b2 02       		.uleb128 0x2
 3737 00b3 18       		.uleb128 0x18
 3738 00b4 00       		.byte	0
 3739 00b5 00       		.byte	0
 3740 00b6 0E       		.uleb128 0xe
 3741 00b7 2E       		.uleb128 0x2e
 3742 00b8 00       		.byte	0
 3743 00b9 3F       		.uleb128 0x3f
 3744 00ba 19       		.uleb128 0x19
 3745 00bb 03       		.uleb128 0x3
 3746 00bc 0E       		.uleb128 0xe
 3747 00bd 3A       		.uleb128 0x3a
 3748 00be 0B       		.uleb128 0xb
 3749 00bf 3B       		.uleb128 0x3b
 3750 00c0 0B       		.uleb128 0xb
 3751 00c1 27       		.uleb128 0x27
 3752 00c2 19       		.uleb128 0x19
 3753 00c3 11       		.uleb128 0x11
 3754 00c4 01       		.uleb128 0x1
 3755 00c5 12       		.uleb128 0x12
 3756 00c6 06       		.uleb128 0x6
 3757 00c7 40       		.uleb128 0x40
 3758 00c8 18       		.uleb128 0x18
 3759 00c9 9742     		.uleb128 0x2117
 3760 00cb 19       		.uleb128 0x19
 3761 00cc 00       		.byte	0
 3762 00cd 00       		.byte	0
 3763 00ce 0F       		.uleb128 0xf
 3764 00cf 2E       		.uleb128 0x2e
 3765 00d0 00       		.byte	0
 3766 00d1 3F       		.uleb128 0x3f
 3767 00d2 19       		.uleb128 0x19
 3768 00d3 03       		.uleb128 0x3
 3769 00d4 0E       		.uleb128 0xe
 3770 00d5 3A       		.uleb128 0x3a
 3771 00d6 0B       		.uleb128 0xb
 3772 00d7 3B       		.uleb128 0x3b
 3773 00d8 0B       		.uleb128 0xb
 3774 00d9 27       		.uleb128 0x27
 3775 00da 19       		.uleb128 0x19
 3776 00db 11       		.uleb128 0x11
 3777 00dc 01       		.uleb128 0x1
 3778 00dd 12       		.uleb128 0x12
 3779 00de 06       		.uleb128 0x6
 3780 00df 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 80


 3781 00e0 18       		.uleb128 0x18
 3782 00e1 9642     		.uleb128 0x2116
 3783 00e3 19       		.uleb128 0x19
 3784 00e4 00       		.byte	0
 3785 00e5 00       		.byte	0
 3786 00e6 10       		.uleb128 0x10
 3787 00e7 2E       		.uleb128 0x2e
 3788 00e8 00       		.byte	0
 3789 00e9 3F       		.uleb128 0x3f
 3790 00ea 19       		.uleb128 0x19
 3791 00eb 03       		.uleb128 0x3
 3792 00ec 0E       		.uleb128 0xe
 3793 00ed 3A       		.uleb128 0x3a
 3794 00ee 0B       		.uleb128 0xb
 3795 00ef 3B       		.uleb128 0x3b
 3796 00f0 0B       		.uleb128 0xb
 3797 00f1 49       		.uleb128 0x49
 3798 00f2 13       		.uleb128 0x13
 3799 00f3 11       		.uleb128 0x11
 3800 00f4 01       		.uleb128 0x1
 3801 00f5 12       		.uleb128 0x12
 3802 00f6 06       		.uleb128 0x6
 3803 00f7 40       		.uleb128 0x40
 3804 00f8 18       		.uleb128 0x18
 3805 00f9 9642     		.uleb128 0x2116
 3806 00fb 19       		.uleb128 0x19
 3807 00fc 00       		.byte	0
 3808 00fd 00       		.byte	0
 3809 00fe 11       		.uleb128 0x11
 3810 00ff 2E       		.uleb128 0x2e
 3811 0100 01       		.byte	0x1
 3812 0101 3F       		.uleb128 0x3f
 3813 0102 19       		.uleb128 0x19
 3814 0103 03       		.uleb128 0x3
 3815 0104 0E       		.uleb128 0xe
 3816 0105 3A       		.uleb128 0x3a
 3817 0106 0B       		.uleb128 0xb
 3818 0107 3B       		.uleb128 0x3b
 3819 0108 0B       		.uleb128 0xb
 3820 0109 27       		.uleb128 0x27
 3821 010a 19       		.uleb128 0x19
 3822 010b 49       		.uleb128 0x49
 3823 010c 13       		.uleb128 0x13
 3824 010d 11       		.uleb128 0x11
 3825 010e 01       		.uleb128 0x1
 3826 010f 12       		.uleb128 0x12
 3827 0110 06       		.uleb128 0x6
 3828 0111 40       		.uleb128 0x40
 3829 0112 18       		.uleb128 0x18
 3830 0113 9642     		.uleb128 0x2116
 3831 0115 19       		.uleb128 0x19
 3832 0116 01       		.uleb128 0x1
 3833 0117 13       		.uleb128 0x13
 3834 0118 00       		.byte	0
 3835 0119 00       		.byte	0
 3836 011a 12       		.uleb128 0x12
 3837 011b 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 81


 3838 011c 00       		.byte	0
 3839 011d 03       		.uleb128 0x3
 3840 011e 0E       		.uleb128 0xe
 3841 011f 3A       		.uleb128 0x3a
 3842 0120 0B       		.uleb128 0xb
 3843 0121 3B       		.uleb128 0x3b
 3844 0122 0B       		.uleb128 0xb
 3845 0123 49       		.uleb128 0x49
 3846 0124 13       		.uleb128 0x13
 3847 0125 02       		.uleb128 0x2
 3848 0126 18       		.uleb128 0x18
 3849 0127 00       		.byte	0
 3850 0128 00       		.byte	0
 3851 0129 13       		.uleb128 0x13
 3852 012a 34       		.uleb128 0x34
 3853 012b 00       		.byte	0
 3854 012c 03       		.uleb128 0x3
 3855 012d 08       		.uleb128 0x8
 3856 012e 3A       		.uleb128 0x3a
 3857 012f 0B       		.uleb128 0xb
 3858 0130 3B       		.uleb128 0x3b
 3859 0131 0B       		.uleb128 0xb
 3860 0132 49       		.uleb128 0x49
 3861 0133 13       		.uleb128 0x13
 3862 0134 02       		.uleb128 0x2
 3863 0135 18       		.uleb128 0x18
 3864 0136 00       		.byte	0
 3865 0137 00       		.byte	0
 3866 0138 14       		.uleb128 0x14
 3867 0139 2E       		.uleb128 0x2e
 3868 013a 00       		.byte	0
 3869 013b 3F       		.uleb128 0x3f
 3870 013c 19       		.uleb128 0x19
 3871 013d 03       		.uleb128 0x3
 3872 013e 0E       		.uleb128 0xe
 3873 013f 3A       		.uleb128 0x3a
 3874 0140 0B       		.uleb128 0xb
 3875 0141 3B       		.uleb128 0x3b
 3876 0142 0B       		.uleb128 0xb
 3877 0143 11       		.uleb128 0x11
 3878 0144 01       		.uleb128 0x1
 3879 0145 12       		.uleb128 0x12
 3880 0146 06       		.uleb128 0x6
 3881 0147 40       		.uleb128 0x40
 3882 0148 18       		.uleb128 0x18
 3883 0149 9742     		.uleb128 0x2117
 3884 014b 19       		.uleb128 0x19
 3885 014c 00       		.byte	0
 3886 014d 00       		.byte	0
 3887 014e 15       		.uleb128 0x15
 3888 014f 2E       		.uleb128 0x2e
 3889 0150 00       		.byte	0
 3890 0151 3F       		.uleb128 0x3f
 3891 0152 19       		.uleb128 0x19
 3892 0153 03       		.uleb128 0x3
 3893 0154 0E       		.uleb128 0xe
 3894 0155 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 82


 3895 0156 0B       		.uleb128 0xb
 3896 0157 3B       		.uleb128 0x3b
 3897 0158 05       		.uleb128 0x5
 3898 0159 49       		.uleb128 0x49
 3899 015a 13       		.uleb128 0x13
 3900 015b 11       		.uleb128 0x11
 3901 015c 01       		.uleb128 0x1
 3902 015d 12       		.uleb128 0x12
 3903 015e 06       		.uleb128 0x6
 3904 015f 40       		.uleb128 0x40
 3905 0160 18       		.uleb128 0x18
 3906 0161 9642     		.uleb128 0x2116
 3907 0163 19       		.uleb128 0x19
 3908 0164 00       		.byte	0
 3909 0165 00       		.byte	0
 3910 0166 16       		.uleb128 0x16
 3911 0167 2E       		.uleb128 0x2e
 3912 0168 00       		.byte	0
 3913 0169 3F       		.uleb128 0x3f
 3914 016a 19       		.uleb128 0x19
 3915 016b 03       		.uleb128 0x3
 3916 016c 0E       		.uleb128 0xe
 3917 016d 3A       		.uleb128 0x3a
 3918 016e 0B       		.uleb128 0xb
 3919 016f 3B       		.uleb128 0x3b
 3920 0170 05       		.uleb128 0x5
 3921 0171 11       		.uleb128 0x11
 3922 0172 01       		.uleb128 0x1
 3923 0173 12       		.uleb128 0x12
 3924 0174 06       		.uleb128 0x6
 3925 0175 40       		.uleb128 0x40
 3926 0176 18       		.uleb128 0x18
 3927 0177 9642     		.uleb128 0x2116
 3928 0179 19       		.uleb128 0x19
 3929 017a 00       		.byte	0
 3930 017b 00       		.byte	0
 3931 017c 17       		.uleb128 0x17
 3932 017d 01       		.uleb128 0x1
 3933 017e 01       		.byte	0x1
 3934 017f 49       		.uleb128 0x49
 3935 0180 13       		.uleb128 0x13
 3936 0181 01       		.uleb128 0x1
 3937 0182 13       		.uleb128 0x13
 3938 0183 00       		.byte	0
 3939 0184 00       		.byte	0
 3940 0185 18       		.uleb128 0x18
 3941 0186 21       		.uleb128 0x21
 3942 0187 00       		.byte	0
 3943 0188 49       		.uleb128 0x49
 3944 0189 13       		.uleb128 0x13
 3945 018a 2F       		.uleb128 0x2f
 3946 018b 0B       		.uleb128 0xb
 3947 018c 00       		.byte	0
 3948 018d 00       		.byte	0
 3949 018e 19       		.uleb128 0x19
 3950 018f 34       		.uleb128 0x34
 3951 0190 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 83


 3952 0191 03       		.uleb128 0x3
 3953 0192 0E       		.uleb128 0xe
 3954 0193 3A       		.uleb128 0x3a
 3955 0194 0B       		.uleb128 0xb
 3956 0195 3B       		.uleb128 0x3b
 3957 0196 05       		.uleb128 0x5
 3958 0197 49       		.uleb128 0x49
 3959 0198 13       		.uleb128 0x13
 3960 0199 3F       		.uleb128 0x3f
 3961 019a 19       		.uleb128 0x19
 3962 019b 3C       		.uleb128 0x3c
 3963 019c 19       		.uleb128 0x19
 3964 019d 00       		.byte	0
 3965 019e 00       		.byte	0
 3966 019f 1A       		.uleb128 0x1a
 3967 01a0 35       		.uleb128 0x35
 3968 01a1 00       		.byte	0
 3969 01a2 49       		.uleb128 0x49
 3970 01a3 13       		.uleb128 0x13
 3971 01a4 00       		.byte	0
 3972 01a5 00       		.byte	0
 3973 01a6 1B       		.uleb128 0x1b
 3974 01a7 34       		.uleb128 0x34
 3975 01a8 00       		.byte	0
 3976 01a9 03       		.uleb128 0x3
 3977 01aa 08       		.uleb128 0x8
 3978 01ab 3A       		.uleb128 0x3a
 3979 01ac 0B       		.uleb128 0xb
 3980 01ad 3B       		.uleb128 0x3b
 3981 01ae 0B       		.uleb128 0xb
 3982 01af 49       		.uleb128 0x49
 3983 01b0 13       		.uleb128 0x13
 3984 01b1 3F       		.uleb128 0x3f
 3985 01b2 19       		.uleb128 0x19
 3986 01b3 02       		.uleb128 0x2
 3987 01b4 18       		.uleb128 0x18
 3988 01b5 00       		.byte	0
 3989 01b6 00       		.byte	0
 3990 01b7 1C       		.uleb128 0x1c
 3991 01b8 34       		.uleb128 0x34
 3992 01b9 00       		.byte	0
 3993 01ba 03       		.uleb128 0x3
 3994 01bb 0E       		.uleb128 0xe
 3995 01bc 3A       		.uleb128 0x3a
 3996 01bd 0B       		.uleb128 0xb
 3997 01be 3B       		.uleb128 0x3b
 3998 01bf 0B       		.uleb128 0xb
 3999 01c0 49       		.uleb128 0x49
 4000 01c1 13       		.uleb128 0x13
 4001 01c2 3F       		.uleb128 0x3f
 4002 01c3 19       		.uleb128 0x19
 4003 01c4 02       		.uleb128 0x2
 4004 01c5 18       		.uleb128 0x18
 4005 01c6 00       		.byte	0
 4006 01c7 00       		.byte	0
 4007 01c8 00       		.byte	0
 4008              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 84


 4009 0000 74000000 		.4byte	0x74
 4010 0004 0200     		.2byte	0x2
 4011 0006 00000000 		.4byte	.Ldebug_info0
 4012 000a 04       		.byte	0x4
 4013 000b 00       		.byte	0
 4014 000c 0000     		.2byte	0
 4015 000e 0000     		.2byte	0
 4016 0010 00000000 		.4byte	.LFB64
 4017 0014 EC000000 		.4byte	.LFE64-.LFB64
 4018 0018 00000000 		.4byte	.LFB65
 4019 001c 18000000 		.4byte	.LFE65-.LFB65
 4020 0020 00000000 		.4byte	.LFB66
 4021 0024 18000000 		.4byte	.LFE66-.LFB66
 4022 0028 00000000 		.4byte	.LFB67
 4023 002c 18000000 		.4byte	.LFE67-.LFB67
 4024 0030 00000000 		.4byte	.LFB68
 4025 0034 18000000 		.4byte	.LFE68-.LFB68
 4026 0038 00000000 		.4byte	.LFB69
 4027 003c 38000000 		.4byte	.LFE69-.LFB69
 4028 0040 00000000 		.4byte	.LFB70
 4029 0044 9C000000 		.4byte	.LFE70-.LFB70
 4030 0048 00000000 		.4byte	.LFB71
 4031 004c 54000000 		.4byte	.LFE71-.LFB71
 4032 0050 00000000 		.4byte	.LFB72
 4033 0054 48000000 		.4byte	.LFE72-.LFB72
 4034 0058 00000000 		.4byte	.LFB73
 4035 005c 84040000 		.4byte	.LFE73-.LFB73
 4036 0060 00000000 		.4byte	.LFB74
 4037 0064 5C050000 		.4byte	.LFE74-.LFB74
 4038 0068 00000000 		.4byte	.LFB75
 4039 006c 88000000 		.4byte	.LFE75-.LFB75
 4040 0070 00000000 		.4byte	0
 4041 0074 00000000 		.4byte	0
 4042              		.section	.debug_ranges,"",%progbits
 4043              	.Ldebug_ranges0:
 4044 0000 00000000 		.4byte	.LFB64
 4045 0004 EC000000 		.4byte	.LFE64
 4046 0008 00000000 		.4byte	.LFB65
 4047 000c 18000000 		.4byte	.LFE65
 4048 0010 00000000 		.4byte	.LFB66
 4049 0014 18000000 		.4byte	.LFE66
 4050 0018 00000000 		.4byte	.LFB67
 4051 001c 18000000 		.4byte	.LFE67
 4052 0020 00000000 		.4byte	.LFB68
 4053 0024 18000000 		.4byte	.LFE68
 4054 0028 00000000 		.4byte	.LFB69
 4055 002c 38000000 		.4byte	.LFE69
 4056 0030 00000000 		.4byte	.LFB70
 4057 0034 9C000000 		.4byte	.LFE70
 4058 0038 00000000 		.4byte	.LFB71
 4059 003c 54000000 		.4byte	.LFE71
 4060 0040 00000000 		.4byte	.LFB72
 4061 0044 48000000 		.4byte	.LFE72
 4062 0048 00000000 		.4byte	.LFB73
 4063 004c 84040000 		.4byte	.LFE73
 4064 0050 00000000 		.4byte	.LFB74
 4065 0054 5C050000 		.4byte	.LFE74
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 85


 4066 0058 00000000 		.4byte	.LFB75
 4067 005c 88000000 		.4byte	.LFE75
 4068 0060 00000000 		.4byte	0
 4069 0064 00000000 		.4byte	0
 4070              		.section	.debug_line,"",%progbits
 4071              	.Ldebug_line0:
 4072 0000 34040000 		.section	.debug_str,"MS",%progbits,1
 4072      02005F01 
 4072      00000201 
 4072      FB0E0D00 
 4072      01010101 
 4073              	.LASF56:
 4074 0000 53365F44 		.ascii	"S6_DETECTED\000"
 4074      45544543 
 4074      54454400 
 4075              	.LASF101:
 4076 000c 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4076      43393920 
 4076      352E342E 
 4076      31203230 
 4076      31363036 
 4077 003f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4077      20726576 
 4077      6973696F 
 4077      6E203233 
 4077      37373135 
 4078 0072 30202D73 		.ascii	"0 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 4078      74643D63 
 4078      3939202D 
 4078      6666756E 
 4078      6374696F 
 4079              	.LASF39:
 4080 00a3 5475726E 		.ascii	"TurnLeft\000"
 4080      4C656674 
 4080      00
 4081              	.LASF60:
 4082 00ac 67657444 		.ascii	"getDirection\000"
 4082      69726563 
 4082      74696F6E 
 4082      00
 4083              	.LASF66:
 4084 00b9 74735F65 		.ascii	"ts_enc\000"
 4084      6E6300
 4085              	.LASF46:
 4086 00c0 466F7277 		.ascii	"ForwardAfterTurn\000"
 4086      61726441 
 4086      66746572 
 4086      5475726E 
 4086      00
 4087              	.LASF75:
 4088 00d1 666C6167 		.ascii	"flag_packet\000"
 4088      5F706163 
 4088      6B657400 
 4089              	.LASF45:
 4090 00dd 77616974 		.ascii	"waitForTurn\000"
 4090      466F7254 
 4090      75726E00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 86


 4091              	.LASF72:
 4092 00e9 666C6167 		.ascii	"flag_ts_speed\000"
 4092      5F74735F 
 4092      73706565 
 4092      6400
 4093              	.LASF33:
 4094 00f7 67325F78 		.ascii	"g2_xpos\000"
 4094      706F7300 
 4095              	.LASF2:
 4096 00ff 73686F72 		.ascii	"short int\000"
 4096      7420696E 
 4096      7400
 4097              	.LASF83:
 4098 0109 73797374 		.ascii	"system_state\000"
 4098      656D5F73 
 4098      74617465 
 4098      00
 4099              	.LASF9:
 4100 0116 73697A65 		.ascii	"sizetype\000"
 4100      74797065 
 4100      00
 4101              	.LASF95:
 4102 011f 73746F70 		.ascii	"stopBuffer\000"
 4102      42756666 
 4102      657200
 4103              	.LASF48:
 4104 012a 44697265 		.ascii	"DirectionState\000"
 4104      6374696F 
 4104      6E537461 
 4104      746500
 4105              	.LASF82:
 4106 0139 75736242 		.ascii	"usbBuffer\000"
 4106      75666665 
 4106      7200
 4107              	.LASF98:
 4108 0143 626C6F63 		.ascii	"blockSize\000"
 4108      6B53697A 
 4108      6500
 4109              	.LASF58:
 4110 014d 6D61696E 		.ascii	"main\000"
 4110      00
 4111              	.LASF97:
 4112 0152 78426C6F 		.ascii	"xBlockSize\000"
 4112      636B5369 
 4112      7A6500
 4113              	.LASF54:
 4114 015d 53345F44 		.ascii	"S4_DETECTED\000"
 4114      45544543 
 4114      54454400 
 4115              	.LASF40:
 4116 0169 41646A75 		.ascii	"AdjustToTheLeft\000"
 4116      7374546F 
 4116      5468654C 
 4116      65667400 
 4117              	.LASF99:
 4118 0179 63757272 		.ascii	"currentRow\000"
 4118      656E7452 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 87


 4118      6F7700
 4119              	.LASF96:
 4120 0184 79426C6F 		.ascii	"yBlockSize\000"
 4120      636B5369 
 4120      7A6500
 4121              	.LASF21:
 4122 018f 696E6465 		.ascii	"index\000"
 4122      7800
 4123              	.LASF105:
 4124 0195 73706565 		.ascii	"speedTimer\000"
 4124      6454696D 
 4124      657200
 4125              	.LASF17:
 4126 01a0 696E7431 		.ascii	"int16\000"
 4126      3600
 4127              	.LASF44:
 4128 01a6 48617264 		.ascii	"HardForward\000"
 4128      466F7277 
 4128      61726400 
 4129              	.LASF13:
 4130 01b2 75696E74 		.ascii	"uint8\000"
 4130      3800
 4131              	.LASF32:
 4132 01b8 67315F64 		.ascii	"g1_direction\000"
 4132      69726563 
 4132      74696F6E 
 4132      00
 4133              	.LASF80:
 4134 01c5 6C696E65 		.ascii	"line\000"
 4134      00
 4135              	.LASF18:
 4136 01ca 666C6F61 		.ascii	"float\000"
 4136      7400
 4137              	.LASF52:
 4138 01d0 52696768 		.ascii	"Right\000"
 4138      7400
 4139              	.LASF59:
 4140 01d6 6E657744 		.ascii	"newDistance\000"
 4140      69737461 
 4140      6E636500 
 4141              	.LASF6:
 4142 01e2 6C6F6E67 		.ascii	"long long int\000"
 4142      206C6F6E 
 4142      6720696E 
 4142      7400
 4143              	.LASF16:
 4144 01f0 696E7438 		.ascii	"int8\000"
 4144      00
 4145              	.LASF71:
 4146 01f5 666C6167 		.ascii	"flag_ts_update\000"
 4146      5F74735F 
 4146      75706461 
 4146      746500
 4147              	.LASF34:
 4148 0204 67325F79 		.ascii	"g2_ypos\000"
 4148      706F7300 
 4149              	.LASF28:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 88


 4150 020c 67305F64 		.ascii	"g0_direction\000"
 4150      69726563 
 4150      74696F6E 
 4150      00
 4151              	.LASF25:
 4152 0219 67305F78 		.ascii	"g0_xpos\000"
 4152      706F7300 
 4153              	.LASF88:
 4154 0221 70726576 		.ascii	"previousOrientation\000"
 4154      696F7573 
 4154      4F726965 
 4154      6E746174 
 4154      696F6E00 
 4155              	.LASF51:
 4156 0235 4C656674 		.ascii	"Left\000"
 4156      00
 4157              	.LASF61:
 4158 023a 43686563 		.ascii	"CheckSensorDirection\000"
 4158      6B53656E 
 4158      736F7244 
 4158      69726563 
 4158      74696F6E 
 4159              	.LASF73:
 4160 024f 666C6167 		.ascii	"flag_ts_display\000"
 4160      5F74735F 
 4160      64697370 
 4160      6C617900 
 4161              	.LASF74:
 4162 025f 666C6167 		.ascii	"flag_rx\000"
 4162      5F727800 
 4163              	.LASF89:
 4164 0267 746F7461 		.ascii	"totalMilliseconds\000"
 4164      6C4D696C 
 4164      6C697365 
 4164      636F6E64 
 4164      7300
 4165              	.LASF81:
 4166 0279 656E7472 		.ascii	"entry\000"
 4166      7900
 4167              	.LASF30:
 4168 027f 67315F79 		.ascii	"g1_ypos\000"
 4168      706F7300 
 4169              	.LASF1:
 4170 0287 756E7369 		.ascii	"unsigned char\000"
 4170      676E6564 
 4170      20636861 
 4170      7200
 4171              	.LASF100:
 4172 0295 63757272 		.ascii	"currentCol\000"
 4172      656E7443 
 4172      6F6C00
 4173              	.LASF86:
 4174 02a0 70726576 		.ascii	"previousDirection\000"
 4174      696F7573 
 4174      44697265 
 4174      6374696F 
 4174      6E00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 89


 4175              	.LASF90:
 4176 02b2 746F7461 		.ascii	"totalDistance\000"
 4176      6C446973 
 4176      74616E63 
 4176      6500
 4177              	.LASF94:
 4178 02c0 6B656570 		.ascii	"keepLedOn\000"
 4178      4C65644F 
 4178      6E00
 4179              	.LASF27:
 4180 02ca 67305F73 		.ascii	"g0_speed\000"
 4180      70656564 
 4180      00
 4181              	.LASF77:
 4182 02d3 64617461 		.ascii	"dataready_flag\000"
 4182      72656164 
 4182      795F666C 
 4182      616700
 4183              	.LASF29:
 4184 02e2 67315F78 		.ascii	"g1_xpos\000"
 4184      706F7300 
 4185              	.LASF0:
 4186 02ea 7369676E 		.ascii	"signed char\000"
 4186      65642063 
 4186      68617200 
 4187              	.LASF12:
 4188 02f6 696E7433 		.ascii	"int32_t\000"
 4188      325F7400 
 4189              	.LASF7:
 4190 02fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 4190      206C6F6E 
 4190      6720756E 
 4190      7369676E 
 4190      65642069 
 4191              	.LASF41:
 4192 0315 41646A75 		.ascii	"AdjustToTheRight\000"
 4192      7374546F 
 4192      54686552 
 4192      69676874 
 4192      00
 4193              	.LASF8:
 4194 0326 756E7369 		.ascii	"unsigned int\000"
 4194      676E6564 
 4194      20696E74 
 4194      00
 4195              	.LASF93:
 4196 0333 74696D65 		.ascii	"timerInt\000"
 4196      72496E74 
 4196      00
 4197              	.LASF76:
 4198 033c 666C6167 		.ascii	"flag_KB_string\000"
 4198      5F4B425F 
 4198      73747269 
 4198      6E6700
 4199              	.LASF63:
 4200 034b 53657452 		.ascii	"SetRobotMovement\000"
 4200      6F626F74 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 90


 4200      4D6F7665 
 4200      6D656E74 
 4200      00
 4201              	.LASF57:
 4202 035c 54494D45 		.ascii	"TIMER_FINISH\000"
 4202      525F4649 
 4202      4E495348 
 4202      00
 4203              	.LASF35:
 4204 0369 67325F73 		.ascii	"g2_speed\000"
 4204      70656564 
 4204      00
 4205              	.LASF55:
 4206 0372 53355F44 		.ascii	"S5_DETECTED\000"
 4206      45544543 
 4206      54454400 
 4207              	.LASF3:
 4208 037e 73686F72 		.ascii	"short unsigned int\000"
 4208      7420756E 
 4208      7369676E 
 4208      65642069 
 4208      6E7400
 4209              	.LASF104:
 4210 0391 64617461 		.ascii	"data_main\000"
 4210      5F6D6169 
 4210      6E00
 4211              	.LASF62:
 4212 039b 52657365 		.ascii	"ResetSensorFlags\000"
 4212      7453656E 
 4212      736F7246 
 4212      6C616773 
 4212      00
 4213              	.LASF10:
 4214 03ac 63686172 		.ascii	"char\000"
 4214      00
 4215              	.LASF4:
 4216 03b1 6C6F6E67 		.ascii	"long int\000"
 4216      20696E74 
 4216      00
 4217              	.LASF37:
 4218 03ba 466F7277 		.ascii	"Forward\000"
 4218      61726400 
 4219              	.LASF103:
 4220 03c2 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4220      6F63756D 
 4220      656E7473 
 4220      5C476974 
 4220      4875625C 
 4221 03f1 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4221      635F636F 
 4221      64655F62 
 4221      6173655C 
 4221      43533330 
 4222              	.LASF92:
 4223 0413 71756164 		.ascii	"quadDec2Count\000"
 4223      44656332 
 4223      436F756E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 91


 4223      7400
 4224              	.LASF49:
 4225 0421 4F726965 		.ascii	"Orientation\000"
 4225      6E746174 
 4225      696F6E00 
 4226              	.LASF36:
 4227 042d 67325F64 		.ascii	"g2_direction\000"
 4227      69726563 
 4227      74696F6E 
 4227      00
 4228              	.LASF31:
 4229 043a 67315F73 		.ascii	"g1_speed\000"
 4229      70656564 
 4229      00
 4230              	.LASF79:
 4231 0443 64697370 		.ascii	"displaystring\000"
 4231      6C617973 
 4231      7472696E 
 4231      6700
 4232              	.LASF22:
 4233 0451 726F626F 		.ascii	"robot_xpos\000"
 4233      745F7870 
 4233      6F7300
 4234              	.LASF38:
 4235 045c 5475726E 		.ascii	"TurnRight\000"
 4235      52696768 
 4235      7400
 4236              	.LASF14:
 4237 0466 75696E74 		.ascii	"uint16\000"
 4237      313600
 4238              	.LASF91:
 4239 046d 62756666 		.ascii	"buffer\000"
 4239      657200
 4240              	.LASF15:
 4241 0474 75696E74 		.ascii	"uint32\000"
 4241      333200
 4242              	.LASF102:
 4243 047b 6D61696E 		.ascii	"main.c\000"
 4243      2E6300
 4244              	.LASF5:
 4245 0482 6C6F6E67 		.ascii	"long unsigned int\000"
 4245      20756E73 
 4245      69676E65 
 4245      6420696E 
 4245      7400
 4246              	.LASF47:
 4247 0494 4261636B 		.ascii	"Backward\000"
 4247      77617264 
 4247      00
 4248              	.LASF19:
 4249 049d 646F7562 		.ascii	"double\000"
 4249      6C6500
 4250              	.LASF43:
 4251 04a4 556E6B6E 		.ascii	"Unknown\000"
 4251      6F776E00 
 4252              	.LASF64:
 4253 04ac 666F6F64 		.ascii	"food_list\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 92


 4253      5F6C6973 
 4253      7400
 4254              	.LASF53:
 4255 04b6 53335F44 		.ascii	"S3_DETECTED\000"
 4255      45544543 
 4255      54454400 
 4256              	.LASF68:
 4257 04c2 74735F73 		.ascii	"ts_speed\000"
 4257      70656564 
 4257      00
 4258              	.LASF107:
 4259 04cb 636F756E 		.ascii	"count\000"
 4259      7400
 4260              	.LASF70:
 4261 04d1 666C6167 		.ascii	"flag_ts_enc\000"
 4261      5F74735F 
 4261      656E6300 
 4262              	.LASF11:
 4263 04dd 5F5F696E 		.ascii	"__int32_t\000"
 4263      7433325F 
 4263      7400
 4264              	.LASF42:
 4265 04e7 53746F70 		.ascii	"Stop\000"
 4265      00
 4266              	.LASF26:
 4267 04ec 67305F79 		.ascii	"g0_ypos\000"
 4267      706F7300 
 4268              	.LASF69:
 4269 04f4 74735F64 		.ascii	"ts_display\000"
 4269      6973706C 
 4269      617900
 4270              	.LASF67:
 4271 04ff 74735F75 		.ascii	"ts_update\000"
 4271      70646174 
 4271      6500
 4272              	.LASF106:
 4273 0509 71756164 		.ascii	"quadCountToRPM\000"
 4273      436F756E 
 4273      74546F52 
 4273      504D00
 4274              	.LASF78:
 4275 0518 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4275      5F72665F 
 4275      7472616E 
 4275      736D6973 
 4275      73696F6E 
 4276              	.LASF23:
 4277 0534 726F626F 		.ascii	"robot_ypos\000"
 4277      745F7970 
 4277      6F7300
 4278              	.LASF65:
 4279 053f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4279      52784275 
 4279      66666572 
 4279      00
 4280              	.LASF87:
 4281 054c 63757272 		.ascii	"currentOrientation\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKBXuTg.s 			page 93


 4281      656E744F 
 4281      7269656E 
 4281      74617469 
 4281      6F6E00
 4282              	.LASF50:
 4283 055f 446F776E 		.ascii	"Down\000"
 4283      00
 4284              	.LASF85:
 4285 0564 63757272 		.ascii	"currentDirection\000"
 4285      656E7444 
 4285      69726563 
 4285      74696F6E 
 4285      00
 4286              	.LASF84:
 4287 0575 64697265 		.ascii	"directionState\000"
 4287      6374696F 
 4287      6E537461 
 4287      746500
 4288              	.LASF20:
 4289 0584 72737369 		.ascii	"rssi\000"
 4289      00
 4290              	.LASF24:
 4291 0589 726F626F 		.ascii	"robot_orientation\000"
 4291      745F6F72 
 4291      69656E74 
 4291      6174696F 
 4291      6E00
 4292              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
