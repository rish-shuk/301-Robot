ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 01       		.byte	1
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 01       		.byte	1
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Down;
  46:main.c        **** enum OrientationState previousOrientation = Down;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** enum DirectionState RecheckPosition();
  49:main.c        **** // --- YIPPE
  50:main.c        **** // ----------------------------------------
  51:main.c        **** uint8 s3 = 0;
  52:main.c        **** uint8 s4 = 0;
  53:main.c        **** uint8 s5 = 0;
  54:main.c        **** uint8 s6 = 0;
  55:main.c        **** //* ========================================
  56:main.c        **** // Calculating Distance
  57:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  58:main.c        **** 
  59:main.c        **** uint32 totalMilliseconds = 0;
  60:main.c        **** float totalDistance = 0; // in mm
  61:main.c        **** //* ========================================
  62:main.c        **** char buffer[69];
  63:main.c        **** int quadDec2Count = 0;
  64:main.c        **** int timerInt = 0;
  65:main.c        **** int keepLedOn = 0;
  66:main.c        **** uint32 stopBuffer = 0;
  67:main.c        **** 
  68:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  69:main.c        **** 
  70:main.c        **** CY_ISR (speedTimer) { 
 200              		.loc 1 70 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 6


 209 0002 83B0     		sub	sp, sp, #12
 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  71:main.c        ****     timerInt = 1;
 213              		.loc 1 71 0
 214 0006 304B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  72:main.c        ****     //quadDec_M1 used for turning macros
  73:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 73 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 2D4B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  74:main.c        ****     
  75:main.c        ****     //   currentDirection == waitForLeftTurn ||
  76:main.c        ****     //    currentDirection == waitForRightTurn ||
  77:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 77 0
 224 0018 2D4B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 0BD0     		beq	.L2
  78:main.c        ****         currentDirection == ForwardAfterTurn ||
 228              		.loc 1 78 0 discriminator 1
 229 0020 2B4B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 231              		.loc 1 77 0 discriminator 1
 232 0024 0A2B     		cmp	r3, #10
 233 0026 07D0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 234              		.loc 1 79 0
 235 0028 294B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == ForwardAfterTurn ||
 237              		.loc 1 78 0
 238 002c 032B     		cmp	r3, #3
 239 002e 03D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight) &&
 240              		.loc 1 80 0
 241 0030 274B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 243              		.loc 1 79 0
 244 0034 042B     		cmp	r3, #4
 245 0036 34D1     		bne	.L3
 246              	.L2:
  81:main.c        ****         quadDec2Count != 0) {
 247              		.loc 1 81 0
 248 0038 244B     		ldr	r3, .L4+20
 249 003a 1B68     		ldr	r3, [r3]
  80:main.c        ****         currentDirection == AdjustToTheRight) &&
 250              		.loc 1 80 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 7


 251 003c 002B     		cmp	r3, #0
 252 003e 30D0     		beq	.L3
 253              	.LBB2:
  82:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  83:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 254              		.loc 1 83 0
 255 0040 224B     		ldr	r3, .L4+20
 256 0042 1B68     		ldr	r3, [r3]
 257 0044 002B     		cmp	r3, #0
 258 0046 B8BF     		it	lt
 259 0048 5B42     		rsblt	r3, r3, #0
 260 004a 1846     		mov	r0, r3
 261 004c FFF7FEFF 		bl	__aeabi_i2d
 262 0050 19A3     		adr	r3, .L4
 263 0052 D3E90023 		ldrd	r2, [r3]
 264 0056 FFF7FEFF 		bl	__aeabi_dmul
 265 005a 0346     		mov	r3, r0
 266 005c 0C46     		mov	r4, r1
 267 005e 1846     		mov	r0, r3
 268 0060 2146     		mov	r1, r4
 269 0062 17A3     		adr	r3, .L4+8
 270 0064 D3E90023 		ldrd	r2, [r3]
 271 0068 FFF7FEFF 		bl	__aeabi_dmul
 272 006c 0346     		mov	r3, r0
 273 006e 0C46     		mov	r4, r1
 274 0070 1846     		mov	r0, r3
 275 0072 2146     		mov	r1, r4
 276 0074 4FF00002 		mov	r2, #0
 277 0078 164B     		ldr	r3, .L4+28
 278 007a FFF7FEFF 		bl	__aeabi_ddiv
 279 007e 0346     		mov	r3, r0
 280 0080 0C46     		mov	r4, r1
 281 0082 1846     		mov	r0, r3
 282 0084 2146     		mov	r1, r4
 283 0086 FFF7FEFF 		bl	__aeabi_d2f
 284 008a 0346     		mov	r3, r0
 285 008c 7B60     		str	r3, [r7, #4]	@ float
  84:main.c        ****         
  85:main.c        ****         totalDistance = totalDistance + newDistance;
 286              		.loc 1 85 0
 287 008e 124B     		ldr	r3, .L4+32
 288 0090 1B68     		ldr	r3, [r3]	@ float
 289 0092 7968     		ldr	r1, [r7, #4]	@ float
 290 0094 1846     		mov	r0, r3
 291 0096 FFF7FEFF 		bl	__aeabi_fadd
 292 009a 0346     		mov	r3, r0
 293 009c 1A46     		mov	r2, r3
 294 009e 0E4B     		ldr	r3, .L4+32
 295 00a0 1A60     		str	r2, [r3]	@ float
 296              	.L3:
 297              	.LBE2:
  86:main.c        ****     }
  87:main.c        ****     
  88:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 298              		.loc 1 88 0
 299 00a2 0020     		movs	r0, #0
 300 00a4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 8


  89:main.c        ****     QuadDec_M2_Start(); // restart counter
 301              		.loc 1 89 0
 302 00a8 FFF7FEFF 		bl	QuadDec_M2_Start
  90:main.c        **** 
  91:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 303              		.loc 1 91 0
 304 00ac FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  92:main.c        **** }
 305              		.loc 1 92 0
 306 00b0 00BF     		nop
 307 00b2 0C37     		adds	r7, r7, #12
 308              		.cfi_def_cfa_offset 12
 309 00b4 BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 00b6 90BD     		pop	{r4, r7, pc}
 313              	.L5:
 314              		.align	3
 315              	.L4:
 316 00b8 182D4454 		.word	1413754136
 317 00bc FB210940 		.word	1074340347
 318 00c0 00000000 		.word	0
 319 00c4 00205040 		.word	1078992896
 320 00c8 00000000 		.word	timerInt
 321 00cc 00000000 		.word	quadDec2Count
 322 00d0 00000000 		.word	currentDirection
 323 00d4 00806C40 		.word	1080852480
 324 00d8 00000000 		.word	totalDistance
 325              		.cfi_endproc
 326              	.LFE64:
 327              		.size	speedTimer, .-speedTimer
 328              		.section	.text.S3_DETECTED,"ax",%progbits
 329              		.align	2
 330              		.global	S3_DETECTED
 331              		.thumb
 332              		.thumb_func
 333              		.type	S3_DETECTED, %function
 334              	S3_DETECTED:
 335              	.LFB65:
  93:main.c        **** 
  94:main.c        **** CY_ISR(S3_DETECTED) {
 336              		.loc 1 94 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              		.cfi_def_cfa_offset 4
 343              		.cfi_offset 7, -4
 344 0002 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
  95:main.c        ****     // Sensor has detected WHITE
  96:main.c        ****     s3 = 1; // , Black = 0, White = 1
 346              		.loc 1 96 0
 347 0004 034B     		ldr	r3, .L7
 348 0006 0122     		movs	r2, #1
 349 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 9


  97:main.c        ****     //LED_Write(1u);
  98:main.c        **** }
 350              		.loc 1 98 0
 351 000a 00BF     		nop
 352 000c BD46     		mov	sp, r7
 353              		.cfi_def_cfa_register 13
 354              		@ sp needed
 355 000e 80BC     		pop	{r7}
 356              		.cfi_restore 7
 357              		.cfi_def_cfa_offset 0
 358 0010 7047     		bx	lr
 359              	.L8:
 360 0012 00BF     		.align	2
 361              	.L7:
 362 0014 00000000 		.word	s3
 363              		.cfi_endproc
 364              	.LFE65:
 365              		.size	S3_DETECTED, .-S3_DETECTED
 366              		.section	.text.S4_DETECTED,"ax",%progbits
 367              		.align	2
 368              		.global	S4_DETECTED
 369              		.thumb
 370              		.thumb_func
 371              		.type	S4_DETECTED, %function
 372              	S4_DETECTED:
 373              	.LFB66:
  99:main.c        **** 
 100:main.c        **** CY_ISR(S4_DETECTED) {
 374              		.loc 1 100 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 7, -4
 382 0002 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 101:main.c        ****     // Sensor has detected WHITE
 102:main.c        ****     s4 = 1; // , Black = 0, White = 1
 384              		.loc 1 102 0
 385 0004 034B     		ldr	r3, .L10
 386 0006 0122     		movs	r2, #1
 387 0008 1A70     		strb	r2, [r3]
 103:main.c        ****     //LED_Write(1u);
 104:main.c        **** }
 388              		.loc 1 104 0
 389 000a 00BF     		nop
 390 000c BD46     		mov	sp, r7
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 000e 80BC     		pop	{r7}
 394              		.cfi_restore 7
 395              		.cfi_def_cfa_offset 0
 396 0010 7047     		bx	lr
 397              	.L11:
 398 0012 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 10


 399              	.L10:
 400 0014 00000000 		.word	s4
 401              		.cfi_endproc
 402              	.LFE66:
 403              		.size	S4_DETECTED, .-S4_DETECTED
 404              		.section	.text.S5_DETECTED,"ax",%progbits
 405              		.align	2
 406              		.global	S5_DETECTED
 407              		.thumb
 408              		.thumb_func
 409              		.type	S5_DETECTED, %function
 410              	S5_DETECTED:
 411              	.LFB67:
 105:main.c        **** 
 106:main.c        **** CY_ISR(S5_DETECTED) {
 412              		.loc 1 106 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 107:main.c        ****     // Sensor has detected WHITE
 108:main.c        ****     s5 = 1; // , Black = 0, White = 1
 422              		.loc 1 108 0
 423 0004 034B     		ldr	r3, .L13
 424 0006 0122     		movs	r2, #1
 425 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     //LED_Write(1u);
 110:main.c        **** }
 426              		.loc 1 110 0
 427 000a 00BF     		nop
 428 000c BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 000e 80BC     		pop	{r7}
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 0010 7047     		bx	lr
 435              	.L14:
 436 0012 00BF     		.align	2
 437              	.L13:
 438 0014 00000000 		.word	s5
 439              		.cfi_endproc
 440              	.LFE67:
 441              		.size	S5_DETECTED, .-S5_DETECTED
 442              		.section	.text.S6_DETECTED,"ax",%progbits
 443              		.align	2
 444              		.global	S6_DETECTED
 445              		.thumb
 446              		.thumb_func
 447              		.type	S6_DETECTED, %function
 448              	S6_DETECTED:
 449              	.LFB68:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 11


 111:main.c        **** 
 112:main.c        **** CY_ISR(S6_DETECTED) {
 450              		.loc 1 112 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 113:main.c        ****     // Sensor has detected WHITE
 114:main.c        ****     s6 = 1; // , Black = 0, White = 1
 460              		.loc 1 114 0
 461 0004 034B     		ldr	r3, .L16
 462 0006 0122     		movs	r2, #1
 463 0008 1A70     		strb	r2, [r3]
 115:main.c        ****     //LED_Write(1u);
 116:main.c        **** }
 464              		.loc 1 116 0
 465 000a 00BF     		nop
 466 000c BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 000e 80BC     		pop	{r7}
 470              		.cfi_restore 7
 471              		.cfi_def_cfa_offset 0
 472 0010 7047     		bx	lr
 473              	.L17:
 474 0012 00BF     		.align	2
 475              	.L16:
 476 0014 00000000 		.word	s6
 477              		.cfi_endproc
 478              	.LFE68:
 479              		.size	S6_DETECTED, .-S6_DETECTED
 480              		.section	.text.TIMER_FINISH,"ax",%progbits
 481              		.align	2
 482              		.global	TIMER_FINISH
 483              		.thumb
 484              		.thumb_func
 485              		.type	TIMER_FINISH, %function
 486              	TIMER_FINISH:
 487              	.LFB69:
 117:main.c        **** 
 118:main.c        **** CY_ISR(TIMER_FINISH) {
 488              		.loc 1 118 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492 0000 80B5     		push	{r7, lr}
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 119:main.c        ****     if (currentDirection == Stop) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 12


 498              		.loc 1 119 0
 499 0004 0A4B     		ldr	r3, .L21
 500 0006 1B68     		ldr	r3, [r3]
 501 0008 052B     		cmp	r3, #5
 502 000a 05D1     		bne	.L19
 120:main.c        ****         stopBuffer = stopBuffer + 1;
 503              		.loc 1 120 0
 504 000c 094B     		ldr	r3, .L21+4
 505 000e 1B68     		ldr	r3, [r3]
 506 0010 0133     		adds	r3, r3, #1
 507 0012 084A     		ldr	r2, .L21+4
 508 0014 1360     		str	r3, [r2]
 509 0016 02E0     		b	.L20
 510              	.L19:
 121:main.c        ****     } else {
 122:main.c        ****         stopBuffer = 0;
 511              		.loc 1 122 0
 512 0018 064B     		ldr	r3, .L21+4
 513 001a 0022     		movs	r2, #0
 514 001c 1A60     		str	r2, [r3]
 515              	.L20:
 123:main.c        ****     }
 124:main.c        ****     SetRobotMovement(); 
 516              		.loc 1 124 0
 517 001e FFF7FEFF 		bl	SetRobotMovement
 125:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 518              		.loc 1 125 0
 519 0022 FFF7FEFF 		bl	ResetSensorFlags
 126:main.c        ****     Timer_LED_ReadStatusRegister();
 520              		.loc 1 126 0
 521 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 127:main.c        **** }
 522              		.loc 1 127 0
 523 002a 00BF     		nop
 524 002c 80BD     		pop	{r7, pc}
 525              	.L22:
 526 002e 00BF     		.align	2
 527              	.L21:
 528 0030 00000000 		.word	currentDirection
 529 0034 00000000 		.word	stopBuffer
 530              		.cfi_endproc
 531              	.LFE69:
 532              		.size	TIMER_FINISH, .-TIMER_FINISH
 533              		.section	.text.main,"ax",%progbits
 534              		.align	2
 535              		.global	main
 536              		.thumb
 537              		.thumb_func
 538              		.type	main, %function
 539              	main:
 540              	.LFB70:
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** int main()
 131:main.c        **** {
 541              		.loc 1 131 0
 542              		.cfi_startproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 13


 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 551              		.loc 1 133 0
 552              		.syntax unified
 553              	@ 133 "main.c" 1
 554 0004 62B6     		CPSIE   i
 555              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 556              		.loc 1 134 0
 557              		.thumb
 558              		.syntax unified
 559 0006 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 560              		.loc 1 135 0
 561 000a FFF7FEFF 		bl	init
 136:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 562              		.loc 1 136 0
 563 000e 1A48     		ldr	r0, .L27
 564 0010 FFF7FEFF 		bl	isr_speed_StartEx
 137:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 565              		.loc 1 137 0
 566 0014 1948     		ldr	r0, .L27+4
 567 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 138:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 568              		.loc 1 138 0
 569 001a 1948     		ldr	r0, .L27+8
 570 001c FFF7FEFF 		bl	S3_detected_StartEx
 139:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 571              		.loc 1 139 0
 572 0020 1848     		ldr	r0, .L27+12
 573 0022 FFF7FEFF 		bl	S4_detected_StartEx
 140:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 574              		.loc 1 140 0
 575 0026 1848     		ldr	r0, .L27+16
 576 0028 FFF7FEFF 		bl	S5_detected_StartEx
 141:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 577              		.loc 1 141 0
 578 002c 1748     		ldr	r0, .L27+20
 579 002e FFF7FEFF 		bl	S6_detected_StartEx
 142:main.c        ****     Timer_LED_Start();
 580              		.loc 1 142 0
 581 0032 FFF7FEFF 		bl	Timer_LED_Start
 143:main.c        **** 
 144:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
 582              		.loc 1 144 0
 583 0036 1648     		ldr	r0, .L27+24
 584 0038 FFF7FEFF 		bl	findPath
 145:main.c        ****     GetNextStep();
 585              		.loc 1 145 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 14


 586 003c FFF7FEFF 		bl	GetNextStep
 146:main.c        **** 
 147:main.c        **** // ------USB SETUP ----------------    
 148:main.c        **** #ifdef USE_USB    
 149:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 587              		.loc 1 149 0
 588 0040 0121     		movs	r1, #1
 589 0042 0020     		movs	r0, #0
 590 0044 FFF7FEFF 		bl	USBUART_Start
 150:main.c        **** #endif        
 151:main.c        ****     RF_BT_SELECT_Write(0);
 591              		.loc 1 151 0
 592 0048 0020     		movs	r0, #0
 593 004a FFF7FEFF 		bl	RF_BT_SELECT_Write
 594              	.L26:
 152:main.c        ****     
 153:main.c        ****     //usbPutString("Initialised UART");
 154:main.c        ****     for(;;)
 155:main.c        ****     {
 156:main.c        ****         if(timerInt == 1) {
 595              		.loc 1 156 0
 596 004e 114B     		ldr	r3, .L27+28
 597 0050 1B68     		ldr	r3, [r3]
 598 0052 012B     		cmp	r3, #1
 599 0054 08D1     		bne	.L24
 157:main.c        ****             timerInt = 0;
 600              		.loc 1 157 0
 601 0056 0F4B     		ldr	r3, .L27+28
 602 0058 0022     		movs	r2, #0
 603 005a 1A60     		str	r2, [r3]
 158:main.c        ****             // calculate RPM of M2
 159:main.c        ****             quadCountToRPM(quadDec2Count);
 604              		.loc 1 159 0
 605 005c 0E4B     		ldr	r3, .L27+32
 606 005e 1B68     		ldr	r3, [r3]
 607 0060 9BB2     		uxth	r3, r3
 608 0062 1846     		mov	r0, r3
 609 0064 FFF7FEFF 		bl	quadCountToRPM
 610              	.L24:
 160:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 161:main.c        ****             //usbPutString(buffer);
 162:main.c        ****             //usbPutString(" ");
 163:main.c        ****         }
 164:main.c        ****         //handle_usb();
 165:main.c        ****         if (flag_KB_string == 1)
 611              		.loc 1 165 0
 612 0068 0C4B     		ldr	r3, .L27+36
 613 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 006c 012B     		cmp	r3, #1
 615 006e EED1     		bne	.L26
 166:main.c        ****         {
 167:main.c        ****             //usbPutString("Total Distance: ");
 168:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 169:main.c        ****             //usbPutString(buffer);
 170:main.c        ****             flag_KB_string = 0;
 616              		.loc 1 170 0
 617 0070 0A4B     		ldr	r3, .L27+36
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 15


 618 0072 0022     		movs	r2, #0
 619 0074 1A70     		strb	r2, [r3]
 171:main.c        ****         }           
 172:main.c        ****     }
 620              		.loc 1 172 0
 621 0076 EAE7     		b	.L26
 622              	.L28:
 623              		.align	2
 624              	.L27:
 625 0078 00000000 		.word	speedTimer
 626 007c 00000000 		.word	TIMER_FINISH
 627 0080 00000000 		.word	S3_DETECTED
 628 0084 00000000 		.word	S4_DETECTED
 629 0088 00000000 		.word	S5_DETECTED
 630 008c 00000000 		.word	S6_DETECTED
 631 0090 00000000 		.word	map
 632 0094 00000000 		.word	timerInt
 633 0098 00000000 		.word	quadDec2Count
 634 009c 00000000 		.word	flag_KB_string
 635              		.cfi_endproc
 636              	.LFE70:
 637              		.size	main, .-main
 638              		.global	__aeabi_fmul
 639              		.global	__aeabi_f2iz
 640              		.section	.text.quadCountToRPM,"ax",%progbits
 641              		.align	2
 642              		.global	quadCountToRPM
 643              		.thumb
 644              		.thumb_func
 645              		.type	quadCountToRPM, %function
 646              	quadCountToRPM:
 647              	.LFB71:
 173:main.c        ****     return 0;
 174:main.c        **** }
 175:main.c        **** 
 176:main.c        **** // Calculations
 177:main.c        **** //* ========================================
 178:main.c        **** int16 quadCountToRPM(uint16 count)
 179:main.c        **** {
 648              		.loc 1 179 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 16
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 90B5     		push	{r4, r7, lr}
 653              		.cfi_def_cfa_offset 12
 654              		.cfi_offset 4, -12
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 85B0     		sub	sp, sp, #20
 658              		.cfi_def_cfa_offset 32
 659 0004 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 661 0006 0346     		mov	r3, r0
 662 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 180:main.c        ****     float cps = count/57.00;
 663              		.loc 1 180 0
 664 000a FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 16


 665 000c 1846     		mov	r0, r3
 666 000e FFF7FEFF 		bl	__aeabi_i2d
 667 0012 4FF00002 		mov	r2, #0
 668 0016 0D4B     		ldr	r3, .L31
 669 0018 FFF7FEFF 		bl	__aeabi_ddiv
 670 001c 0346     		mov	r3, r0
 671 001e 0C46     		mov	r4, r1
 672 0020 1846     		mov	r0, r3
 673 0022 2146     		mov	r1, r4
 674 0024 FFF7FEFF 		bl	__aeabi_d2f
 675 0028 0346     		mov	r3, r0
 676 002a FB60     		str	r3, [r7, #12]	@ float
 181:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 677              		.loc 1 181 0
 678 002c 0849     		ldr	r1, .L31+4
 679 002e F868     		ldr	r0, [r7, #12]	@ float
 680 0030 FFF7FEFF 		bl	__aeabi_fmul
 681 0034 0346     		mov	r3, r0
 682 0036 1846     		mov	r0, r3
 683 0038 FFF7FEFF 		bl	__aeabi_f2iz
 684 003c 0346     		mov	r3, r0
 685 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 182:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 183:main.c        ****     return rpm;
 686              		.loc 1 183 0
 687 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 184:main.c        ****     //usbPutString(buffer);
 185:main.c        ****     //usbPutString("rpm ");
 186:main.c        **** }
 688              		.loc 1 186 0
 689 0044 1846     		mov	r0, r3
 690 0046 1437     		adds	r7, r7, #20
 691              		.cfi_def_cfa_offset 12
 692 0048 BD46     		mov	sp, r7
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 004a 90BD     		pop	{r4, r7, pc}
 696              	.L32:
 697              		.align	2
 698              	.L31:
 699 004c 00804C40 		.word	1078755328
 700 0050 00007041 		.word	1097859072
 701              		.cfi_endproc
 702              	.LFE71:
 703              		.size	quadCountToRPM, .-quadCountToRPM
 704              		.section	.text.ResetSensorFlags,"ax",%progbits
 705              		.align	2
 706              		.global	ResetSensorFlags
 707              		.thumb
 708              		.thumb_func
 709              		.type	ResetSensorFlags, %function
 710              	ResetSensorFlags:
 711              	.LFB72:
 187:main.c        **** 
 188:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 189:main.c        **** void ResetSensorFlags() {
 712              		.loc 1 189 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 17


 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 7, -4
 720 0002 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 190:main.c        ****     s3 = 0;
 722              		.loc 1 190 0
 723 0004 074B     		ldr	r3, .L34
 724 0006 0022     		movs	r2, #0
 725 0008 1A70     		strb	r2, [r3]
 191:main.c        ****     s4 = 0;
 726              		.loc 1 191 0
 727 000a 074B     		ldr	r3, .L34+4
 728 000c 0022     		movs	r2, #0
 729 000e 1A70     		strb	r2, [r3]
 192:main.c        ****     s5 = 0;
 730              		.loc 1 192 0
 731 0010 064B     		ldr	r3, .L34+8
 732 0012 0022     		movs	r2, #0
 733 0014 1A70     		strb	r2, [r3]
 193:main.c        ****     s6 = 0;
 734              		.loc 1 193 0
 735 0016 064B     		ldr	r3, .L34+12
 736 0018 0022     		movs	r2, #0
 737 001a 1A70     		strb	r2, [r3]
 194:main.c        **** }
 738              		.loc 1 194 0
 739 001c 00BF     		nop
 740 001e BD46     		mov	sp, r7
 741              		.cfi_def_cfa_register 13
 742              		@ sp needed
 743 0020 80BC     		pop	{r7}
 744              		.cfi_restore 7
 745              		.cfi_def_cfa_offset 0
 746 0022 7047     		bx	lr
 747              	.L35:
 748              		.align	2
 749              	.L34:
 750 0024 00000000 		.word	s3
 751 0028 00000000 		.word	s4
 752 002c 00000000 		.word	s5
 753 0030 00000000 		.word	s6
 754              		.cfi_endproc
 755              	.LFE72:
 756              		.size	ResetSensorFlags, .-ResetSensorFlags
 757              		.global	xBlocksize
 758              		.data
 759 004e 0000     		.align	2
 760              		.type	xBlocksize, %object
 761              		.size	xBlocksize, 4
 762              	xBlocksize:
 763 0050 0000FF42 		.word	1124007936
 764              		.global	yBlocksize
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 18


 765              		.align	2
 766              		.type	yBlocksize, %object
 767              		.size	yBlocksize, 4
 768              	yBlocksize:
 769 0054 0000A042 		.word	1117782016
 770              		.global	currentRow
 771              		.type	currentRow, %object
 772              		.size	currentRow, 1
 773              	currentRow:
 774 0058 01       		.byte	1
 775              		.global	currentCol
 776              		.type	currentCol, %object
 777              		.size	currentCol, 1
 778              	currentCol:
 779 0059 01       		.byte	1
 780              		.section	.text.GetNextStep,"ax",%progbits
 781              		.align	2
 782              		.global	GetNextStep
 783              		.thumb
 784              		.thumb_func
 785              		.type	GetNextStep, %function
 786              	GetNextStep:
 787              	.LFB73:
 195:main.c        **** 
 196:main.c        **** float xBlocksize = 127.5; // 127.5
 197:main.c        **** float yBlocksize = 80; // 80
 198:main.c        **** uint8 currentRow = 1;
 199:main.c        **** uint8 currentCol = 1;
 200:main.c        **** 
 201:main.c        **** enum DirectionState GetNextStep() {
 788              		.loc 1 201 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 8
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793 0000 80B4     		push	{r7}
 794              		.cfi_def_cfa_offset 4
 795              		.cfi_offset 7, -4
 796 0002 83B0     		sub	sp, sp, #12
 797              		.cfi_def_cfa_offset 16
 798 0004 00AF     		add	r7, sp, #0
 799              		.cfi_def_cfa_register 7
 202:main.c        ****     enum DirectionState directionState;
 203:main.c        ****     // Determines robot movement and orientation to follow optimal path
 204:main.c        ****     // enum DirectionState directionState = Stop;
 205:main.c        ****     previousOrientation = currentOrientation;
 800              		.loc 1 205 0
 801 0006 AB4B     		ldr	r3, .L75
 802 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 803 000a AB4B     		ldr	r3, .L75+4
 804 000c 1A70     		strb	r2, [r3]
 206:main.c        ****     
 207:main.c        ****     if(map[currentRow][currentCol] == 9) {
 805              		.loc 1 207 0
 806 000e AB4B     		ldr	r3, .L75+8
 807 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 808 0012 1A46     		mov	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 19


 809 0014 AA4B     		ldr	r3, .L75+12
 810 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 811 0018 1846     		mov	r0, r3
 812 001a AA49     		ldr	r1, .L75+16
 813 001c 1346     		mov	r3, r2
 814 001e DB00     		lsls	r3, r3, #3
 815 0020 1344     		add	r3, r3, r2
 816 0022 5B00     		lsls	r3, r3, #1
 817 0024 1344     		add	r3, r3, r2
 818 0026 0344     		add	r3, r3, r0
 819 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 820 002c 092B     		cmp	r3, #9
 821 002e 03D1     		bne	.L37
 208:main.c        ****         directionState = Stop; // reached target
 822              		.loc 1 208 0
 823 0030 0523     		movs	r3, #5
 824 0032 7B60     		str	r3, [r7, #4]
 209:main.c        ****         return directionState;
 825              		.loc 1 209 0
 826 0034 7B68     		ldr	r3, [r7, #4]
 827 0036 22E2     		b	.L38
 828              	.L37:
 210:main.c        ****     }
 211:main.c        ****     /*
 212:main.c        ****     if (totalDistance >= (yBlocksize)) {
 213:main.c        ****         directionState = Stop;
 214:main.c        ****         return directionState;
 215:main.c        ****     }
 216:main.c        ****     */
 217:main.c        ****         
 218:main.c        ****     switch (previousOrientation) {
 829              		.loc 1 218 0
 830 0038 9F4B     		ldr	r3, .L75+4
 831 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 832 003c 032B     		cmp	r3, #3
 833 003e 00F21482 		bhi	.L70
 834 0042 01A2     		adr	r2, .L41
 835 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 836              		.p2align 2
 837              	.L41:
 838 0048 59000000 		.word	.L40+1
 839 004c 59010000 		.word	.L42+1
 840 0050 59020000 		.word	.L43+1
 841 0054 6D030000 		.word	.L44+1
 842              		.p2align 1
 843              	.L40:
 219:main.c        ****             case Up:
 220:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 844              		.loc 1 220 0
 845 0058 984B     		ldr	r3, .L75+8
 846 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 847 005c 5A1E     		subs	r2, r3, #1
 848 005e 984B     		ldr	r3, .L75+12
 849 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 0062 1846     		mov	r0, r3
 851 0064 9749     		ldr	r1, .L75+16
 852 0066 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 20


 853 0068 DB00     		lsls	r3, r3, #3
 854 006a 1344     		add	r3, r3, r2
 855 006c 5B00     		lsls	r3, r3, #1
 856 006e 1344     		add	r3, r3, r2
 857 0070 0344     		add	r3, r3, r0
 858 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 859 0076 082B     		cmp	r3, #8
 860 0078 10D0     		beq	.L45
 861              		.loc 1 220 0 is_stmt 0 discriminator 1
 862 007a 904B     		ldr	r3, .L75+8
 863 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 007e 5A1E     		subs	r2, r3, #1
 865 0080 8F4B     		ldr	r3, .L75+12
 866 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 867 0084 1846     		mov	r0, r3
 868 0086 8F49     		ldr	r1, .L75+16
 869 0088 1346     		mov	r3, r2
 870 008a DB00     		lsls	r3, r3, #3
 871 008c 1344     		add	r3, r3, r2
 872 008e 5B00     		lsls	r3, r3, #1
 873 0090 1344     		add	r3, r3, r2
 874 0092 0344     		add	r3, r3, r0
 875 0094 51F82330 		ldr	r3, [r1, r3, lsl #2]
 876 0098 092B     		cmp	r3, #9
 877 009a 0BD1     		bne	.L46
 878              	.L45:
 221:main.c        ****                     currentOrientation = Up; 
 879              		.loc 1 221 0 is_stmt 1
 880 009c 854B     		ldr	r3, .L75
 881 009e 0022     		movs	r2, #0
 882 00a0 1A70     		strb	r2, [r3]
 222:main.c        ****                     directionState = Forward;
 883              		.loc 1 222 0
 884 00a2 0023     		movs	r3, #0
 885 00a4 7B60     		str	r3, [r7, #4]
 223:main.c        ****                     currentRow--;// update position
 886              		.loc 1 223 0
 887 00a6 854B     		ldr	r3, .L75+8
 888 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 889 00aa 013B     		subs	r3, r3, #1
 890 00ac DAB2     		uxtb	r2, r3
 891 00ae 834B     		ldr	r3, .L75+8
 892 00b0 1A70     		strb	r2, [r3]
 893 00b2 50E0     		b	.L47
 894              	.L46:
 224:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 895              		.loc 1 224 0
 896 00b4 814B     		ldr	r3, .L75+8
 897 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 898 00b8 1A46     		mov	r2, r3
 899 00ba 814B     		ldr	r3, .L75+12
 900 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 901 00be 591E     		subs	r1, r3, #1
 902 00c0 8048     		ldr	r0, .L75+16
 903 00c2 1346     		mov	r3, r2
 904 00c4 DB00     		lsls	r3, r3, #3
 905 00c6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 21


 906 00c8 5B00     		lsls	r3, r3, #1
 907 00ca 1344     		add	r3, r3, r2
 908 00cc 0B44     		add	r3, r3, r1
 909 00ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 910 00d2 082B     		cmp	r3, #8
 911 00d4 10D0     		beq	.L48
 912              		.loc 1 224 0 is_stmt 0 discriminator 1
 913 00d6 794B     		ldr	r3, .L75+8
 914 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 915 00da 1A46     		mov	r2, r3
 916 00dc 784B     		ldr	r3, .L75+12
 917 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 918 00e0 591E     		subs	r1, r3, #1
 919 00e2 7848     		ldr	r0, .L75+16
 920 00e4 1346     		mov	r3, r2
 921 00e6 DB00     		lsls	r3, r3, #3
 922 00e8 1344     		add	r3, r3, r2
 923 00ea 5B00     		lsls	r3, r3, #1
 924 00ec 1344     		add	r3, r3, r2
 925 00ee 0B44     		add	r3, r3, r1
 926 00f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 927 00f4 092B     		cmp	r3, #9
 928 00f6 05D1     		bne	.L49
 929              	.L48:
 225:main.c        ****                     currentOrientation = Left;
 930              		.loc 1 225 0 is_stmt 1
 931 00f8 6E4B     		ldr	r3, .L75
 932 00fa 0222     		movs	r2, #2
 933 00fc 1A70     		strb	r2, [r3]
 226:main.c        ****                     directionState = waitForLeftTurn;
 934              		.loc 1 226 0
 935 00fe 0923     		movs	r3, #9
 936 0100 7B60     		str	r3, [r7, #4]
 937 0102 28E0     		b	.L47
 938              	.L49:
 227:main.c        ****                     //currentRow--;
 228:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 939              		.loc 1 228 0
 940 0104 6D4B     		ldr	r3, .L75+8
 941 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 0108 1A46     		mov	r2, r3
 943 010a 6D4B     		ldr	r3, .L75+12
 944 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 945 010e 591C     		adds	r1, r3, #1
 946 0110 6C48     		ldr	r0, .L75+16
 947 0112 1346     		mov	r3, r2
 948 0114 DB00     		lsls	r3, r3, #3
 949 0116 1344     		add	r3, r3, r2
 950 0118 5B00     		lsls	r3, r3, #1
 951 011a 1344     		add	r3, r3, r2
 952 011c 0B44     		add	r3, r3, r1
 953 011e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 954 0122 082B     		cmp	r3, #8
 955 0124 11D0     		beq	.L50
 956              		.loc 1 228 0 is_stmt 0 discriminator 1
 957 0126 654B     		ldr	r3, .L75+8
 958 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 22


 959 012a 1A46     		mov	r2, r3
 960 012c 644B     		ldr	r3, .L75+12
 961 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0130 591C     		adds	r1, r3, #1
 963 0132 6448     		ldr	r0, .L75+16
 964 0134 1346     		mov	r3, r2
 965 0136 DB00     		lsls	r3, r3, #3
 966 0138 1344     		add	r3, r3, r2
 967 013a 5B00     		lsls	r3, r3, #1
 968 013c 1344     		add	r3, r3, r2
 969 013e 0B44     		add	r3, r3, r1
 970 0140 50F82330 		ldr	r3, [r0, r3, lsl #2]
 971 0144 092B     		cmp	r3, #9
 972 0146 40F09281 		bne	.L71
 973              	.L50:
 229:main.c        ****                     currentOrientation = Right;
 974              		.loc 1 229 0 is_stmt 1
 975 014a 5A4B     		ldr	r3, .L75
 976 014c 0322     		movs	r2, #3
 977 014e 1A70     		strb	r2, [r3]
 230:main.c        ****                     directionState = waitForRightTurn;
 978              		.loc 1 230 0
 979 0150 0823     		movs	r3, #8
 980 0152 7B60     		str	r3, [r7, #4]
 231:main.c        ****                     //currentRow++; // update position
 232:main.c        ****                 }
 233:main.c        ****                 break;
 981              		.loc 1 233 0
 982 0154 8BE1     		b	.L71
 983              	.L47:
 984 0156 8AE1     		b	.L71
 985              	.L42:
 234:main.c        ****             case Down:
 235:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 986              		.loc 1 235 0
 987 0158 584B     		ldr	r3, .L75+8
 988 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 015c 5A1C     		adds	r2, r3, #1
 990 015e 584B     		ldr	r3, .L75+12
 991 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 0162 1846     		mov	r0, r3
 993 0164 5749     		ldr	r1, .L75+16
 994 0166 1346     		mov	r3, r2
 995 0168 DB00     		lsls	r3, r3, #3
 996 016a 1344     		add	r3, r3, r2
 997 016c 5B00     		lsls	r3, r3, #1
 998 016e 1344     		add	r3, r3, r2
 999 0170 0344     		add	r3, r3, r0
 1000 0172 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1001 0176 082B     		cmp	r3, #8
 1002 0178 10D0     		beq	.L52
 1003              		.loc 1 235 0 is_stmt 0 discriminator 1
 1004 017a 504B     		ldr	r3, .L75+8
 1005 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 017e 5A1C     		adds	r2, r3, #1
 1007 0180 4F4B     		ldr	r3, .L75+12
 1008 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 23


 1009 0184 1846     		mov	r0, r3
 1010 0186 4F49     		ldr	r1, .L75+16
 1011 0188 1346     		mov	r3, r2
 1012 018a DB00     		lsls	r3, r3, #3
 1013 018c 1344     		add	r3, r3, r2
 1014 018e 5B00     		lsls	r3, r3, #1
 1015 0190 1344     		add	r3, r3, r2
 1016 0192 0344     		add	r3, r3, r0
 1017 0194 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1018 0198 092B     		cmp	r3, #9
 1019 019a 0BD1     		bne	.L53
 1020              	.L52:
 236:main.c        ****                     currentOrientation = Down;
 1021              		.loc 1 236 0 is_stmt 1
 1022 019c 454B     		ldr	r3, .L75
 1023 019e 0122     		movs	r2, #1
 1024 01a0 1A70     		strb	r2, [r3]
 237:main.c        ****                     directionState = Forward;
 1025              		.loc 1 237 0
 1026 01a2 0023     		movs	r3, #0
 1027 01a4 7B60     		str	r3, [r7, #4]
 238:main.c        ****                     currentRow++;
 1028              		.loc 1 238 0
 1029 01a6 454B     		ldr	r3, .L75+8
 1030 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1031 01aa 0133     		adds	r3, r3, #1
 1032 01ac DAB2     		uxtb	r2, r3
 1033 01ae 434B     		ldr	r3, .L75+8
 1034 01b0 1A70     		strb	r2, [r3]
 1035 01b2 50E0     		b	.L54
 1036              	.L53:
 239:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 1037              		.loc 1 239 0
 1038 01b4 414B     		ldr	r3, .L75+8
 1039 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 01b8 1A46     		mov	r2, r3
 1041 01ba 414B     		ldr	r3, .L75+12
 1042 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1043 01be 591E     		subs	r1, r3, #1
 1044 01c0 4048     		ldr	r0, .L75+16
 1045 01c2 1346     		mov	r3, r2
 1046 01c4 DB00     		lsls	r3, r3, #3
 1047 01c6 1344     		add	r3, r3, r2
 1048 01c8 5B00     		lsls	r3, r3, #1
 1049 01ca 1344     		add	r3, r3, r2
 1050 01cc 0B44     		add	r3, r3, r1
 1051 01ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1052 01d2 082B     		cmp	r3, #8
 1053 01d4 10D0     		beq	.L55
 1054              		.loc 1 239 0 is_stmt 0 discriminator 1
 1055 01d6 394B     		ldr	r3, .L75+8
 1056 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1057 01da 1A46     		mov	r2, r3
 1058 01dc 384B     		ldr	r3, .L75+12
 1059 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 01e0 591E     		subs	r1, r3, #1
 1061 01e2 3848     		ldr	r0, .L75+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 24


 1062 01e4 1346     		mov	r3, r2
 1063 01e6 DB00     		lsls	r3, r3, #3
 1064 01e8 1344     		add	r3, r3, r2
 1065 01ea 5B00     		lsls	r3, r3, #1
 1066 01ec 1344     		add	r3, r3, r2
 1067 01ee 0B44     		add	r3, r3, r1
 1068 01f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1069 01f4 092B     		cmp	r3, #9
 1070 01f6 05D1     		bne	.L56
 1071              	.L55:
 240:main.c        ****                     currentOrientation = Left;
 1072              		.loc 1 240 0 is_stmt 1
 1073 01f8 2E4B     		ldr	r3, .L75
 1074 01fa 0222     		movs	r2, #2
 1075 01fc 1A70     		strb	r2, [r3]
 241:main.c        ****                     directionState = waitForRightTurn;
 1076              		.loc 1 241 0
 1077 01fe 0823     		movs	r3, #8
 1078 0200 7B60     		str	r3, [r7, #4]
 1079 0202 28E0     		b	.L54
 1080              	.L56:
 242:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 1081              		.loc 1 242 0
 1082 0204 2D4B     		ldr	r3, .L75+8
 1083 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1084 0208 1A46     		mov	r2, r3
 1085 020a 2D4B     		ldr	r3, .L75+12
 1086 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 020e 591C     		adds	r1, r3, #1
 1088 0210 2C48     		ldr	r0, .L75+16
 1089 0212 1346     		mov	r3, r2
 1090 0214 DB00     		lsls	r3, r3, #3
 1091 0216 1344     		add	r3, r3, r2
 1092 0218 5B00     		lsls	r3, r3, #1
 1093 021a 1344     		add	r3, r3, r2
 1094 021c 0B44     		add	r3, r3, r1
 1095 021e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1096 0222 082B     		cmp	r3, #8
 1097 0224 11D0     		beq	.L57
 1098              		.loc 1 242 0 is_stmt 0 discriminator 1
 1099 0226 254B     		ldr	r3, .L75+8
 1100 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 022a 1A46     		mov	r2, r3
 1102 022c 244B     		ldr	r3, .L75+12
 1103 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 0230 591C     		adds	r1, r3, #1
 1105 0232 2448     		ldr	r0, .L75+16
 1106 0234 1346     		mov	r3, r2
 1107 0236 DB00     		lsls	r3, r3, #3
 1108 0238 1344     		add	r3, r3, r2
 1109 023a 5B00     		lsls	r3, r3, #1
 1110 023c 1344     		add	r3, r3, r2
 1111 023e 0B44     		add	r3, r3, r1
 1112 0240 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1113 0244 092B     		cmp	r3, #9
 1114 0246 40F01481 		bne	.L72
 1115              	.L57:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 25


 243:main.c        ****                     currentOrientation = Right;
 1116              		.loc 1 243 0 is_stmt 1
 1117 024a 1A4B     		ldr	r3, .L75
 1118 024c 0322     		movs	r2, #3
 1119 024e 1A70     		strb	r2, [r3]
 244:main.c        ****                     directionState = waitForLeftTurn;
 1120              		.loc 1 244 0
 1121 0250 0923     		movs	r3, #9
 1122 0252 7B60     		str	r3, [r7, #4]
 245:main.c        ****                 }
 246:main.c        ****                 break;
 1123              		.loc 1 246 0
 1124 0254 0DE1     		b	.L72
 1125              	.L54:
 1126 0256 0CE1     		b	.L72
 1127              	.L43:
 247:main.c        ****             case Left:
 248:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 1128              		.loc 1 248 0
 1129 0258 184B     		ldr	r3, .L75+8
 1130 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1131 025c 1A46     		mov	r2, r3
 1132 025e 184B     		ldr	r3, .L75+12
 1133 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1134 0262 591E     		subs	r1, r3, #1
 1135 0264 1748     		ldr	r0, .L75+16
 1136 0266 1346     		mov	r3, r2
 1137 0268 DB00     		lsls	r3, r3, #3
 1138 026a 1344     		add	r3, r3, r2
 1139 026c 5B00     		lsls	r3, r3, #1
 1140 026e 1344     		add	r3, r3, r2
 1141 0270 0B44     		add	r3, r3, r1
 1142 0272 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1143 0276 082B     		cmp	r3, #8
 1144 0278 10D0     		beq	.L58
 1145              		.loc 1 248 0 is_stmt 0 discriminator 1
 1146 027a 104B     		ldr	r3, .L75+8
 1147 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1148 027e 1A46     		mov	r2, r3
 1149 0280 0F4B     		ldr	r3, .L75+12
 1150 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 0284 591E     		subs	r1, r3, #1
 1152 0286 0F48     		ldr	r0, .L75+16
 1153 0288 1346     		mov	r3, r2
 1154 028a DB00     		lsls	r3, r3, #3
 1155 028c 1344     		add	r3, r3, r2
 1156 028e 5B00     		lsls	r3, r3, #1
 1157 0290 1344     		add	r3, r3, r2
 1158 0292 0B44     		add	r3, r3, r1
 1159 0294 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1160 0298 092B     		cmp	r3, #9
 1161 029a 15D1     		bne	.L59
 1162              	.L58:
 249:main.c        ****                     currentOrientation = Left;
 1163              		.loc 1 249 0 is_stmt 1
 1164 029c 054B     		ldr	r3, .L75
 1165 029e 0222     		movs	r2, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 26


 1166 02a0 1A70     		strb	r2, [r3]
 250:main.c        ****                     directionState = Forward;
 1167              		.loc 1 250 0
 1168 02a2 0023     		movs	r3, #0
 1169 02a4 7B60     		str	r3, [r7, #4]
 251:main.c        ****                     currentCol--; // update position
 1170              		.loc 1 251 0
 1171 02a6 064B     		ldr	r3, .L75+12
 1172 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1173 02aa 013B     		subs	r3, r3, #1
 1174 02ac DAB2     		uxtb	r2, r3
 1175 02ae 044B     		ldr	r3, .L75+12
 1176 02b0 1A70     		strb	r2, [r3]
 1177 02b2 5AE0     		b	.L60
 1178              	.L76:
 1179              		.align	2
 1180              	.L75:
 1181 02b4 00000000 		.word	currentOrientation
 1182 02b8 00000000 		.word	previousOrientation
 1183 02bc 00000000 		.word	currentRow
 1184 02c0 00000000 		.word	currentCol
 1185 02c4 00000000 		.word	map
 1186              	.L59:
 252:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1187              		.loc 1 252 0
 1188 02c8 6F4B     		ldr	r3, .L77
 1189 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 02cc 5A1E     		subs	r2, r3, #1
 1191 02ce 6F4B     		ldr	r3, .L77+4
 1192 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 02d2 1846     		mov	r0, r3
 1194 02d4 6E49     		ldr	r1, .L77+8
 1195 02d6 1346     		mov	r3, r2
 1196 02d8 DB00     		lsls	r3, r3, #3
 1197 02da 1344     		add	r3, r3, r2
 1198 02dc 5B00     		lsls	r3, r3, #1
 1199 02de 1344     		add	r3, r3, r2
 1200 02e0 0344     		add	r3, r3, r0
 1201 02e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1202 02e6 082B     		cmp	r3, #8
 1203 02e8 10D0     		beq	.L61
 1204              		.loc 1 252 0 is_stmt 0 discriminator 1
 1205 02ea 674B     		ldr	r3, .L77
 1206 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 02ee 5A1E     		subs	r2, r3, #1
 1208 02f0 664B     		ldr	r3, .L77+4
 1209 02f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1210 02f4 1846     		mov	r0, r3
 1211 02f6 6649     		ldr	r1, .L77+8
 1212 02f8 1346     		mov	r3, r2
 1213 02fa DB00     		lsls	r3, r3, #3
 1214 02fc 1344     		add	r3, r3, r2
 1215 02fe 5B00     		lsls	r3, r3, #1
 1216 0300 1344     		add	r3, r3, r2
 1217 0302 0344     		add	r3, r3, r0
 1218 0304 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1219 0308 092B     		cmp	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 27


 1220 030a 05D1     		bne	.L62
 1221              	.L61:
 253:main.c        ****                     currentOrientation = Up;
 1222              		.loc 1 253 0 is_stmt 1
 1223 030c 614B     		ldr	r3, .L77+12
 1224 030e 0022     		movs	r2, #0
 1225 0310 1A70     		strb	r2, [r3]
 254:main.c        ****                     directionState = waitForRightTurn;
 1226              		.loc 1 254 0
 1227 0312 0823     		movs	r3, #8
 1228 0314 7B60     		str	r3, [r7, #4]
 1229 0316 28E0     		b	.L60
 1230              	.L62:
 255:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1231              		.loc 1 255 0
 1232 0318 5B4B     		ldr	r3, .L77
 1233 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 031c 5A1C     		adds	r2, r3, #1
 1235 031e 5B4B     		ldr	r3, .L77+4
 1236 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0322 1846     		mov	r0, r3
 1238 0324 5A49     		ldr	r1, .L77+8
 1239 0326 1346     		mov	r3, r2
 1240 0328 DB00     		lsls	r3, r3, #3
 1241 032a 1344     		add	r3, r3, r2
 1242 032c 5B00     		lsls	r3, r3, #1
 1243 032e 1344     		add	r3, r3, r2
 1244 0330 0344     		add	r3, r3, r0
 1245 0332 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1246 0336 082B     		cmp	r3, #8
 1247 0338 11D0     		beq	.L63
 1248              		.loc 1 255 0 is_stmt 0 discriminator 1
 1249 033a 534B     		ldr	r3, .L77
 1250 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 033e 5A1C     		adds	r2, r3, #1
 1252 0340 524B     		ldr	r3, .L77+4
 1253 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 0344 1846     		mov	r0, r3
 1255 0346 5249     		ldr	r1, .L77+8
 1256 0348 1346     		mov	r3, r2
 1257 034a DB00     		lsls	r3, r3, #3
 1258 034c 1344     		add	r3, r3, r2
 1259 034e 5B00     		lsls	r3, r3, #1
 1260 0350 1344     		add	r3, r3, r2
 1261 0352 0344     		add	r3, r3, r0
 1262 0354 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1263 0358 092B     		cmp	r3, #9
 1264 035a 40F08C80 		bne	.L73
 1265              	.L63:
 256:main.c        ****                     currentOrientation = Down;
 1266              		.loc 1 256 0 is_stmt 1
 1267 035e 4D4B     		ldr	r3, .L77+12
 1268 0360 0122     		movs	r2, #1
 1269 0362 1A70     		strb	r2, [r3]
 257:main.c        ****                     directionState = waitForLeftTurn;
 1270              		.loc 1 257 0
 1271 0364 0923     		movs	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 28


 1272 0366 7B60     		str	r3, [r7, #4]
 258:main.c        ****                 }
 259:main.c        ****                 break;
 1273              		.loc 1 259 0
 1274 0368 85E0     		b	.L73
 1275              	.L60:
 1276 036a 84E0     		b	.L73
 1277              	.L44:
 260:main.c        ****             case Right:
 261:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 1278              		.loc 1 261 0
 1279 036c 464B     		ldr	r3, .L77
 1280 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1281 0370 1A46     		mov	r2, r3
 1282 0372 464B     		ldr	r3, .L77+4
 1283 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 0376 591C     		adds	r1, r3, #1
 1285 0378 4548     		ldr	r0, .L77+8
 1286 037a 1346     		mov	r3, r2
 1287 037c DB00     		lsls	r3, r3, #3
 1288 037e 1344     		add	r3, r3, r2
 1289 0380 5B00     		lsls	r3, r3, #1
 1290 0382 1344     		add	r3, r3, r2
 1291 0384 0B44     		add	r3, r3, r1
 1292 0386 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1293 038a 082B     		cmp	r3, #8
 1294 038c 10D0     		beq	.L64
 1295              		.loc 1 261 0 is_stmt 0 discriminator 1
 1296 038e 3E4B     		ldr	r3, .L77
 1297 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1298 0392 1A46     		mov	r2, r3
 1299 0394 3D4B     		ldr	r3, .L77+4
 1300 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 0398 591C     		adds	r1, r3, #1
 1302 039a 3D48     		ldr	r0, .L77+8
 1303 039c 1346     		mov	r3, r2
 1304 039e DB00     		lsls	r3, r3, #3
 1305 03a0 1344     		add	r3, r3, r2
 1306 03a2 5B00     		lsls	r3, r3, #1
 1307 03a4 1344     		add	r3, r3, r2
 1308 03a6 0B44     		add	r3, r3, r1
 1309 03a8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1310 03ac 092B     		cmp	r3, #9
 1311 03ae 0BD1     		bne	.L65
 1312              	.L64:
 262:main.c        ****                     currentOrientation = Right;
 1313              		.loc 1 262 0 is_stmt 1
 1314 03b0 384B     		ldr	r3, .L77+12
 1315 03b2 0322     		movs	r2, #3
 1316 03b4 1A70     		strb	r2, [r3]
 263:main.c        ****                     directionState = Forward;
 1317              		.loc 1 263 0
 1318 03b6 0023     		movs	r3, #0
 1319 03b8 7B60     		str	r3, [r7, #4]
 264:main.c        ****                     currentCol++; // update position
 1320              		.loc 1 264 0
 1321 03ba 344B     		ldr	r3, .L77+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 29


 1322 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1323 03be 0133     		adds	r3, r3, #1
 1324 03c0 DAB2     		uxtb	r2, r3
 1325 03c2 324B     		ldr	r3, .L77+4
 1326 03c4 1A70     		strb	r2, [r3]
 1327 03c6 4FE0     		b	.L66
 1328              	.L65:
 265:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1329              		.loc 1 265 0
 1330 03c8 2F4B     		ldr	r3, .L77
 1331 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 03cc 5A1E     		subs	r2, r3, #1
 1333 03ce 2F4B     		ldr	r3, .L77+4
 1334 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 03d2 1846     		mov	r0, r3
 1336 03d4 2E49     		ldr	r1, .L77+8
 1337 03d6 1346     		mov	r3, r2
 1338 03d8 DB00     		lsls	r3, r3, #3
 1339 03da 1344     		add	r3, r3, r2
 1340 03dc 5B00     		lsls	r3, r3, #1
 1341 03de 1344     		add	r3, r3, r2
 1342 03e0 0344     		add	r3, r3, r0
 1343 03e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1344 03e6 082B     		cmp	r3, #8
 1345 03e8 10D0     		beq	.L67
 1346              		.loc 1 265 0 is_stmt 0 discriminator 1
 1347 03ea 274B     		ldr	r3, .L77
 1348 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1349 03ee 5A1E     		subs	r2, r3, #1
 1350 03f0 264B     		ldr	r3, .L77+4
 1351 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 03f4 1846     		mov	r0, r3
 1353 03f6 2649     		ldr	r1, .L77+8
 1354 03f8 1346     		mov	r3, r2
 1355 03fa DB00     		lsls	r3, r3, #3
 1356 03fc 1344     		add	r3, r3, r2
 1357 03fe 5B00     		lsls	r3, r3, #1
 1358 0400 1344     		add	r3, r3, r2
 1359 0402 0344     		add	r3, r3, r0
 1360 0404 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1361 0408 092B     		cmp	r3, #9
 1362 040a 05D1     		bne	.L68
 1363              	.L67:
 266:main.c        ****                     currentOrientation = Up;
 1364              		.loc 1 266 0 is_stmt 1
 1365 040c 214B     		ldr	r3, .L77+12
 1366 040e 0022     		movs	r2, #0
 1367 0410 1A70     		strb	r2, [r3]
 267:main.c        ****                     directionState = waitForLeftTurn;
 1368              		.loc 1 267 0
 1369 0412 0923     		movs	r3, #9
 1370 0414 7B60     		str	r3, [r7, #4]
 1371 0416 27E0     		b	.L66
 1372              	.L68:
 268:main.c        ****                     //currentCol++; // update position
 269:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1373              		.loc 1 269 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 30


 1374 0418 1B4B     		ldr	r3, .L77
 1375 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 041c 5A1C     		adds	r2, r3, #1
 1377 041e 1B4B     		ldr	r3, .L77+4
 1378 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379 0422 1846     		mov	r0, r3
 1380 0424 1A49     		ldr	r1, .L77+8
 1381 0426 1346     		mov	r3, r2
 1382 0428 DB00     		lsls	r3, r3, #3
 1383 042a 1344     		add	r3, r3, r2
 1384 042c 5B00     		lsls	r3, r3, #1
 1385 042e 1344     		add	r3, r3, r2
 1386 0430 0344     		add	r3, r3, r0
 1387 0432 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1388 0436 082B     		cmp	r3, #8
 1389 0438 10D0     		beq	.L69
 1390              		.loc 1 269 0 is_stmt 0 discriminator 1
 1391 043a 134B     		ldr	r3, .L77
 1392 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1393 043e 5A1C     		adds	r2, r3, #1
 1394 0440 124B     		ldr	r3, .L77+4
 1395 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 0444 1846     		mov	r0, r3
 1397 0446 1249     		ldr	r1, .L77+8
 1398 0448 1346     		mov	r3, r2
 1399 044a DB00     		lsls	r3, r3, #3
 1400 044c 1344     		add	r3, r3, r2
 1401 044e 5B00     		lsls	r3, r3, #1
 1402 0450 1344     		add	r3, r3, r2
 1403 0452 0344     		add	r3, r3, r0
 1404 0454 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1405 0458 092B     		cmp	r3, #9
 1406 045a 0ED1     		bne	.L74
 1407              	.L69:
 270:main.c        ****                     currentOrientation = Down;
 1408              		.loc 1 270 0 is_stmt 1
 1409 045c 0D4B     		ldr	r3, .L77+12
 1410 045e 0122     		movs	r2, #1
 1411 0460 1A70     		strb	r2, [r3]
 271:main.c        ****                     directionState = waitForRightTurn;
 1412              		.loc 1 271 0
 1413 0462 0823     		movs	r3, #8
 1414 0464 7B60     		str	r3, [r7, #4]
 272:main.c        ****                     //currentCol--; // update position
 273:main.c        ****                 }
 274:main.c        ****                 break;
 1415              		.loc 1 274 0
 1416 0466 08E0     		b	.L74
 1417              	.L66:
 1418 0468 07E0     		b	.L74
 1419              	.L70:
 275:main.c        ****             default:
 276:main.c        ****                 break;
 1420              		.loc 1 276 0
 1421 046a 00BF     		nop
 1422 046c 06E0     		b	.L51
 1423              	.L71:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 31


 233:main.c        ****             case Down:
 1424              		.loc 1 233 0
 1425 046e 00BF     		nop
 1426 0470 04E0     		b	.L51
 1427              	.L72:
 246:main.c        ****             case Left:
 1428              		.loc 1 246 0
 1429 0472 00BF     		nop
 1430 0474 02E0     		b	.L51
 1431              	.L73:
 259:main.c        ****             case Right:
 1432              		.loc 1 259 0
 1433 0476 00BF     		nop
 1434 0478 00E0     		b	.L51
 1435              	.L74:
 274:main.c        ****             default:
 1436              		.loc 1 274 0
 1437 047a 00BF     		nop
 1438              	.L51:
 277:main.c        ****         }
 278:main.c        ****     
 279:main.c        ****     return directionState;
 1439              		.loc 1 279 0
 1440 047c 7B68     		ldr	r3, [r7, #4]
 1441              	.L38:
 280:main.c        **** }
 1442              		.loc 1 280 0
 1443 047e 1846     		mov	r0, r3
 1444 0480 0C37     		adds	r7, r7, #12
 1445              		.cfi_def_cfa_offset 4
 1446 0482 BD46     		mov	sp, r7
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 0484 80BC     		pop	{r7}
 1450              		.cfi_restore 7
 1451              		.cfi_def_cfa_offset 0
 1452 0486 7047     		bx	lr
 1453              	.L78:
 1454              		.align	2
 1455              	.L77:
 1456 0488 00000000 		.word	currentRow
 1457 048c 00000000 		.word	currentCol
 1458 0490 00000000 		.word	map
 1459 0494 00000000 		.word	currentOrientation
 1460              		.cfi_endproc
 1461              	.LFE73:
 1462              		.size	GetNextStep, .-GetNextStep
 1463              		.global	directionBeforeStop
 1464              		.bss
 1465              		.align	2
 1466              		.type	directionBeforeStop, %object
 1467              		.size	directionBeforeStop, 4
 1468              	directionBeforeStop:
 1469 0030 00000000 		.space	4
 1470              		.section	.text.RecheckPosition,"ax",%progbits
 1471              		.align	2
 1472              		.global	RecheckPosition
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 32


 1473              		.thumb
 1474              		.thumb_func
 1475              		.type	RecheckPosition, %function
 1476              	RecheckPosition:
 1477              	.LFB74:
 281:main.c        **** 
 282:main.c        **** enum DirectionState directionBeforeStop = Forward;
 283:main.c        **** 
 284:main.c        **** enum DirectionState RecheckPosition() {
 1478              		.loc 1 284 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 80B5     		push	{r7, lr}
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 7, -8
 1485              		.cfi_offset 14, -4
 1486 0002 00AF     		add	r7, sp, #0
 1487              		.cfi_def_cfa_register 7
 285:main.c        ****     // Called when we are at intersection/ turn
 286:main.c        ****     // Check our position on the map and see if it aligns with the junction
 287:main.c        ****     
 288:main.c        ****     // CHECK FOR PATH
 289:main.c        ****     if (currentOrientation == Up || currentOrientation == Down) { // check left right for path
 1488              		.loc 1 289 0
 1489 0004 544B     		ldr	r3, .L89
 1490 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 0008 002B     		cmp	r3, #0
 1492 000a 03D0     		beq	.L80
 1493              		.loc 1 289 0 is_stmt 0 discriminator 1
 1494 000c 524B     		ldr	r3, .L89
 1495 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1496 0010 012B     		cmp	r3, #1
 1497 0012 4AD1     		bne	.L81
 1498              	.L80:
 290:main.c        ****         if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol - 1] == 8 ||
 1499              		.loc 1 290 0 is_stmt 1
 1500 0014 514B     		ldr	r3, .L89+4
 1501 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0018 1A46     		mov	r2, r3
 1503 001a 514B     		ldr	r3, .L89+8
 1504 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 001e 591C     		adds	r1, r3, #1
 1506 0020 5048     		ldr	r0, .L89+12
 1507 0022 1346     		mov	r3, r2
 1508 0024 DB00     		lsls	r3, r3, #3
 1509 0026 1344     		add	r3, r3, r2
 1510 0028 5B00     		lsls	r3, r3, #1
 1511 002a 1344     		add	r3, r3, r2
 1512 002c 0B44     		add	r3, r3, r1
 1513 002e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1514 0032 082B     		cmp	r3, #8
 1515 0034 32D0     		beq	.L82
 1516              		.loc 1 290 0 is_stmt 0 discriminator 1
 1517 0036 494B     		ldr	r3, .L89+4
 1518 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 003a 1A46     		mov	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 33


 1520 003c 484B     		ldr	r3, .L89+8
 1521 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 0040 591E     		subs	r1, r3, #1
 1523 0042 4848     		ldr	r0, .L89+12
 1524 0044 1346     		mov	r3, r2
 1525 0046 DB00     		lsls	r3, r3, #3
 1526 0048 1344     		add	r3, r3, r2
 1527 004a 5B00     		lsls	r3, r3, #1
 1528 004c 1344     		add	r3, r3, r2
 1529 004e 0B44     		add	r3, r3, r1
 1530 0050 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1531 0054 082B     		cmp	r3, #8
 1532 0056 21D0     		beq	.L82
 291:main.c        ****             map[currentRow][currentCol + 1] == 9 || map[currentRow][currentCol - 1] == 9) {
 1533              		.loc 1 291 0 is_stmt 1 discriminator 2
 1534 0058 404B     		ldr	r3, .L89+4
 1535 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 005c 1A46     		mov	r2, r3
 1537 005e 404B     		ldr	r3, .L89+8
 1538 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1539 0062 591C     		adds	r1, r3, #1
 1540 0064 3F48     		ldr	r0, .L89+12
 1541 0066 1346     		mov	r3, r2
 1542 0068 DB00     		lsls	r3, r3, #3
 1543 006a 1344     		add	r3, r3, r2
 1544 006c 5B00     		lsls	r3, r3, #1
 1545 006e 1344     		add	r3, r3, r2
 1546 0070 0B44     		add	r3, r3, r1
 1547 0072 50F82330 		ldr	r3, [r0, r3, lsl #2]
 290:main.c        ****         if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol - 1] == 8 ||
 1548              		.loc 1 290 0 discriminator 2
 1549 0076 092B     		cmp	r3, #9
 1550 0078 10D0     		beq	.L82
 1551              		.loc 1 291 0
 1552 007a 384B     		ldr	r3, .L89+4
 1553 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 007e 1A46     		mov	r2, r3
 1555 0080 374B     		ldr	r3, .L89+8
 1556 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0084 591E     		subs	r1, r3, #1
 1558 0086 3748     		ldr	r0, .L89+12
 1559 0088 1346     		mov	r3, r2
 1560 008a DB00     		lsls	r3, r3, #3
 1561 008c 1344     		add	r3, r3, r2
 1562 008e 5B00     		lsls	r3, r3, #1
 1563 0090 1344     		add	r3, r3, r2
 1564 0092 0B44     		add	r3, r3, r1
 1565 0094 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1566 0098 092B     		cmp	r3, #9
 1567 009a 02D1     		bne	.L83
 1568              	.L82:
 292:main.c        ****             return directionBeforeStop;// if correct location, break
 1569              		.loc 1 292 0
 1570 009c 324B     		ldr	r3, .L89+16
 1571 009e 1B68     		ldr	r3, [r3]
 1572 00a0 58E0     		b	.L84
 1573              	.L83:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 34


 293:main.c        ****         } else {
 294:main.c        ****             return GetNextStep(); // need to increment location
 1574              		.loc 1 294 0
 1575 00a2 FFF7FEFF 		bl	GetNextStep
 1576 00a6 0346     		mov	r3, r0
 1577 00a8 54E0     		b	.L84
 1578              	.L81:
 295:main.c        ****         }
 296:main.c        ****     }
 297:main.c        ****     else if (currentOrientation == Left || currentOrientation == Right) { // check up down for path
 1579              		.loc 1 297 0
 1580 00aa 2B4B     		ldr	r3, .L89
 1581 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 00ae 022B     		cmp	r3, #2
 1583 00b0 03D0     		beq	.L85
 1584              		.loc 1 297 0 is_stmt 0 discriminator 1
 1585 00b2 294B     		ldr	r3, .L89
 1586 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 00b6 032B     		cmp	r3, #3
 1588 00b8 4AD1     		bne	.L86
 1589              	.L85:
 298:main.c        ****         if(map[currentRow + 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 8 ||
 1590              		.loc 1 298 0 is_stmt 1
 1591 00ba 284B     		ldr	r3, .L89+4
 1592 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1593 00be 5A1C     		adds	r2, r3, #1
 1594 00c0 274B     		ldr	r3, .L89+8
 1595 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 00c4 1846     		mov	r0, r3
 1597 00c6 2749     		ldr	r1, .L89+12
 1598 00c8 1346     		mov	r3, r2
 1599 00ca DB00     		lsls	r3, r3, #3
 1600 00cc 1344     		add	r3, r3, r2
 1601 00ce 5B00     		lsls	r3, r3, #1
 1602 00d0 1344     		add	r3, r3, r2
 1603 00d2 0344     		add	r3, r3, r0
 1604 00d4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1605 00d8 082B     		cmp	r3, #8
 1606 00da 32D0     		beq	.L87
 1607              		.loc 1 298 0 is_stmt 0 discriminator 1
 1608 00dc 1F4B     		ldr	r3, .L89+4
 1609 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 00e0 5A1E     		subs	r2, r3, #1
 1611 00e2 1F4B     		ldr	r3, .L89+8
 1612 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1613 00e6 1846     		mov	r0, r3
 1614 00e8 1E49     		ldr	r1, .L89+12
 1615 00ea 1346     		mov	r3, r2
 1616 00ec DB00     		lsls	r3, r3, #3
 1617 00ee 1344     		add	r3, r3, r2
 1618 00f0 5B00     		lsls	r3, r3, #1
 1619 00f2 1344     		add	r3, r3, r2
 1620 00f4 0344     		add	r3, r3, r0
 1621 00f6 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1622 00fa 082B     		cmp	r3, #8
 1623 00fc 21D0     		beq	.L87
 299:main.c        ****             map[currentRow + 1][currentCol] == 9 || map[currentRow - 1][currentCol] == 9) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 35


 1624              		.loc 1 299 0 is_stmt 1 discriminator 2
 1625 00fe 174B     		ldr	r3, .L89+4
 1626 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1627 0102 5A1C     		adds	r2, r3, #1
 1628 0104 164B     		ldr	r3, .L89+8
 1629 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 0108 1846     		mov	r0, r3
 1631 010a 1649     		ldr	r1, .L89+12
 1632 010c 1346     		mov	r3, r2
 1633 010e DB00     		lsls	r3, r3, #3
 1634 0110 1344     		add	r3, r3, r2
 1635 0112 5B00     		lsls	r3, r3, #1
 1636 0114 1344     		add	r3, r3, r2
 1637 0116 0344     		add	r3, r3, r0
 1638 0118 51F82330 		ldr	r3, [r1, r3, lsl #2]
 298:main.c        ****         if(map[currentRow + 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 8 ||
 1639              		.loc 1 298 0 discriminator 2
 1640 011c 092B     		cmp	r3, #9
 1641 011e 10D0     		beq	.L87
 1642              		.loc 1 299 0
 1643 0120 0E4B     		ldr	r3, .L89+4
 1644 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1645 0124 5A1E     		subs	r2, r3, #1
 1646 0126 0E4B     		ldr	r3, .L89+8
 1647 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1648 012a 1846     		mov	r0, r3
 1649 012c 0D49     		ldr	r1, .L89+12
 1650 012e 1346     		mov	r3, r2
 1651 0130 DB00     		lsls	r3, r3, #3
 1652 0132 1344     		add	r3, r3, r2
 1653 0134 5B00     		lsls	r3, r3, #1
 1654 0136 1344     		add	r3, r3, r2
 1655 0138 0344     		add	r3, r3, r0
 1656 013a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1657 013e 092B     		cmp	r3, #9
 1658 0140 02D1     		bne	.L88
 1659              	.L87:
 300:main.c        ****             return directionBeforeStop;// if correct location, break
 1660              		.loc 1 300 0
 1661 0142 094B     		ldr	r3, .L89+16
 1662 0144 1B68     		ldr	r3, [r3]
 1663 0146 05E0     		b	.L84
 1664              	.L88:
 301:main.c        ****         } else {
 302:main.c        ****             return GetNextStep(); // need to increment location
 1665              		.loc 1 302 0
 1666 0148 FFF7FEFF 		bl	GetNextStep
 1667 014c 0346     		mov	r3, r0
 1668 014e 01E0     		b	.L84
 1669              	.L86:
 303:main.c        ****         }
 304:main.c        ****     }
 305:main.c        ****     
 306:main.c        ****     return currentDirection;
 1670              		.loc 1 306 0
 1671 0150 064B     		ldr	r3, .L89+20
 1672 0152 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 36


 1673              	.L84:
 307:main.c        **** }
 1674              		.loc 1 307 0
 1675 0154 1846     		mov	r0, r3
 1676 0156 80BD     		pop	{r7, pc}
 1677              	.L90:
 1678              		.align	2
 1679              	.L89:
 1680 0158 00000000 		.word	currentOrientation
 1681 015c 00000000 		.word	currentRow
 1682 0160 00000000 		.word	currentCol
 1683 0164 00000000 		.word	map
 1684 0168 00000000 		.word	directionBeforeStop
 1685 016c 00000000 		.word	currentDirection
 1686              		.cfi_endproc
 1687              	.LFE74:
 1688              		.size	RecheckPosition, .-RecheckPosition
 1689              		.global	stoppedAfterTurn
 1690              		.bss
 1691              		.type	stoppedAfterTurn, %object
 1692              		.size	stoppedAfterTurn, 1
 1693              	stoppedAfterTurn:
 1694 0034 00       		.space	1
 1695              		.global	ignoreSensor
 1696              		.type	ignoreSensor, %object
 1697              		.size	ignoreSensor, 1
 1698              	ignoreSensor:
 1699 0035 00       		.space	1
 1700              		.global	__aeabi_fcmpge
 1701              		.section	.text.CheckSensorDirection,"ax",%progbits
 1702              		.align	2
 1703              		.global	CheckSensorDirection
 1704              		.thumb
 1705              		.thumb_func
 1706              		.type	CheckSensorDirection, %function
 1707              	CheckSensorDirection:
 1708              	.LFB75:
 308:main.c        **** 
 309:main.c        **** uint8 stoppedAfterTurn = 0;
 310:main.c        **** uint8 ignoreSensor = 0;
 311:main.c        **** 
 312:main.c        **** enum DirectionState CheckSensorDirection() {
 1709              		.loc 1 312 0
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 8
 1712              		@ frame_needed = 1, uses_anonymous_args = 0
 1713 0000 80B5     		push	{r7, lr}
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 7, -8
 1716              		.cfi_offset 14, -4
 1717 0002 82B0     		sub	sp, sp, #8
 1718              		.cfi_def_cfa_offset 16
 1719 0004 00AF     		add	r7, sp, #0
 1720              		.cfi_def_cfa_register 7
 313:main.c        ****     float blocksize;
 314:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1721              		.loc 1 314 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 37


 1722 0006 8D4B     		ldr	r3, .L123
 1723 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1724 000a 002B     		cmp	r3, #0
 1725 000c 03D0     		beq	.L92
 1726              		.loc 1 314 0 is_stmt 0 discriminator 1
 1727 000e 8B4B     		ldr	r3, .L123
 1728 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 0012 012B     		cmp	r3, #1
 1730 0014 03D1     		bne	.L93
 1731              	.L92:
 315:main.c        ****         blocksize = yBlocksize;
 1732              		.loc 1 315 0 is_stmt 1
 1733 0016 8A4B     		ldr	r3, .L123+4
 1734 0018 1B68     		ldr	r3, [r3]	@ float
 1735 001a 7B60     		str	r3, [r7, #4]	@ float
 1736 001c 02E0     		b	.L94
 1737              	.L93:
 316:main.c        ****     } else {
 317:main.c        ****         blocksize = xBlocksize;
 1738              		.loc 1 317 0
 1739 001e 894B     		ldr	r3, .L123+8
 1740 0020 1B68     		ldr	r3, [r3]	@ float
 1741 0022 7B60     		str	r3, [r7, #4]	@ float
 1742              	.L94:
 318:main.c        ****     }
 319:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1743              		.loc 1 319 0
 1744 0024 0523     		movs	r3, #5
 1745 0026 3B60     		str	r3, [r7]
 320:main.c        ****     
 321:main.c        ****     // GET NEXT STEP * ========================================
 322:main.c        ****     // intersection/ turn check
 323:main.c        ****     if((currentDirection == Forward || currentDirection == AdjustToTheLeft || currentDirection == A
 1746              		.loc 1 323 0
 1747 0028 874B     		ldr	r3, .L123+12
 1748 002a 1B68     		ldr	r3, [r3]
 1749 002c 002B     		cmp	r3, #0
 1750 002e 13D0     		beq	.L95
 1751              		.loc 1 323 0 is_stmt 0 discriminator 1
 1752 0030 854B     		ldr	r3, .L123+12
 1753 0032 1B68     		ldr	r3, [r3]
 1754 0034 032B     		cmp	r3, #3
 1755 0036 0FD0     		beq	.L95
 1756              		.loc 1 323 0 discriminator 2
 1757 0038 834B     		ldr	r3, .L123+12
 1758 003a 1B68     		ldr	r3, [r3]
 1759 003c 042B     		cmp	r3, #4
 1760 003e 0BD0     		beq	.L95
 324:main.c        ****         currentDirection == waitForLeftTurn || currentDirection == waitForRightTurn || currentDirec
 1761              		.loc 1 324 0 is_stmt 1 discriminator 3
 1762 0040 814B     		ldr	r3, .L123+12
 1763 0042 1B68     		ldr	r3, [r3]
 323:main.c        ****         currentDirection == waitForLeftTurn || currentDirection == waitForRightTurn || currentDirec
 1764              		.loc 1 323 0 discriminator 3
 1765 0044 092B     		cmp	r3, #9
 1766 0046 07D0     		beq	.L95
 1767              		.loc 1 324 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 38


 1768 0048 7F4B     		ldr	r3, .L123+12
 1769 004a 1B68     		ldr	r3, [r3]
 1770 004c 082B     		cmp	r3, #8
 1771 004e 03D0     		beq	.L95
 1772              		.loc 1 324 0 is_stmt 0 discriminator 1
 1773 0050 7D4B     		ldr	r3, .L123+12
 1774 0052 1B68     		ldr	r3, [r3]
 1775 0054 052B     		cmp	r3, #5
 1776 0056 1FD1     		bne	.L96
 1777              	.L95:
 325:main.c        ****         ) && (!s3 || !s4) && (currentDirection != ForwardAfterTurn && currentDirection != TurnLeft 
 1778              		.loc 1 325 0 is_stmt 1
 1779 0058 7C4B     		ldr	r3, .L123+16
 1780 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1781 005c 002B     		cmp	r3, #0
 1782 005e 03D0     		beq	.L97
 1783              		.loc 1 325 0 is_stmt 0 discriminator 2
 1784 0060 7B4B     		ldr	r3, .L123+20
 1785 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1786 0064 002B     		cmp	r3, #0
 1787 0066 17D1     		bne	.L96
 1788              	.L97:
 1789              		.loc 1 325 0 discriminator 3
 1790 0068 774B     		ldr	r3, .L123+12
 1791 006a 1B68     		ldr	r3, [r3]
 1792 006c 0A2B     		cmp	r3, #10
 1793 006e 13D0     		beq	.L96
 1794              		.loc 1 325 0 discriminator 4
 1795 0070 754B     		ldr	r3, .L123+12
 1796 0072 1B68     		ldr	r3, [r3]
 1797 0074 022B     		cmp	r3, #2
 1798 0076 0FD0     		beq	.L96
 1799              		.loc 1 325 0 discriminator 5
 1800 0078 734B     		ldr	r3, .L123+12
 1801 007a 1B68     		ldr	r3, [r3]
 1802 007c 012B     		cmp	r3, #1
 1803 007e 0BD0     		beq	.L96
 326:main.c        ****         directionState = RecheckPosition(); // get next step at each block
 1804              		.loc 1 326 0 is_stmt 1
 1805 0080 FFF7FEFF 		bl	RecheckPosition
 1806 0084 3860     		str	r0, [r7]
 327:main.c        ****         totalDistance = 0; // reset distance
 1807              		.loc 1 327 0
 1808 0086 734B     		ldr	r3, .L123+24
 1809 0088 4FF00002 		mov	r2, #0
 1810 008c 1A60     		str	r2, [r3]	@ float
 328:main.c        ****         previousDirection = directionState;
 1811              		.loc 1 328 0
 1812 008e 724A     		ldr	r2, .L123+28
 1813 0090 3B68     		ldr	r3, [r7]
 1814 0092 1360     		str	r3, [r2]
 329:main.c        ****         return directionState;
 1815              		.loc 1 329 0
 1816 0094 3B68     		ldr	r3, [r7]
 1817 0096 4AE1     		b	.L98
 1818              	.L96:
 330:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 39


 331:main.c        ****     if (stoppedAfterTurn == 1) {
 1819              		.loc 1 331 0
 1820 0098 704B     		ldr	r3, .L123+32
 1821 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1822 009c 012B     		cmp	r3, #1
 1823 009e 1BD1     		bne	.L99
 332:main.c        ****         if (stopBuffer <= 50) {
 1824              		.loc 1 332 0
 1825 00a0 6F4B     		ldr	r3, .L123+36
 1826 00a2 1B68     		ldr	r3, [r3]
 1827 00a4 322B     		cmp	r3, #50
 1828 00a6 07D8     		bhi	.L100
 333:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1829              		.loc 1 333 0
 1830 00a8 0523     		movs	r3, #5
 1831 00aa 3B60     		str	r3, [r7]
 334:main.c        ****             previousDirection = currentDirection;
 1832              		.loc 1 334 0
 1833 00ac 664B     		ldr	r3, .L123+12
 1834 00ae 1B68     		ldr	r3, [r3]
 1835 00b0 694A     		ldr	r2, .L123+28
 1836 00b2 1360     		str	r3, [r2]
 335:main.c        ****             return directionState;
 1837              		.loc 1 335 0
 1838 00b4 3B68     		ldr	r3, [r7]
 1839 00b6 3AE1     		b	.L98
 1840              	.L100:
 336:main.c        ****         }
 337:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1841              		.loc 1 337 0
 1842 00b8 FFF7FEFF 		bl	GetNextStep
 1843 00bc 3860     		str	r0, [r7]
 338:main.c        ****         totalDistance = 0; // reset distance
 1844              		.loc 1 338 0
 1845 00be 654B     		ldr	r3, .L123+24
 1846 00c0 4FF00002 		mov	r2, #0
 1847 00c4 1A60     		str	r2, [r3]	@ float
 339:main.c        ****         previousDirection = currentDirection;
 1848              		.loc 1 339 0
 1849 00c6 604B     		ldr	r3, .L123+12
 1850 00c8 1B68     		ldr	r3, [r3]
 1851 00ca 634A     		ldr	r2, .L123+28
 1852 00cc 1360     		str	r3, [r2]
 340:main.c        ****         stoppedAfterTurn = 0;
 1853              		.loc 1 340 0
 1854 00ce 634B     		ldr	r3, .L123+32
 1855 00d0 0022     		movs	r2, #0
 1856 00d2 1A70     		strb	r2, [r3]
 341:main.c        ****         return directionState;
 1857              		.loc 1 341 0
 1858 00d4 3B68     		ldr	r3, [r7]
 1859 00d6 2AE1     		b	.L98
 1860              	.L99:
 342:main.c        ****     }
 343:main.c        ****     if (totalDistance >= blocksize && currentDirection != waitForLeftTurn && currentDirection != wa
 1861              		.loc 1 343 0
 1862 00d8 5E4B     		ldr	r3, .L123+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 40


 1863 00da 1B68     		ldr	r3, [r3]	@ float
 1864 00dc 7968     		ldr	r1, [r7, #4]	@ float
 1865 00de 1846     		mov	r0, r3
 1866 00e0 FFF7FEFF 		bl	__aeabi_fcmpge
 1867 00e4 0346     		mov	r3, r0
 1868 00e6 002B     		cmp	r3, #0
 1869 00e8 14D0     		beq	.L101
 1870              		.loc 1 343 0 is_stmt 0 discriminator 1
 1871 00ea 574B     		ldr	r3, .L123+12
 1872 00ec 1B68     		ldr	r3, [r3]
 1873 00ee 092B     		cmp	r3, #9
 1874 00f0 10D0     		beq	.L101
 1875              		.loc 1 343 0 discriminator 2
 1876 00f2 554B     		ldr	r3, .L123+12
 1877 00f4 1B68     		ldr	r3, [r3]
 1878 00f6 082B     		cmp	r3, #8
 1879 00f8 0CD0     		beq	.L101
 344:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1880              		.loc 1 344 0 is_stmt 1
 1881 00fa FFF7FEFF 		bl	GetNextStep
 1882 00fe 3860     		str	r0, [r7]
 345:main.c        ****         totalDistance = 0; // reset distance
 1883              		.loc 1 345 0
 1884 0100 544B     		ldr	r3, .L123+24
 1885 0102 4FF00002 		mov	r2, #0
 1886 0106 1A60     		str	r2, [r3]	@ float
 346:main.c        ****         previousDirection = currentDirection;
 1887              		.loc 1 346 0
 1888 0108 4F4B     		ldr	r3, .L123+12
 1889 010a 1B68     		ldr	r3, [r3]
 1890 010c 524A     		ldr	r2, .L123+28
 1891 010e 1360     		str	r3, [r2]
 347:main.c        ****         return directionState;
 1892              		.loc 1 347 0
 1893 0110 3B68     		ldr	r3, [r7]
 1894 0112 0CE1     		b	.L98
 1895              	.L101:
 348:main.c        ****     }
 349:main.c        ****     
 350:main.c        ****     // STOP BUFFER * ========================================
 351:main.c        ****     if (previousDirection == Stop) {
 1896              		.loc 1 351 0
 1897 0114 504B     		ldr	r3, .L123+28
 1898 0116 1B68     		ldr	r3, [r3]
 1899 0118 052B     		cmp	r3, #5
 1900 011a 0BD1     		bne	.L103
 352:main.c        ****         if (stopBuffer <= 50) {
 1901              		.loc 1 352 0
 1902 011c 504B     		ldr	r3, .L123+36
 1903 011e 1B68     		ldr	r3, [r3]
 1904 0120 322B     		cmp	r3, #50
 1905 0122 05D8     		bhi	.L104
 353:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1906              		.loc 1 353 0
 1907 0124 0523     		movs	r3, #5
 1908 0126 3B60     		str	r3, [r7]
 354:main.c        ****             previousDirection = currentDirection;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 41


 1909              		.loc 1 354 0
 1910 0128 474B     		ldr	r3, .L123+12
 1911 012a 1B68     		ldr	r3, [r3]
 1912 012c 4A4A     		ldr	r2, .L123+28
 1913 012e 1360     		str	r3, [r2]
 1914              	.L104:
 355:main.c        ****         } else {
 356:main.c        ****             //directionState = ForwardAfterTurn;
 357:main.c        ****         }
 358:main.c        ****         return directionState;
 1915              		.loc 1 358 0
 1916 0130 3B68     		ldr	r3, [r7]
 1917 0132 FCE0     		b	.L98
 1918              	.L103:
 359:main.c        ****     }
 360:main.c        **** 
 361:main.c        ****     // TURNING * ========================================    
 362:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1919              		.loc 1 362 0
 1920 0134 484B     		ldr	r3, .L123+28
 1921 0136 1B68     		ldr	r3, [r3]
 1922 0138 0A2B     		cmp	r3, #10
 1923 013a 0FD1     		bne	.L105
 363:main.c        **** 
 364:main.c        ****         if (s3 || s4) {
 1924              		.loc 1 364 0
 1925 013c 434B     		ldr	r3, .L123+16
 1926 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1927 0140 002B     		cmp	r3, #0
 1928 0142 03D1     		bne	.L106
 1929              		.loc 1 364 0 is_stmt 0 discriminator 1
 1930 0144 424B     		ldr	r3, .L123+20
 1931 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1932 0148 002B     		cmp	r3, #0
 1933 014a 07D0     		beq	.L105
 1934              	.L106:
 365:main.c        ****             //ignoreSensor = 0;
 366:main.c        ****             //usbPutString("Forward\n");
 367:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 1935              		.loc 1 367 0 is_stmt 1
 1936 014c 0023     		movs	r3, #0
 1937 014e 3B60     		str	r3, [r7]
 368:main.c        ****             previousDirection = currentDirection;
 1938              		.loc 1 368 0
 1939 0150 3D4B     		ldr	r3, .L123+12
 1940 0152 1B68     		ldr	r3, [r3]
 1941 0154 404A     		ldr	r2, .L123+28
 1942 0156 1360     		str	r3, [r2]
 369:main.c        ****             return directionState;
 1943              		.loc 1 369 0
 1944 0158 3B68     		ldr	r3, [r7]
 1945 015a E8E0     		b	.L98
 1946              	.L105:
 370:main.c        ****         }
 371:main.c        ****     }
 372:main.c        **** 
 373:main.c        ****     if(previousDirection == waitForRightTurn) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 42


 1947              		.loc 1 373 0
 1948 015c 3E4B     		ldr	r3, .L123+28
 1949 015e 1B68     		ldr	r3, [r3]
 1950 0160 082B     		cmp	r3, #8
 1951 0162 13D1     		bne	.L107
 374:main.c        ****         //isr_speed_Stop();
 375:main.c        ****         if(!s4) {
 1952              		.loc 1 375 0
 1953 0164 3A4B     		ldr	r3, .L123+20
 1954 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1955 0168 002B     		cmp	r3, #0
 1956 016a 07D1     		bne	.L108
 376:main.c        ****             //usbPutString("Turn Right\n");
 377:main.c        ****             directionState = TurnRight;
 1957              		.loc 1 377 0
 1958 016c 0123     		movs	r3, #1
 1959 016e 3B60     		str	r3, [r7]
 378:main.c        ****             previousDirection = currentDirection;
 1960              		.loc 1 378 0
 1961 0170 354B     		ldr	r3, .L123+12
 1962 0172 1B68     		ldr	r3, [r3]
 1963 0174 384A     		ldr	r2, .L123+28
 1964 0176 1360     		str	r3, [r2]
 379:main.c        ****             return directionState;
 1965              		.loc 1 379 0
 1966 0178 3B68     		ldr	r3, [r7]
 1967 017a D8E0     		b	.L98
 1968              	.L108:
 380:main.c        ****         } else {
 381:main.c        ****             //usbPutString("Wait for Right Turn\n");
 382:main.c        ****             directionState = waitForRightTurn;
 1969              		.loc 1 382 0
 1970 017c 0823     		movs	r3, #8
 1971 017e 3B60     		str	r3, [r7]
 383:main.c        ****             previousDirection = currentDirection;
 1972              		.loc 1 383 0
 1973 0180 314B     		ldr	r3, .L123+12
 1974 0182 1B68     		ldr	r3, [r3]
 1975 0184 344A     		ldr	r2, .L123+28
 1976 0186 1360     		str	r3, [r2]
 384:main.c        ****             return directionState;
 1977              		.loc 1 384 0
 1978 0188 3B68     		ldr	r3, [r7]
 1979 018a D0E0     		b	.L98
 1980              	.L107:
 385:main.c        ****         }
 386:main.c        ****     }
 387:main.c        **** 
 388:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1981              		.loc 1 388 0
 1982 018c 324B     		ldr	r3, .L123+28
 1983 018e 1B68     		ldr	r3, [r3]
 1984 0190 092B     		cmp	r3, #9
 1985 0192 13D1     		bne	.L109
 389:main.c        ****         //isr_speed_Stop();
 390:main.c        ****         //ignoreSensor = 0;
 391:main.c        ****         if(!s3) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 43


 1986              		.loc 1 391 0
 1987 0194 2D4B     		ldr	r3, .L123+16
 1988 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1989 0198 002B     		cmp	r3, #0
 1990 019a 07D1     		bne	.L110
 392:main.c        ****             //usbPutString("Turn Left\n");
 393:main.c        ****             directionState = TurnLeft;
 1991              		.loc 1 393 0
 1992 019c 0223     		movs	r3, #2
 1993 019e 3B60     		str	r3, [r7]
 394:main.c        ****             previousDirection = currentDirection;
 1994              		.loc 1 394 0
 1995 01a0 294B     		ldr	r3, .L123+12
 1996 01a2 1B68     		ldr	r3, [r3]
 1997 01a4 2C4A     		ldr	r2, .L123+28
 1998 01a6 1360     		str	r3, [r2]
 395:main.c        ****             return directionState;
 1999              		.loc 1 395 0
 2000 01a8 3B68     		ldr	r3, [r7]
 2001 01aa C0E0     		b	.L98
 2002              	.L110:
 396:main.c        ****         } else {
 397:main.c        ****             //usbPutString("Wait for Left Turn\n");
 398:main.c        ****             directionState = waitForLeftTurn;
 2003              		.loc 1 398 0
 2004 01ac 0923     		movs	r3, #9
 2005 01ae 3B60     		str	r3, [r7]
 399:main.c        ****             previousDirection = currentDirection;
 2006              		.loc 1 399 0
 2007 01b0 254B     		ldr	r3, .L123+12
 2008 01b2 1B68     		ldr	r3, [r3]
 2009 01b4 284A     		ldr	r2, .L123+28
 2010 01b6 1360     		str	r3, [r2]
 400:main.c        ****             return directionState;
 2011              		.loc 1 400 0
 2012 01b8 3B68     		ldr	r3, [r7]
 2013 01ba B8E0     		b	.L98
 2014              	.L109:
 401:main.c        ****         }
 402:main.c        ****     }
 403:main.c        **** 
 404:main.c        ****     if(previousDirection == TurnRight) {
 2015              		.loc 1 404 0
 2016 01bc 264B     		ldr	r3, .L123+28
 2017 01be 1B68     		ldr	r3, [r3]
 2018 01c0 012B     		cmp	r3, #1
 2019 01c2 26D1     		bne	.L111
 405:main.c        ****         if(s5 && s6) {
 2020              		.loc 1 405 0
 2021 01c4 274B     		ldr	r3, .L123+40
 2022 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2023 01c8 002B     		cmp	r3, #0
 2024 01ca 0BD0     		beq	.L112
 2025              		.loc 1 405 0 is_stmt 0 discriminator 1
 2026 01cc 264B     		ldr	r3, .L123+44
 2027 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2028 01d0 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 44


 2029 01d2 07D0     		beq	.L112
 406:main.c        ****             //usbPutString("Turn Right\n");
 407:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 2030              		.loc 1 407 0 is_stmt 1
 2031 01d4 0123     		movs	r3, #1
 2032 01d6 3B60     		str	r3, [r7]
 408:main.c        ****             previousDirection = currentDirection;
 2033              		.loc 1 408 0
 2034 01d8 1B4B     		ldr	r3, .L123+12
 2035 01da 1B68     		ldr	r3, [r3]
 2036 01dc 1E4A     		ldr	r2, .L123+28
 2037 01de 1360     		str	r3, [r2]
 409:main.c        ****             return directionState;
 2038              		.loc 1 409 0
 2039 01e0 3B68     		ldr	r3, [r7]
 2040 01e2 A4E0     		b	.L98
 2041              	.L112:
 410:main.c        ****         } 
 411:main.c        ****         else if (!s5 || !s6) {
 2042              		.loc 1 411 0
 2043 01e4 1F4B     		ldr	r3, .L123+40
 2044 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2045 01e8 002B     		cmp	r3, #0
 2046 01ea 03D0     		beq	.L113
 2047              		.loc 1 411 0 is_stmt 0 discriminator 1
 2048 01ec 1E4B     		ldr	r3, .L123+44
 2049 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 01f0 002B     		cmp	r3, #0
 2051 01f2 0ED1     		bne	.L111
 2052              	.L113:
 412:main.c        ****             //isr_speed_Start();
 413:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 414:main.c        ****             //usbPutString("Stop after Right Turn");
 415:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 2053              		.loc 1 415 0 is_stmt 1
 2054 01f4 0523     		movs	r3, #5
 2055 01f6 3B60     		str	r3, [r7]
 416:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 2056              		.loc 1 416 0
 2057 01f8 164B     		ldr	r3, .L123+24
 2058 01fa 4FF00002 		mov	r2, #0
 2059 01fe 1A60     		str	r2, [r3]	@ float
 417:main.c        ****             previousDirection = currentDirection;
 2060              		.loc 1 417 0
 2061 0200 114B     		ldr	r3, .L123+12
 2062 0202 1B68     		ldr	r3, [r3]
 2063 0204 144A     		ldr	r2, .L123+28
 2064 0206 1360     		str	r3, [r2]
 418:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 2065              		.loc 1 418 0
 2066 0208 144B     		ldr	r3, .L123+32
 2067 020a 0122     		movs	r2, #1
 2068 020c 1A70     		strb	r2, [r3]
 419:main.c        ****             return directionState;
 2069              		.loc 1 419 0
 2070 020e 3B68     		ldr	r3, [r7]
 2071 0210 8DE0     		b	.L98
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 45


 2072              	.L111:
 420:main.c        ****         }
 421:main.c        ****     }    
 422:main.c        **** 
 423:main.c        ****     if(previousDirection == TurnLeft) {
 2073              		.loc 1 423 0
 2074 0212 114B     		ldr	r3, .L123+28
 2075 0214 1B68     		ldr	r3, [r3]
 2076 0216 022B     		cmp	r3, #2
 2077 0218 3FD1     		bne	.L114
 424:main.c        ****         if(s5 && s6) {
 2078              		.loc 1 424 0
 2079 021a 124B     		ldr	r3, .L123+40
 2080 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2081 021e 002B     		cmp	r3, #0
 2082 0220 24D0     		beq	.L115
 2083              		.loc 1 424 0 is_stmt 0 discriminator 1
 2084 0222 114B     		ldr	r3, .L123+44
 2085 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 0226 002B     		cmp	r3, #0
 2087 0228 20D0     		beq	.L115
 425:main.c        ****             //usbPutString("Turn Left\n");
 426:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 2088              		.loc 1 426 0 is_stmt 1
 2089 022a 0223     		movs	r3, #2
 2090 022c 3B60     		str	r3, [r7]
 427:main.c        ****             previousDirection = currentDirection;
 2091              		.loc 1 427 0
 2092 022e 064B     		ldr	r3, .L123+12
 2093 0230 1B68     		ldr	r3, [r3]
 2094 0232 094A     		ldr	r2, .L123+28
 2095 0234 1360     		str	r3, [r2]
 428:main.c        ****             return directionState;
 2096              		.loc 1 428 0
 2097 0236 3B68     		ldr	r3, [r7]
 2098 0238 79E0     		b	.L98
 2099              	.L124:
 2100 023a 00BF     		.align	2
 2101              	.L123:
 2102 023c 00000000 		.word	currentOrientation
 2103 0240 00000000 		.word	yBlocksize
 2104 0244 00000000 		.word	xBlocksize
 2105 0248 00000000 		.word	currentDirection
 2106 024c 00000000 		.word	s3
 2107 0250 00000000 		.word	s4
 2108 0254 00000000 		.word	totalDistance
 2109 0258 00000000 		.word	previousDirection
 2110 025c 00000000 		.word	stoppedAfterTurn
 2111 0260 00000000 		.word	stopBuffer
 2112 0264 00000000 		.word	s5
 2113 0268 00000000 		.word	s6
 2114              	.L115:
 429:main.c        ****         } 
 430:main.c        ****         else if (!s5 || !s6) {
 2115              		.loc 1 430 0
 2116 026c 324B     		ldr	r3, .L125
 2117 026e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 46


 2118 0270 002B     		cmp	r3, #0
 2119 0272 03D0     		beq	.L116
 2120              		.loc 1 430 0 is_stmt 0 discriminator 1
 2121 0274 314B     		ldr	r3, .L125+4
 2122 0276 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2123 0278 002B     		cmp	r3, #0
 2124 027a 0ED1     		bne	.L114
 2125              	.L116:
 431:main.c        ****             //isr_speed_Start();
 432:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 433:main.c        ****            // usbPutString("Stop after Left Turn\n");
 434:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 2126              		.loc 1 434 0 is_stmt 1
 2127 027c 0523     		movs	r3, #5
 2128 027e 3B60     		str	r3, [r7]
 435:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 2129              		.loc 1 435 0
 2130 0280 2F4B     		ldr	r3, .L125+8
 2131 0282 4FF00002 		mov	r2, #0
 2132 0286 1A60     		str	r2, [r3]	@ float
 436:main.c        ****             previousDirection = currentDirection;
 2133              		.loc 1 436 0
 2134 0288 2E4B     		ldr	r3, .L125+12
 2135 028a 1B68     		ldr	r3, [r3]
 2136 028c 2E4A     		ldr	r2, .L125+16
 2137 028e 1360     		str	r3, [r2]
 437:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 2138              		.loc 1 437 0
 2139 0290 2E4B     		ldr	r3, .L125+20
 2140 0292 0122     		movs	r2, #1
 2141 0294 1A70     		strb	r2, [r3]
 438:main.c        ****             return directionState;
 2142              		.loc 1 438 0
 2143 0296 3B68     		ldr	r3, [r7]
 2144 0298 49E0     		b	.L98
 2145              	.L114:
 439:main.c        ****         }
 440:main.c        ****     }
 441:main.c        ****     
 442:main.c        ****     // COURSE CORRECTION * ========================================
 443:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 2146              		.loc 1 443 0
 2147 029a 2B4B     		ldr	r3, .L125+16
 2148 029c 1B68     		ldr	r3, [r3]
 2149 029e 002B     		cmp	r3, #0
 2150 02a0 07D0     		beq	.L117
 2151              		.loc 1 443 0 is_stmt 0 discriminator 1
 2152 02a2 294B     		ldr	r3, .L125+16
 2153 02a4 1B68     		ldr	r3, [r3]
 2154 02a6 032B     		cmp	r3, #3
 2155 02a8 03D0     		beq	.L117
 2156              		.loc 1 443 0 discriminator 2
 2157 02aa 274B     		ldr	r3, .L125+16
 2158 02ac 1B68     		ldr	r3, [r3]
 2159 02ae 042B     		cmp	r3, #4
 2160 02b0 15D1     		bne	.L118
 2161              	.L117:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 47


 444:main.c        ****         //ignoreSensor = 0;
 445:main.c        ****         if(s6) {
 2162              		.loc 1 445 0 is_stmt 1
 2163 02b2 224B     		ldr	r3, .L125+4
 2164 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2165 02b6 002B     		cmp	r3, #0
 2166 02b8 06D0     		beq	.L119
 446:main.c        ****             //usbPutString("Adjust to the left\n");
 447:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 2167              		.loc 1 447 0
 2168 02ba 0323     		movs	r3, #3
 2169 02bc 3B60     		str	r3, [r7]
 448:main.c        ****             previousDirection = directionState;
 2170              		.loc 1 448 0
 2171 02be 224A     		ldr	r2, .L125+16
 2172 02c0 3B68     		ldr	r3, [r7]
 2173 02c2 1360     		str	r3, [r2]
 449:main.c        ****             return directionState;
 2174              		.loc 1 449 0
 2175 02c4 3B68     		ldr	r3, [r7]
 2176 02c6 32E0     		b	.L98
 2177              	.L119:
 450:main.c        ****         }
 451:main.c        ****         if(s5) {
 2178              		.loc 1 451 0
 2179 02c8 1B4B     		ldr	r3, .L125
 2180 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2181 02cc 002B     		cmp	r3, #0
 2182 02ce 06D0     		beq	.L118
 452:main.c        ****             //usbPutString("Adjust to the right\n");
 453:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 2183              		.loc 1 453 0
 2184 02d0 0423     		movs	r3, #4
 2185 02d2 3B60     		str	r3, [r7]
 454:main.c        ****             previousDirection = directionState;
 2186              		.loc 1 454 0
 2187 02d4 1C4A     		ldr	r2, .L125+16
 2188 02d6 3B68     		ldr	r3, [r7]
 2189 02d8 1360     		str	r3, [r2]
 455:main.c        ****             return directionState;
 2190              		.loc 1 455 0
 2191 02da 3B68     		ldr	r3, [r7]
 2192 02dc 27E0     		b	.L98
 2193              	.L118:
 456:main.c        ****         }
 457:main.c        ****     }
 458:main.c        ****     
 459:main.c        ****     // FORWARD * ========================================
 460:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 2194              		.loc 1 460 0
 2195 02de 1C4B     		ldr	r3, .L125+24
 2196 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2197 02e2 002B     		cmp	r3, #0
 2198 02e4 12D0     		beq	.L120
 2199              		.loc 1 460 0 is_stmt 0 discriminator 1
 2200 02e6 1B4B     		ldr	r3, .L125+28
 2201 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 48


 2202 02ea 002B     		cmp	r3, #0
 2203 02ec 0ED0     		beq	.L120
 2204              		.loc 1 460 0 discriminator 2
 2205 02ee 124B     		ldr	r3, .L125
 2206 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2207 02f2 002B     		cmp	r3, #0
 2208 02f4 0AD1     		bne	.L120
 2209              		.loc 1 460 0 discriminator 3
 2210 02f6 114B     		ldr	r3, .L125+4
 2211 02f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 02fa 002B     		cmp	r3, #0
 2213 02fc 06D1     		bne	.L120
 461:main.c        ****         //usbPutString("Forward\n");
 462:main.c        ****         directionState = Forward;
 2214              		.loc 1 462 0 is_stmt 1
 2215 02fe 0023     		movs	r3, #0
 2216 0300 3B60     		str	r3, [r7]
 463:main.c        ****         previousDirection = directionState;
 2217              		.loc 1 463 0
 2218 0302 114A     		ldr	r2, .L125+16
 2219 0304 3B68     		ldr	r3, [r7]
 2220 0306 1360     		str	r3, [r2]
 464:main.c        ****         return directionState;   
 2221              		.loc 1 464 0
 2222 0308 3B68     		ldr	r3, [r7]
 2223 030a 10E0     		b	.L98
 2224              	.L120:
 465:main.c        ****     }
 466:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 467:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
 468:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 469:main.c        ****         return directionState;
 470:main.c        ****     }
 471:main.c        **** 
 472:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 473:main.c        ****         //usbPutString("Wait For Turn\n");
 474:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 475:main.c        ****         return directionState;
 476:main.c        ****     }*/
 477:main.c        **** 
 478:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 479:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 480:main.c        ****     if (previousDirection == Unknown) {
 2225              		.loc 1 480 0
 2226 030c 0E4B     		ldr	r3, .L125+16
 2227 030e 1B68     		ldr	r3, [r3]
 2228 0310 062B     		cmp	r3, #6
 2229 0312 06D1     		bne	.L121
 481:main.c        ****         directionState = Forward;
 2230              		.loc 1 481 0
 2231 0314 0023     		movs	r3, #0
 2232 0316 3B60     		str	r3, [r7]
 482:main.c        ****         previousDirection = directionState;
 2233              		.loc 1 482 0
 2234 0318 0B4A     		ldr	r2, .L125+16
 2235 031a 3B68     		ldr	r3, [r7]
 2236 031c 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 49


 483:main.c        ****         return directionState;
 2237              		.loc 1 483 0
 2238 031e 3B68     		ldr	r3, [r7]
 2239 0320 05E0     		b	.L98
 2240              	.L121:
 484:main.c        ****     }
 485:main.c        **** 
 486:main.c        ****     // Possible reason
 487:main.c        ****     previousDirection = currentDirection;
 2241              		.loc 1 487 0
 2242 0322 084B     		ldr	r3, .L125+12
 2243 0324 1B68     		ldr	r3, [r3]
 2244 0326 084A     		ldr	r2, .L125+16
 2245 0328 1360     		str	r3, [r2]
 488:main.c        ****     return previousDirection;
 2246              		.loc 1 488 0
 2247 032a 074B     		ldr	r3, .L125+16
 2248 032c 1B68     		ldr	r3, [r3]
 2249              	.L98:
 489:main.c        **** }
 2250              		.loc 1 489 0
 2251 032e 1846     		mov	r0, r3
 2252 0330 0837     		adds	r7, r7, #8
 2253              		.cfi_def_cfa_offset 8
 2254 0332 BD46     		mov	sp, r7
 2255              		.cfi_def_cfa_register 13
 2256              		@ sp needed
 2257 0334 80BD     		pop	{r7, pc}
 2258              	.L126:
 2259 0336 00BF     		.align	2
 2260              	.L125:
 2261 0338 00000000 		.word	s5
 2262 033c 00000000 		.word	s6
 2263 0340 00000000 		.word	totalDistance
 2264 0344 00000000 		.word	currentDirection
 2265 0348 00000000 		.word	previousDirection
 2266 034c 00000000 		.word	stoppedAfterTurn
 2267 0350 00000000 		.word	s3
 2268 0354 00000000 		.word	s4
 2269              		.cfi_endproc
 2270              	.LFE75:
 2271              		.size	CheckSensorDirection, .-CheckSensorDirection
 2272              		.section	.text.SetRobotMovement,"ax",%progbits
 2273              		.align	2
 2274              		.global	SetRobotMovement
 2275              		.thumb
 2276              		.thumb_func
 2277              		.type	SetRobotMovement, %function
 2278              	SetRobotMovement:
 2279              	.LFB76:
 490:main.c        **** 
 491:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 492:main.c        **** void SetRobotMovement() {
 2280              		.loc 1 492 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 50


 2284 0000 80B5     		push	{r7, lr}
 2285              		.cfi_def_cfa_offset 8
 2286              		.cfi_offset 7, -8
 2287              		.cfi_offset 14, -4
 2288 0002 00AF     		add	r7, sp, #0
 2289              		.cfi_def_cfa_register 7
 493:main.c        ****     currentDirection = CheckSensorDirection();   
 2290              		.loc 1 493 0
 2291 0004 FFF7FEFF 		bl	CheckSensorDirection
 2292 0008 0246     		mov	r2, r0
 2293 000a 224B     		ldr	r3, .L144
 2294 000c 1A60     		str	r2, [r3]
 494:main.c        ****     
 495:main.c        ****     switch (currentDirection) {
 2295              		.loc 1 495 0
 2296 000e 214B     		ldr	r3, .L144
 2297 0010 1B68     		ldr	r3, [r3]
 2298 0012 0B2B     		cmp	r3, #11
 2299 0014 3CD8     		bhi	.L142
 2300 0016 01A2     		adr	r2, .L130
 2301 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2302              		.p2align 2
 2303              	.L130:
 2304 001c 4D000000 		.word	.L129+1
 2305 0020 53000000 		.word	.L131+1
 2306 0024 59000000 		.word	.L132+1
 2307 0028 65000000 		.word	.L133+1
 2308 002c 5F000000 		.word	.L134+1
 2309 0030 6B000000 		.word	.L135+1
 2310 0034 8F000000 		.word	.L143+1
 2311 0038 71000000 		.word	.L137+1
 2312 003c 89000000 		.word	.L138+1
 2313 0040 83000000 		.word	.L139+1
 2314 0044 77000000 		.word	.L140+1
 2315 0048 7D000000 		.word	.L141+1
 2316              		.p2align 1
 2317              	.L129:
 496:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 497:main.c        ****         case Forward:
 498:main.c        ****             moveForward();
 2318              		.loc 1 498 0
 2319 004c FFF7FEFF 		bl	moveForward
 499:main.c        ****             break;
 2320              		.loc 1 499 0
 2321 0050 1EE0     		b	.L128
 2322              	.L131:
 500:main.c        ****         case TurnRight:
 501:main.c        ****             turnRight();
 2323              		.loc 1 501 0
 2324 0052 FFF7FEFF 		bl	turnRight
 502:main.c        ****             break;
 2325              		.loc 1 502 0
 2326 0056 1BE0     		b	.L128
 2327              	.L132:
 503:main.c        ****         case TurnLeft:
 504:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2328              		.loc 1 504 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 51


 2329 0058 FFF7FEFF 		bl	turnLeft
 505:main.c        ****             break;
 2330              		.loc 1 505 0
 2331 005c 18E0     		b	.L128
 2332              	.L134:
 506:main.c        ****         case AdjustToTheRight:
 507:main.c        ****             adjustRight();
 2333              		.loc 1 507 0
 2334 005e FFF7FEFF 		bl	adjustRight
 508:main.c        ****             break;
 2335              		.loc 1 508 0
 2336 0062 15E0     		b	.L128
 2337              	.L133:
 509:main.c        ****         case AdjustToTheLeft:
 510:main.c        ****             adjustLeft();
 2338              		.loc 1 510 0
 2339 0064 FFF7FEFF 		bl	adjustLeft
 511:main.c        ****             break;
 2340              		.loc 1 511 0
 2341 0068 12E0     		b	.L128
 2342              	.L135:
 512:main.c        ****         case Stop:
 513:main.c        ****             stopMoving();
 2343              		.loc 1 513 0
 2344 006a FFF7FEFF 		bl	stopMoving
 514:main.c        ****             break;
 2345              		.loc 1 514 0
 2346 006e 0FE0     		b	.L128
 2347              	.L137:
 515:main.c        ****         case waitForTurn:
 516:main.c        ****             moveForward(); 
 2348              		.loc 1 516 0
 2349 0070 FFF7FEFF 		bl	moveForward
 517:main.c        ****             break;
 2350              		.loc 1 517 0
 2351 0074 0CE0     		b	.L128
 2352              	.L140:
 518:main.c        ****         case ForwardAfterTurn:
 519:main.c        ****             moveForward();
 2353              		.loc 1 519 0
 2354 0076 FFF7FEFF 		bl	moveForward
 520:main.c        ****             break;
 2355              		.loc 1 520 0
 2356 007a 09E0     		b	.L128
 2357              	.L141:
 521:main.c        ****         case Backward:
 522:main.c        ****             moveBackward();
 2358              		.loc 1 522 0
 2359 007c FFF7FEFF 		bl	moveBackward
 523:main.c        ****             break;
 2360              		.loc 1 523 0
 2361 0080 06E0     		b	.L128
 2362              	.L139:
 524:main.c        ****         case waitForLeftTurn:
 525:main.c        ****             moveForward();
 2363              		.loc 1 525 0
 2364 0082 FFF7FEFF 		bl	moveForward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 52


 526:main.c        ****             break;
 2365              		.loc 1 526 0
 2366 0086 03E0     		b	.L128
 2367              	.L138:
 527:main.c        ****         case waitForRightTurn:
 528:main.c        ****             moveForward();
 2368              		.loc 1 528 0
 2369 0088 FFF7FEFF 		bl	moveForward
 529:main.c        ****             break;
 2370              		.loc 1 529 0
 2371 008c 00E0     		b	.L128
 2372              	.L143:
 530:main.c        ****         case Unknown:
 531:main.c        ****             // UNKNOWN CONFIGURATION
 532:main.c        ****             break;  
 2373              		.loc 1 532 0
 2374 008e 00BF     		nop
 2375              	.L128:
 2376              	.L142:
 533:main.c        ****     }
 534:main.c        **** }...
 2377              		.loc 1 534 0
 2378 0090 00BF     		nop
 2379 0092 80BD     		pop	{r7, pc}
 2380              	.L145:
 2381              		.align	2
 2382              	.L144:
 2383 0094 00000000 		.word	currentDirection
 2384              		.cfi_endproc
 2385              	.LFE76:
 2386              		.size	SetRobotMovement, .-SetRobotMovement
 2387              		.text
 2388              	.Letext0:
 2389              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2390              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2391              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2392              		.file 5 "vars.h"
 2393              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2394              		.file 7 "map.h"
 2395              		.section	.debug_info,"",%progbits
 2396              	.Ldebug_info0:
 2397 0000 C6060000 		.4byte	0x6c6
 2398 0004 0400     		.2byte	0x4
 2399 0006 00000000 		.4byte	.Ldebug_abbrev0
 2400 000a 04       		.byte	0x4
 2401 000b 01       		.uleb128 0x1
 2402 000c C0000000 		.4byte	.LASF107
 2403 0010 0C       		.byte	0xc
 2404 0011 B7040000 		.4byte	.LASF108
 2405 0015 F1030000 		.4byte	.LASF109
 2406 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2407 001d 00000000 		.4byte	0
 2408 0021 00000000 		.4byte	.Ldebug_line0
 2409 0025 02       		.uleb128 0x2
 2410 0026 01       		.byte	0x1
 2411 0027 06       		.byte	0x6
 2412 0028 18030000 		.4byte	.LASF0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 53


 2413 002c 02       		.uleb128 0x2
 2414 002d 01       		.byte	0x1
 2415 002e 08       		.byte	0x8
 2416 002f 7D020000 		.4byte	.LASF1
 2417 0033 02       		.uleb128 0x2
 2418 0034 02       		.byte	0x2
 2419 0035 05       		.byte	0x5
 2420 0036 7C000000 		.4byte	.LASF2
 2421 003a 02       		.uleb128 0x2
 2422 003b 02       		.byte	0x2
 2423 003c 07       		.byte	0x7
 2424 003d AD030000 		.4byte	.LASF3
 2425 0041 03       		.uleb128 0x3
 2426 0042 1A050000 		.4byte	.LASF12
 2427 0046 02       		.byte	0x2
 2428 0047 3F       		.byte	0x3f
 2429 0048 4C000000 		.4byte	0x4c
 2430 004c 02       		.uleb128 0x2
 2431 004d 04       		.byte	0x4
 2432 004e 05       		.byte	0x5
 2433 004f E0030000 		.4byte	.LASF4
 2434 0053 02       		.uleb128 0x2
 2435 0054 04       		.byte	0x4
 2436 0055 07       		.byte	0x7
 2437 0056 BE040000 		.4byte	.LASF5
 2438 005a 02       		.uleb128 0x2
 2439 005b 08       		.byte	0x8
 2440 005c 05       		.byte	0x5
 2441 005d DA010000 		.4byte	.LASF6
 2442 0061 02       		.uleb128 0x2
 2443 0062 08       		.byte	0x8
 2444 0063 07       		.byte	0x7
 2445 0064 2C030000 		.4byte	.LASF7
 2446 0068 04       		.uleb128 0x4
 2447 0069 04       		.byte	0x4
 2448 006a 05       		.byte	0x5
 2449 006b 696E7400 		.ascii	"int\000"
 2450 006f 02       		.uleb128 0x2
 2451 0070 04       		.byte	0x4
 2452 0071 07       		.byte	0x7
 2453 0072 54030000 		.4byte	.LASF8
 2454 0076 02       		.uleb128 0x2
 2455 0077 08       		.byte	0x8
 2456 0078 04       		.byte	0x4
 2457 0079 A3020000 		.4byte	.LASF9
 2458 007d 02       		.uleb128 0x2
 2459 007e 04       		.byte	0x4
 2460 007f 07       		.byte	0x7
 2461 0080 93000000 		.4byte	.LASF10
 2462 0084 02       		.uleb128 0x2
 2463 0085 01       		.byte	0x1
 2464 0086 08       		.byte	0x8
 2465 0087 DB030000 		.4byte	.LASF11
 2466 008b 03       		.uleb128 0x3
 2467 008c 24030000 		.4byte	.LASF13
 2468 0090 03       		.byte	0x3
 2469 0091 2C       		.byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 54


 2470 0092 41000000 		.4byte	0x41
 2471 0096 05       		.uleb128 0x5
 2472 0097 AA010000 		.4byte	.LASF14
 2473 009b 04       		.byte	0x4
 2474 009c E701     		.2byte	0x1e7
 2475 009e 2C000000 		.4byte	0x2c
 2476 00a2 05       		.uleb128 0x5
 2477 00a3 8C010000 		.4byte	.LASF15
 2478 00a7 04       		.byte	0x4
 2479 00a8 E801     		.2byte	0x1e8
 2480 00aa 3A000000 		.4byte	0x3a
 2481 00ae 05       		.uleb128 0x5
 2482 00af B0040000 		.4byte	.LASF16
 2483 00b3 04       		.byte	0x4
 2484 00b4 E901     		.2byte	0x1e9
 2485 00b6 53000000 		.4byte	0x53
 2486 00ba 05       		.uleb128 0x5
 2487 00bb E8010000 		.4byte	.LASF17
 2488 00bf 04       		.byte	0x4
 2489 00c0 EA01     		.2byte	0x1ea
 2490 00c2 25000000 		.4byte	0x25
 2491 00c6 05       		.uleb128 0x5
 2492 00c7 A4010000 		.4byte	.LASF18
 2493 00cb 04       		.byte	0x4
 2494 00cc EB01     		.2byte	0x1eb
 2495 00ce 33000000 		.4byte	0x33
 2496 00d2 02       		.uleb128 0x2
 2497 00d3 04       		.byte	0x4
 2498 00d4 04       		.byte	0x4
 2499 00d5 C2010000 		.4byte	.LASF19
 2500 00d9 02       		.uleb128 0x2
 2501 00da 08       		.byte	0x8
 2502 00db 04       		.byte	0x4
 2503 00dc D9040000 		.4byte	.LASF20
 2504 00e0 06       		.uleb128 0x6
 2505 00e1 C0030000 		.4byte	.LASF110
 2506 00e5 20       		.byte	0x20
 2507 00e6 05       		.byte	0x5
 2508 00e7 28       		.byte	0x28
 2509 00e8 B9010000 		.4byte	0x1b9
 2510 00ec 07       		.uleb128 0x7
 2511 00ed D9050000 		.4byte	.LASF21
 2512 00f1 05       		.byte	0x5
 2513 00f2 2A       		.byte	0x2a
 2514 00f3 BA000000 		.4byte	0xba
 2515 00f7 00       		.byte	0
 2516 00f8 07       		.uleb128 0x7
 2517 00f9 93010000 		.4byte	.LASF22
 2518 00fd 05       		.byte	0x5
 2519 00fe 2B       		.byte	0x2b
 2520 00ff 96000000 		.4byte	0x96
 2521 0103 01       		.byte	0x1
 2522 0104 07       		.uleb128 0x7
 2523 0105 94040000 		.4byte	.LASF23
 2524 0109 05       		.byte	0x5
 2525 010a 2C       		.byte	0x2c
 2526 010b C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 55


 2527 010f 02       		.byte	0x2
 2528 0110 07       		.uleb128 0x7
 2529 0111 89050000 		.4byte	.LASF24
 2530 0115 05       		.byte	0x5
 2531 0116 2D       		.byte	0x2d
 2532 0117 C6000000 		.4byte	0xc6
 2533 011b 04       		.byte	0x4
 2534 011c 07       		.uleb128 0x7
 2535 011d 31050000 		.4byte	.LASF25
 2536 0121 05       		.byte	0x5
 2537 0122 2E       		.byte	0x2e
 2538 0123 C6000000 		.4byte	0xc6
 2539 0127 06       		.byte	0x6
 2540 0128 07       		.uleb128 0x7
 2541 0129 1C020000 		.4byte	.LASF26
 2542 012d 05       		.byte	0x5
 2543 012e 2F       		.byte	0x2f
 2544 012f C6000000 		.4byte	0xc6
 2545 0133 08       		.byte	0x8
 2546 0134 07       		.uleb128 0x7
 2547 0135 29050000 		.4byte	.LASF27
 2548 0139 05       		.byte	0x5
 2549 013a 30       		.byte	0x30
 2550 013b C6000000 		.4byte	0xc6
 2551 013f 0A       		.byte	0xa
 2552 0140 07       		.uleb128 0x7
 2553 0141 ED020000 		.4byte	.LASF28
 2554 0145 05       		.byte	0x5
 2555 0146 31       		.byte	0x31
 2556 0147 C6000000 		.4byte	0xc6
 2557 014b 0C       		.byte	0xc
 2558 014c 07       		.uleb128 0x7
 2559 014d 0F020000 		.4byte	.LASF29
 2560 0151 05       		.byte	0x5
 2561 0152 32       		.byte	0x32
 2562 0153 C6000000 		.4byte	0xc6
 2563 0157 0E       		.byte	0xe
 2564 0158 07       		.uleb128 0x7
 2565 0159 10030000 		.4byte	.LASF30
 2566 015d 05       		.byte	0x5
 2567 015e 33       		.byte	0x33
 2568 015f C6000000 		.4byte	0xc6
 2569 0163 10       		.byte	0x10
 2570 0164 07       		.uleb128 0x7
 2571 0165 50040000 		.4byte	.LASF31
 2572 0169 05       		.byte	0x5
 2573 016a 34       		.byte	0x34
 2574 016b C6000000 		.4byte	0xc6
 2575 016f 12       		.byte	0x12
 2576 0170 07       		.uleb128 0x7
 2577 0171 65040000 		.4byte	.LASF32
 2578 0175 05       		.byte	0x5
 2579 0176 35       		.byte	0x35
 2580 0177 C6000000 		.4byte	0xc6
 2581 017b 14       		.byte	0x14
 2582 017c 07       		.uleb128 0x7
 2583 017d B0010000 		.4byte	.LASF33
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 56


 2584 0181 05       		.byte	0x5
 2585 0182 36       		.byte	0x36
 2586 0183 C6000000 		.4byte	0xc6
 2587 0187 16       		.byte	0x16
 2588 0188 07       		.uleb128 0x7
 2589 0189 74000000 		.4byte	.LASF34
 2590 018d 05       		.byte	0x5
 2591 018e 37       		.byte	0x37
 2592 018f C6000000 		.4byte	0xc6
 2593 0193 18       		.byte	0x18
 2594 0194 07       		.uleb128 0x7
 2595 0195 07020000 		.4byte	.LASF35
 2596 0199 05       		.byte	0x5
 2597 019a 38       		.byte	0x38
 2598 019b C6000000 		.4byte	0xc6
 2599 019f 1A       		.byte	0x1a
 2600 01a0 07       		.uleb128 0x7
 2601 01a1 98030000 		.4byte	.LASF36
 2602 01a5 05       		.byte	0x5
 2603 01a6 39       		.byte	0x39
 2604 01a7 C6000000 		.4byte	0xc6
 2605 01ab 1C       		.byte	0x1c
 2606 01ac 07       		.uleb128 0x7
 2607 01ad 58040000 		.4byte	.LASF37
 2608 01b1 05       		.byte	0x5
 2609 01b2 3A       		.byte	0x3a
 2610 01b3 C6000000 		.4byte	0xc6
 2611 01b7 1E       		.byte	0x1e
 2612 01b8 00       		.byte	0
 2613 01b9 08       		.uleb128 0x8
 2614 01ba A7000000 		.4byte	.LASF50
 2615 01be 04       		.byte	0x4
 2616 01bf 6F000000 		.4byte	0x6f
 2617 01c3 01       		.byte	0x1
 2618 01c4 28       		.byte	0x28
 2619 01c5 12020000 		.4byte	0x212
 2620 01c9 09       		.uleb128 0x9
 2621 01ca E9030000 		.4byte	.LASF38
 2622 01ce 00       		.byte	0
 2623 01cf 09       		.uleb128 0x9
 2624 01d0 9F040000 		.4byte	.LASF39
 2625 01d4 01       		.byte	0x1
 2626 01d5 09       		.uleb128 0x9
 2627 01d6 1D000000 		.4byte	.LASF40
 2628 01da 02       		.byte	0x2
 2629 01db 09       		.uleb128 0x9
 2630 01dc 7C010000 		.4byte	.LASF41
 2631 01e0 03       		.byte	0x3
 2632 01e1 09       		.uleb128 0x9
 2633 01e2 43030000 		.4byte	.LASF42
 2634 01e6 04       		.byte	0x4
 2635 01e7 09       		.uleb128 0x9
 2636 01e8 24050000 		.4byte	.LASF43
 2637 01ec 05       		.byte	0x5
 2638 01ed 09       		.uleb128 0x9
 2639 01ee E0040000 		.4byte	.LASF44
 2640 01f2 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 57


 2641 01f3 09       		.uleb128 0x9
 2642 01f4 5A000000 		.4byte	.LASF45
 2643 01f8 07       		.byte	0x7
 2644 01f9 09       		.uleb128 0x9
 2645 01fa 53010000 		.4byte	.LASF46
 2646 01fe 08       		.byte	0x8
 2647 01ff 09       		.uleb128 0x9
 2648 0200 4E050000 		.4byte	.LASF47
 2649 0204 09       		.byte	0x9
 2650 0205 09       		.uleb128 0x9
 2651 0206 3D000000 		.4byte	.LASF48
 2652 020a 0A       		.byte	0xa
 2653 020b 09       		.uleb128 0x9
 2654 020c D0040000 		.4byte	.LASF49
 2655 0210 0B       		.byte	0xb
 2656 0211 00       		.byte	0
 2657 0212 08       		.uleb128 0x8
 2658 0213 DE050000 		.4byte	.LASF51
 2659 0217 01       		.byte	0x1
 2660 0218 2C000000 		.4byte	0x2c
 2661 021c 01       		.byte	0x1
 2662 021d 2A       		.byte	0x2a
 2663 021e 3A020000 		.4byte	0x23a
 2664 0222 0A       		.uleb128 0xa
 2665 0223 557000   		.ascii	"Up\000"
 2666 0226 00       		.byte	0
 2667 0227 09       		.uleb128 0x9
 2668 0228 B4050000 		.4byte	.LASF52
 2669 022c 01       		.byte	0x1
 2670 022d 09       		.uleb128 0x9
 2671 022e 38020000 		.4byte	.LASF53
 2672 0232 02       		.byte	0x2
 2673 0233 09       		.uleb128 0x9
 2674 0234 C8010000 		.4byte	.LASF54
 2675 0238 03       		.byte	0x3
 2676 0239 00       		.byte	0
 2677 023a 0B       		.uleb128 0xb
 2678 023b 99010000 		.4byte	.LASF62
 2679 023f 01       		.byte	0x1
 2680 0240 46       		.byte	0x46
 2681 0241 00000000 		.4byte	.LFB64
 2682 0245 DC000000 		.4byte	.LFE64-.LFB64
 2683 0249 01       		.uleb128 0x1
 2684 024a 9C       		.byte	0x9c
 2685 024b 68020000 		.4byte	0x268
 2686 024f 0C       		.uleb128 0xc
 2687 0250 40000000 		.4byte	.LBB2
 2688 0254 62000000 		.4byte	.LBE2-.LBB2
 2689 0258 0D       		.uleb128 0xd
 2690 0259 CE010000 		.4byte	.LASF61
 2691 025d 01       		.byte	0x1
 2692 025e 53       		.byte	0x53
 2693 025f D2000000 		.4byte	0xd2
 2694 0263 02       		.uleb128 0x2
 2695 0264 91       		.byte	0x91
 2696 0265 6C       		.sleb128 -20
 2697 0266 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 58


 2698 0267 00       		.byte	0
 2699 0268 0E       		.uleb128 0xe
 2700 0269 F3040000 		.4byte	.LASF55
 2701 026d 01       		.byte	0x1
 2702 026e 5E       		.byte	0x5e
 2703 026f 00000000 		.4byte	.LFB65
 2704 0273 18000000 		.4byte	.LFE65-.LFB65
 2705 0277 01       		.uleb128 0x1
 2706 0278 9C       		.byte	0x9c
 2707 0279 0E       		.uleb128 0xe
 2708 027a 70010000 		.4byte	.LASF56
 2709 027e 01       		.byte	0x1
 2710 027f 64       		.byte	0x64
 2711 0280 00000000 		.4byte	.LFB66
 2712 0284 18000000 		.4byte	.LFE66-.LFB66
 2713 0288 01       		.uleb128 0x1
 2714 0289 9C       		.byte	0x9c
 2715 028a 0E       		.uleb128 0xe
 2716 028b A1030000 		.4byte	.LASF57
 2717 028f 01       		.byte	0x1
 2718 0290 6A       		.byte	0x6a
 2719 0291 00000000 		.4byte	.LFB67
 2720 0295 18000000 		.4byte	.LFE67-.LFB67
 2721 0299 01       		.uleb128 0x1
 2722 029a 9C       		.byte	0x9c
 2723 029b 0E       		.uleb128 0xe
 2724 029c 00000000 		.4byte	.LASF58
 2725 02a0 01       		.byte	0x1
 2726 02a1 70       		.byte	0x70
 2727 02a2 00000000 		.4byte	.LFB68
 2728 02a6 18000000 		.4byte	.LFE68-.LFB68
 2729 02aa 01       		.uleb128 0x1
 2730 02ab 9C       		.byte	0x9c
 2731 02ac 0F       		.uleb128 0xf
 2732 02ad 8B030000 		.4byte	.LASF59
 2733 02b1 01       		.byte	0x1
 2734 02b2 76       		.byte	0x76
 2735 02b3 00000000 		.4byte	.LFB69
 2736 02b7 38000000 		.4byte	.LFE69-.LFB69
 2737 02bb 01       		.uleb128 0x1
 2738 02bc 9C       		.byte	0x9c
 2739 02bd 10       		.uleb128 0x10
 2740 02be 4E010000 		.4byte	.LASF60
 2741 02c2 01       		.byte	0x1
 2742 02c3 82       		.byte	0x82
 2743 02c4 68000000 		.4byte	0x68
 2744 02c8 00000000 		.4byte	.LFB70
 2745 02cc A0000000 		.4byte	.LFE70-.LFB70
 2746 02d0 01       		.uleb128 0x1
 2747 02d1 9C       		.byte	0x9c
 2748 02d2 11       		.uleb128 0x11
 2749 02d3 5E050000 		.4byte	.LASF111
 2750 02d7 01       		.byte	0x1
 2751 02d8 B2       		.byte	0xb2
 2752 02d9 C6000000 		.4byte	0xc6
 2753 02dd 00000000 		.4byte	.LFB71
 2754 02e1 54000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 59


 2755 02e5 01       		.uleb128 0x1
 2756 02e6 9C       		.byte	0x9c
 2757 02e7 16030000 		.4byte	0x316
 2758 02eb 12       		.uleb128 0x12
 2759 02ec 08050000 		.4byte	.LASF112
 2760 02f0 01       		.byte	0x1
 2761 02f1 B2       		.byte	0xb2
 2762 02f2 A2000000 		.4byte	0xa2
 2763 02f6 02       		.uleb128 0x2
 2764 02f7 91       		.byte	0x91
 2765 02f8 66       		.sleb128 -26
 2766 02f9 13       		.uleb128 0x13
 2767 02fa 63707300 		.ascii	"cps\000"
 2768 02fe 01       		.byte	0x1
 2769 02ff B4       		.byte	0xb4
 2770 0300 D2000000 		.4byte	0xd2
 2771 0304 02       		.uleb128 0x2
 2772 0305 91       		.byte	0x91
 2773 0306 6C       		.sleb128 -20
 2774 0307 13       		.uleb128 0x13
 2775 0308 72706D00 		.ascii	"rpm\000"
 2776 030c 01       		.byte	0x1
 2777 030d B5       		.byte	0xb5
 2778 030e C6000000 		.4byte	0xc6
 2779 0312 02       		.uleb128 0x2
 2780 0313 91       		.byte	0x91
 2781 0314 6A       		.sleb128 -22
 2782 0315 00       		.byte	0
 2783 0316 14       		.uleb128 0x14
 2784 0317 CA030000 		.4byte	.LASF68
 2785 031b 01       		.byte	0x1
 2786 031c BD       		.byte	0xbd
 2787 031d 00000000 		.4byte	.LFB72
 2788 0321 34000000 		.4byte	.LFE72-.LFB72
 2789 0325 01       		.uleb128 0x1
 2790 0326 9C       		.byte	0x9c
 2791 0327 15       		.uleb128 0x15
 2792 0328 64010000 		.4byte	.LASF63
 2793 032c 01       		.byte	0x1
 2794 032d C9       		.byte	0xc9
 2795 032e B9010000 		.4byte	0x1b9
 2796 0332 00000000 		.4byte	.LFB73
 2797 0336 98040000 		.4byte	.LFE73-.LFB73
 2798 033a 01       		.uleb128 0x1
 2799 033b 9C       		.byte	0x9c
 2800 033c 4F030000 		.4byte	0x34f
 2801 0340 0D       		.uleb128 0xd
 2802 0341 CA050000 		.4byte	.LASF64
 2803 0345 01       		.byte	0x1
 2804 0346 CA       		.byte	0xca
 2805 0347 B9010000 		.4byte	0x1b9
 2806 034b 02       		.uleb128 0x2
 2807 034c 91       		.byte	0x91
 2808 034d 74       		.sleb128 -12
 2809 034e 00       		.byte	0
 2810 034f 16       		.uleb128 0x16
 2811 0350 26000000 		.4byte	.LASF65
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 60


 2812 0354 01       		.byte	0x1
 2813 0355 1C01     		.2byte	0x11c
 2814 0357 B9010000 		.4byte	0x1b9
 2815 035b 00000000 		.4byte	.LFB74
 2816 035f 70010000 		.4byte	.LFE74-.LFB74
 2817 0363 01       		.uleb128 0x1
 2818 0364 9C       		.byte	0x9c
 2819 0365 17       		.uleb128 0x17
 2820 0366 3D020000 		.4byte	.LASF66
 2821 036a 01       		.byte	0x1
 2822 036b 3801     		.2byte	0x138
 2823 036d B9010000 		.4byte	0x1b9
 2824 0371 00000000 		.4byte	.LFB75
 2825 0375 58030000 		.4byte	.LFE75-.LFB75
 2826 0379 01       		.uleb128 0x1
 2827 037a 9C       		.byte	0x9c
 2828 037b 9E030000 		.4byte	0x39e
 2829 037f 18       		.uleb128 0x18
 2830 0380 73020000 		.4byte	.LASF67
 2831 0384 01       		.byte	0x1
 2832 0385 3901     		.2byte	0x139
 2833 0387 D2000000 		.4byte	0xd2
 2834 038b 02       		.uleb128 0x2
 2835 038c 91       		.byte	0x91
 2836 038d 74       		.sleb128 -12
 2837 038e 18       		.uleb128 0x18
 2838 038f CA050000 		.4byte	.LASF64
 2839 0393 01       		.byte	0x1
 2840 0394 3F01     		.2byte	0x13f
 2841 0396 B9010000 		.4byte	0x1b9
 2842 039a 02       		.uleb128 0x2
 2843 039b 91       		.byte	0x91
 2844 039c 70       		.sleb128 -16
 2845 039d 00       		.byte	0
 2846 039e 19       		.uleb128 0x19
 2847 039f 7A030000 		.4byte	.LASF69
 2848 03a3 01       		.byte	0x1
 2849 03a4 EC01     		.2byte	0x1ec
 2850 03a6 00000000 		.4byte	.LFB76
 2851 03aa 98000000 		.4byte	.LFE76-.LFB76
 2852 03ae 01       		.uleb128 0x1
 2853 03af 9C       		.byte	0x9c
 2854 03b0 1A       		.uleb128 0x1a
 2855 03b1 94050000 		.4byte	.LASF70
 2856 03b5 06       		.byte	0x6
 2857 03b6 1207     		.2byte	0x712
 2858 03b8 BC030000 		.4byte	0x3bc
 2859 03bc 1B       		.uleb128 0x1b
 2860 03bd 8B000000 		.4byte	0x8b
 2861 03c1 1C       		.uleb128 0x1c
 2862 03c2 747300   		.ascii	"ts\000"
 2863 03c5 05       		.byte	0x5
 2864 03c6 10       		.byte	0x10
 2865 03c7 96000000 		.4byte	0x96
 2866 03cb 05       		.uleb128 0x5
 2867 03cc 03       		.byte	0x3
 2868 03cd 00000000 		.4byte	ts
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 61


 2869 03d1 1D       		.uleb128 0x1d
 2870 03d2 36000000 		.4byte	.LASF71
 2871 03d6 05       		.byte	0x5
 2872 03d7 11       		.byte	0x11
 2873 03d8 A2000000 		.4byte	0xa2
 2874 03dc 05       		.uleb128 0x5
 2875 03dd 03       		.byte	0x3
 2876 03de 00000000 		.4byte	ts_enc
 2877 03e2 1D       		.uleb128 0x1d
 2878 03e3 61030000 		.4byte	.LASF72
 2879 03e7 05       		.byte	0x5
 2880 03e8 12       		.byte	0x12
 2881 03e9 A2000000 		.4byte	0xa2
 2882 03ed 05       		.uleb128 0x5
 2883 03ee 03       		.byte	0x3
 2884 03ef 00000000 		.4byte	ts_update
 2885 03f3 1D       		.uleb128 0x1d
 2886 03f4 FF040000 		.4byte	.LASF73
 2887 03f8 05       		.byte	0x5
 2888 03f9 13       		.byte	0x13
 2889 03fa A2000000 		.4byte	0xa2
 2890 03fe 05       		.uleb128 0x5
 2891 03ff 03       		.byte	0x3
 2892 0400 00000000 		.4byte	ts_speed
 2893 0404 1D       		.uleb128 0x1d
 2894 0405 43050000 		.4byte	.LASF74
 2895 0409 05       		.byte	0x5
 2896 040a 14       		.byte	0x14
 2897 040b A2000000 		.4byte	0xa2
 2898 040f 05       		.uleb128 0x5
 2899 0410 03       		.byte	0x3
 2900 0411 00000000 		.4byte	ts_display
 2901 0415 1D       		.uleb128 0x1d
 2902 0416 0E050000 		.4byte	.LASF75
 2903 041a 05       		.byte	0x5
 2904 041b 16       		.byte	0x16
 2905 041c 96000000 		.4byte	0x96
 2906 0420 05       		.uleb128 0x5
 2907 0421 03       		.byte	0x3
 2908 0422 00000000 		.4byte	flag_ts_enc
 2909 0426 1D       		.uleb128 0x1d
 2910 0427 F8010000 		.4byte	.LASF76
 2911 042b 05       		.byte	0x5
 2912 042c 17       		.byte	0x17
 2913 042d 96000000 		.4byte	0x96
 2914 0431 05       		.uleb128 0x5
 2915 0432 03       		.byte	0x3
 2916 0433 00000000 		.4byte	flag_ts_update
 2917 0437 1D       		.uleb128 0x1d
 2918 0438 66000000 		.4byte	.LASF77
 2919 043c 05       		.byte	0x5
 2920 043d 18       		.byte	0x18
 2921 043e 96000000 		.4byte	0x96
 2922 0442 05       		.uleb128 0x5
 2923 0443 03       		.byte	0x3
 2924 0444 00000000 		.4byte	flag_ts_speed
 2925 0448 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 62


 2926 0449 5B020000 		.4byte	.LASF78
 2927 044d 05       		.byte	0x5
 2928 044e 19       		.byte	0x19
 2929 044f 96000000 		.4byte	0x96
 2930 0453 05       		.uleb128 0x5
 2931 0454 03       		.byte	0x3
 2932 0455 00000000 		.4byte	flag_ts_display
 2933 0459 1D       		.uleb128 0x1d
 2934 045a 6B020000 		.4byte	.LASF79
 2935 045e 05       		.byte	0x5
 2936 045f 1B       		.byte	0x1b
 2937 0460 96000000 		.4byte	0x96
 2938 0464 05       		.uleb128 0x5
 2939 0465 03       		.byte	0x3
 2940 0466 00000000 		.4byte	flag_rx
 2941 046a 1D       		.uleb128 0x1d
 2942 046b 4E000000 		.4byte	.LASF80
 2943 046f 05       		.byte	0x5
 2944 0470 1C       		.byte	0x1c
 2945 0471 96000000 		.4byte	0x96
 2946 0475 05       		.uleb128 0x5
 2947 0476 03       		.byte	0x3
 2948 0477 00000000 		.4byte	flag_packet
 2949 047b 1D       		.uleb128 0x1d
 2950 047c 6B030000 		.4byte	.LASF81
 2951 0480 05       		.byte	0x5
 2952 0481 1D       		.byte	0x1d
 2953 0482 96000000 		.4byte	0x96
 2954 0486 05       		.uleb128 0x5
 2955 0487 03       		.byte	0x3
 2956 0488 00000000 		.4byte	flag_KB_string
 2957 048c 1D       		.uleb128 0x1d
 2958 048d 01030000 		.4byte	.LASF82
 2959 0491 05       		.byte	0x5
 2960 0492 1F       		.byte	0x1f
 2961 0493 96000000 		.4byte	0x96
 2962 0497 05       		.uleb128 0x5
 2963 0498 03       		.byte	0x3
 2964 0499 00000000 		.4byte	dataready_flag
 2965 049d 1D       		.uleb128 0x1d
 2966 049e 6D050000 		.4byte	.LASF83
 2967 04a2 05       		.byte	0x5
 2968 04a3 21       		.byte	0x21
 2969 04a4 96000000 		.4byte	0x96
 2970 04a8 05       		.uleb128 0x5
 2971 04a9 03       		.byte	0x3
 2972 04aa 00000000 		.4byte	flag_rf_transmission_active
 2973 04ae 1E       		.uleb128 0x1e
 2974 04af 84000000 		.4byte	0x84
 2975 04b3 BE040000 		.4byte	0x4be
 2976 04b7 1F       		.uleb128 0x1f
 2977 04b8 7D000000 		.4byte	0x7d
 2978 04bc 3F       		.byte	0x3f
 2979 04bd 00       		.byte	0
 2980 04be 1D       		.uleb128 0x1d
 2981 04bf 79040000 		.4byte	.LASF84
 2982 04c3 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 63


 2983 04c4 24       		.byte	0x24
 2984 04c5 AE040000 		.4byte	0x4ae
 2985 04c9 05       		.uleb128 0x5
 2986 04ca 03       		.byte	0x3
 2987 04cb 00000000 		.4byte	displaystring
 2988 04cf 1D       		.uleb128 0x1d
 2989 04d0 BD010000 		.4byte	.LASF85
 2990 04d4 05       		.byte	0x5
 2991 04d5 25       		.byte	0x25
 2992 04d6 AE040000 		.4byte	0x4ae
 2993 04da 05       		.uleb128 0x5
 2994 04db 03       		.byte	0x3
 2995 04dc 00000000 		.4byte	line
 2996 04e0 1D       		.uleb128 0x1d
 2997 04e1 9D020000 		.4byte	.LASF86
 2998 04e5 05       		.byte	0x5
 2999 04e6 25       		.byte	0x25
 3000 04e7 AE040000 		.4byte	0x4ae
 3001 04eb 05       		.uleb128 0x5
 3002 04ec 03       		.byte	0x3
 3003 04ed 00000000 		.4byte	entry
 3004 04f1 1E       		.uleb128 0x1e
 3005 04f2 96000000 		.4byte	0x96
 3006 04f6 01050000 		.4byte	0x501
 3007 04fa 1F       		.uleb128 0x1f
 3008 04fb 7D000000 		.4byte	0x7d
 3009 04ff 3F       		.byte	0x3f
 3010 0500 00       		.byte	0
 3011 0501 1D       		.uleb128 0x1d
 3012 0502 B6000000 		.4byte	.LASF87
 3013 0506 05       		.byte	0x5
 3014 0507 26       		.byte	0x26
 3015 0508 F1040000 		.4byte	0x4f1
 3016 050c 05       		.uleb128 0x5
 3017 050d 03       		.byte	0x3
 3018 050e 00000000 		.4byte	usbBuffer
 3019 0512 1D       		.uleb128 0x1d
 3020 0513 86000000 		.4byte	.LASF88
 3021 0517 05       		.byte	0x5
 3022 0518 3C       		.byte	0x3c
 3023 0519 E0000000 		.4byte	0xe0
 3024 051d 05       		.uleb128 0x5
 3025 051e 03       		.byte	0x3
 3026 051f 00000000 		.4byte	system_state
 3027 0523 1E       		.uleb128 0x1e
 3028 0524 68000000 		.4byte	0x68
 3029 0528 39050000 		.4byte	0x539
 3030 052c 1F       		.uleb128 0x1f
 3031 052d 7D000000 		.4byte	0x7d
 3032 0531 0E       		.byte	0xe
 3033 0532 1F       		.uleb128 0x1f
 3034 0533 7D000000 		.4byte	0x7d
 3035 0537 12       		.byte	0x12
 3036 0538 00       		.byte	0
 3037 0539 20       		.uleb128 0x20
 3038 053a 6D617000 		.ascii	"map\000"
 3039 053e 07       		.byte	0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 64


 3040 053f 04       		.byte	0x4
 3041 0540 23050000 		.4byte	0x523
 3042 0544 1D       		.uleb128 0x1d
 3043 0545 B9050000 		.4byte	.LASF89
 3044 0549 01       		.byte	0x1
 3045 054a 2B       		.byte	0x2b
 3046 054b B9010000 		.4byte	0x1b9
 3047 054f 05       		.uleb128 0x5
 3048 0550 03       		.byte	0x3
 3049 0551 00000000 		.4byte	currentDirection
 3050 0555 1D       		.uleb128 0x1d
 3051 0556 C3020000 		.4byte	.LASF90
 3052 055a 01       		.byte	0x1
 3053 055b 2C       		.byte	0x2c
 3054 055c B9010000 		.4byte	0x1b9
 3055 0560 05       		.uleb128 0x5
 3056 0561 03       		.byte	0x3
 3057 0562 00000000 		.4byte	previousDirection
 3058 0566 1D       		.uleb128 0x1d
 3059 0567 A1050000 		.4byte	.LASF91
 3060 056b 01       		.byte	0x1
 3061 056c 2D       		.byte	0x2d
 3062 056d 12020000 		.4byte	0x212
 3063 0571 05       		.uleb128 0x5
 3064 0572 03       		.byte	0x3
 3065 0573 00000000 		.4byte	currentOrientation
 3066 0577 1D       		.uleb128 0x1d
 3067 0578 24020000 		.4byte	.LASF92
 3068 057c 01       		.byte	0x1
 3069 057d 2E       		.byte	0x2e
 3070 057e 12020000 		.4byte	0x212
 3071 0582 05       		.uleb128 0x5
 3072 0583 03       		.byte	0x3
 3073 0584 00000000 		.4byte	previousOrientation
 3074 0588 1C       		.uleb128 0x1c
 3075 0589 733300   		.ascii	"s3\000"
 3076 058c 01       		.byte	0x1
 3077 058d 33       		.byte	0x33
 3078 058e 96000000 		.4byte	0x96
 3079 0592 05       		.uleb128 0x5
 3080 0593 03       		.byte	0x3
 3081 0594 00000000 		.4byte	s3
 3082 0598 1C       		.uleb128 0x1c
 3083 0599 733400   		.ascii	"s4\000"
 3084 059c 01       		.byte	0x1
 3085 059d 34       		.byte	0x34
 3086 059e 96000000 		.4byte	0x96
 3087 05a2 05       		.uleb128 0x5
 3088 05a3 03       		.byte	0x3
 3089 05a4 00000000 		.4byte	s4
 3090 05a8 1C       		.uleb128 0x1c
 3091 05a9 733500   		.ascii	"s5\000"
 3092 05ac 01       		.byte	0x1
 3093 05ad 35       		.byte	0x35
 3094 05ae 96000000 		.4byte	0x96
 3095 05b2 05       		.uleb128 0x5
 3096 05b3 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 65


 3097 05b4 00000000 		.4byte	s5
 3098 05b8 1C       		.uleb128 0x1c
 3099 05b9 733600   		.ascii	"s6\000"
 3100 05bc 01       		.byte	0x1
 3101 05bd 36       		.byte	0x36
 3102 05be 96000000 		.4byte	0x96
 3103 05c2 05       		.uleb128 0x5
 3104 05c3 03       		.byte	0x3
 3105 05c4 00000000 		.4byte	s6
 3106 05c8 1D       		.uleb128 0x1d
 3107 05c9 8B020000 		.4byte	.LASF93
 3108 05cd 01       		.byte	0x1
 3109 05ce 3B       		.byte	0x3b
 3110 05cf AE000000 		.4byte	0xae
 3111 05d3 05       		.uleb128 0x5
 3112 05d4 03       		.byte	0x3
 3113 05d5 00000000 		.4byte	totalMilliseconds
 3114 05d9 1D       		.uleb128 0x1d
 3115 05da D5020000 		.4byte	.LASF94
 3116 05de 01       		.byte	0x1
 3117 05df 3C       		.byte	0x3c
 3118 05e0 D2000000 		.4byte	0xd2
 3119 05e4 05       		.uleb128 0x5
 3120 05e5 03       		.byte	0x3
 3121 05e6 00000000 		.4byte	totalDistance
 3122 05ea 1E       		.uleb128 0x1e
 3123 05eb 84000000 		.4byte	0x84
 3124 05ef FA050000 		.4byte	0x5fa
 3125 05f3 1F       		.uleb128 0x1f
 3126 05f4 7D000000 		.4byte	0x7d
 3127 05f8 44       		.byte	0x44
 3128 05f9 00       		.byte	0
 3129 05fa 1D       		.uleb128 0x1d
 3130 05fb A9040000 		.4byte	.LASF95
 3131 05ff 01       		.byte	0x1
 3132 0600 3E       		.byte	0x3e
 3133 0601 EA050000 		.4byte	0x5ea
 3134 0605 05       		.uleb128 0x5
 3135 0606 03       		.byte	0x3
 3136 0607 00000000 		.4byte	buffer
 3137 060b 1D       		.uleb128 0x1d
 3138 060c 42040000 		.4byte	.LASF96
 3139 0610 01       		.byte	0x1
 3140 0611 3F       		.byte	0x3f
 3141 0612 68000000 		.4byte	0x68
 3142 0616 05       		.uleb128 0x5
 3143 0617 03       		.byte	0x3
 3144 0618 00000000 		.4byte	quadDec2Count
 3145 061c 1D       		.uleb128 0x1d
 3146 061d 52020000 		.4byte	.LASF97
 3147 0621 01       		.byte	0x1
 3148 0622 40       		.byte	0x40
 3149 0623 68000000 		.4byte	0x68
 3150 0627 05       		.uleb128 0x5
 3151 0628 03       		.byte	0x3
 3152 0629 00000000 		.4byte	timerInt
 3153 062d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 66


 3154 062e E3020000 		.4byte	.LASF98
 3155 0632 01       		.byte	0x1
 3156 0633 41       		.byte	0x41
 3157 0634 68000000 		.4byte	0x68
 3158 0638 05       		.uleb128 0x5
 3159 0639 03       		.byte	0x3
 3160 063a 00000000 		.4byte	keepLedOn
 3161 063e 1D       		.uleb128 0x1d
 3162 063f 9C000000 		.4byte	.LASF99
 3163 0643 01       		.byte	0x1
 3164 0644 42       		.byte	0x42
 3165 0645 AE000000 		.4byte	0xae
 3166 0649 05       		.uleb128 0x5
 3167 064a 03       		.byte	0x3
 3168 064b 00000000 		.4byte	stopBuffer
 3169 064f 1D       		.uleb128 0x1d
 3170 0650 ED010000 		.4byte	.LASF100
 3171 0654 01       		.byte	0x1
 3172 0655 C4       		.byte	0xc4
 3173 0656 D2000000 		.4byte	0xd2
 3174 065a 05       		.uleb128 0x5
 3175 065b 03       		.byte	0x3
 3176 065c 00000000 		.4byte	xBlocksize
 3177 0660 1D       		.uleb128 0x1d
 3178 0661 F6020000 		.4byte	.LASF101
 3179 0665 01       		.byte	0x1
 3180 0666 C5       		.byte	0xc5
 3181 0667 D2000000 		.4byte	0xd2
 3182 066b 05       		.uleb128 0x5
 3183 066c 03       		.byte	0x3
 3184 066d 00000000 		.4byte	yBlocksize
 3185 0671 1D       		.uleb128 0x1d
 3186 0672 E8040000 		.4byte	.LASF102
 3187 0676 01       		.byte	0x1
 3188 0677 C6       		.byte	0xc6
 3189 0678 96000000 		.4byte	0x96
 3190 067c 05       		.uleb128 0x5
 3191 067d 03       		.byte	0x3
 3192 067e 00000000 		.4byte	currentRow
 3193 0682 1D       		.uleb128 0x1d
 3194 0683 6E040000 		.4byte	.LASF103
 3195 0687 01       		.byte	0x1
 3196 0688 C7       		.byte	0xc7
 3197 0689 96000000 		.4byte	0x96
 3198 068d 05       		.uleb128 0x5
 3199 068e 03       		.byte	0x3
 3200 068f 00000000 		.4byte	currentCol
 3201 0693 21       		.uleb128 0x21
 3202 0694 AF020000 		.4byte	.LASF104
 3203 0698 01       		.byte	0x1
 3204 0699 1A01     		.2byte	0x11a
 3205 069b B9010000 		.4byte	0x1b9
 3206 069f 05       		.uleb128 0x5
 3207 06a0 03       		.byte	0x3
 3208 06a1 00000000 		.4byte	directionBeforeStop
 3209 06a5 21       		.uleb128 0x21
 3210 06a6 0C000000 		.4byte	.LASF105
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 67


 3211 06aa 01       		.byte	0x1
 3212 06ab 3501     		.2byte	0x135
 3213 06ad 96000000 		.4byte	0x96
 3214 06b1 05       		.uleb128 0x5
 3215 06b2 03       		.byte	0x3
 3216 06b3 00000000 		.4byte	stoppedAfterTurn
 3217 06b7 21       		.uleb128 0x21
 3218 06b8 87040000 		.4byte	.LASF106
 3219 06bc 01       		.byte	0x1
 3220 06bd 3601     		.2byte	0x136
 3221 06bf 96000000 		.4byte	0x96
 3222 06c3 05       		.uleb128 0x5
 3223 06c4 03       		.byte	0x3
 3224 06c5 00000000 		.4byte	ignoreSensor
 3225 06c9 00       		.byte	0
 3226              		.section	.debug_abbrev,"",%progbits
 3227              	.Ldebug_abbrev0:
 3228 0000 01       		.uleb128 0x1
 3229 0001 11       		.uleb128 0x11
 3230 0002 01       		.byte	0x1
 3231 0003 25       		.uleb128 0x25
 3232 0004 0E       		.uleb128 0xe
 3233 0005 13       		.uleb128 0x13
 3234 0006 0B       		.uleb128 0xb
 3235 0007 03       		.uleb128 0x3
 3236 0008 0E       		.uleb128 0xe
 3237 0009 1B       		.uleb128 0x1b
 3238 000a 0E       		.uleb128 0xe
 3239 000b 55       		.uleb128 0x55
 3240 000c 17       		.uleb128 0x17
 3241 000d 11       		.uleb128 0x11
 3242 000e 01       		.uleb128 0x1
 3243 000f 10       		.uleb128 0x10
 3244 0010 17       		.uleb128 0x17
 3245 0011 00       		.byte	0
 3246 0012 00       		.byte	0
 3247 0013 02       		.uleb128 0x2
 3248 0014 24       		.uleb128 0x24
 3249 0015 00       		.byte	0
 3250 0016 0B       		.uleb128 0xb
 3251 0017 0B       		.uleb128 0xb
 3252 0018 3E       		.uleb128 0x3e
 3253 0019 0B       		.uleb128 0xb
 3254 001a 03       		.uleb128 0x3
 3255 001b 0E       		.uleb128 0xe
 3256 001c 00       		.byte	0
 3257 001d 00       		.byte	0
 3258 001e 03       		.uleb128 0x3
 3259 001f 16       		.uleb128 0x16
 3260 0020 00       		.byte	0
 3261 0021 03       		.uleb128 0x3
 3262 0022 0E       		.uleb128 0xe
 3263 0023 3A       		.uleb128 0x3a
 3264 0024 0B       		.uleb128 0xb
 3265 0025 3B       		.uleb128 0x3b
 3266 0026 0B       		.uleb128 0xb
 3267 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 68


 3268 0028 13       		.uleb128 0x13
 3269 0029 00       		.byte	0
 3270 002a 00       		.byte	0
 3271 002b 04       		.uleb128 0x4
 3272 002c 24       		.uleb128 0x24
 3273 002d 00       		.byte	0
 3274 002e 0B       		.uleb128 0xb
 3275 002f 0B       		.uleb128 0xb
 3276 0030 3E       		.uleb128 0x3e
 3277 0031 0B       		.uleb128 0xb
 3278 0032 03       		.uleb128 0x3
 3279 0033 08       		.uleb128 0x8
 3280 0034 00       		.byte	0
 3281 0035 00       		.byte	0
 3282 0036 05       		.uleb128 0x5
 3283 0037 16       		.uleb128 0x16
 3284 0038 00       		.byte	0
 3285 0039 03       		.uleb128 0x3
 3286 003a 0E       		.uleb128 0xe
 3287 003b 3A       		.uleb128 0x3a
 3288 003c 0B       		.uleb128 0xb
 3289 003d 3B       		.uleb128 0x3b
 3290 003e 05       		.uleb128 0x5
 3291 003f 49       		.uleb128 0x49
 3292 0040 13       		.uleb128 0x13
 3293 0041 00       		.byte	0
 3294 0042 00       		.byte	0
 3295 0043 06       		.uleb128 0x6
 3296 0044 13       		.uleb128 0x13
 3297 0045 01       		.byte	0x1
 3298 0046 03       		.uleb128 0x3
 3299 0047 0E       		.uleb128 0xe
 3300 0048 0B       		.uleb128 0xb
 3301 0049 0B       		.uleb128 0xb
 3302 004a 3A       		.uleb128 0x3a
 3303 004b 0B       		.uleb128 0xb
 3304 004c 3B       		.uleb128 0x3b
 3305 004d 0B       		.uleb128 0xb
 3306 004e 01       		.uleb128 0x1
 3307 004f 13       		.uleb128 0x13
 3308 0050 00       		.byte	0
 3309 0051 00       		.byte	0
 3310 0052 07       		.uleb128 0x7
 3311 0053 0D       		.uleb128 0xd
 3312 0054 00       		.byte	0
 3313 0055 03       		.uleb128 0x3
 3314 0056 0E       		.uleb128 0xe
 3315 0057 3A       		.uleb128 0x3a
 3316 0058 0B       		.uleb128 0xb
 3317 0059 3B       		.uleb128 0x3b
 3318 005a 0B       		.uleb128 0xb
 3319 005b 49       		.uleb128 0x49
 3320 005c 13       		.uleb128 0x13
 3321 005d 38       		.uleb128 0x38
 3322 005e 0B       		.uleb128 0xb
 3323 005f 00       		.byte	0
 3324 0060 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 69


 3325 0061 08       		.uleb128 0x8
 3326 0062 04       		.uleb128 0x4
 3327 0063 01       		.byte	0x1
 3328 0064 03       		.uleb128 0x3
 3329 0065 0E       		.uleb128 0xe
 3330 0066 0B       		.uleb128 0xb
 3331 0067 0B       		.uleb128 0xb
 3332 0068 49       		.uleb128 0x49
 3333 0069 13       		.uleb128 0x13
 3334 006a 3A       		.uleb128 0x3a
 3335 006b 0B       		.uleb128 0xb
 3336 006c 3B       		.uleb128 0x3b
 3337 006d 0B       		.uleb128 0xb
 3338 006e 01       		.uleb128 0x1
 3339 006f 13       		.uleb128 0x13
 3340 0070 00       		.byte	0
 3341 0071 00       		.byte	0
 3342 0072 09       		.uleb128 0x9
 3343 0073 28       		.uleb128 0x28
 3344 0074 00       		.byte	0
 3345 0075 03       		.uleb128 0x3
 3346 0076 0E       		.uleb128 0xe
 3347 0077 1C       		.uleb128 0x1c
 3348 0078 0B       		.uleb128 0xb
 3349 0079 00       		.byte	0
 3350 007a 00       		.byte	0
 3351 007b 0A       		.uleb128 0xa
 3352 007c 28       		.uleb128 0x28
 3353 007d 00       		.byte	0
 3354 007e 03       		.uleb128 0x3
 3355 007f 08       		.uleb128 0x8
 3356 0080 1C       		.uleb128 0x1c
 3357 0081 0B       		.uleb128 0xb
 3358 0082 00       		.byte	0
 3359 0083 00       		.byte	0
 3360 0084 0B       		.uleb128 0xb
 3361 0085 2E       		.uleb128 0x2e
 3362 0086 01       		.byte	0x1
 3363 0087 3F       		.uleb128 0x3f
 3364 0088 19       		.uleb128 0x19
 3365 0089 03       		.uleb128 0x3
 3366 008a 0E       		.uleb128 0xe
 3367 008b 3A       		.uleb128 0x3a
 3368 008c 0B       		.uleb128 0xb
 3369 008d 3B       		.uleb128 0x3b
 3370 008e 0B       		.uleb128 0xb
 3371 008f 27       		.uleb128 0x27
 3372 0090 19       		.uleb128 0x19
 3373 0091 11       		.uleb128 0x11
 3374 0092 01       		.uleb128 0x1
 3375 0093 12       		.uleb128 0x12
 3376 0094 06       		.uleb128 0x6
 3377 0095 40       		.uleb128 0x40
 3378 0096 18       		.uleb128 0x18
 3379 0097 9642     		.uleb128 0x2116
 3380 0099 19       		.uleb128 0x19
 3381 009a 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 70


 3382 009b 13       		.uleb128 0x13
 3383 009c 00       		.byte	0
 3384 009d 00       		.byte	0
 3385 009e 0C       		.uleb128 0xc
 3386 009f 0B       		.uleb128 0xb
 3387 00a0 01       		.byte	0x1
 3388 00a1 11       		.uleb128 0x11
 3389 00a2 01       		.uleb128 0x1
 3390 00a3 12       		.uleb128 0x12
 3391 00a4 06       		.uleb128 0x6
 3392 00a5 00       		.byte	0
 3393 00a6 00       		.byte	0
 3394 00a7 0D       		.uleb128 0xd
 3395 00a8 34       		.uleb128 0x34
 3396 00a9 00       		.byte	0
 3397 00aa 03       		.uleb128 0x3
 3398 00ab 0E       		.uleb128 0xe
 3399 00ac 3A       		.uleb128 0x3a
 3400 00ad 0B       		.uleb128 0xb
 3401 00ae 3B       		.uleb128 0x3b
 3402 00af 0B       		.uleb128 0xb
 3403 00b0 49       		.uleb128 0x49
 3404 00b1 13       		.uleb128 0x13
 3405 00b2 02       		.uleb128 0x2
 3406 00b3 18       		.uleb128 0x18
 3407 00b4 00       		.byte	0
 3408 00b5 00       		.byte	0
 3409 00b6 0E       		.uleb128 0xe
 3410 00b7 2E       		.uleb128 0x2e
 3411 00b8 00       		.byte	0
 3412 00b9 3F       		.uleb128 0x3f
 3413 00ba 19       		.uleb128 0x19
 3414 00bb 03       		.uleb128 0x3
 3415 00bc 0E       		.uleb128 0xe
 3416 00bd 3A       		.uleb128 0x3a
 3417 00be 0B       		.uleb128 0xb
 3418 00bf 3B       		.uleb128 0x3b
 3419 00c0 0B       		.uleb128 0xb
 3420 00c1 27       		.uleb128 0x27
 3421 00c2 19       		.uleb128 0x19
 3422 00c3 11       		.uleb128 0x11
 3423 00c4 01       		.uleb128 0x1
 3424 00c5 12       		.uleb128 0x12
 3425 00c6 06       		.uleb128 0x6
 3426 00c7 40       		.uleb128 0x40
 3427 00c8 18       		.uleb128 0x18
 3428 00c9 9742     		.uleb128 0x2117
 3429 00cb 19       		.uleb128 0x19
 3430 00cc 00       		.byte	0
 3431 00cd 00       		.byte	0
 3432 00ce 0F       		.uleb128 0xf
 3433 00cf 2E       		.uleb128 0x2e
 3434 00d0 00       		.byte	0
 3435 00d1 3F       		.uleb128 0x3f
 3436 00d2 19       		.uleb128 0x19
 3437 00d3 03       		.uleb128 0x3
 3438 00d4 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 71


 3439 00d5 3A       		.uleb128 0x3a
 3440 00d6 0B       		.uleb128 0xb
 3441 00d7 3B       		.uleb128 0x3b
 3442 00d8 0B       		.uleb128 0xb
 3443 00d9 27       		.uleb128 0x27
 3444 00da 19       		.uleb128 0x19
 3445 00db 11       		.uleb128 0x11
 3446 00dc 01       		.uleb128 0x1
 3447 00dd 12       		.uleb128 0x12
 3448 00de 06       		.uleb128 0x6
 3449 00df 40       		.uleb128 0x40
 3450 00e0 18       		.uleb128 0x18
 3451 00e1 9642     		.uleb128 0x2116
 3452 00e3 19       		.uleb128 0x19
 3453 00e4 00       		.byte	0
 3454 00e5 00       		.byte	0
 3455 00e6 10       		.uleb128 0x10
 3456 00e7 2E       		.uleb128 0x2e
 3457 00e8 00       		.byte	0
 3458 00e9 3F       		.uleb128 0x3f
 3459 00ea 19       		.uleb128 0x19
 3460 00eb 03       		.uleb128 0x3
 3461 00ec 0E       		.uleb128 0xe
 3462 00ed 3A       		.uleb128 0x3a
 3463 00ee 0B       		.uleb128 0xb
 3464 00ef 3B       		.uleb128 0x3b
 3465 00f0 0B       		.uleb128 0xb
 3466 00f1 49       		.uleb128 0x49
 3467 00f2 13       		.uleb128 0x13
 3468 00f3 11       		.uleb128 0x11
 3469 00f4 01       		.uleb128 0x1
 3470 00f5 12       		.uleb128 0x12
 3471 00f6 06       		.uleb128 0x6
 3472 00f7 40       		.uleb128 0x40
 3473 00f8 18       		.uleb128 0x18
 3474 00f9 9642     		.uleb128 0x2116
 3475 00fb 19       		.uleb128 0x19
 3476 00fc 00       		.byte	0
 3477 00fd 00       		.byte	0
 3478 00fe 11       		.uleb128 0x11
 3479 00ff 2E       		.uleb128 0x2e
 3480 0100 01       		.byte	0x1
 3481 0101 3F       		.uleb128 0x3f
 3482 0102 19       		.uleb128 0x19
 3483 0103 03       		.uleb128 0x3
 3484 0104 0E       		.uleb128 0xe
 3485 0105 3A       		.uleb128 0x3a
 3486 0106 0B       		.uleb128 0xb
 3487 0107 3B       		.uleb128 0x3b
 3488 0108 0B       		.uleb128 0xb
 3489 0109 27       		.uleb128 0x27
 3490 010a 19       		.uleb128 0x19
 3491 010b 49       		.uleb128 0x49
 3492 010c 13       		.uleb128 0x13
 3493 010d 11       		.uleb128 0x11
 3494 010e 01       		.uleb128 0x1
 3495 010f 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 72


 3496 0110 06       		.uleb128 0x6
 3497 0111 40       		.uleb128 0x40
 3498 0112 18       		.uleb128 0x18
 3499 0113 9642     		.uleb128 0x2116
 3500 0115 19       		.uleb128 0x19
 3501 0116 01       		.uleb128 0x1
 3502 0117 13       		.uleb128 0x13
 3503 0118 00       		.byte	0
 3504 0119 00       		.byte	0
 3505 011a 12       		.uleb128 0x12
 3506 011b 05       		.uleb128 0x5
 3507 011c 00       		.byte	0
 3508 011d 03       		.uleb128 0x3
 3509 011e 0E       		.uleb128 0xe
 3510 011f 3A       		.uleb128 0x3a
 3511 0120 0B       		.uleb128 0xb
 3512 0121 3B       		.uleb128 0x3b
 3513 0122 0B       		.uleb128 0xb
 3514 0123 49       		.uleb128 0x49
 3515 0124 13       		.uleb128 0x13
 3516 0125 02       		.uleb128 0x2
 3517 0126 18       		.uleb128 0x18
 3518 0127 00       		.byte	0
 3519 0128 00       		.byte	0
 3520 0129 13       		.uleb128 0x13
 3521 012a 34       		.uleb128 0x34
 3522 012b 00       		.byte	0
 3523 012c 03       		.uleb128 0x3
 3524 012d 08       		.uleb128 0x8
 3525 012e 3A       		.uleb128 0x3a
 3526 012f 0B       		.uleb128 0xb
 3527 0130 3B       		.uleb128 0x3b
 3528 0131 0B       		.uleb128 0xb
 3529 0132 49       		.uleb128 0x49
 3530 0133 13       		.uleb128 0x13
 3531 0134 02       		.uleb128 0x2
 3532 0135 18       		.uleb128 0x18
 3533 0136 00       		.byte	0
 3534 0137 00       		.byte	0
 3535 0138 14       		.uleb128 0x14
 3536 0139 2E       		.uleb128 0x2e
 3537 013a 00       		.byte	0
 3538 013b 3F       		.uleb128 0x3f
 3539 013c 19       		.uleb128 0x19
 3540 013d 03       		.uleb128 0x3
 3541 013e 0E       		.uleb128 0xe
 3542 013f 3A       		.uleb128 0x3a
 3543 0140 0B       		.uleb128 0xb
 3544 0141 3B       		.uleb128 0x3b
 3545 0142 0B       		.uleb128 0xb
 3546 0143 11       		.uleb128 0x11
 3547 0144 01       		.uleb128 0x1
 3548 0145 12       		.uleb128 0x12
 3549 0146 06       		.uleb128 0x6
 3550 0147 40       		.uleb128 0x40
 3551 0148 18       		.uleb128 0x18
 3552 0149 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 73


 3553 014b 19       		.uleb128 0x19
 3554 014c 00       		.byte	0
 3555 014d 00       		.byte	0
 3556 014e 15       		.uleb128 0x15
 3557 014f 2E       		.uleb128 0x2e
 3558 0150 01       		.byte	0x1
 3559 0151 3F       		.uleb128 0x3f
 3560 0152 19       		.uleb128 0x19
 3561 0153 03       		.uleb128 0x3
 3562 0154 0E       		.uleb128 0xe
 3563 0155 3A       		.uleb128 0x3a
 3564 0156 0B       		.uleb128 0xb
 3565 0157 3B       		.uleb128 0x3b
 3566 0158 0B       		.uleb128 0xb
 3567 0159 49       		.uleb128 0x49
 3568 015a 13       		.uleb128 0x13
 3569 015b 11       		.uleb128 0x11
 3570 015c 01       		.uleb128 0x1
 3571 015d 12       		.uleb128 0x12
 3572 015e 06       		.uleb128 0x6
 3573 015f 40       		.uleb128 0x40
 3574 0160 18       		.uleb128 0x18
 3575 0161 9742     		.uleb128 0x2117
 3576 0163 19       		.uleb128 0x19
 3577 0164 01       		.uleb128 0x1
 3578 0165 13       		.uleb128 0x13
 3579 0166 00       		.byte	0
 3580 0167 00       		.byte	0
 3581 0168 16       		.uleb128 0x16
 3582 0169 2E       		.uleb128 0x2e
 3583 016a 00       		.byte	0
 3584 016b 3F       		.uleb128 0x3f
 3585 016c 19       		.uleb128 0x19
 3586 016d 03       		.uleb128 0x3
 3587 016e 0E       		.uleb128 0xe
 3588 016f 3A       		.uleb128 0x3a
 3589 0170 0B       		.uleb128 0xb
 3590 0171 3B       		.uleb128 0x3b
 3591 0172 05       		.uleb128 0x5
 3592 0173 49       		.uleb128 0x49
 3593 0174 13       		.uleb128 0x13
 3594 0175 11       		.uleb128 0x11
 3595 0176 01       		.uleb128 0x1
 3596 0177 12       		.uleb128 0x12
 3597 0178 06       		.uleb128 0x6
 3598 0179 40       		.uleb128 0x40
 3599 017a 18       		.uleb128 0x18
 3600 017b 9642     		.uleb128 0x2116
 3601 017d 19       		.uleb128 0x19
 3602 017e 00       		.byte	0
 3603 017f 00       		.byte	0
 3604 0180 17       		.uleb128 0x17
 3605 0181 2E       		.uleb128 0x2e
 3606 0182 01       		.byte	0x1
 3607 0183 3F       		.uleb128 0x3f
 3608 0184 19       		.uleb128 0x19
 3609 0185 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 74


 3610 0186 0E       		.uleb128 0xe
 3611 0187 3A       		.uleb128 0x3a
 3612 0188 0B       		.uleb128 0xb
 3613 0189 3B       		.uleb128 0x3b
 3614 018a 05       		.uleb128 0x5
 3615 018b 49       		.uleb128 0x49
 3616 018c 13       		.uleb128 0x13
 3617 018d 11       		.uleb128 0x11
 3618 018e 01       		.uleb128 0x1
 3619 018f 12       		.uleb128 0x12
 3620 0190 06       		.uleb128 0x6
 3621 0191 40       		.uleb128 0x40
 3622 0192 18       		.uleb128 0x18
 3623 0193 9642     		.uleb128 0x2116
 3624 0195 19       		.uleb128 0x19
 3625 0196 01       		.uleb128 0x1
 3626 0197 13       		.uleb128 0x13
 3627 0198 00       		.byte	0
 3628 0199 00       		.byte	0
 3629 019a 18       		.uleb128 0x18
 3630 019b 34       		.uleb128 0x34
 3631 019c 00       		.byte	0
 3632 019d 03       		.uleb128 0x3
 3633 019e 0E       		.uleb128 0xe
 3634 019f 3A       		.uleb128 0x3a
 3635 01a0 0B       		.uleb128 0xb
 3636 01a1 3B       		.uleb128 0x3b
 3637 01a2 05       		.uleb128 0x5
 3638 01a3 49       		.uleb128 0x49
 3639 01a4 13       		.uleb128 0x13
 3640 01a5 02       		.uleb128 0x2
 3641 01a6 18       		.uleb128 0x18
 3642 01a7 00       		.byte	0
 3643 01a8 00       		.byte	0
 3644 01a9 19       		.uleb128 0x19
 3645 01aa 2E       		.uleb128 0x2e
 3646 01ab 00       		.byte	0
 3647 01ac 3F       		.uleb128 0x3f
 3648 01ad 19       		.uleb128 0x19
 3649 01ae 03       		.uleb128 0x3
 3650 01af 0E       		.uleb128 0xe
 3651 01b0 3A       		.uleb128 0x3a
 3652 01b1 0B       		.uleb128 0xb
 3653 01b2 3B       		.uleb128 0x3b
 3654 01b3 05       		.uleb128 0x5
 3655 01b4 11       		.uleb128 0x11
 3656 01b5 01       		.uleb128 0x1
 3657 01b6 12       		.uleb128 0x12
 3658 01b7 06       		.uleb128 0x6
 3659 01b8 40       		.uleb128 0x40
 3660 01b9 18       		.uleb128 0x18
 3661 01ba 9642     		.uleb128 0x2116
 3662 01bc 19       		.uleb128 0x19
 3663 01bd 00       		.byte	0
 3664 01be 00       		.byte	0
 3665 01bf 1A       		.uleb128 0x1a
 3666 01c0 34       		.uleb128 0x34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 75


 3667 01c1 00       		.byte	0
 3668 01c2 03       		.uleb128 0x3
 3669 01c3 0E       		.uleb128 0xe
 3670 01c4 3A       		.uleb128 0x3a
 3671 01c5 0B       		.uleb128 0xb
 3672 01c6 3B       		.uleb128 0x3b
 3673 01c7 05       		.uleb128 0x5
 3674 01c8 49       		.uleb128 0x49
 3675 01c9 13       		.uleb128 0x13
 3676 01ca 3F       		.uleb128 0x3f
 3677 01cb 19       		.uleb128 0x19
 3678 01cc 3C       		.uleb128 0x3c
 3679 01cd 19       		.uleb128 0x19
 3680 01ce 00       		.byte	0
 3681 01cf 00       		.byte	0
 3682 01d0 1B       		.uleb128 0x1b
 3683 01d1 35       		.uleb128 0x35
 3684 01d2 00       		.byte	0
 3685 01d3 49       		.uleb128 0x49
 3686 01d4 13       		.uleb128 0x13
 3687 01d5 00       		.byte	0
 3688 01d6 00       		.byte	0
 3689 01d7 1C       		.uleb128 0x1c
 3690 01d8 34       		.uleb128 0x34
 3691 01d9 00       		.byte	0
 3692 01da 03       		.uleb128 0x3
 3693 01db 08       		.uleb128 0x8
 3694 01dc 3A       		.uleb128 0x3a
 3695 01dd 0B       		.uleb128 0xb
 3696 01de 3B       		.uleb128 0x3b
 3697 01df 0B       		.uleb128 0xb
 3698 01e0 49       		.uleb128 0x49
 3699 01e1 13       		.uleb128 0x13
 3700 01e2 3F       		.uleb128 0x3f
 3701 01e3 19       		.uleb128 0x19
 3702 01e4 02       		.uleb128 0x2
 3703 01e5 18       		.uleb128 0x18
 3704 01e6 00       		.byte	0
 3705 01e7 00       		.byte	0
 3706 01e8 1D       		.uleb128 0x1d
 3707 01e9 34       		.uleb128 0x34
 3708 01ea 00       		.byte	0
 3709 01eb 03       		.uleb128 0x3
 3710 01ec 0E       		.uleb128 0xe
 3711 01ed 3A       		.uleb128 0x3a
 3712 01ee 0B       		.uleb128 0xb
 3713 01ef 3B       		.uleb128 0x3b
 3714 01f0 0B       		.uleb128 0xb
 3715 01f1 49       		.uleb128 0x49
 3716 01f2 13       		.uleb128 0x13
 3717 01f3 3F       		.uleb128 0x3f
 3718 01f4 19       		.uleb128 0x19
 3719 01f5 02       		.uleb128 0x2
 3720 01f6 18       		.uleb128 0x18
 3721 01f7 00       		.byte	0
 3722 01f8 00       		.byte	0
 3723 01f9 1E       		.uleb128 0x1e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 76


 3724 01fa 01       		.uleb128 0x1
 3725 01fb 01       		.byte	0x1
 3726 01fc 49       		.uleb128 0x49
 3727 01fd 13       		.uleb128 0x13
 3728 01fe 01       		.uleb128 0x1
 3729 01ff 13       		.uleb128 0x13
 3730 0200 00       		.byte	0
 3731 0201 00       		.byte	0
 3732 0202 1F       		.uleb128 0x1f
 3733 0203 21       		.uleb128 0x21
 3734 0204 00       		.byte	0
 3735 0205 49       		.uleb128 0x49
 3736 0206 13       		.uleb128 0x13
 3737 0207 2F       		.uleb128 0x2f
 3738 0208 0B       		.uleb128 0xb
 3739 0209 00       		.byte	0
 3740 020a 00       		.byte	0
 3741 020b 20       		.uleb128 0x20
 3742 020c 34       		.uleb128 0x34
 3743 020d 00       		.byte	0
 3744 020e 03       		.uleb128 0x3
 3745 020f 08       		.uleb128 0x8
 3746 0210 3A       		.uleb128 0x3a
 3747 0211 0B       		.uleb128 0xb
 3748 0212 3B       		.uleb128 0x3b
 3749 0213 0B       		.uleb128 0xb
 3750 0214 49       		.uleb128 0x49
 3751 0215 13       		.uleb128 0x13
 3752 0216 3F       		.uleb128 0x3f
 3753 0217 19       		.uleb128 0x19
 3754 0218 3C       		.uleb128 0x3c
 3755 0219 19       		.uleb128 0x19
 3756 021a 00       		.byte	0
 3757 021b 00       		.byte	0
 3758 021c 21       		.uleb128 0x21
 3759 021d 34       		.uleb128 0x34
 3760 021e 00       		.byte	0
 3761 021f 03       		.uleb128 0x3
 3762 0220 0E       		.uleb128 0xe
 3763 0221 3A       		.uleb128 0x3a
 3764 0222 0B       		.uleb128 0xb
 3765 0223 3B       		.uleb128 0x3b
 3766 0224 05       		.uleb128 0x5
 3767 0225 49       		.uleb128 0x49
 3768 0226 13       		.uleb128 0x13
 3769 0227 3F       		.uleb128 0x3f
 3770 0228 19       		.uleb128 0x19
 3771 0229 02       		.uleb128 0x2
 3772 022a 18       		.uleb128 0x18
 3773 022b 00       		.byte	0
 3774 022c 00       		.byte	0
 3775 022d 00       		.byte	0
 3776              		.section	.debug_aranges,"",%progbits
 3777 0000 7C000000 		.4byte	0x7c
 3778 0004 0200     		.2byte	0x2
 3779 0006 00000000 		.4byte	.Ldebug_info0
 3780 000a 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 77


 3781 000b 00       		.byte	0
 3782 000c 0000     		.2byte	0
 3783 000e 0000     		.2byte	0
 3784 0010 00000000 		.4byte	.LFB64
 3785 0014 DC000000 		.4byte	.LFE64-.LFB64
 3786 0018 00000000 		.4byte	.LFB65
 3787 001c 18000000 		.4byte	.LFE65-.LFB65
 3788 0020 00000000 		.4byte	.LFB66
 3789 0024 18000000 		.4byte	.LFE66-.LFB66
 3790 0028 00000000 		.4byte	.LFB67
 3791 002c 18000000 		.4byte	.LFE67-.LFB67
 3792 0030 00000000 		.4byte	.LFB68
 3793 0034 18000000 		.4byte	.LFE68-.LFB68
 3794 0038 00000000 		.4byte	.LFB69
 3795 003c 38000000 		.4byte	.LFE69-.LFB69
 3796 0040 00000000 		.4byte	.LFB70
 3797 0044 A0000000 		.4byte	.LFE70-.LFB70
 3798 0048 00000000 		.4byte	.LFB71
 3799 004c 54000000 		.4byte	.LFE71-.LFB71
 3800 0050 00000000 		.4byte	.LFB72
 3801 0054 34000000 		.4byte	.LFE72-.LFB72
 3802 0058 00000000 		.4byte	.LFB73
 3803 005c 98040000 		.4byte	.LFE73-.LFB73
 3804 0060 00000000 		.4byte	.LFB74
 3805 0064 70010000 		.4byte	.LFE74-.LFB74
 3806 0068 00000000 		.4byte	.LFB75
 3807 006c 58030000 		.4byte	.LFE75-.LFB75
 3808 0070 00000000 		.4byte	.LFB76
 3809 0074 98000000 		.4byte	.LFE76-.LFB76
 3810 0078 00000000 		.4byte	0
 3811 007c 00000000 		.4byte	0
 3812              		.section	.debug_ranges,"",%progbits
 3813              	.Ldebug_ranges0:
 3814 0000 00000000 		.4byte	.LFB64
 3815 0004 DC000000 		.4byte	.LFE64
 3816 0008 00000000 		.4byte	.LFB65
 3817 000c 18000000 		.4byte	.LFE65
 3818 0010 00000000 		.4byte	.LFB66
 3819 0014 18000000 		.4byte	.LFE66
 3820 0018 00000000 		.4byte	.LFB67
 3821 001c 18000000 		.4byte	.LFE67
 3822 0020 00000000 		.4byte	.LFB68
 3823 0024 18000000 		.4byte	.LFE68
 3824 0028 00000000 		.4byte	.LFB69
 3825 002c 38000000 		.4byte	.LFE69
 3826 0030 00000000 		.4byte	.LFB70
 3827 0034 A0000000 		.4byte	.LFE70
 3828 0038 00000000 		.4byte	.LFB71
 3829 003c 54000000 		.4byte	.LFE71
 3830 0040 00000000 		.4byte	.LFB72
 3831 0044 34000000 		.4byte	.LFE72
 3832 0048 00000000 		.4byte	.LFB73
 3833 004c 98040000 		.4byte	.LFE73
 3834 0050 00000000 		.4byte	.LFB74
 3835 0054 70010000 		.4byte	.LFE74
 3836 0058 00000000 		.4byte	.LFB75
 3837 005c 58030000 		.4byte	.LFE75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 78


 3838 0060 00000000 		.4byte	.LFB76
 3839 0064 98000000 		.4byte	.LFE76
 3840 0068 00000000 		.4byte	0
 3841 006c 00000000 		.4byte	0
 3842              		.section	.debug_line,"",%progbits
 3843              	.Ldebug_line0:
 3844 0000 71040000 		.section	.debug_str,"MS",%progbits,1
 3844      02005F01 
 3844      00000201 
 3844      FB0E0D00 
 3844      01010101 
 3845              	.LASF58:
 3846 0000 53365F44 		.ascii	"S6_DETECTED\000"
 3846      45544543 
 3846      54454400 
 3847              	.LASF105:
 3848 000c 73746F70 		.ascii	"stoppedAfterTurn\000"
 3848      70656441 
 3848      66746572 
 3848      5475726E 
 3848      00
 3849              	.LASF40:
 3850 001d 5475726E 		.ascii	"TurnLeft\000"
 3850      4C656674 
 3850      00
 3851              	.LASF65:
 3852 0026 52656368 		.ascii	"RecheckPosition\000"
 3852      65636B50 
 3852      6F736974 
 3852      696F6E00 
 3853              	.LASF71:
 3854 0036 74735F65 		.ascii	"ts_enc\000"
 3854      6E6300
 3855              	.LASF48:
 3856 003d 466F7277 		.ascii	"ForwardAfterTurn\000"
 3856      61726441 
 3856      66746572 
 3856      5475726E 
 3856      00
 3857              	.LASF80:
 3858 004e 666C6167 		.ascii	"flag_packet\000"
 3858      5F706163 
 3858      6B657400 
 3859              	.LASF45:
 3860 005a 77616974 		.ascii	"waitForTurn\000"
 3860      466F7254 
 3860      75726E00 
 3861              	.LASF77:
 3862 0066 666C6167 		.ascii	"flag_ts_speed\000"
 3862      5F74735F 
 3862      73706565 
 3862      6400
 3863              	.LASF34:
 3864 0074 67325F78 		.ascii	"g2_xpos\000"
 3864      706F7300 
 3865              	.LASF2:
 3866 007c 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 79


 3866      7420696E 
 3866      7400
 3867              	.LASF88:
 3868 0086 73797374 		.ascii	"system_state\000"
 3868      656D5F73 
 3868      74617465 
 3868      00
 3869              	.LASF10:
 3870 0093 73697A65 		.ascii	"sizetype\000"
 3870      74797065 
 3870      00
 3871              	.LASF99:
 3872 009c 73746F70 		.ascii	"stopBuffer\000"
 3872      42756666 
 3872      657200
 3873              	.LASF50:
 3874 00a7 44697265 		.ascii	"DirectionState\000"
 3874      6374696F 
 3874      6E537461 
 3874      746500
 3875              	.LASF87:
 3876 00b6 75736242 		.ascii	"usbBuffer\000"
 3876      75666665 
 3876      7200
 3877              	.LASF107:
 3878 00c0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3878      43313120 
 3878      352E342E 
 3878      31203230 
 3878      31363036 
 3879 00f3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3879      20726576 
 3879      6973696F 
 3879      6E203233 
 3879      37373135 
 3880 0126 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3880      66756E63 
 3880      74696F6E 
 3880      2D736563 
 3880      74696F6E 
 3881              	.LASF60:
 3882 014e 6D61696E 		.ascii	"main\000"
 3882      00
 3883              	.LASF46:
 3884 0153 77616974 		.ascii	"waitForRightTurn\000"
 3884      466F7252 
 3884      69676874 
 3884      5475726E 
 3884      00
 3885              	.LASF63:
 3886 0164 4765744E 		.ascii	"GetNextStep\000"
 3886      65787453 
 3886      74657000 
 3887              	.LASF56:
 3888 0170 53345F44 		.ascii	"S4_DETECTED\000"
 3888      45544543 
 3888      54454400 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 80


 3889              	.LASF41:
 3890 017c 41646A75 		.ascii	"AdjustToTheLeft\000"
 3890      7374546F 
 3890      5468654C 
 3890      65667400 
 3891              	.LASF15:
 3892 018c 75696E74 		.ascii	"uint16\000"
 3892      313600
 3893              	.LASF22:
 3894 0193 696E6465 		.ascii	"index\000"
 3894      7800
 3895              	.LASF62:
 3896 0199 73706565 		.ascii	"speedTimer\000"
 3896      6454696D 
 3896      657200
 3897              	.LASF18:
 3898 01a4 696E7431 		.ascii	"int16\000"
 3898      3600
 3899              	.LASF14:
 3900 01aa 75696E74 		.ascii	"uint8\000"
 3900      3800
 3901              	.LASF33:
 3902 01b0 67315F64 		.ascii	"g1_direction\000"
 3902      69726563 
 3902      74696F6E 
 3902      00
 3903              	.LASF85:
 3904 01bd 6C696E65 		.ascii	"line\000"
 3904      00
 3905              	.LASF19:
 3906 01c2 666C6F61 		.ascii	"float\000"
 3906      7400
 3907              	.LASF54:
 3908 01c8 52696768 		.ascii	"Right\000"
 3908      7400
 3909              	.LASF61:
 3910 01ce 6E657744 		.ascii	"newDistance\000"
 3910      69737461 
 3910      6E636500 
 3911              	.LASF6:
 3912 01da 6C6F6E67 		.ascii	"long long int\000"
 3912      206C6F6E 
 3912      6720696E 
 3912      7400
 3913              	.LASF17:
 3914 01e8 696E7438 		.ascii	"int8\000"
 3914      00
 3915              	.LASF100:
 3916 01ed 78426C6F 		.ascii	"xBlocksize\000"
 3916      636B7369 
 3916      7A6500
 3917              	.LASF76:
 3918 01f8 666C6167 		.ascii	"flag_ts_update\000"
 3918      5F74735F 
 3918      75706461 
 3918      746500
 3919              	.LASF35:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 81


 3920 0207 67325F79 		.ascii	"g2_ypos\000"
 3920      706F7300 
 3921              	.LASF29:
 3922 020f 67305F64 		.ascii	"g0_direction\000"
 3922      69726563 
 3922      74696F6E 
 3922      00
 3923              	.LASF26:
 3924 021c 67305F78 		.ascii	"g0_xpos\000"
 3924      706F7300 
 3925              	.LASF92:
 3926 0224 70726576 		.ascii	"previousOrientation\000"
 3926      696F7573 
 3926      4F726965 
 3926      6E746174 
 3926      696F6E00 
 3927              	.LASF53:
 3928 0238 4C656674 		.ascii	"Left\000"
 3928      00
 3929              	.LASF66:
 3930 023d 43686563 		.ascii	"CheckSensorDirection\000"
 3930      6B53656E 
 3930      736F7244 
 3930      69726563 
 3930      74696F6E 
 3931              	.LASF97:
 3932 0252 74696D65 		.ascii	"timerInt\000"
 3932      72496E74 
 3932      00
 3933              	.LASF78:
 3934 025b 666C6167 		.ascii	"flag_ts_display\000"
 3934      5F74735F 
 3934      64697370 
 3934      6C617900 
 3935              	.LASF79:
 3936 026b 666C6167 		.ascii	"flag_rx\000"
 3936      5F727800 
 3937              	.LASF67:
 3938 0273 626C6F63 		.ascii	"blocksize\000"
 3938      6B73697A 
 3938      6500
 3939              	.LASF1:
 3940 027d 756E7369 		.ascii	"unsigned char\000"
 3940      676E6564 
 3940      20636861 
 3940      7200
 3941              	.LASF93:
 3942 028b 746F7461 		.ascii	"totalMilliseconds\000"
 3942      6C4D696C 
 3942      6C697365 
 3942      636F6E64 
 3942      7300
 3943              	.LASF86:
 3944 029d 656E7472 		.ascii	"entry\000"
 3944      7900
 3945              	.LASF9:
 3946 02a3 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 82


 3946      20646F75 
 3946      626C6500 
 3947              	.LASF104:
 3948 02af 64697265 		.ascii	"directionBeforeStop\000"
 3948      6374696F 
 3948      6E426566 
 3948      6F726553 
 3948      746F7000 
 3949              	.LASF90:
 3950 02c3 70726576 		.ascii	"previousDirection\000"
 3950      696F7573 
 3950      44697265 
 3950      6374696F 
 3950      6E00
 3951              	.LASF94:
 3952 02d5 746F7461 		.ascii	"totalDistance\000"
 3952      6C446973 
 3952      74616E63 
 3952      6500
 3953              	.LASF98:
 3954 02e3 6B656570 		.ascii	"keepLedOn\000"
 3954      4C65644F 
 3954      6E00
 3955              	.LASF28:
 3956 02ed 67305F73 		.ascii	"g0_speed\000"
 3956      70656564 
 3956      00
 3957              	.LASF101:
 3958 02f6 79426C6F 		.ascii	"yBlocksize\000"
 3958      636B7369 
 3958      7A6500
 3959              	.LASF82:
 3960 0301 64617461 		.ascii	"dataready_flag\000"
 3960      72656164 
 3960      795F666C 
 3960      616700
 3961              	.LASF30:
 3962 0310 67315F78 		.ascii	"g1_xpos\000"
 3962      706F7300 
 3963              	.LASF0:
 3964 0318 7369676E 		.ascii	"signed char\000"
 3964      65642063 
 3964      68617200 
 3965              	.LASF13:
 3966 0324 696E7433 		.ascii	"int32_t\000"
 3966      325F7400 
 3967              	.LASF7:
 3968 032c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3968      206C6F6E 
 3968      6720756E 
 3968      7369676E 
 3968      65642069 
 3969              	.LASF42:
 3970 0343 41646A75 		.ascii	"AdjustToTheRight\000"
 3970      7374546F 
 3970      54686552 
 3970      69676874 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 83


 3970      00
 3971              	.LASF8:
 3972 0354 756E7369 		.ascii	"unsigned int\000"
 3972      676E6564 
 3972      20696E74 
 3972      00
 3973              	.LASF72:
 3974 0361 74735F75 		.ascii	"ts_update\000"
 3974      70646174 
 3974      6500
 3975              	.LASF81:
 3976 036b 666C6167 		.ascii	"flag_KB_string\000"
 3976      5F4B425F 
 3976      73747269 
 3976      6E6700
 3977              	.LASF69:
 3978 037a 53657452 		.ascii	"SetRobotMovement\000"
 3978      6F626F74 
 3978      4D6F7665 
 3978      6D656E74 
 3978      00
 3979              	.LASF59:
 3980 038b 54494D45 		.ascii	"TIMER_FINISH\000"
 3980      525F4649 
 3980      4E495348 
 3980      00
 3981              	.LASF36:
 3982 0398 67325F73 		.ascii	"g2_speed\000"
 3982      70656564 
 3982      00
 3983              	.LASF57:
 3984 03a1 53355F44 		.ascii	"S5_DETECTED\000"
 3984      45544543 
 3984      54454400 
 3985              	.LASF3:
 3986 03ad 73686F72 		.ascii	"short unsigned int\000"
 3986      7420756E 
 3986      7369676E 
 3986      65642069 
 3986      6E7400
 3987              	.LASF110:
 3988 03c0 64617461 		.ascii	"data_main\000"
 3988      5F6D6169 
 3988      6E00
 3989              	.LASF68:
 3990 03ca 52657365 		.ascii	"ResetSensorFlags\000"
 3990      7453656E 
 3990      736F7246 
 3990      6C616773 
 3990      00
 3991              	.LASF11:
 3992 03db 63686172 		.ascii	"char\000"
 3992      00
 3993              	.LASF4:
 3994 03e0 6C6F6E67 		.ascii	"long int\000"
 3994      20696E74 
 3994      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 84


 3995              	.LASF38:
 3996 03e9 466F7277 		.ascii	"Forward\000"
 3996      61726400 
 3997              	.LASF109:
 3998 03f1 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3998      6F63756D 
 3998      656E7473 
 3998      5C476974 
 3998      4875625C 
 3999 0420 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3999      635F636F 
 3999      64655F62 
 3999      6173655C 
 3999      43533330 
 4000              	.LASF96:
 4001 0442 71756164 		.ascii	"quadDec2Count\000"
 4001      44656332 
 4001      436F756E 
 4001      7400
 4002              	.LASF31:
 4003 0450 67315F79 		.ascii	"g1_ypos\000"
 4003      706F7300 
 4004              	.LASF37:
 4005 0458 67325F64 		.ascii	"g2_direction\000"
 4005      69726563 
 4005      74696F6E 
 4005      00
 4006              	.LASF32:
 4007 0465 67315F73 		.ascii	"g1_speed\000"
 4007      70656564 
 4007      00
 4008              	.LASF103:
 4009 046e 63757272 		.ascii	"currentCol\000"
 4009      656E7443 
 4009      6F6C00
 4010              	.LASF84:
 4011 0479 64697370 		.ascii	"displaystring\000"
 4011      6C617973 
 4011      7472696E 
 4011      6700
 4012              	.LASF106:
 4013 0487 69676E6F 		.ascii	"ignoreSensor\000"
 4013      72655365 
 4013      6E736F72 
 4013      00
 4014              	.LASF23:
 4015 0494 726F626F 		.ascii	"robot_xpos\000"
 4015      745F7870 
 4015      6F7300
 4016              	.LASF39:
 4017 049f 5475726E 		.ascii	"TurnRight\000"
 4017      52696768 
 4017      7400
 4018              	.LASF95:
 4019 04a9 62756666 		.ascii	"buffer\000"
 4019      657200
 4020              	.LASF16:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 85


 4021 04b0 75696E74 		.ascii	"uint32\000"
 4021      333200
 4022              	.LASF108:
 4023 04b7 6D61696E 		.ascii	"main.c\000"
 4023      2E6300
 4024              	.LASF5:
 4025 04be 6C6F6E67 		.ascii	"long unsigned int\000"
 4025      20756E73 
 4025      69676E65 
 4025      6420696E 
 4025      7400
 4026              	.LASF49:
 4027 04d0 4261636B 		.ascii	"Backward\000"
 4027      77617264 
 4027      00
 4028              	.LASF20:
 4029 04d9 646F7562 		.ascii	"double\000"
 4029      6C6500
 4030              	.LASF44:
 4031 04e0 556E6B6E 		.ascii	"Unknown\000"
 4031      6F776E00 
 4032              	.LASF102:
 4033 04e8 63757272 		.ascii	"currentRow\000"
 4033      656E7452 
 4033      6F7700
 4034              	.LASF55:
 4035 04f3 53335F44 		.ascii	"S3_DETECTED\000"
 4035      45544543 
 4035      54454400 
 4036              	.LASF73:
 4037 04ff 74735F73 		.ascii	"ts_speed\000"
 4037      70656564 
 4037      00
 4038              	.LASF112:
 4039 0508 636F756E 		.ascii	"count\000"
 4039      7400
 4040              	.LASF75:
 4041 050e 666C6167 		.ascii	"flag_ts_enc\000"
 4041      5F74735F 
 4041      656E6300 
 4042              	.LASF12:
 4043 051a 5F5F696E 		.ascii	"__int32_t\000"
 4043      7433325F 
 4043      7400
 4044              	.LASF43:
 4045 0524 53746F70 		.ascii	"Stop\000"
 4045      00
 4046              	.LASF27:
 4047 0529 67305F79 		.ascii	"g0_ypos\000"
 4047      706F7300 
 4048              	.LASF25:
 4049 0531 726F626F 		.ascii	"robot_orientation\000"
 4049      745F6F72 
 4049      69656E74 
 4049      6174696F 
 4049      6E00
 4050              	.LASF74:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 86


 4051 0543 74735F64 		.ascii	"ts_display\000"
 4051      6973706C 
 4051      617900
 4052              	.LASF47:
 4053 054e 77616974 		.ascii	"waitForLeftTurn\000"
 4053      466F724C 
 4053      65667454 
 4053      75726E00 
 4054              	.LASF111:
 4055 055e 71756164 		.ascii	"quadCountToRPM\000"
 4055      436F756E 
 4055      74546F52 
 4055      504D00
 4056              	.LASF83:
 4057 056d 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4057      5F72665F 
 4057      7472616E 
 4057      736D6973 
 4057      73696F6E 
 4058              	.LASF24:
 4059 0589 726F626F 		.ascii	"robot_ypos\000"
 4059      745F7970 
 4059      6F7300
 4060              	.LASF70:
 4061 0594 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4061      52784275 
 4061      66666572 
 4061      00
 4062              	.LASF91:
 4063 05a1 63757272 		.ascii	"currentOrientation\000"
 4063      656E744F 
 4063      7269656E 
 4063      74617469 
 4063      6F6E00
 4064              	.LASF52:
 4065 05b4 446F776E 		.ascii	"Down\000"
 4065      00
 4066              	.LASF89:
 4067 05b9 63757272 		.ascii	"currentDirection\000"
 4067      656E7444 
 4067      69726563 
 4067      74696F6E 
 4067      00
 4068              	.LASF64:
 4069 05ca 64697265 		.ascii	"directionState\000"
 4069      6374696F 
 4069      6E537461 
 4069      746500
 4070              	.LASF21:
 4071 05d9 72737369 		.ascii	"rssi\000"
 4071      00
 4072              	.LASF51:
 4073 05de 4F726965 		.ascii	"OrientationState\000"
 4073      6E746174 
 4073      696F6E53 
 4073      74617465 
 4073      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccmF0lqV.s 			page 87


 4074              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
