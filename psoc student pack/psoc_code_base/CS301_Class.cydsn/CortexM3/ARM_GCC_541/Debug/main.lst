ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	previousInstruction,20,4
 122              		.comm	numSteps,4,4
 123              		.comm	instructionList,4,4
 124              		.bss
 125 0013 00       		.align	2
 126              	instructionIndex:
 127 0014 00000000 		.space	4
 128              		.comm	s3,1,1
 129              		.comm	s4,1,1
 130              		.comm	s5,1,1
 131              		.global	s6
 132              		.type	s6, %object
 133              		.size	s6, 1
 134              	s6:
 135 0018 00       		.space	1
 136              		.global	totalMilliseconds
 137 0019 000000   		.align	2
 138              		.type	totalMilliseconds, %object
 139              		.size	totalMilliseconds, 4
 140              	totalMilliseconds:
 141 001c 00000000 		.space	4
 142              		.global	totalDistance
 143              		.align	2
 144              		.type	totalDistance, %object
 145              		.size	totalDistance, 4
 146              	totalDistance:
 147 0020 00000000 		.space	4
 148              		.comm	buffer,69,4
 149              		.global	quadDec2Count
 150              		.align	2
 151              		.type	quadDec2Count, %object
 152              		.size	quadDec2Count, 4
 153              	quadDec2Count:
 154 0024 00000000 		.space	4
 155              		.global	timerInt
 156              		.align	2
 157              		.type	timerInt, %object
 158              		.size	timerInt, 4
 159              	timerInt:
 160 0028 00000000 		.space	4
 161              		.global	keepLedOn
 162              		.align	2
 163              		.type	keepLedOn, %object
 164              		.size	keepLedOn, 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 4


 165              	keepLedOn:
 166 002c 00000000 		.space	4
 167              		.global	stopBuffer
 168              		.align	2
 169              		.type	stopBuffer, %object
 170              		.size	stopBuffer, 4
 171              	stopBuffer:
 172 0030 00000000 		.space	4
 173              		.global	forwardBuffer
 174              		.align	1
 175              		.type	forwardBuffer, %object
 176              		.size	forwardBuffer, 2
 177              	forwardBuffer:
 178 0034 0000     		.space	2
 179              	turnStartedFlag:
 180 0036 00       		.space	1
 181              	turnFinishedFlag:
 182 0037 00       		.space	1
 183              	forwardUntilTargetStartedFlag:
 184 0038 00       		.space	1
 185              	uTurnStartedFlag:
 186 0039 00       		.space	1
 187              	uTurnFinishedFlag:
 188 003a 00       		.space	1
 189              	leftStatusFlag:
 190 003b 00       		.space	1
 191              	rightStatusFlag:
 192 003c 00       		.space	1
 193              	spinCourseCorrectionStarted:
 194 003d 00       		.space	1
 195              	currentIgnoreL:
 196 003e 00       		.space	1
 197              	currentIgnoreR:
 198 003f 00       		.space	1
 199              	totalLineCount:
 200 0040 00       		.space	1
 201              	lineCount:
 202 0041 00       		.space	1
 203              	onLineFlag:
 204 0042 00       		.space	1
 205              	tooEarlyFlag:
 206 0043 00       		.space	1
 207              	tooLateFlag:
 208 0044 00       		.space	1
 209              	dontOverwriteRightIgnore:
 210 0045 00       		.space	1
 211              	dontOverwriteLeftIgnore:
 212 0046 00       		.space	1
 213              		.global	junctionConfiguration
 214 0047 00       		.align	2
 215              		.type	junctionConfiguration, %object
 216              		.size	junctionConfiguration, 4
 217              	junctionConfiguration:
 218 0048 00000000 		.space	4
 219              		.global	currentFoodListIndex
 220              		.type	currentFoodListIndex, %object
 221              		.size	currentFoodListIndex, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 5


 222              	currentFoodListIndex:
 223 004c 00       		.space	1
 224              		.global	blockSizeTotal
 225 004d 000000   		.align	2
 226              		.type	blockSizeTotal, %object
 227              		.size	blockSizeTotal, 4
 228              	blockSizeTotal:
 229 0050 00000000 		.space	4
 230              		.global	__aeabi_i2d
 231              		.global	__aeabi_dmul
 232              		.global	__aeabi_ddiv
 233              		.global	__aeabi_d2f
 234              		.global	__aeabi_fadd
 235              		.section	.text.speedTimer,"ax",%progbits
 236              		.align	2
 237              		.global	speedTimer
 238              		.thumb
 239              		.thumb_func
 240              		.type	speedTimer, %function
 241              	speedTimer:
 242              	.LFB64:
 243              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** Instruction previousInstruction;
  30:main.c        **** int numSteps;
  31:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  32:main.c        **** Instruction * instructionList; // pointer to array
  33:main.c        **** volatile static uint32 instructionIndex = 0;
  34:main.c        **** Instruction GetInstructionAtIndex();
  35:main.c        **** float CalculateDistanceToTravel(float blockSize);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 6


  36:main.c        **** void MoveToNextInstruction();
  37:main.c        **** // ----------------------------------------
  38:main.c        **** uint8 s3, s4, s5, s6 = 0;
  39:main.c        **** //* ========================================
  40:main.c        **** // Calculating Distance
  41:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  42:main.c        **** 
  43:main.c        **** uint32 totalMilliseconds = 0;
  44:main.c        **** float totalDistance = 0; // in mm
  45:main.c        **** //* ========================================
  46:main.c        **** char buffer[69];
  47:main.c        **** int quadDec2Count = 0;
  48:main.c        **** int timerInt = 0;
  49:main.c        **** int keepLedOn = 0;
  50:main.c        **** // ========================================= FLAGS
  51:main.c        **** uint32 stopBuffer = 0;
  52:main.c        **** uint16 forwardBuffer = 0;
  53:main.c        **** volatile static uint8 turnStartedFlag = 0;
  54:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  55:main.c        **** 
  56:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  58:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  59:main.c        **** 
  60:main.c        **** volatile static uint8 leftStatusFlag = 0;
  61:main.c        **** volatile static uint8 rightStatusFlag = 0;
  62:main.c        **** 
  63:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  64:main.c        **** volatile static uint8 currentIgnoreL = 0;
  65:main.c        **** volatile static uint8 currentIgnoreR = 0;
  66:main.c        **** 
  67:main.c        **** void RotateClockwise180Degrees();
  68:main.c        **** 
  69:main.c        **** volatile static uint8 totalLineCount = 0;
  70:main.c        **** volatile static uint8 lineCount = 0;
  71:main.c        **** volatile static uint8 onLineFlag = 0;
  72:main.c        **** 
  73:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  74:main.c        **** volatile static uint8 tooLateFlag = 0;
  75:main.c        **** 
  76:main.c        **** volatile static uint8 dontOverwriteRightIgnore = 0;
  77:main.c        **** volatile static uint8 dontOverwriteLeftIgnore = 0;
  78:main.c        **** 
  79:main.c        **** uint8 junctionConfiguration[4] = {0};
  80:main.c        **** uint8 currentFoodListIndex = 0;
  81:main.c        **** 
  82:main.c        **** float blockSizeTotal = 0;
  83:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  84:main.c        **** 
  85:main.c        **** CY_ISR (speedTimer) {
 244              		.loc 1 85 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 90B5     		push	{r4, r7, lr}
 249              		.cfi_def_cfa_offset 12
 250              		.cfi_offset 4, -12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 7


 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 24
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  86:main.c        ****     timerInt = 1;
 257              		.loc 1 86 0
 258 0006 344B     		ldr	r3, .L4+16
 259 0008 0122     		movs	r2, #1
 260 000a 1A60     		str	r2, [r3]
  87:main.c        ****     //quadDec_M1 used for turning macros
  88:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 261              		.loc 1 88 0
 262 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 263 0010 0346     		mov	r3, r0
 264 0012 1A46     		mov	r2, r3
 265 0014 314B     		ldr	r3, .L4+20
 266 0016 1A60     		str	r2, [r3]
  89:main.c        ****     
  90:main.c        ****     if ((currentDirection == Forward || 
 267              		.loc 1 90 0
 268 0018 314B     		ldr	r3, .L4+24
 269 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 001c 002B     		cmp	r3, #0
 271 001e 13D0     		beq	.L2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 272              		.loc 1 91 0 discriminator 1
 273 0020 2F4B     		ldr	r3, .L4+24
 274 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:main.c        ****         currentDirection == ForwardAfterTurn ||
 275              		.loc 1 90 0 discriminator 1
 276 0024 082B     		cmp	r3, #8
 277 0026 0FD0     		beq	.L2
  92:main.c        ****         currentDirection == waitForTurn || 
 278              		.loc 1 92 0
 279 0028 2D4B     		ldr	r3, .L4+24
 280 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 281              		.loc 1 91 0
 282 002c 072B     		cmp	r3, #7
 283 002e 0BD0     		beq	.L2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 284              		.loc 1 93 0
 285 0030 2B4B     		ldr	r3, .L4+24
 286 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****         currentDirection == waitForTurn || 
 287              		.loc 1 92 0
 288 0034 032B     		cmp	r3, #3
 289 0036 07D0     		beq	.L2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 290              		.loc 1 94 0
 291 0038 294B     		ldr	r3, .L4+24
 292 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 293              		.loc 1 93 0
 294 003c 042B     		cmp	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 8


 295 003e 03D0     		beq	.L2
  95:main.c        ****         currentDirection == Backward) &&
 296              		.loc 1 95 0
 297 0040 274B     		ldr	r3, .L4+24
 298 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 299              		.loc 1 94 0
 300 0044 092B     		cmp	r3, #9
 301 0046 34D1     		bne	.L3
 302              	.L2:
  96:main.c        ****         quadDec2Count != 0) {
 303              		.loc 1 96 0
 304 0048 244B     		ldr	r3, .L4+20
 305 004a 1B68     		ldr	r3, [r3]
  95:main.c        ****         currentDirection == Backward) &&
 306              		.loc 1 95 0
 307 004c 002B     		cmp	r3, #0
 308 004e 30D0     		beq	.L3
 309              	.LBB2:
  97:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  98:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 310              		.loc 1 98 0
 311 0050 224B     		ldr	r3, .L4+20
 312 0052 1B68     		ldr	r3, [r3]
 313 0054 002B     		cmp	r3, #0
 314 0056 B8BF     		it	lt
 315 0058 5B42     		rsblt	r3, r3, #0
 316 005a 1846     		mov	r0, r3
 317 005c FFF7FEFF 		bl	__aeabi_i2d
 318 0060 19A3     		adr	r3, .L4
 319 0062 D3E90023 		ldrd	r2, [r3]
 320 0066 FFF7FEFF 		bl	__aeabi_dmul
 321 006a 0346     		mov	r3, r0
 322 006c 0C46     		mov	r4, r1
 323 006e 1846     		mov	r0, r3
 324 0070 2146     		mov	r1, r4
 325 0072 17A3     		adr	r3, .L4+8
 326 0074 D3E90023 		ldrd	r2, [r3]
 327 0078 FFF7FEFF 		bl	__aeabi_dmul
 328 007c 0346     		mov	r3, r0
 329 007e 0C46     		mov	r4, r1
 330 0080 1846     		mov	r0, r3
 331 0082 2146     		mov	r1, r4
 332 0084 4FF00002 		mov	r2, #0
 333 0088 164B     		ldr	r3, .L4+28
 334 008a FFF7FEFF 		bl	__aeabi_ddiv
 335 008e 0346     		mov	r3, r0
 336 0090 0C46     		mov	r4, r1
 337 0092 1846     		mov	r0, r3
 338 0094 2146     		mov	r1, r4
 339 0096 FFF7FEFF 		bl	__aeabi_d2f
 340 009a 0346     		mov	r3, r0
 341 009c 7B60     		str	r3, [r7, #4]	@ float
  99:main.c        ****         
 100:main.c        ****         totalDistance = totalDistance + newDistance;
 342              		.loc 1 100 0
 343 009e 124B     		ldr	r3, .L4+32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 9


 344 00a0 1B68     		ldr	r3, [r3]	@ float
 345 00a2 7968     		ldr	r1, [r7, #4]	@ float
 346 00a4 1846     		mov	r0, r3
 347 00a6 FFF7FEFF 		bl	__aeabi_fadd
 348 00aa 0346     		mov	r3, r0
 349 00ac 1A46     		mov	r2, r3
 350 00ae 0E4B     		ldr	r3, .L4+32
 351 00b0 1A60     		str	r2, [r3]	@ float
 352              	.L3:
 353              	.LBE2:
 101:main.c        ****     }
 102:main.c        ****     
 103:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 354              		.loc 1 103 0
 355 00b2 0020     		movs	r0, #0
 356 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 104:main.c        ****     QuadDec_M2_Start(); // restart counter
 357              		.loc 1 104 0
 358 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        ****     
 106:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 359              		.loc 1 106 0
 360 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 107:main.c        **** }
 361              		.loc 1 107 0
 362 00c0 00BF     		nop
 363 00c2 0C37     		adds	r7, r7, #12
 364              		.cfi_def_cfa_offset 12
 365 00c4 BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 00c6 90BD     		pop	{r4, r7, pc}
 369              	.L5:
 370              		.align	3
 371              	.L4:
 372 00c8 182D4454 		.word	1413754136
 373 00cc FB210940 		.word	1074340347
 374 00d0 00000000 		.word	0
 375 00d4 00205040 		.word	1078992896
 376 00d8 00000000 		.word	timerInt
 377 00dc 00000000 		.word	quadDec2Count
 378 00e0 00000000 		.word	currentDirection
 379 00e4 00806C40 		.word	1080852480
 380 00e8 00000000 		.word	totalDistance
 381              		.cfi_endproc
 382              	.LFE64:
 383              		.size	speedTimer, .-speedTimer
 384              		.section	.text.S3_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S3_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S3_DETECTED, %function
 390              	S3_DETECTED:
 391              	.LFB65:
 108:main.c        **** 
 109:main.c        **** CY_ISR(S3_DETECTED) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 10


 392              		.loc 1 109 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 110:main.c        ****     // Sensor has detected WHITE
 111:main.c        ****     s3 = 1; // , Black = 0, White = 1
 402              		.loc 1 111 0
 403 0004 034B     		ldr	r3, .L7
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 112:main.c        ****     //LED_Write(1u);
 113:main.c        **** }
 406              		.loc 1 113 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L8:
 416 0012 00BF     		.align	2
 417              	.L7:
 418 0014 00000000 		.word	s3
 419              		.cfi_endproc
 420              	.LFE65:
 421              		.size	S3_DETECTED, .-S3_DETECTED
 422              		.section	.text.S4_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S4_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S4_DETECTED, %function
 428              	S4_DETECTED:
 429              	.LFB66:
 114:main.c        **** 
 115:main.c        **** CY_ISR(S4_DETECTED) {
 430              		.loc 1 115 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 116:main.c        ****     // Sensor has detected WHITE
 117:main.c        ****     s4 = 1; // , Black = 0, White = 1
 440              		.loc 1 117 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 11


 441 0004 034B     		ldr	r3, .L10
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 118:main.c        ****     //LED_Write(1u);
 119:main.c        **** }
 444              		.loc 1 119 0
 445 000a 00BF     		nop
 446 000c BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L11:
 454 0012 00BF     		.align	2
 455              	.L10:
 456 0014 00000000 		.word	s4
 457              		.cfi_endproc
 458              	.LFE66:
 459              		.size	S4_DETECTED, .-S4_DETECTED
 460              		.section	.text.S5_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S5_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S5_DETECTED, %function
 466              	S5_DETECTED:
 467              	.LFB67:
 120:main.c        **** 
 121:main.c        **** CY_ISR(S5_DETECTED) {
 468              		.loc 1 121 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 122:main.c        ****     // Sensor has detected WHITE
 123:main.c        ****     s5 = 1; // , Black = 0, White = 1
 478              		.loc 1 123 0
 479 0004 034B     		ldr	r3, .L13
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 124:main.c        ****     //LED_Write(1u);
 125:main.c        **** }
 482              		.loc 1 125 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 12


 490 0010 7047     		bx	lr
 491              	.L14:
 492 0012 00BF     		.align	2
 493              	.L13:
 494 0014 00000000 		.word	s5
 495              		.cfi_endproc
 496              	.LFE67:
 497              		.size	S5_DETECTED, .-S5_DETECTED
 498              		.section	.text.S6_DETECTED,"ax",%progbits
 499              		.align	2
 500              		.global	S6_DETECTED
 501              		.thumb
 502              		.thumb_func
 503              		.type	S6_DETECTED, %function
 504              	S6_DETECTED:
 505              	.LFB68:
 126:main.c        **** 
 127:main.c        **** CY_ISR(S6_DETECTED) {
 506              		.loc 1 127 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 128:main.c        ****     // Sensor has detected WHITE
 129:main.c        ****     s6 = 1; // , Black = 0, White = 1
 516              		.loc 1 129 0
 517 0004 034B     		ldr	r3, .L16
 518 0006 0122     		movs	r2, #1
 519 0008 1A70     		strb	r2, [r3]
 130:main.c        ****     //LED_Write(1u);
 131:main.c        **** }
 520              		.loc 1 131 0
 521 000a 00BF     		nop
 522 000c BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 000e 80BC     		pop	{r7}
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 0010 7047     		bx	lr
 529              	.L17:
 530 0012 00BF     		.align	2
 531              	.L16:
 532 0014 00000000 		.word	s6
 533              		.cfi_endproc
 534              	.LFE68:
 535              		.size	S6_DETECTED, .-S6_DETECTED
 536              		.section	.text.TIMER_FINISH,"ax",%progbits
 537              		.align	2
 538              		.global	TIMER_FINISH
 539              		.thumb
 540              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 13


 541              		.type	TIMER_FINISH, %function
 542              	TIMER_FINISH:
 543              	.LFB69:
 132:main.c        **** 
 133:main.c        **** CY_ISR(TIMER_FINISH) {
 544              		.loc 1 133 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 134:main.c        ****     if (currentDirection == Stop) {
 554              		.loc 1 134 0
 555 0004 174B     		ldr	r3, .L24
 556 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 0008 052B     		cmp	r3, #5
 558 000a 05D1     		bne	.L19
 135:main.c        ****         stopBuffer = stopBuffer + 1;
 559              		.loc 1 135 0
 560 000c 164B     		ldr	r3, .L24+4
 561 000e 1B68     		ldr	r3, [r3]
 562 0010 0133     		adds	r3, r3, #1
 563 0012 154A     		ldr	r2, .L24+4
 564 0014 1360     		str	r3, [r2]
 565 0016 02E0     		b	.L20
 566              	.L19:
 136:main.c        ****     } else {
 137:main.c        ****         stopBuffer = 0;
 567              		.loc 1 137 0
 568 0018 134B     		ldr	r3, .L24+4
 569 001a 0022     		movs	r2, #0
 570 001c 1A60     		str	r2, [r3]
 571              	.L20:
 138:main.c        ****     }
 139:main.c        ****     if (currentDirection == Forward || 
 572              		.loc 1 139 0
 573 001e 114B     		ldr	r3, .L24
 574 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0022 002B     		cmp	r3, #0
 576 0024 0BD0     		beq	.L21
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
 577              		.loc 1 140 0 discriminator 1
 578 0026 0F4B     		ldr	r3, .L24
 579 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:main.c        ****         currentDirection == AdjustToTheLeft ||
 580              		.loc 1 139 0 discriminator 1
 581 002a 032B     		cmp	r3, #3
 582 002c 07D0     		beq	.L21
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 583              		.loc 1 141 0
 584 002e 0D4B     		ldr	r3, .L24
 585 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 14


 586              		.loc 1 140 0
 587 0032 042B     		cmp	r3, #4
 588 0034 03D0     		beq	.L21
 142:main.c        ****         currentDirection == ForwardAfterTurn) {
 589              		.loc 1 142 0
 590 0036 0B4B     		ldr	r3, .L24
 591 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 592              		.loc 1 141 0
 593 003a 082B     		cmp	r3, #8
 594 003c 06D1     		bne	.L22
 595              	.L21:
 143:main.c        ****         forwardBuffer = forwardBuffer + 1;
 596              		.loc 1 143 0
 597 003e 0B4B     		ldr	r3, .L24+8
 598 0040 1B88     		ldrh	r3, [r3]
 599 0042 0133     		adds	r3, r3, #1
 600 0044 9AB2     		uxth	r2, r3
 601 0046 094B     		ldr	r3, .L24+8
 602 0048 1A80     		strh	r2, [r3]	@ movhi
 603 004a 02E0     		b	.L23
 604              	.L22:
 144:main.c        ****     } else {
 145:main.c        ****         forwardBuffer = 0;    
 605              		.loc 1 145 0
 606 004c 074B     		ldr	r3, .L24+8
 607 004e 0022     		movs	r2, #0
 608 0050 1A80     		strh	r2, [r3]	@ movhi
 609              	.L23:
 146:main.c        ****     }
 147:main.c        ****     SetRobotMovement(); 
 610              		.loc 1 147 0
 611 0052 FFF7FEFF 		bl	SetRobotMovement
 148:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 612              		.loc 1 148 0
 613 0056 FFF7FEFF 		bl	ResetSensorFlags
 149:main.c        ****     Timer_LED_ReadStatusRegister();
 614              		.loc 1 149 0
 615 005a FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 150:main.c        **** }
 616              		.loc 1 150 0
 617 005e 00BF     		nop
 618 0060 80BD     		pop	{r7, pc}
 619              	.L25:
 620 0062 00BF     		.align	2
 621              	.L24:
 622 0064 00000000 		.word	currentDirection
 623 0068 00000000 		.word	stopBuffer
 624 006c 00000000 		.word	forwardBuffer
 625              		.cfi_endproc
 626              	.LFE69:
 627              		.size	TIMER_FINISH, .-TIMER_FINISH
 628              		.section	.text.main,"ax",%progbits
 629              		.align	2
 630              		.global	main
 631              		.thumb
 632              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 15


 633              		.type	main, %function
 634              	main:
 635              	.LFB70:
 151:main.c        **** 
 152:main.c        **** 
 153:main.c        **** int main() {
 636              		.loc 1 153 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 24
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 B0B5     		push	{r4, r5, r7, lr}
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 86B0     		sub	sp, sp, #24
 647              		.cfi_def_cfa_offset 40
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 154:main.c        **** // ----- INITIALIZATIONS ----------
 155:main.c        ****     CYGlobalIntEnable;
 650              		.loc 1 155 0
 651              		.syntax unified
 652              	@ 155 "main.c" 1
 653 0006 62B6     		CPSIE   i
 654              	@ 0 "" 2
 156:main.c        ****     ResetSensorFlags();
 655              		.loc 1 156 0
 656              		.thumb
 657              		.syntax unified
 658 0008 FFF7FEFF 		bl	ResetSensorFlags
 157:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 659              		.loc 1 157 0
 660 000c FFF7FEFF 		bl	init
 158:main.c        ****     
 159:main.c        ****     // MAKE SURE TO CHANGE ORIENTATION
 160:main.c        ****     instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, Right); // initi
 661              		.loc 1 160 0
 662 0010 2B4B     		ldr	r3, .L29
 663 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664 0014 1A46     		mov	r2, r3
 665 0016 0323     		movs	r3, #3
 666 0018 2A49     		ldr	r1, .L29+4
 667 001a 2B48     		ldr	r0, .L29+8
 668 001c FFF7FEFF 		bl	findPathNewOrientation
 669 0020 0246     		mov	r2, r0
 670 0022 2A4B     		ldr	r3, .L29+12
 671 0024 1A60     		str	r2, [r3]
 161:main.c        ****     numSteps = instructionsListLength();
 672              		.loc 1 161 0
 673 0026 FFF7FEFF 		bl	instructionsListLength
 674 002a 0346     		mov	r3, r0
 675 002c 1A46     		mov	r2, r3
 676 002e 284B     		ldr	r3, .L29+16
 677 0030 1A60     		str	r2, [r3]
 162:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 16


 163:main.c        ****     currentInstruction = GetInstructionAtIndex();
 678              		.loc 1 163 0
 679 0032 284C     		ldr	r4, .L29+20
 680 0034 3B46     		mov	r3, r7
 681 0036 1846     		mov	r0, r3
 682 0038 FFF7FEFF 		bl	GetInstructionAtIndex
 683 003c 2546     		mov	r5, r4
 684 003e 3C46     		mov	r4, r7
 685 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 686 0042 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 687 0044 2368     		ldr	r3, [r4]
 688 0046 2B60     		str	r3, [r5]
 164:main.c        ****     
 165:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 689              		.loc 1 165 0
 690 0048 204B     		ldr	r3, .L29+12
 691 004a 1968     		ldr	r1, [r3]
 692 004c 224B     		ldr	r3, .L29+24
 693 004e 1A68     		ldr	r2, [r3]
 694 0050 1346     		mov	r3, r2
 695 0052 9B00     		lsls	r3, r3, #2
 696 0054 1344     		add	r3, r3, r2
 697 0056 9B00     		lsls	r3, r3, #2
 698 0058 0B44     		add	r3, r3, r1
 699 005a 5B68     		ldr	r3, [r3, #4]
 700 005c DAB2     		uxtb	r2, r3
 701 005e 1F4B     		ldr	r3, .L29+28
 702 0060 1A70     		strb	r2, [r3]
 166:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 703              		.loc 1 166 0
 704 0062 1A4B     		ldr	r3, .L29+12
 705 0064 1968     		ldr	r1, [r3]
 706 0066 1C4B     		ldr	r3, .L29+24
 707 0068 1A68     		ldr	r2, [r3]
 708 006a 1346     		mov	r3, r2
 709 006c 9B00     		lsls	r3, r3, #2
 710 006e 1344     		add	r3, r3, r2
 711 0070 9B00     		lsls	r3, r3, #2
 712 0072 0B44     		add	r3, r3, r1
 713 0074 9B68     		ldr	r3, [r3, #8]
 714 0076 DAB2     		uxtb	r2, r3
 715 0078 194B     		ldr	r3, .L29+32
 716 007a 1A70     		strb	r2, [r3]
 167:main.c        ****     
 168:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 717              		.loc 1 168 0
 718 007c 1948     		ldr	r0, .L29+36
 719 007e FFF7FEFF 		bl	isr_speed_StartEx
 169:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 720              		.loc 1 169 0
 721 0082 1948     		ldr	r0, .L29+40
 722 0084 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 170:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 723              		.loc 1 170 0
 724 0088 1848     		ldr	r0, .L29+44
 725 008a FFF7FEFF 		bl	S3_detected_StartEx
 171:main.c        ****     S4_detected_StartEx(S4_DETECTED);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 17


 726              		.loc 1 171 0
 727 008e 1848     		ldr	r0, .L29+48
 728 0090 FFF7FEFF 		bl	S4_detected_StartEx
 172:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 729              		.loc 1 172 0
 730 0094 1748     		ldr	r0, .L29+52
 731 0096 FFF7FEFF 		bl	S5_detected_StartEx
 173:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 732              		.loc 1 173 0
 733 009a 1748     		ldr	r0, .L29+56
 734 009c FFF7FEFF 		bl	S6_detected_StartEx
 174:main.c        ****     Timer_LED_Start();
 735              		.loc 1 174 0
 736 00a0 FFF7FEFF 		bl	Timer_LED_Start
 737              	.L28:
 175:main.c        **** 
 176:main.c        ****     for(;;)
 177:main.c        ****     {
 178:main.c        ****         if(timerInt == 1) {
 738              		.loc 1 178 0
 739 00a4 154B     		ldr	r3, .L29+60
 740 00a6 1B68     		ldr	r3, [r3]
 741 00a8 012B     		cmp	r3, #1
 742 00aa FBD1     		bne	.L28
 179:main.c        ****             timerInt = 0;
 743              		.loc 1 179 0
 744 00ac 134B     		ldr	r3, .L29+60
 745 00ae 0022     		movs	r2, #0
 746 00b0 1A60     		str	r2, [r3]
 180:main.c        ****             // calculate RPM of M2
 181:main.c        ****             quadCountToRPM(quadDec2Count);
 747              		.loc 1 181 0
 748 00b2 134B     		ldr	r3, .L29+64
 749 00b4 1B68     		ldr	r3, [r3]
 750 00b6 9BB2     		uxth	r3, r3
 751 00b8 1846     		mov	r0, r3
 752 00ba FFF7FEFF 		bl	quadCountToRPM
 182:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 183:main.c        ****             //usbPutString(buffer);
 184:main.c        ****             //usbPutString(" ");
 185:main.c        ****         }
 186:main.c        ****     }
 753              		.loc 1 186 0
 754 00be F1E7     		b	.L28
 755              	.L30:
 756              		.align	2
 757              	.L29:
 758 00c0 00000000 		.word	currentFoodListIndex
 759 00c4 00000000 		.word	food_list
 760 00c8 00000000 		.word	map
 761 00cc 00000000 		.word	instructionList
 762 00d0 00000000 		.word	numSteps
 763 00d4 00000000 		.word	currentInstruction
 764 00d8 14000000 		.word	instructionIndex
 765 00dc 3E000000 		.word	currentIgnoreL
 766 00e0 3F000000 		.word	currentIgnoreR
 767 00e4 00000000 		.word	speedTimer
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 18


 768 00e8 00000000 		.word	TIMER_FINISH
 769 00ec 00000000 		.word	S3_DETECTED
 770 00f0 00000000 		.word	S4_DETECTED
 771 00f4 00000000 		.word	S5_DETECTED
 772 00f8 00000000 		.word	S6_DETECTED
 773 00fc 00000000 		.word	timerInt
 774 0100 00000000 		.word	quadDec2Count
 775              		.cfi_endproc
 776              	.LFE70:
 777              		.size	main, .-main
 778              		.global	__aeabi_fmul
 779              		.global	__aeabi_f2iz
 780              		.section	.text.quadCountToRPM,"ax",%progbits
 781              		.align	2
 782              		.global	quadCountToRPM
 783              		.thumb
 784              		.thumb_func
 785              		.type	quadCountToRPM, %function
 786              	quadCountToRPM:
 787              	.LFB71:
 187:main.c        ****     return 0;
 188:main.c        **** }
 189:main.c        **** 
 190:main.c        **** // Calculations
 191:main.c        **** //* ========================================
 192:main.c        **** int16 quadCountToRPM(uint16 count) {
 788              		.loc 1 192 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 16
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 90B5     		push	{r4, r7, lr}
 793              		.cfi_def_cfa_offset 12
 794              		.cfi_offset 4, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 85B0     		sub	sp, sp, #20
 798              		.cfi_def_cfa_offset 32
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 801 0006 0346     		mov	r3, r0
 802 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 193:main.c        ****     float cps = count/57.00;
 803              		.loc 1 193 0
 804 000a FB88     		ldrh	r3, [r7, #6]
 805 000c 1846     		mov	r0, r3
 806 000e FFF7FEFF 		bl	__aeabi_i2d
 807 0012 4FF00002 		mov	r2, #0
 808 0016 0D4B     		ldr	r3, .L33
 809 0018 FFF7FEFF 		bl	__aeabi_ddiv
 810 001c 0346     		mov	r3, r0
 811 001e 0C46     		mov	r4, r1
 812 0020 1846     		mov	r0, r3
 813 0022 2146     		mov	r1, r4
 814 0024 FFF7FEFF 		bl	__aeabi_d2f
 815 0028 0346     		mov	r3, r0
 816 002a FB60     		str	r3, [r7, #12]	@ float
 194:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 19


 817              		.loc 1 194 0
 818 002c 0849     		ldr	r1, .L33+4
 819 002e F868     		ldr	r0, [r7, #12]	@ float
 820 0030 FFF7FEFF 		bl	__aeabi_fmul
 821 0034 0346     		mov	r3, r0
 822 0036 1846     		mov	r0, r3
 823 0038 FFF7FEFF 		bl	__aeabi_f2iz
 824 003c 0346     		mov	r3, r0
 825 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 195:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 196:main.c        ****     return rpm;
 826              		.loc 1 196 0
 827 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 197:main.c        ****     //usbPutString(buffer);
 198:main.c        ****     //usbPutString("rpm ");
 199:main.c        **** }
 828              		.loc 1 199 0
 829 0044 1846     		mov	r0, r3
 830 0046 1437     		adds	r7, r7, #20
 831              		.cfi_def_cfa_offset 12
 832 0048 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 004a 90BD     		pop	{r4, r7, pc}
 836              	.L34:
 837              		.align	2
 838              	.L33:
 839 004c 00804C40 		.word	1078755328
 840 0050 00007041 		.word	1097859072
 841              		.cfi_endproc
 842              	.LFE71:
 843              		.size	quadCountToRPM, .-quadCountToRPM
 844              		.section	.text.ResetSensorFlags,"ax",%progbits
 845              		.align	2
 846              		.global	ResetSensorFlags
 847              		.thumb
 848              		.thumb_func
 849              		.type	ResetSensorFlags, %function
 850              	ResetSensorFlags:
 851              	.LFB72:
 200:main.c        **** 
 201:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 202:main.c        **** void ResetSensorFlags() {
 852              		.loc 1 202 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857 0000 80B4     		push	{r7}
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 203:main.c        ****     s3 = 0;
 862              		.loc 1 203 0
 863 0004 074B     		ldr	r3, .L36
 864 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 20


 865 0008 1A70     		strb	r2, [r3]
 204:main.c        ****     s4 = 0;
 866              		.loc 1 204 0
 867 000a 074B     		ldr	r3, .L36+4
 868 000c 0022     		movs	r2, #0
 869 000e 1A70     		strb	r2, [r3]
 205:main.c        ****     s5 = 0;
 870              		.loc 1 205 0
 871 0010 064B     		ldr	r3, .L36+8
 872 0012 0022     		movs	r2, #0
 873 0014 1A70     		strb	r2, [r3]
 206:main.c        ****     s6 = 0;
 874              		.loc 1 206 0
 875 0016 064B     		ldr	r3, .L36+12
 876 0018 0022     		movs	r2, #0
 877 001a 1A70     		strb	r2, [r3]
 207:main.c        **** }
 878              		.loc 1 207 0
 879 001c 00BF     		nop
 880 001e BD46     		mov	sp, r7
 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0020 80BC     		pop	{r7}
 884              		.cfi_restore 7
 885              		.cfi_def_cfa_offset 0
 886 0022 7047     		bx	lr
 887              	.L37:
 888              		.align	2
 889              	.L36:
 890 0024 00000000 		.word	s3
 891 0028 00000000 		.word	s4
 892 002c 00000000 		.word	s5
 893 0030 00000000 		.word	s6
 894              		.cfi_endproc
 895              	.LFE72:
 896              		.size	ResetSensorFlags, .-ResetSensorFlags
 897              		.global	xBlocksize
 898              		.data
 899 0045 000000   		.align	2
 900              		.type	xBlocksize, %object
 901              		.size	xBlocksize, 4
 902              	xBlocksize:
 903 0048 0000E842 		.word	1122500608
 904              		.global	yBlocksize
 905              		.align	2
 906              		.type	yBlocksize, %object
 907              		.size	yBlocksize, 4
 908              	yBlocksize:
 909 004c 00009642 		.word	1117126656
 910              		.global	currentRow
 911              		.type	currentRow, %object
 912              		.size	currentRow, 1
 913              	currentRow:
 914 0050 01       		.byte	1
 915              		.global	currentCol
 916              		.type	currentCol, %object
 917              		.size	currentCol, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 21


 918              	currentCol:
 919 0051 01       		.byte	1
 920              		.global	stoppedAfterTurn
 921              		.bss
 922              		.type	stoppedAfterTurn, %object
 923              		.size	stoppedAfterTurn, 1
 924              	stoppedAfterTurn:
 925 0054 00       		.space	1
 926              		.global	ignoreSensor
 927              		.type	ignoreSensor, %object
 928              		.size	ignoreSensor, 1
 929              	ignoreSensor:
 930 0055 00       		.space	1
 931              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 932              		.align	2
 933              		.global	ForwardCourseCorrection
 934              		.thumb
 935              		.thumb_func
 936              		.type	ForwardCourseCorrection, %function
 937              	ForwardCourseCorrection:
 938              	.LFB73:
 208:main.c        **** 
 209:main.c        **** float xBlocksize = 116; // 122 mm
 210:main.c        **** float yBlocksize = 75; // 80 mm
 211:main.c        **** uint8 currentRow = 1;
 212:main.c        **** uint8 currentCol = 1;
 213:main.c        **** 
 214:main.c        **** uint8 stoppedAfterTurn = 0;
 215:main.c        **** uint8 ignoreSensor = 0;
 216:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 217:main.c        **** 
 218:main.c        **** enum RobotMovement ForwardCourseCorrection();
 219:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 939              		.loc 1 219 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
 220:main.c        ****     // if S5 and S6 are on black, move forward
 221:main.c        ****     if (!s5 && !s6) {
 949              		.loc 1 221 0
 950 0004 1C4B     		ldr	r3, .L46
 951 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 0008 002B     		cmp	r3, #0
 953 000a 0FD1     		bne	.L39
 954              		.loc 1 221 0 is_stmt 0 discriminator 1
 955 000c 1B4B     		ldr	r3, .L46+4
 956 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957 0010 002B     		cmp	r3, #0
 958 0012 0BD1     		bne	.L39
 222:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 959              		.loc 1 222 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 22


 960 0014 1A4B     		ldr	r3, .L46+8
 961 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0018 032B     		cmp	r3, #3
 963 001a 01D0     		beq	.L40
 223:main.c        ****             return AdjustToTheLeft;
 964              		.loc 1 223 0
 965 001c 0323     		movs	r3, #3
 966 001e 26E0     		b	.L41
 967              	.L40:
 224:main.c        ****         }
 225:main.c        ****         if (previousDirection != AdjustToTheRight) {
 968              		.loc 1 225 0
 969 0020 174B     		ldr	r3, .L46+8
 970 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0024 042B     		cmp	r3, #4
 972 0026 01D0     		beq	.L39
 226:main.c        ****             return AdjustToTheRight;    
 973              		.loc 1 226 0
 974 0028 0423     		movs	r3, #4
 975 002a 20E0     		b	.L41
 976              	.L39:
 227:main.c        ****         }
 228:main.c        ****     }
 229:main.c        ****     
 230:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 231:main.c        ****     if (s5 && s6) {
 977              		.loc 1 231 0
 978 002c 124B     		ldr	r3, .L46
 979 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0030 002B     		cmp	r3, #0
 981 0032 0FD0     		beq	.L42
 982              		.loc 1 231 0 is_stmt 0 discriminator 1
 983 0034 114B     		ldr	r3, .L46+4
 984 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 985 0038 002B     		cmp	r3, #0
 986 003a 0BD0     		beq	.L42
 232:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 987              		.loc 1 232 0 is_stmt 1
 988 003c 104B     		ldr	r3, .L46+8
 989 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 0040 032B     		cmp	r3, #3
 991 0042 01D0     		beq	.L43
 233:main.c        ****             return AdjustToTheLeft;
 992              		.loc 1 233 0
 993 0044 0323     		movs	r3, #3
 994 0046 12E0     		b	.L41
 995              	.L43:
 234:main.c        ****         }
 235:main.c        ****         if (previousDirection != AdjustToTheRight) {
 996              		.loc 1 235 0
 997 0048 0D4B     		ldr	r3, .L46+8
 998 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 004c 042B     		cmp	r3, #4
 1000 004e 01D0     		beq	.L42
 236:main.c        ****             return AdjustToTheRight;    
 1001              		.loc 1 236 0
 1002 0050 0423     		movs	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 23


 1003 0052 0CE0     		b	.L41
 1004              	.L42:
 237:main.c        ****         }
 238:main.c        ****     }
 239:main.c        **** 
 240:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 241:main.c        ****     if (s5) {
 1005              		.loc 1 241 0
 1006 0054 084B     		ldr	r3, .L46
 1007 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 0058 002B     		cmp	r3, #0
 1009 005a 01D0     		beq	.L44
 242:main.c        ****         return AdjustToTheRight;    
 1010              		.loc 1 242 0
 1011 005c 0423     		movs	r3, #4
 1012 005e 06E0     		b	.L41
 1013              	.L44:
 243:main.c        ****     }
 244:main.c        ****     if (s6) {
 1014              		.loc 1 244 0
 1015 0060 064B     		ldr	r3, .L46+4
 1016 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 0064 002B     		cmp	r3, #0
 1018 0066 01D0     		beq	.L45
 245:main.c        ****         return AdjustToTheLeft;    
 1019              		.loc 1 245 0
 1020 0068 0323     		movs	r3, #3
 1021 006a 00E0     		b	.L41
 1022              	.L45:
 246:main.c        ****     }
 247:main.c        ****    
 248:main.c        ****     // We should never actually get to this point
 249:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 250:main.c        ****     return Stop;
 1023              		.loc 1 250 0
 1024 006c 0523     		movs	r3, #5
 1025              	.L41:
 251:main.c        **** }
 1026              		.loc 1 251 0
 1027 006e 1846     		mov	r0, r3
 1028 0070 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 0072 80BC     		pop	{r7}
 1032              		.cfi_restore 7
 1033              		.cfi_def_cfa_offset 0
 1034 0074 7047     		bx	lr
 1035              	.L47:
 1036 0076 00BF     		.align	2
 1037              	.L46:
 1038 0078 00000000 		.word	s5
 1039 007c 00000000 		.word	s6
 1040 0080 00000000 		.word	previousDirection
 1041              		.cfi_endproc
 1042              	.LFE73:
 1043              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1044              		.global	lastDirectionAfter180
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 24


 1045              		.data
 1046              		.type	lastDirectionAfter180, %object
 1047              		.size	lastDirectionAfter180, 1
 1048              	lastDirectionAfter180:
 1049 0052 06       		.byte	6
 1050              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1051              		.align	2
 1052              		.global	SpinCourseCorrection
 1053              		.thumb
 1054              		.thumb_func
 1055              		.type	SpinCourseCorrection, %function
 1056              	SpinCourseCorrection:
 1057              	.LFB74:
 252:main.c        **** 
 253:main.c        **** enum RobotMovement SpinCourseCorrection();
 254:main.c        **** 
 255:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 256:main.c        **** 
 257:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1058              		.loc 1 257 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
 1063 0000 80B4     		push	{r7}
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 258:main.c        ****     // Set first iteration flag.
 259:main.c        ****     if (!spinCourseCorrectionStarted) {
 1068              		.loc 1 259 0
 1069 0004 184B     		ldr	r3, .L55
 1070 0006 1B78     		ldrb	r3, [r3]
 1071 0008 DBB2     		uxtb	r3, r3
 1072 000a 002B     		cmp	r3, #0
 1073 000c 06D1     		bne	.L49
 260:main.c        ****         spinCourseCorrectionStarted = 1;    
 1074              		.loc 1 260 0
 1075 000e 164B     		ldr	r3, .L55
 1076 0010 0122     		movs	r2, #1
 1077 0012 1A70     		strb	r2, [r3]
 261:main.c        ****         lastDirectionAfter180 = currentDirection;
 1078              		.loc 1 261 0
 1079 0014 154B     		ldr	r3, .L55+4
 1080 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1081 0018 154B     		ldr	r3, .L55+8
 1082 001a 1A70     		strb	r2, [r3]
 1083              	.L49:
 262:main.c        ****     }
 263:main.c        ****     
 264:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 265:main.c        ****     if (s5 && s6) {
 1084              		.loc 1 265 0
 1085 001c 154B     		ldr	r3, .L55+12
 1086 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 25


 1088 0022 0FD0     		beq	.L50
 1089              		.loc 1 265 0 is_stmt 0 discriminator 1
 1090 0024 144B     		ldr	r3, .L55+16
 1091 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0028 002B     		cmp	r3, #0
 1093 002a 0BD0     		beq	.L50
 266:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1094              		.loc 1 266 0 is_stmt 1
 1095 002c 104B     		ldr	r3, .L55+8
 1096 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0030 022B     		cmp	r3, #2
 1098 0032 01D0     		beq	.L51
 267:main.c        ****             return TurnLeft;
 1099              		.loc 1 267 0
 1100 0034 0223     		movs	r3, #2
 1101 0036 12E0     		b	.L52
 1102              	.L51:
 268:main.c        ****         }
 269:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1103              		.loc 1 269 0
 1104 0038 0D4B     		ldr	r3, .L55+8
 1105 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 003c 012B     		cmp	r3, #1
 1107 003e 01D0     		beq	.L50
 270:main.c        ****             return TurnRight;    
 1108              		.loc 1 270 0
 1109 0040 0123     		movs	r3, #1
 1110 0042 0CE0     		b	.L52
 1111              	.L50:
 271:main.c        ****         }
 272:main.c        ****     }
 273:main.c        **** 
 274:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 275:main.c        ****     if (s5) {
 1112              		.loc 1 275 0
 1113 0044 0B4B     		ldr	r3, .L55+12
 1114 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0048 002B     		cmp	r3, #0
 1116 004a 01D0     		beq	.L53
 276:main.c        ****         return TurnRight;    
 1117              		.loc 1 276 0
 1118 004c 0123     		movs	r3, #1
 1119 004e 06E0     		b	.L52
 1120              	.L53:
 277:main.c        ****     }
 278:main.c        ****     if (s6) {
 1121              		.loc 1 278 0
 1122 0050 094B     		ldr	r3, .L55+16
 1123 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0054 002B     		cmp	r3, #0
 1125 0056 01D0     		beq	.L54
 279:main.c        ****         return TurnLeft;    
 1126              		.loc 1 279 0
 1127 0058 0223     		movs	r3, #2
 1128 005a 00E0     		b	.L52
 1129              	.L54:
 280:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 26


 281:main.c        ****    
 282:main.c        ****     // We should never actually get to this point
 283:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 284:main.c        ****     return Stop;
 1130              		.loc 1 284 0
 1131 005c 0523     		movs	r3, #5
 1132              	.L52:
 285:main.c        **** }
 1133              		.loc 1 285 0
 1134 005e 1846     		mov	r0, r3
 1135 0060 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0062 80BC     		pop	{r7}
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0064 7047     		bx	lr
 1142              	.L56:
 1143 0066 00BF     		.align	2
 1144              	.L55:
 1145 0068 3D000000 		.word	spinCourseCorrectionStarted
 1146 006c 00000000 		.word	currentDirection
 1147 0070 00000000 		.word	lastDirectionAfter180
 1148 0074 00000000 		.word	s5
 1149 0078 00000000 		.word	s6
 1150              		.cfi_endproc
 1151              	.LFE74:
 1152              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1153              		.section	.text.SpinTurnCourseCorrection,"ax",%progbits
 1154              		.align	2
 1155              		.global	SpinTurnCourseCorrection
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	SpinTurnCourseCorrection, %function
 1159              	SpinTurnCourseCorrection:
 1160              	.LFB75:
 286:main.c        **** enum RobotMovement SpinTurnCourseCorrection();
 287:main.c        **** enum RobotMovement SpinTurnCourseCorrection() {
 1161              		.loc 1 287 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166 0000 80B4     		push	{r7}
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 00AF     		add	r7, sp, #0
 1170              		.cfi_def_cfa_register 7
 288:main.c        ****     // if S5 and S6 are on black, move forward
 289:main.c        ****     if (!s5 && !s6) {
 1171              		.loc 1 289 0
 1172 0004 1C4B     		ldr	r3, .L65
 1173 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1174 0008 002B     		cmp	r3, #0
 1175 000a 0FD1     		bne	.L58
 1176              		.loc 1 289 0 is_stmt 0 discriminator 1
 1177 000c 1B4B     		ldr	r3, .L65+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 27


 1178 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 0010 002B     		cmp	r3, #0
 1180 0012 0BD1     		bne	.L58
 290:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1181              		.loc 1 290 0 is_stmt 1
 1182 0014 1A4B     		ldr	r3, .L65+8
 1183 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 0018 032B     		cmp	r3, #3
 1185 001a 01D0     		beq	.L59
 291:main.c        ****             return TurnLeft;
 1186              		.loc 1 291 0
 1187 001c 0223     		movs	r3, #2
 1188 001e 26E0     		b	.L60
 1189              	.L59:
 292:main.c        ****         }
 293:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1190              		.loc 1 293 0
 1191 0020 174B     		ldr	r3, .L65+8
 1192 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0024 042B     		cmp	r3, #4
 1194 0026 01D0     		beq	.L58
 294:main.c        ****             return TurnRight;    
 1195              		.loc 1 294 0
 1196 0028 0123     		movs	r3, #1
 1197 002a 20E0     		b	.L60
 1198              	.L58:
 295:main.c        ****         }
 296:main.c        ****     }
 297:main.c        ****     
 298:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 299:main.c        ****     if (s5 && s6) {
 1199              		.loc 1 299 0
 1200 002c 124B     		ldr	r3, .L65
 1201 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 0030 002B     		cmp	r3, #0
 1203 0032 0FD0     		beq	.L61
 1204              		.loc 1 299 0 is_stmt 0 discriminator 1
 1205 0034 114B     		ldr	r3, .L65+4
 1206 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 0038 002B     		cmp	r3, #0
 1208 003a 0BD0     		beq	.L61
 300:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1209              		.loc 1 300 0 is_stmt 1
 1210 003c 104B     		ldr	r3, .L65+8
 1211 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 0040 032B     		cmp	r3, #3
 1213 0042 01D0     		beq	.L62
 301:main.c        ****             return TurnLeft;
 1214              		.loc 1 301 0
 1215 0044 0223     		movs	r3, #2
 1216 0046 12E0     		b	.L60
 1217              	.L62:
 302:main.c        ****         }
 303:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1218              		.loc 1 303 0
 1219 0048 0D4B     		ldr	r3, .L65+8
 1220 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 28


 1221 004c 042B     		cmp	r3, #4
 1222 004e 01D0     		beq	.L61
 304:main.c        ****             return TurnRight;    
 1223              		.loc 1 304 0
 1224 0050 0123     		movs	r3, #1
 1225 0052 0CE0     		b	.L60
 1226              	.L61:
 305:main.c        ****         }
 306:main.c        ****     }
 307:main.c        **** 
 308:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 309:main.c        ****     if (s5) {
 1227              		.loc 1 309 0
 1228 0054 084B     		ldr	r3, .L65
 1229 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0058 002B     		cmp	r3, #0
 1231 005a 01D0     		beq	.L63
 310:main.c        ****         return TurnRight;    
 1232              		.loc 1 310 0
 1233 005c 0123     		movs	r3, #1
 1234 005e 06E0     		b	.L60
 1235              	.L63:
 311:main.c        ****     }
 312:main.c        ****     if (s6) {
 1236              		.loc 1 312 0
 1237 0060 064B     		ldr	r3, .L65+4
 1238 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0064 002B     		cmp	r3, #0
 1240 0066 01D0     		beq	.L64
 313:main.c        ****         return TurnLeft;    
 1241              		.loc 1 313 0
 1242 0068 0223     		movs	r3, #2
 1243 006a 00E0     		b	.L60
 1244              	.L64:
 314:main.c        ****     }
 315:main.c        ****    
 316:main.c        ****     // We should never actually get to this point
 317:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 318:main.c        ****     return Stop;
 1245              		.loc 1 318 0
 1246 006c 0523     		movs	r3, #5
 1247              	.L60:
 319:main.c        **** }
 1248              		.loc 1 319 0
 1249 006e 1846     		mov	r0, r3
 1250 0070 BD46     		mov	sp, r7
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 0072 80BC     		pop	{r7}
 1254              		.cfi_restore 7
 1255              		.cfi_def_cfa_offset 0
 1256 0074 7047     		bx	lr
 1257              	.L66:
 1258 0076 00BF     		.align	2
 1259              	.L65:
 1260 0078 00000000 		.word	s5
 1261 007c 00000000 		.word	s6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 29


 1262 0080 00000000 		.word	previousDirection
 1263              		.cfi_endproc
 1264              	.LFE75:
 1265              		.size	SpinTurnCourseCorrection, .-SpinTurnCourseCorrection
 1266              		.global	firstTurnIteration
 1267              		.bss
 1268              		.type	firstTurnIteration, %object
 1269              		.size	firstTurnIteration, 1
 1270              	firstTurnIteration:
 1271 0056 00       		.space	1
 1272              	forwardAfterTurnLIgnore:
 1273 0057 00       		.space	1
 1274              	forwardAfterTurnRIgnore:
 1275 0058 00       		.space	1
 1276              		.global	__aeabi_i2f
 1277              		.global	__aeabi_fcmpge
 1278              		.global	__aeabi_f2d
 1279              		.global	__aeabi_dcmpge
 1280              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1281              		.align	2
 1282              		.global	GetMovementAccordingToInstruction
 1283              		.thumb
 1284              		.thumb_func
 1285              		.type	GetMovementAccordingToInstruction, %function
 1286              	GetMovementAccordingToInstruction:
 1287              	.LFB76:
 320:main.c        **** 
 321:main.c        **** uint8 firstTurnIteration = 0;
 322:main.c        **** volatile static uint8 forwardAfterTurnLIgnore = 0;
 323:main.c        **** volatile static uint8 forwardAfterTurnRIgnore = 0;
 324:main.c        **** 
 325:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1288              		.loc 1 325 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 40
 1291              		@ frame_needed = 1, uses_anonymous_args = 0
 1292 0000 B0B5     		push	{r4, r5, r7, lr}
 1293              		.cfi_def_cfa_offset 16
 1294              		.cfi_offset 4, -16
 1295              		.cfi_offset 5, -12
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 8AB0     		sub	sp, sp, #40
 1299              		.cfi_def_cfa_offset 56
 1300 0004 00AF     		add	r7, sp, #0
 1301              		.cfi_def_cfa_register 7
 326:main.c        ****     float blocksize;
 327:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1302              		.loc 1 327 0
 1303 0006 9C4B     		ldr	r3, .L146
 1304 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1305 000a 002B     		cmp	r3, #0
 1306 000c 03D0     		beq	.L68
 1307              		.loc 1 327 0 is_stmt 0 discriminator 1
 1308 000e 9A4B     		ldr	r3, .L146
 1309 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1310 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 30


 1311 0014 03D1     		bne	.L69
 1312              	.L68:
 328:main.c        ****         blocksize = yBlocksize;
 1313              		.loc 1 328 0 is_stmt 1
 1314 0016 994B     		ldr	r3, .L146+4
 1315 0018 1B68     		ldr	r3, [r3]	@ float
 1316 001a 7B62     		str	r3, [r7, #36]	@ float
 1317 001c 02E0     		b	.L70
 1318              	.L69:
 329:main.c        ****     } else {
 330:main.c        ****         blocksize = xBlocksize;
 1319              		.loc 1 330 0
 1320 001e 984B     		ldr	r3, .L146+8
 1321 0020 1B68     		ldr	r3, [r3]	@ float
 1322 0022 7B62     		str	r3, [r7, #36]	@ float
 1323              	.L70:
 331:main.c        ****     }
 332:main.c        ****     
 333:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 334:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 335:main.c        ****         // OR an EVENT happens in the current instruction
 336:main.c        ****         // e.g. CurrentInstruction: GoForward 
 337:main.c        ****         //      S3 on BLACK
 338:main.c        ****         //      Check Ignore Count
 339:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 340:main.c        ****     
 341:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1324              		.loc 1 341 0
 1325 0024 944B     		ldr	r3, .L146
 1326 0026 1B78     		ldrb	r3, [r3]
 1327 0028 87F82330 		strb	r3, [r7, #35]
 342:main.c        ****     
 343:main.c        ****     /*
 344:main.c        ****     if (instructionList[instructionIndex + 1].direction == uTurn && currentInstructionDirection == 
 345:main.c        ****         if (s5 && s6) {
 346:main.c        ****             MoveToNextInstruction(); // case to start uTurns when needed. prevents uTurn overshooti
 347:main.c        ****             return Stop;
 348:main.c        ****         }
 349:main.c        ****     }
 350:main.c        ****     */
 351:main.c        ****     
 352:main.c        ****     switch (currentInstructionDirection) {
 1328              		.loc 1 352 0
 1329 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1330 0030 052B     		cmp	r3, #5
 1331 0032 00F29383 		bhi	.L71
 1332 0036 01A2     		adr	r2, .L73
 1333 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1334              		.p2align 2
 1335              	.L73:
 1336 003c 55000000 		.word	.L72+1
 1337 0040 4B010000 		.word	.L74+1
 1338 0044 C9020000 		.word	.L75+1
 1339 0048 27060000 		.word	.L76+1
 1340 004c F5030000 		.word	.L77+1
 1341 0050 1F050000 		.word	.L78+1
 1342              		.p2align 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 31


 1343              	.L72:
 353:main.c        ****         case GoForward:
 354:main.c        ****             if(currentDirection == Stop) {
 1344              		.loc 1 354 0
 1345 0054 8B4B     		ldr	r3, .L146+12
 1346 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 0058 052B     		cmp	r3, #5
 1348 005a 08D1     		bne	.L79
 355:main.c        ****                 if(stopBuffer <= 25) {
 1349              		.loc 1 355 0
 1350 005c 8A4B     		ldr	r3, .L146+16
 1351 005e 1B68     		ldr	r3, [r3]
 1352 0060 192B     		cmp	r3, #25
 1353 0062 01D8     		bhi	.L80
 356:main.c        ****                     return Stop;
 1354              		.loc 1 356 0
 1355 0064 0523     		movs	r3, #5
 1356 0066 7AE3     		b	.L81
 1357              	.L80:
 357:main.c        ****                 } else {
 358:main.c        ****                     stopBuffer = 100;
 1358              		.loc 1 358 0
 1359 0068 874B     		ldr	r3, .L146+16
 1360 006a 6422     		movs	r2, #100
 1361 006c 1A60     		str	r2, [r3]
 1362              	.L79:
 359:main.c        ****                 }
 360:main.c        ****             }
 361:main.c        ****             if (s3) {
 1363              		.loc 1 361 0
 1364 006e 874B     		ldr	r3, .L146+20
 1365 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 0072 002B     		cmp	r3, #0
 1367 0074 02D0     		beq	.L82
 362:main.c        ****                 leftStatusFlag = 1;
 1368              		.loc 1 362 0
 1369 0076 864B     		ldr	r3, .L146+24
 1370 0078 0122     		movs	r2, #1
 1371 007a 1A70     		strb	r2, [r3]
 1372              	.L82:
 363:main.c        ****             }
 364:main.c        ****             
 365:main.c        ****             if (s4) {
 1373              		.loc 1 365 0
 1374 007c 854B     		ldr	r3, .L146+28
 1375 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 0080 002B     		cmp	r3, #0
 1377 0082 02D0     		beq	.L83
 366:main.c        ****                 rightStatusFlag = 1;
 1378              		.loc 1 366 0
 1379 0084 844B     		ldr	r3, .L146+32
 1380 0086 0122     		movs	r2, #1
 1381 0088 1A70     		strb	r2, [r3]
 1382              	.L83:
 367:main.c        ****             }
 368:main.c        ****             
 369:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 32


 370:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 371:main.c        ****             if (leftStatusFlag) {
 1383              		.loc 1 371 0
 1384 008a 814B     		ldr	r3, .L146+24
 1385 008c 1B78     		ldrb	r3, [r3]
 1386 008e DBB2     		uxtb	r3, r3
 1387 0090 002B     		cmp	r3, #0
 1388 0092 28D0     		beq	.L84
 372:main.c        ****                 if (!s3) {
 1389              		.loc 1 372 0
 1390 0094 7D4B     		ldr	r3, .L146+20
 1391 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1392 0098 002B     		cmp	r3, #0
 1393 009a 24D1     		bne	.L84
 373:main.c        ****                     leftStatusFlag = 0;    
 1394              		.loc 1 373 0
 1395 009c 7C4B     		ldr	r3, .L146+24
 1396 009e 0022     		movs	r2, #0
 1397 00a0 1A70     		strb	r2, [r3]
 374:main.c        ****                     if (forwardAfterTurnLIgnore > 0) {
 1398              		.loc 1 374 0
 1399 00a2 7E4B     		ldr	r3, .L146+36
 1400 00a4 1B78     		ldrb	r3, [r3]
 1401 00a6 DBB2     		uxtb	r3, r3
 1402 00a8 002B     		cmp	r3, #0
 1403 00aa 07D0     		beq	.L85
 375:main.c        ****                         forwardAfterTurnLIgnore--;
 1404              		.loc 1 375 0
 1405 00ac 7B4B     		ldr	r3, .L146+36
 1406 00ae 1B78     		ldrb	r3, [r3]
 1407 00b0 DBB2     		uxtb	r3, r3
 1408 00b2 013B     		subs	r3, r3, #1
 1409 00b4 DAB2     		uxtb	r2, r3
 1410 00b6 794B     		ldr	r3, .L146+36
 1411 00b8 1A70     		strb	r2, [r3]
 1412 00ba 14E0     		b	.L84
 1413              	.L85:
 376:main.c        ****                     } else {
 377:main.c        ****                         if (currentIgnoreL == 0) {
 1414              		.loc 1 377 0
 1415 00bc 784B     		ldr	r3, .L146+40
 1416 00be 1B78     		ldrb	r3, [r3]
 1417 00c0 DBB2     		uxtb	r3, r3
 1418 00c2 002B     		cmp	r3, #0
 1419 00c4 03D1     		bne	.L86
 378:main.c        ****                             MoveToNextInstruction();
 1420              		.loc 1 378 0
 1421 00c6 FFF7FEFF 		bl	MoveToNextInstruction
 379:main.c        ****                             return Stop;
 1422              		.loc 1 379 0
 1423 00ca 0523     		movs	r3, #5
 1424 00cc 47E3     		b	.L81
 1425              	.L86:
 380:main.c        ****                         }
 381:main.c        ****                         if (currentIgnoreL > 0) {
 1426              		.loc 1 381 0
 1427 00ce 744B     		ldr	r3, .L146+40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 33


 1428 00d0 1B78     		ldrb	r3, [r3]
 1429 00d2 DBB2     		uxtb	r3, r3
 1430 00d4 002B     		cmp	r3, #0
 1431 00d6 06D0     		beq	.L84
 382:main.c        ****                             currentIgnoreL--;    
 1432              		.loc 1 382 0
 1433 00d8 714B     		ldr	r3, .L146+40
 1434 00da 1B78     		ldrb	r3, [r3]
 1435 00dc DBB2     		uxtb	r3, r3
 1436 00de 013B     		subs	r3, r3, #1
 1437 00e0 DAB2     		uxtb	r2, r3
 1438 00e2 6F4B     		ldr	r3, .L146+40
 1439 00e4 1A70     		strb	r2, [r3]
 1440              	.L84:
 383:main.c        ****                         }
 384:main.c        ****                     }
 385:main.c        ****                 }
 386:main.c        ****             }
 387:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 388:main.c        ****             if (rightStatusFlag) {
 1441              		.loc 1 388 0
 1442 00e6 6C4B     		ldr	r3, .L146+32
 1443 00e8 1B78     		ldrb	r3, [r3]
 1444 00ea DBB2     		uxtb	r3, r3
 1445 00ec 002B     		cmp	r3, #0
 1446 00ee 28D0     		beq	.L87
 389:main.c        ****                 if (!s4) {
 1447              		.loc 1 389 0
 1448 00f0 684B     		ldr	r3, .L146+28
 1449 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 00f4 002B     		cmp	r3, #0
 1451 00f6 24D1     		bne	.L87
 390:main.c        ****                     rightStatusFlag = 0;           
 1452              		.loc 1 390 0
 1453 00f8 674B     		ldr	r3, .L146+32
 1454 00fa 0022     		movs	r2, #0
 1455 00fc 1A70     		strb	r2, [r3]
 391:main.c        ****                     if (forwardAfterTurnRIgnore > 0) {
 1456              		.loc 1 391 0
 1457 00fe 694B     		ldr	r3, .L146+44
 1458 0100 1B78     		ldrb	r3, [r3]
 1459 0102 DBB2     		uxtb	r3, r3
 1460 0104 002B     		cmp	r3, #0
 1461 0106 07D0     		beq	.L88
 392:main.c        ****                         forwardAfterTurnRIgnore--;
 1462              		.loc 1 392 0
 1463 0108 664B     		ldr	r3, .L146+44
 1464 010a 1B78     		ldrb	r3, [r3]
 1465 010c DBB2     		uxtb	r3, r3
 1466 010e 013B     		subs	r3, r3, #1
 1467 0110 DAB2     		uxtb	r2, r3
 1468 0112 644B     		ldr	r3, .L146+44
 1469 0114 1A70     		strb	r2, [r3]
 1470 0116 14E0     		b	.L87
 1471              	.L88:
 393:main.c        ****                     } else {
 394:main.c        ****                         if (currentIgnoreR == 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 34


 1472              		.loc 1 394 0
 1473 0118 634B     		ldr	r3, .L146+48
 1474 011a 1B78     		ldrb	r3, [r3]
 1475 011c DBB2     		uxtb	r3, r3
 1476 011e 002B     		cmp	r3, #0
 1477 0120 03D1     		bne	.L89
 395:main.c        ****                             MoveToNextInstruction();
 1478              		.loc 1 395 0
 1479 0122 FFF7FEFF 		bl	MoveToNextInstruction
 396:main.c        ****                             return Stop;
 1480              		.loc 1 396 0
 1481 0126 0523     		movs	r3, #5
 1482 0128 19E3     		b	.L81
 1483              	.L89:
 397:main.c        ****                         }
 398:main.c        ****                         if (currentIgnoreR > 0) {
 1484              		.loc 1 398 0
 1485 012a 5F4B     		ldr	r3, .L146+48
 1486 012c 1B78     		ldrb	r3, [r3]
 1487 012e DBB2     		uxtb	r3, r3
 1488 0130 002B     		cmp	r3, #0
 1489 0132 06D0     		beq	.L87
 399:main.c        ****                             currentIgnoreR--;   
 1490              		.loc 1 399 0
 1491 0134 5C4B     		ldr	r3, .L146+48
 1492 0136 1B78     		ldrb	r3, [r3]
 1493 0138 DBB2     		uxtb	r3, r3
 1494 013a 013B     		subs	r3, r3, #1
 1495 013c DAB2     		uxtb	r2, r3
 1496 013e 5A4B     		ldr	r3, .L146+48
 1497 0140 1A70     		strb	r2, [r3]
 1498              	.L87:
 400:main.c        ****                         }
 401:main.c        ****                     }
 402:main.c        ****                     
 403:main.c        ****                 }
 404:main.c        ****                    
 405:main.c        ****             }
 406:main.c        ****             
 407:main.c        ****           
 408:main.c        ****             return ForwardCourseCorrection();
 1499              		.loc 1 408 0
 1500 0142 FFF7FEFF 		bl	ForwardCourseCorrection
 1501 0146 0346     		mov	r3, r0
 1502 0148 09E3     		b	.L81
 1503              	.L74:
 409:main.c        ****             break;
 410:main.c        ****         case waitForLeftTurn:
 411:main.c        ****             // continue moving forward until s3 goes on black
 412:main.c        ****             // if we are turning left already
 413:main.c        ****                 // wait until s5 || s6 are on black
 414:main.c        ****                 // return stop
 415:main.c        ****             if (!firstTurnIteration) {
 1504              		.loc 1 415 0
 1505 014a 584B     		ldr	r3, .L146+52
 1506 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 014e 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 35


 1508 0150 08D1     		bne	.L90
 416:main.c        ****                 
 417:main.c        ****                 if (!s3) {
 1509              		.loc 1 417 0
 1510 0152 4E4B     		ldr	r3, .L146+20
 1511 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 0156 002B     		cmp	r3, #0
 1513 0158 04D1     		bne	.L90
 418:main.c        ****                     firstTurnIteration = 1;
 1514              		.loc 1 418 0
 1515 015a 544B     		ldr	r3, .L146+52
 1516 015c 0122     		movs	r2, #1
 1517 015e 1A70     		strb	r2, [r3]
 419:main.c        ****                     return Stop;    
 1518              		.loc 1 419 0
 1519 0160 0523     		movs	r3, #5
 1520 0162 FCE2     		b	.L81
 1521              	.L90:
 420:main.c        ****                 }
 421:main.c        ****                 if (s3) {
 422:main.c        ****                     //return Backward;    
 423:main.c        ****                 }
 424:main.c        ****             }
 425:main.c        ****             
 426:main.c        ****             if (turnFinishedFlag) {
 1522              		.loc 1 426 0
 1523 0164 524B     		ldr	r3, .L146+56
 1524 0166 1B78     		ldrb	r3, [r3]
 1525 0168 DBB2     		uxtb	r3, r3
 1526 016a 002B     		cmp	r3, #0
 1527 016c 31D0     		beq	.L92
 427:main.c        ****                 if (!s3 && !s5 && !s6) {
 1528              		.loc 1 427 0
 1529 016e 474B     		ldr	r3, .L146+20
 1530 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 0172 002B     		cmp	r3, #0
 1532 0174 0BD1     		bne	.L93
 1533              		.loc 1 427 0 is_stmt 0 discriminator 1
 1534 0176 4F4B     		ldr	r3, .L146+60
 1535 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 017a 002B     		cmp	r3, #0
 1537 017c 07D1     		bne	.L93
 1538              		.loc 1 427 0 discriminator 2
 1539 017e 4E4B     		ldr	r3, .L146+64
 1540 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 0182 002B     		cmp	r3, #0
 1542 0184 03D1     		bne	.L93
 428:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 429:main.c        ****                     return ForwardCourseCorrection();
 1543              		.loc 1 429 0 is_stmt 1
 1544 0186 FFF7FEFF 		bl	ForwardCourseCorrection
 1545 018a 0346     		mov	r3, r0
 1546 018c E7E2     		b	.L81
 1547              	.L93:
 430:main.c        ****                 }
 431:main.c        ****                 if (s5 || s6) {
 1548              		.loc 1 431 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 36


 1549 018e 494B     		ldr	r3, .L146+60
 1550 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 0192 002B     		cmp	r3, #0
 1552 0194 03D1     		bne	.L94
 1553              		.loc 1 431 0 is_stmt 0 discriminator 1
 1554 0196 484B     		ldr	r3, .L146+64
 1555 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1556 019a 002B     		cmp	r3, #0
 1557 019c 03D0     		beq	.L95
 1558              	.L94:
 432:main.c        ****                     return SpinCourseCorrection();
 1559              		.loc 1 432 0 is_stmt 1
 1560 019e FFF7FEFF 		bl	SpinCourseCorrection
 1561 01a2 0346     		mov	r3, r0
 1562 01a4 DBE2     		b	.L81
 1563              	.L95:
 433:main.c        ****                 }
 434:main.c        ****                 if (forwardBuffer <= 10) {
 1564              		.loc 1 434 0
 1565 01a6 454B     		ldr	r3, .L146+68
 1566 01a8 1B88     		ldrh	r3, [r3]
 1567 01aa 0A2B     		cmp	r3, #10
 1568 01ac 03D8     		bhi	.L96
 435:main.c        ****                     return ForwardCourseCorrection();    
 1569              		.loc 1 435 0
 1570 01ae FFF7FEFF 		bl	ForwardCourseCorrection
 1571 01b2 0346     		mov	r3, r0
 1572 01b4 D3E2     		b	.L81
 1573              	.L96:
 436:main.c        **** 
 437:main.c        ****                 } else {
 438:main.c        ****                     forwardBuffer = 100;
 1574              		.loc 1 438 0
 1575 01b6 414B     		ldr	r3, .L146+68
 1576 01b8 6422     		movs	r2, #100
 1577 01ba 1A80     		strh	r2, [r3]	@ movhi
 439:main.c        ****                     if (s3) {
 1578              		.loc 1 439 0
 1579 01bc 334B     		ldr	r3, .L146+20
 1580 01be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1581 01c0 002B     		cmp	r3, #0
 1582 01c2 06D0     		beq	.L92
 440:main.c        ****                         turnFinishedFlag = 0;
 1583              		.loc 1 440 0
 1584 01c4 3A4B     		ldr	r3, .L146+56
 1585 01c6 0022     		movs	r2, #0
 1586 01c8 1A70     		strb	r2, [r3]
 441:main.c        ****                         MoveToNextInstruction();   
 1587              		.loc 1 441 0
 1588 01ca FFF7FEFF 		bl	MoveToNextInstruction
 442:main.c        ****                         return Stop;  
 1589              		.loc 1 442 0
 1590 01ce 0523     		movs	r3, #5
 1591 01d0 C5E2     		b	.L81
 1592              	.L92:
 443:main.c        ****                     }
 444:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 37


 445:main.c        ****             }
 446:main.c        ****             
 447:main.c        ****             
 448:main.c        ****             if (currentDirection == Stop) {
 1593              		.loc 1 448 0
 1594 01d2 2C4B     		ldr	r3, .L146+12
 1595 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 01d6 052B     		cmp	r3, #5
 1597 01d8 09D1     		bne	.L97
 449:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 450:main.c        ****                 if (stopBuffer <= 25) {
 1598              		.loc 1 450 0
 1599 01da 2B4B     		ldr	r3, .L146+16
 1600 01dc 1B68     		ldr	r3, [r3]
 1601 01de 192B     		cmp	r3, #25
 1602 01e0 01D8     		bhi	.L98
 451:main.c        ****                     return Stop;   
 1603              		.loc 1 451 0
 1604 01e2 0523     		movs	r3, #5
 1605 01e4 BBE2     		b	.L81
 1606              	.L98:
 452:main.c        ****                 }
 453:main.c        ****                 return ForwardCourseCorrection();
 1607              		.loc 1 453 0
 1608 01e6 FFF7FEFF 		bl	ForwardCourseCorrection
 1609 01ea 0346     		mov	r3, r0
 1610 01ec B7E2     		b	.L81
 1611              	.L97:
 454:main.c        ****             }
 455:main.c        ****          
 456:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 457:main.c        ****             if (currentDirection == TurnLeft) {
 1612              		.loc 1 457 0
 1613 01ee 254B     		ldr	r3, .L146+12
 1614 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 01f2 022B     		cmp	r3, #2
 1616 01f4 32D1     		bne	.L99
 458:main.c        ****                 // If turn started and we are still on black, continue turning
 459:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 460:main.c        ****                 if (turnStartedFlag) {
 1617              		.loc 1 460 0
 1618 01f6 324B     		ldr	r3, .L146+72
 1619 01f8 1B78     		ldrb	r3, [r3]
 1620 01fa DBB2     		uxtb	r3, r3
 1621 01fc 002B     		cmp	r3, #0
 1622 01fe 0ED0     		beq	.L100
 461:main.c        ****                     if (s3 && (s5 && s6)) {
 1623              		.loc 1 461 0
 1624 0200 224B     		ldr	r3, .L146+20
 1625 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1626 0204 002B     		cmp	r3, #0
 1627 0206 0AD0     		beq	.L100
 1628              		.loc 1 461 0 is_stmt 0 discriminator 1
 1629 0208 2A4B     		ldr	r3, .L146+60
 1630 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1631 020c 002B     		cmp	r3, #0
 1632 020e 06D0     		beq	.L100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 38


 1633              		.loc 1 461 0 discriminator 2
 1634 0210 294B     		ldr	r3, .L146+64
 1635 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 0214 002B     		cmp	r3, #0
 1637 0216 02D0     		beq	.L100
 462:main.c        ****                         turnStartedFlag = 0;
 1638              		.loc 1 462 0 is_stmt 1
 1639 0218 294B     		ldr	r3, .L146+72
 1640 021a 0022     		movs	r2, #0
 1641 021c 1A70     		strb	r2, [r3]
 1642              	.L100:
 463:main.c        ****                     }
 464:main.c        ****                 }
 465:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1643              		.loc 1 465 0
 1644 021e 284B     		ldr	r3, .L146+72
 1645 0220 1B78     		ldrb	r3, [r3]
 1646 0222 DBB2     		uxtb	r3, r3
 1647 0224 002B     		cmp	r3, #0
 1648 0226 17D1     		bne	.L101
 1649              		.loc 1 465 0 is_stmt 0 discriminator 1
 1650 0228 184B     		ldr	r3, .L146+20
 1651 022a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 022c 002B     		cmp	r3, #0
 1653 022e 13D1     		bne	.L101
 1654              		.loc 1 465 0 discriminator 2
 1655 0230 204B     		ldr	r3, .L146+60
 1656 0232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 0234 002B     		cmp	r3, #0
 1658 0236 03D0     		beq	.L102
 1659              		.loc 1 465 0 discriminator 3
 1660 0238 1F4B     		ldr	r3, .L146+64
 1661 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1662 023c 002B     		cmp	r3, #0
 1663 023e 0BD1     		bne	.L101
 1664              	.L102:
 466:main.c        ****                     turnFinishedFlag = 1;
 1665              		.loc 1 466 0 is_stmt 1
 1666 0240 1B4B     		ldr	r3, .L146+56
 1667 0242 0122     		movs	r2, #1
 1668 0244 1A70     		strb	r2, [r3]
 467:main.c        ****                     firstTurnIteration = 0;
 1669              		.loc 1 467 0
 1670 0246 194B     		ldr	r3, .L146+52
 1671 0248 0022     		movs	r2, #0
 1672 024a 1A70     		strb	r2, [r3]
 468:main.c        ****                     totalDistance = 0;
 1673              		.loc 1 468 0
 1674 024c 1D4B     		ldr	r3, .L146+76
 1675 024e 4FF00002 		mov	r2, #0
 1676 0252 1A60     		str	r2, [r3]	@ float
 469:main.c        ****                     return ForwardAfterTurn;
 1677              		.loc 1 469 0
 1678 0254 0823     		movs	r3, #8
 1679 0256 82E2     		b	.L81
 1680              	.L101:
 470:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 39


 471:main.c        ****                 else
 472:main.c        ****                 {
 473:main.c        ****                     return TurnLeft;
 1681              		.loc 1 473 0
 1682 0258 0223     		movs	r3, #2
 1683 025a 80E2     		b	.L81
 1684              	.L99:
 474:main.c        ****                 }
 475:main.c        ****             }
 476:main.c        ****             
 477:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 478:main.c        ****             if (!s3) {
 1685              		.loc 1 478 0
 1686 025c 0B4B     		ldr	r3, .L146+20
 1687 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1688 0260 002B     		cmp	r3, #0
 1689 0262 04D1     		bne	.L103
 479:main.c        ****                 turnStartedFlag = 1;
 1690              		.loc 1 479 0
 1691 0264 164B     		ldr	r3, .L146+72
 1692 0266 0122     		movs	r2, #1
 1693 0268 1A70     		strb	r2, [r3]
 480:main.c        ****                 return TurnLeft;
 1694              		.loc 1 480 0
 1695 026a 0223     		movs	r3, #2
 1696 026c 77E2     		b	.L81
 1697              	.L103:
 481:main.c        ****             }
 482:main.c        ****             
 483:main.c        ****             // Otherwise, keep going forward
 484:main.c        ****             return ForwardCourseCorrection(); 
 1698              		.loc 1 484 0
 1699 026e FFF7FEFF 		bl	ForwardCourseCorrection
 1700 0272 0346     		mov	r3, r0
 1701 0274 73E2     		b	.L81
 1702              	.L147:
 1703 0276 00BF     		.align	2
 1704              	.L146:
 1705 0278 00000000 		.word	currentInstruction
 1706 027c 00000000 		.word	yBlocksize
 1707 0280 00000000 		.word	xBlocksize
 1708 0284 00000000 		.word	currentDirection
 1709 0288 00000000 		.word	stopBuffer
 1710 028c 00000000 		.word	s3
 1711 0290 3B000000 		.word	leftStatusFlag
 1712 0294 00000000 		.word	s4
 1713 0298 3C000000 		.word	rightStatusFlag
 1714 029c 57000000 		.word	forwardAfterTurnLIgnore
 1715 02a0 3E000000 		.word	currentIgnoreL
 1716 02a4 58000000 		.word	forwardAfterTurnRIgnore
 1717 02a8 3F000000 		.word	currentIgnoreR
 1718 02ac 00000000 		.word	firstTurnIteration
 1719 02b0 37000000 		.word	turnFinishedFlag
 1720 02b4 00000000 		.word	s5
 1721 02b8 00000000 		.word	s6
 1722 02bc 00000000 		.word	forwardBuffer
 1723 02c0 36000000 		.word	turnStartedFlag
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 40


 1724 02c4 00000000 		.word	totalDistance
 1725              	.L75:
 485:main.c        ****             break;
 486:main.c        ****         case waitForRightTurn:
 487:main.c        ****             // continue moving forward until s4 goes on black
 488:main.c        ****             // if we are turning left already
 489:main.c        ****                 // wait until s5 || s6 are on black
 490:main.c        ****                 // return stop
 491:main.c        ****             if (!firstTurnIteration) {
 1726              		.loc 1 491 0
 1727 02c8 A14B     		ldr	r3, .L148+8
 1728 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 02cc 002B     		cmp	r3, #0
 1730 02ce 08D1     		bne	.L104
 492:main.c        ****                 
 493:main.c        ****                 if (!s4) {
 1731              		.loc 1 493 0
 1732 02d0 A04B     		ldr	r3, .L148+12
 1733 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 02d4 002B     		cmp	r3, #0
 1735 02d6 04D1     		bne	.L104
 494:main.c        ****                     firstTurnIteration = 1; 
 1736              		.loc 1 494 0
 1737 02d8 9D4B     		ldr	r3, .L148+8
 1738 02da 0122     		movs	r2, #1
 1739 02dc 1A70     		strb	r2, [r3]
 495:main.c        ****                     return Stop;
 1740              		.loc 1 495 0
 1741 02de 0523     		movs	r3, #5
 1742 02e0 3DE2     		b	.L81
 1743              	.L104:
 496:main.c        ****                 }
 497:main.c        ****                 if (s4) {
 498:main.c        ****                     //return Backward;    
 499:main.c        ****                 }
 500:main.c        ****             }
 501:main.c        **** 
 502:main.c        ****             if (turnFinishedFlag) {
 1744              		.loc 1 502 0
 1745 02e2 9D4B     		ldr	r3, .L148+16
 1746 02e4 1B78     		ldrb	r3, [r3]
 1747 02e6 DBB2     		uxtb	r3, r3
 1748 02e8 002B     		cmp	r3, #0
 1749 02ea 34D0     		beq	.L106
 503:main.c        ****                 if (!s4 && !s5 && !s6) {
 1750              		.loc 1 503 0
 1751 02ec 994B     		ldr	r3, .L148+12
 1752 02ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1753 02f0 002B     		cmp	r3, #0
 1754 02f2 0BD1     		bne	.L107
 1755              		.loc 1 503 0 is_stmt 0 discriminator 1
 1756 02f4 994B     		ldr	r3, .L148+20
 1757 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1758 02f8 002B     		cmp	r3, #0
 1759 02fa 07D1     		bne	.L107
 1760              		.loc 1 503 0 discriminator 2
 1761 02fc 984B     		ldr	r3, .L148+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 41


 1762 02fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1763 0300 002B     		cmp	r3, #0
 1764 0302 03D1     		bne	.L107
 504:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 505:main.c        ****                     return ForwardCourseCorrection();
 1765              		.loc 1 505 0 is_stmt 1
 1766 0304 FFF7FEFF 		bl	ForwardCourseCorrection
 1767 0308 0346     		mov	r3, r0
 1768 030a 28E2     		b	.L81
 1769              	.L107:
 506:main.c        ****                 }
 507:main.c        ****                 if (s5 || s6) {
 1770              		.loc 1 507 0
 1771 030c 934B     		ldr	r3, .L148+20
 1772 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 0310 002B     		cmp	r3, #0
 1774 0312 03D1     		bne	.L108
 1775              		.loc 1 507 0 is_stmt 0 discriminator 1
 1776 0314 924B     		ldr	r3, .L148+24
 1777 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1778 0318 002B     		cmp	r3, #0
 1779 031a 03D0     		beq	.L109
 1780              	.L108:
 508:main.c        ****                     return SpinCourseCorrection();
 1781              		.loc 1 508 0 is_stmt 1
 1782 031c FFF7FEFF 		bl	SpinCourseCorrection
 1783 0320 0346     		mov	r3, r0
 1784 0322 1CE2     		b	.L81
 1785              	.L109:
 509:main.c        ****                 }
 510:main.c        ****                 if (forwardBuffer <= 9) {
 1786              		.loc 1 510 0
 1787 0324 8F4B     		ldr	r3, .L148+28
 1788 0326 1B88     		ldrh	r3, [r3]
 1789 0328 092B     		cmp	r3, #9
 1790 032a 03D8     		bhi	.L110
 511:main.c        ****                     return ForwardCourseCorrection();    
 1791              		.loc 1 511 0
 1792 032c FFF7FEFF 		bl	ForwardCourseCorrection
 1793 0330 0346     		mov	r3, r0
 1794 0332 14E2     		b	.L81
 1795              	.L110:
 512:main.c        **** 
 513:main.c        ****                 } else {
 514:main.c        ****                     forwardBuffer = 100;
 1796              		.loc 1 514 0
 1797 0334 8B4B     		ldr	r3, .L148+28
 1798 0336 6422     		movs	r2, #100
 1799 0338 1A80     		strh	r2, [r3]	@ movhi
 515:main.c        ****                     if (s4) {
 1800              		.loc 1 515 0
 1801 033a 864B     		ldr	r3, .L148+12
 1802 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1803 033e 002B     		cmp	r3, #0
 1804 0340 09D0     		beq	.L106
 516:main.c        ****                         firstTurnIteration = 0;
 1805              		.loc 1 516 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 42


 1806 0342 834B     		ldr	r3, .L148+8
 1807 0344 0022     		movs	r2, #0
 1808 0346 1A70     		strb	r2, [r3]
 517:main.c        ****                         turnFinishedFlag = 0;
 1809              		.loc 1 517 0
 1810 0348 834B     		ldr	r3, .L148+16
 1811 034a 0022     		movs	r2, #0
 1812 034c 1A70     		strb	r2, [r3]
 518:main.c        ****                         MoveToNextInstruction();   
 1813              		.loc 1 518 0
 1814 034e FFF7FEFF 		bl	MoveToNextInstruction
 519:main.c        ****                         return Stop;  
 1815              		.loc 1 519 0
 1816 0352 0523     		movs	r3, #5
 1817 0354 03E2     		b	.L81
 1818              	.L106:
 520:main.c        ****                     }
 521:main.c        ****                 }
 522:main.c        ****             }
 523:main.c        ****             
 524:main.c        ****             if (currentDirection == Stop) {
 1819              		.loc 1 524 0
 1820 0356 844B     		ldr	r3, .L148+32
 1821 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1822 035a 052B     		cmp	r3, #5
 1823 035c 09D1     		bne	.L111
 525:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 526:main.c        ****                 if (stopBuffer <= 25) {
 1824              		.loc 1 526 0
 1825 035e 834B     		ldr	r3, .L148+36
 1826 0360 1B68     		ldr	r3, [r3]
 1827 0362 192B     		cmp	r3, #25
 1828 0364 01D8     		bhi	.L112
 527:main.c        ****                     return Stop;   
 1829              		.loc 1 527 0
 1830 0366 0523     		movs	r3, #5
 1831 0368 F9E1     		b	.L81
 1832              	.L112:
 528:main.c        ****                 }
 529:main.c        **** 
 530:main.c        ****                 return ForwardCourseCorrection();
 1833              		.loc 1 530 0
 1834 036a FFF7FEFF 		bl	ForwardCourseCorrection
 1835 036e 0346     		mov	r3, r0
 1836 0370 F5E1     		b	.L81
 1837              	.L111:
 531:main.c        ****             }
 532:main.c        ****                       
 533:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 534:main.c        ****             if (currentDirection == TurnRight) {
 1838              		.loc 1 534 0
 1839 0372 7D4B     		ldr	r3, .L148+32
 1840 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 0376 012B     		cmp	r3, #1
 1842 0378 2FD1     		bne	.L113
 535:main.c        ****                 // If turn started and we are still on black, continue turning
 536:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 43


 537:main.c        ****                 if (turnStartedFlag) {
 1843              		.loc 1 537 0
 1844 037a 7D4B     		ldr	r3, .L148+40
 1845 037c 1B78     		ldrb	r3, [r3]
 1846 037e DBB2     		uxtb	r3, r3
 1847 0380 002B     		cmp	r3, #0
 1848 0382 0ED0     		beq	.L114
 538:main.c        ****                     if (s4 && (s5 && s6)) {
 1849              		.loc 1 538 0
 1850 0384 734B     		ldr	r3, .L148+12
 1851 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 0388 002B     		cmp	r3, #0
 1853 038a 0AD0     		beq	.L114
 1854              		.loc 1 538 0 is_stmt 0 discriminator 1
 1855 038c 734B     		ldr	r3, .L148+20
 1856 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 0390 002B     		cmp	r3, #0
 1858 0392 06D0     		beq	.L114
 1859              		.loc 1 538 0 discriminator 2
 1860 0394 724B     		ldr	r3, .L148+24
 1861 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1862 0398 002B     		cmp	r3, #0
 1863 039a 02D0     		beq	.L114
 539:main.c        ****                         turnStartedFlag = 0;
 1864              		.loc 1 539 0 is_stmt 1
 1865 039c 744B     		ldr	r3, .L148+40
 1866 039e 0022     		movs	r2, #0
 1867 03a0 1A70     		strb	r2, [r3]
 1868              	.L114:
 540:main.c        ****                     }
 541:main.c        ****                 }
 542:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1869              		.loc 1 542 0
 1870 03a2 734B     		ldr	r3, .L148+40
 1871 03a4 1B78     		ldrb	r3, [r3]
 1872 03a6 DBB2     		uxtb	r3, r3
 1873 03a8 002B     		cmp	r3, #0
 1874 03aa 14D1     		bne	.L115
 1875              		.loc 1 542 0 is_stmt 0 discriminator 1
 1876 03ac 694B     		ldr	r3, .L148+12
 1877 03ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 03b0 002B     		cmp	r3, #0
 1879 03b2 10D1     		bne	.L115
 1880              		.loc 1 542 0 discriminator 2
 1881 03b4 694B     		ldr	r3, .L148+20
 1882 03b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1883 03b8 002B     		cmp	r3, #0
 1884 03ba 03D0     		beq	.L116
 1885              		.loc 1 542 0 discriminator 3
 1886 03bc 684B     		ldr	r3, .L148+24
 1887 03be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 03c0 002B     		cmp	r3, #0
 1889 03c2 08D1     		bne	.L115
 1890              	.L116:
 543:main.c        ****                     turnFinishedFlag = 1;
 1891              		.loc 1 543 0 is_stmt 1
 1892 03c4 644B     		ldr	r3, .L148+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 44


 1893 03c6 0122     		movs	r2, #1
 1894 03c8 1A70     		strb	r2, [r3]
 544:main.c        ****                     totalDistance = 0;
 1895              		.loc 1 544 0
 1896 03ca 6A4B     		ldr	r3, .L148+44
 1897 03cc 4FF00002 		mov	r2, #0
 1898 03d0 1A60     		str	r2, [r3]	@ float
 545:main.c        ****                     return ForwardAfterTurn;
 1899              		.loc 1 545 0
 1900 03d2 0823     		movs	r3, #8
 1901 03d4 C3E1     		b	.L81
 1902              	.L115:
 546:main.c        ****                 }
 547:main.c        ****                 else
 548:main.c        ****                 {
 549:main.c        ****                     return TurnRight;
 1903              		.loc 1 549 0
 1904 03d6 0123     		movs	r3, #1
 1905 03d8 C1E1     		b	.L81
 1906              	.L113:
 550:main.c        ****                 }
 551:main.c        ****             }
 552:main.c        ****             
 553:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 554:main.c        ****             if (!s4) {
 1907              		.loc 1 554 0
 1908 03da 5E4B     		ldr	r3, .L148+12
 1909 03dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1910 03de 002B     		cmp	r3, #0
 1911 03e0 04D1     		bne	.L117
 555:main.c        ****                 turnStartedFlag = 1;
 1912              		.loc 1 555 0
 1913 03e2 634B     		ldr	r3, .L148+40
 1914 03e4 0122     		movs	r2, #1
 1915 03e6 1A70     		strb	r2, [r3]
 556:main.c        ****                 return TurnRight;
 1916              		.loc 1 556 0
 1917 03e8 0123     		movs	r3, #1
 1918 03ea B8E1     		b	.L81
 1919              	.L117:
 557:main.c        ****             }
 558:main.c        ****             
 559:main.c        ****             // Otherwise, keep going forward
 560:main.c        ****             return ForwardCourseCorrection(); 
 1920              		.loc 1 560 0
 1921 03ec FFF7FEFF 		bl	ForwardCourseCorrection
 1922 03f0 0346     		mov	r3, r0
 1923 03f2 B4E1     		b	.L81
 1924              	.L77:
 561:main.c        ****             break;
 562:main.c        ****         case ForwardUntilTarget:       
 563:main.c        ****             // Reset distance on first iteration of this instruction
 564:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1925              		.loc 1 564 0
 1926 03f4 604B     		ldr	r3, .L148+48
 1927 03f6 1B78     		ldrb	r3, [r3]
 1928 03f8 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 45


 1929 03fa 002B     		cmp	r3, #0
 1930 03fc 11D1     		bne	.L118
 1931              	.LBB3:
 565:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1932              		.loc 1 565 0
 1933 03fe 5E4B     		ldr	r3, .L148+48
 1934 0400 0122     		movs	r2, #1
 1935 0402 1A70     		strb	r2, [r3]
 566:main.c        ****                 //uTurnIgnoreL = 0;
 567:main.c        ****                 //uTurnIgnoreR = 0;
 568:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 569:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1936              		.loc 1 569 0
 1937 0404 5D4B     		ldr	r3, .L148+52
 1938 0406 DB68     		ldr	r3, [r3, #12]
 1939 0408 FB61     		str	r3, [r7, #28]
 570:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 1940              		.loc 1 570 0
 1941 040a F869     		ldr	r0, [r7, #28]
 1942 040c FFF7FEFF 		bl	__aeabi_i2f
 1943 0410 0346     		mov	r3, r0
 1944 0412 796A     		ldr	r1, [r7, #36]	@ float
 1945 0414 1846     		mov	r0, r3
 1946 0416 FFF7FEFF 		bl	__aeabi_fmul
 1947 041a 0346     		mov	r3, r0
 1948 041c 1A46     		mov	r2, r3
 1949 041e 584B     		ldr	r3, .L148+56
 1950 0420 1A60     		str	r2, [r3]	@ float
 1951              	.L118:
 1952              	.LBE3:
 571:main.c        ****             }
 572:main.c        ****             
 573:main.c        ****             if (s3) {
 1953              		.loc 1 573 0
 1954 0422 584B     		ldr	r3, .L148+60
 1955 0424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 0426 002B     		cmp	r3, #0
 1957 0428 02D0     		beq	.L119
 574:main.c        ****                 leftStatusFlag = 1;
 1958              		.loc 1 574 0
 1959 042a 574B     		ldr	r3, .L148+64
 1960 042c 0122     		movs	r2, #1
 1961 042e 1A70     		strb	r2, [r3]
 1962              	.L119:
 575:main.c        ****             }
 576:main.c        ****             
 577:main.c        ****             if (s4) {
 1963              		.loc 1 577 0
 1964 0430 484B     		ldr	r3, .L148+12
 1965 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1966 0434 002B     		cmp	r3, #0
 1967 0436 02D0     		beq	.L120
 578:main.c        ****                 rightStatusFlag = 1;
 1968              		.loc 1 578 0
 1969 0438 544B     		ldr	r3, .L148+68
 1970 043a 0122     		movs	r2, #1
 1971 043c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 46


 1972              	.L120:
 579:main.c        ****             }
 580:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 581:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 582:main.c        ****             if (leftStatusFlag) {
 1973              		.loc 1 582 0
 1974 043e 524B     		ldr	r3, .L148+64
 1975 0440 1B78     		ldrb	r3, [r3]
 1976 0442 DBB2     		uxtb	r3, r3
 1977 0444 002B     		cmp	r3, #0
 1978 0446 08D0     		beq	.L121
 583:main.c        ****                 if (!s3) {
 1979              		.loc 1 583 0
 1980 0448 4E4B     		ldr	r3, .L148+60
 1981 044a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1982 044c 002B     		cmp	r3, #0
 1983 044e 04D1     		bne	.L121
 584:main.c        ****                     leftStatusFlag = 0;    
 1984              		.loc 1 584 0
 1985 0450 4D4B     		ldr	r3, .L148+64
 1986 0452 0022     		movs	r2, #0
 1987 0454 1A70     		strb	r2, [r3]
 585:main.c        ****                     //forwardAfterTurnRIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING O
 586:main.c        ****                     return Backward;
 1988              		.loc 1 586 0
 1989 0456 0923     		movs	r3, #9
 1990 0458 81E1     		b	.L81
 1991              	.L121:
 587:main.c        ****                 }
 588:main.c        ****             }
 589:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 590:main.c        ****             if (rightStatusFlag) {
 1992              		.loc 1 590 0
 1993 045a 4C4B     		ldr	r3, .L148+68
 1994 045c 1B78     		ldrb	r3, [r3]
 1995 045e DBB2     		uxtb	r3, r3
 1996 0460 002B     		cmp	r3, #0
 1997 0462 08D0     		beq	.L122
 591:main.c        ****                 if (!s4) {
 1998              		.loc 1 591 0
 1999 0464 3B4B     		ldr	r3, .L148+12
 2000 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2001 0468 002B     		cmp	r3, #0
 2002 046a 04D1     		bne	.L122
 592:main.c        ****                     rightStatusFlag = 0;
 2003              		.loc 1 592 0
 2004 046c 474B     		ldr	r3, .L148+68
 2005 046e 0022     		movs	r2, #0
 2006 0470 1A70     		strb	r2, [r3]
 593:main.c        ****                     //forwardAfterTurnLIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING O
 594:main.c        ****                     return Backward; // CHEECK IF CONDITION IS ACTUALLY BEING FULFILLED
 2007              		.loc 1 594 0
 2008 0472 0923     		movs	r3, #9
 2009 0474 73E1     		b	.L81
 2010              	.L122:
 595:main.c        ****                 }
 596:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 47


 597:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 598:main.c        ****             
 599:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 600:main.c        ****             if ((totalDistance >= blockSizeTotal && (currentInstruction.ignoreL > 0 && currentInstr
 2011              		.loc 1 600 0
 2012 0476 3F4B     		ldr	r3, .L148+44
 2013 0478 1A68     		ldr	r2, [r3]	@ float
 2014 047a 414B     		ldr	r3, .L148+56
 2015 047c 1B68     		ldr	r3, [r3]	@ float
 2016 047e 1946     		mov	r1, r3
 2017 0480 1046     		mov	r0, r2
 2018 0482 FFF7FEFF 		bl	__aeabi_fcmpge
 2019 0486 0346     		mov	r3, r0
 2020 0488 002B     		cmp	r3, #0
 2021 048a 07D0     		beq	.L123
 2022              		.loc 1 600 0 is_stmt 0 discriminator 1
 2023 048c 3B4B     		ldr	r3, .L148+52
 2024 048e 5B68     		ldr	r3, [r3, #4]
 2025 0490 002B     		cmp	r3, #0
 2026 0492 03DD     		ble	.L123
 2027              		.loc 1 600 0 discriminator 3
 2028 0494 394B     		ldr	r3, .L148+52
 2029 0496 9B68     		ldr	r3, [r3, #8]
 2030 0498 002B     		cmp	r3, #0
 2031 049a 21DC     		bgt	.L125
 2032              	.L123:
 2033              		.loc 1 600 0 discriminator 5
 2034 049c 354B     		ldr	r3, .L148+44
 2035 049e 1B68     		ldr	r3, [r3]	@ float
 2036 04a0 1846     		mov	r0, r3
 2037 04a2 FFF7FEFF 		bl	__aeabi_f2d
 2038 04a6 0446     		mov	r4, r0
 2039 04a8 0D46     		mov	r5, r1
 2040 04aa 354B     		ldr	r3, .L148+56
 2041 04ac 1B68     		ldr	r3, [r3]	@ float
 2042 04ae 1846     		mov	r0, r3
 2043 04b0 FFF7FEFF 		bl	__aeabi_f2d
 2044 04b4 24A3     		adr	r3, .L148
 2045 04b6 D3E90023 		ldrd	r2, [r3]
 2046 04ba FFF7FEFF 		bl	__aeabi_dmul
 2047 04be 0246     		mov	r2, r0
 2048 04c0 0B46     		mov	r3, r1
 2049 04c2 2046     		mov	r0, r4
 2050 04c4 2946     		mov	r1, r5
 2051 04c6 FFF7FEFF 		bl	__aeabi_dcmpge
 2052 04ca 0346     		mov	r3, r0
 2053 04cc 002B     		cmp	r3, #0
 2054 04ce 0BD0     		beq	.L126
 2055              		.loc 1 600 0 discriminator 6
 2056 04d0 2C4B     		ldr	r3, .L148+60
 2057 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2058 04d4 002B     		cmp	r3, #0
 2059 04d6 03D1     		bne	.L125
 2060              		.loc 1 600 0 discriminator 7
 2061 04d8 1E4B     		ldr	r3, .L148+12
 2062 04da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2063 04dc 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 48


 2064 04de 03D0     		beq	.L126
 2065              	.L125:
 601:main.c        ****                 // added new move to next instruction condition- will move to next instruction if w
 602:main.c        ****                 // Get next instruction
 603:main.c        ****                 MoveToNextInstruction();
 2066              		.loc 1 603 0 is_stmt 1
 2067 04e0 FFF7FEFF 		bl	MoveToNextInstruction
 604:main.c        ****                 return Stop;
 2068              		.loc 1 604 0
 2069 04e4 0523     		movs	r3, #5
 2070 04e6 3AE1     		b	.L81
 2071              	.L126:
 605:main.c        ****             }
 606:main.c        ****             else if (totalDistance >= blockSizeTotal || (currentInstruction.ignoreL == 0 || current
 2072              		.loc 1 606 0
 2073 04e8 224B     		ldr	r3, .L148+44
 2074 04ea 1A68     		ldr	r2, [r3]	@ float
 2075 04ec 244B     		ldr	r3, .L148+56
 2076 04ee 1B68     		ldr	r3, [r3]	@ float
 2077 04f0 1946     		mov	r1, r3
 2078 04f2 1046     		mov	r0, r2
 2079 04f4 FFF7FEFF 		bl	__aeabi_fcmpge
 2080 04f8 0346     		mov	r3, r0
 2081 04fa 002B     		cmp	r3, #0
 2082 04fc 07D1     		bne	.L128
 2083              		.loc 1 606 0 is_stmt 0 discriminator 1
 2084 04fe 1F4B     		ldr	r3, .L148+52
 2085 0500 5B68     		ldr	r3, [r3, #4]
 2086 0502 002B     		cmp	r3, #0
 2087 0504 03D0     		beq	.L128
 2088              		.loc 1 606 0 discriminator 2
 2089 0506 1D4B     		ldr	r3, .L148+52
 2090 0508 9B68     		ldr	r3, [r3, #8]
 2091 050a 002B     		cmp	r3, #0
 2092 050c 03D1     		bne	.L129
 2093              	.L128:
 607:main.c        ****                 MoveToNextInstruction();
 2094              		.loc 1 607 0 is_stmt 1
 2095 050e FFF7FEFF 		bl	MoveToNextInstruction
 608:main.c        ****                 return Stop;
 2096              		.loc 1 608 0
 2097 0512 0523     		movs	r3, #5
 2098 0514 23E1     		b	.L81
 2099              	.L129:
 609:main.c        ****             }
 610:main.c        ****             
 611:main.c        ****             return ForwardCourseCorrection();
 2100              		.loc 1 611 0
 2101 0516 FFF7FEFF 		bl	ForwardCourseCorrection
 2102 051a 0346     		mov	r3, r0
 2103 051c 1FE1     		b	.L81
 2104              	.L78:
 612:main.c        ****             break;
 613:main.c        ****         case StopAtTarget:
 614:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 615:main.c        ****             // Reset flags
 616:main.c        ****             totalDistance = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 49


 2105              		.loc 1 616 0
 2106 051e 154B     		ldr	r3, .L148+44
 2107 0520 4FF00002 		mov	r2, #0
 2108 0524 1A60     		str	r2, [r3]	@ float
 617:main.c        ****             forwardUntilTargetStartedFlag = 0;
 2109              		.loc 1 617 0
 2110 0526 144B     		ldr	r3, .L148+48
 2111 0528 0022     		movs	r2, #0
 2112 052a 1A70     		strb	r2, [r3]
 618:main.c        ****             blockSizeTotal = 0;
 2113              		.loc 1 618 0
 2114 052c 144B     		ldr	r3, .L148+56
 2115 052e 4FF00002 		mov	r2, #0
 2116 0532 1A60     		str	r2, [r3]	@ float
 619:main.c        ****             
 620:main.c        ****             if (currentDirection == Stop) {
 2117              		.loc 1 620 0
 2118 0534 0C4B     		ldr	r3, .L148+32
 2119 0536 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2120 0538 052B     		cmp	r3, #5
 2121 053a 2CD1     		bne	.L130
 621:main.c        ****                 if (stopBuffer <= 100) {
 2122              		.loc 1 621 0
 2123 053c 0B4B     		ldr	r3, .L148+36
 2124 053e 1B68     		ldr	r3, [r3]
 2125 0540 642B     		cmp	r3, #100
 2126 0542 25D8     		bhi	.L131
 622:main.c        ****                     return Stop;    
 2127              		.loc 1 622 0
 2128 0544 0523     		movs	r3, #5
 2129 0546 0AE1     		b	.L81
 2130              	.L149:
 2131              		.align	3
 2132              	.L148:
 2133 0548 66666666 		.word	1717986918
 2134 054c 6666EE3F 		.word	1072588390
 2135 0550 00000000 		.word	firstTurnIteration
 2136 0554 00000000 		.word	s4
 2137 0558 37000000 		.word	turnFinishedFlag
 2138 055c 00000000 		.word	s5
 2139 0560 00000000 		.word	s6
 2140 0564 00000000 		.word	forwardBuffer
 2141 0568 00000000 		.word	currentDirection
 2142 056c 00000000 		.word	stopBuffer
 2143 0570 36000000 		.word	turnStartedFlag
 2144 0574 00000000 		.word	totalDistance
 2145 0578 38000000 		.word	forwardUntilTargetStartedFlag
 2146 057c 00000000 		.word	currentInstruction
 2147 0580 00000000 		.word	blockSizeTotal
 2148 0584 00000000 		.word	s3
 2149 0588 3B000000 		.word	leftStatusFlag
 2150 058c 3C000000 		.word	rightStatusFlag
 2151              	.L131:
 623:main.c        ****                 } else {
 624:main.c        ****                     stopBuffer = 250;
 2152              		.loc 1 624 0
 2153 0590 754B     		ldr	r3, .L150
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 50


 2154 0592 FA22     		movs	r2, #250
 2155 0594 1A60     		str	r2, [r3]
 2156              	.L130:
 625:main.c        ****                 }
 626:main.c        ****             }
 627:main.c        ****             
 628:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 629:main.c        ****             // Make sure index doesn't go over cap
 630:main.c        ****             // Stop at final location
 631:main.c        ****             if (currentFoodListIndex == 4) {
 2157              		.loc 1 631 0
 2158 0596 754B     		ldr	r3, .L150+4
 2159 0598 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2160 059a 042B     		cmp	r3, #4
 2161 059c 01D1     		bne	.L132
 632:main.c        ****                 return Stop;    
 2162              		.loc 1 632 0
 2163 059e 0523     		movs	r3, #5
 2164 05a0 DDE0     		b	.L81
 2165              	.L132:
 633:main.c        ****             }
 634:main.c        ****             
 635:main.c        ****             currentFoodListIndex++;
 2166              		.loc 1 635 0
 2167 05a2 724B     		ldr	r3, .L150+4
 2168 05a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2169 05a6 0133     		adds	r3, r3, #1
 2170 05a8 DAB2     		uxtb	r2, r3
 2171 05aa 704B     		ldr	r3, .L150+4
 2172 05ac 1A70     		strb	r2, [r3]
 636:main.c        ****             instructionIndex = 0;
 2173              		.loc 1 636 0
 2174 05ae 704B     		ldr	r3, .L150+8
 2175 05b0 0022     		movs	r2, #0
 2176 05b2 1A60     		str	r2, [r3]
 637:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 2177              		.loc 1 637 0
 2178 05b4 6D4B     		ldr	r3, .L150+4
 2179 05b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2180 05b8 1A46     		mov	r2, r3
 2181 05ba 6E4B     		ldr	r3, .L150+12
 2182 05bc 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2183 05be 6E49     		ldr	r1, .L150+16
 2184 05c0 6E48     		ldr	r0, .L150+20
 2185 05c2 FFF7FEFF 		bl	findPathNewOrientation
 2186 05c6 0246     		mov	r2, r0
 2187 05c8 6D4B     		ldr	r3, .L150+24
 2188 05ca 1A60     		str	r2, [r3]
 638:main.c        ****             numSteps = instructionsListLength();
 2189              		.loc 1 638 0
 2190 05cc FFF7FEFF 		bl	instructionsListLength
 2191 05d0 0346     		mov	r3, r0
 2192 05d2 1A46     		mov	r2, r3
 2193 05d4 6B4B     		ldr	r3, .L150+28
 2194 05d6 1A60     		str	r2, [r3]
 639:main.c        ****     
 640:main.c        ****             currentInstruction = GetInstructionAtIndex();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 51


 2195              		.loc 1 640 0
 2196 05d8 664C     		ldr	r4, .L150+12
 2197 05da 3B46     		mov	r3, r7
 2198 05dc 1846     		mov	r0, r3
 2199 05de FFF7FEFF 		bl	GetInstructionAtIndex
 2200 05e2 2546     		mov	r5, r4
 2201 05e4 3C46     		mov	r4, r7
 2202 05e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2203 05e8 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2204 05ea 2368     		ldr	r3, [r4]
 2205 05ec 2B60     		str	r3, [r5]
 641:main.c        **** 
 642:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2206              		.loc 1 642 0
 2207 05ee 644B     		ldr	r3, .L150+24
 2208 05f0 1968     		ldr	r1, [r3]
 2209 05f2 5F4B     		ldr	r3, .L150+8
 2210 05f4 1A68     		ldr	r2, [r3]
 2211 05f6 1346     		mov	r3, r2
 2212 05f8 9B00     		lsls	r3, r3, #2
 2213 05fa 1344     		add	r3, r3, r2
 2214 05fc 9B00     		lsls	r3, r3, #2
 2215 05fe 0B44     		add	r3, r3, r1
 2216 0600 5B68     		ldr	r3, [r3, #4]
 2217 0602 DAB2     		uxtb	r2, r3
 2218 0604 604B     		ldr	r3, .L150+32
 2219 0606 1A70     		strb	r2, [r3]
 643:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2220              		.loc 1 643 0
 2221 0608 5D4B     		ldr	r3, .L150+24
 2222 060a 1968     		ldr	r1, [r3]
 2223 060c 584B     		ldr	r3, .L150+8
 2224 060e 1A68     		ldr	r2, [r3]
 2225 0610 1346     		mov	r3, r2
 2226 0612 9B00     		lsls	r3, r3, #2
 2227 0614 1344     		add	r3, r3, r2
 2228 0616 9B00     		lsls	r3, r3, #2
 2229 0618 0B44     		add	r3, r3, r1
 2230 061a 9B68     		ldr	r3, [r3, #8]
 2231 061c DAB2     		uxtb	r2, r3
 2232 061e 5B4B     		ldr	r3, .L150+36
 2233 0620 1A70     		strb	r2, [r3]
 644:main.c        ****             
 645:main.c        ****             return Stop;
 2234              		.loc 1 645 0
 2235 0622 0523     		movs	r3, #5
 2236 0624 9BE0     		b	.L81
 2237              	.L76:
 646:main.c        ****             break;
 647:main.c        ****         case uTurn:
 648:main.c        ****             if (currentDirection == Stop) {
 2238              		.loc 1 648 0
 2239 0626 5A4B     		ldr	r3, .L150+40
 2240 0628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2241 062a 052B     		cmp	r3, #5
 2242 062c 08D1     		bne	.L133
 649:main.c        ****                 if (stopBuffer <= 50) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 52


 2243              		.loc 1 649 0
 2244 062e 4E4B     		ldr	r3, .L150
 2245 0630 1B68     		ldr	r3, [r3]
 2246 0632 322B     		cmp	r3, #50
 2247 0634 01D8     		bhi	.L134
 650:main.c        ****                     return Stop;    
 2248              		.loc 1 650 0
 2249 0636 0523     		movs	r3, #5
 2250 0638 91E0     		b	.L81
 2251              	.L134:
 651:main.c        ****                 } else {
 652:main.c        ****                     stopBuffer = 100;    
 2252              		.loc 1 652 0
 2253 063a 4B4B     		ldr	r3, .L150
 2254 063c 6422     		movs	r2, #100
 2255 063e 1A60     		str	r2, [r3]
 2256              	.L133:
 653:main.c        ****                 }
 654:main.c        ****             }
 655:main.c        ****             
 656:main.c        ****             
 657:main.c        ****             if (!uTurnStartedFlag) {
 2257              		.loc 1 657 0
 2258 0640 544B     		ldr	r3, .L150+44
 2259 0642 1B78     		ldrb	r3, [r3]
 2260 0644 DBB2     		uxtb	r3, r3
 2261 0646 002B     		cmp	r3, #0
 2262 0648 07D1     		bne	.L135
 658:main.c        ****                 uTurnStartedFlag = 1;
 2263              		.loc 1 658 0
 2264 064a 524B     		ldr	r3, .L150+44
 2265 064c 0122     		movs	r2, #1
 2266 064e 1A70     		strb	r2, [r3]
 659:main.c        ****                 spinCourseCorrectionStarted = 0;
 2267              		.loc 1 659 0
 2268 0650 514B     		ldr	r3, .L150+48
 2269 0652 0022     		movs	r2, #0
 2270 0654 1A70     		strb	r2, [r3]
 660:main.c        ****                 return Spin180;
 2271              		.loc 1 660 0
 2272 0656 0A23     		movs	r3, #10
 2273 0658 81E0     		b	.L81
 2274              	.L135:
 661:main.c        ****             } 
 662:main.c        ****             
 663:main.c        ****             if (uTurnFinishedFlag) {
 2275              		.loc 1 663 0
 2276 065a 504B     		ldr	r3, .L150+52
 2277 065c 1B78     		ldrb	r3, [r3]
 2278 065e DBB2     		uxtb	r3, r3
 2279 0660 002B     		cmp	r3, #0
 2280 0662 28D0     		beq	.L136
 664:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 665:main.c        **** 
 666:main.c        ****                 // if wing sensors are still on black after a uturn
 667:main.c        ****                 // move forward buffer until we are no longer on black
 668:main.c        ****                 // once both sensors are on white, move to next instruction
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 53


 669:main.c        ****                 
 670:main.c        ****                 if ((!s3 || !s4) && forwardBuffer <= 9) {
 2281              		.loc 1 670 0
 2282 0664 4E4B     		ldr	r3, .L150+56
 2283 0666 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 0668 002B     		cmp	r3, #0
 2285 066a 03D0     		beq	.L137
 2286              		.loc 1 670 0 is_stmt 0 discriminator 2
 2287 066c 4D4B     		ldr	r3, .L150+60
 2288 066e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2289 0670 002B     		cmp	r3, #0
 2290 0672 07D1     		bne	.L138
 2291              	.L137:
 2292              		.loc 1 670 0 discriminator 3
 2293 0674 4C4B     		ldr	r3, .L150+64
 2294 0676 1B88     		ldrh	r3, [r3]
 2295 0678 092B     		cmp	r3, #9
 2296 067a 03D8     		bhi	.L138
 671:main.c        ****                     return ForwardCourseCorrection();    
 2297              		.loc 1 671 0 is_stmt 1
 2298 067c FFF7FEFF 		bl	ForwardCourseCorrection
 2299 0680 0346     		mov	r3, r0
 2300 0682 6CE0     		b	.L81
 2301              	.L138:
 672:main.c        **** 
 673:main.c        ****                 } else if (!s3 || !s4) {
 2302              		.loc 1 673 0
 2303 0684 464B     		ldr	r3, .L150+56
 2304 0686 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0688 002B     		cmp	r3, #0
 2306 068a 03D0     		beq	.L139
 2307              		.loc 1 673 0 is_stmt 0 discriminator 1
 2308 068c 454B     		ldr	r3, .L150+60
 2309 068e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 0690 002B     		cmp	r3, #0
 2311 0692 03D1     		bne	.L140
 2312              	.L139:
 674:main.c        ****                     forwardBuffer = 0;   
 2313              		.loc 1 674 0 is_stmt 1
 2314 0694 444B     		ldr	r3, .L150+64
 2315 0696 0022     		movs	r2, #0
 2316 0698 1A80     		strh	r2, [r3]	@ movhi
 2317 069a 0CE0     		b	.L136
 2318              	.L140:
 675:main.c        ****                 } else {
 676:main.c        ****                     forwardBuffer = 100;
 2319              		.loc 1 676 0
 2320 069c 424B     		ldr	r3, .L150+64
 2321 069e 6422     		movs	r2, #100
 2322 06a0 1A80     		strh	r2, [r3]	@ movhi
 677:main.c        ****                     uTurnFinishedFlag = 0;
 2323              		.loc 1 677 0
 2324 06a2 3E4B     		ldr	r3, .L150+52
 2325 06a4 0022     		movs	r2, #0
 2326 06a6 1A70     		strb	r2, [r3]
 678:main.c        ****                     uTurnStartedFlag = 0;
 2327              		.loc 1 678 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 54


 2328 06a8 3A4B     		ldr	r3, .L150+44
 2329 06aa 0022     		movs	r2, #0
 2330 06ac 1A70     		strb	r2, [r3]
 679:main.c        ****                     MoveToNextInstruction();   
 2331              		.loc 1 679 0
 2332 06ae FFF7FEFF 		bl	MoveToNextInstruction
 680:main.c        ****                     return Stop;  
 2333              		.loc 1 680 0
 2334 06b2 0523     		movs	r3, #5
 2335 06b4 53E0     		b	.L81
 2336              	.L136:
 681:main.c        ****                 }
 682:main.c        ****             }
 683:main.c        ****             
 684:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 685:main.c        ****             if (uTurnStartedFlag) {
 2337              		.loc 1 685 0
 2338 06b6 374B     		ldr	r3, .L150+44
 2339 06b8 1B78     		ldrb	r3, [r3]
 2340 06ba DBB2     		uxtb	r3, r3
 2341 06bc 002B     		cmp	r3, #0
 2342 06be 49D0     		beq	.L141
 686:main.c        ****                 if ((instructionList[instructionIndex + 1].direction == waitForLeftTurn ||
 2343              		.loc 1 686 0
 2344 06c0 2F4B     		ldr	r3, .L150+24
 2345 06c2 1968     		ldr	r1, [r3]
 2346 06c4 2A4B     		ldr	r3, .L150+8
 2347 06c6 1B68     		ldr	r3, [r3]
 2348 06c8 5A1C     		adds	r2, r3, #1
 2349 06ca 1346     		mov	r3, r2
 2350 06cc 9B00     		lsls	r3, r3, #2
 2351 06ce 1344     		add	r3, r3, r2
 2352 06d0 9B00     		lsls	r3, r3, #2
 2353 06d2 0B44     		add	r3, r3, r1
 2354 06d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2355 06d6 012B     		cmp	r3, #1
 2356 06d8 0CD0     		beq	.L142
 687:main.c        ****                     instructionList[instructionIndex + 1].direction == waitForRightTurn) && (s5 && 
 2357              		.loc 1 687 0 discriminator 1
 2358 06da 294B     		ldr	r3, .L150+24
 2359 06dc 1968     		ldr	r1, [r3]
 2360 06de 244B     		ldr	r3, .L150+8
 2361 06e0 1B68     		ldr	r3, [r3]
 2362 06e2 5A1C     		adds	r2, r3, #1
 2363 06e4 1346     		mov	r3, r2
 2364 06e6 9B00     		lsls	r3, r3, #2
 2365 06e8 1344     		add	r3, r3, r2
 2366 06ea 9B00     		lsls	r3, r3, #2
 2367 06ec 0B44     		add	r3, r3, r1
 2368 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 686:main.c        ****                 if ((instructionList[instructionIndex + 1].direction == waitForLeftTurn ||
 2369              		.loc 1 686 0 discriminator 1
 2370 06f0 022B     		cmp	r3, #2
 2371 06f2 18D1     		bne	.L143
 2372              	.L142:
 2373              		.loc 1 687 0
 2374 06f4 2D4B     		ldr	r3, .L150+68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 55


 2375 06f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2376 06f8 002B     		cmp	r3, #0
 2377 06fa 14D0     		beq	.L143
 2378              		.loc 1 687 0 is_stmt 0 discriminator 1
 2379 06fc 2C4B     		ldr	r3, .L150+72
 2380 06fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2381 0700 002B     		cmp	r3, #0
 2382 0702 10D0     		beq	.L143
 688:main.c        ****                         totalLineCount = 0;
 2383              		.loc 1 688 0 is_stmt 1
 2384 0704 2B4B     		ldr	r3, .L150+76
 2385 0706 0022     		movs	r2, #0
 2386 0708 1A70     		strb	r2, [r3]
 689:main.c        ****                         lineCount = 0;
 2387              		.loc 1 689 0
 2388 070a 2B4B     		ldr	r3, .L150+80
 2389 070c 0022     		movs	r2, #0
 2390 070e 1A70     		strb	r2, [r3]
 690:main.c        ****                         tooEarlyFlag = 0;
 2391              		.loc 1 690 0
 2392 0710 2A4B     		ldr	r3, .L150+84
 2393 0712 0022     		movs	r2, #0
 2394 0714 1A70     		strb	r2, [r3]
 691:main.c        ****                         tooLateFlag = 0;
 2395              		.loc 1 691 0
 2396 0716 2A4B     		ldr	r3, .L150+88
 2397 0718 0022     		movs	r2, #0
 2398 071a 1A70     		strb	r2, [r3]
 692:main.c        ****                         uTurnFinishedFlag = 1;
 2399              		.loc 1 692 0
 2400 071c 1F4B     		ldr	r3, .L150+52
 2401 071e 0122     		movs	r2, #1
 2402 0720 1A70     		strb	r2, [r3]
 693:main.c        ****                         return Stop;
 2403              		.loc 1 693 0
 2404 0722 0523     		movs	r3, #5
 2405 0724 1BE0     		b	.L81
 2406              	.L143:
 694:main.c        ****                     }
 695:main.c        ****                 
 696:main.c        ****                 if (!s5 && !s6) {
 2407              		.loc 1 696 0
 2408 0726 214B     		ldr	r3, .L150+68
 2409 0728 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2410 072a 002B     		cmp	r3, #0
 2411 072c 12D1     		bne	.L141
 2412              		.loc 1 696 0 is_stmt 0 discriminator 1
 2413 072e 204B     		ldr	r3, .L150+72
 2414 0730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2415 0732 002B     		cmp	r3, #0
 2416 0734 0ED1     		bne	.L141
 697:main.c        ****                     totalLineCount = 0;
 2417              		.loc 1 697 0 is_stmt 1
 2418 0736 1F4B     		ldr	r3, .L150+76
 2419 0738 0022     		movs	r2, #0
 2420 073a 1A70     		strb	r2, [r3]
 698:main.c        ****                     lineCount = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 56


 2421              		.loc 1 698 0
 2422 073c 1E4B     		ldr	r3, .L150+80
 2423 073e 0022     		movs	r2, #0
 2424 0740 1A70     		strb	r2, [r3]
 699:main.c        ****                     tooEarlyFlag = 0;
 2425              		.loc 1 699 0
 2426 0742 1E4B     		ldr	r3, .L150+84
 2427 0744 0022     		movs	r2, #0
 2428 0746 1A70     		strb	r2, [r3]
 700:main.c        ****                     tooLateFlag = 0;
 2429              		.loc 1 700 0
 2430 0748 1D4B     		ldr	r3, .L150+88
 2431 074a 0022     		movs	r2, #0
 2432 074c 1A70     		strb	r2, [r3]
 701:main.c        ****                     uTurnFinishedFlag = 1;    
 2433              		.loc 1 701 0
 2434 074e 134B     		ldr	r3, .L150+52
 2435 0750 0122     		movs	r2, #1
 2436 0752 1A70     		strb	r2, [r3]
 2437              	.L141:
 702:main.c        ****                 }    
 703:main.c        ****             }
 704:main.c        ****             
 705:main.c        ****             return SpinCourseCorrection();
 2438              		.loc 1 705 0
 2439 0754 FFF7FEFF 		bl	SpinCourseCorrection
 2440 0758 0346     		mov	r3, r0
 2441 075a 00E0     		b	.L81
 2442              	.L71:
 706:main.c        ****             break;
 707:main.c        ****         default:
 708:main.c        ****             return Stop;
 2443              		.loc 1 708 0
 2444 075c 0523     		movs	r3, #5
 2445              	.L81:
 709:main.c        ****             break;
 710:main.c        ****     }
 711:main.c        ****     return Stop;
 712:main.c        **** }
 2446              		.loc 1 712 0
 2447 075e 1846     		mov	r0, r3
 2448 0760 2837     		adds	r7, r7, #40
 2449              		.cfi_def_cfa_offset 16
 2450 0762 BD46     		mov	sp, r7
 2451              		.cfi_def_cfa_register 13
 2452              		@ sp needed
 2453 0764 B0BD     		pop	{r4, r5, r7, pc}
 2454              	.L151:
 2455 0766 00BF     		.align	2
 2456              	.L150:
 2457 0768 00000000 		.word	stopBuffer
 2458 076c 00000000 		.word	currentFoodListIndex
 2459 0770 14000000 		.word	instructionIndex
 2460 0774 00000000 		.word	currentInstruction
 2461 0778 00000000 		.word	food_list
 2462 077c 00000000 		.word	map
 2463 0780 00000000 		.word	instructionList
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 57


 2464 0784 00000000 		.word	numSteps
 2465 0788 3E000000 		.word	currentIgnoreL
 2466 078c 3F000000 		.word	currentIgnoreR
 2467 0790 00000000 		.word	currentDirection
 2468 0794 39000000 		.word	uTurnStartedFlag
 2469 0798 3D000000 		.word	spinCourseCorrectionStarted
 2470 079c 3A000000 		.word	uTurnFinishedFlag
 2471 07a0 00000000 		.word	s3
 2472 07a4 00000000 		.word	s4
 2473 07a8 00000000 		.word	forwardBuffer
 2474 07ac 00000000 		.word	s5
 2475 07b0 00000000 		.word	s6
 2476 07b4 40000000 		.word	totalLineCount
 2477 07b8 41000000 		.word	lineCount
 2478 07bc 43000000 		.word	tooEarlyFlag
 2479 07c0 44000000 		.word	tooLateFlag
 2480              		.cfi_endproc
 2481              	.LFE76:
 2482              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2483              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2484              		.align	2
 2485              		.global	MoveToNextInstruction
 2486              		.thumb
 2487              		.thumb_func
 2488              		.type	MoveToNextInstruction, %function
 2489              	MoveToNextInstruction:
 2490              	.LFB77:
 713:main.c        **** 
 714:main.c        **** // get next instruction
 715:main.c        **** void MoveToNextInstruction() {
 2491              		.loc 1 715 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 0
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495              		@ link register save eliminated.
 2496 0000 80B4     		push	{r7}
 2497              		.cfi_def_cfa_offset 4
 2498              		.cfi_offset 7, -4
 2499 0002 00AF     		add	r7, sp, #0
 2500              		.cfi_def_cfa_register 7
 716:main.c        ****     currentIgnoreL = 0;
 2501              		.loc 1 716 0
 2502 0004 144B     		ldr	r3, .L153
 2503 0006 0022     		movs	r2, #0
 2504 0008 1A70     		strb	r2, [r3]
 717:main.c        ****     currentIgnoreR = 0;
 2505              		.loc 1 717 0
 2506 000a 144B     		ldr	r3, .L153+4
 2507 000c 0022     		movs	r2, #0
 2508 000e 1A70     		strb	r2, [r3]
 718:main.c        **** 
 719:main.c        ****     instructionIndex++;
 2509              		.loc 1 719 0
 2510 0010 134B     		ldr	r3, .L153+8
 2511 0012 1B68     		ldr	r3, [r3]
 2512 0014 0133     		adds	r3, r3, #1
 2513 0016 124A     		ldr	r2, .L153+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 58


 2514 0018 1360     		str	r3, [r2]
 720:main.c        ****     
 721:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2515              		.loc 1 721 0
 2516 001a 124B     		ldr	r3, .L153+12
 2517 001c 1968     		ldr	r1, [r3]
 2518 001e 104B     		ldr	r3, .L153+8
 2519 0020 1A68     		ldr	r2, [r3]
 2520 0022 1346     		mov	r3, r2
 2521 0024 9B00     		lsls	r3, r3, #2
 2522 0026 1344     		add	r3, r3, r2
 2523 0028 9B00     		lsls	r3, r3, #2
 2524 002a 0B44     		add	r3, r3, r1
 2525 002c 5B68     		ldr	r3, [r3, #4]
 2526 002e DAB2     		uxtb	r2, r3
 2527 0030 094B     		ldr	r3, .L153
 2528 0032 1A70     		strb	r2, [r3]
 722:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2529              		.loc 1 722 0
 2530 0034 0B4B     		ldr	r3, .L153+12
 2531 0036 1968     		ldr	r1, [r3]
 2532 0038 094B     		ldr	r3, .L153+8
 2533 003a 1A68     		ldr	r2, [r3]
 2534 003c 1346     		mov	r3, r2
 2535 003e 9B00     		lsls	r3, r3, #2
 2536 0040 1344     		add	r3, r3, r2
 2537 0042 9B00     		lsls	r3, r3, #2
 2538 0044 0B44     		add	r3, r3, r1
 2539 0046 9B68     		ldr	r3, [r3, #8]
 2540 0048 DAB2     		uxtb	r2, r3
 2541 004a 044B     		ldr	r3, .L153+4
 2542 004c 1A70     		strb	r2, [r3]
 723:main.c        **** 
 724:main.c        **** }
 2543              		.loc 1 724 0
 2544 004e 00BF     		nop
 2545 0050 BD46     		mov	sp, r7
 2546              		.cfi_def_cfa_register 13
 2547              		@ sp needed
 2548 0052 80BC     		pop	{r7}
 2549              		.cfi_restore 7
 2550              		.cfi_def_cfa_offset 0
 2551 0054 7047     		bx	lr
 2552              	.L154:
 2553 0056 00BF     		.align	2
 2554              	.L153:
 2555 0058 3E000000 		.word	currentIgnoreL
 2556 005c 3F000000 		.word	currentIgnoreR
 2557 0060 14000000 		.word	instructionIndex
 2558 0064 00000000 		.word	instructionList
 2559              		.cfi_endproc
 2560              	.LFE77:
 2561              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2562              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2563              		.align	2
 2564              		.global	GetInstructionAtIndex
 2565              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 59


 2566              		.thumb_func
 2567              		.type	GetInstructionAtIndex, %function
 2568              	GetInstructionAtIndex:
 2569              	.LFB78:
 725:main.c        **** 
 726:main.c        **** Instruction GetInstructionAtIndex() {
 2570              		.loc 1 726 0
 2571              		.cfi_startproc
 2572              		@ args = 0, pretend = 0, frame = 32
 2573              		@ frame_needed = 1, uses_anonymous_args = 0
 2574              		@ link register save eliminated.
 2575 0000 B0B4     		push	{r4, r5, r7}
 2576              		.cfi_def_cfa_offset 12
 2577              		.cfi_offset 4, -12
 2578              		.cfi_offset 5, -8
 2579              		.cfi_offset 7, -4
 2580 0002 89B0     		sub	sp, sp, #36
 2581              		.cfi_def_cfa_offset 48
 2582 0004 00AF     		add	r7, sp, #0
 2583              		.cfi_def_cfa_register 7
 2584 0006 7860     		str	r0, [r7, #4]
 727:main.c        ****     Instruction nextInstruction;
 728:main.c        ****     // input is list of instructions and robot will react accordingly
 729:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2585              		.loc 1 729 0
 2586 0008 164B     		ldr	r3, .L157
 2587 000a 1968     		ldr	r1, [r3]
 2588 000c 164B     		ldr	r3, .L157+4
 2589 000e 1A68     		ldr	r2, [r3]
 2590 0010 1346     		mov	r3, r2
 2591 0012 9B00     		lsls	r3, r3, #2
 2592 0014 1344     		add	r3, r3, r2
 2593 0016 9B00     		lsls	r3, r3, #2
 2594 0018 0B44     		add	r3, r3, r1
 2595 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2596 001c 3B73     		strb	r3, [r7, #12]
 730:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2597              		.loc 1 730 0
 2598 001e 114B     		ldr	r3, .L157
 2599 0020 1968     		ldr	r1, [r3]
 2600 0022 114B     		ldr	r3, .L157+4
 2601 0024 1A68     		ldr	r2, [r3]
 2602 0026 1346     		mov	r3, r2
 2603 0028 9B00     		lsls	r3, r3, #2
 2604 002a 1344     		add	r3, r3, r2
 2605 002c 9B00     		lsls	r3, r3, #2
 2606 002e 0B44     		add	r3, r3, r1
 2607 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2608 0032 3B77     		strb	r3, [r7, #28]
 731:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2609              		.loc 1 731 0
 2610 0034 0B4B     		ldr	r3, .L157
 2611 0036 1968     		ldr	r1, [r3]
 2612 0038 0B4B     		ldr	r3, .L157+4
 2613 003a 1A68     		ldr	r2, [r3]
 2614 003c 1346     		mov	r3, r2
 2615 003e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 60


 2616 0040 1344     		add	r3, r3, r2
 2617 0042 9B00     		lsls	r3, r3, #2
 2618 0044 0B44     		add	r3, r3, r1
 2619 0046 DB68     		ldr	r3, [r3, #12]
 2620 0048 BB61     		str	r3, [r7, #24]
 732:main.c        ****     return nextInstruction;
 2621              		.loc 1 732 0
 2622 004a 7B68     		ldr	r3, [r7, #4]
 2623 004c 1D46     		mov	r5, r3
 2624 004e 07F10C04 		add	r4, r7, #12
 2625 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2626 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2627 0056 2368     		ldr	r3, [r4]
 2628 0058 2B60     		str	r3, [r5]
 733:main.c        **** }
 2629              		.loc 1 733 0
 2630 005a 7868     		ldr	r0, [r7, #4]
 2631 005c 2437     		adds	r7, r7, #36
 2632              		.cfi_def_cfa_offset 12
 2633 005e BD46     		mov	sp, r7
 2634              		.cfi_def_cfa_register 13
 2635              		@ sp needed
 2636 0060 B0BC     		pop	{r4, r5, r7}
 2637              		.cfi_restore 7
 2638              		.cfi_restore 5
 2639              		.cfi_restore 4
 2640              		.cfi_def_cfa_offset 0
 2641 0062 7047     		bx	lr
 2642              	.L158:
 2643              		.align	2
 2644              	.L157:
 2645 0064 00000000 		.word	instructionList
 2646 0068 14000000 		.word	instructionIndex
 2647              		.cfi_endproc
 2648              	.LFE78:
 2649              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2650              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2651              		.align	2
 2652              		.global	RotateClockwise180Degrees
 2653              		.thumb
 2654              		.thumb_func
 2655              		.type	RotateClockwise180Degrees, %function
 2656              	RotateClockwise180Degrees:
 2657              	.LFB79:
 734:main.c        **** 
 735:main.c        **** void RotateClockwise180Degrees() {
 2658              		.loc 1 735 0
 2659              		.cfi_startproc
 2660              		@ args = 0, pretend = 0, frame = 8
 2661              		@ frame_needed = 1, uses_anonymous_args = 0
 2662 0000 80B5     		push	{r7, lr}
 2663              		.cfi_def_cfa_offset 8
 2664              		.cfi_offset 7, -8
 2665              		.cfi_offset 14, -4
 2666 0002 82B0     		sub	sp, sp, #8
 2667              		.cfi_def_cfa_offset 16
 2668 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 61


 2669              		.cfi_def_cfa_register 7
 736:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2670              		.loc 1 736 0
 2671 0006 49F20873 		movw	r3, #38664
 2672 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 737:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2673              		.loc 1 737 0
 2674 000c 49F20873 		movw	r3, #38664
 2675 0010 3B80     		strh	r3, [r7]	@ movhi
 738:main.c        ****     PWM_1_WriteCompare(count1);
 2676              		.loc 1 738 0
 2677 0012 7B88     		ldrh	r3, [r7, #2]
 2678 0014 1846     		mov	r0, r3
 2679 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 739:main.c        ****     PWM_2_WriteCompare(count2);
 2680              		.loc 1 739 0
 2681 001a 3B88     		ldrh	r3, [r7]
 2682 001c 1846     		mov	r0, r3
 2683 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 740:main.c        ****     
 741:main.c        ****     int quadPulseCount = 0;
 2684              		.loc 1 741 0
 2685 0022 0023     		movs	r3, #0
 2686 0024 7B60     		str	r3, [r7, #4]
 742:main.c        ****     QuadDec_M1_SetCounter(0);
 2687              		.loc 1 742 0
 2688 0026 0020     		movs	r0, #0
 2689 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 743:main.c        ****     // Before 180, save initial configuration
 744:main.c        ****     if (!s3) {
 2690              		.loc 1 744 0
 2691 002c 3A4B     		ldr	r3, .L172
 2692 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 0030 002B     		cmp	r3, #0
 2694 0032 06D1     		bne	.L160
 745:main.c        ****         totalLineCount++;    
 2695              		.loc 1 745 0
 2696 0034 394B     		ldr	r3, .L172+4
 2697 0036 1B78     		ldrb	r3, [r3]
 2698 0038 DBB2     		uxtb	r3, r3
 2699 003a 0133     		adds	r3, r3, #1
 2700 003c DAB2     		uxtb	r2, r3
 2701 003e 374B     		ldr	r3, .L172+4
 2702 0040 1A70     		strb	r2, [r3]
 2703              	.L160:
 746:main.c        ****     }
 747:main.c        ****     if (!s4) {
 2704              		.loc 1 747 0
 2705 0042 374B     		ldr	r3, .L172+8
 2706 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2707 0046 002B     		cmp	r3, #0
 2708 0048 06D1     		bne	.L161
 748:main.c        ****         totalLineCount++;    
 2709              		.loc 1 748 0
 2710 004a 344B     		ldr	r3, .L172+4
 2711 004c 1B78     		ldrb	r3, [r3]
 2712 004e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 62


 2713 0050 0133     		adds	r3, r3, #1
 2714 0052 DAB2     		uxtb	r2, r3
 2715 0054 314B     		ldr	r3, .L172+4
 2716 0056 1A70     		strb	r2, [r3]
 2717              	.L161:
 749:main.c        ****     }
 750:main.c        ****     if (!s5 || !s6) {
 2718              		.loc 1 750 0
 2719 0058 324B     		ldr	r3, .L172+12
 2720 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2721 005c 002B     		cmp	r3, #0
 2722 005e 03D0     		beq	.L162
 2723              		.loc 1 750 0 is_stmt 0 discriminator 1
 2724 0060 314B     		ldr	r3, .L172+16
 2725 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2726 0064 002B     		cmp	r3, #0
 2727 0066 2AD1     		bne	.L164
 2728              	.L162:
 751:main.c        ****         totalLineCount++;    
 2729              		.loc 1 751 0 is_stmt 1
 2730 0068 2C4B     		ldr	r3, .L172+4
 2731 006a 1B78     		ldrb	r3, [r3]
 2732 006c DBB2     		uxtb	r3, r3
 2733 006e 0133     		adds	r3, r3, #1
 2734 0070 DAB2     		uxtb	r2, r3
 2735 0072 2A4B     		ldr	r3, .L172+4
 2736 0074 1A70     		strb	r2, [r3]
 752:main.c        ****     }
 753:main.c        ****     
 754:main.c        ****     // During 180
 755:main.c        ****     while(quadPulseCount < 210) {
 2737              		.loc 1 755 0
 2738 0076 22E0     		b	.L164
 2739              	.L167:
 756:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2740              		.loc 1 756 0
 2741 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2742 007c 0346     		mov	r3, r0
 2743 007e 7B60     		str	r3, [r7, #4]
 757:main.c        ****         if (!s3) {
 2744              		.loc 1 757 0
 2745 0080 254B     		ldr	r3, .L172
 2746 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2747 0084 002B     		cmp	r3, #0
 2748 0086 02D1     		bne	.L165
 758:main.c        ****             onLineFlag = 1;    
 2749              		.loc 1 758 0
 2750 0088 284B     		ldr	r3, .L172+20
 2751 008a 0122     		movs	r2, #1
 2752 008c 1A70     		strb	r2, [r3]
 2753              	.L165:
 759:main.c        ****         }
 760:main.c        ****         
 761:main.c        ****         if (onLineFlag) {
 2754              		.loc 1 761 0
 2755 008e 274B     		ldr	r3, .L172+20
 2756 0090 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 63


 2757 0092 DBB2     		uxtb	r3, r3
 2758 0094 002B     		cmp	r3, #0
 2759 0096 06D0     		beq	.L166
 762:main.c        ****             lineCount++;    
 2760              		.loc 1 762 0
 2761 0098 254B     		ldr	r3, .L172+24
 2762 009a 1B78     		ldrb	r3, [r3]
 2763 009c DBB2     		uxtb	r3, r3
 2764 009e 0133     		adds	r3, r3, #1
 2765 00a0 DAB2     		uxtb	r2, r3
 2766 00a2 234B     		ldr	r3, .L172+24
 2767 00a4 1A70     		strb	r2, [r3]
 2768              	.L166:
 763:main.c        ****         }
 764:main.c        ****         
 765:main.c        ****         if (!onLineFlag) {
 2769              		.loc 1 765 0
 2770 00a6 214B     		ldr	r3, .L172+20
 2771 00a8 1B78     		ldrb	r3, [r3]
 2772 00aa DBB2     		uxtb	r3, r3
 2773 00ac 002B     		cmp	r3, #0
 2774 00ae 06D1     		bne	.L164
 766:main.c        ****             if (s3) {
 2775              		.loc 1 766 0
 2776 00b0 194B     		ldr	r3, .L172
 2777 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2778 00b4 002B     		cmp	r3, #0
 2779 00b6 02D0     		beq	.L164
 767:main.c        ****                 onLineFlag = 0;    
 2780              		.loc 1 767 0
 2781 00b8 1C4B     		ldr	r3, .L172+20
 2782 00ba 0022     		movs	r2, #0
 2783 00bc 1A70     		strb	r2, [r3]
 2784              	.L164:
 755:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2785              		.loc 1 755 0
 2786 00be 7B68     		ldr	r3, [r7, #4]
 2787 00c0 D12B     		cmp	r3, #209
 2788 00c2 D9DD     		ble	.L167
 768:main.c        ****             }
 769:main.c        ****         }
 770:main.c        ****     }
 771:main.c        ****     
 772:main.c        ****     // After 180
 773:main.c        ****     if (totalLineCount == 0) {
 2789              		.loc 1 773 0
 2790 00c4 154B     		ldr	r3, .L172+4
 2791 00c6 1B78     		ldrb	r3, [r3]
 2792 00c8 DBB2     		uxtb	r3, r3
 2793 00ca 002B     		cmp	r3, #0
 2794 00cc 06D1     		bne	.L168
 774:main.c        ****         // we are on no lines
 775:main.c        ****         tooEarlyFlag = 1;
 2795              		.loc 1 775 0
 2796 00ce 194B     		ldr	r3, .L172+28
 2797 00d0 0122     		movs	r2, #1
 2798 00d2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 64


 776:main.c        ****         QuadDec_M1_SetCounter(0);
 2799              		.loc 1 776 0
 2800 00d4 0020     		movs	r0, #0
 2801 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 777:main.c        ****         return;
 2802              		.loc 1 777 0
 2803 00da 19E0     		b	.L159
 2804              	.L168:
 778:main.c        ****     }
 779:main.c        ****     else if (lineCount > totalLineCount) {
 2805              		.loc 1 779 0
 2806 00dc 144B     		ldr	r3, .L172+24
 2807 00de 1B78     		ldrb	r3, [r3]
 2808 00e0 DAB2     		uxtb	r2, r3
 2809 00e2 0E4B     		ldr	r3, .L172+4
 2810 00e4 1B78     		ldrb	r3, [r3]
 2811 00e6 DBB2     		uxtb	r3, r3
 2812 00e8 9A42     		cmp	r2, r3
 2813 00ea 03D9     		bls	.L170
 780:main.c        ****         tooLateFlag = 1;    
 2814              		.loc 1 780 0
 2815 00ec 124B     		ldr	r3, .L172+32
 2816 00ee 0122     		movs	r2, #1
 2817 00f0 1A70     		strb	r2, [r3]
 2818 00f2 0AE0     		b	.L171
 2819              	.L170:
 781:main.c        ****     }
 782:main.c        ****     else if (lineCount < totalLineCount) {
 2820              		.loc 1 782 0
 2821 00f4 0E4B     		ldr	r3, .L172+24
 2822 00f6 1B78     		ldrb	r3, [r3]
 2823 00f8 DAB2     		uxtb	r2, r3
 2824 00fa 084B     		ldr	r3, .L172+4
 2825 00fc 1B78     		ldrb	r3, [r3]
 2826 00fe DBB2     		uxtb	r3, r3
 2827 0100 9A42     		cmp	r2, r3
 2828 0102 02D2     		bcs	.L171
 783:main.c        ****         tooEarlyFlag = 1;    
 2829              		.loc 1 783 0
 2830 0104 0B4B     		ldr	r3, .L172+28
 2831 0106 0122     		movs	r2, #1
 2832 0108 1A70     		strb	r2, [r3]
 2833              	.L171:
 784:main.c        ****     }
 785:main.c        ****     QuadDec_M1_SetCounter(0);
 2834              		.loc 1 785 0
 2835 010a 0020     		movs	r0, #0
 2836 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2837              	.L159:
 786:main.c        **** }
 2838              		.loc 1 786 0
 2839 0110 0837     		adds	r7, r7, #8
 2840              		.cfi_def_cfa_offset 8
 2841 0112 BD46     		mov	sp, r7
 2842              		.cfi_def_cfa_register 13
 2843              		@ sp needed
 2844 0114 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 65


 2845              	.L173:
 2846 0116 00BF     		.align	2
 2847              	.L172:
 2848 0118 00000000 		.word	s3
 2849 011c 40000000 		.word	totalLineCount
 2850 0120 00000000 		.word	s4
 2851 0124 00000000 		.word	s5
 2852 0128 00000000 		.word	s6
 2853 012c 42000000 		.word	onLineFlag
 2854 0130 41000000 		.word	lineCount
 2855 0134 43000000 		.word	tooEarlyFlag
 2856 0138 44000000 		.word	tooLateFlag
 2857              		.cfi_endproc
 2858              	.LFE79:
 2859              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2860              		.section	.text.SetRobotMovement,"ax",%progbits
 2861              		.align	2
 2862              		.global	SetRobotMovement
 2863              		.thumb
 2864              		.thumb_func
 2865              		.type	SetRobotMovement, %function
 2866              	SetRobotMovement:
 2867              	.LFB80:
 787:main.c        **** 
 788:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 789:main.c        **** void SetRobotMovement() {
 2868              		.loc 1 789 0
 2869              		.cfi_startproc
 2870              		@ args = 0, pretend = 0, frame = 24
 2871              		@ frame_needed = 1, uses_anonymous_args = 0
 2872 0000 B0B5     		push	{r4, r5, r7, lr}
 2873              		.cfi_def_cfa_offset 16
 2874              		.cfi_offset 4, -16
 2875              		.cfi_offset 5, -12
 2876              		.cfi_offset 7, -8
 2877              		.cfi_offset 14, -4
 2878 0002 86B0     		sub	sp, sp, #24
 2879              		.cfi_def_cfa_offset 40
 2880 0004 00AF     		add	r7, sp, #0
 2881              		.cfi_def_cfa_register 7
 790:main.c        ****     //MoveToNextInstruction(); // debug purposes
 791:main.c        ****     previousInstruction = currentInstruction;
 2882              		.loc 1 791 0
 2883 0006 2D4A     		ldr	r2, .L190
 2884 0008 2D4B     		ldr	r3, .L190+4
 2885 000a 1446     		mov	r4, r2
 2886 000c 1D46     		mov	r5, r3
 2887 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2888 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2889 0012 2B68     		ldr	r3, [r5]
 2890 0014 2360     		str	r3, [r4]
 792:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2891              		.loc 1 792 0
 2892 0016 2A4C     		ldr	r4, .L190+4
 2893 0018 3B46     		mov	r3, r7
 2894 001a 1846     		mov	r0, r3
 2895 001c FFF7FEFF 		bl	GetInstructionAtIndex
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 66


 2896 0020 2546     		mov	r5, r4
 2897 0022 3C46     		mov	r4, r7
 2898 0024 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2899 0026 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2900 0028 2368     		ldr	r3, [r4]
 2901 002a 2B60     		str	r3, [r5]
 793:main.c        ****     previousDirection = currentDirection;
 2902              		.loc 1 793 0
 2903 002c 254B     		ldr	r3, .L190+8
 2904 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2905 0030 254B     		ldr	r3, .L190+12
 2906 0032 1A70     		strb	r2, [r3]
 794:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2907              		.loc 1 794 0
 2908 0034 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2909 0038 0346     		mov	r3, r0
 2910 003a 1A46     		mov	r2, r3
 2911 003c 214B     		ldr	r3, .L190+8
 2912 003e 1A70     		strb	r2, [r3]
 795:main.c        ****     // move robot depending on sensors
 796:main.c        ****     switch (currentDirection) {
 2913              		.loc 1 796 0
 2914 0040 204B     		ldr	r3, .L190+8
 2915 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2916 0044 0A2B     		cmp	r3, #10
 2917 0046 35D8     		bhi	.L188
 2918 0048 01A2     		adr	r2, .L177
 2919 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2920 004e 00BF     		.p2align 2
 2921              	.L177:
 2922 0050 7D000000 		.word	.L176+1
 2923 0054 83000000 		.word	.L178+1
 2924 0058 89000000 		.word	.L179+1
 2925 005c 95000000 		.word	.L180+1
 2926 0060 8F000000 		.word	.L181+1
 2927 0064 9B000000 		.word	.L182+1
 2928 0068 B3000000 		.word	.L189+1
 2929 006c B3000000 		.word	.L189+1
 2930 0070 A1000000 		.word	.L185+1
 2931 0074 A7000000 		.word	.L186+1
 2932 0078 AD000000 		.word	.L187+1
 2933              		.p2align 1
 2934              	.L176:
 797:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 798:main.c        ****         case Forward:
 799:main.c        ****             moveForward();
 2935              		.loc 1 799 0
 2936 007c FFF7FEFF 		bl	moveForward
 800:main.c        ****             break;
 2937              		.loc 1 800 0
 2938 0080 18E0     		b	.L175
 2939              	.L178:
 801:main.c        ****         case TurnRight:
 802:main.c        ****             turnRight();
 2940              		.loc 1 802 0
 2941 0082 FFF7FEFF 		bl	turnRight
 803:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 67


 2942              		.loc 1 803 0
 2943 0086 15E0     		b	.L175
 2944              	.L179:
 804:main.c        ****         case TurnLeft:
 805:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2945              		.loc 1 805 0
 2946 0088 FFF7FEFF 		bl	turnLeft
 806:main.c        ****             break;
 2947              		.loc 1 806 0
 2948 008c 12E0     		b	.L175
 2949              	.L181:
 807:main.c        ****         case AdjustToTheRight:
 808:main.c        ****             adjustRight();
 2950              		.loc 1 808 0
 2951 008e FFF7FEFF 		bl	adjustRight
 809:main.c        ****             break;
 2952              		.loc 1 809 0
 2953 0092 0FE0     		b	.L175
 2954              	.L180:
 810:main.c        ****         case AdjustToTheLeft:
 811:main.c        ****             adjustLeft();
 2955              		.loc 1 811 0
 2956 0094 FFF7FEFF 		bl	adjustLeft
 812:main.c        ****             break;
 2957              		.loc 1 812 0
 2958 0098 0CE0     		b	.L175
 2959              	.L182:
 813:main.c        ****         case Stop:
 814:main.c        ****             stopMoving();
 2960              		.loc 1 814 0
 2961 009a FFF7FEFF 		bl	stopMoving
 815:main.c        ****             break;
 2962              		.loc 1 815 0
 2963 009e 09E0     		b	.L175
 2964              	.L185:
 816:main.c        ****         case ForwardAfterTurn:
 817:main.c        ****             moveForward();
 2965              		.loc 1 817 0
 2966 00a0 FFF7FEFF 		bl	moveForward
 818:main.c        ****             break;
 2967              		.loc 1 818 0
 2968 00a4 06E0     		b	.L175
 2969              	.L186:
 819:main.c        ****         case Backward:
 820:main.c        ****             moveBackward();
 2970              		.loc 1 820 0
 2971 00a6 FFF7FEFF 		bl	moveBackward
 821:main.c        ****             break;
 2972              		.loc 1 821 0
 2973 00aa 03E0     		b	.L175
 2974              	.L187:
 822:main.c        ****         case waitForTurn:
 823:main.c        ****             break;
 824:main.c        ****         case Spin180:
 825:main.c        ****             RotateClockwise180Degrees();
 2975              		.loc 1 825 0
 2976 00ac FFF7FEFF 		bl	RotateClockwise180Degrees
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 68


 826:main.c        ****             break;
 2977              		.loc 1 826 0
 2978 00b0 00E0     		b	.L175
 2979              	.L189:
 827:main.c        ****         case Unknown:
 828:main.c        ****             break;  
 2980              		.loc 1 828 0
 2981 00b2 00BF     		nop
 2982              	.L175:
 2983              	.L188:
 829:main.c        ****     }
 830:main.c        **** }
 2984              		.loc 1 830 0
 2985 00b4 00BF     		nop
 2986 00b6 1837     		adds	r7, r7, #24
 2987              		.cfi_def_cfa_offset 16
 2988 00b8 BD46     		mov	sp, r7
 2989              		.cfi_def_cfa_register 13
 2990              		@ sp needed
 2991 00ba B0BD     		pop	{r4, r5, r7, pc}
 2992              	.L191:
 2993              		.align	2
 2994              	.L190:
 2995 00bc 00000000 		.word	previousInstruction
 2996 00c0 00000000 		.word	currentInstruction
 2997 00c4 00000000 		.word	currentDirection
 2998 00c8 00000000 		.word	previousDirection
 2999              		.cfi_endproc
 3000              	.LFE80:
 3001              		.size	SetRobotMovement, .-SetRobotMovement
 3002              		.text
 3003              	.Letext0:
 3004              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3005              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3006              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3007              		.file 5 "vars.h"
 3008              		.file 6 "pathfinding.h"
 3009              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 3010              		.file 8 "map.h"
 3011              		.section	.debug_info,"",%progbits
 3012              	.Ldebug_info0:
 3013 0000 130A0000 		.4byte	0xa13
 3014 0004 0400     		.2byte	0x4
 3015 0006 00000000 		.4byte	.Ldebug_abbrev0
 3016 000a 04       		.byte	0x4
 3017 000b 01       		.uleb128 0x1
 3018 000c F5000000 		.4byte	.LASF158
 3019 0010 0C       		.byte	0xc
 3020 0011 AF040000 		.4byte	.LASF159
 3021 0015 85000000 		.4byte	.LASF160
 3022 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3023 001d 00000000 		.4byte	0
 3024 0021 00000000 		.4byte	.Ldebug_line0
 3025 0025 02       		.uleb128 0x2
 3026 0026 01       		.byte	0x1
 3027 0027 06       		.byte	0x6
 3028 0028 79000000 		.4byte	.LASF0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 69


 3029 002c 02       		.uleb128 0x2
 3030 002d 01       		.byte	0x1
 3031 002e 08       		.byte	0x8
 3032 002f 68060000 		.4byte	.LASF1
 3033 0033 02       		.uleb128 0x2
 3034 0034 02       		.byte	0x2
 3035 0035 05       		.byte	0x5
 3036 0036 D4040000 		.4byte	.LASF2
 3037 003a 02       		.uleb128 0x2
 3038 003b 02       		.byte	0x2
 3039 003c 07       		.byte	0x7
 3040 003d 4B040000 		.4byte	.LASF3
 3041 0041 03       		.uleb128 0x3
 3042 0042 A5040000 		.4byte	.LASF12
 3043 0046 02       		.byte	0x2
 3044 0047 3F       		.byte	0x3f
 3045 0048 4C000000 		.4byte	0x4c
 3046 004c 02       		.uleb128 0x2
 3047 004d 04       		.byte	0x4
 3048 004e 05       		.byte	0x5
 3049 004f 84020000 		.4byte	.LASF4
 3050 0053 02       		.uleb128 0x2
 3051 0054 04       		.byte	0x4
 3052 0055 07       		.byte	0x7
 3053 0056 F0030000 		.4byte	.LASF5
 3054 005a 02       		.uleb128 0x2
 3055 005b 08       		.byte	0x8
 3056 005c 05       		.byte	0x5
 3057 005d ED020000 		.4byte	.LASF6
 3058 0061 02       		.uleb128 0x2
 3059 0062 08       		.byte	0x8
 3060 0063 07       		.byte	0x7
 3061 0064 A5010000 		.4byte	.LASF7
 3062 0068 04       		.uleb128 0x4
 3063 0069 04       		.byte	0x4
 3064 006a 05       		.byte	0x5
 3065 006b 696E7400 		.ascii	"int\000"
 3066 006f 02       		.uleb128 0x2
 3067 0070 04       		.byte	0x4
 3068 0071 07       		.byte	0x7
 3069 0072 96070000 		.4byte	.LASF8
 3070 0076 02       		.uleb128 0x2
 3071 0077 08       		.byte	0x8
 3072 0078 04       		.byte	0x4
 3073 0079 75070000 		.4byte	.LASF9
 3074 007d 02       		.uleb128 0x2
 3075 007e 04       		.byte	0x4
 3076 007f 07       		.byte	0x7
 3077 0080 5F050000 		.4byte	.LASF10
 3078 0084 02       		.uleb128 0x2
 3079 0085 01       		.byte	0x1
 3080 0086 08       		.byte	0x8
 3081 0087 81070000 		.4byte	.LASF11
 3082 008b 03       		.uleb128 0x3
 3083 008c 60060000 		.4byte	.LASF13
 3084 0090 03       		.byte	0x3
 3085 0091 2C       		.byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 70


 3086 0092 41000000 		.4byte	0x41
 3087 0096 05       		.uleb128 0x5
 3088 0097 E7020000 		.4byte	.LASF14
 3089 009b 04       		.byte	0x4
 3090 009c E701     		.2byte	0x1e7
 3091 009e 2C000000 		.4byte	0x2c
 3092 00a2 05       		.uleb128 0x5
 3093 00a3 76060000 		.4byte	.LASF15
 3094 00a7 04       		.byte	0x4
 3095 00a8 E801     		.2byte	0x1e8
 3096 00aa 3A000000 		.4byte	0x3a
 3097 00ae 05       		.uleb128 0x5
 3098 00af 65030000 		.4byte	.LASF16
 3099 00b3 04       		.byte	0x4
 3100 00b4 E901     		.2byte	0x1e9
 3101 00b6 53000000 		.4byte	0x53
 3102 00ba 05       		.uleb128 0x5
 3103 00bb 95040000 		.4byte	.LASF17
 3104 00bf 04       		.byte	0x4
 3105 00c0 EA01     		.2byte	0x1ea
 3106 00c2 25000000 		.4byte	0x25
 3107 00c6 05       		.uleb128 0x5
 3108 00c7 D2080000 		.4byte	.LASF18
 3109 00cb 04       		.byte	0x4
 3110 00cc EB01     		.2byte	0x1eb
 3111 00ce 33000000 		.4byte	0x33
 3112 00d2 02       		.uleb128 0x2
 3113 00d3 04       		.byte	0x4
 3114 00d4 04       		.byte	0x4
 3115 00d5 05060000 		.4byte	.LASF19
 3116 00d9 02       		.uleb128 0x2
 3117 00da 08       		.byte	0x8
 3118 00db 04       		.byte	0x4
 3119 00dc FB020000 		.4byte	.LASF20
 3120 00e0 06       		.uleb128 0x6
 3121 00e1 96000000 		.4byte	0x96
 3122 00e5 06       		.uleb128 0x6
 3123 00e6 AE000000 		.4byte	0xae
 3124 00ea 07       		.uleb128 0x7
 3125 00eb 96000000 		.4byte	0x96
 3126 00ef FA000000 		.4byte	0xfa
 3127 00f3 08       		.uleb128 0x8
 3128 00f4 7D000000 		.4byte	0x7d
 3129 00f8 03       		.byte	0x3
 3130 00f9 00       		.byte	0
 3131 00fa 09       		.uleb128 0x9
 3132 00fb D5030000 		.4byte	.LASF49
 3133 00ff 20       		.byte	0x20
 3134 0100 05       		.byte	0x5
 3135 0101 28       		.byte	0x28
 3136 0102 D3010000 		.4byte	0x1d3
 3137 0106 0A       		.uleb128 0xa
 3138 0107 A3070000 		.4byte	.LASF21
 3139 010b 05       		.byte	0x5
 3140 010c 2A       		.byte	0x2a
 3141 010d BA000000 		.4byte	0xba
 3142 0111 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 71


 3143 0112 0A       		.uleb128 0xa
 3144 0113 A8070000 		.4byte	.LASF22
 3145 0117 05       		.byte	0x5
 3146 0118 2B       		.byte	0x2b
 3147 0119 96000000 		.4byte	0x96
 3148 011d 01       		.byte	0x1
 3149 011e 0A       		.uleb128 0xa
 3150 011f ED070000 		.4byte	.LASF23
 3151 0123 05       		.byte	0x5
 3152 0124 2C       		.byte	0x2c
 3153 0125 C6000000 		.4byte	0xc6
 3154 0129 02       		.byte	0x2
 3155 012a 0A       		.uleb128 0xa
 3156 012b FA060000 		.4byte	.LASF24
 3157 012f 05       		.byte	0x5
 3158 0130 2D       		.byte	0x2d
 3159 0131 C6000000 		.4byte	0xc6
 3160 0135 04       		.byte	0x4
 3161 0136 0A       		.uleb128 0xa
 3162 0137 31090000 		.4byte	.LASF25
 3163 013b 05       		.byte	0x5
 3164 013c 2E       		.byte	0x2e
 3165 013d C6000000 		.4byte	0xc6
 3166 0141 06       		.byte	0x6
 3167 0142 0A       		.uleb128 0xa
 3168 0143 D6010000 		.4byte	.LASF26
 3169 0147 05       		.byte	0x5
 3170 0148 2F       		.byte	0x2f
 3171 0149 C6000000 		.4byte	0xc6
 3172 014d 08       		.byte	0x8
 3173 014e 0A       		.uleb128 0xa
 3174 014f 86070000 		.4byte	.LASF27
 3175 0153 05       		.byte	0x5
 3176 0154 30       		.byte	0x30
 3177 0155 C6000000 		.4byte	0xc6
 3178 0159 0A       		.byte	0xa
 3179 015a 0A       		.uleb128 0xa
 3180 015b 10090000 		.4byte	.LASF28
 3181 015f 05       		.byte	0x5
 3182 0160 31       		.byte	0x31
 3183 0161 C6000000 		.4byte	0xc6
 3184 0165 0C       		.byte	0xc
 3185 0166 0A       		.uleb128 0xa
 3186 0167 92010000 		.4byte	.LASF29
 3187 016b 05       		.byte	0x5
 3188 016c 32       		.byte	0x32
 3189 016d C6000000 		.4byte	0xc6
 3190 0171 0E       		.byte	0xe
 3191 0172 0A       		.uleb128 0xa
 3192 0173 A7050000 		.4byte	.LASF30
 3193 0177 05       		.byte	0x5
 3194 0178 33       		.byte	0x33
 3195 0179 C6000000 		.4byte	0xc6
 3196 017d 10       		.byte	0x10
 3197 017e 0A       		.uleb128 0xa
 3198 017f B6040000 		.4byte	.LASF31
 3199 0183 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 72


 3200 0184 34       		.byte	0x34
 3201 0185 C6000000 		.4byte	0xc6
 3202 0189 12       		.byte	0x12
 3203 018a 0A       		.uleb128 0xa
 3204 018b 3F050000 		.4byte	.LASF32
 3205 018f 05       		.byte	0x5
 3206 0190 35       		.byte	0x35
 3207 0191 C6000000 		.4byte	0xc6
 3208 0195 14       		.byte	0x14
 3209 0196 0A       		.uleb128 0xa
 3210 0197 80050000 		.4byte	.LASF33
 3211 019b 05       		.byte	0x5
 3212 019c 36       		.byte	0x36
 3213 019d C6000000 		.4byte	0xc6
 3214 01a1 16       		.byte	0x16
 3215 01a2 0A       		.uleb128 0xa
 3216 01a3 92060000 		.4byte	.LASF34
 3217 01a7 05       		.byte	0x5
 3218 01a8 37       		.byte	0x37
 3219 01a9 C6000000 		.4byte	0xc6
 3220 01ad 18       		.byte	0x18
 3221 01ae 0A       		.uleb128 0xa
 3222 01af AF050000 		.4byte	.LASF35
 3223 01b3 05       		.byte	0x5
 3224 01b4 38       		.byte	0x38
 3225 01b5 C6000000 		.4byte	0xc6
 3226 01b9 1A       		.byte	0x1a
 3227 01ba 0A       		.uleb128 0xa
 3228 01bb 1F000000 		.4byte	.LASF36
 3229 01bf 05       		.byte	0x5
 3230 01c0 39       		.byte	0x39
 3231 01c1 C6000000 		.4byte	0xc6
 3232 01c5 1C       		.byte	0x1c
 3233 01c6 0A       		.uleb128 0xa
 3234 01c7 87030000 		.4byte	.LASF37
 3235 01cb 05       		.byte	0x5
 3236 01cc 3A       		.byte	0x3a
 3237 01cd C6000000 		.4byte	0xc6
 3238 01d1 1E       		.byte	0x1e
 3239 01d2 00       		.byte	0
 3240 01d3 0B       		.uleb128 0xb
 3241 01d4 0E000000 		.4byte	.LASF41
 3242 01d8 01       		.byte	0x1
 3243 01d9 2C000000 		.4byte	0x2c
 3244 01dd 06       		.byte	0x6
 3245 01de 0D       		.byte	0xd
 3246 01df FB010000 		.4byte	0x1fb
 3247 01e3 0C       		.uleb128 0xc
 3248 01e4 557000   		.ascii	"Up\000"
 3249 01e7 00       		.byte	0
 3250 01e8 0D       		.uleb128 0xd
 3251 01e9 C4070000 		.4byte	.LASF38
 3252 01ed 01       		.byte	0x1
 3253 01ee 0D       		.uleb128 0xd
 3254 01ef 48050000 		.4byte	.LASF39
 3255 01f3 02       		.byte	0x2
 3256 01f4 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 73


 3257 01f5 1F070000 		.4byte	.LASF40
 3258 01f9 03       		.byte	0x3
 3259 01fa 00       		.byte	0
 3260 01fb 0B       		.uleb128 0xb
 3261 01fc 7D060000 		.4byte	.LASF42
 3262 0200 01       		.byte	0x1
 3263 0201 2C000000 		.4byte	0x2c
 3264 0205 06       		.byte	0x6
 3265 0206 0E       		.byte	0xe
 3266 0207 30020000 		.4byte	0x230
 3267 020b 0D       		.uleb128 0xd
 3268 020c 15070000 		.4byte	.LASF43
 3269 0210 00       		.byte	0
 3270 0211 0D       		.uleb128 0xd
 3271 0212 97050000 		.4byte	.LASF44
 3272 0216 01       		.byte	0x1
 3273 0217 0D       		.uleb128 0xd
 3274 0218 64080000 		.4byte	.LASF45
 3275 021c 02       		.byte	0x2
 3276 021d 0D       		.uleb128 0xd
 3277 021e D0010000 		.4byte	.LASF46
 3278 0222 03       		.byte	0x3
 3279 0223 0D       		.uleb128 0xd
 3280 0224 CB020000 		.4byte	.LASF47
 3281 0228 04       		.byte	0x4
 3282 0229 0D       		.uleb128 0xd
 3283 022a 05020000 		.4byte	.LASF48
 3284 022e 05       		.byte	0x5
 3285 022f 00       		.byte	0
 3286 0230 09       		.uleb128 0x9
 3287 0231 68020000 		.4byte	.LASF50
 3288 0235 14       		.byte	0x14
 3289 0236 06       		.byte	0x6
 3290 0237 10       		.byte	0x10
 3291 0238 79020000 		.4byte	0x279
 3292 023c 0A       		.uleb128 0xa
 3293 023d E2000000 		.4byte	.LASF51
 3294 0241 06       		.byte	0x6
 3295 0242 11       		.byte	0x11
 3296 0243 FB010000 		.4byte	0x1fb
 3297 0247 00       		.byte	0
 3298 0248 0A       		.uleb128 0xa
 3299 0249 E7080000 		.4byte	.LASF52
 3300 024d 06       		.byte	0x6
 3301 024e 12       		.byte	0x12
 3302 024f 68000000 		.4byte	0x68
 3303 0253 04       		.byte	0x4
 3304 0254 0A       		.uleb128 0xa
 3305 0255 F8080000 		.4byte	.LASF53
 3306 0259 06       		.byte	0x6
 3307 025a 13       		.byte	0x13
 3308 025b 68000000 		.4byte	0x68
 3309 025f 08       		.byte	0x8
 3310 0260 0A       		.uleb128 0xa
 3311 0261 F4010000 		.4byte	.LASF54
 3312 0265 06       		.byte	0x6
 3313 0266 14       		.byte	0x14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 74


 3314 0267 68000000 		.4byte	0x68
 3315 026b 0C       		.byte	0xc
 3316 026c 0A       		.uleb128 0xa
 3317 026d BC010000 		.4byte	.LASF55
 3318 0271 06       		.byte	0x6
 3319 0272 15       		.byte	0x15
 3320 0273 D3010000 		.4byte	0x1d3
 3321 0277 10       		.byte	0x10
 3322 0278 00       		.byte	0
 3323 0279 03       		.uleb128 0x3
 3324 027a 68020000 		.4byte	.LASF50
 3325 027e 06       		.byte	0x6
 3326 027f 16       		.byte	0x16
 3327 0280 30020000 		.4byte	0x230
 3328 0284 0B       		.uleb128 0xb
 3329 0285 46000000 		.4byte	.LASF56
 3330 0289 01       		.byte	0x1
 3331 028a 2C000000 		.4byte	0x2c
 3332 028e 01       		.byte	0x1
 3333 028f 18       		.byte	0x18
 3334 0290 D7020000 		.4byte	0x2d7
 3335 0294 0D       		.uleb128 0xd
 3336 0295 43040000 		.4byte	.LASF57
 3337 0299 00       		.byte	0
 3338 029a 0D       		.uleb128 0xd
 3339 029b BA030000 		.4byte	.LASF58
 3340 029f 01       		.byte	0x1
 3341 02a0 0D       		.uleb128 0xd
 3342 02a1 EF080000 		.4byte	.LASF59
 3343 02a5 02       		.byte	0x2
 3344 02a6 0D       		.uleb128 0xd
 3345 02a7 05070000 		.4byte	.LASF60
 3346 02ab 03       		.byte	0x3
 3347 02ac 0D       		.uleb128 0xd
 3348 02ad 34030000 		.4byte	.LASF61
 3349 02b1 04       		.byte	0x4
 3350 02b2 0D       		.uleb128 0xd
 3351 02b3 7F020000 		.4byte	.LASF62
 3352 02b7 05       		.byte	0x5
 3353 02b8 0D       		.uleb128 0xd
 3354 02b9 1D060000 		.4byte	.LASF63
 3355 02bd 06       		.byte	0x6
 3356 02be 0D       		.uleb128 0xd
 3357 02bf 37040000 		.4byte	.LASF64
 3358 02c3 07       		.byte	0x7
 3359 02c4 0D       		.uleb128 0xd
 3360 02c5 C4030000 		.4byte	.LASF65
 3361 02c9 08       		.byte	0x8
 3362 02ca 0D       		.uleb128 0xd
 3363 02cb DE020000 		.4byte	.LASF66
 3364 02cf 09       		.byte	0x9
 3365 02d0 0D       		.uleb128 0xd
 3366 02d1 8E070000 		.4byte	.LASF67
 3367 02d5 0A       		.byte	0xa
 3368 02d6 00       		.byte	0
 3369 02d7 0E       		.uleb128 0xe
 3370 02d8 9A040000 		.4byte	.LASF78
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 75


 3371 02dc 01       		.byte	0x1
 3372 02dd 55       		.byte	0x55
 3373 02de 00000000 		.4byte	.LFB64
 3374 02e2 EC000000 		.4byte	.LFE64-.LFB64
 3375 02e6 01       		.uleb128 0x1
 3376 02e7 9C       		.byte	0x9c
 3377 02e8 05030000 		.4byte	0x305
 3378 02ec 0F       		.uleb128 0xf
 3379 02ed 50000000 		.4byte	.LBB2
 3380 02f1 62000000 		.4byte	.LBE2-.LBB2
 3381 02f5 10       		.uleb128 0x10
 3382 02f6 69070000 		.4byte	.LASF74
 3383 02fa 01       		.byte	0x1
 3384 02fb 62       		.byte	0x62
 3385 02fc D2000000 		.4byte	0xd2
 3386 0300 02       		.uleb128 0x2
 3387 0301 91       		.byte	0x91
 3388 0302 6C       		.sleb128 -20
 3389 0303 00       		.byte	0
 3390 0304 00       		.byte	0
 3391 0305 11       		.uleb128 0x11
 3392 0306 31020000 		.4byte	.LASF68
 3393 030a 01       		.byte	0x1
 3394 030b 6D       		.byte	0x6d
 3395 030c 00000000 		.4byte	.LFB65
 3396 0310 18000000 		.4byte	.LFE65-.LFB65
 3397 0314 01       		.uleb128 0x1
 3398 0315 9C       		.byte	0x9c
 3399 0316 11       		.uleb128 0x11
 3400 0317 D6000000 		.4byte	.LASF69
 3401 031b 01       		.byte	0x1
 3402 031c 73       		.byte	0x73
 3403 031d 00000000 		.4byte	.LFB66
 3404 0321 18000000 		.4byte	.LFE66-.LFB66
 3405 0325 01       		.uleb128 0x1
 3406 0326 9C       		.byte	0x9c
 3407 0327 11       		.uleb128 0x11
 3408 0328 4C020000 		.4byte	.LASF70
 3409 032c 01       		.byte	0x1
 3410 032d 79       		.byte	0x79
 3411 032e 00000000 		.4byte	.LFB67
 3412 0332 18000000 		.4byte	.LFE67-.LFB67
 3413 0336 01       		.uleb128 0x1
 3414 0337 9C       		.byte	0x9c
 3415 0338 11       		.uleb128 0x11
 3416 0339 AE070000 		.4byte	.LASF71
 3417 033d 01       		.byte	0x1
 3418 033e 7F       		.byte	0x7f
 3419 033f 00000000 		.4byte	.LFB68
 3420 0343 18000000 		.4byte	.LFE68-.LFB68
 3421 0347 01       		.uleb128 0x1
 3422 0348 9C       		.byte	0x9c
 3423 0349 12       		.uleb128 0x12
 3424 034a B4080000 		.4byte	.LASF72
 3425 034e 01       		.byte	0x1
 3426 034f 85       		.byte	0x85
 3427 0350 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 76


 3428 0354 70000000 		.4byte	.LFE69-.LFB69
 3429 0358 01       		.uleb128 0x1
 3430 0359 9C       		.byte	0x9c
 3431 035a 13       		.uleb128 0x13
 3432 035b 20030000 		.4byte	.LASF73
 3433 035f 01       		.byte	0x1
 3434 0360 99       		.byte	0x99
 3435 0361 68000000 		.4byte	0x68
 3436 0365 00000000 		.4byte	.LFB70
 3437 0369 04010000 		.4byte	.LFE70-.LFB70
 3438 036d 01       		.uleb128 0x1
 3439 036e 9C       		.byte	0x9c
 3440 036f 14       		.uleb128 0x14
 3441 0370 D8080000 		.4byte	.LASF161
 3442 0374 01       		.byte	0x1
 3443 0375 C0       		.byte	0xc0
 3444 0376 C6000000 		.4byte	0xc6
 3445 037a 00000000 		.4byte	.LFB71
 3446 037e 54000000 		.4byte	.LFE71-.LFB71
 3447 0382 01       		.uleb128 0x1
 3448 0383 9C       		.byte	0x9c
 3449 0384 B3030000 		.4byte	0x3b3
 3450 0388 15       		.uleb128 0x15
 3451 0389 7C030000 		.4byte	.LASF162
 3452 038d 01       		.byte	0x1
 3453 038e C0       		.byte	0xc0
 3454 038f A2000000 		.4byte	0xa2
 3455 0393 02       		.uleb128 0x2
 3456 0394 91       		.byte	0x91
 3457 0395 66       		.sleb128 -26
 3458 0396 16       		.uleb128 0x16
 3459 0397 63707300 		.ascii	"cps\000"
 3460 039b 01       		.byte	0x1
 3461 039c C1       		.byte	0xc1
 3462 039d D2000000 		.4byte	0xd2
 3463 03a1 02       		.uleb128 0x2
 3464 03a2 91       		.byte	0x91
 3465 03a3 6C       		.sleb128 -20
 3466 03a4 16       		.uleb128 0x16
 3467 03a5 72706D00 		.ascii	"rpm\000"
 3468 03a9 01       		.byte	0x1
 3469 03aa C2       		.byte	0xc2
 3470 03ab C6000000 		.4byte	0xc6
 3471 03af 02       		.uleb128 0x2
 3472 03b0 91       		.byte	0x91
 3473 03b1 6A       		.sleb128 -22
 3474 03b2 00       		.byte	0
 3475 03b3 17       		.uleb128 0x17
 3476 03b4 C1080000 		.4byte	.LASF83
 3477 03b8 01       		.byte	0x1
 3478 03b9 CA       		.byte	0xca
 3479 03ba 00000000 		.4byte	.LFB72
 3480 03be 34000000 		.4byte	.LFE72-.LFB72
 3481 03c2 01       		.uleb128 0x1
 3482 03c3 9C       		.byte	0x9c
 3483 03c4 18       		.uleb128 0x18
 3484 03c5 0D050000 		.4byte	.LASF75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 77


 3485 03c9 01       		.byte	0x1
 3486 03ca DB       		.byte	0xdb
 3487 03cb 84020000 		.4byte	0x284
 3488 03cf 00000000 		.4byte	.LFB73
 3489 03d3 84000000 		.4byte	.LFE73-.LFB73
 3490 03d7 01       		.uleb128 0x1
 3491 03d8 9C       		.byte	0x9c
 3492 03d9 19       		.uleb128 0x19
 3493 03da 44070000 		.4byte	.LASF76
 3494 03de 01       		.byte	0x1
 3495 03df 0101     		.2byte	0x101
 3496 03e1 84020000 		.4byte	0x284
 3497 03e5 00000000 		.4byte	.LFB74
 3498 03e9 7C000000 		.4byte	.LFE74-.LFB74
 3499 03ed 01       		.uleb128 0x1
 3500 03ee 9C       		.byte	0x9c
 3501 03ef 19       		.uleb128 0x19
 3502 03f0 B2020000 		.4byte	.LASF77
 3503 03f4 01       		.byte	0x1
 3504 03f5 1F01     		.2byte	0x11f
 3505 03f7 84020000 		.4byte	0x284
 3506 03fb 00000000 		.4byte	.LFB75
 3507 03ff 84000000 		.4byte	.LFE75-.LFB75
 3508 0403 01       		.uleb128 0x1
 3509 0404 9C       		.byte	0x9c
 3510 0405 1A       		.uleb128 0x1a
 3511 0406 21080000 		.4byte	.LASF79
 3512 040a 01       		.byte	0x1
 3513 040b 4501     		.2byte	0x145
 3514 040d 84020000 		.4byte	0x284
 3515 0411 00000000 		.4byte	.LFB76
 3516 0415 C4070000 		.4byte	.LFE76-.LFB76
 3517 0419 01       		.uleb128 0x1
 3518 041a 9C       		.byte	0x9c
 3519 041b 57040000 		.4byte	0x457
 3520 041f 1B       		.uleb128 0x1b
 3521 0420 DF030000 		.4byte	.LASF80
 3522 0424 01       		.byte	0x1
 3523 0425 4601     		.2byte	0x146
 3524 0427 D2000000 		.4byte	0xd2
 3525 042b 02       		.uleb128 0x2
 3526 042c 91       		.byte	0x91
 3527 042d 6C       		.sleb128 -20
 3528 042e 1B       		.uleb128 0x1b
 3529 042f DE060000 		.4byte	.LASF81
 3530 0433 01       		.byte	0x1
 3531 0434 5501     		.2byte	0x155
 3532 0436 FB010000 		.4byte	0x1fb
 3533 043a 02       		.uleb128 0x2
 3534 043b 91       		.byte	0x91
 3535 043c 6B       		.sleb128 -21
 3536 043d 0F       		.uleb128 0xf
 3537 043e FE030000 		.4byte	.LBB3
 3538 0442 24000000 		.4byte	.LBE3-.LBB3
 3539 0446 1B       		.uleb128 0x1b
 3540 0447 83010000 		.4byte	.LASF82
 3541 044b 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 78


 3542 044c 3902     		.2byte	0x239
 3543 044e 68000000 		.4byte	0x68
 3544 0452 02       		.uleb128 0x2
 3545 0453 91       		.byte	0x91
 3546 0454 64       		.sleb128 -28
 3547 0455 00       		.byte	0
 3548 0456 00       		.byte	0
 3549 0457 1C       		.uleb128 0x1c
 3550 0458 BE040000 		.4byte	.LASF84
 3551 045c 01       		.byte	0x1
 3552 045d CB02     		.2byte	0x2cb
 3553 045f 00000000 		.4byte	.LFB77
 3554 0463 68000000 		.4byte	.LFE77-.LFB77
 3555 0467 01       		.uleb128 0x1
 3556 0468 9C       		.byte	0x9c
 3557 0469 1D       		.uleb128 0x1d
 3558 046a 25060000 		.4byte	.LASF85
 3559 046e 01       		.byte	0x1
 3560 046f D602     		.2byte	0x2d6
 3561 0471 79020000 		.4byte	0x279
 3562 0475 00000000 		.4byte	.LFB78
 3563 0479 6C000000 		.4byte	.LFE78-.LFB78
 3564 047d 01       		.uleb128 0x1
 3565 047e 9C       		.byte	0x9c
 3566 047f 93040000 		.4byte	0x493
 3567 0483 1B       		.uleb128 0x1b
 3568 0484 6C030000 		.4byte	.LASF86
 3569 0488 01       		.byte	0x1
 3570 0489 D702     		.2byte	0x2d7
 3571 048b 79020000 		.4byte	0x279
 3572 048f 02       		.uleb128 0x2
 3573 0490 91       		.byte	0x91
 3574 0491 5C       		.sleb128 -36
 3575 0492 00       		.byte	0
 3576 0493 1E       		.uleb128 0x1e
 3577 0494 1D040000 		.4byte	.LASF163
 3578 0498 01       		.byte	0x1
 3579 0499 DF02     		.2byte	0x2df
 3580 049b 00000000 		.4byte	.LFB79
 3581 049f 3C010000 		.4byte	.LFE79-.LFB79
 3582 04a3 01       		.uleb128 0x1
 3583 04a4 9C       		.byte	0x9c
 3584 04a5 D7040000 		.4byte	0x4d7
 3585 04a9 1B       		.uleb128 0x1b
 3586 04aa AD080000 		.4byte	.LASF87
 3587 04ae 01       		.byte	0x1
 3588 04af E002     		.2byte	0x2e0
 3589 04b1 A2000000 		.4byte	0xa2
 3590 04b5 02       		.uleb128 0x2
 3591 04b6 91       		.byte	0x91
 3592 04b7 72       		.sleb128 -14
 3593 04b8 1B       		.uleb128 0x1b
 3594 04b9 9A020000 		.4byte	.LASF88
 3595 04bd 01       		.byte	0x1
 3596 04be E102     		.2byte	0x2e1
 3597 04c0 A2000000 		.4byte	0xa2
 3598 04c4 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 79


 3599 04c5 91       		.byte	0x91
 3600 04c6 70       		.sleb128 -16
 3601 04c7 1B       		.uleb128 0x1b
 3602 04c8 DE040000 		.4byte	.LASF89
 3603 04cc 01       		.byte	0x1
 3604 04cd E502     		.2byte	0x2e5
 3605 04cf 68000000 		.4byte	0x68
 3606 04d3 02       		.uleb128 0x2
 3607 04d4 91       		.byte	0x91
 3608 04d5 74       		.sleb128 -12
 3609 04d6 00       		.byte	0
 3610 04d7 1F       		.uleb128 0x1f
 3611 04d8 84040000 		.4byte	.LASF90
 3612 04dc 01       		.byte	0x1
 3613 04dd 1503     		.2byte	0x315
 3614 04df 00000000 		.4byte	.LFB80
 3615 04e3 CC000000 		.4byte	.LFE80-.LFB80
 3616 04e7 01       		.uleb128 0x1
 3617 04e8 9C       		.byte	0x9c
 3618 04e9 10       		.uleb128 0x10
 3619 04ea A1020000 		.4byte	.LASF91
 3620 04ee 01       		.byte	0x1
 3621 04ef 21       		.byte	0x21
 3622 04f0 E5000000 		.4byte	0xe5
 3623 04f4 05       		.uleb128 0x5
 3624 04f5 03       		.byte	0x3
 3625 04f6 14000000 		.4byte	instructionIndex
 3626 04fa 10       		.uleb128 0x10
 3627 04fb 00090000 		.4byte	.LASF92
 3628 04ff 01       		.byte	0x1
 3629 0500 35       		.byte	0x35
 3630 0501 E0000000 		.4byte	0xe0
 3631 0505 05       		.uleb128 0x5
 3632 0506 03       		.byte	0x3
 3633 0507 36000000 		.4byte	turnStartedFlag
 3634 050b 10       		.uleb128 0x10
 3635 050c 43080000 		.4byte	.LASF93
 3636 0510 01       		.byte	0x1
 3637 0511 36       		.byte	0x36
 3638 0512 E0000000 		.4byte	0xe0
 3639 0516 05       		.uleb128 0x5
 3640 0517 03       		.byte	0x3
 3641 0518 37000000 		.4byte	turnFinishedFlag
 3642 051c 10       		.uleb128 0x10
 3643 051d 28000000 		.4byte	.LASF94
 3644 0521 01       		.byte	0x1
 3645 0522 38       		.byte	0x38
 3646 0523 E0000000 		.4byte	0xe0
 3647 0527 05       		.uleb128 0x5
 3648 0528 03       		.byte	0x3
 3649 0529 38000000 		.4byte	forwardUntilTargetStartedFlag
 3650 052d 10       		.uleb128 0x10
 3651 052e 4F060000 		.4byte	.LASF95
 3652 0532 01       		.byte	0x1
 3653 0533 39       		.byte	0x39
 3654 0534 E0000000 		.4byte	0xe0
 3655 0538 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 80


 3656 0539 03       		.byte	0x3
 3657 053a 39000000 		.4byte	uTurnStartedFlag
 3658 053e 10       		.uleb128 0x10
 3659 053f 4D050000 		.4byte	.LASF96
 3660 0543 01       		.byte	0x1
 3661 0544 3A       		.byte	0x3a
 3662 0545 E0000000 		.4byte	0xe0
 3663 0549 05       		.uleb128 0x5
 3664 054a 03       		.byte	0x3
 3665 054b 3A000000 		.4byte	uTurnFinishedFlag
 3666 054f 10       		.uleb128 0x10
 3667 0550 CF060000 		.4byte	.LASF97
 3668 0554 01       		.byte	0x1
 3669 0555 3C       		.byte	0x3c
 3670 0556 E0000000 		.4byte	0xe0
 3671 055a 05       		.uleb128 0x5
 3672 055b 03       		.byte	0x3
 3673 055c 3B000000 		.4byte	leftStatusFlag
 3674 0560 10       		.uleb128 0x10
 3675 0561 58020000 		.4byte	.LASF98
 3676 0565 01       		.byte	0x1
 3677 0566 3D       		.byte	0x3d
 3678 0567 E0000000 		.4byte	0xe0
 3679 056b 05       		.uleb128 0x5
 3680 056c 03       		.byte	0x3
 3681 056d 3C000000 		.4byte	rightStatusFlag
 3682 0571 10       		.uleb128 0x10
 3683 0572 B7050000 		.4byte	.LASF99
 3684 0576 01       		.byte	0x1
 3685 0577 3F       		.byte	0x3f
 3686 0578 E0000000 		.4byte	0xe0
 3687 057c 05       		.uleb128 0x5
 3688 057d 03       		.byte	0x3
 3689 057e 3D000000 		.4byte	spinCourseCorrectionStarted
 3690 0582 10       		.uleb128 0x10
 3691 0583 02030000 		.4byte	.LASF100
 3692 0587 01       		.byte	0x1
 3693 0588 40       		.byte	0x40
 3694 0589 E0000000 		.4byte	0xe0
 3695 058d 05       		.uleb128 0x5
 3696 058e 03       		.byte	0x3
 3697 058f 3E000000 		.4byte	currentIgnoreL
 3698 0593 10       		.uleb128 0x10
 3699 0594 25030000 		.4byte	.LASF101
 3700 0598 01       		.byte	0x1
 3701 0599 41       		.byte	0x41
 3702 059a E0000000 		.4byte	0xe0
 3703 059e 05       		.uleb128 0x5
 3704 059f 03       		.byte	0x3
 3705 05a0 3F000000 		.4byte	currentIgnoreR
 3706 05a4 10       		.uleb128 0x10
 3707 05a5 9E080000 		.4byte	.LASF102
 3708 05a9 01       		.byte	0x1
 3709 05aa 45       		.byte	0x45
 3710 05ab E0000000 		.4byte	0xe0
 3711 05af 05       		.uleb128 0x5
 3712 05b0 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 81


 3713 05b1 40000000 		.4byte	totalLineCount
 3714 05b5 10       		.uleb128 0x10
 3715 05b6 66000000 		.4byte	.LASF103
 3716 05ba 01       		.byte	0x1
 3717 05bb 46       		.byte	0x46
 3718 05bc E0000000 		.4byte	0xe0
 3719 05c0 05       		.uleb128 0x5
 3720 05c1 03       		.byte	0x3
 3721 05c2 41000000 		.4byte	lineCount
 3722 05c6 10       		.uleb128 0x10
 3723 05c7 E9010000 		.4byte	.LASF104
 3724 05cb 01       		.byte	0x1
 3725 05cc 47       		.byte	0x47
 3726 05cd E0000000 		.4byte	0xe0
 3727 05d1 05       		.uleb128 0x5
 3728 05d2 03       		.byte	0x3
 3729 05d3 42000000 		.4byte	onLineFlag
 3730 05d7 10       		.uleb128 0x10
 3731 05d8 77040000 		.4byte	.LASF105
 3732 05dc 01       		.byte	0x1
 3733 05dd 49       		.byte	0x49
 3734 05de E0000000 		.4byte	0xe0
 3735 05e2 05       		.uleb128 0x5
 3736 05e3 03       		.byte	0x3
 3737 05e4 43000000 		.4byte	tooEarlyFlag
 3738 05e8 10       		.uleb128 0x10
 3739 05e9 02040000 		.4byte	.LASF106
 3740 05ed 01       		.byte	0x1
 3741 05ee 4A       		.byte	0x4a
 3742 05ef E0000000 		.4byte	0xe0
 3743 05f3 05       		.uleb128 0x5
 3744 05f4 03       		.byte	0x3
 3745 05f5 44000000 		.4byte	tooLateFlag
 3746 05f9 10       		.uleb128 0x10
 3747 05fa 5E040000 		.4byte	.LASF107
 3748 05fe 01       		.byte	0x1
 3749 05ff 4C       		.byte	0x4c
 3750 0600 E0000000 		.4byte	0xe0
 3751 0604 05       		.uleb128 0x5
 3752 0605 03       		.byte	0x3
 3753 0606 45000000 		.4byte	dontOverwriteRightIgnore
 3754 060a 10       		.uleb128 0x10
 3755 060b 94030000 		.4byte	.LASF108
 3756 060f 01       		.byte	0x1
 3757 0610 4D       		.byte	0x4d
 3758 0611 E0000000 		.4byte	0xe0
 3759 0615 05       		.uleb128 0x5
 3760 0616 03       		.byte	0x3
 3761 0617 46000000 		.4byte	dontOverwriteLeftIgnore
 3762 061b 1B       		.uleb128 0x1b
 3763 061c 45030000 		.4byte	.LASF109
 3764 0620 01       		.byte	0x1
 3765 0621 4201     		.2byte	0x142
 3766 0623 E0000000 		.4byte	0xe0
 3767 0627 05       		.uleb128 0x5
 3768 0628 03       		.byte	0x3
 3769 0629 57000000 		.4byte	forwardAfterTurnLIgnore
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 82


 3770 062d 1B       		.uleb128 0x1b
 3771 062e 19090000 		.4byte	.LASF110
 3772 0632 01       		.byte	0x1
 3773 0633 4301     		.2byte	0x143
 3774 0635 E0000000 		.4byte	0xe0
 3775 0639 05       		.uleb128 0x5
 3776 063a 03       		.byte	0x3
 3777 063b 58000000 		.4byte	forwardAfterTurnRIgnore
 3778 063f 20       		.uleb128 0x20
 3779 0640 8D020000 		.4byte	.LASF111
 3780 0644 07       		.byte	0x7
 3781 0645 1207     		.2byte	0x712
 3782 0647 4B060000 		.4byte	0x64b
 3783 064b 06       		.uleb128 0x6
 3784 064c 8B000000 		.4byte	0x8b
 3785 0650 21       		.uleb128 0x21
 3786 0651 747300   		.ascii	"ts\000"
 3787 0654 05       		.byte	0x5
 3788 0655 10       		.byte	0x10
 3789 0656 96000000 		.4byte	0x96
 3790 065a 05       		.uleb128 0x5
 3791 065b 03       		.byte	0x3
 3792 065c 00000000 		.4byte	ts
 3793 0660 22       		.uleb128 0x22
 3794 0661 E9030000 		.4byte	.LASF112
 3795 0665 05       		.byte	0x5
 3796 0666 11       		.byte	0x11
 3797 0667 A2000000 		.4byte	0xa2
 3798 066b 05       		.uleb128 0x5
 3799 066c 03       		.byte	0x3
 3800 066d 00000000 		.4byte	ts_enc
 3801 0671 22       		.uleb128 0x22
 3802 0672 45060000 		.4byte	.LASF113
 3803 0676 05       		.byte	0x5
 3804 0677 12       		.byte	0x12
 3805 0678 A2000000 		.4byte	0xa2
 3806 067c 05       		.uleb128 0x5
 3807 067d 03       		.byte	0x3
 3808 067e 00000000 		.4byte	ts_update
 3809 0682 22       		.uleb128 0x22
 3810 0683 70000000 		.4byte	.LASF114
 3811 0687 05       		.byte	0x5
 3812 0688 13       		.byte	0x13
 3813 0689 A2000000 		.4byte	0xa2
 3814 068d 05       		.uleb128 0x5
 3815 068e 03       		.byte	0x3
 3816 068f 00000000 		.4byte	ts_speed
 3817 0693 22       		.uleb128 0x22
 3818 0694 ED040000 		.4byte	.LASF115
 3819 0698 05       		.byte	0x5
 3820 0699 14       		.byte	0x14
 3821 069a A2000000 		.4byte	0xa2
 3822 069e 05       		.uleb128 0x5
 3823 069f 03       		.byte	0x3
 3824 06a0 00000000 		.4byte	ts_display
 3825 06a4 22       		.uleb128 0x22
 3826 06a5 25020000 		.4byte	.LASF116
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 83


 3827 06a9 05       		.byte	0x5
 3828 06aa 16       		.byte	0x16
 3829 06ab 96000000 		.4byte	0x96
 3830 06af 05       		.uleb128 0x5
 3831 06b0 03       		.byte	0x3
 3832 06b1 00000000 		.4byte	flag_ts_enc
 3833 06b5 22       		.uleb128 0x22
 3834 06b6 D0070000 		.4byte	.LASF117
 3835 06ba 05       		.byte	0x5
 3836 06bb 17       		.byte	0x17
 3837 06bc 96000000 		.4byte	0x96
 3838 06c0 05       		.uleb128 0x5
 3839 06c1 03       		.byte	0x3
 3840 06c2 00000000 		.4byte	flag_ts_update
 3841 06c6 22       		.uleb128 0x22
 3842 06c7 31050000 		.4byte	.LASF118
 3843 06cb 05       		.byte	0x5
 3844 06cc 18       		.byte	0x18
 3845 06cd 96000000 		.4byte	0x96
 3846 06d1 05       		.uleb128 0x5
 3847 06d2 03       		.byte	0x3
 3848 06d3 00000000 		.4byte	flag_ts_speed
 3849 06d7 22       		.uleb128 0x22
 3850 06d8 59070000 		.4byte	.LASF119
 3851 06dc 05       		.byte	0x5
 3852 06dd 19       		.byte	0x19
 3853 06de 96000000 		.4byte	0x96
 3854 06e2 05       		.uleb128 0x5
 3855 06e3 03       		.byte	0x3
 3856 06e4 00000000 		.4byte	flag_ts_display
 3857 06e8 22       		.uleb128 0x22
 3858 06e9 5D030000 		.4byte	.LASF120
 3859 06ed 05       		.byte	0x5
 3860 06ee 1B       		.byte	0x1b
 3861 06ef 96000000 		.4byte	0x96
 3862 06f3 05       		.uleb128 0x5
 3863 06f4 03       		.byte	0x3
 3864 06f5 00000000 		.4byte	flag_rx
 3865 06f9 22       		.uleb128 0x22
 3866 06fa 25050000 		.4byte	.LASF121
 3867 06fe 05       		.byte	0x5
 3868 06ff 1C       		.byte	0x1c
 3869 0700 96000000 		.4byte	0x96
 3870 0704 05       		.uleb128 0x5
 3871 0705 03       		.byte	0x3
 3872 0706 00000000 		.4byte	flag_packet
 3873 070a 22       		.uleb128 0x22
 3874 070b 3D020000 		.4byte	.LASF122
 3875 070f 05       		.byte	0x5
 3876 0710 1D       		.byte	0x1d
 3877 0711 96000000 		.4byte	0x96
 3878 0715 05       		.uleb128 0x5
 3879 0716 03       		.byte	0x3
 3880 0717 00000000 		.4byte	flag_KB_string
 3881 071b 22       		.uleb128 0x22
 3882 071c 11030000 		.4byte	.LASF123
 3883 0720 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 84


 3884 0721 1F       		.byte	0x1f
 3885 0722 96000000 		.4byte	0x96
 3886 0726 05       		.uleb128 0x5
 3887 0727 03       		.byte	0x3
 3888 0728 00000000 		.4byte	dataready_flag
 3889 072c 22       		.uleb128 0x22
 3890 072d D3050000 		.4byte	.LASF124
 3891 0731 05       		.byte	0x5
 3892 0732 21       		.byte	0x21
 3893 0733 96000000 		.4byte	0x96
 3894 0737 05       		.uleb128 0x5
 3895 0738 03       		.byte	0x3
 3896 0739 00000000 		.4byte	flag_rf_transmission_active
 3897 073d 07       		.uleb128 0x7
 3898 073e 84000000 		.4byte	0x84
 3899 0742 4D070000 		.4byte	0x74d
 3900 0746 08       		.uleb128 0x8
 3901 0747 7D000000 		.4byte	0x7d
 3902 074b 3F       		.byte	0x3f
 3903 074c 00       		.byte	0
 3904 074d 22       		.uleb128 0x22
 3905 074e DF070000 		.4byte	.LASF125
 3906 0752 05       		.byte	0x5
 3907 0753 24       		.byte	0x24
 3908 0754 3D070000 		.4byte	0x73d
 3909 0758 05       		.uleb128 0x5
 3910 0759 03       		.byte	0x3
 3911 075a 00000000 		.4byte	displaystring
 3912 075e 22       		.uleb128 0x22
 3913 075f 82030000 		.4byte	.LASF126
 3914 0763 05       		.byte	0x5
 3915 0764 25       		.byte	0x25
 3916 0765 3D070000 		.4byte	0x73d
 3917 0769 05       		.uleb128 0x5
 3918 076a 03       		.byte	0x3
 3919 076b 00000000 		.4byte	line
 3920 076f 22       		.uleb128 0x22
 3921 0770 9F010000 		.4byte	.LASF127
 3922 0774 05       		.byte	0x5
 3923 0775 25       		.byte	0x25
 3924 0776 3D070000 		.4byte	0x73d
 3925 077a 05       		.uleb128 0x5
 3926 077b 03       		.byte	0x3
 3927 077c 00000000 		.4byte	entry
 3928 0780 07       		.uleb128 0x7
 3929 0781 96000000 		.4byte	0x96
 3930 0785 90070000 		.4byte	0x790
 3931 0789 08       		.uleb128 0x8
 3932 078a 7D000000 		.4byte	0x7d
 3933 078e 3F       		.byte	0x3f
 3934 078f 00       		.byte	0
 3935 0790 22       		.uleb128 0x22
 3936 0791 8D050000 		.4byte	.LASF128
 3937 0795 05       		.byte	0x5
 3938 0796 26       		.byte	0x26
 3939 0797 80070000 		.4byte	0x780
 3940 079b 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 85


 3941 079c 03       		.byte	0x3
 3942 079d 00000000 		.4byte	usbBuffer
 3943 07a1 22       		.uleb128 0x22
 3944 07a2 73050000 		.4byte	.LASF129
 3945 07a6 05       		.byte	0x5
 3946 07a7 3C       		.byte	0x3c
 3947 07a8 FA000000 		.4byte	0xfa
 3948 07ac 05       		.uleb128 0x5
 3949 07ad 03       		.byte	0x3
 3950 07ae 00000000 		.4byte	system_state
 3951 07b2 07       		.uleb128 0x7
 3952 07b3 68000000 		.4byte	0x68
 3953 07b7 C8070000 		.4byte	0x7c8
 3954 07bb 08       		.uleb128 0x8
 3955 07bc 7D000000 		.4byte	0x7d
 3956 07c0 0E       		.byte	0xe
 3957 07c1 08       		.uleb128 0x8
 3958 07c2 7D000000 		.4byte	0x7d
 3959 07c6 12       		.byte	0x12
 3960 07c7 00       		.byte	0
 3961 07c8 23       		.uleb128 0x23
 3962 07c9 6D617000 		.ascii	"map\000"
 3963 07cd 08       		.byte	0x8
 3964 07ce 04       		.byte	0x4
 3965 07cf B2070000 		.4byte	0x7b2
 3966 07d3 07       		.uleb128 0x7
 3967 07d4 68000000 		.4byte	0x68
 3968 07d8 E9070000 		.4byte	0x7e9
 3969 07dc 08       		.uleb128 0x8
 3970 07dd 7D000000 		.4byte	0x7d
 3971 07e1 05       		.byte	0x5
 3972 07e2 08       		.uleb128 0x8
 3973 07e3 7D000000 		.4byte	0x7d
 3974 07e7 01       		.byte	0x1
 3975 07e8 00       		.byte	0
 3976 07e9 24       		.uleb128 0x24
 3977 07ea BA070000 		.4byte	.LASF130
 3978 07ee 08       		.byte	0x8
 3979 07ef 05       		.byte	0x5
 3980 07f0 D3070000 		.4byte	0x7d3
 3981 07f4 22       		.uleb128 0x22
 3982 07f5 10080000 		.4byte	.LASF131
 3983 07f9 01       		.byte	0x1
 3984 07fa 19       		.byte	0x19
 3985 07fb 84020000 		.4byte	0x284
 3986 07ff 05       		.uleb128 0x5
 3987 0800 03       		.byte	0x3
 3988 0801 00000000 		.4byte	currentDirection
 3989 0805 22       		.uleb128 0x22
 3990 0806 54000000 		.4byte	.LASF132
 3991 080a 01       		.byte	0x1
 3992 080b 19       		.byte	0x19
 3993 080c 84020000 		.4byte	0x284
 3994 0810 05       		.uleb128 0x5
 3995 0811 03       		.byte	0x3
 3996 0812 00000000 		.4byte	previousDirection
 3997 0816 22       		.uleb128 0x22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 86


 3998 0817 F8070000 		.4byte	.LASF133
 3999 081b 01       		.byte	0x1
 4000 081c 1B       		.byte	0x1b
 4001 081d D3010000 		.4byte	0x1d3
 4002 0821 05       		.uleb128 0x5
 4003 0822 03       		.byte	0x3
 4004 0823 00000000 		.4byte	currentRobotOrientation
 4005 0827 22       		.uleb128 0x22
 4006 0828 AE060000 		.4byte	.LASF134
 4007 082c 01       		.byte	0x1
 4008 082d 1B       		.byte	0x1b
 4009 082e D3010000 		.4byte	0x1d3
 4010 0832 05       		.uleb128 0x5
 4011 0833 03       		.byte	0x3
 4012 0834 00000000 		.4byte	previousOrientation
 4013 0838 22       		.uleb128 0x22
 4014 0839 8B080000 		.4byte	.LASF135
 4015 083d 01       		.byte	0x1
 4016 083e 1C       		.byte	0x1c
 4017 083f 79020000 		.4byte	0x279
 4018 0843 05       		.uleb128 0x5
 4019 0844 03       		.byte	0x3
 4020 0845 00000000 		.4byte	currentInstruction
 4021 0849 22       		.uleb128 0x22
 4022 084a 9A060000 		.4byte	.LASF136
 4023 084e 01       		.byte	0x1
 4024 084f 1D       		.byte	0x1d
 4025 0850 79020000 		.4byte	0x279
 4026 0854 05       		.uleb128 0x5
 4027 0855 03       		.byte	0x3
 4028 0856 00000000 		.4byte	previousInstruction
 4029 085a 22       		.uleb128 0x22
 4030 085b 3B070000 		.4byte	.LASF137
 4031 085f 01       		.byte	0x1
 4032 0860 1E       		.byte	0x1e
 4033 0861 68000000 		.4byte	0x68
 4034 0865 05       		.uleb128 0x5
 4035 0866 03       		.byte	0x3
 4036 0867 00000000 		.4byte	numSteps
 4037 086b 22       		.uleb128 0x22
 4038 086c 54080000 		.4byte	.LASF138
 4039 0870 01       		.byte	0x1
 4040 0871 20       		.byte	0x20
 4041 0872 7C080000 		.4byte	0x87c
 4042 0876 05       		.uleb128 0x5
 4043 0877 03       		.byte	0x3
 4044 0878 00000000 		.4byte	instructionList
 4045 087c 25       		.uleb128 0x25
 4046 087d 04       		.byte	0x4
 4047 087e 79020000 		.4byte	0x279
 4048 0882 21       		.uleb128 0x21
 4049 0883 733300   		.ascii	"s3\000"
 4050 0886 01       		.byte	0x1
 4051 0887 26       		.byte	0x26
 4052 0888 96000000 		.4byte	0x96
 4053 088c 05       		.uleb128 0x5
 4054 088d 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 87


 4055 088e 00000000 		.4byte	s3
 4056 0892 21       		.uleb128 0x21
 4057 0893 733400   		.ascii	"s4\000"
 4058 0896 01       		.byte	0x1
 4059 0897 26       		.byte	0x26
 4060 0898 96000000 		.4byte	0x96
 4061 089c 05       		.uleb128 0x5
 4062 089d 03       		.byte	0x3
 4063 089e 00000000 		.4byte	s4
 4064 08a2 21       		.uleb128 0x21
 4065 08a3 733500   		.ascii	"s5\000"
 4066 08a6 01       		.byte	0x1
 4067 08a7 26       		.byte	0x26
 4068 08a8 96000000 		.4byte	0x96
 4069 08ac 05       		.uleb128 0x5
 4070 08ad 03       		.byte	0x3
 4071 08ae 00000000 		.4byte	s5
 4072 08b2 21       		.uleb128 0x21
 4073 08b3 733600   		.ascii	"s6\000"
 4074 08b6 01       		.byte	0x1
 4075 08b7 26       		.byte	0x26
 4076 08b8 96000000 		.4byte	0x96
 4077 08bc 05       		.uleb128 0x5
 4078 08bd 03       		.byte	0x3
 4079 08be 00000000 		.4byte	s6
 4080 08c2 22       		.uleb128 0x22
 4081 08c3 0B060000 		.4byte	.LASF139
 4082 08c7 01       		.byte	0x1
 4083 08c8 2B       		.byte	0x2b
 4084 08c9 AE000000 		.4byte	0xae
 4085 08cd 05       		.uleb128 0x5
 4086 08ce 03       		.byte	0x3
 4087 08cf 00000000 		.4byte	totalMilliseconds
 4088 08d3 22       		.uleb128 0x22
 4089 08d4 00000000 		.4byte	.LASF140
 4090 08d8 01       		.byte	0x1
 4091 08d9 2C       		.byte	0x2c
 4092 08da D2000000 		.4byte	0xd2
 4093 08de 05       		.uleb128 0x5
 4094 08df 03       		.byte	0x3
 4095 08e0 00000000 		.4byte	totalDistance
 4096 08e4 07       		.uleb128 0x7
 4097 08e5 84000000 		.4byte	0x84
 4098 08e9 F4080000 		.4byte	0x8f4
 4099 08ed 08       		.uleb128 0x8
 4100 08ee 7D000000 		.4byte	0x7d
 4101 08f2 44       		.byte	0x44
 4102 08f3 00       		.byte	0
 4103 08f4 22       		.uleb128 0x22
 4104 08f5 C9070000 		.4byte	.LASF141
 4105 08f9 01       		.byte	0x1
 4106 08fa 2E       		.byte	0x2e
 4107 08fb E4080000 		.4byte	0x8e4
 4108 08ff 05       		.uleb128 0x5
 4109 0900 03       		.byte	0x3
 4110 0901 00000000 		.4byte	buffer
 4111 0905 22       		.uleb128 0x22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 88


 4112 0906 AC030000 		.4byte	.LASF142
 4113 090a 01       		.byte	0x1
 4114 090b 2F       		.byte	0x2f
 4115 090c 68000000 		.4byte	0x68
 4116 0910 05       		.uleb128 0x5
 4117 0911 03       		.byte	0x3
 4118 0912 00000000 		.4byte	quadDec2Count
 4119 0916 22       		.uleb128 0x22
 4120 0917 EC000000 		.4byte	.LASF143
 4121 091b 01       		.byte	0x1
 4122 091c 30       		.byte	0x30
 4123 091d 68000000 		.4byte	0x68
 4124 0921 05       		.uleb128 0x5
 4125 0922 03       		.byte	0x3
 4126 0923 00000000 		.4byte	timerInt
 4127 0927 22       		.uleb128 0x22
 4128 0928 3B060000 		.4byte	.LASF144
 4129 092c 01       		.byte	0x1
 4130 092d 31       		.byte	0x31
 4131 092e 68000000 		.4byte	0x68
 4132 0932 05       		.uleb128 0x5
 4133 0933 03       		.byte	0x3
 4134 0934 00000000 		.4byte	keepLedOn
 4135 0938 22       		.uleb128 0x22
 4136 0939 DE010000 		.4byte	.LASF145
 4137 093d 01       		.byte	0x1
 4138 093e 33       		.byte	0x33
 4139 093f AE000000 		.4byte	0xae
 4140 0943 05       		.uleb128 0x5
 4141 0944 03       		.byte	0x3
 4142 0945 00000000 		.4byte	stopBuffer
 4143 0949 22       		.uleb128 0x22
 4144 094a 54090000 		.4byte	.LASF146
 4145 094e 01       		.byte	0x1
 4146 094f 34       		.byte	0x34
 4147 0950 A2000000 		.4byte	0xa2
 4148 0954 05       		.uleb128 0x5
 4149 0955 03       		.byte	0x3
 4150 0956 00000000 		.4byte	forwardBuffer
 4151 095a 22       		.uleb128 0x22
 4152 095b 75080000 		.4byte	.LASF147
 4153 095f 01       		.byte	0x1
 4154 0960 4F       		.byte	0x4f
 4155 0961 EA000000 		.4byte	0xea
 4156 0965 05       		.uleb128 0x5
 4157 0966 03       		.byte	0x3
 4158 0967 00000000 		.4byte	junctionConfiguration
 4159 096b 22       		.uleb128 0x22
 4160 096c F8040000 		.4byte	.LASF148
 4161 0970 01       		.byte	0x1
 4162 0971 50       		.byte	0x50
 4163 0972 96000000 		.4byte	0x96
 4164 0976 05       		.uleb128 0x5
 4165 0977 03       		.byte	0x3
 4166 0978 00000000 		.4byte	currentFoodListIndex
 4167 097c 22       		.uleb128 0x22
 4168 097d 0E040000 		.4byte	.LASF149
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 89


 4169 0981 01       		.byte	0x1
 4170 0982 52       		.byte	0x52
 4171 0983 D2000000 		.4byte	0xd2
 4172 0987 05       		.uleb128 0x5
 4173 0988 03       		.byte	0x3
 4174 0989 00000000 		.4byte	blockSizeTotal
 4175 098d 22       		.uleb128 0x22
 4176 098e EF050000 		.4byte	.LASF150
 4177 0992 01       		.byte	0x1
 4178 0993 D1       		.byte	0xd1
 4179 0994 D2000000 		.4byte	0xd2
 4180 0998 05       		.uleb128 0x5
 4181 0999 03       		.byte	0x3
 4182 099a 00000000 		.4byte	xBlocksize
 4183 099e 22       		.uleb128 0x22
 4184 099f FA050000 		.4byte	.LASF151
 4185 09a3 01       		.byte	0x1
 4186 09a4 D2       		.byte	0xd2
 4187 09a5 D2000000 		.4byte	0xd2
 4188 09a9 05       		.uleb128 0x5
 4189 09aa 03       		.byte	0x3
 4190 09ab 00000000 		.4byte	yBlocksize
 4191 09af 22       		.uleb128 0x22
 4192 09b0 68050000 		.4byte	.LASF152
 4193 09b4 01       		.byte	0x1
 4194 09b5 D3       		.byte	0xd3
 4195 09b6 96000000 		.4byte	0x96
 4196 09ba 05       		.uleb128 0x5
 4197 09bb 03       		.byte	0x3
 4198 09bc 00000000 		.4byte	currentRow
 4199 09c0 22       		.uleb128 0x22
 4200 09c1 74020000 		.4byte	.LASF153
 4201 09c5 01       		.byte	0x1
 4202 09c6 D4       		.byte	0xd4
 4203 09c7 96000000 		.4byte	0x96
 4204 09cb 05       		.uleb128 0x5
 4205 09cc 03       		.byte	0x3
 4206 09cd 00000000 		.4byte	currentCol
 4207 09d1 22       		.uleb128 0x22
 4208 09d2 43090000 		.4byte	.LASF154
 4209 09d6 01       		.byte	0x1
 4210 09d7 D6       		.byte	0xd6
 4211 09d8 96000000 		.4byte	0x96
 4212 09dc 05       		.uleb128 0x5
 4213 09dd 03       		.byte	0x3
 4214 09de 00000000 		.4byte	stoppedAfterTurn
 4215 09e2 22       		.uleb128 0x22
 4216 09e3 C2060000 		.4byte	.LASF155
 4217 09e7 01       		.byte	0x1
 4218 09e8 D7       		.byte	0xd7
 4219 09e9 96000000 		.4byte	0x96
 4220 09ed 05       		.uleb128 0x5
 4221 09ee 03       		.byte	0x3
 4222 09ef 00000000 		.4byte	ignoreSensor
 4223 09f3 22       		.uleb128 0x22
 4224 09f4 25070000 		.4byte	.LASF156
 4225 09f8 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 90


 4226 09f9 FF       		.byte	0xff
 4227 09fa 84020000 		.4byte	0x284
 4228 09fe 05       		.uleb128 0x5
 4229 09ff 03       		.byte	0x3
 4230 0a00 00000000 		.4byte	lastDirectionAfter180
 4231 0a04 26       		.uleb128 0x26
 4232 0a05 12020000 		.4byte	.LASF157
 4233 0a09 01       		.byte	0x1
 4234 0a0a 4101     		.2byte	0x141
 4235 0a0c 96000000 		.4byte	0x96
 4236 0a10 05       		.uleb128 0x5
 4237 0a11 03       		.byte	0x3
 4238 0a12 00000000 		.4byte	firstTurnIteration
 4239 0a16 00       		.byte	0
 4240              		.section	.debug_abbrev,"",%progbits
 4241              	.Ldebug_abbrev0:
 4242 0000 01       		.uleb128 0x1
 4243 0001 11       		.uleb128 0x11
 4244 0002 01       		.byte	0x1
 4245 0003 25       		.uleb128 0x25
 4246 0004 0E       		.uleb128 0xe
 4247 0005 13       		.uleb128 0x13
 4248 0006 0B       		.uleb128 0xb
 4249 0007 03       		.uleb128 0x3
 4250 0008 0E       		.uleb128 0xe
 4251 0009 1B       		.uleb128 0x1b
 4252 000a 0E       		.uleb128 0xe
 4253 000b 55       		.uleb128 0x55
 4254 000c 17       		.uleb128 0x17
 4255 000d 11       		.uleb128 0x11
 4256 000e 01       		.uleb128 0x1
 4257 000f 10       		.uleb128 0x10
 4258 0010 17       		.uleb128 0x17
 4259 0011 00       		.byte	0
 4260 0012 00       		.byte	0
 4261 0013 02       		.uleb128 0x2
 4262 0014 24       		.uleb128 0x24
 4263 0015 00       		.byte	0
 4264 0016 0B       		.uleb128 0xb
 4265 0017 0B       		.uleb128 0xb
 4266 0018 3E       		.uleb128 0x3e
 4267 0019 0B       		.uleb128 0xb
 4268 001a 03       		.uleb128 0x3
 4269 001b 0E       		.uleb128 0xe
 4270 001c 00       		.byte	0
 4271 001d 00       		.byte	0
 4272 001e 03       		.uleb128 0x3
 4273 001f 16       		.uleb128 0x16
 4274 0020 00       		.byte	0
 4275 0021 03       		.uleb128 0x3
 4276 0022 0E       		.uleb128 0xe
 4277 0023 3A       		.uleb128 0x3a
 4278 0024 0B       		.uleb128 0xb
 4279 0025 3B       		.uleb128 0x3b
 4280 0026 0B       		.uleb128 0xb
 4281 0027 49       		.uleb128 0x49
 4282 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 91


 4283 0029 00       		.byte	0
 4284 002a 00       		.byte	0
 4285 002b 04       		.uleb128 0x4
 4286 002c 24       		.uleb128 0x24
 4287 002d 00       		.byte	0
 4288 002e 0B       		.uleb128 0xb
 4289 002f 0B       		.uleb128 0xb
 4290 0030 3E       		.uleb128 0x3e
 4291 0031 0B       		.uleb128 0xb
 4292 0032 03       		.uleb128 0x3
 4293 0033 08       		.uleb128 0x8
 4294 0034 00       		.byte	0
 4295 0035 00       		.byte	0
 4296 0036 05       		.uleb128 0x5
 4297 0037 16       		.uleb128 0x16
 4298 0038 00       		.byte	0
 4299 0039 03       		.uleb128 0x3
 4300 003a 0E       		.uleb128 0xe
 4301 003b 3A       		.uleb128 0x3a
 4302 003c 0B       		.uleb128 0xb
 4303 003d 3B       		.uleb128 0x3b
 4304 003e 05       		.uleb128 0x5
 4305 003f 49       		.uleb128 0x49
 4306 0040 13       		.uleb128 0x13
 4307 0041 00       		.byte	0
 4308 0042 00       		.byte	0
 4309 0043 06       		.uleb128 0x6
 4310 0044 35       		.uleb128 0x35
 4311 0045 00       		.byte	0
 4312 0046 49       		.uleb128 0x49
 4313 0047 13       		.uleb128 0x13
 4314 0048 00       		.byte	0
 4315 0049 00       		.byte	0
 4316 004a 07       		.uleb128 0x7
 4317 004b 01       		.uleb128 0x1
 4318 004c 01       		.byte	0x1
 4319 004d 49       		.uleb128 0x49
 4320 004e 13       		.uleb128 0x13
 4321 004f 01       		.uleb128 0x1
 4322 0050 13       		.uleb128 0x13
 4323 0051 00       		.byte	0
 4324 0052 00       		.byte	0
 4325 0053 08       		.uleb128 0x8
 4326 0054 21       		.uleb128 0x21
 4327 0055 00       		.byte	0
 4328 0056 49       		.uleb128 0x49
 4329 0057 13       		.uleb128 0x13
 4330 0058 2F       		.uleb128 0x2f
 4331 0059 0B       		.uleb128 0xb
 4332 005a 00       		.byte	0
 4333 005b 00       		.byte	0
 4334 005c 09       		.uleb128 0x9
 4335 005d 13       		.uleb128 0x13
 4336 005e 01       		.byte	0x1
 4337 005f 03       		.uleb128 0x3
 4338 0060 0E       		.uleb128 0xe
 4339 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 92


 4340 0062 0B       		.uleb128 0xb
 4341 0063 3A       		.uleb128 0x3a
 4342 0064 0B       		.uleb128 0xb
 4343 0065 3B       		.uleb128 0x3b
 4344 0066 0B       		.uleb128 0xb
 4345 0067 01       		.uleb128 0x1
 4346 0068 13       		.uleb128 0x13
 4347 0069 00       		.byte	0
 4348 006a 00       		.byte	0
 4349 006b 0A       		.uleb128 0xa
 4350 006c 0D       		.uleb128 0xd
 4351 006d 00       		.byte	0
 4352 006e 03       		.uleb128 0x3
 4353 006f 0E       		.uleb128 0xe
 4354 0070 3A       		.uleb128 0x3a
 4355 0071 0B       		.uleb128 0xb
 4356 0072 3B       		.uleb128 0x3b
 4357 0073 0B       		.uleb128 0xb
 4358 0074 49       		.uleb128 0x49
 4359 0075 13       		.uleb128 0x13
 4360 0076 38       		.uleb128 0x38
 4361 0077 0B       		.uleb128 0xb
 4362 0078 00       		.byte	0
 4363 0079 00       		.byte	0
 4364 007a 0B       		.uleb128 0xb
 4365 007b 04       		.uleb128 0x4
 4366 007c 01       		.byte	0x1
 4367 007d 03       		.uleb128 0x3
 4368 007e 0E       		.uleb128 0xe
 4369 007f 0B       		.uleb128 0xb
 4370 0080 0B       		.uleb128 0xb
 4371 0081 49       		.uleb128 0x49
 4372 0082 13       		.uleb128 0x13
 4373 0083 3A       		.uleb128 0x3a
 4374 0084 0B       		.uleb128 0xb
 4375 0085 3B       		.uleb128 0x3b
 4376 0086 0B       		.uleb128 0xb
 4377 0087 01       		.uleb128 0x1
 4378 0088 13       		.uleb128 0x13
 4379 0089 00       		.byte	0
 4380 008a 00       		.byte	0
 4381 008b 0C       		.uleb128 0xc
 4382 008c 28       		.uleb128 0x28
 4383 008d 00       		.byte	0
 4384 008e 03       		.uleb128 0x3
 4385 008f 08       		.uleb128 0x8
 4386 0090 1C       		.uleb128 0x1c
 4387 0091 0B       		.uleb128 0xb
 4388 0092 00       		.byte	0
 4389 0093 00       		.byte	0
 4390 0094 0D       		.uleb128 0xd
 4391 0095 28       		.uleb128 0x28
 4392 0096 00       		.byte	0
 4393 0097 03       		.uleb128 0x3
 4394 0098 0E       		.uleb128 0xe
 4395 0099 1C       		.uleb128 0x1c
 4396 009a 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 93


 4397 009b 00       		.byte	0
 4398 009c 00       		.byte	0
 4399 009d 0E       		.uleb128 0xe
 4400 009e 2E       		.uleb128 0x2e
 4401 009f 01       		.byte	0x1
 4402 00a0 3F       		.uleb128 0x3f
 4403 00a1 19       		.uleb128 0x19
 4404 00a2 03       		.uleb128 0x3
 4405 00a3 0E       		.uleb128 0xe
 4406 00a4 3A       		.uleb128 0x3a
 4407 00a5 0B       		.uleb128 0xb
 4408 00a6 3B       		.uleb128 0x3b
 4409 00a7 0B       		.uleb128 0xb
 4410 00a8 27       		.uleb128 0x27
 4411 00a9 19       		.uleb128 0x19
 4412 00aa 11       		.uleb128 0x11
 4413 00ab 01       		.uleb128 0x1
 4414 00ac 12       		.uleb128 0x12
 4415 00ad 06       		.uleb128 0x6
 4416 00ae 40       		.uleb128 0x40
 4417 00af 18       		.uleb128 0x18
 4418 00b0 9642     		.uleb128 0x2116
 4419 00b2 19       		.uleb128 0x19
 4420 00b3 01       		.uleb128 0x1
 4421 00b4 13       		.uleb128 0x13
 4422 00b5 00       		.byte	0
 4423 00b6 00       		.byte	0
 4424 00b7 0F       		.uleb128 0xf
 4425 00b8 0B       		.uleb128 0xb
 4426 00b9 01       		.byte	0x1
 4427 00ba 11       		.uleb128 0x11
 4428 00bb 01       		.uleb128 0x1
 4429 00bc 12       		.uleb128 0x12
 4430 00bd 06       		.uleb128 0x6
 4431 00be 00       		.byte	0
 4432 00bf 00       		.byte	0
 4433 00c0 10       		.uleb128 0x10
 4434 00c1 34       		.uleb128 0x34
 4435 00c2 00       		.byte	0
 4436 00c3 03       		.uleb128 0x3
 4437 00c4 0E       		.uleb128 0xe
 4438 00c5 3A       		.uleb128 0x3a
 4439 00c6 0B       		.uleb128 0xb
 4440 00c7 3B       		.uleb128 0x3b
 4441 00c8 0B       		.uleb128 0xb
 4442 00c9 49       		.uleb128 0x49
 4443 00ca 13       		.uleb128 0x13
 4444 00cb 02       		.uleb128 0x2
 4445 00cc 18       		.uleb128 0x18
 4446 00cd 00       		.byte	0
 4447 00ce 00       		.byte	0
 4448 00cf 11       		.uleb128 0x11
 4449 00d0 2E       		.uleb128 0x2e
 4450 00d1 00       		.byte	0
 4451 00d2 3F       		.uleb128 0x3f
 4452 00d3 19       		.uleb128 0x19
 4453 00d4 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 94


 4454 00d5 0E       		.uleb128 0xe
 4455 00d6 3A       		.uleb128 0x3a
 4456 00d7 0B       		.uleb128 0xb
 4457 00d8 3B       		.uleb128 0x3b
 4458 00d9 0B       		.uleb128 0xb
 4459 00da 27       		.uleb128 0x27
 4460 00db 19       		.uleb128 0x19
 4461 00dc 11       		.uleb128 0x11
 4462 00dd 01       		.uleb128 0x1
 4463 00de 12       		.uleb128 0x12
 4464 00df 06       		.uleb128 0x6
 4465 00e0 40       		.uleb128 0x40
 4466 00e1 18       		.uleb128 0x18
 4467 00e2 9742     		.uleb128 0x2117
 4468 00e4 19       		.uleb128 0x19
 4469 00e5 00       		.byte	0
 4470 00e6 00       		.byte	0
 4471 00e7 12       		.uleb128 0x12
 4472 00e8 2E       		.uleb128 0x2e
 4473 00e9 00       		.byte	0
 4474 00ea 3F       		.uleb128 0x3f
 4475 00eb 19       		.uleb128 0x19
 4476 00ec 03       		.uleb128 0x3
 4477 00ed 0E       		.uleb128 0xe
 4478 00ee 3A       		.uleb128 0x3a
 4479 00ef 0B       		.uleb128 0xb
 4480 00f0 3B       		.uleb128 0x3b
 4481 00f1 0B       		.uleb128 0xb
 4482 00f2 27       		.uleb128 0x27
 4483 00f3 19       		.uleb128 0x19
 4484 00f4 11       		.uleb128 0x11
 4485 00f5 01       		.uleb128 0x1
 4486 00f6 12       		.uleb128 0x12
 4487 00f7 06       		.uleb128 0x6
 4488 00f8 40       		.uleb128 0x40
 4489 00f9 18       		.uleb128 0x18
 4490 00fa 9642     		.uleb128 0x2116
 4491 00fc 19       		.uleb128 0x19
 4492 00fd 00       		.byte	0
 4493 00fe 00       		.byte	0
 4494 00ff 13       		.uleb128 0x13
 4495 0100 2E       		.uleb128 0x2e
 4496 0101 00       		.byte	0
 4497 0102 3F       		.uleb128 0x3f
 4498 0103 19       		.uleb128 0x19
 4499 0104 03       		.uleb128 0x3
 4500 0105 0E       		.uleb128 0xe
 4501 0106 3A       		.uleb128 0x3a
 4502 0107 0B       		.uleb128 0xb
 4503 0108 3B       		.uleb128 0x3b
 4504 0109 0B       		.uleb128 0xb
 4505 010a 49       		.uleb128 0x49
 4506 010b 13       		.uleb128 0x13
 4507 010c 11       		.uleb128 0x11
 4508 010d 01       		.uleb128 0x1
 4509 010e 12       		.uleb128 0x12
 4510 010f 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 95


 4511 0110 40       		.uleb128 0x40
 4512 0111 18       		.uleb128 0x18
 4513 0112 9642     		.uleb128 0x2116
 4514 0114 19       		.uleb128 0x19
 4515 0115 00       		.byte	0
 4516 0116 00       		.byte	0
 4517 0117 14       		.uleb128 0x14
 4518 0118 2E       		.uleb128 0x2e
 4519 0119 01       		.byte	0x1
 4520 011a 3F       		.uleb128 0x3f
 4521 011b 19       		.uleb128 0x19
 4522 011c 03       		.uleb128 0x3
 4523 011d 0E       		.uleb128 0xe
 4524 011e 3A       		.uleb128 0x3a
 4525 011f 0B       		.uleb128 0xb
 4526 0120 3B       		.uleb128 0x3b
 4527 0121 0B       		.uleb128 0xb
 4528 0122 27       		.uleb128 0x27
 4529 0123 19       		.uleb128 0x19
 4530 0124 49       		.uleb128 0x49
 4531 0125 13       		.uleb128 0x13
 4532 0126 11       		.uleb128 0x11
 4533 0127 01       		.uleb128 0x1
 4534 0128 12       		.uleb128 0x12
 4535 0129 06       		.uleb128 0x6
 4536 012a 40       		.uleb128 0x40
 4537 012b 18       		.uleb128 0x18
 4538 012c 9642     		.uleb128 0x2116
 4539 012e 19       		.uleb128 0x19
 4540 012f 01       		.uleb128 0x1
 4541 0130 13       		.uleb128 0x13
 4542 0131 00       		.byte	0
 4543 0132 00       		.byte	0
 4544 0133 15       		.uleb128 0x15
 4545 0134 05       		.uleb128 0x5
 4546 0135 00       		.byte	0
 4547 0136 03       		.uleb128 0x3
 4548 0137 0E       		.uleb128 0xe
 4549 0138 3A       		.uleb128 0x3a
 4550 0139 0B       		.uleb128 0xb
 4551 013a 3B       		.uleb128 0x3b
 4552 013b 0B       		.uleb128 0xb
 4553 013c 49       		.uleb128 0x49
 4554 013d 13       		.uleb128 0x13
 4555 013e 02       		.uleb128 0x2
 4556 013f 18       		.uleb128 0x18
 4557 0140 00       		.byte	0
 4558 0141 00       		.byte	0
 4559 0142 16       		.uleb128 0x16
 4560 0143 34       		.uleb128 0x34
 4561 0144 00       		.byte	0
 4562 0145 03       		.uleb128 0x3
 4563 0146 08       		.uleb128 0x8
 4564 0147 3A       		.uleb128 0x3a
 4565 0148 0B       		.uleb128 0xb
 4566 0149 3B       		.uleb128 0x3b
 4567 014a 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 96


 4568 014b 49       		.uleb128 0x49
 4569 014c 13       		.uleb128 0x13
 4570 014d 02       		.uleb128 0x2
 4571 014e 18       		.uleb128 0x18
 4572 014f 00       		.byte	0
 4573 0150 00       		.byte	0
 4574 0151 17       		.uleb128 0x17
 4575 0152 2E       		.uleb128 0x2e
 4576 0153 00       		.byte	0
 4577 0154 3F       		.uleb128 0x3f
 4578 0155 19       		.uleb128 0x19
 4579 0156 03       		.uleb128 0x3
 4580 0157 0E       		.uleb128 0xe
 4581 0158 3A       		.uleb128 0x3a
 4582 0159 0B       		.uleb128 0xb
 4583 015a 3B       		.uleb128 0x3b
 4584 015b 0B       		.uleb128 0xb
 4585 015c 11       		.uleb128 0x11
 4586 015d 01       		.uleb128 0x1
 4587 015e 12       		.uleb128 0x12
 4588 015f 06       		.uleb128 0x6
 4589 0160 40       		.uleb128 0x40
 4590 0161 18       		.uleb128 0x18
 4591 0162 9742     		.uleb128 0x2117
 4592 0164 19       		.uleb128 0x19
 4593 0165 00       		.byte	0
 4594 0166 00       		.byte	0
 4595 0167 18       		.uleb128 0x18
 4596 0168 2E       		.uleb128 0x2e
 4597 0169 00       		.byte	0
 4598 016a 3F       		.uleb128 0x3f
 4599 016b 19       		.uleb128 0x19
 4600 016c 03       		.uleb128 0x3
 4601 016d 0E       		.uleb128 0xe
 4602 016e 3A       		.uleb128 0x3a
 4603 016f 0B       		.uleb128 0xb
 4604 0170 3B       		.uleb128 0x3b
 4605 0171 0B       		.uleb128 0xb
 4606 0172 49       		.uleb128 0x49
 4607 0173 13       		.uleb128 0x13
 4608 0174 11       		.uleb128 0x11
 4609 0175 01       		.uleb128 0x1
 4610 0176 12       		.uleb128 0x12
 4611 0177 06       		.uleb128 0x6
 4612 0178 40       		.uleb128 0x40
 4613 0179 18       		.uleb128 0x18
 4614 017a 9742     		.uleb128 0x2117
 4615 017c 19       		.uleb128 0x19
 4616 017d 00       		.byte	0
 4617 017e 00       		.byte	0
 4618 017f 19       		.uleb128 0x19
 4619 0180 2E       		.uleb128 0x2e
 4620 0181 00       		.byte	0
 4621 0182 3F       		.uleb128 0x3f
 4622 0183 19       		.uleb128 0x19
 4623 0184 03       		.uleb128 0x3
 4624 0185 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 97


 4625 0186 3A       		.uleb128 0x3a
 4626 0187 0B       		.uleb128 0xb
 4627 0188 3B       		.uleb128 0x3b
 4628 0189 05       		.uleb128 0x5
 4629 018a 49       		.uleb128 0x49
 4630 018b 13       		.uleb128 0x13
 4631 018c 11       		.uleb128 0x11
 4632 018d 01       		.uleb128 0x1
 4633 018e 12       		.uleb128 0x12
 4634 018f 06       		.uleb128 0x6
 4635 0190 40       		.uleb128 0x40
 4636 0191 18       		.uleb128 0x18
 4637 0192 9742     		.uleb128 0x2117
 4638 0194 19       		.uleb128 0x19
 4639 0195 00       		.byte	0
 4640 0196 00       		.byte	0
 4641 0197 1A       		.uleb128 0x1a
 4642 0198 2E       		.uleb128 0x2e
 4643 0199 01       		.byte	0x1
 4644 019a 3F       		.uleb128 0x3f
 4645 019b 19       		.uleb128 0x19
 4646 019c 03       		.uleb128 0x3
 4647 019d 0E       		.uleb128 0xe
 4648 019e 3A       		.uleb128 0x3a
 4649 019f 0B       		.uleb128 0xb
 4650 01a0 3B       		.uleb128 0x3b
 4651 01a1 05       		.uleb128 0x5
 4652 01a2 49       		.uleb128 0x49
 4653 01a3 13       		.uleb128 0x13
 4654 01a4 11       		.uleb128 0x11
 4655 01a5 01       		.uleb128 0x1
 4656 01a6 12       		.uleb128 0x12
 4657 01a7 06       		.uleb128 0x6
 4658 01a8 40       		.uleb128 0x40
 4659 01a9 18       		.uleb128 0x18
 4660 01aa 9642     		.uleb128 0x2116
 4661 01ac 19       		.uleb128 0x19
 4662 01ad 01       		.uleb128 0x1
 4663 01ae 13       		.uleb128 0x13
 4664 01af 00       		.byte	0
 4665 01b0 00       		.byte	0
 4666 01b1 1B       		.uleb128 0x1b
 4667 01b2 34       		.uleb128 0x34
 4668 01b3 00       		.byte	0
 4669 01b4 03       		.uleb128 0x3
 4670 01b5 0E       		.uleb128 0xe
 4671 01b6 3A       		.uleb128 0x3a
 4672 01b7 0B       		.uleb128 0xb
 4673 01b8 3B       		.uleb128 0x3b
 4674 01b9 05       		.uleb128 0x5
 4675 01ba 49       		.uleb128 0x49
 4676 01bb 13       		.uleb128 0x13
 4677 01bc 02       		.uleb128 0x2
 4678 01bd 18       		.uleb128 0x18
 4679 01be 00       		.byte	0
 4680 01bf 00       		.byte	0
 4681 01c0 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 98


 4682 01c1 2E       		.uleb128 0x2e
 4683 01c2 00       		.byte	0
 4684 01c3 3F       		.uleb128 0x3f
 4685 01c4 19       		.uleb128 0x19
 4686 01c5 03       		.uleb128 0x3
 4687 01c6 0E       		.uleb128 0xe
 4688 01c7 3A       		.uleb128 0x3a
 4689 01c8 0B       		.uleb128 0xb
 4690 01c9 3B       		.uleb128 0x3b
 4691 01ca 05       		.uleb128 0x5
 4692 01cb 11       		.uleb128 0x11
 4693 01cc 01       		.uleb128 0x1
 4694 01cd 12       		.uleb128 0x12
 4695 01ce 06       		.uleb128 0x6
 4696 01cf 40       		.uleb128 0x40
 4697 01d0 18       		.uleb128 0x18
 4698 01d1 9742     		.uleb128 0x2117
 4699 01d3 19       		.uleb128 0x19
 4700 01d4 00       		.byte	0
 4701 01d5 00       		.byte	0
 4702 01d6 1D       		.uleb128 0x1d
 4703 01d7 2E       		.uleb128 0x2e
 4704 01d8 01       		.byte	0x1
 4705 01d9 3F       		.uleb128 0x3f
 4706 01da 19       		.uleb128 0x19
 4707 01db 03       		.uleb128 0x3
 4708 01dc 0E       		.uleb128 0xe
 4709 01dd 3A       		.uleb128 0x3a
 4710 01de 0B       		.uleb128 0xb
 4711 01df 3B       		.uleb128 0x3b
 4712 01e0 05       		.uleb128 0x5
 4713 01e1 49       		.uleb128 0x49
 4714 01e2 13       		.uleb128 0x13
 4715 01e3 11       		.uleb128 0x11
 4716 01e4 01       		.uleb128 0x1
 4717 01e5 12       		.uleb128 0x12
 4718 01e6 06       		.uleb128 0x6
 4719 01e7 40       		.uleb128 0x40
 4720 01e8 18       		.uleb128 0x18
 4721 01e9 9742     		.uleb128 0x2117
 4722 01eb 19       		.uleb128 0x19
 4723 01ec 01       		.uleb128 0x1
 4724 01ed 13       		.uleb128 0x13
 4725 01ee 00       		.byte	0
 4726 01ef 00       		.byte	0
 4727 01f0 1E       		.uleb128 0x1e
 4728 01f1 2E       		.uleb128 0x2e
 4729 01f2 01       		.byte	0x1
 4730 01f3 3F       		.uleb128 0x3f
 4731 01f4 19       		.uleb128 0x19
 4732 01f5 03       		.uleb128 0x3
 4733 01f6 0E       		.uleb128 0xe
 4734 01f7 3A       		.uleb128 0x3a
 4735 01f8 0B       		.uleb128 0xb
 4736 01f9 3B       		.uleb128 0x3b
 4737 01fa 05       		.uleb128 0x5
 4738 01fb 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 99


 4739 01fc 01       		.uleb128 0x1
 4740 01fd 12       		.uleb128 0x12
 4741 01fe 06       		.uleb128 0x6
 4742 01ff 40       		.uleb128 0x40
 4743 0200 18       		.uleb128 0x18
 4744 0201 9642     		.uleb128 0x2116
 4745 0203 19       		.uleb128 0x19
 4746 0204 01       		.uleb128 0x1
 4747 0205 13       		.uleb128 0x13
 4748 0206 00       		.byte	0
 4749 0207 00       		.byte	0
 4750 0208 1F       		.uleb128 0x1f
 4751 0209 2E       		.uleb128 0x2e
 4752 020a 00       		.byte	0
 4753 020b 3F       		.uleb128 0x3f
 4754 020c 19       		.uleb128 0x19
 4755 020d 03       		.uleb128 0x3
 4756 020e 0E       		.uleb128 0xe
 4757 020f 3A       		.uleb128 0x3a
 4758 0210 0B       		.uleb128 0xb
 4759 0211 3B       		.uleb128 0x3b
 4760 0212 05       		.uleb128 0x5
 4761 0213 11       		.uleb128 0x11
 4762 0214 01       		.uleb128 0x1
 4763 0215 12       		.uleb128 0x12
 4764 0216 06       		.uleb128 0x6
 4765 0217 40       		.uleb128 0x40
 4766 0218 18       		.uleb128 0x18
 4767 0219 9642     		.uleb128 0x2116
 4768 021b 19       		.uleb128 0x19
 4769 021c 00       		.byte	0
 4770 021d 00       		.byte	0
 4771 021e 20       		.uleb128 0x20
 4772 021f 34       		.uleb128 0x34
 4773 0220 00       		.byte	0
 4774 0221 03       		.uleb128 0x3
 4775 0222 0E       		.uleb128 0xe
 4776 0223 3A       		.uleb128 0x3a
 4777 0224 0B       		.uleb128 0xb
 4778 0225 3B       		.uleb128 0x3b
 4779 0226 05       		.uleb128 0x5
 4780 0227 49       		.uleb128 0x49
 4781 0228 13       		.uleb128 0x13
 4782 0229 3F       		.uleb128 0x3f
 4783 022a 19       		.uleb128 0x19
 4784 022b 3C       		.uleb128 0x3c
 4785 022c 19       		.uleb128 0x19
 4786 022d 00       		.byte	0
 4787 022e 00       		.byte	0
 4788 022f 21       		.uleb128 0x21
 4789 0230 34       		.uleb128 0x34
 4790 0231 00       		.byte	0
 4791 0232 03       		.uleb128 0x3
 4792 0233 08       		.uleb128 0x8
 4793 0234 3A       		.uleb128 0x3a
 4794 0235 0B       		.uleb128 0xb
 4795 0236 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 100


 4796 0237 0B       		.uleb128 0xb
 4797 0238 49       		.uleb128 0x49
 4798 0239 13       		.uleb128 0x13
 4799 023a 3F       		.uleb128 0x3f
 4800 023b 19       		.uleb128 0x19
 4801 023c 02       		.uleb128 0x2
 4802 023d 18       		.uleb128 0x18
 4803 023e 00       		.byte	0
 4804 023f 00       		.byte	0
 4805 0240 22       		.uleb128 0x22
 4806 0241 34       		.uleb128 0x34
 4807 0242 00       		.byte	0
 4808 0243 03       		.uleb128 0x3
 4809 0244 0E       		.uleb128 0xe
 4810 0245 3A       		.uleb128 0x3a
 4811 0246 0B       		.uleb128 0xb
 4812 0247 3B       		.uleb128 0x3b
 4813 0248 0B       		.uleb128 0xb
 4814 0249 49       		.uleb128 0x49
 4815 024a 13       		.uleb128 0x13
 4816 024b 3F       		.uleb128 0x3f
 4817 024c 19       		.uleb128 0x19
 4818 024d 02       		.uleb128 0x2
 4819 024e 18       		.uleb128 0x18
 4820 024f 00       		.byte	0
 4821 0250 00       		.byte	0
 4822 0251 23       		.uleb128 0x23
 4823 0252 34       		.uleb128 0x34
 4824 0253 00       		.byte	0
 4825 0254 03       		.uleb128 0x3
 4826 0255 08       		.uleb128 0x8
 4827 0256 3A       		.uleb128 0x3a
 4828 0257 0B       		.uleb128 0xb
 4829 0258 3B       		.uleb128 0x3b
 4830 0259 0B       		.uleb128 0xb
 4831 025a 49       		.uleb128 0x49
 4832 025b 13       		.uleb128 0x13
 4833 025c 3F       		.uleb128 0x3f
 4834 025d 19       		.uleb128 0x19
 4835 025e 3C       		.uleb128 0x3c
 4836 025f 19       		.uleb128 0x19
 4837 0260 00       		.byte	0
 4838 0261 00       		.byte	0
 4839 0262 24       		.uleb128 0x24
 4840 0263 34       		.uleb128 0x34
 4841 0264 00       		.byte	0
 4842 0265 03       		.uleb128 0x3
 4843 0266 0E       		.uleb128 0xe
 4844 0267 3A       		.uleb128 0x3a
 4845 0268 0B       		.uleb128 0xb
 4846 0269 3B       		.uleb128 0x3b
 4847 026a 0B       		.uleb128 0xb
 4848 026b 49       		.uleb128 0x49
 4849 026c 13       		.uleb128 0x13
 4850 026d 3F       		.uleb128 0x3f
 4851 026e 19       		.uleb128 0x19
 4852 026f 3C       		.uleb128 0x3c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 101


 4853 0270 19       		.uleb128 0x19
 4854 0271 00       		.byte	0
 4855 0272 00       		.byte	0
 4856 0273 25       		.uleb128 0x25
 4857 0274 0F       		.uleb128 0xf
 4858 0275 00       		.byte	0
 4859 0276 0B       		.uleb128 0xb
 4860 0277 0B       		.uleb128 0xb
 4861 0278 49       		.uleb128 0x49
 4862 0279 13       		.uleb128 0x13
 4863 027a 00       		.byte	0
 4864 027b 00       		.byte	0
 4865 027c 26       		.uleb128 0x26
 4866 027d 34       		.uleb128 0x34
 4867 027e 00       		.byte	0
 4868 027f 03       		.uleb128 0x3
 4869 0280 0E       		.uleb128 0xe
 4870 0281 3A       		.uleb128 0x3a
 4871 0282 0B       		.uleb128 0xb
 4872 0283 3B       		.uleb128 0x3b
 4873 0284 05       		.uleb128 0x5
 4874 0285 49       		.uleb128 0x49
 4875 0286 13       		.uleb128 0x13
 4876 0287 3F       		.uleb128 0x3f
 4877 0288 19       		.uleb128 0x19
 4878 0289 02       		.uleb128 0x2
 4879 028a 18       		.uleb128 0x18
 4880 028b 00       		.byte	0
 4881 028c 00       		.byte	0
 4882 028d 00       		.byte	0
 4883              		.section	.debug_aranges,"",%progbits
 4884 0000 9C000000 		.4byte	0x9c
 4885 0004 0200     		.2byte	0x2
 4886 0006 00000000 		.4byte	.Ldebug_info0
 4887 000a 04       		.byte	0x4
 4888 000b 00       		.byte	0
 4889 000c 0000     		.2byte	0
 4890 000e 0000     		.2byte	0
 4891 0010 00000000 		.4byte	.LFB64
 4892 0014 EC000000 		.4byte	.LFE64-.LFB64
 4893 0018 00000000 		.4byte	.LFB65
 4894 001c 18000000 		.4byte	.LFE65-.LFB65
 4895 0020 00000000 		.4byte	.LFB66
 4896 0024 18000000 		.4byte	.LFE66-.LFB66
 4897 0028 00000000 		.4byte	.LFB67
 4898 002c 18000000 		.4byte	.LFE67-.LFB67
 4899 0030 00000000 		.4byte	.LFB68
 4900 0034 18000000 		.4byte	.LFE68-.LFB68
 4901 0038 00000000 		.4byte	.LFB69
 4902 003c 70000000 		.4byte	.LFE69-.LFB69
 4903 0040 00000000 		.4byte	.LFB70
 4904 0044 04010000 		.4byte	.LFE70-.LFB70
 4905 0048 00000000 		.4byte	.LFB71
 4906 004c 54000000 		.4byte	.LFE71-.LFB71
 4907 0050 00000000 		.4byte	.LFB72
 4908 0054 34000000 		.4byte	.LFE72-.LFB72
 4909 0058 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 102


 4910 005c 84000000 		.4byte	.LFE73-.LFB73
 4911 0060 00000000 		.4byte	.LFB74
 4912 0064 7C000000 		.4byte	.LFE74-.LFB74
 4913 0068 00000000 		.4byte	.LFB75
 4914 006c 84000000 		.4byte	.LFE75-.LFB75
 4915 0070 00000000 		.4byte	.LFB76
 4916 0074 C4070000 		.4byte	.LFE76-.LFB76
 4917 0078 00000000 		.4byte	.LFB77
 4918 007c 68000000 		.4byte	.LFE77-.LFB77
 4919 0080 00000000 		.4byte	.LFB78
 4920 0084 6C000000 		.4byte	.LFE78-.LFB78
 4921 0088 00000000 		.4byte	.LFB79
 4922 008c 3C010000 		.4byte	.LFE79-.LFB79
 4923 0090 00000000 		.4byte	.LFB80
 4924 0094 CC000000 		.4byte	.LFE80-.LFB80
 4925 0098 00000000 		.4byte	0
 4926 009c 00000000 		.4byte	0
 4927              		.section	.debug_ranges,"",%progbits
 4928              	.Ldebug_ranges0:
 4929 0000 00000000 		.4byte	.LFB64
 4930 0004 EC000000 		.4byte	.LFE64
 4931 0008 00000000 		.4byte	.LFB65
 4932 000c 18000000 		.4byte	.LFE65
 4933 0010 00000000 		.4byte	.LFB66
 4934 0014 18000000 		.4byte	.LFE66
 4935 0018 00000000 		.4byte	.LFB67
 4936 001c 18000000 		.4byte	.LFE67
 4937 0020 00000000 		.4byte	.LFB68
 4938 0024 18000000 		.4byte	.LFE68
 4939 0028 00000000 		.4byte	.LFB69
 4940 002c 70000000 		.4byte	.LFE69
 4941 0030 00000000 		.4byte	.LFB70
 4942 0034 04010000 		.4byte	.LFE70
 4943 0038 00000000 		.4byte	.LFB71
 4944 003c 54000000 		.4byte	.LFE71
 4945 0040 00000000 		.4byte	.LFB72
 4946 0044 34000000 		.4byte	.LFE72
 4947 0048 00000000 		.4byte	.LFB73
 4948 004c 84000000 		.4byte	.LFE73
 4949 0050 00000000 		.4byte	.LFB74
 4950 0054 7C000000 		.4byte	.LFE74
 4951 0058 00000000 		.4byte	.LFB75
 4952 005c 84000000 		.4byte	.LFE75
 4953 0060 00000000 		.4byte	.LFB76
 4954 0064 C4070000 		.4byte	.LFE76
 4955 0068 00000000 		.4byte	.LFB77
 4956 006c 68000000 		.4byte	.LFE77
 4957 0070 00000000 		.4byte	.LFB78
 4958 0074 6C000000 		.4byte	.LFE78
 4959 0078 00000000 		.4byte	.LFB79
 4960 007c 3C010000 		.4byte	.LFE79
 4961 0080 00000000 		.4byte	.LFB80
 4962 0084 CC000000 		.4byte	.LFE80
 4963 0088 00000000 		.4byte	0
 4964 008c 00000000 		.4byte	0
 4965              		.section	.debug_line,"",%progbits
 4966              	.Ldebug_line0:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 103


 4967 0000 FA040000 		.section	.debug_str,"MS",%progbits,1
 4967      02007001 
 4967      00000201 
 4967      FB0E0D00 
 4967      01010101 
 4968              	.LASF140:
 4969 0000 746F7461 		.ascii	"totalDistance\000"
 4969      6C446973 
 4969      74616E63 
 4969      6500
 4970              	.LASF41:
 4971 000e 4F726965 		.ascii	"OrientationState\000"
 4971      6E746174 
 4971      696F6E53 
 4971      74617465 
 4971      00
 4972              	.LASF36:
 4973 001f 67325F73 		.ascii	"g2_speed\000"
 4973      70656564 
 4973      00
 4974              	.LASF94:
 4975 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4975      61726455 
 4975      6E74696C 
 4975      54617267 
 4975      65745374 
 4976              	.LASF56:
 4977 0046 526F626F 		.ascii	"RobotMovement\000"
 4977      744D6F76 
 4977      656D656E 
 4977      7400
 4978              	.LASF132:
 4979 0054 70726576 		.ascii	"previousDirection\000"
 4979      696F7573 
 4979      44697265 
 4979      6374696F 
 4979      6E00
 4980              	.LASF103:
 4981 0066 6C696E65 		.ascii	"lineCount\000"
 4981      436F756E 
 4981      7400
 4982              	.LASF114:
 4983 0070 74735F73 		.ascii	"ts_speed\000"
 4983      70656564 
 4983      00
 4984              	.LASF0:
 4985 0079 7369676E 		.ascii	"signed char\000"
 4985      65642063 
 4985      68617200 
 4986              	.LASF160:
 4987 0085 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4987      6F63756D 
 4987      656E7473 
 4987      5C476974 
 4987      4875625C 
 4988 00b4 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4988      635F636F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 104


 4988      64655F62 
 4988      6173655C 
 4988      43533330 
 4989              	.LASF69:
 4990 00d6 53345F44 		.ascii	"S4_DETECTED\000"
 4990      45544543 
 4990      54454400 
 4991              	.LASF51:
 4992 00e2 64697265 		.ascii	"direction\000"
 4992      6374696F 
 4992      6E00
 4993              	.LASF143:
 4994 00ec 74696D65 		.ascii	"timerInt\000"
 4994      72496E74 
 4994      00
 4995              	.LASF158:
 4996 00f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4996      43313120 
 4996      352E342E 
 4996      31203230 
 4996      31363036 
 4997 0128 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4997      20726576 
 4997      6973696F 
 4997      6E203233 
 4997      37373135 
 4998 015b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4998      66756E63 
 4998      74696F6E 
 4998      2D736563 
 4998      74696F6E 
 4999              	.LASF82:
 5000 0183 626C6F63 		.ascii	"blocksToTarget\000"
 5000      6B73546F 
 5000      54617267 
 5000      657400
 5001              	.LASF29:
 5002 0192 67305F64 		.ascii	"g0_direction\000"
 5002      69726563 
 5002      74696F6E 
 5002      00
 5003              	.LASF127:
 5004 019f 656E7472 		.ascii	"entry\000"
 5004      7900
 5005              	.LASF7:
 5006 01a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 5006      206C6F6E 
 5006      6720756E 
 5006      7369676E 
 5006      65642069 
 5007              	.LASF55:
 5008 01bc 65787065 		.ascii	"expectedOrientation\000"
 5008      63746564 
 5008      4F726965 
 5008      6E746174 
 5008      696F6E00 
 5009              	.LASF46:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 105


 5010 01d0 75547572 		.ascii	"uTurn\000"
 5010      6E00
 5011              	.LASF26:
 5012 01d6 67305F78 		.ascii	"g0_xpos\000"
 5012      706F7300 
 5013              	.LASF145:
 5014 01de 73746F70 		.ascii	"stopBuffer\000"
 5014      42756666 
 5014      657200
 5015              	.LASF104:
 5016 01e9 6F6E4C69 		.ascii	"onLineFlag\000"
 5016      6E65466C 
 5016      616700
 5017              	.LASF54:
 5018 01f4 64697374 		.ascii	"distanceToTarget\000"
 5018      616E6365 
 5018      546F5461 
 5018      72676574 
 5018      00
 5019              	.LASF48:
 5020 0205 53746F70 		.ascii	"StopAtTarget\000"
 5020      41745461 
 5020      72676574 
 5020      00
 5021              	.LASF157:
 5022 0212 66697273 		.ascii	"firstTurnIteration\000"
 5022      74547572 
 5022      6E497465 
 5022      72617469 
 5022      6F6E00
 5023              	.LASF116:
 5024 0225 666C6167 		.ascii	"flag_ts_enc\000"
 5024      5F74735F 
 5024      656E6300 
 5025              	.LASF68:
 5026 0231 53335F44 		.ascii	"S3_DETECTED\000"
 5026      45544543 
 5026      54454400 
 5027              	.LASF122:
 5028 023d 666C6167 		.ascii	"flag_KB_string\000"
 5028      5F4B425F 
 5028      73747269 
 5028      6E6700
 5029              	.LASF70:
 5030 024c 53355F44 		.ascii	"S5_DETECTED\000"
 5030      45544543 
 5030      54454400 
 5031              	.LASF98:
 5032 0258 72696768 		.ascii	"rightStatusFlag\000"
 5032      74537461 
 5032      74757346 
 5032      6C616700 
 5033              	.LASF50:
 5034 0268 496E7374 		.ascii	"Instruction\000"
 5034      72756374 
 5034      696F6E00 
 5035              	.LASF153:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 106


 5036 0274 63757272 		.ascii	"currentCol\000"
 5036      656E7443 
 5036      6F6C00
 5037              	.LASF62:
 5038 027f 53746F70 		.ascii	"Stop\000"
 5038      00
 5039              	.LASF4:
 5040 0284 6C6F6E67 		.ascii	"long int\000"
 5040      20696E74 
 5040      00
 5041              	.LASF111:
 5042 028d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5042      52784275 
 5042      66666572 
 5042      00
 5043              	.LASF88:
 5044 029a 636F756E 		.ascii	"count2\000"
 5044      743200
 5045              	.LASF91:
 5046 02a1 696E7374 		.ascii	"instructionIndex\000"
 5046      72756374 
 5046      696F6E49 
 5046      6E646578 
 5046      00
 5047              	.LASF77:
 5048 02b2 5370696E 		.ascii	"SpinTurnCourseCorrection\000"
 5048      5475726E 
 5048      436F7572 
 5048      7365436F 
 5048      72726563 
 5049              	.LASF47:
 5050 02cb 466F7277 		.ascii	"ForwardUntilTarget\000"
 5050      61726455 
 5050      6E74696C 
 5050      54617267 
 5050      657400
 5051              	.LASF66:
 5052 02de 4261636B 		.ascii	"Backward\000"
 5052      77617264 
 5052      00
 5053              	.LASF14:
 5054 02e7 75696E74 		.ascii	"uint8\000"
 5054      3800
 5055              	.LASF6:
 5056 02ed 6C6F6E67 		.ascii	"long long int\000"
 5056      206C6F6E 
 5056      6720696E 
 5056      7400
 5057              	.LASF20:
 5058 02fb 646F7562 		.ascii	"double\000"
 5058      6C6500
 5059              	.LASF100:
 5060 0302 63757272 		.ascii	"currentIgnoreL\000"
 5060      656E7449 
 5060      676E6F72 
 5060      654C00
 5061              	.LASF123:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 107


 5062 0311 64617461 		.ascii	"dataready_flag\000"
 5062      72656164 
 5062      795F666C 
 5062      616700
 5063              	.LASF73:
 5064 0320 6D61696E 		.ascii	"main\000"
 5064      00
 5065              	.LASF101:
 5066 0325 63757272 		.ascii	"currentIgnoreR\000"
 5066      656E7449 
 5066      676E6F72 
 5066      655200
 5067              	.LASF61:
 5068 0334 41646A75 		.ascii	"AdjustToTheRight\000"
 5068      7374546F 
 5068      54686552 
 5068      69676874 
 5068      00
 5069              	.LASF109:
 5070 0345 666F7277 		.ascii	"forwardAfterTurnLIgnore\000"
 5070      61726441 
 5070      66746572 
 5070      5475726E 
 5070      4C49676E 
 5071              	.LASF120:
 5072 035d 666C6167 		.ascii	"flag_rx\000"
 5072      5F727800 
 5073              	.LASF16:
 5074 0365 75696E74 		.ascii	"uint32\000"
 5074      333200
 5075              	.LASF86:
 5076 036c 6E657874 		.ascii	"nextInstruction\000"
 5076      496E7374 
 5076      72756374 
 5076      696F6E00 
 5077              	.LASF162:
 5078 037c 636F756E 		.ascii	"count\000"
 5078      7400
 5079              	.LASF126:
 5080 0382 6C696E65 		.ascii	"line\000"
 5080      00
 5081              	.LASF37:
 5082 0387 67325F64 		.ascii	"g2_direction\000"
 5082      69726563 
 5082      74696F6E 
 5082      00
 5083              	.LASF108:
 5084 0394 646F6E74 		.ascii	"dontOverwriteLeftIgnore\000"
 5084      4F766572 
 5084      77726974 
 5084      654C6566 
 5084      7449676E 
 5085              	.LASF142:
 5086 03ac 71756164 		.ascii	"quadDec2Count\000"
 5086      44656332 
 5086      436F756E 
 5086      7400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 108


 5087              	.LASF58:
 5088 03ba 5475726E 		.ascii	"TurnRight\000"
 5088      52696768 
 5088      7400
 5089              	.LASF65:
 5090 03c4 466F7277 		.ascii	"ForwardAfterTurn\000"
 5090      61726441 
 5090      66746572 
 5090      5475726E 
 5090      00
 5091              	.LASF49:
 5092 03d5 64617461 		.ascii	"data_main\000"
 5092      5F6D6169 
 5092      6E00
 5093              	.LASF80:
 5094 03df 626C6F63 		.ascii	"blocksize\000"
 5094      6B73697A 
 5094      6500
 5095              	.LASF112:
 5096 03e9 74735F65 		.ascii	"ts_enc\000"
 5096      6E6300
 5097              	.LASF5:
 5098 03f0 6C6F6E67 		.ascii	"long unsigned int\000"
 5098      20756E73 
 5098      69676E65 
 5098      6420696E 
 5098      7400
 5099              	.LASF106:
 5100 0402 746F6F4C 		.ascii	"tooLateFlag\000"
 5100      61746546 
 5100      6C616700 
 5101              	.LASF149:
 5102 040e 626C6F63 		.ascii	"blockSizeTotal\000"
 5102      6B53697A 
 5102      65546F74 
 5102      616C00
 5103              	.LASF163:
 5104 041d 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 5104      7465436C 
 5104      6F636B77 
 5104      69736531 
 5104      38304465 
 5105              	.LASF64:
 5106 0437 77616974 		.ascii	"waitForTurn\000"
 5106      466F7254 
 5106      75726E00 
 5107              	.LASF57:
 5108 0443 466F7277 		.ascii	"Forward\000"
 5108      61726400 
 5109              	.LASF3:
 5110 044b 73686F72 		.ascii	"short unsigned int\000"
 5110      7420756E 
 5110      7369676E 
 5110      65642069 
 5110      6E7400
 5111              	.LASF107:
 5112 045e 646F6E74 		.ascii	"dontOverwriteRightIgnore\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 109


 5112      4F766572 
 5112      77726974 
 5112      65526967 
 5112      68744967 
 5113              	.LASF105:
 5114 0477 746F6F45 		.ascii	"tooEarlyFlag\000"
 5114      61726C79 
 5114      466C6167 
 5114      00
 5115              	.LASF90:
 5116 0484 53657452 		.ascii	"SetRobotMovement\000"
 5116      6F626F74 
 5116      4D6F7665 
 5116      6D656E74 
 5116      00
 5117              	.LASF17:
 5118 0495 696E7438 		.ascii	"int8\000"
 5118      00
 5119              	.LASF78:
 5120 049a 73706565 		.ascii	"speedTimer\000"
 5120      6454696D 
 5120      657200
 5121              	.LASF12:
 5122 04a5 5F5F696E 		.ascii	"__int32_t\000"
 5122      7433325F 
 5122      7400
 5123              	.LASF159:
 5124 04af 6D61696E 		.ascii	"main.c\000"
 5124      2E6300
 5125              	.LASF31:
 5126 04b6 67315F79 		.ascii	"g1_ypos\000"
 5126      706F7300 
 5127              	.LASF84:
 5128 04be 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 5128      546F4E65 
 5128      7874496E 
 5128      73747275 
 5128      6374696F 
 5129              	.LASF2:
 5130 04d4 73686F72 		.ascii	"short int\000"
 5130      7420696E 
 5130      7400
 5131              	.LASF89:
 5132 04de 71756164 		.ascii	"quadPulseCount\000"
 5132      50756C73 
 5132      65436F75 
 5132      6E7400
 5133              	.LASF115:
 5134 04ed 74735F64 		.ascii	"ts_display\000"
 5134      6973706C 
 5134      617900
 5135              	.LASF148:
 5136 04f8 63757272 		.ascii	"currentFoodListIndex\000"
 5136      656E7446 
 5136      6F6F644C 
 5136      69737449 
 5136      6E646578 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 110


 5137              	.LASF75:
 5138 050d 466F7277 		.ascii	"ForwardCourseCorrection\000"
 5138      61726443 
 5138      6F757273 
 5138      65436F72 
 5138      72656374 
 5139              	.LASF121:
 5140 0525 666C6167 		.ascii	"flag_packet\000"
 5140      5F706163 
 5140      6B657400 
 5141              	.LASF118:
 5142 0531 666C6167 		.ascii	"flag_ts_speed\000"
 5142      5F74735F 
 5142      73706565 
 5142      6400
 5143              	.LASF32:
 5144 053f 67315F73 		.ascii	"g1_speed\000"
 5144      70656564 
 5144      00
 5145              	.LASF39:
 5146 0548 4C656674 		.ascii	"Left\000"
 5146      00
 5147              	.LASF96:
 5148 054d 75547572 		.ascii	"uTurnFinishedFlag\000"
 5148      6E46696E 
 5148      69736865 
 5148      64466C61 
 5148      6700
 5149              	.LASF10:
 5150 055f 73697A65 		.ascii	"sizetype\000"
 5150      74797065 
 5150      00
 5151              	.LASF152:
 5152 0568 63757272 		.ascii	"currentRow\000"
 5152      656E7452 
 5152      6F7700
 5153              	.LASF129:
 5154 0573 73797374 		.ascii	"system_state\000"
 5154      656D5F73 
 5154      74617465 
 5154      00
 5155              	.LASF33:
 5156 0580 67315F64 		.ascii	"g1_direction\000"
 5156      69726563 
 5156      74696F6E 
 5156      00
 5157              	.LASF128:
 5158 058d 75736242 		.ascii	"usbBuffer\000"
 5158      75666665 
 5158      7200
 5159              	.LASF44:
 5160 0597 77616974 		.ascii	"waitForLeftTurn\000"
 5160      466F724C 
 5160      65667454 
 5160      75726E00 
 5161              	.LASF30:
 5162 05a7 67315F78 		.ascii	"g1_xpos\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 111


 5162      706F7300 
 5163              	.LASF35:
 5164 05af 67325F79 		.ascii	"g2_ypos\000"
 5164      706F7300 
 5165              	.LASF99:
 5166 05b7 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 5166      436F7572 
 5166      7365436F 
 5166      72726563 
 5166      74696F6E 
 5167              	.LASF124:
 5168 05d3 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5168      5F72665F 
 5168      7472616E 
 5168      736D6973 
 5168      73696F6E 
 5169              	.LASF150:
 5170 05ef 78426C6F 		.ascii	"xBlocksize\000"
 5170      636B7369 
 5170      7A6500
 5171              	.LASF151:
 5172 05fa 79426C6F 		.ascii	"yBlocksize\000"
 5172      636B7369 
 5172      7A6500
 5173              	.LASF19:
 5174 0605 666C6F61 		.ascii	"float\000"
 5174      7400
 5175              	.LASF139:
 5176 060b 746F7461 		.ascii	"totalMilliseconds\000"
 5176      6C4D696C 
 5176      6C697365 
 5176      636F6E64 
 5176      7300
 5177              	.LASF63:
 5178 061d 556E6B6E 		.ascii	"Unknown\000"
 5178      6F776E00 
 5179              	.LASF85:
 5180 0625 47657449 		.ascii	"GetInstructionAtIndex\000"
 5180      6E737472 
 5180      75637469 
 5180      6F6E4174 
 5180      496E6465 
 5181              	.LASF144:
 5182 063b 6B656570 		.ascii	"keepLedOn\000"
 5182      4C65644F 
 5182      6E00
 5183              	.LASF113:
 5184 0645 74735F75 		.ascii	"ts_update\000"
 5184      70646174 
 5184      6500
 5185              	.LASF95:
 5186 064f 75547572 		.ascii	"uTurnStartedFlag\000"
 5186      6E537461 
 5186      72746564 
 5186      466C6167 
 5186      00
 5187              	.LASF13:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 112


 5188 0660 696E7433 		.ascii	"int32_t\000"
 5188      325F7400 
 5189              	.LASF1:
 5190 0668 756E7369 		.ascii	"unsigned char\000"
 5190      676E6564 
 5190      20636861 
 5190      7200
 5191              	.LASF15:
 5192 0676 75696E74 		.ascii	"uint16\000"
 5192      313600
 5193              	.LASF42:
 5194 067d 496E7374 		.ascii	"InstructionDirection\000"
 5194      72756374 
 5194      696F6E44 
 5194      69726563 
 5194      74696F6E 
 5195              	.LASF34:
 5196 0692 67325F78 		.ascii	"g2_xpos\000"
 5196      706F7300 
 5197              	.LASF136:
 5198 069a 70726576 		.ascii	"previousInstruction\000"
 5198      696F7573 
 5198      496E7374 
 5198      72756374 
 5198      696F6E00 
 5199              	.LASF134:
 5200 06ae 70726576 		.ascii	"previousOrientation\000"
 5200      696F7573 
 5200      4F726965 
 5200      6E746174 
 5200      696F6E00 
 5201              	.LASF155:
 5202 06c2 69676E6F 		.ascii	"ignoreSensor\000"
 5202      72655365 
 5202      6E736F72 
 5202      00
 5203              	.LASF97:
 5204 06cf 6C656674 		.ascii	"leftStatusFlag\000"
 5204      53746174 
 5204      7573466C 
 5204      616700
 5205              	.LASF81:
 5206 06de 63757272 		.ascii	"currentInstructionDirection\000"
 5206      656E7449 
 5206      6E737472 
 5206      75637469 
 5206      6F6E4469 
 5207              	.LASF24:
 5208 06fa 726F626F 		.ascii	"robot_ypos\000"
 5208      745F7970 
 5208      6F7300
 5209              	.LASF60:
 5210 0705 41646A75 		.ascii	"AdjustToTheLeft\000"
 5210      7374546F 
 5210      5468654C 
 5210      65667400 
 5211              	.LASF43:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 113


 5212 0715 476F466F 		.ascii	"GoForward\000"
 5212      72776172 
 5212      6400
 5213              	.LASF40:
 5214 071f 52696768 		.ascii	"Right\000"
 5214      7400
 5215              	.LASF156:
 5216 0725 6C617374 		.ascii	"lastDirectionAfter180\000"
 5216      44697265 
 5216      6374696F 
 5216      6E416674 
 5216      65723138 
 5217              	.LASF137:
 5218 073b 6E756D53 		.ascii	"numSteps\000"
 5218      74657073 
 5218      00
 5219              	.LASF76:
 5220 0744 5370696E 		.ascii	"SpinCourseCorrection\000"
 5220      436F7572 
 5220      7365436F 
 5220      72726563 
 5220      74696F6E 
 5221              	.LASF119:
 5222 0759 666C6167 		.ascii	"flag_ts_display\000"
 5222      5F74735F 
 5222      64697370 
 5222      6C617900 
 5223              	.LASF74:
 5224 0769 6E657744 		.ascii	"newDistance\000"
 5224      69737461 
 5224      6E636500 
 5225              	.LASF9:
 5226 0775 6C6F6E67 		.ascii	"long double\000"
 5226      20646F75 
 5226      626C6500 
 5227              	.LASF11:
 5228 0781 63686172 		.ascii	"char\000"
 5228      00
 5229              	.LASF27:
 5230 0786 67305F79 		.ascii	"g0_ypos\000"
 5230      706F7300 
 5231              	.LASF67:
 5232 078e 5370696E 		.ascii	"Spin180\000"
 5232      31383000 
 5233              	.LASF8:
 5234 0796 756E7369 		.ascii	"unsigned int\000"
 5234      676E6564 
 5234      20696E74 
 5234      00
 5235              	.LASF21:
 5236 07a3 72737369 		.ascii	"rssi\000"
 5236      00
 5237              	.LASF22:
 5238 07a8 696E6465 		.ascii	"index\000"
 5238      7800
 5239              	.LASF71:
 5240 07ae 53365F44 		.ascii	"S6_DETECTED\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 114


 5240      45544543 
 5240      54454400 
 5241              	.LASF130:
 5242 07ba 666F6F64 		.ascii	"food_list\000"
 5242      5F6C6973 
 5242      7400
 5243              	.LASF38:
 5244 07c4 446F776E 		.ascii	"Down\000"
 5244      00
 5245              	.LASF141:
 5246 07c9 62756666 		.ascii	"buffer\000"
 5246      657200
 5247              	.LASF117:
 5248 07d0 666C6167 		.ascii	"flag_ts_update\000"
 5248      5F74735F 
 5248      75706461 
 5248      746500
 5249              	.LASF125:
 5250 07df 64697370 		.ascii	"displaystring\000"
 5250      6C617973 
 5250      7472696E 
 5250      6700
 5251              	.LASF23:
 5252 07ed 726F626F 		.ascii	"robot_xpos\000"
 5252      745F7870 
 5252      6F7300
 5253              	.LASF133:
 5254 07f8 63757272 		.ascii	"currentRobotOrientation\000"
 5254      656E7452 
 5254      6F626F74 
 5254      4F726965 
 5254      6E746174 
 5255              	.LASF131:
 5256 0810 63757272 		.ascii	"currentDirection\000"
 5256      656E7444 
 5256      69726563 
 5256      74696F6E 
 5256      00
 5257              	.LASF79:
 5258 0821 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 5258      6F76656D 
 5258      656E7441 
 5258      63636F72 
 5258      64696E67 
 5259              	.LASF93:
 5260 0843 7475726E 		.ascii	"turnFinishedFlag\000"
 5260      46696E69 
 5260      73686564 
 5260      466C6167 
 5260      00
 5261              	.LASF138:
 5262 0854 696E7374 		.ascii	"instructionList\000"
 5262      72756374 
 5262      696F6E4C 
 5262      69737400 
 5263              	.LASF45:
 5264 0864 77616974 		.ascii	"waitForRightTurn\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 115


 5264      466F7252 
 5264      69676874 
 5264      5475726E 
 5264      00
 5265              	.LASF147:
 5266 0875 6A756E63 		.ascii	"junctionConfiguration\000"
 5266      74696F6E 
 5266      436F6E66 
 5266      69677572 
 5266      6174696F 
 5267              	.LASF135:
 5268 088b 63757272 		.ascii	"currentInstruction\000"
 5268      656E7449 
 5268      6E737472 
 5268      75637469 
 5268      6F6E00
 5269              	.LASF102:
 5270 089e 746F7461 		.ascii	"totalLineCount\000"
 5270      6C4C696E 
 5270      65436F75 
 5270      6E7400
 5271              	.LASF87:
 5272 08ad 636F756E 		.ascii	"count1\000"
 5272      743100
 5273              	.LASF72:
 5274 08b4 54494D45 		.ascii	"TIMER_FINISH\000"
 5274      525F4649 
 5274      4E495348 
 5274      00
 5275              	.LASF83:
 5276 08c1 52657365 		.ascii	"ResetSensorFlags\000"
 5276      7453656E 
 5276      736F7246 
 5276      6C616773 
 5276      00
 5277              	.LASF18:
 5278 08d2 696E7431 		.ascii	"int16\000"
 5278      3600
 5279              	.LASF161:
 5280 08d8 71756164 		.ascii	"quadCountToRPM\000"
 5280      436F756E 
 5280      74546F52 
 5280      504D00
 5281              	.LASF52:
 5282 08e7 69676E6F 		.ascii	"ignoreL\000"
 5282      72654C00 
 5283              	.LASF59:
 5284 08ef 5475726E 		.ascii	"TurnLeft\000"
 5284      4C656674 
 5284      00
 5285              	.LASF53:
 5286 08f8 69676E6F 		.ascii	"ignoreR\000"
 5286      72655200 
 5287              	.LASF92:
 5288 0900 7475726E 		.ascii	"turnStartedFlag\000"
 5288      53746172 
 5288      74656446 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccnoJqP1.s 			page 116


 5288      6C616700 
 5289              	.LASF28:
 5290 0910 67305F73 		.ascii	"g0_speed\000"
 5290      70656564 
 5290      00
 5291              	.LASF110:
 5292 0919 666F7277 		.ascii	"forwardAfterTurnRIgnore\000"
 5292      61726441 
 5292      66746572 
 5292      5475726E 
 5292      5249676E 
 5293              	.LASF25:
 5294 0931 726F626F 		.ascii	"robot_orientation\000"
 5294      745F6F72 
 5294      69656E74 
 5294      6174696F 
 5294      6E00
 5295              	.LASF154:
 5296 0943 73746F70 		.ascii	"stoppedAfterTurn\000"
 5296      70656441 
 5296      66746572 
 5296      5475726E 
 5296      00
 5297              	.LASF146:
 5298 0954 666F7277 		.ascii	"forwardBuffer\000"
 5298      61726442 
 5298      75666665 
 5298      7200
 5299              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
