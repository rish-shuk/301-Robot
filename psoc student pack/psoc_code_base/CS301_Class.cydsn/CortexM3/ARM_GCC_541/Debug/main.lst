ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              		.global	forwardBuffer
 173              		.align	1
 174              		.type	forwardBuffer, %object
 175              		.size	forwardBuffer, 2
 176              	forwardBuffer:
 177 0034 0000     		.space	2
 178              	turnStartedFlag:
 179 0036 00       		.space	1
 180              	turnFinishedFlag:
 181 0037 00       		.space	1
 182              	forwardUntilTargetStartedFlag:
 183 0038 00       		.space	1
 184              	uTurnStartedFlag:
 185 0039 00       		.space	1
 186              	uTurnFinishedFlag:
 187 003a 00       		.space	1
 188              	leftStatusFlag:
 189 003b 00       		.space	1
 190              	rightStatusFlag:
 191 003c 00       		.space	1
 192              	spinCourseCorrectionStarted:
 193 003d 00       		.space	1
 194              	currentIgnoreL:
 195 003e 00       		.space	1
 196              		.data
 197              		.type	currentIgnoreR, %object
 198              		.size	currentIgnoreR, 1
 199              	currentIgnoreR:
 200 0045 01       		.byte	1
 201              		.bss
 202              	totalLineCount:
 203 003f 00       		.space	1
 204              	lineCount:
 205 0040 00       		.space	1
 206              	onLineFlag:
 207 0041 00       		.space	1
 208              	tooEarlyFlag:
 209 0042 00       		.space	1
 210              	tooLateFlag:
 211 0043 00       		.space	1
 212              		.global	junctionConfiguration
 213              		.align	2
 214              		.type	junctionConfiguration, %object
 215              		.size	junctionConfiguration, 4
 216              	junctionConfiguration:
 217 0044 00000000 		.space	4
 218              		.global	currentFoodListIndex
 219              		.type	currentFoodListIndex, %object
 220              		.size	currentFoodListIndex, 1
 221              	currentFoodListIndex:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 5


 222 0048 00       		.space	1
 223              		.global	blockSizeTotal
 224 0049 000000   		.align	2
 225              		.type	blockSizeTotal, %object
 226              		.size	blockSizeTotal, 4
 227              	blockSizeTotal:
 228 004c 00000000 		.space	4
 229              		.global	__aeabi_i2d
 230              		.global	__aeabi_dmul
 231              		.global	__aeabi_ddiv
 232              		.global	__aeabi_d2f
 233              		.global	__aeabi_fadd
 234              		.section	.text.speedTimer,"ax",%progbits
 235              		.align	2
 236              		.global	speedTimer
 237              		.thumb
 238              		.thumb_func
 239              		.type	speedTimer, %function
 240              	speedTimer:
 241              	.LFB64:
 242              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex();
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 6


  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint16 forwardBuffer = 0;
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** void RotateClockwise180Degrees();
  67:main.c        **** 
  68:main.c        **** volatile static uint8 totalLineCount = 0;
  69:main.c        **** volatile static uint8 lineCount = 0;
  70:main.c        **** volatile static uint8 onLineFlag = 0;
  71:main.c        **** 
  72:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  73:main.c        **** volatile static uint8 tooLateFlag = 0;
  74:main.c        **** 
  75:main.c        **** uint8 junctionConfiguration[4] = {0};
  76:main.c        **** uint8 currentFoodListIndex = 0;
  77:main.c        **** 
  78:main.c        **** float blockSizeTotal = 0;
  79:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  80:main.c        **** 
  81:main.c        **** CY_ISR (speedTimer) {
 243              		.loc 1 81 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 90B5     		push	{r4, r7, lr}
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 7


 255              		.cfi_def_cfa_register 7
  82:main.c        ****     timerInt = 1;
 256              		.loc 1 82 0
 257 0006 344B     		ldr	r3, .L4+16
 258 0008 0122     		movs	r2, #1
 259 000a 1A60     		str	r2, [r3]
  83:main.c        ****     //quadDec_M1 used for turning macros
  84:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 260              		.loc 1 84 0
 261 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 262 0010 0346     		mov	r3, r0
 263 0012 1A46     		mov	r2, r3
 264 0014 314B     		ldr	r3, .L4+20
 265 0016 1A60     		str	r2, [r3]
  85:main.c        ****     
  86:main.c        ****     if ((currentDirection == Forward || 
 266              		.loc 1 86 0
 267 0018 314B     		ldr	r3, .L4+24
 268 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 001c 002B     		cmp	r3, #0
 270 001e 13D0     		beq	.L2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 271              		.loc 1 87 0 discriminator 1
 272 0020 2F4B     		ldr	r3, .L4+24
 273 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  86:main.c        ****         currentDirection == ForwardAfterTurn ||
 274              		.loc 1 86 0 discriminator 1
 275 0024 082B     		cmp	r3, #8
 276 0026 0FD0     		beq	.L2
  88:main.c        ****         currentDirection == waitForTurn || 
 277              		.loc 1 88 0
 278 0028 2D4B     		ldr	r3, .L4+24
 279 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 280              		.loc 1 87 0
 281 002c 072B     		cmp	r3, #7
 282 002e 0BD0     		beq	.L2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 283              		.loc 1 89 0
 284 0030 2B4B     		ldr	r3, .L4+24
 285 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****         currentDirection == waitForTurn || 
 286              		.loc 1 88 0
 287 0034 032B     		cmp	r3, #3
 288 0036 07D0     		beq	.L2
  90:main.c        ****         currentDirection == AdjustToTheRight ||
 289              		.loc 1 90 0
 290 0038 294B     		ldr	r3, .L4+24
 291 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 292              		.loc 1 89 0
 293 003c 042B     		cmp	r3, #4
 294 003e 03D0     		beq	.L2
  91:main.c        ****         currentDirection == Backward) &&
 295              		.loc 1 91 0
 296 0040 274B     		ldr	r3, .L4+24
 297 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 8


  90:main.c        ****         currentDirection == AdjustToTheRight ||
 298              		.loc 1 90 0
 299 0044 092B     		cmp	r3, #9
 300 0046 34D1     		bne	.L3
 301              	.L2:
  92:main.c        ****         quadDec2Count != 0) {
 302              		.loc 1 92 0
 303 0048 244B     		ldr	r3, .L4+20
 304 004a 1B68     		ldr	r3, [r3]
  91:main.c        ****         currentDirection == Backward) &&
 305              		.loc 1 91 0
 306 004c 002B     		cmp	r3, #0
 307 004e 30D0     		beq	.L3
 308              	.LBB2:
  93:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  94:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 309              		.loc 1 94 0
 310 0050 224B     		ldr	r3, .L4+20
 311 0052 1B68     		ldr	r3, [r3]
 312 0054 002B     		cmp	r3, #0
 313 0056 B8BF     		it	lt
 314 0058 5B42     		rsblt	r3, r3, #0
 315 005a 1846     		mov	r0, r3
 316 005c FFF7FEFF 		bl	__aeabi_i2d
 317 0060 19A3     		adr	r3, .L4
 318 0062 D3E90023 		ldrd	r2, [r3]
 319 0066 FFF7FEFF 		bl	__aeabi_dmul
 320 006a 0346     		mov	r3, r0
 321 006c 0C46     		mov	r4, r1
 322 006e 1846     		mov	r0, r3
 323 0070 2146     		mov	r1, r4
 324 0072 17A3     		adr	r3, .L4+8
 325 0074 D3E90023 		ldrd	r2, [r3]
 326 0078 FFF7FEFF 		bl	__aeabi_dmul
 327 007c 0346     		mov	r3, r0
 328 007e 0C46     		mov	r4, r1
 329 0080 1846     		mov	r0, r3
 330 0082 2146     		mov	r1, r4
 331 0084 4FF00002 		mov	r2, #0
 332 0088 164B     		ldr	r3, .L4+28
 333 008a FFF7FEFF 		bl	__aeabi_ddiv
 334 008e 0346     		mov	r3, r0
 335 0090 0C46     		mov	r4, r1
 336 0092 1846     		mov	r0, r3
 337 0094 2146     		mov	r1, r4
 338 0096 FFF7FEFF 		bl	__aeabi_d2f
 339 009a 0346     		mov	r3, r0
 340 009c 7B60     		str	r3, [r7, #4]	@ float
  95:main.c        ****         
  96:main.c        ****         totalDistance = totalDistance + newDistance;
 341              		.loc 1 96 0
 342 009e 124B     		ldr	r3, .L4+32
 343 00a0 1B68     		ldr	r3, [r3]	@ float
 344 00a2 7968     		ldr	r1, [r7, #4]	@ float
 345 00a4 1846     		mov	r0, r3
 346 00a6 FFF7FEFF 		bl	__aeabi_fadd
 347 00aa 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 9


 348 00ac 1A46     		mov	r2, r3
 349 00ae 0E4B     		ldr	r3, .L4+32
 350 00b0 1A60     		str	r2, [r3]	@ float
 351              	.L3:
 352              	.LBE2:
  97:main.c        ****     }
  98:main.c        ****     
  99:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 353              		.loc 1 99 0
 354 00b2 0020     		movs	r0, #0
 355 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 100:main.c        ****     QuadDec_M2_Start(); // restart counter
 356              		.loc 1 100 0
 357 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 101:main.c        ****     
 102:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 358              		.loc 1 102 0
 359 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 103:main.c        **** }
 360              		.loc 1 103 0
 361 00c0 00BF     		nop
 362 00c2 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 12
 364 00c4 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 00c6 90BD     		pop	{r4, r7, pc}
 368              	.L5:
 369              		.align	3
 370              	.L4:
 371 00c8 182D4454 		.word	1413754136
 372 00cc FB210940 		.word	1074340347
 373 00d0 00000000 		.word	0
 374 00d4 00205040 		.word	1078992896
 375 00d8 00000000 		.word	timerInt
 376 00dc 00000000 		.word	quadDec2Count
 377 00e0 00000000 		.word	currentDirection
 378 00e4 00806C40 		.word	1080852480
 379 00e8 00000000 		.word	totalDistance
 380              		.cfi_endproc
 381              	.LFE64:
 382              		.size	speedTimer, .-speedTimer
 383              		.section	.text.S3_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S3_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S3_DETECTED, %function
 389              	S3_DETECTED:
 390              	.LFB65:
 104:main.c        **** 
 105:main.c        **** CY_ISR(S3_DETECTED) {
 391              		.loc 1 105 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 10


 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 106:main.c        ****     // Sensor has detected WHITE
 107:main.c        ****     s3 = 1; // , Black = 0, White = 1
 401              		.loc 1 107 0
 402 0004 034B     		ldr	r3, .L7
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
 108:main.c        ****     //LED_Write(1u);
 109:main.c        **** }
 405              		.loc 1 109 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L8:
 415 0012 00BF     		.align	2
 416              	.L7:
 417 0014 00000000 		.word	s3
 418              		.cfi_endproc
 419              	.LFE65:
 420              		.size	S3_DETECTED, .-S3_DETECTED
 421              		.section	.text.S4_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S4_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S4_DETECTED, %function
 427              	S4_DETECTED:
 428              	.LFB66:
 110:main.c        **** 
 111:main.c        **** CY_ISR(S4_DETECTED) {
 429              		.loc 1 111 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 112:main.c        ****     // Sensor has detected WHITE
 113:main.c        ****     s4 = 1; // , Black = 0, White = 1
 439              		.loc 1 113 0
 440 0004 034B     		ldr	r3, .L10
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
 114:main.c        ****     //LED_Write(1u);
 115:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 11


 443              		.loc 1 115 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L11:
 453 0012 00BF     		.align	2
 454              	.L10:
 455 0014 00000000 		.word	s4
 456              		.cfi_endproc
 457              	.LFE66:
 458              		.size	S4_DETECTED, .-S4_DETECTED
 459              		.section	.text.S5_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S5_DETECTED
 462              		.thumb
 463              		.thumb_func
 464              		.type	S5_DETECTED, %function
 465              	S5_DETECTED:
 466              	.LFB67:
 116:main.c        **** 
 117:main.c        **** CY_ISR(S5_DETECTED) {
 467              		.loc 1 117 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 118:main.c        ****     // Sensor has detected WHITE
 119:main.c        ****     s5 = 1; // , Black = 0, White = 1
 477              		.loc 1 119 0
 478 0004 034B     		ldr	r3, .L13
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 120:main.c        ****     //LED_Write(1u);
 121:main.c        **** }
 481              		.loc 1 121 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L14:
 491 0012 00BF     		.align	2
 492              	.L13:
 493 0014 00000000 		.word	s5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 12


 494              		.cfi_endproc
 495              	.LFE67:
 496              		.size	S5_DETECTED, .-S5_DETECTED
 497              		.section	.text.S6_DETECTED,"ax",%progbits
 498              		.align	2
 499              		.global	S6_DETECTED
 500              		.thumb
 501              		.thumb_func
 502              		.type	S6_DETECTED, %function
 503              	S6_DETECTED:
 504              	.LFB68:
 122:main.c        **** 
 123:main.c        **** CY_ISR(S6_DETECTED) {
 505              		.loc 1 123 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 124:main.c        ****     // Sensor has detected WHITE
 125:main.c        ****     s6 = 1; // , Black = 0, White = 1
 515              		.loc 1 125 0
 516 0004 034B     		ldr	r3, .L16
 517 0006 0122     		movs	r2, #1
 518 0008 1A70     		strb	r2, [r3]
 126:main.c        ****     //LED_Write(1u);
 127:main.c        **** }
 519              		.loc 1 127 0
 520 000a 00BF     		nop
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L17:
 529 0012 00BF     		.align	2
 530              	.L16:
 531 0014 00000000 		.word	s6
 532              		.cfi_endproc
 533              	.LFE68:
 534              		.size	S6_DETECTED, .-S6_DETECTED
 535              		.section	.text.TIMER_FINISH,"ax",%progbits
 536              		.align	2
 537              		.global	TIMER_FINISH
 538              		.thumb
 539              		.thumb_func
 540              		.type	TIMER_FINISH, %function
 541              	TIMER_FINISH:
 542              	.LFB69:
 128:main.c        **** 
 129:main.c        **** CY_ISR(TIMER_FINISH) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 13


 543              		.loc 1 129 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 130:main.c        ****     if (currentDirection == Stop) {
 553              		.loc 1 130 0
 554 0004 154B     		ldr	r3, .L24
 555 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0008 052B     		cmp	r3, #5
 557 000a 05D1     		bne	.L19
 131:main.c        ****         stopBuffer = stopBuffer + 1;
 558              		.loc 1 131 0
 559 000c 144B     		ldr	r3, .L24+4
 560 000e 1B68     		ldr	r3, [r3]
 561 0010 0133     		adds	r3, r3, #1
 562 0012 134A     		ldr	r2, .L24+4
 563 0014 1360     		str	r3, [r2]
 564 0016 02E0     		b	.L20
 565              	.L19:
 132:main.c        ****     } else {
 133:main.c        ****         stopBuffer = 0;
 566              		.loc 1 133 0
 567 0018 114B     		ldr	r3, .L24+4
 568 001a 0022     		movs	r2, #0
 569 001c 1A60     		str	r2, [r3]
 570              	.L20:
 134:main.c        ****     }
 135:main.c        ****     if (currentDirection == Forward || currentDirection == AdjustToTheLeft || currentDirection ==  
 571              		.loc 1 135 0
 572 001e 0F4B     		ldr	r3, .L24
 573 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0022 002B     		cmp	r3, #0
 575 0024 07D0     		beq	.L21
 576              		.loc 1 135 0 is_stmt 0 discriminator 1
 577 0026 0D4B     		ldr	r3, .L24
 578 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 002a 032B     		cmp	r3, #3
 580 002c 03D0     		beq	.L21
 581              		.loc 1 135 0 discriminator 2
 582 002e 0B4B     		ldr	r3, .L24
 583 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0032 042B     		cmp	r3, #4
 585 0034 06D1     		bne	.L22
 586              	.L21:
 136:main.c        ****         forwardBuffer = forwardBuffer + 1;
 587              		.loc 1 136 0 is_stmt 1
 588 0036 0B4B     		ldr	r3, .L24+8
 589 0038 1B88     		ldrh	r3, [r3]
 590 003a 0133     		adds	r3, r3, #1
 591 003c 9AB2     		uxth	r2, r3
 592 003e 094B     		ldr	r3, .L24+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 14


 593 0040 1A80     		strh	r2, [r3]	@ movhi
 594 0042 02E0     		b	.L23
 595              	.L22:
 137:main.c        ****     } else {
 138:main.c        ****         forwardBuffer = 0;    
 596              		.loc 1 138 0
 597 0044 074B     		ldr	r3, .L24+8
 598 0046 0022     		movs	r2, #0
 599 0048 1A80     		strh	r2, [r3]	@ movhi
 600              	.L23:
 139:main.c        ****     }
 140:main.c        ****     SetRobotMovement(); 
 601              		.loc 1 140 0
 602 004a FFF7FEFF 		bl	SetRobotMovement
 141:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 603              		.loc 1 141 0
 604 004e FFF7FEFF 		bl	ResetSensorFlags
 142:main.c        ****     Timer_LED_ReadStatusRegister();
 605              		.loc 1 142 0
 606 0052 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 143:main.c        **** }
 607              		.loc 1 143 0
 608 0056 00BF     		nop
 609 0058 80BD     		pop	{r7, pc}
 610              	.L25:
 611 005a 00BF     		.align	2
 612              	.L24:
 613 005c 00000000 		.word	currentDirection
 614 0060 00000000 		.word	stopBuffer
 615 0064 00000000 		.word	forwardBuffer
 616              		.cfi_endproc
 617              	.LFE69:
 618              		.size	TIMER_FINISH, .-TIMER_FINISH
 619              		.section	.text.main,"ax",%progbits
 620              		.align	2
 621              		.global	main
 622              		.thumb
 623              		.thumb_func
 624              		.type	main, %function
 625              	main:
 626              	.LFB70:
 144:main.c        **** 
 145:main.c        **** 
 146:main.c        **** int main() {
 627              		.loc 1 146 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 24
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 B0B5     		push	{r4, r5, r7, lr}
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 4, -16
 634              		.cfi_offset 5, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 86B0     		sub	sp, sp, #24
 638              		.cfi_def_cfa_offset 40
 639 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 15


 640              		.cfi_def_cfa_register 7
 147:main.c        **** // ----- INITIALIZATIONS ----------
 148:main.c        ****     CYGlobalIntEnable;
 641              		.loc 1 148 0
 642              		.syntax unified
 643              	@ 148 "main.c" 1
 644 0006 62B6     		CPSIE   i
 645              	@ 0 "" 2
 149:main.c        ****     ResetSensorFlags();
 646              		.loc 1 149 0
 647              		.thumb
 648              		.syntax unified
 649 0008 FFF7FEFF 		bl	ResetSensorFlags
 150:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 650              		.loc 1 150 0
 651 000c FFF7FEFF 		bl	init
 151:main.c        ****     
 152:main.c        ****     // MAKE SURE TO CHANGE ORIENTATION
 153:main.c        ****     instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, Down); // initia
 652              		.loc 1 153 0
 653 0010 2B4B     		ldr	r3, .L29
 654 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 0014 1A46     		mov	r2, r3
 656 0016 0123     		movs	r3, #1
 657 0018 2A49     		ldr	r1, .L29+4
 658 001a 2B48     		ldr	r0, .L29+8
 659 001c FFF7FEFF 		bl	findPathNewOrientation
 660 0020 0246     		mov	r2, r0
 661 0022 2A4B     		ldr	r3, .L29+12
 662 0024 1A60     		str	r2, [r3]
 154:main.c        ****     numSteps = instructionsListLength();
 663              		.loc 1 154 0
 664 0026 FFF7FEFF 		bl	instructionsListLength
 665 002a 0346     		mov	r3, r0
 666 002c 1A46     		mov	r2, r3
 667 002e 284B     		ldr	r3, .L29+16
 668 0030 1A60     		str	r2, [r3]
 155:main.c        ****     
 156:main.c        ****     currentInstruction = GetInstructionAtIndex();
 669              		.loc 1 156 0
 670 0032 284C     		ldr	r4, .L29+20
 671 0034 3B46     		mov	r3, r7
 672 0036 1846     		mov	r0, r3
 673 0038 FFF7FEFF 		bl	GetInstructionAtIndex
 674 003c 2546     		mov	r5, r4
 675 003e 3C46     		mov	r4, r7
 676 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 677 0042 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 678 0044 2368     		ldr	r3, [r4]
 679 0046 2B60     		str	r3, [r5]
 157:main.c        ****     
 158:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 680              		.loc 1 158 0
 681 0048 204B     		ldr	r3, .L29+12
 682 004a 1968     		ldr	r1, [r3]
 683 004c 224B     		ldr	r3, .L29+24
 684 004e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 16


 685 0050 1346     		mov	r3, r2
 686 0052 9B00     		lsls	r3, r3, #2
 687 0054 1344     		add	r3, r3, r2
 688 0056 9B00     		lsls	r3, r3, #2
 689 0058 0B44     		add	r3, r3, r1
 690 005a 5B68     		ldr	r3, [r3, #4]
 691 005c DAB2     		uxtb	r2, r3
 692 005e 1F4B     		ldr	r3, .L29+28
 693 0060 1A70     		strb	r2, [r3]
 159:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 694              		.loc 1 159 0
 695 0062 1A4B     		ldr	r3, .L29+12
 696 0064 1968     		ldr	r1, [r3]
 697 0066 1C4B     		ldr	r3, .L29+24
 698 0068 1A68     		ldr	r2, [r3]
 699 006a 1346     		mov	r3, r2
 700 006c 9B00     		lsls	r3, r3, #2
 701 006e 1344     		add	r3, r3, r2
 702 0070 9B00     		lsls	r3, r3, #2
 703 0072 0B44     		add	r3, r3, r1
 704 0074 9B68     		ldr	r3, [r3, #8]
 705 0076 DAB2     		uxtb	r2, r3
 706 0078 194B     		ldr	r3, .L29+32
 707 007a 1A70     		strb	r2, [r3]
 160:main.c        ****     
 161:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 708              		.loc 1 161 0
 709 007c 1948     		ldr	r0, .L29+36
 710 007e FFF7FEFF 		bl	isr_speed_StartEx
 162:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 711              		.loc 1 162 0
 712 0082 1948     		ldr	r0, .L29+40
 713 0084 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 163:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 714              		.loc 1 163 0
 715 0088 1848     		ldr	r0, .L29+44
 716 008a FFF7FEFF 		bl	S3_detected_StartEx
 164:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 717              		.loc 1 164 0
 718 008e 1848     		ldr	r0, .L29+48
 719 0090 FFF7FEFF 		bl	S4_detected_StartEx
 165:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 720              		.loc 1 165 0
 721 0094 1748     		ldr	r0, .L29+52
 722 0096 FFF7FEFF 		bl	S5_detected_StartEx
 166:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 723              		.loc 1 166 0
 724 009a 1748     		ldr	r0, .L29+56
 725 009c FFF7FEFF 		bl	S6_detected_StartEx
 167:main.c        ****     Timer_LED_Start();
 726              		.loc 1 167 0
 727 00a0 FFF7FEFF 		bl	Timer_LED_Start
 728              	.L28:
 168:main.c        **** 
 169:main.c        ****     for(;;)
 170:main.c        ****     {
 171:main.c        ****         if(timerInt == 1) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 17


 729              		.loc 1 171 0
 730 00a4 154B     		ldr	r3, .L29+60
 731 00a6 1B68     		ldr	r3, [r3]
 732 00a8 012B     		cmp	r3, #1
 733 00aa FBD1     		bne	.L28
 172:main.c        ****             timerInt = 0;
 734              		.loc 1 172 0
 735 00ac 134B     		ldr	r3, .L29+60
 736 00ae 0022     		movs	r2, #0
 737 00b0 1A60     		str	r2, [r3]
 173:main.c        ****             // calculate RPM of M2
 174:main.c        ****             quadCountToRPM(quadDec2Count);
 738              		.loc 1 174 0
 739 00b2 134B     		ldr	r3, .L29+64
 740 00b4 1B68     		ldr	r3, [r3]
 741 00b6 9BB2     		uxth	r3, r3
 742 00b8 1846     		mov	r0, r3
 743 00ba FFF7FEFF 		bl	quadCountToRPM
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             //usbPutString(" ");
 178:main.c        ****         }
 179:main.c        ****     }
 744              		.loc 1 179 0
 745 00be F1E7     		b	.L28
 746              	.L30:
 747              		.align	2
 748              	.L29:
 749 00c0 00000000 		.word	currentFoodListIndex
 750 00c4 00000000 		.word	food_list
 751 00c8 00000000 		.word	map
 752 00cc 00000000 		.word	instructionList
 753 00d0 00000000 		.word	numSteps
 754 00d4 00000000 		.word	currentInstruction
 755 00d8 14000000 		.word	instructionIndex
 756 00dc 3E000000 		.word	currentIgnoreL
 757 00e0 45000000 		.word	currentIgnoreR
 758 00e4 00000000 		.word	speedTimer
 759 00e8 00000000 		.word	TIMER_FINISH
 760 00ec 00000000 		.word	S3_DETECTED
 761 00f0 00000000 		.word	S4_DETECTED
 762 00f4 00000000 		.word	S5_DETECTED
 763 00f8 00000000 		.word	S6_DETECTED
 764 00fc 00000000 		.word	timerInt
 765 0100 00000000 		.word	quadDec2Count
 766              		.cfi_endproc
 767              	.LFE70:
 768              		.size	main, .-main
 769              		.global	__aeabi_fmul
 770              		.global	__aeabi_f2iz
 771              		.section	.text.quadCountToRPM,"ax",%progbits
 772              		.align	2
 773              		.global	quadCountToRPM
 774              		.thumb
 775              		.thumb_func
 776              		.type	quadCountToRPM, %function
 777              	quadCountToRPM:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 18


 778              	.LFB71:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count) {
 779              		.loc 1 185 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 16
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783 0000 90B5     		push	{r4, r7, lr}
 784              		.cfi_def_cfa_offset 12
 785              		.cfi_offset 4, -12
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 85B0     		sub	sp, sp, #20
 789              		.cfi_def_cfa_offset 32
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 792 0006 0346     		mov	r3, r0
 793 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 186:main.c        ****     float cps = count/57.00;
 794              		.loc 1 186 0
 795 000a FB88     		ldrh	r3, [r7, #6]
 796 000c 1846     		mov	r0, r3
 797 000e FFF7FEFF 		bl	__aeabi_i2d
 798 0012 4FF00002 		mov	r2, #0
 799 0016 0D4B     		ldr	r3, .L33
 800 0018 FFF7FEFF 		bl	__aeabi_ddiv
 801 001c 0346     		mov	r3, r0
 802 001e 0C46     		mov	r4, r1
 803 0020 1846     		mov	r0, r3
 804 0022 2146     		mov	r1, r4
 805 0024 FFF7FEFF 		bl	__aeabi_d2f
 806 0028 0346     		mov	r3, r0
 807 002a FB60     		str	r3, [r7, #12]	@ float
 187:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 808              		.loc 1 187 0
 809 002c 0849     		ldr	r1, .L33+4
 810 002e F868     		ldr	r0, [r7, #12]	@ float
 811 0030 FFF7FEFF 		bl	__aeabi_fmul
 812 0034 0346     		mov	r3, r0
 813 0036 1846     		mov	r0, r3
 814 0038 FFF7FEFF 		bl	__aeabi_f2iz
 815 003c 0346     		mov	r3, r0
 816 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 188:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 189:main.c        ****     return rpm;
 817              		.loc 1 189 0
 818 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 190:main.c        ****     //usbPutString(buffer);
 191:main.c        ****     //usbPutString("rpm ");
 192:main.c        **** }
 819              		.loc 1 192 0
 820 0044 1846     		mov	r0, r3
 821 0046 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 19


 822              		.cfi_def_cfa_offset 12
 823 0048 BD46     		mov	sp, r7
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 004a 90BD     		pop	{r4, r7, pc}
 827              	.L34:
 828              		.align	2
 829              	.L33:
 830 004c 00804C40 		.word	1078755328
 831 0050 00007041 		.word	1097859072
 832              		.cfi_endproc
 833              	.LFE71:
 834              		.size	quadCountToRPM, .-quadCountToRPM
 835              		.section	.text.ResetSensorFlags,"ax",%progbits
 836              		.align	2
 837              		.global	ResetSensorFlags
 838              		.thumb
 839              		.thumb_func
 840              		.type	ResetSensorFlags, %function
 841              	ResetSensorFlags:
 842              	.LFB72:
 193:main.c        **** 
 194:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 195:main.c        **** void ResetSensorFlags() {
 843              		.loc 1 195 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848 0000 80B4     		push	{r7}
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 0002 00AF     		add	r7, sp, #0
 852              		.cfi_def_cfa_register 7
 196:main.c        ****     s3 = 0;
 853              		.loc 1 196 0
 854 0004 074B     		ldr	r3, .L36
 855 0006 0022     		movs	r2, #0
 856 0008 1A70     		strb	r2, [r3]
 197:main.c        ****     s4 = 0;
 857              		.loc 1 197 0
 858 000a 074B     		ldr	r3, .L36+4
 859 000c 0022     		movs	r2, #0
 860 000e 1A70     		strb	r2, [r3]
 198:main.c        ****     s5 = 0;
 861              		.loc 1 198 0
 862 0010 064B     		ldr	r3, .L36+8
 863 0012 0022     		movs	r2, #0
 864 0014 1A70     		strb	r2, [r3]
 199:main.c        ****     s6 = 0;
 865              		.loc 1 199 0
 866 0016 064B     		ldr	r3, .L36+12
 867 0018 0022     		movs	r2, #0
 868 001a 1A70     		strb	r2, [r3]
 200:main.c        **** }
 869              		.loc 1 200 0
 870 001c 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 20


 871 001e BD46     		mov	sp, r7
 872              		.cfi_def_cfa_register 13
 873              		@ sp needed
 874 0020 80BC     		pop	{r7}
 875              		.cfi_restore 7
 876              		.cfi_def_cfa_offset 0
 877 0022 7047     		bx	lr
 878              	.L37:
 879              		.align	2
 880              	.L36:
 881 0024 00000000 		.word	s3
 882 0028 00000000 		.word	s4
 883 002c 00000000 		.word	s5
 884 0030 00000000 		.word	s6
 885              		.cfi_endproc
 886              	.LFE72:
 887              		.size	ResetSensorFlags, .-ResetSensorFlags
 888              		.global	xBlocksize
 889              		.data
 890 0046 0000     		.align	2
 891              		.type	xBlocksize, %object
 892              		.size	xBlocksize, 4
 893              	xBlocksize:
 894 0048 0000F442 		.word	1123287040
 895              		.global	yBlocksize
 896              		.align	2
 897              		.type	yBlocksize, %object
 898              		.size	yBlocksize, 4
 899              	yBlocksize:
 900 004c 00009042 		.word	1116733440
 901              		.global	currentRow
 902              		.type	currentRow, %object
 903              		.size	currentRow, 1
 904              	currentRow:
 905 0050 01       		.byte	1
 906              		.global	currentCol
 907              		.type	currentCol, %object
 908              		.size	currentCol, 1
 909              	currentCol:
 910 0051 01       		.byte	1
 911              		.global	stoppedAfterTurn
 912              		.bss
 913              		.type	stoppedAfterTurn, %object
 914              		.size	stoppedAfterTurn, 1
 915              	stoppedAfterTurn:
 916 0050 00       		.space	1
 917              		.global	ignoreSensor
 918              		.type	ignoreSensor, %object
 919              		.size	ignoreSensor, 1
 920              	ignoreSensor:
 921 0051 00       		.space	1
 922              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 923              		.align	2
 924              		.global	ForwardCourseCorrection
 925              		.thumb
 926              		.thumb_func
 927              		.type	ForwardCourseCorrection, %function
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 21


 928              	ForwardCourseCorrection:
 929              	.LFB73:
 201:main.c        **** 
 202:main.c        **** float xBlocksize = 122; // 122 mm
 203:main.c        **** float yBlocksize = 72; // 80 mm
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1;
 206:main.c        **** 
 207:main.c        **** uint8 stoppedAfterTurn = 0;
 208:main.c        **** uint8 ignoreSensor = 0;
 209:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 210:main.c        **** 
 211:main.c        **** enum RobotMovement ForwardCourseCorrection();
 212:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 930              		.loc 1 212 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935 0000 80B4     		push	{r7}
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 0002 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 213:main.c        ****     // if S5 and S6 are on black, move forward
 214:main.c        ****     if (!s5 && !s6) {
 940              		.loc 1 214 0
 941 0004 1C4B     		ldr	r3, .L46
 942 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 943 0008 002B     		cmp	r3, #0
 944 000a 0FD1     		bne	.L39
 945              		.loc 1 214 0 is_stmt 0 discriminator 1
 946 000c 1B4B     		ldr	r3, .L46+4
 947 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 948 0010 002B     		cmp	r3, #0
 949 0012 0BD1     		bne	.L39
 215:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 950              		.loc 1 215 0 is_stmt 1
 951 0014 1A4B     		ldr	r3, .L46+8
 952 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 953 0018 032B     		cmp	r3, #3
 954 001a 01D0     		beq	.L40
 216:main.c        ****             return AdjustToTheLeft;
 955              		.loc 1 216 0
 956 001c 0323     		movs	r3, #3
 957 001e 26E0     		b	.L41
 958              	.L40:
 217:main.c        ****         }
 218:main.c        ****         if (previousDirection != AdjustToTheRight) {
 959              		.loc 1 218 0
 960 0020 174B     		ldr	r3, .L46+8
 961 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0024 042B     		cmp	r3, #4
 963 0026 01D0     		beq	.L39
 219:main.c        ****             return AdjustToTheRight;    
 964              		.loc 1 219 0
 965 0028 0423     		movs	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 22


 966 002a 20E0     		b	.L41
 967              	.L39:
 220:main.c        ****         }
 221:main.c        ****     }
 222:main.c        ****     
 223:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 224:main.c        ****     if (s5 && s6) {
 968              		.loc 1 224 0
 969 002c 124B     		ldr	r3, .L46
 970 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0030 002B     		cmp	r3, #0
 972 0032 0FD0     		beq	.L42
 973              		.loc 1 224 0 is_stmt 0 discriminator 1
 974 0034 114B     		ldr	r3, .L46+4
 975 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 0038 002B     		cmp	r3, #0
 977 003a 0BD0     		beq	.L42
 225:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 978              		.loc 1 225 0 is_stmt 1
 979 003c 104B     		ldr	r3, .L46+8
 980 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 0040 032B     		cmp	r3, #3
 982 0042 01D0     		beq	.L43
 226:main.c        ****             return AdjustToTheLeft;
 983              		.loc 1 226 0
 984 0044 0323     		movs	r3, #3
 985 0046 12E0     		b	.L41
 986              	.L43:
 227:main.c        ****         }
 228:main.c        ****         if (previousDirection != AdjustToTheRight) {
 987              		.loc 1 228 0
 988 0048 0D4B     		ldr	r3, .L46+8
 989 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 004c 042B     		cmp	r3, #4
 991 004e 01D0     		beq	.L42
 229:main.c        ****             return AdjustToTheRight;    
 992              		.loc 1 229 0
 993 0050 0423     		movs	r3, #4
 994 0052 0CE0     		b	.L41
 995              	.L42:
 230:main.c        ****         }
 231:main.c        ****     }
 232:main.c        **** 
 233:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 234:main.c        ****     if (s5) {
 996              		.loc 1 234 0
 997 0054 084B     		ldr	r3, .L46
 998 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 0058 002B     		cmp	r3, #0
 1000 005a 01D0     		beq	.L44
 235:main.c        ****         return AdjustToTheRight;    
 1001              		.loc 1 235 0
 1002 005c 0423     		movs	r3, #4
 1003 005e 06E0     		b	.L41
 1004              	.L44:
 236:main.c        ****     }
 237:main.c        ****     if (s6) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 23


 1005              		.loc 1 237 0
 1006 0060 064B     		ldr	r3, .L46+4
 1007 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 0064 002B     		cmp	r3, #0
 1009 0066 01D0     		beq	.L45
 238:main.c        ****         return AdjustToTheLeft;    
 1010              		.loc 1 238 0
 1011 0068 0323     		movs	r3, #3
 1012 006a 00E0     		b	.L41
 1013              	.L45:
 239:main.c        ****     }
 240:main.c        ****    
 241:main.c        ****     // We should never actually get to this point
 242:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 243:main.c        ****     return Stop;
 1014              		.loc 1 243 0
 1015 006c 0523     		movs	r3, #5
 1016              	.L41:
 244:main.c        **** }
 1017              		.loc 1 244 0
 1018 006e 1846     		mov	r0, r3
 1019 0070 BD46     		mov	sp, r7
 1020              		.cfi_def_cfa_register 13
 1021              		@ sp needed
 1022 0072 80BC     		pop	{r7}
 1023              		.cfi_restore 7
 1024              		.cfi_def_cfa_offset 0
 1025 0074 7047     		bx	lr
 1026              	.L47:
 1027 0076 00BF     		.align	2
 1028              	.L46:
 1029 0078 00000000 		.word	s5
 1030 007c 00000000 		.word	s6
 1031 0080 00000000 		.word	previousDirection
 1032              		.cfi_endproc
 1033              	.LFE73:
 1034              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1035              		.global	lastDirectionAfter180
 1036              		.data
 1037              		.type	lastDirectionAfter180, %object
 1038              		.size	lastDirectionAfter180, 1
 1039              	lastDirectionAfter180:
 1040 0052 06       		.byte	6
 1041              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1042              		.align	2
 1043              		.global	SpinCourseCorrection
 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	SpinCourseCorrection, %function
 1047              	SpinCourseCorrection:
 1048              	.LFB74:
 245:main.c        **** 
 246:main.c        **** enum RobotMovement SpinCourseCorrection();
 247:main.c        **** 
 248:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 249:main.c        **** 
 250:main.c        **** enum RobotMovement SpinCourseCorrection() {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 24


 1049              		.loc 1 250 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054 0000 80B4     		push	{r7}
 1055              		.cfi_def_cfa_offset 4
 1056              		.cfi_offset 7, -4
 1057 0002 00AF     		add	r7, sp, #0
 1058              		.cfi_def_cfa_register 7
 251:main.c        ****     // Set first iteration flag.
 252:main.c        ****     if (!spinCourseCorrectionStarted) {
 1059              		.loc 1 252 0
 1060 0004 184B     		ldr	r3, .L55
 1061 0006 1B78     		ldrb	r3, [r3]
 1062 0008 DBB2     		uxtb	r3, r3
 1063 000a 002B     		cmp	r3, #0
 1064 000c 06D1     		bne	.L49
 253:main.c        ****         spinCourseCorrectionStarted = 1;    
 1065              		.loc 1 253 0
 1066 000e 164B     		ldr	r3, .L55
 1067 0010 0122     		movs	r2, #1
 1068 0012 1A70     		strb	r2, [r3]
 254:main.c        ****         lastDirectionAfter180 = currentDirection;
 1069              		.loc 1 254 0
 1070 0014 154B     		ldr	r3, .L55+4
 1071 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1072 0018 154B     		ldr	r3, .L55+8
 1073 001a 1A70     		strb	r2, [r3]
 1074              	.L49:
 255:main.c        ****     }
 256:main.c        ****     
 257:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 258:main.c        ****     if (s5 && s6) {
 1075              		.loc 1 258 0
 1076 001c 154B     		ldr	r3, .L55+12
 1077 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 0020 002B     		cmp	r3, #0
 1079 0022 0FD0     		beq	.L50
 1080              		.loc 1 258 0 is_stmt 0 discriminator 1
 1081 0024 144B     		ldr	r3, .L55+16
 1082 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 0028 002B     		cmp	r3, #0
 1084 002a 0BD0     		beq	.L50
 259:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1085              		.loc 1 259 0 is_stmt 1
 1086 002c 104B     		ldr	r3, .L55+8
 1087 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1088 0030 022B     		cmp	r3, #2
 1089 0032 01D0     		beq	.L51
 260:main.c        ****             return TurnLeft;
 1090              		.loc 1 260 0
 1091 0034 0223     		movs	r3, #2
 1092 0036 12E0     		b	.L52
 1093              	.L51:
 261:main.c        ****         }
 262:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 25


 1094              		.loc 1 262 0
 1095 0038 0D4B     		ldr	r3, .L55+8
 1096 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 003c 012B     		cmp	r3, #1
 1098 003e 01D0     		beq	.L50
 263:main.c        ****             return TurnRight;    
 1099              		.loc 1 263 0
 1100 0040 0123     		movs	r3, #1
 1101 0042 0CE0     		b	.L52
 1102              	.L50:
 264:main.c        ****         }
 265:main.c        ****     }
 266:main.c        **** 
 267:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 268:main.c        ****     if (s5) {
 1103              		.loc 1 268 0
 1104 0044 0B4B     		ldr	r3, .L55+12
 1105 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 0048 002B     		cmp	r3, #0
 1107 004a 01D0     		beq	.L53
 269:main.c        ****         return TurnRight;    
 1108              		.loc 1 269 0
 1109 004c 0123     		movs	r3, #1
 1110 004e 06E0     		b	.L52
 1111              	.L53:
 270:main.c        ****     }
 271:main.c        ****     if (s6) {
 1112              		.loc 1 271 0
 1113 0050 094B     		ldr	r3, .L55+16
 1114 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0054 002B     		cmp	r3, #0
 1116 0056 01D0     		beq	.L54
 272:main.c        ****         return TurnLeft;    
 1117              		.loc 1 272 0
 1118 0058 0223     		movs	r3, #2
 1119 005a 00E0     		b	.L52
 1120              	.L54:
 273:main.c        ****     }
 274:main.c        ****    
 275:main.c        ****     // We should never actually get to this point
 276:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 277:main.c        ****     return Stop;
 1121              		.loc 1 277 0
 1122 005c 0523     		movs	r3, #5
 1123              	.L52:
 278:main.c        **** }
 1124              		.loc 1 278 0
 1125 005e 1846     		mov	r0, r3
 1126 0060 BD46     		mov	sp, r7
 1127              		.cfi_def_cfa_register 13
 1128              		@ sp needed
 1129 0062 80BC     		pop	{r7}
 1130              		.cfi_restore 7
 1131              		.cfi_def_cfa_offset 0
 1132 0064 7047     		bx	lr
 1133              	.L56:
 1134 0066 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 26


 1135              	.L55:
 1136 0068 3D000000 		.word	spinCourseCorrectionStarted
 1137 006c 00000000 		.word	currentDirection
 1138 0070 00000000 		.word	lastDirectionAfter180
 1139 0074 00000000 		.word	s5
 1140 0078 00000000 		.word	s6
 1141              		.cfi_endproc
 1142              	.LFE74:
 1143              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1144              		.section	.text.SpinTurnCourseCorrection,"ax",%progbits
 1145              		.align	2
 1146              		.global	SpinTurnCourseCorrection
 1147              		.thumb
 1148              		.thumb_func
 1149              		.type	SpinTurnCourseCorrection, %function
 1150              	SpinTurnCourseCorrection:
 1151              	.LFB75:
 279:main.c        **** enum RobotMovement SpinTurnCourseCorrection();
 280:main.c        **** enum RobotMovement SpinTurnCourseCorrection() {
 1152              		.loc 1 280 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157 0000 80B4     		push	{r7}
 1158              		.cfi_def_cfa_offset 4
 1159              		.cfi_offset 7, -4
 1160 0002 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 281:main.c        ****     // if S5 and S6 are on black, move forward
 282:main.c        ****     if (!s5 && !s6) {
 1162              		.loc 1 282 0
 1163 0004 1C4B     		ldr	r3, .L65
 1164 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1165 0008 002B     		cmp	r3, #0
 1166 000a 0FD1     		bne	.L58
 1167              		.loc 1 282 0 is_stmt 0 discriminator 1
 1168 000c 1B4B     		ldr	r3, .L65+4
 1169 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1170 0010 002B     		cmp	r3, #0
 1171 0012 0BD1     		bne	.L58
 283:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1172              		.loc 1 283 0 is_stmt 1
 1173 0014 1A4B     		ldr	r3, .L65+8
 1174 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1175 0018 032B     		cmp	r3, #3
 1176 001a 01D0     		beq	.L59
 284:main.c        ****             return TurnLeft;
 1177              		.loc 1 284 0
 1178 001c 0223     		movs	r3, #2
 1179 001e 26E0     		b	.L60
 1180              	.L59:
 285:main.c        ****         }
 286:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1181              		.loc 1 286 0
 1182 0020 174B     		ldr	r3, .L65+8
 1183 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 27


 1184 0024 042B     		cmp	r3, #4
 1185 0026 01D0     		beq	.L58
 287:main.c        ****             return TurnRight;    
 1186              		.loc 1 287 0
 1187 0028 0123     		movs	r3, #1
 1188 002a 20E0     		b	.L60
 1189              	.L58:
 288:main.c        ****         }
 289:main.c        ****     }
 290:main.c        ****     
 291:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 292:main.c        ****     if (s5 && s6) {
 1190              		.loc 1 292 0
 1191 002c 124B     		ldr	r3, .L65
 1192 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0030 002B     		cmp	r3, #0
 1194 0032 0FD0     		beq	.L61
 1195              		.loc 1 292 0 is_stmt 0 discriminator 1
 1196 0034 114B     		ldr	r3, .L65+4
 1197 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 0038 002B     		cmp	r3, #0
 1199 003a 0BD0     		beq	.L61
 293:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1200              		.loc 1 293 0 is_stmt 1
 1201 003c 104B     		ldr	r3, .L65+8
 1202 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 0040 032B     		cmp	r3, #3
 1204 0042 01D0     		beq	.L62
 294:main.c        ****             return TurnLeft;
 1205              		.loc 1 294 0
 1206 0044 0223     		movs	r3, #2
 1207 0046 12E0     		b	.L60
 1208              	.L62:
 295:main.c        ****         }
 296:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1209              		.loc 1 296 0
 1210 0048 0D4B     		ldr	r3, .L65+8
 1211 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 004c 042B     		cmp	r3, #4
 1213 004e 01D0     		beq	.L61
 297:main.c        ****             return TurnRight;    
 1214              		.loc 1 297 0
 1215 0050 0123     		movs	r3, #1
 1216 0052 0CE0     		b	.L60
 1217              	.L61:
 298:main.c        ****         }
 299:main.c        ****     }
 300:main.c        **** 
 301:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 302:main.c        ****     if (s5) {
 1218              		.loc 1 302 0
 1219 0054 084B     		ldr	r3, .L65
 1220 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0058 002B     		cmp	r3, #0
 1222 005a 01D0     		beq	.L63
 303:main.c        ****         return TurnRight;    
 1223              		.loc 1 303 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 28


 1224 005c 0123     		movs	r3, #1
 1225 005e 06E0     		b	.L60
 1226              	.L63:
 304:main.c        ****     }
 305:main.c        ****     if (s6) {
 1227              		.loc 1 305 0
 1228 0060 064B     		ldr	r3, .L65+4
 1229 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0064 002B     		cmp	r3, #0
 1231 0066 01D0     		beq	.L64
 306:main.c        ****         return TurnLeft;    
 1232              		.loc 1 306 0
 1233 0068 0223     		movs	r3, #2
 1234 006a 00E0     		b	.L60
 1235              	.L64:
 307:main.c        ****     }
 308:main.c        ****    
 309:main.c        ****     // We should never actually get to this point
 310:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 311:main.c        ****     return Stop;
 1236              		.loc 1 311 0
 1237 006c 0523     		movs	r3, #5
 1238              	.L60:
 312:main.c        **** }
 1239              		.loc 1 312 0
 1240 006e 1846     		mov	r0, r3
 1241 0070 BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 0072 80BC     		pop	{r7}
 1245              		.cfi_restore 7
 1246              		.cfi_def_cfa_offset 0
 1247 0074 7047     		bx	lr
 1248              	.L66:
 1249 0076 00BF     		.align	2
 1250              	.L65:
 1251 0078 00000000 		.word	s5
 1252 007c 00000000 		.word	s6
 1253 0080 00000000 		.word	previousDirection
 1254              		.cfi_endproc
 1255              	.LFE75:
 1256              		.size	SpinTurnCourseCorrection, .-SpinTurnCourseCorrection
 1257              		.global	firstTurnIteration
 1258              		.bss
 1259              		.type	firstTurnIteration, %object
 1260              		.size	firstTurnIteration, 1
 1261              	firstTurnIteration:
 1262 0052 00       		.space	1
 1263              		.global	__aeabi_i2f
 1264              		.global	__aeabi_fcmpge
 1265              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1266              		.align	2
 1267              		.global	GetMovementAccordingToInstruction
 1268              		.thumb
 1269              		.thumb_func
 1270              		.type	GetMovementAccordingToInstruction, %function
 1271              	GetMovementAccordingToInstruction:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 29


 1272              	.LFB76:
 313:main.c        **** 
 314:main.c        **** uint8 firstTurnIteration = 0;
 315:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1273              		.loc 1 315 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 40
 1276              		@ frame_needed = 1, uses_anonymous_args = 0
 1277 0000 B0B5     		push	{r4, r5, r7, lr}
 1278              		.cfi_def_cfa_offset 16
 1279              		.cfi_offset 4, -16
 1280              		.cfi_offset 5, -12
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 8AB0     		sub	sp, sp, #40
 1284              		.cfi_def_cfa_offset 56
 1285 0004 00AF     		add	r7, sp, #0
 1286              		.cfi_def_cfa_register 7
 316:main.c        ****     float blocksize;
 317:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1287              		.loc 1 317 0
 1288 0006 9E4B     		ldr	r3, .L129
 1289 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1290 000a 002B     		cmp	r3, #0
 1291 000c 03D0     		beq	.L68
 1292              		.loc 1 317 0 is_stmt 0 discriminator 1
 1293 000e 9C4B     		ldr	r3, .L129
 1294 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1295 0012 012B     		cmp	r3, #1
 1296 0014 03D1     		bne	.L69
 1297              	.L68:
 318:main.c        ****         blocksize = yBlocksize;
 1298              		.loc 1 318 0 is_stmt 1
 1299 0016 9B4B     		ldr	r3, .L129+4
 1300 0018 1B68     		ldr	r3, [r3]	@ float
 1301 001a 7B62     		str	r3, [r7, #36]	@ float
 1302 001c 02E0     		b	.L70
 1303              	.L69:
 319:main.c        ****     } else {
 320:main.c        ****         blocksize = xBlocksize;
 1304              		.loc 1 320 0
 1305 001e 9A4B     		ldr	r3, .L129+8
 1306 0020 1B68     		ldr	r3, [r3]	@ float
 1307 0022 7B62     		str	r3, [r7, #36]	@ float
 1308              	.L70:
 321:main.c        ****     }
 322:main.c        ****     
 323:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 324:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 325:main.c        ****         // OR an EVENT happens in the current instruction
 326:main.c        ****         // e.g. CurrentInstruction: GoForward 
 327:main.c        ****         //      S3 on BLACK
 328:main.c        ****         //      Check Ignore Count
 329:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 330:main.c        ****     
 331:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1309              		.loc 1 331 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 30


 1310 0024 964B     		ldr	r3, .L129
 1311 0026 1B78     		ldrb	r3, [r3]
 1312 0028 87F82330 		strb	r3, [r7, #35]
 332:main.c        ****     
 333:main.c        ****     switch (currentInstructionDirection) {
 1313              		.loc 1 333 0
 1314 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1315 0030 052B     		cmp	r3, #5
 1316 0032 00F28882 		bhi	.L71
 1317 0036 01A2     		adr	r2, .L73
 1318 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1319              		.p2align 2
 1320              	.L73:
 1321 003c 55000000 		.word	.L72+1
 1322 0040 17010000 		.word	.L74+1
 1323 0044 3B020000 		.word	.L75+1
 1324 0048 C1040000 		.word	.L76+1
 1325 004c A5030000 		.word	.L77+1
 1326 0050 01040000 		.word	.L78+1
 1327              		.p2align 1
 1328              	.L72:
 334:main.c        ****         case GoForward:
 335:main.c        ****             if(currentDirection == Stop) {
 1329              		.loc 1 335 0
 1330 0054 8D4B     		ldr	r3, .L129+12
 1331 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 0058 052B     		cmp	r3, #5
 1333 005a 08D1     		bne	.L79
 336:main.c        ****                 if(stopBuffer <= 25) {
 1334              		.loc 1 336 0
 1335 005c 8C4B     		ldr	r3, .L129+16
 1336 005e 1B68     		ldr	r3, [r3]
 1337 0060 192B     		cmp	r3, #25
 1338 0062 01D8     		bhi	.L80
 337:main.c        ****                     return Stop;
 1339              		.loc 1 337 0
 1340 0064 0523     		movs	r3, #5
 1341 0066 6FE2     		b	.L81
 1342              	.L80:
 338:main.c        ****                 } else {
 339:main.c        ****                     stopBuffer = 100;
 1343              		.loc 1 339 0
 1344 0068 894B     		ldr	r3, .L129+16
 1345 006a 6422     		movs	r2, #100
 1346 006c 1A60     		str	r2, [r3]
 1347              	.L79:
 340:main.c        ****                 }
 341:main.c        ****             }
 342:main.c        ****             if (s3) {
 1348              		.loc 1 342 0
 1349 006e 894B     		ldr	r3, .L129+20
 1350 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0072 002B     		cmp	r3, #0
 1352 0074 02D0     		beq	.L82
 343:main.c        ****                 leftStatusFlag = 1;
 1353              		.loc 1 343 0
 1354 0076 884B     		ldr	r3, .L129+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 31


 1355 0078 0122     		movs	r2, #1
 1356 007a 1A70     		strb	r2, [r3]
 1357              	.L82:
 344:main.c        ****             }
 345:main.c        ****             
 346:main.c        ****             if (s4) {
 1358              		.loc 1 346 0
 1359 007c 874B     		ldr	r3, .L129+28
 1360 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1361 0080 002B     		cmp	r3, #0
 1362 0082 02D0     		beq	.L83
 347:main.c        ****                 rightStatusFlag = 1;
 1363              		.loc 1 347 0
 1364 0084 864B     		ldr	r3, .L129+32
 1365 0086 0122     		movs	r2, #1
 1366 0088 1A70     		strb	r2, [r3]
 1367              	.L83:
 348:main.c        ****             }
 349:main.c        ****             
 350:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 351:main.c        ****             if (leftStatusFlag) {
 1368              		.loc 1 351 0
 1369 008a 834B     		ldr	r3, .L129+24
 1370 008c 1B78     		ldrb	r3, [r3]
 1371 008e DBB2     		uxtb	r3, r3
 1372 0090 002B     		cmp	r3, #0
 1373 0092 1BD0     		beq	.L84
 352:main.c        ****                 if (!s3) {
 1374              		.loc 1 352 0
 1375 0094 7F4B     		ldr	r3, .L129+20
 1376 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1377 0098 002B     		cmp	r3, #0
 1378 009a 17D1     		bne	.L84
 353:main.c        ****                     leftStatusFlag = 0;    
 1379              		.loc 1 353 0
 1380 009c 7E4B     		ldr	r3, .L129+24
 1381 009e 0022     		movs	r2, #0
 1382 00a0 1A70     		strb	r2, [r3]
 354:main.c        ****                     if (currentIgnoreL == 0) {
 1383              		.loc 1 354 0
 1384 00a2 804B     		ldr	r3, .L129+36
 1385 00a4 1B78     		ldrb	r3, [r3]
 1386 00a6 DBB2     		uxtb	r3, r3
 1387 00a8 002B     		cmp	r3, #0
 1388 00aa 03D1     		bne	.L85
 355:main.c        ****                         MoveToNextInstruction();
 1389              		.loc 1 355 0
 1390 00ac FFF7FEFF 		bl	MoveToNextInstruction
 356:main.c        ****                         return Stop;
 1391              		.loc 1 356 0
 1392 00b0 0523     		movs	r3, #5
 1393 00b2 49E2     		b	.L81
 1394              	.L85:
 357:main.c        ****                     }
 358:main.c        ****                     if (currentIgnoreL > 0) {
 1395              		.loc 1 358 0
 1396 00b4 7B4B     		ldr	r3, .L129+36
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 32


 1397 00b6 1B78     		ldrb	r3, [r3]
 1398 00b8 DBB2     		uxtb	r3, r3
 1399 00ba 002B     		cmp	r3, #0
 1400 00bc 06D0     		beq	.L84
 359:main.c        ****                         currentIgnoreL--;    
 1401              		.loc 1 359 0
 1402 00be 794B     		ldr	r3, .L129+36
 1403 00c0 1B78     		ldrb	r3, [r3]
 1404 00c2 DBB2     		uxtb	r3, r3
 1405 00c4 013B     		subs	r3, r3, #1
 1406 00c6 DAB2     		uxtb	r2, r3
 1407 00c8 764B     		ldr	r3, .L129+36
 1408 00ca 1A70     		strb	r2, [r3]
 1409              	.L84:
 360:main.c        ****                     }
 361:main.c        ****                 }
 362:main.c        ****             }
 363:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 364:main.c        ****             if (rightStatusFlag) {
 1410              		.loc 1 364 0
 1411 00cc 744B     		ldr	r3, .L129+32
 1412 00ce 1B78     		ldrb	r3, [r3]
 1413 00d0 DBB2     		uxtb	r3, r3
 1414 00d2 002B     		cmp	r3, #0
 1415 00d4 1BD0     		beq	.L86
 365:main.c        ****                 if (!s4) {
 1416              		.loc 1 365 0
 1417 00d6 714B     		ldr	r3, .L129+28
 1418 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1419 00da 002B     		cmp	r3, #0
 1420 00dc 17D1     		bne	.L86
 366:main.c        ****                     rightStatusFlag = 0;
 1421              		.loc 1 366 0
 1422 00de 704B     		ldr	r3, .L129+32
 1423 00e0 0022     		movs	r2, #0
 1424 00e2 1A70     		strb	r2, [r3]
 367:main.c        ****                     if (currentIgnoreR == 0) {
 1425              		.loc 1 367 0
 1426 00e4 704B     		ldr	r3, .L129+40
 1427 00e6 1B78     		ldrb	r3, [r3]
 1428 00e8 DBB2     		uxtb	r3, r3
 1429 00ea 002B     		cmp	r3, #0
 1430 00ec 03D1     		bne	.L87
 368:main.c        ****                         MoveToNextInstruction();
 1431              		.loc 1 368 0
 1432 00ee FFF7FEFF 		bl	MoveToNextInstruction
 369:main.c        ****                         return Stop;
 1433              		.loc 1 369 0
 1434 00f2 0523     		movs	r3, #5
 1435 00f4 28E2     		b	.L81
 1436              	.L87:
 370:main.c        ****                     }
 371:main.c        ****                     if (currentIgnoreR > 0) {
 1437              		.loc 1 371 0
 1438 00f6 6C4B     		ldr	r3, .L129+40
 1439 00f8 1B78     		ldrb	r3, [r3]
 1440 00fa DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 33


 1441 00fc 002B     		cmp	r3, #0
 1442 00fe 06D0     		beq	.L86
 372:main.c        ****                         currentIgnoreR--;    
 1443              		.loc 1 372 0
 1444 0100 694B     		ldr	r3, .L129+40
 1445 0102 1B78     		ldrb	r3, [r3]
 1446 0104 DBB2     		uxtb	r3, r3
 1447 0106 013B     		subs	r3, r3, #1
 1448 0108 DAB2     		uxtb	r2, r3
 1449 010a 674B     		ldr	r3, .L129+40
 1450 010c 1A70     		strb	r2, [r3]
 1451              	.L86:
 373:main.c        ****                     }
 374:main.c        ****                 }
 375:main.c        ****             }
 376:main.c        ****           
 377:main.c        ****             return ForwardCourseCorrection();
 1452              		.loc 1 377 0
 1453 010e FFF7FEFF 		bl	ForwardCourseCorrection
 1454 0112 0346     		mov	r3, r0
 1455 0114 18E2     		b	.L81
 1456              	.L74:
 378:main.c        ****             break;
 379:main.c        ****         case waitForLeftTurn:
 380:main.c        ****             // continue moving forward until s3 goes on black
 381:main.c        ****             // if we are turning left already
 382:main.c        ****                 // wait until s5 || s6 are on black
 383:main.c        ****                 // return stop
 384:main.c        ****             if (!firstTurnIteration) {
 1457              		.loc 1 384 0
 1458 0116 654B     		ldr	r3, .L129+44
 1459 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460 011a 002B     		cmp	r3, #0
 1461 011c 08D1     		bne	.L88
 385:main.c        ****                 if (!s3) {
 1462              		.loc 1 385 0
 1463 011e 5D4B     		ldr	r3, .L129+20
 1464 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 0122 002B     		cmp	r3, #0
 1466 0124 04D1     		bne	.L88
 386:main.c        ****                     firstTurnIteration = 1;
 1467              		.loc 1 386 0
 1468 0126 614B     		ldr	r3, .L129+44
 1469 0128 0122     		movs	r2, #1
 1470 012a 1A70     		strb	r2, [r3]
 387:main.c        ****                     return Stop;    
 1471              		.loc 1 387 0
 1472 012c 0523     		movs	r3, #5
 1473 012e 0BE2     		b	.L81
 1474              	.L88:
 388:main.c        ****                 }
 389:main.c        ****                 if (s3) {
 390:main.c        ****                     //return Backward;    
 391:main.c        ****                 }
 392:main.c        ****             }
 393:main.c        ****             
 394:main.c        ****             if (turnFinishedFlag) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 34


 1475              		.loc 1 394 0
 1476 0130 5F4B     		ldr	r3, .L129+48
 1477 0132 1B78     		ldrb	r3, [r3]
 1478 0134 DBB2     		uxtb	r3, r3
 1479 0136 002B     		cmp	r3, #0
 1480 0138 31D0     		beq	.L90
 395:main.c        ****                 if (!s3 && !s5 && !s6) {
 1481              		.loc 1 395 0
 1482 013a 564B     		ldr	r3, .L129+20
 1483 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 013e 002B     		cmp	r3, #0
 1485 0140 0BD1     		bne	.L91
 1486              		.loc 1 395 0 is_stmt 0 discriminator 1
 1487 0142 5C4B     		ldr	r3, .L129+52
 1488 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 0146 002B     		cmp	r3, #0
 1490 0148 07D1     		bne	.L91
 1491              		.loc 1 395 0 discriminator 2
 1492 014a 5B4B     		ldr	r3, .L129+56
 1493 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1494 014e 002B     		cmp	r3, #0
 1495 0150 03D1     		bne	.L91
 396:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 397:main.c        ****                     return ForwardCourseCorrection();
 1496              		.loc 1 397 0 is_stmt 1
 1497 0152 FFF7FEFF 		bl	ForwardCourseCorrection
 1498 0156 0346     		mov	r3, r0
 1499 0158 F6E1     		b	.L81
 1500              	.L91:
 398:main.c        ****                 }
 399:main.c        ****                 if (s5 || s6) {
 1501              		.loc 1 399 0
 1502 015a 564B     		ldr	r3, .L129+52
 1503 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1504 015e 002B     		cmp	r3, #0
 1505 0160 03D1     		bne	.L92
 1506              		.loc 1 399 0 is_stmt 0 discriminator 1
 1507 0162 554B     		ldr	r3, .L129+56
 1508 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 0166 002B     		cmp	r3, #0
 1510 0168 03D0     		beq	.L93
 1511              	.L92:
 400:main.c        ****                     return SpinCourseCorrection();
 1512              		.loc 1 400 0 is_stmt 1
 1513 016a FFF7FEFF 		bl	SpinCourseCorrection
 1514 016e 0346     		mov	r3, r0
 1515 0170 EAE1     		b	.L81
 1516              	.L93:
 401:main.c        ****                 }
 402:main.c        ****                 if (forwardBuffer <= 10) {
 1517              		.loc 1 402 0
 1518 0172 524B     		ldr	r3, .L129+60
 1519 0174 1B88     		ldrh	r3, [r3]
 1520 0176 0A2B     		cmp	r3, #10
 1521 0178 03D8     		bhi	.L94
 403:main.c        ****                     return ForwardCourseCorrection();    
 1522              		.loc 1 403 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 35


 1523 017a FFF7FEFF 		bl	ForwardCourseCorrection
 1524 017e 0346     		mov	r3, r0
 1525 0180 E2E1     		b	.L81
 1526              	.L94:
 404:main.c        **** 
 405:main.c        ****                 } else {
 406:main.c        ****                     forwardBuffer = 100;
 1527              		.loc 1 406 0
 1528 0182 4E4B     		ldr	r3, .L129+60
 1529 0184 6422     		movs	r2, #100
 1530 0186 1A80     		strh	r2, [r3]	@ movhi
 407:main.c        ****                     if (s3) {
 1531              		.loc 1 407 0
 1532 0188 424B     		ldr	r3, .L129+20
 1533 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 018c 002B     		cmp	r3, #0
 1535 018e 06D0     		beq	.L90
 408:main.c        ****                         turnFinishedFlag = 0;
 1536              		.loc 1 408 0
 1537 0190 474B     		ldr	r3, .L129+48
 1538 0192 0022     		movs	r2, #0
 1539 0194 1A70     		strb	r2, [r3]
 409:main.c        ****                         MoveToNextInstruction();   
 1540              		.loc 1 409 0
 1541 0196 FFF7FEFF 		bl	MoveToNextInstruction
 410:main.c        ****                         return Stop;  
 1542              		.loc 1 410 0
 1543 019a 0523     		movs	r3, #5
 1544 019c D4E1     		b	.L81
 1545              	.L90:
 411:main.c        ****                     }
 412:main.c        ****                 }
 413:main.c        ****             }
 414:main.c        ****             
 415:main.c        ****             
 416:main.c        ****             if (currentDirection == Stop) {
 1546              		.loc 1 416 0
 1547 019e 3B4B     		ldr	r3, .L129+12
 1548 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1549 01a2 052B     		cmp	r3, #5
 1550 01a4 09D1     		bne	.L95
 417:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 418:main.c        ****                 if (stopBuffer <= 25) {
 1551              		.loc 1 418 0
 1552 01a6 3A4B     		ldr	r3, .L129+16
 1553 01a8 1B68     		ldr	r3, [r3]
 1554 01aa 192B     		cmp	r3, #25
 1555 01ac 01D8     		bhi	.L96
 419:main.c        ****                     return Stop;   
 1556              		.loc 1 419 0
 1557 01ae 0523     		movs	r3, #5
 1558 01b0 CAE1     		b	.L81
 1559              	.L96:
 420:main.c        ****                 }
 421:main.c        ****                 return ForwardCourseCorrection();
 1560              		.loc 1 421 0
 1561 01b2 FFF7FEFF 		bl	ForwardCourseCorrection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 36


 1562 01b6 0346     		mov	r3, r0
 1563 01b8 C6E1     		b	.L81
 1564              	.L95:
 422:main.c        ****             }
 423:main.c        ****          
 424:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 425:main.c        ****             if (currentDirection == TurnLeft) {
 1565              		.loc 1 425 0
 1566 01ba 344B     		ldr	r3, .L129+12
 1567 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 01be 022B     		cmp	r3, #2
 1569 01c0 2ED1     		bne	.L97
 426:main.c        ****                 // If turn started and we are still on black, continue turning
 427:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 428:main.c        ****                 if (turnStartedFlag) {
 1570              		.loc 1 428 0
 1571 01c2 3F4B     		ldr	r3, .L129+64
 1572 01c4 1B78     		ldrb	r3, [r3]
 1573 01c6 DBB2     		uxtb	r3, r3
 1574 01c8 002B     		cmp	r3, #0
 1575 01ca 0ED0     		beq	.L98
 429:main.c        ****                     if (s3 && (s5 && s6)) {
 1576              		.loc 1 429 0
 1577 01cc 314B     		ldr	r3, .L129+20
 1578 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 01d0 002B     		cmp	r3, #0
 1580 01d2 0AD0     		beq	.L98
 1581              		.loc 1 429 0 is_stmt 0 discriminator 1
 1582 01d4 374B     		ldr	r3, .L129+52
 1583 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 01d8 002B     		cmp	r3, #0
 1585 01da 06D0     		beq	.L98
 1586              		.loc 1 429 0 discriminator 2
 1587 01dc 364B     		ldr	r3, .L129+56
 1588 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1589 01e0 002B     		cmp	r3, #0
 1590 01e2 02D0     		beq	.L98
 430:main.c        ****                         turnStartedFlag = 0;
 1591              		.loc 1 430 0 is_stmt 1
 1592 01e4 364B     		ldr	r3, .L129+64
 1593 01e6 0022     		movs	r2, #0
 1594 01e8 1A70     		strb	r2, [r3]
 1595              	.L98:
 431:main.c        ****                     }
 432:main.c        ****                 }
 433:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1596              		.loc 1 433 0
 1597 01ea 354B     		ldr	r3, .L129+64
 1598 01ec 1B78     		ldrb	r3, [r3]
 1599 01ee DBB2     		uxtb	r3, r3
 1600 01f0 002B     		cmp	r3, #0
 1601 01f2 13D1     		bne	.L99
 1602              		.loc 1 433 0 is_stmt 0 discriminator 1
 1603 01f4 274B     		ldr	r3, .L129+20
 1604 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1605 01f8 002B     		cmp	r3, #0
 1606 01fa 0FD1     		bne	.L99
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 37


 1607              		.loc 1 433 0 discriminator 2
 1608 01fc 2D4B     		ldr	r3, .L129+52
 1609 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 0200 002B     		cmp	r3, #0
 1611 0202 03D0     		beq	.L100
 1612              		.loc 1 433 0 discriminator 3
 1613 0204 2C4B     		ldr	r3, .L129+56
 1614 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 0208 002B     		cmp	r3, #0
 1616 020a 07D1     		bne	.L99
 1617              	.L100:
 434:main.c        ****                     turnFinishedFlag = 1;
 1618              		.loc 1 434 0 is_stmt 1
 1619 020c 284B     		ldr	r3, .L129+48
 1620 020e 0122     		movs	r2, #1
 1621 0210 1A70     		strb	r2, [r3]
 435:main.c        ****                     firstTurnIteration = 0;
 1622              		.loc 1 435 0
 1623 0212 264B     		ldr	r3, .L129+44
 1624 0214 0022     		movs	r2, #0
 1625 0216 1A70     		strb	r2, [r3]
 436:main.c        ****                     return ForwardAfterTurn;
 1626              		.loc 1 436 0
 1627 0218 0823     		movs	r3, #8
 1628 021a 95E1     		b	.L81
 1629              	.L99:
 437:main.c        ****                 }
 438:main.c        ****                 else
 439:main.c        ****                 {
 440:main.c        ****                     return TurnLeft;
 1630              		.loc 1 440 0
 1631 021c 0223     		movs	r3, #2
 1632 021e 93E1     		b	.L81
 1633              	.L97:
 441:main.c        ****                 }
 442:main.c        ****             }
 443:main.c        ****             
 444:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 445:main.c        ****             if (!s3) {
 1634              		.loc 1 445 0
 1635 0220 1C4B     		ldr	r3, .L129+20
 1636 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1637 0224 002B     		cmp	r3, #0
 1638 0226 04D1     		bne	.L101
 446:main.c        ****                 turnStartedFlag = 1;
 1639              		.loc 1 446 0
 1640 0228 254B     		ldr	r3, .L129+64
 1641 022a 0122     		movs	r2, #1
 1642 022c 1A70     		strb	r2, [r3]
 447:main.c        ****                 return TurnLeft;
 1643              		.loc 1 447 0
 1644 022e 0223     		movs	r3, #2
 1645 0230 8AE1     		b	.L81
 1646              	.L101:
 448:main.c        ****             }
 449:main.c        ****             
 450:main.c        ****             // Otherwise, keep going forward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 38


 451:main.c        ****             return ForwardCourseCorrection(); 
 1647              		.loc 1 451 0
 1648 0232 FFF7FEFF 		bl	ForwardCourseCorrection
 1649 0236 0346     		mov	r3, r0
 1650 0238 86E1     		b	.L81
 1651              	.L75:
 452:main.c        ****             break;
 453:main.c        ****         case waitForRightTurn:
 454:main.c        ****             // continue moving forward until s4 goes on black
 455:main.c        ****             // if we are turning left already
 456:main.c        ****                 // wait until s5 || s6 are on black
 457:main.c        ****                 // return stop
 458:main.c        ****             if (!firstTurnIteration) {
 1652              		.loc 1 458 0
 1653 023a 1C4B     		ldr	r3, .L129+44
 1654 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 023e 002B     		cmp	r3, #0
 1656 0240 08D1     		bne	.L102
 459:main.c        ****                 if (!s4) {
 1657              		.loc 1 459 0
 1658 0242 164B     		ldr	r3, .L129+28
 1659 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 0246 002B     		cmp	r3, #0
 1661 0248 04D1     		bne	.L102
 460:main.c        ****                     firstTurnIteration = 1; 
 1662              		.loc 1 460 0
 1663 024a 184B     		ldr	r3, .L129+44
 1664 024c 0122     		movs	r2, #1
 1665 024e 1A70     		strb	r2, [r3]
 461:main.c        ****                     return Stop;
 1666              		.loc 1 461 0
 1667 0250 0523     		movs	r3, #5
 1668 0252 79E1     		b	.L81
 1669              	.L102:
 462:main.c        ****                 }
 463:main.c        ****                 if (s4) {
 464:main.c        ****                     //return Backward;    
 465:main.c        ****                 }
 466:main.c        ****             }
 467:main.c        **** 
 468:main.c        ****             if (turnFinishedFlag) {
 1670              		.loc 1 468 0
 1671 0254 164B     		ldr	r3, .L129+48
 1672 0256 1B78     		ldrb	r3, [r3]
 1673 0258 DBB2     		uxtb	r3, r3
 1674 025a 002B     		cmp	r3, #0
 1675 025c 57D0     		beq	.L104
 469:main.c        ****                 if (!s4 && !s5 && !s6) {
 1676              		.loc 1 469 0
 1677 025e 0F4B     		ldr	r3, .L129+28
 1678 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679 0262 002B     		cmp	r3, #0
 1680 0264 2ED1     		bne	.L105
 1681              		.loc 1 469 0 is_stmt 0 discriminator 1
 1682 0266 134B     		ldr	r3, .L129+52
 1683 0268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684 026a 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 39


 1685 026c 2AD1     		bne	.L105
 1686              		.loc 1 469 0 discriminator 2
 1687 026e 124B     		ldr	r3, .L129+56
 1688 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1689 0272 002B     		cmp	r3, #0
 1690 0274 26D1     		bne	.L105
 470:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 471:main.c        ****                     return ForwardCourseCorrection();
 1691              		.loc 1 471 0 is_stmt 1
 1692 0276 FFF7FEFF 		bl	ForwardCourseCorrection
 1693 027a 0346     		mov	r3, r0
 1694 027c 64E1     		b	.L81
 1695              	.L130:
 1696 027e 00BF     		.align	2
 1697              	.L129:
 1698 0280 00000000 		.word	currentInstruction
 1699 0284 00000000 		.word	yBlocksize
 1700 0288 00000000 		.word	xBlocksize
 1701 028c 00000000 		.word	currentDirection
 1702 0290 00000000 		.word	stopBuffer
 1703 0294 00000000 		.word	s3
 1704 0298 3B000000 		.word	leftStatusFlag
 1705 029c 00000000 		.word	s4
 1706 02a0 3C000000 		.word	rightStatusFlag
 1707 02a4 3E000000 		.word	currentIgnoreL
 1708 02a8 45000000 		.word	currentIgnoreR
 1709 02ac 00000000 		.word	firstTurnIteration
 1710 02b0 37000000 		.word	turnFinishedFlag
 1711 02b4 00000000 		.word	s5
 1712 02b8 00000000 		.word	s6
 1713 02bc 00000000 		.word	forwardBuffer
 1714 02c0 36000000 		.word	turnStartedFlag
 1715              	.L105:
 472:main.c        ****                 }
 473:main.c        ****                 if (s5 || s6) {
 1716              		.loc 1 473 0
 1717 02c4 A24B     		ldr	r3, .L131
 1718 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 02c8 002B     		cmp	r3, #0
 1720 02ca 03D1     		bne	.L106
 1721              		.loc 1 473 0 is_stmt 0 discriminator 1
 1722 02cc A14B     		ldr	r3, .L131+4
 1723 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1724 02d0 002B     		cmp	r3, #0
 1725 02d2 03D0     		beq	.L107
 1726              	.L106:
 474:main.c        ****                     return SpinCourseCorrection();
 1727              		.loc 1 474 0 is_stmt 1
 1728 02d4 FFF7FEFF 		bl	SpinCourseCorrection
 1729 02d8 0346     		mov	r3, r0
 1730 02da 35E1     		b	.L81
 1731              	.L107:
 475:main.c        ****                 }
 476:main.c        ****                 if (forwardBuffer <= 10) {
 1732              		.loc 1 476 0
 1733 02dc 9E4B     		ldr	r3, .L131+8
 1734 02de 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 40


 1735 02e0 0A2B     		cmp	r3, #10
 1736 02e2 03D8     		bhi	.L108
 477:main.c        ****                     return ForwardCourseCorrection();    
 1737              		.loc 1 477 0
 1738 02e4 FFF7FEFF 		bl	ForwardCourseCorrection
 1739 02e8 0346     		mov	r3, r0
 1740 02ea 2DE1     		b	.L81
 1741              	.L108:
 478:main.c        **** 
 479:main.c        ****                 } else {
 480:main.c        ****                     forwardBuffer = 100;
 1742              		.loc 1 480 0
 1743 02ec 9A4B     		ldr	r3, .L131+8
 1744 02ee 6422     		movs	r2, #100
 1745 02f0 1A80     		strh	r2, [r3]	@ movhi
 481:main.c        ****                     if (s4) {
 1746              		.loc 1 481 0
 1747 02f2 9A4B     		ldr	r3, .L131+12
 1748 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 02f6 002B     		cmp	r3, #0
 1750 02f8 09D0     		beq	.L104
 482:main.c        ****                         firstTurnIteration = 0;
 1751              		.loc 1 482 0
 1752 02fa 994B     		ldr	r3, .L131+16
 1753 02fc 0022     		movs	r2, #0
 1754 02fe 1A70     		strb	r2, [r3]
 483:main.c        ****                         turnFinishedFlag = 0;
 1755              		.loc 1 483 0
 1756 0300 984B     		ldr	r3, .L131+20
 1757 0302 0022     		movs	r2, #0
 1758 0304 1A70     		strb	r2, [r3]
 484:main.c        ****                         MoveToNextInstruction();   
 1759              		.loc 1 484 0
 1760 0306 FFF7FEFF 		bl	MoveToNextInstruction
 485:main.c        ****                         return Stop;  
 1761              		.loc 1 485 0
 1762 030a 0523     		movs	r3, #5
 1763 030c 1CE1     		b	.L81
 1764              	.L104:
 486:main.c        ****                     }
 487:main.c        ****                 }
 488:main.c        ****             }
 489:main.c        ****             
 490:main.c        ****             if (currentDirection == Stop) {
 1765              		.loc 1 490 0
 1766 030e 964B     		ldr	r3, .L131+24
 1767 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 0312 052B     		cmp	r3, #5
 1769 0314 09D1     		bne	.L109
 491:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 492:main.c        ****                 if (stopBuffer <= 25) {
 1770              		.loc 1 492 0
 1771 0316 954B     		ldr	r3, .L131+28
 1772 0318 1B68     		ldr	r3, [r3]
 1773 031a 192B     		cmp	r3, #25
 1774 031c 01D8     		bhi	.L110
 493:main.c        ****                     return Stop;   
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 41


 1775              		.loc 1 493 0
 1776 031e 0523     		movs	r3, #5
 1777 0320 12E1     		b	.L81
 1778              	.L110:
 494:main.c        ****                 }
 495:main.c        **** 
 496:main.c        ****                 return ForwardCourseCorrection();
 1779              		.loc 1 496 0
 1780 0322 FFF7FEFF 		bl	ForwardCourseCorrection
 1781 0326 0346     		mov	r3, r0
 1782 0328 0EE1     		b	.L81
 1783              	.L109:
 497:main.c        ****             }
 498:main.c        ****                       
 499:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 500:main.c        ****             if (currentDirection == TurnRight) {
 1784              		.loc 1 500 0
 1785 032a 8F4B     		ldr	r3, .L131+24
 1786 032c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 032e 012B     		cmp	r3, #1
 1788 0330 2BD1     		bne	.L111
 501:main.c        ****                 // If turn started and we are still on black, continue turning
 502:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 503:main.c        ****                 if (turnStartedFlag) {
 1789              		.loc 1 503 0
 1790 0332 8F4B     		ldr	r3, .L131+32
 1791 0334 1B78     		ldrb	r3, [r3]
 1792 0336 DBB2     		uxtb	r3, r3
 1793 0338 002B     		cmp	r3, #0
 1794 033a 0ED0     		beq	.L112
 504:main.c        ****                     if (s4 && (s5 && s6)) {
 1795              		.loc 1 504 0
 1796 033c 874B     		ldr	r3, .L131+12
 1797 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1798 0340 002B     		cmp	r3, #0
 1799 0342 0AD0     		beq	.L112
 1800              		.loc 1 504 0 is_stmt 0 discriminator 1
 1801 0344 824B     		ldr	r3, .L131
 1802 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1803 0348 002B     		cmp	r3, #0
 1804 034a 06D0     		beq	.L112
 1805              		.loc 1 504 0 discriminator 2
 1806 034c 814B     		ldr	r3, .L131+4
 1807 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 0350 002B     		cmp	r3, #0
 1809 0352 02D0     		beq	.L112
 505:main.c        ****                         turnStartedFlag = 0;
 1810              		.loc 1 505 0 is_stmt 1
 1811 0354 864B     		ldr	r3, .L131+32
 1812 0356 0022     		movs	r2, #0
 1813 0358 1A70     		strb	r2, [r3]
 1814              	.L112:
 506:main.c        ****                     }
 507:main.c        ****                 }
 508:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1815              		.loc 1 508 0
 1816 035a 854B     		ldr	r3, .L131+32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 42


 1817 035c 1B78     		ldrb	r3, [r3]
 1818 035e DBB2     		uxtb	r3, r3
 1819 0360 002B     		cmp	r3, #0
 1820 0362 10D1     		bne	.L113
 1821              		.loc 1 508 0 is_stmt 0 discriminator 1
 1822 0364 7D4B     		ldr	r3, .L131+12
 1823 0366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1824 0368 002B     		cmp	r3, #0
 1825 036a 0CD1     		bne	.L113
 1826              		.loc 1 508 0 discriminator 2
 1827 036c 784B     		ldr	r3, .L131
 1828 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1829 0370 002B     		cmp	r3, #0
 1830 0372 03D0     		beq	.L114
 1831              		.loc 1 508 0 discriminator 3
 1832 0374 774B     		ldr	r3, .L131+4
 1833 0376 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 0378 002B     		cmp	r3, #0
 1835 037a 04D1     		bne	.L113
 1836              	.L114:
 509:main.c        ****                     turnFinishedFlag = 1;
 1837              		.loc 1 509 0 is_stmt 1
 1838 037c 794B     		ldr	r3, .L131+20
 1839 037e 0122     		movs	r2, #1
 1840 0380 1A70     		strb	r2, [r3]
 510:main.c        ****                     return ForwardAfterTurn;
 1841              		.loc 1 510 0
 1842 0382 0823     		movs	r3, #8
 1843 0384 E0E0     		b	.L81
 1844              	.L113:
 511:main.c        ****                 }
 512:main.c        ****                 else
 513:main.c        ****                 {
 514:main.c        ****                     return TurnRight;
 1845              		.loc 1 514 0
 1846 0386 0123     		movs	r3, #1
 1847 0388 DEE0     		b	.L81
 1848              	.L111:
 515:main.c        ****                 }
 516:main.c        ****             }
 517:main.c        ****             
 518:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 519:main.c        ****             if (!s4) {
 1849              		.loc 1 519 0
 1850 038a 744B     		ldr	r3, .L131+12
 1851 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 038e 002B     		cmp	r3, #0
 1853 0390 04D1     		bne	.L115
 520:main.c        ****                 turnStartedFlag = 1;
 1854              		.loc 1 520 0
 1855 0392 774B     		ldr	r3, .L131+32
 1856 0394 0122     		movs	r2, #1
 1857 0396 1A70     		strb	r2, [r3]
 521:main.c        ****                 return TurnRight;
 1858              		.loc 1 521 0
 1859 0398 0123     		movs	r3, #1
 1860 039a D5E0     		b	.L81
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 43


 1861              	.L115:
 522:main.c        ****             }
 523:main.c        ****             
 524:main.c        ****             // Otherwise, keep going forward
 525:main.c        ****             return ForwardCourseCorrection(); 
 1862              		.loc 1 525 0
 1863 039c FFF7FEFF 		bl	ForwardCourseCorrection
 1864 03a0 0346     		mov	r3, r0
 1865 03a2 D1E0     		b	.L81
 1866              	.L77:
 526:main.c        ****             break;
 527:main.c        ****         case ForwardUntilTarget:
 528:main.c        ****             // Reset distance on first iteration of this instruction
 529:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1867              		.loc 1 529 0
 1868 03a4 734B     		ldr	r3, .L131+36
 1869 03a6 1B78     		ldrb	r3, [r3]
 1870 03a8 DBB2     		uxtb	r3, r3
 1871 03aa 002B     		cmp	r3, #0
 1872 03ac 15D1     		bne	.L116
 1873              	.LBB3:
 530:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1874              		.loc 1 530 0
 1875 03ae 714B     		ldr	r3, .L131+36
 1876 03b0 0122     		movs	r2, #1
 1877 03b2 1A70     		strb	r2, [r3]
 531:main.c        ****                 totalDistance = 0;
 1878              		.loc 1 531 0
 1879 03b4 704B     		ldr	r3, .L131+40
 1880 03b6 4FF00002 		mov	r2, #0
 1881 03ba 1A60     		str	r2, [r3]	@ float
 532:main.c        **** 
 533:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 534:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1882              		.loc 1 534 0
 1883 03bc 6F4B     		ldr	r3, .L131+44
 1884 03be DB68     		ldr	r3, [r3, #12]
 1885 03c0 FB61     		str	r3, [r7, #28]
 535:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 1886              		.loc 1 535 0
 1887 03c2 F869     		ldr	r0, [r7, #28]
 1888 03c4 FFF7FEFF 		bl	__aeabi_i2f
 1889 03c8 0346     		mov	r3, r0
 1890 03ca 796A     		ldr	r1, [r7, #36]	@ float
 1891 03cc 1846     		mov	r0, r3
 1892 03ce FFF7FEFF 		bl	__aeabi_fmul
 1893 03d2 0346     		mov	r3, r0
 1894 03d4 1A46     		mov	r2, r3
 1895 03d6 6A4B     		ldr	r3, .L131+48
 1896 03d8 1A60     		str	r2, [r3]	@ float
 1897              	.L116:
 1898              	.LBE3:
 536:main.c        ****             }
 537:main.c        ****             
 538:main.c        ****             
 539:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 540:main.c        ****             if (totalDistance >= blockSizeTotal) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 44


 1899              		.loc 1 540 0
 1900 03da 674B     		ldr	r3, .L131+40
 1901 03dc 1A68     		ldr	r2, [r3]	@ float
 1902 03de 684B     		ldr	r3, .L131+48
 1903 03e0 1B68     		ldr	r3, [r3]	@ float
 1904 03e2 1946     		mov	r1, r3
 1905 03e4 1046     		mov	r0, r2
 1906 03e6 FFF7FEFF 		bl	__aeabi_fcmpge
 1907 03ea 0346     		mov	r3, r0
 1908 03ec 002B     		cmp	r3, #0
 1909 03ee 03D0     		beq	.L128
 541:main.c        ****                 // Get next instruction
 542:main.c        ****                 MoveToNextInstruction();
 1910              		.loc 1 542 0
 1911 03f0 FFF7FEFF 		bl	MoveToNextInstruction
 543:main.c        **** 
 544:main.c        ****                 
 545:main.c        ****                 return Stop;
 1912              		.loc 1 545 0
 1913 03f4 0523     		movs	r3, #5
 1914 03f6 A7E0     		b	.L81
 1915              	.L128:
 546:main.c        ****             }
 547:main.c        ****             
 548:main.c        ****             return ForwardCourseCorrection();
 1916              		.loc 1 548 0
 1917 03f8 FFF7FEFF 		bl	ForwardCourseCorrection
 1918 03fc 0346     		mov	r3, r0
 1919 03fe A3E0     		b	.L81
 1920              	.L78:
 549:main.c        ****             break;
 550:main.c        ****         case StopAtTarget:
 551:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 552:main.c        ****             // Reset flags
 553:main.c        ****             totalDistance = 0;
 1921              		.loc 1 553 0
 1922 0400 5D4B     		ldr	r3, .L131+40
 1923 0402 4FF00002 		mov	r2, #0
 1924 0406 1A60     		str	r2, [r3]	@ float
 554:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1925              		.loc 1 554 0
 1926 0408 5A4B     		ldr	r3, .L131+36
 1927 040a 0022     		movs	r2, #0
 1928 040c 1A70     		strb	r2, [r3]
 555:main.c        ****             blockSizeTotal = 0;
 1929              		.loc 1 555 0
 1930 040e 5C4B     		ldr	r3, .L131+48
 1931 0410 4FF00002 		mov	r2, #0
 1932 0414 1A60     		str	r2, [r3]	@ float
 556:main.c        ****             
 557:main.c        ****             if (currentDirection == Stop) {
 1933              		.loc 1 557 0
 1934 0416 544B     		ldr	r3, .L131+24
 1935 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1936 041a 052B     		cmp	r3, #5
 1937 041c 08D1     		bne	.L119
 558:main.c        ****                 if (stopBuffer <= 1) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 45


 1938              		.loc 1 558 0
 1939 041e 534B     		ldr	r3, .L131+28
 1940 0420 1B68     		ldr	r3, [r3]
 1941 0422 012B     		cmp	r3, #1
 1942 0424 01D8     		bhi	.L120
 559:main.c        ****                     return Stop;    
 1943              		.loc 1 559 0
 1944 0426 0523     		movs	r3, #5
 1945 0428 8EE0     		b	.L81
 1946              	.L120:
 560:main.c        ****                 } else {
 561:main.c        ****                     stopBuffer = 250;
 1947              		.loc 1 561 0
 1948 042a 504B     		ldr	r3, .L131+28
 1949 042c FA22     		movs	r2, #250
 1950 042e 1A60     		str	r2, [r3]
 1951              	.L119:
 562:main.c        ****                 }
 563:main.c        ****             }
 564:main.c        ****             
 565:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 566:main.c        ****             // Make sure index doesn't go over cap
 567:main.c        ****             // Stop at final location
 568:main.c        ****             if (currentFoodListIndex == 4) {
 1952              		.loc 1 568 0
 1953 0430 544B     		ldr	r3, .L131+52
 1954 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1955 0434 042B     		cmp	r3, #4
 1956 0436 01D1     		bne	.L121
 569:main.c        ****                 return Stop;    
 1957              		.loc 1 569 0
 1958 0438 0523     		movs	r3, #5
 1959 043a 85E0     		b	.L81
 1960              	.L121:
 570:main.c        ****             }
 571:main.c        ****             
 572:main.c        ****             currentFoodListIndex++;
 1961              		.loc 1 572 0
 1962 043c 514B     		ldr	r3, .L131+52
 1963 043e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1964 0440 0133     		adds	r3, r3, #1
 1965 0442 DAB2     		uxtb	r2, r3
 1966 0444 4F4B     		ldr	r3, .L131+52
 1967 0446 1A70     		strb	r2, [r3]
 573:main.c        ****             instructionIndex = 0;
 1968              		.loc 1 573 0
 1969 0448 4F4B     		ldr	r3, .L131+56
 1970 044a 0022     		movs	r2, #0
 1971 044c 1A60     		str	r2, [r3]
 574:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 1972              		.loc 1 574 0
 1973 044e 4D4B     		ldr	r3, .L131+52
 1974 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 0452 1A46     		mov	r2, r3
 1976 0454 494B     		ldr	r3, .L131+44
 1977 0456 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1978 0458 4C49     		ldr	r1, .L131+60
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 46


 1979 045a 4D48     		ldr	r0, .L131+64
 1980 045c FFF7FEFF 		bl	findPathNewOrientation
 1981 0460 0246     		mov	r2, r0
 1982 0462 4C4B     		ldr	r3, .L131+68
 1983 0464 1A60     		str	r2, [r3]
 575:main.c        ****             numSteps = instructionsListLength();
 1984              		.loc 1 575 0
 1985 0466 FFF7FEFF 		bl	instructionsListLength
 1986 046a 0346     		mov	r3, r0
 1987 046c 1A46     		mov	r2, r3
 1988 046e 4A4B     		ldr	r3, .L131+72
 1989 0470 1A60     		str	r2, [r3]
 576:main.c        ****     
 577:main.c        ****             currentInstruction = GetInstructionAtIndex();
 1990              		.loc 1 577 0
 1991 0472 424C     		ldr	r4, .L131+44
 1992 0474 3B46     		mov	r3, r7
 1993 0476 1846     		mov	r0, r3
 1994 0478 FFF7FEFF 		bl	GetInstructionAtIndex
 1995 047c 2546     		mov	r5, r4
 1996 047e 3C46     		mov	r4, r7
 1997 0480 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1998 0482 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1999 0484 2368     		ldr	r3, [r4]
 2000 0486 2B60     		str	r3, [r5]
 578:main.c        **** 
 579:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2001              		.loc 1 579 0
 2002 0488 424B     		ldr	r3, .L131+68
 2003 048a 1968     		ldr	r1, [r3]
 2004 048c 3E4B     		ldr	r3, .L131+56
 2005 048e 1A68     		ldr	r2, [r3]
 2006 0490 1346     		mov	r3, r2
 2007 0492 9B00     		lsls	r3, r3, #2
 2008 0494 1344     		add	r3, r3, r2
 2009 0496 9B00     		lsls	r3, r3, #2
 2010 0498 0B44     		add	r3, r3, r1
 2011 049a 5B68     		ldr	r3, [r3, #4]
 2012 049c DAB2     		uxtb	r2, r3
 2013 049e 3F4B     		ldr	r3, .L131+76
 2014 04a0 1A70     		strb	r2, [r3]
 580:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2015              		.loc 1 580 0
 2016 04a2 3C4B     		ldr	r3, .L131+68
 2017 04a4 1968     		ldr	r1, [r3]
 2018 04a6 384B     		ldr	r3, .L131+56
 2019 04a8 1A68     		ldr	r2, [r3]
 2020 04aa 1346     		mov	r3, r2
 2021 04ac 9B00     		lsls	r3, r3, #2
 2022 04ae 1344     		add	r3, r3, r2
 2023 04b0 9B00     		lsls	r3, r3, #2
 2024 04b2 0B44     		add	r3, r3, r1
 2025 04b4 9B68     		ldr	r3, [r3, #8]
 2026 04b6 DAB2     		uxtb	r2, r3
 2027 04b8 394B     		ldr	r3, .L131+80
 2028 04ba 1A70     		strb	r2, [r3]
 581:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 47


 582:main.c        ****             return Stop;
 2029              		.loc 1 582 0
 2030 04bc 0523     		movs	r3, #5
 2031 04be 43E0     		b	.L81
 2032              	.L76:
 583:main.c        ****             break;
 584:main.c        ****         case uTurn:
 585:main.c        ****             if (currentDirection == Stop) {
 2033              		.loc 1 585 0
 2034 04c0 294B     		ldr	r3, .L131+24
 2035 04c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2036 04c4 052B     		cmp	r3, #5
 2037 04c6 08D1     		bne	.L122
 586:main.c        ****                 if (stopBuffer <= 50) {
 2038              		.loc 1 586 0
 2039 04c8 284B     		ldr	r3, .L131+28
 2040 04ca 1B68     		ldr	r3, [r3]
 2041 04cc 322B     		cmp	r3, #50
 2042 04ce 01D8     		bhi	.L123
 587:main.c        ****                     return Stop;    
 2043              		.loc 1 587 0
 2044 04d0 0523     		movs	r3, #5
 2045 04d2 39E0     		b	.L81
 2046              	.L123:
 588:main.c        ****                 } else {
 589:main.c        ****                     stopBuffer = 100;    
 2047              		.loc 1 589 0
 2048 04d4 254B     		ldr	r3, .L131+28
 2049 04d6 6422     		movs	r2, #100
 2050 04d8 1A60     		str	r2, [r3]
 2051              	.L122:
 590:main.c        ****                 }
 591:main.c        ****             }
 592:main.c        ****             
 593:main.c        ****             
 594:main.c        ****             if (!uTurnStartedFlag) {
 2052              		.loc 1 594 0
 2053 04da 324B     		ldr	r3, .L131+84
 2054 04dc 1B78     		ldrb	r3, [r3]
 2055 04de DBB2     		uxtb	r3, r3
 2056 04e0 002B     		cmp	r3, #0
 2057 04e2 07D1     		bne	.L124
 595:main.c        ****                 uTurnStartedFlag = 1;
 2058              		.loc 1 595 0
 2059 04e4 2F4B     		ldr	r3, .L131+84
 2060 04e6 0122     		movs	r2, #1
 2061 04e8 1A70     		strb	r2, [r3]
 596:main.c        ****                 spinCourseCorrectionStarted = 0;
 2062              		.loc 1 596 0
 2063 04ea 2F4B     		ldr	r3, .L131+88
 2064 04ec 0022     		movs	r2, #0
 2065 04ee 1A70     		strb	r2, [r3]
 597:main.c        ****                 return Spin180;
 2066              		.loc 1 597 0
 2067 04f0 0A23     		movs	r3, #10
 2068 04f2 29E0     		b	.L81
 2069              	.L124:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 48


 598:main.c        ****             } 
 599:main.c        ****             
 600:main.c        ****             if (uTurnFinishedFlag) {
 2070              		.loc 1 600 0
 2071 04f4 2D4B     		ldr	r3, .L131+92
 2072 04f6 1B78     		ldrb	r3, [r3]
 2073 04f8 DBB2     		uxtb	r3, r3
 2074 04fa 002B     		cmp	r3, #0
 2075 04fc 03D0     		beq	.L125
 601:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 602:main.c        ****                 MoveToNextInstruction();
 2076              		.loc 1 602 0
 2077 04fe FFF7FEFF 		bl	MoveToNextInstruction
 603:main.c        ****                 return Stop;    
 2078              		.loc 1 603 0
 2079 0502 0523     		movs	r3, #5
 2080 0504 20E0     		b	.L81
 2081              	.L125:
 604:main.c        ****             }
 605:main.c        ****             
 606:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 607:main.c        ****             if (uTurnStartedFlag) {
 2082              		.loc 1 607 0
 2083 0506 274B     		ldr	r3, .L131+84
 2084 0508 1B78     		ldrb	r3, [r3]
 2085 050a DBB2     		uxtb	r3, r3
 2086 050c 002B     		cmp	r3, #0
 2087 050e 16D0     		beq	.L126
 608:main.c        ****                 if (!s5 && !s6) {
 2088              		.loc 1 608 0
 2089 0510 0F4B     		ldr	r3, .L131
 2090 0512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2091 0514 002B     		cmp	r3, #0
 2092 0516 12D1     		bne	.L126
 2093              		.loc 1 608 0 is_stmt 0 discriminator 1
 2094 0518 0E4B     		ldr	r3, .L131+4
 2095 051a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2096 051c 002B     		cmp	r3, #0
 2097 051e 0ED1     		bne	.L126
 609:main.c        ****                     totalLineCount = 0;
 2098              		.loc 1 609 0 is_stmt 1
 2099 0520 234B     		ldr	r3, .L131+96
 2100 0522 0022     		movs	r2, #0
 2101 0524 1A70     		strb	r2, [r3]
 610:main.c        ****                     lineCount = 0;
 2102              		.loc 1 610 0
 2103 0526 234B     		ldr	r3, .L131+100
 2104 0528 0022     		movs	r2, #0
 2105 052a 1A70     		strb	r2, [r3]
 611:main.c        ****                     tooEarlyFlag = 0;
 2106              		.loc 1 611 0
 2107 052c 224B     		ldr	r3, .L131+104
 2108 052e 0022     		movs	r2, #0
 2109 0530 1A70     		strb	r2, [r3]
 612:main.c        ****                     tooLateFlag = 0;
 2110              		.loc 1 612 0
 2111 0532 224B     		ldr	r3, .L131+108
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 49


 2112 0534 0022     		movs	r2, #0
 2113 0536 1A70     		strb	r2, [r3]
 613:main.c        ****                     uTurnFinishedFlag = 1;    
 2114              		.loc 1 613 0
 2115 0538 1C4B     		ldr	r3, .L131+92
 2116 053a 0122     		movs	r2, #1
 2117 053c 1A70     		strb	r2, [r3]
 2118              	.L126:
 614:main.c        ****                 }    
 615:main.c        ****             }
 616:main.c        ****             
 617:main.c        ****             return SpinCourseCorrection();
 2119              		.loc 1 617 0
 2120 053e FFF7FEFF 		bl	SpinCourseCorrection
 2121 0542 0346     		mov	r3, r0
 2122 0544 00E0     		b	.L81
 2123              	.L71:
 618:main.c        ****             break;
 619:main.c        ****         default:
 620:main.c        ****             return Stop;
 2124              		.loc 1 620 0
 2125 0546 0523     		movs	r3, #5
 2126              	.L81:
 621:main.c        ****             break;
 622:main.c        ****     }
 623:main.c        ****     return Stop;
 624:main.c        **** }
 2127              		.loc 1 624 0
 2128 0548 1846     		mov	r0, r3
 2129 054a 2837     		adds	r7, r7, #40
 2130              		.cfi_def_cfa_offset 16
 2131 054c BD46     		mov	sp, r7
 2132              		.cfi_def_cfa_register 13
 2133              		@ sp needed
 2134 054e B0BD     		pop	{r4, r5, r7, pc}
 2135              	.L132:
 2136              		.align	2
 2137              	.L131:
 2138 0550 00000000 		.word	s5
 2139 0554 00000000 		.word	s6
 2140 0558 00000000 		.word	forwardBuffer
 2141 055c 00000000 		.word	s4
 2142 0560 00000000 		.word	firstTurnIteration
 2143 0564 37000000 		.word	turnFinishedFlag
 2144 0568 00000000 		.word	currentDirection
 2145 056c 00000000 		.word	stopBuffer
 2146 0570 36000000 		.word	turnStartedFlag
 2147 0574 38000000 		.word	forwardUntilTargetStartedFlag
 2148 0578 00000000 		.word	totalDistance
 2149 057c 00000000 		.word	currentInstruction
 2150 0580 00000000 		.word	blockSizeTotal
 2151 0584 00000000 		.word	currentFoodListIndex
 2152 0588 14000000 		.word	instructionIndex
 2153 058c 00000000 		.word	food_list
 2154 0590 00000000 		.word	map
 2155 0594 00000000 		.word	instructionList
 2156 0598 00000000 		.word	numSteps
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 50


 2157 059c 3E000000 		.word	currentIgnoreL
 2158 05a0 45000000 		.word	currentIgnoreR
 2159 05a4 39000000 		.word	uTurnStartedFlag
 2160 05a8 3D000000 		.word	spinCourseCorrectionStarted
 2161 05ac 3A000000 		.word	uTurnFinishedFlag
 2162 05b0 3F000000 		.word	totalLineCount
 2163 05b4 40000000 		.word	lineCount
 2164 05b8 42000000 		.word	tooEarlyFlag
 2165 05bc 43000000 		.word	tooLateFlag
 2166              		.cfi_endproc
 2167              	.LFE76:
 2168              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2169              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2170              		.align	2
 2171              		.global	MoveToNextInstruction
 2172              		.thumb
 2173              		.thumb_func
 2174              		.type	MoveToNextInstruction, %function
 2175              	MoveToNextInstruction:
 2176              	.LFB77:
 625:main.c        **** /*
 626:main.c        **** // Calculate total blocksize to travel until target
 627:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 628:main.c        ****     float totalBlockSize;
 629:main.c        ****     
 630:main.c        ****     // Check for Row, Col that target is 
 631:main.c        ****     int targetRow = food_list[0][0];
 632:main.c        ****     int targetCol = food_list[0][1];
 633:main.c        ****     
 634:main.c        ****     int pathCount = 0;
 635:main.c        ****     currentRobotOrientation = currentInstruction.expectedOrientation;
 636:main.c        ****     // Depending on the robot orientation
 637:main.c        ****     // count++ if row, col is 8
 638:main.c        ****     // count reset if row, col is 1 or 0
 639:main.c        ****     // save count if row, col is 9
 640:main.c        ****     switch (currentRobotOrientation) {
 641:main.c        ****         case Up:
 642:main.c        ****             // Column
 643:main.c        ****             // Start from Bottom (since we're facing up)
 644:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 645:main.c        ****                 if (map[i][targetCol] == 9) {
 646:main.c        ****                     break;    
 647:main.c        ****                 }
 648:main.c        ****                 if (map[i][targetCol] == 0) {
 649:main.c        ****                     pathCount++;    
 650:main.c        ****                 }
 651:main.c        ****                 if (map[i][targetCol] == 1) {
 652:main.c        ****                     pathCount = 0;
 653:main.c        ****                 }
 654:main.c        ****             }
 655:main.c        ****             break;
 656:main.c        ****         case Down:
 657:main.c        ****             // Target Column, Check Row
 658:main.c        ****             // Start from Top
 659:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 660:main.c        ****                 if (map[i][targetCol] == 9) {
 661:main.c        ****                     break;    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 51


 662:main.c        ****                 }
 663:main.c        ****                 if (map[i][targetCol] == 0) {
 664:main.c        ****                     pathCount++;    
 665:main.c        ****                 }
 666:main.c        ****                 if (map[i][targetCol] == 1) {
 667:main.c        ****                     pathCount = 0;
 668:main.c        ****                 }
 669:main.c        ****             }
 670:main.c        ****             break;
 671:main.c        ****         case Left:
 672:main.c        ****             // Target Row, Check Col
 673:main.c        ****             // Start from Right
 674:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 675:main.c        ****                 if (map[targetRow][i] == 9) {
 676:main.c        ****                     break;    
 677:main.c        ****                 }
 678:main.c        ****                 if (map[targetRow][i] == 0) {
 679:main.c        ****                     pathCount++;    
 680:main.c        ****                 }
 681:main.c        ****                 if (map[i][targetCol] == 1) {
 682:main.c        ****                     pathCount = 0;
 683:main.c        ****                 }
 684:main.c        ****             }
 685:main.c        ****             break;
 686:main.c        ****         
 687:main.c        ****         case Right:
 688:main.c        ****             // Target Row, Check Col
 689:main.c        ****             // Start from Left
 690:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 691:main.c        ****                 if (map[targetRow][i] == 9) {
 692:main.c        ****                     break;    
 693:main.c        ****                 }
 694:main.c        ****                 if (map[targetRow][i] == 0) {
 695:main.c        ****                     pathCount++;    
 696:main.c        ****                 }
 697:main.c        ****                 if (map[i][targetCol] == 1) {
 698:main.c        ****                     pathCount = 0;
 699:main.c        ****                 }
 700:main.c        **** 
 701:main.c        ****             }
 702:main.c        ****             break;
 703:main.c        ****     }
 704:main.c        ****     totalBlockSize = blockSize * pathCount;
 705:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 706:main.c        ****     return totalBlockSize;
 707:main.c        **** }
 708:main.c        **** */
 709:main.c        **** // get next instruction
 710:main.c        **** void MoveToNextInstruction() {
 2177              		.loc 1 710 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 0
 2180              		@ frame_needed = 1, uses_anonymous_args = 0
 2181              		@ link register save eliminated.
 2182 0000 80B4     		push	{r7}
 2183              		.cfi_def_cfa_offset 4
 2184              		.cfi_offset 7, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 52


 2185 0002 00AF     		add	r7, sp, #0
 2186              		.cfi_def_cfa_register 7
 711:main.c        ****     currentIgnoreL = 0;
 2187              		.loc 1 711 0
 2188 0004 144B     		ldr	r3, .L134
 2189 0006 0022     		movs	r2, #0
 2190 0008 1A70     		strb	r2, [r3]
 712:main.c        ****     currentIgnoreR = 0;
 2191              		.loc 1 712 0
 2192 000a 144B     		ldr	r3, .L134+4
 2193 000c 0022     		movs	r2, #0
 2194 000e 1A70     		strb	r2, [r3]
 713:main.c        ****     instructionIndex++;
 2195              		.loc 1 713 0
 2196 0010 134B     		ldr	r3, .L134+8
 2197 0012 1B68     		ldr	r3, [r3]
 2198 0014 0133     		adds	r3, r3, #1
 2199 0016 124A     		ldr	r2, .L134+8
 2200 0018 1360     		str	r3, [r2]
 714:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2201              		.loc 1 714 0
 2202 001a 124B     		ldr	r3, .L134+12
 2203 001c 1968     		ldr	r1, [r3]
 2204 001e 104B     		ldr	r3, .L134+8
 2205 0020 1A68     		ldr	r2, [r3]
 2206 0022 1346     		mov	r3, r2
 2207 0024 9B00     		lsls	r3, r3, #2
 2208 0026 1344     		add	r3, r3, r2
 2209 0028 9B00     		lsls	r3, r3, #2
 2210 002a 0B44     		add	r3, r3, r1
 2211 002c 5B68     		ldr	r3, [r3, #4]
 2212 002e DAB2     		uxtb	r2, r3
 2213 0030 094B     		ldr	r3, .L134
 2214 0032 1A70     		strb	r2, [r3]
 715:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2215              		.loc 1 715 0
 2216 0034 0B4B     		ldr	r3, .L134+12
 2217 0036 1968     		ldr	r1, [r3]
 2218 0038 094B     		ldr	r3, .L134+8
 2219 003a 1A68     		ldr	r2, [r3]
 2220 003c 1346     		mov	r3, r2
 2221 003e 9B00     		lsls	r3, r3, #2
 2222 0040 1344     		add	r3, r3, r2
 2223 0042 9B00     		lsls	r3, r3, #2
 2224 0044 0B44     		add	r3, r3, r1
 2225 0046 9B68     		ldr	r3, [r3, #8]
 2226 0048 DAB2     		uxtb	r2, r3
 2227 004a 044B     		ldr	r3, .L134+4
 2228 004c 1A70     		strb	r2, [r3]
 716:main.c        **** 
 717:main.c        **** }
 2229              		.loc 1 717 0
 2230 004e 00BF     		nop
 2231 0050 BD46     		mov	sp, r7
 2232              		.cfi_def_cfa_register 13
 2233              		@ sp needed
 2234 0052 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 53


 2235              		.cfi_restore 7
 2236              		.cfi_def_cfa_offset 0
 2237 0054 7047     		bx	lr
 2238              	.L135:
 2239 0056 00BF     		.align	2
 2240              	.L134:
 2241 0058 3E000000 		.word	currentIgnoreL
 2242 005c 45000000 		.word	currentIgnoreR
 2243 0060 14000000 		.word	instructionIndex
 2244 0064 00000000 		.word	instructionList
 2245              		.cfi_endproc
 2246              	.LFE77:
 2247              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2248              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2249              		.align	2
 2250              		.global	GetInstructionAtIndex
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	GetInstructionAtIndex, %function
 2254              	GetInstructionAtIndex:
 2255              	.LFB78:
 718:main.c        **** 
 719:main.c        **** Instruction GetInstructionAtIndex() {
 2256              		.loc 1 719 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 32
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261 0000 B0B4     		push	{r4, r5, r7}
 2262              		.cfi_def_cfa_offset 12
 2263              		.cfi_offset 4, -12
 2264              		.cfi_offset 5, -8
 2265              		.cfi_offset 7, -4
 2266 0002 89B0     		sub	sp, sp, #36
 2267              		.cfi_def_cfa_offset 48
 2268 0004 00AF     		add	r7, sp, #0
 2269              		.cfi_def_cfa_register 7
 2270 0006 7860     		str	r0, [r7, #4]
 720:main.c        ****     Instruction nextInstruction;
 721:main.c        ****     // input is list of instructions and robot will react accordingly
 722:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2271              		.loc 1 722 0
 2272 0008 164B     		ldr	r3, .L138
 2273 000a 1968     		ldr	r1, [r3]
 2274 000c 164B     		ldr	r3, .L138+4
 2275 000e 1A68     		ldr	r2, [r3]
 2276 0010 1346     		mov	r3, r2
 2277 0012 9B00     		lsls	r3, r3, #2
 2278 0014 1344     		add	r3, r3, r2
 2279 0016 9B00     		lsls	r3, r3, #2
 2280 0018 0B44     		add	r3, r3, r1
 2281 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2282 001c 3B73     		strb	r3, [r7, #12]
 723:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2283              		.loc 1 723 0
 2284 001e 114B     		ldr	r3, .L138
 2285 0020 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 54


 2286 0022 114B     		ldr	r3, .L138+4
 2287 0024 1A68     		ldr	r2, [r3]
 2288 0026 1346     		mov	r3, r2
 2289 0028 9B00     		lsls	r3, r3, #2
 2290 002a 1344     		add	r3, r3, r2
 2291 002c 9B00     		lsls	r3, r3, #2
 2292 002e 0B44     		add	r3, r3, r1
 2293 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2294 0032 3B77     		strb	r3, [r7, #28]
 724:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2295              		.loc 1 724 0
 2296 0034 0B4B     		ldr	r3, .L138
 2297 0036 1968     		ldr	r1, [r3]
 2298 0038 0B4B     		ldr	r3, .L138+4
 2299 003a 1A68     		ldr	r2, [r3]
 2300 003c 1346     		mov	r3, r2
 2301 003e 9B00     		lsls	r3, r3, #2
 2302 0040 1344     		add	r3, r3, r2
 2303 0042 9B00     		lsls	r3, r3, #2
 2304 0044 0B44     		add	r3, r3, r1
 2305 0046 DB68     		ldr	r3, [r3, #12]
 2306 0048 BB61     		str	r3, [r7, #24]
 725:main.c        ****     return nextInstruction;
 2307              		.loc 1 725 0
 2308 004a 7B68     		ldr	r3, [r7, #4]
 2309 004c 1D46     		mov	r5, r3
 2310 004e 07F10C04 		add	r4, r7, #12
 2311 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2312 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2313 0056 2368     		ldr	r3, [r4]
 2314 0058 2B60     		str	r3, [r5]
 726:main.c        **** }
 2315              		.loc 1 726 0
 2316 005a 7868     		ldr	r0, [r7, #4]
 2317 005c 2437     		adds	r7, r7, #36
 2318              		.cfi_def_cfa_offset 12
 2319 005e BD46     		mov	sp, r7
 2320              		.cfi_def_cfa_register 13
 2321              		@ sp needed
 2322 0060 B0BC     		pop	{r4, r5, r7}
 2323              		.cfi_restore 7
 2324              		.cfi_restore 5
 2325              		.cfi_restore 4
 2326              		.cfi_def_cfa_offset 0
 2327 0062 7047     		bx	lr
 2328              	.L139:
 2329              		.align	2
 2330              	.L138:
 2331 0064 00000000 		.word	instructionList
 2332 0068 14000000 		.word	instructionIndex
 2333              		.cfi_endproc
 2334              	.LFE78:
 2335              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2336              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2337              		.align	2
 2338              		.global	RotateClockwise180Degrees
 2339              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 55


 2340              		.thumb_func
 2341              		.type	RotateClockwise180Degrees, %function
 2342              	RotateClockwise180Degrees:
 2343              	.LFB79:
 727:main.c        **** 
 728:main.c        **** void RotateClockwise180Degrees() {
 2344              		.loc 1 728 0
 2345              		.cfi_startproc
 2346              		@ args = 0, pretend = 0, frame = 8
 2347              		@ frame_needed = 1, uses_anonymous_args = 0
 2348 0000 80B5     		push	{r7, lr}
 2349              		.cfi_def_cfa_offset 8
 2350              		.cfi_offset 7, -8
 2351              		.cfi_offset 14, -4
 2352 0002 82B0     		sub	sp, sp, #8
 2353              		.cfi_def_cfa_offset 16
 2354 0004 00AF     		add	r7, sp, #0
 2355              		.cfi_def_cfa_register 7
 729:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2356              		.loc 1 729 0
 2357 0006 49F20873 		movw	r3, #38664
 2358 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 730:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2359              		.loc 1 730 0
 2360 000c 49F20873 		movw	r3, #38664
 2361 0010 3B80     		strh	r3, [r7]	@ movhi
 731:main.c        ****     PWM_1_WriteCompare(count1);
 2362              		.loc 1 731 0
 2363 0012 7B88     		ldrh	r3, [r7, #2]
 2364 0014 1846     		mov	r0, r3
 2365 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 732:main.c        ****     PWM_2_WriteCompare(count2);
 2366              		.loc 1 732 0
 2367 001a 3B88     		ldrh	r3, [r7]
 2368 001c 1846     		mov	r0, r3
 2369 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 733:main.c        ****     
 734:main.c        ****     int quadPulseCount = 0;
 2370              		.loc 1 734 0
 2371 0022 0023     		movs	r3, #0
 2372 0024 7B60     		str	r3, [r7, #4]
 735:main.c        ****     QuadDec_M1_SetCounter(0);
 2373              		.loc 1 735 0
 2374 0026 0020     		movs	r0, #0
 2375 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 736:main.c        ****     // Before 180, save initial configuration
 737:main.c        ****     if (!s3) {
 2376              		.loc 1 737 0
 2377 002c 3A4B     		ldr	r3, .L153
 2378 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 0030 002B     		cmp	r3, #0
 2380 0032 06D1     		bne	.L141
 738:main.c        ****         totalLineCount++;    
 2381              		.loc 1 738 0
 2382 0034 394B     		ldr	r3, .L153+4
 2383 0036 1B78     		ldrb	r3, [r3]
 2384 0038 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 56


 2385 003a 0133     		adds	r3, r3, #1
 2386 003c DAB2     		uxtb	r2, r3
 2387 003e 374B     		ldr	r3, .L153+4
 2388 0040 1A70     		strb	r2, [r3]
 2389              	.L141:
 739:main.c        ****     }
 740:main.c        ****     if (!s4) {
 2390              		.loc 1 740 0
 2391 0042 374B     		ldr	r3, .L153+8
 2392 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 0046 002B     		cmp	r3, #0
 2394 0048 06D1     		bne	.L142
 741:main.c        ****         totalLineCount++;    
 2395              		.loc 1 741 0
 2396 004a 344B     		ldr	r3, .L153+4
 2397 004c 1B78     		ldrb	r3, [r3]
 2398 004e DBB2     		uxtb	r3, r3
 2399 0050 0133     		adds	r3, r3, #1
 2400 0052 DAB2     		uxtb	r2, r3
 2401 0054 314B     		ldr	r3, .L153+4
 2402 0056 1A70     		strb	r2, [r3]
 2403              	.L142:
 742:main.c        ****     }
 743:main.c        ****     if (!s5 || !s6) {
 2404              		.loc 1 743 0
 2405 0058 324B     		ldr	r3, .L153+12
 2406 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2407 005c 002B     		cmp	r3, #0
 2408 005e 03D0     		beq	.L143
 2409              		.loc 1 743 0 is_stmt 0 discriminator 1
 2410 0060 314B     		ldr	r3, .L153+16
 2411 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2412 0064 002B     		cmp	r3, #0
 2413 0066 2AD1     		bne	.L145
 2414              	.L143:
 744:main.c        ****         totalLineCount++;    
 2415              		.loc 1 744 0 is_stmt 1
 2416 0068 2C4B     		ldr	r3, .L153+4
 2417 006a 1B78     		ldrb	r3, [r3]
 2418 006c DBB2     		uxtb	r3, r3
 2419 006e 0133     		adds	r3, r3, #1
 2420 0070 DAB2     		uxtb	r2, r3
 2421 0072 2A4B     		ldr	r3, .L153+4
 2422 0074 1A70     		strb	r2, [r3]
 745:main.c        ****     }
 746:main.c        ****     
 747:main.c        ****     // During 180
 748:main.c        ****     while(quadPulseCount < 210) {
 2423              		.loc 1 748 0
 2424 0076 22E0     		b	.L145
 2425              	.L148:
 749:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2426              		.loc 1 749 0
 2427 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2428 007c 0346     		mov	r3, r0
 2429 007e 7B60     		str	r3, [r7, #4]
 750:main.c        ****         if (!s3) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 57


 2430              		.loc 1 750 0
 2431 0080 254B     		ldr	r3, .L153
 2432 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2433 0084 002B     		cmp	r3, #0
 2434 0086 02D1     		bne	.L146
 751:main.c        ****             onLineFlag = 1;    
 2435              		.loc 1 751 0
 2436 0088 284B     		ldr	r3, .L153+20
 2437 008a 0122     		movs	r2, #1
 2438 008c 1A70     		strb	r2, [r3]
 2439              	.L146:
 752:main.c        ****         }
 753:main.c        ****         
 754:main.c        ****         if (onLineFlag) {
 2440              		.loc 1 754 0
 2441 008e 274B     		ldr	r3, .L153+20
 2442 0090 1B78     		ldrb	r3, [r3]
 2443 0092 DBB2     		uxtb	r3, r3
 2444 0094 002B     		cmp	r3, #0
 2445 0096 06D0     		beq	.L147
 755:main.c        ****             lineCount++;    
 2446              		.loc 1 755 0
 2447 0098 254B     		ldr	r3, .L153+24
 2448 009a 1B78     		ldrb	r3, [r3]
 2449 009c DBB2     		uxtb	r3, r3
 2450 009e 0133     		adds	r3, r3, #1
 2451 00a0 DAB2     		uxtb	r2, r3
 2452 00a2 234B     		ldr	r3, .L153+24
 2453 00a4 1A70     		strb	r2, [r3]
 2454              	.L147:
 756:main.c        ****         }
 757:main.c        ****         
 758:main.c        ****         if (!onLineFlag) {
 2455              		.loc 1 758 0
 2456 00a6 214B     		ldr	r3, .L153+20
 2457 00a8 1B78     		ldrb	r3, [r3]
 2458 00aa DBB2     		uxtb	r3, r3
 2459 00ac 002B     		cmp	r3, #0
 2460 00ae 06D1     		bne	.L145
 759:main.c        ****             if (s3) {
 2461              		.loc 1 759 0
 2462 00b0 194B     		ldr	r3, .L153
 2463 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2464 00b4 002B     		cmp	r3, #0
 2465 00b6 02D0     		beq	.L145
 760:main.c        ****                 onLineFlag = 0;    
 2466              		.loc 1 760 0
 2467 00b8 1C4B     		ldr	r3, .L153+20
 2468 00ba 0022     		movs	r2, #0
 2469 00bc 1A70     		strb	r2, [r3]
 2470              	.L145:
 748:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2471              		.loc 1 748 0
 2472 00be 7B68     		ldr	r3, [r7, #4]
 2473 00c0 D12B     		cmp	r3, #209
 2474 00c2 D9DD     		ble	.L148
 761:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 58


 762:main.c        ****         }
 763:main.c        ****     }
 764:main.c        ****     
 765:main.c        ****     // After 180
 766:main.c        ****     if (totalLineCount == 0) {
 2475              		.loc 1 766 0
 2476 00c4 154B     		ldr	r3, .L153+4
 2477 00c6 1B78     		ldrb	r3, [r3]
 2478 00c8 DBB2     		uxtb	r3, r3
 2479 00ca 002B     		cmp	r3, #0
 2480 00cc 06D1     		bne	.L149
 767:main.c        ****         // we are on no lines
 768:main.c        ****         tooEarlyFlag = 1;
 2481              		.loc 1 768 0
 2482 00ce 194B     		ldr	r3, .L153+28
 2483 00d0 0122     		movs	r2, #1
 2484 00d2 1A70     		strb	r2, [r3]
 769:main.c        ****         QuadDec_M1_SetCounter(0);
 2485              		.loc 1 769 0
 2486 00d4 0020     		movs	r0, #0
 2487 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 770:main.c        ****         return;
 2488              		.loc 1 770 0
 2489 00da 19E0     		b	.L140
 2490              	.L149:
 771:main.c        ****     }
 772:main.c        ****     else if (lineCount > totalLineCount) {
 2491              		.loc 1 772 0
 2492 00dc 144B     		ldr	r3, .L153+24
 2493 00de 1B78     		ldrb	r3, [r3]
 2494 00e0 DAB2     		uxtb	r2, r3
 2495 00e2 0E4B     		ldr	r3, .L153+4
 2496 00e4 1B78     		ldrb	r3, [r3]
 2497 00e6 DBB2     		uxtb	r3, r3
 2498 00e8 9A42     		cmp	r2, r3
 2499 00ea 03D9     		bls	.L151
 773:main.c        ****         tooLateFlag = 1;    
 2500              		.loc 1 773 0
 2501 00ec 124B     		ldr	r3, .L153+32
 2502 00ee 0122     		movs	r2, #1
 2503 00f0 1A70     		strb	r2, [r3]
 2504 00f2 0AE0     		b	.L152
 2505              	.L151:
 774:main.c        ****     }
 775:main.c        ****     else if (lineCount < totalLineCount) {
 2506              		.loc 1 775 0
 2507 00f4 0E4B     		ldr	r3, .L153+24
 2508 00f6 1B78     		ldrb	r3, [r3]
 2509 00f8 DAB2     		uxtb	r2, r3
 2510 00fa 084B     		ldr	r3, .L153+4
 2511 00fc 1B78     		ldrb	r3, [r3]
 2512 00fe DBB2     		uxtb	r3, r3
 2513 0100 9A42     		cmp	r2, r3
 2514 0102 02D2     		bcs	.L152
 776:main.c        ****         tooEarlyFlag = 1;    
 2515              		.loc 1 776 0
 2516 0104 0B4B     		ldr	r3, .L153+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 59


 2517 0106 0122     		movs	r2, #1
 2518 0108 1A70     		strb	r2, [r3]
 2519              	.L152:
 777:main.c        ****     }
 778:main.c        ****     QuadDec_M1_SetCounter(0);
 2520              		.loc 1 778 0
 2521 010a 0020     		movs	r0, #0
 2522 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2523              	.L140:
 779:main.c        **** }
 2524              		.loc 1 779 0
 2525 0110 0837     		adds	r7, r7, #8
 2526              		.cfi_def_cfa_offset 8
 2527 0112 BD46     		mov	sp, r7
 2528              		.cfi_def_cfa_register 13
 2529              		@ sp needed
 2530 0114 80BD     		pop	{r7, pc}
 2531              	.L154:
 2532 0116 00BF     		.align	2
 2533              	.L153:
 2534 0118 00000000 		.word	s3
 2535 011c 3F000000 		.word	totalLineCount
 2536 0120 00000000 		.word	s4
 2537 0124 00000000 		.word	s5
 2538 0128 00000000 		.word	s6
 2539 012c 41000000 		.word	onLineFlag
 2540 0130 40000000 		.word	lineCount
 2541 0134 42000000 		.word	tooEarlyFlag
 2542 0138 43000000 		.word	tooLateFlag
 2543              		.cfi_endproc
 2544              	.LFE79:
 2545              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2546              		.section	.text.SetRobotMovement,"ax",%progbits
 2547              		.align	2
 2548              		.global	SetRobotMovement
 2549              		.thumb
 2550              		.thumb_func
 2551              		.type	SetRobotMovement, %function
 2552              	SetRobotMovement:
 2553              	.LFB80:
 780:main.c        **** 
 781:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 782:main.c        **** void SetRobotMovement() {
 2554              		.loc 1 782 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 24
 2557              		@ frame_needed = 1, uses_anonymous_args = 0
 2558 0000 B0B5     		push	{r4, r5, r7, lr}
 2559              		.cfi_def_cfa_offset 16
 2560              		.cfi_offset 4, -16
 2561              		.cfi_offset 5, -12
 2562              		.cfi_offset 7, -8
 2563              		.cfi_offset 14, -4
 2564 0002 86B0     		sub	sp, sp, #24
 2565              		.cfi_def_cfa_offset 40
 2566 0004 00AF     		add	r7, sp, #0
 2567              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 60


 783:main.c        ****     MoveToNextInstruction();
 2568              		.loc 1 783 0
 2569 0006 FFF7FEFF 		bl	MoveToNextInstruction
 784:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2570              		.loc 1 784 0
 2571 000a 294C     		ldr	r4, .L171
 2572 000c 3B46     		mov	r3, r7
 2573 000e 1846     		mov	r0, r3
 2574 0010 FFF7FEFF 		bl	GetInstructionAtIndex
 2575 0014 2546     		mov	r5, r4
 2576 0016 3C46     		mov	r4, r7
 2577 0018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2578 001a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2579 001c 2368     		ldr	r3, [r4]
 2580 001e 2B60     		str	r3, [r5]
 785:main.c        ****     previousDirection = currentDirection;
 2581              		.loc 1 785 0
 2582 0020 244B     		ldr	r3, .L171+4
 2583 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2584 0024 244B     		ldr	r3, .L171+8
 2585 0026 1A70     		strb	r2, [r3]
 786:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2586              		.loc 1 786 0
 2587 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2588 002c 0346     		mov	r3, r0
 2589 002e 1A46     		mov	r2, r3
 2590 0030 204B     		ldr	r3, .L171+4
 2591 0032 1A70     		strb	r2, [r3]
 787:main.c        ****     // move robot depending on sensors
 788:main.c        ****     switch (currentDirection) {
 2592              		.loc 1 788 0
 2593 0034 1F4B     		ldr	r3, .L171+4
 2594 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2595 0038 0A2B     		cmp	r3, #10
 2596 003a 35D8     		bhi	.L169
 2597 003c 01A2     		adr	r2, .L158
 2598 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2599 0042 00BF     		.p2align 2
 2600              	.L158:
 2601 0044 71000000 		.word	.L157+1
 2602 0048 77000000 		.word	.L159+1
 2603 004c 7D000000 		.word	.L160+1
 2604 0050 89000000 		.word	.L161+1
 2605 0054 83000000 		.word	.L162+1
 2606 0058 8F000000 		.word	.L163+1
 2607 005c A7000000 		.word	.L170+1
 2608 0060 A7000000 		.word	.L170+1
 2609 0064 95000000 		.word	.L166+1
 2610 0068 9B000000 		.word	.L167+1
 2611 006c A1000000 		.word	.L168+1
 2612              		.p2align 1
 2613              	.L157:
 789:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 790:main.c        ****         case Forward:
 791:main.c        ****             moveForward();
 2614              		.loc 1 791 0
 2615 0070 FFF7FEFF 		bl	moveForward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 61


 792:main.c        ****             break;
 2616              		.loc 1 792 0
 2617 0074 18E0     		b	.L156
 2618              	.L159:
 793:main.c        ****         case TurnRight:
 794:main.c        ****             turnRight();
 2619              		.loc 1 794 0
 2620 0076 FFF7FEFF 		bl	turnRight
 795:main.c        ****             break;
 2621              		.loc 1 795 0
 2622 007a 15E0     		b	.L156
 2623              	.L160:
 796:main.c        ****         case TurnLeft:
 797:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2624              		.loc 1 797 0
 2625 007c FFF7FEFF 		bl	turnLeft
 798:main.c        ****             break;
 2626              		.loc 1 798 0
 2627 0080 12E0     		b	.L156
 2628              	.L162:
 799:main.c        ****         case AdjustToTheRight:
 800:main.c        ****             adjustRight();
 2629              		.loc 1 800 0
 2630 0082 FFF7FEFF 		bl	adjustRight
 801:main.c        ****             break;
 2631              		.loc 1 801 0
 2632 0086 0FE0     		b	.L156
 2633              	.L161:
 802:main.c        ****         case AdjustToTheLeft:
 803:main.c        ****             adjustLeft();
 2634              		.loc 1 803 0
 2635 0088 FFF7FEFF 		bl	adjustLeft
 804:main.c        ****             break;
 2636              		.loc 1 804 0
 2637 008c 0CE0     		b	.L156
 2638              	.L163:
 805:main.c        ****         case Stop:
 806:main.c        ****             stopMoving();
 2639              		.loc 1 806 0
 2640 008e FFF7FEFF 		bl	stopMoving
 807:main.c        ****             break;
 2641              		.loc 1 807 0
 2642 0092 09E0     		b	.L156
 2643              	.L166:
 808:main.c        ****         case ForwardAfterTurn:
 809:main.c        ****             moveForward();
 2644              		.loc 1 809 0
 2645 0094 FFF7FEFF 		bl	moveForward
 810:main.c        ****             break;
 2646              		.loc 1 810 0
 2647 0098 06E0     		b	.L156
 2648              	.L167:
 811:main.c        ****         case Backward:
 812:main.c        ****             moveBackward();
 2649              		.loc 1 812 0
 2650 009a FFF7FEFF 		bl	moveBackward
 813:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 62


 2651              		.loc 1 813 0
 2652 009e 03E0     		b	.L156
 2653              	.L168:
 814:main.c        ****         case waitForTurn:
 815:main.c        ****             break;
 816:main.c        ****         case Spin180:
 817:main.c        ****             RotateClockwise180Degrees();
 2654              		.loc 1 817 0
 2655 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 818:main.c        ****             break;
 2656              		.loc 1 818 0
 2657 00a4 00E0     		b	.L156
 2658              	.L170:
 819:main.c        ****         /*case waitForLeftTurn:
 820:main.c        ****             moveForward();
 821:main.c        ****             break;
 822:main.c        ****         case waitForRightTurn:
 823:main.c        ****             moveForward();
 824:main.c        ****             break;*/
 825:main.c        ****         case Unknown:
 826:main.c        ****             // UNKNOWN CONFIGURATION
 827:main.c        ****             break;  
 2659              		.loc 1 827 0
 2660 00a6 00BF     		nop
 2661              	.L156:
 2662              	.L169:
 828:main.c        ****     }
 829:main.c        **** }
 2663              		.loc 1 829 0
 2664 00a8 00BF     		nop
 2665 00aa 1837     		adds	r7, r7, #24
 2666              		.cfi_def_cfa_offset 16
 2667 00ac BD46     		mov	sp, r7
 2668              		.cfi_def_cfa_register 13
 2669              		@ sp needed
 2670 00ae B0BD     		pop	{r4, r5, r7, pc}
 2671              	.L172:
 2672              		.align	2
 2673              	.L171:
 2674 00b0 00000000 		.word	currentInstruction
 2675 00b4 00000000 		.word	currentDirection
 2676 00b8 00000000 		.word	previousDirection
 2677              		.cfi_endproc
 2678              	.LFE80:
 2679              		.size	SetRobotMovement, .-SetRobotMovement
 2680              		.text
 2681              	.Letext0:
 2682              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2683              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2684              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2685              		.file 5 "vars.h"
 2686              		.file 6 "pathfinding.h"
 2687              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2688              		.file 8 "map.h"
 2689              		.section	.debug_info,"",%progbits
 2690              	.Ldebug_info0:
 2691 0000 BB090000 		.4byte	0x9bb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 63


 2692 0004 0400     		.2byte	0x4
 2693 0006 00000000 		.4byte	.Ldebug_abbrev0
 2694 000a 04       		.byte	0x4
 2695 000b 01       		.uleb128 0x1
 2696 000c F5000000 		.4byte	.LASF153
 2697 0010 0C       		.byte	0xc
 2698 0011 66040000 		.4byte	.LASF154
 2699 0015 85000000 		.4byte	.LASF155
 2700 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2701 001d 00000000 		.4byte	0
 2702 0021 00000000 		.4byte	.Ldebug_line0
 2703 0025 02       		.uleb128 0x2
 2704 0026 01       		.byte	0x1
 2705 0027 06       		.byte	0x6
 2706 0028 79000000 		.4byte	.LASF0
 2707 002c 02       		.uleb128 0x2
 2708 002d 01       		.byte	0x1
 2709 002e 08       		.byte	0x8
 2710 002f 15060000 		.4byte	.LASF1
 2711 0033 02       		.uleb128 0x2
 2712 0034 02       		.byte	0x2
 2713 0035 05       		.byte	0x5
 2714 0036 47060000 		.4byte	.LASF2
 2715 003a 02       		.uleb128 0x2
 2716 003b 02       		.byte	0x2
 2717 003c 07       		.byte	0x7
 2718 003d 1B040000 		.4byte	.LASF3
 2719 0041 03       		.uleb128 0x3
 2720 0042 5C040000 		.4byte	.LASF12
 2721 0046 02       		.byte	0x2
 2722 0047 3F       		.byte	0x3f
 2723 0048 4C000000 		.4byte	0x4c
 2724 004c 02       		.uleb128 0x2
 2725 004d 04       		.byte	0x4
 2726 004e 05       		.byte	0x5
 2727 004f 84020000 		.4byte	.LASF4
 2728 0053 02       		.uleb128 0x2
 2729 0054 04       		.byte	0x4
 2730 0055 07       		.byte	0x7
 2731 0056 C0030000 		.4byte	.LASF5
 2732 005a 02       		.uleb128 0x2
 2733 005b 08       		.byte	0x8
 2734 005c 05       		.byte	0x5
 2735 005d ED020000 		.4byte	.LASF6
 2736 0061 02       		.uleb128 0x2
 2737 0062 08       		.byte	0x8
 2738 0063 07       		.byte	0x7
 2739 0064 A5010000 		.4byte	.LASF7
 2740 0068 04       		.uleb128 0x4
 2741 0069 04       		.byte	0x4
 2742 006a 05       		.byte	0x5
 2743 006b 696E7400 		.ascii	"int\000"
 2744 006f 02       		.uleb128 0x2
 2745 0070 04       		.byte	0x4
 2746 0071 07       		.byte	0x7
 2747 0072 39070000 		.4byte	.LASF8
 2748 0076 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 64


 2749 0077 08       		.byte	0x8
 2750 0078 04       		.byte	0x4
 2751 0079 18070000 		.4byte	.LASF9
 2752 007d 02       		.uleb128 0x2
 2753 007e 04       		.byte	0x4
 2754 007f 07       		.byte	0x7
 2755 0080 0C050000 		.4byte	.LASF10
 2756 0084 02       		.uleb128 0x2
 2757 0085 01       		.byte	0x1
 2758 0086 08       		.byte	0x8
 2759 0087 24070000 		.4byte	.LASF11
 2760 008b 03       		.uleb128 0x3
 2761 008c 0D060000 		.4byte	.LASF13
 2762 0090 03       		.byte	0x3
 2763 0091 2C       		.byte	0x2c
 2764 0092 41000000 		.4byte	0x41
 2765 0096 05       		.uleb128 0x5
 2766 0097 E7020000 		.4byte	.LASF14
 2767 009b 04       		.byte	0x4
 2768 009c E701     		.2byte	0x1e7
 2769 009e 2C000000 		.4byte	0x2c
 2770 00a2 05       		.uleb128 0x5
 2771 00a3 23060000 		.4byte	.LASF15
 2772 00a7 04       		.byte	0x4
 2773 00a8 E801     		.2byte	0x1e8
 2774 00aa 3A000000 		.4byte	0x3a
 2775 00ae 05       		.uleb128 0x5
 2776 00af 4D030000 		.4byte	.LASF16
 2777 00b3 04       		.byte	0x4
 2778 00b4 E901     		.2byte	0x1e9
 2779 00b6 53000000 		.4byte	0x53
 2780 00ba 05       		.uleb128 0x5
 2781 00bb 4C040000 		.4byte	.LASF17
 2782 00bf 04       		.byte	0x4
 2783 00c0 EA01     		.2byte	0x1ea
 2784 00c2 25000000 		.4byte	0x25
 2785 00c6 05       		.uleb128 0x5
 2786 00c7 75080000 		.4byte	.LASF18
 2787 00cb 04       		.byte	0x4
 2788 00cc EB01     		.2byte	0x1eb
 2789 00ce 33000000 		.4byte	0x33
 2790 00d2 02       		.uleb128 0x2
 2791 00d3 04       		.byte	0x4
 2792 00d4 04       		.byte	0x4
 2793 00d5 B2050000 		.4byte	.LASF19
 2794 00d9 02       		.uleb128 0x2
 2795 00da 08       		.byte	0x8
 2796 00db 04       		.byte	0x4
 2797 00dc FB020000 		.4byte	.LASF20
 2798 00e0 06       		.uleb128 0x6
 2799 00e1 96000000 		.4byte	0x96
 2800 00e5 06       		.uleb128 0x6
 2801 00e6 AE000000 		.4byte	0xae
 2802 00ea 07       		.uleb128 0x7
 2803 00eb 96000000 		.4byte	0x96
 2804 00ef FA000000 		.4byte	0xfa
 2805 00f3 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 65


 2806 00f4 7D000000 		.4byte	0x7d
 2807 00f8 03       		.byte	0x3
 2808 00f9 00       		.byte	0
 2809 00fa 09       		.uleb128 0x9
 2810 00fb A5030000 		.4byte	.LASF49
 2811 00ff 20       		.byte	0x20
 2812 0100 05       		.byte	0x5
 2813 0101 28       		.byte	0x28
 2814 0102 D3010000 		.4byte	0x1d3
 2815 0106 0A       		.uleb128 0xa
 2816 0107 46070000 		.4byte	.LASF21
 2817 010b 05       		.byte	0x5
 2818 010c 2A       		.byte	0x2a
 2819 010d BA000000 		.4byte	0xba
 2820 0111 00       		.byte	0
 2821 0112 0A       		.uleb128 0xa
 2822 0113 4B070000 		.4byte	.LASF22
 2823 0117 05       		.byte	0x5
 2824 0118 2B       		.byte	0x2b
 2825 0119 96000000 		.4byte	0x96
 2826 011d 01       		.byte	0x1
 2827 011e 0A       		.uleb128 0xa
 2828 011f 90070000 		.4byte	.LASF23
 2829 0123 05       		.byte	0x5
 2830 0124 2C       		.byte	0x2c
 2831 0125 C6000000 		.4byte	0xc6
 2832 0129 02       		.byte	0x2
 2833 012a 0A       		.uleb128 0xa
 2834 012b 9D060000 		.4byte	.LASF24
 2835 012f 05       		.byte	0x5
 2836 0130 2D       		.byte	0x2d
 2837 0131 C6000000 		.4byte	0xc6
 2838 0135 04       		.byte	0x4
 2839 0136 0A       		.uleb128 0xa
 2840 0137 BC080000 		.4byte	.LASF25
 2841 013b 05       		.byte	0x5
 2842 013c 2E       		.byte	0x2e
 2843 013d C6000000 		.4byte	0xc6
 2844 0141 06       		.byte	0x6
 2845 0142 0A       		.uleb128 0xa
 2846 0143 D6010000 		.4byte	.LASF26
 2847 0147 05       		.byte	0x5
 2848 0148 2F       		.byte	0x2f
 2849 0149 C6000000 		.4byte	0xc6
 2850 014d 08       		.byte	0x8
 2851 014e 0A       		.uleb128 0xa
 2852 014f 29070000 		.4byte	.LASF27
 2853 0153 05       		.byte	0x5
 2854 0154 30       		.byte	0x30
 2855 0155 C6000000 		.4byte	0xc6
 2856 0159 0A       		.byte	0xa
 2857 015a 0A       		.uleb128 0xa
 2858 015b B3080000 		.4byte	.LASF28
 2859 015f 05       		.byte	0x5
 2860 0160 31       		.byte	0x31
 2861 0161 C6000000 		.4byte	0xc6
 2862 0165 0C       		.byte	0xc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 66


 2863 0166 0A       		.uleb128 0xa
 2864 0167 92010000 		.4byte	.LASF29
 2865 016b 05       		.byte	0x5
 2866 016c 32       		.byte	0x32
 2867 016d C6000000 		.4byte	0xc6
 2868 0171 0E       		.byte	0xe
 2869 0172 0A       		.uleb128 0xa
 2870 0173 54050000 		.4byte	.LASF30
 2871 0177 05       		.byte	0x5
 2872 0178 33       		.byte	0x33
 2873 0179 C6000000 		.4byte	0xc6
 2874 017d 10       		.byte	0x10
 2875 017e 0A       		.uleb128 0xa
 2876 017f 6D040000 		.4byte	.LASF31
 2877 0183 05       		.byte	0x5
 2878 0184 34       		.byte	0x34
 2879 0185 C6000000 		.4byte	0xc6
 2880 0189 12       		.byte	0x12
 2881 018a 0A       		.uleb128 0xa
 2882 018b EC040000 		.4byte	.LASF32
 2883 018f 05       		.byte	0x5
 2884 0190 35       		.byte	0x35
 2885 0191 C6000000 		.4byte	0xc6
 2886 0195 14       		.byte	0x14
 2887 0196 0A       		.uleb128 0xa
 2888 0197 2D050000 		.4byte	.LASF33
 2889 019b 05       		.byte	0x5
 2890 019c 36       		.byte	0x36
 2891 019d C6000000 		.4byte	0xc6
 2892 01a1 16       		.byte	0x16
 2893 01a2 0A       		.uleb128 0xa
 2894 01a3 3F060000 		.4byte	.LASF34
 2895 01a7 05       		.byte	0x5
 2896 01a8 37       		.byte	0x37
 2897 01a9 C6000000 		.4byte	0xc6
 2898 01ad 18       		.byte	0x18
 2899 01ae 0A       		.uleb128 0xa
 2900 01af 5C050000 		.4byte	.LASF35
 2901 01b3 05       		.byte	0x5
 2902 01b4 38       		.byte	0x38
 2903 01b5 C6000000 		.4byte	0xc6
 2904 01b9 1A       		.byte	0x1a
 2905 01ba 0A       		.uleb128 0xa
 2906 01bb 1F000000 		.4byte	.LASF36
 2907 01bf 05       		.byte	0x5
 2908 01c0 39       		.byte	0x39
 2909 01c1 C6000000 		.4byte	0xc6
 2910 01c5 1C       		.byte	0x1c
 2911 01c6 0A       		.uleb128 0xa
 2912 01c7 6F030000 		.4byte	.LASF37
 2913 01cb 05       		.byte	0x5
 2914 01cc 3A       		.byte	0x3a
 2915 01cd C6000000 		.4byte	0xc6
 2916 01d1 1E       		.byte	0x1e
 2917 01d2 00       		.byte	0
 2918 01d3 0B       		.uleb128 0xb
 2919 01d4 0E000000 		.4byte	.LASF41
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 67


 2920 01d8 01       		.byte	0x1
 2921 01d9 2C000000 		.4byte	0x2c
 2922 01dd 06       		.byte	0x6
 2923 01de 0D       		.byte	0xd
 2924 01df FB010000 		.4byte	0x1fb
 2925 01e3 0C       		.uleb128 0xc
 2926 01e4 557000   		.ascii	"Up\000"
 2927 01e7 00       		.byte	0
 2928 01e8 0D       		.uleb128 0xd
 2929 01e9 67070000 		.4byte	.LASF38
 2930 01ed 01       		.byte	0x1
 2931 01ee 0D       		.uleb128 0xd
 2932 01ef F5040000 		.4byte	.LASF39
 2933 01f3 02       		.byte	0x2
 2934 01f4 0D       		.uleb128 0xd
 2935 01f5 C2060000 		.4byte	.LASF40
 2936 01f9 03       		.byte	0x3
 2937 01fa 00       		.byte	0
 2938 01fb 0B       		.uleb128 0xb
 2939 01fc 2A060000 		.4byte	.LASF42
 2940 0200 01       		.byte	0x1
 2941 0201 2C000000 		.4byte	0x2c
 2942 0205 06       		.byte	0x6
 2943 0206 0E       		.byte	0xe
 2944 0207 30020000 		.4byte	0x230
 2945 020b 0D       		.uleb128 0xd
 2946 020c B8060000 		.4byte	.LASF43
 2947 0210 00       		.byte	0
 2948 0211 0D       		.uleb128 0xd
 2949 0212 44050000 		.4byte	.LASF44
 2950 0216 01       		.byte	0x1
 2951 0217 0D       		.uleb128 0xd
 2952 0218 07080000 		.4byte	.LASF45
 2953 021c 02       		.byte	0x2
 2954 021d 0D       		.uleb128 0xd
 2955 021e D0010000 		.4byte	.LASF46
 2956 0222 03       		.byte	0x3
 2957 0223 0D       		.uleb128 0xd
 2958 0224 CB020000 		.4byte	.LASF47
 2959 0228 04       		.byte	0x4
 2960 0229 0D       		.uleb128 0xd
 2961 022a 05020000 		.4byte	.LASF48
 2962 022e 05       		.byte	0x5
 2963 022f 00       		.byte	0
 2964 0230 09       		.uleb128 0x9
 2965 0231 68020000 		.4byte	.LASF50
 2966 0235 14       		.byte	0x14
 2967 0236 06       		.byte	0x6
 2968 0237 10       		.byte	0x10
 2969 0238 79020000 		.4byte	0x279
 2970 023c 0A       		.uleb128 0xa
 2971 023d E2000000 		.4byte	.LASF51
 2972 0241 06       		.byte	0x6
 2973 0242 11       		.byte	0x11
 2974 0243 FB010000 		.4byte	0x1fb
 2975 0247 00       		.byte	0
 2976 0248 0A       		.uleb128 0xa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 68


 2977 0249 8A080000 		.4byte	.LASF52
 2978 024d 06       		.byte	0x6
 2979 024e 12       		.byte	0x12
 2980 024f 68000000 		.4byte	0x68
 2981 0253 04       		.byte	0x4
 2982 0254 0A       		.uleb128 0xa
 2983 0255 9B080000 		.4byte	.LASF53
 2984 0259 06       		.byte	0x6
 2985 025a 13       		.byte	0x13
 2986 025b 68000000 		.4byte	0x68
 2987 025f 08       		.byte	0x8
 2988 0260 0A       		.uleb128 0xa
 2989 0261 F4010000 		.4byte	.LASF54
 2990 0265 06       		.byte	0x6
 2991 0266 14       		.byte	0x14
 2992 0267 68000000 		.4byte	0x68
 2993 026b 0C       		.byte	0xc
 2994 026c 0A       		.uleb128 0xa
 2995 026d BC010000 		.4byte	.LASF55
 2996 0271 06       		.byte	0x6
 2997 0272 15       		.byte	0x15
 2998 0273 D3010000 		.4byte	0x1d3
 2999 0277 10       		.byte	0x10
 3000 0278 00       		.byte	0
 3001 0279 03       		.uleb128 0x3
 3002 027a 68020000 		.4byte	.LASF50
 3003 027e 06       		.byte	0x6
 3004 027f 16       		.byte	0x16
 3005 0280 30020000 		.4byte	0x230
 3006 0284 0B       		.uleb128 0xb
 3007 0285 46000000 		.4byte	.LASF56
 3008 0289 01       		.byte	0x1
 3009 028a 2C000000 		.4byte	0x2c
 3010 028e 01       		.byte	0x1
 3011 028f 18       		.byte	0x18
 3012 0290 D7020000 		.4byte	0x2d7
 3013 0294 0D       		.uleb128 0xd
 3014 0295 13040000 		.4byte	.LASF57
 3015 0299 00       		.byte	0
 3016 029a 0D       		.uleb128 0xd
 3017 029b 8A030000 		.4byte	.LASF58
 3018 029f 01       		.byte	0x1
 3019 02a0 0D       		.uleb128 0xd
 3020 02a1 92080000 		.4byte	.LASF59
 3021 02a5 02       		.byte	0x2
 3022 02a6 0D       		.uleb128 0xd
 3023 02a7 A8060000 		.4byte	.LASF60
 3024 02ab 03       		.byte	0x3
 3025 02ac 0D       		.uleb128 0xd
 3026 02ad 34030000 		.4byte	.LASF61
 3027 02b1 04       		.byte	0x4
 3028 02b2 0D       		.uleb128 0xd
 3029 02b3 7F020000 		.4byte	.LASF62
 3030 02b7 05       		.byte	0x5
 3031 02b8 0D       		.uleb128 0xd
 3032 02b9 CA050000 		.4byte	.LASF63
 3033 02bd 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 69


 3034 02be 0D       		.uleb128 0xd
 3035 02bf 07040000 		.4byte	.LASF64
 3036 02c3 07       		.byte	0x7
 3037 02c4 0D       		.uleb128 0xd
 3038 02c5 94030000 		.4byte	.LASF65
 3039 02c9 08       		.byte	0x8
 3040 02ca 0D       		.uleb128 0xd
 3041 02cb DE020000 		.4byte	.LASF66
 3042 02cf 09       		.byte	0x9
 3043 02d0 0D       		.uleb128 0xd
 3044 02d1 31070000 		.4byte	.LASF67
 3045 02d5 0A       		.byte	0xa
 3046 02d6 00       		.byte	0
 3047 02d7 0E       		.uleb128 0xe
 3048 02d8 51040000 		.4byte	.LASF78
 3049 02dc 01       		.byte	0x1
 3050 02dd 51       		.byte	0x51
 3051 02de 00000000 		.4byte	.LFB64
 3052 02e2 EC000000 		.4byte	.LFE64-.LFB64
 3053 02e6 01       		.uleb128 0x1
 3054 02e7 9C       		.byte	0x9c
 3055 02e8 05030000 		.4byte	0x305
 3056 02ec 0F       		.uleb128 0xf
 3057 02ed 50000000 		.4byte	.LBB2
 3058 02f1 62000000 		.4byte	.LBE2-.LBB2
 3059 02f5 10       		.uleb128 0x10
 3060 02f6 0C070000 		.4byte	.LASF74
 3061 02fa 01       		.byte	0x1
 3062 02fb 5E       		.byte	0x5e
 3063 02fc D2000000 		.4byte	0xd2
 3064 0300 02       		.uleb128 0x2
 3065 0301 91       		.byte	0x91
 3066 0302 6C       		.sleb128 -20
 3067 0303 00       		.byte	0
 3068 0304 00       		.byte	0
 3069 0305 11       		.uleb128 0x11
 3070 0306 31020000 		.4byte	.LASF68
 3071 030a 01       		.byte	0x1
 3072 030b 69       		.byte	0x69
 3073 030c 00000000 		.4byte	.LFB65
 3074 0310 18000000 		.4byte	.LFE65-.LFB65
 3075 0314 01       		.uleb128 0x1
 3076 0315 9C       		.byte	0x9c
 3077 0316 11       		.uleb128 0x11
 3078 0317 D6000000 		.4byte	.LASF69
 3079 031b 01       		.byte	0x1
 3080 031c 6F       		.byte	0x6f
 3081 031d 00000000 		.4byte	.LFB66
 3082 0321 18000000 		.4byte	.LFE66-.LFB66
 3083 0325 01       		.uleb128 0x1
 3084 0326 9C       		.byte	0x9c
 3085 0327 11       		.uleb128 0x11
 3086 0328 4C020000 		.4byte	.LASF70
 3087 032c 01       		.byte	0x1
 3088 032d 75       		.byte	0x75
 3089 032e 00000000 		.4byte	.LFB67
 3090 0332 18000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 70


 3091 0336 01       		.uleb128 0x1
 3092 0337 9C       		.byte	0x9c
 3093 0338 11       		.uleb128 0x11
 3094 0339 51070000 		.4byte	.LASF71
 3095 033d 01       		.byte	0x1
 3096 033e 7B       		.byte	0x7b
 3097 033f 00000000 		.4byte	.LFB68
 3098 0343 18000000 		.4byte	.LFE68-.LFB68
 3099 0347 01       		.uleb128 0x1
 3100 0348 9C       		.byte	0x9c
 3101 0349 12       		.uleb128 0x12
 3102 034a 57080000 		.4byte	.LASF72
 3103 034e 01       		.byte	0x1
 3104 034f 81       		.byte	0x81
 3105 0350 00000000 		.4byte	.LFB69
 3106 0354 68000000 		.4byte	.LFE69-.LFB69
 3107 0358 01       		.uleb128 0x1
 3108 0359 9C       		.byte	0x9c
 3109 035a 13       		.uleb128 0x13
 3110 035b 20030000 		.4byte	.LASF73
 3111 035f 01       		.byte	0x1
 3112 0360 92       		.byte	0x92
 3113 0361 68000000 		.4byte	0x68
 3114 0365 00000000 		.4byte	.LFB70
 3115 0369 04010000 		.4byte	.LFE70-.LFB70
 3116 036d 01       		.uleb128 0x1
 3117 036e 9C       		.byte	0x9c
 3118 036f 14       		.uleb128 0x14
 3119 0370 7B080000 		.4byte	.LASF156
 3120 0374 01       		.byte	0x1
 3121 0375 B9       		.byte	0xb9
 3122 0376 C6000000 		.4byte	0xc6
 3123 037a 00000000 		.4byte	.LFB71
 3124 037e 54000000 		.4byte	.LFE71-.LFB71
 3125 0382 01       		.uleb128 0x1
 3126 0383 9C       		.byte	0x9c
 3127 0384 B3030000 		.4byte	0x3b3
 3128 0388 15       		.uleb128 0x15
 3129 0389 64030000 		.4byte	.LASF157
 3130 038d 01       		.byte	0x1
 3131 038e B9       		.byte	0xb9
 3132 038f A2000000 		.4byte	0xa2
 3133 0393 02       		.uleb128 0x2
 3134 0394 91       		.byte	0x91
 3135 0395 66       		.sleb128 -26
 3136 0396 16       		.uleb128 0x16
 3137 0397 63707300 		.ascii	"cps\000"
 3138 039b 01       		.byte	0x1
 3139 039c BA       		.byte	0xba
 3140 039d D2000000 		.4byte	0xd2
 3141 03a1 02       		.uleb128 0x2
 3142 03a2 91       		.byte	0x91
 3143 03a3 6C       		.sleb128 -20
 3144 03a4 16       		.uleb128 0x16
 3145 03a5 72706D00 		.ascii	"rpm\000"
 3146 03a9 01       		.byte	0x1
 3147 03aa BB       		.byte	0xbb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 71


 3148 03ab C6000000 		.4byte	0xc6
 3149 03af 02       		.uleb128 0x2
 3150 03b0 91       		.byte	0x91
 3151 03b1 6A       		.sleb128 -22
 3152 03b2 00       		.byte	0
 3153 03b3 17       		.uleb128 0x17
 3154 03b4 64080000 		.4byte	.LASF83
 3155 03b8 01       		.byte	0x1
 3156 03b9 C3       		.byte	0xc3
 3157 03ba 00000000 		.4byte	.LFB72
 3158 03be 34000000 		.4byte	.LFE72-.LFB72
 3159 03c2 01       		.uleb128 0x1
 3160 03c3 9C       		.byte	0x9c
 3161 03c4 18       		.uleb128 0x18
 3162 03c5 BA040000 		.4byte	.LASF75
 3163 03c9 01       		.byte	0x1
 3164 03ca D4       		.byte	0xd4
 3165 03cb 84020000 		.4byte	0x284
 3166 03cf 00000000 		.4byte	.LFB73
 3167 03d3 84000000 		.4byte	.LFE73-.LFB73
 3168 03d7 01       		.uleb128 0x1
 3169 03d8 9C       		.byte	0x9c
 3170 03d9 18       		.uleb128 0x18
 3171 03da E7060000 		.4byte	.LASF76
 3172 03de 01       		.byte	0x1
 3173 03df FA       		.byte	0xfa
 3174 03e0 84020000 		.4byte	0x284
 3175 03e4 00000000 		.4byte	.LFB74
 3176 03e8 7C000000 		.4byte	.LFE74-.LFB74
 3177 03ec 01       		.uleb128 0x1
 3178 03ed 9C       		.byte	0x9c
 3179 03ee 19       		.uleb128 0x19
 3180 03ef B2020000 		.4byte	.LASF77
 3181 03f3 01       		.byte	0x1
 3182 03f4 1801     		.2byte	0x118
 3183 03f6 84020000 		.4byte	0x284
 3184 03fa 00000000 		.4byte	.LFB75
 3185 03fe 84000000 		.4byte	.LFE75-.LFB75
 3186 0402 01       		.uleb128 0x1
 3187 0403 9C       		.byte	0x9c
 3188 0404 1A       		.uleb128 0x1a
 3189 0405 C4070000 		.4byte	.LASF79
 3190 0409 01       		.byte	0x1
 3191 040a 3B01     		.2byte	0x13b
 3192 040c 84020000 		.4byte	0x284
 3193 0410 00000000 		.4byte	.LFB76
 3194 0414 C0050000 		.4byte	.LFE76-.LFB76
 3195 0418 01       		.uleb128 0x1
 3196 0419 9C       		.byte	0x9c
 3197 041a 56040000 		.4byte	0x456
 3198 041e 1B       		.uleb128 0x1b
 3199 041f AF030000 		.4byte	.LASF80
 3200 0423 01       		.byte	0x1
 3201 0424 3C01     		.2byte	0x13c
 3202 0426 D2000000 		.4byte	0xd2
 3203 042a 02       		.uleb128 0x2
 3204 042b 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 72


 3205 042c 6C       		.sleb128 -20
 3206 042d 1B       		.uleb128 0x1b
 3207 042e 81060000 		.4byte	.LASF81
 3208 0432 01       		.byte	0x1
 3209 0433 4B01     		.2byte	0x14b
 3210 0435 FB010000 		.4byte	0x1fb
 3211 0439 02       		.uleb128 0x2
 3212 043a 91       		.byte	0x91
 3213 043b 6B       		.sleb128 -21
 3214 043c 0F       		.uleb128 0xf
 3215 043d AE030000 		.4byte	.LBB3
 3216 0441 2C000000 		.4byte	.LBE3-.LBB3
 3217 0445 1B       		.uleb128 0x1b
 3218 0446 83010000 		.4byte	.LASF82
 3219 044a 01       		.byte	0x1
 3220 044b 1602     		.2byte	0x216
 3221 044d 68000000 		.4byte	0x68
 3222 0451 02       		.uleb128 0x2
 3223 0452 91       		.byte	0x91
 3224 0453 64       		.sleb128 -28
 3225 0454 00       		.byte	0
 3226 0455 00       		.byte	0
 3227 0456 1C       		.uleb128 0x1c
 3228 0457 75040000 		.4byte	.LASF84
 3229 045b 01       		.byte	0x1
 3230 045c C602     		.2byte	0x2c6
 3231 045e 00000000 		.4byte	.LFB77
 3232 0462 68000000 		.4byte	.LFE77-.LFB77
 3233 0466 01       		.uleb128 0x1
 3234 0467 9C       		.byte	0x9c
 3235 0468 1D       		.uleb128 0x1d
 3236 0469 D2050000 		.4byte	.LASF85
 3237 046d 01       		.byte	0x1
 3238 046e CF02     		.2byte	0x2cf
 3239 0470 79020000 		.4byte	0x279
 3240 0474 00000000 		.4byte	.LFB78
 3241 0478 6C000000 		.4byte	.LFE78-.LFB78
 3242 047c 01       		.uleb128 0x1
 3243 047d 9C       		.byte	0x9c
 3244 047e 92040000 		.4byte	0x492
 3245 0482 1B       		.uleb128 0x1b
 3246 0483 54030000 		.4byte	.LASF86
 3247 0487 01       		.byte	0x1
 3248 0488 D002     		.2byte	0x2d0
 3249 048a 79020000 		.4byte	0x279
 3250 048e 02       		.uleb128 0x2
 3251 048f 91       		.byte	0x91
 3252 0490 5C       		.sleb128 -36
 3253 0491 00       		.byte	0
 3254 0492 1E       		.uleb128 0x1e
 3255 0493 ED030000 		.4byte	.LASF158
 3256 0497 01       		.byte	0x1
 3257 0498 D802     		.2byte	0x2d8
 3258 049a 00000000 		.4byte	.LFB79
 3259 049e 3C010000 		.4byte	.LFE79-.LFB79
 3260 04a2 01       		.uleb128 0x1
 3261 04a3 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 73


 3262 04a4 D6040000 		.4byte	0x4d6
 3263 04a8 1B       		.uleb128 0x1b
 3264 04a9 50080000 		.4byte	.LASF87
 3265 04ad 01       		.byte	0x1
 3266 04ae D902     		.2byte	0x2d9
 3267 04b0 A2000000 		.4byte	0xa2
 3268 04b4 02       		.uleb128 0x2
 3269 04b5 91       		.byte	0x91
 3270 04b6 72       		.sleb128 -14
 3271 04b7 1B       		.uleb128 0x1b
 3272 04b8 9A020000 		.4byte	.LASF88
 3273 04bc 01       		.byte	0x1
 3274 04bd DA02     		.2byte	0x2da
 3275 04bf A2000000 		.4byte	0xa2
 3276 04c3 02       		.uleb128 0x2
 3277 04c4 91       		.byte	0x91
 3278 04c5 70       		.sleb128 -16
 3279 04c6 1B       		.uleb128 0x1b
 3280 04c7 8B040000 		.4byte	.LASF89
 3281 04cb 01       		.byte	0x1
 3282 04cc DE02     		.2byte	0x2de
 3283 04ce 68000000 		.4byte	0x68
 3284 04d2 02       		.uleb128 0x2
 3285 04d3 91       		.byte	0x91
 3286 04d4 74       		.sleb128 -12
 3287 04d5 00       		.byte	0
 3288 04d6 1F       		.uleb128 0x1f
 3289 04d7 3B040000 		.4byte	.LASF90
 3290 04db 01       		.byte	0x1
 3291 04dc 0E03     		.2byte	0x30e
 3292 04de 00000000 		.4byte	.LFB80
 3293 04e2 BC000000 		.4byte	.LFE80-.LFB80
 3294 04e6 01       		.uleb128 0x1
 3295 04e7 9C       		.byte	0x9c
 3296 04e8 10       		.uleb128 0x10
 3297 04e9 A1020000 		.4byte	.LASF91
 3298 04ed 01       		.byte	0x1
 3299 04ee 20       		.byte	0x20
 3300 04ef E5000000 		.4byte	0xe5
 3301 04f3 05       		.uleb128 0x5
 3302 04f4 03       		.byte	0x3
 3303 04f5 14000000 		.4byte	instructionIndex
 3304 04f9 10       		.uleb128 0x10
 3305 04fa A3080000 		.4byte	.LASF92
 3306 04fe 01       		.byte	0x1
 3307 04ff 34       		.byte	0x34
 3308 0500 E0000000 		.4byte	0xe0
 3309 0504 05       		.uleb128 0x5
 3310 0505 03       		.byte	0x3
 3311 0506 36000000 		.4byte	turnStartedFlag
 3312 050a 10       		.uleb128 0x10
 3313 050b E6070000 		.4byte	.LASF93
 3314 050f 01       		.byte	0x1
 3315 0510 35       		.byte	0x35
 3316 0511 E0000000 		.4byte	0xe0
 3317 0515 05       		.uleb128 0x5
 3318 0516 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 74


 3319 0517 37000000 		.4byte	turnFinishedFlag
 3320 051b 10       		.uleb128 0x10
 3321 051c 28000000 		.4byte	.LASF94
 3322 0520 01       		.byte	0x1
 3323 0521 37       		.byte	0x37
 3324 0522 E0000000 		.4byte	0xe0
 3325 0526 05       		.uleb128 0x5
 3326 0527 03       		.byte	0x3
 3327 0528 38000000 		.4byte	forwardUntilTargetStartedFlag
 3328 052c 10       		.uleb128 0x10
 3329 052d FC050000 		.4byte	.LASF95
 3330 0531 01       		.byte	0x1
 3331 0532 38       		.byte	0x38
 3332 0533 E0000000 		.4byte	0xe0
 3333 0537 05       		.uleb128 0x5
 3334 0538 03       		.byte	0x3
 3335 0539 39000000 		.4byte	uTurnStartedFlag
 3336 053d 10       		.uleb128 0x10
 3337 053e FA040000 		.4byte	.LASF96
 3338 0542 01       		.byte	0x1
 3339 0543 39       		.byte	0x39
 3340 0544 E0000000 		.4byte	0xe0
 3341 0548 05       		.uleb128 0x5
 3342 0549 03       		.byte	0x3
 3343 054a 3A000000 		.4byte	uTurnFinishedFlag
 3344 054e 10       		.uleb128 0x10
 3345 054f 72060000 		.4byte	.LASF97
 3346 0553 01       		.byte	0x1
 3347 0554 3B       		.byte	0x3b
 3348 0555 E0000000 		.4byte	0xe0
 3349 0559 05       		.uleb128 0x5
 3350 055a 03       		.byte	0x3
 3351 055b 3B000000 		.4byte	leftStatusFlag
 3352 055f 10       		.uleb128 0x10
 3353 0560 58020000 		.4byte	.LASF98
 3354 0564 01       		.byte	0x1
 3355 0565 3C       		.byte	0x3c
 3356 0566 E0000000 		.4byte	0xe0
 3357 056a 05       		.uleb128 0x5
 3358 056b 03       		.byte	0x3
 3359 056c 3C000000 		.4byte	rightStatusFlag
 3360 0570 10       		.uleb128 0x10
 3361 0571 64050000 		.4byte	.LASF99
 3362 0575 01       		.byte	0x1
 3363 0576 3E       		.byte	0x3e
 3364 0577 E0000000 		.4byte	0xe0
 3365 057b 05       		.uleb128 0x5
 3366 057c 03       		.byte	0x3
 3367 057d 3D000000 		.4byte	spinCourseCorrectionStarted
 3368 0581 10       		.uleb128 0x10
 3369 0582 02030000 		.4byte	.LASF100
 3370 0586 01       		.byte	0x1
 3371 0587 3F       		.byte	0x3f
 3372 0588 E0000000 		.4byte	0xe0
 3373 058c 05       		.uleb128 0x5
 3374 058d 03       		.byte	0x3
 3375 058e 3E000000 		.4byte	currentIgnoreL
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 75


 3376 0592 10       		.uleb128 0x10
 3377 0593 25030000 		.4byte	.LASF101
 3378 0597 01       		.byte	0x1
 3379 0598 40       		.byte	0x40
 3380 0599 E0000000 		.4byte	0xe0
 3381 059d 05       		.uleb128 0x5
 3382 059e 03       		.byte	0x3
 3383 059f 45000000 		.4byte	currentIgnoreR
 3384 05a3 10       		.uleb128 0x10
 3385 05a4 41080000 		.4byte	.LASF102
 3386 05a8 01       		.byte	0x1
 3387 05a9 44       		.byte	0x44
 3388 05aa E0000000 		.4byte	0xe0
 3389 05ae 05       		.uleb128 0x5
 3390 05af 03       		.byte	0x3
 3391 05b0 3F000000 		.4byte	totalLineCount
 3392 05b4 10       		.uleb128 0x10
 3393 05b5 66000000 		.4byte	.LASF103
 3394 05b9 01       		.byte	0x1
 3395 05ba 45       		.byte	0x45
 3396 05bb E0000000 		.4byte	0xe0
 3397 05bf 05       		.uleb128 0x5
 3398 05c0 03       		.byte	0x3
 3399 05c1 40000000 		.4byte	lineCount
 3400 05c5 10       		.uleb128 0x10
 3401 05c6 E9010000 		.4byte	.LASF104
 3402 05ca 01       		.byte	0x1
 3403 05cb 46       		.byte	0x46
 3404 05cc E0000000 		.4byte	0xe0
 3405 05d0 05       		.uleb128 0x5
 3406 05d1 03       		.byte	0x3
 3407 05d2 41000000 		.4byte	onLineFlag
 3408 05d6 10       		.uleb128 0x10
 3409 05d7 2E040000 		.4byte	.LASF105
 3410 05db 01       		.byte	0x1
 3411 05dc 48       		.byte	0x48
 3412 05dd E0000000 		.4byte	0xe0
 3413 05e1 05       		.uleb128 0x5
 3414 05e2 03       		.byte	0x3
 3415 05e3 42000000 		.4byte	tooEarlyFlag
 3416 05e7 10       		.uleb128 0x10
 3417 05e8 D2030000 		.4byte	.LASF106
 3418 05ec 01       		.byte	0x1
 3419 05ed 49       		.byte	0x49
 3420 05ee E0000000 		.4byte	0xe0
 3421 05f2 05       		.uleb128 0x5
 3422 05f3 03       		.byte	0x3
 3423 05f4 43000000 		.4byte	tooLateFlag
 3424 05f8 20       		.uleb128 0x20
 3425 05f9 8D020000 		.4byte	.LASF107
 3426 05fd 07       		.byte	0x7
 3427 05fe 1207     		.2byte	0x712
 3428 0600 04060000 		.4byte	0x604
 3429 0604 06       		.uleb128 0x6
 3430 0605 8B000000 		.4byte	0x8b
 3431 0609 21       		.uleb128 0x21
 3432 060a 747300   		.ascii	"ts\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 76


 3433 060d 05       		.byte	0x5
 3434 060e 10       		.byte	0x10
 3435 060f 96000000 		.4byte	0x96
 3436 0613 05       		.uleb128 0x5
 3437 0614 03       		.byte	0x3
 3438 0615 00000000 		.4byte	ts
 3439 0619 22       		.uleb128 0x22
 3440 061a B9030000 		.4byte	.LASF108
 3441 061e 05       		.byte	0x5
 3442 061f 11       		.byte	0x11
 3443 0620 A2000000 		.4byte	0xa2
 3444 0624 05       		.uleb128 0x5
 3445 0625 03       		.byte	0x3
 3446 0626 00000000 		.4byte	ts_enc
 3447 062a 22       		.uleb128 0x22
 3448 062b F2050000 		.4byte	.LASF109
 3449 062f 05       		.byte	0x5
 3450 0630 12       		.byte	0x12
 3451 0631 A2000000 		.4byte	0xa2
 3452 0635 05       		.uleb128 0x5
 3453 0636 03       		.byte	0x3
 3454 0637 00000000 		.4byte	ts_update
 3455 063b 22       		.uleb128 0x22
 3456 063c 70000000 		.4byte	.LASF110
 3457 0640 05       		.byte	0x5
 3458 0641 13       		.byte	0x13
 3459 0642 A2000000 		.4byte	0xa2
 3460 0646 05       		.uleb128 0x5
 3461 0647 03       		.byte	0x3
 3462 0648 00000000 		.4byte	ts_speed
 3463 064c 22       		.uleb128 0x22
 3464 064d 9A040000 		.4byte	.LASF111
 3465 0651 05       		.byte	0x5
 3466 0652 14       		.byte	0x14
 3467 0653 A2000000 		.4byte	0xa2
 3468 0657 05       		.uleb128 0x5
 3469 0658 03       		.byte	0x3
 3470 0659 00000000 		.4byte	ts_display
 3471 065d 22       		.uleb128 0x22
 3472 065e 25020000 		.4byte	.LASF112
 3473 0662 05       		.byte	0x5
 3474 0663 16       		.byte	0x16
 3475 0664 96000000 		.4byte	0x96
 3476 0668 05       		.uleb128 0x5
 3477 0669 03       		.byte	0x3
 3478 066a 00000000 		.4byte	flag_ts_enc
 3479 066e 22       		.uleb128 0x22
 3480 066f 73070000 		.4byte	.LASF113
 3481 0673 05       		.byte	0x5
 3482 0674 17       		.byte	0x17
 3483 0675 96000000 		.4byte	0x96
 3484 0679 05       		.uleb128 0x5
 3485 067a 03       		.byte	0x3
 3486 067b 00000000 		.4byte	flag_ts_update
 3487 067f 22       		.uleb128 0x22
 3488 0680 DE040000 		.4byte	.LASF114
 3489 0684 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 77


 3490 0685 18       		.byte	0x18
 3491 0686 96000000 		.4byte	0x96
 3492 068a 05       		.uleb128 0x5
 3493 068b 03       		.byte	0x3
 3494 068c 00000000 		.4byte	flag_ts_speed
 3495 0690 22       		.uleb128 0x22
 3496 0691 FC060000 		.4byte	.LASF115
 3497 0695 05       		.byte	0x5
 3498 0696 19       		.byte	0x19
 3499 0697 96000000 		.4byte	0x96
 3500 069b 05       		.uleb128 0x5
 3501 069c 03       		.byte	0x3
 3502 069d 00000000 		.4byte	flag_ts_display
 3503 06a1 22       		.uleb128 0x22
 3504 06a2 45030000 		.4byte	.LASF116
 3505 06a6 05       		.byte	0x5
 3506 06a7 1B       		.byte	0x1b
 3507 06a8 96000000 		.4byte	0x96
 3508 06ac 05       		.uleb128 0x5
 3509 06ad 03       		.byte	0x3
 3510 06ae 00000000 		.4byte	flag_rx
 3511 06b2 22       		.uleb128 0x22
 3512 06b3 D2040000 		.4byte	.LASF117
 3513 06b7 05       		.byte	0x5
 3514 06b8 1C       		.byte	0x1c
 3515 06b9 96000000 		.4byte	0x96
 3516 06bd 05       		.uleb128 0x5
 3517 06be 03       		.byte	0x3
 3518 06bf 00000000 		.4byte	flag_packet
 3519 06c3 22       		.uleb128 0x22
 3520 06c4 3D020000 		.4byte	.LASF118
 3521 06c8 05       		.byte	0x5
 3522 06c9 1D       		.byte	0x1d
 3523 06ca 96000000 		.4byte	0x96
 3524 06ce 05       		.uleb128 0x5
 3525 06cf 03       		.byte	0x3
 3526 06d0 00000000 		.4byte	flag_KB_string
 3527 06d4 22       		.uleb128 0x22
 3528 06d5 11030000 		.4byte	.LASF119
 3529 06d9 05       		.byte	0x5
 3530 06da 1F       		.byte	0x1f
 3531 06db 96000000 		.4byte	0x96
 3532 06df 05       		.uleb128 0x5
 3533 06e0 03       		.byte	0x3
 3534 06e1 00000000 		.4byte	dataready_flag
 3535 06e5 22       		.uleb128 0x22
 3536 06e6 80050000 		.4byte	.LASF120
 3537 06ea 05       		.byte	0x5
 3538 06eb 21       		.byte	0x21
 3539 06ec 96000000 		.4byte	0x96
 3540 06f0 05       		.uleb128 0x5
 3541 06f1 03       		.byte	0x3
 3542 06f2 00000000 		.4byte	flag_rf_transmission_active
 3543 06f6 07       		.uleb128 0x7
 3544 06f7 84000000 		.4byte	0x84
 3545 06fb 06070000 		.4byte	0x706
 3546 06ff 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 78


 3547 0700 7D000000 		.4byte	0x7d
 3548 0704 3F       		.byte	0x3f
 3549 0705 00       		.byte	0
 3550 0706 22       		.uleb128 0x22
 3551 0707 82070000 		.4byte	.LASF121
 3552 070b 05       		.byte	0x5
 3553 070c 24       		.byte	0x24
 3554 070d F6060000 		.4byte	0x6f6
 3555 0711 05       		.uleb128 0x5
 3556 0712 03       		.byte	0x3
 3557 0713 00000000 		.4byte	displaystring
 3558 0717 22       		.uleb128 0x22
 3559 0718 6A030000 		.4byte	.LASF122
 3560 071c 05       		.byte	0x5
 3561 071d 25       		.byte	0x25
 3562 071e F6060000 		.4byte	0x6f6
 3563 0722 05       		.uleb128 0x5
 3564 0723 03       		.byte	0x3
 3565 0724 00000000 		.4byte	line
 3566 0728 22       		.uleb128 0x22
 3567 0729 9F010000 		.4byte	.LASF123
 3568 072d 05       		.byte	0x5
 3569 072e 25       		.byte	0x25
 3570 072f F6060000 		.4byte	0x6f6
 3571 0733 05       		.uleb128 0x5
 3572 0734 03       		.byte	0x3
 3573 0735 00000000 		.4byte	entry
 3574 0739 07       		.uleb128 0x7
 3575 073a 96000000 		.4byte	0x96
 3576 073e 49070000 		.4byte	0x749
 3577 0742 08       		.uleb128 0x8
 3578 0743 7D000000 		.4byte	0x7d
 3579 0747 3F       		.byte	0x3f
 3580 0748 00       		.byte	0
 3581 0749 22       		.uleb128 0x22
 3582 074a 3A050000 		.4byte	.LASF124
 3583 074e 05       		.byte	0x5
 3584 074f 26       		.byte	0x26
 3585 0750 39070000 		.4byte	0x739
 3586 0754 05       		.uleb128 0x5
 3587 0755 03       		.byte	0x3
 3588 0756 00000000 		.4byte	usbBuffer
 3589 075a 22       		.uleb128 0x22
 3590 075b 20050000 		.4byte	.LASF125
 3591 075f 05       		.byte	0x5
 3592 0760 3C       		.byte	0x3c
 3593 0761 FA000000 		.4byte	0xfa
 3594 0765 05       		.uleb128 0x5
 3595 0766 03       		.byte	0x3
 3596 0767 00000000 		.4byte	system_state
 3597 076b 07       		.uleb128 0x7
 3598 076c 68000000 		.4byte	0x68
 3599 0770 81070000 		.4byte	0x781
 3600 0774 08       		.uleb128 0x8
 3601 0775 7D000000 		.4byte	0x7d
 3602 0779 0E       		.byte	0xe
 3603 077a 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 79


 3604 077b 7D000000 		.4byte	0x7d
 3605 077f 12       		.byte	0x12
 3606 0780 00       		.byte	0
 3607 0781 23       		.uleb128 0x23
 3608 0782 6D617000 		.ascii	"map\000"
 3609 0786 08       		.byte	0x8
 3610 0787 04       		.byte	0x4
 3611 0788 6B070000 		.4byte	0x76b
 3612 078c 07       		.uleb128 0x7
 3613 078d 68000000 		.4byte	0x68
 3614 0791 A2070000 		.4byte	0x7a2
 3615 0795 08       		.uleb128 0x8
 3616 0796 7D000000 		.4byte	0x7d
 3617 079a 05       		.byte	0x5
 3618 079b 08       		.uleb128 0x8
 3619 079c 7D000000 		.4byte	0x7d
 3620 07a0 01       		.byte	0x1
 3621 07a1 00       		.byte	0
 3622 07a2 24       		.uleb128 0x24
 3623 07a3 5D070000 		.4byte	.LASF126
 3624 07a7 08       		.byte	0x8
 3625 07a8 05       		.byte	0x5
 3626 07a9 8C070000 		.4byte	0x78c
 3627 07ad 22       		.uleb128 0x22
 3628 07ae B3070000 		.4byte	.LASF127
 3629 07b2 01       		.byte	0x1
 3630 07b3 19       		.byte	0x19
 3631 07b4 84020000 		.4byte	0x284
 3632 07b8 05       		.uleb128 0x5
 3633 07b9 03       		.byte	0x3
 3634 07ba 00000000 		.4byte	currentDirection
 3635 07be 22       		.uleb128 0x22
 3636 07bf 54000000 		.4byte	.LASF128
 3637 07c3 01       		.byte	0x1
 3638 07c4 19       		.byte	0x19
 3639 07c5 84020000 		.4byte	0x284
 3640 07c9 05       		.uleb128 0x5
 3641 07ca 03       		.byte	0x3
 3642 07cb 00000000 		.4byte	previousDirection
 3643 07cf 22       		.uleb128 0x22
 3644 07d0 9B070000 		.4byte	.LASF129
 3645 07d4 01       		.byte	0x1
 3646 07d5 1B       		.byte	0x1b
 3647 07d6 D3010000 		.4byte	0x1d3
 3648 07da 05       		.uleb128 0x5
 3649 07db 03       		.byte	0x3
 3650 07dc 00000000 		.4byte	currentRobotOrientation
 3651 07e0 22       		.uleb128 0x22
 3652 07e1 51060000 		.4byte	.LASF130
 3653 07e5 01       		.byte	0x1
 3654 07e6 1B       		.byte	0x1b
 3655 07e7 D3010000 		.4byte	0x1d3
 3656 07eb 05       		.uleb128 0x5
 3657 07ec 03       		.byte	0x3
 3658 07ed 00000000 		.4byte	previousOrientation
 3659 07f1 22       		.uleb128 0x22
 3660 07f2 2E080000 		.4byte	.LASF131
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 80


 3661 07f6 01       		.byte	0x1
 3662 07f7 1C       		.byte	0x1c
 3663 07f8 79020000 		.4byte	0x279
 3664 07fc 05       		.uleb128 0x5
 3665 07fd 03       		.byte	0x3
 3666 07fe 00000000 		.4byte	currentInstruction
 3667 0802 22       		.uleb128 0x22
 3668 0803 DE060000 		.4byte	.LASF132
 3669 0807 01       		.byte	0x1
 3670 0808 1D       		.byte	0x1d
 3671 0809 68000000 		.4byte	0x68
 3672 080d 05       		.uleb128 0x5
 3673 080e 03       		.byte	0x3
 3674 080f 00000000 		.4byte	numSteps
 3675 0813 22       		.uleb128 0x22
 3676 0814 F7070000 		.4byte	.LASF133
 3677 0818 01       		.byte	0x1
 3678 0819 1F       		.byte	0x1f
 3679 081a 24080000 		.4byte	0x824
 3680 081e 05       		.uleb128 0x5
 3681 081f 03       		.byte	0x3
 3682 0820 00000000 		.4byte	instructionList
 3683 0824 25       		.uleb128 0x25
 3684 0825 04       		.byte	0x4
 3685 0826 79020000 		.4byte	0x279
 3686 082a 21       		.uleb128 0x21
 3687 082b 733300   		.ascii	"s3\000"
 3688 082e 01       		.byte	0x1
 3689 082f 25       		.byte	0x25
 3690 0830 96000000 		.4byte	0x96
 3691 0834 05       		.uleb128 0x5
 3692 0835 03       		.byte	0x3
 3693 0836 00000000 		.4byte	s3
 3694 083a 21       		.uleb128 0x21
 3695 083b 733400   		.ascii	"s4\000"
 3696 083e 01       		.byte	0x1
 3697 083f 25       		.byte	0x25
 3698 0840 96000000 		.4byte	0x96
 3699 0844 05       		.uleb128 0x5
 3700 0845 03       		.byte	0x3
 3701 0846 00000000 		.4byte	s4
 3702 084a 21       		.uleb128 0x21
 3703 084b 733500   		.ascii	"s5\000"
 3704 084e 01       		.byte	0x1
 3705 084f 25       		.byte	0x25
 3706 0850 96000000 		.4byte	0x96
 3707 0854 05       		.uleb128 0x5
 3708 0855 03       		.byte	0x3
 3709 0856 00000000 		.4byte	s5
 3710 085a 21       		.uleb128 0x21
 3711 085b 733600   		.ascii	"s6\000"
 3712 085e 01       		.byte	0x1
 3713 085f 25       		.byte	0x25
 3714 0860 96000000 		.4byte	0x96
 3715 0864 05       		.uleb128 0x5
 3716 0865 03       		.byte	0x3
 3717 0866 00000000 		.4byte	s6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 81


 3718 086a 22       		.uleb128 0x22
 3719 086b B8050000 		.4byte	.LASF134
 3720 086f 01       		.byte	0x1
 3721 0870 2A       		.byte	0x2a
 3722 0871 AE000000 		.4byte	0xae
 3723 0875 05       		.uleb128 0x5
 3724 0876 03       		.byte	0x3
 3725 0877 00000000 		.4byte	totalMilliseconds
 3726 087b 22       		.uleb128 0x22
 3727 087c 00000000 		.4byte	.LASF135
 3728 0880 01       		.byte	0x1
 3729 0881 2B       		.byte	0x2b
 3730 0882 D2000000 		.4byte	0xd2
 3731 0886 05       		.uleb128 0x5
 3732 0887 03       		.byte	0x3
 3733 0888 00000000 		.4byte	totalDistance
 3734 088c 07       		.uleb128 0x7
 3735 088d 84000000 		.4byte	0x84
 3736 0891 9C080000 		.4byte	0x89c
 3737 0895 08       		.uleb128 0x8
 3738 0896 7D000000 		.4byte	0x7d
 3739 089a 44       		.byte	0x44
 3740 089b 00       		.byte	0
 3741 089c 22       		.uleb128 0x22
 3742 089d 6C070000 		.4byte	.LASF136
 3743 08a1 01       		.byte	0x1
 3744 08a2 2D       		.byte	0x2d
 3745 08a3 8C080000 		.4byte	0x88c
 3746 08a7 05       		.uleb128 0x5
 3747 08a8 03       		.byte	0x3
 3748 08a9 00000000 		.4byte	buffer
 3749 08ad 22       		.uleb128 0x22
 3750 08ae 7C030000 		.4byte	.LASF137
 3751 08b2 01       		.byte	0x1
 3752 08b3 2E       		.byte	0x2e
 3753 08b4 68000000 		.4byte	0x68
 3754 08b8 05       		.uleb128 0x5
 3755 08b9 03       		.byte	0x3
 3756 08ba 00000000 		.4byte	quadDec2Count
 3757 08be 22       		.uleb128 0x22
 3758 08bf EC000000 		.4byte	.LASF138
 3759 08c3 01       		.byte	0x1
 3760 08c4 2F       		.byte	0x2f
 3761 08c5 68000000 		.4byte	0x68
 3762 08c9 05       		.uleb128 0x5
 3763 08ca 03       		.byte	0x3
 3764 08cb 00000000 		.4byte	timerInt
 3765 08cf 22       		.uleb128 0x22
 3766 08d0 E8050000 		.4byte	.LASF139
 3767 08d4 01       		.byte	0x1
 3768 08d5 30       		.byte	0x30
 3769 08d6 68000000 		.4byte	0x68
 3770 08da 05       		.uleb128 0x5
 3771 08db 03       		.byte	0x3
 3772 08dc 00000000 		.4byte	keepLedOn
 3773 08e0 22       		.uleb128 0x22
 3774 08e1 DE010000 		.4byte	.LASF140
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 82


 3775 08e5 01       		.byte	0x1
 3776 08e6 32       		.byte	0x32
 3777 08e7 AE000000 		.4byte	0xae
 3778 08eb 05       		.uleb128 0x5
 3779 08ec 03       		.byte	0x3
 3780 08ed 00000000 		.4byte	stopBuffer
 3781 08f1 22       		.uleb128 0x22
 3782 08f2 DF080000 		.4byte	.LASF141
 3783 08f6 01       		.byte	0x1
 3784 08f7 33       		.byte	0x33
 3785 08f8 A2000000 		.4byte	0xa2
 3786 08fc 05       		.uleb128 0x5
 3787 08fd 03       		.byte	0x3
 3788 08fe 00000000 		.4byte	forwardBuffer
 3789 0902 22       		.uleb128 0x22
 3790 0903 18080000 		.4byte	.LASF142
 3791 0907 01       		.byte	0x1
 3792 0908 4B       		.byte	0x4b
 3793 0909 EA000000 		.4byte	0xea
 3794 090d 05       		.uleb128 0x5
 3795 090e 03       		.byte	0x3
 3796 090f 00000000 		.4byte	junctionConfiguration
 3797 0913 22       		.uleb128 0x22
 3798 0914 A5040000 		.4byte	.LASF143
 3799 0918 01       		.byte	0x1
 3800 0919 4C       		.byte	0x4c
 3801 091a 96000000 		.4byte	0x96
 3802 091e 05       		.uleb128 0x5
 3803 091f 03       		.byte	0x3
 3804 0920 00000000 		.4byte	currentFoodListIndex
 3805 0924 22       		.uleb128 0x22
 3806 0925 DE030000 		.4byte	.LASF144
 3807 0929 01       		.byte	0x1
 3808 092a 4E       		.byte	0x4e
 3809 092b D2000000 		.4byte	0xd2
 3810 092f 05       		.uleb128 0x5
 3811 0930 03       		.byte	0x3
 3812 0931 00000000 		.4byte	blockSizeTotal
 3813 0935 22       		.uleb128 0x22
 3814 0936 9C050000 		.4byte	.LASF145
 3815 093a 01       		.byte	0x1
 3816 093b CA       		.byte	0xca
 3817 093c D2000000 		.4byte	0xd2
 3818 0940 05       		.uleb128 0x5
 3819 0941 03       		.byte	0x3
 3820 0942 00000000 		.4byte	xBlocksize
 3821 0946 22       		.uleb128 0x22
 3822 0947 A7050000 		.4byte	.LASF146
 3823 094b 01       		.byte	0x1
 3824 094c CB       		.byte	0xcb
 3825 094d D2000000 		.4byte	0xd2
 3826 0951 05       		.uleb128 0x5
 3827 0952 03       		.byte	0x3
 3828 0953 00000000 		.4byte	yBlocksize
 3829 0957 22       		.uleb128 0x22
 3830 0958 15050000 		.4byte	.LASF147
 3831 095c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 83


 3832 095d CC       		.byte	0xcc
 3833 095e 96000000 		.4byte	0x96
 3834 0962 05       		.uleb128 0x5
 3835 0963 03       		.byte	0x3
 3836 0964 00000000 		.4byte	currentRow
 3837 0968 22       		.uleb128 0x22
 3838 0969 74020000 		.4byte	.LASF148
 3839 096d 01       		.byte	0x1
 3840 096e CD       		.byte	0xcd
 3841 096f 96000000 		.4byte	0x96
 3842 0973 05       		.uleb128 0x5
 3843 0974 03       		.byte	0x3
 3844 0975 00000000 		.4byte	currentCol
 3845 0979 22       		.uleb128 0x22
 3846 097a CE080000 		.4byte	.LASF149
 3847 097e 01       		.byte	0x1
 3848 097f CF       		.byte	0xcf
 3849 0980 96000000 		.4byte	0x96
 3850 0984 05       		.uleb128 0x5
 3851 0985 03       		.byte	0x3
 3852 0986 00000000 		.4byte	stoppedAfterTurn
 3853 098a 22       		.uleb128 0x22
 3854 098b 65060000 		.4byte	.LASF150
 3855 098f 01       		.byte	0x1
 3856 0990 D0       		.byte	0xd0
 3857 0991 96000000 		.4byte	0x96
 3858 0995 05       		.uleb128 0x5
 3859 0996 03       		.byte	0x3
 3860 0997 00000000 		.4byte	ignoreSensor
 3861 099b 22       		.uleb128 0x22
 3862 099c C8060000 		.4byte	.LASF151
 3863 09a0 01       		.byte	0x1
 3864 09a1 F8       		.byte	0xf8
 3865 09a2 84020000 		.4byte	0x284
 3866 09a6 05       		.uleb128 0x5
 3867 09a7 03       		.byte	0x3
 3868 09a8 00000000 		.4byte	lastDirectionAfter180
 3869 09ac 26       		.uleb128 0x26
 3870 09ad 12020000 		.4byte	.LASF152
 3871 09b1 01       		.byte	0x1
 3872 09b2 3A01     		.2byte	0x13a
 3873 09b4 96000000 		.4byte	0x96
 3874 09b8 05       		.uleb128 0x5
 3875 09b9 03       		.byte	0x3
 3876 09ba 00000000 		.4byte	firstTurnIteration
 3877 09be 00       		.byte	0
 3878              		.section	.debug_abbrev,"",%progbits
 3879              	.Ldebug_abbrev0:
 3880 0000 01       		.uleb128 0x1
 3881 0001 11       		.uleb128 0x11
 3882 0002 01       		.byte	0x1
 3883 0003 25       		.uleb128 0x25
 3884 0004 0E       		.uleb128 0xe
 3885 0005 13       		.uleb128 0x13
 3886 0006 0B       		.uleb128 0xb
 3887 0007 03       		.uleb128 0x3
 3888 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 84


 3889 0009 1B       		.uleb128 0x1b
 3890 000a 0E       		.uleb128 0xe
 3891 000b 55       		.uleb128 0x55
 3892 000c 17       		.uleb128 0x17
 3893 000d 11       		.uleb128 0x11
 3894 000e 01       		.uleb128 0x1
 3895 000f 10       		.uleb128 0x10
 3896 0010 17       		.uleb128 0x17
 3897 0011 00       		.byte	0
 3898 0012 00       		.byte	0
 3899 0013 02       		.uleb128 0x2
 3900 0014 24       		.uleb128 0x24
 3901 0015 00       		.byte	0
 3902 0016 0B       		.uleb128 0xb
 3903 0017 0B       		.uleb128 0xb
 3904 0018 3E       		.uleb128 0x3e
 3905 0019 0B       		.uleb128 0xb
 3906 001a 03       		.uleb128 0x3
 3907 001b 0E       		.uleb128 0xe
 3908 001c 00       		.byte	0
 3909 001d 00       		.byte	0
 3910 001e 03       		.uleb128 0x3
 3911 001f 16       		.uleb128 0x16
 3912 0020 00       		.byte	0
 3913 0021 03       		.uleb128 0x3
 3914 0022 0E       		.uleb128 0xe
 3915 0023 3A       		.uleb128 0x3a
 3916 0024 0B       		.uleb128 0xb
 3917 0025 3B       		.uleb128 0x3b
 3918 0026 0B       		.uleb128 0xb
 3919 0027 49       		.uleb128 0x49
 3920 0028 13       		.uleb128 0x13
 3921 0029 00       		.byte	0
 3922 002a 00       		.byte	0
 3923 002b 04       		.uleb128 0x4
 3924 002c 24       		.uleb128 0x24
 3925 002d 00       		.byte	0
 3926 002e 0B       		.uleb128 0xb
 3927 002f 0B       		.uleb128 0xb
 3928 0030 3E       		.uleb128 0x3e
 3929 0031 0B       		.uleb128 0xb
 3930 0032 03       		.uleb128 0x3
 3931 0033 08       		.uleb128 0x8
 3932 0034 00       		.byte	0
 3933 0035 00       		.byte	0
 3934 0036 05       		.uleb128 0x5
 3935 0037 16       		.uleb128 0x16
 3936 0038 00       		.byte	0
 3937 0039 03       		.uleb128 0x3
 3938 003a 0E       		.uleb128 0xe
 3939 003b 3A       		.uleb128 0x3a
 3940 003c 0B       		.uleb128 0xb
 3941 003d 3B       		.uleb128 0x3b
 3942 003e 05       		.uleb128 0x5
 3943 003f 49       		.uleb128 0x49
 3944 0040 13       		.uleb128 0x13
 3945 0041 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 85


 3946 0042 00       		.byte	0
 3947 0043 06       		.uleb128 0x6
 3948 0044 35       		.uleb128 0x35
 3949 0045 00       		.byte	0
 3950 0046 49       		.uleb128 0x49
 3951 0047 13       		.uleb128 0x13
 3952 0048 00       		.byte	0
 3953 0049 00       		.byte	0
 3954 004a 07       		.uleb128 0x7
 3955 004b 01       		.uleb128 0x1
 3956 004c 01       		.byte	0x1
 3957 004d 49       		.uleb128 0x49
 3958 004e 13       		.uleb128 0x13
 3959 004f 01       		.uleb128 0x1
 3960 0050 13       		.uleb128 0x13
 3961 0051 00       		.byte	0
 3962 0052 00       		.byte	0
 3963 0053 08       		.uleb128 0x8
 3964 0054 21       		.uleb128 0x21
 3965 0055 00       		.byte	0
 3966 0056 49       		.uleb128 0x49
 3967 0057 13       		.uleb128 0x13
 3968 0058 2F       		.uleb128 0x2f
 3969 0059 0B       		.uleb128 0xb
 3970 005a 00       		.byte	0
 3971 005b 00       		.byte	0
 3972 005c 09       		.uleb128 0x9
 3973 005d 13       		.uleb128 0x13
 3974 005e 01       		.byte	0x1
 3975 005f 03       		.uleb128 0x3
 3976 0060 0E       		.uleb128 0xe
 3977 0061 0B       		.uleb128 0xb
 3978 0062 0B       		.uleb128 0xb
 3979 0063 3A       		.uleb128 0x3a
 3980 0064 0B       		.uleb128 0xb
 3981 0065 3B       		.uleb128 0x3b
 3982 0066 0B       		.uleb128 0xb
 3983 0067 01       		.uleb128 0x1
 3984 0068 13       		.uleb128 0x13
 3985 0069 00       		.byte	0
 3986 006a 00       		.byte	0
 3987 006b 0A       		.uleb128 0xa
 3988 006c 0D       		.uleb128 0xd
 3989 006d 00       		.byte	0
 3990 006e 03       		.uleb128 0x3
 3991 006f 0E       		.uleb128 0xe
 3992 0070 3A       		.uleb128 0x3a
 3993 0071 0B       		.uleb128 0xb
 3994 0072 3B       		.uleb128 0x3b
 3995 0073 0B       		.uleb128 0xb
 3996 0074 49       		.uleb128 0x49
 3997 0075 13       		.uleb128 0x13
 3998 0076 38       		.uleb128 0x38
 3999 0077 0B       		.uleb128 0xb
 4000 0078 00       		.byte	0
 4001 0079 00       		.byte	0
 4002 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 86


 4003 007b 04       		.uleb128 0x4
 4004 007c 01       		.byte	0x1
 4005 007d 03       		.uleb128 0x3
 4006 007e 0E       		.uleb128 0xe
 4007 007f 0B       		.uleb128 0xb
 4008 0080 0B       		.uleb128 0xb
 4009 0081 49       		.uleb128 0x49
 4010 0082 13       		.uleb128 0x13
 4011 0083 3A       		.uleb128 0x3a
 4012 0084 0B       		.uleb128 0xb
 4013 0085 3B       		.uleb128 0x3b
 4014 0086 0B       		.uleb128 0xb
 4015 0087 01       		.uleb128 0x1
 4016 0088 13       		.uleb128 0x13
 4017 0089 00       		.byte	0
 4018 008a 00       		.byte	0
 4019 008b 0C       		.uleb128 0xc
 4020 008c 28       		.uleb128 0x28
 4021 008d 00       		.byte	0
 4022 008e 03       		.uleb128 0x3
 4023 008f 08       		.uleb128 0x8
 4024 0090 1C       		.uleb128 0x1c
 4025 0091 0B       		.uleb128 0xb
 4026 0092 00       		.byte	0
 4027 0093 00       		.byte	0
 4028 0094 0D       		.uleb128 0xd
 4029 0095 28       		.uleb128 0x28
 4030 0096 00       		.byte	0
 4031 0097 03       		.uleb128 0x3
 4032 0098 0E       		.uleb128 0xe
 4033 0099 1C       		.uleb128 0x1c
 4034 009a 0B       		.uleb128 0xb
 4035 009b 00       		.byte	0
 4036 009c 00       		.byte	0
 4037 009d 0E       		.uleb128 0xe
 4038 009e 2E       		.uleb128 0x2e
 4039 009f 01       		.byte	0x1
 4040 00a0 3F       		.uleb128 0x3f
 4041 00a1 19       		.uleb128 0x19
 4042 00a2 03       		.uleb128 0x3
 4043 00a3 0E       		.uleb128 0xe
 4044 00a4 3A       		.uleb128 0x3a
 4045 00a5 0B       		.uleb128 0xb
 4046 00a6 3B       		.uleb128 0x3b
 4047 00a7 0B       		.uleb128 0xb
 4048 00a8 27       		.uleb128 0x27
 4049 00a9 19       		.uleb128 0x19
 4050 00aa 11       		.uleb128 0x11
 4051 00ab 01       		.uleb128 0x1
 4052 00ac 12       		.uleb128 0x12
 4053 00ad 06       		.uleb128 0x6
 4054 00ae 40       		.uleb128 0x40
 4055 00af 18       		.uleb128 0x18
 4056 00b0 9642     		.uleb128 0x2116
 4057 00b2 19       		.uleb128 0x19
 4058 00b3 01       		.uleb128 0x1
 4059 00b4 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 87


 4060 00b5 00       		.byte	0
 4061 00b6 00       		.byte	0
 4062 00b7 0F       		.uleb128 0xf
 4063 00b8 0B       		.uleb128 0xb
 4064 00b9 01       		.byte	0x1
 4065 00ba 11       		.uleb128 0x11
 4066 00bb 01       		.uleb128 0x1
 4067 00bc 12       		.uleb128 0x12
 4068 00bd 06       		.uleb128 0x6
 4069 00be 00       		.byte	0
 4070 00bf 00       		.byte	0
 4071 00c0 10       		.uleb128 0x10
 4072 00c1 34       		.uleb128 0x34
 4073 00c2 00       		.byte	0
 4074 00c3 03       		.uleb128 0x3
 4075 00c4 0E       		.uleb128 0xe
 4076 00c5 3A       		.uleb128 0x3a
 4077 00c6 0B       		.uleb128 0xb
 4078 00c7 3B       		.uleb128 0x3b
 4079 00c8 0B       		.uleb128 0xb
 4080 00c9 49       		.uleb128 0x49
 4081 00ca 13       		.uleb128 0x13
 4082 00cb 02       		.uleb128 0x2
 4083 00cc 18       		.uleb128 0x18
 4084 00cd 00       		.byte	0
 4085 00ce 00       		.byte	0
 4086 00cf 11       		.uleb128 0x11
 4087 00d0 2E       		.uleb128 0x2e
 4088 00d1 00       		.byte	0
 4089 00d2 3F       		.uleb128 0x3f
 4090 00d3 19       		.uleb128 0x19
 4091 00d4 03       		.uleb128 0x3
 4092 00d5 0E       		.uleb128 0xe
 4093 00d6 3A       		.uleb128 0x3a
 4094 00d7 0B       		.uleb128 0xb
 4095 00d8 3B       		.uleb128 0x3b
 4096 00d9 0B       		.uleb128 0xb
 4097 00da 27       		.uleb128 0x27
 4098 00db 19       		.uleb128 0x19
 4099 00dc 11       		.uleb128 0x11
 4100 00dd 01       		.uleb128 0x1
 4101 00de 12       		.uleb128 0x12
 4102 00df 06       		.uleb128 0x6
 4103 00e0 40       		.uleb128 0x40
 4104 00e1 18       		.uleb128 0x18
 4105 00e2 9742     		.uleb128 0x2117
 4106 00e4 19       		.uleb128 0x19
 4107 00e5 00       		.byte	0
 4108 00e6 00       		.byte	0
 4109 00e7 12       		.uleb128 0x12
 4110 00e8 2E       		.uleb128 0x2e
 4111 00e9 00       		.byte	0
 4112 00ea 3F       		.uleb128 0x3f
 4113 00eb 19       		.uleb128 0x19
 4114 00ec 03       		.uleb128 0x3
 4115 00ed 0E       		.uleb128 0xe
 4116 00ee 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 88


 4117 00ef 0B       		.uleb128 0xb
 4118 00f0 3B       		.uleb128 0x3b
 4119 00f1 0B       		.uleb128 0xb
 4120 00f2 27       		.uleb128 0x27
 4121 00f3 19       		.uleb128 0x19
 4122 00f4 11       		.uleb128 0x11
 4123 00f5 01       		.uleb128 0x1
 4124 00f6 12       		.uleb128 0x12
 4125 00f7 06       		.uleb128 0x6
 4126 00f8 40       		.uleb128 0x40
 4127 00f9 18       		.uleb128 0x18
 4128 00fa 9642     		.uleb128 0x2116
 4129 00fc 19       		.uleb128 0x19
 4130 00fd 00       		.byte	0
 4131 00fe 00       		.byte	0
 4132 00ff 13       		.uleb128 0x13
 4133 0100 2E       		.uleb128 0x2e
 4134 0101 00       		.byte	0
 4135 0102 3F       		.uleb128 0x3f
 4136 0103 19       		.uleb128 0x19
 4137 0104 03       		.uleb128 0x3
 4138 0105 0E       		.uleb128 0xe
 4139 0106 3A       		.uleb128 0x3a
 4140 0107 0B       		.uleb128 0xb
 4141 0108 3B       		.uleb128 0x3b
 4142 0109 0B       		.uleb128 0xb
 4143 010a 49       		.uleb128 0x49
 4144 010b 13       		.uleb128 0x13
 4145 010c 11       		.uleb128 0x11
 4146 010d 01       		.uleb128 0x1
 4147 010e 12       		.uleb128 0x12
 4148 010f 06       		.uleb128 0x6
 4149 0110 40       		.uleb128 0x40
 4150 0111 18       		.uleb128 0x18
 4151 0112 9642     		.uleb128 0x2116
 4152 0114 19       		.uleb128 0x19
 4153 0115 00       		.byte	0
 4154 0116 00       		.byte	0
 4155 0117 14       		.uleb128 0x14
 4156 0118 2E       		.uleb128 0x2e
 4157 0119 01       		.byte	0x1
 4158 011a 3F       		.uleb128 0x3f
 4159 011b 19       		.uleb128 0x19
 4160 011c 03       		.uleb128 0x3
 4161 011d 0E       		.uleb128 0xe
 4162 011e 3A       		.uleb128 0x3a
 4163 011f 0B       		.uleb128 0xb
 4164 0120 3B       		.uleb128 0x3b
 4165 0121 0B       		.uleb128 0xb
 4166 0122 27       		.uleb128 0x27
 4167 0123 19       		.uleb128 0x19
 4168 0124 49       		.uleb128 0x49
 4169 0125 13       		.uleb128 0x13
 4170 0126 11       		.uleb128 0x11
 4171 0127 01       		.uleb128 0x1
 4172 0128 12       		.uleb128 0x12
 4173 0129 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 89


 4174 012a 40       		.uleb128 0x40
 4175 012b 18       		.uleb128 0x18
 4176 012c 9642     		.uleb128 0x2116
 4177 012e 19       		.uleb128 0x19
 4178 012f 01       		.uleb128 0x1
 4179 0130 13       		.uleb128 0x13
 4180 0131 00       		.byte	0
 4181 0132 00       		.byte	0
 4182 0133 15       		.uleb128 0x15
 4183 0134 05       		.uleb128 0x5
 4184 0135 00       		.byte	0
 4185 0136 03       		.uleb128 0x3
 4186 0137 0E       		.uleb128 0xe
 4187 0138 3A       		.uleb128 0x3a
 4188 0139 0B       		.uleb128 0xb
 4189 013a 3B       		.uleb128 0x3b
 4190 013b 0B       		.uleb128 0xb
 4191 013c 49       		.uleb128 0x49
 4192 013d 13       		.uleb128 0x13
 4193 013e 02       		.uleb128 0x2
 4194 013f 18       		.uleb128 0x18
 4195 0140 00       		.byte	0
 4196 0141 00       		.byte	0
 4197 0142 16       		.uleb128 0x16
 4198 0143 34       		.uleb128 0x34
 4199 0144 00       		.byte	0
 4200 0145 03       		.uleb128 0x3
 4201 0146 08       		.uleb128 0x8
 4202 0147 3A       		.uleb128 0x3a
 4203 0148 0B       		.uleb128 0xb
 4204 0149 3B       		.uleb128 0x3b
 4205 014a 0B       		.uleb128 0xb
 4206 014b 49       		.uleb128 0x49
 4207 014c 13       		.uleb128 0x13
 4208 014d 02       		.uleb128 0x2
 4209 014e 18       		.uleb128 0x18
 4210 014f 00       		.byte	0
 4211 0150 00       		.byte	0
 4212 0151 17       		.uleb128 0x17
 4213 0152 2E       		.uleb128 0x2e
 4214 0153 00       		.byte	0
 4215 0154 3F       		.uleb128 0x3f
 4216 0155 19       		.uleb128 0x19
 4217 0156 03       		.uleb128 0x3
 4218 0157 0E       		.uleb128 0xe
 4219 0158 3A       		.uleb128 0x3a
 4220 0159 0B       		.uleb128 0xb
 4221 015a 3B       		.uleb128 0x3b
 4222 015b 0B       		.uleb128 0xb
 4223 015c 11       		.uleb128 0x11
 4224 015d 01       		.uleb128 0x1
 4225 015e 12       		.uleb128 0x12
 4226 015f 06       		.uleb128 0x6
 4227 0160 40       		.uleb128 0x40
 4228 0161 18       		.uleb128 0x18
 4229 0162 9742     		.uleb128 0x2117
 4230 0164 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 90


 4231 0165 00       		.byte	0
 4232 0166 00       		.byte	0
 4233 0167 18       		.uleb128 0x18
 4234 0168 2E       		.uleb128 0x2e
 4235 0169 00       		.byte	0
 4236 016a 3F       		.uleb128 0x3f
 4237 016b 19       		.uleb128 0x19
 4238 016c 03       		.uleb128 0x3
 4239 016d 0E       		.uleb128 0xe
 4240 016e 3A       		.uleb128 0x3a
 4241 016f 0B       		.uleb128 0xb
 4242 0170 3B       		.uleb128 0x3b
 4243 0171 0B       		.uleb128 0xb
 4244 0172 49       		.uleb128 0x49
 4245 0173 13       		.uleb128 0x13
 4246 0174 11       		.uleb128 0x11
 4247 0175 01       		.uleb128 0x1
 4248 0176 12       		.uleb128 0x12
 4249 0177 06       		.uleb128 0x6
 4250 0178 40       		.uleb128 0x40
 4251 0179 18       		.uleb128 0x18
 4252 017a 9742     		.uleb128 0x2117
 4253 017c 19       		.uleb128 0x19
 4254 017d 00       		.byte	0
 4255 017e 00       		.byte	0
 4256 017f 19       		.uleb128 0x19
 4257 0180 2E       		.uleb128 0x2e
 4258 0181 00       		.byte	0
 4259 0182 3F       		.uleb128 0x3f
 4260 0183 19       		.uleb128 0x19
 4261 0184 03       		.uleb128 0x3
 4262 0185 0E       		.uleb128 0xe
 4263 0186 3A       		.uleb128 0x3a
 4264 0187 0B       		.uleb128 0xb
 4265 0188 3B       		.uleb128 0x3b
 4266 0189 05       		.uleb128 0x5
 4267 018a 49       		.uleb128 0x49
 4268 018b 13       		.uleb128 0x13
 4269 018c 11       		.uleb128 0x11
 4270 018d 01       		.uleb128 0x1
 4271 018e 12       		.uleb128 0x12
 4272 018f 06       		.uleb128 0x6
 4273 0190 40       		.uleb128 0x40
 4274 0191 18       		.uleb128 0x18
 4275 0192 9742     		.uleb128 0x2117
 4276 0194 19       		.uleb128 0x19
 4277 0195 00       		.byte	0
 4278 0196 00       		.byte	0
 4279 0197 1A       		.uleb128 0x1a
 4280 0198 2E       		.uleb128 0x2e
 4281 0199 01       		.byte	0x1
 4282 019a 3F       		.uleb128 0x3f
 4283 019b 19       		.uleb128 0x19
 4284 019c 03       		.uleb128 0x3
 4285 019d 0E       		.uleb128 0xe
 4286 019e 3A       		.uleb128 0x3a
 4287 019f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 91


 4288 01a0 3B       		.uleb128 0x3b
 4289 01a1 05       		.uleb128 0x5
 4290 01a2 49       		.uleb128 0x49
 4291 01a3 13       		.uleb128 0x13
 4292 01a4 11       		.uleb128 0x11
 4293 01a5 01       		.uleb128 0x1
 4294 01a6 12       		.uleb128 0x12
 4295 01a7 06       		.uleb128 0x6
 4296 01a8 40       		.uleb128 0x40
 4297 01a9 18       		.uleb128 0x18
 4298 01aa 9642     		.uleb128 0x2116
 4299 01ac 19       		.uleb128 0x19
 4300 01ad 01       		.uleb128 0x1
 4301 01ae 13       		.uleb128 0x13
 4302 01af 00       		.byte	0
 4303 01b0 00       		.byte	0
 4304 01b1 1B       		.uleb128 0x1b
 4305 01b2 34       		.uleb128 0x34
 4306 01b3 00       		.byte	0
 4307 01b4 03       		.uleb128 0x3
 4308 01b5 0E       		.uleb128 0xe
 4309 01b6 3A       		.uleb128 0x3a
 4310 01b7 0B       		.uleb128 0xb
 4311 01b8 3B       		.uleb128 0x3b
 4312 01b9 05       		.uleb128 0x5
 4313 01ba 49       		.uleb128 0x49
 4314 01bb 13       		.uleb128 0x13
 4315 01bc 02       		.uleb128 0x2
 4316 01bd 18       		.uleb128 0x18
 4317 01be 00       		.byte	0
 4318 01bf 00       		.byte	0
 4319 01c0 1C       		.uleb128 0x1c
 4320 01c1 2E       		.uleb128 0x2e
 4321 01c2 00       		.byte	0
 4322 01c3 3F       		.uleb128 0x3f
 4323 01c4 19       		.uleb128 0x19
 4324 01c5 03       		.uleb128 0x3
 4325 01c6 0E       		.uleb128 0xe
 4326 01c7 3A       		.uleb128 0x3a
 4327 01c8 0B       		.uleb128 0xb
 4328 01c9 3B       		.uleb128 0x3b
 4329 01ca 05       		.uleb128 0x5
 4330 01cb 11       		.uleb128 0x11
 4331 01cc 01       		.uleb128 0x1
 4332 01cd 12       		.uleb128 0x12
 4333 01ce 06       		.uleb128 0x6
 4334 01cf 40       		.uleb128 0x40
 4335 01d0 18       		.uleb128 0x18
 4336 01d1 9742     		.uleb128 0x2117
 4337 01d3 19       		.uleb128 0x19
 4338 01d4 00       		.byte	0
 4339 01d5 00       		.byte	0
 4340 01d6 1D       		.uleb128 0x1d
 4341 01d7 2E       		.uleb128 0x2e
 4342 01d8 01       		.byte	0x1
 4343 01d9 3F       		.uleb128 0x3f
 4344 01da 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 92


 4345 01db 03       		.uleb128 0x3
 4346 01dc 0E       		.uleb128 0xe
 4347 01dd 3A       		.uleb128 0x3a
 4348 01de 0B       		.uleb128 0xb
 4349 01df 3B       		.uleb128 0x3b
 4350 01e0 05       		.uleb128 0x5
 4351 01e1 49       		.uleb128 0x49
 4352 01e2 13       		.uleb128 0x13
 4353 01e3 11       		.uleb128 0x11
 4354 01e4 01       		.uleb128 0x1
 4355 01e5 12       		.uleb128 0x12
 4356 01e6 06       		.uleb128 0x6
 4357 01e7 40       		.uleb128 0x40
 4358 01e8 18       		.uleb128 0x18
 4359 01e9 9742     		.uleb128 0x2117
 4360 01eb 19       		.uleb128 0x19
 4361 01ec 01       		.uleb128 0x1
 4362 01ed 13       		.uleb128 0x13
 4363 01ee 00       		.byte	0
 4364 01ef 00       		.byte	0
 4365 01f0 1E       		.uleb128 0x1e
 4366 01f1 2E       		.uleb128 0x2e
 4367 01f2 01       		.byte	0x1
 4368 01f3 3F       		.uleb128 0x3f
 4369 01f4 19       		.uleb128 0x19
 4370 01f5 03       		.uleb128 0x3
 4371 01f6 0E       		.uleb128 0xe
 4372 01f7 3A       		.uleb128 0x3a
 4373 01f8 0B       		.uleb128 0xb
 4374 01f9 3B       		.uleb128 0x3b
 4375 01fa 05       		.uleb128 0x5
 4376 01fb 11       		.uleb128 0x11
 4377 01fc 01       		.uleb128 0x1
 4378 01fd 12       		.uleb128 0x12
 4379 01fe 06       		.uleb128 0x6
 4380 01ff 40       		.uleb128 0x40
 4381 0200 18       		.uleb128 0x18
 4382 0201 9642     		.uleb128 0x2116
 4383 0203 19       		.uleb128 0x19
 4384 0204 01       		.uleb128 0x1
 4385 0205 13       		.uleb128 0x13
 4386 0206 00       		.byte	0
 4387 0207 00       		.byte	0
 4388 0208 1F       		.uleb128 0x1f
 4389 0209 2E       		.uleb128 0x2e
 4390 020a 00       		.byte	0
 4391 020b 3F       		.uleb128 0x3f
 4392 020c 19       		.uleb128 0x19
 4393 020d 03       		.uleb128 0x3
 4394 020e 0E       		.uleb128 0xe
 4395 020f 3A       		.uleb128 0x3a
 4396 0210 0B       		.uleb128 0xb
 4397 0211 3B       		.uleb128 0x3b
 4398 0212 05       		.uleb128 0x5
 4399 0213 11       		.uleb128 0x11
 4400 0214 01       		.uleb128 0x1
 4401 0215 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 93


 4402 0216 06       		.uleb128 0x6
 4403 0217 40       		.uleb128 0x40
 4404 0218 18       		.uleb128 0x18
 4405 0219 9642     		.uleb128 0x2116
 4406 021b 19       		.uleb128 0x19
 4407 021c 00       		.byte	0
 4408 021d 00       		.byte	0
 4409 021e 20       		.uleb128 0x20
 4410 021f 34       		.uleb128 0x34
 4411 0220 00       		.byte	0
 4412 0221 03       		.uleb128 0x3
 4413 0222 0E       		.uleb128 0xe
 4414 0223 3A       		.uleb128 0x3a
 4415 0224 0B       		.uleb128 0xb
 4416 0225 3B       		.uleb128 0x3b
 4417 0226 05       		.uleb128 0x5
 4418 0227 49       		.uleb128 0x49
 4419 0228 13       		.uleb128 0x13
 4420 0229 3F       		.uleb128 0x3f
 4421 022a 19       		.uleb128 0x19
 4422 022b 3C       		.uleb128 0x3c
 4423 022c 19       		.uleb128 0x19
 4424 022d 00       		.byte	0
 4425 022e 00       		.byte	0
 4426 022f 21       		.uleb128 0x21
 4427 0230 34       		.uleb128 0x34
 4428 0231 00       		.byte	0
 4429 0232 03       		.uleb128 0x3
 4430 0233 08       		.uleb128 0x8
 4431 0234 3A       		.uleb128 0x3a
 4432 0235 0B       		.uleb128 0xb
 4433 0236 3B       		.uleb128 0x3b
 4434 0237 0B       		.uleb128 0xb
 4435 0238 49       		.uleb128 0x49
 4436 0239 13       		.uleb128 0x13
 4437 023a 3F       		.uleb128 0x3f
 4438 023b 19       		.uleb128 0x19
 4439 023c 02       		.uleb128 0x2
 4440 023d 18       		.uleb128 0x18
 4441 023e 00       		.byte	0
 4442 023f 00       		.byte	0
 4443 0240 22       		.uleb128 0x22
 4444 0241 34       		.uleb128 0x34
 4445 0242 00       		.byte	0
 4446 0243 03       		.uleb128 0x3
 4447 0244 0E       		.uleb128 0xe
 4448 0245 3A       		.uleb128 0x3a
 4449 0246 0B       		.uleb128 0xb
 4450 0247 3B       		.uleb128 0x3b
 4451 0248 0B       		.uleb128 0xb
 4452 0249 49       		.uleb128 0x49
 4453 024a 13       		.uleb128 0x13
 4454 024b 3F       		.uleb128 0x3f
 4455 024c 19       		.uleb128 0x19
 4456 024d 02       		.uleb128 0x2
 4457 024e 18       		.uleb128 0x18
 4458 024f 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 94


 4459 0250 00       		.byte	0
 4460 0251 23       		.uleb128 0x23
 4461 0252 34       		.uleb128 0x34
 4462 0253 00       		.byte	0
 4463 0254 03       		.uleb128 0x3
 4464 0255 08       		.uleb128 0x8
 4465 0256 3A       		.uleb128 0x3a
 4466 0257 0B       		.uleb128 0xb
 4467 0258 3B       		.uleb128 0x3b
 4468 0259 0B       		.uleb128 0xb
 4469 025a 49       		.uleb128 0x49
 4470 025b 13       		.uleb128 0x13
 4471 025c 3F       		.uleb128 0x3f
 4472 025d 19       		.uleb128 0x19
 4473 025e 3C       		.uleb128 0x3c
 4474 025f 19       		.uleb128 0x19
 4475 0260 00       		.byte	0
 4476 0261 00       		.byte	0
 4477 0262 24       		.uleb128 0x24
 4478 0263 34       		.uleb128 0x34
 4479 0264 00       		.byte	0
 4480 0265 03       		.uleb128 0x3
 4481 0266 0E       		.uleb128 0xe
 4482 0267 3A       		.uleb128 0x3a
 4483 0268 0B       		.uleb128 0xb
 4484 0269 3B       		.uleb128 0x3b
 4485 026a 0B       		.uleb128 0xb
 4486 026b 49       		.uleb128 0x49
 4487 026c 13       		.uleb128 0x13
 4488 026d 3F       		.uleb128 0x3f
 4489 026e 19       		.uleb128 0x19
 4490 026f 3C       		.uleb128 0x3c
 4491 0270 19       		.uleb128 0x19
 4492 0271 00       		.byte	0
 4493 0272 00       		.byte	0
 4494 0273 25       		.uleb128 0x25
 4495 0274 0F       		.uleb128 0xf
 4496 0275 00       		.byte	0
 4497 0276 0B       		.uleb128 0xb
 4498 0277 0B       		.uleb128 0xb
 4499 0278 49       		.uleb128 0x49
 4500 0279 13       		.uleb128 0x13
 4501 027a 00       		.byte	0
 4502 027b 00       		.byte	0
 4503 027c 26       		.uleb128 0x26
 4504 027d 34       		.uleb128 0x34
 4505 027e 00       		.byte	0
 4506 027f 03       		.uleb128 0x3
 4507 0280 0E       		.uleb128 0xe
 4508 0281 3A       		.uleb128 0x3a
 4509 0282 0B       		.uleb128 0xb
 4510 0283 3B       		.uleb128 0x3b
 4511 0284 05       		.uleb128 0x5
 4512 0285 49       		.uleb128 0x49
 4513 0286 13       		.uleb128 0x13
 4514 0287 3F       		.uleb128 0x3f
 4515 0288 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 95


 4516 0289 02       		.uleb128 0x2
 4517 028a 18       		.uleb128 0x18
 4518 028b 00       		.byte	0
 4519 028c 00       		.byte	0
 4520 028d 00       		.byte	0
 4521              		.section	.debug_aranges,"",%progbits
 4522 0000 9C000000 		.4byte	0x9c
 4523 0004 0200     		.2byte	0x2
 4524 0006 00000000 		.4byte	.Ldebug_info0
 4525 000a 04       		.byte	0x4
 4526 000b 00       		.byte	0
 4527 000c 0000     		.2byte	0
 4528 000e 0000     		.2byte	0
 4529 0010 00000000 		.4byte	.LFB64
 4530 0014 EC000000 		.4byte	.LFE64-.LFB64
 4531 0018 00000000 		.4byte	.LFB65
 4532 001c 18000000 		.4byte	.LFE65-.LFB65
 4533 0020 00000000 		.4byte	.LFB66
 4534 0024 18000000 		.4byte	.LFE66-.LFB66
 4535 0028 00000000 		.4byte	.LFB67
 4536 002c 18000000 		.4byte	.LFE67-.LFB67
 4537 0030 00000000 		.4byte	.LFB68
 4538 0034 18000000 		.4byte	.LFE68-.LFB68
 4539 0038 00000000 		.4byte	.LFB69
 4540 003c 68000000 		.4byte	.LFE69-.LFB69
 4541 0040 00000000 		.4byte	.LFB70
 4542 0044 04010000 		.4byte	.LFE70-.LFB70
 4543 0048 00000000 		.4byte	.LFB71
 4544 004c 54000000 		.4byte	.LFE71-.LFB71
 4545 0050 00000000 		.4byte	.LFB72
 4546 0054 34000000 		.4byte	.LFE72-.LFB72
 4547 0058 00000000 		.4byte	.LFB73
 4548 005c 84000000 		.4byte	.LFE73-.LFB73
 4549 0060 00000000 		.4byte	.LFB74
 4550 0064 7C000000 		.4byte	.LFE74-.LFB74
 4551 0068 00000000 		.4byte	.LFB75
 4552 006c 84000000 		.4byte	.LFE75-.LFB75
 4553 0070 00000000 		.4byte	.LFB76
 4554 0074 C0050000 		.4byte	.LFE76-.LFB76
 4555 0078 00000000 		.4byte	.LFB77
 4556 007c 68000000 		.4byte	.LFE77-.LFB77
 4557 0080 00000000 		.4byte	.LFB78
 4558 0084 6C000000 		.4byte	.LFE78-.LFB78
 4559 0088 00000000 		.4byte	.LFB79
 4560 008c 3C010000 		.4byte	.LFE79-.LFB79
 4561 0090 00000000 		.4byte	.LFB80
 4562 0094 BC000000 		.4byte	.LFE80-.LFB80
 4563 0098 00000000 		.4byte	0
 4564 009c 00000000 		.4byte	0
 4565              		.section	.debug_ranges,"",%progbits
 4566              	.Ldebug_ranges0:
 4567 0000 00000000 		.4byte	.LFB64
 4568 0004 EC000000 		.4byte	.LFE64
 4569 0008 00000000 		.4byte	.LFB65
 4570 000c 18000000 		.4byte	.LFE65
 4571 0010 00000000 		.4byte	.LFB66
 4572 0014 18000000 		.4byte	.LFE66
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 96


 4573 0018 00000000 		.4byte	.LFB67
 4574 001c 18000000 		.4byte	.LFE67
 4575 0020 00000000 		.4byte	.LFB68
 4576 0024 18000000 		.4byte	.LFE68
 4577 0028 00000000 		.4byte	.LFB69
 4578 002c 68000000 		.4byte	.LFE69
 4579 0030 00000000 		.4byte	.LFB70
 4580 0034 04010000 		.4byte	.LFE70
 4581 0038 00000000 		.4byte	.LFB71
 4582 003c 54000000 		.4byte	.LFE71
 4583 0040 00000000 		.4byte	.LFB72
 4584 0044 34000000 		.4byte	.LFE72
 4585 0048 00000000 		.4byte	.LFB73
 4586 004c 84000000 		.4byte	.LFE73
 4587 0050 00000000 		.4byte	.LFB74
 4588 0054 7C000000 		.4byte	.LFE74
 4589 0058 00000000 		.4byte	.LFB75
 4590 005c 84000000 		.4byte	.LFE75
 4591 0060 00000000 		.4byte	.LFB76
 4592 0064 C0050000 		.4byte	.LFE76
 4593 0068 00000000 		.4byte	.LFB77
 4594 006c 68000000 		.4byte	.LFE77
 4595 0070 00000000 		.4byte	.LFB78
 4596 0074 6C000000 		.4byte	.LFE78
 4597 0078 00000000 		.4byte	.LFB79
 4598 007c 3C010000 		.4byte	.LFE79
 4599 0080 00000000 		.4byte	.LFB80
 4600 0084 BC000000 		.4byte	.LFE80
 4601 0088 00000000 		.4byte	0
 4602 008c 00000000 		.4byte	0
 4603              		.section	.debug_line,"",%progbits
 4604              	.Ldebug_line0:
 4605 0000 85040000 		.section	.debug_str,"MS",%progbits,1
 4605      02007001 
 4605      00000201 
 4605      FB0E0D00 
 4605      01010101 
 4606              	.LASF135:
 4607 0000 746F7461 		.ascii	"totalDistance\000"
 4607      6C446973 
 4607      74616E63 
 4607      6500
 4608              	.LASF41:
 4609 000e 4F726965 		.ascii	"OrientationState\000"
 4609      6E746174 
 4609      696F6E53 
 4609      74617465 
 4609      00
 4610              	.LASF36:
 4611 001f 67325F73 		.ascii	"g2_speed\000"
 4611      70656564 
 4611      00
 4612              	.LASF94:
 4613 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4613      61726455 
 4613      6E74696C 
 4613      54617267 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 97


 4613      65745374 
 4614              	.LASF56:
 4615 0046 526F626F 		.ascii	"RobotMovement\000"
 4615      744D6F76 
 4615      656D656E 
 4615      7400
 4616              	.LASF128:
 4617 0054 70726576 		.ascii	"previousDirection\000"
 4617      696F7573 
 4617      44697265 
 4617      6374696F 
 4617      6E00
 4618              	.LASF103:
 4619 0066 6C696E65 		.ascii	"lineCount\000"
 4619      436F756E 
 4619      7400
 4620              	.LASF110:
 4621 0070 74735F73 		.ascii	"ts_speed\000"
 4621      70656564 
 4621      00
 4622              	.LASF0:
 4623 0079 7369676E 		.ascii	"signed char\000"
 4623      65642063 
 4623      68617200 
 4624              	.LASF155:
 4625 0085 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4625      6F63756D 
 4625      656E7473 
 4625      5C476974 
 4625      4875625C 
 4626 00b4 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4626      635F636F 
 4626      64655F62 
 4626      6173655C 
 4626      43533330 
 4627              	.LASF69:
 4628 00d6 53345F44 		.ascii	"S4_DETECTED\000"
 4628      45544543 
 4628      54454400 
 4629              	.LASF51:
 4630 00e2 64697265 		.ascii	"direction\000"
 4630      6374696F 
 4630      6E00
 4631              	.LASF138:
 4632 00ec 74696D65 		.ascii	"timerInt\000"
 4632      72496E74 
 4632      00
 4633              	.LASF153:
 4634 00f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4634      43313120 
 4634      352E342E 
 4634      31203230 
 4634      31363036 
 4635 0128 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4635      20726576 
 4635      6973696F 
 4635      6E203233 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 98


 4635      37373135 
 4636 015b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4636      66756E63 
 4636      74696F6E 
 4636      2D736563 
 4636      74696F6E 
 4637              	.LASF82:
 4638 0183 626C6F63 		.ascii	"blocksToTarget\000"
 4638      6B73546F 
 4638      54617267 
 4638      657400
 4639              	.LASF29:
 4640 0192 67305F64 		.ascii	"g0_direction\000"
 4640      69726563 
 4640      74696F6E 
 4640      00
 4641              	.LASF123:
 4642 019f 656E7472 		.ascii	"entry\000"
 4642      7900
 4643              	.LASF7:
 4644 01a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4644      206C6F6E 
 4644      6720756E 
 4644      7369676E 
 4644      65642069 
 4645              	.LASF55:
 4646 01bc 65787065 		.ascii	"expectedOrientation\000"
 4646      63746564 
 4646      4F726965 
 4646      6E746174 
 4646      696F6E00 
 4647              	.LASF46:
 4648 01d0 75547572 		.ascii	"uTurn\000"
 4648      6E00
 4649              	.LASF26:
 4650 01d6 67305F78 		.ascii	"g0_xpos\000"
 4650      706F7300 
 4651              	.LASF140:
 4652 01de 73746F70 		.ascii	"stopBuffer\000"
 4652      42756666 
 4652      657200
 4653              	.LASF104:
 4654 01e9 6F6E4C69 		.ascii	"onLineFlag\000"
 4654      6E65466C 
 4654      616700
 4655              	.LASF54:
 4656 01f4 64697374 		.ascii	"distanceToTarget\000"
 4656      616E6365 
 4656      546F5461 
 4656      72676574 
 4656      00
 4657              	.LASF48:
 4658 0205 53746F70 		.ascii	"StopAtTarget\000"
 4658      41745461 
 4658      72676574 
 4658      00
 4659              	.LASF152:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 99


 4660 0212 66697273 		.ascii	"firstTurnIteration\000"
 4660      74547572 
 4660      6E497465 
 4660      72617469 
 4660      6F6E00
 4661              	.LASF112:
 4662 0225 666C6167 		.ascii	"flag_ts_enc\000"
 4662      5F74735F 
 4662      656E6300 
 4663              	.LASF68:
 4664 0231 53335F44 		.ascii	"S3_DETECTED\000"
 4664      45544543 
 4664      54454400 
 4665              	.LASF118:
 4666 023d 666C6167 		.ascii	"flag_KB_string\000"
 4666      5F4B425F 
 4666      73747269 
 4666      6E6700
 4667              	.LASF70:
 4668 024c 53355F44 		.ascii	"S5_DETECTED\000"
 4668      45544543 
 4668      54454400 
 4669              	.LASF98:
 4670 0258 72696768 		.ascii	"rightStatusFlag\000"
 4670      74537461 
 4670      74757346 
 4670      6C616700 
 4671              	.LASF50:
 4672 0268 496E7374 		.ascii	"Instruction\000"
 4672      72756374 
 4672      696F6E00 
 4673              	.LASF148:
 4674 0274 63757272 		.ascii	"currentCol\000"
 4674      656E7443 
 4674      6F6C00
 4675              	.LASF62:
 4676 027f 53746F70 		.ascii	"Stop\000"
 4676      00
 4677              	.LASF4:
 4678 0284 6C6F6E67 		.ascii	"long int\000"
 4678      20696E74 
 4678      00
 4679              	.LASF107:
 4680 028d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4680      52784275 
 4680      66666572 
 4680      00
 4681              	.LASF88:
 4682 029a 636F756E 		.ascii	"count2\000"
 4682      743200
 4683              	.LASF91:
 4684 02a1 696E7374 		.ascii	"instructionIndex\000"
 4684      72756374 
 4684      696F6E49 
 4684      6E646578 
 4684      00
 4685              	.LASF77:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 100


 4686 02b2 5370696E 		.ascii	"SpinTurnCourseCorrection\000"
 4686      5475726E 
 4686      436F7572 
 4686      7365436F 
 4686      72726563 
 4687              	.LASF47:
 4688 02cb 466F7277 		.ascii	"ForwardUntilTarget\000"
 4688      61726455 
 4688      6E74696C 
 4688      54617267 
 4688      657400
 4689              	.LASF66:
 4690 02de 4261636B 		.ascii	"Backward\000"
 4690      77617264 
 4690      00
 4691              	.LASF14:
 4692 02e7 75696E74 		.ascii	"uint8\000"
 4692      3800
 4693              	.LASF6:
 4694 02ed 6C6F6E67 		.ascii	"long long int\000"
 4694      206C6F6E 
 4694      6720696E 
 4694      7400
 4695              	.LASF20:
 4696 02fb 646F7562 		.ascii	"double\000"
 4696      6C6500
 4697              	.LASF100:
 4698 0302 63757272 		.ascii	"currentIgnoreL\000"
 4698      656E7449 
 4698      676E6F72 
 4698      654C00
 4699              	.LASF119:
 4700 0311 64617461 		.ascii	"dataready_flag\000"
 4700      72656164 
 4700      795F666C 
 4700      616700
 4701              	.LASF73:
 4702 0320 6D61696E 		.ascii	"main\000"
 4702      00
 4703              	.LASF101:
 4704 0325 63757272 		.ascii	"currentIgnoreR\000"
 4704      656E7449 
 4704      676E6F72 
 4704      655200
 4705              	.LASF61:
 4706 0334 41646A75 		.ascii	"AdjustToTheRight\000"
 4706      7374546F 
 4706      54686552 
 4706      69676874 
 4706      00
 4707              	.LASF116:
 4708 0345 666C6167 		.ascii	"flag_rx\000"
 4708      5F727800 
 4709              	.LASF16:
 4710 034d 75696E74 		.ascii	"uint32\000"
 4710      333200
 4711              	.LASF86:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 101


 4712 0354 6E657874 		.ascii	"nextInstruction\000"
 4712      496E7374 
 4712      72756374 
 4712      696F6E00 
 4713              	.LASF157:
 4714 0364 636F756E 		.ascii	"count\000"
 4714      7400
 4715              	.LASF122:
 4716 036a 6C696E65 		.ascii	"line\000"
 4716      00
 4717              	.LASF37:
 4718 036f 67325F64 		.ascii	"g2_direction\000"
 4718      69726563 
 4718      74696F6E 
 4718      00
 4719              	.LASF137:
 4720 037c 71756164 		.ascii	"quadDec2Count\000"
 4720      44656332 
 4720      436F756E 
 4720      7400
 4721              	.LASF58:
 4722 038a 5475726E 		.ascii	"TurnRight\000"
 4722      52696768 
 4722      7400
 4723              	.LASF65:
 4724 0394 466F7277 		.ascii	"ForwardAfterTurn\000"
 4724      61726441 
 4724      66746572 
 4724      5475726E 
 4724      00
 4725              	.LASF49:
 4726 03a5 64617461 		.ascii	"data_main\000"
 4726      5F6D6169 
 4726      6E00
 4727              	.LASF80:
 4728 03af 626C6F63 		.ascii	"blocksize\000"
 4728      6B73697A 
 4728      6500
 4729              	.LASF108:
 4730 03b9 74735F65 		.ascii	"ts_enc\000"
 4730      6E6300
 4731              	.LASF5:
 4732 03c0 6C6F6E67 		.ascii	"long unsigned int\000"
 4732      20756E73 
 4732      69676E65 
 4732      6420696E 
 4732      7400
 4733              	.LASF106:
 4734 03d2 746F6F4C 		.ascii	"tooLateFlag\000"
 4734      61746546 
 4734      6C616700 
 4735              	.LASF144:
 4736 03de 626C6F63 		.ascii	"blockSizeTotal\000"
 4736      6B53697A 
 4736      65546F74 
 4736      616C00
 4737              	.LASF158:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 102


 4738 03ed 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4738      7465436C 
 4738      6F636B77 
 4738      69736531 
 4738      38304465 
 4739              	.LASF64:
 4740 0407 77616974 		.ascii	"waitForTurn\000"
 4740      466F7254 
 4740      75726E00 
 4741              	.LASF57:
 4742 0413 466F7277 		.ascii	"Forward\000"
 4742      61726400 
 4743              	.LASF3:
 4744 041b 73686F72 		.ascii	"short unsigned int\000"
 4744      7420756E 
 4744      7369676E 
 4744      65642069 
 4744      6E7400
 4745              	.LASF105:
 4746 042e 746F6F45 		.ascii	"tooEarlyFlag\000"
 4746      61726C79 
 4746      466C6167 
 4746      00
 4747              	.LASF90:
 4748 043b 53657452 		.ascii	"SetRobotMovement\000"
 4748      6F626F74 
 4748      4D6F7665 
 4748      6D656E74 
 4748      00
 4749              	.LASF17:
 4750 044c 696E7438 		.ascii	"int8\000"
 4750      00
 4751              	.LASF78:
 4752 0451 73706565 		.ascii	"speedTimer\000"
 4752      6454696D 
 4752      657200
 4753              	.LASF12:
 4754 045c 5F5F696E 		.ascii	"__int32_t\000"
 4754      7433325F 
 4754      7400
 4755              	.LASF154:
 4756 0466 6D61696E 		.ascii	"main.c\000"
 4756      2E6300
 4757              	.LASF31:
 4758 046d 67315F79 		.ascii	"g1_ypos\000"
 4758      706F7300 
 4759              	.LASF84:
 4760 0475 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4760      546F4E65 
 4760      7874496E 
 4760      73747275 
 4760      6374696F 
 4761              	.LASF89:
 4762 048b 71756164 		.ascii	"quadPulseCount\000"
 4762      50756C73 
 4762      65436F75 
 4762      6E7400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 103


 4763              	.LASF111:
 4764 049a 74735F64 		.ascii	"ts_display\000"
 4764      6973706C 
 4764      617900
 4765              	.LASF143:
 4766 04a5 63757272 		.ascii	"currentFoodListIndex\000"
 4766      656E7446 
 4766      6F6F644C 
 4766      69737449 
 4766      6E646578 
 4767              	.LASF75:
 4768 04ba 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4768      61726443 
 4768      6F757273 
 4768      65436F72 
 4768      72656374 
 4769              	.LASF117:
 4770 04d2 666C6167 		.ascii	"flag_packet\000"
 4770      5F706163 
 4770      6B657400 
 4771              	.LASF114:
 4772 04de 666C6167 		.ascii	"flag_ts_speed\000"
 4772      5F74735F 
 4772      73706565 
 4772      6400
 4773              	.LASF32:
 4774 04ec 67315F73 		.ascii	"g1_speed\000"
 4774      70656564 
 4774      00
 4775              	.LASF39:
 4776 04f5 4C656674 		.ascii	"Left\000"
 4776      00
 4777              	.LASF96:
 4778 04fa 75547572 		.ascii	"uTurnFinishedFlag\000"
 4778      6E46696E 
 4778      69736865 
 4778      64466C61 
 4778      6700
 4779              	.LASF10:
 4780 050c 73697A65 		.ascii	"sizetype\000"
 4780      74797065 
 4780      00
 4781              	.LASF147:
 4782 0515 63757272 		.ascii	"currentRow\000"
 4782      656E7452 
 4782      6F7700
 4783              	.LASF125:
 4784 0520 73797374 		.ascii	"system_state\000"
 4784      656D5F73 
 4784      74617465 
 4784      00
 4785              	.LASF33:
 4786 052d 67315F64 		.ascii	"g1_direction\000"
 4786      69726563 
 4786      74696F6E 
 4786      00
 4787              	.LASF124:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 104


 4788 053a 75736242 		.ascii	"usbBuffer\000"
 4788      75666665 
 4788      7200
 4789              	.LASF44:
 4790 0544 77616974 		.ascii	"waitForLeftTurn\000"
 4790      466F724C 
 4790      65667454 
 4790      75726E00 
 4791              	.LASF30:
 4792 0554 67315F78 		.ascii	"g1_xpos\000"
 4792      706F7300 
 4793              	.LASF35:
 4794 055c 67325F79 		.ascii	"g2_ypos\000"
 4794      706F7300 
 4795              	.LASF99:
 4796 0564 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4796      436F7572 
 4796      7365436F 
 4796      72726563 
 4796      74696F6E 
 4797              	.LASF120:
 4798 0580 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4798      5F72665F 
 4798      7472616E 
 4798      736D6973 
 4798      73696F6E 
 4799              	.LASF145:
 4800 059c 78426C6F 		.ascii	"xBlocksize\000"
 4800      636B7369 
 4800      7A6500
 4801              	.LASF146:
 4802 05a7 79426C6F 		.ascii	"yBlocksize\000"
 4802      636B7369 
 4802      7A6500
 4803              	.LASF19:
 4804 05b2 666C6F61 		.ascii	"float\000"
 4804      7400
 4805              	.LASF134:
 4806 05b8 746F7461 		.ascii	"totalMilliseconds\000"
 4806      6C4D696C 
 4806      6C697365 
 4806      636F6E64 
 4806      7300
 4807              	.LASF63:
 4808 05ca 556E6B6E 		.ascii	"Unknown\000"
 4808      6F776E00 
 4809              	.LASF85:
 4810 05d2 47657449 		.ascii	"GetInstructionAtIndex\000"
 4810      6E737472 
 4810      75637469 
 4810      6F6E4174 
 4810      496E6465 
 4811              	.LASF139:
 4812 05e8 6B656570 		.ascii	"keepLedOn\000"
 4812      4C65644F 
 4812      6E00
 4813              	.LASF109:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 105


 4814 05f2 74735F75 		.ascii	"ts_update\000"
 4814      70646174 
 4814      6500
 4815              	.LASF95:
 4816 05fc 75547572 		.ascii	"uTurnStartedFlag\000"
 4816      6E537461 
 4816      72746564 
 4816      466C6167 
 4816      00
 4817              	.LASF13:
 4818 060d 696E7433 		.ascii	"int32_t\000"
 4818      325F7400 
 4819              	.LASF1:
 4820 0615 756E7369 		.ascii	"unsigned char\000"
 4820      676E6564 
 4820      20636861 
 4820      7200
 4821              	.LASF15:
 4822 0623 75696E74 		.ascii	"uint16\000"
 4822      313600
 4823              	.LASF42:
 4824 062a 496E7374 		.ascii	"InstructionDirection\000"
 4824      72756374 
 4824      696F6E44 
 4824      69726563 
 4824      74696F6E 
 4825              	.LASF34:
 4826 063f 67325F78 		.ascii	"g2_xpos\000"
 4826      706F7300 
 4827              	.LASF2:
 4828 0647 73686F72 		.ascii	"short int\000"
 4828      7420696E 
 4828      7400
 4829              	.LASF130:
 4830 0651 70726576 		.ascii	"previousOrientation\000"
 4830      696F7573 
 4830      4F726965 
 4830      6E746174 
 4830      696F6E00 
 4831              	.LASF150:
 4832 0665 69676E6F 		.ascii	"ignoreSensor\000"
 4832      72655365 
 4832      6E736F72 
 4832      00
 4833              	.LASF97:
 4834 0672 6C656674 		.ascii	"leftStatusFlag\000"
 4834      53746174 
 4834      7573466C 
 4834      616700
 4835              	.LASF81:
 4836 0681 63757272 		.ascii	"currentInstructionDirection\000"
 4836      656E7449 
 4836      6E737472 
 4836      75637469 
 4836      6F6E4469 
 4837              	.LASF24:
 4838 069d 726F626F 		.ascii	"robot_ypos\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 106


 4838      745F7970 
 4838      6F7300
 4839              	.LASF60:
 4840 06a8 41646A75 		.ascii	"AdjustToTheLeft\000"
 4840      7374546F 
 4840      5468654C 
 4840      65667400 
 4841              	.LASF43:
 4842 06b8 476F466F 		.ascii	"GoForward\000"
 4842      72776172 
 4842      6400
 4843              	.LASF40:
 4844 06c2 52696768 		.ascii	"Right\000"
 4844      7400
 4845              	.LASF151:
 4846 06c8 6C617374 		.ascii	"lastDirectionAfter180\000"
 4846      44697265 
 4846      6374696F 
 4846      6E416674 
 4846      65723138 
 4847              	.LASF132:
 4848 06de 6E756D53 		.ascii	"numSteps\000"
 4848      74657073 
 4848      00
 4849              	.LASF76:
 4850 06e7 5370696E 		.ascii	"SpinCourseCorrection\000"
 4850      436F7572 
 4850      7365436F 
 4850      72726563 
 4850      74696F6E 
 4851              	.LASF115:
 4852 06fc 666C6167 		.ascii	"flag_ts_display\000"
 4852      5F74735F 
 4852      64697370 
 4852      6C617900 
 4853              	.LASF74:
 4854 070c 6E657744 		.ascii	"newDistance\000"
 4854      69737461 
 4854      6E636500 
 4855              	.LASF9:
 4856 0718 6C6F6E67 		.ascii	"long double\000"
 4856      20646F75 
 4856      626C6500 
 4857              	.LASF11:
 4858 0724 63686172 		.ascii	"char\000"
 4858      00
 4859              	.LASF27:
 4860 0729 67305F79 		.ascii	"g0_ypos\000"
 4860      706F7300 
 4861              	.LASF67:
 4862 0731 5370696E 		.ascii	"Spin180\000"
 4862      31383000 
 4863              	.LASF8:
 4864 0739 756E7369 		.ascii	"unsigned int\000"
 4864      676E6564 
 4864      20696E74 
 4864      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 107


 4865              	.LASF21:
 4866 0746 72737369 		.ascii	"rssi\000"
 4866      00
 4867              	.LASF22:
 4868 074b 696E6465 		.ascii	"index\000"
 4868      7800
 4869              	.LASF71:
 4870 0751 53365F44 		.ascii	"S6_DETECTED\000"
 4870      45544543 
 4870      54454400 
 4871              	.LASF126:
 4872 075d 666F6F64 		.ascii	"food_list\000"
 4872      5F6C6973 
 4872      7400
 4873              	.LASF38:
 4874 0767 446F776E 		.ascii	"Down\000"
 4874      00
 4875              	.LASF136:
 4876 076c 62756666 		.ascii	"buffer\000"
 4876      657200
 4877              	.LASF113:
 4878 0773 666C6167 		.ascii	"flag_ts_update\000"
 4878      5F74735F 
 4878      75706461 
 4878      746500
 4879              	.LASF121:
 4880 0782 64697370 		.ascii	"displaystring\000"
 4880      6C617973 
 4880      7472696E 
 4880      6700
 4881              	.LASF23:
 4882 0790 726F626F 		.ascii	"robot_xpos\000"
 4882      745F7870 
 4882      6F7300
 4883              	.LASF129:
 4884 079b 63757272 		.ascii	"currentRobotOrientation\000"
 4884      656E7452 
 4884      6F626F74 
 4884      4F726965 
 4884      6E746174 
 4885              	.LASF127:
 4886 07b3 63757272 		.ascii	"currentDirection\000"
 4886      656E7444 
 4886      69726563 
 4886      74696F6E 
 4886      00
 4887              	.LASF79:
 4888 07c4 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4888      6F76656D 
 4888      656E7441 
 4888      63636F72 
 4888      64696E67 
 4889              	.LASF93:
 4890 07e6 7475726E 		.ascii	"turnFinishedFlag\000"
 4890      46696E69 
 4890      73686564 
 4890      466C6167 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 108


 4890      00
 4891              	.LASF133:
 4892 07f7 696E7374 		.ascii	"instructionList\000"
 4892      72756374 
 4892      696F6E4C 
 4892      69737400 
 4893              	.LASF45:
 4894 0807 77616974 		.ascii	"waitForRightTurn\000"
 4894      466F7252 
 4894      69676874 
 4894      5475726E 
 4894      00
 4895              	.LASF142:
 4896 0818 6A756E63 		.ascii	"junctionConfiguration\000"
 4896      74696F6E 
 4896      436F6E66 
 4896      69677572 
 4896      6174696F 
 4897              	.LASF131:
 4898 082e 63757272 		.ascii	"currentInstruction\000"
 4898      656E7449 
 4898      6E737472 
 4898      75637469 
 4898      6F6E00
 4899              	.LASF102:
 4900 0841 746F7461 		.ascii	"totalLineCount\000"
 4900      6C4C696E 
 4900      65436F75 
 4900      6E7400
 4901              	.LASF87:
 4902 0850 636F756E 		.ascii	"count1\000"
 4902      743100
 4903              	.LASF72:
 4904 0857 54494D45 		.ascii	"TIMER_FINISH\000"
 4904      525F4649 
 4904      4E495348 
 4904      00
 4905              	.LASF83:
 4906 0864 52657365 		.ascii	"ResetSensorFlags\000"
 4906      7453656E 
 4906      736F7246 
 4906      6C616773 
 4906      00
 4907              	.LASF18:
 4908 0875 696E7431 		.ascii	"int16\000"
 4908      3600
 4909              	.LASF156:
 4910 087b 71756164 		.ascii	"quadCountToRPM\000"
 4910      436F756E 
 4910      74546F52 
 4910      504D00
 4911              	.LASF52:
 4912 088a 69676E6F 		.ascii	"ignoreL\000"
 4912      72654C00 
 4913              	.LASF59:
 4914 0892 5475726E 		.ascii	"TurnLeft\000"
 4914      4C656674 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc8Eox7h.s 			page 109


 4914      00
 4915              	.LASF53:
 4916 089b 69676E6F 		.ascii	"ignoreR\000"
 4916      72655200 
 4917              	.LASF92:
 4918 08a3 7475726E 		.ascii	"turnStartedFlag\000"
 4918      53746172 
 4918      74656446 
 4918      6C616700 
 4919              	.LASF28:
 4920 08b3 67305F73 		.ascii	"g0_speed\000"
 4920      70656564 
 4920      00
 4921              	.LASF25:
 4922 08bc 726F626F 		.ascii	"robot_orientation\000"
 4922      745F6F72 
 4922      69656E74 
 4922      6174696F 
 4922      6E00
 4923              	.LASF149:
 4924 08ce 73746F70 		.ascii	"stoppedAfterTurn\000"
 4924      70656441 
 4924      66746572 
 4924      5475726E 
 4924      00
 4925              	.LASF141:
 4926 08df 666F7277 		.ascii	"forwardBuffer\000"
 4926      61726442 
 4926      75666665 
 4926      7200
 4927              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
