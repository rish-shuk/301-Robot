ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,16,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              	turnStartedFlag:
 173 0034 00       		.space	1
 174              	turnFinishedFlag:
 175 0035 00       		.space	1
 176              	forwardUntilTargetStartedFlag:
 177 0036 00       		.space	1
 178              	uTurnStartedFlag:
 179 0037 00       		.space	1
 180              	uTurnFinishedFlag:
 181 0038 00       		.space	1
 182              	leftStatusFlag:
 183 0039 00       		.space	1
 184              	rightStatusFlag:
 185 003a 00       		.space	1
 186              	spinCourseCorrectionStarted:
 187 003b 00       		.space	1
 188              	currentIgnoreL:
 189 003c 00       		.space	1
 190              	currentIgnoreR:
 191 003d 00       		.space	1
 192              		.global	junctionConfiguration
 193 003e 0000     		.align	2
 194              		.type	junctionConfiguration, %object
 195              		.size	junctionConfiguration, 4
 196              	junctionConfiguration:
 197 0040 00000000 		.space	4
 198              		.global	blockSizeTotal
 199              		.align	2
 200              		.type	blockSizeTotal, %object
 201              		.size	blockSizeTotal, 4
 202              	blockSizeTotal:
 203 0044 00000000 		.space	4
 204              		.global	__aeabi_i2d
 205              		.global	__aeabi_dmul
 206              		.global	__aeabi_ddiv
 207              		.global	__aeabi_d2f
 208              		.global	__aeabi_fadd
 209              		.section	.text.speedTimer,"ax",%progbits
 210              		.align	2
 211              		.global	speedTimer
 212              		.thumb
 213              		.thumb_func
 214              		.type	speedTimer, %function
 215              	speedTimer:
 216              	.LFB64:
 217              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 5


   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** 
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 6


  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 0;
  65:main.c        **** 
  66:main.c        **** uint8 junctionConfiguration[4] = {0};
  67:main.c        **** 
  68:main.c        **** float blockSizeTotal = 0;
  69:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  70:main.c        **** 
  71:main.c        **** CY_ISR (speedTimer) {
 218              		.loc 1 71 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 90B5     		push	{r4, r7, lr}
 223              		.cfi_def_cfa_offset 12
 224              		.cfi_offset 4, -12
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 24
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  72:main.c        ****     timerInt = 1;
 231              		.loc 1 72 0
 232 0006 344B     		ldr	r3, .L4+16
 233 0008 0122     		movs	r2, #1
 234 000a 1A60     		str	r2, [r3]
  73:main.c        ****     //quadDec_M1 used for turning macros
  74:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 235              		.loc 1 74 0
 236 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 237 0010 0346     		mov	r3, r0
 238 0012 1A46     		mov	r2, r3
 239 0014 314B     		ldr	r3, .L4+20
 240 0016 1A60     		str	r2, [r3]
  75:main.c        ****     
  76:main.c        ****     if ((currentDirection == Forward || 
 241              		.loc 1 76 0
 242 0018 314B     		ldr	r3, .L4+24
 243 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 001c 002B     		cmp	r3, #0
 245 001e 13D0     		beq	.L2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 246              		.loc 1 77 0 discriminator 1
 247 0020 2F4B     		ldr	r3, .L4+24
 248 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 249              		.loc 1 76 0 discriminator 1
 250 0024 082B     		cmp	r3, #8
 251 0026 0FD0     		beq	.L2
  78:main.c        ****         currentDirection == waitForTurn || 
 252              		.loc 1 78 0
 253 0028 2D4B     		ldr	r3, .L4+24
 254 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 255              		.loc 1 77 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 7


 256 002c 072B     		cmp	r3, #7
 257 002e 0BD0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 258              		.loc 1 79 0
 259 0030 2B4B     		ldr	r3, .L4+24
 260 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:main.c        ****         currentDirection == waitForTurn || 
 261              		.loc 1 78 0
 262 0034 032B     		cmp	r3, #3
 263 0036 07D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 264              		.loc 1 80 0
 265 0038 294B     		ldr	r3, .L4+24
 266 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 267              		.loc 1 79 0
 268 003c 042B     		cmp	r3, #4
 269 003e 03D0     		beq	.L2
  81:main.c        ****         currentDirection == Backward) &&
 270              		.loc 1 81 0
 271 0040 274B     		ldr	r3, .L4+24
 272 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 273              		.loc 1 80 0
 274 0044 092B     		cmp	r3, #9
 275 0046 34D1     		bne	.L3
 276              	.L2:
  82:main.c        ****         quadDec2Count != 0) {
 277              		.loc 1 82 0
 278 0048 244B     		ldr	r3, .L4+20
 279 004a 1B68     		ldr	r3, [r3]
  81:main.c        ****         currentDirection == Backward) &&
 280              		.loc 1 81 0
 281 004c 002B     		cmp	r3, #0
 282 004e 30D0     		beq	.L3
 283              	.LBB2:
  83:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  84:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 284              		.loc 1 84 0
 285 0050 224B     		ldr	r3, .L4+20
 286 0052 1B68     		ldr	r3, [r3]
 287 0054 002B     		cmp	r3, #0
 288 0056 B8BF     		it	lt
 289 0058 5B42     		rsblt	r3, r3, #0
 290 005a 1846     		mov	r0, r3
 291 005c FFF7FEFF 		bl	__aeabi_i2d
 292 0060 19A3     		adr	r3, .L4
 293 0062 D3E90023 		ldrd	r2, [r3]
 294 0066 FFF7FEFF 		bl	__aeabi_dmul
 295 006a 0346     		mov	r3, r0
 296 006c 0C46     		mov	r4, r1
 297 006e 1846     		mov	r0, r3
 298 0070 2146     		mov	r1, r4
 299 0072 17A3     		adr	r3, .L4+8
 300 0074 D3E90023 		ldrd	r2, [r3]
 301 0078 FFF7FEFF 		bl	__aeabi_dmul
 302 007c 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 8


 303 007e 0C46     		mov	r4, r1
 304 0080 1846     		mov	r0, r3
 305 0082 2146     		mov	r1, r4
 306 0084 4FF00002 		mov	r2, #0
 307 0088 164B     		ldr	r3, .L4+28
 308 008a FFF7FEFF 		bl	__aeabi_ddiv
 309 008e 0346     		mov	r3, r0
 310 0090 0C46     		mov	r4, r1
 311 0092 1846     		mov	r0, r3
 312 0094 2146     		mov	r1, r4
 313 0096 FFF7FEFF 		bl	__aeabi_d2f
 314 009a 0346     		mov	r3, r0
 315 009c 7B60     		str	r3, [r7, #4]	@ float
  85:main.c        ****         
  86:main.c        ****         totalDistance = totalDistance + newDistance;
 316              		.loc 1 86 0
 317 009e 124B     		ldr	r3, .L4+32
 318 00a0 1B68     		ldr	r3, [r3]	@ float
 319 00a2 7968     		ldr	r1, [r7, #4]	@ float
 320 00a4 1846     		mov	r0, r3
 321 00a6 FFF7FEFF 		bl	__aeabi_fadd
 322 00aa 0346     		mov	r3, r0
 323 00ac 1A46     		mov	r2, r3
 324 00ae 0E4B     		ldr	r3, .L4+32
 325 00b0 1A60     		str	r2, [r3]	@ float
 326              	.L3:
 327              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     
  89:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 328              		.loc 1 89 0
 329 00b2 0020     		movs	r0, #0
 330 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  90:main.c        ****     QuadDec_M2_Start(); // restart counter
 331              		.loc 1 90 0
 332 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        ****     
  92:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 333              		.loc 1 92 0
 334 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  93:main.c        **** }
 335              		.loc 1 93 0
 336 00c0 00BF     		nop
 337 00c2 0C37     		adds	r7, r7, #12
 338              		.cfi_def_cfa_offset 12
 339 00c4 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 00c6 90BD     		pop	{r4, r7, pc}
 343              	.L5:
 344              		.align	3
 345              	.L4:
 346 00c8 182D4454 		.word	1413754136
 347 00cc FB210940 		.word	1074340347
 348 00d0 00000000 		.word	0
 349 00d4 00205040 		.word	1078992896
 350 00d8 00000000 		.word	timerInt
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 9


 351 00dc 00000000 		.word	quadDec2Count
 352 00e0 00000000 		.word	currentDirection
 353 00e4 00806C40 		.word	1080852480
 354 00e8 00000000 		.word	totalDistance
 355              		.cfi_endproc
 356              	.LFE64:
 357              		.size	speedTimer, .-speedTimer
 358              		.section	.text.S3_DETECTED,"ax",%progbits
 359              		.align	2
 360              		.global	S3_DETECTED
 361              		.thumb
 362              		.thumb_func
 363              		.type	S3_DETECTED, %function
 364              	S3_DETECTED:
 365              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 366              		.loc 1 95 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 376              		.loc 1 97 0
 377 0004 034B     		ldr	r3, .L7
 378 0006 0122     		movs	r2, #1
 379 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 380              		.loc 1 99 0
 381 000a 00BF     		nop
 382 000c BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 000e 80BC     		pop	{r7}
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0010 7047     		bx	lr
 389              	.L8:
 390 0012 00BF     		.align	2
 391              	.L7:
 392 0014 00000000 		.word	s3
 393              		.cfi_endproc
 394              	.LFE65:
 395              		.size	S3_DETECTED, .-S3_DETECTED
 396              		.section	.text.S4_DETECTED,"ax",%progbits
 397              		.align	2
 398              		.global	S4_DETECTED
 399              		.thumb
 400              		.thumb_func
 401              		.type	S4_DETECTED, %function
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 10


 402              	S4_DETECTED:
 403              	.LFB66:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 404              		.loc 1 101 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 80B4     		push	{r7}
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 414              		.loc 1 103 0
 415 0004 034B     		ldr	r3, .L10
 416 0006 0122     		movs	r2, #1
 417 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 418              		.loc 1 105 0
 419 000a 00BF     		nop
 420 000c BD46     		mov	sp, r7
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 000e 80BC     		pop	{r7}
 424              		.cfi_restore 7
 425              		.cfi_def_cfa_offset 0
 426 0010 7047     		bx	lr
 427              	.L11:
 428 0012 00BF     		.align	2
 429              	.L10:
 430 0014 00000000 		.word	s4
 431              		.cfi_endproc
 432              	.LFE66:
 433              		.size	S4_DETECTED, .-S4_DETECTED
 434              		.section	.text.S5_DETECTED,"ax",%progbits
 435              		.align	2
 436              		.global	S5_DETECTED
 437              		.thumb
 438              		.thumb_func
 439              		.type	S5_DETECTED, %function
 440              	S5_DETECTED:
 441              	.LFB67:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 442              		.loc 1 107 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447 0000 80B4     		push	{r7}
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 11


 451              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 452              		.loc 1 109 0
 453 0004 034B     		ldr	r3, .L13
 454 0006 0122     		movs	r2, #1
 455 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 456              		.loc 1 111 0
 457 000a 00BF     		nop
 458 000c BD46     		mov	sp, r7
 459              		.cfi_def_cfa_register 13
 460              		@ sp needed
 461 000e 80BC     		pop	{r7}
 462              		.cfi_restore 7
 463              		.cfi_def_cfa_offset 0
 464 0010 7047     		bx	lr
 465              	.L14:
 466 0012 00BF     		.align	2
 467              	.L13:
 468 0014 00000000 		.word	s5
 469              		.cfi_endproc
 470              	.LFE67:
 471              		.size	S5_DETECTED, .-S5_DETECTED
 472              		.section	.text.S6_DETECTED,"ax",%progbits
 473              		.align	2
 474              		.global	S6_DETECTED
 475              		.thumb
 476              		.thumb_func
 477              		.type	S6_DETECTED, %function
 478              	S6_DETECTED:
 479              	.LFB68:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 480              		.loc 1 113 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485 0000 80B4     		push	{r7}
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 7, -4
 488 0002 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 490              		.loc 1 115 0
 491 0004 034B     		ldr	r3, .L16
 492 0006 0122     		movs	r2, #1
 493 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
 494              		.loc 1 117 0
 495 000a 00BF     		nop
 496 000c BD46     		mov	sp, r7
 497              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 12


 498              		@ sp needed
 499 000e 80BC     		pop	{r7}
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 0010 7047     		bx	lr
 503              	.L17:
 504 0012 00BF     		.align	2
 505              	.L16:
 506 0014 00000000 		.word	s6
 507              		.cfi_endproc
 508              	.LFE68:
 509              		.size	S6_DETECTED, .-S6_DETECTED
 510              		.section	.text.TIMER_FINISH,"ax",%progbits
 511              		.align	2
 512              		.global	TIMER_FINISH
 513              		.thumb
 514              		.thumb_func
 515              		.type	TIMER_FINISH, %function
 516              	TIMER_FINISH:
 517              	.LFB69:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 518              		.loc 1 119 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 120:main.c        ****     if (currentDirection == Stop) {
 528              		.loc 1 120 0
 529 0004 0A4B     		ldr	r3, .L21
 530 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 531 0008 052B     		cmp	r3, #5
 532 000a 05D1     		bne	.L19
 121:main.c        ****         stopBuffer = stopBuffer + 1;
 533              		.loc 1 121 0
 534 000c 094B     		ldr	r3, .L21+4
 535 000e 1B68     		ldr	r3, [r3]
 536 0010 0133     		adds	r3, r3, #1
 537 0012 084A     		ldr	r2, .L21+4
 538 0014 1360     		str	r3, [r2]
 539 0016 02E0     		b	.L20
 540              	.L19:
 122:main.c        ****     } else {
 123:main.c        ****         stopBuffer = 0;
 541              		.loc 1 123 0
 542 0018 064B     		ldr	r3, .L21+4
 543 001a 0022     		movs	r2, #0
 544 001c 1A60     		str	r2, [r3]
 545              	.L20:
 124:main.c        ****     }
 125:main.c        ****     SetRobotMovement(); 
 546              		.loc 1 125 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 13


 547 001e FFF7FEFF 		bl	SetRobotMovement
 126:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 548              		.loc 1 126 0
 549 0022 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     Timer_LED_ReadStatusRegister();
 550              		.loc 1 127 0
 551 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 128:main.c        **** }
 552              		.loc 1 128 0
 553 002a 00BF     		nop
 554 002c 80BD     		pop	{r7, pc}
 555              	.L22:
 556 002e 00BF     		.align	2
 557              	.L21:
 558 0030 00000000 		.word	currentDirection
 559 0034 00000000 		.word	stopBuffer
 560              		.cfi_endproc
 561              	.LFE69:
 562              		.size	TIMER_FINISH, .-TIMER_FINISH
 563              		.section	.text.main,"ax",%progbits
 564              		.align	2
 565              		.global	main
 566              		.thumb
 567              		.thumb_func
 568              		.type	main, %function
 569              	main:
 570              	.LFB70:
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** int main() {
 571              		.loc 1 131 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 16
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 90B5     		push	{r4, r7, lr}
 576              		.cfi_def_cfa_offset 12
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 85B0     		sub	sp, sp, #20
 581              		.cfi_def_cfa_offset 32
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 584              		.loc 1 133 0
 585              		.syntax unified
 586              	@ 133 "main.c" 1
 587 0006 62B6     		CPSIE   i
 588              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 589              		.loc 1 134 0
 590              		.thumb
 591              		.syntax unified
 592 0008 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 593              		.loc 1 135 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 14


 594 000c FFF7FEFF 		bl	init
 136:main.c        ****     
 137:main.c        ****     instructionList = findPath(map, food_list, 0);
 595              		.loc 1 137 0
 596 0010 0022     		movs	r2, #0
 597 0012 2F49     		ldr	r1, .L27
 598 0014 2F48     		ldr	r0, .L27+4
 599 0016 FFF7FEFF 		bl	findPath
 600 001a 0246     		mov	r2, r0
 601 001c 2E4B     		ldr	r3, .L27+8
 602 001e 1A60     		str	r2, [r3]
 138:main.c        ****     numSteps = instructionsListLength();
 603              		.loc 1 138 0
 604 0020 FFF7FEFF 		bl	instructionsListLength
 605 0024 0346     		mov	r3, r0
 606 0026 1A46     		mov	r2, r3
 607 0028 2C4B     		ldr	r3, .L27+12
 608 002a 1A60     		str	r2, [r3]
 139:main.c        **** 
 140:main.c        ****     
 141:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 609              		.loc 1 141 0
 610 002c 2B4B     		ldr	r3, .L27+12
 611 002e 1968     		ldr	r1, [r3]
 612 0030 294B     		ldr	r3, .L27+8
 613 0032 1A68     		ldr	r2, [r3]
 614 0034 2A4C     		ldr	r4, .L27+16
 615 0036 3B46     		mov	r3, r7
 616 0038 1846     		mov	r0, r3
 617 003a FFF7FEFF 		bl	GetInstructionAtIndex
 618 003e 3B46     		mov	r3, r7
 619 0040 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 620 0042 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 142:main.c        ****     
 143:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 621              		.loc 1 143 0
 622 0046 244B     		ldr	r3, .L27+8
 623 0048 1A68     		ldr	r2, [r3]
 624 004a 264B     		ldr	r3, .L27+20
 625 004c 1B68     		ldr	r3, [r3]
 626 004e 1B01     		lsls	r3, r3, #4
 627 0050 1344     		add	r3, r3, r2
 628 0052 5B68     		ldr	r3, [r3, #4]
 629 0054 DAB2     		uxtb	r2, r3
 630 0056 244B     		ldr	r3, .L27+24
 631 0058 1A70     		strb	r2, [r3]
 144:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 632              		.loc 1 144 0
 633 005a 1F4B     		ldr	r3, .L27+8
 634 005c 1A68     		ldr	r2, [r3]
 635 005e 214B     		ldr	r3, .L27+20
 636 0060 1B68     		ldr	r3, [r3]
 637 0062 1B01     		lsls	r3, r3, #4
 638 0064 1344     		add	r3, r3, r2
 639 0066 9B68     		ldr	r3, [r3, #8]
 640 0068 DAB2     		uxtb	r2, r3
 641 006a 204B     		ldr	r3, .L27+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 15


 642 006c 1A70     		strb	r2, [r3]
 145:main.c        ****     
 146:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 643              		.loc 1 146 0
 644 006e 2048     		ldr	r0, .L27+32
 645 0070 FFF7FEFF 		bl	isr_speed_StartEx
 147:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 646              		.loc 1 147 0
 647 0074 1F48     		ldr	r0, .L27+36
 648 0076 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 148:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 649              		.loc 1 148 0
 650 007a 1F48     		ldr	r0, .L27+40
 651 007c FFF7FEFF 		bl	S3_detected_StartEx
 149:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 652              		.loc 1 149 0
 653 0080 1E48     		ldr	r0, .L27+44
 654 0082 FFF7FEFF 		bl	S4_detected_StartEx
 150:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 655              		.loc 1 150 0
 656 0086 1E48     		ldr	r0, .L27+48
 657 0088 FFF7FEFF 		bl	S5_detected_StartEx
 151:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 658              		.loc 1 151 0
 659 008c 1D48     		ldr	r0, .L27+52
 660 008e FFF7FEFF 		bl	S6_detected_StartEx
 152:main.c        ****     Timer_LED_Start();
 661              		.loc 1 152 0
 662 0092 FFF7FEFF 		bl	Timer_LED_Start
 153:main.c        **** 
 154:main.c        ****     
 155:main.c        **** // ------USB SETUP ----------------    
 156:main.c        **** #ifdef USE_USB    
 157:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 663              		.loc 1 157 0
 664 0096 0121     		movs	r1, #1
 665 0098 0020     		movs	r0, #0
 666 009a FFF7FEFF 		bl	USBUART_Start
 158:main.c        **** #endif        
 159:main.c        ****     RF_BT_SELECT_Write(0);
 667              		.loc 1 159 0
 668 009e 0020     		movs	r0, #0
 669 00a0 FFF7FEFF 		bl	RF_BT_SELECT_Write
 670              	.L26:
 160:main.c        ****     
 161:main.c        ****     //usbPutString("Initialised UART");
 162:main.c        ****     for(;;)
 163:main.c        ****     {
 164:main.c        ****         if(timerInt == 1) {
 671              		.loc 1 164 0
 672 00a4 184B     		ldr	r3, .L27+56
 673 00a6 1B68     		ldr	r3, [r3]
 674 00a8 012B     		cmp	r3, #1
 675 00aa 08D1     		bne	.L24
 165:main.c        ****             timerInt = 0;
 676              		.loc 1 165 0
 677 00ac 164B     		ldr	r3, .L27+56
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 16


 678 00ae 0022     		movs	r2, #0
 679 00b0 1A60     		str	r2, [r3]
 166:main.c        ****             // calculate RPM of M2
 167:main.c        ****             quadCountToRPM(quadDec2Count);
 680              		.loc 1 167 0
 681 00b2 164B     		ldr	r3, .L27+60
 682 00b4 1B68     		ldr	r3, [r3]
 683 00b6 9BB2     		uxth	r3, r3
 684 00b8 1846     		mov	r0, r3
 685 00ba FFF7FEFF 		bl	quadCountToRPM
 686              	.L24:
 168:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 169:main.c        ****             //usbPutString(buffer);
 170:main.c        ****             //usbPutString(" ");
 171:main.c        ****         }
 172:main.c        ****         //handle_usb();
 173:main.c        ****         if (flag_KB_string == 1)
 687              		.loc 1 173 0
 688 00be 144B     		ldr	r3, .L27+64
 689 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 690 00c2 012B     		cmp	r3, #1
 691 00c4 EED1     		bne	.L26
 174:main.c        ****         {
 175:main.c        ****             //usbPutString("Total Distance: ");
 176:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 177:main.c        ****             //usbPutString(buffer);
 178:main.c        ****             flag_KB_string = 0;
 692              		.loc 1 178 0
 693 00c6 124B     		ldr	r3, .L27+64
 694 00c8 0022     		movs	r2, #0
 695 00ca 1A70     		strb	r2, [r3]
 179:main.c        ****         }           
 180:main.c        ****     }
 696              		.loc 1 180 0
 697 00cc EAE7     		b	.L26
 698              	.L28:
 699 00ce 00BF     		.align	2
 700              	.L27:
 701 00d0 00000000 		.word	food_list
 702 00d4 00000000 		.word	map
 703 00d8 00000000 		.word	instructionList
 704 00dc 00000000 		.word	numSteps
 705 00e0 00000000 		.word	currentInstruction
 706 00e4 14000000 		.word	instructionIndex
 707 00e8 3C000000 		.word	currentIgnoreL
 708 00ec 3D000000 		.word	currentIgnoreR
 709 00f0 00000000 		.word	speedTimer
 710 00f4 00000000 		.word	TIMER_FINISH
 711 00f8 00000000 		.word	S3_DETECTED
 712 00fc 00000000 		.word	S4_DETECTED
 713 0100 00000000 		.word	S5_DETECTED
 714 0104 00000000 		.word	S6_DETECTED
 715 0108 00000000 		.word	timerInt
 716 010c 00000000 		.word	quadDec2Count
 717 0110 00000000 		.word	flag_KB_string
 718              		.cfi_endproc
 719              	.LFE70:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 17


 720              		.size	main, .-main
 721              		.global	__aeabi_fmul
 722              		.global	__aeabi_f2iz
 723              		.section	.text.quadCountToRPM,"ax",%progbits
 724              		.align	2
 725              		.global	quadCountToRPM
 726              		.thumb
 727              		.thumb_func
 728              		.type	quadCountToRPM, %function
 729              	quadCountToRPM:
 730              	.LFB71:
 181:main.c        ****     return 0;
 182:main.c        **** }
 183:main.c        **** 
 184:main.c        **** // Calculations
 185:main.c        **** //* ========================================
 186:main.c        **** int16 quadCountToRPM(uint16 count) {
 731              		.loc 1 186 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 16
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 90B5     		push	{r4, r7, lr}
 736              		.cfi_def_cfa_offset 12
 737              		.cfi_offset 4, -12
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 85B0     		sub	sp, sp, #20
 741              		.cfi_def_cfa_offset 32
 742 0004 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 744 0006 0346     		mov	r3, r0
 745 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 187:main.c        ****     float cps = count/57.00;
 746              		.loc 1 187 0
 747 000a FB88     		ldrh	r3, [r7, #6]
 748 000c 1846     		mov	r0, r3
 749 000e FFF7FEFF 		bl	__aeabi_i2d
 750 0012 4FF00002 		mov	r2, #0
 751 0016 0D4B     		ldr	r3, .L31
 752 0018 FFF7FEFF 		bl	__aeabi_ddiv
 753 001c 0346     		mov	r3, r0
 754 001e 0C46     		mov	r4, r1
 755 0020 1846     		mov	r0, r3
 756 0022 2146     		mov	r1, r4
 757 0024 FFF7FEFF 		bl	__aeabi_d2f
 758 0028 0346     		mov	r3, r0
 759 002a FB60     		str	r3, [r7, #12]	@ float
 188:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 760              		.loc 1 188 0
 761 002c 0849     		ldr	r1, .L31+4
 762 002e F868     		ldr	r0, [r7, #12]	@ float
 763 0030 FFF7FEFF 		bl	__aeabi_fmul
 764 0034 0346     		mov	r3, r0
 765 0036 1846     		mov	r0, r3
 766 0038 FFF7FEFF 		bl	__aeabi_f2iz
 767 003c 0346     		mov	r3, r0
 768 003e 7B81     		strh	r3, [r7, #10]	@ movhi
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 18


 189:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 190:main.c        ****     return rpm;
 769              		.loc 1 190 0
 770 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 191:main.c        ****     //usbPutString(buffer);
 192:main.c        ****     //usbPutString("rpm ");
 193:main.c        **** }
 771              		.loc 1 193 0
 772 0044 1846     		mov	r0, r3
 773 0046 1437     		adds	r7, r7, #20
 774              		.cfi_def_cfa_offset 12
 775 0048 BD46     		mov	sp, r7
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 004a 90BD     		pop	{r4, r7, pc}
 779              	.L32:
 780              		.align	2
 781              	.L31:
 782 004c 00804C40 		.word	1078755328
 783 0050 00007041 		.word	1097859072
 784              		.cfi_endproc
 785              	.LFE71:
 786              		.size	quadCountToRPM, .-quadCountToRPM
 787              		.section	.text.ResetSensorFlags,"ax",%progbits
 788              		.align	2
 789              		.global	ResetSensorFlags
 790              		.thumb
 791              		.thumb_func
 792              		.type	ResetSensorFlags, %function
 793              	ResetSensorFlags:
 794              	.LFB72:
 194:main.c        **** 
 195:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 196:main.c        **** void ResetSensorFlags() {
 795              		.loc 1 196 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 80B4     		push	{r7}
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 197:main.c        ****     s3 = 0;
 805              		.loc 1 197 0
 806 0004 074B     		ldr	r3, .L34
 807 0006 0022     		movs	r2, #0
 808 0008 1A70     		strb	r2, [r3]
 198:main.c        ****     s4 = 0;
 809              		.loc 1 198 0
 810 000a 074B     		ldr	r3, .L34+4
 811 000c 0022     		movs	r2, #0
 812 000e 1A70     		strb	r2, [r3]
 199:main.c        ****     s5 = 0;
 813              		.loc 1 199 0
 814 0010 064B     		ldr	r3, .L34+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 19


 815 0012 0022     		movs	r2, #0
 816 0014 1A70     		strb	r2, [r3]
 200:main.c        ****     s6 = 0;
 817              		.loc 1 200 0
 818 0016 064B     		ldr	r3, .L34+12
 819 0018 0022     		movs	r2, #0
 820 001a 1A70     		strb	r2, [r3]
 201:main.c        **** }
 821              		.loc 1 201 0
 822 001c 00BF     		nop
 823 001e BD46     		mov	sp, r7
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0020 80BC     		pop	{r7}
 827              		.cfi_restore 7
 828              		.cfi_def_cfa_offset 0
 829 0022 7047     		bx	lr
 830              	.L35:
 831              		.align	2
 832              	.L34:
 833 0024 00000000 		.word	s3
 834 0028 00000000 		.word	s4
 835 002c 00000000 		.word	s5
 836 0030 00000000 		.word	s6
 837              		.cfi_endproc
 838              	.LFE72:
 839              		.size	ResetSensorFlags, .-ResetSensorFlags
 840              		.global	xBlocksize
 841              		.data
 842 0045 000000   		.align	2
 843              		.type	xBlocksize, %object
 844              		.size	xBlocksize, 4
 845              	xBlocksize:
 846 0048 0000F442 		.word	1123287040
 847              		.global	yBlocksize
 848              		.align	2
 849              		.type	yBlocksize, %object
 850              		.size	yBlocksize, 4
 851              	yBlocksize:
 852 004c 0000A042 		.word	1117782016
 853              		.global	currentRow
 854              		.type	currentRow, %object
 855              		.size	currentRow, 1
 856              	currentRow:
 857 0050 01       		.byte	1
 858              		.global	currentCol
 859              		.type	currentCol, %object
 860              		.size	currentCol, 1
 861              	currentCol:
 862 0051 01       		.byte	1
 863              		.global	stoppedAfterTurn
 864              		.bss
 865              		.type	stoppedAfterTurn, %object
 866              		.size	stoppedAfterTurn, 1
 867              	stoppedAfterTurn:
 868 0048 00       		.space	1
 869              		.global	ignoreSensor
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 20


 870              		.type	ignoreSensor, %object
 871              		.size	ignoreSensor, 1
 872              	ignoreSensor:
 873 0049 00       		.space	1
 874              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 875              		.align	2
 876              		.global	ForwardCourseCorrection
 877              		.thumb
 878              		.thumb_func
 879              		.type	ForwardCourseCorrection, %function
 880              	ForwardCourseCorrection:
 881              	.LFB73:
 202:main.c        **** 
 203:main.c        **** float xBlocksize = 122; // 122 mm
 204:main.c        **** float yBlocksize = 80; // 80 mm
 205:main.c        **** uint8 currentRow = 1;
 206:main.c        **** uint8 currentCol = 1;
 207:main.c        **** 
 208:main.c        **** uint8 stoppedAfterTurn = 0;
 209:main.c        **** uint8 ignoreSensor = 0;
 210:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 211:main.c        **** 
 212:main.c        **** enum RobotMovement ForwardCourseCorrection();
 213:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 882              		.loc 1 213 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887 0000 80B4     		push	{r7}
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 7, -4
 890 0002 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
 214:main.c        ****     // if S5 and S6 are on black, move forward
 215:main.c        ****     if (!s5 && !s6) {
 892              		.loc 1 215 0
 893 0004 1C4B     		ldr	r3, .L44
 894 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0008 002B     		cmp	r3, #0
 896 000a 0FD1     		bne	.L37
 897              		.loc 1 215 0 is_stmt 0 discriminator 1
 898 000c 1B4B     		ldr	r3, .L44+4
 899 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 0010 002B     		cmp	r3, #0
 901 0012 0BD1     		bne	.L37
 216:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 902              		.loc 1 216 0 is_stmt 1
 903 0014 1A4B     		ldr	r3, .L44+8
 904 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0018 032B     		cmp	r3, #3
 906 001a 01D0     		beq	.L38
 217:main.c        ****             return AdjustToTheLeft;
 907              		.loc 1 217 0
 908 001c 0323     		movs	r3, #3
 909 001e 26E0     		b	.L39
 910              	.L38:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 21


 218:main.c        ****         }
 219:main.c        ****         if (previousDirection != AdjustToTheRight) {
 911              		.loc 1 219 0
 912 0020 174B     		ldr	r3, .L44+8
 913 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 914 0024 042B     		cmp	r3, #4
 915 0026 01D0     		beq	.L37
 220:main.c        ****             return AdjustToTheRight;    
 916              		.loc 1 220 0
 917 0028 0423     		movs	r3, #4
 918 002a 20E0     		b	.L39
 919              	.L37:
 221:main.c        ****         }
 222:main.c        ****     }
 223:main.c        ****     
 224:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 225:main.c        ****     if (s5 && s6) {
 920              		.loc 1 225 0
 921 002c 124B     		ldr	r3, .L44
 922 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 923 0030 002B     		cmp	r3, #0
 924 0032 0FD0     		beq	.L40
 925              		.loc 1 225 0 is_stmt 0 discriminator 1
 926 0034 114B     		ldr	r3, .L44+4
 927 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 0038 002B     		cmp	r3, #0
 929 003a 0BD0     		beq	.L40
 226:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 930              		.loc 1 226 0 is_stmt 1
 931 003c 104B     		ldr	r3, .L44+8
 932 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 0040 032B     		cmp	r3, #3
 934 0042 01D0     		beq	.L41
 227:main.c        ****             return AdjustToTheLeft;
 935              		.loc 1 227 0
 936 0044 0323     		movs	r3, #3
 937 0046 12E0     		b	.L39
 938              	.L41:
 228:main.c        ****         }
 229:main.c        ****         if (previousDirection != AdjustToTheRight) {
 939              		.loc 1 229 0
 940 0048 0D4B     		ldr	r3, .L44+8
 941 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 004c 042B     		cmp	r3, #4
 943 004e 01D0     		beq	.L40
 230:main.c        ****             return AdjustToTheRight;    
 944              		.loc 1 230 0
 945 0050 0423     		movs	r3, #4
 946 0052 0CE0     		b	.L39
 947              	.L40:
 231:main.c        ****         }
 232:main.c        ****     }
 233:main.c        **** 
 234:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 235:main.c        ****     if (s5) {
 948              		.loc 1 235 0
 949 0054 084B     		ldr	r3, .L44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 22


 950 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 0058 002B     		cmp	r3, #0
 952 005a 01D0     		beq	.L42
 236:main.c        ****         return AdjustToTheRight;    
 953              		.loc 1 236 0
 954 005c 0423     		movs	r3, #4
 955 005e 06E0     		b	.L39
 956              	.L42:
 237:main.c        ****     }
 238:main.c        ****     if (s6) {
 957              		.loc 1 238 0
 958 0060 064B     		ldr	r3, .L44+4
 959 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0064 002B     		cmp	r3, #0
 961 0066 01D0     		beq	.L43
 239:main.c        ****         return AdjustToTheLeft;    
 962              		.loc 1 239 0
 963 0068 0323     		movs	r3, #3
 964 006a 00E0     		b	.L39
 965              	.L43:
 240:main.c        ****     }
 241:main.c        ****    
 242:main.c        ****     // We should never actually get to this point
 243:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 244:main.c        ****     return Stop;
 966              		.loc 1 244 0
 967 006c 0523     		movs	r3, #5
 968              	.L39:
 245:main.c        **** }
 969              		.loc 1 245 0
 970 006e 1846     		mov	r0, r3
 971 0070 BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0072 80BC     		pop	{r7}
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 0074 7047     		bx	lr
 978              	.L45:
 979 0076 00BF     		.align	2
 980              	.L44:
 981 0078 00000000 		.word	s5
 982 007c 00000000 		.word	s6
 983 0080 00000000 		.word	previousDirection
 984              		.cfi_endproc
 985              	.LFE73:
 986              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 987              		.global	lastDirectionAfter180
 988              		.data
 989              		.type	lastDirectionAfter180, %object
 990              		.size	lastDirectionAfter180, 1
 991              	lastDirectionAfter180:
 992 0052 06       		.byte	6
 993              		.section	.text.SpinCourseCorrection,"ax",%progbits
 994              		.align	2
 995              		.global	SpinCourseCorrection
 996              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 23


 997              		.thumb_func
 998              		.type	SpinCourseCorrection, %function
 999              	SpinCourseCorrection:
 1000              	.LFB74:
 246:main.c        **** 
 247:main.c        **** enum RobotMovement SpinCourseCorrection();
 248:main.c        **** 
 249:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 250:main.c        **** 
 251:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1001              		.loc 1 251 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006 0000 80B4     		push	{r7}
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 7, -4
 1009 0002 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 252:main.c        ****     // Set first iteration flag.
 253:main.c        ****     if (!spinCourseCorrectionStarted) {
 1011              		.loc 1 253 0
 1012 0004 184B     		ldr	r3, .L53
 1013 0006 1B78     		ldrb	r3, [r3]
 1014 0008 DBB2     		uxtb	r3, r3
 1015 000a 002B     		cmp	r3, #0
 1016 000c 06D1     		bne	.L47
 254:main.c        ****         spinCourseCorrectionStarted = 1;    
 1017              		.loc 1 254 0
 1018 000e 164B     		ldr	r3, .L53
 1019 0010 0122     		movs	r2, #1
 1020 0012 1A70     		strb	r2, [r3]
 255:main.c        ****         lastDirectionAfter180 = currentDirection;
 1021              		.loc 1 255 0
 1022 0014 154B     		ldr	r3, .L53+4
 1023 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1024 0018 154B     		ldr	r3, .L53+8
 1025 001a 1A70     		strb	r2, [r3]
 1026              	.L47:
 256:main.c        ****     }
 257:main.c        ****     
 258:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 259:main.c        ****     if (s5 && s6) {
 1027              		.loc 1 259 0
 1028 001c 154B     		ldr	r3, .L53+12
 1029 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 0020 002B     		cmp	r3, #0
 1031 0022 0FD0     		beq	.L48
 1032              		.loc 1 259 0 is_stmt 0 discriminator 1
 1033 0024 144B     		ldr	r3, .L53+16
 1034 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 0028 002B     		cmp	r3, #0
 1036 002a 0BD0     		beq	.L48
 260:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1037              		.loc 1 260 0 is_stmt 1
 1038 002c 104B     		ldr	r3, .L53+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 24


 1039 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 0030 022B     		cmp	r3, #2
 1041 0032 01D0     		beq	.L49
 261:main.c        ****             return TurnLeft;
 1042              		.loc 1 261 0
 1043 0034 0223     		movs	r3, #2
 1044 0036 12E0     		b	.L50
 1045              	.L49:
 262:main.c        ****         }
 263:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1046              		.loc 1 263 0
 1047 0038 0D4B     		ldr	r3, .L53+8
 1048 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 003c 012B     		cmp	r3, #1
 1050 003e 01D0     		beq	.L48
 264:main.c        ****             return TurnRight;    
 1051              		.loc 1 264 0
 1052 0040 0123     		movs	r3, #1
 1053 0042 0CE0     		b	.L50
 1054              	.L48:
 265:main.c        ****         }
 266:main.c        ****     }
 267:main.c        **** 
 268:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 269:main.c        ****     if (s5) {
 1055              		.loc 1 269 0
 1056 0044 0B4B     		ldr	r3, .L53+12
 1057 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 0048 002B     		cmp	r3, #0
 1059 004a 01D0     		beq	.L51
 270:main.c        ****         return TurnRight;    
 1060              		.loc 1 270 0
 1061 004c 0123     		movs	r3, #1
 1062 004e 06E0     		b	.L50
 1063              	.L51:
 271:main.c        ****     }
 272:main.c        ****     if (s6) {
 1064              		.loc 1 272 0
 1065 0050 094B     		ldr	r3, .L53+16
 1066 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067 0054 002B     		cmp	r3, #0
 1068 0056 01D0     		beq	.L52
 273:main.c        ****         return TurnLeft;    
 1069              		.loc 1 273 0
 1070 0058 0223     		movs	r3, #2
 1071 005a 00E0     		b	.L50
 1072              	.L52:
 274:main.c        ****     }
 275:main.c        ****    
 276:main.c        ****     // We should never actually get to this point
 277:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 278:main.c        ****     return Stop;
 1073              		.loc 1 278 0
 1074 005c 0523     		movs	r3, #5
 1075              	.L50:
 279:main.c        **** }
 1076              		.loc 1 279 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 25


 1077 005e 1846     		mov	r0, r3
 1078 0060 BD46     		mov	sp, r7
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 0062 80BC     		pop	{r7}
 1082              		.cfi_restore 7
 1083              		.cfi_def_cfa_offset 0
 1084 0064 7047     		bx	lr
 1085              	.L54:
 1086 0066 00BF     		.align	2
 1087              	.L53:
 1088 0068 3B000000 		.word	spinCourseCorrectionStarted
 1089 006c 00000000 		.word	currentDirection
 1090 0070 00000000 		.word	lastDirectionAfter180
 1091 0074 00000000 		.word	s5
 1092 0078 00000000 		.word	s6
 1093              		.cfi_endproc
 1094              	.LFE74:
 1095              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1096              		.global	__aeabi_fcmpge
 1097              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1098              		.align	2
 1099              		.global	GetMovementAccordingToInstruction
 1100              		.thumb
 1101              		.thumb_func
 1102              		.type	GetMovementAccordingToInstruction, %function
 1103              	GetMovementAccordingToInstruction:
 1104              	.LFB75:
 280:main.c        **** 
 281:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1105              		.loc 1 281 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109 0000 80B5     		push	{r7, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 82B0     		sub	sp, sp, #8
 1114              		.cfi_def_cfa_offset 16
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 282:main.c        ****     float blocksize;
 283:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 1117              		.loc 1 283 0
 1118 0006 A24B     		ldr	r3, .L103
 1119 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1120 000a 002B     		cmp	r3, #0
 1121 000c 03D0     		beq	.L56
 1122              		.loc 1 283 0 is_stmt 0 discriminator 1
 1123 000e A04B     		ldr	r3, .L103
 1124 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 0012 012B     		cmp	r3, #1
 1126 0014 03D1     		bne	.L57
 1127              	.L56:
 284:main.c        ****         blocksize = yBlocksize;
 1128              		.loc 1 284 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 26


 1129 0016 9F4B     		ldr	r3, .L103+4
 1130 0018 1B68     		ldr	r3, [r3]	@ float
 1131 001a 7B60     		str	r3, [r7, #4]	@ float
 1132 001c 02E0     		b	.L58
 1133              	.L57:
 285:main.c        ****     } else {
 286:main.c        ****         blocksize = xBlocksize;
 1134              		.loc 1 286 0
 1135 001e 9E4B     		ldr	r3, .L103+8
 1136 0020 1B68     		ldr	r3, [r3]	@ float
 1137 0022 7B60     		str	r3, [r7, #4]	@ float
 1138              	.L58:
 287:main.c        ****     }
 288:main.c        ****     
 289:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 290:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 291:main.c        ****         // OR an EVENT happens in the current instruction
 292:main.c        ****         // e.g. CurrentInstruction: GoForward 
 293:main.c        ****         //      S3 on BLACK
 294:main.c        ****         //      Check Ignore Count
 295:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 296:main.c        ****     
 297:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1139              		.loc 1 297 0
 1140 0024 9D4B     		ldr	r3, .L103+12
 1141 0026 1B78     		ldrb	r3, [r3]
 1142 0028 FB70     		strb	r3, [r7, #3]
 298:main.c        ****     
 299:main.c        ****     switch (currentInstructionDirection) {
 1143              		.loc 1 299 0
 1144 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1145 002c 052B     		cmp	r3, #5
 1146 002e 00F2C181 		bhi	.L59
 1147 0032 01A2     		adr	r2, .L61
 1148 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1149              		.p2align 2
 1150              	.L61:
 1151 0038 51000000 		.word	.L60+1
 1152 003c 13010000 		.word	.L62+1
 1153 0040 D1010000 		.word	.L63+1
 1154 0044 47030000 		.word	.L64+1
 1155 0048 D1020000 		.word	.L65+1
 1156 004c 21030000 		.word	.L66+1
 1157              		.p2align 1
 1158              	.L60:
 300:main.c        ****         case GoForward:
 301:main.c        ****             if(currentDirection == Stop) {
 1159              		.loc 1 301 0
 1160 0050 934B     		ldr	r3, .L103+16
 1161 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162 0054 052B     		cmp	r3, #5
 1163 0056 08D1     		bne	.L67
 302:main.c        ****                 if(stopBuffer <= 100) {
 1164              		.loc 1 302 0
 1165 0058 924B     		ldr	r3, .L103+20
 1166 005a 1B68     		ldr	r3, [r3]
 1167 005c 642B     		cmp	r3, #100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 27


 1168 005e 01D8     		bhi	.L68
 303:main.c        ****                     return Stop;
 1169              		.loc 1 303 0
 1170 0060 0523     		movs	r3, #5
 1171 0062 A8E1     		b	.L69
 1172              	.L68:
 304:main.c        ****                 } else {
 305:main.c        ****                     stopBuffer = 110;
 1173              		.loc 1 305 0
 1174 0064 8F4B     		ldr	r3, .L103+20
 1175 0066 6E22     		movs	r2, #110
 1176 0068 1A60     		str	r2, [r3]
 1177              	.L67:
 306:main.c        ****                 }
 307:main.c        ****             }
 308:main.c        ****             if (s3) {
 1178              		.loc 1 308 0
 1179 006a 8F4B     		ldr	r3, .L103+24
 1180 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1181 006e 002B     		cmp	r3, #0
 1182 0070 02D0     		beq	.L70
 309:main.c        ****                 leftStatusFlag = 1;
 1183              		.loc 1 309 0
 1184 0072 8E4B     		ldr	r3, .L103+28
 1185 0074 0122     		movs	r2, #1
 1186 0076 1A70     		strb	r2, [r3]
 1187              	.L70:
 310:main.c        ****             }
 311:main.c        ****             
 312:main.c        ****             if (s4) {
 1188              		.loc 1 312 0
 1189 0078 8D4B     		ldr	r3, .L103+32
 1190 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 007c 002B     		cmp	r3, #0
 1192 007e 02D0     		beq	.L71
 313:main.c        ****                 rightStatusFlag = 1;
 1193              		.loc 1 313 0
 1194 0080 8C4B     		ldr	r3, .L103+36
 1195 0082 0122     		movs	r2, #1
 1196 0084 1A70     		strb	r2, [r3]
 1197              	.L71:
 314:main.c        ****             }
 315:main.c        ****             
 316:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 317:main.c        ****             if (leftStatusFlag) {
 1198              		.loc 1 317 0
 1199 0086 894B     		ldr	r3, .L103+28
 1200 0088 1B78     		ldrb	r3, [r3]
 1201 008a DBB2     		uxtb	r3, r3
 1202 008c 002B     		cmp	r3, #0
 1203 008e 1BD0     		beq	.L72
 318:main.c        ****                 if (!s3) {
 1204              		.loc 1 318 0
 1205 0090 854B     		ldr	r3, .L103+24
 1206 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 0094 002B     		cmp	r3, #0
 1208 0096 17D1     		bne	.L72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 28


 319:main.c        ****                     leftStatusFlag = 0;    
 1209              		.loc 1 319 0
 1210 0098 844B     		ldr	r3, .L103+28
 1211 009a 0022     		movs	r2, #0
 1212 009c 1A70     		strb	r2, [r3]
 320:main.c        ****                     if (currentIgnoreL == 0) {
 1213              		.loc 1 320 0
 1214 009e 864B     		ldr	r3, .L103+40
 1215 00a0 1B78     		ldrb	r3, [r3]
 1216 00a2 DBB2     		uxtb	r3, r3
 1217 00a4 002B     		cmp	r3, #0
 1218 00a6 03D1     		bne	.L73
 321:main.c        ****                         MoveToNextInstruction();
 1219              		.loc 1 321 0
 1220 00a8 FFF7FEFF 		bl	MoveToNextInstruction
 322:main.c        ****                         return Stop;
 1221              		.loc 1 322 0
 1222 00ac 0523     		movs	r3, #5
 1223 00ae 82E1     		b	.L69
 1224              	.L73:
 323:main.c        ****                     }
 324:main.c        ****                     if (currentIgnoreL > 0) {
 1225              		.loc 1 324 0
 1226 00b0 814B     		ldr	r3, .L103+40
 1227 00b2 1B78     		ldrb	r3, [r3]
 1228 00b4 DBB2     		uxtb	r3, r3
 1229 00b6 002B     		cmp	r3, #0
 1230 00b8 06D0     		beq	.L72
 325:main.c        ****                         currentIgnoreL--;    
 1231              		.loc 1 325 0
 1232 00ba 7F4B     		ldr	r3, .L103+40
 1233 00bc 1B78     		ldrb	r3, [r3]
 1234 00be DBB2     		uxtb	r3, r3
 1235 00c0 013B     		subs	r3, r3, #1
 1236 00c2 DAB2     		uxtb	r2, r3
 1237 00c4 7C4B     		ldr	r3, .L103+40
 1238 00c6 1A70     		strb	r2, [r3]
 1239              	.L72:
 326:main.c        ****                     }
 327:main.c        ****                 }
 328:main.c        ****             }
 329:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 330:main.c        ****             if (rightStatusFlag) {
 1240              		.loc 1 330 0
 1241 00c8 7A4B     		ldr	r3, .L103+36
 1242 00ca 1B78     		ldrb	r3, [r3]
 1243 00cc DBB2     		uxtb	r3, r3
 1244 00ce 002B     		cmp	r3, #0
 1245 00d0 1BD0     		beq	.L74
 331:main.c        ****                 if (!s4) {
 1246              		.loc 1 331 0
 1247 00d2 774B     		ldr	r3, .L103+32
 1248 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1249 00d6 002B     		cmp	r3, #0
 1250 00d8 17D1     		bne	.L74
 332:main.c        ****                     rightStatusFlag = 0;
 1251              		.loc 1 332 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 29


 1252 00da 764B     		ldr	r3, .L103+36
 1253 00dc 0022     		movs	r2, #0
 1254 00de 1A70     		strb	r2, [r3]
 333:main.c        ****                     if (currentIgnoreR == 0) {
 1255              		.loc 1 333 0
 1256 00e0 764B     		ldr	r3, .L103+44
 1257 00e2 1B78     		ldrb	r3, [r3]
 1258 00e4 DBB2     		uxtb	r3, r3
 1259 00e6 002B     		cmp	r3, #0
 1260 00e8 03D1     		bne	.L75
 334:main.c        ****                         MoveToNextInstruction();
 1261              		.loc 1 334 0
 1262 00ea FFF7FEFF 		bl	MoveToNextInstruction
 335:main.c        ****                         return Stop;
 1263              		.loc 1 335 0
 1264 00ee 0523     		movs	r3, #5
 1265 00f0 61E1     		b	.L69
 1266              	.L75:
 336:main.c        ****                     }
 337:main.c        ****                     if (currentIgnoreR > 0) {
 1267              		.loc 1 337 0
 1268 00f2 724B     		ldr	r3, .L103+44
 1269 00f4 1B78     		ldrb	r3, [r3]
 1270 00f6 DBB2     		uxtb	r3, r3
 1271 00f8 002B     		cmp	r3, #0
 1272 00fa 06D0     		beq	.L74
 338:main.c        ****                         currentIgnoreR--;    
 1273              		.loc 1 338 0
 1274 00fc 6F4B     		ldr	r3, .L103+44
 1275 00fe 1B78     		ldrb	r3, [r3]
 1276 0100 DBB2     		uxtb	r3, r3
 1277 0102 013B     		subs	r3, r3, #1
 1278 0104 DAB2     		uxtb	r2, r3
 1279 0106 6D4B     		ldr	r3, .L103+44
 1280 0108 1A70     		strb	r2, [r3]
 1281              	.L74:
 339:main.c        ****                     }
 340:main.c        ****                 }
 341:main.c        ****             }
 342:main.c        ****           
 343:main.c        ****             return ForwardCourseCorrection();
 1282              		.loc 1 343 0
 1283 010a FFF7FEFF 		bl	ForwardCourseCorrection
 1284 010e 0346     		mov	r3, r0
 1285 0110 51E1     		b	.L69
 1286              	.L62:
 344:main.c        ****             break;
 345:main.c        ****         case waitForLeftTurn:
 346:main.c        ****             // continue moving forward until s3 goes on black
 347:main.c        ****             // if we are turning left already
 348:main.c        ****                 // wait until s5 || s6 are on black
 349:main.c        ****                 // return stop
 350:main.c        **** 
 351:main.c        ****             if (turnFinishedFlag) {
 1287              		.loc 1 351 0
 1288 0112 6B4B     		ldr	r3, .L103+48
 1289 0114 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 30


 1290 0116 DBB2     		uxtb	r3, r3
 1291 0118 002B     		cmp	r3, #0
 1292 011a 0ED0     		beq	.L76
 352:main.c        ****                 if (s3) {
 1293              		.loc 1 352 0
 1294 011c 624B     		ldr	r3, .L103+24
 1295 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1296 0120 002B     		cmp	r3, #0
 1297 0122 06D0     		beq	.L77
 353:main.c        ****                     turnFinishedFlag = 0;
 1298              		.loc 1 353 0
 1299 0124 664B     		ldr	r3, .L103+48
 1300 0126 0022     		movs	r2, #0
 1301 0128 1A70     		strb	r2, [r3]
 354:main.c        ****                     MoveToNextInstruction();    
 1302              		.loc 1 354 0
 1303 012a FFF7FEFF 		bl	MoveToNextInstruction
 355:main.c        ****                     return Stop;
 1304              		.loc 1 355 0
 1305 012e 0523     		movs	r3, #5
 1306 0130 41E1     		b	.L69
 1307              	.L77:
 356:main.c        ****                 }
 357:main.c        ****                 else {
 358:main.c        ****                     return ForwardCourseCorrection();        
 1308              		.loc 1 358 0
 1309 0132 FFF7FEFF 		bl	ForwardCourseCorrection
 1310 0136 0346     		mov	r3, r0
 1311 0138 3DE1     		b	.L69
 1312              	.L76:
 359:main.c        ****                 }
 360:main.c        ****             }
 361:main.c        ****             
 362:main.c        ****             
 363:main.c        ****             if (currentDirection == Stop) {
 1313              		.loc 1 363 0
 1314 013a 594B     		ldr	r3, .L103+16
 1315 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 013e 052B     		cmp	r3, #5
 1317 0140 09D1     		bne	.L78
 364:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 365:main.c        ****                 if (stopBuffer <= 50) {
 1318              		.loc 1 365 0
 1319 0142 584B     		ldr	r3, .L103+20
 1320 0144 1B68     		ldr	r3, [r3]
 1321 0146 322B     		cmp	r3, #50
 1322 0148 01D8     		bhi	.L79
 366:main.c        ****                     return Stop;   
 1323              		.loc 1 366 0
 1324 014a 0523     		movs	r3, #5
 1325 014c 33E1     		b	.L69
 1326              	.L79:
 367:main.c        ****                 }
 368:main.c        ****                 return ForwardCourseCorrection();
 1327              		.loc 1 368 0
 1328 014e FFF7FEFF 		bl	ForwardCourseCorrection
 1329 0152 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 31


 1330 0154 2FE1     		b	.L69
 1331              	.L78:
 369:main.c        ****             }
 370:main.c        ****          
 371:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 372:main.c        ****             if (currentDirection == TurnLeft) {
 1332              		.loc 1 372 0
 1333 0156 524B     		ldr	r3, .L103+16
 1334 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 015a 022B     		cmp	r3, #2
 1336 015c 2BD1     		bne	.L80
 373:main.c        ****                 // If turn started and we are still on black, continue turning
 374:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 375:main.c        ****                 if (turnStartedFlag) {
 1337              		.loc 1 375 0
 1338 015e 594B     		ldr	r3, .L103+52
 1339 0160 1B78     		ldrb	r3, [r3]
 1340 0162 DBB2     		uxtb	r3, r3
 1341 0164 002B     		cmp	r3, #0
 1342 0166 0ED0     		beq	.L81
 376:main.c        ****                     if (s3 && (s5 && s6)) {
 1343              		.loc 1 376 0
 1344 0168 4F4B     		ldr	r3, .L103+24
 1345 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 016c 002B     		cmp	r3, #0
 1347 016e 0AD0     		beq	.L81
 1348              		.loc 1 376 0 is_stmt 0 discriminator 1
 1349 0170 554B     		ldr	r3, .L103+56
 1350 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0174 002B     		cmp	r3, #0
 1352 0176 06D0     		beq	.L81
 1353              		.loc 1 376 0 discriminator 2
 1354 0178 544B     		ldr	r3, .L103+60
 1355 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1356 017c 002B     		cmp	r3, #0
 1357 017e 02D0     		beq	.L81
 377:main.c        ****                         turnStartedFlag = 0;
 1358              		.loc 1 377 0 is_stmt 1
 1359 0180 504B     		ldr	r3, .L103+52
 1360 0182 0022     		movs	r2, #0
 1361 0184 1A70     		strb	r2, [r3]
 1362              	.L81:
 378:main.c        ****                     }
 379:main.c        ****                 }
 380:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1363              		.loc 1 380 0
 1364 0186 4F4B     		ldr	r3, .L103+52
 1365 0188 1B78     		ldrb	r3, [r3]
 1366 018a DBB2     		uxtb	r3, r3
 1367 018c 002B     		cmp	r3, #0
 1368 018e 10D1     		bne	.L82
 1369              		.loc 1 380 0 is_stmt 0 discriminator 1
 1370 0190 454B     		ldr	r3, .L103+24
 1371 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1372 0194 002B     		cmp	r3, #0
 1373 0196 0CD1     		bne	.L82
 1374              		.loc 1 380 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 32


 1375 0198 4B4B     		ldr	r3, .L103+56
 1376 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1377 019c 002B     		cmp	r3, #0
 1378 019e 08D1     		bne	.L82
 1379              		.loc 1 380 0 discriminator 3
 1380 01a0 4A4B     		ldr	r3, .L103+60
 1381 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 01a4 002B     		cmp	r3, #0
 1383 01a6 04D1     		bne	.L82
 381:main.c        ****                     turnFinishedFlag = 1;
 1384              		.loc 1 381 0 is_stmt 1
 1385 01a8 454B     		ldr	r3, .L103+48
 1386 01aa 0122     		movs	r2, #1
 1387 01ac 1A70     		strb	r2, [r3]
 382:main.c        ****                     return Stop;
 1388              		.loc 1 382 0
 1389 01ae 0523     		movs	r3, #5
 1390 01b0 01E1     		b	.L69
 1391              	.L82:
 383:main.c        ****                 }
 384:main.c        ****                 else
 385:main.c        ****                 {
 386:main.c        ****                     return TurnLeft;
 1392              		.loc 1 386 0
 1393 01b2 0223     		movs	r3, #2
 1394 01b4 FFE0     		b	.L69
 1395              	.L80:
 387:main.c        ****                 }
 388:main.c        ****             }
 389:main.c        ****             
 390:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 391:main.c        ****             if (!s3) {
 1396              		.loc 1 391 0
 1397 01b6 3C4B     		ldr	r3, .L103+24
 1398 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 01ba 002B     		cmp	r3, #0
 1400 01bc 04D1     		bne	.L83
 392:main.c        ****                 turnStartedFlag = 1;
 1401              		.loc 1 392 0
 1402 01be 414B     		ldr	r3, .L103+52
 1403 01c0 0122     		movs	r2, #1
 1404 01c2 1A70     		strb	r2, [r3]
 393:main.c        ****                 return TurnLeft;
 1405              		.loc 1 393 0
 1406 01c4 0223     		movs	r3, #2
 1407 01c6 F6E0     		b	.L69
 1408              	.L83:
 394:main.c        ****             }
 395:main.c        ****             
 396:main.c        ****             // Otherwise, keep going forward
 397:main.c        ****             return ForwardCourseCorrection(); 
 1409              		.loc 1 397 0
 1410 01c8 FFF7FEFF 		bl	ForwardCourseCorrection
 1411 01cc 0346     		mov	r3, r0
 1412 01ce F2E0     		b	.L69
 1413              	.L63:
 398:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 33


 399:main.c        ****         case waitForRightTurn:
 400:main.c        ****             // continue moving forward until s4 goes on black
 401:main.c        ****             // if we are turning left already
 402:main.c        ****                 // wait until s5 || s6 are on black
 403:main.c        ****                 // return stop
 404:main.c        **** 
 405:main.c        ****             if (turnFinishedFlag) {
 1414              		.loc 1 405 0
 1415 01d0 3B4B     		ldr	r3, .L103+48
 1416 01d2 1B78     		ldrb	r3, [r3]
 1417 01d4 DBB2     		uxtb	r3, r3
 1418 01d6 002B     		cmp	r3, #0
 1419 01d8 0ED0     		beq	.L84
 406:main.c        ****                 if (s4) {
 1420              		.loc 1 406 0
 1421 01da 354B     		ldr	r3, .L103+32
 1422 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1423 01de 002B     		cmp	r3, #0
 1424 01e0 06D0     		beq	.L85
 407:main.c        ****                     turnFinishedFlag = 0;
 1425              		.loc 1 407 0
 1426 01e2 374B     		ldr	r3, .L103+48
 1427 01e4 0022     		movs	r2, #0
 1428 01e6 1A70     		strb	r2, [r3]
 408:main.c        ****                     MoveToNextInstruction();   
 1429              		.loc 1 408 0
 1430 01e8 FFF7FEFF 		bl	MoveToNextInstruction
 409:main.c        ****                     return Stop;
 1431              		.loc 1 409 0
 1432 01ec 0523     		movs	r3, #5
 1433 01ee E2E0     		b	.L69
 1434              	.L85:
 410:main.c        ****                 }
 411:main.c        ****                 else {
 412:main.c        ****                     return ForwardCourseCorrection();        
 1435              		.loc 1 412 0
 1436 01f0 FFF7FEFF 		bl	ForwardCourseCorrection
 1437 01f4 0346     		mov	r3, r0
 1438 01f6 DEE0     		b	.L69
 1439              	.L84:
 413:main.c        ****                 }
 414:main.c        ****             }
 415:main.c        ****             
 416:main.c        ****             
 417:main.c        ****             if (currentDirection == Stop) {
 1440              		.loc 1 417 0
 1441 01f8 294B     		ldr	r3, .L103+16
 1442 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443 01fc 052B     		cmp	r3, #5
 1444 01fe 09D1     		bne	.L86
 418:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 419:main.c        ****                 if (stopBuffer <= 50) {
 1445              		.loc 1 419 0
 1446 0200 284B     		ldr	r3, .L103+20
 1447 0202 1B68     		ldr	r3, [r3]
 1448 0204 322B     		cmp	r3, #50
 1449 0206 01D8     		bhi	.L87
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 34


 420:main.c        ****                     return Stop;   
 1450              		.loc 1 420 0
 1451 0208 0523     		movs	r3, #5
 1452 020a D4E0     		b	.L69
 1453              	.L87:
 421:main.c        ****                 }
 422:main.c        **** 
 423:main.c        ****                 return ForwardCourseCorrection();
 1454              		.loc 1 423 0
 1455 020c FFF7FEFF 		bl	ForwardCourseCorrection
 1456 0210 0346     		mov	r3, r0
 1457 0212 D0E0     		b	.L69
 1458              	.L86:
 424:main.c        ****             }
 425:main.c        ****                       
 426:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 427:main.c        ****             if (currentDirection == TurnRight) {
 1459              		.loc 1 427 0
 1460 0214 224B     		ldr	r3, .L103+16
 1461 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 0218 012B     		cmp	r3, #1
 1463 021a 2BD1     		bne	.L88
 428:main.c        ****                 // If turn started and we are still on black, continue turning
 429:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 430:main.c        ****                 if (turnStartedFlag) {
 1464              		.loc 1 430 0
 1465 021c 294B     		ldr	r3, .L103+52
 1466 021e 1B78     		ldrb	r3, [r3]
 1467 0220 DBB2     		uxtb	r3, r3
 1468 0222 002B     		cmp	r3, #0
 1469 0224 0ED0     		beq	.L89
 431:main.c        ****                     if (s4 && (s5 && s6)) {
 1470              		.loc 1 431 0
 1471 0226 224B     		ldr	r3, .L103+32
 1472 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 022a 002B     		cmp	r3, #0
 1474 022c 0AD0     		beq	.L89
 1475              		.loc 1 431 0 is_stmt 0 discriminator 1
 1476 022e 264B     		ldr	r3, .L103+56
 1477 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 0232 002B     		cmp	r3, #0
 1479 0234 06D0     		beq	.L89
 1480              		.loc 1 431 0 discriminator 2
 1481 0236 254B     		ldr	r3, .L103+60
 1482 0238 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1483 023a 002B     		cmp	r3, #0
 1484 023c 02D0     		beq	.L89
 432:main.c        ****                         turnStartedFlag = 0;
 1485              		.loc 1 432 0 is_stmt 1
 1486 023e 214B     		ldr	r3, .L103+52
 1487 0240 0022     		movs	r2, #0
 1488 0242 1A70     		strb	r2, [r3]
 1489              	.L89:
 433:main.c        ****                     }
 434:main.c        ****                 }
 435:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1490              		.loc 1 435 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 35


 1491 0244 1F4B     		ldr	r3, .L103+52
 1492 0246 1B78     		ldrb	r3, [r3]
 1493 0248 DBB2     		uxtb	r3, r3
 1494 024a 002B     		cmp	r3, #0
 1495 024c 10D1     		bne	.L90
 1496              		.loc 1 435 0 is_stmt 0 discriminator 1
 1497 024e 184B     		ldr	r3, .L103+32
 1498 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1499 0252 002B     		cmp	r3, #0
 1500 0254 0CD1     		bne	.L90
 1501              		.loc 1 435 0 discriminator 2
 1502 0256 1C4B     		ldr	r3, .L103+56
 1503 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1504 025a 002B     		cmp	r3, #0
 1505 025c 08D1     		bne	.L90
 1506              		.loc 1 435 0 discriminator 3
 1507 025e 1B4B     		ldr	r3, .L103+60
 1508 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 0262 002B     		cmp	r3, #0
 1510 0264 04D1     		bne	.L90
 436:main.c        ****                     turnFinishedFlag = 1;
 1511              		.loc 1 436 0 is_stmt 1
 1512 0266 164B     		ldr	r3, .L103+48
 1513 0268 0122     		movs	r2, #1
 1514 026a 1A70     		strb	r2, [r3]
 437:main.c        ****                     return Stop;
 1515              		.loc 1 437 0
 1516 026c 0523     		movs	r3, #5
 1517 026e A2E0     		b	.L69
 1518              	.L90:
 438:main.c        ****                 }
 439:main.c        ****                 else
 440:main.c        ****                 {
 441:main.c        ****                     return TurnRight;
 1519              		.loc 1 441 0
 1520 0270 0123     		movs	r3, #1
 1521 0272 A0E0     		b	.L69
 1522              	.L88:
 442:main.c        ****                 }
 443:main.c        ****             }
 444:main.c        ****             
 445:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 446:main.c        ****             if (!s4) {
 1523              		.loc 1 446 0
 1524 0274 0E4B     		ldr	r3, .L103+32
 1525 0276 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 0278 002B     		cmp	r3, #0
 1527 027a 04D1     		bne	.L91
 447:main.c        ****                 turnStartedFlag = 1;
 1528              		.loc 1 447 0
 1529 027c 114B     		ldr	r3, .L103+52
 1530 027e 0122     		movs	r2, #1
 1531 0280 1A70     		strb	r2, [r3]
 448:main.c        ****                 return TurnRight;
 1532              		.loc 1 448 0
 1533 0282 0123     		movs	r3, #1
 1534 0284 97E0     		b	.L69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 36


 1535              	.L91:
 449:main.c        ****             }
 450:main.c        ****             
 451:main.c        ****             // Otherwise, keep going forward
 452:main.c        ****             return ForwardCourseCorrection(); 
 1536              		.loc 1 452 0
 1537 0286 FFF7FEFF 		bl	ForwardCourseCorrection
 1538 028a 0346     		mov	r3, r0
 1539 028c 93E0     		b	.L69
 1540              	.L104:
 1541 028e 00BF     		.align	2
 1542              	.L103:
 1543 0290 00000000 		.word	currentRobotOrientation
 1544 0294 00000000 		.word	yBlocksize
 1545 0298 00000000 		.word	xBlocksize
 1546 029c 00000000 		.word	currentInstruction
 1547 02a0 00000000 		.word	currentDirection
 1548 02a4 00000000 		.word	stopBuffer
 1549 02a8 00000000 		.word	s3
 1550 02ac 39000000 		.word	leftStatusFlag
 1551 02b0 00000000 		.word	s4
 1552 02b4 3A000000 		.word	rightStatusFlag
 1553 02b8 3C000000 		.word	currentIgnoreL
 1554 02bc 3D000000 		.word	currentIgnoreR
 1555 02c0 35000000 		.word	turnFinishedFlag
 1556 02c4 34000000 		.word	turnStartedFlag
 1557 02c8 00000000 		.word	s5
 1558 02cc 00000000 		.word	s6
 1559              	.L65:
 453:main.c        ****             break;
 454:main.c        ****         case ForwardUntilTarget:
 455:main.c        ****             // Reset distance on first iteration of this instruction
 456:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1560              		.loc 1 456 0
 1561 02d0 3B4B     		ldr	r3, .L105
 1562 02d2 1B78     		ldrb	r3, [r3]
 1563 02d4 DBB2     		uxtb	r3, r3
 1564 02d6 002B     		cmp	r3, #0
 1565 02d8 0FD1     		bne	.L92
 457:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1566              		.loc 1 457 0
 1567 02da 394B     		ldr	r3, .L105
 1568 02dc 0122     		movs	r2, #1
 1569 02de 1A70     		strb	r2, [r3]
 458:main.c        ****                 totalDistance = 0;
 1570              		.loc 1 458 0
 1571 02e0 384B     		ldr	r3, .L105+4
 1572 02e2 4FF00002 		mov	r2, #0
 1573 02e6 1A60     		str	r2, [r3]	@ float
 459:main.c        **** 
 460:main.c        ****                 //blocksSizeTotal = CalculateDistanceToTravel();
 461:main.c        ****                 blockSizeTotal = blocksize * 2;
 1574              		.loc 1 461 0
 1575 02e8 7B68     		ldr	r3, [r7, #4]	@ float
 1576 02ea 1946     		mov	r1, r3
 1577 02ec 1846     		mov	r0, r3
 1578 02ee FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 37


 1579 02f2 0346     		mov	r3, r0
 1580 02f4 1A46     		mov	r2, r3
 1581 02f6 344B     		ldr	r3, .L105+8
 1582 02f8 1A60     		str	r2, [r3]	@ float
 1583              	.L92:
 462:main.c        ****             }
 463:main.c        ****             
 464:main.c        ****             
 465:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 466:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1584              		.loc 1 466 0
 1585 02fa 324B     		ldr	r3, .L105+4
 1586 02fc 1A68     		ldr	r2, [r3]	@ float
 1587 02fe 324B     		ldr	r3, .L105+8
 1588 0300 1B68     		ldr	r3, [r3]	@ float
 1589 0302 1946     		mov	r1, r3
 1590 0304 1046     		mov	r0, r2
 1591 0306 FFF7FEFF 		bl	__aeabi_fcmpge
 1592 030a 0346     		mov	r3, r0
 1593 030c 002B     		cmp	r3, #0
 1594 030e 03D0     		beq	.L102
 467:main.c        ****                 // Get next instruction
 468:main.c        ****                 MoveToNextInstruction();
 1595              		.loc 1 468 0
 1596 0310 FFF7FEFF 		bl	MoveToNextInstruction
 469:main.c        **** 
 470:main.c        ****                 
 471:main.c        ****                 return Stop;
 1597              		.loc 1 471 0
 1598 0314 0523     		movs	r3, #5
 1599 0316 4EE0     		b	.L69
 1600              	.L102:
 472:main.c        ****             }
 473:main.c        ****             
 474:main.c        ****             return ForwardCourseCorrection();
 1601              		.loc 1 474 0
 1602 0318 FFF7FEFF 		bl	ForwardCourseCorrection
 1603 031c 0346     		mov	r3, r0
 1604 031e 4AE0     		b	.L69
 1605              	.L66:
 475:main.c        ****             break;
 476:main.c        ****         case StopAtTarget:
 477:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 478:main.c        ****             // Reset flags
 479:main.c        ****             totalDistance = 0;
 1606              		.loc 1 479 0
 1607 0320 284B     		ldr	r3, .L105+4
 1608 0322 4FF00002 		mov	r2, #0
 1609 0326 1A60     		str	r2, [r3]	@ float
 480:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1610              		.loc 1 480 0
 1611 0328 254B     		ldr	r3, .L105
 1612 032a 0022     		movs	r2, #0
 1613 032c 1A70     		strb	r2, [r3]
 481:main.c        ****             blockSizeTotal = 0;
 1614              		.loc 1 481 0
 1615 032e 264B     		ldr	r3, .L105+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 38


 1616 0330 4FF00002 		mov	r2, #0
 1617 0334 1A60     		str	r2, [r3]	@ float
 482:main.c        ****             
 483:main.c        ****             if (stopBuffer <= 200) {
 1618              		.loc 1 483 0
 1619 0336 254B     		ldr	r3, .L105+12
 1620 0338 1B68     		ldr	r3, [r3]
 1621 033a C82B     		cmp	r3, #200
 1622 033c 01D8     		bhi	.L95
 484:main.c        ****                 return Stop;    
 1623              		.loc 1 484 0
 1624 033e 0523     		movs	r3, #5
 1625 0340 39E0     		b	.L69
 1626              	.L95:
 485:main.c        ****             }
 486:main.c        ****             return TurnRight;
 1627              		.loc 1 486 0
 1628 0342 0123     		movs	r3, #1
 1629 0344 37E0     		b	.L69
 1630              	.L64:
 487:main.c        ****             break;
 488:main.c        ****         case uTurn:
 489:main.c        ****             if (currentDirection == Stop) {
 1631              		.loc 1 489 0
 1632 0346 224B     		ldr	r3, .L105+16
 1633 0348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 034a 052B     		cmp	r3, #5
 1635 034c 08D1     		bne	.L96
 490:main.c        ****                 if (stopBuffer <= 50) {
 1636              		.loc 1 490 0
 1637 034e 1F4B     		ldr	r3, .L105+12
 1638 0350 1B68     		ldr	r3, [r3]
 1639 0352 322B     		cmp	r3, #50
 1640 0354 01D8     		bhi	.L97
 491:main.c        ****                     return Stop;    
 1641              		.loc 1 491 0
 1642 0356 0523     		movs	r3, #5
 1643 0358 2DE0     		b	.L69
 1644              	.L97:
 492:main.c        ****                 } else {
 493:main.c        ****                     stopBuffer = 100;    
 1645              		.loc 1 493 0
 1646 035a 1C4B     		ldr	r3, .L105+12
 1647 035c 6422     		movs	r2, #100
 1648 035e 1A60     		str	r2, [r3]
 1649              	.L96:
 494:main.c        ****                 }
 495:main.c        ****             }
 496:main.c        ****             
 497:main.c        ****             
 498:main.c        ****             if (!uTurnStartedFlag) {
 1650              		.loc 1 498 0
 1651 0360 1C4B     		ldr	r3, .L105+20
 1652 0362 1B78     		ldrb	r3, [r3]
 1653 0364 DBB2     		uxtb	r3, r3
 1654 0366 002B     		cmp	r3, #0
 1655 0368 07D1     		bne	.L98
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 39


 499:main.c        ****                 uTurnStartedFlag = 1;
 1656              		.loc 1 499 0
 1657 036a 1A4B     		ldr	r3, .L105+20
 1658 036c 0122     		movs	r2, #1
 1659 036e 1A70     		strb	r2, [r3]
 500:main.c        ****                 spinCourseCorrectionStarted = 0;
 1660              		.loc 1 500 0
 1661 0370 194B     		ldr	r3, .L105+24
 1662 0372 0022     		movs	r2, #0
 1663 0374 1A70     		strb	r2, [r3]
 501:main.c        ****                 return Spin180;
 1664              		.loc 1 501 0
 1665 0376 0A23     		movs	r3, #10
 1666 0378 1DE0     		b	.L69
 1667              	.L98:
 502:main.c        ****             } 
 503:main.c        ****             
 504:main.c        ****             if (uTurnFinishedFlag) {
 1668              		.loc 1 504 0
 1669 037a 184B     		ldr	r3, .L105+28
 1670 037c 1B78     		ldrb	r3, [r3]
 1671 037e DBB2     		uxtb	r3, r3
 1672 0380 002B     		cmp	r3, #0
 1673 0382 03D0     		beq	.L99
 505:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 506:main.c        ****                 MoveToNextInstruction();
 1674              		.loc 1 506 0
 1675 0384 FFF7FEFF 		bl	MoveToNextInstruction
 507:main.c        ****                 return Stop;    
 1676              		.loc 1 507 0
 1677 0388 0523     		movs	r3, #5
 1678 038a 14E0     		b	.L69
 1679              	.L99:
 508:main.c        ****             }
 509:main.c        ****             
 510:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 511:main.c        ****             if (uTurnStartedFlag) {
 1680              		.loc 1 511 0
 1681 038c 114B     		ldr	r3, .L105+20
 1682 038e 1B78     		ldrb	r3, [r3]
 1683 0390 DBB2     		uxtb	r3, r3
 1684 0392 002B     		cmp	r3, #0
 1685 0394 0AD0     		beq	.L100
 512:main.c        ****                 if (!s5 && !s6) {
 1686              		.loc 1 512 0
 1687 0396 124B     		ldr	r3, .L105+32
 1688 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1689 039a 002B     		cmp	r3, #0
 1690 039c 06D1     		bne	.L100
 1691              		.loc 1 512 0 is_stmt 0 discriminator 1
 1692 039e 114B     		ldr	r3, .L105+36
 1693 03a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1694 03a2 002B     		cmp	r3, #0
 1695 03a4 02D1     		bne	.L100
 513:main.c        ****                     uTurnFinishedFlag = 1;    
 1696              		.loc 1 513 0 is_stmt 1
 1697 03a6 0D4B     		ldr	r3, .L105+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 40


 1698 03a8 0122     		movs	r2, #1
 1699 03aa 1A70     		strb	r2, [r3]
 1700              	.L100:
 514:main.c        ****                 }    
 515:main.c        ****             }
 516:main.c        ****             
 517:main.c        ****             return SpinCourseCorrection();
 1701              		.loc 1 517 0
 1702 03ac FFF7FEFF 		bl	SpinCourseCorrection
 1703 03b0 0346     		mov	r3, r0
 1704 03b2 00E0     		b	.L69
 1705              	.L59:
 518:main.c        ****             break;
 519:main.c        ****         default:
 520:main.c        ****             return Stop;
 1706              		.loc 1 520 0
 1707 03b4 0523     		movs	r3, #5
 1708              	.L69:
 521:main.c        ****             break;
 522:main.c        ****     }
 523:main.c        ****     return Stop;
 524:main.c        **** }
 1709              		.loc 1 524 0
 1710 03b6 1846     		mov	r0, r3
 1711 03b8 0837     		adds	r7, r7, #8
 1712              		.cfi_def_cfa_offset 8
 1713 03ba BD46     		mov	sp, r7
 1714              		.cfi_def_cfa_register 13
 1715              		@ sp needed
 1716 03bc 80BD     		pop	{r7, pc}
 1717              	.L106:
 1718 03be 00BF     		.align	2
 1719              	.L105:
 1720 03c0 36000000 		.word	forwardUntilTargetStartedFlag
 1721 03c4 00000000 		.word	totalDistance
 1722 03c8 00000000 		.word	blockSizeTotal
 1723 03cc 00000000 		.word	stopBuffer
 1724 03d0 00000000 		.word	currentDirection
 1725 03d4 37000000 		.word	uTurnStartedFlag
 1726 03d8 3B000000 		.word	spinCourseCorrectionStarted
 1727 03dc 38000000 		.word	uTurnFinishedFlag
 1728 03e0 00000000 		.word	s5
 1729 03e4 00000000 		.word	s6
 1730              		.cfi_endproc
 1731              	.LFE75:
 1732              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1733              		.global	__aeabi_i2f
 1734              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1735              		.align	2
 1736              		.global	CalculateDistanceToTravel
 1737              		.thumb
 1738              		.thumb_func
 1739              		.type	CalculateDistanceToTravel, %function
 1740              	CalculateDistanceToTravel:
 1741              	.LFB76:
 525:main.c        **** 
 526:main.c        **** // Calculate total blocksize to travel until target
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 41


 527:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1742              		.loc 1 527 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 40
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0000 80B5     		push	{r7, lr}
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 8AB0     		sub	sp, sp, #40
 1751              		.cfi_def_cfa_offset 48
 1752 0004 00AF     		add	r7, sp, #0
 1753              		.cfi_def_cfa_register 7
 1754 0006 7860     		str	r0, [r7, #4]	@ float
 528:main.c        ****     float totalBlockSize;
 529:main.c        ****     
 530:main.c        ****     // Check for Row, Col that target is 
 531:main.c        ****     int targetRow = food_list[0][0];
 1755              		.loc 1 531 0
 1756 0008 9E4B     		ldr	r3, .L152
 1757 000a 1B68     		ldr	r3, [r3]
 1758 000c 3B61     		str	r3, [r7, #16]
 532:main.c        ****     int targetCol = food_list[0][1];
 1759              		.loc 1 532 0
 1760 000e 9D4B     		ldr	r3, .L152
 1761 0010 5B68     		ldr	r3, [r3, #4]
 1762 0012 FB60     		str	r3, [r7, #12]
 533:main.c        ****     
 534:main.c        ****     int pathCount = 0;
 1763              		.loc 1 534 0
 1764 0014 0023     		movs	r3, #0
 1765 0016 7B62     		str	r3, [r7, #36]
 535:main.c        ****     
 536:main.c        ****     // Depending on the robot orientation
 537:main.c        ****     // count++ if row, col is 8
 538:main.c        ****     // count reset if row, col is 1 or 0
 539:main.c        ****     // save count if row, col is 9
 540:main.c        ****     switch (currentRobotOrientation) {
 1766              		.loc 1 540 0
 1767 0018 9B4B     		ldr	r3, .L152+4
 1768 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 001c 032B     		cmp	r3, #3
 1770 001e 00F21F81 		bhi	.L108
 1771 0022 01A2     		adr	r2, .L110
 1772 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1773              		.p2align 2
 1774              	.L110:
 1775 0028 39000000 		.word	.L109+1
 1776 002c C3000000 		.word	.L111+1
 1777 0030 4D010000 		.word	.L112+1
 1778 0034 D7010000 		.word	.L113+1
 1779              		.p2align 1
 1780              	.L109:
 1781              	.LBB3:
 541:main.c        ****         case Up:
 542:main.c        ****             // Column
 543:main.c        ****             // Start from Bottom (since we're facing up)
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 42


 544:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1782              		.loc 1 544 0
 1783 0038 0F23     		movs	r3, #15
 1784 003a 3B62     		str	r3, [r7, #32]
 1785 003c 3BE0     		b	.L114
 1786              	.L120:
 545:main.c        ****                 if (map[i][targetCol] == 9) {
 1787              		.loc 1 545 0
 1788 003e 9349     		ldr	r1, .L152+8
 1789 0040 3A6A     		ldr	r2, [r7, #32]
 1790 0042 1346     		mov	r3, r2
 1791 0044 DB00     		lsls	r3, r3, #3
 1792 0046 1344     		add	r3, r3, r2
 1793 0048 5B00     		lsls	r3, r3, #1
 1794 004a 1344     		add	r3, r3, r2
 1795 004c FA68     		ldr	r2, [r7, #12]
 1796 004e 1344     		add	r3, r3, r2
 1797 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1798 0054 092B     		cmp	r3, #9
 1799 0056 32D0     		beq	.L147
 546:main.c        ****                     break;    
 547:main.c        ****                 }
 548:main.c        ****                 if (map[i][targetCol] == 8) {
 1800              		.loc 1 548 0
 1801 0058 8C49     		ldr	r1, .L152+8
 1802 005a 3A6A     		ldr	r2, [r7, #32]
 1803 005c 1346     		mov	r3, r2
 1804 005e DB00     		lsls	r3, r3, #3
 1805 0060 1344     		add	r3, r3, r2
 1806 0062 5B00     		lsls	r3, r3, #1
 1807 0064 1344     		add	r3, r3, r2
 1808 0066 FA68     		ldr	r2, [r7, #12]
 1809 0068 1344     		add	r3, r3, r2
 1810 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1811 006e 082B     		cmp	r3, #8
 1812 0070 02D1     		bne	.L117
 549:main.c        ****                     pathCount++;    
 1813              		.loc 1 549 0
 1814 0072 7B6A     		ldr	r3, [r7, #36]
 1815 0074 0133     		adds	r3, r3, #1
 1816 0076 7B62     		str	r3, [r7, #36]
 1817              	.L117:
 550:main.c        ****                 }
 551:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1818              		.loc 1 551 0
 1819 0078 8449     		ldr	r1, .L152+8
 1820 007a 3A6A     		ldr	r2, [r7, #32]
 1821 007c 1346     		mov	r3, r2
 1822 007e DB00     		lsls	r3, r3, #3
 1823 0080 1344     		add	r3, r3, r2
 1824 0082 5B00     		lsls	r3, r3, #1
 1825 0084 1344     		add	r3, r3, r2
 1826 0086 FA68     		ldr	r2, [r7, #12]
 1827 0088 1344     		add	r3, r3, r2
 1828 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1829 008e 002B     		cmp	r3, #0
 1830 0090 0CD0     		beq	.L118
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 43


 1831              		.loc 1 551 0 is_stmt 0 discriminator 1
 1832 0092 7E49     		ldr	r1, .L152+8
 1833 0094 3A6A     		ldr	r2, [r7, #32]
 1834 0096 1346     		mov	r3, r2
 1835 0098 DB00     		lsls	r3, r3, #3
 1836 009a 1344     		add	r3, r3, r2
 1837 009c 5B00     		lsls	r3, r3, #1
 1838 009e 1344     		add	r3, r3, r2
 1839 00a0 FA68     		ldr	r2, [r7, #12]
 1840 00a2 1344     		add	r3, r3, r2
 1841 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1842 00a8 012B     		cmp	r3, #1
 1843 00aa 01D1     		bne	.L119
 1844              	.L118:
 552:main.c        ****                     pathCount = 0;
 1845              		.loc 1 552 0 is_stmt 1
 1846 00ac 0023     		movs	r3, #0
 1847 00ae 7B62     		str	r3, [r7, #36]
 1848              	.L119:
 544:main.c        ****                 if (map[i][targetCol] == 9) {
 1849              		.loc 1 544 0 discriminator 2
 1850 00b0 3B6A     		ldr	r3, [r7, #32]
 1851 00b2 013B     		subs	r3, r3, #1
 1852 00b4 3B62     		str	r3, [r7, #32]
 1853              	.L114:
 544:main.c        ****                 if (map[i][targetCol] == 9) {
 1854              		.loc 1 544 0 is_stmt 0 discriminator 1
 1855 00b6 3B6A     		ldr	r3, [r7, #32]
 1856 00b8 002B     		cmp	r3, #0
 1857 00ba C0DA     		bge	.L120
 1858              	.LBE3:
 553:main.c        ****                 }
 554:main.c        ****             }
 555:main.c        ****             break;
 1859              		.loc 1 555 0 is_stmt 1
 1860 00bc D0E0     		b	.L108
 1861              	.L147:
 1862              	.LBB4:
 546:main.c        ****                 }
 1863              		.loc 1 546 0
 1864 00be 00BF     		nop
 1865              	.LBE4:
 1866              		.loc 1 555 0
 1867 00c0 CEE0     		b	.L108
 1868              	.L111:
 1869              	.LBB5:
 556:main.c        ****         case Down:
 557:main.c        ****             // Target Column, Check Row
 558:main.c        ****             // Start from Top
 559:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1870              		.loc 1 559 0
 1871 00c2 0023     		movs	r3, #0
 1872 00c4 FB61     		str	r3, [r7, #28]
 1873 00c6 3BE0     		b	.L121
 1874              	.L127:
 560:main.c        ****                 if (map[i][targetCol] == 9) {
 1875              		.loc 1 560 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 44


 1876 00c8 7049     		ldr	r1, .L152+8
 1877 00ca FA69     		ldr	r2, [r7, #28]
 1878 00cc 1346     		mov	r3, r2
 1879 00ce DB00     		lsls	r3, r3, #3
 1880 00d0 1344     		add	r3, r3, r2
 1881 00d2 5B00     		lsls	r3, r3, #1
 1882 00d4 1344     		add	r3, r3, r2
 1883 00d6 FA68     		ldr	r2, [r7, #12]
 1884 00d8 1344     		add	r3, r3, r2
 1885 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1886 00de 092B     		cmp	r3, #9
 1887 00e0 32D0     		beq	.L148
 561:main.c        ****                     break;    
 562:main.c        ****                 }
 563:main.c        ****                 if (map[i][targetCol] == 8) {
 1888              		.loc 1 563 0
 1889 00e2 6A49     		ldr	r1, .L152+8
 1890 00e4 FA69     		ldr	r2, [r7, #28]
 1891 00e6 1346     		mov	r3, r2
 1892 00e8 DB00     		lsls	r3, r3, #3
 1893 00ea 1344     		add	r3, r3, r2
 1894 00ec 5B00     		lsls	r3, r3, #1
 1895 00ee 1344     		add	r3, r3, r2
 1896 00f0 FA68     		ldr	r2, [r7, #12]
 1897 00f2 1344     		add	r3, r3, r2
 1898 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1899 00f8 082B     		cmp	r3, #8
 1900 00fa 02D1     		bne	.L124
 564:main.c        ****                     pathCount++;    
 1901              		.loc 1 564 0
 1902 00fc 7B6A     		ldr	r3, [r7, #36]
 1903 00fe 0133     		adds	r3, r3, #1
 1904 0100 7B62     		str	r3, [r7, #36]
 1905              	.L124:
 565:main.c        ****                 }
 566:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1906              		.loc 1 566 0
 1907 0102 6249     		ldr	r1, .L152+8
 1908 0104 FA69     		ldr	r2, [r7, #28]
 1909 0106 1346     		mov	r3, r2
 1910 0108 DB00     		lsls	r3, r3, #3
 1911 010a 1344     		add	r3, r3, r2
 1912 010c 5B00     		lsls	r3, r3, #1
 1913 010e 1344     		add	r3, r3, r2
 1914 0110 FA68     		ldr	r2, [r7, #12]
 1915 0112 1344     		add	r3, r3, r2
 1916 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1917 0118 002B     		cmp	r3, #0
 1918 011a 0CD0     		beq	.L125
 1919              		.loc 1 566 0 is_stmt 0 discriminator 1
 1920 011c 5B49     		ldr	r1, .L152+8
 1921 011e FA69     		ldr	r2, [r7, #28]
 1922 0120 1346     		mov	r3, r2
 1923 0122 DB00     		lsls	r3, r3, #3
 1924 0124 1344     		add	r3, r3, r2
 1925 0126 5B00     		lsls	r3, r3, #1
 1926 0128 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 45


 1927 012a FA68     		ldr	r2, [r7, #12]
 1928 012c 1344     		add	r3, r3, r2
 1929 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1930 0132 012B     		cmp	r3, #1
 1931 0134 01D1     		bne	.L126
 1932              	.L125:
 567:main.c        ****                     pathCount = 0;
 1933              		.loc 1 567 0 is_stmt 1
 1934 0136 0023     		movs	r3, #0
 1935 0138 7B62     		str	r3, [r7, #36]
 1936              	.L126:
 559:main.c        ****                 if (map[i][targetCol] == 9) {
 1937              		.loc 1 559 0 discriminator 2
 1938 013a FB69     		ldr	r3, [r7, #28]
 1939 013c 0133     		adds	r3, r3, #1
 1940 013e FB61     		str	r3, [r7, #28]
 1941              	.L121:
 559:main.c        ****                 if (map[i][targetCol] == 9) {
 1942              		.loc 1 559 0 is_stmt 0 discriminator 1
 1943 0140 FB69     		ldr	r3, [r7, #28]
 1944 0142 0E2B     		cmp	r3, #14
 1945 0144 C0DD     		ble	.L127
 1946              	.LBE5:
 568:main.c        ****                 }
 569:main.c        ****             }
 570:main.c        ****             break;
 1947              		.loc 1 570 0 is_stmt 1
 1948 0146 8BE0     		b	.L108
 1949              	.L148:
 1950              	.LBB6:
 561:main.c        ****                 }
 1951              		.loc 1 561 0
 1952 0148 00BF     		nop
 1953              	.LBE6:
 1954              		.loc 1 570 0
 1955 014a 89E0     		b	.L108
 1956              	.L112:
 1957              	.LBB7:
 571:main.c        ****         case Left:
 572:main.c        ****             // Target Row, Check Col
 573:main.c        ****             // Start from Right
 574:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1958              		.loc 1 574 0
 1959 014c 1323     		movs	r3, #19
 1960 014e BB61     		str	r3, [r7, #24]
 1961 0150 3BE0     		b	.L128
 1962              	.L134:
 575:main.c        ****                 if (map[targetRow][i] == 9) {
 1963              		.loc 1 575 0
 1964 0152 4E49     		ldr	r1, .L152+8
 1965 0154 3A69     		ldr	r2, [r7, #16]
 1966 0156 1346     		mov	r3, r2
 1967 0158 DB00     		lsls	r3, r3, #3
 1968 015a 1344     		add	r3, r3, r2
 1969 015c 5B00     		lsls	r3, r3, #1
 1970 015e 1344     		add	r3, r3, r2
 1971 0160 BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 46


 1972 0162 1344     		add	r3, r3, r2
 1973 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1974 0168 092B     		cmp	r3, #9
 1975 016a 32D0     		beq	.L149
 576:main.c        ****                     break;    
 577:main.c        ****                 }
 578:main.c        ****                 if (map[targetRow][i] == 8) {
 1976              		.loc 1 578 0
 1977 016c 4749     		ldr	r1, .L152+8
 1978 016e 3A69     		ldr	r2, [r7, #16]
 1979 0170 1346     		mov	r3, r2
 1980 0172 DB00     		lsls	r3, r3, #3
 1981 0174 1344     		add	r3, r3, r2
 1982 0176 5B00     		lsls	r3, r3, #1
 1983 0178 1344     		add	r3, r3, r2
 1984 017a BA69     		ldr	r2, [r7, #24]
 1985 017c 1344     		add	r3, r3, r2
 1986 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1987 0182 082B     		cmp	r3, #8
 1988 0184 02D1     		bne	.L131
 579:main.c        ****                     pathCount++;    
 1989              		.loc 1 579 0
 1990 0186 7B6A     		ldr	r3, [r7, #36]
 1991 0188 0133     		adds	r3, r3, #1
 1992 018a 7B62     		str	r3, [r7, #36]
 1993              	.L131:
 580:main.c        ****                 }
 581:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1994              		.loc 1 581 0
 1995 018c 3F49     		ldr	r1, .L152+8
 1996 018e 3A69     		ldr	r2, [r7, #16]
 1997 0190 1346     		mov	r3, r2
 1998 0192 DB00     		lsls	r3, r3, #3
 1999 0194 1344     		add	r3, r3, r2
 2000 0196 5B00     		lsls	r3, r3, #1
 2001 0198 1344     		add	r3, r3, r2
 2002 019a BA69     		ldr	r2, [r7, #24]
 2003 019c 1344     		add	r3, r3, r2
 2004 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2005 01a2 002B     		cmp	r3, #0
 2006 01a4 0CD0     		beq	.L132
 2007              		.loc 1 581 0 is_stmt 0 discriminator 1
 2008 01a6 3949     		ldr	r1, .L152+8
 2009 01a8 BA69     		ldr	r2, [r7, #24]
 2010 01aa 1346     		mov	r3, r2
 2011 01ac DB00     		lsls	r3, r3, #3
 2012 01ae 1344     		add	r3, r3, r2
 2013 01b0 5B00     		lsls	r3, r3, #1
 2014 01b2 1344     		add	r3, r3, r2
 2015 01b4 FA68     		ldr	r2, [r7, #12]
 2016 01b6 1344     		add	r3, r3, r2
 2017 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2018 01bc 012B     		cmp	r3, #1
 2019 01be 01D1     		bne	.L133
 2020              	.L132:
 582:main.c        ****                     pathCount = 0;
 2021              		.loc 1 582 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 47


 2022 01c0 0023     		movs	r3, #0
 2023 01c2 7B62     		str	r3, [r7, #36]
 2024              	.L133:
 574:main.c        ****                 if (map[targetRow][i] == 9) {
 2025              		.loc 1 574 0 discriminator 2
 2026 01c4 BB69     		ldr	r3, [r7, #24]
 2027 01c6 013B     		subs	r3, r3, #1
 2028 01c8 BB61     		str	r3, [r7, #24]
 2029              	.L128:
 574:main.c        ****                 if (map[targetRow][i] == 9) {
 2030              		.loc 1 574 0 is_stmt 0 discriminator 1
 2031 01ca BB69     		ldr	r3, [r7, #24]
 2032 01cc 002B     		cmp	r3, #0
 2033 01ce C0DA     		bge	.L134
 2034              	.LBE7:
 583:main.c        ****                 }
 584:main.c        ****             }
 585:main.c        ****             break;
 2035              		.loc 1 585 0 is_stmt 1
 2036 01d0 46E0     		b	.L108
 2037              	.L149:
 2038              	.LBB8:
 576:main.c        ****                 }
 2039              		.loc 1 576 0
 2040 01d2 00BF     		nop
 2041              	.LBE8:
 2042              		.loc 1 585 0
 2043 01d4 44E0     		b	.L108
 2044              	.L113:
 2045              	.LBB9:
 586:main.c        ****         
 587:main.c        ****         case Right:
 588:main.c        ****             // Target Row, Check Col
 589:main.c        ****             // Start from Left
 590:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 2046              		.loc 1 590 0
 2047 01d6 0023     		movs	r3, #0
 2048 01d8 7B61     		str	r3, [r7, #20]
 2049 01da 3BE0     		b	.L135
 2050              	.L141:
 591:main.c        ****                 if (map[targetRow][i] == 9) {
 2051              		.loc 1 591 0
 2052 01dc 2B49     		ldr	r1, .L152+8
 2053 01de 3A69     		ldr	r2, [r7, #16]
 2054 01e0 1346     		mov	r3, r2
 2055 01e2 DB00     		lsls	r3, r3, #3
 2056 01e4 1344     		add	r3, r3, r2
 2057 01e6 5B00     		lsls	r3, r3, #1
 2058 01e8 1344     		add	r3, r3, r2
 2059 01ea 7A69     		ldr	r2, [r7, #20]
 2060 01ec 1344     		add	r3, r3, r2
 2061 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2062 01f2 092B     		cmp	r3, #9
 2063 01f4 32D0     		beq	.L150
 592:main.c        ****                     break;    
 593:main.c        ****                 }
 594:main.c        ****                 if (map[targetRow][i] == 8) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 48


 2064              		.loc 1 594 0
 2065 01f6 2549     		ldr	r1, .L152+8
 2066 01f8 3A69     		ldr	r2, [r7, #16]
 2067 01fa 1346     		mov	r3, r2
 2068 01fc DB00     		lsls	r3, r3, #3
 2069 01fe 1344     		add	r3, r3, r2
 2070 0200 5B00     		lsls	r3, r3, #1
 2071 0202 1344     		add	r3, r3, r2
 2072 0204 7A69     		ldr	r2, [r7, #20]
 2073 0206 1344     		add	r3, r3, r2
 2074 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2075 020c 082B     		cmp	r3, #8
 2076 020e 02D1     		bne	.L138
 595:main.c        ****                     pathCount++;    
 2077              		.loc 1 595 0
 2078 0210 7B6A     		ldr	r3, [r7, #36]
 2079 0212 0133     		adds	r3, r3, #1
 2080 0214 7B62     		str	r3, [r7, #36]
 2081              	.L138:
 596:main.c        ****                 }
 597:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2082              		.loc 1 597 0
 2083 0216 1D49     		ldr	r1, .L152+8
 2084 0218 3A69     		ldr	r2, [r7, #16]
 2085 021a 1346     		mov	r3, r2
 2086 021c DB00     		lsls	r3, r3, #3
 2087 021e 1344     		add	r3, r3, r2
 2088 0220 5B00     		lsls	r3, r3, #1
 2089 0222 1344     		add	r3, r3, r2
 2090 0224 7A69     		ldr	r2, [r7, #20]
 2091 0226 1344     		add	r3, r3, r2
 2092 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2093 022c 002B     		cmp	r3, #0
 2094 022e 0CD0     		beq	.L139
 2095              		.loc 1 597 0 is_stmt 0 discriminator 1
 2096 0230 1649     		ldr	r1, .L152+8
 2097 0232 7A69     		ldr	r2, [r7, #20]
 2098 0234 1346     		mov	r3, r2
 2099 0236 DB00     		lsls	r3, r3, #3
 2100 0238 1344     		add	r3, r3, r2
 2101 023a 5B00     		lsls	r3, r3, #1
 2102 023c 1344     		add	r3, r3, r2
 2103 023e FA68     		ldr	r2, [r7, #12]
 2104 0240 1344     		add	r3, r3, r2
 2105 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2106 0246 012B     		cmp	r3, #1
 2107 0248 01D1     		bne	.L140
 2108              	.L139:
 598:main.c        ****                     pathCount = 0;
 2109              		.loc 1 598 0 is_stmt 1
 2110 024a 0023     		movs	r3, #0
 2111 024c 7B62     		str	r3, [r7, #36]
 2112              	.L140:
 590:main.c        ****                 if (map[targetRow][i] == 9) {
 2113              		.loc 1 590 0 discriminator 2
 2114 024e 7B69     		ldr	r3, [r7, #20]
 2115 0250 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 49


 2116 0252 7B61     		str	r3, [r7, #20]
 2117              	.L135:
 590:main.c        ****                 if (map[targetRow][i] == 9) {
 2118              		.loc 1 590 0 is_stmt 0 discriminator 1
 2119 0254 7B69     		ldr	r3, [r7, #20]
 2120 0256 122B     		cmp	r3, #18
 2121 0258 C0DD     		ble	.L141
 2122              	.LBE9:
 599:main.c        ****                 }
 600:main.c        **** 
 601:main.c        ****             }
 602:main.c        ****             break;
 2123              		.loc 1 602 0 is_stmt 1
 2124 025a 00E0     		b	.L151
 2125              	.L150:
 2126              	.LBB10:
 592:main.c        ****                 }
 2127              		.loc 1 592 0
 2128 025c 00BF     		nop
 2129              	.L151:
 2130              	.LBE10:
 2131              		.loc 1 602 0
 2132 025e 00BF     		nop
 2133              	.L108:
 603:main.c        ****     }
 604:main.c        ****     totalBlockSize = blockSize * pathCount;
 2134              		.loc 1 604 0
 2135 0260 786A     		ldr	r0, [r7, #36]
 2136 0262 FFF7FEFF 		bl	__aeabi_i2f
 2137 0266 0346     		mov	r3, r0
 2138 0268 7968     		ldr	r1, [r7, #4]	@ float
 2139 026a 1846     		mov	r0, r3
 2140 026c FFF7FEFF 		bl	__aeabi_fmul
 2141 0270 0346     		mov	r3, r0
 2142 0272 BB60     		str	r3, [r7, #8]	@ float
 605:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 2143              		.loc 1 605 0
 2144 0274 0548     		ldr	r0, .L152+8
 2145 0276 FFF7FEFF 		bl	clearMap
 606:main.c        ****     return totalBlockSize;
 2146              		.loc 1 606 0
 2147 027a BB68     		ldr	r3, [r7, #8]	@ float
 607:main.c        **** }
 2148              		.loc 1 607 0
 2149 027c 1846     		mov	r0, r3
 2150 027e 2837     		adds	r7, r7, #40
 2151              		.cfi_def_cfa_offset 8
 2152 0280 BD46     		mov	sp, r7
 2153              		.cfi_def_cfa_register 13
 2154              		@ sp needed
 2155 0282 80BD     		pop	{r7, pc}
 2156              	.L153:
 2157              		.align	2
 2158              	.L152:
 2159 0284 00000000 		.word	food_list
 2160 0288 00000000 		.word	currentRobotOrientation
 2161 028c 00000000 		.word	map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 50


 2162              		.cfi_endproc
 2163              	.LFE76:
 2164              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 2165              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2166              		.align	2
 2167              		.global	MoveToNextInstruction
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	MoveToNextInstruction, %function
 2171              	MoveToNextInstruction:
 2172              	.LFB77:
 608:main.c        **** 
 609:main.c        **** // get next instruction
 610:main.c        **** void MoveToNextInstruction() {
 2173              		.loc 1 610 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178 0000 80B4     		push	{r7}
 2179              		.cfi_def_cfa_offset 4
 2180              		.cfi_offset 7, -4
 2181 0002 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
 611:main.c        ****     currentIgnoreL = 0;
 2183              		.loc 1 611 0
 2184 0004 114B     		ldr	r3, .L155
 2185 0006 0022     		movs	r2, #0
 2186 0008 1A70     		strb	r2, [r3]
 612:main.c        ****     currentIgnoreR = 0;
 2187              		.loc 1 612 0
 2188 000a 114B     		ldr	r3, .L155+4
 2189 000c 0022     		movs	r2, #0
 2190 000e 1A70     		strb	r2, [r3]
 613:main.c        ****     instructionIndex++;
 2191              		.loc 1 613 0
 2192 0010 104B     		ldr	r3, .L155+8
 2193 0012 1B68     		ldr	r3, [r3]
 2194 0014 0133     		adds	r3, r3, #1
 2195 0016 0F4A     		ldr	r2, .L155+8
 2196 0018 1360     		str	r3, [r2]
 614:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2197              		.loc 1 614 0
 2198 001a 0F4B     		ldr	r3, .L155+12
 2199 001c 1A68     		ldr	r2, [r3]
 2200 001e 0D4B     		ldr	r3, .L155+8
 2201 0020 1B68     		ldr	r3, [r3]
 2202 0022 1B01     		lsls	r3, r3, #4
 2203 0024 1344     		add	r3, r3, r2
 2204 0026 5B68     		ldr	r3, [r3, #4]
 2205 0028 DAB2     		uxtb	r2, r3
 2206 002a 084B     		ldr	r3, .L155
 2207 002c 1A70     		strb	r2, [r3]
 615:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2208              		.loc 1 615 0
 2209 002e 0A4B     		ldr	r3, .L155+12
 2210 0030 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 51


 2211 0032 084B     		ldr	r3, .L155+8
 2212 0034 1B68     		ldr	r3, [r3]
 2213 0036 1B01     		lsls	r3, r3, #4
 2214 0038 1344     		add	r3, r3, r2
 2215 003a 9B68     		ldr	r3, [r3, #8]
 2216 003c DAB2     		uxtb	r2, r3
 2217 003e 044B     		ldr	r3, .L155+4
 2218 0040 1A70     		strb	r2, [r3]
 616:main.c        **** }
 2219              		.loc 1 616 0
 2220 0042 00BF     		nop
 2221 0044 BD46     		mov	sp, r7
 2222              		.cfi_def_cfa_register 13
 2223              		@ sp needed
 2224 0046 80BC     		pop	{r7}
 2225              		.cfi_restore 7
 2226              		.cfi_def_cfa_offset 0
 2227 0048 7047     		bx	lr
 2228              	.L156:
 2229 004a 00BF     		.align	2
 2230              	.L155:
 2231 004c 3C000000 		.word	currentIgnoreL
 2232 0050 3D000000 		.word	currentIgnoreR
 2233 0054 14000000 		.word	instructionIndex
 2234 0058 00000000 		.word	instructionList
 2235              		.cfi_endproc
 2236              	.LFE77:
 2237              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2238              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2239              		.align	2
 2240              		.global	GetInstructionAtIndex
 2241              		.thumb
 2242              		.thumb_func
 2243              		.type	GetInstructionAtIndex, %function
 2244              	GetInstructionAtIndex:
 2245              	.LFB78:
 617:main.c        **** 
 618:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]) {
 2246              		.loc 1 618 0
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 40
 2249              		@ frame_needed = 1, uses_anonymous_args = 0
 2250              		@ link register save eliminated.
 2251 0000 90B4     		push	{r4, r7}
 2252              		.cfi_def_cfa_offset 8
 2253              		.cfi_offset 4, -8
 2254              		.cfi_offset 7, -4
 2255 0002 8AB0     		sub	sp, sp, #40
 2256              		.cfi_def_cfa_offset 48
 2257 0004 00AF     		add	r7, sp, #0
 2258              		.cfi_def_cfa_register 7
 2259 0006 F860     		str	r0, [r7, #12]
 2260 0008 B960     		str	r1, [r7, #8]
 2261 000a 7A60     		str	r2, [r7, #4]
 2262              	.LBB11:
 619:main.c        ****     Instruction nextInstruction;
 620:main.c        ****     // input is list of instructions and robot will react accordingly
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 52


 621:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 2263              		.loc 1 621 0
 2264 000c 1A4B     		ldr	r3, .L163
 2265 000e 1B68     		ldr	r3, [r3]
 2266 0010 7B62     		str	r3, [r7, #36]
 2267 0012 21E0     		b	.L158
 2268              	.L161:
 622:main.c        ****         if(instructionList[i].direction != Skip) {
 2269              		.loc 1 622 0
 2270 0014 7B6A     		ldr	r3, [r7, #36]
 2271 0016 1B01     		lsls	r3, r3, #4
 2272 0018 7A68     		ldr	r2, [r7, #4]
 2273 001a 1344     		add	r3, r3, r2
 2274 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2275 001e 062B     		cmp	r3, #6
 2276 0020 17D0     		beq	.L159
 623:main.c        ****             nextInstruction.direction = instructionList[i].direction;        
 2277              		.loc 1 623 0
 2278 0022 7B6A     		ldr	r3, [r7, #36]
 2279 0024 1B01     		lsls	r3, r3, #4
 2280 0026 7A68     		ldr	r2, [r7, #4]
 2281 0028 1344     		add	r3, r3, r2
 2282 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 002c 3B75     		strb	r3, [r7, #20]
 624:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 2284              		.loc 1 624 0
 2285 002e 7B6A     		ldr	r3, [r7, #36]
 2286 0030 1B01     		lsls	r3, r3, #4
 2287 0032 7A68     		ldr	r2, [r7, #4]
 2288 0034 1344     		add	r3, r3, r2
 2289 0036 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2290 0038 87F82030 		strb	r3, [r7, #32]
 625:main.c        ****             instructionIndex = i;
 2291              		.loc 1 625 0
 2292 003c 7B6A     		ldr	r3, [r7, #36]
 2293 003e 0E4A     		ldr	r2, .L163
 2294 0040 1360     		str	r3, [r2]
 626:main.c        ****             return nextInstruction; // return next instruction
 2295              		.loc 1 626 0
 2296 0042 FB68     		ldr	r3, [r7, #12]
 2297 0044 1C46     		mov	r4, r3
 2298 0046 07F11403 		add	r3, r7, #20
 2299 004a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2300 004c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2301 0050 0DE0     		b	.L157
 2302              	.L159:
 621:main.c        ****         if(instructionList[i].direction != Skip) {
 2303              		.loc 1 621 0 discriminator 2
 2304 0052 7B6A     		ldr	r3, [r7, #36]
 2305 0054 0133     		adds	r3, r3, #1
 2306 0056 7B62     		str	r3, [r7, #36]
 2307              	.L158:
 621:main.c        ****         if(instructionList[i].direction != Skip) {
 2308              		.loc 1 621 0 is_stmt 0 discriminator 1
 2309 0058 7A6A     		ldr	r2, [r7, #36]
 2310 005a BB68     		ldr	r3, [r7, #8]
 2311 005c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 53


 2312 005e D9DB     		blt	.L161
 2313              	.LBE11:
 627:main.c        ****         }
 628:main.c        ****     }
 629:main.c        ****     return nextInstruction;
 2314              		.loc 1 629 0 is_stmt 1
 2315 0060 FB68     		ldr	r3, [r7, #12]
 2316 0062 1C46     		mov	r4, r3
 2317 0064 07F11403 		add	r3, r7, #20
 2318 0068 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2319 006a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2320              	.L157:
 630:main.c        **** }
 2321              		.loc 1 630 0
 2322 006e F868     		ldr	r0, [r7, #12]
 2323 0070 2837     		adds	r7, r7, #40
 2324              		.cfi_def_cfa_offset 8
 2325 0072 BD46     		mov	sp, r7
 2326              		.cfi_def_cfa_register 13
 2327              		@ sp needed
 2328 0074 90BC     		pop	{r4, r7}
 2329              		.cfi_restore 7
 2330              		.cfi_restore 4
 2331              		.cfi_def_cfa_offset 0
 2332 0076 7047     		bx	lr
 2333              	.L164:
 2334              		.align	2
 2335              	.L163:
 2336 0078 14000000 		.word	instructionIndex
 2337              		.cfi_endproc
 2338              	.LFE78:
 2339              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2340              		.section	.text.SetRobotMovement,"ax",%progbits
 2341              		.align	2
 2342              		.global	SetRobotMovement
 2343              		.thumb
 2344              		.thumb_func
 2345              		.type	SetRobotMovement, %function
 2346              	SetRobotMovement:
 2347              	.LFB79:
 631:main.c        **** 
 632:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 633:main.c        **** void SetRobotMovement() {
 2348              		.loc 1 633 0
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 16
 2351              		@ frame_needed = 1, uses_anonymous_args = 0
 2352 0000 90B5     		push	{r4, r7, lr}
 2353              		.cfi_def_cfa_offset 12
 2354              		.cfi_offset 4, -12
 2355              		.cfi_offset 7, -8
 2356              		.cfi_offset 14, -4
 2357 0002 85B0     		sub	sp, sp, #20
 2358              		.cfi_def_cfa_offset 32
 2359 0004 00AF     		add	r7, sp, #0
 2360              		.cfi_def_cfa_register 7
 634:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList); // get current/ next ins
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 54


 2361              		.loc 1 634 0
 2362 0006 2A4B     		ldr	r3, .L181
 2363 0008 1968     		ldr	r1, [r3]
 2364 000a 2A4B     		ldr	r3, .L181+4
 2365 000c 1A68     		ldr	r2, [r3]
 2366 000e 2A4C     		ldr	r4, .L181+8
 2367 0010 3B46     		mov	r3, r7
 2368 0012 1846     		mov	r0, r3
 2369 0014 FFF7FEFF 		bl	GetInstructionAtIndex
 2370 0018 3B46     		mov	r3, r7
 2371 001a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2372 001c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 635:main.c        ****     previousDirection = currentDirection;
 2373              		.loc 1 635 0
 2374 0020 264B     		ldr	r3, .L181+12
 2375 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2376 0024 264B     		ldr	r3, .L181+16
 2377 0026 1A70     		strb	r2, [r3]
 636:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2378              		.loc 1 636 0
 2379 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2380 002c 0346     		mov	r3, r0
 2381 002e 1A46     		mov	r2, r3
 2382 0030 224B     		ldr	r3, .L181+12
 2383 0032 1A70     		strb	r2, [r3]
 637:main.c        ****     // move robot depending on sensors
 638:main.c        ****     switch (currentDirection) {
 2384              		.loc 1 638 0
 2385 0034 214B     		ldr	r3, .L181+12
 2386 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 0038 0A2B     		cmp	r3, #10
 2388 003a 35D8     		bhi	.L179
 2389 003c 01A2     		adr	r2, .L168
 2390 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2391 0042 00BF     		.p2align 2
 2392              	.L168:
 2393 0044 71000000 		.word	.L167+1
 2394 0048 77000000 		.word	.L169+1
 2395 004c 7D000000 		.word	.L170+1
 2396 0050 89000000 		.word	.L171+1
 2397 0054 83000000 		.word	.L172+1
 2398 0058 8F000000 		.word	.L173+1
 2399 005c A7000000 		.word	.L180+1
 2400 0060 A7000000 		.word	.L180+1
 2401 0064 95000000 		.word	.L176+1
 2402 0068 9B000000 		.word	.L177+1
 2403 006c A1000000 		.word	.L178+1
 2404              		.p2align 1
 2405              	.L167:
 639:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 640:main.c        ****         case Forward:
 641:main.c        ****             moveForward();
 2406              		.loc 1 641 0
 2407 0070 FFF7FEFF 		bl	moveForward
 642:main.c        ****             break;
 2408              		.loc 1 642 0
 2409 0074 18E0     		b	.L166
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 55


 2410              	.L169:
 643:main.c        ****         case TurnRight:
 644:main.c        ****             turnRight();
 2411              		.loc 1 644 0
 2412 0076 FFF7FEFF 		bl	turnRight
 645:main.c        ****             break;
 2413              		.loc 1 645 0
 2414 007a 15E0     		b	.L166
 2415              	.L170:
 646:main.c        ****         case TurnLeft:
 647:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2416              		.loc 1 647 0
 2417 007c FFF7FEFF 		bl	turnLeft
 648:main.c        ****             break;
 2418              		.loc 1 648 0
 2419 0080 12E0     		b	.L166
 2420              	.L172:
 649:main.c        ****         case AdjustToTheRight:
 650:main.c        ****             adjustRight();
 2421              		.loc 1 650 0
 2422 0082 FFF7FEFF 		bl	adjustRight
 651:main.c        ****             break;
 2423              		.loc 1 651 0
 2424 0086 0FE0     		b	.L166
 2425              	.L171:
 652:main.c        ****         case AdjustToTheLeft:
 653:main.c        ****             adjustLeft();
 2426              		.loc 1 653 0
 2427 0088 FFF7FEFF 		bl	adjustLeft
 654:main.c        ****             break;
 2428              		.loc 1 654 0
 2429 008c 0CE0     		b	.L166
 2430              	.L173:
 655:main.c        ****         case Stop:
 656:main.c        ****             stopMoving();
 2431              		.loc 1 656 0
 2432 008e FFF7FEFF 		bl	stopMoving
 657:main.c        ****             break;
 2433              		.loc 1 657 0
 2434 0092 09E0     		b	.L166
 2435              	.L176:
 658:main.c        ****         case ForwardAfterTurn:
 659:main.c        ****             moveForward();
 2436              		.loc 1 659 0
 2437 0094 FFF7FEFF 		bl	moveForward
 660:main.c        ****             break;
 2438              		.loc 1 660 0
 2439 0098 06E0     		b	.L166
 2440              	.L177:
 661:main.c        ****         case Backward:
 662:main.c        ****             moveBackward();
 2441              		.loc 1 662 0
 2442 009a FFF7FEFF 		bl	moveBackward
 663:main.c        ****             break;
 2443              		.loc 1 663 0
 2444 009e 03E0     		b	.L166
 2445              	.L178:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 56


 664:main.c        ****         case waitForTurn:
 665:main.c        ****             break;
 666:main.c        ****         case Spin180:
 667:main.c        ****             RotateClockwise180Degrees();
 2446              		.loc 1 667 0
 2447 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 668:main.c        ****             break;
 2448              		.loc 1 668 0
 2449 00a4 00E0     		b	.L166
 2450              	.L180:
 669:main.c        ****         /*case waitForLeftTurn:
 670:main.c        ****             moveForward();
 671:main.c        ****             break;
 672:main.c        ****         case waitForRightTurn:
 673:main.c        ****             moveForward();
 674:main.c        ****             break;*/
 675:main.c        ****         case Unknown:
 676:main.c        ****             // UNKNOWN CONFIGURATION
 677:main.c        ****             break;  
 2451              		.loc 1 677 0
 2452 00a6 00BF     		nop
 2453              	.L166:
 2454              	.L179:
 678:main.c        ****     }
 679:main.c        **** }...
 2455              		.loc 1 679 0
 2456 00a8 00BF     		nop
 2457 00aa 1437     		adds	r7, r7, #20
 2458              		.cfi_def_cfa_offset 12
 2459 00ac BD46     		mov	sp, r7
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 00ae 90BD     		pop	{r4, r7, pc}
 2463              	.L182:
 2464              		.align	2
 2465              	.L181:
 2466 00b0 00000000 		.word	numSteps
 2467 00b4 00000000 		.word	instructionList
 2468 00b8 00000000 		.word	currentInstruction
 2469 00bc 00000000 		.word	currentDirection
 2470 00c0 00000000 		.word	previousDirection
 2471              		.cfi_endproc
 2472              	.LFE79:
 2473              		.size	SetRobotMovement, .-SetRobotMovement
 2474              		.text
 2475              	.Letext0:
 2476              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2477              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2478              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2479              		.file 5 "vars.h"
 2480              		.file 6 "pathfinding.h"
 2481              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2482              		.file 8 "map.h"
 2483              		.section	.debug_info,"",%progbits
 2484              	.Ldebug_info0:
 2485 0000 AC090000 		.4byte	0x9ac
 2486 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 57


 2487 0006 00000000 		.4byte	.Ldebug_abbrev0
 2488 000a 04       		.byte	0x4
 2489 000b 01       		.uleb128 0x1
 2490 000c A2000000 		.4byte	.LASF148
 2491 0010 0C       		.byte	0xc
 2492 0011 30000000 		.4byte	.LASF149
 2493 0015 7B030000 		.4byte	.LASF150
 2494 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2495 001d 00000000 		.4byte	0
 2496 0021 00000000 		.4byte	.Ldebug_line0
 2497 0025 02       		.uleb128 0x2
 2498 0026 01       		.byte	0x1
 2499 0027 06       		.byte	0x6
 2500 0028 93070000 		.4byte	.LASF0
 2501 002c 02       		.uleb128 0x2
 2502 002d 01       		.byte	0x1
 2503 002e 08       		.byte	0x8
 2504 002f CB060000 		.4byte	.LASF1
 2505 0033 02       		.uleb128 0x2
 2506 0034 02       		.byte	0x2
 2507 0035 05       		.byte	0x5
 2508 0036 A2050000 		.4byte	.LASF2
 2509 003a 02       		.uleb128 0x2
 2510 003b 02       		.byte	0x2
 2511 003c 07       		.byte	0x7
 2512 003d AA070000 		.4byte	.LASF3
 2513 0041 03       		.uleb128 0x3
 2514 0042 75000000 		.4byte	.LASF12
 2515 0046 02       		.byte	0x2
 2516 0047 3F       		.byte	0x3f
 2517 0048 4C000000 		.4byte	0x4c
 2518 004c 02       		.uleb128 0x2
 2519 004d 04       		.byte	0x4
 2520 004e 05       		.byte	0x5
 2521 004f B8050000 		.4byte	.LASF4
 2522 0053 02       		.uleb128 0x2
 2523 0054 04       		.byte	0x4
 2524 0055 07       		.byte	0x7
 2525 0056 75060000 		.4byte	.LASF5
 2526 005a 02       		.uleb128 0x2
 2527 005b 08       		.byte	0x8
 2528 005c 05       		.byte	0x5
 2529 005d 5C040000 		.4byte	.LASF6
 2530 0061 02       		.uleb128 0x2
 2531 0062 08       		.byte	0x8
 2532 0063 07       		.byte	0x7
 2533 0064 9B020000 		.4byte	.LASF7
 2534 0068 04       		.uleb128 0x4
 2535 0069 04       		.byte	0x4
 2536 006a 05       		.byte	0x5
 2537 006b 696E7400 		.ascii	"int\000"
 2538 006f 02       		.uleb128 0x2
 2539 0070 04       		.byte	0x4
 2540 0071 07       		.byte	0x7
 2541 0072 68000000 		.4byte	.LASF8
 2542 0076 02       		.uleb128 0x2
 2543 0077 08       		.byte	0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 58


 2544 0078 04       		.byte	0x4
 2545 0079 66050000 		.4byte	.LASF9
 2546 007d 02       		.uleb128 0x2
 2547 007e 04       		.byte	0x4
 2548 007f 07       		.byte	0x7
 2549 0080 6C060000 		.4byte	.LASF10
 2550 0084 02       		.uleb128 0x2
 2551 0085 01       		.byte	0x1
 2552 0086 08       		.byte	0x8
 2553 0087 76030000 		.4byte	.LASF11
 2554 008b 03       		.uleb128 0x3
 2555 008c A4060000 		.4byte	.LASF13
 2556 0090 03       		.byte	0x3
 2557 0091 2C       		.byte	0x2c
 2558 0092 41000000 		.4byte	0x41
 2559 0096 05       		.uleb128 0x5
 2560 0097 00080000 		.4byte	.LASF14
 2561 009b 04       		.byte	0x4
 2562 009c E701     		.2byte	0x1e7
 2563 009e 2C000000 		.4byte	0x2c
 2564 00a2 05       		.uleb128 0x5
 2565 00a3 F6030000 		.4byte	.LASF15
 2566 00a7 04       		.byte	0x4
 2567 00a8 E801     		.2byte	0x1e8
 2568 00aa 3A000000 		.4byte	0x3a
 2569 00ae 05       		.uleb128 0x5
 2570 00af 0E050000 		.4byte	.LASF16
 2571 00b3 04       		.byte	0x4
 2572 00b4 E901     		.2byte	0x1e9
 2573 00b6 53000000 		.4byte	0x53
 2574 00ba 05       		.uleb128 0x5
 2575 00bb FD030000 		.4byte	.LASF17
 2576 00bf 04       		.byte	0x4
 2577 00c0 EA01     		.2byte	0x1ea
 2578 00c2 25000000 		.4byte	0x25
 2579 00c6 05       		.uleb128 0x5
 2580 00c7 7F000000 		.4byte	.LASF18
 2581 00cb 04       		.byte	0x4
 2582 00cc EB01     		.2byte	0x1eb
 2583 00ce 33000000 		.4byte	0x33
 2584 00d2 02       		.uleb128 0x2
 2585 00d3 04       		.byte	0x4
 2586 00d4 04       		.byte	0x4
 2587 00d5 63020000 		.4byte	.LASF19
 2588 00d9 02       		.uleb128 0x2
 2589 00da 08       		.byte	0x8
 2590 00db 04       		.byte	0x4
 2591 00dc 06080000 		.4byte	.LASF20
 2592 00e0 06       		.uleb128 0x6
 2593 00e1 96000000 		.4byte	0x96
 2594 00e5 06       		.uleb128 0x6
 2595 00e6 AE000000 		.4byte	0xae
 2596 00ea 07       		.uleb128 0x7
 2597 00eb 96000000 		.4byte	0x96
 2598 00ef FA000000 		.4byte	0xfa
 2599 00f3 08       		.uleb128 0x8
 2600 00f4 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 59


 2601 00f8 03       		.byte	0x3
 2602 00f9 00       		.byte	0
 2603 00fa 09       		.uleb128 0x9
 2604 00fb 30050000 		.4byte	.LASF50
 2605 00ff 20       		.byte	0x20
 2606 0100 05       		.byte	0x5
 2607 0101 28       		.byte	0x28
 2608 0102 D3010000 		.4byte	0x1d3
 2609 0106 0A       		.uleb128 0xa
 2610 0107 3A050000 		.4byte	.LASF21
 2611 010b 05       		.byte	0x5
 2612 010c 2A       		.byte	0x2a
 2613 010d BA000000 		.4byte	0xba
 2614 0111 00       		.byte	0
 2615 0112 0A       		.uleb128 0xa
 2616 0113 95020000 		.4byte	.LASF22
 2617 0117 05       		.byte	0x5
 2618 0118 2B       		.byte	0x2b
 2619 0119 96000000 		.4byte	0x96
 2620 011d 01       		.byte	0x1
 2621 011e 0A       		.uleb128 0xa
 2622 011f AC060000 		.4byte	.LASF23
 2623 0123 05       		.byte	0x5
 2624 0124 2C       		.byte	0x2c
 2625 0125 C6000000 		.4byte	0xc6
 2626 0129 02       		.byte	0x2
 2627 012a 0A       		.uleb128 0xa
 2628 012b 60030000 		.4byte	.LASF24
 2629 012f 05       		.byte	0x5
 2630 0130 2D       		.byte	0x2d
 2631 0131 C6000000 		.4byte	0xc6
 2632 0135 04       		.byte	0x4
 2633 0136 0A       		.uleb128 0xa
 2634 0137 BD070000 		.4byte	.LASF25
 2635 013b 05       		.byte	0x5
 2636 013c 2E       		.byte	0x2e
 2637 013d C6000000 		.4byte	0xc6
 2638 0141 06       		.byte	0x6
 2639 0142 0A       		.uleb128 0xa
 2640 0143 27080000 		.4byte	.LASF26
 2641 0147 05       		.byte	0x5
 2642 0148 2F       		.byte	0x2f
 2643 0149 C6000000 		.4byte	0xc6
 2644 014d 08       		.byte	0x8
 2645 014e 0A       		.uleb128 0xa
 2646 014f CC040000 		.4byte	.LASF27
 2647 0153 05       		.byte	0x5
 2648 0154 30       		.byte	0x30
 2649 0155 C6000000 		.4byte	0xc6
 2650 0159 0A       		.byte	0xa
 2651 015a 0A       		.uleb128 0xa
 2652 015b CC030000 		.4byte	.LASF28
 2653 015f 05       		.byte	0x5
 2654 0160 31       		.byte	0x31
 2655 0161 C6000000 		.4byte	0xc6
 2656 0165 0C       		.byte	0xc
 2657 0166 0A       		.uleb128 0xa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 60


 2658 0167 3F050000 		.4byte	.LASF29
 2659 016b 05       		.byte	0x5
 2660 016c 32       		.byte	0x32
 2661 016d C6000000 		.4byte	0xc6
 2662 0171 0E       		.byte	0xe
 2663 0172 0A       		.uleb128 0xa
 2664 0173 6A040000 		.4byte	.LASF30
 2665 0177 05       		.byte	0x5
 2666 0178 33       		.byte	0x33
 2667 0179 C6000000 		.4byte	0xc6
 2668 017d 10       		.byte	0x10
 2669 017e 0A       		.uleb128 0xa
 2670 017f 2C060000 		.4byte	.LASF31
 2671 0183 05       		.byte	0x5
 2672 0184 34       		.byte	0x34
 2673 0185 C6000000 		.4byte	0xc6
 2674 0189 12       		.byte	0x12
 2675 018a 0A       		.uleb128 0xa
 2676 018b 47080000 		.4byte	.LASF32
 2677 018f 05       		.byte	0x5
 2678 0190 35       		.byte	0x35
 2679 0191 C6000000 		.4byte	0xc6
 2680 0195 14       		.byte	0x14
 2681 0196 0A       		.uleb128 0xa
 2682 0197 0D040000 		.4byte	.LASF33
 2683 019b 05       		.byte	0x5
 2684 019c 36       		.byte	0x36
 2685 019d C6000000 		.4byte	0xc6
 2686 01a1 16       		.byte	0x16
 2687 01a2 0A       		.uleb128 0xa
 2688 01a3 86010000 		.4byte	.LASF34
 2689 01a7 05       		.byte	0x5
 2690 01a8 37       		.byte	0x37
 2691 01a9 C6000000 		.4byte	0xc6
 2692 01ad 18       		.byte	0x18
 2693 01ae 0A       		.uleb128 0xa
 2694 01af F2050000 		.4byte	.LASF35
 2695 01b3 05       		.byte	0x5
 2696 01b4 38       		.byte	0x38
 2697 01b5 C6000000 		.4byte	0xc6
 2698 01b9 1A       		.byte	0x1a
 2699 01ba 0A       		.uleb128 0xa
 2700 01bb C3040000 		.4byte	.LASF36
 2701 01bf 05       		.byte	0x5
 2702 01c0 39       		.byte	0x39
 2703 01c1 C6000000 		.4byte	0xc6
 2704 01c5 1C       		.byte	0x1c
 2705 01c6 0A       		.uleb128 0xa
 2706 01c7 3E020000 		.4byte	.LASF37
 2707 01cb 05       		.byte	0x5
 2708 01cc 3A       		.byte	0x3a
 2709 01cd C6000000 		.4byte	0xc6
 2710 01d1 1E       		.byte	0x1e
 2711 01d2 00       		.byte	0
 2712 01d3 0B       		.uleb128 0xb
 2713 01d4 10060000 		.4byte	.LASF41
 2714 01d8 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 61


 2715 01d9 2C000000 		.4byte	0x2c
 2716 01dd 06       		.byte	0x6
 2717 01de 0D       		.byte	0xd
 2718 01df FB010000 		.4byte	0x1fb
 2719 01e3 0C       		.uleb128 0xc
 2720 01e4 557000   		.ascii	"Up\000"
 2721 01e7 00       		.byte	0
 2722 01e8 0D       		.uleb128 0xd
 2723 01e9 21060000 		.4byte	.LASF38
 2724 01ed 01       		.byte	0x1
 2725 01ee 0D       		.uleb128 0xd
 2726 01ef F2020000 		.4byte	.LASF39
 2727 01f3 02       		.byte	0x2
 2728 01f4 0D       		.uleb128 0xd
 2729 01f5 26060000 		.4byte	.LASF40
 2730 01f9 03       		.byte	0x3
 2731 01fa 00       		.byte	0
 2732 01fb 0B       		.uleb128 0xb
 2733 01fc 1B000000 		.4byte	.LASF42
 2734 0200 01       		.byte	0x1
 2735 0201 2C000000 		.4byte	0x2c
 2736 0205 06       		.byte	0x6
 2737 0206 0E       		.byte	0xe
 2738 0207 36020000 		.4byte	0x236
 2739 020b 0D       		.uleb128 0xd
 2740 020c 7D070000 		.4byte	.LASF43
 2741 0210 00       		.byte	0
 2742 0211 0D       		.uleb128 0xd
 2743 0212 4C040000 		.4byte	.LASF44
 2744 0216 01       		.byte	0x1
 2745 0217 0D       		.uleb128 0xd
 2746 0218 15050000 		.4byte	.LASF45
 2747 021c 02       		.byte	0x2
 2748 021d 0D       		.uleb128 0xd
 2749 021e 95040000 		.4byte	.LASF46
 2750 0222 03       		.byte	0x3
 2751 0223 0D       		.uleb128 0xd
 2752 0224 30010000 		.4byte	.LASF47
 2753 0228 04       		.byte	0x4
 2754 0229 0D       		.uleb128 0xd
 2755 022a 47030000 		.4byte	.LASF48
 2756 022e 05       		.byte	0x5
 2757 022f 0D       		.uleb128 0xd
 2758 0230 6A070000 		.4byte	.LASF49
 2759 0234 06       		.byte	0x6
 2760 0235 00       		.byte	0
 2761 0236 09       		.uleb128 0x9
 2762 0237 B2020000 		.4byte	.LASF51
 2763 023b 10       		.byte	0x10
 2764 023c 06       		.byte	0x6
 2765 023d 10       		.byte	0x10
 2766 023e 73020000 		.4byte	0x273
 2767 0242 0A       		.uleb128 0xa
 2768 0243 00000000 		.4byte	.LASF52
 2769 0247 06       		.byte	0x6
 2770 0248 11       		.byte	0x11
 2771 0249 FB010000 		.4byte	0x1fb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 62


 2772 024d 00       		.byte	0
 2773 024e 0A       		.uleb128 0xa
 2774 024f 50080000 		.4byte	.LASF53
 2775 0253 06       		.byte	0x6
 2776 0254 12       		.byte	0x12
 2777 0255 68000000 		.4byte	0x68
 2778 0259 04       		.byte	0x4
 2779 025a 0A       		.uleb128 0xa
 2780 025b 58080000 		.4byte	.LASF54
 2781 025f 06       		.byte	0x6
 2782 0260 13       		.byte	0x13
 2783 0261 68000000 		.4byte	0x68
 2784 0265 08       		.byte	0x8
 2785 0266 0A       		.uleb128 0xa
 2786 0267 43010000 		.4byte	.LASF55
 2787 026b 06       		.byte	0x6
 2788 026c 14       		.byte	0x14
 2789 026d D3010000 		.4byte	0x1d3
 2790 0271 0C       		.byte	0xc
 2791 0272 00       		.byte	0
 2792 0273 03       		.uleb128 0x3
 2793 0274 B2020000 		.4byte	.LASF51
 2794 0278 06       		.byte	0x6
 2795 0279 15       		.byte	0x15
 2796 027a 36020000 		.4byte	0x236
 2797 027e 0B       		.uleb128 0xb
 2798 027f BD060000 		.4byte	.LASF56
 2799 0283 01       		.byte	0x1
 2800 0284 2C000000 		.4byte	0x2c
 2801 0288 01       		.byte	0x1
 2802 0289 18       		.byte	0x18
 2803 028a D1020000 		.4byte	0x2d1
 2804 028e 0D       		.uleb128 0xd
 2805 028f D8050000 		.4byte	.LASF57
 2806 0293 00       		.byte	0
 2807 0294 0D       		.uleb128 0xd
 2808 0295 26050000 		.4byte	.LASF58
 2809 0299 01       		.byte	0x1
 2810 029a 0D       		.uleb128 0xd
 2811 029b DE040000 		.4byte	.LASF59
 2812 029f 02       		.byte	0x2
 2813 02a0 0D       		.uleb128 0xd
 2814 02a1 E7070000 		.4byte	.LASF60
 2815 02a5 03       		.byte	0x3
 2816 02a6 0D       		.uleb128 0xd
 2817 02a7 09070000 		.4byte	.LASF61
 2818 02ab 04       		.byte	0x4
 2819 02ac 0D       		.uleb128 0xd
 2820 02ad 1A070000 		.4byte	.LASF62
 2821 02b1 05       		.byte	0x5
 2822 02b2 0D       		.uleb128 0xd
 2823 02b3 06050000 		.4byte	.LASF63
 2824 02b7 06       		.byte	0x6
 2825 02b8 0D       		.uleb128 0xd
 2826 02b9 54030000 		.4byte	.LASF64
 2827 02bd 07       		.byte	0x7
 2828 02be 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 63


 2829 02bf 0A000000 		.4byte	.LASF65
 2830 02c3 08       		.byte	0x8
 2831 02c4 0D       		.uleb128 0xd
 2832 02c5 F7070000 		.4byte	.LASF66
 2833 02c9 09       		.byte	0x9
 2834 02ca 0D       		.uleb128 0xd
 2835 02cb 5E050000 		.4byte	.LASF67
 2836 02cf 0A       		.byte	0xa
 2837 02d0 00       		.byte	0
 2838 02d1 0E       		.uleb128 0xe
 2839 02d2 26040000 		.4byte	.LASF77
 2840 02d6 01       		.byte	0x1
 2841 02d7 47       		.byte	0x47
 2842 02d8 00000000 		.4byte	.LFB64
 2843 02dc EC000000 		.4byte	.LFE64-.LFB64
 2844 02e0 01       		.uleb128 0x1
 2845 02e1 9C       		.byte	0x9c
 2846 02e2 FF020000 		.4byte	0x2ff
 2847 02e6 0F       		.uleb128 0xf
 2848 02e7 50000000 		.4byte	.LBB2
 2849 02eb 62000000 		.4byte	.LBE2-.LBB2
 2850 02ef 10       		.uleb128 0x10
 2851 02f0 B7040000 		.4byte	.LASF74
 2852 02f4 01       		.byte	0x1
 2853 02f5 54       		.byte	0x54
 2854 02f6 D2000000 		.4byte	0xd2
 2855 02fa 02       		.uleb128 0x2
 2856 02fb 91       		.byte	0x91
 2857 02fc 6C       		.sleb128 -20
 2858 02fd 00       		.byte	0
 2859 02fe 00       		.byte	0
 2860 02ff 11       		.uleb128 0x11
 2861 0300 1A040000 		.4byte	.LASF68
 2862 0304 01       		.byte	0x1
 2863 0305 5F       		.byte	0x5f
 2864 0306 00000000 		.4byte	.LFB65
 2865 030a 18000000 		.4byte	.LFE65-.LFB65
 2866 030e 01       		.uleb128 0x1
 2867 030f 9C       		.byte	0x9c
 2868 0310 11       		.uleb128 0x11
 2869 0311 AC050000 		.4byte	.LASF69
 2870 0315 01       		.byte	0x1
 2871 0316 65       		.byte	0x65
 2872 0317 00000000 		.4byte	.LFB66
 2873 031b 18000000 		.4byte	.LFE66-.LFB66
 2874 031f 01       		.uleb128 0x1
 2875 0320 9C       		.byte	0x9c
 2876 0321 11       		.uleb128 0x11
 2877 0322 87070000 		.4byte	.LASF70
 2878 0326 01       		.byte	0x1
 2879 0327 6B       		.byte	0x6b
 2880 0328 00000000 		.4byte	.LFB67
 2881 032c 18000000 		.4byte	.LFE67-.LFB67
 2882 0330 01       		.uleb128 0x1
 2883 0331 9C       		.byte	0x9c
 2884 0332 11       		.uleb128 0x11
 2885 0333 6C010000 		.4byte	.LASF71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 64


 2886 0337 01       		.byte	0x1
 2887 0338 71       		.byte	0x71
 2888 0339 00000000 		.4byte	.LFB68
 2889 033d 18000000 		.4byte	.LFE68-.LFB68
 2890 0341 01       		.uleb128 0x1
 2891 0342 9C       		.byte	0x9c
 2892 0343 12       		.uleb128 0x12
 2893 0344 DB020000 		.4byte	.LASF72
 2894 0348 01       		.byte	0x1
 2895 0349 77       		.byte	0x77
 2896 034a 00000000 		.4byte	.LFB69
 2897 034e 38000000 		.4byte	.LFE69-.LFB69
 2898 0352 01       		.uleb128 0x1
 2899 0353 9C       		.byte	0x9c
 2900 0354 13       		.uleb128 0x13
 2901 0355 CF070000 		.4byte	.LASF73
 2902 0359 01       		.byte	0x1
 2903 035a 83       		.byte	0x83
 2904 035b 68000000 		.4byte	0x68
 2905 035f 00000000 		.4byte	.LFB70
 2906 0363 14010000 		.4byte	.LFE70-.LFB70
 2907 0367 01       		.uleb128 0x1
 2908 0368 9C       		.byte	0x9c
 2909 0369 14       		.uleb128 0x14
 2910 036a 21030000 		.4byte	.LASF81
 2911 036e 01       		.byte	0x1
 2912 036f BA       		.byte	0xba
 2913 0370 C6000000 		.4byte	0xc6
 2914 0374 00000000 		.4byte	.LFB71
 2915 0378 54000000 		.4byte	.LFE71-.LFB71
 2916 037c 01       		.uleb128 0x1
 2917 037d 9C       		.byte	0x9c
 2918 037e AD030000 		.4byte	0x3ad
 2919 0382 15       		.uleb128 0x15
 2920 0383 8F020000 		.4byte	.LASF83
 2921 0387 01       		.byte	0x1
 2922 0388 BA       		.byte	0xba
 2923 0389 A2000000 		.4byte	0xa2
 2924 038d 02       		.uleb128 0x2
 2925 038e 91       		.byte	0x91
 2926 038f 66       		.sleb128 -26
 2927 0390 16       		.uleb128 0x16
 2928 0391 63707300 		.ascii	"cps\000"
 2929 0395 01       		.byte	0x1
 2930 0396 BB       		.byte	0xbb
 2931 0397 D2000000 		.4byte	0xd2
 2932 039b 02       		.uleb128 0x2
 2933 039c 91       		.byte	0x91
 2934 039d 6C       		.sleb128 -20
 2935 039e 16       		.uleb128 0x16
 2936 039f 72706D00 		.ascii	"rpm\000"
 2937 03a3 01       		.byte	0x1
 2938 03a4 BC       		.byte	0xbc
 2939 03a5 C6000000 		.4byte	0xc6
 2940 03a9 02       		.uleb128 0x2
 2941 03aa 91       		.byte	0x91
 2942 03ab 6A       		.sleb128 -22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 65


 2943 03ac 00       		.byte	0
 2944 03ad 17       		.uleb128 0x17
 2945 03ae 2D020000 		.4byte	.LASF89
 2946 03b2 01       		.byte	0x1
 2947 03b3 C4       		.byte	0xc4
 2948 03b4 00000000 		.4byte	.LFB72
 2949 03b8 34000000 		.4byte	.LFE72-.LFB72
 2950 03bc 01       		.uleb128 0x1
 2951 03bd 9C       		.byte	0x9c
 2952 03be 18       		.uleb128 0x18
 2953 03bf FD010000 		.4byte	.LASF75
 2954 03c3 01       		.byte	0x1
 2955 03c4 D5       		.byte	0xd5
 2956 03c5 7E020000 		.4byte	0x27e
 2957 03c9 00000000 		.4byte	.LFB73
 2958 03cd 84000000 		.4byte	.LFE73-.LFB73
 2959 03d1 01       		.uleb128 0x1
 2960 03d2 9C       		.byte	0x9c
 2961 03d3 18       		.uleb128 0x18
 2962 03d4 57010000 		.4byte	.LASF76
 2963 03d8 01       		.byte	0x1
 2964 03d9 FB       		.byte	0xfb
 2965 03da 7E020000 		.4byte	0x27e
 2966 03de 00000000 		.4byte	.LFB74
 2967 03e2 7C000000 		.4byte	.LFE74-.LFB74
 2968 03e6 01       		.uleb128 0x1
 2969 03e7 9C       		.byte	0x9c
 2970 03e8 19       		.uleb128 0x19
 2971 03e9 BF010000 		.4byte	.LASF78
 2972 03ed 01       		.byte	0x1
 2973 03ee 1901     		.2byte	0x119
 2974 03f0 7E020000 		.4byte	0x27e
 2975 03f4 00000000 		.4byte	.LFB75
 2976 03f8 E8030000 		.4byte	.LFE75-.LFB75
 2977 03fc 01       		.uleb128 0x1
 2978 03fd 9C       		.byte	0x9c
 2979 03fe 21040000 		.4byte	0x421
 2980 0402 1A       		.uleb128 0x1a
 2981 0403 57000000 		.4byte	.LASF79
 2982 0407 01       		.byte	0x1
 2983 0408 1A01     		.2byte	0x11a
 2984 040a D2000000 		.4byte	0xd2
 2985 040e 02       		.uleb128 0x2
 2986 040f 91       		.byte	0x91
 2987 0410 74       		.sleb128 -12
 2988 0411 1A       		.uleb128 0x1a
 2989 0412 69020000 		.4byte	.LASF80
 2990 0416 01       		.byte	0x1
 2991 0417 2901     		.2byte	0x129
 2992 0419 FB010000 		.4byte	0x1fb
 2993 041d 02       		.uleb128 0x2
 2994 041e 91       		.byte	0x91
 2995 041f 73       		.sleb128 -13
 2996 0420 00       		.byte	0
 2997 0421 1B       		.uleb128 0x1b
 2998 0422 EF060000 		.4byte	.LASF82
 2999 0426 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 66


 3000 0427 0F02     		.2byte	0x20f
 3001 0429 D2000000 		.4byte	0xd2
 3002 042d 00000000 		.4byte	.LFB76
 3003 0431 90020000 		.4byte	.LFE76-.LFB76
 3004 0435 01       		.uleb128 0x1
 3005 0436 9C       		.byte	0x9c
 3006 0437 DF040000 		.4byte	0x4df
 3007 043b 1C       		.uleb128 0x1c
 3008 043c 30030000 		.4byte	.LASF84
 3009 0440 01       		.byte	0x1
 3010 0441 0F02     		.2byte	0x20f
 3011 0443 D2000000 		.4byte	0xd2
 3012 0447 02       		.uleb128 0x2
 3013 0448 91       		.byte	0x91
 3014 0449 54       		.sleb128 -44
 3015 044a 1A       		.uleb128 0x1a
 3016 044b 18080000 		.4byte	.LASF85
 3017 044f 01       		.byte	0x1
 3018 0450 1002     		.2byte	0x210
 3019 0452 D2000000 		.4byte	0xd2
 3020 0456 02       		.uleb128 0x2
 3021 0457 91       		.byte	0x91
 3022 0458 58       		.sleb128 -40
 3023 0459 1A       		.uleb128 0x1a
 3024 045a B5010000 		.4byte	.LASF86
 3025 045e 01       		.byte	0x1
 3026 045f 1302     		.2byte	0x213
 3027 0461 68000000 		.4byte	0x68
 3028 0465 02       		.uleb128 0x2
 3029 0466 91       		.byte	0x91
 3030 0467 60       		.sleb128 -32
 3031 0468 1A       		.uleb128 0x1a
 3032 0469 4B020000 		.4byte	.LASF87
 3033 046d 01       		.byte	0x1
 3034 046e 1402     		.2byte	0x214
 3035 0470 68000000 		.4byte	0x68
 3036 0474 02       		.uleb128 0x2
 3037 0475 91       		.byte	0x91
 3038 0476 5C       		.sleb128 -36
 3039 0477 1A       		.uleb128 0x1a
 3040 0478 31040000 		.4byte	.LASF88
 3041 047c 01       		.byte	0x1
 3042 047d 1602     		.2byte	0x216
 3043 047f 68000000 		.4byte	0x68
 3044 0483 02       		.uleb128 0x2
 3045 0484 91       		.byte	0x91
 3046 0485 74       		.sleb128 -12
 3047 0486 1D       		.uleb128 0x1d
 3048 0487 00000000 		.4byte	.Ldebug_ranges0+0
 3049 048b 9D040000 		.4byte	0x49d
 3050 048f 1E       		.uleb128 0x1e
 3051 0490 6900     		.ascii	"i\000"
 3052 0492 01       		.byte	0x1
 3053 0493 2002     		.2byte	0x220
 3054 0495 68000000 		.4byte	0x68
 3055 0499 02       		.uleb128 0x2
 3056 049a 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 67


 3057 049b 70       		.sleb128 -16
 3058 049c 00       		.byte	0
 3059 049d 1D       		.uleb128 0x1d
 3060 049e 18000000 		.4byte	.Ldebug_ranges0+0x18
 3061 04a2 B4040000 		.4byte	0x4b4
 3062 04a6 1E       		.uleb128 0x1e
 3063 04a7 6900     		.ascii	"i\000"
 3064 04a9 01       		.byte	0x1
 3065 04aa 2F02     		.2byte	0x22f
 3066 04ac 68000000 		.4byte	0x68
 3067 04b0 02       		.uleb128 0x2
 3068 04b1 91       		.byte	0x91
 3069 04b2 6C       		.sleb128 -20
 3070 04b3 00       		.byte	0
 3071 04b4 1D       		.uleb128 0x1d
 3072 04b5 30000000 		.4byte	.Ldebug_ranges0+0x30
 3073 04b9 CB040000 		.4byte	0x4cb
 3074 04bd 1E       		.uleb128 0x1e
 3075 04be 6900     		.ascii	"i\000"
 3076 04c0 01       		.byte	0x1
 3077 04c1 3E02     		.2byte	0x23e
 3078 04c3 68000000 		.4byte	0x68
 3079 04c7 02       		.uleb128 0x2
 3080 04c8 91       		.byte	0x91
 3081 04c9 68       		.sleb128 -24
 3082 04ca 00       		.byte	0
 3083 04cb 1F       		.uleb128 0x1f
 3084 04cc 48000000 		.4byte	.Ldebug_ranges0+0x48
 3085 04d0 1E       		.uleb128 0x1e
 3086 04d1 6900     		.ascii	"i\000"
 3087 04d3 01       		.byte	0x1
 3088 04d4 4E02     		.2byte	0x24e
 3089 04d6 68000000 		.4byte	0x68
 3090 04da 02       		.uleb128 0x2
 3091 04db 91       		.byte	0x91
 3092 04dc 64       		.sleb128 -28
 3093 04dd 00       		.byte	0
 3094 04de 00       		.byte	0
 3095 04df 20       		.uleb128 0x20
 3096 04e0 FA050000 		.4byte	.LASF90
 3097 04e4 01       		.byte	0x1
 3098 04e5 6202     		.2byte	0x262
 3099 04e7 00000000 		.4byte	.LFB77
 3100 04eb 5C000000 		.4byte	.LFE77-.LFB77
 3101 04ef 01       		.uleb128 0x1
 3102 04f0 9C       		.byte	0x9c
 3103 04f1 21       		.uleb128 0x21
 3104 04f2 1F070000 		.4byte	.LASF91
 3105 04f6 01       		.byte	0x1
 3106 04f7 6A02     		.2byte	0x26a
 3107 04f9 73020000 		.4byte	0x273
 3108 04fd 00000000 		.4byte	.LFB78
 3109 0501 7C000000 		.4byte	.LFE78-.LFB78
 3110 0505 01       		.uleb128 0x1
 3111 0506 9C       		.byte	0x9c
 3112 0507 50050000 		.4byte	0x550
 3113 050b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 68


 3114 050c AC010000 		.4byte	.LASF92
 3115 0510 01       		.byte	0x1
 3116 0511 6A02     		.2byte	0x26a
 3117 0513 68000000 		.4byte	0x68
 3118 0517 02       		.uleb128 0x2
 3119 0518 91       		.byte	0x91
 3120 0519 58       		.sleb128 -40
 3121 051a 1C       		.uleb128 0x1c
 3122 051b D5030000 		.4byte	.LASF93
 3123 051f 01       		.byte	0x1
 3124 0520 6A02     		.2byte	0x26a
 3125 0522 50050000 		.4byte	0x550
 3126 0526 02       		.uleb128 0x2
 3127 0527 91       		.byte	0x91
 3128 0528 54       		.sleb128 -44
 3129 0529 1A       		.uleb128 0x1a
 3130 052a 92000000 		.4byte	.LASF94
 3131 052e 01       		.byte	0x1
 3132 052f 6B02     		.2byte	0x26b
 3133 0531 73020000 		.4byte	0x273
 3134 0535 02       		.uleb128 0x2
 3135 0536 91       		.byte	0x91
 3136 0537 64       		.sleb128 -28
 3137 0538 0F       		.uleb128 0xf
 3138 0539 0C000000 		.4byte	.LBB11
 3139 053d 54000000 		.4byte	.LBE11-.LBB11
 3140 0541 1E       		.uleb128 0x1e
 3141 0542 6900     		.ascii	"i\000"
 3142 0544 01       		.byte	0x1
 3143 0545 6D02     		.2byte	0x26d
 3144 0547 68000000 		.4byte	0x68
 3145 054b 02       		.uleb128 0x2
 3146 054c 91       		.byte	0x91
 3147 054d 74       		.sleb128 -12
 3148 054e 00       		.byte	0
 3149 054f 00       		.byte	0
 3150 0550 22       		.uleb128 0x22
 3151 0551 04       		.byte	0x4
 3152 0552 73020000 		.4byte	0x273
 3153 0556 23       		.uleb128 0x23
 3154 0557 CA020000 		.4byte	.LASF95
 3155 055b 01       		.byte	0x1
 3156 055c 7902     		.2byte	0x279
 3157 055e 00000000 		.4byte	.LFB79
 3158 0562 C4000000 		.4byte	.LFE79-.LFB79
 3159 0566 01       		.uleb128 0x1
 3160 0567 9C       		.byte	0x9c
 3161 0568 10       		.uleb128 0x10
 3162 0569 E5030000 		.4byte	.LASF96
 3163 056d 01       		.byte	0x1
 3164 056e 20       		.byte	0x20
 3165 056f E5000000 		.4byte	0xe5
 3166 0573 05       		.uleb128 0x5
 3167 0574 03       		.byte	0x3
 3168 0575 14000000 		.4byte	instructionIndex
 3169 0579 10       		.uleb128 0x10
 3170 057a 47000000 		.4byte	.LASF97
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 69


 3171 057e 01       		.byte	0x1
 3172 057f 34       		.byte	0x34
 3173 0580 E0000000 		.4byte	0xe0
 3174 0584 05       		.uleb128 0x5
 3175 0585 03       		.byte	0x3
 3176 0586 34000000 		.4byte	turnStartedFlag
 3177 058a 10       		.uleb128 0x10
 3178 058b 3B040000 		.4byte	.LASF98
 3179 058f 01       		.byte	0x1
 3180 0590 35       		.byte	0x35
 3181 0591 E0000000 		.4byte	0xe0
 3182 0595 05       		.uleb128 0x5
 3183 0596 03       		.byte	0x3
 3184 0597 35000000 		.4byte	turnFinishedFlag
 3185 059b 10       		.uleb128 0x10
 3186 059c 8E010000 		.4byte	.LASF99
 3187 05a0 01       		.byte	0x1
 3188 05a1 37       		.byte	0x37
 3189 05a2 E0000000 		.4byte	0xe0
 3190 05a6 05       		.uleb128 0x5
 3191 05a7 03       		.byte	0x3
 3192 05a8 36000000 		.4byte	forwardUntilTargetStartedFlag
 3193 05ac 10       		.uleb128 0x10
 3194 05ad 45060000 		.4byte	.LASF100
 3195 05b1 01       		.byte	0x1
 3196 05b2 38       		.byte	0x38
 3197 05b3 E0000000 		.4byte	0xe0
 3198 05b7 05       		.uleb128 0x5
 3199 05b8 03       		.byte	0x3
 3200 05b9 37000000 		.4byte	uTurnStartedFlag
 3201 05bd 10       		.uleb128 0x10
 3202 05be 92060000 		.4byte	.LASF101
 3203 05c2 01       		.byte	0x1
 3204 05c3 39       		.byte	0x39
 3205 05c4 E0000000 		.4byte	0xe0
 3206 05c8 05       		.uleb128 0x5
 3207 05c9 03       		.byte	0x3
 3208 05ca 38000000 		.4byte	uTurnFinishedFlag
 3209 05ce 10       		.uleb128 0x10
 3210 05cf 12030000 		.4byte	.LASF102
 3211 05d3 01       		.byte	0x1
 3212 05d4 3B       		.byte	0x3b
 3213 05d5 E0000000 		.4byte	0xe0
 3214 05d9 05       		.uleb128 0x5
 3215 05da 03       		.byte	0x3
 3216 05db 39000000 		.4byte	leftStatusFlag
 3217 05df 10       		.uleb128 0x10
 3218 05e0 37000000 		.4byte	.LASF103
 3219 05e4 01       		.byte	0x1
 3220 05e5 3C       		.byte	0x3c
 3221 05e6 E0000000 		.4byte	0xe0
 3222 05ea 05       		.uleb128 0x5
 3223 05eb 03       		.byte	0x3
 3224 05ec 3A000000 		.4byte	rightStatusFlag
 3225 05f0 10       		.uleb128 0x10
 3226 05f1 9B040000 		.4byte	.LASF104
 3227 05f5 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 70


 3228 05f6 3E       		.byte	0x3e
 3229 05f7 E0000000 		.4byte	0xe0
 3230 05fb 05       		.uleb128 0x5
 3231 05fc 03       		.byte	0x3
 3232 05fd 3B000000 		.4byte	spinCourseCorrectionStarted
 3233 0601 10       		.uleb128 0x10
 3234 0602 4C070000 		.4byte	.LASF105
 3235 0606 01       		.byte	0x1
 3236 0607 3F       		.byte	0x3f
 3237 0608 E0000000 		.4byte	0xe0
 3238 060c 05       		.uleb128 0x5
 3239 060d 03       		.byte	0x3
 3240 060e 3C000000 		.4byte	currentIgnoreL
 3241 0612 10       		.uleb128 0x10
 3242 0613 5B070000 		.4byte	.LASF106
 3243 0617 01       		.byte	0x1
 3244 0618 40       		.byte	0x40
 3245 0619 E0000000 		.4byte	0xe0
 3246 061d 05       		.uleb128 0x5
 3247 061e 03       		.byte	0x3
 3248 061f 3D000000 		.4byte	currentIgnoreR
 3249 0623 24       		.uleb128 0x24
 3250 0624 C1050000 		.4byte	.LASF107
 3251 0628 07       		.byte	0x7
 3252 0629 1207     		.2byte	0x712
 3253 062b 2F060000 		.4byte	0x62f
 3254 062f 06       		.uleb128 0x6
 3255 0630 8B000000 		.4byte	0x8b
 3256 0634 25       		.uleb128 0x25
 3257 0635 747300   		.ascii	"ts\000"
 3258 0638 05       		.byte	0x5
 3259 0639 10       		.byte	0x10
 3260 063a 96000000 		.4byte	0x96
 3261 063e 05       		.uleb128 0x5
 3262 063f 03       		.byte	0x3
 3263 0640 00000000 		.4byte	ts
 3264 0644 26       		.uleb128 0x26
 3265 0645 35070000 		.4byte	.LASF108
 3266 0649 05       		.byte	0x5
 3267 064a 11       		.byte	0x11
 3268 064b A2000000 		.4byte	0xa2
 3269 064f 05       		.uleb128 0x5
 3270 0650 03       		.byte	0x3
 3271 0651 00000000 		.4byte	ts_enc
 3272 0655 26       		.uleb128 0x26
 3273 0656 CE050000 		.4byte	.LASF109
 3274 065a 05       		.byte	0x5
 3275 065b 12       		.byte	0x12
 3276 065c A2000000 		.4byte	0xa2
 3277 0660 05       		.uleb128 0x5
 3278 0661 03       		.byte	0x3
 3279 0662 00000000 		.4byte	ts_update
 3280 0666 26       		.uleb128 0x26
 3281 0667 E7040000 		.4byte	.LASF110
 3282 066b 05       		.byte	0x5
 3283 066c 13       		.byte	0x13
 3284 066d A2000000 		.4byte	0xa2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 71


 3285 0671 05       		.uleb128 0x5
 3286 0672 03       		.byte	0x3
 3287 0673 00000000 		.4byte	ts_speed
 3288 0677 26       		.uleb128 0x26
 3289 0678 6B030000 		.4byte	.LASF111
 3290 067c 05       		.byte	0x5
 3291 067d 14       		.byte	0x14
 3292 067e A2000000 		.4byte	0xa2
 3293 0682 05       		.uleb128 0x5
 3294 0683 03       		.byte	0x3
 3295 0684 00000000 		.4byte	ts_display
 3296 0688 26       		.uleb128 0x26
 3297 0689 06030000 		.4byte	.LASF112
 3298 068d 05       		.byte	0x5
 3299 068e 16       		.byte	0x16
 3300 068f 96000000 		.4byte	0x96
 3301 0693 05       		.uleb128 0x5
 3302 0694 03       		.byte	0x3
 3303 0695 00000000 		.4byte	flag_ts_enc
 3304 0699 26       		.uleb128 0x26
 3305 069a F7020000 		.4byte	.LASF113
 3306 069e 05       		.byte	0x5
 3307 069f 17       		.byte	0x17
 3308 06a0 96000000 		.4byte	0x96
 3309 06a4 05       		.uleb128 0x5
 3310 06a5 03       		.byte	0x3
 3311 06a6 00000000 		.4byte	flag_ts_update
 3312 06aa 26       		.uleb128 0x26
 3313 06ab 72050000 		.4byte	.LASF114
 3314 06af 05       		.byte	0x5
 3315 06b0 18       		.byte	0x18
 3316 06b1 96000000 		.4byte	0x96
 3317 06b5 05       		.uleb128 0x5
 3318 06b6 03       		.byte	0x3
 3319 06b7 00000000 		.4byte	flag_ts_speed
 3320 06bb 26       		.uleb128 0x26
 3321 06bc 3C070000 		.4byte	.LASF115
 3322 06c0 05       		.byte	0x5
 3323 06c1 19       		.byte	0x19
 3324 06c2 96000000 		.4byte	0x96
 3325 06c6 05       		.uleb128 0x5
 3326 06c7 03       		.byte	0x3
 3327 06c8 00000000 		.4byte	flag_ts_display
 3328 06cc 26       		.uleb128 0x26
 3329 06cd 8F050000 		.4byte	.LASF116
 3330 06d1 05       		.byte	0x5
 3331 06d2 1B       		.byte	0x1b
 3332 06d3 96000000 		.4byte	0x96
 3333 06d7 05       		.uleb128 0x5
 3334 06d8 03       		.byte	0x3
 3335 06d9 00000000 		.4byte	flag_rx
 3336 06dd 26       		.uleb128 0x26
 3337 06de BE020000 		.4byte	.LASF117
 3338 06e2 05       		.byte	0x5
 3339 06e3 1C       		.byte	0x1c
 3340 06e4 96000000 		.4byte	0x96
 3341 06e8 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 72


 3342 06e9 03       		.byte	0x3
 3343 06ea 00000000 		.4byte	flag_packet
 3344 06ee 26       		.uleb128 0x26
 3345 06ef 38080000 		.4byte	.LASF118
 3346 06f3 05       		.byte	0x5
 3347 06f4 1D       		.byte	0x1d
 3348 06f5 96000000 		.4byte	0x96
 3349 06f9 05       		.uleb128 0x5
 3350 06fa 03       		.byte	0x3
 3351 06fb 00000000 		.4byte	flag_KB_string
 3352 06ff 26       		.uleb128 0x26
 3353 0700 80050000 		.4byte	.LASF119
 3354 0704 05       		.byte	0x5
 3355 0705 1F       		.byte	0x1f
 3356 0706 96000000 		.4byte	0x96
 3357 070a 05       		.uleb128 0x5
 3358 070b 03       		.byte	0x3
 3359 070c 00000000 		.4byte	dataready_flag
 3360 0710 26       		.uleb128 0x26
 3361 0711 E1010000 		.4byte	.LASF120
 3362 0715 05       		.byte	0x5
 3363 0716 21       		.byte	0x21
 3364 0717 96000000 		.4byte	0x96
 3365 071b 05       		.uleb128 0x5
 3366 071c 03       		.byte	0x3
 3367 071d 00000000 		.4byte	flag_rf_transmission_active
 3368 0721 07       		.uleb128 0x7
 3369 0722 84000000 		.4byte	0x84
 3370 0726 31070000 		.4byte	0x731
 3371 072a 08       		.uleb128 0x8
 3372 072b 7D000000 		.4byte	0x7d
 3373 072f 3F       		.byte	0x3f
 3374 0730 00       		.byte	0
 3375 0731 26       		.uleb128 0x26
 3376 0732 6F070000 		.4byte	.LASF121
 3377 0736 05       		.byte	0x5
 3378 0737 24       		.byte	0x24
 3379 0738 21070000 		.4byte	0x721
 3380 073c 05       		.uleb128 0x5
 3381 073d 03       		.byte	0x3
 3382 073e 00000000 		.4byte	displaystring
 3383 0742 26       		.uleb128 0x26
 3384 0743 EA060000 		.4byte	.LASF122
 3385 0747 05       		.byte	0x5
 3386 0748 25       		.byte	0x25
 3387 0749 21070000 		.4byte	0x721
 3388 074d 05       		.uleb128 0x5
 3389 074e 03       		.byte	0x3
 3390 074f 00000000 		.4byte	line
 3391 0753 26       		.uleb128 0x26
 3392 0754 B7060000 		.4byte	.LASF123
 3393 0758 05       		.byte	0x5
 3394 0759 25       		.byte	0x25
 3395 075a 21070000 		.4byte	0x721
 3396 075e 05       		.uleb128 0x5
 3397 075f 03       		.byte	0x3
 3398 0760 00000000 		.4byte	entry
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 73


 3399 0764 07       		.uleb128 0x7
 3400 0765 96000000 		.4byte	0x96
 3401 0769 74070000 		.4byte	0x774
 3402 076d 08       		.uleb128 0x8
 3403 076e 7D000000 		.4byte	0x7d
 3404 0772 3F       		.byte	0x3f
 3405 0773 00       		.byte	0
 3406 0774 26       		.uleb128 0x26
 3407 0775 85020000 		.4byte	.LASF124
 3408 0779 05       		.byte	0x5
 3409 077a 26       		.byte	0x26
 3410 077b 64070000 		.4byte	0x764
 3411 077f 05       		.uleb128 0x5
 3412 0780 03       		.byte	0x3
 3413 0781 00000000 		.4byte	usbBuffer
 3414 0785 26       		.uleb128 0x26
 3415 0786 85000000 		.4byte	.LASF125
 3416 078a 05       		.byte	0x5
 3417 078b 3C       		.byte	0x3c
 3418 078c FA000000 		.4byte	0xfa
 3419 0790 05       		.uleb128 0x5
 3420 0791 03       		.byte	0x3
 3421 0792 00000000 		.4byte	system_state
 3422 0796 07       		.uleb128 0x7
 3423 0797 68000000 		.4byte	0x68
 3424 079b AC070000 		.4byte	0x7ac
 3425 079f 08       		.uleb128 0x8
 3426 07a0 7D000000 		.4byte	0x7d
 3427 07a4 0E       		.byte	0xe
 3428 07a5 08       		.uleb128 0x8
 3429 07a6 7D000000 		.4byte	0x7d
 3430 07aa 12       		.byte	0x12
 3431 07ab 00       		.byte	0
 3432 07ac 27       		.uleb128 0x27
 3433 07ad 6D617000 		.ascii	"map\000"
 3434 07b1 08       		.byte	0x8
 3435 07b2 04       		.byte	0x4
 3436 07b3 96070000 		.4byte	0x796
 3437 07b7 07       		.uleb128 0x7
 3438 07b8 68000000 		.4byte	0x68
 3439 07bc CD070000 		.4byte	0x7cd
 3440 07c0 08       		.uleb128 0x8
 3441 07c1 7D000000 		.4byte	0x7d
 3442 07c5 04       		.byte	0x4
 3443 07c6 08       		.uleb128 0x8
 3444 07c7 7D000000 		.4byte	0x7d
 3445 07cb 01       		.byte	0x1
 3446 07cc 00       		.byte	0
 3447 07cd 28       		.uleb128 0x28
 3448 07ce D4040000 		.4byte	.LASF126
 3449 07d2 08       		.byte	0x8
 3450 07d3 05       		.byte	0x5
 3451 07d4 B7070000 		.4byte	0x7b7
 3452 07d8 26       		.uleb128 0x26
 3453 07d9 34060000 		.4byte	.LASF127
 3454 07dd 01       		.byte	0x1
 3455 07de 19       		.byte	0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 74


 3456 07df 7E020000 		.4byte	0x27e
 3457 07e3 05       		.uleb128 0x5
 3458 07e4 03       		.byte	0x3
 3459 07e5 00000000 		.4byte	currentDirection
 3460 07e9 26       		.uleb128 0x26
 3461 07ea 4C050000 		.4byte	.LASF128
 3462 07ee 01       		.byte	0x1
 3463 07ef 19       		.byte	0x19
 3464 07f0 7E020000 		.4byte	0x27e
 3465 07f4 05       		.uleb128 0x5
 3466 07f5 03       		.byte	0x3
 3467 07f6 00000000 		.4byte	previousDirection
 3468 07fa 26       		.uleb128 0x26
 3469 07fb 15020000 		.4byte	.LASF129
 3470 07ff 01       		.byte	0x1
 3471 0800 1B       		.byte	0x1b
 3472 0801 D3010000 		.4byte	0x1d3
 3473 0805 05       		.uleb128 0x5
 3474 0806 03       		.byte	0x3
 3475 0807 00000000 		.4byte	currentRobotOrientation
 3476 080b 26       		.uleb128 0x26
 3477 080c 81040000 		.4byte	.LASF130
 3478 0810 01       		.byte	0x1
 3479 0811 1B       		.byte	0x1b
 3480 0812 D3010000 		.4byte	0x1d3
 3481 0816 05       		.uleb128 0x5
 3482 0817 03       		.byte	0x3
 3483 0818 00000000 		.4byte	previousOrientation
 3484 081c 26       		.uleb128 0x26
 3485 081d D4070000 		.4byte	.LASF131
 3486 0821 01       		.byte	0x1
 3487 0822 1C       		.byte	0x1c
 3488 0823 73020000 		.4byte	0x273
 3489 0827 05       		.uleb128 0x5
 3490 0828 03       		.byte	0x3
 3491 0829 00000000 		.4byte	currentInstruction
 3492 082d 26       		.uleb128 0x26
 3493 082e AC010000 		.4byte	.LASF92
 3494 0832 01       		.byte	0x1
 3495 0833 1D       		.byte	0x1d
 3496 0834 68000000 		.4byte	0x68
 3497 0838 05       		.uleb128 0x5
 3498 0839 03       		.byte	0x3
 3499 083a 00000000 		.4byte	numSteps
 3500 083e 26       		.uleb128 0x26
 3501 083f D5030000 		.4byte	.LASF93
 3502 0843 01       		.byte	0x1
 3503 0844 1F       		.byte	0x1f
 3504 0845 50050000 		.4byte	0x550
 3505 0849 05       		.uleb128 0x5
 3506 084a 03       		.byte	0x3
 3507 084b 00000000 		.4byte	instructionList
 3508 084f 25       		.uleb128 0x25
 3509 0850 733300   		.ascii	"s3\000"
 3510 0853 01       		.byte	0x1
 3511 0854 25       		.byte	0x25
 3512 0855 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 75


 3513 0859 05       		.uleb128 0x5
 3514 085a 03       		.byte	0x3
 3515 085b 00000000 		.4byte	s3
 3516 085f 25       		.uleb128 0x25
 3517 0860 733400   		.ascii	"s4\000"
 3518 0863 01       		.byte	0x1
 3519 0864 25       		.byte	0x25
 3520 0865 96000000 		.4byte	0x96
 3521 0869 05       		.uleb128 0x5
 3522 086a 03       		.byte	0x3
 3523 086b 00000000 		.4byte	s4
 3524 086f 25       		.uleb128 0x25
 3525 0870 733500   		.ascii	"s5\000"
 3526 0873 01       		.byte	0x1
 3527 0874 25       		.byte	0x25
 3528 0875 96000000 		.4byte	0x96
 3529 0879 05       		.uleb128 0x5
 3530 087a 03       		.byte	0x3
 3531 087b 00000000 		.4byte	s5
 3532 087f 25       		.uleb128 0x25
 3533 0880 733600   		.ascii	"s6\000"
 3534 0883 01       		.byte	0x1
 3535 0884 25       		.byte	0x25
 3536 0885 96000000 		.4byte	0x96
 3537 0889 05       		.uleb128 0x5
 3538 088a 03       		.byte	0x3
 3539 088b 00000000 		.4byte	s6
 3540 088f 26       		.uleb128 0x26
 3541 0890 E0050000 		.4byte	.LASF132
 3542 0894 01       		.byte	0x1
 3543 0895 2A       		.byte	0x2a
 3544 0896 AE000000 		.4byte	0xae
 3545 089a 05       		.uleb128 0x5
 3546 089b 03       		.byte	0x3
 3547 089c 00000000 		.4byte	totalMilliseconds
 3548 08a0 26       		.uleb128 0x26
 3549 08a1 78010000 		.4byte	.LASF133
 3550 08a5 01       		.byte	0x1
 3551 08a6 2B       		.byte	0x2b
 3552 08a7 D2000000 		.4byte	0xd2
 3553 08ab 05       		.uleb128 0x5
 3554 08ac 03       		.byte	0x3
 3555 08ad 00000000 		.4byte	totalDistance
 3556 08b1 07       		.uleb128 0x7
 3557 08b2 84000000 		.4byte	0x84
 3558 08b6 C1080000 		.4byte	0x8c1
 3559 08ba 08       		.uleb128 0x8
 3560 08bb 7D000000 		.4byte	0x7d
 3561 08bf 44       		.byte	0x44
 3562 08c0 00       		.byte	0
 3563 08c1 26       		.uleb128 0x26
 3564 08c2 61000000 		.4byte	.LASF134
 3565 08c6 01       		.byte	0x1
 3566 08c7 2D       		.byte	0x2d
 3567 08c8 B1080000 		.4byte	0x8b1
 3568 08cc 05       		.uleb128 0x5
 3569 08cd 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 76


 3570 08ce 00000000 		.4byte	buffer
 3571 08d2 26       		.uleb128 0x26
 3572 08d3 55020000 		.4byte	.LASF135
 3573 08d7 01       		.byte	0x1
 3574 08d8 2E       		.byte	0x2e
 3575 08d9 68000000 		.4byte	0x68
 3576 08dd 05       		.uleb128 0x5
 3577 08de 03       		.byte	0x3
 3578 08df 00000000 		.4byte	quadDec2Count
 3579 08e3 26       		.uleb128 0x26
 3580 08e4 2F080000 		.4byte	.LASF136
 3581 08e8 01       		.byte	0x1
 3582 08e9 2F       		.byte	0x2f
 3583 08ea 68000000 		.4byte	0x68
 3584 08ee 05       		.uleb128 0x5
 3585 08ef 03       		.byte	0x3
 3586 08f0 00000000 		.4byte	timerInt
 3587 08f4 26       		.uleb128 0x26
 3588 08f5 E8020000 		.4byte	.LASF137
 3589 08f9 01       		.byte	0x1
 3590 08fa 30       		.byte	0x30
 3591 08fb 68000000 		.4byte	0x68
 3592 08ff 05       		.uleb128 0x5
 3593 0900 03       		.byte	0x3
 3594 0901 00000000 		.4byte	keepLedOn
 3595 0905 26       		.uleb128 0x26
 3596 0906 87060000 		.4byte	.LASF138
 3597 090a 01       		.byte	0x1
 3598 090b 32       		.byte	0x32
 3599 090c AE000000 		.4byte	0xae
 3600 0910 05       		.uleb128 0x5
 3601 0911 03       		.byte	0x3
 3602 0912 00000000 		.4byte	stopBuffer
 3603 0916 26       		.uleb128 0x26
 3604 0917 F0040000 		.4byte	.LASF139
 3605 091b 01       		.byte	0x1
 3606 091c 42       		.byte	0x42
 3607 091d EA000000 		.4byte	0xea
 3608 0921 05       		.uleb128 0x5
 3609 0922 03       		.byte	0x3
 3610 0923 00000000 		.4byte	junctionConfiguration
 3611 0927 26       		.uleb128 0x26
 3612 0928 72040000 		.4byte	.LASF140
 3613 092c 01       		.byte	0x1
 3614 092d 44       		.byte	0x44
 3615 092e D2000000 		.4byte	0xd2
 3616 0932 05       		.uleb128 0x5
 3617 0933 03       		.byte	0x3
 3618 0934 00000000 		.4byte	blockSizeTotal
 3619 0938 26       		.uleb128 0x26
 3620 0939 02040000 		.4byte	.LASF141
 3621 093d 01       		.byte	0x1
 3622 093e CB       		.byte	0xcb
 3623 093f D2000000 		.4byte	0xd2
 3624 0943 05       		.uleb128 0x5
 3625 0944 03       		.byte	0x3
 3626 0945 00000000 		.4byte	xBlocksize
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 77


 3627 0949 26       		.uleb128 0x26
 3628 094a 97050000 		.4byte	.LASF142
 3629 094e 01       		.byte	0x1
 3630 094f CC       		.byte	0xcc
 3631 0950 D2000000 		.4byte	0xd2
 3632 0954 05       		.uleb128 0x5
 3633 0955 03       		.byte	0x3
 3634 0956 00000000 		.4byte	yBlocksize
 3635 095a 26       		.uleb128 0x26
 3636 095b 9F070000 		.4byte	.LASF143
 3637 095f 01       		.byte	0x1
 3638 0960 CD       		.byte	0xcd
 3639 0961 96000000 		.4byte	0x96
 3640 0965 05       		.uleb128 0x5
 3641 0966 03       		.byte	0x3
 3642 0967 00000000 		.4byte	currentRow
 3643 096b 26       		.uleb128 0x26
 3644 096c 0D080000 		.4byte	.LASF144
 3645 0970 01       		.byte	0x1
 3646 0971 CE       		.byte	0xce
 3647 0972 96000000 		.4byte	0x96
 3648 0976 05       		.uleb128 0x5
 3649 0977 03       		.byte	0x3
 3650 0978 00000000 		.4byte	currentCol
 3651 097c 26       		.uleb128 0x26
 3652 097d D9060000 		.4byte	.LASF145
 3653 0981 01       		.byte	0x1
 3654 0982 D0       		.byte	0xd0
 3655 0983 96000000 		.4byte	0x96
 3656 0987 05       		.uleb128 0x5
 3657 0988 03       		.byte	0x3
 3658 0989 00000000 		.4byte	stoppedAfterTurn
 3659 098d 26       		.uleb128 0x26
 3660 098e 3A030000 		.4byte	.LASF146
 3661 0992 01       		.byte	0x1
 3662 0993 D1       		.byte	0xd1
 3663 0994 96000000 		.4byte	0x96
 3664 0998 05       		.uleb128 0x5
 3665 0999 03       		.byte	0x3
 3666 099a 00000000 		.4byte	ignoreSensor
 3667 099e 26       		.uleb128 0x26
 3668 099f 56060000 		.4byte	.LASF147
 3669 09a3 01       		.byte	0x1
 3670 09a4 F9       		.byte	0xf9
 3671 09a5 7E020000 		.4byte	0x27e
 3672 09a9 05       		.uleb128 0x5
 3673 09aa 03       		.byte	0x3
 3674 09ab 00000000 		.4byte	lastDirectionAfter180
 3675 09af 00       		.byte	0
 3676              		.section	.debug_abbrev,"",%progbits
 3677              	.Ldebug_abbrev0:
 3678 0000 01       		.uleb128 0x1
 3679 0001 11       		.uleb128 0x11
 3680 0002 01       		.byte	0x1
 3681 0003 25       		.uleb128 0x25
 3682 0004 0E       		.uleb128 0xe
 3683 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 78


 3684 0006 0B       		.uleb128 0xb
 3685 0007 03       		.uleb128 0x3
 3686 0008 0E       		.uleb128 0xe
 3687 0009 1B       		.uleb128 0x1b
 3688 000a 0E       		.uleb128 0xe
 3689 000b 55       		.uleb128 0x55
 3690 000c 17       		.uleb128 0x17
 3691 000d 11       		.uleb128 0x11
 3692 000e 01       		.uleb128 0x1
 3693 000f 10       		.uleb128 0x10
 3694 0010 17       		.uleb128 0x17
 3695 0011 00       		.byte	0
 3696 0012 00       		.byte	0
 3697 0013 02       		.uleb128 0x2
 3698 0014 24       		.uleb128 0x24
 3699 0015 00       		.byte	0
 3700 0016 0B       		.uleb128 0xb
 3701 0017 0B       		.uleb128 0xb
 3702 0018 3E       		.uleb128 0x3e
 3703 0019 0B       		.uleb128 0xb
 3704 001a 03       		.uleb128 0x3
 3705 001b 0E       		.uleb128 0xe
 3706 001c 00       		.byte	0
 3707 001d 00       		.byte	0
 3708 001e 03       		.uleb128 0x3
 3709 001f 16       		.uleb128 0x16
 3710 0020 00       		.byte	0
 3711 0021 03       		.uleb128 0x3
 3712 0022 0E       		.uleb128 0xe
 3713 0023 3A       		.uleb128 0x3a
 3714 0024 0B       		.uleb128 0xb
 3715 0025 3B       		.uleb128 0x3b
 3716 0026 0B       		.uleb128 0xb
 3717 0027 49       		.uleb128 0x49
 3718 0028 13       		.uleb128 0x13
 3719 0029 00       		.byte	0
 3720 002a 00       		.byte	0
 3721 002b 04       		.uleb128 0x4
 3722 002c 24       		.uleb128 0x24
 3723 002d 00       		.byte	0
 3724 002e 0B       		.uleb128 0xb
 3725 002f 0B       		.uleb128 0xb
 3726 0030 3E       		.uleb128 0x3e
 3727 0031 0B       		.uleb128 0xb
 3728 0032 03       		.uleb128 0x3
 3729 0033 08       		.uleb128 0x8
 3730 0034 00       		.byte	0
 3731 0035 00       		.byte	0
 3732 0036 05       		.uleb128 0x5
 3733 0037 16       		.uleb128 0x16
 3734 0038 00       		.byte	0
 3735 0039 03       		.uleb128 0x3
 3736 003a 0E       		.uleb128 0xe
 3737 003b 3A       		.uleb128 0x3a
 3738 003c 0B       		.uleb128 0xb
 3739 003d 3B       		.uleb128 0x3b
 3740 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 79


 3741 003f 49       		.uleb128 0x49
 3742 0040 13       		.uleb128 0x13
 3743 0041 00       		.byte	0
 3744 0042 00       		.byte	0
 3745 0043 06       		.uleb128 0x6
 3746 0044 35       		.uleb128 0x35
 3747 0045 00       		.byte	0
 3748 0046 49       		.uleb128 0x49
 3749 0047 13       		.uleb128 0x13
 3750 0048 00       		.byte	0
 3751 0049 00       		.byte	0
 3752 004a 07       		.uleb128 0x7
 3753 004b 01       		.uleb128 0x1
 3754 004c 01       		.byte	0x1
 3755 004d 49       		.uleb128 0x49
 3756 004e 13       		.uleb128 0x13
 3757 004f 01       		.uleb128 0x1
 3758 0050 13       		.uleb128 0x13
 3759 0051 00       		.byte	0
 3760 0052 00       		.byte	0
 3761 0053 08       		.uleb128 0x8
 3762 0054 21       		.uleb128 0x21
 3763 0055 00       		.byte	0
 3764 0056 49       		.uleb128 0x49
 3765 0057 13       		.uleb128 0x13
 3766 0058 2F       		.uleb128 0x2f
 3767 0059 0B       		.uleb128 0xb
 3768 005a 00       		.byte	0
 3769 005b 00       		.byte	0
 3770 005c 09       		.uleb128 0x9
 3771 005d 13       		.uleb128 0x13
 3772 005e 01       		.byte	0x1
 3773 005f 03       		.uleb128 0x3
 3774 0060 0E       		.uleb128 0xe
 3775 0061 0B       		.uleb128 0xb
 3776 0062 0B       		.uleb128 0xb
 3777 0063 3A       		.uleb128 0x3a
 3778 0064 0B       		.uleb128 0xb
 3779 0065 3B       		.uleb128 0x3b
 3780 0066 0B       		.uleb128 0xb
 3781 0067 01       		.uleb128 0x1
 3782 0068 13       		.uleb128 0x13
 3783 0069 00       		.byte	0
 3784 006a 00       		.byte	0
 3785 006b 0A       		.uleb128 0xa
 3786 006c 0D       		.uleb128 0xd
 3787 006d 00       		.byte	0
 3788 006e 03       		.uleb128 0x3
 3789 006f 0E       		.uleb128 0xe
 3790 0070 3A       		.uleb128 0x3a
 3791 0071 0B       		.uleb128 0xb
 3792 0072 3B       		.uleb128 0x3b
 3793 0073 0B       		.uleb128 0xb
 3794 0074 49       		.uleb128 0x49
 3795 0075 13       		.uleb128 0x13
 3796 0076 38       		.uleb128 0x38
 3797 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 80


 3798 0078 00       		.byte	0
 3799 0079 00       		.byte	0
 3800 007a 0B       		.uleb128 0xb
 3801 007b 04       		.uleb128 0x4
 3802 007c 01       		.byte	0x1
 3803 007d 03       		.uleb128 0x3
 3804 007e 0E       		.uleb128 0xe
 3805 007f 0B       		.uleb128 0xb
 3806 0080 0B       		.uleb128 0xb
 3807 0081 49       		.uleb128 0x49
 3808 0082 13       		.uleb128 0x13
 3809 0083 3A       		.uleb128 0x3a
 3810 0084 0B       		.uleb128 0xb
 3811 0085 3B       		.uleb128 0x3b
 3812 0086 0B       		.uleb128 0xb
 3813 0087 01       		.uleb128 0x1
 3814 0088 13       		.uleb128 0x13
 3815 0089 00       		.byte	0
 3816 008a 00       		.byte	0
 3817 008b 0C       		.uleb128 0xc
 3818 008c 28       		.uleb128 0x28
 3819 008d 00       		.byte	0
 3820 008e 03       		.uleb128 0x3
 3821 008f 08       		.uleb128 0x8
 3822 0090 1C       		.uleb128 0x1c
 3823 0091 0B       		.uleb128 0xb
 3824 0092 00       		.byte	0
 3825 0093 00       		.byte	0
 3826 0094 0D       		.uleb128 0xd
 3827 0095 28       		.uleb128 0x28
 3828 0096 00       		.byte	0
 3829 0097 03       		.uleb128 0x3
 3830 0098 0E       		.uleb128 0xe
 3831 0099 1C       		.uleb128 0x1c
 3832 009a 0B       		.uleb128 0xb
 3833 009b 00       		.byte	0
 3834 009c 00       		.byte	0
 3835 009d 0E       		.uleb128 0xe
 3836 009e 2E       		.uleb128 0x2e
 3837 009f 01       		.byte	0x1
 3838 00a0 3F       		.uleb128 0x3f
 3839 00a1 19       		.uleb128 0x19
 3840 00a2 03       		.uleb128 0x3
 3841 00a3 0E       		.uleb128 0xe
 3842 00a4 3A       		.uleb128 0x3a
 3843 00a5 0B       		.uleb128 0xb
 3844 00a6 3B       		.uleb128 0x3b
 3845 00a7 0B       		.uleb128 0xb
 3846 00a8 27       		.uleb128 0x27
 3847 00a9 19       		.uleb128 0x19
 3848 00aa 11       		.uleb128 0x11
 3849 00ab 01       		.uleb128 0x1
 3850 00ac 12       		.uleb128 0x12
 3851 00ad 06       		.uleb128 0x6
 3852 00ae 40       		.uleb128 0x40
 3853 00af 18       		.uleb128 0x18
 3854 00b0 9642     		.uleb128 0x2116
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 81


 3855 00b2 19       		.uleb128 0x19
 3856 00b3 01       		.uleb128 0x1
 3857 00b4 13       		.uleb128 0x13
 3858 00b5 00       		.byte	0
 3859 00b6 00       		.byte	0
 3860 00b7 0F       		.uleb128 0xf
 3861 00b8 0B       		.uleb128 0xb
 3862 00b9 01       		.byte	0x1
 3863 00ba 11       		.uleb128 0x11
 3864 00bb 01       		.uleb128 0x1
 3865 00bc 12       		.uleb128 0x12
 3866 00bd 06       		.uleb128 0x6
 3867 00be 00       		.byte	0
 3868 00bf 00       		.byte	0
 3869 00c0 10       		.uleb128 0x10
 3870 00c1 34       		.uleb128 0x34
 3871 00c2 00       		.byte	0
 3872 00c3 03       		.uleb128 0x3
 3873 00c4 0E       		.uleb128 0xe
 3874 00c5 3A       		.uleb128 0x3a
 3875 00c6 0B       		.uleb128 0xb
 3876 00c7 3B       		.uleb128 0x3b
 3877 00c8 0B       		.uleb128 0xb
 3878 00c9 49       		.uleb128 0x49
 3879 00ca 13       		.uleb128 0x13
 3880 00cb 02       		.uleb128 0x2
 3881 00cc 18       		.uleb128 0x18
 3882 00cd 00       		.byte	0
 3883 00ce 00       		.byte	0
 3884 00cf 11       		.uleb128 0x11
 3885 00d0 2E       		.uleb128 0x2e
 3886 00d1 00       		.byte	0
 3887 00d2 3F       		.uleb128 0x3f
 3888 00d3 19       		.uleb128 0x19
 3889 00d4 03       		.uleb128 0x3
 3890 00d5 0E       		.uleb128 0xe
 3891 00d6 3A       		.uleb128 0x3a
 3892 00d7 0B       		.uleb128 0xb
 3893 00d8 3B       		.uleb128 0x3b
 3894 00d9 0B       		.uleb128 0xb
 3895 00da 27       		.uleb128 0x27
 3896 00db 19       		.uleb128 0x19
 3897 00dc 11       		.uleb128 0x11
 3898 00dd 01       		.uleb128 0x1
 3899 00de 12       		.uleb128 0x12
 3900 00df 06       		.uleb128 0x6
 3901 00e0 40       		.uleb128 0x40
 3902 00e1 18       		.uleb128 0x18
 3903 00e2 9742     		.uleb128 0x2117
 3904 00e4 19       		.uleb128 0x19
 3905 00e5 00       		.byte	0
 3906 00e6 00       		.byte	0
 3907 00e7 12       		.uleb128 0x12
 3908 00e8 2E       		.uleb128 0x2e
 3909 00e9 00       		.byte	0
 3910 00ea 3F       		.uleb128 0x3f
 3911 00eb 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 82


 3912 00ec 03       		.uleb128 0x3
 3913 00ed 0E       		.uleb128 0xe
 3914 00ee 3A       		.uleb128 0x3a
 3915 00ef 0B       		.uleb128 0xb
 3916 00f0 3B       		.uleb128 0x3b
 3917 00f1 0B       		.uleb128 0xb
 3918 00f2 27       		.uleb128 0x27
 3919 00f3 19       		.uleb128 0x19
 3920 00f4 11       		.uleb128 0x11
 3921 00f5 01       		.uleb128 0x1
 3922 00f6 12       		.uleb128 0x12
 3923 00f7 06       		.uleb128 0x6
 3924 00f8 40       		.uleb128 0x40
 3925 00f9 18       		.uleb128 0x18
 3926 00fa 9642     		.uleb128 0x2116
 3927 00fc 19       		.uleb128 0x19
 3928 00fd 00       		.byte	0
 3929 00fe 00       		.byte	0
 3930 00ff 13       		.uleb128 0x13
 3931 0100 2E       		.uleb128 0x2e
 3932 0101 00       		.byte	0
 3933 0102 3F       		.uleb128 0x3f
 3934 0103 19       		.uleb128 0x19
 3935 0104 03       		.uleb128 0x3
 3936 0105 0E       		.uleb128 0xe
 3937 0106 3A       		.uleb128 0x3a
 3938 0107 0B       		.uleb128 0xb
 3939 0108 3B       		.uleb128 0x3b
 3940 0109 0B       		.uleb128 0xb
 3941 010a 49       		.uleb128 0x49
 3942 010b 13       		.uleb128 0x13
 3943 010c 11       		.uleb128 0x11
 3944 010d 01       		.uleb128 0x1
 3945 010e 12       		.uleb128 0x12
 3946 010f 06       		.uleb128 0x6
 3947 0110 40       		.uleb128 0x40
 3948 0111 18       		.uleb128 0x18
 3949 0112 9642     		.uleb128 0x2116
 3950 0114 19       		.uleb128 0x19
 3951 0115 00       		.byte	0
 3952 0116 00       		.byte	0
 3953 0117 14       		.uleb128 0x14
 3954 0118 2E       		.uleb128 0x2e
 3955 0119 01       		.byte	0x1
 3956 011a 3F       		.uleb128 0x3f
 3957 011b 19       		.uleb128 0x19
 3958 011c 03       		.uleb128 0x3
 3959 011d 0E       		.uleb128 0xe
 3960 011e 3A       		.uleb128 0x3a
 3961 011f 0B       		.uleb128 0xb
 3962 0120 3B       		.uleb128 0x3b
 3963 0121 0B       		.uleb128 0xb
 3964 0122 27       		.uleb128 0x27
 3965 0123 19       		.uleb128 0x19
 3966 0124 49       		.uleb128 0x49
 3967 0125 13       		.uleb128 0x13
 3968 0126 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 83


 3969 0127 01       		.uleb128 0x1
 3970 0128 12       		.uleb128 0x12
 3971 0129 06       		.uleb128 0x6
 3972 012a 40       		.uleb128 0x40
 3973 012b 18       		.uleb128 0x18
 3974 012c 9642     		.uleb128 0x2116
 3975 012e 19       		.uleb128 0x19
 3976 012f 01       		.uleb128 0x1
 3977 0130 13       		.uleb128 0x13
 3978 0131 00       		.byte	0
 3979 0132 00       		.byte	0
 3980 0133 15       		.uleb128 0x15
 3981 0134 05       		.uleb128 0x5
 3982 0135 00       		.byte	0
 3983 0136 03       		.uleb128 0x3
 3984 0137 0E       		.uleb128 0xe
 3985 0138 3A       		.uleb128 0x3a
 3986 0139 0B       		.uleb128 0xb
 3987 013a 3B       		.uleb128 0x3b
 3988 013b 0B       		.uleb128 0xb
 3989 013c 49       		.uleb128 0x49
 3990 013d 13       		.uleb128 0x13
 3991 013e 02       		.uleb128 0x2
 3992 013f 18       		.uleb128 0x18
 3993 0140 00       		.byte	0
 3994 0141 00       		.byte	0
 3995 0142 16       		.uleb128 0x16
 3996 0143 34       		.uleb128 0x34
 3997 0144 00       		.byte	0
 3998 0145 03       		.uleb128 0x3
 3999 0146 08       		.uleb128 0x8
 4000 0147 3A       		.uleb128 0x3a
 4001 0148 0B       		.uleb128 0xb
 4002 0149 3B       		.uleb128 0x3b
 4003 014a 0B       		.uleb128 0xb
 4004 014b 49       		.uleb128 0x49
 4005 014c 13       		.uleb128 0x13
 4006 014d 02       		.uleb128 0x2
 4007 014e 18       		.uleb128 0x18
 4008 014f 00       		.byte	0
 4009 0150 00       		.byte	0
 4010 0151 17       		.uleb128 0x17
 4011 0152 2E       		.uleb128 0x2e
 4012 0153 00       		.byte	0
 4013 0154 3F       		.uleb128 0x3f
 4014 0155 19       		.uleb128 0x19
 4015 0156 03       		.uleb128 0x3
 4016 0157 0E       		.uleb128 0xe
 4017 0158 3A       		.uleb128 0x3a
 4018 0159 0B       		.uleb128 0xb
 4019 015a 3B       		.uleb128 0x3b
 4020 015b 0B       		.uleb128 0xb
 4021 015c 11       		.uleb128 0x11
 4022 015d 01       		.uleb128 0x1
 4023 015e 12       		.uleb128 0x12
 4024 015f 06       		.uleb128 0x6
 4025 0160 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 84


 4026 0161 18       		.uleb128 0x18
 4027 0162 9742     		.uleb128 0x2117
 4028 0164 19       		.uleb128 0x19
 4029 0165 00       		.byte	0
 4030 0166 00       		.byte	0
 4031 0167 18       		.uleb128 0x18
 4032 0168 2E       		.uleb128 0x2e
 4033 0169 00       		.byte	0
 4034 016a 3F       		.uleb128 0x3f
 4035 016b 19       		.uleb128 0x19
 4036 016c 03       		.uleb128 0x3
 4037 016d 0E       		.uleb128 0xe
 4038 016e 3A       		.uleb128 0x3a
 4039 016f 0B       		.uleb128 0xb
 4040 0170 3B       		.uleb128 0x3b
 4041 0171 0B       		.uleb128 0xb
 4042 0172 49       		.uleb128 0x49
 4043 0173 13       		.uleb128 0x13
 4044 0174 11       		.uleb128 0x11
 4045 0175 01       		.uleb128 0x1
 4046 0176 12       		.uleb128 0x12
 4047 0177 06       		.uleb128 0x6
 4048 0178 40       		.uleb128 0x40
 4049 0179 18       		.uleb128 0x18
 4050 017a 9742     		.uleb128 0x2117
 4051 017c 19       		.uleb128 0x19
 4052 017d 00       		.byte	0
 4053 017e 00       		.byte	0
 4054 017f 19       		.uleb128 0x19
 4055 0180 2E       		.uleb128 0x2e
 4056 0181 01       		.byte	0x1
 4057 0182 3F       		.uleb128 0x3f
 4058 0183 19       		.uleb128 0x19
 4059 0184 03       		.uleb128 0x3
 4060 0185 0E       		.uleb128 0xe
 4061 0186 3A       		.uleb128 0x3a
 4062 0187 0B       		.uleb128 0xb
 4063 0188 3B       		.uleb128 0x3b
 4064 0189 05       		.uleb128 0x5
 4065 018a 49       		.uleb128 0x49
 4066 018b 13       		.uleb128 0x13
 4067 018c 11       		.uleb128 0x11
 4068 018d 01       		.uleb128 0x1
 4069 018e 12       		.uleb128 0x12
 4070 018f 06       		.uleb128 0x6
 4071 0190 40       		.uleb128 0x40
 4072 0191 18       		.uleb128 0x18
 4073 0192 9642     		.uleb128 0x2116
 4074 0194 19       		.uleb128 0x19
 4075 0195 01       		.uleb128 0x1
 4076 0196 13       		.uleb128 0x13
 4077 0197 00       		.byte	0
 4078 0198 00       		.byte	0
 4079 0199 1A       		.uleb128 0x1a
 4080 019a 34       		.uleb128 0x34
 4081 019b 00       		.byte	0
 4082 019c 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 85


 4083 019d 0E       		.uleb128 0xe
 4084 019e 3A       		.uleb128 0x3a
 4085 019f 0B       		.uleb128 0xb
 4086 01a0 3B       		.uleb128 0x3b
 4087 01a1 05       		.uleb128 0x5
 4088 01a2 49       		.uleb128 0x49
 4089 01a3 13       		.uleb128 0x13
 4090 01a4 02       		.uleb128 0x2
 4091 01a5 18       		.uleb128 0x18
 4092 01a6 00       		.byte	0
 4093 01a7 00       		.byte	0
 4094 01a8 1B       		.uleb128 0x1b
 4095 01a9 2E       		.uleb128 0x2e
 4096 01aa 01       		.byte	0x1
 4097 01ab 3F       		.uleb128 0x3f
 4098 01ac 19       		.uleb128 0x19
 4099 01ad 03       		.uleb128 0x3
 4100 01ae 0E       		.uleb128 0xe
 4101 01af 3A       		.uleb128 0x3a
 4102 01b0 0B       		.uleb128 0xb
 4103 01b1 3B       		.uleb128 0x3b
 4104 01b2 05       		.uleb128 0x5
 4105 01b3 27       		.uleb128 0x27
 4106 01b4 19       		.uleb128 0x19
 4107 01b5 49       		.uleb128 0x49
 4108 01b6 13       		.uleb128 0x13
 4109 01b7 11       		.uleb128 0x11
 4110 01b8 01       		.uleb128 0x1
 4111 01b9 12       		.uleb128 0x12
 4112 01ba 06       		.uleb128 0x6
 4113 01bb 40       		.uleb128 0x40
 4114 01bc 18       		.uleb128 0x18
 4115 01bd 9642     		.uleb128 0x2116
 4116 01bf 19       		.uleb128 0x19
 4117 01c0 01       		.uleb128 0x1
 4118 01c1 13       		.uleb128 0x13
 4119 01c2 00       		.byte	0
 4120 01c3 00       		.byte	0
 4121 01c4 1C       		.uleb128 0x1c
 4122 01c5 05       		.uleb128 0x5
 4123 01c6 00       		.byte	0
 4124 01c7 03       		.uleb128 0x3
 4125 01c8 0E       		.uleb128 0xe
 4126 01c9 3A       		.uleb128 0x3a
 4127 01ca 0B       		.uleb128 0xb
 4128 01cb 3B       		.uleb128 0x3b
 4129 01cc 05       		.uleb128 0x5
 4130 01cd 49       		.uleb128 0x49
 4131 01ce 13       		.uleb128 0x13
 4132 01cf 02       		.uleb128 0x2
 4133 01d0 18       		.uleb128 0x18
 4134 01d1 00       		.byte	0
 4135 01d2 00       		.byte	0
 4136 01d3 1D       		.uleb128 0x1d
 4137 01d4 0B       		.uleb128 0xb
 4138 01d5 01       		.byte	0x1
 4139 01d6 55       		.uleb128 0x55
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 86


 4140 01d7 17       		.uleb128 0x17
 4141 01d8 01       		.uleb128 0x1
 4142 01d9 13       		.uleb128 0x13
 4143 01da 00       		.byte	0
 4144 01db 00       		.byte	0
 4145 01dc 1E       		.uleb128 0x1e
 4146 01dd 34       		.uleb128 0x34
 4147 01de 00       		.byte	0
 4148 01df 03       		.uleb128 0x3
 4149 01e0 08       		.uleb128 0x8
 4150 01e1 3A       		.uleb128 0x3a
 4151 01e2 0B       		.uleb128 0xb
 4152 01e3 3B       		.uleb128 0x3b
 4153 01e4 05       		.uleb128 0x5
 4154 01e5 49       		.uleb128 0x49
 4155 01e6 13       		.uleb128 0x13
 4156 01e7 02       		.uleb128 0x2
 4157 01e8 18       		.uleb128 0x18
 4158 01e9 00       		.byte	0
 4159 01ea 00       		.byte	0
 4160 01eb 1F       		.uleb128 0x1f
 4161 01ec 0B       		.uleb128 0xb
 4162 01ed 01       		.byte	0x1
 4163 01ee 55       		.uleb128 0x55
 4164 01ef 17       		.uleb128 0x17
 4165 01f0 00       		.byte	0
 4166 01f1 00       		.byte	0
 4167 01f2 20       		.uleb128 0x20
 4168 01f3 2E       		.uleb128 0x2e
 4169 01f4 00       		.byte	0
 4170 01f5 3F       		.uleb128 0x3f
 4171 01f6 19       		.uleb128 0x19
 4172 01f7 03       		.uleb128 0x3
 4173 01f8 0E       		.uleb128 0xe
 4174 01f9 3A       		.uleb128 0x3a
 4175 01fa 0B       		.uleb128 0xb
 4176 01fb 3B       		.uleb128 0x3b
 4177 01fc 05       		.uleb128 0x5
 4178 01fd 11       		.uleb128 0x11
 4179 01fe 01       		.uleb128 0x1
 4180 01ff 12       		.uleb128 0x12
 4181 0200 06       		.uleb128 0x6
 4182 0201 40       		.uleb128 0x40
 4183 0202 18       		.uleb128 0x18
 4184 0203 9742     		.uleb128 0x2117
 4185 0205 19       		.uleb128 0x19
 4186 0206 00       		.byte	0
 4187 0207 00       		.byte	0
 4188 0208 21       		.uleb128 0x21
 4189 0209 2E       		.uleb128 0x2e
 4190 020a 01       		.byte	0x1
 4191 020b 3F       		.uleb128 0x3f
 4192 020c 19       		.uleb128 0x19
 4193 020d 03       		.uleb128 0x3
 4194 020e 0E       		.uleb128 0xe
 4195 020f 3A       		.uleb128 0x3a
 4196 0210 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 87


 4197 0211 3B       		.uleb128 0x3b
 4198 0212 05       		.uleb128 0x5
 4199 0213 27       		.uleb128 0x27
 4200 0214 19       		.uleb128 0x19
 4201 0215 49       		.uleb128 0x49
 4202 0216 13       		.uleb128 0x13
 4203 0217 11       		.uleb128 0x11
 4204 0218 01       		.uleb128 0x1
 4205 0219 12       		.uleb128 0x12
 4206 021a 06       		.uleb128 0x6
 4207 021b 40       		.uleb128 0x40
 4208 021c 18       		.uleb128 0x18
 4209 021d 9742     		.uleb128 0x2117
 4210 021f 19       		.uleb128 0x19
 4211 0220 01       		.uleb128 0x1
 4212 0221 13       		.uleb128 0x13
 4213 0222 00       		.byte	0
 4214 0223 00       		.byte	0
 4215 0224 22       		.uleb128 0x22
 4216 0225 0F       		.uleb128 0xf
 4217 0226 00       		.byte	0
 4218 0227 0B       		.uleb128 0xb
 4219 0228 0B       		.uleb128 0xb
 4220 0229 49       		.uleb128 0x49
 4221 022a 13       		.uleb128 0x13
 4222 022b 00       		.byte	0
 4223 022c 00       		.byte	0
 4224 022d 23       		.uleb128 0x23
 4225 022e 2E       		.uleb128 0x2e
 4226 022f 00       		.byte	0
 4227 0230 3F       		.uleb128 0x3f
 4228 0231 19       		.uleb128 0x19
 4229 0232 03       		.uleb128 0x3
 4230 0233 0E       		.uleb128 0xe
 4231 0234 3A       		.uleb128 0x3a
 4232 0235 0B       		.uleb128 0xb
 4233 0236 3B       		.uleb128 0x3b
 4234 0237 05       		.uleb128 0x5
 4235 0238 11       		.uleb128 0x11
 4236 0239 01       		.uleb128 0x1
 4237 023a 12       		.uleb128 0x12
 4238 023b 06       		.uleb128 0x6
 4239 023c 40       		.uleb128 0x40
 4240 023d 18       		.uleb128 0x18
 4241 023e 9642     		.uleb128 0x2116
 4242 0240 19       		.uleb128 0x19
 4243 0241 00       		.byte	0
 4244 0242 00       		.byte	0
 4245 0243 24       		.uleb128 0x24
 4246 0244 34       		.uleb128 0x34
 4247 0245 00       		.byte	0
 4248 0246 03       		.uleb128 0x3
 4249 0247 0E       		.uleb128 0xe
 4250 0248 3A       		.uleb128 0x3a
 4251 0249 0B       		.uleb128 0xb
 4252 024a 3B       		.uleb128 0x3b
 4253 024b 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 88


 4254 024c 49       		.uleb128 0x49
 4255 024d 13       		.uleb128 0x13
 4256 024e 3F       		.uleb128 0x3f
 4257 024f 19       		.uleb128 0x19
 4258 0250 3C       		.uleb128 0x3c
 4259 0251 19       		.uleb128 0x19
 4260 0252 00       		.byte	0
 4261 0253 00       		.byte	0
 4262 0254 25       		.uleb128 0x25
 4263 0255 34       		.uleb128 0x34
 4264 0256 00       		.byte	0
 4265 0257 03       		.uleb128 0x3
 4266 0258 08       		.uleb128 0x8
 4267 0259 3A       		.uleb128 0x3a
 4268 025a 0B       		.uleb128 0xb
 4269 025b 3B       		.uleb128 0x3b
 4270 025c 0B       		.uleb128 0xb
 4271 025d 49       		.uleb128 0x49
 4272 025e 13       		.uleb128 0x13
 4273 025f 3F       		.uleb128 0x3f
 4274 0260 19       		.uleb128 0x19
 4275 0261 02       		.uleb128 0x2
 4276 0262 18       		.uleb128 0x18
 4277 0263 00       		.byte	0
 4278 0264 00       		.byte	0
 4279 0265 26       		.uleb128 0x26
 4280 0266 34       		.uleb128 0x34
 4281 0267 00       		.byte	0
 4282 0268 03       		.uleb128 0x3
 4283 0269 0E       		.uleb128 0xe
 4284 026a 3A       		.uleb128 0x3a
 4285 026b 0B       		.uleb128 0xb
 4286 026c 3B       		.uleb128 0x3b
 4287 026d 0B       		.uleb128 0xb
 4288 026e 49       		.uleb128 0x49
 4289 026f 13       		.uleb128 0x13
 4290 0270 3F       		.uleb128 0x3f
 4291 0271 19       		.uleb128 0x19
 4292 0272 02       		.uleb128 0x2
 4293 0273 18       		.uleb128 0x18
 4294 0274 00       		.byte	0
 4295 0275 00       		.byte	0
 4296 0276 27       		.uleb128 0x27
 4297 0277 34       		.uleb128 0x34
 4298 0278 00       		.byte	0
 4299 0279 03       		.uleb128 0x3
 4300 027a 08       		.uleb128 0x8
 4301 027b 3A       		.uleb128 0x3a
 4302 027c 0B       		.uleb128 0xb
 4303 027d 3B       		.uleb128 0x3b
 4304 027e 0B       		.uleb128 0xb
 4305 027f 49       		.uleb128 0x49
 4306 0280 13       		.uleb128 0x13
 4307 0281 3F       		.uleb128 0x3f
 4308 0282 19       		.uleb128 0x19
 4309 0283 3C       		.uleb128 0x3c
 4310 0284 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 89


 4311 0285 00       		.byte	0
 4312 0286 00       		.byte	0
 4313 0287 28       		.uleb128 0x28
 4314 0288 34       		.uleb128 0x34
 4315 0289 00       		.byte	0
 4316 028a 03       		.uleb128 0x3
 4317 028b 0E       		.uleb128 0xe
 4318 028c 3A       		.uleb128 0x3a
 4319 028d 0B       		.uleb128 0xb
 4320 028e 3B       		.uleb128 0x3b
 4321 028f 0B       		.uleb128 0xb
 4322 0290 49       		.uleb128 0x49
 4323 0291 13       		.uleb128 0x13
 4324 0292 3F       		.uleb128 0x3f
 4325 0293 19       		.uleb128 0x19
 4326 0294 3C       		.uleb128 0x3c
 4327 0295 19       		.uleb128 0x19
 4328 0296 00       		.byte	0
 4329 0297 00       		.byte	0
 4330 0298 00       		.byte	0
 4331              		.section	.debug_aranges,"",%progbits
 4332 0000 94000000 		.4byte	0x94
 4333 0004 0200     		.2byte	0x2
 4334 0006 00000000 		.4byte	.Ldebug_info0
 4335 000a 04       		.byte	0x4
 4336 000b 00       		.byte	0
 4337 000c 0000     		.2byte	0
 4338 000e 0000     		.2byte	0
 4339 0010 00000000 		.4byte	.LFB64
 4340 0014 EC000000 		.4byte	.LFE64-.LFB64
 4341 0018 00000000 		.4byte	.LFB65
 4342 001c 18000000 		.4byte	.LFE65-.LFB65
 4343 0020 00000000 		.4byte	.LFB66
 4344 0024 18000000 		.4byte	.LFE66-.LFB66
 4345 0028 00000000 		.4byte	.LFB67
 4346 002c 18000000 		.4byte	.LFE67-.LFB67
 4347 0030 00000000 		.4byte	.LFB68
 4348 0034 18000000 		.4byte	.LFE68-.LFB68
 4349 0038 00000000 		.4byte	.LFB69
 4350 003c 38000000 		.4byte	.LFE69-.LFB69
 4351 0040 00000000 		.4byte	.LFB70
 4352 0044 14010000 		.4byte	.LFE70-.LFB70
 4353 0048 00000000 		.4byte	.LFB71
 4354 004c 54000000 		.4byte	.LFE71-.LFB71
 4355 0050 00000000 		.4byte	.LFB72
 4356 0054 34000000 		.4byte	.LFE72-.LFB72
 4357 0058 00000000 		.4byte	.LFB73
 4358 005c 84000000 		.4byte	.LFE73-.LFB73
 4359 0060 00000000 		.4byte	.LFB74
 4360 0064 7C000000 		.4byte	.LFE74-.LFB74
 4361 0068 00000000 		.4byte	.LFB75
 4362 006c E8030000 		.4byte	.LFE75-.LFB75
 4363 0070 00000000 		.4byte	.LFB76
 4364 0074 90020000 		.4byte	.LFE76-.LFB76
 4365 0078 00000000 		.4byte	.LFB77
 4366 007c 5C000000 		.4byte	.LFE77-.LFB77
 4367 0080 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 90


 4368 0084 7C000000 		.4byte	.LFE78-.LFB78
 4369 0088 00000000 		.4byte	.LFB79
 4370 008c C4000000 		.4byte	.LFE79-.LFB79
 4371 0090 00000000 		.4byte	0
 4372 0094 00000000 		.4byte	0
 4373              		.section	.debug_ranges,"",%progbits
 4374              	.Ldebug_ranges0:
 4375 0000 38000000 		.4byte	.LBB3
 4376 0004 BC000000 		.4byte	.LBE3
 4377 0008 BE000000 		.4byte	.LBB4
 4378 000c C0000000 		.4byte	.LBE4
 4379 0010 00000000 		.4byte	0
 4380 0014 00000000 		.4byte	0
 4381 0018 C2000000 		.4byte	.LBB5
 4382 001c 46010000 		.4byte	.LBE5
 4383 0020 48010000 		.4byte	.LBB6
 4384 0024 4A010000 		.4byte	.LBE6
 4385 0028 00000000 		.4byte	0
 4386 002c 00000000 		.4byte	0
 4387 0030 4C010000 		.4byte	.LBB7
 4388 0034 D0010000 		.4byte	.LBE7
 4389 0038 D2010000 		.4byte	.LBB8
 4390 003c D4010000 		.4byte	.LBE8
 4391 0040 00000000 		.4byte	0
 4392 0044 00000000 		.4byte	0
 4393 0048 D6010000 		.4byte	.LBB9
 4394 004c 5A020000 		.4byte	.LBE9
 4395 0050 5C020000 		.4byte	.LBB10
 4396 0054 5E020000 		.4byte	.LBE10
 4397 0058 00000000 		.4byte	0
 4398 005c 00000000 		.4byte	0
 4399 0060 00000000 		.4byte	.LFB64
 4400 0064 EC000000 		.4byte	.LFE64
 4401 0068 00000000 		.4byte	.LFB65
 4402 006c 18000000 		.4byte	.LFE65
 4403 0070 00000000 		.4byte	.LFB66
 4404 0074 18000000 		.4byte	.LFE66
 4405 0078 00000000 		.4byte	.LFB67
 4406 007c 18000000 		.4byte	.LFE67
 4407 0080 00000000 		.4byte	.LFB68
 4408 0084 18000000 		.4byte	.LFE68
 4409 0088 00000000 		.4byte	.LFB69
 4410 008c 38000000 		.4byte	.LFE69
 4411 0090 00000000 		.4byte	.LFB70
 4412 0094 14010000 		.4byte	.LFE70
 4413 0098 00000000 		.4byte	.LFB71
 4414 009c 54000000 		.4byte	.LFE71
 4415 00a0 00000000 		.4byte	.LFB72
 4416 00a4 34000000 		.4byte	.LFE72
 4417 00a8 00000000 		.4byte	.LFB73
 4418 00ac 84000000 		.4byte	.LFE73
 4419 00b0 00000000 		.4byte	.LFB74
 4420 00b4 7C000000 		.4byte	.LFE74
 4421 00b8 00000000 		.4byte	.LFB75
 4422 00bc E8030000 		.4byte	.LFE75
 4423 00c0 00000000 		.4byte	.LFB76
 4424 00c4 90020000 		.4byte	.LFE76
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 91


 4425 00c8 00000000 		.4byte	.LFB77
 4426 00cc 5C000000 		.4byte	.LFE77
 4427 00d0 00000000 		.4byte	.LFB78
 4428 00d4 7C000000 		.4byte	.LFE78
 4429 00d8 00000000 		.4byte	.LFB79
 4430 00dc C4000000 		.4byte	.LFE79
 4431 00e0 00000000 		.4byte	0
 4432 00e4 00000000 		.4byte	0
 4433              		.section	.debug_line,"",%progbits
 4434              	.Ldebug_line0:
 4435 0000 7B040000 		.section	.debug_str,"MS",%progbits,1
 4435      02007001 
 4435      00000201 
 4435      FB0E0D00 
 4435      01010101 
 4436              	.LASF52:
 4437 0000 64697265 		.ascii	"direction\000"
 4437      6374696F 
 4437      6E00
 4438              	.LASF65:
 4439 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4439      61726441 
 4439      66746572 
 4439      5475726E 
 4439      00
 4440              	.LASF42:
 4441 001b 496E7374 		.ascii	"InstructionDirection\000"
 4441      72756374 
 4441      696F6E44 
 4441      69726563 
 4441      74696F6E 
 4442              	.LASF149:
 4443 0030 6D61696E 		.ascii	"main.c\000"
 4443      2E6300
 4444              	.LASF103:
 4445 0037 72696768 		.ascii	"rightStatusFlag\000"
 4445      74537461 
 4445      74757346 
 4445      6C616700 
 4446              	.LASF97:
 4447 0047 7475726E 		.ascii	"turnStartedFlag\000"
 4447      53746172 
 4447      74656446 
 4447      6C616700 
 4448              	.LASF79:
 4449 0057 626C6F63 		.ascii	"blocksize\000"
 4449      6B73697A 
 4449      6500
 4450              	.LASF134:
 4451 0061 62756666 		.ascii	"buffer\000"
 4451      657200
 4452              	.LASF8:
 4453 0068 756E7369 		.ascii	"unsigned int\000"
 4453      676E6564 
 4453      20696E74 
 4453      00
 4454              	.LASF12:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 92


 4455 0075 5F5F696E 		.ascii	"__int32_t\000"
 4455      7433325F 
 4455      7400
 4456              	.LASF18:
 4457 007f 696E7431 		.ascii	"int16\000"
 4457      3600
 4458              	.LASF125:
 4459 0085 73797374 		.ascii	"system_state\000"
 4459      656D5F73 
 4459      74617465 
 4459      00
 4460              	.LASF94:
 4461 0092 6E657874 		.ascii	"nextInstruction\000"
 4461      496E7374 
 4461      72756374 
 4461      696F6E00 
 4462              	.LASF148:
 4463 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4463      43313120 
 4463      352E342E 
 4463      31203230 
 4463      31363036 
 4464 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4464      20726576 
 4464      6973696F 
 4464      6E203233 
 4464      37373135 
 4465 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4465      66756E63 
 4465      74696F6E 
 4465      2D736563 
 4465      74696F6E 
 4466              	.LASF47:
 4467 0130 466F7277 		.ascii	"ForwardUntilTarget\000"
 4467      61726455 
 4467      6E74696C 
 4467      54617267 
 4467      657400
 4468              	.LASF55:
 4469 0143 65787065 		.ascii	"expectedOrientation\000"
 4469      63746564 
 4469      4F726965 
 4469      6E746174 
 4469      696F6E00 
 4470              	.LASF76:
 4471 0157 5370696E 		.ascii	"SpinCourseCorrection\000"
 4471      436F7572 
 4471      7365436F 
 4471      72726563 
 4471      74696F6E 
 4472              	.LASF71:
 4473 016c 53365F44 		.ascii	"S6_DETECTED\000"
 4473      45544543 
 4473      54454400 
 4474              	.LASF133:
 4475 0178 746F7461 		.ascii	"totalDistance\000"
 4475      6C446973 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 93


 4475      74616E63 
 4475      6500
 4476              	.LASF34:
 4477 0186 67325F78 		.ascii	"g2_xpos\000"
 4477      706F7300 
 4478              	.LASF99:
 4479 018e 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4479      61726455 
 4479      6E74696C 
 4479      54617267 
 4479      65745374 
 4480              	.LASF92:
 4481 01ac 6E756D53 		.ascii	"numSteps\000"
 4481      74657073 
 4481      00
 4482              	.LASF86:
 4483 01b5 74617267 		.ascii	"targetRow\000"
 4483      6574526F 
 4483      7700
 4484              	.LASF78:
 4485 01bf 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4485      6F76656D 
 4485      656E7441 
 4485      63636F72 
 4485      64696E67 
 4486              	.LASF120:
 4487 01e1 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4487      5F72665F 
 4487      7472616E 
 4487      736D6973 
 4487      73696F6E 
 4488              	.LASF75:
 4489 01fd 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4489      61726443 
 4489      6F757273 
 4489      65436F72 
 4489      72656374 
 4490              	.LASF129:
 4491 0215 63757272 		.ascii	"currentRobotOrientation\000"
 4491      656E7452 
 4491      6F626F74 
 4491      4F726965 
 4491      6E746174 
 4492              	.LASF89:
 4493 022d 52657365 		.ascii	"ResetSensorFlags\000"
 4493      7453656E 
 4493      736F7246 
 4493      6C616773 
 4493      00
 4494              	.LASF37:
 4495 023e 67325F64 		.ascii	"g2_direction\000"
 4495      69726563 
 4495      74696F6E 
 4495      00
 4496              	.LASF87:
 4497 024b 74617267 		.ascii	"targetCol\000"
 4497      6574436F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 94


 4497      6C00
 4498              	.LASF135:
 4499 0255 71756164 		.ascii	"quadDec2Count\000"
 4499      44656332 
 4499      436F756E 
 4499      7400
 4500              	.LASF19:
 4501 0263 666C6F61 		.ascii	"float\000"
 4501      7400
 4502              	.LASF80:
 4503 0269 63757272 		.ascii	"currentInstructionDirection\000"
 4503      656E7449 
 4503      6E737472 
 4503      75637469 
 4503      6F6E4469 
 4504              	.LASF124:
 4505 0285 75736242 		.ascii	"usbBuffer\000"
 4505      75666665 
 4505      7200
 4506              	.LASF83:
 4507 028f 636F756E 		.ascii	"count\000"
 4507      7400
 4508              	.LASF22:
 4509 0295 696E6465 		.ascii	"index\000"
 4509      7800
 4510              	.LASF7:
 4511 029b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4511      206C6F6E 
 4511      6720756E 
 4511      7369676E 
 4511      65642069 
 4512              	.LASF51:
 4513 02b2 496E7374 		.ascii	"Instruction\000"
 4513      72756374 
 4513      696F6E00 
 4514              	.LASF117:
 4515 02be 666C6167 		.ascii	"flag_packet\000"
 4515      5F706163 
 4515      6B657400 
 4516              	.LASF95:
 4517 02ca 53657452 		.ascii	"SetRobotMovement\000"
 4517      6F626F74 
 4517      4D6F7665 
 4517      6D656E74 
 4517      00
 4518              	.LASF72:
 4519 02db 54494D45 		.ascii	"TIMER_FINISH\000"
 4519      525F4649 
 4519      4E495348 
 4519      00
 4520              	.LASF137:
 4521 02e8 6B656570 		.ascii	"keepLedOn\000"
 4521      4C65644F 
 4521      6E00
 4522              	.LASF39:
 4523 02f2 4C656674 		.ascii	"Left\000"
 4523      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 95


 4524              	.LASF113:
 4525 02f7 666C6167 		.ascii	"flag_ts_update\000"
 4525      5F74735F 
 4525      75706461 
 4525      746500
 4526              	.LASF112:
 4527 0306 666C6167 		.ascii	"flag_ts_enc\000"
 4527      5F74735F 
 4527      656E6300 
 4528              	.LASF102:
 4529 0312 6C656674 		.ascii	"leftStatusFlag\000"
 4529      53746174 
 4529      7573466C 
 4529      616700
 4530              	.LASF81:
 4531 0321 71756164 		.ascii	"quadCountToRPM\000"
 4531      436F756E 
 4531      74546F52 
 4531      504D00
 4532              	.LASF84:
 4533 0330 626C6F63 		.ascii	"blockSize\000"
 4533      6B53697A 
 4533      6500
 4534              	.LASF146:
 4535 033a 69676E6F 		.ascii	"ignoreSensor\000"
 4535      72655365 
 4535      6E736F72 
 4535      00
 4536              	.LASF48:
 4537 0347 53746F70 		.ascii	"StopAtTarget\000"
 4537      41745461 
 4537      72676574 
 4537      00
 4538              	.LASF64:
 4539 0354 77616974 		.ascii	"waitForTurn\000"
 4539      466F7254 
 4539      75726E00 
 4540              	.LASF24:
 4541 0360 726F626F 		.ascii	"robot_ypos\000"
 4541      745F7970 
 4541      6F7300
 4542              	.LASF111:
 4543 036b 74735F64 		.ascii	"ts_display\000"
 4543      6973706C 
 4543      617900
 4544              	.LASF11:
 4545 0376 63686172 		.ascii	"char\000"
 4545      00
 4546              	.LASF150:
 4547 037b 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4547      6F63756D 
 4547      656E7473 
 4547      5C476974 
 4547      4875625C 
 4548 03aa 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4548      635F636F 
 4548      64655F62 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 96


 4548      6173655C 
 4548      43533330 
 4549              	.LASF28:
 4550 03cc 67305F73 		.ascii	"g0_speed\000"
 4550      70656564 
 4550      00
 4551              	.LASF93:
 4552 03d5 696E7374 		.ascii	"instructionList\000"
 4552      72756374 
 4552      696F6E4C 
 4552      69737400 
 4553              	.LASF96:
 4554 03e5 696E7374 		.ascii	"instructionIndex\000"
 4554      72756374 
 4554      696F6E49 
 4554      6E646578 
 4554      00
 4555              	.LASF15:
 4556 03f6 75696E74 		.ascii	"uint16\000"
 4556      313600
 4557              	.LASF17:
 4558 03fd 696E7438 		.ascii	"int8\000"
 4558      00
 4559              	.LASF141:
 4560 0402 78426C6F 		.ascii	"xBlocksize\000"
 4560      636B7369 
 4560      7A6500
 4561              	.LASF33:
 4562 040d 67315F64 		.ascii	"g1_direction\000"
 4562      69726563 
 4562      74696F6E 
 4562      00
 4563              	.LASF68:
 4564 041a 53335F44 		.ascii	"S3_DETECTED\000"
 4564      45544543 
 4564      54454400 
 4565              	.LASF77:
 4566 0426 73706565 		.ascii	"speedTimer\000"
 4566      6454696D 
 4566      657200
 4567              	.LASF88:
 4568 0431 70617468 		.ascii	"pathCount\000"
 4568      436F756E 
 4568      7400
 4569              	.LASF98:
 4570 043b 7475726E 		.ascii	"turnFinishedFlag\000"
 4570      46696E69 
 4570      73686564 
 4570      466C6167 
 4570      00
 4571              	.LASF44:
 4572 044c 77616974 		.ascii	"waitForLeftTurn\000"
 4572      466F724C 
 4572      65667454 
 4572      75726E00 
 4573              	.LASF6:
 4574 045c 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 97


 4574      206C6F6E 
 4574      6720696E 
 4574      7400
 4575              	.LASF30:
 4576 046a 67315F78 		.ascii	"g1_xpos\000"
 4576      706F7300 
 4577              	.LASF140:
 4578 0472 626C6F63 		.ascii	"blockSizeTotal\000"
 4578      6B53697A 
 4578      65546F74 
 4578      616C00
 4579              	.LASF130:
 4580 0481 70726576 		.ascii	"previousOrientation\000"
 4580      696F7573 
 4580      4F726965 
 4580      6E746174 
 4580      696F6E00 
 4581              	.LASF46:
 4582 0495 75547572 		.ascii	"uTurn\000"
 4582      6E00
 4583              	.LASF104:
 4584 049b 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4584      436F7572 
 4584      7365436F 
 4584      72726563 
 4584      74696F6E 
 4585              	.LASF74:
 4586 04b7 6E657744 		.ascii	"newDistance\000"
 4586      69737461 
 4586      6E636500 
 4587              	.LASF36:
 4588 04c3 67325F73 		.ascii	"g2_speed\000"
 4588      70656564 
 4588      00
 4589              	.LASF27:
 4590 04cc 67305F79 		.ascii	"g0_ypos\000"
 4590      706F7300 
 4591              	.LASF126:
 4592 04d4 666F6F64 		.ascii	"food_list\000"
 4592      5F6C6973 
 4592      7400
 4593              	.LASF59:
 4594 04de 5475726E 		.ascii	"TurnLeft\000"
 4594      4C656674 
 4594      00
 4595              	.LASF110:
 4596 04e7 74735F73 		.ascii	"ts_speed\000"
 4596      70656564 
 4596      00
 4597              	.LASF139:
 4598 04f0 6A756E63 		.ascii	"junctionConfiguration\000"
 4598      74696F6E 
 4598      436F6E66 
 4598      69677572 
 4598      6174696F 
 4599              	.LASF63:
 4600 0506 556E6B6E 		.ascii	"Unknown\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 98


 4600      6F776E00 
 4601              	.LASF16:
 4602 050e 75696E74 		.ascii	"uint32\000"
 4602      333200
 4603              	.LASF45:
 4604 0515 77616974 		.ascii	"waitForRightTurn\000"
 4604      466F7252 
 4604      69676874 
 4604      5475726E 
 4604      00
 4605              	.LASF58:
 4606 0526 5475726E 		.ascii	"TurnRight\000"
 4606      52696768 
 4606      7400
 4607              	.LASF50:
 4608 0530 64617461 		.ascii	"data_main\000"
 4608      5F6D6169 
 4608      6E00
 4609              	.LASF21:
 4610 053a 72737369 		.ascii	"rssi\000"
 4610      00
 4611              	.LASF29:
 4612 053f 67305F64 		.ascii	"g0_direction\000"
 4612      69726563 
 4612      74696F6E 
 4612      00
 4613              	.LASF128:
 4614 054c 70726576 		.ascii	"previousDirection\000"
 4614      696F7573 
 4614      44697265 
 4614      6374696F 
 4614      6E00
 4615              	.LASF67:
 4616 055e 5370696E 		.ascii	"Spin180\000"
 4616      31383000 
 4617              	.LASF9:
 4618 0566 6C6F6E67 		.ascii	"long double\000"
 4618      20646F75 
 4618      626C6500 
 4619              	.LASF114:
 4620 0572 666C6167 		.ascii	"flag_ts_speed\000"
 4620      5F74735F 
 4620      73706565 
 4620      6400
 4621              	.LASF119:
 4622 0580 64617461 		.ascii	"dataready_flag\000"
 4622      72656164 
 4622      795F666C 
 4622      616700
 4623              	.LASF116:
 4624 058f 666C6167 		.ascii	"flag_rx\000"
 4624      5F727800 
 4625              	.LASF142:
 4626 0597 79426C6F 		.ascii	"yBlocksize\000"
 4626      636B7369 
 4626      7A6500
 4627              	.LASF2:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 99


 4628 05a2 73686F72 		.ascii	"short int\000"
 4628      7420696E 
 4628      7400
 4629              	.LASF69:
 4630 05ac 53345F44 		.ascii	"S4_DETECTED\000"
 4630      45544543 
 4630      54454400 
 4631              	.LASF4:
 4632 05b8 6C6F6E67 		.ascii	"long int\000"
 4632      20696E74 
 4632      00
 4633              	.LASF107:
 4634 05c1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4634      52784275 
 4634      66666572 
 4634      00
 4635              	.LASF109:
 4636 05ce 74735F75 		.ascii	"ts_update\000"
 4636      70646174 
 4636      6500
 4637              	.LASF57:
 4638 05d8 466F7277 		.ascii	"Forward\000"
 4638      61726400 
 4639              	.LASF132:
 4640 05e0 746F7461 		.ascii	"totalMilliseconds\000"
 4640      6C4D696C 
 4640      6C697365 
 4640      636F6E64 
 4640      7300
 4641              	.LASF35:
 4642 05f2 67325F79 		.ascii	"g2_ypos\000"
 4642      706F7300 
 4643              	.LASF90:
 4644 05fa 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4644      546F4E65 
 4644      7874496E 
 4644      73747275 
 4644      6374696F 
 4645              	.LASF41:
 4646 0610 4F726965 		.ascii	"OrientationState\000"
 4646      6E746174 
 4646      696F6E53 
 4646      74617465 
 4646      00
 4647              	.LASF38:
 4648 0621 446F776E 		.ascii	"Down\000"
 4648      00
 4649              	.LASF40:
 4650 0626 52696768 		.ascii	"Right\000"
 4650      7400
 4651              	.LASF31:
 4652 062c 67315F79 		.ascii	"g1_ypos\000"
 4652      706F7300 
 4653              	.LASF127:
 4654 0634 63757272 		.ascii	"currentDirection\000"
 4654      656E7444 
 4654      69726563 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 100


 4654      74696F6E 
 4654      00
 4655              	.LASF100:
 4656 0645 75547572 		.ascii	"uTurnStartedFlag\000"
 4656      6E537461 
 4656      72746564 
 4656      466C6167 
 4656      00
 4657              	.LASF147:
 4658 0656 6C617374 		.ascii	"lastDirectionAfter180\000"
 4658      44697265 
 4658      6374696F 
 4658      6E416674 
 4658      65723138 
 4659              	.LASF10:
 4660 066c 73697A65 		.ascii	"sizetype\000"
 4660      74797065 
 4660      00
 4661              	.LASF5:
 4662 0675 6C6F6E67 		.ascii	"long unsigned int\000"
 4662      20756E73 
 4662      69676E65 
 4662      6420696E 
 4662      7400
 4663              	.LASF138:
 4664 0687 73746F70 		.ascii	"stopBuffer\000"
 4664      42756666 
 4664      657200
 4665              	.LASF101:
 4666 0692 75547572 		.ascii	"uTurnFinishedFlag\000"
 4666      6E46696E 
 4666      69736865 
 4666      64466C61 
 4666      6700
 4667              	.LASF13:
 4668 06a4 696E7433 		.ascii	"int32_t\000"
 4668      325F7400 
 4669              	.LASF23:
 4670 06ac 726F626F 		.ascii	"robot_xpos\000"
 4670      745F7870 
 4670      6F7300
 4671              	.LASF123:
 4672 06b7 656E7472 		.ascii	"entry\000"
 4672      7900
 4673              	.LASF56:
 4674 06bd 526F626F 		.ascii	"RobotMovement\000"
 4674      744D6F76 
 4674      656D656E 
 4674      7400
 4675              	.LASF1:
 4676 06cb 756E7369 		.ascii	"unsigned char\000"
 4676      676E6564 
 4676      20636861 
 4676      7200
 4677              	.LASF145:
 4678 06d9 73746F70 		.ascii	"stoppedAfterTurn\000"
 4678      70656441 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 101


 4678      66746572 
 4678      5475726E 
 4678      00
 4679              	.LASF122:
 4680 06ea 6C696E65 		.ascii	"line\000"
 4680      00
 4681              	.LASF82:
 4682 06ef 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4682      756C6174 
 4682      65446973 
 4682      74616E63 
 4682      65546F54 
 4683              	.LASF61:
 4684 0709 41646A75 		.ascii	"AdjustToTheRight\000"
 4684      7374546F 
 4684      54686552 
 4684      69676874 
 4684      00
 4685              	.LASF62:
 4686 071a 53746F70 		.ascii	"Stop\000"
 4686      00
 4687              	.LASF91:
 4688 071f 47657449 		.ascii	"GetInstructionAtIndex\000"
 4688      6E737472 
 4688      75637469 
 4688      6F6E4174 
 4688      496E6465 
 4689              	.LASF108:
 4690 0735 74735F65 		.ascii	"ts_enc\000"
 4690      6E6300
 4691              	.LASF115:
 4692 073c 666C6167 		.ascii	"flag_ts_display\000"
 4692      5F74735F 
 4692      64697370 
 4692      6C617900 
 4693              	.LASF105:
 4694 074c 63757272 		.ascii	"currentIgnoreL\000"
 4694      656E7449 
 4694      676E6F72 
 4694      654C00
 4695              	.LASF106:
 4696 075b 63757272 		.ascii	"currentIgnoreR\000"
 4696      656E7449 
 4696      676E6F72 
 4696      655200
 4697              	.LASF49:
 4698 076a 536B6970 		.ascii	"Skip\000"
 4698      00
 4699              	.LASF121:
 4700 076f 64697370 		.ascii	"displaystring\000"
 4700      6C617973 
 4700      7472696E 
 4700      6700
 4701              	.LASF43:
 4702 077d 476F466F 		.ascii	"GoForward\000"
 4702      72776172 
 4702      6400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 102


 4703              	.LASF70:
 4704 0787 53355F44 		.ascii	"S5_DETECTED\000"
 4704      45544543 
 4704      54454400 
 4705              	.LASF0:
 4706 0793 7369676E 		.ascii	"signed char\000"
 4706      65642063 
 4706      68617200 
 4707              	.LASF143:
 4708 079f 63757272 		.ascii	"currentRow\000"
 4708      656E7452 
 4708      6F7700
 4709              	.LASF3:
 4710 07aa 73686F72 		.ascii	"short unsigned int\000"
 4710      7420756E 
 4710      7369676E 
 4710      65642069 
 4710      6E7400
 4711              	.LASF25:
 4712 07bd 726F626F 		.ascii	"robot_orientation\000"
 4712      745F6F72 
 4712      69656E74 
 4712      6174696F 
 4712      6E00
 4713              	.LASF73:
 4714 07cf 6D61696E 		.ascii	"main\000"
 4714      00
 4715              	.LASF131:
 4716 07d4 63757272 		.ascii	"currentInstruction\000"
 4716      656E7449 
 4716      6E737472 
 4716      75637469 
 4716      6F6E00
 4717              	.LASF60:
 4718 07e7 41646A75 		.ascii	"AdjustToTheLeft\000"
 4718      7374546F 
 4718      5468654C 
 4718      65667400 
 4719              	.LASF66:
 4720 07f7 4261636B 		.ascii	"Backward\000"
 4720      77617264 
 4720      00
 4721              	.LASF14:
 4722 0800 75696E74 		.ascii	"uint8\000"
 4722      3800
 4723              	.LASF20:
 4724 0806 646F7562 		.ascii	"double\000"
 4724      6C6500
 4725              	.LASF144:
 4726 080d 63757272 		.ascii	"currentCol\000"
 4726      656E7443 
 4726      6F6C00
 4727              	.LASF85:
 4728 0818 746F7461 		.ascii	"totalBlockSize\000"
 4728      6C426C6F 
 4728      636B5369 
 4728      7A6500
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct47K8R.s 			page 103


 4729              	.LASF26:
 4730 0827 67305F78 		.ascii	"g0_xpos\000"
 4730      706F7300 
 4731              	.LASF136:
 4732 082f 74696D65 		.ascii	"timerInt\000"
 4732      72496E74 
 4732      00
 4733              	.LASF118:
 4734 0838 666C6167 		.ascii	"flag_KB_string\000"
 4734      5F4B425F 
 4734      73747269 
 4734      6E6700
 4735              	.LASF32:
 4736 0847 67315F73 		.ascii	"g1_speed\000"
 4736      70656564 
 4736      00
 4737              	.LASF53:
 4738 0850 69676E6F 		.ascii	"ignoreL\000"
 4738      72654C00 
 4739              	.LASF54:
 4740 0858 69676E6F 		.ascii	"ignoreR\000"
 4740      72655200 
 4741              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
