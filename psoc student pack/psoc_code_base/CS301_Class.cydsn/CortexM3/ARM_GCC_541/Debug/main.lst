ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	previousInstruction,20,4
 122              		.comm	numSteps,4,4
 123              		.comm	instructionList,4,4
 124              		.bss
 125 0013 00       		.align	2
 126              	instructionIndex:
 127 0014 00000000 		.space	4
 128              		.comm	s3,1,1
 129              		.comm	s4,1,1
 130              		.comm	s5,1,1
 131              		.global	s6
 132              		.type	s6, %object
 133              		.size	s6, 1
 134              	s6:
 135 0018 00       		.space	1
 136              		.global	totalMilliseconds
 137 0019 000000   		.align	2
 138              		.type	totalMilliseconds, %object
 139              		.size	totalMilliseconds, 4
 140              	totalMilliseconds:
 141 001c 00000000 		.space	4
 142              		.global	totalDistance
 143              		.align	2
 144              		.type	totalDistance, %object
 145              		.size	totalDistance, 4
 146              	totalDistance:
 147 0020 00000000 		.space	4
 148              		.comm	buffer,69,4
 149              		.global	quadDec2Count
 150              		.align	2
 151              		.type	quadDec2Count, %object
 152              		.size	quadDec2Count, 4
 153              	quadDec2Count:
 154 0024 00000000 		.space	4
 155              		.global	timerInt
 156              		.align	2
 157              		.type	timerInt, %object
 158              		.size	timerInt, 4
 159              	timerInt:
 160 0028 00000000 		.space	4
 161              		.global	keepLedOn
 162              		.align	2
 163              		.type	keepLedOn, %object
 164              		.size	keepLedOn, 4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 4


 165              	keepLedOn:
 166 002c 00000000 		.space	4
 167              		.global	stopBuffer
 168              		.align	2
 169              		.type	stopBuffer, %object
 170              		.size	stopBuffer, 4
 171              	stopBuffer:
 172 0030 00000000 		.space	4
 173              		.global	forwardBuffer
 174              		.align	1
 175              		.type	forwardBuffer, %object
 176              		.size	forwardBuffer, 2
 177              	forwardBuffer:
 178 0034 0000     		.space	2
 179              	turnStartedFlag:
 180 0036 00       		.space	1
 181              	turnFinishedFlag:
 182 0037 00       		.space	1
 183              	forwardUntilTargetStartedFlag:
 184 0038 00       		.space	1
 185              	uTurnStartedFlag:
 186 0039 00       		.space	1
 187              	uTurnFinishedFlag:
 188 003a 00       		.space	1
 189              	leftStatusFlag:
 190 003b 00       		.space	1
 191              	rightStatusFlag:
 192 003c 00       		.space	1
 193              	spinCourseCorrectionStarted:
 194 003d 00       		.space	1
 195              	currentIgnoreL:
 196 003e 00       		.space	1
 197              	currentIgnoreR:
 198 003f 00       		.space	1
 199              	totalLineCount:
 200 0040 00       		.space	1
 201              	lineCount:
 202 0041 00       		.space	1
 203              	onLineFlag:
 204 0042 00       		.space	1
 205              	tooEarlyFlag:
 206 0043 00       		.space	1
 207              	tooLateFlag:
 208 0044 00       		.space	1
 209              	dontOverwriteRightIgnore:
 210 0045 00       		.space	1
 211              	dontOverwriteLeftIgnore:
 212 0046 00       		.space	1
 213              		.global	junctionConfiguration
 214 0047 00       		.align	2
 215              		.type	junctionConfiguration, %object
 216              		.size	junctionConfiguration, 4
 217              	junctionConfiguration:
 218 0048 00000000 		.space	4
 219              		.global	currentFoodListIndex
 220              		.type	currentFoodListIndex, %object
 221              		.size	currentFoodListIndex, 1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 5


 222              	currentFoodListIndex:
 223 004c 00       		.space	1
 224              		.global	blockSizeTotal
 225 004d 000000   		.align	2
 226              		.type	blockSizeTotal, %object
 227              		.size	blockSizeTotal, 4
 228              	blockSizeTotal:
 229 0050 00000000 		.space	4
 230              		.global	__aeabi_i2d
 231              		.global	__aeabi_dmul
 232              		.global	__aeabi_ddiv
 233              		.global	__aeabi_d2f
 234              		.global	__aeabi_fadd
 235              		.section	.text.speedTimer,"ax",%progbits
 236              		.align	2
 237              		.global	speedTimer
 238              		.thumb
 239              		.thumb_func
 240              		.type	speedTimer, %function
 241              	speedTimer:
 242              	.LFB64:
 243              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** Instruction previousInstruction;
  30:main.c        **** int numSteps;
  31:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  32:main.c        **** Instruction * instructionList; // pointer to array
  33:main.c        **** volatile static uint32 instructionIndex = 0;
  34:main.c        **** Instruction GetInstructionAtIndex();
  35:main.c        **** float CalculateDistanceToTravel(float blockSize);
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 6


  36:main.c        **** void MoveToNextInstruction();
  37:main.c        **** // ----------------------------------------
  38:main.c        **** uint8 s3, s4, s5, s6 = 0;
  39:main.c        **** //* ========================================
  40:main.c        **** // Calculating Distance
  41:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  42:main.c        **** 
  43:main.c        **** uint32 totalMilliseconds = 0;
  44:main.c        **** float totalDistance = 0; // in mm
  45:main.c        **** //* ========================================
  46:main.c        **** char buffer[69];
  47:main.c        **** int quadDec2Count = 0;
  48:main.c        **** int timerInt = 0;
  49:main.c        **** int keepLedOn = 0;
  50:main.c        **** // ========================================= FLAGS
  51:main.c        **** uint32 stopBuffer = 0;
  52:main.c        **** uint16 forwardBuffer = 0;
  53:main.c        **** volatile static uint8 turnStartedFlag = 0;
  54:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  55:main.c        **** 
  56:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  58:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  59:main.c        **** 
  60:main.c        **** volatile static uint8 leftStatusFlag = 0;
  61:main.c        **** volatile static uint8 rightStatusFlag = 0;
  62:main.c        **** 
  63:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  64:main.c        **** volatile static uint8 currentIgnoreL = 0;
  65:main.c        **** volatile static uint8 currentIgnoreR = 0;
  66:main.c        **** 
  67:main.c        **** void RotateClockwise180Degrees();
  68:main.c        **** 
  69:main.c        **** volatile static uint8 totalLineCount = 0;
  70:main.c        **** volatile static uint8 lineCount = 0;
  71:main.c        **** volatile static uint8 onLineFlag = 0;
  72:main.c        **** 
  73:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  74:main.c        **** volatile static uint8 tooLateFlag = 0;
  75:main.c        **** 
  76:main.c        **** volatile static uint8 dontOverwriteRightIgnore = 0;
  77:main.c        **** volatile static uint8 dontOverwriteLeftIgnore = 0;
  78:main.c        **** 
  79:main.c        **** uint8 junctionConfiguration[4] = {0};
  80:main.c        **** uint8 currentFoodListIndex = 0;
  81:main.c        **** 
  82:main.c        **** float blockSizeTotal = 0;
  83:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  84:main.c        **** 
  85:main.c        **** CY_ISR (speedTimer) {
 244              		.loc 1 85 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 90B5     		push	{r4, r7, lr}
 249              		.cfi_def_cfa_offset 12
 250              		.cfi_offset 4, -12
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 7


 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 24
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  86:main.c        ****     timerInt = 1;
 257              		.loc 1 86 0
 258 0006 344B     		ldr	r3, .L4+16
 259 0008 0122     		movs	r2, #1
 260 000a 1A60     		str	r2, [r3]
  87:main.c        ****     //quadDec_M1 used for turning macros
  88:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 261              		.loc 1 88 0
 262 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 263 0010 0346     		mov	r3, r0
 264 0012 1A46     		mov	r2, r3
 265 0014 314B     		ldr	r3, .L4+20
 266 0016 1A60     		str	r2, [r3]
  89:main.c        ****     
  90:main.c        ****     if ((currentDirection == Forward || 
 267              		.loc 1 90 0
 268 0018 314B     		ldr	r3, .L4+24
 269 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 001c 002B     		cmp	r3, #0
 271 001e 13D0     		beq	.L2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 272              		.loc 1 91 0 discriminator 1
 273 0020 2F4B     		ldr	r3, .L4+24
 274 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:main.c        ****         currentDirection == ForwardAfterTurn ||
 275              		.loc 1 90 0 discriminator 1
 276 0024 082B     		cmp	r3, #8
 277 0026 0FD0     		beq	.L2
  92:main.c        ****         currentDirection == waitForTurn || 
 278              		.loc 1 92 0
 279 0028 2D4B     		ldr	r3, .L4+24
 280 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 281              		.loc 1 91 0
 282 002c 072B     		cmp	r3, #7
 283 002e 0BD0     		beq	.L2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 284              		.loc 1 93 0
 285 0030 2B4B     		ldr	r3, .L4+24
 286 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****         currentDirection == waitForTurn || 
 287              		.loc 1 92 0
 288 0034 032B     		cmp	r3, #3
 289 0036 07D0     		beq	.L2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 290              		.loc 1 94 0
 291 0038 294B     		ldr	r3, .L4+24
 292 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 293              		.loc 1 93 0
 294 003c 042B     		cmp	r3, #4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 8


 295 003e 03D0     		beq	.L2
  95:main.c        ****         currentDirection == Backward) &&
 296              		.loc 1 95 0
 297 0040 274B     		ldr	r3, .L4+24
 298 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 299              		.loc 1 94 0
 300 0044 092B     		cmp	r3, #9
 301 0046 34D1     		bne	.L3
 302              	.L2:
  96:main.c        ****         quadDec2Count != 0) {
 303              		.loc 1 96 0
 304 0048 244B     		ldr	r3, .L4+20
 305 004a 1B68     		ldr	r3, [r3]
  95:main.c        ****         currentDirection == Backward) &&
 306              		.loc 1 95 0
 307 004c 002B     		cmp	r3, #0
 308 004e 30D0     		beq	.L3
 309              	.LBB2:
  97:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  98:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 310              		.loc 1 98 0
 311 0050 224B     		ldr	r3, .L4+20
 312 0052 1B68     		ldr	r3, [r3]
 313 0054 002B     		cmp	r3, #0
 314 0056 B8BF     		it	lt
 315 0058 5B42     		rsblt	r3, r3, #0
 316 005a 1846     		mov	r0, r3
 317 005c FFF7FEFF 		bl	__aeabi_i2d
 318 0060 19A3     		adr	r3, .L4
 319 0062 D3E90023 		ldrd	r2, [r3]
 320 0066 FFF7FEFF 		bl	__aeabi_dmul
 321 006a 0346     		mov	r3, r0
 322 006c 0C46     		mov	r4, r1
 323 006e 1846     		mov	r0, r3
 324 0070 2146     		mov	r1, r4
 325 0072 17A3     		adr	r3, .L4+8
 326 0074 D3E90023 		ldrd	r2, [r3]
 327 0078 FFF7FEFF 		bl	__aeabi_dmul
 328 007c 0346     		mov	r3, r0
 329 007e 0C46     		mov	r4, r1
 330 0080 1846     		mov	r0, r3
 331 0082 2146     		mov	r1, r4
 332 0084 4FF00002 		mov	r2, #0
 333 0088 164B     		ldr	r3, .L4+28
 334 008a FFF7FEFF 		bl	__aeabi_ddiv
 335 008e 0346     		mov	r3, r0
 336 0090 0C46     		mov	r4, r1
 337 0092 1846     		mov	r0, r3
 338 0094 2146     		mov	r1, r4
 339 0096 FFF7FEFF 		bl	__aeabi_d2f
 340 009a 0346     		mov	r3, r0
 341 009c 7B60     		str	r3, [r7, #4]	@ float
  99:main.c        ****         
 100:main.c        ****         totalDistance = totalDistance + newDistance;
 342              		.loc 1 100 0
 343 009e 124B     		ldr	r3, .L4+32
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 9


 344 00a0 1B68     		ldr	r3, [r3]	@ float
 345 00a2 7968     		ldr	r1, [r7, #4]	@ float
 346 00a4 1846     		mov	r0, r3
 347 00a6 FFF7FEFF 		bl	__aeabi_fadd
 348 00aa 0346     		mov	r3, r0
 349 00ac 1A46     		mov	r2, r3
 350 00ae 0E4B     		ldr	r3, .L4+32
 351 00b0 1A60     		str	r2, [r3]	@ float
 352              	.L3:
 353              	.LBE2:
 101:main.c        ****     }
 102:main.c        ****     
 103:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 354              		.loc 1 103 0
 355 00b2 0020     		movs	r0, #0
 356 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 104:main.c        ****     QuadDec_M2_Start(); // restart counter
 357              		.loc 1 104 0
 358 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        ****     
 106:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 359              		.loc 1 106 0
 360 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 107:main.c        **** }
 361              		.loc 1 107 0
 362 00c0 00BF     		nop
 363 00c2 0C37     		adds	r7, r7, #12
 364              		.cfi_def_cfa_offset 12
 365 00c4 BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 00c6 90BD     		pop	{r4, r7, pc}
 369              	.L5:
 370              		.align	3
 371              	.L4:
 372 00c8 182D4454 		.word	1413754136
 373 00cc FB210940 		.word	1074340347
 374 00d0 00000000 		.word	0
 375 00d4 00205040 		.word	1078992896
 376 00d8 00000000 		.word	timerInt
 377 00dc 00000000 		.word	quadDec2Count
 378 00e0 00000000 		.word	currentDirection
 379 00e4 00806C40 		.word	1080852480
 380 00e8 00000000 		.word	totalDistance
 381              		.cfi_endproc
 382              	.LFE64:
 383              		.size	speedTimer, .-speedTimer
 384              		.section	.text.S3_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S3_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S3_DETECTED, %function
 390              	S3_DETECTED:
 391              	.LFB65:
 108:main.c        **** 
 109:main.c        **** CY_ISR(S3_DETECTED) {
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 10


 392              		.loc 1 109 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 110:main.c        ****     // Sensor has detected WHITE
 111:main.c        ****     s3 = 1; // , Black = 0, White = 1
 402              		.loc 1 111 0
 403 0004 034B     		ldr	r3, .L7
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 112:main.c        ****     //LED_Write(1u);
 113:main.c        **** }
 406              		.loc 1 113 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L8:
 416 0012 00BF     		.align	2
 417              	.L7:
 418 0014 00000000 		.word	s3
 419              		.cfi_endproc
 420              	.LFE65:
 421              		.size	S3_DETECTED, .-S3_DETECTED
 422              		.section	.text.S4_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S4_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S4_DETECTED, %function
 428              	S4_DETECTED:
 429              	.LFB66:
 114:main.c        **** 
 115:main.c        **** CY_ISR(S4_DETECTED) {
 430              		.loc 1 115 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 116:main.c        ****     // Sensor has detected WHITE
 117:main.c        ****     s4 = 1; // , Black = 0, White = 1
 440              		.loc 1 117 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 11


 441 0004 034B     		ldr	r3, .L10
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 118:main.c        ****     //LED_Write(1u);
 119:main.c        **** }
 444              		.loc 1 119 0
 445 000a 00BF     		nop
 446 000c BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L11:
 454 0012 00BF     		.align	2
 455              	.L10:
 456 0014 00000000 		.word	s4
 457              		.cfi_endproc
 458              	.LFE66:
 459              		.size	S4_DETECTED, .-S4_DETECTED
 460              		.section	.text.S5_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S5_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S5_DETECTED, %function
 466              	S5_DETECTED:
 467              	.LFB67:
 120:main.c        **** 
 121:main.c        **** CY_ISR(S5_DETECTED) {
 468              		.loc 1 121 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 122:main.c        ****     // Sensor has detected WHITE
 123:main.c        ****     s5 = 1; // , Black = 0, White = 1
 478              		.loc 1 123 0
 479 0004 034B     		ldr	r3, .L13
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 124:main.c        ****     //LED_Write(1u);
 125:main.c        **** }
 482              		.loc 1 125 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 12


 490 0010 7047     		bx	lr
 491              	.L14:
 492 0012 00BF     		.align	2
 493              	.L13:
 494 0014 00000000 		.word	s5
 495              		.cfi_endproc
 496              	.LFE67:
 497              		.size	S5_DETECTED, .-S5_DETECTED
 498              		.section	.text.S6_DETECTED,"ax",%progbits
 499              		.align	2
 500              		.global	S6_DETECTED
 501              		.thumb
 502              		.thumb_func
 503              		.type	S6_DETECTED, %function
 504              	S6_DETECTED:
 505              	.LFB68:
 126:main.c        **** 
 127:main.c        **** CY_ISR(S6_DETECTED) {
 506              		.loc 1 127 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 128:main.c        ****     // Sensor has detected WHITE
 129:main.c        ****     s6 = 1; // , Black = 0, White = 1
 516              		.loc 1 129 0
 517 0004 034B     		ldr	r3, .L16
 518 0006 0122     		movs	r2, #1
 519 0008 1A70     		strb	r2, [r3]
 130:main.c        ****     //LED_Write(1u);
 131:main.c        **** }
 520              		.loc 1 131 0
 521 000a 00BF     		nop
 522 000c BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 000e 80BC     		pop	{r7}
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 0010 7047     		bx	lr
 529              	.L17:
 530 0012 00BF     		.align	2
 531              	.L16:
 532 0014 00000000 		.word	s6
 533              		.cfi_endproc
 534              	.LFE68:
 535              		.size	S6_DETECTED, .-S6_DETECTED
 536              		.section	.text.TIMER_FINISH,"ax",%progbits
 537              		.align	2
 538              		.global	TIMER_FINISH
 539              		.thumb
 540              		.thumb_func
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 13


 541              		.type	TIMER_FINISH, %function
 542              	TIMER_FINISH:
 543              	.LFB69:
 132:main.c        **** 
 133:main.c        **** CY_ISR(TIMER_FINISH) {
 544              		.loc 1 133 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 134:main.c        ****     if (currentDirection == Stop) {
 554              		.loc 1 134 0
 555 0004 174B     		ldr	r3, .L24
 556 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 0008 052B     		cmp	r3, #5
 558 000a 05D1     		bne	.L19
 135:main.c        ****         stopBuffer = stopBuffer + 1;
 559              		.loc 1 135 0
 560 000c 164B     		ldr	r3, .L24+4
 561 000e 1B68     		ldr	r3, [r3]
 562 0010 0133     		adds	r3, r3, #1
 563 0012 154A     		ldr	r2, .L24+4
 564 0014 1360     		str	r3, [r2]
 565 0016 02E0     		b	.L20
 566              	.L19:
 136:main.c        ****     } else {
 137:main.c        ****         stopBuffer = 0;
 567              		.loc 1 137 0
 568 0018 134B     		ldr	r3, .L24+4
 569 001a 0022     		movs	r2, #0
 570 001c 1A60     		str	r2, [r3]
 571              	.L20:
 138:main.c        ****     }
 139:main.c        ****     if (currentDirection == Forward || 
 572              		.loc 1 139 0
 573 001e 114B     		ldr	r3, .L24
 574 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0022 002B     		cmp	r3, #0
 576 0024 0BD0     		beq	.L21
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
 577              		.loc 1 140 0 discriminator 1
 578 0026 0F4B     		ldr	r3, .L24
 579 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:main.c        ****         currentDirection == AdjustToTheLeft ||
 580              		.loc 1 139 0 discriminator 1
 581 002a 032B     		cmp	r3, #3
 582 002c 07D0     		beq	.L21
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 583              		.loc 1 141 0
 584 002e 0D4B     		ldr	r3, .L24
 585 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 14


 586              		.loc 1 140 0
 587 0032 042B     		cmp	r3, #4
 588 0034 03D0     		beq	.L21
 142:main.c        ****         currentDirection == ForwardAfterTurn) {
 589              		.loc 1 142 0
 590 0036 0B4B     		ldr	r3, .L24
 591 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 592              		.loc 1 141 0
 593 003a 082B     		cmp	r3, #8
 594 003c 06D1     		bne	.L22
 595              	.L21:
 143:main.c        ****         forwardBuffer = forwardBuffer + 1;
 596              		.loc 1 143 0
 597 003e 0B4B     		ldr	r3, .L24+8
 598 0040 1B88     		ldrh	r3, [r3]
 599 0042 0133     		adds	r3, r3, #1
 600 0044 9AB2     		uxth	r2, r3
 601 0046 094B     		ldr	r3, .L24+8
 602 0048 1A80     		strh	r2, [r3]	@ movhi
 603 004a 02E0     		b	.L23
 604              	.L22:
 144:main.c        ****     } else {
 145:main.c        ****         forwardBuffer = 0;    
 605              		.loc 1 145 0
 606 004c 074B     		ldr	r3, .L24+8
 607 004e 0022     		movs	r2, #0
 608 0050 1A80     		strh	r2, [r3]	@ movhi
 609              	.L23:
 146:main.c        ****     }
 147:main.c        ****     SetRobotMovement(); 
 610              		.loc 1 147 0
 611 0052 FFF7FEFF 		bl	SetRobotMovement
 148:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 612              		.loc 1 148 0
 613 0056 FFF7FEFF 		bl	ResetSensorFlags
 149:main.c        ****     Timer_LED_ReadStatusRegister();
 614              		.loc 1 149 0
 615 005a FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 150:main.c        **** }
 616              		.loc 1 150 0
 617 005e 00BF     		nop
 618 0060 80BD     		pop	{r7, pc}
 619              	.L25:
 620 0062 00BF     		.align	2
 621              	.L24:
 622 0064 00000000 		.word	currentDirection
 623 0068 00000000 		.word	stopBuffer
 624 006c 00000000 		.word	forwardBuffer
 625              		.cfi_endproc
 626              	.LFE69:
 627              		.size	TIMER_FINISH, .-TIMER_FINISH
 628              		.section	.text.main,"ax",%progbits
 629              		.align	2
 630              		.global	main
 631              		.thumb
 632              		.thumb_func
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 15


 633              		.type	main, %function
 634              	main:
 635              	.LFB70:
 151:main.c        **** 
 152:main.c        **** 
 153:main.c        **** int main() {
 636              		.loc 1 153 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 24
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 B0B5     		push	{r4, r5, r7, lr}
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 86B0     		sub	sp, sp, #24
 647              		.cfi_def_cfa_offset 40
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 154:main.c        **** // ----- INITIALIZATIONS ----------
 155:main.c        ****     CYGlobalIntEnable;
 650              		.loc 1 155 0
 651              		.syntax unified
 652              	@ 155 "main.c" 1
 653 0006 62B6     		CPSIE   i
 654              	@ 0 "" 2
 156:main.c        ****     ResetSensorFlags();
 655              		.loc 1 156 0
 656              		.thumb
 657              		.syntax unified
 658 0008 FFF7FEFF 		bl	ResetSensorFlags
 157:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 659              		.loc 1 157 0
 660 000c FFF7FEFF 		bl	init
 158:main.c        ****     
 159:main.c        ****     // MAKE SURE TO CHANGE ORIENTATION
 160:main.c        ****     instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, Down); // initia
 661              		.loc 1 160 0
 662 0010 2B4B     		ldr	r3, .L29
 663 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664 0014 1A46     		mov	r2, r3
 665 0016 0123     		movs	r3, #1
 666 0018 2A49     		ldr	r1, .L29+4
 667 001a 2B48     		ldr	r0, .L29+8
 668 001c FFF7FEFF 		bl	findPathNewOrientation
 669 0020 0246     		mov	r2, r0
 670 0022 2A4B     		ldr	r3, .L29+12
 671 0024 1A60     		str	r2, [r3]
 161:main.c        ****     numSteps = instructionsListLength();
 672              		.loc 1 161 0
 673 0026 FFF7FEFF 		bl	instructionsListLength
 674 002a 0346     		mov	r3, r0
 675 002c 1A46     		mov	r2, r3
 676 002e 284B     		ldr	r3, .L29+16
 677 0030 1A60     		str	r2, [r3]
 162:main.c        ****     
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 16


 163:main.c        ****     currentInstruction = GetInstructionAtIndex();
 678              		.loc 1 163 0
 679 0032 284C     		ldr	r4, .L29+20
 680 0034 3B46     		mov	r3, r7
 681 0036 1846     		mov	r0, r3
 682 0038 FFF7FEFF 		bl	GetInstructionAtIndex
 683 003c 2546     		mov	r5, r4
 684 003e 3C46     		mov	r4, r7
 685 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 686 0042 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 687 0044 2368     		ldr	r3, [r4]
 688 0046 2B60     		str	r3, [r5]
 164:main.c        ****     
 165:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 689              		.loc 1 165 0
 690 0048 204B     		ldr	r3, .L29+12
 691 004a 1968     		ldr	r1, [r3]
 692 004c 224B     		ldr	r3, .L29+24
 693 004e 1A68     		ldr	r2, [r3]
 694 0050 1346     		mov	r3, r2
 695 0052 9B00     		lsls	r3, r3, #2
 696 0054 1344     		add	r3, r3, r2
 697 0056 9B00     		lsls	r3, r3, #2
 698 0058 0B44     		add	r3, r3, r1
 699 005a 5B68     		ldr	r3, [r3, #4]
 700 005c DAB2     		uxtb	r2, r3
 701 005e 1F4B     		ldr	r3, .L29+28
 702 0060 1A70     		strb	r2, [r3]
 166:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 703              		.loc 1 166 0
 704 0062 1A4B     		ldr	r3, .L29+12
 705 0064 1968     		ldr	r1, [r3]
 706 0066 1C4B     		ldr	r3, .L29+24
 707 0068 1A68     		ldr	r2, [r3]
 708 006a 1346     		mov	r3, r2
 709 006c 9B00     		lsls	r3, r3, #2
 710 006e 1344     		add	r3, r3, r2
 711 0070 9B00     		lsls	r3, r3, #2
 712 0072 0B44     		add	r3, r3, r1
 713 0074 9B68     		ldr	r3, [r3, #8]
 714 0076 DAB2     		uxtb	r2, r3
 715 0078 194B     		ldr	r3, .L29+32
 716 007a 1A70     		strb	r2, [r3]
 167:main.c        ****     
 168:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 717              		.loc 1 168 0
 718 007c 1948     		ldr	r0, .L29+36
 719 007e FFF7FEFF 		bl	isr_speed_StartEx
 169:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 720              		.loc 1 169 0
 721 0082 1948     		ldr	r0, .L29+40
 722 0084 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 170:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 723              		.loc 1 170 0
 724 0088 1848     		ldr	r0, .L29+44
 725 008a FFF7FEFF 		bl	S3_detected_StartEx
 171:main.c        ****     S4_detected_StartEx(S4_DETECTED);
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 17


 726              		.loc 1 171 0
 727 008e 1848     		ldr	r0, .L29+48
 728 0090 FFF7FEFF 		bl	S4_detected_StartEx
 172:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 729              		.loc 1 172 0
 730 0094 1748     		ldr	r0, .L29+52
 731 0096 FFF7FEFF 		bl	S5_detected_StartEx
 173:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 732              		.loc 1 173 0
 733 009a 1748     		ldr	r0, .L29+56
 734 009c FFF7FEFF 		bl	S6_detected_StartEx
 174:main.c        ****     Timer_LED_Start();
 735              		.loc 1 174 0
 736 00a0 FFF7FEFF 		bl	Timer_LED_Start
 737              	.L28:
 175:main.c        **** 
 176:main.c        ****     for(;;)
 177:main.c        ****     {
 178:main.c        ****         if(timerInt == 1) {
 738              		.loc 1 178 0
 739 00a4 154B     		ldr	r3, .L29+60
 740 00a6 1B68     		ldr	r3, [r3]
 741 00a8 012B     		cmp	r3, #1
 742 00aa FBD1     		bne	.L28
 179:main.c        ****             timerInt = 0;
 743              		.loc 1 179 0
 744 00ac 134B     		ldr	r3, .L29+60
 745 00ae 0022     		movs	r2, #0
 746 00b0 1A60     		str	r2, [r3]
 180:main.c        ****             // calculate RPM of M2
 181:main.c        ****             quadCountToRPM(quadDec2Count);
 747              		.loc 1 181 0
 748 00b2 134B     		ldr	r3, .L29+64
 749 00b4 1B68     		ldr	r3, [r3]
 750 00b6 9BB2     		uxth	r3, r3
 751 00b8 1846     		mov	r0, r3
 752 00ba FFF7FEFF 		bl	quadCountToRPM
 182:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 183:main.c        ****             //usbPutString(buffer);
 184:main.c        ****             //usbPutString(" ");
 185:main.c        ****         }
 186:main.c        ****     }
 753              		.loc 1 186 0
 754 00be F1E7     		b	.L28
 755              	.L30:
 756              		.align	2
 757              	.L29:
 758 00c0 00000000 		.word	currentFoodListIndex
 759 00c4 00000000 		.word	food_list
 760 00c8 00000000 		.word	map
 761 00cc 00000000 		.word	instructionList
 762 00d0 00000000 		.word	numSteps
 763 00d4 00000000 		.word	currentInstruction
 764 00d8 14000000 		.word	instructionIndex
 765 00dc 3E000000 		.word	currentIgnoreL
 766 00e0 3F000000 		.word	currentIgnoreR
 767 00e4 00000000 		.word	speedTimer
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 18


 768 00e8 00000000 		.word	TIMER_FINISH
 769 00ec 00000000 		.word	S3_DETECTED
 770 00f0 00000000 		.word	S4_DETECTED
 771 00f4 00000000 		.word	S5_DETECTED
 772 00f8 00000000 		.word	S6_DETECTED
 773 00fc 00000000 		.word	timerInt
 774 0100 00000000 		.word	quadDec2Count
 775              		.cfi_endproc
 776              	.LFE70:
 777              		.size	main, .-main
 778              		.global	__aeabi_fmul
 779              		.global	__aeabi_f2iz
 780              		.section	.text.quadCountToRPM,"ax",%progbits
 781              		.align	2
 782              		.global	quadCountToRPM
 783              		.thumb
 784              		.thumb_func
 785              		.type	quadCountToRPM, %function
 786              	quadCountToRPM:
 787              	.LFB71:
 187:main.c        ****     return 0;
 188:main.c        **** }
 189:main.c        **** 
 190:main.c        **** // Calculations
 191:main.c        **** //* ========================================
 192:main.c        **** int16 quadCountToRPM(uint16 count) {
 788              		.loc 1 192 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 16
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 90B5     		push	{r4, r7, lr}
 793              		.cfi_def_cfa_offset 12
 794              		.cfi_offset 4, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 85B0     		sub	sp, sp, #20
 798              		.cfi_def_cfa_offset 32
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 801 0006 0346     		mov	r3, r0
 802 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 193:main.c        ****     float cps = count/57.00;
 803              		.loc 1 193 0
 804 000a FB88     		ldrh	r3, [r7, #6]
 805 000c 1846     		mov	r0, r3
 806 000e FFF7FEFF 		bl	__aeabi_i2d
 807 0012 4FF00002 		mov	r2, #0
 808 0016 0D4B     		ldr	r3, .L33
 809 0018 FFF7FEFF 		bl	__aeabi_ddiv
 810 001c 0346     		mov	r3, r0
 811 001e 0C46     		mov	r4, r1
 812 0020 1846     		mov	r0, r3
 813 0022 2146     		mov	r1, r4
 814 0024 FFF7FEFF 		bl	__aeabi_d2f
 815 0028 0346     		mov	r3, r0
 816 002a FB60     		str	r3, [r7, #12]	@ float
 194:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 19


 817              		.loc 1 194 0
 818 002c 0849     		ldr	r1, .L33+4
 819 002e F868     		ldr	r0, [r7, #12]	@ float
 820 0030 FFF7FEFF 		bl	__aeabi_fmul
 821 0034 0346     		mov	r3, r0
 822 0036 1846     		mov	r0, r3
 823 0038 FFF7FEFF 		bl	__aeabi_f2iz
 824 003c 0346     		mov	r3, r0
 825 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 195:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 196:main.c        ****     return rpm;
 826              		.loc 1 196 0
 827 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 197:main.c        ****     //usbPutString(buffer);
 198:main.c        ****     //usbPutString("rpm ");
 199:main.c        **** }
 828              		.loc 1 199 0
 829 0044 1846     		mov	r0, r3
 830 0046 1437     		adds	r7, r7, #20
 831              		.cfi_def_cfa_offset 12
 832 0048 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 004a 90BD     		pop	{r4, r7, pc}
 836              	.L34:
 837              		.align	2
 838              	.L33:
 839 004c 00804C40 		.word	1078755328
 840 0050 00007041 		.word	1097859072
 841              		.cfi_endproc
 842              	.LFE71:
 843              		.size	quadCountToRPM, .-quadCountToRPM
 844              		.section	.text.ResetSensorFlags,"ax",%progbits
 845              		.align	2
 846              		.global	ResetSensorFlags
 847              		.thumb
 848              		.thumb_func
 849              		.type	ResetSensorFlags, %function
 850              	ResetSensorFlags:
 851              	.LFB72:
 200:main.c        **** 
 201:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 202:main.c        **** void ResetSensorFlags() {
 852              		.loc 1 202 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857 0000 80B4     		push	{r7}
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 203:main.c        ****     s3 = 0;
 862              		.loc 1 203 0
 863 0004 074B     		ldr	r3, .L36
 864 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 20


 865 0008 1A70     		strb	r2, [r3]
 204:main.c        ****     s4 = 0;
 866              		.loc 1 204 0
 867 000a 074B     		ldr	r3, .L36+4
 868 000c 0022     		movs	r2, #0
 869 000e 1A70     		strb	r2, [r3]
 205:main.c        ****     s5 = 0;
 870              		.loc 1 205 0
 871 0010 064B     		ldr	r3, .L36+8
 872 0012 0022     		movs	r2, #0
 873 0014 1A70     		strb	r2, [r3]
 206:main.c        ****     s6 = 0;
 874              		.loc 1 206 0
 875 0016 064B     		ldr	r3, .L36+12
 876 0018 0022     		movs	r2, #0
 877 001a 1A70     		strb	r2, [r3]
 207:main.c        **** }
 878              		.loc 1 207 0
 879 001c 00BF     		nop
 880 001e BD46     		mov	sp, r7
 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0020 80BC     		pop	{r7}
 884              		.cfi_restore 7
 885              		.cfi_def_cfa_offset 0
 886 0022 7047     		bx	lr
 887              	.L37:
 888              		.align	2
 889              	.L36:
 890 0024 00000000 		.word	s3
 891 0028 00000000 		.word	s4
 892 002c 00000000 		.word	s5
 893 0030 00000000 		.word	s6
 894              		.cfi_endproc
 895              	.LFE72:
 896              		.size	ResetSensorFlags, .-ResetSensorFlags
 897              		.global	xBlocksize
 898              		.data
 899 0045 000000   		.align	2
 900              		.type	xBlocksize, %object
 901              		.size	xBlocksize, 4
 902              	xBlocksize:
 903 0048 0000E842 		.word	1122500608
 904              		.global	yBlocksize
 905              		.align	2
 906              		.type	yBlocksize, %object
 907              		.size	yBlocksize, 4
 908              	yBlocksize:
 909 004c 00009042 		.word	1116733440
 910              		.global	currentRow
 911              		.type	currentRow, %object
 912              		.size	currentRow, 1
 913              	currentRow:
 914 0050 01       		.byte	1
 915              		.global	currentCol
 916              		.type	currentCol, %object
 917              		.size	currentCol, 1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 21


 918              	currentCol:
 919 0051 01       		.byte	1
 920              		.global	stoppedAfterTurn
 921              		.bss
 922              		.type	stoppedAfterTurn, %object
 923              		.size	stoppedAfterTurn, 1
 924              	stoppedAfterTurn:
 925 0054 00       		.space	1
 926              		.global	ignoreSensor
 927              		.type	ignoreSensor, %object
 928              		.size	ignoreSensor, 1
 929              	ignoreSensor:
 930 0055 00       		.space	1
 931              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 932              		.align	2
 933              		.global	ForwardCourseCorrection
 934              		.thumb
 935              		.thumb_func
 936              		.type	ForwardCourseCorrection, %function
 937              	ForwardCourseCorrection:
 938              	.LFB73:
 208:main.c        **** 
 209:main.c        **** float xBlocksize = 116; // 122 mm
 210:main.c        **** float yBlocksize = 72; // 80 mm
 211:main.c        **** uint8 currentRow = 1;
 212:main.c        **** uint8 currentCol = 1;
 213:main.c        **** 
 214:main.c        **** uint8 stoppedAfterTurn = 0;
 215:main.c        **** uint8 ignoreSensor = 0;
 216:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 217:main.c        **** 
 218:main.c        **** enum RobotMovement ForwardCourseCorrection();
 219:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 939              		.loc 1 219 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
 220:main.c        ****     // if S5 and S6 are on black, move forward
 221:main.c        ****     if (!s5 && !s6) {
 949              		.loc 1 221 0
 950 0004 1C4B     		ldr	r3, .L46
 951 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 0008 002B     		cmp	r3, #0
 953 000a 0FD1     		bne	.L39
 954              		.loc 1 221 0 is_stmt 0 discriminator 1
 955 000c 1B4B     		ldr	r3, .L46+4
 956 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957 0010 002B     		cmp	r3, #0
 958 0012 0BD1     		bne	.L39
 222:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 959              		.loc 1 222 0 is_stmt 1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 22


 960 0014 1A4B     		ldr	r3, .L46+8
 961 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0018 032B     		cmp	r3, #3
 963 001a 01D0     		beq	.L40
 223:main.c        ****             return AdjustToTheLeft;
 964              		.loc 1 223 0
 965 001c 0323     		movs	r3, #3
 966 001e 26E0     		b	.L41
 967              	.L40:
 224:main.c        ****         }
 225:main.c        ****         if (previousDirection != AdjustToTheRight) {
 968              		.loc 1 225 0
 969 0020 174B     		ldr	r3, .L46+8
 970 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0024 042B     		cmp	r3, #4
 972 0026 01D0     		beq	.L39
 226:main.c        ****             return AdjustToTheRight;    
 973              		.loc 1 226 0
 974 0028 0423     		movs	r3, #4
 975 002a 20E0     		b	.L41
 976              	.L39:
 227:main.c        ****         }
 228:main.c        ****     }
 229:main.c        ****     
 230:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 231:main.c        ****     if (s5 && s6) {
 977              		.loc 1 231 0
 978 002c 124B     		ldr	r3, .L46
 979 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0030 002B     		cmp	r3, #0
 981 0032 0FD0     		beq	.L42
 982              		.loc 1 231 0 is_stmt 0 discriminator 1
 983 0034 114B     		ldr	r3, .L46+4
 984 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 985 0038 002B     		cmp	r3, #0
 986 003a 0BD0     		beq	.L42
 232:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 987              		.loc 1 232 0 is_stmt 1
 988 003c 104B     		ldr	r3, .L46+8
 989 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 0040 032B     		cmp	r3, #3
 991 0042 01D0     		beq	.L43
 233:main.c        ****             return AdjustToTheLeft;
 992              		.loc 1 233 0
 993 0044 0323     		movs	r3, #3
 994 0046 12E0     		b	.L41
 995              	.L43:
 234:main.c        ****         }
 235:main.c        ****         if (previousDirection != AdjustToTheRight) {
 996              		.loc 1 235 0
 997 0048 0D4B     		ldr	r3, .L46+8
 998 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 004c 042B     		cmp	r3, #4
 1000 004e 01D0     		beq	.L42
 236:main.c        ****             return AdjustToTheRight;    
 1001              		.loc 1 236 0
 1002 0050 0423     		movs	r3, #4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 23


 1003 0052 0CE0     		b	.L41
 1004              	.L42:
 237:main.c        ****         }
 238:main.c        ****     }
 239:main.c        **** 
 240:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 241:main.c        ****     if (s5) {
 1005              		.loc 1 241 0
 1006 0054 084B     		ldr	r3, .L46
 1007 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 0058 002B     		cmp	r3, #0
 1009 005a 01D0     		beq	.L44
 242:main.c        ****         return AdjustToTheRight;    
 1010              		.loc 1 242 0
 1011 005c 0423     		movs	r3, #4
 1012 005e 06E0     		b	.L41
 1013              	.L44:
 243:main.c        ****     }
 244:main.c        ****     if (s6) {
 1014              		.loc 1 244 0
 1015 0060 064B     		ldr	r3, .L46+4
 1016 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 0064 002B     		cmp	r3, #0
 1018 0066 01D0     		beq	.L45
 245:main.c        ****         return AdjustToTheLeft;    
 1019              		.loc 1 245 0
 1020 0068 0323     		movs	r3, #3
 1021 006a 00E0     		b	.L41
 1022              	.L45:
 246:main.c        ****     }
 247:main.c        ****    
 248:main.c        ****     // We should never actually get to this point
 249:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 250:main.c        ****     return Stop;
 1023              		.loc 1 250 0
 1024 006c 0523     		movs	r3, #5
 1025              	.L41:
 251:main.c        **** }
 1026              		.loc 1 251 0
 1027 006e 1846     		mov	r0, r3
 1028 0070 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 0072 80BC     		pop	{r7}
 1032              		.cfi_restore 7
 1033              		.cfi_def_cfa_offset 0
 1034 0074 7047     		bx	lr
 1035              	.L47:
 1036 0076 00BF     		.align	2
 1037              	.L46:
 1038 0078 00000000 		.word	s5
 1039 007c 00000000 		.word	s6
 1040 0080 00000000 		.word	previousDirection
 1041              		.cfi_endproc
 1042              	.LFE73:
 1043              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1044              		.global	lastDirectionAfter180
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 24


 1045              		.data
 1046              		.type	lastDirectionAfter180, %object
 1047              		.size	lastDirectionAfter180, 1
 1048              	lastDirectionAfter180:
 1049 0052 06       		.byte	6
 1050              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1051              		.align	2
 1052              		.global	SpinCourseCorrection
 1053              		.thumb
 1054              		.thumb_func
 1055              		.type	SpinCourseCorrection, %function
 1056              	SpinCourseCorrection:
 1057              	.LFB74:
 252:main.c        **** 
 253:main.c        **** enum RobotMovement SpinCourseCorrection();
 254:main.c        **** 
 255:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 256:main.c        **** 
 257:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1058              		.loc 1 257 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
 1063 0000 80B4     		push	{r7}
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 258:main.c        ****     // Set first iteration flag.
 259:main.c        ****     if (!spinCourseCorrectionStarted) {
 1068              		.loc 1 259 0
 1069 0004 184B     		ldr	r3, .L55
 1070 0006 1B78     		ldrb	r3, [r3]
 1071 0008 DBB2     		uxtb	r3, r3
 1072 000a 002B     		cmp	r3, #0
 1073 000c 06D1     		bne	.L49
 260:main.c        ****         spinCourseCorrectionStarted = 1;    
 1074              		.loc 1 260 0
 1075 000e 164B     		ldr	r3, .L55
 1076 0010 0122     		movs	r2, #1
 1077 0012 1A70     		strb	r2, [r3]
 261:main.c        ****         lastDirectionAfter180 = currentDirection;
 1078              		.loc 1 261 0
 1079 0014 154B     		ldr	r3, .L55+4
 1080 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1081 0018 154B     		ldr	r3, .L55+8
 1082 001a 1A70     		strb	r2, [r3]
 1083              	.L49:
 262:main.c        ****     }
 263:main.c        ****     
 264:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 265:main.c        ****     if (s5 && s6) {
 1084              		.loc 1 265 0
 1085 001c 154B     		ldr	r3, .L55+12
 1086 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 25


 1088 0022 0FD0     		beq	.L50
 1089              		.loc 1 265 0 is_stmt 0 discriminator 1
 1090 0024 144B     		ldr	r3, .L55+16
 1091 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0028 002B     		cmp	r3, #0
 1093 002a 0BD0     		beq	.L50
 266:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1094              		.loc 1 266 0 is_stmt 1
 1095 002c 104B     		ldr	r3, .L55+8
 1096 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0030 022B     		cmp	r3, #2
 1098 0032 01D0     		beq	.L51
 267:main.c        ****             return TurnLeft;
 1099              		.loc 1 267 0
 1100 0034 0223     		movs	r3, #2
 1101 0036 12E0     		b	.L52
 1102              	.L51:
 268:main.c        ****         }
 269:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1103              		.loc 1 269 0
 1104 0038 0D4B     		ldr	r3, .L55+8
 1105 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 003c 012B     		cmp	r3, #1
 1107 003e 01D0     		beq	.L50
 270:main.c        ****             return TurnRight;    
 1108              		.loc 1 270 0
 1109 0040 0123     		movs	r3, #1
 1110 0042 0CE0     		b	.L52
 1111              	.L50:
 271:main.c        ****         }
 272:main.c        ****     }
 273:main.c        **** 
 274:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 275:main.c        ****     if (s5) {
 1112              		.loc 1 275 0
 1113 0044 0B4B     		ldr	r3, .L55+12
 1114 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0048 002B     		cmp	r3, #0
 1116 004a 01D0     		beq	.L53
 276:main.c        ****         return TurnRight;    
 1117              		.loc 1 276 0
 1118 004c 0123     		movs	r3, #1
 1119 004e 06E0     		b	.L52
 1120              	.L53:
 277:main.c        ****     }
 278:main.c        ****     if (s6) {
 1121              		.loc 1 278 0
 1122 0050 094B     		ldr	r3, .L55+16
 1123 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0054 002B     		cmp	r3, #0
 1125 0056 01D0     		beq	.L54
 279:main.c        ****         return TurnLeft;    
 1126              		.loc 1 279 0
 1127 0058 0223     		movs	r3, #2
 1128 005a 00E0     		b	.L52
 1129              	.L54:
 280:main.c        ****     }
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 26


 281:main.c        ****    
 282:main.c        ****     // We should never actually get to this point
 283:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 284:main.c        ****     return Stop;
 1130              		.loc 1 284 0
 1131 005c 0523     		movs	r3, #5
 1132              	.L52:
 285:main.c        **** }
 1133              		.loc 1 285 0
 1134 005e 1846     		mov	r0, r3
 1135 0060 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0062 80BC     		pop	{r7}
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0064 7047     		bx	lr
 1142              	.L56:
 1143 0066 00BF     		.align	2
 1144              	.L55:
 1145 0068 3D000000 		.word	spinCourseCorrectionStarted
 1146 006c 00000000 		.word	currentDirection
 1147 0070 00000000 		.word	lastDirectionAfter180
 1148 0074 00000000 		.word	s5
 1149 0078 00000000 		.word	s6
 1150              		.cfi_endproc
 1151              	.LFE74:
 1152              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1153              		.section	.text.SpinTurnCourseCorrection,"ax",%progbits
 1154              		.align	2
 1155              		.global	SpinTurnCourseCorrection
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	SpinTurnCourseCorrection, %function
 1159              	SpinTurnCourseCorrection:
 1160              	.LFB75:
 286:main.c        **** enum RobotMovement SpinTurnCourseCorrection();
 287:main.c        **** enum RobotMovement SpinTurnCourseCorrection() {
 1161              		.loc 1 287 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166 0000 80B4     		push	{r7}
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 00AF     		add	r7, sp, #0
 1170              		.cfi_def_cfa_register 7
 288:main.c        ****     // if S5 and S6 are on black, move forward
 289:main.c        ****     if (!s5 && !s6) {
 1171              		.loc 1 289 0
 1172 0004 1C4B     		ldr	r3, .L65
 1173 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1174 0008 002B     		cmp	r3, #0
 1175 000a 0FD1     		bne	.L58
 1176              		.loc 1 289 0 is_stmt 0 discriminator 1
 1177 000c 1B4B     		ldr	r3, .L65+4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 27


 1178 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 0010 002B     		cmp	r3, #0
 1180 0012 0BD1     		bne	.L58
 290:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1181              		.loc 1 290 0 is_stmt 1
 1182 0014 1A4B     		ldr	r3, .L65+8
 1183 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 0018 032B     		cmp	r3, #3
 1185 001a 01D0     		beq	.L59
 291:main.c        ****             return TurnLeft;
 1186              		.loc 1 291 0
 1187 001c 0223     		movs	r3, #2
 1188 001e 26E0     		b	.L60
 1189              	.L59:
 292:main.c        ****         }
 293:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1190              		.loc 1 293 0
 1191 0020 174B     		ldr	r3, .L65+8
 1192 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0024 042B     		cmp	r3, #4
 1194 0026 01D0     		beq	.L58
 294:main.c        ****             return TurnRight;    
 1195              		.loc 1 294 0
 1196 0028 0123     		movs	r3, #1
 1197 002a 20E0     		b	.L60
 1198              	.L58:
 295:main.c        ****         }
 296:main.c        ****     }
 297:main.c        ****     
 298:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 299:main.c        ****     if (s5 && s6) {
 1199              		.loc 1 299 0
 1200 002c 124B     		ldr	r3, .L65
 1201 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 0030 002B     		cmp	r3, #0
 1203 0032 0FD0     		beq	.L61
 1204              		.loc 1 299 0 is_stmt 0 discriminator 1
 1205 0034 114B     		ldr	r3, .L65+4
 1206 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 0038 002B     		cmp	r3, #0
 1208 003a 0BD0     		beq	.L61
 300:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1209              		.loc 1 300 0 is_stmt 1
 1210 003c 104B     		ldr	r3, .L65+8
 1211 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 0040 032B     		cmp	r3, #3
 1213 0042 01D0     		beq	.L62
 301:main.c        ****             return TurnLeft;
 1214              		.loc 1 301 0
 1215 0044 0223     		movs	r3, #2
 1216 0046 12E0     		b	.L60
 1217              	.L62:
 302:main.c        ****         }
 303:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1218              		.loc 1 303 0
 1219 0048 0D4B     		ldr	r3, .L65+8
 1220 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 28


 1221 004c 042B     		cmp	r3, #4
 1222 004e 01D0     		beq	.L61
 304:main.c        ****             return TurnRight;    
 1223              		.loc 1 304 0
 1224 0050 0123     		movs	r3, #1
 1225 0052 0CE0     		b	.L60
 1226              	.L61:
 305:main.c        ****         }
 306:main.c        ****     }
 307:main.c        **** 
 308:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 309:main.c        ****     if (s5) {
 1227              		.loc 1 309 0
 1228 0054 084B     		ldr	r3, .L65
 1229 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0058 002B     		cmp	r3, #0
 1231 005a 01D0     		beq	.L63
 310:main.c        ****         return TurnRight;    
 1232              		.loc 1 310 0
 1233 005c 0123     		movs	r3, #1
 1234 005e 06E0     		b	.L60
 1235              	.L63:
 311:main.c        ****     }
 312:main.c        ****     if (s6) {
 1236              		.loc 1 312 0
 1237 0060 064B     		ldr	r3, .L65+4
 1238 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0064 002B     		cmp	r3, #0
 1240 0066 01D0     		beq	.L64
 313:main.c        ****         return TurnLeft;    
 1241              		.loc 1 313 0
 1242 0068 0223     		movs	r3, #2
 1243 006a 00E0     		b	.L60
 1244              	.L64:
 314:main.c        ****     }
 315:main.c        ****    
 316:main.c        ****     // We should never actually get to this point
 317:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 318:main.c        ****     return Stop;
 1245              		.loc 1 318 0
 1246 006c 0523     		movs	r3, #5
 1247              	.L60:
 319:main.c        **** }
 1248              		.loc 1 319 0
 1249 006e 1846     		mov	r0, r3
 1250 0070 BD46     		mov	sp, r7
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 0072 80BC     		pop	{r7}
 1254              		.cfi_restore 7
 1255              		.cfi_def_cfa_offset 0
 1256 0074 7047     		bx	lr
 1257              	.L66:
 1258 0076 00BF     		.align	2
 1259              	.L65:
 1260 0078 00000000 		.word	s5
 1261 007c 00000000 		.word	s6
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 29


 1262 0080 00000000 		.word	previousDirection
 1263              		.cfi_endproc
 1264              	.LFE75:
 1265              		.size	SpinTurnCourseCorrection, .-SpinTurnCourseCorrection
 1266              		.global	firstTurnIteration
 1267              		.bss
 1268              		.type	firstTurnIteration, %object
 1269              		.size	firstTurnIteration, 1
 1270              	firstTurnIteration:
 1271 0056 00       		.space	1
 1272              	forwardAfterTurnLIgnore:
 1273 0057 00       		.space	1
 1274              	forwardAfterTurnRIgnore:
 1275 0058 00       		.space	1
 1276              		.global	__aeabi_i2f
 1277              		.global	__aeabi_fcmpge
 1278              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1279              		.align	2
 1280              		.global	GetMovementAccordingToInstruction
 1281              		.thumb
 1282              		.thumb_func
 1283              		.type	GetMovementAccordingToInstruction, %function
 1284              	GetMovementAccordingToInstruction:
 1285              	.LFB76:
 320:main.c        **** 
 321:main.c        **** uint8 firstTurnIteration = 0;
 322:main.c        **** volatile static uint8 forwardAfterTurnLIgnore = 0;
 323:main.c        **** volatile static uint8 forwardAfterTurnRIgnore = 0;
 324:main.c        **** 
 325:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1286              		.loc 1 325 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 40
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 B0B5     		push	{r4, r5, r7, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 8AB0     		sub	sp, sp, #40
 1297              		.cfi_def_cfa_offset 56
 1298 0004 00AF     		add	r7, sp, #0
 1299              		.cfi_def_cfa_register 7
 326:main.c        ****     float blocksize;
 327:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1300              		.loc 1 327 0
 1301 0006 A14B     		ldr	r3, .L136
 1302 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1303 000a 002B     		cmp	r3, #0
 1304 000c 03D0     		beq	.L68
 1305              		.loc 1 327 0 is_stmt 0 discriminator 1
 1306 000e 9F4B     		ldr	r3, .L136
 1307 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1308 0012 012B     		cmp	r3, #1
 1309 0014 03D1     		bne	.L69
 1310              	.L68:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 30


 328:main.c        ****         blocksize = yBlocksize;
 1311              		.loc 1 328 0 is_stmt 1
 1312 0016 9E4B     		ldr	r3, .L136+4
 1313 0018 1B68     		ldr	r3, [r3]	@ float
 1314 001a 7B62     		str	r3, [r7, #36]	@ float
 1315 001c 02E0     		b	.L70
 1316              	.L69:
 329:main.c        ****     } else {
 330:main.c        ****         blocksize = xBlocksize;
 1317              		.loc 1 330 0
 1318 001e 9D4B     		ldr	r3, .L136+8
 1319 0020 1B68     		ldr	r3, [r3]	@ float
 1320 0022 7B62     		str	r3, [r7, #36]	@ float
 1321              	.L70:
 331:main.c        ****     }
 332:main.c        ****     
 333:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 334:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 335:main.c        ****         // OR an EVENT happens in the current instruction
 336:main.c        ****         // e.g. CurrentInstruction: GoForward 
 337:main.c        ****         //      S3 on BLACK
 338:main.c        ****         //      Check Ignore Count
 339:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 340:main.c        ****     
 341:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1322              		.loc 1 341 0
 1323 0024 994B     		ldr	r3, .L136
 1324 0026 1B78     		ldrb	r3, [r3]
 1325 0028 87F82330 		strb	r3, [r7, #35]
 342:main.c        ****     
 343:main.c        ****     /*
 344:main.c        ****     if (instructionList[instructionIndex + 1].direction == uTurn && currentInstructionDirection == 
 345:main.c        ****         if (s5 && s6) {
 346:main.c        ****             MoveToNextInstruction(); // case to start uTurns when needed. prevents uTurn overshooti
 347:main.c        ****             return Stop;
 348:main.c        ****         }
 349:main.c        ****     }
 350:main.c        ****     */
 351:main.c        ****     
 352:main.c        ****     switch (currentInstructionDirection) {
 1326              		.loc 1 352 0
 1327 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1328 0030 052B     		cmp	r3, #5
 1329 0032 00F24283 		bhi	.L71
 1330 0036 01A2     		adr	r2, .L73
 1331 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1332              		.p2align 2
 1333              	.L73:
 1334 003c 55000000 		.word	.L72+1
 1335 0040 5F010000 		.word	.L74+1
 1336 0044 DD020000 		.word	.L75+1
 1337 0048 29060000 		.word	.L76+1
 1338 004c 09040000 		.word	.L77+1
 1339 0050 1B050000 		.word	.L78+1
 1340              		.p2align 1
 1341              	.L72:
 353:main.c        ****         case GoForward:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 31


 354:main.c        ****             if(currentDirection == Stop) {
 1342              		.loc 1 354 0
 1343 0054 904B     		ldr	r3, .L136+12
 1344 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1345 0058 052B     		cmp	r3, #5
 1346 005a 08D1     		bne	.L79
 355:main.c        ****                 if(stopBuffer <= 25) {
 1347              		.loc 1 355 0
 1348 005c 8F4B     		ldr	r3, .L136+16
 1349 005e 1B68     		ldr	r3, [r3]
 1350 0060 192B     		cmp	r3, #25
 1351 0062 01D8     		bhi	.L80
 356:main.c        ****                     return Stop;
 1352              		.loc 1 356 0
 1353 0064 0523     		movs	r3, #5
 1354 0066 29E3     		b	.L81
 1355              	.L80:
 357:main.c        ****                 } else {
 358:main.c        ****                     stopBuffer = 100;
 1356              		.loc 1 358 0
 1357 0068 8C4B     		ldr	r3, .L136+16
 1358 006a 6422     		movs	r2, #100
 1359 006c 1A60     		str	r2, [r3]
 1360              	.L79:
 359:main.c        ****                 }
 360:main.c        ****             }
 361:main.c        ****             if (s3) {
 1361              		.loc 1 361 0
 1362 006e 8C4B     		ldr	r3, .L136+20
 1363 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1364 0072 002B     		cmp	r3, #0
 1365 0074 02D0     		beq	.L82
 362:main.c        ****                 leftStatusFlag = 1;
 1366              		.loc 1 362 0
 1367 0076 8B4B     		ldr	r3, .L136+24
 1368 0078 0122     		movs	r2, #1
 1369 007a 1A70     		strb	r2, [r3]
 1370              	.L82:
 363:main.c        ****             }
 364:main.c        ****             
 365:main.c        ****             if (s4) {
 1371              		.loc 1 365 0
 1372 007c 8A4B     		ldr	r3, .L136+28
 1373 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1374 0080 002B     		cmp	r3, #0
 1375 0082 02D0     		beq	.L83
 366:main.c        ****                 rightStatusFlag = 1;
 1376              		.loc 1 366 0
 1377 0084 894B     		ldr	r3, .L136+32
 1378 0086 0122     		movs	r2, #1
 1379 0088 1A70     		strb	r2, [r3]
 1380              	.L83:
 367:main.c        ****             }
 368:main.c        ****             
 369:main.c        ****             
 370:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 371:main.c        ****             if (leftStatusFlag) {
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 32


 1381              		.loc 1 371 0
 1382 008a 864B     		ldr	r3, .L136+24
 1383 008c 1B78     		ldrb	r3, [r3]
 1384 008e DBB2     		uxtb	r3, r3
 1385 0090 002B     		cmp	r3, #0
 1386 0092 2DD0     		beq	.L84
 372:main.c        ****                 if (!s3) {
 1387              		.loc 1 372 0
 1388 0094 824B     		ldr	r3, .L136+20
 1389 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 0098 002B     		cmp	r3, #0
 1391 009a 29D1     		bne	.L84
 373:main.c        ****                     leftStatusFlag = 0;    
 1392              		.loc 1 373 0
 1393 009c 814B     		ldr	r3, .L136+24
 1394 009e 0022     		movs	r2, #0
 1395 00a0 1A70     		strb	r2, [r3]
 374:main.c        ****                     if (currentIgnoreL != 0 && forwardAfterTurnLIgnore > 0) {
 1396              		.loc 1 374 0
 1397 00a2 834B     		ldr	r3, .L136+36
 1398 00a4 1B78     		ldrb	r3, [r3]
 1399 00a6 DBB2     		uxtb	r3, r3
 1400 00a8 002B     		cmp	r3, #0
 1401 00aa 0CD0     		beq	.L85
 1402              		.loc 1 374 0 is_stmt 0 discriminator 1
 1403 00ac 814B     		ldr	r3, .L136+40
 1404 00ae 1B78     		ldrb	r3, [r3]
 1405 00b0 DBB2     		uxtb	r3, r3
 1406 00b2 002B     		cmp	r3, #0
 1407 00b4 07D0     		beq	.L85
 375:main.c        ****                         forwardAfterTurnLIgnore--;
 1408              		.loc 1 375 0 is_stmt 1
 1409 00b6 7F4B     		ldr	r3, .L136+40
 1410 00b8 1B78     		ldrb	r3, [r3]
 1411 00ba DBB2     		uxtb	r3, r3
 1412 00bc 013B     		subs	r3, r3, #1
 1413 00be DAB2     		uxtb	r2, r3
 1414 00c0 7C4B     		ldr	r3, .L136+40
 1415 00c2 1A70     		strb	r2, [r3]
 1416 00c4 14E0     		b	.L84
 1417              	.L85:
 376:main.c        ****                     } else {
 377:main.c        ****                         if (currentIgnoreL == 0) {
 1418              		.loc 1 377 0
 1419 00c6 7A4B     		ldr	r3, .L136+36
 1420 00c8 1B78     		ldrb	r3, [r3]
 1421 00ca DBB2     		uxtb	r3, r3
 1422 00cc 002B     		cmp	r3, #0
 1423 00ce 03D1     		bne	.L86
 378:main.c        ****                             MoveToNextInstruction();
 1424              		.loc 1 378 0
 1425 00d0 FFF7FEFF 		bl	MoveToNextInstruction
 379:main.c        ****                             return Stop;
 1426              		.loc 1 379 0
 1427 00d4 0523     		movs	r3, #5
 1428 00d6 F1E2     		b	.L81
 1429              	.L86:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 33


 380:main.c        ****                         }
 381:main.c        ****                         if (currentIgnoreL > 0) {
 1430              		.loc 1 381 0
 1431 00d8 754B     		ldr	r3, .L136+36
 1432 00da 1B78     		ldrb	r3, [r3]
 1433 00dc DBB2     		uxtb	r3, r3
 1434 00de 002B     		cmp	r3, #0
 1435 00e0 06D0     		beq	.L84
 382:main.c        ****                             currentIgnoreL--;    
 1436              		.loc 1 382 0
 1437 00e2 734B     		ldr	r3, .L136+36
 1438 00e4 1B78     		ldrb	r3, [r3]
 1439 00e6 DBB2     		uxtb	r3, r3
 1440 00e8 013B     		subs	r3, r3, #1
 1441 00ea DAB2     		uxtb	r2, r3
 1442 00ec 704B     		ldr	r3, .L136+36
 1443 00ee 1A70     		strb	r2, [r3]
 1444              	.L84:
 383:main.c        ****                         }
 384:main.c        ****                     }
 385:main.c        ****                 }
 386:main.c        ****             }
 387:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 388:main.c        ****             if (rightStatusFlag) {
 1445              		.loc 1 388 0
 1446 00f0 6E4B     		ldr	r3, .L136+32
 1447 00f2 1B78     		ldrb	r3, [r3]
 1448 00f4 DBB2     		uxtb	r3, r3
 1449 00f6 002B     		cmp	r3, #0
 1450 00f8 2DD0     		beq	.L87
 389:main.c        ****                 if (!s4) {
 1451              		.loc 1 389 0
 1452 00fa 6B4B     		ldr	r3, .L136+28
 1453 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 00fe 002B     		cmp	r3, #0
 1455 0100 29D1     		bne	.L87
 390:main.c        ****                     rightStatusFlag = 0;           
 1456              		.loc 1 390 0
 1457 0102 6A4B     		ldr	r3, .L136+32
 1458 0104 0022     		movs	r2, #0
 1459 0106 1A70     		strb	r2, [r3]
 391:main.c        ****                     if (currentIgnoreR != 0 && forwardAfterTurnRIgnore > 0) {
 1460              		.loc 1 391 0
 1461 0108 6B4B     		ldr	r3, .L136+44
 1462 010a 1B78     		ldrb	r3, [r3]
 1463 010c DBB2     		uxtb	r3, r3
 1464 010e 002B     		cmp	r3, #0
 1465 0110 0CD0     		beq	.L88
 1466              		.loc 1 391 0 is_stmt 0 discriminator 1
 1467 0112 6A4B     		ldr	r3, .L136+48
 1468 0114 1B78     		ldrb	r3, [r3]
 1469 0116 DBB2     		uxtb	r3, r3
 1470 0118 002B     		cmp	r3, #0
 1471 011a 07D0     		beq	.L88
 392:main.c        ****                         forwardAfterTurnRIgnore--;
 1472              		.loc 1 392 0 is_stmt 1
 1473 011c 674B     		ldr	r3, .L136+48
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 34


 1474 011e 1B78     		ldrb	r3, [r3]
 1475 0120 DBB2     		uxtb	r3, r3
 1476 0122 013B     		subs	r3, r3, #1
 1477 0124 DAB2     		uxtb	r2, r3
 1478 0126 654B     		ldr	r3, .L136+48
 1479 0128 1A70     		strb	r2, [r3]
 1480 012a 14E0     		b	.L87
 1481              	.L88:
 393:main.c        ****                     } else {
 394:main.c        ****                         if (currentIgnoreR == 0) {
 1482              		.loc 1 394 0
 1483 012c 624B     		ldr	r3, .L136+44
 1484 012e 1B78     		ldrb	r3, [r3]
 1485 0130 DBB2     		uxtb	r3, r3
 1486 0132 002B     		cmp	r3, #0
 1487 0134 03D1     		bne	.L89
 395:main.c        ****                             MoveToNextInstruction();
 1488              		.loc 1 395 0
 1489 0136 FFF7FEFF 		bl	MoveToNextInstruction
 396:main.c        ****                             return Stop;
 1490              		.loc 1 396 0
 1491 013a 0523     		movs	r3, #5
 1492 013c BEE2     		b	.L81
 1493              	.L89:
 397:main.c        ****                         }
 398:main.c        ****                         if (currentIgnoreR > 0) {
 1494              		.loc 1 398 0
 1495 013e 5E4B     		ldr	r3, .L136+44
 1496 0140 1B78     		ldrb	r3, [r3]
 1497 0142 DBB2     		uxtb	r3, r3
 1498 0144 002B     		cmp	r3, #0
 1499 0146 06D0     		beq	.L87
 399:main.c        ****                             currentIgnoreR--;   
 1500              		.loc 1 399 0
 1501 0148 5B4B     		ldr	r3, .L136+44
 1502 014a 1B78     		ldrb	r3, [r3]
 1503 014c DBB2     		uxtb	r3, r3
 1504 014e 013B     		subs	r3, r3, #1
 1505 0150 DAB2     		uxtb	r2, r3
 1506 0152 594B     		ldr	r3, .L136+44
 1507 0154 1A70     		strb	r2, [r3]
 1508              	.L87:
 400:main.c        ****                         }
 401:main.c        ****                     }
 402:main.c        ****                     
 403:main.c        ****                 }
 404:main.c        ****                    
 405:main.c        ****             }
 406:main.c        ****             
 407:main.c        ****           
 408:main.c        ****             return ForwardCourseCorrection();
 1509              		.loc 1 408 0
 1510 0156 FFF7FEFF 		bl	ForwardCourseCorrection
 1511 015a 0346     		mov	r3, r0
 1512 015c AEE2     		b	.L81
 1513              	.L74:
 409:main.c        ****             break;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 35


 410:main.c        ****         case waitForLeftTurn:
 411:main.c        ****             // continue moving forward until s3 goes on black
 412:main.c        ****             // if we are turning left already
 413:main.c        ****                 // wait until s5 || s6 are on black
 414:main.c        ****                 // return stop
 415:main.c        ****             if (!firstTurnIteration) {
 1514              		.loc 1 415 0
 1515 015e 584B     		ldr	r3, .L136+52
 1516 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1517 0162 002B     		cmp	r3, #0
 1518 0164 08D1     		bne	.L90
 416:main.c        ****                 
 417:main.c        ****                 if (!s3) {
 1519              		.loc 1 417 0
 1520 0166 4E4B     		ldr	r3, .L136+20
 1521 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 016a 002B     		cmp	r3, #0
 1523 016c 04D1     		bne	.L90
 418:main.c        ****                     firstTurnIteration = 1;
 1524              		.loc 1 418 0
 1525 016e 544B     		ldr	r3, .L136+52
 1526 0170 0122     		movs	r2, #1
 1527 0172 1A70     		strb	r2, [r3]
 419:main.c        ****                     return Stop;    
 1528              		.loc 1 419 0
 1529 0174 0523     		movs	r3, #5
 1530 0176 A1E2     		b	.L81
 1531              	.L90:
 420:main.c        ****                 }
 421:main.c        ****                 if (s3) {
 422:main.c        ****                     //return Backward;    
 423:main.c        ****                 }
 424:main.c        ****             }
 425:main.c        ****             
 426:main.c        ****             if (turnFinishedFlag) {
 1532              		.loc 1 426 0
 1533 0178 524B     		ldr	r3, .L136+56
 1534 017a 1B78     		ldrb	r3, [r3]
 1535 017c DBB2     		uxtb	r3, r3
 1536 017e 002B     		cmp	r3, #0
 1537 0180 31D0     		beq	.L92
 427:main.c        ****                 if (!s3 && !s5 && !s6) {
 1538              		.loc 1 427 0
 1539 0182 474B     		ldr	r3, .L136+20
 1540 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 0186 002B     		cmp	r3, #0
 1542 0188 0BD1     		bne	.L93
 1543              		.loc 1 427 0 is_stmt 0 discriminator 1
 1544 018a 4F4B     		ldr	r3, .L136+60
 1545 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 018e 002B     		cmp	r3, #0
 1547 0190 07D1     		bne	.L93
 1548              		.loc 1 427 0 discriminator 2
 1549 0192 4E4B     		ldr	r3, .L136+64
 1550 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 0196 002B     		cmp	r3, #0
 1552 0198 03D1     		bne	.L93
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 36


 428:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 429:main.c        ****                     return ForwardCourseCorrection();
 1553              		.loc 1 429 0 is_stmt 1
 1554 019a FFF7FEFF 		bl	ForwardCourseCorrection
 1555 019e 0346     		mov	r3, r0
 1556 01a0 8CE2     		b	.L81
 1557              	.L93:
 430:main.c        ****                 }
 431:main.c        ****                 if (s5 || s6) {
 1558              		.loc 1 431 0
 1559 01a2 494B     		ldr	r3, .L136+60
 1560 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 01a6 002B     		cmp	r3, #0
 1562 01a8 03D1     		bne	.L94
 1563              		.loc 1 431 0 is_stmt 0 discriminator 1
 1564 01aa 484B     		ldr	r3, .L136+64
 1565 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1566 01ae 002B     		cmp	r3, #0
 1567 01b0 03D0     		beq	.L95
 1568              	.L94:
 432:main.c        ****                     return SpinCourseCorrection();
 1569              		.loc 1 432 0 is_stmt 1
 1570 01b2 FFF7FEFF 		bl	SpinCourseCorrection
 1571 01b6 0346     		mov	r3, r0
 1572 01b8 80E2     		b	.L81
 1573              	.L95:
 433:main.c        ****                 }
 434:main.c        ****                 if (forwardBuffer <= 10) {
 1574              		.loc 1 434 0
 1575 01ba 454B     		ldr	r3, .L136+68
 1576 01bc 1B88     		ldrh	r3, [r3]
 1577 01be 0A2B     		cmp	r3, #10
 1578 01c0 03D8     		bhi	.L96
 435:main.c        ****                     return ForwardCourseCorrection();    
 1579              		.loc 1 435 0
 1580 01c2 FFF7FEFF 		bl	ForwardCourseCorrection
 1581 01c6 0346     		mov	r3, r0
 1582 01c8 78E2     		b	.L81
 1583              	.L96:
 436:main.c        **** 
 437:main.c        ****                 } else {
 438:main.c        ****                     forwardBuffer = 100;
 1584              		.loc 1 438 0
 1585 01ca 414B     		ldr	r3, .L136+68
 1586 01cc 6422     		movs	r2, #100
 1587 01ce 1A80     		strh	r2, [r3]	@ movhi
 439:main.c        ****                     if (s3) {
 1588              		.loc 1 439 0
 1589 01d0 334B     		ldr	r3, .L136+20
 1590 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1591 01d4 002B     		cmp	r3, #0
 1592 01d6 06D0     		beq	.L92
 440:main.c        ****                         turnFinishedFlag = 0;
 1593              		.loc 1 440 0
 1594 01d8 3A4B     		ldr	r3, .L136+56
 1595 01da 0022     		movs	r2, #0
 1596 01dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 37


 441:main.c        ****                         MoveToNextInstruction();   
 1597              		.loc 1 441 0
 1598 01de FFF7FEFF 		bl	MoveToNextInstruction
 442:main.c        ****                         return Stop;  
 1599              		.loc 1 442 0
 1600 01e2 0523     		movs	r3, #5
 1601 01e4 6AE2     		b	.L81
 1602              	.L92:
 443:main.c        ****                     }
 444:main.c        ****                 }
 445:main.c        ****             }
 446:main.c        ****             
 447:main.c        ****             
 448:main.c        ****             if (currentDirection == Stop) {
 1603              		.loc 1 448 0
 1604 01e6 2C4B     		ldr	r3, .L136+12
 1605 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1606 01ea 052B     		cmp	r3, #5
 1607 01ec 09D1     		bne	.L97
 449:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 450:main.c        ****                 if (stopBuffer <= 25) {
 1608              		.loc 1 450 0
 1609 01ee 2B4B     		ldr	r3, .L136+16
 1610 01f0 1B68     		ldr	r3, [r3]
 1611 01f2 192B     		cmp	r3, #25
 1612 01f4 01D8     		bhi	.L98
 451:main.c        ****                     return Stop;   
 1613              		.loc 1 451 0
 1614 01f6 0523     		movs	r3, #5
 1615 01f8 60E2     		b	.L81
 1616              	.L98:
 452:main.c        ****                 }
 453:main.c        ****                 return ForwardCourseCorrection();
 1617              		.loc 1 453 0
 1618 01fa FFF7FEFF 		bl	ForwardCourseCorrection
 1619 01fe 0346     		mov	r3, r0
 1620 0200 5CE2     		b	.L81
 1621              	.L97:
 454:main.c        ****             }
 455:main.c        ****          
 456:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 457:main.c        ****             if (currentDirection == TurnLeft) {
 1622              		.loc 1 457 0
 1623 0202 254B     		ldr	r3, .L136+12
 1624 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625 0206 022B     		cmp	r3, #2
 1626 0208 32D1     		bne	.L99
 458:main.c        ****                 // If turn started and we are still on black, continue turning
 459:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 460:main.c        ****                 if (turnStartedFlag) {
 1627              		.loc 1 460 0
 1628 020a 324B     		ldr	r3, .L136+72
 1629 020c 1B78     		ldrb	r3, [r3]
 1630 020e DBB2     		uxtb	r3, r3
 1631 0210 002B     		cmp	r3, #0
 1632 0212 0ED0     		beq	.L100
 461:main.c        ****                     if (s3 && (s5 && s6)) {
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 38


 1633              		.loc 1 461 0
 1634 0214 224B     		ldr	r3, .L136+20
 1635 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 0218 002B     		cmp	r3, #0
 1637 021a 0AD0     		beq	.L100
 1638              		.loc 1 461 0 is_stmt 0 discriminator 1
 1639 021c 2A4B     		ldr	r3, .L136+60
 1640 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1641 0220 002B     		cmp	r3, #0
 1642 0222 06D0     		beq	.L100
 1643              		.loc 1 461 0 discriminator 2
 1644 0224 294B     		ldr	r3, .L136+64
 1645 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 0228 002B     		cmp	r3, #0
 1647 022a 02D0     		beq	.L100
 462:main.c        ****                         turnStartedFlag = 0;
 1648              		.loc 1 462 0 is_stmt 1
 1649 022c 294B     		ldr	r3, .L136+72
 1650 022e 0022     		movs	r2, #0
 1651 0230 1A70     		strb	r2, [r3]
 1652              	.L100:
 463:main.c        ****                     }
 464:main.c        ****                 }
 465:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1653              		.loc 1 465 0
 1654 0232 284B     		ldr	r3, .L136+72
 1655 0234 1B78     		ldrb	r3, [r3]
 1656 0236 DBB2     		uxtb	r3, r3
 1657 0238 002B     		cmp	r3, #0
 1658 023a 17D1     		bne	.L101
 1659              		.loc 1 465 0 is_stmt 0 discriminator 1
 1660 023c 184B     		ldr	r3, .L136+20
 1661 023e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1662 0240 002B     		cmp	r3, #0
 1663 0242 13D1     		bne	.L101
 1664              		.loc 1 465 0 discriminator 2
 1665 0244 204B     		ldr	r3, .L136+60
 1666 0246 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 0248 002B     		cmp	r3, #0
 1668 024a 03D0     		beq	.L102
 1669              		.loc 1 465 0 discriminator 3
 1670 024c 1F4B     		ldr	r3, .L136+64
 1671 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1672 0250 002B     		cmp	r3, #0
 1673 0252 0BD1     		bne	.L101
 1674              	.L102:
 466:main.c        ****                     turnFinishedFlag = 1;
 1675              		.loc 1 466 0 is_stmt 1
 1676 0254 1B4B     		ldr	r3, .L136+56
 1677 0256 0122     		movs	r2, #1
 1678 0258 1A70     		strb	r2, [r3]
 467:main.c        ****                     firstTurnIteration = 0;
 1679              		.loc 1 467 0
 1680 025a 194B     		ldr	r3, .L136+52
 1681 025c 0022     		movs	r2, #0
 1682 025e 1A70     		strb	r2, [r3]
 468:main.c        ****                     totalDistance = 0;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 39


 1683              		.loc 1 468 0
 1684 0260 1D4B     		ldr	r3, .L136+76
 1685 0262 4FF00002 		mov	r2, #0
 1686 0266 1A60     		str	r2, [r3]	@ float
 469:main.c        ****                     return ForwardAfterTurn;
 1687              		.loc 1 469 0
 1688 0268 0823     		movs	r3, #8
 1689 026a 27E2     		b	.L81
 1690              	.L101:
 470:main.c        ****                 }
 471:main.c        ****                 else
 472:main.c        ****                 {
 473:main.c        ****                     return TurnLeft;
 1691              		.loc 1 473 0
 1692 026c 0223     		movs	r3, #2
 1693 026e 25E2     		b	.L81
 1694              	.L99:
 474:main.c        ****                 }
 475:main.c        ****             }
 476:main.c        ****             
 477:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 478:main.c        ****             if (!s3) {
 1695              		.loc 1 478 0
 1696 0270 0B4B     		ldr	r3, .L136+20
 1697 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 0274 002B     		cmp	r3, #0
 1699 0276 04D1     		bne	.L103
 479:main.c        ****                 turnStartedFlag = 1;
 1700              		.loc 1 479 0
 1701 0278 164B     		ldr	r3, .L136+72
 1702 027a 0122     		movs	r2, #1
 1703 027c 1A70     		strb	r2, [r3]
 480:main.c        ****                 return TurnLeft;
 1704              		.loc 1 480 0
 1705 027e 0223     		movs	r3, #2
 1706 0280 1CE2     		b	.L81
 1707              	.L103:
 481:main.c        ****             }
 482:main.c        ****             
 483:main.c        ****             // Otherwise, keep going forward
 484:main.c        ****             return ForwardCourseCorrection(); 
 1708              		.loc 1 484 0
 1709 0282 FFF7FEFF 		bl	ForwardCourseCorrection
 1710 0286 0346     		mov	r3, r0
 1711 0288 18E2     		b	.L81
 1712              	.L137:
 1713 028a 00BF     		.align	2
 1714              	.L136:
 1715 028c 00000000 		.word	currentInstruction
 1716 0290 00000000 		.word	yBlocksize
 1717 0294 00000000 		.word	xBlocksize
 1718 0298 00000000 		.word	currentDirection
 1719 029c 00000000 		.word	stopBuffer
 1720 02a0 00000000 		.word	s3
 1721 02a4 3B000000 		.word	leftStatusFlag
 1722 02a8 00000000 		.word	s4
 1723 02ac 3C000000 		.word	rightStatusFlag
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 40


 1724 02b0 3E000000 		.word	currentIgnoreL
 1725 02b4 57000000 		.word	forwardAfterTurnLIgnore
 1726 02b8 3F000000 		.word	currentIgnoreR
 1727 02bc 58000000 		.word	forwardAfterTurnRIgnore
 1728 02c0 00000000 		.word	firstTurnIteration
 1729 02c4 37000000 		.word	turnFinishedFlag
 1730 02c8 00000000 		.word	s5
 1731 02cc 00000000 		.word	s6
 1732 02d0 00000000 		.word	forwardBuffer
 1733 02d4 36000000 		.word	turnStartedFlag
 1734 02d8 00000000 		.word	totalDistance
 1735              	.L75:
 485:main.c        ****             break;
 486:main.c        ****         case waitForRightTurn:
 487:main.c        ****             // continue moving forward until s4 goes on black
 488:main.c        ****             // if we are turning left already
 489:main.c        ****                 // wait until s5 || s6 are on black
 490:main.c        ****                 // return stop
 491:main.c        ****             if (!firstTurnIteration) {
 1736              		.loc 1 491 0
 1737 02dc 9E4B     		ldr	r3, .L138
 1738 02de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 02e0 002B     		cmp	r3, #0
 1740 02e2 08D1     		bne	.L104
 492:main.c        ****                 
 493:main.c        ****                 if (!s4) {
 1741              		.loc 1 493 0
 1742 02e4 9D4B     		ldr	r3, .L138+4
 1743 02e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1744 02e8 002B     		cmp	r3, #0
 1745 02ea 04D1     		bne	.L104
 494:main.c        ****                     firstTurnIteration = 1; 
 1746              		.loc 1 494 0
 1747 02ec 9A4B     		ldr	r3, .L138
 1748 02ee 0122     		movs	r2, #1
 1749 02f0 1A70     		strb	r2, [r3]
 495:main.c        ****                     return Stop;
 1750              		.loc 1 495 0
 1751 02f2 0523     		movs	r3, #5
 1752 02f4 E2E1     		b	.L81
 1753              	.L104:
 496:main.c        ****                 }
 497:main.c        ****                 if (s4) {
 498:main.c        ****                     //return Backward;    
 499:main.c        ****                 }
 500:main.c        ****             }
 501:main.c        **** 
 502:main.c        ****             if (turnFinishedFlag) {
 1754              		.loc 1 502 0
 1755 02f6 9A4B     		ldr	r3, .L138+8
 1756 02f8 1B78     		ldrb	r3, [r3]
 1757 02fa DBB2     		uxtb	r3, r3
 1758 02fc 002B     		cmp	r3, #0
 1759 02fe 34D0     		beq	.L106
 503:main.c        ****                 if (!s4 && !s5 && !s6) {
 1760              		.loc 1 503 0
 1761 0300 964B     		ldr	r3, .L138+4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 41


 1762 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1763 0304 002B     		cmp	r3, #0
 1764 0306 0BD1     		bne	.L107
 1765              		.loc 1 503 0 is_stmt 0 discriminator 1
 1766 0308 964B     		ldr	r3, .L138+12
 1767 030a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 030c 002B     		cmp	r3, #0
 1769 030e 07D1     		bne	.L107
 1770              		.loc 1 503 0 discriminator 2
 1771 0310 954B     		ldr	r3, .L138+16
 1772 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 0314 002B     		cmp	r3, #0
 1774 0316 03D1     		bne	.L107
 504:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 505:main.c        ****                     return ForwardCourseCorrection();
 1775              		.loc 1 505 0 is_stmt 1
 1776 0318 FFF7FEFF 		bl	ForwardCourseCorrection
 1777 031c 0346     		mov	r3, r0
 1778 031e CDE1     		b	.L81
 1779              	.L107:
 506:main.c        ****                 }
 507:main.c        ****                 if (s5 || s6) {
 1780              		.loc 1 507 0
 1781 0320 904B     		ldr	r3, .L138+12
 1782 0322 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 0324 002B     		cmp	r3, #0
 1784 0326 03D1     		bne	.L108
 1785              		.loc 1 507 0 is_stmt 0 discriminator 1
 1786 0328 8F4B     		ldr	r3, .L138+16
 1787 032a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1788 032c 002B     		cmp	r3, #0
 1789 032e 03D0     		beq	.L109
 1790              	.L108:
 508:main.c        ****                     return SpinCourseCorrection();
 1791              		.loc 1 508 0 is_stmt 1
 1792 0330 FFF7FEFF 		bl	SpinCourseCorrection
 1793 0334 0346     		mov	r3, r0
 1794 0336 C1E1     		b	.L81
 1795              	.L109:
 509:main.c        ****                 }
 510:main.c        ****                 if (forwardBuffer <= 9) {
 1796              		.loc 1 510 0
 1797 0338 8C4B     		ldr	r3, .L138+20
 1798 033a 1B88     		ldrh	r3, [r3]
 1799 033c 092B     		cmp	r3, #9
 1800 033e 03D8     		bhi	.L110
 511:main.c        ****                     return ForwardCourseCorrection();    
 1801              		.loc 1 511 0
 1802 0340 FFF7FEFF 		bl	ForwardCourseCorrection
 1803 0344 0346     		mov	r3, r0
 1804 0346 B9E1     		b	.L81
 1805              	.L110:
 512:main.c        **** 
 513:main.c        ****                 } else {
 514:main.c        ****                     forwardBuffer = 100;
 1806              		.loc 1 514 0
 1807 0348 884B     		ldr	r3, .L138+20
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 42


 1808 034a 6422     		movs	r2, #100
 1809 034c 1A80     		strh	r2, [r3]	@ movhi
 515:main.c        ****                     if (s4) {
 1810              		.loc 1 515 0
 1811 034e 834B     		ldr	r3, .L138+4
 1812 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 0352 002B     		cmp	r3, #0
 1814 0354 09D0     		beq	.L106
 516:main.c        ****                         firstTurnIteration = 0;
 1815              		.loc 1 516 0
 1816 0356 804B     		ldr	r3, .L138
 1817 0358 0022     		movs	r2, #0
 1818 035a 1A70     		strb	r2, [r3]
 517:main.c        ****                         turnFinishedFlag = 0;
 1819              		.loc 1 517 0
 1820 035c 804B     		ldr	r3, .L138+8
 1821 035e 0022     		movs	r2, #0
 1822 0360 1A70     		strb	r2, [r3]
 518:main.c        ****                         MoveToNextInstruction();   
 1823              		.loc 1 518 0
 1824 0362 FFF7FEFF 		bl	MoveToNextInstruction
 519:main.c        ****                         return Stop;  
 1825              		.loc 1 519 0
 1826 0366 0523     		movs	r3, #5
 1827 0368 A8E1     		b	.L81
 1828              	.L106:
 520:main.c        ****                     }
 521:main.c        ****                 }
 522:main.c        ****             }
 523:main.c        ****             
 524:main.c        ****             if (currentDirection == Stop) {
 1829              		.loc 1 524 0
 1830 036a 814B     		ldr	r3, .L138+24
 1831 036c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1832 036e 052B     		cmp	r3, #5
 1833 0370 09D1     		bne	.L111
 525:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 526:main.c        ****                 if (stopBuffer <= 25) {
 1834              		.loc 1 526 0
 1835 0372 804B     		ldr	r3, .L138+28
 1836 0374 1B68     		ldr	r3, [r3]
 1837 0376 192B     		cmp	r3, #25
 1838 0378 01D8     		bhi	.L112
 527:main.c        ****                     return Stop;   
 1839              		.loc 1 527 0
 1840 037a 0523     		movs	r3, #5
 1841 037c 9EE1     		b	.L81
 1842              	.L112:
 528:main.c        ****                 }
 529:main.c        **** 
 530:main.c        ****                 return ForwardCourseCorrection();
 1843              		.loc 1 530 0
 1844 037e FFF7FEFF 		bl	ForwardCourseCorrection
 1845 0382 0346     		mov	r3, r0
 1846 0384 9AE1     		b	.L81
 1847              	.L111:
 531:main.c        ****             }
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 43


 532:main.c        ****                       
 533:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 534:main.c        ****             if (currentDirection == TurnRight) {
 1848              		.loc 1 534 0
 1849 0386 7A4B     		ldr	r3, .L138+24
 1850 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1851 038a 012B     		cmp	r3, #1
 1852 038c 2FD1     		bne	.L113
 535:main.c        ****                 // If turn started and we are still on black, continue turning
 536:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 537:main.c        ****                 if (turnStartedFlag) {
 1853              		.loc 1 537 0
 1854 038e 7A4B     		ldr	r3, .L138+32
 1855 0390 1B78     		ldrb	r3, [r3]
 1856 0392 DBB2     		uxtb	r3, r3
 1857 0394 002B     		cmp	r3, #0
 1858 0396 0ED0     		beq	.L114
 538:main.c        ****                     if (s4 && (s5 && s6)) {
 1859              		.loc 1 538 0
 1860 0398 704B     		ldr	r3, .L138+4
 1861 039a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1862 039c 002B     		cmp	r3, #0
 1863 039e 0AD0     		beq	.L114
 1864              		.loc 1 538 0 is_stmt 0 discriminator 1
 1865 03a0 704B     		ldr	r3, .L138+12
 1866 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1867 03a4 002B     		cmp	r3, #0
 1868 03a6 06D0     		beq	.L114
 1869              		.loc 1 538 0 discriminator 2
 1870 03a8 6F4B     		ldr	r3, .L138+16
 1871 03aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 03ac 002B     		cmp	r3, #0
 1873 03ae 02D0     		beq	.L114
 539:main.c        ****                         turnStartedFlag = 0;
 1874              		.loc 1 539 0 is_stmt 1
 1875 03b0 714B     		ldr	r3, .L138+32
 1876 03b2 0022     		movs	r2, #0
 1877 03b4 1A70     		strb	r2, [r3]
 1878              	.L114:
 540:main.c        ****                     }
 541:main.c        ****                 }
 542:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1879              		.loc 1 542 0
 1880 03b6 704B     		ldr	r3, .L138+32
 1881 03b8 1B78     		ldrb	r3, [r3]
 1882 03ba DBB2     		uxtb	r3, r3
 1883 03bc 002B     		cmp	r3, #0
 1884 03be 14D1     		bne	.L115
 1885              		.loc 1 542 0 is_stmt 0 discriminator 1
 1886 03c0 664B     		ldr	r3, .L138+4
 1887 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 03c4 002B     		cmp	r3, #0
 1889 03c6 10D1     		bne	.L115
 1890              		.loc 1 542 0 discriminator 2
 1891 03c8 664B     		ldr	r3, .L138+12
 1892 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 03cc 002B     		cmp	r3, #0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 44


 1894 03ce 03D0     		beq	.L116
 1895              		.loc 1 542 0 discriminator 3
 1896 03d0 654B     		ldr	r3, .L138+16
 1897 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1898 03d4 002B     		cmp	r3, #0
 1899 03d6 08D1     		bne	.L115
 1900              	.L116:
 543:main.c        ****                     turnFinishedFlag = 1;
 1901              		.loc 1 543 0 is_stmt 1
 1902 03d8 614B     		ldr	r3, .L138+8
 1903 03da 0122     		movs	r2, #1
 1904 03dc 1A70     		strb	r2, [r3]
 544:main.c        ****                     totalDistance = 0;
 1905              		.loc 1 544 0
 1906 03de 674B     		ldr	r3, .L138+36
 1907 03e0 4FF00002 		mov	r2, #0
 1908 03e4 1A60     		str	r2, [r3]	@ float
 545:main.c        ****                     return ForwardAfterTurn;
 1909              		.loc 1 545 0
 1910 03e6 0823     		movs	r3, #8
 1911 03e8 68E1     		b	.L81
 1912              	.L115:
 546:main.c        ****                 }
 547:main.c        ****                 else
 548:main.c        ****                 {
 549:main.c        ****                     return TurnRight;
 1913              		.loc 1 549 0
 1914 03ea 0123     		movs	r3, #1
 1915 03ec 66E1     		b	.L81
 1916              	.L113:
 550:main.c        ****                 }
 551:main.c        ****             }
 552:main.c        ****             
 553:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 554:main.c        ****             if (!s4) {
 1917              		.loc 1 554 0
 1918 03ee 5B4B     		ldr	r3, .L138+4
 1919 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1920 03f2 002B     		cmp	r3, #0
 1921 03f4 04D1     		bne	.L117
 555:main.c        ****                 turnStartedFlag = 1;
 1922              		.loc 1 555 0
 1923 03f6 604B     		ldr	r3, .L138+32
 1924 03f8 0122     		movs	r2, #1
 1925 03fa 1A70     		strb	r2, [r3]
 556:main.c        ****                 return TurnRight;
 1926              		.loc 1 556 0
 1927 03fc 0123     		movs	r3, #1
 1928 03fe 5DE1     		b	.L81
 1929              	.L117:
 557:main.c        ****             }
 558:main.c        ****             
 559:main.c        ****             // Otherwise, keep going forward
 560:main.c        ****             return ForwardCourseCorrection(); 
 1930              		.loc 1 560 0
 1931 0400 FFF7FEFF 		bl	ForwardCourseCorrection
 1932 0404 0346     		mov	r3, r0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 45


 1933 0406 59E1     		b	.L81
 1934              	.L77:
 561:main.c        ****             break;
 562:main.c        ****         case ForwardUntilTarget:       
 563:main.c        ****             // Reset distance on first iteration of this instruction
 564:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1935              		.loc 1 564 0
 1936 0408 5D4B     		ldr	r3, .L138+40
 1937 040a 1B78     		ldrb	r3, [r3]
 1938 040c DBB2     		uxtb	r3, r3
 1939 040e 002B     		cmp	r3, #0
 1940 0410 11D1     		bne	.L118
 1941              	.LBB3:
 565:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1942              		.loc 1 565 0
 1943 0412 5B4B     		ldr	r3, .L138+40
 1944 0414 0122     		movs	r2, #1
 1945 0416 1A70     		strb	r2, [r3]
 566:main.c        ****                 //uTurnIgnoreL = 0;
 567:main.c        ****                 //uTurnIgnoreR = 0;
 568:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 569:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1946              		.loc 1 569 0
 1947 0418 5A4B     		ldr	r3, .L138+44
 1948 041a DB68     		ldr	r3, [r3, #12]
 1949 041c FB61     		str	r3, [r7, #28]
 570:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 1950              		.loc 1 570 0
 1951 041e F869     		ldr	r0, [r7, #28]
 1952 0420 FFF7FEFF 		bl	__aeabi_i2f
 1953 0424 0346     		mov	r3, r0
 1954 0426 796A     		ldr	r1, [r7, #36]	@ float
 1955 0428 1846     		mov	r0, r3
 1956 042a FFF7FEFF 		bl	__aeabi_fmul
 1957 042e 0346     		mov	r3, r0
 1958 0430 1A46     		mov	r2, r3
 1959 0432 554B     		ldr	r3, .L138+48
 1960 0434 1A60     		str	r2, [r3]	@ float
 1961              	.L118:
 1962              	.LBE3:
 571:main.c        ****             }
 572:main.c        ****             
 573:main.c        ****             if (s3) {
 1963              		.loc 1 573 0
 1964 0436 554B     		ldr	r3, .L138+52
 1965 0438 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1966 043a 002B     		cmp	r3, #0
 1967 043c 02D0     		beq	.L119
 574:main.c        ****                 leftStatusFlag = 1;
 1968              		.loc 1 574 0
 1969 043e 544B     		ldr	r3, .L138+56
 1970 0440 0122     		movs	r2, #1
 1971 0442 1A70     		strb	r2, [r3]
 1972              	.L119:
 575:main.c        ****             }
 576:main.c        ****             
 577:main.c        ****             if (s4) {
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 46


 1973              		.loc 1 577 0
 1974 0444 454B     		ldr	r3, .L138+4
 1975 0446 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1976 0448 002B     		cmp	r3, #0
 1977 044a 02D0     		beq	.L120
 578:main.c        ****                 rightStatusFlag = 1;
 1978              		.loc 1 578 0
 1979 044c 514B     		ldr	r3, .L138+60
 1980 044e 0122     		movs	r2, #1
 1981 0450 1A70     		strb	r2, [r3]
 1982              	.L120:
 579:main.c        ****             }
 580:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 581:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 582:main.c        ****             if (leftStatusFlag) {
 1983              		.loc 1 582 0
 1984 0452 4F4B     		ldr	r3, .L138+56
 1985 0454 1B78     		ldrb	r3, [r3]
 1986 0456 DBB2     		uxtb	r3, r3
 1987 0458 002B     		cmp	r3, #0
 1988 045a 13D0     		beq	.L121
 583:main.c        ****                 if (currentInstruction.ignoreL == 0 && !s3) {
 1989              		.loc 1 583 0
 1990 045c 494B     		ldr	r3, .L138+44
 1991 045e 5B68     		ldr	r3, [r3, #4]
 1992 0460 002B     		cmp	r3, #0
 1993 0462 0FD1     		bne	.L121
 1994              		.loc 1 583 0 is_stmt 0 discriminator 1
 1995 0464 494B     		ldr	r3, .L138+52
 1996 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1997 0468 002B     		cmp	r3, #0
 1998 046a 0BD1     		bne	.L121
 584:main.c        ****                     leftStatusFlag = 0;    
 1999              		.loc 1 584 0 is_stmt 1
 2000 046c 484B     		ldr	r3, .L138+56
 2001 046e 0022     		movs	r2, #0
 2002 0470 1A70     		strb	r2, [r3]
 585:main.c        ****                     forwardAfterTurnRIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING OPP
 2003              		.loc 1 585 0
 2004 0472 494B     		ldr	r3, .L138+64
 2005 0474 1B78     		ldrb	r3, [r3]
 2006 0476 DBB2     		uxtb	r3, r3
 2007 0478 0133     		adds	r3, r3, #1
 2008 047a DAB2     		uxtb	r2, r3
 2009 047c 464B     		ldr	r3, .L138+64
 2010 047e 1A70     		strb	r2, [r3]
 586:main.c        ****                     return Backward;
 2011              		.loc 1 586 0
 2012 0480 0923     		movs	r3, #9
 2013 0482 1BE1     		b	.L81
 2014              	.L121:
 587:main.c        ****                 }
 588:main.c        ****             }
 589:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 590:main.c        ****             if (rightStatusFlag) {
 2015              		.loc 1 590 0
 2016 0484 434B     		ldr	r3, .L138+60
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 47


 2017 0486 1B78     		ldrb	r3, [r3]
 2018 0488 DBB2     		uxtb	r3, r3
 2019 048a 002B     		cmp	r3, #0
 2020 048c 13D0     		beq	.L122
 591:main.c        ****                 if (currentInstruction.ignoreR == 0 && !s4) {
 2021              		.loc 1 591 0
 2022 048e 3D4B     		ldr	r3, .L138+44
 2023 0490 9B68     		ldr	r3, [r3, #8]
 2024 0492 002B     		cmp	r3, #0
 2025 0494 0FD1     		bne	.L122
 2026              		.loc 1 591 0 is_stmt 0 discriminator 1
 2027 0496 314B     		ldr	r3, .L138+4
 2028 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 049a 002B     		cmp	r3, #0
 2030 049c 0BD1     		bne	.L122
 592:main.c        ****                     rightStatusFlag = 0;
 2031              		.loc 1 592 0 is_stmt 1
 2032 049e 3D4B     		ldr	r3, .L138+60
 2033 04a0 0022     		movs	r2, #0
 2034 04a2 1A70     		strb	r2, [r3]
 593:main.c        ****                     forwardAfterTurnLIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING OPP
 2035              		.loc 1 593 0
 2036 04a4 3D4B     		ldr	r3, .L138+68
 2037 04a6 1B78     		ldrb	r3, [r3]
 2038 04a8 DBB2     		uxtb	r3, r3
 2039 04aa 0133     		adds	r3, r3, #1
 2040 04ac DAB2     		uxtb	r2, r3
 2041 04ae 3B4B     		ldr	r3, .L138+68
 2042 04b0 1A70     		strb	r2, [r3]
 594:main.c        ****                     return Backward; // CHEECK IF CONDITION IS ACTUALLY BEING FULFILLED
 2043              		.loc 1 594 0
 2044 04b2 0923     		movs	r3, #9
 2045 04b4 02E1     		b	.L81
 2046              	.L122:
 595:main.c        ****                 }
 596:main.c        ****             }
 597:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 598:main.c        ****             
 599:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 600:main.c        ****             if (totalDistance >= blockSizeTotal && (currentInstruction.ignoreL > 0 && currentInstru
 2047              		.loc 1 600 0
 2048 04b6 314B     		ldr	r3, .L138+36
 2049 04b8 1A68     		ldr	r2, [r3]	@ float
 2050 04ba 334B     		ldr	r3, .L138+48
 2051 04bc 1B68     		ldr	r3, [r3]	@ float
 2052 04be 1946     		mov	r1, r3
 2053 04c0 1046     		mov	r0, r2
 2054 04c2 FFF7FEFF 		bl	__aeabi_fcmpge
 2055 04c6 0346     		mov	r3, r0
 2056 04c8 002B     		cmp	r3, #0
 2057 04ca 0BD0     		beq	.L123
 2058              		.loc 1 600 0 is_stmt 0 discriminator 1
 2059 04cc 2D4B     		ldr	r3, .L138+44
 2060 04ce 5B68     		ldr	r3, [r3, #4]
 2061 04d0 002B     		cmp	r3, #0
 2062 04d2 07DD     		ble	.L123
 2063              		.loc 1 600 0 discriminator 2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 48


 2064 04d4 2B4B     		ldr	r3, .L138+44
 2065 04d6 9B68     		ldr	r3, [r3, #8]
 2066 04d8 002B     		cmp	r3, #0
 2067 04da 03DD     		ble	.L123
 601:main.c        ****                 // Get next instruction
 602:main.c        ****                 MoveToNextInstruction();
 2068              		.loc 1 602 0 is_stmt 1
 2069 04dc FFF7FEFF 		bl	MoveToNextInstruction
 603:main.c        **** 
 604:main.c        ****                 
 605:main.c        ****                 return Stop;
 2070              		.loc 1 605 0
 2071 04e0 0523     		movs	r3, #5
 2072 04e2 EBE0     		b	.L81
 2073              	.L123:
 606:main.c        ****             }
 607:main.c        ****             else if (totalDistance >= blockSizeTotal || (currentInstruction.ignoreL == 0 || current
 2074              		.loc 1 607 0
 2075 04e4 254B     		ldr	r3, .L138+36
 2076 04e6 1A68     		ldr	r2, [r3]	@ float
 2077 04e8 274B     		ldr	r3, .L138+48
 2078 04ea 1B68     		ldr	r3, [r3]	@ float
 2079 04ec 1946     		mov	r1, r3
 2080 04ee 1046     		mov	r0, r2
 2081 04f0 FFF7FEFF 		bl	__aeabi_fcmpge
 2082 04f4 0346     		mov	r3, r0
 2083 04f6 002B     		cmp	r3, #0
 2084 04f8 07D1     		bne	.L125
 2085              		.loc 1 607 0 is_stmt 0 discriminator 1
 2086 04fa 224B     		ldr	r3, .L138+44
 2087 04fc 5B68     		ldr	r3, [r3, #4]
 2088 04fe 002B     		cmp	r3, #0
 2089 0500 03D0     		beq	.L125
 2090              		.loc 1 607 0 discriminator 2
 2091 0502 204B     		ldr	r3, .L138+44
 2092 0504 9B68     		ldr	r3, [r3, #8]
 2093 0506 002B     		cmp	r3, #0
 2094 0508 03D1     		bne	.L126
 2095              	.L125:
 608:main.c        ****                 MoveToNextInstruction();
 2096              		.loc 1 608 0 is_stmt 1
 2097 050a FFF7FEFF 		bl	MoveToNextInstruction
 609:main.c        ****                 return Stop;
 2098              		.loc 1 609 0
 2099 050e 0523     		movs	r3, #5
 2100 0510 D4E0     		b	.L81
 2101              	.L126:
 610:main.c        ****             }
 611:main.c        ****             
 612:main.c        ****             return ForwardCourseCorrection();
 2102              		.loc 1 612 0
 2103 0512 FFF7FEFF 		bl	ForwardCourseCorrection
 2104 0516 0346     		mov	r3, r0
 2105 0518 D0E0     		b	.L81
 2106              	.L78:
 613:main.c        ****             break;
 614:main.c        ****         case StopAtTarget:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 49


 615:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 616:main.c        ****             // Reset flags
 617:main.c        ****             totalDistance = 0;
 2107              		.loc 1 617 0
 2108 051a 184B     		ldr	r3, .L138+36
 2109 051c 4FF00002 		mov	r2, #0
 2110 0520 1A60     		str	r2, [r3]	@ float
 618:main.c        ****             forwardUntilTargetStartedFlag = 0;
 2111              		.loc 1 618 0
 2112 0522 174B     		ldr	r3, .L138+40
 2113 0524 0022     		movs	r2, #0
 2114 0526 1A70     		strb	r2, [r3]
 619:main.c        ****             blockSizeTotal = 0;
 2115              		.loc 1 619 0
 2116 0528 174B     		ldr	r3, .L138+48
 2117 052a 4FF00002 		mov	r2, #0
 2118 052e 1A60     		str	r2, [r3]	@ float
 620:main.c        ****             
 621:main.c        ****             if (currentDirection == Stop) {
 2119              		.loc 1 621 0
 2120 0530 0F4B     		ldr	r3, .L138+24
 2121 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2122 0534 052B     		cmp	r3, #5
 2123 0536 08D1     		bne	.L127
 622:main.c        ****                 if (stopBuffer <= 100) {
 2124              		.loc 1 622 0
 2125 0538 0E4B     		ldr	r3, .L138+28
 2126 053a 1B68     		ldr	r3, [r3]
 2127 053c 642B     		cmp	r3, #100
 2128 053e 01D8     		bhi	.L128
 623:main.c        ****                     return Stop;    
 2129              		.loc 1 623 0
 2130 0540 0523     		movs	r3, #5
 2131 0542 BBE0     		b	.L81
 2132              	.L128:
 624:main.c        ****                 } else {
 625:main.c        ****                     stopBuffer = 250;
 2133              		.loc 1 625 0
 2134 0544 0B4B     		ldr	r3, .L138+28
 2135 0546 FA22     		movs	r2, #250
 2136 0548 1A60     		str	r2, [r3]
 2137              	.L127:
 626:main.c        ****                 }
 627:main.c        ****             }
 628:main.c        ****             
 629:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 630:main.c        ****             // Make sure index doesn't go over cap
 631:main.c        ****             // Stop at final location
 632:main.c        ****             if (currentFoodListIndex == 4) {
 2138              		.loc 1 632 0
 2139 054a 154B     		ldr	r3, .L138+72
 2140 054c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2141 054e 042B     		cmp	r3, #4
 2142 0550 28D1     		bne	.L129
 633:main.c        ****                 return Stop;    
 2143              		.loc 1 633 0
 2144 0552 0523     		movs	r3, #5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 50


 2145 0554 B2E0     		b	.L81
 2146              	.L139:
 2147 0556 00BF     		.align	2
 2148              	.L138:
 2149 0558 00000000 		.word	firstTurnIteration
 2150 055c 00000000 		.word	s4
 2151 0560 37000000 		.word	turnFinishedFlag
 2152 0564 00000000 		.word	s5
 2153 0568 00000000 		.word	s6
 2154 056c 00000000 		.word	forwardBuffer
 2155 0570 00000000 		.word	currentDirection
 2156 0574 00000000 		.word	stopBuffer
 2157 0578 36000000 		.word	turnStartedFlag
 2158 057c 00000000 		.word	totalDistance
 2159 0580 38000000 		.word	forwardUntilTargetStartedFlag
 2160 0584 00000000 		.word	currentInstruction
 2161 0588 00000000 		.word	blockSizeTotal
 2162 058c 00000000 		.word	s3
 2163 0590 3B000000 		.word	leftStatusFlag
 2164 0594 3C000000 		.word	rightStatusFlag
 2165 0598 58000000 		.word	forwardAfterTurnRIgnore
 2166 059c 57000000 		.word	forwardAfterTurnLIgnore
 2167 05a0 00000000 		.word	currentFoodListIndex
 2168              	.L129:
 634:main.c        ****             }
 635:main.c        ****             
 636:main.c        ****             currentFoodListIndex++;
 2169              		.loc 1 636 0
 2170 05a4 474B     		ldr	r3, .L140
 2171 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2172 05a8 0133     		adds	r3, r3, #1
 2173 05aa DAB2     		uxtb	r2, r3
 2174 05ac 454B     		ldr	r3, .L140
 2175 05ae 1A70     		strb	r2, [r3]
 637:main.c        ****             instructionIndex = 0;
 2176              		.loc 1 637 0
 2177 05b0 454B     		ldr	r3, .L140+4
 2178 05b2 0022     		movs	r2, #0
 2179 05b4 1A60     		str	r2, [r3]
 638:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 2180              		.loc 1 638 0
 2181 05b6 434B     		ldr	r3, .L140
 2182 05b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2183 05ba 1A46     		mov	r2, r3
 2184 05bc 434B     		ldr	r3, .L140+8
 2185 05be 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2186 05c0 4349     		ldr	r1, .L140+12
 2187 05c2 4448     		ldr	r0, .L140+16
 2188 05c4 FFF7FEFF 		bl	findPathNewOrientation
 2189 05c8 0246     		mov	r2, r0
 2190 05ca 434B     		ldr	r3, .L140+20
 2191 05cc 1A60     		str	r2, [r3]
 639:main.c        ****             numSteps = instructionsListLength();
 2192              		.loc 1 639 0
 2193 05ce FFF7FEFF 		bl	instructionsListLength
 2194 05d2 0346     		mov	r3, r0
 2195 05d4 1A46     		mov	r2, r3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 51


 2196 05d6 414B     		ldr	r3, .L140+24
 2197 05d8 1A60     		str	r2, [r3]
 640:main.c        ****     
 641:main.c        ****             currentInstruction = GetInstructionAtIndex();
 2198              		.loc 1 641 0
 2199 05da 3C4C     		ldr	r4, .L140+8
 2200 05dc 3B46     		mov	r3, r7
 2201 05de 1846     		mov	r0, r3
 2202 05e0 FFF7FEFF 		bl	GetInstructionAtIndex
 2203 05e4 2546     		mov	r5, r4
 2204 05e6 3C46     		mov	r4, r7
 2205 05e8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2206 05ea 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2207 05ec 2368     		ldr	r3, [r4]
 2208 05ee 2B60     		str	r3, [r5]
 642:main.c        **** 
 643:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2209              		.loc 1 643 0
 2210 05f0 394B     		ldr	r3, .L140+20
 2211 05f2 1968     		ldr	r1, [r3]
 2212 05f4 344B     		ldr	r3, .L140+4
 2213 05f6 1A68     		ldr	r2, [r3]
 2214 05f8 1346     		mov	r3, r2
 2215 05fa 9B00     		lsls	r3, r3, #2
 2216 05fc 1344     		add	r3, r3, r2
 2217 05fe 9B00     		lsls	r3, r3, #2
 2218 0600 0B44     		add	r3, r3, r1
 2219 0602 5B68     		ldr	r3, [r3, #4]
 2220 0604 DAB2     		uxtb	r2, r3
 2221 0606 364B     		ldr	r3, .L140+28
 2222 0608 1A70     		strb	r2, [r3]
 644:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2223              		.loc 1 644 0
 2224 060a 334B     		ldr	r3, .L140+20
 2225 060c 1968     		ldr	r1, [r3]
 2226 060e 2E4B     		ldr	r3, .L140+4
 2227 0610 1A68     		ldr	r2, [r3]
 2228 0612 1346     		mov	r3, r2
 2229 0614 9B00     		lsls	r3, r3, #2
 2230 0616 1344     		add	r3, r3, r2
 2231 0618 9B00     		lsls	r3, r3, #2
 2232 061a 0B44     		add	r3, r3, r1
 2233 061c 9B68     		ldr	r3, [r3, #8]
 2234 061e DAB2     		uxtb	r2, r3
 2235 0620 304B     		ldr	r3, .L140+32
 2236 0622 1A70     		strb	r2, [r3]
 645:main.c        ****             
 646:main.c        ****             return Stop;
 2237              		.loc 1 646 0
 2238 0624 0523     		movs	r3, #5
 2239 0626 49E0     		b	.L81
 2240              	.L76:
 647:main.c        ****             break;
 648:main.c        ****         case uTurn:
 649:main.c        ****             if (currentDirection == Stop) {
 2241              		.loc 1 649 0
 2242 0628 2F4B     		ldr	r3, .L140+36
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 52


 2243 062a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2244 062c 052B     		cmp	r3, #5
 2245 062e 08D1     		bne	.L130
 650:main.c        ****                 if (stopBuffer <= 50) {
 2246              		.loc 1 650 0
 2247 0630 2E4B     		ldr	r3, .L140+40
 2248 0632 1B68     		ldr	r3, [r3]
 2249 0634 322B     		cmp	r3, #50
 2250 0636 01D8     		bhi	.L131
 651:main.c        ****                     return Stop;    
 2251              		.loc 1 651 0
 2252 0638 0523     		movs	r3, #5
 2253 063a 3FE0     		b	.L81
 2254              	.L131:
 652:main.c        ****                 } else {
 653:main.c        ****                     stopBuffer = 100;    
 2255              		.loc 1 653 0
 2256 063c 2B4B     		ldr	r3, .L140+40
 2257 063e 6422     		movs	r2, #100
 2258 0640 1A60     		str	r2, [r3]
 2259              	.L130:
 654:main.c        ****                 }
 655:main.c        ****             }
 656:main.c        ****             
 657:main.c        ****             
 658:main.c        ****             if (!uTurnStartedFlag) {
 2260              		.loc 1 658 0
 2261 0642 2B4B     		ldr	r3, .L140+44
 2262 0644 1B78     		ldrb	r3, [r3]
 2263 0646 DBB2     		uxtb	r3, r3
 2264 0648 002B     		cmp	r3, #0
 2265 064a 07D1     		bne	.L132
 659:main.c        ****                 uTurnStartedFlag = 1;
 2266              		.loc 1 659 0
 2267 064c 284B     		ldr	r3, .L140+44
 2268 064e 0122     		movs	r2, #1
 2269 0650 1A70     		strb	r2, [r3]
 660:main.c        ****                 spinCourseCorrectionStarted = 0;
 2270              		.loc 1 660 0
 2271 0652 284B     		ldr	r3, .L140+48
 2272 0654 0022     		movs	r2, #0
 2273 0656 1A70     		strb	r2, [r3]
 661:main.c        ****                 return Spin180;
 2274              		.loc 1 661 0
 2275 0658 0A23     		movs	r3, #10
 2276 065a 2FE0     		b	.L81
 2277              	.L132:
 662:main.c        ****             } 
 663:main.c        ****             
 664:main.c        ****             if (uTurnFinishedFlag) {
 2278              		.loc 1 664 0
 2279 065c 264B     		ldr	r3, .L140+52
 2280 065e 1B78     		ldrb	r3, [r3]
 2281 0660 DBB2     		uxtb	r3, r3
 2282 0662 002B     		cmp	r3, #0
 2283 0664 09D0     		beq	.L133
 665:main.c        ****                 // MOVE TO NEXT INSTRUCTION
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 53


 666:main.c        ****                 uTurnFinishedFlag = 0;
 2284              		.loc 1 666 0
 2285 0666 244B     		ldr	r3, .L140+52
 2286 0668 0022     		movs	r2, #0
 2287 066a 1A70     		strb	r2, [r3]
 667:main.c        ****                 uTurnStartedFlag = 0;
 2288              		.loc 1 667 0
 2289 066c 204B     		ldr	r3, .L140+44
 2290 066e 0022     		movs	r2, #0
 2291 0670 1A70     		strb	r2, [r3]
 668:main.c        ****                 MoveToNextInstruction();
 2292              		.loc 1 668 0
 2293 0672 FFF7FEFF 		bl	MoveToNextInstruction
 669:main.c        ****                 return Stop;    
 2294              		.loc 1 669 0
 2295 0676 0523     		movs	r3, #5
 2296 0678 20E0     		b	.L81
 2297              	.L133:
 670:main.c        ****             }
 671:main.c        ****             
 672:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 673:main.c        ****             if (uTurnStartedFlag) {
 2298              		.loc 1 673 0
 2299 067a 1D4B     		ldr	r3, .L140+44
 2300 067c 1B78     		ldrb	r3, [r3]
 2301 067e DBB2     		uxtb	r3, r3
 2302 0680 002B     		cmp	r3, #0
 2303 0682 16D0     		beq	.L134
 674:main.c        ****                 if (!s5 && !s6) {
 2304              		.loc 1 674 0
 2305 0684 1D4B     		ldr	r3, .L140+56
 2306 0686 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2307 0688 002B     		cmp	r3, #0
 2308 068a 12D1     		bne	.L134
 2309              		.loc 1 674 0 is_stmt 0 discriminator 1
 2310 068c 1C4B     		ldr	r3, .L140+60
 2311 068e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2312 0690 002B     		cmp	r3, #0
 2313 0692 0ED1     		bne	.L134
 675:main.c        ****                     totalLineCount = 0;
 2314              		.loc 1 675 0 is_stmt 1
 2315 0694 1B4B     		ldr	r3, .L140+64
 2316 0696 0022     		movs	r2, #0
 2317 0698 1A70     		strb	r2, [r3]
 676:main.c        ****                     lineCount = 0;
 2318              		.loc 1 676 0
 2319 069a 1B4B     		ldr	r3, .L140+68
 2320 069c 0022     		movs	r2, #0
 2321 069e 1A70     		strb	r2, [r3]
 677:main.c        ****                     tooEarlyFlag = 0;
 2322              		.loc 1 677 0
 2323 06a0 1A4B     		ldr	r3, .L140+72
 2324 06a2 0022     		movs	r2, #0
 2325 06a4 1A70     		strb	r2, [r3]
 678:main.c        ****                     tooLateFlag = 0;
 2326              		.loc 1 678 0
 2327 06a6 1A4B     		ldr	r3, .L140+76
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 54


 2328 06a8 0022     		movs	r2, #0
 2329 06aa 1A70     		strb	r2, [r3]
 679:main.c        ****                     uTurnFinishedFlag = 1;    
 2330              		.loc 1 679 0
 2331 06ac 124B     		ldr	r3, .L140+52
 2332 06ae 0122     		movs	r2, #1
 2333 06b0 1A70     		strb	r2, [r3]
 2334              	.L134:
 680:main.c        ****                 }    
 681:main.c        ****             }
 682:main.c        ****             
 683:main.c        ****             return SpinCourseCorrection();
 2335              		.loc 1 683 0
 2336 06b2 FFF7FEFF 		bl	SpinCourseCorrection
 2337 06b6 0346     		mov	r3, r0
 2338 06b8 00E0     		b	.L81
 2339              	.L71:
 684:main.c        ****             break;
 685:main.c        ****         default:
 686:main.c        ****             return Stop;
 2340              		.loc 1 686 0
 2341 06ba 0523     		movs	r3, #5
 2342              	.L81:
 687:main.c        ****             break;
 688:main.c        ****     }
 689:main.c        ****     return Stop;
 690:main.c        **** }
 2343              		.loc 1 690 0
 2344 06bc 1846     		mov	r0, r3
 2345 06be 2837     		adds	r7, r7, #40
 2346              		.cfi_def_cfa_offset 16
 2347 06c0 BD46     		mov	sp, r7
 2348              		.cfi_def_cfa_register 13
 2349              		@ sp needed
 2350 06c2 B0BD     		pop	{r4, r5, r7, pc}
 2351              	.L141:
 2352              		.align	2
 2353              	.L140:
 2354 06c4 00000000 		.word	currentFoodListIndex
 2355 06c8 14000000 		.word	instructionIndex
 2356 06cc 00000000 		.word	currentInstruction
 2357 06d0 00000000 		.word	food_list
 2358 06d4 00000000 		.word	map
 2359 06d8 00000000 		.word	instructionList
 2360 06dc 00000000 		.word	numSteps
 2361 06e0 3E000000 		.word	currentIgnoreL
 2362 06e4 3F000000 		.word	currentIgnoreR
 2363 06e8 00000000 		.word	currentDirection
 2364 06ec 00000000 		.word	stopBuffer
 2365 06f0 39000000 		.word	uTurnStartedFlag
 2366 06f4 3D000000 		.word	spinCourseCorrectionStarted
 2367 06f8 3A000000 		.word	uTurnFinishedFlag
 2368 06fc 00000000 		.word	s5
 2369 0700 00000000 		.word	s6
 2370 0704 40000000 		.word	totalLineCount
 2371 0708 41000000 		.word	lineCount
 2372 070c 43000000 		.word	tooEarlyFlag
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 55


 2373 0710 44000000 		.word	tooLateFlag
 2374              		.cfi_endproc
 2375              	.LFE76:
 2376              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2377              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2378              		.align	2
 2379              		.global	MoveToNextInstruction
 2380              		.thumb
 2381              		.thumb_func
 2382              		.type	MoveToNextInstruction, %function
 2383              	MoveToNextInstruction:
 2384              	.LFB77:
 691:main.c        **** 
 692:main.c        **** // get next instruction
 693:main.c        **** void MoveToNextInstruction() {
 2385              		.loc 1 693 0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 1, uses_anonymous_args = 0
 2389              		@ link register save eliminated.
 2390 0000 80B4     		push	{r7}
 2391              		.cfi_def_cfa_offset 4
 2392              		.cfi_offset 7, -4
 2393 0002 00AF     		add	r7, sp, #0
 2394              		.cfi_def_cfa_register 7
 694:main.c        ****     currentIgnoreL = 0;
 2395              		.loc 1 694 0
 2396 0004 144B     		ldr	r3, .L143
 2397 0006 0022     		movs	r2, #0
 2398 0008 1A70     		strb	r2, [r3]
 695:main.c        ****     currentIgnoreR = 0;
 2399              		.loc 1 695 0
 2400 000a 144B     		ldr	r3, .L143+4
 2401 000c 0022     		movs	r2, #0
 2402 000e 1A70     		strb	r2, [r3]
 696:main.c        **** 
 697:main.c        ****     instructionIndex++;
 2403              		.loc 1 697 0
 2404 0010 134B     		ldr	r3, .L143+8
 2405 0012 1B68     		ldr	r3, [r3]
 2406 0014 0133     		adds	r3, r3, #1
 2407 0016 124A     		ldr	r2, .L143+8
 2408 0018 1360     		str	r3, [r2]
 698:main.c        ****     
 699:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2409              		.loc 1 699 0
 2410 001a 124B     		ldr	r3, .L143+12
 2411 001c 1968     		ldr	r1, [r3]
 2412 001e 104B     		ldr	r3, .L143+8
 2413 0020 1A68     		ldr	r2, [r3]
 2414 0022 1346     		mov	r3, r2
 2415 0024 9B00     		lsls	r3, r3, #2
 2416 0026 1344     		add	r3, r3, r2
 2417 0028 9B00     		lsls	r3, r3, #2
 2418 002a 0B44     		add	r3, r3, r1
 2419 002c 5B68     		ldr	r3, [r3, #4]
 2420 002e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 56


 2421 0030 094B     		ldr	r3, .L143
 2422 0032 1A70     		strb	r2, [r3]
 700:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2423              		.loc 1 700 0
 2424 0034 0B4B     		ldr	r3, .L143+12
 2425 0036 1968     		ldr	r1, [r3]
 2426 0038 094B     		ldr	r3, .L143+8
 2427 003a 1A68     		ldr	r2, [r3]
 2428 003c 1346     		mov	r3, r2
 2429 003e 9B00     		lsls	r3, r3, #2
 2430 0040 1344     		add	r3, r3, r2
 2431 0042 9B00     		lsls	r3, r3, #2
 2432 0044 0B44     		add	r3, r3, r1
 2433 0046 9B68     		ldr	r3, [r3, #8]
 2434 0048 DAB2     		uxtb	r2, r3
 2435 004a 044B     		ldr	r3, .L143+4
 2436 004c 1A70     		strb	r2, [r3]
 701:main.c        **** 
 702:main.c        **** }
 2437              		.loc 1 702 0
 2438 004e 00BF     		nop
 2439 0050 BD46     		mov	sp, r7
 2440              		.cfi_def_cfa_register 13
 2441              		@ sp needed
 2442 0052 80BC     		pop	{r7}
 2443              		.cfi_restore 7
 2444              		.cfi_def_cfa_offset 0
 2445 0054 7047     		bx	lr
 2446              	.L144:
 2447 0056 00BF     		.align	2
 2448              	.L143:
 2449 0058 3E000000 		.word	currentIgnoreL
 2450 005c 3F000000 		.word	currentIgnoreR
 2451 0060 14000000 		.word	instructionIndex
 2452 0064 00000000 		.word	instructionList
 2453              		.cfi_endproc
 2454              	.LFE77:
 2455              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2456              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2457              		.align	2
 2458              		.global	GetInstructionAtIndex
 2459              		.thumb
 2460              		.thumb_func
 2461              		.type	GetInstructionAtIndex, %function
 2462              	GetInstructionAtIndex:
 2463              	.LFB78:
 703:main.c        **** 
 704:main.c        **** Instruction GetInstructionAtIndex() {
 2464              		.loc 1 704 0
 2465              		.cfi_startproc
 2466              		@ args = 0, pretend = 0, frame = 32
 2467              		@ frame_needed = 1, uses_anonymous_args = 0
 2468              		@ link register save eliminated.
 2469 0000 B0B4     		push	{r4, r5, r7}
 2470              		.cfi_def_cfa_offset 12
 2471              		.cfi_offset 4, -12
 2472              		.cfi_offset 5, -8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 57


 2473              		.cfi_offset 7, -4
 2474 0002 89B0     		sub	sp, sp, #36
 2475              		.cfi_def_cfa_offset 48
 2476 0004 00AF     		add	r7, sp, #0
 2477              		.cfi_def_cfa_register 7
 2478 0006 7860     		str	r0, [r7, #4]
 705:main.c        ****     Instruction nextInstruction;
 706:main.c        ****     // input is list of instructions and robot will react accordingly
 707:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2479              		.loc 1 707 0
 2480 0008 164B     		ldr	r3, .L147
 2481 000a 1968     		ldr	r1, [r3]
 2482 000c 164B     		ldr	r3, .L147+4
 2483 000e 1A68     		ldr	r2, [r3]
 2484 0010 1346     		mov	r3, r2
 2485 0012 9B00     		lsls	r3, r3, #2
 2486 0014 1344     		add	r3, r3, r2
 2487 0016 9B00     		lsls	r3, r3, #2
 2488 0018 0B44     		add	r3, r3, r1
 2489 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2490 001c 3B73     		strb	r3, [r7, #12]
 708:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2491              		.loc 1 708 0
 2492 001e 114B     		ldr	r3, .L147
 2493 0020 1968     		ldr	r1, [r3]
 2494 0022 114B     		ldr	r3, .L147+4
 2495 0024 1A68     		ldr	r2, [r3]
 2496 0026 1346     		mov	r3, r2
 2497 0028 9B00     		lsls	r3, r3, #2
 2498 002a 1344     		add	r3, r3, r2
 2499 002c 9B00     		lsls	r3, r3, #2
 2500 002e 0B44     		add	r3, r3, r1
 2501 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2502 0032 3B77     		strb	r3, [r7, #28]
 709:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2503              		.loc 1 709 0
 2504 0034 0B4B     		ldr	r3, .L147
 2505 0036 1968     		ldr	r1, [r3]
 2506 0038 0B4B     		ldr	r3, .L147+4
 2507 003a 1A68     		ldr	r2, [r3]
 2508 003c 1346     		mov	r3, r2
 2509 003e 9B00     		lsls	r3, r3, #2
 2510 0040 1344     		add	r3, r3, r2
 2511 0042 9B00     		lsls	r3, r3, #2
 2512 0044 0B44     		add	r3, r3, r1
 2513 0046 DB68     		ldr	r3, [r3, #12]
 2514 0048 BB61     		str	r3, [r7, #24]
 710:main.c        ****     return nextInstruction;
 2515              		.loc 1 710 0
 2516 004a 7B68     		ldr	r3, [r7, #4]
 2517 004c 1D46     		mov	r5, r3
 2518 004e 07F10C04 		add	r4, r7, #12
 2519 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2520 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2521 0056 2368     		ldr	r3, [r4]
 2522 0058 2B60     		str	r3, [r5]
 711:main.c        **** }
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 58


 2523              		.loc 1 711 0
 2524 005a 7868     		ldr	r0, [r7, #4]
 2525 005c 2437     		adds	r7, r7, #36
 2526              		.cfi_def_cfa_offset 12
 2527 005e BD46     		mov	sp, r7
 2528              		.cfi_def_cfa_register 13
 2529              		@ sp needed
 2530 0060 B0BC     		pop	{r4, r5, r7}
 2531              		.cfi_restore 7
 2532              		.cfi_restore 5
 2533              		.cfi_restore 4
 2534              		.cfi_def_cfa_offset 0
 2535 0062 7047     		bx	lr
 2536              	.L148:
 2537              		.align	2
 2538              	.L147:
 2539 0064 00000000 		.word	instructionList
 2540 0068 14000000 		.word	instructionIndex
 2541              		.cfi_endproc
 2542              	.LFE78:
 2543              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2544              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2545              		.align	2
 2546              		.global	RotateClockwise180Degrees
 2547              		.thumb
 2548              		.thumb_func
 2549              		.type	RotateClockwise180Degrees, %function
 2550              	RotateClockwise180Degrees:
 2551              	.LFB79:
 712:main.c        **** 
 713:main.c        **** void RotateClockwise180Degrees() {
 2552              		.loc 1 713 0
 2553              		.cfi_startproc
 2554              		@ args = 0, pretend = 0, frame = 8
 2555              		@ frame_needed = 1, uses_anonymous_args = 0
 2556 0000 80B5     		push	{r7, lr}
 2557              		.cfi_def_cfa_offset 8
 2558              		.cfi_offset 7, -8
 2559              		.cfi_offset 14, -4
 2560 0002 82B0     		sub	sp, sp, #8
 2561              		.cfi_def_cfa_offset 16
 2562 0004 00AF     		add	r7, sp, #0
 2563              		.cfi_def_cfa_register 7
 714:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2564              		.loc 1 714 0
 2565 0006 49F20873 		movw	r3, #38664
 2566 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 715:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2567              		.loc 1 715 0
 2568 000c 49F20873 		movw	r3, #38664
 2569 0010 3B80     		strh	r3, [r7]	@ movhi
 716:main.c        ****     PWM_1_WriteCompare(count1);
 2570              		.loc 1 716 0
 2571 0012 7B88     		ldrh	r3, [r7, #2]
 2572 0014 1846     		mov	r0, r3
 2573 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 717:main.c        ****     PWM_2_WriteCompare(count2);
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 59


 2574              		.loc 1 717 0
 2575 001a 3B88     		ldrh	r3, [r7]
 2576 001c 1846     		mov	r0, r3
 2577 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 718:main.c        ****     
 719:main.c        ****     int quadPulseCount = 0;
 2578              		.loc 1 719 0
 2579 0022 0023     		movs	r3, #0
 2580 0024 7B60     		str	r3, [r7, #4]
 720:main.c        ****     QuadDec_M1_SetCounter(0);
 2581              		.loc 1 720 0
 2582 0026 0020     		movs	r0, #0
 2583 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 721:main.c        ****     // Before 180, save initial configuration
 722:main.c        ****     if (!s3) {
 2584              		.loc 1 722 0
 2585 002c 3A4B     		ldr	r3, .L162
 2586 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2587 0030 002B     		cmp	r3, #0
 2588 0032 06D1     		bne	.L150
 723:main.c        ****         totalLineCount++;    
 2589              		.loc 1 723 0
 2590 0034 394B     		ldr	r3, .L162+4
 2591 0036 1B78     		ldrb	r3, [r3]
 2592 0038 DBB2     		uxtb	r3, r3
 2593 003a 0133     		adds	r3, r3, #1
 2594 003c DAB2     		uxtb	r2, r3
 2595 003e 374B     		ldr	r3, .L162+4
 2596 0040 1A70     		strb	r2, [r3]
 2597              	.L150:
 724:main.c        ****     }
 725:main.c        ****     if (!s4) {
 2598              		.loc 1 725 0
 2599 0042 374B     		ldr	r3, .L162+8
 2600 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2601 0046 002B     		cmp	r3, #0
 2602 0048 06D1     		bne	.L151
 726:main.c        ****         totalLineCount++;    
 2603              		.loc 1 726 0
 2604 004a 344B     		ldr	r3, .L162+4
 2605 004c 1B78     		ldrb	r3, [r3]
 2606 004e DBB2     		uxtb	r3, r3
 2607 0050 0133     		adds	r3, r3, #1
 2608 0052 DAB2     		uxtb	r2, r3
 2609 0054 314B     		ldr	r3, .L162+4
 2610 0056 1A70     		strb	r2, [r3]
 2611              	.L151:
 727:main.c        ****     }
 728:main.c        ****     if (!s5 || !s6) {
 2612              		.loc 1 728 0
 2613 0058 324B     		ldr	r3, .L162+12
 2614 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2615 005c 002B     		cmp	r3, #0
 2616 005e 03D0     		beq	.L152
 2617              		.loc 1 728 0 is_stmt 0 discriminator 1
 2618 0060 314B     		ldr	r3, .L162+16
 2619 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 60


 2620 0064 002B     		cmp	r3, #0
 2621 0066 2AD1     		bne	.L154
 2622              	.L152:
 729:main.c        ****         totalLineCount++;    
 2623              		.loc 1 729 0 is_stmt 1
 2624 0068 2C4B     		ldr	r3, .L162+4
 2625 006a 1B78     		ldrb	r3, [r3]
 2626 006c DBB2     		uxtb	r3, r3
 2627 006e 0133     		adds	r3, r3, #1
 2628 0070 DAB2     		uxtb	r2, r3
 2629 0072 2A4B     		ldr	r3, .L162+4
 2630 0074 1A70     		strb	r2, [r3]
 730:main.c        ****     }
 731:main.c        ****     
 732:main.c        ****     // During 180
 733:main.c        ****     while(quadPulseCount < 210) {
 2631              		.loc 1 733 0
 2632 0076 22E0     		b	.L154
 2633              	.L157:
 734:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2634              		.loc 1 734 0
 2635 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2636 007c 0346     		mov	r3, r0
 2637 007e 7B60     		str	r3, [r7, #4]
 735:main.c        ****         if (!s3) {
 2638              		.loc 1 735 0
 2639 0080 254B     		ldr	r3, .L162
 2640 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2641 0084 002B     		cmp	r3, #0
 2642 0086 02D1     		bne	.L155
 736:main.c        ****             onLineFlag = 1;    
 2643              		.loc 1 736 0
 2644 0088 284B     		ldr	r3, .L162+20
 2645 008a 0122     		movs	r2, #1
 2646 008c 1A70     		strb	r2, [r3]
 2647              	.L155:
 737:main.c        ****         }
 738:main.c        ****         
 739:main.c        ****         if (onLineFlag) {
 2648              		.loc 1 739 0
 2649 008e 274B     		ldr	r3, .L162+20
 2650 0090 1B78     		ldrb	r3, [r3]
 2651 0092 DBB2     		uxtb	r3, r3
 2652 0094 002B     		cmp	r3, #0
 2653 0096 06D0     		beq	.L156
 740:main.c        ****             lineCount++;    
 2654              		.loc 1 740 0
 2655 0098 254B     		ldr	r3, .L162+24
 2656 009a 1B78     		ldrb	r3, [r3]
 2657 009c DBB2     		uxtb	r3, r3
 2658 009e 0133     		adds	r3, r3, #1
 2659 00a0 DAB2     		uxtb	r2, r3
 2660 00a2 234B     		ldr	r3, .L162+24
 2661 00a4 1A70     		strb	r2, [r3]
 2662              	.L156:
 741:main.c        ****         }
 742:main.c        ****         
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 61


 743:main.c        ****         if (!onLineFlag) {
 2663              		.loc 1 743 0
 2664 00a6 214B     		ldr	r3, .L162+20
 2665 00a8 1B78     		ldrb	r3, [r3]
 2666 00aa DBB2     		uxtb	r3, r3
 2667 00ac 002B     		cmp	r3, #0
 2668 00ae 06D1     		bne	.L154
 744:main.c        ****             if (s3) {
 2669              		.loc 1 744 0
 2670 00b0 194B     		ldr	r3, .L162
 2671 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2672 00b4 002B     		cmp	r3, #0
 2673 00b6 02D0     		beq	.L154
 745:main.c        ****                 onLineFlag = 0;    
 2674              		.loc 1 745 0
 2675 00b8 1C4B     		ldr	r3, .L162+20
 2676 00ba 0022     		movs	r2, #0
 2677 00bc 1A70     		strb	r2, [r3]
 2678              	.L154:
 733:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2679              		.loc 1 733 0
 2680 00be 7B68     		ldr	r3, [r7, #4]
 2681 00c0 D12B     		cmp	r3, #209
 2682 00c2 D9DD     		ble	.L157
 746:main.c        ****             }
 747:main.c        ****         }
 748:main.c        ****     }
 749:main.c        ****     
 750:main.c        ****     // After 180
 751:main.c        ****     if (totalLineCount == 0) {
 2683              		.loc 1 751 0
 2684 00c4 154B     		ldr	r3, .L162+4
 2685 00c6 1B78     		ldrb	r3, [r3]
 2686 00c8 DBB2     		uxtb	r3, r3
 2687 00ca 002B     		cmp	r3, #0
 2688 00cc 06D1     		bne	.L158
 752:main.c        ****         // we are on no lines
 753:main.c        ****         tooEarlyFlag = 1;
 2689              		.loc 1 753 0
 2690 00ce 194B     		ldr	r3, .L162+28
 2691 00d0 0122     		movs	r2, #1
 2692 00d2 1A70     		strb	r2, [r3]
 754:main.c        ****         QuadDec_M1_SetCounter(0);
 2693              		.loc 1 754 0
 2694 00d4 0020     		movs	r0, #0
 2695 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 755:main.c        ****         return;
 2696              		.loc 1 755 0
 2697 00da 19E0     		b	.L149
 2698              	.L158:
 756:main.c        ****     }
 757:main.c        ****     else if (lineCount > totalLineCount) {
 2699              		.loc 1 757 0
 2700 00dc 144B     		ldr	r3, .L162+24
 2701 00de 1B78     		ldrb	r3, [r3]
 2702 00e0 DAB2     		uxtb	r2, r3
 2703 00e2 0E4B     		ldr	r3, .L162+4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 62


 2704 00e4 1B78     		ldrb	r3, [r3]
 2705 00e6 DBB2     		uxtb	r3, r3
 2706 00e8 9A42     		cmp	r2, r3
 2707 00ea 03D9     		bls	.L160
 758:main.c        ****         tooLateFlag = 1;    
 2708              		.loc 1 758 0
 2709 00ec 124B     		ldr	r3, .L162+32
 2710 00ee 0122     		movs	r2, #1
 2711 00f0 1A70     		strb	r2, [r3]
 2712 00f2 0AE0     		b	.L161
 2713              	.L160:
 759:main.c        ****     }
 760:main.c        ****     else if (lineCount < totalLineCount) {
 2714              		.loc 1 760 0
 2715 00f4 0E4B     		ldr	r3, .L162+24
 2716 00f6 1B78     		ldrb	r3, [r3]
 2717 00f8 DAB2     		uxtb	r2, r3
 2718 00fa 084B     		ldr	r3, .L162+4
 2719 00fc 1B78     		ldrb	r3, [r3]
 2720 00fe DBB2     		uxtb	r3, r3
 2721 0100 9A42     		cmp	r2, r3
 2722 0102 02D2     		bcs	.L161
 761:main.c        ****         tooEarlyFlag = 1;    
 2723              		.loc 1 761 0
 2724 0104 0B4B     		ldr	r3, .L162+28
 2725 0106 0122     		movs	r2, #1
 2726 0108 1A70     		strb	r2, [r3]
 2727              	.L161:
 762:main.c        ****     }
 763:main.c        ****     QuadDec_M1_SetCounter(0);
 2728              		.loc 1 763 0
 2729 010a 0020     		movs	r0, #0
 2730 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2731              	.L149:
 764:main.c        **** }
 2732              		.loc 1 764 0
 2733 0110 0837     		adds	r7, r7, #8
 2734              		.cfi_def_cfa_offset 8
 2735 0112 BD46     		mov	sp, r7
 2736              		.cfi_def_cfa_register 13
 2737              		@ sp needed
 2738 0114 80BD     		pop	{r7, pc}
 2739              	.L163:
 2740 0116 00BF     		.align	2
 2741              	.L162:
 2742 0118 00000000 		.word	s3
 2743 011c 40000000 		.word	totalLineCount
 2744 0120 00000000 		.word	s4
 2745 0124 00000000 		.word	s5
 2746 0128 00000000 		.word	s6
 2747 012c 42000000 		.word	onLineFlag
 2748 0130 41000000 		.word	lineCount
 2749 0134 43000000 		.word	tooEarlyFlag
 2750 0138 44000000 		.word	tooLateFlag
 2751              		.cfi_endproc
 2752              	.LFE79:
 2753              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 63


 2754              		.section	.text.SetRobotMovement,"ax",%progbits
 2755              		.align	2
 2756              		.global	SetRobotMovement
 2757              		.thumb
 2758              		.thumb_func
 2759              		.type	SetRobotMovement, %function
 2760              	SetRobotMovement:
 2761              	.LFB80:
 765:main.c        **** 
 766:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 767:main.c        **** void SetRobotMovement() {
 2762              		.loc 1 767 0
 2763              		.cfi_startproc
 2764              		@ args = 0, pretend = 0, frame = 24
 2765              		@ frame_needed = 1, uses_anonymous_args = 0
 2766 0000 B0B5     		push	{r4, r5, r7, lr}
 2767              		.cfi_def_cfa_offset 16
 2768              		.cfi_offset 4, -16
 2769              		.cfi_offset 5, -12
 2770              		.cfi_offset 7, -8
 2771              		.cfi_offset 14, -4
 2772 0002 86B0     		sub	sp, sp, #24
 2773              		.cfi_def_cfa_offset 40
 2774 0004 00AF     		add	r7, sp, #0
 2775              		.cfi_def_cfa_register 7
 768:main.c        ****     //MoveToNextInstruction(); // debug purposes
 769:main.c        ****     previousInstruction = currentInstruction;
 2776              		.loc 1 769 0
 2777 0006 2D4A     		ldr	r2, .L180
 2778 0008 2D4B     		ldr	r3, .L180+4
 2779 000a 1446     		mov	r4, r2
 2780 000c 1D46     		mov	r5, r3
 2781 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2782 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2783 0012 2B68     		ldr	r3, [r5]
 2784 0014 2360     		str	r3, [r4]
 770:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2785              		.loc 1 770 0
 2786 0016 2A4C     		ldr	r4, .L180+4
 2787 0018 3B46     		mov	r3, r7
 2788 001a 1846     		mov	r0, r3
 2789 001c FFF7FEFF 		bl	GetInstructionAtIndex
 2790 0020 2546     		mov	r5, r4
 2791 0022 3C46     		mov	r4, r7
 2792 0024 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2793 0026 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2794 0028 2368     		ldr	r3, [r4]
 2795 002a 2B60     		str	r3, [r5]
 771:main.c        ****     previousDirection = currentDirection;
 2796              		.loc 1 771 0
 2797 002c 254B     		ldr	r3, .L180+8
 2798 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2799 0030 254B     		ldr	r3, .L180+12
 2800 0032 1A70     		strb	r2, [r3]
 772:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2801              		.loc 1 772 0
 2802 0034 FFF7FEFF 		bl	GetMovementAccordingToInstruction
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 64


 2803 0038 0346     		mov	r3, r0
 2804 003a 1A46     		mov	r2, r3
 2805 003c 214B     		ldr	r3, .L180+8
 2806 003e 1A70     		strb	r2, [r3]
 773:main.c        ****     // move robot depending on sensors
 774:main.c        ****     switch (currentDirection) {
 2807              		.loc 1 774 0
 2808 0040 204B     		ldr	r3, .L180+8
 2809 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2810 0044 0A2B     		cmp	r3, #10
 2811 0046 35D8     		bhi	.L178
 2812 0048 01A2     		adr	r2, .L167
 2813 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2814 004e 00BF     		.p2align 2
 2815              	.L167:
 2816 0050 7D000000 		.word	.L166+1
 2817 0054 83000000 		.word	.L168+1
 2818 0058 89000000 		.word	.L169+1
 2819 005c 95000000 		.word	.L170+1
 2820 0060 8F000000 		.word	.L171+1
 2821 0064 9B000000 		.word	.L172+1
 2822 0068 B3000000 		.word	.L179+1
 2823 006c B3000000 		.word	.L179+1
 2824 0070 A1000000 		.word	.L175+1
 2825 0074 A7000000 		.word	.L176+1
 2826 0078 AD000000 		.word	.L177+1
 2827              		.p2align 1
 2828              	.L166:
 775:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 776:main.c        ****         case Forward:
 777:main.c        ****             moveForward();
 2829              		.loc 1 777 0
 2830 007c FFF7FEFF 		bl	moveForward
 778:main.c        ****             break;
 2831              		.loc 1 778 0
 2832 0080 18E0     		b	.L165
 2833              	.L168:
 779:main.c        ****         case TurnRight:
 780:main.c        ****             turnRight();
 2834              		.loc 1 780 0
 2835 0082 FFF7FEFF 		bl	turnRight
 781:main.c        ****             break;
 2836              		.loc 1 781 0
 2837 0086 15E0     		b	.L165
 2838              	.L169:
 782:main.c        ****         case TurnLeft:
 783:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2839              		.loc 1 783 0
 2840 0088 FFF7FEFF 		bl	turnLeft
 784:main.c        ****             break;
 2841              		.loc 1 784 0
 2842 008c 12E0     		b	.L165
 2843              	.L171:
 785:main.c        ****         case AdjustToTheRight:
 786:main.c        ****             adjustRight();
 2844              		.loc 1 786 0
 2845 008e FFF7FEFF 		bl	adjustRight
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 65


 787:main.c        ****             break;
 2846              		.loc 1 787 0
 2847 0092 0FE0     		b	.L165
 2848              	.L170:
 788:main.c        ****         case AdjustToTheLeft:
 789:main.c        ****             adjustLeft();
 2849              		.loc 1 789 0
 2850 0094 FFF7FEFF 		bl	adjustLeft
 790:main.c        ****             break;
 2851              		.loc 1 790 0
 2852 0098 0CE0     		b	.L165
 2853              	.L172:
 791:main.c        ****         case Stop:
 792:main.c        ****             stopMoving();
 2854              		.loc 1 792 0
 2855 009a FFF7FEFF 		bl	stopMoving
 793:main.c        ****             break;
 2856              		.loc 1 793 0
 2857 009e 09E0     		b	.L165
 2858              	.L175:
 794:main.c        ****         case ForwardAfterTurn:
 795:main.c        ****             moveForward();
 2859              		.loc 1 795 0
 2860 00a0 FFF7FEFF 		bl	moveForward
 796:main.c        ****             break;
 2861              		.loc 1 796 0
 2862 00a4 06E0     		b	.L165
 2863              	.L176:
 797:main.c        ****         case Backward:
 798:main.c        ****             moveBackward();
 2864              		.loc 1 798 0
 2865 00a6 FFF7FEFF 		bl	moveBackward
 799:main.c        ****             break;
 2866              		.loc 1 799 0
 2867 00aa 03E0     		b	.L165
 2868              	.L177:
 800:main.c        ****         case waitForTurn:
 801:main.c        ****             break;
 802:main.c        ****         case Spin180:
 803:main.c        ****             RotateClockwise180Degrees();
 2869              		.loc 1 803 0
 2870 00ac FFF7FEFF 		bl	RotateClockwise180Degrees
 804:main.c        ****             break;
 2871              		.loc 1 804 0
 2872 00b0 00E0     		b	.L165
 2873              	.L179:
 805:main.c        ****         case Unknown:
 806:main.c        ****             break;  
 2874              		.loc 1 806 0
 2875 00b2 00BF     		nop
 2876              	.L165:
 2877              	.L178:
 807:main.c        ****     }
 808:main.c        **** }
 2878              		.loc 1 808 0
 2879 00b4 00BF     		nop
 2880 00b6 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 66


 2881              		.cfi_def_cfa_offset 16
 2882 00b8 BD46     		mov	sp, r7
 2883              		.cfi_def_cfa_register 13
 2884              		@ sp needed
 2885 00ba B0BD     		pop	{r4, r5, r7, pc}
 2886              	.L181:
 2887              		.align	2
 2888              	.L180:
 2889 00bc 00000000 		.word	previousInstruction
 2890 00c0 00000000 		.word	currentInstruction
 2891 00c4 00000000 		.word	currentDirection
 2892 00c8 00000000 		.word	previousDirection
 2893              		.cfi_endproc
 2894              	.LFE80:
 2895              		.size	SetRobotMovement, .-SetRobotMovement
 2896              		.text
 2897              	.Letext0:
 2898              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2899              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2900              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2901              		.file 5 "vars.h"
 2902              		.file 6 "pathfinding.h"
 2903              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2904              		.file 8 "map.h"
 2905              		.section	.debug_info,"",%progbits
 2906              	.Ldebug_info0:
 2907 0000 130A0000 		.4byte	0xa13
 2908 0004 0400     		.2byte	0x4
 2909 0006 00000000 		.4byte	.Ldebug_abbrev0
 2910 000a 04       		.byte	0x4
 2911 000b 01       		.uleb128 0x1
 2912 000c A4000000 		.4byte	.LASF158
 2913 0010 0C       		.byte	0xc
 2914 0011 5E040000 		.4byte	.LASF159
 2915 0015 BA050000 		.4byte	.LASF160
 2916 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2917 001d 00000000 		.4byte	0
 2918 0021 00000000 		.4byte	.Ldebug_line0
 2919 0025 02       		.uleb128 0x2
 2920 0026 01       		.byte	0x1
 2921 0027 06       		.byte	0x6
 2922 0028 79000000 		.4byte	.LASF0
 2923 002c 02       		.uleb128 0x2
 2924 002d 01       		.byte	0x1
 2925 002e 08       		.byte	0x8
 2926 002f 5E060000 		.4byte	.LASF1
 2927 0033 02       		.uleb128 0x2
 2928 0034 02       		.byte	0x2
 2929 0035 05       		.byte	0x5
 2930 0036 83040000 		.4byte	.LASF2
 2931 003a 02       		.uleb128 0x2
 2932 003b 02       		.byte	0x2
 2933 003c 07       		.byte	0x7
 2934 003d FA030000 		.4byte	.LASF3
 2935 0041 03       		.uleb128 0x3
 2936 0042 54040000 		.4byte	.LASF12
 2937 0046 02       		.byte	0x2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 67


 2938 0047 3F       		.byte	0x3f
 2939 0048 4C000000 		.4byte	0x4c
 2940 004c 02       		.uleb128 0x2
 2941 004d 04       		.byte	0x4
 2942 004e 05       		.byte	0x5
 2943 004f 33020000 		.4byte	.LASF4
 2944 0053 02       		.uleb128 0x2
 2945 0054 04       		.byte	0x4
 2946 0055 07       		.byte	0x7
 2947 0056 9F030000 		.4byte	.LASF5
 2948 005a 02       		.uleb128 0x2
 2949 005b 08       		.byte	0x8
 2950 005c 05       		.byte	0x5
 2951 005d 9C020000 		.4byte	.LASF6
 2952 0061 02       		.uleb128 0x2
 2953 0062 08       		.byte	0x8
 2954 0063 07       		.byte	0x7
 2955 0064 54010000 		.4byte	.LASF7
 2956 0068 04       		.uleb128 0x4
 2957 0069 04       		.byte	0x4
 2958 006a 05       		.byte	0x5
 2959 006b 696E7400 		.ascii	"int\000"
 2960 006f 02       		.uleb128 0x2
 2961 0070 04       		.byte	0x4
 2962 0071 07       		.byte	0x7
 2963 0072 8C070000 		.4byte	.LASF8
 2964 0076 02       		.uleb128 0x2
 2965 0077 08       		.byte	0x8
 2966 0078 04       		.byte	0x4
 2967 0079 6B070000 		.4byte	.LASF9
 2968 007d 02       		.uleb128 0x2
 2969 007e 04       		.byte	0x4
 2970 007f 07       		.byte	0x7
 2971 0080 0E050000 		.4byte	.LASF10
 2972 0084 02       		.uleb128 0x2
 2973 0085 01       		.byte	0x1
 2974 0086 08       		.byte	0x8
 2975 0087 77070000 		.4byte	.LASF11
 2976 008b 03       		.uleb128 0x3
 2977 008c 56060000 		.4byte	.LASF13
 2978 0090 03       		.byte	0x3
 2979 0091 2C       		.byte	0x2c
 2980 0092 41000000 		.4byte	0x41
 2981 0096 05       		.uleb128 0x5
 2982 0097 96020000 		.4byte	.LASF14
 2983 009b 04       		.byte	0x4
 2984 009c E701     		.2byte	0x1e7
 2985 009e 2C000000 		.4byte	0x2c
 2986 00a2 05       		.uleb128 0x5
 2987 00a3 6C060000 		.4byte	.LASF15
 2988 00a7 04       		.byte	0x4
 2989 00a8 E801     		.2byte	0x1e8
 2990 00aa 3A000000 		.4byte	0x3a
 2991 00ae 05       		.uleb128 0x5
 2992 00af 14030000 		.4byte	.LASF16
 2993 00b3 04       		.byte	0x4
 2994 00b4 E901     		.2byte	0x1e9
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 68


 2995 00b6 53000000 		.4byte	0x53
 2996 00ba 05       		.uleb128 0x5
 2997 00bb 44040000 		.4byte	.LASF17
 2998 00bf 04       		.byte	0x4
 2999 00c0 EA01     		.2byte	0x1ea
 3000 00c2 25000000 		.4byte	0x25
 3001 00c6 05       		.uleb128 0x5
 3002 00c7 C8080000 		.4byte	.LASF18
 3003 00cb 04       		.byte	0x4
 3004 00cc EB01     		.2byte	0x1eb
 3005 00ce 33000000 		.4byte	0x33
 3006 00d2 02       		.uleb128 0x2
 3007 00d3 04       		.byte	0x4
 3008 00d4 04       		.byte	0x4
 3009 00d5 B4050000 		.4byte	.LASF19
 3010 00d9 02       		.uleb128 0x2
 3011 00da 08       		.byte	0x8
 3012 00db 04       		.byte	0x4
 3013 00dc AA020000 		.4byte	.LASF20
 3014 00e0 06       		.uleb128 0x6
 3015 00e1 96000000 		.4byte	0x96
 3016 00e5 06       		.uleb128 0x6
 3017 00e6 AE000000 		.4byte	0xae
 3018 00ea 07       		.uleb128 0x7
 3019 00eb 96000000 		.4byte	0x96
 3020 00ef FA000000 		.4byte	0xfa
 3021 00f3 08       		.uleb128 0x8
 3022 00f4 7D000000 		.4byte	0x7d
 3023 00f8 03       		.byte	0x3
 3024 00f9 00       		.byte	0
 3025 00fa 09       		.uleb128 0x9
 3026 00fb 84030000 		.4byte	.LASF49
 3027 00ff 20       		.byte	0x20
 3028 0100 05       		.byte	0x5
 3029 0101 28       		.byte	0x28
 3030 0102 D3010000 		.4byte	0x1d3
 3031 0106 0A       		.uleb128 0xa
 3032 0107 99070000 		.4byte	.LASF21
 3033 010b 05       		.byte	0x5
 3034 010c 2A       		.byte	0x2a
 3035 010d BA000000 		.4byte	0xba
 3036 0111 00       		.byte	0
 3037 0112 0A       		.uleb128 0xa
 3038 0113 9E070000 		.4byte	.LASF22
 3039 0117 05       		.byte	0x5
 3040 0118 2B       		.byte	0x2b
 3041 0119 96000000 		.4byte	0x96
 3042 011d 01       		.byte	0x1
 3043 011e 0A       		.uleb128 0xa
 3044 011f E3070000 		.4byte	.LASF23
 3045 0123 05       		.byte	0x5
 3046 0124 2C       		.byte	0x2c
 3047 0125 C6000000 		.4byte	0xc6
 3048 0129 02       		.byte	0x2
 3049 012a 0A       		.uleb128 0xa
 3050 012b F0060000 		.4byte	.LASF24
 3051 012f 05       		.byte	0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 69


 3052 0130 2D       		.byte	0x2d
 3053 0131 C6000000 		.4byte	0xc6
 3054 0135 04       		.byte	0x4
 3055 0136 0A       		.uleb128 0xa
 3056 0137 27090000 		.4byte	.LASF25
 3057 013b 05       		.byte	0x5
 3058 013c 2E       		.byte	0x2e
 3059 013d C6000000 		.4byte	0xc6
 3060 0141 06       		.byte	0x6
 3061 0142 0A       		.uleb128 0xa
 3062 0143 85010000 		.4byte	.LASF26
 3063 0147 05       		.byte	0x5
 3064 0148 2F       		.byte	0x2f
 3065 0149 C6000000 		.4byte	0xc6
 3066 014d 08       		.byte	0x8
 3067 014e 0A       		.uleb128 0xa
 3068 014f 7C070000 		.4byte	.LASF27
 3069 0153 05       		.byte	0x5
 3070 0154 30       		.byte	0x30
 3071 0155 C6000000 		.4byte	0xc6
 3072 0159 0A       		.byte	0xa
 3073 015a 0A       		.uleb128 0xa
 3074 015b 06090000 		.4byte	.LASF28
 3075 015f 05       		.byte	0x5
 3076 0160 31       		.byte	0x31
 3077 0161 C6000000 		.4byte	0xc6
 3078 0165 0C       		.byte	0xc
 3079 0166 0A       		.uleb128 0xa
 3080 0167 41010000 		.4byte	.LASF29
 3081 016b 05       		.byte	0x5
 3082 016c 32       		.byte	0x32
 3083 016d C6000000 		.4byte	0xc6
 3084 0171 0E       		.byte	0xe
 3085 0172 0A       		.uleb128 0xa
 3086 0173 56050000 		.4byte	.LASF30
 3087 0177 05       		.byte	0x5
 3088 0178 33       		.byte	0x33
 3089 0179 C6000000 		.4byte	0xc6
 3090 017d 10       		.byte	0x10
 3091 017e 0A       		.uleb128 0xa
 3092 017f 65040000 		.4byte	.LASF31
 3093 0183 05       		.byte	0x5
 3094 0184 34       		.byte	0x34
 3095 0185 C6000000 		.4byte	0xc6
 3096 0189 12       		.byte	0x12
 3097 018a 0A       		.uleb128 0xa
 3098 018b EE040000 		.4byte	.LASF32
 3099 018f 05       		.byte	0x5
 3100 0190 35       		.byte	0x35
 3101 0191 C6000000 		.4byte	0xc6
 3102 0195 14       		.byte	0x14
 3103 0196 0A       		.uleb128 0xa
 3104 0197 2F050000 		.4byte	.LASF33
 3105 019b 05       		.byte	0x5
 3106 019c 36       		.byte	0x36
 3107 019d C6000000 		.4byte	0xc6
 3108 01a1 16       		.byte	0x16
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 70


 3109 01a2 0A       		.uleb128 0xa
 3110 01a3 88060000 		.4byte	.LASF34
 3111 01a7 05       		.byte	0x5
 3112 01a8 37       		.byte	0x37
 3113 01a9 C6000000 		.4byte	0xc6
 3114 01ad 18       		.byte	0x18
 3115 01ae 0A       		.uleb128 0xa
 3116 01af 5E050000 		.4byte	.LASF35
 3117 01b3 05       		.byte	0x5
 3118 01b4 38       		.byte	0x38
 3119 01b5 C6000000 		.4byte	0xc6
 3120 01b9 1A       		.byte	0x1a
 3121 01ba 0A       		.uleb128 0xa
 3122 01bb 1F000000 		.4byte	.LASF36
 3123 01bf 05       		.byte	0x5
 3124 01c0 39       		.byte	0x39
 3125 01c1 C6000000 		.4byte	0xc6
 3126 01c5 1C       		.byte	0x1c
 3127 01c6 0A       		.uleb128 0xa
 3128 01c7 36030000 		.4byte	.LASF37
 3129 01cb 05       		.byte	0x5
 3130 01cc 3A       		.byte	0x3a
 3131 01cd C6000000 		.4byte	0xc6
 3132 01d1 1E       		.byte	0x1e
 3133 01d2 00       		.byte	0
 3134 01d3 0B       		.uleb128 0xb
 3135 01d4 0E000000 		.4byte	.LASF41
 3136 01d8 01       		.byte	0x1
 3137 01d9 2C000000 		.4byte	0x2c
 3138 01dd 06       		.byte	0x6
 3139 01de 0D       		.byte	0xd
 3140 01df FB010000 		.4byte	0x1fb
 3141 01e3 0C       		.uleb128 0xc
 3142 01e4 557000   		.ascii	"Up\000"
 3143 01e7 00       		.byte	0
 3144 01e8 0D       		.uleb128 0xd
 3145 01e9 BA070000 		.4byte	.LASF38
 3146 01ed 01       		.byte	0x1
 3147 01ee 0D       		.uleb128 0xd
 3148 01ef F7040000 		.4byte	.LASF39
 3149 01f3 02       		.byte	0x2
 3150 01f4 0D       		.uleb128 0xd
 3151 01f5 15070000 		.4byte	.LASF40
 3152 01f9 03       		.byte	0x3
 3153 01fa 00       		.byte	0
 3154 01fb 0B       		.uleb128 0xb
 3155 01fc 73060000 		.4byte	.LASF42
 3156 0200 01       		.byte	0x1
 3157 0201 2C000000 		.4byte	0x2c
 3158 0205 06       		.byte	0x6
 3159 0206 0E       		.byte	0xe
 3160 0207 30020000 		.4byte	0x230
 3161 020b 0D       		.uleb128 0xd
 3162 020c 0B070000 		.4byte	.LASF43
 3163 0210 00       		.byte	0
 3164 0211 0D       		.uleb128 0xd
 3165 0212 46050000 		.4byte	.LASF44
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 71


 3166 0216 01       		.byte	0x1
 3167 0217 0D       		.uleb128 0xd
 3168 0218 5A080000 		.4byte	.LASF45
 3169 021c 02       		.byte	0x2
 3170 021d 0D       		.uleb128 0xd
 3171 021e 7F010000 		.4byte	.LASF46
 3172 0222 03       		.byte	0x3
 3173 0223 0D       		.uleb128 0xd
 3174 0224 7A020000 		.4byte	.LASF47
 3175 0228 04       		.byte	0x4
 3176 0229 0D       		.uleb128 0xd
 3177 022a B4010000 		.4byte	.LASF48
 3178 022e 05       		.byte	0x5
 3179 022f 00       		.byte	0
 3180 0230 09       		.uleb128 0x9
 3181 0231 17020000 		.4byte	.LASF50
 3182 0235 14       		.byte	0x14
 3183 0236 06       		.byte	0x6
 3184 0237 10       		.byte	0x10
 3185 0238 79020000 		.4byte	0x279
 3186 023c 0A       		.uleb128 0xa
 3187 023d 91000000 		.4byte	.LASF51
 3188 0241 06       		.byte	0x6
 3189 0242 11       		.byte	0x11
 3190 0243 FB010000 		.4byte	0x1fb
 3191 0247 00       		.byte	0
 3192 0248 0A       		.uleb128 0xa
 3193 0249 DD080000 		.4byte	.LASF52
 3194 024d 06       		.byte	0x6
 3195 024e 12       		.byte	0x12
 3196 024f 68000000 		.4byte	0x68
 3197 0253 04       		.byte	0x4
 3198 0254 0A       		.uleb128 0xa
 3199 0255 EE080000 		.4byte	.LASF53
 3200 0259 06       		.byte	0x6
 3201 025a 13       		.byte	0x13
 3202 025b 68000000 		.4byte	0x68
 3203 025f 08       		.byte	0x8
 3204 0260 0A       		.uleb128 0xa
 3205 0261 A3010000 		.4byte	.LASF54
 3206 0265 06       		.byte	0x6
 3207 0266 14       		.byte	0x14
 3208 0267 68000000 		.4byte	0x68
 3209 026b 0C       		.byte	0xc
 3210 026c 0A       		.uleb128 0xa
 3211 026d 6B010000 		.4byte	.LASF55
 3212 0271 06       		.byte	0x6
 3213 0272 15       		.byte	0x15
 3214 0273 D3010000 		.4byte	0x1d3
 3215 0277 10       		.byte	0x10
 3216 0278 00       		.byte	0
 3217 0279 03       		.uleb128 0x3
 3218 027a 17020000 		.4byte	.LASF50
 3219 027e 06       		.byte	0x6
 3220 027f 16       		.byte	0x16
 3221 0280 30020000 		.4byte	0x230
 3222 0284 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 72


 3223 0285 46000000 		.4byte	.LASF56
 3224 0289 01       		.byte	0x1
 3225 028a 2C000000 		.4byte	0x2c
 3226 028e 01       		.byte	0x1
 3227 028f 18       		.byte	0x18
 3228 0290 D7020000 		.4byte	0x2d7
 3229 0294 0D       		.uleb128 0xd
 3230 0295 F2030000 		.4byte	.LASF57
 3231 0299 00       		.byte	0
 3232 029a 0D       		.uleb128 0xd
 3233 029b 69030000 		.4byte	.LASF58
 3234 029f 01       		.byte	0x1
 3235 02a0 0D       		.uleb128 0xd
 3236 02a1 E5080000 		.4byte	.LASF59
 3237 02a5 02       		.byte	0x2
 3238 02a6 0D       		.uleb128 0xd
 3239 02a7 FB060000 		.4byte	.LASF60
 3240 02ab 03       		.byte	0x3
 3241 02ac 0D       		.uleb128 0xd
 3242 02ad E3020000 		.4byte	.LASF61
 3243 02b1 04       		.byte	0x4
 3244 02b2 0D       		.uleb128 0xd
 3245 02b3 2E020000 		.4byte	.LASF62
 3246 02b7 05       		.byte	0x5
 3247 02b8 0D       		.uleb128 0xd
 3248 02b9 13060000 		.4byte	.LASF63
 3249 02bd 06       		.byte	0x6
 3250 02be 0D       		.uleb128 0xd
 3251 02bf E6030000 		.4byte	.LASF64
 3252 02c3 07       		.byte	0x7
 3253 02c4 0D       		.uleb128 0xd
 3254 02c5 73030000 		.4byte	.LASF65
 3255 02c9 08       		.byte	0x8
 3256 02ca 0D       		.uleb128 0xd
 3257 02cb 8D020000 		.4byte	.LASF66
 3258 02cf 09       		.byte	0x9
 3259 02d0 0D       		.uleb128 0xd
 3260 02d1 84070000 		.4byte	.LASF67
 3261 02d5 0A       		.byte	0xa
 3262 02d6 00       		.byte	0
 3263 02d7 0E       		.uleb128 0xe
 3264 02d8 49040000 		.4byte	.LASF78
 3265 02dc 01       		.byte	0x1
 3266 02dd 55       		.byte	0x55
 3267 02de 00000000 		.4byte	.LFB64
 3268 02e2 EC000000 		.4byte	.LFE64-.LFB64
 3269 02e6 01       		.uleb128 0x1
 3270 02e7 9C       		.byte	0x9c
 3271 02e8 05030000 		.4byte	0x305
 3272 02ec 0F       		.uleb128 0xf
 3273 02ed 50000000 		.4byte	.LBB2
 3274 02f1 62000000 		.4byte	.LBE2-.LBB2
 3275 02f5 10       		.uleb128 0x10
 3276 02f6 5F070000 		.4byte	.LASF74
 3277 02fa 01       		.byte	0x1
 3278 02fb 62       		.byte	0x62
 3279 02fc D2000000 		.4byte	0xd2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 73


 3280 0300 02       		.uleb128 0x2
 3281 0301 91       		.byte	0x91
 3282 0302 6C       		.sleb128 -20
 3283 0303 00       		.byte	0
 3284 0304 00       		.byte	0
 3285 0305 11       		.uleb128 0x11
 3286 0306 E0010000 		.4byte	.LASF68
 3287 030a 01       		.byte	0x1
 3288 030b 6D       		.byte	0x6d
 3289 030c 00000000 		.4byte	.LFB65
 3290 0310 18000000 		.4byte	.LFE65-.LFB65
 3291 0314 01       		.uleb128 0x1
 3292 0315 9C       		.byte	0x9c
 3293 0316 11       		.uleb128 0x11
 3294 0317 85000000 		.4byte	.LASF69
 3295 031b 01       		.byte	0x1
 3296 031c 73       		.byte	0x73
 3297 031d 00000000 		.4byte	.LFB66
 3298 0321 18000000 		.4byte	.LFE66-.LFB66
 3299 0325 01       		.uleb128 0x1
 3300 0326 9C       		.byte	0x9c
 3301 0327 11       		.uleb128 0x11
 3302 0328 FB010000 		.4byte	.LASF70
 3303 032c 01       		.byte	0x1
 3304 032d 79       		.byte	0x79
 3305 032e 00000000 		.4byte	.LFB67
 3306 0332 18000000 		.4byte	.LFE67-.LFB67
 3307 0336 01       		.uleb128 0x1
 3308 0337 9C       		.byte	0x9c
 3309 0338 11       		.uleb128 0x11
 3310 0339 A4070000 		.4byte	.LASF71
 3311 033d 01       		.byte	0x1
 3312 033e 7F       		.byte	0x7f
 3313 033f 00000000 		.4byte	.LFB68
 3314 0343 18000000 		.4byte	.LFE68-.LFB68
 3315 0347 01       		.uleb128 0x1
 3316 0348 9C       		.byte	0x9c
 3317 0349 12       		.uleb128 0x12
 3318 034a AA080000 		.4byte	.LASF72
 3319 034e 01       		.byte	0x1
 3320 034f 85       		.byte	0x85
 3321 0350 00000000 		.4byte	.LFB69
 3322 0354 70000000 		.4byte	.LFE69-.LFB69
 3323 0358 01       		.uleb128 0x1
 3324 0359 9C       		.byte	0x9c
 3325 035a 13       		.uleb128 0x13
 3326 035b CF020000 		.4byte	.LASF73
 3327 035f 01       		.byte	0x1
 3328 0360 99       		.byte	0x99
 3329 0361 68000000 		.4byte	0x68
 3330 0365 00000000 		.4byte	.LFB70
 3331 0369 04010000 		.4byte	.LFE70-.LFB70
 3332 036d 01       		.uleb128 0x1
 3333 036e 9C       		.byte	0x9c
 3334 036f 14       		.uleb128 0x14
 3335 0370 CE080000 		.4byte	.LASF161
 3336 0374 01       		.byte	0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 74


 3337 0375 C0       		.byte	0xc0
 3338 0376 C6000000 		.4byte	0xc6
 3339 037a 00000000 		.4byte	.LFB71
 3340 037e 54000000 		.4byte	.LFE71-.LFB71
 3341 0382 01       		.uleb128 0x1
 3342 0383 9C       		.byte	0x9c
 3343 0384 B3030000 		.4byte	0x3b3
 3344 0388 15       		.uleb128 0x15
 3345 0389 2B030000 		.4byte	.LASF162
 3346 038d 01       		.byte	0x1
 3347 038e C0       		.byte	0xc0
 3348 038f A2000000 		.4byte	0xa2
 3349 0393 02       		.uleb128 0x2
 3350 0394 91       		.byte	0x91
 3351 0395 66       		.sleb128 -26
 3352 0396 16       		.uleb128 0x16
 3353 0397 63707300 		.ascii	"cps\000"
 3354 039b 01       		.byte	0x1
 3355 039c C1       		.byte	0xc1
 3356 039d D2000000 		.4byte	0xd2
 3357 03a1 02       		.uleb128 0x2
 3358 03a2 91       		.byte	0x91
 3359 03a3 6C       		.sleb128 -20
 3360 03a4 16       		.uleb128 0x16
 3361 03a5 72706D00 		.ascii	"rpm\000"
 3362 03a9 01       		.byte	0x1
 3363 03aa C2       		.byte	0xc2
 3364 03ab C6000000 		.4byte	0xc6
 3365 03af 02       		.uleb128 0x2
 3366 03b0 91       		.byte	0x91
 3367 03b1 6A       		.sleb128 -22
 3368 03b2 00       		.byte	0
 3369 03b3 17       		.uleb128 0x17
 3370 03b4 B7080000 		.4byte	.LASF83
 3371 03b8 01       		.byte	0x1
 3372 03b9 CA       		.byte	0xca
 3373 03ba 00000000 		.4byte	.LFB72
 3374 03be 34000000 		.4byte	.LFE72-.LFB72
 3375 03c2 01       		.uleb128 0x1
 3376 03c3 9C       		.byte	0x9c
 3377 03c4 18       		.uleb128 0x18
 3378 03c5 BC040000 		.4byte	.LASF75
 3379 03c9 01       		.byte	0x1
 3380 03ca DB       		.byte	0xdb
 3381 03cb 84020000 		.4byte	0x284
 3382 03cf 00000000 		.4byte	.LFB73
 3383 03d3 84000000 		.4byte	.LFE73-.LFB73
 3384 03d7 01       		.uleb128 0x1
 3385 03d8 9C       		.byte	0x9c
 3386 03d9 19       		.uleb128 0x19
 3387 03da 3A070000 		.4byte	.LASF76
 3388 03de 01       		.byte	0x1
 3389 03df 0101     		.2byte	0x101
 3390 03e1 84020000 		.4byte	0x284
 3391 03e5 00000000 		.4byte	.LFB74
 3392 03e9 7C000000 		.4byte	.LFE74-.LFB74
 3393 03ed 01       		.uleb128 0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 75


 3394 03ee 9C       		.byte	0x9c
 3395 03ef 19       		.uleb128 0x19
 3396 03f0 61020000 		.4byte	.LASF77
 3397 03f4 01       		.byte	0x1
 3398 03f5 1F01     		.2byte	0x11f
 3399 03f7 84020000 		.4byte	0x284
 3400 03fb 00000000 		.4byte	.LFB75
 3401 03ff 84000000 		.4byte	.LFE75-.LFB75
 3402 0403 01       		.uleb128 0x1
 3403 0404 9C       		.byte	0x9c
 3404 0405 1A       		.uleb128 0x1a
 3405 0406 17080000 		.4byte	.LASF79
 3406 040a 01       		.byte	0x1
 3407 040b 4501     		.2byte	0x145
 3408 040d 84020000 		.4byte	0x284
 3409 0411 00000000 		.4byte	.LFB76
 3410 0415 14070000 		.4byte	.LFE76-.LFB76
 3411 0419 01       		.uleb128 0x1
 3412 041a 9C       		.byte	0x9c
 3413 041b 57040000 		.4byte	0x457
 3414 041f 1B       		.uleb128 0x1b
 3415 0420 8E030000 		.4byte	.LASF80
 3416 0424 01       		.byte	0x1
 3417 0425 4601     		.2byte	0x146
 3418 0427 D2000000 		.4byte	0xd2
 3419 042b 02       		.uleb128 0x2
 3420 042c 91       		.byte	0x91
 3421 042d 6C       		.sleb128 -20
 3422 042e 1B       		.uleb128 0x1b
 3423 042f D4060000 		.4byte	.LASF81
 3424 0433 01       		.byte	0x1
 3425 0434 5501     		.2byte	0x155
 3426 0436 FB010000 		.4byte	0x1fb
 3427 043a 02       		.uleb128 0x2
 3428 043b 91       		.byte	0x91
 3429 043c 6B       		.sleb128 -21
 3430 043d 0F       		.uleb128 0xf
 3431 043e 12040000 		.4byte	.LBB3
 3432 0442 24000000 		.4byte	.LBE3-.LBB3
 3433 0446 1B       		.uleb128 0x1b
 3434 0447 32010000 		.4byte	.LASF82
 3435 044b 01       		.byte	0x1
 3436 044c 3902     		.2byte	0x239
 3437 044e 68000000 		.4byte	0x68
 3438 0452 02       		.uleb128 0x2
 3439 0453 91       		.byte	0x91
 3440 0454 64       		.sleb128 -28
 3441 0455 00       		.byte	0
 3442 0456 00       		.byte	0
 3443 0457 1C       		.uleb128 0x1c
 3444 0458 6D040000 		.4byte	.LASF84
 3445 045c 01       		.byte	0x1
 3446 045d B502     		.2byte	0x2b5
 3447 045f 00000000 		.4byte	.LFB77
 3448 0463 68000000 		.4byte	.LFE77-.LFB77
 3449 0467 01       		.uleb128 0x1
 3450 0468 9C       		.byte	0x9c
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 76


 3451 0469 1D       		.uleb128 0x1d
 3452 046a 1B060000 		.4byte	.LASF85
 3453 046e 01       		.byte	0x1
 3454 046f C002     		.2byte	0x2c0
 3455 0471 79020000 		.4byte	0x279
 3456 0475 00000000 		.4byte	.LFB78
 3457 0479 6C000000 		.4byte	.LFE78-.LFB78
 3458 047d 01       		.uleb128 0x1
 3459 047e 9C       		.byte	0x9c
 3460 047f 93040000 		.4byte	0x493
 3461 0483 1B       		.uleb128 0x1b
 3462 0484 1B030000 		.4byte	.LASF86
 3463 0488 01       		.byte	0x1
 3464 0489 C102     		.2byte	0x2c1
 3465 048b 79020000 		.4byte	0x279
 3466 048f 02       		.uleb128 0x2
 3467 0490 91       		.byte	0x91
 3468 0491 5C       		.sleb128 -36
 3469 0492 00       		.byte	0
 3470 0493 1E       		.uleb128 0x1e
 3471 0494 CC030000 		.4byte	.LASF163
 3472 0498 01       		.byte	0x1
 3473 0499 C902     		.2byte	0x2c9
 3474 049b 00000000 		.4byte	.LFB79
 3475 049f 3C010000 		.4byte	.LFE79-.LFB79
 3476 04a3 01       		.uleb128 0x1
 3477 04a4 9C       		.byte	0x9c
 3478 04a5 D7040000 		.4byte	0x4d7
 3479 04a9 1B       		.uleb128 0x1b
 3480 04aa A3080000 		.4byte	.LASF87
 3481 04ae 01       		.byte	0x1
 3482 04af CA02     		.2byte	0x2ca
 3483 04b1 A2000000 		.4byte	0xa2
 3484 04b5 02       		.uleb128 0x2
 3485 04b6 91       		.byte	0x91
 3486 04b7 72       		.sleb128 -14
 3487 04b8 1B       		.uleb128 0x1b
 3488 04b9 49020000 		.4byte	.LASF88
 3489 04bd 01       		.byte	0x1
 3490 04be CB02     		.2byte	0x2cb
 3491 04c0 A2000000 		.4byte	0xa2
 3492 04c4 02       		.uleb128 0x2
 3493 04c5 91       		.byte	0x91
 3494 04c6 70       		.sleb128 -16
 3495 04c7 1B       		.uleb128 0x1b
 3496 04c8 8D040000 		.4byte	.LASF89
 3497 04cc 01       		.byte	0x1
 3498 04cd CF02     		.2byte	0x2cf
 3499 04cf 68000000 		.4byte	0x68
 3500 04d3 02       		.uleb128 0x2
 3501 04d4 91       		.byte	0x91
 3502 04d5 74       		.sleb128 -12
 3503 04d6 00       		.byte	0
 3504 04d7 1F       		.uleb128 0x1f
 3505 04d8 33040000 		.4byte	.LASF90
 3506 04dc 01       		.byte	0x1
 3507 04dd FF02     		.2byte	0x2ff
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 77


 3508 04df 00000000 		.4byte	.LFB80
 3509 04e3 CC000000 		.4byte	.LFE80-.LFB80
 3510 04e7 01       		.uleb128 0x1
 3511 04e8 9C       		.byte	0x9c
 3512 04e9 10       		.uleb128 0x10
 3513 04ea 50020000 		.4byte	.LASF91
 3514 04ee 01       		.byte	0x1
 3515 04ef 21       		.byte	0x21
 3516 04f0 E5000000 		.4byte	0xe5
 3517 04f4 05       		.uleb128 0x5
 3518 04f5 03       		.byte	0x3
 3519 04f6 14000000 		.4byte	instructionIndex
 3520 04fa 10       		.uleb128 0x10
 3521 04fb F6080000 		.4byte	.LASF92
 3522 04ff 01       		.byte	0x1
 3523 0500 35       		.byte	0x35
 3524 0501 E0000000 		.4byte	0xe0
 3525 0505 05       		.uleb128 0x5
 3526 0506 03       		.byte	0x3
 3527 0507 36000000 		.4byte	turnStartedFlag
 3528 050b 10       		.uleb128 0x10
 3529 050c 39080000 		.4byte	.LASF93
 3530 0510 01       		.byte	0x1
 3531 0511 36       		.byte	0x36
 3532 0512 E0000000 		.4byte	0xe0
 3533 0516 05       		.uleb128 0x5
 3534 0517 03       		.byte	0x3
 3535 0518 37000000 		.4byte	turnFinishedFlag
 3536 051c 10       		.uleb128 0x10
 3537 051d 28000000 		.4byte	.LASF94
 3538 0521 01       		.byte	0x1
 3539 0522 38       		.byte	0x38
 3540 0523 E0000000 		.4byte	0xe0
 3541 0527 05       		.uleb128 0x5
 3542 0528 03       		.byte	0x3
 3543 0529 38000000 		.4byte	forwardUntilTargetStartedFlag
 3544 052d 10       		.uleb128 0x10
 3545 052e 45060000 		.4byte	.LASF95
 3546 0532 01       		.byte	0x1
 3547 0533 39       		.byte	0x39
 3548 0534 E0000000 		.4byte	0xe0
 3549 0538 05       		.uleb128 0x5
 3550 0539 03       		.byte	0x3
 3551 053a 39000000 		.4byte	uTurnStartedFlag
 3552 053e 10       		.uleb128 0x10
 3553 053f FC040000 		.4byte	.LASF96
 3554 0543 01       		.byte	0x1
 3555 0544 3A       		.byte	0x3a
 3556 0545 E0000000 		.4byte	0xe0
 3557 0549 05       		.uleb128 0x5
 3558 054a 03       		.byte	0x3
 3559 054b 3A000000 		.4byte	uTurnFinishedFlag
 3560 054f 10       		.uleb128 0x10
 3561 0550 C5060000 		.4byte	.LASF97
 3562 0554 01       		.byte	0x1
 3563 0555 3C       		.byte	0x3c
 3564 0556 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 78


 3565 055a 05       		.uleb128 0x5
 3566 055b 03       		.byte	0x3
 3567 055c 3B000000 		.4byte	leftStatusFlag
 3568 0560 10       		.uleb128 0x10
 3569 0561 07020000 		.4byte	.LASF98
 3570 0565 01       		.byte	0x1
 3571 0566 3D       		.byte	0x3d
 3572 0567 E0000000 		.4byte	0xe0
 3573 056b 05       		.uleb128 0x5
 3574 056c 03       		.byte	0x3
 3575 056d 3C000000 		.4byte	rightStatusFlag
 3576 0571 10       		.uleb128 0x10
 3577 0572 66050000 		.4byte	.LASF99
 3578 0576 01       		.byte	0x1
 3579 0577 3F       		.byte	0x3f
 3580 0578 E0000000 		.4byte	0xe0
 3581 057c 05       		.uleb128 0x5
 3582 057d 03       		.byte	0x3
 3583 057e 3D000000 		.4byte	spinCourseCorrectionStarted
 3584 0582 10       		.uleb128 0x10
 3585 0583 B1020000 		.4byte	.LASF100
 3586 0587 01       		.byte	0x1
 3587 0588 40       		.byte	0x40
 3588 0589 E0000000 		.4byte	0xe0
 3589 058d 05       		.uleb128 0x5
 3590 058e 03       		.byte	0x3
 3591 058f 3E000000 		.4byte	currentIgnoreL
 3592 0593 10       		.uleb128 0x10
 3593 0594 D4020000 		.4byte	.LASF101
 3594 0598 01       		.byte	0x1
 3595 0599 41       		.byte	0x41
 3596 059a E0000000 		.4byte	0xe0
 3597 059e 05       		.uleb128 0x5
 3598 059f 03       		.byte	0x3
 3599 05a0 3F000000 		.4byte	currentIgnoreR
 3600 05a4 10       		.uleb128 0x10
 3601 05a5 94080000 		.4byte	.LASF102
 3602 05a9 01       		.byte	0x1
 3603 05aa 45       		.byte	0x45
 3604 05ab E0000000 		.4byte	0xe0
 3605 05af 05       		.uleb128 0x5
 3606 05b0 03       		.byte	0x3
 3607 05b1 40000000 		.4byte	totalLineCount
 3608 05b5 10       		.uleb128 0x10
 3609 05b6 66000000 		.4byte	.LASF103
 3610 05ba 01       		.byte	0x1
 3611 05bb 46       		.byte	0x46
 3612 05bc E0000000 		.4byte	0xe0
 3613 05c0 05       		.uleb128 0x5
 3614 05c1 03       		.byte	0x3
 3615 05c2 41000000 		.4byte	lineCount
 3616 05c6 10       		.uleb128 0x10
 3617 05c7 98010000 		.4byte	.LASF104
 3618 05cb 01       		.byte	0x1
 3619 05cc 47       		.byte	0x47
 3620 05cd E0000000 		.4byte	0xe0
 3621 05d1 05       		.uleb128 0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 79


 3622 05d2 03       		.byte	0x3
 3623 05d3 42000000 		.4byte	onLineFlag
 3624 05d7 10       		.uleb128 0x10
 3625 05d8 26040000 		.4byte	.LASF105
 3626 05dc 01       		.byte	0x1
 3627 05dd 49       		.byte	0x49
 3628 05de E0000000 		.4byte	0xe0
 3629 05e2 05       		.uleb128 0x5
 3630 05e3 03       		.byte	0x3
 3631 05e4 43000000 		.4byte	tooEarlyFlag
 3632 05e8 10       		.uleb128 0x10
 3633 05e9 B1030000 		.4byte	.LASF106
 3634 05ed 01       		.byte	0x1
 3635 05ee 4A       		.byte	0x4a
 3636 05ef E0000000 		.4byte	0xe0
 3637 05f3 05       		.uleb128 0x5
 3638 05f4 03       		.byte	0x3
 3639 05f5 44000000 		.4byte	tooLateFlag
 3640 05f9 10       		.uleb128 0x10
 3641 05fa 0D040000 		.4byte	.LASF107
 3642 05fe 01       		.byte	0x1
 3643 05ff 4C       		.byte	0x4c
 3644 0600 E0000000 		.4byte	0xe0
 3645 0604 05       		.uleb128 0x5
 3646 0605 03       		.byte	0x3
 3647 0606 45000000 		.4byte	dontOverwriteRightIgnore
 3648 060a 10       		.uleb128 0x10
 3649 060b 43030000 		.4byte	.LASF108
 3650 060f 01       		.byte	0x1
 3651 0610 4D       		.byte	0x4d
 3652 0611 E0000000 		.4byte	0xe0
 3653 0615 05       		.uleb128 0x5
 3654 0616 03       		.byte	0x3
 3655 0617 46000000 		.4byte	dontOverwriteLeftIgnore
 3656 061b 1B       		.uleb128 0x1b
 3657 061c F4020000 		.4byte	.LASF109
 3658 0620 01       		.byte	0x1
 3659 0621 4201     		.2byte	0x142
 3660 0623 E0000000 		.4byte	0xe0
 3661 0627 05       		.uleb128 0x5
 3662 0628 03       		.byte	0x3
 3663 0629 57000000 		.4byte	forwardAfterTurnLIgnore
 3664 062d 1B       		.uleb128 0x1b
 3665 062e 0F090000 		.4byte	.LASF110
 3666 0632 01       		.byte	0x1
 3667 0633 4301     		.2byte	0x143
 3668 0635 E0000000 		.4byte	0xe0
 3669 0639 05       		.uleb128 0x5
 3670 063a 03       		.byte	0x3
 3671 063b 58000000 		.4byte	forwardAfterTurnRIgnore
 3672 063f 20       		.uleb128 0x20
 3673 0640 3C020000 		.4byte	.LASF111
 3674 0644 07       		.byte	0x7
 3675 0645 1207     		.2byte	0x712
 3676 0647 4B060000 		.4byte	0x64b
 3677 064b 06       		.uleb128 0x6
 3678 064c 8B000000 		.4byte	0x8b
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 80


 3679 0650 21       		.uleb128 0x21
 3680 0651 747300   		.ascii	"ts\000"
 3681 0654 05       		.byte	0x5
 3682 0655 10       		.byte	0x10
 3683 0656 96000000 		.4byte	0x96
 3684 065a 05       		.uleb128 0x5
 3685 065b 03       		.byte	0x3
 3686 065c 00000000 		.4byte	ts
 3687 0660 22       		.uleb128 0x22
 3688 0661 98030000 		.4byte	.LASF112
 3689 0665 05       		.byte	0x5
 3690 0666 11       		.byte	0x11
 3691 0667 A2000000 		.4byte	0xa2
 3692 066b 05       		.uleb128 0x5
 3693 066c 03       		.byte	0x3
 3694 066d 00000000 		.4byte	ts_enc
 3695 0671 22       		.uleb128 0x22
 3696 0672 3B060000 		.4byte	.LASF113
 3697 0676 05       		.byte	0x5
 3698 0677 12       		.byte	0x12
 3699 0678 A2000000 		.4byte	0xa2
 3700 067c 05       		.uleb128 0x5
 3701 067d 03       		.byte	0x3
 3702 067e 00000000 		.4byte	ts_update
 3703 0682 22       		.uleb128 0x22
 3704 0683 70000000 		.4byte	.LASF114
 3705 0687 05       		.byte	0x5
 3706 0688 13       		.byte	0x13
 3707 0689 A2000000 		.4byte	0xa2
 3708 068d 05       		.uleb128 0x5
 3709 068e 03       		.byte	0x3
 3710 068f 00000000 		.4byte	ts_speed
 3711 0693 22       		.uleb128 0x22
 3712 0694 9C040000 		.4byte	.LASF115
 3713 0698 05       		.byte	0x5
 3714 0699 14       		.byte	0x14
 3715 069a A2000000 		.4byte	0xa2
 3716 069e 05       		.uleb128 0x5
 3717 069f 03       		.byte	0x3
 3718 06a0 00000000 		.4byte	ts_display
 3719 06a4 22       		.uleb128 0x22
 3720 06a5 D4010000 		.4byte	.LASF116
 3721 06a9 05       		.byte	0x5
 3722 06aa 16       		.byte	0x16
 3723 06ab 96000000 		.4byte	0x96
 3724 06af 05       		.uleb128 0x5
 3725 06b0 03       		.byte	0x3
 3726 06b1 00000000 		.4byte	flag_ts_enc
 3727 06b5 22       		.uleb128 0x22
 3728 06b6 C6070000 		.4byte	.LASF117
 3729 06ba 05       		.byte	0x5
 3730 06bb 17       		.byte	0x17
 3731 06bc 96000000 		.4byte	0x96
 3732 06c0 05       		.uleb128 0x5
 3733 06c1 03       		.byte	0x3
 3734 06c2 00000000 		.4byte	flag_ts_update
 3735 06c6 22       		.uleb128 0x22
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 81


 3736 06c7 E0040000 		.4byte	.LASF118
 3737 06cb 05       		.byte	0x5
 3738 06cc 18       		.byte	0x18
 3739 06cd 96000000 		.4byte	0x96
 3740 06d1 05       		.uleb128 0x5
 3741 06d2 03       		.byte	0x3
 3742 06d3 00000000 		.4byte	flag_ts_speed
 3743 06d7 22       		.uleb128 0x22
 3744 06d8 4F070000 		.4byte	.LASF119
 3745 06dc 05       		.byte	0x5
 3746 06dd 19       		.byte	0x19
 3747 06de 96000000 		.4byte	0x96
 3748 06e2 05       		.uleb128 0x5
 3749 06e3 03       		.byte	0x3
 3750 06e4 00000000 		.4byte	flag_ts_display
 3751 06e8 22       		.uleb128 0x22
 3752 06e9 0C030000 		.4byte	.LASF120
 3753 06ed 05       		.byte	0x5
 3754 06ee 1B       		.byte	0x1b
 3755 06ef 96000000 		.4byte	0x96
 3756 06f3 05       		.uleb128 0x5
 3757 06f4 03       		.byte	0x3
 3758 06f5 00000000 		.4byte	flag_rx
 3759 06f9 22       		.uleb128 0x22
 3760 06fa D4040000 		.4byte	.LASF121
 3761 06fe 05       		.byte	0x5
 3762 06ff 1C       		.byte	0x1c
 3763 0700 96000000 		.4byte	0x96
 3764 0704 05       		.uleb128 0x5
 3765 0705 03       		.byte	0x3
 3766 0706 00000000 		.4byte	flag_packet
 3767 070a 22       		.uleb128 0x22
 3768 070b EC010000 		.4byte	.LASF122
 3769 070f 05       		.byte	0x5
 3770 0710 1D       		.byte	0x1d
 3771 0711 96000000 		.4byte	0x96
 3772 0715 05       		.uleb128 0x5
 3773 0716 03       		.byte	0x3
 3774 0717 00000000 		.4byte	flag_KB_string
 3775 071b 22       		.uleb128 0x22
 3776 071c C0020000 		.4byte	.LASF123
 3777 0720 05       		.byte	0x5
 3778 0721 1F       		.byte	0x1f
 3779 0722 96000000 		.4byte	0x96
 3780 0726 05       		.uleb128 0x5
 3781 0727 03       		.byte	0x3
 3782 0728 00000000 		.4byte	dataready_flag
 3783 072c 22       		.uleb128 0x22
 3784 072d 82050000 		.4byte	.LASF124
 3785 0731 05       		.byte	0x5
 3786 0732 21       		.byte	0x21
 3787 0733 96000000 		.4byte	0x96
 3788 0737 05       		.uleb128 0x5
 3789 0738 03       		.byte	0x3
 3790 0739 00000000 		.4byte	flag_rf_transmission_active
 3791 073d 07       		.uleb128 0x7
 3792 073e 84000000 		.4byte	0x84
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 82


 3793 0742 4D070000 		.4byte	0x74d
 3794 0746 08       		.uleb128 0x8
 3795 0747 7D000000 		.4byte	0x7d
 3796 074b 3F       		.byte	0x3f
 3797 074c 00       		.byte	0
 3798 074d 22       		.uleb128 0x22
 3799 074e D5070000 		.4byte	.LASF125
 3800 0752 05       		.byte	0x5
 3801 0753 24       		.byte	0x24
 3802 0754 3D070000 		.4byte	0x73d
 3803 0758 05       		.uleb128 0x5
 3804 0759 03       		.byte	0x3
 3805 075a 00000000 		.4byte	displaystring
 3806 075e 22       		.uleb128 0x22
 3807 075f 31030000 		.4byte	.LASF126
 3808 0763 05       		.byte	0x5
 3809 0764 25       		.byte	0x25
 3810 0765 3D070000 		.4byte	0x73d
 3811 0769 05       		.uleb128 0x5
 3812 076a 03       		.byte	0x3
 3813 076b 00000000 		.4byte	line
 3814 076f 22       		.uleb128 0x22
 3815 0770 4E010000 		.4byte	.LASF127
 3816 0774 05       		.byte	0x5
 3817 0775 25       		.byte	0x25
 3818 0776 3D070000 		.4byte	0x73d
 3819 077a 05       		.uleb128 0x5
 3820 077b 03       		.byte	0x3
 3821 077c 00000000 		.4byte	entry
 3822 0780 07       		.uleb128 0x7
 3823 0781 96000000 		.4byte	0x96
 3824 0785 90070000 		.4byte	0x790
 3825 0789 08       		.uleb128 0x8
 3826 078a 7D000000 		.4byte	0x7d
 3827 078e 3F       		.byte	0x3f
 3828 078f 00       		.byte	0
 3829 0790 22       		.uleb128 0x22
 3830 0791 3C050000 		.4byte	.LASF128
 3831 0795 05       		.byte	0x5
 3832 0796 26       		.byte	0x26
 3833 0797 80070000 		.4byte	0x780
 3834 079b 05       		.uleb128 0x5
 3835 079c 03       		.byte	0x3
 3836 079d 00000000 		.4byte	usbBuffer
 3837 07a1 22       		.uleb128 0x22
 3838 07a2 22050000 		.4byte	.LASF129
 3839 07a6 05       		.byte	0x5
 3840 07a7 3C       		.byte	0x3c
 3841 07a8 FA000000 		.4byte	0xfa
 3842 07ac 05       		.uleb128 0x5
 3843 07ad 03       		.byte	0x3
 3844 07ae 00000000 		.4byte	system_state
 3845 07b2 07       		.uleb128 0x7
 3846 07b3 68000000 		.4byte	0x68
 3847 07b7 C8070000 		.4byte	0x7c8
 3848 07bb 08       		.uleb128 0x8
 3849 07bc 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 83


 3850 07c0 0E       		.byte	0xe
 3851 07c1 08       		.uleb128 0x8
 3852 07c2 7D000000 		.4byte	0x7d
 3853 07c6 12       		.byte	0x12
 3854 07c7 00       		.byte	0
 3855 07c8 23       		.uleb128 0x23
 3856 07c9 6D617000 		.ascii	"map\000"
 3857 07cd 08       		.byte	0x8
 3858 07ce 04       		.byte	0x4
 3859 07cf B2070000 		.4byte	0x7b2
 3860 07d3 07       		.uleb128 0x7
 3861 07d4 68000000 		.4byte	0x68
 3862 07d8 E9070000 		.4byte	0x7e9
 3863 07dc 08       		.uleb128 0x8
 3864 07dd 7D000000 		.4byte	0x7d
 3865 07e1 05       		.byte	0x5
 3866 07e2 08       		.uleb128 0x8
 3867 07e3 7D000000 		.4byte	0x7d
 3868 07e7 01       		.byte	0x1
 3869 07e8 00       		.byte	0
 3870 07e9 24       		.uleb128 0x24
 3871 07ea B0070000 		.4byte	.LASF130
 3872 07ee 08       		.byte	0x8
 3873 07ef 05       		.byte	0x5
 3874 07f0 D3070000 		.4byte	0x7d3
 3875 07f4 22       		.uleb128 0x22
 3876 07f5 06080000 		.4byte	.LASF131
 3877 07f9 01       		.byte	0x1
 3878 07fa 19       		.byte	0x19
 3879 07fb 84020000 		.4byte	0x284
 3880 07ff 05       		.uleb128 0x5
 3881 0800 03       		.byte	0x3
 3882 0801 00000000 		.4byte	currentDirection
 3883 0805 22       		.uleb128 0x22
 3884 0806 54000000 		.4byte	.LASF132
 3885 080a 01       		.byte	0x1
 3886 080b 19       		.byte	0x19
 3887 080c 84020000 		.4byte	0x284
 3888 0810 05       		.uleb128 0x5
 3889 0811 03       		.byte	0x3
 3890 0812 00000000 		.4byte	previousDirection
 3891 0816 22       		.uleb128 0x22
 3892 0817 EE070000 		.4byte	.LASF133
 3893 081b 01       		.byte	0x1
 3894 081c 1B       		.byte	0x1b
 3895 081d D3010000 		.4byte	0x1d3
 3896 0821 05       		.uleb128 0x5
 3897 0822 03       		.byte	0x3
 3898 0823 00000000 		.4byte	currentRobotOrientation
 3899 0827 22       		.uleb128 0x22
 3900 0828 A4060000 		.4byte	.LASF134
 3901 082c 01       		.byte	0x1
 3902 082d 1B       		.byte	0x1b
 3903 082e D3010000 		.4byte	0x1d3
 3904 0832 05       		.uleb128 0x5
 3905 0833 03       		.byte	0x3
 3906 0834 00000000 		.4byte	previousOrientation
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 84


 3907 0838 22       		.uleb128 0x22
 3908 0839 81080000 		.4byte	.LASF135
 3909 083d 01       		.byte	0x1
 3910 083e 1C       		.byte	0x1c
 3911 083f 79020000 		.4byte	0x279
 3912 0843 05       		.uleb128 0x5
 3913 0844 03       		.byte	0x3
 3914 0845 00000000 		.4byte	currentInstruction
 3915 0849 22       		.uleb128 0x22
 3916 084a 90060000 		.4byte	.LASF136
 3917 084e 01       		.byte	0x1
 3918 084f 1D       		.byte	0x1d
 3919 0850 79020000 		.4byte	0x279
 3920 0854 05       		.uleb128 0x5
 3921 0855 03       		.byte	0x3
 3922 0856 00000000 		.4byte	previousInstruction
 3923 085a 22       		.uleb128 0x22
 3924 085b 31070000 		.4byte	.LASF137
 3925 085f 01       		.byte	0x1
 3926 0860 1E       		.byte	0x1e
 3927 0861 68000000 		.4byte	0x68
 3928 0865 05       		.uleb128 0x5
 3929 0866 03       		.byte	0x3
 3930 0867 00000000 		.4byte	numSteps
 3931 086b 22       		.uleb128 0x22
 3932 086c 4A080000 		.4byte	.LASF138
 3933 0870 01       		.byte	0x1
 3934 0871 20       		.byte	0x20
 3935 0872 7C080000 		.4byte	0x87c
 3936 0876 05       		.uleb128 0x5
 3937 0877 03       		.byte	0x3
 3938 0878 00000000 		.4byte	instructionList
 3939 087c 25       		.uleb128 0x25
 3940 087d 04       		.byte	0x4
 3941 087e 79020000 		.4byte	0x279
 3942 0882 21       		.uleb128 0x21
 3943 0883 733300   		.ascii	"s3\000"
 3944 0886 01       		.byte	0x1
 3945 0887 26       		.byte	0x26
 3946 0888 96000000 		.4byte	0x96
 3947 088c 05       		.uleb128 0x5
 3948 088d 03       		.byte	0x3
 3949 088e 00000000 		.4byte	s3
 3950 0892 21       		.uleb128 0x21
 3951 0893 733400   		.ascii	"s4\000"
 3952 0896 01       		.byte	0x1
 3953 0897 26       		.byte	0x26
 3954 0898 96000000 		.4byte	0x96
 3955 089c 05       		.uleb128 0x5
 3956 089d 03       		.byte	0x3
 3957 089e 00000000 		.4byte	s4
 3958 08a2 21       		.uleb128 0x21
 3959 08a3 733500   		.ascii	"s5\000"
 3960 08a6 01       		.byte	0x1
 3961 08a7 26       		.byte	0x26
 3962 08a8 96000000 		.4byte	0x96
 3963 08ac 05       		.uleb128 0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 85


 3964 08ad 03       		.byte	0x3
 3965 08ae 00000000 		.4byte	s5
 3966 08b2 21       		.uleb128 0x21
 3967 08b3 733600   		.ascii	"s6\000"
 3968 08b6 01       		.byte	0x1
 3969 08b7 26       		.byte	0x26
 3970 08b8 96000000 		.4byte	0x96
 3971 08bc 05       		.uleb128 0x5
 3972 08bd 03       		.byte	0x3
 3973 08be 00000000 		.4byte	s6
 3974 08c2 22       		.uleb128 0x22
 3975 08c3 01060000 		.4byte	.LASF139
 3976 08c7 01       		.byte	0x1
 3977 08c8 2B       		.byte	0x2b
 3978 08c9 AE000000 		.4byte	0xae
 3979 08cd 05       		.uleb128 0x5
 3980 08ce 03       		.byte	0x3
 3981 08cf 00000000 		.4byte	totalMilliseconds
 3982 08d3 22       		.uleb128 0x22
 3983 08d4 00000000 		.4byte	.LASF140
 3984 08d8 01       		.byte	0x1
 3985 08d9 2C       		.byte	0x2c
 3986 08da D2000000 		.4byte	0xd2
 3987 08de 05       		.uleb128 0x5
 3988 08df 03       		.byte	0x3
 3989 08e0 00000000 		.4byte	totalDistance
 3990 08e4 07       		.uleb128 0x7
 3991 08e5 84000000 		.4byte	0x84
 3992 08e9 F4080000 		.4byte	0x8f4
 3993 08ed 08       		.uleb128 0x8
 3994 08ee 7D000000 		.4byte	0x7d
 3995 08f2 44       		.byte	0x44
 3996 08f3 00       		.byte	0
 3997 08f4 22       		.uleb128 0x22
 3998 08f5 BF070000 		.4byte	.LASF141
 3999 08f9 01       		.byte	0x1
 4000 08fa 2E       		.byte	0x2e
 4001 08fb E4080000 		.4byte	0x8e4
 4002 08ff 05       		.uleb128 0x5
 4003 0900 03       		.byte	0x3
 4004 0901 00000000 		.4byte	buffer
 4005 0905 22       		.uleb128 0x22
 4006 0906 5B030000 		.4byte	.LASF142
 4007 090a 01       		.byte	0x1
 4008 090b 2F       		.byte	0x2f
 4009 090c 68000000 		.4byte	0x68
 4010 0910 05       		.uleb128 0x5
 4011 0911 03       		.byte	0x3
 4012 0912 00000000 		.4byte	quadDec2Count
 4013 0916 22       		.uleb128 0x22
 4014 0917 9B000000 		.4byte	.LASF143
 4015 091b 01       		.byte	0x1
 4016 091c 30       		.byte	0x30
 4017 091d 68000000 		.4byte	0x68
 4018 0921 05       		.uleb128 0x5
 4019 0922 03       		.byte	0x3
 4020 0923 00000000 		.4byte	timerInt
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 86


 4021 0927 22       		.uleb128 0x22
 4022 0928 31060000 		.4byte	.LASF144
 4023 092c 01       		.byte	0x1
 4024 092d 31       		.byte	0x31
 4025 092e 68000000 		.4byte	0x68
 4026 0932 05       		.uleb128 0x5
 4027 0933 03       		.byte	0x3
 4028 0934 00000000 		.4byte	keepLedOn
 4029 0938 22       		.uleb128 0x22
 4030 0939 8D010000 		.4byte	.LASF145
 4031 093d 01       		.byte	0x1
 4032 093e 33       		.byte	0x33
 4033 093f AE000000 		.4byte	0xae
 4034 0943 05       		.uleb128 0x5
 4035 0944 03       		.byte	0x3
 4036 0945 00000000 		.4byte	stopBuffer
 4037 0949 22       		.uleb128 0x22
 4038 094a 4A090000 		.4byte	.LASF146
 4039 094e 01       		.byte	0x1
 4040 094f 34       		.byte	0x34
 4041 0950 A2000000 		.4byte	0xa2
 4042 0954 05       		.uleb128 0x5
 4043 0955 03       		.byte	0x3
 4044 0956 00000000 		.4byte	forwardBuffer
 4045 095a 22       		.uleb128 0x22
 4046 095b 6B080000 		.4byte	.LASF147
 4047 095f 01       		.byte	0x1
 4048 0960 4F       		.byte	0x4f
 4049 0961 EA000000 		.4byte	0xea
 4050 0965 05       		.uleb128 0x5
 4051 0966 03       		.byte	0x3
 4052 0967 00000000 		.4byte	junctionConfiguration
 4053 096b 22       		.uleb128 0x22
 4054 096c A7040000 		.4byte	.LASF148
 4055 0970 01       		.byte	0x1
 4056 0971 50       		.byte	0x50
 4057 0972 96000000 		.4byte	0x96
 4058 0976 05       		.uleb128 0x5
 4059 0977 03       		.byte	0x3
 4060 0978 00000000 		.4byte	currentFoodListIndex
 4061 097c 22       		.uleb128 0x22
 4062 097d BD030000 		.4byte	.LASF149
 4063 0981 01       		.byte	0x1
 4064 0982 52       		.byte	0x52
 4065 0983 D2000000 		.4byte	0xd2
 4066 0987 05       		.uleb128 0x5
 4067 0988 03       		.byte	0x3
 4068 0989 00000000 		.4byte	blockSizeTotal
 4069 098d 22       		.uleb128 0x22
 4070 098e 9E050000 		.4byte	.LASF150
 4071 0992 01       		.byte	0x1
 4072 0993 D1       		.byte	0xd1
 4073 0994 D2000000 		.4byte	0xd2
 4074 0998 05       		.uleb128 0x5
 4075 0999 03       		.byte	0x3
 4076 099a 00000000 		.4byte	xBlocksize
 4077 099e 22       		.uleb128 0x22
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 87


 4078 099f A9050000 		.4byte	.LASF151
 4079 09a3 01       		.byte	0x1
 4080 09a4 D2       		.byte	0xd2
 4081 09a5 D2000000 		.4byte	0xd2
 4082 09a9 05       		.uleb128 0x5
 4083 09aa 03       		.byte	0x3
 4084 09ab 00000000 		.4byte	yBlocksize
 4085 09af 22       		.uleb128 0x22
 4086 09b0 17050000 		.4byte	.LASF152
 4087 09b4 01       		.byte	0x1
 4088 09b5 D3       		.byte	0xd3
 4089 09b6 96000000 		.4byte	0x96
 4090 09ba 05       		.uleb128 0x5
 4091 09bb 03       		.byte	0x3
 4092 09bc 00000000 		.4byte	currentRow
 4093 09c0 22       		.uleb128 0x22
 4094 09c1 23020000 		.4byte	.LASF153
 4095 09c5 01       		.byte	0x1
 4096 09c6 D4       		.byte	0xd4
 4097 09c7 96000000 		.4byte	0x96
 4098 09cb 05       		.uleb128 0x5
 4099 09cc 03       		.byte	0x3
 4100 09cd 00000000 		.4byte	currentCol
 4101 09d1 22       		.uleb128 0x22
 4102 09d2 39090000 		.4byte	.LASF154
 4103 09d6 01       		.byte	0x1
 4104 09d7 D6       		.byte	0xd6
 4105 09d8 96000000 		.4byte	0x96
 4106 09dc 05       		.uleb128 0x5
 4107 09dd 03       		.byte	0x3
 4108 09de 00000000 		.4byte	stoppedAfterTurn
 4109 09e2 22       		.uleb128 0x22
 4110 09e3 B8060000 		.4byte	.LASF155
 4111 09e7 01       		.byte	0x1
 4112 09e8 D7       		.byte	0xd7
 4113 09e9 96000000 		.4byte	0x96
 4114 09ed 05       		.uleb128 0x5
 4115 09ee 03       		.byte	0x3
 4116 09ef 00000000 		.4byte	ignoreSensor
 4117 09f3 22       		.uleb128 0x22
 4118 09f4 1B070000 		.4byte	.LASF156
 4119 09f8 01       		.byte	0x1
 4120 09f9 FF       		.byte	0xff
 4121 09fa 84020000 		.4byte	0x284
 4122 09fe 05       		.uleb128 0x5
 4123 09ff 03       		.byte	0x3
 4124 0a00 00000000 		.4byte	lastDirectionAfter180
 4125 0a04 26       		.uleb128 0x26
 4126 0a05 C1010000 		.4byte	.LASF157
 4127 0a09 01       		.byte	0x1
 4128 0a0a 4101     		.2byte	0x141
 4129 0a0c 96000000 		.4byte	0x96
 4130 0a10 05       		.uleb128 0x5
 4131 0a11 03       		.byte	0x3
 4132 0a12 00000000 		.4byte	firstTurnIteration
 4133 0a16 00       		.byte	0
 4134              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 88


 4135              	.Ldebug_abbrev0:
 4136 0000 01       		.uleb128 0x1
 4137 0001 11       		.uleb128 0x11
 4138 0002 01       		.byte	0x1
 4139 0003 25       		.uleb128 0x25
 4140 0004 0E       		.uleb128 0xe
 4141 0005 13       		.uleb128 0x13
 4142 0006 0B       		.uleb128 0xb
 4143 0007 03       		.uleb128 0x3
 4144 0008 0E       		.uleb128 0xe
 4145 0009 1B       		.uleb128 0x1b
 4146 000a 0E       		.uleb128 0xe
 4147 000b 55       		.uleb128 0x55
 4148 000c 17       		.uleb128 0x17
 4149 000d 11       		.uleb128 0x11
 4150 000e 01       		.uleb128 0x1
 4151 000f 10       		.uleb128 0x10
 4152 0010 17       		.uleb128 0x17
 4153 0011 00       		.byte	0
 4154 0012 00       		.byte	0
 4155 0013 02       		.uleb128 0x2
 4156 0014 24       		.uleb128 0x24
 4157 0015 00       		.byte	0
 4158 0016 0B       		.uleb128 0xb
 4159 0017 0B       		.uleb128 0xb
 4160 0018 3E       		.uleb128 0x3e
 4161 0019 0B       		.uleb128 0xb
 4162 001a 03       		.uleb128 0x3
 4163 001b 0E       		.uleb128 0xe
 4164 001c 00       		.byte	0
 4165 001d 00       		.byte	0
 4166 001e 03       		.uleb128 0x3
 4167 001f 16       		.uleb128 0x16
 4168 0020 00       		.byte	0
 4169 0021 03       		.uleb128 0x3
 4170 0022 0E       		.uleb128 0xe
 4171 0023 3A       		.uleb128 0x3a
 4172 0024 0B       		.uleb128 0xb
 4173 0025 3B       		.uleb128 0x3b
 4174 0026 0B       		.uleb128 0xb
 4175 0027 49       		.uleb128 0x49
 4176 0028 13       		.uleb128 0x13
 4177 0029 00       		.byte	0
 4178 002a 00       		.byte	0
 4179 002b 04       		.uleb128 0x4
 4180 002c 24       		.uleb128 0x24
 4181 002d 00       		.byte	0
 4182 002e 0B       		.uleb128 0xb
 4183 002f 0B       		.uleb128 0xb
 4184 0030 3E       		.uleb128 0x3e
 4185 0031 0B       		.uleb128 0xb
 4186 0032 03       		.uleb128 0x3
 4187 0033 08       		.uleb128 0x8
 4188 0034 00       		.byte	0
 4189 0035 00       		.byte	0
 4190 0036 05       		.uleb128 0x5
 4191 0037 16       		.uleb128 0x16
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 89


 4192 0038 00       		.byte	0
 4193 0039 03       		.uleb128 0x3
 4194 003a 0E       		.uleb128 0xe
 4195 003b 3A       		.uleb128 0x3a
 4196 003c 0B       		.uleb128 0xb
 4197 003d 3B       		.uleb128 0x3b
 4198 003e 05       		.uleb128 0x5
 4199 003f 49       		.uleb128 0x49
 4200 0040 13       		.uleb128 0x13
 4201 0041 00       		.byte	0
 4202 0042 00       		.byte	0
 4203 0043 06       		.uleb128 0x6
 4204 0044 35       		.uleb128 0x35
 4205 0045 00       		.byte	0
 4206 0046 49       		.uleb128 0x49
 4207 0047 13       		.uleb128 0x13
 4208 0048 00       		.byte	0
 4209 0049 00       		.byte	0
 4210 004a 07       		.uleb128 0x7
 4211 004b 01       		.uleb128 0x1
 4212 004c 01       		.byte	0x1
 4213 004d 49       		.uleb128 0x49
 4214 004e 13       		.uleb128 0x13
 4215 004f 01       		.uleb128 0x1
 4216 0050 13       		.uleb128 0x13
 4217 0051 00       		.byte	0
 4218 0052 00       		.byte	0
 4219 0053 08       		.uleb128 0x8
 4220 0054 21       		.uleb128 0x21
 4221 0055 00       		.byte	0
 4222 0056 49       		.uleb128 0x49
 4223 0057 13       		.uleb128 0x13
 4224 0058 2F       		.uleb128 0x2f
 4225 0059 0B       		.uleb128 0xb
 4226 005a 00       		.byte	0
 4227 005b 00       		.byte	0
 4228 005c 09       		.uleb128 0x9
 4229 005d 13       		.uleb128 0x13
 4230 005e 01       		.byte	0x1
 4231 005f 03       		.uleb128 0x3
 4232 0060 0E       		.uleb128 0xe
 4233 0061 0B       		.uleb128 0xb
 4234 0062 0B       		.uleb128 0xb
 4235 0063 3A       		.uleb128 0x3a
 4236 0064 0B       		.uleb128 0xb
 4237 0065 3B       		.uleb128 0x3b
 4238 0066 0B       		.uleb128 0xb
 4239 0067 01       		.uleb128 0x1
 4240 0068 13       		.uleb128 0x13
 4241 0069 00       		.byte	0
 4242 006a 00       		.byte	0
 4243 006b 0A       		.uleb128 0xa
 4244 006c 0D       		.uleb128 0xd
 4245 006d 00       		.byte	0
 4246 006e 03       		.uleb128 0x3
 4247 006f 0E       		.uleb128 0xe
 4248 0070 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 90


 4249 0071 0B       		.uleb128 0xb
 4250 0072 3B       		.uleb128 0x3b
 4251 0073 0B       		.uleb128 0xb
 4252 0074 49       		.uleb128 0x49
 4253 0075 13       		.uleb128 0x13
 4254 0076 38       		.uleb128 0x38
 4255 0077 0B       		.uleb128 0xb
 4256 0078 00       		.byte	0
 4257 0079 00       		.byte	0
 4258 007a 0B       		.uleb128 0xb
 4259 007b 04       		.uleb128 0x4
 4260 007c 01       		.byte	0x1
 4261 007d 03       		.uleb128 0x3
 4262 007e 0E       		.uleb128 0xe
 4263 007f 0B       		.uleb128 0xb
 4264 0080 0B       		.uleb128 0xb
 4265 0081 49       		.uleb128 0x49
 4266 0082 13       		.uleb128 0x13
 4267 0083 3A       		.uleb128 0x3a
 4268 0084 0B       		.uleb128 0xb
 4269 0085 3B       		.uleb128 0x3b
 4270 0086 0B       		.uleb128 0xb
 4271 0087 01       		.uleb128 0x1
 4272 0088 13       		.uleb128 0x13
 4273 0089 00       		.byte	0
 4274 008a 00       		.byte	0
 4275 008b 0C       		.uleb128 0xc
 4276 008c 28       		.uleb128 0x28
 4277 008d 00       		.byte	0
 4278 008e 03       		.uleb128 0x3
 4279 008f 08       		.uleb128 0x8
 4280 0090 1C       		.uleb128 0x1c
 4281 0091 0B       		.uleb128 0xb
 4282 0092 00       		.byte	0
 4283 0093 00       		.byte	0
 4284 0094 0D       		.uleb128 0xd
 4285 0095 28       		.uleb128 0x28
 4286 0096 00       		.byte	0
 4287 0097 03       		.uleb128 0x3
 4288 0098 0E       		.uleb128 0xe
 4289 0099 1C       		.uleb128 0x1c
 4290 009a 0B       		.uleb128 0xb
 4291 009b 00       		.byte	0
 4292 009c 00       		.byte	0
 4293 009d 0E       		.uleb128 0xe
 4294 009e 2E       		.uleb128 0x2e
 4295 009f 01       		.byte	0x1
 4296 00a0 3F       		.uleb128 0x3f
 4297 00a1 19       		.uleb128 0x19
 4298 00a2 03       		.uleb128 0x3
 4299 00a3 0E       		.uleb128 0xe
 4300 00a4 3A       		.uleb128 0x3a
 4301 00a5 0B       		.uleb128 0xb
 4302 00a6 3B       		.uleb128 0x3b
 4303 00a7 0B       		.uleb128 0xb
 4304 00a8 27       		.uleb128 0x27
 4305 00a9 19       		.uleb128 0x19
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 91


 4306 00aa 11       		.uleb128 0x11
 4307 00ab 01       		.uleb128 0x1
 4308 00ac 12       		.uleb128 0x12
 4309 00ad 06       		.uleb128 0x6
 4310 00ae 40       		.uleb128 0x40
 4311 00af 18       		.uleb128 0x18
 4312 00b0 9642     		.uleb128 0x2116
 4313 00b2 19       		.uleb128 0x19
 4314 00b3 01       		.uleb128 0x1
 4315 00b4 13       		.uleb128 0x13
 4316 00b5 00       		.byte	0
 4317 00b6 00       		.byte	0
 4318 00b7 0F       		.uleb128 0xf
 4319 00b8 0B       		.uleb128 0xb
 4320 00b9 01       		.byte	0x1
 4321 00ba 11       		.uleb128 0x11
 4322 00bb 01       		.uleb128 0x1
 4323 00bc 12       		.uleb128 0x12
 4324 00bd 06       		.uleb128 0x6
 4325 00be 00       		.byte	0
 4326 00bf 00       		.byte	0
 4327 00c0 10       		.uleb128 0x10
 4328 00c1 34       		.uleb128 0x34
 4329 00c2 00       		.byte	0
 4330 00c3 03       		.uleb128 0x3
 4331 00c4 0E       		.uleb128 0xe
 4332 00c5 3A       		.uleb128 0x3a
 4333 00c6 0B       		.uleb128 0xb
 4334 00c7 3B       		.uleb128 0x3b
 4335 00c8 0B       		.uleb128 0xb
 4336 00c9 49       		.uleb128 0x49
 4337 00ca 13       		.uleb128 0x13
 4338 00cb 02       		.uleb128 0x2
 4339 00cc 18       		.uleb128 0x18
 4340 00cd 00       		.byte	0
 4341 00ce 00       		.byte	0
 4342 00cf 11       		.uleb128 0x11
 4343 00d0 2E       		.uleb128 0x2e
 4344 00d1 00       		.byte	0
 4345 00d2 3F       		.uleb128 0x3f
 4346 00d3 19       		.uleb128 0x19
 4347 00d4 03       		.uleb128 0x3
 4348 00d5 0E       		.uleb128 0xe
 4349 00d6 3A       		.uleb128 0x3a
 4350 00d7 0B       		.uleb128 0xb
 4351 00d8 3B       		.uleb128 0x3b
 4352 00d9 0B       		.uleb128 0xb
 4353 00da 27       		.uleb128 0x27
 4354 00db 19       		.uleb128 0x19
 4355 00dc 11       		.uleb128 0x11
 4356 00dd 01       		.uleb128 0x1
 4357 00de 12       		.uleb128 0x12
 4358 00df 06       		.uleb128 0x6
 4359 00e0 40       		.uleb128 0x40
 4360 00e1 18       		.uleb128 0x18
 4361 00e2 9742     		.uleb128 0x2117
 4362 00e4 19       		.uleb128 0x19
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 92


 4363 00e5 00       		.byte	0
 4364 00e6 00       		.byte	0
 4365 00e7 12       		.uleb128 0x12
 4366 00e8 2E       		.uleb128 0x2e
 4367 00e9 00       		.byte	0
 4368 00ea 3F       		.uleb128 0x3f
 4369 00eb 19       		.uleb128 0x19
 4370 00ec 03       		.uleb128 0x3
 4371 00ed 0E       		.uleb128 0xe
 4372 00ee 3A       		.uleb128 0x3a
 4373 00ef 0B       		.uleb128 0xb
 4374 00f0 3B       		.uleb128 0x3b
 4375 00f1 0B       		.uleb128 0xb
 4376 00f2 27       		.uleb128 0x27
 4377 00f3 19       		.uleb128 0x19
 4378 00f4 11       		.uleb128 0x11
 4379 00f5 01       		.uleb128 0x1
 4380 00f6 12       		.uleb128 0x12
 4381 00f7 06       		.uleb128 0x6
 4382 00f8 40       		.uleb128 0x40
 4383 00f9 18       		.uleb128 0x18
 4384 00fa 9642     		.uleb128 0x2116
 4385 00fc 19       		.uleb128 0x19
 4386 00fd 00       		.byte	0
 4387 00fe 00       		.byte	0
 4388 00ff 13       		.uleb128 0x13
 4389 0100 2E       		.uleb128 0x2e
 4390 0101 00       		.byte	0
 4391 0102 3F       		.uleb128 0x3f
 4392 0103 19       		.uleb128 0x19
 4393 0104 03       		.uleb128 0x3
 4394 0105 0E       		.uleb128 0xe
 4395 0106 3A       		.uleb128 0x3a
 4396 0107 0B       		.uleb128 0xb
 4397 0108 3B       		.uleb128 0x3b
 4398 0109 0B       		.uleb128 0xb
 4399 010a 49       		.uleb128 0x49
 4400 010b 13       		.uleb128 0x13
 4401 010c 11       		.uleb128 0x11
 4402 010d 01       		.uleb128 0x1
 4403 010e 12       		.uleb128 0x12
 4404 010f 06       		.uleb128 0x6
 4405 0110 40       		.uleb128 0x40
 4406 0111 18       		.uleb128 0x18
 4407 0112 9642     		.uleb128 0x2116
 4408 0114 19       		.uleb128 0x19
 4409 0115 00       		.byte	0
 4410 0116 00       		.byte	0
 4411 0117 14       		.uleb128 0x14
 4412 0118 2E       		.uleb128 0x2e
 4413 0119 01       		.byte	0x1
 4414 011a 3F       		.uleb128 0x3f
 4415 011b 19       		.uleb128 0x19
 4416 011c 03       		.uleb128 0x3
 4417 011d 0E       		.uleb128 0xe
 4418 011e 3A       		.uleb128 0x3a
 4419 011f 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 93


 4420 0120 3B       		.uleb128 0x3b
 4421 0121 0B       		.uleb128 0xb
 4422 0122 27       		.uleb128 0x27
 4423 0123 19       		.uleb128 0x19
 4424 0124 49       		.uleb128 0x49
 4425 0125 13       		.uleb128 0x13
 4426 0126 11       		.uleb128 0x11
 4427 0127 01       		.uleb128 0x1
 4428 0128 12       		.uleb128 0x12
 4429 0129 06       		.uleb128 0x6
 4430 012a 40       		.uleb128 0x40
 4431 012b 18       		.uleb128 0x18
 4432 012c 9642     		.uleb128 0x2116
 4433 012e 19       		.uleb128 0x19
 4434 012f 01       		.uleb128 0x1
 4435 0130 13       		.uleb128 0x13
 4436 0131 00       		.byte	0
 4437 0132 00       		.byte	0
 4438 0133 15       		.uleb128 0x15
 4439 0134 05       		.uleb128 0x5
 4440 0135 00       		.byte	0
 4441 0136 03       		.uleb128 0x3
 4442 0137 0E       		.uleb128 0xe
 4443 0138 3A       		.uleb128 0x3a
 4444 0139 0B       		.uleb128 0xb
 4445 013a 3B       		.uleb128 0x3b
 4446 013b 0B       		.uleb128 0xb
 4447 013c 49       		.uleb128 0x49
 4448 013d 13       		.uleb128 0x13
 4449 013e 02       		.uleb128 0x2
 4450 013f 18       		.uleb128 0x18
 4451 0140 00       		.byte	0
 4452 0141 00       		.byte	0
 4453 0142 16       		.uleb128 0x16
 4454 0143 34       		.uleb128 0x34
 4455 0144 00       		.byte	0
 4456 0145 03       		.uleb128 0x3
 4457 0146 08       		.uleb128 0x8
 4458 0147 3A       		.uleb128 0x3a
 4459 0148 0B       		.uleb128 0xb
 4460 0149 3B       		.uleb128 0x3b
 4461 014a 0B       		.uleb128 0xb
 4462 014b 49       		.uleb128 0x49
 4463 014c 13       		.uleb128 0x13
 4464 014d 02       		.uleb128 0x2
 4465 014e 18       		.uleb128 0x18
 4466 014f 00       		.byte	0
 4467 0150 00       		.byte	0
 4468 0151 17       		.uleb128 0x17
 4469 0152 2E       		.uleb128 0x2e
 4470 0153 00       		.byte	0
 4471 0154 3F       		.uleb128 0x3f
 4472 0155 19       		.uleb128 0x19
 4473 0156 03       		.uleb128 0x3
 4474 0157 0E       		.uleb128 0xe
 4475 0158 3A       		.uleb128 0x3a
 4476 0159 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 94


 4477 015a 3B       		.uleb128 0x3b
 4478 015b 0B       		.uleb128 0xb
 4479 015c 11       		.uleb128 0x11
 4480 015d 01       		.uleb128 0x1
 4481 015e 12       		.uleb128 0x12
 4482 015f 06       		.uleb128 0x6
 4483 0160 40       		.uleb128 0x40
 4484 0161 18       		.uleb128 0x18
 4485 0162 9742     		.uleb128 0x2117
 4486 0164 19       		.uleb128 0x19
 4487 0165 00       		.byte	0
 4488 0166 00       		.byte	0
 4489 0167 18       		.uleb128 0x18
 4490 0168 2E       		.uleb128 0x2e
 4491 0169 00       		.byte	0
 4492 016a 3F       		.uleb128 0x3f
 4493 016b 19       		.uleb128 0x19
 4494 016c 03       		.uleb128 0x3
 4495 016d 0E       		.uleb128 0xe
 4496 016e 3A       		.uleb128 0x3a
 4497 016f 0B       		.uleb128 0xb
 4498 0170 3B       		.uleb128 0x3b
 4499 0171 0B       		.uleb128 0xb
 4500 0172 49       		.uleb128 0x49
 4501 0173 13       		.uleb128 0x13
 4502 0174 11       		.uleb128 0x11
 4503 0175 01       		.uleb128 0x1
 4504 0176 12       		.uleb128 0x12
 4505 0177 06       		.uleb128 0x6
 4506 0178 40       		.uleb128 0x40
 4507 0179 18       		.uleb128 0x18
 4508 017a 9742     		.uleb128 0x2117
 4509 017c 19       		.uleb128 0x19
 4510 017d 00       		.byte	0
 4511 017e 00       		.byte	0
 4512 017f 19       		.uleb128 0x19
 4513 0180 2E       		.uleb128 0x2e
 4514 0181 00       		.byte	0
 4515 0182 3F       		.uleb128 0x3f
 4516 0183 19       		.uleb128 0x19
 4517 0184 03       		.uleb128 0x3
 4518 0185 0E       		.uleb128 0xe
 4519 0186 3A       		.uleb128 0x3a
 4520 0187 0B       		.uleb128 0xb
 4521 0188 3B       		.uleb128 0x3b
 4522 0189 05       		.uleb128 0x5
 4523 018a 49       		.uleb128 0x49
 4524 018b 13       		.uleb128 0x13
 4525 018c 11       		.uleb128 0x11
 4526 018d 01       		.uleb128 0x1
 4527 018e 12       		.uleb128 0x12
 4528 018f 06       		.uleb128 0x6
 4529 0190 40       		.uleb128 0x40
 4530 0191 18       		.uleb128 0x18
 4531 0192 9742     		.uleb128 0x2117
 4532 0194 19       		.uleb128 0x19
 4533 0195 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 95


 4534 0196 00       		.byte	0
 4535 0197 1A       		.uleb128 0x1a
 4536 0198 2E       		.uleb128 0x2e
 4537 0199 01       		.byte	0x1
 4538 019a 3F       		.uleb128 0x3f
 4539 019b 19       		.uleb128 0x19
 4540 019c 03       		.uleb128 0x3
 4541 019d 0E       		.uleb128 0xe
 4542 019e 3A       		.uleb128 0x3a
 4543 019f 0B       		.uleb128 0xb
 4544 01a0 3B       		.uleb128 0x3b
 4545 01a1 05       		.uleb128 0x5
 4546 01a2 49       		.uleb128 0x49
 4547 01a3 13       		.uleb128 0x13
 4548 01a4 11       		.uleb128 0x11
 4549 01a5 01       		.uleb128 0x1
 4550 01a6 12       		.uleb128 0x12
 4551 01a7 06       		.uleb128 0x6
 4552 01a8 40       		.uleb128 0x40
 4553 01a9 18       		.uleb128 0x18
 4554 01aa 9642     		.uleb128 0x2116
 4555 01ac 19       		.uleb128 0x19
 4556 01ad 01       		.uleb128 0x1
 4557 01ae 13       		.uleb128 0x13
 4558 01af 00       		.byte	0
 4559 01b0 00       		.byte	0
 4560 01b1 1B       		.uleb128 0x1b
 4561 01b2 34       		.uleb128 0x34
 4562 01b3 00       		.byte	0
 4563 01b4 03       		.uleb128 0x3
 4564 01b5 0E       		.uleb128 0xe
 4565 01b6 3A       		.uleb128 0x3a
 4566 01b7 0B       		.uleb128 0xb
 4567 01b8 3B       		.uleb128 0x3b
 4568 01b9 05       		.uleb128 0x5
 4569 01ba 49       		.uleb128 0x49
 4570 01bb 13       		.uleb128 0x13
 4571 01bc 02       		.uleb128 0x2
 4572 01bd 18       		.uleb128 0x18
 4573 01be 00       		.byte	0
 4574 01bf 00       		.byte	0
 4575 01c0 1C       		.uleb128 0x1c
 4576 01c1 2E       		.uleb128 0x2e
 4577 01c2 00       		.byte	0
 4578 01c3 3F       		.uleb128 0x3f
 4579 01c4 19       		.uleb128 0x19
 4580 01c5 03       		.uleb128 0x3
 4581 01c6 0E       		.uleb128 0xe
 4582 01c7 3A       		.uleb128 0x3a
 4583 01c8 0B       		.uleb128 0xb
 4584 01c9 3B       		.uleb128 0x3b
 4585 01ca 05       		.uleb128 0x5
 4586 01cb 11       		.uleb128 0x11
 4587 01cc 01       		.uleb128 0x1
 4588 01cd 12       		.uleb128 0x12
 4589 01ce 06       		.uleb128 0x6
 4590 01cf 40       		.uleb128 0x40
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 96


 4591 01d0 18       		.uleb128 0x18
 4592 01d1 9742     		.uleb128 0x2117
 4593 01d3 19       		.uleb128 0x19
 4594 01d4 00       		.byte	0
 4595 01d5 00       		.byte	0
 4596 01d6 1D       		.uleb128 0x1d
 4597 01d7 2E       		.uleb128 0x2e
 4598 01d8 01       		.byte	0x1
 4599 01d9 3F       		.uleb128 0x3f
 4600 01da 19       		.uleb128 0x19
 4601 01db 03       		.uleb128 0x3
 4602 01dc 0E       		.uleb128 0xe
 4603 01dd 3A       		.uleb128 0x3a
 4604 01de 0B       		.uleb128 0xb
 4605 01df 3B       		.uleb128 0x3b
 4606 01e0 05       		.uleb128 0x5
 4607 01e1 49       		.uleb128 0x49
 4608 01e2 13       		.uleb128 0x13
 4609 01e3 11       		.uleb128 0x11
 4610 01e4 01       		.uleb128 0x1
 4611 01e5 12       		.uleb128 0x12
 4612 01e6 06       		.uleb128 0x6
 4613 01e7 40       		.uleb128 0x40
 4614 01e8 18       		.uleb128 0x18
 4615 01e9 9742     		.uleb128 0x2117
 4616 01eb 19       		.uleb128 0x19
 4617 01ec 01       		.uleb128 0x1
 4618 01ed 13       		.uleb128 0x13
 4619 01ee 00       		.byte	0
 4620 01ef 00       		.byte	0
 4621 01f0 1E       		.uleb128 0x1e
 4622 01f1 2E       		.uleb128 0x2e
 4623 01f2 01       		.byte	0x1
 4624 01f3 3F       		.uleb128 0x3f
 4625 01f4 19       		.uleb128 0x19
 4626 01f5 03       		.uleb128 0x3
 4627 01f6 0E       		.uleb128 0xe
 4628 01f7 3A       		.uleb128 0x3a
 4629 01f8 0B       		.uleb128 0xb
 4630 01f9 3B       		.uleb128 0x3b
 4631 01fa 05       		.uleb128 0x5
 4632 01fb 11       		.uleb128 0x11
 4633 01fc 01       		.uleb128 0x1
 4634 01fd 12       		.uleb128 0x12
 4635 01fe 06       		.uleb128 0x6
 4636 01ff 40       		.uleb128 0x40
 4637 0200 18       		.uleb128 0x18
 4638 0201 9642     		.uleb128 0x2116
 4639 0203 19       		.uleb128 0x19
 4640 0204 01       		.uleb128 0x1
 4641 0205 13       		.uleb128 0x13
 4642 0206 00       		.byte	0
 4643 0207 00       		.byte	0
 4644 0208 1F       		.uleb128 0x1f
 4645 0209 2E       		.uleb128 0x2e
 4646 020a 00       		.byte	0
 4647 020b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 97


 4648 020c 19       		.uleb128 0x19
 4649 020d 03       		.uleb128 0x3
 4650 020e 0E       		.uleb128 0xe
 4651 020f 3A       		.uleb128 0x3a
 4652 0210 0B       		.uleb128 0xb
 4653 0211 3B       		.uleb128 0x3b
 4654 0212 05       		.uleb128 0x5
 4655 0213 11       		.uleb128 0x11
 4656 0214 01       		.uleb128 0x1
 4657 0215 12       		.uleb128 0x12
 4658 0216 06       		.uleb128 0x6
 4659 0217 40       		.uleb128 0x40
 4660 0218 18       		.uleb128 0x18
 4661 0219 9642     		.uleb128 0x2116
 4662 021b 19       		.uleb128 0x19
 4663 021c 00       		.byte	0
 4664 021d 00       		.byte	0
 4665 021e 20       		.uleb128 0x20
 4666 021f 34       		.uleb128 0x34
 4667 0220 00       		.byte	0
 4668 0221 03       		.uleb128 0x3
 4669 0222 0E       		.uleb128 0xe
 4670 0223 3A       		.uleb128 0x3a
 4671 0224 0B       		.uleb128 0xb
 4672 0225 3B       		.uleb128 0x3b
 4673 0226 05       		.uleb128 0x5
 4674 0227 49       		.uleb128 0x49
 4675 0228 13       		.uleb128 0x13
 4676 0229 3F       		.uleb128 0x3f
 4677 022a 19       		.uleb128 0x19
 4678 022b 3C       		.uleb128 0x3c
 4679 022c 19       		.uleb128 0x19
 4680 022d 00       		.byte	0
 4681 022e 00       		.byte	0
 4682 022f 21       		.uleb128 0x21
 4683 0230 34       		.uleb128 0x34
 4684 0231 00       		.byte	0
 4685 0232 03       		.uleb128 0x3
 4686 0233 08       		.uleb128 0x8
 4687 0234 3A       		.uleb128 0x3a
 4688 0235 0B       		.uleb128 0xb
 4689 0236 3B       		.uleb128 0x3b
 4690 0237 0B       		.uleb128 0xb
 4691 0238 49       		.uleb128 0x49
 4692 0239 13       		.uleb128 0x13
 4693 023a 3F       		.uleb128 0x3f
 4694 023b 19       		.uleb128 0x19
 4695 023c 02       		.uleb128 0x2
 4696 023d 18       		.uleb128 0x18
 4697 023e 00       		.byte	0
 4698 023f 00       		.byte	0
 4699 0240 22       		.uleb128 0x22
 4700 0241 34       		.uleb128 0x34
 4701 0242 00       		.byte	0
 4702 0243 03       		.uleb128 0x3
 4703 0244 0E       		.uleb128 0xe
 4704 0245 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 98


 4705 0246 0B       		.uleb128 0xb
 4706 0247 3B       		.uleb128 0x3b
 4707 0248 0B       		.uleb128 0xb
 4708 0249 49       		.uleb128 0x49
 4709 024a 13       		.uleb128 0x13
 4710 024b 3F       		.uleb128 0x3f
 4711 024c 19       		.uleb128 0x19
 4712 024d 02       		.uleb128 0x2
 4713 024e 18       		.uleb128 0x18
 4714 024f 00       		.byte	0
 4715 0250 00       		.byte	0
 4716 0251 23       		.uleb128 0x23
 4717 0252 34       		.uleb128 0x34
 4718 0253 00       		.byte	0
 4719 0254 03       		.uleb128 0x3
 4720 0255 08       		.uleb128 0x8
 4721 0256 3A       		.uleb128 0x3a
 4722 0257 0B       		.uleb128 0xb
 4723 0258 3B       		.uleb128 0x3b
 4724 0259 0B       		.uleb128 0xb
 4725 025a 49       		.uleb128 0x49
 4726 025b 13       		.uleb128 0x13
 4727 025c 3F       		.uleb128 0x3f
 4728 025d 19       		.uleb128 0x19
 4729 025e 3C       		.uleb128 0x3c
 4730 025f 19       		.uleb128 0x19
 4731 0260 00       		.byte	0
 4732 0261 00       		.byte	0
 4733 0262 24       		.uleb128 0x24
 4734 0263 34       		.uleb128 0x34
 4735 0264 00       		.byte	0
 4736 0265 03       		.uleb128 0x3
 4737 0266 0E       		.uleb128 0xe
 4738 0267 3A       		.uleb128 0x3a
 4739 0268 0B       		.uleb128 0xb
 4740 0269 3B       		.uleb128 0x3b
 4741 026a 0B       		.uleb128 0xb
 4742 026b 49       		.uleb128 0x49
 4743 026c 13       		.uleb128 0x13
 4744 026d 3F       		.uleb128 0x3f
 4745 026e 19       		.uleb128 0x19
 4746 026f 3C       		.uleb128 0x3c
 4747 0270 19       		.uleb128 0x19
 4748 0271 00       		.byte	0
 4749 0272 00       		.byte	0
 4750 0273 25       		.uleb128 0x25
 4751 0274 0F       		.uleb128 0xf
 4752 0275 00       		.byte	0
 4753 0276 0B       		.uleb128 0xb
 4754 0277 0B       		.uleb128 0xb
 4755 0278 49       		.uleb128 0x49
 4756 0279 13       		.uleb128 0x13
 4757 027a 00       		.byte	0
 4758 027b 00       		.byte	0
 4759 027c 26       		.uleb128 0x26
 4760 027d 34       		.uleb128 0x34
 4761 027e 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 99


 4762 027f 03       		.uleb128 0x3
 4763 0280 0E       		.uleb128 0xe
 4764 0281 3A       		.uleb128 0x3a
 4765 0282 0B       		.uleb128 0xb
 4766 0283 3B       		.uleb128 0x3b
 4767 0284 05       		.uleb128 0x5
 4768 0285 49       		.uleb128 0x49
 4769 0286 13       		.uleb128 0x13
 4770 0287 3F       		.uleb128 0x3f
 4771 0288 19       		.uleb128 0x19
 4772 0289 02       		.uleb128 0x2
 4773 028a 18       		.uleb128 0x18
 4774 028b 00       		.byte	0
 4775 028c 00       		.byte	0
 4776 028d 00       		.byte	0
 4777              		.section	.debug_aranges,"",%progbits
 4778 0000 9C000000 		.4byte	0x9c
 4779 0004 0200     		.2byte	0x2
 4780 0006 00000000 		.4byte	.Ldebug_info0
 4781 000a 04       		.byte	0x4
 4782 000b 00       		.byte	0
 4783 000c 0000     		.2byte	0
 4784 000e 0000     		.2byte	0
 4785 0010 00000000 		.4byte	.LFB64
 4786 0014 EC000000 		.4byte	.LFE64-.LFB64
 4787 0018 00000000 		.4byte	.LFB65
 4788 001c 18000000 		.4byte	.LFE65-.LFB65
 4789 0020 00000000 		.4byte	.LFB66
 4790 0024 18000000 		.4byte	.LFE66-.LFB66
 4791 0028 00000000 		.4byte	.LFB67
 4792 002c 18000000 		.4byte	.LFE67-.LFB67
 4793 0030 00000000 		.4byte	.LFB68
 4794 0034 18000000 		.4byte	.LFE68-.LFB68
 4795 0038 00000000 		.4byte	.LFB69
 4796 003c 70000000 		.4byte	.LFE69-.LFB69
 4797 0040 00000000 		.4byte	.LFB70
 4798 0044 04010000 		.4byte	.LFE70-.LFB70
 4799 0048 00000000 		.4byte	.LFB71
 4800 004c 54000000 		.4byte	.LFE71-.LFB71
 4801 0050 00000000 		.4byte	.LFB72
 4802 0054 34000000 		.4byte	.LFE72-.LFB72
 4803 0058 00000000 		.4byte	.LFB73
 4804 005c 84000000 		.4byte	.LFE73-.LFB73
 4805 0060 00000000 		.4byte	.LFB74
 4806 0064 7C000000 		.4byte	.LFE74-.LFB74
 4807 0068 00000000 		.4byte	.LFB75
 4808 006c 84000000 		.4byte	.LFE75-.LFB75
 4809 0070 00000000 		.4byte	.LFB76
 4810 0074 14070000 		.4byte	.LFE76-.LFB76
 4811 0078 00000000 		.4byte	.LFB77
 4812 007c 68000000 		.4byte	.LFE77-.LFB77
 4813 0080 00000000 		.4byte	.LFB78
 4814 0084 6C000000 		.4byte	.LFE78-.LFB78
 4815 0088 00000000 		.4byte	.LFB79
 4816 008c 3C010000 		.4byte	.LFE79-.LFB79
 4817 0090 00000000 		.4byte	.LFB80
 4818 0094 CC000000 		.4byte	.LFE80-.LFB80
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 100


 4819 0098 00000000 		.4byte	0
 4820 009c 00000000 		.4byte	0
 4821              		.section	.debug_ranges,"",%progbits
 4822              	.Ldebug_ranges0:
 4823 0000 00000000 		.4byte	.LFB64
 4824 0004 EC000000 		.4byte	.LFE64
 4825 0008 00000000 		.4byte	.LFB65
 4826 000c 18000000 		.4byte	.LFE65
 4827 0010 00000000 		.4byte	.LFB66
 4828 0014 18000000 		.4byte	.LFE66
 4829 0018 00000000 		.4byte	.LFB67
 4830 001c 18000000 		.4byte	.LFE67
 4831 0020 00000000 		.4byte	.LFB68
 4832 0024 18000000 		.4byte	.LFE68
 4833 0028 00000000 		.4byte	.LFB69
 4834 002c 70000000 		.4byte	.LFE69
 4835 0030 00000000 		.4byte	.LFB70
 4836 0034 04010000 		.4byte	.LFE70
 4837 0038 00000000 		.4byte	.LFB71
 4838 003c 54000000 		.4byte	.LFE71
 4839 0040 00000000 		.4byte	.LFB72
 4840 0044 34000000 		.4byte	.LFE72
 4841 0048 00000000 		.4byte	.LFB73
 4842 004c 84000000 		.4byte	.LFE73
 4843 0050 00000000 		.4byte	.LFB74
 4844 0054 7C000000 		.4byte	.LFE74
 4845 0058 00000000 		.4byte	.LFB75
 4846 005c 84000000 		.4byte	.LFE75
 4847 0060 00000000 		.4byte	.LFB76
 4848 0064 14070000 		.4byte	.LFE76
 4849 0068 00000000 		.4byte	.LFB77
 4850 006c 68000000 		.4byte	.LFE77
 4851 0070 00000000 		.4byte	.LFB78
 4852 0074 6C000000 		.4byte	.LFE78
 4853 0078 00000000 		.4byte	.LFB79
 4854 007c 3C010000 		.4byte	.LFE79
 4855 0080 00000000 		.4byte	.LFB80
 4856 0084 CC000000 		.4byte	.LFE80
 4857 0088 00000000 		.4byte	0
 4858 008c 00000000 		.4byte	0
 4859              		.section	.debug_line,"",%progbits
 4860              	.Ldebug_line0:
 4861 0000 D7040000 		.section	.debug_str,"MS",%progbits,1
 4861      02007001 
 4861      00000201 
 4861      FB0E0D00 
 4861      01010101 
 4862              	.LASF140:
 4863 0000 746F7461 		.ascii	"totalDistance\000"
 4863      6C446973 
 4863      74616E63 
 4863      6500
 4864              	.LASF41:
 4865 000e 4F726965 		.ascii	"OrientationState\000"
 4865      6E746174 
 4865      696F6E53 
 4865      74617465 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 101


 4865      00
 4866              	.LASF36:
 4867 001f 67325F73 		.ascii	"g2_speed\000"
 4867      70656564 
 4867      00
 4868              	.LASF94:
 4869 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4869      61726455 
 4869      6E74696C 
 4869      54617267 
 4869      65745374 
 4870              	.LASF56:
 4871 0046 526F626F 		.ascii	"RobotMovement\000"
 4871      744D6F76 
 4871      656D656E 
 4871      7400
 4872              	.LASF132:
 4873 0054 70726576 		.ascii	"previousDirection\000"
 4873      696F7573 
 4873      44697265 
 4873      6374696F 
 4873      6E00
 4874              	.LASF103:
 4875 0066 6C696E65 		.ascii	"lineCount\000"
 4875      436F756E 
 4875      7400
 4876              	.LASF114:
 4877 0070 74735F73 		.ascii	"ts_speed\000"
 4877      70656564 
 4877      00
 4878              	.LASF0:
 4879 0079 7369676E 		.ascii	"signed char\000"
 4879      65642063 
 4879      68617200 
 4880              	.LASF69:
 4881 0085 53345F44 		.ascii	"S4_DETECTED\000"
 4881      45544543 
 4881      54454400 
 4882              	.LASF51:
 4883 0091 64697265 		.ascii	"direction\000"
 4883      6374696F 
 4883      6E00
 4884              	.LASF143:
 4885 009b 74696D65 		.ascii	"timerInt\000"
 4885      72496E74 
 4885      00
 4886              	.LASF158:
 4887 00a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4887      43313120 
 4887      352E342E 
 4887      31203230 
 4887      31363036 
 4888 00d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4888      20726576 
 4888      6973696F 
 4888      6E203233 
 4888      37373135 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 102


 4889 010a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4889      66756E63 
 4889      74696F6E 
 4889      2D736563 
 4889      74696F6E 
 4890              	.LASF82:
 4891 0132 626C6F63 		.ascii	"blocksToTarget\000"
 4891      6B73546F 
 4891      54617267 
 4891      657400
 4892              	.LASF29:
 4893 0141 67305F64 		.ascii	"g0_direction\000"
 4893      69726563 
 4893      74696F6E 
 4893      00
 4894              	.LASF127:
 4895 014e 656E7472 		.ascii	"entry\000"
 4895      7900
 4896              	.LASF7:
 4897 0154 6C6F6E67 		.ascii	"long long unsigned int\000"
 4897      206C6F6E 
 4897      6720756E 
 4897      7369676E 
 4897      65642069 
 4898              	.LASF55:
 4899 016b 65787065 		.ascii	"expectedOrientation\000"
 4899      63746564 
 4899      4F726965 
 4899      6E746174 
 4899      696F6E00 
 4900              	.LASF46:
 4901 017f 75547572 		.ascii	"uTurn\000"
 4901      6E00
 4902              	.LASF26:
 4903 0185 67305F78 		.ascii	"g0_xpos\000"
 4903      706F7300 
 4904              	.LASF145:
 4905 018d 73746F70 		.ascii	"stopBuffer\000"
 4905      42756666 
 4905      657200
 4906              	.LASF104:
 4907 0198 6F6E4C69 		.ascii	"onLineFlag\000"
 4907      6E65466C 
 4907      616700
 4908              	.LASF54:
 4909 01a3 64697374 		.ascii	"distanceToTarget\000"
 4909      616E6365 
 4909      546F5461 
 4909      72676574 
 4909      00
 4910              	.LASF48:
 4911 01b4 53746F70 		.ascii	"StopAtTarget\000"
 4911      41745461 
 4911      72676574 
 4911      00
 4912              	.LASF157:
 4913 01c1 66697273 		.ascii	"firstTurnIteration\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 103


 4913      74547572 
 4913      6E497465 
 4913      72617469 
 4913      6F6E00
 4914              	.LASF116:
 4915 01d4 666C6167 		.ascii	"flag_ts_enc\000"
 4915      5F74735F 
 4915      656E6300 
 4916              	.LASF68:
 4917 01e0 53335F44 		.ascii	"S3_DETECTED\000"
 4917      45544543 
 4917      54454400 
 4918              	.LASF122:
 4919 01ec 666C6167 		.ascii	"flag_KB_string\000"
 4919      5F4B425F 
 4919      73747269 
 4919      6E6700
 4920              	.LASF70:
 4921 01fb 53355F44 		.ascii	"S5_DETECTED\000"
 4921      45544543 
 4921      54454400 
 4922              	.LASF98:
 4923 0207 72696768 		.ascii	"rightStatusFlag\000"
 4923      74537461 
 4923      74757346 
 4923      6C616700 
 4924              	.LASF50:
 4925 0217 496E7374 		.ascii	"Instruction\000"
 4925      72756374 
 4925      696F6E00 
 4926              	.LASF153:
 4927 0223 63757272 		.ascii	"currentCol\000"
 4927      656E7443 
 4927      6F6C00
 4928              	.LASF62:
 4929 022e 53746F70 		.ascii	"Stop\000"
 4929      00
 4930              	.LASF4:
 4931 0233 6C6F6E67 		.ascii	"long int\000"
 4931      20696E74 
 4931      00
 4932              	.LASF111:
 4933 023c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4933      52784275 
 4933      66666572 
 4933      00
 4934              	.LASF88:
 4935 0249 636F756E 		.ascii	"count2\000"
 4935      743200
 4936              	.LASF91:
 4937 0250 696E7374 		.ascii	"instructionIndex\000"
 4937      72756374 
 4937      696F6E49 
 4937      6E646578 
 4937      00
 4938              	.LASF77:
 4939 0261 5370696E 		.ascii	"SpinTurnCourseCorrection\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 104


 4939      5475726E 
 4939      436F7572 
 4939      7365436F 
 4939      72726563 
 4940              	.LASF47:
 4941 027a 466F7277 		.ascii	"ForwardUntilTarget\000"
 4941      61726455 
 4941      6E74696C 
 4941      54617267 
 4941      657400
 4942              	.LASF66:
 4943 028d 4261636B 		.ascii	"Backward\000"
 4943      77617264 
 4943      00
 4944              	.LASF14:
 4945 0296 75696E74 		.ascii	"uint8\000"
 4945      3800
 4946              	.LASF6:
 4947 029c 6C6F6E67 		.ascii	"long long int\000"
 4947      206C6F6E 
 4947      6720696E 
 4947      7400
 4948              	.LASF20:
 4949 02aa 646F7562 		.ascii	"double\000"
 4949      6C6500
 4950              	.LASF100:
 4951 02b1 63757272 		.ascii	"currentIgnoreL\000"
 4951      656E7449 
 4951      676E6F72 
 4951      654C00
 4952              	.LASF123:
 4953 02c0 64617461 		.ascii	"dataready_flag\000"
 4953      72656164 
 4953      795F666C 
 4953      616700
 4954              	.LASF73:
 4955 02cf 6D61696E 		.ascii	"main\000"
 4955      00
 4956              	.LASF101:
 4957 02d4 63757272 		.ascii	"currentIgnoreR\000"
 4957      656E7449 
 4957      676E6F72 
 4957      655200
 4958              	.LASF61:
 4959 02e3 41646A75 		.ascii	"AdjustToTheRight\000"
 4959      7374546F 
 4959      54686552 
 4959      69676874 
 4959      00
 4960              	.LASF109:
 4961 02f4 666F7277 		.ascii	"forwardAfterTurnLIgnore\000"
 4961      61726441 
 4961      66746572 
 4961      5475726E 
 4961      4C49676E 
 4962              	.LASF120:
 4963 030c 666C6167 		.ascii	"flag_rx\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 105


 4963      5F727800 
 4964              	.LASF16:
 4965 0314 75696E74 		.ascii	"uint32\000"
 4965      333200
 4966              	.LASF86:
 4967 031b 6E657874 		.ascii	"nextInstruction\000"
 4967      496E7374 
 4967      72756374 
 4967      696F6E00 
 4968              	.LASF162:
 4969 032b 636F756E 		.ascii	"count\000"
 4969      7400
 4970              	.LASF126:
 4971 0331 6C696E65 		.ascii	"line\000"
 4971      00
 4972              	.LASF37:
 4973 0336 67325F64 		.ascii	"g2_direction\000"
 4973      69726563 
 4973      74696F6E 
 4973      00
 4974              	.LASF108:
 4975 0343 646F6E74 		.ascii	"dontOverwriteLeftIgnore\000"
 4975      4F766572 
 4975      77726974 
 4975      654C6566 
 4975      7449676E 
 4976              	.LASF142:
 4977 035b 71756164 		.ascii	"quadDec2Count\000"
 4977      44656332 
 4977      436F756E 
 4977      7400
 4978              	.LASF58:
 4979 0369 5475726E 		.ascii	"TurnRight\000"
 4979      52696768 
 4979      7400
 4980              	.LASF65:
 4981 0373 466F7277 		.ascii	"ForwardAfterTurn\000"
 4981      61726441 
 4981      66746572 
 4981      5475726E 
 4981      00
 4982              	.LASF49:
 4983 0384 64617461 		.ascii	"data_main\000"
 4983      5F6D6169 
 4983      6E00
 4984              	.LASF80:
 4985 038e 626C6F63 		.ascii	"blocksize\000"
 4985      6B73697A 
 4985      6500
 4986              	.LASF112:
 4987 0398 74735F65 		.ascii	"ts_enc\000"
 4987      6E6300
 4988              	.LASF5:
 4989 039f 6C6F6E67 		.ascii	"long unsigned int\000"
 4989      20756E73 
 4989      69676E65 
 4989      6420696E 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 106


 4989      7400
 4990              	.LASF106:
 4991 03b1 746F6F4C 		.ascii	"tooLateFlag\000"
 4991      61746546 
 4991      6C616700 
 4992              	.LASF149:
 4993 03bd 626C6F63 		.ascii	"blockSizeTotal\000"
 4993      6B53697A 
 4993      65546F74 
 4993      616C00
 4994              	.LASF163:
 4995 03cc 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4995      7465436C 
 4995      6F636B77 
 4995      69736531 
 4995      38304465 
 4996              	.LASF64:
 4997 03e6 77616974 		.ascii	"waitForTurn\000"
 4997      466F7254 
 4997      75726E00 
 4998              	.LASF57:
 4999 03f2 466F7277 		.ascii	"Forward\000"
 4999      61726400 
 5000              	.LASF3:
 5001 03fa 73686F72 		.ascii	"short unsigned int\000"
 5001      7420756E 
 5001      7369676E 
 5001      65642069 
 5001      6E7400
 5002              	.LASF107:
 5003 040d 646F6E74 		.ascii	"dontOverwriteRightIgnore\000"
 5003      4F766572 
 5003      77726974 
 5003      65526967 
 5003      68744967 
 5004              	.LASF105:
 5005 0426 746F6F45 		.ascii	"tooEarlyFlag\000"
 5005      61726C79 
 5005      466C6167 
 5005      00
 5006              	.LASF90:
 5007 0433 53657452 		.ascii	"SetRobotMovement\000"
 5007      6F626F74 
 5007      4D6F7665 
 5007      6D656E74 
 5007      00
 5008              	.LASF17:
 5009 0444 696E7438 		.ascii	"int8\000"
 5009      00
 5010              	.LASF78:
 5011 0449 73706565 		.ascii	"speedTimer\000"
 5011      6454696D 
 5011      657200
 5012              	.LASF12:
 5013 0454 5F5F696E 		.ascii	"__int32_t\000"
 5013      7433325F 
 5013      7400
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 107


 5014              	.LASF159:
 5015 045e 6D61696E 		.ascii	"main.c\000"
 5015      2E6300
 5016              	.LASF31:
 5017 0465 67315F79 		.ascii	"g1_ypos\000"
 5017      706F7300 
 5018              	.LASF84:
 5019 046d 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 5019      546F4E65 
 5019      7874496E 
 5019      73747275 
 5019      6374696F 
 5020              	.LASF2:
 5021 0483 73686F72 		.ascii	"short int\000"
 5021      7420696E 
 5021      7400
 5022              	.LASF89:
 5023 048d 71756164 		.ascii	"quadPulseCount\000"
 5023      50756C73 
 5023      65436F75 
 5023      6E7400
 5024              	.LASF115:
 5025 049c 74735F64 		.ascii	"ts_display\000"
 5025      6973706C 
 5025      617900
 5026              	.LASF148:
 5027 04a7 63757272 		.ascii	"currentFoodListIndex\000"
 5027      656E7446 
 5027      6F6F644C 
 5027      69737449 
 5027      6E646578 
 5028              	.LASF75:
 5029 04bc 466F7277 		.ascii	"ForwardCourseCorrection\000"
 5029      61726443 
 5029      6F757273 
 5029      65436F72 
 5029      72656374 
 5030              	.LASF121:
 5031 04d4 666C6167 		.ascii	"flag_packet\000"
 5031      5F706163 
 5031      6B657400 
 5032              	.LASF118:
 5033 04e0 666C6167 		.ascii	"flag_ts_speed\000"
 5033      5F74735F 
 5033      73706565 
 5033      6400
 5034              	.LASF32:
 5035 04ee 67315F73 		.ascii	"g1_speed\000"
 5035      70656564 
 5035      00
 5036              	.LASF39:
 5037 04f7 4C656674 		.ascii	"Left\000"
 5037      00
 5038              	.LASF96:
 5039 04fc 75547572 		.ascii	"uTurnFinishedFlag\000"
 5039      6E46696E 
 5039      69736865 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 108


 5039      64466C61 
 5039      6700
 5040              	.LASF10:
 5041 050e 73697A65 		.ascii	"sizetype\000"
 5041      74797065 
 5041      00
 5042              	.LASF152:
 5043 0517 63757272 		.ascii	"currentRow\000"
 5043      656E7452 
 5043      6F7700
 5044              	.LASF129:
 5045 0522 73797374 		.ascii	"system_state\000"
 5045      656D5F73 
 5045      74617465 
 5045      00
 5046              	.LASF33:
 5047 052f 67315F64 		.ascii	"g1_direction\000"
 5047      69726563 
 5047      74696F6E 
 5047      00
 5048              	.LASF128:
 5049 053c 75736242 		.ascii	"usbBuffer\000"
 5049      75666665 
 5049      7200
 5050              	.LASF44:
 5051 0546 77616974 		.ascii	"waitForLeftTurn\000"
 5051      466F724C 
 5051      65667454 
 5051      75726E00 
 5052              	.LASF30:
 5053 0556 67315F78 		.ascii	"g1_xpos\000"
 5053      706F7300 
 5054              	.LASF35:
 5055 055e 67325F79 		.ascii	"g2_ypos\000"
 5055      706F7300 
 5056              	.LASF99:
 5057 0566 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 5057      436F7572 
 5057      7365436F 
 5057      72726563 
 5057      74696F6E 
 5058              	.LASF124:
 5059 0582 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5059      5F72665F 
 5059      7472616E 
 5059      736D6973 
 5059      73696F6E 
 5060              	.LASF150:
 5061 059e 78426C6F 		.ascii	"xBlocksize\000"
 5061      636B7369 
 5061      7A6500
 5062              	.LASF151:
 5063 05a9 79426C6F 		.ascii	"yBlocksize\000"
 5063      636B7369 
 5063      7A6500
 5064              	.LASF19:
 5065 05b4 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 109


 5065      7400
 5066              	.LASF160:
 5067 05ba 483A5C47 		.ascii	"H:\\GitHub\\301-Robot\\psoc student pack\\psoc_code"
 5067      69744875 
 5067      625C3330 
 5067      312D526F 
 5067      626F745C 
 5068 05e9 5F626173 		.ascii	"_base\\CS301_Class.cydsn\000"
 5068      655C4353 
 5068      3330315F 
 5068      436C6173 
 5068      732E6379 
 5069              	.LASF139:
 5070 0601 746F7461 		.ascii	"totalMilliseconds\000"
 5070      6C4D696C 
 5070      6C697365 
 5070      636F6E64 
 5070      7300
 5071              	.LASF63:
 5072 0613 556E6B6E 		.ascii	"Unknown\000"
 5072      6F776E00 
 5073              	.LASF85:
 5074 061b 47657449 		.ascii	"GetInstructionAtIndex\000"
 5074      6E737472 
 5074      75637469 
 5074      6F6E4174 
 5074      496E6465 
 5075              	.LASF144:
 5076 0631 6B656570 		.ascii	"keepLedOn\000"
 5076      4C65644F 
 5076      6E00
 5077              	.LASF113:
 5078 063b 74735F75 		.ascii	"ts_update\000"
 5078      70646174 
 5078      6500
 5079              	.LASF95:
 5080 0645 75547572 		.ascii	"uTurnStartedFlag\000"
 5080      6E537461 
 5080      72746564 
 5080      466C6167 
 5080      00
 5081              	.LASF13:
 5082 0656 696E7433 		.ascii	"int32_t\000"
 5082      325F7400 
 5083              	.LASF1:
 5084 065e 756E7369 		.ascii	"unsigned char\000"
 5084      676E6564 
 5084      20636861 
 5084      7200
 5085              	.LASF15:
 5086 066c 75696E74 		.ascii	"uint16\000"
 5086      313600
 5087              	.LASF42:
 5088 0673 496E7374 		.ascii	"InstructionDirection\000"
 5088      72756374 
 5088      696F6E44 
 5088      69726563 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 110


 5088      74696F6E 
 5089              	.LASF34:
 5090 0688 67325F78 		.ascii	"g2_xpos\000"
 5090      706F7300 
 5091              	.LASF136:
 5092 0690 70726576 		.ascii	"previousInstruction\000"
 5092      696F7573 
 5092      496E7374 
 5092      72756374 
 5092      696F6E00 
 5093              	.LASF134:
 5094 06a4 70726576 		.ascii	"previousOrientation\000"
 5094      696F7573 
 5094      4F726965 
 5094      6E746174 
 5094      696F6E00 
 5095              	.LASF155:
 5096 06b8 69676E6F 		.ascii	"ignoreSensor\000"
 5096      72655365 
 5096      6E736F72 
 5096      00
 5097              	.LASF97:
 5098 06c5 6C656674 		.ascii	"leftStatusFlag\000"
 5098      53746174 
 5098      7573466C 
 5098      616700
 5099              	.LASF81:
 5100 06d4 63757272 		.ascii	"currentInstructionDirection\000"
 5100      656E7449 
 5100      6E737472 
 5100      75637469 
 5100      6F6E4469 
 5101              	.LASF24:
 5102 06f0 726F626F 		.ascii	"robot_ypos\000"
 5102      745F7970 
 5102      6F7300
 5103              	.LASF60:
 5104 06fb 41646A75 		.ascii	"AdjustToTheLeft\000"
 5104      7374546F 
 5104      5468654C 
 5104      65667400 
 5105              	.LASF43:
 5106 070b 476F466F 		.ascii	"GoForward\000"
 5106      72776172 
 5106      6400
 5107              	.LASF40:
 5108 0715 52696768 		.ascii	"Right\000"
 5108      7400
 5109              	.LASF156:
 5110 071b 6C617374 		.ascii	"lastDirectionAfter180\000"
 5110      44697265 
 5110      6374696F 
 5110      6E416674 
 5110      65723138 
 5111              	.LASF137:
 5112 0731 6E756D53 		.ascii	"numSteps\000"
 5112      74657073 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 111


 5112      00
 5113              	.LASF76:
 5114 073a 5370696E 		.ascii	"SpinCourseCorrection\000"
 5114      436F7572 
 5114      7365436F 
 5114      72726563 
 5114      74696F6E 
 5115              	.LASF119:
 5116 074f 666C6167 		.ascii	"flag_ts_display\000"
 5116      5F74735F 
 5116      64697370 
 5116      6C617900 
 5117              	.LASF74:
 5118 075f 6E657744 		.ascii	"newDistance\000"
 5118      69737461 
 5118      6E636500 
 5119              	.LASF9:
 5120 076b 6C6F6E67 		.ascii	"long double\000"
 5120      20646F75 
 5120      626C6500 
 5121              	.LASF11:
 5122 0777 63686172 		.ascii	"char\000"
 5122      00
 5123              	.LASF27:
 5124 077c 67305F79 		.ascii	"g0_ypos\000"
 5124      706F7300 
 5125              	.LASF67:
 5126 0784 5370696E 		.ascii	"Spin180\000"
 5126      31383000 
 5127              	.LASF8:
 5128 078c 756E7369 		.ascii	"unsigned int\000"
 5128      676E6564 
 5128      20696E74 
 5128      00
 5129              	.LASF21:
 5130 0799 72737369 		.ascii	"rssi\000"
 5130      00
 5131              	.LASF22:
 5132 079e 696E6465 		.ascii	"index\000"
 5132      7800
 5133              	.LASF71:
 5134 07a4 53365F44 		.ascii	"S6_DETECTED\000"
 5134      45544543 
 5134      54454400 
 5135              	.LASF130:
 5136 07b0 666F6F64 		.ascii	"food_list\000"
 5136      5F6C6973 
 5136      7400
 5137              	.LASF38:
 5138 07ba 446F776E 		.ascii	"Down\000"
 5138      00
 5139              	.LASF141:
 5140 07bf 62756666 		.ascii	"buffer\000"
 5140      657200
 5141              	.LASF117:
 5142 07c6 666C6167 		.ascii	"flag_ts_update\000"
 5142      5F74735F 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 112


 5142      75706461 
 5142      746500
 5143              	.LASF125:
 5144 07d5 64697370 		.ascii	"displaystring\000"
 5144      6C617973 
 5144      7472696E 
 5144      6700
 5145              	.LASF23:
 5146 07e3 726F626F 		.ascii	"robot_xpos\000"
 5146      745F7870 
 5146      6F7300
 5147              	.LASF133:
 5148 07ee 63757272 		.ascii	"currentRobotOrientation\000"
 5148      656E7452 
 5148      6F626F74 
 5148      4F726965 
 5148      6E746174 
 5149              	.LASF131:
 5150 0806 63757272 		.ascii	"currentDirection\000"
 5150      656E7444 
 5150      69726563 
 5150      74696F6E 
 5150      00
 5151              	.LASF79:
 5152 0817 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 5152      6F76656D 
 5152      656E7441 
 5152      63636F72 
 5152      64696E67 
 5153              	.LASF93:
 5154 0839 7475726E 		.ascii	"turnFinishedFlag\000"
 5154      46696E69 
 5154      73686564 
 5154      466C6167 
 5154      00
 5155              	.LASF138:
 5156 084a 696E7374 		.ascii	"instructionList\000"
 5156      72756374 
 5156      696F6E4C 
 5156      69737400 
 5157              	.LASF45:
 5158 085a 77616974 		.ascii	"waitForRightTurn\000"
 5158      466F7252 
 5158      69676874 
 5158      5475726E 
 5158      00
 5159              	.LASF147:
 5160 086b 6A756E63 		.ascii	"junctionConfiguration\000"
 5160      74696F6E 
 5160      436F6E66 
 5160      69677572 
 5160      6174696F 
 5161              	.LASF135:
 5162 0881 63757272 		.ascii	"currentInstruction\000"
 5162      656E7449 
 5162      6E737472 
 5162      75637469 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 113


 5162      6F6E00
 5163              	.LASF102:
 5164 0894 746F7461 		.ascii	"totalLineCount\000"
 5164      6C4C696E 
 5164      65436F75 
 5164      6E7400
 5165              	.LASF87:
 5166 08a3 636F756E 		.ascii	"count1\000"
 5166      743100
 5167              	.LASF72:
 5168 08aa 54494D45 		.ascii	"TIMER_FINISH\000"
 5168      525F4649 
 5168      4E495348 
 5168      00
 5169              	.LASF83:
 5170 08b7 52657365 		.ascii	"ResetSensorFlags\000"
 5170      7453656E 
 5170      736F7246 
 5170      6C616773 
 5170      00
 5171              	.LASF18:
 5172 08c8 696E7431 		.ascii	"int16\000"
 5172      3600
 5173              	.LASF161:
 5174 08ce 71756164 		.ascii	"quadCountToRPM\000"
 5174      436F756E 
 5174      74546F52 
 5174      504D00
 5175              	.LASF52:
 5176 08dd 69676E6F 		.ascii	"ignoreL\000"
 5176      72654C00 
 5177              	.LASF59:
 5178 08e5 5475726E 		.ascii	"TurnLeft\000"
 5178      4C656674 
 5178      00
 5179              	.LASF53:
 5180 08ee 69676E6F 		.ascii	"ignoreR\000"
 5180      72655200 
 5181              	.LASF92:
 5182 08f6 7475726E 		.ascii	"turnStartedFlag\000"
 5182      53746172 
 5182      74656446 
 5182      6C616700 
 5183              	.LASF28:
 5184 0906 67305F73 		.ascii	"g0_speed\000"
 5184      70656564 
 5184      00
 5185              	.LASF110:
 5186 090f 666F7277 		.ascii	"forwardAfterTurnRIgnore\000"
 5186      61726441 
 5186      66746572 
 5186      5475726E 
 5186      5249676E 
 5187              	.LASF25:
 5188 0927 726F626F 		.ascii	"robot_orientation\000"
 5188      745F6F72 
 5188      69656E74 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccuqUXZ2.s 			page 114


 5188      6174696F 
 5188      6E00
 5189              	.LASF154:
 5190 0939 73746F70 		.ascii	"stoppedAfterTurn\000"
 5190      70656441 
 5190      66746572 
 5190      5475726E 
 5190      00
 5191              	.LASF146:
 5192 094a 666F7277 		.ascii	"forwardBuffer\000"
 5192      61726442 
 5192      75666665 
 5192      7200
 5193              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
