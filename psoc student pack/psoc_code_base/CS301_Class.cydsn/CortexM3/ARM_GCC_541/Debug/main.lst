ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 03       		.byte	3
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 03       		.byte	3
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Right;
  46:main.c        **** enum OrientationState previousOrientation = Right;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** enum DirectionState RecheckPosition();
  49:main.c        **** // --- YIPPE
  50:main.c        **** // ----------------------------------------
  51:main.c        **** uint8 s3 = 0;
  52:main.c        **** uint8 s4 = 0;
  53:main.c        **** uint8 s5 = 0;
  54:main.c        **** uint8 s6 = 0;
  55:main.c        **** //* ========================================
  56:main.c        **** // Calculating Distance
  57:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  58:main.c        **** 
  59:main.c        **** uint32 totalMilliseconds = 0;
  60:main.c        **** float totalDistance = 0; // in mm
  61:main.c        **** //* ========================================
  62:main.c        **** char buffer[69];
  63:main.c        **** int quadDec2Count = 0;
  64:main.c        **** int timerInt = 0;
  65:main.c        **** int keepLedOn = 0;
  66:main.c        **** uint32 stopBuffer = 0;
  67:main.c        **** 
  68:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  69:main.c        **** 
  70:main.c        **** CY_ISR (speedTimer) {
 200              		.loc 1 70 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 6


 209 0002 83B0     		sub	sp, sp, #12
 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  71:main.c        ****     timerInt = 1;
 213              		.loc 1 71 0
 214 0006 364B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  72:main.c        ****     //quadDec_M1 used for turning macros
  73:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 73 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 334B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  74:main.c        ****     
  75:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 75 0
 224 0018 334B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 17D0     		beq	.L2
  76:main.c        ****         currentDirection == waitForTurn || 
 228              		.loc 1 76 0 discriminator 1
 229 0020 314B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForTurn || 
 231              		.loc 1 75 0 discriminator 1
 232 0024 072B     		cmp	r3, #7
 233 0026 13D0     		beq	.L2
  77:main.c        ****         currentDirection == waitForLeftTurn ||
 234              		.loc 1 77 0
 235 0028 2F4B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == waitForTurn || 
 237              		.loc 1 76 0
 238 002c 092B     		cmp	r3, #9
 239 002e 0FD0     		beq	.L2
  78:main.c        ****         currentDirection == waitForRightTurn ||
 240              		.loc 1 78 0
 241 0030 2D4B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == waitForLeftTurn ||
 243              		.loc 1 77 0
 244 0034 082B     		cmp	r3, #8
 245 0036 0BD0     		beq	.L2
  79:main.c        ****         currentDirection == ForwardAfterTurn ||
 246              		.loc 1 79 0
 247 0038 2B4B     		ldr	r3, .L4+24
 248 003a 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == waitForRightTurn ||
 249              		.loc 1 78 0
 250 003c 0A2B     		cmp	r3, #10
 251 003e 07D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheLeft ||
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 7


 252              		.loc 1 80 0
 253 0040 294B     		ldr	r3, .L4+24
 254 0042 1B68     		ldr	r3, [r3]
  79:main.c        ****         currentDirection == ForwardAfterTurn ||
 255              		.loc 1 79 0
 256 0044 032B     		cmp	r3, #3
 257 0046 03D0     		beq	.L2
  81:main.c        ****         currentDirection == AdjustToTheRight) &&
 258              		.loc 1 81 0
 259 0048 274B     		ldr	r3, .L4+24
 260 004a 1B68     		ldr	r3, [r3]
  80:main.c        ****         currentDirection == AdjustToTheLeft ||
 261              		.loc 1 80 0
 262 004c 042B     		cmp	r3, #4
 263 004e 34D1     		bne	.L3
 264              	.L2:
  82:main.c        ****         quadDec2Count != 0) {
 265              		.loc 1 82 0
 266 0050 244B     		ldr	r3, .L4+20
 267 0052 1B68     		ldr	r3, [r3]
  81:main.c        ****         currentDirection == AdjustToTheRight) &&
 268              		.loc 1 81 0
 269 0054 002B     		cmp	r3, #0
 270 0056 30D0     		beq	.L3
 271              	.LBB2:
  83:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  84:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 272              		.loc 1 84 0
 273 0058 224B     		ldr	r3, .L4+20
 274 005a 1B68     		ldr	r3, [r3]
 275 005c 002B     		cmp	r3, #0
 276 005e B8BF     		it	lt
 277 0060 5B42     		rsblt	r3, r3, #0
 278 0062 1846     		mov	r0, r3
 279 0064 FFF7FEFF 		bl	__aeabi_i2d
 280 0068 19A3     		adr	r3, .L4
 281 006a D3E90023 		ldrd	r2, [r3]
 282 006e FFF7FEFF 		bl	__aeabi_dmul
 283 0072 0346     		mov	r3, r0
 284 0074 0C46     		mov	r4, r1
 285 0076 1846     		mov	r0, r3
 286 0078 2146     		mov	r1, r4
 287 007a 17A3     		adr	r3, .L4+8
 288 007c D3E90023 		ldrd	r2, [r3]
 289 0080 FFF7FEFF 		bl	__aeabi_dmul
 290 0084 0346     		mov	r3, r0
 291 0086 0C46     		mov	r4, r1
 292 0088 1846     		mov	r0, r3
 293 008a 2146     		mov	r1, r4
 294 008c 4FF00002 		mov	r2, #0
 295 0090 164B     		ldr	r3, .L4+28
 296 0092 FFF7FEFF 		bl	__aeabi_ddiv
 297 0096 0346     		mov	r3, r0
 298 0098 0C46     		mov	r4, r1
 299 009a 1846     		mov	r0, r3
 300 009c 2146     		mov	r1, r4
 301 009e FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 8


 302 00a2 0346     		mov	r3, r0
 303 00a4 7B60     		str	r3, [r7, #4]	@ float
  85:main.c        ****         
  86:main.c        ****         totalDistance = totalDistance + newDistance;
 304              		.loc 1 86 0
 305 00a6 124B     		ldr	r3, .L4+32
 306 00a8 1B68     		ldr	r3, [r3]	@ float
 307 00aa 7968     		ldr	r1, [r7, #4]	@ float
 308 00ac 1846     		mov	r0, r3
 309 00ae FFF7FEFF 		bl	__aeabi_fadd
 310 00b2 0346     		mov	r3, r0
 311 00b4 1A46     		mov	r2, r3
 312 00b6 0E4B     		ldr	r3, .L4+32
 313 00b8 1A60     		str	r2, [r3]	@ float
 314              	.L3:
 315              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     
  89:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 316              		.loc 1 89 0
 317 00ba 0020     		movs	r0, #0
 318 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  90:main.c        ****     QuadDec_M2_Start(); // restart counter
 319              		.loc 1 90 0
 320 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        ****     
  92:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 321              		.loc 1 92 0
 322 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  93:main.c        **** }
 323              		.loc 1 93 0
 324 00c8 00BF     		nop
 325 00ca 0C37     		adds	r7, r7, #12
 326              		.cfi_def_cfa_offset 12
 327 00cc BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 00ce 90BD     		pop	{r4, r7, pc}
 331              	.L5:
 332              		.align	3
 333              	.L4:
 334 00d0 182D4454 		.word	1413754136
 335 00d4 FB210940 		.word	1074340347
 336 00d8 00000000 		.word	0
 337 00dc 00205040 		.word	1078992896
 338 00e0 00000000 		.word	timerInt
 339 00e4 00000000 		.word	quadDec2Count
 340 00e8 00000000 		.word	currentDirection
 341 00ec 00806C40 		.word	1080852480
 342 00f0 00000000 		.word	totalDistance
 343              		.cfi_endproc
 344              	.LFE64:
 345              		.size	speedTimer, .-speedTimer
 346              		.section	.text.S3_DETECTED,"ax",%progbits
 347              		.align	2
 348              		.global	S3_DETECTED
 349              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 9


 350              		.thumb_func
 351              		.type	S3_DETECTED, %function
 352              	S3_DETECTED:
 353              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 354              		.loc 1 95 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359 0000 80B4     		push	{r7}
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 7, -4
 362 0002 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 364              		.loc 1 97 0
 365 0004 034B     		ldr	r3, .L7
 366 0006 0122     		movs	r2, #1
 367 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 368              		.loc 1 99 0
 369 000a 00BF     		nop
 370 000c BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 000e 80BC     		pop	{r7}
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0010 7047     		bx	lr
 377              	.L8:
 378 0012 00BF     		.align	2
 379              	.L7:
 380 0014 00000000 		.word	s3
 381              		.cfi_endproc
 382              	.LFE65:
 383              		.size	S3_DETECTED, .-S3_DETECTED
 384              		.section	.text.S4_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S4_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S4_DETECTED, %function
 390              	S4_DETECTED:
 391              	.LFB66:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 392              		.loc 1 101 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 10


 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 402              		.loc 1 103 0
 403 0004 034B     		ldr	r3, .L10
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 406              		.loc 1 105 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L11:
 416 0012 00BF     		.align	2
 417              	.L10:
 418 0014 00000000 		.word	s4
 419              		.cfi_endproc
 420              	.LFE66:
 421              		.size	S4_DETECTED, .-S4_DETECTED
 422              		.section	.text.S5_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S5_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S5_DETECTED, %function
 428              	S5_DETECTED:
 429              	.LFB67:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 430              		.loc 1 107 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 440              		.loc 1 109 0
 441 0004 034B     		ldr	r3, .L13
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 444              		.loc 1 111 0
 445 000a 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 11


 446 000c BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L14:
 454 0012 00BF     		.align	2
 455              	.L13:
 456 0014 00000000 		.word	s5
 457              		.cfi_endproc
 458              	.LFE67:
 459              		.size	S5_DETECTED, .-S5_DETECTED
 460              		.section	.text.S6_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S6_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S6_DETECTED, %function
 466              	S6_DETECTED:
 467              	.LFB68:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 468              		.loc 1 113 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 478              		.loc 1 115 0
 479 0004 034B     		ldr	r3, .L16
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
 482              		.loc 1 117 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
 490 0010 7047     		bx	lr
 491              	.L17:
 492 0012 00BF     		.align	2
 493              	.L16:
 494 0014 00000000 		.word	s6
 495              		.cfi_endproc
 496              	.LFE68:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 12


 497              		.size	S6_DETECTED, .-S6_DETECTED
 498              		.section	.text.TIMER_FINISH,"ax",%progbits
 499              		.align	2
 500              		.global	TIMER_FINISH
 501              		.thumb
 502              		.thumb_func
 503              		.type	TIMER_FINISH, %function
 504              	TIMER_FINISH:
 505              	.LFB69:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 506              		.loc 1 119 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 120:main.c        ****     if (currentDirection == Stop) {
 516              		.loc 1 120 0
 517 0004 0A4B     		ldr	r3, .L21
 518 0006 1B68     		ldr	r3, [r3]
 519 0008 052B     		cmp	r3, #5
 520 000a 05D1     		bne	.L19
 121:main.c        ****         stopBuffer = stopBuffer + 1;
 521              		.loc 1 121 0
 522 000c 094B     		ldr	r3, .L21+4
 523 000e 1B68     		ldr	r3, [r3]
 524 0010 0133     		adds	r3, r3, #1
 525 0012 084A     		ldr	r2, .L21+4
 526 0014 1360     		str	r3, [r2]
 527 0016 02E0     		b	.L20
 528              	.L19:
 122:main.c        ****     } else {
 123:main.c        ****         stopBuffer = 0;
 529              		.loc 1 123 0
 530 0018 064B     		ldr	r3, .L21+4
 531 001a 0022     		movs	r2, #0
 532 001c 1A60     		str	r2, [r3]
 533              	.L20:
 124:main.c        ****     }
 125:main.c        ****     SetRobotMovement(); 
 534              		.loc 1 125 0
 535 001e FFF7FEFF 		bl	SetRobotMovement
 126:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 536              		.loc 1 126 0
 537 0022 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     Timer_LED_ReadStatusRegister();
 538              		.loc 1 127 0
 539 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 128:main.c        **** }
 540              		.loc 1 128 0
 541 002a 00BF     		nop
 542 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 13


 543              	.L22:
 544 002e 00BF     		.align	2
 545              	.L21:
 546 0030 00000000 		.word	currentDirection
 547 0034 00000000 		.word	stopBuffer
 548              		.cfi_endproc
 549              	.LFE69:
 550              		.size	TIMER_FINISH, .-TIMER_FINISH
 551              		.section	.text.main,"ax",%progbits
 552              		.align	2
 553              		.global	main
 554              		.thumb
 555              		.thumb_func
 556              		.type	main, %function
 557              	main:
 558              	.LFB70:
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** int main()
 132:main.c        **** {
 559              		.loc 1 132 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 133:main.c        **** // ----- INITIALIZATIONS ----------
 134:main.c        ****     CYGlobalIntEnable;
 569              		.loc 1 134 0
 570              		.syntax unified
 571              	@ 134 "main.c" 1
 572 0004 62B6     		CPSIE   i
 573              	@ 0 "" 2
 135:main.c        ****     ResetSensorFlags();
 574              		.loc 1 135 0
 575              		.thumb
 576              		.syntax unified
 577 0006 FFF7FEFF 		bl	ResetSensorFlags
 136:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 578              		.loc 1 136 0
 579 000a FFF7FEFF 		bl	init
 137:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 580              		.loc 1 137 0
 581 000e 1A48     		ldr	r0, .L27
 582 0010 FFF7FEFF 		bl	isr_speed_StartEx
 138:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 583              		.loc 1 138 0
 584 0014 1948     		ldr	r0, .L27+4
 585 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 139:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 586              		.loc 1 139 0
 587 001a 1948     		ldr	r0, .L27+8
 588 001c FFF7FEFF 		bl	S3_detected_StartEx
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 14


 140:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 589              		.loc 1 140 0
 590 0020 1848     		ldr	r0, .L27+12
 591 0022 FFF7FEFF 		bl	S4_detected_StartEx
 141:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 592              		.loc 1 141 0
 593 0026 1848     		ldr	r0, .L27+16
 594 0028 FFF7FEFF 		bl	S5_detected_StartEx
 142:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 595              		.loc 1 142 0
 596 002c 1748     		ldr	r0, .L27+20
 597 002e FFF7FEFF 		bl	S6_detected_StartEx
 143:main.c        ****     Timer_LED_Start();
 598              		.loc 1 143 0
 599 0032 FFF7FEFF 		bl	Timer_LED_Start
 144:main.c        **** 
 145:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
 600              		.loc 1 145 0
 601 0036 1648     		ldr	r0, .L27+24
 602 0038 FFF7FEFF 		bl	findPath
 146:main.c        ****     GetNextStep();
 603              		.loc 1 146 0
 604 003c FFF7FEFF 		bl	GetNextStep
 147:main.c        **** 
 148:main.c        **** // ------USB SETUP ----------------    
 149:main.c        **** #ifdef USE_USB    
 150:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 605              		.loc 1 150 0
 606 0040 0121     		movs	r1, #1
 607 0042 0020     		movs	r0, #0
 608 0044 FFF7FEFF 		bl	USBUART_Start
 151:main.c        **** #endif        
 152:main.c        ****     RF_BT_SELECT_Write(0);
 609              		.loc 1 152 0
 610 0048 0020     		movs	r0, #0
 611 004a FFF7FEFF 		bl	RF_BT_SELECT_Write
 612              	.L26:
 153:main.c        ****     
 154:main.c        ****     //usbPutString("Initialised UART");
 155:main.c        ****     for(;;)
 156:main.c        ****     {
 157:main.c        ****         if(timerInt == 1) {
 613              		.loc 1 157 0
 614 004e 114B     		ldr	r3, .L27+28
 615 0050 1B68     		ldr	r3, [r3]
 616 0052 012B     		cmp	r3, #1
 617 0054 08D1     		bne	.L24
 158:main.c        ****             timerInt = 0;
 618              		.loc 1 158 0
 619 0056 0F4B     		ldr	r3, .L27+28
 620 0058 0022     		movs	r2, #0
 621 005a 1A60     		str	r2, [r3]
 159:main.c        ****             // calculate RPM of M2
 160:main.c        ****             quadCountToRPM(quadDec2Count);
 622              		.loc 1 160 0
 623 005c 0E4B     		ldr	r3, .L27+32
 624 005e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 15


 625 0060 9BB2     		uxth	r3, r3
 626 0062 1846     		mov	r0, r3
 627 0064 FFF7FEFF 		bl	quadCountToRPM
 628              	.L24:
 161:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 162:main.c        ****             //usbPutString(buffer);
 163:main.c        ****             //usbPutString(" ");
 164:main.c        ****         }
 165:main.c        ****         //handle_usb();
 166:main.c        ****         if (flag_KB_string == 1)
 629              		.loc 1 166 0
 630 0068 0C4B     		ldr	r3, .L27+36
 631 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 632 006c 012B     		cmp	r3, #1
 633 006e EED1     		bne	.L26
 167:main.c        ****         {
 168:main.c        ****             //usbPutString("Total Distance: ");
 169:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 170:main.c        ****             //usbPutString(buffer);
 171:main.c        ****             flag_KB_string = 0;
 634              		.loc 1 171 0
 635 0070 0A4B     		ldr	r3, .L27+36
 636 0072 0022     		movs	r2, #0
 637 0074 1A70     		strb	r2, [r3]
 172:main.c        ****         }           
 173:main.c        ****     }
 638              		.loc 1 173 0
 639 0076 EAE7     		b	.L26
 640              	.L28:
 641              		.align	2
 642              	.L27:
 643 0078 00000000 		.word	speedTimer
 644 007c 00000000 		.word	TIMER_FINISH
 645 0080 00000000 		.word	S3_DETECTED
 646 0084 00000000 		.word	S4_DETECTED
 647 0088 00000000 		.word	S5_DETECTED
 648 008c 00000000 		.word	S6_DETECTED
 649 0090 00000000 		.word	map
 650 0094 00000000 		.word	timerInt
 651 0098 00000000 		.word	quadDec2Count
 652 009c 00000000 		.word	flag_KB_string
 653              		.cfi_endproc
 654              	.LFE70:
 655              		.size	main, .-main
 656              		.global	__aeabi_fmul
 657              		.global	__aeabi_f2iz
 658              		.section	.text.quadCountToRPM,"ax",%progbits
 659              		.align	2
 660              		.global	quadCountToRPM
 661              		.thumb
 662              		.thumb_func
 663              		.type	quadCountToRPM, %function
 664              	quadCountToRPM:
 665              	.LFB71:
 174:main.c        ****     return 0;
 175:main.c        **** }
 176:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 16


 177:main.c        **** // Calculations
 178:main.c        **** //* ========================================
 179:main.c        **** int16 quadCountToRPM(uint16 count)
 180:main.c        **** {
 666              		.loc 1 180 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 90B5     		push	{r4, r7, lr}
 671              		.cfi_def_cfa_offset 12
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 85B0     		sub	sp, sp, #20
 676              		.cfi_def_cfa_offset 32
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 0346     		mov	r3, r0
 680 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 181:main.c        ****     float cps = count/57.00;
 681              		.loc 1 181 0
 682 000a FB88     		ldrh	r3, [r7, #6]
 683 000c 1846     		mov	r0, r3
 684 000e FFF7FEFF 		bl	__aeabi_i2d
 685 0012 4FF00002 		mov	r2, #0
 686 0016 0D4B     		ldr	r3, .L31
 687 0018 FFF7FEFF 		bl	__aeabi_ddiv
 688 001c 0346     		mov	r3, r0
 689 001e 0C46     		mov	r4, r1
 690 0020 1846     		mov	r0, r3
 691 0022 2146     		mov	r1, r4
 692 0024 FFF7FEFF 		bl	__aeabi_d2f
 693 0028 0346     		mov	r3, r0
 694 002a FB60     		str	r3, [r7, #12]	@ float
 182:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 695              		.loc 1 182 0
 696 002c 0849     		ldr	r1, .L31+4
 697 002e F868     		ldr	r0, [r7, #12]	@ float
 698 0030 FFF7FEFF 		bl	__aeabi_fmul
 699 0034 0346     		mov	r3, r0
 700 0036 1846     		mov	r0, r3
 701 0038 FFF7FEFF 		bl	__aeabi_f2iz
 702 003c 0346     		mov	r3, r0
 703 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 183:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 184:main.c        ****     return rpm;
 704              		.loc 1 184 0
 705 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 185:main.c        ****     //usbPutString(buffer);
 186:main.c        ****     //usbPutString("rpm ");
 187:main.c        **** }
 706              		.loc 1 187 0
 707 0044 1846     		mov	r0, r3
 708 0046 1437     		adds	r7, r7, #20
 709              		.cfi_def_cfa_offset 12
 710 0048 BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 17


 712              		@ sp needed
 713 004a 90BD     		pop	{r4, r7, pc}
 714              	.L32:
 715              		.align	2
 716              	.L31:
 717 004c 00804C40 		.word	1078755328
 718 0050 00007041 		.word	1097859072
 719              		.cfi_endproc
 720              	.LFE71:
 721              		.size	quadCountToRPM, .-quadCountToRPM
 722              		.section	.text.ResetSensorFlags,"ax",%progbits
 723              		.align	2
 724              		.global	ResetSensorFlags
 725              		.thumb
 726              		.thumb_func
 727              		.type	ResetSensorFlags, %function
 728              	ResetSensorFlags:
 729              	.LFB72:
 188:main.c        **** 
 189:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 190:main.c        **** void ResetSensorFlags() {
 730              		.loc 1 190 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735 0000 80B4     		push	{r7}
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 0002 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 191:main.c        ****     s3 = 0;
 740              		.loc 1 191 0
 741 0004 074B     		ldr	r3, .L34
 742 0006 0022     		movs	r2, #0
 743 0008 1A70     		strb	r2, [r3]
 192:main.c        ****     s4 = 0;
 744              		.loc 1 192 0
 745 000a 074B     		ldr	r3, .L34+4
 746 000c 0022     		movs	r2, #0
 747 000e 1A70     		strb	r2, [r3]
 193:main.c        ****     s5 = 0;
 748              		.loc 1 193 0
 749 0010 064B     		ldr	r3, .L34+8
 750 0012 0022     		movs	r2, #0
 751 0014 1A70     		strb	r2, [r3]
 194:main.c        ****     s6 = 0;
 752              		.loc 1 194 0
 753 0016 064B     		ldr	r3, .L34+12
 754 0018 0022     		movs	r2, #0
 755 001a 1A70     		strb	r2, [r3]
 195:main.c        **** }
 756              		.loc 1 195 0
 757 001c 00BF     		nop
 758 001e BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 18


 761 0020 80BC     		pop	{r7}
 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 0022 7047     		bx	lr
 765              	.L35:
 766              		.align	2
 767              	.L34:
 768 0024 00000000 		.word	s3
 769 0028 00000000 		.word	s4
 770 002c 00000000 		.word	s5
 771 0030 00000000 		.word	s6
 772              		.cfi_endproc
 773              	.LFE72:
 774              		.size	ResetSensorFlags, .-ResetSensorFlags
 775              		.global	xBlocksize
 776              		.data
 777 004e 0000     		.align	2
 778              		.type	xBlocksize, %object
 779              		.size	xBlocksize, 4
 780              	xBlocksize:
 781 0050 0000FF42 		.word	1124007936
 782              		.global	yBlocksize
 783              		.align	2
 784              		.type	yBlocksize, %object
 785              		.size	yBlocksize, 4
 786              	yBlocksize:
 787 0054 0000A042 		.word	1117782016
 788              		.global	currentRow
 789              		.type	currentRow, %object
 790              		.size	currentRow, 1
 791              	currentRow:
 792 0058 01       		.byte	1
 793              		.global	currentCol
 794              		.type	currentCol, %object
 795              		.size	currentCol, 1
 796              	currentCol:
 797 0059 01       		.byte	1
 798              		.section	.text.GetNextStep,"ax",%progbits
 799              		.align	2
 800              		.global	GetNextStep
 801              		.thumb
 802              		.thumb_func
 803              		.type	GetNextStep, %function
 804              	GetNextStep:
 805              	.LFB73:
 196:main.c        **** 
 197:main.c        **** float xBlocksize = 127.5; // 127.5
 198:main.c        **** float yBlocksize = 80; // 80
 199:main.c        **** uint8 currentRow = 1;
 200:main.c        **** uint8 currentCol = 1;
 201:main.c        **** 
 202:main.c        **** enum DirectionState GetNextStep() {
 806              		.loc 1 202 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 19


 811 0000 80B4     		push	{r7}
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 203:main.c        ****     enum DirectionState directionState;
 204:main.c        ****     // Determines robot movement and orientation to follow optimal path
 205:main.c        ****     // enum DirectionState directionState = Stop;
 206:main.c        ****     previousOrientation = currentOrientation;
 818              		.loc 1 206 0
 819 0006 AB4B     		ldr	r3, .L75
 820 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 821 000a AB4B     		ldr	r3, .L75+4
 822 000c 1A70     		strb	r2, [r3]
 207:main.c        ****     
 208:main.c        ****     if(map[currentRow][currentCol] == 9) {
 823              		.loc 1 208 0
 824 000e AB4B     		ldr	r3, .L75+8
 825 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 826 0012 1A46     		mov	r2, r3
 827 0014 AA4B     		ldr	r3, .L75+12
 828 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 0018 1846     		mov	r0, r3
 830 001a AA49     		ldr	r1, .L75+16
 831 001c 1346     		mov	r3, r2
 832 001e DB00     		lsls	r3, r3, #3
 833 0020 1344     		add	r3, r3, r2
 834 0022 5B00     		lsls	r3, r3, #1
 835 0024 1344     		add	r3, r3, r2
 836 0026 0344     		add	r3, r3, r0
 837 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 838 002c 092B     		cmp	r3, #9
 839 002e 03D1     		bne	.L37
 209:main.c        ****         directionState = Stop; // reached target
 840              		.loc 1 209 0
 841 0030 0523     		movs	r3, #5
 842 0032 7B60     		str	r3, [r7, #4]
 210:main.c        ****         return directionState;
 843              		.loc 1 210 0
 844 0034 7B68     		ldr	r3, [r7, #4]
 845 0036 22E2     		b	.L38
 846              	.L37:
 211:main.c        ****     }
 212:main.c        ****     /*
 213:main.c        ****     if (totalDistance >= (yBlocksize)) {
 214:main.c        ****         directionState = Stop;
 215:main.c        ****         return directionState;
 216:main.c        ****     }
 217:main.c        ****     */
 218:main.c        ****         
 219:main.c        ****     switch (previousOrientation) {
 847              		.loc 1 219 0
 848 0038 9F4B     		ldr	r3, .L75+4
 849 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 003c 032B     		cmp	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 20


 851 003e 00F21482 		bhi	.L70
 852 0042 01A2     		adr	r2, .L41
 853 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 854              		.p2align 2
 855              	.L41:
 856 0048 59000000 		.word	.L40+1
 857 004c 59010000 		.word	.L42+1
 858 0050 59020000 		.word	.L43+1
 859 0054 6D030000 		.word	.L44+1
 860              		.p2align 1
 861              	.L40:
 220:main.c        ****             case Up:
 221:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 862              		.loc 1 221 0
 863 0058 984B     		ldr	r3, .L75+8
 864 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 005c 5A1E     		subs	r2, r3, #1
 866 005e 984B     		ldr	r3, .L75+12
 867 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0062 1846     		mov	r0, r3
 869 0064 9749     		ldr	r1, .L75+16
 870 0066 1346     		mov	r3, r2
 871 0068 DB00     		lsls	r3, r3, #3
 872 006a 1344     		add	r3, r3, r2
 873 006c 5B00     		lsls	r3, r3, #1
 874 006e 1344     		add	r3, r3, r2
 875 0070 0344     		add	r3, r3, r0
 876 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 877 0076 082B     		cmp	r3, #8
 878 0078 10D0     		beq	.L45
 879              		.loc 1 221 0 is_stmt 0 discriminator 1
 880 007a 904B     		ldr	r3, .L75+8
 881 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 007e 5A1E     		subs	r2, r3, #1
 883 0080 8F4B     		ldr	r3, .L75+12
 884 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 0084 1846     		mov	r0, r3
 886 0086 8F49     		ldr	r1, .L75+16
 887 0088 1346     		mov	r3, r2
 888 008a DB00     		lsls	r3, r3, #3
 889 008c 1344     		add	r3, r3, r2
 890 008e 5B00     		lsls	r3, r3, #1
 891 0090 1344     		add	r3, r3, r2
 892 0092 0344     		add	r3, r3, r0
 893 0094 51F82330 		ldr	r3, [r1, r3, lsl #2]
 894 0098 092B     		cmp	r3, #9
 895 009a 0BD1     		bne	.L46
 896              	.L45:
 222:main.c        ****                     currentOrientation = Up; 
 897              		.loc 1 222 0 is_stmt 1
 898 009c 854B     		ldr	r3, .L75
 899 009e 0022     		movs	r2, #0
 900 00a0 1A70     		strb	r2, [r3]
 223:main.c        ****                     directionState = Forward;
 901              		.loc 1 223 0
 902 00a2 0023     		movs	r3, #0
 903 00a4 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 21


 224:main.c        ****                     currentRow--;// update position
 904              		.loc 1 224 0
 905 00a6 854B     		ldr	r3, .L75+8
 906 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907 00aa 013B     		subs	r3, r3, #1
 908 00ac DAB2     		uxtb	r2, r3
 909 00ae 834B     		ldr	r3, .L75+8
 910 00b0 1A70     		strb	r2, [r3]
 911 00b2 50E0     		b	.L47
 912              	.L46:
 225:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 913              		.loc 1 225 0
 914 00b4 814B     		ldr	r3, .L75+8
 915 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 00b8 1A46     		mov	r2, r3
 917 00ba 814B     		ldr	r3, .L75+12
 918 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 919 00be 591E     		subs	r1, r3, #1
 920 00c0 8048     		ldr	r0, .L75+16
 921 00c2 1346     		mov	r3, r2
 922 00c4 DB00     		lsls	r3, r3, #3
 923 00c6 1344     		add	r3, r3, r2
 924 00c8 5B00     		lsls	r3, r3, #1
 925 00ca 1344     		add	r3, r3, r2
 926 00cc 0B44     		add	r3, r3, r1
 927 00ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 928 00d2 082B     		cmp	r3, #8
 929 00d4 10D0     		beq	.L48
 930              		.loc 1 225 0 is_stmt 0 discriminator 1
 931 00d6 794B     		ldr	r3, .L75+8
 932 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 00da 1A46     		mov	r2, r3
 934 00dc 784B     		ldr	r3, .L75+12
 935 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 936 00e0 591E     		subs	r1, r3, #1
 937 00e2 7848     		ldr	r0, .L75+16
 938 00e4 1346     		mov	r3, r2
 939 00e6 DB00     		lsls	r3, r3, #3
 940 00e8 1344     		add	r3, r3, r2
 941 00ea 5B00     		lsls	r3, r3, #1
 942 00ec 1344     		add	r3, r3, r2
 943 00ee 0B44     		add	r3, r3, r1
 944 00f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 945 00f4 092B     		cmp	r3, #9
 946 00f6 05D1     		bne	.L49
 947              	.L48:
 226:main.c        ****                     currentOrientation = Left;
 948              		.loc 1 226 0 is_stmt 1
 949 00f8 6E4B     		ldr	r3, .L75
 950 00fa 0222     		movs	r2, #2
 951 00fc 1A70     		strb	r2, [r3]
 227:main.c        ****                     directionState = waitForLeftTurn;
 952              		.loc 1 227 0
 953 00fe 0923     		movs	r3, #9
 954 0100 7B60     		str	r3, [r7, #4]
 955 0102 28E0     		b	.L47
 956              	.L49:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 22


 228:main.c        ****                     //currentRow--;
 229:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 957              		.loc 1 229 0
 958 0104 6D4B     		ldr	r3, .L75+8
 959 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0108 1A46     		mov	r2, r3
 961 010a 6D4B     		ldr	r3, .L75+12
 962 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 010e 591C     		adds	r1, r3, #1
 964 0110 6C48     		ldr	r0, .L75+16
 965 0112 1346     		mov	r3, r2
 966 0114 DB00     		lsls	r3, r3, #3
 967 0116 1344     		add	r3, r3, r2
 968 0118 5B00     		lsls	r3, r3, #1
 969 011a 1344     		add	r3, r3, r2
 970 011c 0B44     		add	r3, r3, r1
 971 011e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 972 0122 082B     		cmp	r3, #8
 973 0124 11D0     		beq	.L50
 974              		.loc 1 229 0 is_stmt 0 discriminator 1
 975 0126 654B     		ldr	r3, .L75+8
 976 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 012a 1A46     		mov	r2, r3
 978 012c 644B     		ldr	r3, .L75+12
 979 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0130 591C     		adds	r1, r3, #1
 981 0132 6448     		ldr	r0, .L75+16
 982 0134 1346     		mov	r3, r2
 983 0136 DB00     		lsls	r3, r3, #3
 984 0138 1344     		add	r3, r3, r2
 985 013a 5B00     		lsls	r3, r3, #1
 986 013c 1344     		add	r3, r3, r2
 987 013e 0B44     		add	r3, r3, r1
 988 0140 50F82330 		ldr	r3, [r0, r3, lsl #2]
 989 0144 092B     		cmp	r3, #9
 990 0146 40F09281 		bne	.L71
 991              	.L50:
 230:main.c        ****                     currentOrientation = Right;
 992              		.loc 1 230 0 is_stmt 1
 993 014a 5A4B     		ldr	r3, .L75
 994 014c 0322     		movs	r2, #3
 995 014e 1A70     		strb	r2, [r3]
 231:main.c        ****                     directionState = waitForRightTurn;
 996              		.loc 1 231 0
 997 0150 0823     		movs	r3, #8
 998 0152 7B60     		str	r3, [r7, #4]
 232:main.c        ****                     //currentRow++; // update position
 233:main.c        ****                 }
 234:main.c        ****                 break;
 999              		.loc 1 234 0
 1000 0154 8BE1     		b	.L71
 1001              	.L47:
 1002 0156 8AE1     		b	.L71
 1003              	.L42:
 235:main.c        ****             case Down:
 236:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 1004              		.loc 1 236 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 23


 1005 0158 584B     		ldr	r3, .L75+8
 1006 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 015c 5A1C     		adds	r2, r3, #1
 1008 015e 584B     		ldr	r3, .L75+12
 1009 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0162 1846     		mov	r0, r3
 1011 0164 5749     		ldr	r1, .L75+16
 1012 0166 1346     		mov	r3, r2
 1013 0168 DB00     		lsls	r3, r3, #3
 1014 016a 1344     		add	r3, r3, r2
 1015 016c 5B00     		lsls	r3, r3, #1
 1016 016e 1344     		add	r3, r3, r2
 1017 0170 0344     		add	r3, r3, r0
 1018 0172 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1019 0176 082B     		cmp	r3, #8
 1020 0178 10D0     		beq	.L52
 1021              		.loc 1 236 0 is_stmt 0 discriminator 1
 1022 017a 504B     		ldr	r3, .L75+8
 1023 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 017e 5A1C     		adds	r2, r3, #1
 1025 0180 4F4B     		ldr	r3, .L75+12
 1026 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 0184 1846     		mov	r0, r3
 1028 0186 4F49     		ldr	r1, .L75+16
 1029 0188 1346     		mov	r3, r2
 1030 018a DB00     		lsls	r3, r3, #3
 1031 018c 1344     		add	r3, r3, r2
 1032 018e 5B00     		lsls	r3, r3, #1
 1033 0190 1344     		add	r3, r3, r2
 1034 0192 0344     		add	r3, r3, r0
 1035 0194 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1036 0198 092B     		cmp	r3, #9
 1037 019a 0BD1     		bne	.L53
 1038              	.L52:
 237:main.c        ****                     currentOrientation = Down;
 1039              		.loc 1 237 0 is_stmt 1
 1040 019c 454B     		ldr	r3, .L75
 1041 019e 0122     		movs	r2, #1
 1042 01a0 1A70     		strb	r2, [r3]
 238:main.c        ****                     directionState = Forward;
 1043              		.loc 1 238 0
 1044 01a2 0023     		movs	r3, #0
 1045 01a4 7B60     		str	r3, [r7, #4]
 239:main.c        ****                     currentRow++;
 1046              		.loc 1 239 0
 1047 01a6 454B     		ldr	r3, .L75+8
 1048 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 01aa 0133     		adds	r3, r3, #1
 1050 01ac DAB2     		uxtb	r2, r3
 1051 01ae 434B     		ldr	r3, .L75+8
 1052 01b0 1A70     		strb	r2, [r3]
 1053 01b2 50E0     		b	.L54
 1054              	.L53:
 240:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 1055              		.loc 1 240 0
 1056 01b4 414B     		ldr	r3, .L75+8
 1057 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 24


 1058 01b8 1A46     		mov	r2, r3
 1059 01ba 414B     		ldr	r3, .L75+12
 1060 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 01be 591E     		subs	r1, r3, #1
 1062 01c0 4048     		ldr	r0, .L75+16
 1063 01c2 1346     		mov	r3, r2
 1064 01c4 DB00     		lsls	r3, r3, #3
 1065 01c6 1344     		add	r3, r3, r2
 1066 01c8 5B00     		lsls	r3, r3, #1
 1067 01ca 1344     		add	r3, r3, r2
 1068 01cc 0B44     		add	r3, r3, r1
 1069 01ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1070 01d2 082B     		cmp	r3, #8
 1071 01d4 10D0     		beq	.L55
 1072              		.loc 1 240 0 is_stmt 0 discriminator 1
 1073 01d6 394B     		ldr	r3, .L75+8
 1074 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1075 01da 1A46     		mov	r2, r3
 1076 01dc 384B     		ldr	r3, .L75+12
 1077 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 01e0 591E     		subs	r1, r3, #1
 1079 01e2 3848     		ldr	r0, .L75+16
 1080 01e4 1346     		mov	r3, r2
 1081 01e6 DB00     		lsls	r3, r3, #3
 1082 01e8 1344     		add	r3, r3, r2
 1083 01ea 5B00     		lsls	r3, r3, #1
 1084 01ec 1344     		add	r3, r3, r2
 1085 01ee 0B44     		add	r3, r3, r1
 1086 01f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1087 01f4 092B     		cmp	r3, #9
 1088 01f6 05D1     		bne	.L56
 1089              	.L55:
 241:main.c        ****                     currentOrientation = Left;
 1090              		.loc 1 241 0 is_stmt 1
 1091 01f8 2E4B     		ldr	r3, .L75
 1092 01fa 0222     		movs	r2, #2
 1093 01fc 1A70     		strb	r2, [r3]
 242:main.c        ****                     directionState = waitForRightTurn;
 1094              		.loc 1 242 0
 1095 01fe 0823     		movs	r3, #8
 1096 0200 7B60     		str	r3, [r7, #4]
 1097 0202 28E0     		b	.L54
 1098              	.L56:
 243:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 1099              		.loc 1 243 0
 1100 0204 2D4B     		ldr	r3, .L75+8
 1101 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1102 0208 1A46     		mov	r2, r3
 1103 020a 2D4B     		ldr	r3, .L75+12
 1104 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 020e 591C     		adds	r1, r3, #1
 1106 0210 2C48     		ldr	r0, .L75+16
 1107 0212 1346     		mov	r3, r2
 1108 0214 DB00     		lsls	r3, r3, #3
 1109 0216 1344     		add	r3, r3, r2
 1110 0218 5B00     		lsls	r3, r3, #1
 1111 021a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 25


 1112 021c 0B44     		add	r3, r3, r1
 1113 021e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1114 0222 082B     		cmp	r3, #8
 1115 0224 11D0     		beq	.L57
 1116              		.loc 1 243 0 is_stmt 0 discriminator 1
 1117 0226 254B     		ldr	r3, .L75+8
 1118 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1119 022a 1A46     		mov	r2, r3
 1120 022c 244B     		ldr	r3, .L75+12
 1121 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 0230 591C     		adds	r1, r3, #1
 1123 0232 2448     		ldr	r0, .L75+16
 1124 0234 1346     		mov	r3, r2
 1125 0236 DB00     		lsls	r3, r3, #3
 1126 0238 1344     		add	r3, r3, r2
 1127 023a 5B00     		lsls	r3, r3, #1
 1128 023c 1344     		add	r3, r3, r2
 1129 023e 0B44     		add	r3, r3, r1
 1130 0240 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1131 0244 092B     		cmp	r3, #9
 1132 0246 40F01481 		bne	.L72
 1133              	.L57:
 244:main.c        ****                     currentOrientation = Right;
 1134              		.loc 1 244 0 is_stmt 1
 1135 024a 1A4B     		ldr	r3, .L75
 1136 024c 0322     		movs	r2, #3
 1137 024e 1A70     		strb	r2, [r3]
 245:main.c        ****                     directionState = waitForLeftTurn;
 1138              		.loc 1 245 0
 1139 0250 0923     		movs	r3, #9
 1140 0252 7B60     		str	r3, [r7, #4]
 246:main.c        ****                 }
 247:main.c        ****                 break;
 1141              		.loc 1 247 0
 1142 0254 0DE1     		b	.L72
 1143              	.L54:
 1144 0256 0CE1     		b	.L72
 1145              	.L43:
 248:main.c        ****             case Left:
 249:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 1146              		.loc 1 249 0
 1147 0258 184B     		ldr	r3, .L75+8
 1148 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 025c 1A46     		mov	r2, r3
 1150 025e 184B     		ldr	r3, .L75+12
 1151 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0262 591E     		subs	r1, r3, #1
 1153 0264 1748     		ldr	r0, .L75+16
 1154 0266 1346     		mov	r3, r2
 1155 0268 DB00     		lsls	r3, r3, #3
 1156 026a 1344     		add	r3, r3, r2
 1157 026c 5B00     		lsls	r3, r3, #1
 1158 026e 1344     		add	r3, r3, r2
 1159 0270 0B44     		add	r3, r3, r1
 1160 0272 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1161 0276 082B     		cmp	r3, #8
 1162 0278 10D0     		beq	.L58
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 26


 1163              		.loc 1 249 0 is_stmt 0 discriminator 1
 1164 027a 104B     		ldr	r3, .L75+8
 1165 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 027e 1A46     		mov	r2, r3
 1167 0280 0F4B     		ldr	r3, .L75+12
 1168 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1169 0284 591E     		subs	r1, r3, #1
 1170 0286 0F48     		ldr	r0, .L75+16
 1171 0288 1346     		mov	r3, r2
 1172 028a DB00     		lsls	r3, r3, #3
 1173 028c 1344     		add	r3, r3, r2
 1174 028e 5B00     		lsls	r3, r3, #1
 1175 0290 1344     		add	r3, r3, r2
 1176 0292 0B44     		add	r3, r3, r1
 1177 0294 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1178 0298 092B     		cmp	r3, #9
 1179 029a 15D1     		bne	.L59
 1180              	.L58:
 250:main.c        ****                     currentOrientation = Left;
 1181              		.loc 1 250 0 is_stmt 1
 1182 029c 054B     		ldr	r3, .L75
 1183 029e 0222     		movs	r2, #2
 1184 02a0 1A70     		strb	r2, [r3]
 251:main.c        ****                     directionState = Forward;
 1185              		.loc 1 251 0
 1186 02a2 0023     		movs	r3, #0
 1187 02a4 7B60     		str	r3, [r7, #4]
 252:main.c        ****                     currentCol--; // update position
 1188              		.loc 1 252 0
 1189 02a6 064B     		ldr	r3, .L75+12
 1190 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 02aa 013B     		subs	r3, r3, #1
 1192 02ac DAB2     		uxtb	r2, r3
 1193 02ae 044B     		ldr	r3, .L75+12
 1194 02b0 1A70     		strb	r2, [r3]
 1195 02b2 5AE0     		b	.L60
 1196              	.L76:
 1197              		.align	2
 1198              	.L75:
 1199 02b4 00000000 		.word	currentOrientation
 1200 02b8 00000000 		.word	previousOrientation
 1201 02bc 00000000 		.word	currentRow
 1202 02c0 00000000 		.word	currentCol
 1203 02c4 00000000 		.word	map
 1204              	.L59:
 253:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1205              		.loc 1 253 0
 1206 02c8 6F4B     		ldr	r3, .L77
 1207 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 02cc 5A1E     		subs	r2, r3, #1
 1209 02ce 6F4B     		ldr	r3, .L77+4
 1210 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 02d2 1846     		mov	r0, r3
 1212 02d4 6E49     		ldr	r1, .L77+8
 1213 02d6 1346     		mov	r3, r2
 1214 02d8 DB00     		lsls	r3, r3, #3
 1215 02da 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 27


 1216 02dc 5B00     		lsls	r3, r3, #1
 1217 02de 1344     		add	r3, r3, r2
 1218 02e0 0344     		add	r3, r3, r0
 1219 02e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1220 02e6 082B     		cmp	r3, #8
 1221 02e8 10D0     		beq	.L61
 1222              		.loc 1 253 0 is_stmt 0 discriminator 1
 1223 02ea 674B     		ldr	r3, .L77
 1224 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 02ee 5A1E     		subs	r2, r3, #1
 1226 02f0 664B     		ldr	r3, .L77+4
 1227 02f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1228 02f4 1846     		mov	r0, r3
 1229 02f6 6649     		ldr	r1, .L77+8
 1230 02f8 1346     		mov	r3, r2
 1231 02fa DB00     		lsls	r3, r3, #3
 1232 02fc 1344     		add	r3, r3, r2
 1233 02fe 5B00     		lsls	r3, r3, #1
 1234 0300 1344     		add	r3, r3, r2
 1235 0302 0344     		add	r3, r3, r0
 1236 0304 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1237 0308 092B     		cmp	r3, #9
 1238 030a 05D1     		bne	.L62
 1239              	.L61:
 254:main.c        ****                     currentOrientation = Up;
 1240              		.loc 1 254 0 is_stmt 1
 1241 030c 614B     		ldr	r3, .L77+12
 1242 030e 0022     		movs	r2, #0
 1243 0310 1A70     		strb	r2, [r3]
 255:main.c        ****                     directionState = waitForRightTurn;
 1244              		.loc 1 255 0
 1245 0312 0823     		movs	r3, #8
 1246 0314 7B60     		str	r3, [r7, #4]
 1247 0316 28E0     		b	.L60
 1248              	.L62:
 256:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1249              		.loc 1 256 0
 1250 0318 5B4B     		ldr	r3, .L77
 1251 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 031c 5A1C     		adds	r2, r3, #1
 1253 031e 5B4B     		ldr	r3, .L77+4
 1254 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1255 0322 1846     		mov	r0, r3
 1256 0324 5A49     		ldr	r1, .L77+8
 1257 0326 1346     		mov	r3, r2
 1258 0328 DB00     		lsls	r3, r3, #3
 1259 032a 1344     		add	r3, r3, r2
 1260 032c 5B00     		lsls	r3, r3, #1
 1261 032e 1344     		add	r3, r3, r2
 1262 0330 0344     		add	r3, r3, r0
 1263 0332 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1264 0336 082B     		cmp	r3, #8
 1265 0338 11D0     		beq	.L63
 1266              		.loc 1 256 0 is_stmt 0 discriminator 1
 1267 033a 534B     		ldr	r3, .L77
 1268 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 033e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 28


 1270 0340 524B     		ldr	r3, .L77+4
 1271 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272 0344 1846     		mov	r0, r3
 1273 0346 5249     		ldr	r1, .L77+8
 1274 0348 1346     		mov	r3, r2
 1275 034a DB00     		lsls	r3, r3, #3
 1276 034c 1344     		add	r3, r3, r2
 1277 034e 5B00     		lsls	r3, r3, #1
 1278 0350 1344     		add	r3, r3, r2
 1279 0352 0344     		add	r3, r3, r0
 1280 0354 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1281 0358 092B     		cmp	r3, #9
 1282 035a 40F08C80 		bne	.L73
 1283              	.L63:
 257:main.c        ****                     currentOrientation = Down;
 1284              		.loc 1 257 0 is_stmt 1
 1285 035e 4D4B     		ldr	r3, .L77+12
 1286 0360 0122     		movs	r2, #1
 1287 0362 1A70     		strb	r2, [r3]
 258:main.c        ****                     directionState = waitForLeftTurn;
 1288              		.loc 1 258 0
 1289 0364 0923     		movs	r3, #9
 1290 0366 7B60     		str	r3, [r7, #4]
 259:main.c        ****                 }
 260:main.c        ****                 break;
 1291              		.loc 1 260 0
 1292 0368 85E0     		b	.L73
 1293              	.L60:
 1294 036a 84E0     		b	.L73
 1295              	.L44:
 261:main.c        ****             case Right:
 262:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 1296              		.loc 1 262 0
 1297 036c 464B     		ldr	r3, .L77
 1298 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 0370 1A46     		mov	r2, r3
 1300 0372 464B     		ldr	r3, .L77+4
 1301 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1302 0376 591C     		adds	r1, r3, #1
 1303 0378 4548     		ldr	r0, .L77+8
 1304 037a 1346     		mov	r3, r2
 1305 037c DB00     		lsls	r3, r3, #3
 1306 037e 1344     		add	r3, r3, r2
 1307 0380 5B00     		lsls	r3, r3, #1
 1308 0382 1344     		add	r3, r3, r2
 1309 0384 0B44     		add	r3, r3, r1
 1310 0386 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1311 038a 082B     		cmp	r3, #8
 1312 038c 10D0     		beq	.L64
 1313              		.loc 1 262 0 is_stmt 0 discriminator 1
 1314 038e 3E4B     		ldr	r3, .L77
 1315 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 0392 1A46     		mov	r2, r3
 1317 0394 3D4B     		ldr	r3, .L77+4
 1318 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1319 0398 591C     		adds	r1, r3, #1
 1320 039a 3D48     		ldr	r0, .L77+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 29


 1321 039c 1346     		mov	r3, r2
 1322 039e DB00     		lsls	r3, r3, #3
 1323 03a0 1344     		add	r3, r3, r2
 1324 03a2 5B00     		lsls	r3, r3, #1
 1325 03a4 1344     		add	r3, r3, r2
 1326 03a6 0B44     		add	r3, r3, r1
 1327 03a8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1328 03ac 092B     		cmp	r3, #9
 1329 03ae 0BD1     		bne	.L65
 1330              	.L64:
 263:main.c        ****                     currentOrientation = Right;
 1331              		.loc 1 263 0 is_stmt 1
 1332 03b0 384B     		ldr	r3, .L77+12
 1333 03b2 0322     		movs	r2, #3
 1334 03b4 1A70     		strb	r2, [r3]
 264:main.c        ****                     directionState = Forward;
 1335              		.loc 1 264 0
 1336 03b6 0023     		movs	r3, #0
 1337 03b8 7B60     		str	r3, [r7, #4]
 265:main.c        ****                     currentCol++; // update position
 1338              		.loc 1 265 0
 1339 03ba 344B     		ldr	r3, .L77+4
 1340 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1341 03be 0133     		adds	r3, r3, #1
 1342 03c0 DAB2     		uxtb	r2, r3
 1343 03c2 324B     		ldr	r3, .L77+4
 1344 03c4 1A70     		strb	r2, [r3]
 1345 03c6 4FE0     		b	.L66
 1346              	.L65:
 266:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1347              		.loc 1 266 0
 1348 03c8 2F4B     		ldr	r3, .L77
 1349 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 03cc 5A1E     		subs	r2, r3, #1
 1351 03ce 2F4B     		ldr	r3, .L77+4
 1352 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 03d2 1846     		mov	r0, r3
 1354 03d4 2E49     		ldr	r1, .L77+8
 1355 03d6 1346     		mov	r3, r2
 1356 03d8 DB00     		lsls	r3, r3, #3
 1357 03da 1344     		add	r3, r3, r2
 1358 03dc 5B00     		lsls	r3, r3, #1
 1359 03de 1344     		add	r3, r3, r2
 1360 03e0 0344     		add	r3, r3, r0
 1361 03e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1362 03e6 082B     		cmp	r3, #8
 1363 03e8 10D0     		beq	.L67
 1364              		.loc 1 266 0 is_stmt 0 discriminator 1
 1365 03ea 274B     		ldr	r3, .L77
 1366 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 03ee 5A1E     		subs	r2, r3, #1
 1368 03f0 264B     		ldr	r3, .L77+4
 1369 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 03f4 1846     		mov	r0, r3
 1371 03f6 2649     		ldr	r1, .L77+8
 1372 03f8 1346     		mov	r3, r2
 1373 03fa DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 30


 1374 03fc 1344     		add	r3, r3, r2
 1375 03fe 5B00     		lsls	r3, r3, #1
 1376 0400 1344     		add	r3, r3, r2
 1377 0402 0344     		add	r3, r3, r0
 1378 0404 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1379 0408 092B     		cmp	r3, #9
 1380 040a 05D1     		bne	.L68
 1381              	.L67:
 267:main.c        ****                     currentOrientation = Up;
 1382              		.loc 1 267 0 is_stmt 1
 1383 040c 214B     		ldr	r3, .L77+12
 1384 040e 0022     		movs	r2, #0
 1385 0410 1A70     		strb	r2, [r3]
 268:main.c        ****                     directionState = waitForLeftTurn;
 1386              		.loc 1 268 0
 1387 0412 0923     		movs	r3, #9
 1388 0414 7B60     		str	r3, [r7, #4]
 1389 0416 27E0     		b	.L66
 1390              	.L68:
 269:main.c        ****                     //currentCol++; // update position
 270:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1391              		.loc 1 270 0
 1392 0418 1B4B     		ldr	r3, .L77
 1393 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1394 041c 5A1C     		adds	r2, r3, #1
 1395 041e 1B4B     		ldr	r3, .L77+4
 1396 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 0422 1846     		mov	r0, r3
 1398 0424 1A49     		ldr	r1, .L77+8
 1399 0426 1346     		mov	r3, r2
 1400 0428 DB00     		lsls	r3, r3, #3
 1401 042a 1344     		add	r3, r3, r2
 1402 042c 5B00     		lsls	r3, r3, #1
 1403 042e 1344     		add	r3, r3, r2
 1404 0430 0344     		add	r3, r3, r0
 1405 0432 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1406 0436 082B     		cmp	r3, #8
 1407 0438 10D0     		beq	.L69
 1408              		.loc 1 270 0 is_stmt 0 discriminator 1
 1409 043a 134B     		ldr	r3, .L77
 1410 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 043e 5A1C     		adds	r2, r3, #1
 1412 0440 124B     		ldr	r3, .L77+4
 1413 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1414 0444 1846     		mov	r0, r3
 1415 0446 1249     		ldr	r1, .L77+8
 1416 0448 1346     		mov	r3, r2
 1417 044a DB00     		lsls	r3, r3, #3
 1418 044c 1344     		add	r3, r3, r2
 1419 044e 5B00     		lsls	r3, r3, #1
 1420 0450 1344     		add	r3, r3, r2
 1421 0452 0344     		add	r3, r3, r0
 1422 0454 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1423 0458 092B     		cmp	r3, #9
 1424 045a 0ED1     		bne	.L74
 1425              	.L69:
 271:main.c        ****                     currentOrientation = Down;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 31


 1426              		.loc 1 271 0 is_stmt 1
 1427 045c 0D4B     		ldr	r3, .L77+12
 1428 045e 0122     		movs	r2, #1
 1429 0460 1A70     		strb	r2, [r3]
 272:main.c        ****                     directionState = waitForRightTurn;
 1430              		.loc 1 272 0
 1431 0462 0823     		movs	r3, #8
 1432 0464 7B60     		str	r3, [r7, #4]
 273:main.c        ****                     //currentCol--; // update position
 274:main.c        ****                 }
 275:main.c        ****                 break;
 1433              		.loc 1 275 0
 1434 0466 08E0     		b	.L74
 1435              	.L66:
 1436 0468 07E0     		b	.L74
 1437              	.L70:
 276:main.c        ****             default:
 277:main.c        ****                 break;
 1438              		.loc 1 277 0
 1439 046a 00BF     		nop
 1440 046c 06E0     		b	.L51
 1441              	.L71:
 234:main.c        ****             case Down:
 1442              		.loc 1 234 0
 1443 046e 00BF     		nop
 1444 0470 04E0     		b	.L51
 1445              	.L72:
 247:main.c        ****             case Left:
 1446              		.loc 1 247 0
 1447 0472 00BF     		nop
 1448 0474 02E0     		b	.L51
 1449              	.L73:
 260:main.c        ****             case Right:
 1450              		.loc 1 260 0
 1451 0476 00BF     		nop
 1452 0478 00E0     		b	.L51
 1453              	.L74:
 275:main.c        ****             default:
 1454              		.loc 1 275 0
 1455 047a 00BF     		nop
 1456              	.L51:
 278:main.c        ****         }
 279:main.c        ****     
 280:main.c        ****     return directionState;
 1457              		.loc 1 280 0
 1458 047c 7B68     		ldr	r3, [r7, #4]
 1459              	.L38:
 281:main.c        **** }
 1460              		.loc 1 281 0
 1461 047e 1846     		mov	r0, r3
 1462 0480 0C37     		adds	r7, r7, #12
 1463              		.cfi_def_cfa_offset 4
 1464 0482 BD46     		mov	sp, r7
 1465              		.cfi_def_cfa_register 13
 1466              		@ sp needed
 1467 0484 80BC     		pop	{r7}
 1468              		.cfi_restore 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 32


 1469              		.cfi_def_cfa_offset 0
 1470 0486 7047     		bx	lr
 1471              	.L78:
 1472              		.align	2
 1473              	.L77:
 1474 0488 00000000 		.word	currentRow
 1475 048c 00000000 		.word	currentCol
 1476 0490 00000000 		.word	map
 1477 0494 00000000 		.word	currentOrientation
 1478              		.cfi_endproc
 1479              	.LFE73:
 1480              		.size	GetNextStep, .-GetNextStep
 1481              		.section	.text.RecheckPosition,"ax",%progbits
 1482              		.align	2
 1483              		.global	RecheckPosition
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	RecheckPosition, %function
 1487              	RecheckPosition:
 1488              	.LFB74:
 282:main.c        **** 
 283:main.c        **** enum DirectionState RecheckPosition() {
 1489              		.loc 1 283 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493 0000 80B5     		push	{r7, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
 284:main.c        ****     // Called when we are at intersection
 285:main.c        ****     // Check our position on the map and see if it aligns with the junction
 286:main.c        ****     
 287:main.c        ****     // CHECK FOR PATH
 288:main.c        ****     if (currentOrientation == Up || currentOrientation == Down) {
 1499              		.loc 1 288 0
 1500 0004 544B     		ldr	r3, .L89
 1501 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0008 002B     		cmp	r3, #0
 1503 000a 03D0     		beq	.L80
 1504              		.loc 1 288 0 is_stmt 0 discriminator 1
 1505 000c 524B     		ldr	r3, .L89
 1506 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 0010 012B     		cmp	r3, #1
 1508 0012 4AD1     		bne	.L81
 1509              	.L80:
 289:main.c        ****         if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol - 1] == 8 ||
 1510              		.loc 1 289 0 is_stmt 1
 1511 0014 514B     		ldr	r3, .L89+4
 1512 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0018 1A46     		mov	r2, r3
 1514 001a 514B     		ldr	r3, .L89+8
 1515 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 001e 591C     		adds	r1, r3, #1
 1517 0020 5048     		ldr	r0, .L89+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 33


 1518 0022 1346     		mov	r3, r2
 1519 0024 DB00     		lsls	r3, r3, #3
 1520 0026 1344     		add	r3, r3, r2
 1521 0028 5B00     		lsls	r3, r3, #1
 1522 002a 1344     		add	r3, r3, r2
 1523 002c 0B44     		add	r3, r3, r1
 1524 002e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1525 0032 082B     		cmp	r3, #8
 1526 0034 32D0     		beq	.L82
 1527              		.loc 1 289 0 is_stmt 0 discriminator 1
 1528 0036 494B     		ldr	r3, .L89+4
 1529 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 003a 1A46     		mov	r2, r3
 1531 003c 484B     		ldr	r3, .L89+8
 1532 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 0040 591E     		subs	r1, r3, #1
 1534 0042 4848     		ldr	r0, .L89+12
 1535 0044 1346     		mov	r3, r2
 1536 0046 DB00     		lsls	r3, r3, #3
 1537 0048 1344     		add	r3, r3, r2
 1538 004a 5B00     		lsls	r3, r3, #1
 1539 004c 1344     		add	r3, r3, r2
 1540 004e 0B44     		add	r3, r3, r1
 1541 0050 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1542 0054 082B     		cmp	r3, #8
 1543 0056 21D0     		beq	.L82
 290:main.c        ****             map[currentRow][currentCol + 1] == 9 || map[currentRow][currentCol - 1] == 9) {
 1544              		.loc 1 290 0 is_stmt 1 discriminator 2
 1545 0058 404B     		ldr	r3, .L89+4
 1546 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 005c 1A46     		mov	r2, r3
 1548 005e 404B     		ldr	r3, .L89+8
 1549 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1550 0062 591C     		adds	r1, r3, #1
 1551 0064 3F48     		ldr	r0, .L89+12
 1552 0066 1346     		mov	r3, r2
 1553 0068 DB00     		lsls	r3, r3, #3
 1554 006a 1344     		add	r3, r3, r2
 1555 006c 5B00     		lsls	r3, r3, #1
 1556 006e 1344     		add	r3, r3, r2
 1557 0070 0B44     		add	r3, r3, r1
 1558 0072 50F82330 		ldr	r3, [r0, r3, lsl #2]
 289:main.c        ****         if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol - 1] == 8 ||
 1559              		.loc 1 289 0 discriminator 2
 1560 0076 092B     		cmp	r3, #9
 1561 0078 10D0     		beq	.L82
 1562              		.loc 1 290 0
 1563 007a 384B     		ldr	r3, .L89+4
 1564 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 007e 1A46     		mov	r2, r3
 1566 0080 374B     		ldr	r3, .L89+8
 1567 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 0084 591E     		subs	r1, r3, #1
 1569 0086 3748     		ldr	r0, .L89+12
 1570 0088 1346     		mov	r3, r2
 1571 008a DB00     		lsls	r3, r3, #3
 1572 008c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 34


 1573 008e 5B00     		lsls	r3, r3, #1
 1574 0090 1344     		add	r3, r3, r2
 1575 0092 0B44     		add	r3, r3, r1
 1576 0094 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1577 0098 092B     		cmp	r3, #9
 1578 009a 02D1     		bne	.L83
 1579              	.L82:
 291:main.c        ****             return currentDirection;// if correct location, break
 1580              		.loc 1 291 0
 1581 009c 324B     		ldr	r3, .L89+16
 1582 009e 1B68     		ldr	r3, [r3]
 1583 00a0 58E0     		b	.L84
 1584              	.L83:
 292:main.c        ****         } else {
 293:main.c        ****             return GetNextStep(); // need to increment location
 1585              		.loc 1 293 0
 1586 00a2 FFF7FEFF 		bl	GetNextStep
 1587 00a6 0346     		mov	r3, r0
 1588 00a8 54E0     		b	.L84
 1589              	.L81:
 294:main.c        ****         }
 295:main.c        ****     }
 296:main.c        ****     else if (currentOrientation == Left || currentOrientation == Right) {
 1590              		.loc 1 296 0
 1591 00aa 2B4B     		ldr	r3, .L89
 1592 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1593 00ae 022B     		cmp	r3, #2
 1594 00b0 03D0     		beq	.L85
 1595              		.loc 1 296 0 is_stmt 0 discriminator 1
 1596 00b2 294B     		ldr	r3, .L89
 1597 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 00b6 032B     		cmp	r3, #3
 1599 00b8 4AD1     		bne	.L86
 1600              	.L85:
 297:main.c        ****         if(map[currentRow + 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 8 ||
 1601              		.loc 1 297 0 is_stmt 1
 1602 00ba 284B     		ldr	r3, .L89+4
 1603 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 00be 5A1C     		adds	r2, r3, #1
 1605 00c0 274B     		ldr	r3, .L89+8
 1606 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 00c4 1846     		mov	r0, r3
 1608 00c6 2749     		ldr	r1, .L89+12
 1609 00c8 1346     		mov	r3, r2
 1610 00ca DB00     		lsls	r3, r3, #3
 1611 00cc 1344     		add	r3, r3, r2
 1612 00ce 5B00     		lsls	r3, r3, #1
 1613 00d0 1344     		add	r3, r3, r2
 1614 00d2 0344     		add	r3, r3, r0
 1615 00d4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1616 00d8 082B     		cmp	r3, #8
 1617 00da 32D0     		beq	.L87
 1618              		.loc 1 297 0 is_stmt 0 discriminator 1
 1619 00dc 1F4B     		ldr	r3, .L89+4
 1620 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1621 00e0 5A1E     		subs	r2, r3, #1
 1622 00e2 1F4B     		ldr	r3, .L89+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 35


 1623 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1624 00e6 1846     		mov	r0, r3
 1625 00e8 1E49     		ldr	r1, .L89+12
 1626 00ea 1346     		mov	r3, r2
 1627 00ec DB00     		lsls	r3, r3, #3
 1628 00ee 1344     		add	r3, r3, r2
 1629 00f0 5B00     		lsls	r3, r3, #1
 1630 00f2 1344     		add	r3, r3, r2
 1631 00f4 0344     		add	r3, r3, r0
 1632 00f6 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1633 00fa 082B     		cmp	r3, #8
 1634 00fc 21D0     		beq	.L87
 298:main.c        ****             map[currentRow + 1][currentCol] == 9 || map[currentRow - 1][currentCol] == 9) {
 1635              		.loc 1 298 0 is_stmt 1 discriminator 2
 1636 00fe 174B     		ldr	r3, .L89+4
 1637 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0102 5A1C     		adds	r2, r3, #1
 1639 0104 164B     		ldr	r3, .L89+8
 1640 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1641 0108 1846     		mov	r0, r3
 1642 010a 1649     		ldr	r1, .L89+12
 1643 010c 1346     		mov	r3, r2
 1644 010e DB00     		lsls	r3, r3, #3
 1645 0110 1344     		add	r3, r3, r2
 1646 0112 5B00     		lsls	r3, r3, #1
 1647 0114 1344     		add	r3, r3, r2
 1648 0116 0344     		add	r3, r3, r0
 1649 0118 51F82330 		ldr	r3, [r1, r3, lsl #2]
 297:main.c        ****         if(map[currentRow + 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 8 ||
 1650              		.loc 1 297 0 discriminator 2
 1651 011c 092B     		cmp	r3, #9
 1652 011e 10D0     		beq	.L87
 1653              		.loc 1 298 0
 1654 0120 0E4B     		ldr	r3, .L89+4
 1655 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1656 0124 5A1E     		subs	r2, r3, #1
 1657 0126 0E4B     		ldr	r3, .L89+8
 1658 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1659 012a 1846     		mov	r0, r3
 1660 012c 0D49     		ldr	r1, .L89+12
 1661 012e 1346     		mov	r3, r2
 1662 0130 DB00     		lsls	r3, r3, #3
 1663 0132 1344     		add	r3, r3, r2
 1664 0134 5B00     		lsls	r3, r3, #1
 1665 0136 1344     		add	r3, r3, r2
 1666 0138 0344     		add	r3, r3, r0
 1667 013a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1668 013e 092B     		cmp	r3, #9
 1669 0140 02D1     		bne	.L88
 1670              	.L87:
 299:main.c        ****             return currentDirection;// if correct location, break
 1671              		.loc 1 299 0
 1672 0142 094B     		ldr	r3, .L89+16
 1673 0144 1B68     		ldr	r3, [r3]
 1674 0146 05E0     		b	.L84
 1675              	.L88:
 300:main.c        ****         } else {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 36


 301:main.c        ****             return GetNextStep(); // need to increment location
 1676              		.loc 1 301 0
 1677 0148 FFF7FEFF 		bl	GetNextStep
 1678 014c 0346     		mov	r3, r0
 1679 014e 01E0     		b	.L84
 1680              	.L86:
 302:main.c        ****         }
 303:main.c        ****     }
 304:main.c        ****     
 305:main.c        ****     return currentDirection;
 1681              		.loc 1 305 0
 1682 0150 054B     		ldr	r3, .L89+16
 1683 0152 1B68     		ldr	r3, [r3]
 1684              	.L84:
 306:main.c        **** }
 1685              		.loc 1 306 0
 1686 0154 1846     		mov	r0, r3
 1687 0156 80BD     		pop	{r7, pc}
 1688              	.L90:
 1689              		.align	2
 1690              	.L89:
 1691 0158 00000000 		.word	currentOrientation
 1692 015c 00000000 		.word	currentRow
 1693 0160 00000000 		.word	currentCol
 1694 0164 00000000 		.word	map
 1695 0168 00000000 		.word	currentDirection
 1696              		.cfi_endproc
 1697              	.LFE74:
 1698              		.size	RecheckPosition, .-RecheckPosition
 1699              		.global	stoppedAfterTurn
 1700              		.bss
 1701              		.type	stoppedAfterTurn, %object
 1702              		.size	stoppedAfterTurn, 1
 1703              	stoppedAfterTurn:
 1704 0030 00       		.space	1
 1705              		.global	ignoreSensor
 1706              		.type	ignoreSensor, %object
 1707              		.size	ignoreSensor, 1
 1708              	ignoreSensor:
 1709 0031 00       		.space	1
 1710              		.global	__aeabi_fcmpge
 1711              		.section	.text.CheckSensorDirection,"ax",%progbits
 1712              		.align	2
 1713              		.global	CheckSensorDirection
 1714              		.thumb
 1715              		.thumb_func
 1716              		.type	CheckSensorDirection, %function
 1717              	CheckSensorDirection:
 1718              	.LFB75:
 307:main.c        **** 
 308:main.c        **** uint8 stoppedAfterTurn = 0;
 309:main.c        **** uint8 ignoreSensor = 0;
 310:main.c        **** 
 311:main.c        **** enum DirectionState CheckSensorDirection() {
 1719              		.loc 1 311 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 37


 1722              		@ frame_needed = 1, uses_anonymous_args = 0
 1723 0000 80B5     		push	{r7, lr}
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 7, -8
 1726              		.cfi_offset 14, -4
 1727 0002 82B0     		sub	sp, sp, #8
 1728              		.cfi_def_cfa_offset 16
 1729 0004 00AF     		add	r7, sp, #0
 1730              		.cfi_def_cfa_register 7
 312:main.c        ****     float blocksize;
 313:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1731              		.loc 1 313 0
 1732 0006 8C4B     		ldr	r3, .L123
 1733 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 000a 002B     		cmp	r3, #0
 1735 000c 03D0     		beq	.L92
 1736              		.loc 1 313 0 is_stmt 0 discriminator 1
 1737 000e 8A4B     		ldr	r3, .L123
 1738 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 0012 012B     		cmp	r3, #1
 1740 0014 03D1     		bne	.L93
 1741              	.L92:
 314:main.c        ****         blocksize = yBlocksize;
 1742              		.loc 1 314 0 is_stmt 1
 1743 0016 894B     		ldr	r3, .L123+4
 1744 0018 1B68     		ldr	r3, [r3]	@ float
 1745 001a 7B60     		str	r3, [r7, #4]	@ float
 1746 001c 02E0     		b	.L94
 1747              	.L93:
 315:main.c        ****     } else {
 316:main.c        ****         blocksize = xBlocksize;
 1748              		.loc 1 316 0
 1749 001e 884B     		ldr	r3, .L123+8
 1750 0020 1B68     		ldr	r3, [r3]	@ float
 1751 0022 7B60     		str	r3, [r7, #4]	@ float
 1752              	.L94:
 317:main.c        ****     }
 318:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1753              		.loc 1 318 0
 1754 0024 0523     		movs	r3, #5
 1755 0026 3B60     		str	r3, [r7]
 319:main.c        ****     
 320:main.c        ****     // GET NEXT STEP * ========================================
 321:main.c        ****     // intersection/ turn check
 322:main.c        ****     if((previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1756              		.loc 1 322 0
 1757 0028 864B     		ldr	r3, .L123+12
 1758 002a 1B68     		ldr	r3, [r3]
 1759 002c 002B     		cmp	r3, #0
 1760 002e 07D0     		beq	.L95
 1761              		.loc 1 322 0 is_stmt 0 discriminator 2
 1762 0030 844B     		ldr	r3, .L123+12
 1763 0032 1B68     		ldr	r3, [r3]
 1764 0034 032B     		cmp	r3, #3
 1765 0036 03D0     		beq	.L95
 1766              		.loc 1 322 0 discriminator 4
 1767 0038 824B     		ldr	r3, .L123+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 38


 1768 003a 1B68     		ldr	r3, [r3]
 1769 003c 042B     		cmp	r3, #4
 1770 003e 27D1     		bne	.L96
 1771              	.L95:
 1772              		.loc 1 322 0 discriminator 5
 1773 0040 814B     		ldr	r3, .L123+16
 1774 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1775 0044 002B     		cmp	r3, #0
 1776 0046 23D1     		bne	.L96
 1777              		.loc 1 322 0 discriminator 6
 1778 0048 804B     		ldr	r3, .L123+20
 1779 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 004c 002B     		cmp	r3, #0
 1781 004e 1FD1     		bne	.L96
 323:main.c        ****         && (previousDirection != ForwardAfterTurn && previousDirection != waitForLeftTurn && previo
 1782              		.loc 1 323 0 is_stmt 1
 1783 0050 7C4B     		ldr	r3, .L123+12
 1784 0052 1B68     		ldr	r3, [r3]
 1785 0054 0A2B     		cmp	r3, #10
 1786 0056 1BD0     		beq	.L96
 1787              		.loc 1 323 0 is_stmt 0 discriminator 1
 1788 0058 7A4B     		ldr	r3, .L123+12
 1789 005a 1B68     		ldr	r3, [r3]
 1790 005c 092B     		cmp	r3, #9
 1791 005e 17D0     		beq	.L96
 1792              		.loc 1 323 0 discriminator 2
 1793 0060 784B     		ldr	r3, .L123+12
 1794 0062 1B68     		ldr	r3, [r3]
 1795 0064 082B     		cmp	r3, #8
 1796 0066 13D0     		beq	.L96
 324:main.c        ****             previousDirection != TurnLeft && previousDirection != TurnRight)) {
 1797              		.loc 1 324 0 is_stmt 1 discriminator 3
 1798 0068 764B     		ldr	r3, .L123+12
 1799 006a 1B68     		ldr	r3, [r3]
 323:main.c        ****         && (previousDirection != ForwardAfterTurn && previousDirection != waitForLeftTurn && previo
 1800              		.loc 1 323 0 discriminator 3
 1801 006c 022B     		cmp	r3, #2
 1802 006e 0FD0     		beq	.L96
 1803              		.loc 1 324 0
 1804 0070 744B     		ldr	r3, .L123+12
 1805 0072 1B68     		ldr	r3, [r3]
 1806 0074 012B     		cmp	r3, #1
 1807 0076 0BD0     		beq	.L96
 325:main.c        **** 
 326:main.c        ****         directionState = RecheckPosition(); // get next step at each block
 1808              		.loc 1 326 0
 1809 0078 FFF7FEFF 		bl	RecheckPosition
 1810 007c 3860     		str	r0, [r7]
 327:main.c        ****         totalDistance = 0; // reset distance
 1811              		.loc 1 327 0
 1812 007e 744B     		ldr	r3, .L123+24
 1813 0080 4FF00002 		mov	r2, #0
 1814 0084 1A60     		str	r2, [r3]	@ float
 328:main.c        ****         previousDirection = directionState;
 1815              		.loc 1 328 0
 1816 0086 6F4A     		ldr	r2, .L123+12
 1817 0088 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 39


 1818 008a 1360     		str	r3, [r2]
 329:main.c        ****         return directionState;
 1819              		.loc 1 329 0
 1820 008c 3B68     		ldr	r3, [r7]
 1821 008e 33E1     		b	.L97
 1822              	.L96:
 330:main.c        ****     }
 331:main.c        ****     if (stoppedAfterTurn == 1) {
 1823              		.loc 1 331 0
 1824 0090 704B     		ldr	r3, .L123+28
 1825 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1826 0094 012B     		cmp	r3, #1
 1827 0096 19D1     		bne	.L98
 332:main.c        ****         if (stopBuffer <= 50) {
 1828              		.loc 1 332 0
 1829 0098 6F4B     		ldr	r3, .L123+32
 1830 009a 1B68     		ldr	r3, [r3]
 1831 009c 322B     		cmp	r3, #50
 1832 009e 06D8     		bhi	.L99
 333:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1833              		.loc 1 333 0
 1834 00a0 0523     		movs	r3, #5
 1835 00a2 3B60     		str	r3, [r7]
 334:main.c        ****             previousDirection = directionState;
 1836              		.loc 1 334 0
 1837 00a4 674A     		ldr	r2, .L123+12
 1838 00a6 3B68     		ldr	r3, [r7]
 1839 00a8 1360     		str	r3, [r2]
 335:main.c        ****             return directionState;
 1840              		.loc 1 335 0
 1841 00aa 3B68     		ldr	r3, [r7]
 1842 00ac 24E1     		b	.L97
 1843              	.L99:
 336:main.c        ****         }
 337:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1844              		.loc 1 337 0
 1845 00ae FFF7FEFF 		bl	GetNextStep
 1846 00b2 3860     		str	r0, [r7]
 338:main.c        ****         totalDistance = 0; // reset distance
 1847              		.loc 1 338 0
 1848 00b4 664B     		ldr	r3, .L123+24
 1849 00b6 4FF00002 		mov	r2, #0
 1850 00ba 1A60     		str	r2, [r3]	@ float
 339:main.c        ****         previousDirection = directionState;
 1851              		.loc 1 339 0
 1852 00bc 614A     		ldr	r2, .L123+12
 1853 00be 3B68     		ldr	r3, [r7]
 1854 00c0 1360     		str	r3, [r2]
 340:main.c        ****         stoppedAfterTurn = 0;
 1855              		.loc 1 340 0
 1856 00c2 644B     		ldr	r3, .L123+28
 1857 00c4 0022     		movs	r2, #0
 1858 00c6 1A70     		strb	r2, [r3]
 341:main.c        ****         return directionState;
 1859              		.loc 1 341 0
 1860 00c8 3B68     		ldr	r3, [r7]
 1861 00ca 15E1     		b	.L97
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 40


 1862              	.L98:
 342:main.c        ****     }
 343:main.c        ****     if (totalDistance >= blocksize) {
 1863              		.loc 1 343 0
 1864 00cc 604B     		ldr	r3, .L123+24
 1865 00ce 1B68     		ldr	r3, [r3]	@ float
 1866 00d0 7968     		ldr	r1, [r7, #4]	@ float
 1867 00d2 1846     		mov	r0, r3
 1868 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1869 00d8 0346     		mov	r3, r0
 1870 00da 002B     		cmp	r3, #0
 1871 00dc 0BD0     		beq	.L122
 344:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1872              		.loc 1 344 0
 1873 00de FFF7FEFF 		bl	GetNextStep
 1874 00e2 3860     		str	r0, [r7]
 345:main.c        ****         totalDistance = 0; // reset distance
 1875              		.loc 1 345 0
 1876 00e4 5A4B     		ldr	r3, .L123+24
 1877 00e6 4FF00002 		mov	r2, #0
 1878 00ea 1A60     		str	r2, [r3]	@ float
 346:main.c        ****         previousDirection = directionState;
 1879              		.loc 1 346 0
 1880 00ec 554A     		ldr	r2, .L123+12
 1881 00ee 3B68     		ldr	r3, [r7]
 1882 00f0 1360     		str	r3, [r2]
 347:main.c        ****         return directionState;
 1883              		.loc 1 347 0
 1884 00f2 3B68     		ldr	r3, [r7]
 1885 00f4 00E1     		b	.L97
 1886              	.L122:
 348:main.c        ****     }
 349:main.c        ****     
 350:main.c        ****     // STOP BUFFER * ========================================
 351:main.c        ****     if (previousDirection == Stop) {
 1887              		.loc 1 351 0
 1888 00f6 534B     		ldr	r3, .L123+12
 1889 00f8 1B68     		ldr	r3, [r3]
 1890 00fa 052B     		cmp	r3, #5
 1891 00fc 0AD1     		bne	.L102
 352:main.c        ****         if (stopBuffer <= 50) {
 1892              		.loc 1 352 0
 1893 00fe 564B     		ldr	r3, .L123+32
 1894 0100 1B68     		ldr	r3, [r3]
 1895 0102 322B     		cmp	r3, #50
 1896 0104 04D8     		bhi	.L103
 353:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1897              		.loc 1 353 0
 1898 0106 0523     		movs	r3, #5
 1899 0108 3B60     		str	r3, [r7]
 354:main.c        ****             previousDirection = directionState;
 1900              		.loc 1 354 0
 1901 010a 4E4A     		ldr	r2, .L123+12
 1902 010c 3B68     		ldr	r3, [r7]
 1903 010e 1360     		str	r3, [r2]
 1904              	.L103:
 355:main.c        ****         } else {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 41


 356:main.c        ****             //directionState = ForwardAfterTurn;
 357:main.c        ****         }
 358:main.c        ****         return directionState;
 1905              		.loc 1 358 0
 1906 0110 3B68     		ldr	r3, [r7]
 1907 0112 F1E0     		b	.L97
 1908              	.L102:
 359:main.c        ****     }
 360:main.c        **** 
 361:main.c        ****     // TURNING * ========================================    
 362:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1909              		.loc 1 362 0
 1910 0114 4B4B     		ldr	r3, .L123+12
 1911 0116 1B68     		ldr	r3, [r3]
 1912 0118 0A2B     		cmp	r3, #10
 1913 011a 0ED1     		bne	.L104
 363:main.c        **** 
 364:main.c        ****         if (s3 || s4) {
 1914              		.loc 1 364 0
 1915 011c 4A4B     		ldr	r3, .L123+16
 1916 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 0120 002B     		cmp	r3, #0
 1918 0122 03D1     		bne	.L105
 1919              		.loc 1 364 0 is_stmt 0 discriminator 1
 1920 0124 494B     		ldr	r3, .L123+20
 1921 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1922 0128 002B     		cmp	r3, #0
 1923 012a 06D0     		beq	.L104
 1924              	.L105:
 365:main.c        ****             //ignoreSensor = 0;
 366:main.c        ****             //usbPutString("Forward\n");
 367:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 1925              		.loc 1 367 0 is_stmt 1
 1926 012c 0023     		movs	r3, #0
 1927 012e 3B60     		str	r3, [r7]
 368:main.c        ****             previousDirection = directionState;
 1928              		.loc 1 368 0
 1929 0130 444A     		ldr	r2, .L123+12
 1930 0132 3B68     		ldr	r3, [r7]
 1931 0134 1360     		str	r3, [r2]
 369:main.c        ****             return directionState;
 1932              		.loc 1 369 0
 1933 0136 3B68     		ldr	r3, [r7]
 1934 0138 DEE0     		b	.L97
 1935              	.L104:
 370:main.c        ****         }
 371:main.c        ****     }
 372:main.c        **** 
 373:main.c        ****     if(previousDirection == waitForRightTurn) {
 1936              		.loc 1 373 0
 1937 013a 424B     		ldr	r3, .L123+12
 1938 013c 1B68     		ldr	r3, [r3]
 1939 013e 082B     		cmp	r3, #8
 1940 0140 11D1     		bne	.L106
 374:main.c        ****         //ignoreSensor = 0;
 375:main.c        ****         if(!s4) {
 1941              		.loc 1 375 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 42


 1942 0142 424B     		ldr	r3, .L123+20
 1943 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 0146 002B     		cmp	r3, #0
 1945 0148 06D1     		bne	.L107
 376:main.c        ****             //usbPutString("Turn Right\n");
 377:main.c        ****             directionState = TurnRight;
 1946              		.loc 1 377 0
 1947 014a 0123     		movs	r3, #1
 1948 014c 3B60     		str	r3, [r7]
 378:main.c        ****             previousDirection = directionState;
 1949              		.loc 1 378 0
 1950 014e 3D4A     		ldr	r2, .L123+12
 1951 0150 3B68     		ldr	r3, [r7]
 1952 0152 1360     		str	r3, [r2]
 379:main.c        ****             return directionState;
 1953              		.loc 1 379 0
 1954 0154 3B68     		ldr	r3, [r7]
 1955 0156 CFE0     		b	.L97
 1956              	.L107:
 380:main.c        ****         } else {
 381:main.c        ****             //usbPutString("Wait for Right Turn\n");
 382:main.c        ****             directionState = waitForRightTurn;
 1957              		.loc 1 382 0
 1958 0158 0823     		movs	r3, #8
 1959 015a 3B60     		str	r3, [r7]
 383:main.c        ****             previousDirection = directionState;
 1960              		.loc 1 383 0
 1961 015c 394A     		ldr	r2, .L123+12
 1962 015e 3B68     		ldr	r3, [r7]
 1963 0160 1360     		str	r3, [r2]
 384:main.c        ****             return directionState;
 1964              		.loc 1 384 0
 1965 0162 3B68     		ldr	r3, [r7]
 1966 0164 C8E0     		b	.L97
 1967              	.L106:
 385:main.c        ****         }
 386:main.c        ****     }
 387:main.c        **** 
 388:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1968              		.loc 1 388 0
 1969 0166 374B     		ldr	r3, .L123+12
 1970 0168 1B68     		ldr	r3, [r3]
 1971 016a 092B     		cmp	r3, #9
 1972 016c 11D1     		bne	.L108
 389:main.c        ****         //ignoreSensor = 0;
 390:main.c        ****         if(!s3) {
 1973              		.loc 1 390 0
 1974 016e 364B     		ldr	r3, .L123+16
 1975 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1976 0172 002B     		cmp	r3, #0
 1977 0174 06D1     		bne	.L109
 391:main.c        ****             //usbPutString("Turn Left\n");
 392:main.c        ****             directionState = TurnLeft;
 1978              		.loc 1 392 0
 1979 0176 0223     		movs	r3, #2
 1980 0178 3B60     		str	r3, [r7]
 393:main.c        ****             previousDirection = directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 43


 1981              		.loc 1 393 0
 1982 017a 324A     		ldr	r2, .L123+12
 1983 017c 3B68     		ldr	r3, [r7]
 1984 017e 1360     		str	r3, [r2]
 394:main.c        ****             return directionState;
 1985              		.loc 1 394 0
 1986 0180 3B68     		ldr	r3, [r7]
 1987 0182 B9E0     		b	.L97
 1988              	.L109:
 395:main.c        ****         } else {
 396:main.c        ****             //usbPutString("Wait for Left Turn\n");
 397:main.c        ****             directionState = waitForLeftTurn;
 1989              		.loc 1 397 0
 1990 0184 0923     		movs	r3, #9
 1991 0186 3B60     		str	r3, [r7]
 398:main.c        ****             previousDirection = directionState;
 1992              		.loc 1 398 0
 1993 0188 2E4A     		ldr	r2, .L123+12
 1994 018a 3B68     		ldr	r3, [r7]
 1995 018c 1360     		str	r3, [r2]
 399:main.c        ****             return directionState;
 1996              		.loc 1 399 0
 1997 018e 3B68     		ldr	r3, [r7]
 1998 0190 B2E0     		b	.L97
 1999              	.L108:
 400:main.c        ****         }
 401:main.c        ****     }
 402:main.c        **** 
 403:main.c        ****     if(previousDirection == TurnRight) {
 2000              		.loc 1 403 0
 2001 0192 2C4B     		ldr	r3, .L123+12
 2002 0194 1B68     		ldr	r3, [r3]
 2003 0196 012B     		cmp	r3, #1
 2004 0198 24D1     		bne	.L110
 404:main.c        ****         if(s5 && s6) {
 2005              		.loc 1 404 0
 2006 019a 304B     		ldr	r3, .L123+36
 2007 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 019e 002B     		cmp	r3, #0
 2009 01a0 0AD0     		beq	.L111
 2010              		.loc 1 404 0 is_stmt 0 discriminator 1
 2011 01a2 2F4B     		ldr	r3, .L123+40
 2012 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2013 01a6 002B     		cmp	r3, #0
 2014 01a8 06D0     		beq	.L111
 405:main.c        ****             //usbPutString("Turn Right\n");
 406:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 2015              		.loc 1 406 0 is_stmt 1
 2016 01aa 0123     		movs	r3, #1
 2017 01ac 3B60     		str	r3, [r7]
 407:main.c        ****             previousDirection = directionState;
 2018              		.loc 1 407 0
 2019 01ae 254A     		ldr	r2, .L123+12
 2020 01b0 3B68     		ldr	r3, [r7]
 2021 01b2 1360     		str	r3, [r2]
 408:main.c        ****             return directionState;
 2022              		.loc 1 408 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 44


 2023 01b4 3B68     		ldr	r3, [r7]
 2024 01b6 9FE0     		b	.L97
 2025              	.L111:
 409:main.c        ****         } 
 410:main.c        ****         else if (!s5 || !s6) {
 2026              		.loc 1 410 0
 2027 01b8 284B     		ldr	r3, .L123+36
 2028 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 01bc 002B     		cmp	r3, #0
 2030 01be 03D0     		beq	.L112
 2031              		.loc 1 410 0 is_stmt 0 discriminator 1
 2032 01c0 274B     		ldr	r3, .L123+40
 2033 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 01c4 002B     		cmp	r3, #0
 2035 01c6 0DD1     		bne	.L110
 2036              	.L112:
 411:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 412:main.c        ****             //usbPutString("Stop after Right Turn");
 413:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 2037              		.loc 1 413 0 is_stmt 1
 2038 01c8 0523     		movs	r3, #5
 2039 01ca 3B60     		str	r3, [r7]
 414:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 2040              		.loc 1 414 0
 2041 01cc 204B     		ldr	r3, .L123+24
 2042 01ce 4FF00002 		mov	r2, #0
 2043 01d2 1A60     		str	r2, [r3]	@ float
 415:main.c        ****             previousDirection = directionState;
 2044              		.loc 1 415 0
 2045 01d4 1B4A     		ldr	r2, .L123+12
 2046 01d6 3B68     		ldr	r3, [r7]
 2047 01d8 1360     		str	r3, [r2]
 416:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 2048              		.loc 1 416 0
 2049 01da 1E4B     		ldr	r3, .L123+28
 2050 01dc 0122     		movs	r2, #1
 2051 01de 1A70     		strb	r2, [r3]
 417:main.c        ****             return directionState;
 2052              		.loc 1 417 0
 2053 01e0 3B68     		ldr	r3, [r7]
 2054 01e2 89E0     		b	.L97
 2055              	.L110:
 418:main.c        ****         }
 419:main.c        ****     }    
 420:main.c        **** 
 421:main.c        ****     if(previousDirection == TurnLeft) {
 2056              		.loc 1 421 0
 2057 01e4 174B     		ldr	r3, .L123+12
 2058 01e6 1B68     		ldr	r3, [r3]
 2059 01e8 022B     		cmp	r3, #2
 2060 01ea 3BD1     		bne	.L113
 422:main.c        ****         if(s5 && s6) {
 2061              		.loc 1 422 0
 2062 01ec 1B4B     		ldr	r3, .L123+36
 2063 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2064 01f0 002B     		cmp	r3, #0
 2065 01f2 0AD0     		beq	.L114
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 45


 2066              		.loc 1 422 0 is_stmt 0 discriminator 1
 2067 01f4 1A4B     		ldr	r3, .L123+40
 2068 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2069 01f8 002B     		cmp	r3, #0
 2070 01fa 06D0     		beq	.L114
 423:main.c        ****             //usbPutString("Turn Left\n");
 424:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 2071              		.loc 1 424 0 is_stmt 1
 2072 01fc 0223     		movs	r3, #2
 2073 01fe 3B60     		str	r3, [r7]
 425:main.c        ****             previousDirection = directionState;
 2074              		.loc 1 425 0
 2075 0200 104A     		ldr	r2, .L123+12
 2076 0202 3B68     		ldr	r3, [r7]
 2077 0204 1360     		str	r3, [r2]
 426:main.c        ****             return directionState;
 2078              		.loc 1 426 0
 2079 0206 3B68     		ldr	r3, [r7]
 2080 0208 76E0     		b	.L97
 2081              	.L114:
 427:main.c        ****         } 
 428:main.c        ****         else if (!s5 || !s6) {
 2082              		.loc 1 428 0
 2083 020a 144B     		ldr	r3, .L123+36
 2084 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2085 020e 002B     		cmp	r3, #0
 2086 0210 03D0     		beq	.L115
 2087              		.loc 1 428 0 is_stmt 0 discriminator 1
 2088 0212 134B     		ldr	r3, .L123+40
 2089 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2090 0216 002B     		cmp	r3, #0
 2091 0218 24D1     		bne	.L113
 2092              	.L115:
 429:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 430:main.c        ****            // usbPutString("Stop after Left Turn\n");
 431:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 2093              		.loc 1 431 0 is_stmt 1
 2094 021a 0523     		movs	r3, #5
 2095 021c 3B60     		str	r3, [r7]
 432:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 2096              		.loc 1 432 0
 2097 021e 0C4B     		ldr	r3, .L123+24
 2098 0220 4FF00002 		mov	r2, #0
 2099 0224 1A60     		str	r2, [r3]	@ float
 433:main.c        ****             previousDirection = directionState;
 2100              		.loc 1 433 0
 2101 0226 074A     		ldr	r2, .L123+12
 2102 0228 3B68     		ldr	r3, [r7]
 2103 022a 1360     		str	r3, [r2]
 434:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 2104              		.loc 1 434 0
 2105 022c 094B     		ldr	r3, .L123+28
 2106 022e 0122     		movs	r2, #1
 2107 0230 1A70     		strb	r2, [r3]
 435:main.c        ****             return directionState;
 2108              		.loc 1 435 0
 2109 0232 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 46


 2110 0234 60E0     		b	.L97
 2111              	.L124:
 2112 0236 00BF     		.align	2
 2113              	.L123:
 2114 0238 00000000 		.word	currentOrientation
 2115 023c 00000000 		.word	yBlocksize
 2116 0240 00000000 		.word	xBlocksize
 2117 0244 00000000 		.word	previousDirection
 2118 0248 00000000 		.word	s3
 2119 024c 00000000 		.word	s4
 2120 0250 00000000 		.word	totalDistance
 2121 0254 00000000 		.word	stoppedAfterTurn
 2122 0258 00000000 		.word	stopBuffer
 2123 025c 00000000 		.word	s5
 2124 0260 00000000 		.word	s6
 2125              	.L113:
 436:main.c        ****         }
 437:main.c        ****     }
 438:main.c        ****     
 439:main.c        ****     // COURSE CORRECTION * ========================================
 440:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 2126              		.loc 1 440 0
 2127 0264 264B     		ldr	r3, .L125
 2128 0266 1B68     		ldr	r3, [r3]
 2129 0268 002B     		cmp	r3, #0
 2130 026a 07D0     		beq	.L116
 2131              		.loc 1 440 0 is_stmt 0 discriminator 1
 2132 026c 244B     		ldr	r3, .L125
 2133 026e 1B68     		ldr	r3, [r3]
 2134 0270 032B     		cmp	r3, #3
 2135 0272 03D0     		beq	.L116
 2136              		.loc 1 440 0 discriminator 2
 2137 0274 224B     		ldr	r3, .L125
 2138 0276 1B68     		ldr	r3, [r3]
 2139 0278 042B     		cmp	r3, #4
 2140 027a 15D1     		bne	.L117
 2141              	.L116:
 441:main.c        ****         //ignoreSensor = 0;
 442:main.c        ****         if(s6) {
 2142              		.loc 1 442 0 is_stmt 1
 2143 027c 214B     		ldr	r3, .L125+4
 2144 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2145 0280 002B     		cmp	r3, #0
 2146 0282 06D0     		beq	.L118
 443:main.c        ****             //usbPutString("Adjust to the left\n");
 444:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 2147              		.loc 1 444 0
 2148 0284 0323     		movs	r3, #3
 2149 0286 3B60     		str	r3, [r7]
 445:main.c        ****             previousDirection = directionState;
 2150              		.loc 1 445 0
 2151 0288 1D4A     		ldr	r2, .L125
 2152 028a 3B68     		ldr	r3, [r7]
 2153 028c 1360     		str	r3, [r2]
 446:main.c        ****             return directionState;
 2154              		.loc 1 446 0
 2155 028e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 47


 2156 0290 32E0     		b	.L97
 2157              	.L118:
 447:main.c        ****         }
 448:main.c        ****         if(s5) {
 2158              		.loc 1 448 0
 2159 0292 1D4B     		ldr	r3, .L125+8
 2160 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2161 0296 002B     		cmp	r3, #0
 2162 0298 06D0     		beq	.L117
 449:main.c        ****             //usbPutString("Adjust to the right\n");
 450:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 2163              		.loc 1 450 0
 2164 029a 0423     		movs	r3, #4
 2165 029c 3B60     		str	r3, [r7]
 451:main.c        ****             previousDirection = directionState;
 2166              		.loc 1 451 0
 2167 029e 184A     		ldr	r2, .L125
 2168 02a0 3B68     		ldr	r3, [r7]
 2169 02a2 1360     		str	r3, [r2]
 452:main.c        ****             return directionState;
 2170              		.loc 1 452 0
 2171 02a4 3B68     		ldr	r3, [r7]
 2172 02a6 27E0     		b	.L97
 2173              	.L117:
 453:main.c        ****         }
 454:main.c        ****     }
 455:main.c        ****     
 456:main.c        ****     // FORWARD * ========================================
 457:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 2174              		.loc 1 457 0
 2175 02a8 184B     		ldr	r3, .L125+12
 2176 02aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2177 02ac 002B     		cmp	r3, #0
 2178 02ae 12D0     		beq	.L119
 2179              		.loc 1 457 0 is_stmt 0 discriminator 1
 2180 02b0 174B     		ldr	r3, .L125+16
 2181 02b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2182 02b4 002B     		cmp	r3, #0
 2183 02b6 0ED0     		beq	.L119
 2184              		.loc 1 457 0 discriminator 2
 2185 02b8 134B     		ldr	r3, .L125+8
 2186 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2187 02bc 002B     		cmp	r3, #0
 2188 02be 0AD1     		bne	.L119
 2189              		.loc 1 457 0 discriminator 3
 2190 02c0 104B     		ldr	r3, .L125+4
 2191 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 02c4 002B     		cmp	r3, #0
 2193 02c6 06D1     		bne	.L119
 458:main.c        ****         //usbPutString("Forward\n");
 459:main.c        ****         directionState = Forward;
 2194              		.loc 1 459 0 is_stmt 1
 2195 02c8 0023     		movs	r3, #0
 2196 02ca 3B60     		str	r3, [r7]
 460:main.c        ****         previousDirection = directionState;
 2197              		.loc 1 460 0
 2198 02cc 0C4A     		ldr	r2, .L125
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 48


 2199 02ce 3B68     		ldr	r3, [r7]
 2200 02d0 1360     		str	r3, [r2]
 461:main.c        ****         return directionState;   
 2201              		.loc 1 461 0
 2202 02d2 3B68     		ldr	r3, [r7]
 2203 02d4 10E0     		b	.L97
 2204              	.L119:
 462:main.c        ****     }
 463:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 464:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
 465:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 466:main.c        ****         return directionState;
 467:main.c        ****     }
 468:main.c        **** 
 469:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 470:main.c        ****         //usbPutString("Wait For Turn\n");
 471:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 472:main.c        ****         return directionState;
 473:main.c        ****     }*/
 474:main.c        **** 
 475:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 476:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 477:main.c        ****     if (previousDirection == Unknown) {
 2205              		.loc 1 477 0
 2206 02d6 0A4B     		ldr	r3, .L125
 2207 02d8 1B68     		ldr	r3, [r3]
 2208 02da 062B     		cmp	r3, #6
 2209 02dc 06D1     		bne	.L120
 478:main.c        ****         directionState = Forward;
 2210              		.loc 1 478 0
 2211 02de 0023     		movs	r3, #0
 2212 02e0 3B60     		str	r3, [r7]
 479:main.c        ****         previousDirection = directionState;
 2213              		.loc 1 479 0
 2214 02e2 074A     		ldr	r2, .L125
 2215 02e4 3B68     		ldr	r3, [r7]
 2216 02e6 1360     		str	r3, [r2]
 480:main.c        ****         return directionState;
 2217              		.loc 1 480 0
 2218 02e8 3B68     		ldr	r3, [r7]
 2219 02ea 05E0     		b	.L97
 2220              	.L120:
 481:main.c        ****     }
 482:main.c        **** 
 483:main.c        ****     // Possible reason
 484:main.c        ****     previousDirection = currentDirection;
 2221              		.loc 1 484 0
 2222 02ec 094B     		ldr	r3, .L125+20
 2223 02ee 1B68     		ldr	r3, [r3]
 2224 02f0 034A     		ldr	r2, .L125
 2225 02f2 1360     		str	r3, [r2]
 485:main.c        ****     return previousDirection;
 2226              		.loc 1 485 0
 2227 02f4 024B     		ldr	r3, .L125
 2228 02f6 1B68     		ldr	r3, [r3]
 2229              	.L97:
 486:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 49


 2230              		.loc 1 486 0
 2231 02f8 1846     		mov	r0, r3
 2232 02fa 0837     		adds	r7, r7, #8
 2233              		.cfi_def_cfa_offset 8
 2234 02fc BD46     		mov	sp, r7
 2235              		.cfi_def_cfa_register 13
 2236              		@ sp needed
 2237 02fe 80BD     		pop	{r7, pc}
 2238              	.L126:
 2239              		.align	2
 2240              	.L125:
 2241 0300 00000000 		.word	previousDirection
 2242 0304 00000000 		.word	s6
 2243 0308 00000000 		.word	s5
 2244 030c 00000000 		.word	s3
 2245 0310 00000000 		.word	s4
 2246 0314 00000000 		.word	currentDirection
 2247              		.cfi_endproc
 2248              	.LFE75:
 2249              		.size	CheckSensorDirection, .-CheckSensorDirection
 2250              		.section	.text.SetRobotMovement,"ax",%progbits
 2251              		.align	2
 2252              		.global	SetRobotMovement
 2253              		.thumb
 2254              		.thumb_func
 2255              		.type	SetRobotMovement, %function
 2256              	SetRobotMovement:
 2257              	.LFB76:
 487:main.c        **** 
 488:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 489:main.c        **** void SetRobotMovement() {
 2258              		.loc 1 489 0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 1, uses_anonymous_args = 0
 2262 0000 80B5     		push	{r7, lr}
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 7, -8
 2265              		.cfi_offset 14, -4
 2266 0002 00AF     		add	r7, sp, #0
 2267              		.cfi_def_cfa_register 7
 490:main.c        ****     currentDirection = CheckSensorDirection();   
 2268              		.loc 1 490 0
 2269 0004 FFF7FEFF 		bl	CheckSensorDirection
 2270 0008 0246     		mov	r2, r0
 2271 000a 224B     		ldr	r3, .L144
 2272 000c 1A60     		str	r2, [r3]
 491:main.c        ****     
 492:main.c        ****     switch (currentDirection) {
 2273              		.loc 1 492 0
 2274 000e 214B     		ldr	r3, .L144
 2275 0010 1B68     		ldr	r3, [r3]
 2276 0012 0B2B     		cmp	r3, #11
 2277 0014 3CD8     		bhi	.L142
 2278 0016 01A2     		adr	r2, .L130
 2279 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2280              		.p2align 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 50


 2281              	.L130:
 2282 001c 4D000000 		.word	.L129+1
 2283 0020 53000000 		.word	.L131+1
 2284 0024 59000000 		.word	.L132+1
 2285 0028 65000000 		.word	.L133+1
 2286 002c 5F000000 		.word	.L134+1
 2287 0030 6B000000 		.word	.L135+1
 2288 0034 8F000000 		.word	.L143+1
 2289 0038 71000000 		.word	.L137+1
 2290 003c 89000000 		.word	.L138+1
 2291 0040 83000000 		.word	.L139+1
 2292 0044 77000000 		.word	.L140+1
 2293 0048 7D000000 		.word	.L141+1
 2294              		.p2align 1
 2295              	.L129:
 493:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 494:main.c        ****         case Forward:
 495:main.c        ****             moveForward();
 2296              		.loc 1 495 0
 2297 004c FFF7FEFF 		bl	moveForward
 496:main.c        ****             break;
 2298              		.loc 1 496 0
 2299 0050 1EE0     		b	.L128
 2300              	.L131:
 497:main.c        ****         case TurnRight:
 498:main.c        ****             turnRight();
 2301              		.loc 1 498 0
 2302 0052 FFF7FEFF 		bl	turnRight
 499:main.c        ****             break;
 2303              		.loc 1 499 0
 2304 0056 1BE0     		b	.L128
 2305              	.L132:
 500:main.c        ****         case TurnLeft:
 501:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2306              		.loc 1 501 0
 2307 0058 FFF7FEFF 		bl	turnLeft
 502:main.c        ****             break;
 2308              		.loc 1 502 0
 2309 005c 18E0     		b	.L128
 2310              	.L134:
 503:main.c        ****         case AdjustToTheRight:
 504:main.c        ****             adjustRight();
 2311              		.loc 1 504 0
 2312 005e FFF7FEFF 		bl	adjustRight
 505:main.c        ****             break;
 2313              		.loc 1 505 0
 2314 0062 15E0     		b	.L128
 2315              	.L133:
 506:main.c        ****         case AdjustToTheLeft:
 507:main.c        ****             adjustLeft();
 2316              		.loc 1 507 0
 2317 0064 FFF7FEFF 		bl	adjustLeft
 508:main.c        ****             break;
 2318              		.loc 1 508 0
 2319 0068 12E0     		b	.L128
 2320              	.L135:
 509:main.c        ****         case Stop:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 51


 510:main.c        ****             stopMoving();
 2321              		.loc 1 510 0
 2322 006a FFF7FEFF 		bl	stopMoving
 511:main.c        ****             break;
 2323              		.loc 1 511 0
 2324 006e 0FE0     		b	.L128
 2325              	.L137:
 512:main.c        ****         case waitForTurn:
 513:main.c        ****             moveForward(); 
 2326              		.loc 1 513 0
 2327 0070 FFF7FEFF 		bl	moveForward
 514:main.c        ****             break;
 2328              		.loc 1 514 0
 2329 0074 0CE0     		b	.L128
 2330              	.L140:
 515:main.c        ****         case ForwardAfterTurn:
 516:main.c        ****             moveForward();
 2331              		.loc 1 516 0
 2332 0076 FFF7FEFF 		bl	moveForward
 517:main.c        ****             break;
 2333              		.loc 1 517 0
 2334 007a 09E0     		b	.L128
 2335              	.L141:
 518:main.c        ****         case Backward:
 519:main.c        ****             moveBackward();
 2336              		.loc 1 519 0
 2337 007c FFF7FEFF 		bl	moveBackward
 520:main.c        ****             break;
 2338              		.loc 1 520 0
 2339 0080 06E0     		b	.L128
 2340              	.L139:
 521:main.c        ****         case waitForLeftTurn:
 522:main.c        ****             moveForward();
 2341              		.loc 1 522 0
 2342 0082 FFF7FEFF 		bl	moveForward
 523:main.c        ****             break;
 2343              		.loc 1 523 0
 2344 0086 03E0     		b	.L128
 2345              	.L138:
 524:main.c        ****         case waitForRightTurn:
 525:main.c        ****             moveForward();
 2346              		.loc 1 525 0
 2347 0088 FFF7FEFF 		bl	moveForward
 526:main.c        ****             break;
 2348              		.loc 1 526 0
 2349 008c 00E0     		b	.L128
 2350              	.L143:
 527:main.c        ****         case Unknown:
 528:main.c        ****             // UNKNOWN CONFIGURATION
 529:main.c        ****             break;  
 2351              		.loc 1 529 0
 2352 008e 00BF     		nop
 2353              	.L128:
 2354              	.L142:
 530:main.c        ****     }
 531:main.c        **** }...
 2355              		.loc 1 531 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 52


 2356 0090 00BF     		nop
 2357 0092 80BD     		pop	{r7, pc}
 2358              	.L145:
 2359              		.align	2
 2360              	.L144:
 2361 0094 00000000 		.word	currentDirection
 2362              		.cfi_endproc
 2363              	.LFE76:
 2364              		.size	SetRobotMovement, .-SetRobotMovement
 2365              		.text
 2366              	.Letext0:
 2367              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2368              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2369              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2370              		.file 5 "vars.h"
 2371              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2372              		.file 7 "map.h"
 2373              		.section	.debug_info,"",%progbits
 2374              	.Ldebug_info0:
 2375 0000 B4060000 		.4byte	0x6b4
 2376 0004 0400     		.2byte	0x4
 2377 0006 00000000 		.4byte	.Ldebug_abbrev0
 2378 000a 04       		.byte	0x4
 2379 000b 01       		.uleb128 0x1
 2380 000c C0000000 		.4byte	.LASF106
 2381 0010 0C       		.byte	0xc
 2382 0011 A3040000 		.4byte	.LASF107
 2383 0015 E8030000 		.4byte	.LASF108
 2384 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2385 001d 00000000 		.4byte	0
 2386 0021 00000000 		.4byte	.Ldebug_line0
 2387 0025 02       		.uleb128 0x2
 2388 0026 01       		.byte	0x1
 2389 0027 06       		.byte	0x6
 2390 0028 0F030000 		.4byte	.LASF0
 2391 002c 02       		.uleb128 0x2
 2392 002d 01       		.byte	0x1
 2393 002e 08       		.byte	0x8
 2394 002f 7D020000 		.4byte	.LASF1
 2395 0033 02       		.uleb128 0x2
 2396 0034 02       		.byte	0x2
 2397 0035 05       		.byte	0x5
 2398 0036 7C000000 		.4byte	.LASF2
 2399 003a 02       		.uleb128 0x2
 2400 003b 02       		.byte	0x2
 2401 003c 07       		.byte	0x7
 2402 003d A4030000 		.4byte	.LASF3
 2403 0041 03       		.uleb128 0x3
 2404 0042 06050000 		.4byte	.LASF12
 2405 0046 02       		.byte	0x2
 2406 0047 3F       		.byte	0x3f
 2407 0048 4C000000 		.4byte	0x4c
 2408 004c 02       		.uleb128 0x2
 2409 004d 04       		.byte	0x4
 2410 004e 05       		.byte	0x5
 2411 004f D7030000 		.4byte	.LASF4
 2412 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 53


 2413 0054 04       		.byte	0x4
 2414 0055 07       		.byte	0x7
 2415 0056 AA040000 		.4byte	.LASF5
 2416 005a 02       		.uleb128 0x2
 2417 005b 08       		.byte	0x8
 2418 005c 05       		.byte	0x5
 2419 005d DA010000 		.4byte	.LASF6
 2420 0061 02       		.uleb128 0x2
 2421 0062 08       		.byte	0x8
 2422 0063 07       		.byte	0x7
 2423 0064 23030000 		.4byte	.LASF7
 2424 0068 04       		.uleb128 0x4
 2425 0069 04       		.byte	0x4
 2426 006a 05       		.byte	0x5
 2427 006b 696E7400 		.ascii	"int\000"
 2428 006f 02       		.uleb128 0x2
 2429 0070 04       		.byte	0x4
 2430 0071 07       		.byte	0x7
 2431 0072 4B030000 		.4byte	.LASF8
 2432 0076 02       		.uleb128 0x2
 2433 0077 08       		.byte	0x8
 2434 0078 04       		.byte	0x4
 2435 0079 A3020000 		.4byte	.LASF9
 2436 007d 02       		.uleb128 0x2
 2437 007e 04       		.byte	0x4
 2438 007f 07       		.byte	0x7
 2439 0080 93000000 		.4byte	.LASF10
 2440 0084 02       		.uleb128 0x2
 2441 0085 01       		.byte	0x1
 2442 0086 08       		.byte	0x8
 2443 0087 D2030000 		.4byte	.LASF11
 2444 008b 03       		.uleb128 0x3
 2445 008c 1B030000 		.4byte	.LASF13
 2446 0090 03       		.byte	0x3
 2447 0091 2C       		.byte	0x2c
 2448 0092 41000000 		.4byte	0x41
 2449 0096 05       		.uleb128 0x5
 2450 0097 AA010000 		.4byte	.LASF14
 2451 009b 04       		.byte	0x4
 2452 009c E701     		.2byte	0x1e7
 2453 009e 2C000000 		.4byte	0x2c
 2454 00a2 05       		.uleb128 0x5
 2455 00a3 8C010000 		.4byte	.LASF15
 2456 00a7 04       		.byte	0x4
 2457 00a8 E801     		.2byte	0x1e8
 2458 00aa 3A000000 		.4byte	0x3a
 2459 00ae 05       		.uleb128 0x5
 2460 00af 9C040000 		.4byte	.LASF16
 2461 00b3 04       		.byte	0x4
 2462 00b4 E901     		.2byte	0x1e9
 2463 00b6 53000000 		.4byte	0x53
 2464 00ba 05       		.uleb128 0x5
 2465 00bb E8010000 		.4byte	.LASF17
 2466 00bf 04       		.byte	0x4
 2467 00c0 EA01     		.2byte	0x1ea
 2468 00c2 25000000 		.4byte	0x25
 2469 00c6 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 54


 2470 00c7 A4010000 		.4byte	.LASF18
 2471 00cb 04       		.byte	0x4
 2472 00cc EB01     		.2byte	0x1eb
 2473 00ce 33000000 		.4byte	0x33
 2474 00d2 02       		.uleb128 0x2
 2475 00d3 04       		.byte	0x4
 2476 00d4 04       		.byte	0x4
 2477 00d5 C2010000 		.4byte	.LASF19
 2478 00d9 02       		.uleb128 0x2
 2479 00da 08       		.byte	0x8
 2480 00db 04       		.byte	0x4
 2481 00dc C5040000 		.4byte	.LASF20
 2482 00e0 06       		.uleb128 0x6
 2483 00e1 B7030000 		.4byte	.LASF109
 2484 00e5 20       		.byte	0x20
 2485 00e6 05       		.byte	0x5
 2486 00e7 28       		.byte	0x28
 2487 00e8 B9010000 		.4byte	0x1b9
 2488 00ec 07       		.uleb128 0x7
 2489 00ed C5050000 		.4byte	.LASF21
 2490 00f1 05       		.byte	0x5
 2491 00f2 2A       		.byte	0x2a
 2492 00f3 BA000000 		.4byte	0xba
 2493 00f7 00       		.byte	0
 2494 00f8 07       		.uleb128 0x7
 2495 00f9 93010000 		.4byte	.LASF22
 2496 00fd 05       		.byte	0x5
 2497 00fe 2B       		.byte	0x2b
 2498 00ff 96000000 		.4byte	0x96
 2499 0103 01       		.byte	0x1
 2500 0104 07       		.uleb128 0x7
 2501 0105 80040000 		.4byte	.LASF23
 2502 0109 05       		.byte	0x5
 2503 010a 2C       		.byte	0x2c
 2504 010b C6000000 		.4byte	0xc6
 2505 010f 02       		.byte	0x2
 2506 0110 07       		.uleb128 0x7
 2507 0111 75050000 		.4byte	.LASF24
 2508 0115 05       		.byte	0x5
 2509 0116 2D       		.byte	0x2d
 2510 0117 C6000000 		.4byte	0xc6
 2511 011b 04       		.byte	0x4
 2512 011c 07       		.uleb128 0x7
 2513 011d 1D050000 		.4byte	.LASF25
 2514 0121 05       		.byte	0x5
 2515 0122 2E       		.byte	0x2e
 2516 0123 C6000000 		.4byte	0xc6
 2517 0127 06       		.byte	0x6
 2518 0128 07       		.uleb128 0x7
 2519 0129 1C020000 		.4byte	.LASF26
 2520 012d 05       		.byte	0x5
 2521 012e 2F       		.byte	0x2f
 2522 012f C6000000 		.4byte	0xc6
 2523 0133 08       		.byte	0x8
 2524 0134 07       		.uleb128 0x7
 2525 0135 15050000 		.4byte	.LASF27
 2526 0139 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 55


 2527 013a 30       		.byte	0x30
 2528 013b C6000000 		.4byte	0xc6
 2529 013f 0A       		.byte	0xa
 2530 0140 07       		.uleb128 0x7
 2531 0141 E4020000 		.4byte	.LASF28
 2532 0145 05       		.byte	0x5
 2533 0146 31       		.byte	0x31
 2534 0147 C6000000 		.4byte	0xc6
 2535 014b 0C       		.byte	0xc
 2536 014c 07       		.uleb128 0x7
 2537 014d 0F020000 		.4byte	.LASF29
 2538 0151 05       		.byte	0x5
 2539 0152 32       		.byte	0x32
 2540 0153 C6000000 		.4byte	0xc6
 2541 0157 0E       		.byte	0xe
 2542 0158 07       		.uleb128 0x7
 2543 0159 07030000 		.4byte	.LASF30
 2544 015d 05       		.byte	0x5
 2545 015e 33       		.byte	0x33
 2546 015f C6000000 		.4byte	0xc6
 2547 0163 10       		.byte	0x10
 2548 0164 07       		.uleb128 0x7
 2549 0165 47040000 		.4byte	.LASF31
 2550 0169 05       		.byte	0x5
 2551 016a 34       		.byte	0x34
 2552 016b C6000000 		.4byte	0xc6
 2553 016f 12       		.byte	0x12
 2554 0170 07       		.uleb128 0x7
 2555 0171 5C040000 		.4byte	.LASF32
 2556 0175 05       		.byte	0x5
 2557 0176 35       		.byte	0x35
 2558 0177 C6000000 		.4byte	0xc6
 2559 017b 14       		.byte	0x14
 2560 017c 07       		.uleb128 0x7
 2561 017d B0010000 		.4byte	.LASF33
 2562 0181 05       		.byte	0x5
 2563 0182 36       		.byte	0x36
 2564 0183 C6000000 		.4byte	0xc6
 2565 0187 16       		.byte	0x16
 2566 0188 07       		.uleb128 0x7
 2567 0189 74000000 		.4byte	.LASF34
 2568 018d 05       		.byte	0x5
 2569 018e 37       		.byte	0x37
 2570 018f C6000000 		.4byte	0xc6
 2571 0193 18       		.byte	0x18
 2572 0194 07       		.uleb128 0x7
 2573 0195 07020000 		.4byte	.LASF35
 2574 0199 05       		.byte	0x5
 2575 019a 38       		.byte	0x38
 2576 019b C6000000 		.4byte	0xc6
 2577 019f 1A       		.byte	0x1a
 2578 01a0 07       		.uleb128 0x7
 2579 01a1 8F030000 		.4byte	.LASF36
 2580 01a5 05       		.byte	0x5
 2581 01a6 39       		.byte	0x39
 2582 01a7 C6000000 		.4byte	0xc6
 2583 01ab 1C       		.byte	0x1c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 56


 2584 01ac 07       		.uleb128 0x7
 2585 01ad 4F040000 		.4byte	.LASF37
 2586 01b1 05       		.byte	0x5
 2587 01b2 3A       		.byte	0x3a
 2588 01b3 C6000000 		.4byte	0xc6
 2589 01b7 1E       		.byte	0x1e
 2590 01b8 00       		.byte	0
 2591 01b9 08       		.uleb128 0x8
 2592 01ba A7000000 		.4byte	.LASF50
 2593 01be 04       		.byte	0x4
 2594 01bf 6F000000 		.4byte	0x6f
 2595 01c3 01       		.byte	0x1
 2596 01c4 28       		.byte	0x28
 2597 01c5 12020000 		.4byte	0x212
 2598 01c9 09       		.uleb128 0x9
 2599 01ca E0030000 		.4byte	.LASF38
 2600 01ce 00       		.byte	0
 2601 01cf 09       		.uleb128 0x9
 2602 01d0 8B040000 		.4byte	.LASF39
 2603 01d4 01       		.byte	0x1
 2604 01d5 09       		.uleb128 0x9
 2605 01d6 1D000000 		.4byte	.LASF40
 2606 01da 02       		.byte	0x2
 2607 01db 09       		.uleb128 0x9
 2608 01dc 7C010000 		.4byte	.LASF41
 2609 01e0 03       		.byte	0x3
 2610 01e1 09       		.uleb128 0x9
 2611 01e2 3A030000 		.4byte	.LASF42
 2612 01e6 04       		.byte	0x4
 2613 01e7 09       		.uleb128 0x9
 2614 01e8 10050000 		.4byte	.LASF43
 2615 01ec 05       		.byte	0x5
 2616 01ed 09       		.uleb128 0x9
 2617 01ee CC040000 		.4byte	.LASF44
 2618 01f2 06       		.byte	0x6
 2619 01f3 09       		.uleb128 0x9
 2620 01f4 5A000000 		.4byte	.LASF45
 2621 01f8 07       		.byte	0x7
 2622 01f9 09       		.uleb128 0x9
 2623 01fa 53010000 		.4byte	.LASF46
 2624 01fe 08       		.byte	0x8
 2625 01ff 09       		.uleb128 0x9
 2626 0200 3A050000 		.4byte	.LASF47
 2627 0204 09       		.byte	0x9
 2628 0205 09       		.uleb128 0x9
 2629 0206 3D000000 		.4byte	.LASF48
 2630 020a 0A       		.byte	0xa
 2631 020b 09       		.uleb128 0x9
 2632 020c BC040000 		.4byte	.LASF49
 2633 0210 0B       		.byte	0xb
 2634 0211 00       		.byte	0
 2635 0212 08       		.uleb128 0x8
 2636 0213 CA050000 		.4byte	.LASF51
 2637 0217 01       		.byte	0x1
 2638 0218 2C000000 		.4byte	0x2c
 2639 021c 01       		.byte	0x1
 2640 021d 2A       		.byte	0x2a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 57


 2641 021e 3A020000 		.4byte	0x23a
 2642 0222 0A       		.uleb128 0xa
 2643 0223 557000   		.ascii	"Up\000"
 2644 0226 00       		.byte	0
 2645 0227 09       		.uleb128 0x9
 2646 0228 A0050000 		.4byte	.LASF52
 2647 022c 01       		.byte	0x1
 2648 022d 09       		.uleb128 0x9
 2649 022e 38020000 		.4byte	.LASF53
 2650 0232 02       		.byte	0x2
 2651 0233 09       		.uleb128 0x9
 2652 0234 C8010000 		.4byte	.LASF54
 2653 0238 03       		.byte	0x3
 2654 0239 00       		.byte	0
 2655 023a 0B       		.uleb128 0xb
 2656 023b 99010000 		.4byte	.LASF62
 2657 023f 01       		.byte	0x1
 2658 0240 46       		.byte	0x46
 2659 0241 00000000 		.4byte	.LFB64
 2660 0245 F4000000 		.4byte	.LFE64-.LFB64
 2661 0249 01       		.uleb128 0x1
 2662 024a 9C       		.byte	0x9c
 2663 024b 68020000 		.4byte	0x268
 2664 024f 0C       		.uleb128 0xc
 2665 0250 58000000 		.4byte	.LBB2
 2666 0254 62000000 		.4byte	.LBE2-.LBB2
 2667 0258 0D       		.uleb128 0xd
 2668 0259 CE010000 		.4byte	.LASF61
 2669 025d 01       		.byte	0x1
 2670 025e 54       		.byte	0x54
 2671 025f D2000000 		.4byte	0xd2
 2672 0263 02       		.uleb128 0x2
 2673 0264 91       		.byte	0x91
 2674 0265 6C       		.sleb128 -20
 2675 0266 00       		.byte	0
 2676 0267 00       		.byte	0
 2677 0268 0E       		.uleb128 0xe
 2678 0269 DF040000 		.4byte	.LASF55
 2679 026d 01       		.byte	0x1
 2680 026e 5F       		.byte	0x5f
 2681 026f 00000000 		.4byte	.LFB65
 2682 0273 18000000 		.4byte	.LFE65-.LFB65
 2683 0277 01       		.uleb128 0x1
 2684 0278 9C       		.byte	0x9c
 2685 0279 0E       		.uleb128 0xe
 2686 027a 70010000 		.4byte	.LASF56
 2687 027e 01       		.byte	0x1
 2688 027f 65       		.byte	0x65
 2689 0280 00000000 		.4byte	.LFB66
 2690 0284 18000000 		.4byte	.LFE66-.LFB66
 2691 0288 01       		.uleb128 0x1
 2692 0289 9C       		.byte	0x9c
 2693 028a 0E       		.uleb128 0xe
 2694 028b 98030000 		.4byte	.LASF57
 2695 028f 01       		.byte	0x1
 2696 0290 6B       		.byte	0x6b
 2697 0291 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 58


 2698 0295 18000000 		.4byte	.LFE67-.LFB67
 2699 0299 01       		.uleb128 0x1
 2700 029a 9C       		.byte	0x9c
 2701 029b 0E       		.uleb128 0xe
 2702 029c 00000000 		.4byte	.LASF58
 2703 02a0 01       		.byte	0x1
 2704 02a1 71       		.byte	0x71
 2705 02a2 00000000 		.4byte	.LFB68
 2706 02a6 18000000 		.4byte	.LFE68-.LFB68
 2707 02aa 01       		.uleb128 0x1
 2708 02ab 9C       		.byte	0x9c
 2709 02ac 0F       		.uleb128 0xf
 2710 02ad 82030000 		.4byte	.LASF59
 2711 02b1 01       		.byte	0x1
 2712 02b2 77       		.byte	0x77
 2713 02b3 00000000 		.4byte	.LFB69
 2714 02b7 38000000 		.4byte	.LFE69-.LFB69
 2715 02bb 01       		.uleb128 0x1
 2716 02bc 9C       		.byte	0x9c
 2717 02bd 10       		.uleb128 0x10
 2718 02be 4E010000 		.4byte	.LASF60
 2719 02c2 01       		.byte	0x1
 2720 02c3 83       		.byte	0x83
 2721 02c4 68000000 		.4byte	0x68
 2722 02c8 00000000 		.4byte	.LFB70
 2723 02cc A0000000 		.4byte	.LFE70-.LFB70
 2724 02d0 01       		.uleb128 0x1
 2725 02d1 9C       		.byte	0x9c
 2726 02d2 11       		.uleb128 0x11
 2727 02d3 4A050000 		.4byte	.LASF110
 2728 02d7 01       		.byte	0x1
 2729 02d8 B3       		.byte	0xb3
 2730 02d9 C6000000 		.4byte	0xc6
 2731 02dd 00000000 		.4byte	.LFB71
 2732 02e1 54000000 		.4byte	.LFE71-.LFB71
 2733 02e5 01       		.uleb128 0x1
 2734 02e6 9C       		.byte	0x9c
 2735 02e7 16030000 		.4byte	0x316
 2736 02eb 12       		.uleb128 0x12
 2737 02ec F4040000 		.4byte	.LASF111
 2738 02f0 01       		.byte	0x1
 2739 02f1 B3       		.byte	0xb3
 2740 02f2 A2000000 		.4byte	0xa2
 2741 02f6 02       		.uleb128 0x2
 2742 02f7 91       		.byte	0x91
 2743 02f8 66       		.sleb128 -26
 2744 02f9 13       		.uleb128 0x13
 2745 02fa 63707300 		.ascii	"cps\000"
 2746 02fe 01       		.byte	0x1
 2747 02ff B5       		.byte	0xb5
 2748 0300 D2000000 		.4byte	0xd2
 2749 0304 02       		.uleb128 0x2
 2750 0305 91       		.byte	0x91
 2751 0306 6C       		.sleb128 -20
 2752 0307 13       		.uleb128 0x13
 2753 0308 72706D00 		.ascii	"rpm\000"
 2754 030c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 59


 2755 030d B6       		.byte	0xb6
 2756 030e C6000000 		.4byte	0xc6
 2757 0312 02       		.uleb128 0x2
 2758 0313 91       		.byte	0x91
 2759 0314 6A       		.sleb128 -22
 2760 0315 00       		.byte	0
 2761 0316 14       		.uleb128 0x14
 2762 0317 C1030000 		.4byte	.LASF68
 2763 031b 01       		.byte	0x1
 2764 031c BE       		.byte	0xbe
 2765 031d 00000000 		.4byte	.LFB72
 2766 0321 34000000 		.4byte	.LFE72-.LFB72
 2767 0325 01       		.uleb128 0x1
 2768 0326 9C       		.byte	0x9c
 2769 0327 15       		.uleb128 0x15
 2770 0328 64010000 		.4byte	.LASF63
 2771 032c 01       		.byte	0x1
 2772 032d CA       		.byte	0xca
 2773 032e B9010000 		.4byte	0x1b9
 2774 0332 00000000 		.4byte	.LFB73
 2775 0336 98040000 		.4byte	.LFE73-.LFB73
 2776 033a 01       		.uleb128 0x1
 2777 033b 9C       		.byte	0x9c
 2778 033c 4F030000 		.4byte	0x34f
 2779 0340 0D       		.uleb128 0xd
 2780 0341 B6050000 		.4byte	.LASF64
 2781 0345 01       		.byte	0x1
 2782 0346 CB       		.byte	0xcb
 2783 0347 B9010000 		.4byte	0x1b9
 2784 034b 02       		.uleb128 0x2
 2785 034c 91       		.byte	0x91
 2786 034d 74       		.sleb128 -12
 2787 034e 00       		.byte	0
 2788 034f 16       		.uleb128 0x16
 2789 0350 26000000 		.4byte	.LASF65
 2790 0354 01       		.byte	0x1
 2791 0355 1B01     		.2byte	0x11b
 2792 0357 B9010000 		.4byte	0x1b9
 2793 035b 00000000 		.4byte	.LFB74
 2794 035f 6C010000 		.4byte	.LFE74-.LFB74
 2795 0363 01       		.uleb128 0x1
 2796 0364 9C       		.byte	0x9c
 2797 0365 17       		.uleb128 0x17
 2798 0366 3D020000 		.4byte	.LASF66
 2799 036a 01       		.byte	0x1
 2800 036b 3701     		.2byte	0x137
 2801 036d B9010000 		.4byte	0x1b9
 2802 0371 00000000 		.4byte	.LFB75
 2803 0375 18030000 		.4byte	.LFE75-.LFB75
 2804 0379 01       		.uleb128 0x1
 2805 037a 9C       		.byte	0x9c
 2806 037b 9E030000 		.4byte	0x39e
 2807 037f 18       		.uleb128 0x18
 2808 0380 73020000 		.4byte	.LASF67
 2809 0384 01       		.byte	0x1
 2810 0385 3801     		.2byte	0x138
 2811 0387 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 60


 2812 038b 02       		.uleb128 0x2
 2813 038c 91       		.byte	0x91
 2814 038d 74       		.sleb128 -12
 2815 038e 18       		.uleb128 0x18
 2816 038f B6050000 		.4byte	.LASF64
 2817 0393 01       		.byte	0x1
 2818 0394 3E01     		.2byte	0x13e
 2819 0396 B9010000 		.4byte	0x1b9
 2820 039a 02       		.uleb128 0x2
 2821 039b 91       		.byte	0x91
 2822 039c 70       		.sleb128 -16
 2823 039d 00       		.byte	0
 2824 039e 19       		.uleb128 0x19
 2825 039f 71030000 		.4byte	.LASF69
 2826 03a3 01       		.byte	0x1
 2827 03a4 E901     		.2byte	0x1e9
 2828 03a6 00000000 		.4byte	.LFB76
 2829 03aa 98000000 		.4byte	.LFE76-.LFB76
 2830 03ae 01       		.uleb128 0x1
 2831 03af 9C       		.byte	0x9c
 2832 03b0 1A       		.uleb128 0x1a
 2833 03b1 80050000 		.4byte	.LASF70
 2834 03b5 06       		.byte	0x6
 2835 03b6 1207     		.2byte	0x712
 2836 03b8 BC030000 		.4byte	0x3bc
 2837 03bc 1B       		.uleb128 0x1b
 2838 03bd 8B000000 		.4byte	0x8b
 2839 03c1 1C       		.uleb128 0x1c
 2840 03c2 747300   		.ascii	"ts\000"
 2841 03c5 05       		.byte	0x5
 2842 03c6 10       		.byte	0x10
 2843 03c7 96000000 		.4byte	0x96
 2844 03cb 05       		.uleb128 0x5
 2845 03cc 03       		.byte	0x3
 2846 03cd 00000000 		.4byte	ts
 2847 03d1 1D       		.uleb128 0x1d
 2848 03d2 36000000 		.4byte	.LASF71
 2849 03d6 05       		.byte	0x5
 2850 03d7 11       		.byte	0x11
 2851 03d8 A2000000 		.4byte	0xa2
 2852 03dc 05       		.uleb128 0x5
 2853 03dd 03       		.byte	0x3
 2854 03de 00000000 		.4byte	ts_enc
 2855 03e2 1D       		.uleb128 0x1d
 2856 03e3 58030000 		.4byte	.LASF72
 2857 03e7 05       		.byte	0x5
 2858 03e8 12       		.byte	0x12
 2859 03e9 A2000000 		.4byte	0xa2
 2860 03ed 05       		.uleb128 0x5
 2861 03ee 03       		.byte	0x3
 2862 03ef 00000000 		.4byte	ts_update
 2863 03f3 1D       		.uleb128 0x1d
 2864 03f4 EB040000 		.4byte	.LASF73
 2865 03f8 05       		.byte	0x5
 2866 03f9 13       		.byte	0x13
 2867 03fa A2000000 		.4byte	0xa2
 2868 03fe 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 61


 2869 03ff 03       		.byte	0x3
 2870 0400 00000000 		.4byte	ts_speed
 2871 0404 1D       		.uleb128 0x1d
 2872 0405 2F050000 		.4byte	.LASF74
 2873 0409 05       		.byte	0x5
 2874 040a 14       		.byte	0x14
 2875 040b A2000000 		.4byte	0xa2
 2876 040f 05       		.uleb128 0x5
 2877 0410 03       		.byte	0x3
 2878 0411 00000000 		.4byte	ts_display
 2879 0415 1D       		.uleb128 0x1d
 2880 0416 FA040000 		.4byte	.LASF75
 2881 041a 05       		.byte	0x5
 2882 041b 16       		.byte	0x16
 2883 041c 96000000 		.4byte	0x96
 2884 0420 05       		.uleb128 0x5
 2885 0421 03       		.byte	0x3
 2886 0422 00000000 		.4byte	flag_ts_enc
 2887 0426 1D       		.uleb128 0x1d
 2888 0427 F8010000 		.4byte	.LASF76
 2889 042b 05       		.byte	0x5
 2890 042c 17       		.byte	0x17
 2891 042d 96000000 		.4byte	0x96
 2892 0431 05       		.uleb128 0x5
 2893 0432 03       		.byte	0x3
 2894 0433 00000000 		.4byte	flag_ts_update
 2895 0437 1D       		.uleb128 0x1d
 2896 0438 66000000 		.4byte	.LASF77
 2897 043c 05       		.byte	0x5
 2898 043d 18       		.byte	0x18
 2899 043e 96000000 		.4byte	0x96
 2900 0442 05       		.uleb128 0x5
 2901 0443 03       		.byte	0x3
 2902 0444 00000000 		.4byte	flag_ts_speed
 2903 0448 1D       		.uleb128 0x1d
 2904 0449 5B020000 		.4byte	.LASF78
 2905 044d 05       		.byte	0x5
 2906 044e 19       		.byte	0x19
 2907 044f 96000000 		.4byte	0x96
 2908 0453 05       		.uleb128 0x5
 2909 0454 03       		.byte	0x3
 2910 0455 00000000 		.4byte	flag_ts_display
 2911 0459 1D       		.uleb128 0x1d
 2912 045a 6B020000 		.4byte	.LASF79
 2913 045e 05       		.byte	0x5
 2914 045f 1B       		.byte	0x1b
 2915 0460 96000000 		.4byte	0x96
 2916 0464 05       		.uleb128 0x5
 2917 0465 03       		.byte	0x3
 2918 0466 00000000 		.4byte	flag_rx
 2919 046a 1D       		.uleb128 0x1d
 2920 046b 4E000000 		.4byte	.LASF80
 2921 046f 05       		.byte	0x5
 2922 0470 1C       		.byte	0x1c
 2923 0471 96000000 		.4byte	0x96
 2924 0475 05       		.uleb128 0x5
 2925 0476 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 62


 2926 0477 00000000 		.4byte	flag_packet
 2927 047b 1D       		.uleb128 0x1d
 2928 047c 62030000 		.4byte	.LASF81
 2929 0480 05       		.byte	0x5
 2930 0481 1D       		.byte	0x1d
 2931 0482 96000000 		.4byte	0x96
 2932 0486 05       		.uleb128 0x5
 2933 0487 03       		.byte	0x3
 2934 0488 00000000 		.4byte	flag_KB_string
 2935 048c 1D       		.uleb128 0x1d
 2936 048d F8020000 		.4byte	.LASF82
 2937 0491 05       		.byte	0x5
 2938 0492 1F       		.byte	0x1f
 2939 0493 96000000 		.4byte	0x96
 2940 0497 05       		.uleb128 0x5
 2941 0498 03       		.byte	0x3
 2942 0499 00000000 		.4byte	dataready_flag
 2943 049d 1D       		.uleb128 0x1d
 2944 049e 59050000 		.4byte	.LASF83
 2945 04a2 05       		.byte	0x5
 2946 04a3 21       		.byte	0x21
 2947 04a4 96000000 		.4byte	0x96
 2948 04a8 05       		.uleb128 0x5
 2949 04a9 03       		.byte	0x3
 2950 04aa 00000000 		.4byte	flag_rf_transmission_active
 2951 04ae 1E       		.uleb128 0x1e
 2952 04af 84000000 		.4byte	0x84
 2953 04b3 BE040000 		.4byte	0x4be
 2954 04b7 1F       		.uleb128 0x1f
 2955 04b8 7D000000 		.4byte	0x7d
 2956 04bc 3F       		.byte	0x3f
 2957 04bd 00       		.byte	0
 2958 04be 1D       		.uleb128 0x1d
 2959 04bf 65040000 		.4byte	.LASF84
 2960 04c3 05       		.byte	0x5
 2961 04c4 24       		.byte	0x24
 2962 04c5 AE040000 		.4byte	0x4ae
 2963 04c9 05       		.uleb128 0x5
 2964 04ca 03       		.byte	0x3
 2965 04cb 00000000 		.4byte	displaystring
 2966 04cf 1D       		.uleb128 0x1d
 2967 04d0 BD010000 		.4byte	.LASF85
 2968 04d4 05       		.byte	0x5
 2969 04d5 25       		.byte	0x25
 2970 04d6 AE040000 		.4byte	0x4ae
 2971 04da 05       		.uleb128 0x5
 2972 04db 03       		.byte	0x3
 2973 04dc 00000000 		.4byte	line
 2974 04e0 1D       		.uleb128 0x1d
 2975 04e1 9D020000 		.4byte	.LASF86
 2976 04e5 05       		.byte	0x5
 2977 04e6 25       		.byte	0x25
 2978 04e7 AE040000 		.4byte	0x4ae
 2979 04eb 05       		.uleb128 0x5
 2980 04ec 03       		.byte	0x3
 2981 04ed 00000000 		.4byte	entry
 2982 04f1 1E       		.uleb128 0x1e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 63


 2983 04f2 96000000 		.4byte	0x96
 2984 04f6 01050000 		.4byte	0x501
 2985 04fa 1F       		.uleb128 0x1f
 2986 04fb 7D000000 		.4byte	0x7d
 2987 04ff 3F       		.byte	0x3f
 2988 0500 00       		.byte	0
 2989 0501 1D       		.uleb128 0x1d
 2990 0502 B6000000 		.4byte	.LASF87
 2991 0506 05       		.byte	0x5
 2992 0507 26       		.byte	0x26
 2993 0508 F1040000 		.4byte	0x4f1
 2994 050c 05       		.uleb128 0x5
 2995 050d 03       		.byte	0x3
 2996 050e 00000000 		.4byte	usbBuffer
 2997 0512 1D       		.uleb128 0x1d
 2998 0513 86000000 		.4byte	.LASF88
 2999 0517 05       		.byte	0x5
 3000 0518 3C       		.byte	0x3c
 3001 0519 E0000000 		.4byte	0xe0
 3002 051d 05       		.uleb128 0x5
 3003 051e 03       		.byte	0x3
 3004 051f 00000000 		.4byte	system_state
 3005 0523 1E       		.uleb128 0x1e
 3006 0524 68000000 		.4byte	0x68
 3007 0528 39050000 		.4byte	0x539
 3008 052c 1F       		.uleb128 0x1f
 3009 052d 7D000000 		.4byte	0x7d
 3010 0531 0E       		.byte	0xe
 3011 0532 1F       		.uleb128 0x1f
 3012 0533 7D000000 		.4byte	0x7d
 3013 0537 12       		.byte	0x12
 3014 0538 00       		.byte	0
 3015 0539 20       		.uleb128 0x20
 3016 053a 6D617000 		.ascii	"map\000"
 3017 053e 07       		.byte	0x7
 3018 053f 04       		.byte	0x4
 3019 0540 23050000 		.4byte	0x523
 3020 0544 1D       		.uleb128 0x1d
 3021 0545 A5050000 		.4byte	.LASF89
 3022 0549 01       		.byte	0x1
 3023 054a 2B       		.byte	0x2b
 3024 054b B9010000 		.4byte	0x1b9
 3025 054f 05       		.uleb128 0x5
 3026 0550 03       		.byte	0x3
 3027 0551 00000000 		.4byte	currentDirection
 3028 0555 1D       		.uleb128 0x1d
 3029 0556 BA020000 		.4byte	.LASF90
 3030 055a 01       		.byte	0x1
 3031 055b 2C       		.byte	0x2c
 3032 055c B9010000 		.4byte	0x1b9
 3033 0560 05       		.uleb128 0x5
 3034 0561 03       		.byte	0x3
 3035 0562 00000000 		.4byte	previousDirection
 3036 0566 1D       		.uleb128 0x1d
 3037 0567 8D050000 		.4byte	.LASF91
 3038 056b 01       		.byte	0x1
 3039 056c 2D       		.byte	0x2d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 64


 3040 056d 12020000 		.4byte	0x212
 3041 0571 05       		.uleb128 0x5
 3042 0572 03       		.byte	0x3
 3043 0573 00000000 		.4byte	currentOrientation
 3044 0577 1D       		.uleb128 0x1d
 3045 0578 24020000 		.4byte	.LASF92
 3046 057c 01       		.byte	0x1
 3047 057d 2E       		.byte	0x2e
 3048 057e 12020000 		.4byte	0x212
 3049 0582 05       		.uleb128 0x5
 3050 0583 03       		.byte	0x3
 3051 0584 00000000 		.4byte	previousOrientation
 3052 0588 1C       		.uleb128 0x1c
 3053 0589 733300   		.ascii	"s3\000"
 3054 058c 01       		.byte	0x1
 3055 058d 33       		.byte	0x33
 3056 058e 96000000 		.4byte	0x96
 3057 0592 05       		.uleb128 0x5
 3058 0593 03       		.byte	0x3
 3059 0594 00000000 		.4byte	s3
 3060 0598 1C       		.uleb128 0x1c
 3061 0599 733400   		.ascii	"s4\000"
 3062 059c 01       		.byte	0x1
 3063 059d 34       		.byte	0x34
 3064 059e 96000000 		.4byte	0x96
 3065 05a2 05       		.uleb128 0x5
 3066 05a3 03       		.byte	0x3
 3067 05a4 00000000 		.4byte	s4
 3068 05a8 1C       		.uleb128 0x1c
 3069 05a9 733500   		.ascii	"s5\000"
 3070 05ac 01       		.byte	0x1
 3071 05ad 35       		.byte	0x35
 3072 05ae 96000000 		.4byte	0x96
 3073 05b2 05       		.uleb128 0x5
 3074 05b3 03       		.byte	0x3
 3075 05b4 00000000 		.4byte	s5
 3076 05b8 1C       		.uleb128 0x1c
 3077 05b9 733600   		.ascii	"s6\000"
 3078 05bc 01       		.byte	0x1
 3079 05bd 36       		.byte	0x36
 3080 05be 96000000 		.4byte	0x96
 3081 05c2 05       		.uleb128 0x5
 3082 05c3 03       		.byte	0x3
 3083 05c4 00000000 		.4byte	s6
 3084 05c8 1D       		.uleb128 0x1d
 3085 05c9 8B020000 		.4byte	.LASF93
 3086 05cd 01       		.byte	0x1
 3087 05ce 3B       		.byte	0x3b
 3088 05cf AE000000 		.4byte	0xae
 3089 05d3 05       		.uleb128 0x5
 3090 05d4 03       		.byte	0x3
 3091 05d5 00000000 		.4byte	totalMilliseconds
 3092 05d9 1D       		.uleb128 0x1d
 3093 05da CC020000 		.4byte	.LASF94
 3094 05de 01       		.byte	0x1
 3095 05df 3C       		.byte	0x3c
 3096 05e0 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 65


 3097 05e4 05       		.uleb128 0x5
 3098 05e5 03       		.byte	0x3
 3099 05e6 00000000 		.4byte	totalDistance
 3100 05ea 1E       		.uleb128 0x1e
 3101 05eb 84000000 		.4byte	0x84
 3102 05ef FA050000 		.4byte	0x5fa
 3103 05f3 1F       		.uleb128 0x1f
 3104 05f4 7D000000 		.4byte	0x7d
 3105 05f8 44       		.byte	0x44
 3106 05f9 00       		.byte	0
 3107 05fa 1D       		.uleb128 0x1d
 3108 05fb 95040000 		.4byte	.LASF95
 3109 05ff 01       		.byte	0x1
 3110 0600 3E       		.byte	0x3e
 3111 0601 EA050000 		.4byte	0x5ea
 3112 0605 05       		.uleb128 0x5
 3113 0606 03       		.byte	0x3
 3114 0607 00000000 		.4byte	buffer
 3115 060b 1D       		.uleb128 0x1d
 3116 060c 39040000 		.4byte	.LASF96
 3117 0610 01       		.byte	0x1
 3118 0611 3F       		.byte	0x3f
 3119 0612 68000000 		.4byte	0x68
 3120 0616 05       		.uleb128 0x5
 3121 0617 03       		.byte	0x3
 3122 0618 00000000 		.4byte	quadDec2Count
 3123 061c 1D       		.uleb128 0x1d
 3124 061d 52020000 		.4byte	.LASF97
 3125 0621 01       		.byte	0x1
 3126 0622 40       		.byte	0x40
 3127 0623 68000000 		.4byte	0x68
 3128 0627 05       		.uleb128 0x5
 3129 0628 03       		.byte	0x3
 3130 0629 00000000 		.4byte	timerInt
 3131 062d 1D       		.uleb128 0x1d
 3132 062e DA020000 		.4byte	.LASF98
 3133 0632 01       		.byte	0x1
 3134 0633 41       		.byte	0x41
 3135 0634 68000000 		.4byte	0x68
 3136 0638 05       		.uleb128 0x5
 3137 0639 03       		.byte	0x3
 3138 063a 00000000 		.4byte	keepLedOn
 3139 063e 1D       		.uleb128 0x1d
 3140 063f 9C000000 		.4byte	.LASF99
 3141 0643 01       		.byte	0x1
 3142 0644 42       		.byte	0x42
 3143 0645 AE000000 		.4byte	0xae
 3144 0649 05       		.uleb128 0x5
 3145 064a 03       		.byte	0x3
 3146 064b 00000000 		.4byte	stopBuffer
 3147 064f 1D       		.uleb128 0x1d
 3148 0650 ED010000 		.4byte	.LASF100
 3149 0654 01       		.byte	0x1
 3150 0655 C5       		.byte	0xc5
 3151 0656 D2000000 		.4byte	0xd2
 3152 065a 05       		.uleb128 0x5
 3153 065b 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 66


 3154 065c 00000000 		.4byte	xBlocksize
 3155 0660 1D       		.uleb128 0x1d
 3156 0661 ED020000 		.4byte	.LASF101
 3157 0665 01       		.byte	0x1
 3158 0666 C6       		.byte	0xc6
 3159 0667 D2000000 		.4byte	0xd2
 3160 066b 05       		.uleb128 0x5
 3161 066c 03       		.byte	0x3
 3162 066d 00000000 		.4byte	yBlocksize
 3163 0671 1D       		.uleb128 0x1d
 3164 0672 D4040000 		.4byte	.LASF102
 3165 0676 01       		.byte	0x1
 3166 0677 C7       		.byte	0xc7
 3167 0678 96000000 		.4byte	0x96
 3168 067c 05       		.uleb128 0x5
 3169 067d 03       		.byte	0x3
 3170 067e 00000000 		.4byte	currentRow
 3171 0682 1D       		.uleb128 0x1d
 3172 0683 AF020000 		.4byte	.LASF103
 3173 0687 01       		.byte	0x1
 3174 0688 C8       		.byte	0xc8
 3175 0689 96000000 		.4byte	0x96
 3176 068d 05       		.uleb128 0x5
 3177 068e 03       		.byte	0x3
 3178 068f 00000000 		.4byte	currentCol
 3179 0693 21       		.uleb128 0x21
 3180 0694 0C000000 		.4byte	.LASF104
 3181 0698 01       		.byte	0x1
 3182 0699 3401     		.2byte	0x134
 3183 069b 96000000 		.4byte	0x96
 3184 069f 05       		.uleb128 0x5
 3185 06a0 03       		.byte	0x3
 3186 06a1 00000000 		.4byte	stoppedAfterTurn
 3187 06a5 21       		.uleb128 0x21
 3188 06a6 73040000 		.4byte	.LASF105
 3189 06aa 01       		.byte	0x1
 3190 06ab 3501     		.2byte	0x135
 3191 06ad 96000000 		.4byte	0x96
 3192 06b1 05       		.uleb128 0x5
 3193 06b2 03       		.byte	0x3
 3194 06b3 00000000 		.4byte	ignoreSensor
 3195 06b7 00       		.byte	0
 3196              		.section	.debug_abbrev,"",%progbits
 3197              	.Ldebug_abbrev0:
 3198 0000 01       		.uleb128 0x1
 3199 0001 11       		.uleb128 0x11
 3200 0002 01       		.byte	0x1
 3201 0003 25       		.uleb128 0x25
 3202 0004 0E       		.uleb128 0xe
 3203 0005 13       		.uleb128 0x13
 3204 0006 0B       		.uleb128 0xb
 3205 0007 03       		.uleb128 0x3
 3206 0008 0E       		.uleb128 0xe
 3207 0009 1B       		.uleb128 0x1b
 3208 000a 0E       		.uleb128 0xe
 3209 000b 55       		.uleb128 0x55
 3210 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 67


 3211 000d 11       		.uleb128 0x11
 3212 000e 01       		.uleb128 0x1
 3213 000f 10       		.uleb128 0x10
 3214 0010 17       		.uleb128 0x17
 3215 0011 00       		.byte	0
 3216 0012 00       		.byte	0
 3217 0013 02       		.uleb128 0x2
 3218 0014 24       		.uleb128 0x24
 3219 0015 00       		.byte	0
 3220 0016 0B       		.uleb128 0xb
 3221 0017 0B       		.uleb128 0xb
 3222 0018 3E       		.uleb128 0x3e
 3223 0019 0B       		.uleb128 0xb
 3224 001a 03       		.uleb128 0x3
 3225 001b 0E       		.uleb128 0xe
 3226 001c 00       		.byte	0
 3227 001d 00       		.byte	0
 3228 001e 03       		.uleb128 0x3
 3229 001f 16       		.uleb128 0x16
 3230 0020 00       		.byte	0
 3231 0021 03       		.uleb128 0x3
 3232 0022 0E       		.uleb128 0xe
 3233 0023 3A       		.uleb128 0x3a
 3234 0024 0B       		.uleb128 0xb
 3235 0025 3B       		.uleb128 0x3b
 3236 0026 0B       		.uleb128 0xb
 3237 0027 49       		.uleb128 0x49
 3238 0028 13       		.uleb128 0x13
 3239 0029 00       		.byte	0
 3240 002a 00       		.byte	0
 3241 002b 04       		.uleb128 0x4
 3242 002c 24       		.uleb128 0x24
 3243 002d 00       		.byte	0
 3244 002e 0B       		.uleb128 0xb
 3245 002f 0B       		.uleb128 0xb
 3246 0030 3E       		.uleb128 0x3e
 3247 0031 0B       		.uleb128 0xb
 3248 0032 03       		.uleb128 0x3
 3249 0033 08       		.uleb128 0x8
 3250 0034 00       		.byte	0
 3251 0035 00       		.byte	0
 3252 0036 05       		.uleb128 0x5
 3253 0037 16       		.uleb128 0x16
 3254 0038 00       		.byte	0
 3255 0039 03       		.uleb128 0x3
 3256 003a 0E       		.uleb128 0xe
 3257 003b 3A       		.uleb128 0x3a
 3258 003c 0B       		.uleb128 0xb
 3259 003d 3B       		.uleb128 0x3b
 3260 003e 05       		.uleb128 0x5
 3261 003f 49       		.uleb128 0x49
 3262 0040 13       		.uleb128 0x13
 3263 0041 00       		.byte	0
 3264 0042 00       		.byte	0
 3265 0043 06       		.uleb128 0x6
 3266 0044 13       		.uleb128 0x13
 3267 0045 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 68


 3268 0046 03       		.uleb128 0x3
 3269 0047 0E       		.uleb128 0xe
 3270 0048 0B       		.uleb128 0xb
 3271 0049 0B       		.uleb128 0xb
 3272 004a 3A       		.uleb128 0x3a
 3273 004b 0B       		.uleb128 0xb
 3274 004c 3B       		.uleb128 0x3b
 3275 004d 0B       		.uleb128 0xb
 3276 004e 01       		.uleb128 0x1
 3277 004f 13       		.uleb128 0x13
 3278 0050 00       		.byte	0
 3279 0051 00       		.byte	0
 3280 0052 07       		.uleb128 0x7
 3281 0053 0D       		.uleb128 0xd
 3282 0054 00       		.byte	0
 3283 0055 03       		.uleb128 0x3
 3284 0056 0E       		.uleb128 0xe
 3285 0057 3A       		.uleb128 0x3a
 3286 0058 0B       		.uleb128 0xb
 3287 0059 3B       		.uleb128 0x3b
 3288 005a 0B       		.uleb128 0xb
 3289 005b 49       		.uleb128 0x49
 3290 005c 13       		.uleb128 0x13
 3291 005d 38       		.uleb128 0x38
 3292 005e 0B       		.uleb128 0xb
 3293 005f 00       		.byte	0
 3294 0060 00       		.byte	0
 3295 0061 08       		.uleb128 0x8
 3296 0062 04       		.uleb128 0x4
 3297 0063 01       		.byte	0x1
 3298 0064 03       		.uleb128 0x3
 3299 0065 0E       		.uleb128 0xe
 3300 0066 0B       		.uleb128 0xb
 3301 0067 0B       		.uleb128 0xb
 3302 0068 49       		.uleb128 0x49
 3303 0069 13       		.uleb128 0x13
 3304 006a 3A       		.uleb128 0x3a
 3305 006b 0B       		.uleb128 0xb
 3306 006c 3B       		.uleb128 0x3b
 3307 006d 0B       		.uleb128 0xb
 3308 006e 01       		.uleb128 0x1
 3309 006f 13       		.uleb128 0x13
 3310 0070 00       		.byte	0
 3311 0071 00       		.byte	0
 3312 0072 09       		.uleb128 0x9
 3313 0073 28       		.uleb128 0x28
 3314 0074 00       		.byte	0
 3315 0075 03       		.uleb128 0x3
 3316 0076 0E       		.uleb128 0xe
 3317 0077 1C       		.uleb128 0x1c
 3318 0078 0B       		.uleb128 0xb
 3319 0079 00       		.byte	0
 3320 007a 00       		.byte	0
 3321 007b 0A       		.uleb128 0xa
 3322 007c 28       		.uleb128 0x28
 3323 007d 00       		.byte	0
 3324 007e 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 69


 3325 007f 08       		.uleb128 0x8
 3326 0080 1C       		.uleb128 0x1c
 3327 0081 0B       		.uleb128 0xb
 3328 0082 00       		.byte	0
 3329 0083 00       		.byte	0
 3330 0084 0B       		.uleb128 0xb
 3331 0085 2E       		.uleb128 0x2e
 3332 0086 01       		.byte	0x1
 3333 0087 3F       		.uleb128 0x3f
 3334 0088 19       		.uleb128 0x19
 3335 0089 03       		.uleb128 0x3
 3336 008a 0E       		.uleb128 0xe
 3337 008b 3A       		.uleb128 0x3a
 3338 008c 0B       		.uleb128 0xb
 3339 008d 3B       		.uleb128 0x3b
 3340 008e 0B       		.uleb128 0xb
 3341 008f 27       		.uleb128 0x27
 3342 0090 19       		.uleb128 0x19
 3343 0091 11       		.uleb128 0x11
 3344 0092 01       		.uleb128 0x1
 3345 0093 12       		.uleb128 0x12
 3346 0094 06       		.uleb128 0x6
 3347 0095 40       		.uleb128 0x40
 3348 0096 18       		.uleb128 0x18
 3349 0097 9642     		.uleb128 0x2116
 3350 0099 19       		.uleb128 0x19
 3351 009a 01       		.uleb128 0x1
 3352 009b 13       		.uleb128 0x13
 3353 009c 00       		.byte	0
 3354 009d 00       		.byte	0
 3355 009e 0C       		.uleb128 0xc
 3356 009f 0B       		.uleb128 0xb
 3357 00a0 01       		.byte	0x1
 3358 00a1 11       		.uleb128 0x11
 3359 00a2 01       		.uleb128 0x1
 3360 00a3 12       		.uleb128 0x12
 3361 00a4 06       		.uleb128 0x6
 3362 00a5 00       		.byte	0
 3363 00a6 00       		.byte	0
 3364 00a7 0D       		.uleb128 0xd
 3365 00a8 34       		.uleb128 0x34
 3366 00a9 00       		.byte	0
 3367 00aa 03       		.uleb128 0x3
 3368 00ab 0E       		.uleb128 0xe
 3369 00ac 3A       		.uleb128 0x3a
 3370 00ad 0B       		.uleb128 0xb
 3371 00ae 3B       		.uleb128 0x3b
 3372 00af 0B       		.uleb128 0xb
 3373 00b0 49       		.uleb128 0x49
 3374 00b1 13       		.uleb128 0x13
 3375 00b2 02       		.uleb128 0x2
 3376 00b3 18       		.uleb128 0x18
 3377 00b4 00       		.byte	0
 3378 00b5 00       		.byte	0
 3379 00b6 0E       		.uleb128 0xe
 3380 00b7 2E       		.uleb128 0x2e
 3381 00b8 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 70


 3382 00b9 3F       		.uleb128 0x3f
 3383 00ba 19       		.uleb128 0x19
 3384 00bb 03       		.uleb128 0x3
 3385 00bc 0E       		.uleb128 0xe
 3386 00bd 3A       		.uleb128 0x3a
 3387 00be 0B       		.uleb128 0xb
 3388 00bf 3B       		.uleb128 0x3b
 3389 00c0 0B       		.uleb128 0xb
 3390 00c1 27       		.uleb128 0x27
 3391 00c2 19       		.uleb128 0x19
 3392 00c3 11       		.uleb128 0x11
 3393 00c4 01       		.uleb128 0x1
 3394 00c5 12       		.uleb128 0x12
 3395 00c6 06       		.uleb128 0x6
 3396 00c7 40       		.uleb128 0x40
 3397 00c8 18       		.uleb128 0x18
 3398 00c9 9742     		.uleb128 0x2117
 3399 00cb 19       		.uleb128 0x19
 3400 00cc 00       		.byte	0
 3401 00cd 00       		.byte	0
 3402 00ce 0F       		.uleb128 0xf
 3403 00cf 2E       		.uleb128 0x2e
 3404 00d0 00       		.byte	0
 3405 00d1 3F       		.uleb128 0x3f
 3406 00d2 19       		.uleb128 0x19
 3407 00d3 03       		.uleb128 0x3
 3408 00d4 0E       		.uleb128 0xe
 3409 00d5 3A       		.uleb128 0x3a
 3410 00d6 0B       		.uleb128 0xb
 3411 00d7 3B       		.uleb128 0x3b
 3412 00d8 0B       		.uleb128 0xb
 3413 00d9 27       		.uleb128 0x27
 3414 00da 19       		.uleb128 0x19
 3415 00db 11       		.uleb128 0x11
 3416 00dc 01       		.uleb128 0x1
 3417 00dd 12       		.uleb128 0x12
 3418 00de 06       		.uleb128 0x6
 3419 00df 40       		.uleb128 0x40
 3420 00e0 18       		.uleb128 0x18
 3421 00e1 9642     		.uleb128 0x2116
 3422 00e3 19       		.uleb128 0x19
 3423 00e4 00       		.byte	0
 3424 00e5 00       		.byte	0
 3425 00e6 10       		.uleb128 0x10
 3426 00e7 2E       		.uleb128 0x2e
 3427 00e8 00       		.byte	0
 3428 00e9 3F       		.uleb128 0x3f
 3429 00ea 19       		.uleb128 0x19
 3430 00eb 03       		.uleb128 0x3
 3431 00ec 0E       		.uleb128 0xe
 3432 00ed 3A       		.uleb128 0x3a
 3433 00ee 0B       		.uleb128 0xb
 3434 00ef 3B       		.uleb128 0x3b
 3435 00f0 0B       		.uleb128 0xb
 3436 00f1 49       		.uleb128 0x49
 3437 00f2 13       		.uleb128 0x13
 3438 00f3 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 71


 3439 00f4 01       		.uleb128 0x1
 3440 00f5 12       		.uleb128 0x12
 3441 00f6 06       		.uleb128 0x6
 3442 00f7 40       		.uleb128 0x40
 3443 00f8 18       		.uleb128 0x18
 3444 00f9 9642     		.uleb128 0x2116
 3445 00fb 19       		.uleb128 0x19
 3446 00fc 00       		.byte	0
 3447 00fd 00       		.byte	0
 3448 00fe 11       		.uleb128 0x11
 3449 00ff 2E       		.uleb128 0x2e
 3450 0100 01       		.byte	0x1
 3451 0101 3F       		.uleb128 0x3f
 3452 0102 19       		.uleb128 0x19
 3453 0103 03       		.uleb128 0x3
 3454 0104 0E       		.uleb128 0xe
 3455 0105 3A       		.uleb128 0x3a
 3456 0106 0B       		.uleb128 0xb
 3457 0107 3B       		.uleb128 0x3b
 3458 0108 0B       		.uleb128 0xb
 3459 0109 27       		.uleb128 0x27
 3460 010a 19       		.uleb128 0x19
 3461 010b 49       		.uleb128 0x49
 3462 010c 13       		.uleb128 0x13
 3463 010d 11       		.uleb128 0x11
 3464 010e 01       		.uleb128 0x1
 3465 010f 12       		.uleb128 0x12
 3466 0110 06       		.uleb128 0x6
 3467 0111 40       		.uleb128 0x40
 3468 0112 18       		.uleb128 0x18
 3469 0113 9642     		.uleb128 0x2116
 3470 0115 19       		.uleb128 0x19
 3471 0116 01       		.uleb128 0x1
 3472 0117 13       		.uleb128 0x13
 3473 0118 00       		.byte	0
 3474 0119 00       		.byte	0
 3475 011a 12       		.uleb128 0x12
 3476 011b 05       		.uleb128 0x5
 3477 011c 00       		.byte	0
 3478 011d 03       		.uleb128 0x3
 3479 011e 0E       		.uleb128 0xe
 3480 011f 3A       		.uleb128 0x3a
 3481 0120 0B       		.uleb128 0xb
 3482 0121 3B       		.uleb128 0x3b
 3483 0122 0B       		.uleb128 0xb
 3484 0123 49       		.uleb128 0x49
 3485 0124 13       		.uleb128 0x13
 3486 0125 02       		.uleb128 0x2
 3487 0126 18       		.uleb128 0x18
 3488 0127 00       		.byte	0
 3489 0128 00       		.byte	0
 3490 0129 13       		.uleb128 0x13
 3491 012a 34       		.uleb128 0x34
 3492 012b 00       		.byte	0
 3493 012c 03       		.uleb128 0x3
 3494 012d 08       		.uleb128 0x8
 3495 012e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 72


 3496 012f 0B       		.uleb128 0xb
 3497 0130 3B       		.uleb128 0x3b
 3498 0131 0B       		.uleb128 0xb
 3499 0132 49       		.uleb128 0x49
 3500 0133 13       		.uleb128 0x13
 3501 0134 02       		.uleb128 0x2
 3502 0135 18       		.uleb128 0x18
 3503 0136 00       		.byte	0
 3504 0137 00       		.byte	0
 3505 0138 14       		.uleb128 0x14
 3506 0139 2E       		.uleb128 0x2e
 3507 013a 00       		.byte	0
 3508 013b 3F       		.uleb128 0x3f
 3509 013c 19       		.uleb128 0x19
 3510 013d 03       		.uleb128 0x3
 3511 013e 0E       		.uleb128 0xe
 3512 013f 3A       		.uleb128 0x3a
 3513 0140 0B       		.uleb128 0xb
 3514 0141 3B       		.uleb128 0x3b
 3515 0142 0B       		.uleb128 0xb
 3516 0143 11       		.uleb128 0x11
 3517 0144 01       		.uleb128 0x1
 3518 0145 12       		.uleb128 0x12
 3519 0146 06       		.uleb128 0x6
 3520 0147 40       		.uleb128 0x40
 3521 0148 18       		.uleb128 0x18
 3522 0149 9742     		.uleb128 0x2117
 3523 014b 19       		.uleb128 0x19
 3524 014c 00       		.byte	0
 3525 014d 00       		.byte	0
 3526 014e 15       		.uleb128 0x15
 3527 014f 2E       		.uleb128 0x2e
 3528 0150 01       		.byte	0x1
 3529 0151 3F       		.uleb128 0x3f
 3530 0152 19       		.uleb128 0x19
 3531 0153 03       		.uleb128 0x3
 3532 0154 0E       		.uleb128 0xe
 3533 0155 3A       		.uleb128 0x3a
 3534 0156 0B       		.uleb128 0xb
 3535 0157 3B       		.uleb128 0x3b
 3536 0158 0B       		.uleb128 0xb
 3537 0159 49       		.uleb128 0x49
 3538 015a 13       		.uleb128 0x13
 3539 015b 11       		.uleb128 0x11
 3540 015c 01       		.uleb128 0x1
 3541 015d 12       		.uleb128 0x12
 3542 015e 06       		.uleb128 0x6
 3543 015f 40       		.uleb128 0x40
 3544 0160 18       		.uleb128 0x18
 3545 0161 9742     		.uleb128 0x2117
 3546 0163 19       		.uleb128 0x19
 3547 0164 01       		.uleb128 0x1
 3548 0165 13       		.uleb128 0x13
 3549 0166 00       		.byte	0
 3550 0167 00       		.byte	0
 3551 0168 16       		.uleb128 0x16
 3552 0169 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 73


 3553 016a 00       		.byte	0
 3554 016b 3F       		.uleb128 0x3f
 3555 016c 19       		.uleb128 0x19
 3556 016d 03       		.uleb128 0x3
 3557 016e 0E       		.uleb128 0xe
 3558 016f 3A       		.uleb128 0x3a
 3559 0170 0B       		.uleb128 0xb
 3560 0171 3B       		.uleb128 0x3b
 3561 0172 05       		.uleb128 0x5
 3562 0173 49       		.uleb128 0x49
 3563 0174 13       		.uleb128 0x13
 3564 0175 11       		.uleb128 0x11
 3565 0176 01       		.uleb128 0x1
 3566 0177 12       		.uleb128 0x12
 3567 0178 06       		.uleb128 0x6
 3568 0179 40       		.uleb128 0x40
 3569 017a 18       		.uleb128 0x18
 3570 017b 9642     		.uleb128 0x2116
 3571 017d 19       		.uleb128 0x19
 3572 017e 00       		.byte	0
 3573 017f 00       		.byte	0
 3574 0180 17       		.uleb128 0x17
 3575 0181 2E       		.uleb128 0x2e
 3576 0182 01       		.byte	0x1
 3577 0183 3F       		.uleb128 0x3f
 3578 0184 19       		.uleb128 0x19
 3579 0185 03       		.uleb128 0x3
 3580 0186 0E       		.uleb128 0xe
 3581 0187 3A       		.uleb128 0x3a
 3582 0188 0B       		.uleb128 0xb
 3583 0189 3B       		.uleb128 0x3b
 3584 018a 05       		.uleb128 0x5
 3585 018b 49       		.uleb128 0x49
 3586 018c 13       		.uleb128 0x13
 3587 018d 11       		.uleb128 0x11
 3588 018e 01       		.uleb128 0x1
 3589 018f 12       		.uleb128 0x12
 3590 0190 06       		.uleb128 0x6
 3591 0191 40       		.uleb128 0x40
 3592 0192 18       		.uleb128 0x18
 3593 0193 9642     		.uleb128 0x2116
 3594 0195 19       		.uleb128 0x19
 3595 0196 01       		.uleb128 0x1
 3596 0197 13       		.uleb128 0x13
 3597 0198 00       		.byte	0
 3598 0199 00       		.byte	0
 3599 019a 18       		.uleb128 0x18
 3600 019b 34       		.uleb128 0x34
 3601 019c 00       		.byte	0
 3602 019d 03       		.uleb128 0x3
 3603 019e 0E       		.uleb128 0xe
 3604 019f 3A       		.uleb128 0x3a
 3605 01a0 0B       		.uleb128 0xb
 3606 01a1 3B       		.uleb128 0x3b
 3607 01a2 05       		.uleb128 0x5
 3608 01a3 49       		.uleb128 0x49
 3609 01a4 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 74


 3610 01a5 02       		.uleb128 0x2
 3611 01a6 18       		.uleb128 0x18
 3612 01a7 00       		.byte	0
 3613 01a8 00       		.byte	0
 3614 01a9 19       		.uleb128 0x19
 3615 01aa 2E       		.uleb128 0x2e
 3616 01ab 00       		.byte	0
 3617 01ac 3F       		.uleb128 0x3f
 3618 01ad 19       		.uleb128 0x19
 3619 01ae 03       		.uleb128 0x3
 3620 01af 0E       		.uleb128 0xe
 3621 01b0 3A       		.uleb128 0x3a
 3622 01b1 0B       		.uleb128 0xb
 3623 01b2 3B       		.uleb128 0x3b
 3624 01b3 05       		.uleb128 0x5
 3625 01b4 11       		.uleb128 0x11
 3626 01b5 01       		.uleb128 0x1
 3627 01b6 12       		.uleb128 0x12
 3628 01b7 06       		.uleb128 0x6
 3629 01b8 40       		.uleb128 0x40
 3630 01b9 18       		.uleb128 0x18
 3631 01ba 9642     		.uleb128 0x2116
 3632 01bc 19       		.uleb128 0x19
 3633 01bd 00       		.byte	0
 3634 01be 00       		.byte	0
 3635 01bf 1A       		.uleb128 0x1a
 3636 01c0 34       		.uleb128 0x34
 3637 01c1 00       		.byte	0
 3638 01c2 03       		.uleb128 0x3
 3639 01c3 0E       		.uleb128 0xe
 3640 01c4 3A       		.uleb128 0x3a
 3641 01c5 0B       		.uleb128 0xb
 3642 01c6 3B       		.uleb128 0x3b
 3643 01c7 05       		.uleb128 0x5
 3644 01c8 49       		.uleb128 0x49
 3645 01c9 13       		.uleb128 0x13
 3646 01ca 3F       		.uleb128 0x3f
 3647 01cb 19       		.uleb128 0x19
 3648 01cc 3C       		.uleb128 0x3c
 3649 01cd 19       		.uleb128 0x19
 3650 01ce 00       		.byte	0
 3651 01cf 00       		.byte	0
 3652 01d0 1B       		.uleb128 0x1b
 3653 01d1 35       		.uleb128 0x35
 3654 01d2 00       		.byte	0
 3655 01d3 49       		.uleb128 0x49
 3656 01d4 13       		.uleb128 0x13
 3657 01d5 00       		.byte	0
 3658 01d6 00       		.byte	0
 3659 01d7 1C       		.uleb128 0x1c
 3660 01d8 34       		.uleb128 0x34
 3661 01d9 00       		.byte	0
 3662 01da 03       		.uleb128 0x3
 3663 01db 08       		.uleb128 0x8
 3664 01dc 3A       		.uleb128 0x3a
 3665 01dd 0B       		.uleb128 0xb
 3666 01de 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 75


 3667 01df 0B       		.uleb128 0xb
 3668 01e0 49       		.uleb128 0x49
 3669 01e1 13       		.uleb128 0x13
 3670 01e2 3F       		.uleb128 0x3f
 3671 01e3 19       		.uleb128 0x19
 3672 01e4 02       		.uleb128 0x2
 3673 01e5 18       		.uleb128 0x18
 3674 01e6 00       		.byte	0
 3675 01e7 00       		.byte	0
 3676 01e8 1D       		.uleb128 0x1d
 3677 01e9 34       		.uleb128 0x34
 3678 01ea 00       		.byte	0
 3679 01eb 03       		.uleb128 0x3
 3680 01ec 0E       		.uleb128 0xe
 3681 01ed 3A       		.uleb128 0x3a
 3682 01ee 0B       		.uleb128 0xb
 3683 01ef 3B       		.uleb128 0x3b
 3684 01f0 0B       		.uleb128 0xb
 3685 01f1 49       		.uleb128 0x49
 3686 01f2 13       		.uleb128 0x13
 3687 01f3 3F       		.uleb128 0x3f
 3688 01f4 19       		.uleb128 0x19
 3689 01f5 02       		.uleb128 0x2
 3690 01f6 18       		.uleb128 0x18
 3691 01f7 00       		.byte	0
 3692 01f8 00       		.byte	0
 3693 01f9 1E       		.uleb128 0x1e
 3694 01fa 01       		.uleb128 0x1
 3695 01fb 01       		.byte	0x1
 3696 01fc 49       		.uleb128 0x49
 3697 01fd 13       		.uleb128 0x13
 3698 01fe 01       		.uleb128 0x1
 3699 01ff 13       		.uleb128 0x13
 3700 0200 00       		.byte	0
 3701 0201 00       		.byte	0
 3702 0202 1F       		.uleb128 0x1f
 3703 0203 21       		.uleb128 0x21
 3704 0204 00       		.byte	0
 3705 0205 49       		.uleb128 0x49
 3706 0206 13       		.uleb128 0x13
 3707 0207 2F       		.uleb128 0x2f
 3708 0208 0B       		.uleb128 0xb
 3709 0209 00       		.byte	0
 3710 020a 00       		.byte	0
 3711 020b 20       		.uleb128 0x20
 3712 020c 34       		.uleb128 0x34
 3713 020d 00       		.byte	0
 3714 020e 03       		.uleb128 0x3
 3715 020f 08       		.uleb128 0x8
 3716 0210 3A       		.uleb128 0x3a
 3717 0211 0B       		.uleb128 0xb
 3718 0212 3B       		.uleb128 0x3b
 3719 0213 0B       		.uleb128 0xb
 3720 0214 49       		.uleb128 0x49
 3721 0215 13       		.uleb128 0x13
 3722 0216 3F       		.uleb128 0x3f
 3723 0217 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 76


 3724 0218 3C       		.uleb128 0x3c
 3725 0219 19       		.uleb128 0x19
 3726 021a 00       		.byte	0
 3727 021b 00       		.byte	0
 3728 021c 21       		.uleb128 0x21
 3729 021d 34       		.uleb128 0x34
 3730 021e 00       		.byte	0
 3731 021f 03       		.uleb128 0x3
 3732 0220 0E       		.uleb128 0xe
 3733 0221 3A       		.uleb128 0x3a
 3734 0222 0B       		.uleb128 0xb
 3735 0223 3B       		.uleb128 0x3b
 3736 0224 05       		.uleb128 0x5
 3737 0225 49       		.uleb128 0x49
 3738 0226 13       		.uleb128 0x13
 3739 0227 3F       		.uleb128 0x3f
 3740 0228 19       		.uleb128 0x19
 3741 0229 02       		.uleb128 0x2
 3742 022a 18       		.uleb128 0x18
 3743 022b 00       		.byte	0
 3744 022c 00       		.byte	0
 3745 022d 00       		.byte	0
 3746              		.section	.debug_aranges,"",%progbits
 3747 0000 7C000000 		.4byte	0x7c
 3748 0004 0200     		.2byte	0x2
 3749 0006 00000000 		.4byte	.Ldebug_info0
 3750 000a 04       		.byte	0x4
 3751 000b 00       		.byte	0
 3752 000c 0000     		.2byte	0
 3753 000e 0000     		.2byte	0
 3754 0010 00000000 		.4byte	.LFB64
 3755 0014 F4000000 		.4byte	.LFE64-.LFB64
 3756 0018 00000000 		.4byte	.LFB65
 3757 001c 18000000 		.4byte	.LFE65-.LFB65
 3758 0020 00000000 		.4byte	.LFB66
 3759 0024 18000000 		.4byte	.LFE66-.LFB66
 3760 0028 00000000 		.4byte	.LFB67
 3761 002c 18000000 		.4byte	.LFE67-.LFB67
 3762 0030 00000000 		.4byte	.LFB68
 3763 0034 18000000 		.4byte	.LFE68-.LFB68
 3764 0038 00000000 		.4byte	.LFB69
 3765 003c 38000000 		.4byte	.LFE69-.LFB69
 3766 0040 00000000 		.4byte	.LFB70
 3767 0044 A0000000 		.4byte	.LFE70-.LFB70
 3768 0048 00000000 		.4byte	.LFB71
 3769 004c 54000000 		.4byte	.LFE71-.LFB71
 3770 0050 00000000 		.4byte	.LFB72
 3771 0054 34000000 		.4byte	.LFE72-.LFB72
 3772 0058 00000000 		.4byte	.LFB73
 3773 005c 98040000 		.4byte	.LFE73-.LFB73
 3774 0060 00000000 		.4byte	.LFB74
 3775 0064 6C010000 		.4byte	.LFE74-.LFB74
 3776 0068 00000000 		.4byte	.LFB75
 3777 006c 18030000 		.4byte	.LFE75-.LFB75
 3778 0070 00000000 		.4byte	.LFB76
 3779 0074 98000000 		.4byte	.LFE76-.LFB76
 3780 0078 00000000 		.4byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 77


 3781 007c 00000000 		.4byte	0
 3782              		.section	.debug_ranges,"",%progbits
 3783              	.Ldebug_ranges0:
 3784 0000 00000000 		.4byte	.LFB64
 3785 0004 F4000000 		.4byte	.LFE64
 3786 0008 00000000 		.4byte	.LFB65
 3787 000c 18000000 		.4byte	.LFE65
 3788 0010 00000000 		.4byte	.LFB66
 3789 0014 18000000 		.4byte	.LFE66
 3790 0018 00000000 		.4byte	.LFB67
 3791 001c 18000000 		.4byte	.LFE67
 3792 0020 00000000 		.4byte	.LFB68
 3793 0024 18000000 		.4byte	.LFE68
 3794 0028 00000000 		.4byte	.LFB69
 3795 002c 38000000 		.4byte	.LFE69
 3796 0030 00000000 		.4byte	.LFB70
 3797 0034 A0000000 		.4byte	.LFE70
 3798 0038 00000000 		.4byte	.LFB71
 3799 003c 54000000 		.4byte	.LFE71
 3800 0040 00000000 		.4byte	.LFB72
 3801 0044 34000000 		.4byte	.LFE72
 3802 0048 00000000 		.4byte	.LFB73
 3803 004c 98040000 		.4byte	.LFE73
 3804 0050 00000000 		.4byte	.LFB74
 3805 0054 6C010000 		.4byte	.LFE74
 3806 0058 00000000 		.4byte	.LFB75
 3807 005c 18030000 		.4byte	.LFE75
 3808 0060 00000000 		.4byte	.LFB76
 3809 0064 98000000 		.4byte	.LFE76
 3810 0068 00000000 		.4byte	0
 3811 006c 00000000 		.4byte	0
 3812              		.section	.debug_line,"",%progbits
 3813              	.Ldebug_line0:
 3814 0000 64040000 		.section	.debug_str,"MS",%progbits,1
 3814      02005F01 
 3814      00000201 
 3814      FB0E0D00 
 3814      01010101 
 3815              	.LASF58:
 3816 0000 53365F44 		.ascii	"S6_DETECTED\000"
 3816      45544543 
 3816      54454400 
 3817              	.LASF104:
 3818 000c 73746F70 		.ascii	"stoppedAfterTurn\000"
 3818      70656441 
 3818      66746572 
 3818      5475726E 
 3818      00
 3819              	.LASF40:
 3820 001d 5475726E 		.ascii	"TurnLeft\000"
 3820      4C656674 
 3820      00
 3821              	.LASF65:
 3822 0026 52656368 		.ascii	"RecheckPosition\000"
 3822      65636B50 
 3822      6F736974 
 3822      696F6E00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 78


 3823              	.LASF71:
 3824 0036 74735F65 		.ascii	"ts_enc\000"
 3824      6E6300
 3825              	.LASF48:
 3826 003d 466F7277 		.ascii	"ForwardAfterTurn\000"
 3826      61726441 
 3826      66746572 
 3826      5475726E 
 3826      00
 3827              	.LASF80:
 3828 004e 666C6167 		.ascii	"flag_packet\000"
 3828      5F706163 
 3828      6B657400 
 3829              	.LASF45:
 3830 005a 77616974 		.ascii	"waitForTurn\000"
 3830      466F7254 
 3830      75726E00 
 3831              	.LASF77:
 3832 0066 666C6167 		.ascii	"flag_ts_speed\000"
 3832      5F74735F 
 3832      73706565 
 3832      6400
 3833              	.LASF34:
 3834 0074 67325F78 		.ascii	"g2_xpos\000"
 3834      706F7300 
 3835              	.LASF2:
 3836 007c 73686F72 		.ascii	"short int\000"
 3836      7420696E 
 3836      7400
 3837              	.LASF88:
 3838 0086 73797374 		.ascii	"system_state\000"
 3838      656D5F73 
 3838      74617465 
 3838      00
 3839              	.LASF10:
 3840 0093 73697A65 		.ascii	"sizetype\000"
 3840      74797065 
 3840      00
 3841              	.LASF99:
 3842 009c 73746F70 		.ascii	"stopBuffer\000"
 3842      42756666 
 3842      657200
 3843              	.LASF50:
 3844 00a7 44697265 		.ascii	"DirectionState\000"
 3844      6374696F 
 3844      6E537461 
 3844      746500
 3845              	.LASF87:
 3846 00b6 75736242 		.ascii	"usbBuffer\000"
 3846      75666665 
 3846      7200
 3847              	.LASF106:
 3848 00c0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3848      43313120 
 3848      352E342E 
 3848      31203230 
 3848      31363036 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 79


 3849 00f3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3849      20726576 
 3849      6973696F 
 3849      6E203233 
 3849      37373135 
 3850 0126 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3850      66756E63 
 3850      74696F6E 
 3850      2D736563 
 3850      74696F6E 
 3851              	.LASF60:
 3852 014e 6D61696E 		.ascii	"main\000"
 3852      00
 3853              	.LASF46:
 3854 0153 77616974 		.ascii	"waitForRightTurn\000"
 3854      466F7252 
 3854      69676874 
 3854      5475726E 
 3854      00
 3855              	.LASF63:
 3856 0164 4765744E 		.ascii	"GetNextStep\000"
 3856      65787453 
 3856      74657000 
 3857              	.LASF56:
 3858 0170 53345F44 		.ascii	"S4_DETECTED\000"
 3858      45544543 
 3858      54454400 
 3859              	.LASF41:
 3860 017c 41646A75 		.ascii	"AdjustToTheLeft\000"
 3860      7374546F 
 3860      5468654C 
 3860      65667400 
 3861              	.LASF15:
 3862 018c 75696E74 		.ascii	"uint16\000"
 3862      313600
 3863              	.LASF22:
 3864 0193 696E6465 		.ascii	"index\000"
 3864      7800
 3865              	.LASF62:
 3866 0199 73706565 		.ascii	"speedTimer\000"
 3866      6454696D 
 3866      657200
 3867              	.LASF18:
 3868 01a4 696E7431 		.ascii	"int16\000"
 3868      3600
 3869              	.LASF14:
 3870 01aa 75696E74 		.ascii	"uint8\000"
 3870      3800
 3871              	.LASF33:
 3872 01b0 67315F64 		.ascii	"g1_direction\000"
 3872      69726563 
 3872      74696F6E 
 3872      00
 3873              	.LASF85:
 3874 01bd 6C696E65 		.ascii	"line\000"
 3874      00
 3875              	.LASF19:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 80


 3876 01c2 666C6F61 		.ascii	"float\000"
 3876      7400
 3877              	.LASF54:
 3878 01c8 52696768 		.ascii	"Right\000"
 3878      7400
 3879              	.LASF61:
 3880 01ce 6E657744 		.ascii	"newDistance\000"
 3880      69737461 
 3880      6E636500 
 3881              	.LASF6:
 3882 01da 6C6F6E67 		.ascii	"long long int\000"
 3882      206C6F6E 
 3882      6720696E 
 3882      7400
 3883              	.LASF17:
 3884 01e8 696E7438 		.ascii	"int8\000"
 3884      00
 3885              	.LASF100:
 3886 01ed 78426C6F 		.ascii	"xBlocksize\000"
 3886      636B7369 
 3886      7A6500
 3887              	.LASF76:
 3888 01f8 666C6167 		.ascii	"flag_ts_update\000"
 3888      5F74735F 
 3888      75706461 
 3888      746500
 3889              	.LASF35:
 3890 0207 67325F79 		.ascii	"g2_ypos\000"
 3890      706F7300 
 3891              	.LASF29:
 3892 020f 67305F64 		.ascii	"g0_direction\000"
 3892      69726563 
 3892      74696F6E 
 3892      00
 3893              	.LASF26:
 3894 021c 67305F78 		.ascii	"g0_xpos\000"
 3894      706F7300 
 3895              	.LASF92:
 3896 0224 70726576 		.ascii	"previousOrientation\000"
 3896      696F7573 
 3896      4F726965 
 3896      6E746174 
 3896      696F6E00 
 3897              	.LASF53:
 3898 0238 4C656674 		.ascii	"Left\000"
 3898      00
 3899              	.LASF66:
 3900 023d 43686563 		.ascii	"CheckSensorDirection\000"
 3900      6B53656E 
 3900      736F7244 
 3900      69726563 
 3900      74696F6E 
 3901              	.LASF97:
 3902 0252 74696D65 		.ascii	"timerInt\000"
 3902      72496E74 
 3902      00
 3903              	.LASF78:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 81


 3904 025b 666C6167 		.ascii	"flag_ts_display\000"
 3904      5F74735F 
 3904      64697370 
 3904      6C617900 
 3905              	.LASF79:
 3906 026b 666C6167 		.ascii	"flag_rx\000"
 3906      5F727800 
 3907              	.LASF67:
 3908 0273 626C6F63 		.ascii	"blocksize\000"
 3908      6B73697A 
 3908      6500
 3909              	.LASF1:
 3910 027d 756E7369 		.ascii	"unsigned char\000"
 3910      676E6564 
 3910      20636861 
 3910      7200
 3911              	.LASF93:
 3912 028b 746F7461 		.ascii	"totalMilliseconds\000"
 3912      6C4D696C 
 3912      6C697365 
 3912      636F6E64 
 3912      7300
 3913              	.LASF86:
 3914 029d 656E7472 		.ascii	"entry\000"
 3914      7900
 3915              	.LASF9:
 3916 02a3 6C6F6E67 		.ascii	"long double\000"
 3916      20646F75 
 3916      626C6500 
 3917              	.LASF103:
 3918 02af 63757272 		.ascii	"currentCol\000"
 3918      656E7443 
 3918      6F6C00
 3919              	.LASF90:
 3920 02ba 70726576 		.ascii	"previousDirection\000"
 3920      696F7573 
 3920      44697265 
 3920      6374696F 
 3920      6E00
 3921              	.LASF94:
 3922 02cc 746F7461 		.ascii	"totalDistance\000"
 3922      6C446973 
 3922      74616E63 
 3922      6500
 3923              	.LASF98:
 3924 02da 6B656570 		.ascii	"keepLedOn\000"
 3924      4C65644F 
 3924      6E00
 3925              	.LASF28:
 3926 02e4 67305F73 		.ascii	"g0_speed\000"
 3926      70656564 
 3926      00
 3927              	.LASF101:
 3928 02ed 79426C6F 		.ascii	"yBlocksize\000"
 3928      636B7369 
 3928      7A6500
 3929              	.LASF82:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 82


 3930 02f8 64617461 		.ascii	"dataready_flag\000"
 3930      72656164 
 3930      795F666C 
 3930      616700
 3931              	.LASF30:
 3932 0307 67315F78 		.ascii	"g1_xpos\000"
 3932      706F7300 
 3933              	.LASF0:
 3934 030f 7369676E 		.ascii	"signed char\000"
 3934      65642063 
 3934      68617200 
 3935              	.LASF13:
 3936 031b 696E7433 		.ascii	"int32_t\000"
 3936      325F7400 
 3937              	.LASF7:
 3938 0323 6C6F6E67 		.ascii	"long long unsigned int\000"
 3938      206C6F6E 
 3938      6720756E 
 3938      7369676E 
 3938      65642069 
 3939              	.LASF42:
 3940 033a 41646A75 		.ascii	"AdjustToTheRight\000"
 3940      7374546F 
 3940      54686552 
 3940      69676874 
 3940      00
 3941              	.LASF8:
 3942 034b 756E7369 		.ascii	"unsigned int\000"
 3942      676E6564 
 3942      20696E74 
 3942      00
 3943              	.LASF72:
 3944 0358 74735F75 		.ascii	"ts_update\000"
 3944      70646174 
 3944      6500
 3945              	.LASF81:
 3946 0362 666C6167 		.ascii	"flag_KB_string\000"
 3946      5F4B425F 
 3946      73747269 
 3946      6E6700
 3947              	.LASF69:
 3948 0371 53657452 		.ascii	"SetRobotMovement\000"
 3948      6F626F74 
 3948      4D6F7665 
 3948      6D656E74 
 3948      00
 3949              	.LASF59:
 3950 0382 54494D45 		.ascii	"TIMER_FINISH\000"
 3950      525F4649 
 3950      4E495348 
 3950      00
 3951              	.LASF36:
 3952 038f 67325F73 		.ascii	"g2_speed\000"
 3952      70656564 
 3952      00
 3953              	.LASF57:
 3954 0398 53355F44 		.ascii	"S5_DETECTED\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 83


 3954      45544543 
 3954      54454400 
 3955              	.LASF3:
 3956 03a4 73686F72 		.ascii	"short unsigned int\000"
 3956      7420756E 
 3956      7369676E 
 3956      65642069 
 3956      6E7400
 3957              	.LASF109:
 3958 03b7 64617461 		.ascii	"data_main\000"
 3958      5F6D6169 
 3958      6E00
 3959              	.LASF68:
 3960 03c1 52657365 		.ascii	"ResetSensorFlags\000"
 3960      7453656E 
 3960      736F7246 
 3960      6C616773 
 3960      00
 3961              	.LASF11:
 3962 03d2 63686172 		.ascii	"char\000"
 3962      00
 3963              	.LASF4:
 3964 03d7 6C6F6E67 		.ascii	"long int\000"
 3964      20696E74 
 3964      00
 3965              	.LASF38:
 3966 03e0 466F7277 		.ascii	"Forward\000"
 3966      61726400 
 3967              	.LASF108:
 3968 03e8 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3968      6F63756D 
 3968      656E7473 
 3968      5C476974 
 3968      4875625C 
 3969 0417 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3969      635F636F 
 3969      64655F62 
 3969      6173655C 
 3969      43533330 
 3970              	.LASF96:
 3971 0439 71756164 		.ascii	"quadDec2Count\000"
 3971      44656332 
 3971      436F756E 
 3971      7400
 3972              	.LASF31:
 3973 0447 67315F79 		.ascii	"g1_ypos\000"
 3973      706F7300 
 3974              	.LASF37:
 3975 044f 67325F64 		.ascii	"g2_direction\000"
 3975      69726563 
 3975      74696F6E 
 3975      00
 3976              	.LASF32:
 3977 045c 67315F73 		.ascii	"g1_speed\000"
 3977      70656564 
 3977      00
 3978              	.LASF84:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 84


 3979 0465 64697370 		.ascii	"displaystring\000"
 3979      6C617973 
 3979      7472696E 
 3979      6700
 3980              	.LASF105:
 3981 0473 69676E6F 		.ascii	"ignoreSensor\000"
 3981      72655365 
 3981      6E736F72 
 3981      00
 3982              	.LASF23:
 3983 0480 726F626F 		.ascii	"robot_xpos\000"
 3983      745F7870 
 3983      6F7300
 3984              	.LASF39:
 3985 048b 5475726E 		.ascii	"TurnRight\000"
 3985      52696768 
 3985      7400
 3986              	.LASF95:
 3987 0495 62756666 		.ascii	"buffer\000"
 3987      657200
 3988              	.LASF16:
 3989 049c 75696E74 		.ascii	"uint32\000"
 3989      333200
 3990              	.LASF107:
 3991 04a3 6D61696E 		.ascii	"main.c\000"
 3991      2E6300
 3992              	.LASF5:
 3993 04aa 6C6F6E67 		.ascii	"long unsigned int\000"
 3993      20756E73 
 3993      69676E65 
 3993      6420696E 
 3993      7400
 3994              	.LASF49:
 3995 04bc 4261636B 		.ascii	"Backward\000"
 3995      77617264 
 3995      00
 3996              	.LASF20:
 3997 04c5 646F7562 		.ascii	"double\000"
 3997      6C6500
 3998              	.LASF44:
 3999 04cc 556E6B6E 		.ascii	"Unknown\000"
 3999      6F776E00 
 4000              	.LASF102:
 4001 04d4 63757272 		.ascii	"currentRow\000"
 4001      656E7452 
 4001      6F7700
 4002              	.LASF55:
 4003 04df 53335F44 		.ascii	"S3_DETECTED\000"
 4003      45544543 
 4003      54454400 
 4004              	.LASF73:
 4005 04eb 74735F73 		.ascii	"ts_speed\000"
 4005      70656564 
 4005      00
 4006              	.LASF111:
 4007 04f4 636F756E 		.ascii	"count\000"
 4007      7400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 85


 4008              	.LASF75:
 4009 04fa 666C6167 		.ascii	"flag_ts_enc\000"
 4009      5F74735F 
 4009      656E6300 
 4010              	.LASF12:
 4011 0506 5F5F696E 		.ascii	"__int32_t\000"
 4011      7433325F 
 4011      7400
 4012              	.LASF43:
 4013 0510 53746F70 		.ascii	"Stop\000"
 4013      00
 4014              	.LASF27:
 4015 0515 67305F79 		.ascii	"g0_ypos\000"
 4015      706F7300 
 4016              	.LASF25:
 4017 051d 726F626F 		.ascii	"robot_orientation\000"
 4017      745F6F72 
 4017      69656E74 
 4017      6174696F 
 4017      6E00
 4018              	.LASF74:
 4019 052f 74735F64 		.ascii	"ts_display\000"
 4019      6973706C 
 4019      617900
 4020              	.LASF47:
 4021 053a 77616974 		.ascii	"waitForLeftTurn\000"
 4021      466F724C 
 4021      65667454 
 4021      75726E00 
 4022              	.LASF110:
 4023 054a 71756164 		.ascii	"quadCountToRPM\000"
 4023      436F756E 
 4023      74546F52 
 4023      504D00
 4024              	.LASF83:
 4025 0559 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4025      5F72665F 
 4025      7472616E 
 4025      736D6973 
 4025      73696F6E 
 4026              	.LASF24:
 4027 0575 726F626F 		.ascii	"robot_ypos\000"
 4027      745F7970 
 4027      6F7300
 4028              	.LASF70:
 4029 0580 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4029      52784275 
 4029      66666572 
 4029      00
 4030              	.LASF91:
 4031 058d 63757272 		.ascii	"currentOrientation\000"
 4031      656E744F 
 4031      7269656E 
 4031      74617469 
 4031      6F6E00
 4032              	.LASF52:
 4033 05a0 446F776E 		.ascii	"Down\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cck8TKNE.s 			page 86


 4033      00
 4034              	.LASF89:
 4035 05a5 63757272 		.ascii	"currentDirection\000"
 4035      656E7444 
 4035      69726563 
 4035      74696F6E 
 4035      00
 4036              	.LASF64:
 4037 05b6 64697265 		.ascii	"directionState\000"
 4037      6374696F 
 4037      6E537461 
 4037      746500
 4038              	.LASF21:
 4039 05c5 72737369 		.ascii	"rssi\000"
 4039      00
 4040              	.LASF51:
 4041 05ca 4F726965 		.ascii	"OrientationState\000"
 4041      6E746174 
 4041      696F6E53 
 4041      74617465 
 4041      00
 4042              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
