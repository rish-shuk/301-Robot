ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,16,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.global	instructionIndex
 124              		.bss
 125 0013 00       		.align	2
 126              		.type	instructionIndex, %object
 127              		.size	instructionIndex, 4
 128              	instructionIndex:
 129 0014 00000000 		.space	4
 130              		.comm	s3,1,1
 131              		.comm	s4,1,1
 132              		.comm	s5,1,1
 133              		.global	s6
 134              		.type	s6, %object
 135              		.size	s6, 1
 136              	s6:
 137 0018 00       		.space	1
 138              		.global	totalMilliseconds
 139 0019 000000   		.align	2
 140              		.type	totalMilliseconds, %object
 141              		.size	totalMilliseconds, 4
 142              	totalMilliseconds:
 143 001c 00000000 		.space	4
 144              		.global	totalDistance
 145              		.align	2
 146              		.type	totalDistance, %object
 147              		.size	totalDistance, 4
 148              	totalDistance:
 149 0020 00000000 		.space	4
 150              		.comm	buffer,69,4
 151              		.global	quadDec2Count
 152              		.align	2
 153              		.type	quadDec2Count, %object
 154              		.size	quadDec2Count, 4
 155              	quadDec2Count:
 156 0024 00000000 		.space	4
 157              		.global	timerInt
 158              		.align	2
 159              		.type	timerInt, %object
 160              		.size	timerInt, 4
 161              	timerInt:
 162 0028 00000000 		.space	4
 163              		.global	keepLedOn
 164              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 4


 165              		.type	keepLedOn, %object
 166              		.size	keepLedOn, 4
 167              	keepLedOn:
 168 002c 00000000 		.space	4
 169              		.global	stopBuffer
 170              		.align	2
 171              		.type	stopBuffer, %object
 172              		.size	stopBuffer, 4
 173              	stopBuffer:
 174 0030 00000000 		.space	4
 175              		.global	turnStartedFlag
 176              		.type	turnStartedFlag, %object
 177              		.size	turnStartedFlag, 1
 178              	turnStartedFlag:
 179 0034 00       		.space	1
 180              		.global	turnFinishedFlag
 181              		.type	turnFinishedFlag, %object
 182              		.size	turnFinishedFlag, 1
 183              	turnFinishedFlag:
 184 0035 00       		.space	1
 185              		.global	forwardUntilTargetStartedFlag
 186              		.type	forwardUntilTargetStartedFlag, %object
 187              		.size	forwardUntilTargetStartedFlag, 1
 188              	forwardUntilTargetStartedFlag:
 189 0036 00       		.space	1
 190              		.global	uTurnStartedFlag
 191              		.type	uTurnStartedFlag, %object
 192              		.size	uTurnStartedFlag, 1
 193              	uTurnStartedFlag:
 194 0037 00       		.space	1
 195              		.global	uTurnFinishedFlag
 196              		.type	uTurnFinishedFlag, %object
 197              		.size	uTurnFinishedFlag, 1
 198              	uTurnFinishedFlag:
 199 0038 00       		.space	1
 200              		.global	junctionConfiguration
 201 0039 000000   		.align	2
 202              		.type	junctionConfiguration, %object
 203              		.size	junctionConfiguration, 4
 204              	junctionConfiguration:
 205 003c 00000000 		.space	4
 206              		.global	blockSizeTotal
 207              		.align	2
 208              		.type	blockSizeTotal, %object
 209              		.size	blockSizeTotal, 4
 210              	blockSizeTotal:
 211 0040 00000000 		.space	4
 212              		.global	__aeabi_i2d
 213              		.global	__aeabi_dmul
 214              		.global	__aeabi_ddiv
 215              		.global	__aeabi_d2f
 216              		.global	__aeabi_fadd
 217              		.section	.text.speedTimer,"ax",%progbits
 218              		.align	2
 219              		.global	speedTimer
 220              		.thumb
 221              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 5


 222              		.type	speedTimer, %function
 223              	speedTimer:
 224              	.LFB64:
 225              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** 
  52:main.c        **** uint8 turnStartedFlag = 0;
  53:main.c        **** uint8 turnFinishedFlag = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 6


  54:main.c        **** 
  55:main.c        **** uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** uint8 uTurnStartedFlag = 0;
  57:main.c        **** uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** uint8 junctionConfiguration[4] = {0};
  60:main.c        **** 
  61:main.c        **** float blockSizeTotal = 0;
  62:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  63:main.c        **** 
  64:main.c        **** CY_ISR (speedTimer) {
 226              		.loc 1 64 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 90B5     		push	{r4, r7, lr}
 231              		.cfi_def_cfa_offset 12
 232              		.cfi_offset 4, -12
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 83B0     		sub	sp, sp, #12
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
  65:main.c        ****     timerInt = 1;
 239              		.loc 1 65 0
 240 0006 344B     		ldr	r3, .L4+16
 241 0008 0122     		movs	r2, #1
 242 000a 1A60     		str	r2, [r3]
  66:main.c        ****     //quadDec_M1 used for turning macros
  67:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 243              		.loc 1 67 0
 244 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 245 0010 0346     		mov	r3, r0
 246 0012 1A46     		mov	r2, r3
 247 0014 314B     		ldr	r3, .L4+20
 248 0016 1A60     		str	r2, [r3]
  68:main.c        ****     
  69:main.c        ****     if ((currentDirection == Forward || 
 249              		.loc 1 69 0
 250 0018 314B     		ldr	r3, .L4+24
 251 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 252 001c 002B     		cmp	r3, #0
 253 001e 13D0     		beq	.L2
  70:main.c        ****         currentDirection == ForwardAfterTurn ||
 254              		.loc 1 70 0 discriminator 1
 255 0020 2F4B     		ldr	r3, .L4+24
 256 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69:main.c        ****         currentDirection == ForwardAfterTurn ||
 257              		.loc 1 69 0 discriminator 1
 258 0024 082B     		cmp	r3, #8
 259 0026 0FD0     		beq	.L2
  71:main.c        ****         currentDirection == waitForTurn || 
 260              		.loc 1 71 0
 261 0028 2D4B     		ldr	r3, .L4+24
 262 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70:main.c        ****         currentDirection == ForwardAfterTurn ||
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 7


 263              		.loc 1 70 0
 264 002c 072B     		cmp	r3, #7
 265 002e 0BD0     		beq	.L2
  72:main.c        ****         currentDirection == AdjustToTheLeft ||
 266              		.loc 1 72 0
 267 0030 2B4B     		ldr	r3, .L4+24
 268 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71:main.c        ****         currentDirection == waitForTurn || 
 269              		.loc 1 71 0
 270 0034 032B     		cmp	r3, #3
 271 0036 07D0     		beq	.L2
  73:main.c        ****         currentDirection == AdjustToTheRight ||
 272              		.loc 1 73 0
 273 0038 294B     		ldr	r3, .L4+24
 274 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72:main.c        ****         currentDirection == AdjustToTheLeft ||
 275              		.loc 1 72 0
 276 003c 042B     		cmp	r3, #4
 277 003e 03D0     		beq	.L2
  74:main.c        ****         currentDirection == Backward) &&
 278              		.loc 1 74 0
 279 0040 274B     		ldr	r3, .L4+24
 280 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  73:main.c        ****         currentDirection == AdjustToTheRight ||
 281              		.loc 1 73 0
 282 0044 092B     		cmp	r3, #9
 283 0046 34D1     		bne	.L3
 284              	.L2:
  75:main.c        ****         quadDec2Count != 0) {
 285              		.loc 1 75 0
 286 0048 244B     		ldr	r3, .L4+20
 287 004a 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == Backward) &&
 288              		.loc 1 74 0
 289 004c 002B     		cmp	r3, #0
 290 004e 30D0     		beq	.L3
 291              	.LBB2:
  76:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  77:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 292              		.loc 1 77 0
 293 0050 224B     		ldr	r3, .L4+20
 294 0052 1B68     		ldr	r3, [r3]
 295 0054 002B     		cmp	r3, #0
 296 0056 B8BF     		it	lt
 297 0058 5B42     		rsblt	r3, r3, #0
 298 005a 1846     		mov	r0, r3
 299 005c FFF7FEFF 		bl	__aeabi_i2d
 300 0060 19A3     		adr	r3, .L4
 301 0062 D3E90023 		ldrd	r2, [r3]
 302 0066 FFF7FEFF 		bl	__aeabi_dmul
 303 006a 0346     		mov	r3, r0
 304 006c 0C46     		mov	r4, r1
 305 006e 1846     		mov	r0, r3
 306 0070 2146     		mov	r1, r4
 307 0072 17A3     		adr	r3, .L4+8
 308 0074 D3E90023 		ldrd	r2, [r3]
 309 0078 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 8


 310 007c 0346     		mov	r3, r0
 311 007e 0C46     		mov	r4, r1
 312 0080 1846     		mov	r0, r3
 313 0082 2146     		mov	r1, r4
 314 0084 4FF00002 		mov	r2, #0
 315 0088 164B     		ldr	r3, .L4+28
 316 008a FFF7FEFF 		bl	__aeabi_ddiv
 317 008e 0346     		mov	r3, r0
 318 0090 0C46     		mov	r4, r1
 319 0092 1846     		mov	r0, r3
 320 0094 2146     		mov	r1, r4
 321 0096 FFF7FEFF 		bl	__aeabi_d2f
 322 009a 0346     		mov	r3, r0
 323 009c 7B60     		str	r3, [r7, #4]	@ float
  78:main.c        ****         
  79:main.c        ****         totalDistance = totalDistance + newDistance;
 324              		.loc 1 79 0
 325 009e 124B     		ldr	r3, .L4+32
 326 00a0 1B68     		ldr	r3, [r3]	@ float
 327 00a2 7968     		ldr	r1, [r7, #4]	@ float
 328 00a4 1846     		mov	r0, r3
 329 00a6 FFF7FEFF 		bl	__aeabi_fadd
 330 00aa 0346     		mov	r3, r0
 331 00ac 1A46     		mov	r2, r3
 332 00ae 0E4B     		ldr	r3, .L4+32
 333 00b0 1A60     		str	r2, [r3]	@ float
 334              	.L3:
 335              	.LBE2:
  80:main.c        ****     }
  81:main.c        ****     
  82:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 336              		.loc 1 82 0
 337 00b2 0020     		movs	r0, #0
 338 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  83:main.c        ****     QuadDec_M2_Start(); // restart counter
 339              		.loc 1 83 0
 340 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  84:main.c        ****     
  85:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 341              		.loc 1 85 0
 342 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  86:main.c        **** }
 343              		.loc 1 86 0
 344 00c0 00BF     		nop
 345 00c2 0C37     		adds	r7, r7, #12
 346              		.cfi_def_cfa_offset 12
 347 00c4 BD46     		mov	sp, r7
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 00c6 90BD     		pop	{r4, r7, pc}
 351              	.L5:
 352              		.align	3
 353              	.L4:
 354 00c8 182D4454 		.word	1413754136
 355 00cc FB210940 		.word	1074340347
 356 00d0 00000000 		.word	0
 357 00d4 00205040 		.word	1078992896
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 9


 358 00d8 00000000 		.word	timerInt
 359 00dc 00000000 		.word	quadDec2Count
 360 00e0 00000000 		.word	currentDirection
 361 00e4 00806C40 		.word	1080852480
 362 00e8 00000000 		.word	totalDistance
 363              		.cfi_endproc
 364              	.LFE64:
 365              		.size	speedTimer, .-speedTimer
 366              		.section	.text.S3_DETECTED,"ax",%progbits
 367              		.align	2
 368              		.global	S3_DETECTED
 369              		.thumb
 370              		.thumb_func
 371              		.type	S3_DETECTED, %function
 372              	S3_DETECTED:
 373              	.LFB65:
  87:main.c        **** 
  88:main.c        **** CY_ISR(S3_DETECTED) {
 374              		.loc 1 88 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 7, -4
 382 0002 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
  89:main.c        ****     // Sensor has detected WHITE
  90:main.c        ****     s3 = 1; // , Black = 0, White = 1
 384              		.loc 1 90 0
 385 0004 034B     		ldr	r3, .L7
 386 0006 0122     		movs	r2, #1
 387 0008 1A70     		strb	r2, [r3]
  91:main.c        ****     //LED_Write(1u);
  92:main.c        **** }
 388              		.loc 1 92 0
 389 000a 00BF     		nop
 390 000c BD46     		mov	sp, r7
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 000e 80BC     		pop	{r7}
 394              		.cfi_restore 7
 395              		.cfi_def_cfa_offset 0
 396 0010 7047     		bx	lr
 397              	.L8:
 398 0012 00BF     		.align	2
 399              	.L7:
 400 0014 00000000 		.word	s3
 401              		.cfi_endproc
 402              	.LFE65:
 403              		.size	S3_DETECTED, .-S3_DETECTED
 404              		.section	.text.S4_DETECTED,"ax",%progbits
 405              		.align	2
 406              		.global	S4_DETECTED
 407              		.thumb
 408              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 10


 409              		.type	S4_DETECTED, %function
 410              	S4_DETECTED:
 411              	.LFB66:
  93:main.c        **** 
  94:main.c        **** CY_ISR(S4_DETECTED) {
 412              		.loc 1 94 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
  95:main.c        ****     // Sensor has detected WHITE
  96:main.c        ****     s4 = 1; // , Black = 0, White = 1
 422              		.loc 1 96 0
 423 0004 034B     		ldr	r3, .L10
 424 0006 0122     		movs	r2, #1
 425 0008 1A70     		strb	r2, [r3]
  97:main.c        ****     //LED_Write(1u);
  98:main.c        **** }
 426              		.loc 1 98 0
 427 000a 00BF     		nop
 428 000c BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 000e 80BC     		pop	{r7}
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 0010 7047     		bx	lr
 435              	.L11:
 436 0012 00BF     		.align	2
 437              	.L10:
 438 0014 00000000 		.word	s4
 439              		.cfi_endproc
 440              	.LFE66:
 441              		.size	S4_DETECTED, .-S4_DETECTED
 442              		.section	.text.S5_DETECTED,"ax",%progbits
 443              		.align	2
 444              		.global	S5_DETECTED
 445              		.thumb
 446              		.thumb_func
 447              		.type	S5_DETECTED, %function
 448              	S5_DETECTED:
 449              	.LFB67:
  99:main.c        **** 
 100:main.c        **** CY_ISR(S5_DETECTED) {
 450              		.loc 1 100 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 11


 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 101:main.c        ****     // Sensor has detected WHITE
 102:main.c        ****     s5 = 1; // , Black = 0, White = 1
 460              		.loc 1 102 0
 461 0004 034B     		ldr	r3, .L13
 462 0006 0122     		movs	r2, #1
 463 0008 1A70     		strb	r2, [r3]
 103:main.c        ****     //LED_Write(1u);
 104:main.c        **** }
 464              		.loc 1 104 0
 465 000a 00BF     		nop
 466 000c BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 000e 80BC     		pop	{r7}
 470              		.cfi_restore 7
 471              		.cfi_def_cfa_offset 0
 472 0010 7047     		bx	lr
 473              	.L14:
 474 0012 00BF     		.align	2
 475              	.L13:
 476 0014 00000000 		.word	s5
 477              		.cfi_endproc
 478              	.LFE67:
 479              		.size	S5_DETECTED, .-S5_DETECTED
 480              		.section	.text.S6_DETECTED,"ax",%progbits
 481              		.align	2
 482              		.global	S6_DETECTED
 483              		.thumb
 484              		.thumb_func
 485              		.type	S6_DETECTED, %function
 486              	S6_DETECTED:
 487              	.LFB68:
 105:main.c        **** 
 106:main.c        **** CY_ISR(S6_DETECTED) {
 488              		.loc 1 106 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493 0000 80B4     		push	{r7}
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 107:main.c        ****     // Sensor has detected WHITE
 108:main.c        ****     s6 = 1; // , Black = 0, White = 1
 498              		.loc 1 108 0
 499 0004 034B     		ldr	r3, .L16
 500 0006 0122     		movs	r2, #1
 501 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     //LED_Write(1u);
 110:main.c        **** }
 502              		.loc 1 110 0
 503 000a 00BF     		nop
 504 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 12


 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 000e 80BC     		pop	{r7}
 508              		.cfi_restore 7
 509              		.cfi_def_cfa_offset 0
 510 0010 7047     		bx	lr
 511              	.L17:
 512 0012 00BF     		.align	2
 513              	.L16:
 514 0014 00000000 		.word	s6
 515              		.cfi_endproc
 516              	.LFE68:
 517              		.size	S6_DETECTED, .-S6_DETECTED
 518              		.section	.text.TIMER_FINISH,"ax",%progbits
 519              		.align	2
 520              		.global	TIMER_FINISH
 521              		.thumb
 522              		.thumb_func
 523              		.type	TIMER_FINISH, %function
 524              	TIMER_FINISH:
 525              	.LFB69:
 111:main.c        **** 
 112:main.c        **** CY_ISR(TIMER_FINISH) {
 526              		.loc 1 112 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530 0000 80B5     		push	{r7, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 113:main.c        ****     if (currentDirection == Stop) {
 536              		.loc 1 113 0
 537 0004 0A4B     		ldr	r3, .L21
 538 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539 0008 052B     		cmp	r3, #5
 540 000a 05D1     		bne	.L19
 114:main.c        ****         stopBuffer = stopBuffer + 1;
 541              		.loc 1 114 0
 542 000c 094B     		ldr	r3, .L21+4
 543 000e 1B68     		ldr	r3, [r3]
 544 0010 0133     		adds	r3, r3, #1
 545 0012 084A     		ldr	r2, .L21+4
 546 0014 1360     		str	r3, [r2]
 547 0016 02E0     		b	.L20
 548              	.L19:
 115:main.c        ****     } else {
 116:main.c        ****         stopBuffer = 0;
 549              		.loc 1 116 0
 550 0018 064B     		ldr	r3, .L21+4
 551 001a 0022     		movs	r2, #0
 552 001c 1A60     		str	r2, [r3]
 553              	.L20:
 117:main.c        ****     }
 118:main.c        ****     SetRobotMovement(); 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 13


 554              		.loc 1 118 0
 555 001e FFF7FEFF 		bl	SetRobotMovement
 119:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 556              		.loc 1 119 0
 557 0022 FFF7FEFF 		bl	ResetSensorFlags
 120:main.c        ****     Timer_LED_ReadStatusRegister();
 558              		.loc 1 120 0
 559 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 121:main.c        **** }
 560              		.loc 1 121 0
 561 002a 00BF     		nop
 562 002c 80BD     		pop	{r7, pc}
 563              	.L22:
 564 002e 00BF     		.align	2
 565              	.L21:
 566 0030 00000000 		.word	currentDirection
 567 0034 00000000 		.word	stopBuffer
 568              		.cfi_endproc
 569              	.LFE69:
 570              		.size	TIMER_FINISH, .-TIMER_FINISH
 571              		.section	.text.main,"ax",%progbits
 572              		.align	2
 573              		.global	main
 574              		.thumb
 575              		.thumb_func
 576              		.type	main, %function
 577              	main:
 578              	.LFB70:
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        **** int main()
 125:main.c        **** {
 579              		.loc 1 125 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583 0000 80B5     		push	{r7, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 0002 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 126:main.c        **** // ----- INITIALIZATIONS ----------
 127:main.c        ****     CYGlobalIntEnable;
 589              		.loc 1 127 0
 590              		.syntax unified
 591              	@ 127 "main.c" 1
 592 0004 62B6     		CPSIE   i
 593              	@ 0 "" 2
 128:main.c        ****     ResetSensorFlags();
 594              		.loc 1 128 0
 595              		.thumb
 596              		.syntax unified
 597 0006 FFF7FEFF 		bl	ResetSensorFlags
 129:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 598              		.loc 1 129 0
 599 000a FFF7FEFF 		bl	init
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 14


 130:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 600              		.loc 1 130 0
 601 000e 1F48     		ldr	r0, .L27
 602 0010 FFF7FEFF 		bl	isr_speed_StartEx
 131:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 603              		.loc 1 131 0
 604 0014 1E48     		ldr	r0, .L27+4
 605 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 132:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 606              		.loc 1 132 0
 607 001a 1E48     		ldr	r0, .L27+8
 608 001c FFF7FEFF 		bl	S3_detected_StartEx
 133:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 609              		.loc 1 133 0
 610 0020 1D48     		ldr	r0, .L27+12
 611 0022 FFF7FEFF 		bl	S4_detected_StartEx
 134:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 612              		.loc 1 134 0
 613 0026 1D48     		ldr	r0, .L27+16
 614 0028 FFF7FEFF 		bl	S5_detected_StartEx
 135:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 615              		.loc 1 135 0
 616 002c 1C48     		ldr	r0, .L27+20
 617 002e FFF7FEFF 		bl	S6_detected_StartEx
 136:main.c        ****     Timer_LED_Start();
 618              		.loc 1 136 0
 619 0032 FFF7FEFF 		bl	Timer_LED_Start
 137:main.c        ****     instructionList = findPath(map, food_list, 0);
 620              		.loc 1 137 0
 621 0036 0022     		movs	r2, #0
 622 0038 1A49     		ldr	r1, .L27+24
 623 003a 1B48     		ldr	r0, .L27+28
 624 003c FFF7FEFF 		bl	findPath
 625 0040 0246     		mov	r2, r0
 626 0042 1A4B     		ldr	r3, .L27+32
 627 0044 1A60     		str	r2, [r3]
 138:main.c        ****     numSteps = instructionsListLength();
 628              		.loc 1 138 0
 629 0046 FFF7FEFF 		bl	instructionsListLength
 630 004a 0346     		mov	r3, r0
 631 004c 1A46     		mov	r2, r3
 632 004e 184B     		ldr	r3, .L27+36
 633 0050 1A60     		str	r2, [r3]
 139:main.c        **** // ------USB SETUP ----------------    
 140:main.c        **** #ifdef USE_USB    
 141:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 634              		.loc 1 141 0
 635 0052 0121     		movs	r1, #1
 636 0054 0020     		movs	r0, #0
 637 0056 FFF7FEFF 		bl	USBUART_Start
 142:main.c        **** #endif        
 143:main.c        ****     RF_BT_SELECT_Write(0);
 638              		.loc 1 143 0
 639 005a 0020     		movs	r0, #0
 640 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 641              	.L26:
 144:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 15


 145:main.c        ****     //usbPutString("Initialised UART");
 146:main.c        ****     for(;;)
 147:main.c        ****     {
 148:main.c        ****         if(timerInt == 1) {
 642              		.loc 1 148 0
 643 0060 144B     		ldr	r3, .L27+40
 644 0062 1B68     		ldr	r3, [r3]
 645 0064 012B     		cmp	r3, #1
 646 0066 08D1     		bne	.L24
 149:main.c        ****             timerInt = 0;
 647              		.loc 1 149 0
 648 0068 124B     		ldr	r3, .L27+40
 649 006a 0022     		movs	r2, #0
 650 006c 1A60     		str	r2, [r3]
 150:main.c        ****             // calculate RPM of M2
 151:main.c        ****             quadCountToRPM(quadDec2Count);
 651              		.loc 1 151 0
 652 006e 124B     		ldr	r3, .L27+44
 653 0070 1B68     		ldr	r3, [r3]
 654 0072 9BB2     		uxth	r3, r3
 655 0074 1846     		mov	r0, r3
 656 0076 FFF7FEFF 		bl	quadCountToRPM
 657              	.L24:
 152:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 153:main.c        ****             //usbPutString(buffer);
 154:main.c        ****             //usbPutString(" ");
 155:main.c        ****         }
 156:main.c        ****         //handle_usb();
 157:main.c        ****         if (flag_KB_string == 1)
 658              		.loc 1 157 0
 659 007a 104B     		ldr	r3, .L27+48
 660 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 661 007e 012B     		cmp	r3, #1
 662 0080 EED1     		bne	.L26
 158:main.c        ****         {
 159:main.c        ****             //usbPutString("Total Distance: ");
 160:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 161:main.c        ****             //usbPutString(buffer);
 162:main.c        ****             flag_KB_string = 0;
 663              		.loc 1 162 0
 664 0082 0E4B     		ldr	r3, .L27+48
 665 0084 0022     		movs	r2, #0
 666 0086 1A70     		strb	r2, [r3]
 163:main.c        ****         }           
 164:main.c        ****     }
 667              		.loc 1 164 0
 668 0088 EAE7     		b	.L26
 669              	.L28:
 670 008a 00BF     		.align	2
 671              	.L27:
 672 008c 00000000 		.word	speedTimer
 673 0090 00000000 		.word	TIMER_FINISH
 674 0094 00000000 		.word	S3_DETECTED
 675 0098 00000000 		.word	S4_DETECTED
 676 009c 00000000 		.word	S5_DETECTED
 677 00a0 00000000 		.word	S6_DETECTED
 678 00a4 00000000 		.word	food_list
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 16


 679 00a8 00000000 		.word	map
 680 00ac 00000000 		.word	instructionList
 681 00b0 00000000 		.word	numSteps
 682 00b4 00000000 		.word	timerInt
 683 00b8 00000000 		.word	quadDec2Count
 684 00bc 00000000 		.word	flag_KB_string
 685              		.cfi_endproc
 686              	.LFE70:
 687              		.size	main, .-main
 688              		.global	__aeabi_fmul
 689              		.global	__aeabi_f2iz
 690              		.section	.text.quadCountToRPM,"ax",%progbits
 691              		.align	2
 692              		.global	quadCountToRPM
 693              		.thumb
 694              		.thumb_func
 695              		.type	quadCountToRPM, %function
 696              	quadCountToRPM:
 697              	.LFB71:
 165:main.c        ****     return 0;
 166:main.c        **** }
 167:main.c        **** 
 168:main.c        **** // Calculations
 169:main.c        **** //* ========================================
 170:main.c        **** int16 quadCountToRPM(uint16 count)
 171:main.c        **** {
 698              		.loc 1 171 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 16
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702 0000 90B5     		push	{r4, r7, lr}
 703              		.cfi_def_cfa_offset 12
 704              		.cfi_offset 4, -12
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 85B0     		sub	sp, sp, #20
 708              		.cfi_def_cfa_offset 32
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 0346     		mov	r3, r0
 712 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 172:main.c        ****     float cps = count/57.00;
 713              		.loc 1 172 0
 714 000a FB88     		ldrh	r3, [r7, #6]
 715 000c 1846     		mov	r0, r3
 716 000e FFF7FEFF 		bl	__aeabi_i2d
 717 0012 4FF00002 		mov	r2, #0
 718 0016 0D4B     		ldr	r3, .L31
 719 0018 FFF7FEFF 		bl	__aeabi_ddiv
 720 001c 0346     		mov	r3, r0
 721 001e 0C46     		mov	r4, r1
 722 0020 1846     		mov	r0, r3
 723 0022 2146     		mov	r1, r4
 724 0024 FFF7FEFF 		bl	__aeabi_d2f
 725 0028 0346     		mov	r3, r0
 726 002a FB60     		str	r3, [r7, #12]	@ float
 173:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 17


 727              		.loc 1 173 0
 728 002c 0849     		ldr	r1, .L31+4
 729 002e F868     		ldr	r0, [r7, #12]	@ float
 730 0030 FFF7FEFF 		bl	__aeabi_fmul
 731 0034 0346     		mov	r3, r0
 732 0036 1846     		mov	r0, r3
 733 0038 FFF7FEFF 		bl	__aeabi_f2iz
 734 003c 0346     		mov	r3, r0
 735 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 174:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 175:main.c        ****     return rpm;
 736              		.loc 1 175 0
 737 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 176:main.c        ****     //usbPutString(buffer);
 177:main.c        ****     //usbPutString("rpm ");
 178:main.c        **** }
 738              		.loc 1 178 0
 739 0044 1846     		mov	r0, r3
 740 0046 1437     		adds	r7, r7, #20
 741              		.cfi_def_cfa_offset 12
 742 0048 BD46     		mov	sp, r7
 743              		.cfi_def_cfa_register 13
 744              		@ sp needed
 745 004a 90BD     		pop	{r4, r7, pc}
 746              	.L32:
 747              		.align	2
 748              	.L31:
 749 004c 00804C40 		.word	1078755328
 750 0050 00007041 		.word	1097859072
 751              		.cfi_endproc
 752              	.LFE71:
 753              		.size	quadCountToRPM, .-quadCountToRPM
 754              		.section	.text.ResetSensorFlags,"ax",%progbits
 755              		.align	2
 756              		.global	ResetSensorFlags
 757              		.thumb
 758              		.thumb_func
 759              		.type	ResetSensorFlags, %function
 760              	ResetSensorFlags:
 761              	.LFB72:
 179:main.c        **** 
 180:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 181:main.c        **** void ResetSensorFlags() {
 762              		.loc 1 181 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 182:main.c        ****     s3 = 0;
 772              		.loc 1 182 0
 773 0004 074B     		ldr	r3, .L34
 774 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 18


 775 0008 1A70     		strb	r2, [r3]
 183:main.c        ****     s4 = 0;
 776              		.loc 1 183 0
 777 000a 074B     		ldr	r3, .L34+4
 778 000c 0022     		movs	r2, #0
 779 000e 1A70     		strb	r2, [r3]
 184:main.c        ****     s5 = 0;
 780              		.loc 1 184 0
 781 0010 064B     		ldr	r3, .L34+8
 782 0012 0022     		movs	r2, #0
 783 0014 1A70     		strb	r2, [r3]
 185:main.c        ****     s6 = 0;
 784              		.loc 1 185 0
 785 0016 064B     		ldr	r3, .L34+12
 786 0018 0022     		movs	r2, #0
 787 001a 1A70     		strb	r2, [r3]
 186:main.c        **** }
 788              		.loc 1 186 0
 789 001c 00BF     		nop
 790 001e BD46     		mov	sp, r7
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 0020 80BC     		pop	{r7}
 794              		.cfi_restore 7
 795              		.cfi_def_cfa_offset 0
 796 0022 7047     		bx	lr
 797              	.L35:
 798              		.align	2
 799              	.L34:
 800 0024 00000000 		.word	s3
 801 0028 00000000 		.word	s4
 802 002c 00000000 		.word	s5
 803 0030 00000000 		.word	s6
 804              		.cfi_endproc
 805              	.LFE72:
 806              		.size	ResetSensorFlags, .-ResetSensorFlags
 807              		.global	xBlocksize
 808              		.data
 809 0045 000000   		.align	2
 810              		.type	xBlocksize, %object
 811              		.size	xBlocksize, 4
 812              	xBlocksize:
 813 0048 0000F442 		.word	1123287040
 814              		.global	yBlocksize
 815              		.align	2
 816              		.type	yBlocksize, %object
 817              		.size	yBlocksize, 4
 818              	yBlocksize:
 819 004c 0000A042 		.word	1117782016
 820              		.global	currentRow
 821              		.type	currentRow, %object
 822              		.size	currentRow, 1
 823              	currentRow:
 824 0050 01       		.byte	1
 825              		.global	currentCol
 826              		.type	currentCol, %object
 827              		.size	currentCol, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 19


 828              	currentCol:
 829 0051 01       		.byte	1
 830              		.global	stoppedAfterTurn
 831              		.bss
 832              		.type	stoppedAfterTurn, %object
 833              		.size	stoppedAfterTurn, 1
 834              	stoppedAfterTurn:
 835 0044 00       		.space	1
 836              		.global	ignoreSensor
 837              		.type	ignoreSensor, %object
 838              		.size	ignoreSensor, 1
 839              	ignoreSensor:
 840 0045 00       		.space	1
 841              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 842              		.align	2
 843              		.global	ForwardCourseCorrection
 844              		.thumb
 845              		.thumb_func
 846              		.type	ForwardCourseCorrection, %function
 847              	ForwardCourseCorrection:
 848              	.LFB73:
 187:main.c        **** 
 188:main.c        **** float xBlocksize = 122; // 122 mm
 189:main.c        **** float yBlocksize = 80; // 80 mm
 190:main.c        **** uint8 currentRow = 1;
 191:main.c        **** uint8 currentCol = 1;
 192:main.c        **** 
 193:main.c        **** /*enum DirectionState GetNextStep() {
 194:main.c        ****     enum DirectionState directionState;
 195:main.c        ****     // Determines robot movement and orientation to follow optimal path
 196:main.c        ****     // enum DirectionState directionState = Stop;
 197:main.c        ****     previousOrientation = currentOrientation;
 198:main.c        ****     
 199:main.c        ****     if(map[currentRow][currentCol] == 9) {
 200:main.c        ****         directionState = Stop; // reached target
 201:main.c        ****         return directionState;
 202:main.c        ****     }
 203:main.c        ****         
 204:main.c        ****     switch (previousOrientation) {
 205:main.c        ****             case Up:
 206:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 207:main.c        ****                     currentOrientation = Up; 
 208:main.c        ****                     directionState = Forward;
 209:main.c        ****                     currentRow--;// update position
 210:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 211:main.c        ****                     currentOrientation = Left;
 212:main.c        ****                     directionState = waitForLeftTurn;
 213:main.c        ****                     //currentRow--;
 214:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 215:main.c        ****                     currentOrientation = Right;
 216:main.c        ****                     directionState = waitForRightTurn;
 217:main.c        ****                     //currentRow++; // update position
 218:main.c        ****                 }
 219:main.c        ****                 break;
 220:main.c        ****             case Down:
 221:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 222:main.c        ****                     currentOrientation = Down;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 20


 223:main.c        ****                     directionState = Forward;
 224:main.c        ****                     currentRow++;
 225:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 226:main.c        ****                     currentOrientation = Left;
 227:main.c        ****                     directionState = waitForRightTurn;
 228:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 229:main.c        ****                     currentOrientation = Right;
 230:main.c        ****                     directionState = waitForLeftTurn;
 231:main.c        ****                 }
 232:main.c        ****                 break;
 233:main.c        ****             case Left:
 234:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 235:main.c        ****                     currentOrientation = Left;
 236:main.c        ****                     directionState = Forward;
 237:main.c        ****                     currentCol--; // update position
 238:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 239:main.c        ****                     currentOrientation = Up;
 240:main.c        ****                     directionState = waitForRightTurn;
 241:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 242:main.c        ****                     currentOrientation = Down;
 243:main.c        ****                     directionState = waitForLeftTurn;
 244:main.c        ****                 }
 245:main.c        ****                 break;
 246:main.c        ****             case Right:
 247:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 248:main.c        ****                     currentOrientation = Right;
 249:main.c        ****                     directionState = Forward;
 250:main.c        ****                     currentCol++; // update position
 251:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 252:main.c        ****                     currentOrientation = Up;
 253:main.c        ****                     directionState = waitForLeftTurn;
 254:main.c        ****                     //currentCol++; // update position
 255:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 256:main.c        ****                     currentOrientation = Down;
 257:main.c        ****                     directionState = waitForRightTurn;
 258:main.c        ****                     //currentCol--; // update position
 259:main.c        ****                 }
 260:main.c        ****                 break;
 261:main.c        ****             default:
 262:main.c        ****                 break;
 263:main.c        ****         }
 264:main.c        ****     
 265:main.c        ****     return directionState;
 266:main.c        **** }
 267:main.c        **** */
 268:main.c        **** uint8 stoppedAfterTurn = 0;
 269:main.c        **** uint8 ignoreSensor = 0;
 270:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 271:main.c        **** /*
 272:main.c        **** enum RobotMovement CheckSensorDirection() {
 273:main.c        ****     float blocksize;
 274:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 275:main.c        ****         blocksize = yBlocksize;
 276:main.c        ****     } else {
 277:main.c        ****         blocksize = xBlocksize;
 278:main.c        ****     }
 279:main.c        ****     //if(currentInstruction)
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 21


 280:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 281:main.c        ****     
 282:main.c        ****     if (stoppedAfterTurn == 1) {
 283:main.c        ****         if (stopBuffer <= 50) {
 284:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 285:main.c        ****             previousDirection = directionState;
 286:main.c        ****             return directionState;
 287:main.c        ****         }
 288:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 289:main.c        ****         totalDistance = 0; // reset distance
 290:main.c        ****         previousDirection = directionState;
 291:main.c        ****         stoppedAfterTurn = 0;
 292:main.c        ****         return directionState;
 293:main.c        ****     }
 294:main.c        ****     if (totalDistance >= blocksize) {
 295:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 296:main.c        ****         totalDistance = 0; // reset distance
 297:main.c        ****         previousDirection = directionState;
 298:main.c        ****         return directionState;
 299:main.c        ****     }
 300:main.c        ****     
 301:main.c        ****     // STOP BUFFER * ========================================
 302:main.c        ****     if (previousDirection == Stop) {
 303:main.c        ****         if (stopBuffer <= 50) {
 304:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 305:main.c        ****             previousDirection = directionState;
 306:main.c        ****         } else {
 307:main.c        ****             //directionState = ForwardAfterTurn;
 308:main.c        ****         }
 309:main.c        ****         return directionState;
 310:main.c        ****     }
 311:main.c        **** 
 312:main.c        ****     // TURNING * ========================================    
 313:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 314:main.c        ****         if (s3 || s4) {
 315:main.c        ****             //ignoreSensor = 0;
 316:main.c        ****             //usbPutString("Forward\n");
 317:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 318:main.c        ****             previousDirection = directionState;
 319:main.c        ****             return directionState;
 320:main.c        ****         }
 321:main.c        ****     }
 322:main.c        **** 
 323:main.c        ****     if(previousDirection == waitForRightTurn) {
 324:main.c        ****         //ignoreSensor = 0;
 325:main.c        ****         if(!s4) {
 326:main.c        ****             //usbPutString("Turn Right\n");
 327:main.c        ****             directionState = TurnRight;
 328:main.c        ****             previousDirection = directionState;
 329:main.c        ****             return directionState;
 330:main.c        ****         } else {
 331:main.c        ****             //usbPutString("Wait for Right Turn\n");
 332:main.c        ****             directionState = waitForRightTurn;
 333:main.c        ****             previousDirection = directionState;
 334:main.c        ****             return directionState;
 335:main.c        ****         }
 336:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 22


 337:main.c        **** 
 338:main.c        ****     if(previousDirection == waitForLeftTurn) {
 339:main.c        ****         //ignoreSensor = 0;
 340:main.c        ****         if(!s3) {
 341:main.c        ****             //usbPutString("Turn Left\n");
 342:main.c        ****             directionState = TurnLeft;
 343:main.c        ****             previousDirection = directionState;
 344:main.c        ****             return directionState;
 345:main.c        ****         } else {
 346:main.c        ****             //usbPutString("Wait for Left Turn\n");
 347:main.c        ****             directionState = waitForLeftTurn;
 348:main.c        ****             previousDirection = directionState;
 349:main.c        ****             return directionState;
 350:main.c        ****         }
 351:main.c        ****     }
 352:main.c        **** 
 353:main.c        ****     if(previousDirection == TurnRight) {
 354:main.c        ****         if(s5 && s6) {
 355:main.c        ****             //usbPutString("Turn Right\n");
 356:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 357:main.c        ****             previousDirection = directionState;
 358:main.c        ****             return directionState;
 359:main.c        ****         } 
 360:main.c        ****         else if (!s5 || !s6) {
 361:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 362:main.c        ****             //usbPutString("Stop after Right Turn");
 363:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 364:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 365:main.c        ****             previousDirection = directionState;
 366:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 367:main.c        ****             return directionState;
 368:main.c        ****         }
 369:main.c        ****     }    
 370:main.c        **** 
 371:main.c        ****     if(previousDirection == TurnLeft) {
 372:main.c        ****         if(s5 && s6) {
 373:main.c        ****             //usbPutString("Turn Left\n");
 374:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 375:main.c        ****             previousDirection = directionState;
 376:main.c        ****             return directionState;
 377:main.c        ****         } 
 378:main.c        ****         else if (!s5 || !s6) {
 379:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 380:main.c        ****            // usbPutString("Stop after Left Turn\n");
 381:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 382:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 383:main.c        ****             previousDirection = directionState;
 384:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 385:main.c        ****             return directionState;
 386:main.c        ****         }
 387:main.c        ****     }
 388:main.c        ****     
 389:main.c        ****     // COURSE CORRECTION * ========================================
 390:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 391:main.c        ****         //ignoreSensor = 0;
 392:main.c        ****         if(s6) {
 393:main.c        ****             //usbPutString("Adjust to the left\n");
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 23


 394:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 395:main.c        ****             previousDirection = directionState;
 396:main.c        ****             return directionState;
 397:main.c        ****         }
 398:main.c        ****         if(s5) {
 399:main.c        ****             //usbPutString("Adjust to the right\n");
 400:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 401:main.c        ****             previousDirection = directionState;
 402:main.c        ****             return directionState;
 403:main.c        ****         }
 404:main.c        ****     }
 405:main.c        ****     
 406:main.c        ****     // FORWARD * ========================================
 407:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 408:main.c        ****         //usbPutString("Forward\n");
 409:main.c        ****         directionState = Forward;
 410:main.c        ****         previousDirection = directionState;
 411:main.c        ****         return directionState;   
 412:main.c        ****     }
 413:main.c        **** 
 414:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 415:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 416:main.c        ****     if (previousDirection == Unknown) {
 417:main.c        ****         directionState = Forward;
 418:main.c        ****         previousDirection = directionState;
 419:main.c        ****         return directionState;
 420:main.c        ****     }
 421:main.c        **** 
 422:main.c        ****     // Possible reason
 423:main.c        ****     previousDirection = currentDirection;
 424:main.c        ****     return previousDirection;
 425:main.c        **** }
 426:main.c        **** */
 427:main.c        **** 
 428:main.c        **** enum RobotMovement ForwardCourseCorrection();
 429:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 849              		.loc 1 429 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854 0000 80B4     		push	{r7}
 855              		.cfi_def_cfa_offset 4
 856              		.cfi_offset 7, -4
 857 0002 00AF     		add	r7, sp, #0
 858              		.cfi_def_cfa_register 7
 430:main.c        ****     // if S5 and S6 are on black, move forward
 431:main.c        ****     if (!s5 && !s6) {
 859              		.loc 1 431 0
 860 0004 1C4B     		ldr	r3, .L44
 861 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 862 0008 002B     		cmp	r3, #0
 863 000a 0FD1     		bne	.L37
 864              		.loc 1 431 0 is_stmt 0 discriminator 1
 865 000c 1B4B     		ldr	r3, .L44+4
 866 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 867 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 24


 868 0012 0BD1     		bne	.L37
 432:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 869              		.loc 1 432 0 is_stmt 1
 870 0014 1A4B     		ldr	r3, .L44+8
 871 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0018 032B     		cmp	r3, #3
 873 001a 01D0     		beq	.L38
 433:main.c        ****             return AdjustToTheLeft;
 874              		.loc 1 433 0
 875 001c 0323     		movs	r3, #3
 876 001e 26E0     		b	.L39
 877              	.L38:
 434:main.c        ****         }
 435:main.c        ****         if (previousDirection != AdjustToTheRight) {
 878              		.loc 1 435 0
 879 0020 174B     		ldr	r3, .L44+8
 880 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 881 0024 042B     		cmp	r3, #4
 882 0026 01D0     		beq	.L37
 436:main.c        ****             return AdjustToTheRight;    
 883              		.loc 1 436 0
 884 0028 0423     		movs	r3, #4
 885 002a 20E0     		b	.L39
 886              	.L37:
 437:main.c        ****         }
 438:main.c        ****     }
 439:main.c        ****     
 440:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 441:main.c        ****     if (s5 && s6) {
 887              		.loc 1 441 0
 888 002c 124B     		ldr	r3, .L44
 889 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 890 0030 002B     		cmp	r3, #0
 891 0032 0FD0     		beq	.L40
 892              		.loc 1 441 0 is_stmt 0 discriminator 1
 893 0034 114B     		ldr	r3, .L44+4
 894 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0038 002B     		cmp	r3, #0
 896 003a 0BD0     		beq	.L40
 442:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 897              		.loc 1 442 0 is_stmt 1
 898 003c 104B     		ldr	r3, .L44+8
 899 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 0040 032B     		cmp	r3, #3
 901 0042 01D0     		beq	.L41
 443:main.c        ****             return AdjustToTheLeft;
 902              		.loc 1 443 0
 903 0044 0323     		movs	r3, #3
 904 0046 12E0     		b	.L39
 905              	.L41:
 444:main.c        ****         }
 445:main.c        ****         if (previousDirection != AdjustToTheRight) {
 906              		.loc 1 445 0
 907 0048 0D4B     		ldr	r3, .L44+8
 908 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 004c 042B     		cmp	r3, #4
 910 004e 01D0     		beq	.L40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 25


 446:main.c        ****             return AdjustToTheRight;    
 911              		.loc 1 446 0
 912 0050 0423     		movs	r3, #4
 913 0052 0CE0     		b	.L39
 914              	.L40:
 447:main.c        ****         }
 448:main.c        ****     }
 449:main.c        **** 
 450:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 451:main.c        ****     if (s5) {
 915              		.loc 1 451 0
 916 0054 084B     		ldr	r3, .L44
 917 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 918 0058 002B     		cmp	r3, #0
 919 005a 01D0     		beq	.L42
 452:main.c        ****         return AdjustToTheRight;    
 920              		.loc 1 452 0
 921 005c 0423     		movs	r3, #4
 922 005e 06E0     		b	.L39
 923              	.L42:
 453:main.c        ****     }
 454:main.c        ****     if (s6) {
 924              		.loc 1 454 0
 925 0060 064B     		ldr	r3, .L44+4
 926 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0064 002B     		cmp	r3, #0
 928 0066 01D0     		beq	.L43
 455:main.c        ****         return AdjustToTheLeft;    
 929              		.loc 1 455 0
 930 0068 0323     		movs	r3, #3
 931 006a 00E0     		b	.L39
 932              	.L43:
 456:main.c        ****     }
 457:main.c        ****    
 458:main.c        ****     // We should never actually get to this point
 459:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 460:main.c        ****     return Stop;
 933              		.loc 1 460 0
 934 006c 0523     		movs	r3, #5
 935              	.L39:
 461:main.c        **** }
 936              		.loc 1 461 0
 937 006e 1846     		mov	r0, r3
 938 0070 BD46     		mov	sp, r7
 939              		.cfi_def_cfa_register 13
 940              		@ sp needed
 941 0072 80BC     		pop	{r7}
 942              		.cfi_restore 7
 943              		.cfi_def_cfa_offset 0
 944 0074 7047     		bx	lr
 945              	.L45:
 946 0076 00BF     		.align	2
 947              	.L44:
 948 0078 00000000 		.word	s5
 949 007c 00000000 		.word	s6
 950 0080 00000000 		.word	previousDirection
 951              		.cfi_endproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 26


 952              	.LFE73:
 953              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 954              		.global	spinCourseCorrectionStarted
 955              		.bss
 956              		.type	spinCourseCorrectionStarted, %object
 957              		.size	spinCourseCorrectionStarted, 1
 958              	spinCourseCorrectionStarted:
 959 0046 00       		.space	1
 960              		.global	lastDirectionAfter180
 961              		.data
 962              		.type	lastDirectionAfter180, %object
 963              		.size	lastDirectionAfter180, 1
 964              	lastDirectionAfter180:
 965 0052 06       		.byte	6
 966              		.section	.text.SpinCourseCorrection,"ax",%progbits
 967              		.align	2
 968              		.global	SpinCourseCorrection
 969              		.thumb
 970              		.thumb_func
 971              		.type	SpinCourseCorrection, %function
 972              	SpinCourseCorrection:
 973              	.LFB74:
 462:main.c        **** 
 463:main.c        **** enum RobotMovement SpinCourseCorrection();
 464:main.c        **** 
 465:main.c        **** uint8 spinCourseCorrectionStarted = 0;
 466:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 467:main.c        **** enum RobotMovement SpinCourseCorrection() {
 974              		.loc 1 467 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978              		@ link register save eliminated.
 979 0000 80B4     		push	{r7}
 980              		.cfi_def_cfa_offset 4
 981              		.cfi_offset 7, -4
 982 0002 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 468:main.c        ****     // Set first iteration flag.
 469:main.c        ****     if (!spinCourseCorrectionStarted) {
 984              		.loc 1 469 0
 985 0004 1E4B     		ldr	r3, .L54
 986 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 987 0008 002B     		cmp	r3, #0
 988 000a 06D1     		bne	.L47
 470:main.c        ****         spinCourseCorrectionStarted = 1;    
 989              		.loc 1 470 0
 990 000c 1C4B     		ldr	r3, .L54
 991 000e 0122     		movs	r2, #1
 992 0010 1A70     		strb	r2, [r3]
 471:main.c        ****         lastDirectionAfter180 = currentDirection;
 993              		.loc 1 471 0
 994 0012 1C4B     		ldr	r3, .L54+4
 995 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 996 0016 1C4B     		ldr	r3, .L54+8
 997 0018 1A70     		strb	r2, [r3]
 998              	.L47:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 27


 472:main.c        ****     }
 473:main.c        ****     
 474:main.c        ****     // if S5 and S6 are on black, stop
 475:main.c        ****     if (!s5 && !s6) {
 999              		.loc 1 475 0
 1000 001a 1C4B     		ldr	r3, .L54+12
 1001 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 001e 002B     		cmp	r3, #0
 1003 0020 08D1     		bne	.L48
 1004              		.loc 1 475 0 is_stmt 0 discriminator 1
 1005 0022 1B4B     		ldr	r3, .L54+16
 1006 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 0026 002B     		cmp	r3, #0
 1008 0028 04D1     		bne	.L48
 476:main.c        ****         spinCourseCorrectionStarted = 0;
 1009              		.loc 1 476 0 is_stmt 1
 1010 002a 154B     		ldr	r3, .L54
 1011 002c 0022     		movs	r2, #0
 1012 002e 1A70     		strb	r2, [r3]
 477:main.c        ****         return Backward;
 1013              		.loc 1 477 0
 1014 0030 0923     		movs	r3, #9
 1015 0032 20E0     		b	.L49
 1016              	.L48:
 478:main.c        ****     }
 479:main.c        ****     
 480:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 481:main.c        ****     if (s5 && s6) {
 1017              		.loc 1 481 0
 1018 0034 154B     		ldr	r3, .L54+12
 1019 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 0038 002B     		cmp	r3, #0
 1021 003a 0FD0     		beq	.L50
 1022              		.loc 1 481 0 is_stmt 0 discriminator 1
 1023 003c 144B     		ldr	r3, .L54+16
 1024 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1025 0040 002B     		cmp	r3, #0
 1026 0042 0BD0     		beq	.L50
 482:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1027              		.loc 1 482 0 is_stmt 1
 1028 0044 104B     		ldr	r3, .L54+8
 1029 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 0048 022B     		cmp	r3, #2
 1031 004a 01D0     		beq	.L51
 483:main.c        ****             return Forward;
 1032              		.loc 1 483 0
 1033 004c 0023     		movs	r3, #0
 1034 004e 12E0     		b	.L49
 1035              	.L51:
 484:main.c        ****         }
 485:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1036              		.loc 1 485 0
 1037 0050 0D4B     		ldr	r3, .L54+8
 1038 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1039 0054 012B     		cmp	r3, #1
 1040 0056 01D0     		beq	.L50
 486:main.c        ****             return Forward;    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 28


 1041              		.loc 1 486 0
 1042 0058 0023     		movs	r3, #0
 1043 005a 0CE0     		b	.L49
 1044              	.L50:
 487:main.c        ****         }
 488:main.c        ****     }
 489:main.c        **** 
 490:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 491:main.c        ****     if (s5) {
 1045              		.loc 1 491 0
 1046 005c 0B4B     		ldr	r3, .L54+12
 1047 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 0060 002B     		cmp	r3, #0
 1049 0062 01D0     		beq	.L52
 492:main.c        ****         return TurnRight;    
 1050              		.loc 1 492 0
 1051 0064 0123     		movs	r3, #1
 1052 0066 06E0     		b	.L49
 1053              	.L52:
 493:main.c        ****     }
 494:main.c        ****     if (s6) {
 1054              		.loc 1 494 0
 1055 0068 094B     		ldr	r3, .L54+16
 1056 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1057 006c 002B     		cmp	r3, #0
 1058 006e 01D0     		beq	.L53
 495:main.c        ****         return TurnLeft;    
 1059              		.loc 1 495 0
 1060 0070 0223     		movs	r3, #2
 1061 0072 00E0     		b	.L49
 1062              	.L53:
 496:main.c        ****     }
 497:main.c        ****    
 498:main.c        ****     // We should never actually get to this point
 499:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 500:main.c        ****     return Stop;
 1063              		.loc 1 500 0
 1064 0074 0523     		movs	r3, #5
 1065              	.L49:
 501:main.c        **** }
 1066              		.loc 1 501 0
 1067 0076 1846     		mov	r0, r3
 1068 0078 BD46     		mov	sp, r7
 1069              		.cfi_def_cfa_register 13
 1070              		@ sp needed
 1071 007a 80BC     		pop	{r7}
 1072              		.cfi_restore 7
 1073              		.cfi_def_cfa_offset 0
 1074 007c 7047     		bx	lr
 1075              	.L55:
 1076 007e 00BF     		.align	2
 1077              	.L54:
 1078 0080 00000000 		.word	spinCourseCorrectionStarted
 1079 0084 00000000 		.word	currentDirection
 1080 0088 00000000 		.word	lastDirectionAfter180
 1081 008c 00000000 		.word	s5
 1082 0090 00000000 		.word	s6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 29


 1083              		.cfi_endproc
 1084              	.LFE74:
 1085              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1086              		.global	__aeabi_fcmpge
 1087              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1088              		.align	2
 1089              		.global	GetMovementAccordingToInstruction
 1090              		.thumb
 1091              		.thumb_func
 1092              		.type	GetMovementAccordingToInstruction, %function
 1093              	GetMovementAccordingToInstruction:
 1094              	.LFB75:
 502:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1095              		.loc 1 502 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 8
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 82B0     		sub	sp, sp, #8
 1104              		.cfi_def_cfa_offset 16
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 503:main.c        ****     float blocksize;
 504:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 1107              		.loc 1 504 0
 1108 0006 984B     		ldr	r3, .L101
 1109 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1110 000a 002B     		cmp	r3, #0
 1111 000c 03D0     		beq	.L57
 1112              		.loc 1 504 0 is_stmt 0 discriminator 1
 1113 000e 964B     		ldr	r3, .L101
 1114 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0012 012B     		cmp	r3, #1
 1116 0014 03D1     		bne	.L58
 1117              	.L57:
 505:main.c        ****         blocksize = yBlocksize;
 1118              		.loc 1 505 0 is_stmt 1
 1119 0016 954B     		ldr	r3, .L101+4
 1120 0018 1B68     		ldr	r3, [r3]	@ float
 1121 001a 7B60     		str	r3, [r7, #4]	@ float
 1122 001c 02E0     		b	.L59
 1123              	.L58:
 506:main.c        ****     } else {
 507:main.c        ****         blocksize = xBlocksize;
 1124              		.loc 1 507 0
 1125 001e 944B     		ldr	r3, .L101+8
 1126 0020 1B68     		ldr	r3, [r3]	@ float
 1127 0022 7B60     		str	r3, [r7, #4]	@ float
 1128              	.L59:
 508:main.c        ****     }
 509:main.c        ****     
 510:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 511:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 512:main.c        ****         // OR an EVENT happens in the current instruction
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 30


 513:main.c        ****         // e.g. CurrentInstruction: GoForward 
 514:main.c        ****         //      S3 on BLACK
 515:main.c        ****         //      Check Ignore Count
 516:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 517:main.c        ****     
 518:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1129              		.loc 1 518 0
 1130 0024 934B     		ldr	r3, .L101+12
 1131 0026 1B78     		ldrb	r3, [r3]
 1132 0028 FB70     		strb	r3, [r7, #3]
 519:main.c        ****     
 520:main.c        ****     switch (currentInstructionDirection) {
 1133              		.loc 1 520 0
 1134 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1135 002c 052B     		cmp	r3, #5
 1136 002e 00F27D81 		bhi	.L60
 1137 0032 01A2     		adr	r2, .L62
 1138 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1139              		.p2align 2
 1140              	.L62:
 1141 0038 51000000 		.word	.L61+1
 1142 003c 9D000000 		.word	.L63+1
 1143 0040 53010000 		.word	.L64+1
 1144 0044 FF020000 		.word	.L65+1
 1145 0048 09020000 		.word	.L66+1
 1146 004c D9020000 		.word	.L67+1
 1147              		.p2align 1
 1148              	.L61:
 521:main.c        ****         case GoForward:
 522:main.c        ****             // if s3 or s4 go off, check ignoreCount
 523:main.c        ****             //      if ignoreCount == 0, go to next direction
 524:main.c        ****             //      return stop
 525:main.c        ****             if (!s3) {
 1149              		.loc 1 525 0
 1150 0050 894B     		ldr	r3, .L101+16
 1151 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0054 002B     		cmp	r3, #0
 1153 0056 0CD1     		bne	.L68
 526:main.c        ****                 if (currentInstruction.ignoreL <= 0) {
 1154              		.loc 1 526 0
 1155 0058 864B     		ldr	r3, .L101+12
 1156 005a 5B68     		ldr	r3, [r3, #4]
 1157 005c 002B     		cmp	r3, #0
 1158 005e 03DC     		bgt	.L69
 527:main.c        ****                     MoveToNextInstruction();
 1159              		.loc 1 527 0
 1160 0060 FFF7FEFF 		bl	MoveToNextInstruction
 528:main.c        ****                     return Stop;
 1161              		.loc 1 528 0
 1162 0064 0523     		movs	r3, #5
 1163 0066 62E1     		b	.L70
 1164              	.L69:
 529:main.c        ****                 }
 530:main.c        ****                 currentInstruction.ignoreL--;
 1165              		.loc 1 530 0
 1166 0068 824B     		ldr	r3, .L101+12
 1167 006a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 31


 1168 006c 013B     		subs	r3, r3, #1
 1169 006e 814A     		ldr	r2, .L101+12
 1170 0070 5360     		str	r3, [r2, #4]
 1171              	.L68:
 531:main.c        ****             }
 532:main.c        ****             
 533:main.c        ****             if (!s4) {
 1172              		.loc 1 533 0
 1173 0072 824B     		ldr	r3, .L101+20
 1174 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1175 0076 002B     		cmp	r3, #0
 1176 0078 0CD1     		bne	.L71
 534:main.c        ****                 if (currentInstruction.ignoreR <= 0) {
 1177              		.loc 1 534 0
 1178 007a 7E4B     		ldr	r3, .L101+12
 1179 007c 9B68     		ldr	r3, [r3, #8]
 1180 007e 002B     		cmp	r3, #0
 1181 0080 03DC     		bgt	.L72
 535:main.c        ****                     MoveToNextInstruction();
 1182              		.loc 1 535 0
 1183 0082 FFF7FEFF 		bl	MoveToNextInstruction
 536:main.c        ****                     return Stop;
 1184              		.loc 1 536 0
 1185 0086 0523     		movs	r3, #5
 1186 0088 51E1     		b	.L70
 1187              	.L72:
 537:main.c        ****                 }
 538:main.c        ****                 currentInstruction.ignoreR--;
 1188              		.loc 1 538 0
 1189 008a 7A4B     		ldr	r3, .L101+12
 1190 008c 9B68     		ldr	r3, [r3, #8]
 1191 008e 013B     		subs	r3, r3, #1
 1192 0090 784A     		ldr	r2, .L101+12
 1193 0092 9360     		str	r3, [r2, #8]
 1194              	.L71:
 539:main.c        ****             }
 540:main.c        ****             return ForwardCourseCorrection();
 1195              		.loc 1 540 0
 1196 0094 FFF7FEFF 		bl	ForwardCourseCorrection
 1197 0098 0346     		mov	r3, r0
 1198 009a 48E1     		b	.L70
 1199              	.L63:
 541:main.c        ****             break;
 542:main.c        ****         case waitForLeftTurn:
 543:main.c        ****             // continue moving forward until s3 goes on black
 544:main.c        ****             // if we are turning left already
 545:main.c        ****                 // wait until s5 || s6 are on black
 546:main.c        ****                 // return stop
 547:main.c        **** 
 548:main.c        ****             if (turnFinishedFlag) {
 1200              		.loc 1 548 0
 1201 009c 784B     		ldr	r3, .L101+24
 1202 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 00a0 002B     		cmp	r3, #0
 1204 00a2 0DD0     		beq	.L73
 549:main.c        ****                 if (s3) {
 1205              		.loc 1 549 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 32


 1206 00a4 744B     		ldr	r3, .L101+16
 1207 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 00a8 002B     		cmp	r3, #0
 1209 00aa 05D0     		beq	.L74
 550:main.c        ****                     turnFinishedFlag = 0;
 1210              		.loc 1 550 0
 1211 00ac 744B     		ldr	r3, .L101+24
 1212 00ae 0022     		movs	r2, #0
 1213 00b0 1A70     		strb	r2, [r3]
 551:main.c        ****                     MoveToNextInstruction();    
 1214              		.loc 1 551 0
 1215 00b2 FFF7FEFF 		bl	MoveToNextInstruction
 1216 00b6 03E0     		b	.L73
 1217              	.L74:
 552:main.c        ****                 }
 553:main.c        ****                 else {
 554:main.c        ****                     return ForwardCourseCorrection();        
 1218              		.loc 1 554 0
 1219 00b8 FFF7FEFF 		bl	ForwardCourseCorrection
 1220 00bc 0346     		mov	r3, r0
 1221 00be 36E1     		b	.L70
 1222              	.L73:
 555:main.c        ****                 }
 556:main.c        ****             }
 557:main.c        ****             
 558:main.c        ****             
 559:main.c        ****             if (currentDirection == Stop) {
 1223              		.loc 1 559 0
 1224 00c0 704B     		ldr	r3, .L101+28
 1225 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1226 00c4 052B     		cmp	r3, #5
 1227 00c6 09D1     		bne	.L75
 560:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 561:main.c        ****                 if (stopBuffer <= 50) {
 1228              		.loc 1 561 0
 1229 00c8 6F4B     		ldr	r3, .L101+32
 1230 00ca 1B68     		ldr	r3, [r3]
 1231 00cc 322B     		cmp	r3, #50
 1232 00ce 01D8     		bhi	.L76
 562:main.c        ****                     return Stop;   
 1233              		.loc 1 562 0
 1234 00d0 0523     		movs	r3, #5
 1235 00d2 2CE1     		b	.L70
 1236              	.L76:
 563:main.c        ****                 }
 564:main.c        ****                 return ForwardCourseCorrection();
 1237              		.loc 1 564 0
 1238 00d4 FFF7FEFF 		bl	ForwardCourseCorrection
 1239 00d8 0346     		mov	r3, r0
 1240 00da 28E1     		b	.L70
 1241              	.L75:
 565:main.c        ****             }
 566:main.c        ****          
 567:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 568:main.c        ****             if (currentDirection == TurnLeft) {
 1242              		.loc 1 568 0
 1243 00dc 694B     		ldr	r3, .L101+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 33


 1244 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1245 00e0 022B     		cmp	r3, #2
 1246 00e2 29D1     		bne	.L77
 569:main.c        ****                 // If turn started and we are still on black, continue turning
 570:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 571:main.c        ****                 if (turnStartedFlag) {
 1247              		.loc 1 571 0
 1248 00e4 694B     		ldr	r3, .L101+36
 1249 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1250 00e8 002B     		cmp	r3, #0
 1251 00ea 0ED0     		beq	.L78
 572:main.c        ****                     if (s3 && (s5 && s6)) {
 1252              		.loc 1 572 0
 1253 00ec 624B     		ldr	r3, .L101+16
 1254 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1255 00f0 002B     		cmp	r3, #0
 1256 00f2 0AD0     		beq	.L78
 1257              		.loc 1 572 0 is_stmt 0 discriminator 1
 1258 00f4 664B     		ldr	r3, .L101+40
 1259 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1260 00f8 002B     		cmp	r3, #0
 1261 00fa 06D0     		beq	.L78
 1262              		.loc 1 572 0 discriminator 2
 1263 00fc 654B     		ldr	r3, .L101+44
 1264 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 0100 002B     		cmp	r3, #0
 1266 0102 02D0     		beq	.L78
 573:main.c        ****                         turnStartedFlag = 0;
 1267              		.loc 1 573 0 is_stmt 1
 1268 0104 614B     		ldr	r3, .L101+36
 1269 0106 0022     		movs	r2, #0
 1270 0108 1A70     		strb	r2, [r3]
 1271              	.L78:
 574:main.c        ****                     }
 575:main.c        ****                 }
 576:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1272              		.loc 1 576 0
 1273 010a 604B     		ldr	r3, .L101+36
 1274 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1275 010e 002B     		cmp	r3, #0
 1276 0110 10D1     		bne	.L79
 1277              		.loc 1 576 0 is_stmt 0 discriminator 1
 1278 0112 594B     		ldr	r3, .L101+16
 1279 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1280 0116 002B     		cmp	r3, #0
 1281 0118 0CD1     		bne	.L79
 1282              		.loc 1 576 0 discriminator 2
 1283 011a 5D4B     		ldr	r3, .L101+40
 1284 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1285 011e 002B     		cmp	r3, #0
 1286 0120 08D1     		bne	.L79
 1287              		.loc 1 576 0 discriminator 3
 1288 0122 5C4B     		ldr	r3, .L101+44
 1289 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1290 0126 002B     		cmp	r3, #0
 1291 0128 04D1     		bne	.L79
 577:main.c        ****                     turnFinishedFlag = 1;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 34


 1292              		.loc 1 577 0 is_stmt 1
 1293 012a 554B     		ldr	r3, .L101+24
 1294 012c 0122     		movs	r2, #1
 1295 012e 1A70     		strb	r2, [r3]
 578:main.c        ****                     return Stop;
 1296              		.loc 1 578 0
 1297 0130 0523     		movs	r3, #5
 1298 0132 FCE0     		b	.L70
 1299              	.L79:
 579:main.c        ****                 }
 580:main.c        ****                 else
 581:main.c        ****                 {
 582:main.c        ****                     return TurnLeft;
 1300              		.loc 1 582 0
 1301 0134 0223     		movs	r3, #2
 1302 0136 FAE0     		b	.L70
 1303              	.L77:
 583:main.c        ****                 }
 584:main.c        ****             }
 585:main.c        ****             
 586:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 587:main.c        ****             if (!s3) {
 1304              		.loc 1 587 0
 1305 0138 4F4B     		ldr	r3, .L101+16
 1306 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1307 013c 002B     		cmp	r3, #0
 1308 013e 04D1     		bne	.L80
 588:main.c        ****                 turnStartedFlag = 1;
 1309              		.loc 1 588 0
 1310 0140 524B     		ldr	r3, .L101+36
 1311 0142 0122     		movs	r2, #1
 1312 0144 1A70     		strb	r2, [r3]
 589:main.c        ****                 return TurnLeft;
 1313              		.loc 1 589 0
 1314 0146 0223     		movs	r3, #2
 1315 0148 F1E0     		b	.L70
 1316              	.L80:
 590:main.c        ****             }
 591:main.c        ****             
 592:main.c        ****             // Otherwise, keep going forward
 593:main.c        ****             return ForwardCourseCorrection(); 
 1317              		.loc 1 593 0
 1318 014a FFF7FEFF 		bl	ForwardCourseCorrection
 1319 014e 0346     		mov	r3, r0
 1320 0150 EDE0     		b	.L70
 1321              	.L64:
 594:main.c        ****             break;
 595:main.c        ****         case waitForRightTurn:
 596:main.c        ****             // continue moving forward until s4 goes on black
 597:main.c        ****             // if we are turning left already
 598:main.c        ****                 // wait until s5 || s6 are on black
 599:main.c        ****                 // return stop
 600:main.c        **** 
 601:main.c        ****             if (turnFinishedFlag) {
 1322              		.loc 1 601 0
 1323 0152 4B4B     		ldr	r3, .L101+24
 1324 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 35


 1325 0156 002B     		cmp	r3, #0
 1326 0158 0DD0     		beq	.L81
 602:main.c        ****                 if (s4) {
 1327              		.loc 1 602 0
 1328 015a 484B     		ldr	r3, .L101+20
 1329 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 015e 002B     		cmp	r3, #0
 1331 0160 05D0     		beq	.L82
 603:main.c        ****                     turnFinishedFlag = 0;
 1332              		.loc 1 603 0
 1333 0162 474B     		ldr	r3, .L101+24
 1334 0164 0022     		movs	r2, #0
 1335 0166 1A70     		strb	r2, [r3]
 604:main.c        ****                     MoveToNextInstruction();    
 1336              		.loc 1 604 0
 1337 0168 FFF7FEFF 		bl	MoveToNextInstruction
 1338 016c 03E0     		b	.L81
 1339              	.L82:
 605:main.c        ****                 }
 606:main.c        ****                 else {
 607:main.c        ****                     return ForwardCourseCorrection();        
 1340              		.loc 1 607 0
 1341 016e FFF7FEFF 		bl	ForwardCourseCorrection
 1342 0172 0346     		mov	r3, r0
 1343 0174 DBE0     		b	.L70
 1344              	.L81:
 608:main.c        ****                 }
 609:main.c        ****             }
 610:main.c        ****             
 611:main.c        ****             
 612:main.c        ****             if (currentDirection == Stop) {
 1345              		.loc 1 612 0
 1346 0176 434B     		ldr	r3, .L101+28
 1347 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 017a 052B     		cmp	r3, #5
 1349 017c 09D1     		bne	.L83
 613:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 614:main.c        ****                 if (stopBuffer <= 50) {
 1350              		.loc 1 614 0
 1351 017e 424B     		ldr	r3, .L101+32
 1352 0180 1B68     		ldr	r3, [r3]
 1353 0182 322B     		cmp	r3, #50
 1354 0184 01D8     		bhi	.L84
 615:main.c        ****                     return Stop;   
 1355              		.loc 1 615 0
 1356 0186 0523     		movs	r3, #5
 1357 0188 D1E0     		b	.L70
 1358              	.L84:
 616:main.c        ****                 }
 617:main.c        **** 
 618:main.c        ****                 return ForwardCourseCorrection();
 1359              		.loc 1 618 0
 1360 018a FFF7FEFF 		bl	ForwardCourseCorrection
 1361 018e 0346     		mov	r3, r0
 1362 0190 CDE0     		b	.L70
 1363              	.L83:
 619:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 36


 620:main.c        ****                       
 621:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 622:main.c        ****             if (currentDirection == TurnRight) {
 1364              		.loc 1 622 0
 1365 0192 3C4B     		ldr	r3, .L101+28
 1366 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0196 012B     		cmp	r3, #1
 1368 0198 29D1     		bne	.L85
 623:main.c        ****                 // If turn started and we are still on black, continue turning
 624:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 625:main.c        ****                 if (turnStartedFlag) {
 1369              		.loc 1 625 0
 1370 019a 3C4B     		ldr	r3, .L101+36
 1371 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1372 019e 002B     		cmp	r3, #0
 1373 01a0 0ED0     		beq	.L86
 626:main.c        ****                     if (s4 && (s5 && s6)) {
 1374              		.loc 1 626 0
 1375 01a2 364B     		ldr	r3, .L101+20
 1376 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1377 01a6 002B     		cmp	r3, #0
 1378 01a8 0AD0     		beq	.L86
 1379              		.loc 1 626 0 is_stmt 0 discriminator 1
 1380 01aa 394B     		ldr	r3, .L101+40
 1381 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 01ae 002B     		cmp	r3, #0
 1383 01b0 06D0     		beq	.L86
 1384              		.loc 1 626 0 discriminator 2
 1385 01b2 384B     		ldr	r3, .L101+44
 1386 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 01b6 002B     		cmp	r3, #0
 1388 01b8 02D0     		beq	.L86
 627:main.c        ****                         turnStartedFlag = 0;
 1389              		.loc 1 627 0 is_stmt 1
 1390 01ba 344B     		ldr	r3, .L101+36
 1391 01bc 0022     		movs	r2, #0
 1392 01be 1A70     		strb	r2, [r3]
 1393              	.L86:
 628:main.c        ****                     }
 629:main.c        ****                 }
 630:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1394              		.loc 1 630 0
 1395 01c0 324B     		ldr	r3, .L101+36
 1396 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 01c4 002B     		cmp	r3, #0
 1398 01c6 10D1     		bne	.L87
 1399              		.loc 1 630 0 is_stmt 0 discriminator 1
 1400 01c8 2C4B     		ldr	r3, .L101+20
 1401 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 01cc 002B     		cmp	r3, #0
 1403 01ce 0CD1     		bne	.L87
 1404              		.loc 1 630 0 discriminator 2
 1405 01d0 2F4B     		ldr	r3, .L101+40
 1406 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 01d4 002B     		cmp	r3, #0
 1408 01d6 08D1     		bne	.L87
 1409              		.loc 1 630 0 discriminator 3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 37


 1410 01d8 2E4B     		ldr	r3, .L101+44
 1411 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1412 01dc 002B     		cmp	r3, #0
 1413 01de 04D1     		bne	.L87
 631:main.c        ****                     turnFinishedFlag = 1;
 1414              		.loc 1 631 0 is_stmt 1
 1415 01e0 274B     		ldr	r3, .L101+24
 1416 01e2 0122     		movs	r2, #1
 1417 01e4 1A70     		strb	r2, [r3]
 632:main.c        ****                     return Stop;
 1418              		.loc 1 632 0
 1419 01e6 0523     		movs	r3, #5
 1420 01e8 A1E0     		b	.L70
 1421              	.L87:
 633:main.c        ****                 }
 634:main.c        ****                 else
 635:main.c        ****                 {
 636:main.c        ****                     return TurnRight;
 1422              		.loc 1 636 0
 1423 01ea 0123     		movs	r3, #1
 1424 01ec 9FE0     		b	.L70
 1425              	.L85:
 637:main.c        ****                 }
 638:main.c        ****             }
 639:main.c        ****             
 640:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 641:main.c        ****             if (!s4) {
 1426              		.loc 1 641 0
 1427 01ee 234B     		ldr	r3, .L101+20
 1428 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1429 01f2 002B     		cmp	r3, #0
 1430 01f4 04D1     		bne	.L88
 642:main.c        ****                 turnStartedFlag = 1;
 1431              		.loc 1 642 0
 1432 01f6 254B     		ldr	r3, .L101+36
 1433 01f8 0122     		movs	r2, #1
 1434 01fa 1A70     		strb	r2, [r3]
 643:main.c        ****                 return TurnRight;
 1435              		.loc 1 643 0
 1436 01fc 0123     		movs	r3, #1
 1437 01fe 96E0     		b	.L70
 1438              	.L88:
 644:main.c        ****             }
 645:main.c        ****             
 646:main.c        ****             // Otherwise, keep going forward
 647:main.c        ****             return ForwardCourseCorrection(); 
 1439              		.loc 1 647 0
 1440 0200 FFF7FEFF 		bl	ForwardCourseCorrection
 1441 0204 0346     		mov	r3, r0
 1442 0206 92E0     		b	.L70
 1443              	.L66:
 648:main.c        ****             break;
 649:main.c        ****         case ForwardUntilTarget:
 650:main.c        ****             // Reset distance on first iteration of this instruction
 651:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1444              		.loc 1 651 0
 1445 0208 234B     		ldr	r3, .L101+48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 38


 1446 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 020c 002B     		cmp	r3, #0
 1448 020e 0ED1     		bne	.L89
 652:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1449              		.loc 1 652 0
 1450 0210 214B     		ldr	r3, .L101+48
 1451 0212 0122     		movs	r2, #1
 1452 0214 1A70     		strb	r2, [r3]
 653:main.c        ****                 totalDistance = 0;
 1453              		.loc 1 653 0
 1454 0216 214B     		ldr	r3, .L101+52
 1455 0218 4FF00002 		mov	r2, #0
 1456 021c 1A60     		str	r2, [r3]	@ float
 654:main.c        **** 
 655:main.c        ****                 blockSizeTotal = blocksize * 3;
 1457              		.loc 1 655 0
 1458 021e 2049     		ldr	r1, .L101+56
 1459 0220 7868     		ldr	r0, [r7, #4]	@ float
 1460 0222 FFF7FEFF 		bl	__aeabi_fmul
 1461 0226 0346     		mov	r3, r0
 1462 0228 1A46     		mov	r2, r3
 1463 022a 1E4B     		ldr	r3, .L101+60
 1464 022c 1A60     		str	r2, [r3]	@ float
 1465              	.L89:
 656:main.c        ****             }
 657:main.c        ****             
 658:main.c        ****             if (!s3) {
 1466              		.loc 1 658 0
 1467 022e 124B     		ldr	r3, .L101+16
 1468 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1469 0232 002B     		cmp	r3, #0
 1470 0234 0CD1     		bne	.L90
 659:main.c        ****                 if (currentInstruction.ignoreL <= 0) {
 1471              		.loc 1 659 0
 1472 0236 0F4B     		ldr	r3, .L101+12
 1473 0238 5B68     		ldr	r3, [r3, #4]
 1474 023a 002B     		cmp	r3, #0
 1475 023c 03DC     		bgt	.L91
 660:main.c        ****                     MoveToNextInstruction();
 1476              		.loc 1 660 0
 1477 023e FFF7FEFF 		bl	MoveToNextInstruction
 661:main.c        ****                     return Stop;
 1478              		.loc 1 661 0
 1479 0242 0523     		movs	r3, #5
 1480 0244 73E0     		b	.L70
 1481              	.L91:
 662:main.c        ****                 }
 663:main.c        ****                 currentInstruction.ignoreL--;
 1482              		.loc 1 663 0
 1483 0246 0B4B     		ldr	r3, .L101+12
 1484 0248 5B68     		ldr	r3, [r3, #4]
 1485 024a 013B     		subs	r3, r3, #1
 1486 024c 094A     		ldr	r2, .L101+12
 1487 024e 5360     		str	r3, [r2, #4]
 1488              	.L90:
 664:main.c        ****             }
 665:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 39


 666:main.c        ****             if (!s4) {
 1489              		.loc 1 666 0
 1490 0250 0A4B     		ldr	r3, .L101+20
 1491 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 0254 002B     		cmp	r3, #0
 1493 0256 2CD1     		bne	.L92
 667:main.c        ****                 if (currentInstruction.ignoreR <= 0) {
 1494              		.loc 1 667 0
 1495 0258 064B     		ldr	r3, .L101+12
 1496 025a 9B68     		ldr	r3, [r3, #8]
 1497 025c 002B     		cmp	r3, #0
 1498 025e 23DC     		bgt	.L93
 668:main.c        ****                     MoveToNextInstruction();
 1499              		.loc 1 668 0
 1500 0260 FFF7FEFF 		bl	MoveToNextInstruction
 669:main.c        ****                     return Stop;
 1501              		.loc 1 669 0
 1502 0264 0523     		movs	r3, #5
 1503 0266 62E0     		b	.L70
 1504              	.L102:
 1505              		.align	2
 1506              	.L101:
 1507 0268 00000000 		.word	currentRobotOrientation
 1508 026c 00000000 		.word	yBlocksize
 1509 0270 00000000 		.word	xBlocksize
 1510 0274 00000000 		.word	currentInstruction
 1511 0278 00000000 		.word	s3
 1512 027c 00000000 		.word	s4
 1513 0280 00000000 		.word	turnFinishedFlag
 1514 0284 00000000 		.word	currentDirection
 1515 0288 00000000 		.word	stopBuffer
 1516 028c 00000000 		.word	turnStartedFlag
 1517 0290 00000000 		.word	s5
 1518 0294 00000000 		.word	s6
 1519 0298 00000000 		.word	forwardUntilTargetStartedFlag
 1520 029c 00000000 		.word	totalDistance
 1521 02a0 00004040 		.word	1077936128
 1522 02a4 00000000 		.word	blockSizeTotal
 1523              	.L93:
 670:main.c        ****                 }
 671:main.c        ****                 currentInstruction.ignoreR--;
 1524              		.loc 1 671 0
 1525 02a8 234B     		ldr	r3, .L103
 1526 02aa 9B68     		ldr	r3, [r3, #8]
 1527 02ac 013B     		subs	r3, r3, #1
 1528 02ae 224A     		ldr	r2, .L103
 1529 02b0 9360     		str	r3, [r2, #8]
 1530              	.L92:
 672:main.c        ****             }
 673:main.c        ****             
 674:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 675:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1531              		.loc 1 675 0
 1532 02b2 224B     		ldr	r3, .L103+4
 1533 02b4 1A68     		ldr	r2, [r3]	@ float
 1534 02b6 224B     		ldr	r3, .L103+8
 1535 02b8 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 40


 1536 02ba 1946     		mov	r1, r3
 1537 02bc 1046     		mov	r0, r2
 1538 02be FFF7FEFF 		bl	__aeabi_fcmpge
 1539 02c2 0346     		mov	r3, r0
 1540 02c4 002B     		cmp	r3, #0
 1541 02c6 03D0     		beq	.L100
 676:main.c        ****                 // Get next instruction
 677:main.c        ****                 MoveToNextInstruction();
 1542              		.loc 1 677 0
 1543 02c8 FFF7FEFF 		bl	MoveToNextInstruction
 678:main.c        **** 
 679:main.c        ****                 
 680:main.c        ****                 return Stop;
 1544              		.loc 1 680 0
 1545 02cc 0523     		movs	r3, #5
 1546 02ce 2EE0     		b	.L70
 1547              	.L100:
 681:main.c        ****             }
 682:main.c        ****             
 683:main.c        ****             return ForwardCourseCorrection();
 1548              		.loc 1 683 0
 1549 02d0 FFF7FEFF 		bl	ForwardCourseCorrection
 1550 02d4 0346     		mov	r3, r0
 1551 02d6 2AE0     		b	.L70
 1552              	.L67:
 684:main.c        ****             break;
 685:main.c        ****         case StopAtTarget:
 686:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 687:main.c        ****             // Reset flags
 688:main.c        ****             totalDistance = 0;
 1553              		.loc 1 688 0
 1554 02d8 184B     		ldr	r3, .L103+4
 1555 02da 4FF00002 		mov	r2, #0
 1556 02de 1A60     		str	r2, [r3]	@ float
 689:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1557              		.loc 1 689 0
 1558 02e0 184B     		ldr	r3, .L103+12
 1559 02e2 0022     		movs	r2, #0
 1560 02e4 1A70     		strb	r2, [r3]
 690:main.c        ****             blockSizeTotal = 0;
 1561              		.loc 1 690 0
 1562 02e6 164B     		ldr	r3, .L103+8
 1563 02e8 4FF00002 		mov	r2, #0
 1564 02ec 1A60     		str	r2, [r3]	@ float
 691:main.c        ****             
 692:main.c        ****             if (stopBuffer <= 200) {
 1565              		.loc 1 692 0
 1566 02ee 164B     		ldr	r3, .L103+16
 1567 02f0 1B68     		ldr	r3, [r3]
 1568 02f2 C82B     		cmp	r3, #200
 1569 02f4 01D8     		bhi	.L96
 693:main.c        ****                 return Stop;    
 1570              		.loc 1 693 0
 1571 02f6 0523     		movs	r3, #5
 1572 02f8 19E0     		b	.L70
 1573              	.L96:
 694:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 41


 695:main.c        ****             return TurnRight;
 1574              		.loc 1 695 0
 1575 02fa 0123     		movs	r3, #1
 1576 02fc 17E0     		b	.L70
 1577              	.L65:
 696:main.c        ****             break;
 697:main.c        ****         case uTurn:
 698:main.c        ****             if (stopBuffer <= 200) {
 1578              		.loc 1 698 0
 1579 02fe 124B     		ldr	r3, .L103+16
 1580 0300 1B68     		ldr	r3, [r3]
 1581 0302 C82B     		cmp	r3, #200
 1582 0304 01D8     		bhi	.L97
 699:main.c        ****                 return Stop;    
 1583              		.loc 1 699 0
 1584 0306 0523     		movs	r3, #5
 1585 0308 11E0     		b	.L70
 1586              	.L97:
 700:main.c        ****             }
 701:main.c        ****             
 702:main.c        ****             if (!uTurnStartedFlag) {
 1587              		.loc 1 702 0
 1588 030a 104B     		ldr	r3, .L103+20
 1589 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 030e 002B     		cmp	r3, #0
 1591 0310 04D1     		bne	.L98
 703:main.c        ****                 uTurnStartedFlag = 1;
 1592              		.loc 1 703 0
 1593 0312 0E4B     		ldr	r3, .L103+20
 1594 0314 0122     		movs	r2, #1
 1595 0316 1A70     		strb	r2, [r3]
 704:main.c        ****                 return Spin180;
 1596              		.loc 1 704 0
 1597 0318 0A23     		movs	r3, #10
 1598 031a 08E0     		b	.L70
 1599              	.L98:
 705:main.c        ****             } else {
 706:main.c        ****                 uTurnStartedFlag = 0;
 1600              		.loc 1 706 0
 1601 031c 0B4B     		ldr	r3, .L103+20
 1602 031e 0022     		movs	r2, #0
 1603 0320 1A70     		strb	r2, [r3]
 707:main.c        ****                 stopBuffer = 0;
 1604              		.loc 1 707 0
 1605 0322 094B     		ldr	r3, .L103+16
 1606 0324 0022     		movs	r2, #0
 1607 0326 1A60     		str	r2, [r3]
 708:main.c        ****                 return Stop;
 1608              		.loc 1 708 0
 1609 0328 0523     		movs	r3, #5
 1610 032a 00E0     		b	.L70
 1611              	.L60:
 709:main.c        ****                 /*
 710:main.c        ****                 // After 180, if we are not on black, then we course correct
 711:main.c        ****                 if (!s5 && !s6) {
 712:main.c        ****                     uTurnFinishedFlag = 1;    
 713:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 42


 714:main.c        ****                 
 715:main.c        ****                 if (!uTurnFinishedFlag) {
 716:main.c        ****                     return SpinCourseCorrection();    
 717:main.c        ****                 }
 718:main.c        ****                 
 719:main.c        ****                 if (uTurnFinishedFlag) {
 720:main.c        ****                     // GetNextInstruction
 721:main.c        ****                     uTurnFinishedFlag = 0;
 722:main.c        ****                     uTurnStartedFlag = 0;
 723:main.c        ****                     return Backward;    
 724:main.c        ****                 }*/
 725:main.c        ****                 return Backward;
 726:main.c        ****             }
 727:main.c        ****             break;
 728:main.c        ****         default:
 729:main.c        ****             return Stop;
 1612              		.loc 1 729 0
 1613 032c 0523     		movs	r3, #5
 1614              	.L70:
 730:main.c        ****             break;
 731:main.c        ****     }
 732:main.c        ****     return Stop;
 733:main.c        **** }
 1615              		.loc 1 733 0
 1616 032e 1846     		mov	r0, r3
 1617 0330 0837     		adds	r7, r7, #8
 1618              		.cfi_def_cfa_offset 8
 1619 0332 BD46     		mov	sp, r7
 1620              		.cfi_def_cfa_register 13
 1621              		@ sp needed
 1622 0334 80BD     		pop	{r7, pc}
 1623              	.L104:
 1624 0336 00BF     		.align	2
 1625              	.L103:
 1626 0338 00000000 		.word	currentInstruction
 1627 033c 00000000 		.word	totalDistance
 1628 0340 00000000 		.word	blockSizeTotal
 1629 0344 00000000 		.word	forwardUntilTargetStartedFlag
 1630 0348 00000000 		.word	stopBuffer
 1631 034c 00000000 		.word	uTurnStartedFlag
 1632              		.cfi_endproc
 1633              	.LFE75:
 1634              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1635              		.global	__aeabi_i2f
 1636              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1637              		.align	2
 1638              		.global	CalculateDistanceToTravel
 1639              		.thumb
 1640              		.thumb_func
 1641              		.type	CalculateDistanceToTravel, %function
 1642              	CalculateDistanceToTravel:
 1643              	.LFB76:
 734:main.c        **** 
 735:main.c        **** // Calculate total blocksize to travel until target
 736:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1644              		.loc 1 736 0
 1645              		.cfi_startproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 43


 1646              		@ args = 0, pretend = 0, frame = 40
 1647              		@ frame_needed = 1, uses_anonymous_args = 0
 1648 0000 80B5     		push	{r7, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 8AB0     		sub	sp, sp, #40
 1653              		.cfi_def_cfa_offset 48
 1654 0004 00AF     		add	r7, sp, #0
 1655              		.cfi_def_cfa_register 7
 1656 0006 7860     		str	r0, [r7, #4]	@ float
 737:main.c        ****     float totalBlockSize;
 738:main.c        ****     
 739:main.c        ****     // Check for Row, Col that target is 
 740:main.c        ****     int targetRow = food_list[0][0];
 1657              		.loc 1 740 0
 1658 0008 9D4B     		ldr	r3, .L150
 1659 000a 1B68     		ldr	r3, [r3]
 1660 000c 3B61     		str	r3, [r7, #16]
 741:main.c        ****     int targetCol = food_list[0][1];
 1661              		.loc 1 741 0
 1662 000e 9C4B     		ldr	r3, .L150
 1663 0010 5B68     		ldr	r3, [r3, #4]
 1664 0012 FB60     		str	r3, [r7, #12]
 742:main.c        ****     
 743:main.c        ****     int pathCount = 0;
 1665              		.loc 1 743 0
 1666 0014 0023     		movs	r3, #0
 1667 0016 7B62     		str	r3, [r7, #36]
 744:main.c        ****     
 745:main.c        ****     // Depending on the robot orientation
 746:main.c        ****     // count++ if row, col is 8
 747:main.c        ****     // count reset if row, col is 1 or 0
 748:main.c        ****     // save count if row, col is 9
 749:main.c        ****     switch (currentRobotOrientation) {
 1668              		.loc 1 749 0
 1669 0018 9A4B     		ldr	r3, .L150+4
 1670 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 001c 032B     		cmp	r3, #3
 1672 001e 00F21F81 		bhi	.L106
 1673 0022 01A2     		adr	r2, .L108
 1674 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1675              		.p2align 2
 1676              	.L108:
 1677 0028 39000000 		.word	.L107+1
 1678 002c C3000000 		.word	.L109+1
 1679 0030 4D010000 		.word	.L110+1
 1680 0034 D7010000 		.word	.L111+1
 1681              		.p2align 1
 1682              	.L107:
 1683              	.LBB3:
 750:main.c        ****         case Up:
 751:main.c        ****             // Column
 752:main.c        ****             // Start from Bottom (since we're facing up)
 753:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1684              		.loc 1 753 0
 1685 0038 0F23     		movs	r3, #15
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 44


 1686 003a 3B62     		str	r3, [r7, #32]
 1687 003c 3BE0     		b	.L112
 1688              	.L118:
 754:main.c        ****                 if (map[i][targetCol] == 9) {
 1689              		.loc 1 754 0
 1690 003e 9249     		ldr	r1, .L150+8
 1691 0040 3A6A     		ldr	r2, [r7, #32]
 1692 0042 1346     		mov	r3, r2
 1693 0044 DB00     		lsls	r3, r3, #3
 1694 0046 1344     		add	r3, r3, r2
 1695 0048 5B00     		lsls	r3, r3, #1
 1696 004a 1344     		add	r3, r3, r2
 1697 004c FA68     		ldr	r2, [r7, #12]
 1698 004e 1344     		add	r3, r3, r2
 1699 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1700 0054 092B     		cmp	r3, #9
 1701 0056 32D0     		beq	.L145
 755:main.c        ****                     break;    
 756:main.c        ****                 }
 757:main.c        ****                 if (map[i][targetCol] == 8) {
 1702              		.loc 1 757 0
 1703 0058 8B49     		ldr	r1, .L150+8
 1704 005a 3A6A     		ldr	r2, [r7, #32]
 1705 005c 1346     		mov	r3, r2
 1706 005e DB00     		lsls	r3, r3, #3
 1707 0060 1344     		add	r3, r3, r2
 1708 0062 5B00     		lsls	r3, r3, #1
 1709 0064 1344     		add	r3, r3, r2
 1710 0066 FA68     		ldr	r2, [r7, #12]
 1711 0068 1344     		add	r3, r3, r2
 1712 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1713 006e 082B     		cmp	r3, #8
 1714 0070 02D1     		bne	.L115
 758:main.c        ****                     pathCount++;    
 1715              		.loc 1 758 0
 1716 0072 7B6A     		ldr	r3, [r7, #36]
 1717 0074 0133     		adds	r3, r3, #1
 1718 0076 7B62     		str	r3, [r7, #36]
 1719              	.L115:
 759:main.c        ****                 }
 760:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1720              		.loc 1 760 0
 1721 0078 8349     		ldr	r1, .L150+8
 1722 007a 3A6A     		ldr	r2, [r7, #32]
 1723 007c 1346     		mov	r3, r2
 1724 007e DB00     		lsls	r3, r3, #3
 1725 0080 1344     		add	r3, r3, r2
 1726 0082 5B00     		lsls	r3, r3, #1
 1727 0084 1344     		add	r3, r3, r2
 1728 0086 FA68     		ldr	r2, [r7, #12]
 1729 0088 1344     		add	r3, r3, r2
 1730 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1731 008e 002B     		cmp	r3, #0
 1732 0090 0CD0     		beq	.L116
 1733              		.loc 1 760 0 is_stmt 0 discriminator 1
 1734 0092 7D49     		ldr	r1, .L150+8
 1735 0094 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 45


 1736 0096 1346     		mov	r3, r2
 1737 0098 DB00     		lsls	r3, r3, #3
 1738 009a 1344     		add	r3, r3, r2
 1739 009c 5B00     		lsls	r3, r3, #1
 1740 009e 1344     		add	r3, r3, r2
 1741 00a0 FA68     		ldr	r2, [r7, #12]
 1742 00a2 1344     		add	r3, r3, r2
 1743 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1744 00a8 012B     		cmp	r3, #1
 1745 00aa 01D1     		bne	.L117
 1746              	.L116:
 761:main.c        ****                     pathCount = 0;
 1747              		.loc 1 761 0 is_stmt 1
 1748 00ac 0023     		movs	r3, #0
 1749 00ae 7B62     		str	r3, [r7, #36]
 1750              	.L117:
 753:main.c        ****                 if (map[i][targetCol] == 9) {
 1751              		.loc 1 753 0 discriminator 2
 1752 00b0 3B6A     		ldr	r3, [r7, #32]
 1753 00b2 013B     		subs	r3, r3, #1
 1754 00b4 3B62     		str	r3, [r7, #32]
 1755              	.L112:
 753:main.c        ****                 if (map[i][targetCol] == 9) {
 1756              		.loc 1 753 0 is_stmt 0 discriminator 1
 1757 00b6 3B6A     		ldr	r3, [r7, #32]
 1758 00b8 002B     		cmp	r3, #0
 1759 00ba C0DA     		bge	.L118
 1760              	.LBE3:
 762:main.c        ****                 }
 763:main.c        ****             }
 764:main.c        ****             break;
 1761              		.loc 1 764 0 is_stmt 1
 1762 00bc D0E0     		b	.L106
 1763              	.L145:
 1764              	.LBB4:
 755:main.c        ****                 }
 1765              		.loc 1 755 0
 1766 00be 00BF     		nop
 1767              	.LBE4:
 1768              		.loc 1 764 0
 1769 00c0 CEE0     		b	.L106
 1770              	.L109:
 1771              	.LBB5:
 765:main.c        ****         case Down:
 766:main.c        ****             // Target Column, Check Row
 767:main.c        ****             // Start from Top
 768:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1772              		.loc 1 768 0
 1773 00c2 0023     		movs	r3, #0
 1774 00c4 FB61     		str	r3, [r7, #28]
 1775 00c6 3BE0     		b	.L119
 1776              	.L125:
 769:main.c        ****                 if (map[i][targetCol] == 9) {
 1777              		.loc 1 769 0
 1778 00c8 6F49     		ldr	r1, .L150+8
 1779 00ca FA69     		ldr	r2, [r7, #28]
 1780 00cc 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 46


 1781 00ce DB00     		lsls	r3, r3, #3
 1782 00d0 1344     		add	r3, r3, r2
 1783 00d2 5B00     		lsls	r3, r3, #1
 1784 00d4 1344     		add	r3, r3, r2
 1785 00d6 FA68     		ldr	r2, [r7, #12]
 1786 00d8 1344     		add	r3, r3, r2
 1787 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1788 00de 092B     		cmp	r3, #9
 1789 00e0 32D0     		beq	.L146
 770:main.c        ****                     break;    
 771:main.c        ****                 }
 772:main.c        ****                 if (map[i][targetCol] == 8) {
 1790              		.loc 1 772 0
 1791 00e2 6949     		ldr	r1, .L150+8
 1792 00e4 FA69     		ldr	r2, [r7, #28]
 1793 00e6 1346     		mov	r3, r2
 1794 00e8 DB00     		lsls	r3, r3, #3
 1795 00ea 1344     		add	r3, r3, r2
 1796 00ec 5B00     		lsls	r3, r3, #1
 1797 00ee 1344     		add	r3, r3, r2
 1798 00f0 FA68     		ldr	r2, [r7, #12]
 1799 00f2 1344     		add	r3, r3, r2
 1800 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1801 00f8 082B     		cmp	r3, #8
 1802 00fa 02D1     		bne	.L122
 773:main.c        ****                     pathCount++;    
 1803              		.loc 1 773 0
 1804 00fc 7B6A     		ldr	r3, [r7, #36]
 1805 00fe 0133     		adds	r3, r3, #1
 1806 0100 7B62     		str	r3, [r7, #36]
 1807              	.L122:
 774:main.c        ****                 }
 775:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1808              		.loc 1 775 0
 1809 0102 6149     		ldr	r1, .L150+8
 1810 0104 FA69     		ldr	r2, [r7, #28]
 1811 0106 1346     		mov	r3, r2
 1812 0108 DB00     		lsls	r3, r3, #3
 1813 010a 1344     		add	r3, r3, r2
 1814 010c 5B00     		lsls	r3, r3, #1
 1815 010e 1344     		add	r3, r3, r2
 1816 0110 FA68     		ldr	r2, [r7, #12]
 1817 0112 1344     		add	r3, r3, r2
 1818 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1819 0118 002B     		cmp	r3, #0
 1820 011a 0CD0     		beq	.L123
 1821              		.loc 1 775 0 is_stmt 0 discriminator 1
 1822 011c 5A49     		ldr	r1, .L150+8
 1823 011e FA69     		ldr	r2, [r7, #28]
 1824 0120 1346     		mov	r3, r2
 1825 0122 DB00     		lsls	r3, r3, #3
 1826 0124 1344     		add	r3, r3, r2
 1827 0126 5B00     		lsls	r3, r3, #1
 1828 0128 1344     		add	r3, r3, r2
 1829 012a FA68     		ldr	r2, [r7, #12]
 1830 012c 1344     		add	r3, r3, r2
 1831 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 47


 1832 0132 012B     		cmp	r3, #1
 1833 0134 01D1     		bne	.L124
 1834              	.L123:
 776:main.c        ****                     pathCount = 0;
 1835              		.loc 1 776 0 is_stmt 1
 1836 0136 0023     		movs	r3, #0
 1837 0138 7B62     		str	r3, [r7, #36]
 1838              	.L124:
 768:main.c        ****                 if (map[i][targetCol] == 9) {
 1839              		.loc 1 768 0 discriminator 2
 1840 013a FB69     		ldr	r3, [r7, #28]
 1841 013c 0133     		adds	r3, r3, #1
 1842 013e FB61     		str	r3, [r7, #28]
 1843              	.L119:
 768:main.c        ****                 if (map[i][targetCol] == 9) {
 1844              		.loc 1 768 0 is_stmt 0 discriminator 1
 1845 0140 FB69     		ldr	r3, [r7, #28]
 1846 0142 0E2B     		cmp	r3, #14
 1847 0144 C0DD     		ble	.L125
 1848              	.LBE5:
 777:main.c        ****                 }
 778:main.c        ****             }
 779:main.c        ****             break;
 1849              		.loc 1 779 0 is_stmt 1
 1850 0146 8BE0     		b	.L106
 1851              	.L146:
 1852              	.LBB6:
 770:main.c        ****                 }
 1853              		.loc 1 770 0
 1854 0148 00BF     		nop
 1855              	.LBE6:
 1856              		.loc 1 779 0
 1857 014a 89E0     		b	.L106
 1858              	.L110:
 1859              	.LBB7:
 780:main.c        ****         case Left:
 781:main.c        ****             // Target Row, Check Col
 782:main.c        ****             // Start from Right
 783:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1860              		.loc 1 783 0
 1861 014c 1323     		movs	r3, #19
 1862 014e BB61     		str	r3, [r7, #24]
 1863 0150 3BE0     		b	.L126
 1864              	.L132:
 784:main.c        ****                 if (map[targetRow][i] == 9) {
 1865              		.loc 1 784 0
 1866 0152 4D49     		ldr	r1, .L150+8
 1867 0154 3A69     		ldr	r2, [r7, #16]
 1868 0156 1346     		mov	r3, r2
 1869 0158 DB00     		lsls	r3, r3, #3
 1870 015a 1344     		add	r3, r3, r2
 1871 015c 5B00     		lsls	r3, r3, #1
 1872 015e 1344     		add	r3, r3, r2
 1873 0160 BA69     		ldr	r2, [r7, #24]
 1874 0162 1344     		add	r3, r3, r2
 1875 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1876 0168 092B     		cmp	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 48


 1877 016a 32D0     		beq	.L147
 785:main.c        ****                     break;    
 786:main.c        ****                 }
 787:main.c        ****                 if (map[targetRow][i] == 8) {
 1878              		.loc 1 787 0
 1879 016c 4649     		ldr	r1, .L150+8
 1880 016e 3A69     		ldr	r2, [r7, #16]
 1881 0170 1346     		mov	r3, r2
 1882 0172 DB00     		lsls	r3, r3, #3
 1883 0174 1344     		add	r3, r3, r2
 1884 0176 5B00     		lsls	r3, r3, #1
 1885 0178 1344     		add	r3, r3, r2
 1886 017a BA69     		ldr	r2, [r7, #24]
 1887 017c 1344     		add	r3, r3, r2
 1888 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1889 0182 082B     		cmp	r3, #8
 1890 0184 02D1     		bne	.L129
 788:main.c        ****                     pathCount++;    
 1891              		.loc 1 788 0
 1892 0186 7B6A     		ldr	r3, [r7, #36]
 1893 0188 0133     		adds	r3, r3, #1
 1894 018a 7B62     		str	r3, [r7, #36]
 1895              	.L129:
 789:main.c        ****                 }
 790:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1896              		.loc 1 790 0
 1897 018c 3E49     		ldr	r1, .L150+8
 1898 018e 3A69     		ldr	r2, [r7, #16]
 1899 0190 1346     		mov	r3, r2
 1900 0192 DB00     		lsls	r3, r3, #3
 1901 0194 1344     		add	r3, r3, r2
 1902 0196 5B00     		lsls	r3, r3, #1
 1903 0198 1344     		add	r3, r3, r2
 1904 019a BA69     		ldr	r2, [r7, #24]
 1905 019c 1344     		add	r3, r3, r2
 1906 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1907 01a2 002B     		cmp	r3, #0
 1908 01a4 0CD0     		beq	.L130
 1909              		.loc 1 790 0 is_stmt 0 discriminator 1
 1910 01a6 3849     		ldr	r1, .L150+8
 1911 01a8 BA69     		ldr	r2, [r7, #24]
 1912 01aa 1346     		mov	r3, r2
 1913 01ac DB00     		lsls	r3, r3, #3
 1914 01ae 1344     		add	r3, r3, r2
 1915 01b0 5B00     		lsls	r3, r3, #1
 1916 01b2 1344     		add	r3, r3, r2
 1917 01b4 FA68     		ldr	r2, [r7, #12]
 1918 01b6 1344     		add	r3, r3, r2
 1919 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1920 01bc 012B     		cmp	r3, #1
 1921 01be 01D1     		bne	.L131
 1922              	.L130:
 791:main.c        ****                     pathCount = 0;
 1923              		.loc 1 791 0 is_stmt 1
 1924 01c0 0023     		movs	r3, #0
 1925 01c2 7B62     		str	r3, [r7, #36]
 1926              	.L131:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 49


 783:main.c        ****                 if (map[targetRow][i] == 9) {
 1927              		.loc 1 783 0 discriminator 2
 1928 01c4 BB69     		ldr	r3, [r7, #24]
 1929 01c6 013B     		subs	r3, r3, #1
 1930 01c8 BB61     		str	r3, [r7, #24]
 1931              	.L126:
 783:main.c        ****                 if (map[targetRow][i] == 9) {
 1932              		.loc 1 783 0 is_stmt 0 discriminator 1
 1933 01ca BB69     		ldr	r3, [r7, #24]
 1934 01cc 002B     		cmp	r3, #0
 1935 01ce C0DA     		bge	.L132
 1936              	.LBE7:
 792:main.c        ****                 }
 793:main.c        ****             }
 794:main.c        ****             break;
 1937              		.loc 1 794 0 is_stmt 1
 1938 01d0 46E0     		b	.L106
 1939              	.L147:
 1940              	.LBB8:
 785:main.c        ****                 }
 1941              		.loc 1 785 0
 1942 01d2 00BF     		nop
 1943              	.LBE8:
 1944              		.loc 1 794 0
 1945 01d4 44E0     		b	.L106
 1946              	.L111:
 1947              	.LBB9:
 795:main.c        ****         
 796:main.c        ****         case Right:
 797:main.c        ****             // Target Row, Check Col
 798:main.c        ****             // Start from Left
 799:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 1948              		.loc 1 799 0
 1949 01d6 0023     		movs	r3, #0
 1950 01d8 7B61     		str	r3, [r7, #20]
 1951 01da 3BE0     		b	.L133
 1952              	.L139:
 800:main.c        ****                 if (map[targetRow][i] == 9) {
 1953              		.loc 1 800 0
 1954 01dc 2A49     		ldr	r1, .L150+8
 1955 01de 3A69     		ldr	r2, [r7, #16]
 1956 01e0 1346     		mov	r3, r2
 1957 01e2 DB00     		lsls	r3, r3, #3
 1958 01e4 1344     		add	r3, r3, r2
 1959 01e6 5B00     		lsls	r3, r3, #1
 1960 01e8 1344     		add	r3, r3, r2
 1961 01ea 7A69     		ldr	r2, [r7, #20]
 1962 01ec 1344     		add	r3, r3, r2
 1963 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1964 01f2 092B     		cmp	r3, #9
 1965 01f4 32D0     		beq	.L148
 801:main.c        ****                     break;    
 802:main.c        ****                 }
 803:main.c        ****                 if (map[targetRow][i] == 8) {
 1966              		.loc 1 803 0
 1967 01f6 2449     		ldr	r1, .L150+8
 1968 01f8 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 50


 1969 01fa 1346     		mov	r3, r2
 1970 01fc DB00     		lsls	r3, r3, #3
 1971 01fe 1344     		add	r3, r3, r2
 1972 0200 5B00     		lsls	r3, r3, #1
 1973 0202 1344     		add	r3, r3, r2
 1974 0204 7A69     		ldr	r2, [r7, #20]
 1975 0206 1344     		add	r3, r3, r2
 1976 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1977 020c 082B     		cmp	r3, #8
 1978 020e 02D1     		bne	.L136
 804:main.c        ****                     pathCount++;    
 1979              		.loc 1 804 0
 1980 0210 7B6A     		ldr	r3, [r7, #36]
 1981 0212 0133     		adds	r3, r3, #1
 1982 0214 7B62     		str	r3, [r7, #36]
 1983              	.L136:
 805:main.c        ****                 }
 806:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1984              		.loc 1 806 0
 1985 0216 1C49     		ldr	r1, .L150+8
 1986 0218 3A69     		ldr	r2, [r7, #16]
 1987 021a 1346     		mov	r3, r2
 1988 021c DB00     		lsls	r3, r3, #3
 1989 021e 1344     		add	r3, r3, r2
 1990 0220 5B00     		lsls	r3, r3, #1
 1991 0222 1344     		add	r3, r3, r2
 1992 0224 7A69     		ldr	r2, [r7, #20]
 1993 0226 1344     		add	r3, r3, r2
 1994 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1995 022c 002B     		cmp	r3, #0
 1996 022e 0CD0     		beq	.L137
 1997              		.loc 1 806 0 is_stmt 0 discriminator 1
 1998 0230 1549     		ldr	r1, .L150+8
 1999 0232 7A69     		ldr	r2, [r7, #20]
 2000 0234 1346     		mov	r3, r2
 2001 0236 DB00     		lsls	r3, r3, #3
 2002 0238 1344     		add	r3, r3, r2
 2003 023a 5B00     		lsls	r3, r3, #1
 2004 023c 1344     		add	r3, r3, r2
 2005 023e FA68     		ldr	r2, [r7, #12]
 2006 0240 1344     		add	r3, r3, r2
 2007 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2008 0246 012B     		cmp	r3, #1
 2009 0248 01D1     		bne	.L138
 2010              	.L137:
 807:main.c        ****                     pathCount = 0;
 2011              		.loc 1 807 0 is_stmt 1
 2012 024a 0023     		movs	r3, #0
 2013 024c 7B62     		str	r3, [r7, #36]
 2014              	.L138:
 799:main.c        ****                 if (map[targetRow][i] == 9) {
 2015              		.loc 1 799 0 discriminator 2
 2016 024e 7B69     		ldr	r3, [r7, #20]
 2017 0250 0133     		adds	r3, r3, #1
 2018 0252 7B61     		str	r3, [r7, #20]
 2019              	.L133:
 799:main.c        ****                 if (map[targetRow][i] == 9) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 51


 2020              		.loc 1 799 0 is_stmt 0 discriminator 1
 2021 0254 7B69     		ldr	r3, [r7, #20]
 2022 0256 122B     		cmp	r3, #18
 2023 0258 C0DD     		ble	.L139
 2024              	.LBE9:
 808:main.c        ****                 }
 809:main.c        **** 
 810:main.c        ****             }
 811:main.c        ****             break;
 2025              		.loc 1 811 0 is_stmt 1
 2026 025a 00E0     		b	.L149
 2027              	.L148:
 2028              	.LBB10:
 801:main.c        ****                 }
 2029              		.loc 1 801 0
 2030 025c 00BF     		nop
 2031              	.L149:
 2032              	.LBE10:
 2033              		.loc 1 811 0
 2034 025e 00BF     		nop
 2035              	.L106:
 812:main.c        ****         
 813:main.c        ****     }
 814:main.c        ****     totalBlockSize = blockSize * pathCount;
 2036              		.loc 1 814 0
 2037 0260 786A     		ldr	r0, [r7, #36]
 2038 0262 FFF7FEFF 		bl	__aeabi_i2f
 2039 0266 0346     		mov	r3, r0
 2040 0268 7968     		ldr	r1, [r7, #4]	@ float
 2041 026a 1846     		mov	r0, r3
 2042 026c FFF7FEFF 		bl	__aeabi_fmul
 2043 0270 0346     		mov	r3, r0
 2044 0272 BB60     		str	r3, [r7, #8]	@ float
 815:main.c        ****     return totalBlockSize;
 2045              		.loc 1 815 0
 2046 0274 BB68     		ldr	r3, [r7, #8]	@ float
 816:main.c        **** }
 2047              		.loc 1 816 0
 2048 0276 1846     		mov	r0, r3
 2049 0278 2837     		adds	r7, r7, #40
 2050              		.cfi_def_cfa_offset 8
 2051 027a BD46     		mov	sp, r7
 2052              		.cfi_def_cfa_register 13
 2053              		@ sp needed
 2054 027c 80BD     		pop	{r7, pc}
 2055              	.L151:
 2056 027e 00BF     		.align	2
 2057              	.L150:
 2058 0280 00000000 		.word	food_list
 2059 0284 00000000 		.word	currentRobotOrientation
 2060 0288 00000000 		.word	map
 2061              		.cfi_endproc
 2062              	.LFE76:
 2063              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 2064              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2065              		.align	2
 2066              		.global	MoveToNextInstruction
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 52


 2067              		.thumb
 2068              		.thumb_func
 2069              		.type	MoveToNextInstruction, %function
 2070              	MoveToNextInstruction:
 2071              	.LFB77:
 817:main.c        **** 
 818:main.c        **** // get next instruction
 819:main.c        **** void MoveToNextInstruction() {
 2072              		.loc 1 819 0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 0
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076              		@ link register save eliminated.
 2077 0000 80B4     		push	{r7}
 2078              		.cfi_def_cfa_offset 4
 2079              		.cfi_offset 7, -4
 2080 0002 00AF     		add	r7, sp, #0
 2081              		.cfi_def_cfa_register 7
 820:main.c        ****     instructionIndex++;
 2082              		.loc 1 820 0
 2083 0004 044B     		ldr	r3, .L153
 2084 0006 1B68     		ldr	r3, [r3]
 2085 0008 0133     		adds	r3, r3, #1
 2086 000a 034A     		ldr	r2, .L153
 2087 000c 1360     		str	r3, [r2]
 821:main.c        **** }
 2088              		.loc 1 821 0
 2089 000e 00BF     		nop
 2090 0010 BD46     		mov	sp, r7
 2091              		.cfi_def_cfa_register 13
 2092              		@ sp needed
 2093 0012 80BC     		pop	{r7}
 2094              		.cfi_restore 7
 2095              		.cfi_def_cfa_offset 0
 2096 0014 7047     		bx	lr
 2097              	.L154:
 2098 0016 00BF     		.align	2
 2099              	.L153:
 2100 0018 00000000 		.word	instructionIndex
 2101              		.cfi_endproc
 2102              	.LFE77:
 2103              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2104              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2105              		.align	2
 2106              		.global	GetInstructionAtIndex
 2107              		.thumb
 2108              		.thumb_func
 2109              		.type	GetInstructionAtIndex, %function
 2110              	GetInstructionAtIndex:
 2111              	.LFB78:
 822:main.c        **** 
 823:main.c        **** 
 824:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
 2112              		.loc 1 824 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 40
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 53


 2116              		@ link register save eliminated.
 2117 0000 90B4     		push	{r4, r7}
 2118              		.cfi_def_cfa_offset 8
 2119              		.cfi_offset 4, -8
 2120              		.cfi_offset 7, -4
 2121 0002 8AB0     		sub	sp, sp, #40
 2122              		.cfi_def_cfa_offset 48
 2123 0004 00AF     		add	r7, sp, #0
 2124              		.cfi_def_cfa_register 7
 2125 0006 F860     		str	r0, [r7, #12]
 2126 0008 B960     		str	r1, [r7, #8]
 2127 000a 7A60     		str	r2, [r7, #4]
 2128 000c 3B60     		str	r3, [r7]
 2129              	.LBB11:
 825:main.c        ****     Instruction nextInstruction;
 826:main.c        ****     // input is list of instructions and robot will react accordingly
 827:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 2130              		.loc 1 827 0
 2131 000e 3B68     		ldr	r3, [r7]
 2132 0010 7B62     		str	r3, [r7, #36]
 2133 0012 2CE0     		b	.L156
 2134              	.L159:
 828:main.c        ****         if(instructionList[i].direction != Skip) {
 2135              		.loc 1 828 0
 2136 0014 7B6A     		ldr	r3, [r7, #36]
 2137 0016 1B01     		lsls	r3, r3, #4
 2138 0018 7A68     		ldr	r2, [r7, #4]
 2139 001a 1344     		add	r3, r3, r2
 2140 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2141 001e 062B     		cmp	r3, #6
 2142 0020 20D0     		beq	.L157
 829:main.c        ****             nextInstruction.direction = instructionList[i].direction;
 2143              		.loc 1 829 0
 2144 0022 7B6A     		ldr	r3, [r7, #36]
 2145 0024 1B01     		lsls	r3, r3, #4
 2146 0026 7A68     		ldr	r2, [r7, #4]
 2147 0028 1344     		add	r3, r3, r2
 2148 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2149 002c 3B75     		strb	r3, [r7, #20]
 830:main.c        ****             nextInstruction.ignoreL = instructionList[i].ignoreL;
 2150              		.loc 1 830 0
 2151 002e 7B6A     		ldr	r3, [r7, #36]
 2152 0030 1B01     		lsls	r3, r3, #4
 2153 0032 7A68     		ldr	r2, [r7, #4]
 2154 0034 1344     		add	r3, r3, r2
 2155 0036 5B68     		ldr	r3, [r3, #4]
 2156 0038 BB61     		str	r3, [r7, #24]
 831:main.c        ****             nextInstruction.ignoreR = instructionList[i].ignoreR;
 2157              		.loc 1 831 0
 2158 003a 7B6A     		ldr	r3, [r7, #36]
 2159 003c 1B01     		lsls	r3, r3, #4
 2160 003e 7A68     		ldr	r2, [r7, #4]
 2161 0040 1344     		add	r3, r3, r2
 2162 0042 9B68     		ldr	r3, [r3, #8]
 2163 0044 FB61     		str	r3, [r7, #28]
 832:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 2164              		.loc 1 832 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 54


 2165 0046 7B6A     		ldr	r3, [r7, #36]
 2166 0048 1B01     		lsls	r3, r3, #4
 2167 004a 7A68     		ldr	r2, [r7, #4]
 2168 004c 1344     		add	r3, r3, r2
 2169 004e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2170 0050 87F82030 		strb	r3, [r7, #32]
 833:main.c        ****             return nextInstruction; // return next instruction
 2171              		.loc 1 833 0
 2172 0054 FB68     		ldr	r3, [r7, #12]
 2173 0056 1C46     		mov	r4, r3
 2174 0058 07F11403 		add	r3, r7, #20
 2175 005c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2176 005e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2177 0062 0FE0     		b	.L155
 2178              	.L157:
 834:main.c        ****         }
 835:main.c        ****         instructionIndex = i;
 2179              		.loc 1 835 0 discriminator 2
 2180 0064 7B6A     		ldr	r3, [r7, #36]
 2181 0066 3B60     		str	r3, [r7]
 827:main.c        ****         if(instructionList[i].direction != Skip) {
 2182              		.loc 1 827 0 discriminator 2
 2183 0068 7B6A     		ldr	r3, [r7, #36]
 2184 006a 0133     		adds	r3, r3, #1
 2185 006c 7B62     		str	r3, [r7, #36]
 2186              	.L156:
 827:main.c        ****         if(instructionList[i].direction != Skip) {
 2187              		.loc 1 827 0 is_stmt 0 discriminator 1
 2188 006e 7A6A     		ldr	r2, [r7, #36]
 2189 0070 BB68     		ldr	r3, [r7, #8]
 2190 0072 9A42     		cmp	r2, r3
 2191 0074 CEDB     		blt	.L159
 2192              	.LBE11:
 836:main.c        ****     }
 837:main.c        ****     return nextInstruction;
 2193              		.loc 1 837 0 is_stmt 1
 2194 0076 FB68     		ldr	r3, [r7, #12]
 2195 0078 1C46     		mov	r4, r3
 2196 007a 07F11403 		add	r3, r7, #20
 2197 007e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2198 0080 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2199              	.L155:
 838:main.c        **** }
 2200              		.loc 1 838 0
 2201 0084 F868     		ldr	r0, [r7, #12]
 2202 0086 2837     		adds	r7, r7, #40
 2203              		.cfi_def_cfa_offset 8
 2204 0088 BD46     		mov	sp, r7
 2205              		.cfi_def_cfa_register 13
 2206              		@ sp needed
 2207 008a 90BC     		pop	{r4, r7}
 2208              		.cfi_restore 7
 2209              		.cfi_restore 4
 2210              		.cfi_def_cfa_offset 0
 2211 008c 7047     		bx	lr
 2212              		.cfi_endproc
 2213              	.LFE78:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 55


 2214              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2215 008e 00BF     		.section	.text.SetRobotMovement,"ax",%progbits
 2216              		.align	2
 2217              		.global	SetRobotMovement
 2218              		.thumb
 2219              		.thumb_func
 2220              		.type	SetRobotMovement, %function
 2221              	SetRobotMovement:
 2222              	.LFB79:
 839:main.c        **** 
 840:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 841:main.c        **** void SetRobotMovement() {
 2223              		.loc 1 841 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 16
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227 0000 90B5     		push	{r4, r7, lr}
 2228              		.cfi_def_cfa_offset 12
 2229              		.cfi_offset 4, -12
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 85B0     		sub	sp, sp, #20
 2233              		.cfi_def_cfa_offset 32
 2234 0004 00AF     		add	r7, sp, #0
 2235              		.cfi_def_cfa_register 7
 842:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList, instructionIndex); // get
 2236              		.loc 1 842 0
 2237 0006 2A4B     		ldr	r3, .L177
 2238 0008 1968     		ldr	r1, [r3]
 2239 000a 2A4B     		ldr	r3, .L177+4
 2240 000c 1A68     		ldr	r2, [r3]
 2241 000e 2A4B     		ldr	r3, .L177+8
 2242 0010 1B68     		ldr	r3, [r3]
 2243 0012 2A4C     		ldr	r4, .L177+12
 2244 0014 3846     		mov	r0, r7
 2245 0016 FFF7FEFF 		bl	GetInstructionAtIndex
 2246 001a 3B46     		mov	r3, r7
 2247 001c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2248 001e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 843:main.c        ****     previousDirection = currentDirection;
 2249              		.loc 1 843 0
 2250 0022 274B     		ldr	r3, .L177+16
 2251 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2252 0026 274B     		ldr	r3, .L177+20
 2253 0028 1A70     		strb	r2, [r3]
 844:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2254              		.loc 1 844 0
 2255 002a FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2256 002e 0346     		mov	r3, r0
 2257 0030 1A46     		mov	r2, r3
 2258 0032 234B     		ldr	r3, .L177+16
 2259 0034 1A70     		strb	r2, [r3]
 845:main.c        ****     // move robot depending on sensors
 846:main.c        ****     switch (currentDirection) {
 2260              		.loc 1 846 0
 2261 0036 224B     		ldr	r3, .L177+16
 2262 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 56


 2263 003a 0A2B     		cmp	r3, #10
 2264 003c 34D8     		bhi	.L175
 2265 003e 01A2     		adr	r2, .L164
 2266 0040 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2267              		.p2align 2
 2268              	.L164:
 2269 0044 71000000 		.word	.L163+1
 2270 0048 77000000 		.word	.L165+1
 2271 004c 7D000000 		.word	.L166+1
 2272 0050 89000000 		.word	.L167+1
 2273 0054 83000000 		.word	.L168+1
 2274 0058 8F000000 		.word	.L169+1
 2275 005c A7000000 		.word	.L176+1
 2276 0060 A7000000 		.word	.L176+1
 2277 0064 95000000 		.word	.L172+1
 2278 0068 9B000000 		.word	.L173+1
 2279 006c A1000000 		.word	.L174+1
 2280              		.p2align 1
 2281              	.L163:
 847:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 848:main.c        ****         case Forward:
 849:main.c        ****             moveForward();
 2282              		.loc 1 849 0
 2283 0070 FFF7FEFF 		bl	moveForward
 850:main.c        ****             break;
 2284              		.loc 1 850 0
 2285 0074 18E0     		b	.L162
 2286              	.L165:
 851:main.c        ****         case TurnRight:
 852:main.c        ****             turnRight();
 2287              		.loc 1 852 0
 2288 0076 FFF7FEFF 		bl	turnRight
 853:main.c        ****             break;
 2289              		.loc 1 853 0
 2290 007a 15E0     		b	.L162
 2291              	.L166:
 854:main.c        ****         case TurnLeft:
 855:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2292              		.loc 1 855 0
 2293 007c FFF7FEFF 		bl	turnLeft
 856:main.c        ****             break;
 2294              		.loc 1 856 0
 2295 0080 12E0     		b	.L162
 2296              	.L168:
 857:main.c        ****         case AdjustToTheRight:
 858:main.c        ****             adjustRight();
 2297              		.loc 1 858 0
 2298 0082 FFF7FEFF 		bl	adjustRight
 859:main.c        ****             break;
 2299              		.loc 1 859 0
 2300 0086 0FE0     		b	.L162
 2301              	.L167:
 860:main.c        ****         case AdjustToTheLeft:
 861:main.c        ****             adjustLeft();
 2302              		.loc 1 861 0
 2303 0088 FFF7FEFF 		bl	adjustLeft
 862:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 57


 2304              		.loc 1 862 0
 2305 008c 0CE0     		b	.L162
 2306              	.L169:
 863:main.c        ****         case Stop:
 864:main.c        ****             stopMoving();
 2307              		.loc 1 864 0
 2308 008e FFF7FEFF 		bl	stopMoving
 865:main.c        ****             break;
 2309              		.loc 1 865 0
 2310 0092 09E0     		b	.L162
 2311              	.L172:
 866:main.c        ****         case ForwardAfterTurn:
 867:main.c        ****             moveForward();
 2312              		.loc 1 867 0
 2313 0094 FFF7FEFF 		bl	moveForward
 868:main.c        ****             break;
 2314              		.loc 1 868 0
 2315 0098 06E0     		b	.L162
 2316              	.L173:
 869:main.c        ****         case Backward:
 870:main.c        ****             moveBackward();
 2317              		.loc 1 870 0
 2318 009a FFF7FEFF 		bl	moveBackward
 871:main.c        ****             break;
 2319              		.loc 1 871 0
 2320 009e 03E0     		b	.L162
 2321              	.L174:
 872:main.c        ****         case waitForTurn:
 873:main.c        ****             break;
 874:main.c        ****         case Spin180:
 875:main.c        ****             RotateClockwise180Degrees();
 2322              		.loc 1 875 0
 2323 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 876:main.c        ****             break;
 2324              		.loc 1 876 0
 2325 00a4 00E0     		b	.L162
 2326              	.L176:
 877:main.c        ****         /*case waitForLeftTurn:
 878:main.c        ****             moveForward();
 879:main.c        ****             break;
 880:main.c        ****         case waitForRightTurn:
 881:main.c        ****             moveForward();
 882:main.c        ****             break;*/
 883:main.c        ****         case Unknown:
 884:main.c        ****             // UNKNOWN CONFIGURATION
 885:main.c        ****             break;  
 2327              		.loc 1 885 0
 2328 00a6 00BF     		nop
 2329              	.L162:
 2330              	.L175:
 886:main.c        ****     }
 887:main.c        **** }...
 2331              		.loc 1 887 0
 2332 00a8 00BF     		nop
 2333 00aa 1437     		adds	r7, r7, #20
 2334              		.cfi_def_cfa_offset 12
 2335 00ac BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 58


 2336              		.cfi_def_cfa_register 13
 2337              		@ sp needed
 2338 00ae 90BD     		pop	{r4, r7, pc}
 2339              	.L178:
 2340              		.align	2
 2341              	.L177:
 2342 00b0 00000000 		.word	numSteps
 2343 00b4 00000000 		.word	instructionList
 2344 00b8 00000000 		.word	instructionIndex
 2345 00bc 00000000 		.word	currentInstruction
 2346 00c0 00000000 		.word	currentDirection
 2347 00c4 00000000 		.word	previousDirection
 2348              		.cfi_endproc
 2349              	.LFE79:
 2350              		.size	SetRobotMovement, .-SetRobotMovement
 2351              		.text
 2352              	.Letext0:
 2353              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2354              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2355              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2356              		.file 5 "vars.h"
 2357              		.file 6 "pathfinding.h"
 2358              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2359              		.file 8 "map.h"
 2360              		.section	.debug_info,"",%progbits
 2361              	.Ldebug_info0:
 2362 0000 73090000 		.4byte	0x973
 2363 0004 0400     		.2byte	0x4
 2364 0006 00000000 		.4byte	.Ldebug_abbrev0
 2365 000a 04       		.byte	0x4
 2366 000b 01       		.uleb128 0x1
 2367 000c 92000000 		.4byte	.LASF144
 2368 0010 0C       		.byte	0xc
 2369 0011 30000000 		.4byte	.LASF145
 2370 0015 5C030000 		.4byte	.LASF146
 2371 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2372 001d 00000000 		.4byte	0
 2373 0021 00000000 		.4byte	.Ldebug_line0
 2374 0025 02       		.uleb128 0x2
 2375 0026 01       		.byte	0x1
 2376 0027 06       		.byte	0x6
 2377 0028 56070000 		.4byte	.LASF0
 2378 002c 02       		.uleb128 0x2
 2379 002d 01       		.byte	0x1
 2380 002e 08       		.byte	0x8
 2381 002f AC060000 		.4byte	.LASF1
 2382 0033 02       		.uleb128 0x2
 2383 0034 02       		.byte	0x2
 2384 0035 05       		.byte	0x5
 2385 0036 83050000 		.4byte	.LASF2
 2386 003a 02       		.uleb128 0x2
 2387 003b 02       		.byte	0x2
 2388 003c 07       		.byte	0x7
 2389 003d 6D070000 		.4byte	.LASF3
 2390 0041 03       		.uleb128 0x3
 2391 0042 65000000 		.4byte	.LASF12
 2392 0046 02       		.byte	0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 59


 2393 0047 3F       		.byte	0x3f
 2394 0048 4C000000 		.4byte	0x4c
 2395 004c 02       		.uleb128 0x2
 2396 004d 04       		.byte	0x4
 2397 004e 05       		.byte	0x5
 2398 004f 99050000 		.4byte	.LASF4
 2399 0053 02       		.uleb128 0x2
 2400 0054 04       		.byte	0x4
 2401 0055 07       		.byte	0x7
 2402 0056 56060000 		.4byte	.LASF5
 2403 005a 02       		.uleb128 0x2
 2404 005b 08       		.byte	0x8
 2405 005c 05       		.byte	0x5
 2406 005d 3D040000 		.4byte	.LASF6
 2407 0061 02       		.uleb128 0x2
 2408 0062 08       		.byte	0x8
 2409 0063 07       		.byte	0x7
 2410 0064 8B020000 		.4byte	.LASF7
 2411 0068 04       		.uleb128 0x4
 2412 0069 04       		.byte	0x4
 2413 006a 05       		.byte	0x5
 2414 006b 696E7400 		.ascii	"int\000"
 2415 006f 02       		.uleb128 0x2
 2416 0070 04       		.byte	0x4
 2417 0071 07       		.byte	0x7
 2418 0072 58000000 		.4byte	.LASF8
 2419 0076 02       		.uleb128 0x2
 2420 0077 08       		.byte	0x8
 2421 0078 04       		.byte	0x4
 2422 0079 47050000 		.4byte	.LASF9
 2423 007d 02       		.uleb128 0x2
 2424 007e 04       		.byte	0x4
 2425 007f 07       		.byte	0x7
 2426 0080 4D060000 		.4byte	.LASF10
 2427 0084 02       		.uleb128 0x2
 2428 0085 01       		.byte	0x1
 2429 0086 08       		.byte	0x8
 2430 0087 57030000 		.4byte	.LASF11
 2431 008b 03       		.uleb128 0x3
 2432 008c 85060000 		.4byte	.LASF13
 2433 0090 03       		.byte	0x3
 2434 0091 2C       		.byte	0x2c
 2435 0092 41000000 		.4byte	0x41
 2436 0096 05       		.uleb128 0x5
 2437 0097 C3070000 		.4byte	.LASF14
 2438 009b 04       		.byte	0x4
 2439 009c E701     		.2byte	0x1e7
 2440 009e 2C000000 		.4byte	0x2c
 2441 00a2 05       		.uleb128 0x5
 2442 00a3 D7030000 		.4byte	.LASF15
 2443 00a7 04       		.byte	0x4
 2444 00a8 E801     		.2byte	0x1e8
 2445 00aa 3A000000 		.4byte	0x3a
 2446 00ae 05       		.uleb128 0x5
 2447 00af EF040000 		.4byte	.LASF16
 2448 00b3 04       		.byte	0x4
 2449 00b4 E901     		.2byte	0x1e9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 60


 2450 00b6 53000000 		.4byte	0x53
 2451 00ba 05       		.uleb128 0x5
 2452 00bb DE030000 		.4byte	.LASF17
 2453 00bf 04       		.byte	0x4
 2454 00c0 EA01     		.2byte	0x1ea
 2455 00c2 25000000 		.4byte	0x25
 2456 00c6 05       		.uleb128 0x5
 2457 00c7 6F000000 		.4byte	.LASF18
 2458 00cb 04       		.byte	0x4
 2459 00cc EB01     		.2byte	0x1eb
 2460 00ce 33000000 		.4byte	0x33
 2461 00d2 02       		.uleb128 0x2
 2462 00d3 04       		.byte	0x4
 2463 00d4 04       		.byte	0x4
 2464 00d5 53020000 		.4byte	.LASF19
 2465 00d9 02       		.uleb128 0x2
 2466 00da 08       		.byte	0x8
 2467 00db 04       		.byte	0x4
 2468 00dc C9070000 		.4byte	.LASF20
 2469 00e0 06       		.uleb128 0x6
 2470 00e1 96000000 		.4byte	0x96
 2471 00e5 F0000000 		.4byte	0xf0
 2472 00e9 07       		.uleb128 0x7
 2473 00ea 7D000000 		.4byte	0x7d
 2474 00ee 03       		.byte	0x3
 2475 00ef 00       		.byte	0
 2476 00f0 08       		.uleb128 0x8
 2477 00f1 11050000 		.4byte	.LASF50
 2478 00f5 20       		.byte	0x20
 2479 00f6 05       		.byte	0x5
 2480 00f7 28       		.byte	0x28
 2481 00f8 C9010000 		.4byte	0x1c9
 2482 00fc 09       		.uleb128 0x9
 2483 00fd 1B050000 		.4byte	.LASF21
 2484 0101 05       		.byte	0x5
 2485 0102 2A       		.byte	0x2a
 2486 0103 BA000000 		.4byte	0xba
 2487 0107 00       		.byte	0
 2488 0108 09       		.uleb128 0x9
 2489 0109 85020000 		.4byte	.LASF22
 2490 010d 05       		.byte	0x5
 2491 010e 2B       		.byte	0x2b
 2492 010f 96000000 		.4byte	0x96
 2493 0113 01       		.byte	0x1
 2494 0114 09       		.uleb128 0x9
 2495 0115 8D060000 		.4byte	.LASF23
 2496 0119 05       		.byte	0x5
 2497 011a 2C       		.byte	0x2c
 2498 011b C6000000 		.4byte	0xc6
 2499 011f 02       		.byte	0x2
 2500 0120 09       		.uleb128 0x9
 2501 0121 41030000 		.4byte	.LASF24
 2502 0125 05       		.byte	0x5
 2503 0126 2D       		.byte	0x2d
 2504 0127 C6000000 		.4byte	0xc6
 2505 012b 04       		.byte	0x4
 2506 012c 09       		.uleb128 0x9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 61


 2507 012d 80070000 		.4byte	.LASF25
 2508 0131 05       		.byte	0x5
 2509 0132 2E       		.byte	0x2e
 2510 0133 C6000000 		.4byte	0xc6
 2511 0137 06       		.byte	0x6
 2512 0138 09       		.uleb128 0x9
 2513 0139 EA070000 		.4byte	.LASF26
 2514 013d 05       		.byte	0x5
 2515 013e 2F       		.byte	0x2f
 2516 013f C6000000 		.4byte	0xc6
 2517 0143 08       		.byte	0x8
 2518 0144 09       		.uleb128 0x9
 2519 0145 AD040000 		.4byte	.LASF27
 2520 0149 05       		.byte	0x5
 2521 014a 30       		.byte	0x30
 2522 014b C6000000 		.4byte	0xc6
 2523 014f 0A       		.byte	0xa
 2524 0150 09       		.uleb128 0x9
 2525 0151 AD030000 		.4byte	.LASF28
 2526 0155 05       		.byte	0x5
 2527 0156 31       		.byte	0x31
 2528 0157 C6000000 		.4byte	0xc6
 2529 015b 0C       		.byte	0xc
 2530 015c 09       		.uleb128 0x9
 2531 015d 20050000 		.4byte	.LASF29
 2532 0161 05       		.byte	0x5
 2533 0162 32       		.byte	0x32
 2534 0163 C6000000 		.4byte	0xc6
 2535 0167 0E       		.byte	0xe
 2536 0168 09       		.uleb128 0x9
 2537 0169 4B040000 		.4byte	.LASF30
 2538 016d 05       		.byte	0x5
 2539 016e 33       		.byte	0x33
 2540 016f C6000000 		.4byte	0xc6
 2541 0173 10       		.byte	0x10
 2542 0174 09       		.uleb128 0x9
 2543 0175 0D060000 		.4byte	.LASF31
 2544 0179 05       		.byte	0x5
 2545 017a 34       		.byte	0x34
 2546 017b C6000000 		.4byte	0xc6
 2547 017f 12       		.byte	0x12
 2548 0180 09       		.uleb128 0x9
 2549 0181 0A080000 		.4byte	.LASF32
 2550 0185 05       		.byte	0x5
 2551 0186 35       		.byte	0x35
 2552 0187 C6000000 		.4byte	0xc6
 2553 018b 14       		.byte	0x14
 2554 018c 09       		.uleb128 0x9
 2555 018d EE030000 		.4byte	.LASF33
 2556 0191 05       		.byte	0x5
 2557 0192 36       		.byte	0x36
 2558 0193 C6000000 		.4byte	0xc6
 2559 0197 16       		.byte	0x16
 2560 0198 09       		.uleb128 0x9
 2561 0199 76010000 		.4byte	.LASF34
 2562 019d 05       		.byte	0x5
 2563 019e 37       		.byte	0x37
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 62


 2564 019f C6000000 		.4byte	0xc6
 2565 01a3 18       		.byte	0x18
 2566 01a4 09       		.uleb128 0x9
 2567 01a5 D3050000 		.4byte	.LASF35
 2568 01a9 05       		.byte	0x5
 2569 01aa 38       		.byte	0x38
 2570 01ab C6000000 		.4byte	0xc6
 2571 01af 1A       		.byte	0x1a
 2572 01b0 09       		.uleb128 0x9
 2573 01b1 A4040000 		.4byte	.LASF36
 2574 01b5 05       		.byte	0x5
 2575 01b6 39       		.byte	0x39
 2576 01b7 C6000000 		.4byte	0xc6
 2577 01bb 1C       		.byte	0x1c
 2578 01bc 09       		.uleb128 0x9
 2579 01bd 2E020000 		.4byte	.LASF37
 2580 01c1 05       		.byte	0x5
 2581 01c2 3A       		.byte	0x3a
 2582 01c3 C6000000 		.4byte	0xc6
 2583 01c7 1E       		.byte	0x1e
 2584 01c8 00       		.byte	0
 2585 01c9 0A       		.uleb128 0xa
 2586 01ca F1050000 		.4byte	.LASF41
 2587 01ce 01       		.byte	0x1
 2588 01cf 2C000000 		.4byte	0x2c
 2589 01d3 06       		.byte	0x6
 2590 01d4 0D       		.byte	0xd
 2591 01d5 F1010000 		.4byte	0x1f1
 2592 01d9 0B       		.uleb128 0xb
 2593 01da 557000   		.ascii	"Up\000"
 2594 01dd 00       		.byte	0
 2595 01de 0C       		.uleb128 0xc
 2596 01df 02060000 		.4byte	.LASF38
 2597 01e3 01       		.byte	0x1
 2598 01e4 0C       		.uleb128 0xc
 2599 01e5 E2020000 		.4byte	.LASF39
 2600 01e9 02       		.byte	0x2
 2601 01ea 0C       		.uleb128 0xc
 2602 01eb 07060000 		.4byte	.LASF40
 2603 01ef 03       		.byte	0x3
 2604 01f0 00       		.byte	0
 2605 01f1 0A       		.uleb128 0xa
 2606 01f2 1B000000 		.4byte	.LASF42
 2607 01f6 01       		.byte	0x1
 2608 01f7 2C000000 		.4byte	0x2c
 2609 01fb 06       		.byte	0x6
 2610 01fc 0E       		.byte	0xe
 2611 01fd 2C020000 		.4byte	0x22c
 2612 0201 0C       		.uleb128 0xc
 2613 0202 40070000 		.4byte	.LASF43
 2614 0206 00       		.byte	0
 2615 0207 0C       		.uleb128 0xc
 2616 0208 2D040000 		.4byte	.LASF44
 2617 020c 01       		.byte	0x1
 2618 020d 0C       		.uleb128 0xc
 2619 020e F6040000 		.4byte	.LASF45
 2620 0212 02       		.byte	0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 63


 2621 0213 0C       		.uleb128 0xc
 2622 0214 76040000 		.4byte	.LASF46
 2623 0218 03       		.byte	0x3
 2624 0219 0C       		.uleb128 0xc
 2625 021a 20010000 		.4byte	.LASF47
 2626 021e 04       		.byte	0x4
 2627 021f 0C       		.uleb128 0xc
 2628 0220 28030000 		.4byte	.LASF48
 2629 0224 05       		.byte	0x5
 2630 0225 0C       		.uleb128 0xc
 2631 0226 2D070000 		.4byte	.LASF49
 2632 022a 06       		.byte	0x6
 2633 022b 00       		.byte	0
 2634 022c 08       		.uleb128 0x8
 2635 022d A2020000 		.4byte	.LASF51
 2636 0231 10       		.byte	0x10
 2637 0232 06       		.byte	0x6
 2638 0233 10       		.byte	0x10
 2639 0234 69020000 		.4byte	0x269
 2640 0238 09       		.uleb128 0x9
 2641 0239 00000000 		.4byte	.LASF52
 2642 023d 06       		.byte	0x6
 2643 023e 11       		.byte	0x11
 2644 023f F1010000 		.4byte	0x1f1
 2645 0243 00       		.byte	0
 2646 0244 09       		.uleb128 0x9
 2647 0245 13080000 		.4byte	.LASF53
 2648 0249 06       		.byte	0x6
 2649 024a 12       		.byte	0x12
 2650 024b 68000000 		.4byte	0x68
 2651 024f 04       		.byte	0x4
 2652 0250 09       		.uleb128 0x9
 2653 0251 1B080000 		.4byte	.LASF54
 2654 0255 06       		.byte	0x6
 2655 0256 13       		.byte	0x13
 2656 0257 68000000 		.4byte	0x68
 2657 025b 08       		.byte	0x8
 2658 025c 09       		.uleb128 0x9
 2659 025d 33010000 		.4byte	.LASF55
 2660 0261 06       		.byte	0x6
 2661 0262 14       		.byte	0x14
 2662 0263 C9010000 		.4byte	0x1c9
 2663 0267 0C       		.byte	0xc
 2664 0268 00       		.byte	0
 2665 0269 03       		.uleb128 0x3
 2666 026a A2020000 		.4byte	.LASF51
 2667 026e 06       		.byte	0x6
 2668 026f 15       		.byte	0x15
 2669 0270 2C020000 		.4byte	0x22c
 2670 0274 0A       		.uleb128 0xa
 2671 0275 9E060000 		.4byte	.LASF56
 2672 0279 01       		.byte	0x1
 2673 027a 2C000000 		.4byte	0x2c
 2674 027e 01       		.byte	0x1
 2675 027f 18       		.byte	0x18
 2676 0280 C7020000 		.4byte	0x2c7
 2677 0284 0C       		.uleb128 0xc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 64


 2678 0285 B9050000 		.4byte	.LASF57
 2679 0289 00       		.byte	0
 2680 028a 0C       		.uleb128 0xc
 2681 028b 07050000 		.4byte	.LASF58
 2682 028f 01       		.byte	0x1
 2683 0290 0C       		.uleb128 0xc
 2684 0291 BF040000 		.4byte	.LASF59
 2685 0295 02       		.byte	0x2
 2686 0296 0C       		.uleb128 0xc
 2687 0297 AA070000 		.4byte	.LASF60
 2688 029b 03       		.byte	0x3
 2689 029c 0C       		.uleb128 0xc
 2690 029d EA060000 		.4byte	.LASF61
 2691 02a1 04       		.byte	0x4
 2692 02a2 0C       		.uleb128 0xc
 2693 02a3 FB060000 		.4byte	.LASF62
 2694 02a7 05       		.byte	0x5
 2695 02a8 0C       		.uleb128 0xc
 2696 02a9 E7040000 		.4byte	.LASF63
 2697 02ad 06       		.byte	0x6
 2698 02ae 0C       		.uleb128 0xc
 2699 02af 35030000 		.4byte	.LASF64
 2700 02b3 07       		.byte	0x7
 2701 02b4 0C       		.uleb128 0xc
 2702 02b5 0A000000 		.4byte	.LASF65
 2703 02b9 08       		.byte	0x8
 2704 02ba 0C       		.uleb128 0xc
 2705 02bb BA070000 		.4byte	.LASF66
 2706 02bf 09       		.byte	0x9
 2707 02c0 0C       		.uleb128 0xc
 2708 02c1 3F050000 		.4byte	.LASF67
 2709 02c5 0A       		.byte	0xa
 2710 02c6 00       		.byte	0
 2711 02c7 0D       		.uleb128 0xd
 2712 02c8 07040000 		.4byte	.LASF77
 2713 02cc 01       		.byte	0x1
 2714 02cd 40       		.byte	0x40
 2715 02ce 00000000 		.4byte	.LFB64
 2716 02d2 EC000000 		.4byte	.LFE64-.LFB64
 2717 02d6 01       		.uleb128 0x1
 2718 02d7 9C       		.byte	0x9c
 2719 02d8 F5020000 		.4byte	0x2f5
 2720 02dc 0E       		.uleb128 0xe
 2721 02dd 50000000 		.4byte	.LBB2
 2722 02e1 62000000 		.4byte	.LBE2-.LBB2
 2723 02e5 0F       		.uleb128 0xf
 2724 02e6 98040000 		.4byte	.LASF74
 2725 02ea 01       		.byte	0x1
 2726 02eb 4D       		.byte	0x4d
 2727 02ec D2000000 		.4byte	0xd2
 2728 02f0 02       		.uleb128 0x2
 2729 02f1 91       		.byte	0x91
 2730 02f2 6C       		.sleb128 -20
 2731 02f3 00       		.byte	0
 2732 02f4 00       		.byte	0
 2733 02f5 10       		.uleb128 0x10
 2734 02f6 FB030000 		.4byte	.LASF68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 65


 2735 02fa 01       		.byte	0x1
 2736 02fb 58       		.byte	0x58
 2737 02fc 00000000 		.4byte	.LFB65
 2738 0300 18000000 		.4byte	.LFE65-.LFB65
 2739 0304 01       		.uleb128 0x1
 2740 0305 9C       		.byte	0x9c
 2741 0306 10       		.uleb128 0x10
 2742 0307 8D050000 		.4byte	.LASF69
 2743 030b 01       		.byte	0x1
 2744 030c 5E       		.byte	0x5e
 2745 030d 00000000 		.4byte	.LFB66
 2746 0311 18000000 		.4byte	.LFE66-.LFB66
 2747 0315 01       		.uleb128 0x1
 2748 0316 9C       		.byte	0x9c
 2749 0317 10       		.uleb128 0x10
 2750 0318 4A070000 		.4byte	.LASF70
 2751 031c 01       		.byte	0x1
 2752 031d 64       		.byte	0x64
 2753 031e 00000000 		.4byte	.LFB67
 2754 0322 18000000 		.4byte	.LFE67-.LFB67
 2755 0326 01       		.uleb128 0x1
 2756 0327 9C       		.byte	0x9c
 2757 0328 10       		.uleb128 0x10
 2758 0329 5C010000 		.4byte	.LASF71
 2759 032d 01       		.byte	0x1
 2760 032e 6A       		.byte	0x6a
 2761 032f 00000000 		.4byte	.LFB68
 2762 0333 18000000 		.4byte	.LFE68-.LFB68
 2763 0337 01       		.uleb128 0x1
 2764 0338 9C       		.byte	0x9c
 2765 0339 11       		.uleb128 0x11
 2766 033a CB020000 		.4byte	.LASF72
 2767 033e 01       		.byte	0x1
 2768 033f 70       		.byte	0x70
 2769 0340 00000000 		.4byte	.LFB69
 2770 0344 38000000 		.4byte	.LFE69-.LFB69
 2771 0348 01       		.uleb128 0x1
 2772 0349 9C       		.byte	0x9c
 2773 034a 12       		.uleb128 0x12
 2774 034b 92070000 		.4byte	.LASF73
 2775 034f 01       		.byte	0x1
 2776 0350 7C       		.byte	0x7c
 2777 0351 68000000 		.4byte	0x68
 2778 0355 00000000 		.4byte	.LFB70
 2779 0359 C0000000 		.4byte	.LFE70-.LFB70
 2780 035d 01       		.uleb128 0x1
 2781 035e 9C       		.byte	0x9c
 2782 035f 13       		.uleb128 0x13
 2783 0360 02030000 		.4byte	.LASF81
 2784 0364 01       		.byte	0x1
 2785 0365 AA       		.byte	0xaa
 2786 0366 C6000000 		.4byte	0xc6
 2787 036a 00000000 		.4byte	.LFB71
 2788 036e 54000000 		.4byte	.LFE71-.LFB71
 2789 0372 01       		.uleb128 0x1
 2790 0373 9C       		.byte	0x9c
 2791 0374 A3030000 		.4byte	0x3a3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 66


 2792 0378 14       		.uleb128 0x14
 2793 0379 7F020000 		.4byte	.LASF83
 2794 037d 01       		.byte	0x1
 2795 037e AA       		.byte	0xaa
 2796 037f A2000000 		.4byte	0xa2
 2797 0383 02       		.uleb128 0x2
 2798 0384 91       		.byte	0x91
 2799 0385 66       		.sleb128 -26
 2800 0386 15       		.uleb128 0x15
 2801 0387 63707300 		.ascii	"cps\000"
 2802 038b 01       		.byte	0x1
 2803 038c AC       		.byte	0xac
 2804 038d D2000000 		.4byte	0xd2
 2805 0391 02       		.uleb128 0x2
 2806 0392 91       		.byte	0x91
 2807 0393 6C       		.sleb128 -20
 2808 0394 15       		.uleb128 0x15
 2809 0395 72706D00 		.ascii	"rpm\000"
 2810 0399 01       		.byte	0x1
 2811 039a AD       		.byte	0xad
 2812 039b C6000000 		.4byte	0xc6
 2813 039f 02       		.uleb128 0x2
 2814 03a0 91       		.byte	0x91
 2815 03a1 6A       		.sleb128 -22
 2816 03a2 00       		.byte	0
 2817 03a3 16       		.uleb128 0x16
 2818 03a4 1D020000 		.4byte	.LASF89
 2819 03a8 01       		.byte	0x1
 2820 03a9 B5       		.byte	0xb5
 2821 03aa 00000000 		.4byte	.LFB72
 2822 03ae 34000000 		.4byte	.LFE72-.LFB72
 2823 03b2 01       		.uleb128 0x1
 2824 03b3 9C       		.byte	0x9c
 2825 03b4 17       		.uleb128 0x17
 2826 03b5 ED010000 		.4byte	.LASF75
 2827 03b9 01       		.byte	0x1
 2828 03ba AD01     		.2byte	0x1ad
 2829 03bc 74020000 		.4byte	0x274
 2830 03c0 00000000 		.4byte	.LFB73
 2831 03c4 84000000 		.4byte	.LFE73-.LFB73
 2832 03c8 01       		.uleb128 0x1
 2833 03c9 9C       		.byte	0x9c
 2834 03ca 17       		.uleb128 0x17
 2835 03cb 47010000 		.4byte	.LASF76
 2836 03cf 01       		.byte	0x1
 2837 03d0 D301     		.2byte	0x1d3
 2838 03d2 74020000 		.4byte	0x274
 2839 03d6 00000000 		.4byte	.LFB74
 2840 03da 94000000 		.4byte	.LFE74-.LFB74
 2841 03de 01       		.uleb128 0x1
 2842 03df 9C       		.byte	0x9c
 2843 03e0 18       		.uleb128 0x18
 2844 03e1 AF010000 		.4byte	.LASF78
 2845 03e5 01       		.byte	0x1
 2846 03e6 F601     		.2byte	0x1f6
 2847 03e8 74020000 		.4byte	0x274
 2848 03ec 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 67


 2849 03f0 50030000 		.4byte	.LFE75-.LFB75
 2850 03f4 01       		.uleb128 0x1
 2851 03f5 9C       		.byte	0x9c
 2852 03f6 19040000 		.4byte	0x419
 2853 03fa 19       		.uleb128 0x19
 2854 03fb 47000000 		.4byte	.LASF79
 2855 03ff 01       		.byte	0x1
 2856 0400 F701     		.2byte	0x1f7
 2857 0402 D2000000 		.4byte	0xd2
 2858 0406 02       		.uleb128 0x2
 2859 0407 91       		.byte	0x91
 2860 0408 74       		.sleb128 -12
 2861 0409 19       		.uleb128 0x19
 2862 040a 59020000 		.4byte	.LASF80
 2863 040e 01       		.byte	0x1
 2864 040f 0602     		.2byte	0x206
 2865 0411 F1010000 		.4byte	0x1f1
 2866 0415 02       		.uleb128 0x2
 2867 0416 91       		.byte	0x91
 2868 0417 73       		.sleb128 -13
 2869 0418 00       		.byte	0
 2870 0419 1A       		.uleb128 0x1a
 2871 041a D0060000 		.4byte	.LASF82
 2872 041e 01       		.byte	0x1
 2873 041f E002     		.2byte	0x2e0
 2874 0421 D2000000 		.4byte	0xd2
 2875 0425 00000000 		.4byte	.LFB76
 2876 0429 8C020000 		.4byte	.LFE76-.LFB76
 2877 042d 01       		.uleb128 0x1
 2878 042e 9C       		.byte	0x9c
 2879 042f D7040000 		.4byte	0x4d7
 2880 0433 1B       		.uleb128 0x1b
 2881 0434 11030000 		.4byte	.LASF84
 2882 0438 01       		.byte	0x1
 2883 0439 E002     		.2byte	0x2e0
 2884 043b D2000000 		.4byte	0xd2
 2885 043f 02       		.uleb128 0x2
 2886 0440 91       		.byte	0x91
 2887 0441 54       		.sleb128 -44
 2888 0442 19       		.uleb128 0x19
 2889 0443 DB070000 		.4byte	.LASF85
 2890 0447 01       		.byte	0x1
 2891 0448 E102     		.2byte	0x2e1
 2892 044a D2000000 		.4byte	0xd2
 2893 044e 02       		.uleb128 0x2
 2894 044f 91       		.byte	0x91
 2895 0450 58       		.sleb128 -40
 2896 0451 19       		.uleb128 0x19
 2897 0452 A5010000 		.4byte	.LASF86
 2898 0456 01       		.byte	0x1
 2899 0457 E402     		.2byte	0x2e4
 2900 0459 68000000 		.4byte	0x68
 2901 045d 02       		.uleb128 0x2
 2902 045e 91       		.byte	0x91
 2903 045f 60       		.sleb128 -32
 2904 0460 19       		.uleb128 0x19
 2905 0461 3B020000 		.4byte	.LASF87
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 68


 2906 0465 01       		.byte	0x1
 2907 0466 E502     		.2byte	0x2e5
 2908 0468 68000000 		.4byte	0x68
 2909 046c 02       		.uleb128 0x2
 2910 046d 91       		.byte	0x91
 2911 046e 5C       		.sleb128 -36
 2912 046f 19       		.uleb128 0x19
 2913 0470 12040000 		.4byte	.LASF88
 2914 0474 01       		.byte	0x1
 2915 0475 E702     		.2byte	0x2e7
 2916 0477 68000000 		.4byte	0x68
 2917 047b 02       		.uleb128 0x2
 2918 047c 91       		.byte	0x91
 2919 047d 74       		.sleb128 -12
 2920 047e 1C       		.uleb128 0x1c
 2921 047f 00000000 		.4byte	.Ldebug_ranges0+0
 2922 0483 95040000 		.4byte	0x495
 2923 0487 1D       		.uleb128 0x1d
 2924 0488 6900     		.ascii	"i\000"
 2925 048a 01       		.byte	0x1
 2926 048b F102     		.2byte	0x2f1
 2927 048d 68000000 		.4byte	0x68
 2928 0491 02       		.uleb128 0x2
 2929 0492 91       		.byte	0x91
 2930 0493 70       		.sleb128 -16
 2931 0494 00       		.byte	0
 2932 0495 1C       		.uleb128 0x1c
 2933 0496 18000000 		.4byte	.Ldebug_ranges0+0x18
 2934 049a AC040000 		.4byte	0x4ac
 2935 049e 1D       		.uleb128 0x1d
 2936 049f 6900     		.ascii	"i\000"
 2937 04a1 01       		.byte	0x1
 2938 04a2 0003     		.2byte	0x300
 2939 04a4 68000000 		.4byte	0x68
 2940 04a8 02       		.uleb128 0x2
 2941 04a9 91       		.byte	0x91
 2942 04aa 6C       		.sleb128 -20
 2943 04ab 00       		.byte	0
 2944 04ac 1C       		.uleb128 0x1c
 2945 04ad 30000000 		.4byte	.Ldebug_ranges0+0x30
 2946 04b1 C3040000 		.4byte	0x4c3
 2947 04b5 1D       		.uleb128 0x1d
 2948 04b6 6900     		.ascii	"i\000"
 2949 04b8 01       		.byte	0x1
 2950 04b9 0F03     		.2byte	0x30f
 2951 04bb 68000000 		.4byte	0x68
 2952 04bf 02       		.uleb128 0x2
 2953 04c0 91       		.byte	0x91
 2954 04c1 68       		.sleb128 -24
 2955 04c2 00       		.byte	0
 2956 04c3 1E       		.uleb128 0x1e
 2957 04c4 48000000 		.4byte	.Ldebug_ranges0+0x48
 2958 04c8 1D       		.uleb128 0x1d
 2959 04c9 6900     		.ascii	"i\000"
 2960 04cb 01       		.byte	0x1
 2961 04cc 1F03     		.2byte	0x31f
 2962 04ce 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 69


 2963 04d2 02       		.uleb128 0x2
 2964 04d3 91       		.byte	0x91
 2965 04d4 64       		.sleb128 -28
 2966 04d5 00       		.byte	0
 2967 04d6 00       		.byte	0
 2968 04d7 1F       		.uleb128 0x1f
 2969 04d8 DB050000 		.4byte	.LASF90
 2970 04dc 01       		.byte	0x1
 2971 04dd 3303     		.2byte	0x333
 2972 04df 00000000 		.4byte	.LFB77
 2973 04e3 1C000000 		.4byte	.LFE77-.LFB77
 2974 04e7 01       		.uleb128 0x1
 2975 04e8 9C       		.byte	0x9c
 2976 04e9 20       		.uleb128 0x20
 2977 04ea 00070000 		.4byte	.LASF91
 2978 04ee 01       		.byte	0x1
 2979 04ef 3803     		.2byte	0x338
 2980 04f1 69020000 		.4byte	0x269
 2981 04f5 00000000 		.4byte	.LFB78
 2982 04f9 8E000000 		.4byte	.LFE78-.LFB78
 2983 04fd 01       		.uleb128 0x1
 2984 04fe 9C       		.byte	0x9c
 2985 04ff 57050000 		.4byte	0x557
 2986 0503 1B       		.uleb128 0x1b
 2987 0504 9C010000 		.4byte	.LASF92
 2988 0508 01       		.byte	0x1
 2989 0509 3803     		.2byte	0x338
 2990 050b 68000000 		.4byte	0x68
 2991 050f 02       		.uleb128 0x2
 2992 0510 91       		.byte	0x91
 2993 0511 58       		.sleb128 -40
 2994 0512 1B       		.uleb128 0x1b
 2995 0513 B6030000 		.4byte	.LASF93
 2996 0517 01       		.byte	0x1
 2997 0518 3803     		.2byte	0x338
 2998 051a 57050000 		.4byte	0x557
 2999 051e 02       		.uleb128 0x2
 3000 051f 91       		.byte	0x91
 3001 0520 54       		.sleb128 -44
 3002 0521 1B       		.uleb128 0x1b
 3003 0522 C6030000 		.4byte	.LASF94
 3004 0526 01       		.byte	0x1
 3005 0527 3803     		.2byte	0x338
 3006 0529 68000000 		.4byte	0x68
 3007 052d 02       		.uleb128 0x2
 3008 052e 91       		.byte	0x91
 3009 052f 50       		.sleb128 -48
 3010 0530 19       		.uleb128 0x19
 3011 0531 82000000 		.4byte	.LASF95
 3012 0535 01       		.byte	0x1
 3013 0536 3903     		.2byte	0x339
 3014 0538 69020000 		.4byte	0x269
 3015 053c 02       		.uleb128 0x2
 3016 053d 91       		.byte	0x91
 3017 053e 64       		.sleb128 -28
 3018 053f 0E       		.uleb128 0xe
 3019 0540 0E000000 		.4byte	.LBB11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 70


 3020 0544 68000000 		.4byte	.LBE11-.LBB11
 3021 0548 1D       		.uleb128 0x1d
 3022 0549 6900     		.ascii	"i\000"
 3023 054b 01       		.byte	0x1
 3024 054c 3B03     		.2byte	0x33b
 3025 054e 68000000 		.4byte	0x68
 3026 0552 02       		.uleb128 0x2
 3027 0553 91       		.byte	0x91
 3028 0554 74       		.sleb128 -12
 3029 0555 00       		.byte	0
 3030 0556 00       		.byte	0
 3031 0557 21       		.uleb128 0x21
 3032 0558 04       		.byte	0x4
 3033 0559 69020000 		.4byte	0x269
 3034 055d 22       		.uleb128 0x22
 3035 055e BA020000 		.4byte	.LASF96
 3036 0562 01       		.byte	0x1
 3037 0563 4903     		.2byte	0x349
 3038 0565 00000000 		.4byte	.LFB79
 3039 0569 C8000000 		.4byte	.LFE79-.LFB79
 3040 056d 01       		.uleb128 0x1
 3041 056e 9C       		.byte	0x9c
 3042 056f 23       		.uleb128 0x23
 3043 0570 A2050000 		.4byte	.LASF97
 3044 0574 07       		.byte	0x7
 3045 0575 1207     		.2byte	0x712
 3046 0577 7B050000 		.4byte	0x57b
 3047 057b 24       		.uleb128 0x24
 3048 057c 8B000000 		.4byte	0x8b
 3049 0580 25       		.uleb128 0x25
 3050 0581 747300   		.ascii	"ts\000"
 3051 0584 05       		.byte	0x5
 3052 0585 10       		.byte	0x10
 3053 0586 96000000 		.4byte	0x96
 3054 058a 05       		.uleb128 0x5
 3055 058b 03       		.byte	0x3
 3056 058c 00000000 		.4byte	ts
 3057 0590 26       		.uleb128 0x26
 3058 0591 16070000 		.4byte	.LASF98
 3059 0595 05       		.byte	0x5
 3060 0596 11       		.byte	0x11
 3061 0597 A2000000 		.4byte	0xa2
 3062 059b 05       		.uleb128 0x5
 3063 059c 03       		.byte	0x3
 3064 059d 00000000 		.4byte	ts_enc
 3065 05a1 26       		.uleb128 0x26
 3066 05a2 AF050000 		.4byte	.LASF99
 3067 05a6 05       		.byte	0x5
 3068 05a7 12       		.byte	0x12
 3069 05a8 A2000000 		.4byte	0xa2
 3070 05ac 05       		.uleb128 0x5
 3071 05ad 03       		.byte	0x3
 3072 05ae 00000000 		.4byte	ts_update
 3073 05b2 26       		.uleb128 0x26
 3074 05b3 C8040000 		.4byte	.LASF100
 3075 05b7 05       		.byte	0x5
 3076 05b8 13       		.byte	0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 71


 3077 05b9 A2000000 		.4byte	0xa2
 3078 05bd 05       		.uleb128 0x5
 3079 05be 03       		.byte	0x3
 3080 05bf 00000000 		.4byte	ts_speed
 3081 05c3 26       		.uleb128 0x26
 3082 05c4 4C030000 		.4byte	.LASF101
 3083 05c8 05       		.byte	0x5
 3084 05c9 14       		.byte	0x14
 3085 05ca A2000000 		.4byte	0xa2
 3086 05ce 05       		.uleb128 0x5
 3087 05cf 03       		.byte	0x3
 3088 05d0 00000000 		.4byte	ts_display
 3089 05d4 26       		.uleb128 0x26
 3090 05d5 F6020000 		.4byte	.LASF102
 3091 05d9 05       		.byte	0x5
 3092 05da 16       		.byte	0x16
 3093 05db 96000000 		.4byte	0x96
 3094 05df 05       		.uleb128 0x5
 3095 05e0 03       		.byte	0x3
 3096 05e1 00000000 		.4byte	flag_ts_enc
 3097 05e5 26       		.uleb128 0x26
 3098 05e6 E7020000 		.4byte	.LASF103
 3099 05ea 05       		.byte	0x5
 3100 05eb 17       		.byte	0x17
 3101 05ec 96000000 		.4byte	0x96
 3102 05f0 05       		.uleb128 0x5
 3103 05f1 03       		.byte	0x3
 3104 05f2 00000000 		.4byte	flag_ts_update
 3105 05f6 26       		.uleb128 0x26
 3106 05f7 53050000 		.4byte	.LASF104
 3107 05fb 05       		.byte	0x5
 3108 05fc 18       		.byte	0x18
 3109 05fd 96000000 		.4byte	0x96
 3110 0601 05       		.uleb128 0x5
 3111 0602 03       		.byte	0x3
 3112 0603 00000000 		.4byte	flag_ts_speed
 3113 0607 26       		.uleb128 0x26
 3114 0608 1D070000 		.4byte	.LASF105
 3115 060c 05       		.byte	0x5
 3116 060d 19       		.byte	0x19
 3117 060e 96000000 		.4byte	0x96
 3118 0612 05       		.uleb128 0x5
 3119 0613 03       		.byte	0x3
 3120 0614 00000000 		.4byte	flag_ts_display
 3121 0618 26       		.uleb128 0x26
 3122 0619 70050000 		.4byte	.LASF106
 3123 061d 05       		.byte	0x5
 3124 061e 1B       		.byte	0x1b
 3125 061f 96000000 		.4byte	0x96
 3126 0623 05       		.uleb128 0x5
 3127 0624 03       		.byte	0x3
 3128 0625 00000000 		.4byte	flag_rx
 3129 0629 26       		.uleb128 0x26
 3130 062a AE020000 		.4byte	.LASF107
 3131 062e 05       		.byte	0x5
 3132 062f 1C       		.byte	0x1c
 3133 0630 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 72


 3134 0634 05       		.uleb128 0x5
 3135 0635 03       		.byte	0x3
 3136 0636 00000000 		.4byte	flag_packet
 3137 063a 26       		.uleb128 0x26
 3138 063b FB070000 		.4byte	.LASF108
 3139 063f 05       		.byte	0x5
 3140 0640 1D       		.byte	0x1d
 3141 0641 96000000 		.4byte	0x96
 3142 0645 05       		.uleb128 0x5
 3143 0646 03       		.byte	0x3
 3144 0647 00000000 		.4byte	flag_KB_string
 3145 064b 26       		.uleb128 0x26
 3146 064c 61050000 		.4byte	.LASF109
 3147 0650 05       		.byte	0x5
 3148 0651 1F       		.byte	0x1f
 3149 0652 96000000 		.4byte	0x96
 3150 0656 05       		.uleb128 0x5
 3151 0657 03       		.byte	0x3
 3152 0658 00000000 		.4byte	dataready_flag
 3153 065c 26       		.uleb128 0x26
 3154 065d D1010000 		.4byte	.LASF110
 3155 0661 05       		.byte	0x5
 3156 0662 21       		.byte	0x21
 3157 0663 96000000 		.4byte	0x96
 3158 0667 05       		.uleb128 0x5
 3159 0668 03       		.byte	0x3
 3160 0669 00000000 		.4byte	flag_rf_transmission_active
 3161 066d 06       		.uleb128 0x6
 3162 066e 84000000 		.4byte	0x84
 3163 0672 7D060000 		.4byte	0x67d
 3164 0676 07       		.uleb128 0x7
 3165 0677 7D000000 		.4byte	0x7d
 3166 067b 3F       		.byte	0x3f
 3167 067c 00       		.byte	0
 3168 067d 26       		.uleb128 0x26
 3169 067e 32070000 		.4byte	.LASF111
 3170 0682 05       		.byte	0x5
 3171 0683 24       		.byte	0x24
 3172 0684 6D060000 		.4byte	0x66d
 3173 0688 05       		.uleb128 0x5
 3174 0689 03       		.byte	0x3
 3175 068a 00000000 		.4byte	displaystring
 3176 068e 26       		.uleb128 0x26
 3177 068f CB060000 		.4byte	.LASF112
 3178 0693 05       		.byte	0x5
 3179 0694 25       		.byte	0x25
 3180 0695 6D060000 		.4byte	0x66d
 3181 0699 05       		.uleb128 0x5
 3182 069a 03       		.byte	0x3
 3183 069b 00000000 		.4byte	line
 3184 069f 26       		.uleb128 0x26
 3185 06a0 98060000 		.4byte	.LASF113
 3186 06a4 05       		.byte	0x5
 3187 06a5 25       		.byte	0x25
 3188 06a6 6D060000 		.4byte	0x66d
 3189 06aa 05       		.uleb128 0x5
 3190 06ab 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 73


 3191 06ac 00000000 		.4byte	entry
 3192 06b0 06       		.uleb128 0x6
 3193 06b1 96000000 		.4byte	0x96
 3194 06b5 C0060000 		.4byte	0x6c0
 3195 06b9 07       		.uleb128 0x7
 3196 06ba 7D000000 		.4byte	0x7d
 3197 06be 3F       		.byte	0x3f
 3198 06bf 00       		.byte	0
 3199 06c0 26       		.uleb128 0x26
 3200 06c1 75020000 		.4byte	.LASF114
 3201 06c5 05       		.byte	0x5
 3202 06c6 26       		.byte	0x26
 3203 06c7 B0060000 		.4byte	0x6b0
 3204 06cb 05       		.uleb128 0x5
 3205 06cc 03       		.byte	0x3
 3206 06cd 00000000 		.4byte	usbBuffer
 3207 06d1 26       		.uleb128 0x26
 3208 06d2 75000000 		.4byte	.LASF115
 3209 06d6 05       		.byte	0x5
 3210 06d7 3C       		.byte	0x3c
 3211 06d8 F0000000 		.4byte	0xf0
 3212 06dc 05       		.uleb128 0x5
 3213 06dd 03       		.byte	0x3
 3214 06de 00000000 		.4byte	system_state
 3215 06e2 06       		.uleb128 0x6
 3216 06e3 68000000 		.4byte	0x68
 3217 06e7 F8060000 		.4byte	0x6f8
 3218 06eb 07       		.uleb128 0x7
 3219 06ec 7D000000 		.4byte	0x7d
 3220 06f0 0E       		.byte	0xe
 3221 06f1 07       		.uleb128 0x7
 3222 06f2 7D000000 		.4byte	0x7d
 3223 06f6 12       		.byte	0x12
 3224 06f7 00       		.byte	0
 3225 06f8 27       		.uleb128 0x27
 3226 06f9 6D617000 		.ascii	"map\000"
 3227 06fd 08       		.byte	0x8
 3228 06fe 04       		.byte	0x4
 3229 06ff E2060000 		.4byte	0x6e2
 3230 0703 06       		.uleb128 0x6
 3231 0704 68000000 		.4byte	0x68
 3232 0708 19070000 		.4byte	0x719
 3233 070c 07       		.uleb128 0x7
 3234 070d 7D000000 		.4byte	0x7d
 3235 0711 04       		.byte	0x4
 3236 0712 07       		.uleb128 0x7
 3237 0713 7D000000 		.4byte	0x7d
 3238 0717 01       		.byte	0x1
 3239 0718 00       		.byte	0
 3240 0719 28       		.uleb128 0x28
 3241 071a B5040000 		.4byte	.LASF116
 3242 071e 08       		.byte	0x8
 3243 071f 05       		.byte	0x5
 3244 0720 03070000 		.4byte	0x703
 3245 0724 26       		.uleb128 0x26
 3246 0725 15060000 		.4byte	.LASF117
 3247 0729 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 74


 3248 072a 19       		.byte	0x19
 3249 072b 74020000 		.4byte	0x274
 3250 072f 05       		.uleb128 0x5
 3251 0730 03       		.byte	0x3
 3252 0731 00000000 		.4byte	currentDirection
 3253 0735 26       		.uleb128 0x26
 3254 0736 2D050000 		.4byte	.LASF118
 3255 073a 01       		.byte	0x1
 3256 073b 19       		.byte	0x19
 3257 073c 74020000 		.4byte	0x274
 3258 0740 05       		.uleb128 0x5
 3259 0741 03       		.byte	0x3
 3260 0742 00000000 		.4byte	previousDirection
 3261 0746 26       		.uleb128 0x26
 3262 0747 05020000 		.4byte	.LASF119
 3263 074b 01       		.byte	0x1
 3264 074c 1B       		.byte	0x1b
 3265 074d C9010000 		.4byte	0x1c9
 3266 0751 05       		.uleb128 0x5
 3267 0752 03       		.byte	0x3
 3268 0753 00000000 		.4byte	currentRobotOrientation
 3269 0757 26       		.uleb128 0x26
 3270 0758 62040000 		.4byte	.LASF120
 3271 075c 01       		.byte	0x1
 3272 075d 1B       		.byte	0x1b
 3273 075e C9010000 		.4byte	0x1c9
 3274 0762 05       		.uleb128 0x5
 3275 0763 03       		.byte	0x3
 3276 0764 00000000 		.4byte	previousOrientation
 3277 0768 26       		.uleb128 0x26
 3278 0769 97070000 		.4byte	.LASF121
 3279 076d 01       		.byte	0x1
 3280 076e 1C       		.byte	0x1c
 3281 076f 69020000 		.4byte	0x269
 3282 0773 05       		.uleb128 0x5
 3283 0774 03       		.byte	0x3
 3284 0775 00000000 		.4byte	currentInstruction
 3285 0779 26       		.uleb128 0x26
 3286 077a 9C010000 		.4byte	.LASF92
 3287 077e 01       		.byte	0x1
 3288 077f 1D       		.byte	0x1d
 3289 0780 68000000 		.4byte	0x68
 3290 0784 05       		.uleb128 0x5
 3291 0785 03       		.byte	0x3
 3292 0786 00000000 		.4byte	numSteps
 3293 078a 26       		.uleb128 0x26
 3294 078b B6030000 		.4byte	.LASF93
 3295 078f 01       		.byte	0x1
 3296 0790 1F       		.byte	0x1f
 3297 0791 57050000 		.4byte	0x557
 3298 0795 05       		.uleb128 0x5
 3299 0796 03       		.byte	0x3
 3300 0797 00000000 		.4byte	instructionList
 3301 079b 26       		.uleb128 0x26
 3302 079c C6030000 		.4byte	.LASF94
 3303 07a0 01       		.byte	0x1
 3304 07a1 20       		.byte	0x20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 75


 3305 07a2 AE000000 		.4byte	0xae
 3306 07a6 05       		.uleb128 0x5
 3307 07a7 03       		.byte	0x3
 3308 07a8 00000000 		.4byte	instructionIndex
 3309 07ac 25       		.uleb128 0x25
 3310 07ad 733300   		.ascii	"s3\000"
 3311 07b0 01       		.byte	0x1
 3312 07b1 25       		.byte	0x25
 3313 07b2 96000000 		.4byte	0x96
 3314 07b6 05       		.uleb128 0x5
 3315 07b7 03       		.byte	0x3
 3316 07b8 00000000 		.4byte	s3
 3317 07bc 25       		.uleb128 0x25
 3318 07bd 733400   		.ascii	"s4\000"
 3319 07c0 01       		.byte	0x1
 3320 07c1 25       		.byte	0x25
 3321 07c2 96000000 		.4byte	0x96
 3322 07c6 05       		.uleb128 0x5
 3323 07c7 03       		.byte	0x3
 3324 07c8 00000000 		.4byte	s4
 3325 07cc 25       		.uleb128 0x25
 3326 07cd 733500   		.ascii	"s5\000"
 3327 07d0 01       		.byte	0x1
 3328 07d1 25       		.byte	0x25
 3329 07d2 96000000 		.4byte	0x96
 3330 07d6 05       		.uleb128 0x5
 3331 07d7 03       		.byte	0x3
 3332 07d8 00000000 		.4byte	s5
 3333 07dc 25       		.uleb128 0x25
 3334 07dd 733600   		.ascii	"s6\000"
 3335 07e0 01       		.byte	0x1
 3336 07e1 25       		.byte	0x25
 3337 07e2 96000000 		.4byte	0x96
 3338 07e6 05       		.uleb128 0x5
 3339 07e7 03       		.byte	0x3
 3340 07e8 00000000 		.4byte	s6
 3341 07ec 26       		.uleb128 0x26
 3342 07ed C1050000 		.4byte	.LASF122
 3343 07f1 01       		.byte	0x1
 3344 07f2 2A       		.byte	0x2a
 3345 07f3 AE000000 		.4byte	0xae
 3346 07f7 05       		.uleb128 0x5
 3347 07f8 03       		.byte	0x3
 3348 07f9 00000000 		.4byte	totalMilliseconds
 3349 07fd 26       		.uleb128 0x26
 3350 07fe 68010000 		.4byte	.LASF123
 3351 0802 01       		.byte	0x1
 3352 0803 2B       		.byte	0x2b
 3353 0804 D2000000 		.4byte	0xd2
 3354 0808 05       		.uleb128 0x5
 3355 0809 03       		.byte	0x3
 3356 080a 00000000 		.4byte	totalDistance
 3357 080e 06       		.uleb128 0x6
 3358 080f 84000000 		.4byte	0x84
 3359 0813 1E080000 		.4byte	0x81e
 3360 0817 07       		.uleb128 0x7
 3361 0818 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 76


 3362 081c 44       		.byte	0x44
 3363 081d 00       		.byte	0
 3364 081e 26       		.uleb128 0x26
 3365 081f 51000000 		.4byte	.LASF124
 3366 0823 01       		.byte	0x1
 3367 0824 2D       		.byte	0x2d
 3368 0825 0E080000 		.4byte	0x80e
 3369 0829 05       		.uleb128 0x5
 3370 082a 03       		.byte	0x3
 3371 082b 00000000 		.4byte	buffer
 3372 082f 26       		.uleb128 0x26
 3373 0830 45020000 		.4byte	.LASF125
 3374 0834 01       		.byte	0x1
 3375 0835 2E       		.byte	0x2e
 3376 0836 68000000 		.4byte	0x68
 3377 083a 05       		.uleb128 0x5
 3378 083b 03       		.byte	0x3
 3379 083c 00000000 		.4byte	quadDec2Count
 3380 0840 26       		.uleb128 0x26
 3381 0841 F2070000 		.4byte	.LASF126
 3382 0845 01       		.byte	0x1
 3383 0846 2F       		.byte	0x2f
 3384 0847 68000000 		.4byte	0x68
 3385 084b 05       		.uleb128 0x5
 3386 084c 03       		.byte	0x3
 3387 084d 00000000 		.4byte	timerInt
 3388 0851 26       		.uleb128 0x26
 3389 0852 D8020000 		.4byte	.LASF127
 3390 0856 01       		.byte	0x1
 3391 0857 30       		.byte	0x30
 3392 0858 68000000 		.4byte	0x68
 3393 085c 05       		.uleb128 0x5
 3394 085d 03       		.byte	0x3
 3395 085e 00000000 		.4byte	keepLedOn
 3396 0862 26       		.uleb128 0x26
 3397 0863 68060000 		.4byte	.LASF128
 3398 0867 01       		.byte	0x1
 3399 0868 32       		.byte	0x32
 3400 0869 AE000000 		.4byte	0xae
 3401 086d 05       		.uleb128 0x5
 3402 086e 03       		.byte	0x3
 3403 086f 00000000 		.4byte	stopBuffer
 3404 0873 26       		.uleb128 0x26
 3405 0874 37000000 		.4byte	.LASF129
 3406 0878 01       		.byte	0x1
 3407 0879 34       		.byte	0x34
 3408 087a 96000000 		.4byte	0x96
 3409 087e 05       		.uleb128 0x5
 3410 087f 03       		.byte	0x3
 3411 0880 00000000 		.4byte	turnStartedFlag
 3412 0884 26       		.uleb128 0x26
 3413 0885 1C040000 		.4byte	.LASF130
 3414 0889 01       		.byte	0x1
 3415 088a 35       		.byte	0x35
 3416 088b 96000000 		.4byte	0x96
 3417 088f 05       		.uleb128 0x5
 3418 0890 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 77


 3419 0891 00000000 		.4byte	turnFinishedFlag
 3420 0895 26       		.uleb128 0x26
 3421 0896 7E010000 		.4byte	.LASF131
 3422 089a 01       		.byte	0x1
 3423 089b 37       		.byte	0x37
 3424 089c 96000000 		.4byte	0x96
 3425 08a0 05       		.uleb128 0x5
 3426 08a1 03       		.byte	0x3
 3427 08a2 00000000 		.4byte	forwardUntilTargetStartedFlag
 3428 08a6 26       		.uleb128 0x26
 3429 08a7 26060000 		.4byte	.LASF132
 3430 08ab 01       		.byte	0x1
 3431 08ac 38       		.byte	0x38
 3432 08ad 96000000 		.4byte	0x96
 3433 08b1 05       		.uleb128 0x5
 3434 08b2 03       		.byte	0x3
 3435 08b3 00000000 		.4byte	uTurnStartedFlag
 3436 08b7 26       		.uleb128 0x26
 3437 08b8 73060000 		.4byte	.LASF133
 3438 08bc 01       		.byte	0x1
 3439 08bd 39       		.byte	0x39
 3440 08be 96000000 		.4byte	0x96
 3441 08c2 05       		.uleb128 0x5
 3442 08c3 03       		.byte	0x3
 3443 08c4 00000000 		.4byte	uTurnFinishedFlag
 3444 08c8 26       		.uleb128 0x26
 3445 08c9 D1040000 		.4byte	.LASF134
 3446 08cd 01       		.byte	0x1
 3447 08ce 3B       		.byte	0x3b
 3448 08cf E0000000 		.4byte	0xe0
 3449 08d3 05       		.uleb128 0x5
 3450 08d4 03       		.byte	0x3
 3451 08d5 00000000 		.4byte	junctionConfiguration
 3452 08d9 26       		.uleb128 0x26
 3453 08da 53040000 		.4byte	.LASF135
 3454 08de 01       		.byte	0x1
 3455 08df 3D       		.byte	0x3d
 3456 08e0 D2000000 		.4byte	0xd2
 3457 08e4 05       		.uleb128 0x5
 3458 08e5 03       		.byte	0x3
 3459 08e6 00000000 		.4byte	blockSizeTotal
 3460 08ea 26       		.uleb128 0x26
 3461 08eb E3030000 		.4byte	.LASF136
 3462 08ef 01       		.byte	0x1
 3463 08f0 BC       		.byte	0xbc
 3464 08f1 D2000000 		.4byte	0xd2
 3465 08f5 05       		.uleb128 0x5
 3466 08f6 03       		.byte	0x3
 3467 08f7 00000000 		.4byte	xBlocksize
 3468 08fb 26       		.uleb128 0x26
 3469 08fc 78050000 		.4byte	.LASF137
 3470 0900 01       		.byte	0x1
 3471 0901 BD       		.byte	0xbd
 3472 0902 D2000000 		.4byte	0xd2
 3473 0906 05       		.uleb128 0x5
 3474 0907 03       		.byte	0x3
 3475 0908 00000000 		.4byte	yBlocksize
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 78


 3476 090c 26       		.uleb128 0x26
 3477 090d 62070000 		.4byte	.LASF138
 3478 0911 01       		.byte	0x1
 3479 0912 BE       		.byte	0xbe
 3480 0913 96000000 		.4byte	0x96
 3481 0917 05       		.uleb128 0x5
 3482 0918 03       		.byte	0x3
 3483 0919 00000000 		.4byte	currentRow
 3484 091d 26       		.uleb128 0x26
 3485 091e D0070000 		.4byte	.LASF139
 3486 0922 01       		.byte	0x1
 3487 0923 BF       		.byte	0xbf
 3488 0924 96000000 		.4byte	0x96
 3489 0928 05       		.uleb128 0x5
 3490 0929 03       		.byte	0x3
 3491 092a 00000000 		.4byte	currentCol
 3492 092e 29       		.uleb128 0x29
 3493 092f BA060000 		.4byte	.LASF140
 3494 0933 01       		.byte	0x1
 3495 0934 0C01     		.2byte	0x10c
 3496 0936 96000000 		.4byte	0x96
 3497 093a 05       		.uleb128 0x5
 3498 093b 03       		.byte	0x3
 3499 093c 00000000 		.4byte	stoppedAfterTurn
 3500 0940 29       		.uleb128 0x29
 3501 0941 1B030000 		.4byte	.LASF141
 3502 0945 01       		.byte	0x1
 3503 0946 0D01     		.2byte	0x10d
 3504 0948 96000000 		.4byte	0x96
 3505 094c 05       		.uleb128 0x5
 3506 094d 03       		.byte	0x3
 3507 094e 00000000 		.4byte	ignoreSensor
 3508 0952 29       		.uleb128 0x29
 3509 0953 7C040000 		.4byte	.LASF142
 3510 0957 01       		.byte	0x1
 3511 0958 D101     		.2byte	0x1d1
 3512 095a 96000000 		.4byte	0x96
 3513 095e 05       		.uleb128 0x5
 3514 095f 03       		.byte	0x3
 3515 0960 00000000 		.4byte	spinCourseCorrectionStarted
 3516 0964 29       		.uleb128 0x29
 3517 0965 37060000 		.4byte	.LASF143
 3518 0969 01       		.byte	0x1
 3519 096a D201     		.2byte	0x1d2
 3520 096c 74020000 		.4byte	0x274
 3521 0970 05       		.uleb128 0x5
 3522 0971 03       		.byte	0x3
 3523 0972 00000000 		.4byte	lastDirectionAfter180
 3524 0976 00       		.byte	0
 3525              		.section	.debug_abbrev,"",%progbits
 3526              	.Ldebug_abbrev0:
 3527 0000 01       		.uleb128 0x1
 3528 0001 11       		.uleb128 0x11
 3529 0002 01       		.byte	0x1
 3530 0003 25       		.uleb128 0x25
 3531 0004 0E       		.uleb128 0xe
 3532 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 79


 3533 0006 0B       		.uleb128 0xb
 3534 0007 03       		.uleb128 0x3
 3535 0008 0E       		.uleb128 0xe
 3536 0009 1B       		.uleb128 0x1b
 3537 000a 0E       		.uleb128 0xe
 3538 000b 55       		.uleb128 0x55
 3539 000c 17       		.uleb128 0x17
 3540 000d 11       		.uleb128 0x11
 3541 000e 01       		.uleb128 0x1
 3542 000f 10       		.uleb128 0x10
 3543 0010 17       		.uleb128 0x17
 3544 0011 00       		.byte	0
 3545 0012 00       		.byte	0
 3546 0013 02       		.uleb128 0x2
 3547 0014 24       		.uleb128 0x24
 3548 0015 00       		.byte	0
 3549 0016 0B       		.uleb128 0xb
 3550 0017 0B       		.uleb128 0xb
 3551 0018 3E       		.uleb128 0x3e
 3552 0019 0B       		.uleb128 0xb
 3553 001a 03       		.uleb128 0x3
 3554 001b 0E       		.uleb128 0xe
 3555 001c 00       		.byte	0
 3556 001d 00       		.byte	0
 3557 001e 03       		.uleb128 0x3
 3558 001f 16       		.uleb128 0x16
 3559 0020 00       		.byte	0
 3560 0021 03       		.uleb128 0x3
 3561 0022 0E       		.uleb128 0xe
 3562 0023 3A       		.uleb128 0x3a
 3563 0024 0B       		.uleb128 0xb
 3564 0025 3B       		.uleb128 0x3b
 3565 0026 0B       		.uleb128 0xb
 3566 0027 49       		.uleb128 0x49
 3567 0028 13       		.uleb128 0x13
 3568 0029 00       		.byte	0
 3569 002a 00       		.byte	0
 3570 002b 04       		.uleb128 0x4
 3571 002c 24       		.uleb128 0x24
 3572 002d 00       		.byte	0
 3573 002e 0B       		.uleb128 0xb
 3574 002f 0B       		.uleb128 0xb
 3575 0030 3E       		.uleb128 0x3e
 3576 0031 0B       		.uleb128 0xb
 3577 0032 03       		.uleb128 0x3
 3578 0033 08       		.uleb128 0x8
 3579 0034 00       		.byte	0
 3580 0035 00       		.byte	0
 3581 0036 05       		.uleb128 0x5
 3582 0037 16       		.uleb128 0x16
 3583 0038 00       		.byte	0
 3584 0039 03       		.uleb128 0x3
 3585 003a 0E       		.uleb128 0xe
 3586 003b 3A       		.uleb128 0x3a
 3587 003c 0B       		.uleb128 0xb
 3588 003d 3B       		.uleb128 0x3b
 3589 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 80


 3590 003f 49       		.uleb128 0x49
 3591 0040 13       		.uleb128 0x13
 3592 0041 00       		.byte	0
 3593 0042 00       		.byte	0
 3594 0043 06       		.uleb128 0x6
 3595 0044 01       		.uleb128 0x1
 3596 0045 01       		.byte	0x1
 3597 0046 49       		.uleb128 0x49
 3598 0047 13       		.uleb128 0x13
 3599 0048 01       		.uleb128 0x1
 3600 0049 13       		.uleb128 0x13
 3601 004a 00       		.byte	0
 3602 004b 00       		.byte	0
 3603 004c 07       		.uleb128 0x7
 3604 004d 21       		.uleb128 0x21
 3605 004e 00       		.byte	0
 3606 004f 49       		.uleb128 0x49
 3607 0050 13       		.uleb128 0x13
 3608 0051 2F       		.uleb128 0x2f
 3609 0052 0B       		.uleb128 0xb
 3610 0053 00       		.byte	0
 3611 0054 00       		.byte	0
 3612 0055 08       		.uleb128 0x8
 3613 0056 13       		.uleb128 0x13
 3614 0057 01       		.byte	0x1
 3615 0058 03       		.uleb128 0x3
 3616 0059 0E       		.uleb128 0xe
 3617 005a 0B       		.uleb128 0xb
 3618 005b 0B       		.uleb128 0xb
 3619 005c 3A       		.uleb128 0x3a
 3620 005d 0B       		.uleb128 0xb
 3621 005e 3B       		.uleb128 0x3b
 3622 005f 0B       		.uleb128 0xb
 3623 0060 01       		.uleb128 0x1
 3624 0061 13       		.uleb128 0x13
 3625 0062 00       		.byte	0
 3626 0063 00       		.byte	0
 3627 0064 09       		.uleb128 0x9
 3628 0065 0D       		.uleb128 0xd
 3629 0066 00       		.byte	0
 3630 0067 03       		.uleb128 0x3
 3631 0068 0E       		.uleb128 0xe
 3632 0069 3A       		.uleb128 0x3a
 3633 006a 0B       		.uleb128 0xb
 3634 006b 3B       		.uleb128 0x3b
 3635 006c 0B       		.uleb128 0xb
 3636 006d 49       		.uleb128 0x49
 3637 006e 13       		.uleb128 0x13
 3638 006f 38       		.uleb128 0x38
 3639 0070 0B       		.uleb128 0xb
 3640 0071 00       		.byte	0
 3641 0072 00       		.byte	0
 3642 0073 0A       		.uleb128 0xa
 3643 0074 04       		.uleb128 0x4
 3644 0075 01       		.byte	0x1
 3645 0076 03       		.uleb128 0x3
 3646 0077 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 81


 3647 0078 0B       		.uleb128 0xb
 3648 0079 0B       		.uleb128 0xb
 3649 007a 49       		.uleb128 0x49
 3650 007b 13       		.uleb128 0x13
 3651 007c 3A       		.uleb128 0x3a
 3652 007d 0B       		.uleb128 0xb
 3653 007e 3B       		.uleb128 0x3b
 3654 007f 0B       		.uleb128 0xb
 3655 0080 01       		.uleb128 0x1
 3656 0081 13       		.uleb128 0x13
 3657 0082 00       		.byte	0
 3658 0083 00       		.byte	0
 3659 0084 0B       		.uleb128 0xb
 3660 0085 28       		.uleb128 0x28
 3661 0086 00       		.byte	0
 3662 0087 03       		.uleb128 0x3
 3663 0088 08       		.uleb128 0x8
 3664 0089 1C       		.uleb128 0x1c
 3665 008a 0B       		.uleb128 0xb
 3666 008b 00       		.byte	0
 3667 008c 00       		.byte	0
 3668 008d 0C       		.uleb128 0xc
 3669 008e 28       		.uleb128 0x28
 3670 008f 00       		.byte	0
 3671 0090 03       		.uleb128 0x3
 3672 0091 0E       		.uleb128 0xe
 3673 0092 1C       		.uleb128 0x1c
 3674 0093 0B       		.uleb128 0xb
 3675 0094 00       		.byte	0
 3676 0095 00       		.byte	0
 3677 0096 0D       		.uleb128 0xd
 3678 0097 2E       		.uleb128 0x2e
 3679 0098 01       		.byte	0x1
 3680 0099 3F       		.uleb128 0x3f
 3681 009a 19       		.uleb128 0x19
 3682 009b 03       		.uleb128 0x3
 3683 009c 0E       		.uleb128 0xe
 3684 009d 3A       		.uleb128 0x3a
 3685 009e 0B       		.uleb128 0xb
 3686 009f 3B       		.uleb128 0x3b
 3687 00a0 0B       		.uleb128 0xb
 3688 00a1 27       		.uleb128 0x27
 3689 00a2 19       		.uleb128 0x19
 3690 00a3 11       		.uleb128 0x11
 3691 00a4 01       		.uleb128 0x1
 3692 00a5 12       		.uleb128 0x12
 3693 00a6 06       		.uleb128 0x6
 3694 00a7 40       		.uleb128 0x40
 3695 00a8 18       		.uleb128 0x18
 3696 00a9 9642     		.uleb128 0x2116
 3697 00ab 19       		.uleb128 0x19
 3698 00ac 01       		.uleb128 0x1
 3699 00ad 13       		.uleb128 0x13
 3700 00ae 00       		.byte	0
 3701 00af 00       		.byte	0
 3702 00b0 0E       		.uleb128 0xe
 3703 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 82


 3704 00b2 01       		.byte	0x1
 3705 00b3 11       		.uleb128 0x11
 3706 00b4 01       		.uleb128 0x1
 3707 00b5 12       		.uleb128 0x12
 3708 00b6 06       		.uleb128 0x6
 3709 00b7 00       		.byte	0
 3710 00b8 00       		.byte	0
 3711 00b9 0F       		.uleb128 0xf
 3712 00ba 34       		.uleb128 0x34
 3713 00bb 00       		.byte	0
 3714 00bc 03       		.uleb128 0x3
 3715 00bd 0E       		.uleb128 0xe
 3716 00be 3A       		.uleb128 0x3a
 3717 00bf 0B       		.uleb128 0xb
 3718 00c0 3B       		.uleb128 0x3b
 3719 00c1 0B       		.uleb128 0xb
 3720 00c2 49       		.uleb128 0x49
 3721 00c3 13       		.uleb128 0x13
 3722 00c4 02       		.uleb128 0x2
 3723 00c5 18       		.uleb128 0x18
 3724 00c6 00       		.byte	0
 3725 00c7 00       		.byte	0
 3726 00c8 10       		.uleb128 0x10
 3727 00c9 2E       		.uleb128 0x2e
 3728 00ca 00       		.byte	0
 3729 00cb 3F       		.uleb128 0x3f
 3730 00cc 19       		.uleb128 0x19
 3731 00cd 03       		.uleb128 0x3
 3732 00ce 0E       		.uleb128 0xe
 3733 00cf 3A       		.uleb128 0x3a
 3734 00d0 0B       		.uleb128 0xb
 3735 00d1 3B       		.uleb128 0x3b
 3736 00d2 0B       		.uleb128 0xb
 3737 00d3 27       		.uleb128 0x27
 3738 00d4 19       		.uleb128 0x19
 3739 00d5 11       		.uleb128 0x11
 3740 00d6 01       		.uleb128 0x1
 3741 00d7 12       		.uleb128 0x12
 3742 00d8 06       		.uleb128 0x6
 3743 00d9 40       		.uleb128 0x40
 3744 00da 18       		.uleb128 0x18
 3745 00db 9742     		.uleb128 0x2117
 3746 00dd 19       		.uleb128 0x19
 3747 00de 00       		.byte	0
 3748 00df 00       		.byte	0
 3749 00e0 11       		.uleb128 0x11
 3750 00e1 2E       		.uleb128 0x2e
 3751 00e2 00       		.byte	0
 3752 00e3 3F       		.uleb128 0x3f
 3753 00e4 19       		.uleb128 0x19
 3754 00e5 03       		.uleb128 0x3
 3755 00e6 0E       		.uleb128 0xe
 3756 00e7 3A       		.uleb128 0x3a
 3757 00e8 0B       		.uleb128 0xb
 3758 00e9 3B       		.uleb128 0x3b
 3759 00ea 0B       		.uleb128 0xb
 3760 00eb 27       		.uleb128 0x27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 83


 3761 00ec 19       		.uleb128 0x19
 3762 00ed 11       		.uleb128 0x11
 3763 00ee 01       		.uleb128 0x1
 3764 00ef 12       		.uleb128 0x12
 3765 00f0 06       		.uleb128 0x6
 3766 00f1 40       		.uleb128 0x40
 3767 00f2 18       		.uleb128 0x18
 3768 00f3 9642     		.uleb128 0x2116
 3769 00f5 19       		.uleb128 0x19
 3770 00f6 00       		.byte	0
 3771 00f7 00       		.byte	0
 3772 00f8 12       		.uleb128 0x12
 3773 00f9 2E       		.uleb128 0x2e
 3774 00fa 00       		.byte	0
 3775 00fb 3F       		.uleb128 0x3f
 3776 00fc 19       		.uleb128 0x19
 3777 00fd 03       		.uleb128 0x3
 3778 00fe 0E       		.uleb128 0xe
 3779 00ff 3A       		.uleb128 0x3a
 3780 0100 0B       		.uleb128 0xb
 3781 0101 3B       		.uleb128 0x3b
 3782 0102 0B       		.uleb128 0xb
 3783 0103 49       		.uleb128 0x49
 3784 0104 13       		.uleb128 0x13
 3785 0105 11       		.uleb128 0x11
 3786 0106 01       		.uleb128 0x1
 3787 0107 12       		.uleb128 0x12
 3788 0108 06       		.uleb128 0x6
 3789 0109 40       		.uleb128 0x40
 3790 010a 18       		.uleb128 0x18
 3791 010b 9642     		.uleb128 0x2116
 3792 010d 19       		.uleb128 0x19
 3793 010e 00       		.byte	0
 3794 010f 00       		.byte	0
 3795 0110 13       		.uleb128 0x13
 3796 0111 2E       		.uleb128 0x2e
 3797 0112 01       		.byte	0x1
 3798 0113 3F       		.uleb128 0x3f
 3799 0114 19       		.uleb128 0x19
 3800 0115 03       		.uleb128 0x3
 3801 0116 0E       		.uleb128 0xe
 3802 0117 3A       		.uleb128 0x3a
 3803 0118 0B       		.uleb128 0xb
 3804 0119 3B       		.uleb128 0x3b
 3805 011a 0B       		.uleb128 0xb
 3806 011b 27       		.uleb128 0x27
 3807 011c 19       		.uleb128 0x19
 3808 011d 49       		.uleb128 0x49
 3809 011e 13       		.uleb128 0x13
 3810 011f 11       		.uleb128 0x11
 3811 0120 01       		.uleb128 0x1
 3812 0121 12       		.uleb128 0x12
 3813 0122 06       		.uleb128 0x6
 3814 0123 40       		.uleb128 0x40
 3815 0124 18       		.uleb128 0x18
 3816 0125 9642     		.uleb128 0x2116
 3817 0127 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 84


 3818 0128 01       		.uleb128 0x1
 3819 0129 13       		.uleb128 0x13
 3820 012a 00       		.byte	0
 3821 012b 00       		.byte	0
 3822 012c 14       		.uleb128 0x14
 3823 012d 05       		.uleb128 0x5
 3824 012e 00       		.byte	0
 3825 012f 03       		.uleb128 0x3
 3826 0130 0E       		.uleb128 0xe
 3827 0131 3A       		.uleb128 0x3a
 3828 0132 0B       		.uleb128 0xb
 3829 0133 3B       		.uleb128 0x3b
 3830 0134 0B       		.uleb128 0xb
 3831 0135 49       		.uleb128 0x49
 3832 0136 13       		.uleb128 0x13
 3833 0137 02       		.uleb128 0x2
 3834 0138 18       		.uleb128 0x18
 3835 0139 00       		.byte	0
 3836 013a 00       		.byte	0
 3837 013b 15       		.uleb128 0x15
 3838 013c 34       		.uleb128 0x34
 3839 013d 00       		.byte	0
 3840 013e 03       		.uleb128 0x3
 3841 013f 08       		.uleb128 0x8
 3842 0140 3A       		.uleb128 0x3a
 3843 0141 0B       		.uleb128 0xb
 3844 0142 3B       		.uleb128 0x3b
 3845 0143 0B       		.uleb128 0xb
 3846 0144 49       		.uleb128 0x49
 3847 0145 13       		.uleb128 0x13
 3848 0146 02       		.uleb128 0x2
 3849 0147 18       		.uleb128 0x18
 3850 0148 00       		.byte	0
 3851 0149 00       		.byte	0
 3852 014a 16       		.uleb128 0x16
 3853 014b 2E       		.uleb128 0x2e
 3854 014c 00       		.byte	0
 3855 014d 3F       		.uleb128 0x3f
 3856 014e 19       		.uleb128 0x19
 3857 014f 03       		.uleb128 0x3
 3858 0150 0E       		.uleb128 0xe
 3859 0151 3A       		.uleb128 0x3a
 3860 0152 0B       		.uleb128 0xb
 3861 0153 3B       		.uleb128 0x3b
 3862 0154 0B       		.uleb128 0xb
 3863 0155 11       		.uleb128 0x11
 3864 0156 01       		.uleb128 0x1
 3865 0157 12       		.uleb128 0x12
 3866 0158 06       		.uleb128 0x6
 3867 0159 40       		.uleb128 0x40
 3868 015a 18       		.uleb128 0x18
 3869 015b 9742     		.uleb128 0x2117
 3870 015d 19       		.uleb128 0x19
 3871 015e 00       		.byte	0
 3872 015f 00       		.byte	0
 3873 0160 17       		.uleb128 0x17
 3874 0161 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 85


 3875 0162 00       		.byte	0
 3876 0163 3F       		.uleb128 0x3f
 3877 0164 19       		.uleb128 0x19
 3878 0165 03       		.uleb128 0x3
 3879 0166 0E       		.uleb128 0xe
 3880 0167 3A       		.uleb128 0x3a
 3881 0168 0B       		.uleb128 0xb
 3882 0169 3B       		.uleb128 0x3b
 3883 016a 05       		.uleb128 0x5
 3884 016b 49       		.uleb128 0x49
 3885 016c 13       		.uleb128 0x13
 3886 016d 11       		.uleb128 0x11
 3887 016e 01       		.uleb128 0x1
 3888 016f 12       		.uleb128 0x12
 3889 0170 06       		.uleb128 0x6
 3890 0171 40       		.uleb128 0x40
 3891 0172 18       		.uleb128 0x18
 3892 0173 9742     		.uleb128 0x2117
 3893 0175 19       		.uleb128 0x19
 3894 0176 00       		.byte	0
 3895 0177 00       		.byte	0
 3896 0178 18       		.uleb128 0x18
 3897 0179 2E       		.uleb128 0x2e
 3898 017a 01       		.byte	0x1
 3899 017b 3F       		.uleb128 0x3f
 3900 017c 19       		.uleb128 0x19
 3901 017d 03       		.uleb128 0x3
 3902 017e 0E       		.uleb128 0xe
 3903 017f 3A       		.uleb128 0x3a
 3904 0180 0B       		.uleb128 0xb
 3905 0181 3B       		.uleb128 0x3b
 3906 0182 05       		.uleb128 0x5
 3907 0183 49       		.uleb128 0x49
 3908 0184 13       		.uleb128 0x13
 3909 0185 11       		.uleb128 0x11
 3910 0186 01       		.uleb128 0x1
 3911 0187 12       		.uleb128 0x12
 3912 0188 06       		.uleb128 0x6
 3913 0189 40       		.uleb128 0x40
 3914 018a 18       		.uleb128 0x18
 3915 018b 9642     		.uleb128 0x2116
 3916 018d 19       		.uleb128 0x19
 3917 018e 01       		.uleb128 0x1
 3918 018f 13       		.uleb128 0x13
 3919 0190 00       		.byte	0
 3920 0191 00       		.byte	0
 3921 0192 19       		.uleb128 0x19
 3922 0193 34       		.uleb128 0x34
 3923 0194 00       		.byte	0
 3924 0195 03       		.uleb128 0x3
 3925 0196 0E       		.uleb128 0xe
 3926 0197 3A       		.uleb128 0x3a
 3927 0198 0B       		.uleb128 0xb
 3928 0199 3B       		.uleb128 0x3b
 3929 019a 05       		.uleb128 0x5
 3930 019b 49       		.uleb128 0x49
 3931 019c 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 86


 3932 019d 02       		.uleb128 0x2
 3933 019e 18       		.uleb128 0x18
 3934 019f 00       		.byte	0
 3935 01a0 00       		.byte	0
 3936 01a1 1A       		.uleb128 0x1a
 3937 01a2 2E       		.uleb128 0x2e
 3938 01a3 01       		.byte	0x1
 3939 01a4 3F       		.uleb128 0x3f
 3940 01a5 19       		.uleb128 0x19
 3941 01a6 03       		.uleb128 0x3
 3942 01a7 0E       		.uleb128 0xe
 3943 01a8 3A       		.uleb128 0x3a
 3944 01a9 0B       		.uleb128 0xb
 3945 01aa 3B       		.uleb128 0x3b
 3946 01ab 05       		.uleb128 0x5
 3947 01ac 27       		.uleb128 0x27
 3948 01ad 19       		.uleb128 0x19
 3949 01ae 49       		.uleb128 0x49
 3950 01af 13       		.uleb128 0x13
 3951 01b0 11       		.uleb128 0x11
 3952 01b1 01       		.uleb128 0x1
 3953 01b2 12       		.uleb128 0x12
 3954 01b3 06       		.uleb128 0x6
 3955 01b4 40       		.uleb128 0x40
 3956 01b5 18       		.uleb128 0x18
 3957 01b6 9642     		.uleb128 0x2116
 3958 01b8 19       		.uleb128 0x19
 3959 01b9 01       		.uleb128 0x1
 3960 01ba 13       		.uleb128 0x13
 3961 01bb 00       		.byte	0
 3962 01bc 00       		.byte	0
 3963 01bd 1B       		.uleb128 0x1b
 3964 01be 05       		.uleb128 0x5
 3965 01bf 00       		.byte	0
 3966 01c0 03       		.uleb128 0x3
 3967 01c1 0E       		.uleb128 0xe
 3968 01c2 3A       		.uleb128 0x3a
 3969 01c3 0B       		.uleb128 0xb
 3970 01c4 3B       		.uleb128 0x3b
 3971 01c5 05       		.uleb128 0x5
 3972 01c6 49       		.uleb128 0x49
 3973 01c7 13       		.uleb128 0x13
 3974 01c8 02       		.uleb128 0x2
 3975 01c9 18       		.uleb128 0x18
 3976 01ca 00       		.byte	0
 3977 01cb 00       		.byte	0
 3978 01cc 1C       		.uleb128 0x1c
 3979 01cd 0B       		.uleb128 0xb
 3980 01ce 01       		.byte	0x1
 3981 01cf 55       		.uleb128 0x55
 3982 01d0 17       		.uleb128 0x17
 3983 01d1 01       		.uleb128 0x1
 3984 01d2 13       		.uleb128 0x13
 3985 01d3 00       		.byte	0
 3986 01d4 00       		.byte	0
 3987 01d5 1D       		.uleb128 0x1d
 3988 01d6 34       		.uleb128 0x34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 87


 3989 01d7 00       		.byte	0
 3990 01d8 03       		.uleb128 0x3
 3991 01d9 08       		.uleb128 0x8
 3992 01da 3A       		.uleb128 0x3a
 3993 01db 0B       		.uleb128 0xb
 3994 01dc 3B       		.uleb128 0x3b
 3995 01dd 05       		.uleb128 0x5
 3996 01de 49       		.uleb128 0x49
 3997 01df 13       		.uleb128 0x13
 3998 01e0 02       		.uleb128 0x2
 3999 01e1 18       		.uleb128 0x18
 4000 01e2 00       		.byte	0
 4001 01e3 00       		.byte	0
 4002 01e4 1E       		.uleb128 0x1e
 4003 01e5 0B       		.uleb128 0xb
 4004 01e6 01       		.byte	0x1
 4005 01e7 55       		.uleb128 0x55
 4006 01e8 17       		.uleb128 0x17
 4007 01e9 00       		.byte	0
 4008 01ea 00       		.byte	0
 4009 01eb 1F       		.uleb128 0x1f
 4010 01ec 2E       		.uleb128 0x2e
 4011 01ed 00       		.byte	0
 4012 01ee 3F       		.uleb128 0x3f
 4013 01ef 19       		.uleb128 0x19
 4014 01f0 03       		.uleb128 0x3
 4015 01f1 0E       		.uleb128 0xe
 4016 01f2 3A       		.uleb128 0x3a
 4017 01f3 0B       		.uleb128 0xb
 4018 01f4 3B       		.uleb128 0x3b
 4019 01f5 05       		.uleb128 0x5
 4020 01f6 11       		.uleb128 0x11
 4021 01f7 01       		.uleb128 0x1
 4022 01f8 12       		.uleb128 0x12
 4023 01f9 06       		.uleb128 0x6
 4024 01fa 40       		.uleb128 0x40
 4025 01fb 18       		.uleb128 0x18
 4026 01fc 9742     		.uleb128 0x2117
 4027 01fe 19       		.uleb128 0x19
 4028 01ff 00       		.byte	0
 4029 0200 00       		.byte	0
 4030 0201 20       		.uleb128 0x20
 4031 0202 2E       		.uleb128 0x2e
 4032 0203 01       		.byte	0x1
 4033 0204 3F       		.uleb128 0x3f
 4034 0205 19       		.uleb128 0x19
 4035 0206 03       		.uleb128 0x3
 4036 0207 0E       		.uleb128 0xe
 4037 0208 3A       		.uleb128 0x3a
 4038 0209 0B       		.uleb128 0xb
 4039 020a 3B       		.uleb128 0x3b
 4040 020b 05       		.uleb128 0x5
 4041 020c 27       		.uleb128 0x27
 4042 020d 19       		.uleb128 0x19
 4043 020e 49       		.uleb128 0x49
 4044 020f 13       		.uleb128 0x13
 4045 0210 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 88


 4046 0211 01       		.uleb128 0x1
 4047 0212 12       		.uleb128 0x12
 4048 0213 06       		.uleb128 0x6
 4049 0214 40       		.uleb128 0x40
 4050 0215 18       		.uleb128 0x18
 4051 0216 9742     		.uleb128 0x2117
 4052 0218 19       		.uleb128 0x19
 4053 0219 01       		.uleb128 0x1
 4054 021a 13       		.uleb128 0x13
 4055 021b 00       		.byte	0
 4056 021c 00       		.byte	0
 4057 021d 21       		.uleb128 0x21
 4058 021e 0F       		.uleb128 0xf
 4059 021f 00       		.byte	0
 4060 0220 0B       		.uleb128 0xb
 4061 0221 0B       		.uleb128 0xb
 4062 0222 49       		.uleb128 0x49
 4063 0223 13       		.uleb128 0x13
 4064 0224 00       		.byte	0
 4065 0225 00       		.byte	0
 4066 0226 22       		.uleb128 0x22
 4067 0227 2E       		.uleb128 0x2e
 4068 0228 00       		.byte	0
 4069 0229 3F       		.uleb128 0x3f
 4070 022a 19       		.uleb128 0x19
 4071 022b 03       		.uleb128 0x3
 4072 022c 0E       		.uleb128 0xe
 4073 022d 3A       		.uleb128 0x3a
 4074 022e 0B       		.uleb128 0xb
 4075 022f 3B       		.uleb128 0x3b
 4076 0230 05       		.uleb128 0x5
 4077 0231 11       		.uleb128 0x11
 4078 0232 01       		.uleb128 0x1
 4079 0233 12       		.uleb128 0x12
 4080 0234 06       		.uleb128 0x6
 4081 0235 40       		.uleb128 0x40
 4082 0236 18       		.uleb128 0x18
 4083 0237 9642     		.uleb128 0x2116
 4084 0239 19       		.uleb128 0x19
 4085 023a 00       		.byte	0
 4086 023b 00       		.byte	0
 4087 023c 23       		.uleb128 0x23
 4088 023d 34       		.uleb128 0x34
 4089 023e 00       		.byte	0
 4090 023f 03       		.uleb128 0x3
 4091 0240 0E       		.uleb128 0xe
 4092 0241 3A       		.uleb128 0x3a
 4093 0242 0B       		.uleb128 0xb
 4094 0243 3B       		.uleb128 0x3b
 4095 0244 05       		.uleb128 0x5
 4096 0245 49       		.uleb128 0x49
 4097 0246 13       		.uleb128 0x13
 4098 0247 3F       		.uleb128 0x3f
 4099 0248 19       		.uleb128 0x19
 4100 0249 3C       		.uleb128 0x3c
 4101 024a 19       		.uleb128 0x19
 4102 024b 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 89


 4103 024c 00       		.byte	0
 4104 024d 24       		.uleb128 0x24
 4105 024e 35       		.uleb128 0x35
 4106 024f 00       		.byte	0
 4107 0250 49       		.uleb128 0x49
 4108 0251 13       		.uleb128 0x13
 4109 0252 00       		.byte	0
 4110 0253 00       		.byte	0
 4111 0254 25       		.uleb128 0x25
 4112 0255 34       		.uleb128 0x34
 4113 0256 00       		.byte	0
 4114 0257 03       		.uleb128 0x3
 4115 0258 08       		.uleb128 0x8
 4116 0259 3A       		.uleb128 0x3a
 4117 025a 0B       		.uleb128 0xb
 4118 025b 3B       		.uleb128 0x3b
 4119 025c 0B       		.uleb128 0xb
 4120 025d 49       		.uleb128 0x49
 4121 025e 13       		.uleb128 0x13
 4122 025f 3F       		.uleb128 0x3f
 4123 0260 19       		.uleb128 0x19
 4124 0261 02       		.uleb128 0x2
 4125 0262 18       		.uleb128 0x18
 4126 0263 00       		.byte	0
 4127 0264 00       		.byte	0
 4128 0265 26       		.uleb128 0x26
 4129 0266 34       		.uleb128 0x34
 4130 0267 00       		.byte	0
 4131 0268 03       		.uleb128 0x3
 4132 0269 0E       		.uleb128 0xe
 4133 026a 3A       		.uleb128 0x3a
 4134 026b 0B       		.uleb128 0xb
 4135 026c 3B       		.uleb128 0x3b
 4136 026d 0B       		.uleb128 0xb
 4137 026e 49       		.uleb128 0x49
 4138 026f 13       		.uleb128 0x13
 4139 0270 3F       		.uleb128 0x3f
 4140 0271 19       		.uleb128 0x19
 4141 0272 02       		.uleb128 0x2
 4142 0273 18       		.uleb128 0x18
 4143 0274 00       		.byte	0
 4144 0275 00       		.byte	0
 4145 0276 27       		.uleb128 0x27
 4146 0277 34       		.uleb128 0x34
 4147 0278 00       		.byte	0
 4148 0279 03       		.uleb128 0x3
 4149 027a 08       		.uleb128 0x8
 4150 027b 3A       		.uleb128 0x3a
 4151 027c 0B       		.uleb128 0xb
 4152 027d 3B       		.uleb128 0x3b
 4153 027e 0B       		.uleb128 0xb
 4154 027f 49       		.uleb128 0x49
 4155 0280 13       		.uleb128 0x13
 4156 0281 3F       		.uleb128 0x3f
 4157 0282 19       		.uleb128 0x19
 4158 0283 3C       		.uleb128 0x3c
 4159 0284 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 90


 4160 0285 00       		.byte	0
 4161 0286 00       		.byte	0
 4162 0287 28       		.uleb128 0x28
 4163 0288 34       		.uleb128 0x34
 4164 0289 00       		.byte	0
 4165 028a 03       		.uleb128 0x3
 4166 028b 0E       		.uleb128 0xe
 4167 028c 3A       		.uleb128 0x3a
 4168 028d 0B       		.uleb128 0xb
 4169 028e 3B       		.uleb128 0x3b
 4170 028f 0B       		.uleb128 0xb
 4171 0290 49       		.uleb128 0x49
 4172 0291 13       		.uleb128 0x13
 4173 0292 3F       		.uleb128 0x3f
 4174 0293 19       		.uleb128 0x19
 4175 0294 3C       		.uleb128 0x3c
 4176 0295 19       		.uleb128 0x19
 4177 0296 00       		.byte	0
 4178 0297 00       		.byte	0
 4179 0298 29       		.uleb128 0x29
 4180 0299 34       		.uleb128 0x34
 4181 029a 00       		.byte	0
 4182 029b 03       		.uleb128 0x3
 4183 029c 0E       		.uleb128 0xe
 4184 029d 3A       		.uleb128 0x3a
 4185 029e 0B       		.uleb128 0xb
 4186 029f 3B       		.uleb128 0x3b
 4187 02a0 05       		.uleb128 0x5
 4188 02a1 49       		.uleb128 0x49
 4189 02a2 13       		.uleb128 0x13
 4190 02a3 3F       		.uleb128 0x3f
 4191 02a4 19       		.uleb128 0x19
 4192 02a5 02       		.uleb128 0x2
 4193 02a6 18       		.uleb128 0x18
 4194 02a7 00       		.byte	0
 4195 02a8 00       		.byte	0
 4196 02a9 00       		.byte	0
 4197              		.section	.debug_aranges,"",%progbits
 4198 0000 94000000 		.4byte	0x94
 4199 0004 0200     		.2byte	0x2
 4200 0006 00000000 		.4byte	.Ldebug_info0
 4201 000a 04       		.byte	0x4
 4202 000b 00       		.byte	0
 4203 000c 0000     		.2byte	0
 4204 000e 0000     		.2byte	0
 4205 0010 00000000 		.4byte	.LFB64
 4206 0014 EC000000 		.4byte	.LFE64-.LFB64
 4207 0018 00000000 		.4byte	.LFB65
 4208 001c 18000000 		.4byte	.LFE65-.LFB65
 4209 0020 00000000 		.4byte	.LFB66
 4210 0024 18000000 		.4byte	.LFE66-.LFB66
 4211 0028 00000000 		.4byte	.LFB67
 4212 002c 18000000 		.4byte	.LFE67-.LFB67
 4213 0030 00000000 		.4byte	.LFB68
 4214 0034 18000000 		.4byte	.LFE68-.LFB68
 4215 0038 00000000 		.4byte	.LFB69
 4216 003c 38000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 91


 4217 0040 00000000 		.4byte	.LFB70
 4218 0044 C0000000 		.4byte	.LFE70-.LFB70
 4219 0048 00000000 		.4byte	.LFB71
 4220 004c 54000000 		.4byte	.LFE71-.LFB71
 4221 0050 00000000 		.4byte	.LFB72
 4222 0054 34000000 		.4byte	.LFE72-.LFB72
 4223 0058 00000000 		.4byte	.LFB73
 4224 005c 84000000 		.4byte	.LFE73-.LFB73
 4225 0060 00000000 		.4byte	.LFB74
 4226 0064 94000000 		.4byte	.LFE74-.LFB74
 4227 0068 00000000 		.4byte	.LFB75
 4228 006c 50030000 		.4byte	.LFE75-.LFB75
 4229 0070 00000000 		.4byte	.LFB76
 4230 0074 8C020000 		.4byte	.LFE76-.LFB76
 4231 0078 00000000 		.4byte	.LFB77
 4232 007c 1C000000 		.4byte	.LFE77-.LFB77
 4233 0080 00000000 		.4byte	.LFB78
 4234 0084 8E000000 		.4byte	.LFE78-.LFB78
 4235 0088 00000000 		.4byte	.LFB79
 4236 008c C8000000 		.4byte	.LFE79-.LFB79
 4237 0090 00000000 		.4byte	0
 4238 0094 00000000 		.4byte	0
 4239              		.section	.debug_ranges,"",%progbits
 4240              	.Ldebug_ranges0:
 4241 0000 38000000 		.4byte	.LBB3
 4242 0004 BC000000 		.4byte	.LBE3
 4243 0008 BE000000 		.4byte	.LBB4
 4244 000c C0000000 		.4byte	.LBE4
 4245 0010 00000000 		.4byte	0
 4246 0014 00000000 		.4byte	0
 4247 0018 C2000000 		.4byte	.LBB5
 4248 001c 46010000 		.4byte	.LBE5
 4249 0020 48010000 		.4byte	.LBB6
 4250 0024 4A010000 		.4byte	.LBE6
 4251 0028 00000000 		.4byte	0
 4252 002c 00000000 		.4byte	0
 4253 0030 4C010000 		.4byte	.LBB7
 4254 0034 D0010000 		.4byte	.LBE7
 4255 0038 D2010000 		.4byte	.LBB8
 4256 003c D4010000 		.4byte	.LBE8
 4257 0040 00000000 		.4byte	0
 4258 0044 00000000 		.4byte	0
 4259 0048 D6010000 		.4byte	.LBB9
 4260 004c 5A020000 		.4byte	.LBE9
 4261 0050 5C020000 		.4byte	.LBB10
 4262 0054 5E020000 		.4byte	.LBE10
 4263 0058 00000000 		.4byte	0
 4264 005c 00000000 		.4byte	0
 4265 0060 00000000 		.4byte	.LFB64
 4266 0064 EC000000 		.4byte	.LFE64
 4267 0068 00000000 		.4byte	.LFB65
 4268 006c 18000000 		.4byte	.LFE65
 4269 0070 00000000 		.4byte	.LFB66
 4270 0074 18000000 		.4byte	.LFE66
 4271 0078 00000000 		.4byte	.LFB67
 4272 007c 18000000 		.4byte	.LFE67
 4273 0080 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 92


 4274 0084 18000000 		.4byte	.LFE68
 4275 0088 00000000 		.4byte	.LFB69
 4276 008c 38000000 		.4byte	.LFE69
 4277 0090 00000000 		.4byte	.LFB70
 4278 0094 C0000000 		.4byte	.LFE70
 4279 0098 00000000 		.4byte	.LFB71
 4280 009c 54000000 		.4byte	.LFE71
 4281 00a0 00000000 		.4byte	.LFB72
 4282 00a4 34000000 		.4byte	.LFE72
 4283 00a8 00000000 		.4byte	.LFB73
 4284 00ac 84000000 		.4byte	.LFE73
 4285 00b0 00000000 		.4byte	.LFB74
 4286 00b4 94000000 		.4byte	.LFE74
 4287 00b8 00000000 		.4byte	.LFB75
 4288 00bc 50030000 		.4byte	.LFE75
 4289 00c0 00000000 		.4byte	.LFB76
 4290 00c4 8C020000 		.4byte	.LFE76
 4291 00c8 00000000 		.4byte	.LFB77
 4292 00cc 1C000000 		.4byte	.LFE77
 4293 00d0 00000000 		.4byte	.LFB78
 4294 00d4 8E000000 		.4byte	.LFE78
 4295 00d8 00000000 		.4byte	.LFB79
 4296 00dc C8000000 		.4byte	.LFE79
 4297 00e0 00000000 		.4byte	0
 4298 00e4 00000000 		.4byte	0
 4299              		.section	.debug_line,"",%progbits
 4300              	.Ldebug_line0:
 4301 0000 73040000 		.section	.debug_str,"MS",%progbits,1
 4301      02007001 
 4301      00000201 
 4301      FB0E0D00 
 4301      01010101 
 4302              	.LASF52:
 4303 0000 64697265 		.ascii	"direction\000"
 4303      6374696F 
 4303      6E00
 4304              	.LASF65:
 4305 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4305      61726441 
 4305      66746572 
 4305      5475726E 
 4305      00
 4306              	.LASF42:
 4307 001b 496E7374 		.ascii	"InstructionDirection\000"
 4307      72756374 
 4307      696F6E44 
 4307      69726563 
 4307      74696F6E 
 4308              	.LASF145:
 4309 0030 6D61696E 		.ascii	"main.c\000"
 4309      2E6300
 4310              	.LASF129:
 4311 0037 7475726E 		.ascii	"turnStartedFlag\000"
 4311      53746172 
 4311      74656446 
 4311      6C616700 
 4312              	.LASF79:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 93


 4313 0047 626C6F63 		.ascii	"blocksize\000"
 4313      6B73697A 
 4313      6500
 4314              	.LASF124:
 4315 0051 62756666 		.ascii	"buffer\000"
 4315      657200
 4316              	.LASF8:
 4317 0058 756E7369 		.ascii	"unsigned int\000"
 4317      676E6564 
 4317      20696E74 
 4317      00
 4318              	.LASF12:
 4319 0065 5F5F696E 		.ascii	"__int32_t\000"
 4319      7433325F 
 4319      7400
 4320              	.LASF18:
 4321 006f 696E7431 		.ascii	"int16\000"
 4321      3600
 4322              	.LASF115:
 4323 0075 73797374 		.ascii	"system_state\000"
 4323      656D5F73 
 4323      74617465 
 4323      00
 4324              	.LASF95:
 4325 0082 6E657874 		.ascii	"nextInstruction\000"
 4325      496E7374 
 4325      72756374 
 4325      696F6E00 
 4326              	.LASF144:
 4327 0092 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4327      43313120 
 4327      352E342E 
 4327      31203230 
 4327      31363036 
 4328 00c5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4328      20726576 
 4328      6973696F 
 4328      6E203233 
 4328      37373135 
 4329 00f8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4329      66756E63 
 4329      74696F6E 
 4329      2D736563 
 4329      74696F6E 
 4330              	.LASF47:
 4331 0120 466F7277 		.ascii	"ForwardUntilTarget\000"
 4331      61726455 
 4331      6E74696C 
 4331      54617267 
 4331      657400
 4332              	.LASF55:
 4333 0133 65787065 		.ascii	"expectedOrientation\000"
 4333      63746564 
 4333      4F726965 
 4333      6E746174 
 4333      696F6E00 
 4334              	.LASF76:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 94


 4335 0147 5370696E 		.ascii	"SpinCourseCorrection\000"
 4335      436F7572 
 4335      7365436F 
 4335      72726563 
 4335      74696F6E 
 4336              	.LASF71:
 4337 015c 53365F44 		.ascii	"S6_DETECTED\000"
 4337      45544543 
 4337      54454400 
 4338              	.LASF123:
 4339 0168 746F7461 		.ascii	"totalDistance\000"
 4339      6C446973 
 4339      74616E63 
 4339      6500
 4340              	.LASF34:
 4341 0176 67325F78 		.ascii	"g2_xpos\000"
 4341      706F7300 
 4342              	.LASF131:
 4343 017e 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4343      61726455 
 4343      6E74696C 
 4343      54617267 
 4343      65745374 
 4344              	.LASF92:
 4345 019c 6E756D53 		.ascii	"numSteps\000"
 4345      74657073 
 4345      00
 4346              	.LASF86:
 4347 01a5 74617267 		.ascii	"targetRow\000"
 4347      6574526F 
 4347      7700
 4348              	.LASF78:
 4349 01af 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4349      6F76656D 
 4349      656E7441 
 4349      63636F72 
 4349      64696E67 
 4350              	.LASF110:
 4351 01d1 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4351      5F72665F 
 4351      7472616E 
 4351      736D6973 
 4351      73696F6E 
 4352              	.LASF75:
 4353 01ed 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4353      61726443 
 4353      6F757273 
 4353      65436F72 
 4353      72656374 
 4354              	.LASF119:
 4355 0205 63757272 		.ascii	"currentRobotOrientation\000"
 4355      656E7452 
 4355      6F626F74 
 4355      4F726965 
 4355      6E746174 
 4356              	.LASF89:
 4357 021d 52657365 		.ascii	"ResetSensorFlags\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 95


 4357      7453656E 
 4357      736F7246 
 4357      6C616773 
 4357      00
 4358              	.LASF37:
 4359 022e 67325F64 		.ascii	"g2_direction\000"
 4359      69726563 
 4359      74696F6E 
 4359      00
 4360              	.LASF87:
 4361 023b 74617267 		.ascii	"targetCol\000"
 4361      6574436F 
 4361      6C00
 4362              	.LASF125:
 4363 0245 71756164 		.ascii	"quadDec2Count\000"
 4363      44656332 
 4363      436F756E 
 4363      7400
 4364              	.LASF19:
 4365 0253 666C6F61 		.ascii	"float\000"
 4365      7400
 4366              	.LASF80:
 4367 0259 63757272 		.ascii	"currentInstructionDirection\000"
 4367      656E7449 
 4367      6E737472 
 4367      75637469 
 4367      6F6E4469 
 4368              	.LASF114:
 4369 0275 75736242 		.ascii	"usbBuffer\000"
 4369      75666665 
 4369      7200
 4370              	.LASF83:
 4371 027f 636F756E 		.ascii	"count\000"
 4371      7400
 4372              	.LASF22:
 4373 0285 696E6465 		.ascii	"index\000"
 4373      7800
 4374              	.LASF7:
 4375 028b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4375      206C6F6E 
 4375      6720756E 
 4375      7369676E 
 4375      65642069 
 4376              	.LASF51:
 4377 02a2 496E7374 		.ascii	"Instruction\000"
 4377      72756374 
 4377      696F6E00 
 4378              	.LASF107:
 4379 02ae 666C6167 		.ascii	"flag_packet\000"
 4379      5F706163 
 4379      6B657400 
 4380              	.LASF96:
 4381 02ba 53657452 		.ascii	"SetRobotMovement\000"
 4381      6F626F74 
 4381      4D6F7665 
 4381      6D656E74 
 4381      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 96


 4382              	.LASF72:
 4383 02cb 54494D45 		.ascii	"TIMER_FINISH\000"
 4383      525F4649 
 4383      4E495348 
 4383      00
 4384              	.LASF127:
 4385 02d8 6B656570 		.ascii	"keepLedOn\000"
 4385      4C65644F 
 4385      6E00
 4386              	.LASF39:
 4387 02e2 4C656674 		.ascii	"Left\000"
 4387      00
 4388              	.LASF103:
 4389 02e7 666C6167 		.ascii	"flag_ts_update\000"
 4389      5F74735F 
 4389      75706461 
 4389      746500
 4390              	.LASF102:
 4391 02f6 666C6167 		.ascii	"flag_ts_enc\000"
 4391      5F74735F 
 4391      656E6300 
 4392              	.LASF81:
 4393 0302 71756164 		.ascii	"quadCountToRPM\000"
 4393      436F756E 
 4393      74546F52 
 4393      504D00
 4394              	.LASF84:
 4395 0311 626C6F63 		.ascii	"blockSize\000"
 4395      6B53697A 
 4395      6500
 4396              	.LASF141:
 4397 031b 69676E6F 		.ascii	"ignoreSensor\000"
 4397      72655365 
 4397      6E736F72 
 4397      00
 4398              	.LASF48:
 4399 0328 53746F70 		.ascii	"StopAtTarget\000"
 4399      41745461 
 4399      72676574 
 4399      00
 4400              	.LASF64:
 4401 0335 77616974 		.ascii	"waitForTurn\000"
 4401      466F7254 
 4401      75726E00 
 4402              	.LASF24:
 4403 0341 726F626F 		.ascii	"robot_ypos\000"
 4403      745F7970 
 4403      6F7300
 4404              	.LASF101:
 4405 034c 74735F64 		.ascii	"ts_display\000"
 4405      6973706C 
 4405      617900
 4406              	.LASF11:
 4407 0357 63686172 		.ascii	"char\000"
 4407      00
 4408              	.LASF146:
 4409 035c 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 97


 4409      6F63756D 
 4409      656E7473 
 4409      5C476974 
 4409      4875625C 
 4410 038b 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4410      635F636F 
 4410      64655F62 
 4410      6173655C 
 4410      43533330 
 4411              	.LASF28:
 4412 03ad 67305F73 		.ascii	"g0_speed\000"
 4412      70656564 
 4412      00
 4413              	.LASF93:
 4414 03b6 696E7374 		.ascii	"instructionList\000"
 4414      72756374 
 4414      696F6E4C 
 4414      69737400 
 4415              	.LASF94:
 4416 03c6 696E7374 		.ascii	"instructionIndex\000"
 4416      72756374 
 4416      696F6E49 
 4416      6E646578 
 4416      00
 4417              	.LASF15:
 4418 03d7 75696E74 		.ascii	"uint16\000"
 4418      313600
 4419              	.LASF17:
 4420 03de 696E7438 		.ascii	"int8\000"
 4420      00
 4421              	.LASF136:
 4422 03e3 78426C6F 		.ascii	"xBlocksize\000"
 4422      636B7369 
 4422      7A6500
 4423              	.LASF33:
 4424 03ee 67315F64 		.ascii	"g1_direction\000"
 4424      69726563 
 4424      74696F6E 
 4424      00
 4425              	.LASF68:
 4426 03fb 53335F44 		.ascii	"S3_DETECTED\000"
 4426      45544543 
 4426      54454400 
 4427              	.LASF77:
 4428 0407 73706565 		.ascii	"speedTimer\000"
 4428      6454696D 
 4428      657200
 4429              	.LASF88:
 4430 0412 70617468 		.ascii	"pathCount\000"
 4430      436F756E 
 4430      7400
 4431              	.LASF130:
 4432 041c 7475726E 		.ascii	"turnFinishedFlag\000"
 4432      46696E69 
 4432      73686564 
 4432      466C6167 
 4432      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 98


 4433              	.LASF44:
 4434 042d 77616974 		.ascii	"waitForLeftTurn\000"
 4434      466F724C 
 4434      65667454 
 4434      75726E00 
 4435              	.LASF6:
 4436 043d 6C6F6E67 		.ascii	"long long int\000"
 4436      206C6F6E 
 4436      6720696E 
 4436      7400
 4437              	.LASF30:
 4438 044b 67315F78 		.ascii	"g1_xpos\000"
 4438      706F7300 
 4439              	.LASF135:
 4440 0453 626C6F63 		.ascii	"blockSizeTotal\000"
 4440      6B53697A 
 4440      65546F74 
 4440      616C00
 4441              	.LASF120:
 4442 0462 70726576 		.ascii	"previousOrientation\000"
 4442      696F7573 
 4442      4F726965 
 4442      6E746174 
 4442      696F6E00 
 4443              	.LASF46:
 4444 0476 75547572 		.ascii	"uTurn\000"
 4444      6E00
 4445              	.LASF142:
 4446 047c 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4446      436F7572 
 4446      7365436F 
 4446      72726563 
 4446      74696F6E 
 4447              	.LASF74:
 4448 0498 6E657744 		.ascii	"newDistance\000"
 4448      69737461 
 4448      6E636500 
 4449              	.LASF36:
 4450 04a4 67325F73 		.ascii	"g2_speed\000"
 4450      70656564 
 4450      00
 4451              	.LASF27:
 4452 04ad 67305F79 		.ascii	"g0_ypos\000"
 4452      706F7300 
 4453              	.LASF116:
 4454 04b5 666F6F64 		.ascii	"food_list\000"
 4454      5F6C6973 
 4454      7400
 4455              	.LASF59:
 4456 04bf 5475726E 		.ascii	"TurnLeft\000"
 4456      4C656674 
 4456      00
 4457              	.LASF100:
 4458 04c8 74735F73 		.ascii	"ts_speed\000"
 4458      70656564 
 4458      00
 4459              	.LASF134:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 99


 4460 04d1 6A756E63 		.ascii	"junctionConfiguration\000"
 4460      74696F6E 
 4460      436F6E66 
 4460      69677572 
 4460      6174696F 
 4461              	.LASF63:
 4462 04e7 556E6B6E 		.ascii	"Unknown\000"
 4462      6F776E00 
 4463              	.LASF16:
 4464 04ef 75696E74 		.ascii	"uint32\000"
 4464      333200
 4465              	.LASF45:
 4466 04f6 77616974 		.ascii	"waitForRightTurn\000"
 4466      466F7252 
 4466      69676874 
 4466      5475726E 
 4466      00
 4467              	.LASF58:
 4468 0507 5475726E 		.ascii	"TurnRight\000"
 4468      52696768 
 4468      7400
 4469              	.LASF50:
 4470 0511 64617461 		.ascii	"data_main\000"
 4470      5F6D6169 
 4470      6E00
 4471              	.LASF21:
 4472 051b 72737369 		.ascii	"rssi\000"
 4472      00
 4473              	.LASF29:
 4474 0520 67305F64 		.ascii	"g0_direction\000"
 4474      69726563 
 4474      74696F6E 
 4474      00
 4475              	.LASF118:
 4476 052d 70726576 		.ascii	"previousDirection\000"
 4476      696F7573 
 4476      44697265 
 4476      6374696F 
 4476      6E00
 4477              	.LASF67:
 4478 053f 5370696E 		.ascii	"Spin180\000"
 4478      31383000 
 4479              	.LASF9:
 4480 0547 6C6F6E67 		.ascii	"long double\000"
 4480      20646F75 
 4480      626C6500 
 4481              	.LASF104:
 4482 0553 666C6167 		.ascii	"flag_ts_speed\000"
 4482      5F74735F 
 4482      73706565 
 4482      6400
 4483              	.LASF109:
 4484 0561 64617461 		.ascii	"dataready_flag\000"
 4484      72656164 
 4484      795F666C 
 4484      616700
 4485              	.LASF106:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 100


 4486 0570 666C6167 		.ascii	"flag_rx\000"
 4486      5F727800 
 4487              	.LASF137:
 4488 0578 79426C6F 		.ascii	"yBlocksize\000"
 4488      636B7369 
 4488      7A6500
 4489              	.LASF2:
 4490 0583 73686F72 		.ascii	"short int\000"
 4490      7420696E 
 4490      7400
 4491              	.LASF69:
 4492 058d 53345F44 		.ascii	"S4_DETECTED\000"
 4492      45544543 
 4492      54454400 
 4493              	.LASF4:
 4494 0599 6C6F6E67 		.ascii	"long int\000"
 4494      20696E74 
 4494      00
 4495              	.LASF97:
 4496 05a2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4496      52784275 
 4496      66666572 
 4496      00
 4497              	.LASF99:
 4498 05af 74735F75 		.ascii	"ts_update\000"
 4498      70646174 
 4498      6500
 4499              	.LASF57:
 4500 05b9 466F7277 		.ascii	"Forward\000"
 4500      61726400 
 4501              	.LASF122:
 4502 05c1 746F7461 		.ascii	"totalMilliseconds\000"
 4502      6C4D696C 
 4502      6C697365 
 4502      636F6E64 
 4502      7300
 4503              	.LASF35:
 4504 05d3 67325F79 		.ascii	"g2_ypos\000"
 4504      706F7300 
 4505              	.LASF90:
 4506 05db 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4506      546F4E65 
 4506      7874496E 
 4506      73747275 
 4506      6374696F 
 4507              	.LASF41:
 4508 05f1 4F726965 		.ascii	"OrientationState\000"
 4508      6E746174 
 4508      696F6E53 
 4508      74617465 
 4508      00
 4509              	.LASF38:
 4510 0602 446F776E 		.ascii	"Down\000"
 4510      00
 4511              	.LASF40:
 4512 0607 52696768 		.ascii	"Right\000"
 4512      7400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 101


 4513              	.LASF31:
 4514 060d 67315F79 		.ascii	"g1_ypos\000"
 4514      706F7300 
 4515              	.LASF117:
 4516 0615 63757272 		.ascii	"currentDirection\000"
 4516      656E7444 
 4516      69726563 
 4516      74696F6E 
 4516      00
 4517              	.LASF132:
 4518 0626 75547572 		.ascii	"uTurnStartedFlag\000"
 4518      6E537461 
 4518      72746564 
 4518      466C6167 
 4518      00
 4519              	.LASF143:
 4520 0637 6C617374 		.ascii	"lastDirectionAfter180\000"
 4520      44697265 
 4520      6374696F 
 4520      6E416674 
 4520      65723138 
 4521              	.LASF10:
 4522 064d 73697A65 		.ascii	"sizetype\000"
 4522      74797065 
 4522      00
 4523              	.LASF5:
 4524 0656 6C6F6E67 		.ascii	"long unsigned int\000"
 4524      20756E73 
 4524      69676E65 
 4524      6420696E 
 4524      7400
 4525              	.LASF128:
 4526 0668 73746F70 		.ascii	"stopBuffer\000"
 4526      42756666 
 4526      657200
 4527              	.LASF133:
 4528 0673 75547572 		.ascii	"uTurnFinishedFlag\000"
 4528      6E46696E 
 4528      69736865 
 4528      64466C61 
 4528      6700
 4529              	.LASF13:
 4530 0685 696E7433 		.ascii	"int32_t\000"
 4530      325F7400 
 4531              	.LASF23:
 4532 068d 726F626F 		.ascii	"robot_xpos\000"
 4532      745F7870 
 4532      6F7300
 4533              	.LASF113:
 4534 0698 656E7472 		.ascii	"entry\000"
 4534      7900
 4535              	.LASF56:
 4536 069e 526F626F 		.ascii	"RobotMovement\000"
 4536      744D6F76 
 4536      656D656E 
 4536      7400
 4537              	.LASF1:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 102


 4538 06ac 756E7369 		.ascii	"unsigned char\000"
 4538      676E6564 
 4538      20636861 
 4538      7200
 4539              	.LASF140:
 4540 06ba 73746F70 		.ascii	"stoppedAfterTurn\000"
 4540      70656441 
 4540      66746572 
 4540      5475726E 
 4540      00
 4541              	.LASF112:
 4542 06cb 6C696E65 		.ascii	"line\000"
 4542      00
 4543              	.LASF82:
 4544 06d0 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4544      756C6174 
 4544      65446973 
 4544      74616E63 
 4544      65546F54 
 4545              	.LASF61:
 4546 06ea 41646A75 		.ascii	"AdjustToTheRight\000"
 4546      7374546F 
 4546      54686552 
 4546      69676874 
 4546      00
 4547              	.LASF62:
 4548 06fb 53746F70 		.ascii	"Stop\000"
 4548      00
 4549              	.LASF91:
 4550 0700 47657449 		.ascii	"GetInstructionAtIndex\000"
 4550      6E737472 
 4550      75637469 
 4550      6F6E4174 
 4550      496E6465 
 4551              	.LASF98:
 4552 0716 74735F65 		.ascii	"ts_enc\000"
 4552      6E6300
 4553              	.LASF105:
 4554 071d 666C6167 		.ascii	"flag_ts_display\000"
 4554      5F74735F 
 4554      64697370 
 4554      6C617900 
 4555              	.LASF49:
 4556 072d 536B6970 		.ascii	"Skip\000"
 4556      00
 4557              	.LASF111:
 4558 0732 64697370 		.ascii	"displaystring\000"
 4558      6C617973 
 4558      7472696E 
 4558      6700
 4559              	.LASF43:
 4560 0740 476F466F 		.ascii	"GoForward\000"
 4560      72776172 
 4560      6400
 4561              	.LASF70:
 4562 074a 53355F44 		.ascii	"S5_DETECTED\000"
 4562      45544543 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 103


 4562      54454400 
 4563              	.LASF0:
 4564 0756 7369676E 		.ascii	"signed char\000"
 4564      65642063 
 4564      68617200 
 4565              	.LASF138:
 4566 0762 63757272 		.ascii	"currentRow\000"
 4566      656E7452 
 4566      6F7700
 4567              	.LASF3:
 4568 076d 73686F72 		.ascii	"short unsigned int\000"
 4568      7420756E 
 4568      7369676E 
 4568      65642069 
 4568      6E7400
 4569              	.LASF25:
 4570 0780 726F626F 		.ascii	"robot_orientation\000"
 4570      745F6F72 
 4570      69656E74 
 4570      6174696F 
 4570      6E00
 4571              	.LASF73:
 4572 0792 6D61696E 		.ascii	"main\000"
 4572      00
 4573              	.LASF121:
 4574 0797 63757272 		.ascii	"currentInstruction\000"
 4574      656E7449 
 4574      6E737472 
 4574      75637469 
 4574      6F6E00
 4575              	.LASF60:
 4576 07aa 41646A75 		.ascii	"AdjustToTheLeft\000"
 4576      7374546F 
 4576      5468654C 
 4576      65667400 
 4577              	.LASF66:
 4578 07ba 4261636B 		.ascii	"Backward\000"
 4578      77617264 
 4578      00
 4579              	.LASF14:
 4580 07c3 75696E74 		.ascii	"uint8\000"
 4580      3800
 4581              	.LASF20:
 4582 07c9 646F7562 		.ascii	"double\000"
 4582      6C6500
 4583              	.LASF139:
 4584 07d0 63757272 		.ascii	"currentCol\000"
 4584      656E7443 
 4584      6F6C00
 4585              	.LASF85:
 4586 07db 746F7461 		.ascii	"totalBlockSize\000"
 4586      6C426C6F 
 4586      636B5369 
 4586      7A6500
 4587              	.LASF26:
 4588 07ea 67305F78 		.ascii	"g0_xpos\000"
 4588      706F7300 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjqyTod.s 			page 104


 4589              	.LASF126:
 4590 07f2 74696D65 		.ascii	"timerInt\000"
 4590      72496E74 
 4590      00
 4591              	.LASF108:
 4592 07fb 666C6167 		.ascii	"flag_KB_string\000"
 4592      5F4B425F 
 4592      73747269 
 4592      6E6700
 4593              	.LASF32:
 4594 080a 67315F73 		.ascii	"g1_speed\000"
 4594      70656564 
 4594      00
 4595              	.LASF53:
 4596 0813 69676E6F 		.ascii	"ignoreL\000"
 4596      72654C00 
 4597              	.LASF54:
 4598 081b 69676E6F 		.ascii	"ignoreR\000"
 4598      72655200 
 4599              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
