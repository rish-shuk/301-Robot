ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 01       		.byte	1
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 01       		.byte	1
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Down;
  46:main.c        **** enum OrientationState previousOrientation = Down;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** // --- YIPPE
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s3 = 0;
  51:main.c        **** uint8 s4 = 0;
  52:main.c        **** uint8 s5 = 0;
  53:main.c        **** uint8 s6 = 0;
  54:main.c        **** //* ========================================
  55:main.c        **** // Calculating Distance
  56:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  57:main.c        **** 
  58:main.c        **** uint32 totalMilliseconds = 0;
  59:main.c        **** float totalDistance = 0; // in mm
  60:main.c        **** //* ========================================
  61:main.c        **** char buffer[69];
  62:main.c        **** int quadDec2Count = 0;
  63:main.c        **** int timerInt = 0;
  64:main.c        **** int keepLedOn = 0;
  65:main.c        **** uint32 stopBuffer = 0;
  66:main.c        **** 
  67:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  68:main.c        **** 
  69:main.c        **** CY_ISR (speedTimer) {
 200              		.loc 1 69 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 6


 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  70:main.c        ****     timerInt = 1;
 213              		.loc 1 70 0
 214 0006 364B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  71:main.c        ****     //quadDec_M1 used for turning macros
  72:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 72 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 334B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  73:main.c        ****     
  74:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 74 0
 224 0018 334B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 17D0     		beq	.L2
  75:main.c        ****         currentDirection == waitForTurn || 
 228              		.loc 1 75 0 discriminator 1
 229 0020 314B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == waitForTurn || 
 231              		.loc 1 74 0 discriminator 1
 232 0024 072B     		cmp	r3, #7
 233 0026 13D0     		beq	.L2
  76:main.c        ****         currentDirection == waitForLeftTurn ||
 234              		.loc 1 76 0
 235 0028 2F4B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForTurn || 
 237              		.loc 1 75 0
 238 002c 092B     		cmp	r3, #9
 239 002e 0FD0     		beq	.L2
  77:main.c        ****         currentDirection == waitForRightTurn ||
 240              		.loc 1 77 0
 241 0030 2D4B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == waitForLeftTurn ||
 243              		.loc 1 76 0
 244 0034 082B     		cmp	r3, #8
 245 0036 0BD0     		beq	.L2
  78:main.c        ****         currentDirection == ForwardAfterTurn ||
 246              		.loc 1 78 0
 247 0038 2B4B     		ldr	r3, .L4+24
 248 003a 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == waitForRightTurn ||
 249              		.loc 1 77 0
 250 003c 0A2B     		cmp	r3, #10
 251 003e 07D0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 252              		.loc 1 79 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 7


 253 0040 294B     		ldr	r3, .L4+24
 254 0042 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == ForwardAfterTurn ||
 255              		.loc 1 78 0
 256 0044 032B     		cmp	r3, #3
 257 0046 03D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight) &&
 258              		.loc 1 80 0
 259 0048 274B     		ldr	r3, .L4+24
 260 004a 1B68     		ldr	r3, [r3]
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 261              		.loc 1 79 0
 262 004c 042B     		cmp	r3, #4
 263 004e 34D1     		bne	.L3
 264              	.L2:
  81:main.c        ****         quadDec2Count != 0) {
 265              		.loc 1 81 0
 266 0050 244B     		ldr	r3, .L4+20
 267 0052 1B68     		ldr	r3, [r3]
  80:main.c        ****         currentDirection == AdjustToTheRight) &&
 268              		.loc 1 80 0
 269 0054 002B     		cmp	r3, #0
 270 0056 30D0     		beq	.L3
 271              	.LBB2:
  82:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  83:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 272              		.loc 1 83 0
 273 0058 224B     		ldr	r3, .L4+20
 274 005a 1B68     		ldr	r3, [r3]
 275 005c 002B     		cmp	r3, #0
 276 005e B8BF     		it	lt
 277 0060 5B42     		rsblt	r3, r3, #0
 278 0062 1846     		mov	r0, r3
 279 0064 FFF7FEFF 		bl	__aeabi_i2d
 280 0068 19A3     		adr	r3, .L4
 281 006a D3E90023 		ldrd	r2, [r3]
 282 006e FFF7FEFF 		bl	__aeabi_dmul
 283 0072 0346     		mov	r3, r0
 284 0074 0C46     		mov	r4, r1
 285 0076 1846     		mov	r0, r3
 286 0078 2146     		mov	r1, r4
 287 007a 17A3     		adr	r3, .L4+8
 288 007c D3E90023 		ldrd	r2, [r3]
 289 0080 FFF7FEFF 		bl	__aeabi_dmul
 290 0084 0346     		mov	r3, r0
 291 0086 0C46     		mov	r4, r1
 292 0088 1846     		mov	r0, r3
 293 008a 2146     		mov	r1, r4
 294 008c 4FF00002 		mov	r2, #0
 295 0090 164B     		ldr	r3, .L4+28
 296 0092 FFF7FEFF 		bl	__aeabi_ddiv
 297 0096 0346     		mov	r3, r0
 298 0098 0C46     		mov	r4, r1
 299 009a 1846     		mov	r0, r3
 300 009c 2146     		mov	r1, r4
 301 009e FFF7FEFF 		bl	__aeabi_d2f
 302 00a2 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 8


 303 00a4 7B60     		str	r3, [r7, #4]	@ float
  84:main.c        ****         
  85:main.c        ****         totalDistance = totalDistance + newDistance;
 304              		.loc 1 85 0
 305 00a6 124B     		ldr	r3, .L4+32
 306 00a8 1B68     		ldr	r3, [r3]	@ float
 307 00aa 7968     		ldr	r1, [r7, #4]	@ float
 308 00ac 1846     		mov	r0, r3
 309 00ae FFF7FEFF 		bl	__aeabi_fadd
 310 00b2 0346     		mov	r3, r0
 311 00b4 1A46     		mov	r2, r3
 312 00b6 0E4B     		ldr	r3, .L4+32
 313 00b8 1A60     		str	r2, [r3]	@ float
 314              	.L3:
 315              	.LBE2:
  86:main.c        ****     }
  87:main.c        ****     
  88:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 316              		.loc 1 88 0
 317 00ba 0020     		movs	r0, #0
 318 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  89:main.c        ****     QuadDec_M2_Start(); // restart counter
 319              		.loc 1 89 0
 320 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  90:main.c        ****     
  91:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 321              		.loc 1 91 0
 322 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  92:main.c        **** }
 323              		.loc 1 92 0
 324 00c8 00BF     		nop
 325 00ca 0C37     		adds	r7, r7, #12
 326              		.cfi_def_cfa_offset 12
 327 00cc BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 00ce 90BD     		pop	{r4, r7, pc}
 331              	.L5:
 332              		.align	3
 333              	.L4:
 334 00d0 182D4454 		.word	1413754136
 335 00d4 FB210940 		.word	1074340347
 336 00d8 00000000 		.word	0
 337 00dc 00205040 		.word	1078992896
 338 00e0 00000000 		.word	timerInt
 339 00e4 00000000 		.word	quadDec2Count
 340 00e8 00000000 		.word	currentDirection
 341 00ec 00806C40 		.word	1080852480
 342 00f0 00000000 		.word	totalDistance
 343              		.cfi_endproc
 344              	.LFE64:
 345              		.size	speedTimer, .-speedTimer
 346              		.section	.text.S3_DETECTED,"ax",%progbits
 347              		.align	2
 348              		.global	S3_DETECTED
 349              		.thumb
 350              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 9


 351              		.type	S3_DETECTED, %function
 352              	S3_DETECTED:
 353              	.LFB65:
  93:main.c        **** 
  94:main.c        **** CY_ISR(S3_DETECTED) {
 354              		.loc 1 94 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359 0000 80B4     		push	{r7}
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 7, -4
 362 0002 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
  95:main.c        ****     // Sensor has detected WHITE
  96:main.c        ****     s3 = 1; // , Black = 0, White = 1
 364              		.loc 1 96 0
 365 0004 034B     		ldr	r3, .L7
 366 0006 0122     		movs	r2, #1
 367 0008 1A70     		strb	r2, [r3]
  97:main.c        ****     //LED_Write(1u);
  98:main.c        **** }
 368              		.loc 1 98 0
 369 000a 00BF     		nop
 370 000c BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 000e 80BC     		pop	{r7}
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0010 7047     		bx	lr
 377              	.L8:
 378 0012 00BF     		.align	2
 379              	.L7:
 380 0014 00000000 		.word	s3
 381              		.cfi_endproc
 382              	.LFE65:
 383              		.size	S3_DETECTED, .-S3_DETECTED
 384              		.section	.text.S4_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S4_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S4_DETECTED, %function
 390              	S4_DETECTED:
 391              	.LFB66:
  99:main.c        **** 
 100:main.c        **** CY_ISR(S4_DETECTED) {
 392              		.loc 1 100 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 10


 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 101:main.c        ****     // Sensor has detected WHITE
 102:main.c        ****     s4 = 1; // , Black = 0, White = 1
 402              		.loc 1 102 0
 403 0004 034B     		ldr	r3, .L10
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 103:main.c        ****     //LED_Write(1u);
 104:main.c        **** }
 406              		.loc 1 104 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L11:
 416 0012 00BF     		.align	2
 417              	.L10:
 418 0014 00000000 		.word	s4
 419              		.cfi_endproc
 420              	.LFE66:
 421              		.size	S4_DETECTED, .-S4_DETECTED
 422              		.section	.text.S5_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S5_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S5_DETECTED, %function
 428              	S5_DETECTED:
 429              	.LFB67:
 105:main.c        **** 
 106:main.c        **** CY_ISR(S5_DETECTED) {
 430              		.loc 1 106 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 107:main.c        ****     // Sensor has detected WHITE
 108:main.c        ****     s5 = 1; // , Black = 0, White = 1
 440              		.loc 1 108 0
 441 0004 034B     		ldr	r3, .L13
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     //LED_Write(1u);
 110:main.c        **** }
 444              		.loc 1 110 0
 445 000a 00BF     		nop
 446 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 11


 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L14:
 454 0012 00BF     		.align	2
 455              	.L13:
 456 0014 00000000 		.word	s5
 457              		.cfi_endproc
 458              	.LFE67:
 459              		.size	S5_DETECTED, .-S5_DETECTED
 460              		.section	.text.S6_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S6_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S6_DETECTED, %function
 466              	S6_DETECTED:
 467              	.LFB68:
 111:main.c        **** 
 112:main.c        **** CY_ISR(S6_DETECTED) {
 468              		.loc 1 112 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 113:main.c        ****     // Sensor has detected WHITE
 114:main.c        ****     s6 = 1; // , Black = 0, White = 1
 478              		.loc 1 114 0
 479 0004 034B     		ldr	r3, .L16
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 115:main.c        ****     //LED_Write(1u);
 116:main.c        **** }
 482              		.loc 1 116 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
 490 0010 7047     		bx	lr
 491              	.L17:
 492 0012 00BF     		.align	2
 493              	.L16:
 494 0014 00000000 		.word	s6
 495              		.cfi_endproc
 496              	.LFE68:
 497              		.size	S6_DETECTED, .-S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 12


 498              		.section	.text.TIMER_FINISH,"ax",%progbits
 499              		.align	2
 500              		.global	TIMER_FINISH
 501              		.thumb
 502              		.thumb_func
 503              		.type	TIMER_FINISH, %function
 504              	TIMER_FINISH:
 505              	.LFB69:
 117:main.c        **** 
 118:main.c        **** CY_ISR(TIMER_FINISH) {
 506              		.loc 1 118 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 119:main.c        ****     if (currentDirection == Stop) {
 516              		.loc 1 119 0
 517 0004 0A4B     		ldr	r3, .L21
 518 0006 1B68     		ldr	r3, [r3]
 519 0008 052B     		cmp	r3, #5
 520 000a 05D1     		bne	.L19
 120:main.c        ****         stopBuffer = stopBuffer + 1;
 521              		.loc 1 120 0
 522 000c 094B     		ldr	r3, .L21+4
 523 000e 1B68     		ldr	r3, [r3]
 524 0010 0133     		adds	r3, r3, #1
 525 0012 084A     		ldr	r2, .L21+4
 526 0014 1360     		str	r3, [r2]
 527 0016 02E0     		b	.L20
 528              	.L19:
 121:main.c        ****     } else {
 122:main.c        ****         stopBuffer = 0;
 529              		.loc 1 122 0
 530 0018 064B     		ldr	r3, .L21+4
 531 001a 0022     		movs	r2, #0
 532 001c 1A60     		str	r2, [r3]
 533              	.L20:
 123:main.c        ****     }
 124:main.c        ****     SetRobotMovement(); 
 534              		.loc 1 124 0
 535 001e FFF7FEFF 		bl	SetRobotMovement
 125:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 536              		.loc 1 125 0
 537 0022 FFF7FEFF 		bl	ResetSensorFlags
 126:main.c        ****     Timer_LED_ReadStatusRegister();
 538              		.loc 1 126 0
 539 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 127:main.c        **** }
 540              		.loc 1 127 0
 541 002a 00BF     		nop
 542 002c 80BD     		pop	{r7, pc}
 543              	.L22:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 13


 544 002e 00BF     		.align	2
 545              	.L21:
 546 0030 00000000 		.word	currentDirection
 547 0034 00000000 		.word	stopBuffer
 548              		.cfi_endproc
 549              	.LFE69:
 550              		.size	TIMER_FINISH, .-TIMER_FINISH
 551              		.section	.text.main,"ax",%progbits
 552              		.align	2
 553              		.global	main
 554              		.thumb
 555              		.thumb_func
 556              		.type	main, %function
 557              	main:
 558              	.LFB70:
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** int main()
 131:main.c        **** {
 559              		.loc 1 131 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 569              		.loc 1 133 0
 570              		.syntax unified
 571              	@ 133 "main.c" 1
 572 0004 62B6     		CPSIE   i
 573              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 574              		.loc 1 134 0
 575              		.thumb
 576              		.syntax unified
 577 0006 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 578              		.loc 1 135 0
 579 000a FFF7FEFF 		bl	init
 136:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 580              		.loc 1 136 0
 581 000e 1A48     		ldr	r0, .L27
 582 0010 FFF7FEFF 		bl	isr_speed_StartEx
 137:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 583              		.loc 1 137 0
 584 0014 1948     		ldr	r0, .L27+4
 585 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 138:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 586              		.loc 1 138 0
 587 001a 1948     		ldr	r0, .L27+8
 588 001c FFF7FEFF 		bl	S3_detected_StartEx
 139:main.c        ****     S4_detected_StartEx(S4_DETECTED);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 14


 589              		.loc 1 139 0
 590 0020 1848     		ldr	r0, .L27+12
 591 0022 FFF7FEFF 		bl	S4_detected_StartEx
 140:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 592              		.loc 1 140 0
 593 0026 1848     		ldr	r0, .L27+16
 594 0028 FFF7FEFF 		bl	S5_detected_StartEx
 141:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 595              		.loc 1 141 0
 596 002c 1748     		ldr	r0, .L27+20
 597 002e FFF7FEFF 		bl	S6_detected_StartEx
 142:main.c        ****     Timer_LED_Start();
 598              		.loc 1 142 0
 599 0032 FFF7FEFF 		bl	Timer_LED_Start
 143:main.c        **** 
 144:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
 600              		.loc 1 144 0
 601 0036 1648     		ldr	r0, .L27+24
 602 0038 FFF7FEFF 		bl	findPath
 145:main.c        ****     GetNextStep();
 603              		.loc 1 145 0
 604 003c FFF7FEFF 		bl	GetNextStep
 146:main.c        **** 
 147:main.c        **** // ------USB SETUP ----------------    
 148:main.c        **** #ifdef USE_USB    
 149:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 605              		.loc 1 149 0
 606 0040 0121     		movs	r1, #1
 607 0042 0020     		movs	r0, #0
 608 0044 FFF7FEFF 		bl	USBUART_Start
 150:main.c        **** #endif        
 151:main.c        ****     RF_BT_SELECT_Write(0);
 609              		.loc 1 151 0
 610 0048 0020     		movs	r0, #0
 611 004a FFF7FEFF 		bl	RF_BT_SELECT_Write
 612              	.L26:
 152:main.c        ****     
 153:main.c        ****     //usbPutString("Initialised UART");
 154:main.c        ****     for(;;)
 155:main.c        ****     {
 156:main.c        ****         if(timerInt == 1) {
 613              		.loc 1 156 0
 614 004e 114B     		ldr	r3, .L27+28
 615 0050 1B68     		ldr	r3, [r3]
 616 0052 012B     		cmp	r3, #1
 617 0054 08D1     		bne	.L24
 157:main.c        ****             timerInt = 0;
 618              		.loc 1 157 0
 619 0056 0F4B     		ldr	r3, .L27+28
 620 0058 0022     		movs	r2, #0
 621 005a 1A60     		str	r2, [r3]
 158:main.c        ****             // calculate RPM of M2
 159:main.c        ****             quadCountToRPM(quadDec2Count);
 622              		.loc 1 159 0
 623 005c 0E4B     		ldr	r3, .L27+32
 624 005e 1B68     		ldr	r3, [r3]
 625 0060 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 15


 626 0062 1846     		mov	r0, r3
 627 0064 FFF7FEFF 		bl	quadCountToRPM
 628              	.L24:
 160:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 161:main.c        ****             //usbPutString(buffer);
 162:main.c        ****             //usbPutString(" ");
 163:main.c        ****         }
 164:main.c        ****         //handle_usb();
 165:main.c        ****         if (flag_KB_string == 1)
 629              		.loc 1 165 0
 630 0068 0C4B     		ldr	r3, .L27+36
 631 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 632 006c 012B     		cmp	r3, #1
 633 006e EED1     		bne	.L26
 166:main.c        ****         {
 167:main.c        ****             //usbPutString("Total Distance: ");
 168:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 169:main.c        ****             //usbPutString(buffer);
 170:main.c        ****             flag_KB_string = 0;
 634              		.loc 1 170 0
 635 0070 0A4B     		ldr	r3, .L27+36
 636 0072 0022     		movs	r2, #0
 637 0074 1A70     		strb	r2, [r3]
 171:main.c        ****         }           
 172:main.c        ****     }
 638              		.loc 1 172 0
 639 0076 EAE7     		b	.L26
 640              	.L28:
 641              		.align	2
 642              	.L27:
 643 0078 00000000 		.word	speedTimer
 644 007c 00000000 		.word	TIMER_FINISH
 645 0080 00000000 		.word	S3_DETECTED
 646 0084 00000000 		.word	S4_DETECTED
 647 0088 00000000 		.word	S5_DETECTED
 648 008c 00000000 		.word	S6_DETECTED
 649 0090 00000000 		.word	map
 650 0094 00000000 		.word	timerInt
 651 0098 00000000 		.word	quadDec2Count
 652 009c 00000000 		.word	flag_KB_string
 653              		.cfi_endproc
 654              	.LFE70:
 655              		.size	main, .-main
 656              		.global	__aeabi_fmul
 657              		.global	__aeabi_f2iz
 658              		.section	.text.quadCountToRPM,"ax",%progbits
 659              		.align	2
 660              		.global	quadCountToRPM
 661              		.thumb
 662              		.thumb_func
 663              		.type	quadCountToRPM, %function
 664              	quadCountToRPM:
 665              	.LFB71:
 173:main.c        ****     return 0;
 174:main.c        **** }
 175:main.c        **** 
 176:main.c        **** // Calculations
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 16


 177:main.c        **** //* ========================================
 178:main.c        **** int16 quadCountToRPM(uint16 count)
 179:main.c        **** {
 666              		.loc 1 179 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 90B5     		push	{r4, r7, lr}
 671              		.cfi_def_cfa_offset 12
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 85B0     		sub	sp, sp, #20
 676              		.cfi_def_cfa_offset 32
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 0346     		mov	r3, r0
 680 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 180:main.c        ****     float cps = count/57.00;
 681              		.loc 1 180 0
 682 000a FB88     		ldrh	r3, [r7, #6]
 683 000c 1846     		mov	r0, r3
 684 000e FFF7FEFF 		bl	__aeabi_i2d
 685 0012 4FF00002 		mov	r2, #0
 686 0016 0D4B     		ldr	r3, .L31
 687 0018 FFF7FEFF 		bl	__aeabi_ddiv
 688 001c 0346     		mov	r3, r0
 689 001e 0C46     		mov	r4, r1
 690 0020 1846     		mov	r0, r3
 691 0022 2146     		mov	r1, r4
 692 0024 FFF7FEFF 		bl	__aeabi_d2f
 693 0028 0346     		mov	r3, r0
 694 002a FB60     		str	r3, [r7, #12]	@ float
 181:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 695              		.loc 1 181 0
 696 002c 0849     		ldr	r1, .L31+4
 697 002e F868     		ldr	r0, [r7, #12]	@ float
 698 0030 FFF7FEFF 		bl	__aeabi_fmul
 699 0034 0346     		mov	r3, r0
 700 0036 1846     		mov	r0, r3
 701 0038 FFF7FEFF 		bl	__aeabi_f2iz
 702 003c 0346     		mov	r3, r0
 703 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 182:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 183:main.c        ****     return rpm;
 704              		.loc 1 183 0
 705 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 184:main.c        ****     //usbPutString(buffer);
 185:main.c        ****     //usbPutString("rpm ");
 186:main.c        **** }
 706              		.loc 1 186 0
 707 0044 1846     		mov	r0, r3
 708 0046 1437     		adds	r7, r7, #20
 709              		.cfi_def_cfa_offset 12
 710 0048 BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 17


 713 004a 90BD     		pop	{r4, r7, pc}
 714              	.L32:
 715              		.align	2
 716              	.L31:
 717 004c 00804C40 		.word	1078755328
 718 0050 00007041 		.word	1097859072
 719              		.cfi_endproc
 720              	.LFE71:
 721              		.size	quadCountToRPM, .-quadCountToRPM
 722              		.section	.text.ResetSensorFlags,"ax",%progbits
 723              		.align	2
 724              		.global	ResetSensorFlags
 725              		.thumb
 726              		.thumb_func
 727              		.type	ResetSensorFlags, %function
 728              	ResetSensorFlags:
 729              	.LFB72:
 187:main.c        **** 
 188:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 189:main.c        **** void ResetSensorFlags() {
 730              		.loc 1 189 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735 0000 80B4     		push	{r7}
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 0002 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 190:main.c        ****     s3 = 0;
 740              		.loc 1 190 0
 741 0004 074B     		ldr	r3, .L34
 742 0006 0022     		movs	r2, #0
 743 0008 1A70     		strb	r2, [r3]
 191:main.c        ****     s4 = 0;
 744              		.loc 1 191 0
 745 000a 074B     		ldr	r3, .L34+4
 746 000c 0022     		movs	r2, #0
 747 000e 1A70     		strb	r2, [r3]
 192:main.c        ****     s5 = 0;
 748              		.loc 1 192 0
 749 0010 064B     		ldr	r3, .L34+8
 750 0012 0022     		movs	r2, #0
 751 0014 1A70     		strb	r2, [r3]
 193:main.c        ****     s6 = 0;
 752              		.loc 1 193 0
 753 0016 064B     		ldr	r3, .L34+12
 754 0018 0022     		movs	r2, #0
 755 001a 1A70     		strb	r2, [r3]
 194:main.c        **** }
 756              		.loc 1 194 0
 757 001c 00BF     		nop
 758 001e BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 0020 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 18


 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 0022 7047     		bx	lr
 765              	.L35:
 766              		.align	2
 767              	.L34:
 768 0024 00000000 		.word	s3
 769 0028 00000000 		.word	s4
 770 002c 00000000 		.word	s5
 771 0030 00000000 		.word	s6
 772              		.cfi_endproc
 773              	.LFE72:
 774              		.size	ResetSensorFlags, .-ResetSensorFlags
 775              		.global	xBlocksize
 776              		.data
 777 004e 0000     		.align	2
 778              		.type	xBlocksize, %object
 779              		.size	xBlocksize, 4
 780              	xBlocksize:
 781 0050 0000FF42 		.word	1124007936
 782              		.global	yBlocksize
 783              		.align	2
 784              		.type	yBlocksize, %object
 785              		.size	yBlocksize, 4
 786              	yBlocksize:
 787 0054 0000A042 		.word	1117782016
 788              		.global	currentRow
 789              		.type	currentRow, %object
 790              		.size	currentRow, 1
 791              	currentRow:
 792 0058 01       		.byte	1
 793              		.global	currentCol
 794              		.type	currentCol, %object
 795              		.size	currentCol, 1
 796              	currentCol:
 797 0059 01       		.byte	1
 798              		.section	.text.GetNextStep,"ax",%progbits
 799              		.align	2
 800              		.global	GetNextStep
 801              		.thumb
 802              		.thumb_func
 803              		.type	GetNextStep, %function
 804              	GetNextStep:
 805              	.LFB73:
 195:main.c        **** 
 196:main.c        **** float xBlocksize = 127.5; // 127.5
 197:main.c        **** float yBlocksize = 80; // 80
 198:main.c        **** uint8 currentRow = 1;
 199:main.c        **** uint8 currentCol = 1;
 200:main.c        **** 
 201:main.c        **** enum DirectionState GetNextStep() {
 806              		.loc 1 201 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 19


 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 202:main.c        ****     enum DirectionState directionState;
 203:main.c        ****     // Determines robot movement and orientation to follow optimal path
 204:main.c        ****     // enum DirectionState directionState = Stop;
 205:main.c        ****     previousOrientation = currentOrientation;
 818              		.loc 1 205 0
 819 0006 AB4B     		ldr	r3, .L75
 820 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 821 000a AB4B     		ldr	r3, .L75+4
 822 000c 1A70     		strb	r2, [r3]
 206:main.c        ****     
 207:main.c        ****     if(map[currentRow][currentCol] == 9) {
 823              		.loc 1 207 0
 824 000e AB4B     		ldr	r3, .L75+8
 825 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 826 0012 1A46     		mov	r2, r3
 827 0014 AA4B     		ldr	r3, .L75+12
 828 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 0018 1846     		mov	r0, r3
 830 001a AA49     		ldr	r1, .L75+16
 831 001c 1346     		mov	r3, r2
 832 001e DB00     		lsls	r3, r3, #3
 833 0020 1344     		add	r3, r3, r2
 834 0022 5B00     		lsls	r3, r3, #1
 835 0024 1344     		add	r3, r3, r2
 836 0026 0344     		add	r3, r3, r0
 837 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 838 002c 092B     		cmp	r3, #9
 839 002e 03D1     		bne	.L37
 208:main.c        ****         directionState = Stop; // reached target
 840              		.loc 1 208 0
 841 0030 0523     		movs	r3, #5
 842 0032 7B60     		str	r3, [r7, #4]
 209:main.c        ****         return directionState;
 843              		.loc 1 209 0
 844 0034 7B68     		ldr	r3, [r7, #4]
 845 0036 22E2     		b	.L38
 846              	.L37:
 210:main.c        ****     }
 211:main.c        ****     /*
 212:main.c        ****     if (totalDistance >= (yBlocksize)) {
 213:main.c        ****         directionState = Stop;
 214:main.c        ****         return directionState;
 215:main.c        ****     }
 216:main.c        ****     */
 217:main.c        ****         
 218:main.c        ****     switch (previousOrientation) {
 847              		.loc 1 218 0
 848 0038 9F4B     		ldr	r3, .L75+4
 849 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 003c 032B     		cmp	r3, #3
 851 003e 00F21482 		bhi	.L70
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 20


 852 0042 01A2     		adr	r2, .L41
 853 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 854              		.p2align 2
 855              	.L41:
 856 0048 59000000 		.word	.L40+1
 857 004c 59010000 		.word	.L42+1
 858 0050 59020000 		.word	.L43+1
 859 0054 6D030000 		.word	.L44+1
 860              		.p2align 1
 861              	.L40:
 219:main.c        ****             case Up:
 220:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 862              		.loc 1 220 0
 863 0058 984B     		ldr	r3, .L75+8
 864 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 005c 5A1E     		subs	r2, r3, #1
 866 005e 984B     		ldr	r3, .L75+12
 867 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0062 1846     		mov	r0, r3
 869 0064 9749     		ldr	r1, .L75+16
 870 0066 1346     		mov	r3, r2
 871 0068 DB00     		lsls	r3, r3, #3
 872 006a 1344     		add	r3, r3, r2
 873 006c 5B00     		lsls	r3, r3, #1
 874 006e 1344     		add	r3, r3, r2
 875 0070 0344     		add	r3, r3, r0
 876 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 877 0076 082B     		cmp	r3, #8
 878 0078 10D0     		beq	.L45
 879              		.loc 1 220 0 is_stmt 0 discriminator 1
 880 007a 904B     		ldr	r3, .L75+8
 881 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 007e 5A1E     		subs	r2, r3, #1
 883 0080 8F4B     		ldr	r3, .L75+12
 884 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 0084 1846     		mov	r0, r3
 886 0086 8F49     		ldr	r1, .L75+16
 887 0088 1346     		mov	r3, r2
 888 008a DB00     		lsls	r3, r3, #3
 889 008c 1344     		add	r3, r3, r2
 890 008e 5B00     		lsls	r3, r3, #1
 891 0090 1344     		add	r3, r3, r2
 892 0092 0344     		add	r3, r3, r0
 893 0094 51F82330 		ldr	r3, [r1, r3, lsl #2]
 894 0098 092B     		cmp	r3, #9
 895 009a 0BD1     		bne	.L46
 896              	.L45:
 221:main.c        ****                     currentOrientation = Up; 
 897              		.loc 1 221 0 is_stmt 1
 898 009c 854B     		ldr	r3, .L75
 899 009e 0022     		movs	r2, #0
 900 00a0 1A70     		strb	r2, [r3]
 222:main.c        ****                     directionState = Forward;
 901              		.loc 1 222 0
 902 00a2 0023     		movs	r3, #0
 903 00a4 7B60     		str	r3, [r7, #4]
 223:main.c        ****                     currentRow--;// update position
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 21


 904              		.loc 1 223 0
 905 00a6 854B     		ldr	r3, .L75+8
 906 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907 00aa 013B     		subs	r3, r3, #1
 908 00ac DAB2     		uxtb	r2, r3
 909 00ae 834B     		ldr	r3, .L75+8
 910 00b0 1A70     		strb	r2, [r3]
 911 00b2 50E0     		b	.L47
 912              	.L46:
 224:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 913              		.loc 1 224 0
 914 00b4 814B     		ldr	r3, .L75+8
 915 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 00b8 1A46     		mov	r2, r3
 917 00ba 814B     		ldr	r3, .L75+12
 918 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 919 00be 591E     		subs	r1, r3, #1
 920 00c0 8048     		ldr	r0, .L75+16
 921 00c2 1346     		mov	r3, r2
 922 00c4 DB00     		lsls	r3, r3, #3
 923 00c6 1344     		add	r3, r3, r2
 924 00c8 5B00     		lsls	r3, r3, #1
 925 00ca 1344     		add	r3, r3, r2
 926 00cc 0B44     		add	r3, r3, r1
 927 00ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 928 00d2 082B     		cmp	r3, #8
 929 00d4 10D0     		beq	.L48
 930              		.loc 1 224 0 is_stmt 0 discriminator 1
 931 00d6 794B     		ldr	r3, .L75+8
 932 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 00da 1A46     		mov	r2, r3
 934 00dc 784B     		ldr	r3, .L75+12
 935 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 936 00e0 591E     		subs	r1, r3, #1
 937 00e2 7848     		ldr	r0, .L75+16
 938 00e4 1346     		mov	r3, r2
 939 00e6 DB00     		lsls	r3, r3, #3
 940 00e8 1344     		add	r3, r3, r2
 941 00ea 5B00     		lsls	r3, r3, #1
 942 00ec 1344     		add	r3, r3, r2
 943 00ee 0B44     		add	r3, r3, r1
 944 00f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 945 00f4 092B     		cmp	r3, #9
 946 00f6 05D1     		bne	.L49
 947              	.L48:
 225:main.c        ****                     currentOrientation = Left;
 948              		.loc 1 225 0 is_stmt 1
 949 00f8 6E4B     		ldr	r3, .L75
 950 00fa 0222     		movs	r2, #2
 951 00fc 1A70     		strb	r2, [r3]
 226:main.c        ****                     directionState = waitForLeftTurn;
 952              		.loc 1 226 0
 953 00fe 0923     		movs	r3, #9
 954 0100 7B60     		str	r3, [r7, #4]
 955 0102 28E0     		b	.L47
 956              	.L49:
 227:main.c        ****                     //currentRow--;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 22


 228:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 957              		.loc 1 228 0
 958 0104 6D4B     		ldr	r3, .L75+8
 959 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0108 1A46     		mov	r2, r3
 961 010a 6D4B     		ldr	r3, .L75+12
 962 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 010e 591C     		adds	r1, r3, #1
 964 0110 6C48     		ldr	r0, .L75+16
 965 0112 1346     		mov	r3, r2
 966 0114 DB00     		lsls	r3, r3, #3
 967 0116 1344     		add	r3, r3, r2
 968 0118 5B00     		lsls	r3, r3, #1
 969 011a 1344     		add	r3, r3, r2
 970 011c 0B44     		add	r3, r3, r1
 971 011e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 972 0122 082B     		cmp	r3, #8
 973 0124 11D0     		beq	.L50
 974              		.loc 1 228 0 is_stmt 0 discriminator 1
 975 0126 654B     		ldr	r3, .L75+8
 976 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 012a 1A46     		mov	r2, r3
 978 012c 644B     		ldr	r3, .L75+12
 979 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0130 591C     		adds	r1, r3, #1
 981 0132 6448     		ldr	r0, .L75+16
 982 0134 1346     		mov	r3, r2
 983 0136 DB00     		lsls	r3, r3, #3
 984 0138 1344     		add	r3, r3, r2
 985 013a 5B00     		lsls	r3, r3, #1
 986 013c 1344     		add	r3, r3, r2
 987 013e 0B44     		add	r3, r3, r1
 988 0140 50F82330 		ldr	r3, [r0, r3, lsl #2]
 989 0144 092B     		cmp	r3, #9
 990 0146 40F09281 		bne	.L71
 991              	.L50:
 229:main.c        ****                     currentOrientation = Right;
 992              		.loc 1 229 0 is_stmt 1
 993 014a 5A4B     		ldr	r3, .L75
 994 014c 0322     		movs	r2, #3
 995 014e 1A70     		strb	r2, [r3]
 230:main.c        ****                     directionState = waitForRightTurn;
 996              		.loc 1 230 0
 997 0150 0823     		movs	r3, #8
 998 0152 7B60     		str	r3, [r7, #4]
 231:main.c        ****                     //currentRow++; // update position
 232:main.c        ****                 }
 233:main.c        ****                 break;
 999              		.loc 1 233 0
 1000 0154 8BE1     		b	.L71
 1001              	.L47:
 1002 0156 8AE1     		b	.L71
 1003              	.L42:
 234:main.c        ****             case Down:
 235:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 1004              		.loc 1 235 0
 1005 0158 584B     		ldr	r3, .L75+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 23


 1006 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 015c 5A1C     		adds	r2, r3, #1
 1008 015e 584B     		ldr	r3, .L75+12
 1009 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0162 1846     		mov	r0, r3
 1011 0164 5749     		ldr	r1, .L75+16
 1012 0166 1346     		mov	r3, r2
 1013 0168 DB00     		lsls	r3, r3, #3
 1014 016a 1344     		add	r3, r3, r2
 1015 016c 5B00     		lsls	r3, r3, #1
 1016 016e 1344     		add	r3, r3, r2
 1017 0170 0344     		add	r3, r3, r0
 1018 0172 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1019 0176 082B     		cmp	r3, #8
 1020 0178 10D0     		beq	.L52
 1021              		.loc 1 235 0 is_stmt 0 discriminator 1
 1022 017a 504B     		ldr	r3, .L75+8
 1023 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 017e 5A1C     		adds	r2, r3, #1
 1025 0180 4F4B     		ldr	r3, .L75+12
 1026 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 0184 1846     		mov	r0, r3
 1028 0186 4F49     		ldr	r1, .L75+16
 1029 0188 1346     		mov	r3, r2
 1030 018a DB00     		lsls	r3, r3, #3
 1031 018c 1344     		add	r3, r3, r2
 1032 018e 5B00     		lsls	r3, r3, #1
 1033 0190 1344     		add	r3, r3, r2
 1034 0192 0344     		add	r3, r3, r0
 1035 0194 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1036 0198 092B     		cmp	r3, #9
 1037 019a 0BD1     		bne	.L53
 1038              	.L52:
 236:main.c        ****                     currentOrientation = Down;
 1039              		.loc 1 236 0 is_stmt 1
 1040 019c 454B     		ldr	r3, .L75
 1041 019e 0122     		movs	r2, #1
 1042 01a0 1A70     		strb	r2, [r3]
 237:main.c        ****                     directionState = Forward;
 1043              		.loc 1 237 0
 1044 01a2 0023     		movs	r3, #0
 1045 01a4 7B60     		str	r3, [r7, #4]
 238:main.c        ****                     currentRow++;
 1046              		.loc 1 238 0
 1047 01a6 454B     		ldr	r3, .L75+8
 1048 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 01aa 0133     		adds	r3, r3, #1
 1050 01ac DAB2     		uxtb	r2, r3
 1051 01ae 434B     		ldr	r3, .L75+8
 1052 01b0 1A70     		strb	r2, [r3]
 1053 01b2 50E0     		b	.L54
 1054              	.L53:
 239:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 1055              		.loc 1 239 0
 1056 01b4 414B     		ldr	r3, .L75+8
 1057 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 01b8 1A46     		mov	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 24


 1059 01ba 414B     		ldr	r3, .L75+12
 1060 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 01be 591E     		subs	r1, r3, #1
 1062 01c0 4048     		ldr	r0, .L75+16
 1063 01c2 1346     		mov	r3, r2
 1064 01c4 DB00     		lsls	r3, r3, #3
 1065 01c6 1344     		add	r3, r3, r2
 1066 01c8 5B00     		lsls	r3, r3, #1
 1067 01ca 1344     		add	r3, r3, r2
 1068 01cc 0B44     		add	r3, r3, r1
 1069 01ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1070 01d2 082B     		cmp	r3, #8
 1071 01d4 10D0     		beq	.L55
 1072              		.loc 1 239 0 is_stmt 0 discriminator 1
 1073 01d6 394B     		ldr	r3, .L75+8
 1074 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1075 01da 1A46     		mov	r2, r3
 1076 01dc 384B     		ldr	r3, .L75+12
 1077 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 01e0 591E     		subs	r1, r3, #1
 1079 01e2 3848     		ldr	r0, .L75+16
 1080 01e4 1346     		mov	r3, r2
 1081 01e6 DB00     		lsls	r3, r3, #3
 1082 01e8 1344     		add	r3, r3, r2
 1083 01ea 5B00     		lsls	r3, r3, #1
 1084 01ec 1344     		add	r3, r3, r2
 1085 01ee 0B44     		add	r3, r3, r1
 1086 01f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1087 01f4 092B     		cmp	r3, #9
 1088 01f6 05D1     		bne	.L56
 1089              	.L55:
 240:main.c        ****                     currentOrientation = Left;
 1090              		.loc 1 240 0 is_stmt 1
 1091 01f8 2E4B     		ldr	r3, .L75
 1092 01fa 0222     		movs	r2, #2
 1093 01fc 1A70     		strb	r2, [r3]
 241:main.c        ****                     directionState = waitForRightTurn;
 1094              		.loc 1 241 0
 1095 01fe 0823     		movs	r3, #8
 1096 0200 7B60     		str	r3, [r7, #4]
 1097 0202 28E0     		b	.L54
 1098              	.L56:
 242:main.c        ****                     //currentRow--;
 243:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 1099              		.loc 1 243 0
 1100 0204 2D4B     		ldr	r3, .L75+8
 1101 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1102 0208 1A46     		mov	r2, r3
 1103 020a 2D4B     		ldr	r3, .L75+12
 1104 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 020e 591C     		adds	r1, r3, #1
 1106 0210 2C48     		ldr	r0, .L75+16
 1107 0212 1346     		mov	r3, r2
 1108 0214 DB00     		lsls	r3, r3, #3
 1109 0216 1344     		add	r3, r3, r2
 1110 0218 5B00     		lsls	r3, r3, #1
 1111 021a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 25


 1112 021c 0B44     		add	r3, r3, r1
 1113 021e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1114 0222 082B     		cmp	r3, #8
 1115 0224 11D0     		beq	.L57
 1116              		.loc 1 243 0 is_stmt 0 discriminator 1
 1117 0226 254B     		ldr	r3, .L75+8
 1118 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1119 022a 1A46     		mov	r2, r3
 1120 022c 244B     		ldr	r3, .L75+12
 1121 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 0230 591C     		adds	r1, r3, #1
 1123 0232 2448     		ldr	r0, .L75+16
 1124 0234 1346     		mov	r3, r2
 1125 0236 DB00     		lsls	r3, r3, #3
 1126 0238 1344     		add	r3, r3, r2
 1127 023a 5B00     		lsls	r3, r3, #1
 1128 023c 1344     		add	r3, r3, r2
 1129 023e 0B44     		add	r3, r3, r1
 1130 0240 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1131 0244 092B     		cmp	r3, #9
 1132 0246 40F01481 		bne	.L72
 1133              	.L57:
 244:main.c        ****                     currentOrientation = Right;
 1134              		.loc 1 244 0 is_stmt 1
 1135 024a 1A4B     		ldr	r3, .L75
 1136 024c 0322     		movs	r2, #3
 1137 024e 1A70     		strb	r2, [r3]
 245:main.c        ****                     directionState = waitForLeftTurn;
 1138              		.loc 1 245 0
 1139 0250 0923     		movs	r3, #9
 1140 0252 7B60     		str	r3, [r7, #4]
 246:main.c        ****                     //currentRow++; // update position
 247:main.c        ****                 }
 248:main.c        ****                 break;
 1141              		.loc 1 248 0
 1142 0254 0DE1     		b	.L72
 1143              	.L54:
 1144 0256 0CE1     		b	.L72
 1145              	.L43:
 249:main.c        ****             case Left:
 250:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 1146              		.loc 1 250 0
 1147 0258 184B     		ldr	r3, .L75+8
 1148 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 025c 1A46     		mov	r2, r3
 1150 025e 184B     		ldr	r3, .L75+12
 1151 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0262 591E     		subs	r1, r3, #1
 1153 0264 1748     		ldr	r0, .L75+16
 1154 0266 1346     		mov	r3, r2
 1155 0268 DB00     		lsls	r3, r3, #3
 1156 026a 1344     		add	r3, r3, r2
 1157 026c 5B00     		lsls	r3, r3, #1
 1158 026e 1344     		add	r3, r3, r2
 1159 0270 0B44     		add	r3, r3, r1
 1160 0272 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1161 0276 082B     		cmp	r3, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 26


 1162 0278 10D0     		beq	.L58
 1163              		.loc 1 250 0 is_stmt 0 discriminator 1
 1164 027a 104B     		ldr	r3, .L75+8
 1165 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 027e 1A46     		mov	r2, r3
 1167 0280 0F4B     		ldr	r3, .L75+12
 1168 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1169 0284 591E     		subs	r1, r3, #1
 1170 0286 0F48     		ldr	r0, .L75+16
 1171 0288 1346     		mov	r3, r2
 1172 028a DB00     		lsls	r3, r3, #3
 1173 028c 1344     		add	r3, r3, r2
 1174 028e 5B00     		lsls	r3, r3, #1
 1175 0290 1344     		add	r3, r3, r2
 1176 0292 0B44     		add	r3, r3, r1
 1177 0294 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1178 0298 092B     		cmp	r3, #9
 1179 029a 15D1     		bne	.L59
 1180              	.L58:
 251:main.c        ****                     currentOrientation = Left;
 1181              		.loc 1 251 0 is_stmt 1
 1182 029c 054B     		ldr	r3, .L75
 1183 029e 0222     		movs	r2, #2
 1184 02a0 1A70     		strb	r2, [r3]
 252:main.c        ****                     directionState = Forward;
 1185              		.loc 1 252 0
 1186 02a2 0023     		movs	r3, #0
 1187 02a4 7B60     		str	r3, [r7, #4]
 253:main.c        ****                     currentCol--; // update position
 1188              		.loc 1 253 0
 1189 02a6 064B     		ldr	r3, .L75+12
 1190 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 02aa 013B     		subs	r3, r3, #1
 1192 02ac DAB2     		uxtb	r2, r3
 1193 02ae 044B     		ldr	r3, .L75+12
 1194 02b0 1A70     		strb	r2, [r3]
 1195 02b2 5AE0     		b	.L60
 1196              	.L76:
 1197              		.align	2
 1198              	.L75:
 1199 02b4 00000000 		.word	currentOrientation
 1200 02b8 00000000 		.word	previousOrientation
 1201 02bc 00000000 		.word	currentRow
 1202 02c0 00000000 		.word	currentCol
 1203 02c4 00000000 		.word	map
 1204              	.L59:
 254:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1205              		.loc 1 254 0
 1206 02c8 6F4B     		ldr	r3, .L77
 1207 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 02cc 5A1E     		subs	r2, r3, #1
 1209 02ce 6F4B     		ldr	r3, .L77+4
 1210 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 02d2 1846     		mov	r0, r3
 1212 02d4 6E49     		ldr	r1, .L77+8
 1213 02d6 1346     		mov	r3, r2
 1214 02d8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 27


 1215 02da 1344     		add	r3, r3, r2
 1216 02dc 5B00     		lsls	r3, r3, #1
 1217 02de 1344     		add	r3, r3, r2
 1218 02e0 0344     		add	r3, r3, r0
 1219 02e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1220 02e6 082B     		cmp	r3, #8
 1221 02e8 10D0     		beq	.L61
 1222              		.loc 1 254 0 is_stmt 0 discriminator 1
 1223 02ea 674B     		ldr	r3, .L77
 1224 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 02ee 5A1E     		subs	r2, r3, #1
 1226 02f0 664B     		ldr	r3, .L77+4
 1227 02f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1228 02f4 1846     		mov	r0, r3
 1229 02f6 6649     		ldr	r1, .L77+8
 1230 02f8 1346     		mov	r3, r2
 1231 02fa DB00     		lsls	r3, r3, #3
 1232 02fc 1344     		add	r3, r3, r2
 1233 02fe 5B00     		lsls	r3, r3, #1
 1234 0300 1344     		add	r3, r3, r2
 1235 0302 0344     		add	r3, r3, r0
 1236 0304 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1237 0308 092B     		cmp	r3, #9
 1238 030a 05D1     		bne	.L62
 1239              	.L61:
 255:main.c        ****                     currentOrientation = Up;
 1240              		.loc 1 255 0 is_stmt 1
 1241 030c 614B     		ldr	r3, .L77+12
 1242 030e 0022     		movs	r2, #0
 1243 0310 1A70     		strb	r2, [r3]
 256:main.c        ****                     directionState = waitForRightTurn;
 1244              		.loc 1 256 0
 1245 0312 0823     		movs	r3, #8
 1246 0314 7B60     		str	r3, [r7, #4]
 1247 0316 28E0     		b	.L60
 1248              	.L62:
 257:main.c        ****                     //currentRow++; // update position
 258:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1249              		.loc 1 258 0
 1250 0318 5B4B     		ldr	r3, .L77
 1251 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 031c 5A1C     		adds	r2, r3, #1
 1253 031e 5B4B     		ldr	r3, .L77+4
 1254 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1255 0322 1846     		mov	r0, r3
 1256 0324 5A49     		ldr	r1, .L77+8
 1257 0326 1346     		mov	r3, r2
 1258 0328 DB00     		lsls	r3, r3, #3
 1259 032a 1344     		add	r3, r3, r2
 1260 032c 5B00     		lsls	r3, r3, #1
 1261 032e 1344     		add	r3, r3, r2
 1262 0330 0344     		add	r3, r3, r0
 1263 0332 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1264 0336 082B     		cmp	r3, #8
 1265 0338 11D0     		beq	.L63
 1266              		.loc 1 258 0 is_stmt 0 discriminator 1
 1267 033a 534B     		ldr	r3, .L77
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 28


 1268 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 033e 5A1C     		adds	r2, r3, #1
 1270 0340 524B     		ldr	r3, .L77+4
 1271 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272 0344 1846     		mov	r0, r3
 1273 0346 5249     		ldr	r1, .L77+8
 1274 0348 1346     		mov	r3, r2
 1275 034a DB00     		lsls	r3, r3, #3
 1276 034c 1344     		add	r3, r3, r2
 1277 034e 5B00     		lsls	r3, r3, #1
 1278 0350 1344     		add	r3, r3, r2
 1279 0352 0344     		add	r3, r3, r0
 1280 0354 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1281 0358 092B     		cmp	r3, #9
 1282 035a 40F08C80 		bne	.L73
 1283              	.L63:
 259:main.c        ****                     currentOrientation = Down;
 1284              		.loc 1 259 0 is_stmt 1
 1285 035e 4D4B     		ldr	r3, .L77+12
 1286 0360 0122     		movs	r2, #1
 1287 0362 1A70     		strb	r2, [r3]
 260:main.c        ****                     directionState = waitForLeftTurn;
 1288              		.loc 1 260 0
 1289 0364 0923     		movs	r3, #9
 1290 0366 7B60     		str	r3, [r7, #4]
 261:main.c        ****                     //currentCol--; // update position
 262:main.c        ****                 }
 263:main.c        ****                 break;
 1291              		.loc 1 263 0
 1292 0368 85E0     		b	.L73
 1293              	.L60:
 1294 036a 84E0     		b	.L73
 1295              	.L44:
 264:main.c        ****             case Right:
 265:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 1296              		.loc 1 265 0
 1297 036c 464B     		ldr	r3, .L77
 1298 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 0370 1A46     		mov	r2, r3
 1300 0372 464B     		ldr	r3, .L77+4
 1301 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1302 0376 591C     		adds	r1, r3, #1
 1303 0378 4548     		ldr	r0, .L77+8
 1304 037a 1346     		mov	r3, r2
 1305 037c DB00     		lsls	r3, r3, #3
 1306 037e 1344     		add	r3, r3, r2
 1307 0380 5B00     		lsls	r3, r3, #1
 1308 0382 1344     		add	r3, r3, r2
 1309 0384 0B44     		add	r3, r3, r1
 1310 0386 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1311 038a 082B     		cmp	r3, #8
 1312 038c 10D0     		beq	.L64
 1313              		.loc 1 265 0 is_stmt 0 discriminator 1
 1314 038e 3E4B     		ldr	r3, .L77
 1315 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 0392 1A46     		mov	r2, r3
 1317 0394 3D4B     		ldr	r3, .L77+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 29


 1318 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1319 0398 591C     		adds	r1, r3, #1
 1320 039a 3D48     		ldr	r0, .L77+8
 1321 039c 1346     		mov	r3, r2
 1322 039e DB00     		lsls	r3, r3, #3
 1323 03a0 1344     		add	r3, r3, r2
 1324 03a2 5B00     		lsls	r3, r3, #1
 1325 03a4 1344     		add	r3, r3, r2
 1326 03a6 0B44     		add	r3, r3, r1
 1327 03a8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1328 03ac 092B     		cmp	r3, #9
 1329 03ae 0BD1     		bne	.L65
 1330              	.L64:
 266:main.c        ****                     currentOrientation = Right;
 1331              		.loc 1 266 0 is_stmt 1
 1332 03b0 384B     		ldr	r3, .L77+12
 1333 03b2 0322     		movs	r2, #3
 1334 03b4 1A70     		strb	r2, [r3]
 267:main.c        ****                     directionState = Forward;
 1335              		.loc 1 267 0
 1336 03b6 0023     		movs	r3, #0
 1337 03b8 7B60     		str	r3, [r7, #4]
 268:main.c        ****                     currentCol++; // update position
 1338              		.loc 1 268 0
 1339 03ba 344B     		ldr	r3, .L77+4
 1340 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1341 03be 0133     		adds	r3, r3, #1
 1342 03c0 DAB2     		uxtb	r2, r3
 1343 03c2 324B     		ldr	r3, .L77+4
 1344 03c4 1A70     		strb	r2, [r3]
 1345 03c6 4FE0     		b	.L66
 1346              	.L65:
 269:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1347              		.loc 1 269 0
 1348 03c8 2F4B     		ldr	r3, .L77
 1349 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 03cc 5A1E     		subs	r2, r3, #1
 1351 03ce 2F4B     		ldr	r3, .L77+4
 1352 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 03d2 1846     		mov	r0, r3
 1354 03d4 2E49     		ldr	r1, .L77+8
 1355 03d6 1346     		mov	r3, r2
 1356 03d8 DB00     		lsls	r3, r3, #3
 1357 03da 1344     		add	r3, r3, r2
 1358 03dc 5B00     		lsls	r3, r3, #1
 1359 03de 1344     		add	r3, r3, r2
 1360 03e0 0344     		add	r3, r3, r0
 1361 03e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1362 03e6 082B     		cmp	r3, #8
 1363 03e8 10D0     		beq	.L67
 1364              		.loc 1 269 0 is_stmt 0 discriminator 1
 1365 03ea 274B     		ldr	r3, .L77
 1366 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 03ee 5A1E     		subs	r2, r3, #1
 1368 03f0 264B     		ldr	r3, .L77+4
 1369 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 03f4 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 30


 1371 03f6 2649     		ldr	r1, .L77+8
 1372 03f8 1346     		mov	r3, r2
 1373 03fa DB00     		lsls	r3, r3, #3
 1374 03fc 1344     		add	r3, r3, r2
 1375 03fe 5B00     		lsls	r3, r3, #1
 1376 0400 1344     		add	r3, r3, r2
 1377 0402 0344     		add	r3, r3, r0
 1378 0404 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1379 0408 092B     		cmp	r3, #9
 1380 040a 05D1     		bne	.L68
 1381              	.L67:
 270:main.c        ****                     currentOrientation = Up;
 1382              		.loc 1 270 0 is_stmt 1
 1383 040c 214B     		ldr	r3, .L77+12
 1384 040e 0022     		movs	r2, #0
 1385 0410 1A70     		strb	r2, [r3]
 271:main.c        ****                     directionState = waitForLeftTurn;
 1386              		.loc 1 271 0
 1387 0412 0923     		movs	r3, #9
 1388 0414 7B60     		str	r3, [r7, #4]
 1389 0416 27E0     		b	.L66
 1390              	.L68:
 272:main.c        ****                     //currentCol++; // update position
 273:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1391              		.loc 1 273 0
 1392 0418 1B4B     		ldr	r3, .L77
 1393 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1394 041c 5A1C     		adds	r2, r3, #1
 1395 041e 1B4B     		ldr	r3, .L77+4
 1396 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 0422 1846     		mov	r0, r3
 1398 0424 1A49     		ldr	r1, .L77+8
 1399 0426 1346     		mov	r3, r2
 1400 0428 DB00     		lsls	r3, r3, #3
 1401 042a 1344     		add	r3, r3, r2
 1402 042c 5B00     		lsls	r3, r3, #1
 1403 042e 1344     		add	r3, r3, r2
 1404 0430 0344     		add	r3, r3, r0
 1405 0432 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1406 0436 082B     		cmp	r3, #8
 1407 0438 10D0     		beq	.L69
 1408              		.loc 1 273 0 is_stmt 0 discriminator 1
 1409 043a 134B     		ldr	r3, .L77
 1410 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 043e 5A1C     		adds	r2, r3, #1
 1412 0440 124B     		ldr	r3, .L77+4
 1413 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1414 0444 1846     		mov	r0, r3
 1415 0446 1249     		ldr	r1, .L77+8
 1416 0448 1346     		mov	r3, r2
 1417 044a DB00     		lsls	r3, r3, #3
 1418 044c 1344     		add	r3, r3, r2
 1419 044e 5B00     		lsls	r3, r3, #1
 1420 0450 1344     		add	r3, r3, r2
 1421 0452 0344     		add	r3, r3, r0
 1422 0454 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1423 0458 092B     		cmp	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 31


 1424 045a 0ED1     		bne	.L74
 1425              	.L69:
 274:main.c        ****                     currentOrientation = Down;
 1426              		.loc 1 274 0 is_stmt 1
 1427 045c 0D4B     		ldr	r3, .L77+12
 1428 045e 0122     		movs	r2, #1
 1429 0460 1A70     		strb	r2, [r3]
 275:main.c        ****                     directionState = waitForRightTurn;
 1430              		.loc 1 275 0
 1431 0462 0823     		movs	r3, #8
 1432 0464 7B60     		str	r3, [r7, #4]
 276:main.c        ****                     //currentCol--; // update position
 277:main.c        ****                 }
 278:main.c        ****                 break;
 1433              		.loc 1 278 0
 1434 0466 08E0     		b	.L74
 1435              	.L66:
 1436 0468 07E0     		b	.L74
 1437              	.L70:
 279:main.c        ****             default:
 280:main.c        ****                 break;
 1438              		.loc 1 280 0
 1439 046a 00BF     		nop
 1440 046c 06E0     		b	.L51
 1441              	.L71:
 233:main.c        ****             case Down:
 1442              		.loc 1 233 0
 1443 046e 00BF     		nop
 1444 0470 04E0     		b	.L51
 1445              	.L72:
 248:main.c        ****             case Left:
 1446              		.loc 1 248 0
 1447 0472 00BF     		nop
 1448 0474 02E0     		b	.L51
 1449              	.L73:
 263:main.c        ****             case Right:
 1450              		.loc 1 263 0
 1451 0476 00BF     		nop
 1452 0478 00E0     		b	.L51
 1453              	.L74:
 278:main.c        ****             default:
 1454              		.loc 1 278 0
 1455 047a 00BF     		nop
 1456              	.L51:
 281:main.c        ****         }
 282:main.c        ****     
 283:main.c        ****     return directionState;
 1457              		.loc 1 283 0
 1458 047c 7B68     		ldr	r3, [r7, #4]
 1459              	.L38:
 284:main.c        **** }
 1460              		.loc 1 284 0
 1461 047e 1846     		mov	r0, r3
 1462 0480 0C37     		adds	r7, r7, #12
 1463              		.cfi_def_cfa_offset 4
 1464 0482 BD46     		mov	sp, r7
 1465              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 32


 1466              		@ sp needed
 1467 0484 80BC     		pop	{r7}
 1468              		.cfi_restore 7
 1469              		.cfi_def_cfa_offset 0
 1470 0486 7047     		bx	lr
 1471              	.L78:
 1472              		.align	2
 1473              	.L77:
 1474 0488 00000000 		.word	currentRow
 1475 048c 00000000 		.word	currentCol
 1476 0490 00000000 		.word	map
 1477 0494 00000000 		.word	currentOrientation
 1478              		.cfi_endproc
 1479              	.LFE73:
 1480              		.size	GetNextStep, .-GetNextStep
 1481              		.global	stoppedAfterTurn
 1482              		.bss
 1483              		.type	stoppedAfterTurn, %object
 1484              		.size	stoppedAfterTurn, 1
 1485              	stoppedAfterTurn:
 1486 0030 00       		.space	1
 1487              		.global	ignoreSensor
 1488              		.type	ignoreSensor, %object
 1489              		.size	ignoreSensor, 1
 1490              	ignoreSensor:
 1491 0031 00       		.space	1
 1492              		.global	__aeabi_fcmpge
 1493              		.section	.text.CheckSensorDirection,"ax",%progbits
 1494              		.align	2
 1495              		.global	CheckSensorDirection
 1496              		.thumb
 1497              		.thumb_func
 1498              		.type	CheckSensorDirection, %function
 1499              	CheckSensorDirection:
 1500              	.LFB74:
 285:main.c        **** 
 286:main.c        **** uint8 stoppedAfterTurn = 0;
 287:main.c        **** uint8 ignoreSensor = 0;
 288:main.c        **** 
 289:main.c        **** enum DirectionState CheckSensorDirection() {
 1501              		.loc 1 289 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 8
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              		.cfi_def_cfa_offset 8
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509 0002 82B0     		sub	sp, sp, #8
 1510              		.cfi_def_cfa_offset 16
 1511 0004 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 290:main.c        ****     float blocksize;
 291:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1513              		.loc 1 291 0
 1514 0006 8C4B     		ldr	r3, .L110
 1515 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 33


 1516 000a 002B     		cmp	r3, #0
 1517 000c 03D0     		beq	.L80
 1518              		.loc 1 291 0 is_stmt 0 discriminator 1
 1519 000e 8A4B     		ldr	r3, .L110
 1520 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 0012 012B     		cmp	r3, #1
 1522 0014 03D1     		bne	.L81
 1523              	.L80:
 292:main.c        ****         blocksize = yBlocksize;
 1524              		.loc 1 292 0 is_stmt 1
 1525 0016 894B     		ldr	r3, .L110+4
 1526 0018 1B68     		ldr	r3, [r3]	@ float
 1527 001a 7B60     		str	r3, [r7, #4]	@ float
 1528 001c 02E0     		b	.L82
 1529              	.L81:
 293:main.c        ****     } else {
 294:main.c        ****         blocksize = xBlocksize;
 1530              		.loc 1 294 0
 1531 001e 884B     		ldr	r3, .L110+8
 1532 0020 1B68     		ldr	r3, [r3]	@ float
 1533 0022 7B60     		str	r3, [r7, #4]	@ float
 1534              	.L82:
 295:main.c        ****     }
 296:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1535              		.loc 1 296 0
 1536 0024 0523     		movs	r3, #5
 1537 0026 3B60     		str	r3, [r7]
 297:main.c        ****     
 298:main.c        ****     // GET NEXT STEP * ========================================
 299:main.c        ****     // intersection/ turn check
 300:main.c        ****     if((previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1538              		.loc 1 300 0
 1539 0028 864B     		ldr	r3, .L110+12
 1540 002a 1B68     		ldr	r3, [r3]
 1541 002c 002B     		cmp	r3, #0
 1542 002e 07D0     		beq	.L83
 1543              		.loc 1 300 0 is_stmt 0 discriminator 2
 1544 0030 844B     		ldr	r3, .L110+12
 1545 0032 1B68     		ldr	r3, [r3]
 1546 0034 032B     		cmp	r3, #3
 1547 0036 03D0     		beq	.L83
 1548              		.loc 1 300 0 discriminator 4
 1549 0038 824B     		ldr	r3, .L110+12
 1550 003a 1B68     		ldr	r3, [r3]
 1551 003c 042B     		cmp	r3, #4
 1552 003e 27D1     		bne	.L84
 1553              	.L83:
 1554              		.loc 1 300 0 discriminator 5
 1555 0040 814B     		ldr	r3, .L110+16
 1556 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0044 002B     		cmp	r3, #0
 1558 0046 03D0     		beq	.L85
 1559              		.loc 1 300 0 discriminator 6
 1560 0048 804B     		ldr	r3, .L110+20
 1561 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 004c 002B     		cmp	r3, #0
 1563 004e 1FD1     		bne	.L84
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 34


 1564              	.L85:
 301:main.c        ****         && (previousDirection != ForwardAfterTurn && previousDirection != waitForLeftTurn && previo
 1565              		.loc 1 301 0 is_stmt 1
 1566 0050 7C4B     		ldr	r3, .L110+12
 1567 0052 1B68     		ldr	r3, [r3]
 1568 0054 0A2B     		cmp	r3, #10
 1569 0056 1BD0     		beq	.L84
 1570              		.loc 1 301 0 is_stmt 0 discriminator 1
 1571 0058 7A4B     		ldr	r3, .L110+12
 1572 005a 1B68     		ldr	r3, [r3]
 1573 005c 092B     		cmp	r3, #9
 1574 005e 17D0     		beq	.L84
 1575              		.loc 1 301 0 discriminator 2
 1576 0060 784B     		ldr	r3, .L110+12
 1577 0062 1B68     		ldr	r3, [r3]
 1578 0064 082B     		cmp	r3, #8
 1579 0066 13D0     		beq	.L84
 302:main.c        ****             previousDirection != TurnLeft && previousDirection != TurnRight)) {
 1580              		.loc 1 302 0 is_stmt 1 discriminator 3
 1581 0068 764B     		ldr	r3, .L110+12
 1582 006a 1B68     		ldr	r3, [r3]
 301:main.c        ****         && (previousDirection != ForwardAfterTurn && previousDirection != waitForLeftTurn && previo
 1583              		.loc 1 301 0 discriminator 3
 1584 006c 022B     		cmp	r3, #2
 1585 006e 0FD0     		beq	.L84
 1586              		.loc 1 302 0
 1587 0070 744B     		ldr	r3, .L110+12
 1588 0072 1B68     		ldr	r3, [r3]
 1589 0074 012B     		cmp	r3, #1
 1590 0076 0BD0     		beq	.L84
 303:main.c        ****             
 304:main.c        ****     //     // switch (currentOrientation) {
 305:main.c        ****     //     //     case Up:
 306:main.c        ****     //     //         currentRow++;
 307:main.c        ****     //     //         break;
 308:main.c        ****     //     //     case Down:
 309:main.c        ****     //     //         currentRow--;
 310:main.c        ****     //     //         break;
 311:main.c        ****     //     //     case Right:
 312:main.c        ****     //     //         currentCol++;
 313:main.c        ****     //     //         break;
 314:main.c        ****     //     //     case Left:
 315:main.c        ****     //     //         currentCol--;
 316:main.c        ****     //     //         break;
 317:main.c        ****     //     // }
 318:main.c        ****         
 319:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1591              		.loc 1 319 0
 1592 0078 FFF7FEFF 		bl	GetNextStep
 1593 007c 3860     		str	r0, [r7]
 320:main.c        ****         totalDistance = 0; // reset distance
 1594              		.loc 1 320 0
 1595 007e 744B     		ldr	r3, .L110+24
 1596 0080 4FF00002 		mov	r2, #0
 1597 0084 1A60     		str	r2, [r3]	@ float
 321:main.c        ****         previousDirection = directionState;
 1598              		.loc 1 321 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 35


 1599 0086 6F4A     		ldr	r2, .L110+12
 1600 0088 3B68     		ldr	r3, [r7]
 1601 008a 1360     		str	r3, [r2]
 322:main.c        ****         return directionState;
 1602              		.loc 1 322 0
 1603 008c 3B68     		ldr	r3, [r7]
 1604 008e 33E1     		b	.L86
 1605              	.L84:
 323:main.c        ****     }
 324:main.c        ****     if (stoppedAfterTurn == 1) {
 1606              		.loc 1 324 0
 1607 0090 704B     		ldr	r3, .L110+28
 1608 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1609 0094 012B     		cmp	r3, #1
 1610 0096 19D1     		bne	.L87
 325:main.c        ****         if (stopBuffer <= 50) {
 1611              		.loc 1 325 0
 1612 0098 6F4B     		ldr	r3, .L110+32
 1613 009a 1B68     		ldr	r3, [r3]
 1614 009c 322B     		cmp	r3, #50
 1615 009e 06D8     		bhi	.L88
 326:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1616              		.loc 1 326 0
 1617 00a0 0523     		movs	r3, #5
 1618 00a2 3B60     		str	r3, [r7]
 327:main.c        ****             previousDirection = directionState;
 1619              		.loc 1 327 0
 1620 00a4 674A     		ldr	r2, .L110+12
 1621 00a6 3B68     		ldr	r3, [r7]
 1622 00a8 1360     		str	r3, [r2]
 328:main.c        ****             return directionState;
 1623              		.loc 1 328 0
 1624 00aa 3B68     		ldr	r3, [r7]
 1625 00ac 24E1     		b	.L86
 1626              	.L88:
 329:main.c        ****         }
 330:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1627              		.loc 1 330 0
 1628 00ae FFF7FEFF 		bl	GetNextStep
 1629 00b2 3860     		str	r0, [r7]
 331:main.c        ****         totalDistance = 0; // reset distance
 1630              		.loc 1 331 0
 1631 00b4 664B     		ldr	r3, .L110+24
 1632 00b6 4FF00002 		mov	r2, #0
 1633 00ba 1A60     		str	r2, [r3]	@ float
 332:main.c        ****         previousDirection = directionState;
 1634              		.loc 1 332 0
 1635 00bc 614A     		ldr	r2, .L110+12
 1636 00be 3B68     		ldr	r3, [r7]
 1637 00c0 1360     		str	r3, [r2]
 333:main.c        ****         stoppedAfterTurn = 0;
 1638              		.loc 1 333 0
 1639 00c2 644B     		ldr	r3, .L110+28
 1640 00c4 0022     		movs	r2, #0
 1641 00c6 1A70     		strb	r2, [r3]
 334:main.c        ****         return directionState;
 1642              		.loc 1 334 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 36


 1643 00c8 3B68     		ldr	r3, [r7]
 1644 00ca 15E1     		b	.L86
 1645              	.L87:
 335:main.c        ****     }
 336:main.c        ****     if (totalDistance >= blocksize) {
 1646              		.loc 1 336 0
 1647 00cc 604B     		ldr	r3, .L110+24
 1648 00ce 1B68     		ldr	r3, [r3]	@ float
 1649 00d0 7968     		ldr	r1, [r7, #4]	@ float
 1650 00d2 1846     		mov	r0, r3
 1651 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1652 00d8 0346     		mov	r3, r0
 1653 00da 002B     		cmp	r3, #0
 1654 00dc 0BD0     		beq	.L109
 337:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1655              		.loc 1 337 0
 1656 00de FFF7FEFF 		bl	GetNextStep
 1657 00e2 3860     		str	r0, [r7]
 338:main.c        ****         totalDistance = 0; // reset distance
 1658              		.loc 1 338 0
 1659 00e4 5A4B     		ldr	r3, .L110+24
 1660 00e6 4FF00002 		mov	r2, #0
 1661 00ea 1A60     		str	r2, [r3]	@ float
 339:main.c        ****         previousDirection = directionState;
 1662              		.loc 1 339 0
 1663 00ec 554A     		ldr	r2, .L110+12
 1664 00ee 3B68     		ldr	r3, [r7]
 1665 00f0 1360     		str	r3, [r2]
 340:main.c        ****         return directionState;
 1666              		.loc 1 340 0
 1667 00f2 3B68     		ldr	r3, [r7]
 1668 00f4 00E1     		b	.L86
 1669              	.L109:
 341:main.c        ****     }
 342:main.c        ****     
 343:main.c        ****     // STOP BUFFER * ========================================
 344:main.c        ****     if (previousDirection == Stop) {
 1670              		.loc 1 344 0
 1671 00f6 534B     		ldr	r3, .L110+12
 1672 00f8 1B68     		ldr	r3, [r3]
 1673 00fa 052B     		cmp	r3, #5
 1674 00fc 0AD1     		bne	.L91
 345:main.c        ****         if (stopBuffer <= 50) {
 1675              		.loc 1 345 0
 1676 00fe 564B     		ldr	r3, .L110+32
 1677 0100 1B68     		ldr	r3, [r3]
 1678 0102 322B     		cmp	r3, #50
 1679 0104 04D8     		bhi	.L92
 346:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1680              		.loc 1 346 0
 1681 0106 0523     		movs	r3, #5
 1682 0108 3B60     		str	r3, [r7]
 347:main.c        ****             previousDirection = directionState;
 1683              		.loc 1 347 0
 1684 010a 4E4A     		ldr	r2, .L110+12
 1685 010c 3B68     		ldr	r3, [r7]
 1686 010e 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 37


 1687              	.L92:
 348:main.c        ****         } else {
 349:main.c        ****             //directionState = ForwardAfterTurn;
 350:main.c        ****         }
 351:main.c        ****         return directionState;
 1688              		.loc 1 351 0
 1689 0110 3B68     		ldr	r3, [r7]
 1690 0112 F1E0     		b	.L86
 1691              	.L91:
 352:main.c        ****     }
 353:main.c        **** 
 354:main.c        ****     // TURNING * ========================================    
 355:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1692              		.loc 1 355 0
 1693 0114 4B4B     		ldr	r3, .L110+12
 1694 0116 1B68     		ldr	r3, [r3]
 1695 0118 0A2B     		cmp	r3, #10
 1696 011a 0ED1     		bne	.L93
 356:main.c        **** 
 357:main.c        ****         if (s3 || s4) {
 1697              		.loc 1 357 0
 1698 011c 4A4B     		ldr	r3, .L110+16
 1699 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1700 0120 002B     		cmp	r3, #0
 1701 0122 03D1     		bne	.L94
 1702              		.loc 1 357 0 is_stmt 0 discriminator 1
 1703 0124 494B     		ldr	r3, .L110+20
 1704 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1705 0128 002B     		cmp	r3, #0
 1706 012a 06D0     		beq	.L93
 1707              	.L94:
 358:main.c        ****             //ignoreSensor = 0;
 359:main.c        ****             //usbPutString("Forward\n");
 360:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 1708              		.loc 1 360 0 is_stmt 1
 1709 012c 0023     		movs	r3, #0
 1710 012e 3B60     		str	r3, [r7]
 361:main.c        ****             previousDirection = directionState;
 1711              		.loc 1 361 0
 1712 0130 444A     		ldr	r2, .L110+12
 1713 0132 3B68     		ldr	r3, [r7]
 1714 0134 1360     		str	r3, [r2]
 362:main.c        ****             return directionState;
 1715              		.loc 1 362 0
 1716 0136 3B68     		ldr	r3, [r7]
 1717 0138 DEE0     		b	.L86
 1718              	.L93:
 363:main.c        ****         }
 364:main.c        ****     }
 365:main.c        **** 
 366:main.c        ****     if(previousDirection == waitForRightTurn) {
 1719              		.loc 1 366 0
 1720 013a 424B     		ldr	r3, .L110+12
 1721 013c 1B68     		ldr	r3, [r3]
 1722 013e 082B     		cmp	r3, #8
 1723 0140 11D1     		bne	.L95
 367:main.c        ****         //ignoreSensor = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 38


 368:main.c        ****         if(!s4) {
 1724              		.loc 1 368 0
 1725 0142 424B     		ldr	r3, .L110+20
 1726 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1727 0146 002B     		cmp	r3, #0
 1728 0148 06D1     		bne	.L96
 369:main.c        ****             //usbPutString("Turn Right\n");
 370:main.c        ****             directionState = TurnRight;
 1729              		.loc 1 370 0
 1730 014a 0123     		movs	r3, #1
 1731 014c 3B60     		str	r3, [r7]
 371:main.c        ****             previousDirection = directionState;
 1732              		.loc 1 371 0
 1733 014e 3D4A     		ldr	r2, .L110+12
 1734 0150 3B68     		ldr	r3, [r7]
 1735 0152 1360     		str	r3, [r2]
 372:main.c        ****             return directionState;
 1736              		.loc 1 372 0
 1737 0154 3B68     		ldr	r3, [r7]
 1738 0156 CFE0     		b	.L86
 1739              	.L96:
 373:main.c        ****         } else {
 374:main.c        ****             //usbPutString("Wait for Right Turn\n");
 375:main.c        ****             directionState = waitForRightTurn;
 1740              		.loc 1 375 0
 1741 0158 0823     		movs	r3, #8
 1742 015a 3B60     		str	r3, [r7]
 376:main.c        ****             previousDirection = directionState;
 1743              		.loc 1 376 0
 1744 015c 394A     		ldr	r2, .L110+12
 1745 015e 3B68     		ldr	r3, [r7]
 1746 0160 1360     		str	r3, [r2]
 377:main.c        ****             return directionState;
 1747              		.loc 1 377 0
 1748 0162 3B68     		ldr	r3, [r7]
 1749 0164 C8E0     		b	.L86
 1750              	.L95:
 378:main.c        ****         }
 379:main.c        ****     }
 380:main.c        **** 
 381:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1751              		.loc 1 381 0
 1752 0166 374B     		ldr	r3, .L110+12
 1753 0168 1B68     		ldr	r3, [r3]
 1754 016a 092B     		cmp	r3, #9
 1755 016c 11D1     		bne	.L97
 382:main.c        ****         //ignoreSensor = 0;
 383:main.c        ****         if(!s3) {
 1756              		.loc 1 383 0
 1757 016e 364B     		ldr	r3, .L110+16
 1758 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1759 0172 002B     		cmp	r3, #0
 1760 0174 06D1     		bne	.L98
 384:main.c        ****             //usbPutString("Turn Left\n");
 385:main.c        ****             directionState = TurnLeft;
 1761              		.loc 1 385 0
 1762 0176 0223     		movs	r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 39


 1763 0178 3B60     		str	r3, [r7]
 386:main.c        ****             previousDirection = directionState;
 1764              		.loc 1 386 0
 1765 017a 324A     		ldr	r2, .L110+12
 1766 017c 3B68     		ldr	r3, [r7]
 1767 017e 1360     		str	r3, [r2]
 387:main.c        ****             return directionState;
 1768              		.loc 1 387 0
 1769 0180 3B68     		ldr	r3, [r7]
 1770 0182 B9E0     		b	.L86
 1771              	.L98:
 388:main.c        ****         } else {
 389:main.c        ****             //usbPutString("Wait for Left Turn\n");
 390:main.c        ****             directionState = waitForLeftTurn;
 1772              		.loc 1 390 0
 1773 0184 0923     		movs	r3, #9
 1774 0186 3B60     		str	r3, [r7]
 391:main.c        ****             previousDirection = directionState;
 1775              		.loc 1 391 0
 1776 0188 2E4A     		ldr	r2, .L110+12
 1777 018a 3B68     		ldr	r3, [r7]
 1778 018c 1360     		str	r3, [r2]
 392:main.c        ****             return directionState;
 1779              		.loc 1 392 0
 1780 018e 3B68     		ldr	r3, [r7]
 1781 0190 B2E0     		b	.L86
 1782              	.L97:
 393:main.c        ****         }
 394:main.c        ****     }
 395:main.c        **** 
 396:main.c        ****     if(previousDirection == TurnRight) {
 1783              		.loc 1 396 0
 1784 0192 2C4B     		ldr	r3, .L110+12
 1785 0194 1B68     		ldr	r3, [r3]
 1786 0196 012B     		cmp	r3, #1
 1787 0198 24D1     		bne	.L99
 397:main.c        ****         if(s5 && s6) {
 1788              		.loc 1 397 0
 1789 019a 304B     		ldr	r3, .L110+36
 1790 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1791 019e 002B     		cmp	r3, #0
 1792 01a0 0AD0     		beq	.L100
 1793              		.loc 1 397 0 is_stmt 0 discriminator 1
 1794 01a2 2F4B     		ldr	r3, .L110+40
 1795 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 01a6 002B     		cmp	r3, #0
 1797 01a8 06D0     		beq	.L100
 398:main.c        ****             //usbPutString("Turn Right\n");
 399:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1798              		.loc 1 399 0 is_stmt 1
 1799 01aa 0123     		movs	r3, #1
 1800 01ac 3B60     		str	r3, [r7]
 400:main.c        ****             previousDirection = directionState;
 1801              		.loc 1 400 0
 1802 01ae 254A     		ldr	r2, .L110+12
 1803 01b0 3B68     		ldr	r3, [r7]
 1804 01b2 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 40


 401:main.c        ****             return directionState;
 1805              		.loc 1 401 0
 1806 01b4 3B68     		ldr	r3, [r7]
 1807 01b6 9FE0     		b	.L86
 1808              	.L100:
 402:main.c        ****         } 
 403:main.c        ****         else if (!s5 && !s6) {
 1809              		.loc 1 403 0
 1810 01b8 284B     		ldr	r3, .L110+36
 1811 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1812 01bc 002B     		cmp	r3, #0
 1813 01be 11D1     		bne	.L99
 1814              		.loc 1 403 0 is_stmt 0 discriminator 1
 1815 01c0 274B     		ldr	r3, .L110+40
 1816 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 01c4 002B     		cmp	r3, #0
 1818 01c6 0DD1     		bne	.L99
 404:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 405:main.c        ****             //usbPutString("Stop after Right Turn");
 406:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1819              		.loc 1 406 0 is_stmt 1
 1820 01c8 0523     		movs	r3, #5
 1821 01ca 3B60     		str	r3, [r7]
 407:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1822              		.loc 1 407 0
 1823 01cc 204B     		ldr	r3, .L110+24
 1824 01ce 4FF00002 		mov	r2, #0
 1825 01d2 1A60     		str	r2, [r3]	@ float
 408:main.c        ****             previousDirection = directionState;
 1826              		.loc 1 408 0
 1827 01d4 1B4A     		ldr	r2, .L110+12
 1828 01d6 3B68     		ldr	r3, [r7]
 1829 01d8 1360     		str	r3, [r2]
 409:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1830              		.loc 1 409 0
 1831 01da 1E4B     		ldr	r3, .L110+28
 1832 01dc 0122     		movs	r2, #1
 1833 01de 1A70     		strb	r2, [r3]
 410:main.c        ****             return directionState;
 1834              		.loc 1 410 0
 1835 01e0 3B68     		ldr	r3, [r7]
 1836 01e2 89E0     		b	.L86
 1837              	.L99:
 411:main.c        ****         }
 412:main.c        ****     }    
 413:main.c        **** 
 414:main.c        ****     if(previousDirection == TurnLeft) {
 1838              		.loc 1 414 0
 1839 01e4 174B     		ldr	r3, .L110+12
 1840 01e6 1B68     		ldr	r3, [r3]
 1841 01e8 022B     		cmp	r3, #2
 1842 01ea 3BD1     		bne	.L101
 415:main.c        ****         if(s5 && s6) {
 1843              		.loc 1 415 0
 1844 01ec 1B4B     		ldr	r3, .L110+36
 1845 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 01f0 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 41


 1847 01f2 0AD0     		beq	.L102
 1848              		.loc 1 415 0 is_stmt 0 discriminator 1
 1849 01f4 1A4B     		ldr	r3, .L110+40
 1850 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1851 01f8 002B     		cmp	r3, #0
 1852 01fa 06D0     		beq	.L102
 416:main.c        ****             //usbPutString("Turn Left\n");
 417:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1853              		.loc 1 417 0 is_stmt 1
 1854 01fc 0223     		movs	r3, #2
 1855 01fe 3B60     		str	r3, [r7]
 418:main.c        ****             previousDirection = directionState;
 1856              		.loc 1 418 0
 1857 0200 104A     		ldr	r2, .L110+12
 1858 0202 3B68     		ldr	r3, [r7]
 1859 0204 1360     		str	r3, [r2]
 419:main.c        ****             return directionState;
 1860              		.loc 1 419 0
 1861 0206 3B68     		ldr	r3, [r7]
 1862 0208 76E0     		b	.L86
 1863              	.L102:
 420:main.c        ****         } 
 421:main.c        ****         else if (!s5 && !s6) {
 1864              		.loc 1 421 0
 1865 020a 144B     		ldr	r3, .L110+36
 1866 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1867 020e 002B     		cmp	r3, #0
 1868 0210 28D1     		bne	.L101
 1869              		.loc 1 421 0 is_stmt 0 discriminator 1
 1870 0212 134B     		ldr	r3, .L110+40
 1871 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 0216 002B     		cmp	r3, #0
 1873 0218 24D1     		bne	.L101
 422:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 423:main.c        ****            // usbPutString("Stop after Left Turn\n");
 424:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1874              		.loc 1 424 0 is_stmt 1
 1875 021a 0523     		movs	r3, #5
 1876 021c 3B60     		str	r3, [r7]
 425:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1877              		.loc 1 425 0
 1878 021e 0C4B     		ldr	r3, .L110+24
 1879 0220 4FF00002 		mov	r2, #0
 1880 0224 1A60     		str	r2, [r3]	@ float
 426:main.c        ****             previousDirection = directionState;
 1881              		.loc 1 426 0
 1882 0226 074A     		ldr	r2, .L110+12
 1883 0228 3B68     		ldr	r3, [r7]
 1884 022a 1360     		str	r3, [r2]
 427:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1885              		.loc 1 427 0
 1886 022c 094B     		ldr	r3, .L110+28
 1887 022e 0122     		movs	r2, #1
 1888 0230 1A70     		strb	r2, [r3]
 428:main.c        ****             return directionState;
 1889              		.loc 1 428 0
 1890 0232 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 42


 1891 0234 60E0     		b	.L86
 1892              	.L111:
 1893 0236 00BF     		.align	2
 1894              	.L110:
 1895 0238 00000000 		.word	currentOrientation
 1896 023c 00000000 		.word	yBlocksize
 1897 0240 00000000 		.word	xBlocksize
 1898 0244 00000000 		.word	previousDirection
 1899 0248 00000000 		.word	s3
 1900 024c 00000000 		.word	s4
 1901 0250 00000000 		.word	totalDistance
 1902 0254 00000000 		.word	stoppedAfterTurn
 1903 0258 00000000 		.word	stopBuffer
 1904 025c 00000000 		.word	s5
 1905 0260 00000000 		.word	s6
 1906              	.L101:
 429:main.c        ****         }
 430:main.c        ****     }
 431:main.c        ****     
 432:main.c        ****     // COURSE CORRECTION * ========================================
 433:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1907              		.loc 1 433 0
 1908 0264 264B     		ldr	r3, .L112
 1909 0266 1B68     		ldr	r3, [r3]
 1910 0268 002B     		cmp	r3, #0
 1911 026a 07D0     		beq	.L103
 1912              		.loc 1 433 0 is_stmt 0 discriminator 1
 1913 026c 244B     		ldr	r3, .L112
 1914 026e 1B68     		ldr	r3, [r3]
 1915 0270 032B     		cmp	r3, #3
 1916 0272 03D0     		beq	.L103
 1917              		.loc 1 433 0 discriminator 2
 1918 0274 224B     		ldr	r3, .L112
 1919 0276 1B68     		ldr	r3, [r3]
 1920 0278 042B     		cmp	r3, #4
 1921 027a 15D1     		bne	.L104
 1922              	.L103:
 434:main.c        ****         //ignoreSensor = 0;
 435:main.c        ****         if(s6) {
 1923              		.loc 1 435 0 is_stmt 1
 1924 027c 214B     		ldr	r3, .L112+4
 1925 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 0280 002B     		cmp	r3, #0
 1927 0282 06D0     		beq	.L105
 436:main.c        ****             //usbPutString("Adjust to the left\n");
 437:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1928              		.loc 1 437 0
 1929 0284 0323     		movs	r3, #3
 1930 0286 3B60     		str	r3, [r7]
 438:main.c        ****             previousDirection = directionState;
 1931              		.loc 1 438 0
 1932 0288 1D4A     		ldr	r2, .L112
 1933 028a 3B68     		ldr	r3, [r7]
 1934 028c 1360     		str	r3, [r2]
 439:main.c        ****             return directionState;
 1935              		.loc 1 439 0
 1936 028e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 43


 1937 0290 32E0     		b	.L86
 1938              	.L105:
 440:main.c        ****         }
 441:main.c        ****         if(s5) {
 1939              		.loc 1 441 0
 1940 0292 1D4B     		ldr	r3, .L112+8
 1941 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1942 0296 002B     		cmp	r3, #0
 1943 0298 06D0     		beq	.L104
 442:main.c        ****             //usbPutString("Adjust to the right\n");
 443:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1944              		.loc 1 443 0
 1945 029a 0423     		movs	r3, #4
 1946 029c 3B60     		str	r3, [r7]
 444:main.c        ****             previousDirection = directionState;
 1947              		.loc 1 444 0
 1948 029e 184A     		ldr	r2, .L112
 1949 02a0 3B68     		ldr	r3, [r7]
 1950 02a2 1360     		str	r3, [r2]
 445:main.c        ****             return directionState;
 1951              		.loc 1 445 0
 1952 02a4 3B68     		ldr	r3, [r7]
 1953 02a6 27E0     		b	.L86
 1954              	.L104:
 446:main.c        ****         }
 447:main.c        ****     }
 448:main.c        ****     
 449:main.c        ****     // FORWARD * ========================================
 450:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1955              		.loc 1 450 0
 1956 02a8 184B     		ldr	r3, .L112+12
 1957 02aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1958 02ac 002B     		cmp	r3, #0
 1959 02ae 12D0     		beq	.L106
 1960              		.loc 1 450 0 is_stmt 0 discriminator 1
 1961 02b0 174B     		ldr	r3, .L112+16
 1962 02b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1963 02b4 002B     		cmp	r3, #0
 1964 02b6 0ED0     		beq	.L106
 1965              		.loc 1 450 0 discriminator 2
 1966 02b8 134B     		ldr	r3, .L112+8
 1967 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1968 02bc 002B     		cmp	r3, #0
 1969 02be 0AD1     		bne	.L106
 1970              		.loc 1 450 0 discriminator 3
 1971 02c0 104B     		ldr	r3, .L112+4
 1972 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1973 02c4 002B     		cmp	r3, #0
 1974 02c6 06D1     		bne	.L106
 451:main.c        ****         //usbPutString("Forward\n");
 452:main.c        ****         directionState = Forward;
 1975              		.loc 1 452 0 is_stmt 1
 1976 02c8 0023     		movs	r3, #0
 1977 02ca 3B60     		str	r3, [r7]
 453:main.c        ****         previousDirection = directionState;
 1978              		.loc 1 453 0
 1979 02cc 0C4A     		ldr	r2, .L112
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 44


 1980 02ce 3B68     		ldr	r3, [r7]
 1981 02d0 1360     		str	r3, [r2]
 454:main.c        ****         return directionState;   
 1982              		.loc 1 454 0
 1983 02d2 3B68     		ldr	r3, [r7]
 1984 02d4 10E0     		b	.L86
 1985              	.L106:
 455:main.c        ****     }
 456:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 457:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
 458:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 459:main.c        ****         return directionState;
 460:main.c        ****     }
 461:main.c        **** 
 462:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 463:main.c        ****         //usbPutString("Wait For Turn\n");
 464:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 465:main.c        ****         return directionState;
 466:main.c        ****     }*/
 467:main.c        **** 
 468:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 469:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 470:main.c        ****     if (previousDirection == Unknown) {
 1986              		.loc 1 470 0
 1987 02d6 0A4B     		ldr	r3, .L112
 1988 02d8 1B68     		ldr	r3, [r3]
 1989 02da 062B     		cmp	r3, #6
 1990 02dc 06D1     		bne	.L107
 471:main.c        ****         directionState = Forward;
 1991              		.loc 1 471 0
 1992 02de 0023     		movs	r3, #0
 1993 02e0 3B60     		str	r3, [r7]
 472:main.c        ****         previousDirection = directionState;
 1994              		.loc 1 472 0
 1995 02e2 074A     		ldr	r2, .L112
 1996 02e4 3B68     		ldr	r3, [r7]
 1997 02e6 1360     		str	r3, [r2]
 473:main.c        ****         return directionState;
 1998              		.loc 1 473 0
 1999 02e8 3B68     		ldr	r3, [r7]
 2000 02ea 05E0     		b	.L86
 2001              	.L107:
 474:main.c        ****     }
 475:main.c        **** 
 476:main.c        ****     // Possible reason
 477:main.c        ****     previousDirection = currentDirection;
 2002              		.loc 1 477 0
 2003 02ec 094B     		ldr	r3, .L112+20
 2004 02ee 1B68     		ldr	r3, [r3]
 2005 02f0 034A     		ldr	r2, .L112
 2006 02f2 1360     		str	r3, [r2]
 478:main.c        ****     return previousDirection;
 2007              		.loc 1 478 0
 2008 02f4 024B     		ldr	r3, .L112
 2009 02f6 1B68     		ldr	r3, [r3]
 2010              	.L86:
 479:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 45


 2011              		.loc 1 479 0
 2012 02f8 1846     		mov	r0, r3
 2013 02fa 0837     		adds	r7, r7, #8
 2014              		.cfi_def_cfa_offset 8
 2015 02fc BD46     		mov	sp, r7
 2016              		.cfi_def_cfa_register 13
 2017              		@ sp needed
 2018 02fe 80BD     		pop	{r7, pc}
 2019              	.L113:
 2020              		.align	2
 2021              	.L112:
 2022 0300 00000000 		.word	previousDirection
 2023 0304 00000000 		.word	s6
 2024 0308 00000000 		.word	s5
 2025 030c 00000000 		.word	s3
 2026 0310 00000000 		.word	s4
 2027 0314 00000000 		.word	currentDirection
 2028              		.cfi_endproc
 2029              	.LFE74:
 2030              		.size	CheckSensorDirection, .-CheckSensorDirection
 2031              		.section	.text.SetRobotMovement,"ax",%progbits
 2032              		.align	2
 2033              		.global	SetRobotMovement
 2034              		.thumb
 2035              		.thumb_func
 2036              		.type	SetRobotMovement, %function
 2037              	SetRobotMovement:
 2038              	.LFB75:
 480:main.c        **** 
 481:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 482:main.c        **** void SetRobotMovement() {
 2039              		.loc 1 482 0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043 0000 80B5     		push	{r7, lr}
 2044              		.cfi_def_cfa_offset 8
 2045              		.cfi_offset 7, -8
 2046              		.cfi_offset 14, -4
 2047 0002 00AF     		add	r7, sp, #0
 2048              		.cfi_def_cfa_register 7
 483:main.c        ****     currentDirection = CheckSensorDirection();   
 2049              		.loc 1 483 0
 2050 0004 FFF7FEFF 		bl	CheckSensorDirection
 2051 0008 0246     		mov	r2, r0
 2052 000a 224B     		ldr	r3, .L131
 2053 000c 1A60     		str	r2, [r3]
 484:main.c        ****     
 485:main.c        ****     switch (currentDirection) {
 2054              		.loc 1 485 0
 2055 000e 214B     		ldr	r3, .L131
 2056 0010 1B68     		ldr	r3, [r3]
 2057 0012 0B2B     		cmp	r3, #11
 2058 0014 3CD8     		bhi	.L129
 2059 0016 01A2     		adr	r2, .L117
 2060 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2061              		.p2align 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 46


 2062              	.L117:
 2063 001c 4D000000 		.word	.L116+1
 2064 0020 53000000 		.word	.L118+1
 2065 0024 59000000 		.word	.L119+1
 2066 0028 65000000 		.word	.L120+1
 2067 002c 5F000000 		.word	.L121+1
 2068 0030 6B000000 		.word	.L122+1
 2069 0034 8F000000 		.word	.L130+1
 2070 0038 71000000 		.word	.L124+1
 2071 003c 89000000 		.word	.L125+1
 2072 0040 83000000 		.word	.L126+1
 2073 0044 77000000 		.word	.L127+1
 2074 0048 7D000000 		.word	.L128+1
 2075              		.p2align 1
 2076              	.L116:
 486:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 487:main.c        ****         case Forward:
 488:main.c        ****             moveForward();
 2077              		.loc 1 488 0
 2078 004c FFF7FEFF 		bl	moveForward
 489:main.c        ****             break;
 2079              		.loc 1 489 0
 2080 0050 1EE0     		b	.L115
 2081              	.L118:
 490:main.c        ****         case TurnRight:
 491:main.c        ****             turnRight();
 2082              		.loc 1 491 0
 2083 0052 FFF7FEFF 		bl	turnRight
 492:main.c        ****             break;
 2084              		.loc 1 492 0
 2085 0056 1BE0     		b	.L115
 2086              	.L119:
 493:main.c        ****         case TurnLeft:
 494:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2087              		.loc 1 494 0
 2088 0058 FFF7FEFF 		bl	turnLeft
 495:main.c        ****             break;
 2089              		.loc 1 495 0
 2090 005c 18E0     		b	.L115
 2091              	.L121:
 496:main.c        ****         case AdjustToTheRight:
 497:main.c        ****             adjustRight();
 2092              		.loc 1 497 0
 2093 005e FFF7FEFF 		bl	adjustRight
 498:main.c        ****             break;
 2094              		.loc 1 498 0
 2095 0062 15E0     		b	.L115
 2096              	.L120:
 499:main.c        ****         case AdjustToTheLeft:
 500:main.c        ****             adjustLeft();
 2097              		.loc 1 500 0
 2098 0064 FFF7FEFF 		bl	adjustLeft
 501:main.c        ****             break;
 2099              		.loc 1 501 0
 2100 0068 12E0     		b	.L115
 2101              	.L122:
 502:main.c        ****         case Stop:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 47


 503:main.c        ****             stopMoving();
 2102              		.loc 1 503 0
 2103 006a FFF7FEFF 		bl	stopMoving
 504:main.c        ****             break;
 2104              		.loc 1 504 0
 2105 006e 0FE0     		b	.L115
 2106              	.L124:
 505:main.c        ****         case waitForTurn:
 506:main.c        ****             moveForward(); 
 2107              		.loc 1 506 0
 2108 0070 FFF7FEFF 		bl	moveForward
 507:main.c        ****             break;
 2109              		.loc 1 507 0
 2110 0074 0CE0     		b	.L115
 2111              	.L127:
 508:main.c        ****         case ForwardAfterTurn:
 509:main.c        ****             moveForward();
 2112              		.loc 1 509 0
 2113 0076 FFF7FEFF 		bl	moveForward
 510:main.c        ****             break;
 2114              		.loc 1 510 0
 2115 007a 09E0     		b	.L115
 2116              	.L128:
 511:main.c        ****         case Backward:
 512:main.c        ****             moveBackward();
 2117              		.loc 1 512 0
 2118 007c FFF7FEFF 		bl	moveBackward
 513:main.c        ****             break;
 2119              		.loc 1 513 0
 2120 0080 06E0     		b	.L115
 2121              	.L126:
 514:main.c        ****         case waitForLeftTurn:
 515:main.c        ****             moveForward();
 2122              		.loc 1 515 0
 2123 0082 FFF7FEFF 		bl	moveForward
 516:main.c        ****             break;
 2124              		.loc 1 516 0
 2125 0086 03E0     		b	.L115
 2126              	.L125:
 517:main.c        ****         case waitForRightTurn:
 518:main.c        ****             moveForward();
 2127              		.loc 1 518 0
 2128 0088 FFF7FEFF 		bl	moveForward
 519:main.c        ****             break;
 2129              		.loc 1 519 0
 2130 008c 00E0     		b	.L115
 2131              	.L130:
 520:main.c        ****         case Unknown:
 521:main.c        ****             // UNKNOWN CONFIGURATION
 522:main.c        ****             break;  
 2132              		.loc 1 522 0
 2133 008e 00BF     		nop
 2134              	.L115:
 2135              	.L129:
 523:main.c        ****     }
 524:main.c        **** }...
 2136              		.loc 1 524 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 48


 2137 0090 00BF     		nop
 2138 0092 80BD     		pop	{r7, pc}
 2139              	.L132:
 2140              		.align	2
 2141              	.L131:
 2142 0094 00000000 		.word	currentDirection
 2143              		.cfi_endproc
 2144              	.LFE75:
 2145              		.size	SetRobotMovement, .-SetRobotMovement
 2146              		.text
 2147              	.Letext0:
 2148              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2149              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2150              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2151              		.file 5 "vars.h"
 2152              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2153              		.file 7 "map.h"
 2154              		.section	.debug_info,"",%progbits
 2155              	.Ldebug_info0:
 2156 0000 9E060000 		.4byte	0x69e
 2157 0004 0400     		.2byte	0x4
 2158 0006 00000000 		.4byte	.Ldebug_abbrev0
 2159 000a 04       		.byte	0x4
 2160 000b 01       		.uleb128 0x1
 2161 000c B0000000 		.4byte	.LASF105
 2162 0010 0C       		.byte	0xc
 2163 0011 93040000 		.4byte	.LASF106
 2164 0015 D8030000 		.4byte	.LASF107
 2165 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2166 001d 00000000 		.4byte	0
 2167 0021 00000000 		.4byte	.Ldebug_line0
 2168 0025 02       		.uleb128 0x2
 2169 0026 01       		.byte	0x1
 2170 0027 06       		.byte	0x6
 2171 0028 FF020000 		.4byte	.LASF0
 2172 002c 02       		.uleb128 0x2
 2173 002d 01       		.byte	0x1
 2174 002e 08       		.byte	0x8
 2175 002f 6D020000 		.4byte	.LASF1
 2176 0033 02       		.uleb128 0x2
 2177 0034 02       		.byte	0x2
 2178 0035 05       		.byte	0x5
 2179 0036 6C000000 		.4byte	.LASF2
 2180 003a 02       		.uleb128 0x2
 2181 003b 02       		.byte	0x2
 2182 003c 07       		.byte	0x7
 2183 003d 94030000 		.4byte	.LASF3
 2184 0041 03       		.uleb128 0x3
 2185 0042 F6040000 		.4byte	.LASF12
 2186 0046 02       		.byte	0x2
 2187 0047 3F       		.byte	0x3f
 2188 0048 4C000000 		.4byte	0x4c
 2189 004c 02       		.uleb128 0x2
 2190 004d 04       		.byte	0x4
 2191 004e 05       		.byte	0x5
 2192 004f C7030000 		.4byte	.LASF4
 2193 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 49


 2194 0054 04       		.byte	0x4
 2195 0055 07       		.byte	0x7
 2196 0056 9A040000 		.4byte	.LASF5
 2197 005a 02       		.uleb128 0x2
 2198 005b 08       		.byte	0x8
 2199 005c 05       		.byte	0x5
 2200 005d CA010000 		.4byte	.LASF6
 2201 0061 02       		.uleb128 0x2
 2202 0062 08       		.byte	0x8
 2203 0063 07       		.byte	0x7
 2204 0064 13030000 		.4byte	.LASF7
 2205 0068 04       		.uleb128 0x4
 2206 0069 04       		.byte	0x4
 2207 006a 05       		.byte	0x5
 2208 006b 696E7400 		.ascii	"int\000"
 2209 006f 02       		.uleb128 0x2
 2210 0070 04       		.byte	0x4
 2211 0071 07       		.byte	0x7
 2212 0072 3B030000 		.4byte	.LASF8
 2213 0076 02       		.uleb128 0x2
 2214 0077 08       		.byte	0x8
 2215 0078 04       		.byte	0x4
 2216 0079 93020000 		.4byte	.LASF9
 2217 007d 02       		.uleb128 0x2
 2218 007e 04       		.byte	0x4
 2219 007f 07       		.byte	0x7
 2220 0080 83000000 		.4byte	.LASF10
 2221 0084 02       		.uleb128 0x2
 2222 0085 01       		.byte	0x1
 2223 0086 08       		.byte	0x8
 2224 0087 C2030000 		.4byte	.LASF11
 2225 008b 03       		.uleb128 0x3
 2226 008c 0B030000 		.4byte	.LASF13
 2227 0090 03       		.byte	0x3
 2228 0091 2C       		.byte	0x2c
 2229 0092 41000000 		.4byte	0x41
 2230 0096 05       		.uleb128 0x5
 2231 0097 9A010000 		.4byte	.LASF14
 2232 009b 04       		.byte	0x4
 2233 009c E701     		.2byte	0x1e7
 2234 009e 2C000000 		.4byte	0x2c
 2235 00a2 05       		.uleb128 0x5
 2236 00a3 7C010000 		.4byte	.LASF15
 2237 00a7 04       		.byte	0x4
 2238 00a8 E801     		.2byte	0x1e8
 2239 00aa 3A000000 		.4byte	0x3a
 2240 00ae 05       		.uleb128 0x5
 2241 00af 8C040000 		.4byte	.LASF16
 2242 00b3 04       		.byte	0x4
 2243 00b4 E901     		.2byte	0x1e9
 2244 00b6 53000000 		.4byte	0x53
 2245 00ba 05       		.uleb128 0x5
 2246 00bb D8010000 		.4byte	.LASF17
 2247 00bf 04       		.byte	0x4
 2248 00c0 EA01     		.2byte	0x1ea
 2249 00c2 25000000 		.4byte	0x25
 2250 00c6 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 50


 2251 00c7 94010000 		.4byte	.LASF18
 2252 00cb 04       		.byte	0x4
 2253 00cc EB01     		.2byte	0x1eb
 2254 00ce 33000000 		.4byte	0x33
 2255 00d2 02       		.uleb128 0x2
 2256 00d3 04       		.byte	0x4
 2257 00d4 04       		.byte	0x4
 2258 00d5 B2010000 		.4byte	.LASF19
 2259 00d9 02       		.uleb128 0x2
 2260 00da 08       		.byte	0x8
 2261 00db 04       		.byte	0x4
 2262 00dc B5040000 		.4byte	.LASF20
 2263 00e0 06       		.uleb128 0x6
 2264 00e1 A7030000 		.4byte	.LASF108
 2265 00e5 20       		.byte	0x20
 2266 00e6 05       		.byte	0x5
 2267 00e7 28       		.byte	0x28
 2268 00e8 B9010000 		.4byte	0x1b9
 2269 00ec 07       		.uleb128 0x7
 2270 00ed B5050000 		.4byte	.LASF21
 2271 00f1 05       		.byte	0x5
 2272 00f2 2A       		.byte	0x2a
 2273 00f3 BA000000 		.4byte	0xba
 2274 00f7 00       		.byte	0
 2275 00f8 07       		.uleb128 0x7
 2276 00f9 83010000 		.4byte	.LASF22
 2277 00fd 05       		.byte	0x5
 2278 00fe 2B       		.byte	0x2b
 2279 00ff 96000000 		.4byte	0x96
 2280 0103 01       		.byte	0x1
 2281 0104 07       		.uleb128 0x7
 2282 0105 70040000 		.4byte	.LASF23
 2283 0109 05       		.byte	0x5
 2284 010a 2C       		.byte	0x2c
 2285 010b C6000000 		.4byte	0xc6
 2286 010f 02       		.byte	0x2
 2287 0110 07       		.uleb128 0x7
 2288 0111 65050000 		.4byte	.LASF24
 2289 0115 05       		.byte	0x5
 2290 0116 2D       		.byte	0x2d
 2291 0117 C6000000 		.4byte	0xc6
 2292 011b 04       		.byte	0x4
 2293 011c 07       		.uleb128 0x7
 2294 011d 0D050000 		.4byte	.LASF25
 2295 0121 05       		.byte	0x5
 2296 0122 2E       		.byte	0x2e
 2297 0123 C6000000 		.4byte	0xc6
 2298 0127 06       		.byte	0x6
 2299 0128 07       		.uleb128 0x7
 2300 0129 0C020000 		.4byte	.LASF26
 2301 012d 05       		.byte	0x5
 2302 012e 2F       		.byte	0x2f
 2303 012f C6000000 		.4byte	0xc6
 2304 0133 08       		.byte	0x8
 2305 0134 07       		.uleb128 0x7
 2306 0135 05050000 		.4byte	.LASF27
 2307 0139 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 51


 2308 013a 30       		.byte	0x30
 2309 013b C6000000 		.4byte	0xc6
 2310 013f 0A       		.byte	0xa
 2311 0140 07       		.uleb128 0x7
 2312 0141 D4020000 		.4byte	.LASF28
 2313 0145 05       		.byte	0x5
 2314 0146 31       		.byte	0x31
 2315 0147 C6000000 		.4byte	0xc6
 2316 014b 0C       		.byte	0xc
 2317 014c 07       		.uleb128 0x7
 2318 014d FF010000 		.4byte	.LASF29
 2319 0151 05       		.byte	0x5
 2320 0152 32       		.byte	0x32
 2321 0153 C6000000 		.4byte	0xc6
 2322 0157 0E       		.byte	0xe
 2323 0158 07       		.uleb128 0x7
 2324 0159 F7020000 		.4byte	.LASF30
 2325 015d 05       		.byte	0x5
 2326 015e 33       		.byte	0x33
 2327 015f C6000000 		.4byte	0xc6
 2328 0163 10       		.byte	0x10
 2329 0164 07       		.uleb128 0x7
 2330 0165 37040000 		.4byte	.LASF31
 2331 0169 05       		.byte	0x5
 2332 016a 34       		.byte	0x34
 2333 016b C6000000 		.4byte	0xc6
 2334 016f 12       		.byte	0x12
 2335 0170 07       		.uleb128 0x7
 2336 0171 4C040000 		.4byte	.LASF32
 2337 0175 05       		.byte	0x5
 2338 0176 35       		.byte	0x35
 2339 0177 C6000000 		.4byte	0xc6
 2340 017b 14       		.byte	0x14
 2341 017c 07       		.uleb128 0x7
 2342 017d A0010000 		.4byte	.LASF33
 2343 0181 05       		.byte	0x5
 2344 0182 36       		.byte	0x36
 2345 0183 C6000000 		.4byte	0xc6
 2346 0187 16       		.byte	0x16
 2347 0188 07       		.uleb128 0x7
 2348 0189 64000000 		.4byte	.LASF34
 2349 018d 05       		.byte	0x5
 2350 018e 37       		.byte	0x37
 2351 018f C6000000 		.4byte	0xc6
 2352 0193 18       		.byte	0x18
 2353 0194 07       		.uleb128 0x7
 2354 0195 F7010000 		.4byte	.LASF35
 2355 0199 05       		.byte	0x5
 2356 019a 38       		.byte	0x38
 2357 019b C6000000 		.4byte	0xc6
 2358 019f 1A       		.byte	0x1a
 2359 01a0 07       		.uleb128 0x7
 2360 01a1 7F030000 		.4byte	.LASF36
 2361 01a5 05       		.byte	0x5
 2362 01a6 39       		.byte	0x39
 2363 01a7 C6000000 		.4byte	0xc6
 2364 01ab 1C       		.byte	0x1c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 52


 2365 01ac 07       		.uleb128 0x7
 2366 01ad 3F040000 		.4byte	.LASF37
 2367 01b1 05       		.byte	0x5
 2368 01b2 3A       		.byte	0x3a
 2369 01b3 C6000000 		.4byte	0xc6
 2370 01b7 1E       		.byte	0x1e
 2371 01b8 00       		.byte	0
 2372 01b9 08       		.uleb128 0x8
 2373 01ba 97000000 		.4byte	.LASF50
 2374 01be 04       		.byte	0x4
 2375 01bf 6F000000 		.4byte	0x6f
 2376 01c3 01       		.byte	0x1
 2377 01c4 28       		.byte	0x28
 2378 01c5 12020000 		.4byte	0x212
 2379 01c9 09       		.uleb128 0x9
 2380 01ca D0030000 		.4byte	.LASF38
 2381 01ce 00       		.byte	0
 2382 01cf 09       		.uleb128 0x9
 2383 01d0 7B040000 		.4byte	.LASF39
 2384 01d4 01       		.byte	0x1
 2385 01d5 09       		.uleb128 0x9
 2386 01d6 1D000000 		.4byte	.LASF40
 2387 01da 02       		.byte	0x2
 2388 01db 09       		.uleb128 0x9
 2389 01dc 6C010000 		.4byte	.LASF41
 2390 01e0 03       		.byte	0x3
 2391 01e1 09       		.uleb128 0x9
 2392 01e2 2A030000 		.4byte	.LASF42
 2393 01e6 04       		.byte	0x4
 2394 01e7 09       		.uleb128 0x9
 2395 01e8 00050000 		.4byte	.LASF43
 2396 01ec 05       		.byte	0x5
 2397 01ed 09       		.uleb128 0x9
 2398 01ee BC040000 		.4byte	.LASF44
 2399 01f2 06       		.byte	0x6
 2400 01f3 09       		.uleb128 0x9
 2401 01f4 4A000000 		.4byte	.LASF45
 2402 01f8 07       		.byte	0x7
 2403 01f9 09       		.uleb128 0x9
 2404 01fa 43010000 		.4byte	.LASF46
 2405 01fe 08       		.byte	0x8
 2406 01ff 09       		.uleb128 0x9
 2407 0200 2A050000 		.4byte	.LASF47
 2408 0204 09       		.byte	0x9
 2409 0205 09       		.uleb128 0x9
 2410 0206 2D000000 		.4byte	.LASF48
 2411 020a 0A       		.byte	0xa
 2412 020b 09       		.uleb128 0x9
 2413 020c AC040000 		.4byte	.LASF49
 2414 0210 0B       		.byte	0xb
 2415 0211 00       		.byte	0
 2416 0212 08       		.uleb128 0x8
 2417 0213 BA050000 		.4byte	.LASF51
 2418 0217 01       		.byte	0x1
 2419 0218 2C000000 		.4byte	0x2c
 2420 021c 01       		.byte	0x1
 2421 021d 2A       		.byte	0x2a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 53


 2422 021e 3A020000 		.4byte	0x23a
 2423 0222 0A       		.uleb128 0xa
 2424 0223 557000   		.ascii	"Up\000"
 2425 0226 00       		.byte	0
 2426 0227 09       		.uleb128 0x9
 2427 0228 90050000 		.4byte	.LASF52
 2428 022c 01       		.byte	0x1
 2429 022d 09       		.uleb128 0x9
 2430 022e 28020000 		.4byte	.LASF53
 2431 0232 02       		.byte	0x2
 2432 0233 09       		.uleb128 0x9
 2433 0234 B8010000 		.4byte	.LASF54
 2434 0238 03       		.byte	0x3
 2435 0239 00       		.byte	0
 2436 023a 0B       		.uleb128 0xb
 2437 023b 89010000 		.4byte	.LASF62
 2438 023f 01       		.byte	0x1
 2439 0240 45       		.byte	0x45
 2440 0241 00000000 		.4byte	.LFB64
 2441 0245 F4000000 		.4byte	.LFE64-.LFB64
 2442 0249 01       		.uleb128 0x1
 2443 024a 9C       		.byte	0x9c
 2444 024b 68020000 		.4byte	0x268
 2445 024f 0C       		.uleb128 0xc
 2446 0250 58000000 		.4byte	.LBB2
 2447 0254 62000000 		.4byte	.LBE2-.LBB2
 2448 0258 0D       		.uleb128 0xd
 2449 0259 BE010000 		.4byte	.LASF61
 2450 025d 01       		.byte	0x1
 2451 025e 53       		.byte	0x53
 2452 025f D2000000 		.4byte	0xd2
 2453 0263 02       		.uleb128 0x2
 2454 0264 91       		.byte	0x91
 2455 0265 6C       		.sleb128 -20
 2456 0266 00       		.byte	0
 2457 0267 00       		.byte	0
 2458 0268 0E       		.uleb128 0xe
 2459 0269 CF040000 		.4byte	.LASF55
 2460 026d 01       		.byte	0x1
 2461 026e 5E       		.byte	0x5e
 2462 026f 00000000 		.4byte	.LFB65
 2463 0273 18000000 		.4byte	.LFE65-.LFB65
 2464 0277 01       		.uleb128 0x1
 2465 0278 9C       		.byte	0x9c
 2466 0279 0E       		.uleb128 0xe
 2467 027a 60010000 		.4byte	.LASF56
 2468 027e 01       		.byte	0x1
 2469 027f 64       		.byte	0x64
 2470 0280 00000000 		.4byte	.LFB66
 2471 0284 18000000 		.4byte	.LFE66-.LFB66
 2472 0288 01       		.uleb128 0x1
 2473 0289 9C       		.byte	0x9c
 2474 028a 0E       		.uleb128 0xe
 2475 028b 88030000 		.4byte	.LASF57
 2476 028f 01       		.byte	0x1
 2477 0290 6A       		.byte	0x6a
 2478 0291 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 54


 2479 0295 18000000 		.4byte	.LFE67-.LFB67
 2480 0299 01       		.uleb128 0x1
 2481 029a 9C       		.byte	0x9c
 2482 029b 0E       		.uleb128 0xe
 2483 029c 00000000 		.4byte	.LASF58
 2484 02a0 01       		.byte	0x1
 2485 02a1 70       		.byte	0x70
 2486 02a2 00000000 		.4byte	.LFB68
 2487 02a6 18000000 		.4byte	.LFE68-.LFB68
 2488 02aa 01       		.uleb128 0x1
 2489 02ab 9C       		.byte	0x9c
 2490 02ac 0F       		.uleb128 0xf
 2491 02ad 72030000 		.4byte	.LASF59
 2492 02b1 01       		.byte	0x1
 2493 02b2 76       		.byte	0x76
 2494 02b3 00000000 		.4byte	.LFB69
 2495 02b7 38000000 		.4byte	.LFE69-.LFB69
 2496 02bb 01       		.uleb128 0x1
 2497 02bc 9C       		.byte	0x9c
 2498 02bd 10       		.uleb128 0x10
 2499 02be 3E010000 		.4byte	.LASF60
 2500 02c2 01       		.byte	0x1
 2501 02c3 82       		.byte	0x82
 2502 02c4 68000000 		.4byte	0x68
 2503 02c8 00000000 		.4byte	.LFB70
 2504 02cc A0000000 		.4byte	.LFE70-.LFB70
 2505 02d0 01       		.uleb128 0x1
 2506 02d1 9C       		.byte	0x9c
 2507 02d2 11       		.uleb128 0x11
 2508 02d3 3A050000 		.4byte	.LASF109
 2509 02d7 01       		.byte	0x1
 2510 02d8 B2       		.byte	0xb2
 2511 02d9 C6000000 		.4byte	0xc6
 2512 02dd 00000000 		.4byte	.LFB71
 2513 02e1 54000000 		.4byte	.LFE71-.LFB71
 2514 02e5 01       		.uleb128 0x1
 2515 02e6 9C       		.byte	0x9c
 2516 02e7 16030000 		.4byte	0x316
 2517 02eb 12       		.uleb128 0x12
 2518 02ec E4040000 		.4byte	.LASF110
 2519 02f0 01       		.byte	0x1
 2520 02f1 B2       		.byte	0xb2
 2521 02f2 A2000000 		.4byte	0xa2
 2522 02f6 02       		.uleb128 0x2
 2523 02f7 91       		.byte	0x91
 2524 02f8 66       		.sleb128 -26
 2525 02f9 13       		.uleb128 0x13
 2526 02fa 63707300 		.ascii	"cps\000"
 2527 02fe 01       		.byte	0x1
 2528 02ff B4       		.byte	0xb4
 2529 0300 D2000000 		.4byte	0xd2
 2530 0304 02       		.uleb128 0x2
 2531 0305 91       		.byte	0x91
 2532 0306 6C       		.sleb128 -20
 2533 0307 13       		.uleb128 0x13
 2534 0308 72706D00 		.ascii	"rpm\000"
 2535 030c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 55


 2536 030d B5       		.byte	0xb5
 2537 030e C6000000 		.4byte	0xc6
 2538 0312 02       		.uleb128 0x2
 2539 0313 91       		.byte	0x91
 2540 0314 6A       		.sleb128 -22
 2541 0315 00       		.byte	0
 2542 0316 14       		.uleb128 0x14
 2543 0317 B1030000 		.4byte	.LASF67
 2544 031b 01       		.byte	0x1
 2545 031c BD       		.byte	0xbd
 2546 031d 00000000 		.4byte	.LFB72
 2547 0321 34000000 		.4byte	.LFE72-.LFB72
 2548 0325 01       		.uleb128 0x1
 2549 0326 9C       		.byte	0x9c
 2550 0327 15       		.uleb128 0x15
 2551 0328 54010000 		.4byte	.LASF63
 2552 032c 01       		.byte	0x1
 2553 032d C9       		.byte	0xc9
 2554 032e B9010000 		.4byte	0x1b9
 2555 0332 00000000 		.4byte	.LFB73
 2556 0336 98040000 		.4byte	.LFE73-.LFB73
 2557 033a 01       		.uleb128 0x1
 2558 033b 9C       		.byte	0x9c
 2559 033c 4F030000 		.4byte	0x34f
 2560 0340 0D       		.uleb128 0xd
 2561 0341 A6050000 		.4byte	.LASF64
 2562 0345 01       		.byte	0x1
 2563 0346 CA       		.byte	0xca
 2564 0347 B9010000 		.4byte	0x1b9
 2565 034b 02       		.uleb128 0x2
 2566 034c 91       		.byte	0x91
 2567 034d 74       		.sleb128 -12
 2568 034e 00       		.byte	0
 2569 034f 16       		.uleb128 0x16
 2570 0350 2D020000 		.4byte	.LASF65
 2571 0354 01       		.byte	0x1
 2572 0355 2101     		.2byte	0x121
 2573 0357 B9010000 		.4byte	0x1b9
 2574 035b 00000000 		.4byte	.LFB74
 2575 035f 18030000 		.4byte	.LFE74-.LFB74
 2576 0363 01       		.uleb128 0x1
 2577 0364 9C       		.byte	0x9c
 2578 0365 88030000 		.4byte	0x388
 2579 0369 17       		.uleb128 0x17
 2580 036a 63020000 		.4byte	.LASF66
 2581 036e 01       		.byte	0x1
 2582 036f 2201     		.2byte	0x122
 2583 0371 D2000000 		.4byte	0xd2
 2584 0375 02       		.uleb128 0x2
 2585 0376 91       		.byte	0x91
 2586 0377 74       		.sleb128 -12
 2587 0378 17       		.uleb128 0x17
 2588 0379 A6050000 		.4byte	.LASF64
 2589 037d 01       		.byte	0x1
 2590 037e 2801     		.2byte	0x128
 2591 0380 B9010000 		.4byte	0x1b9
 2592 0384 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 56


 2593 0385 91       		.byte	0x91
 2594 0386 70       		.sleb128 -16
 2595 0387 00       		.byte	0
 2596 0388 18       		.uleb128 0x18
 2597 0389 61030000 		.4byte	.LASF68
 2598 038d 01       		.byte	0x1
 2599 038e E201     		.2byte	0x1e2
 2600 0390 00000000 		.4byte	.LFB75
 2601 0394 98000000 		.4byte	.LFE75-.LFB75
 2602 0398 01       		.uleb128 0x1
 2603 0399 9C       		.byte	0x9c
 2604 039a 19       		.uleb128 0x19
 2605 039b 70050000 		.4byte	.LASF69
 2606 039f 06       		.byte	0x6
 2607 03a0 1207     		.2byte	0x712
 2608 03a2 A6030000 		.4byte	0x3a6
 2609 03a6 1A       		.uleb128 0x1a
 2610 03a7 8B000000 		.4byte	0x8b
 2611 03ab 1B       		.uleb128 0x1b
 2612 03ac 747300   		.ascii	"ts\000"
 2613 03af 05       		.byte	0x5
 2614 03b0 10       		.byte	0x10
 2615 03b1 96000000 		.4byte	0x96
 2616 03b5 05       		.uleb128 0x5
 2617 03b6 03       		.byte	0x3
 2618 03b7 00000000 		.4byte	ts
 2619 03bb 1C       		.uleb128 0x1c
 2620 03bc 26000000 		.4byte	.LASF70
 2621 03c0 05       		.byte	0x5
 2622 03c1 11       		.byte	0x11
 2623 03c2 A2000000 		.4byte	0xa2
 2624 03c6 05       		.uleb128 0x5
 2625 03c7 03       		.byte	0x3
 2626 03c8 00000000 		.4byte	ts_enc
 2627 03cc 1C       		.uleb128 0x1c
 2628 03cd 48030000 		.4byte	.LASF71
 2629 03d1 05       		.byte	0x5
 2630 03d2 12       		.byte	0x12
 2631 03d3 A2000000 		.4byte	0xa2
 2632 03d7 05       		.uleb128 0x5
 2633 03d8 03       		.byte	0x3
 2634 03d9 00000000 		.4byte	ts_update
 2635 03dd 1C       		.uleb128 0x1c
 2636 03de DB040000 		.4byte	.LASF72
 2637 03e2 05       		.byte	0x5
 2638 03e3 13       		.byte	0x13
 2639 03e4 A2000000 		.4byte	0xa2
 2640 03e8 05       		.uleb128 0x5
 2641 03e9 03       		.byte	0x3
 2642 03ea 00000000 		.4byte	ts_speed
 2643 03ee 1C       		.uleb128 0x1c
 2644 03ef 1F050000 		.4byte	.LASF73
 2645 03f3 05       		.byte	0x5
 2646 03f4 14       		.byte	0x14
 2647 03f5 A2000000 		.4byte	0xa2
 2648 03f9 05       		.uleb128 0x5
 2649 03fa 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 57


 2650 03fb 00000000 		.4byte	ts_display
 2651 03ff 1C       		.uleb128 0x1c
 2652 0400 EA040000 		.4byte	.LASF74
 2653 0404 05       		.byte	0x5
 2654 0405 16       		.byte	0x16
 2655 0406 96000000 		.4byte	0x96
 2656 040a 05       		.uleb128 0x5
 2657 040b 03       		.byte	0x3
 2658 040c 00000000 		.4byte	flag_ts_enc
 2659 0410 1C       		.uleb128 0x1c
 2660 0411 E8010000 		.4byte	.LASF75
 2661 0415 05       		.byte	0x5
 2662 0416 17       		.byte	0x17
 2663 0417 96000000 		.4byte	0x96
 2664 041b 05       		.uleb128 0x5
 2665 041c 03       		.byte	0x3
 2666 041d 00000000 		.4byte	flag_ts_update
 2667 0421 1C       		.uleb128 0x1c
 2668 0422 56000000 		.4byte	.LASF76
 2669 0426 05       		.byte	0x5
 2670 0427 18       		.byte	0x18
 2671 0428 96000000 		.4byte	0x96
 2672 042c 05       		.uleb128 0x5
 2673 042d 03       		.byte	0x3
 2674 042e 00000000 		.4byte	flag_ts_speed
 2675 0432 1C       		.uleb128 0x1c
 2676 0433 4B020000 		.4byte	.LASF77
 2677 0437 05       		.byte	0x5
 2678 0438 19       		.byte	0x19
 2679 0439 96000000 		.4byte	0x96
 2680 043d 05       		.uleb128 0x5
 2681 043e 03       		.byte	0x3
 2682 043f 00000000 		.4byte	flag_ts_display
 2683 0443 1C       		.uleb128 0x1c
 2684 0444 5B020000 		.4byte	.LASF78
 2685 0448 05       		.byte	0x5
 2686 0449 1B       		.byte	0x1b
 2687 044a 96000000 		.4byte	0x96
 2688 044e 05       		.uleb128 0x5
 2689 044f 03       		.byte	0x3
 2690 0450 00000000 		.4byte	flag_rx
 2691 0454 1C       		.uleb128 0x1c
 2692 0455 3E000000 		.4byte	.LASF79
 2693 0459 05       		.byte	0x5
 2694 045a 1C       		.byte	0x1c
 2695 045b 96000000 		.4byte	0x96
 2696 045f 05       		.uleb128 0x5
 2697 0460 03       		.byte	0x3
 2698 0461 00000000 		.4byte	flag_packet
 2699 0465 1C       		.uleb128 0x1c
 2700 0466 52030000 		.4byte	.LASF80
 2701 046a 05       		.byte	0x5
 2702 046b 1D       		.byte	0x1d
 2703 046c 96000000 		.4byte	0x96
 2704 0470 05       		.uleb128 0x5
 2705 0471 03       		.byte	0x3
 2706 0472 00000000 		.4byte	flag_KB_string
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 58


 2707 0476 1C       		.uleb128 0x1c
 2708 0477 E8020000 		.4byte	.LASF81
 2709 047b 05       		.byte	0x5
 2710 047c 1F       		.byte	0x1f
 2711 047d 96000000 		.4byte	0x96
 2712 0481 05       		.uleb128 0x5
 2713 0482 03       		.byte	0x3
 2714 0483 00000000 		.4byte	dataready_flag
 2715 0487 1C       		.uleb128 0x1c
 2716 0488 49050000 		.4byte	.LASF82
 2717 048c 05       		.byte	0x5
 2718 048d 21       		.byte	0x21
 2719 048e 96000000 		.4byte	0x96
 2720 0492 05       		.uleb128 0x5
 2721 0493 03       		.byte	0x3
 2722 0494 00000000 		.4byte	flag_rf_transmission_active
 2723 0498 1D       		.uleb128 0x1d
 2724 0499 84000000 		.4byte	0x84
 2725 049d A8040000 		.4byte	0x4a8
 2726 04a1 1E       		.uleb128 0x1e
 2727 04a2 7D000000 		.4byte	0x7d
 2728 04a6 3F       		.byte	0x3f
 2729 04a7 00       		.byte	0
 2730 04a8 1C       		.uleb128 0x1c
 2731 04a9 55040000 		.4byte	.LASF83
 2732 04ad 05       		.byte	0x5
 2733 04ae 24       		.byte	0x24
 2734 04af 98040000 		.4byte	0x498
 2735 04b3 05       		.uleb128 0x5
 2736 04b4 03       		.byte	0x3
 2737 04b5 00000000 		.4byte	displaystring
 2738 04b9 1C       		.uleb128 0x1c
 2739 04ba AD010000 		.4byte	.LASF84
 2740 04be 05       		.byte	0x5
 2741 04bf 25       		.byte	0x25
 2742 04c0 98040000 		.4byte	0x498
 2743 04c4 05       		.uleb128 0x5
 2744 04c5 03       		.byte	0x3
 2745 04c6 00000000 		.4byte	line
 2746 04ca 1C       		.uleb128 0x1c
 2747 04cb 8D020000 		.4byte	.LASF85
 2748 04cf 05       		.byte	0x5
 2749 04d0 25       		.byte	0x25
 2750 04d1 98040000 		.4byte	0x498
 2751 04d5 05       		.uleb128 0x5
 2752 04d6 03       		.byte	0x3
 2753 04d7 00000000 		.4byte	entry
 2754 04db 1D       		.uleb128 0x1d
 2755 04dc 96000000 		.4byte	0x96
 2756 04e0 EB040000 		.4byte	0x4eb
 2757 04e4 1E       		.uleb128 0x1e
 2758 04e5 7D000000 		.4byte	0x7d
 2759 04e9 3F       		.byte	0x3f
 2760 04ea 00       		.byte	0
 2761 04eb 1C       		.uleb128 0x1c
 2762 04ec A6000000 		.4byte	.LASF86
 2763 04f0 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 59


 2764 04f1 26       		.byte	0x26
 2765 04f2 DB040000 		.4byte	0x4db
 2766 04f6 05       		.uleb128 0x5
 2767 04f7 03       		.byte	0x3
 2768 04f8 00000000 		.4byte	usbBuffer
 2769 04fc 1C       		.uleb128 0x1c
 2770 04fd 76000000 		.4byte	.LASF87
 2771 0501 05       		.byte	0x5
 2772 0502 3C       		.byte	0x3c
 2773 0503 E0000000 		.4byte	0xe0
 2774 0507 05       		.uleb128 0x5
 2775 0508 03       		.byte	0x3
 2776 0509 00000000 		.4byte	system_state
 2777 050d 1D       		.uleb128 0x1d
 2778 050e 68000000 		.4byte	0x68
 2779 0512 23050000 		.4byte	0x523
 2780 0516 1E       		.uleb128 0x1e
 2781 0517 7D000000 		.4byte	0x7d
 2782 051b 0E       		.byte	0xe
 2783 051c 1E       		.uleb128 0x1e
 2784 051d 7D000000 		.4byte	0x7d
 2785 0521 12       		.byte	0x12
 2786 0522 00       		.byte	0
 2787 0523 1F       		.uleb128 0x1f
 2788 0524 6D617000 		.ascii	"map\000"
 2789 0528 07       		.byte	0x7
 2790 0529 04       		.byte	0x4
 2791 052a 0D050000 		.4byte	0x50d
 2792 052e 1C       		.uleb128 0x1c
 2793 052f 95050000 		.4byte	.LASF88
 2794 0533 01       		.byte	0x1
 2795 0534 2B       		.byte	0x2b
 2796 0535 B9010000 		.4byte	0x1b9
 2797 0539 05       		.uleb128 0x5
 2798 053a 03       		.byte	0x3
 2799 053b 00000000 		.4byte	currentDirection
 2800 053f 1C       		.uleb128 0x1c
 2801 0540 AA020000 		.4byte	.LASF89
 2802 0544 01       		.byte	0x1
 2803 0545 2C       		.byte	0x2c
 2804 0546 B9010000 		.4byte	0x1b9
 2805 054a 05       		.uleb128 0x5
 2806 054b 03       		.byte	0x3
 2807 054c 00000000 		.4byte	previousDirection
 2808 0550 1C       		.uleb128 0x1c
 2809 0551 7D050000 		.4byte	.LASF90
 2810 0555 01       		.byte	0x1
 2811 0556 2D       		.byte	0x2d
 2812 0557 12020000 		.4byte	0x212
 2813 055b 05       		.uleb128 0x5
 2814 055c 03       		.byte	0x3
 2815 055d 00000000 		.4byte	currentOrientation
 2816 0561 1C       		.uleb128 0x1c
 2817 0562 14020000 		.4byte	.LASF91
 2818 0566 01       		.byte	0x1
 2819 0567 2E       		.byte	0x2e
 2820 0568 12020000 		.4byte	0x212
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 60


 2821 056c 05       		.uleb128 0x5
 2822 056d 03       		.byte	0x3
 2823 056e 00000000 		.4byte	previousOrientation
 2824 0572 1B       		.uleb128 0x1b
 2825 0573 733300   		.ascii	"s3\000"
 2826 0576 01       		.byte	0x1
 2827 0577 32       		.byte	0x32
 2828 0578 96000000 		.4byte	0x96
 2829 057c 05       		.uleb128 0x5
 2830 057d 03       		.byte	0x3
 2831 057e 00000000 		.4byte	s3
 2832 0582 1B       		.uleb128 0x1b
 2833 0583 733400   		.ascii	"s4\000"
 2834 0586 01       		.byte	0x1
 2835 0587 33       		.byte	0x33
 2836 0588 96000000 		.4byte	0x96
 2837 058c 05       		.uleb128 0x5
 2838 058d 03       		.byte	0x3
 2839 058e 00000000 		.4byte	s4
 2840 0592 1B       		.uleb128 0x1b
 2841 0593 733500   		.ascii	"s5\000"
 2842 0596 01       		.byte	0x1
 2843 0597 34       		.byte	0x34
 2844 0598 96000000 		.4byte	0x96
 2845 059c 05       		.uleb128 0x5
 2846 059d 03       		.byte	0x3
 2847 059e 00000000 		.4byte	s5
 2848 05a2 1B       		.uleb128 0x1b
 2849 05a3 733600   		.ascii	"s6\000"
 2850 05a6 01       		.byte	0x1
 2851 05a7 35       		.byte	0x35
 2852 05a8 96000000 		.4byte	0x96
 2853 05ac 05       		.uleb128 0x5
 2854 05ad 03       		.byte	0x3
 2855 05ae 00000000 		.4byte	s6
 2856 05b2 1C       		.uleb128 0x1c
 2857 05b3 7B020000 		.4byte	.LASF92
 2858 05b7 01       		.byte	0x1
 2859 05b8 3A       		.byte	0x3a
 2860 05b9 AE000000 		.4byte	0xae
 2861 05bd 05       		.uleb128 0x5
 2862 05be 03       		.byte	0x3
 2863 05bf 00000000 		.4byte	totalMilliseconds
 2864 05c3 1C       		.uleb128 0x1c
 2865 05c4 BC020000 		.4byte	.LASF93
 2866 05c8 01       		.byte	0x1
 2867 05c9 3B       		.byte	0x3b
 2868 05ca D2000000 		.4byte	0xd2
 2869 05ce 05       		.uleb128 0x5
 2870 05cf 03       		.byte	0x3
 2871 05d0 00000000 		.4byte	totalDistance
 2872 05d4 1D       		.uleb128 0x1d
 2873 05d5 84000000 		.4byte	0x84
 2874 05d9 E4050000 		.4byte	0x5e4
 2875 05dd 1E       		.uleb128 0x1e
 2876 05de 7D000000 		.4byte	0x7d
 2877 05e2 44       		.byte	0x44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 61


 2878 05e3 00       		.byte	0
 2879 05e4 1C       		.uleb128 0x1c
 2880 05e5 85040000 		.4byte	.LASF94
 2881 05e9 01       		.byte	0x1
 2882 05ea 3D       		.byte	0x3d
 2883 05eb D4050000 		.4byte	0x5d4
 2884 05ef 05       		.uleb128 0x5
 2885 05f0 03       		.byte	0x3
 2886 05f1 00000000 		.4byte	buffer
 2887 05f5 1C       		.uleb128 0x1c
 2888 05f6 29040000 		.4byte	.LASF95
 2889 05fa 01       		.byte	0x1
 2890 05fb 3E       		.byte	0x3e
 2891 05fc 68000000 		.4byte	0x68
 2892 0600 05       		.uleb128 0x5
 2893 0601 03       		.byte	0x3
 2894 0602 00000000 		.4byte	quadDec2Count
 2895 0606 1C       		.uleb128 0x1c
 2896 0607 42020000 		.4byte	.LASF96
 2897 060b 01       		.byte	0x1
 2898 060c 3F       		.byte	0x3f
 2899 060d 68000000 		.4byte	0x68
 2900 0611 05       		.uleb128 0x5
 2901 0612 03       		.byte	0x3
 2902 0613 00000000 		.4byte	timerInt
 2903 0617 1C       		.uleb128 0x1c
 2904 0618 CA020000 		.4byte	.LASF97
 2905 061c 01       		.byte	0x1
 2906 061d 40       		.byte	0x40
 2907 061e 68000000 		.4byte	0x68
 2908 0622 05       		.uleb128 0x5
 2909 0623 03       		.byte	0x3
 2910 0624 00000000 		.4byte	keepLedOn
 2911 0628 1C       		.uleb128 0x1c
 2912 0629 8C000000 		.4byte	.LASF98
 2913 062d 01       		.byte	0x1
 2914 062e 41       		.byte	0x41
 2915 062f AE000000 		.4byte	0xae
 2916 0633 05       		.uleb128 0x5
 2917 0634 03       		.byte	0x3
 2918 0635 00000000 		.4byte	stopBuffer
 2919 0639 1C       		.uleb128 0x1c
 2920 063a DD010000 		.4byte	.LASF99
 2921 063e 01       		.byte	0x1
 2922 063f C4       		.byte	0xc4
 2923 0640 D2000000 		.4byte	0xd2
 2924 0644 05       		.uleb128 0x5
 2925 0645 03       		.byte	0x3
 2926 0646 00000000 		.4byte	xBlocksize
 2927 064a 1C       		.uleb128 0x1c
 2928 064b DD020000 		.4byte	.LASF100
 2929 064f 01       		.byte	0x1
 2930 0650 C5       		.byte	0xc5
 2931 0651 D2000000 		.4byte	0xd2
 2932 0655 05       		.uleb128 0x5
 2933 0656 03       		.byte	0x3
 2934 0657 00000000 		.4byte	yBlocksize
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 62


 2935 065b 1C       		.uleb128 0x1c
 2936 065c C4040000 		.4byte	.LASF101
 2937 0660 01       		.byte	0x1
 2938 0661 C6       		.byte	0xc6
 2939 0662 96000000 		.4byte	0x96
 2940 0666 05       		.uleb128 0x5
 2941 0667 03       		.byte	0x3
 2942 0668 00000000 		.4byte	currentRow
 2943 066c 1C       		.uleb128 0x1c
 2944 066d 9F020000 		.4byte	.LASF102
 2945 0671 01       		.byte	0x1
 2946 0672 C7       		.byte	0xc7
 2947 0673 96000000 		.4byte	0x96
 2948 0677 05       		.uleb128 0x5
 2949 0678 03       		.byte	0x3
 2950 0679 00000000 		.4byte	currentCol
 2951 067d 20       		.uleb128 0x20
 2952 067e 0C000000 		.4byte	.LASF103
 2953 0682 01       		.byte	0x1
 2954 0683 1E01     		.2byte	0x11e
 2955 0685 96000000 		.4byte	0x96
 2956 0689 05       		.uleb128 0x5
 2957 068a 03       		.byte	0x3
 2958 068b 00000000 		.4byte	stoppedAfterTurn
 2959 068f 20       		.uleb128 0x20
 2960 0690 63040000 		.4byte	.LASF104
 2961 0694 01       		.byte	0x1
 2962 0695 1F01     		.2byte	0x11f
 2963 0697 96000000 		.4byte	0x96
 2964 069b 05       		.uleb128 0x5
 2965 069c 03       		.byte	0x3
 2966 069d 00000000 		.4byte	ignoreSensor
 2967 06a1 00       		.byte	0
 2968              		.section	.debug_abbrev,"",%progbits
 2969              	.Ldebug_abbrev0:
 2970 0000 01       		.uleb128 0x1
 2971 0001 11       		.uleb128 0x11
 2972 0002 01       		.byte	0x1
 2973 0003 25       		.uleb128 0x25
 2974 0004 0E       		.uleb128 0xe
 2975 0005 13       		.uleb128 0x13
 2976 0006 0B       		.uleb128 0xb
 2977 0007 03       		.uleb128 0x3
 2978 0008 0E       		.uleb128 0xe
 2979 0009 1B       		.uleb128 0x1b
 2980 000a 0E       		.uleb128 0xe
 2981 000b 55       		.uleb128 0x55
 2982 000c 17       		.uleb128 0x17
 2983 000d 11       		.uleb128 0x11
 2984 000e 01       		.uleb128 0x1
 2985 000f 10       		.uleb128 0x10
 2986 0010 17       		.uleb128 0x17
 2987 0011 00       		.byte	0
 2988 0012 00       		.byte	0
 2989 0013 02       		.uleb128 0x2
 2990 0014 24       		.uleb128 0x24
 2991 0015 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 63


 2992 0016 0B       		.uleb128 0xb
 2993 0017 0B       		.uleb128 0xb
 2994 0018 3E       		.uleb128 0x3e
 2995 0019 0B       		.uleb128 0xb
 2996 001a 03       		.uleb128 0x3
 2997 001b 0E       		.uleb128 0xe
 2998 001c 00       		.byte	0
 2999 001d 00       		.byte	0
 3000 001e 03       		.uleb128 0x3
 3001 001f 16       		.uleb128 0x16
 3002 0020 00       		.byte	0
 3003 0021 03       		.uleb128 0x3
 3004 0022 0E       		.uleb128 0xe
 3005 0023 3A       		.uleb128 0x3a
 3006 0024 0B       		.uleb128 0xb
 3007 0025 3B       		.uleb128 0x3b
 3008 0026 0B       		.uleb128 0xb
 3009 0027 49       		.uleb128 0x49
 3010 0028 13       		.uleb128 0x13
 3011 0029 00       		.byte	0
 3012 002a 00       		.byte	0
 3013 002b 04       		.uleb128 0x4
 3014 002c 24       		.uleb128 0x24
 3015 002d 00       		.byte	0
 3016 002e 0B       		.uleb128 0xb
 3017 002f 0B       		.uleb128 0xb
 3018 0030 3E       		.uleb128 0x3e
 3019 0031 0B       		.uleb128 0xb
 3020 0032 03       		.uleb128 0x3
 3021 0033 08       		.uleb128 0x8
 3022 0034 00       		.byte	0
 3023 0035 00       		.byte	0
 3024 0036 05       		.uleb128 0x5
 3025 0037 16       		.uleb128 0x16
 3026 0038 00       		.byte	0
 3027 0039 03       		.uleb128 0x3
 3028 003a 0E       		.uleb128 0xe
 3029 003b 3A       		.uleb128 0x3a
 3030 003c 0B       		.uleb128 0xb
 3031 003d 3B       		.uleb128 0x3b
 3032 003e 05       		.uleb128 0x5
 3033 003f 49       		.uleb128 0x49
 3034 0040 13       		.uleb128 0x13
 3035 0041 00       		.byte	0
 3036 0042 00       		.byte	0
 3037 0043 06       		.uleb128 0x6
 3038 0044 13       		.uleb128 0x13
 3039 0045 01       		.byte	0x1
 3040 0046 03       		.uleb128 0x3
 3041 0047 0E       		.uleb128 0xe
 3042 0048 0B       		.uleb128 0xb
 3043 0049 0B       		.uleb128 0xb
 3044 004a 3A       		.uleb128 0x3a
 3045 004b 0B       		.uleb128 0xb
 3046 004c 3B       		.uleb128 0x3b
 3047 004d 0B       		.uleb128 0xb
 3048 004e 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 64


 3049 004f 13       		.uleb128 0x13
 3050 0050 00       		.byte	0
 3051 0051 00       		.byte	0
 3052 0052 07       		.uleb128 0x7
 3053 0053 0D       		.uleb128 0xd
 3054 0054 00       		.byte	0
 3055 0055 03       		.uleb128 0x3
 3056 0056 0E       		.uleb128 0xe
 3057 0057 3A       		.uleb128 0x3a
 3058 0058 0B       		.uleb128 0xb
 3059 0059 3B       		.uleb128 0x3b
 3060 005a 0B       		.uleb128 0xb
 3061 005b 49       		.uleb128 0x49
 3062 005c 13       		.uleb128 0x13
 3063 005d 38       		.uleb128 0x38
 3064 005e 0B       		.uleb128 0xb
 3065 005f 00       		.byte	0
 3066 0060 00       		.byte	0
 3067 0061 08       		.uleb128 0x8
 3068 0062 04       		.uleb128 0x4
 3069 0063 01       		.byte	0x1
 3070 0064 03       		.uleb128 0x3
 3071 0065 0E       		.uleb128 0xe
 3072 0066 0B       		.uleb128 0xb
 3073 0067 0B       		.uleb128 0xb
 3074 0068 49       		.uleb128 0x49
 3075 0069 13       		.uleb128 0x13
 3076 006a 3A       		.uleb128 0x3a
 3077 006b 0B       		.uleb128 0xb
 3078 006c 3B       		.uleb128 0x3b
 3079 006d 0B       		.uleb128 0xb
 3080 006e 01       		.uleb128 0x1
 3081 006f 13       		.uleb128 0x13
 3082 0070 00       		.byte	0
 3083 0071 00       		.byte	0
 3084 0072 09       		.uleb128 0x9
 3085 0073 28       		.uleb128 0x28
 3086 0074 00       		.byte	0
 3087 0075 03       		.uleb128 0x3
 3088 0076 0E       		.uleb128 0xe
 3089 0077 1C       		.uleb128 0x1c
 3090 0078 0B       		.uleb128 0xb
 3091 0079 00       		.byte	0
 3092 007a 00       		.byte	0
 3093 007b 0A       		.uleb128 0xa
 3094 007c 28       		.uleb128 0x28
 3095 007d 00       		.byte	0
 3096 007e 03       		.uleb128 0x3
 3097 007f 08       		.uleb128 0x8
 3098 0080 1C       		.uleb128 0x1c
 3099 0081 0B       		.uleb128 0xb
 3100 0082 00       		.byte	0
 3101 0083 00       		.byte	0
 3102 0084 0B       		.uleb128 0xb
 3103 0085 2E       		.uleb128 0x2e
 3104 0086 01       		.byte	0x1
 3105 0087 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 65


 3106 0088 19       		.uleb128 0x19
 3107 0089 03       		.uleb128 0x3
 3108 008a 0E       		.uleb128 0xe
 3109 008b 3A       		.uleb128 0x3a
 3110 008c 0B       		.uleb128 0xb
 3111 008d 3B       		.uleb128 0x3b
 3112 008e 0B       		.uleb128 0xb
 3113 008f 27       		.uleb128 0x27
 3114 0090 19       		.uleb128 0x19
 3115 0091 11       		.uleb128 0x11
 3116 0092 01       		.uleb128 0x1
 3117 0093 12       		.uleb128 0x12
 3118 0094 06       		.uleb128 0x6
 3119 0095 40       		.uleb128 0x40
 3120 0096 18       		.uleb128 0x18
 3121 0097 9642     		.uleb128 0x2116
 3122 0099 19       		.uleb128 0x19
 3123 009a 01       		.uleb128 0x1
 3124 009b 13       		.uleb128 0x13
 3125 009c 00       		.byte	0
 3126 009d 00       		.byte	0
 3127 009e 0C       		.uleb128 0xc
 3128 009f 0B       		.uleb128 0xb
 3129 00a0 01       		.byte	0x1
 3130 00a1 11       		.uleb128 0x11
 3131 00a2 01       		.uleb128 0x1
 3132 00a3 12       		.uleb128 0x12
 3133 00a4 06       		.uleb128 0x6
 3134 00a5 00       		.byte	0
 3135 00a6 00       		.byte	0
 3136 00a7 0D       		.uleb128 0xd
 3137 00a8 34       		.uleb128 0x34
 3138 00a9 00       		.byte	0
 3139 00aa 03       		.uleb128 0x3
 3140 00ab 0E       		.uleb128 0xe
 3141 00ac 3A       		.uleb128 0x3a
 3142 00ad 0B       		.uleb128 0xb
 3143 00ae 3B       		.uleb128 0x3b
 3144 00af 0B       		.uleb128 0xb
 3145 00b0 49       		.uleb128 0x49
 3146 00b1 13       		.uleb128 0x13
 3147 00b2 02       		.uleb128 0x2
 3148 00b3 18       		.uleb128 0x18
 3149 00b4 00       		.byte	0
 3150 00b5 00       		.byte	0
 3151 00b6 0E       		.uleb128 0xe
 3152 00b7 2E       		.uleb128 0x2e
 3153 00b8 00       		.byte	0
 3154 00b9 3F       		.uleb128 0x3f
 3155 00ba 19       		.uleb128 0x19
 3156 00bb 03       		.uleb128 0x3
 3157 00bc 0E       		.uleb128 0xe
 3158 00bd 3A       		.uleb128 0x3a
 3159 00be 0B       		.uleb128 0xb
 3160 00bf 3B       		.uleb128 0x3b
 3161 00c0 0B       		.uleb128 0xb
 3162 00c1 27       		.uleb128 0x27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 66


 3163 00c2 19       		.uleb128 0x19
 3164 00c3 11       		.uleb128 0x11
 3165 00c4 01       		.uleb128 0x1
 3166 00c5 12       		.uleb128 0x12
 3167 00c6 06       		.uleb128 0x6
 3168 00c7 40       		.uleb128 0x40
 3169 00c8 18       		.uleb128 0x18
 3170 00c9 9742     		.uleb128 0x2117
 3171 00cb 19       		.uleb128 0x19
 3172 00cc 00       		.byte	0
 3173 00cd 00       		.byte	0
 3174 00ce 0F       		.uleb128 0xf
 3175 00cf 2E       		.uleb128 0x2e
 3176 00d0 00       		.byte	0
 3177 00d1 3F       		.uleb128 0x3f
 3178 00d2 19       		.uleb128 0x19
 3179 00d3 03       		.uleb128 0x3
 3180 00d4 0E       		.uleb128 0xe
 3181 00d5 3A       		.uleb128 0x3a
 3182 00d6 0B       		.uleb128 0xb
 3183 00d7 3B       		.uleb128 0x3b
 3184 00d8 0B       		.uleb128 0xb
 3185 00d9 27       		.uleb128 0x27
 3186 00da 19       		.uleb128 0x19
 3187 00db 11       		.uleb128 0x11
 3188 00dc 01       		.uleb128 0x1
 3189 00dd 12       		.uleb128 0x12
 3190 00de 06       		.uleb128 0x6
 3191 00df 40       		.uleb128 0x40
 3192 00e0 18       		.uleb128 0x18
 3193 00e1 9642     		.uleb128 0x2116
 3194 00e3 19       		.uleb128 0x19
 3195 00e4 00       		.byte	0
 3196 00e5 00       		.byte	0
 3197 00e6 10       		.uleb128 0x10
 3198 00e7 2E       		.uleb128 0x2e
 3199 00e8 00       		.byte	0
 3200 00e9 3F       		.uleb128 0x3f
 3201 00ea 19       		.uleb128 0x19
 3202 00eb 03       		.uleb128 0x3
 3203 00ec 0E       		.uleb128 0xe
 3204 00ed 3A       		.uleb128 0x3a
 3205 00ee 0B       		.uleb128 0xb
 3206 00ef 3B       		.uleb128 0x3b
 3207 00f0 0B       		.uleb128 0xb
 3208 00f1 49       		.uleb128 0x49
 3209 00f2 13       		.uleb128 0x13
 3210 00f3 11       		.uleb128 0x11
 3211 00f4 01       		.uleb128 0x1
 3212 00f5 12       		.uleb128 0x12
 3213 00f6 06       		.uleb128 0x6
 3214 00f7 40       		.uleb128 0x40
 3215 00f8 18       		.uleb128 0x18
 3216 00f9 9642     		.uleb128 0x2116
 3217 00fb 19       		.uleb128 0x19
 3218 00fc 00       		.byte	0
 3219 00fd 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 67


 3220 00fe 11       		.uleb128 0x11
 3221 00ff 2E       		.uleb128 0x2e
 3222 0100 01       		.byte	0x1
 3223 0101 3F       		.uleb128 0x3f
 3224 0102 19       		.uleb128 0x19
 3225 0103 03       		.uleb128 0x3
 3226 0104 0E       		.uleb128 0xe
 3227 0105 3A       		.uleb128 0x3a
 3228 0106 0B       		.uleb128 0xb
 3229 0107 3B       		.uleb128 0x3b
 3230 0108 0B       		.uleb128 0xb
 3231 0109 27       		.uleb128 0x27
 3232 010a 19       		.uleb128 0x19
 3233 010b 49       		.uleb128 0x49
 3234 010c 13       		.uleb128 0x13
 3235 010d 11       		.uleb128 0x11
 3236 010e 01       		.uleb128 0x1
 3237 010f 12       		.uleb128 0x12
 3238 0110 06       		.uleb128 0x6
 3239 0111 40       		.uleb128 0x40
 3240 0112 18       		.uleb128 0x18
 3241 0113 9642     		.uleb128 0x2116
 3242 0115 19       		.uleb128 0x19
 3243 0116 01       		.uleb128 0x1
 3244 0117 13       		.uleb128 0x13
 3245 0118 00       		.byte	0
 3246 0119 00       		.byte	0
 3247 011a 12       		.uleb128 0x12
 3248 011b 05       		.uleb128 0x5
 3249 011c 00       		.byte	0
 3250 011d 03       		.uleb128 0x3
 3251 011e 0E       		.uleb128 0xe
 3252 011f 3A       		.uleb128 0x3a
 3253 0120 0B       		.uleb128 0xb
 3254 0121 3B       		.uleb128 0x3b
 3255 0122 0B       		.uleb128 0xb
 3256 0123 49       		.uleb128 0x49
 3257 0124 13       		.uleb128 0x13
 3258 0125 02       		.uleb128 0x2
 3259 0126 18       		.uleb128 0x18
 3260 0127 00       		.byte	0
 3261 0128 00       		.byte	0
 3262 0129 13       		.uleb128 0x13
 3263 012a 34       		.uleb128 0x34
 3264 012b 00       		.byte	0
 3265 012c 03       		.uleb128 0x3
 3266 012d 08       		.uleb128 0x8
 3267 012e 3A       		.uleb128 0x3a
 3268 012f 0B       		.uleb128 0xb
 3269 0130 3B       		.uleb128 0x3b
 3270 0131 0B       		.uleb128 0xb
 3271 0132 49       		.uleb128 0x49
 3272 0133 13       		.uleb128 0x13
 3273 0134 02       		.uleb128 0x2
 3274 0135 18       		.uleb128 0x18
 3275 0136 00       		.byte	0
 3276 0137 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 68


 3277 0138 14       		.uleb128 0x14
 3278 0139 2E       		.uleb128 0x2e
 3279 013a 00       		.byte	0
 3280 013b 3F       		.uleb128 0x3f
 3281 013c 19       		.uleb128 0x19
 3282 013d 03       		.uleb128 0x3
 3283 013e 0E       		.uleb128 0xe
 3284 013f 3A       		.uleb128 0x3a
 3285 0140 0B       		.uleb128 0xb
 3286 0141 3B       		.uleb128 0x3b
 3287 0142 0B       		.uleb128 0xb
 3288 0143 11       		.uleb128 0x11
 3289 0144 01       		.uleb128 0x1
 3290 0145 12       		.uleb128 0x12
 3291 0146 06       		.uleb128 0x6
 3292 0147 40       		.uleb128 0x40
 3293 0148 18       		.uleb128 0x18
 3294 0149 9742     		.uleb128 0x2117
 3295 014b 19       		.uleb128 0x19
 3296 014c 00       		.byte	0
 3297 014d 00       		.byte	0
 3298 014e 15       		.uleb128 0x15
 3299 014f 2E       		.uleb128 0x2e
 3300 0150 01       		.byte	0x1
 3301 0151 3F       		.uleb128 0x3f
 3302 0152 19       		.uleb128 0x19
 3303 0153 03       		.uleb128 0x3
 3304 0154 0E       		.uleb128 0xe
 3305 0155 3A       		.uleb128 0x3a
 3306 0156 0B       		.uleb128 0xb
 3307 0157 3B       		.uleb128 0x3b
 3308 0158 0B       		.uleb128 0xb
 3309 0159 49       		.uleb128 0x49
 3310 015a 13       		.uleb128 0x13
 3311 015b 11       		.uleb128 0x11
 3312 015c 01       		.uleb128 0x1
 3313 015d 12       		.uleb128 0x12
 3314 015e 06       		.uleb128 0x6
 3315 015f 40       		.uleb128 0x40
 3316 0160 18       		.uleb128 0x18
 3317 0161 9742     		.uleb128 0x2117
 3318 0163 19       		.uleb128 0x19
 3319 0164 01       		.uleb128 0x1
 3320 0165 13       		.uleb128 0x13
 3321 0166 00       		.byte	0
 3322 0167 00       		.byte	0
 3323 0168 16       		.uleb128 0x16
 3324 0169 2E       		.uleb128 0x2e
 3325 016a 01       		.byte	0x1
 3326 016b 3F       		.uleb128 0x3f
 3327 016c 19       		.uleb128 0x19
 3328 016d 03       		.uleb128 0x3
 3329 016e 0E       		.uleb128 0xe
 3330 016f 3A       		.uleb128 0x3a
 3331 0170 0B       		.uleb128 0xb
 3332 0171 3B       		.uleb128 0x3b
 3333 0172 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 69


 3334 0173 49       		.uleb128 0x49
 3335 0174 13       		.uleb128 0x13
 3336 0175 11       		.uleb128 0x11
 3337 0176 01       		.uleb128 0x1
 3338 0177 12       		.uleb128 0x12
 3339 0178 06       		.uleb128 0x6
 3340 0179 40       		.uleb128 0x40
 3341 017a 18       		.uleb128 0x18
 3342 017b 9642     		.uleb128 0x2116
 3343 017d 19       		.uleb128 0x19
 3344 017e 01       		.uleb128 0x1
 3345 017f 13       		.uleb128 0x13
 3346 0180 00       		.byte	0
 3347 0181 00       		.byte	0
 3348 0182 17       		.uleb128 0x17
 3349 0183 34       		.uleb128 0x34
 3350 0184 00       		.byte	0
 3351 0185 03       		.uleb128 0x3
 3352 0186 0E       		.uleb128 0xe
 3353 0187 3A       		.uleb128 0x3a
 3354 0188 0B       		.uleb128 0xb
 3355 0189 3B       		.uleb128 0x3b
 3356 018a 05       		.uleb128 0x5
 3357 018b 49       		.uleb128 0x49
 3358 018c 13       		.uleb128 0x13
 3359 018d 02       		.uleb128 0x2
 3360 018e 18       		.uleb128 0x18
 3361 018f 00       		.byte	0
 3362 0190 00       		.byte	0
 3363 0191 18       		.uleb128 0x18
 3364 0192 2E       		.uleb128 0x2e
 3365 0193 00       		.byte	0
 3366 0194 3F       		.uleb128 0x3f
 3367 0195 19       		.uleb128 0x19
 3368 0196 03       		.uleb128 0x3
 3369 0197 0E       		.uleb128 0xe
 3370 0198 3A       		.uleb128 0x3a
 3371 0199 0B       		.uleb128 0xb
 3372 019a 3B       		.uleb128 0x3b
 3373 019b 05       		.uleb128 0x5
 3374 019c 11       		.uleb128 0x11
 3375 019d 01       		.uleb128 0x1
 3376 019e 12       		.uleb128 0x12
 3377 019f 06       		.uleb128 0x6
 3378 01a0 40       		.uleb128 0x40
 3379 01a1 18       		.uleb128 0x18
 3380 01a2 9642     		.uleb128 0x2116
 3381 01a4 19       		.uleb128 0x19
 3382 01a5 00       		.byte	0
 3383 01a6 00       		.byte	0
 3384 01a7 19       		.uleb128 0x19
 3385 01a8 34       		.uleb128 0x34
 3386 01a9 00       		.byte	0
 3387 01aa 03       		.uleb128 0x3
 3388 01ab 0E       		.uleb128 0xe
 3389 01ac 3A       		.uleb128 0x3a
 3390 01ad 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 70


 3391 01ae 3B       		.uleb128 0x3b
 3392 01af 05       		.uleb128 0x5
 3393 01b0 49       		.uleb128 0x49
 3394 01b1 13       		.uleb128 0x13
 3395 01b2 3F       		.uleb128 0x3f
 3396 01b3 19       		.uleb128 0x19
 3397 01b4 3C       		.uleb128 0x3c
 3398 01b5 19       		.uleb128 0x19
 3399 01b6 00       		.byte	0
 3400 01b7 00       		.byte	0
 3401 01b8 1A       		.uleb128 0x1a
 3402 01b9 35       		.uleb128 0x35
 3403 01ba 00       		.byte	0
 3404 01bb 49       		.uleb128 0x49
 3405 01bc 13       		.uleb128 0x13
 3406 01bd 00       		.byte	0
 3407 01be 00       		.byte	0
 3408 01bf 1B       		.uleb128 0x1b
 3409 01c0 34       		.uleb128 0x34
 3410 01c1 00       		.byte	0
 3411 01c2 03       		.uleb128 0x3
 3412 01c3 08       		.uleb128 0x8
 3413 01c4 3A       		.uleb128 0x3a
 3414 01c5 0B       		.uleb128 0xb
 3415 01c6 3B       		.uleb128 0x3b
 3416 01c7 0B       		.uleb128 0xb
 3417 01c8 49       		.uleb128 0x49
 3418 01c9 13       		.uleb128 0x13
 3419 01ca 3F       		.uleb128 0x3f
 3420 01cb 19       		.uleb128 0x19
 3421 01cc 02       		.uleb128 0x2
 3422 01cd 18       		.uleb128 0x18
 3423 01ce 00       		.byte	0
 3424 01cf 00       		.byte	0
 3425 01d0 1C       		.uleb128 0x1c
 3426 01d1 34       		.uleb128 0x34
 3427 01d2 00       		.byte	0
 3428 01d3 03       		.uleb128 0x3
 3429 01d4 0E       		.uleb128 0xe
 3430 01d5 3A       		.uleb128 0x3a
 3431 01d6 0B       		.uleb128 0xb
 3432 01d7 3B       		.uleb128 0x3b
 3433 01d8 0B       		.uleb128 0xb
 3434 01d9 49       		.uleb128 0x49
 3435 01da 13       		.uleb128 0x13
 3436 01db 3F       		.uleb128 0x3f
 3437 01dc 19       		.uleb128 0x19
 3438 01dd 02       		.uleb128 0x2
 3439 01de 18       		.uleb128 0x18
 3440 01df 00       		.byte	0
 3441 01e0 00       		.byte	0
 3442 01e1 1D       		.uleb128 0x1d
 3443 01e2 01       		.uleb128 0x1
 3444 01e3 01       		.byte	0x1
 3445 01e4 49       		.uleb128 0x49
 3446 01e5 13       		.uleb128 0x13
 3447 01e6 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 71


 3448 01e7 13       		.uleb128 0x13
 3449 01e8 00       		.byte	0
 3450 01e9 00       		.byte	0
 3451 01ea 1E       		.uleb128 0x1e
 3452 01eb 21       		.uleb128 0x21
 3453 01ec 00       		.byte	0
 3454 01ed 49       		.uleb128 0x49
 3455 01ee 13       		.uleb128 0x13
 3456 01ef 2F       		.uleb128 0x2f
 3457 01f0 0B       		.uleb128 0xb
 3458 01f1 00       		.byte	0
 3459 01f2 00       		.byte	0
 3460 01f3 1F       		.uleb128 0x1f
 3461 01f4 34       		.uleb128 0x34
 3462 01f5 00       		.byte	0
 3463 01f6 03       		.uleb128 0x3
 3464 01f7 08       		.uleb128 0x8
 3465 01f8 3A       		.uleb128 0x3a
 3466 01f9 0B       		.uleb128 0xb
 3467 01fa 3B       		.uleb128 0x3b
 3468 01fb 0B       		.uleb128 0xb
 3469 01fc 49       		.uleb128 0x49
 3470 01fd 13       		.uleb128 0x13
 3471 01fe 3F       		.uleb128 0x3f
 3472 01ff 19       		.uleb128 0x19
 3473 0200 3C       		.uleb128 0x3c
 3474 0201 19       		.uleb128 0x19
 3475 0202 00       		.byte	0
 3476 0203 00       		.byte	0
 3477 0204 20       		.uleb128 0x20
 3478 0205 34       		.uleb128 0x34
 3479 0206 00       		.byte	0
 3480 0207 03       		.uleb128 0x3
 3481 0208 0E       		.uleb128 0xe
 3482 0209 3A       		.uleb128 0x3a
 3483 020a 0B       		.uleb128 0xb
 3484 020b 3B       		.uleb128 0x3b
 3485 020c 05       		.uleb128 0x5
 3486 020d 49       		.uleb128 0x49
 3487 020e 13       		.uleb128 0x13
 3488 020f 3F       		.uleb128 0x3f
 3489 0210 19       		.uleb128 0x19
 3490 0211 02       		.uleb128 0x2
 3491 0212 18       		.uleb128 0x18
 3492 0213 00       		.byte	0
 3493 0214 00       		.byte	0
 3494 0215 00       		.byte	0
 3495              		.section	.debug_aranges,"",%progbits
 3496 0000 74000000 		.4byte	0x74
 3497 0004 0200     		.2byte	0x2
 3498 0006 00000000 		.4byte	.Ldebug_info0
 3499 000a 04       		.byte	0x4
 3500 000b 00       		.byte	0
 3501 000c 0000     		.2byte	0
 3502 000e 0000     		.2byte	0
 3503 0010 00000000 		.4byte	.LFB64
 3504 0014 F4000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 72


 3505 0018 00000000 		.4byte	.LFB65
 3506 001c 18000000 		.4byte	.LFE65-.LFB65
 3507 0020 00000000 		.4byte	.LFB66
 3508 0024 18000000 		.4byte	.LFE66-.LFB66
 3509 0028 00000000 		.4byte	.LFB67
 3510 002c 18000000 		.4byte	.LFE67-.LFB67
 3511 0030 00000000 		.4byte	.LFB68
 3512 0034 18000000 		.4byte	.LFE68-.LFB68
 3513 0038 00000000 		.4byte	.LFB69
 3514 003c 38000000 		.4byte	.LFE69-.LFB69
 3515 0040 00000000 		.4byte	.LFB70
 3516 0044 A0000000 		.4byte	.LFE70-.LFB70
 3517 0048 00000000 		.4byte	.LFB71
 3518 004c 54000000 		.4byte	.LFE71-.LFB71
 3519 0050 00000000 		.4byte	.LFB72
 3520 0054 34000000 		.4byte	.LFE72-.LFB72
 3521 0058 00000000 		.4byte	.LFB73
 3522 005c 98040000 		.4byte	.LFE73-.LFB73
 3523 0060 00000000 		.4byte	.LFB74
 3524 0064 18030000 		.4byte	.LFE74-.LFB74
 3525 0068 00000000 		.4byte	.LFB75
 3526 006c 98000000 		.4byte	.LFE75-.LFB75
 3527 0070 00000000 		.4byte	0
 3528 0074 00000000 		.4byte	0
 3529              		.section	.debug_ranges,"",%progbits
 3530              	.Ldebug_ranges0:
 3531 0000 00000000 		.4byte	.LFB64
 3532 0004 F4000000 		.4byte	.LFE64
 3533 0008 00000000 		.4byte	.LFB65
 3534 000c 18000000 		.4byte	.LFE65
 3535 0010 00000000 		.4byte	.LFB66
 3536 0014 18000000 		.4byte	.LFE66
 3537 0018 00000000 		.4byte	.LFB67
 3538 001c 18000000 		.4byte	.LFE67
 3539 0020 00000000 		.4byte	.LFB68
 3540 0024 18000000 		.4byte	.LFE68
 3541 0028 00000000 		.4byte	.LFB69
 3542 002c 38000000 		.4byte	.LFE69
 3543 0030 00000000 		.4byte	.LFB70
 3544 0034 A0000000 		.4byte	.LFE70
 3545 0038 00000000 		.4byte	.LFB71
 3546 003c 54000000 		.4byte	.LFE71
 3547 0040 00000000 		.4byte	.LFB72
 3548 0044 34000000 		.4byte	.LFE72
 3549 0048 00000000 		.4byte	.LFB73
 3550 004c 98040000 		.4byte	.LFE73
 3551 0050 00000000 		.4byte	.LFB74
 3552 0054 18030000 		.4byte	.LFE74
 3553 0058 00000000 		.4byte	.LFB75
 3554 005c 98000000 		.4byte	.LFE75
 3555 0060 00000000 		.4byte	0
 3556 0064 00000000 		.4byte	0
 3557              		.section	.debug_line,"",%progbits
 3558              	.Ldebug_line0:
 3559 0000 14040000 		.section	.debug_str,"MS",%progbits,1
 3559      02005F01 
 3559      00000201 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 73


 3559      FB0E0D00 
 3559      01010101 
 3560              	.LASF58:
 3561 0000 53365F44 		.ascii	"S6_DETECTED\000"
 3561      45544543 
 3561      54454400 
 3562              	.LASF103:
 3563 000c 73746F70 		.ascii	"stoppedAfterTurn\000"
 3563      70656441 
 3563      66746572 
 3563      5475726E 
 3563      00
 3564              	.LASF40:
 3565 001d 5475726E 		.ascii	"TurnLeft\000"
 3565      4C656674 
 3565      00
 3566              	.LASF70:
 3567 0026 74735F65 		.ascii	"ts_enc\000"
 3567      6E6300
 3568              	.LASF48:
 3569 002d 466F7277 		.ascii	"ForwardAfterTurn\000"
 3569      61726441 
 3569      66746572 
 3569      5475726E 
 3569      00
 3570              	.LASF79:
 3571 003e 666C6167 		.ascii	"flag_packet\000"
 3571      5F706163 
 3571      6B657400 
 3572              	.LASF45:
 3573 004a 77616974 		.ascii	"waitForTurn\000"
 3573      466F7254 
 3573      75726E00 
 3574              	.LASF76:
 3575 0056 666C6167 		.ascii	"flag_ts_speed\000"
 3575      5F74735F 
 3575      73706565 
 3575      6400
 3576              	.LASF34:
 3577 0064 67325F78 		.ascii	"g2_xpos\000"
 3577      706F7300 
 3578              	.LASF2:
 3579 006c 73686F72 		.ascii	"short int\000"
 3579      7420696E 
 3579      7400
 3580              	.LASF87:
 3581 0076 73797374 		.ascii	"system_state\000"
 3581      656D5F73 
 3581      74617465 
 3581      00
 3582              	.LASF10:
 3583 0083 73697A65 		.ascii	"sizetype\000"
 3583      74797065 
 3583      00
 3584              	.LASF98:
 3585 008c 73746F70 		.ascii	"stopBuffer\000"
 3585      42756666 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 74


 3585      657200
 3586              	.LASF50:
 3587 0097 44697265 		.ascii	"DirectionState\000"
 3587      6374696F 
 3587      6E537461 
 3587      746500
 3588              	.LASF86:
 3589 00a6 75736242 		.ascii	"usbBuffer\000"
 3589      75666665 
 3589      7200
 3590              	.LASF105:
 3591 00b0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3591      43313120 
 3591      352E342E 
 3591      31203230 
 3591      31363036 
 3592 00e3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3592      20726576 
 3592      6973696F 
 3592      6E203233 
 3592      37373135 
 3593 0116 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3593      66756E63 
 3593      74696F6E 
 3593      2D736563 
 3593      74696F6E 
 3594              	.LASF60:
 3595 013e 6D61696E 		.ascii	"main\000"
 3595      00
 3596              	.LASF46:
 3597 0143 77616974 		.ascii	"waitForRightTurn\000"
 3597      466F7252 
 3597      69676874 
 3597      5475726E 
 3597      00
 3598              	.LASF63:
 3599 0154 4765744E 		.ascii	"GetNextStep\000"
 3599      65787453 
 3599      74657000 
 3600              	.LASF56:
 3601 0160 53345F44 		.ascii	"S4_DETECTED\000"
 3601      45544543 
 3601      54454400 
 3602              	.LASF41:
 3603 016c 41646A75 		.ascii	"AdjustToTheLeft\000"
 3603      7374546F 
 3603      5468654C 
 3603      65667400 
 3604              	.LASF15:
 3605 017c 75696E74 		.ascii	"uint16\000"
 3605      313600
 3606              	.LASF22:
 3607 0183 696E6465 		.ascii	"index\000"
 3607      7800
 3608              	.LASF62:
 3609 0189 73706565 		.ascii	"speedTimer\000"
 3609      6454696D 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 75


 3609      657200
 3610              	.LASF18:
 3611 0194 696E7431 		.ascii	"int16\000"
 3611      3600
 3612              	.LASF14:
 3613 019a 75696E74 		.ascii	"uint8\000"
 3613      3800
 3614              	.LASF33:
 3615 01a0 67315F64 		.ascii	"g1_direction\000"
 3615      69726563 
 3615      74696F6E 
 3615      00
 3616              	.LASF84:
 3617 01ad 6C696E65 		.ascii	"line\000"
 3617      00
 3618              	.LASF19:
 3619 01b2 666C6F61 		.ascii	"float\000"
 3619      7400
 3620              	.LASF54:
 3621 01b8 52696768 		.ascii	"Right\000"
 3621      7400
 3622              	.LASF61:
 3623 01be 6E657744 		.ascii	"newDistance\000"
 3623      69737461 
 3623      6E636500 
 3624              	.LASF6:
 3625 01ca 6C6F6E67 		.ascii	"long long int\000"
 3625      206C6F6E 
 3625      6720696E 
 3625      7400
 3626              	.LASF17:
 3627 01d8 696E7438 		.ascii	"int8\000"
 3627      00
 3628              	.LASF99:
 3629 01dd 78426C6F 		.ascii	"xBlocksize\000"
 3629      636B7369 
 3629      7A6500
 3630              	.LASF75:
 3631 01e8 666C6167 		.ascii	"flag_ts_update\000"
 3631      5F74735F 
 3631      75706461 
 3631      746500
 3632              	.LASF35:
 3633 01f7 67325F79 		.ascii	"g2_ypos\000"
 3633      706F7300 
 3634              	.LASF29:
 3635 01ff 67305F64 		.ascii	"g0_direction\000"
 3635      69726563 
 3635      74696F6E 
 3635      00
 3636              	.LASF26:
 3637 020c 67305F78 		.ascii	"g0_xpos\000"
 3637      706F7300 
 3638              	.LASF91:
 3639 0214 70726576 		.ascii	"previousOrientation\000"
 3639      696F7573 
 3639      4F726965 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 76


 3639      6E746174 
 3639      696F6E00 
 3640              	.LASF53:
 3641 0228 4C656674 		.ascii	"Left\000"
 3641      00
 3642              	.LASF65:
 3643 022d 43686563 		.ascii	"CheckSensorDirection\000"
 3643      6B53656E 
 3643      736F7244 
 3643      69726563 
 3643      74696F6E 
 3644              	.LASF96:
 3645 0242 74696D65 		.ascii	"timerInt\000"
 3645      72496E74 
 3645      00
 3646              	.LASF77:
 3647 024b 666C6167 		.ascii	"flag_ts_display\000"
 3647      5F74735F 
 3647      64697370 
 3647      6C617900 
 3648              	.LASF78:
 3649 025b 666C6167 		.ascii	"flag_rx\000"
 3649      5F727800 
 3650              	.LASF66:
 3651 0263 626C6F63 		.ascii	"blocksize\000"
 3651      6B73697A 
 3651      6500
 3652              	.LASF1:
 3653 026d 756E7369 		.ascii	"unsigned char\000"
 3653      676E6564 
 3653      20636861 
 3653      7200
 3654              	.LASF92:
 3655 027b 746F7461 		.ascii	"totalMilliseconds\000"
 3655      6C4D696C 
 3655      6C697365 
 3655      636F6E64 
 3655      7300
 3656              	.LASF85:
 3657 028d 656E7472 		.ascii	"entry\000"
 3657      7900
 3658              	.LASF9:
 3659 0293 6C6F6E67 		.ascii	"long double\000"
 3659      20646F75 
 3659      626C6500 
 3660              	.LASF102:
 3661 029f 63757272 		.ascii	"currentCol\000"
 3661      656E7443 
 3661      6F6C00
 3662              	.LASF89:
 3663 02aa 70726576 		.ascii	"previousDirection\000"
 3663      696F7573 
 3663      44697265 
 3663      6374696F 
 3663      6E00
 3664              	.LASF93:
 3665 02bc 746F7461 		.ascii	"totalDistance\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 77


 3665      6C446973 
 3665      74616E63 
 3665      6500
 3666              	.LASF97:
 3667 02ca 6B656570 		.ascii	"keepLedOn\000"
 3667      4C65644F 
 3667      6E00
 3668              	.LASF28:
 3669 02d4 67305F73 		.ascii	"g0_speed\000"
 3669      70656564 
 3669      00
 3670              	.LASF100:
 3671 02dd 79426C6F 		.ascii	"yBlocksize\000"
 3671      636B7369 
 3671      7A6500
 3672              	.LASF81:
 3673 02e8 64617461 		.ascii	"dataready_flag\000"
 3673      72656164 
 3673      795F666C 
 3673      616700
 3674              	.LASF30:
 3675 02f7 67315F78 		.ascii	"g1_xpos\000"
 3675      706F7300 
 3676              	.LASF0:
 3677 02ff 7369676E 		.ascii	"signed char\000"
 3677      65642063 
 3677      68617200 
 3678              	.LASF13:
 3679 030b 696E7433 		.ascii	"int32_t\000"
 3679      325F7400 
 3680              	.LASF7:
 3681 0313 6C6F6E67 		.ascii	"long long unsigned int\000"
 3681      206C6F6E 
 3681      6720756E 
 3681      7369676E 
 3681      65642069 
 3682              	.LASF42:
 3683 032a 41646A75 		.ascii	"AdjustToTheRight\000"
 3683      7374546F 
 3683      54686552 
 3683      69676874 
 3683      00
 3684              	.LASF8:
 3685 033b 756E7369 		.ascii	"unsigned int\000"
 3685      676E6564 
 3685      20696E74 
 3685      00
 3686              	.LASF71:
 3687 0348 74735F75 		.ascii	"ts_update\000"
 3687      70646174 
 3687      6500
 3688              	.LASF80:
 3689 0352 666C6167 		.ascii	"flag_KB_string\000"
 3689      5F4B425F 
 3689      73747269 
 3689      6E6700
 3690              	.LASF68:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 78


 3691 0361 53657452 		.ascii	"SetRobotMovement\000"
 3691      6F626F74 
 3691      4D6F7665 
 3691      6D656E74 
 3691      00
 3692              	.LASF59:
 3693 0372 54494D45 		.ascii	"TIMER_FINISH\000"
 3693      525F4649 
 3693      4E495348 
 3693      00
 3694              	.LASF36:
 3695 037f 67325F73 		.ascii	"g2_speed\000"
 3695      70656564 
 3695      00
 3696              	.LASF57:
 3697 0388 53355F44 		.ascii	"S5_DETECTED\000"
 3697      45544543 
 3697      54454400 
 3698              	.LASF3:
 3699 0394 73686F72 		.ascii	"short unsigned int\000"
 3699      7420756E 
 3699      7369676E 
 3699      65642069 
 3699      6E7400
 3700              	.LASF108:
 3701 03a7 64617461 		.ascii	"data_main\000"
 3701      5F6D6169 
 3701      6E00
 3702              	.LASF67:
 3703 03b1 52657365 		.ascii	"ResetSensorFlags\000"
 3703      7453656E 
 3703      736F7246 
 3703      6C616773 
 3703      00
 3704              	.LASF11:
 3705 03c2 63686172 		.ascii	"char\000"
 3705      00
 3706              	.LASF4:
 3707 03c7 6C6F6E67 		.ascii	"long int\000"
 3707      20696E74 
 3707      00
 3708              	.LASF38:
 3709 03d0 466F7277 		.ascii	"Forward\000"
 3709      61726400 
 3710              	.LASF107:
 3711 03d8 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3711      6F63756D 
 3711      656E7473 
 3711      5C476974 
 3711      4875625C 
 3712 0407 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3712      635F636F 
 3712      64655F62 
 3712      6173655C 
 3712      43533330 
 3713              	.LASF95:
 3714 0429 71756164 		.ascii	"quadDec2Count\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 79


 3714      44656332 
 3714      436F756E 
 3714      7400
 3715              	.LASF31:
 3716 0437 67315F79 		.ascii	"g1_ypos\000"
 3716      706F7300 
 3717              	.LASF37:
 3718 043f 67325F64 		.ascii	"g2_direction\000"
 3718      69726563 
 3718      74696F6E 
 3718      00
 3719              	.LASF32:
 3720 044c 67315F73 		.ascii	"g1_speed\000"
 3720      70656564 
 3720      00
 3721              	.LASF83:
 3722 0455 64697370 		.ascii	"displaystring\000"
 3722      6C617973 
 3722      7472696E 
 3722      6700
 3723              	.LASF104:
 3724 0463 69676E6F 		.ascii	"ignoreSensor\000"
 3724      72655365 
 3724      6E736F72 
 3724      00
 3725              	.LASF23:
 3726 0470 726F626F 		.ascii	"robot_xpos\000"
 3726      745F7870 
 3726      6F7300
 3727              	.LASF39:
 3728 047b 5475726E 		.ascii	"TurnRight\000"
 3728      52696768 
 3728      7400
 3729              	.LASF94:
 3730 0485 62756666 		.ascii	"buffer\000"
 3730      657200
 3731              	.LASF16:
 3732 048c 75696E74 		.ascii	"uint32\000"
 3732      333200
 3733              	.LASF106:
 3734 0493 6D61696E 		.ascii	"main.c\000"
 3734      2E6300
 3735              	.LASF5:
 3736 049a 6C6F6E67 		.ascii	"long unsigned int\000"
 3736      20756E73 
 3736      69676E65 
 3736      6420696E 
 3736      7400
 3737              	.LASF49:
 3738 04ac 4261636B 		.ascii	"Backward\000"
 3738      77617264 
 3738      00
 3739              	.LASF20:
 3740 04b5 646F7562 		.ascii	"double\000"
 3740      6C6500
 3741              	.LASF44:
 3742 04bc 556E6B6E 		.ascii	"Unknown\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 80


 3742      6F776E00 
 3743              	.LASF101:
 3744 04c4 63757272 		.ascii	"currentRow\000"
 3744      656E7452 
 3744      6F7700
 3745              	.LASF55:
 3746 04cf 53335F44 		.ascii	"S3_DETECTED\000"
 3746      45544543 
 3746      54454400 
 3747              	.LASF72:
 3748 04db 74735F73 		.ascii	"ts_speed\000"
 3748      70656564 
 3748      00
 3749              	.LASF110:
 3750 04e4 636F756E 		.ascii	"count\000"
 3750      7400
 3751              	.LASF74:
 3752 04ea 666C6167 		.ascii	"flag_ts_enc\000"
 3752      5F74735F 
 3752      656E6300 
 3753              	.LASF12:
 3754 04f6 5F5F696E 		.ascii	"__int32_t\000"
 3754      7433325F 
 3754      7400
 3755              	.LASF43:
 3756 0500 53746F70 		.ascii	"Stop\000"
 3756      00
 3757              	.LASF27:
 3758 0505 67305F79 		.ascii	"g0_ypos\000"
 3758      706F7300 
 3759              	.LASF25:
 3760 050d 726F626F 		.ascii	"robot_orientation\000"
 3760      745F6F72 
 3760      69656E74 
 3760      6174696F 
 3760      6E00
 3761              	.LASF73:
 3762 051f 74735F64 		.ascii	"ts_display\000"
 3762      6973706C 
 3762      617900
 3763              	.LASF47:
 3764 052a 77616974 		.ascii	"waitForLeftTurn\000"
 3764      466F724C 
 3764      65667454 
 3764      75726E00 
 3765              	.LASF109:
 3766 053a 71756164 		.ascii	"quadCountToRPM\000"
 3766      436F756E 
 3766      74546F52 
 3766      504D00
 3767              	.LASF82:
 3768 0549 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3768      5F72665F 
 3768      7472616E 
 3768      736D6973 
 3768      73696F6E 
 3769              	.LASF24:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cchPS9Rh.s 			page 81


 3770 0565 726F626F 		.ascii	"robot_ypos\000"
 3770      745F7970 
 3770      6F7300
 3771              	.LASF69:
 3772 0570 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3772      52784275 
 3772      66666572 
 3772      00
 3773              	.LASF90:
 3774 057d 63757272 		.ascii	"currentOrientation\000"
 3774      656E744F 
 3774      7269656E 
 3774      74617469 
 3774      6F6E00
 3775              	.LASF52:
 3776 0590 446F776E 		.ascii	"Down\000"
 3776      00
 3777              	.LASF88:
 3778 0595 63757272 		.ascii	"currentDirection\000"
 3778      656E7444 
 3778      69726563 
 3778      74696F6E 
 3778      00
 3779              	.LASF64:
 3780 05a6 64697265 		.ascii	"directionState\000"
 3780      6374696F 
 3780      6E537461 
 3780      746500
 3781              	.LASF21:
 3782 05b5 72737369 		.ascii	"rssi\000"
 3782      00
 3783              	.LASF51:
 3784 05ba 4F726965 		.ascii	"OrientationState\000"
 3784      6E746174 
 3784      696F6E53 
 3784      74617465 
 3784      00
 3785              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
