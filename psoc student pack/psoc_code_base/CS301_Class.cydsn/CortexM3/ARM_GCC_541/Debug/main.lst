ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 03       		.byte	3
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.global	instructionIndex
 124              		.bss
 125 0013 00       		.align	2
 126              		.type	instructionIndex, %object
 127              		.size	instructionIndex, 4
 128              	instructionIndex:
 129 0014 00000000 		.space	4
 130              		.comm	s3,1,1
 131              		.comm	s4,1,1
 132              		.comm	s5,1,1
 133              		.global	s6
 134              		.type	s6, %object
 135              		.size	s6, 1
 136              	s6:
 137 0018 00       		.space	1
 138              		.global	totalMilliseconds
 139 0019 000000   		.align	2
 140              		.type	totalMilliseconds, %object
 141              		.size	totalMilliseconds, 4
 142              	totalMilliseconds:
 143 001c 00000000 		.space	4
 144              		.global	totalDistance
 145              		.align	2
 146              		.type	totalDistance, %object
 147              		.size	totalDistance, 4
 148              	totalDistance:
 149 0020 00000000 		.space	4
 150              		.comm	buffer,69,4
 151              		.global	quadDec2Count
 152              		.align	2
 153              		.type	quadDec2Count, %object
 154              		.size	quadDec2Count, 4
 155              	quadDec2Count:
 156 0024 00000000 		.space	4
 157              		.global	timerInt
 158              		.align	2
 159              		.type	timerInt, %object
 160              		.size	timerInt, 4
 161              	timerInt:
 162 0028 00000000 		.space	4
 163              		.global	keepLedOn
 164              		.align	2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 4


 165              		.type	keepLedOn, %object
 166              		.size	keepLedOn, 4
 167              	keepLedOn:
 168 002c 00000000 		.space	4
 169              		.global	stopBuffer
 170              		.align	2
 171              		.type	stopBuffer, %object
 172              		.size	stopBuffer, 4
 173              	stopBuffer:
 174 0030 00000000 		.space	4
 175              		.global	__aeabi_i2d
 176              		.global	__aeabi_dmul
 177              		.global	__aeabi_ddiv
 178              		.global	__aeabi_d2f
 179              		.global	__aeabi_fadd
 180              		.section	.text.speedTimer,"ax",%progbits
 181              		.align	2
 182              		.global	speedTimer
 183              		.thumb
 184              		.thumb_func
 185              		.type	speedTimer, %function
 186              	speedTimer:
 187              	.LFB64:
 188              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentOrientation, previousOrientation = Right;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 5


  34:main.c        **** void MoveToNextInstruction();
  35:main.c        **** // ----------------------------------------
  36:main.c        **** uint8 s3, s4, s5, s6 = 0;
  37:main.c        **** //* ========================================
  38:main.c        **** // Calculating Distance
  39:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  40:main.c        **** 
  41:main.c        **** uint32 totalMilliseconds = 0;
  42:main.c        **** float totalDistance = 0; // in mm
  43:main.c        **** //* ========================================
  44:main.c        **** char buffer[69];
  45:main.c        **** int quadDec2Count = 0;
  46:main.c        **** int timerInt = 0;
  47:main.c        **** int keepLedOn = 0;
  48:main.c        **** uint32 stopBuffer = 0;
  49:main.c        **** 
  50:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  51:main.c        **** 
  52:main.c        **** CY_ISR (speedTimer) {
 189              		.loc 1 52 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 90B5     		push	{r4, r7, lr}
 194              		.cfi_def_cfa_offset 12
 195              		.cfi_offset 4, -12
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              		.cfi_def_cfa_offset 24
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
  53:main.c        ****     timerInt = 1;
 202              		.loc 1 53 0
 203 0006 364B     		ldr	r3, .L4+16
 204 0008 0122     		movs	r2, #1
 205 000a 1A60     		str	r2, [r3]
  54:main.c        ****     //quadDec_M1 used for turning macros
  55:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 206              		.loc 1 55 0
 207 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 208 0010 0346     		mov	r3, r0
 209 0012 1A46     		mov	r2, r3
 210 0014 334B     		ldr	r3, .L4+20
 211 0016 1A60     		str	r2, [r3]
  56:main.c        ****     
  57:main.c        ****     if ((currentDirection == Forward || 
 212              		.loc 1 57 0
 213 0018 334B     		ldr	r3, .L4+24
 214 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 001c 002B     		cmp	r3, #0
 216 001e 17D0     		beq	.L2
  58:main.c        ****         currentDirection == waitForTurn || 
 217              		.loc 1 58 0 discriminator 1
 218 0020 314B     		ldr	r3, .L4+24
 219 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  57:main.c        ****         currentDirection == waitForTurn || 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 6


 220              		.loc 1 57 0 discriminator 1
 221 0024 072B     		cmp	r3, #7
 222 0026 13D0     		beq	.L2
  59:main.c        ****         currentDirection == waitForTurn ||
 223              		.loc 1 59 0
 224 0028 2F4B     		ldr	r3, .L4+24
 225 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  58:main.c        ****         currentDirection == waitForTurn || 
 226              		.loc 1 58 0
 227 002c 072B     		cmp	r3, #7
 228 002e 0FD0     		beq	.L2
  60:main.c        ****         currentDirection == waitForRightTurn ||
 229              		.loc 1 60 0
 230 0030 2D4B     		ldr	r3, .L4+24
 231 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  59:main.c        ****         currentDirection == waitForTurn ||
 232              		.loc 1 59 0
 233 0034 022B     		cmp	r3, #2
 234 0036 0BD0     		beq	.L2
  61:main.c        ****         currentDirection == ForwardAfterTurn ||
 235              		.loc 1 61 0
 236 0038 2B4B     		ldr	r3, .L4+24
 237 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  60:main.c        ****         currentDirection == waitForRightTurn ||
 238              		.loc 1 60 0
 239 003c 082B     		cmp	r3, #8
 240 003e 07D0     		beq	.L2
  62:main.c        ****         currentDirection == AdjustToTheLeft ||
 241              		.loc 1 62 0
 242 0040 294B     		ldr	r3, .L4+24
 243 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  61:main.c        ****         currentDirection == ForwardAfterTurn ||
 244              		.loc 1 61 0
 245 0044 032B     		cmp	r3, #3
 246 0046 03D0     		beq	.L2
  63:main.c        ****         currentDirection == AdjustToTheRight) &&
 247              		.loc 1 63 0
 248 0048 274B     		ldr	r3, .L4+24
 249 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:main.c        ****         currentDirection == AdjustToTheLeft ||
 250              		.loc 1 62 0
 251 004c 042B     		cmp	r3, #4
 252 004e 34D1     		bne	.L3
 253              	.L2:
  64:main.c        ****         quadDec2Count != 0) {
 254              		.loc 1 64 0
 255 0050 244B     		ldr	r3, .L4+20
 256 0052 1B68     		ldr	r3, [r3]
  63:main.c        ****         currentDirection == AdjustToTheRight) &&
 257              		.loc 1 63 0
 258 0054 002B     		cmp	r3, #0
 259 0056 30D0     		beq	.L3
 260              	.LBB2:
  65:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  66:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 261              		.loc 1 66 0
 262 0058 224B     		ldr	r3, .L4+20
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 7


 263 005a 1B68     		ldr	r3, [r3]
 264 005c 002B     		cmp	r3, #0
 265 005e B8BF     		it	lt
 266 0060 5B42     		rsblt	r3, r3, #0
 267 0062 1846     		mov	r0, r3
 268 0064 FFF7FEFF 		bl	__aeabi_i2d
 269 0068 19A3     		adr	r3, .L4
 270 006a D3E90023 		ldrd	r2, [r3]
 271 006e FFF7FEFF 		bl	__aeabi_dmul
 272 0072 0346     		mov	r3, r0
 273 0074 0C46     		mov	r4, r1
 274 0076 1846     		mov	r0, r3
 275 0078 2146     		mov	r1, r4
 276 007a 17A3     		adr	r3, .L4+8
 277 007c D3E90023 		ldrd	r2, [r3]
 278 0080 FFF7FEFF 		bl	__aeabi_dmul
 279 0084 0346     		mov	r3, r0
 280 0086 0C46     		mov	r4, r1
 281 0088 1846     		mov	r0, r3
 282 008a 2146     		mov	r1, r4
 283 008c 4FF00002 		mov	r2, #0
 284 0090 164B     		ldr	r3, .L4+28
 285 0092 FFF7FEFF 		bl	__aeabi_ddiv
 286 0096 0346     		mov	r3, r0
 287 0098 0C46     		mov	r4, r1
 288 009a 1846     		mov	r0, r3
 289 009c 2146     		mov	r1, r4
 290 009e FFF7FEFF 		bl	__aeabi_d2f
 291 00a2 0346     		mov	r3, r0
 292 00a4 7B60     		str	r3, [r7, #4]	@ float
  67:main.c        ****         
  68:main.c        ****         totalDistance = totalDistance + newDistance;
 293              		.loc 1 68 0
 294 00a6 124B     		ldr	r3, .L4+32
 295 00a8 1B68     		ldr	r3, [r3]	@ float
 296 00aa 7968     		ldr	r1, [r7, #4]	@ float
 297 00ac 1846     		mov	r0, r3
 298 00ae FFF7FEFF 		bl	__aeabi_fadd
 299 00b2 0346     		mov	r3, r0
 300 00b4 1A46     		mov	r2, r3
 301 00b6 0E4B     		ldr	r3, .L4+32
 302 00b8 1A60     		str	r2, [r3]	@ float
 303              	.L3:
 304              	.LBE2:
  69:main.c        ****     }
  70:main.c        ****     
  71:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 305              		.loc 1 71 0
 306 00ba 0020     		movs	r0, #0
 307 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  72:main.c        ****     QuadDec_M2_Start(); // restart counter
 308              		.loc 1 72 0
 309 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  73:main.c        ****     
  74:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 310              		.loc 1 74 0
 311 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 8


  75:main.c        **** }
 312              		.loc 1 75 0
 313 00c8 00BF     		nop
 314 00ca 0C37     		adds	r7, r7, #12
 315              		.cfi_def_cfa_offset 12
 316 00cc BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 00ce 90BD     		pop	{r4, r7, pc}
 320              	.L5:
 321              		.align	3
 322              	.L4:
 323 00d0 182D4454 		.word	1413754136
 324 00d4 FB210940 		.word	1074340347
 325 00d8 00000000 		.word	0
 326 00dc 00205040 		.word	1078992896
 327 00e0 00000000 		.word	timerInt
 328 00e4 00000000 		.word	quadDec2Count
 329 00e8 00000000 		.word	currentDirection
 330 00ec 00806C40 		.word	1080852480
 331 00f0 00000000 		.word	totalDistance
 332              		.cfi_endproc
 333              	.LFE64:
 334              		.size	speedTimer, .-speedTimer
 335              		.section	.text.S3_DETECTED,"ax",%progbits
 336              		.align	2
 337              		.global	S3_DETECTED
 338              		.thumb
 339              		.thumb_func
 340              		.type	S3_DETECTED, %function
 341              	S3_DETECTED:
 342              	.LFB65:
  76:main.c        **** 
  77:main.c        **** CY_ISR(S3_DETECTED) {
 343              		.loc 1 77 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348 0000 80B4     		push	{r7}
 349              		.cfi_def_cfa_offset 4
 350              		.cfi_offset 7, -4
 351 0002 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
  78:main.c        ****     // Sensor has detected WHITE
  79:main.c        ****     s3 = 1; // , Black = 0, White = 1
 353              		.loc 1 79 0
 354 0004 034B     		ldr	r3, .L7
 355 0006 0122     		movs	r2, #1
 356 0008 1A70     		strb	r2, [r3]
  80:main.c        ****     //LED_Write(1u);
  81:main.c        **** }
 357              		.loc 1 81 0
 358 000a 00BF     		nop
 359 000c BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 9


 362 000e 80BC     		pop	{r7}
 363              		.cfi_restore 7
 364              		.cfi_def_cfa_offset 0
 365 0010 7047     		bx	lr
 366              	.L8:
 367 0012 00BF     		.align	2
 368              	.L7:
 369 0014 00000000 		.word	s3
 370              		.cfi_endproc
 371              	.LFE65:
 372              		.size	S3_DETECTED, .-S3_DETECTED
 373              		.section	.text.S4_DETECTED,"ax",%progbits
 374              		.align	2
 375              		.global	S4_DETECTED
 376              		.thumb
 377              		.thumb_func
 378              		.type	S4_DETECTED, %function
 379              	S4_DETECTED:
 380              	.LFB66:
  82:main.c        **** 
  83:main.c        **** CY_ISR(S4_DETECTED) {
 381              		.loc 1 83 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
  84:main.c        ****     // Sensor has detected WHITE
  85:main.c        ****     s4 = 1; // , Black = 0, White = 1
 391              		.loc 1 85 0
 392 0004 034B     		ldr	r3, .L10
 393 0006 0122     		movs	r2, #1
 394 0008 1A70     		strb	r2, [r3]
  86:main.c        ****     //LED_Write(1u);
  87:main.c        **** }
 395              		.loc 1 87 0
 396 000a 00BF     		nop
 397 000c BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 000e 80BC     		pop	{r7}
 401              		.cfi_restore 7
 402              		.cfi_def_cfa_offset 0
 403 0010 7047     		bx	lr
 404              	.L11:
 405 0012 00BF     		.align	2
 406              	.L10:
 407 0014 00000000 		.word	s4
 408              		.cfi_endproc
 409              	.LFE66:
 410              		.size	S4_DETECTED, .-S4_DETECTED
 411              		.section	.text.S5_DETECTED,"ax",%progbits
 412              		.align	2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 10


 413              		.global	S5_DETECTED
 414              		.thumb
 415              		.thumb_func
 416              		.type	S5_DETECTED, %function
 417              	S5_DETECTED:
 418              	.LFB67:
  88:main.c        **** 
  89:main.c        **** CY_ISR(S5_DETECTED) {
 419              		.loc 1 89 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 7, -4
 427 0002 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
  90:main.c        ****     // Sensor has detected WHITE
  91:main.c        ****     s5 = 1; // , Black = 0, White = 1
 429              		.loc 1 91 0
 430 0004 034B     		ldr	r3, .L13
 431 0006 0122     		movs	r2, #1
 432 0008 1A70     		strb	r2, [r3]
  92:main.c        ****     //LED_Write(1u);
  93:main.c        **** }
 433              		.loc 1 93 0
 434 000a 00BF     		nop
 435 000c BD46     		mov	sp, r7
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 000e 80BC     		pop	{r7}
 439              		.cfi_restore 7
 440              		.cfi_def_cfa_offset 0
 441 0010 7047     		bx	lr
 442              	.L14:
 443 0012 00BF     		.align	2
 444              	.L13:
 445 0014 00000000 		.word	s5
 446              		.cfi_endproc
 447              	.LFE67:
 448              		.size	S5_DETECTED, .-S5_DETECTED
 449              		.section	.text.S6_DETECTED,"ax",%progbits
 450              		.align	2
 451              		.global	S6_DETECTED
 452              		.thumb
 453              		.thumb_func
 454              		.type	S6_DETECTED, %function
 455              	S6_DETECTED:
 456              	.LFB68:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S6_DETECTED) {
 457              		.loc 1 95 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 11


 462 0000 80B4     		push	{r7}
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s6 = 1; // , Black = 0, White = 1
 467              		.loc 1 97 0
 468 0004 034B     		ldr	r3, .L16
 469 0006 0122     		movs	r2, #1
 470 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 471              		.loc 1 99 0
 472 000a 00BF     		nop
 473 000c BD46     		mov	sp, r7
 474              		.cfi_def_cfa_register 13
 475              		@ sp needed
 476 000e 80BC     		pop	{r7}
 477              		.cfi_restore 7
 478              		.cfi_def_cfa_offset 0
 479 0010 7047     		bx	lr
 480              	.L17:
 481 0012 00BF     		.align	2
 482              	.L16:
 483 0014 00000000 		.word	s6
 484              		.cfi_endproc
 485              	.LFE68:
 486              		.size	S6_DETECTED, .-S6_DETECTED
 487              		.section	.text.TIMER_FINISH,"ax",%progbits
 488              		.align	2
 489              		.global	TIMER_FINISH
 490              		.thumb
 491              		.thumb_func
 492              		.type	TIMER_FINISH, %function
 493              	TIMER_FINISH:
 494              	.LFB69:
 100:main.c        **** 
 101:main.c        **** CY_ISR(TIMER_FINISH) {
 495              		.loc 1 101 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 1, uses_anonymous_args = 0
 499 0000 80B5     		push	{r7, lr}
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
 503 0002 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 102:main.c        ****     if (currentDirection == Stop) {
 505              		.loc 1 102 0
 506 0004 0A4B     		ldr	r3, .L21
 507 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 508 0008 052B     		cmp	r3, #5
 509 000a 05D1     		bne	.L19
 103:main.c        ****         stopBuffer = stopBuffer + 1;
 510              		.loc 1 103 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 12


 511 000c 094B     		ldr	r3, .L21+4
 512 000e 1B68     		ldr	r3, [r3]
 513 0010 0133     		adds	r3, r3, #1
 514 0012 084A     		ldr	r2, .L21+4
 515 0014 1360     		str	r3, [r2]
 516 0016 02E0     		b	.L20
 517              	.L19:
 104:main.c        ****     } else {
 105:main.c        ****         stopBuffer = 0;
 518              		.loc 1 105 0
 519 0018 064B     		ldr	r3, .L21+4
 520 001a 0022     		movs	r2, #0
 521 001c 1A60     		str	r2, [r3]
 522              	.L20:
 106:main.c        ****     }
 107:main.c        ****     SetRobotMovement(); 
 523              		.loc 1 107 0
 524 001e FFF7FEFF 		bl	SetRobotMovement
 108:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 525              		.loc 1 108 0
 526 0022 FFF7FEFF 		bl	ResetSensorFlags
 109:main.c        ****     Timer_LED_ReadStatusRegister();
 527              		.loc 1 109 0
 528 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 110:main.c        **** }
 529              		.loc 1 110 0
 530 002a 00BF     		nop
 531 002c 80BD     		pop	{r7, pc}
 532              	.L22:
 533 002e 00BF     		.align	2
 534              	.L21:
 535 0030 00000000 		.word	currentDirection
 536 0034 00000000 		.word	stopBuffer
 537              		.cfi_endproc
 538              	.LFE69:
 539              		.size	TIMER_FINISH, .-TIMER_FINISH
 540              		.section	.text.main,"ax",%progbits
 541              		.align	2
 542              		.global	main
 543              		.thumb
 544              		.thumb_func
 545              		.type	main, %function
 546              	main:
 547              	.LFB70:
 111:main.c        **** 
 112:main.c        **** 
 113:main.c        **** int main()
 114:main.c        **** {
 548              		.loc 1 114 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 13


 557              		.cfi_def_cfa_register 7
 115:main.c        **** // ----- INITIALIZATIONS ----------
 116:main.c        ****     CYGlobalIntEnable;
 558              		.loc 1 116 0
 559              		.syntax unified
 560              	@ 116 "main.c" 1
 561 0004 62B6     		CPSIE   i
 562              	@ 0 "" 2
 117:main.c        ****     ResetSensorFlags();
 563              		.loc 1 117 0
 564              		.thumb
 565              		.syntax unified
 566 0006 FFF7FEFF 		bl	ResetSensorFlags
 118:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 567              		.loc 1 118 0
 568 000a FFF7FEFF 		bl	init
 119:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 569              		.loc 1 119 0
 570 000e 1F48     		ldr	r0, .L27
 571 0010 FFF7FEFF 		bl	isr_speed_StartEx
 120:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 572              		.loc 1 120 0
 573 0014 1E48     		ldr	r0, .L27+4
 574 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 121:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 575              		.loc 1 121 0
 576 001a 1E48     		ldr	r0, .L27+8
 577 001c FFF7FEFF 		bl	S3_detected_StartEx
 122:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 578              		.loc 1 122 0
 579 0020 1D48     		ldr	r0, .L27+12
 580 0022 FFF7FEFF 		bl	S4_detected_StartEx
 123:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 581              		.loc 1 123 0
 582 0026 1D48     		ldr	r0, .L27+16
 583 0028 FFF7FEFF 		bl	S5_detected_StartEx
 124:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 584              		.loc 1 124 0
 585 002c 1C48     		ldr	r0, .L27+20
 586 002e FFF7FEFF 		bl	S6_detected_StartEx
 125:main.c        ****     Timer_LED_Start();
 587              		.loc 1 125 0
 588 0032 FFF7FEFF 		bl	Timer_LED_Start
 126:main.c        ****     instructionList = findPath(map, food_list, 0);
 589              		.loc 1 126 0
 590 0036 0022     		movs	r2, #0
 591 0038 1A49     		ldr	r1, .L27+24
 592 003a 1B48     		ldr	r0, .L27+28
 593 003c FFF7FEFF 		bl	findPath
 594 0040 0246     		mov	r2, r0
 595 0042 1A4B     		ldr	r3, .L27+32
 596 0044 1A60     		str	r2, [r3]
 127:main.c        ****     numSteps = instructionsListLength();
 597              		.loc 1 127 0
 598 0046 FFF7FEFF 		bl	instructionsListLength
 599 004a 0346     		mov	r3, r0
 600 004c 1A46     		mov	r2, r3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 14


 601 004e 184B     		ldr	r3, .L27+36
 602 0050 1A60     		str	r2, [r3]
 128:main.c        **** // ------USB SETUP ----------------    
 129:main.c        **** #ifdef USE_USB    
 130:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 603              		.loc 1 130 0
 604 0052 0121     		movs	r1, #1
 605 0054 0020     		movs	r0, #0
 606 0056 FFF7FEFF 		bl	USBUART_Start
 131:main.c        **** #endif        
 132:main.c        ****     RF_BT_SELECT_Write(0);
 607              		.loc 1 132 0
 608 005a 0020     		movs	r0, #0
 609 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 610              	.L26:
 133:main.c        ****     
 134:main.c        ****     //usbPutString("Initialised UART");
 135:main.c        ****     for(;;)
 136:main.c        ****     {
 137:main.c        ****         if(timerInt == 1) {
 611              		.loc 1 137 0
 612 0060 144B     		ldr	r3, .L27+40
 613 0062 1B68     		ldr	r3, [r3]
 614 0064 012B     		cmp	r3, #1
 615 0066 08D1     		bne	.L24
 138:main.c        ****             timerInt = 0;
 616              		.loc 1 138 0
 617 0068 124B     		ldr	r3, .L27+40
 618 006a 0022     		movs	r2, #0
 619 006c 1A60     		str	r2, [r3]
 139:main.c        ****             // calculate RPM of M2
 140:main.c        ****             quadCountToRPM(quadDec2Count);
 620              		.loc 1 140 0
 621 006e 124B     		ldr	r3, .L27+44
 622 0070 1B68     		ldr	r3, [r3]
 623 0072 9BB2     		uxth	r3, r3
 624 0074 1846     		mov	r0, r3
 625 0076 FFF7FEFF 		bl	quadCountToRPM
 626              	.L24:
 141:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 142:main.c        ****             //usbPutString(buffer);
 143:main.c        ****             //usbPutString(" ");
 144:main.c        ****         }
 145:main.c        ****         //handle_usb();
 146:main.c        ****         if (flag_KB_string == 1)
 627              		.loc 1 146 0
 628 007a 104B     		ldr	r3, .L27+48
 629 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 007e 012B     		cmp	r3, #1
 631 0080 EED1     		bne	.L26
 147:main.c        ****         {
 148:main.c        ****             //usbPutString("Total Distance: ");
 149:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 150:main.c        ****             //usbPutString(buffer);
 151:main.c        ****             flag_KB_string = 0;
 632              		.loc 1 151 0
 633 0082 0E4B     		ldr	r3, .L27+48
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 15


 634 0084 0022     		movs	r2, #0
 635 0086 1A70     		strb	r2, [r3]
 152:main.c        ****         }           
 153:main.c        ****     }
 636              		.loc 1 153 0
 637 0088 EAE7     		b	.L26
 638              	.L28:
 639 008a 00BF     		.align	2
 640              	.L27:
 641 008c 00000000 		.word	speedTimer
 642 0090 00000000 		.word	TIMER_FINISH
 643 0094 00000000 		.word	S3_DETECTED
 644 0098 00000000 		.word	S4_DETECTED
 645 009c 00000000 		.word	S5_DETECTED
 646 00a0 00000000 		.word	S6_DETECTED
 647 00a4 00000000 		.word	food_list
 648 00a8 00000000 		.word	map
 649 00ac 00000000 		.word	instructionList
 650 00b0 00000000 		.word	numSteps
 651 00b4 00000000 		.word	timerInt
 652 00b8 00000000 		.word	quadDec2Count
 653 00bc 00000000 		.word	flag_KB_string
 654              		.cfi_endproc
 655              	.LFE70:
 656              		.size	main, .-main
 657              		.global	__aeabi_fmul
 658              		.global	__aeabi_f2iz
 659              		.section	.text.quadCountToRPM,"ax",%progbits
 660              		.align	2
 661              		.global	quadCountToRPM
 662              		.thumb
 663              		.thumb_func
 664              		.type	quadCountToRPM, %function
 665              	quadCountToRPM:
 666              	.LFB71:
 154:main.c        ****     return 0;
 155:main.c        **** }
 156:main.c        **** 
 157:main.c        **** // Calculations
 158:main.c        **** //* ========================================
 159:main.c        **** int16 quadCountToRPM(uint16 count)
 160:main.c        **** {
 667              		.loc 1 160 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 16
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 90B5     		push	{r4, r7, lr}
 672              		.cfi_def_cfa_offset 12
 673              		.cfi_offset 4, -12
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 85B0     		sub	sp, sp, #20
 677              		.cfi_def_cfa_offset 32
 678 0004 00AF     		add	r7, sp, #0
 679              		.cfi_def_cfa_register 7
 680 0006 0346     		mov	r3, r0
 681 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 16


 161:main.c        ****     float cps = count/57.00;
 682              		.loc 1 161 0
 683 000a FB88     		ldrh	r3, [r7, #6]
 684 000c 1846     		mov	r0, r3
 685 000e FFF7FEFF 		bl	__aeabi_i2d
 686 0012 4FF00002 		mov	r2, #0
 687 0016 0D4B     		ldr	r3, .L31
 688 0018 FFF7FEFF 		bl	__aeabi_ddiv
 689 001c 0346     		mov	r3, r0
 690 001e 0C46     		mov	r4, r1
 691 0020 1846     		mov	r0, r3
 692 0022 2146     		mov	r1, r4
 693 0024 FFF7FEFF 		bl	__aeabi_d2f
 694 0028 0346     		mov	r3, r0
 695 002a FB60     		str	r3, [r7, #12]	@ float
 162:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 696              		.loc 1 162 0
 697 002c 0849     		ldr	r1, .L31+4
 698 002e F868     		ldr	r0, [r7, #12]	@ float
 699 0030 FFF7FEFF 		bl	__aeabi_fmul
 700 0034 0346     		mov	r3, r0
 701 0036 1846     		mov	r0, r3
 702 0038 FFF7FEFF 		bl	__aeabi_f2iz
 703 003c 0346     		mov	r3, r0
 704 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 163:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 164:main.c        ****     return rpm;
 705              		.loc 1 164 0
 706 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 165:main.c        ****     //usbPutString(buffer);
 166:main.c        ****     //usbPutString("rpm ");
 167:main.c        **** }
 707              		.loc 1 167 0
 708 0044 1846     		mov	r0, r3
 709 0046 1437     		adds	r7, r7, #20
 710              		.cfi_def_cfa_offset 12
 711 0048 BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 004a 90BD     		pop	{r4, r7, pc}
 715              	.L32:
 716              		.align	2
 717              	.L31:
 718 004c 00804C40 		.word	1078755328
 719 0050 00007041 		.word	1097859072
 720              		.cfi_endproc
 721              	.LFE71:
 722              		.size	quadCountToRPM, .-quadCountToRPM
 723              		.section	.text.ResetSensorFlags,"ax",%progbits
 724              		.align	2
 725              		.global	ResetSensorFlags
 726              		.thumb
 727              		.thumb_func
 728              		.type	ResetSensorFlags, %function
 729              	ResetSensorFlags:
 730              	.LFB72:
 168:main.c        **** 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 17


 169:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 170:main.c        **** void ResetSensorFlags() {
 731              		.loc 1 170 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736 0000 80B4     		push	{r7}
 737              		.cfi_def_cfa_offset 4
 738              		.cfi_offset 7, -4
 739 0002 00AF     		add	r7, sp, #0
 740              		.cfi_def_cfa_register 7
 171:main.c        ****     s3 = 0;
 741              		.loc 1 171 0
 742 0004 074B     		ldr	r3, .L34
 743 0006 0022     		movs	r2, #0
 744 0008 1A70     		strb	r2, [r3]
 172:main.c        ****     s4 = 0;
 745              		.loc 1 172 0
 746 000a 074B     		ldr	r3, .L34+4
 747 000c 0022     		movs	r2, #0
 748 000e 1A70     		strb	r2, [r3]
 173:main.c        ****     s5 = 0;
 749              		.loc 1 173 0
 750 0010 064B     		ldr	r3, .L34+8
 751 0012 0022     		movs	r2, #0
 752 0014 1A70     		strb	r2, [r3]
 174:main.c        ****     s6 = 0;
 753              		.loc 1 174 0
 754 0016 064B     		ldr	r3, .L34+12
 755 0018 0022     		movs	r2, #0
 756 001a 1A70     		strb	r2, [r3]
 175:main.c        **** }
 757              		.loc 1 175 0
 758 001c 00BF     		nop
 759 001e BD46     		mov	sp, r7
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 0020 80BC     		pop	{r7}
 763              		.cfi_restore 7
 764              		.cfi_def_cfa_offset 0
 765 0022 7047     		bx	lr
 766              	.L35:
 767              		.align	2
 768              	.L34:
 769 0024 00000000 		.word	s3
 770 0028 00000000 		.word	s4
 771 002c 00000000 		.word	s5
 772 0030 00000000 		.word	s6
 773              		.cfi_endproc
 774              	.LFE72:
 775              		.size	ResetSensorFlags, .-ResetSensorFlags
 776              		.global	xBlocksize
 777              		.data
 778 0045 000000   		.align	2
 779              		.type	xBlocksize, %object
 780              		.size	xBlocksize, 4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 18


 781              	xBlocksize:
 782 0048 0000FF42 		.word	1124007936
 783              		.global	yBlocksize
 784              		.align	2
 785              		.type	yBlocksize, %object
 786              		.size	yBlocksize, 4
 787              	yBlocksize:
 788 004c 0000A042 		.word	1117782016
 789              		.global	currentRow
 790              		.type	currentRow, %object
 791              		.size	currentRow, 1
 792              	currentRow:
 793 0050 01       		.byte	1
 794              		.global	currentCol
 795              		.type	currentCol, %object
 796              		.size	currentCol, 1
 797              	currentCol:
 798 0051 01       		.byte	1
 799              		.global	stoppedAfterTurn
 800              		.bss
 801              		.type	stoppedAfterTurn, %object
 802              		.size	stoppedAfterTurn, 1
 803              	stoppedAfterTurn:
 804 0034 00       		.space	1
 805              		.global	ignoreSensor
 806              		.type	ignoreSensor, %object
 807              		.size	ignoreSensor, 1
 808              	ignoreSensor:
 809 0035 00       		.space	1
 810              		.global	__aeabi_fcmpge
 811              		.section	.text.CheckSensorDirection,"ax",%progbits
 812              		.align	2
 813              		.global	CheckSensorDirection
 814              		.thumb
 815              		.thumb_func
 816              		.type	CheckSensorDirection, %function
 817              	CheckSensorDirection:
 818              	.LFB73:
 176:main.c        **** 
 177:main.c        **** float xBlocksize = 127.5; // 127.5
 178:main.c        **** float yBlocksize = 80; // 80
 179:main.c        **** uint8 currentRow = 1;
 180:main.c        **** uint8 currentCol = 1;
 181:main.c        **** 
 182:main.c        **** /*enum DirectionState GetNextStep() {
 183:main.c        ****     enum DirectionState directionState;
 184:main.c        ****     // Determines robot movement and orientation to follow optimal path
 185:main.c        ****     // enum DirectionState directionState = Stop;
 186:main.c        ****     previousOrientation = currentOrientation;
 187:main.c        ****     
 188:main.c        ****     if(map[currentRow][currentCol] == 9) {
 189:main.c        ****         directionState = Stop; // reached target
 190:main.c        ****         return directionState;
 191:main.c        ****     }
 192:main.c        ****         
 193:main.c        ****     switch (previousOrientation) {
 194:main.c        ****             case Up:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 19


 195:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 196:main.c        ****                     currentOrientation = Up; 
 197:main.c        ****                     directionState = Forward;
 198:main.c        ****                     currentRow--;// update position
 199:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 200:main.c        ****                     currentOrientation = Left;
 201:main.c        ****                     directionState = waitForLeftTurn;
 202:main.c        ****                     //currentRow--;
 203:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 204:main.c        ****                     currentOrientation = Right;
 205:main.c        ****                     directionState = waitForRightTurn;
 206:main.c        ****                     //currentRow++; // update position
 207:main.c        ****                 }
 208:main.c        ****                 break;
 209:main.c        ****             case Down:
 210:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 211:main.c        ****                     currentOrientation = Down;
 212:main.c        ****                     directionState = Forward;
 213:main.c        ****                     currentRow++;
 214:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 215:main.c        ****                     currentOrientation = Left;
 216:main.c        ****                     directionState = waitForRightTurn;
 217:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 218:main.c        ****                     currentOrientation = Right;
 219:main.c        ****                     directionState = waitForLeftTurn;
 220:main.c        ****                 }
 221:main.c        ****                 break;
 222:main.c        ****             case Left:
 223:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 224:main.c        ****                     currentOrientation = Left;
 225:main.c        ****                     directionState = Forward;
 226:main.c        ****                     currentCol--; // update position
 227:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 228:main.c        ****                     currentOrientation = Up;
 229:main.c        ****                     directionState = waitForRightTurn;
 230:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 231:main.c        ****                     currentOrientation = Down;
 232:main.c        ****                     directionState = waitForLeftTurn;
 233:main.c        ****                 }
 234:main.c        ****                 break;
 235:main.c        ****             case Right:
 236:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 237:main.c        ****                     currentOrientation = Right;
 238:main.c        ****                     directionState = Forward;
 239:main.c        ****                     currentCol++; // update position
 240:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 241:main.c        ****                     currentOrientation = Up;
 242:main.c        ****                     directionState = waitForLeftTurn;
 243:main.c        ****                     //currentCol++; // update position
 244:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 245:main.c        ****                     currentOrientation = Down;
 246:main.c        ****                     directionState = waitForRightTurn;
 247:main.c        ****                     //currentCol--; // update position
 248:main.c        ****                 }
 249:main.c        ****                 break;
 250:main.c        ****             default:
 251:main.c        ****                 break;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 20


 252:main.c        ****         }
 253:main.c        ****     
 254:main.c        ****     return directionState;
 255:main.c        **** }
 256:main.c        **** */
 257:main.c        **** uint8 stoppedAfterTurn = 0;
 258:main.c        **** uint8 ignoreSensor = 0;
 259:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 260:main.c        **** enum RobotMovement CheckSensorDirection() {
 819              		.loc 1 260 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 82B0     		sub	sp, sp, #8
 828              		.cfi_def_cfa_offset 16
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 261:main.c        ****     float blocksize;
 262:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 831              		.loc 1 262 0
 832 0006 964B     		ldr	r3, .L66
 833 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 000a 002B     		cmp	r3, #0
 835 000c 03D0     		beq	.L37
 836              		.loc 1 262 0 is_stmt 0 discriminator 1
 837 000e 944B     		ldr	r3, .L66
 838 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 839 0012 012B     		cmp	r3, #1
 840 0014 03D1     		bne	.L38
 841              	.L37:
 263:main.c        ****         blocksize = yBlocksize;
 842              		.loc 1 263 0 is_stmt 1
 843 0016 934B     		ldr	r3, .L66+4
 844 0018 1B68     		ldr	r3, [r3]	@ float
 845 001a 7B60     		str	r3, [r7, #4]	@ float
 846 001c 02E0     		b	.L39
 847              	.L38:
 264:main.c        ****     } else {
 265:main.c        ****         blocksize = xBlocksize;
 848              		.loc 1 265 0
 849 001e 924B     		ldr	r3, .L66+8
 850 0020 1B68     		ldr	r3, [r3]	@ float
 851 0022 7B60     		str	r3, [r7, #4]	@ float
 852              	.L39:
 266:main.c        ****     }
 267:main.c        ****     //if(currentInstruction)
 268:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 853              		.loc 1 268 0
 854 0024 0523     		movs	r3, #5
 855 0026 FB70     		strb	r3, [r7, #3]
 269:main.c        ****     
 270:main.c        ****     if (stoppedAfterTurn == 1) {
 856              		.loc 1 270 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 21


 857 0028 904B     		ldr	r3, .L66+12
 858 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 002c 012B     		cmp	r3, #1
 860 002e 16D1     		bne	.L40
 271:main.c        ****         if (stopBuffer <= 50) {
 861              		.loc 1 271 0
 862 0030 8F4B     		ldr	r3, .L66+16
 863 0032 1B68     		ldr	r3, [r3]
 864 0034 322B     		cmp	r3, #50
 865 0036 06D8     		bhi	.L41
 272:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 866              		.loc 1 272 0
 867 0038 0523     		movs	r3, #5
 868 003a FB70     		strb	r3, [r7, #3]
 273:main.c        ****             previousDirection = directionState;
 869              		.loc 1 273 0
 870 003c 8D4A     		ldr	r2, .L66+20
 871 003e FB78     		ldrb	r3, [r7, #3]
 872 0040 1370     		strb	r3, [r2]
 274:main.c        ****             return directionState;
 873              		.loc 1 274 0
 874 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 875 0044 07E1     		b	.L42
 876              	.L41:
 275:main.c        ****         }
 276:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 277:main.c        ****         totalDistance = 0; // reset distance
 877              		.loc 1 277 0
 878 0046 8C4B     		ldr	r3, .L66+24
 879 0048 4FF00002 		mov	r2, #0
 880 004c 1A60     		str	r2, [r3]	@ float
 278:main.c        ****         previousDirection = directionState;
 881              		.loc 1 278 0
 882 004e 894A     		ldr	r2, .L66+20
 883 0050 FB78     		ldrb	r3, [r7, #3]
 884 0052 1370     		strb	r3, [r2]
 279:main.c        ****         stoppedAfterTurn = 0;
 885              		.loc 1 279 0
 886 0054 854B     		ldr	r3, .L66+12
 887 0056 0022     		movs	r2, #0
 888 0058 1A70     		strb	r2, [r3]
 280:main.c        ****         return directionState;
 889              		.loc 1 280 0
 890 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 891 005c FBE0     		b	.L42
 892              	.L40:
 281:main.c        ****     }
 282:main.c        ****     if (totalDistance >= blocksize) {
 893              		.loc 1 282 0
 894 005e 864B     		ldr	r3, .L66+24
 895 0060 1B68     		ldr	r3, [r3]	@ float
 896 0062 7968     		ldr	r1, [r7, #4]	@ float
 897 0064 1846     		mov	r0, r3
 898 0066 FFF7FEFF 		bl	__aeabi_fcmpge
 899 006a 0346     		mov	r3, r0
 900 006c 002B     		cmp	r3, #0
 901 006e 08D0     		beq	.L65
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 22


 283:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 284:main.c        ****         totalDistance = 0; // reset distance
 902              		.loc 1 284 0
 903 0070 814B     		ldr	r3, .L66+24
 904 0072 4FF00002 		mov	r2, #0
 905 0076 1A60     		str	r2, [r3]	@ float
 285:main.c        ****         previousDirection = directionState;
 906              		.loc 1 285 0
 907 0078 7E4A     		ldr	r2, .L66+20
 908 007a FB78     		ldrb	r3, [r7, #3]
 909 007c 1370     		strb	r3, [r2]
 286:main.c        ****         return directionState;
 910              		.loc 1 286 0
 911 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 912 0080 E9E0     		b	.L42
 913              	.L65:
 287:main.c        ****     }
 288:main.c        ****     
 289:main.c        ****     // STOP BUFFER * ========================================
 290:main.c        ****     if (previousDirection == Stop) {
 914              		.loc 1 290 0
 915 0082 7C4B     		ldr	r3, .L66+20
 916 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 917 0086 052B     		cmp	r3, #5
 918 0088 0AD1     		bne	.L45
 291:main.c        ****         if (stopBuffer <= 50) {
 919              		.loc 1 291 0
 920 008a 794B     		ldr	r3, .L66+16
 921 008c 1B68     		ldr	r3, [r3]
 922 008e 322B     		cmp	r3, #50
 923 0090 04D8     		bhi	.L46
 292:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 924              		.loc 1 292 0
 925 0092 0523     		movs	r3, #5
 926 0094 FB70     		strb	r3, [r7, #3]
 293:main.c        ****             previousDirection = directionState;
 927              		.loc 1 293 0
 928 0096 774A     		ldr	r2, .L66+20
 929 0098 FB78     		ldrb	r3, [r7, #3]
 930 009a 1370     		strb	r3, [r2]
 931              	.L46:
 294:main.c        ****         } else {
 295:main.c        ****             //directionState = ForwardAfterTurn;
 296:main.c        ****         }
 297:main.c        ****         return directionState;
 932              		.loc 1 297 0
 933 009c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 934 009e DAE0     		b	.L42
 935              	.L45:
 298:main.c        ****     }
 299:main.c        **** 
 300:main.c        ****     // TURNING * ========================================    
 301:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 936              		.loc 1 301 0
 937 00a0 744B     		ldr	r3, .L66+20
 938 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 00a4 082B     		cmp	r3, #8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 23


 940 00a6 0ED1     		bne	.L47
 302:main.c        ****         if (s3 || s4) {
 941              		.loc 1 302 0
 942 00a8 744B     		ldr	r3, .L66+28
 943 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 00ac 002B     		cmp	r3, #0
 945 00ae 03D1     		bne	.L48
 946              		.loc 1 302 0 is_stmt 0 discriminator 1
 947 00b0 734B     		ldr	r3, .L66+32
 948 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 00b4 002B     		cmp	r3, #0
 950 00b6 06D0     		beq	.L47
 951              	.L48:
 303:main.c        ****             //ignoreSensor = 0;
 304:main.c        ****             //usbPutString("Forward\n");
 305:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 952              		.loc 1 305 0 is_stmt 1
 953 00b8 0023     		movs	r3, #0
 954 00ba FB70     		strb	r3, [r7, #3]
 306:main.c        ****             previousDirection = directionState;
 955              		.loc 1 306 0
 956 00bc 6D4A     		ldr	r2, .L66+20
 957 00be FB78     		ldrb	r3, [r7, #3]
 958 00c0 1370     		strb	r3, [r2]
 307:main.c        ****             return directionState;
 959              		.loc 1 307 0
 960 00c2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 961 00c4 C7E0     		b	.L42
 962              	.L47:
 308:main.c        ****         }
 309:main.c        ****     }
 310:main.c        **** 
 311:main.c        ****     if(previousDirection == waitForRightTurn) {
 963              		.loc 1 311 0
 964 00c6 6B4B     		ldr	r3, .L66+20
 965 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 966 00ca 022B     		cmp	r3, #2
 967 00cc 11D1     		bne	.L49
 312:main.c        ****         //ignoreSensor = 0;
 313:main.c        ****         if(!s4) {
 968              		.loc 1 313 0
 969 00ce 6C4B     		ldr	r3, .L66+32
 970 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 00d2 002B     		cmp	r3, #0
 972 00d4 06D1     		bne	.L50
 314:main.c        ****             //usbPutString("Turn Right\n");
 315:main.c        ****             directionState = TurnRight;
 973              		.loc 1 315 0
 974 00d6 0123     		movs	r3, #1
 975 00d8 FB70     		strb	r3, [r7, #3]
 316:main.c        ****             previousDirection = directionState;
 976              		.loc 1 316 0
 977 00da 664A     		ldr	r2, .L66+20
 978 00dc FB78     		ldrb	r3, [r7, #3]
 979 00de 1370     		strb	r3, [r2]
 317:main.c        ****             return directionState;
 980              		.loc 1 317 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 24


 981 00e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 982 00e2 B8E0     		b	.L42
 983              	.L50:
 318:main.c        ****         } else {
 319:main.c        ****             //usbPutString("Wait for Right Turn\n");
 320:main.c        ****             directionState = waitForRightTurn;
 984              		.loc 1 320 0
 985 00e4 0223     		movs	r3, #2
 986 00e6 FB70     		strb	r3, [r7, #3]
 321:main.c        ****             previousDirection = directionState;
 987              		.loc 1 321 0
 988 00e8 624A     		ldr	r2, .L66+20
 989 00ea FB78     		ldrb	r3, [r7, #3]
 990 00ec 1370     		strb	r3, [r2]
 322:main.c        ****             return directionState;
 991              		.loc 1 322 0
 992 00ee FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 993 00f0 B1E0     		b	.L42
 994              	.L49:
 323:main.c        ****         }
 324:main.c        ****     }
 325:main.c        **** 
 326:main.c        ****     if(previousDirection == waitForLeftTurn) {
 995              		.loc 1 326 0
 996 00f2 604B     		ldr	r3, .L66+20
 997 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 998 00f6 012B     		cmp	r3, #1
 999 00f8 11D1     		bne	.L51
 327:main.c        ****         //ignoreSensor = 0;
 328:main.c        ****         if(!s3) {
 1000              		.loc 1 328 0
 1001 00fa 604B     		ldr	r3, .L66+28
 1002 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 00fe 002B     		cmp	r3, #0
 1004 0100 06D1     		bne	.L52
 329:main.c        ****             //usbPutString("Turn Left\n");
 330:main.c        ****             directionState = TurnLeft;
 1005              		.loc 1 330 0
 1006 0102 0223     		movs	r3, #2
 1007 0104 FB70     		strb	r3, [r7, #3]
 331:main.c        ****             previousDirection = directionState;
 1008              		.loc 1 331 0
 1009 0106 5B4A     		ldr	r2, .L66+20
 1010 0108 FB78     		ldrb	r3, [r7, #3]
 1011 010a 1370     		strb	r3, [r2]
 332:main.c        ****             return directionState;
 1012              		.loc 1 332 0
 1013 010c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1014 010e A2E0     		b	.L42
 1015              	.L52:
 333:main.c        ****         } else {
 334:main.c        ****             //usbPutString("Wait for Left Turn\n");
 335:main.c        ****             directionState = waitForLeftTurn;
 1016              		.loc 1 335 0
 1017 0110 0123     		movs	r3, #1
 1018 0112 FB70     		strb	r3, [r7, #3]
 336:main.c        ****             previousDirection = directionState;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 25


 1019              		.loc 1 336 0
 1020 0114 574A     		ldr	r2, .L66+20
 1021 0116 FB78     		ldrb	r3, [r7, #3]
 1022 0118 1370     		strb	r3, [r2]
 337:main.c        ****             return directionState;
 1023              		.loc 1 337 0
 1024 011a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1025 011c 9BE0     		b	.L42
 1026              	.L51:
 338:main.c        ****         }
 339:main.c        ****     }
 340:main.c        **** 
 341:main.c        ****     if(previousDirection == TurnRight) {
 1027              		.loc 1 341 0
 1028 011e 554B     		ldr	r3, .L66+20
 1029 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 0122 012B     		cmp	r3, #1
 1031 0124 24D1     		bne	.L53
 342:main.c        ****         if(s5 && s6) {
 1032              		.loc 1 342 0
 1033 0126 574B     		ldr	r3, .L66+36
 1034 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 012a 002B     		cmp	r3, #0
 1036 012c 0AD0     		beq	.L54
 1037              		.loc 1 342 0 is_stmt 0 discriminator 1
 1038 012e 564B     		ldr	r3, .L66+40
 1039 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 0132 002B     		cmp	r3, #0
 1041 0134 06D0     		beq	.L54
 343:main.c        ****             //usbPutString("Turn Right\n");
 344:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1042              		.loc 1 344 0 is_stmt 1
 1043 0136 0123     		movs	r3, #1
 1044 0138 FB70     		strb	r3, [r7, #3]
 345:main.c        ****             previousDirection = directionState;
 1045              		.loc 1 345 0
 1046 013a 4E4A     		ldr	r2, .L66+20
 1047 013c FB78     		ldrb	r3, [r7, #3]
 1048 013e 1370     		strb	r3, [r2]
 346:main.c        ****             return directionState;
 1049              		.loc 1 346 0
 1050 0140 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1051 0142 88E0     		b	.L42
 1052              	.L54:
 347:main.c        ****         } 
 348:main.c        ****         else if (!s5 || !s6) {
 1053              		.loc 1 348 0
 1054 0144 4F4B     		ldr	r3, .L66+36
 1055 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1056 0148 002B     		cmp	r3, #0
 1057 014a 03D0     		beq	.L55
 1058              		.loc 1 348 0 is_stmt 0 discriminator 1
 1059 014c 4E4B     		ldr	r3, .L66+40
 1060 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 0150 002B     		cmp	r3, #0
 1062 0152 0DD1     		bne	.L53
 1063              	.L55:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 26


 349:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 350:main.c        ****             //usbPutString("Stop after Right Turn");
 351:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1064              		.loc 1 351 0 is_stmt 1
 1065 0154 0523     		movs	r3, #5
 1066 0156 FB70     		strb	r3, [r7, #3]
 352:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1067              		.loc 1 352 0
 1068 0158 474B     		ldr	r3, .L66+24
 1069 015a 4FF00002 		mov	r2, #0
 1070 015e 1A60     		str	r2, [r3]	@ float
 353:main.c        ****             previousDirection = directionState;
 1071              		.loc 1 353 0
 1072 0160 444A     		ldr	r2, .L66+20
 1073 0162 FB78     		ldrb	r3, [r7, #3]
 1074 0164 1370     		strb	r3, [r2]
 354:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1075              		.loc 1 354 0
 1076 0166 414B     		ldr	r3, .L66+12
 1077 0168 0122     		movs	r2, #1
 1078 016a 1A70     		strb	r2, [r3]
 355:main.c        ****             return directionState;
 1079              		.loc 1 355 0
 1080 016c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1081 016e 72E0     		b	.L42
 1082              	.L53:
 356:main.c        ****         }
 357:main.c        ****     }    
 358:main.c        **** 
 359:main.c        ****     if(previousDirection == TurnLeft) {
 1083              		.loc 1 359 0
 1084 0170 404B     		ldr	r3, .L66+20
 1085 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 0174 022B     		cmp	r3, #2
 1087 0176 24D1     		bne	.L56
 360:main.c        ****         if(s5 && s6) {
 1088              		.loc 1 360 0
 1089 0178 424B     		ldr	r3, .L66+36
 1090 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1091 017c 002B     		cmp	r3, #0
 1092 017e 0AD0     		beq	.L57
 1093              		.loc 1 360 0 is_stmt 0 discriminator 1
 1094 0180 414B     		ldr	r3, .L66+40
 1095 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1096 0184 002B     		cmp	r3, #0
 1097 0186 06D0     		beq	.L57
 361:main.c        ****             //usbPutString("Turn Left\n");
 362:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1098              		.loc 1 362 0 is_stmt 1
 1099 0188 0223     		movs	r3, #2
 1100 018a FB70     		strb	r3, [r7, #3]
 363:main.c        ****             previousDirection = directionState;
 1101              		.loc 1 363 0
 1102 018c 394A     		ldr	r2, .L66+20
 1103 018e FB78     		ldrb	r3, [r7, #3]
 1104 0190 1370     		strb	r3, [r2]
 364:main.c        ****             return directionState;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 27


 1105              		.loc 1 364 0
 1106 0192 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1107 0194 5FE0     		b	.L42
 1108              	.L57:
 365:main.c        ****         } 
 366:main.c        ****         else if (!s5 || !s6) {
 1109              		.loc 1 366 0
 1110 0196 3B4B     		ldr	r3, .L66+36
 1111 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1112 019a 002B     		cmp	r3, #0
 1113 019c 03D0     		beq	.L58
 1114              		.loc 1 366 0 is_stmt 0 discriminator 1
 1115 019e 3A4B     		ldr	r3, .L66+40
 1116 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1117 01a2 002B     		cmp	r3, #0
 1118 01a4 0DD1     		bne	.L56
 1119              	.L58:
 367:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 368:main.c        ****            // usbPutString("Stop after Left Turn\n");
 369:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1120              		.loc 1 369 0 is_stmt 1
 1121 01a6 0523     		movs	r3, #5
 1122 01a8 FB70     		strb	r3, [r7, #3]
 370:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1123              		.loc 1 370 0
 1124 01aa 334B     		ldr	r3, .L66+24
 1125 01ac 4FF00002 		mov	r2, #0
 1126 01b0 1A60     		str	r2, [r3]	@ float
 371:main.c        ****             previousDirection = directionState;
 1127              		.loc 1 371 0
 1128 01b2 304A     		ldr	r2, .L66+20
 1129 01b4 FB78     		ldrb	r3, [r7, #3]
 1130 01b6 1370     		strb	r3, [r2]
 372:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1131              		.loc 1 372 0
 1132 01b8 2C4B     		ldr	r3, .L66+12
 1133 01ba 0122     		movs	r2, #1
 1134 01bc 1A70     		strb	r2, [r3]
 373:main.c        ****             return directionState;
 1135              		.loc 1 373 0
 1136 01be FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1137 01c0 49E0     		b	.L42
 1138              	.L56:
 374:main.c        ****         }
 375:main.c        ****     }
 376:main.c        ****     
 377:main.c        ****     // COURSE CORRECTION * ========================================
 378:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1139              		.loc 1 378 0
 1140 01c2 2C4B     		ldr	r3, .L66+20
 1141 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1142 01c6 002B     		cmp	r3, #0
 1143 01c8 07D0     		beq	.L59
 1144              		.loc 1 378 0 is_stmt 0 discriminator 1
 1145 01ca 2A4B     		ldr	r3, .L66+20
 1146 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1147 01ce 032B     		cmp	r3, #3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 28


 1148 01d0 03D0     		beq	.L59
 1149              		.loc 1 378 0 discriminator 2
 1150 01d2 284B     		ldr	r3, .L66+20
 1151 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 01d6 042B     		cmp	r3, #4
 1153 01d8 15D1     		bne	.L60
 1154              	.L59:
 379:main.c        ****         //ignoreSensor = 0;
 380:main.c        ****         if(s6) {
 1155              		.loc 1 380 0 is_stmt 1
 1156 01da 2B4B     		ldr	r3, .L66+40
 1157 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1158 01de 002B     		cmp	r3, #0
 1159 01e0 06D0     		beq	.L61
 381:main.c        ****             //usbPutString("Adjust to the left\n");
 382:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1160              		.loc 1 382 0
 1161 01e2 0323     		movs	r3, #3
 1162 01e4 FB70     		strb	r3, [r7, #3]
 383:main.c        ****             previousDirection = directionState;
 1163              		.loc 1 383 0
 1164 01e6 234A     		ldr	r2, .L66+20
 1165 01e8 FB78     		ldrb	r3, [r7, #3]
 1166 01ea 1370     		strb	r3, [r2]
 384:main.c        ****             return directionState;
 1167              		.loc 1 384 0
 1168 01ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1169 01ee 32E0     		b	.L42
 1170              	.L61:
 385:main.c        ****         }
 386:main.c        ****         if(s5) {
 1171              		.loc 1 386 0
 1172 01f0 244B     		ldr	r3, .L66+36
 1173 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1174 01f4 002B     		cmp	r3, #0
 1175 01f6 06D0     		beq	.L60
 387:main.c        ****             //usbPutString("Adjust to the right\n");
 388:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1176              		.loc 1 388 0
 1177 01f8 0423     		movs	r3, #4
 1178 01fa FB70     		strb	r3, [r7, #3]
 389:main.c        ****             previousDirection = directionState;
 1179              		.loc 1 389 0
 1180 01fc 1D4A     		ldr	r2, .L66+20
 1181 01fe FB78     		ldrb	r3, [r7, #3]
 1182 0200 1370     		strb	r3, [r2]
 390:main.c        ****             return directionState;
 1183              		.loc 1 390 0
 1184 0202 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1185 0204 27E0     		b	.L42
 1186              	.L60:
 391:main.c        ****         }
 392:main.c        ****     }
 393:main.c        ****     
 394:main.c        ****     // FORWARD * ========================================
 395:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1187              		.loc 1 395 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 29


 1188 0206 1D4B     		ldr	r3, .L66+28
 1189 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 020a 002B     		cmp	r3, #0
 1191 020c 12D0     		beq	.L62
 1192              		.loc 1 395 0 is_stmt 0 discriminator 1
 1193 020e 1C4B     		ldr	r3, .L66+32
 1194 0210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 0212 002B     		cmp	r3, #0
 1196 0214 0ED0     		beq	.L62
 1197              		.loc 1 395 0 discriminator 2
 1198 0216 1B4B     		ldr	r3, .L66+36
 1199 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 021a 002B     		cmp	r3, #0
 1201 021c 0AD1     		bne	.L62
 1202              		.loc 1 395 0 discriminator 3
 1203 021e 1A4B     		ldr	r3, .L66+40
 1204 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 0222 002B     		cmp	r3, #0
 1206 0224 06D1     		bne	.L62
 396:main.c        ****         //usbPutString("Forward\n");
 397:main.c        ****         directionState = Forward;
 1207              		.loc 1 397 0 is_stmt 1
 1208 0226 0023     		movs	r3, #0
 1209 0228 FB70     		strb	r3, [r7, #3]
 398:main.c        ****         previousDirection = directionState;
 1210              		.loc 1 398 0
 1211 022a 124A     		ldr	r2, .L66+20
 1212 022c FB78     		ldrb	r3, [r7, #3]
 1213 022e 1370     		strb	r3, [r2]
 399:main.c        ****         return directionState;   
 1214              		.loc 1 399 0
 1215 0230 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1216 0232 10E0     		b	.L42
 1217              	.L62:
 400:main.c        ****     }
 401:main.c        **** 
 402:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 403:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 404:main.c        ****     if (previousDirection == Unknown) {
 1218              		.loc 1 404 0
 1219 0234 0F4B     		ldr	r3, .L66+20
 1220 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0238 062B     		cmp	r3, #6
 1222 023a 06D1     		bne	.L63
 405:main.c        ****         directionState = Forward;
 1223              		.loc 1 405 0
 1224 023c 0023     		movs	r3, #0
 1225 023e FB70     		strb	r3, [r7, #3]
 406:main.c        ****         previousDirection = directionState;
 1226              		.loc 1 406 0
 1227 0240 0C4A     		ldr	r2, .L66+20
 1228 0242 FB78     		ldrb	r3, [r7, #3]
 1229 0244 1370     		strb	r3, [r2]
 407:main.c        ****         return directionState;
 1230              		.loc 1 407 0
 1231 0246 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1232 0248 05E0     		b	.L42
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 30


 1233              	.L63:
 408:main.c        ****     }
 409:main.c        **** 
 410:main.c        ****     // Possible reason
 411:main.c        ****     previousDirection = currentDirection;
 1234              		.loc 1 411 0
 1235 024a 104B     		ldr	r3, .L66+44
 1236 024c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1237 024e 094B     		ldr	r3, .L66+20
 1238 0250 1A70     		strb	r2, [r3]
 412:main.c        ****     return previousDirection;
 1239              		.loc 1 412 0
 1240 0252 084B     		ldr	r3, .L66+20
 1241 0254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242              	.L42:
 413:main.c        **** }
 1243              		.loc 1 413 0
 1244 0256 1846     		mov	r0, r3
 1245 0258 0837     		adds	r7, r7, #8
 1246              		.cfi_def_cfa_offset 8
 1247 025a BD46     		mov	sp, r7
 1248              		.cfi_def_cfa_register 13
 1249              		@ sp needed
 1250 025c 80BD     		pop	{r7, pc}
 1251              	.L67:
 1252 025e 00BF     		.align	2
 1253              	.L66:
 1254 0260 00000000 		.word	currentOrientation
 1255 0264 00000000 		.word	yBlocksize
 1256 0268 00000000 		.word	xBlocksize
 1257 026c 00000000 		.word	stoppedAfterTurn
 1258 0270 00000000 		.word	stopBuffer
 1259 0274 00000000 		.word	previousDirection
 1260 0278 00000000 		.word	totalDistance
 1261 027c 00000000 		.word	s3
 1262 0280 00000000 		.word	s4
 1263 0284 00000000 		.word	s5
 1264 0288 00000000 		.word	s6
 1265 028c 00000000 		.word	currentDirection
 1266              		.cfi_endproc
 1267              	.LFE73:
 1268              		.size	CheckSensorDirection, .-CheckSensorDirection
 1269              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1270              		.align	2
 1271              		.global	GetMovementAccordingToInstruction
 1272              		.thumb
 1273              		.thumb_func
 1274              		.type	GetMovementAccordingToInstruction, %function
 1275              	GetMovementAccordingToInstruction:
 1276              	.LFB74:
 414:main.c        **** 
 415:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1277              		.loc 1 415 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 31


 1282 0000 80B4     		push	{r7}
 1283              		.cfi_def_cfa_offset 4
 1284              		.cfi_offset 7, -4
 1285 0002 83B0     		sub	sp, sp, #12
 1286              		.cfi_def_cfa_offset 16
 1287 0004 00AF     		add	r7, sp, #0
 1288              		.cfi_def_cfa_register 7
 416:main.c        ****     float blocksize;
 417:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1289              		.loc 1 417 0
 1290 0006 0A4B     		ldr	r3, .L73
 1291 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 000a 002B     		cmp	r3, #0
 1293 000c 03D0     		beq	.L69
 1294              		.loc 1 417 0 is_stmt 0 discriminator 1
 1295 000e 084B     		ldr	r3, .L73
 1296 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1297 0012 012B     		cmp	r3, #1
 1298 0014 03D1     		bne	.L70
 1299              	.L69:
 418:main.c        ****         blocksize = yBlocksize;
 1300              		.loc 1 418 0 is_stmt 1
 1301 0016 074B     		ldr	r3, .L73+4
 1302 0018 1B68     		ldr	r3, [r3]	@ float
 1303 001a 7B60     		str	r3, [r7, #4]	@ float
 1304 001c 02E0     		b	.L71
 1305              	.L70:
 419:main.c        ****     } else {
 420:main.c        ****         blocksize = xBlocksize;
 1306              		.loc 1 420 0
 1307 001e 064B     		ldr	r3, .L73+8
 1308 0020 1B68     		ldr	r3, [r3]	@ float
 1309 0022 7B60     		str	r3, [r7, #4]	@ float
 1310              	.L71:
 421:main.c        ****     }
 422:main.c        ****     //if(currentInstruction)
 423:main.c        ****     
 424:main.c        ****     
 425:main.c        ****     return Stop;
 1311              		.loc 1 425 0
 1312 0024 0523     		movs	r3, #5
 426:main.c        **** }
 1313              		.loc 1 426 0
 1314 0026 1846     		mov	r0, r3
 1315 0028 0C37     		adds	r7, r7, #12
 1316              		.cfi_def_cfa_offset 4
 1317 002a BD46     		mov	sp, r7
 1318              		.cfi_def_cfa_register 13
 1319              		@ sp needed
 1320 002c 80BC     		pop	{r7}
 1321              		.cfi_restore 7
 1322              		.cfi_def_cfa_offset 0
 1323 002e 7047     		bx	lr
 1324              	.L74:
 1325              		.align	2
 1326              	.L73:
 1327 0030 00000000 		.word	currentOrientation
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 32


 1328 0034 00000000 		.word	yBlocksize
 1329 0038 00000000 		.word	xBlocksize
 1330              		.cfi_endproc
 1331              	.LFE74:
 1332              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1333              		.section	.text.MoveToNextInstruction,"ax",%progbits
 1334              		.align	2
 1335              		.global	MoveToNextInstruction
 1336              		.thumb
 1337              		.thumb_func
 1338              		.type	MoveToNextInstruction, %function
 1339              	MoveToNextInstruction:
 1340              	.LFB75:
 427:main.c        **** // get next instruction
 428:main.c        **** 
 429:main.c        **** void MoveToNextInstruction() {
 1341              		.loc 1 429 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 1, uses_anonymous_args = 0
 1345              		@ link register save eliminated.
 1346 0000 80B4     		push	{r7}
 1347              		.cfi_def_cfa_offset 4
 1348              		.cfi_offset 7, -4
 1349 0002 00AF     		add	r7, sp, #0
 1350              		.cfi_def_cfa_register 7
 430:main.c        ****     instructionIndex++;
 1351              		.loc 1 430 0
 1352 0004 044B     		ldr	r3, .L76
 1353 0006 1B68     		ldr	r3, [r3]
 1354 0008 0133     		adds	r3, r3, #1
 1355 000a 034A     		ldr	r2, .L76
 1356 000c 1360     		str	r3, [r2]
 431:main.c        **** }
 1357              		.loc 1 431 0
 1358 000e 00BF     		nop
 1359 0010 BD46     		mov	sp, r7
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 0012 80BC     		pop	{r7}
 1363              		.cfi_restore 7
 1364              		.cfi_def_cfa_offset 0
 1365 0014 7047     		bx	lr
 1366              	.L77:
 1367 0016 00BF     		.align	2
 1368              	.L76:
 1369 0018 00000000 		.word	instructionIndex
 1370              		.cfi_endproc
 1371              	.LFE75:
 1372              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 1373              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 1374              		.align	2
 1375              		.global	GetInstructionAtIndex
 1376              		.thumb
 1377              		.thumb_func
 1378              		.type	GetInstructionAtIndex, %function
 1379              	GetInstructionAtIndex:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 33


 1380              	.LFB76:
 432:main.c        **** 
 433:main.c        **** 
 434:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
 1381              		.loc 1 434 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 32
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385              		@ link register save eliminated.
 1386 0000 90B4     		push	{r4, r7}
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 4, -8
 1389              		.cfi_offset 7, -4
 1390 0002 88B0     		sub	sp, sp, #32
 1391              		.cfi_def_cfa_offset 40
 1392 0004 00AF     		add	r7, sp, #0
 1393              		.cfi_def_cfa_register 7
 1394 0006 F860     		str	r0, [r7, #12]
 1395 0008 B960     		str	r1, [r7, #8]
 1396 000a 7A60     		str	r2, [r7, #4]
 1397 000c 3B60     		str	r3, [r7]
 1398              	.LBB3:
 435:main.c        ****     Instruction nextInstruction;
 436:main.c        ****     // input is list of instructions and robot will react accordingly
 437:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 1399              		.loc 1 437 0
 1400 000e 3B68     		ldr	r3, [r7]
 1401 0010 FB61     		str	r3, [r7, #28]
 1402 0012 36E0     		b	.L79
 1403              	.L82:
 438:main.c        ****         if(instructionList[i].direction != Skip) {
 1404              		.loc 1 438 0
 1405 0014 FA69     		ldr	r2, [r7, #28]
 1406 0016 1346     		mov	r3, r2
 1407 0018 5B00     		lsls	r3, r3, #1
 1408 001a 1344     		add	r3, r3, r2
 1409 001c 9B00     		lsls	r3, r3, #2
 1410 001e 1A46     		mov	r2, r3
 1411 0020 7B68     		ldr	r3, [r7, #4]
 1412 0022 1344     		add	r3, r3, r2
 1413 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1414 0026 062B     		cmp	r3, #6
 1415 0028 26D0     		beq	.L80
 439:main.c        ****             nextInstruction.direction = instructionList[i].direction;
 1416              		.loc 1 439 0
 1417 002a FA69     		ldr	r2, [r7, #28]
 1418 002c 1346     		mov	r3, r2
 1419 002e 5B00     		lsls	r3, r3, #1
 1420 0030 1344     		add	r3, r3, r2
 1421 0032 9B00     		lsls	r3, r3, #2
 1422 0034 1A46     		mov	r2, r3
 1423 0036 7B68     		ldr	r3, [r7, #4]
 1424 0038 1344     		add	r3, r3, r2
 1425 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1426 003c 3B74     		strb	r3, [r7, #16]
 440:main.c        ****             nextInstruction.ignoreL = instructionList[i].ignoreL;
 1427              		.loc 1 440 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 34


 1428 003e FA69     		ldr	r2, [r7, #28]
 1429 0040 1346     		mov	r3, r2
 1430 0042 5B00     		lsls	r3, r3, #1
 1431 0044 1344     		add	r3, r3, r2
 1432 0046 9B00     		lsls	r3, r3, #2
 1433 0048 1A46     		mov	r2, r3
 1434 004a 7B68     		ldr	r3, [r7, #4]
 1435 004c 1344     		add	r3, r3, r2
 1436 004e 5B68     		ldr	r3, [r3, #4]
 1437 0050 7B61     		str	r3, [r7, #20]
 441:main.c        ****             nextInstruction.ignoreR = instructionList[i].ignoreR;
 1438              		.loc 1 441 0
 1439 0052 FA69     		ldr	r2, [r7, #28]
 1440 0054 1346     		mov	r3, r2
 1441 0056 5B00     		lsls	r3, r3, #1
 1442 0058 1344     		add	r3, r3, r2
 1443 005a 9B00     		lsls	r3, r3, #2
 1444 005c 1A46     		mov	r2, r3
 1445 005e 7B68     		ldr	r3, [r7, #4]
 1446 0060 1344     		add	r3, r3, r2
 1447 0062 9B68     		ldr	r3, [r3, #8]
 1448 0064 BB61     		str	r3, [r7, #24]
 442:main.c        ****             return nextInstruction; // return next instruction
 1449              		.loc 1 442 0
 1450 0066 FB68     		ldr	r3, [r7, #12]
 1451 0068 1C46     		mov	r4, r3
 1452 006a 07F11003 		add	r3, r7, #16
 1453 006e 93E80700 		ldmia	r3, {r0, r1, r2}
 1454 0072 84E80700 		stmia	r4, {r0, r1, r2}
 1455 0076 10E0     		b	.L78
 1456              	.L80:
 443:main.c        ****         }
 444:main.c        ****         instructionIndex = i;
 1457              		.loc 1 444 0 discriminator 2
 1458 0078 FB69     		ldr	r3, [r7, #28]
 1459 007a 3B60     		str	r3, [r7]
 437:main.c        ****         if(instructionList[i].direction != Skip) {
 1460              		.loc 1 437 0 discriminator 2
 1461 007c FB69     		ldr	r3, [r7, #28]
 1462 007e 0133     		adds	r3, r3, #1
 1463 0080 FB61     		str	r3, [r7, #28]
 1464              	.L79:
 437:main.c        ****         if(instructionList[i].direction != Skip) {
 1465              		.loc 1 437 0 is_stmt 0 discriminator 1
 1466 0082 FA69     		ldr	r2, [r7, #28]
 1467 0084 BB68     		ldr	r3, [r7, #8]
 1468 0086 9A42     		cmp	r2, r3
 1469 0088 C4DB     		blt	.L82
 1470              	.LBE3:
 445:main.c        ****     }
 446:main.c        ****     return nextInstruction;
 1471              		.loc 1 446 0 is_stmt 1
 1472 008a FB68     		ldr	r3, [r7, #12]
 1473 008c 1C46     		mov	r4, r3
 1474 008e 07F11003 		add	r3, r7, #16
 1475 0092 93E80700 		ldmia	r3, {r0, r1, r2}
 1476 0096 84E80700 		stmia	r4, {r0, r1, r2}
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 35


 1477              	.L78:
 447:main.c        **** }
 1478              		.loc 1 447 0
 1479 009a F868     		ldr	r0, [r7, #12]
 1480 009c 2037     		adds	r7, r7, #32
 1481              		.cfi_def_cfa_offset 8
 1482 009e BD46     		mov	sp, r7
 1483              		.cfi_def_cfa_register 13
 1484              		@ sp needed
 1485 00a0 90BC     		pop	{r4, r7}
 1486              		.cfi_restore 7
 1487              		.cfi_restore 4
 1488              		.cfi_def_cfa_offset 0
 1489 00a2 7047     		bx	lr
 1490              		.cfi_endproc
 1491              	.LFE76:
 1492              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 1493              		.section	.text.SetRobotMovement,"ax",%progbits
 1494              		.align	2
 1495              		.global	SetRobotMovement
 1496              		.thumb
 1497              		.thumb_func
 1498              		.type	SetRobotMovement, %function
 1499              	SetRobotMovement:
 1500              	.LFB77:
 448:main.c        **** 
 449:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 450:main.c        **** void SetRobotMovement() {
 1501              		.loc 1 450 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 16
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 90B5     		push	{r4, r7, lr}
 1506              		.cfi_def_cfa_offset 12
 1507              		.cfi_offset 4, -12
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 85B0     		sub	sp, sp, #20
 1511              		.cfi_def_cfa_offset 32
 1512 0004 00AF     		add	r7, sp, #0
 1513              		.cfi_def_cfa_register 7
 451:main.c        ****     MoveToNextInstruction();
 1514              		.loc 1 451 0
 1515 0006 FFF7FEFF 		bl	MoveToNextInstruction
 452:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList, instructionIndex); // get
 1516              		.loc 1 452 0
 1517 000a 274B     		ldr	r3, .L99
 1518 000c 1968     		ldr	r1, [r3]
 1519 000e 274B     		ldr	r3, .L99+4
 1520 0010 1A68     		ldr	r2, [r3]
 1521 0012 274B     		ldr	r3, .L99+8
 1522 0014 1B68     		ldr	r3, [r3]
 1523 0016 274C     		ldr	r4, .L99+12
 1524 0018 3846     		mov	r0, r7
 1525 001a FFF7FEFF 		bl	GetInstructionAtIndex
 1526 001e 3B46     		mov	r3, r7
 1527 0020 93E80700 		ldmia	r3, {r0, r1, r2}
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 36


 1528 0024 84E80700 		stmia	r4, {r0, r1, r2}
 453:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 1529              		.loc 1 453 0
 1530 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 1531 002c 0346     		mov	r3, r0
 1532 002e 1A46     		mov	r2, r3
 1533 0030 214B     		ldr	r3, .L99+16
 1534 0032 1A70     		strb	r2, [r3]
 454:main.c        ****     // move robot depending on sensors
 455:main.c        ****     switch (currentDirection) {
 1535              		.loc 1 455 0
 1536 0034 204B     		ldr	r3, .L99+16
 1537 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 0038 092B     		cmp	r3, #9
 1539 003a 30D8     		bhi	.L97
 1540 003c 01A2     		adr	r2, .L87
 1541 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1542 0042 00BF     		.p2align 2
 1543              	.L87:
 1544 0044 6D000000 		.word	.L86+1
 1545 0048 73000000 		.word	.L88+1
 1546 004c 79000000 		.word	.L89+1
 1547 0050 85000000 		.word	.L90+1
 1548 0054 7F000000 		.word	.L91+1
 1549 0058 8B000000 		.word	.L92+1
 1550 005c 9D000000 		.word	.L98+1
 1551 0060 9D000000 		.word	.L98+1
 1552 0064 91000000 		.word	.L95+1
 1553 0068 97000000 		.word	.L96+1
 1554              		.p2align 1
 1555              	.L86:
 456:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 457:main.c        ****         case Forward:
 458:main.c        ****             moveForward();
 1556              		.loc 1 458 0
 1557 006c FFF7FEFF 		bl	moveForward
 459:main.c        ****             break;
 1558              		.loc 1 459 0
 1559 0070 15E0     		b	.L85
 1560              	.L88:
 460:main.c        ****         case TurnRight:
 461:main.c        ****             turnRight();
 1561              		.loc 1 461 0
 1562 0072 FFF7FEFF 		bl	turnRight
 462:main.c        ****             break;
 1563              		.loc 1 462 0
 1564 0076 12E0     		b	.L85
 1565              	.L89:
 463:main.c        ****         case TurnLeft:
 464:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1566              		.loc 1 464 0
 1567 0078 FFF7FEFF 		bl	turnLeft
 465:main.c        ****             break;
 1568              		.loc 1 465 0
 1569 007c 0FE0     		b	.L85
 1570              	.L91:
 466:main.c        ****         case AdjustToTheRight:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 37


 467:main.c        ****             adjustRight();
 1571              		.loc 1 467 0
 1572 007e FFF7FEFF 		bl	adjustRight
 468:main.c        ****             break;
 1573              		.loc 1 468 0
 1574 0082 0CE0     		b	.L85
 1575              	.L90:
 469:main.c        ****         case AdjustToTheLeft:
 470:main.c        ****             adjustLeft();
 1576              		.loc 1 470 0
 1577 0084 FFF7FEFF 		bl	adjustLeft
 471:main.c        ****             break;
 1578              		.loc 1 471 0
 1579 0088 09E0     		b	.L85
 1580              	.L92:
 472:main.c        ****         case Stop:
 473:main.c        ****             stopMoving();
 1581              		.loc 1 473 0
 1582 008a FFF7FEFF 		bl	stopMoving
 474:main.c        ****             break;
 1583              		.loc 1 474 0
 1584 008e 06E0     		b	.L85
 1585              	.L95:
 475:main.c        ****         case ForwardAfterTurn:
 476:main.c        ****             moveForward();
 1586              		.loc 1 476 0
 1587 0090 FFF7FEFF 		bl	moveForward
 477:main.c        ****             break;
 1588              		.loc 1 477 0
 1589 0094 03E0     		b	.L85
 1590              	.L96:
 478:main.c        ****         case Backward:
 479:main.c        ****             moveBackward();
 1591              		.loc 1 479 0
 1592 0096 FFF7FEFF 		bl	moveBackward
 480:main.c        ****             break;
 1593              		.loc 1 480 0
 1594 009a 00E0     		b	.L85
 1595              	.L98:
 481:main.c        ****         case waitForTurn:
 482:main.c        ****             break;
 483:main.c        ****         /*case waitForLeftTurn:
 484:main.c        ****             moveForward();
 485:main.c        ****             break;
 486:main.c        ****         case waitForRightTurn:
 487:main.c        ****             moveForward();
 488:main.c        ****             break;*/
 489:main.c        ****         case Unknown:
 490:main.c        ****             // UNKNOWN CONFIGURATION
 491:main.c        ****             break;  
 1596              		.loc 1 491 0
 1597 009c 00BF     		nop
 1598              	.L85:
 1599              	.L97:
 492:main.c        ****     }
 493:main.c        **** }...
 1600              		.loc 1 493 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 38


 1601 009e 00BF     		nop
 1602 00a0 1437     		adds	r7, r7, #20
 1603              		.cfi_def_cfa_offset 12
 1604 00a2 BD46     		mov	sp, r7
 1605              		.cfi_def_cfa_register 13
 1606              		@ sp needed
 1607 00a4 90BD     		pop	{r4, r7, pc}
 1608              	.L100:
 1609 00a6 00BF     		.align	2
 1610              	.L99:
 1611 00a8 00000000 		.word	numSteps
 1612 00ac 00000000 		.word	instructionList
 1613 00b0 00000000 		.word	instructionIndex
 1614 00b4 00000000 		.word	currentInstruction
 1615 00b8 00000000 		.word	currentDirection
 1616              		.cfi_endproc
 1617              	.LFE77:
 1618              		.size	SetRobotMovement, .-SetRobotMovement
 1619              		.text
 1620              	.Letext0:
 1621              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1622              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1623              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1624              		.file 5 "vars.h"
 1625              		.file 6 "pathfinding.h"
 1626              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1627              		.file 8 "map.h"
 1628              		.section	.debug_info,"",%progbits
 1629              	.Ldebug_info0:
 1630 0000 F6070000 		.4byte	0x7f6
 1631 0004 0400     		.2byte	0x4
 1632 0006 00000000 		.4byte	.Ldebug_abbrev0
 1633 000a 04       		.byte	0x4
 1634 000b 01       		.uleb128 0x1
 1635 000c 82000000 		.4byte	.LASF126
 1636 0010 0C       		.byte	0xc
 1637 0011 30000000 		.4byte	.LASF127
 1638 0015 D2040000 		.4byte	.LASF128
 1639 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1640 001d 00000000 		.4byte	0
 1641 0021 00000000 		.4byte	.Ldebug_line0
 1642 0025 02       		.uleb128 0x2
 1643 0026 01       		.byte	0x1
 1644 0027 06       		.byte	0x6
 1645 0028 EF050000 		.4byte	.LASF0
 1646 002c 02       		.uleb128 0x2
 1647 002d 01       		.byte	0x1
 1648 002e 08       		.byte	0x8
 1649 002f 5F050000 		.4byte	.LASF1
 1650 0033 02       		.uleb128 0x2
 1651 0034 02       		.byte	0x2
 1652 0035 05       		.byte	0x5
 1653 0036 23040000 		.4byte	.LASF2
 1654 003a 02       		.uleb128 0x2
 1655 003b 02       		.byte	0x2
 1656 003c 07       		.byte	0x7
 1657 003d 06060000 		.4byte	.LASF3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 39


 1658 0041 03       		.uleb128 0x3
 1659 0042 55000000 		.4byte	.LASF12
 1660 0046 02       		.byte	0x2
 1661 0047 3F       		.byte	0x3f
 1662 0048 4C000000 		.4byte	0x4c
 1663 004c 02       		.uleb128 0x2
 1664 004d 04       		.byte	0x4
 1665 004e 05       		.byte	0x5
 1666 004f 45040000 		.4byte	.LASF4
 1667 0053 02       		.uleb128 0x2
 1668 0054 04       		.byte	0x4
 1669 0055 07       		.byte	0x7
 1670 0056 1B050000 		.4byte	.LASF5
 1671 005a 02       		.uleb128 0x2
 1672 005b 08       		.byte	0x8
 1673 005c 05       		.byte	0x5
 1674 005d 17030000 		.4byte	.LASF6
 1675 0061 02       		.uleb128 0x2
 1676 0062 08       		.byte	0x8
 1677 0063 07       		.byte	0x7
 1678 0064 C1010000 		.4byte	.LASF7
 1679 0068 04       		.uleb128 0x4
 1680 0069 04       		.byte	0x4
 1681 006a 05       		.byte	0x5
 1682 006b 696E7400 		.ascii	"int\000"
 1683 006f 02       		.uleb128 0x2
 1684 0070 04       		.byte	0x4
 1685 0071 07       		.byte	0x7
 1686 0072 48000000 		.4byte	.LASF8
 1687 0076 02       		.uleb128 0x2
 1688 0077 08       		.byte	0x8
 1689 0078 04       		.byte	0x4
 1690 0079 E7030000 		.4byte	.LASF9
 1691 007d 02       		.uleb128 0x2
 1692 007e 04       		.byte	0x4
 1693 007f 07       		.byte	0x7
 1694 0080 12050000 		.4byte	.LASF10
 1695 0084 02       		.uleb128 0x2
 1696 0085 01       		.byte	0x1
 1697 0086 08       		.byte	0x8
 1698 0087 A4020000 		.4byte	.LASF11
 1699 008b 03       		.uleb128 0x3
 1700 008c 38050000 		.4byte	.LASF13
 1701 0090 03       		.byte	0x3
 1702 0091 2C       		.byte	0x2c
 1703 0092 41000000 		.4byte	0x41
 1704 0096 05       		.uleb128 0x5
 1705 0097 5C060000 		.4byte	.LASF14
 1706 009b 04       		.byte	0x4
 1707 009c E701     		.2byte	0x1e7
 1708 009e 2C000000 		.4byte	0x2c
 1709 00a2 05       		.uleb128 0x5
 1710 00a3 D3020000 		.4byte	.LASF15
 1711 00a7 04       		.byte	0x4
 1712 00a8 E801     		.2byte	0x1e8
 1713 00aa 3A000000 		.4byte	0x3a
 1714 00ae 05       		.uleb128 0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 40


 1715 00af 97030000 		.4byte	.LASF16
 1716 00b3 04       		.byte	0x4
 1717 00b4 E901     		.2byte	0x1e9
 1718 00b6 53000000 		.4byte	0x53
 1719 00ba 05       		.uleb128 0x5
 1720 00bb DA020000 		.4byte	.LASF17
 1721 00bf 04       		.byte	0x4
 1722 00c0 EA01     		.2byte	0x1ea
 1723 00c2 25000000 		.4byte	0x25
 1724 00c6 05       		.uleb128 0x5
 1725 00c7 5F000000 		.4byte	.LASF18
 1726 00cb 04       		.byte	0x4
 1727 00cc EB01     		.2byte	0x1eb
 1728 00ce 33000000 		.4byte	0x33
 1729 00d2 02       		.uleb128 0x2
 1730 00d3 04       		.byte	0x4
 1731 00d4 04       		.byte	0x4
 1732 00d5 A5010000 		.4byte	.LASF19
 1733 00d9 02       		.uleb128 0x2
 1734 00da 08       		.byte	0x8
 1735 00db 04       		.byte	0x4
 1736 00dc 62060000 		.4byte	.LASF20
 1737 00e0 06       		.uleb128 0x6
 1738 00e1 B9030000 		.4byte	.LASF45
 1739 00e5 20       		.byte	0x20
 1740 00e6 05       		.byte	0x5
 1741 00e7 28       		.byte	0x28
 1742 00e8 B9010000 		.4byte	0x1b9
 1743 00ec 07       		.uleb128 0x7
 1744 00ed C3030000 		.4byte	.LASF21
 1745 00f1 05       		.byte	0x5
 1746 00f2 2A       		.byte	0x2a
 1747 00f3 BA000000 		.4byte	0xba
 1748 00f7 00       		.byte	0
 1749 00f8 07       		.uleb128 0x7
 1750 00f9 BB010000 		.4byte	.LASF22
 1751 00fd 05       		.byte	0x5
 1752 00fe 2B       		.byte	0x2b
 1753 00ff 96000000 		.4byte	0x96
 1754 0103 01       		.byte	0x1
 1755 0104 07       		.uleb128 0x7
 1756 0105 40050000 		.4byte	.LASF23
 1757 0109 05       		.byte	0x5
 1758 010a 2C       		.byte	0x2c
 1759 010b C6000000 		.4byte	0xc6
 1760 010f 02       		.byte	0x2
 1761 0110 07       		.uleb128 0x7
 1762 0111 7B020000 		.4byte	.LASF24
 1763 0115 05       		.byte	0x5
 1764 0116 2D       		.byte	0x2d
 1765 0117 C6000000 		.4byte	0xc6
 1766 011b 04       		.byte	0x4
 1767 011c 07       		.uleb128 0x7
 1768 011d 19060000 		.4byte	.LASF25
 1769 0121 05       		.byte	0x5
 1770 0122 2E       		.byte	0x2e
 1771 0123 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 41


 1772 0127 06       		.byte	0x6
 1773 0128 07       		.uleb128 0x7
 1774 0129 89060000 		.4byte	.LASF26
 1775 012d 05       		.byte	0x5
 1776 012e 2F       		.byte	0x2f
 1777 012f C6000000 		.4byte	0xc6
 1778 0133 08       		.byte	0x8
 1779 0134 07       		.uleb128 0x7
 1780 0135 5C030000 		.4byte	.LASF27
 1781 0139 05       		.byte	0x5
 1782 013a 30       		.byte	0x30
 1783 013b C6000000 		.4byte	0xc6
 1784 013f 0A       		.byte	0xa
 1785 0140 07       		.uleb128 0x7
 1786 0141 A9020000 		.4byte	.LASF28
 1787 0145 05       		.byte	0x5
 1788 0146 31       		.byte	0x31
 1789 0147 C6000000 		.4byte	0xc6
 1790 014b 0C       		.byte	0xc
 1791 014c 07       		.uleb128 0x7
 1792 014d C8030000 		.4byte	.LASF29
 1793 0151 05       		.byte	0x5
 1794 0152 32       		.byte	0x32
 1795 0153 C6000000 		.4byte	0xc6
 1796 0157 0E       		.byte	0xe
 1797 0158 07       		.uleb128 0x7
 1798 0159 25030000 		.4byte	.LASF30
 1799 015d 05       		.byte	0x5
 1800 015e 33       		.byte	0x33
 1801 015f C6000000 		.4byte	0xc6
 1802 0163 10       		.byte	0x10
 1803 0164 07       		.uleb128 0x7
 1804 0165 B9040000 		.4byte	.LASF31
 1805 0169 05       		.byte	0x5
 1806 016a 34       		.byte	0x34
 1807 016b C6000000 		.4byte	0xc6
 1808 016f 12       		.byte	0x12
 1809 0170 07       		.uleb128 0x7
 1810 0171 A9060000 		.4byte	.LASF32
 1811 0175 05       		.byte	0x5
 1812 0176 35       		.byte	0x35
 1813 0177 C6000000 		.4byte	0xc6
 1814 017b 14       		.byte	0x14
 1815 017c 07       		.uleb128 0x7
 1816 017d EA020000 		.4byte	.LASF33
 1817 0181 05       		.byte	0x5
 1818 0182 36       		.byte	0x36
 1819 0183 C6000000 		.4byte	0xc6
 1820 0187 16       		.byte	0x16
 1821 0188 07       		.uleb128 0x7
 1822 0189 2A010000 		.4byte	.LASF34
 1823 018d 05       		.byte	0x5
 1824 018e 37       		.byte	0x37
 1825 018f C6000000 		.4byte	0xc6
 1826 0193 18       		.byte	0x18
 1827 0194 07       		.uleb128 0x7
 1828 0195 7F040000 		.4byte	.LASF35
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 42


 1829 0199 05       		.byte	0x5
 1830 019a 38       		.byte	0x38
 1831 019b C6000000 		.4byte	0xc6
 1832 019f 1A       		.byte	0x1a
 1833 01a0 07       		.uleb128 0x7
 1834 01a1 53030000 		.4byte	.LASF36
 1835 01a5 05       		.byte	0x5
 1836 01a6 39       		.byte	0x39
 1837 01a7 C6000000 		.4byte	0xc6
 1838 01ab 1C       		.byte	0x1c
 1839 01ac 07       		.uleb128 0x7
 1840 01ad 8A010000 		.4byte	.LASF37
 1841 01b1 05       		.byte	0x5
 1842 01b2 3A       		.byte	0x3a
 1843 01b3 C6000000 		.4byte	0xc6
 1844 01b7 1E       		.byte	0x1e
 1845 01b8 00       		.byte	0
 1846 01b9 08       		.uleb128 0x8
 1847 01ba 1B000000 		.4byte	.LASF50
 1848 01be 01       		.byte	0x1
 1849 01bf 2C000000 		.4byte	0x2c
 1850 01c3 06       		.byte	0x6
 1851 01c4 0D       		.byte	0xd
 1852 01c5 F4010000 		.4byte	0x1f4
 1853 01c9 09       		.uleb128 0x9
 1854 01ca D9050000 		.4byte	.LASF38
 1855 01ce 00       		.byte	0
 1856 01cf 09       		.uleb128 0x9
 1857 01d0 07030000 		.4byte	.LASF39
 1858 01d4 01       		.byte	0x1
 1859 01d5 09       		.uleb128 0x9
 1860 01d6 9E030000 		.4byte	.LASF40
 1861 01da 02       		.byte	0x2
 1862 01db 09       		.uleb128 0x9
 1863 01dc 41030000 		.4byte	.LASF41
 1864 01e0 03       		.byte	0x3
 1865 01e1 09       		.uleb128 0x9
 1866 01e2 18020000 		.4byte	.LASF42
 1867 01e6 04       		.byte	0x4
 1868 01e7 09       		.uleb128 0x9
 1869 01e8 62020000 		.4byte	.LASF43
 1870 01ec 05       		.byte	0x5
 1871 01ed 09       		.uleb128 0x9
 1872 01ee C6050000 		.4byte	.LASF44
 1873 01f2 06       		.byte	0x6
 1874 01f3 00       		.byte	0
 1875 01f4 06       		.uleb128 0x6
 1876 01f5 D8010000 		.4byte	.LASF46
 1877 01f9 0C       		.byte	0xc
 1878 01fa 06       		.byte	0x6
 1879 01fb 0E       		.byte	0xe
 1880 01fc 25020000 		.4byte	0x225
 1881 0200 07       		.uleb128 0x7
 1882 0201 00000000 		.4byte	.LASF47
 1883 0205 06       		.byte	0x6
 1884 0206 0F       		.byte	0xf
 1885 0207 B9010000 		.4byte	0x1b9
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 43


 1886 020b 00       		.byte	0
 1887 020c 07       		.uleb128 0x7
 1888 020d B2060000 		.4byte	.LASF48
 1889 0211 06       		.byte	0x6
 1890 0212 10       		.byte	0x10
 1891 0213 68000000 		.4byte	0x68
 1892 0217 04       		.byte	0x4
 1893 0218 07       		.uleb128 0x7
 1894 0219 BA060000 		.4byte	.LASF49
 1895 021d 06       		.byte	0x6
 1896 021e 11       		.byte	0x11
 1897 021f 68000000 		.4byte	0x68
 1898 0223 08       		.byte	0x8
 1899 0224 00       		.byte	0
 1900 0225 03       		.uleb128 0x3
 1901 0226 D8010000 		.4byte	.LASF46
 1902 022a 06       		.byte	0x6
 1903 022b 12       		.byte	0x12
 1904 022c F4010000 		.4byte	0x1f4
 1905 0230 08       		.uleb128 0x8
 1906 0231 9D040000 		.4byte	.LASF51
 1907 0235 01       		.byte	0x1
 1908 0236 2C000000 		.4byte	0x2c
 1909 023a 06       		.byte	0x6
 1910 023b 14       		.byte	0x14
 1911 023c 58020000 		.4byte	0x258
 1912 0240 0A       		.uleb128 0xa
 1913 0241 557000   		.ascii	"Up\000"
 1914 0244 00       		.byte	0
 1915 0245 09       		.uleb128 0x9
 1916 0246 AE040000 		.4byte	.LASF52
 1917 024a 01       		.byte	0x1
 1918 024b 09       		.uleb128 0x9
 1919 024c F7020000 		.4byte	.LASF53
 1920 0250 02       		.byte	0x2
 1921 0251 09       		.uleb128 0x9
 1922 0252 B3040000 		.4byte	.LASF54
 1923 0256 03       		.byte	0x3
 1924 0257 00       		.byte	0
 1925 0258 08       		.uleb128 0x8
 1926 0259 51050000 		.4byte	.LASF55
 1927 025d 01       		.byte	0x1
 1928 025e 2C000000 		.4byte	0x2c
 1929 0262 01       		.byte	0x1
 1930 0263 18       		.byte	0x18
 1931 0264 A5020000 		.4byte	0x2a5
 1932 0268 09       		.uleb128 0x9
 1933 0269 65040000 		.4byte	.LASF56
 1934 026d 00       		.byte	0
 1935 026e 09       		.uleb128 0x9
 1936 026f AF030000 		.4byte	.LASF57
 1937 0273 01       		.byte	0x1
 1938 0274 09       		.uleb128 0x9
 1939 0275 6E030000 		.4byte	.LASF58
 1940 0279 02       		.byte	0x2
 1941 027a 09       		.uleb128 0x9
 1942 027b 43060000 		.4byte	.LASF59
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 44


 1943 027f 03       		.byte	0x3
 1944 0280 09       		.uleb128 0x9
 1945 0281 83050000 		.4byte	.LASF60
 1946 0285 04       		.byte	0x4
 1947 0286 09       		.uleb128 0x9
 1948 0287 94050000 		.4byte	.LASF61
 1949 028b 05       		.byte	0x5
 1950 028c 09       		.uleb128 0x9
 1951 028d 80030000 		.4byte	.LASF62
 1952 0291 06       		.byte	0x6
 1953 0292 09       		.uleb128 0x9
 1954 0293 6F020000 		.4byte	.LASF63
 1955 0297 07       		.byte	0x7
 1956 0298 09       		.uleb128 0x9
 1957 0299 0A000000 		.4byte	.LASF64
 1958 029d 08       		.byte	0x8
 1959 029e 09       		.uleb128 0x9
 1960 029f 53060000 		.4byte	.LASF65
 1961 02a3 09       		.byte	0x9
 1962 02a4 00       		.byte	0
 1963 02a5 0B       		.uleb128 0xb
 1964 02a6 FC020000 		.4byte	.LASF73
 1965 02aa 01       		.byte	0x1
 1966 02ab 34       		.byte	0x34
 1967 02ac 00000000 		.4byte	.LFB64
 1968 02b0 F4000000 		.4byte	.LFE64-.LFB64
 1969 02b4 01       		.uleb128 0x1
 1970 02b5 9C       		.byte	0x9c
 1971 02b6 D3020000 		.4byte	0x2d3
 1972 02ba 0C       		.uleb128 0xc
 1973 02bb 58000000 		.4byte	.LBB2
 1974 02bf 62000000 		.4byte	.LBE2-.LBB2
 1975 02c3 0D       		.uleb128 0xd
 1976 02c4 47030000 		.4byte	.LASF72
 1977 02c8 01       		.byte	0x1
 1978 02c9 42       		.byte	0x42
 1979 02ca D2000000 		.4byte	0xd2
 1980 02ce 02       		.uleb128 0x2
 1981 02cf 91       		.byte	0x91
 1982 02d0 6C       		.sleb128 -20
 1983 02d1 00       		.byte	0
 1984 02d2 00       		.byte	0
 1985 02d3 0E       		.uleb128 0xe
 1986 02d4 39040000 		.4byte	.LASF66
 1987 02d8 01       		.byte	0x1
 1988 02d9 4D       		.byte	0x4d
 1989 02da 00000000 		.4byte	.LFB65
 1990 02de 18000000 		.4byte	.LFE65-.LFB65
 1991 02e2 01       		.uleb128 0x1
 1992 02e3 9C       		.byte	0x9c
 1993 02e4 0E       		.uleb128 0xe
 1994 02e5 2D040000 		.4byte	.LASF67
 1995 02e9 01       		.byte	0x1
 1996 02ea 53       		.byte	0x53
 1997 02eb 00000000 		.4byte	.LFB66
 1998 02ef 18000000 		.4byte	.LFE66-.LFB66
 1999 02f3 01       		.uleb128 0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 45


 2000 02f4 9C       		.byte	0x9c
 2001 02f5 0E       		.uleb128 0xe
 2002 02f6 E3050000 		.4byte	.LASF68
 2003 02fa 01       		.byte	0x1
 2004 02fb 59       		.byte	0x59
 2005 02fc 00000000 		.4byte	.LFB67
 2006 0300 18000000 		.4byte	.LFE67-.LFB67
 2007 0304 01       		.uleb128 0x1
 2008 0305 9C       		.byte	0x9c
 2009 0306 0E       		.uleb128 0xe
 2010 0307 10010000 		.4byte	.LASF69
 2011 030b 01       		.byte	0x1
 2012 030c 5F       		.byte	0x5f
 2013 030d 00000000 		.4byte	.LFB68
 2014 0311 18000000 		.4byte	.LFE68-.LFB68
 2015 0315 01       		.uleb128 0x1
 2016 0316 9C       		.byte	0x9c
 2017 0317 0F       		.uleb128 0xf
 2018 0318 01020000 		.4byte	.LASF70
 2019 031c 01       		.byte	0x1
 2020 031d 65       		.byte	0x65
 2021 031e 00000000 		.4byte	.LFB69
 2022 0322 38000000 		.4byte	.LFE69-.LFB69
 2023 0326 01       		.uleb128 0x1
 2024 0327 9C       		.byte	0x9c
 2025 0328 10       		.uleb128 0x10
 2026 0329 2B060000 		.4byte	.LASF71
 2027 032d 01       		.byte	0x1
 2028 032e 71       		.byte	0x71
 2029 032f 68000000 		.4byte	0x68
 2030 0333 00000000 		.4byte	.LFB70
 2031 0337 C0000000 		.4byte	.LFE70-.LFB70
 2032 033b 01       		.uleb128 0x1
 2033 033c 9C       		.byte	0x9c
 2034 033d 11       		.uleb128 0x11
 2035 033e 46020000 		.4byte	.LASF80
 2036 0342 01       		.byte	0x1
 2037 0343 9F       		.byte	0x9f
 2038 0344 C6000000 		.4byte	0xc6
 2039 0348 00000000 		.4byte	.LFB71
 2040 034c 54000000 		.4byte	.LFE71-.LFB71
 2041 0350 01       		.uleb128 0x1
 2042 0351 9C       		.byte	0x9c
 2043 0352 81030000 		.4byte	0x381
 2044 0356 12       		.uleb128 0x12
 2045 0357 B5010000 		.4byte	.LASF82
 2046 035b 01       		.byte	0x1
 2047 035c 9F       		.byte	0x9f
 2048 035d A2000000 		.4byte	0xa2
 2049 0361 02       		.uleb128 0x2
 2050 0362 91       		.byte	0x91
 2051 0363 66       		.sleb128 -26
 2052 0364 13       		.uleb128 0x13
 2053 0365 63707300 		.ascii	"cps\000"
 2054 0369 01       		.byte	0x1
 2055 036a A1       		.byte	0xa1
 2056 036b D2000000 		.4byte	0xd2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 46


 2057 036f 02       		.uleb128 0x2
 2058 0370 91       		.byte	0x91
 2059 0371 6C       		.sleb128 -20
 2060 0372 13       		.uleb128 0x13
 2061 0373 72706D00 		.ascii	"rpm\000"
 2062 0377 01       		.byte	0x1
 2063 0378 A2       		.byte	0xa2
 2064 0379 C6000000 		.4byte	0xc6
 2065 037d 02       		.uleb128 0x2
 2066 037e 91       		.byte	0x91
 2067 037f 6A       		.sleb128 -22
 2068 0380 00       		.byte	0
 2069 0381 14       		.uleb128 0x14
 2070 0382 79010000 		.4byte	.LASF78
 2071 0386 01       		.byte	0x1
 2072 0387 AA       		.byte	0xaa
 2073 0388 00000000 		.4byte	.LFB72
 2074 038c 34000000 		.4byte	.LFE72-.LFB72
 2075 0390 01       		.uleb128 0x1
 2076 0391 9C       		.byte	0x9c
 2077 0392 15       		.uleb128 0x15
 2078 0393 69060000 		.4byte	.LASF74
 2079 0397 01       		.byte	0x1
 2080 0398 0401     		.2byte	0x104
 2081 039a 58020000 		.4byte	0x258
 2082 039e 00000000 		.4byte	.LFB73
 2083 03a2 90020000 		.4byte	.LFE73-.LFB73
 2084 03a6 01       		.uleb128 0x1
 2085 03a7 9C       		.byte	0x9c
 2086 03a8 CB030000 		.4byte	0x3cb
 2087 03ac 16       		.uleb128 0x16
 2088 03ad 37000000 		.4byte	.LASF75
 2089 03b1 01       		.byte	0x1
 2090 03b2 0501     		.2byte	0x105
 2091 03b4 D2000000 		.4byte	0xd2
 2092 03b8 02       		.uleb128 0x2
 2093 03b9 91       		.byte	0x91
 2094 03ba 74       		.sleb128 -12
 2095 03bb 16       		.uleb128 0x16
 2096 03bc 88030000 		.4byte	.LASF76
 2097 03c0 01       		.byte	0x1
 2098 03c1 0C01     		.2byte	0x10c
 2099 03c3 58020000 		.4byte	0x258
 2100 03c7 02       		.uleb128 0x2
 2101 03c8 91       		.byte	0x91
 2102 03c9 73       		.sleb128 -13
 2103 03ca 00       		.byte	0
 2104 03cb 17       		.uleb128 0x17
 2105 03cc 3B010000 		.4byte	.LASF77
 2106 03d0 01       		.byte	0x1
 2107 03d1 9F01     		.2byte	0x19f
 2108 03d3 58020000 		.4byte	0x258
 2109 03d7 00000000 		.4byte	.LFB74
 2110 03db 3C000000 		.4byte	.LFE74-.LFB74
 2111 03df 01       		.uleb128 0x1
 2112 03e0 9C       		.byte	0x9c
 2113 03e1 F5030000 		.4byte	0x3f5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 47


 2114 03e5 16       		.uleb128 0x16
 2115 03e6 37000000 		.4byte	.LASF75
 2116 03ea 01       		.byte	0x1
 2117 03eb A001     		.2byte	0x1a0
 2118 03ed D2000000 		.4byte	0xd2
 2119 03f1 02       		.uleb128 0x2
 2120 03f2 91       		.byte	0x91
 2121 03f3 74       		.sleb128 -12
 2122 03f4 00       		.byte	0
 2123 03f5 18       		.uleb128 0x18
 2124 03f6 87040000 		.4byte	.LASF79
 2125 03fa 01       		.byte	0x1
 2126 03fb AD01     		.2byte	0x1ad
 2127 03fd 00000000 		.4byte	.LFB75
 2128 0401 1C000000 		.4byte	.LFE75-.LFB75
 2129 0405 01       		.uleb128 0x1
 2130 0406 9C       		.byte	0x9c
 2131 0407 19       		.uleb128 0x19
 2132 0408 99050000 		.4byte	.LASF81
 2133 040c 01       		.byte	0x1
 2134 040d B201     		.2byte	0x1b2
 2135 040f 25020000 		.4byte	0x225
 2136 0413 00000000 		.4byte	.LFB76
 2137 0417 A4000000 		.4byte	.LFE76-.LFB76
 2138 041b 01       		.uleb128 0x1
 2139 041c 9C       		.byte	0x9c
 2140 041d 75040000 		.4byte	0x475
 2141 0421 1A       		.uleb128 0x1a
 2142 0422 32010000 		.4byte	.LASF83
 2143 0426 01       		.byte	0x1
 2144 0427 B201     		.2byte	0x1b2
 2145 0429 68000000 		.4byte	0x68
 2146 042d 02       		.uleb128 0x2
 2147 042e 91       		.byte	0x91
 2148 042f 60       		.sleb128 -32
 2149 0430 1A       		.uleb128 0x1a
 2150 0431 B2020000 		.4byte	.LASF84
 2151 0435 01       		.byte	0x1
 2152 0436 B201     		.2byte	0x1b2
 2153 0438 75040000 		.4byte	0x475
 2154 043c 02       		.uleb128 0x2
 2155 043d 91       		.byte	0x91
 2156 043e 5C       		.sleb128 -36
 2157 043f 1A       		.uleb128 0x1a
 2158 0440 C2020000 		.4byte	.LASF85
 2159 0444 01       		.byte	0x1
 2160 0445 B201     		.2byte	0x1b2
 2161 0447 68000000 		.4byte	0x68
 2162 044b 02       		.uleb128 0x2
 2163 044c 91       		.byte	0x91
 2164 044d 58       		.sleb128 -40
 2165 044e 16       		.uleb128 0x16
 2166 044f 72000000 		.4byte	.LASF86
 2167 0453 01       		.byte	0x1
 2168 0454 B301     		.2byte	0x1b3
 2169 0456 25020000 		.4byte	0x225
 2170 045a 02       		.uleb128 0x2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 48


 2171 045b 91       		.byte	0x91
 2172 045c 68       		.sleb128 -24
 2173 045d 0C       		.uleb128 0xc
 2174 045e 0E000000 		.4byte	.LBB3
 2175 0462 7C000000 		.4byte	.LBE3-.LBB3
 2176 0466 1B       		.uleb128 0x1b
 2177 0467 6900     		.ascii	"i\000"
 2178 0469 01       		.byte	0x1
 2179 046a B501     		.2byte	0x1b5
 2180 046c 68000000 		.4byte	0x68
 2181 0470 02       		.uleb128 0x2
 2182 0471 91       		.byte	0x91
 2183 0472 74       		.sleb128 -12
 2184 0473 00       		.byte	0
 2185 0474 00       		.byte	0
 2186 0475 1C       		.uleb128 0x1c
 2187 0476 04       		.byte	0x4
 2188 0477 25020000 		.4byte	0x225
 2189 047b 1D       		.uleb128 0x1d
 2190 047c F0010000 		.4byte	.LASF87
 2191 0480 01       		.byte	0x1
 2192 0481 C201     		.2byte	0x1c2
 2193 0483 00000000 		.4byte	.LFB77
 2194 0487 BC000000 		.4byte	.LFE77-.LFB77
 2195 048b 01       		.uleb128 0x1
 2196 048c 9C       		.byte	0x9c
 2197 048d 1E       		.uleb128 0x1e
 2198 048e 4E040000 		.4byte	.LASF88
 2199 0492 07       		.byte	0x7
 2200 0493 1207     		.2byte	0x712
 2201 0495 99040000 		.4byte	0x499
 2202 0499 1F       		.uleb128 0x1f
 2203 049a 8B000000 		.4byte	0x8b
 2204 049e 20       		.uleb128 0x20
 2205 049f 747300   		.ascii	"ts\000"
 2206 04a2 05       		.byte	0x5
 2207 04a3 10       		.byte	0x10
 2208 04a4 96000000 		.4byte	0x96
 2209 04a8 05       		.uleb128 0x5
 2210 04a9 03       		.byte	0x3
 2211 04aa 00000000 		.4byte	ts
 2212 04ae 21       		.uleb128 0x21
 2213 04af AF050000 		.4byte	.LASF89
 2214 04b3 05       		.byte	0x5
 2215 04b4 11       		.byte	0x11
 2216 04b5 A2000000 		.4byte	0xa2
 2217 04b9 05       		.uleb128 0x5
 2218 04ba 03       		.byte	0x3
 2219 04bb 00000000 		.4byte	ts_enc
 2220 04bf 21       		.uleb128 0x21
 2221 04c0 5B040000 		.4byte	.LASF90
 2222 04c4 05       		.byte	0x5
 2223 04c5 12       		.byte	0x12
 2224 04c6 A2000000 		.4byte	0xa2
 2225 04ca 05       		.uleb128 0x5
 2226 04cb 03       		.byte	0x3
 2227 04cc 00000000 		.4byte	ts_update
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 49


 2228 04d0 21       		.uleb128 0x21
 2229 04d1 77030000 		.4byte	.LASF91
 2230 04d5 05       		.byte	0x5
 2231 04d6 13       		.byte	0x13
 2232 04d7 A2000000 		.4byte	0xa2
 2233 04db 05       		.uleb128 0x5
 2234 04dc 03       		.byte	0x3
 2235 04dd 00000000 		.4byte	ts_speed
 2236 04e1 21       		.uleb128 0x21
 2237 04e2 86020000 		.4byte	.LASF92
 2238 04e6 05       		.byte	0x5
 2239 04e7 14       		.byte	0x14
 2240 04e8 A2000000 		.4byte	0xa2
 2241 04ec 05       		.uleb128 0x5
 2242 04ed 03       		.byte	0x3
 2243 04ee 00000000 		.4byte	ts_display
 2244 04f2 21       		.uleb128 0x21
 2245 04f3 3A020000 		.4byte	.LASF93
 2246 04f7 05       		.byte	0x5
 2247 04f8 16       		.byte	0x16
 2248 04f9 96000000 		.4byte	0x96
 2249 04fd 05       		.uleb128 0x5
 2250 04fe 03       		.byte	0x3
 2251 04ff 00000000 		.4byte	flag_ts_enc
 2252 0503 21       		.uleb128 0x21
 2253 0504 2B020000 		.4byte	.LASF94
 2254 0508 05       		.byte	0x5
 2255 0509 17       		.byte	0x17
 2256 050a 96000000 		.4byte	0x96
 2257 050e 05       		.uleb128 0x5
 2258 050f 03       		.byte	0x3
 2259 0510 00000000 		.4byte	flag_ts_update
 2260 0514 21       		.uleb128 0x21
 2261 0515 F3030000 		.4byte	.LASF95
 2262 0519 05       		.byte	0x5
 2263 051a 18       		.byte	0x18
 2264 051b 96000000 		.4byte	0x96
 2265 051f 05       		.uleb128 0x5
 2266 0520 03       		.byte	0x3
 2267 0521 00000000 		.4byte	flag_ts_speed
 2268 0525 21       		.uleb128 0x21
 2269 0526 B6050000 		.4byte	.LASF96
 2270 052a 05       		.byte	0x5
 2271 052b 19       		.byte	0x19
 2272 052c 96000000 		.4byte	0x96
 2273 0530 05       		.uleb128 0x5
 2274 0531 03       		.byte	0x3
 2275 0532 00000000 		.4byte	flag_ts_display
 2276 0536 21       		.uleb128 0x21
 2277 0537 10040000 		.4byte	.LASF97
 2278 053b 05       		.byte	0x5
 2279 053c 1B       		.byte	0x1b
 2280 053d 96000000 		.4byte	0x96
 2281 0541 05       		.uleb128 0x5
 2282 0542 03       		.byte	0x3
 2283 0543 00000000 		.4byte	flag_rx
 2284 0547 21       		.uleb128 0x21
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 50


 2285 0548 E4010000 		.4byte	.LASF98
 2286 054c 05       		.byte	0x5
 2287 054d 1C       		.byte	0x1c
 2288 054e 96000000 		.4byte	0x96
 2289 0552 05       		.uleb128 0x5
 2290 0553 03       		.byte	0x3
 2291 0554 00000000 		.4byte	flag_packet
 2292 0558 21       		.uleb128 0x21
 2293 0559 9A060000 		.4byte	.LASF99
 2294 055d 05       		.byte	0x5
 2295 055e 1D       		.byte	0x1d
 2296 055f 96000000 		.4byte	0x96
 2297 0563 05       		.uleb128 0x5
 2298 0564 03       		.byte	0x3
 2299 0565 00000000 		.4byte	flag_KB_string
 2300 0569 21       		.uleb128 0x21
 2301 056a 01040000 		.4byte	.LASF100
 2302 056e 05       		.byte	0x5
 2303 056f 1F       		.byte	0x1f
 2304 0570 96000000 		.4byte	0x96
 2305 0574 05       		.uleb128 0x5
 2306 0575 03       		.byte	0x3
 2307 0576 00000000 		.4byte	dataready_flag
 2308 057a 21       		.uleb128 0x21
 2309 057b 5D010000 		.4byte	.LASF101
 2310 057f 05       		.byte	0x5
 2311 0580 21       		.byte	0x21
 2312 0581 96000000 		.4byte	0x96
 2313 0585 05       		.uleb128 0x5
 2314 0586 03       		.byte	0x3
 2315 0587 00000000 		.4byte	flag_rf_transmission_active
 2316 058b 22       		.uleb128 0x22
 2317 058c 84000000 		.4byte	0x84
 2318 0590 9B050000 		.4byte	0x59b
 2319 0594 23       		.uleb128 0x23
 2320 0595 7D000000 		.4byte	0x7d
 2321 0599 3F       		.byte	0x3f
 2322 059a 00       		.byte	0
 2323 059b 21       		.uleb128 0x21
 2324 059c CB050000 		.4byte	.LASF102
 2325 05a0 05       		.byte	0x5
 2326 05a1 24       		.byte	0x24
 2327 05a2 8B050000 		.4byte	0x58b
 2328 05a6 05       		.uleb128 0x5
 2329 05a7 03       		.byte	0x3
 2330 05a8 00000000 		.4byte	displaystring
 2331 05ac 21       		.uleb128 0x21
 2332 05ad 7E050000 		.4byte	.LASF103
 2333 05b1 05       		.byte	0x5
 2334 05b2 25       		.byte	0x25
 2335 05b3 8B050000 		.4byte	0x58b
 2336 05b7 05       		.uleb128 0x5
 2337 05b8 03       		.byte	0x3
 2338 05b9 00000000 		.4byte	line
 2339 05bd 21       		.uleb128 0x21
 2340 05be 4B050000 		.4byte	.LASF104
 2341 05c2 05       		.byte	0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 51


 2342 05c3 25       		.byte	0x25
 2343 05c4 8B050000 		.4byte	0x58b
 2344 05c8 05       		.uleb128 0x5
 2345 05c9 03       		.byte	0x3
 2346 05ca 00000000 		.4byte	entry
 2347 05ce 22       		.uleb128 0x22
 2348 05cf 96000000 		.4byte	0x96
 2349 05d3 DE050000 		.4byte	0x5de
 2350 05d7 23       		.uleb128 0x23
 2351 05d8 7D000000 		.4byte	0x7d
 2352 05dc 3F       		.byte	0x3f
 2353 05dd 00       		.byte	0
 2354 05de 21       		.uleb128 0x21
 2355 05df AB010000 		.4byte	.LASF105
 2356 05e3 05       		.byte	0x5
 2357 05e4 26       		.byte	0x26
 2358 05e5 CE050000 		.4byte	0x5ce
 2359 05e9 05       		.uleb128 0x5
 2360 05ea 03       		.byte	0x3
 2361 05eb 00000000 		.4byte	usbBuffer
 2362 05ef 21       		.uleb128 0x21
 2363 05f0 65000000 		.4byte	.LASF106
 2364 05f4 05       		.byte	0x5
 2365 05f5 3C       		.byte	0x3c
 2366 05f6 E0000000 		.4byte	0xe0
 2367 05fa 05       		.uleb128 0x5
 2368 05fb 03       		.byte	0x3
 2369 05fc 00000000 		.4byte	system_state
 2370 0600 22       		.uleb128 0x22
 2371 0601 68000000 		.4byte	0x68
 2372 0605 16060000 		.4byte	0x616
 2373 0609 23       		.uleb128 0x23
 2374 060a 7D000000 		.4byte	0x7d
 2375 060e 0E       		.byte	0xe
 2376 060f 23       		.uleb128 0x23
 2377 0610 7D000000 		.4byte	0x7d
 2378 0614 12       		.byte	0x12
 2379 0615 00       		.byte	0
 2380 0616 24       		.uleb128 0x24
 2381 0617 6D617000 		.ascii	"map\000"
 2382 061b 08       		.byte	0x8
 2383 061c 04       		.byte	0x4
 2384 061d 00060000 		.4byte	0x600
 2385 0621 22       		.uleb128 0x22
 2386 0622 68000000 		.4byte	0x68
 2387 0626 37060000 		.4byte	0x637
 2388 062a 23       		.uleb128 0x23
 2389 062b 7D000000 		.4byte	0x7d
 2390 062f 04       		.byte	0x4
 2391 0630 23       		.uleb128 0x23
 2392 0631 7D000000 		.4byte	0x7d
 2393 0635 01       		.byte	0x1
 2394 0636 00       		.byte	0
 2395 0637 25       		.uleb128 0x25
 2396 0638 64030000 		.4byte	.LASF107
 2397 063c 08       		.byte	0x8
 2398 063d 05       		.byte	0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 52


 2399 063e 21060000 		.4byte	0x621
 2400 0642 21       		.uleb128 0x21
 2401 0643 C1040000 		.4byte	.LASF108
 2402 0647 01       		.byte	0x1
 2403 0648 19       		.byte	0x19
 2404 0649 58020000 		.4byte	0x258
 2405 064d 05       		.uleb128 0x5
 2406 064e 03       		.byte	0x3
 2407 064f 00000000 		.4byte	currentDirection
 2408 0653 21       		.uleb128 0x21
 2409 0654 D5030000 		.4byte	.LASF109
 2410 0658 01       		.byte	0x1
 2411 0659 19       		.byte	0x19
 2412 065a 58020000 		.4byte	0x258
 2413 065e 05       		.uleb128 0x5
 2414 065f 03       		.byte	0x3
 2415 0660 00000000 		.4byte	previousDirection
 2416 0664 21       		.uleb128 0x21
 2417 0665 91020000 		.4byte	.LASF110
 2418 0669 01       		.byte	0x1
 2419 066a 1B       		.byte	0x1b
 2420 066b 30020000 		.4byte	0x230
 2421 066f 05       		.uleb128 0x5
 2422 0670 03       		.byte	0x3
 2423 0671 00000000 		.4byte	currentOrientation
 2424 0675 21       		.uleb128 0x21
 2425 0676 2D030000 		.4byte	.LASF111
 2426 067a 01       		.byte	0x1
 2427 067b 1B       		.byte	0x1b
 2428 067c 30020000 		.4byte	0x230
 2429 0680 05       		.uleb128 0x5
 2430 0681 03       		.byte	0x3
 2431 0682 00000000 		.4byte	previousOrientation
 2432 0686 21       		.uleb128 0x21
 2433 0687 30060000 		.4byte	.LASF112
 2434 068b 01       		.byte	0x1
 2435 068c 1C       		.byte	0x1c
 2436 068d 25020000 		.4byte	0x225
 2437 0691 05       		.uleb128 0x5
 2438 0692 03       		.byte	0x3
 2439 0693 00000000 		.4byte	currentInstruction
 2440 0697 21       		.uleb128 0x21
 2441 0698 32010000 		.4byte	.LASF83
 2442 069c 01       		.byte	0x1
 2443 069d 1D       		.byte	0x1d
 2444 069e 68000000 		.4byte	0x68
 2445 06a2 05       		.uleb128 0x5
 2446 06a3 03       		.byte	0x3
 2447 06a4 00000000 		.4byte	numSteps
 2448 06a8 21       		.uleb128 0x21
 2449 06a9 B2020000 		.4byte	.LASF84
 2450 06ad 01       		.byte	0x1
 2451 06ae 1F       		.byte	0x1f
 2452 06af 75040000 		.4byte	0x475
 2453 06b3 05       		.uleb128 0x5
 2454 06b4 03       		.byte	0x3
 2455 06b5 00000000 		.4byte	instructionList
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 53


 2456 06b9 21       		.uleb128 0x21
 2457 06ba C2020000 		.4byte	.LASF85
 2458 06be 01       		.byte	0x1
 2459 06bf 20       		.byte	0x20
 2460 06c0 AE000000 		.4byte	0xae
 2461 06c4 05       		.uleb128 0x5
 2462 06c5 03       		.byte	0x3
 2463 06c6 00000000 		.4byte	instructionIndex
 2464 06ca 20       		.uleb128 0x20
 2465 06cb 733300   		.ascii	"s3\000"
 2466 06ce 01       		.byte	0x1
 2467 06cf 24       		.byte	0x24
 2468 06d0 96000000 		.4byte	0x96
 2469 06d4 05       		.uleb128 0x5
 2470 06d5 03       		.byte	0x3
 2471 06d6 00000000 		.4byte	s3
 2472 06da 20       		.uleb128 0x20
 2473 06db 733400   		.ascii	"s4\000"
 2474 06de 01       		.byte	0x1
 2475 06df 24       		.byte	0x24
 2476 06e0 96000000 		.4byte	0x96
 2477 06e4 05       		.uleb128 0x5
 2478 06e5 03       		.byte	0x3
 2479 06e6 00000000 		.4byte	s4
 2480 06ea 20       		.uleb128 0x20
 2481 06eb 733500   		.ascii	"s5\000"
 2482 06ee 01       		.byte	0x1
 2483 06ef 24       		.byte	0x24
 2484 06f0 96000000 		.4byte	0x96
 2485 06f4 05       		.uleb128 0x5
 2486 06f5 03       		.byte	0x3
 2487 06f6 00000000 		.4byte	s5
 2488 06fa 20       		.uleb128 0x20
 2489 06fb 733600   		.ascii	"s6\000"
 2490 06fe 01       		.byte	0x1
 2491 06ff 24       		.byte	0x24
 2492 0700 96000000 		.4byte	0x96
 2493 0704 05       		.uleb128 0x5
 2494 0705 03       		.byte	0x3
 2495 0706 00000000 		.4byte	s6
 2496 070a 21       		.uleb128 0x21
 2497 070b 6D040000 		.4byte	.LASF113
 2498 070f 01       		.byte	0x1
 2499 0710 29       		.byte	0x29
 2500 0711 AE000000 		.4byte	0xae
 2501 0715 05       		.uleb128 0x5
 2502 0716 03       		.byte	0x3
 2503 0717 00000000 		.4byte	totalMilliseconds
 2504 071b 21       		.uleb128 0x21
 2505 071c 1C010000 		.4byte	.LASF114
 2506 0720 01       		.byte	0x1
 2507 0721 2A       		.byte	0x2a
 2508 0722 D2000000 		.4byte	0xd2
 2509 0726 05       		.uleb128 0x5
 2510 0727 03       		.byte	0x3
 2511 0728 00000000 		.4byte	totalDistance
 2512 072c 22       		.uleb128 0x22
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 54


 2513 072d 84000000 		.4byte	0x84
 2514 0731 3C070000 		.4byte	0x73c
 2515 0735 23       		.uleb128 0x23
 2516 0736 7D000000 		.4byte	0x7d
 2517 073a 44       		.byte	0x44
 2518 073b 00       		.byte	0
 2519 073c 21       		.uleb128 0x21
 2520 073d 41000000 		.4byte	.LASF115
 2521 0741 01       		.byte	0x1
 2522 0742 2C       		.byte	0x2c
 2523 0743 2C070000 		.4byte	0x72c
 2524 0747 05       		.uleb128 0x5
 2525 0748 03       		.byte	0x3
 2526 0749 00000000 		.4byte	buffer
 2527 074d 21       		.uleb128 0x21
 2528 074e 97010000 		.4byte	.LASF116
 2529 0752 01       		.byte	0x1
 2530 0753 2D       		.byte	0x2d
 2531 0754 68000000 		.4byte	0x68
 2532 0758 05       		.uleb128 0x5
 2533 0759 03       		.byte	0x3
 2534 075a 00000000 		.4byte	quadDec2Count
 2535 075e 21       		.uleb128 0x21
 2536 075f 91060000 		.4byte	.LASF117
 2537 0763 01       		.byte	0x1
 2538 0764 2E       		.byte	0x2e
 2539 0765 68000000 		.4byte	0x68
 2540 0769 05       		.uleb128 0x5
 2541 076a 03       		.byte	0x3
 2542 076b 00000000 		.4byte	timerInt
 2543 076f 21       		.uleb128 0x21
 2544 0770 0E020000 		.4byte	.LASF118
 2545 0774 01       		.byte	0x1
 2546 0775 2F       		.byte	0x2f
 2547 0776 68000000 		.4byte	0x68
 2548 077a 05       		.uleb128 0x5
 2549 077b 03       		.byte	0x3
 2550 077c 00000000 		.4byte	keepLedOn
 2551 0780 21       		.uleb128 0x21
 2552 0781 2D050000 		.4byte	.LASF119
 2553 0785 01       		.byte	0x1
 2554 0786 30       		.byte	0x30
 2555 0787 AE000000 		.4byte	0xae
 2556 078b 05       		.uleb128 0x5
 2557 078c 03       		.byte	0x3
 2558 078d 00000000 		.4byte	stopBuffer
 2559 0791 21       		.uleb128 0x21
 2560 0792 DF020000 		.4byte	.LASF120
 2561 0796 01       		.byte	0x1
 2562 0797 B1       		.byte	0xb1
 2563 0798 D2000000 		.4byte	0xd2
 2564 079c 05       		.uleb128 0x5
 2565 079d 03       		.byte	0x3
 2566 079e 00000000 		.4byte	xBlocksize
 2567 07a2 21       		.uleb128 0x21
 2568 07a3 18040000 		.4byte	.LASF121
 2569 07a7 01       		.byte	0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 55


 2570 07a8 B2       		.byte	0xb2
 2571 07a9 D2000000 		.4byte	0xd2
 2572 07ad 05       		.uleb128 0x5
 2573 07ae 03       		.byte	0x3
 2574 07af 00000000 		.4byte	yBlocksize
 2575 07b3 21       		.uleb128 0x21
 2576 07b4 FB050000 		.4byte	.LASF122
 2577 07b8 01       		.byte	0x1
 2578 07b9 B3       		.byte	0xb3
 2579 07ba 96000000 		.4byte	0x96
 2580 07be 05       		.uleb128 0x5
 2581 07bf 03       		.byte	0x3
 2582 07c0 00000000 		.4byte	currentRow
 2583 07c4 21       		.uleb128 0x21
 2584 07c5 7E060000 		.4byte	.LASF123
 2585 07c9 01       		.byte	0x1
 2586 07ca B4       		.byte	0xb4
 2587 07cb 96000000 		.4byte	0x96
 2588 07cf 05       		.uleb128 0x5
 2589 07d0 03       		.byte	0x3
 2590 07d1 00000000 		.4byte	currentCol
 2591 07d5 26       		.uleb128 0x26
 2592 07d6 6D050000 		.4byte	.LASF124
 2593 07da 01       		.byte	0x1
 2594 07db 0101     		.2byte	0x101
 2595 07dd 96000000 		.4byte	0x96
 2596 07e1 05       		.uleb128 0x5
 2597 07e2 03       		.byte	0x3
 2598 07e3 00000000 		.4byte	stoppedAfterTurn
 2599 07e7 26       		.uleb128 0x26
 2600 07e8 55020000 		.4byte	.LASF125
 2601 07ec 01       		.byte	0x1
 2602 07ed 0201     		.2byte	0x102
 2603 07ef 96000000 		.4byte	0x96
 2604 07f3 05       		.uleb128 0x5
 2605 07f4 03       		.byte	0x3
 2606 07f5 00000000 		.4byte	ignoreSensor
 2607 07f9 00       		.byte	0
 2608              		.section	.debug_abbrev,"",%progbits
 2609              	.Ldebug_abbrev0:
 2610 0000 01       		.uleb128 0x1
 2611 0001 11       		.uleb128 0x11
 2612 0002 01       		.byte	0x1
 2613 0003 25       		.uleb128 0x25
 2614 0004 0E       		.uleb128 0xe
 2615 0005 13       		.uleb128 0x13
 2616 0006 0B       		.uleb128 0xb
 2617 0007 03       		.uleb128 0x3
 2618 0008 0E       		.uleb128 0xe
 2619 0009 1B       		.uleb128 0x1b
 2620 000a 0E       		.uleb128 0xe
 2621 000b 55       		.uleb128 0x55
 2622 000c 17       		.uleb128 0x17
 2623 000d 11       		.uleb128 0x11
 2624 000e 01       		.uleb128 0x1
 2625 000f 10       		.uleb128 0x10
 2626 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 56


 2627 0011 00       		.byte	0
 2628 0012 00       		.byte	0
 2629 0013 02       		.uleb128 0x2
 2630 0014 24       		.uleb128 0x24
 2631 0015 00       		.byte	0
 2632 0016 0B       		.uleb128 0xb
 2633 0017 0B       		.uleb128 0xb
 2634 0018 3E       		.uleb128 0x3e
 2635 0019 0B       		.uleb128 0xb
 2636 001a 03       		.uleb128 0x3
 2637 001b 0E       		.uleb128 0xe
 2638 001c 00       		.byte	0
 2639 001d 00       		.byte	0
 2640 001e 03       		.uleb128 0x3
 2641 001f 16       		.uleb128 0x16
 2642 0020 00       		.byte	0
 2643 0021 03       		.uleb128 0x3
 2644 0022 0E       		.uleb128 0xe
 2645 0023 3A       		.uleb128 0x3a
 2646 0024 0B       		.uleb128 0xb
 2647 0025 3B       		.uleb128 0x3b
 2648 0026 0B       		.uleb128 0xb
 2649 0027 49       		.uleb128 0x49
 2650 0028 13       		.uleb128 0x13
 2651 0029 00       		.byte	0
 2652 002a 00       		.byte	0
 2653 002b 04       		.uleb128 0x4
 2654 002c 24       		.uleb128 0x24
 2655 002d 00       		.byte	0
 2656 002e 0B       		.uleb128 0xb
 2657 002f 0B       		.uleb128 0xb
 2658 0030 3E       		.uleb128 0x3e
 2659 0031 0B       		.uleb128 0xb
 2660 0032 03       		.uleb128 0x3
 2661 0033 08       		.uleb128 0x8
 2662 0034 00       		.byte	0
 2663 0035 00       		.byte	0
 2664 0036 05       		.uleb128 0x5
 2665 0037 16       		.uleb128 0x16
 2666 0038 00       		.byte	0
 2667 0039 03       		.uleb128 0x3
 2668 003a 0E       		.uleb128 0xe
 2669 003b 3A       		.uleb128 0x3a
 2670 003c 0B       		.uleb128 0xb
 2671 003d 3B       		.uleb128 0x3b
 2672 003e 05       		.uleb128 0x5
 2673 003f 49       		.uleb128 0x49
 2674 0040 13       		.uleb128 0x13
 2675 0041 00       		.byte	0
 2676 0042 00       		.byte	0
 2677 0043 06       		.uleb128 0x6
 2678 0044 13       		.uleb128 0x13
 2679 0045 01       		.byte	0x1
 2680 0046 03       		.uleb128 0x3
 2681 0047 0E       		.uleb128 0xe
 2682 0048 0B       		.uleb128 0xb
 2683 0049 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 57


 2684 004a 3A       		.uleb128 0x3a
 2685 004b 0B       		.uleb128 0xb
 2686 004c 3B       		.uleb128 0x3b
 2687 004d 0B       		.uleb128 0xb
 2688 004e 01       		.uleb128 0x1
 2689 004f 13       		.uleb128 0x13
 2690 0050 00       		.byte	0
 2691 0051 00       		.byte	0
 2692 0052 07       		.uleb128 0x7
 2693 0053 0D       		.uleb128 0xd
 2694 0054 00       		.byte	0
 2695 0055 03       		.uleb128 0x3
 2696 0056 0E       		.uleb128 0xe
 2697 0057 3A       		.uleb128 0x3a
 2698 0058 0B       		.uleb128 0xb
 2699 0059 3B       		.uleb128 0x3b
 2700 005a 0B       		.uleb128 0xb
 2701 005b 49       		.uleb128 0x49
 2702 005c 13       		.uleb128 0x13
 2703 005d 38       		.uleb128 0x38
 2704 005e 0B       		.uleb128 0xb
 2705 005f 00       		.byte	0
 2706 0060 00       		.byte	0
 2707 0061 08       		.uleb128 0x8
 2708 0062 04       		.uleb128 0x4
 2709 0063 01       		.byte	0x1
 2710 0064 03       		.uleb128 0x3
 2711 0065 0E       		.uleb128 0xe
 2712 0066 0B       		.uleb128 0xb
 2713 0067 0B       		.uleb128 0xb
 2714 0068 49       		.uleb128 0x49
 2715 0069 13       		.uleb128 0x13
 2716 006a 3A       		.uleb128 0x3a
 2717 006b 0B       		.uleb128 0xb
 2718 006c 3B       		.uleb128 0x3b
 2719 006d 0B       		.uleb128 0xb
 2720 006e 01       		.uleb128 0x1
 2721 006f 13       		.uleb128 0x13
 2722 0070 00       		.byte	0
 2723 0071 00       		.byte	0
 2724 0072 09       		.uleb128 0x9
 2725 0073 28       		.uleb128 0x28
 2726 0074 00       		.byte	0
 2727 0075 03       		.uleb128 0x3
 2728 0076 0E       		.uleb128 0xe
 2729 0077 1C       		.uleb128 0x1c
 2730 0078 0B       		.uleb128 0xb
 2731 0079 00       		.byte	0
 2732 007a 00       		.byte	0
 2733 007b 0A       		.uleb128 0xa
 2734 007c 28       		.uleb128 0x28
 2735 007d 00       		.byte	0
 2736 007e 03       		.uleb128 0x3
 2737 007f 08       		.uleb128 0x8
 2738 0080 1C       		.uleb128 0x1c
 2739 0081 0B       		.uleb128 0xb
 2740 0082 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 58


 2741 0083 00       		.byte	0
 2742 0084 0B       		.uleb128 0xb
 2743 0085 2E       		.uleb128 0x2e
 2744 0086 01       		.byte	0x1
 2745 0087 3F       		.uleb128 0x3f
 2746 0088 19       		.uleb128 0x19
 2747 0089 03       		.uleb128 0x3
 2748 008a 0E       		.uleb128 0xe
 2749 008b 3A       		.uleb128 0x3a
 2750 008c 0B       		.uleb128 0xb
 2751 008d 3B       		.uleb128 0x3b
 2752 008e 0B       		.uleb128 0xb
 2753 008f 27       		.uleb128 0x27
 2754 0090 19       		.uleb128 0x19
 2755 0091 11       		.uleb128 0x11
 2756 0092 01       		.uleb128 0x1
 2757 0093 12       		.uleb128 0x12
 2758 0094 06       		.uleb128 0x6
 2759 0095 40       		.uleb128 0x40
 2760 0096 18       		.uleb128 0x18
 2761 0097 9642     		.uleb128 0x2116
 2762 0099 19       		.uleb128 0x19
 2763 009a 01       		.uleb128 0x1
 2764 009b 13       		.uleb128 0x13
 2765 009c 00       		.byte	0
 2766 009d 00       		.byte	0
 2767 009e 0C       		.uleb128 0xc
 2768 009f 0B       		.uleb128 0xb
 2769 00a0 01       		.byte	0x1
 2770 00a1 11       		.uleb128 0x11
 2771 00a2 01       		.uleb128 0x1
 2772 00a3 12       		.uleb128 0x12
 2773 00a4 06       		.uleb128 0x6
 2774 00a5 00       		.byte	0
 2775 00a6 00       		.byte	0
 2776 00a7 0D       		.uleb128 0xd
 2777 00a8 34       		.uleb128 0x34
 2778 00a9 00       		.byte	0
 2779 00aa 03       		.uleb128 0x3
 2780 00ab 0E       		.uleb128 0xe
 2781 00ac 3A       		.uleb128 0x3a
 2782 00ad 0B       		.uleb128 0xb
 2783 00ae 3B       		.uleb128 0x3b
 2784 00af 0B       		.uleb128 0xb
 2785 00b0 49       		.uleb128 0x49
 2786 00b1 13       		.uleb128 0x13
 2787 00b2 02       		.uleb128 0x2
 2788 00b3 18       		.uleb128 0x18
 2789 00b4 00       		.byte	0
 2790 00b5 00       		.byte	0
 2791 00b6 0E       		.uleb128 0xe
 2792 00b7 2E       		.uleb128 0x2e
 2793 00b8 00       		.byte	0
 2794 00b9 3F       		.uleb128 0x3f
 2795 00ba 19       		.uleb128 0x19
 2796 00bb 03       		.uleb128 0x3
 2797 00bc 0E       		.uleb128 0xe
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 59


 2798 00bd 3A       		.uleb128 0x3a
 2799 00be 0B       		.uleb128 0xb
 2800 00bf 3B       		.uleb128 0x3b
 2801 00c0 0B       		.uleb128 0xb
 2802 00c1 27       		.uleb128 0x27
 2803 00c2 19       		.uleb128 0x19
 2804 00c3 11       		.uleb128 0x11
 2805 00c4 01       		.uleb128 0x1
 2806 00c5 12       		.uleb128 0x12
 2807 00c6 06       		.uleb128 0x6
 2808 00c7 40       		.uleb128 0x40
 2809 00c8 18       		.uleb128 0x18
 2810 00c9 9742     		.uleb128 0x2117
 2811 00cb 19       		.uleb128 0x19
 2812 00cc 00       		.byte	0
 2813 00cd 00       		.byte	0
 2814 00ce 0F       		.uleb128 0xf
 2815 00cf 2E       		.uleb128 0x2e
 2816 00d0 00       		.byte	0
 2817 00d1 3F       		.uleb128 0x3f
 2818 00d2 19       		.uleb128 0x19
 2819 00d3 03       		.uleb128 0x3
 2820 00d4 0E       		.uleb128 0xe
 2821 00d5 3A       		.uleb128 0x3a
 2822 00d6 0B       		.uleb128 0xb
 2823 00d7 3B       		.uleb128 0x3b
 2824 00d8 0B       		.uleb128 0xb
 2825 00d9 27       		.uleb128 0x27
 2826 00da 19       		.uleb128 0x19
 2827 00db 11       		.uleb128 0x11
 2828 00dc 01       		.uleb128 0x1
 2829 00dd 12       		.uleb128 0x12
 2830 00de 06       		.uleb128 0x6
 2831 00df 40       		.uleb128 0x40
 2832 00e0 18       		.uleb128 0x18
 2833 00e1 9642     		.uleb128 0x2116
 2834 00e3 19       		.uleb128 0x19
 2835 00e4 00       		.byte	0
 2836 00e5 00       		.byte	0
 2837 00e6 10       		.uleb128 0x10
 2838 00e7 2E       		.uleb128 0x2e
 2839 00e8 00       		.byte	0
 2840 00e9 3F       		.uleb128 0x3f
 2841 00ea 19       		.uleb128 0x19
 2842 00eb 03       		.uleb128 0x3
 2843 00ec 0E       		.uleb128 0xe
 2844 00ed 3A       		.uleb128 0x3a
 2845 00ee 0B       		.uleb128 0xb
 2846 00ef 3B       		.uleb128 0x3b
 2847 00f0 0B       		.uleb128 0xb
 2848 00f1 49       		.uleb128 0x49
 2849 00f2 13       		.uleb128 0x13
 2850 00f3 11       		.uleb128 0x11
 2851 00f4 01       		.uleb128 0x1
 2852 00f5 12       		.uleb128 0x12
 2853 00f6 06       		.uleb128 0x6
 2854 00f7 40       		.uleb128 0x40
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 60


 2855 00f8 18       		.uleb128 0x18
 2856 00f9 9642     		.uleb128 0x2116
 2857 00fb 19       		.uleb128 0x19
 2858 00fc 00       		.byte	0
 2859 00fd 00       		.byte	0
 2860 00fe 11       		.uleb128 0x11
 2861 00ff 2E       		.uleb128 0x2e
 2862 0100 01       		.byte	0x1
 2863 0101 3F       		.uleb128 0x3f
 2864 0102 19       		.uleb128 0x19
 2865 0103 03       		.uleb128 0x3
 2866 0104 0E       		.uleb128 0xe
 2867 0105 3A       		.uleb128 0x3a
 2868 0106 0B       		.uleb128 0xb
 2869 0107 3B       		.uleb128 0x3b
 2870 0108 0B       		.uleb128 0xb
 2871 0109 27       		.uleb128 0x27
 2872 010a 19       		.uleb128 0x19
 2873 010b 49       		.uleb128 0x49
 2874 010c 13       		.uleb128 0x13
 2875 010d 11       		.uleb128 0x11
 2876 010e 01       		.uleb128 0x1
 2877 010f 12       		.uleb128 0x12
 2878 0110 06       		.uleb128 0x6
 2879 0111 40       		.uleb128 0x40
 2880 0112 18       		.uleb128 0x18
 2881 0113 9642     		.uleb128 0x2116
 2882 0115 19       		.uleb128 0x19
 2883 0116 01       		.uleb128 0x1
 2884 0117 13       		.uleb128 0x13
 2885 0118 00       		.byte	0
 2886 0119 00       		.byte	0
 2887 011a 12       		.uleb128 0x12
 2888 011b 05       		.uleb128 0x5
 2889 011c 00       		.byte	0
 2890 011d 03       		.uleb128 0x3
 2891 011e 0E       		.uleb128 0xe
 2892 011f 3A       		.uleb128 0x3a
 2893 0120 0B       		.uleb128 0xb
 2894 0121 3B       		.uleb128 0x3b
 2895 0122 0B       		.uleb128 0xb
 2896 0123 49       		.uleb128 0x49
 2897 0124 13       		.uleb128 0x13
 2898 0125 02       		.uleb128 0x2
 2899 0126 18       		.uleb128 0x18
 2900 0127 00       		.byte	0
 2901 0128 00       		.byte	0
 2902 0129 13       		.uleb128 0x13
 2903 012a 34       		.uleb128 0x34
 2904 012b 00       		.byte	0
 2905 012c 03       		.uleb128 0x3
 2906 012d 08       		.uleb128 0x8
 2907 012e 3A       		.uleb128 0x3a
 2908 012f 0B       		.uleb128 0xb
 2909 0130 3B       		.uleb128 0x3b
 2910 0131 0B       		.uleb128 0xb
 2911 0132 49       		.uleb128 0x49
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 61


 2912 0133 13       		.uleb128 0x13
 2913 0134 02       		.uleb128 0x2
 2914 0135 18       		.uleb128 0x18
 2915 0136 00       		.byte	0
 2916 0137 00       		.byte	0
 2917 0138 14       		.uleb128 0x14
 2918 0139 2E       		.uleb128 0x2e
 2919 013a 00       		.byte	0
 2920 013b 3F       		.uleb128 0x3f
 2921 013c 19       		.uleb128 0x19
 2922 013d 03       		.uleb128 0x3
 2923 013e 0E       		.uleb128 0xe
 2924 013f 3A       		.uleb128 0x3a
 2925 0140 0B       		.uleb128 0xb
 2926 0141 3B       		.uleb128 0x3b
 2927 0142 0B       		.uleb128 0xb
 2928 0143 11       		.uleb128 0x11
 2929 0144 01       		.uleb128 0x1
 2930 0145 12       		.uleb128 0x12
 2931 0146 06       		.uleb128 0x6
 2932 0147 40       		.uleb128 0x40
 2933 0148 18       		.uleb128 0x18
 2934 0149 9742     		.uleb128 0x2117
 2935 014b 19       		.uleb128 0x19
 2936 014c 00       		.byte	0
 2937 014d 00       		.byte	0
 2938 014e 15       		.uleb128 0x15
 2939 014f 2E       		.uleb128 0x2e
 2940 0150 01       		.byte	0x1
 2941 0151 3F       		.uleb128 0x3f
 2942 0152 19       		.uleb128 0x19
 2943 0153 03       		.uleb128 0x3
 2944 0154 0E       		.uleb128 0xe
 2945 0155 3A       		.uleb128 0x3a
 2946 0156 0B       		.uleb128 0xb
 2947 0157 3B       		.uleb128 0x3b
 2948 0158 05       		.uleb128 0x5
 2949 0159 49       		.uleb128 0x49
 2950 015a 13       		.uleb128 0x13
 2951 015b 11       		.uleb128 0x11
 2952 015c 01       		.uleb128 0x1
 2953 015d 12       		.uleb128 0x12
 2954 015e 06       		.uleb128 0x6
 2955 015f 40       		.uleb128 0x40
 2956 0160 18       		.uleb128 0x18
 2957 0161 9642     		.uleb128 0x2116
 2958 0163 19       		.uleb128 0x19
 2959 0164 01       		.uleb128 0x1
 2960 0165 13       		.uleb128 0x13
 2961 0166 00       		.byte	0
 2962 0167 00       		.byte	0
 2963 0168 16       		.uleb128 0x16
 2964 0169 34       		.uleb128 0x34
 2965 016a 00       		.byte	0
 2966 016b 03       		.uleb128 0x3
 2967 016c 0E       		.uleb128 0xe
 2968 016d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 62


 2969 016e 0B       		.uleb128 0xb
 2970 016f 3B       		.uleb128 0x3b
 2971 0170 05       		.uleb128 0x5
 2972 0171 49       		.uleb128 0x49
 2973 0172 13       		.uleb128 0x13
 2974 0173 02       		.uleb128 0x2
 2975 0174 18       		.uleb128 0x18
 2976 0175 00       		.byte	0
 2977 0176 00       		.byte	0
 2978 0177 17       		.uleb128 0x17
 2979 0178 2E       		.uleb128 0x2e
 2980 0179 01       		.byte	0x1
 2981 017a 3F       		.uleb128 0x3f
 2982 017b 19       		.uleb128 0x19
 2983 017c 03       		.uleb128 0x3
 2984 017d 0E       		.uleb128 0xe
 2985 017e 3A       		.uleb128 0x3a
 2986 017f 0B       		.uleb128 0xb
 2987 0180 3B       		.uleb128 0x3b
 2988 0181 05       		.uleb128 0x5
 2989 0182 49       		.uleb128 0x49
 2990 0183 13       		.uleb128 0x13
 2991 0184 11       		.uleb128 0x11
 2992 0185 01       		.uleb128 0x1
 2993 0186 12       		.uleb128 0x12
 2994 0187 06       		.uleb128 0x6
 2995 0188 40       		.uleb128 0x40
 2996 0189 18       		.uleb128 0x18
 2997 018a 9742     		.uleb128 0x2117
 2998 018c 19       		.uleb128 0x19
 2999 018d 01       		.uleb128 0x1
 3000 018e 13       		.uleb128 0x13
 3001 018f 00       		.byte	0
 3002 0190 00       		.byte	0
 3003 0191 18       		.uleb128 0x18
 3004 0192 2E       		.uleb128 0x2e
 3005 0193 00       		.byte	0
 3006 0194 3F       		.uleb128 0x3f
 3007 0195 19       		.uleb128 0x19
 3008 0196 03       		.uleb128 0x3
 3009 0197 0E       		.uleb128 0xe
 3010 0198 3A       		.uleb128 0x3a
 3011 0199 0B       		.uleb128 0xb
 3012 019a 3B       		.uleb128 0x3b
 3013 019b 05       		.uleb128 0x5
 3014 019c 11       		.uleb128 0x11
 3015 019d 01       		.uleb128 0x1
 3016 019e 12       		.uleb128 0x12
 3017 019f 06       		.uleb128 0x6
 3018 01a0 40       		.uleb128 0x40
 3019 01a1 18       		.uleb128 0x18
 3020 01a2 9742     		.uleb128 0x2117
 3021 01a4 19       		.uleb128 0x19
 3022 01a5 00       		.byte	0
 3023 01a6 00       		.byte	0
 3024 01a7 19       		.uleb128 0x19
 3025 01a8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 63


 3026 01a9 01       		.byte	0x1
 3027 01aa 3F       		.uleb128 0x3f
 3028 01ab 19       		.uleb128 0x19
 3029 01ac 03       		.uleb128 0x3
 3030 01ad 0E       		.uleb128 0xe
 3031 01ae 3A       		.uleb128 0x3a
 3032 01af 0B       		.uleb128 0xb
 3033 01b0 3B       		.uleb128 0x3b
 3034 01b1 05       		.uleb128 0x5
 3035 01b2 27       		.uleb128 0x27
 3036 01b3 19       		.uleb128 0x19
 3037 01b4 49       		.uleb128 0x49
 3038 01b5 13       		.uleb128 0x13
 3039 01b6 11       		.uleb128 0x11
 3040 01b7 01       		.uleb128 0x1
 3041 01b8 12       		.uleb128 0x12
 3042 01b9 06       		.uleb128 0x6
 3043 01ba 40       		.uleb128 0x40
 3044 01bb 18       		.uleb128 0x18
 3045 01bc 9742     		.uleb128 0x2117
 3046 01be 19       		.uleb128 0x19
 3047 01bf 01       		.uleb128 0x1
 3048 01c0 13       		.uleb128 0x13
 3049 01c1 00       		.byte	0
 3050 01c2 00       		.byte	0
 3051 01c3 1A       		.uleb128 0x1a
 3052 01c4 05       		.uleb128 0x5
 3053 01c5 00       		.byte	0
 3054 01c6 03       		.uleb128 0x3
 3055 01c7 0E       		.uleb128 0xe
 3056 01c8 3A       		.uleb128 0x3a
 3057 01c9 0B       		.uleb128 0xb
 3058 01ca 3B       		.uleb128 0x3b
 3059 01cb 05       		.uleb128 0x5
 3060 01cc 49       		.uleb128 0x49
 3061 01cd 13       		.uleb128 0x13
 3062 01ce 02       		.uleb128 0x2
 3063 01cf 18       		.uleb128 0x18
 3064 01d0 00       		.byte	0
 3065 01d1 00       		.byte	0
 3066 01d2 1B       		.uleb128 0x1b
 3067 01d3 34       		.uleb128 0x34
 3068 01d4 00       		.byte	0
 3069 01d5 03       		.uleb128 0x3
 3070 01d6 08       		.uleb128 0x8
 3071 01d7 3A       		.uleb128 0x3a
 3072 01d8 0B       		.uleb128 0xb
 3073 01d9 3B       		.uleb128 0x3b
 3074 01da 05       		.uleb128 0x5
 3075 01db 49       		.uleb128 0x49
 3076 01dc 13       		.uleb128 0x13
 3077 01dd 02       		.uleb128 0x2
 3078 01de 18       		.uleb128 0x18
 3079 01df 00       		.byte	0
 3080 01e0 00       		.byte	0
 3081 01e1 1C       		.uleb128 0x1c
 3082 01e2 0F       		.uleb128 0xf
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 64


 3083 01e3 00       		.byte	0
 3084 01e4 0B       		.uleb128 0xb
 3085 01e5 0B       		.uleb128 0xb
 3086 01e6 49       		.uleb128 0x49
 3087 01e7 13       		.uleb128 0x13
 3088 01e8 00       		.byte	0
 3089 01e9 00       		.byte	0
 3090 01ea 1D       		.uleb128 0x1d
 3091 01eb 2E       		.uleb128 0x2e
 3092 01ec 00       		.byte	0
 3093 01ed 3F       		.uleb128 0x3f
 3094 01ee 19       		.uleb128 0x19
 3095 01ef 03       		.uleb128 0x3
 3096 01f0 0E       		.uleb128 0xe
 3097 01f1 3A       		.uleb128 0x3a
 3098 01f2 0B       		.uleb128 0xb
 3099 01f3 3B       		.uleb128 0x3b
 3100 01f4 05       		.uleb128 0x5
 3101 01f5 11       		.uleb128 0x11
 3102 01f6 01       		.uleb128 0x1
 3103 01f7 12       		.uleb128 0x12
 3104 01f8 06       		.uleb128 0x6
 3105 01f9 40       		.uleb128 0x40
 3106 01fa 18       		.uleb128 0x18
 3107 01fb 9642     		.uleb128 0x2116
 3108 01fd 19       		.uleb128 0x19
 3109 01fe 00       		.byte	0
 3110 01ff 00       		.byte	0
 3111 0200 1E       		.uleb128 0x1e
 3112 0201 34       		.uleb128 0x34
 3113 0202 00       		.byte	0
 3114 0203 03       		.uleb128 0x3
 3115 0204 0E       		.uleb128 0xe
 3116 0205 3A       		.uleb128 0x3a
 3117 0206 0B       		.uleb128 0xb
 3118 0207 3B       		.uleb128 0x3b
 3119 0208 05       		.uleb128 0x5
 3120 0209 49       		.uleb128 0x49
 3121 020a 13       		.uleb128 0x13
 3122 020b 3F       		.uleb128 0x3f
 3123 020c 19       		.uleb128 0x19
 3124 020d 3C       		.uleb128 0x3c
 3125 020e 19       		.uleb128 0x19
 3126 020f 00       		.byte	0
 3127 0210 00       		.byte	0
 3128 0211 1F       		.uleb128 0x1f
 3129 0212 35       		.uleb128 0x35
 3130 0213 00       		.byte	0
 3131 0214 49       		.uleb128 0x49
 3132 0215 13       		.uleb128 0x13
 3133 0216 00       		.byte	0
 3134 0217 00       		.byte	0
 3135 0218 20       		.uleb128 0x20
 3136 0219 34       		.uleb128 0x34
 3137 021a 00       		.byte	0
 3138 021b 03       		.uleb128 0x3
 3139 021c 08       		.uleb128 0x8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 65


 3140 021d 3A       		.uleb128 0x3a
 3141 021e 0B       		.uleb128 0xb
 3142 021f 3B       		.uleb128 0x3b
 3143 0220 0B       		.uleb128 0xb
 3144 0221 49       		.uleb128 0x49
 3145 0222 13       		.uleb128 0x13
 3146 0223 3F       		.uleb128 0x3f
 3147 0224 19       		.uleb128 0x19
 3148 0225 02       		.uleb128 0x2
 3149 0226 18       		.uleb128 0x18
 3150 0227 00       		.byte	0
 3151 0228 00       		.byte	0
 3152 0229 21       		.uleb128 0x21
 3153 022a 34       		.uleb128 0x34
 3154 022b 00       		.byte	0
 3155 022c 03       		.uleb128 0x3
 3156 022d 0E       		.uleb128 0xe
 3157 022e 3A       		.uleb128 0x3a
 3158 022f 0B       		.uleb128 0xb
 3159 0230 3B       		.uleb128 0x3b
 3160 0231 0B       		.uleb128 0xb
 3161 0232 49       		.uleb128 0x49
 3162 0233 13       		.uleb128 0x13
 3163 0234 3F       		.uleb128 0x3f
 3164 0235 19       		.uleb128 0x19
 3165 0236 02       		.uleb128 0x2
 3166 0237 18       		.uleb128 0x18
 3167 0238 00       		.byte	0
 3168 0239 00       		.byte	0
 3169 023a 22       		.uleb128 0x22
 3170 023b 01       		.uleb128 0x1
 3171 023c 01       		.byte	0x1
 3172 023d 49       		.uleb128 0x49
 3173 023e 13       		.uleb128 0x13
 3174 023f 01       		.uleb128 0x1
 3175 0240 13       		.uleb128 0x13
 3176 0241 00       		.byte	0
 3177 0242 00       		.byte	0
 3178 0243 23       		.uleb128 0x23
 3179 0244 21       		.uleb128 0x21
 3180 0245 00       		.byte	0
 3181 0246 49       		.uleb128 0x49
 3182 0247 13       		.uleb128 0x13
 3183 0248 2F       		.uleb128 0x2f
 3184 0249 0B       		.uleb128 0xb
 3185 024a 00       		.byte	0
 3186 024b 00       		.byte	0
 3187 024c 24       		.uleb128 0x24
 3188 024d 34       		.uleb128 0x34
 3189 024e 00       		.byte	0
 3190 024f 03       		.uleb128 0x3
 3191 0250 08       		.uleb128 0x8
 3192 0251 3A       		.uleb128 0x3a
 3193 0252 0B       		.uleb128 0xb
 3194 0253 3B       		.uleb128 0x3b
 3195 0254 0B       		.uleb128 0xb
 3196 0255 49       		.uleb128 0x49
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 66


 3197 0256 13       		.uleb128 0x13
 3198 0257 3F       		.uleb128 0x3f
 3199 0258 19       		.uleb128 0x19
 3200 0259 3C       		.uleb128 0x3c
 3201 025a 19       		.uleb128 0x19
 3202 025b 00       		.byte	0
 3203 025c 00       		.byte	0
 3204 025d 25       		.uleb128 0x25
 3205 025e 34       		.uleb128 0x34
 3206 025f 00       		.byte	0
 3207 0260 03       		.uleb128 0x3
 3208 0261 0E       		.uleb128 0xe
 3209 0262 3A       		.uleb128 0x3a
 3210 0263 0B       		.uleb128 0xb
 3211 0264 3B       		.uleb128 0x3b
 3212 0265 0B       		.uleb128 0xb
 3213 0266 49       		.uleb128 0x49
 3214 0267 13       		.uleb128 0x13
 3215 0268 3F       		.uleb128 0x3f
 3216 0269 19       		.uleb128 0x19
 3217 026a 3C       		.uleb128 0x3c
 3218 026b 19       		.uleb128 0x19
 3219 026c 00       		.byte	0
 3220 026d 00       		.byte	0
 3221 026e 26       		.uleb128 0x26
 3222 026f 34       		.uleb128 0x34
 3223 0270 00       		.byte	0
 3224 0271 03       		.uleb128 0x3
 3225 0272 0E       		.uleb128 0xe
 3226 0273 3A       		.uleb128 0x3a
 3227 0274 0B       		.uleb128 0xb
 3228 0275 3B       		.uleb128 0x3b
 3229 0276 05       		.uleb128 0x5
 3230 0277 49       		.uleb128 0x49
 3231 0278 13       		.uleb128 0x13
 3232 0279 3F       		.uleb128 0x3f
 3233 027a 19       		.uleb128 0x19
 3234 027b 02       		.uleb128 0x2
 3235 027c 18       		.uleb128 0x18
 3236 027d 00       		.byte	0
 3237 027e 00       		.byte	0
 3238 027f 00       		.byte	0
 3239              		.section	.debug_aranges,"",%progbits
 3240 0000 84000000 		.4byte	0x84
 3241 0004 0200     		.2byte	0x2
 3242 0006 00000000 		.4byte	.Ldebug_info0
 3243 000a 04       		.byte	0x4
 3244 000b 00       		.byte	0
 3245 000c 0000     		.2byte	0
 3246 000e 0000     		.2byte	0
 3247 0010 00000000 		.4byte	.LFB64
 3248 0014 F4000000 		.4byte	.LFE64-.LFB64
 3249 0018 00000000 		.4byte	.LFB65
 3250 001c 18000000 		.4byte	.LFE65-.LFB65
 3251 0020 00000000 		.4byte	.LFB66
 3252 0024 18000000 		.4byte	.LFE66-.LFB66
 3253 0028 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 67


 3254 002c 18000000 		.4byte	.LFE67-.LFB67
 3255 0030 00000000 		.4byte	.LFB68
 3256 0034 18000000 		.4byte	.LFE68-.LFB68
 3257 0038 00000000 		.4byte	.LFB69
 3258 003c 38000000 		.4byte	.LFE69-.LFB69
 3259 0040 00000000 		.4byte	.LFB70
 3260 0044 C0000000 		.4byte	.LFE70-.LFB70
 3261 0048 00000000 		.4byte	.LFB71
 3262 004c 54000000 		.4byte	.LFE71-.LFB71
 3263 0050 00000000 		.4byte	.LFB72
 3264 0054 34000000 		.4byte	.LFE72-.LFB72
 3265 0058 00000000 		.4byte	.LFB73
 3266 005c 90020000 		.4byte	.LFE73-.LFB73
 3267 0060 00000000 		.4byte	.LFB74
 3268 0064 3C000000 		.4byte	.LFE74-.LFB74
 3269 0068 00000000 		.4byte	.LFB75
 3270 006c 1C000000 		.4byte	.LFE75-.LFB75
 3271 0070 00000000 		.4byte	.LFB76
 3272 0074 A4000000 		.4byte	.LFE76-.LFB76
 3273 0078 00000000 		.4byte	.LFB77
 3274 007c BC000000 		.4byte	.LFE77-.LFB77
 3275 0080 00000000 		.4byte	0
 3276 0084 00000000 		.4byte	0
 3277              		.section	.debug_ranges,"",%progbits
 3278              	.Ldebug_ranges0:
 3279 0000 00000000 		.4byte	.LFB64
 3280 0004 F4000000 		.4byte	.LFE64
 3281 0008 00000000 		.4byte	.LFB65
 3282 000c 18000000 		.4byte	.LFE65
 3283 0010 00000000 		.4byte	.LFB66
 3284 0014 18000000 		.4byte	.LFE66
 3285 0018 00000000 		.4byte	.LFB67
 3286 001c 18000000 		.4byte	.LFE67
 3287 0020 00000000 		.4byte	.LFB68
 3288 0024 18000000 		.4byte	.LFE68
 3289 0028 00000000 		.4byte	.LFB69
 3290 002c 38000000 		.4byte	.LFE69
 3291 0030 00000000 		.4byte	.LFB70
 3292 0034 C0000000 		.4byte	.LFE70
 3293 0038 00000000 		.4byte	.LFB71
 3294 003c 54000000 		.4byte	.LFE71
 3295 0040 00000000 		.4byte	.LFB72
 3296 0044 34000000 		.4byte	.LFE72
 3297 0048 00000000 		.4byte	.LFB73
 3298 004c 90020000 		.4byte	.LFE73
 3299 0050 00000000 		.4byte	.LFB74
 3300 0054 3C000000 		.4byte	.LFE74
 3301 0058 00000000 		.4byte	.LFB75
 3302 005c 1C000000 		.4byte	.LFE75
 3303 0060 00000000 		.4byte	.LFB76
 3304 0064 A4000000 		.4byte	.LFE76
 3305 0068 00000000 		.4byte	.LFB77
 3306 006c BC000000 		.4byte	.LFE77
 3307 0070 00000000 		.4byte	0
 3308 0074 00000000 		.4byte	0
 3309              		.section	.debug_line,"",%progbits
 3310              	.Ldebug_line0:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 68


 3311 0000 83030000 		.section	.debug_str,"MS",%progbits,1
 3311      02007001 
 3311      00000201 
 3311      FB0E0D00 
 3311      01010101 
 3312              	.LASF47:
 3313 0000 64697265 		.ascii	"direction\000"
 3313      6374696F 
 3313      6E00
 3314              	.LASF64:
 3315 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3315      61726441 
 3315      66746572 
 3315      5475726E 
 3315      00
 3316              	.LASF50:
 3317 001b 496E7374 		.ascii	"InstructionDirection\000"
 3317      72756374 
 3317      696F6E44 
 3317      69726563 
 3317      74696F6E 
 3318              	.LASF127:
 3319 0030 6D61696E 		.ascii	"main.c\000"
 3319      2E6300
 3320              	.LASF75:
 3321 0037 626C6F63 		.ascii	"blocksize\000"
 3321      6B73697A 
 3321      6500
 3322              	.LASF115:
 3323 0041 62756666 		.ascii	"buffer\000"
 3323      657200
 3324              	.LASF8:
 3325 0048 756E7369 		.ascii	"unsigned int\000"
 3325      676E6564 
 3325      20696E74 
 3325      00
 3326              	.LASF12:
 3327 0055 5F5F696E 		.ascii	"__int32_t\000"
 3327      7433325F 
 3327      7400
 3328              	.LASF18:
 3329 005f 696E7431 		.ascii	"int16\000"
 3329      3600
 3330              	.LASF106:
 3331 0065 73797374 		.ascii	"system_state\000"
 3331      656D5F73 
 3331      74617465 
 3331      00
 3332              	.LASF86:
 3333 0072 6E657874 		.ascii	"nextInstruction\000"
 3333      496E7374 
 3333      72756374 
 3333      696F6E00 
 3334              	.LASF126:
 3335 0082 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3335      43313120 
 3335      352E342E 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 69


 3335      31203230 
 3335      31363036 
 3336 00b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3336      20726576 
 3336      6973696F 
 3336      6E203233 
 3336      37373135 
 3337 00e8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3337      66756E63 
 3337      74696F6E 
 3337      2D736563 
 3337      74696F6E 
 3338              	.LASF69:
 3339 0110 53365F44 		.ascii	"S6_DETECTED\000"
 3339      45544543 
 3339      54454400 
 3340              	.LASF114:
 3341 011c 746F7461 		.ascii	"totalDistance\000"
 3341      6C446973 
 3341      74616E63 
 3341      6500
 3342              	.LASF34:
 3343 012a 67325F78 		.ascii	"g2_xpos\000"
 3343      706F7300 
 3344              	.LASF83:
 3345 0132 6E756D53 		.ascii	"numSteps\000"
 3345      74657073 
 3345      00
 3346              	.LASF77:
 3347 013b 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 3347      6F76656D 
 3347      656E7441 
 3347      63636F72 
 3347      64696E67 
 3348              	.LASF101:
 3349 015d 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3349      5F72665F 
 3349      7472616E 
 3349      736D6973 
 3349      73696F6E 
 3350              	.LASF78:
 3351 0179 52657365 		.ascii	"ResetSensorFlags\000"
 3351      7453656E 
 3351      736F7246 
 3351      6C616773 
 3351      00
 3352              	.LASF37:
 3353 018a 67325F64 		.ascii	"g2_direction\000"
 3353      69726563 
 3353      74696F6E 
 3353      00
 3354              	.LASF116:
 3355 0197 71756164 		.ascii	"quadDec2Count\000"
 3355      44656332 
 3355      436F756E 
 3355      7400
 3356              	.LASF19:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 70


 3357 01a5 666C6F61 		.ascii	"float\000"
 3357      7400
 3358              	.LASF105:
 3359 01ab 75736242 		.ascii	"usbBuffer\000"
 3359      75666665 
 3359      7200
 3360              	.LASF82:
 3361 01b5 636F756E 		.ascii	"count\000"
 3361      7400
 3362              	.LASF22:
 3363 01bb 696E6465 		.ascii	"index\000"
 3363      7800
 3364              	.LASF7:
 3365 01c1 6C6F6E67 		.ascii	"long long unsigned int\000"
 3365      206C6F6E 
 3365      6720756E 
 3365      7369676E 
 3365      65642069 
 3366              	.LASF46:
 3367 01d8 496E7374 		.ascii	"Instruction\000"
 3367      72756374 
 3367      696F6E00 
 3368              	.LASF98:
 3369 01e4 666C6167 		.ascii	"flag_packet\000"
 3369      5F706163 
 3369      6B657400 
 3370              	.LASF87:
 3371 01f0 53657452 		.ascii	"SetRobotMovement\000"
 3371      6F626F74 
 3371      4D6F7665 
 3371      6D656E74 
 3371      00
 3372              	.LASF70:
 3373 0201 54494D45 		.ascii	"TIMER_FINISH\000"
 3373      525F4649 
 3373      4E495348 
 3373      00
 3374              	.LASF118:
 3375 020e 6B656570 		.ascii	"keepLedOn\000"
 3375      4C65644F 
 3375      6E00
 3376              	.LASF42:
 3377 0218 466F7277 		.ascii	"ForwardUntilTarget\000"
 3377      61726455 
 3377      6E74696C 
 3377      54617267 
 3377      657400
 3378              	.LASF94:
 3379 022b 666C6167 		.ascii	"flag_ts_update\000"
 3379      5F74735F 
 3379      75706461 
 3379      746500
 3380              	.LASF93:
 3381 023a 666C6167 		.ascii	"flag_ts_enc\000"
 3381      5F74735F 
 3381      656E6300 
 3382              	.LASF80:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 71


 3383 0246 71756164 		.ascii	"quadCountToRPM\000"
 3383      436F756E 
 3383      74546F52 
 3383      504D00
 3384              	.LASF125:
 3385 0255 69676E6F 		.ascii	"ignoreSensor\000"
 3385      72655365 
 3385      6E736F72 
 3385      00
 3386              	.LASF43:
 3387 0262 53746F70 		.ascii	"StopAtTarget\000"
 3387      41745461 
 3387      72676574 
 3387      00
 3388              	.LASF63:
 3389 026f 77616974 		.ascii	"waitForTurn\000"
 3389      466F7254 
 3389      75726E00 
 3390              	.LASF24:
 3391 027b 726F626F 		.ascii	"robot_ypos\000"
 3391      745F7970 
 3391      6F7300
 3392              	.LASF92:
 3393 0286 74735F64 		.ascii	"ts_display\000"
 3393      6973706C 
 3393      617900
 3394              	.LASF110:
 3395 0291 63757272 		.ascii	"currentOrientation\000"
 3395      656E744F 
 3395      7269656E 
 3395      74617469 
 3395      6F6E00
 3396              	.LASF11:
 3397 02a4 63686172 		.ascii	"char\000"
 3397      00
 3398              	.LASF28:
 3399 02a9 67305F73 		.ascii	"g0_speed\000"
 3399      70656564 
 3399      00
 3400              	.LASF84:
 3401 02b2 696E7374 		.ascii	"instructionList\000"
 3401      72756374 
 3401      696F6E4C 
 3401      69737400 
 3402              	.LASF85:
 3403 02c2 696E7374 		.ascii	"instructionIndex\000"
 3403      72756374 
 3403      696F6E49 
 3403      6E646578 
 3403      00
 3404              	.LASF15:
 3405 02d3 75696E74 		.ascii	"uint16\000"
 3405      313600
 3406              	.LASF17:
 3407 02da 696E7438 		.ascii	"int8\000"
 3407      00
 3408              	.LASF120:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 72


 3409 02df 78426C6F 		.ascii	"xBlocksize\000"
 3409      636B7369 
 3409      7A6500
 3410              	.LASF33:
 3411 02ea 67315F64 		.ascii	"g1_direction\000"
 3411      69726563 
 3411      74696F6E 
 3411      00
 3412              	.LASF53:
 3413 02f7 4C656674 		.ascii	"Left\000"
 3413      00
 3414              	.LASF73:
 3415 02fc 73706565 		.ascii	"speedTimer\000"
 3415      6454696D 
 3415      657200
 3416              	.LASF39:
 3417 0307 77616974 		.ascii	"waitForLeftTurn\000"
 3417      466F724C 
 3417      65667454 
 3417      75726E00 
 3418              	.LASF6:
 3419 0317 6C6F6E67 		.ascii	"long long int\000"
 3419      206C6F6E 
 3419      6720696E 
 3419      7400
 3420              	.LASF30:
 3421 0325 67315F78 		.ascii	"g1_xpos\000"
 3421      706F7300 
 3422              	.LASF111:
 3423 032d 70726576 		.ascii	"previousOrientation\000"
 3423      696F7573 
 3423      4F726965 
 3423      6E746174 
 3423      696F6E00 
 3424              	.LASF41:
 3425 0341 75547572 		.ascii	"uTurn\000"
 3425      6E00
 3426              	.LASF72:
 3427 0347 6E657744 		.ascii	"newDistance\000"
 3427      69737461 
 3427      6E636500 
 3428              	.LASF36:
 3429 0353 67325F73 		.ascii	"g2_speed\000"
 3429      70656564 
 3429      00
 3430              	.LASF27:
 3431 035c 67305F79 		.ascii	"g0_ypos\000"
 3431      706F7300 
 3432              	.LASF107:
 3433 0364 666F6F64 		.ascii	"food_list\000"
 3433      5F6C6973 
 3433      7400
 3434              	.LASF58:
 3435 036e 5475726E 		.ascii	"TurnLeft\000"
 3435      4C656674 
 3435      00
 3436              	.LASF91:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 73


 3437 0377 74735F73 		.ascii	"ts_speed\000"
 3437      70656564 
 3437      00
 3438              	.LASF62:
 3439 0380 556E6B6E 		.ascii	"Unknown\000"
 3439      6F776E00 
 3440              	.LASF76:
 3441 0388 64697265 		.ascii	"directionState\000"
 3441      6374696F 
 3441      6E537461 
 3441      746500
 3442              	.LASF16:
 3443 0397 75696E74 		.ascii	"uint32\000"
 3443      333200
 3444              	.LASF40:
 3445 039e 77616974 		.ascii	"waitForRightTurn\000"
 3445      466F7252 
 3445      69676874 
 3445      5475726E 
 3445      00
 3446              	.LASF57:
 3447 03af 5475726E 		.ascii	"TurnRight\000"
 3447      52696768 
 3447      7400
 3448              	.LASF45:
 3449 03b9 64617461 		.ascii	"data_main\000"
 3449      5F6D6169 
 3449      6E00
 3450              	.LASF21:
 3451 03c3 72737369 		.ascii	"rssi\000"
 3451      00
 3452              	.LASF29:
 3453 03c8 67305F64 		.ascii	"g0_direction\000"
 3453      69726563 
 3453      74696F6E 
 3453      00
 3454              	.LASF109:
 3455 03d5 70726576 		.ascii	"previousDirection\000"
 3455      696F7573 
 3455      44697265 
 3455      6374696F 
 3455      6E00
 3456              	.LASF9:
 3457 03e7 6C6F6E67 		.ascii	"long double\000"
 3457      20646F75 
 3457      626C6500 
 3458              	.LASF95:
 3459 03f3 666C6167 		.ascii	"flag_ts_speed\000"
 3459      5F74735F 
 3459      73706565 
 3459      6400
 3460              	.LASF100:
 3461 0401 64617461 		.ascii	"dataready_flag\000"
 3461      72656164 
 3461      795F666C 
 3461      616700
 3462              	.LASF97:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 74


 3463 0410 666C6167 		.ascii	"flag_rx\000"
 3463      5F727800 
 3464              	.LASF121:
 3465 0418 79426C6F 		.ascii	"yBlocksize\000"
 3465      636B7369 
 3465      7A6500
 3466              	.LASF2:
 3467 0423 73686F72 		.ascii	"short int\000"
 3467      7420696E 
 3467      7400
 3468              	.LASF67:
 3469 042d 53345F44 		.ascii	"S4_DETECTED\000"
 3469      45544543 
 3469      54454400 
 3470              	.LASF66:
 3471 0439 53335F44 		.ascii	"S3_DETECTED\000"
 3471      45544543 
 3471      54454400 
 3472              	.LASF4:
 3473 0445 6C6F6E67 		.ascii	"long int\000"
 3473      20696E74 
 3473      00
 3474              	.LASF88:
 3475 044e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3475      52784275 
 3475      66666572 
 3475      00
 3476              	.LASF90:
 3477 045b 74735F75 		.ascii	"ts_update\000"
 3477      70646174 
 3477      6500
 3478              	.LASF56:
 3479 0465 466F7277 		.ascii	"Forward\000"
 3479      61726400 
 3480              	.LASF113:
 3481 046d 746F7461 		.ascii	"totalMilliseconds\000"
 3481      6C4D696C 
 3481      6C697365 
 3481      636F6E64 
 3481      7300
 3482              	.LASF35:
 3483 047f 67325F79 		.ascii	"g2_ypos\000"
 3483      706F7300 
 3484              	.LASF79:
 3485 0487 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 3485      546F4E65 
 3485      7874496E 
 3485      73747275 
 3485      6374696F 
 3486              	.LASF51:
 3487 049d 4F726965 		.ascii	"OrientationState\000"
 3487      6E746174 
 3487      696F6E53 
 3487      74617465 
 3487      00
 3488              	.LASF52:
 3489 04ae 446F776E 		.ascii	"Down\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 75


 3489      00
 3490              	.LASF54:
 3491 04b3 52696768 		.ascii	"Right\000"
 3491      7400
 3492              	.LASF31:
 3493 04b9 67315F79 		.ascii	"g1_ypos\000"
 3493      706F7300 
 3494              	.LASF108:
 3495 04c1 63757272 		.ascii	"currentDirection\000"
 3495      656E7444 
 3495      69726563 
 3495      74696F6E 
 3495      00
 3496              	.LASF128:
 3497 04d2 483A5C33 		.ascii	"H:\\301-Robot\\psoc student pack\\psoc_code_base\\C"
 3497      30312D52 
 3497      6F626F74 
 3497      5C70736F 
 3497      63207374 
 3498 0501 53333031 		.ascii	"S301_Class.cydsn\000"
 3498      5F436C61 
 3498      73732E63 
 3498      7964736E 
 3498      00
 3499              	.LASF10:
 3500 0512 73697A65 		.ascii	"sizetype\000"
 3500      74797065 
 3500      00
 3501              	.LASF5:
 3502 051b 6C6F6E67 		.ascii	"long unsigned int\000"
 3502      20756E73 
 3502      69676E65 
 3502      6420696E 
 3502      7400
 3503              	.LASF119:
 3504 052d 73746F70 		.ascii	"stopBuffer\000"
 3504      42756666 
 3504      657200
 3505              	.LASF13:
 3506 0538 696E7433 		.ascii	"int32_t\000"
 3506      325F7400 
 3507              	.LASF23:
 3508 0540 726F626F 		.ascii	"robot_xpos\000"
 3508      745F7870 
 3508      6F7300
 3509              	.LASF104:
 3510 054b 656E7472 		.ascii	"entry\000"
 3510      7900
 3511              	.LASF55:
 3512 0551 526F626F 		.ascii	"RobotMovement\000"
 3512      744D6F76 
 3512      656D656E 
 3512      7400
 3513              	.LASF1:
 3514 055f 756E7369 		.ascii	"unsigned char\000"
 3514      676E6564 
 3514      20636861 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 76


 3514      7200
 3515              	.LASF124:
 3516 056d 73746F70 		.ascii	"stoppedAfterTurn\000"
 3516      70656441 
 3516      66746572 
 3516      5475726E 
 3516      00
 3517              	.LASF103:
 3518 057e 6C696E65 		.ascii	"line\000"
 3518      00
 3519              	.LASF60:
 3520 0583 41646A75 		.ascii	"AdjustToTheRight\000"
 3520      7374546F 
 3520      54686552 
 3520      69676874 
 3520      00
 3521              	.LASF61:
 3522 0594 53746F70 		.ascii	"Stop\000"
 3522      00
 3523              	.LASF81:
 3524 0599 47657449 		.ascii	"GetInstructionAtIndex\000"
 3524      6E737472 
 3524      75637469 
 3524      6F6E4174 
 3524      496E6465 
 3525              	.LASF89:
 3526 05af 74735F65 		.ascii	"ts_enc\000"
 3526      6E6300
 3527              	.LASF96:
 3528 05b6 666C6167 		.ascii	"flag_ts_display\000"
 3528      5F74735F 
 3528      64697370 
 3528      6C617900 
 3529              	.LASF44:
 3530 05c6 536B6970 		.ascii	"Skip\000"
 3530      00
 3531              	.LASF102:
 3532 05cb 64697370 		.ascii	"displaystring\000"
 3532      6C617973 
 3532      7472696E 
 3532      6700
 3533              	.LASF38:
 3534 05d9 476F466F 		.ascii	"GoForward\000"
 3534      72776172 
 3534      6400
 3535              	.LASF68:
 3536 05e3 53355F44 		.ascii	"S5_DETECTED\000"
 3536      45544543 
 3536      54454400 
 3537              	.LASF0:
 3538 05ef 7369676E 		.ascii	"signed char\000"
 3538      65642063 
 3538      68617200 
 3539              	.LASF122:
 3540 05fb 63757272 		.ascii	"currentRow\000"
 3540      656E7452 
 3540      6F7700
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 77


 3541              	.LASF3:
 3542 0606 73686F72 		.ascii	"short unsigned int\000"
 3542      7420756E 
 3542      7369676E 
 3542      65642069 
 3542      6E7400
 3543              	.LASF25:
 3544 0619 726F626F 		.ascii	"robot_orientation\000"
 3544      745F6F72 
 3544      69656E74 
 3544      6174696F 
 3544      6E00
 3545              	.LASF71:
 3546 062b 6D61696E 		.ascii	"main\000"
 3546      00
 3547              	.LASF112:
 3548 0630 63757272 		.ascii	"currentInstruction\000"
 3548      656E7449 
 3548      6E737472 
 3548      75637469 
 3548      6F6E00
 3549              	.LASF59:
 3550 0643 41646A75 		.ascii	"AdjustToTheLeft\000"
 3550      7374546F 
 3550      5468654C 
 3550      65667400 
 3551              	.LASF65:
 3552 0653 4261636B 		.ascii	"Backward\000"
 3552      77617264 
 3552      00
 3553              	.LASF14:
 3554 065c 75696E74 		.ascii	"uint8\000"
 3554      3800
 3555              	.LASF20:
 3556 0662 646F7562 		.ascii	"double\000"
 3556      6C6500
 3557              	.LASF74:
 3558 0669 43686563 		.ascii	"CheckSensorDirection\000"
 3558      6B53656E 
 3558      736F7244 
 3558      69726563 
 3558      74696F6E 
 3559              	.LASF123:
 3560 067e 63757272 		.ascii	"currentCol\000"
 3560      656E7443 
 3560      6F6C00
 3561              	.LASF26:
 3562 0689 67305F78 		.ascii	"g0_xpos\000"
 3562      706F7300 
 3563              	.LASF117:
 3564 0691 74696D65 		.ascii	"timerInt\000"
 3564      72496E74 
 3564      00
 3565              	.LASF99:
 3566 069a 666C6167 		.ascii	"flag_KB_string\000"
 3566      5F4B425F 
 3566      73747269 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccUahHcL.s 			page 78


 3566      6E6700
 3567              	.LASF32:
 3568 06a9 67315F73 		.ascii	"g1_speed\000"
 3568      70656564 
 3568      00
 3569              	.LASF48:
 3570 06b2 69676E6F 		.ascii	"ignoreL\000"
 3570      72654C00 
 3571              	.LASF49:
 3572 06ba 69676E6F 		.ascii	"ignoreR\000"
 3572      72655200 
 3573              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
