ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.global	instructionIndex
 124              		.bss
 125 0013 00       		.align	2
 126              		.type	instructionIndex, %object
 127              		.size	instructionIndex, 4
 128              	instructionIndex:
 129 0014 00000000 		.space	4
 130              		.comm	s3,1,1
 131              		.comm	s4,1,1
 132              		.comm	s5,1,1
 133              		.global	s6
 134              		.type	s6, %object
 135              		.size	s6, 1
 136              	s6:
 137 0018 00       		.space	1
 138              		.global	totalMilliseconds
 139 0019 000000   		.align	2
 140              		.type	totalMilliseconds, %object
 141              		.size	totalMilliseconds, 4
 142              	totalMilliseconds:
 143 001c 00000000 		.space	4
 144              		.global	totalDistance
 145              		.align	2
 146              		.type	totalDistance, %object
 147              		.size	totalDistance, 4
 148              	totalDistance:
 149 0020 00000000 		.space	4
 150              		.comm	buffer,69,4
 151              		.global	quadDec2Count
 152              		.align	2
 153              		.type	quadDec2Count, %object
 154              		.size	quadDec2Count, 4
 155              	quadDec2Count:
 156 0024 00000000 		.space	4
 157              		.global	timerInt
 158              		.align	2
 159              		.type	timerInt, %object
 160              		.size	timerInt, 4
 161              	timerInt:
 162 0028 00000000 		.space	4
 163              		.global	keepLedOn
 164              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 4


 165              		.type	keepLedOn, %object
 166              		.size	keepLedOn, 4
 167              	keepLedOn:
 168 002c 00000000 		.space	4
 169              		.global	stopBuffer
 170              		.align	2
 171              		.type	stopBuffer, %object
 172              		.size	stopBuffer, 4
 173              	stopBuffer:
 174 0030 00000000 		.space	4
 175              		.global	turnFinishedFlag
 176              		.type	turnFinishedFlag, %object
 177              		.size	turnFinishedFlag, 1
 178              	turnFinishedFlag:
 179 0034 00       		.space	1
 180              		.global	forwardUntilTargetStartedFlag
 181              		.type	forwardUntilTargetStartedFlag, %object
 182              		.size	forwardUntilTargetStartedFlag, 1
 183              	forwardUntilTargetStartedFlag:
 184 0035 00       		.space	1
 185              		.global	turnStartedFlag
 186              		.type	turnStartedFlag, %object
 187              		.size	turnStartedFlag, 1
 188              	turnStartedFlag:
 189 0036 00       		.space	1
 190              		.global	blockSizeTotal
 191 0037 00       		.align	2
 192              		.type	blockSizeTotal, %object
 193              		.size	blockSizeTotal, 4
 194              	blockSizeTotal:
 195 0038 00000000 		.space	4
 196              		.global	__aeabi_i2d
 197              		.global	__aeabi_dmul
 198              		.global	__aeabi_ddiv
 199              		.global	__aeabi_d2f
 200              		.global	__aeabi_fadd
 201              		.section	.text.speedTimer,"ax",%progbits
 202              		.align	2
 203              		.global	speedTimer
 204              		.thumb
 205              		.thumb_func
 206              		.type	speedTimer, %function
 207              	speedTimer:
 208              	.LFB64:
 209              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 5


  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint8 turnFinishedFlag = 0;
  52:main.c        **** uint8 forwardUntilTargetStartedFlag = 0;
  53:main.c        **** uint8 turnStartedFlag = 0;
  54:main.c        **** float blockSizeTotal = 0;
  55:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  56:main.c        **** 
  57:main.c        **** CY_ISR (speedTimer) {
 210              		.loc 1 57 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 90B5     		push	{r4, r7, lr}
 215              		.cfi_def_cfa_offset 12
 216              		.cfi_offset 4, -12
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 83B0     		sub	sp, sp, #12
 220              		.cfi_def_cfa_offset 24
 221 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 6


 222              		.cfi_def_cfa_register 7
  58:main.c        ****     timerInt = 1;
 223              		.loc 1 58 0
 224 0006 344B     		ldr	r3, .L4+16
 225 0008 0122     		movs	r2, #1
 226 000a 1A60     		str	r2, [r3]
  59:main.c        ****     //quadDec_M1 used for turning macros
  60:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 227              		.loc 1 60 0
 228 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 229 0010 0346     		mov	r3, r0
 230 0012 1A46     		mov	r2, r3
 231 0014 314B     		ldr	r3, .L4+20
 232 0016 1A60     		str	r2, [r3]
  61:main.c        ****     
  62:main.c        ****     if ((currentDirection == Forward || 
 233              		.loc 1 62 0
 234 0018 314B     		ldr	r3, .L4+24
 235 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236 001c 002B     		cmp	r3, #0
 237 001e 13D0     		beq	.L2
  63:main.c        ****         currentDirection == ForwardAfterTurn ||
 238              		.loc 1 63 0 discriminator 1
 239 0020 2F4B     		ldr	r3, .L4+24
 240 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:main.c        ****         currentDirection == ForwardAfterTurn ||
 241              		.loc 1 62 0 discriminator 1
 242 0024 082B     		cmp	r3, #8
 243 0026 0FD0     		beq	.L2
  64:main.c        ****         currentDirection == waitForTurn || 
 244              		.loc 1 64 0
 245 0028 2D4B     		ldr	r3, .L4+24
 246 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63:main.c        ****         currentDirection == ForwardAfterTurn ||
 247              		.loc 1 63 0
 248 002c 072B     		cmp	r3, #7
 249 002e 0BD0     		beq	.L2
  65:main.c        ****         currentDirection == AdjustToTheLeft ||
 250              		.loc 1 65 0
 251 0030 2B4B     		ldr	r3, .L4+24
 252 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:main.c        ****         currentDirection == waitForTurn || 
 253              		.loc 1 64 0
 254 0034 032B     		cmp	r3, #3
 255 0036 07D0     		beq	.L2
  66:main.c        ****         currentDirection == AdjustToTheRight ||
 256              		.loc 1 66 0
 257 0038 294B     		ldr	r3, .L4+24
 258 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  65:main.c        ****         currentDirection == AdjustToTheLeft ||
 259              		.loc 1 65 0
 260 003c 042B     		cmp	r3, #4
 261 003e 03D0     		beq	.L2
  67:main.c        ****         currentDirection == Backward) &&
 262              		.loc 1 67 0
 263 0040 274B     		ldr	r3, .L4+24
 264 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 7


  66:main.c        ****         currentDirection == AdjustToTheRight ||
 265              		.loc 1 66 0
 266 0044 092B     		cmp	r3, #9
 267 0046 34D1     		bne	.L3
 268              	.L2:
  68:main.c        ****         quadDec2Count != 0) {
 269              		.loc 1 68 0
 270 0048 244B     		ldr	r3, .L4+20
 271 004a 1B68     		ldr	r3, [r3]
  67:main.c        ****         currentDirection == Backward) &&
 272              		.loc 1 67 0
 273 004c 002B     		cmp	r3, #0
 274 004e 30D0     		beq	.L3
 275              	.LBB2:
  69:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  70:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 276              		.loc 1 70 0
 277 0050 224B     		ldr	r3, .L4+20
 278 0052 1B68     		ldr	r3, [r3]
 279 0054 002B     		cmp	r3, #0
 280 0056 B8BF     		it	lt
 281 0058 5B42     		rsblt	r3, r3, #0
 282 005a 1846     		mov	r0, r3
 283 005c FFF7FEFF 		bl	__aeabi_i2d
 284 0060 19A3     		adr	r3, .L4
 285 0062 D3E90023 		ldrd	r2, [r3]
 286 0066 FFF7FEFF 		bl	__aeabi_dmul
 287 006a 0346     		mov	r3, r0
 288 006c 0C46     		mov	r4, r1
 289 006e 1846     		mov	r0, r3
 290 0070 2146     		mov	r1, r4
 291 0072 17A3     		adr	r3, .L4+8
 292 0074 D3E90023 		ldrd	r2, [r3]
 293 0078 FFF7FEFF 		bl	__aeabi_dmul
 294 007c 0346     		mov	r3, r0
 295 007e 0C46     		mov	r4, r1
 296 0080 1846     		mov	r0, r3
 297 0082 2146     		mov	r1, r4
 298 0084 4FF00002 		mov	r2, #0
 299 0088 164B     		ldr	r3, .L4+28
 300 008a FFF7FEFF 		bl	__aeabi_ddiv
 301 008e 0346     		mov	r3, r0
 302 0090 0C46     		mov	r4, r1
 303 0092 1846     		mov	r0, r3
 304 0094 2146     		mov	r1, r4
 305 0096 FFF7FEFF 		bl	__aeabi_d2f
 306 009a 0346     		mov	r3, r0
 307 009c 7B60     		str	r3, [r7, #4]	@ float
  71:main.c        ****         
  72:main.c        ****         totalDistance = totalDistance + newDistance;
 308              		.loc 1 72 0
 309 009e 124B     		ldr	r3, .L4+32
 310 00a0 1B68     		ldr	r3, [r3]	@ float
 311 00a2 7968     		ldr	r1, [r7, #4]	@ float
 312 00a4 1846     		mov	r0, r3
 313 00a6 FFF7FEFF 		bl	__aeabi_fadd
 314 00aa 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 8


 315 00ac 1A46     		mov	r2, r3
 316 00ae 0E4B     		ldr	r3, .L4+32
 317 00b0 1A60     		str	r2, [r3]	@ float
 318              	.L3:
 319              	.LBE2:
  73:main.c        ****     }
  74:main.c        ****     
  75:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 320              		.loc 1 75 0
 321 00b2 0020     		movs	r0, #0
 322 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  76:main.c        ****     QuadDec_M2_Start(); // restart counter
 323              		.loc 1 76 0
 324 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  77:main.c        ****     
  78:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 325              		.loc 1 78 0
 326 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  79:main.c        **** }
 327              		.loc 1 79 0
 328 00c0 00BF     		nop
 329 00c2 0C37     		adds	r7, r7, #12
 330              		.cfi_def_cfa_offset 12
 331 00c4 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 00c6 90BD     		pop	{r4, r7, pc}
 335              	.L5:
 336              		.align	3
 337              	.L4:
 338 00c8 182D4454 		.word	1413754136
 339 00cc FB210940 		.word	1074340347
 340 00d0 00000000 		.word	0
 341 00d4 00205040 		.word	1078992896
 342 00d8 00000000 		.word	timerInt
 343 00dc 00000000 		.word	quadDec2Count
 344 00e0 00000000 		.word	currentDirection
 345 00e4 00806C40 		.word	1080852480
 346 00e8 00000000 		.word	totalDistance
 347              		.cfi_endproc
 348              	.LFE64:
 349              		.size	speedTimer, .-speedTimer
 350              		.section	.text.S3_DETECTED,"ax",%progbits
 351              		.align	2
 352              		.global	S3_DETECTED
 353              		.thumb
 354              		.thumb_func
 355              		.type	S3_DETECTED, %function
 356              	S3_DETECTED:
 357              	.LFB65:
  80:main.c        **** 
  81:main.c        **** CY_ISR(S3_DETECTED) {
 358              		.loc 1 81 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 9


 363 0000 80B4     		push	{r7}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
  82:main.c        ****     // Sensor has detected WHITE
  83:main.c        ****     s3 = 1; // , Black = 0, White = 1
 368              		.loc 1 83 0
 369 0004 034B     		ldr	r3, .L7
 370 0006 0122     		movs	r2, #1
 371 0008 1A70     		strb	r2, [r3]
  84:main.c        ****     //LED_Write(1u);
  85:main.c        **** }
 372              		.loc 1 85 0
 373 000a 00BF     		nop
 374 000c BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 000e 80BC     		pop	{r7}
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 0010 7047     		bx	lr
 381              	.L8:
 382 0012 00BF     		.align	2
 383              	.L7:
 384 0014 00000000 		.word	s3
 385              		.cfi_endproc
 386              	.LFE65:
 387              		.size	S3_DETECTED, .-S3_DETECTED
 388              		.section	.text.S4_DETECTED,"ax",%progbits
 389              		.align	2
 390              		.global	S4_DETECTED
 391              		.thumb
 392              		.thumb_func
 393              		.type	S4_DETECTED, %function
 394              	S4_DETECTED:
 395              	.LFB66:
  86:main.c        **** 
  87:main.c        **** CY_ISR(S4_DETECTED) {
 396              		.loc 1 87 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 401 0000 80B4     		push	{r7}
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
  88:main.c        ****     // Sensor has detected WHITE
  89:main.c        ****     s4 = 1; // , Black = 0, White = 1
 406              		.loc 1 89 0
 407 0004 034B     		ldr	r3, .L10
 408 0006 0122     		movs	r2, #1
 409 0008 1A70     		strb	r2, [r3]
  90:main.c        ****     //LED_Write(1u);
  91:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 10


 410              		.loc 1 91 0
 411 000a 00BF     		nop
 412 000c BD46     		mov	sp, r7
 413              		.cfi_def_cfa_register 13
 414              		@ sp needed
 415 000e 80BC     		pop	{r7}
 416              		.cfi_restore 7
 417              		.cfi_def_cfa_offset 0
 418 0010 7047     		bx	lr
 419              	.L11:
 420 0012 00BF     		.align	2
 421              	.L10:
 422 0014 00000000 		.word	s4
 423              		.cfi_endproc
 424              	.LFE66:
 425              		.size	S4_DETECTED, .-S4_DETECTED
 426              		.section	.text.S5_DETECTED,"ax",%progbits
 427              		.align	2
 428              		.global	S5_DETECTED
 429              		.thumb
 430              		.thumb_func
 431              		.type	S5_DETECTED, %function
 432              	S5_DETECTED:
 433              	.LFB67:
  92:main.c        **** 
  93:main.c        **** CY_ISR(S5_DETECTED) {
 434              		.loc 1 93 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439 0000 80B4     		push	{r7}
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 0002 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
  94:main.c        ****     // Sensor has detected WHITE
  95:main.c        ****     s5 = 1; // , Black = 0, White = 1
 444              		.loc 1 95 0
 445 0004 034B     		ldr	r3, .L13
 446 0006 0122     		movs	r2, #1
 447 0008 1A70     		strb	r2, [r3]
  96:main.c        ****     //LED_Write(1u);
  97:main.c        **** }
 448              		.loc 1 97 0
 449 000a 00BF     		nop
 450 000c BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 000e 80BC     		pop	{r7}
 454              		.cfi_restore 7
 455              		.cfi_def_cfa_offset 0
 456 0010 7047     		bx	lr
 457              	.L14:
 458 0012 00BF     		.align	2
 459              	.L13:
 460 0014 00000000 		.word	s5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 11


 461              		.cfi_endproc
 462              	.LFE67:
 463              		.size	S5_DETECTED, .-S5_DETECTED
 464              		.section	.text.S6_DETECTED,"ax",%progbits
 465              		.align	2
 466              		.global	S6_DETECTED
 467              		.thumb
 468              		.thumb_func
 469              		.type	S6_DETECTED, %function
 470              	S6_DETECTED:
 471              	.LFB68:
  98:main.c        **** 
  99:main.c        **** CY_ISR(S6_DETECTED) {
 472              		.loc 1 99 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              		.cfi_def_cfa_offset 4
 479              		.cfi_offset 7, -4
 480 0002 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 100:main.c        ****     // Sensor has detected WHITE
 101:main.c        ****     s6 = 1; // , Black = 0, White = 1
 482              		.loc 1 101 0
 483 0004 034B     		ldr	r3, .L16
 484 0006 0122     		movs	r2, #1
 485 0008 1A70     		strb	r2, [r3]
 102:main.c        ****     //LED_Write(1u);
 103:main.c        **** }
 486              		.loc 1 103 0
 487 000a 00BF     		nop
 488 000c BD46     		mov	sp, r7
 489              		.cfi_def_cfa_register 13
 490              		@ sp needed
 491 000e 80BC     		pop	{r7}
 492              		.cfi_restore 7
 493              		.cfi_def_cfa_offset 0
 494 0010 7047     		bx	lr
 495              	.L17:
 496 0012 00BF     		.align	2
 497              	.L16:
 498 0014 00000000 		.word	s6
 499              		.cfi_endproc
 500              	.LFE68:
 501              		.size	S6_DETECTED, .-S6_DETECTED
 502              		.section	.text.TIMER_FINISH,"ax",%progbits
 503              		.align	2
 504              		.global	TIMER_FINISH
 505              		.thumb
 506              		.thumb_func
 507              		.type	TIMER_FINISH, %function
 508              	TIMER_FINISH:
 509              	.LFB69:
 104:main.c        **** 
 105:main.c        **** CY_ISR(TIMER_FINISH) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 12


 510              		.loc 1 105 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514 0000 80B5     		push	{r7, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 106:main.c        ****     if (currentDirection == Stop) {
 520              		.loc 1 106 0
 521 0004 0A4B     		ldr	r3, .L21
 522 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523 0008 052B     		cmp	r3, #5
 524 000a 05D1     		bne	.L19
 107:main.c        ****         stopBuffer = stopBuffer + 1;
 525              		.loc 1 107 0
 526 000c 094B     		ldr	r3, .L21+4
 527 000e 1B68     		ldr	r3, [r3]
 528 0010 0133     		adds	r3, r3, #1
 529 0012 084A     		ldr	r2, .L21+4
 530 0014 1360     		str	r3, [r2]
 531 0016 02E0     		b	.L20
 532              	.L19:
 108:main.c        ****     } else {
 109:main.c        ****         stopBuffer = 0;
 533              		.loc 1 109 0
 534 0018 064B     		ldr	r3, .L21+4
 535 001a 0022     		movs	r2, #0
 536 001c 1A60     		str	r2, [r3]
 537              	.L20:
 110:main.c        ****     }
 111:main.c        ****     SetRobotMovement(); 
 538              		.loc 1 111 0
 539 001e FFF7FEFF 		bl	SetRobotMovement
 112:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 540              		.loc 1 112 0
 541 0022 FFF7FEFF 		bl	ResetSensorFlags
 113:main.c        ****     Timer_LED_ReadStatusRegister();
 542              		.loc 1 113 0
 543 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 114:main.c        **** }
 544              		.loc 1 114 0
 545 002a 00BF     		nop
 546 002c 80BD     		pop	{r7, pc}
 547              	.L22:
 548 002e 00BF     		.align	2
 549              	.L21:
 550 0030 00000000 		.word	currentDirection
 551 0034 00000000 		.word	stopBuffer
 552              		.cfi_endproc
 553              	.LFE69:
 554              		.size	TIMER_FINISH, .-TIMER_FINISH
 555              		.section	.text.main,"ax",%progbits
 556              		.align	2
 557              		.global	main
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 13


 558              		.thumb
 559              		.thumb_func
 560              		.type	main, %function
 561              	main:
 562              	.LFB70:
 115:main.c        **** 
 116:main.c        **** 
 117:main.c        **** int main()
 118:main.c        **** {
 563              		.loc 1 118 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 119:main.c        **** // ----- INITIALIZATIONS ----------
 120:main.c        ****     CYGlobalIntEnable;
 573              		.loc 1 120 0
 574              		.syntax unified
 575              	@ 120 "main.c" 1
 576 0004 62B6     		CPSIE   i
 577              	@ 0 "" 2
 121:main.c        ****     ResetSensorFlags();
 578              		.loc 1 121 0
 579              		.thumb
 580              		.syntax unified
 581 0006 FFF7FEFF 		bl	ResetSensorFlags
 122:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 582              		.loc 1 122 0
 583 000a FFF7FEFF 		bl	init
 123:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 584              		.loc 1 123 0
 585 000e 1F48     		ldr	r0, .L27
 586 0010 FFF7FEFF 		bl	isr_speed_StartEx
 124:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 587              		.loc 1 124 0
 588 0014 1E48     		ldr	r0, .L27+4
 589 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 125:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 590              		.loc 1 125 0
 591 001a 1E48     		ldr	r0, .L27+8
 592 001c FFF7FEFF 		bl	S3_detected_StartEx
 126:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 593              		.loc 1 126 0
 594 0020 1D48     		ldr	r0, .L27+12
 595 0022 FFF7FEFF 		bl	S4_detected_StartEx
 127:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 596              		.loc 1 127 0
 597 0026 1D48     		ldr	r0, .L27+16
 598 0028 FFF7FEFF 		bl	S5_detected_StartEx
 128:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 599              		.loc 1 128 0
 600 002c 1C48     		ldr	r0, .L27+20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 14


 601 002e FFF7FEFF 		bl	S6_detected_StartEx
 129:main.c        ****     Timer_LED_Start();
 602              		.loc 1 129 0
 603 0032 FFF7FEFF 		bl	Timer_LED_Start
 130:main.c        ****     instructionList = findPath(map, food_list, 0);
 604              		.loc 1 130 0
 605 0036 0022     		movs	r2, #0
 606 0038 1A49     		ldr	r1, .L27+24
 607 003a 1B48     		ldr	r0, .L27+28
 608 003c FFF7FEFF 		bl	findPath
 609 0040 0246     		mov	r2, r0
 610 0042 1A4B     		ldr	r3, .L27+32
 611 0044 1A60     		str	r2, [r3]
 131:main.c        ****     numSteps = instructionsListLength();
 612              		.loc 1 131 0
 613 0046 FFF7FEFF 		bl	instructionsListLength
 614 004a 0346     		mov	r3, r0
 615 004c 1A46     		mov	r2, r3
 616 004e 184B     		ldr	r3, .L27+36
 617 0050 1A60     		str	r2, [r3]
 132:main.c        **** // ------USB SETUP ----------------    
 133:main.c        **** #ifdef USE_USB    
 134:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 618              		.loc 1 134 0
 619 0052 0121     		movs	r1, #1
 620 0054 0020     		movs	r0, #0
 621 0056 FFF7FEFF 		bl	USBUART_Start
 135:main.c        **** #endif        
 136:main.c        ****     RF_BT_SELECT_Write(0);
 622              		.loc 1 136 0
 623 005a 0020     		movs	r0, #0
 624 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 625              	.L26:
 137:main.c        ****     
 138:main.c        ****     //usbPutString("Initialised UART");
 139:main.c        ****     for(;;)
 140:main.c        ****     {
 141:main.c        ****         if(timerInt == 1) {
 626              		.loc 1 141 0
 627 0060 144B     		ldr	r3, .L27+40
 628 0062 1B68     		ldr	r3, [r3]
 629 0064 012B     		cmp	r3, #1
 630 0066 08D1     		bne	.L24
 142:main.c        ****             timerInt = 0;
 631              		.loc 1 142 0
 632 0068 124B     		ldr	r3, .L27+40
 633 006a 0022     		movs	r2, #0
 634 006c 1A60     		str	r2, [r3]
 143:main.c        ****             // calculate RPM of M2
 144:main.c        ****             quadCountToRPM(quadDec2Count);
 635              		.loc 1 144 0
 636 006e 124B     		ldr	r3, .L27+44
 637 0070 1B68     		ldr	r3, [r3]
 638 0072 9BB2     		uxth	r3, r3
 639 0074 1846     		mov	r0, r3
 640 0076 FFF7FEFF 		bl	quadCountToRPM
 641              	.L24:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 15


 145:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 146:main.c        ****             //usbPutString(buffer);
 147:main.c        ****             //usbPutString(" ");
 148:main.c        ****         }
 149:main.c        ****         //handle_usb();
 150:main.c        ****         if (flag_KB_string == 1)
 642              		.loc 1 150 0
 643 007a 104B     		ldr	r3, .L27+48
 644 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 645 007e 012B     		cmp	r3, #1
 646 0080 EED1     		bne	.L26
 151:main.c        ****         {
 152:main.c        ****             //usbPutString("Total Distance: ");
 153:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 154:main.c        ****             //usbPutString(buffer);
 155:main.c        ****             flag_KB_string = 0;
 647              		.loc 1 155 0
 648 0082 0E4B     		ldr	r3, .L27+48
 649 0084 0022     		movs	r2, #0
 650 0086 1A70     		strb	r2, [r3]
 156:main.c        ****         }           
 157:main.c        ****     }
 651              		.loc 1 157 0
 652 0088 EAE7     		b	.L26
 653              	.L28:
 654 008a 00BF     		.align	2
 655              	.L27:
 656 008c 00000000 		.word	speedTimer
 657 0090 00000000 		.word	TIMER_FINISH
 658 0094 00000000 		.word	S3_DETECTED
 659 0098 00000000 		.word	S4_DETECTED
 660 009c 00000000 		.word	S5_DETECTED
 661 00a0 00000000 		.word	S6_DETECTED
 662 00a4 00000000 		.word	food_list
 663 00a8 00000000 		.word	map
 664 00ac 00000000 		.word	instructionList
 665 00b0 00000000 		.word	numSteps
 666 00b4 00000000 		.word	timerInt
 667 00b8 00000000 		.word	quadDec2Count
 668 00bc 00000000 		.word	flag_KB_string
 669              		.cfi_endproc
 670              	.LFE70:
 671              		.size	main, .-main
 672              		.global	__aeabi_fmul
 673              		.global	__aeabi_f2iz
 674              		.section	.text.quadCountToRPM,"ax",%progbits
 675              		.align	2
 676              		.global	quadCountToRPM
 677              		.thumb
 678              		.thumb_func
 679              		.type	quadCountToRPM, %function
 680              	quadCountToRPM:
 681              	.LFB71:
 158:main.c        ****     return 0;
 159:main.c        **** }
 160:main.c        **** 
 161:main.c        **** // Calculations
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 16


 162:main.c        **** //* ========================================
 163:main.c        **** int16 quadCountToRPM(uint16 count)
 164:main.c        **** {
 682              		.loc 1 164 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 16
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686 0000 90B5     		push	{r4, r7, lr}
 687              		.cfi_def_cfa_offset 12
 688              		.cfi_offset 4, -12
 689              		.cfi_offset 7, -8
 690              		.cfi_offset 14, -4
 691 0002 85B0     		sub	sp, sp, #20
 692              		.cfi_def_cfa_offset 32
 693 0004 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 695 0006 0346     		mov	r3, r0
 696 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 165:main.c        ****     float cps = count/57.00;
 697              		.loc 1 165 0
 698 000a FB88     		ldrh	r3, [r7, #6]
 699 000c 1846     		mov	r0, r3
 700 000e FFF7FEFF 		bl	__aeabi_i2d
 701 0012 4FF00002 		mov	r2, #0
 702 0016 0D4B     		ldr	r3, .L31
 703 0018 FFF7FEFF 		bl	__aeabi_ddiv
 704 001c 0346     		mov	r3, r0
 705 001e 0C46     		mov	r4, r1
 706 0020 1846     		mov	r0, r3
 707 0022 2146     		mov	r1, r4
 708 0024 FFF7FEFF 		bl	__aeabi_d2f
 709 0028 0346     		mov	r3, r0
 710 002a FB60     		str	r3, [r7, #12]	@ float
 166:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 711              		.loc 1 166 0
 712 002c 0849     		ldr	r1, .L31+4
 713 002e F868     		ldr	r0, [r7, #12]	@ float
 714 0030 FFF7FEFF 		bl	__aeabi_fmul
 715 0034 0346     		mov	r3, r0
 716 0036 1846     		mov	r0, r3
 717 0038 FFF7FEFF 		bl	__aeabi_f2iz
 718 003c 0346     		mov	r3, r0
 719 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 167:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 168:main.c        ****     return rpm;
 720              		.loc 1 168 0
 721 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 169:main.c        ****     //usbPutString(buffer);
 170:main.c        ****     //usbPutString("rpm ");
 171:main.c        **** }
 722              		.loc 1 171 0
 723 0044 1846     		mov	r0, r3
 724 0046 1437     		adds	r7, r7, #20
 725              		.cfi_def_cfa_offset 12
 726 0048 BD46     		mov	sp, r7
 727              		.cfi_def_cfa_register 13
 728              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 17


 729 004a 90BD     		pop	{r4, r7, pc}
 730              	.L32:
 731              		.align	2
 732              	.L31:
 733 004c 00804C40 		.word	1078755328
 734 0050 00007041 		.word	1097859072
 735              		.cfi_endproc
 736              	.LFE71:
 737              		.size	quadCountToRPM, .-quadCountToRPM
 738              		.section	.text.ResetSensorFlags,"ax",%progbits
 739              		.align	2
 740              		.global	ResetSensorFlags
 741              		.thumb
 742              		.thumb_func
 743              		.type	ResetSensorFlags, %function
 744              	ResetSensorFlags:
 745              	.LFB72:
 172:main.c        **** 
 173:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 174:main.c        **** void ResetSensorFlags() {
 746              		.loc 1 174 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 0000 80B4     		push	{r7}
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 7, -4
 754 0002 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 175:main.c        ****     s3 = 0;
 756              		.loc 1 175 0
 757 0004 074B     		ldr	r3, .L34
 758 0006 0022     		movs	r2, #0
 759 0008 1A70     		strb	r2, [r3]
 176:main.c        ****     s4 = 0;
 760              		.loc 1 176 0
 761 000a 074B     		ldr	r3, .L34+4
 762 000c 0022     		movs	r2, #0
 763 000e 1A70     		strb	r2, [r3]
 177:main.c        ****     s5 = 0;
 764              		.loc 1 177 0
 765 0010 064B     		ldr	r3, .L34+8
 766 0012 0022     		movs	r2, #0
 767 0014 1A70     		strb	r2, [r3]
 178:main.c        ****     s6 = 0;
 768              		.loc 1 178 0
 769 0016 064B     		ldr	r3, .L34+12
 770 0018 0022     		movs	r2, #0
 771 001a 1A70     		strb	r2, [r3]
 179:main.c        **** }
 772              		.loc 1 179 0
 773 001c 00BF     		nop
 774 001e BD46     		mov	sp, r7
 775              		.cfi_def_cfa_register 13
 776              		@ sp needed
 777 0020 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 18


 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 0022 7047     		bx	lr
 781              	.L35:
 782              		.align	2
 783              	.L34:
 784 0024 00000000 		.word	s3
 785 0028 00000000 		.word	s4
 786 002c 00000000 		.word	s5
 787 0030 00000000 		.word	s6
 788              		.cfi_endproc
 789              	.LFE72:
 790              		.size	ResetSensorFlags, .-ResetSensorFlags
 791              		.global	xBlocksize
 792              		.data
 793 0045 000000   		.align	2
 794              		.type	xBlocksize, %object
 795              		.size	xBlocksize, 4
 796              	xBlocksize:
 797 0048 0000F442 		.word	1123287040
 798              		.global	yBlocksize
 799              		.align	2
 800              		.type	yBlocksize, %object
 801              		.size	yBlocksize, 4
 802              	yBlocksize:
 803 004c 0000A042 		.word	1117782016
 804              		.global	currentRow
 805              		.type	currentRow, %object
 806              		.size	currentRow, 1
 807              	currentRow:
 808 0050 01       		.byte	1
 809              		.global	currentCol
 810              		.type	currentCol, %object
 811              		.size	currentCol, 1
 812              	currentCol:
 813 0051 01       		.byte	1
 814              		.global	stoppedAfterTurn
 815              		.bss
 816              		.type	stoppedAfterTurn, %object
 817              		.size	stoppedAfterTurn, 1
 818              	stoppedAfterTurn:
 819 003c 00       		.space	1
 820              		.global	ignoreSensor
 821              		.type	ignoreSensor, %object
 822              		.size	ignoreSensor, 1
 823              	ignoreSensor:
 824 003d 00       		.space	1
 825              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 826              		.align	2
 827              		.global	ForwardCourseCorrection
 828              		.thumb
 829              		.thumb_func
 830              		.type	ForwardCourseCorrection, %function
 831              	ForwardCourseCorrection:
 832              	.LFB73:
 180:main.c        **** 
 181:main.c        **** float xBlocksize = 122; // 122 mm
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 19


 182:main.c        **** float yBlocksize = 80; // 80 mm
 183:main.c        **** uint8 currentRow = 1;
 184:main.c        **** uint8 currentCol = 1;
 185:main.c        **** 
 186:main.c        **** /*enum DirectionState GetNextStep() {
 187:main.c        ****     enum DirectionState directionState;
 188:main.c        ****     // Determines robot movement and orientation to follow optimal path
 189:main.c        ****     // enum DirectionState directionState = Stop;
 190:main.c        ****     previousOrientation = currentOrientation;
 191:main.c        ****     
 192:main.c        ****     if(map[currentRow][currentCol] == 9) {
 193:main.c        ****         directionState = Stop; // reached target
 194:main.c        ****         return directionState;
 195:main.c        ****     }
 196:main.c        ****         
 197:main.c        ****     switch (previousOrientation) {
 198:main.c        ****             case Up:
 199:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 200:main.c        ****                     currentOrientation = Up; 
 201:main.c        ****                     directionState = Forward;
 202:main.c        ****                     currentRow--;// update position
 203:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 204:main.c        ****                     currentOrientation = Left;
 205:main.c        ****                     directionState = waitForLeftTurn;
 206:main.c        ****                     //currentRow--;
 207:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 208:main.c        ****                     currentOrientation = Right;
 209:main.c        ****                     directionState = waitForRightTurn;
 210:main.c        ****                     //currentRow++; // update position
 211:main.c        ****                 }
 212:main.c        ****                 break;
 213:main.c        ****             case Down:
 214:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 215:main.c        ****                     currentOrientation = Down;
 216:main.c        ****                     directionState = Forward;
 217:main.c        ****                     currentRow++;
 218:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 219:main.c        ****                     currentOrientation = Left;
 220:main.c        ****                     directionState = waitForRightTurn;
 221:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 222:main.c        ****                     currentOrientation = Right;
 223:main.c        ****                     directionState = waitForLeftTurn;
 224:main.c        ****                 }
 225:main.c        ****                 break;
 226:main.c        ****             case Left:
 227:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 228:main.c        ****                     currentOrientation = Left;
 229:main.c        ****                     directionState = Forward;
 230:main.c        ****                     currentCol--; // update position
 231:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 232:main.c        ****                     currentOrientation = Up;
 233:main.c        ****                     directionState = waitForRightTurn;
 234:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 235:main.c        ****                     currentOrientation = Down;
 236:main.c        ****                     directionState = waitForLeftTurn;
 237:main.c        ****                 }
 238:main.c        ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 20


 239:main.c        ****             case Right:
 240:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 241:main.c        ****                     currentOrientation = Right;
 242:main.c        ****                     directionState = Forward;
 243:main.c        ****                     currentCol++; // update position
 244:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 245:main.c        ****                     currentOrientation = Up;
 246:main.c        ****                     directionState = waitForLeftTurn;
 247:main.c        ****                     //currentCol++; // update position
 248:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 249:main.c        ****                     currentOrientation = Down;
 250:main.c        ****                     directionState = waitForRightTurn;
 251:main.c        ****                     //currentCol--; // update position
 252:main.c        ****                 }
 253:main.c        ****                 break;
 254:main.c        ****             default:
 255:main.c        ****                 break;
 256:main.c        ****         }
 257:main.c        ****     
 258:main.c        ****     return directionState;
 259:main.c        **** }
 260:main.c        **** */
 261:main.c        **** uint8 stoppedAfterTurn = 0;
 262:main.c        **** uint8 ignoreSensor = 0;
 263:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 264:main.c        **** /*
 265:main.c        **** enum RobotMovement CheckSensorDirection() {
 266:main.c        ****     float blocksize;
 267:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 268:main.c        ****         blocksize = yBlocksize;
 269:main.c        ****     } else {
 270:main.c        ****         blocksize = xBlocksize;
 271:main.c        ****     }
 272:main.c        ****     //if(currentInstruction)
 273:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 274:main.c        ****     
 275:main.c        ****     if (stoppedAfterTurn == 1) {
 276:main.c        ****         if (stopBuffer <= 50) {
 277:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 278:main.c        ****             previousDirection = directionState;
 279:main.c        ****             return directionState;
 280:main.c        ****         }
 281:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 282:main.c        ****         totalDistance = 0; // reset distance
 283:main.c        ****         previousDirection = directionState;
 284:main.c        ****         stoppedAfterTurn = 0;
 285:main.c        ****         return directionState;
 286:main.c        ****     }
 287:main.c        ****     if (totalDistance >= blocksize) {
 288:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 289:main.c        ****         totalDistance = 0; // reset distance
 290:main.c        ****         previousDirection = directionState;
 291:main.c        ****         return directionState;
 292:main.c        ****     }
 293:main.c        ****     
 294:main.c        ****     // STOP BUFFER * ========================================
 295:main.c        ****     if (previousDirection == Stop) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 21


 296:main.c        ****         if (stopBuffer <= 50) {
 297:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 298:main.c        ****             previousDirection = directionState;
 299:main.c        ****         } else {
 300:main.c        ****             //directionState = ForwardAfterTurn;
 301:main.c        ****         }
 302:main.c        ****         return directionState;
 303:main.c        ****     }
 304:main.c        **** 
 305:main.c        ****     // TURNING * ========================================    
 306:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 307:main.c        ****         if (s3 || s4) {
 308:main.c        ****             //ignoreSensor = 0;
 309:main.c        ****             //usbPutString("Forward\n");
 310:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 311:main.c        ****             previousDirection = directionState;
 312:main.c        ****             return directionState;
 313:main.c        ****         }
 314:main.c        ****     }
 315:main.c        **** 
 316:main.c        ****     if(previousDirection == waitForRightTurn) {
 317:main.c        ****         //ignoreSensor = 0;
 318:main.c        ****         if(!s4) {
 319:main.c        ****             //usbPutString("Turn Right\n");
 320:main.c        ****             directionState = TurnRight;
 321:main.c        ****             previousDirection = directionState;
 322:main.c        ****             return directionState;
 323:main.c        ****         } else {
 324:main.c        ****             //usbPutString("Wait for Right Turn\n");
 325:main.c        ****             directionState = waitForRightTurn;
 326:main.c        ****             previousDirection = directionState;
 327:main.c        ****             return directionState;
 328:main.c        ****         }
 329:main.c        ****     }
 330:main.c        **** 
 331:main.c        ****     if(previousDirection == waitForLeftTurn) {
 332:main.c        ****         //ignoreSensor = 0;
 333:main.c        ****         if(!s3) {
 334:main.c        ****             //usbPutString("Turn Left\n");
 335:main.c        ****             directionState = TurnLeft;
 336:main.c        ****             previousDirection = directionState;
 337:main.c        ****             return directionState;
 338:main.c        ****         } else {
 339:main.c        ****             //usbPutString("Wait for Left Turn\n");
 340:main.c        ****             directionState = waitForLeftTurn;
 341:main.c        ****             previousDirection = directionState;
 342:main.c        ****             return directionState;
 343:main.c        ****         }
 344:main.c        ****     }
 345:main.c        **** 
 346:main.c        ****     if(previousDirection == TurnRight) {
 347:main.c        ****         if(s5 && s6) {
 348:main.c        ****             //usbPutString("Turn Right\n");
 349:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 350:main.c        ****             previousDirection = directionState;
 351:main.c        ****             return directionState;
 352:main.c        ****         } 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 22


 353:main.c        ****         else if (!s5 || !s6) {
 354:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 355:main.c        ****             //usbPutString("Stop after Right Turn");
 356:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 357:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 358:main.c        ****             previousDirection = directionState;
 359:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 360:main.c        ****             return directionState;
 361:main.c        ****         }
 362:main.c        ****     }    
 363:main.c        **** 
 364:main.c        ****     if(previousDirection == TurnLeft) {
 365:main.c        ****         if(s5 && s6) {
 366:main.c        ****             //usbPutString("Turn Left\n");
 367:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 368:main.c        ****             previousDirection = directionState;
 369:main.c        ****             return directionState;
 370:main.c        ****         } 
 371:main.c        ****         else if (!s5 || !s6) {
 372:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 373:main.c        ****            // usbPutString("Stop after Left Turn\n");
 374:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 375:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 376:main.c        ****             previousDirection = directionState;
 377:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 378:main.c        ****             return directionState;
 379:main.c        ****         }
 380:main.c        ****     }
 381:main.c        ****     
 382:main.c        ****     // COURSE CORRECTION * ========================================
 383:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 384:main.c        ****         //ignoreSensor = 0;
 385:main.c        ****         if(s6) {
 386:main.c        ****             //usbPutString("Adjust to the left\n");
 387:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 388:main.c        ****             previousDirection = directionState;
 389:main.c        ****             return directionState;
 390:main.c        ****         }
 391:main.c        ****         if(s5) {
 392:main.c        ****             //usbPutString("Adjust to the right\n");
 393:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 394:main.c        ****             previousDirection = directionState;
 395:main.c        ****             return directionState;
 396:main.c        ****         }
 397:main.c        ****     }
 398:main.c        ****     
 399:main.c        ****     // FORWARD * ========================================
 400:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 401:main.c        ****         //usbPutString("Forward\n");
 402:main.c        ****         directionState = Forward;
 403:main.c        ****         previousDirection = directionState;
 404:main.c        ****         return directionState;   
 405:main.c        ****     }
 406:main.c        **** 
 407:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 408:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 409:main.c        ****     if (previousDirection == Unknown) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 23


 410:main.c        ****         directionState = Forward;
 411:main.c        ****         previousDirection = directionState;
 412:main.c        ****         return directionState;
 413:main.c        ****     }
 414:main.c        **** 
 415:main.c        ****     // Possible reason
 416:main.c        ****     previousDirection = currentDirection;
 417:main.c        ****     return previousDirection;
 418:main.c        **** }
 419:main.c        **** */
 420:main.c        **** 
 421:main.c        **** enum RobotMovement ForwardCourseCorrection();
 422:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 833              		.loc 1 422 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 1, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838 0000 80B4     		push	{r7}
 839              		.cfi_def_cfa_offset 4
 840              		.cfi_offset 7, -4
 841 0002 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 423:main.c        ****     // if S5 and S6 are on black, move forward
 424:main.c        ****     if (!s5 && !s6) {
 843              		.loc 1 424 0
 844 0004 1C4B     		ldr	r3, .L44
 845 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 846 0008 002B     		cmp	r3, #0
 847 000a 0FD1     		bne	.L37
 848              		.loc 1 424 0 is_stmt 0 discriminator 1
 849 000c 1B4B     		ldr	r3, .L44+4
 850 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 851 0010 002B     		cmp	r3, #0
 852 0012 0BD1     		bne	.L37
 425:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 853              		.loc 1 425 0 is_stmt 1
 854 0014 1A4B     		ldr	r3, .L44+8
 855 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 856 0018 032B     		cmp	r3, #3
 857 001a 01D0     		beq	.L38
 426:main.c        ****             return AdjustToTheLeft;
 858              		.loc 1 426 0
 859 001c 0323     		movs	r3, #3
 860 001e 26E0     		b	.L39
 861              	.L38:
 427:main.c        ****         }
 428:main.c        ****         if (previousDirection != AdjustToTheRight) {
 862              		.loc 1 428 0
 863 0020 174B     		ldr	r3, .L44+8
 864 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 0024 042B     		cmp	r3, #4
 866 0026 01D0     		beq	.L37
 429:main.c        ****             return AdjustToTheRight;    
 867              		.loc 1 429 0
 868 0028 0423     		movs	r3, #4
 869 002a 20E0     		b	.L39
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 24


 870              	.L37:
 430:main.c        ****         }
 431:main.c        ****     }
 432:main.c        ****     
 433:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 434:main.c        ****     if (s5 && s6) {
 871              		.loc 1 434 0
 872 002c 124B     		ldr	r3, .L44
 873 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 0030 002B     		cmp	r3, #0
 875 0032 0FD0     		beq	.L40
 876              		.loc 1 434 0 is_stmt 0 discriminator 1
 877 0034 114B     		ldr	r3, .L44+4
 878 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 879 0038 002B     		cmp	r3, #0
 880 003a 0BD0     		beq	.L40
 435:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 881              		.loc 1 435 0 is_stmt 1
 882 003c 104B     		ldr	r3, .L44+8
 883 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 0040 032B     		cmp	r3, #3
 885 0042 01D0     		beq	.L41
 436:main.c        ****             return AdjustToTheLeft;
 886              		.loc 1 436 0
 887 0044 0323     		movs	r3, #3
 888 0046 12E0     		b	.L39
 889              	.L41:
 437:main.c        ****         }
 438:main.c        ****         if (previousDirection != AdjustToTheRight) {
 890              		.loc 1 438 0
 891 0048 0D4B     		ldr	r3, .L44+8
 892 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 893 004c 042B     		cmp	r3, #4
 894 004e 01D0     		beq	.L40
 439:main.c        ****             return AdjustToTheRight;    
 895              		.loc 1 439 0
 896 0050 0423     		movs	r3, #4
 897 0052 0CE0     		b	.L39
 898              	.L40:
 440:main.c        ****         }
 441:main.c        ****     }
 442:main.c        **** 
 443:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 444:main.c        ****     if (s5) {
 899              		.loc 1 444 0
 900 0054 084B     		ldr	r3, .L44
 901 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 0058 002B     		cmp	r3, #0
 903 005a 01D0     		beq	.L42
 445:main.c        ****         return AdjustToTheRight;    
 904              		.loc 1 445 0
 905 005c 0423     		movs	r3, #4
 906 005e 06E0     		b	.L39
 907              	.L42:
 446:main.c        ****     }
 447:main.c        ****     if (s6) {
 908              		.loc 1 447 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 25


 909 0060 064B     		ldr	r3, .L44+4
 910 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 911 0064 002B     		cmp	r3, #0
 912 0066 01D0     		beq	.L43
 448:main.c        ****         return AdjustToTheLeft;    
 913              		.loc 1 448 0
 914 0068 0323     		movs	r3, #3
 915 006a 00E0     		b	.L39
 916              	.L43:
 449:main.c        ****     }
 450:main.c        ****    
 451:main.c        ****     // We should never actually get to this point
 452:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 453:main.c        ****     return Stop;
 917              		.loc 1 453 0
 918 006c 0523     		movs	r3, #5
 919              	.L39:
 454:main.c        **** }
 920              		.loc 1 454 0
 921 006e 1846     		mov	r0, r3
 922 0070 BD46     		mov	sp, r7
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 0072 80BC     		pop	{r7}
 926              		.cfi_restore 7
 927              		.cfi_def_cfa_offset 0
 928 0074 7047     		bx	lr
 929              	.L45:
 930 0076 00BF     		.align	2
 931              	.L44:
 932 0078 00000000 		.word	s5
 933 007c 00000000 		.word	s6
 934 0080 00000000 		.word	previousDirection
 935              		.cfi_endproc
 936              	.LFE73:
 937              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 938              		.global	__aeabi_fcmpge
 939              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 940              		.align	2
 941              		.global	GetMovementAccordingToInstruction
 942              		.thumb
 943              		.thumb_func
 944              		.type	GetMovementAccordingToInstruction, %function
 945              	GetMovementAccordingToInstruction:
 946              	.LFB74:
 455:main.c        **** 
 456:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 947              		.loc 1 456 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 8
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 82B0     		sub	sp, sp, #8
 956              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 26


 957 0004 00AF     		add	r7, sp, #0
 958              		.cfi_def_cfa_register 7
 457:main.c        ****     float blocksize;
 458:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 959              		.loc 1 458 0
 960 0006 984B     		ldr	r3, .L88
 961 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 000a 002B     		cmp	r3, #0
 963 000c 03D0     		beq	.L47
 964              		.loc 1 458 0 is_stmt 0 discriminator 1
 965 000e 964B     		ldr	r3, .L88
 966 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 967 0012 012B     		cmp	r3, #1
 968 0014 03D1     		bne	.L48
 969              	.L47:
 459:main.c        ****         blocksize = yBlocksize;
 970              		.loc 1 459 0 is_stmt 1
 971 0016 954B     		ldr	r3, .L88+4
 972 0018 1B68     		ldr	r3, [r3]	@ float
 973 001a 7B60     		str	r3, [r7, #4]	@ float
 974 001c 02E0     		b	.L49
 975              	.L48:
 460:main.c        ****     } else {
 461:main.c        ****         blocksize = xBlocksize;
 976              		.loc 1 461 0
 977 001e 944B     		ldr	r3, .L88+8
 978 0020 1B68     		ldr	r3, [r3]	@ float
 979 0022 7B60     		str	r3, [r7, #4]	@ float
 980              	.L49:
 462:main.c        ****     }
 463:main.c        ****     
 464:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 465:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 466:main.c        ****         // OR an EVENT happens in the current instruction
 467:main.c        ****         // e.g. CurrentInstruction: GoForward 
 468:main.c        ****         //      S3 on BLACK
 469:main.c        ****         //      Check Ignore Count
 470:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 471:main.c        ****     
 472:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 981              		.loc 1 472 0
 982 0024 934B     		ldr	r3, .L88+12
 983 0026 1B78     		ldrb	r3, [r3]
 984 0028 FB70     		strb	r3, [r7, #3]
 473:main.c        ****     
 474:main.c        ****     switch (currentInstructionDirection) {
 985              		.loc 1 474 0
 986 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 987 002c 052B     		cmp	r3, #5
 988 002e 00F26681 		bhi	.L50
 989 0032 01A2     		adr	r2, .L52
 990 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 991              		.p2align 2
 992              	.L52:
 993 0038 51000000 		.word	.L51+1
 994 003c 9D000000 		.word	.L53+1
 995 0040 53010000 		.word	.L54+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 27


 996 0044 FF020000 		.word	.L50+1
 997 0048 09020000 		.word	.L55+1
 998 004c D9020000 		.word	.L56+1
 999              		.p2align 1
 1000              	.L51:
 475:main.c        ****         case GoForward:
 476:main.c        ****             // if s3 or s4 go off, check ignoreCount
 477:main.c        ****             //      if ignoreCount == 0, go to next direction
 478:main.c        ****             //      return stop
 479:main.c        ****             if (!s3) {
 1001              		.loc 1 479 0
 1002 0050 894B     		ldr	r3, .L88+16
 1003 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 0054 002B     		cmp	r3, #0
 1005 0056 0CD1     		bne	.L57
 480:main.c        ****                 if (currentInstruction.ignoreL <= 0) {
 1006              		.loc 1 480 0
 1007 0058 864B     		ldr	r3, .L88+12
 1008 005a 5B68     		ldr	r3, [r3, #4]
 1009 005c 002B     		cmp	r3, #0
 1010 005e 03DC     		bgt	.L58
 481:main.c        ****                     MoveToNextInstruction();
 1011              		.loc 1 481 0
 1012 0060 FFF7FEFF 		bl	MoveToNextInstruction
 482:main.c        ****                     return Stop;
 1013              		.loc 1 482 0
 1014 0064 0523     		movs	r3, #5
 1015 0066 4BE1     		b	.L59
 1016              	.L58:
 483:main.c        ****                 }
 484:main.c        ****                 currentInstruction.ignoreL--;
 1017              		.loc 1 484 0
 1018 0068 824B     		ldr	r3, .L88+12
 1019 006a 5B68     		ldr	r3, [r3, #4]
 1020 006c 013B     		subs	r3, r3, #1
 1021 006e 814A     		ldr	r2, .L88+12
 1022 0070 5360     		str	r3, [r2, #4]
 1023              	.L57:
 485:main.c        ****             }
 486:main.c        ****             
 487:main.c        ****             if (!s4) {
 1024              		.loc 1 487 0
 1025 0072 824B     		ldr	r3, .L88+20
 1026 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 0076 002B     		cmp	r3, #0
 1028 0078 0CD1     		bne	.L60
 488:main.c        ****                 if (currentInstruction.ignoreR <= 0) {
 1029              		.loc 1 488 0
 1030 007a 7E4B     		ldr	r3, .L88+12
 1031 007c 9B68     		ldr	r3, [r3, #8]
 1032 007e 002B     		cmp	r3, #0
 1033 0080 03DC     		bgt	.L61
 489:main.c        ****                     MoveToNextInstruction();
 1034              		.loc 1 489 0
 1035 0082 FFF7FEFF 		bl	MoveToNextInstruction
 490:main.c        ****                     return Stop;
 1036              		.loc 1 490 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 28


 1037 0086 0523     		movs	r3, #5
 1038 0088 3AE1     		b	.L59
 1039              	.L61:
 491:main.c        ****                 }
 492:main.c        ****                 currentInstruction.ignoreR--;
 1040              		.loc 1 492 0
 1041 008a 7A4B     		ldr	r3, .L88+12
 1042 008c 9B68     		ldr	r3, [r3, #8]
 1043 008e 013B     		subs	r3, r3, #1
 1044 0090 784A     		ldr	r2, .L88+12
 1045 0092 9360     		str	r3, [r2, #8]
 1046              	.L60:
 493:main.c        ****             }
 494:main.c        ****             return ForwardCourseCorrection();
 1047              		.loc 1 494 0
 1048 0094 FFF7FEFF 		bl	ForwardCourseCorrection
 1049 0098 0346     		mov	r3, r0
 1050 009a 31E1     		b	.L59
 1051              	.L53:
 495:main.c        ****             break;
 496:main.c        ****         case waitForLeftTurn:
 497:main.c        ****             // continue moving forward until s3 goes on black
 498:main.c        ****             // if we are turning left already
 499:main.c        ****                 // wait until s5 || s6 are on black
 500:main.c        ****                 // return stop
 501:main.c        **** 
 502:main.c        ****             if (turnFinishedFlag) {
 1052              		.loc 1 502 0
 1053 009c 784B     		ldr	r3, .L88+24
 1054 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 00a0 002B     		cmp	r3, #0
 1056 00a2 0DD0     		beq	.L62
 503:main.c        ****                 if (s3) {
 1057              		.loc 1 503 0
 1058 00a4 744B     		ldr	r3, .L88+16
 1059 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 00a8 002B     		cmp	r3, #0
 1061 00aa 05D0     		beq	.L63
 504:main.c        ****                     turnFinishedFlag = 0;
 1062              		.loc 1 504 0
 1063 00ac 744B     		ldr	r3, .L88+24
 1064 00ae 0022     		movs	r2, #0
 1065 00b0 1A70     		strb	r2, [r3]
 505:main.c        ****                     MoveToNextInstruction();    
 1066              		.loc 1 505 0
 1067 00b2 FFF7FEFF 		bl	MoveToNextInstruction
 1068 00b6 03E0     		b	.L62
 1069              	.L63:
 506:main.c        ****                 }
 507:main.c        ****                 else {
 508:main.c        ****                     return ForwardCourseCorrection();        
 1070              		.loc 1 508 0
 1071 00b8 FFF7FEFF 		bl	ForwardCourseCorrection
 1072 00bc 0346     		mov	r3, r0
 1073 00be 1FE1     		b	.L59
 1074              	.L62:
 509:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 29


 510:main.c        ****             }
 511:main.c        ****             
 512:main.c        ****             
 513:main.c        ****             if (currentDirection == Stop) {
 1075              		.loc 1 513 0
 1076 00c0 704B     		ldr	r3, .L88+28
 1077 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 00c4 052B     		cmp	r3, #5
 1079 00c6 09D1     		bne	.L64
 514:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 515:main.c        ****                 if (stopBuffer <= 50) {
 1080              		.loc 1 515 0
 1081 00c8 6F4B     		ldr	r3, .L88+32
 1082 00ca 1B68     		ldr	r3, [r3]
 1083 00cc 322B     		cmp	r3, #50
 1084 00ce 01D8     		bhi	.L65
 516:main.c        ****                     return Stop;   
 1085              		.loc 1 516 0
 1086 00d0 0523     		movs	r3, #5
 1087 00d2 15E1     		b	.L59
 1088              	.L65:
 517:main.c        ****                 }
 518:main.c        ****                 return ForwardCourseCorrection();
 1089              		.loc 1 518 0
 1090 00d4 FFF7FEFF 		bl	ForwardCourseCorrection
 1091 00d8 0346     		mov	r3, r0
 1092 00da 11E1     		b	.L59
 1093              	.L64:
 519:main.c        ****             }
 520:main.c        ****          
 521:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 522:main.c        ****             if (currentDirection == TurnLeft) {
 1094              		.loc 1 522 0
 1095 00dc 694B     		ldr	r3, .L88+28
 1096 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 00e0 022B     		cmp	r3, #2
 1098 00e2 29D1     		bne	.L66
 523:main.c        ****                 // If turn started and we are still on black, continue turning
 524:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 525:main.c        ****                 if (turnStartedFlag) {
 1099              		.loc 1 525 0
 1100 00e4 694B     		ldr	r3, .L88+36
 1101 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1102 00e8 002B     		cmp	r3, #0
 1103 00ea 0ED0     		beq	.L67
 526:main.c        ****                     if (s3 && (s5 && s6)) {
 1104              		.loc 1 526 0
 1105 00ec 624B     		ldr	r3, .L88+16
 1106 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 00f0 002B     		cmp	r3, #0
 1108 00f2 0AD0     		beq	.L67
 1109              		.loc 1 526 0 is_stmt 0 discriminator 1
 1110 00f4 664B     		ldr	r3, .L88+40
 1111 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1112 00f8 002B     		cmp	r3, #0
 1113 00fa 06D0     		beq	.L67
 1114              		.loc 1 526 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 30


 1115 00fc 654B     		ldr	r3, .L88+44
 1116 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1117 0100 002B     		cmp	r3, #0
 1118 0102 02D0     		beq	.L67
 527:main.c        ****                         turnStartedFlag = 0;
 1119              		.loc 1 527 0 is_stmt 1
 1120 0104 614B     		ldr	r3, .L88+36
 1121 0106 0022     		movs	r2, #0
 1122 0108 1A70     		strb	r2, [r3]
 1123              	.L67:
 528:main.c        ****                     }
 529:main.c        ****                 }
 530:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1124              		.loc 1 530 0
 1125 010a 604B     		ldr	r3, .L88+36
 1126 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 010e 002B     		cmp	r3, #0
 1128 0110 10D1     		bne	.L68
 1129              		.loc 1 530 0 is_stmt 0 discriminator 1
 1130 0112 594B     		ldr	r3, .L88+16
 1131 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 0116 002B     		cmp	r3, #0
 1133 0118 0CD1     		bne	.L68
 1134              		.loc 1 530 0 discriminator 2
 1135 011a 5D4B     		ldr	r3, .L88+40
 1136 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 011e 002B     		cmp	r3, #0
 1138 0120 08D1     		bne	.L68
 1139              		.loc 1 530 0 discriminator 3
 1140 0122 5C4B     		ldr	r3, .L88+44
 1141 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1142 0126 002B     		cmp	r3, #0
 1143 0128 04D1     		bne	.L68
 531:main.c        ****                     turnFinishedFlag = 1;
 1144              		.loc 1 531 0 is_stmt 1
 1145 012a 554B     		ldr	r3, .L88+24
 1146 012c 0122     		movs	r2, #1
 1147 012e 1A70     		strb	r2, [r3]
 532:main.c        ****                     return Stop;
 1148              		.loc 1 532 0
 1149 0130 0523     		movs	r3, #5
 1150 0132 E5E0     		b	.L59
 1151              	.L68:
 533:main.c        ****                 }
 534:main.c        ****                 else
 535:main.c        ****                 {
 536:main.c        ****                     return TurnLeft;
 1152              		.loc 1 536 0
 1153 0134 0223     		movs	r3, #2
 1154 0136 E3E0     		b	.L59
 1155              	.L66:
 537:main.c        ****                 }
 538:main.c        ****             }
 539:main.c        ****             
 540:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 541:main.c        ****             if (!s3) {
 1156              		.loc 1 541 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 31


 1157 0138 4F4B     		ldr	r3, .L88+16
 1158 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1159 013c 002B     		cmp	r3, #0
 1160 013e 04D1     		bne	.L69
 542:main.c        ****                 turnStartedFlag = 1;
 1161              		.loc 1 542 0
 1162 0140 524B     		ldr	r3, .L88+36
 1163 0142 0122     		movs	r2, #1
 1164 0144 1A70     		strb	r2, [r3]
 543:main.c        ****                 return TurnLeft;
 1165              		.loc 1 543 0
 1166 0146 0223     		movs	r3, #2
 1167 0148 DAE0     		b	.L59
 1168              	.L69:
 544:main.c        ****             }
 545:main.c        ****             
 546:main.c        ****             // Otherwise, keep going forward
 547:main.c        ****             return ForwardCourseCorrection(); 
 1169              		.loc 1 547 0
 1170 014a FFF7FEFF 		bl	ForwardCourseCorrection
 1171 014e 0346     		mov	r3, r0
 1172 0150 D6E0     		b	.L59
 1173              	.L54:
 548:main.c        ****             break;
 549:main.c        ****         case waitForRightTurn:
 550:main.c        ****             // continue moving forward until s4 goes on black
 551:main.c        ****             // if we are turning left already
 552:main.c        ****                 // wait until s5 || s6 are on black
 553:main.c        ****                 // return stop
 554:main.c        **** 
 555:main.c        ****             if (turnFinishedFlag) {
 1174              		.loc 1 555 0
 1175 0152 4B4B     		ldr	r3, .L88+24
 1176 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 0156 002B     		cmp	r3, #0
 1178 0158 0DD0     		beq	.L70
 556:main.c        ****                 if (s4) {
 1179              		.loc 1 556 0
 1180 015a 484B     		ldr	r3, .L88+20
 1181 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182 015e 002B     		cmp	r3, #0
 1183 0160 05D0     		beq	.L71
 557:main.c        ****                     turnFinishedFlag = 0;
 1184              		.loc 1 557 0
 1185 0162 474B     		ldr	r3, .L88+24
 1186 0164 0022     		movs	r2, #0
 1187 0166 1A70     		strb	r2, [r3]
 558:main.c        ****                     MoveToNextInstruction();    
 1188              		.loc 1 558 0
 1189 0168 FFF7FEFF 		bl	MoveToNextInstruction
 1190 016c 03E0     		b	.L70
 1191              	.L71:
 559:main.c        ****                 }
 560:main.c        ****                 else {
 561:main.c        ****                     return ForwardCourseCorrection();        
 1192              		.loc 1 561 0
 1193 016e FFF7FEFF 		bl	ForwardCourseCorrection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 32


 1194 0172 0346     		mov	r3, r0
 1195 0174 C4E0     		b	.L59
 1196              	.L70:
 562:main.c        ****                 }
 563:main.c        ****             }
 564:main.c        ****             
 565:main.c        ****             
 566:main.c        ****             if (currentDirection == Stop) {
 1197              		.loc 1 566 0
 1198 0176 434B     		ldr	r3, .L88+28
 1199 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 017a 052B     		cmp	r3, #5
 1201 017c 09D1     		bne	.L72
 567:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 568:main.c        ****                 if (stopBuffer <= 50) {
 1202              		.loc 1 568 0
 1203 017e 424B     		ldr	r3, .L88+32
 1204 0180 1B68     		ldr	r3, [r3]
 1205 0182 322B     		cmp	r3, #50
 1206 0184 01D8     		bhi	.L73
 569:main.c        ****                     return Stop;   
 1207              		.loc 1 569 0
 1208 0186 0523     		movs	r3, #5
 1209 0188 BAE0     		b	.L59
 1210              	.L73:
 570:main.c        ****                 }
 571:main.c        **** 
 572:main.c        ****                 return ForwardCourseCorrection();
 1211              		.loc 1 572 0
 1212 018a FFF7FEFF 		bl	ForwardCourseCorrection
 1213 018e 0346     		mov	r3, r0
 1214 0190 B6E0     		b	.L59
 1215              	.L72:
 573:main.c        ****             }
 574:main.c        ****                       
 575:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 576:main.c        ****             if (currentDirection == TurnRight) {
 1216              		.loc 1 576 0
 1217 0192 3C4B     		ldr	r3, .L88+28
 1218 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1219 0196 012B     		cmp	r3, #1
 1220 0198 29D1     		bne	.L74
 577:main.c        ****                 // If turn started and we are still on black, continue turning
 578:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 579:main.c        ****                 if (turnStartedFlag) {
 1221              		.loc 1 579 0
 1222 019a 3C4B     		ldr	r3, .L88+36
 1223 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1224 019e 002B     		cmp	r3, #0
 1225 01a0 0ED0     		beq	.L75
 580:main.c        ****                     if (s4 && (s5 && s6)) {
 1226              		.loc 1 580 0
 1227 01a2 364B     		ldr	r3, .L88+20
 1228 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1229 01a6 002B     		cmp	r3, #0
 1230 01a8 0AD0     		beq	.L75
 1231              		.loc 1 580 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 33


 1232 01aa 394B     		ldr	r3, .L88+40
 1233 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 01ae 002B     		cmp	r3, #0
 1235 01b0 06D0     		beq	.L75
 1236              		.loc 1 580 0 discriminator 2
 1237 01b2 384B     		ldr	r3, .L88+44
 1238 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 01b6 002B     		cmp	r3, #0
 1240 01b8 02D0     		beq	.L75
 581:main.c        ****                         turnStartedFlag = 0;
 1241              		.loc 1 581 0 is_stmt 1
 1242 01ba 344B     		ldr	r3, .L88+36
 1243 01bc 0022     		movs	r2, #0
 1244 01be 1A70     		strb	r2, [r3]
 1245              	.L75:
 582:main.c        ****                     }
 583:main.c        ****                 }
 584:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1246              		.loc 1 584 0
 1247 01c0 324B     		ldr	r3, .L88+36
 1248 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1249 01c4 002B     		cmp	r3, #0
 1250 01c6 10D1     		bne	.L76
 1251              		.loc 1 584 0 is_stmt 0 discriminator 1
 1252 01c8 2C4B     		ldr	r3, .L88+20
 1253 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 01cc 002B     		cmp	r3, #0
 1255 01ce 0CD1     		bne	.L76
 1256              		.loc 1 584 0 discriminator 2
 1257 01d0 2F4B     		ldr	r3, .L88+40
 1258 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1259 01d4 002B     		cmp	r3, #0
 1260 01d6 08D1     		bne	.L76
 1261              		.loc 1 584 0 discriminator 3
 1262 01d8 2E4B     		ldr	r3, .L88+44
 1263 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1264 01dc 002B     		cmp	r3, #0
 1265 01de 04D1     		bne	.L76
 585:main.c        ****                     turnFinishedFlag = 1;
 1266              		.loc 1 585 0 is_stmt 1
 1267 01e0 274B     		ldr	r3, .L88+24
 1268 01e2 0122     		movs	r2, #1
 1269 01e4 1A70     		strb	r2, [r3]
 586:main.c        ****                     return Stop;
 1270              		.loc 1 586 0
 1271 01e6 0523     		movs	r3, #5
 1272 01e8 8AE0     		b	.L59
 1273              	.L76:
 587:main.c        ****                 }
 588:main.c        ****                 else
 589:main.c        ****                 {
 590:main.c        ****                     return TurnRight;
 1274              		.loc 1 590 0
 1275 01ea 0123     		movs	r3, #1
 1276 01ec 88E0     		b	.L59
 1277              	.L74:
 591:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 34


 592:main.c        ****             }
 593:main.c        ****             
 594:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 595:main.c        ****             if (!s4) {
 1278              		.loc 1 595 0
 1279 01ee 234B     		ldr	r3, .L88+20
 1280 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1281 01f2 002B     		cmp	r3, #0
 1282 01f4 04D1     		bne	.L77
 596:main.c        ****                 turnStartedFlag = 1;
 1283              		.loc 1 596 0
 1284 01f6 254B     		ldr	r3, .L88+36
 1285 01f8 0122     		movs	r2, #1
 1286 01fa 1A70     		strb	r2, [r3]
 597:main.c        ****                 return TurnRight;
 1287              		.loc 1 597 0
 1288 01fc 0123     		movs	r3, #1
 1289 01fe 7FE0     		b	.L59
 1290              	.L77:
 598:main.c        ****             }
 599:main.c        ****             
 600:main.c        ****             // Otherwise, keep going forward
 601:main.c        ****             return ForwardCourseCorrection(); 
 1291              		.loc 1 601 0
 1292 0200 FFF7FEFF 		bl	ForwardCourseCorrection
 1293 0204 0346     		mov	r3, r0
 1294 0206 7BE0     		b	.L59
 1295              	.L55:
 602:main.c        ****             break;
 603:main.c        ****         case ForwardUntilTarget:
 604:main.c        ****             // Reset distance on first iteration of this instruction
 605:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1296              		.loc 1 605 0
 1297 0208 234B     		ldr	r3, .L88+48
 1298 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 020c 002B     		cmp	r3, #0
 1300 020e 0ED1     		bne	.L78
 606:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1301              		.loc 1 606 0
 1302 0210 214B     		ldr	r3, .L88+48
 1303 0212 0122     		movs	r2, #1
 1304 0214 1A70     		strb	r2, [r3]
 607:main.c        ****                 totalDistance = 0;
 1305              		.loc 1 607 0
 1306 0216 214B     		ldr	r3, .L88+52
 1307 0218 4FF00002 		mov	r2, #0
 1308 021c 1A60     		str	r2, [r3]	@ float
 608:main.c        **** 
 609:main.c        ****                 blockSizeTotal = blocksize * 3;
 1309              		.loc 1 609 0
 1310 021e 2049     		ldr	r1, .L88+56
 1311 0220 7868     		ldr	r0, [r7, #4]	@ float
 1312 0222 FFF7FEFF 		bl	__aeabi_fmul
 1313 0226 0346     		mov	r3, r0
 1314 0228 1A46     		mov	r2, r3
 1315 022a 1E4B     		ldr	r3, .L88+60
 1316 022c 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 35


 1317              	.L78:
 610:main.c        ****             }
 611:main.c        ****             
 612:main.c        ****             if (!s3) {
 1318              		.loc 1 612 0
 1319 022e 124B     		ldr	r3, .L88+16
 1320 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1321 0232 002B     		cmp	r3, #0
 1322 0234 0CD1     		bne	.L79
 613:main.c        ****                 if (currentInstruction.ignoreL <= 0) {
 1323              		.loc 1 613 0
 1324 0236 0F4B     		ldr	r3, .L88+12
 1325 0238 5B68     		ldr	r3, [r3, #4]
 1326 023a 002B     		cmp	r3, #0
 1327 023c 03DC     		bgt	.L80
 614:main.c        ****                     MoveToNextInstruction();
 1328              		.loc 1 614 0
 1329 023e FFF7FEFF 		bl	MoveToNextInstruction
 615:main.c        ****                     return Stop;
 1330              		.loc 1 615 0
 1331 0242 0523     		movs	r3, #5
 1332 0244 5CE0     		b	.L59
 1333              	.L80:
 616:main.c        ****                 }
 617:main.c        ****                 currentInstruction.ignoreL--;
 1334              		.loc 1 617 0
 1335 0246 0B4B     		ldr	r3, .L88+12
 1336 0248 5B68     		ldr	r3, [r3, #4]
 1337 024a 013B     		subs	r3, r3, #1
 1338 024c 094A     		ldr	r2, .L88+12
 1339 024e 5360     		str	r3, [r2, #4]
 1340              	.L79:
 618:main.c        ****             }
 619:main.c        ****             
 620:main.c        ****             if (!s4) {
 1341              		.loc 1 620 0
 1342 0250 0A4B     		ldr	r3, .L88+20
 1343 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1344 0254 002B     		cmp	r3, #0
 1345 0256 2CD1     		bne	.L81
 621:main.c        ****                 if (currentInstruction.ignoreR <= 0) {
 1346              		.loc 1 621 0
 1347 0258 064B     		ldr	r3, .L88+12
 1348 025a 9B68     		ldr	r3, [r3, #8]
 1349 025c 002B     		cmp	r3, #0
 1350 025e 23DC     		bgt	.L82
 622:main.c        ****                     MoveToNextInstruction();
 1351              		.loc 1 622 0
 1352 0260 FFF7FEFF 		bl	MoveToNextInstruction
 623:main.c        ****                     return Stop;
 1353              		.loc 1 623 0
 1354 0264 0523     		movs	r3, #5
 1355 0266 4BE0     		b	.L59
 1356              	.L89:
 1357              		.align	2
 1358              	.L88:
 1359 0268 00000000 		.word	currentRobotOrientation
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 36


 1360 026c 00000000 		.word	yBlocksize
 1361 0270 00000000 		.word	xBlocksize
 1362 0274 00000000 		.word	currentInstruction
 1363 0278 00000000 		.word	s3
 1364 027c 00000000 		.word	s4
 1365 0280 00000000 		.word	turnFinishedFlag
 1366 0284 00000000 		.word	currentDirection
 1367 0288 00000000 		.word	stopBuffer
 1368 028c 00000000 		.word	turnStartedFlag
 1369 0290 00000000 		.word	s5
 1370 0294 00000000 		.word	s6
 1371 0298 00000000 		.word	forwardUntilTargetStartedFlag
 1372 029c 00000000 		.word	totalDistance
 1373 02a0 00004040 		.word	1077936128
 1374 02a4 00000000 		.word	blockSizeTotal
 1375              	.L82:
 624:main.c        ****                 }
 625:main.c        ****                 currentInstruction.ignoreR--;
 1376              		.loc 1 625 0
 1377 02a8 174B     		ldr	r3, .L90
 1378 02aa 9B68     		ldr	r3, [r3, #8]
 1379 02ac 013B     		subs	r3, r3, #1
 1380 02ae 164A     		ldr	r2, .L90
 1381 02b0 9360     		str	r3, [r2, #8]
 1382              	.L81:
 626:main.c        ****             }
 627:main.c        ****             
 628:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 629:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1383              		.loc 1 629 0
 1384 02b2 164B     		ldr	r3, .L90+4
 1385 02b4 1A68     		ldr	r2, [r3]	@ float
 1386 02b6 164B     		ldr	r3, .L90+8
 1387 02b8 1B68     		ldr	r3, [r3]	@ float
 1388 02ba 1946     		mov	r1, r3
 1389 02bc 1046     		mov	r0, r2
 1390 02be FFF7FEFF 		bl	__aeabi_fcmpge
 1391 02c2 0346     		mov	r3, r0
 1392 02c4 002B     		cmp	r3, #0
 1393 02c6 03D0     		beq	.L87
 630:main.c        ****                 // Get next instruction
 631:main.c        ****                 MoveToNextInstruction();
 1394              		.loc 1 631 0
 1395 02c8 FFF7FEFF 		bl	MoveToNextInstruction
 632:main.c        **** 
 633:main.c        ****                 
 634:main.c        ****                 return Stop;
 1396              		.loc 1 634 0
 1397 02cc 0523     		movs	r3, #5
 1398 02ce 17E0     		b	.L59
 1399              	.L87:
 635:main.c        ****             }
 636:main.c        ****             
 637:main.c        ****             return ForwardCourseCorrection();
 1400              		.loc 1 637 0
 1401 02d0 FFF7FEFF 		bl	ForwardCourseCorrection
 1402 02d4 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 37


 1403 02d6 13E0     		b	.L59
 1404              	.L56:
 638:main.c        ****             break;
 639:main.c        ****         case StopAtTarget:
 640:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 641:main.c        ****             // Reset flags
 642:main.c        ****             totalDistance = 0;
 1405              		.loc 1 642 0
 1406 02d8 0C4B     		ldr	r3, .L90+4
 1407 02da 4FF00002 		mov	r2, #0
 1408 02de 1A60     		str	r2, [r3]	@ float
 643:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1409              		.loc 1 643 0
 1410 02e0 0C4B     		ldr	r3, .L90+12
 1411 02e2 0022     		movs	r2, #0
 1412 02e4 1A70     		strb	r2, [r3]
 644:main.c        ****             blockSizeTotal = 0;
 1413              		.loc 1 644 0
 1414 02e6 0A4B     		ldr	r3, .L90+8
 1415 02e8 4FF00002 		mov	r2, #0
 1416 02ec 1A60     		str	r2, [r3]	@ float
 645:main.c        ****             
 646:main.c        ****             if (stopBuffer <= 200) {
 1417              		.loc 1 646 0
 1418 02ee 0A4B     		ldr	r3, .L90+16
 1419 02f0 1B68     		ldr	r3, [r3]
 1420 02f2 C82B     		cmp	r3, #200
 1421 02f4 01D8     		bhi	.L85
 647:main.c        ****                 return Stop;    
 1422              		.loc 1 647 0
 1423 02f6 0523     		movs	r3, #5
 1424 02f8 02E0     		b	.L59
 1425              	.L85:
 648:main.c        ****             }
 649:main.c        ****             return TurnRight;
 1426              		.loc 1 649 0
 1427 02fa 0123     		movs	r3, #1
 1428 02fc 00E0     		b	.L59
 1429              	.L50:
 650:main.c        ****             break;
 651:main.c        ****         default:
 652:main.c        ****             return Stop;
 1430              		.loc 1 652 0
 1431 02fe 0523     		movs	r3, #5
 1432              	.L59:
 653:main.c        ****             break;
 654:main.c        ****     }
 655:main.c        ****     return Stop;
 656:main.c        **** }
 1433              		.loc 1 656 0
 1434 0300 1846     		mov	r0, r3
 1435 0302 0837     		adds	r7, r7, #8
 1436              		.cfi_def_cfa_offset 8
 1437 0304 BD46     		mov	sp, r7
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 0306 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 38


 1441              	.L91:
 1442              		.align	2
 1443              	.L90:
 1444 0308 00000000 		.word	currentInstruction
 1445 030c 00000000 		.word	totalDistance
 1446 0310 00000000 		.word	blockSizeTotal
 1447 0314 00000000 		.word	forwardUntilTargetStartedFlag
 1448 0318 00000000 		.word	stopBuffer
 1449              		.cfi_endproc
 1450              	.LFE74:
 1451              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1452              		.global	__aeabi_i2f
 1453              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1454              		.align	2
 1455              		.global	CalculateDistanceToTravel
 1456              		.thumb
 1457              		.thumb_func
 1458              		.type	CalculateDistanceToTravel, %function
 1459              	CalculateDistanceToTravel:
 1460              	.LFB75:
 657:main.c        **** 
 658:main.c        **** // Calculate total blocksize to travel until target
 659:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1461              		.loc 1 659 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 40
 1464              		@ frame_needed = 1, uses_anonymous_args = 0
 1465 0000 80B5     		push	{r7, lr}
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 7, -8
 1468              		.cfi_offset 14, -4
 1469 0002 8AB0     		sub	sp, sp, #40
 1470              		.cfi_def_cfa_offset 48
 1471 0004 00AF     		add	r7, sp, #0
 1472              		.cfi_def_cfa_register 7
 1473 0006 7860     		str	r0, [r7, #4]	@ float
 660:main.c        ****     float totalBlockSize;
 661:main.c        ****     
 662:main.c        ****     // Check for Row, Col that target is 
 663:main.c        ****     int targetRow = food_list[0][0];
 1474              		.loc 1 663 0
 1475 0008 9D4B     		ldr	r3, .L137
 1476 000a 1B68     		ldr	r3, [r3]
 1477 000c 3B61     		str	r3, [r7, #16]
 664:main.c        ****     int targetCol = food_list[0][1];
 1478              		.loc 1 664 0
 1479 000e 9C4B     		ldr	r3, .L137
 1480 0010 5B68     		ldr	r3, [r3, #4]
 1481 0012 FB60     		str	r3, [r7, #12]
 665:main.c        ****     
 666:main.c        ****     int pathCount = 0;
 1482              		.loc 1 666 0
 1483 0014 0023     		movs	r3, #0
 1484 0016 7B62     		str	r3, [r7, #36]
 667:main.c        ****     
 668:main.c        ****     // Depending on the robot orientation
 669:main.c        ****     // count++ if row, col is 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 39


 670:main.c        ****     // count reset if row, col is 1 or 0
 671:main.c        ****     // save count if row, col is 9
 672:main.c        ****     switch (currentRobotOrientation) {
 1485              		.loc 1 672 0
 1486 0018 9A4B     		ldr	r3, .L137+4
 1487 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 001c 032B     		cmp	r3, #3
 1489 001e 00F21F81 		bhi	.L93
 1490 0022 01A2     		adr	r2, .L95
 1491 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1492              		.p2align 2
 1493              	.L95:
 1494 0028 39000000 		.word	.L94+1
 1495 002c C3000000 		.word	.L96+1
 1496 0030 4D010000 		.word	.L97+1
 1497 0034 D7010000 		.word	.L98+1
 1498              		.p2align 1
 1499              	.L94:
 1500              	.LBB3:
 673:main.c        ****         case Up:
 674:main.c        ****             // Column
 675:main.c        ****             // Start from Bottom (since we're facing up)
 676:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1501              		.loc 1 676 0
 1502 0038 0F23     		movs	r3, #15
 1503 003a 3B62     		str	r3, [r7, #32]
 1504 003c 3BE0     		b	.L99
 1505              	.L105:
 677:main.c        ****                 if (map[i][targetCol] == 9) {
 1506              		.loc 1 677 0
 1507 003e 9249     		ldr	r1, .L137+8
 1508 0040 3A6A     		ldr	r2, [r7, #32]
 1509 0042 1346     		mov	r3, r2
 1510 0044 DB00     		lsls	r3, r3, #3
 1511 0046 1344     		add	r3, r3, r2
 1512 0048 5B00     		lsls	r3, r3, #1
 1513 004a 1344     		add	r3, r3, r2
 1514 004c FA68     		ldr	r2, [r7, #12]
 1515 004e 1344     		add	r3, r3, r2
 1516 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1517 0054 092B     		cmp	r3, #9
 1518 0056 32D0     		beq	.L132
 678:main.c        ****                     break;    
 679:main.c        ****                 }
 680:main.c        ****                 if (map[i][targetCol] == 8) {
 1519              		.loc 1 680 0
 1520 0058 8B49     		ldr	r1, .L137+8
 1521 005a 3A6A     		ldr	r2, [r7, #32]
 1522 005c 1346     		mov	r3, r2
 1523 005e DB00     		lsls	r3, r3, #3
 1524 0060 1344     		add	r3, r3, r2
 1525 0062 5B00     		lsls	r3, r3, #1
 1526 0064 1344     		add	r3, r3, r2
 1527 0066 FA68     		ldr	r2, [r7, #12]
 1528 0068 1344     		add	r3, r3, r2
 1529 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1530 006e 082B     		cmp	r3, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 40


 1531 0070 02D1     		bne	.L102
 681:main.c        ****                     pathCount++;    
 1532              		.loc 1 681 0
 1533 0072 7B6A     		ldr	r3, [r7, #36]
 1534 0074 0133     		adds	r3, r3, #1
 1535 0076 7B62     		str	r3, [r7, #36]
 1536              	.L102:
 682:main.c        ****                 }
 683:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1537              		.loc 1 683 0
 1538 0078 8349     		ldr	r1, .L137+8
 1539 007a 3A6A     		ldr	r2, [r7, #32]
 1540 007c 1346     		mov	r3, r2
 1541 007e DB00     		lsls	r3, r3, #3
 1542 0080 1344     		add	r3, r3, r2
 1543 0082 5B00     		lsls	r3, r3, #1
 1544 0084 1344     		add	r3, r3, r2
 1545 0086 FA68     		ldr	r2, [r7, #12]
 1546 0088 1344     		add	r3, r3, r2
 1547 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1548 008e 002B     		cmp	r3, #0
 1549 0090 0CD0     		beq	.L103
 1550              		.loc 1 683 0 is_stmt 0 discriminator 1
 1551 0092 7D49     		ldr	r1, .L137+8
 1552 0094 3A6A     		ldr	r2, [r7, #32]
 1553 0096 1346     		mov	r3, r2
 1554 0098 DB00     		lsls	r3, r3, #3
 1555 009a 1344     		add	r3, r3, r2
 1556 009c 5B00     		lsls	r3, r3, #1
 1557 009e 1344     		add	r3, r3, r2
 1558 00a0 FA68     		ldr	r2, [r7, #12]
 1559 00a2 1344     		add	r3, r3, r2
 1560 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1561 00a8 012B     		cmp	r3, #1
 1562 00aa 01D1     		bne	.L104
 1563              	.L103:
 684:main.c        ****                     pathCount = 0;
 1564              		.loc 1 684 0 is_stmt 1
 1565 00ac 0023     		movs	r3, #0
 1566 00ae 7B62     		str	r3, [r7, #36]
 1567              	.L104:
 676:main.c        ****                 if (map[i][targetCol] == 9) {
 1568              		.loc 1 676 0 discriminator 2
 1569 00b0 3B6A     		ldr	r3, [r7, #32]
 1570 00b2 013B     		subs	r3, r3, #1
 1571 00b4 3B62     		str	r3, [r7, #32]
 1572              	.L99:
 676:main.c        ****                 if (map[i][targetCol] == 9) {
 1573              		.loc 1 676 0 is_stmt 0 discriminator 1
 1574 00b6 3B6A     		ldr	r3, [r7, #32]
 1575 00b8 002B     		cmp	r3, #0
 1576 00ba C0DA     		bge	.L105
 1577              	.LBE3:
 685:main.c        ****                 }
 686:main.c        ****             }
 687:main.c        ****             break;
 1578              		.loc 1 687 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 41


 1579 00bc D0E0     		b	.L93
 1580              	.L132:
 1581              	.LBB4:
 678:main.c        ****                 }
 1582              		.loc 1 678 0
 1583 00be 00BF     		nop
 1584              	.LBE4:
 1585              		.loc 1 687 0
 1586 00c0 CEE0     		b	.L93
 1587              	.L96:
 1588              	.LBB5:
 688:main.c        ****         case Down:
 689:main.c        ****             // Target Column, Check Row
 690:main.c        ****             // Start from Top
 691:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1589              		.loc 1 691 0
 1590 00c2 0023     		movs	r3, #0
 1591 00c4 FB61     		str	r3, [r7, #28]
 1592 00c6 3BE0     		b	.L106
 1593              	.L112:
 692:main.c        ****                 if (map[i][targetCol] == 9) {
 1594              		.loc 1 692 0
 1595 00c8 6F49     		ldr	r1, .L137+8
 1596 00ca FA69     		ldr	r2, [r7, #28]
 1597 00cc 1346     		mov	r3, r2
 1598 00ce DB00     		lsls	r3, r3, #3
 1599 00d0 1344     		add	r3, r3, r2
 1600 00d2 5B00     		lsls	r3, r3, #1
 1601 00d4 1344     		add	r3, r3, r2
 1602 00d6 FA68     		ldr	r2, [r7, #12]
 1603 00d8 1344     		add	r3, r3, r2
 1604 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1605 00de 092B     		cmp	r3, #9
 1606 00e0 32D0     		beq	.L133
 693:main.c        ****                     break;    
 694:main.c        ****                 }
 695:main.c        ****                 if (map[i][targetCol] == 8) {
 1607              		.loc 1 695 0
 1608 00e2 6949     		ldr	r1, .L137+8
 1609 00e4 FA69     		ldr	r2, [r7, #28]
 1610 00e6 1346     		mov	r3, r2
 1611 00e8 DB00     		lsls	r3, r3, #3
 1612 00ea 1344     		add	r3, r3, r2
 1613 00ec 5B00     		lsls	r3, r3, #1
 1614 00ee 1344     		add	r3, r3, r2
 1615 00f0 FA68     		ldr	r2, [r7, #12]
 1616 00f2 1344     		add	r3, r3, r2
 1617 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1618 00f8 082B     		cmp	r3, #8
 1619 00fa 02D1     		bne	.L109
 696:main.c        ****                     pathCount++;    
 1620              		.loc 1 696 0
 1621 00fc 7B6A     		ldr	r3, [r7, #36]
 1622 00fe 0133     		adds	r3, r3, #1
 1623 0100 7B62     		str	r3, [r7, #36]
 1624              	.L109:
 697:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 42


 698:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1625              		.loc 1 698 0
 1626 0102 6149     		ldr	r1, .L137+8
 1627 0104 FA69     		ldr	r2, [r7, #28]
 1628 0106 1346     		mov	r3, r2
 1629 0108 DB00     		lsls	r3, r3, #3
 1630 010a 1344     		add	r3, r3, r2
 1631 010c 5B00     		lsls	r3, r3, #1
 1632 010e 1344     		add	r3, r3, r2
 1633 0110 FA68     		ldr	r2, [r7, #12]
 1634 0112 1344     		add	r3, r3, r2
 1635 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1636 0118 002B     		cmp	r3, #0
 1637 011a 0CD0     		beq	.L110
 1638              		.loc 1 698 0 is_stmt 0 discriminator 1
 1639 011c 5A49     		ldr	r1, .L137+8
 1640 011e FA69     		ldr	r2, [r7, #28]
 1641 0120 1346     		mov	r3, r2
 1642 0122 DB00     		lsls	r3, r3, #3
 1643 0124 1344     		add	r3, r3, r2
 1644 0126 5B00     		lsls	r3, r3, #1
 1645 0128 1344     		add	r3, r3, r2
 1646 012a FA68     		ldr	r2, [r7, #12]
 1647 012c 1344     		add	r3, r3, r2
 1648 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1649 0132 012B     		cmp	r3, #1
 1650 0134 01D1     		bne	.L111
 1651              	.L110:
 699:main.c        ****                     pathCount = 0;
 1652              		.loc 1 699 0 is_stmt 1
 1653 0136 0023     		movs	r3, #0
 1654 0138 7B62     		str	r3, [r7, #36]
 1655              	.L111:
 691:main.c        ****                 if (map[i][targetCol] == 9) {
 1656              		.loc 1 691 0 discriminator 2
 1657 013a FB69     		ldr	r3, [r7, #28]
 1658 013c 0133     		adds	r3, r3, #1
 1659 013e FB61     		str	r3, [r7, #28]
 1660              	.L106:
 691:main.c        ****                 if (map[i][targetCol] == 9) {
 1661              		.loc 1 691 0 is_stmt 0 discriminator 1
 1662 0140 FB69     		ldr	r3, [r7, #28]
 1663 0142 0E2B     		cmp	r3, #14
 1664 0144 C0DD     		ble	.L112
 1665              	.LBE5:
 700:main.c        ****                 }
 701:main.c        ****             }
 702:main.c        ****             break;
 1666              		.loc 1 702 0 is_stmt 1
 1667 0146 8BE0     		b	.L93
 1668              	.L133:
 1669              	.LBB6:
 693:main.c        ****                 }
 1670              		.loc 1 693 0
 1671 0148 00BF     		nop
 1672              	.LBE6:
 1673              		.loc 1 702 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 43


 1674 014a 89E0     		b	.L93
 1675              	.L97:
 1676              	.LBB7:
 703:main.c        ****         case Left:
 704:main.c        ****             // Target Row, Check Col
 705:main.c        ****             // Start from Right
 706:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1677              		.loc 1 706 0
 1678 014c 1323     		movs	r3, #19
 1679 014e BB61     		str	r3, [r7, #24]
 1680 0150 3BE0     		b	.L113
 1681              	.L119:
 707:main.c        ****                 if (map[targetRow][i] == 9) {
 1682              		.loc 1 707 0
 1683 0152 4D49     		ldr	r1, .L137+8
 1684 0154 3A69     		ldr	r2, [r7, #16]
 1685 0156 1346     		mov	r3, r2
 1686 0158 DB00     		lsls	r3, r3, #3
 1687 015a 1344     		add	r3, r3, r2
 1688 015c 5B00     		lsls	r3, r3, #1
 1689 015e 1344     		add	r3, r3, r2
 1690 0160 BA69     		ldr	r2, [r7, #24]
 1691 0162 1344     		add	r3, r3, r2
 1692 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1693 0168 092B     		cmp	r3, #9
 1694 016a 32D0     		beq	.L134
 708:main.c        ****                     break;    
 709:main.c        ****                 }
 710:main.c        ****                 if (map[targetRow][i] == 8) {
 1695              		.loc 1 710 0
 1696 016c 4649     		ldr	r1, .L137+8
 1697 016e 3A69     		ldr	r2, [r7, #16]
 1698 0170 1346     		mov	r3, r2
 1699 0172 DB00     		lsls	r3, r3, #3
 1700 0174 1344     		add	r3, r3, r2
 1701 0176 5B00     		lsls	r3, r3, #1
 1702 0178 1344     		add	r3, r3, r2
 1703 017a BA69     		ldr	r2, [r7, #24]
 1704 017c 1344     		add	r3, r3, r2
 1705 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1706 0182 082B     		cmp	r3, #8
 1707 0184 02D1     		bne	.L116
 711:main.c        ****                     pathCount++;    
 1708              		.loc 1 711 0
 1709 0186 7B6A     		ldr	r3, [r7, #36]
 1710 0188 0133     		adds	r3, r3, #1
 1711 018a 7B62     		str	r3, [r7, #36]
 1712              	.L116:
 712:main.c        ****                 }
 713:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1713              		.loc 1 713 0
 1714 018c 3E49     		ldr	r1, .L137+8
 1715 018e 3A69     		ldr	r2, [r7, #16]
 1716 0190 1346     		mov	r3, r2
 1717 0192 DB00     		lsls	r3, r3, #3
 1718 0194 1344     		add	r3, r3, r2
 1719 0196 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 44


 1720 0198 1344     		add	r3, r3, r2
 1721 019a BA69     		ldr	r2, [r7, #24]
 1722 019c 1344     		add	r3, r3, r2
 1723 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1724 01a2 002B     		cmp	r3, #0
 1725 01a4 0CD0     		beq	.L117
 1726              		.loc 1 713 0 is_stmt 0 discriminator 1
 1727 01a6 3849     		ldr	r1, .L137+8
 1728 01a8 BA69     		ldr	r2, [r7, #24]
 1729 01aa 1346     		mov	r3, r2
 1730 01ac DB00     		lsls	r3, r3, #3
 1731 01ae 1344     		add	r3, r3, r2
 1732 01b0 5B00     		lsls	r3, r3, #1
 1733 01b2 1344     		add	r3, r3, r2
 1734 01b4 FA68     		ldr	r2, [r7, #12]
 1735 01b6 1344     		add	r3, r3, r2
 1736 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1737 01bc 012B     		cmp	r3, #1
 1738 01be 01D1     		bne	.L118
 1739              	.L117:
 714:main.c        ****                     pathCount = 0;
 1740              		.loc 1 714 0 is_stmt 1
 1741 01c0 0023     		movs	r3, #0
 1742 01c2 7B62     		str	r3, [r7, #36]
 1743              	.L118:
 706:main.c        ****                 if (map[targetRow][i] == 9) {
 1744              		.loc 1 706 0 discriminator 2
 1745 01c4 BB69     		ldr	r3, [r7, #24]
 1746 01c6 013B     		subs	r3, r3, #1
 1747 01c8 BB61     		str	r3, [r7, #24]
 1748              	.L113:
 706:main.c        ****                 if (map[targetRow][i] == 9) {
 1749              		.loc 1 706 0 is_stmt 0 discriminator 1
 1750 01ca BB69     		ldr	r3, [r7, #24]
 1751 01cc 002B     		cmp	r3, #0
 1752 01ce C0DA     		bge	.L119
 1753              	.LBE7:
 715:main.c        ****                 }
 716:main.c        ****             }
 717:main.c        ****             break;
 1754              		.loc 1 717 0 is_stmt 1
 1755 01d0 46E0     		b	.L93
 1756              	.L134:
 1757              	.LBB8:
 708:main.c        ****                 }
 1758              		.loc 1 708 0
 1759 01d2 00BF     		nop
 1760              	.LBE8:
 1761              		.loc 1 717 0
 1762 01d4 44E0     		b	.L93
 1763              	.L98:
 1764              	.LBB9:
 718:main.c        ****         
 719:main.c        ****         case Right:
 720:main.c        ****             // Target Row, Check Col
 721:main.c        ****             // Start from Left
 722:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 45


 1765              		.loc 1 722 0
 1766 01d6 0023     		movs	r3, #0
 1767 01d8 7B61     		str	r3, [r7, #20]
 1768 01da 3BE0     		b	.L120
 1769              	.L126:
 723:main.c        ****                 if (map[targetRow][i] == 9) {
 1770              		.loc 1 723 0
 1771 01dc 2A49     		ldr	r1, .L137+8
 1772 01de 3A69     		ldr	r2, [r7, #16]
 1773 01e0 1346     		mov	r3, r2
 1774 01e2 DB00     		lsls	r3, r3, #3
 1775 01e4 1344     		add	r3, r3, r2
 1776 01e6 5B00     		lsls	r3, r3, #1
 1777 01e8 1344     		add	r3, r3, r2
 1778 01ea 7A69     		ldr	r2, [r7, #20]
 1779 01ec 1344     		add	r3, r3, r2
 1780 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1781 01f2 092B     		cmp	r3, #9
 1782 01f4 32D0     		beq	.L135
 724:main.c        ****                     break;    
 725:main.c        ****                 }
 726:main.c        ****                 if (map[targetRow][i] == 8) {
 1783              		.loc 1 726 0
 1784 01f6 2449     		ldr	r1, .L137+8
 1785 01f8 3A69     		ldr	r2, [r7, #16]
 1786 01fa 1346     		mov	r3, r2
 1787 01fc DB00     		lsls	r3, r3, #3
 1788 01fe 1344     		add	r3, r3, r2
 1789 0200 5B00     		lsls	r3, r3, #1
 1790 0202 1344     		add	r3, r3, r2
 1791 0204 7A69     		ldr	r2, [r7, #20]
 1792 0206 1344     		add	r3, r3, r2
 1793 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1794 020c 082B     		cmp	r3, #8
 1795 020e 02D1     		bne	.L123
 727:main.c        ****                     pathCount++;    
 1796              		.loc 1 727 0
 1797 0210 7B6A     		ldr	r3, [r7, #36]
 1798 0212 0133     		adds	r3, r3, #1
 1799 0214 7B62     		str	r3, [r7, #36]
 1800              	.L123:
 728:main.c        ****                 }
 729:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1801              		.loc 1 729 0
 1802 0216 1C49     		ldr	r1, .L137+8
 1803 0218 3A69     		ldr	r2, [r7, #16]
 1804 021a 1346     		mov	r3, r2
 1805 021c DB00     		lsls	r3, r3, #3
 1806 021e 1344     		add	r3, r3, r2
 1807 0220 5B00     		lsls	r3, r3, #1
 1808 0222 1344     		add	r3, r3, r2
 1809 0224 7A69     		ldr	r2, [r7, #20]
 1810 0226 1344     		add	r3, r3, r2
 1811 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1812 022c 002B     		cmp	r3, #0
 1813 022e 0CD0     		beq	.L124
 1814              		.loc 1 729 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 46


 1815 0230 1549     		ldr	r1, .L137+8
 1816 0232 7A69     		ldr	r2, [r7, #20]
 1817 0234 1346     		mov	r3, r2
 1818 0236 DB00     		lsls	r3, r3, #3
 1819 0238 1344     		add	r3, r3, r2
 1820 023a 5B00     		lsls	r3, r3, #1
 1821 023c 1344     		add	r3, r3, r2
 1822 023e FA68     		ldr	r2, [r7, #12]
 1823 0240 1344     		add	r3, r3, r2
 1824 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1825 0246 012B     		cmp	r3, #1
 1826 0248 01D1     		bne	.L125
 1827              	.L124:
 730:main.c        ****                     pathCount = 0;
 1828              		.loc 1 730 0 is_stmt 1
 1829 024a 0023     		movs	r3, #0
 1830 024c 7B62     		str	r3, [r7, #36]
 1831              	.L125:
 722:main.c        ****                 if (map[targetRow][i] == 9) {
 1832              		.loc 1 722 0 discriminator 2
 1833 024e 7B69     		ldr	r3, [r7, #20]
 1834 0250 0133     		adds	r3, r3, #1
 1835 0252 7B61     		str	r3, [r7, #20]
 1836              	.L120:
 722:main.c        ****                 if (map[targetRow][i] == 9) {
 1837              		.loc 1 722 0 is_stmt 0 discriminator 1
 1838 0254 7B69     		ldr	r3, [r7, #20]
 1839 0256 122B     		cmp	r3, #18
 1840 0258 C0DD     		ble	.L126
 1841              	.LBE9:
 731:main.c        ****                 }
 732:main.c        **** 
 733:main.c        ****             }
 734:main.c        ****             break;
 1842              		.loc 1 734 0 is_stmt 1
 1843 025a 00E0     		b	.L136
 1844              	.L135:
 1845              	.LBB10:
 724:main.c        ****                 }
 1846              		.loc 1 724 0
 1847 025c 00BF     		nop
 1848              	.L136:
 1849              	.LBE10:
 1850              		.loc 1 734 0
 1851 025e 00BF     		nop
 1852              	.L93:
 735:main.c        ****         
 736:main.c        ****     }
 737:main.c        ****     totalBlockSize = blockSize * pathCount;
 1853              		.loc 1 737 0
 1854 0260 786A     		ldr	r0, [r7, #36]
 1855 0262 FFF7FEFF 		bl	__aeabi_i2f
 1856 0266 0346     		mov	r3, r0
 1857 0268 7968     		ldr	r1, [r7, #4]	@ float
 1858 026a 1846     		mov	r0, r3
 1859 026c FFF7FEFF 		bl	__aeabi_fmul
 1860 0270 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 47


 1861 0272 BB60     		str	r3, [r7, #8]	@ float
 738:main.c        ****     return totalBlockSize;
 1862              		.loc 1 738 0
 1863 0274 BB68     		ldr	r3, [r7, #8]	@ float
 739:main.c        **** }
 1864              		.loc 1 739 0
 1865 0276 1846     		mov	r0, r3
 1866 0278 2837     		adds	r7, r7, #40
 1867              		.cfi_def_cfa_offset 8
 1868 027a BD46     		mov	sp, r7
 1869              		.cfi_def_cfa_register 13
 1870              		@ sp needed
 1871 027c 80BD     		pop	{r7, pc}
 1872              	.L138:
 1873 027e 00BF     		.align	2
 1874              	.L137:
 1875 0280 00000000 		.word	food_list
 1876 0284 00000000 		.word	currentRobotOrientation
 1877 0288 00000000 		.word	map
 1878              		.cfi_endproc
 1879              	.LFE75:
 1880              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 1881              		.section	.text.MoveToNextInstruction,"ax",%progbits
 1882              		.align	2
 1883              		.global	MoveToNextInstruction
 1884              		.thumb
 1885              		.thumb_func
 1886              		.type	MoveToNextInstruction, %function
 1887              	MoveToNextInstruction:
 1888              	.LFB76:
 740:main.c        **** 
 741:main.c        **** // get next instruction
 742:main.c        **** void MoveToNextInstruction() {
 1889              		.loc 1 742 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893              		@ link register save eliminated.
 1894 0000 80B4     		push	{r7}
 1895              		.cfi_def_cfa_offset 4
 1896              		.cfi_offset 7, -4
 1897 0002 00AF     		add	r7, sp, #0
 1898              		.cfi_def_cfa_register 7
 743:main.c        ****     instructionIndex++;
 1899              		.loc 1 743 0
 1900 0004 044B     		ldr	r3, .L140
 1901 0006 1B68     		ldr	r3, [r3]
 1902 0008 0133     		adds	r3, r3, #1
 1903 000a 034A     		ldr	r2, .L140
 1904 000c 1360     		str	r3, [r2]
 744:main.c        **** }
 1905              		.loc 1 744 0
 1906 000e 00BF     		nop
 1907 0010 BD46     		mov	sp, r7
 1908              		.cfi_def_cfa_register 13
 1909              		@ sp needed
 1910 0012 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 48


 1911              		.cfi_restore 7
 1912              		.cfi_def_cfa_offset 0
 1913 0014 7047     		bx	lr
 1914              	.L141:
 1915 0016 00BF     		.align	2
 1916              	.L140:
 1917 0018 00000000 		.word	instructionIndex
 1918              		.cfi_endproc
 1919              	.LFE76:
 1920              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 1921              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 1922              		.align	2
 1923              		.global	GetInstructionAtIndex
 1924              		.thumb
 1925              		.thumb_func
 1926              		.type	GetInstructionAtIndex, %function
 1927              	GetInstructionAtIndex:
 1928              	.LFB77:
 745:main.c        **** 
 746:main.c        **** 
 747:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
 1929              		.loc 1 747 0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 32
 1932              		@ frame_needed = 1, uses_anonymous_args = 0
 1933              		@ link register save eliminated.
 1934 0000 90B4     		push	{r4, r7}
 1935              		.cfi_def_cfa_offset 8
 1936              		.cfi_offset 4, -8
 1937              		.cfi_offset 7, -4
 1938 0002 88B0     		sub	sp, sp, #32
 1939              		.cfi_def_cfa_offset 40
 1940 0004 00AF     		add	r7, sp, #0
 1941              		.cfi_def_cfa_register 7
 1942 0006 F860     		str	r0, [r7, #12]
 1943 0008 B960     		str	r1, [r7, #8]
 1944 000a 7A60     		str	r2, [r7, #4]
 1945 000c 3B60     		str	r3, [r7]
 1946              	.LBB11:
 748:main.c        ****     Instruction nextInstruction;
 749:main.c        ****     // input is list of instructions and robot will react accordingly
 750:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 1947              		.loc 1 750 0
 1948 000e 3B68     		ldr	r3, [r7]
 1949 0010 FB61     		str	r3, [r7, #28]
 1950 0012 36E0     		b	.L143
 1951              	.L146:
 751:main.c        ****         if(instructionList[i].direction != Skip) {
 1952              		.loc 1 751 0
 1953 0014 FA69     		ldr	r2, [r7, #28]
 1954 0016 1346     		mov	r3, r2
 1955 0018 5B00     		lsls	r3, r3, #1
 1956 001a 1344     		add	r3, r3, r2
 1957 001c 9B00     		lsls	r3, r3, #2
 1958 001e 1A46     		mov	r2, r3
 1959 0020 7B68     		ldr	r3, [r7, #4]
 1960 0022 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 49


 1961 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1962 0026 062B     		cmp	r3, #6
 1963 0028 26D0     		beq	.L144
 752:main.c        ****             nextInstruction.direction = instructionList[i].direction;
 1964              		.loc 1 752 0
 1965 002a FA69     		ldr	r2, [r7, #28]
 1966 002c 1346     		mov	r3, r2
 1967 002e 5B00     		lsls	r3, r3, #1
 1968 0030 1344     		add	r3, r3, r2
 1969 0032 9B00     		lsls	r3, r3, #2
 1970 0034 1A46     		mov	r2, r3
 1971 0036 7B68     		ldr	r3, [r7, #4]
 1972 0038 1344     		add	r3, r3, r2
 1973 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1974 003c 3B74     		strb	r3, [r7, #16]
 753:main.c        ****             nextInstruction.ignoreL = instructionList[i].ignoreL;
 1975              		.loc 1 753 0
 1976 003e FA69     		ldr	r2, [r7, #28]
 1977 0040 1346     		mov	r3, r2
 1978 0042 5B00     		lsls	r3, r3, #1
 1979 0044 1344     		add	r3, r3, r2
 1980 0046 9B00     		lsls	r3, r3, #2
 1981 0048 1A46     		mov	r2, r3
 1982 004a 7B68     		ldr	r3, [r7, #4]
 1983 004c 1344     		add	r3, r3, r2
 1984 004e 5B68     		ldr	r3, [r3, #4]
 1985 0050 7B61     		str	r3, [r7, #20]
 754:main.c        ****             nextInstruction.ignoreR = instructionList[i].ignoreR;
 1986              		.loc 1 754 0
 1987 0052 FA69     		ldr	r2, [r7, #28]
 1988 0054 1346     		mov	r3, r2
 1989 0056 5B00     		lsls	r3, r3, #1
 1990 0058 1344     		add	r3, r3, r2
 1991 005a 9B00     		lsls	r3, r3, #2
 1992 005c 1A46     		mov	r2, r3
 1993 005e 7B68     		ldr	r3, [r7, #4]
 1994 0060 1344     		add	r3, r3, r2
 1995 0062 9B68     		ldr	r3, [r3, #8]
 1996 0064 BB61     		str	r3, [r7, #24]
 755:main.c        ****             return nextInstruction; // return next instruction
 1997              		.loc 1 755 0
 1998 0066 FB68     		ldr	r3, [r7, #12]
 1999 0068 1C46     		mov	r4, r3
 2000 006a 07F11003 		add	r3, r7, #16
 2001 006e 93E80700 		ldmia	r3, {r0, r1, r2}
 2002 0072 84E80700 		stmia	r4, {r0, r1, r2}
 2003 0076 10E0     		b	.L142
 2004              	.L144:
 756:main.c        ****         }
 757:main.c        ****         instructionIndex = i;
 2005              		.loc 1 757 0 discriminator 2
 2006 0078 FB69     		ldr	r3, [r7, #28]
 2007 007a 3B60     		str	r3, [r7]
 750:main.c        ****         if(instructionList[i].direction != Skip) {
 2008              		.loc 1 750 0 discriminator 2
 2009 007c FB69     		ldr	r3, [r7, #28]
 2010 007e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 50


 2011 0080 FB61     		str	r3, [r7, #28]
 2012              	.L143:
 750:main.c        ****         if(instructionList[i].direction != Skip) {
 2013              		.loc 1 750 0 is_stmt 0 discriminator 1
 2014 0082 FA69     		ldr	r2, [r7, #28]
 2015 0084 BB68     		ldr	r3, [r7, #8]
 2016 0086 9A42     		cmp	r2, r3
 2017 0088 C4DB     		blt	.L146
 2018              	.LBE11:
 758:main.c        ****     }
 759:main.c        ****     return nextInstruction;
 2019              		.loc 1 759 0 is_stmt 1
 2020 008a FB68     		ldr	r3, [r7, #12]
 2021 008c 1C46     		mov	r4, r3
 2022 008e 07F11003 		add	r3, r7, #16
 2023 0092 93E80700 		ldmia	r3, {r0, r1, r2}
 2024 0096 84E80700 		stmia	r4, {r0, r1, r2}
 2025              	.L142:
 760:main.c        **** }
 2026              		.loc 1 760 0
 2027 009a F868     		ldr	r0, [r7, #12]
 2028 009c 2037     		adds	r7, r7, #32
 2029              		.cfi_def_cfa_offset 8
 2030 009e BD46     		mov	sp, r7
 2031              		.cfi_def_cfa_register 13
 2032              		@ sp needed
 2033 00a0 90BC     		pop	{r4, r7}
 2034              		.cfi_restore 7
 2035              		.cfi_restore 4
 2036              		.cfi_def_cfa_offset 0
 2037 00a2 7047     		bx	lr
 2038              		.cfi_endproc
 2039              	.LFE77:
 2040              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2041              		.section	.text.SetRobotMovement,"ax",%progbits
 2042              		.align	2
 2043              		.global	SetRobotMovement
 2044              		.thumb
 2045              		.thumb_func
 2046              		.type	SetRobotMovement, %function
 2047              	SetRobotMovement:
 2048              	.LFB78:
 761:main.c        **** 
 762:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 763:main.c        **** void SetRobotMovement() {
 2049              		.loc 1 763 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 16
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
 2053 0000 90B5     		push	{r4, r7, lr}
 2054              		.cfi_def_cfa_offset 12
 2055              		.cfi_offset 4, -12
 2056              		.cfi_offset 7, -8
 2057              		.cfi_offset 14, -4
 2058 0002 85B0     		sub	sp, sp, #20
 2059              		.cfi_def_cfa_offset 32
 2060 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 51


 2061              		.cfi_def_cfa_register 7
 764:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList, instructionIndex); // get
 2062              		.loc 1 764 0
 2063 0006 294B     		ldr	r3, .L163
 2064 0008 1968     		ldr	r1, [r3]
 2065 000a 294B     		ldr	r3, .L163+4
 2066 000c 1A68     		ldr	r2, [r3]
 2067 000e 294B     		ldr	r3, .L163+8
 2068 0010 1B68     		ldr	r3, [r3]
 2069 0012 294C     		ldr	r4, .L163+12
 2070 0014 3846     		mov	r0, r7
 2071 0016 FFF7FEFF 		bl	GetInstructionAtIndex
 2072 001a 3B46     		mov	r3, r7
 2073 001c 93E80700 		ldmia	r3, {r0, r1, r2}
 2074 0020 84E80700 		stmia	r4, {r0, r1, r2}
 765:main.c        ****     previousDirection = currentDirection;
 2075              		.loc 1 765 0
 2076 0024 254B     		ldr	r3, .L163+16
 2077 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2078 0028 254B     		ldr	r3, .L163+20
 2079 002a 1A70     		strb	r2, [r3]
 766:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2080              		.loc 1 766 0
 2081 002c FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2082 0030 0346     		mov	r3, r0
 2083 0032 1A46     		mov	r2, r3
 2084 0034 214B     		ldr	r3, .L163+16
 2085 0036 1A70     		strb	r2, [r3]
 767:main.c        ****     // move robot depending on sensors
 768:main.c        ****     switch (currentDirection) {
 2086              		.loc 1 768 0
 2087 0038 204B     		ldr	r3, .L163+16
 2088 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2089 003c 092B     		cmp	r3, #9
 2090 003e 30D8     		bhi	.L161
 2091 0040 01A2     		adr	r2, .L151
 2092 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2093 0046 00BF     		.p2align 2
 2094              	.L151:
 2095 0048 71000000 		.word	.L150+1
 2096 004c 77000000 		.word	.L152+1
 2097 0050 7D000000 		.word	.L153+1
 2098 0054 89000000 		.word	.L154+1
 2099 0058 83000000 		.word	.L155+1
 2100 005c 8F000000 		.word	.L156+1
 2101 0060 A1000000 		.word	.L162+1
 2102 0064 A1000000 		.word	.L162+1
 2103 0068 95000000 		.word	.L159+1
 2104 006c 9B000000 		.word	.L160+1
 2105              		.p2align 1
 2106              	.L150:
 769:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 770:main.c        ****         case Forward:
 771:main.c        ****             moveForward();
 2107              		.loc 1 771 0
 2108 0070 FFF7FEFF 		bl	moveForward
 772:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 52


 2109              		.loc 1 772 0
 2110 0074 15E0     		b	.L149
 2111              	.L152:
 773:main.c        ****         case TurnRight:
 774:main.c        ****             turnRight();
 2112              		.loc 1 774 0
 2113 0076 FFF7FEFF 		bl	turnRight
 775:main.c        ****             break;
 2114              		.loc 1 775 0
 2115 007a 12E0     		b	.L149
 2116              	.L153:
 776:main.c        ****         case TurnLeft:
 777:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2117              		.loc 1 777 0
 2118 007c FFF7FEFF 		bl	turnLeft
 778:main.c        ****             break;
 2119              		.loc 1 778 0
 2120 0080 0FE0     		b	.L149
 2121              	.L155:
 779:main.c        ****         case AdjustToTheRight:
 780:main.c        ****             adjustRight();
 2122              		.loc 1 780 0
 2123 0082 FFF7FEFF 		bl	adjustRight
 781:main.c        ****             break;
 2124              		.loc 1 781 0
 2125 0086 0CE0     		b	.L149
 2126              	.L154:
 782:main.c        ****         case AdjustToTheLeft:
 783:main.c        ****             adjustLeft();
 2127              		.loc 1 783 0
 2128 0088 FFF7FEFF 		bl	adjustLeft
 784:main.c        ****             break;
 2129              		.loc 1 784 0
 2130 008c 09E0     		b	.L149
 2131              	.L156:
 785:main.c        ****         case Stop:
 786:main.c        ****             stopMoving();
 2132              		.loc 1 786 0
 2133 008e FFF7FEFF 		bl	stopMoving
 787:main.c        ****             break;
 2134              		.loc 1 787 0
 2135 0092 06E0     		b	.L149
 2136              	.L159:
 788:main.c        ****         case ForwardAfterTurn:
 789:main.c        ****             moveForward();
 2137              		.loc 1 789 0
 2138 0094 FFF7FEFF 		bl	moveForward
 790:main.c        ****             break;
 2139              		.loc 1 790 0
 2140 0098 03E0     		b	.L149
 2141              	.L160:
 791:main.c        ****         case Backward:
 792:main.c        ****             moveBackward();
 2142              		.loc 1 792 0
 2143 009a FFF7FEFF 		bl	moveBackward
 793:main.c        ****             break;
 2144              		.loc 1 793 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 53


 2145 009e 00E0     		b	.L149
 2146              	.L162:
 794:main.c        ****         case waitForTurn:
 795:main.c        ****             break;
 796:main.c        ****         /*case waitForLeftTurn:
 797:main.c        ****             moveForward();
 798:main.c        ****             break;
 799:main.c        ****         case waitForRightTurn:
 800:main.c        ****             moveForward();
 801:main.c        ****             break;*/
 802:main.c        ****         case Unknown:
 803:main.c        ****             // UNKNOWN CONFIGURATION
 804:main.c        ****             break;  
 2147              		.loc 1 804 0
 2148 00a0 00BF     		nop
 2149              	.L149:
 2150              	.L161:
 805:main.c        ****     }
 806:main.c        **** }...
 2151              		.loc 1 806 0
 2152 00a2 00BF     		nop
 2153 00a4 1437     		adds	r7, r7, #20
 2154              		.cfi_def_cfa_offset 12
 2155 00a6 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 00a8 90BD     		pop	{r4, r7, pc}
 2159              	.L164:
 2160 00aa 00BF     		.align	2
 2161              	.L163:
 2162 00ac 00000000 		.word	numSteps
 2163 00b0 00000000 		.word	instructionList
 2164 00b4 00000000 		.word	instructionIndex
 2165 00b8 00000000 		.word	currentInstruction
 2166 00bc 00000000 		.word	currentDirection
 2167 00c0 00000000 		.word	previousDirection
 2168              		.cfi_endproc
 2169              	.LFE78:
 2170              		.size	SetRobotMovement, .-SetRobotMovement
 2171              		.text
 2172              	.Letext0:
 2173              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2174              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2175              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2176              		.file 5 "vars.h"
 2177              		.file 6 "pathfinding.h"
 2178              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2179              		.file 8 "map.h"
 2180              		.section	.debug_info,"",%progbits
 2181              	.Ldebug_info0:
 2182 0000 E4080000 		.4byte	0x8e4
 2183 0004 0400     		.2byte	0x4
 2184 0006 00000000 		.4byte	.Ldebug_abbrev0
 2185 000a 04       		.byte	0x4
 2186 000b 01       		.uleb128 0x1
 2187 000c 92000000 		.4byte	.LASF136
 2188 0010 0C       		.byte	0xc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 54


 2189 0011 30000000 		.4byte	.LASF137
 2190 0015 2E030000 		.4byte	.LASF138
 2191 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2192 001d 00000000 		.4byte	0
 2193 0021 00000000 		.4byte	.Ldebug_line0
 2194 0025 02       		.uleb128 0x2
 2195 0026 01       		.byte	0x1
 2196 0027 06       		.byte	0x6
 2197 0028 BA060000 		.4byte	.LASF0
 2198 002c 02       		.uleb128 0x2
 2199 002d 01       		.byte	0x1
 2200 002e 08       		.byte	0x8
 2201 002f 10060000 		.4byte	.LASF1
 2202 0033 02       		.uleb128 0x2
 2203 0034 02       		.byte	0x2
 2204 0035 05       		.byte	0x5
 2205 0036 14050000 		.4byte	.LASF2
 2206 003a 02       		.uleb128 0x2
 2207 003b 02       		.byte	0x2
 2208 003c 07       		.byte	0x7
 2209 003d D1060000 		.4byte	.LASF3
 2210 0041 03       		.uleb128 0x3
 2211 0042 65000000 		.4byte	.LASF12
 2212 0046 02       		.byte	0x2
 2213 0047 3F       		.byte	0x3f
 2214 0048 4C000000 		.4byte	0x4c
 2215 004c 02       		.uleb128 0x2
 2216 004d 04       		.byte	0x4
 2217 004e 05       		.byte	0x5
 2218 004f 36050000 		.4byte	.LASF4
 2219 0053 02       		.uleb128 0x2
 2220 0054 04       		.byte	0x4
 2221 0055 07       		.byte	0x7
 2222 0056 CC050000 		.4byte	.LASF5
 2223 005a 02       		.uleb128 0x2
 2224 005b 08       		.byte	0x8
 2225 005c 05       		.byte	0x5
 2226 005d 08040000 		.4byte	.LASF6
 2227 0061 02       		.uleb128 0x2
 2228 0062 08       		.byte	0x8
 2229 0063 07       		.byte	0x7
 2230 0064 4F020000 		.4byte	.LASF7
 2231 0068 04       		.uleb128 0x4
 2232 0069 04       		.byte	0x4
 2233 006a 05       		.byte	0x5
 2234 006b 696E7400 		.ascii	"int\000"
 2235 006f 02       		.uleb128 0x2
 2236 0070 04       		.byte	0x4
 2237 0071 07       		.byte	0x7
 2238 0072 58000000 		.4byte	.LASF8
 2239 0076 02       		.uleb128 0x2
 2240 0077 08       		.byte	0x8
 2241 0078 04       		.byte	0x4
 2242 0079 D8040000 		.4byte	.LASF9
 2243 007d 02       		.uleb128 0x2
 2244 007e 04       		.byte	0x4
 2245 007f 07       		.byte	0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 55


 2246 0080 C3050000 		.4byte	.LASF10
 2247 0084 02       		.uleb128 0x2
 2248 0085 01       		.byte	0x1
 2249 0086 08       		.byte	0x8
 2250 0087 29030000 		.4byte	.LASF11
 2251 008b 03       		.uleb128 0x3
 2252 008c E9050000 		.4byte	.LASF13
 2253 0090 03       		.byte	0x3
 2254 0091 2C       		.byte	0x2c
 2255 0092 41000000 		.4byte	0x41
 2256 0096 05       		.uleb128 0x5
 2257 0097 27070000 		.4byte	.LASF14
 2258 009b 04       		.byte	0x4
 2259 009c E701     		.2byte	0x1e7
 2260 009e 2C000000 		.4byte	0x2c
 2261 00a2 05       		.uleb128 0x5
 2262 00a3 A9030000 		.4byte	.LASF15
 2263 00a7 04       		.byte	0x4
 2264 00a8 E801     		.2byte	0x1e8
 2265 00aa 3A000000 		.4byte	0x3a
 2266 00ae 05       		.uleb128 0x5
 2267 00af 88040000 		.4byte	.LASF16
 2268 00b3 04       		.byte	0x4
 2269 00b4 E901     		.2byte	0x1e9
 2270 00b6 53000000 		.4byte	0x53
 2271 00ba 05       		.uleb128 0x5
 2272 00bb B0030000 		.4byte	.LASF17
 2273 00bf 04       		.byte	0x4
 2274 00c0 EA01     		.2byte	0x1ea
 2275 00c2 25000000 		.4byte	0x25
 2276 00c6 05       		.uleb128 0x5
 2277 00c7 6F000000 		.4byte	.LASF18
 2278 00cb 04       		.byte	0x4
 2279 00cc EB01     		.2byte	0x1eb
 2280 00ce 33000000 		.4byte	0x33
 2281 00d2 02       		.uleb128 0x2
 2282 00d3 04       		.byte	0x4
 2283 00d4 04       		.byte	0x4
 2284 00d5 17020000 		.4byte	.LASF19
 2285 00d9 02       		.uleb128 0x2
 2286 00da 08       		.byte	0x8
 2287 00db 04       		.byte	0x4
 2288 00dc 2D070000 		.4byte	.LASF20
 2289 00e0 06       		.uleb128 0x6
 2290 00e1 AA040000 		.4byte	.LASF45
 2291 00e5 20       		.byte	0x20
 2292 00e6 05       		.byte	0x5
 2293 00e7 28       		.byte	0x28
 2294 00e8 B9010000 		.4byte	0x1b9
 2295 00ec 07       		.uleb128 0x7
 2296 00ed B4040000 		.4byte	.LASF21
 2297 00f1 05       		.byte	0x5
 2298 00f2 2A       		.byte	0x2a
 2299 00f3 BA000000 		.4byte	0xba
 2300 00f7 00       		.byte	0
 2301 00f8 07       		.uleb128 0x7
 2302 00f9 49020000 		.4byte	.LASF22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 56


 2303 00fd 05       		.byte	0x5
 2304 00fe 2B       		.byte	0x2b
 2305 00ff 96000000 		.4byte	0x96
 2306 0103 01       		.byte	0x1
 2307 0104 07       		.uleb128 0x7
 2308 0105 F1050000 		.4byte	.LASF23
 2309 0109 05       		.byte	0x5
 2310 010a 2C       		.byte	0x2c
 2311 010b C6000000 		.4byte	0xc6
 2312 010f 02       		.byte	0x2
 2313 0110 07       		.uleb128 0x7
 2314 0111 13030000 		.4byte	.LASF24
 2315 0115 05       		.byte	0x5
 2316 0116 2D       		.byte	0x2d
 2317 0117 C6000000 		.4byte	0xc6
 2318 011b 04       		.byte	0x4
 2319 011c 07       		.uleb128 0x7
 2320 011d E4060000 		.4byte	.LASF25
 2321 0121 05       		.byte	0x5
 2322 0122 2E       		.byte	0x2e
 2323 0123 C6000000 		.4byte	0xc6
 2324 0127 06       		.byte	0x6
 2325 0128 07       		.uleb128 0x7
 2326 0129 4E070000 		.4byte	.LASF26
 2327 012d 05       		.byte	0x5
 2328 012e 2F       		.byte	0x2f
 2329 012f C6000000 		.4byte	0xc6
 2330 0133 08       		.byte	0x8
 2331 0134 07       		.uleb128 0x7
 2332 0135 5C040000 		.4byte	.LASF27
 2333 0139 05       		.byte	0x5
 2334 013a 30       		.byte	0x30
 2335 013b C6000000 		.4byte	0xc6
 2336 013f 0A       		.byte	0xa
 2337 0140 07       		.uleb128 0x7
 2338 0141 7F030000 		.4byte	.LASF28
 2339 0145 05       		.byte	0x5
 2340 0146 31       		.byte	0x31
 2341 0147 C6000000 		.4byte	0xc6
 2342 014b 0C       		.byte	0xc
 2343 014c 07       		.uleb128 0x7
 2344 014d B9040000 		.4byte	.LASF29
 2345 0151 05       		.byte	0x5
 2346 0152 32       		.byte	0x32
 2347 0153 C6000000 		.4byte	0xc6
 2348 0157 0E       		.byte	0xe
 2349 0158 07       		.uleb128 0x7
 2350 0159 16040000 		.4byte	.LASF30
 2351 015d 05       		.byte	0x5
 2352 015e 33       		.byte	0x33
 2353 015f C6000000 		.4byte	0xc6
 2354 0163 10       		.byte	0x10
 2355 0164 07       		.uleb128 0x7
 2356 0165 AA050000 		.4byte	.LASF31
 2357 0169 05       		.byte	0x5
 2358 016a 34       		.byte	0x34
 2359 016b C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 57


 2360 016f 12       		.byte	0x12
 2361 0170 07       		.uleb128 0x7
 2362 0171 6E070000 		.4byte	.LASF32
 2363 0175 05       		.byte	0x5
 2364 0176 35       		.byte	0x35
 2365 0177 C6000000 		.4byte	0xc6
 2366 017b 14       		.byte	0x14
 2367 017c 07       		.uleb128 0x7
 2368 017d C0030000 		.4byte	.LASF33
 2369 0181 05       		.byte	0x5
 2370 0182 36       		.byte	0x36
 2371 0183 C6000000 		.4byte	0xc6
 2372 0187 16       		.byte	0x16
 2373 0188 07       		.uleb128 0x7
 2374 0189 3A010000 		.4byte	.LASF34
 2375 018d 05       		.byte	0x5
 2376 018e 37       		.byte	0x37
 2377 018f C6000000 		.4byte	0xc6
 2378 0193 18       		.byte	0x18
 2379 0194 07       		.uleb128 0x7
 2380 0195 70050000 		.4byte	.LASF35
 2381 0199 05       		.byte	0x5
 2382 019a 38       		.byte	0x38
 2383 019b C6000000 		.4byte	0xc6
 2384 019f 1A       		.byte	0x1a
 2385 01a0 07       		.uleb128 0x7
 2386 01a1 53040000 		.4byte	.LASF36
 2387 01a5 05       		.byte	0x5
 2388 01a6 39       		.byte	0x39
 2389 01a7 C6000000 		.4byte	0xc6
 2390 01ab 1C       		.byte	0x1c
 2391 01ac 07       		.uleb128 0x7
 2392 01ad F2010000 		.4byte	.LASF37
 2393 01b1 05       		.byte	0x5
 2394 01b2 3A       		.byte	0x3a
 2395 01b3 C6000000 		.4byte	0xc6
 2396 01b7 1E       		.byte	0x1e
 2397 01b8 00       		.byte	0
 2398 01b9 08       		.uleb128 0x8
 2399 01ba 1B000000 		.4byte	.LASF50
 2400 01be 01       		.byte	0x1
 2401 01bf 2C000000 		.4byte	0x2c
 2402 01c3 06       		.byte	0x6
 2403 01c4 0D       		.byte	0xd
 2404 01c5 F4010000 		.4byte	0x1f4
 2405 01c9 09       		.uleb128 0x9
 2406 01ca A4060000 		.4byte	.LASF38
 2407 01ce 00       		.byte	0
 2408 01cf 09       		.uleb128 0x9
 2409 01d0 F8030000 		.4byte	.LASF39
 2410 01d4 01       		.byte	0x1
 2411 01d5 09       		.uleb128 0x9
 2412 01d6 8F040000 		.4byte	.LASF40
 2413 01da 02       		.byte	0x2
 2414 01db 09       		.uleb128 0x9
 2415 01dc 41040000 		.4byte	.LASF41
 2416 01e0 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 58


 2417 01e1 09       		.uleb128 0x9
 2418 01e2 A6020000 		.4byte	.LASF42
 2419 01e6 04       		.byte	0x4
 2420 01e7 09       		.uleb128 0x9
 2421 01e8 FA020000 		.4byte	.LASF43
 2422 01ec 05       		.byte	0x5
 2423 01ed 09       		.uleb128 0x9
 2424 01ee 91060000 		.4byte	.LASF44
 2425 01f2 06       		.byte	0x6
 2426 01f3 00       		.byte	0
 2427 01f4 06       		.uleb128 0x6
 2428 01f5 66020000 		.4byte	.LASF46
 2429 01f9 0C       		.byte	0xc
 2430 01fa 06       		.byte	0x6
 2431 01fb 0E       		.byte	0xe
 2432 01fc 25020000 		.4byte	0x225
 2433 0200 07       		.uleb128 0x7
 2434 0201 00000000 		.4byte	.LASF47
 2435 0205 06       		.byte	0x6
 2436 0206 0F       		.byte	0xf
 2437 0207 B9010000 		.4byte	0x1b9
 2438 020b 00       		.byte	0
 2439 020c 07       		.uleb128 0x7
 2440 020d 77070000 		.4byte	.LASF48
 2441 0211 06       		.byte	0x6
 2442 0212 10       		.byte	0x10
 2443 0213 68000000 		.4byte	0x68
 2444 0217 04       		.byte	0x4
 2445 0218 07       		.uleb128 0x7
 2446 0219 7F070000 		.4byte	.LASF49
 2447 021d 06       		.byte	0x6
 2448 021e 11       		.byte	0x11
 2449 021f 68000000 		.4byte	0x68
 2450 0223 08       		.byte	0x8
 2451 0224 00       		.byte	0
 2452 0225 03       		.uleb128 0x3
 2453 0226 66020000 		.4byte	.LASF46
 2454 022a 06       		.byte	0x6
 2455 022b 12       		.byte	0x12
 2456 022c F4010000 		.4byte	0x1f4
 2457 0230 08       		.uleb128 0x8
 2458 0231 8E050000 		.4byte	.LASF51
 2459 0235 01       		.byte	0x1
 2460 0236 2C000000 		.4byte	0x2c
 2461 023a 06       		.byte	0x6
 2462 023b 14       		.byte	0x14
 2463 023c 58020000 		.4byte	0x258
 2464 0240 0A       		.uleb128 0xa
 2465 0241 557000   		.ascii	"Up\000"
 2466 0244 00       		.byte	0
 2467 0245 09       		.uleb128 0x9
 2468 0246 9F050000 		.4byte	.LASF52
 2469 024a 01       		.byte	0x1
 2470 024b 09       		.uleb128 0x9
 2471 024c CD030000 		.4byte	.LASF53
 2472 0250 02       		.byte	0x2
 2473 0251 09       		.uleb128 0x9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 59


 2474 0252 A4050000 		.4byte	.LASF54
 2475 0256 03       		.byte	0x3
 2476 0257 00       		.byte	0
 2477 0258 08       		.uleb128 0x8
 2478 0259 02060000 		.4byte	.LASF55
 2479 025d 01       		.byte	0x1
 2480 025e 2C000000 		.4byte	0x2c
 2481 0262 01       		.byte	0x1
 2482 0263 18       		.byte	0x18
 2483 0264 A5020000 		.4byte	0x2a5
 2484 0268 09       		.uleb128 0x9
 2485 0269 56050000 		.4byte	.LASF56
 2486 026d 00       		.byte	0
 2487 026e 09       		.uleb128 0x9
 2488 026f A0040000 		.4byte	.LASF57
 2489 0273 01       		.byte	0x1
 2490 0274 09       		.uleb128 0x9
 2491 0275 6E040000 		.4byte	.LASF58
 2492 0279 02       		.byte	0x2
 2493 027a 09       		.uleb128 0x9
 2494 027b 0E070000 		.4byte	.LASF59
 2495 027f 03       		.byte	0x3
 2496 0280 09       		.uleb128 0x9
 2497 0281 4E060000 		.4byte	.LASF60
 2498 0285 04       		.byte	0x4
 2499 0286 09       		.uleb128 0x9
 2500 0287 5F060000 		.4byte	.LASF61
 2501 028b 05       		.byte	0x5
 2502 028c 09       		.uleb128 0x9
 2503 028d 80040000 		.4byte	.LASF62
 2504 0291 06       		.byte	0x6
 2505 0292 09       		.uleb128 0x9
 2506 0293 07030000 		.4byte	.LASF63
 2507 0297 07       		.byte	0x7
 2508 0298 09       		.uleb128 0x9
 2509 0299 0A000000 		.4byte	.LASF64
 2510 029d 08       		.byte	0x8
 2511 029e 09       		.uleb128 0x9
 2512 029f 1E070000 		.4byte	.LASF65
 2513 02a3 09       		.byte	0x9
 2514 02a4 00       		.byte	0
 2515 02a5 0B       		.uleb128 0xb
 2516 02a6 D2030000 		.4byte	.LASF74
 2517 02aa 01       		.byte	0x1
 2518 02ab 39       		.byte	0x39
 2519 02ac 00000000 		.4byte	.LFB64
 2520 02b0 EC000000 		.4byte	.LFE64-.LFB64
 2521 02b4 01       		.uleb128 0x1
 2522 02b5 9C       		.byte	0x9c
 2523 02b6 D3020000 		.4byte	0x2d3
 2524 02ba 0C       		.uleb128 0xc
 2525 02bb 50000000 		.4byte	.LBB2
 2526 02bf 62000000 		.4byte	.LBE2-.LBB2
 2527 02c3 0D       		.uleb128 0xd
 2528 02c4 47040000 		.4byte	.LASF72
 2529 02c8 01       		.byte	0x1
 2530 02c9 46       		.byte	0x46
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 60


 2531 02ca D2000000 		.4byte	0xd2
 2532 02ce 02       		.uleb128 0x2
 2533 02cf 91       		.byte	0x91
 2534 02d0 6C       		.sleb128 -20
 2535 02d1 00       		.byte	0
 2536 02d2 00       		.byte	0
 2537 02d3 0E       		.uleb128 0xe
 2538 02d4 2A050000 		.4byte	.LASF66
 2539 02d8 01       		.byte	0x1
 2540 02d9 51       		.byte	0x51
 2541 02da 00000000 		.4byte	.LFB65
 2542 02de 18000000 		.4byte	.LFE65-.LFB65
 2543 02e2 01       		.uleb128 0x1
 2544 02e3 9C       		.byte	0x9c
 2545 02e4 0E       		.uleb128 0xe
 2546 02e5 1E050000 		.4byte	.LASF67
 2547 02e9 01       		.byte	0x1
 2548 02ea 57       		.byte	0x57
 2549 02eb 00000000 		.4byte	.LFB66
 2550 02ef 18000000 		.4byte	.LFE66-.LFB66
 2551 02f3 01       		.uleb128 0x1
 2552 02f4 9C       		.byte	0x9c
 2553 02f5 0E       		.uleb128 0xe
 2554 02f6 AE060000 		.4byte	.LASF68
 2555 02fa 01       		.byte	0x1
 2556 02fb 5D       		.byte	0x5d
 2557 02fc 00000000 		.4byte	.LFB67
 2558 0300 18000000 		.4byte	.LFE67-.LFB67
 2559 0304 01       		.uleb128 0x1
 2560 0305 9C       		.byte	0x9c
 2561 0306 0E       		.uleb128 0xe
 2562 0307 20010000 		.4byte	.LASF69
 2563 030b 01       		.byte	0x1
 2564 030c 63       		.byte	0x63
 2565 030d 00000000 		.4byte	.LFB68
 2566 0311 18000000 		.4byte	.LFE68-.LFB68
 2567 0315 01       		.uleb128 0x1
 2568 0316 9C       		.byte	0x9c
 2569 0317 0F       		.uleb128 0xf
 2570 0318 8F020000 		.4byte	.LASF70
 2571 031c 01       		.byte	0x1
 2572 031d 69       		.byte	0x69
 2573 031e 00000000 		.4byte	.LFB69
 2574 0322 38000000 		.4byte	.LFE69-.LFB69
 2575 0326 01       		.uleb128 0x1
 2576 0327 9C       		.byte	0x9c
 2577 0328 10       		.uleb128 0x10
 2578 0329 F6060000 		.4byte	.LASF71
 2579 032d 01       		.byte	0x1
 2580 032e 75       		.byte	0x75
 2581 032f 68000000 		.4byte	0x68
 2582 0333 00000000 		.4byte	.LFB70
 2583 0337 C0000000 		.4byte	.LFE70-.LFB70
 2584 033b 01       		.uleb128 0x1
 2585 033c 9C       		.byte	0x9c
 2586 033d 11       		.uleb128 0x11
 2587 033e D4020000 		.4byte	.LASF78
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 61


 2588 0342 01       		.byte	0x1
 2589 0343 A3       		.byte	0xa3
 2590 0344 C6000000 		.4byte	0xc6
 2591 0348 00000000 		.4byte	.LFB71
 2592 034c 54000000 		.4byte	.LFE71-.LFB71
 2593 0350 01       		.uleb128 0x1
 2594 0351 9C       		.byte	0x9c
 2595 0352 81030000 		.4byte	0x381
 2596 0356 12       		.uleb128 0x12
 2597 0357 43020000 		.4byte	.LASF80
 2598 035b 01       		.byte	0x1
 2599 035c A3       		.byte	0xa3
 2600 035d A2000000 		.4byte	0xa2
 2601 0361 02       		.uleb128 0x2
 2602 0362 91       		.byte	0x91
 2603 0363 66       		.sleb128 -26
 2604 0364 13       		.uleb128 0x13
 2605 0365 63707300 		.ascii	"cps\000"
 2606 0369 01       		.byte	0x1
 2607 036a A5       		.byte	0xa5
 2608 036b D2000000 		.4byte	0xd2
 2609 036f 02       		.uleb128 0x2
 2610 0370 91       		.byte	0x91
 2611 0371 6C       		.sleb128 -20
 2612 0372 13       		.uleb128 0x13
 2613 0373 72706D00 		.ascii	"rpm\000"
 2614 0377 01       		.byte	0x1
 2615 0378 A6       		.byte	0xa6
 2616 0379 C6000000 		.4byte	0xc6
 2617 037d 02       		.uleb128 0x2
 2618 037e 91       		.byte	0x91
 2619 037f 6A       		.sleb128 -22
 2620 0380 00       		.byte	0
 2621 0381 14       		.uleb128 0x14
 2622 0382 E1010000 		.4byte	.LASF86
 2623 0386 01       		.byte	0x1
 2624 0387 AE       		.byte	0xae
 2625 0388 00000000 		.4byte	.LFB72
 2626 038c 34000000 		.4byte	.LFE72-.LFB72
 2627 0390 01       		.uleb128 0x1
 2628 0391 9C       		.byte	0x9c
 2629 0392 15       		.uleb128 0x15
 2630 0393 B1010000 		.4byte	.LASF73
 2631 0397 01       		.byte	0x1
 2632 0398 A601     		.2byte	0x1a6
 2633 039a 58020000 		.4byte	0x258
 2634 039e 00000000 		.4byte	.LFB73
 2635 03a2 84000000 		.4byte	.LFE73-.LFB73
 2636 03a6 01       		.uleb128 0x1
 2637 03a7 9C       		.byte	0x9c
 2638 03a8 16       		.uleb128 0x16
 2639 03a9 73010000 		.4byte	.LASF75
 2640 03ad 01       		.byte	0x1
 2641 03ae C801     		.2byte	0x1c8
 2642 03b0 58020000 		.4byte	0x258
 2643 03b4 00000000 		.4byte	.LFB74
 2644 03b8 1C030000 		.4byte	.LFE74-.LFB74
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 62


 2645 03bc 01       		.uleb128 0x1
 2646 03bd 9C       		.byte	0x9c
 2647 03be E1030000 		.4byte	0x3e1
 2648 03c2 17       		.uleb128 0x17
 2649 03c3 47000000 		.4byte	.LASF76
 2650 03c7 01       		.byte	0x1
 2651 03c8 C901     		.2byte	0x1c9
 2652 03ca D2000000 		.4byte	0xd2
 2653 03ce 02       		.uleb128 0x2
 2654 03cf 91       		.byte	0x91
 2655 03d0 74       		.sleb128 -12
 2656 03d1 17       		.uleb128 0x17
 2657 03d2 1D020000 		.4byte	.LASF77
 2658 03d6 01       		.byte	0x1
 2659 03d7 D801     		.2byte	0x1d8
 2660 03d9 B9010000 		.4byte	0x1b9
 2661 03dd 02       		.uleb128 0x2
 2662 03de 91       		.byte	0x91
 2663 03df 73       		.sleb128 -13
 2664 03e0 00       		.byte	0
 2665 03e1 18       		.uleb128 0x18
 2666 03e2 34060000 		.4byte	.LASF79
 2667 03e6 01       		.byte	0x1
 2668 03e7 9302     		.2byte	0x293
 2669 03e9 D2000000 		.4byte	0xd2
 2670 03ed 00000000 		.4byte	.LFB75
 2671 03f1 8C020000 		.4byte	.LFE75-.LFB75
 2672 03f5 01       		.uleb128 0x1
 2673 03f6 9C       		.byte	0x9c
 2674 03f7 9F040000 		.4byte	0x49f
 2675 03fb 19       		.uleb128 0x19
 2676 03fc E3020000 		.4byte	.LASF81
 2677 0400 01       		.byte	0x1
 2678 0401 9302     		.2byte	0x293
 2679 0403 D2000000 		.4byte	0xd2
 2680 0407 02       		.uleb128 0x2
 2681 0408 91       		.byte	0x91
 2682 0409 54       		.sleb128 -44
 2683 040a 17       		.uleb128 0x17
 2684 040b 3F070000 		.4byte	.LASF82
 2685 040f 01       		.byte	0x1
 2686 0410 9402     		.2byte	0x294
 2687 0412 D2000000 		.4byte	0xd2
 2688 0416 02       		.uleb128 0x2
 2689 0417 91       		.byte	0x91
 2690 0418 58       		.sleb128 -40
 2691 0419 17       		.uleb128 0x17
 2692 041a 69010000 		.4byte	.LASF83
 2693 041e 01       		.byte	0x1
 2694 041f 9702     		.2byte	0x297
 2695 0421 68000000 		.4byte	0x68
 2696 0425 02       		.uleb128 0x2
 2697 0426 91       		.byte	0x91
 2698 0427 60       		.sleb128 -32
 2699 0428 17       		.uleb128 0x17
 2700 0429 FF010000 		.4byte	.LASF84
 2701 042d 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 63


 2702 042e 9802     		.2byte	0x298
 2703 0430 68000000 		.4byte	0x68
 2704 0434 02       		.uleb128 0x2
 2705 0435 91       		.byte	0x91
 2706 0436 5C       		.sleb128 -36
 2707 0437 17       		.uleb128 0x17
 2708 0438 DD030000 		.4byte	.LASF85
 2709 043c 01       		.byte	0x1
 2710 043d 9A02     		.2byte	0x29a
 2711 043f 68000000 		.4byte	0x68
 2712 0443 02       		.uleb128 0x2
 2713 0444 91       		.byte	0x91
 2714 0445 74       		.sleb128 -12
 2715 0446 1A       		.uleb128 0x1a
 2716 0447 00000000 		.4byte	.Ldebug_ranges0+0
 2717 044b 5D040000 		.4byte	0x45d
 2718 044f 1B       		.uleb128 0x1b
 2719 0450 6900     		.ascii	"i\000"
 2720 0452 01       		.byte	0x1
 2721 0453 A402     		.2byte	0x2a4
 2722 0455 68000000 		.4byte	0x68
 2723 0459 02       		.uleb128 0x2
 2724 045a 91       		.byte	0x91
 2725 045b 70       		.sleb128 -16
 2726 045c 00       		.byte	0
 2727 045d 1A       		.uleb128 0x1a
 2728 045e 18000000 		.4byte	.Ldebug_ranges0+0x18
 2729 0462 74040000 		.4byte	0x474
 2730 0466 1B       		.uleb128 0x1b
 2731 0467 6900     		.ascii	"i\000"
 2732 0469 01       		.byte	0x1
 2733 046a B302     		.2byte	0x2b3
 2734 046c 68000000 		.4byte	0x68
 2735 0470 02       		.uleb128 0x2
 2736 0471 91       		.byte	0x91
 2737 0472 6C       		.sleb128 -20
 2738 0473 00       		.byte	0
 2739 0474 1A       		.uleb128 0x1a
 2740 0475 30000000 		.4byte	.Ldebug_ranges0+0x30
 2741 0479 8B040000 		.4byte	0x48b
 2742 047d 1B       		.uleb128 0x1b
 2743 047e 6900     		.ascii	"i\000"
 2744 0480 01       		.byte	0x1
 2745 0481 C202     		.2byte	0x2c2
 2746 0483 68000000 		.4byte	0x68
 2747 0487 02       		.uleb128 0x2
 2748 0488 91       		.byte	0x91
 2749 0489 68       		.sleb128 -24
 2750 048a 00       		.byte	0
 2751 048b 1C       		.uleb128 0x1c
 2752 048c 48000000 		.4byte	.Ldebug_ranges0+0x48
 2753 0490 1B       		.uleb128 0x1b
 2754 0491 6900     		.ascii	"i\000"
 2755 0493 01       		.byte	0x1
 2756 0494 D202     		.2byte	0x2d2
 2757 0496 68000000 		.4byte	0x68
 2758 049a 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 64


 2759 049b 91       		.byte	0x91
 2760 049c 64       		.sleb128 -28
 2761 049d 00       		.byte	0
 2762 049e 00       		.byte	0
 2763 049f 1D       		.uleb128 0x1d
 2764 04a0 78050000 		.4byte	.LASF87
 2765 04a4 01       		.byte	0x1
 2766 04a5 E602     		.2byte	0x2e6
 2767 04a7 00000000 		.4byte	.LFB76
 2768 04ab 1C000000 		.4byte	.LFE76-.LFB76
 2769 04af 01       		.uleb128 0x1
 2770 04b0 9C       		.byte	0x9c
 2771 04b1 1E       		.uleb128 0x1e
 2772 04b2 64060000 		.4byte	.LASF88
 2773 04b6 01       		.byte	0x1
 2774 04b7 EB02     		.2byte	0x2eb
 2775 04b9 25020000 		.4byte	0x225
 2776 04bd 00000000 		.4byte	.LFB77
 2777 04c1 A4000000 		.4byte	.LFE77-.LFB77
 2778 04c5 01       		.uleb128 0x1
 2779 04c6 9C       		.byte	0x9c
 2780 04c7 1F050000 		.4byte	0x51f
 2781 04cb 19       		.uleb128 0x19
 2782 04cc 60010000 		.4byte	.LASF89
 2783 04d0 01       		.byte	0x1
 2784 04d1 EB02     		.2byte	0x2eb
 2785 04d3 68000000 		.4byte	0x68
 2786 04d7 02       		.uleb128 0x2
 2787 04d8 91       		.byte	0x91
 2788 04d9 60       		.sleb128 -32
 2789 04da 19       		.uleb128 0x19
 2790 04db 88030000 		.4byte	.LASF90
 2791 04df 01       		.byte	0x1
 2792 04e0 EB02     		.2byte	0x2eb
 2793 04e2 1F050000 		.4byte	0x51f
 2794 04e6 02       		.uleb128 0x2
 2795 04e7 91       		.byte	0x91
 2796 04e8 5C       		.sleb128 -36
 2797 04e9 19       		.uleb128 0x19
 2798 04ea 98030000 		.4byte	.LASF91
 2799 04ee 01       		.byte	0x1
 2800 04ef EB02     		.2byte	0x2eb
 2801 04f1 68000000 		.4byte	0x68
 2802 04f5 02       		.uleb128 0x2
 2803 04f6 91       		.byte	0x91
 2804 04f7 58       		.sleb128 -40
 2805 04f8 17       		.uleb128 0x17
 2806 04f9 82000000 		.4byte	.LASF92
 2807 04fd 01       		.byte	0x1
 2808 04fe EC02     		.2byte	0x2ec
 2809 0500 25020000 		.4byte	0x225
 2810 0504 02       		.uleb128 0x2
 2811 0505 91       		.byte	0x91
 2812 0506 68       		.sleb128 -24
 2813 0507 0C       		.uleb128 0xc
 2814 0508 0E000000 		.4byte	.LBB11
 2815 050c 7C000000 		.4byte	.LBE11-.LBB11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 65


 2816 0510 1B       		.uleb128 0x1b
 2817 0511 6900     		.ascii	"i\000"
 2818 0513 01       		.byte	0x1
 2819 0514 EE02     		.2byte	0x2ee
 2820 0516 68000000 		.4byte	0x68
 2821 051a 02       		.uleb128 0x2
 2822 051b 91       		.byte	0x91
 2823 051c 74       		.sleb128 -12
 2824 051d 00       		.byte	0
 2825 051e 00       		.byte	0
 2826 051f 1F       		.uleb128 0x1f
 2827 0520 04       		.byte	0x4
 2828 0521 25020000 		.4byte	0x225
 2829 0525 20       		.uleb128 0x20
 2830 0526 7E020000 		.4byte	.LASF93
 2831 052a 01       		.byte	0x1
 2832 052b FB02     		.2byte	0x2fb
 2833 052d 00000000 		.4byte	.LFB78
 2834 0531 C4000000 		.4byte	.LFE78-.LFB78
 2835 0535 01       		.uleb128 0x1
 2836 0536 9C       		.byte	0x9c
 2837 0537 21       		.uleb128 0x21
 2838 0538 3F050000 		.4byte	.LASF94
 2839 053c 07       		.byte	0x7
 2840 053d 1207     		.2byte	0x712
 2841 053f 43050000 		.4byte	0x543
 2842 0543 22       		.uleb128 0x22
 2843 0544 8B000000 		.4byte	0x8b
 2844 0548 23       		.uleb128 0x23
 2845 0549 747300   		.ascii	"ts\000"
 2846 054c 05       		.byte	0x5
 2847 054d 10       		.byte	0x10
 2848 054e 96000000 		.4byte	0x96
 2849 0552 05       		.uleb128 0x5
 2850 0553 03       		.byte	0x3
 2851 0554 00000000 		.4byte	ts
 2852 0558 24       		.uleb128 0x24
 2853 0559 7A060000 		.4byte	.LASF95
 2854 055d 05       		.byte	0x5
 2855 055e 11       		.byte	0x11
 2856 055f A2000000 		.4byte	0xa2
 2857 0563 05       		.uleb128 0x5
 2858 0564 03       		.byte	0x3
 2859 0565 00000000 		.4byte	ts_enc
 2860 0569 24       		.uleb128 0x24
 2861 056a 4C050000 		.4byte	.LASF96
 2862 056e 05       		.byte	0x5
 2863 056f 12       		.byte	0x12
 2864 0570 A2000000 		.4byte	0xa2
 2865 0574 05       		.uleb128 0x5
 2866 0575 03       		.byte	0x3
 2867 0576 00000000 		.4byte	ts_update
 2868 057a 24       		.uleb128 0x24
 2869 057b 77040000 		.4byte	.LASF97
 2870 057f 05       		.byte	0x5
 2871 0580 13       		.byte	0x13
 2872 0581 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 66


 2873 0585 05       		.uleb128 0x5
 2874 0586 03       		.byte	0x3
 2875 0587 00000000 		.4byte	ts_speed
 2876 058b 24       		.uleb128 0x24
 2877 058c 1E030000 		.4byte	.LASF98
 2878 0590 05       		.byte	0x5
 2879 0591 14       		.byte	0x14
 2880 0592 A2000000 		.4byte	0xa2
 2881 0596 05       		.uleb128 0x5
 2882 0597 03       		.byte	0x3
 2883 0598 00000000 		.4byte	ts_display
 2884 059c 24       		.uleb128 0x24
 2885 059d C8020000 		.4byte	.LASF99
 2886 05a1 05       		.byte	0x5
 2887 05a2 16       		.byte	0x16
 2888 05a3 96000000 		.4byte	0x96
 2889 05a7 05       		.uleb128 0x5
 2890 05a8 03       		.byte	0x3
 2891 05a9 00000000 		.4byte	flag_ts_enc
 2892 05ad 24       		.uleb128 0x24
 2893 05ae B9020000 		.4byte	.LASF100
 2894 05b2 05       		.byte	0x5
 2895 05b3 17       		.byte	0x17
 2896 05b4 96000000 		.4byte	0x96
 2897 05b8 05       		.uleb128 0x5
 2898 05b9 03       		.byte	0x3
 2899 05ba 00000000 		.4byte	flag_ts_update
 2900 05be 24       		.uleb128 0x24
 2901 05bf E4040000 		.4byte	.LASF101
 2902 05c3 05       		.byte	0x5
 2903 05c4 18       		.byte	0x18
 2904 05c5 96000000 		.4byte	0x96
 2905 05c9 05       		.uleb128 0x5
 2906 05ca 03       		.byte	0x3
 2907 05cb 00000000 		.4byte	flag_ts_speed
 2908 05cf 24       		.uleb128 0x24
 2909 05d0 81060000 		.4byte	.LASF102
 2910 05d4 05       		.byte	0x5
 2911 05d5 19       		.byte	0x19
 2912 05d6 96000000 		.4byte	0x96
 2913 05da 05       		.uleb128 0x5
 2914 05db 03       		.byte	0x3
 2915 05dc 00000000 		.4byte	flag_ts_display
 2916 05e0 24       		.uleb128 0x24
 2917 05e1 01050000 		.4byte	.LASF103
 2918 05e5 05       		.byte	0x5
 2919 05e6 1B       		.byte	0x1b
 2920 05e7 96000000 		.4byte	0x96
 2921 05eb 05       		.uleb128 0x5
 2922 05ec 03       		.byte	0x3
 2923 05ed 00000000 		.4byte	flag_rx
 2924 05f1 24       		.uleb128 0x24
 2925 05f2 72020000 		.4byte	.LASF104
 2926 05f6 05       		.byte	0x5
 2927 05f7 1C       		.byte	0x1c
 2928 05f8 96000000 		.4byte	0x96
 2929 05fc 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 67


 2930 05fd 03       		.byte	0x3
 2931 05fe 00000000 		.4byte	flag_packet
 2932 0602 24       		.uleb128 0x24
 2933 0603 5F070000 		.4byte	.LASF105
 2934 0607 05       		.byte	0x5
 2935 0608 1D       		.byte	0x1d
 2936 0609 96000000 		.4byte	0x96
 2937 060d 05       		.uleb128 0x5
 2938 060e 03       		.byte	0x3
 2939 060f 00000000 		.4byte	flag_KB_string
 2940 0613 24       		.uleb128 0x24
 2941 0614 F2040000 		.4byte	.LASF106
 2942 0618 05       		.byte	0x5
 2943 0619 1F       		.byte	0x1f
 2944 061a 96000000 		.4byte	0x96
 2945 061e 05       		.uleb128 0x5
 2946 061f 03       		.byte	0x3
 2947 0620 00000000 		.4byte	dataready_flag
 2948 0624 24       		.uleb128 0x24
 2949 0625 95010000 		.4byte	.LASF107
 2950 0629 05       		.byte	0x5
 2951 062a 21       		.byte	0x21
 2952 062b 96000000 		.4byte	0x96
 2953 062f 05       		.uleb128 0x5
 2954 0630 03       		.byte	0x3
 2955 0631 00000000 		.4byte	flag_rf_transmission_active
 2956 0635 25       		.uleb128 0x25
 2957 0636 84000000 		.4byte	0x84
 2958 063a 45060000 		.4byte	0x645
 2959 063e 26       		.uleb128 0x26
 2960 063f 7D000000 		.4byte	0x7d
 2961 0643 3F       		.byte	0x3f
 2962 0644 00       		.byte	0
 2963 0645 24       		.uleb128 0x24
 2964 0646 96060000 		.4byte	.LASF108
 2965 064a 05       		.byte	0x5
 2966 064b 24       		.byte	0x24
 2967 064c 35060000 		.4byte	0x635
 2968 0650 05       		.uleb128 0x5
 2969 0651 03       		.byte	0x3
 2970 0652 00000000 		.4byte	displaystring
 2971 0656 24       		.uleb128 0x24
 2972 0657 2F060000 		.4byte	.LASF109
 2973 065b 05       		.byte	0x5
 2974 065c 25       		.byte	0x25
 2975 065d 35060000 		.4byte	0x635
 2976 0661 05       		.uleb128 0x5
 2977 0662 03       		.byte	0x3
 2978 0663 00000000 		.4byte	line
 2979 0667 24       		.uleb128 0x24
 2980 0668 FC050000 		.4byte	.LASF110
 2981 066c 05       		.byte	0x5
 2982 066d 25       		.byte	0x25
 2983 066e 35060000 		.4byte	0x635
 2984 0672 05       		.uleb128 0x5
 2985 0673 03       		.byte	0x3
 2986 0674 00000000 		.4byte	entry
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 68


 2987 0678 25       		.uleb128 0x25
 2988 0679 96000000 		.4byte	0x96
 2989 067d 88060000 		.4byte	0x688
 2990 0681 26       		.uleb128 0x26
 2991 0682 7D000000 		.4byte	0x7d
 2992 0686 3F       		.byte	0x3f
 2993 0687 00       		.byte	0
 2994 0688 24       		.uleb128 0x24
 2995 0689 39020000 		.4byte	.LASF111
 2996 068d 05       		.byte	0x5
 2997 068e 26       		.byte	0x26
 2998 068f 78060000 		.4byte	0x678
 2999 0693 05       		.uleb128 0x5
 3000 0694 03       		.byte	0x3
 3001 0695 00000000 		.4byte	usbBuffer
 3002 0699 24       		.uleb128 0x24
 3003 069a 75000000 		.4byte	.LASF112
 3004 069e 05       		.byte	0x5
 3005 069f 3C       		.byte	0x3c
 3006 06a0 E0000000 		.4byte	0xe0
 3007 06a4 05       		.uleb128 0x5
 3008 06a5 03       		.byte	0x3
 3009 06a6 00000000 		.4byte	system_state
 3010 06aa 25       		.uleb128 0x25
 3011 06ab 68000000 		.4byte	0x68
 3012 06af C0060000 		.4byte	0x6c0
 3013 06b3 26       		.uleb128 0x26
 3014 06b4 7D000000 		.4byte	0x7d
 3015 06b8 0E       		.byte	0xe
 3016 06b9 26       		.uleb128 0x26
 3017 06ba 7D000000 		.4byte	0x7d
 3018 06be 12       		.byte	0x12
 3019 06bf 00       		.byte	0
 3020 06c0 27       		.uleb128 0x27
 3021 06c1 6D617000 		.ascii	"map\000"
 3022 06c5 08       		.byte	0x8
 3023 06c6 04       		.byte	0x4
 3024 06c7 AA060000 		.4byte	0x6aa
 3025 06cb 25       		.uleb128 0x25
 3026 06cc 68000000 		.4byte	0x68
 3027 06d0 E1060000 		.4byte	0x6e1
 3028 06d4 26       		.uleb128 0x26
 3029 06d5 7D000000 		.4byte	0x7d
 3030 06d9 04       		.byte	0x4
 3031 06da 26       		.uleb128 0x26
 3032 06db 7D000000 		.4byte	0x7d
 3033 06df 01       		.byte	0x1
 3034 06e0 00       		.byte	0
 3035 06e1 28       		.uleb128 0x28
 3036 06e2 64040000 		.4byte	.LASF113
 3037 06e6 08       		.byte	0x8
 3038 06e7 05       		.byte	0x5
 3039 06e8 CB060000 		.4byte	0x6cb
 3040 06ec 24       		.uleb128 0x24
 3041 06ed B2050000 		.4byte	.LASF114
 3042 06f1 01       		.byte	0x1
 3043 06f2 19       		.byte	0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 69


 3044 06f3 58020000 		.4byte	0x258
 3045 06f7 05       		.uleb128 0x5
 3046 06f8 03       		.byte	0x3
 3047 06f9 00000000 		.4byte	currentDirection
 3048 06fd 24       		.uleb128 0x24
 3049 06fe C6040000 		.4byte	.LASF115
 3050 0702 01       		.byte	0x1
 3051 0703 19       		.byte	0x19
 3052 0704 58020000 		.4byte	0x258
 3053 0708 05       		.uleb128 0x5
 3054 0709 03       		.byte	0x3
 3055 070a 00000000 		.4byte	previousDirection
 3056 070e 24       		.uleb128 0x24
 3057 070f C9010000 		.4byte	.LASF116
 3058 0713 01       		.byte	0x1
 3059 0714 1B       		.byte	0x1b
 3060 0715 30020000 		.4byte	0x230
 3061 0719 05       		.uleb128 0x5
 3062 071a 03       		.byte	0x3
 3063 071b 00000000 		.4byte	currentRobotOrientation
 3064 071f 24       		.uleb128 0x24
 3065 0720 2D040000 		.4byte	.LASF117
 3066 0724 01       		.byte	0x1
 3067 0725 1B       		.byte	0x1b
 3068 0726 30020000 		.4byte	0x230
 3069 072a 05       		.uleb128 0x5
 3070 072b 03       		.byte	0x3
 3071 072c 00000000 		.4byte	previousOrientation
 3072 0730 24       		.uleb128 0x24
 3073 0731 FB060000 		.4byte	.LASF118
 3074 0735 01       		.byte	0x1
 3075 0736 1C       		.byte	0x1c
 3076 0737 25020000 		.4byte	0x225
 3077 073b 05       		.uleb128 0x5
 3078 073c 03       		.byte	0x3
 3079 073d 00000000 		.4byte	currentInstruction
 3080 0741 24       		.uleb128 0x24
 3081 0742 60010000 		.4byte	.LASF89
 3082 0746 01       		.byte	0x1
 3083 0747 1D       		.byte	0x1d
 3084 0748 68000000 		.4byte	0x68
 3085 074c 05       		.uleb128 0x5
 3086 074d 03       		.byte	0x3
 3087 074e 00000000 		.4byte	numSteps
 3088 0752 24       		.uleb128 0x24
 3089 0753 88030000 		.4byte	.LASF90
 3090 0757 01       		.byte	0x1
 3091 0758 1F       		.byte	0x1f
 3092 0759 1F050000 		.4byte	0x51f
 3093 075d 05       		.uleb128 0x5
 3094 075e 03       		.byte	0x3
 3095 075f 00000000 		.4byte	instructionList
 3096 0763 24       		.uleb128 0x24
 3097 0764 98030000 		.4byte	.LASF91
 3098 0768 01       		.byte	0x1
 3099 0769 20       		.byte	0x20
 3100 076a AE000000 		.4byte	0xae
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 70


 3101 076e 05       		.uleb128 0x5
 3102 076f 03       		.byte	0x3
 3103 0770 00000000 		.4byte	instructionIndex
 3104 0774 23       		.uleb128 0x23
 3105 0775 733300   		.ascii	"s3\000"
 3106 0778 01       		.byte	0x1
 3107 0779 25       		.byte	0x25
 3108 077a 96000000 		.4byte	0x96
 3109 077e 05       		.uleb128 0x5
 3110 077f 03       		.byte	0x3
 3111 0780 00000000 		.4byte	s3
 3112 0784 23       		.uleb128 0x23
 3113 0785 733400   		.ascii	"s4\000"
 3114 0788 01       		.byte	0x1
 3115 0789 25       		.byte	0x25
 3116 078a 96000000 		.4byte	0x96
 3117 078e 05       		.uleb128 0x5
 3118 078f 03       		.byte	0x3
 3119 0790 00000000 		.4byte	s4
 3120 0794 23       		.uleb128 0x23
 3121 0795 733500   		.ascii	"s5\000"
 3122 0798 01       		.byte	0x1
 3123 0799 25       		.byte	0x25
 3124 079a 96000000 		.4byte	0x96
 3125 079e 05       		.uleb128 0x5
 3126 079f 03       		.byte	0x3
 3127 07a0 00000000 		.4byte	s5
 3128 07a4 23       		.uleb128 0x23
 3129 07a5 733600   		.ascii	"s6\000"
 3130 07a8 01       		.byte	0x1
 3131 07a9 25       		.byte	0x25
 3132 07aa 96000000 		.4byte	0x96
 3133 07ae 05       		.uleb128 0x5
 3134 07af 03       		.byte	0x3
 3135 07b0 00000000 		.4byte	s6
 3136 07b4 24       		.uleb128 0x24
 3137 07b5 5E050000 		.4byte	.LASF119
 3138 07b9 01       		.byte	0x1
 3139 07ba 2A       		.byte	0x2a
 3140 07bb AE000000 		.4byte	0xae
 3141 07bf 05       		.uleb128 0x5
 3142 07c0 03       		.byte	0x3
 3143 07c1 00000000 		.4byte	totalMilliseconds
 3144 07c5 24       		.uleb128 0x24
 3145 07c6 2C010000 		.4byte	.LASF120
 3146 07ca 01       		.byte	0x1
 3147 07cb 2B       		.byte	0x2b
 3148 07cc D2000000 		.4byte	0xd2
 3149 07d0 05       		.uleb128 0x5
 3150 07d1 03       		.byte	0x3
 3151 07d2 00000000 		.4byte	totalDistance
 3152 07d6 25       		.uleb128 0x25
 3153 07d7 84000000 		.4byte	0x84
 3154 07db E6070000 		.4byte	0x7e6
 3155 07df 26       		.uleb128 0x26
 3156 07e0 7D000000 		.4byte	0x7d
 3157 07e4 44       		.byte	0x44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 71


 3158 07e5 00       		.byte	0
 3159 07e6 24       		.uleb128 0x24
 3160 07e7 51000000 		.4byte	.LASF121
 3161 07eb 01       		.byte	0x1
 3162 07ec 2D       		.byte	0x2d
 3163 07ed D6070000 		.4byte	0x7d6
 3164 07f1 05       		.uleb128 0x5
 3165 07f2 03       		.byte	0x3
 3166 07f3 00000000 		.4byte	buffer
 3167 07f7 24       		.uleb128 0x24
 3168 07f8 09020000 		.4byte	.LASF122
 3169 07fc 01       		.byte	0x1
 3170 07fd 2E       		.byte	0x2e
 3171 07fe 68000000 		.4byte	0x68
 3172 0802 05       		.uleb128 0x5
 3173 0803 03       		.byte	0x3
 3174 0804 00000000 		.4byte	quadDec2Count
 3175 0808 24       		.uleb128 0x24
 3176 0809 56070000 		.4byte	.LASF123
 3177 080d 01       		.byte	0x1
 3178 080e 2F       		.byte	0x2f
 3179 080f 68000000 		.4byte	0x68
 3180 0813 05       		.uleb128 0x5
 3181 0814 03       		.byte	0x3
 3182 0815 00000000 		.4byte	timerInt
 3183 0819 24       		.uleb128 0x24
 3184 081a 9C020000 		.4byte	.LASF124
 3185 081e 01       		.byte	0x1
 3186 081f 30       		.byte	0x30
 3187 0820 68000000 		.4byte	0x68
 3188 0824 05       		.uleb128 0x5
 3189 0825 03       		.byte	0x3
 3190 0826 00000000 		.4byte	keepLedOn
 3191 082a 24       		.uleb128 0x24
 3192 082b DE050000 		.4byte	.LASF125
 3193 082f 01       		.byte	0x1
 3194 0830 32       		.byte	0x32
 3195 0831 AE000000 		.4byte	0xae
 3196 0835 05       		.uleb128 0x5
 3197 0836 03       		.byte	0x3
 3198 0837 00000000 		.4byte	stopBuffer
 3199 083b 24       		.uleb128 0x24
 3200 083c E7030000 		.4byte	.LASF126
 3201 0840 01       		.byte	0x1
 3202 0841 33       		.byte	0x33
 3203 0842 96000000 		.4byte	0x96
 3204 0846 05       		.uleb128 0x5
 3205 0847 03       		.byte	0x3
 3206 0848 00000000 		.4byte	turnFinishedFlag
 3207 084c 24       		.uleb128 0x24
 3208 084d 42010000 		.4byte	.LASF127
 3209 0851 01       		.byte	0x1
 3210 0852 34       		.byte	0x34
 3211 0853 96000000 		.4byte	0x96
 3212 0857 05       		.uleb128 0x5
 3213 0858 03       		.byte	0x3
 3214 0859 00000000 		.4byte	forwardUntilTargetStartedFlag
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 72


 3215 085d 24       		.uleb128 0x24
 3216 085e 37000000 		.4byte	.LASF128
 3217 0862 01       		.byte	0x1
 3218 0863 35       		.byte	0x35
 3219 0864 96000000 		.4byte	0x96
 3220 0868 05       		.uleb128 0x5
 3221 0869 03       		.byte	0x3
 3222 086a 00000000 		.4byte	turnStartedFlag
 3223 086e 24       		.uleb128 0x24
 3224 086f 1E040000 		.4byte	.LASF129
 3225 0873 01       		.byte	0x1
 3226 0874 36       		.byte	0x36
 3227 0875 D2000000 		.4byte	0xd2
 3228 0879 05       		.uleb128 0x5
 3229 087a 03       		.byte	0x3
 3230 087b 00000000 		.4byte	blockSizeTotal
 3231 087f 24       		.uleb128 0x24
 3232 0880 B5030000 		.4byte	.LASF130
 3233 0884 01       		.byte	0x1
 3234 0885 B5       		.byte	0xb5
 3235 0886 D2000000 		.4byte	0xd2
 3236 088a 05       		.uleb128 0x5
 3237 088b 03       		.byte	0x3
 3238 088c 00000000 		.4byte	xBlocksize
 3239 0890 24       		.uleb128 0x24
 3240 0891 09050000 		.4byte	.LASF131
 3241 0895 01       		.byte	0x1
 3242 0896 B6       		.byte	0xb6
 3243 0897 D2000000 		.4byte	0xd2
 3244 089b 05       		.uleb128 0x5
 3245 089c 03       		.byte	0x3
 3246 089d 00000000 		.4byte	yBlocksize
 3247 08a1 24       		.uleb128 0x24
 3248 08a2 C6060000 		.4byte	.LASF132
 3249 08a6 01       		.byte	0x1
 3250 08a7 B7       		.byte	0xb7
 3251 08a8 96000000 		.4byte	0x96
 3252 08ac 05       		.uleb128 0x5
 3253 08ad 03       		.byte	0x3
 3254 08ae 00000000 		.4byte	currentRow
 3255 08b2 24       		.uleb128 0x24
 3256 08b3 34070000 		.4byte	.LASF133
 3257 08b7 01       		.byte	0x1
 3258 08b8 B8       		.byte	0xb8
 3259 08b9 96000000 		.4byte	0x96
 3260 08bd 05       		.uleb128 0x5
 3261 08be 03       		.byte	0x3
 3262 08bf 00000000 		.4byte	currentCol
 3263 08c3 29       		.uleb128 0x29
 3264 08c4 1E060000 		.4byte	.LASF134
 3265 08c8 01       		.byte	0x1
 3266 08c9 0501     		.2byte	0x105
 3267 08cb 96000000 		.4byte	0x96
 3268 08cf 05       		.uleb128 0x5
 3269 08d0 03       		.byte	0x3
 3270 08d1 00000000 		.4byte	stoppedAfterTurn
 3271 08d5 29       		.uleb128 0x29
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 73


 3272 08d6 ED020000 		.4byte	.LASF135
 3273 08da 01       		.byte	0x1
 3274 08db 0601     		.2byte	0x106
 3275 08dd 96000000 		.4byte	0x96
 3276 08e1 05       		.uleb128 0x5
 3277 08e2 03       		.byte	0x3
 3278 08e3 00000000 		.4byte	ignoreSensor
 3279 08e7 00       		.byte	0
 3280              		.section	.debug_abbrev,"",%progbits
 3281              	.Ldebug_abbrev0:
 3282 0000 01       		.uleb128 0x1
 3283 0001 11       		.uleb128 0x11
 3284 0002 01       		.byte	0x1
 3285 0003 25       		.uleb128 0x25
 3286 0004 0E       		.uleb128 0xe
 3287 0005 13       		.uleb128 0x13
 3288 0006 0B       		.uleb128 0xb
 3289 0007 03       		.uleb128 0x3
 3290 0008 0E       		.uleb128 0xe
 3291 0009 1B       		.uleb128 0x1b
 3292 000a 0E       		.uleb128 0xe
 3293 000b 55       		.uleb128 0x55
 3294 000c 17       		.uleb128 0x17
 3295 000d 11       		.uleb128 0x11
 3296 000e 01       		.uleb128 0x1
 3297 000f 10       		.uleb128 0x10
 3298 0010 17       		.uleb128 0x17
 3299 0011 00       		.byte	0
 3300 0012 00       		.byte	0
 3301 0013 02       		.uleb128 0x2
 3302 0014 24       		.uleb128 0x24
 3303 0015 00       		.byte	0
 3304 0016 0B       		.uleb128 0xb
 3305 0017 0B       		.uleb128 0xb
 3306 0018 3E       		.uleb128 0x3e
 3307 0019 0B       		.uleb128 0xb
 3308 001a 03       		.uleb128 0x3
 3309 001b 0E       		.uleb128 0xe
 3310 001c 00       		.byte	0
 3311 001d 00       		.byte	0
 3312 001e 03       		.uleb128 0x3
 3313 001f 16       		.uleb128 0x16
 3314 0020 00       		.byte	0
 3315 0021 03       		.uleb128 0x3
 3316 0022 0E       		.uleb128 0xe
 3317 0023 3A       		.uleb128 0x3a
 3318 0024 0B       		.uleb128 0xb
 3319 0025 3B       		.uleb128 0x3b
 3320 0026 0B       		.uleb128 0xb
 3321 0027 49       		.uleb128 0x49
 3322 0028 13       		.uleb128 0x13
 3323 0029 00       		.byte	0
 3324 002a 00       		.byte	0
 3325 002b 04       		.uleb128 0x4
 3326 002c 24       		.uleb128 0x24
 3327 002d 00       		.byte	0
 3328 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 74


 3329 002f 0B       		.uleb128 0xb
 3330 0030 3E       		.uleb128 0x3e
 3331 0031 0B       		.uleb128 0xb
 3332 0032 03       		.uleb128 0x3
 3333 0033 08       		.uleb128 0x8
 3334 0034 00       		.byte	0
 3335 0035 00       		.byte	0
 3336 0036 05       		.uleb128 0x5
 3337 0037 16       		.uleb128 0x16
 3338 0038 00       		.byte	0
 3339 0039 03       		.uleb128 0x3
 3340 003a 0E       		.uleb128 0xe
 3341 003b 3A       		.uleb128 0x3a
 3342 003c 0B       		.uleb128 0xb
 3343 003d 3B       		.uleb128 0x3b
 3344 003e 05       		.uleb128 0x5
 3345 003f 49       		.uleb128 0x49
 3346 0040 13       		.uleb128 0x13
 3347 0041 00       		.byte	0
 3348 0042 00       		.byte	0
 3349 0043 06       		.uleb128 0x6
 3350 0044 13       		.uleb128 0x13
 3351 0045 01       		.byte	0x1
 3352 0046 03       		.uleb128 0x3
 3353 0047 0E       		.uleb128 0xe
 3354 0048 0B       		.uleb128 0xb
 3355 0049 0B       		.uleb128 0xb
 3356 004a 3A       		.uleb128 0x3a
 3357 004b 0B       		.uleb128 0xb
 3358 004c 3B       		.uleb128 0x3b
 3359 004d 0B       		.uleb128 0xb
 3360 004e 01       		.uleb128 0x1
 3361 004f 13       		.uleb128 0x13
 3362 0050 00       		.byte	0
 3363 0051 00       		.byte	0
 3364 0052 07       		.uleb128 0x7
 3365 0053 0D       		.uleb128 0xd
 3366 0054 00       		.byte	0
 3367 0055 03       		.uleb128 0x3
 3368 0056 0E       		.uleb128 0xe
 3369 0057 3A       		.uleb128 0x3a
 3370 0058 0B       		.uleb128 0xb
 3371 0059 3B       		.uleb128 0x3b
 3372 005a 0B       		.uleb128 0xb
 3373 005b 49       		.uleb128 0x49
 3374 005c 13       		.uleb128 0x13
 3375 005d 38       		.uleb128 0x38
 3376 005e 0B       		.uleb128 0xb
 3377 005f 00       		.byte	0
 3378 0060 00       		.byte	0
 3379 0061 08       		.uleb128 0x8
 3380 0062 04       		.uleb128 0x4
 3381 0063 01       		.byte	0x1
 3382 0064 03       		.uleb128 0x3
 3383 0065 0E       		.uleb128 0xe
 3384 0066 0B       		.uleb128 0xb
 3385 0067 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 75


 3386 0068 49       		.uleb128 0x49
 3387 0069 13       		.uleb128 0x13
 3388 006a 3A       		.uleb128 0x3a
 3389 006b 0B       		.uleb128 0xb
 3390 006c 3B       		.uleb128 0x3b
 3391 006d 0B       		.uleb128 0xb
 3392 006e 01       		.uleb128 0x1
 3393 006f 13       		.uleb128 0x13
 3394 0070 00       		.byte	0
 3395 0071 00       		.byte	0
 3396 0072 09       		.uleb128 0x9
 3397 0073 28       		.uleb128 0x28
 3398 0074 00       		.byte	0
 3399 0075 03       		.uleb128 0x3
 3400 0076 0E       		.uleb128 0xe
 3401 0077 1C       		.uleb128 0x1c
 3402 0078 0B       		.uleb128 0xb
 3403 0079 00       		.byte	0
 3404 007a 00       		.byte	0
 3405 007b 0A       		.uleb128 0xa
 3406 007c 28       		.uleb128 0x28
 3407 007d 00       		.byte	0
 3408 007e 03       		.uleb128 0x3
 3409 007f 08       		.uleb128 0x8
 3410 0080 1C       		.uleb128 0x1c
 3411 0081 0B       		.uleb128 0xb
 3412 0082 00       		.byte	0
 3413 0083 00       		.byte	0
 3414 0084 0B       		.uleb128 0xb
 3415 0085 2E       		.uleb128 0x2e
 3416 0086 01       		.byte	0x1
 3417 0087 3F       		.uleb128 0x3f
 3418 0088 19       		.uleb128 0x19
 3419 0089 03       		.uleb128 0x3
 3420 008a 0E       		.uleb128 0xe
 3421 008b 3A       		.uleb128 0x3a
 3422 008c 0B       		.uleb128 0xb
 3423 008d 3B       		.uleb128 0x3b
 3424 008e 0B       		.uleb128 0xb
 3425 008f 27       		.uleb128 0x27
 3426 0090 19       		.uleb128 0x19
 3427 0091 11       		.uleb128 0x11
 3428 0092 01       		.uleb128 0x1
 3429 0093 12       		.uleb128 0x12
 3430 0094 06       		.uleb128 0x6
 3431 0095 40       		.uleb128 0x40
 3432 0096 18       		.uleb128 0x18
 3433 0097 9642     		.uleb128 0x2116
 3434 0099 19       		.uleb128 0x19
 3435 009a 01       		.uleb128 0x1
 3436 009b 13       		.uleb128 0x13
 3437 009c 00       		.byte	0
 3438 009d 00       		.byte	0
 3439 009e 0C       		.uleb128 0xc
 3440 009f 0B       		.uleb128 0xb
 3441 00a0 01       		.byte	0x1
 3442 00a1 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 76


 3443 00a2 01       		.uleb128 0x1
 3444 00a3 12       		.uleb128 0x12
 3445 00a4 06       		.uleb128 0x6
 3446 00a5 00       		.byte	0
 3447 00a6 00       		.byte	0
 3448 00a7 0D       		.uleb128 0xd
 3449 00a8 34       		.uleb128 0x34
 3450 00a9 00       		.byte	0
 3451 00aa 03       		.uleb128 0x3
 3452 00ab 0E       		.uleb128 0xe
 3453 00ac 3A       		.uleb128 0x3a
 3454 00ad 0B       		.uleb128 0xb
 3455 00ae 3B       		.uleb128 0x3b
 3456 00af 0B       		.uleb128 0xb
 3457 00b0 49       		.uleb128 0x49
 3458 00b1 13       		.uleb128 0x13
 3459 00b2 02       		.uleb128 0x2
 3460 00b3 18       		.uleb128 0x18
 3461 00b4 00       		.byte	0
 3462 00b5 00       		.byte	0
 3463 00b6 0E       		.uleb128 0xe
 3464 00b7 2E       		.uleb128 0x2e
 3465 00b8 00       		.byte	0
 3466 00b9 3F       		.uleb128 0x3f
 3467 00ba 19       		.uleb128 0x19
 3468 00bb 03       		.uleb128 0x3
 3469 00bc 0E       		.uleb128 0xe
 3470 00bd 3A       		.uleb128 0x3a
 3471 00be 0B       		.uleb128 0xb
 3472 00bf 3B       		.uleb128 0x3b
 3473 00c0 0B       		.uleb128 0xb
 3474 00c1 27       		.uleb128 0x27
 3475 00c2 19       		.uleb128 0x19
 3476 00c3 11       		.uleb128 0x11
 3477 00c4 01       		.uleb128 0x1
 3478 00c5 12       		.uleb128 0x12
 3479 00c6 06       		.uleb128 0x6
 3480 00c7 40       		.uleb128 0x40
 3481 00c8 18       		.uleb128 0x18
 3482 00c9 9742     		.uleb128 0x2117
 3483 00cb 19       		.uleb128 0x19
 3484 00cc 00       		.byte	0
 3485 00cd 00       		.byte	0
 3486 00ce 0F       		.uleb128 0xf
 3487 00cf 2E       		.uleb128 0x2e
 3488 00d0 00       		.byte	0
 3489 00d1 3F       		.uleb128 0x3f
 3490 00d2 19       		.uleb128 0x19
 3491 00d3 03       		.uleb128 0x3
 3492 00d4 0E       		.uleb128 0xe
 3493 00d5 3A       		.uleb128 0x3a
 3494 00d6 0B       		.uleb128 0xb
 3495 00d7 3B       		.uleb128 0x3b
 3496 00d8 0B       		.uleb128 0xb
 3497 00d9 27       		.uleb128 0x27
 3498 00da 19       		.uleb128 0x19
 3499 00db 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 77


 3500 00dc 01       		.uleb128 0x1
 3501 00dd 12       		.uleb128 0x12
 3502 00de 06       		.uleb128 0x6
 3503 00df 40       		.uleb128 0x40
 3504 00e0 18       		.uleb128 0x18
 3505 00e1 9642     		.uleb128 0x2116
 3506 00e3 19       		.uleb128 0x19
 3507 00e4 00       		.byte	0
 3508 00e5 00       		.byte	0
 3509 00e6 10       		.uleb128 0x10
 3510 00e7 2E       		.uleb128 0x2e
 3511 00e8 00       		.byte	0
 3512 00e9 3F       		.uleb128 0x3f
 3513 00ea 19       		.uleb128 0x19
 3514 00eb 03       		.uleb128 0x3
 3515 00ec 0E       		.uleb128 0xe
 3516 00ed 3A       		.uleb128 0x3a
 3517 00ee 0B       		.uleb128 0xb
 3518 00ef 3B       		.uleb128 0x3b
 3519 00f0 0B       		.uleb128 0xb
 3520 00f1 49       		.uleb128 0x49
 3521 00f2 13       		.uleb128 0x13
 3522 00f3 11       		.uleb128 0x11
 3523 00f4 01       		.uleb128 0x1
 3524 00f5 12       		.uleb128 0x12
 3525 00f6 06       		.uleb128 0x6
 3526 00f7 40       		.uleb128 0x40
 3527 00f8 18       		.uleb128 0x18
 3528 00f9 9642     		.uleb128 0x2116
 3529 00fb 19       		.uleb128 0x19
 3530 00fc 00       		.byte	0
 3531 00fd 00       		.byte	0
 3532 00fe 11       		.uleb128 0x11
 3533 00ff 2E       		.uleb128 0x2e
 3534 0100 01       		.byte	0x1
 3535 0101 3F       		.uleb128 0x3f
 3536 0102 19       		.uleb128 0x19
 3537 0103 03       		.uleb128 0x3
 3538 0104 0E       		.uleb128 0xe
 3539 0105 3A       		.uleb128 0x3a
 3540 0106 0B       		.uleb128 0xb
 3541 0107 3B       		.uleb128 0x3b
 3542 0108 0B       		.uleb128 0xb
 3543 0109 27       		.uleb128 0x27
 3544 010a 19       		.uleb128 0x19
 3545 010b 49       		.uleb128 0x49
 3546 010c 13       		.uleb128 0x13
 3547 010d 11       		.uleb128 0x11
 3548 010e 01       		.uleb128 0x1
 3549 010f 12       		.uleb128 0x12
 3550 0110 06       		.uleb128 0x6
 3551 0111 40       		.uleb128 0x40
 3552 0112 18       		.uleb128 0x18
 3553 0113 9642     		.uleb128 0x2116
 3554 0115 19       		.uleb128 0x19
 3555 0116 01       		.uleb128 0x1
 3556 0117 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 78


 3557 0118 00       		.byte	0
 3558 0119 00       		.byte	0
 3559 011a 12       		.uleb128 0x12
 3560 011b 05       		.uleb128 0x5
 3561 011c 00       		.byte	0
 3562 011d 03       		.uleb128 0x3
 3563 011e 0E       		.uleb128 0xe
 3564 011f 3A       		.uleb128 0x3a
 3565 0120 0B       		.uleb128 0xb
 3566 0121 3B       		.uleb128 0x3b
 3567 0122 0B       		.uleb128 0xb
 3568 0123 49       		.uleb128 0x49
 3569 0124 13       		.uleb128 0x13
 3570 0125 02       		.uleb128 0x2
 3571 0126 18       		.uleb128 0x18
 3572 0127 00       		.byte	0
 3573 0128 00       		.byte	0
 3574 0129 13       		.uleb128 0x13
 3575 012a 34       		.uleb128 0x34
 3576 012b 00       		.byte	0
 3577 012c 03       		.uleb128 0x3
 3578 012d 08       		.uleb128 0x8
 3579 012e 3A       		.uleb128 0x3a
 3580 012f 0B       		.uleb128 0xb
 3581 0130 3B       		.uleb128 0x3b
 3582 0131 0B       		.uleb128 0xb
 3583 0132 49       		.uleb128 0x49
 3584 0133 13       		.uleb128 0x13
 3585 0134 02       		.uleb128 0x2
 3586 0135 18       		.uleb128 0x18
 3587 0136 00       		.byte	0
 3588 0137 00       		.byte	0
 3589 0138 14       		.uleb128 0x14
 3590 0139 2E       		.uleb128 0x2e
 3591 013a 00       		.byte	0
 3592 013b 3F       		.uleb128 0x3f
 3593 013c 19       		.uleb128 0x19
 3594 013d 03       		.uleb128 0x3
 3595 013e 0E       		.uleb128 0xe
 3596 013f 3A       		.uleb128 0x3a
 3597 0140 0B       		.uleb128 0xb
 3598 0141 3B       		.uleb128 0x3b
 3599 0142 0B       		.uleb128 0xb
 3600 0143 11       		.uleb128 0x11
 3601 0144 01       		.uleb128 0x1
 3602 0145 12       		.uleb128 0x12
 3603 0146 06       		.uleb128 0x6
 3604 0147 40       		.uleb128 0x40
 3605 0148 18       		.uleb128 0x18
 3606 0149 9742     		.uleb128 0x2117
 3607 014b 19       		.uleb128 0x19
 3608 014c 00       		.byte	0
 3609 014d 00       		.byte	0
 3610 014e 15       		.uleb128 0x15
 3611 014f 2E       		.uleb128 0x2e
 3612 0150 00       		.byte	0
 3613 0151 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 79


 3614 0152 19       		.uleb128 0x19
 3615 0153 03       		.uleb128 0x3
 3616 0154 0E       		.uleb128 0xe
 3617 0155 3A       		.uleb128 0x3a
 3618 0156 0B       		.uleb128 0xb
 3619 0157 3B       		.uleb128 0x3b
 3620 0158 05       		.uleb128 0x5
 3621 0159 49       		.uleb128 0x49
 3622 015a 13       		.uleb128 0x13
 3623 015b 11       		.uleb128 0x11
 3624 015c 01       		.uleb128 0x1
 3625 015d 12       		.uleb128 0x12
 3626 015e 06       		.uleb128 0x6
 3627 015f 40       		.uleb128 0x40
 3628 0160 18       		.uleb128 0x18
 3629 0161 9742     		.uleb128 0x2117
 3630 0163 19       		.uleb128 0x19
 3631 0164 00       		.byte	0
 3632 0165 00       		.byte	0
 3633 0166 16       		.uleb128 0x16
 3634 0167 2E       		.uleb128 0x2e
 3635 0168 01       		.byte	0x1
 3636 0169 3F       		.uleb128 0x3f
 3637 016a 19       		.uleb128 0x19
 3638 016b 03       		.uleb128 0x3
 3639 016c 0E       		.uleb128 0xe
 3640 016d 3A       		.uleb128 0x3a
 3641 016e 0B       		.uleb128 0xb
 3642 016f 3B       		.uleb128 0x3b
 3643 0170 05       		.uleb128 0x5
 3644 0171 49       		.uleb128 0x49
 3645 0172 13       		.uleb128 0x13
 3646 0173 11       		.uleb128 0x11
 3647 0174 01       		.uleb128 0x1
 3648 0175 12       		.uleb128 0x12
 3649 0176 06       		.uleb128 0x6
 3650 0177 40       		.uleb128 0x40
 3651 0178 18       		.uleb128 0x18
 3652 0179 9642     		.uleb128 0x2116
 3653 017b 19       		.uleb128 0x19
 3654 017c 01       		.uleb128 0x1
 3655 017d 13       		.uleb128 0x13
 3656 017e 00       		.byte	0
 3657 017f 00       		.byte	0
 3658 0180 17       		.uleb128 0x17
 3659 0181 34       		.uleb128 0x34
 3660 0182 00       		.byte	0
 3661 0183 03       		.uleb128 0x3
 3662 0184 0E       		.uleb128 0xe
 3663 0185 3A       		.uleb128 0x3a
 3664 0186 0B       		.uleb128 0xb
 3665 0187 3B       		.uleb128 0x3b
 3666 0188 05       		.uleb128 0x5
 3667 0189 49       		.uleb128 0x49
 3668 018a 13       		.uleb128 0x13
 3669 018b 02       		.uleb128 0x2
 3670 018c 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 80


 3671 018d 00       		.byte	0
 3672 018e 00       		.byte	0
 3673 018f 18       		.uleb128 0x18
 3674 0190 2E       		.uleb128 0x2e
 3675 0191 01       		.byte	0x1
 3676 0192 3F       		.uleb128 0x3f
 3677 0193 19       		.uleb128 0x19
 3678 0194 03       		.uleb128 0x3
 3679 0195 0E       		.uleb128 0xe
 3680 0196 3A       		.uleb128 0x3a
 3681 0197 0B       		.uleb128 0xb
 3682 0198 3B       		.uleb128 0x3b
 3683 0199 05       		.uleb128 0x5
 3684 019a 27       		.uleb128 0x27
 3685 019b 19       		.uleb128 0x19
 3686 019c 49       		.uleb128 0x49
 3687 019d 13       		.uleb128 0x13
 3688 019e 11       		.uleb128 0x11
 3689 019f 01       		.uleb128 0x1
 3690 01a0 12       		.uleb128 0x12
 3691 01a1 06       		.uleb128 0x6
 3692 01a2 40       		.uleb128 0x40
 3693 01a3 18       		.uleb128 0x18
 3694 01a4 9642     		.uleb128 0x2116
 3695 01a6 19       		.uleb128 0x19
 3696 01a7 01       		.uleb128 0x1
 3697 01a8 13       		.uleb128 0x13
 3698 01a9 00       		.byte	0
 3699 01aa 00       		.byte	0
 3700 01ab 19       		.uleb128 0x19
 3701 01ac 05       		.uleb128 0x5
 3702 01ad 00       		.byte	0
 3703 01ae 03       		.uleb128 0x3
 3704 01af 0E       		.uleb128 0xe
 3705 01b0 3A       		.uleb128 0x3a
 3706 01b1 0B       		.uleb128 0xb
 3707 01b2 3B       		.uleb128 0x3b
 3708 01b3 05       		.uleb128 0x5
 3709 01b4 49       		.uleb128 0x49
 3710 01b5 13       		.uleb128 0x13
 3711 01b6 02       		.uleb128 0x2
 3712 01b7 18       		.uleb128 0x18
 3713 01b8 00       		.byte	0
 3714 01b9 00       		.byte	0
 3715 01ba 1A       		.uleb128 0x1a
 3716 01bb 0B       		.uleb128 0xb
 3717 01bc 01       		.byte	0x1
 3718 01bd 55       		.uleb128 0x55
 3719 01be 17       		.uleb128 0x17
 3720 01bf 01       		.uleb128 0x1
 3721 01c0 13       		.uleb128 0x13
 3722 01c1 00       		.byte	0
 3723 01c2 00       		.byte	0
 3724 01c3 1B       		.uleb128 0x1b
 3725 01c4 34       		.uleb128 0x34
 3726 01c5 00       		.byte	0
 3727 01c6 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 81


 3728 01c7 08       		.uleb128 0x8
 3729 01c8 3A       		.uleb128 0x3a
 3730 01c9 0B       		.uleb128 0xb
 3731 01ca 3B       		.uleb128 0x3b
 3732 01cb 05       		.uleb128 0x5
 3733 01cc 49       		.uleb128 0x49
 3734 01cd 13       		.uleb128 0x13
 3735 01ce 02       		.uleb128 0x2
 3736 01cf 18       		.uleb128 0x18
 3737 01d0 00       		.byte	0
 3738 01d1 00       		.byte	0
 3739 01d2 1C       		.uleb128 0x1c
 3740 01d3 0B       		.uleb128 0xb
 3741 01d4 01       		.byte	0x1
 3742 01d5 55       		.uleb128 0x55
 3743 01d6 17       		.uleb128 0x17
 3744 01d7 00       		.byte	0
 3745 01d8 00       		.byte	0
 3746 01d9 1D       		.uleb128 0x1d
 3747 01da 2E       		.uleb128 0x2e
 3748 01db 00       		.byte	0
 3749 01dc 3F       		.uleb128 0x3f
 3750 01dd 19       		.uleb128 0x19
 3751 01de 03       		.uleb128 0x3
 3752 01df 0E       		.uleb128 0xe
 3753 01e0 3A       		.uleb128 0x3a
 3754 01e1 0B       		.uleb128 0xb
 3755 01e2 3B       		.uleb128 0x3b
 3756 01e3 05       		.uleb128 0x5
 3757 01e4 11       		.uleb128 0x11
 3758 01e5 01       		.uleb128 0x1
 3759 01e6 12       		.uleb128 0x12
 3760 01e7 06       		.uleb128 0x6
 3761 01e8 40       		.uleb128 0x40
 3762 01e9 18       		.uleb128 0x18
 3763 01ea 9742     		.uleb128 0x2117
 3764 01ec 19       		.uleb128 0x19
 3765 01ed 00       		.byte	0
 3766 01ee 00       		.byte	0
 3767 01ef 1E       		.uleb128 0x1e
 3768 01f0 2E       		.uleb128 0x2e
 3769 01f1 01       		.byte	0x1
 3770 01f2 3F       		.uleb128 0x3f
 3771 01f3 19       		.uleb128 0x19
 3772 01f4 03       		.uleb128 0x3
 3773 01f5 0E       		.uleb128 0xe
 3774 01f6 3A       		.uleb128 0x3a
 3775 01f7 0B       		.uleb128 0xb
 3776 01f8 3B       		.uleb128 0x3b
 3777 01f9 05       		.uleb128 0x5
 3778 01fa 27       		.uleb128 0x27
 3779 01fb 19       		.uleb128 0x19
 3780 01fc 49       		.uleb128 0x49
 3781 01fd 13       		.uleb128 0x13
 3782 01fe 11       		.uleb128 0x11
 3783 01ff 01       		.uleb128 0x1
 3784 0200 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 82


 3785 0201 06       		.uleb128 0x6
 3786 0202 40       		.uleb128 0x40
 3787 0203 18       		.uleb128 0x18
 3788 0204 9742     		.uleb128 0x2117
 3789 0206 19       		.uleb128 0x19
 3790 0207 01       		.uleb128 0x1
 3791 0208 13       		.uleb128 0x13
 3792 0209 00       		.byte	0
 3793 020a 00       		.byte	0
 3794 020b 1F       		.uleb128 0x1f
 3795 020c 0F       		.uleb128 0xf
 3796 020d 00       		.byte	0
 3797 020e 0B       		.uleb128 0xb
 3798 020f 0B       		.uleb128 0xb
 3799 0210 49       		.uleb128 0x49
 3800 0211 13       		.uleb128 0x13
 3801 0212 00       		.byte	0
 3802 0213 00       		.byte	0
 3803 0214 20       		.uleb128 0x20
 3804 0215 2E       		.uleb128 0x2e
 3805 0216 00       		.byte	0
 3806 0217 3F       		.uleb128 0x3f
 3807 0218 19       		.uleb128 0x19
 3808 0219 03       		.uleb128 0x3
 3809 021a 0E       		.uleb128 0xe
 3810 021b 3A       		.uleb128 0x3a
 3811 021c 0B       		.uleb128 0xb
 3812 021d 3B       		.uleb128 0x3b
 3813 021e 05       		.uleb128 0x5
 3814 021f 11       		.uleb128 0x11
 3815 0220 01       		.uleb128 0x1
 3816 0221 12       		.uleb128 0x12
 3817 0222 06       		.uleb128 0x6
 3818 0223 40       		.uleb128 0x40
 3819 0224 18       		.uleb128 0x18
 3820 0225 9642     		.uleb128 0x2116
 3821 0227 19       		.uleb128 0x19
 3822 0228 00       		.byte	0
 3823 0229 00       		.byte	0
 3824 022a 21       		.uleb128 0x21
 3825 022b 34       		.uleb128 0x34
 3826 022c 00       		.byte	0
 3827 022d 03       		.uleb128 0x3
 3828 022e 0E       		.uleb128 0xe
 3829 022f 3A       		.uleb128 0x3a
 3830 0230 0B       		.uleb128 0xb
 3831 0231 3B       		.uleb128 0x3b
 3832 0232 05       		.uleb128 0x5
 3833 0233 49       		.uleb128 0x49
 3834 0234 13       		.uleb128 0x13
 3835 0235 3F       		.uleb128 0x3f
 3836 0236 19       		.uleb128 0x19
 3837 0237 3C       		.uleb128 0x3c
 3838 0238 19       		.uleb128 0x19
 3839 0239 00       		.byte	0
 3840 023a 00       		.byte	0
 3841 023b 22       		.uleb128 0x22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 83


 3842 023c 35       		.uleb128 0x35
 3843 023d 00       		.byte	0
 3844 023e 49       		.uleb128 0x49
 3845 023f 13       		.uleb128 0x13
 3846 0240 00       		.byte	0
 3847 0241 00       		.byte	0
 3848 0242 23       		.uleb128 0x23
 3849 0243 34       		.uleb128 0x34
 3850 0244 00       		.byte	0
 3851 0245 03       		.uleb128 0x3
 3852 0246 08       		.uleb128 0x8
 3853 0247 3A       		.uleb128 0x3a
 3854 0248 0B       		.uleb128 0xb
 3855 0249 3B       		.uleb128 0x3b
 3856 024a 0B       		.uleb128 0xb
 3857 024b 49       		.uleb128 0x49
 3858 024c 13       		.uleb128 0x13
 3859 024d 3F       		.uleb128 0x3f
 3860 024e 19       		.uleb128 0x19
 3861 024f 02       		.uleb128 0x2
 3862 0250 18       		.uleb128 0x18
 3863 0251 00       		.byte	0
 3864 0252 00       		.byte	0
 3865 0253 24       		.uleb128 0x24
 3866 0254 34       		.uleb128 0x34
 3867 0255 00       		.byte	0
 3868 0256 03       		.uleb128 0x3
 3869 0257 0E       		.uleb128 0xe
 3870 0258 3A       		.uleb128 0x3a
 3871 0259 0B       		.uleb128 0xb
 3872 025a 3B       		.uleb128 0x3b
 3873 025b 0B       		.uleb128 0xb
 3874 025c 49       		.uleb128 0x49
 3875 025d 13       		.uleb128 0x13
 3876 025e 3F       		.uleb128 0x3f
 3877 025f 19       		.uleb128 0x19
 3878 0260 02       		.uleb128 0x2
 3879 0261 18       		.uleb128 0x18
 3880 0262 00       		.byte	0
 3881 0263 00       		.byte	0
 3882 0264 25       		.uleb128 0x25
 3883 0265 01       		.uleb128 0x1
 3884 0266 01       		.byte	0x1
 3885 0267 49       		.uleb128 0x49
 3886 0268 13       		.uleb128 0x13
 3887 0269 01       		.uleb128 0x1
 3888 026a 13       		.uleb128 0x13
 3889 026b 00       		.byte	0
 3890 026c 00       		.byte	0
 3891 026d 26       		.uleb128 0x26
 3892 026e 21       		.uleb128 0x21
 3893 026f 00       		.byte	0
 3894 0270 49       		.uleb128 0x49
 3895 0271 13       		.uleb128 0x13
 3896 0272 2F       		.uleb128 0x2f
 3897 0273 0B       		.uleb128 0xb
 3898 0274 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 84


 3899 0275 00       		.byte	0
 3900 0276 27       		.uleb128 0x27
 3901 0277 34       		.uleb128 0x34
 3902 0278 00       		.byte	0
 3903 0279 03       		.uleb128 0x3
 3904 027a 08       		.uleb128 0x8
 3905 027b 3A       		.uleb128 0x3a
 3906 027c 0B       		.uleb128 0xb
 3907 027d 3B       		.uleb128 0x3b
 3908 027e 0B       		.uleb128 0xb
 3909 027f 49       		.uleb128 0x49
 3910 0280 13       		.uleb128 0x13
 3911 0281 3F       		.uleb128 0x3f
 3912 0282 19       		.uleb128 0x19
 3913 0283 3C       		.uleb128 0x3c
 3914 0284 19       		.uleb128 0x19
 3915 0285 00       		.byte	0
 3916 0286 00       		.byte	0
 3917 0287 28       		.uleb128 0x28
 3918 0288 34       		.uleb128 0x34
 3919 0289 00       		.byte	0
 3920 028a 03       		.uleb128 0x3
 3921 028b 0E       		.uleb128 0xe
 3922 028c 3A       		.uleb128 0x3a
 3923 028d 0B       		.uleb128 0xb
 3924 028e 3B       		.uleb128 0x3b
 3925 028f 0B       		.uleb128 0xb
 3926 0290 49       		.uleb128 0x49
 3927 0291 13       		.uleb128 0x13
 3928 0292 3F       		.uleb128 0x3f
 3929 0293 19       		.uleb128 0x19
 3930 0294 3C       		.uleb128 0x3c
 3931 0295 19       		.uleb128 0x19
 3932 0296 00       		.byte	0
 3933 0297 00       		.byte	0
 3934 0298 29       		.uleb128 0x29
 3935 0299 34       		.uleb128 0x34
 3936 029a 00       		.byte	0
 3937 029b 03       		.uleb128 0x3
 3938 029c 0E       		.uleb128 0xe
 3939 029d 3A       		.uleb128 0x3a
 3940 029e 0B       		.uleb128 0xb
 3941 029f 3B       		.uleb128 0x3b
 3942 02a0 05       		.uleb128 0x5
 3943 02a1 49       		.uleb128 0x49
 3944 02a2 13       		.uleb128 0x13
 3945 02a3 3F       		.uleb128 0x3f
 3946 02a4 19       		.uleb128 0x19
 3947 02a5 02       		.uleb128 0x2
 3948 02a6 18       		.uleb128 0x18
 3949 02a7 00       		.byte	0
 3950 02a8 00       		.byte	0
 3951 02a9 00       		.byte	0
 3952              		.section	.debug_aranges,"",%progbits
 3953 0000 8C000000 		.4byte	0x8c
 3954 0004 0200     		.2byte	0x2
 3955 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 85


 3956 000a 04       		.byte	0x4
 3957 000b 00       		.byte	0
 3958 000c 0000     		.2byte	0
 3959 000e 0000     		.2byte	0
 3960 0010 00000000 		.4byte	.LFB64
 3961 0014 EC000000 		.4byte	.LFE64-.LFB64
 3962 0018 00000000 		.4byte	.LFB65
 3963 001c 18000000 		.4byte	.LFE65-.LFB65
 3964 0020 00000000 		.4byte	.LFB66
 3965 0024 18000000 		.4byte	.LFE66-.LFB66
 3966 0028 00000000 		.4byte	.LFB67
 3967 002c 18000000 		.4byte	.LFE67-.LFB67
 3968 0030 00000000 		.4byte	.LFB68
 3969 0034 18000000 		.4byte	.LFE68-.LFB68
 3970 0038 00000000 		.4byte	.LFB69
 3971 003c 38000000 		.4byte	.LFE69-.LFB69
 3972 0040 00000000 		.4byte	.LFB70
 3973 0044 C0000000 		.4byte	.LFE70-.LFB70
 3974 0048 00000000 		.4byte	.LFB71
 3975 004c 54000000 		.4byte	.LFE71-.LFB71
 3976 0050 00000000 		.4byte	.LFB72
 3977 0054 34000000 		.4byte	.LFE72-.LFB72
 3978 0058 00000000 		.4byte	.LFB73
 3979 005c 84000000 		.4byte	.LFE73-.LFB73
 3980 0060 00000000 		.4byte	.LFB74
 3981 0064 1C030000 		.4byte	.LFE74-.LFB74
 3982 0068 00000000 		.4byte	.LFB75
 3983 006c 8C020000 		.4byte	.LFE75-.LFB75
 3984 0070 00000000 		.4byte	.LFB76
 3985 0074 1C000000 		.4byte	.LFE76-.LFB76
 3986 0078 00000000 		.4byte	.LFB77
 3987 007c A4000000 		.4byte	.LFE77-.LFB77
 3988 0080 00000000 		.4byte	.LFB78
 3989 0084 C4000000 		.4byte	.LFE78-.LFB78
 3990 0088 00000000 		.4byte	0
 3991 008c 00000000 		.4byte	0
 3992              		.section	.debug_ranges,"",%progbits
 3993              	.Ldebug_ranges0:
 3994 0000 38000000 		.4byte	.LBB3
 3995 0004 BC000000 		.4byte	.LBE3
 3996 0008 BE000000 		.4byte	.LBB4
 3997 000c C0000000 		.4byte	.LBE4
 3998 0010 00000000 		.4byte	0
 3999 0014 00000000 		.4byte	0
 4000 0018 C2000000 		.4byte	.LBB5
 4001 001c 46010000 		.4byte	.LBE5
 4002 0020 48010000 		.4byte	.LBB6
 4003 0024 4A010000 		.4byte	.LBE6
 4004 0028 00000000 		.4byte	0
 4005 002c 00000000 		.4byte	0
 4006 0030 4C010000 		.4byte	.LBB7
 4007 0034 D0010000 		.4byte	.LBE7
 4008 0038 D2010000 		.4byte	.LBB8
 4009 003c D4010000 		.4byte	.LBE8
 4010 0040 00000000 		.4byte	0
 4011 0044 00000000 		.4byte	0
 4012 0048 D6010000 		.4byte	.LBB9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 86


 4013 004c 5A020000 		.4byte	.LBE9
 4014 0050 5C020000 		.4byte	.LBB10
 4015 0054 5E020000 		.4byte	.LBE10
 4016 0058 00000000 		.4byte	0
 4017 005c 00000000 		.4byte	0
 4018 0060 00000000 		.4byte	.LFB64
 4019 0064 EC000000 		.4byte	.LFE64
 4020 0068 00000000 		.4byte	.LFB65
 4021 006c 18000000 		.4byte	.LFE65
 4022 0070 00000000 		.4byte	.LFB66
 4023 0074 18000000 		.4byte	.LFE66
 4024 0078 00000000 		.4byte	.LFB67
 4025 007c 18000000 		.4byte	.LFE67
 4026 0080 00000000 		.4byte	.LFB68
 4027 0084 18000000 		.4byte	.LFE68
 4028 0088 00000000 		.4byte	.LFB69
 4029 008c 38000000 		.4byte	.LFE69
 4030 0090 00000000 		.4byte	.LFB70
 4031 0094 C0000000 		.4byte	.LFE70
 4032 0098 00000000 		.4byte	.LFB71
 4033 009c 54000000 		.4byte	.LFE71
 4034 00a0 00000000 		.4byte	.LFB72
 4035 00a4 34000000 		.4byte	.LFE72
 4036 00a8 00000000 		.4byte	.LFB73
 4037 00ac 84000000 		.4byte	.LFE73
 4038 00b0 00000000 		.4byte	.LFB74
 4039 00b4 1C030000 		.4byte	.LFE74
 4040 00b8 00000000 		.4byte	.LFB75
 4041 00bc 8C020000 		.4byte	.LFE75
 4042 00c0 00000000 		.4byte	.LFB76
 4043 00c4 1C000000 		.4byte	.LFE76
 4044 00c8 00000000 		.4byte	.LFB77
 4045 00cc A4000000 		.4byte	.LFE77
 4046 00d0 00000000 		.4byte	.LFB78
 4047 00d4 C4000000 		.4byte	.LFE78
 4048 00d8 00000000 		.4byte	0
 4049 00dc 00000000 		.4byte	0
 4050              		.section	.debug_line,"",%progbits
 4051              	.Ldebug_line0:
 4052 0000 37040000 		.section	.debug_str,"MS",%progbits,1
 4052      02007001 
 4052      00000201 
 4052      FB0E0D00 
 4052      01010101 
 4053              	.LASF47:
 4054 0000 64697265 		.ascii	"direction\000"
 4054      6374696F 
 4054      6E00
 4055              	.LASF64:
 4056 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4056      61726441 
 4056      66746572 
 4056      5475726E 
 4056      00
 4057              	.LASF50:
 4058 001b 496E7374 		.ascii	"InstructionDirection\000"
 4058      72756374 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 87


 4058      696F6E44 
 4058      69726563 
 4058      74696F6E 
 4059              	.LASF137:
 4060 0030 6D61696E 		.ascii	"main.c\000"
 4060      2E6300
 4061              	.LASF128:
 4062 0037 7475726E 		.ascii	"turnStartedFlag\000"
 4062      53746172 
 4062      74656446 
 4062      6C616700 
 4063              	.LASF76:
 4064 0047 626C6F63 		.ascii	"blocksize\000"
 4064      6B73697A 
 4064      6500
 4065              	.LASF121:
 4066 0051 62756666 		.ascii	"buffer\000"
 4066      657200
 4067              	.LASF8:
 4068 0058 756E7369 		.ascii	"unsigned int\000"
 4068      676E6564 
 4068      20696E74 
 4068      00
 4069              	.LASF12:
 4070 0065 5F5F696E 		.ascii	"__int32_t\000"
 4070      7433325F 
 4070      7400
 4071              	.LASF18:
 4072 006f 696E7431 		.ascii	"int16\000"
 4072      3600
 4073              	.LASF112:
 4074 0075 73797374 		.ascii	"system_state\000"
 4074      656D5F73 
 4074      74617465 
 4074      00
 4075              	.LASF92:
 4076 0082 6E657874 		.ascii	"nextInstruction\000"
 4076      496E7374 
 4076      72756374 
 4076      696F6E00 
 4077              	.LASF136:
 4078 0092 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4078      43313120 
 4078      352E342E 
 4078      31203230 
 4078      31363036 
 4079 00c5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4079      20726576 
 4079      6973696F 
 4079      6E203233 
 4079      37373135 
 4080 00f8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4080      66756E63 
 4080      74696F6E 
 4080      2D736563 
 4080      74696F6E 
 4081              	.LASF69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 88


 4082 0120 53365F44 		.ascii	"S6_DETECTED\000"
 4082      45544543 
 4082      54454400 
 4083              	.LASF120:
 4084 012c 746F7461 		.ascii	"totalDistance\000"
 4084      6C446973 
 4084      74616E63 
 4084      6500
 4085              	.LASF34:
 4086 013a 67325F78 		.ascii	"g2_xpos\000"
 4086      706F7300 
 4087              	.LASF127:
 4088 0142 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4088      61726455 
 4088      6E74696C 
 4088      54617267 
 4088      65745374 
 4089              	.LASF89:
 4090 0160 6E756D53 		.ascii	"numSteps\000"
 4090      74657073 
 4090      00
 4091              	.LASF83:
 4092 0169 74617267 		.ascii	"targetRow\000"
 4092      6574526F 
 4092      7700
 4093              	.LASF75:
 4094 0173 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4094      6F76656D 
 4094      656E7441 
 4094      63636F72 
 4094      64696E67 
 4095              	.LASF107:
 4096 0195 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4096      5F72665F 
 4096      7472616E 
 4096      736D6973 
 4096      73696F6E 
 4097              	.LASF73:
 4098 01b1 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4098      61726443 
 4098      6F757273 
 4098      65436F72 
 4098      72656374 
 4099              	.LASF116:
 4100 01c9 63757272 		.ascii	"currentRobotOrientation\000"
 4100      656E7452 
 4100      6F626F74 
 4100      4F726965 
 4100      6E746174 
 4101              	.LASF86:
 4102 01e1 52657365 		.ascii	"ResetSensorFlags\000"
 4102      7453656E 
 4102      736F7246 
 4102      6C616773 
 4102      00
 4103              	.LASF37:
 4104 01f2 67325F64 		.ascii	"g2_direction\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 89


 4104      69726563 
 4104      74696F6E 
 4104      00
 4105              	.LASF84:
 4106 01ff 74617267 		.ascii	"targetCol\000"
 4106      6574436F 
 4106      6C00
 4107              	.LASF122:
 4108 0209 71756164 		.ascii	"quadDec2Count\000"
 4108      44656332 
 4108      436F756E 
 4108      7400
 4109              	.LASF19:
 4110 0217 666C6F61 		.ascii	"float\000"
 4110      7400
 4111              	.LASF77:
 4112 021d 63757272 		.ascii	"currentInstructionDirection\000"
 4112      656E7449 
 4112      6E737472 
 4112      75637469 
 4112      6F6E4469 
 4113              	.LASF111:
 4114 0239 75736242 		.ascii	"usbBuffer\000"
 4114      75666665 
 4114      7200
 4115              	.LASF80:
 4116 0243 636F756E 		.ascii	"count\000"
 4116      7400
 4117              	.LASF22:
 4118 0249 696E6465 		.ascii	"index\000"
 4118      7800
 4119              	.LASF7:
 4120 024f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4120      206C6F6E 
 4120      6720756E 
 4120      7369676E 
 4120      65642069 
 4121              	.LASF46:
 4122 0266 496E7374 		.ascii	"Instruction\000"
 4122      72756374 
 4122      696F6E00 
 4123              	.LASF104:
 4124 0272 666C6167 		.ascii	"flag_packet\000"
 4124      5F706163 
 4124      6B657400 
 4125              	.LASF93:
 4126 027e 53657452 		.ascii	"SetRobotMovement\000"
 4126      6F626F74 
 4126      4D6F7665 
 4126      6D656E74 
 4126      00
 4127              	.LASF70:
 4128 028f 54494D45 		.ascii	"TIMER_FINISH\000"
 4128      525F4649 
 4128      4E495348 
 4128      00
 4129              	.LASF124:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 90


 4130 029c 6B656570 		.ascii	"keepLedOn\000"
 4130      4C65644F 
 4130      6E00
 4131              	.LASF42:
 4132 02a6 466F7277 		.ascii	"ForwardUntilTarget\000"
 4132      61726455 
 4132      6E74696C 
 4132      54617267 
 4132      657400
 4133              	.LASF100:
 4134 02b9 666C6167 		.ascii	"flag_ts_update\000"
 4134      5F74735F 
 4134      75706461 
 4134      746500
 4135              	.LASF99:
 4136 02c8 666C6167 		.ascii	"flag_ts_enc\000"
 4136      5F74735F 
 4136      656E6300 
 4137              	.LASF78:
 4138 02d4 71756164 		.ascii	"quadCountToRPM\000"
 4138      436F756E 
 4138      74546F52 
 4138      504D00
 4139              	.LASF81:
 4140 02e3 626C6F63 		.ascii	"blockSize\000"
 4140      6B53697A 
 4140      6500
 4141              	.LASF135:
 4142 02ed 69676E6F 		.ascii	"ignoreSensor\000"
 4142      72655365 
 4142      6E736F72 
 4142      00
 4143              	.LASF43:
 4144 02fa 53746F70 		.ascii	"StopAtTarget\000"
 4144      41745461 
 4144      72676574 
 4144      00
 4145              	.LASF63:
 4146 0307 77616974 		.ascii	"waitForTurn\000"
 4146      466F7254 
 4146      75726E00 
 4147              	.LASF24:
 4148 0313 726F626F 		.ascii	"robot_ypos\000"
 4148      745F7970 
 4148      6F7300
 4149              	.LASF98:
 4150 031e 74735F64 		.ascii	"ts_display\000"
 4150      6973706C 
 4150      617900
 4151              	.LASF11:
 4152 0329 63686172 		.ascii	"char\000"
 4152      00
 4153              	.LASF138:
 4154 032e 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4154      6F63756D 
 4154      656E7473 
 4154      5C476974 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 91


 4154      4875625C 
 4155 035d 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4155      635F636F 
 4155      64655F62 
 4155      6173655C 
 4155      43533330 
 4156              	.LASF28:
 4157 037f 67305F73 		.ascii	"g0_speed\000"
 4157      70656564 
 4157      00
 4158              	.LASF90:
 4159 0388 696E7374 		.ascii	"instructionList\000"
 4159      72756374 
 4159      696F6E4C 
 4159      69737400 
 4160              	.LASF91:
 4161 0398 696E7374 		.ascii	"instructionIndex\000"
 4161      72756374 
 4161      696F6E49 
 4161      6E646578 
 4161      00
 4162              	.LASF15:
 4163 03a9 75696E74 		.ascii	"uint16\000"
 4163      313600
 4164              	.LASF17:
 4165 03b0 696E7438 		.ascii	"int8\000"
 4165      00
 4166              	.LASF130:
 4167 03b5 78426C6F 		.ascii	"xBlocksize\000"
 4167      636B7369 
 4167      7A6500
 4168              	.LASF33:
 4169 03c0 67315F64 		.ascii	"g1_direction\000"
 4169      69726563 
 4169      74696F6E 
 4169      00
 4170              	.LASF53:
 4171 03cd 4C656674 		.ascii	"Left\000"
 4171      00
 4172              	.LASF74:
 4173 03d2 73706565 		.ascii	"speedTimer\000"
 4173      6454696D 
 4173      657200
 4174              	.LASF85:
 4175 03dd 70617468 		.ascii	"pathCount\000"
 4175      436F756E 
 4175      7400
 4176              	.LASF126:
 4177 03e7 7475726E 		.ascii	"turnFinishedFlag\000"
 4177      46696E69 
 4177      73686564 
 4177      466C6167 
 4177      00
 4178              	.LASF39:
 4179 03f8 77616974 		.ascii	"waitForLeftTurn\000"
 4179      466F724C 
 4179      65667454 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 92


 4179      75726E00 
 4180              	.LASF6:
 4181 0408 6C6F6E67 		.ascii	"long long int\000"
 4181      206C6F6E 
 4181      6720696E 
 4181      7400
 4182              	.LASF30:
 4183 0416 67315F78 		.ascii	"g1_xpos\000"
 4183      706F7300 
 4184              	.LASF129:
 4185 041e 626C6F63 		.ascii	"blockSizeTotal\000"
 4185      6B53697A 
 4185      65546F74 
 4185      616C00
 4186              	.LASF117:
 4187 042d 70726576 		.ascii	"previousOrientation\000"
 4187      696F7573 
 4187      4F726965 
 4187      6E746174 
 4187      696F6E00 
 4188              	.LASF41:
 4189 0441 75547572 		.ascii	"uTurn\000"
 4189      6E00
 4190              	.LASF72:
 4191 0447 6E657744 		.ascii	"newDistance\000"
 4191      69737461 
 4191      6E636500 
 4192              	.LASF36:
 4193 0453 67325F73 		.ascii	"g2_speed\000"
 4193      70656564 
 4193      00
 4194              	.LASF27:
 4195 045c 67305F79 		.ascii	"g0_ypos\000"
 4195      706F7300 
 4196              	.LASF113:
 4197 0464 666F6F64 		.ascii	"food_list\000"
 4197      5F6C6973 
 4197      7400
 4198              	.LASF58:
 4199 046e 5475726E 		.ascii	"TurnLeft\000"
 4199      4C656674 
 4199      00
 4200              	.LASF97:
 4201 0477 74735F73 		.ascii	"ts_speed\000"
 4201      70656564 
 4201      00
 4202              	.LASF62:
 4203 0480 556E6B6E 		.ascii	"Unknown\000"
 4203      6F776E00 
 4204              	.LASF16:
 4205 0488 75696E74 		.ascii	"uint32\000"
 4205      333200
 4206              	.LASF40:
 4207 048f 77616974 		.ascii	"waitForRightTurn\000"
 4207      466F7252 
 4207      69676874 
 4207      5475726E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 93


 4207      00
 4208              	.LASF57:
 4209 04a0 5475726E 		.ascii	"TurnRight\000"
 4209      52696768 
 4209      7400
 4210              	.LASF45:
 4211 04aa 64617461 		.ascii	"data_main\000"
 4211      5F6D6169 
 4211      6E00
 4212              	.LASF21:
 4213 04b4 72737369 		.ascii	"rssi\000"
 4213      00
 4214              	.LASF29:
 4215 04b9 67305F64 		.ascii	"g0_direction\000"
 4215      69726563 
 4215      74696F6E 
 4215      00
 4216              	.LASF115:
 4217 04c6 70726576 		.ascii	"previousDirection\000"
 4217      696F7573 
 4217      44697265 
 4217      6374696F 
 4217      6E00
 4218              	.LASF9:
 4219 04d8 6C6F6E67 		.ascii	"long double\000"
 4219      20646F75 
 4219      626C6500 
 4220              	.LASF101:
 4221 04e4 666C6167 		.ascii	"flag_ts_speed\000"
 4221      5F74735F 
 4221      73706565 
 4221      6400
 4222              	.LASF106:
 4223 04f2 64617461 		.ascii	"dataready_flag\000"
 4223      72656164 
 4223      795F666C 
 4223      616700
 4224              	.LASF103:
 4225 0501 666C6167 		.ascii	"flag_rx\000"
 4225      5F727800 
 4226              	.LASF131:
 4227 0509 79426C6F 		.ascii	"yBlocksize\000"
 4227      636B7369 
 4227      7A6500
 4228              	.LASF2:
 4229 0514 73686F72 		.ascii	"short int\000"
 4229      7420696E 
 4229      7400
 4230              	.LASF67:
 4231 051e 53345F44 		.ascii	"S4_DETECTED\000"
 4231      45544543 
 4231      54454400 
 4232              	.LASF66:
 4233 052a 53335F44 		.ascii	"S3_DETECTED\000"
 4233      45544543 
 4233      54454400 
 4234              	.LASF4:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 94


 4235 0536 6C6F6E67 		.ascii	"long int\000"
 4235      20696E74 
 4235      00
 4236              	.LASF94:
 4237 053f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4237      52784275 
 4237      66666572 
 4237      00
 4238              	.LASF96:
 4239 054c 74735F75 		.ascii	"ts_update\000"
 4239      70646174 
 4239      6500
 4240              	.LASF56:
 4241 0556 466F7277 		.ascii	"Forward\000"
 4241      61726400 
 4242              	.LASF119:
 4243 055e 746F7461 		.ascii	"totalMilliseconds\000"
 4243      6C4D696C 
 4243      6C697365 
 4243      636F6E64 
 4243      7300
 4244              	.LASF35:
 4245 0570 67325F79 		.ascii	"g2_ypos\000"
 4245      706F7300 
 4246              	.LASF87:
 4247 0578 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4247      546F4E65 
 4247      7874496E 
 4247      73747275 
 4247      6374696F 
 4248              	.LASF51:
 4249 058e 4F726965 		.ascii	"OrientationState\000"
 4249      6E746174 
 4249      696F6E53 
 4249      74617465 
 4249      00
 4250              	.LASF52:
 4251 059f 446F776E 		.ascii	"Down\000"
 4251      00
 4252              	.LASF54:
 4253 05a4 52696768 		.ascii	"Right\000"
 4253      7400
 4254              	.LASF31:
 4255 05aa 67315F79 		.ascii	"g1_ypos\000"
 4255      706F7300 
 4256              	.LASF114:
 4257 05b2 63757272 		.ascii	"currentDirection\000"
 4257      656E7444 
 4257      69726563 
 4257      74696F6E 
 4257      00
 4258              	.LASF10:
 4259 05c3 73697A65 		.ascii	"sizetype\000"
 4259      74797065 
 4259      00
 4260              	.LASF5:
 4261 05cc 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 95


 4261      20756E73 
 4261      69676E65 
 4261      6420696E 
 4261      7400
 4262              	.LASF125:
 4263 05de 73746F70 		.ascii	"stopBuffer\000"
 4263      42756666 
 4263      657200
 4264              	.LASF13:
 4265 05e9 696E7433 		.ascii	"int32_t\000"
 4265      325F7400 
 4266              	.LASF23:
 4267 05f1 726F626F 		.ascii	"robot_xpos\000"
 4267      745F7870 
 4267      6F7300
 4268              	.LASF110:
 4269 05fc 656E7472 		.ascii	"entry\000"
 4269      7900
 4270              	.LASF55:
 4271 0602 526F626F 		.ascii	"RobotMovement\000"
 4271      744D6F76 
 4271      656D656E 
 4271      7400
 4272              	.LASF1:
 4273 0610 756E7369 		.ascii	"unsigned char\000"
 4273      676E6564 
 4273      20636861 
 4273      7200
 4274              	.LASF134:
 4275 061e 73746F70 		.ascii	"stoppedAfterTurn\000"
 4275      70656441 
 4275      66746572 
 4275      5475726E 
 4275      00
 4276              	.LASF109:
 4277 062f 6C696E65 		.ascii	"line\000"
 4277      00
 4278              	.LASF79:
 4279 0634 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4279      756C6174 
 4279      65446973 
 4279      74616E63 
 4279      65546F54 
 4280              	.LASF60:
 4281 064e 41646A75 		.ascii	"AdjustToTheRight\000"
 4281      7374546F 
 4281      54686552 
 4281      69676874 
 4281      00
 4282              	.LASF61:
 4283 065f 53746F70 		.ascii	"Stop\000"
 4283      00
 4284              	.LASF88:
 4285 0664 47657449 		.ascii	"GetInstructionAtIndex\000"
 4285      6E737472 
 4285      75637469 
 4285      6F6E4174 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 96


 4285      496E6465 
 4286              	.LASF95:
 4287 067a 74735F65 		.ascii	"ts_enc\000"
 4287      6E6300
 4288              	.LASF102:
 4289 0681 666C6167 		.ascii	"flag_ts_display\000"
 4289      5F74735F 
 4289      64697370 
 4289      6C617900 
 4290              	.LASF44:
 4291 0691 536B6970 		.ascii	"Skip\000"
 4291      00
 4292              	.LASF108:
 4293 0696 64697370 		.ascii	"displaystring\000"
 4293      6C617973 
 4293      7472696E 
 4293      6700
 4294              	.LASF38:
 4295 06a4 476F466F 		.ascii	"GoForward\000"
 4295      72776172 
 4295      6400
 4296              	.LASF68:
 4297 06ae 53355F44 		.ascii	"S5_DETECTED\000"
 4297      45544543 
 4297      54454400 
 4298              	.LASF0:
 4299 06ba 7369676E 		.ascii	"signed char\000"
 4299      65642063 
 4299      68617200 
 4300              	.LASF132:
 4301 06c6 63757272 		.ascii	"currentRow\000"
 4301      656E7452 
 4301      6F7700
 4302              	.LASF3:
 4303 06d1 73686F72 		.ascii	"short unsigned int\000"
 4303      7420756E 
 4303      7369676E 
 4303      65642069 
 4303      6E7400
 4304              	.LASF25:
 4305 06e4 726F626F 		.ascii	"robot_orientation\000"
 4305      745F6F72 
 4305      69656E74 
 4305      6174696F 
 4305      6E00
 4306              	.LASF71:
 4307 06f6 6D61696E 		.ascii	"main\000"
 4307      00
 4308              	.LASF118:
 4309 06fb 63757272 		.ascii	"currentInstruction\000"
 4309      656E7449 
 4309      6E737472 
 4309      75637469 
 4309      6F6E00
 4310              	.LASF59:
 4311 070e 41646A75 		.ascii	"AdjustToTheLeft\000"
 4311      7374546F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccY9raPo.s 			page 97


 4311      5468654C 
 4311      65667400 
 4312              	.LASF65:
 4313 071e 4261636B 		.ascii	"Backward\000"
 4313      77617264 
 4313      00
 4314              	.LASF14:
 4315 0727 75696E74 		.ascii	"uint8\000"
 4315      3800
 4316              	.LASF20:
 4317 072d 646F7562 		.ascii	"double\000"
 4317      6C6500
 4318              	.LASF133:
 4319 0734 63757272 		.ascii	"currentCol\000"
 4319      656E7443 
 4319      6F6C00
 4320              	.LASF82:
 4321 073f 746F7461 		.ascii	"totalBlockSize\000"
 4321      6C426C6F 
 4321      636B5369 
 4321      7A6500
 4322              	.LASF26:
 4323 074e 67305F78 		.ascii	"g0_xpos\000"
 4323      706F7300 
 4324              	.LASF123:
 4325 0756 74696D65 		.ascii	"timerInt\000"
 4325      72496E74 
 4325      00
 4326              	.LASF105:
 4327 075f 666C6167 		.ascii	"flag_KB_string\000"
 4327      5F4B425F 
 4327      73747269 
 4327      6E6700
 4328              	.LASF32:
 4329 076e 67315F73 		.ascii	"g1_speed\000"
 4329      70656564 
 4329      00
 4330              	.LASF48:
 4331 0777 69676E6F 		.ascii	"ignoreL\000"
 4331      72654C00 
 4332              	.LASF49:
 4333 077f 69676E6F 		.ascii	"ignoreR\000"
 4333      72655200 
 4334              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
