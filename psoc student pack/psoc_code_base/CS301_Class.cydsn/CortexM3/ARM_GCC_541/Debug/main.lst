ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 01       		.byte	1
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 01       		.byte	1
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Down;
  46:main.c        **** enum OrientationState previousOrientation = Down;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** // --- YIPPE
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s3 = 0;
  51:main.c        **** uint8 s4 = 0;
  52:main.c        **** uint8 s5 = 0;
  53:main.c        **** uint8 s6 = 0;
  54:main.c        **** //* ========================================
  55:main.c        **** // Calculating Distance
  56:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  57:main.c        **** 
  58:main.c        **** uint32 totalMilliseconds = 0;
  59:main.c        **** float totalDistance = 0; // in mm
  60:main.c        **** //* ========================================
  61:main.c        **** char buffer[69];
  62:main.c        **** int quadDec2Count = 0;
  63:main.c        **** int timerInt = 0;
  64:main.c        **** int keepLedOn = 0;
  65:main.c        **** uint32 stopBuffer = 0;
  66:main.c        **** 
  67:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  68:main.c        **** 
  69:main.c        **** CY_ISR (speedTimer) {
 200              		.loc 1 69 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 6


 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  70:main.c        ****     timerInt = 1;
 213              		.loc 1 70 0
 214 0006 364B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  71:main.c        ****     //quadDec_M1 used for turning macros
  72:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 72 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 334B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  73:main.c        ****     
  74:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 74 0
 224 0018 334B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 17D0     		beq	.L2
  75:main.c        ****         currentDirection == waitForTurn || 
 228              		.loc 1 75 0 discriminator 1
 229 0020 314B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == waitForTurn || 
 231              		.loc 1 74 0 discriminator 1
 232 0024 072B     		cmp	r3, #7
 233 0026 13D0     		beq	.L2
  76:main.c        ****         currentDirection == waitForLeftTurn ||
 234              		.loc 1 76 0
 235 0028 2F4B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForTurn || 
 237              		.loc 1 75 0
 238 002c 092B     		cmp	r3, #9
 239 002e 0FD0     		beq	.L2
  77:main.c        ****         currentDirection == waitForRightTurn ||
 240              		.loc 1 77 0
 241 0030 2D4B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == waitForLeftTurn ||
 243              		.loc 1 76 0
 244 0034 082B     		cmp	r3, #8
 245 0036 0BD0     		beq	.L2
  78:main.c        ****         currentDirection == ForwardAfterTurn ||
 246              		.loc 1 78 0
 247 0038 2B4B     		ldr	r3, .L4+24
 248 003a 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == waitForRightTurn ||
 249              		.loc 1 77 0
 250 003c 0A2B     		cmp	r3, #10
 251 003e 07D0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 252              		.loc 1 79 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 7


 253 0040 294B     		ldr	r3, .L4+24
 254 0042 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == ForwardAfterTurn ||
 255              		.loc 1 78 0
 256 0044 032B     		cmp	r3, #3
 257 0046 03D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight) &&
 258              		.loc 1 80 0
 259 0048 274B     		ldr	r3, .L4+24
 260 004a 1B68     		ldr	r3, [r3]
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 261              		.loc 1 79 0
 262 004c 042B     		cmp	r3, #4
 263 004e 34D1     		bne	.L3
 264              	.L2:
  81:main.c        ****         quadDec2Count != 0) {
 265              		.loc 1 81 0
 266 0050 244B     		ldr	r3, .L4+20
 267 0052 1B68     		ldr	r3, [r3]
  80:main.c        ****         currentDirection == AdjustToTheRight) &&
 268              		.loc 1 80 0
 269 0054 002B     		cmp	r3, #0
 270 0056 30D0     		beq	.L3
 271              	.LBB2:
  82:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  83:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 272              		.loc 1 83 0
 273 0058 224B     		ldr	r3, .L4+20
 274 005a 1B68     		ldr	r3, [r3]
 275 005c 002B     		cmp	r3, #0
 276 005e B8BF     		it	lt
 277 0060 5B42     		rsblt	r3, r3, #0
 278 0062 1846     		mov	r0, r3
 279 0064 FFF7FEFF 		bl	__aeabi_i2d
 280 0068 19A3     		adr	r3, .L4
 281 006a D3E90023 		ldrd	r2, [r3]
 282 006e FFF7FEFF 		bl	__aeabi_dmul
 283 0072 0346     		mov	r3, r0
 284 0074 0C46     		mov	r4, r1
 285 0076 1846     		mov	r0, r3
 286 0078 2146     		mov	r1, r4
 287 007a 17A3     		adr	r3, .L4+8
 288 007c D3E90023 		ldrd	r2, [r3]
 289 0080 FFF7FEFF 		bl	__aeabi_dmul
 290 0084 0346     		mov	r3, r0
 291 0086 0C46     		mov	r4, r1
 292 0088 1846     		mov	r0, r3
 293 008a 2146     		mov	r1, r4
 294 008c 4FF00002 		mov	r2, #0
 295 0090 164B     		ldr	r3, .L4+28
 296 0092 FFF7FEFF 		bl	__aeabi_ddiv
 297 0096 0346     		mov	r3, r0
 298 0098 0C46     		mov	r4, r1
 299 009a 1846     		mov	r0, r3
 300 009c 2146     		mov	r1, r4
 301 009e FFF7FEFF 		bl	__aeabi_d2f
 302 00a2 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 8


 303 00a4 7B60     		str	r3, [r7, #4]	@ float
  84:main.c        ****         
  85:main.c        ****         totalDistance = totalDistance + newDistance;
 304              		.loc 1 85 0
 305 00a6 124B     		ldr	r3, .L4+32
 306 00a8 1B68     		ldr	r3, [r3]	@ float
 307 00aa 7968     		ldr	r1, [r7, #4]	@ float
 308 00ac 1846     		mov	r0, r3
 309 00ae FFF7FEFF 		bl	__aeabi_fadd
 310 00b2 0346     		mov	r3, r0
 311 00b4 1A46     		mov	r2, r3
 312 00b6 0E4B     		ldr	r3, .L4+32
 313 00b8 1A60     		str	r2, [r3]	@ float
 314              	.L3:
 315              	.LBE2:
  86:main.c        ****     }
  87:main.c        ****     
  88:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 316              		.loc 1 88 0
 317 00ba 0020     		movs	r0, #0
 318 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  89:main.c        ****     QuadDec_M2_Start(); // restart counter
 319              		.loc 1 89 0
 320 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  90:main.c        ****     
  91:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 321              		.loc 1 91 0
 322 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  92:main.c        **** }
 323              		.loc 1 92 0
 324 00c8 00BF     		nop
 325 00ca 0C37     		adds	r7, r7, #12
 326              		.cfi_def_cfa_offset 12
 327 00cc BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 00ce 90BD     		pop	{r4, r7, pc}
 331              	.L5:
 332              		.align	3
 333              	.L4:
 334 00d0 182D4454 		.word	1413754136
 335 00d4 FB210940 		.word	1074340347
 336 00d8 00000000 		.word	0
 337 00dc 00205040 		.word	1078992896
 338 00e0 00000000 		.word	timerInt
 339 00e4 00000000 		.word	quadDec2Count
 340 00e8 00000000 		.word	currentDirection
 341 00ec 00806C40 		.word	1080852480
 342 00f0 00000000 		.word	totalDistance
 343              		.cfi_endproc
 344              	.LFE64:
 345              		.size	speedTimer, .-speedTimer
 346              		.section	.text.S3_DETECTED,"ax",%progbits
 347              		.align	2
 348              		.global	S3_DETECTED
 349              		.thumb
 350              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 9


 351              		.type	S3_DETECTED, %function
 352              	S3_DETECTED:
 353              	.LFB65:
  93:main.c        **** 
  94:main.c        **** CY_ISR(S3_DETECTED) {
 354              		.loc 1 94 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359 0000 80B4     		push	{r7}
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 7, -4
 362 0002 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
  95:main.c        ****     // Sensor has detected WHITE
  96:main.c        ****     s3 = 1; // , Black = 0, White = 1
 364              		.loc 1 96 0
 365 0004 034B     		ldr	r3, .L7
 366 0006 0122     		movs	r2, #1
 367 0008 1A70     		strb	r2, [r3]
  97:main.c        ****     //LED_Write(1u);
  98:main.c        **** }
 368              		.loc 1 98 0
 369 000a 00BF     		nop
 370 000c BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 000e 80BC     		pop	{r7}
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0010 7047     		bx	lr
 377              	.L8:
 378 0012 00BF     		.align	2
 379              	.L7:
 380 0014 00000000 		.word	s3
 381              		.cfi_endproc
 382              	.LFE65:
 383              		.size	S3_DETECTED, .-S3_DETECTED
 384              		.section	.text.S4_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S4_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S4_DETECTED, %function
 390              	S4_DETECTED:
 391              	.LFB66:
  99:main.c        **** 
 100:main.c        **** CY_ISR(S4_DETECTED) {
 392              		.loc 1 100 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 10


 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 101:main.c        ****     // Sensor has detected WHITE
 102:main.c        ****     s4 = 1; // , Black = 0, White = 1
 402              		.loc 1 102 0
 403 0004 034B     		ldr	r3, .L10
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 103:main.c        ****     //LED_Write(1u);
 104:main.c        **** }
 406              		.loc 1 104 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L11:
 416 0012 00BF     		.align	2
 417              	.L10:
 418 0014 00000000 		.word	s4
 419              		.cfi_endproc
 420              	.LFE66:
 421              		.size	S4_DETECTED, .-S4_DETECTED
 422              		.section	.text.S5_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S5_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S5_DETECTED, %function
 428              	S5_DETECTED:
 429              	.LFB67:
 105:main.c        **** 
 106:main.c        **** CY_ISR(S5_DETECTED) {
 430              		.loc 1 106 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 107:main.c        ****     // Sensor has detected WHITE
 108:main.c        ****     s5 = 1; // , Black = 0, White = 1
 440              		.loc 1 108 0
 441 0004 034B     		ldr	r3, .L13
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     //LED_Write(1u);
 110:main.c        **** }
 444              		.loc 1 110 0
 445 000a 00BF     		nop
 446 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 11


 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L14:
 454 0012 00BF     		.align	2
 455              	.L13:
 456 0014 00000000 		.word	s5
 457              		.cfi_endproc
 458              	.LFE67:
 459              		.size	S5_DETECTED, .-S5_DETECTED
 460              		.section	.text.S6_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S6_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S6_DETECTED, %function
 466              	S6_DETECTED:
 467              	.LFB68:
 111:main.c        **** 
 112:main.c        **** CY_ISR(S6_DETECTED) {
 468              		.loc 1 112 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 113:main.c        ****     // Sensor has detected WHITE
 114:main.c        ****     s6 = 1; // , Black = 0, White = 1
 478              		.loc 1 114 0
 479 0004 034B     		ldr	r3, .L16
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 115:main.c        ****     //LED_Write(1u);
 116:main.c        **** }
 482              		.loc 1 116 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
 490 0010 7047     		bx	lr
 491              	.L17:
 492 0012 00BF     		.align	2
 493              	.L16:
 494 0014 00000000 		.word	s6
 495              		.cfi_endproc
 496              	.LFE68:
 497              		.size	S6_DETECTED, .-S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 12


 498              		.section	.text.TIMER_FINISH,"ax",%progbits
 499              		.align	2
 500              		.global	TIMER_FINISH
 501              		.thumb
 502              		.thumb_func
 503              		.type	TIMER_FINISH, %function
 504              	TIMER_FINISH:
 505              	.LFB69:
 117:main.c        **** 
 118:main.c        **** CY_ISR(TIMER_FINISH) {
 506              		.loc 1 118 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 119:main.c        ****     if (currentDirection == Stop) {
 516              		.loc 1 119 0
 517 0004 0A4B     		ldr	r3, .L21
 518 0006 1B68     		ldr	r3, [r3]
 519 0008 052B     		cmp	r3, #5
 520 000a 05D1     		bne	.L19
 120:main.c        ****         stopBuffer = stopBuffer + 1;
 521              		.loc 1 120 0
 522 000c 094B     		ldr	r3, .L21+4
 523 000e 1B68     		ldr	r3, [r3]
 524 0010 0133     		adds	r3, r3, #1
 525 0012 084A     		ldr	r2, .L21+4
 526 0014 1360     		str	r3, [r2]
 527 0016 02E0     		b	.L20
 528              	.L19:
 121:main.c        ****     } else {
 122:main.c        ****         stopBuffer = 0;
 529              		.loc 1 122 0
 530 0018 064B     		ldr	r3, .L21+4
 531 001a 0022     		movs	r2, #0
 532 001c 1A60     		str	r2, [r3]
 533              	.L20:
 123:main.c        ****     }
 124:main.c        ****     SetRobotMovement(); 
 534              		.loc 1 124 0
 535 001e FFF7FEFF 		bl	SetRobotMovement
 125:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 536              		.loc 1 125 0
 537 0022 FFF7FEFF 		bl	ResetSensorFlags
 126:main.c        ****     Timer_LED_ReadStatusRegister();
 538              		.loc 1 126 0
 539 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 127:main.c        **** }
 540              		.loc 1 127 0
 541 002a 00BF     		nop
 542 002c 80BD     		pop	{r7, pc}
 543              	.L22:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 13


 544 002e 00BF     		.align	2
 545              	.L21:
 546 0030 00000000 		.word	currentDirection
 547 0034 00000000 		.word	stopBuffer
 548              		.cfi_endproc
 549              	.LFE69:
 550              		.size	TIMER_FINISH, .-TIMER_FINISH
 551              		.section	.text.main,"ax",%progbits
 552              		.align	2
 553              		.global	main
 554              		.thumb
 555              		.thumb_func
 556              		.type	main, %function
 557              	main:
 558              	.LFB70:
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** int main()
 131:main.c        **** {
 559              		.loc 1 131 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 569              		.loc 1 133 0
 570              		.syntax unified
 571              	@ 133 "main.c" 1
 572 0004 62B6     		CPSIE   i
 573              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 574              		.loc 1 134 0
 575              		.thumb
 576              		.syntax unified
 577 0006 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 578              		.loc 1 135 0
 579 000a FFF7FEFF 		bl	init
 136:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 580              		.loc 1 136 0
 581 000e 1A48     		ldr	r0, .L27
 582 0010 FFF7FEFF 		bl	isr_speed_StartEx
 137:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 583              		.loc 1 137 0
 584 0014 1948     		ldr	r0, .L27+4
 585 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 138:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 586              		.loc 1 138 0
 587 001a 1948     		ldr	r0, .L27+8
 588 001c FFF7FEFF 		bl	S3_detected_StartEx
 139:main.c        ****     S4_detected_StartEx(S4_DETECTED);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 14


 589              		.loc 1 139 0
 590 0020 1848     		ldr	r0, .L27+12
 591 0022 FFF7FEFF 		bl	S4_detected_StartEx
 140:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 592              		.loc 1 140 0
 593 0026 1848     		ldr	r0, .L27+16
 594 0028 FFF7FEFF 		bl	S5_detected_StartEx
 141:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 595              		.loc 1 141 0
 596 002c 1748     		ldr	r0, .L27+20
 597 002e FFF7FEFF 		bl	S6_detected_StartEx
 142:main.c        ****     Timer_LED_Start();
 598              		.loc 1 142 0
 599 0032 FFF7FEFF 		bl	Timer_LED_Start
 143:main.c        **** 
 144:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
 600              		.loc 1 144 0
 601 0036 1648     		ldr	r0, .L27+24
 602 0038 FFF7FEFF 		bl	findPath
 145:main.c        ****     GetNextStep();
 603              		.loc 1 145 0
 604 003c FFF7FEFF 		bl	GetNextStep
 146:main.c        **** 
 147:main.c        **** // ------USB SETUP ----------------    
 148:main.c        **** #ifdef USE_USB    
 149:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 605              		.loc 1 149 0
 606 0040 0121     		movs	r1, #1
 607 0042 0020     		movs	r0, #0
 608 0044 FFF7FEFF 		bl	USBUART_Start
 150:main.c        **** #endif        
 151:main.c        ****     RF_BT_SELECT_Write(0);
 609              		.loc 1 151 0
 610 0048 0020     		movs	r0, #0
 611 004a FFF7FEFF 		bl	RF_BT_SELECT_Write
 612              	.L26:
 152:main.c        ****     
 153:main.c        ****     //usbPutString("Initialised UART");
 154:main.c        ****     for(;;)
 155:main.c        ****     {
 156:main.c        ****         if(timerInt == 1) {
 613              		.loc 1 156 0
 614 004e 114B     		ldr	r3, .L27+28
 615 0050 1B68     		ldr	r3, [r3]
 616 0052 012B     		cmp	r3, #1
 617 0054 08D1     		bne	.L24
 157:main.c        ****             timerInt = 0;
 618              		.loc 1 157 0
 619 0056 0F4B     		ldr	r3, .L27+28
 620 0058 0022     		movs	r2, #0
 621 005a 1A60     		str	r2, [r3]
 158:main.c        ****             // calculate RPM of M2
 159:main.c        ****             quadCountToRPM(quadDec2Count);
 622              		.loc 1 159 0
 623 005c 0E4B     		ldr	r3, .L27+32
 624 005e 1B68     		ldr	r3, [r3]
 625 0060 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 15


 626 0062 1846     		mov	r0, r3
 627 0064 FFF7FEFF 		bl	quadCountToRPM
 628              	.L24:
 160:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 161:main.c        ****             //usbPutString(buffer);
 162:main.c        ****             //usbPutString(" ");
 163:main.c        ****         }
 164:main.c        ****         //handle_usb();
 165:main.c        ****         if (flag_KB_string == 1)
 629              		.loc 1 165 0
 630 0068 0C4B     		ldr	r3, .L27+36
 631 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 632 006c 012B     		cmp	r3, #1
 633 006e EED1     		bne	.L26
 166:main.c        ****         {
 167:main.c        ****             //usbPutString("Total Distance: ");
 168:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 169:main.c        ****             //usbPutString(buffer);
 170:main.c        ****             flag_KB_string = 0;
 634              		.loc 1 170 0
 635 0070 0A4B     		ldr	r3, .L27+36
 636 0072 0022     		movs	r2, #0
 637 0074 1A70     		strb	r2, [r3]
 171:main.c        ****         }           
 172:main.c        ****     }
 638              		.loc 1 172 0
 639 0076 EAE7     		b	.L26
 640              	.L28:
 641              		.align	2
 642              	.L27:
 643 0078 00000000 		.word	speedTimer
 644 007c 00000000 		.word	TIMER_FINISH
 645 0080 00000000 		.word	S3_DETECTED
 646 0084 00000000 		.word	S4_DETECTED
 647 0088 00000000 		.word	S5_DETECTED
 648 008c 00000000 		.word	S6_DETECTED
 649 0090 00000000 		.word	map
 650 0094 00000000 		.word	timerInt
 651 0098 00000000 		.word	quadDec2Count
 652 009c 00000000 		.word	flag_KB_string
 653              		.cfi_endproc
 654              	.LFE70:
 655              		.size	main, .-main
 656              		.global	__aeabi_fmul
 657              		.global	__aeabi_f2iz
 658              		.section	.text.quadCountToRPM,"ax",%progbits
 659              		.align	2
 660              		.global	quadCountToRPM
 661              		.thumb
 662              		.thumb_func
 663              		.type	quadCountToRPM, %function
 664              	quadCountToRPM:
 665              	.LFB71:
 173:main.c        ****     return 0;
 174:main.c        **** }
 175:main.c        **** 
 176:main.c        **** // Calculations
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 16


 177:main.c        **** //* ========================================
 178:main.c        **** int16 quadCountToRPM(uint16 count)
 179:main.c        **** {
 666              		.loc 1 179 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 90B5     		push	{r4, r7, lr}
 671              		.cfi_def_cfa_offset 12
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 85B0     		sub	sp, sp, #20
 676              		.cfi_def_cfa_offset 32
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 0346     		mov	r3, r0
 680 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 180:main.c        ****     float cps = count/57.00;
 681              		.loc 1 180 0
 682 000a FB88     		ldrh	r3, [r7, #6]
 683 000c 1846     		mov	r0, r3
 684 000e FFF7FEFF 		bl	__aeabi_i2d
 685 0012 4FF00002 		mov	r2, #0
 686 0016 0D4B     		ldr	r3, .L31
 687 0018 FFF7FEFF 		bl	__aeabi_ddiv
 688 001c 0346     		mov	r3, r0
 689 001e 0C46     		mov	r4, r1
 690 0020 1846     		mov	r0, r3
 691 0022 2146     		mov	r1, r4
 692 0024 FFF7FEFF 		bl	__aeabi_d2f
 693 0028 0346     		mov	r3, r0
 694 002a FB60     		str	r3, [r7, #12]	@ float
 181:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 695              		.loc 1 181 0
 696 002c 0849     		ldr	r1, .L31+4
 697 002e F868     		ldr	r0, [r7, #12]	@ float
 698 0030 FFF7FEFF 		bl	__aeabi_fmul
 699 0034 0346     		mov	r3, r0
 700 0036 1846     		mov	r0, r3
 701 0038 FFF7FEFF 		bl	__aeabi_f2iz
 702 003c 0346     		mov	r3, r0
 703 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 182:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 183:main.c        ****     return rpm;
 704              		.loc 1 183 0
 705 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 184:main.c        ****     //usbPutString(buffer);
 185:main.c        ****     //usbPutString("rpm ");
 186:main.c        **** }
 706              		.loc 1 186 0
 707 0044 1846     		mov	r0, r3
 708 0046 1437     		adds	r7, r7, #20
 709              		.cfi_def_cfa_offset 12
 710 0048 BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 17


 713 004a 90BD     		pop	{r4, r7, pc}
 714              	.L32:
 715              		.align	2
 716              	.L31:
 717 004c 00804C40 		.word	1078755328
 718 0050 00007041 		.word	1097859072
 719              		.cfi_endproc
 720              	.LFE71:
 721              		.size	quadCountToRPM, .-quadCountToRPM
 722              		.section	.text.ResetSensorFlags,"ax",%progbits
 723              		.align	2
 724              		.global	ResetSensorFlags
 725              		.thumb
 726              		.thumb_func
 727              		.type	ResetSensorFlags, %function
 728              	ResetSensorFlags:
 729              	.LFB72:
 187:main.c        **** 
 188:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 189:main.c        **** void ResetSensorFlags() {
 730              		.loc 1 189 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735 0000 80B4     		push	{r7}
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 0002 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 190:main.c        ****     s3 = 0;
 740              		.loc 1 190 0
 741 0004 074B     		ldr	r3, .L34
 742 0006 0022     		movs	r2, #0
 743 0008 1A70     		strb	r2, [r3]
 191:main.c        ****     s4 = 0;
 744              		.loc 1 191 0
 745 000a 074B     		ldr	r3, .L34+4
 746 000c 0022     		movs	r2, #0
 747 000e 1A70     		strb	r2, [r3]
 192:main.c        ****     s5 = 0;
 748              		.loc 1 192 0
 749 0010 064B     		ldr	r3, .L34+8
 750 0012 0022     		movs	r2, #0
 751 0014 1A70     		strb	r2, [r3]
 193:main.c        ****     s6 = 0;
 752              		.loc 1 193 0
 753 0016 064B     		ldr	r3, .L34+12
 754 0018 0022     		movs	r2, #0
 755 001a 1A70     		strb	r2, [r3]
 194:main.c        **** }
 756              		.loc 1 194 0
 757 001c 00BF     		nop
 758 001e BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 0020 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 18


 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 0022 7047     		bx	lr
 765              	.L35:
 766              		.align	2
 767              	.L34:
 768 0024 00000000 		.word	s3
 769 0028 00000000 		.word	s4
 770 002c 00000000 		.word	s5
 771 0030 00000000 		.word	s6
 772              		.cfi_endproc
 773              	.LFE72:
 774              		.size	ResetSensorFlags, .-ResetSensorFlags
 775              		.global	xBlocksize
 776              		.data
 777 004e 0000     		.align	2
 778              		.type	xBlocksize, %object
 779              		.size	xBlocksize, 4
 780              	xBlocksize:
 781 0050 0000FF42 		.word	1124007936
 782              		.global	yBlocksize
 783              		.align	2
 784              		.type	yBlocksize, %object
 785              		.size	yBlocksize, 4
 786              	yBlocksize:
 787 0054 0000A042 		.word	1117782016
 788              		.global	currentRow
 789              		.type	currentRow, %object
 790              		.size	currentRow, 1
 791              	currentRow:
 792 0058 01       		.byte	1
 793              		.global	currentCol
 794              		.type	currentCol, %object
 795              		.size	currentCol, 1
 796              	currentCol:
 797 0059 01       		.byte	1
 798              		.section	.text.GetNextStep,"ax",%progbits
 799              		.align	2
 800              		.global	GetNextStep
 801              		.thumb
 802              		.thumb_func
 803              		.type	GetNextStep, %function
 804              	GetNextStep:
 805              	.LFB73:
 195:main.c        **** 
 196:main.c        **** float xBlocksize = 127.5; // 127.5
 197:main.c        **** float yBlocksize = 80; // 80
 198:main.c        **** uint8 currentRow = 1;
 199:main.c        **** uint8 currentCol = 1;
 200:main.c        **** 
 201:main.c        **** enum DirectionState GetNextStep() {
 806              		.loc 1 201 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 19


 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 202:main.c        ****     enum DirectionState directionState;
 203:main.c        ****     // Determines robot movement and orientation to follow optimal path
 204:main.c        ****     // enum DirectionState directionState = Stop;
 205:main.c        ****     previousOrientation = currentOrientation;
 818              		.loc 1 205 0
 819 0006 AB4B     		ldr	r3, .L75
 820 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 821 000a AB4B     		ldr	r3, .L75+4
 822 000c 1A70     		strb	r2, [r3]
 206:main.c        ****     
 207:main.c        ****     if(map[currentRow][currentCol] == 9) {
 823              		.loc 1 207 0
 824 000e AB4B     		ldr	r3, .L75+8
 825 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 826 0012 1A46     		mov	r2, r3
 827 0014 AA4B     		ldr	r3, .L75+12
 828 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 0018 1846     		mov	r0, r3
 830 001a AA49     		ldr	r1, .L75+16
 831 001c 1346     		mov	r3, r2
 832 001e DB00     		lsls	r3, r3, #3
 833 0020 1344     		add	r3, r3, r2
 834 0022 5B00     		lsls	r3, r3, #1
 835 0024 1344     		add	r3, r3, r2
 836 0026 0344     		add	r3, r3, r0
 837 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 838 002c 092B     		cmp	r3, #9
 839 002e 03D1     		bne	.L37
 208:main.c        ****         directionState = Stop; // reached target
 840              		.loc 1 208 0
 841 0030 0523     		movs	r3, #5
 842 0032 7B60     		str	r3, [r7, #4]
 209:main.c        ****         return directionState;
 843              		.loc 1 209 0
 844 0034 7B68     		ldr	r3, [r7, #4]
 845 0036 22E2     		b	.L38
 846              	.L37:
 210:main.c        ****     }
 211:main.c        ****     /*
 212:main.c        ****     if (totalDistance >= (yBlocksize)) {
 213:main.c        ****         directionState = Stop;
 214:main.c        ****         return directionState;
 215:main.c        ****     }
 216:main.c        ****     */
 217:main.c        ****         
 218:main.c        ****     switch (previousOrientation) {
 847              		.loc 1 218 0
 848 0038 9F4B     		ldr	r3, .L75+4
 849 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 003c 032B     		cmp	r3, #3
 851 003e 00F21482 		bhi	.L70
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 20


 852 0042 01A2     		adr	r2, .L41
 853 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 854              		.p2align 2
 855              	.L41:
 856 0048 59000000 		.word	.L40+1
 857 004c 59010000 		.word	.L42+1
 858 0050 59020000 		.word	.L43+1
 859 0054 6D030000 		.word	.L44+1
 860              		.p2align 1
 861              	.L40:
 219:main.c        ****             case Up:
 220:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 862              		.loc 1 220 0
 863 0058 984B     		ldr	r3, .L75+8
 864 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 005c 5A1E     		subs	r2, r3, #1
 866 005e 984B     		ldr	r3, .L75+12
 867 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0062 1846     		mov	r0, r3
 869 0064 9749     		ldr	r1, .L75+16
 870 0066 1346     		mov	r3, r2
 871 0068 DB00     		lsls	r3, r3, #3
 872 006a 1344     		add	r3, r3, r2
 873 006c 5B00     		lsls	r3, r3, #1
 874 006e 1344     		add	r3, r3, r2
 875 0070 0344     		add	r3, r3, r0
 876 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 877 0076 082B     		cmp	r3, #8
 878 0078 10D0     		beq	.L45
 879              		.loc 1 220 0 is_stmt 0 discriminator 1
 880 007a 904B     		ldr	r3, .L75+8
 881 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 007e 5A1E     		subs	r2, r3, #1
 883 0080 8F4B     		ldr	r3, .L75+12
 884 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 0084 1846     		mov	r0, r3
 886 0086 8F49     		ldr	r1, .L75+16
 887 0088 1346     		mov	r3, r2
 888 008a DB00     		lsls	r3, r3, #3
 889 008c 1344     		add	r3, r3, r2
 890 008e 5B00     		lsls	r3, r3, #1
 891 0090 1344     		add	r3, r3, r2
 892 0092 0344     		add	r3, r3, r0
 893 0094 51F82330 		ldr	r3, [r1, r3, lsl #2]
 894 0098 092B     		cmp	r3, #9
 895 009a 0BD1     		bne	.L46
 896              	.L45:
 221:main.c        ****                     currentOrientation = Up; 
 897              		.loc 1 221 0 is_stmt 1
 898 009c 854B     		ldr	r3, .L75
 899 009e 0022     		movs	r2, #0
 900 00a0 1A70     		strb	r2, [r3]
 222:main.c        ****                     directionState = Forward;
 901              		.loc 1 222 0
 902 00a2 0023     		movs	r3, #0
 903 00a4 7B60     		str	r3, [r7, #4]
 223:main.c        ****                     currentRow--;// update position
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 21


 904              		.loc 1 223 0
 905 00a6 854B     		ldr	r3, .L75+8
 906 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907 00aa 013B     		subs	r3, r3, #1
 908 00ac DAB2     		uxtb	r2, r3
 909 00ae 834B     		ldr	r3, .L75+8
 910 00b0 1A70     		strb	r2, [r3]
 911 00b2 50E0     		b	.L47
 912              	.L46:
 224:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 913              		.loc 1 224 0
 914 00b4 814B     		ldr	r3, .L75+8
 915 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 00b8 1A46     		mov	r2, r3
 917 00ba 814B     		ldr	r3, .L75+12
 918 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 919 00be 591E     		subs	r1, r3, #1
 920 00c0 8048     		ldr	r0, .L75+16
 921 00c2 1346     		mov	r3, r2
 922 00c4 DB00     		lsls	r3, r3, #3
 923 00c6 1344     		add	r3, r3, r2
 924 00c8 5B00     		lsls	r3, r3, #1
 925 00ca 1344     		add	r3, r3, r2
 926 00cc 0B44     		add	r3, r3, r1
 927 00ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 928 00d2 082B     		cmp	r3, #8
 929 00d4 10D0     		beq	.L48
 930              		.loc 1 224 0 is_stmt 0 discriminator 1
 931 00d6 794B     		ldr	r3, .L75+8
 932 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 00da 1A46     		mov	r2, r3
 934 00dc 784B     		ldr	r3, .L75+12
 935 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 936 00e0 591E     		subs	r1, r3, #1
 937 00e2 7848     		ldr	r0, .L75+16
 938 00e4 1346     		mov	r3, r2
 939 00e6 DB00     		lsls	r3, r3, #3
 940 00e8 1344     		add	r3, r3, r2
 941 00ea 5B00     		lsls	r3, r3, #1
 942 00ec 1344     		add	r3, r3, r2
 943 00ee 0B44     		add	r3, r3, r1
 944 00f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 945 00f4 092B     		cmp	r3, #9
 946 00f6 05D1     		bne	.L49
 947              	.L48:
 225:main.c        ****                     currentOrientation = Left;
 948              		.loc 1 225 0 is_stmt 1
 949 00f8 6E4B     		ldr	r3, .L75
 950 00fa 0222     		movs	r2, #2
 951 00fc 1A70     		strb	r2, [r3]
 226:main.c        ****                     directionState = waitForLeftTurn;
 952              		.loc 1 226 0
 953 00fe 0923     		movs	r3, #9
 954 0100 7B60     		str	r3, [r7, #4]
 955 0102 28E0     		b	.L47
 956              	.L49:
 227:main.c        ****                     //currentRow--;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 22


 228:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 957              		.loc 1 228 0
 958 0104 6D4B     		ldr	r3, .L75+8
 959 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0108 1A46     		mov	r2, r3
 961 010a 6D4B     		ldr	r3, .L75+12
 962 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 010e 591C     		adds	r1, r3, #1
 964 0110 6C48     		ldr	r0, .L75+16
 965 0112 1346     		mov	r3, r2
 966 0114 DB00     		lsls	r3, r3, #3
 967 0116 1344     		add	r3, r3, r2
 968 0118 5B00     		lsls	r3, r3, #1
 969 011a 1344     		add	r3, r3, r2
 970 011c 0B44     		add	r3, r3, r1
 971 011e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 972 0122 082B     		cmp	r3, #8
 973 0124 11D0     		beq	.L50
 974              		.loc 1 228 0 is_stmt 0 discriminator 1
 975 0126 654B     		ldr	r3, .L75+8
 976 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 012a 1A46     		mov	r2, r3
 978 012c 644B     		ldr	r3, .L75+12
 979 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0130 591C     		adds	r1, r3, #1
 981 0132 6448     		ldr	r0, .L75+16
 982 0134 1346     		mov	r3, r2
 983 0136 DB00     		lsls	r3, r3, #3
 984 0138 1344     		add	r3, r3, r2
 985 013a 5B00     		lsls	r3, r3, #1
 986 013c 1344     		add	r3, r3, r2
 987 013e 0B44     		add	r3, r3, r1
 988 0140 50F82330 		ldr	r3, [r0, r3, lsl #2]
 989 0144 092B     		cmp	r3, #9
 990 0146 40F09281 		bne	.L71
 991              	.L50:
 229:main.c        ****                     currentOrientation = Right;
 992              		.loc 1 229 0 is_stmt 1
 993 014a 5A4B     		ldr	r3, .L75
 994 014c 0322     		movs	r2, #3
 995 014e 1A70     		strb	r2, [r3]
 230:main.c        ****                     directionState = waitForRightTurn;
 996              		.loc 1 230 0
 997 0150 0823     		movs	r3, #8
 998 0152 7B60     		str	r3, [r7, #4]
 231:main.c        ****                     //currentRow++; // update position
 232:main.c        ****                 }
 233:main.c        ****                 break;
 999              		.loc 1 233 0
 1000 0154 8BE1     		b	.L71
 1001              	.L47:
 1002 0156 8AE1     		b	.L71
 1003              	.L42:
 234:main.c        ****             case Down:
 235:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 1004              		.loc 1 235 0
 1005 0158 584B     		ldr	r3, .L75+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 23


 1006 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 015c 5A1C     		adds	r2, r3, #1
 1008 015e 584B     		ldr	r3, .L75+12
 1009 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0162 1846     		mov	r0, r3
 1011 0164 5749     		ldr	r1, .L75+16
 1012 0166 1346     		mov	r3, r2
 1013 0168 DB00     		lsls	r3, r3, #3
 1014 016a 1344     		add	r3, r3, r2
 1015 016c 5B00     		lsls	r3, r3, #1
 1016 016e 1344     		add	r3, r3, r2
 1017 0170 0344     		add	r3, r3, r0
 1018 0172 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1019 0176 082B     		cmp	r3, #8
 1020 0178 10D0     		beq	.L52
 1021              		.loc 1 235 0 is_stmt 0 discriminator 1
 1022 017a 504B     		ldr	r3, .L75+8
 1023 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 017e 5A1C     		adds	r2, r3, #1
 1025 0180 4F4B     		ldr	r3, .L75+12
 1026 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 0184 1846     		mov	r0, r3
 1028 0186 4F49     		ldr	r1, .L75+16
 1029 0188 1346     		mov	r3, r2
 1030 018a DB00     		lsls	r3, r3, #3
 1031 018c 1344     		add	r3, r3, r2
 1032 018e 5B00     		lsls	r3, r3, #1
 1033 0190 1344     		add	r3, r3, r2
 1034 0192 0344     		add	r3, r3, r0
 1035 0194 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1036 0198 092B     		cmp	r3, #9
 1037 019a 0BD1     		bne	.L53
 1038              	.L52:
 236:main.c        ****                     currentOrientation = Down;
 1039              		.loc 1 236 0 is_stmt 1
 1040 019c 454B     		ldr	r3, .L75
 1041 019e 0122     		movs	r2, #1
 1042 01a0 1A70     		strb	r2, [r3]
 237:main.c        ****                     directionState = Forward;
 1043              		.loc 1 237 0
 1044 01a2 0023     		movs	r3, #0
 1045 01a4 7B60     		str	r3, [r7, #4]
 238:main.c        ****                     currentRow++;
 1046              		.loc 1 238 0
 1047 01a6 454B     		ldr	r3, .L75+8
 1048 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 01aa 0133     		adds	r3, r3, #1
 1050 01ac DAB2     		uxtb	r2, r3
 1051 01ae 434B     		ldr	r3, .L75+8
 1052 01b0 1A70     		strb	r2, [r3]
 1053 01b2 50E0     		b	.L54
 1054              	.L53:
 239:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 1055              		.loc 1 239 0
 1056 01b4 414B     		ldr	r3, .L75+8
 1057 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 01b8 1A46     		mov	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 24


 1059 01ba 414B     		ldr	r3, .L75+12
 1060 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 01be 591E     		subs	r1, r3, #1
 1062 01c0 4048     		ldr	r0, .L75+16
 1063 01c2 1346     		mov	r3, r2
 1064 01c4 DB00     		lsls	r3, r3, #3
 1065 01c6 1344     		add	r3, r3, r2
 1066 01c8 5B00     		lsls	r3, r3, #1
 1067 01ca 1344     		add	r3, r3, r2
 1068 01cc 0B44     		add	r3, r3, r1
 1069 01ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1070 01d2 082B     		cmp	r3, #8
 1071 01d4 10D0     		beq	.L55
 1072              		.loc 1 239 0 is_stmt 0 discriminator 1
 1073 01d6 394B     		ldr	r3, .L75+8
 1074 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1075 01da 1A46     		mov	r2, r3
 1076 01dc 384B     		ldr	r3, .L75+12
 1077 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 01e0 591E     		subs	r1, r3, #1
 1079 01e2 3848     		ldr	r0, .L75+16
 1080 01e4 1346     		mov	r3, r2
 1081 01e6 DB00     		lsls	r3, r3, #3
 1082 01e8 1344     		add	r3, r3, r2
 1083 01ea 5B00     		lsls	r3, r3, #1
 1084 01ec 1344     		add	r3, r3, r2
 1085 01ee 0B44     		add	r3, r3, r1
 1086 01f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1087 01f4 092B     		cmp	r3, #9
 1088 01f6 05D1     		bne	.L56
 1089              	.L55:
 240:main.c        ****                     currentOrientation = Left;
 1090              		.loc 1 240 0 is_stmt 1
 1091 01f8 2E4B     		ldr	r3, .L75
 1092 01fa 0222     		movs	r2, #2
 1093 01fc 1A70     		strb	r2, [r3]
 241:main.c        ****                     directionState = waitForRightTurn;
 1094              		.loc 1 241 0
 1095 01fe 0823     		movs	r3, #8
 1096 0200 7B60     		str	r3, [r7, #4]
 1097 0202 28E0     		b	.L54
 1098              	.L56:
 242:main.c        ****                     //currentRow--;
 243:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 1099              		.loc 1 243 0
 1100 0204 2D4B     		ldr	r3, .L75+8
 1101 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1102 0208 1A46     		mov	r2, r3
 1103 020a 2D4B     		ldr	r3, .L75+12
 1104 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 020e 591C     		adds	r1, r3, #1
 1106 0210 2C48     		ldr	r0, .L75+16
 1107 0212 1346     		mov	r3, r2
 1108 0214 DB00     		lsls	r3, r3, #3
 1109 0216 1344     		add	r3, r3, r2
 1110 0218 5B00     		lsls	r3, r3, #1
 1111 021a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 25


 1112 021c 0B44     		add	r3, r3, r1
 1113 021e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1114 0222 082B     		cmp	r3, #8
 1115 0224 11D0     		beq	.L57
 1116              		.loc 1 243 0 is_stmt 0 discriminator 1
 1117 0226 254B     		ldr	r3, .L75+8
 1118 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1119 022a 1A46     		mov	r2, r3
 1120 022c 244B     		ldr	r3, .L75+12
 1121 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 0230 591C     		adds	r1, r3, #1
 1123 0232 2448     		ldr	r0, .L75+16
 1124 0234 1346     		mov	r3, r2
 1125 0236 DB00     		lsls	r3, r3, #3
 1126 0238 1344     		add	r3, r3, r2
 1127 023a 5B00     		lsls	r3, r3, #1
 1128 023c 1344     		add	r3, r3, r2
 1129 023e 0B44     		add	r3, r3, r1
 1130 0240 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1131 0244 092B     		cmp	r3, #9
 1132 0246 40F01481 		bne	.L72
 1133              	.L57:
 244:main.c        ****                     currentOrientation = Right;
 1134              		.loc 1 244 0 is_stmt 1
 1135 024a 1A4B     		ldr	r3, .L75
 1136 024c 0322     		movs	r2, #3
 1137 024e 1A70     		strb	r2, [r3]
 245:main.c        ****                     directionState = waitForLeftTurn;
 1138              		.loc 1 245 0
 1139 0250 0923     		movs	r3, #9
 1140 0252 7B60     		str	r3, [r7, #4]
 246:main.c        ****                     //currentRow++; // update position
 247:main.c        ****                 }
 248:main.c        ****                 break;
 1141              		.loc 1 248 0
 1142 0254 0DE1     		b	.L72
 1143              	.L54:
 1144 0256 0CE1     		b	.L72
 1145              	.L43:
 249:main.c        ****             case Left:
 250:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 1146              		.loc 1 250 0
 1147 0258 184B     		ldr	r3, .L75+8
 1148 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 025c 1A46     		mov	r2, r3
 1150 025e 184B     		ldr	r3, .L75+12
 1151 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0262 591E     		subs	r1, r3, #1
 1153 0264 1748     		ldr	r0, .L75+16
 1154 0266 1346     		mov	r3, r2
 1155 0268 DB00     		lsls	r3, r3, #3
 1156 026a 1344     		add	r3, r3, r2
 1157 026c 5B00     		lsls	r3, r3, #1
 1158 026e 1344     		add	r3, r3, r2
 1159 0270 0B44     		add	r3, r3, r1
 1160 0272 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1161 0276 082B     		cmp	r3, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 26


 1162 0278 10D0     		beq	.L58
 1163              		.loc 1 250 0 is_stmt 0 discriminator 1
 1164 027a 104B     		ldr	r3, .L75+8
 1165 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 027e 1A46     		mov	r2, r3
 1167 0280 0F4B     		ldr	r3, .L75+12
 1168 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1169 0284 591E     		subs	r1, r3, #1
 1170 0286 0F48     		ldr	r0, .L75+16
 1171 0288 1346     		mov	r3, r2
 1172 028a DB00     		lsls	r3, r3, #3
 1173 028c 1344     		add	r3, r3, r2
 1174 028e 5B00     		lsls	r3, r3, #1
 1175 0290 1344     		add	r3, r3, r2
 1176 0292 0B44     		add	r3, r3, r1
 1177 0294 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1178 0298 092B     		cmp	r3, #9
 1179 029a 15D1     		bne	.L59
 1180              	.L58:
 251:main.c        ****                     currentOrientation = Left;
 1181              		.loc 1 251 0 is_stmt 1
 1182 029c 054B     		ldr	r3, .L75
 1183 029e 0222     		movs	r2, #2
 1184 02a0 1A70     		strb	r2, [r3]
 252:main.c        ****                     directionState = Forward;
 1185              		.loc 1 252 0
 1186 02a2 0023     		movs	r3, #0
 1187 02a4 7B60     		str	r3, [r7, #4]
 253:main.c        ****                     currentCol--; // update position
 1188              		.loc 1 253 0
 1189 02a6 064B     		ldr	r3, .L75+12
 1190 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 02aa 013B     		subs	r3, r3, #1
 1192 02ac DAB2     		uxtb	r2, r3
 1193 02ae 044B     		ldr	r3, .L75+12
 1194 02b0 1A70     		strb	r2, [r3]
 1195 02b2 5AE0     		b	.L60
 1196              	.L76:
 1197              		.align	2
 1198              	.L75:
 1199 02b4 00000000 		.word	currentOrientation
 1200 02b8 00000000 		.word	previousOrientation
 1201 02bc 00000000 		.word	currentRow
 1202 02c0 00000000 		.word	currentCol
 1203 02c4 00000000 		.word	map
 1204              	.L59:
 254:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1205              		.loc 1 254 0
 1206 02c8 6F4B     		ldr	r3, .L77
 1207 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 02cc 5A1E     		subs	r2, r3, #1
 1209 02ce 6F4B     		ldr	r3, .L77+4
 1210 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 02d2 1846     		mov	r0, r3
 1212 02d4 6E49     		ldr	r1, .L77+8
 1213 02d6 1346     		mov	r3, r2
 1214 02d8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 27


 1215 02da 1344     		add	r3, r3, r2
 1216 02dc 5B00     		lsls	r3, r3, #1
 1217 02de 1344     		add	r3, r3, r2
 1218 02e0 0344     		add	r3, r3, r0
 1219 02e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1220 02e6 082B     		cmp	r3, #8
 1221 02e8 10D0     		beq	.L61
 1222              		.loc 1 254 0 is_stmt 0 discriminator 1
 1223 02ea 674B     		ldr	r3, .L77
 1224 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 02ee 5A1E     		subs	r2, r3, #1
 1226 02f0 664B     		ldr	r3, .L77+4
 1227 02f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1228 02f4 1846     		mov	r0, r3
 1229 02f6 6649     		ldr	r1, .L77+8
 1230 02f8 1346     		mov	r3, r2
 1231 02fa DB00     		lsls	r3, r3, #3
 1232 02fc 1344     		add	r3, r3, r2
 1233 02fe 5B00     		lsls	r3, r3, #1
 1234 0300 1344     		add	r3, r3, r2
 1235 0302 0344     		add	r3, r3, r0
 1236 0304 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1237 0308 092B     		cmp	r3, #9
 1238 030a 05D1     		bne	.L62
 1239              	.L61:
 255:main.c        ****                     currentOrientation = Up;
 1240              		.loc 1 255 0 is_stmt 1
 1241 030c 614B     		ldr	r3, .L77+12
 1242 030e 0022     		movs	r2, #0
 1243 0310 1A70     		strb	r2, [r3]
 256:main.c        ****                     directionState = waitForRightTurn;
 1244              		.loc 1 256 0
 1245 0312 0823     		movs	r3, #8
 1246 0314 7B60     		str	r3, [r7, #4]
 1247 0316 28E0     		b	.L60
 1248              	.L62:
 257:main.c        ****                     //currentRow++; // update position
 258:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1249              		.loc 1 258 0
 1250 0318 5B4B     		ldr	r3, .L77
 1251 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 031c 5A1C     		adds	r2, r3, #1
 1253 031e 5B4B     		ldr	r3, .L77+4
 1254 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1255 0322 1846     		mov	r0, r3
 1256 0324 5A49     		ldr	r1, .L77+8
 1257 0326 1346     		mov	r3, r2
 1258 0328 DB00     		lsls	r3, r3, #3
 1259 032a 1344     		add	r3, r3, r2
 1260 032c 5B00     		lsls	r3, r3, #1
 1261 032e 1344     		add	r3, r3, r2
 1262 0330 0344     		add	r3, r3, r0
 1263 0332 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1264 0336 082B     		cmp	r3, #8
 1265 0338 11D0     		beq	.L63
 1266              		.loc 1 258 0 is_stmt 0 discriminator 1
 1267 033a 534B     		ldr	r3, .L77
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 28


 1268 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 033e 5A1C     		adds	r2, r3, #1
 1270 0340 524B     		ldr	r3, .L77+4
 1271 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272 0344 1846     		mov	r0, r3
 1273 0346 5249     		ldr	r1, .L77+8
 1274 0348 1346     		mov	r3, r2
 1275 034a DB00     		lsls	r3, r3, #3
 1276 034c 1344     		add	r3, r3, r2
 1277 034e 5B00     		lsls	r3, r3, #1
 1278 0350 1344     		add	r3, r3, r2
 1279 0352 0344     		add	r3, r3, r0
 1280 0354 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1281 0358 092B     		cmp	r3, #9
 1282 035a 40F08C80 		bne	.L73
 1283              	.L63:
 259:main.c        ****                     currentOrientation = Down;
 1284              		.loc 1 259 0 is_stmt 1
 1285 035e 4D4B     		ldr	r3, .L77+12
 1286 0360 0122     		movs	r2, #1
 1287 0362 1A70     		strb	r2, [r3]
 260:main.c        ****                     directionState = waitForLeftTurn;
 1288              		.loc 1 260 0
 1289 0364 0923     		movs	r3, #9
 1290 0366 7B60     		str	r3, [r7, #4]
 261:main.c        ****                     //currentCol--; // update position
 262:main.c        ****                 }
 263:main.c        ****                 break;
 1291              		.loc 1 263 0
 1292 0368 85E0     		b	.L73
 1293              	.L60:
 1294 036a 84E0     		b	.L73
 1295              	.L44:
 264:main.c        ****             case Right:
 265:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 1296              		.loc 1 265 0
 1297 036c 464B     		ldr	r3, .L77
 1298 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 0370 1A46     		mov	r2, r3
 1300 0372 464B     		ldr	r3, .L77+4
 1301 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1302 0376 591C     		adds	r1, r3, #1
 1303 0378 4548     		ldr	r0, .L77+8
 1304 037a 1346     		mov	r3, r2
 1305 037c DB00     		lsls	r3, r3, #3
 1306 037e 1344     		add	r3, r3, r2
 1307 0380 5B00     		lsls	r3, r3, #1
 1308 0382 1344     		add	r3, r3, r2
 1309 0384 0B44     		add	r3, r3, r1
 1310 0386 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1311 038a 082B     		cmp	r3, #8
 1312 038c 10D0     		beq	.L64
 1313              		.loc 1 265 0 is_stmt 0 discriminator 1
 1314 038e 3E4B     		ldr	r3, .L77
 1315 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 0392 1A46     		mov	r2, r3
 1317 0394 3D4B     		ldr	r3, .L77+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 29


 1318 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1319 0398 591C     		adds	r1, r3, #1
 1320 039a 3D48     		ldr	r0, .L77+8
 1321 039c 1346     		mov	r3, r2
 1322 039e DB00     		lsls	r3, r3, #3
 1323 03a0 1344     		add	r3, r3, r2
 1324 03a2 5B00     		lsls	r3, r3, #1
 1325 03a4 1344     		add	r3, r3, r2
 1326 03a6 0B44     		add	r3, r3, r1
 1327 03a8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1328 03ac 092B     		cmp	r3, #9
 1329 03ae 0BD1     		bne	.L65
 1330              	.L64:
 266:main.c        ****                     currentOrientation = Right;
 1331              		.loc 1 266 0 is_stmt 1
 1332 03b0 384B     		ldr	r3, .L77+12
 1333 03b2 0322     		movs	r2, #3
 1334 03b4 1A70     		strb	r2, [r3]
 267:main.c        ****                     directionState = Forward;
 1335              		.loc 1 267 0
 1336 03b6 0023     		movs	r3, #0
 1337 03b8 7B60     		str	r3, [r7, #4]
 268:main.c        ****                     currentCol++; // update position
 1338              		.loc 1 268 0
 1339 03ba 344B     		ldr	r3, .L77+4
 1340 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1341 03be 0133     		adds	r3, r3, #1
 1342 03c0 DAB2     		uxtb	r2, r3
 1343 03c2 324B     		ldr	r3, .L77+4
 1344 03c4 1A70     		strb	r2, [r3]
 1345 03c6 4FE0     		b	.L66
 1346              	.L65:
 269:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1347              		.loc 1 269 0
 1348 03c8 2F4B     		ldr	r3, .L77
 1349 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 03cc 5A1E     		subs	r2, r3, #1
 1351 03ce 2F4B     		ldr	r3, .L77+4
 1352 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 03d2 1846     		mov	r0, r3
 1354 03d4 2E49     		ldr	r1, .L77+8
 1355 03d6 1346     		mov	r3, r2
 1356 03d8 DB00     		lsls	r3, r3, #3
 1357 03da 1344     		add	r3, r3, r2
 1358 03dc 5B00     		lsls	r3, r3, #1
 1359 03de 1344     		add	r3, r3, r2
 1360 03e0 0344     		add	r3, r3, r0
 1361 03e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1362 03e6 082B     		cmp	r3, #8
 1363 03e8 10D0     		beq	.L67
 1364              		.loc 1 269 0 is_stmt 0 discriminator 1
 1365 03ea 274B     		ldr	r3, .L77
 1366 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 03ee 5A1E     		subs	r2, r3, #1
 1368 03f0 264B     		ldr	r3, .L77+4
 1369 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 03f4 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 30


 1371 03f6 2649     		ldr	r1, .L77+8
 1372 03f8 1346     		mov	r3, r2
 1373 03fa DB00     		lsls	r3, r3, #3
 1374 03fc 1344     		add	r3, r3, r2
 1375 03fe 5B00     		lsls	r3, r3, #1
 1376 0400 1344     		add	r3, r3, r2
 1377 0402 0344     		add	r3, r3, r0
 1378 0404 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1379 0408 092B     		cmp	r3, #9
 1380 040a 05D1     		bne	.L68
 1381              	.L67:
 270:main.c        ****                     currentOrientation = Up;
 1382              		.loc 1 270 0 is_stmt 1
 1383 040c 214B     		ldr	r3, .L77+12
 1384 040e 0022     		movs	r2, #0
 1385 0410 1A70     		strb	r2, [r3]
 271:main.c        ****                     directionState = waitForLeftTurn;
 1386              		.loc 1 271 0
 1387 0412 0923     		movs	r3, #9
 1388 0414 7B60     		str	r3, [r7, #4]
 1389 0416 27E0     		b	.L66
 1390              	.L68:
 272:main.c        ****                     //currentCol++; // update position
 273:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1391              		.loc 1 273 0
 1392 0418 1B4B     		ldr	r3, .L77
 1393 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1394 041c 5A1C     		adds	r2, r3, #1
 1395 041e 1B4B     		ldr	r3, .L77+4
 1396 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 0422 1846     		mov	r0, r3
 1398 0424 1A49     		ldr	r1, .L77+8
 1399 0426 1346     		mov	r3, r2
 1400 0428 DB00     		lsls	r3, r3, #3
 1401 042a 1344     		add	r3, r3, r2
 1402 042c 5B00     		lsls	r3, r3, #1
 1403 042e 1344     		add	r3, r3, r2
 1404 0430 0344     		add	r3, r3, r0
 1405 0432 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1406 0436 082B     		cmp	r3, #8
 1407 0438 10D0     		beq	.L69
 1408              		.loc 1 273 0 is_stmt 0 discriminator 1
 1409 043a 134B     		ldr	r3, .L77
 1410 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 043e 5A1C     		adds	r2, r3, #1
 1412 0440 124B     		ldr	r3, .L77+4
 1413 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1414 0444 1846     		mov	r0, r3
 1415 0446 1249     		ldr	r1, .L77+8
 1416 0448 1346     		mov	r3, r2
 1417 044a DB00     		lsls	r3, r3, #3
 1418 044c 1344     		add	r3, r3, r2
 1419 044e 5B00     		lsls	r3, r3, #1
 1420 0450 1344     		add	r3, r3, r2
 1421 0452 0344     		add	r3, r3, r0
 1422 0454 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1423 0458 092B     		cmp	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 31


 1424 045a 0ED1     		bne	.L74
 1425              	.L69:
 274:main.c        ****                     currentOrientation = Down;
 1426              		.loc 1 274 0 is_stmt 1
 1427 045c 0D4B     		ldr	r3, .L77+12
 1428 045e 0122     		movs	r2, #1
 1429 0460 1A70     		strb	r2, [r3]
 275:main.c        ****                     directionState = waitForRightTurn;
 1430              		.loc 1 275 0
 1431 0462 0823     		movs	r3, #8
 1432 0464 7B60     		str	r3, [r7, #4]
 276:main.c        ****                     //currentCol--; // update position
 277:main.c        ****                 }
 278:main.c        ****                 break;
 1433              		.loc 1 278 0
 1434 0466 08E0     		b	.L74
 1435              	.L66:
 1436 0468 07E0     		b	.L74
 1437              	.L70:
 279:main.c        ****             default:
 280:main.c        ****                 break;
 1438              		.loc 1 280 0
 1439 046a 00BF     		nop
 1440 046c 06E0     		b	.L51
 1441              	.L71:
 233:main.c        ****             case Down:
 1442              		.loc 1 233 0
 1443 046e 00BF     		nop
 1444 0470 04E0     		b	.L51
 1445              	.L72:
 248:main.c        ****             case Left:
 1446              		.loc 1 248 0
 1447 0472 00BF     		nop
 1448 0474 02E0     		b	.L51
 1449              	.L73:
 263:main.c        ****             case Right:
 1450              		.loc 1 263 0
 1451 0476 00BF     		nop
 1452 0478 00E0     		b	.L51
 1453              	.L74:
 278:main.c        ****             default:
 1454              		.loc 1 278 0
 1455 047a 00BF     		nop
 1456              	.L51:
 281:main.c        ****         }
 282:main.c        ****     
 283:main.c        ****     return directionState;
 1457              		.loc 1 283 0
 1458 047c 7B68     		ldr	r3, [r7, #4]
 1459              	.L38:
 284:main.c        **** }
 1460              		.loc 1 284 0
 1461 047e 1846     		mov	r0, r3
 1462 0480 0C37     		adds	r7, r7, #12
 1463              		.cfi_def_cfa_offset 4
 1464 0482 BD46     		mov	sp, r7
 1465              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 32


 1466              		@ sp needed
 1467 0484 80BC     		pop	{r7}
 1468              		.cfi_restore 7
 1469              		.cfi_def_cfa_offset 0
 1470 0486 7047     		bx	lr
 1471              	.L78:
 1472              		.align	2
 1473              	.L77:
 1474 0488 00000000 		.word	currentRow
 1475 048c 00000000 		.word	currentCol
 1476 0490 00000000 		.word	map
 1477 0494 00000000 		.word	currentOrientation
 1478              		.cfi_endproc
 1479              	.LFE73:
 1480              		.size	GetNextStep, .-GetNextStep
 1481              		.global	stoppedAfterTurn
 1482              		.bss
 1483              		.type	stoppedAfterTurn, %object
 1484              		.size	stoppedAfterTurn, 1
 1485              	stoppedAfterTurn:
 1486 0030 00       		.space	1
 1487              		.global	__aeabi_fcmpge
 1488              		.section	.text.CheckSensorDirection,"ax",%progbits
 1489              		.align	2
 1490              		.global	CheckSensorDirection
 1491              		.thumb
 1492              		.thumb_func
 1493              		.type	CheckSensorDirection, %function
 1494              	CheckSensorDirection:
 1495              	.LFB74:
 285:main.c        **** 
 286:main.c        **** uint8 stoppedAfterTurn = 0;
 287:main.c        **** 
 288:main.c        **** enum DirectionState CheckSensorDirection() {
 1496              		.loc 1 288 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 8
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 80B5     		push	{r7, lr}
 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 7, -8
 1503              		.cfi_offset 14, -4
 1504 0002 82B0     		sub	sp, sp, #8
 1505              		.cfi_def_cfa_offset 16
 1506 0004 00AF     		add	r7, sp, #0
 1507              		.cfi_def_cfa_register 7
 289:main.c        ****     float blocksize;
 290:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1508              		.loc 1 290 0
 1509 0006 8D4B     		ldr	r3, .L111
 1510 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 000a 002B     		cmp	r3, #0
 1512 000c 03D0     		beq	.L80
 1513              		.loc 1 290 0 is_stmt 0 discriminator 1
 1514 000e 8B4B     		ldr	r3, .L111
 1515 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 33


 1517 0014 03D1     		bne	.L81
 1518              	.L80:
 291:main.c        ****         blocksize = yBlocksize;
 1519              		.loc 1 291 0 is_stmt 1
 1520 0016 8A4B     		ldr	r3, .L111+4
 1521 0018 1B68     		ldr	r3, [r3]	@ float
 1522 001a 7B60     		str	r3, [r7, #4]	@ float
 1523 001c 02E0     		b	.L82
 1524              	.L81:
 292:main.c        ****     } else {
 293:main.c        ****         blocksize = xBlocksize;
 1525              		.loc 1 293 0
 1526 001e 894B     		ldr	r3, .L111+8
 1527 0020 1B68     		ldr	r3, [r3]	@ float
 1528 0022 7B60     		str	r3, [r7, #4]	@ float
 1529              	.L82:
 294:main.c        ****     }
 295:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1530              		.loc 1 295 0
 1531 0024 0523     		movs	r3, #5
 1532 0026 3B60     		str	r3, [r7]
 296:main.c        ****     
 297:main.c        ****     // GET NEXT STEP * ========================================
 298:main.c        ****     // intersection check
 299:main.c        ****     if((previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1533              		.loc 1 299 0
 1534 0028 874B     		ldr	r3, .L111+12
 1535 002a 1B68     		ldr	r3, [r3]
 1536 002c 002B     		cmp	r3, #0
 1537 002e 07D0     		beq	.L83
 1538              		.loc 1 299 0 is_stmt 0 discriminator 2
 1539 0030 854B     		ldr	r3, .L111+12
 1540 0032 1B68     		ldr	r3, [r3]
 1541 0034 032B     		cmp	r3, #3
 1542 0036 03D0     		beq	.L83
 1543              		.loc 1 299 0 discriminator 4
 1544 0038 834B     		ldr	r3, .L111+12
 1545 003a 1B68     		ldr	r3, [r3]
 1546 003c 042B     		cmp	r3, #4
 1547 003e 13D1     		bne	.L84
 1548              	.L83:
 1549              		.loc 1 299 0 discriminator 5
 1550 0040 824B     		ldr	r3, .L111+16
 1551 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 0044 002B     		cmp	r3, #0
 1553 0046 0FD1     		bne	.L84
 1554              		.loc 1 299 0 discriminator 6
 1555 0048 814B     		ldr	r3, .L111+20
 1556 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 004c 002B     		cmp	r3, #0
 1558 004e 0BD1     		bne	.L84
 300:main.c        ****         
 301:main.c        ****     //     // switch (currentOrientation) {
 302:main.c        ****     //     //     case Up:
 303:main.c        ****     //     //         currentRow++;
 304:main.c        ****     //     //         break;
 305:main.c        ****     //     //     case Down:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 34


 306:main.c        ****     //     //         currentRow--;
 307:main.c        ****     //     //         break;
 308:main.c        ****     //     //     case Right:
 309:main.c        ****     //     //         currentCol++;
 310:main.c        ****     //     //         break;
 311:main.c        ****     //     //     case Left:
 312:main.c        ****     //     //         currentCol--;
 313:main.c        ****     //     //         break;
 314:main.c        ****     //     // }
 315:main.c        ****         
 316:main.c        ****     directionState = GetNextStep(); // get next step at each block
 1559              		.loc 1 316 0 is_stmt 1
 1560 0050 FFF7FEFF 		bl	GetNextStep
 1561 0054 3860     		str	r0, [r7]
 317:main.c        ****     totalDistance = 0; // reset distance
 1562              		.loc 1 317 0
 1563 0056 7F4B     		ldr	r3, .L111+24
 1564 0058 4FF00002 		mov	r2, #0
 1565 005c 1A60     		str	r2, [r3]	@ float
 318:main.c        ****     previousDirection = directionState;
 1566              		.loc 1 318 0
 1567 005e 7A4A     		ldr	r2, .L111+12
 1568 0060 3B68     		ldr	r3, [r7]
 1569 0062 1360     		str	r3, [r2]
 319:main.c        ****     return directionState;
 1570              		.loc 1 319 0
 1571 0064 3B68     		ldr	r3, [r7]
 1572 0066 32E1     		b	.L85
 1573              	.L84:
 320:main.c        ****     }
 321:main.c        ****     if (stoppedAfterTurn == 1) {
 1574              		.loc 1 321 0
 1575 0068 7B4B     		ldr	r3, .L111+28
 1576 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 006c 012B     		cmp	r3, #1
 1578 006e 19D1     		bne	.L86
 322:main.c        ****         if (stopBuffer <= 50) {
 1579              		.loc 1 322 0
 1580 0070 7A4B     		ldr	r3, .L111+32
 1581 0072 1B68     		ldr	r3, [r3]
 1582 0074 322B     		cmp	r3, #50
 1583 0076 06D8     		bhi	.L87
 323:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1584              		.loc 1 323 0
 1585 0078 0523     		movs	r3, #5
 1586 007a 3B60     		str	r3, [r7]
 324:main.c        ****             previousDirection = directionState;
 1587              		.loc 1 324 0
 1588 007c 724A     		ldr	r2, .L111+12
 1589 007e 3B68     		ldr	r3, [r7]
 1590 0080 1360     		str	r3, [r2]
 325:main.c        ****             return directionState;
 1591              		.loc 1 325 0
 1592 0082 3B68     		ldr	r3, [r7]
 1593 0084 23E1     		b	.L85
 1594              	.L87:
 326:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 35


 327:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1595              		.loc 1 327 0
 1596 0086 FFF7FEFF 		bl	GetNextStep
 1597 008a 3860     		str	r0, [r7]
 328:main.c        ****         totalDistance = 0; // reset distance
 1598              		.loc 1 328 0
 1599 008c 714B     		ldr	r3, .L111+24
 1600 008e 4FF00002 		mov	r2, #0
 1601 0092 1A60     		str	r2, [r3]	@ float
 329:main.c        ****         previousDirection = directionState;
 1602              		.loc 1 329 0
 1603 0094 6C4A     		ldr	r2, .L111+12
 1604 0096 3B68     		ldr	r3, [r7]
 1605 0098 1360     		str	r3, [r2]
 330:main.c        ****         stoppedAfterTurn = 0;
 1606              		.loc 1 330 0
 1607 009a 6F4B     		ldr	r3, .L111+28
 1608 009c 0022     		movs	r2, #0
 1609 009e 1A70     		strb	r2, [r3]
 331:main.c        ****         return directionState;
 1610              		.loc 1 331 0
 1611 00a0 3B68     		ldr	r3, [r7]
 1612 00a2 14E1     		b	.L85
 1613              	.L86:
 332:main.c        ****     }
 333:main.c        ****     if (totalDistance >= blocksize) {
 1614              		.loc 1 333 0
 1615 00a4 6B4B     		ldr	r3, .L111+24
 1616 00a6 1B68     		ldr	r3, [r3]	@ float
 1617 00a8 7968     		ldr	r1, [r7, #4]	@ float
 1618 00aa 1846     		mov	r0, r3
 1619 00ac FFF7FEFF 		bl	__aeabi_fcmpge
 1620 00b0 0346     		mov	r3, r0
 1621 00b2 002B     		cmp	r3, #0
 1622 00b4 0BD0     		beq	.L110
 334:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1623              		.loc 1 334 0
 1624 00b6 FFF7FEFF 		bl	GetNextStep
 1625 00ba 3860     		str	r0, [r7]
 335:main.c        ****         totalDistance = 0; // reset distance
 1626              		.loc 1 335 0
 1627 00bc 654B     		ldr	r3, .L111+24
 1628 00be 4FF00002 		mov	r2, #0
 1629 00c2 1A60     		str	r2, [r3]	@ float
 336:main.c        ****         previousDirection = directionState;
 1630              		.loc 1 336 0
 1631 00c4 604A     		ldr	r2, .L111+12
 1632 00c6 3B68     		ldr	r3, [r7]
 1633 00c8 1360     		str	r3, [r2]
 337:main.c        ****         return directionState;
 1634              		.loc 1 337 0
 1635 00ca 3B68     		ldr	r3, [r7]
 1636 00cc FFE0     		b	.L85
 1637              	.L110:
 338:main.c        ****     }
 339:main.c        ****     
 340:main.c        ****     // STOP BUFFER * ========================================
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 36


 341:main.c        ****     if (previousDirection == Stop) {
 1638              		.loc 1 341 0
 1639 00ce 5E4B     		ldr	r3, .L111+12
 1640 00d0 1B68     		ldr	r3, [r3]
 1641 00d2 052B     		cmp	r3, #5
 1642 00d4 0AD1     		bne	.L90
 342:main.c        ****         if (stopBuffer <= 50) {
 1643              		.loc 1 342 0
 1644 00d6 614B     		ldr	r3, .L111+32
 1645 00d8 1B68     		ldr	r3, [r3]
 1646 00da 322B     		cmp	r3, #50
 1647 00dc 04D8     		bhi	.L91
 343:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1648              		.loc 1 343 0
 1649 00de 0523     		movs	r3, #5
 1650 00e0 3B60     		str	r3, [r7]
 344:main.c        ****             previousDirection = directionState;
 1651              		.loc 1 344 0
 1652 00e2 594A     		ldr	r2, .L111+12
 1653 00e4 3B68     		ldr	r3, [r7]
 1654 00e6 1360     		str	r3, [r2]
 1655              	.L91:
 345:main.c        ****         } else {
 346:main.c        ****             //directionState = ForwardAfterTurn;
 347:main.c        ****         }
 348:main.c        ****         return directionState;
 1656              		.loc 1 348 0
 1657 00e8 3B68     		ldr	r3, [r7]
 1658 00ea F0E0     		b	.L85
 1659              	.L90:
 349:main.c        ****     }
 350:main.c        **** 
 351:main.c        ****     // TURNING * ========================================    
 352:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1660              		.loc 1 352 0
 1661 00ec 564B     		ldr	r3, .L111+12
 1662 00ee 1B68     		ldr	r3, [r3]
 1663 00f0 0A2B     		cmp	r3, #10
 1664 00f2 0ED1     		bne	.L92
 353:main.c        ****         if (s3 || s4) {
 1665              		.loc 1 353 0
 1666 00f4 554B     		ldr	r3, .L111+16
 1667 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1668 00f8 002B     		cmp	r3, #0
 1669 00fa 03D1     		bne	.L93
 1670              		.loc 1 353 0 is_stmt 0 discriminator 1
 1671 00fc 544B     		ldr	r3, .L111+20
 1672 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 0100 002B     		cmp	r3, #0
 1674 0102 06D0     		beq	.L92
 1675              	.L93:
 354:main.c        ****             //usbPutString("Forward\n");
 355:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 1676              		.loc 1 355 0 is_stmt 1
 1677 0104 0023     		movs	r3, #0
 1678 0106 3B60     		str	r3, [r7]
 356:main.c        ****             previousDirection = directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 37


 1679              		.loc 1 356 0
 1680 0108 4F4A     		ldr	r2, .L111+12
 1681 010a 3B68     		ldr	r3, [r7]
 1682 010c 1360     		str	r3, [r2]
 357:main.c        ****             return directionState;
 1683              		.loc 1 357 0
 1684 010e 3B68     		ldr	r3, [r7]
 1685 0110 DDE0     		b	.L85
 1686              	.L92:
 358:main.c        ****         }
 359:main.c        ****     }
 360:main.c        **** 
 361:main.c        ****     if(previousDirection == waitForRightTurn) {
 1687              		.loc 1 361 0
 1688 0112 4D4B     		ldr	r3, .L111+12
 1689 0114 1B68     		ldr	r3, [r3]
 1690 0116 082B     		cmp	r3, #8
 1691 0118 11D1     		bne	.L94
 362:main.c        ****         if(!s4) {
 1692              		.loc 1 362 0
 1693 011a 4D4B     		ldr	r3, .L111+20
 1694 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1695 011e 002B     		cmp	r3, #0
 1696 0120 06D1     		bne	.L95
 363:main.c        ****             //usbPutString("Turn Right\n");
 364:main.c        ****             directionState = TurnRight;
 1697              		.loc 1 364 0
 1698 0122 0123     		movs	r3, #1
 1699 0124 3B60     		str	r3, [r7]
 365:main.c        ****             previousDirection = directionState;
 1700              		.loc 1 365 0
 1701 0126 484A     		ldr	r2, .L111+12
 1702 0128 3B68     		ldr	r3, [r7]
 1703 012a 1360     		str	r3, [r2]
 366:main.c        ****             return directionState;
 1704              		.loc 1 366 0
 1705 012c 3B68     		ldr	r3, [r7]
 1706 012e CEE0     		b	.L85
 1707              	.L95:
 367:main.c        ****         } else {
 368:main.c        ****             //usbPutString("Wait for Right Turn\n");
 369:main.c        ****             directionState = waitForRightTurn;
 1708              		.loc 1 369 0
 1709 0130 0823     		movs	r3, #8
 1710 0132 3B60     		str	r3, [r7]
 370:main.c        ****             previousDirection = directionState;
 1711              		.loc 1 370 0
 1712 0134 444A     		ldr	r2, .L111+12
 1713 0136 3B68     		ldr	r3, [r7]
 1714 0138 1360     		str	r3, [r2]
 371:main.c        ****             return directionState;
 1715              		.loc 1 371 0
 1716 013a 3B68     		ldr	r3, [r7]
 1717 013c C7E0     		b	.L85
 1718              	.L94:
 372:main.c        ****         }
 373:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 38


 374:main.c        **** 
 375:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1719              		.loc 1 375 0
 1720 013e 424B     		ldr	r3, .L111+12
 1721 0140 1B68     		ldr	r3, [r3]
 1722 0142 092B     		cmp	r3, #9
 1723 0144 11D1     		bne	.L96
 376:main.c        ****         if(!s3) {
 1724              		.loc 1 376 0
 1725 0146 414B     		ldr	r3, .L111+16
 1726 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1727 014a 002B     		cmp	r3, #0
 1728 014c 06D1     		bne	.L97
 377:main.c        ****             //usbPutString("Turn Left\n");
 378:main.c        ****             directionState = TurnLeft;
 1729              		.loc 1 378 0
 1730 014e 0223     		movs	r3, #2
 1731 0150 3B60     		str	r3, [r7]
 379:main.c        ****             previousDirection = directionState;
 1732              		.loc 1 379 0
 1733 0152 3D4A     		ldr	r2, .L111+12
 1734 0154 3B68     		ldr	r3, [r7]
 1735 0156 1360     		str	r3, [r2]
 380:main.c        ****             return directionState;
 1736              		.loc 1 380 0
 1737 0158 3B68     		ldr	r3, [r7]
 1738 015a B8E0     		b	.L85
 1739              	.L97:
 381:main.c        ****         } else {
 382:main.c        ****             //usbPutString("Wait for Left Turn\n");
 383:main.c        ****             directionState = waitForLeftTurn;
 1740              		.loc 1 383 0
 1741 015c 0923     		movs	r3, #9
 1742 015e 3B60     		str	r3, [r7]
 384:main.c        ****             previousDirection = directionState;
 1743              		.loc 1 384 0
 1744 0160 394A     		ldr	r2, .L111+12
 1745 0162 3B68     		ldr	r3, [r7]
 1746 0164 1360     		str	r3, [r2]
 385:main.c        ****             return directionState;
 1747              		.loc 1 385 0
 1748 0166 3B68     		ldr	r3, [r7]
 1749 0168 B1E0     		b	.L85
 1750              	.L96:
 386:main.c        ****         }
 387:main.c        ****     }
 388:main.c        **** 
 389:main.c        ****     if(previousDirection == TurnRight) {
 1751              		.loc 1 389 0
 1752 016a 374B     		ldr	r3, .L111+12
 1753 016c 1B68     		ldr	r3, [r3]
 1754 016e 012B     		cmp	r3, #1
 1755 0170 24D1     		bne	.L98
 390:main.c        ****         if(s5 && s6) {
 1756              		.loc 1 390 0
 1757 0172 3B4B     		ldr	r3, .L111+36
 1758 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 39


 1759 0176 002B     		cmp	r3, #0
 1760 0178 0AD0     		beq	.L99
 1761              		.loc 1 390 0 is_stmt 0 discriminator 1
 1762 017a 3A4B     		ldr	r3, .L111+40
 1763 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1764 017e 002B     		cmp	r3, #0
 1765 0180 06D0     		beq	.L99
 391:main.c        ****             //usbPutString("Turn Right\n");
 392:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1766              		.loc 1 392 0 is_stmt 1
 1767 0182 0123     		movs	r3, #1
 1768 0184 3B60     		str	r3, [r7]
 393:main.c        ****             previousDirection = directionState;
 1769              		.loc 1 393 0
 1770 0186 304A     		ldr	r2, .L111+12
 1771 0188 3B68     		ldr	r3, [r7]
 1772 018a 1360     		str	r3, [r2]
 394:main.c        ****             return directionState;
 1773              		.loc 1 394 0
 1774 018c 3B68     		ldr	r3, [r7]
 1775 018e 9EE0     		b	.L85
 1776              	.L99:
 395:main.c        ****         } 
 396:main.c        ****         else if (!s5 || !s6) {
 1777              		.loc 1 396 0
 1778 0190 334B     		ldr	r3, .L111+36
 1779 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 0194 002B     		cmp	r3, #0
 1781 0196 03D0     		beq	.L100
 1782              		.loc 1 396 0 is_stmt 0 discriminator 1
 1783 0198 324B     		ldr	r3, .L111+40
 1784 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1785 019c 002B     		cmp	r3, #0
 1786 019e 0DD1     		bne	.L98
 1787              	.L100:
 397:main.c        ****             //usbPutString("Stop after Right Turn");
 398:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1788              		.loc 1 398 0 is_stmt 1
 1789 01a0 0523     		movs	r3, #5
 1790 01a2 3B60     		str	r3, [r7]
 399:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1791              		.loc 1 399 0
 1792 01a4 2B4B     		ldr	r3, .L111+24
 1793 01a6 4FF00002 		mov	r2, #0
 1794 01aa 1A60     		str	r2, [r3]	@ float
 400:main.c        ****             previousDirection = directionState;
 1795              		.loc 1 400 0
 1796 01ac 264A     		ldr	r2, .L111+12
 1797 01ae 3B68     		ldr	r3, [r7]
 1798 01b0 1360     		str	r3, [r2]
 401:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1799              		.loc 1 401 0
 1800 01b2 294B     		ldr	r3, .L111+28
 1801 01b4 0122     		movs	r2, #1
 1802 01b6 1A70     		strb	r2, [r3]
 402:main.c        ****             return directionState;
 1803              		.loc 1 402 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 40


 1804 01b8 3B68     		ldr	r3, [r7]
 1805 01ba 88E0     		b	.L85
 1806              	.L98:
 403:main.c        ****         }
 404:main.c        ****     }    
 405:main.c        **** 
 406:main.c        ****     if(previousDirection == TurnLeft) {
 1807              		.loc 1 406 0
 1808 01bc 224B     		ldr	r3, .L111+12
 1809 01be 1B68     		ldr	r3, [r3]
 1810 01c0 022B     		cmp	r3, #2
 1811 01c2 24D1     		bne	.L101
 407:main.c        ****         if(s5 && s6) {
 1812              		.loc 1 407 0
 1813 01c4 264B     		ldr	r3, .L111+36
 1814 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1815 01c8 002B     		cmp	r3, #0
 1816 01ca 0AD0     		beq	.L102
 1817              		.loc 1 407 0 is_stmt 0 discriminator 1
 1818 01cc 254B     		ldr	r3, .L111+40
 1819 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1820 01d0 002B     		cmp	r3, #0
 1821 01d2 06D0     		beq	.L102
 408:main.c        ****             //usbPutString("Turn Left\n");
 409:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1822              		.loc 1 409 0 is_stmt 1
 1823 01d4 0223     		movs	r3, #2
 1824 01d6 3B60     		str	r3, [r7]
 410:main.c        ****             previousDirection = directionState;
 1825              		.loc 1 410 0
 1826 01d8 1B4A     		ldr	r2, .L111+12
 1827 01da 3B68     		ldr	r3, [r7]
 1828 01dc 1360     		str	r3, [r2]
 411:main.c        ****             return directionState;
 1829              		.loc 1 411 0
 1830 01de 3B68     		ldr	r3, [r7]
 1831 01e0 75E0     		b	.L85
 1832              	.L102:
 412:main.c        ****         } 
 413:main.c        ****         else if (!s5 || !s6) {
 1833              		.loc 1 413 0
 1834 01e2 1F4B     		ldr	r3, .L111+36
 1835 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 01e6 002B     		cmp	r3, #0
 1837 01e8 03D0     		beq	.L103
 1838              		.loc 1 413 0 is_stmt 0 discriminator 1
 1839 01ea 1E4B     		ldr	r3, .L111+40
 1840 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 01ee 002B     		cmp	r3, #0
 1842 01f0 0DD1     		bne	.L101
 1843              	.L103:
 414:main.c        ****            // usbPutString("Stop after Left Turn\n");
 415:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1844              		.loc 1 415 0 is_stmt 1
 1845 01f2 0523     		movs	r3, #5
 1846 01f4 3B60     		str	r3, [r7]
 416:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 41


 1847              		.loc 1 416 0
 1848 01f6 174B     		ldr	r3, .L111+24
 1849 01f8 4FF00002 		mov	r2, #0
 1850 01fc 1A60     		str	r2, [r3]	@ float
 417:main.c        ****             previousDirection = directionState;
 1851              		.loc 1 417 0
 1852 01fe 124A     		ldr	r2, .L111+12
 1853 0200 3B68     		ldr	r3, [r7]
 1854 0202 1360     		str	r3, [r2]
 418:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1855              		.loc 1 418 0
 1856 0204 144B     		ldr	r3, .L111+28
 1857 0206 0122     		movs	r2, #1
 1858 0208 1A70     		strb	r2, [r3]
 419:main.c        ****             return directionState;
 1859              		.loc 1 419 0
 1860 020a 3B68     		ldr	r3, [r7]
 1861 020c 5FE0     		b	.L85
 1862              	.L101:
 420:main.c        ****         }
 421:main.c        ****     }
 422:main.c        ****     
 423:main.c        ****     // COURSE CORRECTION * ========================================
 424:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1863              		.loc 1 424 0
 1864 020e 0E4B     		ldr	r3, .L111+12
 1865 0210 1B68     		ldr	r3, [r3]
 1866 0212 002B     		cmp	r3, #0
 1867 0214 07D0     		beq	.L104
 1868              		.loc 1 424 0 is_stmt 0 discriminator 1
 1869 0216 0C4B     		ldr	r3, .L111+12
 1870 0218 1B68     		ldr	r3, [r3]
 1871 021a 032B     		cmp	r3, #3
 1872 021c 03D0     		beq	.L104
 1873              		.loc 1 424 0 discriminator 2
 1874 021e 0A4B     		ldr	r3, .L111+12
 1875 0220 1B68     		ldr	r3, [r3]
 1876 0222 042B     		cmp	r3, #4
 1877 0224 2BD1     		bne	.L105
 1878              	.L104:
 425:main.c        ****         if(s6) {
 1879              		.loc 1 425 0 is_stmt 1
 1880 0226 0F4B     		ldr	r3, .L111+40
 1881 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1882 022a 002B     		cmp	r3, #0
 1883 022c 1CD0     		beq	.L106
 426:main.c        ****             //usbPutString("Adjust to the left\n");
 427:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1884              		.loc 1 427 0
 1885 022e 0323     		movs	r3, #3
 1886 0230 3B60     		str	r3, [r7]
 428:main.c        ****             previousDirection = directionState;
 1887              		.loc 1 428 0
 1888 0232 054A     		ldr	r2, .L111+12
 1889 0234 3B68     		ldr	r3, [r7]
 1890 0236 1360     		str	r3, [r2]
 429:main.c        ****             return directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 42


 1891              		.loc 1 429 0
 1892 0238 3B68     		ldr	r3, [r7]
 1893 023a 48E0     		b	.L85
 1894              	.L112:
 1895              		.align	2
 1896              	.L111:
 1897 023c 00000000 		.word	currentOrientation
 1898 0240 00000000 		.word	yBlocksize
 1899 0244 00000000 		.word	xBlocksize
 1900 0248 00000000 		.word	previousDirection
 1901 024c 00000000 		.word	s3
 1902 0250 00000000 		.word	s4
 1903 0254 00000000 		.word	totalDistance
 1904 0258 00000000 		.word	stoppedAfterTurn
 1905 025c 00000000 		.word	stopBuffer
 1906 0260 00000000 		.word	s5
 1907 0264 00000000 		.word	s6
 1908              	.L106:
 430:main.c        ****         }
 431:main.c        ****         if(s5) {
 1909              		.loc 1 431 0
 1910 0268 1B4B     		ldr	r3, .L113
 1911 026a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1912 026c 002B     		cmp	r3, #0
 1913 026e 06D0     		beq	.L105
 432:main.c        ****             //usbPutString("Adjust to the right\n");
 433:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1914              		.loc 1 433 0
 1915 0270 0423     		movs	r3, #4
 1916 0272 3B60     		str	r3, [r7]
 434:main.c        ****             previousDirection = directionState;
 1917              		.loc 1 434 0
 1918 0274 194A     		ldr	r2, .L113+4
 1919 0276 3B68     		ldr	r3, [r7]
 1920 0278 1360     		str	r3, [r2]
 435:main.c        ****             return directionState;
 1921              		.loc 1 435 0
 1922 027a 3B68     		ldr	r3, [r7]
 1923 027c 27E0     		b	.L85
 1924              	.L105:
 436:main.c        ****         }
 437:main.c        ****     }
 438:main.c        ****     
 439:main.c        ****     // FORWARD * ========================================
 440:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1925              		.loc 1 440 0
 1926 027e 184B     		ldr	r3, .L113+8
 1927 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1928 0282 002B     		cmp	r3, #0
 1929 0284 12D0     		beq	.L107
 1930              		.loc 1 440 0 is_stmt 0 discriminator 1
 1931 0286 174B     		ldr	r3, .L113+12
 1932 0288 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 028a 002B     		cmp	r3, #0
 1934 028c 0ED0     		beq	.L107
 1935              		.loc 1 440 0 discriminator 2
 1936 028e 124B     		ldr	r3, .L113
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 43


 1937 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1938 0292 002B     		cmp	r3, #0
 1939 0294 0AD1     		bne	.L107
 1940              		.loc 1 440 0 discriminator 3
 1941 0296 144B     		ldr	r3, .L113+16
 1942 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1943 029a 002B     		cmp	r3, #0
 1944 029c 06D1     		bne	.L107
 441:main.c        ****         //usbPutString("Forward\n");
 442:main.c        ****         directionState = Forward;
 1945              		.loc 1 442 0 is_stmt 1
 1946 029e 0023     		movs	r3, #0
 1947 02a0 3B60     		str	r3, [r7]
 443:main.c        ****         previousDirection = directionState;
 1948              		.loc 1 443 0
 1949 02a2 0E4A     		ldr	r2, .L113+4
 1950 02a4 3B68     		ldr	r3, [r7]
 1951 02a6 1360     		str	r3, [r2]
 444:main.c        ****         return directionState;   
 1952              		.loc 1 444 0
 1953 02a8 3B68     		ldr	r3, [r7]
 1954 02aa 10E0     		b	.L85
 1955              	.L107:
 445:main.c        ****     }
 446:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 447:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
 448:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 449:main.c        ****         return directionState;
 450:main.c        ****     }
 451:main.c        **** 
 452:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 453:main.c        ****         //usbPutString("Wait For Turn\n");
 454:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 455:main.c        ****         return directionState;
 456:main.c        ****     }*/
 457:main.c        **** 
 458:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 459:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 460:main.c        ****     if (previousDirection == Unknown) {
 1956              		.loc 1 460 0
 1957 02ac 0B4B     		ldr	r3, .L113+4
 1958 02ae 1B68     		ldr	r3, [r3]
 1959 02b0 062B     		cmp	r3, #6
 1960 02b2 06D1     		bne	.L108
 461:main.c        ****         directionState = Forward;
 1961              		.loc 1 461 0
 1962 02b4 0023     		movs	r3, #0
 1963 02b6 3B60     		str	r3, [r7]
 462:main.c        ****         previousDirection = directionState;
 1964              		.loc 1 462 0
 1965 02b8 084A     		ldr	r2, .L113+4
 1966 02ba 3B68     		ldr	r3, [r7]
 1967 02bc 1360     		str	r3, [r2]
 463:main.c        ****         return directionState;
 1968              		.loc 1 463 0
 1969 02be 3B68     		ldr	r3, [r7]
 1970 02c0 05E0     		b	.L85
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 44


 1971              	.L108:
 464:main.c        ****     }
 465:main.c        **** 
 466:main.c        ****     // Possible reason
 467:main.c        ****     previousDirection = currentDirection;
 1972              		.loc 1 467 0
 1973 02c2 0A4B     		ldr	r3, .L113+20
 1974 02c4 1B68     		ldr	r3, [r3]
 1975 02c6 054A     		ldr	r2, .L113+4
 1976 02c8 1360     		str	r3, [r2]
 468:main.c        ****     return previousDirection;
 1977              		.loc 1 468 0
 1978 02ca 044B     		ldr	r3, .L113+4
 1979 02cc 1B68     		ldr	r3, [r3]
 1980              	.L85:
 469:main.c        **** }
 1981              		.loc 1 469 0
 1982 02ce 1846     		mov	r0, r3
 1983 02d0 0837     		adds	r7, r7, #8
 1984              		.cfi_def_cfa_offset 8
 1985 02d2 BD46     		mov	sp, r7
 1986              		.cfi_def_cfa_register 13
 1987              		@ sp needed
 1988 02d4 80BD     		pop	{r7, pc}
 1989              	.L114:
 1990 02d6 00BF     		.align	2
 1991              	.L113:
 1992 02d8 00000000 		.word	s5
 1993 02dc 00000000 		.word	previousDirection
 1994 02e0 00000000 		.word	s3
 1995 02e4 00000000 		.word	s4
 1996 02e8 00000000 		.word	s6
 1997 02ec 00000000 		.word	currentDirection
 1998              		.cfi_endproc
 1999              	.LFE74:
 2000              		.size	CheckSensorDirection, .-CheckSensorDirection
 2001              		.section	.text.SetRobotMovement,"ax",%progbits
 2002              		.align	2
 2003              		.global	SetRobotMovement
 2004              		.thumb
 2005              		.thumb_func
 2006              		.type	SetRobotMovement, %function
 2007              	SetRobotMovement:
 2008              	.LFB75:
 470:main.c        **** 
 471:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 472:main.c        **** void SetRobotMovement() {
 2009              		.loc 1 472 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 0
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 80B5     		push	{r7, lr}
 2014              		.cfi_def_cfa_offset 8
 2015              		.cfi_offset 7, -8
 2016              		.cfi_offset 14, -4
 2017 0002 00AF     		add	r7, sp, #0
 2018              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 45


 473:main.c        ****     currentDirection = CheckSensorDirection();   
 2019              		.loc 1 473 0
 2020 0004 FFF7FEFF 		bl	CheckSensorDirection
 2021 0008 0246     		mov	r2, r0
 2022 000a 224B     		ldr	r3, .L132
 2023 000c 1A60     		str	r2, [r3]
 474:main.c        ****     
 475:main.c        ****     switch (currentDirection) {
 2024              		.loc 1 475 0
 2025 000e 214B     		ldr	r3, .L132
 2026 0010 1B68     		ldr	r3, [r3]
 2027 0012 0B2B     		cmp	r3, #11
 2028 0014 3CD8     		bhi	.L130
 2029 0016 01A2     		adr	r2, .L118
 2030 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2031              		.p2align 2
 2032              	.L118:
 2033 001c 4D000000 		.word	.L117+1
 2034 0020 53000000 		.word	.L119+1
 2035 0024 59000000 		.word	.L120+1
 2036 0028 65000000 		.word	.L121+1
 2037 002c 5F000000 		.word	.L122+1
 2038 0030 6B000000 		.word	.L123+1
 2039 0034 8F000000 		.word	.L131+1
 2040 0038 71000000 		.word	.L125+1
 2041 003c 89000000 		.word	.L126+1
 2042 0040 83000000 		.word	.L127+1
 2043 0044 77000000 		.word	.L128+1
 2044 0048 7D000000 		.word	.L129+1
 2045              		.p2align 1
 2046              	.L117:
 476:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 477:main.c        ****         case Forward:
 478:main.c        ****             moveForward();
 2047              		.loc 1 478 0
 2048 004c FFF7FEFF 		bl	moveForward
 479:main.c        ****             break;
 2049              		.loc 1 479 0
 2050 0050 1EE0     		b	.L116
 2051              	.L119:
 480:main.c        ****         case TurnRight:
 481:main.c        ****             turnRight();
 2052              		.loc 1 481 0
 2053 0052 FFF7FEFF 		bl	turnRight
 482:main.c        ****             break;
 2054              		.loc 1 482 0
 2055 0056 1BE0     		b	.L116
 2056              	.L120:
 483:main.c        ****         case TurnLeft:
 484:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2057              		.loc 1 484 0
 2058 0058 FFF7FEFF 		bl	turnLeft
 485:main.c        ****             break;
 2059              		.loc 1 485 0
 2060 005c 18E0     		b	.L116
 2061              	.L122:
 486:main.c        ****         case AdjustToTheRight:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 46


 487:main.c        ****             adjustRight();
 2062              		.loc 1 487 0
 2063 005e FFF7FEFF 		bl	adjustRight
 488:main.c        ****             break;
 2064              		.loc 1 488 0
 2065 0062 15E0     		b	.L116
 2066              	.L121:
 489:main.c        ****         case AdjustToTheLeft:
 490:main.c        ****             adjustLeft();
 2067              		.loc 1 490 0
 2068 0064 FFF7FEFF 		bl	adjustLeft
 491:main.c        ****             break;
 2069              		.loc 1 491 0
 2070 0068 12E0     		b	.L116
 2071              	.L123:
 492:main.c        ****         case Stop:
 493:main.c        ****             stopMoving();
 2072              		.loc 1 493 0
 2073 006a FFF7FEFF 		bl	stopMoving
 494:main.c        ****             break;
 2074              		.loc 1 494 0
 2075 006e 0FE0     		b	.L116
 2076              	.L125:
 495:main.c        ****         case waitForTurn:
 496:main.c        ****             moveForward(); 
 2077              		.loc 1 496 0
 2078 0070 FFF7FEFF 		bl	moveForward
 497:main.c        ****             break;
 2079              		.loc 1 497 0
 2080 0074 0CE0     		b	.L116
 2081              	.L128:
 498:main.c        ****         case ForwardAfterTurn:
 499:main.c        ****             moveForward();
 2082              		.loc 1 499 0
 2083 0076 FFF7FEFF 		bl	moveForward
 500:main.c        ****             break;
 2084              		.loc 1 500 0
 2085 007a 09E0     		b	.L116
 2086              	.L129:
 501:main.c        ****         case Backward:
 502:main.c        ****             moveBackward();
 2087              		.loc 1 502 0
 2088 007c FFF7FEFF 		bl	moveBackward
 503:main.c        ****             break;
 2089              		.loc 1 503 0
 2090 0080 06E0     		b	.L116
 2091              	.L127:
 504:main.c        ****         case waitForLeftTurn:
 505:main.c        ****             moveForward();
 2092              		.loc 1 505 0
 2093 0082 FFF7FEFF 		bl	moveForward
 506:main.c        ****             break;
 2094              		.loc 1 506 0
 2095 0086 03E0     		b	.L116
 2096              	.L126:
 507:main.c        ****         case waitForRightTurn:
 508:main.c        ****             moveForward();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 47


 2097              		.loc 1 508 0
 2098 0088 FFF7FEFF 		bl	moveForward
 509:main.c        ****             break;
 2099              		.loc 1 509 0
 2100 008c 00E0     		b	.L116
 2101              	.L131:
 510:main.c        ****         case Unknown:
 511:main.c        ****             // UNKNOWN CONFIGURATION
 512:main.c        ****             break;  
 2102              		.loc 1 512 0
 2103 008e 00BF     		nop
 2104              	.L116:
 2105              	.L130:
 513:main.c        ****     }
 514:main.c        **** }...
 2106              		.loc 1 514 0
 2107 0090 00BF     		nop
 2108 0092 80BD     		pop	{r7, pc}
 2109              	.L133:
 2110              		.align	2
 2111              	.L132:
 2112 0094 00000000 		.word	currentDirection
 2113              		.cfi_endproc
 2114              	.LFE75:
 2115              		.size	SetRobotMovement, .-SetRobotMovement
 2116              		.text
 2117              	.Letext0:
 2118              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2119              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2120              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2121              		.file 5 "vars.h"
 2122              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2123              		.file 7 "map.h"
 2124              		.section	.debug_info,"",%progbits
 2125              	.Ldebug_info0:
 2126 0000 8C060000 		.4byte	0x68c
 2127 0004 0400     		.2byte	0x4
 2128 0006 00000000 		.4byte	.Ldebug_abbrev0
 2129 000a 04       		.byte	0x4
 2130 000b 01       		.uleb128 0x1
 2131 000c 9F000000 		.4byte	.LASF104
 2132 0010 0C       		.byte	0xc
 2133 0011 86040000 		.4byte	.LASF105
 2134 0015 C7030000 		.4byte	.LASF106
 2135 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2136 001d 00000000 		.4byte	0
 2137 0021 00000000 		.4byte	.Ldebug_line0
 2138 0025 02       		.uleb128 0x2
 2139 0026 01       		.byte	0x1
 2140 0027 06       		.byte	0x6
 2141 0028 EE020000 		.4byte	.LASF0
 2142 002c 02       		.uleb128 0x2
 2143 002d 01       		.byte	0x1
 2144 002e 08       		.byte	0x8
 2145 002f 5C020000 		.4byte	.LASF1
 2146 0033 02       		.uleb128 0x2
 2147 0034 02       		.byte	0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 48


 2148 0035 05       		.byte	0x5
 2149 0036 5B000000 		.4byte	.LASF2
 2150 003a 02       		.uleb128 0x2
 2151 003b 02       		.byte	0x2
 2152 003c 07       		.byte	0x7
 2153 003d 83030000 		.4byte	.LASF3
 2154 0041 03       		.uleb128 0x3
 2155 0042 E9040000 		.4byte	.LASF12
 2156 0046 02       		.byte	0x2
 2157 0047 3F       		.byte	0x3f
 2158 0048 4C000000 		.4byte	0x4c
 2159 004c 02       		.uleb128 0x2
 2160 004d 04       		.byte	0x4
 2161 004e 05       		.byte	0x5
 2162 004f B6030000 		.4byte	.LASF4
 2163 0053 02       		.uleb128 0x2
 2164 0054 04       		.byte	0x4
 2165 0055 07       		.byte	0x7
 2166 0056 8D040000 		.4byte	.LASF5
 2167 005a 02       		.uleb128 0x2
 2168 005b 08       		.byte	0x8
 2169 005c 05       		.byte	0x5
 2170 005d B9010000 		.4byte	.LASF6
 2171 0061 02       		.uleb128 0x2
 2172 0062 08       		.byte	0x8
 2173 0063 07       		.byte	0x7
 2174 0064 02030000 		.4byte	.LASF7
 2175 0068 04       		.uleb128 0x4
 2176 0069 04       		.byte	0x4
 2177 006a 05       		.byte	0x5
 2178 006b 696E7400 		.ascii	"int\000"
 2179 006f 02       		.uleb128 0x2
 2180 0070 04       		.byte	0x4
 2181 0071 07       		.byte	0x7
 2182 0072 2A030000 		.4byte	.LASF8
 2183 0076 02       		.uleb128 0x2
 2184 0077 08       		.byte	0x8
 2185 0078 04       		.byte	0x4
 2186 0079 82020000 		.4byte	.LASF9
 2187 007d 02       		.uleb128 0x2
 2188 007e 04       		.byte	0x4
 2189 007f 07       		.byte	0x7
 2190 0080 72000000 		.4byte	.LASF10
 2191 0084 02       		.uleb128 0x2
 2192 0085 01       		.byte	0x1
 2193 0086 08       		.byte	0x8
 2194 0087 B1030000 		.4byte	.LASF11
 2195 008b 03       		.uleb128 0x3
 2196 008c FA020000 		.4byte	.LASF13
 2197 0090 03       		.byte	0x3
 2198 0091 2C       		.byte	0x2c
 2199 0092 41000000 		.4byte	0x41
 2200 0096 05       		.uleb128 0x5
 2201 0097 89010000 		.4byte	.LASF14
 2202 009b 04       		.byte	0x4
 2203 009c E701     		.2byte	0x1e7
 2204 009e 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 49


 2205 00a2 05       		.uleb128 0x5
 2206 00a3 6B010000 		.4byte	.LASF15
 2207 00a7 04       		.byte	0x4
 2208 00a8 E801     		.2byte	0x1e8
 2209 00aa 3A000000 		.4byte	0x3a
 2210 00ae 05       		.uleb128 0x5
 2211 00af 7F040000 		.4byte	.LASF16
 2212 00b3 04       		.byte	0x4
 2213 00b4 E901     		.2byte	0x1e9
 2214 00b6 53000000 		.4byte	0x53
 2215 00ba 05       		.uleb128 0x5
 2216 00bb C7010000 		.4byte	.LASF17
 2217 00bf 04       		.byte	0x4
 2218 00c0 EA01     		.2byte	0x1ea
 2219 00c2 25000000 		.4byte	0x25
 2220 00c6 05       		.uleb128 0x5
 2221 00c7 83010000 		.4byte	.LASF18
 2222 00cb 04       		.byte	0x4
 2223 00cc EB01     		.2byte	0x1eb
 2224 00ce 33000000 		.4byte	0x33
 2225 00d2 02       		.uleb128 0x2
 2226 00d3 04       		.byte	0x4
 2227 00d4 04       		.byte	0x4
 2228 00d5 A1010000 		.4byte	.LASF19
 2229 00d9 02       		.uleb128 0x2
 2230 00da 08       		.byte	0x8
 2231 00db 04       		.byte	0x4
 2232 00dc A8040000 		.4byte	.LASF20
 2233 00e0 06       		.uleb128 0x6
 2234 00e1 96030000 		.4byte	.LASF107
 2235 00e5 20       		.byte	0x20
 2236 00e6 05       		.byte	0x5
 2237 00e7 28       		.byte	0x28
 2238 00e8 B9010000 		.4byte	0x1b9
 2239 00ec 07       		.uleb128 0x7
 2240 00ed A8050000 		.4byte	.LASF21
 2241 00f1 05       		.byte	0x5
 2242 00f2 2A       		.byte	0x2a
 2243 00f3 BA000000 		.4byte	0xba
 2244 00f7 00       		.byte	0
 2245 00f8 07       		.uleb128 0x7
 2246 00f9 72010000 		.4byte	.LASF22
 2247 00fd 05       		.byte	0x5
 2248 00fe 2B       		.byte	0x2b
 2249 00ff 96000000 		.4byte	0x96
 2250 0103 01       		.byte	0x1
 2251 0104 07       		.uleb128 0x7
 2252 0105 63040000 		.4byte	.LASF23
 2253 0109 05       		.byte	0x5
 2254 010a 2C       		.byte	0x2c
 2255 010b C6000000 		.4byte	0xc6
 2256 010f 02       		.byte	0x2
 2257 0110 07       		.uleb128 0x7
 2258 0111 58050000 		.4byte	.LASF24
 2259 0115 05       		.byte	0x5
 2260 0116 2D       		.byte	0x2d
 2261 0117 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 50


 2262 011b 04       		.byte	0x4
 2263 011c 07       		.uleb128 0x7
 2264 011d 00050000 		.4byte	.LASF25
 2265 0121 05       		.byte	0x5
 2266 0122 2E       		.byte	0x2e
 2267 0123 C6000000 		.4byte	0xc6
 2268 0127 06       		.byte	0x6
 2269 0128 07       		.uleb128 0x7
 2270 0129 FB010000 		.4byte	.LASF26
 2271 012d 05       		.byte	0x5
 2272 012e 2F       		.byte	0x2f
 2273 012f C6000000 		.4byte	0xc6
 2274 0133 08       		.byte	0x8
 2275 0134 07       		.uleb128 0x7
 2276 0135 F8040000 		.4byte	.LASF27
 2277 0139 05       		.byte	0x5
 2278 013a 30       		.byte	0x30
 2279 013b C6000000 		.4byte	0xc6
 2280 013f 0A       		.byte	0xa
 2281 0140 07       		.uleb128 0x7
 2282 0141 C3020000 		.4byte	.LASF28
 2283 0145 05       		.byte	0x5
 2284 0146 31       		.byte	0x31
 2285 0147 C6000000 		.4byte	0xc6
 2286 014b 0C       		.byte	0xc
 2287 014c 07       		.uleb128 0x7
 2288 014d EE010000 		.4byte	.LASF29
 2289 0151 05       		.byte	0x5
 2290 0152 32       		.byte	0x32
 2291 0153 C6000000 		.4byte	0xc6
 2292 0157 0E       		.byte	0xe
 2293 0158 07       		.uleb128 0x7
 2294 0159 E6020000 		.4byte	.LASF30
 2295 015d 05       		.byte	0x5
 2296 015e 33       		.byte	0x33
 2297 015f C6000000 		.4byte	0xc6
 2298 0163 10       		.byte	0x10
 2299 0164 07       		.uleb128 0x7
 2300 0165 26040000 		.4byte	.LASF31
 2301 0169 05       		.byte	0x5
 2302 016a 34       		.byte	0x34
 2303 016b C6000000 		.4byte	0xc6
 2304 016f 12       		.byte	0x12
 2305 0170 07       		.uleb128 0x7
 2306 0171 3B040000 		.4byte	.LASF32
 2307 0175 05       		.byte	0x5
 2308 0176 35       		.byte	0x35
 2309 0177 C6000000 		.4byte	0xc6
 2310 017b 14       		.byte	0x14
 2311 017c 07       		.uleb128 0x7
 2312 017d 8F010000 		.4byte	.LASF33
 2313 0181 05       		.byte	0x5
 2314 0182 36       		.byte	0x36
 2315 0183 C6000000 		.4byte	0xc6
 2316 0187 16       		.byte	0x16
 2317 0188 07       		.uleb128 0x7
 2318 0189 53000000 		.4byte	.LASF34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 51


 2319 018d 05       		.byte	0x5
 2320 018e 37       		.byte	0x37
 2321 018f C6000000 		.4byte	0xc6
 2322 0193 18       		.byte	0x18
 2323 0194 07       		.uleb128 0x7
 2324 0195 E6010000 		.4byte	.LASF35
 2325 0199 05       		.byte	0x5
 2326 019a 38       		.byte	0x38
 2327 019b C6000000 		.4byte	0xc6
 2328 019f 1A       		.byte	0x1a
 2329 01a0 07       		.uleb128 0x7
 2330 01a1 6E030000 		.4byte	.LASF36
 2331 01a5 05       		.byte	0x5
 2332 01a6 39       		.byte	0x39
 2333 01a7 C6000000 		.4byte	0xc6
 2334 01ab 1C       		.byte	0x1c
 2335 01ac 07       		.uleb128 0x7
 2336 01ad 2E040000 		.4byte	.LASF37
 2337 01b1 05       		.byte	0x5
 2338 01b2 3A       		.byte	0x3a
 2339 01b3 C6000000 		.4byte	0xc6
 2340 01b7 1E       		.byte	0x1e
 2341 01b8 00       		.byte	0
 2342 01b9 08       		.uleb128 0x8
 2343 01ba 86000000 		.4byte	.LASF50
 2344 01be 04       		.byte	0x4
 2345 01bf 6F000000 		.4byte	0x6f
 2346 01c3 01       		.byte	0x1
 2347 01c4 28       		.byte	0x28
 2348 01c5 12020000 		.4byte	0x212
 2349 01c9 09       		.uleb128 0x9
 2350 01ca BF030000 		.4byte	.LASF38
 2351 01ce 00       		.byte	0
 2352 01cf 09       		.uleb128 0x9
 2353 01d0 6E040000 		.4byte	.LASF39
 2354 01d4 01       		.byte	0x1
 2355 01d5 09       		.uleb128 0x9
 2356 01d6 0C000000 		.4byte	.LASF40
 2357 01da 02       		.byte	0x2
 2358 01db 09       		.uleb128 0x9
 2359 01dc 5B010000 		.4byte	.LASF41
 2360 01e0 03       		.byte	0x3
 2361 01e1 09       		.uleb128 0x9
 2362 01e2 19030000 		.4byte	.LASF42
 2363 01e6 04       		.byte	0x4
 2364 01e7 09       		.uleb128 0x9
 2365 01e8 F3040000 		.4byte	.LASF43
 2366 01ec 05       		.byte	0x5
 2367 01ed 09       		.uleb128 0x9
 2368 01ee AF040000 		.4byte	.LASF44
 2369 01f2 06       		.byte	0x6
 2370 01f3 09       		.uleb128 0x9
 2371 01f4 39000000 		.4byte	.LASF45
 2372 01f8 07       		.byte	0x7
 2373 01f9 09       		.uleb128 0x9
 2374 01fa 32010000 		.4byte	.LASF46
 2375 01fe 08       		.byte	0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 52


 2376 01ff 09       		.uleb128 0x9
 2377 0200 1D050000 		.4byte	.LASF47
 2378 0204 09       		.byte	0x9
 2379 0205 09       		.uleb128 0x9
 2380 0206 1C000000 		.4byte	.LASF48
 2381 020a 0A       		.byte	0xa
 2382 020b 09       		.uleb128 0x9
 2383 020c 9F040000 		.4byte	.LASF49
 2384 0210 0B       		.byte	0xb
 2385 0211 00       		.byte	0
 2386 0212 08       		.uleb128 0x8
 2387 0213 AD050000 		.4byte	.LASF51
 2388 0217 01       		.byte	0x1
 2389 0218 2C000000 		.4byte	0x2c
 2390 021c 01       		.byte	0x1
 2391 021d 2A       		.byte	0x2a
 2392 021e 3A020000 		.4byte	0x23a
 2393 0222 0A       		.uleb128 0xa
 2394 0223 557000   		.ascii	"Up\000"
 2395 0226 00       		.byte	0
 2396 0227 09       		.uleb128 0x9
 2397 0228 83050000 		.4byte	.LASF52
 2398 022c 01       		.byte	0x1
 2399 022d 09       		.uleb128 0x9
 2400 022e 17020000 		.4byte	.LASF53
 2401 0232 02       		.byte	0x2
 2402 0233 09       		.uleb128 0x9
 2403 0234 A7010000 		.4byte	.LASF54
 2404 0238 03       		.byte	0x3
 2405 0239 00       		.byte	0
 2406 023a 0B       		.uleb128 0xb
 2407 023b 78010000 		.4byte	.LASF62
 2408 023f 01       		.byte	0x1
 2409 0240 45       		.byte	0x45
 2410 0241 00000000 		.4byte	.LFB64
 2411 0245 F4000000 		.4byte	.LFE64-.LFB64
 2412 0249 01       		.uleb128 0x1
 2413 024a 9C       		.byte	0x9c
 2414 024b 68020000 		.4byte	0x268
 2415 024f 0C       		.uleb128 0xc
 2416 0250 58000000 		.4byte	.LBB2
 2417 0254 62000000 		.4byte	.LBE2-.LBB2
 2418 0258 0D       		.uleb128 0xd
 2419 0259 AD010000 		.4byte	.LASF61
 2420 025d 01       		.byte	0x1
 2421 025e 53       		.byte	0x53
 2422 025f D2000000 		.4byte	0xd2
 2423 0263 02       		.uleb128 0x2
 2424 0264 91       		.byte	0x91
 2425 0265 6C       		.sleb128 -20
 2426 0266 00       		.byte	0
 2427 0267 00       		.byte	0
 2428 0268 0E       		.uleb128 0xe
 2429 0269 C2040000 		.4byte	.LASF55
 2430 026d 01       		.byte	0x1
 2431 026e 5E       		.byte	0x5e
 2432 026f 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 53


 2433 0273 18000000 		.4byte	.LFE65-.LFB65
 2434 0277 01       		.uleb128 0x1
 2435 0278 9C       		.byte	0x9c
 2436 0279 0E       		.uleb128 0xe
 2437 027a 4F010000 		.4byte	.LASF56
 2438 027e 01       		.byte	0x1
 2439 027f 64       		.byte	0x64
 2440 0280 00000000 		.4byte	.LFB66
 2441 0284 18000000 		.4byte	.LFE66-.LFB66
 2442 0288 01       		.uleb128 0x1
 2443 0289 9C       		.byte	0x9c
 2444 028a 0E       		.uleb128 0xe
 2445 028b 77030000 		.4byte	.LASF57
 2446 028f 01       		.byte	0x1
 2447 0290 6A       		.byte	0x6a
 2448 0291 00000000 		.4byte	.LFB67
 2449 0295 18000000 		.4byte	.LFE67-.LFB67
 2450 0299 01       		.uleb128 0x1
 2451 029a 9C       		.byte	0x9c
 2452 029b 0E       		.uleb128 0xe
 2453 029c 00000000 		.4byte	.LASF58
 2454 02a0 01       		.byte	0x1
 2455 02a1 70       		.byte	0x70
 2456 02a2 00000000 		.4byte	.LFB68
 2457 02a6 18000000 		.4byte	.LFE68-.LFB68
 2458 02aa 01       		.uleb128 0x1
 2459 02ab 9C       		.byte	0x9c
 2460 02ac 0F       		.uleb128 0xf
 2461 02ad 61030000 		.4byte	.LASF59
 2462 02b1 01       		.byte	0x1
 2463 02b2 76       		.byte	0x76
 2464 02b3 00000000 		.4byte	.LFB69
 2465 02b7 38000000 		.4byte	.LFE69-.LFB69
 2466 02bb 01       		.uleb128 0x1
 2467 02bc 9C       		.byte	0x9c
 2468 02bd 10       		.uleb128 0x10
 2469 02be 2D010000 		.4byte	.LASF60
 2470 02c2 01       		.byte	0x1
 2471 02c3 82       		.byte	0x82
 2472 02c4 68000000 		.4byte	0x68
 2473 02c8 00000000 		.4byte	.LFB70
 2474 02cc A0000000 		.4byte	.LFE70-.LFB70
 2475 02d0 01       		.uleb128 0x1
 2476 02d1 9C       		.byte	0x9c
 2477 02d2 11       		.uleb128 0x11
 2478 02d3 2D050000 		.4byte	.LASF108
 2479 02d7 01       		.byte	0x1
 2480 02d8 B2       		.byte	0xb2
 2481 02d9 C6000000 		.4byte	0xc6
 2482 02dd 00000000 		.4byte	.LFB71
 2483 02e1 54000000 		.4byte	.LFE71-.LFB71
 2484 02e5 01       		.uleb128 0x1
 2485 02e6 9C       		.byte	0x9c
 2486 02e7 16030000 		.4byte	0x316
 2487 02eb 12       		.uleb128 0x12
 2488 02ec D7040000 		.4byte	.LASF109
 2489 02f0 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 54


 2490 02f1 B2       		.byte	0xb2
 2491 02f2 A2000000 		.4byte	0xa2
 2492 02f6 02       		.uleb128 0x2
 2493 02f7 91       		.byte	0x91
 2494 02f8 66       		.sleb128 -26
 2495 02f9 13       		.uleb128 0x13
 2496 02fa 63707300 		.ascii	"cps\000"
 2497 02fe 01       		.byte	0x1
 2498 02ff B4       		.byte	0xb4
 2499 0300 D2000000 		.4byte	0xd2
 2500 0304 02       		.uleb128 0x2
 2501 0305 91       		.byte	0x91
 2502 0306 6C       		.sleb128 -20
 2503 0307 13       		.uleb128 0x13
 2504 0308 72706D00 		.ascii	"rpm\000"
 2505 030c 01       		.byte	0x1
 2506 030d B5       		.byte	0xb5
 2507 030e C6000000 		.4byte	0xc6
 2508 0312 02       		.uleb128 0x2
 2509 0313 91       		.byte	0x91
 2510 0314 6A       		.sleb128 -22
 2511 0315 00       		.byte	0
 2512 0316 14       		.uleb128 0x14
 2513 0317 A0030000 		.4byte	.LASF67
 2514 031b 01       		.byte	0x1
 2515 031c BD       		.byte	0xbd
 2516 031d 00000000 		.4byte	.LFB72
 2517 0321 34000000 		.4byte	.LFE72-.LFB72
 2518 0325 01       		.uleb128 0x1
 2519 0326 9C       		.byte	0x9c
 2520 0327 15       		.uleb128 0x15
 2521 0328 43010000 		.4byte	.LASF63
 2522 032c 01       		.byte	0x1
 2523 032d C9       		.byte	0xc9
 2524 032e B9010000 		.4byte	0x1b9
 2525 0332 00000000 		.4byte	.LFB73
 2526 0336 98040000 		.4byte	.LFE73-.LFB73
 2527 033a 01       		.uleb128 0x1
 2528 033b 9C       		.byte	0x9c
 2529 033c 4F030000 		.4byte	0x34f
 2530 0340 0D       		.uleb128 0xd
 2531 0341 99050000 		.4byte	.LASF64
 2532 0345 01       		.byte	0x1
 2533 0346 CA       		.byte	0xca
 2534 0347 B9010000 		.4byte	0x1b9
 2535 034b 02       		.uleb128 0x2
 2536 034c 91       		.byte	0x91
 2537 034d 74       		.sleb128 -12
 2538 034e 00       		.byte	0
 2539 034f 16       		.uleb128 0x16
 2540 0350 1C020000 		.4byte	.LASF65
 2541 0354 01       		.byte	0x1
 2542 0355 2001     		.2byte	0x120
 2543 0357 B9010000 		.4byte	0x1b9
 2544 035b 00000000 		.4byte	.LFB74
 2545 035f F0020000 		.4byte	.LFE74-.LFB74
 2546 0363 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 55


 2547 0364 9C       		.byte	0x9c
 2548 0365 88030000 		.4byte	0x388
 2549 0369 17       		.uleb128 0x17
 2550 036a 52020000 		.4byte	.LASF66
 2551 036e 01       		.byte	0x1
 2552 036f 2101     		.2byte	0x121
 2553 0371 D2000000 		.4byte	0xd2
 2554 0375 02       		.uleb128 0x2
 2555 0376 91       		.byte	0x91
 2556 0377 74       		.sleb128 -12
 2557 0378 17       		.uleb128 0x17
 2558 0379 99050000 		.4byte	.LASF64
 2559 037d 01       		.byte	0x1
 2560 037e 2701     		.2byte	0x127
 2561 0380 B9010000 		.4byte	0x1b9
 2562 0384 02       		.uleb128 0x2
 2563 0385 91       		.byte	0x91
 2564 0386 70       		.sleb128 -16
 2565 0387 00       		.byte	0
 2566 0388 18       		.uleb128 0x18
 2567 0389 50030000 		.4byte	.LASF68
 2568 038d 01       		.byte	0x1
 2569 038e D801     		.2byte	0x1d8
 2570 0390 00000000 		.4byte	.LFB75
 2571 0394 98000000 		.4byte	.LFE75-.LFB75
 2572 0398 01       		.uleb128 0x1
 2573 0399 9C       		.byte	0x9c
 2574 039a 19       		.uleb128 0x19
 2575 039b 63050000 		.4byte	.LASF69
 2576 039f 06       		.byte	0x6
 2577 03a0 1207     		.2byte	0x712
 2578 03a2 A6030000 		.4byte	0x3a6
 2579 03a6 1A       		.uleb128 0x1a
 2580 03a7 8B000000 		.4byte	0x8b
 2581 03ab 1B       		.uleb128 0x1b
 2582 03ac 747300   		.ascii	"ts\000"
 2583 03af 05       		.byte	0x5
 2584 03b0 10       		.byte	0x10
 2585 03b1 96000000 		.4byte	0x96
 2586 03b5 05       		.uleb128 0x5
 2587 03b6 03       		.byte	0x3
 2588 03b7 00000000 		.4byte	ts
 2589 03bb 1C       		.uleb128 0x1c
 2590 03bc 15000000 		.4byte	.LASF70
 2591 03c0 05       		.byte	0x5
 2592 03c1 11       		.byte	0x11
 2593 03c2 A2000000 		.4byte	0xa2
 2594 03c6 05       		.uleb128 0x5
 2595 03c7 03       		.byte	0x3
 2596 03c8 00000000 		.4byte	ts_enc
 2597 03cc 1C       		.uleb128 0x1c
 2598 03cd 37030000 		.4byte	.LASF71
 2599 03d1 05       		.byte	0x5
 2600 03d2 12       		.byte	0x12
 2601 03d3 A2000000 		.4byte	0xa2
 2602 03d7 05       		.uleb128 0x5
 2603 03d8 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 56


 2604 03d9 00000000 		.4byte	ts_update
 2605 03dd 1C       		.uleb128 0x1c
 2606 03de CE040000 		.4byte	.LASF72
 2607 03e2 05       		.byte	0x5
 2608 03e3 13       		.byte	0x13
 2609 03e4 A2000000 		.4byte	0xa2
 2610 03e8 05       		.uleb128 0x5
 2611 03e9 03       		.byte	0x3
 2612 03ea 00000000 		.4byte	ts_speed
 2613 03ee 1C       		.uleb128 0x1c
 2614 03ef 12050000 		.4byte	.LASF73
 2615 03f3 05       		.byte	0x5
 2616 03f4 14       		.byte	0x14
 2617 03f5 A2000000 		.4byte	0xa2
 2618 03f9 05       		.uleb128 0x5
 2619 03fa 03       		.byte	0x3
 2620 03fb 00000000 		.4byte	ts_display
 2621 03ff 1C       		.uleb128 0x1c
 2622 0400 DD040000 		.4byte	.LASF74
 2623 0404 05       		.byte	0x5
 2624 0405 16       		.byte	0x16
 2625 0406 96000000 		.4byte	0x96
 2626 040a 05       		.uleb128 0x5
 2627 040b 03       		.byte	0x3
 2628 040c 00000000 		.4byte	flag_ts_enc
 2629 0410 1C       		.uleb128 0x1c
 2630 0411 D7010000 		.4byte	.LASF75
 2631 0415 05       		.byte	0x5
 2632 0416 17       		.byte	0x17
 2633 0417 96000000 		.4byte	0x96
 2634 041b 05       		.uleb128 0x5
 2635 041c 03       		.byte	0x3
 2636 041d 00000000 		.4byte	flag_ts_update
 2637 0421 1C       		.uleb128 0x1c
 2638 0422 45000000 		.4byte	.LASF76
 2639 0426 05       		.byte	0x5
 2640 0427 18       		.byte	0x18
 2641 0428 96000000 		.4byte	0x96
 2642 042c 05       		.uleb128 0x5
 2643 042d 03       		.byte	0x3
 2644 042e 00000000 		.4byte	flag_ts_speed
 2645 0432 1C       		.uleb128 0x1c
 2646 0433 3A020000 		.4byte	.LASF77
 2647 0437 05       		.byte	0x5
 2648 0438 19       		.byte	0x19
 2649 0439 96000000 		.4byte	0x96
 2650 043d 05       		.uleb128 0x5
 2651 043e 03       		.byte	0x3
 2652 043f 00000000 		.4byte	flag_ts_display
 2653 0443 1C       		.uleb128 0x1c
 2654 0444 4A020000 		.4byte	.LASF78
 2655 0448 05       		.byte	0x5
 2656 0449 1B       		.byte	0x1b
 2657 044a 96000000 		.4byte	0x96
 2658 044e 05       		.uleb128 0x5
 2659 044f 03       		.byte	0x3
 2660 0450 00000000 		.4byte	flag_rx
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 57


 2661 0454 1C       		.uleb128 0x1c
 2662 0455 2D000000 		.4byte	.LASF79
 2663 0459 05       		.byte	0x5
 2664 045a 1C       		.byte	0x1c
 2665 045b 96000000 		.4byte	0x96
 2666 045f 05       		.uleb128 0x5
 2667 0460 03       		.byte	0x3
 2668 0461 00000000 		.4byte	flag_packet
 2669 0465 1C       		.uleb128 0x1c
 2670 0466 41030000 		.4byte	.LASF80
 2671 046a 05       		.byte	0x5
 2672 046b 1D       		.byte	0x1d
 2673 046c 96000000 		.4byte	0x96
 2674 0470 05       		.uleb128 0x5
 2675 0471 03       		.byte	0x3
 2676 0472 00000000 		.4byte	flag_KB_string
 2677 0476 1C       		.uleb128 0x1c
 2678 0477 D7020000 		.4byte	.LASF81
 2679 047b 05       		.byte	0x5
 2680 047c 1F       		.byte	0x1f
 2681 047d 96000000 		.4byte	0x96
 2682 0481 05       		.uleb128 0x5
 2683 0482 03       		.byte	0x3
 2684 0483 00000000 		.4byte	dataready_flag
 2685 0487 1C       		.uleb128 0x1c
 2686 0488 3C050000 		.4byte	.LASF82
 2687 048c 05       		.byte	0x5
 2688 048d 21       		.byte	0x21
 2689 048e 96000000 		.4byte	0x96
 2690 0492 05       		.uleb128 0x5
 2691 0493 03       		.byte	0x3
 2692 0494 00000000 		.4byte	flag_rf_transmission_active
 2693 0498 1D       		.uleb128 0x1d
 2694 0499 84000000 		.4byte	0x84
 2695 049d A8040000 		.4byte	0x4a8
 2696 04a1 1E       		.uleb128 0x1e
 2697 04a2 7D000000 		.4byte	0x7d
 2698 04a6 3F       		.byte	0x3f
 2699 04a7 00       		.byte	0
 2700 04a8 1C       		.uleb128 0x1c
 2701 04a9 44040000 		.4byte	.LASF83
 2702 04ad 05       		.byte	0x5
 2703 04ae 24       		.byte	0x24
 2704 04af 98040000 		.4byte	0x498
 2705 04b3 05       		.uleb128 0x5
 2706 04b4 03       		.byte	0x3
 2707 04b5 00000000 		.4byte	displaystring
 2708 04b9 1C       		.uleb128 0x1c
 2709 04ba 9C010000 		.4byte	.LASF84
 2710 04be 05       		.byte	0x5
 2711 04bf 25       		.byte	0x25
 2712 04c0 98040000 		.4byte	0x498
 2713 04c4 05       		.uleb128 0x5
 2714 04c5 03       		.byte	0x3
 2715 04c6 00000000 		.4byte	line
 2716 04ca 1C       		.uleb128 0x1c
 2717 04cb 7C020000 		.4byte	.LASF85
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 58


 2718 04cf 05       		.byte	0x5
 2719 04d0 25       		.byte	0x25
 2720 04d1 98040000 		.4byte	0x498
 2721 04d5 05       		.uleb128 0x5
 2722 04d6 03       		.byte	0x3
 2723 04d7 00000000 		.4byte	entry
 2724 04db 1D       		.uleb128 0x1d
 2725 04dc 96000000 		.4byte	0x96
 2726 04e0 EB040000 		.4byte	0x4eb
 2727 04e4 1E       		.uleb128 0x1e
 2728 04e5 7D000000 		.4byte	0x7d
 2729 04e9 3F       		.byte	0x3f
 2730 04ea 00       		.byte	0
 2731 04eb 1C       		.uleb128 0x1c
 2732 04ec 95000000 		.4byte	.LASF86
 2733 04f0 05       		.byte	0x5
 2734 04f1 26       		.byte	0x26
 2735 04f2 DB040000 		.4byte	0x4db
 2736 04f6 05       		.uleb128 0x5
 2737 04f7 03       		.byte	0x3
 2738 04f8 00000000 		.4byte	usbBuffer
 2739 04fc 1C       		.uleb128 0x1c
 2740 04fd 65000000 		.4byte	.LASF87
 2741 0501 05       		.byte	0x5
 2742 0502 3C       		.byte	0x3c
 2743 0503 E0000000 		.4byte	0xe0
 2744 0507 05       		.uleb128 0x5
 2745 0508 03       		.byte	0x3
 2746 0509 00000000 		.4byte	system_state
 2747 050d 1D       		.uleb128 0x1d
 2748 050e 68000000 		.4byte	0x68
 2749 0512 23050000 		.4byte	0x523
 2750 0516 1E       		.uleb128 0x1e
 2751 0517 7D000000 		.4byte	0x7d
 2752 051b 0E       		.byte	0xe
 2753 051c 1E       		.uleb128 0x1e
 2754 051d 7D000000 		.4byte	0x7d
 2755 0521 12       		.byte	0x12
 2756 0522 00       		.byte	0
 2757 0523 1F       		.uleb128 0x1f
 2758 0524 6D617000 		.ascii	"map\000"
 2759 0528 07       		.byte	0x7
 2760 0529 04       		.byte	0x4
 2761 052a 0D050000 		.4byte	0x50d
 2762 052e 1C       		.uleb128 0x1c
 2763 052f 88050000 		.4byte	.LASF88
 2764 0533 01       		.byte	0x1
 2765 0534 2B       		.byte	0x2b
 2766 0535 B9010000 		.4byte	0x1b9
 2767 0539 05       		.uleb128 0x5
 2768 053a 03       		.byte	0x3
 2769 053b 00000000 		.4byte	currentDirection
 2770 053f 1C       		.uleb128 0x1c
 2771 0540 99020000 		.4byte	.LASF89
 2772 0544 01       		.byte	0x1
 2773 0545 2C       		.byte	0x2c
 2774 0546 B9010000 		.4byte	0x1b9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 59


 2775 054a 05       		.uleb128 0x5
 2776 054b 03       		.byte	0x3
 2777 054c 00000000 		.4byte	previousDirection
 2778 0550 1C       		.uleb128 0x1c
 2779 0551 70050000 		.4byte	.LASF90
 2780 0555 01       		.byte	0x1
 2781 0556 2D       		.byte	0x2d
 2782 0557 12020000 		.4byte	0x212
 2783 055b 05       		.uleb128 0x5
 2784 055c 03       		.byte	0x3
 2785 055d 00000000 		.4byte	currentOrientation
 2786 0561 1C       		.uleb128 0x1c
 2787 0562 03020000 		.4byte	.LASF91
 2788 0566 01       		.byte	0x1
 2789 0567 2E       		.byte	0x2e
 2790 0568 12020000 		.4byte	0x212
 2791 056c 05       		.uleb128 0x5
 2792 056d 03       		.byte	0x3
 2793 056e 00000000 		.4byte	previousOrientation
 2794 0572 1B       		.uleb128 0x1b
 2795 0573 733300   		.ascii	"s3\000"
 2796 0576 01       		.byte	0x1
 2797 0577 32       		.byte	0x32
 2798 0578 96000000 		.4byte	0x96
 2799 057c 05       		.uleb128 0x5
 2800 057d 03       		.byte	0x3
 2801 057e 00000000 		.4byte	s3
 2802 0582 1B       		.uleb128 0x1b
 2803 0583 733400   		.ascii	"s4\000"
 2804 0586 01       		.byte	0x1
 2805 0587 33       		.byte	0x33
 2806 0588 96000000 		.4byte	0x96
 2807 058c 05       		.uleb128 0x5
 2808 058d 03       		.byte	0x3
 2809 058e 00000000 		.4byte	s4
 2810 0592 1B       		.uleb128 0x1b
 2811 0593 733500   		.ascii	"s5\000"
 2812 0596 01       		.byte	0x1
 2813 0597 34       		.byte	0x34
 2814 0598 96000000 		.4byte	0x96
 2815 059c 05       		.uleb128 0x5
 2816 059d 03       		.byte	0x3
 2817 059e 00000000 		.4byte	s5
 2818 05a2 1B       		.uleb128 0x1b
 2819 05a3 733600   		.ascii	"s6\000"
 2820 05a6 01       		.byte	0x1
 2821 05a7 35       		.byte	0x35
 2822 05a8 96000000 		.4byte	0x96
 2823 05ac 05       		.uleb128 0x5
 2824 05ad 03       		.byte	0x3
 2825 05ae 00000000 		.4byte	s6
 2826 05b2 1C       		.uleb128 0x1c
 2827 05b3 6A020000 		.4byte	.LASF92
 2828 05b7 01       		.byte	0x1
 2829 05b8 3A       		.byte	0x3a
 2830 05b9 AE000000 		.4byte	0xae
 2831 05bd 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 60


 2832 05be 03       		.byte	0x3
 2833 05bf 00000000 		.4byte	totalMilliseconds
 2834 05c3 1C       		.uleb128 0x1c
 2835 05c4 AB020000 		.4byte	.LASF93
 2836 05c8 01       		.byte	0x1
 2837 05c9 3B       		.byte	0x3b
 2838 05ca D2000000 		.4byte	0xd2
 2839 05ce 05       		.uleb128 0x5
 2840 05cf 03       		.byte	0x3
 2841 05d0 00000000 		.4byte	totalDistance
 2842 05d4 1D       		.uleb128 0x1d
 2843 05d5 84000000 		.4byte	0x84
 2844 05d9 E4050000 		.4byte	0x5e4
 2845 05dd 1E       		.uleb128 0x1e
 2846 05de 7D000000 		.4byte	0x7d
 2847 05e2 44       		.byte	0x44
 2848 05e3 00       		.byte	0
 2849 05e4 1C       		.uleb128 0x1c
 2850 05e5 78040000 		.4byte	.LASF94
 2851 05e9 01       		.byte	0x1
 2852 05ea 3D       		.byte	0x3d
 2853 05eb D4050000 		.4byte	0x5d4
 2854 05ef 05       		.uleb128 0x5
 2855 05f0 03       		.byte	0x3
 2856 05f1 00000000 		.4byte	buffer
 2857 05f5 1C       		.uleb128 0x1c
 2858 05f6 18040000 		.4byte	.LASF95
 2859 05fa 01       		.byte	0x1
 2860 05fb 3E       		.byte	0x3e
 2861 05fc 68000000 		.4byte	0x68
 2862 0600 05       		.uleb128 0x5
 2863 0601 03       		.byte	0x3
 2864 0602 00000000 		.4byte	quadDec2Count
 2865 0606 1C       		.uleb128 0x1c
 2866 0607 31020000 		.4byte	.LASF96
 2867 060b 01       		.byte	0x1
 2868 060c 3F       		.byte	0x3f
 2869 060d 68000000 		.4byte	0x68
 2870 0611 05       		.uleb128 0x5
 2871 0612 03       		.byte	0x3
 2872 0613 00000000 		.4byte	timerInt
 2873 0617 1C       		.uleb128 0x1c
 2874 0618 B9020000 		.4byte	.LASF97
 2875 061c 01       		.byte	0x1
 2876 061d 40       		.byte	0x40
 2877 061e 68000000 		.4byte	0x68
 2878 0622 05       		.uleb128 0x5
 2879 0623 03       		.byte	0x3
 2880 0624 00000000 		.4byte	keepLedOn
 2881 0628 1C       		.uleb128 0x1c
 2882 0629 7B000000 		.4byte	.LASF98
 2883 062d 01       		.byte	0x1
 2884 062e 41       		.byte	0x41
 2885 062f AE000000 		.4byte	0xae
 2886 0633 05       		.uleb128 0x5
 2887 0634 03       		.byte	0x3
 2888 0635 00000000 		.4byte	stopBuffer
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 61


 2889 0639 1C       		.uleb128 0x1c
 2890 063a CC010000 		.4byte	.LASF99
 2891 063e 01       		.byte	0x1
 2892 063f C4       		.byte	0xc4
 2893 0640 D2000000 		.4byte	0xd2
 2894 0644 05       		.uleb128 0x5
 2895 0645 03       		.byte	0x3
 2896 0646 00000000 		.4byte	xBlocksize
 2897 064a 1C       		.uleb128 0x1c
 2898 064b CC020000 		.4byte	.LASF100
 2899 064f 01       		.byte	0x1
 2900 0650 C5       		.byte	0xc5
 2901 0651 D2000000 		.4byte	0xd2
 2902 0655 05       		.uleb128 0x5
 2903 0656 03       		.byte	0x3
 2904 0657 00000000 		.4byte	yBlocksize
 2905 065b 1C       		.uleb128 0x1c
 2906 065c B7040000 		.4byte	.LASF101
 2907 0660 01       		.byte	0x1
 2908 0661 C6       		.byte	0xc6
 2909 0662 96000000 		.4byte	0x96
 2910 0666 05       		.uleb128 0x5
 2911 0667 03       		.byte	0x3
 2912 0668 00000000 		.4byte	currentRow
 2913 066c 1C       		.uleb128 0x1c
 2914 066d 8E020000 		.4byte	.LASF102
 2915 0671 01       		.byte	0x1
 2916 0672 C7       		.byte	0xc7
 2917 0673 96000000 		.4byte	0x96
 2918 0677 05       		.uleb128 0x5
 2919 0678 03       		.byte	0x3
 2920 0679 00000000 		.4byte	currentCol
 2921 067d 20       		.uleb128 0x20
 2922 067e 52040000 		.4byte	.LASF103
 2923 0682 01       		.byte	0x1
 2924 0683 1E01     		.2byte	0x11e
 2925 0685 96000000 		.4byte	0x96
 2926 0689 05       		.uleb128 0x5
 2927 068a 03       		.byte	0x3
 2928 068b 00000000 		.4byte	stoppedAfterTurn
 2929 068f 00       		.byte	0
 2930              		.section	.debug_abbrev,"",%progbits
 2931              	.Ldebug_abbrev0:
 2932 0000 01       		.uleb128 0x1
 2933 0001 11       		.uleb128 0x11
 2934 0002 01       		.byte	0x1
 2935 0003 25       		.uleb128 0x25
 2936 0004 0E       		.uleb128 0xe
 2937 0005 13       		.uleb128 0x13
 2938 0006 0B       		.uleb128 0xb
 2939 0007 03       		.uleb128 0x3
 2940 0008 0E       		.uleb128 0xe
 2941 0009 1B       		.uleb128 0x1b
 2942 000a 0E       		.uleb128 0xe
 2943 000b 55       		.uleb128 0x55
 2944 000c 17       		.uleb128 0x17
 2945 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 62


 2946 000e 01       		.uleb128 0x1
 2947 000f 10       		.uleb128 0x10
 2948 0010 17       		.uleb128 0x17
 2949 0011 00       		.byte	0
 2950 0012 00       		.byte	0
 2951 0013 02       		.uleb128 0x2
 2952 0014 24       		.uleb128 0x24
 2953 0015 00       		.byte	0
 2954 0016 0B       		.uleb128 0xb
 2955 0017 0B       		.uleb128 0xb
 2956 0018 3E       		.uleb128 0x3e
 2957 0019 0B       		.uleb128 0xb
 2958 001a 03       		.uleb128 0x3
 2959 001b 0E       		.uleb128 0xe
 2960 001c 00       		.byte	0
 2961 001d 00       		.byte	0
 2962 001e 03       		.uleb128 0x3
 2963 001f 16       		.uleb128 0x16
 2964 0020 00       		.byte	0
 2965 0021 03       		.uleb128 0x3
 2966 0022 0E       		.uleb128 0xe
 2967 0023 3A       		.uleb128 0x3a
 2968 0024 0B       		.uleb128 0xb
 2969 0025 3B       		.uleb128 0x3b
 2970 0026 0B       		.uleb128 0xb
 2971 0027 49       		.uleb128 0x49
 2972 0028 13       		.uleb128 0x13
 2973 0029 00       		.byte	0
 2974 002a 00       		.byte	0
 2975 002b 04       		.uleb128 0x4
 2976 002c 24       		.uleb128 0x24
 2977 002d 00       		.byte	0
 2978 002e 0B       		.uleb128 0xb
 2979 002f 0B       		.uleb128 0xb
 2980 0030 3E       		.uleb128 0x3e
 2981 0031 0B       		.uleb128 0xb
 2982 0032 03       		.uleb128 0x3
 2983 0033 08       		.uleb128 0x8
 2984 0034 00       		.byte	0
 2985 0035 00       		.byte	0
 2986 0036 05       		.uleb128 0x5
 2987 0037 16       		.uleb128 0x16
 2988 0038 00       		.byte	0
 2989 0039 03       		.uleb128 0x3
 2990 003a 0E       		.uleb128 0xe
 2991 003b 3A       		.uleb128 0x3a
 2992 003c 0B       		.uleb128 0xb
 2993 003d 3B       		.uleb128 0x3b
 2994 003e 05       		.uleb128 0x5
 2995 003f 49       		.uleb128 0x49
 2996 0040 13       		.uleb128 0x13
 2997 0041 00       		.byte	0
 2998 0042 00       		.byte	0
 2999 0043 06       		.uleb128 0x6
 3000 0044 13       		.uleb128 0x13
 3001 0045 01       		.byte	0x1
 3002 0046 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 63


 3003 0047 0E       		.uleb128 0xe
 3004 0048 0B       		.uleb128 0xb
 3005 0049 0B       		.uleb128 0xb
 3006 004a 3A       		.uleb128 0x3a
 3007 004b 0B       		.uleb128 0xb
 3008 004c 3B       		.uleb128 0x3b
 3009 004d 0B       		.uleb128 0xb
 3010 004e 01       		.uleb128 0x1
 3011 004f 13       		.uleb128 0x13
 3012 0050 00       		.byte	0
 3013 0051 00       		.byte	0
 3014 0052 07       		.uleb128 0x7
 3015 0053 0D       		.uleb128 0xd
 3016 0054 00       		.byte	0
 3017 0055 03       		.uleb128 0x3
 3018 0056 0E       		.uleb128 0xe
 3019 0057 3A       		.uleb128 0x3a
 3020 0058 0B       		.uleb128 0xb
 3021 0059 3B       		.uleb128 0x3b
 3022 005a 0B       		.uleb128 0xb
 3023 005b 49       		.uleb128 0x49
 3024 005c 13       		.uleb128 0x13
 3025 005d 38       		.uleb128 0x38
 3026 005e 0B       		.uleb128 0xb
 3027 005f 00       		.byte	0
 3028 0060 00       		.byte	0
 3029 0061 08       		.uleb128 0x8
 3030 0062 04       		.uleb128 0x4
 3031 0063 01       		.byte	0x1
 3032 0064 03       		.uleb128 0x3
 3033 0065 0E       		.uleb128 0xe
 3034 0066 0B       		.uleb128 0xb
 3035 0067 0B       		.uleb128 0xb
 3036 0068 49       		.uleb128 0x49
 3037 0069 13       		.uleb128 0x13
 3038 006a 3A       		.uleb128 0x3a
 3039 006b 0B       		.uleb128 0xb
 3040 006c 3B       		.uleb128 0x3b
 3041 006d 0B       		.uleb128 0xb
 3042 006e 01       		.uleb128 0x1
 3043 006f 13       		.uleb128 0x13
 3044 0070 00       		.byte	0
 3045 0071 00       		.byte	0
 3046 0072 09       		.uleb128 0x9
 3047 0073 28       		.uleb128 0x28
 3048 0074 00       		.byte	0
 3049 0075 03       		.uleb128 0x3
 3050 0076 0E       		.uleb128 0xe
 3051 0077 1C       		.uleb128 0x1c
 3052 0078 0B       		.uleb128 0xb
 3053 0079 00       		.byte	0
 3054 007a 00       		.byte	0
 3055 007b 0A       		.uleb128 0xa
 3056 007c 28       		.uleb128 0x28
 3057 007d 00       		.byte	0
 3058 007e 03       		.uleb128 0x3
 3059 007f 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 64


 3060 0080 1C       		.uleb128 0x1c
 3061 0081 0B       		.uleb128 0xb
 3062 0082 00       		.byte	0
 3063 0083 00       		.byte	0
 3064 0084 0B       		.uleb128 0xb
 3065 0085 2E       		.uleb128 0x2e
 3066 0086 01       		.byte	0x1
 3067 0087 3F       		.uleb128 0x3f
 3068 0088 19       		.uleb128 0x19
 3069 0089 03       		.uleb128 0x3
 3070 008a 0E       		.uleb128 0xe
 3071 008b 3A       		.uleb128 0x3a
 3072 008c 0B       		.uleb128 0xb
 3073 008d 3B       		.uleb128 0x3b
 3074 008e 0B       		.uleb128 0xb
 3075 008f 27       		.uleb128 0x27
 3076 0090 19       		.uleb128 0x19
 3077 0091 11       		.uleb128 0x11
 3078 0092 01       		.uleb128 0x1
 3079 0093 12       		.uleb128 0x12
 3080 0094 06       		.uleb128 0x6
 3081 0095 40       		.uleb128 0x40
 3082 0096 18       		.uleb128 0x18
 3083 0097 9642     		.uleb128 0x2116
 3084 0099 19       		.uleb128 0x19
 3085 009a 01       		.uleb128 0x1
 3086 009b 13       		.uleb128 0x13
 3087 009c 00       		.byte	0
 3088 009d 00       		.byte	0
 3089 009e 0C       		.uleb128 0xc
 3090 009f 0B       		.uleb128 0xb
 3091 00a0 01       		.byte	0x1
 3092 00a1 11       		.uleb128 0x11
 3093 00a2 01       		.uleb128 0x1
 3094 00a3 12       		.uleb128 0x12
 3095 00a4 06       		.uleb128 0x6
 3096 00a5 00       		.byte	0
 3097 00a6 00       		.byte	0
 3098 00a7 0D       		.uleb128 0xd
 3099 00a8 34       		.uleb128 0x34
 3100 00a9 00       		.byte	0
 3101 00aa 03       		.uleb128 0x3
 3102 00ab 0E       		.uleb128 0xe
 3103 00ac 3A       		.uleb128 0x3a
 3104 00ad 0B       		.uleb128 0xb
 3105 00ae 3B       		.uleb128 0x3b
 3106 00af 0B       		.uleb128 0xb
 3107 00b0 49       		.uleb128 0x49
 3108 00b1 13       		.uleb128 0x13
 3109 00b2 02       		.uleb128 0x2
 3110 00b3 18       		.uleb128 0x18
 3111 00b4 00       		.byte	0
 3112 00b5 00       		.byte	0
 3113 00b6 0E       		.uleb128 0xe
 3114 00b7 2E       		.uleb128 0x2e
 3115 00b8 00       		.byte	0
 3116 00b9 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 65


 3117 00ba 19       		.uleb128 0x19
 3118 00bb 03       		.uleb128 0x3
 3119 00bc 0E       		.uleb128 0xe
 3120 00bd 3A       		.uleb128 0x3a
 3121 00be 0B       		.uleb128 0xb
 3122 00bf 3B       		.uleb128 0x3b
 3123 00c0 0B       		.uleb128 0xb
 3124 00c1 27       		.uleb128 0x27
 3125 00c2 19       		.uleb128 0x19
 3126 00c3 11       		.uleb128 0x11
 3127 00c4 01       		.uleb128 0x1
 3128 00c5 12       		.uleb128 0x12
 3129 00c6 06       		.uleb128 0x6
 3130 00c7 40       		.uleb128 0x40
 3131 00c8 18       		.uleb128 0x18
 3132 00c9 9742     		.uleb128 0x2117
 3133 00cb 19       		.uleb128 0x19
 3134 00cc 00       		.byte	0
 3135 00cd 00       		.byte	0
 3136 00ce 0F       		.uleb128 0xf
 3137 00cf 2E       		.uleb128 0x2e
 3138 00d0 00       		.byte	0
 3139 00d1 3F       		.uleb128 0x3f
 3140 00d2 19       		.uleb128 0x19
 3141 00d3 03       		.uleb128 0x3
 3142 00d4 0E       		.uleb128 0xe
 3143 00d5 3A       		.uleb128 0x3a
 3144 00d6 0B       		.uleb128 0xb
 3145 00d7 3B       		.uleb128 0x3b
 3146 00d8 0B       		.uleb128 0xb
 3147 00d9 27       		.uleb128 0x27
 3148 00da 19       		.uleb128 0x19
 3149 00db 11       		.uleb128 0x11
 3150 00dc 01       		.uleb128 0x1
 3151 00dd 12       		.uleb128 0x12
 3152 00de 06       		.uleb128 0x6
 3153 00df 40       		.uleb128 0x40
 3154 00e0 18       		.uleb128 0x18
 3155 00e1 9642     		.uleb128 0x2116
 3156 00e3 19       		.uleb128 0x19
 3157 00e4 00       		.byte	0
 3158 00e5 00       		.byte	0
 3159 00e6 10       		.uleb128 0x10
 3160 00e7 2E       		.uleb128 0x2e
 3161 00e8 00       		.byte	0
 3162 00e9 3F       		.uleb128 0x3f
 3163 00ea 19       		.uleb128 0x19
 3164 00eb 03       		.uleb128 0x3
 3165 00ec 0E       		.uleb128 0xe
 3166 00ed 3A       		.uleb128 0x3a
 3167 00ee 0B       		.uleb128 0xb
 3168 00ef 3B       		.uleb128 0x3b
 3169 00f0 0B       		.uleb128 0xb
 3170 00f1 49       		.uleb128 0x49
 3171 00f2 13       		.uleb128 0x13
 3172 00f3 11       		.uleb128 0x11
 3173 00f4 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 66


 3174 00f5 12       		.uleb128 0x12
 3175 00f6 06       		.uleb128 0x6
 3176 00f7 40       		.uleb128 0x40
 3177 00f8 18       		.uleb128 0x18
 3178 00f9 9642     		.uleb128 0x2116
 3179 00fb 19       		.uleb128 0x19
 3180 00fc 00       		.byte	0
 3181 00fd 00       		.byte	0
 3182 00fe 11       		.uleb128 0x11
 3183 00ff 2E       		.uleb128 0x2e
 3184 0100 01       		.byte	0x1
 3185 0101 3F       		.uleb128 0x3f
 3186 0102 19       		.uleb128 0x19
 3187 0103 03       		.uleb128 0x3
 3188 0104 0E       		.uleb128 0xe
 3189 0105 3A       		.uleb128 0x3a
 3190 0106 0B       		.uleb128 0xb
 3191 0107 3B       		.uleb128 0x3b
 3192 0108 0B       		.uleb128 0xb
 3193 0109 27       		.uleb128 0x27
 3194 010a 19       		.uleb128 0x19
 3195 010b 49       		.uleb128 0x49
 3196 010c 13       		.uleb128 0x13
 3197 010d 11       		.uleb128 0x11
 3198 010e 01       		.uleb128 0x1
 3199 010f 12       		.uleb128 0x12
 3200 0110 06       		.uleb128 0x6
 3201 0111 40       		.uleb128 0x40
 3202 0112 18       		.uleb128 0x18
 3203 0113 9642     		.uleb128 0x2116
 3204 0115 19       		.uleb128 0x19
 3205 0116 01       		.uleb128 0x1
 3206 0117 13       		.uleb128 0x13
 3207 0118 00       		.byte	0
 3208 0119 00       		.byte	0
 3209 011a 12       		.uleb128 0x12
 3210 011b 05       		.uleb128 0x5
 3211 011c 00       		.byte	0
 3212 011d 03       		.uleb128 0x3
 3213 011e 0E       		.uleb128 0xe
 3214 011f 3A       		.uleb128 0x3a
 3215 0120 0B       		.uleb128 0xb
 3216 0121 3B       		.uleb128 0x3b
 3217 0122 0B       		.uleb128 0xb
 3218 0123 49       		.uleb128 0x49
 3219 0124 13       		.uleb128 0x13
 3220 0125 02       		.uleb128 0x2
 3221 0126 18       		.uleb128 0x18
 3222 0127 00       		.byte	0
 3223 0128 00       		.byte	0
 3224 0129 13       		.uleb128 0x13
 3225 012a 34       		.uleb128 0x34
 3226 012b 00       		.byte	0
 3227 012c 03       		.uleb128 0x3
 3228 012d 08       		.uleb128 0x8
 3229 012e 3A       		.uleb128 0x3a
 3230 012f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 67


 3231 0130 3B       		.uleb128 0x3b
 3232 0131 0B       		.uleb128 0xb
 3233 0132 49       		.uleb128 0x49
 3234 0133 13       		.uleb128 0x13
 3235 0134 02       		.uleb128 0x2
 3236 0135 18       		.uleb128 0x18
 3237 0136 00       		.byte	0
 3238 0137 00       		.byte	0
 3239 0138 14       		.uleb128 0x14
 3240 0139 2E       		.uleb128 0x2e
 3241 013a 00       		.byte	0
 3242 013b 3F       		.uleb128 0x3f
 3243 013c 19       		.uleb128 0x19
 3244 013d 03       		.uleb128 0x3
 3245 013e 0E       		.uleb128 0xe
 3246 013f 3A       		.uleb128 0x3a
 3247 0140 0B       		.uleb128 0xb
 3248 0141 3B       		.uleb128 0x3b
 3249 0142 0B       		.uleb128 0xb
 3250 0143 11       		.uleb128 0x11
 3251 0144 01       		.uleb128 0x1
 3252 0145 12       		.uleb128 0x12
 3253 0146 06       		.uleb128 0x6
 3254 0147 40       		.uleb128 0x40
 3255 0148 18       		.uleb128 0x18
 3256 0149 9742     		.uleb128 0x2117
 3257 014b 19       		.uleb128 0x19
 3258 014c 00       		.byte	0
 3259 014d 00       		.byte	0
 3260 014e 15       		.uleb128 0x15
 3261 014f 2E       		.uleb128 0x2e
 3262 0150 01       		.byte	0x1
 3263 0151 3F       		.uleb128 0x3f
 3264 0152 19       		.uleb128 0x19
 3265 0153 03       		.uleb128 0x3
 3266 0154 0E       		.uleb128 0xe
 3267 0155 3A       		.uleb128 0x3a
 3268 0156 0B       		.uleb128 0xb
 3269 0157 3B       		.uleb128 0x3b
 3270 0158 0B       		.uleb128 0xb
 3271 0159 49       		.uleb128 0x49
 3272 015a 13       		.uleb128 0x13
 3273 015b 11       		.uleb128 0x11
 3274 015c 01       		.uleb128 0x1
 3275 015d 12       		.uleb128 0x12
 3276 015e 06       		.uleb128 0x6
 3277 015f 40       		.uleb128 0x40
 3278 0160 18       		.uleb128 0x18
 3279 0161 9742     		.uleb128 0x2117
 3280 0163 19       		.uleb128 0x19
 3281 0164 01       		.uleb128 0x1
 3282 0165 13       		.uleb128 0x13
 3283 0166 00       		.byte	0
 3284 0167 00       		.byte	0
 3285 0168 16       		.uleb128 0x16
 3286 0169 2E       		.uleb128 0x2e
 3287 016a 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 68


 3288 016b 3F       		.uleb128 0x3f
 3289 016c 19       		.uleb128 0x19
 3290 016d 03       		.uleb128 0x3
 3291 016e 0E       		.uleb128 0xe
 3292 016f 3A       		.uleb128 0x3a
 3293 0170 0B       		.uleb128 0xb
 3294 0171 3B       		.uleb128 0x3b
 3295 0172 05       		.uleb128 0x5
 3296 0173 49       		.uleb128 0x49
 3297 0174 13       		.uleb128 0x13
 3298 0175 11       		.uleb128 0x11
 3299 0176 01       		.uleb128 0x1
 3300 0177 12       		.uleb128 0x12
 3301 0178 06       		.uleb128 0x6
 3302 0179 40       		.uleb128 0x40
 3303 017a 18       		.uleb128 0x18
 3304 017b 9642     		.uleb128 0x2116
 3305 017d 19       		.uleb128 0x19
 3306 017e 01       		.uleb128 0x1
 3307 017f 13       		.uleb128 0x13
 3308 0180 00       		.byte	0
 3309 0181 00       		.byte	0
 3310 0182 17       		.uleb128 0x17
 3311 0183 34       		.uleb128 0x34
 3312 0184 00       		.byte	0
 3313 0185 03       		.uleb128 0x3
 3314 0186 0E       		.uleb128 0xe
 3315 0187 3A       		.uleb128 0x3a
 3316 0188 0B       		.uleb128 0xb
 3317 0189 3B       		.uleb128 0x3b
 3318 018a 05       		.uleb128 0x5
 3319 018b 49       		.uleb128 0x49
 3320 018c 13       		.uleb128 0x13
 3321 018d 02       		.uleb128 0x2
 3322 018e 18       		.uleb128 0x18
 3323 018f 00       		.byte	0
 3324 0190 00       		.byte	0
 3325 0191 18       		.uleb128 0x18
 3326 0192 2E       		.uleb128 0x2e
 3327 0193 00       		.byte	0
 3328 0194 3F       		.uleb128 0x3f
 3329 0195 19       		.uleb128 0x19
 3330 0196 03       		.uleb128 0x3
 3331 0197 0E       		.uleb128 0xe
 3332 0198 3A       		.uleb128 0x3a
 3333 0199 0B       		.uleb128 0xb
 3334 019a 3B       		.uleb128 0x3b
 3335 019b 05       		.uleb128 0x5
 3336 019c 11       		.uleb128 0x11
 3337 019d 01       		.uleb128 0x1
 3338 019e 12       		.uleb128 0x12
 3339 019f 06       		.uleb128 0x6
 3340 01a0 40       		.uleb128 0x40
 3341 01a1 18       		.uleb128 0x18
 3342 01a2 9642     		.uleb128 0x2116
 3343 01a4 19       		.uleb128 0x19
 3344 01a5 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 69


 3345 01a6 00       		.byte	0
 3346 01a7 19       		.uleb128 0x19
 3347 01a8 34       		.uleb128 0x34
 3348 01a9 00       		.byte	0
 3349 01aa 03       		.uleb128 0x3
 3350 01ab 0E       		.uleb128 0xe
 3351 01ac 3A       		.uleb128 0x3a
 3352 01ad 0B       		.uleb128 0xb
 3353 01ae 3B       		.uleb128 0x3b
 3354 01af 05       		.uleb128 0x5
 3355 01b0 49       		.uleb128 0x49
 3356 01b1 13       		.uleb128 0x13
 3357 01b2 3F       		.uleb128 0x3f
 3358 01b3 19       		.uleb128 0x19
 3359 01b4 3C       		.uleb128 0x3c
 3360 01b5 19       		.uleb128 0x19
 3361 01b6 00       		.byte	0
 3362 01b7 00       		.byte	0
 3363 01b8 1A       		.uleb128 0x1a
 3364 01b9 35       		.uleb128 0x35
 3365 01ba 00       		.byte	0
 3366 01bb 49       		.uleb128 0x49
 3367 01bc 13       		.uleb128 0x13
 3368 01bd 00       		.byte	0
 3369 01be 00       		.byte	0
 3370 01bf 1B       		.uleb128 0x1b
 3371 01c0 34       		.uleb128 0x34
 3372 01c1 00       		.byte	0
 3373 01c2 03       		.uleb128 0x3
 3374 01c3 08       		.uleb128 0x8
 3375 01c4 3A       		.uleb128 0x3a
 3376 01c5 0B       		.uleb128 0xb
 3377 01c6 3B       		.uleb128 0x3b
 3378 01c7 0B       		.uleb128 0xb
 3379 01c8 49       		.uleb128 0x49
 3380 01c9 13       		.uleb128 0x13
 3381 01ca 3F       		.uleb128 0x3f
 3382 01cb 19       		.uleb128 0x19
 3383 01cc 02       		.uleb128 0x2
 3384 01cd 18       		.uleb128 0x18
 3385 01ce 00       		.byte	0
 3386 01cf 00       		.byte	0
 3387 01d0 1C       		.uleb128 0x1c
 3388 01d1 34       		.uleb128 0x34
 3389 01d2 00       		.byte	0
 3390 01d3 03       		.uleb128 0x3
 3391 01d4 0E       		.uleb128 0xe
 3392 01d5 3A       		.uleb128 0x3a
 3393 01d6 0B       		.uleb128 0xb
 3394 01d7 3B       		.uleb128 0x3b
 3395 01d8 0B       		.uleb128 0xb
 3396 01d9 49       		.uleb128 0x49
 3397 01da 13       		.uleb128 0x13
 3398 01db 3F       		.uleb128 0x3f
 3399 01dc 19       		.uleb128 0x19
 3400 01dd 02       		.uleb128 0x2
 3401 01de 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 70


 3402 01df 00       		.byte	0
 3403 01e0 00       		.byte	0
 3404 01e1 1D       		.uleb128 0x1d
 3405 01e2 01       		.uleb128 0x1
 3406 01e3 01       		.byte	0x1
 3407 01e4 49       		.uleb128 0x49
 3408 01e5 13       		.uleb128 0x13
 3409 01e6 01       		.uleb128 0x1
 3410 01e7 13       		.uleb128 0x13
 3411 01e8 00       		.byte	0
 3412 01e9 00       		.byte	0
 3413 01ea 1E       		.uleb128 0x1e
 3414 01eb 21       		.uleb128 0x21
 3415 01ec 00       		.byte	0
 3416 01ed 49       		.uleb128 0x49
 3417 01ee 13       		.uleb128 0x13
 3418 01ef 2F       		.uleb128 0x2f
 3419 01f0 0B       		.uleb128 0xb
 3420 01f1 00       		.byte	0
 3421 01f2 00       		.byte	0
 3422 01f3 1F       		.uleb128 0x1f
 3423 01f4 34       		.uleb128 0x34
 3424 01f5 00       		.byte	0
 3425 01f6 03       		.uleb128 0x3
 3426 01f7 08       		.uleb128 0x8
 3427 01f8 3A       		.uleb128 0x3a
 3428 01f9 0B       		.uleb128 0xb
 3429 01fa 3B       		.uleb128 0x3b
 3430 01fb 0B       		.uleb128 0xb
 3431 01fc 49       		.uleb128 0x49
 3432 01fd 13       		.uleb128 0x13
 3433 01fe 3F       		.uleb128 0x3f
 3434 01ff 19       		.uleb128 0x19
 3435 0200 3C       		.uleb128 0x3c
 3436 0201 19       		.uleb128 0x19
 3437 0202 00       		.byte	0
 3438 0203 00       		.byte	0
 3439 0204 20       		.uleb128 0x20
 3440 0205 34       		.uleb128 0x34
 3441 0206 00       		.byte	0
 3442 0207 03       		.uleb128 0x3
 3443 0208 0E       		.uleb128 0xe
 3444 0209 3A       		.uleb128 0x3a
 3445 020a 0B       		.uleb128 0xb
 3446 020b 3B       		.uleb128 0x3b
 3447 020c 05       		.uleb128 0x5
 3448 020d 49       		.uleb128 0x49
 3449 020e 13       		.uleb128 0x13
 3450 020f 3F       		.uleb128 0x3f
 3451 0210 19       		.uleb128 0x19
 3452 0211 02       		.uleb128 0x2
 3453 0212 18       		.uleb128 0x18
 3454 0213 00       		.byte	0
 3455 0214 00       		.byte	0
 3456 0215 00       		.byte	0
 3457              		.section	.debug_aranges,"",%progbits
 3458 0000 74000000 		.4byte	0x74
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 71


 3459 0004 0200     		.2byte	0x2
 3460 0006 00000000 		.4byte	.Ldebug_info0
 3461 000a 04       		.byte	0x4
 3462 000b 00       		.byte	0
 3463 000c 0000     		.2byte	0
 3464 000e 0000     		.2byte	0
 3465 0010 00000000 		.4byte	.LFB64
 3466 0014 F4000000 		.4byte	.LFE64-.LFB64
 3467 0018 00000000 		.4byte	.LFB65
 3468 001c 18000000 		.4byte	.LFE65-.LFB65
 3469 0020 00000000 		.4byte	.LFB66
 3470 0024 18000000 		.4byte	.LFE66-.LFB66
 3471 0028 00000000 		.4byte	.LFB67
 3472 002c 18000000 		.4byte	.LFE67-.LFB67
 3473 0030 00000000 		.4byte	.LFB68
 3474 0034 18000000 		.4byte	.LFE68-.LFB68
 3475 0038 00000000 		.4byte	.LFB69
 3476 003c 38000000 		.4byte	.LFE69-.LFB69
 3477 0040 00000000 		.4byte	.LFB70
 3478 0044 A0000000 		.4byte	.LFE70-.LFB70
 3479 0048 00000000 		.4byte	.LFB71
 3480 004c 54000000 		.4byte	.LFE71-.LFB71
 3481 0050 00000000 		.4byte	.LFB72
 3482 0054 34000000 		.4byte	.LFE72-.LFB72
 3483 0058 00000000 		.4byte	.LFB73
 3484 005c 98040000 		.4byte	.LFE73-.LFB73
 3485 0060 00000000 		.4byte	.LFB74
 3486 0064 F0020000 		.4byte	.LFE74-.LFB74
 3487 0068 00000000 		.4byte	.LFB75
 3488 006c 98000000 		.4byte	.LFE75-.LFB75
 3489 0070 00000000 		.4byte	0
 3490 0074 00000000 		.4byte	0
 3491              		.section	.debug_ranges,"",%progbits
 3492              	.Ldebug_ranges0:
 3493 0000 00000000 		.4byte	.LFB64
 3494 0004 F4000000 		.4byte	.LFE64
 3495 0008 00000000 		.4byte	.LFB65
 3496 000c 18000000 		.4byte	.LFE65
 3497 0010 00000000 		.4byte	.LFB66
 3498 0014 18000000 		.4byte	.LFE66
 3499 0018 00000000 		.4byte	.LFB67
 3500 001c 18000000 		.4byte	.LFE67
 3501 0020 00000000 		.4byte	.LFB68
 3502 0024 18000000 		.4byte	.LFE68
 3503 0028 00000000 		.4byte	.LFB69
 3504 002c 38000000 		.4byte	.LFE69
 3505 0030 00000000 		.4byte	.LFB70
 3506 0034 A0000000 		.4byte	.LFE70
 3507 0038 00000000 		.4byte	.LFB71
 3508 003c 54000000 		.4byte	.LFE71
 3509 0040 00000000 		.4byte	.LFB72
 3510 0044 34000000 		.4byte	.LFE72
 3511 0048 00000000 		.4byte	.LFB73
 3512 004c 98040000 		.4byte	.LFE73
 3513 0050 00000000 		.4byte	.LFB74
 3514 0054 F0020000 		.4byte	.LFE74
 3515 0058 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 72


 3516 005c 98000000 		.4byte	.LFE75
 3517 0060 00000000 		.4byte	0
 3518 0064 00000000 		.4byte	0
 3519              		.section	.debug_line,"",%progbits
 3520              	.Ldebug_line0:
 3521 0000 FB030000 		.section	.debug_str,"MS",%progbits,1
 3521      02005F01 
 3521      00000201 
 3521      FB0E0D00 
 3521      01010101 
 3522              	.LASF58:
 3523 0000 53365F44 		.ascii	"S6_DETECTED\000"
 3523      45544543 
 3523      54454400 
 3524              	.LASF40:
 3525 000c 5475726E 		.ascii	"TurnLeft\000"
 3525      4C656674 
 3525      00
 3526              	.LASF70:
 3527 0015 74735F65 		.ascii	"ts_enc\000"
 3527      6E6300
 3528              	.LASF48:
 3529 001c 466F7277 		.ascii	"ForwardAfterTurn\000"
 3529      61726441 
 3529      66746572 
 3529      5475726E 
 3529      00
 3530              	.LASF79:
 3531 002d 666C6167 		.ascii	"flag_packet\000"
 3531      5F706163 
 3531      6B657400 
 3532              	.LASF45:
 3533 0039 77616974 		.ascii	"waitForTurn\000"
 3533      466F7254 
 3533      75726E00 
 3534              	.LASF76:
 3535 0045 666C6167 		.ascii	"flag_ts_speed\000"
 3535      5F74735F 
 3535      73706565 
 3535      6400
 3536              	.LASF34:
 3537 0053 67325F78 		.ascii	"g2_xpos\000"
 3537      706F7300 
 3538              	.LASF2:
 3539 005b 73686F72 		.ascii	"short int\000"
 3539      7420696E 
 3539      7400
 3540              	.LASF87:
 3541 0065 73797374 		.ascii	"system_state\000"
 3541      656D5F73 
 3541      74617465 
 3541      00
 3542              	.LASF10:
 3543 0072 73697A65 		.ascii	"sizetype\000"
 3543      74797065 
 3543      00
 3544              	.LASF98:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 73


 3545 007b 73746F70 		.ascii	"stopBuffer\000"
 3545      42756666 
 3545      657200
 3546              	.LASF50:
 3547 0086 44697265 		.ascii	"DirectionState\000"
 3547      6374696F 
 3547      6E537461 
 3547      746500
 3548              	.LASF86:
 3549 0095 75736242 		.ascii	"usbBuffer\000"
 3549      75666665 
 3549      7200
 3550              	.LASF104:
 3551 009f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3551      43313120 
 3551      352E342E 
 3551      31203230 
 3551      31363036 
 3552 00d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3552      20726576 
 3552      6973696F 
 3552      6E203233 
 3552      37373135 
 3553 0105 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3553      66756E63 
 3553      74696F6E 
 3553      2D736563 
 3553      74696F6E 
 3554              	.LASF60:
 3555 012d 6D61696E 		.ascii	"main\000"
 3555      00
 3556              	.LASF46:
 3557 0132 77616974 		.ascii	"waitForRightTurn\000"
 3557      466F7252 
 3557      69676874 
 3557      5475726E 
 3557      00
 3558              	.LASF63:
 3559 0143 4765744E 		.ascii	"GetNextStep\000"
 3559      65787453 
 3559      74657000 
 3560              	.LASF56:
 3561 014f 53345F44 		.ascii	"S4_DETECTED\000"
 3561      45544543 
 3561      54454400 
 3562              	.LASF41:
 3563 015b 41646A75 		.ascii	"AdjustToTheLeft\000"
 3563      7374546F 
 3563      5468654C 
 3563      65667400 
 3564              	.LASF15:
 3565 016b 75696E74 		.ascii	"uint16\000"
 3565      313600
 3566              	.LASF22:
 3567 0172 696E6465 		.ascii	"index\000"
 3567      7800
 3568              	.LASF62:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 74


 3569 0178 73706565 		.ascii	"speedTimer\000"
 3569      6454696D 
 3569      657200
 3570              	.LASF18:
 3571 0183 696E7431 		.ascii	"int16\000"
 3571      3600
 3572              	.LASF14:
 3573 0189 75696E74 		.ascii	"uint8\000"
 3573      3800
 3574              	.LASF33:
 3575 018f 67315F64 		.ascii	"g1_direction\000"
 3575      69726563 
 3575      74696F6E 
 3575      00
 3576              	.LASF84:
 3577 019c 6C696E65 		.ascii	"line\000"
 3577      00
 3578              	.LASF19:
 3579 01a1 666C6F61 		.ascii	"float\000"
 3579      7400
 3580              	.LASF54:
 3581 01a7 52696768 		.ascii	"Right\000"
 3581      7400
 3582              	.LASF61:
 3583 01ad 6E657744 		.ascii	"newDistance\000"
 3583      69737461 
 3583      6E636500 
 3584              	.LASF6:
 3585 01b9 6C6F6E67 		.ascii	"long long int\000"
 3585      206C6F6E 
 3585      6720696E 
 3585      7400
 3586              	.LASF17:
 3587 01c7 696E7438 		.ascii	"int8\000"
 3587      00
 3588              	.LASF99:
 3589 01cc 78426C6F 		.ascii	"xBlocksize\000"
 3589      636B7369 
 3589      7A6500
 3590              	.LASF75:
 3591 01d7 666C6167 		.ascii	"flag_ts_update\000"
 3591      5F74735F 
 3591      75706461 
 3591      746500
 3592              	.LASF35:
 3593 01e6 67325F79 		.ascii	"g2_ypos\000"
 3593      706F7300 
 3594              	.LASF29:
 3595 01ee 67305F64 		.ascii	"g0_direction\000"
 3595      69726563 
 3595      74696F6E 
 3595      00
 3596              	.LASF26:
 3597 01fb 67305F78 		.ascii	"g0_xpos\000"
 3597      706F7300 
 3598              	.LASF91:
 3599 0203 70726576 		.ascii	"previousOrientation\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 75


 3599      696F7573 
 3599      4F726965 
 3599      6E746174 
 3599      696F6E00 
 3600              	.LASF53:
 3601 0217 4C656674 		.ascii	"Left\000"
 3601      00
 3602              	.LASF65:
 3603 021c 43686563 		.ascii	"CheckSensorDirection\000"
 3603      6B53656E 
 3603      736F7244 
 3603      69726563 
 3603      74696F6E 
 3604              	.LASF96:
 3605 0231 74696D65 		.ascii	"timerInt\000"
 3605      72496E74 
 3605      00
 3606              	.LASF77:
 3607 023a 666C6167 		.ascii	"flag_ts_display\000"
 3607      5F74735F 
 3607      64697370 
 3607      6C617900 
 3608              	.LASF78:
 3609 024a 666C6167 		.ascii	"flag_rx\000"
 3609      5F727800 
 3610              	.LASF66:
 3611 0252 626C6F63 		.ascii	"blocksize\000"
 3611      6B73697A 
 3611      6500
 3612              	.LASF1:
 3613 025c 756E7369 		.ascii	"unsigned char\000"
 3613      676E6564 
 3613      20636861 
 3613      7200
 3614              	.LASF92:
 3615 026a 746F7461 		.ascii	"totalMilliseconds\000"
 3615      6C4D696C 
 3615      6C697365 
 3615      636F6E64 
 3615      7300
 3616              	.LASF85:
 3617 027c 656E7472 		.ascii	"entry\000"
 3617      7900
 3618              	.LASF9:
 3619 0282 6C6F6E67 		.ascii	"long double\000"
 3619      20646F75 
 3619      626C6500 
 3620              	.LASF102:
 3621 028e 63757272 		.ascii	"currentCol\000"
 3621      656E7443 
 3621      6F6C00
 3622              	.LASF89:
 3623 0299 70726576 		.ascii	"previousDirection\000"
 3623      696F7573 
 3623      44697265 
 3623      6374696F 
 3623      6E00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 76


 3624              	.LASF93:
 3625 02ab 746F7461 		.ascii	"totalDistance\000"
 3625      6C446973 
 3625      74616E63 
 3625      6500
 3626              	.LASF97:
 3627 02b9 6B656570 		.ascii	"keepLedOn\000"
 3627      4C65644F 
 3627      6E00
 3628              	.LASF28:
 3629 02c3 67305F73 		.ascii	"g0_speed\000"
 3629      70656564 
 3629      00
 3630              	.LASF100:
 3631 02cc 79426C6F 		.ascii	"yBlocksize\000"
 3631      636B7369 
 3631      7A6500
 3632              	.LASF81:
 3633 02d7 64617461 		.ascii	"dataready_flag\000"
 3633      72656164 
 3633      795F666C 
 3633      616700
 3634              	.LASF30:
 3635 02e6 67315F78 		.ascii	"g1_xpos\000"
 3635      706F7300 
 3636              	.LASF0:
 3637 02ee 7369676E 		.ascii	"signed char\000"
 3637      65642063 
 3637      68617200 
 3638              	.LASF13:
 3639 02fa 696E7433 		.ascii	"int32_t\000"
 3639      325F7400 
 3640              	.LASF7:
 3641 0302 6C6F6E67 		.ascii	"long long unsigned int\000"
 3641      206C6F6E 
 3641      6720756E 
 3641      7369676E 
 3641      65642069 
 3642              	.LASF42:
 3643 0319 41646A75 		.ascii	"AdjustToTheRight\000"
 3643      7374546F 
 3643      54686552 
 3643      69676874 
 3643      00
 3644              	.LASF8:
 3645 032a 756E7369 		.ascii	"unsigned int\000"
 3645      676E6564 
 3645      20696E74 
 3645      00
 3646              	.LASF71:
 3647 0337 74735F75 		.ascii	"ts_update\000"
 3647      70646174 
 3647      6500
 3648              	.LASF80:
 3649 0341 666C6167 		.ascii	"flag_KB_string\000"
 3649      5F4B425F 
 3649      73747269 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 77


 3649      6E6700
 3650              	.LASF68:
 3651 0350 53657452 		.ascii	"SetRobotMovement\000"
 3651      6F626F74 
 3651      4D6F7665 
 3651      6D656E74 
 3651      00
 3652              	.LASF59:
 3653 0361 54494D45 		.ascii	"TIMER_FINISH\000"
 3653      525F4649 
 3653      4E495348 
 3653      00
 3654              	.LASF36:
 3655 036e 67325F73 		.ascii	"g2_speed\000"
 3655      70656564 
 3655      00
 3656              	.LASF57:
 3657 0377 53355F44 		.ascii	"S5_DETECTED\000"
 3657      45544543 
 3657      54454400 
 3658              	.LASF3:
 3659 0383 73686F72 		.ascii	"short unsigned int\000"
 3659      7420756E 
 3659      7369676E 
 3659      65642069 
 3659      6E7400
 3660              	.LASF107:
 3661 0396 64617461 		.ascii	"data_main\000"
 3661      5F6D6169 
 3661      6E00
 3662              	.LASF67:
 3663 03a0 52657365 		.ascii	"ResetSensorFlags\000"
 3663      7453656E 
 3663      736F7246 
 3663      6C616773 
 3663      00
 3664              	.LASF11:
 3665 03b1 63686172 		.ascii	"char\000"
 3665      00
 3666              	.LASF4:
 3667 03b6 6C6F6E67 		.ascii	"long int\000"
 3667      20696E74 
 3667      00
 3668              	.LASF38:
 3669 03bf 466F7277 		.ascii	"Forward\000"
 3669      61726400 
 3670              	.LASF106:
 3671 03c7 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3671      6F63756D 
 3671      656E7473 
 3671      5C476974 
 3671      4875625C 
 3672 03f6 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3672      635F636F 
 3672      64655F62 
 3672      6173655C 
 3672      43533330 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 78


 3673              	.LASF95:
 3674 0418 71756164 		.ascii	"quadDec2Count\000"
 3674      44656332 
 3674      436F756E 
 3674      7400
 3675              	.LASF31:
 3676 0426 67315F79 		.ascii	"g1_ypos\000"
 3676      706F7300 
 3677              	.LASF37:
 3678 042e 67325F64 		.ascii	"g2_direction\000"
 3678      69726563 
 3678      74696F6E 
 3678      00
 3679              	.LASF32:
 3680 043b 67315F73 		.ascii	"g1_speed\000"
 3680      70656564 
 3680      00
 3681              	.LASF83:
 3682 0444 64697370 		.ascii	"displaystring\000"
 3682      6C617973 
 3682      7472696E 
 3682      6700
 3683              	.LASF103:
 3684 0452 73746F70 		.ascii	"stoppedAfterTurn\000"
 3684      70656441 
 3684      66746572 
 3684      5475726E 
 3684      00
 3685              	.LASF23:
 3686 0463 726F626F 		.ascii	"robot_xpos\000"
 3686      745F7870 
 3686      6F7300
 3687              	.LASF39:
 3688 046e 5475726E 		.ascii	"TurnRight\000"
 3688      52696768 
 3688      7400
 3689              	.LASF94:
 3690 0478 62756666 		.ascii	"buffer\000"
 3690      657200
 3691              	.LASF16:
 3692 047f 75696E74 		.ascii	"uint32\000"
 3692      333200
 3693              	.LASF105:
 3694 0486 6D61696E 		.ascii	"main.c\000"
 3694      2E6300
 3695              	.LASF5:
 3696 048d 6C6F6E67 		.ascii	"long unsigned int\000"
 3696      20756E73 
 3696      69676E65 
 3696      6420696E 
 3696      7400
 3697              	.LASF49:
 3698 049f 4261636B 		.ascii	"Backward\000"
 3698      77617264 
 3698      00
 3699              	.LASF20:
 3700 04a8 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 79


 3700      6C6500
 3701              	.LASF44:
 3702 04af 556E6B6E 		.ascii	"Unknown\000"
 3702      6F776E00 
 3703              	.LASF101:
 3704 04b7 63757272 		.ascii	"currentRow\000"
 3704      656E7452 
 3704      6F7700
 3705              	.LASF55:
 3706 04c2 53335F44 		.ascii	"S3_DETECTED\000"
 3706      45544543 
 3706      54454400 
 3707              	.LASF72:
 3708 04ce 74735F73 		.ascii	"ts_speed\000"
 3708      70656564 
 3708      00
 3709              	.LASF109:
 3710 04d7 636F756E 		.ascii	"count\000"
 3710      7400
 3711              	.LASF74:
 3712 04dd 666C6167 		.ascii	"flag_ts_enc\000"
 3712      5F74735F 
 3712      656E6300 
 3713              	.LASF12:
 3714 04e9 5F5F696E 		.ascii	"__int32_t\000"
 3714      7433325F 
 3714      7400
 3715              	.LASF43:
 3716 04f3 53746F70 		.ascii	"Stop\000"
 3716      00
 3717              	.LASF27:
 3718 04f8 67305F79 		.ascii	"g0_ypos\000"
 3718      706F7300 
 3719              	.LASF25:
 3720 0500 726F626F 		.ascii	"robot_orientation\000"
 3720      745F6F72 
 3720      69656E74 
 3720      6174696F 
 3720      6E00
 3721              	.LASF73:
 3722 0512 74735F64 		.ascii	"ts_display\000"
 3722      6973706C 
 3722      617900
 3723              	.LASF47:
 3724 051d 77616974 		.ascii	"waitForLeftTurn\000"
 3724      466F724C 
 3724      65667454 
 3724      75726E00 
 3725              	.LASF108:
 3726 052d 71756164 		.ascii	"quadCountToRPM\000"
 3726      436F756E 
 3726      74546F52 
 3726      504D00
 3727              	.LASF82:
 3728 053c 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3728      5F72665F 
 3728      7472616E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccXmeVpg.s 			page 80


 3728      736D6973 
 3728      73696F6E 
 3729              	.LASF24:
 3730 0558 726F626F 		.ascii	"robot_ypos\000"
 3730      745F7970 
 3730      6F7300
 3731              	.LASF69:
 3732 0563 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3732      52784275 
 3732      66666572 
 3732      00
 3733              	.LASF90:
 3734 0570 63757272 		.ascii	"currentOrientation\000"
 3734      656E744F 
 3734      7269656E 
 3734      74617469 
 3734      6F6E00
 3735              	.LASF52:
 3736 0583 446F776E 		.ascii	"Down\000"
 3736      00
 3737              	.LASF88:
 3738 0588 63757272 		.ascii	"currentDirection\000"
 3738      656E7444 
 3738      69726563 
 3738      74696F6E 
 3738      00
 3739              	.LASF64:
 3740 0599 64697265 		.ascii	"directionState\000"
 3740      6374696F 
 3740      6E537461 
 3740      746500
 3741              	.LASF21:
 3742 05a8 72737369 		.ascii	"rssi\000"
 3742      00
 3743              	.LASF51:
 3744 05ad 4F726965 		.ascii	"OrientationState\000"
 3744      6E746174 
 3744      696F6E53 
 3744      74617465 
 3744      00
 3745              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
