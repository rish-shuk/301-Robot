ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              		.global	forwardBuffer
 173              		.align	1
 174              		.type	forwardBuffer, %object
 175              		.size	forwardBuffer, 2
 176              	forwardBuffer:
 177 0034 0000     		.space	2
 178              	turnStartedFlag:
 179 0036 00       		.space	1
 180              	turnFinishedFlag:
 181 0037 00       		.space	1
 182              	forwardUntilTargetStartedFlag:
 183 0038 00       		.space	1
 184              	uTurnStartedFlag:
 185 0039 00       		.space	1
 186              	uTurnFinishedFlag:
 187 003a 00       		.space	1
 188              	leftStatusFlag:
 189 003b 00       		.space	1
 190              	rightStatusFlag:
 191 003c 00       		.space	1
 192              	spinCourseCorrectionStarted:
 193 003d 00       		.space	1
 194              	currentIgnoreL:
 195 003e 00       		.space	1
 196              		.data
 197              		.type	currentIgnoreR, %object
 198              		.size	currentIgnoreR, 1
 199              	currentIgnoreR:
 200 0045 01       		.byte	1
 201              		.bss
 202              	totalLineCount:
 203 003f 00       		.space	1
 204              	lineCount:
 205 0040 00       		.space	1
 206              	onLineFlag:
 207 0041 00       		.space	1
 208              	tooEarlyFlag:
 209 0042 00       		.space	1
 210              	tooLateFlag:
 211 0043 00       		.space	1
 212              		.global	junctionConfiguration
 213              		.align	2
 214              		.type	junctionConfiguration, %object
 215              		.size	junctionConfiguration, 4
 216              	junctionConfiguration:
 217 0044 00000000 		.space	4
 218              		.global	currentFoodListIndex
 219              		.type	currentFoodListIndex, %object
 220              		.size	currentFoodListIndex, 1
 221              	currentFoodListIndex:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 5


 222 0048 00       		.space	1
 223              		.global	blockSizeTotal
 224 0049 000000   		.align	2
 225              		.type	blockSizeTotal, %object
 226              		.size	blockSizeTotal, 4
 227              	blockSizeTotal:
 228 004c 00000000 		.space	4
 229              		.global	__aeabi_i2d
 230              		.global	__aeabi_dmul
 231              		.global	__aeabi_ddiv
 232              		.global	__aeabi_d2f
 233              		.global	__aeabi_fadd
 234              		.section	.text.speedTimer,"ax",%progbits
 235              		.align	2
 236              		.global	speedTimer
 237              		.thumb
 238              		.thumb_func
 239              		.type	speedTimer, %function
 240              	speedTimer:
 241              	.LFB64:
 242              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex();
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 6


  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint16 forwardBuffer = 0;
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** void RotateClockwise180Degrees();
  67:main.c        **** 
  68:main.c        **** volatile static uint8 totalLineCount = 0;
  69:main.c        **** volatile static uint8 lineCount = 0;
  70:main.c        **** volatile static uint8 onLineFlag = 0;
  71:main.c        **** 
  72:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  73:main.c        **** volatile static uint8 tooLateFlag = 0;
  74:main.c        **** 
  75:main.c        **** uint8 junctionConfiguration[4] = {0};
  76:main.c        **** uint8 currentFoodListIndex = 0;
  77:main.c        **** 
  78:main.c        **** float blockSizeTotal = 0;
  79:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  80:main.c        **** 
  81:main.c        **** CY_ISR (speedTimer) {
 243              		.loc 1 81 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 90B5     		push	{r4, r7, lr}
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 7


 255              		.cfi_def_cfa_register 7
  82:main.c        ****     timerInt = 1;
 256              		.loc 1 82 0
 257 0006 344B     		ldr	r3, .L4+16
 258 0008 0122     		movs	r2, #1
 259 000a 1A60     		str	r2, [r3]
  83:main.c        ****     //quadDec_M1 used for turning macros
  84:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 260              		.loc 1 84 0
 261 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 262 0010 0346     		mov	r3, r0
 263 0012 1A46     		mov	r2, r3
 264 0014 314B     		ldr	r3, .L4+20
 265 0016 1A60     		str	r2, [r3]
  85:main.c        ****     
  86:main.c        ****     if ((currentDirection == Forward || 
 266              		.loc 1 86 0
 267 0018 314B     		ldr	r3, .L4+24
 268 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 001c 002B     		cmp	r3, #0
 270 001e 13D0     		beq	.L2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 271              		.loc 1 87 0 discriminator 1
 272 0020 2F4B     		ldr	r3, .L4+24
 273 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  86:main.c        ****         currentDirection == ForwardAfterTurn ||
 274              		.loc 1 86 0 discriminator 1
 275 0024 082B     		cmp	r3, #8
 276 0026 0FD0     		beq	.L2
  88:main.c        ****         currentDirection == waitForTurn || 
 277              		.loc 1 88 0
 278 0028 2D4B     		ldr	r3, .L4+24
 279 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 280              		.loc 1 87 0
 281 002c 072B     		cmp	r3, #7
 282 002e 0BD0     		beq	.L2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 283              		.loc 1 89 0
 284 0030 2B4B     		ldr	r3, .L4+24
 285 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****         currentDirection == waitForTurn || 
 286              		.loc 1 88 0
 287 0034 032B     		cmp	r3, #3
 288 0036 07D0     		beq	.L2
  90:main.c        ****         currentDirection == AdjustToTheRight ||
 289              		.loc 1 90 0
 290 0038 294B     		ldr	r3, .L4+24
 291 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 292              		.loc 1 89 0
 293 003c 042B     		cmp	r3, #4
 294 003e 03D0     		beq	.L2
  91:main.c        ****         currentDirection == Backward) &&
 295              		.loc 1 91 0
 296 0040 274B     		ldr	r3, .L4+24
 297 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 8


  90:main.c        ****         currentDirection == AdjustToTheRight ||
 298              		.loc 1 90 0
 299 0044 092B     		cmp	r3, #9
 300 0046 34D1     		bne	.L3
 301              	.L2:
  92:main.c        ****         quadDec2Count != 0) {
 302              		.loc 1 92 0
 303 0048 244B     		ldr	r3, .L4+20
 304 004a 1B68     		ldr	r3, [r3]
  91:main.c        ****         currentDirection == Backward) &&
 305              		.loc 1 91 0
 306 004c 002B     		cmp	r3, #0
 307 004e 30D0     		beq	.L3
 308              	.LBB2:
  93:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  94:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 309              		.loc 1 94 0
 310 0050 224B     		ldr	r3, .L4+20
 311 0052 1B68     		ldr	r3, [r3]
 312 0054 002B     		cmp	r3, #0
 313 0056 B8BF     		it	lt
 314 0058 5B42     		rsblt	r3, r3, #0
 315 005a 1846     		mov	r0, r3
 316 005c FFF7FEFF 		bl	__aeabi_i2d
 317 0060 19A3     		adr	r3, .L4
 318 0062 D3E90023 		ldrd	r2, [r3]
 319 0066 FFF7FEFF 		bl	__aeabi_dmul
 320 006a 0346     		mov	r3, r0
 321 006c 0C46     		mov	r4, r1
 322 006e 1846     		mov	r0, r3
 323 0070 2146     		mov	r1, r4
 324 0072 17A3     		adr	r3, .L4+8
 325 0074 D3E90023 		ldrd	r2, [r3]
 326 0078 FFF7FEFF 		bl	__aeabi_dmul
 327 007c 0346     		mov	r3, r0
 328 007e 0C46     		mov	r4, r1
 329 0080 1846     		mov	r0, r3
 330 0082 2146     		mov	r1, r4
 331 0084 4FF00002 		mov	r2, #0
 332 0088 164B     		ldr	r3, .L4+28
 333 008a FFF7FEFF 		bl	__aeabi_ddiv
 334 008e 0346     		mov	r3, r0
 335 0090 0C46     		mov	r4, r1
 336 0092 1846     		mov	r0, r3
 337 0094 2146     		mov	r1, r4
 338 0096 FFF7FEFF 		bl	__aeabi_d2f
 339 009a 0346     		mov	r3, r0
 340 009c 7B60     		str	r3, [r7, #4]	@ float
  95:main.c        ****         
  96:main.c        ****         totalDistance = totalDistance + newDistance;
 341              		.loc 1 96 0
 342 009e 124B     		ldr	r3, .L4+32
 343 00a0 1B68     		ldr	r3, [r3]	@ float
 344 00a2 7968     		ldr	r1, [r7, #4]	@ float
 345 00a4 1846     		mov	r0, r3
 346 00a6 FFF7FEFF 		bl	__aeabi_fadd
 347 00aa 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 9


 348 00ac 1A46     		mov	r2, r3
 349 00ae 0E4B     		ldr	r3, .L4+32
 350 00b0 1A60     		str	r2, [r3]	@ float
 351              	.L3:
 352              	.LBE2:
  97:main.c        ****     }
  98:main.c        ****     
  99:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 353              		.loc 1 99 0
 354 00b2 0020     		movs	r0, #0
 355 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 100:main.c        ****     QuadDec_M2_Start(); // restart counter
 356              		.loc 1 100 0
 357 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 101:main.c        ****     
 102:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 358              		.loc 1 102 0
 359 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 103:main.c        **** }
 360              		.loc 1 103 0
 361 00c0 00BF     		nop
 362 00c2 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 12
 364 00c4 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 00c6 90BD     		pop	{r4, r7, pc}
 368              	.L5:
 369              		.align	3
 370              	.L4:
 371 00c8 182D4454 		.word	1413754136
 372 00cc FB210940 		.word	1074340347
 373 00d0 00000000 		.word	0
 374 00d4 00205040 		.word	1078992896
 375 00d8 00000000 		.word	timerInt
 376 00dc 00000000 		.word	quadDec2Count
 377 00e0 00000000 		.word	currentDirection
 378 00e4 00806C40 		.word	1080852480
 379 00e8 00000000 		.word	totalDistance
 380              		.cfi_endproc
 381              	.LFE64:
 382              		.size	speedTimer, .-speedTimer
 383              		.section	.text.S3_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S3_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S3_DETECTED, %function
 389              	S3_DETECTED:
 390              	.LFB65:
 104:main.c        **** 
 105:main.c        **** CY_ISR(S3_DETECTED) {
 391              		.loc 1 105 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 10


 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 106:main.c        ****     // Sensor has detected WHITE
 107:main.c        ****     s3 = 1; // , Black = 0, White = 1
 401              		.loc 1 107 0
 402 0004 034B     		ldr	r3, .L7
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
 108:main.c        ****     //LED_Write(1u);
 109:main.c        **** }
 405              		.loc 1 109 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L8:
 415 0012 00BF     		.align	2
 416              	.L7:
 417 0014 00000000 		.word	s3
 418              		.cfi_endproc
 419              	.LFE65:
 420              		.size	S3_DETECTED, .-S3_DETECTED
 421              		.section	.text.S4_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S4_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S4_DETECTED, %function
 427              	S4_DETECTED:
 428              	.LFB66:
 110:main.c        **** 
 111:main.c        **** CY_ISR(S4_DETECTED) {
 429              		.loc 1 111 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 112:main.c        ****     // Sensor has detected WHITE
 113:main.c        ****     s4 = 1; // , Black = 0, White = 1
 439              		.loc 1 113 0
 440 0004 034B     		ldr	r3, .L10
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
 114:main.c        ****     //LED_Write(1u);
 115:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 11


 443              		.loc 1 115 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L11:
 453 0012 00BF     		.align	2
 454              	.L10:
 455 0014 00000000 		.word	s4
 456              		.cfi_endproc
 457              	.LFE66:
 458              		.size	S4_DETECTED, .-S4_DETECTED
 459              		.section	.text.S5_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S5_DETECTED
 462              		.thumb
 463              		.thumb_func
 464              		.type	S5_DETECTED, %function
 465              	S5_DETECTED:
 466              	.LFB67:
 116:main.c        **** 
 117:main.c        **** CY_ISR(S5_DETECTED) {
 467              		.loc 1 117 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 118:main.c        ****     // Sensor has detected WHITE
 119:main.c        ****     s5 = 1; // , Black = 0, White = 1
 477              		.loc 1 119 0
 478 0004 034B     		ldr	r3, .L13
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 120:main.c        ****     //LED_Write(1u);
 121:main.c        **** }
 481              		.loc 1 121 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L14:
 491 0012 00BF     		.align	2
 492              	.L13:
 493 0014 00000000 		.word	s5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 12


 494              		.cfi_endproc
 495              	.LFE67:
 496              		.size	S5_DETECTED, .-S5_DETECTED
 497              		.section	.text.S6_DETECTED,"ax",%progbits
 498              		.align	2
 499              		.global	S6_DETECTED
 500              		.thumb
 501              		.thumb_func
 502              		.type	S6_DETECTED, %function
 503              	S6_DETECTED:
 504              	.LFB68:
 122:main.c        **** 
 123:main.c        **** CY_ISR(S6_DETECTED) {
 505              		.loc 1 123 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 124:main.c        ****     // Sensor has detected WHITE
 125:main.c        ****     s6 = 1; // , Black = 0, White = 1
 515              		.loc 1 125 0
 516 0004 034B     		ldr	r3, .L16
 517 0006 0122     		movs	r2, #1
 518 0008 1A70     		strb	r2, [r3]
 126:main.c        ****     //LED_Write(1u);
 127:main.c        **** }
 519              		.loc 1 127 0
 520 000a 00BF     		nop
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L17:
 529 0012 00BF     		.align	2
 530              	.L16:
 531 0014 00000000 		.word	s6
 532              		.cfi_endproc
 533              	.LFE68:
 534              		.size	S6_DETECTED, .-S6_DETECTED
 535              		.section	.text.TIMER_FINISH,"ax",%progbits
 536              		.align	2
 537              		.global	TIMER_FINISH
 538              		.thumb
 539              		.thumb_func
 540              		.type	TIMER_FINISH, %function
 541              	TIMER_FINISH:
 542              	.LFB69:
 128:main.c        **** 
 129:main.c        **** CY_ISR(TIMER_FINISH) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 13


 543              		.loc 1 129 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 130:main.c        ****     if (currentDirection == Stop) {
 553              		.loc 1 130 0
 554 0004 154B     		ldr	r3, .L24
 555 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0008 052B     		cmp	r3, #5
 557 000a 05D1     		bne	.L19
 131:main.c        ****         stopBuffer = stopBuffer + 1;
 558              		.loc 1 131 0
 559 000c 144B     		ldr	r3, .L24+4
 560 000e 1B68     		ldr	r3, [r3]
 561 0010 0133     		adds	r3, r3, #1
 562 0012 134A     		ldr	r2, .L24+4
 563 0014 1360     		str	r3, [r2]
 564 0016 02E0     		b	.L20
 565              	.L19:
 132:main.c        ****     } else {
 133:main.c        ****         stopBuffer = 0;
 566              		.loc 1 133 0
 567 0018 114B     		ldr	r3, .L24+4
 568 001a 0022     		movs	r2, #0
 569 001c 1A60     		str	r2, [r3]
 570              	.L20:
 134:main.c        ****     }
 135:main.c        ****     if (currentDirection == Forward || currentDirection == AdjustToTheLeft || currentDirection ==  
 571              		.loc 1 135 0
 572 001e 0F4B     		ldr	r3, .L24
 573 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0022 002B     		cmp	r3, #0
 575 0024 07D0     		beq	.L21
 576              		.loc 1 135 0 is_stmt 0 discriminator 1
 577 0026 0D4B     		ldr	r3, .L24
 578 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 002a 032B     		cmp	r3, #3
 580 002c 03D0     		beq	.L21
 581              		.loc 1 135 0 discriminator 2
 582 002e 0B4B     		ldr	r3, .L24
 583 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0032 042B     		cmp	r3, #4
 585 0034 06D1     		bne	.L22
 586              	.L21:
 136:main.c        ****         forwardBuffer = forwardBuffer + 1;
 587              		.loc 1 136 0 is_stmt 1
 588 0036 0B4B     		ldr	r3, .L24+8
 589 0038 1B88     		ldrh	r3, [r3]
 590 003a 0133     		adds	r3, r3, #1
 591 003c 9AB2     		uxth	r2, r3
 592 003e 094B     		ldr	r3, .L24+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 14


 593 0040 1A80     		strh	r2, [r3]	@ movhi
 594 0042 02E0     		b	.L23
 595              	.L22:
 137:main.c        ****     } else {
 138:main.c        ****         forwardBuffer = 0;    
 596              		.loc 1 138 0
 597 0044 074B     		ldr	r3, .L24+8
 598 0046 0022     		movs	r2, #0
 599 0048 1A80     		strh	r2, [r3]	@ movhi
 600              	.L23:
 139:main.c        ****     }
 140:main.c        ****     SetRobotMovement(); 
 601              		.loc 1 140 0
 602 004a FFF7FEFF 		bl	SetRobotMovement
 141:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 603              		.loc 1 141 0
 604 004e FFF7FEFF 		bl	ResetSensorFlags
 142:main.c        ****     Timer_LED_ReadStatusRegister();
 605              		.loc 1 142 0
 606 0052 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 143:main.c        **** }
 607              		.loc 1 143 0
 608 0056 00BF     		nop
 609 0058 80BD     		pop	{r7, pc}
 610              	.L25:
 611 005a 00BF     		.align	2
 612              	.L24:
 613 005c 00000000 		.word	currentDirection
 614 0060 00000000 		.word	stopBuffer
 615 0064 00000000 		.word	forwardBuffer
 616              		.cfi_endproc
 617              	.LFE69:
 618              		.size	TIMER_FINISH, .-TIMER_FINISH
 619              		.section	.text.main,"ax",%progbits
 620              		.align	2
 621              		.global	main
 622              		.thumb
 623              		.thumb_func
 624              		.type	main, %function
 625              	main:
 626              	.LFB70:
 144:main.c        **** 
 145:main.c        **** 
 146:main.c        **** int main() {
 627              		.loc 1 146 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 24
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 B0B5     		push	{r4, r5, r7, lr}
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 4, -16
 634              		.cfi_offset 5, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 86B0     		sub	sp, sp, #24
 638              		.cfi_def_cfa_offset 40
 639 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 15


 640              		.cfi_def_cfa_register 7
 147:main.c        **** // ----- INITIALIZATIONS ----------
 148:main.c        ****     CYGlobalIntEnable;
 641              		.loc 1 148 0
 642              		.syntax unified
 643              	@ 148 "main.c" 1
 644 0006 62B6     		CPSIE   i
 645              	@ 0 "" 2
 149:main.c        ****     ResetSensorFlags();
 646              		.loc 1 149 0
 647              		.thumb
 648              		.syntax unified
 649 0008 FFF7FEFF 		bl	ResetSensorFlags
 150:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 650              		.loc 1 150 0
 651 000c FFF7FEFF 		bl	init
 151:main.c        ****     
 152:main.c        ****     // MAKE SURE TO CHANGE ORIENTATION
 153:main.c        ****     instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, Down); // initia
 652              		.loc 1 153 0
 653 0010 324B     		ldr	r3, .L30
 654 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 0014 1A46     		mov	r2, r3
 656 0016 0123     		movs	r3, #1
 657 0018 3149     		ldr	r1, .L30+4
 658 001a 3248     		ldr	r0, .L30+8
 659 001c FFF7FEFF 		bl	findPathNewOrientation
 660 0020 0246     		mov	r2, r0
 661 0022 314B     		ldr	r3, .L30+12
 662 0024 1A60     		str	r2, [r3]
 154:main.c        ****     numSteps = instructionsListLength();
 663              		.loc 1 154 0
 664 0026 FFF7FEFF 		bl	instructionsListLength
 665 002a 0346     		mov	r3, r0
 666 002c 1A46     		mov	r2, r3
 667 002e 2F4B     		ldr	r3, .L30+16
 668 0030 1A60     		str	r2, [r3]
 155:main.c        ****     
 156:main.c        ****     currentInstruction = GetInstructionAtIndex();
 669              		.loc 1 156 0
 670 0032 2F4C     		ldr	r4, .L30+20
 671 0034 3B46     		mov	r3, r7
 672 0036 1846     		mov	r0, r3
 673 0038 FFF7FEFF 		bl	GetInstructionAtIndex
 674 003c 2546     		mov	r5, r4
 675 003e 3C46     		mov	r4, r7
 676 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 677 0042 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 678 0044 2368     		ldr	r3, [r4]
 679 0046 2B60     		str	r3, [r5]
 157:main.c        ****     
 158:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 680              		.loc 1 158 0
 681 0048 274B     		ldr	r3, .L30+12
 682 004a 1968     		ldr	r1, [r3]
 683 004c 294B     		ldr	r3, .L30+24
 684 004e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 16


 685 0050 1346     		mov	r3, r2
 686 0052 9B00     		lsls	r3, r3, #2
 687 0054 1344     		add	r3, r3, r2
 688 0056 9B00     		lsls	r3, r3, #2
 689 0058 0B44     		add	r3, r3, r1
 690 005a 5B68     		ldr	r3, [r3, #4]
 691 005c DAB2     		uxtb	r2, r3
 692 005e 264B     		ldr	r3, .L30+28
 693 0060 1A70     		strb	r2, [r3]
 159:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 694              		.loc 1 159 0
 695 0062 214B     		ldr	r3, .L30+12
 696 0064 1968     		ldr	r1, [r3]
 697 0066 234B     		ldr	r3, .L30+24
 698 0068 1A68     		ldr	r2, [r3]
 699 006a 1346     		mov	r3, r2
 700 006c 9B00     		lsls	r3, r3, #2
 701 006e 1344     		add	r3, r3, r2
 702 0070 9B00     		lsls	r3, r3, #2
 703 0072 0B44     		add	r3, r3, r1
 704 0074 9B68     		ldr	r3, [r3, #8]
 705 0076 DAB2     		uxtb	r2, r3
 706 0078 204B     		ldr	r3, .L30+32
 707 007a 1A70     		strb	r2, [r3]
 160:main.c        ****     
 161:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 708              		.loc 1 161 0
 709 007c 2048     		ldr	r0, .L30+36
 710 007e FFF7FEFF 		bl	isr_speed_StartEx
 162:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 711              		.loc 1 162 0
 712 0082 2048     		ldr	r0, .L30+40
 713 0084 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 163:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 714              		.loc 1 163 0
 715 0088 1F48     		ldr	r0, .L30+44
 716 008a FFF7FEFF 		bl	S3_detected_StartEx
 164:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 717              		.loc 1 164 0
 718 008e 1F48     		ldr	r0, .L30+48
 719 0090 FFF7FEFF 		bl	S4_detected_StartEx
 165:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 720              		.loc 1 165 0
 721 0094 1E48     		ldr	r0, .L30+52
 722 0096 FFF7FEFF 		bl	S5_detected_StartEx
 166:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 723              		.loc 1 166 0
 724 009a 1E48     		ldr	r0, .L30+56
 725 009c FFF7FEFF 		bl	S6_detected_StartEx
 167:main.c        ****     Timer_LED_Start();
 726              		.loc 1 167 0
 727 00a0 FFF7FEFF 		bl	Timer_LED_Start
 168:main.c        **** 
 169:main.c        ****     
 170:main.c        **** // ------USB SETUP ----------------    
 171:main.c        **** #ifdef USE_USB    
 172:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 17


 728              		.loc 1 172 0
 729 00a4 0121     		movs	r1, #1
 730 00a6 0020     		movs	r0, #0
 731 00a8 FFF7FEFF 		bl	USBUART_Start
 173:main.c        **** #endif        
 174:main.c        ****     RF_BT_SELECT_Write(0);
 732              		.loc 1 174 0
 733 00ac 0020     		movs	r0, #0
 734 00ae FFF7FEFF 		bl	RF_BT_SELECT_Write
 735              	.L29:
 175:main.c        ****     
 176:main.c        ****     //usbPutString("Initialised UART");
 177:main.c        ****     for(;;)
 178:main.c        ****     {
 179:main.c        ****         if(timerInt == 1) {
 736              		.loc 1 179 0
 737 00b2 194B     		ldr	r3, .L30+60
 738 00b4 1B68     		ldr	r3, [r3]
 739 00b6 012B     		cmp	r3, #1
 740 00b8 08D1     		bne	.L27
 180:main.c        ****             timerInt = 0;
 741              		.loc 1 180 0
 742 00ba 174B     		ldr	r3, .L30+60
 743 00bc 0022     		movs	r2, #0
 744 00be 1A60     		str	r2, [r3]
 181:main.c        ****             // calculate RPM of M2
 182:main.c        ****             quadCountToRPM(quadDec2Count);
 745              		.loc 1 182 0
 746 00c0 164B     		ldr	r3, .L30+64
 747 00c2 1B68     		ldr	r3, [r3]
 748 00c4 9BB2     		uxth	r3, r3
 749 00c6 1846     		mov	r0, r3
 750 00c8 FFF7FEFF 		bl	quadCountToRPM
 751              	.L27:
 183:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 184:main.c        ****             //usbPutString(buffer);
 185:main.c        ****             //usbPutString(" ");
 186:main.c        ****         }
 187:main.c        ****         //handle_usb();
 188:main.c        ****         if (flag_KB_string == 1)
 752              		.loc 1 188 0
 753 00cc 144B     		ldr	r3, .L30+68
 754 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 755 00d0 012B     		cmp	r3, #1
 756 00d2 EED1     		bne	.L29
 189:main.c        ****         {
 190:main.c        ****             //usbPutString("Total Distance: ");
 191:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 192:main.c        ****             //usbPutString(buffer);
 193:main.c        ****             flag_KB_string = 0;
 757              		.loc 1 193 0
 758 00d4 124B     		ldr	r3, .L30+68
 759 00d6 0022     		movs	r2, #0
 760 00d8 1A70     		strb	r2, [r3]
 194:main.c        ****         }           
 195:main.c        ****     }
 761              		.loc 1 195 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 18


 762 00da EAE7     		b	.L29
 763              	.L31:
 764              		.align	2
 765              	.L30:
 766 00dc 00000000 		.word	currentFoodListIndex
 767 00e0 00000000 		.word	food_list
 768 00e4 00000000 		.word	map
 769 00e8 00000000 		.word	instructionList
 770 00ec 00000000 		.word	numSteps
 771 00f0 00000000 		.word	currentInstruction
 772 00f4 14000000 		.word	instructionIndex
 773 00f8 3E000000 		.word	currentIgnoreL
 774 00fc 45000000 		.word	currentIgnoreR
 775 0100 00000000 		.word	speedTimer
 776 0104 00000000 		.word	TIMER_FINISH
 777 0108 00000000 		.word	S3_DETECTED
 778 010c 00000000 		.word	S4_DETECTED
 779 0110 00000000 		.word	S5_DETECTED
 780 0114 00000000 		.word	S6_DETECTED
 781 0118 00000000 		.word	timerInt
 782 011c 00000000 		.word	quadDec2Count
 783 0120 00000000 		.word	flag_KB_string
 784              		.cfi_endproc
 785              	.LFE70:
 786              		.size	main, .-main
 787              		.global	__aeabi_fmul
 788              		.global	__aeabi_f2iz
 789              		.section	.text.quadCountToRPM,"ax",%progbits
 790              		.align	2
 791              		.global	quadCountToRPM
 792              		.thumb
 793              		.thumb_func
 794              		.type	quadCountToRPM, %function
 795              	quadCountToRPM:
 796              	.LFB71:
 196:main.c        ****     return 0;
 197:main.c        **** }
 198:main.c        **** 
 199:main.c        **** // Calculations
 200:main.c        **** //* ========================================
 201:main.c        **** int16 quadCountToRPM(uint16 count) {
 797              		.loc 1 201 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 16
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 90B5     		push	{r4, r7, lr}
 802              		.cfi_def_cfa_offset 12
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 85B0     		sub	sp, sp, #20
 807              		.cfi_def_cfa_offset 32
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 0346     		mov	r3, r0
 811 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 202:main.c        ****     float cps = count/57.00;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 19


 812              		.loc 1 202 0
 813 000a FB88     		ldrh	r3, [r7, #6]
 814 000c 1846     		mov	r0, r3
 815 000e FFF7FEFF 		bl	__aeabi_i2d
 816 0012 4FF00002 		mov	r2, #0
 817 0016 0D4B     		ldr	r3, .L34
 818 0018 FFF7FEFF 		bl	__aeabi_ddiv
 819 001c 0346     		mov	r3, r0
 820 001e 0C46     		mov	r4, r1
 821 0020 1846     		mov	r0, r3
 822 0022 2146     		mov	r1, r4
 823 0024 FFF7FEFF 		bl	__aeabi_d2f
 824 0028 0346     		mov	r3, r0
 825 002a FB60     		str	r3, [r7, #12]	@ float
 203:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 826              		.loc 1 203 0
 827 002c 0849     		ldr	r1, .L34+4
 828 002e F868     		ldr	r0, [r7, #12]	@ float
 829 0030 FFF7FEFF 		bl	__aeabi_fmul
 830 0034 0346     		mov	r3, r0
 831 0036 1846     		mov	r0, r3
 832 0038 FFF7FEFF 		bl	__aeabi_f2iz
 833 003c 0346     		mov	r3, r0
 834 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 204:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 205:main.c        ****     return rpm;
 835              		.loc 1 205 0
 836 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 206:main.c        ****     //usbPutString(buffer);
 207:main.c        ****     //usbPutString("rpm ");
 208:main.c        **** }
 837              		.loc 1 208 0
 838 0044 1846     		mov	r0, r3
 839 0046 1437     		adds	r7, r7, #20
 840              		.cfi_def_cfa_offset 12
 841 0048 BD46     		mov	sp, r7
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed
 844 004a 90BD     		pop	{r4, r7, pc}
 845              	.L35:
 846              		.align	2
 847              	.L34:
 848 004c 00804C40 		.word	1078755328
 849 0050 00007041 		.word	1097859072
 850              		.cfi_endproc
 851              	.LFE71:
 852              		.size	quadCountToRPM, .-quadCountToRPM
 853              		.section	.text.ResetSensorFlags,"ax",%progbits
 854              		.align	2
 855              		.global	ResetSensorFlags
 856              		.thumb
 857              		.thumb_func
 858              		.type	ResetSensorFlags, %function
 859              	ResetSensorFlags:
 860              	.LFB72:
 209:main.c        **** 
 210:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 20


 211:main.c        **** void ResetSensorFlags() {
 861              		.loc 1 211 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866 0000 80B4     		push	{r7}
 867              		.cfi_def_cfa_offset 4
 868              		.cfi_offset 7, -4
 869 0002 00AF     		add	r7, sp, #0
 870              		.cfi_def_cfa_register 7
 212:main.c        ****     s3 = 0;
 871              		.loc 1 212 0
 872 0004 074B     		ldr	r3, .L37
 873 0006 0022     		movs	r2, #0
 874 0008 1A70     		strb	r2, [r3]
 213:main.c        ****     s4 = 0;
 875              		.loc 1 213 0
 876 000a 074B     		ldr	r3, .L37+4
 877 000c 0022     		movs	r2, #0
 878 000e 1A70     		strb	r2, [r3]
 214:main.c        ****     s5 = 0;
 879              		.loc 1 214 0
 880 0010 064B     		ldr	r3, .L37+8
 881 0012 0022     		movs	r2, #0
 882 0014 1A70     		strb	r2, [r3]
 215:main.c        ****     s6 = 0;
 883              		.loc 1 215 0
 884 0016 064B     		ldr	r3, .L37+12
 885 0018 0022     		movs	r2, #0
 886 001a 1A70     		strb	r2, [r3]
 216:main.c        **** }
 887              		.loc 1 216 0
 888 001c 00BF     		nop
 889 001e BD46     		mov	sp, r7
 890              		.cfi_def_cfa_register 13
 891              		@ sp needed
 892 0020 80BC     		pop	{r7}
 893              		.cfi_restore 7
 894              		.cfi_def_cfa_offset 0
 895 0022 7047     		bx	lr
 896              	.L38:
 897              		.align	2
 898              	.L37:
 899 0024 00000000 		.word	s3
 900 0028 00000000 		.word	s4
 901 002c 00000000 		.word	s5
 902 0030 00000000 		.word	s6
 903              		.cfi_endproc
 904              	.LFE72:
 905              		.size	ResetSensorFlags, .-ResetSensorFlags
 906              		.global	xBlocksize
 907              		.data
 908 0046 0000     		.align	2
 909              		.type	xBlocksize, %object
 910              		.size	xBlocksize, 4
 911              	xBlocksize:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 21


 912 0048 0000F442 		.word	1123287040
 913              		.global	yBlocksize
 914              		.align	2
 915              		.type	yBlocksize, %object
 916              		.size	yBlocksize, 4
 917              	yBlocksize:
 918 004c 00009042 		.word	1116733440
 919              		.global	currentRow
 920              		.type	currentRow, %object
 921              		.size	currentRow, 1
 922              	currentRow:
 923 0050 01       		.byte	1
 924              		.global	currentCol
 925              		.type	currentCol, %object
 926              		.size	currentCol, 1
 927              	currentCol:
 928 0051 01       		.byte	1
 929              		.global	stoppedAfterTurn
 930              		.bss
 931              		.type	stoppedAfterTurn, %object
 932              		.size	stoppedAfterTurn, 1
 933              	stoppedAfterTurn:
 934 0050 00       		.space	1
 935              		.global	ignoreSensor
 936              		.type	ignoreSensor, %object
 937              		.size	ignoreSensor, 1
 938              	ignoreSensor:
 939 0051 00       		.space	1
 940              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 941              		.align	2
 942              		.global	ForwardCourseCorrection
 943              		.thumb
 944              		.thumb_func
 945              		.type	ForwardCourseCorrection, %function
 946              	ForwardCourseCorrection:
 947              	.LFB73:
 217:main.c        **** 
 218:main.c        **** float xBlocksize = 122; // 122 mm
 219:main.c        **** float yBlocksize = 72; // 80 mm
 220:main.c        **** uint8 currentRow = 1;
 221:main.c        **** uint8 currentCol = 1;
 222:main.c        **** 
 223:main.c        **** uint8 stoppedAfterTurn = 0;
 224:main.c        **** uint8 ignoreSensor = 0;
 225:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 226:main.c        **** 
 227:main.c        **** enum RobotMovement ForwardCourseCorrection();
 228:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 948              		.loc 1 228 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952              		@ link register save eliminated.
 953 0000 80B4     		push	{r7}
 954              		.cfi_def_cfa_offset 4
 955              		.cfi_offset 7, -4
 956 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 22


 957              		.cfi_def_cfa_register 7
 229:main.c        ****     // if S5 and S6 are on black, move forward
 230:main.c        ****     if (!s5 && !s6) {
 958              		.loc 1 230 0
 959 0004 1C4B     		ldr	r3, .L47
 960 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961 0008 002B     		cmp	r3, #0
 962 000a 0FD1     		bne	.L40
 963              		.loc 1 230 0 is_stmt 0 discriminator 1
 964 000c 1B4B     		ldr	r3, .L47+4
 965 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 966 0010 002B     		cmp	r3, #0
 967 0012 0BD1     		bne	.L40
 231:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 968              		.loc 1 231 0 is_stmt 1
 969 0014 1A4B     		ldr	r3, .L47+8
 970 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0018 032B     		cmp	r3, #3
 972 001a 01D0     		beq	.L41
 232:main.c        ****             return AdjustToTheLeft;
 973              		.loc 1 232 0
 974 001c 0323     		movs	r3, #3
 975 001e 26E0     		b	.L42
 976              	.L41:
 233:main.c        ****         }
 234:main.c        ****         if (previousDirection != AdjustToTheRight) {
 977              		.loc 1 234 0
 978 0020 174B     		ldr	r3, .L47+8
 979 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0024 042B     		cmp	r3, #4
 981 0026 01D0     		beq	.L40
 235:main.c        ****             return AdjustToTheRight;    
 982              		.loc 1 235 0
 983 0028 0423     		movs	r3, #4
 984 002a 20E0     		b	.L42
 985              	.L40:
 236:main.c        ****         }
 237:main.c        ****     }
 238:main.c        ****     
 239:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 240:main.c        ****     if (s5 && s6) {
 986              		.loc 1 240 0
 987 002c 124B     		ldr	r3, .L47
 988 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0030 002B     		cmp	r3, #0
 990 0032 0FD0     		beq	.L43
 991              		.loc 1 240 0 is_stmt 0 discriminator 1
 992 0034 114B     		ldr	r3, .L47+4
 993 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 994 0038 002B     		cmp	r3, #0
 995 003a 0BD0     		beq	.L43
 241:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 996              		.loc 1 241 0 is_stmt 1
 997 003c 104B     		ldr	r3, .L47+8
 998 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 0040 032B     		cmp	r3, #3
 1000 0042 01D0     		beq	.L44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 23


 242:main.c        ****             return AdjustToTheLeft;
 1001              		.loc 1 242 0
 1002 0044 0323     		movs	r3, #3
 1003 0046 12E0     		b	.L42
 1004              	.L44:
 243:main.c        ****         }
 244:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1005              		.loc 1 244 0
 1006 0048 0D4B     		ldr	r3, .L47+8
 1007 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 004c 042B     		cmp	r3, #4
 1009 004e 01D0     		beq	.L43
 245:main.c        ****             return AdjustToTheRight;    
 1010              		.loc 1 245 0
 1011 0050 0423     		movs	r3, #4
 1012 0052 0CE0     		b	.L42
 1013              	.L43:
 246:main.c        ****         }
 247:main.c        ****     }
 248:main.c        **** 
 249:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 250:main.c        ****     if (s5) {
 1014              		.loc 1 250 0
 1015 0054 084B     		ldr	r3, .L47
 1016 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 0058 002B     		cmp	r3, #0
 1018 005a 01D0     		beq	.L45
 251:main.c        ****         return AdjustToTheRight;    
 1019              		.loc 1 251 0
 1020 005c 0423     		movs	r3, #4
 1021 005e 06E0     		b	.L42
 1022              	.L45:
 252:main.c        ****     }
 253:main.c        ****     if (s6) {
 1023              		.loc 1 253 0
 1024 0060 064B     		ldr	r3, .L47+4
 1025 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1026 0064 002B     		cmp	r3, #0
 1027 0066 01D0     		beq	.L46
 254:main.c        ****         return AdjustToTheLeft;    
 1028              		.loc 1 254 0
 1029 0068 0323     		movs	r3, #3
 1030 006a 00E0     		b	.L42
 1031              	.L46:
 255:main.c        ****     }
 256:main.c        ****    
 257:main.c        ****     // We should never actually get to this point
 258:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 259:main.c        ****     return Stop;
 1032              		.loc 1 259 0
 1033 006c 0523     		movs	r3, #5
 1034              	.L42:
 260:main.c        **** }
 1035              		.loc 1 260 0
 1036 006e 1846     		mov	r0, r3
 1037 0070 BD46     		mov	sp, r7
 1038              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 24


 1039              		@ sp needed
 1040 0072 80BC     		pop	{r7}
 1041              		.cfi_restore 7
 1042              		.cfi_def_cfa_offset 0
 1043 0074 7047     		bx	lr
 1044              	.L48:
 1045 0076 00BF     		.align	2
 1046              	.L47:
 1047 0078 00000000 		.word	s5
 1048 007c 00000000 		.word	s6
 1049 0080 00000000 		.word	previousDirection
 1050              		.cfi_endproc
 1051              	.LFE73:
 1052              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1053              		.global	lastDirectionAfter180
 1054              		.data
 1055              		.type	lastDirectionAfter180, %object
 1056              		.size	lastDirectionAfter180, 1
 1057              	lastDirectionAfter180:
 1058 0052 06       		.byte	6
 1059              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1060              		.align	2
 1061              		.global	SpinCourseCorrection
 1062              		.thumb
 1063              		.thumb_func
 1064              		.type	SpinCourseCorrection, %function
 1065              	SpinCourseCorrection:
 1066              	.LFB74:
 261:main.c        **** 
 262:main.c        **** enum RobotMovement SpinCourseCorrection();
 263:main.c        **** 
 264:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 265:main.c        **** 
 266:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1067              		.loc 1 266 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072 0000 80B4     		push	{r7}
 1073              		.cfi_def_cfa_offset 4
 1074              		.cfi_offset 7, -4
 1075 0002 00AF     		add	r7, sp, #0
 1076              		.cfi_def_cfa_register 7
 267:main.c        ****     // Set first iteration flag.
 268:main.c        ****     if (!spinCourseCorrectionStarted) {
 1077              		.loc 1 268 0
 1078 0004 184B     		ldr	r3, .L56
 1079 0006 1B78     		ldrb	r3, [r3]
 1080 0008 DBB2     		uxtb	r3, r3
 1081 000a 002B     		cmp	r3, #0
 1082 000c 06D1     		bne	.L50
 269:main.c        ****         spinCourseCorrectionStarted = 1;    
 1083              		.loc 1 269 0
 1084 000e 164B     		ldr	r3, .L56
 1085 0010 0122     		movs	r2, #1
 1086 0012 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 25


 270:main.c        ****         lastDirectionAfter180 = currentDirection;
 1087              		.loc 1 270 0
 1088 0014 154B     		ldr	r3, .L56+4
 1089 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1090 0018 154B     		ldr	r3, .L56+8
 1091 001a 1A70     		strb	r2, [r3]
 1092              	.L50:
 271:main.c        ****     }
 272:main.c        ****     
 273:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 274:main.c        ****     if (s5 && s6) {
 1093              		.loc 1 274 0
 1094 001c 154B     		ldr	r3, .L56+12
 1095 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1096 0020 002B     		cmp	r3, #0
 1097 0022 0FD0     		beq	.L51
 1098              		.loc 1 274 0 is_stmt 0 discriminator 1
 1099 0024 144B     		ldr	r3, .L56+16
 1100 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 0028 002B     		cmp	r3, #0
 1102 002a 0BD0     		beq	.L51
 275:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1103              		.loc 1 275 0 is_stmt 1
 1104 002c 104B     		ldr	r3, .L56+8
 1105 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 0030 022B     		cmp	r3, #2
 1107 0032 01D0     		beq	.L52
 276:main.c        ****             return TurnLeft;
 1108              		.loc 1 276 0
 1109 0034 0223     		movs	r3, #2
 1110 0036 12E0     		b	.L53
 1111              	.L52:
 277:main.c        ****         }
 278:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1112              		.loc 1 278 0
 1113 0038 0D4B     		ldr	r3, .L56+8
 1114 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 003c 012B     		cmp	r3, #1
 1116 003e 01D0     		beq	.L51
 279:main.c        ****             return TurnRight;    
 1117              		.loc 1 279 0
 1118 0040 0123     		movs	r3, #1
 1119 0042 0CE0     		b	.L53
 1120              	.L51:
 280:main.c        ****         }
 281:main.c        ****     }
 282:main.c        **** 
 283:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 284:main.c        ****     if (s5) {
 1121              		.loc 1 284 0
 1122 0044 0B4B     		ldr	r3, .L56+12
 1123 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0048 002B     		cmp	r3, #0
 1125 004a 01D0     		beq	.L54
 285:main.c        ****         return TurnRight;    
 1126              		.loc 1 285 0
 1127 004c 0123     		movs	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 26


 1128 004e 06E0     		b	.L53
 1129              	.L54:
 286:main.c        ****     }
 287:main.c        ****     if (s6) {
 1130              		.loc 1 287 0
 1131 0050 094B     		ldr	r3, .L56+16
 1132 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1133 0054 002B     		cmp	r3, #0
 1134 0056 01D0     		beq	.L55
 288:main.c        ****         return TurnLeft;    
 1135              		.loc 1 288 0
 1136 0058 0223     		movs	r3, #2
 1137 005a 00E0     		b	.L53
 1138              	.L55:
 289:main.c        ****     }
 290:main.c        ****    
 291:main.c        ****     // We should never actually get to this point
 292:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 293:main.c        ****     return Stop;
 1139              		.loc 1 293 0
 1140 005c 0523     		movs	r3, #5
 1141              	.L53:
 294:main.c        **** }
 1142              		.loc 1 294 0
 1143 005e 1846     		mov	r0, r3
 1144 0060 BD46     		mov	sp, r7
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 0062 80BC     		pop	{r7}
 1148              		.cfi_restore 7
 1149              		.cfi_def_cfa_offset 0
 1150 0064 7047     		bx	lr
 1151              	.L57:
 1152 0066 00BF     		.align	2
 1153              	.L56:
 1154 0068 3D000000 		.word	spinCourseCorrectionStarted
 1155 006c 00000000 		.word	currentDirection
 1156 0070 00000000 		.word	lastDirectionAfter180
 1157 0074 00000000 		.word	s5
 1158 0078 00000000 		.word	s6
 1159              		.cfi_endproc
 1160              	.LFE74:
 1161              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1162              		.global	firstTurnIteration
 1163              		.bss
 1164              		.type	firstTurnIteration, %object
 1165              		.size	firstTurnIteration, 1
 1166              	firstTurnIteration:
 1167 0052 00       		.space	1
 1168              		.global	__aeabi_i2f
 1169              		.global	__aeabi_fcmpge
 1170              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1171              		.align	2
 1172              		.global	GetMovementAccordingToInstruction
 1173              		.thumb
 1174              		.thumb_func
 1175              		.type	GetMovementAccordingToInstruction, %function
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 27


 1176              	GetMovementAccordingToInstruction:
 1177              	.LFB75:
 295:main.c        **** 
 296:main.c        **** uint8 firstTurnIteration = 0;
 297:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1178              		.loc 1 297 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 40
 1181              		@ frame_needed = 1, uses_anonymous_args = 0
 1182 0000 B0B5     		push	{r4, r5, r7, lr}
 1183              		.cfi_def_cfa_offset 16
 1184              		.cfi_offset 4, -16
 1185              		.cfi_offset 5, -12
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 8AB0     		sub	sp, sp, #40
 1189              		.cfi_def_cfa_offset 56
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
 298:main.c        ****     float blocksize;
 299:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1192              		.loc 1 299 0
 1193 0006 9E4B     		ldr	r3, .L120
 1194 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1195 000a 002B     		cmp	r3, #0
 1196 000c 03D0     		beq	.L59
 1197              		.loc 1 299 0 is_stmt 0 discriminator 1
 1198 000e 9C4B     		ldr	r3, .L120
 1199 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1200 0012 012B     		cmp	r3, #1
 1201 0014 03D1     		bne	.L60
 1202              	.L59:
 300:main.c        ****         blocksize = yBlocksize;
 1203              		.loc 1 300 0 is_stmt 1
 1204 0016 9B4B     		ldr	r3, .L120+4
 1205 0018 1B68     		ldr	r3, [r3]	@ float
 1206 001a 7B62     		str	r3, [r7, #36]	@ float
 1207 001c 02E0     		b	.L61
 1208              	.L60:
 301:main.c        ****     } else {
 302:main.c        ****         blocksize = xBlocksize;
 1209              		.loc 1 302 0
 1210 001e 9A4B     		ldr	r3, .L120+8
 1211 0020 1B68     		ldr	r3, [r3]	@ float
 1212 0022 7B62     		str	r3, [r7, #36]	@ float
 1213              	.L61:
 303:main.c        ****     }
 304:main.c        ****     
 305:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 306:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 307:main.c        ****         // OR an EVENT happens in the current instruction
 308:main.c        ****         // e.g. CurrentInstruction: GoForward 
 309:main.c        ****         //      S3 on BLACK
 310:main.c        ****         //      Check Ignore Count
 311:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 312:main.c        ****     
 313:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 28


 1214              		.loc 1 313 0
 1215 0024 964B     		ldr	r3, .L120
 1216 0026 1B78     		ldrb	r3, [r3]
 1217 0028 87F82330 		strb	r3, [r7, #35]
 314:main.c        ****     
 315:main.c        ****     switch (currentInstructionDirection) {
 1218              		.loc 1 315 0
 1219 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1220 0030 052B     		cmp	r3, #5
 1221 0032 00F28882 		bhi	.L62
 1222 0036 01A2     		adr	r2, .L64
 1223 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1224              		.p2align 2
 1225              	.L64:
 1226 003c 55000000 		.word	.L63+1
 1227 0040 17010000 		.word	.L65+1
 1228 0044 3B020000 		.word	.L66+1
 1229 0048 C1040000 		.word	.L67+1
 1230 004c A5030000 		.word	.L68+1
 1231 0050 01040000 		.word	.L69+1
 1232              		.p2align 1
 1233              	.L63:
 316:main.c        ****         case GoForward:
 317:main.c        ****             if(currentDirection == Stop) {
 1234              		.loc 1 317 0
 1235 0054 8D4B     		ldr	r3, .L120+12
 1236 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0058 052B     		cmp	r3, #5
 1238 005a 08D1     		bne	.L70
 318:main.c        ****                 if(stopBuffer <= 25) {
 1239              		.loc 1 318 0
 1240 005c 8C4B     		ldr	r3, .L120+16
 1241 005e 1B68     		ldr	r3, [r3]
 1242 0060 192B     		cmp	r3, #25
 1243 0062 01D8     		bhi	.L71
 319:main.c        ****                     return Stop;
 1244              		.loc 1 319 0
 1245 0064 0523     		movs	r3, #5
 1246 0066 6FE2     		b	.L72
 1247              	.L71:
 320:main.c        ****                 } else {
 321:main.c        ****                     stopBuffer = 100;
 1248              		.loc 1 321 0
 1249 0068 894B     		ldr	r3, .L120+16
 1250 006a 6422     		movs	r2, #100
 1251 006c 1A60     		str	r2, [r3]
 1252              	.L70:
 322:main.c        ****                 }
 323:main.c        ****             }
 324:main.c        ****             if (s3) {
 1253              		.loc 1 324 0
 1254 006e 894B     		ldr	r3, .L120+20
 1255 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 0072 002B     		cmp	r3, #0
 1257 0074 02D0     		beq	.L73
 325:main.c        ****                 leftStatusFlag = 1;
 1258              		.loc 1 325 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 29


 1259 0076 884B     		ldr	r3, .L120+24
 1260 0078 0122     		movs	r2, #1
 1261 007a 1A70     		strb	r2, [r3]
 1262              	.L73:
 326:main.c        ****             }
 327:main.c        ****             
 328:main.c        ****             if (s4) {
 1263              		.loc 1 328 0
 1264 007c 874B     		ldr	r3, .L120+28
 1265 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1266 0080 002B     		cmp	r3, #0
 1267 0082 02D0     		beq	.L74
 329:main.c        ****                 rightStatusFlag = 1;
 1268              		.loc 1 329 0
 1269 0084 864B     		ldr	r3, .L120+32
 1270 0086 0122     		movs	r2, #1
 1271 0088 1A70     		strb	r2, [r3]
 1272              	.L74:
 330:main.c        ****             }
 331:main.c        ****             
 332:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 333:main.c        ****             if (leftStatusFlag) {
 1273              		.loc 1 333 0
 1274 008a 834B     		ldr	r3, .L120+24
 1275 008c 1B78     		ldrb	r3, [r3]
 1276 008e DBB2     		uxtb	r3, r3
 1277 0090 002B     		cmp	r3, #0
 1278 0092 1BD0     		beq	.L75
 334:main.c        ****                 if (!s3) {
 1279              		.loc 1 334 0
 1280 0094 7F4B     		ldr	r3, .L120+20
 1281 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1282 0098 002B     		cmp	r3, #0
 1283 009a 17D1     		bne	.L75
 335:main.c        ****                     leftStatusFlag = 0;    
 1284              		.loc 1 335 0
 1285 009c 7E4B     		ldr	r3, .L120+24
 1286 009e 0022     		movs	r2, #0
 1287 00a0 1A70     		strb	r2, [r3]
 336:main.c        ****                     if (currentIgnoreL == 0) {
 1288              		.loc 1 336 0
 1289 00a2 804B     		ldr	r3, .L120+36
 1290 00a4 1B78     		ldrb	r3, [r3]
 1291 00a6 DBB2     		uxtb	r3, r3
 1292 00a8 002B     		cmp	r3, #0
 1293 00aa 03D1     		bne	.L76
 337:main.c        ****                         MoveToNextInstruction();
 1294              		.loc 1 337 0
 1295 00ac FFF7FEFF 		bl	MoveToNextInstruction
 338:main.c        ****                         return Stop;
 1296              		.loc 1 338 0
 1297 00b0 0523     		movs	r3, #5
 1298 00b2 49E2     		b	.L72
 1299              	.L76:
 339:main.c        ****                     }
 340:main.c        ****                     if (currentIgnoreL > 0) {
 1300              		.loc 1 340 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 30


 1301 00b4 7B4B     		ldr	r3, .L120+36
 1302 00b6 1B78     		ldrb	r3, [r3]
 1303 00b8 DBB2     		uxtb	r3, r3
 1304 00ba 002B     		cmp	r3, #0
 1305 00bc 06D0     		beq	.L75
 341:main.c        ****                         currentIgnoreL--;    
 1306              		.loc 1 341 0
 1307 00be 794B     		ldr	r3, .L120+36
 1308 00c0 1B78     		ldrb	r3, [r3]
 1309 00c2 DBB2     		uxtb	r3, r3
 1310 00c4 013B     		subs	r3, r3, #1
 1311 00c6 DAB2     		uxtb	r2, r3
 1312 00c8 764B     		ldr	r3, .L120+36
 1313 00ca 1A70     		strb	r2, [r3]
 1314              	.L75:
 342:main.c        ****                     }
 343:main.c        ****                 }
 344:main.c        ****             }
 345:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 346:main.c        ****             if (rightStatusFlag) {
 1315              		.loc 1 346 0
 1316 00cc 744B     		ldr	r3, .L120+32
 1317 00ce 1B78     		ldrb	r3, [r3]
 1318 00d0 DBB2     		uxtb	r3, r3
 1319 00d2 002B     		cmp	r3, #0
 1320 00d4 1BD0     		beq	.L77
 347:main.c        ****                 if (!s4) {
 1321              		.loc 1 347 0
 1322 00d6 714B     		ldr	r3, .L120+28
 1323 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1324 00da 002B     		cmp	r3, #0
 1325 00dc 17D1     		bne	.L77
 348:main.c        ****                     rightStatusFlag = 0;
 1326              		.loc 1 348 0
 1327 00de 704B     		ldr	r3, .L120+32
 1328 00e0 0022     		movs	r2, #0
 1329 00e2 1A70     		strb	r2, [r3]
 349:main.c        ****                     if (currentIgnoreR == 0) {
 1330              		.loc 1 349 0
 1331 00e4 704B     		ldr	r3, .L120+40
 1332 00e6 1B78     		ldrb	r3, [r3]
 1333 00e8 DBB2     		uxtb	r3, r3
 1334 00ea 002B     		cmp	r3, #0
 1335 00ec 03D1     		bne	.L78
 350:main.c        ****                         MoveToNextInstruction();
 1336              		.loc 1 350 0
 1337 00ee FFF7FEFF 		bl	MoveToNextInstruction
 351:main.c        ****                         return Stop;
 1338              		.loc 1 351 0
 1339 00f2 0523     		movs	r3, #5
 1340 00f4 28E2     		b	.L72
 1341              	.L78:
 352:main.c        ****                     }
 353:main.c        ****                     if (currentIgnoreR > 0) {
 1342              		.loc 1 353 0
 1343 00f6 6C4B     		ldr	r3, .L120+40
 1344 00f8 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 31


 1345 00fa DBB2     		uxtb	r3, r3
 1346 00fc 002B     		cmp	r3, #0
 1347 00fe 06D0     		beq	.L77
 354:main.c        ****                         currentIgnoreR--;    
 1348              		.loc 1 354 0
 1349 0100 694B     		ldr	r3, .L120+40
 1350 0102 1B78     		ldrb	r3, [r3]
 1351 0104 DBB2     		uxtb	r3, r3
 1352 0106 013B     		subs	r3, r3, #1
 1353 0108 DAB2     		uxtb	r2, r3
 1354 010a 674B     		ldr	r3, .L120+40
 1355 010c 1A70     		strb	r2, [r3]
 1356              	.L77:
 355:main.c        ****                     }
 356:main.c        ****                 }
 357:main.c        ****             }
 358:main.c        ****           
 359:main.c        ****             return ForwardCourseCorrection();
 1357              		.loc 1 359 0
 1358 010e FFF7FEFF 		bl	ForwardCourseCorrection
 1359 0112 0346     		mov	r3, r0
 1360 0114 18E2     		b	.L72
 1361              	.L65:
 360:main.c        ****             break;
 361:main.c        ****         case waitForLeftTurn:
 362:main.c        ****             // continue moving forward until s3 goes on black
 363:main.c        ****             // if we are turning left already
 364:main.c        ****                 // wait until s5 || s6 are on black
 365:main.c        ****                 // return stop
 366:main.c        ****             if (!firstTurnIteration) {
 1362              		.loc 1 366 0
 1363 0116 654B     		ldr	r3, .L120+44
 1364 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1365 011a 002B     		cmp	r3, #0
 1366 011c 08D1     		bne	.L79
 367:main.c        ****                 if (!s3) {
 1367              		.loc 1 367 0
 1368 011e 5D4B     		ldr	r3, .L120+20
 1369 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 0122 002B     		cmp	r3, #0
 1371 0124 04D1     		bne	.L79
 368:main.c        ****                     firstTurnIteration = 1;
 1372              		.loc 1 368 0
 1373 0126 614B     		ldr	r3, .L120+44
 1374 0128 0122     		movs	r2, #1
 1375 012a 1A70     		strb	r2, [r3]
 369:main.c        ****                     return Stop;    
 1376              		.loc 1 369 0
 1377 012c 0523     		movs	r3, #5
 1378 012e 0BE2     		b	.L72
 1379              	.L79:
 370:main.c        ****                 }
 371:main.c        ****                 if (s3) {
 372:main.c        ****                     //return Backward;    
 373:main.c        ****                 }
 374:main.c        ****             }
 375:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 32


 376:main.c        ****             if (turnFinishedFlag) {
 1380              		.loc 1 376 0
 1381 0130 5F4B     		ldr	r3, .L120+48
 1382 0132 1B78     		ldrb	r3, [r3]
 1383 0134 DBB2     		uxtb	r3, r3
 1384 0136 002B     		cmp	r3, #0
 1385 0138 31D0     		beq	.L81
 377:main.c        ****                 if (!s3 && !s5 && !s6) {
 1386              		.loc 1 377 0
 1387 013a 564B     		ldr	r3, .L120+20
 1388 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389 013e 002B     		cmp	r3, #0
 1390 0140 0BD1     		bne	.L82
 1391              		.loc 1 377 0 is_stmt 0 discriminator 1
 1392 0142 5C4B     		ldr	r3, .L120+52
 1393 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1394 0146 002B     		cmp	r3, #0
 1395 0148 07D1     		bne	.L82
 1396              		.loc 1 377 0 discriminator 2
 1397 014a 5B4B     		ldr	r3, .L120+56
 1398 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 014e 002B     		cmp	r3, #0
 1400 0150 03D1     		bne	.L82
 378:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 379:main.c        ****                     return ForwardCourseCorrection();
 1401              		.loc 1 379 0 is_stmt 1
 1402 0152 FFF7FEFF 		bl	ForwardCourseCorrection
 1403 0156 0346     		mov	r3, r0
 1404 0158 F6E1     		b	.L72
 1405              	.L82:
 380:main.c        ****                 }
 381:main.c        ****                 if (s5 || s6) {
 1406              		.loc 1 381 0
 1407 015a 564B     		ldr	r3, .L120+52
 1408 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 015e 002B     		cmp	r3, #0
 1410 0160 03D1     		bne	.L83
 1411              		.loc 1 381 0 is_stmt 0 discriminator 1
 1412 0162 554B     		ldr	r3, .L120+56
 1413 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1414 0166 002B     		cmp	r3, #0
 1415 0168 03D0     		beq	.L84
 1416              	.L83:
 382:main.c        ****                     return SpinCourseCorrection();
 1417              		.loc 1 382 0 is_stmt 1
 1418 016a FFF7FEFF 		bl	SpinCourseCorrection
 1419 016e 0346     		mov	r3, r0
 1420 0170 EAE1     		b	.L72
 1421              	.L84:
 383:main.c        ****                 }
 384:main.c        ****                 if (forwardBuffer <= 10) {
 1422              		.loc 1 384 0
 1423 0172 524B     		ldr	r3, .L120+60
 1424 0174 1B88     		ldrh	r3, [r3]
 1425 0176 0A2B     		cmp	r3, #10
 1426 0178 03D8     		bhi	.L85
 385:main.c        ****                     return ForwardCourseCorrection();    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 33


 1427              		.loc 1 385 0
 1428 017a FFF7FEFF 		bl	ForwardCourseCorrection
 1429 017e 0346     		mov	r3, r0
 1430 0180 E2E1     		b	.L72
 1431              	.L85:
 386:main.c        **** 
 387:main.c        ****                 } else {
 388:main.c        ****                     forwardBuffer = 100;
 1432              		.loc 1 388 0
 1433 0182 4E4B     		ldr	r3, .L120+60
 1434 0184 6422     		movs	r2, #100
 1435 0186 1A80     		strh	r2, [r3]	@ movhi
 389:main.c        ****                     if (s3) {
 1436              		.loc 1 389 0
 1437 0188 424B     		ldr	r3, .L120+20
 1438 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 018c 002B     		cmp	r3, #0
 1440 018e 06D0     		beq	.L81
 390:main.c        ****                         turnFinishedFlag = 0;
 1441              		.loc 1 390 0
 1442 0190 474B     		ldr	r3, .L120+48
 1443 0192 0022     		movs	r2, #0
 1444 0194 1A70     		strb	r2, [r3]
 391:main.c        ****                         MoveToNextInstruction();   
 1445              		.loc 1 391 0
 1446 0196 FFF7FEFF 		bl	MoveToNextInstruction
 392:main.c        ****                         return Stop;  
 1447              		.loc 1 392 0
 1448 019a 0523     		movs	r3, #5
 1449 019c D4E1     		b	.L72
 1450              	.L81:
 393:main.c        ****                     }
 394:main.c        ****                 }
 395:main.c        ****             }
 396:main.c        ****             
 397:main.c        ****             
 398:main.c        ****             if (currentDirection == Stop) {
 1451              		.loc 1 398 0
 1452 019e 3B4B     		ldr	r3, .L120+12
 1453 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 01a2 052B     		cmp	r3, #5
 1455 01a4 09D1     		bne	.L86
 399:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 400:main.c        ****                 if (stopBuffer <= 25) {
 1456              		.loc 1 400 0
 1457 01a6 3A4B     		ldr	r3, .L120+16
 1458 01a8 1B68     		ldr	r3, [r3]
 1459 01aa 192B     		cmp	r3, #25
 1460 01ac 01D8     		bhi	.L87
 401:main.c        ****                     return Stop;   
 1461              		.loc 1 401 0
 1462 01ae 0523     		movs	r3, #5
 1463 01b0 CAE1     		b	.L72
 1464              	.L87:
 402:main.c        ****                 }
 403:main.c        ****                 return ForwardCourseCorrection();
 1465              		.loc 1 403 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 34


 1466 01b2 FFF7FEFF 		bl	ForwardCourseCorrection
 1467 01b6 0346     		mov	r3, r0
 1468 01b8 C6E1     		b	.L72
 1469              	.L86:
 404:main.c        ****             }
 405:main.c        ****          
 406:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 407:main.c        ****             if (currentDirection == TurnLeft) {
 1470              		.loc 1 407 0
 1471 01ba 344B     		ldr	r3, .L120+12
 1472 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 01be 022B     		cmp	r3, #2
 1474 01c0 2ED1     		bne	.L88
 408:main.c        ****                 // If turn started and we are still on black, continue turning
 409:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 410:main.c        ****                 if (turnStartedFlag) {
 1475              		.loc 1 410 0
 1476 01c2 3F4B     		ldr	r3, .L120+64
 1477 01c4 1B78     		ldrb	r3, [r3]
 1478 01c6 DBB2     		uxtb	r3, r3
 1479 01c8 002B     		cmp	r3, #0
 1480 01ca 0ED0     		beq	.L89
 411:main.c        ****                     if (s3 && (s5 && s6)) {
 1481              		.loc 1 411 0
 1482 01cc 314B     		ldr	r3, .L120+20
 1483 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 01d0 002B     		cmp	r3, #0
 1485 01d2 0AD0     		beq	.L89
 1486              		.loc 1 411 0 is_stmt 0 discriminator 1
 1487 01d4 374B     		ldr	r3, .L120+52
 1488 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 01d8 002B     		cmp	r3, #0
 1490 01da 06D0     		beq	.L89
 1491              		.loc 1 411 0 discriminator 2
 1492 01dc 364B     		ldr	r3, .L120+56
 1493 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1494 01e0 002B     		cmp	r3, #0
 1495 01e2 02D0     		beq	.L89
 412:main.c        ****                         turnStartedFlag = 0;
 1496              		.loc 1 412 0 is_stmt 1
 1497 01e4 364B     		ldr	r3, .L120+64
 1498 01e6 0022     		movs	r2, #0
 1499 01e8 1A70     		strb	r2, [r3]
 1500              	.L89:
 413:main.c        ****                     }
 414:main.c        ****                 }
 415:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1501              		.loc 1 415 0
 1502 01ea 354B     		ldr	r3, .L120+64
 1503 01ec 1B78     		ldrb	r3, [r3]
 1504 01ee DBB2     		uxtb	r3, r3
 1505 01f0 002B     		cmp	r3, #0
 1506 01f2 13D1     		bne	.L90
 1507              		.loc 1 415 0 is_stmt 0 discriminator 1
 1508 01f4 274B     		ldr	r3, .L120+20
 1509 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1510 01f8 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 35


 1511 01fa 0FD1     		bne	.L90
 1512              		.loc 1 415 0 discriminator 2
 1513 01fc 2D4B     		ldr	r3, .L120+52
 1514 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 0200 002B     		cmp	r3, #0
 1516 0202 03D0     		beq	.L91
 1517              		.loc 1 415 0 discriminator 3
 1518 0204 2C4B     		ldr	r3, .L120+56
 1519 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1520 0208 002B     		cmp	r3, #0
 1521 020a 07D1     		bne	.L90
 1522              	.L91:
 416:main.c        ****                     turnFinishedFlag = 1;
 1523              		.loc 1 416 0 is_stmt 1
 1524 020c 284B     		ldr	r3, .L120+48
 1525 020e 0122     		movs	r2, #1
 1526 0210 1A70     		strb	r2, [r3]
 417:main.c        ****                     firstTurnIteration = 0;
 1527              		.loc 1 417 0
 1528 0212 264B     		ldr	r3, .L120+44
 1529 0214 0022     		movs	r2, #0
 1530 0216 1A70     		strb	r2, [r3]
 418:main.c        ****                     return ForwardAfterTurn;
 1531              		.loc 1 418 0
 1532 0218 0823     		movs	r3, #8
 1533 021a 95E1     		b	.L72
 1534              	.L90:
 419:main.c        ****                 }
 420:main.c        ****                 else
 421:main.c        ****                 {
 422:main.c        ****                     return TurnLeft;
 1535              		.loc 1 422 0
 1536 021c 0223     		movs	r3, #2
 1537 021e 93E1     		b	.L72
 1538              	.L88:
 423:main.c        ****                 }
 424:main.c        ****             }
 425:main.c        ****             
 426:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 427:main.c        ****             if (!s3) {
 1539              		.loc 1 427 0
 1540 0220 1C4B     		ldr	r3, .L120+20
 1541 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1542 0224 002B     		cmp	r3, #0
 1543 0226 04D1     		bne	.L92
 428:main.c        ****                 turnStartedFlag = 1;
 1544              		.loc 1 428 0
 1545 0228 254B     		ldr	r3, .L120+64
 1546 022a 0122     		movs	r2, #1
 1547 022c 1A70     		strb	r2, [r3]
 429:main.c        ****                 return TurnLeft;
 1548              		.loc 1 429 0
 1549 022e 0223     		movs	r3, #2
 1550 0230 8AE1     		b	.L72
 1551              	.L92:
 430:main.c        ****             }
 431:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 36


 432:main.c        ****             // Otherwise, keep going forward
 433:main.c        ****             return ForwardCourseCorrection(); 
 1552              		.loc 1 433 0
 1553 0232 FFF7FEFF 		bl	ForwardCourseCorrection
 1554 0236 0346     		mov	r3, r0
 1555 0238 86E1     		b	.L72
 1556              	.L66:
 434:main.c        ****             break;
 435:main.c        ****         case waitForRightTurn:
 436:main.c        ****             // continue moving forward until s4 goes on black
 437:main.c        ****             // if we are turning left already
 438:main.c        ****                 // wait until s5 || s6 are on black
 439:main.c        ****                 // return stop
 440:main.c        ****             if (!firstTurnIteration) {
 1557              		.loc 1 440 0
 1558 023a 1C4B     		ldr	r3, .L120+44
 1559 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 023e 002B     		cmp	r3, #0
 1561 0240 08D1     		bne	.L93
 441:main.c        ****                 if (!s4) {
 1562              		.loc 1 441 0
 1563 0242 164B     		ldr	r3, .L120+28
 1564 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 0246 002B     		cmp	r3, #0
 1566 0248 04D1     		bne	.L93
 442:main.c        ****                     firstTurnIteration = 1; 
 1567              		.loc 1 442 0
 1568 024a 184B     		ldr	r3, .L120+44
 1569 024c 0122     		movs	r2, #1
 1570 024e 1A70     		strb	r2, [r3]
 443:main.c        ****                     return Stop;
 1571              		.loc 1 443 0
 1572 0250 0523     		movs	r3, #5
 1573 0252 79E1     		b	.L72
 1574              	.L93:
 444:main.c        ****                 }
 445:main.c        ****                 if (s4) {
 446:main.c        ****                     //return Backward;    
 447:main.c        ****                 }
 448:main.c        ****             }
 449:main.c        **** 
 450:main.c        ****             if (turnFinishedFlag) {
 1575              		.loc 1 450 0
 1576 0254 164B     		ldr	r3, .L120+48
 1577 0256 1B78     		ldrb	r3, [r3]
 1578 0258 DBB2     		uxtb	r3, r3
 1579 025a 002B     		cmp	r3, #0
 1580 025c 57D0     		beq	.L95
 451:main.c        ****                 if (!s4 && !s5 && !s6) {
 1581              		.loc 1 451 0
 1582 025e 0F4B     		ldr	r3, .L120+28
 1583 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 0262 002B     		cmp	r3, #0
 1585 0264 2ED1     		bne	.L96
 1586              		.loc 1 451 0 is_stmt 0 discriminator 1
 1587 0266 134B     		ldr	r3, .L120+52
 1588 0268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 37


 1589 026a 002B     		cmp	r3, #0
 1590 026c 2AD1     		bne	.L96
 1591              		.loc 1 451 0 discriminator 2
 1592 026e 124B     		ldr	r3, .L120+56
 1593 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 0272 002B     		cmp	r3, #0
 1595 0274 26D1     		bne	.L96
 452:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 453:main.c        ****                     return ForwardCourseCorrection();
 1596              		.loc 1 453 0 is_stmt 1
 1597 0276 FFF7FEFF 		bl	ForwardCourseCorrection
 1598 027a 0346     		mov	r3, r0
 1599 027c 64E1     		b	.L72
 1600              	.L121:
 1601 027e 00BF     		.align	2
 1602              	.L120:
 1603 0280 00000000 		.word	currentInstruction
 1604 0284 00000000 		.word	yBlocksize
 1605 0288 00000000 		.word	xBlocksize
 1606 028c 00000000 		.word	currentDirection
 1607 0290 00000000 		.word	stopBuffer
 1608 0294 00000000 		.word	s3
 1609 0298 3B000000 		.word	leftStatusFlag
 1610 029c 00000000 		.word	s4
 1611 02a0 3C000000 		.word	rightStatusFlag
 1612 02a4 3E000000 		.word	currentIgnoreL
 1613 02a8 45000000 		.word	currentIgnoreR
 1614 02ac 00000000 		.word	firstTurnIteration
 1615 02b0 37000000 		.word	turnFinishedFlag
 1616 02b4 00000000 		.word	s5
 1617 02b8 00000000 		.word	s6
 1618 02bc 00000000 		.word	forwardBuffer
 1619 02c0 36000000 		.word	turnStartedFlag
 1620              	.L96:
 454:main.c        ****                 }
 455:main.c        ****                 if (s5 || s6) {
 1621              		.loc 1 455 0
 1622 02c4 A24B     		ldr	r3, .L122
 1623 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1624 02c8 002B     		cmp	r3, #0
 1625 02ca 03D1     		bne	.L97
 1626              		.loc 1 455 0 is_stmt 0 discriminator 1
 1627 02cc A14B     		ldr	r3, .L122+4
 1628 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1629 02d0 002B     		cmp	r3, #0
 1630 02d2 03D0     		beq	.L98
 1631              	.L97:
 456:main.c        ****                     return SpinCourseCorrection();
 1632              		.loc 1 456 0 is_stmt 1
 1633 02d4 FFF7FEFF 		bl	SpinCourseCorrection
 1634 02d8 0346     		mov	r3, r0
 1635 02da 35E1     		b	.L72
 1636              	.L98:
 457:main.c        ****                 }
 458:main.c        ****                 if (forwardBuffer <= 10) {
 1637              		.loc 1 458 0
 1638 02dc 9E4B     		ldr	r3, .L122+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 38


 1639 02de 1B88     		ldrh	r3, [r3]
 1640 02e0 0A2B     		cmp	r3, #10
 1641 02e2 03D8     		bhi	.L99
 459:main.c        ****                     return ForwardCourseCorrection();    
 1642              		.loc 1 459 0
 1643 02e4 FFF7FEFF 		bl	ForwardCourseCorrection
 1644 02e8 0346     		mov	r3, r0
 1645 02ea 2DE1     		b	.L72
 1646              	.L99:
 460:main.c        **** 
 461:main.c        ****                 } else {
 462:main.c        ****                     forwardBuffer = 100;
 1647              		.loc 1 462 0
 1648 02ec 9A4B     		ldr	r3, .L122+8
 1649 02ee 6422     		movs	r2, #100
 1650 02f0 1A80     		strh	r2, [r3]	@ movhi
 463:main.c        ****                     if (s4) {
 1651              		.loc 1 463 0
 1652 02f2 9A4B     		ldr	r3, .L122+12
 1653 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1654 02f6 002B     		cmp	r3, #0
 1655 02f8 09D0     		beq	.L95
 464:main.c        ****                         firstTurnIteration = 0;
 1656              		.loc 1 464 0
 1657 02fa 994B     		ldr	r3, .L122+16
 1658 02fc 0022     		movs	r2, #0
 1659 02fe 1A70     		strb	r2, [r3]
 465:main.c        ****                         turnFinishedFlag = 0;
 1660              		.loc 1 465 0
 1661 0300 984B     		ldr	r3, .L122+20
 1662 0302 0022     		movs	r2, #0
 1663 0304 1A70     		strb	r2, [r3]
 466:main.c        ****                         MoveToNextInstruction();   
 1664              		.loc 1 466 0
 1665 0306 FFF7FEFF 		bl	MoveToNextInstruction
 467:main.c        ****                         return Stop;  
 1666              		.loc 1 467 0
 1667 030a 0523     		movs	r3, #5
 1668 030c 1CE1     		b	.L72
 1669              	.L95:
 468:main.c        ****                     }
 469:main.c        ****                 }
 470:main.c        ****             }
 471:main.c        ****             
 472:main.c        ****             if (currentDirection == Stop) {
 1670              		.loc 1 472 0
 1671 030e 964B     		ldr	r3, .L122+24
 1672 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 0312 052B     		cmp	r3, #5
 1674 0314 09D1     		bne	.L100
 473:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 474:main.c        ****                 if (stopBuffer <= 25) {
 1675              		.loc 1 474 0
 1676 0316 954B     		ldr	r3, .L122+28
 1677 0318 1B68     		ldr	r3, [r3]
 1678 031a 192B     		cmp	r3, #25
 1679 031c 01D8     		bhi	.L101
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 39


 475:main.c        ****                     return Stop;   
 1680              		.loc 1 475 0
 1681 031e 0523     		movs	r3, #5
 1682 0320 12E1     		b	.L72
 1683              	.L101:
 476:main.c        ****                 }
 477:main.c        **** 
 478:main.c        ****                 return ForwardCourseCorrection();
 1684              		.loc 1 478 0
 1685 0322 FFF7FEFF 		bl	ForwardCourseCorrection
 1686 0326 0346     		mov	r3, r0
 1687 0328 0EE1     		b	.L72
 1688              	.L100:
 479:main.c        ****             }
 480:main.c        ****                       
 481:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 482:main.c        ****             if (currentDirection == TurnRight) {
 1689              		.loc 1 482 0
 1690 032a 8F4B     		ldr	r3, .L122+24
 1691 032c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 032e 012B     		cmp	r3, #1
 1693 0330 2BD1     		bne	.L102
 483:main.c        ****                 // If turn started and we are still on black, continue turning
 484:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 485:main.c        ****                 if (turnStartedFlag) {
 1694              		.loc 1 485 0
 1695 0332 8F4B     		ldr	r3, .L122+32
 1696 0334 1B78     		ldrb	r3, [r3]
 1697 0336 DBB2     		uxtb	r3, r3
 1698 0338 002B     		cmp	r3, #0
 1699 033a 0ED0     		beq	.L103
 486:main.c        ****                     if (s4 && (s5 && s6)) {
 1700              		.loc 1 486 0
 1701 033c 874B     		ldr	r3, .L122+12
 1702 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703 0340 002B     		cmp	r3, #0
 1704 0342 0AD0     		beq	.L103
 1705              		.loc 1 486 0 is_stmt 0 discriminator 1
 1706 0344 824B     		ldr	r3, .L122
 1707 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1708 0348 002B     		cmp	r3, #0
 1709 034a 06D0     		beq	.L103
 1710              		.loc 1 486 0 discriminator 2
 1711 034c 814B     		ldr	r3, .L122+4
 1712 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 0350 002B     		cmp	r3, #0
 1714 0352 02D0     		beq	.L103
 487:main.c        ****                         turnStartedFlag = 0;
 1715              		.loc 1 487 0 is_stmt 1
 1716 0354 864B     		ldr	r3, .L122+32
 1717 0356 0022     		movs	r2, #0
 1718 0358 1A70     		strb	r2, [r3]
 1719              	.L103:
 488:main.c        ****                     }
 489:main.c        ****                 }
 490:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1720              		.loc 1 490 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 40


 1721 035a 854B     		ldr	r3, .L122+32
 1722 035c 1B78     		ldrb	r3, [r3]
 1723 035e DBB2     		uxtb	r3, r3
 1724 0360 002B     		cmp	r3, #0
 1725 0362 10D1     		bne	.L104
 1726              		.loc 1 490 0 is_stmt 0 discriminator 1
 1727 0364 7D4B     		ldr	r3, .L122+12
 1728 0366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 0368 002B     		cmp	r3, #0
 1730 036a 0CD1     		bne	.L104
 1731              		.loc 1 490 0 discriminator 2
 1732 036c 784B     		ldr	r3, .L122
 1733 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 0370 002B     		cmp	r3, #0
 1735 0372 03D0     		beq	.L105
 1736              		.loc 1 490 0 discriminator 3
 1737 0374 774B     		ldr	r3, .L122+4
 1738 0376 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 0378 002B     		cmp	r3, #0
 1740 037a 04D1     		bne	.L104
 1741              	.L105:
 491:main.c        ****                     turnFinishedFlag = 1;
 1742              		.loc 1 491 0 is_stmt 1
 1743 037c 794B     		ldr	r3, .L122+20
 1744 037e 0122     		movs	r2, #1
 1745 0380 1A70     		strb	r2, [r3]
 492:main.c        ****                     return ForwardAfterTurn;
 1746              		.loc 1 492 0
 1747 0382 0823     		movs	r3, #8
 1748 0384 E0E0     		b	.L72
 1749              	.L104:
 493:main.c        ****                 }
 494:main.c        ****                 else
 495:main.c        ****                 {
 496:main.c        ****                     return TurnRight;
 1750              		.loc 1 496 0
 1751 0386 0123     		movs	r3, #1
 1752 0388 DEE0     		b	.L72
 1753              	.L102:
 497:main.c        ****                 }
 498:main.c        ****             }
 499:main.c        ****             
 500:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 501:main.c        ****             if (!s4) {
 1754              		.loc 1 501 0
 1755 038a 744B     		ldr	r3, .L122+12
 1756 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1757 038e 002B     		cmp	r3, #0
 1758 0390 04D1     		bne	.L106
 502:main.c        ****                 turnStartedFlag = 1;
 1759              		.loc 1 502 0
 1760 0392 774B     		ldr	r3, .L122+32
 1761 0394 0122     		movs	r2, #1
 1762 0396 1A70     		strb	r2, [r3]
 503:main.c        ****                 return TurnRight;
 1763              		.loc 1 503 0
 1764 0398 0123     		movs	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 41


 1765 039a D5E0     		b	.L72
 1766              	.L106:
 504:main.c        ****             }
 505:main.c        ****             
 506:main.c        ****             // Otherwise, keep going forward
 507:main.c        ****             return ForwardCourseCorrection(); 
 1767              		.loc 1 507 0
 1768 039c FFF7FEFF 		bl	ForwardCourseCorrection
 1769 03a0 0346     		mov	r3, r0
 1770 03a2 D1E0     		b	.L72
 1771              	.L68:
 508:main.c        ****             break;
 509:main.c        ****         case ForwardUntilTarget:
 510:main.c        ****             // Reset distance on first iteration of this instruction
 511:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1772              		.loc 1 511 0
 1773 03a4 734B     		ldr	r3, .L122+36
 1774 03a6 1B78     		ldrb	r3, [r3]
 1775 03a8 DBB2     		uxtb	r3, r3
 1776 03aa 002B     		cmp	r3, #0
 1777 03ac 15D1     		bne	.L107
 1778              	.LBB3:
 512:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1779              		.loc 1 512 0
 1780 03ae 714B     		ldr	r3, .L122+36
 1781 03b0 0122     		movs	r2, #1
 1782 03b2 1A70     		strb	r2, [r3]
 513:main.c        ****                 totalDistance = 0;
 1783              		.loc 1 513 0
 1784 03b4 704B     		ldr	r3, .L122+40
 1785 03b6 4FF00002 		mov	r2, #0
 1786 03ba 1A60     		str	r2, [r3]	@ float
 514:main.c        **** 
 515:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 516:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1787              		.loc 1 516 0
 1788 03bc 6F4B     		ldr	r3, .L122+44
 1789 03be DB68     		ldr	r3, [r3, #12]
 1790 03c0 FB61     		str	r3, [r7, #28]
 517:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 1791              		.loc 1 517 0
 1792 03c2 F869     		ldr	r0, [r7, #28]
 1793 03c4 FFF7FEFF 		bl	__aeabi_i2f
 1794 03c8 0346     		mov	r3, r0
 1795 03ca 796A     		ldr	r1, [r7, #36]	@ float
 1796 03cc 1846     		mov	r0, r3
 1797 03ce FFF7FEFF 		bl	__aeabi_fmul
 1798 03d2 0346     		mov	r3, r0
 1799 03d4 1A46     		mov	r2, r3
 1800 03d6 6A4B     		ldr	r3, .L122+48
 1801 03d8 1A60     		str	r2, [r3]	@ float
 1802              	.L107:
 1803              	.LBE3:
 518:main.c        ****             }
 519:main.c        ****             
 520:main.c        ****             
 521:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 42


 522:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1804              		.loc 1 522 0
 1805 03da 674B     		ldr	r3, .L122+40
 1806 03dc 1A68     		ldr	r2, [r3]	@ float
 1807 03de 684B     		ldr	r3, .L122+48
 1808 03e0 1B68     		ldr	r3, [r3]	@ float
 1809 03e2 1946     		mov	r1, r3
 1810 03e4 1046     		mov	r0, r2
 1811 03e6 FFF7FEFF 		bl	__aeabi_fcmpge
 1812 03ea 0346     		mov	r3, r0
 1813 03ec 002B     		cmp	r3, #0
 1814 03ee 03D0     		beq	.L119
 523:main.c        ****                 // Get next instruction
 524:main.c        ****                 MoveToNextInstruction();
 1815              		.loc 1 524 0
 1816 03f0 FFF7FEFF 		bl	MoveToNextInstruction
 525:main.c        **** 
 526:main.c        ****                 
 527:main.c        ****                 return Stop;
 1817              		.loc 1 527 0
 1818 03f4 0523     		movs	r3, #5
 1819 03f6 A7E0     		b	.L72
 1820              	.L119:
 528:main.c        ****             }
 529:main.c        ****             
 530:main.c        ****             return ForwardCourseCorrection();
 1821              		.loc 1 530 0
 1822 03f8 FFF7FEFF 		bl	ForwardCourseCorrection
 1823 03fc 0346     		mov	r3, r0
 1824 03fe A3E0     		b	.L72
 1825              	.L69:
 531:main.c        ****             break;
 532:main.c        ****         case StopAtTarget:
 533:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 534:main.c        ****             // Reset flags
 535:main.c        ****             totalDistance = 0;
 1826              		.loc 1 535 0
 1827 0400 5D4B     		ldr	r3, .L122+40
 1828 0402 4FF00002 		mov	r2, #0
 1829 0406 1A60     		str	r2, [r3]	@ float
 536:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1830              		.loc 1 536 0
 1831 0408 5A4B     		ldr	r3, .L122+36
 1832 040a 0022     		movs	r2, #0
 1833 040c 1A70     		strb	r2, [r3]
 537:main.c        ****             blockSizeTotal = 0;
 1834              		.loc 1 537 0
 1835 040e 5C4B     		ldr	r3, .L122+48
 1836 0410 4FF00002 		mov	r2, #0
 1837 0414 1A60     		str	r2, [r3]	@ float
 538:main.c        ****             
 539:main.c        ****             if (currentDirection == Stop) {
 1838              		.loc 1 539 0
 1839 0416 544B     		ldr	r3, .L122+24
 1840 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 041a 052B     		cmp	r3, #5
 1842 041c 08D1     		bne	.L110
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 43


 540:main.c        ****                 if (stopBuffer <= 1) {
 1843              		.loc 1 540 0
 1844 041e 534B     		ldr	r3, .L122+28
 1845 0420 1B68     		ldr	r3, [r3]
 1846 0422 012B     		cmp	r3, #1
 1847 0424 01D8     		bhi	.L111
 541:main.c        ****                     return Stop;    
 1848              		.loc 1 541 0
 1849 0426 0523     		movs	r3, #5
 1850 0428 8EE0     		b	.L72
 1851              	.L111:
 542:main.c        ****                 } else {
 543:main.c        ****                     stopBuffer = 250;
 1852              		.loc 1 543 0
 1853 042a 504B     		ldr	r3, .L122+28
 1854 042c FA22     		movs	r2, #250
 1855 042e 1A60     		str	r2, [r3]
 1856              	.L110:
 544:main.c        ****                 }
 545:main.c        ****             }
 546:main.c        ****             
 547:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 548:main.c        ****             // Make sure index doesn't go over cap
 549:main.c        ****             // Stop at final location
 550:main.c        ****             if (currentFoodListIndex == 4) {
 1857              		.loc 1 550 0
 1858 0430 544B     		ldr	r3, .L122+52
 1859 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1860 0434 042B     		cmp	r3, #4
 1861 0436 01D1     		bne	.L112
 551:main.c        ****                 return Stop;    
 1862              		.loc 1 551 0
 1863 0438 0523     		movs	r3, #5
 1864 043a 85E0     		b	.L72
 1865              	.L112:
 552:main.c        ****             }
 553:main.c        ****             
 554:main.c        ****             currentFoodListIndex++;
 1866              		.loc 1 554 0
 1867 043c 514B     		ldr	r3, .L122+52
 1868 043e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1869 0440 0133     		adds	r3, r3, #1
 1870 0442 DAB2     		uxtb	r2, r3
 1871 0444 4F4B     		ldr	r3, .L122+52
 1872 0446 1A70     		strb	r2, [r3]
 555:main.c        ****             instructionIndex = 0;
 1873              		.loc 1 555 0
 1874 0448 4F4B     		ldr	r3, .L122+56
 1875 044a 0022     		movs	r2, #0
 1876 044c 1A60     		str	r2, [r3]
 556:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 1877              		.loc 1 556 0
 1878 044e 4D4B     		ldr	r3, .L122+52
 1879 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1880 0452 1A46     		mov	r2, r3
 1881 0454 494B     		ldr	r3, .L122+44
 1882 0456 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 44


 1883 0458 4C49     		ldr	r1, .L122+60
 1884 045a 4D48     		ldr	r0, .L122+64
 1885 045c FFF7FEFF 		bl	findPathNewOrientation
 1886 0460 0246     		mov	r2, r0
 1887 0462 4C4B     		ldr	r3, .L122+68
 1888 0464 1A60     		str	r2, [r3]
 557:main.c        ****             numSteps = instructionsListLength();
 1889              		.loc 1 557 0
 1890 0466 FFF7FEFF 		bl	instructionsListLength
 1891 046a 0346     		mov	r3, r0
 1892 046c 1A46     		mov	r2, r3
 1893 046e 4A4B     		ldr	r3, .L122+72
 1894 0470 1A60     		str	r2, [r3]
 558:main.c        ****     
 559:main.c        ****             currentInstruction = GetInstructionAtIndex();
 1895              		.loc 1 559 0
 1896 0472 424C     		ldr	r4, .L122+44
 1897 0474 3B46     		mov	r3, r7
 1898 0476 1846     		mov	r0, r3
 1899 0478 FFF7FEFF 		bl	GetInstructionAtIndex
 1900 047c 2546     		mov	r5, r4
 1901 047e 3C46     		mov	r4, r7
 1902 0480 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1903 0482 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1904 0484 2368     		ldr	r3, [r4]
 1905 0486 2B60     		str	r3, [r5]
 560:main.c        **** 
 561:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 1906              		.loc 1 561 0
 1907 0488 424B     		ldr	r3, .L122+68
 1908 048a 1968     		ldr	r1, [r3]
 1909 048c 3E4B     		ldr	r3, .L122+56
 1910 048e 1A68     		ldr	r2, [r3]
 1911 0490 1346     		mov	r3, r2
 1912 0492 9B00     		lsls	r3, r3, #2
 1913 0494 1344     		add	r3, r3, r2
 1914 0496 9B00     		lsls	r3, r3, #2
 1915 0498 0B44     		add	r3, r3, r1
 1916 049a 5B68     		ldr	r3, [r3, #4]
 1917 049c DAB2     		uxtb	r2, r3
 1918 049e 3F4B     		ldr	r3, .L122+76
 1919 04a0 1A70     		strb	r2, [r3]
 562:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 1920              		.loc 1 562 0
 1921 04a2 3C4B     		ldr	r3, .L122+68
 1922 04a4 1968     		ldr	r1, [r3]
 1923 04a6 384B     		ldr	r3, .L122+56
 1924 04a8 1A68     		ldr	r2, [r3]
 1925 04aa 1346     		mov	r3, r2
 1926 04ac 9B00     		lsls	r3, r3, #2
 1927 04ae 1344     		add	r3, r3, r2
 1928 04b0 9B00     		lsls	r3, r3, #2
 1929 04b2 0B44     		add	r3, r3, r1
 1930 04b4 9B68     		ldr	r3, [r3, #8]
 1931 04b6 DAB2     		uxtb	r2, r3
 1932 04b8 394B     		ldr	r3, .L122+80
 1933 04ba 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 45


 563:main.c        ****             
 564:main.c        ****             return Stop;
 1934              		.loc 1 564 0
 1935 04bc 0523     		movs	r3, #5
 1936 04be 43E0     		b	.L72
 1937              	.L67:
 565:main.c        ****             break;
 566:main.c        ****         case uTurn:
 567:main.c        ****             if (currentDirection == Stop) {
 1938              		.loc 1 567 0
 1939 04c0 294B     		ldr	r3, .L122+24
 1940 04c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1941 04c4 052B     		cmp	r3, #5
 1942 04c6 08D1     		bne	.L113
 568:main.c        ****                 if (stopBuffer <= 50) {
 1943              		.loc 1 568 0
 1944 04c8 284B     		ldr	r3, .L122+28
 1945 04ca 1B68     		ldr	r3, [r3]
 1946 04cc 322B     		cmp	r3, #50
 1947 04ce 01D8     		bhi	.L114
 569:main.c        ****                     return Stop;    
 1948              		.loc 1 569 0
 1949 04d0 0523     		movs	r3, #5
 1950 04d2 39E0     		b	.L72
 1951              	.L114:
 570:main.c        ****                 } else {
 571:main.c        ****                     stopBuffer = 100;    
 1952              		.loc 1 571 0
 1953 04d4 254B     		ldr	r3, .L122+28
 1954 04d6 6422     		movs	r2, #100
 1955 04d8 1A60     		str	r2, [r3]
 1956              	.L113:
 572:main.c        ****                 }
 573:main.c        ****             }
 574:main.c        ****             
 575:main.c        ****             
 576:main.c        ****             if (!uTurnStartedFlag) {
 1957              		.loc 1 576 0
 1958 04da 324B     		ldr	r3, .L122+84
 1959 04dc 1B78     		ldrb	r3, [r3]
 1960 04de DBB2     		uxtb	r3, r3
 1961 04e0 002B     		cmp	r3, #0
 1962 04e2 07D1     		bne	.L115
 577:main.c        ****                 uTurnStartedFlag = 1;
 1963              		.loc 1 577 0
 1964 04e4 2F4B     		ldr	r3, .L122+84
 1965 04e6 0122     		movs	r2, #1
 1966 04e8 1A70     		strb	r2, [r3]
 578:main.c        ****                 spinCourseCorrectionStarted = 0;
 1967              		.loc 1 578 0
 1968 04ea 2F4B     		ldr	r3, .L122+88
 1969 04ec 0022     		movs	r2, #0
 1970 04ee 1A70     		strb	r2, [r3]
 579:main.c        ****                 return Spin180;
 1971              		.loc 1 579 0
 1972 04f0 0A23     		movs	r3, #10
 1973 04f2 29E0     		b	.L72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 46


 1974              	.L115:
 580:main.c        ****             } 
 581:main.c        ****             
 582:main.c        ****             if (uTurnFinishedFlag) {
 1975              		.loc 1 582 0
 1976 04f4 2D4B     		ldr	r3, .L122+92
 1977 04f6 1B78     		ldrb	r3, [r3]
 1978 04f8 DBB2     		uxtb	r3, r3
 1979 04fa 002B     		cmp	r3, #0
 1980 04fc 03D0     		beq	.L116
 583:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 584:main.c        ****                 MoveToNextInstruction();
 1981              		.loc 1 584 0
 1982 04fe FFF7FEFF 		bl	MoveToNextInstruction
 585:main.c        ****                 return Stop;    
 1983              		.loc 1 585 0
 1984 0502 0523     		movs	r3, #5
 1985 0504 20E0     		b	.L72
 1986              	.L116:
 586:main.c        ****             }
 587:main.c        ****             
 588:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 589:main.c        ****             if (uTurnStartedFlag) {
 1987              		.loc 1 589 0
 1988 0506 274B     		ldr	r3, .L122+84
 1989 0508 1B78     		ldrb	r3, [r3]
 1990 050a DBB2     		uxtb	r3, r3
 1991 050c 002B     		cmp	r3, #0
 1992 050e 16D0     		beq	.L117
 590:main.c        ****                 if (!s5 && !s6) {
 1993              		.loc 1 590 0
 1994 0510 0F4B     		ldr	r3, .L122
 1995 0512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 0514 002B     		cmp	r3, #0
 1997 0516 12D1     		bne	.L117
 1998              		.loc 1 590 0 is_stmt 0 discriminator 1
 1999 0518 0E4B     		ldr	r3, .L122+4
 2000 051a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2001 051c 002B     		cmp	r3, #0
 2002 051e 0ED1     		bne	.L117
 591:main.c        ****                     totalLineCount = 0;
 2003              		.loc 1 591 0 is_stmt 1
 2004 0520 234B     		ldr	r3, .L122+96
 2005 0522 0022     		movs	r2, #0
 2006 0524 1A70     		strb	r2, [r3]
 592:main.c        ****                     lineCount = 0;
 2007              		.loc 1 592 0
 2008 0526 234B     		ldr	r3, .L122+100
 2009 0528 0022     		movs	r2, #0
 2010 052a 1A70     		strb	r2, [r3]
 593:main.c        ****                     tooEarlyFlag = 0;
 2011              		.loc 1 593 0
 2012 052c 224B     		ldr	r3, .L122+104
 2013 052e 0022     		movs	r2, #0
 2014 0530 1A70     		strb	r2, [r3]
 594:main.c        ****                     tooLateFlag = 0;
 2015              		.loc 1 594 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 47


 2016 0532 224B     		ldr	r3, .L122+108
 2017 0534 0022     		movs	r2, #0
 2018 0536 1A70     		strb	r2, [r3]
 595:main.c        ****                     uTurnFinishedFlag = 1;    
 2019              		.loc 1 595 0
 2020 0538 1C4B     		ldr	r3, .L122+92
 2021 053a 0122     		movs	r2, #1
 2022 053c 1A70     		strb	r2, [r3]
 2023              	.L117:
 596:main.c        ****                 }    
 597:main.c        ****             }
 598:main.c        ****             
 599:main.c        ****             return SpinCourseCorrection();
 2024              		.loc 1 599 0
 2025 053e FFF7FEFF 		bl	SpinCourseCorrection
 2026 0542 0346     		mov	r3, r0
 2027 0544 00E0     		b	.L72
 2028              	.L62:
 600:main.c        ****             break;
 601:main.c        ****         default:
 602:main.c        ****             return Stop;
 2029              		.loc 1 602 0
 2030 0546 0523     		movs	r3, #5
 2031              	.L72:
 603:main.c        ****             break;
 604:main.c        ****     }
 605:main.c        ****     return Stop;
 606:main.c        **** }
 2032              		.loc 1 606 0
 2033 0548 1846     		mov	r0, r3
 2034 054a 2837     		adds	r7, r7, #40
 2035              		.cfi_def_cfa_offset 16
 2036 054c BD46     		mov	sp, r7
 2037              		.cfi_def_cfa_register 13
 2038              		@ sp needed
 2039 054e B0BD     		pop	{r4, r5, r7, pc}
 2040              	.L123:
 2041              		.align	2
 2042              	.L122:
 2043 0550 00000000 		.word	s5
 2044 0554 00000000 		.word	s6
 2045 0558 00000000 		.word	forwardBuffer
 2046 055c 00000000 		.word	s4
 2047 0560 00000000 		.word	firstTurnIteration
 2048 0564 37000000 		.word	turnFinishedFlag
 2049 0568 00000000 		.word	currentDirection
 2050 056c 00000000 		.word	stopBuffer
 2051 0570 36000000 		.word	turnStartedFlag
 2052 0574 38000000 		.word	forwardUntilTargetStartedFlag
 2053 0578 00000000 		.word	totalDistance
 2054 057c 00000000 		.word	currentInstruction
 2055 0580 00000000 		.word	blockSizeTotal
 2056 0584 00000000 		.word	currentFoodListIndex
 2057 0588 14000000 		.word	instructionIndex
 2058 058c 00000000 		.word	food_list
 2059 0590 00000000 		.word	map
 2060 0594 00000000 		.word	instructionList
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 48


 2061 0598 00000000 		.word	numSteps
 2062 059c 3E000000 		.word	currentIgnoreL
 2063 05a0 45000000 		.word	currentIgnoreR
 2064 05a4 39000000 		.word	uTurnStartedFlag
 2065 05a8 3D000000 		.word	spinCourseCorrectionStarted
 2066 05ac 3A000000 		.word	uTurnFinishedFlag
 2067 05b0 3F000000 		.word	totalLineCount
 2068 05b4 40000000 		.word	lineCount
 2069 05b8 42000000 		.word	tooEarlyFlag
 2070 05bc 43000000 		.word	tooLateFlag
 2071              		.cfi_endproc
 2072              	.LFE75:
 2073              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2074              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2075              		.align	2
 2076              		.global	MoveToNextInstruction
 2077              		.thumb
 2078              		.thumb_func
 2079              		.type	MoveToNextInstruction, %function
 2080              	MoveToNextInstruction:
 2081              	.LFB76:
 607:main.c        **** /*
 608:main.c        **** // Calculate total blocksize to travel until target
 609:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 610:main.c        ****     float totalBlockSize;
 611:main.c        ****     
 612:main.c        ****     // Check for Row, Col that target is 
 613:main.c        ****     int targetRow = food_list[0][0];
 614:main.c        ****     int targetCol = food_list[0][1];
 615:main.c        ****     
 616:main.c        ****     int pathCount = 0;
 617:main.c        ****     currentRobotOrientation = currentInstruction.expectedOrientation;
 618:main.c        ****     // Depending on the robot orientation
 619:main.c        ****     // count++ if row, col is 8
 620:main.c        ****     // count reset if row, col is 1 or 0
 621:main.c        ****     // save count if row, col is 9
 622:main.c        ****     switch (currentRobotOrientation) {
 623:main.c        ****         case Up:
 624:main.c        ****             // Column
 625:main.c        ****             // Start from Bottom (since we're facing up)
 626:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 627:main.c        ****                 if (map[i][targetCol] == 9) {
 628:main.c        ****                     break;    
 629:main.c        ****                 }
 630:main.c        ****                 if (map[i][targetCol] == 0) {
 631:main.c        ****                     pathCount++;    
 632:main.c        ****                 }
 633:main.c        ****                 if (map[i][targetCol] == 1) {
 634:main.c        ****                     pathCount = 0;
 635:main.c        ****                 }
 636:main.c        ****             }
 637:main.c        ****             break;
 638:main.c        ****         case Down:
 639:main.c        ****             // Target Column, Check Row
 640:main.c        ****             // Start from Top
 641:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 642:main.c        ****                 if (map[i][targetCol] == 9) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 49


 643:main.c        ****                     break;    
 644:main.c        ****                 }
 645:main.c        ****                 if (map[i][targetCol] == 0) {
 646:main.c        ****                     pathCount++;    
 647:main.c        ****                 }
 648:main.c        ****                 if (map[i][targetCol] == 1) {
 649:main.c        ****                     pathCount = 0;
 650:main.c        ****                 }
 651:main.c        ****             }
 652:main.c        ****             break;
 653:main.c        ****         case Left:
 654:main.c        ****             // Target Row, Check Col
 655:main.c        ****             // Start from Right
 656:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 657:main.c        ****                 if (map[targetRow][i] == 9) {
 658:main.c        ****                     break;    
 659:main.c        ****                 }
 660:main.c        ****                 if (map[targetRow][i] == 0) {
 661:main.c        ****                     pathCount++;    
 662:main.c        ****                 }
 663:main.c        ****                 if (map[i][targetCol] == 1) {
 664:main.c        ****                     pathCount = 0;
 665:main.c        ****                 }
 666:main.c        ****             }
 667:main.c        ****             break;
 668:main.c        ****         
 669:main.c        ****         case Right:
 670:main.c        ****             // Target Row, Check Col
 671:main.c        ****             // Start from Left
 672:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 673:main.c        ****                 if (map[targetRow][i] == 9) {
 674:main.c        ****                     break;    
 675:main.c        ****                 }
 676:main.c        ****                 if (map[targetRow][i] == 0) {
 677:main.c        ****                     pathCount++;    
 678:main.c        ****                 }
 679:main.c        ****                 if (map[i][targetCol] == 1) {
 680:main.c        ****                     pathCount = 0;
 681:main.c        ****                 }
 682:main.c        **** 
 683:main.c        ****             }
 684:main.c        ****             break;
 685:main.c        ****     }
 686:main.c        ****     totalBlockSize = blockSize * pathCount;
 687:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 688:main.c        ****     return totalBlockSize;
 689:main.c        **** }
 690:main.c        **** */
 691:main.c        **** // get next instruction
 692:main.c        **** void MoveToNextInstruction() {
 2082              		.loc 1 692 0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 1, uses_anonymous_args = 0
 2086              		@ link register save eliminated.
 2087 0000 80B4     		push	{r7}
 2088              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 50


 2089              		.cfi_offset 7, -4
 2090 0002 00AF     		add	r7, sp, #0
 2091              		.cfi_def_cfa_register 7
 693:main.c        ****     currentIgnoreL = 0;
 2092              		.loc 1 693 0
 2093 0004 144B     		ldr	r3, .L125
 2094 0006 0022     		movs	r2, #0
 2095 0008 1A70     		strb	r2, [r3]
 694:main.c        ****     currentIgnoreR = 0;
 2096              		.loc 1 694 0
 2097 000a 144B     		ldr	r3, .L125+4
 2098 000c 0022     		movs	r2, #0
 2099 000e 1A70     		strb	r2, [r3]
 695:main.c        ****     instructionIndex++;
 2100              		.loc 1 695 0
 2101 0010 134B     		ldr	r3, .L125+8
 2102 0012 1B68     		ldr	r3, [r3]
 2103 0014 0133     		adds	r3, r3, #1
 2104 0016 124A     		ldr	r2, .L125+8
 2105 0018 1360     		str	r3, [r2]
 696:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2106              		.loc 1 696 0
 2107 001a 124B     		ldr	r3, .L125+12
 2108 001c 1968     		ldr	r1, [r3]
 2109 001e 104B     		ldr	r3, .L125+8
 2110 0020 1A68     		ldr	r2, [r3]
 2111 0022 1346     		mov	r3, r2
 2112 0024 9B00     		lsls	r3, r3, #2
 2113 0026 1344     		add	r3, r3, r2
 2114 0028 9B00     		lsls	r3, r3, #2
 2115 002a 0B44     		add	r3, r3, r1
 2116 002c 5B68     		ldr	r3, [r3, #4]
 2117 002e DAB2     		uxtb	r2, r3
 2118 0030 094B     		ldr	r3, .L125
 2119 0032 1A70     		strb	r2, [r3]
 697:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2120              		.loc 1 697 0
 2121 0034 0B4B     		ldr	r3, .L125+12
 2122 0036 1968     		ldr	r1, [r3]
 2123 0038 094B     		ldr	r3, .L125+8
 2124 003a 1A68     		ldr	r2, [r3]
 2125 003c 1346     		mov	r3, r2
 2126 003e 9B00     		lsls	r3, r3, #2
 2127 0040 1344     		add	r3, r3, r2
 2128 0042 9B00     		lsls	r3, r3, #2
 2129 0044 0B44     		add	r3, r3, r1
 2130 0046 9B68     		ldr	r3, [r3, #8]
 2131 0048 DAB2     		uxtb	r2, r3
 2132 004a 044B     		ldr	r3, .L125+4
 2133 004c 1A70     		strb	r2, [r3]
 698:main.c        **** 
 699:main.c        **** }
 2134              		.loc 1 699 0
 2135 004e 00BF     		nop
 2136 0050 BD46     		mov	sp, r7
 2137              		.cfi_def_cfa_register 13
 2138              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 51


 2139 0052 80BC     		pop	{r7}
 2140              		.cfi_restore 7
 2141              		.cfi_def_cfa_offset 0
 2142 0054 7047     		bx	lr
 2143              	.L126:
 2144 0056 00BF     		.align	2
 2145              	.L125:
 2146 0058 3E000000 		.word	currentIgnoreL
 2147 005c 45000000 		.word	currentIgnoreR
 2148 0060 14000000 		.word	instructionIndex
 2149 0064 00000000 		.word	instructionList
 2150              		.cfi_endproc
 2151              	.LFE76:
 2152              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2153              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2154              		.align	2
 2155              		.global	GetInstructionAtIndex
 2156              		.thumb
 2157              		.thumb_func
 2158              		.type	GetInstructionAtIndex, %function
 2159              	GetInstructionAtIndex:
 2160              	.LFB77:
 700:main.c        **** 
 701:main.c        **** Instruction GetInstructionAtIndex() {
 2161              		.loc 1 701 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 32
 2164              		@ frame_needed = 1, uses_anonymous_args = 0
 2165              		@ link register save eliminated.
 2166 0000 B0B4     		push	{r4, r5, r7}
 2167              		.cfi_def_cfa_offset 12
 2168              		.cfi_offset 4, -12
 2169              		.cfi_offset 5, -8
 2170              		.cfi_offset 7, -4
 2171 0002 89B0     		sub	sp, sp, #36
 2172              		.cfi_def_cfa_offset 48
 2173 0004 00AF     		add	r7, sp, #0
 2174              		.cfi_def_cfa_register 7
 2175 0006 7860     		str	r0, [r7, #4]
 702:main.c        ****     Instruction nextInstruction;
 703:main.c        ****     // input is list of instructions and robot will react accordingly
 704:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2176              		.loc 1 704 0
 2177 0008 164B     		ldr	r3, .L129
 2178 000a 1968     		ldr	r1, [r3]
 2179 000c 164B     		ldr	r3, .L129+4
 2180 000e 1A68     		ldr	r2, [r3]
 2181 0010 1346     		mov	r3, r2
 2182 0012 9B00     		lsls	r3, r3, #2
 2183 0014 1344     		add	r3, r3, r2
 2184 0016 9B00     		lsls	r3, r3, #2
 2185 0018 0B44     		add	r3, r3, r1
 2186 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2187 001c 3B73     		strb	r3, [r7, #12]
 705:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2188              		.loc 1 705 0
 2189 001e 114B     		ldr	r3, .L129
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 52


 2190 0020 1968     		ldr	r1, [r3]
 2191 0022 114B     		ldr	r3, .L129+4
 2192 0024 1A68     		ldr	r2, [r3]
 2193 0026 1346     		mov	r3, r2
 2194 0028 9B00     		lsls	r3, r3, #2
 2195 002a 1344     		add	r3, r3, r2
 2196 002c 9B00     		lsls	r3, r3, #2
 2197 002e 0B44     		add	r3, r3, r1
 2198 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2199 0032 3B77     		strb	r3, [r7, #28]
 706:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2200              		.loc 1 706 0
 2201 0034 0B4B     		ldr	r3, .L129
 2202 0036 1968     		ldr	r1, [r3]
 2203 0038 0B4B     		ldr	r3, .L129+4
 2204 003a 1A68     		ldr	r2, [r3]
 2205 003c 1346     		mov	r3, r2
 2206 003e 9B00     		lsls	r3, r3, #2
 2207 0040 1344     		add	r3, r3, r2
 2208 0042 9B00     		lsls	r3, r3, #2
 2209 0044 0B44     		add	r3, r3, r1
 2210 0046 DB68     		ldr	r3, [r3, #12]
 2211 0048 BB61     		str	r3, [r7, #24]
 707:main.c        ****     return nextInstruction;
 2212              		.loc 1 707 0
 2213 004a 7B68     		ldr	r3, [r7, #4]
 2214 004c 1D46     		mov	r5, r3
 2215 004e 07F10C04 		add	r4, r7, #12
 2216 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2217 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2218 0056 2368     		ldr	r3, [r4]
 2219 0058 2B60     		str	r3, [r5]
 708:main.c        **** }
 2220              		.loc 1 708 0
 2221 005a 7868     		ldr	r0, [r7, #4]
 2222 005c 2437     		adds	r7, r7, #36
 2223              		.cfi_def_cfa_offset 12
 2224 005e BD46     		mov	sp, r7
 2225              		.cfi_def_cfa_register 13
 2226              		@ sp needed
 2227 0060 B0BC     		pop	{r4, r5, r7}
 2228              		.cfi_restore 7
 2229              		.cfi_restore 5
 2230              		.cfi_restore 4
 2231              		.cfi_def_cfa_offset 0
 2232 0062 7047     		bx	lr
 2233              	.L130:
 2234              		.align	2
 2235              	.L129:
 2236 0064 00000000 		.word	instructionList
 2237 0068 14000000 		.word	instructionIndex
 2238              		.cfi_endproc
 2239              	.LFE77:
 2240              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2241              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2242              		.align	2
 2243              		.global	RotateClockwise180Degrees
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 53


 2244              		.thumb
 2245              		.thumb_func
 2246              		.type	RotateClockwise180Degrees, %function
 2247              	RotateClockwise180Degrees:
 2248              	.LFB78:
 709:main.c        **** 
 710:main.c        **** void RotateClockwise180Degrees() {
 2249              		.loc 1 710 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 8
 2252              		@ frame_needed = 1, uses_anonymous_args = 0
 2253 0000 80B5     		push	{r7, lr}
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
 2257 0002 82B0     		sub	sp, sp, #8
 2258              		.cfi_def_cfa_offset 16
 2259 0004 00AF     		add	r7, sp, #0
 2260              		.cfi_def_cfa_register 7
 711:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2261              		.loc 1 711 0
 2262 0006 49F20873 		movw	r3, #38664
 2263 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 712:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2264              		.loc 1 712 0
 2265 000c 49F20873 		movw	r3, #38664
 2266 0010 3B80     		strh	r3, [r7]	@ movhi
 713:main.c        ****     PWM_1_WriteCompare(count1);
 2267              		.loc 1 713 0
 2268 0012 7B88     		ldrh	r3, [r7, #2]
 2269 0014 1846     		mov	r0, r3
 2270 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 714:main.c        ****     PWM_2_WriteCompare(count2);
 2271              		.loc 1 714 0
 2272 001a 3B88     		ldrh	r3, [r7]
 2273 001c 1846     		mov	r0, r3
 2274 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 715:main.c        ****     
 716:main.c        ****     int quadPulseCount = 0;
 2275              		.loc 1 716 0
 2276 0022 0023     		movs	r3, #0
 2277 0024 7B60     		str	r3, [r7, #4]
 717:main.c        ****     QuadDec_M1_SetCounter(0);
 2278              		.loc 1 717 0
 2279 0026 0020     		movs	r0, #0
 2280 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 718:main.c        ****     // Before 180, save initial configuration
 719:main.c        ****     if (!s3) {
 2281              		.loc 1 719 0
 2282 002c 3A4B     		ldr	r3, .L144
 2283 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 0030 002B     		cmp	r3, #0
 2285 0032 06D1     		bne	.L132
 720:main.c        ****         totalLineCount++;    
 2286              		.loc 1 720 0
 2287 0034 394B     		ldr	r3, .L144+4
 2288 0036 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 54


 2289 0038 DBB2     		uxtb	r3, r3
 2290 003a 0133     		adds	r3, r3, #1
 2291 003c DAB2     		uxtb	r2, r3
 2292 003e 374B     		ldr	r3, .L144+4
 2293 0040 1A70     		strb	r2, [r3]
 2294              	.L132:
 721:main.c        ****     }
 722:main.c        ****     if (!s4) {
 2295              		.loc 1 722 0
 2296 0042 374B     		ldr	r3, .L144+8
 2297 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 0046 002B     		cmp	r3, #0
 2299 0048 06D1     		bne	.L133
 723:main.c        ****         totalLineCount++;    
 2300              		.loc 1 723 0
 2301 004a 344B     		ldr	r3, .L144+4
 2302 004c 1B78     		ldrb	r3, [r3]
 2303 004e DBB2     		uxtb	r3, r3
 2304 0050 0133     		adds	r3, r3, #1
 2305 0052 DAB2     		uxtb	r2, r3
 2306 0054 314B     		ldr	r3, .L144+4
 2307 0056 1A70     		strb	r2, [r3]
 2308              	.L133:
 724:main.c        ****     }
 725:main.c        ****     if (!s5 || !s6) {
 2309              		.loc 1 725 0
 2310 0058 324B     		ldr	r3, .L144+12
 2311 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2312 005c 002B     		cmp	r3, #0
 2313 005e 03D0     		beq	.L134
 2314              		.loc 1 725 0 is_stmt 0 discriminator 1
 2315 0060 314B     		ldr	r3, .L144+16
 2316 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0064 002B     		cmp	r3, #0
 2318 0066 2AD1     		bne	.L136
 2319              	.L134:
 726:main.c        ****         totalLineCount++;    
 2320              		.loc 1 726 0 is_stmt 1
 2321 0068 2C4B     		ldr	r3, .L144+4
 2322 006a 1B78     		ldrb	r3, [r3]
 2323 006c DBB2     		uxtb	r3, r3
 2324 006e 0133     		adds	r3, r3, #1
 2325 0070 DAB2     		uxtb	r2, r3
 2326 0072 2A4B     		ldr	r3, .L144+4
 2327 0074 1A70     		strb	r2, [r3]
 727:main.c        ****     }
 728:main.c        ****     
 729:main.c        ****     // During 180
 730:main.c        ****     while(quadPulseCount < 210) {
 2328              		.loc 1 730 0
 2329 0076 22E0     		b	.L136
 2330              	.L139:
 731:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2331              		.loc 1 731 0
 2332 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2333 007c 0346     		mov	r3, r0
 2334 007e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 55


 732:main.c        ****         if (!s3) {
 2335              		.loc 1 732 0
 2336 0080 254B     		ldr	r3, .L144
 2337 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2338 0084 002B     		cmp	r3, #0
 2339 0086 02D1     		bne	.L137
 733:main.c        ****             onLineFlag = 1;    
 2340              		.loc 1 733 0
 2341 0088 284B     		ldr	r3, .L144+20
 2342 008a 0122     		movs	r2, #1
 2343 008c 1A70     		strb	r2, [r3]
 2344              	.L137:
 734:main.c        ****         }
 735:main.c        ****         
 736:main.c        ****         if (onLineFlag) {
 2345              		.loc 1 736 0
 2346 008e 274B     		ldr	r3, .L144+20
 2347 0090 1B78     		ldrb	r3, [r3]
 2348 0092 DBB2     		uxtb	r3, r3
 2349 0094 002B     		cmp	r3, #0
 2350 0096 06D0     		beq	.L138
 737:main.c        ****             lineCount++;    
 2351              		.loc 1 737 0
 2352 0098 254B     		ldr	r3, .L144+24
 2353 009a 1B78     		ldrb	r3, [r3]
 2354 009c DBB2     		uxtb	r3, r3
 2355 009e 0133     		adds	r3, r3, #1
 2356 00a0 DAB2     		uxtb	r2, r3
 2357 00a2 234B     		ldr	r3, .L144+24
 2358 00a4 1A70     		strb	r2, [r3]
 2359              	.L138:
 738:main.c        ****         }
 739:main.c        ****         
 740:main.c        ****         if (!onLineFlag) {
 2360              		.loc 1 740 0
 2361 00a6 214B     		ldr	r3, .L144+20
 2362 00a8 1B78     		ldrb	r3, [r3]
 2363 00aa DBB2     		uxtb	r3, r3
 2364 00ac 002B     		cmp	r3, #0
 2365 00ae 06D1     		bne	.L136
 741:main.c        ****             if (s3) {
 2366              		.loc 1 741 0
 2367 00b0 194B     		ldr	r3, .L144
 2368 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2369 00b4 002B     		cmp	r3, #0
 2370 00b6 02D0     		beq	.L136
 742:main.c        ****                 onLineFlag = 0;    
 2371              		.loc 1 742 0
 2372 00b8 1C4B     		ldr	r3, .L144+20
 2373 00ba 0022     		movs	r2, #0
 2374 00bc 1A70     		strb	r2, [r3]
 2375              	.L136:
 730:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2376              		.loc 1 730 0
 2377 00be 7B68     		ldr	r3, [r7, #4]
 2378 00c0 D12B     		cmp	r3, #209
 2379 00c2 D9DD     		ble	.L139
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 56


 743:main.c        ****             }
 744:main.c        ****         }
 745:main.c        ****     }
 746:main.c        ****     
 747:main.c        ****     // After 180
 748:main.c        ****     if (totalLineCount == 0) {
 2380              		.loc 1 748 0
 2381 00c4 154B     		ldr	r3, .L144+4
 2382 00c6 1B78     		ldrb	r3, [r3]
 2383 00c8 DBB2     		uxtb	r3, r3
 2384 00ca 002B     		cmp	r3, #0
 2385 00cc 06D1     		bne	.L140
 749:main.c        ****         // we are on no lines
 750:main.c        ****         tooEarlyFlag = 1;
 2386              		.loc 1 750 0
 2387 00ce 194B     		ldr	r3, .L144+28
 2388 00d0 0122     		movs	r2, #1
 2389 00d2 1A70     		strb	r2, [r3]
 751:main.c        ****         QuadDec_M1_SetCounter(0);
 2390              		.loc 1 751 0
 2391 00d4 0020     		movs	r0, #0
 2392 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 752:main.c        ****         return;
 2393              		.loc 1 752 0
 2394 00da 19E0     		b	.L131
 2395              	.L140:
 753:main.c        ****     }
 754:main.c        ****     else if (lineCount > totalLineCount) {
 2396              		.loc 1 754 0
 2397 00dc 144B     		ldr	r3, .L144+24
 2398 00de 1B78     		ldrb	r3, [r3]
 2399 00e0 DAB2     		uxtb	r2, r3
 2400 00e2 0E4B     		ldr	r3, .L144+4
 2401 00e4 1B78     		ldrb	r3, [r3]
 2402 00e6 DBB2     		uxtb	r3, r3
 2403 00e8 9A42     		cmp	r2, r3
 2404 00ea 03D9     		bls	.L142
 755:main.c        ****         tooLateFlag = 1;    
 2405              		.loc 1 755 0
 2406 00ec 124B     		ldr	r3, .L144+32
 2407 00ee 0122     		movs	r2, #1
 2408 00f0 1A70     		strb	r2, [r3]
 2409 00f2 0AE0     		b	.L143
 2410              	.L142:
 756:main.c        ****     }
 757:main.c        ****     else if (lineCount < totalLineCount) {
 2411              		.loc 1 757 0
 2412 00f4 0E4B     		ldr	r3, .L144+24
 2413 00f6 1B78     		ldrb	r3, [r3]
 2414 00f8 DAB2     		uxtb	r2, r3
 2415 00fa 084B     		ldr	r3, .L144+4
 2416 00fc 1B78     		ldrb	r3, [r3]
 2417 00fe DBB2     		uxtb	r3, r3
 2418 0100 9A42     		cmp	r2, r3
 2419 0102 02D2     		bcs	.L143
 758:main.c        ****         tooEarlyFlag = 1;    
 2420              		.loc 1 758 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 57


 2421 0104 0B4B     		ldr	r3, .L144+28
 2422 0106 0122     		movs	r2, #1
 2423 0108 1A70     		strb	r2, [r3]
 2424              	.L143:
 759:main.c        ****     }
 760:main.c        ****     QuadDec_M1_SetCounter(0);
 2425              		.loc 1 760 0
 2426 010a 0020     		movs	r0, #0
 2427 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2428              	.L131:
 761:main.c        **** }
 2429              		.loc 1 761 0
 2430 0110 0837     		adds	r7, r7, #8
 2431              		.cfi_def_cfa_offset 8
 2432 0112 BD46     		mov	sp, r7
 2433              		.cfi_def_cfa_register 13
 2434              		@ sp needed
 2435 0114 80BD     		pop	{r7, pc}
 2436              	.L145:
 2437 0116 00BF     		.align	2
 2438              	.L144:
 2439 0118 00000000 		.word	s3
 2440 011c 3F000000 		.word	totalLineCount
 2441 0120 00000000 		.word	s4
 2442 0124 00000000 		.word	s5
 2443 0128 00000000 		.word	s6
 2444 012c 41000000 		.word	onLineFlag
 2445 0130 40000000 		.word	lineCount
 2446 0134 42000000 		.word	tooEarlyFlag
 2447 0138 43000000 		.word	tooLateFlag
 2448              		.cfi_endproc
 2449              	.LFE78:
 2450              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2451              		.section	.text.SetRobotMovement,"ax",%progbits
 2452              		.align	2
 2453              		.global	SetRobotMovement
 2454              		.thumb
 2455              		.thumb_func
 2456              		.type	SetRobotMovement, %function
 2457              	SetRobotMovement:
 2458              	.LFB79:
 762:main.c        **** 
 763:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 764:main.c        **** void SetRobotMovement() {
 2459              		.loc 1 764 0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 24
 2462              		@ frame_needed = 1, uses_anonymous_args = 0
 2463 0000 B0B5     		push	{r4, r5, r7, lr}
 2464              		.cfi_def_cfa_offset 16
 2465              		.cfi_offset 4, -16
 2466              		.cfi_offset 5, -12
 2467              		.cfi_offset 7, -8
 2468              		.cfi_offset 14, -4
 2469 0002 86B0     		sub	sp, sp, #24
 2470              		.cfi_def_cfa_offset 40
 2471 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 58


 2472              		.cfi_def_cfa_register 7
 765:main.c        ****     MoveToNextInstruction();
 2473              		.loc 1 765 0
 2474 0006 FFF7FEFF 		bl	MoveToNextInstruction
 766:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2475              		.loc 1 766 0
 2476 000a 294C     		ldr	r4, .L162
 2477 000c 3B46     		mov	r3, r7
 2478 000e 1846     		mov	r0, r3
 2479 0010 FFF7FEFF 		bl	GetInstructionAtIndex
 2480 0014 2546     		mov	r5, r4
 2481 0016 3C46     		mov	r4, r7
 2482 0018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2483 001a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2484 001c 2368     		ldr	r3, [r4]
 2485 001e 2B60     		str	r3, [r5]
 767:main.c        ****     previousDirection = currentDirection;
 2486              		.loc 1 767 0
 2487 0020 244B     		ldr	r3, .L162+4
 2488 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2489 0024 244B     		ldr	r3, .L162+8
 2490 0026 1A70     		strb	r2, [r3]
 768:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2491              		.loc 1 768 0
 2492 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2493 002c 0346     		mov	r3, r0
 2494 002e 1A46     		mov	r2, r3
 2495 0030 204B     		ldr	r3, .L162+4
 2496 0032 1A70     		strb	r2, [r3]
 769:main.c        ****     // move robot depending on sensors
 770:main.c        ****     switch (currentDirection) {
 2497              		.loc 1 770 0
 2498 0034 1F4B     		ldr	r3, .L162+4
 2499 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2500 0038 0A2B     		cmp	r3, #10
 2501 003a 35D8     		bhi	.L160
 2502 003c 01A2     		adr	r2, .L149
 2503 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2504 0042 00BF     		.p2align 2
 2505              	.L149:
 2506 0044 71000000 		.word	.L148+1
 2507 0048 77000000 		.word	.L150+1
 2508 004c 7D000000 		.word	.L151+1
 2509 0050 89000000 		.word	.L152+1
 2510 0054 83000000 		.word	.L153+1
 2511 0058 8F000000 		.word	.L154+1
 2512 005c A7000000 		.word	.L161+1
 2513 0060 A7000000 		.word	.L161+1
 2514 0064 95000000 		.word	.L157+1
 2515 0068 9B000000 		.word	.L158+1
 2516 006c A1000000 		.word	.L159+1
 2517              		.p2align 1
 2518              	.L148:
 771:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 772:main.c        ****         case Forward:
 773:main.c        ****             moveForward();
 2519              		.loc 1 773 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 59


 2520 0070 FFF7FEFF 		bl	moveForward
 774:main.c        ****             break;
 2521              		.loc 1 774 0
 2522 0074 18E0     		b	.L147
 2523              	.L150:
 775:main.c        ****         case TurnRight:
 776:main.c        ****             turnRight();
 2524              		.loc 1 776 0
 2525 0076 FFF7FEFF 		bl	turnRight
 777:main.c        ****             break;
 2526              		.loc 1 777 0
 2527 007a 15E0     		b	.L147
 2528              	.L151:
 778:main.c        ****         case TurnLeft:
 779:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2529              		.loc 1 779 0
 2530 007c FFF7FEFF 		bl	turnLeft
 780:main.c        ****             break;
 2531              		.loc 1 780 0
 2532 0080 12E0     		b	.L147
 2533              	.L153:
 781:main.c        ****         case AdjustToTheRight:
 782:main.c        ****             adjustRight();
 2534              		.loc 1 782 0
 2535 0082 FFF7FEFF 		bl	adjustRight
 783:main.c        ****             break;
 2536              		.loc 1 783 0
 2537 0086 0FE0     		b	.L147
 2538              	.L152:
 784:main.c        ****         case AdjustToTheLeft:
 785:main.c        ****             adjustLeft();
 2539              		.loc 1 785 0
 2540 0088 FFF7FEFF 		bl	adjustLeft
 786:main.c        ****             break;
 2541              		.loc 1 786 0
 2542 008c 0CE0     		b	.L147
 2543              	.L154:
 787:main.c        ****         case Stop:
 788:main.c        ****             stopMoving();
 2544              		.loc 1 788 0
 2545 008e FFF7FEFF 		bl	stopMoving
 789:main.c        ****             break;
 2546              		.loc 1 789 0
 2547 0092 09E0     		b	.L147
 2548              	.L157:
 790:main.c        ****         case ForwardAfterTurn:
 791:main.c        ****             moveForward();
 2549              		.loc 1 791 0
 2550 0094 FFF7FEFF 		bl	moveForward
 792:main.c        ****             break;
 2551              		.loc 1 792 0
 2552 0098 06E0     		b	.L147
 2553              	.L158:
 793:main.c        ****         case Backward:
 794:main.c        ****             moveBackward();
 2554              		.loc 1 794 0
 2555 009a FFF7FEFF 		bl	moveBackward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 60


 795:main.c        ****             break;
 2556              		.loc 1 795 0
 2557 009e 03E0     		b	.L147
 2558              	.L159:
 796:main.c        ****         case waitForTurn:
 797:main.c        ****             break;
 798:main.c        ****         case Spin180:
 799:main.c        ****             RotateClockwise180Degrees();
 2559              		.loc 1 799 0
 2560 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 800:main.c        ****             break;
 2561              		.loc 1 800 0
 2562 00a4 00E0     		b	.L147
 2563              	.L161:
 801:main.c        ****         /*case waitForLeftTurn:
 802:main.c        ****             moveForward();
 803:main.c        ****             break;
 804:main.c        ****         case waitForRightTurn:
 805:main.c        ****             moveForward();
 806:main.c        ****             break;*/
 807:main.c        ****         case Unknown:
 808:main.c        ****             // UNKNOWN CONFIGURATION
 809:main.c        ****             break;  
 2564              		.loc 1 809 0
 2565 00a6 00BF     		nop
 2566              	.L147:
 2567              	.L160:
 810:main.c        ****     }
 811:main.c        **** }
 2568              		.loc 1 811 0
 2569 00a8 00BF     		nop
 2570 00aa 1837     		adds	r7, r7, #24
 2571              		.cfi_def_cfa_offset 16
 2572 00ac BD46     		mov	sp, r7
 2573              		.cfi_def_cfa_register 13
 2574              		@ sp needed
 2575 00ae B0BD     		pop	{r4, r5, r7, pc}
 2576              	.L163:
 2577              		.align	2
 2578              	.L162:
 2579 00b0 00000000 		.word	currentInstruction
 2580 00b4 00000000 		.word	currentDirection
 2581 00b8 00000000 		.word	previousDirection
 2582              		.cfi_endproc
 2583              	.LFE79:
 2584              		.size	SetRobotMovement, .-SetRobotMovement
 2585              		.text
 2586              	.Letext0:
 2587              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2588              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2589              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2590              		.file 5 "vars.h"
 2591              		.file 6 "pathfinding.h"
 2592              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2593              		.file 8 "map.h"
 2594              		.section	.debug_info,"",%progbits
 2595              	.Ldebug_info0:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 61


 2596 0000 AD090000 		.4byte	0x9ad
 2597 0004 0400     		.2byte	0x4
 2598 0006 00000000 		.4byte	.Ldebug_abbrev0
 2599 000a 04       		.byte	0x4
 2600 000b 01       		.uleb128 0x1
 2601 000c E8000000 		.4byte	.LASF153
 2602 0010 0C       		.byte	0xc
 2603 0011 52040000 		.4byte	.LASF154
 2604 0015 78000000 		.4byte	.LASF155
 2605 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2606 001d 00000000 		.4byte	0
 2607 0021 00000000 		.4byte	.Ldebug_line0
 2608 0025 02       		.uleb128 0x2
 2609 0026 01       		.byte	0x1
 2610 0027 06       		.byte	0x6
 2611 0028 6C000000 		.4byte	.LASF0
 2612 002c 02       		.uleb128 0x2
 2613 002d 01       		.byte	0x1
 2614 002e 08       		.byte	0x8
 2615 002f 01060000 		.4byte	.LASF1
 2616 0033 02       		.uleb128 0x2
 2617 0034 02       		.byte	0x2
 2618 0035 05       		.byte	0x5
 2619 0036 33060000 		.4byte	.LASF2
 2620 003a 02       		.uleb128 0x2
 2621 003b 02       		.byte	0x2
 2622 003c 07       		.byte	0x7
 2623 003d 07040000 		.4byte	.LASF3
 2624 0041 03       		.uleb128 0x3
 2625 0042 48040000 		.4byte	.LASF12
 2626 0046 02       		.byte	0x2
 2627 0047 3F       		.byte	0x3f
 2628 0048 4C000000 		.4byte	0x4c
 2629 004c 02       		.uleb128 0x2
 2630 004d 04       		.byte	0x4
 2631 004e 05       		.byte	0x5
 2632 004f 89020000 		.4byte	.LASF4
 2633 0053 02       		.uleb128 0x2
 2634 0054 04       		.byte	0x4
 2635 0055 07       		.byte	0x7
 2636 0056 AC030000 		.4byte	.LASF5
 2637 005a 02       		.uleb128 0x2
 2638 005b 08       		.byte	0x8
 2639 005c 05       		.byte	0x5
 2640 005d D9020000 		.4byte	.LASF6
 2641 0061 02       		.uleb128 0x2
 2642 0062 08       		.byte	0x8
 2643 0063 07       		.byte	0x7
 2644 0064 98010000 		.4byte	.LASF7
 2645 0068 04       		.uleb128 0x4
 2646 0069 04       		.byte	0x4
 2647 006a 05       		.byte	0x5
 2648 006b 696E7400 		.ascii	"int\000"
 2649 006f 02       		.uleb128 0x2
 2650 0070 04       		.byte	0x4
 2651 0071 07       		.byte	0x7
 2652 0072 25070000 		.4byte	.LASF8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 62


 2653 0076 02       		.uleb128 0x2
 2654 0077 08       		.byte	0x8
 2655 0078 04       		.byte	0x4
 2656 0079 04070000 		.4byte	.LASF9
 2657 007d 02       		.uleb128 0x2
 2658 007e 04       		.byte	0x4
 2659 007f 07       		.byte	0x7
 2660 0080 F8040000 		.4byte	.LASF10
 2661 0084 02       		.uleb128 0x2
 2662 0085 01       		.byte	0x1
 2663 0086 08       		.byte	0x8
 2664 0087 10070000 		.4byte	.LASF11
 2665 008b 03       		.uleb128 0x3
 2666 008c F9050000 		.4byte	.LASF13
 2667 0090 03       		.byte	0x3
 2668 0091 2C       		.byte	0x2c
 2669 0092 41000000 		.4byte	0x41
 2670 0096 05       		.uleb128 0x5
 2671 0097 D3020000 		.4byte	.LASF14
 2672 009b 04       		.byte	0x4
 2673 009c E701     		.2byte	0x1e7
 2674 009e 2C000000 		.4byte	0x2c
 2675 00a2 05       		.uleb128 0x5
 2676 00a3 0F060000 		.4byte	.LASF15
 2677 00a7 04       		.byte	0x4
 2678 00a8 E801     		.2byte	0x1e8
 2679 00aa 3A000000 		.4byte	0x3a
 2680 00ae 05       		.uleb128 0x5
 2681 00af 39030000 		.4byte	.LASF16
 2682 00b3 04       		.byte	0x4
 2683 00b4 E901     		.2byte	0x1e9
 2684 00b6 53000000 		.4byte	0x53
 2685 00ba 05       		.uleb128 0x5
 2686 00bb 38040000 		.4byte	.LASF17
 2687 00bf 04       		.byte	0x4
 2688 00c0 EA01     		.2byte	0x1ea
 2689 00c2 25000000 		.4byte	0x25
 2690 00c6 05       		.uleb128 0x5
 2691 00c7 61080000 		.4byte	.LASF18
 2692 00cb 04       		.byte	0x4
 2693 00cc EB01     		.2byte	0x1eb
 2694 00ce 33000000 		.4byte	0x33
 2695 00d2 02       		.uleb128 0x2
 2696 00d3 04       		.byte	0x4
 2697 00d4 04       		.byte	0x4
 2698 00d5 9E050000 		.4byte	.LASF19
 2699 00d9 02       		.uleb128 0x2
 2700 00da 08       		.byte	0x8
 2701 00db 04       		.byte	0x4
 2702 00dc E7020000 		.4byte	.LASF20
 2703 00e0 06       		.uleb128 0x6
 2704 00e1 96000000 		.4byte	0x96
 2705 00e5 06       		.uleb128 0x6
 2706 00e6 AE000000 		.4byte	0xae
 2707 00ea 07       		.uleb128 0x7
 2708 00eb 96000000 		.4byte	0x96
 2709 00ef FA000000 		.4byte	0xfa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 63


 2710 00f3 08       		.uleb128 0x8
 2711 00f4 7D000000 		.4byte	0x7d
 2712 00f8 03       		.byte	0x3
 2713 00f9 00       		.byte	0
 2714 00fa 09       		.uleb128 0x9
 2715 00fb 91030000 		.4byte	.LASF50
 2716 00ff 20       		.byte	0x20
 2717 0100 05       		.byte	0x5
 2718 0101 28       		.byte	0x28
 2719 0102 D3010000 		.4byte	0x1d3
 2720 0106 0A       		.uleb128 0xa
 2721 0107 32070000 		.4byte	.LASF21
 2722 010b 05       		.byte	0x5
 2723 010c 2A       		.byte	0x2a
 2724 010d BA000000 		.4byte	0xba
 2725 0111 00       		.byte	0
 2726 0112 0A       		.uleb128 0xa
 2727 0113 37070000 		.4byte	.LASF22
 2728 0117 05       		.byte	0x5
 2729 0118 2B       		.byte	0x2b
 2730 0119 96000000 		.4byte	0x96
 2731 011d 01       		.byte	0x1
 2732 011e 0A       		.uleb128 0xa
 2733 011f 7C070000 		.4byte	.LASF23
 2734 0123 05       		.byte	0x5
 2735 0124 2C       		.byte	0x2c
 2736 0125 C6000000 		.4byte	0xc6
 2737 0129 02       		.byte	0x2
 2738 012a 0A       		.uleb128 0xa
 2739 012b 89060000 		.4byte	.LASF24
 2740 012f 05       		.byte	0x5
 2741 0130 2D       		.byte	0x2d
 2742 0131 C6000000 		.4byte	0xc6
 2743 0135 04       		.byte	0x4
 2744 0136 0A       		.uleb128 0xa
 2745 0137 A8080000 		.4byte	.LASF25
 2746 013b 05       		.byte	0x5
 2747 013c 2E       		.byte	0x2e
 2748 013d C6000000 		.4byte	0xc6
 2749 0141 06       		.byte	0x6
 2750 0142 0A       		.uleb128 0xa
 2751 0143 C9010000 		.4byte	.LASF26
 2752 0147 05       		.byte	0x5
 2753 0148 2F       		.byte	0x2f
 2754 0149 C6000000 		.4byte	0xc6
 2755 014d 08       		.byte	0x8
 2756 014e 0A       		.uleb128 0xa
 2757 014f 15070000 		.4byte	.LASF27
 2758 0153 05       		.byte	0x5
 2759 0154 30       		.byte	0x30
 2760 0155 C6000000 		.4byte	0xc6
 2761 0159 0A       		.byte	0xa
 2762 015a 0A       		.uleb128 0xa
 2763 015b 9F080000 		.4byte	.LASF28
 2764 015f 05       		.byte	0x5
 2765 0160 31       		.byte	0x31
 2766 0161 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 64


 2767 0165 0C       		.byte	0xc
 2768 0166 0A       		.uleb128 0xa
 2769 0167 85010000 		.4byte	.LASF29
 2770 016b 05       		.byte	0x5
 2771 016c 32       		.byte	0x32
 2772 016d C6000000 		.4byte	0xc6
 2773 0171 0E       		.byte	0xe
 2774 0172 0A       		.uleb128 0xa
 2775 0173 40050000 		.4byte	.LASF30
 2776 0177 05       		.byte	0x5
 2777 0178 33       		.byte	0x33
 2778 0179 C6000000 		.4byte	0xc6
 2779 017d 10       		.byte	0x10
 2780 017e 0A       		.uleb128 0xa
 2781 017f 59040000 		.4byte	.LASF31
 2782 0183 05       		.byte	0x5
 2783 0184 34       		.byte	0x34
 2784 0185 C6000000 		.4byte	0xc6
 2785 0189 12       		.byte	0x12
 2786 018a 0A       		.uleb128 0xa
 2787 018b D8040000 		.4byte	.LASF32
 2788 018f 05       		.byte	0x5
 2789 0190 35       		.byte	0x35
 2790 0191 C6000000 		.4byte	0xc6
 2791 0195 14       		.byte	0x14
 2792 0196 0A       		.uleb128 0xa
 2793 0197 19050000 		.4byte	.LASF33
 2794 019b 05       		.byte	0x5
 2795 019c 36       		.byte	0x36
 2796 019d C6000000 		.4byte	0xc6
 2797 01a1 16       		.byte	0x16
 2798 01a2 0A       		.uleb128 0xa
 2799 01a3 2B060000 		.4byte	.LASF34
 2800 01a7 05       		.byte	0x5
 2801 01a8 37       		.byte	0x37
 2802 01a9 C6000000 		.4byte	0xc6
 2803 01ad 18       		.byte	0x18
 2804 01ae 0A       		.uleb128 0xa
 2805 01af 48050000 		.4byte	.LASF35
 2806 01b3 05       		.byte	0x5
 2807 01b4 38       		.byte	0x38
 2808 01b5 C6000000 		.4byte	0xc6
 2809 01b9 1A       		.byte	0x1a
 2810 01ba 0A       		.uleb128 0xa
 2811 01bb 1F000000 		.4byte	.LASF36
 2812 01bf 05       		.byte	0x5
 2813 01c0 39       		.byte	0x39
 2814 01c1 C6000000 		.4byte	0xc6
 2815 01c5 1C       		.byte	0x1c
 2816 01c6 0A       		.uleb128 0xa
 2817 01c7 5B030000 		.4byte	.LASF37
 2818 01cb 05       		.byte	0x5
 2819 01cc 3A       		.byte	0x3a
 2820 01cd C6000000 		.4byte	0xc6
 2821 01d1 1E       		.byte	0x1e
 2822 01d2 00       		.byte	0
 2823 01d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 65


 2824 01d4 0E000000 		.4byte	.LASF41
 2825 01d8 01       		.byte	0x1
 2826 01d9 2C000000 		.4byte	0x2c
 2827 01dd 06       		.byte	0x6
 2828 01de 0D       		.byte	0xd
 2829 01df FB010000 		.4byte	0x1fb
 2830 01e3 0C       		.uleb128 0xc
 2831 01e4 557000   		.ascii	"Up\000"
 2832 01e7 00       		.byte	0
 2833 01e8 0D       		.uleb128 0xd
 2834 01e9 53070000 		.4byte	.LASF38
 2835 01ed 01       		.byte	0x1
 2836 01ee 0D       		.uleb128 0xd
 2837 01ef E1040000 		.4byte	.LASF39
 2838 01f3 02       		.byte	0x2
 2839 01f4 0D       		.uleb128 0xd
 2840 01f5 AE060000 		.4byte	.LASF40
 2841 01f9 03       		.byte	0x3
 2842 01fa 00       		.byte	0
 2843 01fb 0B       		.uleb128 0xb
 2844 01fc 16060000 		.4byte	.LASF42
 2845 0200 01       		.byte	0x1
 2846 0201 2C000000 		.4byte	0x2c
 2847 0205 06       		.byte	0x6
 2848 0206 0E       		.byte	0xe
 2849 0207 36020000 		.4byte	0x236
 2850 020b 0D       		.uleb128 0xd
 2851 020c A4060000 		.4byte	.LASF43
 2852 0210 00       		.byte	0
 2853 0211 0D       		.uleb128 0xd
 2854 0212 30050000 		.4byte	.LASF44
 2855 0216 01       		.byte	0x1
 2856 0217 0D       		.uleb128 0xd
 2857 0218 F3070000 		.4byte	.LASF45
 2858 021c 02       		.byte	0x2
 2859 021d 0D       		.uleb128 0xd
 2860 021e C3010000 		.4byte	.LASF46
 2861 0222 03       		.byte	0x3
 2862 0223 0D       		.uleb128 0xd
 2863 0224 B7020000 		.4byte	.LASF47
 2864 0228 04       		.byte	0x4
 2865 0229 0D       		.uleb128 0xd
 2866 022a F8010000 		.4byte	.LASF48
 2867 022e 05       		.byte	0x5
 2868 022f 0D       		.uleb128 0xd
 2869 0230 54000000 		.4byte	.LASF49
 2870 0234 06       		.byte	0x6
 2871 0235 00       		.byte	0
 2872 0236 09       		.uleb128 0x9
 2873 0237 6D020000 		.4byte	.LASF51
 2874 023b 14       		.byte	0x14
 2875 023c 06       		.byte	0x6
 2876 023d 10       		.byte	0x10
 2877 023e 7F020000 		.4byte	0x27f
 2878 0242 0A       		.uleb128 0xa
 2879 0243 D5000000 		.4byte	.LASF52
 2880 0247 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 66


 2881 0248 11       		.byte	0x11
 2882 0249 FB010000 		.4byte	0x1fb
 2883 024d 00       		.byte	0
 2884 024e 0A       		.uleb128 0xa
 2885 024f 76080000 		.4byte	.LASF53
 2886 0253 06       		.byte	0x6
 2887 0254 12       		.byte	0x12
 2888 0255 68000000 		.4byte	0x68
 2889 0259 04       		.byte	0x4
 2890 025a 0A       		.uleb128 0xa
 2891 025b 87080000 		.4byte	.LASF54
 2892 025f 06       		.byte	0x6
 2893 0260 13       		.byte	0x13
 2894 0261 68000000 		.4byte	0x68
 2895 0265 08       		.byte	0x8
 2896 0266 0A       		.uleb128 0xa
 2897 0267 E7010000 		.4byte	.LASF55
 2898 026b 06       		.byte	0x6
 2899 026c 14       		.byte	0x14
 2900 026d 68000000 		.4byte	0x68
 2901 0271 0C       		.byte	0xc
 2902 0272 0A       		.uleb128 0xa
 2903 0273 AF010000 		.4byte	.LASF56
 2904 0277 06       		.byte	0x6
 2905 0278 15       		.byte	0x15
 2906 0279 D3010000 		.4byte	0x1d3
 2907 027d 10       		.byte	0x10
 2908 027e 00       		.byte	0
 2909 027f 03       		.uleb128 0x3
 2910 0280 6D020000 		.4byte	.LASF51
 2911 0284 06       		.byte	0x6
 2912 0285 16       		.byte	0x16
 2913 0286 36020000 		.4byte	0x236
 2914 028a 0B       		.uleb128 0xb
 2915 028b 46000000 		.4byte	.LASF57
 2916 028f 01       		.byte	0x1
 2917 0290 2C000000 		.4byte	0x2c
 2918 0294 01       		.byte	0x1
 2919 0295 18       		.byte	0x18
 2920 0296 DD020000 		.4byte	0x2dd
 2921 029a 0D       		.uleb128 0xd
 2922 029b FF030000 		.4byte	.LASF58
 2923 029f 00       		.byte	0
 2924 02a0 0D       		.uleb128 0xd
 2925 02a1 76030000 		.4byte	.LASF59
 2926 02a5 01       		.byte	0x1
 2927 02a6 0D       		.uleb128 0xd
 2928 02a7 7E080000 		.4byte	.LASF60
 2929 02ab 02       		.byte	0x2
 2930 02ac 0D       		.uleb128 0xd
 2931 02ad 94060000 		.4byte	.LASF61
 2932 02b1 03       		.byte	0x3
 2933 02b2 0D       		.uleb128 0xd
 2934 02b3 20030000 		.4byte	.LASF62
 2935 02b7 04       		.byte	0x4
 2936 02b8 0D       		.uleb128 0xd
 2937 02b9 84020000 		.4byte	.LASF63
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 67


 2938 02bd 05       		.byte	0x5
 2939 02be 0D       		.uleb128 0xd
 2940 02bf B6050000 		.4byte	.LASF64
 2941 02c3 06       		.byte	0x6
 2942 02c4 0D       		.uleb128 0xd
 2943 02c5 F3030000 		.4byte	.LASF65
 2944 02c9 07       		.byte	0x7
 2945 02ca 0D       		.uleb128 0xd
 2946 02cb 80030000 		.4byte	.LASF66
 2947 02cf 08       		.byte	0x8
 2948 02d0 0D       		.uleb128 0xd
 2949 02d1 CA020000 		.4byte	.LASF67
 2950 02d5 09       		.byte	0x9
 2951 02d6 0D       		.uleb128 0xd
 2952 02d7 1D070000 		.4byte	.LASF68
 2953 02db 0A       		.byte	0xa
 2954 02dc 00       		.byte	0
 2955 02dd 0E       		.uleb128 0xe
 2956 02de 3D040000 		.4byte	.LASF78
 2957 02e2 01       		.byte	0x1
 2958 02e3 51       		.byte	0x51
 2959 02e4 00000000 		.4byte	.LFB64
 2960 02e8 EC000000 		.4byte	.LFE64-.LFB64
 2961 02ec 01       		.uleb128 0x1
 2962 02ed 9C       		.byte	0x9c
 2963 02ee 0B030000 		.4byte	0x30b
 2964 02f2 0F       		.uleb128 0xf
 2965 02f3 50000000 		.4byte	.LBB2
 2966 02f7 62000000 		.4byte	.LBE2-.LBB2
 2967 02fb 10       		.uleb128 0x10
 2968 02fc F8060000 		.4byte	.LASF75
 2969 0300 01       		.byte	0x1
 2970 0301 5E       		.byte	0x5e
 2971 0302 D2000000 		.4byte	0xd2
 2972 0306 02       		.uleb128 0x2
 2973 0307 91       		.byte	0x91
 2974 0308 6C       		.sleb128 -20
 2975 0309 00       		.byte	0
 2976 030a 00       		.byte	0
 2977 030b 11       		.uleb128 0x11
 2978 030c 36020000 		.4byte	.LASF69
 2979 0310 01       		.byte	0x1
 2980 0311 69       		.byte	0x69
 2981 0312 00000000 		.4byte	.LFB65
 2982 0316 18000000 		.4byte	.LFE65-.LFB65
 2983 031a 01       		.uleb128 0x1
 2984 031b 9C       		.byte	0x9c
 2985 031c 11       		.uleb128 0x11
 2986 031d C9000000 		.4byte	.LASF70
 2987 0321 01       		.byte	0x1
 2988 0322 6F       		.byte	0x6f
 2989 0323 00000000 		.4byte	.LFB66
 2990 0327 18000000 		.4byte	.LFE66-.LFB66
 2991 032b 01       		.uleb128 0x1
 2992 032c 9C       		.byte	0x9c
 2993 032d 11       		.uleb128 0x11
 2994 032e 51020000 		.4byte	.LASF71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 68


 2995 0332 01       		.byte	0x1
 2996 0333 75       		.byte	0x75
 2997 0334 00000000 		.4byte	.LFB67
 2998 0338 18000000 		.4byte	.LFE67-.LFB67
 2999 033c 01       		.uleb128 0x1
 3000 033d 9C       		.byte	0x9c
 3001 033e 11       		.uleb128 0x11
 3002 033f 3D070000 		.4byte	.LASF72
 3003 0343 01       		.byte	0x1
 3004 0344 7B       		.byte	0x7b
 3005 0345 00000000 		.4byte	.LFB68
 3006 0349 18000000 		.4byte	.LFE68-.LFB68
 3007 034d 01       		.uleb128 0x1
 3008 034e 9C       		.byte	0x9c
 3009 034f 12       		.uleb128 0x12
 3010 0350 43080000 		.4byte	.LASF73
 3011 0354 01       		.byte	0x1
 3012 0355 81       		.byte	0x81
 3013 0356 00000000 		.4byte	.LFB69
 3014 035a 68000000 		.4byte	.LFE69-.LFB69
 3015 035e 01       		.uleb128 0x1
 3016 035f 9C       		.byte	0x9c
 3017 0360 13       		.uleb128 0x13
 3018 0361 0C030000 		.4byte	.LASF74
 3019 0365 01       		.byte	0x1
 3020 0366 92       		.byte	0x92
 3021 0367 68000000 		.4byte	0x68
 3022 036b 00000000 		.4byte	.LFB70
 3023 036f 24010000 		.4byte	.LFE70-.LFB70
 3024 0373 01       		.uleb128 0x1
 3025 0374 9C       		.byte	0x9c
 3026 0375 14       		.uleb128 0x14
 3027 0376 67080000 		.4byte	.LASF156
 3028 037a 01       		.byte	0x1
 3029 037b C9       		.byte	0xc9
 3030 037c C6000000 		.4byte	0xc6
 3031 0380 00000000 		.4byte	.LFB71
 3032 0384 54000000 		.4byte	.LFE71-.LFB71
 3033 0388 01       		.uleb128 0x1
 3034 0389 9C       		.byte	0x9c
 3035 038a B9030000 		.4byte	0x3b9
 3036 038e 15       		.uleb128 0x15
 3037 038f 50030000 		.4byte	.LASF157
 3038 0393 01       		.byte	0x1
 3039 0394 C9       		.byte	0xc9
 3040 0395 A2000000 		.4byte	0xa2
 3041 0399 02       		.uleb128 0x2
 3042 039a 91       		.byte	0x91
 3043 039b 66       		.sleb128 -26
 3044 039c 16       		.uleb128 0x16
 3045 039d 63707300 		.ascii	"cps\000"
 3046 03a1 01       		.byte	0x1
 3047 03a2 CA       		.byte	0xca
 3048 03a3 D2000000 		.4byte	0xd2
 3049 03a7 02       		.uleb128 0x2
 3050 03a8 91       		.byte	0x91
 3051 03a9 6C       		.sleb128 -20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 69


 3052 03aa 16       		.uleb128 0x16
 3053 03ab 72706D00 		.ascii	"rpm\000"
 3054 03af 01       		.byte	0x1
 3055 03b0 CB       		.byte	0xcb
 3056 03b1 C6000000 		.4byte	0xc6
 3057 03b5 02       		.uleb128 0x2
 3058 03b6 91       		.byte	0x91
 3059 03b7 6A       		.sleb128 -22
 3060 03b8 00       		.byte	0
 3061 03b9 17       		.uleb128 0x17
 3062 03ba 50080000 		.4byte	.LASF83
 3063 03be 01       		.byte	0x1
 3064 03bf D3       		.byte	0xd3
 3065 03c0 00000000 		.4byte	.LFB72
 3066 03c4 34000000 		.4byte	.LFE72-.LFB72
 3067 03c8 01       		.uleb128 0x1
 3068 03c9 9C       		.byte	0x9c
 3069 03ca 18       		.uleb128 0x18
 3070 03cb A6040000 		.4byte	.LASF76
 3071 03cf 01       		.byte	0x1
 3072 03d0 E4       		.byte	0xe4
 3073 03d1 8A020000 		.4byte	0x28a
 3074 03d5 00000000 		.4byte	.LFB73
 3075 03d9 84000000 		.4byte	.LFE73-.LFB73
 3076 03dd 01       		.uleb128 0x1
 3077 03de 9C       		.byte	0x9c
 3078 03df 19       		.uleb128 0x19
 3079 03e0 D3060000 		.4byte	.LASF77
 3080 03e4 01       		.byte	0x1
 3081 03e5 0A01     		.2byte	0x10a
 3082 03e7 8A020000 		.4byte	0x28a
 3083 03eb 00000000 		.4byte	.LFB74
 3084 03ef 7C000000 		.4byte	.LFE74-.LFB74
 3085 03f3 01       		.uleb128 0x1
 3086 03f4 9C       		.byte	0x9c
 3087 03f5 1A       		.uleb128 0x1a
 3088 03f6 B0070000 		.4byte	.LASF79
 3089 03fa 01       		.byte	0x1
 3090 03fb 2901     		.2byte	0x129
 3091 03fd 8A020000 		.4byte	0x28a
 3092 0401 00000000 		.4byte	.LFB75
 3093 0405 C0050000 		.4byte	.LFE75-.LFB75
 3094 0409 01       		.uleb128 0x1
 3095 040a 9C       		.byte	0x9c
 3096 040b 47040000 		.4byte	0x447
 3097 040f 1B       		.uleb128 0x1b
 3098 0410 9B030000 		.4byte	.LASF80
 3099 0414 01       		.byte	0x1
 3100 0415 2A01     		.2byte	0x12a
 3101 0417 D2000000 		.4byte	0xd2
 3102 041b 02       		.uleb128 0x2
 3103 041c 91       		.byte	0x91
 3104 041d 6C       		.sleb128 -20
 3105 041e 1B       		.uleb128 0x1b
 3106 041f 6D060000 		.4byte	.LASF81
 3107 0423 01       		.byte	0x1
 3108 0424 3901     		.2byte	0x139
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 70


 3109 0426 FB010000 		.4byte	0x1fb
 3110 042a 02       		.uleb128 0x2
 3111 042b 91       		.byte	0x91
 3112 042c 6B       		.sleb128 -21
 3113 042d 0F       		.uleb128 0xf
 3114 042e AE030000 		.4byte	.LBB3
 3115 0432 2C000000 		.4byte	.LBE3-.LBB3
 3116 0436 1B       		.uleb128 0x1b
 3117 0437 76010000 		.4byte	.LASF82
 3118 043b 01       		.byte	0x1
 3119 043c 0402     		.2byte	0x204
 3120 043e 68000000 		.4byte	0x68
 3121 0442 02       		.uleb128 0x2
 3122 0443 91       		.byte	0x91
 3123 0444 64       		.sleb128 -28
 3124 0445 00       		.byte	0
 3125 0446 00       		.byte	0
 3126 0447 1C       		.uleb128 0x1c
 3127 0448 61040000 		.4byte	.LASF84
 3128 044c 01       		.byte	0x1
 3129 044d B402     		.2byte	0x2b4
 3130 044f 00000000 		.4byte	.LFB76
 3131 0453 68000000 		.4byte	.LFE76-.LFB76
 3132 0457 01       		.uleb128 0x1
 3133 0458 9C       		.byte	0x9c
 3134 0459 1D       		.uleb128 0x1d
 3135 045a BE050000 		.4byte	.LASF85
 3136 045e 01       		.byte	0x1
 3137 045f BD02     		.2byte	0x2bd
 3138 0461 7F020000 		.4byte	0x27f
 3139 0465 00000000 		.4byte	.LFB77
 3140 0469 6C000000 		.4byte	.LFE77-.LFB77
 3141 046d 01       		.uleb128 0x1
 3142 046e 9C       		.byte	0x9c
 3143 046f 83040000 		.4byte	0x483
 3144 0473 1B       		.uleb128 0x1b
 3145 0474 40030000 		.4byte	.LASF86
 3146 0478 01       		.byte	0x1
 3147 0479 BE02     		.2byte	0x2be
 3148 047b 7F020000 		.4byte	0x27f
 3149 047f 02       		.uleb128 0x2
 3150 0480 91       		.byte	0x91
 3151 0481 5C       		.sleb128 -36
 3152 0482 00       		.byte	0
 3153 0483 1E       		.uleb128 0x1e
 3154 0484 D9030000 		.4byte	.LASF158
 3155 0488 01       		.byte	0x1
 3156 0489 C602     		.2byte	0x2c6
 3157 048b 00000000 		.4byte	.LFB78
 3158 048f 3C010000 		.4byte	.LFE78-.LFB78
 3159 0493 01       		.uleb128 0x1
 3160 0494 9C       		.byte	0x9c
 3161 0495 C7040000 		.4byte	0x4c7
 3162 0499 1B       		.uleb128 0x1b
 3163 049a 3C080000 		.4byte	.LASF87
 3164 049e 01       		.byte	0x1
 3165 049f C702     		.2byte	0x2c7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 71


 3166 04a1 A2000000 		.4byte	0xa2
 3167 04a5 02       		.uleb128 0x2
 3168 04a6 91       		.byte	0x91
 3169 04a7 72       		.sleb128 -14
 3170 04a8 1B       		.uleb128 0x1b
 3171 04a9 9F020000 		.4byte	.LASF88
 3172 04ad 01       		.byte	0x1
 3173 04ae C802     		.2byte	0x2c8
 3174 04b0 A2000000 		.4byte	0xa2
 3175 04b4 02       		.uleb128 0x2
 3176 04b5 91       		.byte	0x91
 3177 04b6 70       		.sleb128 -16
 3178 04b7 1B       		.uleb128 0x1b
 3179 04b8 77040000 		.4byte	.LASF89
 3180 04bc 01       		.byte	0x1
 3181 04bd CC02     		.2byte	0x2cc
 3182 04bf 68000000 		.4byte	0x68
 3183 04c3 02       		.uleb128 0x2
 3184 04c4 91       		.byte	0x91
 3185 04c5 74       		.sleb128 -12
 3186 04c6 00       		.byte	0
 3187 04c7 1F       		.uleb128 0x1f
 3188 04c8 27040000 		.4byte	.LASF90
 3189 04cc 01       		.byte	0x1
 3190 04cd FC02     		.2byte	0x2fc
 3191 04cf 00000000 		.4byte	.LFB79
 3192 04d3 BC000000 		.4byte	.LFE79-.LFB79
 3193 04d7 01       		.uleb128 0x1
 3194 04d8 9C       		.byte	0x9c
 3195 04d9 10       		.uleb128 0x10
 3196 04da A6020000 		.4byte	.LASF91
 3197 04de 01       		.byte	0x1
 3198 04df 20       		.byte	0x20
 3199 04e0 E5000000 		.4byte	0xe5
 3200 04e4 05       		.uleb128 0x5
 3201 04e5 03       		.byte	0x3
 3202 04e6 14000000 		.4byte	instructionIndex
 3203 04ea 10       		.uleb128 0x10
 3204 04eb 8F080000 		.4byte	.LASF92
 3205 04ef 01       		.byte	0x1
 3206 04f0 34       		.byte	0x34
 3207 04f1 E0000000 		.4byte	0xe0
 3208 04f5 05       		.uleb128 0x5
 3209 04f6 03       		.byte	0x3
 3210 04f7 36000000 		.4byte	turnStartedFlag
 3211 04fb 10       		.uleb128 0x10
 3212 04fc D2070000 		.4byte	.LASF93
 3213 0500 01       		.byte	0x1
 3214 0501 35       		.byte	0x35
 3215 0502 E0000000 		.4byte	0xe0
 3216 0506 05       		.uleb128 0x5
 3217 0507 03       		.byte	0x3
 3218 0508 37000000 		.4byte	turnFinishedFlag
 3219 050c 10       		.uleb128 0x10
 3220 050d 28000000 		.4byte	.LASF94
 3221 0511 01       		.byte	0x1
 3222 0512 37       		.byte	0x37
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 72


 3223 0513 E0000000 		.4byte	0xe0
 3224 0517 05       		.uleb128 0x5
 3225 0518 03       		.byte	0x3
 3226 0519 38000000 		.4byte	forwardUntilTargetStartedFlag
 3227 051d 10       		.uleb128 0x10
 3228 051e E8050000 		.4byte	.LASF95
 3229 0522 01       		.byte	0x1
 3230 0523 38       		.byte	0x38
 3231 0524 E0000000 		.4byte	0xe0
 3232 0528 05       		.uleb128 0x5
 3233 0529 03       		.byte	0x3
 3234 052a 39000000 		.4byte	uTurnStartedFlag
 3235 052e 10       		.uleb128 0x10
 3236 052f E6040000 		.4byte	.LASF96
 3237 0533 01       		.byte	0x1
 3238 0534 39       		.byte	0x39
 3239 0535 E0000000 		.4byte	0xe0
 3240 0539 05       		.uleb128 0x5
 3241 053a 03       		.byte	0x3
 3242 053b 3A000000 		.4byte	uTurnFinishedFlag
 3243 053f 10       		.uleb128 0x10
 3244 0540 5E060000 		.4byte	.LASF97
 3245 0544 01       		.byte	0x1
 3246 0545 3B       		.byte	0x3b
 3247 0546 E0000000 		.4byte	0xe0
 3248 054a 05       		.uleb128 0x5
 3249 054b 03       		.byte	0x3
 3250 054c 3B000000 		.4byte	leftStatusFlag
 3251 0550 10       		.uleb128 0x10
 3252 0551 5D020000 		.4byte	.LASF98
 3253 0555 01       		.byte	0x1
 3254 0556 3C       		.byte	0x3c
 3255 0557 E0000000 		.4byte	0xe0
 3256 055b 05       		.uleb128 0x5
 3257 055c 03       		.byte	0x3
 3258 055d 3C000000 		.4byte	rightStatusFlag
 3259 0561 10       		.uleb128 0x10
 3260 0562 50050000 		.4byte	.LASF99
 3261 0566 01       		.byte	0x1
 3262 0567 3E       		.byte	0x3e
 3263 0568 E0000000 		.4byte	0xe0
 3264 056c 05       		.uleb128 0x5
 3265 056d 03       		.byte	0x3
 3266 056e 3D000000 		.4byte	spinCourseCorrectionStarted
 3267 0572 10       		.uleb128 0x10
 3268 0573 EE020000 		.4byte	.LASF100
 3269 0577 01       		.byte	0x1
 3270 0578 3F       		.byte	0x3f
 3271 0579 E0000000 		.4byte	0xe0
 3272 057d 05       		.uleb128 0x5
 3273 057e 03       		.byte	0x3
 3274 057f 3E000000 		.4byte	currentIgnoreL
 3275 0583 10       		.uleb128 0x10
 3276 0584 11030000 		.4byte	.LASF101
 3277 0588 01       		.byte	0x1
 3278 0589 40       		.byte	0x40
 3279 058a E0000000 		.4byte	0xe0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 73


 3280 058e 05       		.uleb128 0x5
 3281 058f 03       		.byte	0x3
 3282 0590 45000000 		.4byte	currentIgnoreR
 3283 0594 10       		.uleb128 0x10
 3284 0595 2D080000 		.4byte	.LASF102
 3285 0599 01       		.byte	0x1
 3286 059a 44       		.byte	0x44
 3287 059b E0000000 		.4byte	0xe0
 3288 059f 05       		.uleb128 0x5
 3289 05a0 03       		.byte	0x3
 3290 05a1 3F000000 		.4byte	totalLineCount
 3291 05a5 10       		.uleb128 0x10
 3292 05a6 59000000 		.4byte	.LASF103
 3293 05aa 01       		.byte	0x1
 3294 05ab 45       		.byte	0x45
 3295 05ac E0000000 		.4byte	0xe0
 3296 05b0 05       		.uleb128 0x5
 3297 05b1 03       		.byte	0x3
 3298 05b2 40000000 		.4byte	lineCount
 3299 05b6 10       		.uleb128 0x10
 3300 05b7 DC010000 		.4byte	.LASF104
 3301 05bb 01       		.byte	0x1
 3302 05bc 46       		.byte	0x46
 3303 05bd E0000000 		.4byte	0xe0
 3304 05c1 05       		.uleb128 0x5
 3305 05c2 03       		.byte	0x3
 3306 05c3 41000000 		.4byte	onLineFlag
 3307 05c7 10       		.uleb128 0x10
 3308 05c8 1A040000 		.4byte	.LASF105
 3309 05cc 01       		.byte	0x1
 3310 05cd 48       		.byte	0x48
 3311 05ce E0000000 		.4byte	0xe0
 3312 05d2 05       		.uleb128 0x5
 3313 05d3 03       		.byte	0x3
 3314 05d4 42000000 		.4byte	tooEarlyFlag
 3315 05d8 10       		.uleb128 0x10
 3316 05d9 BE030000 		.4byte	.LASF106
 3317 05dd 01       		.byte	0x1
 3318 05de 49       		.byte	0x49
 3319 05df E0000000 		.4byte	0xe0
 3320 05e3 05       		.uleb128 0x5
 3321 05e4 03       		.byte	0x3
 3322 05e5 43000000 		.4byte	tooLateFlag
 3323 05e9 20       		.uleb128 0x20
 3324 05ea 92020000 		.4byte	.LASF107
 3325 05ee 07       		.byte	0x7
 3326 05ef 1207     		.2byte	0x712
 3327 05f1 F5050000 		.4byte	0x5f5
 3328 05f5 06       		.uleb128 0x6
 3329 05f6 8B000000 		.4byte	0x8b
 3330 05fa 21       		.uleb128 0x21
 3331 05fb 747300   		.ascii	"ts\000"
 3332 05fe 05       		.byte	0x5
 3333 05ff 10       		.byte	0x10
 3334 0600 96000000 		.4byte	0x96
 3335 0604 05       		.uleb128 0x5
 3336 0605 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 74


 3337 0606 00000000 		.4byte	ts
 3338 060a 22       		.uleb128 0x22
 3339 060b A5030000 		.4byte	.LASF108
 3340 060f 05       		.byte	0x5
 3341 0610 11       		.byte	0x11
 3342 0611 A2000000 		.4byte	0xa2
 3343 0615 05       		.uleb128 0x5
 3344 0616 03       		.byte	0x3
 3345 0617 00000000 		.4byte	ts_enc
 3346 061b 22       		.uleb128 0x22
 3347 061c DE050000 		.4byte	.LASF109
 3348 0620 05       		.byte	0x5
 3349 0621 12       		.byte	0x12
 3350 0622 A2000000 		.4byte	0xa2
 3351 0626 05       		.uleb128 0x5
 3352 0627 03       		.byte	0x3
 3353 0628 00000000 		.4byte	ts_update
 3354 062c 22       		.uleb128 0x22
 3355 062d 63000000 		.4byte	.LASF110
 3356 0631 05       		.byte	0x5
 3357 0632 13       		.byte	0x13
 3358 0633 A2000000 		.4byte	0xa2
 3359 0637 05       		.uleb128 0x5
 3360 0638 03       		.byte	0x3
 3361 0639 00000000 		.4byte	ts_speed
 3362 063d 22       		.uleb128 0x22
 3363 063e 86040000 		.4byte	.LASF111
 3364 0642 05       		.byte	0x5
 3365 0643 14       		.byte	0x14
 3366 0644 A2000000 		.4byte	0xa2
 3367 0648 05       		.uleb128 0x5
 3368 0649 03       		.byte	0x3
 3369 064a 00000000 		.4byte	ts_display
 3370 064e 22       		.uleb128 0x22
 3371 064f 2A020000 		.4byte	.LASF112
 3372 0653 05       		.byte	0x5
 3373 0654 16       		.byte	0x16
 3374 0655 96000000 		.4byte	0x96
 3375 0659 05       		.uleb128 0x5
 3376 065a 03       		.byte	0x3
 3377 065b 00000000 		.4byte	flag_ts_enc
 3378 065f 22       		.uleb128 0x22
 3379 0660 5F070000 		.4byte	.LASF113
 3380 0664 05       		.byte	0x5
 3381 0665 17       		.byte	0x17
 3382 0666 96000000 		.4byte	0x96
 3383 066a 05       		.uleb128 0x5
 3384 066b 03       		.byte	0x3
 3385 066c 00000000 		.4byte	flag_ts_update
 3386 0670 22       		.uleb128 0x22
 3387 0671 CA040000 		.4byte	.LASF114
 3388 0675 05       		.byte	0x5
 3389 0676 18       		.byte	0x18
 3390 0677 96000000 		.4byte	0x96
 3391 067b 05       		.uleb128 0x5
 3392 067c 03       		.byte	0x3
 3393 067d 00000000 		.4byte	flag_ts_speed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 75


 3394 0681 22       		.uleb128 0x22
 3395 0682 E8060000 		.4byte	.LASF115
 3396 0686 05       		.byte	0x5
 3397 0687 19       		.byte	0x19
 3398 0688 96000000 		.4byte	0x96
 3399 068c 05       		.uleb128 0x5
 3400 068d 03       		.byte	0x3
 3401 068e 00000000 		.4byte	flag_ts_display
 3402 0692 22       		.uleb128 0x22
 3403 0693 31030000 		.4byte	.LASF116
 3404 0697 05       		.byte	0x5
 3405 0698 1B       		.byte	0x1b
 3406 0699 96000000 		.4byte	0x96
 3407 069d 05       		.uleb128 0x5
 3408 069e 03       		.byte	0x3
 3409 069f 00000000 		.4byte	flag_rx
 3410 06a3 22       		.uleb128 0x22
 3411 06a4 BE040000 		.4byte	.LASF117
 3412 06a8 05       		.byte	0x5
 3413 06a9 1C       		.byte	0x1c
 3414 06aa 96000000 		.4byte	0x96
 3415 06ae 05       		.uleb128 0x5
 3416 06af 03       		.byte	0x3
 3417 06b0 00000000 		.4byte	flag_packet
 3418 06b4 22       		.uleb128 0x22
 3419 06b5 42020000 		.4byte	.LASF118
 3420 06b9 05       		.byte	0x5
 3421 06ba 1D       		.byte	0x1d
 3422 06bb 96000000 		.4byte	0x96
 3423 06bf 05       		.uleb128 0x5
 3424 06c0 03       		.byte	0x3
 3425 06c1 00000000 		.4byte	flag_KB_string
 3426 06c5 22       		.uleb128 0x22
 3427 06c6 FD020000 		.4byte	.LASF119
 3428 06ca 05       		.byte	0x5
 3429 06cb 1F       		.byte	0x1f
 3430 06cc 96000000 		.4byte	0x96
 3431 06d0 05       		.uleb128 0x5
 3432 06d1 03       		.byte	0x3
 3433 06d2 00000000 		.4byte	dataready_flag
 3434 06d6 22       		.uleb128 0x22
 3435 06d7 6C050000 		.4byte	.LASF120
 3436 06db 05       		.byte	0x5
 3437 06dc 21       		.byte	0x21
 3438 06dd 96000000 		.4byte	0x96
 3439 06e1 05       		.uleb128 0x5
 3440 06e2 03       		.byte	0x3
 3441 06e3 00000000 		.4byte	flag_rf_transmission_active
 3442 06e7 07       		.uleb128 0x7
 3443 06e8 84000000 		.4byte	0x84
 3444 06ec F7060000 		.4byte	0x6f7
 3445 06f0 08       		.uleb128 0x8
 3446 06f1 7D000000 		.4byte	0x7d
 3447 06f5 3F       		.byte	0x3f
 3448 06f6 00       		.byte	0
 3449 06f7 22       		.uleb128 0x22
 3450 06f8 6E070000 		.4byte	.LASF121
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 76


 3451 06fc 05       		.byte	0x5
 3452 06fd 24       		.byte	0x24
 3453 06fe E7060000 		.4byte	0x6e7
 3454 0702 05       		.uleb128 0x5
 3455 0703 03       		.byte	0x3
 3456 0704 00000000 		.4byte	displaystring
 3457 0708 22       		.uleb128 0x22
 3458 0709 56030000 		.4byte	.LASF122
 3459 070d 05       		.byte	0x5
 3460 070e 25       		.byte	0x25
 3461 070f E7060000 		.4byte	0x6e7
 3462 0713 05       		.uleb128 0x5
 3463 0714 03       		.byte	0x3
 3464 0715 00000000 		.4byte	line
 3465 0719 22       		.uleb128 0x22
 3466 071a 92010000 		.4byte	.LASF123
 3467 071e 05       		.byte	0x5
 3468 071f 25       		.byte	0x25
 3469 0720 E7060000 		.4byte	0x6e7
 3470 0724 05       		.uleb128 0x5
 3471 0725 03       		.byte	0x3
 3472 0726 00000000 		.4byte	entry
 3473 072a 07       		.uleb128 0x7
 3474 072b 96000000 		.4byte	0x96
 3475 072f 3A070000 		.4byte	0x73a
 3476 0733 08       		.uleb128 0x8
 3477 0734 7D000000 		.4byte	0x7d
 3478 0738 3F       		.byte	0x3f
 3479 0739 00       		.byte	0
 3480 073a 22       		.uleb128 0x22
 3481 073b 26050000 		.4byte	.LASF124
 3482 073f 05       		.byte	0x5
 3483 0740 26       		.byte	0x26
 3484 0741 2A070000 		.4byte	0x72a
 3485 0745 05       		.uleb128 0x5
 3486 0746 03       		.byte	0x3
 3487 0747 00000000 		.4byte	usbBuffer
 3488 074b 22       		.uleb128 0x22
 3489 074c 0C050000 		.4byte	.LASF125
 3490 0750 05       		.byte	0x5
 3491 0751 3C       		.byte	0x3c
 3492 0752 FA000000 		.4byte	0xfa
 3493 0756 05       		.uleb128 0x5
 3494 0757 03       		.byte	0x3
 3495 0758 00000000 		.4byte	system_state
 3496 075c 07       		.uleb128 0x7
 3497 075d 68000000 		.4byte	0x68
 3498 0761 72070000 		.4byte	0x772
 3499 0765 08       		.uleb128 0x8
 3500 0766 7D000000 		.4byte	0x7d
 3501 076a 0E       		.byte	0xe
 3502 076b 08       		.uleb128 0x8
 3503 076c 7D000000 		.4byte	0x7d
 3504 0770 12       		.byte	0x12
 3505 0771 00       		.byte	0
 3506 0772 23       		.uleb128 0x23
 3507 0773 6D617000 		.ascii	"map\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 77


 3508 0777 08       		.byte	0x8
 3509 0778 04       		.byte	0x4
 3510 0779 5C070000 		.4byte	0x75c
 3511 077d 07       		.uleb128 0x7
 3512 077e 68000000 		.4byte	0x68
 3513 0782 93070000 		.4byte	0x793
 3514 0786 08       		.uleb128 0x8
 3515 0787 7D000000 		.4byte	0x7d
 3516 078b 05       		.byte	0x5
 3517 078c 08       		.uleb128 0x8
 3518 078d 7D000000 		.4byte	0x7d
 3519 0791 01       		.byte	0x1
 3520 0792 00       		.byte	0
 3521 0793 24       		.uleb128 0x24
 3522 0794 49070000 		.4byte	.LASF126
 3523 0798 08       		.byte	0x8
 3524 0799 05       		.byte	0x5
 3525 079a 7D070000 		.4byte	0x77d
 3526 079e 22       		.uleb128 0x22
 3527 079f 9F070000 		.4byte	.LASF127
 3528 07a3 01       		.byte	0x1
 3529 07a4 19       		.byte	0x19
 3530 07a5 8A020000 		.4byte	0x28a
 3531 07a9 05       		.uleb128 0x5
 3532 07aa 03       		.byte	0x3
 3533 07ab 00000000 		.4byte	currentDirection
 3534 07af 22       		.uleb128 0x22
 3535 07b0 18020000 		.4byte	.LASF128
 3536 07b4 01       		.byte	0x1
 3537 07b5 19       		.byte	0x19
 3538 07b6 8A020000 		.4byte	0x28a
 3539 07ba 05       		.uleb128 0x5
 3540 07bb 03       		.byte	0x3
 3541 07bc 00000000 		.4byte	previousDirection
 3542 07c0 22       		.uleb128 0x22
 3543 07c1 87070000 		.4byte	.LASF129
 3544 07c5 01       		.byte	0x1
 3545 07c6 1B       		.byte	0x1b
 3546 07c7 D3010000 		.4byte	0x1d3
 3547 07cb 05       		.uleb128 0x5
 3548 07cc 03       		.byte	0x3
 3549 07cd 00000000 		.4byte	currentRobotOrientation
 3550 07d1 22       		.uleb128 0x22
 3551 07d2 3D060000 		.4byte	.LASF130
 3552 07d6 01       		.byte	0x1
 3553 07d7 1B       		.byte	0x1b
 3554 07d8 D3010000 		.4byte	0x1d3
 3555 07dc 05       		.uleb128 0x5
 3556 07dd 03       		.byte	0x3
 3557 07de 00000000 		.4byte	previousOrientation
 3558 07e2 22       		.uleb128 0x22
 3559 07e3 1A080000 		.4byte	.LASF131
 3560 07e7 01       		.byte	0x1
 3561 07e8 1C       		.byte	0x1c
 3562 07e9 7F020000 		.4byte	0x27f
 3563 07ed 05       		.uleb128 0x5
 3564 07ee 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 78


 3565 07ef 00000000 		.4byte	currentInstruction
 3566 07f3 22       		.uleb128 0x22
 3567 07f4 CA060000 		.4byte	.LASF132
 3568 07f8 01       		.byte	0x1
 3569 07f9 1D       		.byte	0x1d
 3570 07fa 68000000 		.4byte	0x68
 3571 07fe 05       		.uleb128 0x5
 3572 07ff 03       		.byte	0x3
 3573 0800 00000000 		.4byte	numSteps
 3574 0804 22       		.uleb128 0x22
 3575 0805 E3070000 		.4byte	.LASF133
 3576 0809 01       		.byte	0x1
 3577 080a 1F       		.byte	0x1f
 3578 080b 15080000 		.4byte	0x815
 3579 080f 05       		.uleb128 0x5
 3580 0810 03       		.byte	0x3
 3581 0811 00000000 		.4byte	instructionList
 3582 0815 25       		.uleb128 0x25
 3583 0816 04       		.byte	0x4
 3584 0817 7F020000 		.4byte	0x27f
 3585 081b 21       		.uleb128 0x21
 3586 081c 733300   		.ascii	"s3\000"
 3587 081f 01       		.byte	0x1
 3588 0820 25       		.byte	0x25
 3589 0821 96000000 		.4byte	0x96
 3590 0825 05       		.uleb128 0x5
 3591 0826 03       		.byte	0x3
 3592 0827 00000000 		.4byte	s3
 3593 082b 21       		.uleb128 0x21
 3594 082c 733400   		.ascii	"s4\000"
 3595 082f 01       		.byte	0x1
 3596 0830 25       		.byte	0x25
 3597 0831 96000000 		.4byte	0x96
 3598 0835 05       		.uleb128 0x5
 3599 0836 03       		.byte	0x3
 3600 0837 00000000 		.4byte	s4
 3601 083b 21       		.uleb128 0x21
 3602 083c 733500   		.ascii	"s5\000"
 3603 083f 01       		.byte	0x1
 3604 0840 25       		.byte	0x25
 3605 0841 96000000 		.4byte	0x96
 3606 0845 05       		.uleb128 0x5
 3607 0846 03       		.byte	0x3
 3608 0847 00000000 		.4byte	s5
 3609 084b 21       		.uleb128 0x21
 3610 084c 733600   		.ascii	"s6\000"
 3611 084f 01       		.byte	0x1
 3612 0850 25       		.byte	0x25
 3613 0851 96000000 		.4byte	0x96
 3614 0855 05       		.uleb128 0x5
 3615 0856 03       		.byte	0x3
 3616 0857 00000000 		.4byte	s6
 3617 085b 22       		.uleb128 0x22
 3618 085c A4050000 		.4byte	.LASF134
 3619 0860 01       		.byte	0x1
 3620 0861 2A       		.byte	0x2a
 3621 0862 AE000000 		.4byte	0xae
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 79


 3622 0866 05       		.uleb128 0x5
 3623 0867 03       		.byte	0x3
 3624 0868 00000000 		.4byte	totalMilliseconds
 3625 086c 22       		.uleb128 0x22
 3626 086d 00000000 		.4byte	.LASF135
 3627 0871 01       		.byte	0x1
 3628 0872 2B       		.byte	0x2b
 3629 0873 D2000000 		.4byte	0xd2
 3630 0877 05       		.uleb128 0x5
 3631 0878 03       		.byte	0x3
 3632 0879 00000000 		.4byte	totalDistance
 3633 087d 07       		.uleb128 0x7
 3634 087e 84000000 		.4byte	0x84
 3635 0882 8D080000 		.4byte	0x88d
 3636 0886 08       		.uleb128 0x8
 3637 0887 7D000000 		.4byte	0x7d
 3638 088b 44       		.byte	0x44
 3639 088c 00       		.byte	0
 3640 088d 22       		.uleb128 0x22
 3641 088e 58070000 		.4byte	.LASF136
 3642 0892 01       		.byte	0x1
 3643 0893 2D       		.byte	0x2d
 3644 0894 7D080000 		.4byte	0x87d
 3645 0898 05       		.uleb128 0x5
 3646 0899 03       		.byte	0x3
 3647 089a 00000000 		.4byte	buffer
 3648 089e 22       		.uleb128 0x22
 3649 089f 68030000 		.4byte	.LASF137
 3650 08a3 01       		.byte	0x1
 3651 08a4 2E       		.byte	0x2e
 3652 08a5 68000000 		.4byte	0x68
 3653 08a9 05       		.uleb128 0x5
 3654 08aa 03       		.byte	0x3
 3655 08ab 00000000 		.4byte	quadDec2Count
 3656 08af 22       		.uleb128 0x22
 3657 08b0 DF000000 		.4byte	.LASF138
 3658 08b4 01       		.byte	0x1
 3659 08b5 2F       		.byte	0x2f
 3660 08b6 68000000 		.4byte	0x68
 3661 08ba 05       		.uleb128 0x5
 3662 08bb 03       		.byte	0x3
 3663 08bc 00000000 		.4byte	timerInt
 3664 08c0 22       		.uleb128 0x22
 3665 08c1 D4050000 		.4byte	.LASF139
 3666 08c5 01       		.byte	0x1
 3667 08c6 30       		.byte	0x30
 3668 08c7 68000000 		.4byte	0x68
 3669 08cb 05       		.uleb128 0x5
 3670 08cc 03       		.byte	0x3
 3671 08cd 00000000 		.4byte	keepLedOn
 3672 08d1 22       		.uleb128 0x22
 3673 08d2 D1010000 		.4byte	.LASF140
 3674 08d6 01       		.byte	0x1
 3675 08d7 32       		.byte	0x32
 3676 08d8 AE000000 		.4byte	0xae
 3677 08dc 05       		.uleb128 0x5
 3678 08dd 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 80


 3679 08de 00000000 		.4byte	stopBuffer
 3680 08e2 22       		.uleb128 0x22
 3681 08e3 CB080000 		.4byte	.LASF141
 3682 08e7 01       		.byte	0x1
 3683 08e8 33       		.byte	0x33
 3684 08e9 A2000000 		.4byte	0xa2
 3685 08ed 05       		.uleb128 0x5
 3686 08ee 03       		.byte	0x3
 3687 08ef 00000000 		.4byte	forwardBuffer
 3688 08f3 22       		.uleb128 0x22
 3689 08f4 04080000 		.4byte	.LASF142
 3690 08f8 01       		.byte	0x1
 3691 08f9 4B       		.byte	0x4b
 3692 08fa EA000000 		.4byte	0xea
 3693 08fe 05       		.uleb128 0x5
 3694 08ff 03       		.byte	0x3
 3695 0900 00000000 		.4byte	junctionConfiguration
 3696 0904 22       		.uleb128 0x22
 3697 0905 91040000 		.4byte	.LASF143
 3698 0909 01       		.byte	0x1
 3699 090a 4C       		.byte	0x4c
 3700 090b 96000000 		.4byte	0x96
 3701 090f 05       		.uleb128 0x5
 3702 0910 03       		.byte	0x3
 3703 0911 00000000 		.4byte	currentFoodListIndex
 3704 0915 22       		.uleb128 0x22
 3705 0916 CA030000 		.4byte	.LASF144
 3706 091a 01       		.byte	0x1
 3707 091b 4E       		.byte	0x4e
 3708 091c D2000000 		.4byte	0xd2
 3709 0920 05       		.uleb128 0x5
 3710 0921 03       		.byte	0x3
 3711 0922 00000000 		.4byte	blockSizeTotal
 3712 0926 22       		.uleb128 0x22
 3713 0927 88050000 		.4byte	.LASF145
 3714 092b 01       		.byte	0x1
 3715 092c DA       		.byte	0xda
 3716 092d D2000000 		.4byte	0xd2
 3717 0931 05       		.uleb128 0x5
 3718 0932 03       		.byte	0x3
 3719 0933 00000000 		.4byte	xBlocksize
 3720 0937 22       		.uleb128 0x22
 3721 0938 93050000 		.4byte	.LASF146
 3722 093c 01       		.byte	0x1
 3723 093d DB       		.byte	0xdb
 3724 093e D2000000 		.4byte	0xd2
 3725 0942 05       		.uleb128 0x5
 3726 0943 03       		.byte	0x3
 3727 0944 00000000 		.4byte	yBlocksize
 3728 0948 22       		.uleb128 0x22
 3729 0949 01050000 		.4byte	.LASF147
 3730 094d 01       		.byte	0x1
 3731 094e DC       		.byte	0xdc
 3732 094f 96000000 		.4byte	0x96
 3733 0953 05       		.uleb128 0x5
 3734 0954 03       		.byte	0x3
 3735 0955 00000000 		.4byte	currentRow
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 81


 3736 0959 22       		.uleb128 0x22
 3737 095a 79020000 		.4byte	.LASF148
 3738 095e 01       		.byte	0x1
 3739 095f DD       		.byte	0xdd
 3740 0960 96000000 		.4byte	0x96
 3741 0964 05       		.uleb128 0x5
 3742 0965 03       		.byte	0x3
 3743 0966 00000000 		.4byte	currentCol
 3744 096a 22       		.uleb128 0x22
 3745 096b BA080000 		.4byte	.LASF149
 3746 096f 01       		.byte	0x1
 3747 0970 DF       		.byte	0xdf
 3748 0971 96000000 		.4byte	0x96
 3749 0975 05       		.uleb128 0x5
 3750 0976 03       		.byte	0x3
 3751 0977 00000000 		.4byte	stoppedAfterTurn
 3752 097b 22       		.uleb128 0x22
 3753 097c 51060000 		.4byte	.LASF150
 3754 0980 01       		.byte	0x1
 3755 0981 E0       		.byte	0xe0
 3756 0982 96000000 		.4byte	0x96
 3757 0986 05       		.uleb128 0x5
 3758 0987 03       		.byte	0x3
 3759 0988 00000000 		.4byte	ignoreSensor
 3760 098c 26       		.uleb128 0x26
 3761 098d B4060000 		.4byte	.LASF151
 3762 0991 01       		.byte	0x1
 3763 0992 0801     		.2byte	0x108
 3764 0994 8A020000 		.4byte	0x28a
 3765 0998 05       		.uleb128 0x5
 3766 0999 03       		.byte	0x3
 3767 099a 00000000 		.4byte	lastDirectionAfter180
 3768 099e 26       		.uleb128 0x26
 3769 099f 05020000 		.4byte	.LASF152
 3770 09a3 01       		.byte	0x1
 3771 09a4 2801     		.2byte	0x128
 3772 09a6 96000000 		.4byte	0x96
 3773 09aa 05       		.uleb128 0x5
 3774 09ab 03       		.byte	0x3
 3775 09ac 00000000 		.4byte	firstTurnIteration
 3776 09b0 00       		.byte	0
 3777              		.section	.debug_abbrev,"",%progbits
 3778              	.Ldebug_abbrev0:
 3779 0000 01       		.uleb128 0x1
 3780 0001 11       		.uleb128 0x11
 3781 0002 01       		.byte	0x1
 3782 0003 25       		.uleb128 0x25
 3783 0004 0E       		.uleb128 0xe
 3784 0005 13       		.uleb128 0x13
 3785 0006 0B       		.uleb128 0xb
 3786 0007 03       		.uleb128 0x3
 3787 0008 0E       		.uleb128 0xe
 3788 0009 1B       		.uleb128 0x1b
 3789 000a 0E       		.uleb128 0xe
 3790 000b 55       		.uleb128 0x55
 3791 000c 17       		.uleb128 0x17
 3792 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 82


 3793 000e 01       		.uleb128 0x1
 3794 000f 10       		.uleb128 0x10
 3795 0010 17       		.uleb128 0x17
 3796 0011 00       		.byte	0
 3797 0012 00       		.byte	0
 3798 0013 02       		.uleb128 0x2
 3799 0014 24       		.uleb128 0x24
 3800 0015 00       		.byte	0
 3801 0016 0B       		.uleb128 0xb
 3802 0017 0B       		.uleb128 0xb
 3803 0018 3E       		.uleb128 0x3e
 3804 0019 0B       		.uleb128 0xb
 3805 001a 03       		.uleb128 0x3
 3806 001b 0E       		.uleb128 0xe
 3807 001c 00       		.byte	0
 3808 001d 00       		.byte	0
 3809 001e 03       		.uleb128 0x3
 3810 001f 16       		.uleb128 0x16
 3811 0020 00       		.byte	0
 3812 0021 03       		.uleb128 0x3
 3813 0022 0E       		.uleb128 0xe
 3814 0023 3A       		.uleb128 0x3a
 3815 0024 0B       		.uleb128 0xb
 3816 0025 3B       		.uleb128 0x3b
 3817 0026 0B       		.uleb128 0xb
 3818 0027 49       		.uleb128 0x49
 3819 0028 13       		.uleb128 0x13
 3820 0029 00       		.byte	0
 3821 002a 00       		.byte	0
 3822 002b 04       		.uleb128 0x4
 3823 002c 24       		.uleb128 0x24
 3824 002d 00       		.byte	0
 3825 002e 0B       		.uleb128 0xb
 3826 002f 0B       		.uleb128 0xb
 3827 0030 3E       		.uleb128 0x3e
 3828 0031 0B       		.uleb128 0xb
 3829 0032 03       		.uleb128 0x3
 3830 0033 08       		.uleb128 0x8
 3831 0034 00       		.byte	0
 3832 0035 00       		.byte	0
 3833 0036 05       		.uleb128 0x5
 3834 0037 16       		.uleb128 0x16
 3835 0038 00       		.byte	0
 3836 0039 03       		.uleb128 0x3
 3837 003a 0E       		.uleb128 0xe
 3838 003b 3A       		.uleb128 0x3a
 3839 003c 0B       		.uleb128 0xb
 3840 003d 3B       		.uleb128 0x3b
 3841 003e 05       		.uleb128 0x5
 3842 003f 49       		.uleb128 0x49
 3843 0040 13       		.uleb128 0x13
 3844 0041 00       		.byte	0
 3845 0042 00       		.byte	0
 3846 0043 06       		.uleb128 0x6
 3847 0044 35       		.uleb128 0x35
 3848 0045 00       		.byte	0
 3849 0046 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 83


 3850 0047 13       		.uleb128 0x13
 3851 0048 00       		.byte	0
 3852 0049 00       		.byte	0
 3853 004a 07       		.uleb128 0x7
 3854 004b 01       		.uleb128 0x1
 3855 004c 01       		.byte	0x1
 3856 004d 49       		.uleb128 0x49
 3857 004e 13       		.uleb128 0x13
 3858 004f 01       		.uleb128 0x1
 3859 0050 13       		.uleb128 0x13
 3860 0051 00       		.byte	0
 3861 0052 00       		.byte	0
 3862 0053 08       		.uleb128 0x8
 3863 0054 21       		.uleb128 0x21
 3864 0055 00       		.byte	0
 3865 0056 49       		.uleb128 0x49
 3866 0057 13       		.uleb128 0x13
 3867 0058 2F       		.uleb128 0x2f
 3868 0059 0B       		.uleb128 0xb
 3869 005a 00       		.byte	0
 3870 005b 00       		.byte	0
 3871 005c 09       		.uleb128 0x9
 3872 005d 13       		.uleb128 0x13
 3873 005e 01       		.byte	0x1
 3874 005f 03       		.uleb128 0x3
 3875 0060 0E       		.uleb128 0xe
 3876 0061 0B       		.uleb128 0xb
 3877 0062 0B       		.uleb128 0xb
 3878 0063 3A       		.uleb128 0x3a
 3879 0064 0B       		.uleb128 0xb
 3880 0065 3B       		.uleb128 0x3b
 3881 0066 0B       		.uleb128 0xb
 3882 0067 01       		.uleb128 0x1
 3883 0068 13       		.uleb128 0x13
 3884 0069 00       		.byte	0
 3885 006a 00       		.byte	0
 3886 006b 0A       		.uleb128 0xa
 3887 006c 0D       		.uleb128 0xd
 3888 006d 00       		.byte	0
 3889 006e 03       		.uleb128 0x3
 3890 006f 0E       		.uleb128 0xe
 3891 0070 3A       		.uleb128 0x3a
 3892 0071 0B       		.uleb128 0xb
 3893 0072 3B       		.uleb128 0x3b
 3894 0073 0B       		.uleb128 0xb
 3895 0074 49       		.uleb128 0x49
 3896 0075 13       		.uleb128 0x13
 3897 0076 38       		.uleb128 0x38
 3898 0077 0B       		.uleb128 0xb
 3899 0078 00       		.byte	0
 3900 0079 00       		.byte	0
 3901 007a 0B       		.uleb128 0xb
 3902 007b 04       		.uleb128 0x4
 3903 007c 01       		.byte	0x1
 3904 007d 03       		.uleb128 0x3
 3905 007e 0E       		.uleb128 0xe
 3906 007f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 84


 3907 0080 0B       		.uleb128 0xb
 3908 0081 49       		.uleb128 0x49
 3909 0082 13       		.uleb128 0x13
 3910 0083 3A       		.uleb128 0x3a
 3911 0084 0B       		.uleb128 0xb
 3912 0085 3B       		.uleb128 0x3b
 3913 0086 0B       		.uleb128 0xb
 3914 0087 01       		.uleb128 0x1
 3915 0088 13       		.uleb128 0x13
 3916 0089 00       		.byte	0
 3917 008a 00       		.byte	0
 3918 008b 0C       		.uleb128 0xc
 3919 008c 28       		.uleb128 0x28
 3920 008d 00       		.byte	0
 3921 008e 03       		.uleb128 0x3
 3922 008f 08       		.uleb128 0x8
 3923 0090 1C       		.uleb128 0x1c
 3924 0091 0B       		.uleb128 0xb
 3925 0092 00       		.byte	0
 3926 0093 00       		.byte	0
 3927 0094 0D       		.uleb128 0xd
 3928 0095 28       		.uleb128 0x28
 3929 0096 00       		.byte	0
 3930 0097 03       		.uleb128 0x3
 3931 0098 0E       		.uleb128 0xe
 3932 0099 1C       		.uleb128 0x1c
 3933 009a 0B       		.uleb128 0xb
 3934 009b 00       		.byte	0
 3935 009c 00       		.byte	0
 3936 009d 0E       		.uleb128 0xe
 3937 009e 2E       		.uleb128 0x2e
 3938 009f 01       		.byte	0x1
 3939 00a0 3F       		.uleb128 0x3f
 3940 00a1 19       		.uleb128 0x19
 3941 00a2 03       		.uleb128 0x3
 3942 00a3 0E       		.uleb128 0xe
 3943 00a4 3A       		.uleb128 0x3a
 3944 00a5 0B       		.uleb128 0xb
 3945 00a6 3B       		.uleb128 0x3b
 3946 00a7 0B       		.uleb128 0xb
 3947 00a8 27       		.uleb128 0x27
 3948 00a9 19       		.uleb128 0x19
 3949 00aa 11       		.uleb128 0x11
 3950 00ab 01       		.uleb128 0x1
 3951 00ac 12       		.uleb128 0x12
 3952 00ad 06       		.uleb128 0x6
 3953 00ae 40       		.uleb128 0x40
 3954 00af 18       		.uleb128 0x18
 3955 00b0 9642     		.uleb128 0x2116
 3956 00b2 19       		.uleb128 0x19
 3957 00b3 01       		.uleb128 0x1
 3958 00b4 13       		.uleb128 0x13
 3959 00b5 00       		.byte	0
 3960 00b6 00       		.byte	0
 3961 00b7 0F       		.uleb128 0xf
 3962 00b8 0B       		.uleb128 0xb
 3963 00b9 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 85


 3964 00ba 11       		.uleb128 0x11
 3965 00bb 01       		.uleb128 0x1
 3966 00bc 12       		.uleb128 0x12
 3967 00bd 06       		.uleb128 0x6
 3968 00be 00       		.byte	0
 3969 00bf 00       		.byte	0
 3970 00c0 10       		.uleb128 0x10
 3971 00c1 34       		.uleb128 0x34
 3972 00c2 00       		.byte	0
 3973 00c3 03       		.uleb128 0x3
 3974 00c4 0E       		.uleb128 0xe
 3975 00c5 3A       		.uleb128 0x3a
 3976 00c6 0B       		.uleb128 0xb
 3977 00c7 3B       		.uleb128 0x3b
 3978 00c8 0B       		.uleb128 0xb
 3979 00c9 49       		.uleb128 0x49
 3980 00ca 13       		.uleb128 0x13
 3981 00cb 02       		.uleb128 0x2
 3982 00cc 18       		.uleb128 0x18
 3983 00cd 00       		.byte	0
 3984 00ce 00       		.byte	0
 3985 00cf 11       		.uleb128 0x11
 3986 00d0 2E       		.uleb128 0x2e
 3987 00d1 00       		.byte	0
 3988 00d2 3F       		.uleb128 0x3f
 3989 00d3 19       		.uleb128 0x19
 3990 00d4 03       		.uleb128 0x3
 3991 00d5 0E       		.uleb128 0xe
 3992 00d6 3A       		.uleb128 0x3a
 3993 00d7 0B       		.uleb128 0xb
 3994 00d8 3B       		.uleb128 0x3b
 3995 00d9 0B       		.uleb128 0xb
 3996 00da 27       		.uleb128 0x27
 3997 00db 19       		.uleb128 0x19
 3998 00dc 11       		.uleb128 0x11
 3999 00dd 01       		.uleb128 0x1
 4000 00de 12       		.uleb128 0x12
 4001 00df 06       		.uleb128 0x6
 4002 00e0 40       		.uleb128 0x40
 4003 00e1 18       		.uleb128 0x18
 4004 00e2 9742     		.uleb128 0x2117
 4005 00e4 19       		.uleb128 0x19
 4006 00e5 00       		.byte	0
 4007 00e6 00       		.byte	0
 4008 00e7 12       		.uleb128 0x12
 4009 00e8 2E       		.uleb128 0x2e
 4010 00e9 00       		.byte	0
 4011 00ea 3F       		.uleb128 0x3f
 4012 00eb 19       		.uleb128 0x19
 4013 00ec 03       		.uleb128 0x3
 4014 00ed 0E       		.uleb128 0xe
 4015 00ee 3A       		.uleb128 0x3a
 4016 00ef 0B       		.uleb128 0xb
 4017 00f0 3B       		.uleb128 0x3b
 4018 00f1 0B       		.uleb128 0xb
 4019 00f2 27       		.uleb128 0x27
 4020 00f3 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 86


 4021 00f4 11       		.uleb128 0x11
 4022 00f5 01       		.uleb128 0x1
 4023 00f6 12       		.uleb128 0x12
 4024 00f7 06       		.uleb128 0x6
 4025 00f8 40       		.uleb128 0x40
 4026 00f9 18       		.uleb128 0x18
 4027 00fa 9642     		.uleb128 0x2116
 4028 00fc 19       		.uleb128 0x19
 4029 00fd 00       		.byte	0
 4030 00fe 00       		.byte	0
 4031 00ff 13       		.uleb128 0x13
 4032 0100 2E       		.uleb128 0x2e
 4033 0101 00       		.byte	0
 4034 0102 3F       		.uleb128 0x3f
 4035 0103 19       		.uleb128 0x19
 4036 0104 03       		.uleb128 0x3
 4037 0105 0E       		.uleb128 0xe
 4038 0106 3A       		.uleb128 0x3a
 4039 0107 0B       		.uleb128 0xb
 4040 0108 3B       		.uleb128 0x3b
 4041 0109 0B       		.uleb128 0xb
 4042 010a 49       		.uleb128 0x49
 4043 010b 13       		.uleb128 0x13
 4044 010c 11       		.uleb128 0x11
 4045 010d 01       		.uleb128 0x1
 4046 010e 12       		.uleb128 0x12
 4047 010f 06       		.uleb128 0x6
 4048 0110 40       		.uleb128 0x40
 4049 0111 18       		.uleb128 0x18
 4050 0112 9642     		.uleb128 0x2116
 4051 0114 19       		.uleb128 0x19
 4052 0115 00       		.byte	0
 4053 0116 00       		.byte	0
 4054 0117 14       		.uleb128 0x14
 4055 0118 2E       		.uleb128 0x2e
 4056 0119 01       		.byte	0x1
 4057 011a 3F       		.uleb128 0x3f
 4058 011b 19       		.uleb128 0x19
 4059 011c 03       		.uleb128 0x3
 4060 011d 0E       		.uleb128 0xe
 4061 011e 3A       		.uleb128 0x3a
 4062 011f 0B       		.uleb128 0xb
 4063 0120 3B       		.uleb128 0x3b
 4064 0121 0B       		.uleb128 0xb
 4065 0122 27       		.uleb128 0x27
 4066 0123 19       		.uleb128 0x19
 4067 0124 49       		.uleb128 0x49
 4068 0125 13       		.uleb128 0x13
 4069 0126 11       		.uleb128 0x11
 4070 0127 01       		.uleb128 0x1
 4071 0128 12       		.uleb128 0x12
 4072 0129 06       		.uleb128 0x6
 4073 012a 40       		.uleb128 0x40
 4074 012b 18       		.uleb128 0x18
 4075 012c 9642     		.uleb128 0x2116
 4076 012e 19       		.uleb128 0x19
 4077 012f 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 87


 4078 0130 13       		.uleb128 0x13
 4079 0131 00       		.byte	0
 4080 0132 00       		.byte	0
 4081 0133 15       		.uleb128 0x15
 4082 0134 05       		.uleb128 0x5
 4083 0135 00       		.byte	0
 4084 0136 03       		.uleb128 0x3
 4085 0137 0E       		.uleb128 0xe
 4086 0138 3A       		.uleb128 0x3a
 4087 0139 0B       		.uleb128 0xb
 4088 013a 3B       		.uleb128 0x3b
 4089 013b 0B       		.uleb128 0xb
 4090 013c 49       		.uleb128 0x49
 4091 013d 13       		.uleb128 0x13
 4092 013e 02       		.uleb128 0x2
 4093 013f 18       		.uleb128 0x18
 4094 0140 00       		.byte	0
 4095 0141 00       		.byte	0
 4096 0142 16       		.uleb128 0x16
 4097 0143 34       		.uleb128 0x34
 4098 0144 00       		.byte	0
 4099 0145 03       		.uleb128 0x3
 4100 0146 08       		.uleb128 0x8
 4101 0147 3A       		.uleb128 0x3a
 4102 0148 0B       		.uleb128 0xb
 4103 0149 3B       		.uleb128 0x3b
 4104 014a 0B       		.uleb128 0xb
 4105 014b 49       		.uleb128 0x49
 4106 014c 13       		.uleb128 0x13
 4107 014d 02       		.uleb128 0x2
 4108 014e 18       		.uleb128 0x18
 4109 014f 00       		.byte	0
 4110 0150 00       		.byte	0
 4111 0151 17       		.uleb128 0x17
 4112 0152 2E       		.uleb128 0x2e
 4113 0153 00       		.byte	0
 4114 0154 3F       		.uleb128 0x3f
 4115 0155 19       		.uleb128 0x19
 4116 0156 03       		.uleb128 0x3
 4117 0157 0E       		.uleb128 0xe
 4118 0158 3A       		.uleb128 0x3a
 4119 0159 0B       		.uleb128 0xb
 4120 015a 3B       		.uleb128 0x3b
 4121 015b 0B       		.uleb128 0xb
 4122 015c 11       		.uleb128 0x11
 4123 015d 01       		.uleb128 0x1
 4124 015e 12       		.uleb128 0x12
 4125 015f 06       		.uleb128 0x6
 4126 0160 40       		.uleb128 0x40
 4127 0161 18       		.uleb128 0x18
 4128 0162 9742     		.uleb128 0x2117
 4129 0164 19       		.uleb128 0x19
 4130 0165 00       		.byte	0
 4131 0166 00       		.byte	0
 4132 0167 18       		.uleb128 0x18
 4133 0168 2E       		.uleb128 0x2e
 4134 0169 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 88


 4135 016a 3F       		.uleb128 0x3f
 4136 016b 19       		.uleb128 0x19
 4137 016c 03       		.uleb128 0x3
 4138 016d 0E       		.uleb128 0xe
 4139 016e 3A       		.uleb128 0x3a
 4140 016f 0B       		.uleb128 0xb
 4141 0170 3B       		.uleb128 0x3b
 4142 0171 0B       		.uleb128 0xb
 4143 0172 49       		.uleb128 0x49
 4144 0173 13       		.uleb128 0x13
 4145 0174 11       		.uleb128 0x11
 4146 0175 01       		.uleb128 0x1
 4147 0176 12       		.uleb128 0x12
 4148 0177 06       		.uleb128 0x6
 4149 0178 40       		.uleb128 0x40
 4150 0179 18       		.uleb128 0x18
 4151 017a 9742     		.uleb128 0x2117
 4152 017c 19       		.uleb128 0x19
 4153 017d 00       		.byte	0
 4154 017e 00       		.byte	0
 4155 017f 19       		.uleb128 0x19
 4156 0180 2E       		.uleb128 0x2e
 4157 0181 00       		.byte	0
 4158 0182 3F       		.uleb128 0x3f
 4159 0183 19       		.uleb128 0x19
 4160 0184 03       		.uleb128 0x3
 4161 0185 0E       		.uleb128 0xe
 4162 0186 3A       		.uleb128 0x3a
 4163 0187 0B       		.uleb128 0xb
 4164 0188 3B       		.uleb128 0x3b
 4165 0189 05       		.uleb128 0x5
 4166 018a 49       		.uleb128 0x49
 4167 018b 13       		.uleb128 0x13
 4168 018c 11       		.uleb128 0x11
 4169 018d 01       		.uleb128 0x1
 4170 018e 12       		.uleb128 0x12
 4171 018f 06       		.uleb128 0x6
 4172 0190 40       		.uleb128 0x40
 4173 0191 18       		.uleb128 0x18
 4174 0192 9742     		.uleb128 0x2117
 4175 0194 19       		.uleb128 0x19
 4176 0195 00       		.byte	0
 4177 0196 00       		.byte	0
 4178 0197 1A       		.uleb128 0x1a
 4179 0198 2E       		.uleb128 0x2e
 4180 0199 01       		.byte	0x1
 4181 019a 3F       		.uleb128 0x3f
 4182 019b 19       		.uleb128 0x19
 4183 019c 03       		.uleb128 0x3
 4184 019d 0E       		.uleb128 0xe
 4185 019e 3A       		.uleb128 0x3a
 4186 019f 0B       		.uleb128 0xb
 4187 01a0 3B       		.uleb128 0x3b
 4188 01a1 05       		.uleb128 0x5
 4189 01a2 49       		.uleb128 0x49
 4190 01a3 13       		.uleb128 0x13
 4191 01a4 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 89


 4192 01a5 01       		.uleb128 0x1
 4193 01a6 12       		.uleb128 0x12
 4194 01a7 06       		.uleb128 0x6
 4195 01a8 40       		.uleb128 0x40
 4196 01a9 18       		.uleb128 0x18
 4197 01aa 9642     		.uleb128 0x2116
 4198 01ac 19       		.uleb128 0x19
 4199 01ad 01       		.uleb128 0x1
 4200 01ae 13       		.uleb128 0x13
 4201 01af 00       		.byte	0
 4202 01b0 00       		.byte	0
 4203 01b1 1B       		.uleb128 0x1b
 4204 01b2 34       		.uleb128 0x34
 4205 01b3 00       		.byte	0
 4206 01b4 03       		.uleb128 0x3
 4207 01b5 0E       		.uleb128 0xe
 4208 01b6 3A       		.uleb128 0x3a
 4209 01b7 0B       		.uleb128 0xb
 4210 01b8 3B       		.uleb128 0x3b
 4211 01b9 05       		.uleb128 0x5
 4212 01ba 49       		.uleb128 0x49
 4213 01bb 13       		.uleb128 0x13
 4214 01bc 02       		.uleb128 0x2
 4215 01bd 18       		.uleb128 0x18
 4216 01be 00       		.byte	0
 4217 01bf 00       		.byte	0
 4218 01c0 1C       		.uleb128 0x1c
 4219 01c1 2E       		.uleb128 0x2e
 4220 01c2 00       		.byte	0
 4221 01c3 3F       		.uleb128 0x3f
 4222 01c4 19       		.uleb128 0x19
 4223 01c5 03       		.uleb128 0x3
 4224 01c6 0E       		.uleb128 0xe
 4225 01c7 3A       		.uleb128 0x3a
 4226 01c8 0B       		.uleb128 0xb
 4227 01c9 3B       		.uleb128 0x3b
 4228 01ca 05       		.uleb128 0x5
 4229 01cb 11       		.uleb128 0x11
 4230 01cc 01       		.uleb128 0x1
 4231 01cd 12       		.uleb128 0x12
 4232 01ce 06       		.uleb128 0x6
 4233 01cf 40       		.uleb128 0x40
 4234 01d0 18       		.uleb128 0x18
 4235 01d1 9742     		.uleb128 0x2117
 4236 01d3 19       		.uleb128 0x19
 4237 01d4 00       		.byte	0
 4238 01d5 00       		.byte	0
 4239 01d6 1D       		.uleb128 0x1d
 4240 01d7 2E       		.uleb128 0x2e
 4241 01d8 01       		.byte	0x1
 4242 01d9 3F       		.uleb128 0x3f
 4243 01da 19       		.uleb128 0x19
 4244 01db 03       		.uleb128 0x3
 4245 01dc 0E       		.uleb128 0xe
 4246 01dd 3A       		.uleb128 0x3a
 4247 01de 0B       		.uleb128 0xb
 4248 01df 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 90


 4249 01e0 05       		.uleb128 0x5
 4250 01e1 49       		.uleb128 0x49
 4251 01e2 13       		.uleb128 0x13
 4252 01e3 11       		.uleb128 0x11
 4253 01e4 01       		.uleb128 0x1
 4254 01e5 12       		.uleb128 0x12
 4255 01e6 06       		.uleb128 0x6
 4256 01e7 40       		.uleb128 0x40
 4257 01e8 18       		.uleb128 0x18
 4258 01e9 9742     		.uleb128 0x2117
 4259 01eb 19       		.uleb128 0x19
 4260 01ec 01       		.uleb128 0x1
 4261 01ed 13       		.uleb128 0x13
 4262 01ee 00       		.byte	0
 4263 01ef 00       		.byte	0
 4264 01f0 1E       		.uleb128 0x1e
 4265 01f1 2E       		.uleb128 0x2e
 4266 01f2 01       		.byte	0x1
 4267 01f3 3F       		.uleb128 0x3f
 4268 01f4 19       		.uleb128 0x19
 4269 01f5 03       		.uleb128 0x3
 4270 01f6 0E       		.uleb128 0xe
 4271 01f7 3A       		.uleb128 0x3a
 4272 01f8 0B       		.uleb128 0xb
 4273 01f9 3B       		.uleb128 0x3b
 4274 01fa 05       		.uleb128 0x5
 4275 01fb 11       		.uleb128 0x11
 4276 01fc 01       		.uleb128 0x1
 4277 01fd 12       		.uleb128 0x12
 4278 01fe 06       		.uleb128 0x6
 4279 01ff 40       		.uleb128 0x40
 4280 0200 18       		.uleb128 0x18
 4281 0201 9642     		.uleb128 0x2116
 4282 0203 19       		.uleb128 0x19
 4283 0204 01       		.uleb128 0x1
 4284 0205 13       		.uleb128 0x13
 4285 0206 00       		.byte	0
 4286 0207 00       		.byte	0
 4287 0208 1F       		.uleb128 0x1f
 4288 0209 2E       		.uleb128 0x2e
 4289 020a 00       		.byte	0
 4290 020b 3F       		.uleb128 0x3f
 4291 020c 19       		.uleb128 0x19
 4292 020d 03       		.uleb128 0x3
 4293 020e 0E       		.uleb128 0xe
 4294 020f 3A       		.uleb128 0x3a
 4295 0210 0B       		.uleb128 0xb
 4296 0211 3B       		.uleb128 0x3b
 4297 0212 05       		.uleb128 0x5
 4298 0213 11       		.uleb128 0x11
 4299 0214 01       		.uleb128 0x1
 4300 0215 12       		.uleb128 0x12
 4301 0216 06       		.uleb128 0x6
 4302 0217 40       		.uleb128 0x40
 4303 0218 18       		.uleb128 0x18
 4304 0219 9642     		.uleb128 0x2116
 4305 021b 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 91


 4306 021c 00       		.byte	0
 4307 021d 00       		.byte	0
 4308 021e 20       		.uleb128 0x20
 4309 021f 34       		.uleb128 0x34
 4310 0220 00       		.byte	0
 4311 0221 03       		.uleb128 0x3
 4312 0222 0E       		.uleb128 0xe
 4313 0223 3A       		.uleb128 0x3a
 4314 0224 0B       		.uleb128 0xb
 4315 0225 3B       		.uleb128 0x3b
 4316 0226 05       		.uleb128 0x5
 4317 0227 49       		.uleb128 0x49
 4318 0228 13       		.uleb128 0x13
 4319 0229 3F       		.uleb128 0x3f
 4320 022a 19       		.uleb128 0x19
 4321 022b 3C       		.uleb128 0x3c
 4322 022c 19       		.uleb128 0x19
 4323 022d 00       		.byte	0
 4324 022e 00       		.byte	0
 4325 022f 21       		.uleb128 0x21
 4326 0230 34       		.uleb128 0x34
 4327 0231 00       		.byte	0
 4328 0232 03       		.uleb128 0x3
 4329 0233 08       		.uleb128 0x8
 4330 0234 3A       		.uleb128 0x3a
 4331 0235 0B       		.uleb128 0xb
 4332 0236 3B       		.uleb128 0x3b
 4333 0237 0B       		.uleb128 0xb
 4334 0238 49       		.uleb128 0x49
 4335 0239 13       		.uleb128 0x13
 4336 023a 3F       		.uleb128 0x3f
 4337 023b 19       		.uleb128 0x19
 4338 023c 02       		.uleb128 0x2
 4339 023d 18       		.uleb128 0x18
 4340 023e 00       		.byte	0
 4341 023f 00       		.byte	0
 4342 0240 22       		.uleb128 0x22
 4343 0241 34       		.uleb128 0x34
 4344 0242 00       		.byte	0
 4345 0243 03       		.uleb128 0x3
 4346 0244 0E       		.uleb128 0xe
 4347 0245 3A       		.uleb128 0x3a
 4348 0246 0B       		.uleb128 0xb
 4349 0247 3B       		.uleb128 0x3b
 4350 0248 0B       		.uleb128 0xb
 4351 0249 49       		.uleb128 0x49
 4352 024a 13       		.uleb128 0x13
 4353 024b 3F       		.uleb128 0x3f
 4354 024c 19       		.uleb128 0x19
 4355 024d 02       		.uleb128 0x2
 4356 024e 18       		.uleb128 0x18
 4357 024f 00       		.byte	0
 4358 0250 00       		.byte	0
 4359 0251 23       		.uleb128 0x23
 4360 0252 34       		.uleb128 0x34
 4361 0253 00       		.byte	0
 4362 0254 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 92


 4363 0255 08       		.uleb128 0x8
 4364 0256 3A       		.uleb128 0x3a
 4365 0257 0B       		.uleb128 0xb
 4366 0258 3B       		.uleb128 0x3b
 4367 0259 0B       		.uleb128 0xb
 4368 025a 49       		.uleb128 0x49
 4369 025b 13       		.uleb128 0x13
 4370 025c 3F       		.uleb128 0x3f
 4371 025d 19       		.uleb128 0x19
 4372 025e 3C       		.uleb128 0x3c
 4373 025f 19       		.uleb128 0x19
 4374 0260 00       		.byte	0
 4375 0261 00       		.byte	0
 4376 0262 24       		.uleb128 0x24
 4377 0263 34       		.uleb128 0x34
 4378 0264 00       		.byte	0
 4379 0265 03       		.uleb128 0x3
 4380 0266 0E       		.uleb128 0xe
 4381 0267 3A       		.uleb128 0x3a
 4382 0268 0B       		.uleb128 0xb
 4383 0269 3B       		.uleb128 0x3b
 4384 026a 0B       		.uleb128 0xb
 4385 026b 49       		.uleb128 0x49
 4386 026c 13       		.uleb128 0x13
 4387 026d 3F       		.uleb128 0x3f
 4388 026e 19       		.uleb128 0x19
 4389 026f 3C       		.uleb128 0x3c
 4390 0270 19       		.uleb128 0x19
 4391 0271 00       		.byte	0
 4392 0272 00       		.byte	0
 4393 0273 25       		.uleb128 0x25
 4394 0274 0F       		.uleb128 0xf
 4395 0275 00       		.byte	0
 4396 0276 0B       		.uleb128 0xb
 4397 0277 0B       		.uleb128 0xb
 4398 0278 49       		.uleb128 0x49
 4399 0279 13       		.uleb128 0x13
 4400 027a 00       		.byte	0
 4401 027b 00       		.byte	0
 4402 027c 26       		.uleb128 0x26
 4403 027d 34       		.uleb128 0x34
 4404 027e 00       		.byte	0
 4405 027f 03       		.uleb128 0x3
 4406 0280 0E       		.uleb128 0xe
 4407 0281 3A       		.uleb128 0x3a
 4408 0282 0B       		.uleb128 0xb
 4409 0283 3B       		.uleb128 0x3b
 4410 0284 05       		.uleb128 0x5
 4411 0285 49       		.uleb128 0x49
 4412 0286 13       		.uleb128 0x13
 4413 0287 3F       		.uleb128 0x3f
 4414 0288 19       		.uleb128 0x19
 4415 0289 02       		.uleb128 0x2
 4416 028a 18       		.uleb128 0x18
 4417 028b 00       		.byte	0
 4418 028c 00       		.byte	0
 4419 028d 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 93


 4420              		.section	.debug_aranges,"",%progbits
 4421 0000 94000000 		.4byte	0x94
 4422 0004 0200     		.2byte	0x2
 4423 0006 00000000 		.4byte	.Ldebug_info0
 4424 000a 04       		.byte	0x4
 4425 000b 00       		.byte	0
 4426 000c 0000     		.2byte	0
 4427 000e 0000     		.2byte	0
 4428 0010 00000000 		.4byte	.LFB64
 4429 0014 EC000000 		.4byte	.LFE64-.LFB64
 4430 0018 00000000 		.4byte	.LFB65
 4431 001c 18000000 		.4byte	.LFE65-.LFB65
 4432 0020 00000000 		.4byte	.LFB66
 4433 0024 18000000 		.4byte	.LFE66-.LFB66
 4434 0028 00000000 		.4byte	.LFB67
 4435 002c 18000000 		.4byte	.LFE67-.LFB67
 4436 0030 00000000 		.4byte	.LFB68
 4437 0034 18000000 		.4byte	.LFE68-.LFB68
 4438 0038 00000000 		.4byte	.LFB69
 4439 003c 68000000 		.4byte	.LFE69-.LFB69
 4440 0040 00000000 		.4byte	.LFB70
 4441 0044 24010000 		.4byte	.LFE70-.LFB70
 4442 0048 00000000 		.4byte	.LFB71
 4443 004c 54000000 		.4byte	.LFE71-.LFB71
 4444 0050 00000000 		.4byte	.LFB72
 4445 0054 34000000 		.4byte	.LFE72-.LFB72
 4446 0058 00000000 		.4byte	.LFB73
 4447 005c 84000000 		.4byte	.LFE73-.LFB73
 4448 0060 00000000 		.4byte	.LFB74
 4449 0064 7C000000 		.4byte	.LFE74-.LFB74
 4450 0068 00000000 		.4byte	.LFB75
 4451 006c C0050000 		.4byte	.LFE75-.LFB75
 4452 0070 00000000 		.4byte	.LFB76
 4453 0074 68000000 		.4byte	.LFE76-.LFB76
 4454 0078 00000000 		.4byte	.LFB77
 4455 007c 6C000000 		.4byte	.LFE77-.LFB77
 4456 0080 00000000 		.4byte	.LFB78
 4457 0084 3C010000 		.4byte	.LFE78-.LFB78
 4458 0088 00000000 		.4byte	.LFB79
 4459 008c BC000000 		.4byte	.LFE79-.LFB79
 4460 0090 00000000 		.4byte	0
 4461 0094 00000000 		.4byte	0
 4462              		.section	.debug_ranges,"",%progbits
 4463              	.Ldebug_ranges0:
 4464 0000 00000000 		.4byte	.LFB64
 4465 0004 EC000000 		.4byte	.LFE64
 4466 0008 00000000 		.4byte	.LFB65
 4467 000c 18000000 		.4byte	.LFE65
 4468 0010 00000000 		.4byte	.LFB66
 4469 0014 18000000 		.4byte	.LFE66
 4470 0018 00000000 		.4byte	.LFB67
 4471 001c 18000000 		.4byte	.LFE67
 4472 0020 00000000 		.4byte	.LFB68
 4473 0024 18000000 		.4byte	.LFE68
 4474 0028 00000000 		.4byte	.LFB69
 4475 002c 68000000 		.4byte	.LFE69
 4476 0030 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 94


 4477 0034 24010000 		.4byte	.LFE70
 4478 0038 00000000 		.4byte	.LFB71
 4479 003c 54000000 		.4byte	.LFE71
 4480 0040 00000000 		.4byte	.LFB72
 4481 0044 34000000 		.4byte	.LFE72
 4482 0048 00000000 		.4byte	.LFB73
 4483 004c 84000000 		.4byte	.LFE73
 4484 0050 00000000 		.4byte	.LFB74
 4485 0054 7C000000 		.4byte	.LFE74
 4486 0058 00000000 		.4byte	.LFB75
 4487 005c C0050000 		.4byte	.LFE75
 4488 0060 00000000 		.4byte	.LFB76
 4489 0064 68000000 		.4byte	.LFE76
 4490 0068 00000000 		.4byte	.LFB77
 4491 006c 6C000000 		.4byte	.LFE77
 4492 0070 00000000 		.4byte	.LFB78
 4493 0074 3C010000 		.4byte	.LFE78
 4494 0078 00000000 		.4byte	.LFB79
 4495 007c BC000000 		.4byte	.LFE79
 4496 0080 00000000 		.4byte	0
 4497 0084 00000000 		.4byte	0
 4498              		.section	.debug_line,"",%progbits
 4499              	.Ldebug_line0:
 4500 0000 5B040000 		.section	.debug_str,"MS",%progbits,1
 4500      02007001 
 4500      00000201 
 4500      FB0E0D00 
 4500      01010101 
 4501              	.LASF135:
 4502 0000 746F7461 		.ascii	"totalDistance\000"
 4502      6C446973 
 4502      74616E63 
 4502      6500
 4503              	.LASF41:
 4504 000e 4F726965 		.ascii	"OrientationState\000"
 4504      6E746174 
 4504      696F6E53 
 4504      74617465 
 4504      00
 4505              	.LASF36:
 4506 001f 67325F73 		.ascii	"g2_speed\000"
 4506      70656564 
 4506      00
 4507              	.LASF94:
 4508 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4508      61726455 
 4508      6E74696C 
 4508      54617267 
 4508      65745374 
 4509              	.LASF57:
 4510 0046 526F626F 		.ascii	"RobotMovement\000"
 4510      744D6F76 
 4510      656D656E 
 4510      7400
 4511              	.LASF49:
 4512 0054 536B6970 		.ascii	"Skip\000"
 4512      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 95


 4513              	.LASF103:
 4514 0059 6C696E65 		.ascii	"lineCount\000"
 4514      436F756E 
 4514      7400
 4515              	.LASF110:
 4516 0063 74735F73 		.ascii	"ts_speed\000"
 4516      70656564 
 4516      00
 4517              	.LASF0:
 4518 006c 7369676E 		.ascii	"signed char\000"
 4518      65642063 
 4518      68617200 
 4519              	.LASF155:
 4520 0078 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4520      6F63756D 
 4520      656E7473 
 4520      5C476974 
 4520      4875625C 
 4521 00a7 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4521      635F636F 
 4521      64655F62 
 4521      6173655C 
 4521      43533330 
 4522              	.LASF70:
 4523 00c9 53345F44 		.ascii	"S4_DETECTED\000"
 4523      45544543 
 4523      54454400 
 4524              	.LASF52:
 4525 00d5 64697265 		.ascii	"direction\000"
 4525      6374696F 
 4525      6E00
 4526              	.LASF138:
 4527 00df 74696D65 		.ascii	"timerInt\000"
 4527      72496E74 
 4527      00
 4528              	.LASF153:
 4529 00e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4529      43313120 
 4529      352E342E 
 4529      31203230 
 4529      31363036 
 4530 011b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4530      20726576 
 4530      6973696F 
 4530      6E203233 
 4530      37373135 
 4531 014e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4531      66756E63 
 4531      74696F6E 
 4531      2D736563 
 4531      74696F6E 
 4532              	.LASF82:
 4533 0176 626C6F63 		.ascii	"blocksToTarget\000"
 4533      6B73546F 
 4533      54617267 
 4533      657400
 4534              	.LASF29:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 96


 4535 0185 67305F64 		.ascii	"g0_direction\000"
 4535      69726563 
 4535      74696F6E 
 4535      00
 4536              	.LASF123:
 4537 0192 656E7472 		.ascii	"entry\000"
 4537      7900
 4538              	.LASF7:
 4539 0198 6C6F6E67 		.ascii	"long long unsigned int\000"
 4539      206C6F6E 
 4539      6720756E 
 4539      7369676E 
 4539      65642069 
 4540              	.LASF56:
 4541 01af 65787065 		.ascii	"expectedOrientation\000"
 4541      63746564 
 4541      4F726965 
 4541      6E746174 
 4541      696F6E00 
 4542              	.LASF46:
 4543 01c3 75547572 		.ascii	"uTurn\000"
 4543      6E00
 4544              	.LASF26:
 4545 01c9 67305F78 		.ascii	"g0_xpos\000"
 4545      706F7300 
 4546              	.LASF140:
 4547 01d1 73746F70 		.ascii	"stopBuffer\000"
 4547      42756666 
 4547      657200
 4548              	.LASF104:
 4549 01dc 6F6E4C69 		.ascii	"onLineFlag\000"
 4549      6E65466C 
 4549      616700
 4550              	.LASF55:
 4551 01e7 64697374 		.ascii	"distanceToTarget\000"
 4551      616E6365 
 4551      546F5461 
 4551      72676574 
 4551      00
 4552              	.LASF48:
 4553 01f8 53746F70 		.ascii	"StopAtTarget\000"
 4553      41745461 
 4553      72676574 
 4553      00
 4554              	.LASF152:
 4555 0205 66697273 		.ascii	"firstTurnIteration\000"
 4555      74547572 
 4555      6E497465 
 4555      72617469 
 4555      6F6E00
 4556              	.LASF128:
 4557 0218 70726576 		.ascii	"previousDirection\000"
 4557      696F7573 
 4557      44697265 
 4557      6374696F 
 4557      6E00
 4558              	.LASF112:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 97


 4559 022a 666C6167 		.ascii	"flag_ts_enc\000"
 4559      5F74735F 
 4559      656E6300 
 4560              	.LASF69:
 4561 0236 53335F44 		.ascii	"S3_DETECTED\000"
 4561      45544543 
 4561      54454400 
 4562              	.LASF118:
 4563 0242 666C6167 		.ascii	"flag_KB_string\000"
 4563      5F4B425F 
 4563      73747269 
 4563      6E6700
 4564              	.LASF71:
 4565 0251 53355F44 		.ascii	"S5_DETECTED\000"
 4565      45544543 
 4565      54454400 
 4566              	.LASF98:
 4567 025d 72696768 		.ascii	"rightStatusFlag\000"
 4567      74537461 
 4567      74757346 
 4567      6C616700 
 4568              	.LASF51:
 4569 026d 496E7374 		.ascii	"Instruction\000"
 4569      72756374 
 4569      696F6E00 
 4570              	.LASF148:
 4571 0279 63757272 		.ascii	"currentCol\000"
 4571      656E7443 
 4571      6F6C00
 4572              	.LASF63:
 4573 0284 53746F70 		.ascii	"Stop\000"
 4573      00
 4574              	.LASF4:
 4575 0289 6C6F6E67 		.ascii	"long int\000"
 4575      20696E74 
 4575      00
 4576              	.LASF107:
 4577 0292 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4577      52784275 
 4577      66666572 
 4577      00
 4578              	.LASF88:
 4579 029f 636F756E 		.ascii	"count2\000"
 4579      743200
 4580              	.LASF91:
 4581 02a6 696E7374 		.ascii	"instructionIndex\000"
 4581      72756374 
 4581      696F6E49 
 4581      6E646578 
 4581      00
 4582              	.LASF47:
 4583 02b7 466F7277 		.ascii	"ForwardUntilTarget\000"
 4583      61726455 
 4583      6E74696C 
 4583      54617267 
 4583      657400
 4584              	.LASF67:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 98


 4585 02ca 4261636B 		.ascii	"Backward\000"
 4585      77617264 
 4585      00
 4586              	.LASF14:
 4587 02d3 75696E74 		.ascii	"uint8\000"
 4587      3800
 4588              	.LASF6:
 4589 02d9 6C6F6E67 		.ascii	"long long int\000"
 4589      206C6F6E 
 4589      6720696E 
 4589      7400
 4590              	.LASF20:
 4591 02e7 646F7562 		.ascii	"double\000"
 4591      6C6500
 4592              	.LASF100:
 4593 02ee 63757272 		.ascii	"currentIgnoreL\000"
 4593      656E7449 
 4593      676E6F72 
 4593      654C00
 4594              	.LASF119:
 4595 02fd 64617461 		.ascii	"dataready_flag\000"
 4595      72656164 
 4595      795F666C 
 4595      616700
 4596              	.LASF74:
 4597 030c 6D61696E 		.ascii	"main\000"
 4597      00
 4598              	.LASF101:
 4599 0311 63757272 		.ascii	"currentIgnoreR\000"
 4599      656E7449 
 4599      676E6F72 
 4599      655200
 4600              	.LASF62:
 4601 0320 41646A75 		.ascii	"AdjustToTheRight\000"
 4601      7374546F 
 4601      54686552 
 4601      69676874 
 4601      00
 4602              	.LASF116:
 4603 0331 666C6167 		.ascii	"flag_rx\000"
 4603      5F727800 
 4604              	.LASF16:
 4605 0339 75696E74 		.ascii	"uint32\000"
 4605      333200
 4606              	.LASF86:
 4607 0340 6E657874 		.ascii	"nextInstruction\000"
 4607      496E7374 
 4607      72756374 
 4607      696F6E00 
 4608              	.LASF157:
 4609 0350 636F756E 		.ascii	"count\000"
 4609      7400
 4610              	.LASF122:
 4611 0356 6C696E65 		.ascii	"line\000"
 4611      00
 4612              	.LASF37:
 4613 035b 67325F64 		.ascii	"g2_direction\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 99


 4613      69726563 
 4613      74696F6E 
 4613      00
 4614              	.LASF137:
 4615 0368 71756164 		.ascii	"quadDec2Count\000"
 4615      44656332 
 4615      436F756E 
 4615      7400
 4616              	.LASF59:
 4617 0376 5475726E 		.ascii	"TurnRight\000"
 4617      52696768 
 4617      7400
 4618              	.LASF66:
 4619 0380 466F7277 		.ascii	"ForwardAfterTurn\000"
 4619      61726441 
 4619      66746572 
 4619      5475726E 
 4619      00
 4620              	.LASF50:
 4621 0391 64617461 		.ascii	"data_main\000"
 4621      5F6D6169 
 4621      6E00
 4622              	.LASF80:
 4623 039b 626C6F63 		.ascii	"blocksize\000"
 4623      6B73697A 
 4623      6500
 4624              	.LASF108:
 4625 03a5 74735F65 		.ascii	"ts_enc\000"
 4625      6E6300
 4626              	.LASF5:
 4627 03ac 6C6F6E67 		.ascii	"long unsigned int\000"
 4627      20756E73 
 4627      69676E65 
 4627      6420696E 
 4627      7400
 4628              	.LASF106:
 4629 03be 746F6F4C 		.ascii	"tooLateFlag\000"
 4629      61746546 
 4629      6C616700 
 4630              	.LASF144:
 4631 03ca 626C6F63 		.ascii	"blockSizeTotal\000"
 4631      6B53697A 
 4631      65546F74 
 4631      616C00
 4632              	.LASF158:
 4633 03d9 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4633      7465436C 
 4633      6F636B77 
 4633      69736531 
 4633      38304465 
 4634              	.LASF65:
 4635 03f3 77616974 		.ascii	"waitForTurn\000"
 4635      466F7254 
 4635      75726E00 
 4636              	.LASF58:
 4637 03ff 466F7277 		.ascii	"Forward\000"
 4637      61726400 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 100


 4638              	.LASF3:
 4639 0407 73686F72 		.ascii	"short unsigned int\000"
 4639      7420756E 
 4639      7369676E 
 4639      65642069 
 4639      6E7400
 4640              	.LASF105:
 4641 041a 746F6F45 		.ascii	"tooEarlyFlag\000"
 4641      61726C79 
 4641      466C6167 
 4641      00
 4642              	.LASF90:
 4643 0427 53657452 		.ascii	"SetRobotMovement\000"
 4643      6F626F74 
 4643      4D6F7665 
 4643      6D656E74 
 4643      00
 4644              	.LASF17:
 4645 0438 696E7438 		.ascii	"int8\000"
 4645      00
 4646              	.LASF78:
 4647 043d 73706565 		.ascii	"speedTimer\000"
 4647      6454696D 
 4647      657200
 4648              	.LASF12:
 4649 0448 5F5F696E 		.ascii	"__int32_t\000"
 4649      7433325F 
 4649      7400
 4650              	.LASF154:
 4651 0452 6D61696E 		.ascii	"main.c\000"
 4651      2E6300
 4652              	.LASF31:
 4653 0459 67315F79 		.ascii	"g1_ypos\000"
 4653      706F7300 
 4654              	.LASF84:
 4655 0461 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4655      546F4E65 
 4655      7874496E 
 4655      73747275 
 4655      6374696F 
 4656              	.LASF89:
 4657 0477 71756164 		.ascii	"quadPulseCount\000"
 4657      50756C73 
 4657      65436F75 
 4657      6E7400
 4658              	.LASF111:
 4659 0486 74735F64 		.ascii	"ts_display\000"
 4659      6973706C 
 4659      617900
 4660              	.LASF143:
 4661 0491 63757272 		.ascii	"currentFoodListIndex\000"
 4661      656E7446 
 4661      6F6F644C 
 4661      69737449 
 4661      6E646578 
 4662              	.LASF76:
 4663 04a6 466F7277 		.ascii	"ForwardCourseCorrection\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 101


 4663      61726443 
 4663      6F757273 
 4663      65436F72 
 4663      72656374 
 4664              	.LASF117:
 4665 04be 666C6167 		.ascii	"flag_packet\000"
 4665      5F706163 
 4665      6B657400 
 4666              	.LASF114:
 4667 04ca 666C6167 		.ascii	"flag_ts_speed\000"
 4667      5F74735F 
 4667      73706565 
 4667      6400
 4668              	.LASF32:
 4669 04d8 67315F73 		.ascii	"g1_speed\000"
 4669      70656564 
 4669      00
 4670              	.LASF39:
 4671 04e1 4C656674 		.ascii	"Left\000"
 4671      00
 4672              	.LASF96:
 4673 04e6 75547572 		.ascii	"uTurnFinishedFlag\000"
 4673      6E46696E 
 4673      69736865 
 4673      64466C61 
 4673      6700
 4674              	.LASF10:
 4675 04f8 73697A65 		.ascii	"sizetype\000"
 4675      74797065 
 4675      00
 4676              	.LASF147:
 4677 0501 63757272 		.ascii	"currentRow\000"
 4677      656E7452 
 4677      6F7700
 4678              	.LASF125:
 4679 050c 73797374 		.ascii	"system_state\000"
 4679      656D5F73 
 4679      74617465 
 4679      00
 4680              	.LASF33:
 4681 0519 67315F64 		.ascii	"g1_direction\000"
 4681      69726563 
 4681      74696F6E 
 4681      00
 4682              	.LASF124:
 4683 0526 75736242 		.ascii	"usbBuffer\000"
 4683      75666665 
 4683      7200
 4684              	.LASF44:
 4685 0530 77616974 		.ascii	"waitForLeftTurn\000"
 4685      466F724C 
 4685      65667454 
 4685      75726E00 
 4686              	.LASF30:
 4687 0540 67315F78 		.ascii	"g1_xpos\000"
 4687      706F7300 
 4688              	.LASF35:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 102


 4689 0548 67325F79 		.ascii	"g2_ypos\000"
 4689      706F7300 
 4690              	.LASF99:
 4691 0550 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4691      436F7572 
 4691      7365436F 
 4691      72726563 
 4691      74696F6E 
 4692              	.LASF120:
 4693 056c 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4693      5F72665F 
 4693      7472616E 
 4693      736D6973 
 4693      73696F6E 
 4694              	.LASF145:
 4695 0588 78426C6F 		.ascii	"xBlocksize\000"
 4695      636B7369 
 4695      7A6500
 4696              	.LASF146:
 4697 0593 79426C6F 		.ascii	"yBlocksize\000"
 4697      636B7369 
 4697      7A6500
 4698              	.LASF19:
 4699 059e 666C6F61 		.ascii	"float\000"
 4699      7400
 4700              	.LASF134:
 4701 05a4 746F7461 		.ascii	"totalMilliseconds\000"
 4701      6C4D696C 
 4701      6C697365 
 4701      636F6E64 
 4701      7300
 4702              	.LASF64:
 4703 05b6 556E6B6E 		.ascii	"Unknown\000"
 4703      6F776E00 
 4704              	.LASF85:
 4705 05be 47657449 		.ascii	"GetInstructionAtIndex\000"
 4705      6E737472 
 4705      75637469 
 4705      6F6E4174 
 4705      496E6465 
 4706              	.LASF139:
 4707 05d4 6B656570 		.ascii	"keepLedOn\000"
 4707      4C65644F 
 4707      6E00
 4708              	.LASF109:
 4709 05de 74735F75 		.ascii	"ts_update\000"
 4709      70646174 
 4709      6500
 4710              	.LASF95:
 4711 05e8 75547572 		.ascii	"uTurnStartedFlag\000"
 4711      6E537461 
 4711      72746564 
 4711      466C6167 
 4711      00
 4712              	.LASF13:
 4713 05f9 696E7433 		.ascii	"int32_t\000"
 4713      325F7400 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 103


 4714              	.LASF1:
 4715 0601 756E7369 		.ascii	"unsigned char\000"
 4715      676E6564 
 4715      20636861 
 4715      7200
 4716              	.LASF15:
 4717 060f 75696E74 		.ascii	"uint16\000"
 4717      313600
 4718              	.LASF42:
 4719 0616 496E7374 		.ascii	"InstructionDirection\000"
 4719      72756374 
 4719      696F6E44 
 4719      69726563 
 4719      74696F6E 
 4720              	.LASF34:
 4721 062b 67325F78 		.ascii	"g2_xpos\000"
 4721      706F7300 
 4722              	.LASF2:
 4723 0633 73686F72 		.ascii	"short int\000"
 4723      7420696E 
 4723      7400
 4724              	.LASF130:
 4725 063d 70726576 		.ascii	"previousOrientation\000"
 4725      696F7573 
 4725      4F726965 
 4725      6E746174 
 4725      696F6E00 
 4726              	.LASF150:
 4727 0651 69676E6F 		.ascii	"ignoreSensor\000"
 4727      72655365 
 4727      6E736F72 
 4727      00
 4728              	.LASF97:
 4729 065e 6C656674 		.ascii	"leftStatusFlag\000"
 4729      53746174 
 4729      7573466C 
 4729      616700
 4730              	.LASF81:
 4731 066d 63757272 		.ascii	"currentInstructionDirection\000"
 4731      656E7449 
 4731      6E737472 
 4731      75637469 
 4731      6F6E4469 
 4732              	.LASF24:
 4733 0689 726F626F 		.ascii	"robot_ypos\000"
 4733      745F7970 
 4733      6F7300
 4734              	.LASF61:
 4735 0694 41646A75 		.ascii	"AdjustToTheLeft\000"
 4735      7374546F 
 4735      5468654C 
 4735      65667400 
 4736              	.LASF43:
 4737 06a4 476F466F 		.ascii	"GoForward\000"
 4737      72776172 
 4737      6400
 4738              	.LASF40:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 104


 4739 06ae 52696768 		.ascii	"Right\000"
 4739      7400
 4740              	.LASF151:
 4741 06b4 6C617374 		.ascii	"lastDirectionAfter180\000"
 4741      44697265 
 4741      6374696F 
 4741      6E416674 
 4741      65723138 
 4742              	.LASF132:
 4743 06ca 6E756D53 		.ascii	"numSteps\000"
 4743      74657073 
 4743      00
 4744              	.LASF77:
 4745 06d3 5370696E 		.ascii	"SpinCourseCorrection\000"
 4745      436F7572 
 4745      7365436F 
 4745      72726563 
 4745      74696F6E 
 4746              	.LASF115:
 4747 06e8 666C6167 		.ascii	"flag_ts_display\000"
 4747      5F74735F 
 4747      64697370 
 4747      6C617900 
 4748              	.LASF75:
 4749 06f8 6E657744 		.ascii	"newDistance\000"
 4749      69737461 
 4749      6E636500 
 4750              	.LASF9:
 4751 0704 6C6F6E67 		.ascii	"long double\000"
 4751      20646F75 
 4751      626C6500 
 4752              	.LASF11:
 4753 0710 63686172 		.ascii	"char\000"
 4753      00
 4754              	.LASF27:
 4755 0715 67305F79 		.ascii	"g0_ypos\000"
 4755      706F7300 
 4756              	.LASF68:
 4757 071d 5370696E 		.ascii	"Spin180\000"
 4757      31383000 
 4758              	.LASF8:
 4759 0725 756E7369 		.ascii	"unsigned int\000"
 4759      676E6564 
 4759      20696E74 
 4759      00
 4760              	.LASF21:
 4761 0732 72737369 		.ascii	"rssi\000"
 4761      00
 4762              	.LASF22:
 4763 0737 696E6465 		.ascii	"index\000"
 4763      7800
 4764              	.LASF72:
 4765 073d 53365F44 		.ascii	"S6_DETECTED\000"
 4765      45544543 
 4765      54454400 
 4766              	.LASF126:
 4767 0749 666F6F64 		.ascii	"food_list\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 105


 4767      5F6C6973 
 4767      7400
 4768              	.LASF38:
 4769 0753 446F776E 		.ascii	"Down\000"
 4769      00
 4770              	.LASF136:
 4771 0758 62756666 		.ascii	"buffer\000"
 4771      657200
 4772              	.LASF113:
 4773 075f 666C6167 		.ascii	"flag_ts_update\000"
 4773      5F74735F 
 4773      75706461 
 4773      746500
 4774              	.LASF121:
 4775 076e 64697370 		.ascii	"displaystring\000"
 4775      6C617973 
 4775      7472696E 
 4775      6700
 4776              	.LASF23:
 4777 077c 726F626F 		.ascii	"robot_xpos\000"
 4777      745F7870 
 4777      6F7300
 4778              	.LASF129:
 4779 0787 63757272 		.ascii	"currentRobotOrientation\000"
 4779      656E7452 
 4779      6F626F74 
 4779      4F726965 
 4779      6E746174 
 4780              	.LASF127:
 4781 079f 63757272 		.ascii	"currentDirection\000"
 4781      656E7444 
 4781      69726563 
 4781      74696F6E 
 4781      00
 4782              	.LASF79:
 4783 07b0 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4783      6F76656D 
 4783      656E7441 
 4783      63636F72 
 4783      64696E67 
 4784              	.LASF93:
 4785 07d2 7475726E 		.ascii	"turnFinishedFlag\000"
 4785      46696E69 
 4785      73686564 
 4785      466C6167 
 4785      00
 4786              	.LASF133:
 4787 07e3 696E7374 		.ascii	"instructionList\000"
 4787      72756374 
 4787      696F6E4C 
 4787      69737400 
 4788              	.LASF45:
 4789 07f3 77616974 		.ascii	"waitForRightTurn\000"
 4789      466F7252 
 4789      69676874 
 4789      5475726E 
 4789      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 106


 4790              	.LASF142:
 4791 0804 6A756E63 		.ascii	"junctionConfiguration\000"
 4791      74696F6E 
 4791      436F6E66 
 4791      69677572 
 4791      6174696F 
 4792              	.LASF131:
 4793 081a 63757272 		.ascii	"currentInstruction\000"
 4793      656E7449 
 4793      6E737472 
 4793      75637469 
 4793      6F6E00
 4794              	.LASF102:
 4795 082d 746F7461 		.ascii	"totalLineCount\000"
 4795      6C4C696E 
 4795      65436F75 
 4795      6E7400
 4796              	.LASF87:
 4797 083c 636F756E 		.ascii	"count1\000"
 4797      743100
 4798              	.LASF73:
 4799 0843 54494D45 		.ascii	"TIMER_FINISH\000"
 4799      525F4649 
 4799      4E495348 
 4799      00
 4800              	.LASF83:
 4801 0850 52657365 		.ascii	"ResetSensorFlags\000"
 4801      7453656E 
 4801      736F7246 
 4801      6C616773 
 4801      00
 4802              	.LASF18:
 4803 0861 696E7431 		.ascii	"int16\000"
 4803      3600
 4804              	.LASF156:
 4805 0867 71756164 		.ascii	"quadCountToRPM\000"
 4805      436F756E 
 4805      74546F52 
 4805      504D00
 4806              	.LASF53:
 4807 0876 69676E6F 		.ascii	"ignoreL\000"
 4807      72654C00 
 4808              	.LASF60:
 4809 087e 5475726E 		.ascii	"TurnLeft\000"
 4809      4C656674 
 4809      00
 4810              	.LASF54:
 4811 0887 69676E6F 		.ascii	"ignoreR\000"
 4811      72655200 
 4812              	.LASF92:
 4813 088f 7475726E 		.ascii	"turnStartedFlag\000"
 4813      53746172 
 4813      74656446 
 4813      6C616700 
 4814              	.LASF28:
 4815 089f 67305F73 		.ascii	"g0_speed\000"
 4815      70656564 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cckKbsld.s 			page 107


 4815      00
 4816              	.LASF25:
 4817 08a8 726F626F 		.ascii	"robot_orientation\000"
 4817      745F6F72 
 4817      69656E74 
 4817      6174696F 
 4817      6E00
 4818              	.LASF149:
 4819 08ba 73746F70 		.ascii	"stoppedAfterTurn\000"
 4819      70656441 
 4819      66746572 
 4819      5475726E 
 4819      00
 4820              	.LASF141:
 4821 08cb 666F7277 		.ascii	"forwardBuffer\000"
 4821      61726442 
 4821      75666665 
 4821      7200
 4822              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
