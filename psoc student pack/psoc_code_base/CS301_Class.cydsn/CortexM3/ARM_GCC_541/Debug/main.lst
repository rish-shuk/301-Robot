ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 03       		.byte	3
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.global	instructionIndex
 124              		.bss
 125 0013 00       		.align	2
 126              		.type	instructionIndex, %object
 127              		.size	instructionIndex, 4
 128              	instructionIndex:
 129 0014 00000000 		.space	4
 130              		.comm	s3,1,1
 131              		.comm	s4,1,1
 132              		.comm	s5,1,1
 133              		.global	s6
 134              		.type	s6, %object
 135              		.size	s6, 1
 136              	s6:
 137 0018 00       		.space	1
 138              		.global	totalMilliseconds
 139 0019 000000   		.align	2
 140              		.type	totalMilliseconds, %object
 141              		.size	totalMilliseconds, 4
 142              	totalMilliseconds:
 143 001c 00000000 		.space	4
 144              		.global	totalDistance
 145              		.align	2
 146              		.type	totalDistance, %object
 147              		.size	totalDistance, 4
 148              	totalDistance:
 149 0020 00000000 		.space	4
 150              		.comm	buffer,69,4
 151              		.global	quadDec2Count
 152              		.align	2
 153              		.type	quadDec2Count, %object
 154              		.size	quadDec2Count, 4
 155              	quadDec2Count:
 156 0024 00000000 		.space	4
 157              		.global	timerInt
 158              		.align	2
 159              		.type	timerInt, %object
 160              		.size	timerInt, 4
 161              	timerInt:
 162 0028 00000000 		.space	4
 163              		.global	keepLedOn
 164              		.align	2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 4


 165              		.type	keepLedOn, %object
 166              		.size	keepLedOn, 4
 167              	keepLedOn:
 168 002c 00000000 		.space	4
 169              		.global	stopBuffer
 170              		.align	2
 171              		.type	stopBuffer, %object
 172              		.size	stopBuffer, 4
 173              	stopBuffer:
 174 0030 00000000 		.space	4
 175              		.global	turnFinishedFlag
 176              		.type	turnFinishedFlag, %object
 177              		.size	turnFinishedFlag, 1
 178              	turnFinishedFlag:
 179 0034 00       		.space	1
 180              		.global	forwardUntilTargetStartedFlag
 181              		.type	forwardUntilTargetStartedFlag, %object
 182              		.size	forwardUntilTargetStartedFlag, 1
 183              	forwardUntilTargetStartedFlag:
 184 0035 00       		.space	1
 185              		.global	blockSizeTotal
 186 0036 0000     		.align	2
 187              		.type	blockSizeTotal, %object
 188              		.size	blockSizeTotal, 4
 189              	blockSizeTotal:
 190 0038 00000000 		.space	4
 191              		.global	__aeabi_i2d
 192              		.global	__aeabi_dmul
 193              		.global	__aeabi_ddiv
 194              		.global	__aeabi_d2f
 195              		.global	__aeabi_fadd
 196              		.section	.text.speedTimer,"ax",%progbits
 197              		.align	2
 198              		.global	speedTimer
 199              		.thumb
 200              		.thumb_func
 201              		.type	speedTimer, %function
 202              	speedTimer:
 203              	.LFB64:
 204              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 5


  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentOrientation, previousOrientation = Right;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
  34:main.c        **** void MoveToNextInstruction();
  35:main.c        **** // ----------------------------------------
  36:main.c        **** uint8 s3, s4, s5, s6 = 0;
  37:main.c        **** //* ========================================
  38:main.c        **** // Calculating Distance
  39:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  40:main.c        **** 
  41:main.c        **** uint32 totalMilliseconds = 0;
  42:main.c        **** float totalDistance = 0; // in mm
  43:main.c        **** //* ========================================
  44:main.c        **** char buffer[69];
  45:main.c        **** int quadDec2Count = 0;
  46:main.c        **** int timerInt = 0;
  47:main.c        **** int keepLedOn = 0;
  48:main.c        **** // ========================================= FLAGS
  49:main.c        **** uint32 stopBuffer = 0;
  50:main.c        **** uint8 turnFinishedFlag = 0;
  51:main.c        **** uint8 forwardUntilTargetStartedFlag = 0;
  52:main.c        **** float blockSizeTotal = 0;
  53:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  54:main.c        **** 
  55:main.c        **** CY_ISR (speedTimer) {
 205              		.loc 1 55 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 90B5     		push	{r4, r7, lr}
 210              		.cfi_def_cfa_offset 12
 211              		.cfi_offset 4, -12
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 83B0     		sub	sp, sp, #12
 215              		.cfi_def_cfa_offset 24
 216 0004 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
  56:main.c        ****     timerInt = 1;
 218              		.loc 1 56 0
 219 0006 344B     		ldr	r3, .L4+16
 220 0008 0122     		movs	r2, #1
 221 000a 1A60     		str	r2, [r3]
  57:main.c        ****     //quadDec_M1 used for turning macros
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 6


  58:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 222              		.loc 1 58 0
 223 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 224 0010 0346     		mov	r3, r0
 225 0012 1A46     		mov	r2, r3
 226 0014 314B     		ldr	r3, .L4+20
 227 0016 1A60     		str	r2, [r3]
  59:main.c        ****     
  60:main.c        ****     if ((currentDirection == Forward || 
 228              		.loc 1 60 0
 229 0018 314B     		ldr	r3, .L4+24
 230 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231 001c 002B     		cmp	r3, #0
 232 001e 13D0     		beq	.L2
  61:main.c        ****         currentDirection == ForwardAfterTurn ||
 233              		.loc 1 61 0 discriminator 1
 234 0020 2F4B     		ldr	r3, .L4+24
 235 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  60:main.c        ****         currentDirection == ForwardAfterTurn ||
 236              		.loc 1 60 0 discriminator 1
 237 0024 082B     		cmp	r3, #8
 238 0026 0FD0     		beq	.L2
  62:main.c        ****         currentDirection == waitForTurn || 
 239              		.loc 1 62 0
 240 0028 2D4B     		ldr	r3, .L4+24
 241 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  61:main.c        ****         currentDirection == ForwardAfterTurn ||
 242              		.loc 1 61 0
 243 002c 072B     		cmp	r3, #7
 244 002e 0BD0     		beq	.L2
  63:main.c        ****         currentDirection == AdjustToTheLeft ||
 245              		.loc 1 63 0
 246 0030 2B4B     		ldr	r3, .L4+24
 247 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:main.c        ****         currentDirection == waitForTurn || 
 248              		.loc 1 62 0
 249 0034 032B     		cmp	r3, #3
 250 0036 07D0     		beq	.L2
  64:main.c        ****         currentDirection == AdjustToTheRight ||
 251              		.loc 1 64 0
 252 0038 294B     		ldr	r3, .L4+24
 253 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63:main.c        ****         currentDirection == AdjustToTheLeft ||
 254              		.loc 1 63 0
 255 003c 042B     		cmp	r3, #4
 256 003e 03D0     		beq	.L2
  65:main.c        ****         currentDirection == Backward) &&
 257              		.loc 1 65 0
 258 0040 274B     		ldr	r3, .L4+24
 259 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:main.c        ****         currentDirection == AdjustToTheRight ||
 260              		.loc 1 64 0
 261 0044 092B     		cmp	r3, #9
 262 0046 34D1     		bne	.L3
 263              	.L2:
  66:main.c        ****         quadDec2Count != 0) {
 264              		.loc 1 66 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 7


 265 0048 244B     		ldr	r3, .L4+20
 266 004a 1B68     		ldr	r3, [r3]
  65:main.c        ****         currentDirection == Backward) &&
 267              		.loc 1 65 0
 268 004c 002B     		cmp	r3, #0
 269 004e 30D0     		beq	.L3
 270              	.LBB2:
  67:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  68:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 271              		.loc 1 68 0
 272 0050 224B     		ldr	r3, .L4+20
 273 0052 1B68     		ldr	r3, [r3]
 274 0054 002B     		cmp	r3, #0
 275 0056 B8BF     		it	lt
 276 0058 5B42     		rsblt	r3, r3, #0
 277 005a 1846     		mov	r0, r3
 278 005c FFF7FEFF 		bl	__aeabi_i2d
 279 0060 19A3     		adr	r3, .L4
 280 0062 D3E90023 		ldrd	r2, [r3]
 281 0066 FFF7FEFF 		bl	__aeabi_dmul
 282 006a 0346     		mov	r3, r0
 283 006c 0C46     		mov	r4, r1
 284 006e 1846     		mov	r0, r3
 285 0070 2146     		mov	r1, r4
 286 0072 17A3     		adr	r3, .L4+8
 287 0074 D3E90023 		ldrd	r2, [r3]
 288 0078 FFF7FEFF 		bl	__aeabi_dmul
 289 007c 0346     		mov	r3, r0
 290 007e 0C46     		mov	r4, r1
 291 0080 1846     		mov	r0, r3
 292 0082 2146     		mov	r1, r4
 293 0084 4FF00002 		mov	r2, #0
 294 0088 164B     		ldr	r3, .L4+28
 295 008a FFF7FEFF 		bl	__aeabi_ddiv
 296 008e 0346     		mov	r3, r0
 297 0090 0C46     		mov	r4, r1
 298 0092 1846     		mov	r0, r3
 299 0094 2146     		mov	r1, r4
 300 0096 FFF7FEFF 		bl	__aeabi_d2f
 301 009a 0346     		mov	r3, r0
 302 009c 7B60     		str	r3, [r7, #4]	@ float
  69:main.c        ****         
  70:main.c        ****         totalDistance = totalDistance + newDistance;
 303              		.loc 1 70 0
 304 009e 124B     		ldr	r3, .L4+32
 305 00a0 1B68     		ldr	r3, [r3]	@ float
 306 00a2 7968     		ldr	r1, [r7, #4]	@ float
 307 00a4 1846     		mov	r0, r3
 308 00a6 FFF7FEFF 		bl	__aeabi_fadd
 309 00aa 0346     		mov	r3, r0
 310 00ac 1A46     		mov	r2, r3
 311 00ae 0E4B     		ldr	r3, .L4+32
 312 00b0 1A60     		str	r2, [r3]	@ float
 313              	.L3:
 314              	.LBE2:
  71:main.c        ****     }
  72:main.c        ****     
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 8


  73:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 315              		.loc 1 73 0
 316 00b2 0020     		movs	r0, #0
 317 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  74:main.c        ****     QuadDec_M2_Start(); // restart counter
 318              		.loc 1 74 0
 319 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  75:main.c        ****     
  76:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 320              		.loc 1 76 0
 321 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  77:main.c        **** }
 322              		.loc 1 77 0
 323 00c0 00BF     		nop
 324 00c2 0C37     		adds	r7, r7, #12
 325              		.cfi_def_cfa_offset 12
 326 00c4 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 00c6 90BD     		pop	{r4, r7, pc}
 330              	.L5:
 331              		.align	3
 332              	.L4:
 333 00c8 182D4454 		.word	1413754136
 334 00cc FB210940 		.word	1074340347
 335 00d0 00000000 		.word	0
 336 00d4 00205040 		.word	1078992896
 337 00d8 00000000 		.word	timerInt
 338 00dc 00000000 		.word	quadDec2Count
 339 00e0 00000000 		.word	currentDirection
 340 00e4 00806C40 		.word	1080852480
 341 00e8 00000000 		.word	totalDistance
 342              		.cfi_endproc
 343              	.LFE64:
 344              		.size	speedTimer, .-speedTimer
 345              		.section	.text.S3_DETECTED,"ax",%progbits
 346              		.align	2
 347              		.global	S3_DETECTED
 348              		.thumb
 349              		.thumb_func
 350              		.type	S3_DETECTED, %function
 351              	S3_DETECTED:
 352              	.LFB65:
  78:main.c        **** 
  79:main.c        **** CY_ISR(S3_DETECTED) {
 353              		.loc 1 79 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 0000 80B4     		push	{r7}
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
  80:main.c        ****     // Sensor has detected WHITE
  81:main.c        ****     s3 = 1; // , Black = 0, White = 1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 9


 363              		.loc 1 81 0
 364 0004 034B     		ldr	r3, .L7
 365 0006 0122     		movs	r2, #1
 366 0008 1A70     		strb	r2, [r3]
  82:main.c        ****     //LED_Write(1u);
  83:main.c        **** }
 367              		.loc 1 83 0
 368 000a 00BF     		nop
 369 000c BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 000e 80BC     		pop	{r7}
 373              		.cfi_restore 7
 374              		.cfi_def_cfa_offset 0
 375 0010 7047     		bx	lr
 376              	.L8:
 377 0012 00BF     		.align	2
 378              	.L7:
 379 0014 00000000 		.word	s3
 380              		.cfi_endproc
 381              	.LFE65:
 382              		.size	S3_DETECTED, .-S3_DETECTED
 383              		.section	.text.S4_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S4_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S4_DETECTED, %function
 389              	S4_DETECTED:
 390              	.LFB66:
  84:main.c        **** 
  85:main.c        **** CY_ISR(S4_DETECTED) {
 391              		.loc 1 85 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
  86:main.c        ****     // Sensor has detected WHITE
  87:main.c        ****     s4 = 1; // , Black = 0, White = 1
 401              		.loc 1 87 0
 402 0004 034B     		ldr	r3, .L10
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
  88:main.c        ****     //LED_Write(1u);
  89:main.c        **** }
 405              		.loc 1 89 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
 411              		.cfi_restore 7
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 10


 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L11:
 415 0012 00BF     		.align	2
 416              	.L10:
 417 0014 00000000 		.word	s4
 418              		.cfi_endproc
 419              	.LFE66:
 420              		.size	S4_DETECTED, .-S4_DETECTED
 421              		.section	.text.S5_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S5_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S5_DETECTED, %function
 427              	S5_DETECTED:
 428              	.LFB67:
  90:main.c        **** 
  91:main.c        **** CY_ISR(S5_DETECTED) {
 429              		.loc 1 91 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
  92:main.c        ****     // Sensor has detected WHITE
  93:main.c        ****     s5 = 1; // , Black = 0, White = 1
 439              		.loc 1 93 0
 440 0004 034B     		ldr	r3, .L13
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
  94:main.c        ****     //LED_Write(1u);
  95:main.c        **** }
 443              		.loc 1 95 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L14:
 453 0012 00BF     		.align	2
 454              	.L13:
 455 0014 00000000 		.word	s5
 456              		.cfi_endproc
 457              	.LFE67:
 458              		.size	S5_DETECTED, .-S5_DETECTED
 459              		.section	.text.S6_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S6_DETECTED
 462              		.thumb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 11


 463              		.thumb_func
 464              		.type	S6_DETECTED, %function
 465              	S6_DETECTED:
 466              	.LFB68:
  96:main.c        **** 
  97:main.c        **** CY_ISR(S6_DETECTED) {
 467              		.loc 1 97 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
  98:main.c        ****     // Sensor has detected WHITE
  99:main.c        ****     s6 = 1; // , Black = 0, White = 1
 477              		.loc 1 99 0
 478 0004 034B     		ldr	r3, .L16
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 100:main.c        ****     //LED_Write(1u);
 101:main.c        **** }
 481              		.loc 1 101 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L17:
 491 0012 00BF     		.align	2
 492              	.L16:
 493 0014 00000000 		.word	s6
 494              		.cfi_endproc
 495              	.LFE68:
 496              		.size	S6_DETECTED, .-S6_DETECTED
 497              		.section	.text.TIMER_FINISH,"ax",%progbits
 498              		.align	2
 499              		.global	TIMER_FINISH
 500              		.thumb
 501              		.thumb_func
 502              		.type	TIMER_FINISH, %function
 503              	TIMER_FINISH:
 504              	.LFB69:
 102:main.c        **** 
 103:main.c        **** CY_ISR(TIMER_FINISH) {
 505              		.loc 1 103 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 12


 512              		.cfi_offset 14, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 104:main.c        ****     if (currentDirection == Stop) {
 515              		.loc 1 104 0
 516 0004 0A4B     		ldr	r3, .L21
 517 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 0008 052B     		cmp	r3, #5
 519 000a 05D1     		bne	.L19
 105:main.c        ****         stopBuffer = stopBuffer + 1;
 520              		.loc 1 105 0
 521 000c 094B     		ldr	r3, .L21+4
 522 000e 1B68     		ldr	r3, [r3]
 523 0010 0133     		adds	r3, r3, #1
 524 0012 084A     		ldr	r2, .L21+4
 525 0014 1360     		str	r3, [r2]
 526 0016 02E0     		b	.L20
 527              	.L19:
 106:main.c        ****     } else {
 107:main.c        ****         stopBuffer = 0;
 528              		.loc 1 107 0
 529 0018 064B     		ldr	r3, .L21+4
 530 001a 0022     		movs	r2, #0
 531 001c 1A60     		str	r2, [r3]
 532              	.L20:
 108:main.c        ****     }
 109:main.c        ****     SetRobotMovement(); 
 533              		.loc 1 109 0
 534 001e FFF7FEFF 		bl	SetRobotMovement
 110:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 535              		.loc 1 110 0
 536 0022 FFF7FEFF 		bl	ResetSensorFlags
 111:main.c        ****     Timer_LED_ReadStatusRegister();
 537              		.loc 1 111 0
 538 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 112:main.c        **** }
 539              		.loc 1 112 0
 540 002a 00BF     		nop
 541 002c 80BD     		pop	{r7, pc}
 542              	.L22:
 543 002e 00BF     		.align	2
 544              	.L21:
 545 0030 00000000 		.word	currentDirection
 546 0034 00000000 		.word	stopBuffer
 547              		.cfi_endproc
 548              	.LFE69:
 549              		.size	TIMER_FINISH, .-TIMER_FINISH
 550              		.section	.text.main,"ax",%progbits
 551              		.align	2
 552              		.global	main
 553              		.thumb
 554              		.thumb_func
 555              		.type	main, %function
 556              	main:
 557              	.LFB70:
 113:main.c        **** 
 114:main.c        **** 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 13


 115:main.c        **** int main()
 116:main.c        **** {
 558              		.loc 1 116 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 117:main.c        **** // ----- INITIALIZATIONS ----------
 118:main.c        ****     CYGlobalIntEnable;
 568              		.loc 1 118 0
 569              		.syntax unified
 570              	@ 118 "main.c" 1
 571 0004 62B6     		CPSIE   i
 572              	@ 0 "" 2
 119:main.c        ****     ResetSensorFlags();
 573              		.loc 1 119 0
 574              		.thumb
 575              		.syntax unified
 576 0006 FFF7FEFF 		bl	ResetSensorFlags
 120:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 577              		.loc 1 120 0
 578 000a FFF7FEFF 		bl	init
 121:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 579              		.loc 1 121 0
 580 000e 1F48     		ldr	r0, .L27
 581 0010 FFF7FEFF 		bl	isr_speed_StartEx
 122:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 582              		.loc 1 122 0
 583 0014 1E48     		ldr	r0, .L27+4
 584 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 123:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 585              		.loc 1 123 0
 586 001a 1E48     		ldr	r0, .L27+8
 587 001c FFF7FEFF 		bl	S3_detected_StartEx
 124:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 588              		.loc 1 124 0
 589 0020 1D48     		ldr	r0, .L27+12
 590 0022 FFF7FEFF 		bl	S4_detected_StartEx
 125:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 591              		.loc 1 125 0
 592 0026 1D48     		ldr	r0, .L27+16
 593 0028 FFF7FEFF 		bl	S5_detected_StartEx
 126:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 594              		.loc 1 126 0
 595 002c 1C48     		ldr	r0, .L27+20
 596 002e FFF7FEFF 		bl	S6_detected_StartEx
 127:main.c        ****     Timer_LED_Start();
 597              		.loc 1 127 0
 598 0032 FFF7FEFF 		bl	Timer_LED_Start
 128:main.c        ****     instructionList = findPath(map, food_list, 0);
 599              		.loc 1 128 0
 600 0036 0022     		movs	r2, #0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 14


 601 0038 1A49     		ldr	r1, .L27+24
 602 003a 1B48     		ldr	r0, .L27+28
 603 003c FFF7FEFF 		bl	findPath
 604 0040 0246     		mov	r2, r0
 605 0042 1A4B     		ldr	r3, .L27+32
 606 0044 1A60     		str	r2, [r3]
 129:main.c        ****     numSteps = instructionsListLength();
 607              		.loc 1 129 0
 608 0046 FFF7FEFF 		bl	instructionsListLength
 609 004a 0346     		mov	r3, r0
 610 004c 1A46     		mov	r2, r3
 611 004e 184B     		ldr	r3, .L27+36
 612 0050 1A60     		str	r2, [r3]
 130:main.c        **** // ------USB SETUP ----------------    
 131:main.c        **** #ifdef USE_USB    
 132:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 613              		.loc 1 132 0
 614 0052 0121     		movs	r1, #1
 615 0054 0020     		movs	r0, #0
 616 0056 FFF7FEFF 		bl	USBUART_Start
 133:main.c        **** #endif        
 134:main.c        ****     RF_BT_SELECT_Write(0);
 617              		.loc 1 134 0
 618 005a 0020     		movs	r0, #0
 619 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 620              	.L26:
 135:main.c        ****     
 136:main.c        ****     //usbPutString("Initialised UART");
 137:main.c        ****     for(;;)
 138:main.c        ****     {
 139:main.c        ****         if(timerInt == 1) {
 621              		.loc 1 139 0
 622 0060 144B     		ldr	r3, .L27+40
 623 0062 1B68     		ldr	r3, [r3]
 624 0064 012B     		cmp	r3, #1
 625 0066 08D1     		bne	.L24
 140:main.c        ****             timerInt = 0;
 626              		.loc 1 140 0
 627 0068 124B     		ldr	r3, .L27+40
 628 006a 0022     		movs	r2, #0
 629 006c 1A60     		str	r2, [r3]
 141:main.c        ****             // calculate RPM of M2
 142:main.c        ****             quadCountToRPM(quadDec2Count);
 630              		.loc 1 142 0
 631 006e 124B     		ldr	r3, .L27+44
 632 0070 1B68     		ldr	r3, [r3]
 633 0072 9BB2     		uxth	r3, r3
 634 0074 1846     		mov	r0, r3
 635 0076 FFF7FEFF 		bl	quadCountToRPM
 636              	.L24:
 143:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 144:main.c        ****             //usbPutString(buffer);
 145:main.c        ****             //usbPutString(" ");
 146:main.c        ****         }
 147:main.c        ****         //handle_usb();
 148:main.c        ****         if (flag_KB_string == 1)
 637              		.loc 1 148 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 15


 638 007a 104B     		ldr	r3, .L27+48
 639 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 007e 012B     		cmp	r3, #1
 641 0080 EED1     		bne	.L26
 149:main.c        ****         {
 150:main.c        ****             //usbPutString("Total Distance: ");
 151:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 152:main.c        ****             //usbPutString(buffer);
 153:main.c        ****             flag_KB_string = 0;
 642              		.loc 1 153 0
 643 0082 0E4B     		ldr	r3, .L27+48
 644 0084 0022     		movs	r2, #0
 645 0086 1A70     		strb	r2, [r3]
 154:main.c        ****         }           
 155:main.c        ****     }
 646              		.loc 1 155 0
 647 0088 EAE7     		b	.L26
 648              	.L28:
 649 008a 00BF     		.align	2
 650              	.L27:
 651 008c 00000000 		.word	speedTimer
 652 0090 00000000 		.word	TIMER_FINISH
 653 0094 00000000 		.word	S3_DETECTED
 654 0098 00000000 		.word	S4_DETECTED
 655 009c 00000000 		.word	S5_DETECTED
 656 00a0 00000000 		.word	S6_DETECTED
 657 00a4 00000000 		.word	food_list
 658 00a8 00000000 		.word	map
 659 00ac 00000000 		.word	instructionList
 660 00b0 00000000 		.word	numSteps
 661 00b4 00000000 		.word	timerInt
 662 00b8 00000000 		.word	quadDec2Count
 663 00bc 00000000 		.word	flag_KB_string
 664              		.cfi_endproc
 665              	.LFE70:
 666              		.size	main, .-main
 667              		.global	__aeabi_fmul
 668              		.global	__aeabi_f2iz
 669              		.section	.text.quadCountToRPM,"ax",%progbits
 670              		.align	2
 671              		.global	quadCountToRPM
 672              		.thumb
 673              		.thumb_func
 674              		.type	quadCountToRPM, %function
 675              	quadCountToRPM:
 676              	.LFB71:
 156:main.c        ****     return 0;
 157:main.c        **** }
 158:main.c        **** 
 159:main.c        **** // Calculations
 160:main.c        **** //* ========================================
 161:main.c        **** int16 quadCountToRPM(uint16 count)
 162:main.c        **** {
 677              		.loc 1 162 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 16


 681 0000 90B5     		push	{r4, r7, lr}
 682              		.cfi_def_cfa_offset 12
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 32
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 0346     		mov	r3, r0
 691 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 163:main.c        ****     float cps = count/57.00;
 692              		.loc 1 163 0
 693 000a FB88     		ldrh	r3, [r7, #6]
 694 000c 1846     		mov	r0, r3
 695 000e FFF7FEFF 		bl	__aeabi_i2d
 696 0012 4FF00002 		mov	r2, #0
 697 0016 0D4B     		ldr	r3, .L31
 698 0018 FFF7FEFF 		bl	__aeabi_ddiv
 699 001c 0346     		mov	r3, r0
 700 001e 0C46     		mov	r4, r1
 701 0020 1846     		mov	r0, r3
 702 0022 2146     		mov	r1, r4
 703 0024 FFF7FEFF 		bl	__aeabi_d2f
 704 0028 0346     		mov	r3, r0
 705 002a FB60     		str	r3, [r7, #12]	@ float
 164:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 706              		.loc 1 164 0
 707 002c 0849     		ldr	r1, .L31+4
 708 002e F868     		ldr	r0, [r7, #12]	@ float
 709 0030 FFF7FEFF 		bl	__aeabi_fmul
 710 0034 0346     		mov	r3, r0
 711 0036 1846     		mov	r0, r3
 712 0038 FFF7FEFF 		bl	__aeabi_f2iz
 713 003c 0346     		mov	r3, r0
 714 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 165:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 166:main.c        ****     return rpm;
 715              		.loc 1 166 0
 716 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 167:main.c        ****     //usbPutString(buffer);
 168:main.c        ****     //usbPutString("rpm ");
 169:main.c        **** }
 717              		.loc 1 169 0
 718 0044 1846     		mov	r0, r3
 719 0046 1437     		adds	r7, r7, #20
 720              		.cfi_def_cfa_offset 12
 721 0048 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 004a 90BD     		pop	{r4, r7, pc}
 725              	.L32:
 726              		.align	2
 727              	.L31:
 728 004c 00804C40 		.word	1078755328
 729 0050 00007041 		.word	1097859072
 730              		.cfi_endproc
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 17


 731              	.LFE71:
 732              		.size	quadCountToRPM, .-quadCountToRPM
 733              		.section	.text.ResetSensorFlags,"ax",%progbits
 734              		.align	2
 735              		.global	ResetSensorFlags
 736              		.thumb
 737              		.thumb_func
 738              		.type	ResetSensorFlags, %function
 739              	ResetSensorFlags:
 740              	.LFB72:
 170:main.c        **** 
 171:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 172:main.c        **** void ResetSensorFlags() {
 741              		.loc 1 172 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746 0000 80B4     		push	{r7}
 747              		.cfi_def_cfa_offset 4
 748              		.cfi_offset 7, -4
 749 0002 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 173:main.c        ****     s3 = 0;
 751              		.loc 1 173 0
 752 0004 074B     		ldr	r3, .L34
 753 0006 0022     		movs	r2, #0
 754 0008 1A70     		strb	r2, [r3]
 174:main.c        ****     s4 = 0;
 755              		.loc 1 174 0
 756 000a 074B     		ldr	r3, .L34+4
 757 000c 0022     		movs	r2, #0
 758 000e 1A70     		strb	r2, [r3]
 175:main.c        ****     s5 = 0;
 759              		.loc 1 175 0
 760 0010 064B     		ldr	r3, .L34+8
 761 0012 0022     		movs	r2, #0
 762 0014 1A70     		strb	r2, [r3]
 176:main.c        ****     s6 = 0;
 763              		.loc 1 176 0
 764 0016 064B     		ldr	r3, .L34+12
 765 0018 0022     		movs	r2, #0
 766 001a 1A70     		strb	r2, [r3]
 177:main.c        **** }
 767              		.loc 1 177 0
 768 001c 00BF     		nop
 769 001e BD46     		mov	sp, r7
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0020 80BC     		pop	{r7}
 773              		.cfi_restore 7
 774              		.cfi_def_cfa_offset 0
 775 0022 7047     		bx	lr
 776              	.L35:
 777              		.align	2
 778              	.L34:
 779 0024 00000000 		.word	s3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 18


 780 0028 00000000 		.word	s4
 781 002c 00000000 		.word	s5
 782 0030 00000000 		.word	s6
 783              		.cfi_endproc
 784              	.LFE72:
 785              		.size	ResetSensorFlags, .-ResetSensorFlags
 786              		.global	xBlocksize
 787              		.data
 788 0045 000000   		.align	2
 789              		.type	xBlocksize, %object
 790              		.size	xBlocksize, 4
 791              	xBlocksize:
 792 0048 0000FF42 		.word	1124007936
 793              		.global	yBlocksize
 794              		.align	2
 795              		.type	yBlocksize, %object
 796              		.size	yBlocksize, 4
 797              	yBlocksize:
 798 004c 0000A042 		.word	1117782016
 799              		.global	currentRow
 800              		.type	currentRow, %object
 801              		.size	currentRow, 1
 802              	currentRow:
 803 0050 01       		.byte	1
 804              		.global	currentCol
 805              		.type	currentCol, %object
 806              		.size	currentCol, 1
 807              	currentCol:
 808 0051 01       		.byte	1
 809              		.global	stoppedAfterTurn
 810              		.bss
 811              		.type	stoppedAfterTurn, %object
 812              		.size	stoppedAfterTurn, 1
 813              	stoppedAfterTurn:
 814 003c 00       		.space	1
 815              		.global	ignoreSensor
 816              		.type	ignoreSensor, %object
 817              		.size	ignoreSensor, 1
 818              	ignoreSensor:
 819 003d 00       		.space	1
 820              		.global	__aeabi_fcmpge
 821              		.section	.text.CheckSensorDirection,"ax",%progbits
 822              		.align	2
 823              		.global	CheckSensorDirection
 824              		.thumb
 825              		.thumb_func
 826              		.type	CheckSensorDirection, %function
 827              	CheckSensorDirection:
 828              	.LFB73:
 178:main.c        **** 
 179:main.c        **** float xBlocksize = 127.5; // 127.5
 180:main.c        **** float yBlocksize = 80; // 80
 181:main.c        **** uint8 currentRow = 1;
 182:main.c        **** uint8 currentCol = 1;
 183:main.c        **** 
 184:main.c        **** /*enum DirectionState GetNextStep() {
 185:main.c        ****     enum DirectionState directionState;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 19


 186:main.c        ****     // Determines robot movement and orientation to follow optimal path
 187:main.c        ****     // enum DirectionState directionState = Stop;
 188:main.c        ****     previousOrientation = currentOrientation;
 189:main.c        ****     
 190:main.c        ****     if(map[currentRow][currentCol] == 9) {
 191:main.c        ****         directionState = Stop; // reached target
 192:main.c        ****         return directionState;
 193:main.c        ****     }
 194:main.c        ****         
 195:main.c        ****     switch (previousOrientation) {
 196:main.c        ****             case Up:
 197:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 198:main.c        ****                     currentOrientation = Up; 
 199:main.c        ****                     directionState = Forward;
 200:main.c        ****                     currentRow--;// update position
 201:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 202:main.c        ****                     currentOrientation = Left;
 203:main.c        ****                     directionState = waitForLeftTurn;
 204:main.c        ****                     //currentRow--;
 205:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 206:main.c        ****                     currentOrientation = Right;
 207:main.c        ****                     directionState = waitForRightTurn;
 208:main.c        ****                     //currentRow++; // update position
 209:main.c        ****                 }
 210:main.c        ****                 break;
 211:main.c        ****             case Down:
 212:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 213:main.c        ****                     currentOrientation = Down;
 214:main.c        ****                     directionState = Forward;
 215:main.c        ****                     currentRow++;
 216:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 217:main.c        ****                     currentOrientation = Left;
 218:main.c        ****                     directionState = waitForRightTurn;
 219:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 220:main.c        ****                     currentOrientation = Right;
 221:main.c        ****                     directionState = waitForLeftTurn;
 222:main.c        ****                 }
 223:main.c        ****                 break;
 224:main.c        ****             case Left:
 225:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 226:main.c        ****                     currentOrientation = Left;
 227:main.c        ****                     directionState = Forward;
 228:main.c        ****                     currentCol--; // update position
 229:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 230:main.c        ****                     currentOrientation = Up;
 231:main.c        ****                     directionState = waitForRightTurn;
 232:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 233:main.c        ****                     currentOrientation = Down;
 234:main.c        ****                     directionState = waitForLeftTurn;
 235:main.c        ****                 }
 236:main.c        ****                 break;
 237:main.c        ****             case Right:
 238:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 239:main.c        ****                     currentOrientation = Right;
 240:main.c        ****                     directionState = Forward;
 241:main.c        ****                     currentCol++; // update position
 242:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 20


 243:main.c        ****                     currentOrientation = Up;
 244:main.c        ****                     directionState = waitForLeftTurn;
 245:main.c        ****                     //currentCol++; // update position
 246:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 247:main.c        ****                     currentOrientation = Down;
 248:main.c        ****                     directionState = waitForRightTurn;
 249:main.c        ****                     //currentCol--; // update position
 250:main.c        ****                 }
 251:main.c        ****                 break;
 252:main.c        ****             default:
 253:main.c        ****                 break;
 254:main.c        ****         }
 255:main.c        ****     
 256:main.c        ****     return directionState;
 257:main.c        **** }
 258:main.c        **** */
 259:main.c        **** uint8 stoppedAfterTurn = 0;
 260:main.c        **** uint8 ignoreSensor = 0;
 261:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 262:main.c        **** enum RobotMovement CheckSensorDirection() {
 829              		.loc 1 262 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 82B0     		sub	sp, sp, #8
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 263:main.c        ****     float blocksize;
 264:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 841              		.loc 1 264 0
 842 0006 964B     		ldr	r3, .L66
 843 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 844 000a 002B     		cmp	r3, #0
 845 000c 03D0     		beq	.L37
 846              		.loc 1 264 0 is_stmt 0 discriminator 1
 847 000e 944B     		ldr	r3, .L66
 848 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0012 012B     		cmp	r3, #1
 850 0014 03D1     		bne	.L38
 851              	.L37:
 265:main.c        ****         blocksize = yBlocksize;
 852              		.loc 1 265 0 is_stmt 1
 853 0016 934B     		ldr	r3, .L66+4
 854 0018 1B68     		ldr	r3, [r3]	@ float
 855 001a 7B60     		str	r3, [r7, #4]	@ float
 856 001c 02E0     		b	.L39
 857              	.L38:
 266:main.c        ****     } else {
 267:main.c        ****         blocksize = xBlocksize;
 858              		.loc 1 267 0
 859 001e 924B     		ldr	r3, .L66+8
 860 0020 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 21


 861 0022 7B60     		str	r3, [r7, #4]	@ float
 862              	.L39:
 268:main.c        ****     }
 269:main.c        ****     //if(currentInstruction)
 270:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 863              		.loc 1 270 0
 864 0024 0523     		movs	r3, #5
 865 0026 FB70     		strb	r3, [r7, #3]
 271:main.c        ****     
 272:main.c        ****     if (stoppedAfterTurn == 1) {
 866              		.loc 1 272 0
 867 0028 904B     		ldr	r3, .L66+12
 868 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 869 002c 012B     		cmp	r3, #1
 870 002e 16D1     		bne	.L40
 273:main.c        ****         if (stopBuffer <= 50) {
 871              		.loc 1 273 0
 872 0030 8F4B     		ldr	r3, .L66+16
 873 0032 1B68     		ldr	r3, [r3]
 874 0034 322B     		cmp	r3, #50
 875 0036 06D8     		bhi	.L41
 274:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 876              		.loc 1 274 0
 877 0038 0523     		movs	r3, #5
 878 003a FB70     		strb	r3, [r7, #3]
 275:main.c        ****             previousDirection = directionState;
 879              		.loc 1 275 0
 880 003c 8D4A     		ldr	r2, .L66+20
 881 003e FB78     		ldrb	r3, [r7, #3]
 882 0040 1370     		strb	r3, [r2]
 276:main.c        ****             return directionState;
 883              		.loc 1 276 0
 884 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 885 0044 07E1     		b	.L42
 886              	.L41:
 277:main.c        ****         }
 278:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 279:main.c        ****         totalDistance = 0; // reset distance
 887              		.loc 1 279 0
 888 0046 8C4B     		ldr	r3, .L66+24
 889 0048 4FF00002 		mov	r2, #0
 890 004c 1A60     		str	r2, [r3]	@ float
 280:main.c        ****         previousDirection = directionState;
 891              		.loc 1 280 0
 892 004e 894A     		ldr	r2, .L66+20
 893 0050 FB78     		ldrb	r3, [r7, #3]
 894 0052 1370     		strb	r3, [r2]
 281:main.c        ****         stoppedAfterTurn = 0;
 895              		.loc 1 281 0
 896 0054 854B     		ldr	r3, .L66+12
 897 0056 0022     		movs	r2, #0
 898 0058 1A70     		strb	r2, [r3]
 282:main.c        ****         return directionState;
 899              		.loc 1 282 0
 900 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 901 005c FBE0     		b	.L42
 902              	.L40:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 22


 283:main.c        ****     }
 284:main.c        ****     if (totalDistance >= blocksize) {
 903              		.loc 1 284 0
 904 005e 864B     		ldr	r3, .L66+24
 905 0060 1B68     		ldr	r3, [r3]	@ float
 906 0062 7968     		ldr	r1, [r7, #4]	@ float
 907 0064 1846     		mov	r0, r3
 908 0066 FFF7FEFF 		bl	__aeabi_fcmpge
 909 006a 0346     		mov	r3, r0
 910 006c 002B     		cmp	r3, #0
 911 006e 08D0     		beq	.L65
 285:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 286:main.c        ****         totalDistance = 0; // reset distance
 912              		.loc 1 286 0
 913 0070 814B     		ldr	r3, .L66+24
 914 0072 4FF00002 		mov	r2, #0
 915 0076 1A60     		str	r2, [r3]	@ float
 287:main.c        ****         previousDirection = directionState;
 916              		.loc 1 287 0
 917 0078 7E4A     		ldr	r2, .L66+20
 918 007a FB78     		ldrb	r3, [r7, #3]
 919 007c 1370     		strb	r3, [r2]
 288:main.c        ****         return directionState;
 920              		.loc 1 288 0
 921 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 922 0080 E9E0     		b	.L42
 923              	.L65:
 289:main.c        ****     }
 290:main.c        ****     
 291:main.c        ****     // STOP BUFFER * ========================================
 292:main.c        ****     if (previousDirection == Stop) {
 924              		.loc 1 292 0
 925 0082 7C4B     		ldr	r3, .L66+20
 926 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0086 052B     		cmp	r3, #5
 928 0088 0AD1     		bne	.L45
 293:main.c        ****         if (stopBuffer <= 50) {
 929              		.loc 1 293 0
 930 008a 794B     		ldr	r3, .L66+16
 931 008c 1B68     		ldr	r3, [r3]
 932 008e 322B     		cmp	r3, #50
 933 0090 04D8     		bhi	.L46
 294:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 934              		.loc 1 294 0
 935 0092 0523     		movs	r3, #5
 936 0094 FB70     		strb	r3, [r7, #3]
 295:main.c        ****             previousDirection = directionState;
 937              		.loc 1 295 0
 938 0096 774A     		ldr	r2, .L66+20
 939 0098 FB78     		ldrb	r3, [r7, #3]
 940 009a 1370     		strb	r3, [r2]
 941              	.L46:
 296:main.c        ****         } else {
 297:main.c        ****             //directionState = ForwardAfterTurn;
 298:main.c        ****         }
 299:main.c        ****         return directionState;
 942              		.loc 1 299 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 23


 943 009c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 944 009e DAE0     		b	.L42
 945              	.L45:
 300:main.c        ****     }
 301:main.c        **** 
 302:main.c        ****     // TURNING * ========================================    
 303:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 946              		.loc 1 303 0
 947 00a0 744B     		ldr	r3, .L66+20
 948 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 00a4 082B     		cmp	r3, #8
 950 00a6 0ED1     		bne	.L47
 304:main.c        ****         if (s3 || s4) {
 951              		.loc 1 304 0
 952 00a8 744B     		ldr	r3, .L66+28
 953 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 954 00ac 002B     		cmp	r3, #0
 955 00ae 03D1     		bne	.L48
 956              		.loc 1 304 0 is_stmt 0 discriminator 1
 957 00b0 734B     		ldr	r3, .L66+32
 958 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 00b4 002B     		cmp	r3, #0
 960 00b6 06D0     		beq	.L47
 961              	.L48:
 305:main.c        ****             //ignoreSensor = 0;
 306:main.c        ****             //usbPutString("Forward\n");
 307:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 962              		.loc 1 307 0 is_stmt 1
 963 00b8 0023     		movs	r3, #0
 964 00ba FB70     		strb	r3, [r7, #3]
 308:main.c        ****             previousDirection = directionState;
 965              		.loc 1 308 0
 966 00bc 6D4A     		ldr	r2, .L66+20
 967 00be FB78     		ldrb	r3, [r7, #3]
 968 00c0 1370     		strb	r3, [r2]
 309:main.c        ****             return directionState;
 969              		.loc 1 309 0
 970 00c2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 971 00c4 C7E0     		b	.L42
 972              	.L47:
 310:main.c        ****         }
 311:main.c        ****     }
 312:main.c        **** 
 313:main.c        ****     if(previousDirection == waitForRightTurn) {
 973              		.loc 1 313 0
 974 00c6 6B4B     		ldr	r3, .L66+20
 975 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 00ca 022B     		cmp	r3, #2
 977 00cc 11D1     		bne	.L49
 314:main.c        ****         //ignoreSensor = 0;
 315:main.c        ****         if(!s4) {
 978              		.loc 1 315 0
 979 00ce 6C4B     		ldr	r3, .L66+32
 980 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 00d2 002B     		cmp	r3, #0
 982 00d4 06D1     		bne	.L50
 316:main.c        ****             //usbPutString("Turn Right\n");
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 24


 317:main.c        ****             directionState = TurnRight;
 983              		.loc 1 317 0
 984 00d6 0123     		movs	r3, #1
 985 00d8 FB70     		strb	r3, [r7, #3]
 318:main.c        ****             previousDirection = directionState;
 986              		.loc 1 318 0
 987 00da 664A     		ldr	r2, .L66+20
 988 00dc FB78     		ldrb	r3, [r7, #3]
 989 00de 1370     		strb	r3, [r2]
 319:main.c        ****             return directionState;
 990              		.loc 1 319 0
 991 00e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 992 00e2 B8E0     		b	.L42
 993              	.L50:
 320:main.c        ****         } else {
 321:main.c        ****             //usbPutString("Wait for Right Turn\n");
 322:main.c        ****             directionState = waitForRightTurn;
 994              		.loc 1 322 0
 995 00e4 0223     		movs	r3, #2
 996 00e6 FB70     		strb	r3, [r7, #3]
 323:main.c        ****             previousDirection = directionState;
 997              		.loc 1 323 0
 998 00e8 624A     		ldr	r2, .L66+20
 999 00ea FB78     		ldrb	r3, [r7, #3]
 1000 00ec 1370     		strb	r3, [r2]
 324:main.c        ****             return directionState;
 1001              		.loc 1 324 0
 1002 00ee FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1003 00f0 B1E0     		b	.L42
 1004              	.L49:
 325:main.c        ****         }
 326:main.c        ****     }
 327:main.c        **** 
 328:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1005              		.loc 1 328 0
 1006 00f2 604B     		ldr	r3, .L66+20
 1007 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 00f6 012B     		cmp	r3, #1
 1009 00f8 11D1     		bne	.L51
 329:main.c        ****         //ignoreSensor = 0;
 330:main.c        ****         if(!s3) {
 1010              		.loc 1 330 0
 1011 00fa 604B     		ldr	r3, .L66+28
 1012 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1013 00fe 002B     		cmp	r3, #0
 1014 0100 06D1     		bne	.L52
 331:main.c        ****             //usbPutString("Turn Left\n");
 332:main.c        ****             directionState = TurnLeft;
 1015              		.loc 1 332 0
 1016 0102 0223     		movs	r3, #2
 1017 0104 FB70     		strb	r3, [r7, #3]
 333:main.c        ****             previousDirection = directionState;
 1018              		.loc 1 333 0
 1019 0106 5B4A     		ldr	r2, .L66+20
 1020 0108 FB78     		ldrb	r3, [r7, #3]
 1021 010a 1370     		strb	r3, [r2]
 334:main.c        ****             return directionState;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 25


 1022              		.loc 1 334 0
 1023 010c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1024 010e A2E0     		b	.L42
 1025              	.L52:
 335:main.c        ****         } else {
 336:main.c        ****             //usbPutString("Wait for Left Turn\n");
 337:main.c        ****             directionState = waitForLeftTurn;
 1026              		.loc 1 337 0
 1027 0110 0123     		movs	r3, #1
 1028 0112 FB70     		strb	r3, [r7, #3]
 338:main.c        ****             previousDirection = directionState;
 1029              		.loc 1 338 0
 1030 0114 574A     		ldr	r2, .L66+20
 1031 0116 FB78     		ldrb	r3, [r7, #3]
 1032 0118 1370     		strb	r3, [r2]
 339:main.c        ****             return directionState;
 1033              		.loc 1 339 0
 1034 011a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1035 011c 9BE0     		b	.L42
 1036              	.L51:
 340:main.c        ****         }
 341:main.c        ****     }
 342:main.c        **** 
 343:main.c        ****     if(previousDirection == TurnRight) {
 1037              		.loc 1 343 0
 1038 011e 554B     		ldr	r3, .L66+20
 1039 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 0122 012B     		cmp	r3, #1
 1041 0124 24D1     		bne	.L53
 344:main.c        ****         if(s5 && s6) {
 1042              		.loc 1 344 0
 1043 0126 574B     		ldr	r3, .L66+36
 1044 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1045 012a 002B     		cmp	r3, #0
 1046 012c 0AD0     		beq	.L54
 1047              		.loc 1 344 0 is_stmt 0 discriminator 1
 1048 012e 564B     		ldr	r3, .L66+40
 1049 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 0132 002B     		cmp	r3, #0
 1051 0134 06D0     		beq	.L54
 345:main.c        ****             //usbPutString("Turn Right\n");
 346:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1052              		.loc 1 346 0 is_stmt 1
 1053 0136 0123     		movs	r3, #1
 1054 0138 FB70     		strb	r3, [r7, #3]
 347:main.c        ****             previousDirection = directionState;
 1055              		.loc 1 347 0
 1056 013a 4E4A     		ldr	r2, .L66+20
 1057 013c FB78     		ldrb	r3, [r7, #3]
 1058 013e 1370     		strb	r3, [r2]
 348:main.c        ****             return directionState;
 1059              		.loc 1 348 0
 1060 0140 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1061 0142 88E0     		b	.L42
 1062              	.L54:
 349:main.c        ****         } 
 350:main.c        ****         else if (!s5 || !s6) {
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 26


 1063              		.loc 1 350 0
 1064 0144 4F4B     		ldr	r3, .L66+36
 1065 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 0148 002B     		cmp	r3, #0
 1067 014a 03D0     		beq	.L55
 1068              		.loc 1 350 0 is_stmt 0 discriminator 1
 1069 014c 4E4B     		ldr	r3, .L66+40
 1070 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1071 0150 002B     		cmp	r3, #0
 1072 0152 0DD1     		bne	.L53
 1073              	.L55:
 351:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 352:main.c        ****             //usbPutString("Stop after Right Turn");
 353:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1074              		.loc 1 353 0 is_stmt 1
 1075 0154 0523     		movs	r3, #5
 1076 0156 FB70     		strb	r3, [r7, #3]
 354:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1077              		.loc 1 354 0
 1078 0158 474B     		ldr	r3, .L66+24
 1079 015a 4FF00002 		mov	r2, #0
 1080 015e 1A60     		str	r2, [r3]	@ float
 355:main.c        ****             previousDirection = directionState;
 1081              		.loc 1 355 0
 1082 0160 444A     		ldr	r2, .L66+20
 1083 0162 FB78     		ldrb	r3, [r7, #3]
 1084 0164 1370     		strb	r3, [r2]
 356:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1085              		.loc 1 356 0
 1086 0166 414B     		ldr	r3, .L66+12
 1087 0168 0122     		movs	r2, #1
 1088 016a 1A70     		strb	r2, [r3]
 357:main.c        ****             return directionState;
 1089              		.loc 1 357 0
 1090 016c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1091 016e 72E0     		b	.L42
 1092              	.L53:
 358:main.c        ****         }
 359:main.c        ****     }    
 360:main.c        **** 
 361:main.c        ****     if(previousDirection == TurnLeft) {
 1093              		.loc 1 361 0
 1094 0170 404B     		ldr	r3, .L66+20
 1095 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1096 0174 022B     		cmp	r3, #2
 1097 0176 24D1     		bne	.L56
 362:main.c        ****         if(s5 && s6) {
 1098              		.loc 1 362 0
 1099 0178 424B     		ldr	r3, .L66+36
 1100 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 017c 002B     		cmp	r3, #0
 1102 017e 0AD0     		beq	.L57
 1103              		.loc 1 362 0 is_stmt 0 discriminator 1
 1104 0180 414B     		ldr	r3, .L66+40
 1105 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 0184 002B     		cmp	r3, #0
 1107 0186 06D0     		beq	.L57
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 27


 363:main.c        ****             //usbPutString("Turn Left\n");
 364:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1108              		.loc 1 364 0 is_stmt 1
 1109 0188 0223     		movs	r3, #2
 1110 018a FB70     		strb	r3, [r7, #3]
 365:main.c        ****             previousDirection = directionState;
 1111              		.loc 1 365 0
 1112 018c 394A     		ldr	r2, .L66+20
 1113 018e FB78     		ldrb	r3, [r7, #3]
 1114 0190 1370     		strb	r3, [r2]
 366:main.c        ****             return directionState;
 1115              		.loc 1 366 0
 1116 0192 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1117 0194 5FE0     		b	.L42
 1118              	.L57:
 367:main.c        ****         } 
 368:main.c        ****         else if (!s5 || !s6) {
 1119              		.loc 1 368 0
 1120 0196 3B4B     		ldr	r3, .L66+36
 1121 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 019a 002B     		cmp	r3, #0
 1123 019c 03D0     		beq	.L58
 1124              		.loc 1 368 0 is_stmt 0 discriminator 1
 1125 019e 3A4B     		ldr	r3, .L66+40
 1126 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 01a2 002B     		cmp	r3, #0
 1128 01a4 0DD1     		bne	.L56
 1129              	.L58:
 369:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 370:main.c        ****            // usbPutString("Stop after Left Turn\n");
 371:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1130              		.loc 1 371 0 is_stmt 1
 1131 01a6 0523     		movs	r3, #5
 1132 01a8 FB70     		strb	r3, [r7, #3]
 372:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1133              		.loc 1 372 0
 1134 01aa 334B     		ldr	r3, .L66+24
 1135 01ac 4FF00002 		mov	r2, #0
 1136 01b0 1A60     		str	r2, [r3]	@ float
 373:main.c        ****             previousDirection = directionState;
 1137              		.loc 1 373 0
 1138 01b2 304A     		ldr	r2, .L66+20
 1139 01b4 FB78     		ldrb	r3, [r7, #3]
 1140 01b6 1370     		strb	r3, [r2]
 374:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1141              		.loc 1 374 0
 1142 01b8 2C4B     		ldr	r3, .L66+12
 1143 01ba 0122     		movs	r2, #1
 1144 01bc 1A70     		strb	r2, [r3]
 375:main.c        ****             return directionState;
 1145              		.loc 1 375 0
 1146 01be FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1147 01c0 49E0     		b	.L42
 1148              	.L56:
 376:main.c        ****         }
 377:main.c        ****     }
 378:main.c        ****     
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 28


 379:main.c        ****     // COURSE CORRECTION * ========================================
 380:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1149              		.loc 1 380 0
 1150 01c2 2C4B     		ldr	r3, .L66+20
 1151 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 01c6 002B     		cmp	r3, #0
 1153 01c8 07D0     		beq	.L59
 1154              		.loc 1 380 0 is_stmt 0 discriminator 1
 1155 01ca 2A4B     		ldr	r3, .L66+20
 1156 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1157 01ce 032B     		cmp	r3, #3
 1158 01d0 03D0     		beq	.L59
 1159              		.loc 1 380 0 discriminator 2
 1160 01d2 284B     		ldr	r3, .L66+20
 1161 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162 01d6 042B     		cmp	r3, #4
 1163 01d8 15D1     		bne	.L60
 1164              	.L59:
 381:main.c        ****         //ignoreSensor = 0;
 382:main.c        ****         if(s6) {
 1165              		.loc 1 382 0 is_stmt 1
 1166 01da 2B4B     		ldr	r3, .L66+40
 1167 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1168 01de 002B     		cmp	r3, #0
 1169 01e0 06D0     		beq	.L61
 383:main.c        ****             //usbPutString("Adjust to the left\n");
 384:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1170              		.loc 1 384 0
 1171 01e2 0323     		movs	r3, #3
 1172 01e4 FB70     		strb	r3, [r7, #3]
 385:main.c        ****             previousDirection = directionState;
 1173              		.loc 1 385 0
 1174 01e6 234A     		ldr	r2, .L66+20
 1175 01e8 FB78     		ldrb	r3, [r7, #3]
 1176 01ea 1370     		strb	r3, [r2]
 386:main.c        ****             return directionState;
 1177              		.loc 1 386 0
 1178 01ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1179 01ee 32E0     		b	.L42
 1180              	.L61:
 387:main.c        ****         }
 388:main.c        ****         if(s5) {
 1181              		.loc 1 388 0
 1182 01f0 244B     		ldr	r3, .L66+36
 1183 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 01f4 002B     		cmp	r3, #0
 1185 01f6 06D0     		beq	.L60
 389:main.c        ****             //usbPutString("Adjust to the right\n");
 390:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1186              		.loc 1 390 0
 1187 01f8 0423     		movs	r3, #4
 1188 01fa FB70     		strb	r3, [r7, #3]
 391:main.c        ****             previousDirection = directionState;
 1189              		.loc 1 391 0
 1190 01fc 1D4A     		ldr	r2, .L66+20
 1191 01fe FB78     		ldrb	r3, [r7, #3]
 1192 0200 1370     		strb	r3, [r2]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 29


 392:main.c        ****             return directionState;
 1193              		.loc 1 392 0
 1194 0202 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1195 0204 27E0     		b	.L42
 1196              	.L60:
 393:main.c        ****         }
 394:main.c        ****     }
 395:main.c        ****     
 396:main.c        ****     // FORWARD * ========================================
 397:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1197              		.loc 1 397 0
 1198 0206 1D4B     		ldr	r3, .L66+28
 1199 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 020a 002B     		cmp	r3, #0
 1201 020c 12D0     		beq	.L62
 1202              		.loc 1 397 0 is_stmt 0 discriminator 1
 1203 020e 1C4B     		ldr	r3, .L66+32
 1204 0210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 0212 002B     		cmp	r3, #0
 1206 0214 0ED0     		beq	.L62
 1207              		.loc 1 397 0 discriminator 2
 1208 0216 1B4B     		ldr	r3, .L66+36
 1209 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1210 021a 002B     		cmp	r3, #0
 1211 021c 0AD1     		bne	.L62
 1212              		.loc 1 397 0 discriminator 3
 1213 021e 1A4B     		ldr	r3, .L66+40
 1214 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1215 0222 002B     		cmp	r3, #0
 1216 0224 06D1     		bne	.L62
 398:main.c        ****         //usbPutString("Forward\n");
 399:main.c        ****         directionState = Forward;
 1217              		.loc 1 399 0 is_stmt 1
 1218 0226 0023     		movs	r3, #0
 1219 0228 FB70     		strb	r3, [r7, #3]
 400:main.c        ****         previousDirection = directionState;
 1220              		.loc 1 400 0
 1221 022a 124A     		ldr	r2, .L66+20
 1222 022c FB78     		ldrb	r3, [r7, #3]
 1223 022e 1370     		strb	r3, [r2]
 401:main.c        ****         return directionState;   
 1224              		.loc 1 401 0
 1225 0230 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1226 0232 10E0     		b	.L42
 1227              	.L62:
 402:main.c        ****     }
 403:main.c        **** 
 404:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 405:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 406:main.c        ****     if (previousDirection == Unknown) {
 1228              		.loc 1 406 0
 1229 0234 0F4B     		ldr	r3, .L66+20
 1230 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1231 0238 062B     		cmp	r3, #6
 1232 023a 06D1     		bne	.L63
 407:main.c        ****         directionState = Forward;
 1233              		.loc 1 407 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 30


 1234 023c 0023     		movs	r3, #0
 1235 023e FB70     		strb	r3, [r7, #3]
 408:main.c        ****         previousDirection = directionState;
 1236              		.loc 1 408 0
 1237 0240 0C4A     		ldr	r2, .L66+20
 1238 0242 FB78     		ldrb	r3, [r7, #3]
 1239 0244 1370     		strb	r3, [r2]
 409:main.c        ****         return directionState;
 1240              		.loc 1 409 0
 1241 0246 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1242 0248 05E0     		b	.L42
 1243              	.L63:
 410:main.c        ****     }
 411:main.c        **** 
 412:main.c        ****     // Possible reason
 413:main.c        ****     previousDirection = currentDirection;
 1244              		.loc 1 413 0
 1245 024a 104B     		ldr	r3, .L66+44
 1246 024c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1247 024e 094B     		ldr	r3, .L66+20
 1248 0250 1A70     		strb	r2, [r3]
 414:main.c        ****     return previousDirection;
 1249              		.loc 1 414 0
 1250 0252 084B     		ldr	r3, .L66+20
 1251 0254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252              	.L42:
 415:main.c        **** }
 1253              		.loc 1 415 0
 1254 0256 1846     		mov	r0, r3
 1255 0258 0837     		adds	r7, r7, #8
 1256              		.cfi_def_cfa_offset 8
 1257 025a BD46     		mov	sp, r7
 1258              		.cfi_def_cfa_register 13
 1259              		@ sp needed
 1260 025c 80BD     		pop	{r7, pc}
 1261              	.L67:
 1262 025e 00BF     		.align	2
 1263              	.L66:
 1264 0260 00000000 		.word	currentOrientation
 1265 0264 00000000 		.word	yBlocksize
 1266 0268 00000000 		.word	xBlocksize
 1267 026c 00000000 		.word	stoppedAfterTurn
 1268 0270 00000000 		.word	stopBuffer
 1269 0274 00000000 		.word	previousDirection
 1270 0278 00000000 		.word	totalDistance
 1271 027c 00000000 		.word	s3
 1272 0280 00000000 		.word	s4
 1273 0284 00000000 		.word	s5
 1274 0288 00000000 		.word	s6
 1275 028c 00000000 		.word	currentDirection
 1276              		.cfi_endproc
 1277              	.LFE73:
 1278              		.size	CheckSensorDirection, .-CheckSensorDirection
 1279              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 1280              		.align	2
 1281              		.global	ForwardCourseCorrection
 1282              		.thumb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 31


 1283              		.thumb_func
 1284              		.type	ForwardCourseCorrection, %function
 1285              	ForwardCourseCorrection:
 1286              	.LFB74:
 416:main.c        **** 
 417:main.c        **** enum RobotMovement ForwardCourseCorrection();
 418:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 1287              		.loc 1 418 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 1292 0000 80B4     		push	{r7}
 1293              		.cfi_def_cfa_offset 4
 1294              		.cfi_offset 7, -4
 1295 0002 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 419:main.c        ****     // if S5 and S6 are on black, move forward
 420:main.c        ****     if (!s5 && !s6) {
 1297              		.loc 1 420 0
 1298 0004 174B     		ldr	r3, .L75
 1299 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1300 0008 002B     		cmp	r3, #0
 1301 000a 05D1     		bne	.L69
 1302              		.loc 1 420 0 is_stmt 0 discriminator 1
 1303 000c 164B     		ldr	r3, .L75+4
 1304 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1305 0010 002B     		cmp	r3, #0
 1306 0012 01D1     		bne	.L69
 421:main.c        ****         return Forward;  
 1307              		.loc 1 421 0 is_stmt 1
 1308 0014 0023     		movs	r3, #0
 1309 0016 20E0     		b	.L70
 1310              	.L69:
 422:main.c        ****     }
 423:main.c        ****     
 424:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 425:main.c        ****     if (s5 && s6) {
 1311              		.loc 1 425 0
 1312 0018 124B     		ldr	r3, .L75
 1313 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 001c 002B     		cmp	r3, #0
 1315 001e 0FD0     		beq	.L71
 1316              		.loc 1 425 0 is_stmt 0 discriminator 1
 1317 0020 114B     		ldr	r3, .L75+4
 1318 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1319 0024 002B     		cmp	r3, #0
 1320 0026 0BD0     		beq	.L71
 426:main.c        ****         if (previousDirection == AdjustToTheLeft) {
 1321              		.loc 1 426 0 is_stmt 1
 1322 0028 104B     		ldr	r3, .L75+8
 1323 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1324 002c 032B     		cmp	r3, #3
 1325 002e 01D1     		bne	.L72
 427:main.c        ****             return AdjustToTheRight;
 1326              		.loc 1 427 0
 1327 0030 0423     		movs	r3, #4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 32


 1328 0032 12E0     		b	.L70
 1329              	.L72:
 428:main.c        ****         }
 429:main.c        ****         if (previousDirection == AdjustToTheRight) {
 1330              		.loc 1 429 0
 1331 0034 0D4B     		ldr	r3, .L75+8
 1332 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0038 042B     		cmp	r3, #4
 1334 003a 01D1     		bne	.L71
 430:main.c        ****             return AdjustToTheLeft;    
 1335              		.loc 1 430 0
 1336 003c 0323     		movs	r3, #3
 1337 003e 0CE0     		b	.L70
 1338              	.L71:
 431:main.c        ****         }
 432:main.c        ****     }
 433:main.c        **** 
 434:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 435:main.c        ****     if (s5) {
 1339              		.loc 1 435 0
 1340 0040 084B     		ldr	r3, .L75
 1341 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1342 0044 002B     		cmp	r3, #0
 1343 0046 01D0     		beq	.L73
 436:main.c        ****         return AdjustToTheRight;    
 1344              		.loc 1 436 0
 1345 0048 0423     		movs	r3, #4
 1346 004a 06E0     		b	.L70
 1347              	.L73:
 437:main.c        ****     }
 438:main.c        ****     if (s6) {
 1348              		.loc 1 438 0
 1349 004c 064B     		ldr	r3, .L75+4
 1350 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0050 002B     		cmp	r3, #0
 1352 0052 01D0     		beq	.L74
 439:main.c        ****         return AdjustToTheLeft;    
 1353              		.loc 1 439 0
 1354 0054 0323     		movs	r3, #3
 1355 0056 00E0     		b	.L70
 1356              	.L74:
 440:main.c        ****     }
 441:main.c        ****    
 442:main.c        ****     // We should never actually get to this point
 443:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 444:main.c        ****     return Stop;
 1357              		.loc 1 444 0
 1358 0058 0523     		movs	r3, #5
 1359              	.L70:
 445:main.c        **** }
 1360              		.loc 1 445 0
 1361 005a 1846     		mov	r0, r3
 1362 005c BD46     		mov	sp, r7
 1363              		.cfi_def_cfa_register 13
 1364              		@ sp needed
 1365 005e 80BC     		pop	{r7}
 1366              		.cfi_restore 7
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 33


 1367              		.cfi_def_cfa_offset 0
 1368 0060 7047     		bx	lr
 1369              	.L76:
 1370 0062 00BF     		.align	2
 1371              	.L75:
 1372 0064 00000000 		.word	s5
 1373 0068 00000000 		.word	s6
 1374 006c 00000000 		.word	previousDirection
 1375              		.cfi_endproc
 1376              	.LFE74:
 1377              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1378              		.global	__aeabi_fcmpeq
 1379              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1380              		.align	2
 1381              		.global	GetMovementAccordingToInstruction
 1382              		.thumb
 1383              		.thumb_func
 1384              		.type	GetMovementAccordingToInstruction, %function
 1385              	GetMovementAccordingToInstruction:
 1386              	.LFB75:
 446:main.c        **** 
 447:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1387              		.loc 1 447 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 8
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 82B0     		sub	sp, sp, #8
 1396              		.cfi_def_cfa_offset 16
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 448:main.c        ****     float blocksize;
 449:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1399              		.loc 1 449 0
 1400 0006 894B     		ldr	r3, .L119
 1401 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 000a 002B     		cmp	r3, #0
 1403 000c 03D0     		beq	.L78
 1404              		.loc 1 449 0 is_stmt 0 discriminator 1
 1405 000e 874B     		ldr	r3, .L119
 1406 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 0012 012B     		cmp	r3, #1
 1408 0014 03D1     		bne	.L79
 1409              	.L78:
 450:main.c        ****         blocksize = yBlocksize;
 1410              		.loc 1 450 0 is_stmt 1
 1411 0016 864B     		ldr	r3, .L119+4
 1412 0018 1B68     		ldr	r3, [r3]	@ float
 1413 001a 7B60     		str	r3, [r7, #4]	@ float
 1414 001c 02E0     		b	.L80
 1415              	.L79:
 451:main.c        ****     } else {
 452:main.c        ****         blocksize = xBlocksize;
 1416              		.loc 1 452 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 34


 1417 001e 854B     		ldr	r3, .L119+8
 1418 0020 1B68     		ldr	r3, [r3]	@ float
 1419 0022 7B60     		str	r3, [r7, #4]	@ float
 1420              	.L80:
 453:main.c        ****     }
 454:main.c        ****     
 455:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 456:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 457:main.c        ****         // OR an EVENT happens in the current instruction
 458:main.c        ****         // e.g. CurrentInstruction: GoForward 
 459:main.c        ****         //      S3 on BLACK
 460:main.c        ****         //      Check Ignore Count
 461:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 462:main.c        ****     
 463:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1421              		.loc 1 463 0
 1422 0024 844B     		ldr	r3, .L119+12
 1423 0026 1B78     		ldrb	r3, [r3]
 1424 0028 FB70     		strb	r3, [r7, #3]
 464:main.c        ****     
 465:main.c        ****     switch (currentInstructionDirection) {
 1425              		.loc 1 465 0
 1426 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1427 002c 052B     		cmp	r3, #5
 1428 002e 00F2F880 		bhi	.L81
 1429 0032 01A2     		adr	r2, .L83
 1430 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1431              		.p2align 2
 1432              	.L83:
 1433 0038 51000000 		.word	.L82+1
 1434 003c 89000000 		.word	.L84+1
 1435 0040 0B010000 		.word	.L85+1
 1436 0044 23020000 		.word	.L81+1
 1437 0048 8D010000 		.word	.L86+1
 1438 004c 13020000 		.word	.L87+1
 1439              		.p2align 1
 1440              	.L82:
 466:main.c        ****         case GoForward:
 467:main.c        ****             // if s3 or s4 go off, check ignoreCount
 468:main.c        ****             //      if ignoreCount == 0, go to next direction
 469:main.c        ****             //      return stop
 470:main.c        ****             if (!s3) {
 1441              		.loc 1 470 0
 1442 0050 7A4B     		ldr	r3, .L119+16
 1443 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1444 0054 002B     		cmp	r3, #0
 1445 0056 07D1     		bne	.L88
 471:main.c        ****                 if (currentInstruction.ignoreL == 0) {
 1446              		.loc 1 471 0
 1447 0058 774B     		ldr	r3, .L119+12
 1448 005a 5B68     		ldr	r3, [r3, #4]
 1449 005c 002B     		cmp	r3, #0
 1450 005e 03D1     		bne	.L88
 472:main.c        ****                     MoveToNextInstruction();
 1451              		.loc 1 472 0
 1452 0060 FFF7FEFF 		bl	MoveToNextInstruction
 473:main.c        ****                     return Stop;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 35


 1453              		.loc 1 473 0
 1454 0064 0523     		movs	r3, #5
 1455 0066 DDE0     		b	.L89
 1456              	.L88:
 474:main.c        ****                 }
 475:main.c        ****             }
 476:main.c        ****             
 477:main.c        ****             if (!s4) {
 1457              		.loc 1 477 0
 1458 0068 754B     		ldr	r3, .L119+20
 1459 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460 006c 002B     		cmp	r3, #0
 1461 006e 07D1     		bne	.L90
 478:main.c        ****                 if (currentInstruction.ignoreR == 0) {
 1462              		.loc 1 478 0
 1463 0070 714B     		ldr	r3, .L119+12
 1464 0072 9B68     		ldr	r3, [r3, #8]
 1465 0074 002B     		cmp	r3, #0
 1466 0076 03D1     		bne	.L90
 479:main.c        ****                     MoveToNextInstruction();
 1467              		.loc 1 479 0
 1468 0078 FFF7FEFF 		bl	MoveToNextInstruction
 480:main.c        ****                     return Stop;
 1469              		.loc 1 480 0
 1470 007c 0523     		movs	r3, #5
 1471 007e D1E0     		b	.L89
 1472              	.L90:
 481:main.c        ****                 }
 482:main.c        ****             }
 483:main.c        ****             return ForwardCourseCorrection();
 1473              		.loc 1 483 0
 1474 0080 FFF7FEFF 		bl	ForwardCourseCorrection
 1475 0084 0346     		mov	r3, r0
 1476 0086 CDE0     		b	.L89
 1477              	.L84:
 484:main.c        ****             break;
 485:main.c        ****         case waitForLeftTurn:
 486:main.c        ****             // continue moving forward until s3 goes on black
 487:main.c        ****             // if we are turning left already
 488:main.c        ****                 // wait until s5 || s6 are on black
 489:main.c        ****                 // return stop
 490:main.c        ****             if (turnFinishedFlag) {
 1478              		.loc 1 490 0
 1479 0088 6E4B     		ldr	r3, .L119+24
 1480 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 008c 002B     		cmp	r3, #0
 1482 008e 11D0     		beq	.L91
 491:main.c        ****                 if (turnFinishedFlag) {
 1483              		.loc 1 491 0
 1484 0090 6C4B     		ldr	r3, .L119+24
 1485 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1486 0094 002B     		cmp	r3, #0
 1487 0096 0DD0     		beq	.L91
 492:main.c        ****                     if (s3) {
 1488              		.loc 1 492 0
 1489 0098 684B     		ldr	r3, .L119+16
 1490 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 36


 1491 009c 002B     		cmp	r3, #0
 1492 009e 05D0     		beq	.L92
 493:main.c        ****                         turnFinishedFlag = 0;
 1493              		.loc 1 493 0
 1494 00a0 684B     		ldr	r3, .L119+24
 1495 00a2 0022     		movs	r2, #0
 1496 00a4 1A70     		strb	r2, [r3]
 494:main.c        ****                         MoveToNextInstruction();    
 1497              		.loc 1 494 0
 1498 00a6 FFF7FEFF 		bl	MoveToNextInstruction
 1499 00aa 03E0     		b	.L91
 1500              	.L92:
 495:main.c        ****                     }
 496:main.c        ****                     else {
 497:main.c        ****                         return ForwardCourseCorrection();        
 1501              		.loc 1 497 0
 1502 00ac FFF7FEFF 		bl	ForwardCourseCorrection
 1503 00b0 0346     		mov	r3, r0
 1504 00b2 B7E0     		b	.L89
 1505              	.L91:
 498:main.c        ****                     }
 499:main.c        ****                 }
 500:main.c        ****             }
 501:main.c        ****             
 502:main.c        ****             if (currentDirection == Stop) {
 1506              		.loc 1 502 0
 1507 00b4 644B     		ldr	r3, .L119+28
 1508 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 00b8 052B     		cmp	r3, #5
 1510 00ba 09D1     		bne	.L93
 503:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 504:main.c        ****                 if (stopBuffer <= 50) {
 1511              		.loc 1 504 0
 1512 00bc 634B     		ldr	r3, .L119+32
 1513 00be 1B68     		ldr	r3, [r3]
 1514 00c0 322B     		cmp	r3, #50
 1515 00c2 01D8     		bhi	.L94
 505:main.c        ****                     return Stop;   
 1516              		.loc 1 505 0
 1517 00c4 0523     		movs	r3, #5
 1518 00c6 ADE0     		b	.L89
 1519              	.L94:
 506:main.c        ****                 }
 507:main.c        ****                 return ForwardCourseCorrection();
 1520              		.loc 1 507 0
 1521 00c8 FFF7FEFF 		bl	ForwardCourseCorrection
 1522 00cc 0346     		mov	r3, r0
 1523 00ce A9E0     		b	.L89
 1524              	.L93:
 508:main.c        ****             }
 509:main.c        ****          
 510:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 511:main.c        ****             if (currentDirection == TurnLeft) {
 1525              		.loc 1 511 0
 1526 00d0 5D4B     		ldr	r3, .L119+28
 1527 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1528 00d4 022B     		cmp	r3, #2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 37


 1529 00d6 0ED1     		bne	.L95
 512:main.c        ****                 if (!s5 && !s6) {
 1530              		.loc 1 512 0
 1531 00d8 5D4B     		ldr	r3, .L119+36
 1532 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 00dc 002B     		cmp	r3, #0
 1534 00de 08D1     		bne	.L96
 1535              		.loc 1 512 0 is_stmt 0 discriminator 1
 1536 00e0 5C4B     		ldr	r3, .L119+40
 1537 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 00e4 002B     		cmp	r3, #0
 1539 00e6 04D1     		bne	.L96
 513:main.c        ****                     turnFinishedFlag = 1;
 1540              		.loc 1 513 0 is_stmt 1
 1541 00e8 564B     		ldr	r3, .L119+24
 1542 00ea 0122     		movs	r2, #1
 1543 00ec 1A70     		strb	r2, [r3]
 514:main.c        ****                     return Stop;
 1544              		.loc 1 514 0
 1545 00ee 0523     		movs	r3, #5
 1546 00f0 98E0     		b	.L89
 1547              	.L96:
 515:main.c        ****                 }
 516:main.c        ****                 else
 517:main.c        ****                 {
 518:main.c        ****                     return TurnLeft;
 1548              		.loc 1 518 0
 1549 00f2 0223     		movs	r3, #2
 1550 00f4 96E0     		b	.L89
 1551              	.L95:
 519:main.c        ****                 }
 520:main.c        ****             }
 521:main.c        ****             
 522:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 523:main.c        ****             if (!s3) {
 1552              		.loc 1 523 0
 1553 00f6 514B     		ldr	r3, .L119+16
 1554 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 00fa 002B     		cmp	r3, #0
 1556 00fc 01D1     		bne	.L97
 524:main.c        ****                 return TurnLeft;
 1557              		.loc 1 524 0
 1558 00fe 0223     		movs	r3, #2
 1559 0100 90E0     		b	.L89
 1560              	.L97:
 525:main.c        ****             }
 526:main.c        ****             
 527:main.c        ****             // Otherwise, keep going forward
 528:main.c        ****             return ForwardCourseCorrection(); 
 1561              		.loc 1 528 0
 1562 0102 FFF7FEFF 		bl	ForwardCourseCorrection
 1563 0106 0346     		mov	r3, r0
 1564 0108 8CE0     		b	.L89
 1565              	.L85:
 529:main.c        ****             break;
 530:main.c        ****         case waitForRightTurn:
 531:main.c        ****             // continue moving forward until s4 goes on black
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 38


 532:main.c        ****             // if we are turning left already
 533:main.c        ****                 // wait until s5 || s6 are on black
 534:main.c        ****                 // return stop
 535:main.c        ****             if (turnFinishedFlag) {
 1566              		.loc 1 535 0
 1567 010a 4E4B     		ldr	r3, .L119+24
 1568 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 010e 002B     		cmp	r3, #0
 1570 0110 11D0     		beq	.L98
 536:main.c        ****                 if (turnFinishedFlag) {
 1571              		.loc 1 536 0
 1572 0112 4C4B     		ldr	r3, .L119+24
 1573 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1574 0116 002B     		cmp	r3, #0
 1575 0118 0DD0     		beq	.L98
 537:main.c        ****                     if (s3) {
 1576              		.loc 1 537 0
 1577 011a 484B     		ldr	r3, .L119+16
 1578 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 011e 002B     		cmp	r3, #0
 1580 0120 05D0     		beq	.L99
 538:main.c        ****                         turnFinishedFlag = 0;
 1581              		.loc 1 538 0
 1582 0122 484B     		ldr	r3, .L119+24
 1583 0124 0022     		movs	r2, #0
 1584 0126 1A70     		strb	r2, [r3]
 539:main.c        ****                         MoveToNextInstruction();    
 1585              		.loc 1 539 0
 1586 0128 FFF7FEFF 		bl	MoveToNextInstruction
 1587 012c 03E0     		b	.L98
 1588              	.L99:
 540:main.c        ****                     }
 541:main.c        ****                     else {
 542:main.c        ****                         return ForwardCourseCorrection();        
 1589              		.loc 1 542 0
 1590 012e FFF7FEFF 		bl	ForwardCourseCorrection
 1591 0132 0346     		mov	r3, r0
 1592 0134 76E0     		b	.L89
 1593              	.L98:
 543:main.c        ****                     }
 544:main.c        ****                 }
 545:main.c        ****             }
 546:main.c        ****             
 547:main.c        ****             if (currentDirection == Stop) {
 1594              		.loc 1 547 0
 1595 0136 444B     		ldr	r3, .L119+28
 1596 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1597 013a 052B     		cmp	r3, #5
 1598 013c 09D1     		bne	.L100
 548:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 549:main.c        ****                 if (stopBuffer <= 50) {
 1599              		.loc 1 549 0
 1600 013e 434B     		ldr	r3, .L119+32
 1601 0140 1B68     		ldr	r3, [r3]
 1602 0142 322B     		cmp	r3, #50
 1603 0144 01D8     		bhi	.L101
 550:main.c        ****                     return Stop;   
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 39


 1604              		.loc 1 550 0
 1605 0146 0523     		movs	r3, #5
 1606 0148 6CE0     		b	.L89
 1607              	.L101:
 551:main.c        ****                 }
 552:main.c        **** 
 553:main.c        ****                 return ForwardCourseCorrection();
 1608              		.loc 1 553 0
 1609 014a FFF7FEFF 		bl	ForwardCourseCorrection
 1610 014e 0346     		mov	r3, r0
 1611 0150 68E0     		b	.L89
 1612              	.L100:
 554:main.c        ****             }
 555:main.c        ****                       
 556:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 557:main.c        ****             if (currentDirection == TurnRight) {
 1613              		.loc 1 557 0
 1614 0152 3D4B     		ldr	r3, .L119+28
 1615 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1616 0156 012B     		cmp	r3, #1
 1617 0158 0ED1     		bne	.L102
 558:main.c        ****                 if (!s5 && !s6) {
 1618              		.loc 1 558 0
 1619 015a 3D4B     		ldr	r3, .L119+36
 1620 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1621 015e 002B     		cmp	r3, #0
 1622 0160 08D1     		bne	.L103
 1623              		.loc 1 558 0 is_stmt 0 discriminator 1
 1624 0162 3C4B     		ldr	r3, .L119+40
 1625 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1626 0166 002B     		cmp	r3, #0
 1627 0168 04D1     		bne	.L103
 559:main.c        ****                     turnFinishedFlag = 1;
 1628              		.loc 1 559 0 is_stmt 1
 1629 016a 364B     		ldr	r3, .L119+24
 1630 016c 0122     		movs	r2, #1
 1631 016e 1A70     		strb	r2, [r3]
 560:main.c        ****                     return Stop;
 1632              		.loc 1 560 0
 1633 0170 0523     		movs	r3, #5
 1634 0172 57E0     		b	.L89
 1635              	.L103:
 561:main.c        ****                 }
 562:main.c        ****                 else
 563:main.c        ****                 {
 564:main.c        ****                     return TurnRight;
 1636              		.loc 1 564 0
 1637 0174 0123     		movs	r3, #1
 1638 0176 55E0     		b	.L89
 1639              	.L102:
 565:main.c        ****                 }
 566:main.c        ****             }
 567:main.c        ****             
 568:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 569:main.c        ****             if (!s4) {
 1640              		.loc 1 569 0
 1641 0178 314B     		ldr	r3, .L119+20
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 40


 1642 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 017c 002B     		cmp	r3, #0
 1644 017e 01D1     		bne	.L104
 570:main.c        ****                 return TurnRight;
 1645              		.loc 1 570 0
 1646 0180 0123     		movs	r3, #1
 1647 0182 4FE0     		b	.L89
 1648              	.L104:
 571:main.c        ****             }
 572:main.c        ****             
 573:main.c        ****             // Otherwise, keep going forward
 574:main.c        ****             return ForwardCourseCorrection(); 
 1649              		.loc 1 574 0
 1650 0184 FFF7FEFF 		bl	ForwardCourseCorrection
 1651 0188 0346     		mov	r3, r0
 1652 018a 4BE0     		b	.L89
 1653              	.L86:
 575:main.c        ****             break;
 576:main.c        ****         case ForwardUntilTarget:
 577:main.c        ****             // Reset distance on first iteration of this instruction
 578:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1654              		.loc 1 578 0
 1655 018c 324B     		ldr	r3, .L119+44
 1656 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 0190 002B     		cmp	r3, #0
 1658 0192 09D1     		bne	.L105
 579:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1659              		.loc 1 579 0
 1660 0194 304B     		ldr	r3, .L119+44
 1661 0196 0122     		movs	r2, #1
 1662 0198 1A70     		strb	r2, [r3]
 580:main.c        ****                 totalDistance = 0;
 1663              		.loc 1 580 0
 1664 019a 304B     		ldr	r3, .L119+48
 1665 019c 4FF00002 		mov	r2, #0
 1666 01a0 1A60     		str	r2, [r3]	@ float
 581:main.c        ****                 // Depending on the robot orientation
 582:main.c        ****                 // Check for Row, Col that target is in
 583:main.c        ****                 // Check how many 8s lead up to nine (reset 8 count if consecutive broken otherwise
 584:main.c        ****                 // get blocksizetotal count
 585:main.c        ****                 //blockSizeTotal = 127.5 * 6;
 586:main.c        ****                 blockSizeTotal = 765;
 1667              		.loc 1 586 0
 1668 01a2 2F4B     		ldr	r3, .L119+52
 1669 01a4 2F4A     		ldr	r2, .L119+56
 1670 01a6 1A60     		str	r2, [r3]	@ float
 1671              	.L105:
 587:main.c        ****             }
 588:main.c        ****             
 589:main.c        ****             if (totalDistance >= 765) {
 1672              		.loc 1 589 0
 1673 01a8 2C4B     		ldr	r3, .L119+48
 1674 01aa 1B68     		ldr	r3, [r3]	@ float
 1675 01ac 2D49     		ldr	r1, .L119+56
 1676 01ae 1846     		mov	r0, r3
 1677 01b0 FFF7FEFF 		bl	__aeabi_fcmpge
 1678 01b4 0346     		mov	r3, r0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 41


 1679 01b6 002B     		cmp	r3, #0
 1680 01b8 01D0     		beq	.L116
 590:main.c        ****                 return TurnLeft;    
 1681              		.loc 1 590 0
 1682 01ba 0223     		movs	r3, #2
 1683 01bc 32E0     		b	.L89
 1684              	.L116:
 591:main.c        ****             }
 592:main.c        ****             
 593:main.c        ****             if (blockSizeTotal == 0) {
 1685              		.loc 1 593 0
 1686 01be 284B     		ldr	r3, .L119+52
 1687 01c0 1B68     		ldr	r3, [r3]	@ float
 1688 01c2 4FF00001 		mov	r1, #0
 1689 01c6 1846     		mov	r0, r3
 1690 01c8 FFF7FEFF 		bl	__aeabi_fcmpeq
 1691 01cc 0346     		mov	r3, r0
 1692 01ce 002B     		cmp	r3, #0
 1693 01d0 01D0     		beq	.L117
 594:main.c        ****                 return Backward;    
 1694              		.loc 1 594 0
 1695 01d2 0923     		movs	r3, #9
 1696 01d4 26E0     		b	.L89
 1697              	.L117:
 595:main.c        ****             }
 596:main.c        ****             
 597:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 598:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1698              		.loc 1 598 0
 1699 01d6 214B     		ldr	r3, .L119+48
 1700 01d8 1A68     		ldr	r2, [r3]	@ float
 1701 01da 214B     		ldr	r3, .L119+52
 1702 01dc 1B68     		ldr	r3, [r3]	@ float
 1703 01de 1946     		mov	r1, r3
 1704 01e0 1046     		mov	r0, r2
 1705 01e2 FFF7FEFF 		bl	__aeabi_fcmpge
 1706 01e6 0346     		mov	r3, r0
 1707 01e8 002B     		cmp	r3, #0
 1708 01ea 0ED0     		beq	.L118
 599:main.c        ****                 // Reset flags
 600:main.c        ****                 totalDistance = 0;
 1709              		.loc 1 600 0
 1710 01ec 1B4B     		ldr	r3, .L119+48
 1711 01ee 4FF00002 		mov	r2, #0
 1712 01f2 1A60     		str	r2, [r3]	@ float
 601:main.c        ****                 forwardUntilTargetStartedFlag = 0;
 1713              		.loc 1 601 0
 1714 01f4 184B     		ldr	r3, .L119+44
 1715 01f6 0022     		movs	r2, #0
 1716 01f8 1A70     		strb	r2, [r3]
 602:main.c        ****                 blockSizeTotal = 0;
 1717              		.loc 1 602 0
 1718 01fa 194B     		ldr	r3, .L119+52
 1719 01fc 4FF00002 		mov	r2, #0
 1720 0200 1A60     		str	r2, [r3]	@ float
 603:main.c        ****                 // Get next instruction
 604:main.c        ****                 MoveToNextInstruction();
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 42


 1721              		.loc 1 604 0
 1722 0202 FFF7FEFF 		bl	MoveToNextInstruction
 605:main.c        ****                 return Stop;
 1723              		.loc 1 605 0
 1724 0206 0523     		movs	r3, #5
 1725 0208 0CE0     		b	.L89
 1726              	.L118:
 606:main.c        ****             }
 607:main.c        ****             
 608:main.c        ****             return ForwardCourseCorrection();
 1727              		.loc 1 608 0
 1728 020a FFF7FEFF 		bl	ForwardCourseCorrection
 1729 020e 0346     		mov	r3, r0
 1730 0210 08E0     		b	.L89
 1731              	.L87:
 609:main.c        ****             break;
 610:main.c        ****         case StopAtTarget:
 611:main.c        ****             if (stopBuffer <= 100) {
 1732              		.loc 1 611 0
 1733 0212 0E4B     		ldr	r3, .L119+32
 1734 0214 1B68     		ldr	r3, [r3]
 1735 0216 642B     		cmp	r3, #100
 1736 0218 01D8     		bhi	.L112
 612:main.c        ****                 return Stop;    
 1737              		.loc 1 612 0
 1738 021a 0523     		movs	r3, #5
 1739 021c 02E0     		b	.L89
 1740              	.L112:
 613:main.c        ****             }
 614:main.c        ****             return Backward;
 1741              		.loc 1 614 0
 1742 021e 0923     		movs	r3, #9
 1743 0220 00E0     		b	.L89
 1744              	.L81:
 615:main.c        ****             break;
 616:main.c        ****         default:
 617:main.c        ****             return Stop;
 1745              		.loc 1 617 0
 1746 0222 0523     		movs	r3, #5
 1747              	.L89:
 618:main.c        ****             break;
 619:main.c        ****     }
 620:main.c        ****     return Stop;
 621:main.c        **** }
 1748              		.loc 1 621 0
 1749 0224 1846     		mov	r0, r3
 1750 0226 0837     		adds	r7, r7, #8
 1751              		.cfi_def_cfa_offset 8
 1752 0228 BD46     		mov	sp, r7
 1753              		.cfi_def_cfa_register 13
 1754              		@ sp needed
 1755 022a 80BD     		pop	{r7, pc}
 1756              	.L120:
 1757              		.align	2
 1758              	.L119:
 1759 022c 00000000 		.word	currentOrientation
 1760 0230 00000000 		.word	yBlocksize
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 43


 1761 0234 00000000 		.word	xBlocksize
 1762 0238 00000000 		.word	currentInstruction
 1763 023c 00000000 		.word	s3
 1764 0240 00000000 		.word	s4
 1765 0244 00000000 		.word	turnFinishedFlag
 1766 0248 00000000 		.word	currentDirection
 1767 024c 00000000 		.word	stopBuffer
 1768 0250 00000000 		.word	s5
 1769 0254 00000000 		.word	s6
 1770 0258 00000000 		.word	forwardUntilTargetStartedFlag
 1771 025c 00000000 		.word	totalDistance
 1772 0260 00000000 		.word	blockSizeTotal
 1773 0264 00403F44 		.word	1144995840
 1774              		.cfi_endproc
 1775              	.LFE75:
 1776              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1777              		.section	.text.MoveToNextInstruction,"ax",%progbits
 1778              		.align	2
 1779              		.global	MoveToNextInstruction
 1780              		.thumb
 1781              		.thumb_func
 1782              		.type	MoveToNextInstruction, %function
 1783              	MoveToNextInstruction:
 1784              	.LFB76:
 622:main.c        **** // get next instruction
 623:main.c        **** 
 624:main.c        **** void MoveToNextInstruction() {
 1785              		.loc 1 624 0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 0
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789              		@ link register save eliminated.
 1790 0000 80B4     		push	{r7}
 1791              		.cfi_def_cfa_offset 4
 1792              		.cfi_offset 7, -4
 1793 0002 00AF     		add	r7, sp, #0
 1794              		.cfi_def_cfa_register 7
 625:main.c        ****     instructionIndex++;
 1795              		.loc 1 625 0
 1796 0004 044B     		ldr	r3, .L122
 1797 0006 1B68     		ldr	r3, [r3]
 1798 0008 0133     		adds	r3, r3, #1
 1799 000a 034A     		ldr	r2, .L122
 1800 000c 1360     		str	r3, [r2]
 626:main.c        **** }
 1801              		.loc 1 626 0
 1802 000e 00BF     		nop
 1803 0010 BD46     		mov	sp, r7
 1804              		.cfi_def_cfa_register 13
 1805              		@ sp needed
 1806 0012 80BC     		pop	{r7}
 1807              		.cfi_restore 7
 1808              		.cfi_def_cfa_offset 0
 1809 0014 7047     		bx	lr
 1810              	.L123:
 1811 0016 00BF     		.align	2
 1812              	.L122:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 44


 1813 0018 00000000 		.word	instructionIndex
 1814              		.cfi_endproc
 1815              	.LFE76:
 1816              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 1817              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 1818              		.align	2
 1819              		.global	GetInstructionAtIndex
 1820              		.thumb
 1821              		.thumb_func
 1822              		.type	GetInstructionAtIndex, %function
 1823              	GetInstructionAtIndex:
 1824              	.LFB77:
 627:main.c        **** 
 628:main.c        **** 
 629:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
 1825              		.loc 1 629 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 32
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830 0000 90B4     		push	{r4, r7}
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 4, -8
 1833              		.cfi_offset 7, -4
 1834 0002 88B0     		sub	sp, sp, #32
 1835              		.cfi_def_cfa_offset 40
 1836 0004 00AF     		add	r7, sp, #0
 1837              		.cfi_def_cfa_register 7
 1838 0006 F860     		str	r0, [r7, #12]
 1839 0008 B960     		str	r1, [r7, #8]
 1840 000a 7A60     		str	r2, [r7, #4]
 1841 000c 3B60     		str	r3, [r7]
 1842              	.LBB3:
 630:main.c        ****     Instruction nextInstruction;
 631:main.c        ****     // input is list of instructions and robot will react accordingly
 632:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 1843              		.loc 1 632 0
 1844 000e 3B68     		ldr	r3, [r7]
 1845 0010 FB61     		str	r3, [r7, #28]
 1846 0012 36E0     		b	.L125
 1847              	.L128:
 633:main.c        ****         if(instructionList[i].direction != Skip) {
 1848              		.loc 1 633 0
 1849 0014 FA69     		ldr	r2, [r7, #28]
 1850 0016 1346     		mov	r3, r2
 1851 0018 5B00     		lsls	r3, r3, #1
 1852 001a 1344     		add	r3, r3, r2
 1853 001c 9B00     		lsls	r3, r3, #2
 1854 001e 1A46     		mov	r2, r3
 1855 0020 7B68     		ldr	r3, [r7, #4]
 1856 0022 1344     		add	r3, r3, r2
 1857 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 0026 062B     		cmp	r3, #6
 1859 0028 26D0     		beq	.L126
 634:main.c        ****             nextInstruction.direction = instructionList[i].direction;
 1860              		.loc 1 634 0
 1861 002a FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 45


 1862 002c 1346     		mov	r3, r2
 1863 002e 5B00     		lsls	r3, r3, #1
 1864 0030 1344     		add	r3, r3, r2
 1865 0032 9B00     		lsls	r3, r3, #2
 1866 0034 1A46     		mov	r2, r3
 1867 0036 7B68     		ldr	r3, [r7, #4]
 1868 0038 1344     		add	r3, r3, r2
 1869 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1870 003c 3B74     		strb	r3, [r7, #16]
 635:main.c        ****             nextInstruction.ignoreL = instructionList[i].ignoreL;
 1871              		.loc 1 635 0
 1872 003e FA69     		ldr	r2, [r7, #28]
 1873 0040 1346     		mov	r3, r2
 1874 0042 5B00     		lsls	r3, r3, #1
 1875 0044 1344     		add	r3, r3, r2
 1876 0046 9B00     		lsls	r3, r3, #2
 1877 0048 1A46     		mov	r2, r3
 1878 004a 7B68     		ldr	r3, [r7, #4]
 1879 004c 1344     		add	r3, r3, r2
 1880 004e 5B68     		ldr	r3, [r3, #4]
 1881 0050 7B61     		str	r3, [r7, #20]
 636:main.c        ****             nextInstruction.ignoreR = instructionList[i].ignoreR;
 1882              		.loc 1 636 0
 1883 0052 FA69     		ldr	r2, [r7, #28]
 1884 0054 1346     		mov	r3, r2
 1885 0056 5B00     		lsls	r3, r3, #1
 1886 0058 1344     		add	r3, r3, r2
 1887 005a 9B00     		lsls	r3, r3, #2
 1888 005c 1A46     		mov	r2, r3
 1889 005e 7B68     		ldr	r3, [r7, #4]
 1890 0060 1344     		add	r3, r3, r2
 1891 0062 9B68     		ldr	r3, [r3, #8]
 1892 0064 BB61     		str	r3, [r7, #24]
 637:main.c        ****             return nextInstruction; // return next instruction
 1893              		.loc 1 637 0
 1894 0066 FB68     		ldr	r3, [r7, #12]
 1895 0068 1C46     		mov	r4, r3
 1896 006a 07F11003 		add	r3, r7, #16
 1897 006e 93E80700 		ldmia	r3, {r0, r1, r2}
 1898 0072 84E80700 		stmia	r4, {r0, r1, r2}
 1899 0076 10E0     		b	.L124
 1900              	.L126:
 638:main.c        ****         }
 639:main.c        ****         instructionIndex = i;
 1901              		.loc 1 639 0 discriminator 2
 1902 0078 FB69     		ldr	r3, [r7, #28]
 1903 007a 3B60     		str	r3, [r7]
 632:main.c        ****         if(instructionList[i].direction != Skip) {
 1904              		.loc 1 632 0 discriminator 2
 1905 007c FB69     		ldr	r3, [r7, #28]
 1906 007e 0133     		adds	r3, r3, #1
 1907 0080 FB61     		str	r3, [r7, #28]
 1908              	.L125:
 632:main.c        ****         if(instructionList[i].direction != Skip) {
 1909              		.loc 1 632 0 is_stmt 0 discriminator 1
 1910 0082 FA69     		ldr	r2, [r7, #28]
 1911 0084 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 46


 1912 0086 9A42     		cmp	r2, r3
 1913 0088 C4DB     		blt	.L128
 1914              	.LBE3:
 640:main.c        ****     }
 641:main.c        ****     return nextInstruction;
 1915              		.loc 1 641 0 is_stmt 1
 1916 008a FB68     		ldr	r3, [r7, #12]
 1917 008c 1C46     		mov	r4, r3
 1918 008e 07F11003 		add	r3, r7, #16
 1919 0092 93E80700 		ldmia	r3, {r0, r1, r2}
 1920 0096 84E80700 		stmia	r4, {r0, r1, r2}
 1921              	.L124:
 642:main.c        **** }
 1922              		.loc 1 642 0
 1923 009a F868     		ldr	r0, [r7, #12]
 1924 009c 2037     		adds	r7, r7, #32
 1925              		.cfi_def_cfa_offset 8
 1926 009e BD46     		mov	sp, r7
 1927              		.cfi_def_cfa_register 13
 1928              		@ sp needed
 1929 00a0 90BC     		pop	{r4, r7}
 1930              		.cfi_restore 7
 1931              		.cfi_restore 4
 1932              		.cfi_def_cfa_offset 0
 1933 00a2 7047     		bx	lr
 1934              		.cfi_endproc
 1935              	.LFE77:
 1936              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 1937              		.section	.text.SetRobotMovement,"ax",%progbits
 1938              		.align	2
 1939              		.global	SetRobotMovement
 1940              		.thumb
 1941              		.thumb_func
 1942              		.type	SetRobotMovement, %function
 1943              	SetRobotMovement:
 1944              	.LFB78:
 643:main.c        **** 
 644:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 645:main.c        **** void SetRobotMovement() {
 1945              		.loc 1 645 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 16
 1948              		@ frame_needed = 1, uses_anonymous_args = 0
 1949 0000 90B5     		push	{r4, r7, lr}
 1950              		.cfi_def_cfa_offset 12
 1951              		.cfi_offset 4, -12
 1952              		.cfi_offset 7, -8
 1953              		.cfi_offset 14, -4
 1954 0002 85B0     		sub	sp, sp, #20
 1955              		.cfi_def_cfa_offset 32
 1956 0004 00AF     		add	r7, sp, #0
 1957              		.cfi_def_cfa_register 7
 646:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList, instructionIndex); // get
 1958              		.loc 1 646 0
 1959 0006 294B     		ldr	r3, .L145
 1960 0008 1968     		ldr	r1, [r3]
 1961 000a 294B     		ldr	r3, .L145+4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 47


 1962 000c 1A68     		ldr	r2, [r3]
 1963 000e 294B     		ldr	r3, .L145+8
 1964 0010 1B68     		ldr	r3, [r3]
 1965 0012 294C     		ldr	r4, .L145+12
 1966 0014 3846     		mov	r0, r7
 1967 0016 FFF7FEFF 		bl	GetInstructionAtIndex
 1968 001a 3B46     		mov	r3, r7
 1969 001c 93E80700 		ldmia	r3, {r0, r1, r2}
 1970 0020 84E80700 		stmia	r4, {r0, r1, r2}
 647:main.c        ****     previousDirection = currentDirection;
 1971              		.loc 1 647 0
 1972 0024 254B     		ldr	r3, .L145+16
 1973 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1974 0028 254B     		ldr	r3, .L145+20
 1975 002a 1A70     		strb	r2, [r3]
 648:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 1976              		.loc 1 648 0
 1977 002c FFF7FEFF 		bl	GetMovementAccordingToInstruction
 1978 0030 0346     		mov	r3, r0
 1979 0032 1A46     		mov	r2, r3
 1980 0034 214B     		ldr	r3, .L145+16
 1981 0036 1A70     		strb	r2, [r3]
 649:main.c        ****     // move robot depending on sensors
 650:main.c        ****     switch (currentDirection) {
 1982              		.loc 1 650 0
 1983 0038 204B     		ldr	r3, .L145+16
 1984 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1985 003c 092B     		cmp	r3, #9
 1986 003e 30D8     		bhi	.L143
 1987 0040 01A2     		adr	r2, .L133
 1988 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1989 0046 00BF     		.p2align 2
 1990              	.L133:
 1991 0048 71000000 		.word	.L132+1
 1992 004c 77000000 		.word	.L134+1
 1993 0050 7D000000 		.word	.L135+1
 1994 0054 89000000 		.word	.L136+1
 1995 0058 83000000 		.word	.L137+1
 1996 005c 8F000000 		.word	.L138+1
 1997 0060 A1000000 		.word	.L144+1
 1998 0064 A1000000 		.word	.L144+1
 1999 0068 95000000 		.word	.L141+1
 2000 006c 9B000000 		.word	.L142+1
 2001              		.p2align 1
 2002              	.L132:
 651:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 652:main.c        ****         case Forward:
 653:main.c        ****             moveForward();
 2003              		.loc 1 653 0
 2004 0070 FFF7FEFF 		bl	moveForward
 654:main.c        ****             break;
 2005              		.loc 1 654 0
 2006 0074 15E0     		b	.L131
 2007              	.L134:
 655:main.c        ****         case TurnRight:
 656:main.c        ****             turnRight();
 2008              		.loc 1 656 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 48


 2009 0076 FFF7FEFF 		bl	turnRight
 657:main.c        ****             break;
 2010              		.loc 1 657 0
 2011 007a 12E0     		b	.L131
 2012              	.L135:
 658:main.c        ****         case TurnLeft:
 659:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2013              		.loc 1 659 0
 2014 007c FFF7FEFF 		bl	turnLeft
 660:main.c        ****             break;
 2015              		.loc 1 660 0
 2016 0080 0FE0     		b	.L131
 2017              	.L137:
 661:main.c        ****         case AdjustToTheRight:
 662:main.c        ****             adjustRight();
 2018              		.loc 1 662 0
 2019 0082 FFF7FEFF 		bl	adjustRight
 663:main.c        ****             break;
 2020              		.loc 1 663 0
 2021 0086 0CE0     		b	.L131
 2022              	.L136:
 664:main.c        ****         case AdjustToTheLeft:
 665:main.c        ****             adjustLeft();
 2023              		.loc 1 665 0
 2024 0088 FFF7FEFF 		bl	adjustLeft
 666:main.c        ****             break;
 2025              		.loc 1 666 0
 2026 008c 09E0     		b	.L131
 2027              	.L138:
 667:main.c        ****         case Stop:
 668:main.c        ****             stopMoving();
 2028              		.loc 1 668 0
 2029 008e FFF7FEFF 		bl	stopMoving
 669:main.c        ****             break;
 2030              		.loc 1 669 0
 2031 0092 06E0     		b	.L131
 2032              	.L141:
 670:main.c        ****         case ForwardAfterTurn:
 671:main.c        ****             moveForward();
 2033              		.loc 1 671 0
 2034 0094 FFF7FEFF 		bl	moveForward
 672:main.c        ****             break;
 2035              		.loc 1 672 0
 2036 0098 03E0     		b	.L131
 2037              	.L142:
 673:main.c        ****         case Backward:
 674:main.c        ****             moveBackward();
 2038              		.loc 1 674 0
 2039 009a FFF7FEFF 		bl	moveBackward
 675:main.c        ****             break;
 2040              		.loc 1 675 0
 2041 009e 00E0     		b	.L131
 2042              	.L144:
 676:main.c        ****         case waitForTurn:
 677:main.c        ****             break;
 678:main.c        ****         /*case waitForLeftTurn:
 679:main.c        ****             moveForward();
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 49


 680:main.c        ****             break;
 681:main.c        ****         case waitForRightTurn:
 682:main.c        ****             moveForward();
 683:main.c        ****             break;*/
 684:main.c        ****         case Unknown:
 685:main.c        ****             // UNKNOWN CONFIGURATION
 686:main.c        ****             break;  
 2043              		.loc 1 686 0
 2044 00a0 00BF     		nop
 2045              	.L131:
 2046              	.L143:
 687:main.c        ****     }
 688:main.c        **** }...
 2047              		.loc 1 688 0
 2048 00a2 00BF     		nop
 2049 00a4 1437     		adds	r7, r7, #20
 2050              		.cfi_def_cfa_offset 12
 2051 00a6 BD46     		mov	sp, r7
 2052              		.cfi_def_cfa_register 13
 2053              		@ sp needed
 2054 00a8 90BD     		pop	{r4, r7, pc}
 2055              	.L146:
 2056 00aa 00BF     		.align	2
 2057              	.L145:
 2058 00ac 00000000 		.word	numSteps
 2059 00b0 00000000 		.word	instructionList
 2060 00b4 00000000 		.word	instructionIndex
 2061 00b8 00000000 		.word	currentInstruction
 2062 00bc 00000000 		.word	currentDirection
 2063 00c0 00000000 		.word	previousDirection
 2064              		.cfi_endproc
 2065              	.LFE78:
 2066              		.size	SetRobotMovement, .-SetRobotMovement
 2067              		.text
 2068              	.Letext0:
 2069              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2070              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2071              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2072              		.file 5 "vars.h"
 2073              		.file 6 "pathfinding.h"
 2074              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2075              		.file 8 "map.h"
 2076              		.section	.debug_info,"",%progbits
 2077              	.Ldebug_info0:
 2078 0000 4E080000 		.4byte	0x84e
 2079 0004 0400     		.2byte	0x4
 2080 0006 00000000 		.4byte	.Ldebug_abbrev0
 2081 000a 04       		.byte	0x4
 2082 000b 01       		.uleb128 0x1
 2083 000c 82000000 		.4byte	.LASF131
 2084 0010 0C       		.byte	0xc
 2085 0011 30000000 		.4byte	.LASF132
 2086 0015 44050000 		.4byte	.LASF133
 2087 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2088 001d 00000000 		.4byte	0
 2089 0021 00000000 		.4byte	.Ldebug_line0
 2090 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 50


 2091 0026 01       		.byte	0x1
 2092 0027 06       		.byte	0x6
 2093 0028 61060000 		.4byte	.LASF0
 2094 002c 02       		.uleb128 0x2
 2095 002d 01       		.byte	0x1
 2096 002e 08       		.byte	0x8
 2097 002f D1050000 		.4byte	.LASF1
 2098 0033 02       		.uleb128 0x2
 2099 0034 02       		.byte	0x2
 2100 0035 05       		.byte	0x5
 2101 0036 95040000 		.4byte	.LASF2
 2102 003a 02       		.uleb128 0x2
 2103 003b 02       		.byte	0x2
 2104 003c 07       		.byte	0x7
 2105 003d 78060000 		.4byte	.LASF3
 2106 0041 03       		.uleb128 0x3
 2107 0042 55000000 		.4byte	.LASF12
 2108 0046 02       		.byte	0x2
 2109 0047 3F       		.byte	0x3f
 2110 0048 4C000000 		.4byte	0x4c
 2111 004c 02       		.uleb128 0x2
 2112 004d 04       		.byte	0x4
 2113 004e 05       		.byte	0x5
 2114 004f B7040000 		.4byte	.LASF4
 2115 0053 02       		.uleb128 0x2
 2116 0054 04       		.byte	0x4
 2117 0055 07       		.byte	0x7
 2118 0056 8D050000 		.4byte	.LASF5
 2119 005a 02       		.uleb128 0x2
 2120 005b 08       		.byte	0x8
 2121 005c 05       		.byte	0x5
 2122 005d 7A030000 		.4byte	.LASF6
 2123 0061 02       		.uleb128 0x2
 2124 0062 08       		.byte	0x8
 2125 0063 07       		.byte	0x7
 2126 0064 13020000 		.4byte	.LASF7
 2127 0068 04       		.uleb128 0x4
 2128 0069 04       		.byte	0x4
 2129 006a 05       		.byte	0x5
 2130 006b 696E7400 		.ascii	"int\000"
 2131 006f 02       		.uleb128 0x2
 2132 0070 04       		.byte	0x4
 2133 0071 07       		.byte	0x7
 2134 0072 48000000 		.4byte	.LASF8
 2135 0076 02       		.uleb128 0x2
 2136 0077 08       		.byte	0x8
 2137 0078 04       		.byte	0x4
 2138 0079 59040000 		.4byte	.LASF9
 2139 007d 02       		.uleb128 0x2
 2140 007e 04       		.byte	0x4
 2141 007f 07       		.byte	0x7
 2142 0080 84050000 		.4byte	.LASF10
 2143 0084 02       		.uleb128 0x2
 2144 0085 01       		.byte	0x1
 2145 0086 08       		.byte	0x8
 2146 0087 F6020000 		.4byte	.LASF11
 2147 008b 03       		.uleb128 0x3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 51


 2148 008c AA050000 		.4byte	.LASF13
 2149 0090 03       		.byte	0x3
 2150 0091 2C       		.byte	0x2c
 2151 0092 41000000 		.4byte	0x41
 2152 0096 05       		.uleb128 0x5
 2153 0097 CE060000 		.4byte	.LASF14
 2154 009b 04       		.byte	0x4
 2155 009c E701     		.2byte	0x1e7
 2156 009e 2C000000 		.4byte	0x2c
 2157 00a2 05       		.uleb128 0x5
 2158 00a3 25030000 		.4byte	.LASF15
 2159 00a7 04       		.byte	0x4
 2160 00a8 E801     		.2byte	0x1e8
 2161 00aa 3A000000 		.4byte	0x3a
 2162 00ae 05       		.uleb128 0x5
 2163 00af 09040000 		.4byte	.LASF16
 2164 00b3 04       		.byte	0x4
 2165 00b4 E901     		.2byte	0x1e9
 2166 00b6 53000000 		.4byte	0x53
 2167 00ba 05       		.uleb128 0x5
 2168 00bb 2C030000 		.4byte	.LASF17
 2169 00bf 04       		.byte	0x4
 2170 00c0 EA01     		.2byte	0x1ea
 2171 00c2 25000000 		.4byte	0x25
 2172 00c6 05       		.uleb128 0x5
 2173 00c7 5F000000 		.4byte	.LASF18
 2174 00cb 04       		.byte	0x4
 2175 00cc EB01     		.2byte	0x1eb
 2176 00ce 33000000 		.4byte	0x33
 2177 00d2 02       		.uleb128 0x2
 2178 00d3 04       		.byte	0x4
 2179 00d4 04       		.byte	0x4
 2180 00d5 DB010000 		.4byte	.LASF19
 2181 00d9 02       		.uleb128 0x2
 2182 00da 08       		.byte	0x8
 2183 00db 04       		.byte	0x4
 2184 00dc D4060000 		.4byte	.LASF20
 2185 00e0 06       		.uleb128 0x6
 2186 00e1 2B040000 		.4byte	.LASF45
 2187 00e5 20       		.byte	0x20
 2188 00e6 05       		.byte	0x5
 2189 00e7 28       		.byte	0x28
 2190 00e8 B9010000 		.4byte	0x1b9
 2191 00ec 07       		.uleb128 0x7
 2192 00ed 35040000 		.4byte	.LASF21
 2193 00f1 05       		.byte	0x5
 2194 00f2 2A       		.byte	0x2a
 2195 00f3 BA000000 		.4byte	0xba
 2196 00f7 00       		.byte	0
 2197 00f8 07       		.uleb128 0x7
 2198 00f9 0D020000 		.4byte	.LASF22
 2199 00fd 05       		.byte	0x5
 2200 00fe 2B       		.byte	0x2b
 2201 00ff 96000000 		.4byte	0x96
 2202 0103 01       		.byte	0x1
 2203 0104 07       		.uleb128 0x7
 2204 0105 B2050000 		.4byte	.LASF23
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 52


 2205 0109 05       		.byte	0x5
 2206 010a 2C       		.byte	0x2c
 2207 010b C6000000 		.4byte	0xc6
 2208 010f 02       		.byte	0x2
 2209 0110 07       		.uleb128 0x7
 2210 0111 CD020000 		.4byte	.LASF24
 2211 0115 05       		.byte	0x5
 2212 0116 2D       		.byte	0x2d
 2213 0117 C6000000 		.4byte	0xc6
 2214 011b 04       		.byte	0x4
 2215 011c 07       		.uleb128 0x7
 2216 011d 8B060000 		.4byte	.LASF25
 2217 0121 05       		.byte	0x5
 2218 0122 2E       		.byte	0x2e
 2219 0123 C6000000 		.4byte	0xc6
 2220 0127 06       		.byte	0x6
 2221 0128 07       		.uleb128 0x7
 2222 0129 FB060000 		.4byte	.LASF26
 2223 012d 05       		.byte	0x5
 2224 012e 2F       		.byte	0x2f
 2225 012f C6000000 		.4byte	0xc6
 2226 0133 08       		.byte	0x8
 2227 0134 07       		.uleb128 0x7
 2228 0135 CE030000 		.4byte	.LASF27
 2229 0139 05       		.byte	0x5
 2230 013a 30       		.byte	0x30
 2231 013b C6000000 		.4byte	0xc6
 2232 013f 0A       		.byte	0xa
 2233 0140 07       		.uleb128 0x7
 2234 0141 FB020000 		.4byte	.LASF28
 2235 0145 05       		.byte	0x5
 2236 0146 31       		.byte	0x31
 2237 0147 C6000000 		.4byte	0xc6
 2238 014b 0C       		.byte	0xc
 2239 014c 07       		.uleb128 0x7
 2240 014d 3A040000 		.4byte	.LASF29
 2241 0151 05       		.byte	0x5
 2242 0152 32       		.byte	0x32
 2243 0153 C6000000 		.4byte	0xc6
 2244 0157 0E       		.byte	0xe
 2245 0158 07       		.uleb128 0x7
 2246 0159 88030000 		.4byte	.LASF30
 2247 015d 05       		.byte	0x5
 2248 015e 33       		.byte	0x33
 2249 015f C6000000 		.4byte	0xc6
 2250 0163 10       		.byte	0x10
 2251 0164 07       		.uleb128 0x7
 2252 0165 2B050000 		.4byte	.LASF31
 2253 0169 05       		.byte	0x5
 2254 016a 34       		.byte	0x34
 2255 016b C6000000 		.4byte	0xc6
 2256 016f 12       		.byte	0x12
 2257 0170 07       		.uleb128 0x7
 2258 0171 1B070000 		.4byte	.LASF32
 2259 0175 05       		.byte	0x5
 2260 0176 35       		.byte	0x35
 2261 0177 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 53


 2262 017b 14       		.byte	0x14
 2263 017c 07       		.uleb128 0x7
 2264 017d 3C030000 		.4byte	.LASF33
 2265 0181 05       		.byte	0x5
 2266 0182 36       		.byte	0x36
 2267 0183 C6000000 		.4byte	0xc6
 2268 0187 16       		.byte	0x16
 2269 0188 07       		.uleb128 0x7
 2270 0189 2A010000 		.4byte	.LASF34
 2271 018d 05       		.byte	0x5
 2272 018e 37       		.byte	0x37
 2273 018f C6000000 		.4byte	0xc6
 2274 0193 18       		.byte	0x18
 2275 0194 07       		.uleb128 0x7
 2276 0195 F1040000 		.4byte	.LASF35
 2277 0199 05       		.byte	0x5
 2278 019a 38       		.byte	0x38
 2279 019b C6000000 		.4byte	0xc6
 2280 019f 1A       		.byte	0x1a
 2281 01a0 07       		.uleb128 0x7
 2282 01a1 C5030000 		.4byte	.LASF36
 2283 01a5 05       		.byte	0x5
 2284 01a6 39       		.byte	0x39
 2285 01a7 C6000000 		.4byte	0xc6
 2286 01ab 1C       		.byte	0x1c
 2287 01ac 07       		.uleb128 0x7
 2288 01ad C0010000 		.4byte	.LASF37
 2289 01b1 05       		.byte	0x5
 2290 01b2 3A       		.byte	0x3a
 2291 01b3 C6000000 		.4byte	0xc6
 2292 01b7 1E       		.byte	0x1e
 2293 01b8 00       		.byte	0
 2294 01b9 08       		.uleb128 0x8
 2295 01ba 1B000000 		.4byte	.LASF50
 2296 01be 01       		.byte	0x1
 2297 01bf 2C000000 		.4byte	0x2c
 2298 01c3 06       		.byte	0x6
 2299 01c4 0D       		.byte	0xd
 2300 01c5 F4010000 		.4byte	0x1f4
 2301 01c9 09       		.uleb128 0x9
 2302 01ca 4B060000 		.4byte	.LASF38
 2303 01ce 00       		.byte	0
 2304 01cf 09       		.uleb128 0x9
 2305 01d0 6A030000 		.4byte	.LASF39
 2306 01d4 01       		.byte	0x1
 2307 01d5 09       		.uleb128 0x9
 2308 01d6 10040000 		.4byte	.LASF40
 2309 01da 02       		.byte	0x2
 2310 01db 09       		.uleb128 0x9
 2311 01dc B3030000 		.4byte	.LASF41
 2312 01e0 03       		.byte	0x3
 2313 01e1 09       		.uleb128 0x9
 2314 01e2 6A020000 		.4byte	.LASF42
 2315 01e6 04       		.byte	0x4
 2316 01e7 09       		.uleb128 0x9
 2317 01e8 B4020000 		.4byte	.LASF43
 2318 01ec 05       		.byte	0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 54


 2319 01ed 09       		.uleb128 0x9
 2320 01ee 38060000 		.4byte	.LASF44
 2321 01f2 06       		.byte	0x6
 2322 01f3 00       		.byte	0
 2323 01f4 06       		.uleb128 0x6
 2324 01f5 2A020000 		.4byte	.LASF46
 2325 01f9 0C       		.byte	0xc
 2326 01fa 06       		.byte	0x6
 2327 01fb 0E       		.byte	0xe
 2328 01fc 25020000 		.4byte	0x225
 2329 0200 07       		.uleb128 0x7
 2330 0201 00000000 		.4byte	.LASF47
 2331 0205 06       		.byte	0x6
 2332 0206 0F       		.byte	0xf
 2333 0207 B9010000 		.4byte	0x1b9
 2334 020b 00       		.byte	0
 2335 020c 07       		.uleb128 0x7
 2336 020d 24070000 		.4byte	.LASF48
 2337 0211 06       		.byte	0x6
 2338 0212 10       		.byte	0x10
 2339 0213 68000000 		.4byte	0x68
 2340 0217 04       		.byte	0x4
 2341 0218 07       		.uleb128 0x7
 2342 0219 2C070000 		.4byte	.LASF49
 2343 021d 06       		.byte	0x6
 2344 021e 11       		.byte	0x11
 2345 021f 68000000 		.4byte	0x68
 2346 0223 08       		.byte	0x8
 2347 0224 00       		.byte	0
 2348 0225 03       		.uleb128 0x3
 2349 0226 2A020000 		.4byte	.LASF46
 2350 022a 06       		.byte	0x6
 2351 022b 12       		.byte	0x12
 2352 022c F4010000 		.4byte	0x1f4
 2353 0230 08       		.uleb128 0x8
 2354 0231 0F050000 		.4byte	.LASF51
 2355 0235 01       		.byte	0x1
 2356 0236 2C000000 		.4byte	0x2c
 2357 023a 06       		.byte	0x6
 2358 023b 14       		.byte	0x14
 2359 023c 58020000 		.4byte	0x258
 2360 0240 0A       		.uleb128 0xa
 2361 0241 557000   		.ascii	"Up\000"
 2362 0244 00       		.byte	0
 2363 0245 09       		.uleb128 0x9
 2364 0246 20050000 		.4byte	.LASF52
 2365 024a 01       		.byte	0x1
 2366 024b 09       		.uleb128 0x9
 2367 024c 49030000 		.4byte	.LASF53
 2368 0250 02       		.byte	0x2
 2369 0251 09       		.uleb128 0x9
 2370 0252 25050000 		.4byte	.LASF54
 2371 0256 03       		.byte	0x3
 2372 0257 00       		.byte	0
 2373 0258 08       		.uleb128 0x8
 2374 0259 C3050000 		.4byte	.LASF55
 2375 025d 01       		.byte	0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 55


 2376 025e 2C000000 		.4byte	0x2c
 2377 0262 01       		.byte	0x1
 2378 0263 18       		.byte	0x18
 2379 0264 A5020000 		.4byte	0x2a5
 2380 0268 09       		.uleb128 0x9
 2381 0269 D7040000 		.4byte	.LASF56
 2382 026d 00       		.byte	0
 2383 026e 09       		.uleb128 0x9
 2384 026f 21040000 		.4byte	.LASF57
 2385 0273 01       		.byte	0x1
 2386 0274 09       		.uleb128 0x9
 2387 0275 E0030000 		.4byte	.LASF58
 2388 0279 02       		.byte	0x2
 2389 027a 09       		.uleb128 0x9
 2390 027b B5060000 		.4byte	.LASF59
 2391 027f 03       		.byte	0x3
 2392 0280 09       		.uleb128 0x9
 2393 0281 F5050000 		.4byte	.LASF60
 2394 0285 04       		.byte	0x4
 2395 0286 09       		.uleb128 0x9
 2396 0287 06060000 		.4byte	.LASF61
 2397 028b 05       		.byte	0x5
 2398 028c 09       		.uleb128 0x9
 2399 028d F2030000 		.4byte	.LASF62
 2400 0291 06       		.byte	0x6
 2401 0292 09       		.uleb128 0x9
 2402 0293 C1020000 		.4byte	.LASF63
 2403 0297 07       		.byte	0x7
 2404 0298 09       		.uleb128 0x9
 2405 0299 0A000000 		.4byte	.LASF64
 2406 029d 08       		.byte	0x8
 2407 029e 09       		.uleb128 0x9
 2408 029f C5060000 		.4byte	.LASF65
 2409 02a3 09       		.byte	0x9
 2410 02a4 00       		.byte	0
 2411 02a5 0B       		.uleb128 0xb
 2412 02a6 4E030000 		.4byte	.LASF73
 2413 02aa 01       		.byte	0x1
 2414 02ab 37       		.byte	0x37
 2415 02ac 00000000 		.4byte	.LFB64
 2416 02b0 EC000000 		.4byte	.LFE64-.LFB64
 2417 02b4 01       		.uleb128 0x1
 2418 02b5 9C       		.byte	0x9c
 2419 02b6 D3020000 		.4byte	0x2d3
 2420 02ba 0C       		.uleb128 0xc
 2421 02bb 50000000 		.4byte	.LBB2
 2422 02bf 62000000 		.4byte	.LBE2-.LBB2
 2423 02c3 0D       		.uleb128 0xd
 2424 02c4 B9030000 		.4byte	.LASF72
 2425 02c8 01       		.byte	0x1
 2426 02c9 44       		.byte	0x44
 2427 02ca D2000000 		.4byte	0xd2
 2428 02ce 02       		.uleb128 0x2
 2429 02cf 91       		.byte	0x91
 2430 02d0 6C       		.sleb128 -20
 2431 02d1 00       		.byte	0
 2432 02d2 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 56


 2433 02d3 0E       		.uleb128 0xe
 2434 02d4 AB040000 		.4byte	.LASF66
 2435 02d8 01       		.byte	0x1
 2436 02d9 4F       		.byte	0x4f
 2437 02da 00000000 		.4byte	.LFB65
 2438 02de 18000000 		.4byte	.LFE65-.LFB65
 2439 02e2 01       		.uleb128 0x1
 2440 02e3 9C       		.byte	0x9c
 2441 02e4 0E       		.uleb128 0xe
 2442 02e5 9F040000 		.4byte	.LASF67
 2443 02e9 01       		.byte	0x1
 2444 02ea 55       		.byte	0x55
 2445 02eb 00000000 		.4byte	.LFB66
 2446 02ef 18000000 		.4byte	.LFE66-.LFB66
 2447 02f3 01       		.uleb128 0x1
 2448 02f4 9C       		.byte	0x9c
 2449 02f5 0E       		.uleb128 0xe
 2450 02f6 55060000 		.4byte	.LASF68
 2451 02fa 01       		.byte	0x1
 2452 02fb 5B       		.byte	0x5b
 2453 02fc 00000000 		.4byte	.LFB67
 2454 0300 18000000 		.4byte	.LFE67-.LFB67
 2455 0304 01       		.uleb128 0x1
 2456 0305 9C       		.byte	0x9c
 2457 0306 0E       		.uleb128 0xe
 2458 0307 10010000 		.4byte	.LASF69
 2459 030b 01       		.byte	0x1
 2460 030c 61       		.byte	0x61
 2461 030d 00000000 		.4byte	.LFB68
 2462 0311 18000000 		.4byte	.LFE68-.LFB68
 2463 0315 01       		.uleb128 0x1
 2464 0316 9C       		.byte	0x9c
 2465 0317 0F       		.uleb128 0xf
 2466 0318 53020000 		.4byte	.LASF70
 2467 031c 01       		.byte	0x1
 2468 031d 67       		.byte	0x67
 2469 031e 00000000 		.4byte	.LFB69
 2470 0322 38000000 		.4byte	.LFE69-.LFB69
 2471 0326 01       		.uleb128 0x1
 2472 0327 9C       		.byte	0x9c
 2473 0328 10       		.uleb128 0x10
 2474 0329 9D060000 		.4byte	.LASF71
 2475 032d 01       		.byte	0x1
 2476 032e 73       		.byte	0x73
 2477 032f 68000000 		.4byte	0x68
 2478 0333 00000000 		.4byte	.LFB70
 2479 0337 C0000000 		.4byte	.LFE70-.LFB70
 2480 033b 01       		.uleb128 0x1
 2481 033c 9C       		.byte	0x9c
 2482 033d 11       		.uleb128 0x11
 2483 033e 98020000 		.4byte	.LASF82
 2484 0342 01       		.byte	0x1
 2485 0343 A1       		.byte	0xa1
 2486 0344 C6000000 		.4byte	0xc6
 2487 0348 00000000 		.4byte	.LFB71
 2488 034c 54000000 		.4byte	.LFE71-.LFB71
 2489 0350 01       		.uleb128 0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 57


 2490 0351 9C       		.byte	0x9c
 2491 0352 81030000 		.4byte	0x381
 2492 0356 12       		.uleb128 0x12
 2493 0357 07020000 		.4byte	.LASF84
 2494 035b 01       		.byte	0x1
 2495 035c A1       		.byte	0xa1
 2496 035d A2000000 		.4byte	0xa2
 2497 0361 02       		.uleb128 0x2
 2498 0362 91       		.byte	0x91
 2499 0363 66       		.sleb128 -26
 2500 0364 13       		.uleb128 0x13
 2501 0365 63707300 		.ascii	"cps\000"
 2502 0369 01       		.byte	0x1
 2503 036a A3       		.byte	0xa3
 2504 036b D2000000 		.4byte	0xd2
 2505 036f 02       		.uleb128 0x2
 2506 0370 91       		.byte	0x91
 2507 0371 6C       		.sleb128 -20
 2508 0372 13       		.uleb128 0x13
 2509 0373 72706D00 		.ascii	"rpm\000"
 2510 0377 01       		.byte	0x1
 2511 0378 A4       		.byte	0xa4
 2512 0379 C6000000 		.4byte	0xc6
 2513 037d 02       		.uleb128 0x2
 2514 037e 91       		.byte	0x91
 2515 037f 6A       		.sleb128 -22
 2516 0380 00       		.byte	0
 2517 0381 14       		.uleb128 0x14
 2518 0382 AF010000 		.4byte	.LASF80
 2519 0386 01       		.byte	0x1
 2520 0387 AC       		.byte	0xac
 2521 0388 00000000 		.4byte	.LFB72
 2522 038c 34000000 		.4byte	.LFE72-.LFB72
 2523 0390 01       		.uleb128 0x1
 2524 0391 9C       		.byte	0x9c
 2525 0392 15       		.uleb128 0x15
 2526 0393 DB060000 		.4byte	.LASF74
 2527 0397 01       		.byte	0x1
 2528 0398 0601     		.2byte	0x106
 2529 039a 58020000 		.4byte	0x258
 2530 039e 00000000 		.4byte	.LFB73
 2531 03a2 90020000 		.4byte	.LFE73-.LFB73
 2532 03a6 01       		.uleb128 0x1
 2533 03a7 9C       		.byte	0x9c
 2534 03a8 CB030000 		.4byte	0x3cb
 2535 03ac 16       		.uleb128 0x16
 2536 03ad 37000000 		.4byte	.LASF75
 2537 03b1 01       		.byte	0x1
 2538 03b2 0701     		.2byte	0x107
 2539 03b4 D2000000 		.4byte	0xd2
 2540 03b8 02       		.uleb128 0x2
 2541 03b9 91       		.byte	0x91
 2542 03ba 74       		.sleb128 -12
 2543 03bb 16       		.uleb128 0x16
 2544 03bc FA030000 		.4byte	.LASF76
 2545 03c0 01       		.byte	0x1
 2546 03c1 0E01     		.2byte	0x10e
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 58


 2547 03c3 58020000 		.4byte	0x258
 2548 03c7 02       		.uleb128 0x2
 2549 03c8 91       		.byte	0x91
 2550 03c9 73       		.sleb128 -13
 2551 03ca 00       		.byte	0
 2552 03cb 17       		.uleb128 0x17
 2553 03cc 97010000 		.4byte	.LASF77
 2554 03d0 01       		.byte	0x1
 2555 03d1 A201     		.2byte	0x1a2
 2556 03d3 58020000 		.4byte	0x258
 2557 03d7 00000000 		.4byte	.LFB74
 2558 03db 70000000 		.4byte	.LFE74-.LFB74
 2559 03df 01       		.uleb128 0x1
 2560 03e0 9C       		.byte	0x9c
 2561 03e1 15       		.uleb128 0x15
 2562 03e2 59010000 		.4byte	.LASF78
 2563 03e6 01       		.byte	0x1
 2564 03e7 BF01     		.2byte	0x1bf
 2565 03e9 58020000 		.4byte	0x258
 2566 03ed 00000000 		.4byte	.LFB75
 2567 03f1 68020000 		.4byte	.LFE75-.LFB75
 2568 03f5 01       		.uleb128 0x1
 2569 03f6 9C       		.byte	0x9c
 2570 03f7 1A040000 		.4byte	0x41a
 2571 03fb 16       		.uleb128 0x16
 2572 03fc 37000000 		.4byte	.LASF75
 2573 0400 01       		.byte	0x1
 2574 0401 C001     		.2byte	0x1c0
 2575 0403 D2000000 		.4byte	0xd2
 2576 0407 02       		.uleb128 0x2
 2577 0408 91       		.byte	0x91
 2578 0409 74       		.sleb128 -12
 2579 040a 16       		.uleb128 0x16
 2580 040b E1010000 		.4byte	.LASF79
 2581 040f 01       		.byte	0x1
 2582 0410 CF01     		.2byte	0x1cf
 2583 0412 B9010000 		.4byte	0x1b9
 2584 0416 02       		.uleb128 0x2
 2585 0417 91       		.byte	0x91
 2586 0418 73       		.sleb128 -13
 2587 0419 00       		.byte	0
 2588 041a 18       		.uleb128 0x18
 2589 041b F9040000 		.4byte	.LASF81
 2590 041f 01       		.byte	0x1
 2591 0420 7002     		.2byte	0x270
 2592 0422 00000000 		.4byte	.LFB76
 2593 0426 1C000000 		.4byte	.LFE76-.LFB76
 2594 042a 01       		.uleb128 0x1
 2595 042b 9C       		.byte	0x9c
 2596 042c 19       		.uleb128 0x19
 2597 042d 0B060000 		.4byte	.LASF83
 2598 0431 01       		.byte	0x1
 2599 0432 7502     		.2byte	0x275
 2600 0434 25020000 		.4byte	0x225
 2601 0438 00000000 		.4byte	.LFB77
 2602 043c A4000000 		.4byte	.LFE77-.LFB77
 2603 0440 01       		.uleb128 0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 59


 2604 0441 9C       		.byte	0x9c
 2605 0442 9A040000 		.4byte	0x49a
 2606 0446 1A       		.uleb128 0x1a
 2607 0447 50010000 		.4byte	.LASF85
 2608 044b 01       		.byte	0x1
 2609 044c 7502     		.2byte	0x275
 2610 044e 68000000 		.4byte	0x68
 2611 0452 02       		.uleb128 0x2
 2612 0453 91       		.byte	0x91
 2613 0454 60       		.sleb128 -32
 2614 0455 1A       		.uleb128 0x1a
 2615 0456 04030000 		.4byte	.LASF86
 2616 045a 01       		.byte	0x1
 2617 045b 7502     		.2byte	0x275
 2618 045d 9A040000 		.4byte	0x49a
 2619 0461 02       		.uleb128 0x2
 2620 0462 91       		.byte	0x91
 2621 0463 5C       		.sleb128 -36
 2622 0464 1A       		.uleb128 0x1a
 2623 0465 14030000 		.4byte	.LASF87
 2624 0469 01       		.byte	0x1
 2625 046a 7502     		.2byte	0x275
 2626 046c 68000000 		.4byte	0x68
 2627 0470 02       		.uleb128 0x2
 2628 0471 91       		.byte	0x91
 2629 0472 58       		.sleb128 -40
 2630 0473 16       		.uleb128 0x16
 2631 0474 72000000 		.4byte	.LASF88
 2632 0478 01       		.byte	0x1
 2633 0479 7602     		.2byte	0x276
 2634 047b 25020000 		.4byte	0x225
 2635 047f 02       		.uleb128 0x2
 2636 0480 91       		.byte	0x91
 2637 0481 68       		.sleb128 -24
 2638 0482 0C       		.uleb128 0xc
 2639 0483 0E000000 		.4byte	.LBB3
 2640 0487 7C000000 		.4byte	.LBE3-.LBB3
 2641 048b 1B       		.uleb128 0x1b
 2642 048c 6900     		.ascii	"i\000"
 2643 048e 01       		.byte	0x1
 2644 048f 7802     		.2byte	0x278
 2645 0491 68000000 		.4byte	0x68
 2646 0495 02       		.uleb128 0x2
 2647 0496 91       		.byte	0x91
 2648 0497 74       		.sleb128 -12
 2649 0498 00       		.byte	0
 2650 0499 00       		.byte	0
 2651 049a 1C       		.uleb128 0x1c
 2652 049b 04       		.byte	0x4
 2653 049c 25020000 		.4byte	0x225
 2654 04a0 1D       		.uleb128 0x1d
 2655 04a1 42020000 		.4byte	.LASF89
 2656 04a5 01       		.byte	0x1
 2657 04a6 8502     		.2byte	0x285
 2658 04a8 00000000 		.4byte	.LFB78
 2659 04ac C4000000 		.4byte	.LFE78-.LFB78
 2660 04b0 01       		.uleb128 0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 60


 2661 04b1 9C       		.byte	0x9c
 2662 04b2 1E       		.uleb128 0x1e
 2663 04b3 C0040000 		.4byte	.LASF90
 2664 04b7 07       		.byte	0x7
 2665 04b8 1207     		.2byte	0x712
 2666 04ba BE040000 		.4byte	0x4be
 2667 04be 1F       		.uleb128 0x1f
 2668 04bf 8B000000 		.4byte	0x8b
 2669 04c3 20       		.uleb128 0x20
 2670 04c4 747300   		.ascii	"ts\000"
 2671 04c7 05       		.byte	0x5
 2672 04c8 10       		.byte	0x10
 2673 04c9 96000000 		.4byte	0x96
 2674 04cd 05       		.uleb128 0x5
 2675 04ce 03       		.byte	0x3
 2676 04cf 00000000 		.4byte	ts
 2677 04d3 21       		.uleb128 0x21
 2678 04d4 21060000 		.4byte	.LASF91
 2679 04d8 05       		.byte	0x5
 2680 04d9 11       		.byte	0x11
 2681 04da A2000000 		.4byte	0xa2
 2682 04de 05       		.uleb128 0x5
 2683 04df 03       		.byte	0x3
 2684 04e0 00000000 		.4byte	ts_enc
 2685 04e4 21       		.uleb128 0x21
 2686 04e5 CD040000 		.4byte	.LASF92
 2687 04e9 05       		.byte	0x5
 2688 04ea 12       		.byte	0x12
 2689 04eb A2000000 		.4byte	0xa2
 2690 04ef 05       		.uleb128 0x5
 2691 04f0 03       		.byte	0x3
 2692 04f1 00000000 		.4byte	ts_update
 2693 04f5 21       		.uleb128 0x21
 2694 04f6 E9030000 		.4byte	.LASF93
 2695 04fa 05       		.byte	0x5
 2696 04fb 13       		.byte	0x13
 2697 04fc A2000000 		.4byte	0xa2
 2698 0500 05       		.uleb128 0x5
 2699 0501 03       		.byte	0x3
 2700 0502 00000000 		.4byte	ts_speed
 2701 0506 21       		.uleb128 0x21
 2702 0507 D8020000 		.4byte	.LASF94
 2703 050b 05       		.byte	0x5
 2704 050c 14       		.byte	0x14
 2705 050d A2000000 		.4byte	0xa2
 2706 0511 05       		.uleb128 0x5
 2707 0512 03       		.byte	0x3
 2708 0513 00000000 		.4byte	ts_display
 2709 0517 21       		.uleb128 0x21
 2710 0518 8C020000 		.4byte	.LASF95
 2711 051c 05       		.byte	0x5
 2712 051d 16       		.byte	0x16
 2713 051e 96000000 		.4byte	0x96
 2714 0522 05       		.uleb128 0x5
 2715 0523 03       		.byte	0x3
 2716 0524 00000000 		.4byte	flag_ts_enc
 2717 0528 21       		.uleb128 0x21
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 61


 2718 0529 7D020000 		.4byte	.LASF96
 2719 052d 05       		.byte	0x5
 2720 052e 17       		.byte	0x17
 2721 052f 96000000 		.4byte	0x96
 2722 0533 05       		.uleb128 0x5
 2723 0534 03       		.byte	0x3
 2724 0535 00000000 		.4byte	flag_ts_update
 2725 0539 21       		.uleb128 0x21
 2726 053a 65040000 		.4byte	.LASF97
 2727 053e 05       		.byte	0x5
 2728 053f 18       		.byte	0x18
 2729 0540 96000000 		.4byte	0x96
 2730 0544 05       		.uleb128 0x5
 2731 0545 03       		.byte	0x3
 2732 0546 00000000 		.4byte	flag_ts_speed
 2733 054a 21       		.uleb128 0x21
 2734 054b 28060000 		.4byte	.LASF98
 2735 054f 05       		.byte	0x5
 2736 0550 19       		.byte	0x19
 2737 0551 96000000 		.4byte	0x96
 2738 0555 05       		.uleb128 0x5
 2739 0556 03       		.byte	0x3
 2740 0557 00000000 		.4byte	flag_ts_display
 2741 055b 21       		.uleb128 0x21
 2742 055c 82040000 		.4byte	.LASF99
 2743 0560 05       		.byte	0x5
 2744 0561 1B       		.byte	0x1b
 2745 0562 96000000 		.4byte	0x96
 2746 0566 05       		.uleb128 0x5
 2747 0567 03       		.byte	0x3
 2748 0568 00000000 		.4byte	flag_rx
 2749 056c 21       		.uleb128 0x21
 2750 056d 36020000 		.4byte	.LASF100
 2751 0571 05       		.byte	0x5
 2752 0572 1C       		.byte	0x1c
 2753 0573 96000000 		.4byte	0x96
 2754 0577 05       		.uleb128 0x5
 2755 0578 03       		.byte	0x3
 2756 0579 00000000 		.4byte	flag_packet
 2757 057d 21       		.uleb128 0x21
 2758 057e 0C070000 		.4byte	.LASF101
 2759 0582 05       		.byte	0x5
 2760 0583 1D       		.byte	0x1d
 2761 0584 96000000 		.4byte	0x96
 2762 0588 05       		.uleb128 0x5
 2763 0589 03       		.byte	0x3
 2764 058a 00000000 		.4byte	flag_KB_string
 2765 058e 21       		.uleb128 0x21
 2766 058f 73040000 		.4byte	.LASF102
 2767 0593 05       		.byte	0x5
 2768 0594 1F       		.byte	0x1f
 2769 0595 96000000 		.4byte	0x96
 2770 0599 05       		.uleb128 0x5
 2771 059a 03       		.byte	0x3
 2772 059b 00000000 		.4byte	dataready_flag
 2773 059f 21       		.uleb128 0x21
 2774 05a0 7B010000 		.4byte	.LASF103
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 62


 2775 05a4 05       		.byte	0x5
 2776 05a5 21       		.byte	0x21
 2777 05a6 96000000 		.4byte	0x96
 2778 05aa 05       		.uleb128 0x5
 2779 05ab 03       		.byte	0x3
 2780 05ac 00000000 		.4byte	flag_rf_transmission_active
 2781 05b0 22       		.uleb128 0x22
 2782 05b1 84000000 		.4byte	0x84
 2783 05b5 C0050000 		.4byte	0x5c0
 2784 05b9 23       		.uleb128 0x23
 2785 05ba 7D000000 		.4byte	0x7d
 2786 05be 3F       		.byte	0x3f
 2787 05bf 00       		.byte	0
 2788 05c0 21       		.uleb128 0x21
 2789 05c1 3D060000 		.4byte	.LASF104
 2790 05c5 05       		.byte	0x5
 2791 05c6 24       		.byte	0x24
 2792 05c7 B0050000 		.4byte	0x5b0
 2793 05cb 05       		.uleb128 0x5
 2794 05cc 03       		.byte	0x3
 2795 05cd 00000000 		.4byte	displaystring
 2796 05d1 21       		.uleb128 0x21
 2797 05d2 F0050000 		.4byte	.LASF105
 2798 05d6 05       		.byte	0x5
 2799 05d7 25       		.byte	0x25
 2800 05d8 B0050000 		.4byte	0x5b0
 2801 05dc 05       		.uleb128 0x5
 2802 05dd 03       		.byte	0x3
 2803 05de 00000000 		.4byte	line
 2804 05e2 21       		.uleb128 0x21
 2805 05e3 BD050000 		.4byte	.LASF106
 2806 05e7 05       		.byte	0x5
 2807 05e8 25       		.byte	0x25
 2808 05e9 B0050000 		.4byte	0x5b0
 2809 05ed 05       		.uleb128 0x5
 2810 05ee 03       		.byte	0x3
 2811 05ef 00000000 		.4byte	entry
 2812 05f3 22       		.uleb128 0x22
 2813 05f4 96000000 		.4byte	0x96
 2814 05f8 03060000 		.4byte	0x603
 2815 05fc 23       		.uleb128 0x23
 2816 05fd 7D000000 		.4byte	0x7d
 2817 0601 3F       		.byte	0x3f
 2818 0602 00       		.byte	0
 2819 0603 21       		.uleb128 0x21
 2820 0604 FD010000 		.4byte	.LASF107
 2821 0608 05       		.byte	0x5
 2822 0609 26       		.byte	0x26
 2823 060a F3050000 		.4byte	0x5f3
 2824 060e 05       		.uleb128 0x5
 2825 060f 03       		.byte	0x3
 2826 0610 00000000 		.4byte	usbBuffer
 2827 0614 21       		.uleb128 0x21
 2828 0615 65000000 		.4byte	.LASF108
 2829 0619 05       		.byte	0x5
 2830 061a 3C       		.byte	0x3c
 2831 061b E0000000 		.4byte	0xe0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 63


 2832 061f 05       		.uleb128 0x5
 2833 0620 03       		.byte	0x3
 2834 0621 00000000 		.4byte	system_state
 2835 0625 22       		.uleb128 0x22
 2836 0626 68000000 		.4byte	0x68
 2837 062a 3B060000 		.4byte	0x63b
 2838 062e 23       		.uleb128 0x23
 2839 062f 7D000000 		.4byte	0x7d
 2840 0633 0E       		.byte	0xe
 2841 0634 23       		.uleb128 0x23
 2842 0635 7D000000 		.4byte	0x7d
 2843 0639 12       		.byte	0x12
 2844 063a 00       		.byte	0
 2845 063b 24       		.uleb128 0x24
 2846 063c 6D617000 		.ascii	"map\000"
 2847 0640 08       		.byte	0x8
 2848 0641 04       		.byte	0x4
 2849 0642 25060000 		.4byte	0x625
 2850 0646 22       		.uleb128 0x22
 2851 0647 68000000 		.4byte	0x68
 2852 064b 5C060000 		.4byte	0x65c
 2853 064f 23       		.uleb128 0x23
 2854 0650 7D000000 		.4byte	0x7d
 2855 0654 04       		.byte	0x4
 2856 0655 23       		.uleb128 0x23
 2857 0656 7D000000 		.4byte	0x7d
 2858 065a 01       		.byte	0x1
 2859 065b 00       		.byte	0
 2860 065c 25       		.uleb128 0x25
 2861 065d D6030000 		.4byte	.LASF109
 2862 0661 08       		.byte	0x8
 2863 0662 05       		.byte	0x5
 2864 0663 46060000 		.4byte	0x646
 2865 0667 21       		.uleb128 0x21
 2866 0668 33050000 		.4byte	.LASF110
 2867 066c 01       		.byte	0x1
 2868 066d 19       		.byte	0x19
 2869 066e 58020000 		.4byte	0x258
 2870 0672 05       		.uleb128 0x5
 2871 0673 03       		.byte	0x3
 2872 0674 00000000 		.4byte	currentDirection
 2873 0678 21       		.uleb128 0x21
 2874 0679 47040000 		.4byte	.LASF111
 2875 067d 01       		.byte	0x1
 2876 067e 19       		.byte	0x19
 2877 067f 58020000 		.4byte	0x258
 2878 0683 05       		.uleb128 0x5
 2879 0684 03       		.byte	0x3
 2880 0685 00000000 		.4byte	previousDirection
 2881 0689 21       		.uleb128 0x21
 2882 068a E3020000 		.4byte	.LASF112
 2883 068e 01       		.byte	0x1
 2884 068f 1B       		.byte	0x1b
 2885 0690 30020000 		.4byte	0x230
 2886 0694 05       		.uleb128 0x5
 2887 0695 03       		.byte	0x3
 2888 0696 00000000 		.4byte	currentOrientation
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 64


 2889 069a 21       		.uleb128 0x21
 2890 069b 9F030000 		.4byte	.LASF113
 2891 069f 01       		.byte	0x1
 2892 06a0 1B       		.byte	0x1b
 2893 06a1 30020000 		.4byte	0x230
 2894 06a5 05       		.uleb128 0x5
 2895 06a6 03       		.byte	0x3
 2896 06a7 00000000 		.4byte	previousOrientation
 2897 06ab 21       		.uleb128 0x21
 2898 06ac A2060000 		.4byte	.LASF114
 2899 06b0 01       		.byte	0x1
 2900 06b1 1C       		.byte	0x1c
 2901 06b2 25020000 		.4byte	0x225
 2902 06b6 05       		.uleb128 0x5
 2903 06b7 03       		.byte	0x3
 2904 06b8 00000000 		.4byte	currentInstruction
 2905 06bc 21       		.uleb128 0x21
 2906 06bd 50010000 		.4byte	.LASF85
 2907 06c1 01       		.byte	0x1
 2908 06c2 1D       		.byte	0x1d
 2909 06c3 68000000 		.4byte	0x68
 2910 06c7 05       		.uleb128 0x5
 2911 06c8 03       		.byte	0x3
 2912 06c9 00000000 		.4byte	numSteps
 2913 06cd 21       		.uleb128 0x21
 2914 06ce 04030000 		.4byte	.LASF86
 2915 06d2 01       		.byte	0x1
 2916 06d3 1F       		.byte	0x1f
 2917 06d4 9A040000 		.4byte	0x49a
 2918 06d8 05       		.uleb128 0x5
 2919 06d9 03       		.byte	0x3
 2920 06da 00000000 		.4byte	instructionList
 2921 06de 21       		.uleb128 0x21
 2922 06df 14030000 		.4byte	.LASF87
 2923 06e3 01       		.byte	0x1
 2924 06e4 20       		.byte	0x20
 2925 06e5 AE000000 		.4byte	0xae
 2926 06e9 05       		.uleb128 0x5
 2927 06ea 03       		.byte	0x3
 2928 06eb 00000000 		.4byte	instructionIndex
 2929 06ef 20       		.uleb128 0x20
 2930 06f0 733300   		.ascii	"s3\000"
 2931 06f3 01       		.byte	0x1
 2932 06f4 24       		.byte	0x24
 2933 06f5 96000000 		.4byte	0x96
 2934 06f9 05       		.uleb128 0x5
 2935 06fa 03       		.byte	0x3
 2936 06fb 00000000 		.4byte	s3
 2937 06ff 20       		.uleb128 0x20
 2938 0700 733400   		.ascii	"s4\000"
 2939 0703 01       		.byte	0x1
 2940 0704 24       		.byte	0x24
 2941 0705 96000000 		.4byte	0x96
 2942 0709 05       		.uleb128 0x5
 2943 070a 03       		.byte	0x3
 2944 070b 00000000 		.4byte	s4
 2945 070f 20       		.uleb128 0x20
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 65


 2946 0710 733500   		.ascii	"s5\000"
 2947 0713 01       		.byte	0x1
 2948 0714 24       		.byte	0x24
 2949 0715 96000000 		.4byte	0x96
 2950 0719 05       		.uleb128 0x5
 2951 071a 03       		.byte	0x3
 2952 071b 00000000 		.4byte	s5
 2953 071f 20       		.uleb128 0x20
 2954 0720 733600   		.ascii	"s6\000"
 2955 0723 01       		.byte	0x1
 2956 0724 24       		.byte	0x24
 2957 0725 96000000 		.4byte	0x96
 2958 0729 05       		.uleb128 0x5
 2959 072a 03       		.byte	0x3
 2960 072b 00000000 		.4byte	s6
 2961 072f 21       		.uleb128 0x21
 2962 0730 DF040000 		.4byte	.LASF115
 2963 0734 01       		.byte	0x1
 2964 0735 29       		.byte	0x29
 2965 0736 AE000000 		.4byte	0xae
 2966 073a 05       		.uleb128 0x5
 2967 073b 03       		.byte	0x3
 2968 073c 00000000 		.4byte	totalMilliseconds
 2969 0740 21       		.uleb128 0x21
 2970 0741 1C010000 		.4byte	.LASF116
 2971 0745 01       		.byte	0x1
 2972 0746 2A       		.byte	0x2a
 2973 0747 D2000000 		.4byte	0xd2
 2974 074b 05       		.uleb128 0x5
 2975 074c 03       		.byte	0x3
 2976 074d 00000000 		.4byte	totalDistance
 2977 0751 22       		.uleb128 0x22
 2978 0752 84000000 		.4byte	0x84
 2979 0756 61070000 		.4byte	0x761
 2980 075a 23       		.uleb128 0x23
 2981 075b 7D000000 		.4byte	0x7d
 2982 075f 44       		.byte	0x44
 2983 0760 00       		.byte	0
 2984 0761 21       		.uleb128 0x21
 2985 0762 41000000 		.4byte	.LASF117
 2986 0766 01       		.byte	0x1
 2987 0767 2C       		.byte	0x2c
 2988 0768 51070000 		.4byte	0x751
 2989 076c 05       		.uleb128 0x5
 2990 076d 03       		.byte	0x3
 2991 076e 00000000 		.4byte	buffer
 2992 0772 21       		.uleb128 0x21
 2993 0773 CD010000 		.4byte	.LASF118
 2994 0777 01       		.byte	0x1
 2995 0778 2D       		.byte	0x2d
 2996 0779 68000000 		.4byte	0x68
 2997 077d 05       		.uleb128 0x5
 2998 077e 03       		.byte	0x3
 2999 077f 00000000 		.4byte	quadDec2Count
 3000 0783 21       		.uleb128 0x21
 3001 0784 03070000 		.4byte	.LASF119
 3002 0788 01       		.byte	0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 66


 3003 0789 2E       		.byte	0x2e
 3004 078a 68000000 		.4byte	0x68
 3005 078e 05       		.uleb128 0x5
 3006 078f 03       		.byte	0x3
 3007 0790 00000000 		.4byte	timerInt
 3008 0794 21       		.uleb128 0x21
 3009 0795 60020000 		.4byte	.LASF120
 3010 0799 01       		.byte	0x1
 3011 079a 2F       		.byte	0x2f
 3012 079b 68000000 		.4byte	0x68
 3013 079f 05       		.uleb128 0x5
 3014 07a0 03       		.byte	0x3
 3015 07a1 00000000 		.4byte	keepLedOn
 3016 07a5 21       		.uleb128 0x21
 3017 07a6 9F050000 		.4byte	.LASF121
 3018 07aa 01       		.byte	0x1
 3019 07ab 31       		.byte	0x31
 3020 07ac AE000000 		.4byte	0xae
 3021 07b0 05       		.uleb128 0x5
 3022 07b1 03       		.byte	0x3
 3023 07b2 00000000 		.4byte	stopBuffer
 3024 07b6 21       		.uleb128 0x21
 3025 07b7 59030000 		.4byte	.LASF122
 3026 07bb 01       		.byte	0x1
 3027 07bc 32       		.byte	0x32
 3028 07bd 96000000 		.4byte	0x96
 3029 07c1 05       		.uleb128 0x5
 3030 07c2 03       		.byte	0x3
 3031 07c3 00000000 		.4byte	turnFinishedFlag
 3032 07c7 21       		.uleb128 0x21
 3033 07c8 32010000 		.4byte	.LASF123
 3034 07cc 01       		.byte	0x1
 3035 07cd 33       		.byte	0x33
 3036 07ce 96000000 		.4byte	0x96
 3037 07d2 05       		.uleb128 0x5
 3038 07d3 03       		.byte	0x3
 3039 07d4 00000000 		.4byte	forwardUntilTargetStartedFlag
 3040 07d8 21       		.uleb128 0x21
 3041 07d9 90030000 		.4byte	.LASF124
 3042 07dd 01       		.byte	0x1
 3043 07de 34       		.byte	0x34
 3044 07df D2000000 		.4byte	0xd2
 3045 07e3 05       		.uleb128 0x5
 3046 07e4 03       		.byte	0x3
 3047 07e5 00000000 		.4byte	blockSizeTotal
 3048 07e9 21       		.uleb128 0x21
 3049 07ea 31030000 		.4byte	.LASF125
 3050 07ee 01       		.byte	0x1
 3051 07ef B3       		.byte	0xb3
 3052 07f0 D2000000 		.4byte	0xd2
 3053 07f4 05       		.uleb128 0x5
 3054 07f5 03       		.byte	0x3
 3055 07f6 00000000 		.4byte	xBlocksize
 3056 07fa 21       		.uleb128 0x21
 3057 07fb 8A040000 		.4byte	.LASF126
 3058 07ff 01       		.byte	0x1
 3059 0800 B4       		.byte	0xb4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 67


 3060 0801 D2000000 		.4byte	0xd2
 3061 0805 05       		.uleb128 0x5
 3062 0806 03       		.byte	0x3
 3063 0807 00000000 		.4byte	yBlocksize
 3064 080b 21       		.uleb128 0x21
 3065 080c 6D060000 		.4byte	.LASF127
 3066 0810 01       		.byte	0x1
 3067 0811 B5       		.byte	0xb5
 3068 0812 96000000 		.4byte	0x96
 3069 0816 05       		.uleb128 0x5
 3070 0817 03       		.byte	0x3
 3071 0818 00000000 		.4byte	currentRow
 3072 081c 21       		.uleb128 0x21
 3073 081d F0060000 		.4byte	.LASF128
 3074 0821 01       		.byte	0x1
 3075 0822 B6       		.byte	0xb6
 3076 0823 96000000 		.4byte	0x96
 3077 0827 05       		.uleb128 0x5
 3078 0828 03       		.byte	0x3
 3079 0829 00000000 		.4byte	currentCol
 3080 082d 26       		.uleb128 0x26
 3081 082e DF050000 		.4byte	.LASF129
 3082 0832 01       		.byte	0x1
 3083 0833 0301     		.2byte	0x103
 3084 0835 96000000 		.4byte	0x96
 3085 0839 05       		.uleb128 0x5
 3086 083a 03       		.byte	0x3
 3087 083b 00000000 		.4byte	stoppedAfterTurn
 3088 083f 26       		.uleb128 0x26
 3089 0840 A7020000 		.4byte	.LASF130
 3090 0844 01       		.byte	0x1
 3091 0845 0401     		.2byte	0x104
 3092 0847 96000000 		.4byte	0x96
 3093 084b 05       		.uleb128 0x5
 3094 084c 03       		.byte	0x3
 3095 084d 00000000 		.4byte	ignoreSensor
 3096 0851 00       		.byte	0
 3097              		.section	.debug_abbrev,"",%progbits
 3098              	.Ldebug_abbrev0:
 3099 0000 01       		.uleb128 0x1
 3100 0001 11       		.uleb128 0x11
 3101 0002 01       		.byte	0x1
 3102 0003 25       		.uleb128 0x25
 3103 0004 0E       		.uleb128 0xe
 3104 0005 13       		.uleb128 0x13
 3105 0006 0B       		.uleb128 0xb
 3106 0007 03       		.uleb128 0x3
 3107 0008 0E       		.uleb128 0xe
 3108 0009 1B       		.uleb128 0x1b
 3109 000a 0E       		.uleb128 0xe
 3110 000b 55       		.uleb128 0x55
 3111 000c 17       		.uleb128 0x17
 3112 000d 11       		.uleb128 0x11
 3113 000e 01       		.uleb128 0x1
 3114 000f 10       		.uleb128 0x10
 3115 0010 17       		.uleb128 0x17
 3116 0011 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 68


 3117 0012 00       		.byte	0
 3118 0013 02       		.uleb128 0x2
 3119 0014 24       		.uleb128 0x24
 3120 0015 00       		.byte	0
 3121 0016 0B       		.uleb128 0xb
 3122 0017 0B       		.uleb128 0xb
 3123 0018 3E       		.uleb128 0x3e
 3124 0019 0B       		.uleb128 0xb
 3125 001a 03       		.uleb128 0x3
 3126 001b 0E       		.uleb128 0xe
 3127 001c 00       		.byte	0
 3128 001d 00       		.byte	0
 3129 001e 03       		.uleb128 0x3
 3130 001f 16       		.uleb128 0x16
 3131 0020 00       		.byte	0
 3132 0021 03       		.uleb128 0x3
 3133 0022 0E       		.uleb128 0xe
 3134 0023 3A       		.uleb128 0x3a
 3135 0024 0B       		.uleb128 0xb
 3136 0025 3B       		.uleb128 0x3b
 3137 0026 0B       		.uleb128 0xb
 3138 0027 49       		.uleb128 0x49
 3139 0028 13       		.uleb128 0x13
 3140 0029 00       		.byte	0
 3141 002a 00       		.byte	0
 3142 002b 04       		.uleb128 0x4
 3143 002c 24       		.uleb128 0x24
 3144 002d 00       		.byte	0
 3145 002e 0B       		.uleb128 0xb
 3146 002f 0B       		.uleb128 0xb
 3147 0030 3E       		.uleb128 0x3e
 3148 0031 0B       		.uleb128 0xb
 3149 0032 03       		.uleb128 0x3
 3150 0033 08       		.uleb128 0x8
 3151 0034 00       		.byte	0
 3152 0035 00       		.byte	0
 3153 0036 05       		.uleb128 0x5
 3154 0037 16       		.uleb128 0x16
 3155 0038 00       		.byte	0
 3156 0039 03       		.uleb128 0x3
 3157 003a 0E       		.uleb128 0xe
 3158 003b 3A       		.uleb128 0x3a
 3159 003c 0B       		.uleb128 0xb
 3160 003d 3B       		.uleb128 0x3b
 3161 003e 05       		.uleb128 0x5
 3162 003f 49       		.uleb128 0x49
 3163 0040 13       		.uleb128 0x13
 3164 0041 00       		.byte	0
 3165 0042 00       		.byte	0
 3166 0043 06       		.uleb128 0x6
 3167 0044 13       		.uleb128 0x13
 3168 0045 01       		.byte	0x1
 3169 0046 03       		.uleb128 0x3
 3170 0047 0E       		.uleb128 0xe
 3171 0048 0B       		.uleb128 0xb
 3172 0049 0B       		.uleb128 0xb
 3173 004a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 69


 3174 004b 0B       		.uleb128 0xb
 3175 004c 3B       		.uleb128 0x3b
 3176 004d 0B       		.uleb128 0xb
 3177 004e 01       		.uleb128 0x1
 3178 004f 13       		.uleb128 0x13
 3179 0050 00       		.byte	0
 3180 0051 00       		.byte	0
 3181 0052 07       		.uleb128 0x7
 3182 0053 0D       		.uleb128 0xd
 3183 0054 00       		.byte	0
 3184 0055 03       		.uleb128 0x3
 3185 0056 0E       		.uleb128 0xe
 3186 0057 3A       		.uleb128 0x3a
 3187 0058 0B       		.uleb128 0xb
 3188 0059 3B       		.uleb128 0x3b
 3189 005a 0B       		.uleb128 0xb
 3190 005b 49       		.uleb128 0x49
 3191 005c 13       		.uleb128 0x13
 3192 005d 38       		.uleb128 0x38
 3193 005e 0B       		.uleb128 0xb
 3194 005f 00       		.byte	0
 3195 0060 00       		.byte	0
 3196 0061 08       		.uleb128 0x8
 3197 0062 04       		.uleb128 0x4
 3198 0063 01       		.byte	0x1
 3199 0064 03       		.uleb128 0x3
 3200 0065 0E       		.uleb128 0xe
 3201 0066 0B       		.uleb128 0xb
 3202 0067 0B       		.uleb128 0xb
 3203 0068 49       		.uleb128 0x49
 3204 0069 13       		.uleb128 0x13
 3205 006a 3A       		.uleb128 0x3a
 3206 006b 0B       		.uleb128 0xb
 3207 006c 3B       		.uleb128 0x3b
 3208 006d 0B       		.uleb128 0xb
 3209 006e 01       		.uleb128 0x1
 3210 006f 13       		.uleb128 0x13
 3211 0070 00       		.byte	0
 3212 0071 00       		.byte	0
 3213 0072 09       		.uleb128 0x9
 3214 0073 28       		.uleb128 0x28
 3215 0074 00       		.byte	0
 3216 0075 03       		.uleb128 0x3
 3217 0076 0E       		.uleb128 0xe
 3218 0077 1C       		.uleb128 0x1c
 3219 0078 0B       		.uleb128 0xb
 3220 0079 00       		.byte	0
 3221 007a 00       		.byte	0
 3222 007b 0A       		.uleb128 0xa
 3223 007c 28       		.uleb128 0x28
 3224 007d 00       		.byte	0
 3225 007e 03       		.uleb128 0x3
 3226 007f 08       		.uleb128 0x8
 3227 0080 1C       		.uleb128 0x1c
 3228 0081 0B       		.uleb128 0xb
 3229 0082 00       		.byte	0
 3230 0083 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 70


 3231 0084 0B       		.uleb128 0xb
 3232 0085 2E       		.uleb128 0x2e
 3233 0086 01       		.byte	0x1
 3234 0087 3F       		.uleb128 0x3f
 3235 0088 19       		.uleb128 0x19
 3236 0089 03       		.uleb128 0x3
 3237 008a 0E       		.uleb128 0xe
 3238 008b 3A       		.uleb128 0x3a
 3239 008c 0B       		.uleb128 0xb
 3240 008d 3B       		.uleb128 0x3b
 3241 008e 0B       		.uleb128 0xb
 3242 008f 27       		.uleb128 0x27
 3243 0090 19       		.uleb128 0x19
 3244 0091 11       		.uleb128 0x11
 3245 0092 01       		.uleb128 0x1
 3246 0093 12       		.uleb128 0x12
 3247 0094 06       		.uleb128 0x6
 3248 0095 40       		.uleb128 0x40
 3249 0096 18       		.uleb128 0x18
 3250 0097 9642     		.uleb128 0x2116
 3251 0099 19       		.uleb128 0x19
 3252 009a 01       		.uleb128 0x1
 3253 009b 13       		.uleb128 0x13
 3254 009c 00       		.byte	0
 3255 009d 00       		.byte	0
 3256 009e 0C       		.uleb128 0xc
 3257 009f 0B       		.uleb128 0xb
 3258 00a0 01       		.byte	0x1
 3259 00a1 11       		.uleb128 0x11
 3260 00a2 01       		.uleb128 0x1
 3261 00a3 12       		.uleb128 0x12
 3262 00a4 06       		.uleb128 0x6
 3263 00a5 00       		.byte	0
 3264 00a6 00       		.byte	0
 3265 00a7 0D       		.uleb128 0xd
 3266 00a8 34       		.uleb128 0x34
 3267 00a9 00       		.byte	0
 3268 00aa 03       		.uleb128 0x3
 3269 00ab 0E       		.uleb128 0xe
 3270 00ac 3A       		.uleb128 0x3a
 3271 00ad 0B       		.uleb128 0xb
 3272 00ae 3B       		.uleb128 0x3b
 3273 00af 0B       		.uleb128 0xb
 3274 00b0 49       		.uleb128 0x49
 3275 00b1 13       		.uleb128 0x13
 3276 00b2 02       		.uleb128 0x2
 3277 00b3 18       		.uleb128 0x18
 3278 00b4 00       		.byte	0
 3279 00b5 00       		.byte	0
 3280 00b6 0E       		.uleb128 0xe
 3281 00b7 2E       		.uleb128 0x2e
 3282 00b8 00       		.byte	0
 3283 00b9 3F       		.uleb128 0x3f
 3284 00ba 19       		.uleb128 0x19
 3285 00bb 03       		.uleb128 0x3
 3286 00bc 0E       		.uleb128 0xe
 3287 00bd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 71


 3288 00be 0B       		.uleb128 0xb
 3289 00bf 3B       		.uleb128 0x3b
 3290 00c0 0B       		.uleb128 0xb
 3291 00c1 27       		.uleb128 0x27
 3292 00c2 19       		.uleb128 0x19
 3293 00c3 11       		.uleb128 0x11
 3294 00c4 01       		.uleb128 0x1
 3295 00c5 12       		.uleb128 0x12
 3296 00c6 06       		.uleb128 0x6
 3297 00c7 40       		.uleb128 0x40
 3298 00c8 18       		.uleb128 0x18
 3299 00c9 9742     		.uleb128 0x2117
 3300 00cb 19       		.uleb128 0x19
 3301 00cc 00       		.byte	0
 3302 00cd 00       		.byte	0
 3303 00ce 0F       		.uleb128 0xf
 3304 00cf 2E       		.uleb128 0x2e
 3305 00d0 00       		.byte	0
 3306 00d1 3F       		.uleb128 0x3f
 3307 00d2 19       		.uleb128 0x19
 3308 00d3 03       		.uleb128 0x3
 3309 00d4 0E       		.uleb128 0xe
 3310 00d5 3A       		.uleb128 0x3a
 3311 00d6 0B       		.uleb128 0xb
 3312 00d7 3B       		.uleb128 0x3b
 3313 00d8 0B       		.uleb128 0xb
 3314 00d9 27       		.uleb128 0x27
 3315 00da 19       		.uleb128 0x19
 3316 00db 11       		.uleb128 0x11
 3317 00dc 01       		.uleb128 0x1
 3318 00dd 12       		.uleb128 0x12
 3319 00de 06       		.uleb128 0x6
 3320 00df 40       		.uleb128 0x40
 3321 00e0 18       		.uleb128 0x18
 3322 00e1 9642     		.uleb128 0x2116
 3323 00e3 19       		.uleb128 0x19
 3324 00e4 00       		.byte	0
 3325 00e5 00       		.byte	0
 3326 00e6 10       		.uleb128 0x10
 3327 00e7 2E       		.uleb128 0x2e
 3328 00e8 00       		.byte	0
 3329 00e9 3F       		.uleb128 0x3f
 3330 00ea 19       		.uleb128 0x19
 3331 00eb 03       		.uleb128 0x3
 3332 00ec 0E       		.uleb128 0xe
 3333 00ed 3A       		.uleb128 0x3a
 3334 00ee 0B       		.uleb128 0xb
 3335 00ef 3B       		.uleb128 0x3b
 3336 00f0 0B       		.uleb128 0xb
 3337 00f1 49       		.uleb128 0x49
 3338 00f2 13       		.uleb128 0x13
 3339 00f3 11       		.uleb128 0x11
 3340 00f4 01       		.uleb128 0x1
 3341 00f5 12       		.uleb128 0x12
 3342 00f6 06       		.uleb128 0x6
 3343 00f7 40       		.uleb128 0x40
 3344 00f8 18       		.uleb128 0x18
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 72


 3345 00f9 9642     		.uleb128 0x2116
 3346 00fb 19       		.uleb128 0x19
 3347 00fc 00       		.byte	0
 3348 00fd 00       		.byte	0
 3349 00fe 11       		.uleb128 0x11
 3350 00ff 2E       		.uleb128 0x2e
 3351 0100 01       		.byte	0x1
 3352 0101 3F       		.uleb128 0x3f
 3353 0102 19       		.uleb128 0x19
 3354 0103 03       		.uleb128 0x3
 3355 0104 0E       		.uleb128 0xe
 3356 0105 3A       		.uleb128 0x3a
 3357 0106 0B       		.uleb128 0xb
 3358 0107 3B       		.uleb128 0x3b
 3359 0108 0B       		.uleb128 0xb
 3360 0109 27       		.uleb128 0x27
 3361 010a 19       		.uleb128 0x19
 3362 010b 49       		.uleb128 0x49
 3363 010c 13       		.uleb128 0x13
 3364 010d 11       		.uleb128 0x11
 3365 010e 01       		.uleb128 0x1
 3366 010f 12       		.uleb128 0x12
 3367 0110 06       		.uleb128 0x6
 3368 0111 40       		.uleb128 0x40
 3369 0112 18       		.uleb128 0x18
 3370 0113 9642     		.uleb128 0x2116
 3371 0115 19       		.uleb128 0x19
 3372 0116 01       		.uleb128 0x1
 3373 0117 13       		.uleb128 0x13
 3374 0118 00       		.byte	0
 3375 0119 00       		.byte	0
 3376 011a 12       		.uleb128 0x12
 3377 011b 05       		.uleb128 0x5
 3378 011c 00       		.byte	0
 3379 011d 03       		.uleb128 0x3
 3380 011e 0E       		.uleb128 0xe
 3381 011f 3A       		.uleb128 0x3a
 3382 0120 0B       		.uleb128 0xb
 3383 0121 3B       		.uleb128 0x3b
 3384 0122 0B       		.uleb128 0xb
 3385 0123 49       		.uleb128 0x49
 3386 0124 13       		.uleb128 0x13
 3387 0125 02       		.uleb128 0x2
 3388 0126 18       		.uleb128 0x18
 3389 0127 00       		.byte	0
 3390 0128 00       		.byte	0
 3391 0129 13       		.uleb128 0x13
 3392 012a 34       		.uleb128 0x34
 3393 012b 00       		.byte	0
 3394 012c 03       		.uleb128 0x3
 3395 012d 08       		.uleb128 0x8
 3396 012e 3A       		.uleb128 0x3a
 3397 012f 0B       		.uleb128 0xb
 3398 0130 3B       		.uleb128 0x3b
 3399 0131 0B       		.uleb128 0xb
 3400 0132 49       		.uleb128 0x49
 3401 0133 13       		.uleb128 0x13
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 73


 3402 0134 02       		.uleb128 0x2
 3403 0135 18       		.uleb128 0x18
 3404 0136 00       		.byte	0
 3405 0137 00       		.byte	0
 3406 0138 14       		.uleb128 0x14
 3407 0139 2E       		.uleb128 0x2e
 3408 013a 00       		.byte	0
 3409 013b 3F       		.uleb128 0x3f
 3410 013c 19       		.uleb128 0x19
 3411 013d 03       		.uleb128 0x3
 3412 013e 0E       		.uleb128 0xe
 3413 013f 3A       		.uleb128 0x3a
 3414 0140 0B       		.uleb128 0xb
 3415 0141 3B       		.uleb128 0x3b
 3416 0142 0B       		.uleb128 0xb
 3417 0143 11       		.uleb128 0x11
 3418 0144 01       		.uleb128 0x1
 3419 0145 12       		.uleb128 0x12
 3420 0146 06       		.uleb128 0x6
 3421 0147 40       		.uleb128 0x40
 3422 0148 18       		.uleb128 0x18
 3423 0149 9742     		.uleb128 0x2117
 3424 014b 19       		.uleb128 0x19
 3425 014c 00       		.byte	0
 3426 014d 00       		.byte	0
 3427 014e 15       		.uleb128 0x15
 3428 014f 2E       		.uleb128 0x2e
 3429 0150 01       		.byte	0x1
 3430 0151 3F       		.uleb128 0x3f
 3431 0152 19       		.uleb128 0x19
 3432 0153 03       		.uleb128 0x3
 3433 0154 0E       		.uleb128 0xe
 3434 0155 3A       		.uleb128 0x3a
 3435 0156 0B       		.uleb128 0xb
 3436 0157 3B       		.uleb128 0x3b
 3437 0158 05       		.uleb128 0x5
 3438 0159 49       		.uleb128 0x49
 3439 015a 13       		.uleb128 0x13
 3440 015b 11       		.uleb128 0x11
 3441 015c 01       		.uleb128 0x1
 3442 015d 12       		.uleb128 0x12
 3443 015e 06       		.uleb128 0x6
 3444 015f 40       		.uleb128 0x40
 3445 0160 18       		.uleb128 0x18
 3446 0161 9642     		.uleb128 0x2116
 3447 0163 19       		.uleb128 0x19
 3448 0164 01       		.uleb128 0x1
 3449 0165 13       		.uleb128 0x13
 3450 0166 00       		.byte	0
 3451 0167 00       		.byte	0
 3452 0168 16       		.uleb128 0x16
 3453 0169 34       		.uleb128 0x34
 3454 016a 00       		.byte	0
 3455 016b 03       		.uleb128 0x3
 3456 016c 0E       		.uleb128 0xe
 3457 016d 3A       		.uleb128 0x3a
 3458 016e 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 74


 3459 016f 3B       		.uleb128 0x3b
 3460 0170 05       		.uleb128 0x5
 3461 0171 49       		.uleb128 0x49
 3462 0172 13       		.uleb128 0x13
 3463 0173 02       		.uleb128 0x2
 3464 0174 18       		.uleb128 0x18
 3465 0175 00       		.byte	0
 3466 0176 00       		.byte	0
 3467 0177 17       		.uleb128 0x17
 3468 0178 2E       		.uleb128 0x2e
 3469 0179 00       		.byte	0
 3470 017a 3F       		.uleb128 0x3f
 3471 017b 19       		.uleb128 0x19
 3472 017c 03       		.uleb128 0x3
 3473 017d 0E       		.uleb128 0xe
 3474 017e 3A       		.uleb128 0x3a
 3475 017f 0B       		.uleb128 0xb
 3476 0180 3B       		.uleb128 0x3b
 3477 0181 05       		.uleb128 0x5
 3478 0182 49       		.uleb128 0x49
 3479 0183 13       		.uleb128 0x13
 3480 0184 11       		.uleb128 0x11
 3481 0185 01       		.uleb128 0x1
 3482 0186 12       		.uleb128 0x12
 3483 0187 06       		.uleb128 0x6
 3484 0188 40       		.uleb128 0x40
 3485 0189 18       		.uleb128 0x18
 3486 018a 9742     		.uleb128 0x2117
 3487 018c 19       		.uleb128 0x19
 3488 018d 00       		.byte	0
 3489 018e 00       		.byte	0
 3490 018f 18       		.uleb128 0x18
 3491 0190 2E       		.uleb128 0x2e
 3492 0191 00       		.byte	0
 3493 0192 3F       		.uleb128 0x3f
 3494 0193 19       		.uleb128 0x19
 3495 0194 03       		.uleb128 0x3
 3496 0195 0E       		.uleb128 0xe
 3497 0196 3A       		.uleb128 0x3a
 3498 0197 0B       		.uleb128 0xb
 3499 0198 3B       		.uleb128 0x3b
 3500 0199 05       		.uleb128 0x5
 3501 019a 11       		.uleb128 0x11
 3502 019b 01       		.uleb128 0x1
 3503 019c 12       		.uleb128 0x12
 3504 019d 06       		.uleb128 0x6
 3505 019e 40       		.uleb128 0x40
 3506 019f 18       		.uleb128 0x18
 3507 01a0 9742     		.uleb128 0x2117
 3508 01a2 19       		.uleb128 0x19
 3509 01a3 00       		.byte	0
 3510 01a4 00       		.byte	0
 3511 01a5 19       		.uleb128 0x19
 3512 01a6 2E       		.uleb128 0x2e
 3513 01a7 01       		.byte	0x1
 3514 01a8 3F       		.uleb128 0x3f
 3515 01a9 19       		.uleb128 0x19
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 75


 3516 01aa 03       		.uleb128 0x3
 3517 01ab 0E       		.uleb128 0xe
 3518 01ac 3A       		.uleb128 0x3a
 3519 01ad 0B       		.uleb128 0xb
 3520 01ae 3B       		.uleb128 0x3b
 3521 01af 05       		.uleb128 0x5
 3522 01b0 27       		.uleb128 0x27
 3523 01b1 19       		.uleb128 0x19
 3524 01b2 49       		.uleb128 0x49
 3525 01b3 13       		.uleb128 0x13
 3526 01b4 11       		.uleb128 0x11
 3527 01b5 01       		.uleb128 0x1
 3528 01b6 12       		.uleb128 0x12
 3529 01b7 06       		.uleb128 0x6
 3530 01b8 40       		.uleb128 0x40
 3531 01b9 18       		.uleb128 0x18
 3532 01ba 9742     		.uleb128 0x2117
 3533 01bc 19       		.uleb128 0x19
 3534 01bd 01       		.uleb128 0x1
 3535 01be 13       		.uleb128 0x13
 3536 01bf 00       		.byte	0
 3537 01c0 00       		.byte	0
 3538 01c1 1A       		.uleb128 0x1a
 3539 01c2 05       		.uleb128 0x5
 3540 01c3 00       		.byte	0
 3541 01c4 03       		.uleb128 0x3
 3542 01c5 0E       		.uleb128 0xe
 3543 01c6 3A       		.uleb128 0x3a
 3544 01c7 0B       		.uleb128 0xb
 3545 01c8 3B       		.uleb128 0x3b
 3546 01c9 05       		.uleb128 0x5
 3547 01ca 49       		.uleb128 0x49
 3548 01cb 13       		.uleb128 0x13
 3549 01cc 02       		.uleb128 0x2
 3550 01cd 18       		.uleb128 0x18
 3551 01ce 00       		.byte	0
 3552 01cf 00       		.byte	0
 3553 01d0 1B       		.uleb128 0x1b
 3554 01d1 34       		.uleb128 0x34
 3555 01d2 00       		.byte	0
 3556 01d3 03       		.uleb128 0x3
 3557 01d4 08       		.uleb128 0x8
 3558 01d5 3A       		.uleb128 0x3a
 3559 01d6 0B       		.uleb128 0xb
 3560 01d7 3B       		.uleb128 0x3b
 3561 01d8 05       		.uleb128 0x5
 3562 01d9 49       		.uleb128 0x49
 3563 01da 13       		.uleb128 0x13
 3564 01db 02       		.uleb128 0x2
 3565 01dc 18       		.uleb128 0x18
 3566 01dd 00       		.byte	0
 3567 01de 00       		.byte	0
 3568 01df 1C       		.uleb128 0x1c
 3569 01e0 0F       		.uleb128 0xf
 3570 01e1 00       		.byte	0
 3571 01e2 0B       		.uleb128 0xb
 3572 01e3 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 76


 3573 01e4 49       		.uleb128 0x49
 3574 01e5 13       		.uleb128 0x13
 3575 01e6 00       		.byte	0
 3576 01e7 00       		.byte	0
 3577 01e8 1D       		.uleb128 0x1d
 3578 01e9 2E       		.uleb128 0x2e
 3579 01ea 00       		.byte	0
 3580 01eb 3F       		.uleb128 0x3f
 3581 01ec 19       		.uleb128 0x19
 3582 01ed 03       		.uleb128 0x3
 3583 01ee 0E       		.uleb128 0xe
 3584 01ef 3A       		.uleb128 0x3a
 3585 01f0 0B       		.uleb128 0xb
 3586 01f1 3B       		.uleb128 0x3b
 3587 01f2 05       		.uleb128 0x5
 3588 01f3 11       		.uleb128 0x11
 3589 01f4 01       		.uleb128 0x1
 3590 01f5 12       		.uleb128 0x12
 3591 01f6 06       		.uleb128 0x6
 3592 01f7 40       		.uleb128 0x40
 3593 01f8 18       		.uleb128 0x18
 3594 01f9 9642     		.uleb128 0x2116
 3595 01fb 19       		.uleb128 0x19
 3596 01fc 00       		.byte	0
 3597 01fd 00       		.byte	0
 3598 01fe 1E       		.uleb128 0x1e
 3599 01ff 34       		.uleb128 0x34
 3600 0200 00       		.byte	0
 3601 0201 03       		.uleb128 0x3
 3602 0202 0E       		.uleb128 0xe
 3603 0203 3A       		.uleb128 0x3a
 3604 0204 0B       		.uleb128 0xb
 3605 0205 3B       		.uleb128 0x3b
 3606 0206 05       		.uleb128 0x5
 3607 0207 49       		.uleb128 0x49
 3608 0208 13       		.uleb128 0x13
 3609 0209 3F       		.uleb128 0x3f
 3610 020a 19       		.uleb128 0x19
 3611 020b 3C       		.uleb128 0x3c
 3612 020c 19       		.uleb128 0x19
 3613 020d 00       		.byte	0
 3614 020e 00       		.byte	0
 3615 020f 1F       		.uleb128 0x1f
 3616 0210 35       		.uleb128 0x35
 3617 0211 00       		.byte	0
 3618 0212 49       		.uleb128 0x49
 3619 0213 13       		.uleb128 0x13
 3620 0214 00       		.byte	0
 3621 0215 00       		.byte	0
 3622 0216 20       		.uleb128 0x20
 3623 0217 34       		.uleb128 0x34
 3624 0218 00       		.byte	0
 3625 0219 03       		.uleb128 0x3
 3626 021a 08       		.uleb128 0x8
 3627 021b 3A       		.uleb128 0x3a
 3628 021c 0B       		.uleb128 0xb
 3629 021d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 77


 3630 021e 0B       		.uleb128 0xb
 3631 021f 49       		.uleb128 0x49
 3632 0220 13       		.uleb128 0x13
 3633 0221 3F       		.uleb128 0x3f
 3634 0222 19       		.uleb128 0x19
 3635 0223 02       		.uleb128 0x2
 3636 0224 18       		.uleb128 0x18
 3637 0225 00       		.byte	0
 3638 0226 00       		.byte	0
 3639 0227 21       		.uleb128 0x21
 3640 0228 34       		.uleb128 0x34
 3641 0229 00       		.byte	0
 3642 022a 03       		.uleb128 0x3
 3643 022b 0E       		.uleb128 0xe
 3644 022c 3A       		.uleb128 0x3a
 3645 022d 0B       		.uleb128 0xb
 3646 022e 3B       		.uleb128 0x3b
 3647 022f 0B       		.uleb128 0xb
 3648 0230 49       		.uleb128 0x49
 3649 0231 13       		.uleb128 0x13
 3650 0232 3F       		.uleb128 0x3f
 3651 0233 19       		.uleb128 0x19
 3652 0234 02       		.uleb128 0x2
 3653 0235 18       		.uleb128 0x18
 3654 0236 00       		.byte	0
 3655 0237 00       		.byte	0
 3656 0238 22       		.uleb128 0x22
 3657 0239 01       		.uleb128 0x1
 3658 023a 01       		.byte	0x1
 3659 023b 49       		.uleb128 0x49
 3660 023c 13       		.uleb128 0x13
 3661 023d 01       		.uleb128 0x1
 3662 023e 13       		.uleb128 0x13
 3663 023f 00       		.byte	0
 3664 0240 00       		.byte	0
 3665 0241 23       		.uleb128 0x23
 3666 0242 21       		.uleb128 0x21
 3667 0243 00       		.byte	0
 3668 0244 49       		.uleb128 0x49
 3669 0245 13       		.uleb128 0x13
 3670 0246 2F       		.uleb128 0x2f
 3671 0247 0B       		.uleb128 0xb
 3672 0248 00       		.byte	0
 3673 0249 00       		.byte	0
 3674 024a 24       		.uleb128 0x24
 3675 024b 34       		.uleb128 0x34
 3676 024c 00       		.byte	0
 3677 024d 03       		.uleb128 0x3
 3678 024e 08       		.uleb128 0x8
 3679 024f 3A       		.uleb128 0x3a
 3680 0250 0B       		.uleb128 0xb
 3681 0251 3B       		.uleb128 0x3b
 3682 0252 0B       		.uleb128 0xb
 3683 0253 49       		.uleb128 0x49
 3684 0254 13       		.uleb128 0x13
 3685 0255 3F       		.uleb128 0x3f
 3686 0256 19       		.uleb128 0x19
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 78


 3687 0257 3C       		.uleb128 0x3c
 3688 0258 19       		.uleb128 0x19
 3689 0259 00       		.byte	0
 3690 025a 00       		.byte	0
 3691 025b 25       		.uleb128 0x25
 3692 025c 34       		.uleb128 0x34
 3693 025d 00       		.byte	0
 3694 025e 03       		.uleb128 0x3
 3695 025f 0E       		.uleb128 0xe
 3696 0260 3A       		.uleb128 0x3a
 3697 0261 0B       		.uleb128 0xb
 3698 0262 3B       		.uleb128 0x3b
 3699 0263 0B       		.uleb128 0xb
 3700 0264 49       		.uleb128 0x49
 3701 0265 13       		.uleb128 0x13
 3702 0266 3F       		.uleb128 0x3f
 3703 0267 19       		.uleb128 0x19
 3704 0268 3C       		.uleb128 0x3c
 3705 0269 19       		.uleb128 0x19
 3706 026a 00       		.byte	0
 3707 026b 00       		.byte	0
 3708 026c 26       		.uleb128 0x26
 3709 026d 34       		.uleb128 0x34
 3710 026e 00       		.byte	0
 3711 026f 03       		.uleb128 0x3
 3712 0270 0E       		.uleb128 0xe
 3713 0271 3A       		.uleb128 0x3a
 3714 0272 0B       		.uleb128 0xb
 3715 0273 3B       		.uleb128 0x3b
 3716 0274 05       		.uleb128 0x5
 3717 0275 49       		.uleb128 0x49
 3718 0276 13       		.uleb128 0x13
 3719 0277 3F       		.uleb128 0x3f
 3720 0278 19       		.uleb128 0x19
 3721 0279 02       		.uleb128 0x2
 3722 027a 18       		.uleb128 0x18
 3723 027b 00       		.byte	0
 3724 027c 00       		.byte	0
 3725 027d 00       		.byte	0
 3726              		.section	.debug_aranges,"",%progbits
 3727 0000 8C000000 		.4byte	0x8c
 3728 0004 0200     		.2byte	0x2
 3729 0006 00000000 		.4byte	.Ldebug_info0
 3730 000a 04       		.byte	0x4
 3731 000b 00       		.byte	0
 3732 000c 0000     		.2byte	0
 3733 000e 0000     		.2byte	0
 3734 0010 00000000 		.4byte	.LFB64
 3735 0014 EC000000 		.4byte	.LFE64-.LFB64
 3736 0018 00000000 		.4byte	.LFB65
 3737 001c 18000000 		.4byte	.LFE65-.LFB65
 3738 0020 00000000 		.4byte	.LFB66
 3739 0024 18000000 		.4byte	.LFE66-.LFB66
 3740 0028 00000000 		.4byte	.LFB67
 3741 002c 18000000 		.4byte	.LFE67-.LFB67
 3742 0030 00000000 		.4byte	.LFB68
 3743 0034 18000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 79


 3744 0038 00000000 		.4byte	.LFB69
 3745 003c 38000000 		.4byte	.LFE69-.LFB69
 3746 0040 00000000 		.4byte	.LFB70
 3747 0044 C0000000 		.4byte	.LFE70-.LFB70
 3748 0048 00000000 		.4byte	.LFB71
 3749 004c 54000000 		.4byte	.LFE71-.LFB71
 3750 0050 00000000 		.4byte	.LFB72
 3751 0054 34000000 		.4byte	.LFE72-.LFB72
 3752 0058 00000000 		.4byte	.LFB73
 3753 005c 90020000 		.4byte	.LFE73-.LFB73
 3754 0060 00000000 		.4byte	.LFB74
 3755 0064 70000000 		.4byte	.LFE74-.LFB74
 3756 0068 00000000 		.4byte	.LFB75
 3757 006c 68020000 		.4byte	.LFE75-.LFB75
 3758 0070 00000000 		.4byte	.LFB76
 3759 0074 1C000000 		.4byte	.LFE76-.LFB76
 3760 0078 00000000 		.4byte	.LFB77
 3761 007c A4000000 		.4byte	.LFE77-.LFB77
 3762 0080 00000000 		.4byte	.LFB78
 3763 0084 C4000000 		.4byte	.LFE78-.LFB78
 3764 0088 00000000 		.4byte	0
 3765 008c 00000000 		.4byte	0
 3766              		.section	.debug_ranges,"",%progbits
 3767              	.Ldebug_ranges0:
 3768 0000 00000000 		.4byte	.LFB64
 3769 0004 EC000000 		.4byte	.LFE64
 3770 0008 00000000 		.4byte	.LFB65
 3771 000c 18000000 		.4byte	.LFE65
 3772 0010 00000000 		.4byte	.LFB66
 3773 0014 18000000 		.4byte	.LFE66
 3774 0018 00000000 		.4byte	.LFB67
 3775 001c 18000000 		.4byte	.LFE67
 3776 0020 00000000 		.4byte	.LFB68
 3777 0024 18000000 		.4byte	.LFE68
 3778 0028 00000000 		.4byte	.LFB69
 3779 002c 38000000 		.4byte	.LFE69
 3780 0030 00000000 		.4byte	.LFB70
 3781 0034 C0000000 		.4byte	.LFE70
 3782 0038 00000000 		.4byte	.LFB71
 3783 003c 54000000 		.4byte	.LFE71
 3784 0040 00000000 		.4byte	.LFB72
 3785 0044 34000000 		.4byte	.LFE72
 3786 0048 00000000 		.4byte	.LFB73
 3787 004c 90020000 		.4byte	.LFE73
 3788 0050 00000000 		.4byte	.LFB74
 3789 0054 70000000 		.4byte	.LFE74
 3790 0058 00000000 		.4byte	.LFB75
 3791 005c 68020000 		.4byte	.LFE75
 3792 0060 00000000 		.4byte	.LFB76
 3793 0064 1C000000 		.4byte	.LFE76
 3794 0068 00000000 		.4byte	.LFB77
 3795 006c A4000000 		.4byte	.LFE77
 3796 0070 00000000 		.4byte	.LFB78
 3797 0074 C4000000 		.4byte	.LFE78
 3798 0078 00000000 		.4byte	0
 3799 007c 00000000 		.4byte	0
 3800              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 80


 3801              	.Ldebug_line0:
 3802 0000 FD030000 		.section	.debug_str,"MS",%progbits,1
 3802      02007001 
 3802      00000201 
 3802      FB0E0D00 
 3802      01010101 
 3803              	.LASF47:
 3804 0000 64697265 		.ascii	"direction\000"
 3804      6374696F 
 3804      6E00
 3805              	.LASF64:
 3806 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3806      61726441 
 3806      66746572 
 3806      5475726E 
 3806      00
 3807              	.LASF50:
 3808 001b 496E7374 		.ascii	"InstructionDirection\000"
 3808      72756374 
 3808      696F6E44 
 3808      69726563 
 3808      74696F6E 
 3809              	.LASF132:
 3810 0030 6D61696E 		.ascii	"main.c\000"
 3810      2E6300
 3811              	.LASF75:
 3812 0037 626C6F63 		.ascii	"blocksize\000"
 3812      6B73697A 
 3812      6500
 3813              	.LASF117:
 3814 0041 62756666 		.ascii	"buffer\000"
 3814      657200
 3815              	.LASF8:
 3816 0048 756E7369 		.ascii	"unsigned int\000"
 3816      676E6564 
 3816      20696E74 
 3816      00
 3817              	.LASF12:
 3818 0055 5F5F696E 		.ascii	"__int32_t\000"
 3818      7433325F 
 3818      7400
 3819              	.LASF18:
 3820 005f 696E7431 		.ascii	"int16\000"
 3820      3600
 3821              	.LASF108:
 3822 0065 73797374 		.ascii	"system_state\000"
 3822      656D5F73 
 3822      74617465 
 3822      00
 3823              	.LASF88:
 3824 0072 6E657874 		.ascii	"nextInstruction\000"
 3824      496E7374 
 3824      72756374 
 3824      696F6E00 
 3825              	.LASF131:
 3826 0082 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3826      43313120 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 81


 3826      352E342E 
 3826      31203230 
 3826      31363036 
 3827 00b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3827      20726576 
 3827      6973696F 
 3827      6E203233 
 3827      37373135 
 3828 00e8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3828      66756E63 
 3828      74696F6E 
 3828      2D736563 
 3828      74696F6E 
 3829              	.LASF69:
 3830 0110 53365F44 		.ascii	"S6_DETECTED\000"
 3830      45544543 
 3830      54454400 
 3831              	.LASF116:
 3832 011c 746F7461 		.ascii	"totalDistance\000"
 3832      6C446973 
 3832      74616E63 
 3832      6500
 3833              	.LASF34:
 3834 012a 67325F78 		.ascii	"g2_xpos\000"
 3834      706F7300 
 3835              	.LASF123:
 3836 0132 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 3836      61726455 
 3836      6E74696C 
 3836      54617267 
 3836      65745374 
 3837              	.LASF85:
 3838 0150 6E756D53 		.ascii	"numSteps\000"
 3838      74657073 
 3838      00
 3839              	.LASF78:
 3840 0159 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 3840      6F76656D 
 3840      656E7441 
 3840      63636F72 
 3840      64696E67 
 3841              	.LASF103:
 3842 017b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3842      5F72665F 
 3842      7472616E 
 3842      736D6973 
 3842      73696F6E 
 3843              	.LASF77:
 3844 0197 466F7277 		.ascii	"ForwardCourseCorrection\000"
 3844      61726443 
 3844      6F757273 
 3844      65436F72 
 3844      72656374 
 3845              	.LASF80:
 3846 01af 52657365 		.ascii	"ResetSensorFlags\000"
 3846      7453656E 
 3846      736F7246 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 82


 3846      6C616773 
 3846      00
 3847              	.LASF37:
 3848 01c0 67325F64 		.ascii	"g2_direction\000"
 3848      69726563 
 3848      74696F6E 
 3848      00
 3849              	.LASF118:
 3850 01cd 71756164 		.ascii	"quadDec2Count\000"
 3850      44656332 
 3850      436F756E 
 3850      7400
 3851              	.LASF19:
 3852 01db 666C6F61 		.ascii	"float\000"
 3852      7400
 3853              	.LASF79:
 3854 01e1 63757272 		.ascii	"currentInstructionDirection\000"
 3854      656E7449 
 3854      6E737472 
 3854      75637469 
 3854      6F6E4469 
 3855              	.LASF107:
 3856 01fd 75736242 		.ascii	"usbBuffer\000"
 3856      75666665 
 3856      7200
 3857              	.LASF84:
 3858 0207 636F756E 		.ascii	"count\000"
 3858      7400
 3859              	.LASF22:
 3860 020d 696E6465 		.ascii	"index\000"
 3860      7800
 3861              	.LASF7:
 3862 0213 6C6F6E67 		.ascii	"long long unsigned int\000"
 3862      206C6F6E 
 3862      6720756E 
 3862      7369676E 
 3862      65642069 
 3863              	.LASF46:
 3864 022a 496E7374 		.ascii	"Instruction\000"
 3864      72756374 
 3864      696F6E00 
 3865              	.LASF100:
 3866 0236 666C6167 		.ascii	"flag_packet\000"
 3866      5F706163 
 3866      6B657400 
 3867              	.LASF89:
 3868 0242 53657452 		.ascii	"SetRobotMovement\000"
 3868      6F626F74 
 3868      4D6F7665 
 3868      6D656E74 
 3868      00
 3869              	.LASF70:
 3870 0253 54494D45 		.ascii	"TIMER_FINISH\000"
 3870      525F4649 
 3870      4E495348 
 3870      00
 3871              	.LASF120:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 83


 3872 0260 6B656570 		.ascii	"keepLedOn\000"
 3872      4C65644F 
 3872      6E00
 3873              	.LASF42:
 3874 026a 466F7277 		.ascii	"ForwardUntilTarget\000"
 3874      61726455 
 3874      6E74696C 
 3874      54617267 
 3874      657400
 3875              	.LASF96:
 3876 027d 666C6167 		.ascii	"flag_ts_update\000"
 3876      5F74735F 
 3876      75706461 
 3876      746500
 3877              	.LASF95:
 3878 028c 666C6167 		.ascii	"flag_ts_enc\000"
 3878      5F74735F 
 3878      656E6300 
 3879              	.LASF82:
 3880 0298 71756164 		.ascii	"quadCountToRPM\000"
 3880      436F756E 
 3880      74546F52 
 3880      504D00
 3881              	.LASF130:
 3882 02a7 69676E6F 		.ascii	"ignoreSensor\000"
 3882      72655365 
 3882      6E736F72 
 3882      00
 3883              	.LASF43:
 3884 02b4 53746F70 		.ascii	"StopAtTarget\000"
 3884      41745461 
 3884      72676574 
 3884      00
 3885              	.LASF63:
 3886 02c1 77616974 		.ascii	"waitForTurn\000"
 3886      466F7254 
 3886      75726E00 
 3887              	.LASF24:
 3888 02cd 726F626F 		.ascii	"robot_ypos\000"
 3888      745F7970 
 3888      6F7300
 3889              	.LASF94:
 3890 02d8 74735F64 		.ascii	"ts_display\000"
 3890      6973706C 
 3890      617900
 3891              	.LASF112:
 3892 02e3 63757272 		.ascii	"currentOrientation\000"
 3892      656E744F 
 3892      7269656E 
 3892      74617469 
 3892      6F6E00
 3893              	.LASF11:
 3894 02f6 63686172 		.ascii	"char\000"
 3894      00
 3895              	.LASF28:
 3896 02fb 67305F73 		.ascii	"g0_speed\000"
 3896      70656564 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 84


 3896      00
 3897              	.LASF86:
 3898 0304 696E7374 		.ascii	"instructionList\000"
 3898      72756374 
 3898      696F6E4C 
 3898      69737400 
 3899              	.LASF87:
 3900 0314 696E7374 		.ascii	"instructionIndex\000"
 3900      72756374 
 3900      696F6E49 
 3900      6E646578 
 3900      00
 3901              	.LASF15:
 3902 0325 75696E74 		.ascii	"uint16\000"
 3902      313600
 3903              	.LASF17:
 3904 032c 696E7438 		.ascii	"int8\000"
 3904      00
 3905              	.LASF125:
 3906 0331 78426C6F 		.ascii	"xBlocksize\000"
 3906      636B7369 
 3906      7A6500
 3907              	.LASF33:
 3908 033c 67315F64 		.ascii	"g1_direction\000"
 3908      69726563 
 3908      74696F6E 
 3908      00
 3909              	.LASF53:
 3910 0349 4C656674 		.ascii	"Left\000"
 3910      00
 3911              	.LASF73:
 3912 034e 73706565 		.ascii	"speedTimer\000"
 3912      6454696D 
 3912      657200
 3913              	.LASF122:
 3914 0359 7475726E 		.ascii	"turnFinishedFlag\000"
 3914      46696E69 
 3914      73686564 
 3914      466C6167 
 3914      00
 3915              	.LASF39:
 3916 036a 77616974 		.ascii	"waitForLeftTurn\000"
 3916      466F724C 
 3916      65667454 
 3916      75726E00 
 3917              	.LASF6:
 3918 037a 6C6F6E67 		.ascii	"long long int\000"
 3918      206C6F6E 
 3918      6720696E 
 3918      7400
 3919              	.LASF30:
 3920 0388 67315F78 		.ascii	"g1_xpos\000"
 3920      706F7300 
 3921              	.LASF124:
 3922 0390 626C6F63 		.ascii	"blockSizeTotal\000"
 3922      6B53697A 
 3922      65546F74 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 85


 3922      616C00
 3923              	.LASF113:
 3924 039f 70726576 		.ascii	"previousOrientation\000"
 3924      696F7573 
 3924      4F726965 
 3924      6E746174 
 3924      696F6E00 
 3925              	.LASF41:
 3926 03b3 75547572 		.ascii	"uTurn\000"
 3926      6E00
 3927              	.LASF72:
 3928 03b9 6E657744 		.ascii	"newDistance\000"
 3928      69737461 
 3928      6E636500 
 3929              	.LASF36:
 3930 03c5 67325F73 		.ascii	"g2_speed\000"
 3930      70656564 
 3930      00
 3931              	.LASF27:
 3932 03ce 67305F79 		.ascii	"g0_ypos\000"
 3932      706F7300 
 3933              	.LASF109:
 3934 03d6 666F6F64 		.ascii	"food_list\000"
 3934      5F6C6973 
 3934      7400
 3935              	.LASF58:
 3936 03e0 5475726E 		.ascii	"TurnLeft\000"
 3936      4C656674 
 3936      00
 3937              	.LASF93:
 3938 03e9 74735F73 		.ascii	"ts_speed\000"
 3938      70656564 
 3938      00
 3939              	.LASF62:
 3940 03f2 556E6B6E 		.ascii	"Unknown\000"
 3940      6F776E00 
 3941              	.LASF76:
 3942 03fa 64697265 		.ascii	"directionState\000"
 3942      6374696F 
 3942      6E537461 
 3942      746500
 3943              	.LASF16:
 3944 0409 75696E74 		.ascii	"uint32\000"
 3944      333200
 3945              	.LASF40:
 3946 0410 77616974 		.ascii	"waitForRightTurn\000"
 3946      466F7252 
 3946      69676874 
 3946      5475726E 
 3946      00
 3947              	.LASF57:
 3948 0421 5475726E 		.ascii	"TurnRight\000"
 3948      52696768 
 3948      7400
 3949              	.LASF45:
 3950 042b 64617461 		.ascii	"data_main\000"
 3950      5F6D6169 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 86


 3950      6E00
 3951              	.LASF21:
 3952 0435 72737369 		.ascii	"rssi\000"
 3952      00
 3953              	.LASF29:
 3954 043a 67305F64 		.ascii	"g0_direction\000"
 3954      69726563 
 3954      74696F6E 
 3954      00
 3955              	.LASF111:
 3956 0447 70726576 		.ascii	"previousDirection\000"
 3956      696F7573 
 3956      44697265 
 3956      6374696F 
 3956      6E00
 3957              	.LASF9:
 3958 0459 6C6F6E67 		.ascii	"long double\000"
 3958      20646F75 
 3958      626C6500 
 3959              	.LASF97:
 3960 0465 666C6167 		.ascii	"flag_ts_speed\000"
 3960      5F74735F 
 3960      73706565 
 3960      6400
 3961              	.LASF102:
 3962 0473 64617461 		.ascii	"dataready_flag\000"
 3962      72656164 
 3962      795F666C 
 3962      616700
 3963              	.LASF99:
 3964 0482 666C6167 		.ascii	"flag_rx\000"
 3964      5F727800 
 3965              	.LASF126:
 3966 048a 79426C6F 		.ascii	"yBlocksize\000"
 3966      636B7369 
 3966      7A6500
 3967              	.LASF2:
 3968 0495 73686F72 		.ascii	"short int\000"
 3968      7420696E 
 3968      7400
 3969              	.LASF67:
 3970 049f 53345F44 		.ascii	"S4_DETECTED\000"
 3970      45544543 
 3970      54454400 
 3971              	.LASF66:
 3972 04ab 53335F44 		.ascii	"S3_DETECTED\000"
 3972      45544543 
 3972      54454400 
 3973              	.LASF4:
 3974 04b7 6C6F6E67 		.ascii	"long int\000"
 3974      20696E74 
 3974      00
 3975              	.LASF90:
 3976 04c0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3976      52784275 
 3976      66666572 
 3976      00
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 87


 3977              	.LASF92:
 3978 04cd 74735F75 		.ascii	"ts_update\000"
 3978      70646174 
 3978      6500
 3979              	.LASF56:
 3980 04d7 466F7277 		.ascii	"Forward\000"
 3980      61726400 
 3981              	.LASF115:
 3982 04df 746F7461 		.ascii	"totalMilliseconds\000"
 3982      6C4D696C 
 3982      6C697365 
 3982      636F6E64 
 3982      7300
 3983              	.LASF35:
 3984 04f1 67325F79 		.ascii	"g2_ypos\000"
 3984      706F7300 
 3985              	.LASF81:
 3986 04f9 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 3986      546F4E65 
 3986      7874496E 
 3986      73747275 
 3986      6374696F 
 3987              	.LASF51:
 3988 050f 4F726965 		.ascii	"OrientationState\000"
 3988      6E746174 
 3988      696F6E53 
 3988      74617465 
 3988      00
 3989              	.LASF52:
 3990 0520 446F776E 		.ascii	"Down\000"
 3990      00
 3991              	.LASF54:
 3992 0525 52696768 		.ascii	"Right\000"
 3992      7400
 3993              	.LASF31:
 3994 052b 67315F79 		.ascii	"g1_ypos\000"
 3994      706F7300 
 3995              	.LASF110:
 3996 0533 63757272 		.ascii	"currentDirection\000"
 3996      656E7444 
 3996      69726563 
 3996      74696F6E 
 3996      00
 3997              	.LASF133:
 3998 0544 483A5C33 		.ascii	"H:\\301-Robot\\psoc student pack\\psoc_code_base\\C"
 3998      30312D52 
 3998      6F626F74 
 3998      5C70736F 
 3998      63207374 
 3999 0573 53333031 		.ascii	"S301_Class.cydsn\000"
 3999      5F436C61 
 3999      73732E63 
 3999      7964736E 
 3999      00
 4000              	.LASF10:
 4001 0584 73697A65 		.ascii	"sizetype\000"
 4001      74797065 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 88


 4001      00
 4002              	.LASF5:
 4003 058d 6C6F6E67 		.ascii	"long unsigned int\000"
 4003      20756E73 
 4003      69676E65 
 4003      6420696E 
 4003      7400
 4004              	.LASF121:
 4005 059f 73746F70 		.ascii	"stopBuffer\000"
 4005      42756666 
 4005      657200
 4006              	.LASF13:
 4007 05aa 696E7433 		.ascii	"int32_t\000"
 4007      325F7400 
 4008              	.LASF23:
 4009 05b2 726F626F 		.ascii	"robot_xpos\000"
 4009      745F7870 
 4009      6F7300
 4010              	.LASF106:
 4011 05bd 656E7472 		.ascii	"entry\000"
 4011      7900
 4012              	.LASF55:
 4013 05c3 526F626F 		.ascii	"RobotMovement\000"
 4013      744D6F76 
 4013      656D656E 
 4013      7400
 4014              	.LASF1:
 4015 05d1 756E7369 		.ascii	"unsigned char\000"
 4015      676E6564 
 4015      20636861 
 4015      7200
 4016              	.LASF129:
 4017 05df 73746F70 		.ascii	"stoppedAfterTurn\000"
 4017      70656441 
 4017      66746572 
 4017      5475726E 
 4017      00
 4018              	.LASF105:
 4019 05f0 6C696E65 		.ascii	"line\000"
 4019      00
 4020              	.LASF60:
 4021 05f5 41646A75 		.ascii	"AdjustToTheRight\000"
 4021      7374546F 
 4021      54686552 
 4021      69676874 
 4021      00
 4022              	.LASF61:
 4023 0606 53746F70 		.ascii	"Stop\000"
 4023      00
 4024              	.LASF83:
 4025 060b 47657449 		.ascii	"GetInstructionAtIndex\000"
 4025      6E737472 
 4025      75637469 
 4025      6F6E4174 
 4025      496E6465 
 4026              	.LASF91:
 4027 0621 74735F65 		.ascii	"ts_enc\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 89


 4027      6E6300
 4028              	.LASF98:
 4029 0628 666C6167 		.ascii	"flag_ts_display\000"
 4029      5F74735F 
 4029      64697370 
 4029      6C617900 
 4030              	.LASF44:
 4031 0638 536B6970 		.ascii	"Skip\000"
 4031      00
 4032              	.LASF104:
 4033 063d 64697370 		.ascii	"displaystring\000"
 4033      6C617973 
 4033      7472696E 
 4033      6700
 4034              	.LASF38:
 4035 064b 476F466F 		.ascii	"GoForward\000"
 4035      72776172 
 4035      6400
 4036              	.LASF68:
 4037 0655 53355F44 		.ascii	"S5_DETECTED\000"
 4037      45544543 
 4037      54454400 
 4038              	.LASF0:
 4039 0661 7369676E 		.ascii	"signed char\000"
 4039      65642063 
 4039      68617200 
 4040              	.LASF127:
 4041 066d 63757272 		.ascii	"currentRow\000"
 4041      656E7452 
 4041      6F7700
 4042              	.LASF3:
 4043 0678 73686F72 		.ascii	"short unsigned int\000"
 4043      7420756E 
 4043      7369676E 
 4043      65642069 
 4043      6E7400
 4044              	.LASF25:
 4045 068b 726F626F 		.ascii	"robot_orientation\000"
 4045      745F6F72 
 4045      69656E74 
 4045      6174696F 
 4045      6E00
 4046              	.LASF71:
 4047 069d 6D61696E 		.ascii	"main\000"
 4047      00
 4048              	.LASF114:
 4049 06a2 63757272 		.ascii	"currentInstruction\000"
 4049      656E7449 
 4049      6E737472 
 4049      75637469 
 4049      6F6E00
 4050              	.LASF59:
 4051 06b5 41646A75 		.ascii	"AdjustToTheLeft\000"
 4051      7374546F 
 4051      5468654C 
 4051      65667400 
 4052              	.LASF65:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cclgeXO2.s 			page 90


 4053 06c5 4261636B 		.ascii	"Backward\000"
 4053      77617264 
 4053      00
 4054              	.LASF14:
 4055 06ce 75696E74 		.ascii	"uint8\000"
 4055      3800
 4056              	.LASF20:
 4057 06d4 646F7562 		.ascii	"double\000"
 4057      6C6500
 4058              	.LASF74:
 4059 06db 43686563 		.ascii	"CheckSensorDirection\000"
 4059      6B53656E 
 4059      736F7244 
 4059      69726563 
 4059      74696F6E 
 4060              	.LASF128:
 4061 06f0 63757272 		.ascii	"currentCol\000"
 4061      656E7443 
 4061      6F6C00
 4062              	.LASF26:
 4063 06fb 67305F78 		.ascii	"g0_xpos\000"
 4063      706F7300 
 4064              	.LASF119:
 4065 0703 74696D65 		.ascii	"timerInt\000"
 4065      72496E74 
 4065      00
 4066              	.LASF101:
 4067 070c 666C6167 		.ascii	"flag_KB_string\000"
 4067      5F4B425F 
 4067      73747269 
 4067      6E6700
 4068              	.LASF32:
 4069 071b 67315F73 		.ascii	"g1_speed\000"
 4069      70656564 
 4069      00
 4070              	.LASF48:
 4071 0724 69676E6F 		.ascii	"ignoreL\000"
 4071      72654C00 
 4072              	.LASF49:
 4073 072c 69676E6F 		.ascii	"ignoreR\000"
 4073      72655200 
 4074              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
