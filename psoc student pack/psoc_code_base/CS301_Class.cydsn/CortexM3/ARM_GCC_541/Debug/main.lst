ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.align	2
 107              		.type	map, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 3


 108              		.size	map, 1140
 109              	map:
 110 0044 01000000 		.word	1
 111 0048 01000000 		.word	1
 112 004c 01000000 		.word	1
 113 0050 01000000 		.word	1
 114 0054 01000000 		.word	1
 115 0058 01000000 		.word	1
 116 005c 01000000 		.word	1
 117 0060 01000000 		.word	1
 118 0064 01000000 		.word	1
 119 0068 01000000 		.word	1
 120 006c 01000000 		.word	1
 121 0070 01000000 		.word	1
 122 0074 01000000 		.word	1
 123 0078 01000000 		.word	1
 124 007c 01000000 		.word	1
 125 0080 01000000 		.word	1
 126 0084 01000000 		.word	1
 127 0088 01000000 		.word	1
 128 008c 01000000 		.word	1
 129 0090 01000000 		.word	1
 130 0094 00000000 		.word	0
 131 0098 00000000 		.word	0
 132 009c 00000000 		.word	0
 133 00a0 00000000 		.word	0
 134 00a4 00000000 		.word	0
 135 00a8 01000000 		.word	1
 136 00ac 00000000 		.word	0
 137 00b0 00000000 		.word	0
 138 00b4 00000000 		.word	0
 139 00b8 00000000 		.word	0
 140 00bc 00000000 		.word	0
 141 00c0 00000000 		.word	0
 142 00c4 00000000 		.word	0
 143 00c8 00000000 		.word	0
 144 00cc 00000000 		.word	0
 145 00d0 00000000 		.word	0
 146 00d4 00000000 		.word	0
 147 00d8 01000000 		.word	1
 148 00dc 01000000 		.word	1
 149 00e0 01000000 		.word	1
 150 00e4 01000000 		.word	1
 151 00e8 01000000 		.word	1
 152 00ec 01000000 		.word	1
 153 00f0 00000000 		.word	0
 154 00f4 01000000 		.word	1
 155 00f8 00000000 		.word	0
 156 00fc 01000000 		.word	1
 157 0100 01000000 		.word	1
 158 0104 01000000 		.word	1
 159 0108 01000000 		.word	1
 160 010c 01000000 		.word	1
 161 0110 01000000 		.word	1
 162 0114 01000000 		.word	1
 163 0118 00000000 		.word	0
 164 011c 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 4


 165 0120 00000000 		.word	0
 166 0124 01000000 		.word	1
 167 0128 01000000 		.word	1
 168 012c 00000000 		.word	0
 169 0130 00000000 		.word	0
 170 0134 00000000 		.word	0
 171 0138 00000000 		.word	0
 172 013c 00000000 		.word	0
 173 0140 00000000 		.word	0
 174 0144 00000000 		.word	0
 175 0148 00000000 		.word	0
 176 014c 00000000 		.word	0
 177 0150 00000000 		.word	0
 178 0154 00000000 		.word	0
 179 0158 00000000 		.word	0
 180 015c 00000000 		.word	0
 181 0160 01000000 		.word	1
 182 0164 00000000 		.word	0
 183 0168 01000000 		.word	1
 184 016c 00000000 		.word	0
 185 0170 01000000 		.word	1
 186 0174 01000000 		.word	1
 187 0178 00000000 		.word	0
 188 017c 01000000 		.word	1
 189 0180 00000000 		.word	0
 190 0184 01000000 		.word	1
 191 0188 01000000 		.word	1
 192 018c 01000000 		.word	1
 193 0190 01000000 		.word	1
 194 0194 01000000 		.word	1
 195 0198 00000000 		.word	0
 196 019c 01000000 		.word	1
 197 01a0 00000000 		.word	0
 198 01a4 01000000 		.word	1
 199 01a8 01000000 		.word	1
 200 01ac 01000000 		.word	1
 201 01b0 00000000 		.word	0
 202 01b4 01000000 		.word	1
 203 01b8 00000000 		.word	0
 204 01bc 01000000 		.word	1
 205 01c0 01000000 		.word	1
 206 01c4 00000000 		.word	0
 207 01c8 01000000 		.word	1
 208 01cc 00000000 		.word	0
 209 01d0 00000000 		.word	0
 210 01d4 00000000 		.word	0
 211 01d8 01000000 		.word	1
 212 01dc 00000000 		.word	0
 213 01e0 00000000 		.word	0
 214 01e4 00000000 		.word	0
 215 01e8 01000000 		.word	1
 216 01ec 00000000 		.word	0
 217 01f0 01000000 		.word	1
 218 01f4 00000000 		.word	0
 219 01f8 00000000 		.word	0
 220 01fc 00000000 		.word	0
 221 0200 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 5


 222 0204 00000000 		.word	0
 223 0208 01000000 		.word	1
 224 020c 01000000 		.word	1
 225 0210 00000000 		.word	0
 226 0214 01000000 		.word	1
 227 0218 01000000 		.word	1
 228 021c 01000000 		.word	1
 229 0220 00000000 		.word	0
 230 0224 01000000 		.word	1
 231 0228 00000000 		.word	0
 232 022c 01000000 		.word	1
 233 0230 00000000 		.word	0
 234 0234 01000000 		.word	1
 235 0238 00000000 		.word	0
 236 023c 01000000 		.word	1
 237 0240 00000000 		.word	0
 238 0244 01000000 		.word	1
 239 0248 01000000 		.word	1
 240 024c 01000000 		.word	1
 241 0250 00000000 		.word	0
 242 0254 01000000 		.word	1
 243 0258 01000000 		.word	1
 244 025c 00000000 		.word	0
 245 0260 00000000 		.word	0
 246 0264 00000000 		.word	0
 247 0268 00000000 		.word	0
 248 026c 00000000 		.word	0
 249 0270 01000000 		.word	1
 250 0274 00000000 		.word	0
 251 0278 01000000 		.word	1
 252 027c 00000000 		.word	0
 253 0280 01000000 		.word	1
 254 0284 00000000 		.word	0
 255 0288 01000000 		.word	1
 256 028c 00000000 		.word	0
 257 0290 01000000 		.word	1
 258 0294 00000000 		.word	0
 259 0298 00000000 		.word	0
 260 029c 00000000 		.word	0
 261 02a0 01000000 		.word	1
 262 02a4 01000000 		.word	1
 263 02a8 00000000 		.word	0
 264 02ac 01000000 		.word	1
 265 02b0 01000000 		.word	1
 266 02b4 01000000 		.word	1
 267 02b8 01000000 		.word	1
 268 02bc 01000000 		.word	1
 269 02c0 00000000 		.word	0
 270 02c4 01000000 		.word	1
 271 02c8 00000000 		.word	0
 272 02cc 01000000 		.word	1
 273 02d0 01000000 		.word	1
 274 02d4 01000000 		.word	1
 275 02d8 00000000 		.word	0
 276 02dc 01000000 		.word	1
 277 02e0 00000000 		.word	0
 278 02e4 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 6


 279 02e8 01000000 		.word	1
 280 02ec 01000000 		.word	1
 281 02f0 01000000 		.word	1
 282 02f4 00000000 		.word	0
 283 02f8 00000000 		.word	0
 284 02fc 00000000 		.word	0
 285 0300 00000000 		.word	0
 286 0304 00000000 		.word	0
 287 0308 00000000 		.word	0
 288 030c 00000000 		.word	0
 289 0310 01000000 		.word	1
 290 0314 00000000 		.word	0
 291 0318 00000000 		.word	0
 292 031c 00000000 		.word	0
 293 0320 01000000 		.word	1
 294 0324 00000000 		.word	0
 295 0328 01000000 		.word	1
 296 032c 00000000 		.word	0
 297 0330 00000000 		.word	0
 298 0334 00000000 		.word	0
 299 0338 01000000 		.word	1
 300 033c 01000000 		.word	1
 301 0340 01000000 		.word	1
 302 0344 01000000 		.word	1
 303 0348 01000000 		.word	1
 304 034c 01000000 		.word	1
 305 0350 01000000 		.word	1
 306 0354 01000000 		.word	1
 307 0358 00000000 		.word	0
 308 035c 01000000 		.word	1
 309 0360 01000000 		.word	1
 310 0364 01000000 		.word	1
 311 0368 00000000 		.word	0
 312 036c 01000000 		.word	1
 313 0370 00000000 		.word	0
 314 0374 01000000 		.word	1
 315 0378 01000000 		.word	1
 316 037c 01000000 		.word	1
 317 0380 00000000 		.word	0
 318 0384 01000000 		.word	1
 319 0388 01000000 		.word	1
 320 038c 00000000 		.word	0
 321 0390 00000000 		.word	0
 322 0394 00000000 		.word	0
 323 0398 00000000 		.word	0
 324 039c 00000000 		.word	0
 325 03a0 00000000 		.word	0
 326 03a4 00000000 		.word	0
 327 03a8 00000000 		.word	0
 328 03ac 00000000 		.word	0
 329 03b0 01000000 		.word	1
 330 03b4 00000000 		.word	0
 331 03b8 01000000 		.word	1
 332 03bc 00000000 		.word	0
 333 03c0 00000000 		.word	0
 334 03c4 00000000 		.word	0
 335 03c8 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 7


 336 03cc 00000000 		.word	0
 337 03d0 01000000 		.word	1
 338 03d4 01000000 		.word	1
 339 03d8 00000000 		.word	0
 340 03dc 01000000 		.word	1
 341 03e0 01000000 		.word	1
 342 03e4 01000000 		.word	1
 343 03e8 01000000 		.word	1
 344 03ec 01000000 		.word	1
 345 03f0 01000000 		.word	1
 346 03f4 01000000 		.word	1
 347 03f8 00000000 		.word	0
 348 03fc 01000000 		.word	1
 349 0400 00000000 		.word	0
 350 0404 01000000 		.word	1
 351 0408 01000000 		.word	1
 352 040c 01000000 		.word	1
 353 0410 01000000 		.word	1
 354 0414 01000000 		.word	1
 355 0418 00000000 		.word	0
 356 041c 01000000 		.word	1
 357 0420 01000000 		.word	1
 358 0424 00000000 		.word	0
 359 0428 00000000 		.word	0
 360 042c 00000000 		.word	0
 361 0430 00000000 		.word	0
 362 0434 00000000 		.word	0
 363 0438 00000000 		.word	0
 364 043c 00000000 		.word	0
 365 0440 01000000 		.word	1
 366 0444 00000000 		.word	0
 367 0448 00000000 		.word	0
 368 044c 00000000 		.word	0
 369 0450 00000000 		.word	0
 370 0454 00000000 		.word	0
 371 0458 00000000 		.word	0
 372 045c 00000000 		.word	0
 373 0460 00000000 		.word	0
 374 0464 00000000 		.word	0
 375 0468 01000000 		.word	1
 376 046c 01000000 		.word	1
 377 0470 01000000 		.word	1
 378 0474 01000000 		.word	1
 379 0478 01000000 		.word	1
 380 047c 01000000 		.word	1
 381 0480 01000000 		.word	1
 382 0484 01000000 		.word	1
 383 0488 01000000 		.word	1
 384 048c 01000000 		.word	1
 385 0490 01000000 		.word	1
 386 0494 01000000 		.word	1
 387 0498 01000000 		.word	1
 388 049c 01000000 		.word	1
 389 04a0 01000000 		.word	1
 390 04a4 01000000 		.word	1
 391 04a8 01000000 		.word	1
 392 04ac 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 8


 393 04b0 01000000 		.word	1
 394 04b4 01000000 		.word	1
 395              		.align	2
 396              		.type	food_list, %object
 397              		.size	food_list, 40
 398              	food_list:
 399 04b8 01000000 		.word	1
 400 04bc 09000000 		.word	9
 401 04c0 05000000 		.word	5
 402 04c4 05000000 		.word	5
 403 04c8 07000000 		.word	7
 404 04cc 01000000 		.word	1
 405 04d0 0D000000 		.word	13
 406 04d4 05000000 		.word	5
 407 04d8 09000000 		.word	9
 408 04dc 09000000 		.word	9
 409              		.comm	directionState,4,4
 410              		.global	currentDirection
 411              		.align	2
 412              		.type	currentDirection, %object
 413              		.size	currentDirection, 4
 414              	currentDirection:
 415 04e0 05000000 		.word	5
 416              		.global	previousDirection
 417              		.align	2
 418              		.type	previousDirection, %object
 419              		.size	previousDirection, 4
 420              	previousDirection:
 421 04e4 06000000 		.word	6
 422              		.global	currentOrientation
 423              		.bss
 424              		.type	currentOrientation, %object
 425              		.size	currentOrientation, 1
 426              	currentOrientation:
 427 0012 00       		.space	1
 428              		.global	previousOrientation
 429              		.type	previousOrientation, %object
 430              		.size	previousOrientation, 1
 431              	previousOrientation:
 432 0013 00       		.space	1
 433              		.comm	s1,1,1
 434              		.comm	s2,1,1
 435              		.comm	s3,1,1
 436              		.comm	s4,1,1
 437              		.comm	s5,1,1
 438              		.global	s6
 439              		.type	s6, %object
 440              		.size	s6, 1
 441              	s6:
 442 0014 00       		.space	1
 443              		.global	totalMilliseconds
 444 0015 000000   		.align	2
 445              		.type	totalMilliseconds, %object
 446              		.size	totalMilliseconds, 4
 447              	totalMilliseconds:
 448 0018 00000000 		.space	4
 449              		.global	totalDistance
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 9


 450              		.align	2
 451              		.type	totalDistance, %object
 452              		.size	totalDistance, 4
 453              	totalDistance:
 454 001c 00000000 		.space	4
 455              		.comm	buffer,69,4
 456              		.global	quadDec2Count
 457              		.align	2
 458              		.type	quadDec2Count, %object
 459              		.size	quadDec2Count, 4
 460              	quadDec2Count:
 461 0020 00000000 		.space	4
 462              		.global	timerInt
 463              		.align	2
 464              		.type	timerInt, %object
 465              		.size	timerInt, 4
 466              	timerInt:
 467 0024 00000000 		.space	4
 468              		.global	keepLedOn
 469              		.align	2
 470              		.type	keepLedOn, %object
 471              		.size	keepLedOn, 4
 472              	keepLedOn:
 473 0028 00000000 		.space	4
 474              		.global	stopBuffer
 475              		.align	2
 476              		.type	stopBuffer, %object
 477              		.size	stopBuffer, 4
 478              	stopBuffer:
 479 002c 00000000 		.space	4
 480              		.global	__aeabi_i2d
 481              		.global	__aeabi_dmul
 482              		.global	__aeabi_ddiv
 483              		.global	__aeabi_d2f
 484              		.global	__aeabi_fadd
 485              		.section	.text.speedTimer,"ax",%progbits
 486              		.align	2
 487              		.global	speedTimer
 488              		.thumb
 489              		.thumb_func
 490              		.type	speedTimer, %function
 491              	speedTimer:
 492              	.LFB64:
 493              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 10


  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState getDirection();
  41:main.c        **** enum DirectionState CheckSensorDirection();
  42:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  43:main.c        **** enum DirectionState directionState;
  44:main.c        **** enum Orientation {Up, Down, Left, Right}; // taken from origin at bottom left corner
  45:main.c        **** enum DirectionState currentDirection = Stop;
  46:main.c        **** enum DirectionState previousDirection = Unknown;
  47:main.c        **** enum Orientation currentOrientation = Up;
  48:main.c        **** enum Orientation previousOrientation = Up;
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s1, s2, s3, s4, s5, s6 = 0; // black = 0, white = 1- initialise sensor signals
  51:main.c        **** //* ========================================
  52:main.c        **** uint32 totalMilliseconds = 0;
  53:main.c        **** float totalDistance = 0; // in mm
  54:main.c        **** //* ========================================
  55:main.c        **** char buffer[69];
  56:main.c        **** int quadDec2Count = 0;
  57:main.c        **** int timerInt = 0;
  58:main.c        **** int keepLedOn = 0;
  59:main.c        **** uint32 stopBuffer = 0;
  60:main.c        **** 
  61:main.c        **** CY_ISR (speedTimer) {
 494              		.loc 1 61 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 90B5     		push	{r4, r7, lr}
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 11


 503 0002 83B0     		sub	sp, sp, #12
 504              		.cfi_def_cfa_offset 24
 505 0004 00AF     		add	r7, sp, #0
 506              		.cfi_def_cfa_register 7
  62:main.c        ****     timerInt = 1;
 507              		.loc 1 62 0
 508 0006 344B     		ldr	r3, .L4+16
 509 0008 0122     		movs	r2, #1
 510 000a 1A60     		str	r2, [r3]
  63:main.c        ****     //quadDec_M1 used for turning macros
  64:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 511              		.loc 1 64 0
 512 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 513 0010 0346     		mov	r3, r0
 514 0012 1A46     		mov	r2, r3
 515 0014 314B     		ldr	r3, .L4+20
 516 0016 1A60     		str	r2, [r3]
  65:main.c        ****     
  66:main.c        ****     if ((currentDirection == Forward || 
 517              		.loc 1 66 0
 518 0018 314B     		ldr	r3, .L4+24
 519 001a 1B68     		ldr	r3, [r3]
 520 001c 002B     		cmp	r3, #0
 521 001e 13D0     		beq	.L2
  67:main.c        ****         currentDirection == HardForward ||
 522              		.loc 1 67 0 discriminator 1
 523 0020 2F4B     		ldr	r3, .L4+24
 524 0022 1B68     		ldr	r3, [r3]
  66:main.c        ****         currentDirection == HardForward ||
 525              		.loc 1 66 0 discriminator 1
 526 0024 072B     		cmp	r3, #7
 527 0026 0FD0     		beq	.L2
  68:main.c        ****         currentDirection == waitForTurn || 
 528              		.loc 1 68 0
 529 0028 2D4B     		ldr	r3, .L4+24
 530 002a 1B68     		ldr	r3, [r3]
  67:main.c        ****         currentDirection == HardForward ||
 531              		.loc 1 67 0
 532 002c 082B     		cmp	r3, #8
 533 002e 0BD0     		beq	.L2
  69:main.c        ****         currentDirection == ForwardAfterTurn ||
 534              		.loc 1 69 0
 535 0030 2B4B     		ldr	r3, .L4+24
 536 0032 1B68     		ldr	r3, [r3]
  68:main.c        ****         currentDirection == waitForTurn || 
 537              		.loc 1 68 0
 538 0034 092B     		cmp	r3, #9
 539 0036 07D0     		beq	.L2
  70:main.c        ****         currentDirection == AdjustToTheLeft ||
 540              		.loc 1 70 0
 541 0038 294B     		ldr	r3, .L4+24
 542 003a 1B68     		ldr	r3, [r3]
  69:main.c        ****         currentDirection == ForwardAfterTurn ||
 543              		.loc 1 69 0
 544 003c 032B     		cmp	r3, #3
 545 003e 03D0     		beq	.L2
  71:main.c        ****         currentDirection == AdjustToTheRight) &&
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 12


 546              		.loc 1 71 0
 547 0040 274B     		ldr	r3, .L4+24
 548 0042 1B68     		ldr	r3, [r3]
  70:main.c        ****         currentDirection == AdjustToTheLeft ||
 549              		.loc 1 70 0
 550 0044 042B     		cmp	r3, #4
 551 0046 34D1     		bne	.L3
 552              	.L2:
  72:main.c        ****         quadDec2Count != 0) {
 553              		.loc 1 72 0
 554 0048 244B     		ldr	r3, .L4+20
 555 004a 1B68     		ldr	r3, [r3]
  71:main.c        ****         currentDirection == AdjustToTheRight) &&
 556              		.loc 1 71 0
 557 004c 002B     		cmp	r3, #0
 558 004e 30D0     		beq	.L3
 559              	.LBB2:
  73:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  74:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 560              		.loc 1 74 0
 561 0050 224B     		ldr	r3, .L4+20
 562 0052 1B68     		ldr	r3, [r3]
 563 0054 002B     		cmp	r3, #0
 564 0056 B8BF     		it	lt
 565 0058 5B42     		rsblt	r3, r3, #0
 566 005a 1846     		mov	r0, r3
 567 005c FFF7FEFF 		bl	__aeabi_i2d
 568 0060 19A3     		adr	r3, .L4
 569 0062 D3E90023 		ldrd	r2, [r3]
 570 0066 FFF7FEFF 		bl	__aeabi_dmul
 571 006a 0346     		mov	r3, r0
 572 006c 0C46     		mov	r4, r1
 573 006e 1846     		mov	r0, r3
 574 0070 2146     		mov	r1, r4
 575 0072 17A3     		adr	r3, .L4+8
 576 0074 D3E90023 		ldrd	r2, [r3]
 577 0078 FFF7FEFF 		bl	__aeabi_dmul
 578 007c 0346     		mov	r3, r0
 579 007e 0C46     		mov	r4, r1
 580 0080 1846     		mov	r0, r3
 581 0082 2146     		mov	r1, r4
 582 0084 4FF00002 		mov	r2, #0
 583 0088 164B     		ldr	r3, .L4+28
 584 008a FFF7FEFF 		bl	__aeabi_ddiv
 585 008e 0346     		mov	r3, r0
 586 0090 0C46     		mov	r4, r1
 587 0092 1846     		mov	r0, r3
 588 0094 2146     		mov	r1, r4
 589 0096 FFF7FEFF 		bl	__aeabi_d2f
 590 009a 0346     		mov	r3, r0
 591 009c 7B60     		str	r3, [r7, #4]	@ float
  75:main.c        ****         totalDistance = totalDistance + newDistance;
 592              		.loc 1 75 0
 593 009e 124B     		ldr	r3, .L4+32
 594 00a0 1B68     		ldr	r3, [r3]	@ float
 595 00a2 7968     		ldr	r1, [r7, #4]	@ float
 596 00a4 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 13


 597 00a6 FFF7FEFF 		bl	__aeabi_fadd
 598 00aa 0346     		mov	r3, r0
 599 00ac 1A46     		mov	r2, r3
 600 00ae 0E4B     		ldr	r3, .L4+32
 601 00b0 1A60     		str	r2, [r3]	@ float
 602              	.L3:
 603              	.LBE2:
  76:main.c        ****     }
  77:main.c        ****     
  78:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 604              		.loc 1 78 0
 605 00b2 0020     		movs	r0, #0
 606 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  79:main.c        ****     QuadDec_M2_Start(); // restart counter
 607              		.loc 1 79 0
 608 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  80:main.c        ****     
  81:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 609              		.loc 1 81 0
 610 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  82:main.c        **** }
 611              		.loc 1 82 0
 612 00c0 00BF     		nop
 613 00c2 0C37     		adds	r7, r7, #12
 614              		.cfi_def_cfa_offset 12
 615 00c4 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 00c6 90BD     		pop	{r4, r7, pc}
 619              	.L5:
 620              		.align	3
 621              	.L4:
 622 00c8 182D4454 		.word	1413754136
 623 00cc FB210940 		.word	1074340347
 624 00d0 00000000 		.word	0
 625 00d4 00205040 		.word	1078992896
 626 00d8 00000000 		.word	timerInt
 627 00dc 00000000 		.word	quadDec2Count
 628 00e0 00000000 		.word	currentDirection
 629 00e4 00806C40 		.word	1080852480
 630 00e8 00000000 		.word	totalDistance
 631              		.cfi_endproc
 632              	.LFE64:
 633              		.size	speedTimer, .-speedTimer
 634              		.section	.text.S3_DETECTED,"ax",%progbits
 635              		.align	2
 636              		.global	S3_DETECTED
 637              		.thumb
 638              		.thumb_func
 639              		.type	S3_DETECTED, %function
 640              	S3_DETECTED:
 641              	.LFB65:
  83:main.c        **** 
  84:main.c        **** CY_ISR(S3_DETECTED) {
 642              		.loc 1 84 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 14


 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0000 80B4     		push	{r7}
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
  85:main.c        ****     // Sensor has detected WHITE
  86:main.c        ****     s3 = 1; // , Black = 0, White = 1
 652              		.loc 1 86 0
 653 0004 034B     		ldr	r3, .L7
 654 0006 0122     		movs	r2, #1
 655 0008 1A70     		strb	r2, [r3]
  87:main.c        ****     //LED_Write(1u);
  88:main.c        **** }
 656              		.loc 1 88 0
 657 000a 00BF     		nop
 658 000c BD46     		mov	sp, r7
 659              		.cfi_def_cfa_register 13
 660              		@ sp needed
 661 000e 80BC     		pop	{r7}
 662              		.cfi_restore 7
 663              		.cfi_def_cfa_offset 0
 664 0010 7047     		bx	lr
 665              	.L8:
 666 0012 00BF     		.align	2
 667              	.L7:
 668 0014 00000000 		.word	s3
 669              		.cfi_endproc
 670              	.LFE65:
 671              		.size	S3_DETECTED, .-S3_DETECTED
 672              		.section	.text.S4_DETECTED,"ax",%progbits
 673              		.align	2
 674              		.global	S4_DETECTED
 675              		.thumb
 676              		.thumb_func
 677              		.type	S4_DETECTED, %function
 678              	S4_DETECTED:
 679              	.LFB66:
  89:main.c        **** 
  90:main.c        **** CY_ISR(S4_DETECTED) {
 680              		.loc 1 90 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 0000 80B4     		push	{r7}
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 0002 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
  91:main.c        ****     // Sensor has detected WHITE
  92:main.c        ****     s4 = 1; // , Black = 0, White = 1
 690              		.loc 1 92 0
 691 0004 034B     		ldr	r3, .L10
 692 0006 0122     		movs	r2, #1
 693 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 15


  93:main.c        ****     //LED_Write(1u);
  94:main.c        **** }
 694              		.loc 1 94 0
 695 000a 00BF     		nop
 696 000c BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 000e 80BC     		pop	{r7}
 700              		.cfi_restore 7
 701              		.cfi_def_cfa_offset 0
 702 0010 7047     		bx	lr
 703              	.L11:
 704 0012 00BF     		.align	2
 705              	.L10:
 706 0014 00000000 		.word	s4
 707              		.cfi_endproc
 708              	.LFE66:
 709              		.size	S4_DETECTED, .-S4_DETECTED
 710              		.section	.text.S5_DETECTED,"ax",%progbits
 711              		.align	2
 712              		.global	S5_DETECTED
 713              		.thumb
 714              		.thumb_func
 715              		.type	S5_DETECTED, %function
 716              	S5_DETECTED:
 717              	.LFB67:
  95:main.c        **** 
  96:main.c        **** CY_ISR(S5_DETECTED) {
 718              		.loc 1 96 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
  97:main.c        ****     // Sensor has detected WHITE
  98:main.c        ****     s5 = 1; // , Black = 0, White = 1
 728              		.loc 1 98 0
 729 0004 034B     		ldr	r3, .L13
 730 0006 0122     		movs	r2, #1
 731 0008 1A70     		strb	r2, [r3]
  99:main.c        ****     //LED_Write(1u);
 100:main.c        **** }
 732              		.loc 1 100 0
 733 000a 00BF     		nop
 734 000c BD46     		mov	sp, r7
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 000e 80BC     		pop	{r7}
 738              		.cfi_restore 7
 739              		.cfi_def_cfa_offset 0
 740 0010 7047     		bx	lr
 741              	.L14:
 742 0012 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 16


 743              	.L13:
 744 0014 00000000 		.word	s5
 745              		.cfi_endproc
 746              	.LFE67:
 747              		.size	S5_DETECTED, .-S5_DETECTED
 748              		.section	.text.S6_DETECTED,"ax",%progbits
 749              		.align	2
 750              		.global	S6_DETECTED
 751              		.thumb
 752              		.thumb_func
 753              		.type	S6_DETECTED, %function
 754              	S6_DETECTED:
 755              	.LFB68:
 101:main.c        **** 
 102:main.c        **** CY_ISR(S6_DETECTED) {
 756              		.loc 1 102 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 0000 80B4     		push	{r7}
 762              		.cfi_def_cfa_offset 4
 763              		.cfi_offset 7, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 103:main.c        ****     // Sensor has detected WHITE
 104:main.c        ****     s6 = 1; // , Black = 0, White = 1
 766              		.loc 1 104 0
 767 0004 034B     		ldr	r3, .L16
 768 0006 0122     		movs	r2, #1
 769 0008 1A70     		strb	r2, [r3]
 105:main.c        ****     //LED_Write(1u);
 106:main.c        **** }
 770              		.loc 1 106 0
 771 000a 00BF     		nop
 772 000c BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 000e 80BC     		pop	{r7}
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0010 7047     		bx	lr
 779              	.L17:
 780 0012 00BF     		.align	2
 781              	.L16:
 782 0014 00000000 		.word	s6
 783              		.cfi_endproc
 784              	.LFE68:
 785              		.size	S6_DETECTED, .-S6_DETECTED
 786              		.section	.text.TIMER_FINISH,"ax",%progbits
 787              		.align	2
 788              		.global	TIMER_FINISH
 789              		.thumb
 790              		.thumb_func
 791              		.type	TIMER_FINISH, %function
 792              	TIMER_FINISH:
 793              	.LFB69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 17


 107:main.c        **** 
 108:main.c        **** CY_ISR(TIMER_FINISH) {
 794              		.loc 1 108 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 109:main.c        ****     //LED_Write(0u);
 110:main.c        ****     if (currentDirection == Stop) {
 804              		.loc 1 110 0
 805 0004 0A4B     		ldr	r3, .L21
 806 0006 1B68     		ldr	r3, [r3]
 807 0008 052B     		cmp	r3, #5
 808 000a 05D1     		bne	.L19
 111:main.c        ****         stopBuffer = stopBuffer + 1;
 809              		.loc 1 111 0
 810 000c 094B     		ldr	r3, .L21+4
 811 000e 1B68     		ldr	r3, [r3]
 812 0010 0133     		adds	r3, r3, #1
 813 0012 084A     		ldr	r2, .L21+4
 814 0014 1360     		str	r3, [r2]
 815 0016 02E0     		b	.L20
 816              	.L19:
 112:main.c        ****     } else {
 113:main.c        ****         stopBuffer = 0;
 817              		.loc 1 113 0
 818 0018 064B     		ldr	r3, .L21+4
 819 001a 0022     		movs	r2, #0
 820 001c 1A60     		str	r2, [r3]
 821              	.L20:
 114:main.c        ****     }
 115:main.c        ****     SetRobotMovement(); 
 822              		.loc 1 115 0
 823 001e FFF7FEFF 		bl	SetRobotMovement
 116:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 824              		.loc 1 116 0
 825 0022 FFF7FEFF 		bl	ResetSensorFlags
 117:main.c        ****     Timer_LED_ReadStatusRegister();
 826              		.loc 1 117 0
 827 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 118:main.c        **** }
 828              		.loc 1 118 0
 829 002a 00BF     		nop
 830 002c 80BD     		pop	{r7, pc}
 831              	.L22:
 832 002e 00BF     		.align	2
 833              	.L21:
 834 0030 00000000 		.word	currentDirection
 835 0034 00000000 		.word	stopBuffer
 836              		.cfi_endproc
 837              	.LFE69:
 838              		.size	TIMER_FINISH, .-TIMER_FINISH
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 18


 839              		.section	.text.main,"ax",%progbits
 840              		.align	2
 841              		.global	main
 842              		.thumb
 843              		.thumb_func
 844              		.type	main, %function
 845              	main:
 846              	.LFB70:
 119:main.c        **** 
 120:main.c        **** 
 121:main.c        **** int main()
 122:main.c        **** {
 847              		.loc 1 122 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851 0000 80B5     		push	{r7, lr}
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 855 0002 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 123:main.c        **** // --------------------------------    
 124:main.c        **** // ----- INITIALIZATIONS ----------
 125:main.c        ****     CYGlobalIntEnable;
 857              		.loc 1 125 0
 858              		.syntax unified
 859              	@ 125 "main.c" 1
 860 0004 62B6     		CPSIE   i
 861              	@ 0 "" 2
 126:main.c        ****     ResetSensorFlags();
 862              		.loc 1 126 0
 863              		.thumb
 864              		.syntax unified
 865 0006 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 866              		.loc 1 127 0
 867 000a FFF7FEFF 		bl	init
 128:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 129:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 868              		.loc 1 129 0
 869 000e 1948     		ldr	r0, .L27
 870 0010 FFF7FEFF 		bl	isr_speed_StartEx
 130:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 871              		.loc 1 130 0
 872 0014 1848     		ldr	r0, .L27+4
 873 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 131:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 874              		.loc 1 131 0
 875 001a 1848     		ldr	r0, .L27+8
 876 001c FFF7FEFF 		bl	S3_detected_StartEx
 132:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 877              		.loc 1 132 0
 878 0020 1748     		ldr	r0, .L27+12
 879 0022 FFF7FEFF 		bl	S4_detected_StartEx
 133:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 880              		.loc 1 133 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 19


 881 0026 1748     		ldr	r0, .L27+16
 882 0028 FFF7FEFF 		bl	S5_detected_StartEx
 134:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 883              		.loc 1 134 0
 884 002c 1648     		ldr	r0, .L27+20
 885 002e FFF7FEFF 		bl	S6_detected_StartEx
 135:main.c        ****     findPath(map);
 886              		.loc 1 135 0
 887 0032 1648     		ldr	r0, .L27+24
 888 0034 FFF7FEFF 		bl	findPath
 136:main.c        ****     Timer_LED_Start();
 889              		.loc 1 136 0
 890 0038 FFF7FEFF 		bl	Timer_LED_Start
 137:main.c        ****     //stopMoving();
 138:main.c        **** 
 139:main.c        **** // ------USB SETUP ----------------    
 140:main.c        **** #ifdef USE_USB    
 141:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 891              		.loc 1 141 0
 892 003c 0121     		movs	r1, #1
 893 003e 0020     		movs	r0, #0
 894 0040 FFF7FEFF 		bl	USBUART_Start
 142:main.c        **** #endif        
 143:main.c        ****     RF_BT_SELECT_Write(0);
 895              		.loc 1 143 0
 896 0044 0020     		movs	r0, #0
 897 0046 FFF7FEFF 		bl	RF_BT_SELECT_Write
 898              	.L26:
 144:main.c        ****     
 145:main.c        ****     //usbPutString("Initialised UART");
 146:main.c        ****     for(;;)
 147:main.c        ****     {
 148:main.c        ****         //traverseMap(map);
 149:main.c        ****         //rotationAntiClockwise();
 150:main.c        ****         //rotationClockwise();
 151:main.c        ****         
 152:main.c        ****         
 153:main.c        ****         
 154:main.c        ****         if(timerInt == 1) {
 899              		.loc 1 154 0
 900 004a 114B     		ldr	r3, .L27+28
 901 004c 1B68     		ldr	r3, [r3]
 902 004e 012B     		cmp	r3, #1
 903 0050 08D1     		bne	.L24
 155:main.c        ****             timerInt = 0;
 904              		.loc 1 155 0
 905 0052 0F4B     		ldr	r3, .L27+28
 906 0054 0022     		movs	r2, #0
 907 0056 1A60     		str	r2, [r3]
 156:main.c        ****             // calculate RPM of M2
 157:main.c        ****             quadCountToRPM(quadDec2Count);
 908              		.loc 1 157 0
 909 0058 0E4B     		ldr	r3, .L27+32
 910 005a 1B68     		ldr	r3, [r3]
 911 005c 9BB2     		uxth	r3, r3
 912 005e 1846     		mov	r0, r3
 913 0060 FFF7FEFF 		bl	quadCountToRPM
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 20


 914              	.L24:
 158:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 159:main.c        ****             //usbPutString(buffer);
 160:main.c        ****             //usbPutString(" ");
 161:main.c        ****         }
 162:main.c        ****         //handle_usb();
 163:main.c        ****         if (flag_KB_string == 1)
 915              		.loc 1 163 0
 916 0064 0C4B     		ldr	r3, .L27+36
 917 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 918 0068 012B     		cmp	r3, #1
 919 006a EED1     		bne	.L26
 164:main.c        ****         {
 165:main.c        ****             //usbPutString("Total Distance: ");
 166:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 167:main.c        ****             //usbPutString(buffer);
 168:main.c        ****             flag_KB_string = 0;
 920              		.loc 1 168 0
 921 006c 0A4B     		ldr	r3, .L27+36
 922 006e 0022     		movs	r2, #0
 923 0070 1A70     		strb	r2, [r3]
 169:main.c        ****         }           
 170:main.c        ****     }
 924              		.loc 1 170 0
 925 0072 EAE7     		b	.L26
 926              	.L28:
 927              		.align	2
 928              	.L27:
 929 0074 00000000 		.word	speedTimer
 930 0078 00000000 		.word	TIMER_FINISH
 931 007c 00000000 		.word	S3_DETECTED
 932 0080 00000000 		.word	S4_DETECTED
 933 0084 00000000 		.word	S5_DETECTED
 934 0088 00000000 		.word	S6_DETECTED
 935 008c 44000000 		.word	map
 936 0090 00000000 		.word	timerInt
 937 0094 00000000 		.word	quadDec2Count
 938 0098 00000000 		.word	flag_KB_string
 939              		.cfi_endproc
 940              	.LFE70:
 941              		.size	main, .-main
 942              		.global	__aeabi_fmul
 943              		.global	__aeabi_f2iz
 944              		.section	.text.quadCountToRPM,"ax",%progbits
 945              		.align	2
 946              		.global	quadCountToRPM
 947              		.thumb
 948              		.thumb_func
 949              		.type	quadCountToRPM, %function
 950              	quadCountToRPM:
 951              	.LFB71:
 171:main.c        ****     return 0;
 172:main.c        **** }
 173:main.c        **** 
 174:main.c        **** // Calculations
 175:main.c        **** //* ========================================
 176:main.c        **** int16 quadCountToRPM(uint16 count)
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 21


 177:main.c        **** {
 952              		.loc 1 177 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 16
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 0000 90B5     		push	{r4, r7, lr}
 957              		.cfi_def_cfa_offset 12
 958              		.cfi_offset 4, -12
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 85B0     		sub	sp, sp, #20
 962              		.cfi_def_cfa_offset 32
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 0346     		mov	r3, r0
 966 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 178:main.c        ****     float cps = count/57.00;
 967              		.loc 1 178 0
 968 000a FB88     		ldrh	r3, [r7, #6]
 969 000c 1846     		mov	r0, r3
 970 000e FFF7FEFF 		bl	__aeabi_i2d
 971 0012 4FF00002 		mov	r2, #0
 972 0016 0D4B     		ldr	r3, .L31
 973 0018 FFF7FEFF 		bl	__aeabi_ddiv
 974 001c 0346     		mov	r3, r0
 975 001e 0C46     		mov	r4, r1
 976 0020 1846     		mov	r0, r3
 977 0022 2146     		mov	r1, r4
 978 0024 FFF7FEFF 		bl	__aeabi_d2f
 979 0028 0346     		mov	r3, r0
 980 002a FB60     		str	r3, [r7, #12]	@ float
 179:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 981              		.loc 1 179 0
 982 002c 0849     		ldr	r1, .L31+4
 983 002e F868     		ldr	r0, [r7, #12]	@ float
 984 0030 FFF7FEFF 		bl	__aeabi_fmul
 985 0034 0346     		mov	r3, r0
 986 0036 1846     		mov	r0, r3
 987 0038 FFF7FEFF 		bl	__aeabi_f2iz
 988 003c 0346     		mov	r3, r0
 989 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 180:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 181:main.c        ****     return rpm;
 990              		.loc 1 181 0
 991 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 182:main.c        ****     //usbPutString(buffer);
 183:main.c        ****     //usbPutString("rpm ");
 184:main.c        **** }
 992              		.loc 1 184 0
 993 0044 1846     		mov	r0, r3
 994 0046 1437     		adds	r7, r7, #20
 995              		.cfi_def_cfa_offset 12
 996 0048 BD46     		mov	sp, r7
 997              		.cfi_def_cfa_register 13
 998              		@ sp needed
 999 004a 90BD     		pop	{r4, r7, pc}
 1000              	.L32:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 22


 1001              		.align	2
 1002              	.L31:
 1003 004c 00804C40 		.word	1078755328
 1004 0050 00007041 		.word	1097859072
 1005              		.cfi_endproc
 1006              	.LFE71:
 1007              		.size	quadCountToRPM, .-quadCountToRPM
 1008              		.section	.text.ResetSensorFlags,"ax",%progbits
 1009              		.align	2
 1010              		.global	ResetSensorFlags
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	ResetSensorFlags, %function
 1014              	ResetSensorFlags:
 1015              	.LFB72:
 185:main.c        **** 
 186:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 187:main.c        **** void ResetSensorFlags() {
 1016              		.loc 1 187 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021 0000 80B4     		push	{r7}
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 7, -4
 1024 0002 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 188:main.c        ****     s1 = 0;
 1026              		.loc 1 188 0
 1027 0004 0A4B     		ldr	r3, .L34
 1028 0006 0022     		movs	r2, #0
 1029 0008 1A70     		strb	r2, [r3]
 189:main.c        ****     s2 = 0;
 1030              		.loc 1 189 0
 1031 000a 0A4B     		ldr	r3, .L34+4
 1032 000c 0022     		movs	r2, #0
 1033 000e 1A70     		strb	r2, [r3]
 190:main.c        ****     s3 = 0;
 1034              		.loc 1 190 0
 1035 0010 094B     		ldr	r3, .L34+8
 1036 0012 0022     		movs	r2, #0
 1037 0014 1A70     		strb	r2, [r3]
 191:main.c        ****     s4 = 0;
 1038              		.loc 1 191 0
 1039 0016 094B     		ldr	r3, .L34+12
 1040 0018 0022     		movs	r2, #0
 1041 001a 1A70     		strb	r2, [r3]
 192:main.c        ****     s5 = 0;
 1042              		.loc 1 192 0
 1043 001c 084B     		ldr	r3, .L34+16
 1044 001e 0022     		movs	r2, #0
 1045 0020 1A70     		strb	r2, [r3]
 193:main.c        ****     s6 = 0;
 1046              		.loc 1 193 0
 1047 0022 084B     		ldr	r3, .L34+20
 1048 0024 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 23


 1049 0026 1A70     		strb	r2, [r3]
 194:main.c        **** }
 1050              		.loc 1 194 0
 1051 0028 00BF     		nop
 1052 002a BD46     		mov	sp, r7
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 002c 80BC     		pop	{r7}
 1056              		.cfi_restore 7
 1057              		.cfi_def_cfa_offset 0
 1058 002e 7047     		bx	lr
 1059              	.L35:
 1060              		.align	2
 1061              	.L34:
 1062 0030 00000000 		.word	s1
 1063 0034 00000000 		.word	s2
 1064 0038 00000000 		.word	s3
 1065 003c 00000000 		.word	s4
 1066 0040 00000000 		.word	s5
 1067 0044 00000000 		.word	s6
 1068              		.cfi_endproc
 1069              	.LFE72:
 1070              		.size	ResetSensorFlags, .-ResetSensorFlags
 1071              		.global	yBlockSize
 1072              		.data
 1073              		.align	2
 1074              		.type	yBlockSize, %object
 1075              		.size	yBlockSize, 4
 1076              	yBlockSize:
 1077 04e8 66660043 		.word	1124099686
 1078              		.global	xBlockSize
 1079              		.align	2
 1080              		.type	xBlockSize, %object
 1081              		.size	xBlockSize, 4
 1082              	xBlockSize:
 1083 04ec 9A99B642 		.word	1119263130
 1084              		.comm	blockSize,4,4
 1085              		.global	currentRow
 1086              		.type	currentRow, %object
 1087              		.size	currentRow, 1
 1088              	currentRow:
 1089 04f0 01       		.byte	1
 1090              		.global	currentCol
 1091              		.type	currentCol, %object
 1092              		.size	currentCol, 1
 1093              	currentCol:
 1094 04f1 01       		.byte	1
 1095              		.global	__aeabi_fcmple
 1096              		.section	.text.getDirection,"ax",%progbits
 1097              		.align	2
 1098              		.global	getDirection
 1099              		.thumb
 1100              		.thumb_func
 1101              		.type	getDirection, %function
 1102              	getDirection:
 1103              	.LFB73:
 195:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 24


 196:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 197:main.c        **** // returns a enum direction state depending on the flag configuration
 198:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 199:main.c        **** // s1 = 0 -- Black
 200:main.c        **** // s1 = 1 -- White
 201:main.c        **** float yBlockSize = 128.4;
 202:main.c        **** float xBlockSize = 91.3;
 203:main.c        **** float blockSize;
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1; // need to initialise
 206:main.c        **** 
 207:main.c        **** enum DirectionState getDirection() {
 1104              		.loc 1 207 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108 0000 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
 208:main.c        ****     directionState = Stop;
 1114              		.loc 1 208 0
 1115 0004 9C4B     		ldr	r3, .L76
 1116 0006 0522     		movs	r2, #5
 1117 0008 1A60     		str	r2, [r3]
 209:main.c        ****     currentOrientation = Right; // initialise at start
 1118              		.loc 1 209 0
 1119 000a 9C4B     		ldr	r3, .L76+4
 1120 000c 0322     		movs	r2, #3
 1121 000e 1A70     		strb	r2, [r3]
 210:main.c        ****     previousDirection = currentDirection;
 1122              		.loc 1 210 0
 1123 0010 9B4B     		ldr	r3, .L76+8
 1124 0012 1B68     		ldr	r3, [r3]
 1125 0014 9B4A     		ldr	r2, .L76+12
 1126 0016 1360     		str	r3, [r2]
 211:main.c        **** 
 212:main.c        ****     if(currentRow == 1 && currentCol == 5) {
 1127              		.loc 1 212 0
 1128 0018 9B4B     		ldr	r3, .L76+16
 1129 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1130 001c 012B     		cmp	r3, #1
 1131 001e 09D1     		bne	.L37
 1132              		.loc 1 212 0 is_stmt 0 discriminator 1
 1133 0020 9A4B     		ldr	r3, .L76+20
 1134 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 0024 052B     		cmp	r3, #5
 1136 0026 05D1     		bne	.L37
 213:main.c        ****         directionState = Stop;
 1137              		.loc 1 213 0 is_stmt 1
 1138 0028 934B     		ldr	r3, .L76
 1139 002a 0522     		movs	r2, #5
 1140 002c 1A60     		str	r2, [r3]
 214:main.c        ****         return directionState;
 1141              		.loc 1 214 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 25


 1142 002e 924B     		ldr	r3, .L76
 1143 0030 1B68     		ldr	r3, [r3]
 1144 0032 04E2     		b	.L38
 1145              	.L37:
 215:main.c        ****     }
 216:main.c        ****     //currentDirection = Stop;
 217:main.c        ****     // determine block size
 218:main.c        ****     if(previousOrientation == Up || previousOrientation == Down) {
 1146              		.loc 1 218 0
 1147 0034 964B     		ldr	r3, .L76+24
 1148 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 0038 002B     		cmp	r3, #0
 1150 003a 03D0     		beq	.L39
 1151              		.loc 1 218 0 is_stmt 0 discriminator 1
 1152 003c 944B     		ldr	r3, .L76+24
 1153 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1154 0040 012B     		cmp	r3, #1
 1155 0042 04D1     		bne	.L40
 1156              	.L39:
 219:main.c        ****         blockSize = yBlockSize;
 1157              		.loc 1 219 0 is_stmt 1
 1158 0044 934B     		ldr	r3, .L76+28
 1159 0046 1B68     		ldr	r3, [r3]	@ float
 1160 0048 934A     		ldr	r2, .L76+32
 1161 004a 1360     		str	r3, [r2]	@ float
 1162 004c 03E0     		b	.L41
 1163              	.L40:
 220:main.c        ****     } else {
 221:main.c        ****         blockSize = xBlockSize;
 1164              		.loc 1 221 0
 1165 004e 934B     		ldr	r3, .L76+36
 1166 0050 1B68     		ldr	r3, [r3]	@ float
 1167 0052 914A     		ldr	r2, .L76+32
 1168 0054 1360     		str	r3, [r2]	@ float
 1169              	.L41:
 222:main.c        ****     }
 223:main.c        ****     // find next direction after we reach a new coordinate
 224:main.c        ****     if(totalDistance <= blockSize) {
 1170              		.loc 1 224 0
 1171 0056 924B     		ldr	r3, .L76+40
 1172 0058 1A68     		ldr	r2, [r3]	@ float
 1173 005a 8F4B     		ldr	r3, .L76+32
 1174 005c 1B68     		ldr	r3, [r3]	@ float
 1175 005e 1946     		mov	r1, r3
 1176 0060 1046     		mov	r0, r2
 1177 0062 FFF7FEFF 		bl	__aeabi_fcmple
 1178 0066 0346     		mov	r3, r0
 1179 0068 002B     		cmp	r3, #0
 1180 006a 3FD0     		beq	.L70
 225:main.c        ****         
 226:main.c        ****         // MOVEMENT
 227:main.c        ****         /*
 228:main.c        ****         if (previousDirection == Stop) {
 229:main.c        ****             if (stopBuffer <= 10) {
 230:main.c        ****                 directionState = Stop;
 231:main.c        ****             }
 232:main.c        ****             //currentDirection = previousDirection;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 26


 233:main.c        ****             return directionState;
 234:main.c        ****         }
 235:main.c        ****         */
 236:main.c        ****         /*
 237:main.c        ****         
 238:main.c        ****         if (previousDirection == ForwardAfterTurn) {
 239:main.c        ****             if (s3 || s4) {
 240:main.c        ****                 //totalDistance = 0; // reset total distance after turn
 241:main.c        ****                 directionState = Forward;
 242:main.c        ****                 //currentDirection = previousDirection;
 243:main.c        ****                 return directionState;
 244:main.c        ****             }
 245:main.c        ****         }
 246:main.c        **** 
 247:main.c        ****         if(previousDirection == TurnRight) {
 248:main.c        ****             if(s5 && s6) {
 249:main.c        ****                 directionState = TurnRight;
 250:main.c        ****                 //currentDirection = previousDirection;
 251:main.c        ****                 return directionState;
 252:main.c        ****             } 
 253:main.c        ****             else if (!s5 || !s6) {
 254:main.c        ****                 directionState = Stop;
 255:main.c        ****                 //currentDirection = previousDirection;
 256:main.c        ****                 return directionState;
 257:main.c        ****             }
 258:main.c        ****         }    
 259:main.c        **** 
 260:main.c        ****         if(previousDirection == TurnLeft) {
 261:main.c        ****             if(s5 && s6) {
 262:main.c        ****                 directionState = TurnLeft;
 263:main.c        ****                 //currentDirection = previousDirection;
 264:main.c        ****                 return directionState;
 265:main.c        ****             } 
 266:main.c        ****             else if (!s5 || !s6) {
 267:main.c        ****                 directionState = Stop;
 268:main.c        ****                 //currentDirection = previousDirection;
 269:main.c        ****                 return directionState;
 270:main.c        ****             }
 271:main.c        ****         }
 272:main.c        **** 
 273:main.c        ****         */
 274:main.c        ****         // course correction
 275:main.c        ****         if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirecti
 1181              		.loc 1 275 0
 1182 006c 854B     		ldr	r3, .L76+12
 1183 006e 1B68     		ldr	r3, [r3]
 1184 0070 002B     		cmp	r3, #0
 1185 0072 07D0     		beq	.L44
 1186              		.loc 1 275 0 is_stmt 0 discriminator 1
 1187 0074 834B     		ldr	r3, .L76+12
 1188 0076 1B68     		ldr	r3, [r3]
 1189 0078 032B     		cmp	r3, #3
 1190 007a 03D0     		beq	.L44
 1191              		.loc 1 275 0 discriminator 2
 1192 007c 814B     		ldr	r3, .L76+12
 1193 007e 1B68     		ldr	r3, [r3]
 1194 0080 042B     		cmp	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 27


 1195 0082 10D1     		bne	.L45
 1196              	.L44:
 276:main.c        ****             if(s6) {
 1197              		.loc 1 276 0 is_stmt 1
 1198 0084 874B     		ldr	r3, .L76+44
 1199 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 0088 002B     		cmp	r3, #0
 1201 008a 02D0     		beq	.L46
 277:main.c        ****                 directionState = AdjustToTheLeft; // keep adjusting to the left
 1202              		.loc 1 277 0
 1203 008c 7A4B     		ldr	r3, .L76
 1204 008e 0322     		movs	r2, #3
 1205 0090 1A60     		str	r2, [r3]
 1206              	.L46:
 278:main.c        ****             }
 279:main.c        ****             if(s5) {
 1207              		.loc 1 279 0
 1208 0092 854B     		ldr	r3, .L76+48
 1209 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1210 0096 002B     		cmp	r3, #0
 1211 0098 02D0     		beq	.L47
 280:main.c        ****                 directionState = AdjustToTheRight; // keep adjusting to the right
 1212              		.loc 1 280 0
 1213 009a 774B     		ldr	r3, .L76
 1214 009c 0422     		movs	r2, #4
 1215 009e 1A60     		str	r2, [r3]
 1216              	.L47:
 281:main.c        ****             }
 282:main.c        ****             //previousOrientation = currentOrientation; // unchanged orientation
 283:main.c        ****             return directionState;
 1217              		.loc 1 283 0
 1218 00a0 754B     		ldr	r3, .L76
 1219 00a2 1B68     		ldr	r3, [r3]
 1220 00a4 CBE1     		b	.L38
 1221              	.L45:
 284:main.c        ****         }
 285:main.c        ****         
 286:main.c        ****         // forward 1100
 287:main.c        ****         if (s3 && s4 && !s5 && !s6) {
 1222              		.loc 1 287 0
 1223 00a6 814B     		ldr	r3, .L76+52
 1224 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 00aa 002B     		cmp	r3, #0
 1226 00ac 11D0     		beq	.L48
 1227              		.loc 1 287 0 is_stmt 0 discriminator 1
 1228 00ae 804B     		ldr	r3, .L76+56
 1229 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 00b2 002B     		cmp	r3, #0
 1231 00b4 0DD0     		beq	.L48
 1232              		.loc 1 287 0 discriminator 2
 1233 00b6 7C4B     		ldr	r3, .L76+48
 1234 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1235 00ba 002B     		cmp	r3, #0
 1236 00bc 09D1     		bne	.L48
 1237              		.loc 1 287 0 discriminator 3
 1238 00be 794B     		ldr	r3, .L76+44
 1239 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 28


 1240 00c2 002B     		cmp	r3, #0
 1241 00c4 05D1     		bne	.L48
 288:main.c        ****             directionState = Forward;
 1242              		.loc 1 288 0 is_stmt 1
 1243 00c6 6C4B     		ldr	r3, .L76
 1244 00c8 0022     		movs	r2, #0
 1245 00ca 1A60     		str	r2, [r3]
 289:main.c        ****             //previousOrientation = currentOrientation; // unchanged orientation
 290:main.c        ****             return directionState;   
 1246              		.loc 1 290 0
 1247 00cc 6A4B     		ldr	r3, .L76
 1248 00ce 1B68     		ldr	r3, [r3]
 1249 00d0 B5E1     		b	.L38
 1250              	.L48:
 291:main.c        ****         }
 292:main.c        **** 
 293:main.c        ****         if (previousDirection == Unknown) {
 1251              		.loc 1 293 0
 1252 00d2 6C4B     		ldr	r3, .L76+12
 1253 00d4 1B68     		ldr	r3, [r3]
 1254 00d6 062B     		cmp	r3, #6
 1255 00d8 05D1     		bne	.L49
 294:main.c        ****             directionState = Forward;
 1256              		.loc 1 294 0
 1257 00da 674B     		ldr	r3, .L76
 1258 00dc 0022     		movs	r2, #0
 1259 00de 1A60     		str	r2, [r3]
 295:main.c        ****             //previousDirection = currentDirection;
 296:main.c        ****             return directionState;
 1260              		.loc 1 296 0
 1261 00e0 654B     		ldr	r3, .L76
 1262 00e2 1B68     		ldr	r3, [r3]
 1263 00e4 ABE1     		b	.L38
 1264              	.L49:
 297:main.c        ****         }
 298:main.c        ****     
 299:main.c        ****         // Possible reason
 300:main.c        ****         //previousDirection = currentDirection;
 301:main.c        ****         return previousDirection;
 1265              		.loc 1 301 0
 1266 00e6 674B     		ldr	r3, .L76+12
 1267 00e8 1B68     		ldr	r3, [r3]
 1268 00ea A8E1     		b	.L38
 1269              	.L70:
 302:main.c        **** 
 303:main.c        ****     } else {
 304:main.c        ****         switch (previousOrientation) {
 1270              		.loc 1 304 0
 1271 00ec 684B     		ldr	r3, .L76+24
 1272 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1273 00f0 032B     		cmp	r3, #3
 1274 00f2 00F29581 		bhi	.L71
 1275 00f6 01A2     		adr	r2, .L52
 1276 00f8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1277              		.p2align 2
 1278              	.L52:
 1279 00fc 0D010000 		.word	.L51+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 29


 1280 0100 C3010000 		.word	.L53+1
 1281 0104 B9020000 		.word	.L54+1
 1282 0108 6D030000 		.word	.L55+1
 1283              		.p2align 1
 1284              	.L51:
 305:main.c        ****             case Up:
 306:main.c        ****                 if(map[currentRow][currentCol + 1] == 8) {
 1285              		.loc 1 306 0
 1286 010c 5E4B     		ldr	r3, .L76+16
 1287 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1288 0110 1A46     		mov	r2, r3
 1289 0112 5E4B     		ldr	r3, .L76+20
 1290 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1291 0116 591C     		adds	r1, r3, #1
 1292 0118 6648     		ldr	r0, .L76+60
 1293 011a 1346     		mov	r3, r2
 1294 011c DB00     		lsls	r3, r3, #3
 1295 011e 1344     		add	r3, r3, r2
 1296 0120 5B00     		lsls	r3, r3, #1
 1297 0122 1344     		add	r3, r3, r2
 1298 0124 0B44     		add	r3, r3, r1
 1299 0126 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1300 012a 082B     		cmp	r3, #8
 1301 012c 0CD1     		bne	.L56
 307:main.c        ****                     currentCol++;
 1302              		.loc 1 307 0
 1303 012e 574B     		ldr	r3, .L76+20
 1304 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1305 0132 0133     		adds	r3, r3, #1
 1306 0134 DAB2     		uxtb	r2, r3
 1307 0136 554B     		ldr	r3, .L76+20
 1308 0138 1A70     		strb	r2, [r3]
 308:main.c        ****                     currentOrientation = Up;
 1309              		.loc 1 308 0
 1310 013a 504B     		ldr	r3, .L76+4
 1311 013c 0022     		movs	r2, #0
 1312 013e 1A70     		strb	r2, [r3]
 309:main.c        ****                     directionState = Forward;
 1313              		.loc 1 309 0
 1314 0140 4D4B     		ldr	r3, .L76
 1315 0142 0022     		movs	r2, #0
 1316 0144 1A60     		str	r2, [r3]
 310:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 311:main.c        ****                     currentRow--;
 312:main.c        ****                     currentOrientation = Left;
 313:main.c        ****                     directionState = TurnLeft;
 314:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 315:main.c        ****                     currentRow++;
 316:main.c        ****                     currentOrientation = Right;
 317:main.c        ****                     directionState = TurnRight;
 318:main.c        ****                 }
 319:main.c        ****                 break;
 1317              		.loc 1 319 0
 1318 0146 6DE1     		b	.L72
 1319              	.L56:
 310:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1320              		.loc 1 310 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 30


 1321 0148 4F4B     		ldr	r3, .L76+16
 1322 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1323 014c 5A1E     		subs	r2, r3, #1
 1324 014e 4F4B     		ldr	r3, .L76+20
 1325 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 0152 1846     		mov	r0, r3
 1327 0154 5749     		ldr	r1, .L76+60
 1328 0156 1346     		mov	r3, r2
 1329 0158 DB00     		lsls	r3, r3, #3
 1330 015a 1344     		add	r3, r3, r2
 1331 015c 5B00     		lsls	r3, r3, #1
 1332 015e 1344     		add	r3, r3, r2
 1333 0160 0344     		add	r3, r3, r0
 1334 0162 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1335 0166 082B     		cmp	r3, #8
 1336 0168 0CD1     		bne	.L58
 311:main.c        ****                     currentOrientation = Left;
 1337              		.loc 1 311 0
 1338 016a 474B     		ldr	r3, .L76+16
 1339 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 016e 013B     		subs	r3, r3, #1
 1341 0170 DAB2     		uxtb	r2, r3
 1342 0172 454B     		ldr	r3, .L76+16
 1343 0174 1A70     		strb	r2, [r3]
 312:main.c        ****                     directionState = TurnLeft;
 1344              		.loc 1 312 0
 1345 0176 414B     		ldr	r3, .L76+4
 1346 0178 0222     		movs	r2, #2
 1347 017a 1A70     		strb	r2, [r3]
 313:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 1348              		.loc 1 313 0
 1349 017c 3E4B     		ldr	r3, .L76
 1350 017e 0222     		movs	r2, #2
 1351 0180 1A60     		str	r2, [r3]
 1352              		.loc 1 319 0
 1353 0182 4FE1     		b	.L72
 1354              	.L58:
 314:main.c        ****                     currentRow++;
 1355              		.loc 1 314 0
 1356 0184 404B     		ldr	r3, .L76+16
 1357 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 0188 5A1C     		adds	r2, r3, #1
 1359 018a 404B     		ldr	r3, .L76+20
 1360 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1361 018e 1846     		mov	r0, r3
 1362 0190 4849     		ldr	r1, .L76+60
 1363 0192 1346     		mov	r3, r2
 1364 0194 DB00     		lsls	r3, r3, #3
 1365 0196 1344     		add	r3, r3, r2
 1366 0198 5B00     		lsls	r3, r3, #1
 1367 019a 1344     		add	r3, r3, r2
 1368 019c 0344     		add	r3, r3, r0
 1369 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1370 01a2 082B     		cmp	r3, #8
 1371 01a4 40F03E81 		bne	.L72
 315:main.c        ****                     currentOrientation = Right;
 1372              		.loc 1 315 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 31


 1373 01a8 374B     		ldr	r3, .L76+16
 1374 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1375 01ac 0133     		adds	r3, r3, #1
 1376 01ae DAB2     		uxtb	r2, r3
 1377 01b0 354B     		ldr	r3, .L76+16
 1378 01b2 1A70     		strb	r2, [r3]
 316:main.c        ****                     directionState = TurnRight;
 1379              		.loc 1 316 0
 1380 01b4 314B     		ldr	r3, .L76+4
 1381 01b6 0322     		movs	r2, #3
 1382 01b8 1A70     		strb	r2, [r3]
 317:main.c        ****                 }
 1383              		.loc 1 317 0
 1384 01ba 2F4B     		ldr	r3, .L76
 1385 01bc 0122     		movs	r2, #1
 1386 01be 1A60     		str	r2, [r3]
 1387              		.loc 1 319 0
 1388 01c0 30E1     		b	.L72
 1389              	.L53:
 320:main.c        ****             case Down:
 321:main.c        ****                 if(map[currentRow][currentCol - 1] == 8) {
 1390              		.loc 1 321 0
 1391 01c2 314B     		ldr	r3, .L76+16
 1392 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1393 01c6 1A46     		mov	r2, r3
 1394 01c8 304B     		ldr	r3, .L76+20
 1395 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 01cc 591E     		subs	r1, r3, #1
 1397 01ce 3948     		ldr	r0, .L76+60
 1398 01d0 1346     		mov	r3, r2
 1399 01d2 DB00     		lsls	r3, r3, #3
 1400 01d4 1344     		add	r3, r3, r2
 1401 01d6 5B00     		lsls	r3, r3, #1
 1402 01d8 1344     		add	r3, r3, r2
 1403 01da 0B44     		add	r3, r3, r1
 1404 01dc 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1405 01e0 082B     		cmp	r3, #8
 1406 01e2 0CD1     		bne	.L60
 322:main.c        ****                     currentCol--;
 1407              		.loc 1 322 0
 1408 01e4 294B     		ldr	r3, .L76+20
 1409 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1410 01e8 013B     		subs	r3, r3, #1
 1411 01ea DAB2     		uxtb	r2, r3
 1412 01ec 274B     		ldr	r3, .L76+20
 1413 01ee 1A70     		strb	r2, [r3]
 323:main.c        ****                     currentOrientation = Down;
 1414              		.loc 1 323 0
 1415 01f0 224B     		ldr	r3, .L76+4
 1416 01f2 0122     		movs	r2, #1
 1417 01f4 1A70     		strb	r2, [r3]
 324:main.c        ****                     directionState = Forward;
 1418              		.loc 1 324 0
 1419 01f6 204B     		ldr	r3, .L76
 1420 01f8 0022     		movs	r2, #0
 1421 01fa 1A60     		str	r2, [r3]
 325:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 32


 326:main.c        ****                     currentRow--;
 327:main.c        ****                     currentOrientation = Right;
 328:main.c        ****                     directionState = TurnRight;
 329:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 330:main.c        ****                     currentRow++;
 331:main.c        ****                     currentOrientation = Left;
 332:main.c        ****                     directionState = TurnLeft;
 333:main.c        ****                 }
 334:main.c        ****                 break;
 1422              		.loc 1 334 0
 1423 01fc 14E1     		b	.L73
 1424              	.L60:
 325:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1425              		.loc 1 325 0
 1426 01fe 224B     		ldr	r3, .L76+16
 1427 0200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1428 0202 5A1E     		subs	r2, r3, #1
 1429 0204 214B     		ldr	r3, .L76+20
 1430 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1431 0208 1846     		mov	r0, r3
 1432 020a 2A49     		ldr	r1, .L76+60
 1433 020c 1346     		mov	r3, r2
 1434 020e DB00     		lsls	r3, r3, #3
 1435 0210 1344     		add	r3, r3, r2
 1436 0212 5B00     		lsls	r3, r3, #1
 1437 0214 1344     		add	r3, r3, r2
 1438 0216 0344     		add	r3, r3, r0
 1439 0218 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1440 021c 082B     		cmp	r3, #8
 1441 021e 0CD1     		bne	.L62
 326:main.c        ****                     currentOrientation = Right;
 1442              		.loc 1 326 0
 1443 0220 194B     		ldr	r3, .L76+16
 1444 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1445 0224 013B     		subs	r3, r3, #1
 1446 0226 DAB2     		uxtb	r2, r3
 1447 0228 174B     		ldr	r3, .L76+16
 1448 022a 1A70     		strb	r2, [r3]
 327:main.c        ****                     directionState = TurnRight;
 1449              		.loc 1 327 0
 1450 022c 134B     		ldr	r3, .L76+4
 1451 022e 0322     		movs	r2, #3
 1452 0230 1A70     		strb	r2, [r3]
 328:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 1453              		.loc 1 328 0
 1454 0232 114B     		ldr	r3, .L76
 1455 0234 0122     		movs	r2, #1
 1456 0236 1A60     		str	r2, [r3]
 1457              		.loc 1 334 0
 1458 0238 F6E0     		b	.L73
 1459              	.L62:
 329:main.c        ****                     currentRow++;
 1460              		.loc 1 329 0
 1461 023a 134B     		ldr	r3, .L76+16
 1462 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1463 023e 5A1C     		adds	r2, r3, #1
 1464 0240 124B     		ldr	r3, .L76+20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 33


 1465 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1466 0244 1846     		mov	r0, r3
 1467 0246 1B49     		ldr	r1, .L76+60
 1468 0248 1346     		mov	r3, r2
 1469 024a DB00     		lsls	r3, r3, #3
 1470 024c 1344     		add	r3, r3, r2
 1471 024e 5B00     		lsls	r3, r3, #1
 1472 0250 1344     		add	r3, r3, r2
 1473 0252 0344     		add	r3, r3, r0
 1474 0254 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1475 0258 082B     		cmp	r3, #8
 1476 025a 40F0E580 		bne	.L73
 330:main.c        ****                     currentOrientation = Left;
 1477              		.loc 1 330 0
 1478 025e 0A4B     		ldr	r3, .L76+16
 1479 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1480 0262 0133     		adds	r3, r3, #1
 1481 0264 DAB2     		uxtb	r2, r3
 1482 0266 084B     		ldr	r3, .L76+16
 1483 0268 1A70     		strb	r2, [r3]
 331:main.c        ****                     directionState = TurnLeft;
 1484              		.loc 1 331 0
 1485 026a 044B     		ldr	r3, .L76+4
 1486 026c 0222     		movs	r2, #2
 1487 026e 1A70     		strb	r2, [r3]
 332:main.c        ****                 }
 1488              		.loc 1 332 0
 1489 0270 014B     		ldr	r3, .L76
 1490 0272 0222     		movs	r2, #2
 1491 0274 1A60     		str	r2, [r3]
 1492              		.loc 1 334 0
 1493 0276 D7E0     		b	.L73
 1494              	.L77:
 1495              		.align	2
 1496              	.L76:
 1497 0278 00000000 		.word	directionState
 1498 027c 00000000 		.word	currentOrientation
 1499 0280 00000000 		.word	currentDirection
 1500 0284 00000000 		.word	previousDirection
 1501 0288 00000000 		.word	currentRow
 1502 028c 00000000 		.word	currentCol
 1503 0290 00000000 		.word	previousOrientation
 1504 0294 00000000 		.word	yBlockSize
 1505 0298 00000000 		.word	blockSize
 1506 029c 00000000 		.word	xBlockSize
 1507 02a0 00000000 		.word	totalDistance
 1508 02a4 00000000 		.word	s6
 1509 02a8 00000000 		.word	s5
 1510 02ac 00000000 		.word	s3
 1511 02b0 00000000 		.word	s4
 1512 02b4 44000000 		.word	map
 1513              	.L54:
 335:main.c        ****             case Left:
 336:main.c        ****                 if(map[currentRow - 1][currentCol] == 8) {
 1514              		.loc 1 336 0
 1515 02b8 624B     		ldr	r3, .L78
 1516 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 34


 1517 02bc 5A1E     		subs	r2, r3, #1
 1518 02be 624B     		ldr	r3, .L78+4
 1519 02c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1520 02c2 1846     		mov	r0, r3
 1521 02c4 6149     		ldr	r1, .L78+8
 1522 02c6 1346     		mov	r3, r2
 1523 02c8 DB00     		lsls	r3, r3, #3
 1524 02ca 1344     		add	r3, r3, r2
 1525 02cc 5B00     		lsls	r3, r3, #1
 1526 02ce 1344     		add	r3, r3, r2
 1527 02d0 0344     		add	r3, r3, r0
 1528 02d2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1529 02d6 082B     		cmp	r3, #8
 1530 02d8 0CD1     		bne	.L63
 337:main.c        ****                     currentRow--;
 1531              		.loc 1 337 0
 1532 02da 5A4B     		ldr	r3, .L78
 1533 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 02de 013B     		subs	r3, r3, #1
 1535 02e0 DAB2     		uxtb	r2, r3
 1536 02e2 584B     		ldr	r3, .L78
 1537 02e4 1A70     		strb	r2, [r3]
 338:main.c        ****                     currentOrientation = Left;
 1538              		.loc 1 338 0
 1539 02e6 5A4B     		ldr	r3, .L78+12
 1540 02e8 0222     		movs	r2, #2
 1541 02ea 1A70     		strb	r2, [r3]
 339:main.c        ****                     directionState = Forward;
 1542              		.loc 1 339 0
 1543 02ec 594B     		ldr	r3, .L78+16
 1544 02ee 0022     		movs	r2, #0
 1545 02f0 1A60     		str	r2, [r3]
 340:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 341:main.c        ****                     currentCol++;
 342:main.c        ****                     currentOrientation = Up;
 343:main.c        ****                     directionState = TurnRight;
 344:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 345:main.c        ****                     currentCol--;
 346:main.c        ****                     currentOrientation = Down;
 347:main.c        ****                     directionState = TurnLeft;
 348:main.c        ****                 }
 349:main.c        ****                 break;
 1546              		.loc 1 349 0
 1547 02f2 9BE0     		b	.L74
 1548              	.L63:
 340:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 1549              		.loc 1 340 0
 1550 02f4 534B     		ldr	r3, .L78
 1551 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 02f8 1A46     		mov	r2, r3
 1553 02fa 534B     		ldr	r3, .L78+4
 1554 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 02fe 591C     		adds	r1, r3, #1
 1556 0300 5248     		ldr	r0, .L78+8
 1557 0302 1346     		mov	r3, r2
 1558 0304 DB00     		lsls	r3, r3, #3
 1559 0306 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 35


 1560 0308 5B00     		lsls	r3, r3, #1
 1561 030a 1344     		add	r3, r3, r2
 1562 030c 0B44     		add	r3, r3, r1
 1563 030e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1564 0312 082B     		cmp	r3, #8
 1565 0314 0CD1     		bne	.L65
 341:main.c        ****                     currentOrientation = Up;
 1566              		.loc 1 341 0
 1567 0316 4C4B     		ldr	r3, .L78+4
 1568 0318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 031a 0133     		adds	r3, r3, #1
 1570 031c DAB2     		uxtb	r2, r3
 1571 031e 4A4B     		ldr	r3, .L78+4
 1572 0320 1A70     		strb	r2, [r3]
 342:main.c        ****                     directionState = TurnRight;
 1573              		.loc 1 342 0
 1574 0322 4B4B     		ldr	r3, .L78+12
 1575 0324 0022     		movs	r2, #0
 1576 0326 1A70     		strb	r2, [r3]
 343:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 1577              		.loc 1 343 0
 1578 0328 4A4B     		ldr	r3, .L78+16
 1579 032a 0122     		movs	r2, #1
 1580 032c 1A60     		str	r2, [r3]
 1581              		.loc 1 349 0
 1582 032e 7DE0     		b	.L74
 1583              	.L65:
 344:main.c        ****                     currentCol--;
 1584              		.loc 1 344 0
 1585 0330 444B     		ldr	r3, .L78
 1586 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 0334 1A46     		mov	r2, r3
 1588 0336 444B     		ldr	r3, .L78+4
 1589 0338 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 033a 591E     		subs	r1, r3, #1
 1591 033c 4348     		ldr	r0, .L78+8
 1592 033e 1346     		mov	r3, r2
 1593 0340 DB00     		lsls	r3, r3, #3
 1594 0342 1344     		add	r3, r3, r2
 1595 0344 5B00     		lsls	r3, r3, #1
 1596 0346 1344     		add	r3, r3, r2
 1597 0348 0B44     		add	r3, r3, r1
 1598 034a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1599 034e 082B     		cmp	r3, #8
 1600 0350 6CD1     		bne	.L74
 345:main.c        ****                     currentOrientation = Down;
 1601              		.loc 1 345 0
 1602 0352 3D4B     		ldr	r3, .L78+4
 1603 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 0356 013B     		subs	r3, r3, #1
 1605 0358 DAB2     		uxtb	r2, r3
 1606 035a 3B4B     		ldr	r3, .L78+4
 1607 035c 1A70     		strb	r2, [r3]
 346:main.c        ****                     directionState = TurnLeft;
 1608              		.loc 1 346 0
 1609 035e 3C4B     		ldr	r3, .L78+12
 1610 0360 0122     		movs	r2, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 36


 1611 0362 1A70     		strb	r2, [r3]
 347:main.c        ****                 }
 1612              		.loc 1 347 0
 1613 0364 3B4B     		ldr	r3, .L78+16
 1614 0366 0222     		movs	r2, #2
 1615 0368 1A60     		str	r2, [r3]
 1616              		.loc 1 349 0
 1617 036a 5FE0     		b	.L74
 1618              	.L55:
 350:main.c        ****             case Right:
 351:main.c        ****                 if(map[currentRow + 1][currentCol] == 8) {
 1619              		.loc 1 351 0
 1620 036c 354B     		ldr	r3, .L78
 1621 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 0370 5A1C     		adds	r2, r3, #1
 1623 0372 354B     		ldr	r3, .L78+4
 1624 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625 0376 1846     		mov	r0, r3
 1626 0378 3449     		ldr	r1, .L78+8
 1627 037a 1346     		mov	r3, r2
 1628 037c DB00     		lsls	r3, r3, #3
 1629 037e 1344     		add	r3, r3, r2
 1630 0380 5B00     		lsls	r3, r3, #1
 1631 0382 1344     		add	r3, r3, r2
 1632 0384 0344     		add	r3, r3, r0
 1633 0386 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1634 038a 082B     		cmp	r3, #8
 1635 038c 0CD1     		bne	.L66
 352:main.c        ****                     currentRow++;
 1636              		.loc 1 352 0
 1637 038e 2D4B     		ldr	r3, .L78
 1638 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1639 0392 0133     		adds	r3, r3, #1
 1640 0394 DAB2     		uxtb	r2, r3
 1641 0396 2B4B     		ldr	r3, .L78
 1642 0398 1A70     		strb	r2, [r3]
 353:main.c        ****                     currentOrientation = Right;
 1643              		.loc 1 353 0
 1644 039a 2D4B     		ldr	r3, .L78+12
 1645 039c 0322     		movs	r2, #3
 1646 039e 1A70     		strb	r2, [r3]
 354:main.c        ****                     directionState = Forward;
 1647              		.loc 1 354 0
 1648 03a0 2C4B     		ldr	r3, .L78+16
 1649 03a2 0022     		movs	r2, #0
 1650 03a4 1A60     		str	r2, [r3]
 355:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 356:main.c        ****                     currentCol++;
 357:main.c        ****                     currentOrientation = Up;
 358:main.c        ****                     directionState = TurnLeft;
 359:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 360:main.c        ****                     currentCol--;
 361:main.c        ****                     currentOrientation = Down;
 362:main.c        ****                     directionState = TurnRight;
 363:main.c        ****                 }
 364:main.c        ****                 break;
 1651              		.loc 1 364 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 37


 1652 03a6 43E0     		b	.L75
 1653              	.L66:
 355:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 1654              		.loc 1 355 0
 1655 03a8 264B     		ldr	r3, .L78
 1656 03aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 03ac 1A46     		mov	r2, r3
 1658 03ae 264B     		ldr	r3, .L78+4
 1659 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 03b2 591C     		adds	r1, r3, #1
 1661 03b4 2548     		ldr	r0, .L78+8
 1662 03b6 1346     		mov	r3, r2
 1663 03b8 DB00     		lsls	r3, r3, #3
 1664 03ba 1344     		add	r3, r3, r2
 1665 03bc 5B00     		lsls	r3, r3, #1
 1666 03be 1344     		add	r3, r3, r2
 1667 03c0 0B44     		add	r3, r3, r1
 1668 03c2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1669 03c6 082B     		cmp	r3, #8
 1670 03c8 0CD1     		bne	.L68
 356:main.c        ****                     currentOrientation = Up;
 1671              		.loc 1 356 0
 1672 03ca 1F4B     		ldr	r3, .L78+4
 1673 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1674 03ce 0133     		adds	r3, r3, #1
 1675 03d0 DAB2     		uxtb	r2, r3
 1676 03d2 1D4B     		ldr	r3, .L78+4
 1677 03d4 1A70     		strb	r2, [r3]
 357:main.c        ****                     directionState = TurnLeft;
 1678              		.loc 1 357 0
 1679 03d6 1E4B     		ldr	r3, .L78+12
 1680 03d8 0022     		movs	r2, #0
 1681 03da 1A70     		strb	r2, [r3]
 358:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 1682              		.loc 1 358 0
 1683 03dc 1D4B     		ldr	r3, .L78+16
 1684 03de 0222     		movs	r2, #2
 1685 03e0 1A60     		str	r2, [r3]
 1686              		.loc 1 364 0
 1687 03e2 25E0     		b	.L75
 1688              	.L68:
 359:main.c        ****                     currentCol--;
 1689              		.loc 1 359 0
 1690 03e4 174B     		ldr	r3, .L78
 1691 03e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 03e8 1A46     		mov	r2, r3
 1693 03ea 174B     		ldr	r3, .L78+4
 1694 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1695 03ee 591E     		subs	r1, r3, #1
 1696 03f0 1648     		ldr	r0, .L78+8
 1697 03f2 1346     		mov	r3, r2
 1698 03f4 DB00     		lsls	r3, r3, #3
 1699 03f6 1344     		add	r3, r3, r2
 1700 03f8 5B00     		lsls	r3, r3, #1
 1701 03fa 1344     		add	r3, r3, r2
 1702 03fc 0B44     		add	r3, r3, r1
 1703 03fe 50F82330 		ldr	r3, [r0, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 38


 1704 0402 082B     		cmp	r3, #8
 1705 0404 14D1     		bne	.L75
 360:main.c        ****                     currentOrientation = Down;
 1706              		.loc 1 360 0
 1707 0406 104B     		ldr	r3, .L78+4
 1708 0408 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1709 040a 013B     		subs	r3, r3, #1
 1710 040c DAB2     		uxtb	r2, r3
 1711 040e 0E4B     		ldr	r3, .L78+4
 1712 0410 1A70     		strb	r2, [r3]
 361:main.c        ****                     directionState = TurnRight;
 1713              		.loc 1 361 0
 1714 0412 0F4B     		ldr	r3, .L78+12
 1715 0414 0122     		movs	r2, #1
 1716 0416 1A70     		strb	r2, [r3]
 362:main.c        ****                 }
 1717              		.loc 1 362 0
 1718 0418 0E4B     		ldr	r3, .L78+16
 1719 041a 0122     		movs	r2, #1
 1720 041c 1A60     		str	r2, [r3]
 1721              		.loc 1 364 0
 1722 041e 07E0     		b	.L75
 1723              	.L71:
 365:main.c        ****             default:
 366:main.c        ****                 break;
 1724              		.loc 1 366 0
 1725 0420 00BF     		nop
 1726 0422 06E0     		b	.L59
 1727              	.L72:
 319:main.c        ****             case Down:
 1728              		.loc 1 319 0
 1729 0424 00BF     		nop
 1730 0426 04E0     		b	.L59
 1731              	.L73:
 334:main.c        ****             case Left:
 1732              		.loc 1 334 0
 1733 0428 00BF     		nop
 1734 042a 02E0     		b	.L59
 1735              	.L74:
 349:main.c        ****             case Right:
 1736              		.loc 1 349 0
 1737 042c 00BF     		nop
 1738 042e 00E0     		b	.L59
 1739              	.L75:
 364:main.c        ****             default:
 1740              		.loc 1 364 0
 1741 0430 00BF     		nop
 1742              	.L59:
 367:main.c        ****         }
 368:main.c        ****         totalDistance = 0; // reset total distance
 1743              		.loc 1 368 0
 1744 0432 094B     		ldr	r3, .L78+20
 1745 0434 4FF00002 		mov	r2, #0
 1746 0438 1A60     		str	r2, [r3]	@ float
 369:main.c        ****     }
 370:main.c        ****     return previousDirection;
 1747              		.loc 1 370 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 39


 1748 043a 084B     		ldr	r3, .L78+24
 1749 043c 1B68     		ldr	r3, [r3]
 1750              	.L38:
 371:main.c        **** }
 1751              		.loc 1 371 0
 1752 043e 1846     		mov	r0, r3
 1753 0440 80BD     		pop	{r7, pc}
 1754              	.L79:
 1755 0442 00BF     		.align	2
 1756              	.L78:
 1757 0444 00000000 		.word	currentRow
 1758 0448 00000000 		.word	currentCol
 1759 044c 44000000 		.word	map
 1760 0450 00000000 		.word	currentOrientation
 1761 0454 00000000 		.word	directionState
 1762 0458 00000000 		.word	totalDistance
 1763 045c 00000000 		.word	previousDirection
 1764              		.cfi_endproc
 1765              	.LFE73:
 1766              		.size	getDirection, .-getDirection
 1767              		.global	__aeabi_fcmpge
 1768              		.section	.text.CheckSensorDirection,"ax",%progbits
 1769              		.align	2
 1770              		.global	CheckSensorDirection
 1771              		.thumb
 1772              		.thumb_func
 1773              		.type	CheckSensorDirection, %function
 1774              	CheckSensorDirection:
 1775              	.LFB74:
 372:main.c        **** 
 373:main.c        **** enum DirectionState CheckSensorDirection() {
 1776              		.loc 1 373 0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 1, uses_anonymous_args = 0
 1780 0000 80B5     		push	{r7, lr}
 1781              		.cfi_def_cfa_offset 8
 1782              		.cfi_offset 7, -8
 1783              		.cfi_offset 14, -4
 1784 0002 00AF     		add	r7, sp, #0
 1785              		.cfi_def_cfa_register 7
 374:main.c        ****     directionState = Stop;
 1786              		.loc 1 374 0
 1787 0004 914B     		ldr	r3, .L137
 1788 0006 0522     		movs	r2, #5
 1789 0008 1A60     		str	r2, [r3]
 375:main.c        ****     currentOrientation = Up; // initialise at start
 1790              		.loc 1 375 0
 1791 000a 914B     		ldr	r3, .L137+4
 1792 000c 0022     		movs	r2, #0
 1793 000e 1A70     		strb	r2, [r3]
 376:main.c        ****     previousDirection = currentDirection;
 1794              		.loc 1 376 0
 1795 0010 904B     		ldr	r3, .L137+8
 1796 0012 1B68     		ldr	r3, [r3]
 1797 0014 904A     		ldr	r2, .L137+12
 1798 0016 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 40


 377:main.c        ****     // determine orientation and relevant blocksize
 378:main.c        ****     if(currentOrientation == Up || Down) {
 379:main.c        ****         blockSize = yBlockSize;
 1799              		.loc 1 379 0
 1800 0018 904B     		ldr	r3, .L137+16
 1801 001a 1B68     		ldr	r3, [r3]	@ float
 1802 001c 904A     		ldr	r2, .L137+20
 1803 001e 1360     		str	r3, [r2]	@ float
 380:main.c        ****     } else {
 381:main.c        ****         blockSize = xBlockSize;
 382:main.c        ****     }
 383:main.c        ****     // BLOCK TRACKING
 384:main.c        ****     if (totalDistance >= blockSize) {
 1804              		.loc 1 384 0
 1805 0020 904B     		ldr	r3, .L137+24
 1806 0022 1A68     		ldr	r2, [r3]	@ float
 1807 0024 8E4B     		ldr	r3, .L137+20
 1808 0026 1B68     		ldr	r3, [r3]	@ float
 1809 0028 1946     		mov	r1, r3
 1810 002a 1046     		mov	r0, r2
 1811 002c FFF7FEFF 		bl	__aeabi_fcmpge
 1812 0030 0346     		mov	r3, r0
 1813 0032 002B     		cmp	r3, #0
 1814 0034 2FD0     		beq	.L81
 385:main.c        ****         switch(currentOrientation) {
 1815              		.loc 1 385 0
 1816 0036 864B     		ldr	r3, .L137+4
 1817 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1818 003a 032B     		cmp	r3, #3
 1819 003c 26D8     		bhi	.L131
 1820 003e 01A2     		adr	r2, .L85
 1821 0040 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1822              		.p2align 2
 1823              	.L85:
 1824 0044 55000000 		.word	.L84+1
 1825 0048 63000000 		.word	.L86+1
 1826 004c 71000000 		.word	.L87+1
 1827 0050 7F000000 		.word	.L88+1
 1828              		.p2align 1
 1829              	.L84:
 386:main.c        ****             case Up:
 387:main.c        ****                 currentCol++;
 1830              		.loc 1 387 0
 1831 0054 844B     		ldr	r3, .L137+28
 1832 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1833 0058 0133     		adds	r3, r3, #1
 1834 005a DAB2     		uxtb	r2, r3
 1835 005c 824B     		ldr	r3, .L137+28
 1836 005e 1A70     		strb	r2, [r3]
 388:main.c        ****                 break;
 1837              		.loc 1 388 0
 1838 0060 15E0     		b	.L89
 1839              	.L86:
 389:main.c        ****             case Down:
 390:main.c        ****                 currentCol--;
 1840              		.loc 1 390 0
 1841 0062 814B     		ldr	r3, .L137+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 41


 1842 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1843 0066 013B     		subs	r3, r3, #1
 1844 0068 DAB2     		uxtb	r2, r3
 1845 006a 7F4B     		ldr	r3, .L137+28
 1846 006c 1A70     		strb	r2, [r3]
 391:main.c        ****                 break;
 1847              		.loc 1 391 0
 1848 006e 0EE0     		b	.L89
 1849              	.L87:
 392:main.c        ****             case Left:
 393:main.c        ****                 currentRow--;
 1850              		.loc 1 393 0
 1851 0070 7E4B     		ldr	r3, .L137+32
 1852 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1853 0074 013B     		subs	r3, r3, #1
 1854 0076 DAB2     		uxtb	r2, r3
 1855 0078 7C4B     		ldr	r3, .L137+32
 1856 007a 1A70     		strb	r2, [r3]
 394:main.c        ****                 break;
 1857              		.loc 1 394 0
 1858 007c 07E0     		b	.L89
 1859              	.L88:
 395:main.c        ****             case Right:
 396:main.c        ****                 currentRow++;
 1860              		.loc 1 396 0
 1861 007e 7B4B     		ldr	r3, .L137+32
 1862 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1863 0082 0133     		adds	r3, r3, #1
 1864 0084 DAB2     		uxtb	r2, r3
 1865 0086 794B     		ldr	r3, .L137+32
 1866 0088 1A70     		strb	r2, [r3]
 397:main.c        ****                 break;
 1867              		.loc 1 397 0
 1868 008a 00E0     		b	.L89
 1869              	.L131:
 398:main.c        ****             default:
 399:main.c        ****                 break;
 1870              		.loc 1 399 0
 1871 008c 00BF     		nop
 1872              	.L89:
 400:main.c        ****         }
 401:main.c        ****         totalDistance = 0; // reset total distance
 1873              		.loc 1 401 0
 1874 008e 754B     		ldr	r3, .L137+24
 1875 0090 4FF00002 		mov	r2, #0
 1876 0094 1A60     		str	r2, [r3]	@ float
 1877              	.L81:
 402:main.c        ****     }
 403:main.c        **** 
 404:main.c        ****    // MOVEMENT
 405:main.c        ****     if (previousDirection == Stop) {
 1878              		.loc 1 405 0
 1879 0096 704B     		ldr	r3, .L137+12
 1880 0098 1B68     		ldr	r3, [r3]
 1881 009a 052B     		cmp	r3, #5
 1882 009c 11D1     		bne	.L90
 406:main.c        ****         if (stopBuffer <= 10) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 42


 1883              		.loc 1 406 0
 1884 009e 744B     		ldr	r3, .L137+36
 1885 00a0 1B68     		ldr	r3, [r3]
 1886 00a2 0A2B     		cmp	r3, #10
 1887 00a4 03D8     		bhi	.L91
 407:main.c        ****             directionState = Stop;
 1888              		.loc 1 407 0
 1889 00a6 694B     		ldr	r3, .L137
 1890 00a8 0522     		movs	r2, #5
 1891 00aa 1A60     		str	r2, [r3]
 1892 00ac 02E0     		b	.L92
 1893              	.L91:
 408:main.c        ****         } else {
 409:main.c        ****             directionState = ForwardAfterTurn;
 1894              		.loc 1 409 0
 1895 00ae 674B     		ldr	r3, .L137
 1896 00b0 0922     		movs	r2, #9
 1897 00b2 1A60     		str	r2, [r3]
 1898              	.L92:
 410:main.c        ****         }
 411:main.c        ****         currentDirection = previousDirection;
 1899              		.loc 1 411 0
 1900 00b4 684B     		ldr	r3, .L137+12
 1901 00b6 1B68     		ldr	r3, [r3]
 1902 00b8 664A     		ldr	r2, .L137+8
 1903 00ba 1360     		str	r3, [r2]
 412:main.c        ****         return directionState;
 1904              		.loc 1 412 0
 1905 00bc 634B     		ldr	r3, .L137
 1906 00be 1B68     		ldr	r3, [r3]
 1907 00c0 31E2     		b	.L93
 1908              	.L90:
 413:main.c        ****     }
 414:main.c        ****     
 415:main.c        ****     // If one of the sensors are still on the line after we turn, move forward
 416:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1909              		.loc 1 416 0
 1910 00c2 654B     		ldr	r3, .L137+12
 1911 00c4 1B68     		ldr	r3, [r3]
 1912 00c6 092B     		cmp	r3, #9
 1913 00c8 15D1     		bne	.L94
 417:main.c        ****         if (s3 || s4) {
 1914              		.loc 1 417 0
 1915 00ca 6A4B     		ldr	r3, .L137+40
 1916 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 00ce 002B     		cmp	r3, #0
 1918 00d0 03D1     		bne	.L95
 1919              		.loc 1 417 0 is_stmt 0 discriminator 1
 1920 00d2 694B     		ldr	r3, .L137+44
 1921 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1922 00d6 002B     		cmp	r3, #0
 1923 00d8 0DD0     		beq	.L94
 1924              	.L95:
 418:main.c        ****             totalDistance = 0; // reset total distance after turn
 1925              		.loc 1 418 0 is_stmt 1
 1926 00da 624B     		ldr	r3, .L137+24
 1927 00dc 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 43


 1928 00e0 1A60     		str	r2, [r3]	@ float
 419:main.c        ****             directionState = Forward;
 1929              		.loc 1 419 0
 1930 00e2 5A4B     		ldr	r3, .L137
 1931 00e4 0022     		movs	r2, #0
 1932 00e6 1A60     		str	r2, [r3]
 420:main.c        ****             currentDirection = previousDirection;
 1933              		.loc 1 420 0
 1934 00e8 5B4B     		ldr	r3, .L137+12
 1935 00ea 1B68     		ldr	r3, [r3]
 1936 00ec 594A     		ldr	r2, .L137+8
 1937 00ee 1360     		str	r3, [r2]
 421:main.c        ****             return directionState;
 1938              		.loc 1 421 0
 1939 00f0 564B     		ldr	r3, .L137
 1940 00f2 1B68     		ldr	r3, [r3]
 1941 00f4 17E2     		b	.L93
 1942              	.L94:
 422:main.c        ****         }
 423:main.c        ****     }
 424:main.c        **** 
 425:main.c        ****     if(previousDirection == TurnRight) {
 1943              		.loc 1 425 0
 1944 00f6 584B     		ldr	r3, .L137+12
 1945 00f8 1B68     		ldr	r3, [r3]
 1946 00fa 012B     		cmp	r3, #1
 1947 00fc 23D1     		bne	.L96
 426:main.c        ****         if(s5 && s6) {
 1948              		.loc 1 426 0
 1949 00fe 5F4B     		ldr	r3, .L137+48
 1950 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 0102 002B     		cmp	r3, #0
 1952 0104 0DD0     		beq	.L97
 1953              		.loc 1 426 0 is_stmt 0 discriminator 1
 1954 0106 5E4B     		ldr	r3, .L137+52
 1955 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 010a 002B     		cmp	r3, #0
 1957 010c 09D0     		beq	.L97
 427:main.c        ****             directionState = TurnRight;
 1958              		.loc 1 427 0 is_stmt 1
 1959 010e 4F4B     		ldr	r3, .L137
 1960 0110 0122     		movs	r2, #1
 1961 0112 1A60     		str	r2, [r3]
 428:main.c        ****             currentDirection = previousDirection;
 1962              		.loc 1 428 0
 1963 0114 504B     		ldr	r3, .L137+12
 1964 0116 1B68     		ldr	r3, [r3]
 1965 0118 4E4A     		ldr	r2, .L137+8
 1966 011a 1360     		str	r3, [r2]
 429:main.c        ****             return directionState;
 1967              		.loc 1 429 0
 1968 011c 4B4B     		ldr	r3, .L137
 1969 011e 1B68     		ldr	r3, [r3]
 1970 0120 01E2     		b	.L93
 1971              	.L97:
 430:main.c        ****         } 
 431:main.c        ****         else if (!s5 || !s6) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 44


 1972              		.loc 1 431 0
 1973 0122 564B     		ldr	r3, .L137+48
 1974 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 0126 002B     		cmp	r3, #0
 1976 0128 03D0     		beq	.L98
 1977              		.loc 1 431 0 is_stmt 0 discriminator 1
 1978 012a 554B     		ldr	r3, .L137+52
 1979 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1980 012e 002B     		cmp	r3, #0
 1981 0130 09D1     		bne	.L96
 1982              	.L98:
 432:main.c        ****             directionState = Stop;
 1983              		.loc 1 432 0 is_stmt 1
 1984 0132 464B     		ldr	r3, .L137
 1985 0134 0522     		movs	r2, #5
 1986 0136 1A60     		str	r2, [r3]
 433:main.c        ****             currentDirection = previousDirection;
 1987              		.loc 1 433 0
 1988 0138 474B     		ldr	r3, .L137+12
 1989 013a 1B68     		ldr	r3, [r3]
 1990 013c 454A     		ldr	r2, .L137+8
 1991 013e 1360     		str	r3, [r2]
 434:main.c        ****             return directionState;
 1992              		.loc 1 434 0
 1993 0140 424B     		ldr	r3, .L137
 1994 0142 1B68     		ldr	r3, [r3]
 1995 0144 EFE1     		b	.L93
 1996              	.L96:
 435:main.c        ****         }
 436:main.c        ****     }    
 437:main.c        **** 
 438:main.c        ****     if(previousDirection == TurnLeft) {
 1997              		.loc 1 438 0
 1998 0146 444B     		ldr	r3, .L137+12
 1999 0148 1B68     		ldr	r3, [r3]
 2000 014a 022B     		cmp	r3, #2
 2001 014c 23D1     		bne	.L99
 439:main.c        ****         if(s5 && s6) {
 2002              		.loc 1 439 0
 2003 014e 4B4B     		ldr	r3, .L137+48
 2004 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 0152 002B     		cmp	r3, #0
 2006 0154 0DD0     		beq	.L100
 2007              		.loc 1 439 0 is_stmt 0 discriminator 1
 2008 0156 4A4B     		ldr	r3, .L137+52
 2009 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2010 015a 002B     		cmp	r3, #0
 2011 015c 09D0     		beq	.L100
 440:main.c        ****             directionState = TurnLeft;
 2012              		.loc 1 440 0 is_stmt 1
 2013 015e 3B4B     		ldr	r3, .L137
 2014 0160 0222     		movs	r2, #2
 2015 0162 1A60     		str	r2, [r3]
 441:main.c        ****             currentDirection = previousDirection;
 2016              		.loc 1 441 0
 2017 0164 3C4B     		ldr	r3, .L137+12
 2018 0166 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 45


 2019 0168 3A4A     		ldr	r2, .L137+8
 2020 016a 1360     		str	r3, [r2]
 442:main.c        ****             return directionState;
 2021              		.loc 1 442 0
 2022 016c 374B     		ldr	r3, .L137
 2023 016e 1B68     		ldr	r3, [r3]
 2024 0170 D9E1     		b	.L93
 2025              	.L100:
 443:main.c        ****         } 
 444:main.c        ****         else if (!s5 || !s6) {
 2026              		.loc 1 444 0
 2027 0172 424B     		ldr	r3, .L137+48
 2028 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 0176 002B     		cmp	r3, #0
 2030 0178 03D0     		beq	.L101
 2031              		.loc 1 444 0 is_stmt 0 discriminator 1
 2032 017a 414B     		ldr	r3, .L137+52
 2033 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 017e 002B     		cmp	r3, #0
 2035 0180 09D1     		bne	.L99
 2036              	.L101:
 445:main.c        ****             directionState = Stop;
 2037              		.loc 1 445 0 is_stmt 1
 2038 0182 324B     		ldr	r3, .L137
 2039 0184 0522     		movs	r2, #5
 2040 0186 1A60     		str	r2, [r3]
 446:main.c        ****             currentDirection = previousDirection;
 2041              		.loc 1 446 0
 2042 0188 334B     		ldr	r3, .L137+12
 2043 018a 1B68     		ldr	r3, [r3]
 2044 018c 314A     		ldr	r2, .L137+8
 2045 018e 1360     		str	r3, [r2]
 447:main.c        ****             return directionState;
 2046              		.loc 1 447 0
 2047 0190 2E4B     		ldr	r3, .L137
 2048 0192 1B68     		ldr	r3, [r3]
 2049 0194 C7E1     		b	.L93
 2050              	.L99:
 448:main.c        ****         }
 449:main.c        ****     }
 450:main.c        ****     
 451:main.c        ****     /*if (previousDirection == waitForTurn) {
 452:main.c        ****         // If we are waiting for a turn, look for left sensor and right sensor, otherwise keep wait
 453:main.c        ****         if (!s3) {
 454:main.c        ****             directionState = TurnLeft;
 455:main.c        ****             return directionState;
 456:main.c        ****         }
 457:main.c        ****         if (!s4) {
 458:main.c        ****             directionState = TurnRight;   
 459:main.c        ****             return directionState;
 460:main.c        ****         }
 461:main.c        ****         directionState = waitForTurn;
 462:main.c        ****         return directionState;
 463:main.c        ****     }*/
 464:main.c        **** 
 465:main.c        ****     // reached fork/ alternate paths or needs to turn
 466:main.c        ****     if((previousDirection == Forward && (s3 || s4)) || (previousDirection == waitForTurn && s3 && s
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 46


 2051              		.loc 1 466 0
 2052 0196 304B     		ldr	r3, .L137+12
 2053 0198 1B68     		ldr	r3, [r3]
 2054 019a 002B     		cmp	r3, #0
 2055 019c 07D1     		bne	.L102
 2056              		.loc 1 466 0 is_stmt 0 discriminator 1
 2057 019e 354B     		ldr	r3, .L137+40
 2058 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2059 01a2 002B     		cmp	r3, #0
 2060 01a4 12D1     		bne	.L103
 2061              		.loc 1 466 0 discriminator 3
 2062 01a6 344B     		ldr	r3, .L137+44
 2063 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2064 01aa 002B     		cmp	r3, #0
 2065 01ac 0ED1     		bne	.L103
 2066              	.L102:
 2067              		.loc 1 466 0 discriminator 4
 2068 01ae 2A4B     		ldr	r3, .L137+12
 2069 01b0 1B68     		ldr	r3, [r3]
 2070 01b2 082B     		cmp	r3, #8
 2071 01b4 40F06881 		bne	.L104
 2072              		.loc 1 466 0 discriminator 5
 2073 01b8 2E4B     		ldr	r3, .L137+40
 2074 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2075 01bc 002B     		cmp	r3, #0
 2076 01be 00F06381 		beq	.L104
 2077              		.loc 1 466 0 discriminator 6
 2078 01c2 2D4B     		ldr	r3, .L137+44
 2079 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2080 01c6 002B     		cmp	r3, #0
 2081 01c8 00F05E81 		beq	.L104
 2082              	.L103:
 467:main.c        ****         // check for next step in calculated path, robot will know it's location and next step
 468:main.c        ****         // optimal steps are marked with an 8
 469:main.c        ****         switch (previousOrientation) {
 2083              		.loc 1 469 0 is_stmt 1
 2084 01cc 2D4B     		ldr	r3, .L137+56
 2085 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 01d0 032B     		cmp	r3, #3
 2087 01d2 00F24D81 		bhi	.L132
 2088 01d6 01A2     		adr	r2, .L107
 2089 01d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2090              		.p2align 2
 2091              	.L107:
 2092 01dc ED010000 		.word	.L106+1
 2093 01e0 BF020000 		.word	.L108+1
 2094 01e4 51030000 		.word	.L109+1
 2095 01e8 E1030000 		.word	.L110+1
 2096              		.p2align 1
 2097              	.L106:
 470:main.c        ****             case Up:
 471:main.c        ****                 if(map[currentRow][currentCol + 1] == 8) {
 2098              		.loc 1 471 0
 2099 01ec 1F4B     		ldr	r3, .L137+32
 2100 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2101 01f0 1A46     		mov	r2, r3
 2102 01f2 1D4B     		ldr	r3, .L137+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 47


 2103 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2104 01f6 591C     		adds	r1, r3, #1
 2105 01f8 2348     		ldr	r0, .L137+60
 2106 01fa 1346     		mov	r3, r2
 2107 01fc DB00     		lsls	r3, r3, #3
 2108 01fe 1344     		add	r3, r3, r2
 2109 0200 5B00     		lsls	r3, r3, #1
 2110 0202 1344     		add	r3, r3, r2
 2111 0204 0B44     		add	r3, r3, r1
 2112 0206 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2113 020a 082B     		cmp	r3, #8
 2114 020c 06D1     		bne	.L111
 472:main.c        ****                     currentOrientation = Up;
 2115              		.loc 1 472 0
 2116 020e 104B     		ldr	r3, .L137+4
 2117 0210 0022     		movs	r2, #0
 2118 0212 1A70     		strb	r2, [r3]
 473:main.c        ****                     directionState = Forward;
 2119              		.loc 1 473 0
 2120 0214 0D4B     		ldr	r3, .L137
 2121 0216 0022     		movs	r2, #0
 2122 0218 1A60     		str	r2, [r3]
 474:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 475:main.c        ****                     currentOrientation = Left;
 476:main.c        ****                     directionState = TurnLeft;
 477:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 478:main.c        ****                     currentOrientation = Right;
 479:main.c        ****                     directionState = TurnRight;
 480:main.c        ****                 }
 481:main.c        ****                 break;
 2123              		.loc 1 481 0
 2124 021a 2BE1     		b	.L133
 2125              	.L111:
 474:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 2126              		.loc 1 474 0
 2127 021c 134B     		ldr	r3, .L137+32
 2128 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2129 0220 5A1E     		subs	r2, r3, #1
 2130 0222 114B     		ldr	r3, .L137+28
 2131 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2132 0226 1846     		mov	r0, r3
 2133 0228 1749     		ldr	r1, .L137+60
 2134 022a 1346     		mov	r3, r2
 2135 022c DB00     		lsls	r3, r3, #3
 2136 022e 1344     		add	r3, r3, r2
 2137 0230 5B00     		lsls	r3, r3, #1
 2138 0232 1344     		add	r3, r3, r2
 2139 0234 0344     		add	r3, r3, r0
 2140 0236 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2141 023a 082B     		cmp	r3, #8
 2142 023c 26D1     		bne	.L113
 475:main.c        ****                     directionState = TurnLeft;
 2143              		.loc 1 475 0
 2144 023e 044B     		ldr	r3, .L137+4
 2145 0240 0222     		movs	r2, #2
 2146 0242 1A70     		strb	r2, [r3]
 476:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 48


 2147              		.loc 1 476 0
 2148 0244 014B     		ldr	r3, .L137
 2149 0246 0222     		movs	r2, #2
 2150 0248 1A60     		str	r2, [r3]
 2151              		.loc 1 481 0
 2152 024a 13E1     		b	.L133
 2153              	.L138:
 2154              		.align	2
 2155              	.L137:
 2156 024c 00000000 		.word	directionState
 2157 0250 00000000 		.word	currentOrientation
 2158 0254 00000000 		.word	currentDirection
 2159 0258 00000000 		.word	previousDirection
 2160 025c 00000000 		.word	yBlockSize
 2161 0260 00000000 		.word	blockSize
 2162 0264 00000000 		.word	totalDistance
 2163 0268 00000000 		.word	currentCol
 2164 026c 00000000 		.word	currentRow
 2165 0270 00000000 		.word	stopBuffer
 2166 0274 00000000 		.word	s3
 2167 0278 00000000 		.word	s4
 2168 027c 00000000 		.word	s5
 2169 0280 00000000 		.word	s6
 2170 0284 00000000 		.word	previousOrientation
 2171 0288 44000000 		.word	map
 2172              	.L113:
 477:main.c        ****                     currentOrientation = Right;
 2173              		.loc 1 477 0
 2174 028c A74B     		ldr	r3, .L139
 2175 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2176 0290 5A1C     		adds	r2, r3, #1
 2177 0292 A74B     		ldr	r3, .L139+4
 2178 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2179 0296 1846     		mov	r0, r3
 2180 0298 A649     		ldr	r1, .L139+8
 2181 029a 1346     		mov	r3, r2
 2182 029c DB00     		lsls	r3, r3, #3
 2183 029e 1344     		add	r3, r3, r2
 2184 02a0 5B00     		lsls	r3, r3, #1
 2185 02a2 1344     		add	r3, r3, r2
 2186 02a4 0344     		add	r3, r3, r0
 2187 02a6 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2188 02aa 082B     		cmp	r3, #8
 2189 02ac 40F0E280 		bne	.L133
 478:main.c        ****                     directionState = TurnRight;
 2190              		.loc 1 478 0
 2191 02b0 A14B     		ldr	r3, .L139+12
 2192 02b2 0322     		movs	r2, #3
 2193 02b4 1A70     		strb	r2, [r3]
 479:main.c        ****                 }
 2194              		.loc 1 479 0
 2195 02b6 A14B     		ldr	r3, .L139+16
 2196 02b8 0122     		movs	r2, #1
 2197 02ba 1A60     		str	r2, [r3]
 2198              		.loc 1 481 0
 2199 02bc DAE0     		b	.L133
 2200              	.L108:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 49


 482:main.c        ****             case Down:
 483:main.c        ****                 if(map[currentRow][currentCol - 1] == 8) {
 2201              		.loc 1 483 0
 2202 02be 9B4B     		ldr	r3, .L139
 2203 02c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204 02c2 1A46     		mov	r2, r3
 2205 02c4 9A4B     		ldr	r3, .L139+4
 2206 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2207 02c8 591E     		subs	r1, r3, #1
 2208 02ca 9A48     		ldr	r0, .L139+8
 2209 02cc 1346     		mov	r3, r2
 2210 02ce DB00     		lsls	r3, r3, #3
 2211 02d0 1344     		add	r3, r3, r2
 2212 02d2 5B00     		lsls	r3, r3, #1
 2213 02d4 1344     		add	r3, r3, r2
 2214 02d6 0B44     		add	r3, r3, r1
 2215 02d8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2216 02dc 082B     		cmp	r3, #8
 2217 02de 06D1     		bne	.L115
 484:main.c        ****                     currentOrientation = Down;
 2218              		.loc 1 484 0
 2219 02e0 954B     		ldr	r3, .L139+12
 2220 02e2 0122     		movs	r2, #1
 2221 02e4 1A70     		strb	r2, [r3]
 485:main.c        ****                     directionState = Forward;
 2222              		.loc 1 485 0
 2223 02e6 954B     		ldr	r3, .L139+16
 2224 02e8 0022     		movs	r2, #0
 2225 02ea 1A60     		str	r2, [r3]
 486:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 487:main.c        ****                     currentOrientation = Right;
 488:main.c        ****                     directionState = TurnRight;
 489:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 490:main.c        ****                     currentOrientation = Left;
 491:main.c        ****                     directionState = TurnLeft;
 492:main.c        ****                 }
 493:main.c        ****                 break;
 2226              		.loc 1 493 0
 2227 02ec C4E0     		b	.L134
 2228              	.L115:
 486:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 2229              		.loc 1 486 0
 2230 02ee 8F4B     		ldr	r3, .L139
 2231 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2232 02f2 5A1E     		subs	r2, r3, #1
 2233 02f4 8E4B     		ldr	r3, .L139+4
 2234 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2235 02f8 1846     		mov	r0, r3
 2236 02fa 8E49     		ldr	r1, .L139+8
 2237 02fc 1346     		mov	r3, r2
 2238 02fe DB00     		lsls	r3, r3, #3
 2239 0300 1344     		add	r3, r3, r2
 2240 0302 5B00     		lsls	r3, r3, #1
 2241 0304 1344     		add	r3, r3, r2
 2242 0306 0344     		add	r3, r3, r0
 2243 0308 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2244 030c 082B     		cmp	r3, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 50


 2245 030e 06D1     		bne	.L117
 487:main.c        ****                     directionState = TurnRight;
 2246              		.loc 1 487 0
 2247 0310 894B     		ldr	r3, .L139+12
 2248 0312 0322     		movs	r2, #3
 2249 0314 1A70     		strb	r2, [r3]
 488:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 2250              		.loc 1 488 0
 2251 0316 894B     		ldr	r3, .L139+16
 2252 0318 0122     		movs	r2, #1
 2253 031a 1A60     		str	r2, [r3]
 2254              		.loc 1 493 0
 2255 031c ACE0     		b	.L134
 2256              	.L117:
 489:main.c        ****                     currentOrientation = Left;
 2257              		.loc 1 489 0
 2258 031e 834B     		ldr	r3, .L139
 2259 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2260 0322 5A1C     		adds	r2, r3, #1
 2261 0324 824B     		ldr	r3, .L139+4
 2262 0326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2263 0328 1846     		mov	r0, r3
 2264 032a 8249     		ldr	r1, .L139+8
 2265 032c 1346     		mov	r3, r2
 2266 032e DB00     		lsls	r3, r3, #3
 2267 0330 1344     		add	r3, r3, r2
 2268 0332 5B00     		lsls	r3, r3, #1
 2269 0334 1344     		add	r3, r3, r2
 2270 0336 0344     		add	r3, r3, r0
 2271 0338 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2272 033c 082B     		cmp	r3, #8
 2273 033e 40F09B80 		bne	.L134
 490:main.c        ****                     directionState = TurnLeft;
 2274              		.loc 1 490 0
 2275 0342 7D4B     		ldr	r3, .L139+12
 2276 0344 0222     		movs	r2, #2
 2277 0346 1A70     		strb	r2, [r3]
 491:main.c        ****                 }
 2278              		.loc 1 491 0
 2279 0348 7C4B     		ldr	r3, .L139+16
 2280 034a 0222     		movs	r2, #2
 2281 034c 1A60     		str	r2, [r3]
 2282              		.loc 1 493 0
 2283 034e 93E0     		b	.L134
 2284              	.L109:
 494:main.c        ****             case Left:
 495:main.c        ****                 if(map[currentRow - 1][currentCol] == 8) {
 2285              		.loc 1 495 0
 2286 0350 764B     		ldr	r3, .L139
 2287 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 0354 5A1E     		subs	r2, r3, #1
 2289 0356 764B     		ldr	r3, .L139+4
 2290 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2291 035a 1846     		mov	r0, r3
 2292 035c 7549     		ldr	r1, .L139+8
 2293 035e 1346     		mov	r3, r2
 2294 0360 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 51


 2295 0362 1344     		add	r3, r3, r2
 2296 0364 5B00     		lsls	r3, r3, #1
 2297 0366 1344     		add	r3, r3, r2
 2298 0368 0344     		add	r3, r3, r0
 2299 036a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2300 036e 082B     		cmp	r3, #8
 2301 0370 06D1     		bne	.L118
 496:main.c        ****                     currentOrientation = Left;
 2302              		.loc 1 496 0
 2303 0372 714B     		ldr	r3, .L139+12
 2304 0374 0222     		movs	r2, #2
 2305 0376 1A70     		strb	r2, [r3]
 497:main.c        ****                     directionState = Forward;
 2306              		.loc 1 497 0
 2307 0378 704B     		ldr	r3, .L139+16
 2308 037a 0022     		movs	r2, #0
 2309 037c 1A60     		str	r2, [r3]
 498:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 499:main.c        ****                     currentOrientation = Up;
 500:main.c        ****                     directionState = TurnRight;
 501:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 502:main.c        ****                     currentOrientation = Down;
 503:main.c        ****                     directionState = TurnLeft;
 504:main.c        ****                 }
 505:main.c        ****                 break;
 2310              		.loc 1 505 0
 2311 037e 7DE0     		b	.L135
 2312              	.L118:
 498:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 2313              		.loc 1 498 0
 2314 0380 6A4B     		ldr	r3, .L139
 2315 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2316 0384 1A46     		mov	r2, r3
 2317 0386 6A4B     		ldr	r3, .L139+4
 2318 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2319 038a 591C     		adds	r1, r3, #1
 2320 038c 6948     		ldr	r0, .L139+8
 2321 038e 1346     		mov	r3, r2
 2322 0390 DB00     		lsls	r3, r3, #3
 2323 0392 1344     		add	r3, r3, r2
 2324 0394 5B00     		lsls	r3, r3, #1
 2325 0396 1344     		add	r3, r3, r2
 2326 0398 0B44     		add	r3, r3, r1
 2327 039a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2328 039e 082B     		cmp	r3, #8
 2329 03a0 06D1     		bne	.L120
 499:main.c        ****                     directionState = TurnRight;
 2330              		.loc 1 499 0
 2331 03a2 654B     		ldr	r3, .L139+12
 2332 03a4 0022     		movs	r2, #0
 2333 03a6 1A70     		strb	r2, [r3]
 500:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 2334              		.loc 1 500 0
 2335 03a8 644B     		ldr	r3, .L139+16
 2336 03aa 0122     		movs	r2, #1
 2337 03ac 1A60     		str	r2, [r3]
 2338              		.loc 1 505 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 52


 2339 03ae 65E0     		b	.L135
 2340              	.L120:
 501:main.c        ****                     currentOrientation = Down;
 2341              		.loc 1 501 0
 2342 03b0 5E4B     		ldr	r3, .L139
 2343 03b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2344 03b4 1A46     		mov	r2, r3
 2345 03b6 5E4B     		ldr	r3, .L139+4
 2346 03b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2347 03ba 591E     		subs	r1, r3, #1
 2348 03bc 5D48     		ldr	r0, .L139+8
 2349 03be 1346     		mov	r3, r2
 2350 03c0 DB00     		lsls	r3, r3, #3
 2351 03c2 1344     		add	r3, r3, r2
 2352 03c4 5B00     		lsls	r3, r3, #1
 2353 03c6 1344     		add	r3, r3, r2
 2354 03c8 0B44     		add	r3, r3, r1
 2355 03ca 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2356 03ce 082B     		cmp	r3, #8
 2357 03d0 54D1     		bne	.L135
 502:main.c        ****                     directionState = TurnLeft;
 2358              		.loc 1 502 0
 2359 03d2 594B     		ldr	r3, .L139+12
 2360 03d4 0122     		movs	r2, #1
 2361 03d6 1A70     		strb	r2, [r3]
 503:main.c        ****                 }
 2362              		.loc 1 503 0
 2363 03d8 584B     		ldr	r3, .L139+16
 2364 03da 0222     		movs	r2, #2
 2365 03dc 1A60     		str	r2, [r3]
 2366              		.loc 1 505 0
 2367 03de 4DE0     		b	.L135
 2368              	.L110:
 506:main.c        ****             case Right:
 507:main.c        ****                 if(map[currentRow + 1][currentCol] == 8) {
 2369              		.loc 1 507 0
 2370 03e0 524B     		ldr	r3, .L139
 2371 03e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372 03e4 5A1C     		adds	r2, r3, #1
 2373 03e6 524B     		ldr	r3, .L139+4
 2374 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2375 03ea 1846     		mov	r0, r3
 2376 03ec 5149     		ldr	r1, .L139+8
 2377 03ee 1346     		mov	r3, r2
 2378 03f0 DB00     		lsls	r3, r3, #3
 2379 03f2 1344     		add	r3, r3, r2
 2380 03f4 5B00     		lsls	r3, r3, #1
 2381 03f6 1344     		add	r3, r3, r2
 2382 03f8 0344     		add	r3, r3, r0
 2383 03fa 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2384 03fe 082B     		cmp	r3, #8
 2385 0400 06D1     		bne	.L121
 508:main.c        ****                     currentOrientation = Right;
 2386              		.loc 1 508 0
 2387 0402 4D4B     		ldr	r3, .L139+12
 2388 0404 0322     		movs	r2, #3
 2389 0406 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 53


 509:main.c        ****                     directionState = Forward;
 2390              		.loc 1 509 0
 2391 0408 4C4B     		ldr	r3, .L139+16
 2392 040a 0022     		movs	r2, #0
 2393 040c 1A60     		str	r2, [r3]
 510:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 511:main.c        ****                     currentOrientation = Up;
 512:main.c        ****                     directionState = TurnLeft;
 513:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 514:main.c        ****                     currentOrientation = Down;
 515:main.c        ****                     directionState = TurnRight;
 516:main.c        ****                 }
 517:main.c        ****                 break;
 2394              		.loc 1 517 0
 2395 040e 37E0     		b	.L136
 2396              	.L121:
 510:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 2397              		.loc 1 510 0
 2398 0410 464B     		ldr	r3, .L139
 2399 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2400 0414 1A46     		mov	r2, r3
 2401 0416 464B     		ldr	r3, .L139+4
 2402 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2403 041a 591C     		adds	r1, r3, #1
 2404 041c 4548     		ldr	r0, .L139+8
 2405 041e 1346     		mov	r3, r2
 2406 0420 DB00     		lsls	r3, r3, #3
 2407 0422 1344     		add	r3, r3, r2
 2408 0424 5B00     		lsls	r3, r3, #1
 2409 0426 1344     		add	r3, r3, r2
 2410 0428 0B44     		add	r3, r3, r1
 2411 042a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2412 042e 082B     		cmp	r3, #8
 2413 0430 06D1     		bne	.L123
 511:main.c        ****                     directionState = TurnLeft;
 2414              		.loc 1 511 0
 2415 0432 414B     		ldr	r3, .L139+12
 2416 0434 0022     		movs	r2, #0
 2417 0436 1A70     		strb	r2, [r3]
 512:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 2418              		.loc 1 512 0
 2419 0438 404B     		ldr	r3, .L139+16
 2420 043a 0222     		movs	r2, #2
 2421 043c 1A60     		str	r2, [r3]
 2422              		.loc 1 517 0
 2423 043e 1FE0     		b	.L136
 2424              	.L123:
 513:main.c        ****                     currentOrientation = Down;
 2425              		.loc 1 513 0
 2426 0440 3A4B     		ldr	r3, .L139
 2427 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2428 0444 1A46     		mov	r2, r3
 2429 0446 3A4B     		ldr	r3, .L139+4
 2430 0448 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2431 044a 591E     		subs	r1, r3, #1
 2432 044c 3948     		ldr	r0, .L139+8
 2433 044e 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 54


 2434 0450 DB00     		lsls	r3, r3, #3
 2435 0452 1344     		add	r3, r3, r2
 2436 0454 5B00     		lsls	r3, r3, #1
 2437 0456 1344     		add	r3, r3, r2
 2438 0458 0B44     		add	r3, r3, r1
 2439 045a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2440 045e 082B     		cmp	r3, #8
 2441 0460 0ED1     		bne	.L136
 514:main.c        ****                     directionState = TurnRight;
 2442              		.loc 1 514 0
 2443 0462 354B     		ldr	r3, .L139+12
 2444 0464 0122     		movs	r2, #1
 2445 0466 1A70     		strb	r2, [r3]
 515:main.c        ****                 }
 2446              		.loc 1 515 0
 2447 0468 344B     		ldr	r3, .L139+16
 2448 046a 0122     		movs	r2, #1
 2449 046c 1A60     		str	r2, [r3]
 2450              		.loc 1 517 0
 2451 046e 07E0     		b	.L136
 2452              	.L132:
 518:main.c        ****             default:
 519:main.c        ****                 break;
 2453              		.loc 1 519 0
 2454 0470 00BF     		nop
 2455 0472 06E0     		b	.L114
 2456              	.L133:
 481:main.c        ****             case Down:
 2457              		.loc 1 481 0
 2458 0474 00BF     		nop
 2459 0476 04E0     		b	.L114
 2460              	.L134:
 493:main.c        ****             case Left:
 2461              		.loc 1 493 0
 2462 0478 00BF     		nop
 2463 047a 02E0     		b	.L114
 2464              	.L135:
 505:main.c        ****             case Right:
 2465              		.loc 1 505 0
 2466 047c 00BF     		nop
 2467 047e 00E0     		b	.L114
 2468              	.L136:
 517:main.c        ****             default:
 2469              		.loc 1 517 0
 2470 0480 00BF     		nop
 2471              	.L114:
 520:main.c        ****         }
 521:main.c        ****         return directionState;
 2472              		.loc 1 521 0
 2473 0482 2E4B     		ldr	r3, .L139+16
 2474 0484 1B68     		ldr	r3, [r3]
 2475 0486 4EE0     		b	.L93
 2476              	.L104:
 522:main.c        ****     }
 523:main.c        **** 
 524:main.c        ****     // wait for turn at end of line
 525:main.c        ****     /*if(s5 && s6 && (previousDirection == Forward || (previousDirection == AdjustToTheLeft || prev
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 55


 526:main.c        ****         directionState = waitForTurn; // need to wait to check for a black line
 527:main.c        ****         return directionState;
 528:main.c        ****     }*/
 529:main.c        ****     
 530:main.c        ****     // course correction
 531:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 2477              		.loc 1 531 0
 2478 0488 2D4B     		ldr	r3, .L139+20
 2479 048a 1B68     		ldr	r3, [r3]
 2480 048c 002B     		cmp	r3, #0
 2481 048e 07D0     		beq	.L124
 2482              		.loc 1 531 0 is_stmt 0 discriminator 1
 2483 0490 2B4B     		ldr	r3, .L139+20
 2484 0492 1B68     		ldr	r3, [r3]
 2485 0494 032B     		cmp	r3, #3
 2486 0496 03D0     		beq	.L124
 2487              		.loc 1 531 0 discriminator 2
 2488 0498 294B     		ldr	r3, .L139+20
 2489 049a 1B68     		ldr	r3, [r3]
 2490 049c 042B     		cmp	r3, #4
 2491 049e 14D1     		bne	.L125
 2492              	.L124:
 532:main.c        ****         if(s6) {
 2493              		.loc 1 532 0 is_stmt 1
 2494 04a0 284B     		ldr	r3, .L139+24
 2495 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2496 04a4 002B     		cmp	r3, #0
 2497 04a6 02D0     		beq	.L126
 533:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 2498              		.loc 1 533 0
 2499 04a8 244B     		ldr	r3, .L139+16
 2500 04aa 0322     		movs	r2, #3
 2501 04ac 1A60     		str	r2, [r3]
 2502              	.L126:
 534:main.c        ****         }
 535:main.c        ****         if(s5) {
 2503              		.loc 1 535 0
 2504 04ae 264B     		ldr	r3, .L139+28
 2505 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2506 04b2 002B     		cmp	r3, #0
 2507 04b4 02D0     		beq	.L127
 536:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 2508              		.loc 1 536 0
 2509 04b6 214B     		ldr	r3, .L139+16
 2510 04b8 0422     		movs	r2, #4
 2511 04ba 1A60     		str	r2, [r3]
 2512              	.L127:
 537:main.c        ****         }
 538:main.c        ****         previousOrientation = currentOrientation; // unchanged orientation
 2513              		.loc 1 538 0
 2514 04bc 1E4B     		ldr	r3, .L139+12
 2515 04be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2516 04c0 224B     		ldr	r3, .L139+32
 2517 04c2 1A70     		strb	r2, [r3]
 539:main.c        ****         return directionState;
 2518              		.loc 1 539 0
 2519 04c4 1D4B     		ldr	r3, .L139+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 56


 2520 04c6 1B68     		ldr	r3, [r3]
 2521 04c8 2DE0     		b	.L93
 2522              	.L125:
 540:main.c        ****     }
 541:main.c        ****     
 542:main.c        ****     // forward 1100
 543:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 2523              		.loc 1 543 0
 2524 04ca 214B     		ldr	r3, .L139+36
 2525 04cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2526 04ce 002B     		cmp	r3, #0
 2527 04d0 15D0     		beq	.L128
 2528              		.loc 1 543 0 is_stmt 0 discriminator 1
 2529 04d2 204B     		ldr	r3, .L139+40
 2530 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2531 04d6 002B     		cmp	r3, #0
 2532 04d8 11D0     		beq	.L128
 2533              		.loc 1 543 0 discriminator 2
 2534 04da 1B4B     		ldr	r3, .L139+28
 2535 04dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2536 04de 002B     		cmp	r3, #0
 2537 04e0 0DD1     		bne	.L128
 2538              		.loc 1 543 0 discriminator 3
 2539 04e2 184B     		ldr	r3, .L139+24
 2540 04e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2541 04e6 002B     		cmp	r3, #0
 2542 04e8 09D1     		bne	.L128
 544:main.c        ****         directionState = Forward;
 2543              		.loc 1 544 0 is_stmt 1
 2544 04ea 144B     		ldr	r3, .L139+16
 2545 04ec 0022     		movs	r2, #0
 2546 04ee 1A60     		str	r2, [r3]
 545:main.c        ****         previousOrientation = currentOrientation; // unchanged orientation
 2547              		.loc 1 545 0
 2548 04f0 114B     		ldr	r3, .L139+12
 2549 04f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2550 04f4 154B     		ldr	r3, .L139+32
 2551 04f6 1A70     		strb	r2, [r3]
 546:main.c        ****         return directionState;   
 2552              		.loc 1 546 0
 2553 04f8 104B     		ldr	r3, .L139+16
 2554 04fa 1B68     		ldr	r3, [r3]
 2555 04fc 13E0     		b	.L93
 2556              	.L128:
 547:main.c        ****     }
 548:main.c        ****     
 549:main.c        ****     //turn left 0111
 550:main.c        ****     /*if (!s3 && s4 && s5 && s6) {
 551:main.c        ****         directionState = TurnLeft;
 552:main.c        ****         switch(previousOrientation) {
 553:main.c        ****             case Up:
 554:main.c        ****                 currentDirection = Left;
 555:main.c        ****                 break;
 556:main.c        ****             case Down:
 557:main.c        ****                 currentDirection = Right;
 558:main.c        ****                 break;
 559:main.c        ****             case Left:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 57


 560:main.c        ****                 currentDirection = Up;
 561:main.c        ****                 break;
 562:main.c        ****             case Right:
 563:main.c        ****                 currentDirection = Down;
 564:main.c        ****                 break;
 565:main.c        ****             default:
 566:main.c        ****                 break;
 567:main.c        ****         }
 568:main.c        ****         previousDirection = currentDirection;
 569:main.c        ****         return directionState;
 570:main.c        ****     }*/
 571:main.c        ****     
 572:main.c        ****     // turn right if 1011
 573:main.c        ****     /*if (s3 && !s4 && s5 && s6) {
 574:main.c        ****         directionState = TurnRight;
 575:main.c        ****         switch(previousOrientation) {
 576:main.c        ****             case Up:
 577:main.c        ****                 currentDirection = Right;
 578:main.c        ****                 break;
 579:main.c        ****             case Down:
 580:main.c        ****                 currentDirection = Left;
 581:main.c        ****                 break;
 582:main.c        ****             case Left:
 583:main.c        ****                 currentDirection = Down;
 584:main.c        ****                 break;
 585:main.c        ****             case Right:
 586:main.c        ****                 currentDirection = Up;
 587:main.c        ****                 break;
 588:main.c        ****             default:
 589:main.c        ****                 break;
 590:main.c        ****         }
 591:main.c        ****         previousDirection = currentDirection;
 592:main.c        ****         return directionState;
 593:main.c        ****     }*/
 594:main.c        ****     
 595:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 596:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 597:main.c        ****     if (previousDirection == Unknown) {
 2557              		.loc 1 597 0
 2558 04fe 104B     		ldr	r3, .L139+20
 2559 0500 1B68     		ldr	r3, [r3]
 2560 0502 062B     		cmp	r3, #6
 2561 0504 09D1     		bne	.L129
 598:main.c        ****         directionState = Forward;
 2562              		.loc 1 598 0
 2563 0506 0D4B     		ldr	r3, .L139+16
 2564 0508 0022     		movs	r2, #0
 2565 050a 1A60     		str	r2, [r3]
 599:main.c        ****         previousDirection = currentDirection;
 2566              		.loc 1 599 0
 2567 050c 124B     		ldr	r3, .L139+44
 2568 050e 1B68     		ldr	r3, [r3]
 2569 0510 0B4A     		ldr	r2, .L139+20
 2570 0512 1360     		str	r3, [r2]
 600:main.c        ****         return directionState;
 2571              		.loc 1 600 0
 2572 0514 094B     		ldr	r3, .L139+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 58


 2573 0516 1B68     		ldr	r3, [r3]
 2574 0518 05E0     		b	.L93
 2575              	.L129:
 601:main.c        ****     }
 602:main.c        ****     
 603:main.c        ****     // Possible reason
 604:main.c        ****     previousDirection = currentDirection;
 2576              		.loc 1 604 0
 2577 051a 0F4B     		ldr	r3, .L139+44
 2578 051c 1B68     		ldr	r3, [r3]
 2579 051e 084A     		ldr	r2, .L139+20
 2580 0520 1360     		str	r3, [r2]
 605:main.c        ****     return previousDirection;
 2581              		.loc 1 605 0
 2582 0522 074B     		ldr	r3, .L139+20
 2583 0524 1B68     		ldr	r3, [r3]
 2584              	.L93:
 606:main.c        **** }
 2585              		.loc 1 606 0
 2586 0526 1846     		mov	r0, r3
 2587 0528 80BD     		pop	{r7, pc}
 2588              	.L140:
 2589 052a 00BF     		.align	2
 2590              	.L139:
 2591 052c 00000000 		.word	currentRow
 2592 0530 00000000 		.word	currentCol
 2593 0534 44000000 		.word	map
 2594 0538 00000000 		.word	currentOrientation
 2595 053c 00000000 		.word	directionState
 2596 0540 00000000 		.word	previousDirection
 2597 0544 00000000 		.word	s6
 2598 0548 00000000 		.word	s5
 2599 054c 00000000 		.word	previousOrientation
 2600 0550 00000000 		.word	s3
 2601 0554 00000000 		.word	s4
 2602 0558 00000000 		.word	currentDirection
 2603              		.cfi_endproc
 2604              	.LFE74:
 2605              		.size	CheckSensorDirection, .-CheckSensorDirection
 2606              		.section	.text.SetRobotMovement,"ax",%progbits
 2607              		.align	2
 2608              		.global	SetRobotMovement
 2609              		.thumb
 2610              		.thumb_func
 2611              		.type	SetRobotMovement, %function
 2612              	SetRobotMovement:
 2613              	.LFB75:
 607:main.c        **** 
 608:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 609:main.c        **** void SetRobotMovement() {
 2614              		.loc 1 609 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 1, uses_anonymous_args = 0
 2618 0000 80B5     		push	{r7, lr}
 2619              		.cfi_def_cfa_offset 8
 2620              		.cfi_offset 7, -8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 59


 2621              		.cfi_offset 14, -4
 2622 0002 00AF     		add	r7, sp, #0
 2623              		.cfi_def_cfa_register 7
 610:main.c        ****     currentDirection = getDirection();   
 2624              		.loc 1 610 0
 2625 0004 FFF7FEFF 		bl	getDirection
 2626 0008 0246     		mov	r2, r0
 2627 000a 1E4B     		ldr	r3, .L157
 2628 000c 1A60     		str	r2, [r3]
 611:main.c        ****     
 612:main.c        ****     switch (currentDirection) {
 2629              		.loc 1 612 0
 2630 000e 1D4B     		ldr	r3, .L157
 2631 0010 1B68     		ldr	r3, [r3]
 2632 0012 0A2B     		cmp	r3, #10
 2633 0014 34D8     		bhi	.L155
 2634 0016 01A2     		adr	r2, .L144
 2635 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2636              		.p2align 2
 2637              	.L144:
 2638 001c 49000000 		.word	.L143+1
 2639 0020 4F000000 		.word	.L145+1
 2640 0024 55000000 		.word	.L146+1
 2641 0028 61000000 		.word	.L147+1
 2642 002c 5B000000 		.word	.L148+1
 2643 0030 67000000 		.word	.L149+1
 2644 0034 7F000000 		.word	.L156+1
 2645 0038 7F000000 		.word	.L156+1
 2646 003c 6D000000 		.word	.L152+1
 2647 0040 73000000 		.word	.L153+1
 2648 0044 79000000 		.word	.L154+1
 2649              		.p2align 1
 2650              	.L143:
 613:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 614:main.c        ****         case Forward:
 615:main.c        ****             moveForward();
 2651              		.loc 1 615 0
 2652 0048 FFF7FEFF 		bl	moveForward
 616:main.c        ****             break;
 2653              		.loc 1 616 0
 2654 004c 18E0     		b	.L142
 2655              	.L145:
 617:main.c        ****         case TurnRight:
 618:main.c        ****             turnRight();
 2656              		.loc 1 618 0
 2657 004e FFF7FEFF 		bl	turnRight
 619:main.c        ****             break;
 2658              		.loc 1 619 0
 2659 0052 15E0     		b	.L142
 2660              	.L146:
 620:main.c        ****         case TurnLeft:
 621:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2661              		.loc 1 621 0
 2662 0054 FFF7FEFF 		bl	turnLeft
 622:main.c        ****             break;
 2663              		.loc 1 622 0
 2664 0058 12E0     		b	.L142
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 60


 2665              	.L148:
 623:main.c        ****         case AdjustToTheRight:
 624:main.c        ****             adjustRight();
 2666              		.loc 1 624 0
 2667 005a FFF7FEFF 		bl	adjustRight
 625:main.c        ****             break;
 2668              		.loc 1 625 0
 2669 005e 0FE0     		b	.L142
 2670              	.L147:
 626:main.c        ****         case AdjustToTheLeft:
 627:main.c        ****             adjustLeft();
 2671              		.loc 1 627 0
 2672 0060 FFF7FEFF 		bl	adjustLeft
 628:main.c        ****             break;
 2673              		.loc 1 628 0
 2674 0064 0CE0     		b	.L142
 2675              	.L149:
 629:main.c        ****         case Stop:
 630:main.c        ****             stopMoving();
 2676              		.loc 1 630 0
 2677 0066 FFF7FEFF 		bl	stopMoving
 631:main.c        ****             break;
 2678              		.loc 1 631 0
 2679 006a 09E0     		b	.L142
 2680              	.L152:
 632:main.c        ****         case HardForward:
 633:main.c        ****             break;
 634:main.c        ****         case waitForTurn:
 635:main.c        ****             moveForward(); 
 2681              		.loc 1 635 0
 2682 006c FFF7FEFF 		bl	moveForward
 636:main.c        ****             break;
 2683              		.loc 1 636 0
 2684 0070 06E0     		b	.L142
 2685              	.L153:
 637:main.c        ****         case ForwardAfterTurn:
 638:main.c        ****             moveForward();
 2686              		.loc 1 638 0
 2687 0072 FFF7FEFF 		bl	moveForward
 639:main.c        ****             break;
 2688              		.loc 1 639 0
 2689 0076 03E0     		b	.L142
 2690              	.L154:
 640:main.c        ****         case Backward:
 641:main.c        ****             moveBackward();
 2691              		.loc 1 641 0
 2692 0078 FFF7FEFF 		bl	moveBackward
 642:main.c        ****             break;
 2693              		.loc 1 642 0
 2694 007c 00E0     		b	.L142
 2695              	.L156:
 643:main.c        ****         case Unknown:
 644:main.c        ****             // UNKNOWN CONFIGURATION
 645:main.c        ****             break;  
 2696              		.loc 1 645 0
 2697 007e 00BF     		nop
 2698              	.L142:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 61


 2699              	.L155:
 646:main.c        ****     }
 647:main.c        **** }
 2700              		.loc 1 647 0
 2701 0080 00BF     		nop
 2702 0082 80BD     		pop	{r7, pc}
 2703              	.L158:
 2704              		.align	2
 2705              	.L157:
 2706 0084 00000000 		.word	currentDirection
 2707              		.cfi_endproc
 2708              	.LFE75:
 2709              		.size	SetRobotMovement, .-SetRobotMovement
 2710              		.text
 2711              	.Letext0:
 2712              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2713              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2714              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2715              		.file 5 "vars.h"
 2716              		.file 6 "map.h"
 2717              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2718              		.section	.debug_info,"",%progbits
 2719              	.Ldebug_info0:
 2720 0000 A6060000 		.4byte	0x6a6
 2721 0004 0400     		.2byte	0x4
 2722 0006 00000000 		.4byte	.Ldebug_abbrev0
 2723 000a 04       		.byte	0x4
 2724 000b 01       		.uleb128 0x1
 2725 000c 0C000000 		.4byte	.LASF101
 2726 0010 0C       		.byte	0xc
 2727 0011 7B040000 		.4byte	.LASF102
 2728 0015 C2030000 		.4byte	.LASF103
 2729 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2730 001d 00000000 		.4byte	0
 2731 0021 00000000 		.4byte	.Ldebug_line0
 2732 0025 02       		.uleb128 0x2
 2733 0026 01       		.byte	0x1
 2734 0027 06       		.byte	0x6
 2735 0028 EA020000 		.4byte	.LASF0
 2736 002c 02       		.uleb128 0x2
 2737 002d 01       		.byte	0x1
 2738 002e 08       		.byte	0x8
 2739 002f 87020000 		.4byte	.LASF1
 2740 0033 02       		.uleb128 0x2
 2741 0034 02       		.byte	0x2
 2742 0035 05       		.byte	0x5
 2743 0036 FF000000 		.4byte	.LASF2
 2744 003a 02       		.uleb128 0x2
 2745 003b 02       		.byte	0x2
 2746 003c 07       		.byte	0x7
 2747 003d 7E030000 		.4byte	.LASF3
 2748 0041 03       		.uleb128 0x3
 2749 0042 DD040000 		.4byte	.LASF11
 2750 0046 02       		.byte	0x2
 2751 0047 3F       		.byte	0x3f
 2752 0048 4C000000 		.4byte	0x4c
 2753 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 62


 2754 004d 04       		.byte	0x4
 2755 004e 05       		.byte	0x5
 2756 004f B1030000 		.4byte	.LASF4
 2757 0053 02       		.uleb128 0x2
 2758 0054 04       		.byte	0x4
 2759 0055 07       		.byte	0x7
 2760 0056 82040000 		.4byte	.LASF5
 2761 005a 02       		.uleb128 0x2
 2762 005b 08       		.byte	0x8
 2763 005c 05       		.byte	0x5
 2764 005d E2010000 		.4byte	.LASF6
 2765 0061 02       		.uleb128 0x2
 2766 0062 08       		.byte	0x8
 2767 0063 07       		.byte	0x7
 2768 0064 FE020000 		.4byte	.LASF7
 2769 0068 04       		.uleb128 0x4
 2770 0069 04       		.byte	0x4
 2771 006a 05       		.byte	0x5
 2772 006b 696E7400 		.ascii	"int\000"
 2773 006f 02       		.uleb128 0x2
 2774 0070 04       		.byte	0x4
 2775 0071 07       		.byte	0x7
 2776 0072 26030000 		.4byte	.LASF8
 2777 0076 02       		.uleb128 0x2
 2778 0077 04       		.byte	0x4
 2779 0078 07       		.byte	0x7
 2780 0079 16010000 		.4byte	.LASF9
 2781 007d 02       		.uleb128 0x2
 2782 007e 01       		.byte	0x1
 2783 007f 08       		.byte	0x8
 2784 0080 AC030000 		.4byte	.LASF10
 2785 0084 03       		.uleb128 0x3
 2786 0085 F6020000 		.4byte	.LASF12
 2787 0089 03       		.byte	0x3
 2788 008a 2C       		.byte	0x2c
 2789 008b 41000000 		.4byte	0x41
 2790 008f 05       		.uleb128 0x5
 2791 0090 B2010000 		.4byte	.LASF13
 2792 0094 04       		.byte	0x4
 2793 0095 E701     		.2byte	0x1e7
 2794 0097 2C000000 		.4byte	0x2c
 2795 009b 05       		.uleb128 0x5
 2796 009c 66040000 		.4byte	.LASF14
 2797 00a0 04       		.byte	0x4
 2798 00a1 E801     		.2byte	0x1e8
 2799 00a3 3A000000 		.4byte	0x3a
 2800 00a7 05       		.uleb128 0x5
 2801 00a8 74040000 		.4byte	.LASF15
 2802 00ac 04       		.byte	0x4
 2803 00ad E901     		.2byte	0x1e9
 2804 00af 53000000 		.4byte	0x53
 2805 00b3 05       		.uleb128 0x5
 2806 00b4 F0010000 		.4byte	.LASF16
 2807 00b8 04       		.byte	0x4
 2808 00b9 EA01     		.2byte	0x1ea
 2809 00bb 25000000 		.4byte	0x25
 2810 00bf 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 63


 2811 00c0 A0010000 		.4byte	.LASF17
 2812 00c4 04       		.byte	0x4
 2813 00c5 EB01     		.2byte	0x1eb
 2814 00c7 33000000 		.4byte	0x33
 2815 00cb 02       		.uleb128 0x2
 2816 00cc 04       		.byte	0x4
 2817 00cd 04       		.byte	0x4
 2818 00ce CA010000 		.4byte	.LASF18
 2819 00d2 02       		.uleb128 0x2
 2820 00d3 08       		.byte	0x8
 2821 00d4 04       		.byte	0x4
 2822 00d5 9D040000 		.4byte	.LASF19
 2823 00d9 06       		.uleb128 0x6
 2824 00da 91030000 		.4byte	.LASF104
 2825 00de 20       		.byte	0x20
 2826 00df 05       		.byte	0x5
 2827 00e0 28       		.byte	0x28
 2828 00e1 B2010000 		.4byte	0x1b2
 2829 00e5 07       		.uleb128 0x7
 2830 00e6 84050000 		.4byte	.LASF20
 2831 00ea 05       		.byte	0x5
 2832 00eb 2A       		.byte	0x2a
 2833 00ec B3000000 		.4byte	0xb3
 2834 00f0 00       		.byte	0
 2835 00f1 07       		.uleb128 0x7
 2836 00f2 8F010000 		.4byte	.LASF21
 2837 00f6 05       		.byte	0x5
 2838 00f7 2B       		.byte	0x2b
 2839 00f8 8F000000 		.4byte	0x8f
 2840 00fc 01       		.byte	0x1
 2841 00fd 07       		.uleb128 0x7
 2842 00fe 51040000 		.4byte	.LASF22
 2843 0102 05       		.byte	0x5
 2844 0103 2C       		.byte	0x2c
 2845 0104 BF000000 		.4byte	0xbf
 2846 0108 02       		.byte	0x2
 2847 0109 07       		.uleb128 0x7
 2848 010a 34050000 		.4byte	.LASF23
 2849 010e 05       		.byte	0x5
 2850 010f 2D       		.byte	0x2d
 2851 0110 BF000000 		.4byte	0xbf
 2852 0114 04       		.byte	0x4
 2853 0115 07       		.uleb128 0x7
 2854 0116 89050000 		.4byte	.LASF24
 2855 011a 05       		.byte	0x5
 2856 011b 2E       		.byte	0x2e
 2857 011c BF000000 		.4byte	0xbf
 2858 0120 06       		.byte	0x6
 2859 0121 07       		.uleb128 0x7
 2860 0122 19020000 		.4byte	.LASF25
 2861 0126 05       		.byte	0x5
 2862 0127 2F       		.byte	0x2f
 2863 0128 BF000000 		.4byte	0xbf
 2864 012c 08       		.byte	0x8
 2865 012d 07       		.uleb128 0x7
 2866 012e EC040000 		.4byte	.LASF26
 2867 0132 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 64


 2868 0133 30       		.byte	0x30
 2869 0134 BF000000 		.4byte	0xbf
 2870 0138 0A       		.byte	0xa
 2871 0139 07       		.uleb128 0x7
 2872 013a CA020000 		.4byte	.LASF27
 2873 013e 05       		.byte	0x5
 2874 013f 31       		.byte	0x31
 2875 0140 BF000000 		.4byte	0xbf
 2876 0144 0C       		.byte	0xc
 2877 0145 07       		.uleb128 0x7
 2878 0146 0C020000 		.4byte	.LASF28
 2879 014a 05       		.byte	0x5
 2880 014b 32       		.byte	0x32
 2881 014c BF000000 		.4byte	0xbf
 2882 0150 0E       		.byte	0xe
 2883 0151 07       		.uleb128 0x7
 2884 0152 E2020000 		.4byte	.LASF29
 2885 0156 05       		.byte	0x5
 2886 0157 33       		.byte	0x33
 2887 0158 BF000000 		.4byte	0xbf
 2888 015c 10       		.byte	0x10
 2889 015d 07       		.uleb128 0x7
 2890 015e 7F020000 		.4byte	.LASF30
 2891 0162 05       		.byte	0x5
 2892 0163 34       		.byte	0x34
 2893 0164 BF000000 		.4byte	0xbf
 2894 0168 12       		.byte	0x12
 2895 0169 07       		.uleb128 0x7
 2896 016a 3A040000 		.4byte	.LASF31
 2897 016e 05       		.byte	0x5
 2898 016f 35       		.byte	0x35
 2899 0170 BF000000 		.4byte	0xbf
 2900 0174 14       		.byte	0x14
 2901 0175 07       		.uleb128 0x7
 2902 0176 B8010000 		.4byte	.LASF32
 2903 017a 05       		.byte	0x5
 2904 017b 36       		.byte	0x36
 2905 017c BF000000 		.4byte	0xbf
 2906 0180 16       		.byte	0x16
 2907 0181 07       		.uleb128 0x7
 2908 0182 F7000000 		.4byte	.LASF33
 2909 0186 05       		.byte	0x5
 2910 0187 37       		.byte	0x37
 2911 0188 BF000000 		.4byte	0xbf
 2912 018c 18       		.byte	0x18
 2913 018d 07       		.uleb128 0x7
 2914 018e 04020000 		.4byte	.LASF34
 2915 0192 05       		.byte	0x5
 2916 0193 38       		.byte	0x38
 2917 0194 BF000000 		.4byte	0xbf
 2918 0198 1A       		.byte	0x1a
 2919 0199 07       		.uleb128 0x7
 2920 019a 69030000 		.4byte	.LASF35
 2921 019e 05       		.byte	0x5
 2922 019f 39       		.byte	0x39
 2923 01a0 BF000000 		.4byte	0xbf
 2924 01a4 1C       		.byte	0x1c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 65


 2925 01a5 07       		.uleb128 0x7
 2926 01a6 2D040000 		.4byte	.LASF36
 2927 01aa 05       		.byte	0x5
 2928 01ab 3A       		.byte	0x3a
 2929 01ac BF000000 		.4byte	0xbf
 2930 01b0 1E       		.byte	0x1e
 2931 01b1 00       		.byte	0
 2932 01b2 08       		.uleb128 0x8
 2933 01b3 2A010000 		.4byte	.LASF48
 2934 01b7 04       		.byte	0x4
 2935 01b8 6F000000 		.4byte	0x6f
 2936 01bc 01       		.byte	0x1
 2937 01bd 28       		.byte	0x28
 2938 01be 05020000 		.4byte	0x205
 2939 01c2 09       		.uleb128 0x9
 2940 01c3 BA030000 		.4byte	.LASF37
 2941 01c7 00       		.byte	0
 2942 01c8 09       		.uleb128 0x9
 2943 01c9 5C040000 		.4byte	.LASF38
 2944 01cd 01       		.byte	0x1
 2945 01ce 09       		.uleb128 0x9
 2946 01cf A3000000 		.4byte	.LASF39
 2947 01d3 02       		.byte	0x2
 2948 01d4 09       		.uleb128 0x9
 2949 01d5 69010000 		.4byte	.LASF40
 2950 01d9 03       		.byte	0x3
 2951 01da 09       		.uleb128 0x9
 2952 01db 15030000 		.4byte	.LASF41
 2953 01df 04       		.byte	0x4
 2954 01e0 09       		.uleb128 0x9
 2955 01e1 E7040000 		.4byte	.LASF42
 2956 01e5 05       		.byte	0x5
 2957 01e6 09       		.uleb128 0x9
 2958 01e7 A4040000 		.4byte	.LASF43
 2959 01eb 06       		.byte	0x6
 2960 01ec 09       		.uleb128 0x9
 2961 01ed A6010000 		.4byte	.LASF44
 2962 01f1 07       		.byte	0x7
 2963 01f2 09       		.uleb128 0x9
 2964 01f3 DD000000 		.4byte	.LASF45
 2965 01f7 08       		.byte	0x8
 2966 01f8 09       		.uleb128 0x9
 2967 01f9 C0000000 		.4byte	.LASF46
 2968 01fd 09       		.byte	0x9
 2969 01fe 09       		.uleb128 0x9
 2970 01ff 94040000 		.4byte	.LASF47
 2971 0203 0A       		.byte	0xa
 2972 0204 00       		.byte	0
 2973 0205 08       		.uleb128 0x8
 2974 0206 21040000 		.4byte	.LASF49
 2975 020a 01       		.byte	0x1
 2976 020b 2C000000 		.4byte	0x2c
 2977 020f 01       		.byte	0x1
 2978 0210 2C       		.byte	0x2c
 2979 0211 2D020000 		.4byte	0x22d
 2980 0215 0A       		.uleb128 0xa
 2981 0216 557000   		.ascii	"Up\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 66


 2982 0219 00       		.byte	0
 2983 021a 09       		.uleb128 0x9
 2984 021b 5F050000 		.4byte	.LASF50
 2985 021f 01       		.byte	0x1
 2986 0220 09       		.uleb128 0x9
 2987 0221 35020000 		.4byte	.LASF51
 2988 0225 02       		.byte	0x2
 2989 0226 09       		.uleb128 0x9
 2990 0227 D0010000 		.4byte	.LASF52
 2991 022b 03       		.byte	0x3
 2992 022c 00       		.byte	0
 2993 022d 0B       		.uleb128 0xb
 2994 022e 95010000 		.4byte	.LASF105
 2995 0232 01       		.byte	0x1
 2996 0233 3D       		.byte	0x3d
 2997 0234 00000000 		.4byte	.LFB64
 2998 0238 EC000000 		.4byte	.LFE64-.LFB64
 2999 023c 01       		.uleb128 0x1
 3000 023d 9C       		.byte	0x9c
 3001 023e 5B020000 		.4byte	0x25b
 3002 0242 0C       		.uleb128 0xc
 3003 0243 50000000 		.4byte	.LBB2
 3004 0247 62000000 		.4byte	.LBE2-.LBB2
 3005 024b 0D       		.uleb128 0xd
 3006 024c D6010000 		.4byte	.LASF59
 3007 0250 01       		.byte	0x1
 3008 0251 4A       		.byte	0x4a
 3009 0252 CB000000 		.4byte	0xcb
 3010 0256 02       		.uleb128 0x2
 3011 0257 91       		.byte	0x91
 3012 0258 6C       		.sleb128 -20
 3013 0259 00       		.byte	0
 3014 025a 00       		.byte	0
 3015 025b 0E       		.uleb128 0xe
 3016 025c B6040000 		.4byte	.LASF53
 3017 0260 01       		.byte	0x1
 3018 0261 54       		.byte	0x54
 3019 0262 00000000 		.4byte	.LFB65
 3020 0266 18000000 		.4byte	.LFE65-.LFB65
 3021 026a 01       		.uleb128 0x1
 3022 026b 9C       		.byte	0x9c
 3023 026c 0E       		.uleb128 0xe
 3024 026d 5D010000 		.4byte	.LASF54
 3025 0271 01       		.byte	0x1
 3026 0272 5A       		.byte	0x5a
 3027 0273 00000000 		.4byte	.LFB66
 3028 0277 18000000 		.4byte	.LFE66-.LFB66
 3029 027b 01       		.uleb128 0x1
 3030 027c 9C       		.byte	0x9c
 3031 027d 0E       		.uleb128 0xe
 3032 027e 72030000 		.4byte	.LASF55
 3033 0282 01       		.byte	0x1
 3034 0283 60       		.byte	0x60
 3035 0284 00000000 		.4byte	.LFB67
 3036 0288 18000000 		.4byte	.LFE67-.LFB67
 3037 028c 01       		.uleb128 0x1
 3038 028d 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 67


 3039 028e 0E       		.uleb128 0xe
 3040 028f 00000000 		.4byte	.LASF56
 3041 0293 01       		.byte	0x1
 3042 0294 66       		.byte	0x66
 3043 0295 00000000 		.4byte	.LFB68
 3044 0299 18000000 		.4byte	.LFE68-.LFB68
 3045 029d 01       		.uleb128 0x1
 3046 029e 9C       		.byte	0x9c
 3047 029f 0F       		.uleb128 0xf
 3048 02a0 5C030000 		.4byte	.LASF57
 3049 02a4 01       		.byte	0x1
 3050 02a5 6C       		.byte	0x6c
 3051 02a6 00000000 		.4byte	.LFB69
 3052 02aa 38000000 		.4byte	.LFE69-.LFB69
 3053 02ae 01       		.uleb128 0x1
 3054 02af 9C       		.byte	0x9c
 3055 02b0 10       		.uleb128 0x10
 3056 02b1 4D010000 		.4byte	.LASF58
 3057 02b5 01       		.byte	0x1
 3058 02b6 79       		.byte	0x79
 3059 02b7 68000000 		.4byte	0x68
 3060 02bb 00000000 		.4byte	.LFB70
 3061 02bf 9C000000 		.4byte	.LFE70-.LFB70
 3062 02c3 01       		.uleb128 0x1
 3063 02c4 9C       		.byte	0x9c
 3064 02c5 11       		.uleb128 0x11
 3065 02c6 09050000 		.4byte	.LASF106
 3066 02ca 01       		.byte	0x1
 3067 02cb B0       		.byte	0xb0
 3068 02cc BF000000 		.4byte	0xbf
 3069 02d0 00000000 		.4byte	.LFB71
 3070 02d4 54000000 		.4byte	.LFE71-.LFB71
 3071 02d8 01       		.uleb128 0x1
 3072 02d9 9C       		.byte	0x9c
 3073 02da 09030000 		.4byte	0x309
 3074 02de 12       		.uleb128 0x12
 3075 02df CB040000 		.4byte	.LASF107
 3076 02e3 01       		.byte	0x1
 3077 02e4 B0       		.byte	0xb0
 3078 02e5 9B000000 		.4byte	0x9b
 3079 02e9 02       		.uleb128 0x2
 3080 02ea 91       		.byte	0x91
 3081 02eb 66       		.sleb128 -26
 3082 02ec 13       		.uleb128 0x13
 3083 02ed 63707300 		.ascii	"cps\000"
 3084 02f1 01       		.byte	0x1
 3085 02f2 B2       		.byte	0xb2
 3086 02f3 CB000000 		.4byte	0xcb
 3087 02f7 02       		.uleb128 0x2
 3088 02f8 91       		.byte	0x91
 3089 02f9 6C       		.sleb128 -20
 3090 02fa 13       		.uleb128 0x13
 3091 02fb 72706D00 		.ascii	"rpm\000"
 3092 02ff 01       		.byte	0x1
 3093 0300 B3       		.byte	0xb3
 3094 0301 BF000000 		.4byte	0xbf
 3095 0305 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 68


 3096 0306 91       		.byte	0x91
 3097 0307 6A       		.sleb128 -22
 3098 0308 00       		.byte	0
 3099 0309 14       		.uleb128 0x14
 3100 030a 9B030000 		.4byte	.LASF62
 3101 030e 01       		.byte	0x1
 3102 030f BB       		.byte	0xbb
 3103 0310 00000000 		.4byte	.LFB72
 3104 0314 48000000 		.4byte	.LFE72-.LFB72
 3105 0318 01       		.uleb128 0x1
 3106 0319 9C       		.byte	0x9c
 3107 031a 10       		.uleb128 0x10
 3108 031b AC000000 		.4byte	.LASF60
 3109 031f 01       		.byte	0x1
 3110 0320 CF       		.byte	0xcf
 3111 0321 B2010000 		.4byte	0x1b2
 3112 0325 00000000 		.4byte	.LFB73
 3113 0329 60040000 		.4byte	.LFE73-.LFB73
 3114 032d 01       		.uleb128 0x1
 3115 032e 9C       		.byte	0x9c
 3116 032f 15       		.uleb128 0x15
 3117 0330 3A020000 		.4byte	.LASF61
 3118 0334 01       		.byte	0x1
 3119 0335 7501     		.2byte	0x175
 3120 0337 B2010000 		.4byte	0x1b2
 3121 033b 00000000 		.4byte	.LFB74
 3122 033f 5C050000 		.4byte	.LFE74-.LFB74
 3123 0343 01       		.uleb128 0x1
 3124 0344 9C       		.byte	0x9c
 3125 0345 16       		.uleb128 0x16
 3126 0346 4B030000 		.4byte	.LASF63
 3127 034a 01       		.byte	0x1
 3128 034b 6102     		.2byte	0x261
 3129 034d 00000000 		.4byte	.LFB75
 3130 0351 88000000 		.4byte	.LFE75-.LFB75
 3131 0355 01       		.uleb128 0x1
 3132 0356 9C       		.byte	0x9c
 3133 0357 17       		.uleb128 0x17
 3134 0358 68000000 		.4byte	0x68
 3135 035c 6D030000 		.4byte	0x36d
 3136 0360 18       		.uleb128 0x18
 3137 0361 76000000 		.4byte	0x76
 3138 0365 0E       		.byte	0xe
 3139 0366 18       		.uleb128 0x18
 3140 0367 76000000 		.4byte	0x76
 3141 036b 12       		.byte	0x12
 3142 036c 00       		.byte	0
 3143 036d 13       		.uleb128 0x13
 3144 036e 6D617000 		.ascii	"map\000"
 3145 0372 06       		.byte	0x6
 3146 0373 14       		.byte	0x14
 3147 0374 57030000 		.4byte	0x357
 3148 0378 05       		.uleb128 0x5
 3149 0379 03       		.byte	0x3
 3150 037a 44000000 		.4byte	map
 3151 037e 17       		.uleb128 0x17
 3152 037f 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 69


 3153 0383 94030000 		.4byte	0x394
 3154 0387 18       		.uleb128 0x18
 3155 0388 76000000 		.4byte	0x76
 3156 038c 04       		.byte	0x4
 3157 038d 18       		.uleb128 0x18
 3158 038e 76000000 		.4byte	0x76
 3159 0392 01       		.byte	0x1
 3160 0393 00       		.byte	0
 3161 0394 0D       		.uleb128 0xd
 3162 0395 AC040000 		.4byte	.LASF64
 3163 0399 06       		.byte	0x6
 3164 039a 26       		.byte	0x26
 3165 039b 7E030000 		.4byte	0x37e
 3166 039f 05       		.uleb128 0x5
 3167 03a0 03       		.byte	0x3
 3168 03a1 B8040000 		.4byte	food_list
 3169 03a5 19       		.uleb128 0x19
 3170 03a6 3F050000 		.4byte	.LASF65
 3171 03aa 07       		.byte	0x7
 3172 03ab 1207     		.2byte	0x712
 3173 03ad B1030000 		.4byte	0x3b1
 3174 03b1 1A       		.uleb128 0x1a
 3175 03b2 84000000 		.4byte	0x84
 3176 03b6 1B       		.uleb128 0x1b
 3177 03b7 747300   		.ascii	"ts\000"
 3178 03ba 05       		.byte	0x5
 3179 03bb 10       		.byte	0x10
 3180 03bc 8F000000 		.4byte	0x8f
 3181 03c0 05       		.uleb128 0x5
 3182 03c1 03       		.byte	0x3
 3183 03c2 00000000 		.4byte	ts
 3184 03c6 1C       		.uleb128 0x1c
 3185 03c7 B9000000 		.4byte	.LASF66
 3186 03cb 05       		.byte	0x5
 3187 03cc 11       		.byte	0x11
 3188 03cd 9B000000 		.4byte	0x9b
 3189 03d1 05       		.uleb128 0x5
 3190 03d2 03       		.byte	0x3
 3191 03d3 00000000 		.4byte	ts_enc
 3192 03d7 1C       		.uleb128 0x1c
 3193 03d8 FF040000 		.4byte	.LASF67
 3194 03dc 05       		.byte	0x5
 3195 03dd 12       		.byte	0x12
 3196 03de 9B000000 		.4byte	0x9b
 3197 03e2 05       		.uleb128 0x5
 3198 03e3 03       		.byte	0x3
 3199 03e4 00000000 		.4byte	ts_update
 3200 03e8 1C       		.uleb128 0x1c
 3201 03e9 C2040000 		.4byte	.LASF68
 3202 03ed 05       		.byte	0x5
 3203 03ee 13       		.byte	0x13
 3204 03ef 9B000000 		.4byte	0x9b
 3205 03f3 05       		.uleb128 0x5
 3206 03f4 03       		.byte	0x3
 3207 03f5 00000000 		.4byte	ts_speed
 3208 03f9 1C       		.uleb128 0x1c
 3209 03fa F4040000 		.4byte	.LASF69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 70


 3210 03fe 05       		.byte	0x5
 3211 03ff 14       		.byte	0x14
 3212 0400 9B000000 		.4byte	0x9b
 3213 0404 05       		.uleb128 0x5
 3214 0405 03       		.byte	0x3
 3215 0406 00000000 		.4byte	ts_display
 3216 040a 1C       		.uleb128 0x1c
 3217 040b D1040000 		.4byte	.LASF70
 3218 040f 05       		.byte	0x5
 3219 0410 16       		.byte	0x16
 3220 0411 8F000000 		.4byte	0x8f
 3221 0415 05       		.uleb128 0x5
 3222 0416 03       		.byte	0x3
 3223 0417 00000000 		.4byte	flag_ts_enc
 3224 041b 1C       		.uleb128 0x1c
 3225 041c F5010000 		.4byte	.LASF71
 3226 0420 05       		.byte	0x5
 3227 0421 17       		.byte	0x17
 3228 0422 8F000000 		.4byte	0x8f
 3229 0426 05       		.uleb128 0x5
 3230 0427 03       		.byte	0x3
 3231 0428 00000000 		.4byte	flag_ts_update
 3232 042c 1C       		.uleb128 0x1c
 3233 042d E9000000 		.4byte	.LASF72
 3234 0431 05       		.byte	0x5
 3235 0432 18       		.byte	0x18
 3236 0433 8F000000 		.4byte	0x8f
 3237 0437 05       		.uleb128 0x5
 3238 0438 03       		.byte	0x3
 3239 0439 00000000 		.4byte	flag_ts_speed
 3240 043d 1C       		.uleb128 0x1c
 3241 043e 4F020000 		.4byte	.LASF73
 3242 0442 05       		.byte	0x5
 3243 0443 19       		.byte	0x19
 3244 0444 8F000000 		.4byte	0x8f
 3245 0448 05       		.uleb128 0x5
 3246 0449 03       		.byte	0x3
 3247 044a 00000000 		.4byte	flag_ts_display
 3248 044e 1C       		.uleb128 0x1c
 3249 044f 5F020000 		.4byte	.LASF74
 3250 0453 05       		.byte	0x5
 3251 0454 1B       		.byte	0x1b
 3252 0455 8F000000 		.4byte	0x8f
 3253 0459 05       		.uleb128 0x5
 3254 045a 03       		.byte	0x3
 3255 045b 00000000 		.4byte	flag_rx
 3256 045f 1C       		.uleb128 0x1c
 3257 0460 D1000000 		.4byte	.LASF75
 3258 0464 05       		.byte	0x5
 3259 0465 1C       		.byte	0x1c
 3260 0466 8F000000 		.4byte	0x8f
 3261 046a 05       		.uleb128 0x5
 3262 046b 03       		.byte	0x3
 3263 046c 00000000 		.4byte	flag_packet
 3264 0470 1C       		.uleb128 0x1c
 3265 0471 3C030000 		.4byte	.LASF76
 3266 0475 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 71


 3267 0476 1D       		.byte	0x1d
 3268 0477 8F000000 		.4byte	0x8f
 3269 047b 05       		.uleb128 0x5
 3270 047c 03       		.byte	0x3
 3271 047d 00000000 		.4byte	flag_KB_string
 3272 0481 1C       		.uleb128 0x1c
 3273 0482 D3020000 		.4byte	.LASF77
 3274 0486 05       		.byte	0x5
 3275 0487 1F       		.byte	0x1f
 3276 0488 8F000000 		.4byte	0x8f
 3277 048c 05       		.uleb128 0x5
 3278 048d 03       		.byte	0x3
 3279 048e 00000000 		.4byte	dataready_flag
 3280 0492 1C       		.uleb128 0x1c
 3281 0493 18050000 		.4byte	.LASF78
 3282 0497 05       		.byte	0x5
 3283 0498 21       		.byte	0x21
 3284 0499 8F000000 		.4byte	0x8f
 3285 049d 05       		.uleb128 0x5
 3286 049e 03       		.byte	0x3
 3287 049f 00000000 		.4byte	flag_rf_transmission_active
 3288 04a3 17       		.uleb128 0x17
 3289 04a4 7D000000 		.4byte	0x7d
 3290 04a8 B3040000 		.4byte	0x4b3
 3291 04ac 18       		.uleb128 0x18
 3292 04ad 76000000 		.4byte	0x76
 3293 04b1 3F       		.byte	0x3f
 3294 04b2 00       		.byte	0
 3295 04b3 1C       		.uleb128 0x1c
 3296 04b4 43040000 		.4byte	.LASF79
 3297 04b8 05       		.byte	0x5
 3298 04b9 24       		.byte	0x24
 3299 04ba A3040000 		.4byte	0x4a3
 3300 04be 05       		.uleb128 0x5
 3301 04bf 03       		.byte	0x3
 3302 04c0 00000000 		.4byte	displaystring
 3303 04c4 1C       		.uleb128 0x1c
 3304 04c5 C5010000 		.4byte	.LASF80
 3305 04c9 05       		.byte	0x5
 3306 04ca 25       		.byte	0x25
 3307 04cb A3040000 		.4byte	0x4a3
 3308 04cf 05       		.uleb128 0x5
 3309 04d0 03       		.byte	0x3
 3310 04d1 00000000 		.4byte	line
 3311 04d5 1C       		.uleb128 0x1c
 3312 04d6 79020000 		.4byte	.LASF81
 3313 04da 05       		.byte	0x5
 3314 04db 25       		.byte	0x25
 3315 04dc A3040000 		.4byte	0x4a3
 3316 04e0 05       		.uleb128 0x5
 3317 04e1 03       		.byte	0x3
 3318 04e2 00000000 		.4byte	entry
 3319 04e6 17       		.uleb128 0x17
 3320 04e7 8F000000 		.4byte	0x8f
 3321 04eb F6040000 		.4byte	0x4f6
 3322 04ef 18       		.uleb128 0x18
 3323 04f0 76000000 		.4byte	0x76
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 72


 3324 04f4 3F       		.byte	0x3f
 3325 04f5 00       		.byte	0
 3326 04f6 1C       		.uleb128 0x1c
 3327 04f7 39010000 		.4byte	.LASF82
 3328 04fb 05       		.byte	0x5
 3329 04fc 26       		.byte	0x26
 3330 04fd E6040000 		.4byte	0x4e6
 3331 0501 05       		.uleb128 0x5
 3332 0502 03       		.byte	0x3
 3333 0503 00000000 		.4byte	usbBuffer
 3334 0507 1C       		.uleb128 0x1c
 3335 0508 09010000 		.4byte	.LASF83
 3336 050c 05       		.byte	0x5
 3337 050d 3C       		.byte	0x3c
 3338 050e D9000000 		.4byte	0xd9
 3339 0512 05       		.uleb128 0x5
 3340 0513 03       		.byte	0x3
 3341 0514 00000000 		.4byte	system_state
 3342 0518 1C       		.uleb128 0x1c
 3343 0519 75050000 		.4byte	.LASF84
 3344 051d 01       		.byte	0x1
 3345 051e 2B       		.byte	0x2b
 3346 051f B2010000 		.4byte	0x1b2
 3347 0523 05       		.uleb128 0x5
 3348 0524 03       		.byte	0x3
 3349 0525 00000000 		.4byte	directionState
 3350 0529 1C       		.uleb128 0x1c
 3351 052a 64050000 		.4byte	.LASF85
 3352 052e 01       		.byte	0x1
 3353 052f 2D       		.byte	0x2d
 3354 0530 B2010000 		.4byte	0x1b2
 3355 0534 05       		.uleb128 0x5
 3356 0535 03       		.byte	0x3
 3357 0536 00000000 		.4byte	currentDirection
 3358 053a 1C       		.uleb128 0x1c
 3359 053b A0020000 		.4byte	.LASF86
 3360 053f 01       		.byte	0x1
 3361 0540 2E       		.byte	0x2e
 3362 0541 B2010000 		.4byte	0x1b2
 3363 0545 05       		.uleb128 0x5
 3364 0546 03       		.byte	0x3
 3365 0547 00000000 		.4byte	previousDirection
 3366 054b 1C       		.uleb128 0x1c
 3367 054c 4C050000 		.4byte	.LASF87
 3368 0550 01       		.byte	0x1
 3369 0551 2F       		.byte	0x2f
 3370 0552 05020000 		.4byte	0x205
 3371 0556 05       		.uleb128 0x5
 3372 0557 03       		.byte	0x3
 3373 0558 00000000 		.4byte	currentOrientation
 3374 055c 1C       		.uleb128 0x1c
 3375 055d 21020000 		.4byte	.LASF88
 3376 0561 01       		.byte	0x1
 3377 0562 30       		.byte	0x30
 3378 0563 05020000 		.4byte	0x205
 3379 0567 05       		.uleb128 0x5
 3380 0568 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 73


 3381 0569 00000000 		.4byte	previousOrientation
 3382 056d 1B       		.uleb128 0x1b
 3383 056e 733100   		.ascii	"s1\000"
 3384 0571 01       		.byte	0x1
 3385 0572 32       		.byte	0x32
 3386 0573 8F000000 		.4byte	0x8f
 3387 0577 05       		.uleb128 0x5
 3388 0578 03       		.byte	0x3
 3389 0579 00000000 		.4byte	s1
 3390 057d 1B       		.uleb128 0x1b
 3391 057e 733200   		.ascii	"s2\000"
 3392 0581 01       		.byte	0x1
 3393 0582 32       		.byte	0x32
 3394 0583 8F000000 		.4byte	0x8f
 3395 0587 05       		.uleb128 0x5
 3396 0588 03       		.byte	0x3
 3397 0589 00000000 		.4byte	s2
 3398 058d 1B       		.uleb128 0x1b
 3399 058e 733300   		.ascii	"s3\000"
 3400 0591 01       		.byte	0x1
 3401 0592 32       		.byte	0x32
 3402 0593 8F000000 		.4byte	0x8f
 3403 0597 05       		.uleb128 0x5
 3404 0598 03       		.byte	0x3
 3405 0599 00000000 		.4byte	s3
 3406 059d 1B       		.uleb128 0x1b
 3407 059e 733400   		.ascii	"s4\000"
 3408 05a1 01       		.byte	0x1
 3409 05a2 32       		.byte	0x32
 3410 05a3 8F000000 		.4byte	0x8f
 3411 05a7 05       		.uleb128 0x5
 3412 05a8 03       		.byte	0x3
 3413 05a9 00000000 		.4byte	s4
 3414 05ad 1B       		.uleb128 0x1b
 3415 05ae 733500   		.ascii	"s5\000"
 3416 05b1 01       		.byte	0x1
 3417 05b2 32       		.byte	0x32
 3418 05b3 8F000000 		.4byte	0x8f
 3419 05b7 05       		.uleb128 0x5
 3420 05b8 03       		.byte	0x3
 3421 05b9 00000000 		.4byte	s5
 3422 05bd 1B       		.uleb128 0x1b
 3423 05be 733600   		.ascii	"s6\000"
 3424 05c1 01       		.byte	0x1
 3425 05c2 32       		.byte	0x32
 3426 05c3 8F000000 		.4byte	0x8f
 3427 05c7 05       		.uleb128 0x5
 3428 05c8 03       		.byte	0x3
 3429 05c9 00000000 		.4byte	s6
 3430 05cd 1C       		.uleb128 0x1c
 3431 05ce 67020000 		.4byte	.LASF89
 3432 05d2 01       		.byte	0x1
 3433 05d3 34       		.byte	0x34
 3434 05d4 A7000000 		.4byte	0xa7
 3435 05d8 05       		.uleb128 0x5
 3436 05d9 03       		.byte	0x3
 3437 05da 00000000 		.4byte	totalMilliseconds
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 74


 3438 05de 1C       		.uleb128 0x1c
 3439 05df B2020000 		.4byte	.LASF90
 3440 05e3 01       		.byte	0x1
 3441 05e4 35       		.byte	0x35
 3442 05e5 CB000000 		.4byte	0xcb
 3443 05e9 05       		.uleb128 0x5
 3444 05ea 03       		.byte	0x3
 3445 05eb 00000000 		.4byte	totalDistance
 3446 05ef 17       		.uleb128 0x17
 3447 05f0 7D000000 		.4byte	0x7d
 3448 05f4 FF050000 		.4byte	0x5ff
 3449 05f8 18       		.uleb128 0x18
 3450 05f9 76000000 		.4byte	0x76
 3451 05fd 44       		.byte	0x44
 3452 05fe 00       		.byte	0
 3453 05ff 1C       		.uleb128 0x1c
 3454 0600 6D040000 		.4byte	.LASF91
 3455 0604 01       		.byte	0x1
 3456 0605 37       		.byte	0x37
 3457 0606 EF050000 		.4byte	0x5ef
 3458 060a 05       		.uleb128 0x5
 3459 060b 03       		.byte	0x3
 3460 060c 00000000 		.4byte	buffer
 3461 0610 1C       		.uleb128 0x1c
 3462 0611 13040000 		.4byte	.LASF92
 3463 0615 01       		.byte	0x1
 3464 0616 38       		.byte	0x38
 3465 0617 68000000 		.4byte	0x68
 3466 061b 05       		.uleb128 0x5
 3467 061c 03       		.byte	0x3
 3468 061d 00000000 		.4byte	quadDec2Count
 3469 0621 1C       		.uleb128 0x1c
 3470 0622 33030000 		.4byte	.LASF93
 3471 0626 01       		.byte	0x1
 3472 0627 39       		.byte	0x39
 3473 0628 68000000 		.4byte	0x68
 3474 062c 05       		.uleb128 0x5
 3475 062d 03       		.byte	0x3
 3476 062e 00000000 		.4byte	timerInt
 3477 0632 1C       		.uleb128 0x1c
 3478 0633 C0020000 		.4byte	.LASF94
 3479 0637 01       		.byte	0x1
 3480 0638 3A       		.byte	0x3a
 3481 0639 68000000 		.4byte	0x68
 3482 063d 05       		.uleb128 0x5
 3483 063e 03       		.byte	0x3
 3484 063f 00000000 		.4byte	keepLedOn
 3485 0643 1C       		.uleb128 0x1c
 3486 0644 1F010000 		.4byte	.LASF95
 3487 0648 01       		.byte	0x1
 3488 0649 3B       		.byte	0x3b
 3489 064a A7000000 		.4byte	0xa7
 3490 064e 05       		.uleb128 0x5
 3491 064f 03       		.byte	0x3
 3492 0650 00000000 		.4byte	stopBuffer
 3493 0654 1C       		.uleb128 0x1c
 3494 0655 84010000 		.4byte	.LASF96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 75


 3495 0659 01       		.byte	0x1
 3496 065a C9       		.byte	0xc9
 3497 065b CB000000 		.4byte	0xcb
 3498 065f 05       		.uleb128 0x5
 3499 0660 03       		.byte	0x3
 3500 0661 00000000 		.4byte	yBlockSize
 3501 0665 1C       		.uleb128 0x1c
 3502 0666 52010000 		.4byte	.LASF97
 3503 066a 01       		.byte	0x1
 3504 066b CA       		.byte	0xca
 3505 066c CB000000 		.4byte	0xcb
 3506 0670 05       		.uleb128 0x5
 3507 0671 03       		.byte	0x3
 3508 0672 00000000 		.4byte	xBlockSize
 3509 0676 1C       		.uleb128 0x1c
 3510 0677 43010000 		.4byte	.LASF98
 3511 067b 01       		.byte	0x1
 3512 067c CB       		.byte	0xcb
 3513 067d CB000000 		.4byte	0xcb
 3514 0681 05       		.uleb128 0x5
 3515 0682 03       		.byte	0x3
 3516 0683 00000000 		.4byte	blockSize
 3517 0687 1C       		.uleb128 0x1c
 3518 0688 79010000 		.4byte	.LASF99
 3519 068c 01       		.byte	0x1
 3520 068d CC       		.byte	0xcc
 3521 068e 8F000000 		.4byte	0x8f
 3522 0692 05       		.uleb128 0x5
 3523 0693 03       		.byte	0x3
 3524 0694 00000000 		.4byte	currentRow
 3525 0698 1C       		.uleb128 0x1c
 3526 0699 95020000 		.4byte	.LASF100
 3527 069d 01       		.byte	0x1
 3528 069e CD       		.byte	0xcd
 3529 069f 8F000000 		.4byte	0x8f
 3530 06a3 05       		.uleb128 0x5
 3531 06a4 03       		.byte	0x3
 3532 06a5 00000000 		.4byte	currentCol
 3533 06a9 00       		.byte	0
 3534              		.section	.debug_abbrev,"",%progbits
 3535              	.Ldebug_abbrev0:
 3536 0000 01       		.uleb128 0x1
 3537 0001 11       		.uleb128 0x11
 3538 0002 01       		.byte	0x1
 3539 0003 25       		.uleb128 0x25
 3540 0004 0E       		.uleb128 0xe
 3541 0005 13       		.uleb128 0x13
 3542 0006 0B       		.uleb128 0xb
 3543 0007 03       		.uleb128 0x3
 3544 0008 0E       		.uleb128 0xe
 3545 0009 1B       		.uleb128 0x1b
 3546 000a 0E       		.uleb128 0xe
 3547 000b 55       		.uleb128 0x55
 3548 000c 17       		.uleb128 0x17
 3549 000d 11       		.uleb128 0x11
 3550 000e 01       		.uleb128 0x1
 3551 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 76


 3552 0010 17       		.uleb128 0x17
 3553 0011 00       		.byte	0
 3554 0012 00       		.byte	0
 3555 0013 02       		.uleb128 0x2
 3556 0014 24       		.uleb128 0x24
 3557 0015 00       		.byte	0
 3558 0016 0B       		.uleb128 0xb
 3559 0017 0B       		.uleb128 0xb
 3560 0018 3E       		.uleb128 0x3e
 3561 0019 0B       		.uleb128 0xb
 3562 001a 03       		.uleb128 0x3
 3563 001b 0E       		.uleb128 0xe
 3564 001c 00       		.byte	0
 3565 001d 00       		.byte	0
 3566 001e 03       		.uleb128 0x3
 3567 001f 16       		.uleb128 0x16
 3568 0020 00       		.byte	0
 3569 0021 03       		.uleb128 0x3
 3570 0022 0E       		.uleb128 0xe
 3571 0023 3A       		.uleb128 0x3a
 3572 0024 0B       		.uleb128 0xb
 3573 0025 3B       		.uleb128 0x3b
 3574 0026 0B       		.uleb128 0xb
 3575 0027 49       		.uleb128 0x49
 3576 0028 13       		.uleb128 0x13
 3577 0029 00       		.byte	0
 3578 002a 00       		.byte	0
 3579 002b 04       		.uleb128 0x4
 3580 002c 24       		.uleb128 0x24
 3581 002d 00       		.byte	0
 3582 002e 0B       		.uleb128 0xb
 3583 002f 0B       		.uleb128 0xb
 3584 0030 3E       		.uleb128 0x3e
 3585 0031 0B       		.uleb128 0xb
 3586 0032 03       		.uleb128 0x3
 3587 0033 08       		.uleb128 0x8
 3588 0034 00       		.byte	0
 3589 0035 00       		.byte	0
 3590 0036 05       		.uleb128 0x5
 3591 0037 16       		.uleb128 0x16
 3592 0038 00       		.byte	0
 3593 0039 03       		.uleb128 0x3
 3594 003a 0E       		.uleb128 0xe
 3595 003b 3A       		.uleb128 0x3a
 3596 003c 0B       		.uleb128 0xb
 3597 003d 3B       		.uleb128 0x3b
 3598 003e 05       		.uleb128 0x5
 3599 003f 49       		.uleb128 0x49
 3600 0040 13       		.uleb128 0x13
 3601 0041 00       		.byte	0
 3602 0042 00       		.byte	0
 3603 0043 06       		.uleb128 0x6
 3604 0044 13       		.uleb128 0x13
 3605 0045 01       		.byte	0x1
 3606 0046 03       		.uleb128 0x3
 3607 0047 0E       		.uleb128 0xe
 3608 0048 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 77


 3609 0049 0B       		.uleb128 0xb
 3610 004a 3A       		.uleb128 0x3a
 3611 004b 0B       		.uleb128 0xb
 3612 004c 3B       		.uleb128 0x3b
 3613 004d 0B       		.uleb128 0xb
 3614 004e 01       		.uleb128 0x1
 3615 004f 13       		.uleb128 0x13
 3616 0050 00       		.byte	0
 3617 0051 00       		.byte	0
 3618 0052 07       		.uleb128 0x7
 3619 0053 0D       		.uleb128 0xd
 3620 0054 00       		.byte	0
 3621 0055 03       		.uleb128 0x3
 3622 0056 0E       		.uleb128 0xe
 3623 0057 3A       		.uleb128 0x3a
 3624 0058 0B       		.uleb128 0xb
 3625 0059 3B       		.uleb128 0x3b
 3626 005a 0B       		.uleb128 0xb
 3627 005b 49       		.uleb128 0x49
 3628 005c 13       		.uleb128 0x13
 3629 005d 38       		.uleb128 0x38
 3630 005e 0B       		.uleb128 0xb
 3631 005f 00       		.byte	0
 3632 0060 00       		.byte	0
 3633 0061 08       		.uleb128 0x8
 3634 0062 04       		.uleb128 0x4
 3635 0063 01       		.byte	0x1
 3636 0064 03       		.uleb128 0x3
 3637 0065 0E       		.uleb128 0xe
 3638 0066 0B       		.uleb128 0xb
 3639 0067 0B       		.uleb128 0xb
 3640 0068 49       		.uleb128 0x49
 3641 0069 13       		.uleb128 0x13
 3642 006a 3A       		.uleb128 0x3a
 3643 006b 0B       		.uleb128 0xb
 3644 006c 3B       		.uleb128 0x3b
 3645 006d 0B       		.uleb128 0xb
 3646 006e 01       		.uleb128 0x1
 3647 006f 13       		.uleb128 0x13
 3648 0070 00       		.byte	0
 3649 0071 00       		.byte	0
 3650 0072 09       		.uleb128 0x9
 3651 0073 28       		.uleb128 0x28
 3652 0074 00       		.byte	0
 3653 0075 03       		.uleb128 0x3
 3654 0076 0E       		.uleb128 0xe
 3655 0077 1C       		.uleb128 0x1c
 3656 0078 0B       		.uleb128 0xb
 3657 0079 00       		.byte	0
 3658 007a 00       		.byte	0
 3659 007b 0A       		.uleb128 0xa
 3660 007c 28       		.uleb128 0x28
 3661 007d 00       		.byte	0
 3662 007e 03       		.uleb128 0x3
 3663 007f 08       		.uleb128 0x8
 3664 0080 1C       		.uleb128 0x1c
 3665 0081 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 78


 3666 0082 00       		.byte	0
 3667 0083 00       		.byte	0
 3668 0084 0B       		.uleb128 0xb
 3669 0085 2E       		.uleb128 0x2e
 3670 0086 01       		.byte	0x1
 3671 0087 3F       		.uleb128 0x3f
 3672 0088 19       		.uleb128 0x19
 3673 0089 03       		.uleb128 0x3
 3674 008a 0E       		.uleb128 0xe
 3675 008b 3A       		.uleb128 0x3a
 3676 008c 0B       		.uleb128 0xb
 3677 008d 3B       		.uleb128 0x3b
 3678 008e 0B       		.uleb128 0xb
 3679 008f 27       		.uleb128 0x27
 3680 0090 19       		.uleb128 0x19
 3681 0091 11       		.uleb128 0x11
 3682 0092 01       		.uleb128 0x1
 3683 0093 12       		.uleb128 0x12
 3684 0094 06       		.uleb128 0x6
 3685 0095 40       		.uleb128 0x40
 3686 0096 18       		.uleb128 0x18
 3687 0097 9642     		.uleb128 0x2116
 3688 0099 19       		.uleb128 0x19
 3689 009a 01       		.uleb128 0x1
 3690 009b 13       		.uleb128 0x13
 3691 009c 00       		.byte	0
 3692 009d 00       		.byte	0
 3693 009e 0C       		.uleb128 0xc
 3694 009f 0B       		.uleb128 0xb
 3695 00a0 01       		.byte	0x1
 3696 00a1 11       		.uleb128 0x11
 3697 00a2 01       		.uleb128 0x1
 3698 00a3 12       		.uleb128 0x12
 3699 00a4 06       		.uleb128 0x6
 3700 00a5 00       		.byte	0
 3701 00a6 00       		.byte	0
 3702 00a7 0D       		.uleb128 0xd
 3703 00a8 34       		.uleb128 0x34
 3704 00a9 00       		.byte	0
 3705 00aa 03       		.uleb128 0x3
 3706 00ab 0E       		.uleb128 0xe
 3707 00ac 3A       		.uleb128 0x3a
 3708 00ad 0B       		.uleb128 0xb
 3709 00ae 3B       		.uleb128 0x3b
 3710 00af 0B       		.uleb128 0xb
 3711 00b0 49       		.uleb128 0x49
 3712 00b1 13       		.uleb128 0x13
 3713 00b2 02       		.uleb128 0x2
 3714 00b3 18       		.uleb128 0x18
 3715 00b4 00       		.byte	0
 3716 00b5 00       		.byte	0
 3717 00b6 0E       		.uleb128 0xe
 3718 00b7 2E       		.uleb128 0x2e
 3719 00b8 00       		.byte	0
 3720 00b9 3F       		.uleb128 0x3f
 3721 00ba 19       		.uleb128 0x19
 3722 00bb 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 79


 3723 00bc 0E       		.uleb128 0xe
 3724 00bd 3A       		.uleb128 0x3a
 3725 00be 0B       		.uleb128 0xb
 3726 00bf 3B       		.uleb128 0x3b
 3727 00c0 0B       		.uleb128 0xb
 3728 00c1 27       		.uleb128 0x27
 3729 00c2 19       		.uleb128 0x19
 3730 00c3 11       		.uleb128 0x11
 3731 00c4 01       		.uleb128 0x1
 3732 00c5 12       		.uleb128 0x12
 3733 00c6 06       		.uleb128 0x6
 3734 00c7 40       		.uleb128 0x40
 3735 00c8 18       		.uleb128 0x18
 3736 00c9 9742     		.uleb128 0x2117
 3737 00cb 19       		.uleb128 0x19
 3738 00cc 00       		.byte	0
 3739 00cd 00       		.byte	0
 3740 00ce 0F       		.uleb128 0xf
 3741 00cf 2E       		.uleb128 0x2e
 3742 00d0 00       		.byte	0
 3743 00d1 3F       		.uleb128 0x3f
 3744 00d2 19       		.uleb128 0x19
 3745 00d3 03       		.uleb128 0x3
 3746 00d4 0E       		.uleb128 0xe
 3747 00d5 3A       		.uleb128 0x3a
 3748 00d6 0B       		.uleb128 0xb
 3749 00d7 3B       		.uleb128 0x3b
 3750 00d8 0B       		.uleb128 0xb
 3751 00d9 27       		.uleb128 0x27
 3752 00da 19       		.uleb128 0x19
 3753 00db 11       		.uleb128 0x11
 3754 00dc 01       		.uleb128 0x1
 3755 00dd 12       		.uleb128 0x12
 3756 00de 06       		.uleb128 0x6
 3757 00df 40       		.uleb128 0x40
 3758 00e0 18       		.uleb128 0x18
 3759 00e1 9642     		.uleb128 0x2116
 3760 00e3 19       		.uleb128 0x19
 3761 00e4 00       		.byte	0
 3762 00e5 00       		.byte	0
 3763 00e6 10       		.uleb128 0x10
 3764 00e7 2E       		.uleb128 0x2e
 3765 00e8 00       		.byte	0
 3766 00e9 3F       		.uleb128 0x3f
 3767 00ea 19       		.uleb128 0x19
 3768 00eb 03       		.uleb128 0x3
 3769 00ec 0E       		.uleb128 0xe
 3770 00ed 3A       		.uleb128 0x3a
 3771 00ee 0B       		.uleb128 0xb
 3772 00ef 3B       		.uleb128 0x3b
 3773 00f0 0B       		.uleb128 0xb
 3774 00f1 49       		.uleb128 0x49
 3775 00f2 13       		.uleb128 0x13
 3776 00f3 11       		.uleb128 0x11
 3777 00f4 01       		.uleb128 0x1
 3778 00f5 12       		.uleb128 0x12
 3779 00f6 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 80


 3780 00f7 40       		.uleb128 0x40
 3781 00f8 18       		.uleb128 0x18
 3782 00f9 9642     		.uleb128 0x2116
 3783 00fb 19       		.uleb128 0x19
 3784 00fc 00       		.byte	0
 3785 00fd 00       		.byte	0
 3786 00fe 11       		.uleb128 0x11
 3787 00ff 2E       		.uleb128 0x2e
 3788 0100 01       		.byte	0x1
 3789 0101 3F       		.uleb128 0x3f
 3790 0102 19       		.uleb128 0x19
 3791 0103 03       		.uleb128 0x3
 3792 0104 0E       		.uleb128 0xe
 3793 0105 3A       		.uleb128 0x3a
 3794 0106 0B       		.uleb128 0xb
 3795 0107 3B       		.uleb128 0x3b
 3796 0108 0B       		.uleb128 0xb
 3797 0109 27       		.uleb128 0x27
 3798 010a 19       		.uleb128 0x19
 3799 010b 49       		.uleb128 0x49
 3800 010c 13       		.uleb128 0x13
 3801 010d 11       		.uleb128 0x11
 3802 010e 01       		.uleb128 0x1
 3803 010f 12       		.uleb128 0x12
 3804 0110 06       		.uleb128 0x6
 3805 0111 40       		.uleb128 0x40
 3806 0112 18       		.uleb128 0x18
 3807 0113 9642     		.uleb128 0x2116
 3808 0115 19       		.uleb128 0x19
 3809 0116 01       		.uleb128 0x1
 3810 0117 13       		.uleb128 0x13
 3811 0118 00       		.byte	0
 3812 0119 00       		.byte	0
 3813 011a 12       		.uleb128 0x12
 3814 011b 05       		.uleb128 0x5
 3815 011c 00       		.byte	0
 3816 011d 03       		.uleb128 0x3
 3817 011e 0E       		.uleb128 0xe
 3818 011f 3A       		.uleb128 0x3a
 3819 0120 0B       		.uleb128 0xb
 3820 0121 3B       		.uleb128 0x3b
 3821 0122 0B       		.uleb128 0xb
 3822 0123 49       		.uleb128 0x49
 3823 0124 13       		.uleb128 0x13
 3824 0125 02       		.uleb128 0x2
 3825 0126 18       		.uleb128 0x18
 3826 0127 00       		.byte	0
 3827 0128 00       		.byte	0
 3828 0129 13       		.uleb128 0x13
 3829 012a 34       		.uleb128 0x34
 3830 012b 00       		.byte	0
 3831 012c 03       		.uleb128 0x3
 3832 012d 08       		.uleb128 0x8
 3833 012e 3A       		.uleb128 0x3a
 3834 012f 0B       		.uleb128 0xb
 3835 0130 3B       		.uleb128 0x3b
 3836 0131 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 81


 3837 0132 49       		.uleb128 0x49
 3838 0133 13       		.uleb128 0x13
 3839 0134 02       		.uleb128 0x2
 3840 0135 18       		.uleb128 0x18
 3841 0136 00       		.byte	0
 3842 0137 00       		.byte	0
 3843 0138 14       		.uleb128 0x14
 3844 0139 2E       		.uleb128 0x2e
 3845 013a 00       		.byte	0
 3846 013b 3F       		.uleb128 0x3f
 3847 013c 19       		.uleb128 0x19
 3848 013d 03       		.uleb128 0x3
 3849 013e 0E       		.uleb128 0xe
 3850 013f 3A       		.uleb128 0x3a
 3851 0140 0B       		.uleb128 0xb
 3852 0141 3B       		.uleb128 0x3b
 3853 0142 0B       		.uleb128 0xb
 3854 0143 11       		.uleb128 0x11
 3855 0144 01       		.uleb128 0x1
 3856 0145 12       		.uleb128 0x12
 3857 0146 06       		.uleb128 0x6
 3858 0147 40       		.uleb128 0x40
 3859 0148 18       		.uleb128 0x18
 3860 0149 9742     		.uleb128 0x2117
 3861 014b 19       		.uleb128 0x19
 3862 014c 00       		.byte	0
 3863 014d 00       		.byte	0
 3864 014e 15       		.uleb128 0x15
 3865 014f 2E       		.uleb128 0x2e
 3866 0150 00       		.byte	0
 3867 0151 3F       		.uleb128 0x3f
 3868 0152 19       		.uleb128 0x19
 3869 0153 03       		.uleb128 0x3
 3870 0154 0E       		.uleb128 0xe
 3871 0155 3A       		.uleb128 0x3a
 3872 0156 0B       		.uleb128 0xb
 3873 0157 3B       		.uleb128 0x3b
 3874 0158 05       		.uleb128 0x5
 3875 0159 49       		.uleb128 0x49
 3876 015a 13       		.uleb128 0x13
 3877 015b 11       		.uleb128 0x11
 3878 015c 01       		.uleb128 0x1
 3879 015d 12       		.uleb128 0x12
 3880 015e 06       		.uleb128 0x6
 3881 015f 40       		.uleb128 0x40
 3882 0160 18       		.uleb128 0x18
 3883 0161 9642     		.uleb128 0x2116
 3884 0163 19       		.uleb128 0x19
 3885 0164 00       		.byte	0
 3886 0165 00       		.byte	0
 3887 0166 16       		.uleb128 0x16
 3888 0167 2E       		.uleb128 0x2e
 3889 0168 00       		.byte	0
 3890 0169 3F       		.uleb128 0x3f
 3891 016a 19       		.uleb128 0x19
 3892 016b 03       		.uleb128 0x3
 3893 016c 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 82


 3894 016d 3A       		.uleb128 0x3a
 3895 016e 0B       		.uleb128 0xb
 3896 016f 3B       		.uleb128 0x3b
 3897 0170 05       		.uleb128 0x5
 3898 0171 11       		.uleb128 0x11
 3899 0172 01       		.uleb128 0x1
 3900 0173 12       		.uleb128 0x12
 3901 0174 06       		.uleb128 0x6
 3902 0175 40       		.uleb128 0x40
 3903 0176 18       		.uleb128 0x18
 3904 0177 9642     		.uleb128 0x2116
 3905 0179 19       		.uleb128 0x19
 3906 017a 00       		.byte	0
 3907 017b 00       		.byte	0
 3908 017c 17       		.uleb128 0x17
 3909 017d 01       		.uleb128 0x1
 3910 017e 01       		.byte	0x1
 3911 017f 49       		.uleb128 0x49
 3912 0180 13       		.uleb128 0x13
 3913 0181 01       		.uleb128 0x1
 3914 0182 13       		.uleb128 0x13
 3915 0183 00       		.byte	0
 3916 0184 00       		.byte	0
 3917 0185 18       		.uleb128 0x18
 3918 0186 21       		.uleb128 0x21
 3919 0187 00       		.byte	0
 3920 0188 49       		.uleb128 0x49
 3921 0189 13       		.uleb128 0x13
 3922 018a 2F       		.uleb128 0x2f
 3923 018b 0B       		.uleb128 0xb
 3924 018c 00       		.byte	0
 3925 018d 00       		.byte	0
 3926 018e 19       		.uleb128 0x19
 3927 018f 34       		.uleb128 0x34
 3928 0190 00       		.byte	0
 3929 0191 03       		.uleb128 0x3
 3930 0192 0E       		.uleb128 0xe
 3931 0193 3A       		.uleb128 0x3a
 3932 0194 0B       		.uleb128 0xb
 3933 0195 3B       		.uleb128 0x3b
 3934 0196 05       		.uleb128 0x5
 3935 0197 49       		.uleb128 0x49
 3936 0198 13       		.uleb128 0x13
 3937 0199 3F       		.uleb128 0x3f
 3938 019a 19       		.uleb128 0x19
 3939 019b 3C       		.uleb128 0x3c
 3940 019c 19       		.uleb128 0x19
 3941 019d 00       		.byte	0
 3942 019e 00       		.byte	0
 3943 019f 1A       		.uleb128 0x1a
 3944 01a0 35       		.uleb128 0x35
 3945 01a1 00       		.byte	0
 3946 01a2 49       		.uleb128 0x49
 3947 01a3 13       		.uleb128 0x13
 3948 01a4 00       		.byte	0
 3949 01a5 00       		.byte	0
 3950 01a6 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 83


 3951 01a7 34       		.uleb128 0x34
 3952 01a8 00       		.byte	0
 3953 01a9 03       		.uleb128 0x3
 3954 01aa 08       		.uleb128 0x8
 3955 01ab 3A       		.uleb128 0x3a
 3956 01ac 0B       		.uleb128 0xb
 3957 01ad 3B       		.uleb128 0x3b
 3958 01ae 0B       		.uleb128 0xb
 3959 01af 49       		.uleb128 0x49
 3960 01b0 13       		.uleb128 0x13
 3961 01b1 3F       		.uleb128 0x3f
 3962 01b2 19       		.uleb128 0x19
 3963 01b3 02       		.uleb128 0x2
 3964 01b4 18       		.uleb128 0x18
 3965 01b5 00       		.byte	0
 3966 01b6 00       		.byte	0
 3967 01b7 1C       		.uleb128 0x1c
 3968 01b8 34       		.uleb128 0x34
 3969 01b9 00       		.byte	0
 3970 01ba 03       		.uleb128 0x3
 3971 01bb 0E       		.uleb128 0xe
 3972 01bc 3A       		.uleb128 0x3a
 3973 01bd 0B       		.uleb128 0xb
 3974 01be 3B       		.uleb128 0x3b
 3975 01bf 0B       		.uleb128 0xb
 3976 01c0 49       		.uleb128 0x49
 3977 01c1 13       		.uleb128 0x13
 3978 01c2 3F       		.uleb128 0x3f
 3979 01c3 19       		.uleb128 0x19
 3980 01c4 02       		.uleb128 0x2
 3981 01c5 18       		.uleb128 0x18
 3982 01c6 00       		.byte	0
 3983 01c7 00       		.byte	0
 3984 01c8 00       		.byte	0
 3985              		.section	.debug_aranges,"",%progbits
 3986 0000 74000000 		.4byte	0x74
 3987 0004 0200     		.2byte	0x2
 3988 0006 00000000 		.4byte	.Ldebug_info0
 3989 000a 04       		.byte	0x4
 3990 000b 00       		.byte	0
 3991 000c 0000     		.2byte	0
 3992 000e 0000     		.2byte	0
 3993 0010 00000000 		.4byte	.LFB64
 3994 0014 EC000000 		.4byte	.LFE64-.LFB64
 3995 0018 00000000 		.4byte	.LFB65
 3996 001c 18000000 		.4byte	.LFE65-.LFB65
 3997 0020 00000000 		.4byte	.LFB66
 3998 0024 18000000 		.4byte	.LFE66-.LFB66
 3999 0028 00000000 		.4byte	.LFB67
 4000 002c 18000000 		.4byte	.LFE67-.LFB67
 4001 0030 00000000 		.4byte	.LFB68
 4002 0034 18000000 		.4byte	.LFE68-.LFB68
 4003 0038 00000000 		.4byte	.LFB69
 4004 003c 38000000 		.4byte	.LFE69-.LFB69
 4005 0040 00000000 		.4byte	.LFB70
 4006 0044 9C000000 		.4byte	.LFE70-.LFB70
 4007 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 84


 4008 004c 54000000 		.4byte	.LFE71-.LFB71
 4009 0050 00000000 		.4byte	.LFB72
 4010 0054 48000000 		.4byte	.LFE72-.LFB72
 4011 0058 00000000 		.4byte	.LFB73
 4012 005c 60040000 		.4byte	.LFE73-.LFB73
 4013 0060 00000000 		.4byte	.LFB74
 4014 0064 5C050000 		.4byte	.LFE74-.LFB74
 4015 0068 00000000 		.4byte	.LFB75
 4016 006c 88000000 		.4byte	.LFE75-.LFB75
 4017 0070 00000000 		.4byte	0
 4018 0074 00000000 		.4byte	0
 4019              		.section	.debug_ranges,"",%progbits
 4020              	.Ldebug_ranges0:
 4021 0000 00000000 		.4byte	.LFB64
 4022 0004 EC000000 		.4byte	.LFE64
 4023 0008 00000000 		.4byte	.LFB65
 4024 000c 18000000 		.4byte	.LFE65
 4025 0010 00000000 		.4byte	.LFB66
 4026 0014 18000000 		.4byte	.LFE66
 4027 0018 00000000 		.4byte	.LFB67
 4028 001c 18000000 		.4byte	.LFE67
 4029 0020 00000000 		.4byte	.LFB68
 4030 0024 18000000 		.4byte	.LFE68
 4031 0028 00000000 		.4byte	.LFB69
 4032 002c 38000000 		.4byte	.LFE69
 4033 0030 00000000 		.4byte	.LFB70
 4034 0034 9C000000 		.4byte	.LFE70
 4035 0038 00000000 		.4byte	.LFB71
 4036 003c 54000000 		.4byte	.LFE71
 4037 0040 00000000 		.4byte	.LFB72
 4038 0044 48000000 		.4byte	.LFE72
 4039 0048 00000000 		.4byte	.LFB73
 4040 004c 60040000 		.4byte	.LFE73
 4041 0050 00000000 		.4byte	.LFB74
 4042 0054 5C050000 		.4byte	.LFE74
 4043 0058 00000000 		.4byte	.LFB75
 4044 005c 88000000 		.4byte	.LFE75
 4045 0060 00000000 		.4byte	0
 4046 0064 00000000 		.4byte	0
 4047              		.section	.debug_line,"",%progbits
 4048              	.Ldebug_line0:
 4049 0000 2D040000 		.section	.debug_str,"MS",%progbits,1
 4049      02005F01 
 4049      00000201 
 4049      FB0E0D00 
 4049      01010101 
 4050              	.LASF56:
 4051 0000 53365F44 		.ascii	"S6_DETECTED\000"
 4051      45544543 
 4051      54454400 
 4052              	.LASF101:
 4053 000c 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4053      43393920 
 4053      352E342E 
 4053      31203230 
 4053      31363036 
 4054 003f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 85


 4054      20726576 
 4054      6973696F 
 4054      6E203233 
 4054      37373135 
 4055 0072 30202D73 		.ascii	"0 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 4055      74643D63 
 4055      3939202D 
 4055      6666756E 
 4055      6374696F 
 4056              	.LASF39:
 4057 00a3 5475726E 		.ascii	"TurnLeft\000"
 4057      4C656674 
 4057      00
 4058              	.LASF60:
 4059 00ac 67657444 		.ascii	"getDirection\000"
 4059      69726563 
 4059      74696F6E 
 4059      00
 4060              	.LASF66:
 4061 00b9 74735F65 		.ascii	"ts_enc\000"
 4061      6E6300
 4062              	.LASF46:
 4063 00c0 466F7277 		.ascii	"ForwardAfterTurn\000"
 4063      61726441 
 4063      66746572 
 4063      5475726E 
 4063      00
 4064              	.LASF75:
 4065 00d1 666C6167 		.ascii	"flag_packet\000"
 4065      5F706163 
 4065      6B657400 
 4066              	.LASF45:
 4067 00dd 77616974 		.ascii	"waitForTurn\000"
 4067      466F7254 
 4067      75726E00 
 4068              	.LASF72:
 4069 00e9 666C6167 		.ascii	"flag_ts_speed\000"
 4069      5F74735F 
 4069      73706565 
 4069      6400
 4070              	.LASF33:
 4071 00f7 67325F78 		.ascii	"g2_xpos\000"
 4071      706F7300 
 4072              	.LASF2:
 4073 00ff 73686F72 		.ascii	"short int\000"
 4073      7420696E 
 4073      7400
 4074              	.LASF83:
 4075 0109 73797374 		.ascii	"system_state\000"
 4075      656D5F73 
 4075      74617465 
 4075      00
 4076              	.LASF9:
 4077 0116 73697A65 		.ascii	"sizetype\000"
 4077      74797065 
 4077      00
 4078              	.LASF95:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 86


 4079 011f 73746F70 		.ascii	"stopBuffer\000"
 4079      42756666 
 4079      657200
 4080              	.LASF48:
 4081 012a 44697265 		.ascii	"DirectionState\000"
 4081      6374696F 
 4081      6E537461 
 4081      746500
 4082              	.LASF82:
 4083 0139 75736242 		.ascii	"usbBuffer\000"
 4083      75666665 
 4083      7200
 4084              	.LASF98:
 4085 0143 626C6F63 		.ascii	"blockSize\000"
 4085      6B53697A 
 4085      6500
 4086              	.LASF58:
 4087 014d 6D61696E 		.ascii	"main\000"
 4087      00
 4088              	.LASF97:
 4089 0152 78426C6F 		.ascii	"xBlockSize\000"
 4089      636B5369 
 4089      7A6500
 4090              	.LASF54:
 4091 015d 53345F44 		.ascii	"S4_DETECTED\000"
 4091      45544543 
 4091      54454400 
 4092              	.LASF40:
 4093 0169 41646A75 		.ascii	"AdjustToTheLeft\000"
 4093      7374546F 
 4093      5468654C 
 4093      65667400 
 4094              	.LASF99:
 4095 0179 63757272 		.ascii	"currentRow\000"
 4095      656E7452 
 4095      6F7700
 4096              	.LASF96:
 4097 0184 79426C6F 		.ascii	"yBlockSize\000"
 4097      636B5369 
 4097      7A6500
 4098              	.LASF21:
 4099 018f 696E6465 		.ascii	"index\000"
 4099      7800
 4100              	.LASF105:
 4101 0195 73706565 		.ascii	"speedTimer\000"
 4101      6454696D 
 4101      657200
 4102              	.LASF17:
 4103 01a0 696E7431 		.ascii	"int16\000"
 4103      3600
 4104              	.LASF44:
 4105 01a6 48617264 		.ascii	"HardForward\000"
 4105      466F7277 
 4105      61726400 
 4106              	.LASF13:
 4107 01b2 75696E74 		.ascii	"uint8\000"
 4107      3800
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 87


 4108              	.LASF32:
 4109 01b8 67315F64 		.ascii	"g1_direction\000"
 4109      69726563 
 4109      74696F6E 
 4109      00
 4110              	.LASF80:
 4111 01c5 6C696E65 		.ascii	"line\000"
 4111      00
 4112              	.LASF18:
 4113 01ca 666C6F61 		.ascii	"float\000"
 4113      7400
 4114              	.LASF52:
 4115 01d0 52696768 		.ascii	"Right\000"
 4115      7400
 4116              	.LASF59:
 4117 01d6 6E657744 		.ascii	"newDistance\000"
 4117      69737461 
 4117      6E636500 
 4118              	.LASF6:
 4119 01e2 6C6F6E67 		.ascii	"long long int\000"
 4119      206C6F6E 
 4119      6720696E 
 4119      7400
 4120              	.LASF16:
 4121 01f0 696E7438 		.ascii	"int8\000"
 4121      00
 4122              	.LASF71:
 4123 01f5 666C6167 		.ascii	"flag_ts_update\000"
 4123      5F74735F 
 4123      75706461 
 4123      746500
 4124              	.LASF34:
 4125 0204 67325F79 		.ascii	"g2_ypos\000"
 4125      706F7300 
 4126              	.LASF28:
 4127 020c 67305F64 		.ascii	"g0_direction\000"
 4127      69726563 
 4127      74696F6E 
 4127      00
 4128              	.LASF25:
 4129 0219 67305F78 		.ascii	"g0_xpos\000"
 4129      706F7300 
 4130              	.LASF88:
 4131 0221 70726576 		.ascii	"previousOrientation\000"
 4131      696F7573 
 4131      4F726965 
 4131      6E746174 
 4131      696F6E00 
 4132              	.LASF51:
 4133 0235 4C656674 		.ascii	"Left\000"
 4133      00
 4134              	.LASF61:
 4135 023a 43686563 		.ascii	"CheckSensorDirection\000"
 4135      6B53656E 
 4135      736F7244 
 4135      69726563 
 4135      74696F6E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 88


 4136              	.LASF73:
 4137 024f 666C6167 		.ascii	"flag_ts_display\000"
 4137      5F74735F 
 4137      64697370 
 4137      6C617900 
 4138              	.LASF74:
 4139 025f 666C6167 		.ascii	"flag_rx\000"
 4139      5F727800 
 4140              	.LASF89:
 4141 0267 746F7461 		.ascii	"totalMilliseconds\000"
 4141      6C4D696C 
 4141      6C697365 
 4141      636F6E64 
 4141      7300
 4142              	.LASF81:
 4143 0279 656E7472 		.ascii	"entry\000"
 4143      7900
 4144              	.LASF30:
 4145 027f 67315F79 		.ascii	"g1_ypos\000"
 4145      706F7300 
 4146              	.LASF1:
 4147 0287 756E7369 		.ascii	"unsigned char\000"
 4147      676E6564 
 4147      20636861 
 4147      7200
 4148              	.LASF100:
 4149 0295 63757272 		.ascii	"currentCol\000"
 4149      656E7443 
 4149      6F6C00
 4150              	.LASF86:
 4151 02a0 70726576 		.ascii	"previousDirection\000"
 4151      696F7573 
 4151      44697265 
 4151      6374696F 
 4151      6E00
 4152              	.LASF90:
 4153 02b2 746F7461 		.ascii	"totalDistance\000"
 4153      6C446973 
 4153      74616E63 
 4153      6500
 4154              	.LASF94:
 4155 02c0 6B656570 		.ascii	"keepLedOn\000"
 4155      4C65644F 
 4155      6E00
 4156              	.LASF27:
 4157 02ca 67305F73 		.ascii	"g0_speed\000"
 4157      70656564 
 4157      00
 4158              	.LASF77:
 4159 02d3 64617461 		.ascii	"dataready_flag\000"
 4159      72656164 
 4159      795F666C 
 4159      616700
 4160              	.LASF29:
 4161 02e2 67315F78 		.ascii	"g1_xpos\000"
 4161      706F7300 
 4162              	.LASF0:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 89


 4163 02ea 7369676E 		.ascii	"signed char\000"
 4163      65642063 
 4163      68617200 
 4164              	.LASF12:
 4165 02f6 696E7433 		.ascii	"int32_t\000"
 4165      325F7400 
 4166              	.LASF7:
 4167 02fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 4167      206C6F6E 
 4167      6720756E 
 4167      7369676E 
 4167      65642069 
 4168              	.LASF41:
 4169 0315 41646A75 		.ascii	"AdjustToTheRight\000"
 4169      7374546F 
 4169      54686552 
 4169      69676874 
 4169      00
 4170              	.LASF8:
 4171 0326 756E7369 		.ascii	"unsigned int\000"
 4171      676E6564 
 4171      20696E74 
 4171      00
 4172              	.LASF93:
 4173 0333 74696D65 		.ascii	"timerInt\000"
 4173      72496E74 
 4173      00
 4174              	.LASF76:
 4175 033c 666C6167 		.ascii	"flag_KB_string\000"
 4175      5F4B425F 
 4175      73747269 
 4175      6E6700
 4176              	.LASF63:
 4177 034b 53657452 		.ascii	"SetRobotMovement\000"
 4177      6F626F74 
 4177      4D6F7665 
 4177      6D656E74 
 4177      00
 4178              	.LASF57:
 4179 035c 54494D45 		.ascii	"TIMER_FINISH\000"
 4179      525F4649 
 4179      4E495348 
 4179      00
 4180              	.LASF35:
 4181 0369 67325F73 		.ascii	"g2_speed\000"
 4181      70656564 
 4181      00
 4182              	.LASF55:
 4183 0372 53355F44 		.ascii	"S5_DETECTED\000"
 4183      45544543 
 4183      54454400 
 4184              	.LASF3:
 4185 037e 73686F72 		.ascii	"short unsigned int\000"
 4185      7420756E 
 4185      7369676E 
 4185      65642069 
 4185      6E7400
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 90


 4186              	.LASF104:
 4187 0391 64617461 		.ascii	"data_main\000"
 4187      5F6D6169 
 4187      6E00
 4188              	.LASF62:
 4189 039b 52657365 		.ascii	"ResetSensorFlags\000"
 4189      7453656E 
 4189      736F7246 
 4189      6C616773 
 4189      00
 4190              	.LASF10:
 4191 03ac 63686172 		.ascii	"char\000"
 4191      00
 4192              	.LASF4:
 4193 03b1 6C6F6E67 		.ascii	"long int\000"
 4193      20696E74 
 4193      00
 4194              	.LASF37:
 4195 03ba 466F7277 		.ascii	"Forward\000"
 4195      61726400 
 4196              	.LASF103:
 4197 03c2 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4197      6F63756D 
 4197      656E7473 
 4197      5C476974 
 4197      4875625C 
 4198 03f1 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4198      635F636F 
 4198      64655F62 
 4198      6173655C 
 4198      43533330 
 4199              	.LASF92:
 4200 0413 71756164 		.ascii	"quadDec2Count\000"
 4200      44656332 
 4200      436F756E 
 4200      7400
 4201              	.LASF49:
 4202 0421 4F726965 		.ascii	"Orientation\000"
 4202      6E746174 
 4202      696F6E00 
 4203              	.LASF36:
 4204 042d 67325F64 		.ascii	"g2_direction\000"
 4204      69726563 
 4204      74696F6E 
 4204      00
 4205              	.LASF31:
 4206 043a 67315F73 		.ascii	"g1_speed\000"
 4206      70656564 
 4206      00
 4207              	.LASF79:
 4208 0443 64697370 		.ascii	"displaystring\000"
 4208      6C617973 
 4208      7472696E 
 4208      6700
 4209              	.LASF22:
 4210 0451 726F626F 		.ascii	"robot_xpos\000"
 4210      745F7870 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 91


 4210      6F7300
 4211              	.LASF38:
 4212 045c 5475726E 		.ascii	"TurnRight\000"
 4212      52696768 
 4212      7400
 4213              	.LASF14:
 4214 0466 75696E74 		.ascii	"uint16\000"
 4214      313600
 4215              	.LASF91:
 4216 046d 62756666 		.ascii	"buffer\000"
 4216      657200
 4217              	.LASF15:
 4218 0474 75696E74 		.ascii	"uint32\000"
 4218      333200
 4219              	.LASF102:
 4220 047b 6D61696E 		.ascii	"main.c\000"
 4220      2E6300
 4221              	.LASF5:
 4222 0482 6C6F6E67 		.ascii	"long unsigned int\000"
 4222      20756E73 
 4222      69676E65 
 4222      6420696E 
 4222      7400
 4223              	.LASF47:
 4224 0494 4261636B 		.ascii	"Backward\000"
 4224      77617264 
 4224      00
 4225              	.LASF19:
 4226 049d 646F7562 		.ascii	"double\000"
 4226      6C6500
 4227              	.LASF43:
 4228 04a4 556E6B6E 		.ascii	"Unknown\000"
 4228      6F776E00 
 4229              	.LASF64:
 4230 04ac 666F6F64 		.ascii	"food_list\000"
 4230      5F6C6973 
 4230      7400
 4231              	.LASF53:
 4232 04b6 53335F44 		.ascii	"S3_DETECTED\000"
 4232      45544543 
 4232      54454400 
 4233              	.LASF68:
 4234 04c2 74735F73 		.ascii	"ts_speed\000"
 4234      70656564 
 4234      00
 4235              	.LASF107:
 4236 04cb 636F756E 		.ascii	"count\000"
 4236      7400
 4237              	.LASF70:
 4238 04d1 666C6167 		.ascii	"flag_ts_enc\000"
 4238      5F74735F 
 4238      656E6300 
 4239              	.LASF11:
 4240 04dd 5F5F696E 		.ascii	"__int32_t\000"
 4240      7433325F 
 4240      7400
 4241              	.LASF42:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 92


 4242 04e7 53746F70 		.ascii	"Stop\000"
 4242      00
 4243              	.LASF26:
 4244 04ec 67305F79 		.ascii	"g0_ypos\000"
 4244      706F7300 
 4245              	.LASF69:
 4246 04f4 74735F64 		.ascii	"ts_display\000"
 4246      6973706C 
 4246      617900
 4247              	.LASF67:
 4248 04ff 74735F75 		.ascii	"ts_update\000"
 4248      70646174 
 4248      6500
 4249              	.LASF106:
 4250 0509 71756164 		.ascii	"quadCountToRPM\000"
 4250      436F756E 
 4250      74546F52 
 4250      504D00
 4251              	.LASF78:
 4252 0518 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4252      5F72665F 
 4252      7472616E 
 4252      736D6973 
 4252      73696F6E 
 4253              	.LASF23:
 4254 0534 726F626F 		.ascii	"robot_ypos\000"
 4254      745F7970 
 4254      6F7300
 4255              	.LASF65:
 4256 053f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4256      52784275 
 4256      66666572 
 4256      00
 4257              	.LASF87:
 4258 054c 63757272 		.ascii	"currentOrientation\000"
 4258      656E744F 
 4258      7269656E 
 4258      74617469 
 4258      6F6E00
 4259              	.LASF50:
 4260 055f 446F776E 		.ascii	"Down\000"
 4260      00
 4261              	.LASF85:
 4262 0564 63757272 		.ascii	"currentDirection\000"
 4262      656E7444 
 4262      69726563 
 4262      74696F6E 
 4262      00
 4263              	.LASF84:
 4264 0575 64697265 		.ascii	"directionState\000"
 4264      6374696F 
 4264      6E537461 
 4264      746500
 4265              	.LASF20:
 4266 0584 72737369 		.ascii	"rssi\000"
 4266      00
 4267              	.LASF24:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccKbbj4Q.s 			page 93


 4268 0589 726F626F 		.ascii	"robot_orientation\000"
 4268      745F6F72 
 4268      69656E74 
 4268      6174696F 
 4268      6E00
 4269              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
