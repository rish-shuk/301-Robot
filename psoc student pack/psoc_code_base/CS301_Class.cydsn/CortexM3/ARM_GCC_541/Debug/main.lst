ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.global	instructionIndex
 124              		.bss
 125 0013 00       		.align	2
 126              		.type	instructionIndex, %object
 127              		.size	instructionIndex, 4
 128              	instructionIndex:
 129 0014 00000000 		.space	4
 130              		.comm	s3,1,1
 131              		.comm	s4,1,1
 132              		.comm	s5,1,1
 133              		.global	s6
 134              		.type	s6, %object
 135              		.size	s6, 1
 136              	s6:
 137 0018 00       		.space	1
 138              		.global	totalMilliseconds
 139 0019 000000   		.align	2
 140              		.type	totalMilliseconds, %object
 141              		.size	totalMilliseconds, 4
 142              	totalMilliseconds:
 143 001c 00000000 		.space	4
 144              		.global	totalDistance
 145              		.align	2
 146              		.type	totalDistance, %object
 147              		.size	totalDistance, 4
 148              	totalDistance:
 149 0020 00000000 		.space	4
 150              		.comm	buffer,69,4
 151              		.global	quadDec2Count
 152              		.align	2
 153              		.type	quadDec2Count, %object
 154              		.size	quadDec2Count, 4
 155              	quadDec2Count:
 156 0024 00000000 		.space	4
 157              		.global	timerInt
 158              		.align	2
 159              		.type	timerInt, %object
 160              		.size	timerInt, 4
 161              	timerInt:
 162 0028 00000000 		.space	4
 163              		.global	keepLedOn
 164              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 4


 165              		.type	keepLedOn, %object
 166              		.size	keepLedOn, 4
 167              	keepLedOn:
 168 002c 00000000 		.space	4
 169              		.global	stopBuffer
 170              		.align	2
 171              		.type	stopBuffer, %object
 172              		.size	stopBuffer, 4
 173              	stopBuffer:
 174 0030 00000000 		.space	4
 175              		.global	turnFinishedFlag
 176              		.type	turnFinishedFlag, %object
 177              		.size	turnFinishedFlag, 1
 178              	turnFinishedFlag:
 179 0034 00       		.space	1
 180              		.global	forwardUntilTargetStartedFlag
 181              		.type	forwardUntilTargetStartedFlag, %object
 182              		.size	forwardUntilTargetStartedFlag, 1
 183              	forwardUntilTargetStartedFlag:
 184 0035 00       		.space	1
 185              		.global	blockSizeTotal
 186 0036 0000     		.align	2
 187              		.type	blockSizeTotal, %object
 188              		.size	blockSizeTotal, 4
 189              	blockSizeTotal:
 190 0038 00000000 		.space	4
 191              		.global	__aeabi_i2d
 192              		.global	__aeabi_dmul
 193              		.global	__aeabi_ddiv
 194              		.global	__aeabi_d2f
 195              		.global	__aeabi_fadd
 196              		.section	.text.speedTimer,"ax",%progbits
 197              		.align	2
 198              		.global	speedTimer
 199              		.thumb
 200              		.thumb_func
 201              		.type	speedTimer, %function
 202              	speedTimer:
 203              	.LFB64:
 204              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 5


  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint8 turnFinishedFlag = 0;
  52:main.c        **** uint8 forwardUntilTargetStartedFlag = 0;
  53:main.c        **** float blockSizeTotal = 0;
  54:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  55:main.c        **** 
  56:main.c        **** CY_ISR (speedTimer) {
 205              		.loc 1 56 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 90B5     		push	{r4, r7, lr}
 210              		.cfi_def_cfa_offset 12
 211              		.cfi_offset 4, -12
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 83B0     		sub	sp, sp, #12
 215              		.cfi_def_cfa_offset 24
 216 0004 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
  57:main.c        ****     timerInt = 1;
 218              		.loc 1 57 0
 219 0006 344B     		ldr	r3, .L4+16
 220 0008 0122     		movs	r2, #1
 221 000a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 6


  58:main.c        ****     //quadDec_M1 used for turning macros
  59:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 222              		.loc 1 59 0
 223 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 224 0010 0346     		mov	r3, r0
 225 0012 1A46     		mov	r2, r3
 226 0014 314B     		ldr	r3, .L4+20
 227 0016 1A60     		str	r2, [r3]
  60:main.c        ****     
  61:main.c        ****     if ((currentDirection == Forward || 
 228              		.loc 1 61 0
 229 0018 314B     		ldr	r3, .L4+24
 230 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231 001c 002B     		cmp	r3, #0
 232 001e 13D0     		beq	.L2
  62:main.c        ****         currentDirection == ForwardAfterTurn ||
 233              		.loc 1 62 0 discriminator 1
 234 0020 2F4B     		ldr	r3, .L4+24
 235 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  61:main.c        ****         currentDirection == ForwardAfterTurn ||
 236              		.loc 1 61 0 discriminator 1
 237 0024 082B     		cmp	r3, #8
 238 0026 0FD0     		beq	.L2
  63:main.c        ****         currentDirection == waitForTurn || 
 239              		.loc 1 63 0
 240 0028 2D4B     		ldr	r3, .L4+24
 241 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:main.c        ****         currentDirection == ForwardAfterTurn ||
 242              		.loc 1 62 0
 243 002c 072B     		cmp	r3, #7
 244 002e 0BD0     		beq	.L2
  64:main.c        ****         currentDirection == AdjustToTheLeft ||
 245              		.loc 1 64 0
 246 0030 2B4B     		ldr	r3, .L4+24
 247 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63:main.c        ****         currentDirection == waitForTurn || 
 248              		.loc 1 63 0
 249 0034 032B     		cmp	r3, #3
 250 0036 07D0     		beq	.L2
  65:main.c        ****         currentDirection == AdjustToTheRight ||
 251              		.loc 1 65 0
 252 0038 294B     		ldr	r3, .L4+24
 253 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:main.c        ****         currentDirection == AdjustToTheLeft ||
 254              		.loc 1 64 0
 255 003c 042B     		cmp	r3, #4
 256 003e 03D0     		beq	.L2
  66:main.c        ****         currentDirection == Backward) &&
 257              		.loc 1 66 0
 258 0040 274B     		ldr	r3, .L4+24
 259 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  65:main.c        ****         currentDirection == AdjustToTheRight ||
 260              		.loc 1 65 0
 261 0044 092B     		cmp	r3, #9
 262 0046 34D1     		bne	.L3
 263              	.L2:
  67:main.c        ****         quadDec2Count != 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 7


 264              		.loc 1 67 0
 265 0048 244B     		ldr	r3, .L4+20
 266 004a 1B68     		ldr	r3, [r3]
  66:main.c        ****         currentDirection == Backward) &&
 267              		.loc 1 66 0
 268 004c 002B     		cmp	r3, #0
 269 004e 30D0     		beq	.L3
 270              	.LBB2:
  68:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  69:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 271              		.loc 1 69 0
 272 0050 224B     		ldr	r3, .L4+20
 273 0052 1B68     		ldr	r3, [r3]
 274 0054 002B     		cmp	r3, #0
 275 0056 B8BF     		it	lt
 276 0058 5B42     		rsblt	r3, r3, #0
 277 005a 1846     		mov	r0, r3
 278 005c FFF7FEFF 		bl	__aeabi_i2d
 279 0060 19A3     		adr	r3, .L4
 280 0062 D3E90023 		ldrd	r2, [r3]
 281 0066 FFF7FEFF 		bl	__aeabi_dmul
 282 006a 0346     		mov	r3, r0
 283 006c 0C46     		mov	r4, r1
 284 006e 1846     		mov	r0, r3
 285 0070 2146     		mov	r1, r4
 286 0072 17A3     		adr	r3, .L4+8
 287 0074 D3E90023 		ldrd	r2, [r3]
 288 0078 FFF7FEFF 		bl	__aeabi_dmul
 289 007c 0346     		mov	r3, r0
 290 007e 0C46     		mov	r4, r1
 291 0080 1846     		mov	r0, r3
 292 0082 2146     		mov	r1, r4
 293 0084 4FF00002 		mov	r2, #0
 294 0088 164B     		ldr	r3, .L4+28
 295 008a FFF7FEFF 		bl	__aeabi_ddiv
 296 008e 0346     		mov	r3, r0
 297 0090 0C46     		mov	r4, r1
 298 0092 1846     		mov	r0, r3
 299 0094 2146     		mov	r1, r4
 300 0096 FFF7FEFF 		bl	__aeabi_d2f
 301 009a 0346     		mov	r3, r0
 302 009c 7B60     		str	r3, [r7, #4]	@ float
  70:main.c        ****         
  71:main.c        ****         totalDistance = totalDistance + newDistance;
 303              		.loc 1 71 0
 304 009e 124B     		ldr	r3, .L4+32
 305 00a0 1B68     		ldr	r3, [r3]	@ float
 306 00a2 7968     		ldr	r1, [r7, #4]	@ float
 307 00a4 1846     		mov	r0, r3
 308 00a6 FFF7FEFF 		bl	__aeabi_fadd
 309 00aa 0346     		mov	r3, r0
 310 00ac 1A46     		mov	r2, r3
 311 00ae 0E4B     		ldr	r3, .L4+32
 312 00b0 1A60     		str	r2, [r3]	@ float
 313              	.L3:
 314              	.LBE2:
  72:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 8


  73:main.c        ****     
  74:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 315              		.loc 1 74 0
 316 00b2 0020     		movs	r0, #0
 317 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  75:main.c        ****     QuadDec_M2_Start(); // restart counter
 318              		.loc 1 75 0
 319 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  76:main.c        ****     
  77:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 320              		.loc 1 77 0
 321 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  78:main.c        **** }
 322              		.loc 1 78 0
 323 00c0 00BF     		nop
 324 00c2 0C37     		adds	r7, r7, #12
 325              		.cfi_def_cfa_offset 12
 326 00c4 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 00c6 90BD     		pop	{r4, r7, pc}
 330              	.L5:
 331              		.align	3
 332              	.L4:
 333 00c8 182D4454 		.word	1413754136
 334 00cc FB210940 		.word	1074340347
 335 00d0 00000000 		.word	0
 336 00d4 00205040 		.word	1078992896
 337 00d8 00000000 		.word	timerInt
 338 00dc 00000000 		.word	quadDec2Count
 339 00e0 00000000 		.word	currentDirection
 340 00e4 00806C40 		.word	1080852480
 341 00e8 00000000 		.word	totalDistance
 342              		.cfi_endproc
 343              	.LFE64:
 344              		.size	speedTimer, .-speedTimer
 345              		.section	.text.S3_DETECTED,"ax",%progbits
 346              		.align	2
 347              		.global	S3_DETECTED
 348              		.thumb
 349              		.thumb_func
 350              		.type	S3_DETECTED, %function
 351              	S3_DETECTED:
 352              	.LFB65:
  79:main.c        **** 
  80:main.c        **** CY_ISR(S3_DETECTED) {
 353              		.loc 1 80 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 0000 80B4     		push	{r7}
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
  81:main.c        ****     // Sensor has detected WHITE
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 9


  82:main.c        ****     s3 = 1; // , Black = 0, White = 1
 363              		.loc 1 82 0
 364 0004 034B     		ldr	r3, .L7
 365 0006 0122     		movs	r2, #1
 366 0008 1A70     		strb	r2, [r3]
  83:main.c        ****     //LED_Write(1u);
  84:main.c        **** }
 367              		.loc 1 84 0
 368 000a 00BF     		nop
 369 000c BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 000e 80BC     		pop	{r7}
 373              		.cfi_restore 7
 374              		.cfi_def_cfa_offset 0
 375 0010 7047     		bx	lr
 376              	.L8:
 377 0012 00BF     		.align	2
 378              	.L7:
 379 0014 00000000 		.word	s3
 380              		.cfi_endproc
 381              	.LFE65:
 382              		.size	S3_DETECTED, .-S3_DETECTED
 383              		.section	.text.S4_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S4_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S4_DETECTED, %function
 389              	S4_DETECTED:
 390              	.LFB66:
  85:main.c        **** 
  86:main.c        **** CY_ISR(S4_DETECTED) {
 391              		.loc 1 86 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
  87:main.c        ****     // Sensor has detected WHITE
  88:main.c        ****     s4 = 1; // , Black = 0, White = 1
 401              		.loc 1 88 0
 402 0004 034B     		ldr	r3, .L10
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
  89:main.c        ****     //LED_Write(1u);
  90:main.c        **** }
 405              		.loc 1 90 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 10


 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L11:
 415 0012 00BF     		.align	2
 416              	.L10:
 417 0014 00000000 		.word	s4
 418              		.cfi_endproc
 419              	.LFE66:
 420              		.size	S4_DETECTED, .-S4_DETECTED
 421              		.section	.text.S5_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S5_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S5_DETECTED, %function
 427              	S5_DETECTED:
 428              	.LFB67:
  91:main.c        **** 
  92:main.c        **** CY_ISR(S5_DETECTED) {
 429              		.loc 1 92 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
  93:main.c        ****     // Sensor has detected WHITE
  94:main.c        ****     s5 = 1; // , Black = 0, White = 1
 439              		.loc 1 94 0
 440 0004 034B     		ldr	r3, .L13
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     //LED_Write(1u);
  96:main.c        **** }
 443              		.loc 1 96 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L14:
 453 0012 00BF     		.align	2
 454              	.L13:
 455 0014 00000000 		.word	s5
 456              		.cfi_endproc
 457              	.LFE67:
 458              		.size	S5_DETECTED, .-S5_DETECTED
 459              		.section	.text.S6_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 11


 462              		.thumb
 463              		.thumb_func
 464              		.type	S6_DETECTED, %function
 465              	S6_DETECTED:
 466              	.LFB68:
  97:main.c        **** 
  98:main.c        **** CY_ISR(S6_DETECTED) {
 467              		.loc 1 98 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
  99:main.c        ****     // Sensor has detected WHITE
 100:main.c        ****     s6 = 1; // , Black = 0, White = 1
 477              		.loc 1 100 0
 478 0004 034B     		ldr	r3, .L16
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     //LED_Write(1u);
 102:main.c        **** }
 481              		.loc 1 102 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L17:
 491 0012 00BF     		.align	2
 492              	.L16:
 493 0014 00000000 		.word	s6
 494              		.cfi_endproc
 495              	.LFE68:
 496              		.size	S6_DETECTED, .-S6_DETECTED
 497              		.section	.text.TIMER_FINISH,"ax",%progbits
 498              		.align	2
 499              		.global	TIMER_FINISH
 500              		.thumb
 501              		.thumb_func
 502              		.type	TIMER_FINISH, %function
 503              	TIMER_FINISH:
 504              	.LFB69:
 103:main.c        **** 
 104:main.c        **** CY_ISR(TIMER_FINISH) {
 505              		.loc 1 104 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 12


 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 105:main.c        ****     if (currentDirection == Stop) {
 515              		.loc 1 105 0
 516 0004 0A4B     		ldr	r3, .L21
 517 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 0008 052B     		cmp	r3, #5
 519 000a 05D1     		bne	.L19
 106:main.c        ****         stopBuffer = stopBuffer + 1;
 520              		.loc 1 106 0
 521 000c 094B     		ldr	r3, .L21+4
 522 000e 1B68     		ldr	r3, [r3]
 523 0010 0133     		adds	r3, r3, #1
 524 0012 084A     		ldr	r2, .L21+4
 525 0014 1360     		str	r3, [r2]
 526 0016 02E0     		b	.L20
 527              	.L19:
 107:main.c        ****     } else {
 108:main.c        ****         stopBuffer = 0;
 528              		.loc 1 108 0
 529 0018 064B     		ldr	r3, .L21+4
 530 001a 0022     		movs	r2, #0
 531 001c 1A60     		str	r2, [r3]
 532              	.L20:
 109:main.c        ****     }
 110:main.c        ****     SetRobotMovement(); 
 533              		.loc 1 110 0
 534 001e FFF7FEFF 		bl	SetRobotMovement
 111:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 535              		.loc 1 111 0
 536 0022 FFF7FEFF 		bl	ResetSensorFlags
 112:main.c        ****     Timer_LED_ReadStatusRegister();
 537              		.loc 1 112 0
 538 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 113:main.c        **** }
 539              		.loc 1 113 0
 540 002a 00BF     		nop
 541 002c 80BD     		pop	{r7, pc}
 542              	.L22:
 543 002e 00BF     		.align	2
 544              	.L21:
 545 0030 00000000 		.word	currentDirection
 546 0034 00000000 		.word	stopBuffer
 547              		.cfi_endproc
 548              	.LFE69:
 549              		.size	TIMER_FINISH, .-TIMER_FINISH
 550              		.section	.text.main,"ax",%progbits
 551              		.align	2
 552              		.global	main
 553              		.thumb
 554              		.thumb_func
 555              		.type	main, %function
 556              	main:
 557              	.LFB70:
 114:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 13


 115:main.c        **** 
 116:main.c        **** int main()
 117:main.c        **** {
 558              		.loc 1 117 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 118:main.c        **** // ----- INITIALIZATIONS ----------
 119:main.c        ****     CYGlobalIntEnable;
 568              		.loc 1 119 0
 569              		.syntax unified
 570              	@ 119 "main.c" 1
 571 0004 62B6     		CPSIE   i
 572              	@ 0 "" 2
 120:main.c        ****     ResetSensorFlags();
 573              		.loc 1 120 0
 574              		.thumb
 575              		.syntax unified
 576 0006 FFF7FEFF 		bl	ResetSensorFlags
 121:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 577              		.loc 1 121 0
 578 000a FFF7FEFF 		bl	init
 122:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 579              		.loc 1 122 0
 580 000e 1F48     		ldr	r0, .L27
 581 0010 FFF7FEFF 		bl	isr_speed_StartEx
 123:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 582              		.loc 1 123 0
 583 0014 1E48     		ldr	r0, .L27+4
 584 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 124:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 585              		.loc 1 124 0
 586 001a 1E48     		ldr	r0, .L27+8
 587 001c FFF7FEFF 		bl	S3_detected_StartEx
 125:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 588              		.loc 1 125 0
 589 0020 1D48     		ldr	r0, .L27+12
 590 0022 FFF7FEFF 		bl	S4_detected_StartEx
 126:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 591              		.loc 1 126 0
 592 0026 1D48     		ldr	r0, .L27+16
 593 0028 FFF7FEFF 		bl	S5_detected_StartEx
 127:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 594              		.loc 1 127 0
 595 002c 1C48     		ldr	r0, .L27+20
 596 002e FFF7FEFF 		bl	S6_detected_StartEx
 128:main.c        ****     Timer_LED_Start();
 597              		.loc 1 128 0
 598 0032 FFF7FEFF 		bl	Timer_LED_Start
 129:main.c        ****     instructionList = findPath(map, food_list, 0);
 599              		.loc 1 129 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 14


 600 0036 0022     		movs	r2, #0
 601 0038 1A49     		ldr	r1, .L27+24
 602 003a 1B48     		ldr	r0, .L27+28
 603 003c FFF7FEFF 		bl	findPath
 604 0040 0246     		mov	r2, r0
 605 0042 1A4B     		ldr	r3, .L27+32
 606 0044 1A60     		str	r2, [r3]
 130:main.c        ****     numSteps = instructionsListLength();
 607              		.loc 1 130 0
 608 0046 FFF7FEFF 		bl	instructionsListLength
 609 004a 0346     		mov	r3, r0
 610 004c 1A46     		mov	r2, r3
 611 004e 184B     		ldr	r3, .L27+36
 612 0050 1A60     		str	r2, [r3]
 131:main.c        **** // ------USB SETUP ----------------    
 132:main.c        **** #ifdef USE_USB    
 133:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 613              		.loc 1 133 0
 614 0052 0121     		movs	r1, #1
 615 0054 0020     		movs	r0, #0
 616 0056 FFF7FEFF 		bl	USBUART_Start
 134:main.c        **** #endif        
 135:main.c        ****     RF_BT_SELECT_Write(0);
 617              		.loc 1 135 0
 618 005a 0020     		movs	r0, #0
 619 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 620              	.L26:
 136:main.c        ****     
 137:main.c        ****     //usbPutString("Initialised UART");
 138:main.c        ****     for(;;)
 139:main.c        ****     {
 140:main.c        ****         if(timerInt == 1) {
 621              		.loc 1 140 0
 622 0060 144B     		ldr	r3, .L27+40
 623 0062 1B68     		ldr	r3, [r3]
 624 0064 012B     		cmp	r3, #1
 625 0066 08D1     		bne	.L24
 141:main.c        ****             timerInt = 0;
 626              		.loc 1 141 0
 627 0068 124B     		ldr	r3, .L27+40
 628 006a 0022     		movs	r2, #0
 629 006c 1A60     		str	r2, [r3]
 142:main.c        ****             // calculate RPM of M2
 143:main.c        ****             quadCountToRPM(quadDec2Count);
 630              		.loc 1 143 0
 631 006e 124B     		ldr	r3, .L27+44
 632 0070 1B68     		ldr	r3, [r3]
 633 0072 9BB2     		uxth	r3, r3
 634 0074 1846     		mov	r0, r3
 635 0076 FFF7FEFF 		bl	quadCountToRPM
 636              	.L24:
 144:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 145:main.c        ****             //usbPutString(buffer);
 146:main.c        ****             //usbPutString(" ");
 147:main.c        ****         }
 148:main.c        ****         //handle_usb();
 149:main.c        ****         if (flag_KB_string == 1)
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 15


 637              		.loc 1 149 0
 638 007a 104B     		ldr	r3, .L27+48
 639 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 007e 012B     		cmp	r3, #1
 641 0080 EED1     		bne	.L26
 150:main.c        ****         {
 151:main.c        ****             //usbPutString("Total Distance: ");
 152:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 153:main.c        ****             //usbPutString(buffer);
 154:main.c        ****             flag_KB_string = 0;
 642              		.loc 1 154 0
 643 0082 0E4B     		ldr	r3, .L27+48
 644 0084 0022     		movs	r2, #0
 645 0086 1A70     		strb	r2, [r3]
 155:main.c        ****         }           
 156:main.c        ****     }
 646              		.loc 1 156 0
 647 0088 EAE7     		b	.L26
 648              	.L28:
 649 008a 00BF     		.align	2
 650              	.L27:
 651 008c 00000000 		.word	speedTimer
 652 0090 00000000 		.word	TIMER_FINISH
 653 0094 00000000 		.word	S3_DETECTED
 654 0098 00000000 		.word	S4_DETECTED
 655 009c 00000000 		.word	S5_DETECTED
 656 00a0 00000000 		.word	S6_DETECTED
 657 00a4 00000000 		.word	food_list
 658 00a8 00000000 		.word	map
 659 00ac 00000000 		.word	instructionList
 660 00b0 00000000 		.word	numSteps
 661 00b4 00000000 		.word	timerInt
 662 00b8 00000000 		.word	quadDec2Count
 663 00bc 00000000 		.word	flag_KB_string
 664              		.cfi_endproc
 665              	.LFE70:
 666              		.size	main, .-main
 667              		.global	__aeabi_fmul
 668              		.global	__aeabi_f2iz
 669              		.section	.text.quadCountToRPM,"ax",%progbits
 670              		.align	2
 671              		.global	quadCountToRPM
 672              		.thumb
 673              		.thumb_func
 674              		.type	quadCountToRPM, %function
 675              	quadCountToRPM:
 676              	.LFB71:
 157:main.c        ****     return 0;
 158:main.c        **** }
 159:main.c        **** 
 160:main.c        **** // Calculations
 161:main.c        **** //* ========================================
 162:main.c        **** int16 quadCountToRPM(uint16 count)
 163:main.c        **** {
 677              		.loc 1 163 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 16


 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 90B5     		push	{r4, r7, lr}
 682              		.cfi_def_cfa_offset 12
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 32
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 0346     		mov	r3, r0
 691 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 164:main.c        ****     float cps = count/57.00;
 692              		.loc 1 164 0
 693 000a FB88     		ldrh	r3, [r7, #6]
 694 000c 1846     		mov	r0, r3
 695 000e FFF7FEFF 		bl	__aeabi_i2d
 696 0012 4FF00002 		mov	r2, #0
 697 0016 0D4B     		ldr	r3, .L31
 698 0018 FFF7FEFF 		bl	__aeabi_ddiv
 699 001c 0346     		mov	r3, r0
 700 001e 0C46     		mov	r4, r1
 701 0020 1846     		mov	r0, r3
 702 0022 2146     		mov	r1, r4
 703 0024 FFF7FEFF 		bl	__aeabi_d2f
 704 0028 0346     		mov	r3, r0
 705 002a FB60     		str	r3, [r7, #12]	@ float
 165:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 706              		.loc 1 165 0
 707 002c 0849     		ldr	r1, .L31+4
 708 002e F868     		ldr	r0, [r7, #12]	@ float
 709 0030 FFF7FEFF 		bl	__aeabi_fmul
 710 0034 0346     		mov	r3, r0
 711 0036 1846     		mov	r0, r3
 712 0038 FFF7FEFF 		bl	__aeabi_f2iz
 713 003c 0346     		mov	r3, r0
 714 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 166:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 167:main.c        ****     return rpm;
 715              		.loc 1 167 0
 716 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 168:main.c        ****     //usbPutString(buffer);
 169:main.c        ****     //usbPutString("rpm ");
 170:main.c        **** }
 717              		.loc 1 170 0
 718 0044 1846     		mov	r0, r3
 719 0046 1437     		adds	r7, r7, #20
 720              		.cfi_def_cfa_offset 12
 721 0048 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 004a 90BD     		pop	{r4, r7, pc}
 725              	.L32:
 726              		.align	2
 727              	.L31:
 728 004c 00804C40 		.word	1078755328
 729 0050 00007041 		.word	1097859072
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 17


 730              		.cfi_endproc
 731              	.LFE71:
 732              		.size	quadCountToRPM, .-quadCountToRPM
 733              		.section	.text.ResetSensorFlags,"ax",%progbits
 734              		.align	2
 735              		.global	ResetSensorFlags
 736              		.thumb
 737              		.thumb_func
 738              		.type	ResetSensorFlags, %function
 739              	ResetSensorFlags:
 740              	.LFB72:
 171:main.c        **** 
 172:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 173:main.c        **** void ResetSensorFlags() {
 741              		.loc 1 173 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746 0000 80B4     		push	{r7}
 747              		.cfi_def_cfa_offset 4
 748              		.cfi_offset 7, -4
 749 0002 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 174:main.c        ****     s3 = 0;
 751              		.loc 1 174 0
 752 0004 074B     		ldr	r3, .L34
 753 0006 0022     		movs	r2, #0
 754 0008 1A70     		strb	r2, [r3]
 175:main.c        ****     s4 = 0;
 755              		.loc 1 175 0
 756 000a 074B     		ldr	r3, .L34+4
 757 000c 0022     		movs	r2, #0
 758 000e 1A70     		strb	r2, [r3]
 176:main.c        ****     s5 = 0;
 759              		.loc 1 176 0
 760 0010 064B     		ldr	r3, .L34+8
 761 0012 0022     		movs	r2, #0
 762 0014 1A70     		strb	r2, [r3]
 177:main.c        ****     s6 = 0;
 763              		.loc 1 177 0
 764 0016 064B     		ldr	r3, .L34+12
 765 0018 0022     		movs	r2, #0
 766 001a 1A70     		strb	r2, [r3]
 178:main.c        **** }
 767              		.loc 1 178 0
 768 001c 00BF     		nop
 769 001e BD46     		mov	sp, r7
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0020 80BC     		pop	{r7}
 773              		.cfi_restore 7
 774              		.cfi_def_cfa_offset 0
 775 0022 7047     		bx	lr
 776              	.L35:
 777              		.align	2
 778              	.L34:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 18


 779 0024 00000000 		.word	s3
 780 0028 00000000 		.word	s4
 781 002c 00000000 		.word	s5
 782 0030 00000000 		.word	s6
 783              		.cfi_endproc
 784              	.LFE72:
 785              		.size	ResetSensorFlags, .-ResetSensorFlags
 786              		.global	xBlocksize
 787              		.data
 788 0045 000000   		.align	2
 789              		.type	xBlocksize, %object
 790              		.size	xBlocksize, 4
 791              	xBlocksize:
 792 0048 0000F442 		.word	1123287040
 793              		.global	yBlocksize
 794              		.align	2
 795              		.type	yBlocksize, %object
 796              		.size	yBlocksize, 4
 797              	yBlocksize:
 798 004c 0000A042 		.word	1117782016
 799              		.global	currentRow
 800              		.type	currentRow, %object
 801              		.size	currentRow, 1
 802              	currentRow:
 803 0050 01       		.byte	1
 804              		.global	currentCol
 805              		.type	currentCol, %object
 806              		.size	currentCol, 1
 807              	currentCol:
 808 0051 01       		.byte	1
 809              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 810              		.align	2
 811              		.global	ForwardCourseCorrection
 812              		.thumb
 813              		.thumb_func
 814              		.type	ForwardCourseCorrection, %function
 815              	ForwardCourseCorrection:
 816              	.LFB73:
 179:main.c        **** 
 180:main.c        **** float xBlocksize = 122; // 122 mm
 181:main.c        **** float yBlocksize = 80; // 80 mm
 182:main.c        **** uint8 currentRow = 1;
 183:main.c        **** uint8 currentCol = 1;
 184:main.c        **** 
 185:main.c        **** /*enum DirectionState GetNextStep() {
 186:main.c        ****     enum DirectionState directionState;
 187:main.c        ****     // Determines robot movement and orientation to follow optimal path
 188:main.c        ****     // enum DirectionState directionState = Stop;
 189:main.c        ****     previousOrientation = currentOrientation;
 190:main.c        ****     
 191:main.c        ****     if(map[currentRow][currentCol] == 9) {
 192:main.c        ****         directionState = Stop; // reached target
 193:main.c        ****         return directionState;
 194:main.c        ****     }
 195:main.c        ****         
 196:main.c        ****     switch (previousOrientation) {
 197:main.c        ****             case Up:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 19


 198:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 199:main.c        ****                     currentOrientation = Up; 
 200:main.c        ****                     directionState = Forward;
 201:main.c        ****                     currentRow--;// update position
 202:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 203:main.c        ****                     currentOrientation = Left;
 204:main.c        ****                     directionState = waitForLeftTurn;
 205:main.c        ****                     //currentRow--;
 206:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 207:main.c        ****                     currentOrientation = Right;
 208:main.c        ****                     directionState = waitForRightTurn;
 209:main.c        ****                     //currentRow++; // update position
 210:main.c        ****                 }
 211:main.c        ****                 break;
 212:main.c        ****             case Down:
 213:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 214:main.c        ****                     currentOrientation = Down;
 215:main.c        ****                     directionState = Forward;
 216:main.c        ****                     currentRow++;
 217:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 218:main.c        ****                     currentOrientation = Left;
 219:main.c        ****                     directionState = waitForRightTurn;
 220:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 221:main.c        ****                     currentOrientation = Right;
 222:main.c        ****                     directionState = waitForLeftTurn;
 223:main.c        ****                 }
 224:main.c        ****                 break;
 225:main.c        ****             case Left:
 226:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 227:main.c        ****                     currentOrientation = Left;
 228:main.c        ****                     directionState = Forward;
 229:main.c        ****                     currentCol--; // update position
 230:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 231:main.c        ****                     currentOrientation = Up;
 232:main.c        ****                     directionState = waitForRightTurn;
 233:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 234:main.c        ****                     currentOrientation = Down;
 235:main.c        ****                     directionState = waitForLeftTurn;
 236:main.c        ****                 }
 237:main.c        ****                 break;
 238:main.c        ****             case Right:
 239:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 240:main.c        ****                     currentOrientation = Right;
 241:main.c        ****                     directionState = Forward;
 242:main.c        ****                     currentCol++; // update position
 243:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 244:main.c        ****                     currentOrientation = Up;
 245:main.c        ****                     directionState = waitForLeftTurn;
 246:main.c        ****                     //currentCol++; // update position
 247:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 248:main.c        ****                     currentOrientation = Down;
 249:main.c        ****                     directionState = waitForRightTurn;
 250:main.c        ****                     //currentCol--; // update position
 251:main.c        ****                 }
 252:main.c        ****                 break;
 253:main.c        ****             default:
 254:main.c        ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 20


 255:main.c        ****         }
 256:main.c        ****     
 257:main.c        ****     return directionState;
 258:main.c        **** }
 259:main.c        **** */
 260:main.c        **** //uint8 stoppedAfterTurn = 0;
 261:main.c        **** //uint8 ignoreSensor = 0;
 262:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 263:main.c        **** /*
 264:main.c        **** enum RobotMovement CheckSensorDirection() {
 265:main.c        ****     float blocksize;
 266:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 267:main.c        ****         blocksize = yBlocksize;
 268:main.c        ****     } else {
 269:main.c        ****         blocksize = xBlocksize;
 270:main.c        ****     }
 271:main.c        ****     //if(currentInstruction)
 272:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 273:main.c        ****     
 274:main.c        ****     if (stoppedAfterTurn == 1) {
 275:main.c        ****         if (stopBuffer <= 50) {
 276:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 277:main.c        ****             previousDirection = directionState;
 278:main.c        ****             return directionState;
 279:main.c        ****         }
 280:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 281:main.c        ****         totalDistance = 0; // reset distance
 282:main.c        ****         previousDirection = directionState;
 283:main.c        ****         stoppedAfterTurn = 0;
 284:main.c        ****         return directionState;
 285:main.c        ****     }
 286:main.c        ****     if (totalDistance >= blocksize) {
 287:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 288:main.c        ****         totalDistance = 0; // reset distance
 289:main.c        ****         previousDirection = directionState;
 290:main.c        ****         return directionState;
 291:main.c        ****     }
 292:main.c        ****     
 293:main.c        ****     // STOP BUFFER * ========================================
 294:main.c        ****     if (previousDirection == Stop) {
 295:main.c        ****         if (stopBuffer <= 50) {
 296:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 297:main.c        ****             previousDirection = directionState;
 298:main.c        ****         } else {
 299:main.c        ****             //directionState = ForwardAfterTurn;
 300:main.c        ****         }
 301:main.c        ****         return directionState;
 302:main.c        ****     }
 303:main.c        **** 
 304:main.c        ****     // TURNING * ========================================    
 305:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 306:main.c        ****         if (s3 || s4) {
 307:main.c        ****             //ignoreSensor = 0;
 308:main.c        ****             //usbPutString("Forward\n");
 309:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 310:main.c        ****             previousDirection = directionState;
 311:main.c        ****             return directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 21


 312:main.c        ****         }
 313:main.c        ****     }
 314:main.c        **** 
 315:main.c        ****     if(previousDirection == waitForRightTurn) {
 316:main.c        ****         //ignoreSensor = 0;
 317:main.c        ****         if(!s4) {
 318:main.c        ****             //usbPutString("Turn Right\n");
 319:main.c        ****             directionState = TurnRight;
 320:main.c        ****             previousDirection = directionState;
 321:main.c        ****             return directionState;
 322:main.c        ****         } else {
 323:main.c        ****             //usbPutString("Wait for Right Turn\n");
 324:main.c        ****             directionState = waitForRightTurn;
 325:main.c        ****             previousDirection = directionState;
 326:main.c        ****             return directionState;
 327:main.c        ****         }
 328:main.c        ****     }
 329:main.c        **** 
 330:main.c        ****     if(previousDirection == waitForLeftTurn) {
 331:main.c        ****         //ignoreSensor = 0;
 332:main.c        ****         if(!s3) {
 333:main.c        ****             //usbPutString("Turn Left\n");
 334:main.c        ****             directionState = TurnLeft;
 335:main.c        ****             previousDirection = directionState;
 336:main.c        ****             return directionState;
 337:main.c        ****         } else {
 338:main.c        ****             //usbPutString("Wait for Left Turn\n");
 339:main.c        ****             directionState = waitForLeftTurn;
 340:main.c        ****             previousDirection = directionState;
 341:main.c        ****             return directionState;
 342:main.c        ****         }
 343:main.c        ****     }
 344:main.c        **** 
 345:main.c        ****     if(previousDirection == TurnRight) {
 346:main.c        ****         if(s5 && s6) {
 347:main.c        ****             //usbPutString("Turn Right\n");
 348:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 349:main.c        ****             previousDirection = directionState;
 350:main.c        ****             return directionState;
 351:main.c        ****         } 
 352:main.c        ****         else if (!s5 || !s6) {
 353:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 354:main.c        ****             //usbPutString("Stop after Right Turn");
 355:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 356:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 357:main.c        ****             previousDirection = directionState;
 358:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 359:main.c        ****             return directionState;
 360:main.c        ****         }
 361:main.c        ****     }    
 362:main.c        **** 
 363:main.c        ****     if(previousDirection == TurnLeft) {
 364:main.c        ****         if(s5 && s6) {
 365:main.c        ****             //usbPutString("Turn Left\n");
 366:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 367:main.c        ****             previousDirection = directionState;
 368:main.c        ****             return directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 22


 369:main.c        ****         } 
 370:main.c        ****         else if (!s5 || !s6) {
 371:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 372:main.c        ****            // usbPutString("Stop after Left Turn\n");
 373:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 374:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 375:main.c        ****             previousDirection = directionState;
 376:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 377:main.c        ****             return directionState;
 378:main.c        ****         }
 379:main.c        ****     }
 380:main.c        ****     
 381:main.c        ****     // COURSE CORRECTION * ========================================
 382:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 383:main.c        ****         //ignoreSensor = 0;
 384:main.c        ****         if(s6) {
 385:main.c        ****             //usbPutString("Adjust to the left\n");
 386:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 387:main.c        ****             previousDirection = directionState;
 388:main.c        ****             return directionState;
 389:main.c        ****         }
 390:main.c        ****         if(s5) {
 391:main.c        ****             //usbPutString("Adjust to the right\n");
 392:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 393:main.c        ****             previousDirection = directionState;
 394:main.c        ****             return directionState;
 395:main.c        ****         }
 396:main.c        ****     }
 397:main.c        ****     
 398:main.c        ****     // FORWARD * ========================================
 399:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 400:main.c        ****         //usbPutString("Forward\n");
 401:main.c        ****         directionState = Forward;
 402:main.c        ****         previousDirection = directionState;
 403:main.c        ****         return directionState;   
 404:main.c        ****     }
 405:main.c        **** 
 406:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 407:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 408:main.c        ****     if (previousDirection == Unknown) {
 409:main.c        ****         directionState = Forward;
 410:main.c        ****         previousDirection = directionState;
 411:main.c        ****         return directionState;
 412:main.c        ****     }
 413:main.c        **** 
 414:main.c        ****     // Possible reason
 415:main.c        ****     previousDirection = currentDirection;
 416:main.c        ****     return previousDirection;
 417:main.c        **** }
 418:main.c        **** */
 419:main.c        **** 
 420:main.c        **** enum RobotMovement ForwardCourseCorrection();
 421:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 817              		.loc 1 421 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 23


 821              		@ link register save eliminated.
 822 0000 80B4     		push	{r7}
 823              		.cfi_def_cfa_offset 4
 824              		.cfi_offset 7, -4
 825 0002 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 422:main.c        ****     // if S5 and S6 are on black, move forward
 423:main.c        ****     if (!s5 && !s6) {
 827              		.loc 1 423 0
 828 0004 1C4B     		ldr	r3, .L44
 829 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0008 002B     		cmp	r3, #0
 831 000a 0FD1     		bne	.L37
 832              		.loc 1 423 0 is_stmt 0 discriminator 1
 833 000c 1B4B     		ldr	r3, .L44+4
 834 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 0010 002B     		cmp	r3, #0
 836 0012 0BD1     		bne	.L37
 424:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 837              		.loc 1 424 0 is_stmt 1
 838 0014 1A4B     		ldr	r3, .L44+8
 839 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 840 0018 032B     		cmp	r3, #3
 841 001a 01D0     		beq	.L38
 425:main.c        ****             return AdjustToTheLeft;
 842              		.loc 1 425 0
 843 001c 0323     		movs	r3, #3
 844 001e 26E0     		b	.L39
 845              	.L38:
 426:main.c        ****         }
 427:main.c        ****         if (previousDirection != AdjustToTheRight) {
 846              		.loc 1 427 0
 847 0020 174B     		ldr	r3, .L44+8
 848 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0024 042B     		cmp	r3, #4
 850 0026 01D0     		beq	.L37
 428:main.c        ****             return AdjustToTheRight;    
 851              		.loc 1 428 0
 852 0028 0423     		movs	r3, #4
 853 002a 20E0     		b	.L39
 854              	.L37:
 429:main.c        ****         }
 430:main.c        ****     }
 431:main.c        ****     
 432:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 433:main.c        ****     if (s5 && s6) {
 855              		.loc 1 433 0
 856 002c 124B     		ldr	r3, .L44
 857 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858 0030 002B     		cmp	r3, #0
 859 0032 0FD0     		beq	.L40
 860              		.loc 1 433 0 is_stmt 0 discriminator 1
 861 0034 114B     		ldr	r3, .L44+4
 862 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 0038 002B     		cmp	r3, #0
 864 003a 0BD0     		beq	.L40
 434:main.c        ****         if (previousDirection != AdjustToTheLeft) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 24


 865              		.loc 1 434 0 is_stmt 1
 866 003c 104B     		ldr	r3, .L44+8
 867 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0040 032B     		cmp	r3, #3
 869 0042 01D0     		beq	.L41
 435:main.c        ****             return AdjustToTheLeft;
 870              		.loc 1 435 0
 871 0044 0323     		movs	r3, #3
 872 0046 12E0     		b	.L39
 873              	.L41:
 436:main.c        ****         }
 437:main.c        ****         if (previousDirection != AdjustToTheRight) {
 874              		.loc 1 437 0
 875 0048 0D4B     		ldr	r3, .L44+8
 876 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 877 004c 042B     		cmp	r3, #4
 878 004e 01D0     		beq	.L40
 438:main.c        ****             return AdjustToTheRight;    
 879              		.loc 1 438 0
 880 0050 0423     		movs	r3, #4
 881 0052 0CE0     		b	.L39
 882              	.L40:
 439:main.c        ****         }
 440:main.c        ****     }
 441:main.c        **** 
 442:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 443:main.c        ****     if (s5) {
 883              		.loc 1 443 0
 884 0054 084B     		ldr	r3, .L44
 885 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 886 0058 002B     		cmp	r3, #0
 887 005a 01D0     		beq	.L42
 444:main.c        ****         return AdjustToTheRight;    
 888              		.loc 1 444 0
 889 005c 0423     		movs	r3, #4
 890 005e 06E0     		b	.L39
 891              	.L42:
 445:main.c        ****     }
 446:main.c        ****     if (s6) {
 892              		.loc 1 446 0
 893 0060 064B     		ldr	r3, .L44+4
 894 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0064 002B     		cmp	r3, #0
 896 0066 01D0     		beq	.L43
 447:main.c        ****         return AdjustToTheLeft;    
 897              		.loc 1 447 0
 898 0068 0323     		movs	r3, #3
 899 006a 00E0     		b	.L39
 900              	.L43:
 448:main.c        ****     }
 449:main.c        ****    
 450:main.c        ****     // We should never actually get to this point
 451:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 452:main.c        ****     return Stop;
 901              		.loc 1 452 0
 902 006c 0523     		movs	r3, #5
 903              	.L39:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 25


 453:main.c        **** }
 904              		.loc 1 453 0
 905 006e 1846     		mov	r0, r3
 906 0070 BD46     		mov	sp, r7
 907              		.cfi_def_cfa_register 13
 908              		@ sp needed
 909 0072 80BC     		pop	{r7}
 910              		.cfi_restore 7
 911              		.cfi_def_cfa_offset 0
 912 0074 7047     		bx	lr
 913              	.L45:
 914 0076 00BF     		.align	2
 915              	.L44:
 916 0078 00000000 		.word	s5
 917 007c 00000000 		.word	s6
 918 0080 00000000 		.word	previousDirection
 919              		.cfi_endproc
 920              	.LFE73:
 921              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 922              		.global	__aeabi_fcmpge
 923              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 924              		.align	2
 925              		.global	GetMovementAccordingToInstruction
 926              		.thumb
 927              		.thumb_func
 928              		.type	GetMovementAccordingToInstruction, %function
 929              	GetMovementAccordingToInstruction:
 930              	.LFB74:
 454:main.c        **** 
 455:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 931              		.loc 1 455 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 82B0     		sub	sp, sp, #8
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 456:main.c        ****     float blocksize;
 457:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 943              		.loc 1 457 0
 944 0006 854B     		ldr	r3, .L80
 945 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 000a 002B     		cmp	r3, #0
 947 000c 03D0     		beq	.L47
 948              		.loc 1 457 0 is_stmt 0 discriminator 1
 949 000e 834B     		ldr	r3, .L80
 950 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 0012 012B     		cmp	r3, #1
 952 0014 03D1     		bne	.L48
 953              	.L47:
 458:main.c        ****         blocksize = yBlocksize;
 954              		.loc 1 458 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 26


 955 0016 824B     		ldr	r3, .L80+4
 956 0018 1B68     		ldr	r3, [r3]	@ float
 957 001a 7B60     		str	r3, [r7, #4]	@ float
 958 001c 02E0     		b	.L49
 959              	.L48:
 459:main.c        ****     } else {
 460:main.c        ****         blocksize = xBlocksize;
 960              		.loc 1 460 0
 961 001e 814B     		ldr	r3, .L80+8
 962 0020 1B68     		ldr	r3, [r3]	@ float
 963 0022 7B60     		str	r3, [r7, #4]	@ float
 964              	.L49:
 461:main.c        ****     }
 462:main.c        ****     
 463:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 464:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 465:main.c        ****         // OR an EVENT happens in the current instruction
 466:main.c        ****         // e.g. CurrentInstruction: GoForward 
 467:main.c        ****         //      S3 on BLACK
 468:main.c        ****         //      Check Ignore Count
 469:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 470:main.c        ****     
 471:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 965              		.loc 1 471 0
 966 0024 804B     		ldr	r3, .L80+12
 967 0026 1B78     		ldrb	r3, [r3]
 968 0028 FB70     		strb	r3, [r7, #3]
 472:main.c        ****     
 473:main.c        ****     switch (currentInstructionDirection) {
 969              		.loc 1 473 0
 970 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 971 002c 052B     		cmp	r3, #5
 972 002e 00F2F080 		bhi	.L50
 973 0032 01A2     		adr	r2, .L52
 974 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 975              		.p2align 2
 976              	.L52:
 977 0038 51000000 		.word	.L51+1
 978 003c 9D000000 		.word	.L53+1
 979 0040 1F010000 		.word	.L54+1
 980 0044 13020000 		.word	.L50+1
 981 0048 A1010000 		.word	.L55+1
 982 004c ED010000 		.word	.L56+1
 983              		.p2align 1
 984              	.L51:
 474:main.c        ****         case GoForward:
 475:main.c        ****             // if s3 or s4 go off, check ignoreCount
 476:main.c        ****             //      if ignoreCount == 0, go to next direction
 477:main.c        ****             //      return stop
 478:main.c        ****             if (!s3) {
 985              		.loc 1 478 0
 986 0050 764B     		ldr	r3, .L80+16
 987 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 988 0054 002B     		cmp	r3, #0
 989 0056 0CD1     		bne	.L57
 479:main.c        ****                 currentInstruction.ignoreL--; // decrement ignoreL
 990              		.loc 1 479 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 27


 991 0058 734B     		ldr	r3, .L80+12
 992 005a 5B68     		ldr	r3, [r3, #4]
 993 005c 013B     		subs	r3, r3, #1
 994 005e 724A     		ldr	r2, .L80+12
 995 0060 5360     		str	r3, [r2, #4]
 480:main.c        ****                 if (currentInstruction.ignoreL <= 0) {
 996              		.loc 1 480 0
 997 0062 714B     		ldr	r3, .L80+12
 998 0064 5B68     		ldr	r3, [r3, #4]
 999 0066 002B     		cmp	r3, #0
 1000 0068 03DC     		bgt	.L57
 481:main.c        ****                     MoveToNextInstruction();
 1001              		.loc 1 481 0
 1002 006a FFF7FEFF 		bl	MoveToNextInstruction
 482:main.c        ****                     return Stop;
 1003              		.loc 1 482 0
 1004 006e 0523     		movs	r3, #5
 1005 0070 D0E0     		b	.L58
 1006              	.L57:
 483:main.c        ****                 } 
 484:main.c        ****             }
 485:main.c        ****             
 486:main.c        ****             if (!s4) {
 1007              		.loc 1 486 0
 1008 0072 6F4B     		ldr	r3, .L80+20
 1009 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0076 002B     		cmp	r3, #0
 1011 0078 0CD1     		bne	.L59
 487:main.c        ****                 currentInstruction.ignoreR--; // decrement ignoreR
 1012              		.loc 1 487 0
 1013 007a 6B4B     		ldr	r3, .L80+12
 1014 007c 9B68     		ldr	r3, [r3, #8]
 1015 007e 013B     		subs	r3, r3, #1
 1016 0080 694A     		ldr	r2, .L80+12
 1017 0082 9360     		str	r3, [r2, #8]
 488:main.c        ****                 if (currentInstruction.ignoreR <= 0) {
 1018              		.loc 1 488 0
 1019 0084 684B     		ldr	r3, .L80+12
 1020 0086 9B68     		ldr	r3, [r3, #8]
 1021 0088 002B     		cmp	r3, #0
 1022 008a 03DC     		bgt	.L59
 489:main.c        ****                     MoveToNextInstruction();
 1023              		.loc 1 489 0
 1024 008c FFF7FEFF 		bl	MoveToNextInstruction
 490:main.c        ****                     return Stop;
 1025              		.loc 1 490 0
 1026 0090 0523     		movs	r3, #5
 1027 0092 BFE0     		b	.L58
 1028              	.L59:
 491:main.c        ****                 }
 492:main.c        ****             }
 493:main.c        ****             return ForwardCourseCorrection();
 1029              		.loc 1 493 0
 1030 0094 FFF7FEFF 		bl	ForwardCourseCorrection
 1031 0098 0346     		mov	r3, r0
 1032 009a BBE0     		b	.L58
 1033              	.L53:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 28


 494:main.c        ****             break;
 495:main.c        ****         case waitForLeftTurn:
 496:main.c        ****             // continue moving forward until s3 goes on black
 497:main.c        ****             // if we are turning left already
 498:main.c        ****                 // wait until s5 || s6 are on black
 499:main.c        ****                 // return stop
 500:main.c        ****             if (turnFinishedFlag) {
 1034              		.loc 1 500 0
 1035 009c 654B     		ldr	r3, .L80+24
 1036 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 00a0 002B     		cmp	r3, #0
 1038 00a2 11D0     		beq	.L60
 501:main.c        ****                 if (turnFinishedFlag) {
 1039              		.loc 1 501 0
 1040 00a4 634B     		ldr	r3, .L80+24
 1041 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1042 00a8 002B     		cmp	r3, #0
 1043 00aa 0DD0     		beq	.L60
 502:main.c        ****                     if (s3) {
 1044              		.loc 1 502 0
 1045 00ac 5F4B     		ldr	r3, .L80+16
 1046 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 00b0 002B     		cmp	r3, #0
 1048 00b2 05D0     		beq	.L61
 503:main.c        ****                         turnFinishedFlag = 0;
 1049              		.loc 1 503 0
 1050 00b4 5F4B     		ldr	r3, .L80+24
 1051 00b6 0022     		movs	r2, #0
 1052 00b8 1A70     		strb	r2, [r3]
 504:main.c        ****                         MoveToNextInstruction();    
 1053              		.loc 1 504 0
 1054 00ba FFF7FEFF 		bl	MoveToNextInstruction
 1055 00be 03E0     		b	.L60
 1056              	.L61:
 505:main.c        ****                     }
 506:main.c        ****                     else {
 507:main.c        ****                         return ForwardCourseCorrection();        
 1057              		.loc 1 507 0
 1058 00c0 FFF7FEFF 		bl	ForwardCourseCorrection
 1059 00c4 0346     		mov	r3, r0
 1060 00c6 A5E0     		b	.L58
 1061              	.L60:
 508:main.c        ****                     }
 509:main.c        ****                 }
 510:main.c        ****             }
 511:main.c        ****             
 512:main.c        ****             if (currentDirection == Stop) {
 1062              		.loc 1 512 0
 1063 00c8 5B4B     		ldr	r3, .L80+28
 1064 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1065 00cc 052B     		cmp	r3, #5
 1066 00ce 09D1     		bne	.L62
 513:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 514:main.c        ****                 if (stopBuffer <= 50) {
 1067              		.loc 1 514 0
 1068 00d0 5A4B     		ldr	r3, .L80+32
 1069 00d2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 29


 1070 00d4 322B     		cmp	r3, #50
 1071 00d6 01D8     		bhi	.L63
 515:main.c        ****                     return Stop;   
 1072              		.loc 1 515 0
 1073 00d8 0523     		movs	r3, #5
 1074 00da 9BE0     		b	.L58
 1075              	.L63:
 516:main.c        ****                 }
 517:main.c        ****                 return ForwardCourseCorrection();
 1076              		.loc 1 517 0
 1077 00dc FFF7FEFF 		bl	ForwardCourseCorrection
 1078 00e0 0346     		mov	r3, r0
 1079 00e2 97E0     		b	.L58
 1080              	.L62:
 518:main.c        ****             }
 519:main.c        ****          
 520:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 521:main.c        ****             if (currentDirection == TurnLeft) {
 1081              		.loc 1 521 0
 1082 00e4 544B     		ldr	r3, .L80+28
 1083 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1084 00e8 022B     		cmp	r3, #2
 1085 00ea 0ED1     		bne	.L64
 522:main.c        ****                 if (!s5 && !s6) {
 1086              		.loc 1 522 0
 1087 00ec 544B     		ldr	r3, .L80+36
 1088 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1089 00f0 002B     		cmp	r3, #0
 1090 00f2 08D1     		bne	.L65
 1091              		.loc 1 522 0 is_stmt 0 discriminator 1
 1092 00f4 534B     		ldr	r3, .L80+40
 1093 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1094 00f8 002B     		cmp	r3, #0
 1095 00fa 04D1     		bne	.L65
 523:main.c        ****                     turnFinishedFlag = 1;
 1096              		.loc 1 523 0 is_stmt 1
 1097 00fc 4D4B     		ldr	r3, .L80+24
 1098 00fe 0122     		movs	r2, #1
 1099 0100 1A70     		strb	r2, [r3]
 524:main.c        ****                     return Stop;
 1100              		.loc 1 524 0
 1101 0102 0523     		movs	r3, #5
 1102 0104 86E0     		b	.L58
 1103              	.L65:
 525:main.c        ****                 }
 526:main.c        ****                 else
 527:main.c        ****                 {
 528:main.c        ****                     return TurnLeft;
 1104              		.loc 1 528 0
 1105 0106 0223     		movs	r3, #2
 1106 0108 84E0     		b	.L58
 1107              	.L64:
 529:main.c        ****                 }
 530:main.c        ****             }
 531:main.c        ****             
 532:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 533:main.c        ****             if (!s3) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 30


 1108              		.loc 1 533 0
 1109 010a 484B     		ldr	r3, .L80+16
 1110 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1111 010e 002B     		cmp	r3, #0
 1112 0110 01D1     		bne	.L66
 534:main.c        ****                 return TurnLeft;
 1113              		.loc 1 534 0
 1114 0112 0223     		movs	r3, #2
 1115 0114 7EE0     		b	.L58
 1116              	.L66:
 535:main.c        ****             }
 536:main.c        ****             
 537:main.c        ****             // Otherwise, keep going forward
 538:main.c        ****             return ForwardCourseCorrection(); 
 1117              		.loc 1 538 0
 1118 0116 FFF7FEFF 		bl	ForwardCourseCorrection
 1119 011a 0346     		mov	r3, r0
 1120 011c 7AE0     		b	.L58
 1121              	.L54:
 539:main.c        ****             break;
 540:main.c        ****         case waitForRightTurn:
 541:main.c        ****             // continue moving forward until s4 goes on black
 542:main.c        ****             // if we are turning left already
 543:main.c        ****                 // wait until s5 || s6 are on black
 544:main.c        ****                 // return stop
 545:main.c        ****             if (turnFinishedFlag) {
 1122              		.loc 1 545 0
 1123 011e 454B     		ldr	r3, .L80+24
 1124 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 0122 002B     		cmp	r3, #0
 1126 0124 11D0     		beq	.L67
 546:main.c        ****                 if (turnFinishedFlag) {
 1127              		.loc 1 546 0
 1128 0126 434B     		ldr	r3, .L80+24
 1129 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1130 012a 002B     		cmp	r3, #0
 1131 012c 0DD0     		beq	.L67
 547:main.c        ****                     if (s3) {
 1132              		.loc 1 547 0
 1133 012e 3F4B     		ldr	r3, .L80+16
 1134 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 0132 002B     		cmp	r3, #0
 1136 0134 05D0     		beq	.L68
 548:main.c        ****                         turnFinishedFlag = 0;
 1137              		.loc 1 548 0
 1138 0136 3F4B     		ldr	r3, .L80+24
 1139 0138 0022     		movs	r2, #0
 1140 013a 1A70     		strb	r2, [r3]
 549:main.c        ****                         MoveToNextInstruction();    
 1141              		.loc 1 549 0
 1142 013c FFF7FEFF 		bl	MoveToNextInstruction
 1143 0140 03E0     		b	.L67
 1144              	.L68:
 550:main.c        ****                     }
 551:main.c        ****                     else {
 552:main.c        ****                         return ForwardCourseCorrection();        
 1145              		.loc 1 552 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 31


 1146 0142 FFF7FEFF 		bl	ForwardCourseCorrection
 1147 0146 0346     		mov	r3, r0
 1148 0148 64E0     		b	.L58
 1149              	.L67:
 553:main.c        ****                     }
 554:main.c        ****                 }
 555:main.c        ****             }
 556:main.c        ****             
 557:main.c        ****             if (currentDirection == Stop) {
 1150              		.loc 1 557 0
 1151 014a 3B4B     		ldr	r3, .L80+28
 1152 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1153 014e 052B     		cmp	r3, #5
 1154 0150 09D1     		bne	.L69
 558:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 559:main.c        ****                 if (stopBuffer <= 50) {
 1155              		.loc 1 559 0
 1156 0152 3A4B     		ldr	r3, .L80+32
 1157 0154 1B68     		ldr	r3, [r3]
 1158 0156 322B     		cmp	r3, #50
 1159 0158 01D8     		bhi	.L70
 560:main.c        ****                     return Stop;   
 1160              		.loc 1 560 0
 1161 015a 0523     		movs	r3, #5
 1162 015c 5AE0     		b	.L58
 1163              	.L70:
 561:main.c        ****                 }
 562:main.c        **** 
 563:main.c        ****                 return ForwardCourseCorrection();
 1164              		.loc 1 563 0
 1165 015e FFF7FEFF 		bl	ForwardCourseCorrection
 1166 0162 0346     		mov	r3, r0
 1167 0164 56E0     		b	.L58
 1168              	.L69:
 564:main.c        ****             }
 565:main.c        ****                       
 566:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 567:main.c        ****             if (currentDirection == TurnRight) {
 1169              		.loc 1 567 0
 1170 0166 344B     		ldr	r3, .L80+28
 1171 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1172 016a 012B     		cmp	r3, #1
 1173 016c 0ED1     		bne	.L71
 568:main.c        ****                 if (!s5 && !s6) {
 1174              		.loc 1 568 0
 1175 016e 344B     		ldr	r3, .L80+36
 1176 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 0172 002B     		cmp	r3, #0
 1178 0174 08D1     		bne	.L72
 1179              		.loc 1 568 0 is_stmt 0 discriminator 1
 1180 0176 334B     		ldr	r3, .L80+40
 1181 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182 017a 002B     		cmp	r3, #0
 1183 017c 04D1     		bne	.L72
 569:main.c        ****                     turnFinishedFlag = 1;
 1184              		.loc 1 569 0 is_stmt 1
 1185 017e 2D4B     		ldr	r3, .L80+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 32


 1186 0180 0122     		movs	r2, #1
 1187 0182 1A70     		strb	r2, [r3]
 570:main.c        ****                     return Stop;
 1188              		.loc 1 570 0
 1189 0184 0523     		movs	r3, #5
 1190 0186 45E0     		b	.L58
 1191              	.L72:
 571:main.c        ****                 }
 572:main.c        ****                 else
 573:main.c        ****                 {
 574:main.c        ****                     return TurnRight;
 1192              		.loc 1 574 0
 1193 0188 0123     		movs	r3, #1
 1194 018a 43E0     		b	.L58
 1195              	.L71:
 575:main.c        ****                 }
 576:main.c        ****             }
 577:main.c        ****             
 578:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 579:main.c        ****             if (!s4) {
 1196              		.loc 1 579 0
 1197 018c 284B     		ldr	r3, .L80+20
 1198 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 0190 002B     		cmp	r3, #0
 1200 0192 01D1     		bne	.L73
 580:main.c        ****                 return TurnRight;
 1201              		.loc 1 580 0
 1202 0194 0123     		movs	r3, #1
 1203 0196 3DE0     		b	.L58
 1204              	.L73:
 581:main.c        ****             }
 582:main.c        ****             
 583:main.c        ****             // Otherwise, keep going forward
 584:main.c        ****             return ForwardCourseCorrection(); 
 1205              		.loc 1 584 0
 1206 0198 FFF7FEFF 		bl	ForwardCourseCorrection
 1207 019c 0346     		mov	r3, r0
 1208 019e 39E0     		b	.L58
 1209              	.L55:
 585:main.c        ****             break;
 586:main.c        ****         case ForwardUntilTarget:
 587:main.c        ****             // Reset distance on first iteration of this instruction
 588:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1210              		.loc 1 588 0
 1211 01a0 294B     		ldr	r3, .L80+44
 1212 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 01a4 002B     		cmp	r3, #0
 1214 01a6 0ED1     		bne	.L74
 589:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1215              		.loc 1 589 0
 1216 01a8 274B     		ldr	r3, .L80+44
 1217 01aa 0122     		movs	r2, #1
 1218 01ac 1A70     		strb	r2, [r3]
 590:main.c        ****                 totalDistance = 0;
 1219              		.loc 1 590 0
 1220 01ae 274B     		ldr	r3, .L80+48
 1221 01b0 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 33


 1222 01b4 1A60     		str	r2, [r3]	@ float
 591:main.c        **** 
 592:main.c        ****                 blockSizeTotal = blocksize * 6;
 1223              		.loc 1 592 0
 1224 01b6 2649     		ldr	r1, .L80+52
 1225 01b8 7868     		ldr	r0, [r7, #4]	@ float
 1226 01ba FFF7FEFF 		bl	__aeabi_fmul
 1227 01be 0346     		mov	r3, r0
 1228 01c0 1A46     		mov	r2, r3
 1229 01c2 244B     		ldr	r3, .L80+56
 1230 01c4 1A60     		str	r2, [r3]	@ float
 1231              	.L74:
 593:main.c        ****             }
 594:main.c        ****             
 595:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 596:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1232              		.loc 1 596 0
 1233 01c6 214B     		ldr	r3, .L80+48
 1234 01c8 1A68     		ldr	r2, [r3]	@ float
 1235 01ca 224B     		ldr	r3, .L80+56
 1236 01cc 1B68     		ldr	r3, [r3]	@ float
 1237 01ce 1946     		mov	r1, r3
 1238 01d0 1046     		mov	r0, r2
 1239 01d2 FFF7FEFF 		bl	__aeabi_fcmpge
 1240 01d6 0346     		mov	r3, r0
 1241 01d8 002B     		cmp	r3, #0
 1242 01da 03D0     		beq	.L79
 597:main.c        ****                 // Get next instruction
 598:main.c        ****                 MoveToNextInstruction();
 1243              		.loc 1 598 0
 1244 01dc FFF7FEFF 		bl	MoveToNextInstruction
 599:main.c        ****                 return Stop;
 1245              		.loc 1 599 0
 1246 01e0 0523     		movs	r3, #5
 1247 01e2 17E0     		b	.L58
 1248              	.L79:
 600:main.c        ****             }
 601:main.c        ****             
 602:main.c        ****             return ForwardCourseCorrection();
 1249              		.loc 1 602 0
 1250 01e4 FFF7FEFF 		bl	ForwardCourseCorrection
 1251 01e8 0346     		mov	r3, r0
 1252 01ea 13E0     		b	.L58
 1253              	.L56:
 603:main.c        ****             break;
 604:main.c        ****         case StopAtTarget:
 605:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 606:main.c        ****             // Reset flags
 607:main.c        ****             totalDistance = 0;
 1254              		.loc 1 607 0
 1255 01ec 174B     		ldr	r3, .L80+48
 1256 01ee 4FF00002 		mov	r2, #0
 1257 01f2 1A60     		str	r2, [r3]	@ float
 608:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1258              		.loc 1 608 0
 1259 01f4 144B     		ldr	r3, .L80+44
 1260 01f6 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 34


 1261 01f8 1A70     		strb	r2, [r3]
 609:main.c        ****             blockSizeTotal = 0;
 1262              		.loc 1 609 0
 1263 01fa 164B     		ldr	r3, .L80+56
 1264 01fc 4FF00002 		mov	r2, #0
 1265 0200 1A60     		str	r2, [r3]	@ float
 610:main.c        ****             
 611:main.c        ****             if (stopBuffer <= 200) {
 1266              		.loc 1 611 0
 1267 0202 0E4B     		ldr	r3, .L80+32
 1268 0204 1B68     		ldr	r3, [r3]
 1269 0206 C82B     		cmp	r3, #200
 1270 0208 01D8     		bhi	.L77
 612:main.c        ****                 return Stop;    
 1271              		.loc 1 612 0
 1272 020a 0523     		movs	r3, #5
 1273 020c 02E0     		b	.L58
 1274              	.L77:
 613:main.c        ****             }
 614:main.c        ****             return TurnRight;
 1275              		.loc 1 614 0
 1276 020e 0123     		movs	r3, #1
 1277 0210 00E0     		b	.L58
 1278              	.L50:
 615:main.c        ****             break;
 616:main.c        ****         default:
 617:main.c        ****             return Stop;
 1279              		.loc 1 617 0
 1280 0212 0523     		movs	r3, #5
 1281              	.L58:
 618:main.c        ****             break;
 619:main.c        ****     }
 620:main.c        ****     return Stop;
 621:main.c        **** }
 1282              		.loc 1 621 0
 1283 0214 1846     		mov	r0, r3
 1284 0216 0837     		adds	r7, r7, #8
 1285              		.cfi_def_cfa_offset 8
 1286 0218 BD46     		mov	sp, r7
 1287              		.cfi_def_cfa_register 13
 1288              		@ sp needed
 1289 021a 80BD     		pop	{r7, pc}
 1290              	.L81:
 1291              		.align	2
 1292              	.L80:
 1293 021c 00000000 		.word	currentRobotOrientation
 1294 0220 00000000 		.word	yBlocksize
 1295 0224 00000000 		.word	xBlocksize
 1296 0228 00000000 		.word	currentInstruction
 1297 022c 00000000 		.word	s3
 1298 0230 00000000 		.word	s4
 1299 0234 00000000 		.word	turnFinishedFlag
 1300 0238 00000000 		.word	currentDirection
 1301 023c 00000000 		.word	stopBuffer
 1302 0240 00000000 		.word	s5
 1303 0244 00000000 		.word	s6
 1304 0248 00000000 		.word	forwardUntilTargetStartedFlag
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 35


 1305 024c 00000000 		.word	totalDistance
 1306 0250 0000C040 		.word	1086324736
 1307 0254 00000000 		.word	blockSizeTotal
 1308              		.cfi_endproc
 1309              	.LFE74:
 1310              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1311              		.global	__aeabi_i2f
 1312              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1313              		.align	2
 1314              		.global	CalculateDistanceToTravel
 1315              		.thumb
 1316              		.thumb_func
 1317              		.type	CalculateDistanceToTravel, %function
 1318              	CalculateDistanceToTravel:
 1319              	.LFB75:
 622:main.c        **** 
 623:main.c        **** // Calculate total blocksize to travel until target
 624:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1320              		.loc 1 624 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 40
 1323              		@ frame_needed = 1, uses_anonymous_args = 0
 1324 0000 80B5     		push	{r7, lr}
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 8AB0     		sub	sp, sp, #40
 1329              		.cfi_def_cfa_offset 48
 1330 0004 00AF     		add	r7, sp, #0
 1331              		.cfi_def_cfa_register 7
 1332 0006 7860     		str	r0, [r7, #4]	@ float
 625:main.c        ****     float totalBlockSize;
 626:main.c        ****     
 627:main.c        ****     // Check for Row, Col that target is 
 628:main.c        ****     int targetRow = food_list[0][0];
 1333              		.loc 1 628 0
 1334 0008 9D4B     		ldr	r3, .L127
 1335 000a 1B68     		ldr	r3, [r3]
 1336 000c 3B61     		str	r3, [r7, #16]
 629:main.c        ****     int targetCol = food_list[0][1];
 1337              		.loc 1 629 0
 1338 000e 9C4B     		ldr	r3, .L127
 1339 0010 5B68     		ldr	r3, [r3, #4]
 1340 0012 FB60     		str	r3, [r7, #12]
 630:main.c        ****     
 631:main.c        ****     int pathCount = 0;
 1341              		.loc 1 631 0
 1342 0014 0023     		movs	r3, #0
 1343 0016 7B62     		str	r3, [r7, #36]
 632:main.c        ****     
 633:main.c        ****     // Depending on the robot orientation
 634:main.c        ****     // count++ if row, col is 8
 635:main.c        ****     // count reset if row, col is 1 or 0
 636:main.c        ****     // save count if row, col is 9
 637:main.c        ****     switch (currentRobotOrientation) {
 1344              		.loc 1 637 0
 1345 0018 9A4B     		ldr	r3, .L127+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 36


 1346 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 001c 032B     		cmp	r3, #3
 1348 001e 00F21F81 		bhi	.L83
 1349 0022 01A2     		adr	r2, .L85
 1350 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1351              		.p2align 2
 1352              	.L85:
 1353 0028 39000000 		.word	.L84+1
 1354 002c C3000000 		.word	.L86+1
 1355 0030 4D010000 		.word	.L87+1
 1356 0034 D7010000 		.word	.L88+1
 1357              		.p2align 1
 1358              	.L84:
 1359              	.LBB3:
 638:main.c        ****         case Up:
 639:main.c        ****             // Column
 640:main.c        ****             // Start from Bottom (since we're facing up)
 641:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1360              		.loc 1 641 0
 1361 0038 0F23     		movs	r3, #15
 1362 003a 3B62     		str	r3, [r7, #32]
 1363 003c 3BE0     		b	.L89
 1364              	.L95:
 642:main.c        ****                 if (map[i][targetCol] == 9) {
 1365              		.loc 1 642 0
 1366 003e 9249     		ldr	r1, .L127+8
 1367 0040 3A6A     		ldr	r2, [r7, #32]
 1368 0042 1346     		mov	r3, r2
 1369 0044 DB00     		lsls	r3, r3, #3
 1370 0046 1344     		add	r3, r3, r2
 1371 0048 5B00     		lsls	r3, r3, #1
 1372 004a 1344     		add	r3, r3, r2
 1373 004c FA68     		ldr	r2, [r7, #12]
 1374 004e 1344     		add	r3, r3, r2
 1375 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1376 0054 092B     		cmp	r3, #9
 1377 0056 32D0     		beq	.L122
 643:main.c        ****                     break;    
 644:main.c        ****                 }
 645:main.c        ****                 if (map[i][targetCol] == 8) {
 1378              		.loc 1 645 0
 1379 0058 8B49     		ldr	r1, .L127+8
 1380 005a 3A6A     		ldr	r2, [r7, #32]
 1381 005c 1346     		mov	r3, r2
 1382 005e DB00     		lsls	r3, r3, #3
 1383 0060 1344     		add	r3, r3, r2
 1384 0062 5B00     		lsls	r3, r3, #1
 1385 0064 1344     		add	r3, r3, r2
 1386 0066 FA68     		ldr	r2, [r7, #12]
 1387 0068 1344     		add	r3, r3, r2
 1388 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1389 006e 082B     		cmp	r3, #8
 1390 0070 02D1     		bne	.L92
 646:main.c        ****                     pathCount++;    
 1391              		.loc 1 646 0
 1392 0072 7B6A     		ldr	r3, [r7, #36]
 1393 0074 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 37


 1394 0076 7B62     		str	r3, [r7, #36]
 1395              	.L92:
 647:main.c        ****                 }
 648:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1396              		.loc 1 648 0
 1397 0078 8349     		ldr	r1, .L127+8
 1398 007a 3A6A     		ldr	r2, [r7, #32]
 1399 007c 1346     		mov	r3, r2
 1400 007e DB00     		lsls	r3, r3, #3
 1401 0080 1344     		add	r3, r3, r2
 1402 0082 5B00     		lsls	r3, r3, #1
 1403 0084 1344     		add	r3, r3, r2
 1404 0086 FA68     		ldr	r2, [r7, #12]
 1405 0088 1344     		add	r3, r3, r2
 1406 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1407 008e 002B     		cmp	r3, #0
 1408 0090 0CD0     		beq	.L93
 1409              		.loc 1 648 0 is_stmt 0 discriminator 1
 1410 0092 7D49     		ldr	r1, .L127+8
 1411 0094 3A6A     		ldr	r2, [r7, #32]
 1412 0096 1346     		mov	r3, r2
 1413 0098 DB00     		lsls	r3, r3, #3
 1414 009a 1344     		add	r3, r3, r2
 1415 009c 5B00     		lsls	r3, r3, #1
 1416 009e 1344     		add	r3, r3, r2
 1417 00a0 FA68     		ldr	r2, [r7, #12]
 1418 00a2 1344     		add	r3, r3, r2
 1419 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1420 00a8 012B     		cmp	r3, #1
 1421 00aa 01D1     		bne	.L94
 1422              	.L93:
 649:main.c        ****                     pathCount = 0;
 1423              		.loc 1 649 0 is_stmt 1
 1424 00ac 0023     		movs	r3, #0
 1425 00ae 7B62     		str	r3, [r7, #36]
 1426              	.L94:
 641:main.c        ****                 if (map[i][targetCol] == 9) {
 1427              		.loc 1 641 0 discriminator 2
 1428 00b0 3B6A     		ldr	r3, [r7, #32]
 1429 00b2 013B     		subs	r3, r3, #1
 1430 00b4 3B62     		str	r3, [r7, #32]
 1431              	.L89:
 641:main.c        ****                 if (map[i][targetCol] == 9) {
 1432              		.loc 1 641 0 is_stmt 0 discriminator 1
 1433 00b6 3B6A     		ldr	r3, [r7, #32]
 1434 00b8 002B     		cmp	r3, #0
 1435 00ba C0DA     		bge	.L95
 1436              	.LBE3:
 650:main.c        ****                 }
 651:main.c        ****             }
 652:main.c        ****             break;
 1437              		.loc 1 652 0 is_stmt 1
 1438 00bc D0E0     		b	.L83
 1439              	.L122:
 1440              	.LBB4:
 643:main.c        ****                 }
 1441              		.loc 1 643 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 38


 1442 00be 00BF     		nop
 1443              	.LBE4:
 1444              		.loc 1 652 0
 1445 00c0 CEE0     		b	.L83
 1446              	.L86:
 1447              	.LBB5:
 653:main.c        ****         case Down:
 654:main.c        ****             // Target Column, Check Row
 655:main.c        ****             // Start from Top
 656:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1448              		.loc 1 656 0
 1449 00c2 0023     		movs	r3, #0
 1450 00c4 FB61     		str	r3, [r7, #28]
 1451 00c6 3BE0     		b	.L96
 1452              	.L102:
 657:main.c        ****                 if (map[i][targetCol] == 9) {
 1453              		.loc 1 657 0
 1454 00c8 6F49     		ldr	r1, .L127+8
 1455 00ca FA69     		ldr	r2, [r7, #28]
 1456 00cc 1346     		mov	r3, r2
 1457 00ce DB00     		lsls	r3, r3, #3
 1458 00d0 1344     		add	r3, r3, r2
 1459 00d2 5B00     		lsls	r3, r3, #1
 1460 00d4 1344     		add	r3, r3, r2
 1461 00d6 FA68     		ldr	r2, [r7, #12]
 1462 00d8 1344     		add	r3, r3, r2
 1463 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1464 00de 092B     		cmp	r3, #9
 1465 00e0 32D0     		beq	.L123
 658:main.c        ****                     break;    
 659:main.c        ****                 }
 660:main.c        ****                 if (map[i][targetCol] == 8) {
 1466              		.loc 1 660 0
 1467 00e2 6949     		ldr	r1, .L127+8
 1468 00e4 FA69     		ldr	r2, [r7, #28]
 1469 00e6 1346     		mov	r3, r2
 1470 00e8 DB00     		lsls	r3, r3, #3
 1471 00ea 1344     		add	r3, r3, r2
 1472 00ec 5B00     		lsls	r3, r3, #1
 1473 00ee 1344     		add	r3, r3, r2
 1474 00f0 FA68     		ldr	r2, [r7, #12]
 1475 00f2 1344     		add	r3, r3, r2
 1476 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1477 00f8 082B     		cmp	r3, #8
 1478 00fa 02D1     		bne	.L99
 661:main.c        ****                     pathCount++;    
 1479              		.loc 1 661 0
 1480 00fc 7B6A     		ldr	r3, [r7, #36]
 1481 00fe 0133     		adds	r3, r3, #1
 1482 0100 7B62     		str	r3, [r7, #36]
 1483              	.L99:
 662:main.c        ****                 }
 663:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1484              		.loc 1 663 0
 1485 0102 6149     		ldr	r1, .L127+8
 1486 0104 FA69     		ldr	r2, [r7, #28]
 1487 0106 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 39


 1488 0108 DB00     		lsls	r3, r3, #3
 1489 010a 1344     		add	r3, r3, r2
 1490 010c 5B00     		lsls	r3, r3, #1
 1491 010e 1344     		add	r3, r3, r2
 1492 0110 FA68     		ldr	r2, [r7, #12]
 1493 0112 1344     		add	r3, r3, r2
 1494 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1495 0118 002B     		cmp	r3, #0
 1496 011a 0CD0     		beq	.L100
 1497              		.loc 1 663 0 is_stmt 0 discriminator 1
 1498 011c 5A49     		ldr	r1, .L127+8
 1499 011e FA69     		ldr	r2, [r7, #28]
 1500 0120 1346     		mov	r3, r2
 1501 0122 DB00     		lsls	r3, r3, #3
 1502 0124 1344     		add	r3, r3, r2
 1503 0126 5B00     		lsls	r3, r3, #1
 1504 0128 1344     		add	r3, r3, r2
 1505 012a FA68     		ldr	r2, [r7, #12]
 1506 012c 1344     		add	r3, r3, r2
 1507 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1508 0132 012B     		cmp	r3, #1
 1509 0134 01D1     		bne	.L101
 1510              	.L100:
 664:main.c        ****                     pathCount = 0;
 1511              		.loc 1 664 0 is_stmt 1
 1512 0136 0023     		movs	r3, #0
 1513 0138 7B62     		str	r3, [r7, #36]
 1514              	.L101:
 656:main.c        ****                 if (map[i][targetCol] == 9) {
 1515              		.loc 1 656 0 discriminator 2
 1516 013a FB69     		ldr	r3, [r7, #28]
 1517 013c 0133     		adds	r3, r3, #1
 1518 013e FB61     		str	r3, [r7, #28]
 1519              	.L96:
 656:main.c        ****                 if (map[i][targetCol] == 9) {
 1520              		.loc 1 656 0 is_stmt 0 discriminator 1
 1521 0140 FB69     		ldr	r3, [r7, #28]
 1522 0142 0E2B     		cmp	r3, #14
 1523 0144 C0DD     		ble	.L102
 1524              	.LBE5:
 665:main.c        ****                 }
 666:main.c        ****             }
 667:main.c        ****             break;
 1525              		.loc 1 667 0 is_stmt 1
 1526 0146 8BE0     		b	.L83
 1527              	.L123:
 1528              	.LBB6:
 658:main.c        ****                 }
 1529              		.loc 1 658 0
 1530 0148 00BF     		nop
 1531              	.LBE6:
 1532              		.loc 1 667 0
 1533 014a 89E0     		b	.L83
 1534              	.L87:
 1535              	.LBB7:
 668:main.c        ****         case Left:
 669:main.c        ****             // Target Row, Check Col
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 40


 670:main.c        ****             // Start from Right
 671:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1536              		.loc 1 671 0
 1537 014c 1323     		movs	r3, #19
 1538 014e BB61     		str	r3, [r7, #24]
 1539 0150 3BE0     		b	.L103
 1540              	.L109:
 672:main.c        ****                 if (map[targetRow][i] == 9) {
 1541              		.loc 1 672 0
 1542 0152 4D49     		ldr	r1, .L127+8
 1543 0154 3A69     		ldr	r2, [r7, #16]
 1544 0156 1346     		mov	r3, r2
 1545 0158 DB00     		lsls	r3, r3, #3
 1546 015a 1344     		add	r3, r3, r2
 1547 015c 5B00     		lsls	r3, r3, #1
 1548 015e 1344     		add	r3, r3, r2
 1549 0160 BA69     		ldr	r2, [r7, #24]
 1550 0162 1344     		add	r3, r3, r2
 1551 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1552 0168 092B     		cmp	r3, #9
 1553 016a 32D0     		beq	.L124
 673:main.c        ****                     break;    
 674:main.c        ****                 }
 675:main.c        ****                 if (map[targetRow][i] == 8) {
 1554              		.loc 1 675 0
 1555 016c 4649     		ldr	r1, .L127+8
 1556 016e 3A69     		ldr	r2, [r7, #16]
 1557 0170 1346     		mov	r3, r2
 1558 0172 DB00     		lsls	r3, r3, #3
 1559 0174 1344     		add	r3, r3, r2
 1560 0176 5B00     		lsls	r3, r3, #1
 1561 0178 1344     		add	r3, r3, r2
 1562 017a BA69     		ldr	r2, [r7, #24]
 1563 017c 1344     		add	r3, r3, r2
 1564 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1565 0182 082B     		cmp	r3, #8
 1566 0184 02D1     		bne	.L106
 676:main.c        ****                     pathCount++;    
 1567              		.loc 1 676 0
 1568 0186 7B6A     		ldr	r3, [r7, #36]
 1569 0188 0133     		adds	r3, r3, #1
 1570 018a 7B62     		str	r3, [r7, #36]
 1571              	.L106:
 677:main.c        ****                 }
 678:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1572              		.loc 1 678 0
 1573 018c 3E49     		ldr	r1, .L127+8
 1574 018e 3A69     		ldr	r2, [r7, #16]
 1575 0190 1346     		mov	r3, r2
 1576 0192 DB00     		lsls	r3, r3, #3
 1577 0194 1344     		add	r3, r3, r2
 1578 0196 5B00     		lsls	r3, r3, #1
 1579 0198 1344     		add	r3, r3, r2
 1580 019a BA69     		ldr	r2, [r7, #24]
 1581 019c 1344     		add	r3, r3, r2
 1582 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1583 01a2 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 41


 1584 01a4 0CD0     		beq	.L107
 1585              		.loc 1 678 0 is_stmt 0 discriminator 1
 1586 01a6 3849     		ldr	r1, .L127+8
 1587 01a8 BA69     		ldr	r2, [r7, #24]
 1588 01aa 1346     		mov	r3, r2
 1589 01ac DB00     		lsls	r3, r3, #3
 1590 01ae 1344     		add	r3, r3, r2
 1591 01b0 5B00     		lsls	r3, r3, #1
 1592 01b2 1344     		add	r3, r3, r2
 1593 01b4 FA68     		ldr	r2, [r7, #12]
 1594 01b6 1344     		add	r3, r3, r2
 1595 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1596 01bc 012B     		cmp	r3, #1
 1597 01be 01D1     		bne	.L108
 1598              	.L107:
 679:main.c        ****                     pathCount = 0;
 1599              		.loc 1 679 0 is_stmt 1
 1600 01c0 0023     		movs	r3, #0
 1601 01c2 7B62     		str	r3, [r7, #36]
 1602              	.L108:
 671:main.c        ****                 if (map[targetRow][i] == 9) {
 1603              		.loc 1 671 0 discriminator 2
 1604 01c4 BB69     		ldr	r3, [r7, #24]
 1605 01c6 013B     		subs	r3, r3, #1
 1606 01c8 BB61     		str	r3, [r7, #24]
 1607              	.L103:
 671:main.c        ****                 if (map[targetRow][i] == 9) {
 1608              		.loc 1 671 0 is_stmt 0 discriminator 1
 1609 01ca BB69     		ldr	r3, [r7, #24]
 1610 01cc 002B     		cmp	r3, #0
 1611 01ce C0DA     		bge	.L109
 1612              	.LBE7:
 680:main.c        ****                 }
 681:main.c        ****             }
 682:main.c        ****             break;
 1613              		.loc 1 682 0 is_stmt 1
 1614 01d0 46E0     		b	.L83
 1615              	.L124:
 1616              	.LBB8:
 673:main.c        ****                 }
 1617              		.loc 1 673 0
 1618 01d2 00BF     		nop
 1619              	.LBE8:
 1620              		.loc 1 682 0
 1621 01d4 44E0     		b	.L83
 1622              	.L88:
 1623              	.LBB9:
 683:main.c        ****         
 684:main.c        ****         case Right:
 685:main.c        ****             // Target Row, Check Col
 686:main.c        ****             // Start from Left
 687:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 1624              		.loc 1 687 0
 1625 01d6 0023     		movs	r3, #0
 1626 01d8 7B61     		str	r3, [r7, #20]
 1627 01da 3BE0     		b	.L110
 1628              	.L116:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 42


 688:main.c        ****                 if (map[targetRow][i] == 9) {
 1629              		.loc 1 688 0
 1630 01dc 2A49     		ldr	r1, .L127+8
 1631 01de 3A69     		ldr	r2, [r7, #16]
 1632 01e0 1346     		mov	r3, r2
 1633 01e2 DB00     		lsls	r3, r3, #3
 1634 01e4 1344     		add	r3, r3, r2
 1635 01e6 5B00     		lsls	r3, r3, #1
 1636 01e8 1344     		add	r3, r3, r2
 1637 01ea 7A69     		ldr	r2, [r7, #20]
 1638 01ec 1344     		add	r3, r3, r2
 1639 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1640 01f2 092B     		cmp	r3, #9
 1641 01f4 32D0     		beq	.L125
 689:main.c        ****                     break;    
 690:main.c        ****                 }
 691:main.c        ****                 if (map[targetRow][i] == 8) {
 1642              		.loc 1 691 0
 1643 01f6 2449     		ldr	r1, .L127+8
 1644 01f8 3A69     		ldr	r2, [r7, #16]
 1645 01fa 1346     		mov	r3, r2
 1646 01fc DB00     		lsls	r3, r3, #3
 1647 01fe 1344     		add	r3, r3, r2
 1648 0200 5B00     		lsls	r3, r3, #1
 1649 0202 1344     		add	r3, r3, r2
 1650 0204 7A69     		ldr	r2, [r7, #20]
 1651 0206 1344     		add	r3, r3, r2
 1652 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1653 020c 082B     		cmp	r3, #8
 1654 020e 02D1     		bne	.L113
 692:main.c        ****                     pathCount++;    
 1655              		.loc 1 692 0
 1656 0210 7B6A     		ldr	r3, [r7, #36]
 1657 0212 0133     		adds	r3, r3, #1
 1658 0214 7B62     		str	r3, [r7, #36]
 1659              	.L113:
 693:main.c        ****                 }
 694:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1660              		.loc 1 694 0
 1661 0216 1C49     		ldr	r1, .L127+8
 1662 0218 3A69     		ldr	r2, [r7, #16]
 1663 021a 1346     		mov	r3, r2
 1664 021c DB00     		lsls	r3, r3, #3
 1665 021e 1344     		add	r3, r3, r2
 1666 0220 5B00     		lsls	r3, r3, #1
 1667 0222 1344     		add	r3, r3, r2
 1668 0224 7A69     		ldr	r2, [r7, #20]
 1669 0226 1344     		add	r3, r3, r2
 1670 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1671 022c 002B     		cmp	r3, #0
 1672 022e 0CD0     		beq	.L114
 1673              		.loc 1 694 0 is_stmt 0 discriminator 1
 1674 0230 1549     		ldr	r1, .L127+8
 1675 0232 7A69     		ldr	r2, [r7, #20]
 1676 0234 1346     		mov	r3, r2
 1677 0236 DB00     		lsls	r3, r3, #3
 1678 0238 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 43


 1679 023a 5B00     		lsls	r3, r3, #1
 1680 023c 1344     		add	r3, r3, r2
 1681 023e FA68     		ldr	r2, [r7, #12]
 1682 0240 1344     		add	r3, r3, r2
 1683 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1684 0246 012B     		cmp	r3, #1
 1685 0248 01D1     		bne	.L115
 1686              	.L114:
 695:main.c        ****                     pathCount = 0;
 1687              		.loc 1 695 0 is_stmt 1
 1688 024a 0023     		movs	r3, #0
 1689 024c 7B62     		str	r3, [r7, #36]
 1690              	.L115:
 687:main.c        ****                 if (map[targetRow][i] == 9) {
 1691              		.loc 1 687 0 discriminator 2
 1692 024e 7B69     		ldr	r3, [r7, #20]
 1693 0250 0133     		adds	r3, r3, #1
 1694 0252 7B61     		str	r3, [r7, #20]
 1695              	.L110:
 687:main.c        ****                 if (map[targetRow][i] == 9) {
 1696              		.loc 1 687 0 is_stmt 0 discriminator 1
 1697 0254 7B69     		ldr	r3, [r7, #20]
 1698 0256 122B     		cmp	r3, #18
 1699 0258 C0DD     		ble	.L116
 1700              	.LBE9:
 696:main.c        ****                 }
 697:main.c        **** 
 698:main.c        ****             }
 699:main.c        ****             break;
 1701              		.loc 1 699 0 is_stmt 1
 1702 025a 00E0     		b	.L126
 1703              	.L125:
 1704              	.LBB10:
 689:main.c        ****                 }
 1705              		.loc 1 689 0
 1706 025c 00BF     		nop
 1707              	.L126:
 1708              	.LBE10:
 1709              		.loc 1 699 0
 1710 025e 00BF     		nop
 1711              	.L83:
 700:main.c        ****         
 701:main.c        ****     }
 702:main.c        ****     totalBlockSize = blockSize * pathCount;
 1712              		.loc 1 702 0
 1713 0260 786A     		ldr	r0, [r7, #36]
 1714 0262 FFF7FEFF 		bl	__aeabi_i2f
 1715 0266 0346     		mov	r3, r0
 1716 0268 7968     		ldr	r1, [r7, #4]	@ float
 1717 026a 1846     		mov	r0, r3
 1718 026c FFF7FEFF 		bl	__aeabi_fmul
 1719 0270 0346     		mov	r3, r0
 1720 0272 BB60     		str	r3, [r7, #8]	@ float
 703:main.c        ****     return totalBlockSize;
 1721              		.loc 1 703 0
 1722 0274 BB68     		ldr	r3, [r7, #8]	@ float
 704:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 44


 1723              		.loc 1 704 0
 1724 0276 1846     		mov	r0, r3
 1725 0278 2837     		adds	r7, r7, #40
 1726              		.cfi_def_cfa_offset 8
 1727 027a BD46     		mov	sp, r7
 1728              		.cfi_def_cfa_register 13
 1729              		@ sp needed
 1730 027c 80BD     		pop	{r7, pc}
 1731              	.L128:
 1732 027e 00BF     		.align	2
 1733              	.L127:
 1734 0280 00000000 		.word	food_list
 1735 0284 00000000 		.word	currentRobotOrientation
 1736 0288 00000000 		.word	map
 1737              		.cfi_endproc
 1738              	.LFE75:
 1739              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 1740              		.section	.text.MoveToNextInstruction,"ax",%progbits
 1741              		.align	2
 1742              		.global	MoveToNextInstruction
 1743              		.thumb
 1744              		.thumb_func
 1745              		.type	MoveToNextInstruction, %function
 1746              	MoveToNextInstruction:
 1747              	.LFB76:
 705:main.c        **** 
 706:main.c        **** // get next instruction
 707:main.c        **** void MoveToNextInstruction() {
 1748              		.loc 1 707 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753 0000 80B4     		push	{r7}
 1754              		.cfi_def_cfa_offset 4
 1755              		.cfi_offset 7, -4
 1756 0002 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 708:main.c        ****     instructionIndex++;
 1758              		.loc 1 708 0
 1759 0004 044B     		ldr	r3, .L130
 1760 0006 1B68     		ldr	r3, [r3]
 1761 0008 0133     		adds	r3, r3, #1
 1762 000a 034A     		ldr	r2, .L130
 1763 000c 1360     		str	r3, [r2]
 709:main.c        **** }
 1764              		.loc 1 709 0
 1765 000e 00BF     		nop
 1766 0010 BD46     		mov	sp, r7
 1767              		.cfi_def_cfa_register 13
 1768              		@ sp needed
 1769 0012 80BC     		pop	{r7}
 1770              		.cfi_restore 7
 1771              		.cfi_def_cfa_offset 0
 1772 0014 7047     		bx	lr
 1773              	.L131:
 1774 0016 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 45


 1775              	.L130:
 1776 0018 00000000 		.word	instructionIndex
 1777              		.cfi_endproc
 1778              	.LFE76:
 1779              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 1780              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 1781              		.align	2
 1782              		.global	GetInstructionAtIndex
 1783              		.thumb
 1784              		.thumb_func
 1785              		.type	GetInstructionAtIndex, %function
 1786              	GetInstructionAtIndex:
 1787              	.LFB77:
 710:main.c        **** 
 711:main.c        **** 
 712:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
 1788              		.loc 1 712 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 32
 1791              		@ frame_needed = 1, uses_anonymous_args = 0
 1792              		@ link register save eliminated.
 1793 0000 90B4     		push	{r4, r7}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 4, -8
 1796              		.cfi_offset 7, -4
 1797 0002 88B0     		sub	sp, sp, #32
 1798              		.cfi_def_cfa_offset 40
 1799 0004 00AF     		add	r7, sp, #0
 1800              		.cfi_def_cfa_register 7
 1801 0006 F860     		str	r0, [r7, #12]
 1802 0008 B960     		str	r1, [r7, #8]
 1803 000a 7A60     		str	r2, [r7, #4]
 1804 000c 3B60     		str	r3, [r7]
 1805              	.LBB11:
 713:main.c        ****     Instruction nextInstruction;
 714:main.c        ****     // input is list of instructions and robot will react accordingly
 715:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 1806              		.loc 1 715 0
 1807 000e 3B68     		ldr	r3, [r7]
 1808 0010 FB61     		str	r3, [r7, #28]
 1809 0012 36E0     		b	.L133
 1810              	.L136:
 716:main.c        ****         if(instructionList[i].direction != Skip) {
 1811              		.loc 1 716 0
 1812 0014 FA69     		ldr	r2, [r7, #28]
 1813 0016 1346     		mov	r3, r2
 1814 0018 5B00     		lsls	r3, r3, #1
 1815 001a 1344     		add	r3, r3, r2
 1816 001c 9B00     		lsls	r3, r3, #2
 1817 001e 1A46     		mov	r2, r3
 1818 0020 7B68     		ldr	r3, [r7, #4]
 1819 0022 1344     		add	r3, r3, r2
 1820 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1821 0026 062B     		cmp	r3, #6
 1822 0028 26D0     		beq	.L134
 717:main.c        ****             nextInstruction.direction = instructionList[i].direction;
 1823              		.loc 1 717 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 46


 1824 002a FA69     		ldr	r2, [r7, #28]
 1825 002c 1346     		mov	r3, r2
 1826 002e 5B00     		lsls	r3, r3, #1
 1827 0030 1344     		add	r3, r3, r2
 1828 0032 9B00     		lsls	r3, r3, #2
 1829 0034 1A46     		mov	r2, r3
 1830 0036 7B68     		ldr	r3, [r7, #4]
 1831 0038 1344     		add	r3, r3, r2
 1832 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1833 003c 3B74     		strb	r3, [r7, #16]
 718:main.c        ****             nextInstruction.ignoreL = instructionList[i].ignoreL;
 1834              		.loc 1 718 0
 1835 003e FA69     		ldr	r2, [r7, #28]
 1836 0040 1346     		mov	r3, r2
 1837 0042 5B00     		lsls	r3, r3, #1
 1838 0044 1344     		add	r3, r3, r2
 1839 0046 9B00     		lsls	r3, r3, #2
 1840 0048 1A46     		mov	r2, r3
 1841 004a 7B68     		ldr	r3, [r7, #4]
 1842 004c 1344     		add	r3, r3, r2
 1843 004e 5B68     		ldr	r3, [r3, #4]
 1844 0050 7B61     		str	r3, [r7, #20]
 719:main.c        ****             nextInstruction.ignoreR = instructionList[i].ignoreR;
 1845              		.loc 1 719 0
 1846 0052 FA69     		ldr	r2, [r7, #28]
 1847 0054 1346     		mov	r3, r2
 1848 0056 5B00     		lsls	r3, r3, #1
 1849 0058 1344     		add	r3, r3, r2
 1850 005a 9B00     		lsls	r3, r3, #2
 1851 005c 1A46     		mov	r2, r3
 1852 005e 7B68     		ldr	r3, [r7, #4]
 1853 0060 1344     		add	r3, r3, r2
 1854 0062 9B68     		ldr	r3, [r3, #8]
 1855 0064 BB61     		str	r3, [r7, #24]
 720:main.c        ****             return nextInstruction; // return next instruction and parameters
 1856              		.loc 1 720 0
 1857 0066 FB68     		ldr	r3, [r7, #12]
 1858 0068 1C46     		mov	r4, r3
 1859 006a 07F11003 		add	r3, r7, #16
 1860 006e 93E80700 		ldmia	r3, {r0, r1, r2}
 1861 0072 84E80700 		stmia	r4, {r0, r1, r2}
 1862 0076 10E0     		b	.L132
 1863              	.L134:
 721:main.c        ****         }
 722:main.c        ****         instructionIndex = i; // update instructionIndex = i;
 1864              		.loc 1 722 0 discriminator 2
 1865 0078 FB69     		ldr	r3, [r7, #28]
 1866 007a 3B60     		str	r3, [r7]
 715:main.c        ****         if(instructionList[i].direction != Skip) {
 1867              		.loc 1 715 0 discriminator 2
 1868 007c FB69     		ldr	r3, [r7, #28]
 1869 007e 0133     		adds	r3, r3, #1
 1870 0080 FB61     		str	r3, [r7, #28]
 1871              	.L133:
 715:main.c        ****         if(instructionList[i].direction != Skip) {
 1872              		.loc 1 715 0 is_stmt 0 discriminator 1
 1873 0082 FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 47


 1874 0084 BB68     		ldr	r3, [r7, #8]
 1875 0086 9A42     		cmp	r2, r3
 1876 0088 C4DB     		blt	.L136
 1877              	.LBE11:
 723:main.c        ****     }
 724:main.c        ****     return nextInstruction;
 1878              		.loc 1 724 0 is_stmt 1
 1879 008a FB68     		ldr	r3, [r7, #12]
 1880 008c 1C46     		mov	r4, r3
 1881 008e 07F11003 		add	r3, r7, #16
 1882 0092 93E80700 		ldmia	r3, {r0, r1, r2}
 1883 0096 84E80700 		stmia	r4, {r0, r1, r2}
 1884              	.L132:
 725:main.c        **** }
 1885              		.loc 1 725 0
 1886 009a F868     		ldr	r0, [r7, #12]
 1887 009c 2037     		adds	r7, r7, #32
 1888              		.cfi_def_cfa_offset 8
 1889 009e BD46     		mov	sp, r7
 1890              		.cfi_def_cfa_register 13
 1891              		@ sp needed
 1892 00a0 90BC     		pop	{r4, r7}
 1893              		.cfi_restore 7
 1894              		.cfi_restore 4
 1895              		.cfi_def_cfa_offset 0
 1896 00a2 7047     		bx	lr
 1897              		.cfi_endproc
 1898              	.LFE77:
 1899              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 1900              		.section	.text.SetRobotMovement,"ax",%progbits
 1901              		.align	2
 1902              		.global	SetRobotMovement
 1903              		.thumb
 1904              		.thumb_func
 1905              		.type	SetRobotMovement, %function
 1906              	SetRobotMovement:
 1907              	.LFB78:
 726:main.c        **** 
 727:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 728:main.c        **** void SetRobotMovement() {
 1908              		.loc 1 728 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 16
 1911              		@ frame_needed = 1, uses_anonymous_args = 0
 1912 0000 90B5     		push	{r4, r7, lr}
 1913              		.cfi_def_cfa_offset 12
 1914              		.cfi_offset 4, -12
 1915              		.cfi_offset 7, -8
 1916              		.cfi_offset 14, -4
 1917 0002 85B0     		sub	sp, sp, #20
 1918              		.cfi_def_cfa_offset 32
 1919 0004 00AF     		add	r7, sp, #0
 1920              		.cfi_def_cfa_register 7
 729:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList, instructionIndex); // get
 1921              		.loc 1 729 0
 1922 0006 294B     		ldr	r3, .L153
 1923 0008 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 48


 1924 000a 294B     		ldr	r3, .L153+4
 1925 000c 1A68     		ldr	r2, [r3]
 1926 000e 294B     		ldr	r3, .L153+8
 1927 0010 1B68     		ldr	r3, [r3]
 1928 0012 294C     		ldr	r4, .L153+12
 1929 0014 3846     		mov	r0, r7
 1930 0016 FFF7FEFF 		bl	GetInstructionAtIndex
 1931 001a 3B46     		mov	r3, r7
 1932 001c 93E80700 		ldmia	r3, {r0, r1, r2}
 1933 0020 84E80700 		stmia	r4, {r0, r1, r2}
 730:main.c        ****     previousDirection = currentDirection;
 1934              		.loc 1 730 0
 1935 0024 254B     		ldr	r3, .L153+16
 1936 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1937 0028 254B     		ldr	r3, .L153+20
 1938 002a 1A70     		strb	r2, [r3]
 731:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 1939              		.loc 1 731 0
 1940 002c FFF7FEFF 		bl	GetMovementAccordingToInstruction
 1941 0030 0346     		mov	r3, r0
 1942 0032 1A46     		mov	r2, r3
 1943 0034 214B     		ldr	r3, .L153+16
 1944 0036 1A70     		strb	r2, [r3]
 732:main.c        ****     // move robot depending on sensors
 733:main.c        ****     switch (currentDirection) {
 1945              		.loc 1 733 0
 1946 0038 204B     		ldr	r3, .L153+16
 1947 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1948 003c 092B     		cmp	r3, #9
 1949 003e 30D8     		bhi	.L151
 1950 0040 01A2     		adr	r2, .L141
 1951 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1952 0046 00BF     		.p2align 2
 1953              	.L141:
 1954 0048 71000000 		.word	.L140+1
 1955 004c 77000000 		.word	.L142+1
 1956 0050 7D000000 		.word	.L143+1
 1957 0054 89000000 		.word	.L144+1
 1958 0058 83000000 		.word	.L145+1
 1959 005c 8F000000 		.word	.L146+1
 1960 0060 A1000000 		.word	.L152+1
 1961 0064 A1000000 		.word	.L152+1
 1962 0068 95000000 		.word	.L149+1
 1963 006c 9B000000 		.word	.L150+1
 1964              		.p2align 1
 1965              	.L140:
 734:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 735:main.c        ****         case Forward:
 736:main.c        ****             moveForward();
 1966              		.loc 1 736 0
 1967 0070 FFF7FEFF 		bl	moveForward
 737:main.c        ****             break;
 1968              		.loc 1 737 0
 1969 0074 15E0     		b	.L139
 1970              	.L142:
 738:main.c        ****         case TurnRight:
 739:main.c        ****             turnRight();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 49


 1971              		.loc 1 739 0
 1972 0076 FFF7FEFF 		bl	turnRight
 740:main.c        ****             break;
 1973              		.loc 1 740 0
 1974 007a 12E0     		b	.L139
 1975              	.L143:
 741:main.c        ****         case TurnLeft:
 742:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1976              		.loc 1 742 0
 1977 007c FFF7FEFF 		bl	turnLeft
 743:main.c        ****             break;
 1978              		.loc 1 743 0
 1979 0080 0FE0     		b	.L139
 1980              	.L145:
 744:main.c        ****         case AdjustToTheRight:
 745:main.c        ****             adjustRight();
 1981              		.loc 1 745 0
 1982 0082 FFF7FEFF 		bl	adjustRight
 746:main.c        ****             break;
 1983              		.loc 1 746 0
 1984 0086 0CE0     		b	.L139
 1985              	.L144:
 747:main.c        ****         case AdjustToTheLeft:
 748:main.c        ****             adjustLeft();
 1986              		.loc 1 748 0
 1987 0088 FFF7FEFF 		bl	adjustLeft
 749:main.c        ****             break;
 1988              		.loc 1 749 0
 1989 008c 09E0     		b	.L139
 1990              	.L146:
 750:main.c        ****         case Stop:
 751:main.c        ****             stopMoving();
 1991              		.loc 1 751 0
 1992 008e FFF7FEFF 		bl	stopMoving
 752:main.c        ****             break;
 1993              		.loc 1 752 0
 1994 0092 06E0     		b	.L139
 1995              	.L149:
 753:main.c        ****         case ForwardAfterTurn:
 754:main.c        ****             moveForward();
 1996              		.loc 1 754 0
 1997 0094 FFF7FEFF 		bl	moveForward
 755:main.c        ****             break;
 1998              		.loc 1 755 0
 1999 0098 03E0     		b	.L139
 2000              	.L150:
 756:main.c        ****         case Backward:
 757:main.c        ****             moveBackward();
 2001              		.loc 1 757 0
 2002 009a FFF7FEFF 		bl	moveBackward
 758:main.c        ****             break;
 2003              		.loc 1 758 0
 2004 009e 00E0     		b	.L139
 2005              	.L152:
 759:main.c        ****         case waitForTurn:
 760:main.c        ****             break;
 761:main.c        ****         /*case waitForLeftTurn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 50


 762:main.c        ****             moveForward();
 763:main.c        ****             break;
 764:main.c        ****         case waitForRightTurn:
 765:main.c        ****             moveForward();
 766:main.c        ****             break;*/
 767:main.c        ****         case Unknown:
 768:main.c        ****             // UNKNOWN CONFIGURATION
 769:main.c        ****             break;  
 2006              		.loc 1 769 0
 2007 00a0 00BF     		nop
 2008              	.L139:
 2009              	.L151:
 770:main.c        ****     }
 771:main.c        **** }...
 2010              		.loc 1 771 0
 2011 00a2 00BF     		nop
 2012 00a4 1437     		adds	r7, r7, #20
 2013              		.cfi_def_cfa_offset 12
 2014 00a6 BD46     		mov	sp, r7
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 00a8 90BD     		pop	{r4, r7, pc}
 2018              	.L154:
 2019 00aa 00BF     		.align	2
 2020              	.L153:
 2021 00ac 00000000 		.word	numSteps
 2022 00b0 00000000 		.word	instructionList
 2023 00b4 00000000 		.word	instructionIndex
 2024 00b8 00000000 		.word	currentInstruction
 2025 00bc 00000000 		.word	currentDirection
 2026 00c0 00000000 		.word	previousDirection
 2027              		.cfi_endproc
 2028              	.LFE78:
 2029              		.size	SetRobotMovement, .-SetRobotMovement
 2030              		.text
 2031              	.Letext0:
 2032              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2033              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2034              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2035              		.file 5 "vars.h"
 2036              		.file 6 "pathfinding.h"
 2037              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2038              		.file 8 "map.h"
 2039              		.section	.debug_info,"",%progbits
 2040              	.Ldebug_info0:
 2041 0000 AF080000 		.4byte	0x8af
 2042 0004 0400     		.2byte	0x4
 2043 0006 00000000 		.4byte	.Ldebug_abbrev0
 2044 000a 04       		.byte	0x4
 2045 000b 01       		.uleb128 0x1
 2046 000c 82000000 		.4byte	.LASF133
 2047 0010 0C       		.byte	0xc
 2048 0011 30000000 		.4byte	.LASF134
 2049 0015 11030000 		.4byte	.LASF135
 2050 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2051 001d 00000000 		.4byte	0
 2052 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 51


 2053 0025 02       		.uleb128 0x2
 2054 0026 01       		.byte	0x1
 2055 0027 06       		.byte	0x6
 2056 0028 8C060000 		.4byte	.LASF0
 2057 002c 02       		.uleb128 0x2
 2058 002d 01       		.byte	0x1
 2059 002e 08       		.byte	0x8
 2060 002f F3050000 		.4byte	.LASF1
 2061 0033 02       		.uleb128 0x2
 2062 0034 02       		.byte	0x2
 2063 0035 05       		.byte	0x5
 2064 0036 F7040000 		.4byte	.LASF2
 2065 003a 02       		.uleb128 0x2
 2066 003b 02       		.byte	0x2
 2067 003c 07       		.byte	0x7
 2068 003d A3060000 		.4byte	.LASF3
 2069 0041 03       		.uleb128 0x3
 2070 0042 55000000 		.4byte	.LASF12
 2071 0046 02       		.byte	0x2
 2072 0047 3F       		.byte	0x3f
 2073 0048 4C000000 		.4byte	0x4c
 2074 004c 02       		.uleb128 0x2
 2075 004d 04       		.byte	0x4
 2076 004e 05       		.byte	0x5
 2077 004f 19050000 		.4byte	.LASF4
 2078 0053 02       		.uleb128 0x2
 2079 0054 04       		.byte	0x4
 2080 0055 07       		.byte	0x7
 2081 0056 AF050000 		.4byte	.LASF5
 2082 005a 02       		.uleb128 0x2
 2083 005b 08       		.byte	0x8
 2084 005c 05       		.byte	0x5
 2085 005d EB030000 		.4byte	.LASF6
 2086 0061 02       		.uleb128 0x2
 2087 0062 08       		.byte	0x8
 2088 0063 07       		.byte	0x7
 2089 0064 3F020000 		.4byte	.LASF7
 2090 0068 04       		.uleb128 0x4
 2091 0069 04       		.byte	0x4
 2092 006a 05       		.byte	0x5
 2093 006b 696E7400 		.ascii	"int\000"
 2094 006f 02       		.uleb128 0x2
 2095 0070 04       		.byte	0x4
 2096 0071 07       		.byte	0x7
 2097 0072 48000000 		.4byte	.LASF8
 2098 0076 02       		.uleb128 0x2
 2099 0077 08       		.byte	0x8
 2100 0078 04       		.byte	0x4
 2101 0079 BB040000 		.4byte	.LASF9
 2102 007d 02       		.uleb128 0x2
 2103 007e 04       		.byte	0x4
 2104 007f 07       		.byte	0x7
 2105 0080 A6050000 		.4byte	.LASF10
 2106 0084 02       		.uleb128 0x2
 2107 0085 01       		.byte	0x1
 2108 0086 08       		.byte	0x8
 2109 0087 0C030000 		.4byte	.LASF11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 52


 2110 008b 03       		.uleb128 0x3
 2111 008c CC050000 		.4byte	.LASF13
 2112 0090 03       		.byte	0x3
 2113 0091 2C       		.byte	0x2c
 2114 0092 41000000 		.4byte	0x41
 2115 0096 05       		.uleb128 0x5
 2116 0097 F9060000 		.4byte	.LASF14
 2117 009b 04       		.byte	0x4
 2118 009c E701     		.2byte	0x1e7
 2119 009e 2C000000 		.4byte	0x2c
 2120 00a2 05       		.uleb128 0x5
 2121 00a3 8C030000 		.4byte	.LASF15
 2122 00a7 04       		.byte	0x4
 2123 00a8 E801     		.2byte	0x1e8
 2124 00aa 3A000000 		.4byte	0x3a
 2125 00ae 05       		.uleb128 0x5
 2126 00af 6B040000 		.4byte	.LASF16
 2127 00b3 04       		.byte	0x4
 2128 00b4 E901     		.2byte	0x1e9
 2129 00b6 53000000 		.4byte	0x53
 2130 00ba 05       		.uleb128 0x5
 2131 00bb 93030000 		.4byte	.LASF17
 2132 00bf 04       		.byte	0x4
 2133 00c0 EA01     		.2byte	0x1ea
 2134 00c2 25000000 		.4byte	0x25
 2135 00c6 05       		.uleb128 0x5
 2136 00c7 5F000000 		.4byte	.LASF18
 2137 00cb 04       		.byte	0x4
 2138 00cc EB01     		.2byte	0x1eb
 2139 00ce 33000000 		.4byte	0x33
 2140 00d2 02       		.uleb128 0x2
 2141 00d3 04       		.byte	0x4
 2142 00d4 04       		.byte	0x4
 2143 00d5 07020000 		.4byte	.LASF19
 2144 00d9 02       		.uleb128 0x2
 2145 00da 08       		.byte	0x8
 2146 00db 04       		.byte	0x4
 2147 00dc FF060000 		.4byte	.LASF20
 2148 00e0 06       		.uleb128 0x6
 2149 00e1 8D040000 		.4byte	.LASF45
 2150 00e5 20       		.byte	0x20
 2151 00e6 05       		.byte	0x5
 2152 00e7 28       		.byte	0x28
 2153 00e8 B9010000 		.4byte	0x1b9
 2154 00ec 07       		.uleb128 0x7
 2155 00ed 97040000 		.4byte	.LASF21
 2156 00f1 05       		.byte	0x5
 2157 00f2 2A       		.byte	0x2a
 2158 00f3 BA000000 		.4byte	0xba
 2159 00f7 00       		.byte	0
 2160 00f8 07       		.uleb128 0x7
 2161 00f9 39020000 		.4byte	.LASF22
 2162 00fd 05       		.byte	0x5
 2163 00fe 2B       		.byte	0x2b
 2164 00ff 96000000 		.4byte	0x96
 2165 0103 01       		.byte	0x1
 2166 0104 07       		.uleb128 0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 53


 2167 0105 D4050000 		.4byte	.LASF23
 2168 0109 05       		.byte	0x5
 2169 010a 2C       		.byte	0x2c
 2170 010b C6000000 		.4byte	0xc6
 2171 010f 02       		.byte	0x2
 2172 0110 07       		.uleb128 0x7
 2173 0111 F6020000 		.4byte	.LASF24
 2174 0115 05       		.byte	0x5
 2175 0116 2D       		.byte	0x2d
 2176 0117 C6000000 		.4byte	0xc6
 2177 011b 04       		.byte	0x4
 2178 011c 07       		.uleb128 0x7
 2179 011d B6060000 		.4byte	.LASF25
 2180 0121 05       		.byte	0x5
 2181 0122 2E       		.byte	0x2e
 2182 0123 C6000000 		.4byte	0xc6
 2183 0127 06       		.byte	0x6
 2184 0128 07       		.uleb128 0x7
 2185 0129 20070000 		.4byte	.LASF26
 2186 012d 05       		.byte	0x5
 2187 012e 2F       		.byte	0x2f
 2188 012f C6000000 		.4byte	0xc6
 2189 0133 08       		.byte	0x8
 2190 0134 07       		.uleb128 0x7
 2191 0135 3F040000 		.4byte	.LASF27
 2192 0139 05       		.byte	0x5
 2193 013a 30       		.byte	0x30
 2194 013b C6000000 		.4byte	0xc6
 2195 013f 0A       		.byte	0xa
 2196 0140 07       		.uleb128 0x7
 2197 0141 62030000 		.4byte	.LASF28
 2198 0145 05       		.byte	0x5
 2199 0146 31       		.byte	0x31
 2200 0147 C6000000 		.4byte	0xc6
 2201 014b 0C       		.byte	0xc
 2202 014c 07       		.uleb128 0x7
 2203 014d 9C040000 		.4byte	.LASF29
 2204 0151 05       		.byte	0x5
 2205 0152 32       		.byte	0x32
 2206 0153 C6000000 		.4byte	0xc6
 2207 0157 0E       		.byte	0xe
 2208 0158 07       		.uleb128 0x7
 2209 0159 F9030000 		.4byte	.LASF30
 2210 015d 05       		.byte	0x5
 2211 015e 33       		.byte	0x33
 2212 015f C6000000 		.4byte	0xc6
 2213 0163 10       		.byte	0x10
 2214 0164 07       		.uleb128 0x7
 2215 0165 8D050000 		.4byte	.LASF31
 2216 0169 05       		.byte	0x5
 2217 016a 34       		.byte	0x34
 2218 016b C6000000 		.4byte	0xc6
 2219 016f 12       		.byte	0x12
 2220 0170 07       		.uleb128 0x7
 2221 0171 40070000 		.4byte	.LASF32
 2222 0175 05       		.byte	0x5
 2223 0176 35       		.byte	0x35
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 54


 2224 0177 C6000000 		.4byte	0xc6
 2225 017b 14       		.byte	0x14
 2226 017c 07       		.uleb128 0x7
 2227 017d A3030000 		.4byte	.LASF33
 2228 0181 05       		.byte	0x5
 2229 0182 36       		.byte	0x36
 2230 0183 C6000000 		.4byte	0xc6
 2231 0187 16       		.byte	0x16
 2232 0188 07       		.uleb128 0x7
 2233 0189 2A010000 		.4byte	.LASF34
 2234 018d 05       		.byte	0x5
 2235 018e 37       		.byte	0x37
 2236 018f C6000000 		.4byte	0xc6
 2237 0193 18       		.byte	0x18
 2238 0194 07       		.uleb128 0x7
 2239 0195 53050000 		.4byte	.LASF35
 2240 0199 05       		.byte	0x5
 2241 019a 38       		.byte	0x38
 2242 019b C6000000 		.4byte	0xc6
 2243 019f 1A       		.byte	0x1a
 2244 01a0 07       		.uleb128 0x7
 2245 01a1 36040000 		.4byte	.LASF36
 2246 01a5 05       		.byte	0x5
 2247 01a6 39       		.byte	0x39
 2248 01a7 C6000000 		.4byte	0xc6
 2249 01ab 1C       		.byte	0x1c
 2250 01ac 07       		.uleb128 0x7
 2251 01ad E2010000 		.4byte	.LASF37
 2252 01b1 05       		.byte	0x5
 2253 01b2 3A       		.byte	0x3a
 2254 01b3 C6000000 		.4byte	0xc6
 2255 01b7 1E       		.byte	0x1e
 2256 01b8 00       		.byte	0
 2257 01b9 08       		.uleb128 0x8
 2258 01ba 1B000000 		.4byte	.LASF50
 2259 01be 01       		.byte	0x1
 2260 01bf 2C000000 		.4byte	0x2c
 2261 01c3 06       		.byte	0x6
 2262 01c4 0D       		.byte	0xd
 2263 01c5 F4010000 		.4byte	0x1f4
 2264 01c9 09       		.uleb128 0x9
 2265 01ca 76060000 		.4byte	.LASF38
 2266 01ce 00       		.byte	0
 2267 01cf 09       		.uleb128 0x9
 2268 01d0 DB030000 		.4byte	.LASF39
 2269 01d4 01       		.byte	0x1
 2270 01d5 09       		.uleb128 0x9
 2271 01d6 72040000 		.4byte	.LASF40
 2272 01da 02       		.byte	0x2
 2273 01db 09       		.uleb128 0x9
 2274 01dc 24040000 		.4byte	.LASF41
 2275 01e0 03       		.byte	0x3
 2276 01e1 09       		.uleb128 0x9
 2277 01e2 96020000 		.4byte	.LASF42
 2278 01e6 04       		.byte	0x4
 2279 01e7 09       		.uleb128 0x9
 2280 01e8 DD020000 		.4byte	.LASF43
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 55


 2281 01ec 05       		.byte	0x5
 2282 01ed 09       		.uleb128 0x9
 2283 01ee 63060000 		.4byte	.LASF44
 2284 01f2 06       		.byte	0x6
 2285 01f3 00       		.byte	0
 2286 01f4 06       		.uleb128 0x6
 2287 01f5 56020000 		.4byte	.LASF46
 2288 01f9 0C       		.byte	0xc
 2289 01fa 06       		.byte	0x6
 2290 01fb 0E       		.byte	0xe
 2291 01fc 25020000 		.4byte	0x225
 2292 0200 07       		.uleb128 0x7
 2293 0201 00000000 		.4byte	.LASF47
 2294 0205 06       		.byte	0x6
 2295 0206 0F       		.byte	0xf
 2296 0207 B9010000 		.4byte	0x1b9
 2297 020b 00       		.byte	0
 2298 020c 07       		.uleb128 0x7
 2299 020d 49070000 		.4byte	.LASF48
 2300 0211 06       		.byte	0x6
 2301 0212 10       		.byte	0x10
 2302 0213 68000000 		.4byte	0x68
 2303 0217 04       		.byte	0x4
 2304 0218 07       		.uleb128 0x7
 2305 0219 51070000 		.4byte	.LASF49
 2306 021d 06       		.byte	0x6
 2307 021e 11       		.byte	0x11
 2308 021f 68000000 		.4byte	0x68
 2309 0223 08       		.byte	0x8
 2310 0224 00       		.byte	0
 2311 0225 03       		.uleb128 0x3
 2312 0226 56020000 		.4byte	.LASF46
 2313 022a 06       		.byte	0x6
 2314 022b 12       		.byte	0x12
 2315 022c F4010000 		.4byte	0x1f4
 2316 0230 08       		.uleb128 0x8
 2317 0231 71050000 		.4byte	.LASF51
 2318 0235 01       		.byte	0x1
 2319 0236 2C000000 		.4byte	0x2c
 2320 023a 06       		.byte	0x6
 2321 023b 14       		.byte	0x14
 2322 023c 58020000 		.4byte	0x258
 2323 0240 0A       		.uleb128 0xa
 2324 0241 557000   		.ascii	"Up\000"
 2325 0244 00       		.byte	0
 2326 0245 09       		.uleb128 0x9
 2327 0246 82050000 		.4byte	.LASF52
 2328 024a 01       		.byte	0x1
 2329 024b 09       		.uleb128 0x9
 2330 024c B0030000 		.4byte	.LASF53
 2331 0250 02       		.byte	0x2
 2332 0251 09       		.uleb128 0x9
 2333 0252 87050000 		.4byte	.LASF54
 2334 0256 03       		.byte	0x3
 2335 0257 00       		.byte	0
 2336 0258 08       		.uleb128 0x8
 2337 0259 E5050000 		.4byte	.LASF55
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 56


 2338 025d 01       		.byte	0x1
 2339 025e 2C000000 		.4byte	0x2c
 2340 0262 01       		.byte	0x1
 2341 0263 18       		.byte	0x18
 2342 0264 A5020000 		.4byte	0x2a5
 2343 0268 09       		.uleb128 0x9
 2344 0269 39050000 		.4byte	.LASF56
 2345 026d 00       		.byte	0
 2346 026e 09       		.uleb128 0x9
 2347 026f 83040000 		.4byte	.LASF57
 2348 0273 01       		.byte	0x1
 2349 0274 09       		.uleb128 0x9
 2350 0275 51040000 		.4byte	.LASF58
 2351 0279 02       		.byte	0x2
 2352 027a 09       		.uleb128 0x9
 2353 027b E0060000 		.4byte	.LASF59
 2354 027f 03       		.byte	0x3
 2355 0280 09       		.uleb128 0x9
 2356 0281 20060000 		.4byte	.LASF60
 2357 0285 04       		.byte	0x4
 2358 0286 09       		.uleb128 0x9
 2359 0287 31060000 		.4byte	.LASF61
 2360 028b 05       		.byte	0x5
 2361 028c 09       		.uleb128 0x9
 2362 028d 63040000 		.4byte	.LASF62
 2363 0291 06       		.byte	0x6
 2364 0292 09       		.uleb128 0x9
 2365 0293 EA020000 		.4byte	.LASF63
 2366 0297 07       		.byte	0x7
 2367 0298 09       		.uleb128 0x9
 2368 0299 0A000000 		.4byte	.LASF64
 2369 029d 08       		.byte	0x8
 2370 029e 09       		.uleb128 0x9
 2371 029f F0060000 		.4byte	.LASF65
 2372 02a3 09       		.byte	0x9
 2373 02a4 00       		.byte	0
 2374 02a5 0B       		.uleb128 0xb
 2375 02a6 B5030000 		.4byte	.LASF74
 2376 02aa 01       		.byte	0x1
 2377 02ab 38       		.byte	0x38
 2378 02ac 00000000 		.4byte	.LFB64
 2379 02b0 EC000000 		.4byte	.LFE64-.LFB64
 2380 02b4 01       		.uleb128 0x1
 2381 02b5 9C       		.byte	0x9c
 2382 02b6 D3020000 		.4byte	0x2d3
 2383 02ba 0C       		.uleb128 0xc
 2384 02bb 50000000 		.4byte	.LBB2
 2385 02bf 62000000 		.4byte	.LBE2-.LBB2
 2386 02c3 0D       		.uleb128 0xd
 2387 02c4 2A040000 		.4byte	.LASF72
 2388 02c8 01       		.byte	0x1
 2389 02c9 45       		.byte	0x45
 2390 02ca D2000000 		.4byte	0xd2
 2391 02ce 02       		.uleb128 0x2
 2392 02cf 91       		.byte	0x91
 2393 02d0 6C       		.sleb128 -20
 2394 02d1 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 57


 2395 02d2 00       		.byte	0
 2396 02d3 0E       		.uleb128 0xe
 2397 02d4 0D050000 		.4byte	.LASF66
 2398 02d8 01       		.byte	0x1
 2399 02d9 50       		.byte	0x50
 2400 02da 00000000 		.4byte	.LFB65
 2401 02de 18000000 		.4byte	.LFE65-.LFB65
 2402 02e2 01       		.uleb128 0x1
 2403 02e3 9C       		.byte	0x9c
 2404 02e4 0E       		.uleb128 0xe
 2405 02e5 01050000 		.4byte	.LASF67
 2406 02e9 01       		.byte	0x1
 2407 02ea 56       		.byte	0x56
 2408 02eb 00000000 		.4byte	.LFB66
 2409 02ef 18000000 		.4byte	.LFE66-.LFB66
 2410 02f3 01       		.uleb128 0x1
 2411 02f4 9C       		.byte	0x9c
 2412 02f5 0E       		.uleb128 0xe
 2413 02f6 80060000 		.4byte	.LASF68
 2414 02fa 01       		.byte	0x1
 2415 02fb 5C       		.byte	0x5c
 2416 02fc 00000000 		.4byte	.LFB67
 2417 0300 18000000 		.4byte	.LFE67-.LFB67
 2418 0304 01       		.uleb128 0x1
 2419 0305 9C       		.byte	0x9c
 2420 0306 0E       		.uleb128 0xe
 2421 0307 10010000 		.4byte	.LASF69
 2422 030b 01       		.byte	0x1
 2423 030c 62       		.byte	0x62
 2424 030d 00000000 		.4byte	.LFB68
 2425 0311 18000000 		.4byte	.LFE68-.LFB68
 2426 0315 01       		.uleb128 0x1
 2427 0316 9C       		.byte	0x9c
 2428 0317 0F       		.uleb128 0xf
 2429 0318 7F020000 		.4byte	.LASF70
 2430 031c 01       		.byte	0x1
 2431 031d 68       		.byte	0x68
 2432 031e 00000000 		.4byte	.LFB69
 2433 0322 38000000 		.4byte	.LFE69-.LFB69
 2434 0326 01       		.uleb128 0x1
 2435 0327 9C       		.byte	0x9c
 2436 0328 10       		.uleb128 0x10
 2437 0329 C8060000 		.4byte	.LASF71
 2438 032d 01       		.byte	0x1
 2439 032e 74       		.byte	0x74
 2440 032f 68000000 		.4byte	0x68
 2441 0333 00000000 		.4byte	.LFB70
 2442 0337 C0000000 		.4byte	.LFE70-.LFB70
 2443 033b 01       		.uleb128 0x1
 2444 033c 9C       		.byte	0x9c
 2445 033d 11       		.uleb128 0x11
 2446 033e C4020000 		.4byte	.LASF78
 2447 0342 01       		.byte	0x1
 2448 0343 A2       		.byte	0xa2
 2449 0344 C6000000 		.4byte	0xc6
 2450 0348 00000000 		.4byte	.LFB71
 2451 034c 54000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 58


 2452 0350 01       		.uleb128 0x1
 2453 0351 9C       		.byte	0x9c
 2454 0352 81030000 		.4byte	0x381
 2455 0356 12       		.uleb128 0x12
 2456 0357 33020000 		.4byte	.LASF80
 2457 035b 01       		.byte	0x1
 2458 035c A2       		.byte	0xa2
 2459 035d A2000000 		.4byte	0xa2
 2460 0361 02       		.uleb128 0x2
 2461 0362 91       		.byte	0x91
 2462 0363 66       		.sleb128 -26
 2463 0364 13       		.uleb128 0x13
 2464 0365 63707300 		.ascii	"cps\000"
 2465 0369 01       		.byte	0x1
 2466 036a A4       		.byte	0xa4
 2467 036b D2000000 		.4byte	0xd2
 2468 036f 02       		.uleb128 0x2
 2469 0370 91       		.byte	0x91
 2470 0371 6C       		.sleb128 -20
 2471 0372 13       		.uleb128 0x13
 2472 0373 72706D00 		.ascii	"rpm\000"
 2473 0377 01       		.byte	0x1
 2474 0378 A5       		.byte	0xa5
 2475 0379 C6000000 		.4byte	0xc6
 2476 037d 02       		.uleb128 0x2
 2477 037e 91       		.byte	0x91
 2478 037f 6A       		.sleb128 -22
 2479 0380 00       		.byte	0
 2480 0381 14       		.uleb128 0x14
 2481 0382 D1010000 		.4byte	.LASF86
 2482 0386 01       		.byte	0x1
 2483 0387 AD       		.byte	0xad
 2484 0388 00000000 		.4byte	.LFB72
 2485 038c 34000000 		.4byte	.LFE72-.LFB72
 2486 0390 01       		.uleb128 0x1
 2487 0391 9C       		.byte	0x9c
 2488 0392 15       		.uleb128 0x15
 2489 0393 A1010000 		.4byte	.LASF73
 2490 0397 01       		.byte	0x1
 2491 0398 A501     		.2byte	0x1a5
 2492 039a 58020000 		.4byte	0x258
 2493 039e 00000000 		.4byte	.LFB73
 2494 03a2 84000000 		.4byte	.LFE73-.LFB73
 2495 03a6 01       		.uleb128 0x1
 2496 03a7 9C       		.byte	0x9c
 2497 03a8 16       		.uleb128 0x16
 2498 03a9 63010000 		.4byte	.LASF75
 2499 03ad 01       		.byte	0x1
 2500 03ae C701     		.2byte	0x1c7
 2501 03b0 58020000 		.4byte	0x258
 2502 03b4 00000000 		.4byte	.LFB74
 2503 03b8 58020000 		.4byte	.LFE74-.LFB74
 2504 03bc 01       		.uleb128 0x1
 2505 03bd 9C       		.byte	0x9c
 2506 03be E1030000 		.4byte	0x3e1
 2507 03c2 17       		.uleb128 0x17
 2508 03c3 37000000 		.4byte	.LASF76
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 59


 2509 03c7 01       		.byte	0x1
 2510 03c8 C801     		.2byte	0x1c8
 2511 03ca D2000000 		.4byte	0xd2
 2512 03ce 02       		.uleb128 0x2
 2513 03cf 91       		.byte	0x91
 2514 03d0 74       		.sleb128 -12
 2515 03d1 17       		.uleb128 0x17
 2516 03d2 0D020000 		.4byte	.LASF77
 2517 03d6 01       		.byte	0x1
 2518 03d7 D701     		.2byte	0x1d7
 2519 03d9 B9010000 		.4byte	0x1b9
 2520 03dd 02       		.uleb128 0x2
 2521 03de 91       		.byte	0x91
 2522 03df 73       		.sleb128 -13
 2523 03e0 00       		.byte	0
 2524 03e1 18       		.uleb128 0x18
 2525 03e2 06060000 		.4byte	.LASF79
 2526 03e6 01       		.byte	0x1
 2527 03e7 7002     		.2byte	0x270
 2528 03e9 D2000000 		.4byte	0xd2
 2529 03ed 00000000 		.4byte	.LFB75
 2530 03f1 8C020000 		.4byte	.LFE75-.LFB75
 2531 03f5 01       		.uleb128 0x1
 2532 03f6 9C       		.byte	0x9c
 2533 03f7 9F040000 		.4byte	0x49f
 2534 03fb 19       		.uleb128 0x19
 2535 03fc D3020000 		.4byte	.LASF81
 2536 0400 01       		.byte	0x1
 2537 0401 7002     		.2byte	0x270
 2538 0403 D2000000 		.4byte	0xd2
 2539 0407 02       		.uleb128 0x2
 2540 0408 91       		.byte	0x91
 2541 0409 54       		.sleb128 -44
 2542 040a 17       		.uleb128 0x17
 2543 040b 11070000 		.4byte	.LASF82
 2544 040f 01       		.byte	0x1
 2545 0410 7102     		.2byte	0x271
 2546 0412 D2000000 		.4byte	0xd2
 2547 0416 02       		.uleb128 0x2
 2548 0417 91       		.byte	0x91
 2549 0418 58       		.sleb128 -40
 2550 0419 17       		.uleb128 0x17
 2551 041a 59010000 		.4byte	.LASF83
 2552 041e 01       		.byte	0x1
 2553 041f 7402     		.2byte	0x274
 2554 0421 68000000 		.4byte	0x68
 2555 0425 02       		.uleb128 0x2
 2556 0426 91       		.byte	0x91
 2557 0427 60       		.sleb128 -32
 2558 0428 17       		.uleb128 0x17
 2559 0429 EF010000 		.4byte	.LASF84
 2560 042d 01       		.byte	0x1
 2561 042e 7502     		.2byte	0x275
 2562 0430 68000000 		.4byte	0x68
 2563 0434 02       		.uleb128 0x2
 2564 0435 91       		.byte	0x91
 2565 0436 5C       		.sleb128 -36
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 60


 2566 0437 17       		.uleb128 0x17
 2567 0438 C0030000 		.4byte	.LASF85
 2568 043c 01       		.byte	0x1
 2569 043d 7702     		.2byte	0x277
 2570 043f 68000000 		.4byte	0x68
 2571 0443 02       		.uleb128 0x2
 2572 0444 91       		.byte	0x91
 2573 0445 74       		.sleb128 -12
 2574 0446 1A       		.uleb128 0x1a
 2575 0447 00000000 		.4byte	.Ldebug_ranges0+0
 2576 044b 5D040000 		.4byte	0x45d
 2577 044f 1B       		.uleb128 0x1b
 2578 0450 6900     		.ascii	"i\000"
 2579 0452 01       		.byte	0x1
 2580 0453 8102     		.2byte	0x281
 2581 0455 68000000 		.4byte	0x68
 2582 0459 02       		.uleb128 0x2
 2583 045a 91       		.byte	0x91
 2584 045b 70       		.sleb128 -16
 2585 045c 00       		.byte	0
 2586 045d 1A       		.uleb128 0x1a
 2587 045e 18000000 		.4byte	.Ldebug_ranges0+0x18
 2588 0462 74040000 		.4byte	0x474
 2589 0466 1B       		.uleb128 0x1b
 2590 0467 6900     		.ascii	"i\000"
 2591 0469 01       		.byte	0x1
 2592 046a 9002     		.2byte	0x290
 2593 046c 68000000 		.4byte	0x68
 2594 0470 02       		.uleb128 0x2
 2595 0471 91       		.byte	0x91
 2596 0472 6C       		.sleb128 -20
 2597 0473 00       		.byte	0
 2598 0474 1A       		.uleb128 0x1a
 2599 0475 30000000 		.4byte	.Ldebug_ranges0+0x30
 2600 0479 8B040000 		.4byte	0x48b
 2601 047d 1B       		.uleb128 0x1b
 2602 047e 6900     		.ascii	"i\000"
 2603 0480 01       		.byte	0x1
 2604 0481 9F02     		.2byte	0x29f
 2605 0483 68000000 		.4byte	0x68
 2606 0487 02       		.uleb128 0x2
 2607 0488 91       		.byte	0x91
 2608 0489 68       		.sleb128 -24
 2609 048a 00       		.byte	0
 2610 048b 1C       		.uleb128 0x1c
 2611 048c 48000000 		.4byte	.Ldebug_ranges0+0x48
 2612 0490 1B       		.uleb128 0x1b
 2613 0491 6900     		.ascii	"i\000"
 2614 0493 01       		.byte	0x1
 2615 0494 AF02     		.2byte	0x2af
 2616 0496 68000000 		.4byte	0x68
 2617 049a 02       		.uleb128 0x2
 2618 049b 91       		.byte	0x91
 2619 049c 64       		.sleb128 -28
 2620 049d 00       		.byte	0
 2621 049e 00       		.byte	0
 2622 049f 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 61


 2623 04a0 5B050000 		.4byte	.LASF87
 2624 04a4 01       		.byte	0x1
 2625 04a5 C302     		.2byte	0x2c3
 2626 04a7 00000000 		.4byte	.LFB76
 2627 04ab 1C000000 		.4byte	.LFE76-.LFB76
 2628 04af 01       		.uleb128 0x1
 2629 04b0 9C       		.byte	0x9c
 2630 04b1 1E       		.uleb128 0x1e
 2631 04b2 36060000 		.4byte	.LASF88
 2632 04b6 01       		.byte	0x1
 2633 04b7 C802     		.2byte	0x2c8
 2634 04b9 25020000 		.4byte	0x225
 2635 04bd 00000000 		.4byte	.LFB77
 2636 04c1 A4000000 		.4byte	.LFE77-.LFB77
 2637 04c5 01       		.uleb128 0x1
 2638 04c6 9C       		.byte	0x9c
 2639 04c7 1F050000 		.4byte	0x51f
 2640 04cb 19       		.uleb128 0x19
 2641 04cc 50010000 		.4byte	.LASF89
 2642 04d0 01       		.byte	0x1
 2643 04d1 C802     		.2byte	0x2c8
 2644 04d3 68000000 		.4byte	0x68
 2645 04d7 02       		.uleb128 0x2
 2646 04d8 91       		.byte	0x91
 2647 04d9 60       		.sleb128 -32
 2648 04da 19       		.uleb128 0x19
 2649 04db 6B030000 		.4byte	.LASF90
 2650 04df 01       		.byte	0x1
 2651 04e0 C802     		.2byte	0x2c8
 2652 04e2 1F050000 		.4byte	0x51f
 2653 04e6 02       		.uleb128 0x2
 2654 04e7 91       		.byte	0x91
 2655 04e8 5C       		.sleb128 -36
 2656 04e9 19       		.uleb128 0x19
 2657 04ea 7B030000 		.4byte	.LASF91
 2658 04ee 01       		.byte	0x1
 2659 04ef C802     		.2byte	0x2c8
 2660 04f1 68000000 		.4byte	0x68
 2661 04f5 02       		.uleb128 0x2
 2662 04f6 91       		.byte	0x91
 2663 04f7 58       		.sleb128 -40
 2664 04f8 17       		.uleb128 0x17
 2665 04f9 72000000 		.4byte	.LASF92
 2666 04fd 01       		.byte	0x1
 2667 04fe C902     		.2byte	0x2c9
 2668 0500 25020000 		.4byte	0x225
 2669 0504 02       		.uleb128 0x2
 2670 0505 91       		.byte	0x91
 2671 0506 68       		.sleb128 -24
 2672 0507 0C       		.uleb128 0xc
 2673 0508 0E000000 		.4byte	.LBB11
 2674 050c 7C000000 		.4byte	.LBE11-.LBB11
 2675 0510 1B       		.uleb128 0x1b
 2676 0511 6900     		.ascii	"i\000"
 2677 0513 01       		.byte	0x1
 2678 0514 CB02     		.2byte	0x2cb
 2679 0516 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 62


 2680 051a 02       		.uleb128 0x2
 2681 051b 91       		.byte	0x91
 2682 051c 74       		.sleb128 -12
 2683 051d 00       		.byte	0
 2684 051e 00       		.byte	0
 2685 051f 1F       		.uleb128 0x1f
 2686 0520 04       		.byte	0x4
 2687 0521 25020000 		.4byte	0x225
 2688 0525 20       		.uleb128 0x20
 2689 0526 6E020000 		.4byte	.LASF93
 2690 052a 01       		.byte	0x1
 2691 052b D802     		.2byte	0x2d8
 2692 052d 00000000 		.4byte	.LFB78
 2693 0531 C4000000 		.4byte	.LFE78-.LFB78
 2694 0535 01       		.uleb128 0x1
 2695 0536 9C       		.byte	0x9c
 2696 0537 21       		.uleb128 0x21
 2697 0538 22050000 		.4byte	.LASF94
 2698 053c 07       		.byte	0x7
 2699 053d 1207     		.2byte	0x712
 2700 053f 43050000 		.4byte	0x543
 2701 0543 22       		.uleb128 0x22
 2702 0544 8B000000 		.4byte	0x8b
 2703 0548 23       		.uleb128 0x23
 2704 0549 747300   		.ascii	"ts\000"
 2705 054c 05       		.byte	0x5
 2706 054d 10       		.byte	0x10
 2707 054e 96000000 		.4byte	0x96
 2708 0552 05       		.uleb128 0x5
 2709 0553 03       		.byte	0x3
 2710 0554 00000000 		.4byte	ts
 2711 0558 24       		.uleb128 0x24
 2712 0559 4C060000 		.4byte	.LASF95
 2713 055d 05       		.byte	0x5
 2714 055e 11       		.byte	0x11
 2715 055f A2000000 		.4byte	0xa2
 2716 0563 05       		.uleb128 0x5
 2717 0564 03       		.byte	0x3
 2718 0565 00000000 		.4byte	ts_enc
 2719 0569 24       		.uleb128 0x24
 2720 056a 2F050000 		.4byte	.LASF96
 2721 056e 05       		.byte	0x5
 2722 056f 12       		.byte	0x12
 2723 0570 A2000000 		.4byte	0xa2
 2724 0574 05       		.uleb128 0x5
 2725 0575 03       		.byte	0x3
 2726 0576 00000000 		.4byte	ts_update
 2727 057a 24       		.uleb128 0x24
 2728 057b 5A040000 		.4byte	.LASF97
 2729 057f 05       		.byte	0x5
 2730 0580 13       		.byte	0x13
 2731 0581 A2000000 		.4byte	0xa2
 2732 0585 05       		.uleb128 0x5
 2733 0586 03       		.byte	0x3
 2734 0587 00000000 		.4byte	ts_speed
 2735 058b 24       		.uleb128 0x24
 2736 058c 01030000 		.4byte	.LASF98
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 63


 2737 0590 05       		.byte	0x5
 2738 0591 14       		.byte	0x14
 2739 0592 A2000000 		.4byte	0xa2
 2740 0596 05       		.uleb128 0x5
 2741 0597 03       		.byte	0x3
 2742 0598 00000000 		.4byte	ts_display
 2743 059c 24       		.uleb128 0x24
 2744 059d B8020000 		.4byte	.LASF99
 2745 05a1 05       		.byte	0x5
 2746 05a2 16       		.byte	0x16
 2747 05a3 96000000 		.4byte	0x96
 2748 05a7 05       		.uleb128 0x5
 2749 05a8 03       		.byte	0x3
 2750 05a9 00000000 		.4byte	flag_ts_enc
 2751 05ad 24       		.uleb128 0x24
 2752 05ae A9020000 		.4byte	.LASF100
 2753 05b2 05       		.byte	0x5
 2754 05b3 17       		.byte	0x17
 2755 05b4 96000000 		.4byte	0x96
 2756 05b8 05       		.uleb128 0x5
 2757 05b9 03       		.byte	0x3
 2758 05ba 00000000 		.4byte	flag_ts_update
 2759 05be 24       		.uleb128 0x24
 2760 05bf C7040000 		.4byte	.LASF101
 2761 05c3 05       		.byte	0x5
 2762 05c4 18       		.byte	0x18
 2763 05c5 96000000 		.4byte	0x96
 2764 05c9 05       		.uleb128 0x5
 2765 05ca 03       		.byte	0x3
 2766 05cb 00000000 		.4byte	flag_ts_speed
 2767 05cf 24       		.uleb128 0x24
 2768 05d0 53060000 		.4byte	.LASF102
 2769 05d4 05       		.byte	0x5
 2770 05d5 19       		.byte	0x19
 2771 05d6 96000000 		.4byte	0x96
 2772 05da 05       		.uleb128 0x5
 2773 05db 03       		.byte	0x3
 2774 05dc 00000000 		.4byte	flag_ts_display
 2775 05e0 24       		.uleb128 0x24
 2776 05e1 E4040000 		.4byte	.LASF103
 2777 05e5 05       		.byte	0x5
 2778 05e6 1B       		.byte	0x1b
 2779 05e7 96000000 		.4byte	0x96
 2780 05eb 05       		.uleb128 0x5
 2781 05ec 03       		.byte	0x3
 2782 05ed 00000000 		.4byte	flag_rx
 2783 05f1 24       		.uleb128 0x24
 2784 05f2 62020000 		.4byte	.LASF104
 2785 05f6 05       		.byte	0x5
 2786 05f7 1C       		.byte	0x1c
 2787 05f8 96000000 		.4byte	0x96
 2788 05fc 05       		.uleb128 0x5
 2789 05fd 03       		.byte	0x3
 2790 05fe 00000000 		.4byte	flag_packet
 2791 0602 24       		.uleb128 0x24
 2792 0603 31070000 		.4byte	.LASF105
 2793 0607 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 64


 2794 0608 1D       		.byte	0x1d
 2795 0609 96000000 		.4byte	0x96
 2796 060d 05       		.uleb128 0x5
 2797 060e 03       		.byte	0x3
 2798 060f 00000000 		.4byte	flag_KB_string
 2799 0613 24       		.uleb128 0x24
 2800 0614 D5040000 		.4byte	.LASF106
 2801 0618 05       		.byte	0x5
 2802 0619 1F       		.byte	0x1f
 2803 061a 96000000 		.4byte	0x96
 2804 061e 05       		.uleb128 0x5
 2805 061f 03       		.byte	0x3
 2806 0620 00000000 		.4byte	dataready_flag
 2807 0624 24       		.uleb128 0x24
 2808 0625 85010000 		.4byte	.LASF107
 2809 0629 05       		.byte	0x5
 2810 062a 21       		.byte	0x21
 2811 062b 96000000 		.4byte	0x96
 2812 062f 05       		.uleb128 0x5
 2813 0630 03       		.byte	0x3
 2814 0631 00000000 		.4byte	flag_rf_transmission_active
 2815 0635 25       		.uleb128 0x25
 2816 0636 84000000 		.4byte	0x84
 2817 063a 45060000 		.4byte	0x645
 2818 063e 26       		.uleb128 0x26
 2819 063f 7D000000 		.4byte	0x7d
 2820 0643 3F       		.byte	0x3f
 2821 0644 00       		.byte	0
 2822 0645 24       		.uleb128 0x24
 2823 0646 68060000 		.4byte	.LASF108
 2824 064a 05       		.byte	0x5
 2825 064b 24       		.byte	0x24
 2826 064c 35060000 		.4byte	0x635
 2827 0650 05       		.uleb128 0x5
 2828 0651 03       		.byte	0x3
 2829 0652 00000000 		.4byte	displaystring
 2830 0656 24       		.uleb128 0x24
 2831 0657 01060000 		.4byte	.LASF109
 2832 065b 05       		.byte	0x5
 2833 065c 25       		.byte	0x25
 2834 065d 35060000 		.4byte	0x635
 2835 0661 05       		.uleb128 0x5
 2836 0662 03       		.byte	0x3
 2837 0663 00000000 		.4byte	line
 2838 0667 24       		.uleb128 0x24
 2839 0668 DF050000 		.4byte	.LASF110
 2840 066c 05       		.byte	0x5
 2841 066d 25       		.byte	0x25
 2842 066e 35060000 		.4byte	0x635
 2843 0672 05       		.uleb128 0x5
 2844 0673 03       		.byte	0x3
 2845 0674 00000000 		.4byte	entry
 2846 0678 25       		.uleb128 0x25
 2847 0679 96000000 		.4byte	0x96
 2848 067d 88060000 		.4byte	0x688
 2849 0681 26       		.uleb128 0x26
 2850 0682 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 65


 2851 0686 3F       		.byte	0x3f
 2852 0687 00       		.byte	0
 2853 0688 24       		.uleb128 0x24
 2854 0689 29020000 		.4byte	.LASF111
 2855 068d 05       		.byte	0x5
 2856 068e 26       		.byte	0x26
 2857 068f 78060000 		.4byte	0x678
 2858 0693 05       		.uleb128 0x5
 2859 0694 03       		.byte	0x3
 2860 0695 00000000 		.4byte	usbBuffer
 2861 0699 24       		.uleb128 0x24
 2862 069a 65000000 		.4byte	.LASF112
 2863 069e 05       		.byte	0x5
 2864 069f 3C       		.byte	0x3c
 2865 06a0 E0000000 		.4byte	0xe0
 2866 06a4 05       		.uleb128 0x5
 2867 06a5 03       		.byte	0x3
 2868 06a6 00000000 		.4byte	system_state
 2869 06aa 25       		.uleb128 0x25
 2870 06ab 68000000 		.4byte	0x68
 2871 06af C0060000 		.4byte	0x6c0
 2872 06b3 26       		.uleb128 0x26
 2873 06b4 7D000000 		.4byte	0x7d
 2874 06b8 0E       		.byte	0xe
 2875 06b9 26       		.uleb128 0x26
 2876 06ba 7D000000 		.4byte	0x7d
 2877 06be 12       		.byte	0x12
 2878 06bf 00       		.byte	0
 2879 06c0 27       		.uleb128 0x27
 2880 06c1 6D617000 		.ascii	"map\000"
 2881 06c5 08       		.byte	0x8
 2882 06c6 04       		.byte	0x4
 2883 06c7 AA060000 		.4byte	0x6aa
 2884 06cb 25       		.uleb128 0x25
 2885 06cc 68000000 		.4byte	0x68
 2886 06d0 E1060000 		.4byte	0x6e1
 2887 06d4 26       		.uleb128 0x26
 2888 06d5 7D000000 		.4byte	0x7d
 2889 06d9 04       		.byte	0x4
 2890 06da 26       		.uleb128 0x26
 2891 06db 7D000000 		.4byte	0x7d
 2892 06df 01       		.byte	0x1
 2893 06e0 00       		.byte	0
 2894 06e1 28       		.uleb128 0x28
 2895 06e2 47040000 		.4byte	.LASF113
 2896 06e6 08       		.byte	0x8
 2897 06e7 05       		.byte	0x5
 2898 06e8 CB060000 		.4byte	0x6cb
 2899 06ec 24       		.uleb128 0x24
 2900 06ed 95050000 		.4byte	.LASF114
 2901 06f1 01       		.byte	0x1
 2902 06f2 19       		.byte	0x19
 2903 06f3 58020000 		.4byte	0x258
 2904 06f7 05       		.uleb128 0x5
 2905 06f8 03       		.byte	0x3
 2906 06f9 00000000 		.4byte	currentDirection
 2907 06fd 24       		.uleb128 0x24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 66


 2908 06fe A9040000 		.4byte	.LASF115
 2909 0702 01       		.byte	0x1
 2910 0703 19       		.byte	0x19
 2911 0704 58020000 		.4byte	0x258
 2912 0708 05       		.uleb128 0x5
 2913 0709 03       		.byte	0x3
 2914 070a 00000000 		.4byte	previousDirection
 2915 070e 24       		.uleb128 0x24
 2916 070f B9010000 		.4byte	.LASF116
 2917 0713 01       		.byte	0x1
 2918 0714 1B       		.byte	0x1b
 2919 0715 30020000 		.4byte	0x230
 2920 0719 05       		.uleb128 0x5
 2921 071a 03       		.byte	0x3
 2922 071b 00000000 		.4byte	currentRobotOrientation
 2923 071f 24       		.uleb128 0x24
 2924 0720 10040000 		.4byte	.LASF117
 2925 0724 01       		.byte	0x1
 2926 0725 1B       		.byte	0x1b
 2927 0726 30020000 		.4byte	0x230
 2928 072a 05       		.uleb128 0x5
 2929 072b 03       		.byte	0x3
 2930 072c 00000000 		.4byte	previousOrientation
 2931 0730 24       		.uleb128 0x24
 2932 0731 CD060000 		.4byte	.LASF118
 2933 0735 01       		.byte	0x1
 2934 0736 1C       		.byte	0x1c
 2935 0737 25020000 		.4byte	0x225
 2936 073b 05       		.uleb128 0x5
 2937 073c 03       		.byte	0x3
 2938 073d 00000000 		.4byte	currentInstruction
 2939 0741 24       		.uleb128 0x24
 2940 0742 50010000 		.4byte	.LASF89
 2941 0746 01       		.byte	0x1
 2942 0747 1D       		.byte	0x1d
 2943 0748 68000000 		.4byte	0x68
 2944 074c 05       		.uleb128 0x5
 2945 074d 03       		.byte	0x3
 2946 074e 00000000 		.4byte	numSteps
 2947 0752 24       		.uleb128 0x24
 2948 0753 6B030000 		.4byte	.LASF90
 2949 0757 01       		.byte	0x1
 2950 0758 1F       		.byte	0x1f
 2951 0759 1F050000 		.4byte	0x51f
 2952 075d 05       		.uleb128 0x5
 2953 075e 03       		.byte	0x3
 2954 075f 00000000 		.4byte	instructionList
 2955 0763 24       		.uleb128 0x24
 2956 0764 7B030000 		.4byte	.LASF91
 2957 0768 01       		.byte	0x1
 2958 0769 20       		.byte	0x20
 2959 076a AE000000 		.4byte	0xae
 2960 076e 05       		.uleb128 0x5
 2961 076f 03       		.byte	0x3
 2962 0770 00000000 		.4byte	instructionIndex
 2963 0774 23       		.uleb128 0x23
 2964 0775 733300   		.ascii	"s3\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 67


 2965 0778 01       		.byte	0x1
 2966 0779 25       		.byte	0x25
 2967 077a 96000000 		.4byte	0x96
 2968 077e 05       		.uleb128 0x5
 2969 077f 03       		.byte	0x3
 2970 0780 00000000 		.4byte	s3
 2971 0784 23       		.uleb128 0x23
 2972 0785 733400   		.ascii	"s4\000"
 2973 0788 01       		.byte	0x1
 2974 0789 25       		.byte	0x25
 2975 078a 96000000 		.4byte	0x96
 2976 078e 05       		.uleb128 0x5
 2977 078f 03       		.byte	0x3
 2978 0790 00000000 		.4byte	s4
 2979 0794 23       		.uleb128 0x23
 2980 0795 733500   		.ascii	"s5\000"
 2981 0798 01       		.byte	0x1
 2982 0799 25       		.byte	0x25
 2983 079a 96000000 		.4byte	0x96
 2984 079e 05       		.uleb128 0x5
 2985 079f 03       		.byte	0x3
 2986 07a0 00000000 		.4byte	s5
 2987 07a4 23       		.uleb128 0x23
 2988 07a5 733600   		.ascii	"s6\000"
 2989 07a8 01       		.byte	0x1
 2990 07a9 25       		.byte	0x25
 2991 07aa 96000000 		.4byte	0x96
 2992 07ae 05       		.uleb128 0x5
 2993 07af 03       		.byte	0x3
 2994 07b0 00000000 		.4byte	s6
 2995 07b4 24       		.uleb128 0x24
 2996 07b5 41050000 		.4byte	.LASF119
 2997 07b9 01       		.byte	0x1
 2998 07ba 2A       		.byte	0x2a
 2999 07bb AE000000 		.4byte	0xae
 3000 07bf 05       		.uleb128 0x5
 3001 07c0 03       		.byte	0x3
 3002 07c1 00000000 		.4byte	totalMilliseconds
 3003 07c5 24       		.uleb128 0x24
 3004 07c6 1C010000 		.4byte	.LASF120
 3005 07ca 01       		.byte	0x1
 3006 07cb 2B       		.byte	0x2b
 3007 07cc D2000000 		.4byte	0xd2
 3008 07d0 05       		.uleb128 0x5
 3009 07d1 03       		.byte	0x3
 3010 07d2 00000000 		.4byte	totalDistance
 3011 07d6 25       		.uleb128 0x25
 3012 07d7 84000000 		.4byte	0x84
 3013 07db E6070000 		.4byte	0x7e6
 3014 07df 26       		.uleb128 0x26
 3015 07e0 7D000000 		.4byte	0x7d
 3016 07e4 44       		.byte	0x44
 3017 07e5 00       		.byte	0
 3018 07e6 24       		.uleb128 0x24
 3019 07e7 41000000 		.4byte	.LASF121
 3020 07eb 01       		.byte	0x1
 3021 07ec 2D       		.byte	0x2d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 68


 3022 07ed D6070000 		.4byte	0x7d6
 3023 07f1 05       		.uleb128 0x5
 3024 07f2 03       		.byte	0x3
 3025 07f3 00000000 		.4byte	buffer
 3026 07f7 24       		.uleb128 0x24
 3027 07f8 F9010000 		.4byte	.LASF122
 3028 07fc 01       		.byte	0x1
 3029 07fd 2E       		.byte	0x2e
 3030 07fe 68000000 		.4byte	0x68
 3031 0802 05       		.uleb128 0x5
 3032 0803 03       		.byte	0x3
 3033 0804 00000000 		.4byte	quadDec2Count
 3034 0808 24       		.uleb128 0x24
 3035 0809 28070000 		.4byte	.LASF123
 3036 080d 01       		.byte	0x1
 3037 080e 2F       		.byte	0x2f
 3038 080f 68000000 		.4byte	0x68
 3039 0813 05       		.uleb128 0x5
 3040 0814 03       		.byte	0x3
 3041 0815 00000000 		.4byte	timerInt
 3042 0819 24       		.uleb128 0x24
 3043 081a 8C020000 		.4byte	.LASF124
 3044 081e 01       		.byte	0x1
 3045 081f 30       		.byte	0x30
 3046 0820 68000000 		.4byte	0x68
 3047 0824 05       		.uleb128 0x5
 3048 0825 03       		.byte	0x3
 3049 0826 00000000 		.4byte	keepLedOn
 3050 082a 24       		.uleb128 0x24
 3051 082b C1050000 		.4byte	.LASF125
 3052 082f 01       		.byte	0x1
 3053 0830 32       		.byte	0x32
 3054 0831 AE000000 		.4byte	0xae
 3055 0835 05       		.uleb128 0x5
 3056 0836 03       		.byte	0x3
 3057 0837 00000000 		.4byte	stopBuffer
 3058 083b 24       		.uleb128 0x24
 3059 083c CA030000 		.4byte	.LASF126
 3060 0840 01       		.byte	0x1
 3061 0841 33       		.byte	0x33
 3062 0842 96000000 		.4byte	0x96
 3063 0846 05       		.uleb128 0x5
 3064 0847 03       		.byte	0x3
 3065 0848 00000000 		.4byte	turnFinishedFlag
 3066 084c 24       		.uleb128 0x24
 3067 084d 32010000 		.4byte	.LASF127
 3068 0851 01       		.byte	0x1
 3069 0852 34       		.byte	0x34
 3070 0853 96000000 		.4byte	0x96
 3071 0857 05       		.uleb128 0x5
 3072 0858 03       		.byte	0x3
 3073 0859 00000000 		.4byte	forwardUntilTargetStartedFlag
 3074 085d 24       		.uleb128 0x24
 3075 085e 01040000 		.4byte	.LASF128
 3076 0862 01       		.byte	0x1
 3077 0863 35       		.byte	0x35
 3078 0864 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 69


 3079 0868 05       		.uleb128 0x5
 3080 0869 03       		.byte	0x3
 3081 086a 00000000 		.4byte	blockSizeTotal
 3082 086e 24       		.uleb128 0x24
 3083 086f 98030000 		.4byte	.LASF129
 3084 0873 01       		.byte	0x1
 3085 0874 B4       		.byte	0xb4
 3086 0875 D2000000 		.4byte	0xd2
 3087 0879 05       		.uleb128 0x5
 3088 087a 03       		.byte	0x3
 3089 087b 00000000 		.4byte	xBlocksize
 3090 087f 24       		.uleb128 0x24
 3091 0880 EC040000 		.4byte	.LASF130
 3092 0884 01       		.byte	0x1
 3093 0885 B5       		.byte	0xb5
 3094 0886 D2000000 		.4byte	0xd2
 3095 088a 05       		.uleb128 0x5
 3096 088b 03       		.byte	0x3
 3097 088c 00000000 		.4byte	yBlocksize
 3098 0890 24       		.uleb128 0x24
 3099 0891 98060000 		.4byte	.LASF131
 3100 0895 01       		.byte	0x1
 3101 0896 B6       		.byte	0xb6
 3102 0897 96000000 		.4byte	0x96
 3103 089b 05       		.uleb128 0x5
 3104 089c 03       		.byte	0x3
 3105 089d 00000000 		.4byte	currentRow
 3106 08a1 24       		.uleb128 0x24
 3107 08a2 06070000 		.4byte	.LASF132
 3108 08a6 01       		.byte	0x1
 3109 08a7 B7       		.byte	0xb7
 3110 08a8 96000000 		.4byte	0x96
 3111 08ac 05       		.uleb128 0x5
 3112 08ad 03       		.byte	0x3
 3113 08ae 00000000 		.4byte	currentCol
 3114 08b2 00       		.byte	0
 3115              		.section	.debug_abbrev,"",%progbits
 3116              	.Ldebug_abbrev0:
 3117 0000 01       		.uleb128 0x1
 3118 0001 11       		.uleb128 0x11
 3119 0002 01       		.byte	0x1
 3120 0003 25       		.uleb128 0x25
 3121 0004 0E       		.uleb128 0xe
 3122 0005 13       		.uleb128 0x13
 3123 0006 0B       		.uleb128 0xb
 3124 0007 03       		.uleb128 0x3
 3125 0008 0E       		.uleb128 0xe
 3126 0009 1B       		.uleb128 0x1b
 3127 000a 0E       		.uleb128 0xe
 3128 000b 55       		.uleb128 0x55
 3129 000c 17       		.uleb128 0x17
 3130 000d 11       		.uleb128 0x11
 3131 000e 01       		.uleb128 0x1
 3132 000f 10       		.uleb128 0x10
 3133 0010 17       		.uleb128 0x17
 3134 0011 00       		.byte	0
 3135 0012 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 70


 3136 0013 02       		.uleb128 0x2
 3137 0014 24       		.uleb128 0x24
 3138 0015 00       		.byte	0
 3139 0016 0B       		.uleb128 0xb
 3140 0017 0B       		.uleb128 0xb
 3141 0018 3E       		.uleb128 0x3e
 3142 0019 0B       		.uleb128 0xb
 3143 001a 03       		.uleb128 0x3
 3144 001b 0E       		.uleb128 0xe
 3145 001c 00       		.byte	0
 3146 001d 00       		.byte	0
 3147 001e 03       		.uleb128 0x3
 3148 001f 16       		.uleb128 0x16
 3149 0020 00       		.byte	0
 3150 0021 03       		.uleb128 0x3
 3151 0022 0E       		.uleb128 0xe
 3152 0023 3A       		.uleb128 0x3a
 3153 0024 0B       		.uleb128 0xb
 3154 0025 3B       		.uleb128 0x3b
 3155 0026 0B       		.uleb128 0xb
 3156 0027 49       		.uleb128 0x49
 3157 0028 13       		.uleb128 0x13
 3158 0029 00       		.byte	0
 3159 002a 00       		.byte	0
 3160 002b 04       		.uleb128 0x4
 3161 002c 24       		.uleb128 0x24
 3162 002d 00       		.byte	0
 3163 002e 0B       		.uleb128 0xb
 3164 002f 0B       		.uleb128 0xb
 3165 0030 3E       		.uleb128 0x3e
 3166 0031 0B       		.uleb128 0xb
 3167 0032 03       		.uleb128 0x3
 3168 0033 08       		.uleb128 0x8
 3169 0034 00       		.byte	0
 3170 0035 00       		.byte	0
 3171 0036 05       		.uleb128 0x5
 3172 0037 16       		.uleb128 0x16
 3173 0038 00       		.byte	0
 3174 0039 03       		.uleb128 0x3
 3175 003a 0E       		.uleb128 0xe
 3176 003b 3A       		.uleb128 0x3a
 3177 003c 0B       		.uleb128 0xb
 3178 003d 3B       		.uleb128 0x3b
 3179 003e 05       		.uleb128 0x5
 3180 003f 49       		.uleb128 0x49
 3181 0040 13       		.uleb128 0x13
 3182 0041 00       		.byte	0
 3183 0042 00       		.byte	0
 3184 0043 06       		.uleb128 0x6
 3185 0044 13       		.uleb128 0x13
 3186 0045 01       		.byte	0x1
 3187 0046 03       		.uleb128 0x3
 3188 0047 0E       		.uleb128 0xe
 3189 0048 0B       		.uleb128 0xb
 3190 0049 0B       		.uleb128 0xb
 3191 004a 3A       		.uleb128 0x3a
 3192 004b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 71


 3193 004c 3B       		.uleb128 0x3b
 3194 004d 0B       		.uleb128 0xb
 3195 004e 01       		.uleb128 0x1
 3196 004f 13       		.uleb128 0x13
 3197 0050 00       		.byte	0
 3198 0051 00       		.byte	0
 3199 0052 07       		.uleb128 0x7
 3200 0053 0D       		.uleb128 0xd
 3201 0054 00       		.byte	0
 3202 0055 03       		.uleb128 0x3
 3203 0056 0E       		.uleb128 0xe
 3204 0057 3A       		.uleb128 0x3a
 3205 0058 0B       		.uleb128 0xb
 3206 0059 3B       		.uleb128 0x3b
 3207 005a 0B       		.uleb128 0xb
 3208 005b 49       		.uleb128 0x49
 3209 005c 13       		.uleb128 0x13
 3210 005d 38       		.uleb128 0x38
 3211 005e 0B       		.uleb128 0xb
 3212 005f 00       		.byte	0
 3213 0060 00       		.byte	0
 3214 0061 08       		.uleb128 0x8
 3215 0062 04       		.uleb128 0x4
 3216 0063 01       		.byte	0x1
 3217 0064 03       		.uleb128 0x3
 3218 0065 0E       		.uleb128 0xe
 3219 0066 0B       		.uleb128 0xb
 3220 0067 0B       		.uleb128 0xb
 3221 0068 49       		.uleb128 0x49
 3222 0069 13       		.uleb128 0x13
 3223 006a 3A       		.uleb128 0x3a
 3224 006b 0B       		.uleb128 0xb
 3225 006c 3B       		.uleb128 0x3b
 3226 006d 0B       		.uleb128 0xb
 3227 006e 01       		.uleb128 0x1
 3228 006f 13       		.uleb128 0x13
 3229 0070 00       		.byte	0
 3230 0071 00       		.byte	0
 3231 0072 09       		.uleb128 0x9
 3232 0073 28       		.uleb128 0x28
 3233 0074 00       		.byte	0
 3234 0075 03       		.uleb128 0x3
 3235 0076 0E       		.uleb128 0xe
 3236 0077 1C       		.uleb128 0x1c
 3237 0078 0B       		.uleb128 0xb
 3238 0079 00       		.byte	0
 3239 007a 00       		.byte	0
 3240 007b 0A       		.uleb128 0xa
 3241 007c 28       		.uleb128 0x28
 3242 007d 00       		.byte	0
 3243 007e 03       		.uleb128 0x3
 3244 007f 08       		.uleb128 0x8
 3245 0080 1C       		.uleb128 0x1c
 3246 0081 0B       		.uleb128 0xb
 3247 0082 00       		.byte	0
 3248 0083 00       		.byte	0
 3249 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 72


 3250 0085 2E       		.uleb128 0x2e
 3251 0086 01       		.byte	0x1
 3252 0087 3F       		.uleb128 0x3f
 3253 0088 19       		.uleb128 0x19
 3254 0089 03       		.uleb128 0x3
 3255 008a 0E       		.uleb128 0xe
 3256 008b 3A       		.uleb128 0x3a
 3257 008c 0B       		.uleb128 0xb
 3258 008d 3B       		.uleb128 0x3b
 3259 008e 0B       		.uleb128 0xb
 3260 008f 27       		.uleb128 0x27
 3261 0090 19       		.uleb128 0x19
 3262 0091 11       		.uleb128 0x11
 3263 0092 01       		.uleb128 0x1
 3264 0093 12       		.uleb128 0x12
 3265 0094 06       		.uleb128 0x6
 3266 0095 40       		.uleb128 0x40
 3267 0096 18       		.uleb128 0x18
 3268 0097 9642     		.uleb128 0x2116
 3269 0099 19       		.uleb128 0x19
 3270 009a 01       		.uleb128 0x1
 3271 009b 13       		.uleb128 0x13
 3272 009c 00       		.byte	0
 3273 009d 00       		.byte	0
 3274 009e 0C       		.uleb128 0xc
 3275 009f 0B       		.uleb128 0xb
 3276 00a0 01       		.byte	0x1
 3277 00a1 11       		.uleb128 0x11
 3278 00a2 01       		.uleb128 0x1
 3279 00a3 12       		.uleb128 0x12
 3280 00a4 06       		.uleb128 0x6
 3281 00a5 00       		.byte	0
 3282 00a6 00       		.byte	0
 3283 00a7 0D       		.uleb128 0xd
 3284 00a8 34       		.uleb128 0x34
 3285 00a9 00       		.byte	0
 3286 00aa 03       		.uleb128 0x3
 3287 00ab 0E       		.uleb128 0xe
 3288 00ac 3A       		.uleb128 0x3a
 3289 00ad 0B       		.uleb128 0xb
 3290 00ae 3B       		.uleb128 0x3b
 3291 00af 0B       		.uleb128 0xb
 3292 00b0 49       		.uleb128 0x49
 3293 00b1 13       		.uleb128 0x13
 3294 00b2 02       		.uleb128 0x2
 3295 00b3 18       		.uleb128 0x18
 3296 00b4 00       		.byte	0
 3297 00b5 00       		.byte	0
 3298 00b6 0E       		.uleb128 0xe
 3299 00b7 2E       		.uleb128 0x2e
 3300 00b8 00       		.byte	0
 3301 00b9 3F       		.uleb128 0x3f
 3302 00ba 19       		.uleb128 0x19
 3303 00bb 03       		.uleb128 0x3
 3304 00bc 0E       		.uleb128 0xe
 3305 00bd 3A       		.uleb128 0x3a
 3306 00be 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 73


 3307 00bf 3B       		.uleb128 0x3b
 3308 00c0 0B       		.uleb128 0xb
 3309 00c1 27       		.uleb128 0x27
 3310 00c2 19       		.uleb128 0x19
 3311 00c3 11       		.uleb128 0x11
 3312 00c4 01       		.uleb128 0x1
 3313 00c5 12       		.uleb128 0x12
 3314 00c6 06       		.uleb128 0x6
 3315 00c7 40       		.uleb128 0x40
 3316 00c8 18       		.uleb128 0x18
 3317 00c9 9742     		.uleb128 0x2117
 3318 00cb 19       		.uleb128 0x19
 3319 00cc 00       		.byte	0
 3320 00cd 00       		.byte	0
 3321 00ce 0F       		.uleb128 0xf
 3322 00cf 2E       		.uleb128 0x2e
 3323 00d0 00       		.byte	0
 3324 00d1 3F       		.uleb128 0x3f
 3325 00d2 19       		.uleb128 0x19
 3326 00d3 03       		.uleb128 0x3
 3327 00d4 0E       		.uleb128 0xe
 3328 00d5 3A       		.uleb128 0x3a
 3329 00d6 0B       		.uleb128 0xb
 3330 00d7 3B       		.uleb128 0x3b
 3331 00d8 0B       		.uleb128 0xb
 3332 00d9 27       		.uleb128 0x27
 3333 00da 19       		.uleb128 0x19
 3334 00db 11       		.uleb128 0x11
 3335 00dc 01       		.uleb128 0x1
 3336 00dd 12       		.uleb128 0x12
 3337 00de 06       		.uleb128 0x6
 3338 00df 40       		.uleb128 0x40
 3339 00e0 18       		.uleb128 0x18
 3340 00e1 9642     		.uleb128 0x2116
 3341 00e3 19       		.uleb128 0x19
 3342 00e4 00       		.byte	0
 3343 00e5 00       		.byte	0
 3344 00e6 10       		.uleb128 0x10
 3345 00e7 2E       		.uleb128 0x2e
 3346 00e8 00       		.byte	0
 3347 00e9 3F       		.uleb128 0x3f
 3348 00ea 19       		.uleb128 0x19
 3349 00eb 03       		.uleb128 0x3
 3350 00ec 0E       		.uleb128 0xe
 3351 00ed 3A       		.uleb128 0x3a
 3352 00ee 0B       		.uleb128 0xb
 3353 00ef 3B       		.uleb128 0x3b
 3354 00f0 0B       		.uleb128 0xb
 3355 00f1 49       		.uleb128 0x49
 3356 00f2 13       		.uleb128 0x13
 3357 00f3 11       		.uleb128 0x11
 3358 00f4 01       		.uleb128 0x1
 3359 00f5 12       		.uleb128 0x12
 3360 00f6 06       		.uleb128 0x6
 3361 00f7 40       		.uleb128 0x40
 3362 00f8 18       		.uleb128 0x18
 3363 00f9 9642     		.uleb128 0x2116
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 74


 3364 00fb 19       		.uleb128 0x19
 3365 00fc 00       		.byte	0
 3366 00fd 00       		.byte	0
 3367 00fe 11       		.uleb128 0x11
 3368 00ff 2E       		.uleb128 0x2e
 3369 0100 01       		.byte	0x1
 3370 0101 3F       		.uleb128 0x3f
 3371 0102 19       		.uleb128 0x19
 3372 0103 03       		.uleb128 0x3
 3373 0104 0E       		.uleb128 0xe
 3374 0105 3A       		.uleb128 0x3a
 3375 0106 0B       		.uleb128 0xb
 3376 0107 3B       		.uleb128 0x3b
 3377 0108 0B       		.uleb128 0xb
 3378 0109 27       		.uleb128 0x27
 3379 010a 19       		.uleb128 0x19
 3380 010b 49       		.uleb128 0x49
 3381 010c 13       		.uleb128 0x13
 3382 010d 11       		.uleb128 0x11
 3383 010e 01       		.uleb128 0x1
 3384 010f 12       		.uleb128 0x12
 3385 0110 06       		.uleb128 0x6
 3386 0111 40       		.uleb128 0x40
 3387 0112 18       		.uleb128 0x18
 3388 0113 9642     		.uleb128 0x2116
 3389 0115 19       		.uleb128 0x19
 3390 0116 01       		.uleb128 0x1
 3391 0117 13       		.uleb128 0x13
 3392 0118 00       		.byte	0
 3393 0119 00       		.byte	0
 3394 011a 12       		.uleb128 0x12
 3395 011b 05       		.uleb128 0x5
 3396 011c 00       		.byte	0
 3397 011d 03       		.uleb128 0x3
 3398 011e 0E       		.uleb128 0xe
 3399 011f 3A       		.uleb128 0x3a
 3400 0120 0B       		.uleb128 0xb
 3401 0121 3B       		.uleb128 0x3b
 3402 0122 0B       		.uleb128 0xb
 3403 0123 49       		.uleb128 0x49
 3404 0124 13       		.uleb128 0x13
 3405 0125 02       		.uleb128 0x2
 3406 0126 18       		.uleb128 0x18
 3407 0127 00       		.byte	0
 3408 0128 00       		.byte	0
 3409 0129 13       		.uleb128 0x13
 3410 012a 34       		.uleb128 0x34
 3411 012b 00       		.byte	0
 3412 012c 03       		.uleb128 0x3
 3413 012d 08       		.uleb128 0x8
 3414 012e 3A       		.uleb128 0x3a
 3415 012f 0B       		.uleb128 0xb
 3416 0130 3B       		.uleb128 0x3b
 3417 0131 0B       		.uleb128 0xb
 3418 0132 49       		.uleb128 0x49
 3419 0133 13       		.uleb128 0x13
 3420 0134 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 75


 3421 0135 18       		.uleb128 0x18
 3422 0136 00       		.byte	0
 3423 0137 00       		.byte	0
 3424 0138 14       		.uleb128 0x14
 3425 0139 2E       		.uleb128 0x2e
 3426 013a 00       		.byte	0
 3427 013b 3F       		.uleb128 0x3f
 3428 013c 19       		.uleb128 0x19
 3429 013d 03       		.uleb128 0x3
 3430 013e 0E       		.uleb128 0xe
 3431 013f 3A       		.uleb128 0x3a
 3432 0140 0B       		.uleb128 0xb
 3433 0141 3B       		.uleb128 0x3b
 3434 0142 0B       		.uleb128 0xb
 3435 0143 11       		.uleb128 0x11
 3436 0144 01       		.uleb128 0x1
 3437 0145 12       		.uleb128 0x12
 3438 0146 06       		.uleb128 0x6
 3439 0147 40       		.uleb128 0x40
 3440 0148 18       		.uleb128 0x18
 3441 0149 9742     		.uleb128 0x2117
 3442 014b 19       		.uleb128 0x19
 3443 014c 00       		.byte	0
 3444 014d 00       		.byte	0
 3445 014e 15       		.uleb128 0x15
 3446 014f 2E       		.uleb128 0x2e
 3447 0150 00       		.byte	0
 3448 0151 3F       		.uleb128 0x3f
 3449 0152 19       		.uleb128 0x19
 3450 0153 03       		.uleb128 0x3
 3451 0154 0E       		.uleb128 0xe
 3452 0155 3A       		.uleb128 0x3a
 3453 0156 0B       		.uleb128 0xb
 3454 0157 3B       		.uleb128 0x3b
 3455 0158 05       		.uleb128 0x5
 3456 0159 49       		.uleb128 0x49
 3457 015a 13       		.uleb128 0x13
 3458 015b 11       		.uleb128 0x11
 3459 015c 01       		.uleb128 0x1
 3460 015d 12       		.uleb128 0x12
 3461 015e 06       		.uleb128 0x6
 3462 015f 40       		.uleb128 0x40
 3463 0160 18       		.uleb128 0x18
 3464 0161 9742     		.uleb128 0x2117
 3465 0163 19       		.uleb128 0x19
 3466 0164 00       		.byte	0
 3467 0165 00       		.byte	0
 3468 0166 16       		.uleb128 0x16
 3469 0167 2E       		.uleb128 0x2e
 3470 0168 01       		.byte	0x1
 3471 0169 3F       		.uleb128 0x3f
 3472 016a 19       		.uleb128 0x19
 3473 016b 03       		.uleb128 0x3
 3474 016c 0E       		.uleb128 0xe
 3475 016d 3A       		.uleb128 0x3a
 3476 016e 0B       		.uleb128 0xb
 3477 016f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 76


 3478 0170 05       		.uleb128 0x5
 3479 0171 49       		.uleb128 0x49
 3480 0172 13       		.uleb128 0x13
 3481 0173 11       		.uleb128 0x11
 3482 0174 01       		.uleb128 0x1
 3483 0175 12       		.uleb128 0x12
 3484 0176 06       		.uleb128 0x6
 3485 0177 40       		.uleb128 0x40
 3486 0178 18       		.uleb128 0x18
 3487 0179 9642     		.uleb128 0x2116
 3488 017b 19       		.uleb128 0x19
 3489 017c 01       		.uleb128 0x1
 3490 017d 13       		.uleb128 0x13
 3491 017e 00       		.byte	0
 3492 017f 00       		.byte	0
 3493 0180 17       		.uleb128 0x17
 3494 0181 34       		.uleb128 0x34
 3495 0182 00       		.byte	0
 3496 0183 03       		.uleb128 0x3
 3497 0184 0E       		.uleb128 0xe
 3498 0185 3A       		.uleb128 0x3a
 3499 0186 0B       		.uleb128 0xb
 3500 0187 3B       		.uleb128 0x3b
 3501 0188 05       		.uleb128 0x5
 3502 0189 49       		.uleb128 0x49
 3503 018a 13       		.uleb128 0x13
 3504 018b 02       		.uleb128 0x2
 3505 018c 18       		.uleb128 0x18
 3506 018d 00       		.byte	0
 3507 018e 00       		.byte	0
 3508 018f 18       		.uleb128 0x18
 3509 0190 2E       		.uleb128 0x2e
 3510 0191 01       		.byte	0x1
 3511 0192 3F       		.uleb128 0x3f
 3512 0193 19       		.uleb128 0x19
 3513 0194 03       		.uleb128 0x3
 3514 0195 0E       		.uleb128 0xe
 3515 0196 3A       		.uleb128 0x3a
 3516 0197 0B       		.uleb128 0xb
 3517 0198 3B       		.uleb128 0x3b
 3518 0199 05       		.uleb128 0x5
 3519 019a 27       		.uleb128 0x27
 3520 019b 19       		.uleb128 0x19
 3521 019c 49       		.uleb128 0x49
 3522 019d 13       		.uleb128 0x13
 3523 019e 11       		.uleb128 0x11
 3524 019f 01       		.uleb128 0x1
 3525 01a0 12       		.uleb128 0x12
 3526 01a1 06       		.uleb128 0x6
 3527 01a2 40       		.uleb128 0x40
 3528 01a3 18       		.uleb128 0x18
 3529 01a4 9642     		.uleb128 0x2116
 3530 01a6 19       		.uleb128 0x19
 3531 01a7 01       		.uleb128 0x1
 3532 01a8 13       		.uleb128 0x13
 3533 01a9 00       		.byte	0
 3534 01aa 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 77


 3535 01ab 19       		.uleb128 0x19
 3536 01ac 05       		.uleb128 0x5
 3537 01ad 00       		.byte	0
 3538 01ae 03       		.uleb128 0x3
 3539 01af 0E       		.uleb128 0xe
 3540 01b0 3A       		.uleb128 0x3a
 3541 01b1 0B       		.uleb128 0xb
 3542 01b2 3B       		.uleb128 0x3b
 3543 01b3 05       		.uleb128 0x5
 3544 01b4 49       		.uleb128 0x49
 3545 01b5 13       		.uleb128 0x13
 3546 01b6 02       		.uleb128 0x2
 3547 01b7 18       		.uleb128 0x18
 3548 01b8 00       		.byte	0
 3549 01b9 00       		.byte	0
 3550 01ba 1A       		.uleb128 0x1a
 3551 01bb 0B       		.uleb128 0xb
 3552 01bc 01       		.byte	0x1
 3553 01bd 55       		.uleb128 0x55
 3554 01be 17       		.uleb128 0x17
 3555 01bf 01       		.uleb128 0x1
 3556 01c0 13       		.uleb128 0x13
 3557 01c1 00       		.byte	0
 3558 01c2 00       		.byte	0
 3559 01c3 1B       		.uleb128 0x1b
 3560 01c4 34       		.uleb128 0x34
 3561 01c5 00       		.byte	0
 3562 01c6 03       		.uleb128 0x3
 3563 01c7 08       		.uleb128 0x8
 3564 01c8 3A       		.uleb128 0x3a
 3565 01c9 0B       		.uleb128 0xb
 3566 01ca 3B       		.uleb128 0x3b
 3567 01cb 05       		.uleb128 0x5
 3568 01cc 49       		.uleb128 0x49
 3569 01cd 13       		.uleb128 0x13
 3570 01ce 02       		.uleb128 0x2
 3571 01cf 18       		.uleb128 0x18
 3572 01d0 00       		.byte	0
 3573 01d1 00       		.byte	0
 3574 01d2 1C       		.uleb128 0x1c
 3575 01d3 0B       		.uleb128 0xb
 3576 01d4 01       		.byte	0x1
 3577 01d5 55       		.uleb128 0x55
 3578 01d6 17       		.uleb128 0x17
 3579 01d7 00       		.byte	0
 3580 01d8 00       		.byte	0
 3581 01d9 1D       		.uleb128 0x1d
 3582 01da 2E       		.uleb128 0x2e
 3583 01db 00       		.byte	0
 3584 01dc 3F       		.uleb128 0x3f
 3585 01dd 19       		.uleb128 0x19
 3586 01de 03       		.uleb128 0x3
 3587 01df 0E       		.uleb128 0xe
 3588 01e0 3A       		.uleb128 0x3a
 3589 01e1 0B       		.uleb128 0xb
 3590 01e2 3B       		.uleb128 0x3b
 3591 01e3 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 78


 3592 01e4 11       		.uleb128 0x11
 3593 01e5 01       		.uleb128 0x1
 3594 01e6 12       		.uleb128 0x12
 3595 01e7 06       		.uleb128 0x6
 3596 01e8 40       		.uleb128 0x40
 3597 01e9 18       		.uleb128 0x18
 3598 01ea 9742     		.uleb128 0x2117
 3599 01ec 19       		.uleb128 0x19
 3600 01ed 00       		.byte	0
 3601 01ee 00       		.byte	0
 3602 01ef 1E       		.uleb128 0x1e
 3603 01f0 2E       		.uleb128 0x2e
 3604 01f1 01       		.byte	0x1
 3605 01f2 3F       		.uleb128 0x3f
 3606 01f3 19       		.uleb128 0x19
 3607 01f4 03       		.uleb128 0x3
 3608 01f5 0E       		.uleb128 0xe
 3609 01f6 3A       		.uleb128 0x3a
 3610 01f7 0B       		.uleb128 0xb
 3611 01f8 3B       		.uleb128 0x3b
 3612 01f9 05       		.uleb128 0x5
 3613 01fa 27       		.uleb128 0x27
 3614 01fb 19       		.uleb128 0x19
 3615 01fc 49       		.uleb128 0x49
 3616 01fd 13       		.uleb128 0x13
 3617 01fe 11       		.uleb128 0x11
 3618 01ff 01       		.uleb128 0x1
 3619 0200 12       		.uleb128 0x12
 3620 0201 06       		.uleb128 0x6
 3621 0202 40       		.uleb128 0x40
 3622 0203 18       		.uleb128 0x18
 3623 0204 9742     		.uleb128 0x2117
 3624 0206 19       		.uleb128 0x19
 3625 0207 01       		.uleb128 0x1
 3626 0208 13       		.uleb128 0x13
 3627 0209 00       		.byte	0
 3628 020a 00       		.byte	0
 3629 020b 1F       		.uleb128 0x1f
 3630 020c 0F       		.uleb128 0xf
 3631 020d 00       		.byte	0
 3632 020e 0B       		.uleb128 0xb
 3633 020f 0B       		.uleb128 0xb
 3634 0210 49       		.uleb128 0x49
 3635 0211 13       		.uleb128 0x13
 3636 0212 00       		.byte	0
 3637 0213 00       		.byte	0
 3638 0214 20       		.uleb128 0x20
 3639 0215 2E       		.uleb128 0x2e
 3640 0216 00       		.byte	0
 3641 0217 3F       		.uleb128 0x3f
 3642 0218 19       		.uleb128 0x19
 3643 0219 03       		.uleb128 0x3
 3644 021a 0E       		.uleb128 0xe
 3645 021b 3A       		.uleb128 0x3a
 3646 021c 0B       		.uleb128 0xb
 3647 021d 3B       		.uleb128 0x3b
 3648 021e 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 79


 3649 021f 11       		.uleb128 0x11
 3650 0220 01       		.uleb128 0x1
 3651 0221 12       		.uleb128 0x12
 3652 0222 06       		.uleb128 0x6
 3653 0223 40       		.uleb128 0x40
 3654 0224 18       		.uleb128 0x18
 3655 0225 9642     		.uleb128 0x2116
 3656 0227 19       		.uleb128 0x19
 3657 0228 00       		.byte	0
 3658 0229 00       		.byte	0
 3659 022a 21       		.uleb128 0x21
 3660 022b 34       		.uleb128 0x34
 3661 022c 00       		.byte	0
 3662 022d 03       		.uleb128 0x3
 3663 022e 0E       		.uleb128 0xe
 3664 022f 3A       		.uleb128 0x3a
 3665 0230 0B       		.uleb128 0xb
 3666 0231 3B       		.uleb128 0x3b
 3667 0232 05       		.uleb128 0x5
 3668 0233 49       		.uleb128 0x49
 3669 0234 13       		.uleb128 0x13
 3670 0235 3F       		.uleb128 0x3f
 3671 0236 19       		.uleb128 0x19
 3672 0237 3C       		.uleb128 0x3c
 3673 0238 19       		.uleb128 0x19
 3674 0239 00       		.byte	0
 3675 023a 00       		.byte	0
 3676 023b 22       		.uleb128 0x22
 3677 023c 35       		.uleb128 0x35
 3678 023d 00       		.byte	0
 3679 023e 49       		.uleb128 0x49
 3680 023f 13       		.uleb128 0x13
 3681 0240 00       		.byte	0
 3682 0241 00       		.byte	0
 3683 0242 23       		.uleb128 0x23
 3684 0243 34       		.uleb128 0x34
 3685 0244 00       		.byte	0
 3686 0245 03       		.uleb128 0x3
 3687 0246 08       		.uleb128 0x8
 3688 0247 3A       		.uleb128 0x3a
 3689 0248 0B       		.uleb128 0xb
 3690 0249 3B       		.uleb128 0x3b
 3691 024a 0B       		.uleb128 0xb
 3692 024b 49       		.uleb128 0x49
 3693 024c 13       		.uleb128 0x13
 3694 024d 3F       		.uleb128 0x3f
 3695 024e 19       		.uleb128 0x19
 3696 024f 02       		.uleb128 0x2
 3697 0250 18       		.uleb128 0x18
 3698 0251 00       		.byte	0
 3699 0252 00       		.byte	0
 3700 0253 24       		.uleb128 0x24
 3701 0254 34       		.uleb128 0x34
 3702 0255 00       		.byte	0
 3703 0256 03       		.uleb128 0x3
 3704 0257 0E       		.uleb128 0xe
 3705 0258 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 80


 3706 0259 0B       		.uleb128 0xb
 3707 025a 3B       		.uleb128 0x3b
 3708 025b 0B       		.uleb128 0xb
 3709 025c 49       		.uleb128 0x49
 3710 025d 13       		.uleb128 0x13
 3711 025e 3F       		.uleb128 0x3f
 3712 025f 19       		.uleb128 0x19
 3713 0260 02       		.uleb128 0x2
 3714 0261 18       		.uleb128 0x18
 3715 0262 00       		.byte	0
 3716 0263 00       		.byte	0
 3717 0264 25       		.uleb128 0x25
 3718 0265 01       		.uleb128 0x1
 3719 0266 01       		.byte	0x1
 3720 0267 49       		.uleb128 0x49
 3721 0268 13       		.uleb128 0x13
 3722 0269 01       		.uleb128 0x1
 3723 026a 13       		.uleb128 0x13
 3724 026b 00       		.byte	0
 3725 026c 00       		.byte	0
 3726 026d 26       		.uleb128 0x26
 3727 026e 21       		.uleb128 0x21
 3728 026f 00       		.byte	0
 3729 0270 49       		.uleb128 0x49
 3730 0271 13       		.uleb128 0x13
 3731 0272 2F       		.uleb128 0x2f
 3732 0273 0B       		.uleb128 0xb
 3733 0274 00       		.byte	0
 3734 0275 00       		.byte	0
 3735 0276 27       		.uleb128 0x27
 3736 0277 34       		.uleb128 0x34
 3737 0278 00       		.byte	0
 3738 0279 03       		.uleb128 0x3
 3739 027a 08       		.uleb128 0x8
 3740 027b 3A       		.uleb128 0x3a
 3741 027c 0B       		.uleb128 0xb
 3742 027d 3B       		.uleb128 0x3b
 3743 027e 0B       		.uleb128 0xb
 3744 027f 49       		.uleb128 0x49
 3745 0280 13       		.uleb128 0x13
 3746 0281 3F       		.uleb128 0x3f
 3747 0282 19       		.uleb128 0x19
 3748 0283 3C       		.uleb128 0x3c
 3749 0284 19       		.uleb128 0x19
 3750 0285 00       		.byte	0
 3751 0286 00       		.byte	0
 3752 0287 28       		.uleb128 0x28
 3753 0288 34       		.uleb128 0x34
 3754 0289 00       		.byte	0
 3755 028a 03       		.uleb128 0x3
 3756 028b 0E       		.uleb128 0xe
 3757 028c 3A       		.uleb128 0x3a
 3758 028d 0B       		.uleb128 0xb
 3759 028e 3B       		.uleb128 0x3b
 3760 028f 0B       		.uleb128 0xb
 3761 0290 49       		.uleb128 0x49
 3762 0291 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 81


 3763 0292 3F       		.uleb128 0x3f
 3764 0293 19       		.uleb128 0x19
 3765 0294 3C       		.uleb128 0x3c
 3766 0295 19       		.uleb128 0x19
 3767 0296 00       		.byte	0
 3768 0297 00       		.byte	0
 3769 0298 00       		.byte	0
 3770              		.section	.debug_aranges,"",%progbits
 3771 0000 8C000000 		.4byte	0x8c
 3772 0004 0200     		.2byte	0x2
 3773 0006 00000000 		.4byte	.Ldebug_info0
 3774 000a 04       		.byte	0x4
 3775 000b 00       		.byte	0
 3776 000c 0000     		.2byte	0
 3777 000e 0000     		.2byte	0
 3778 0010 00000000 		.4byte	.LFB64
 3779 0014 EC000000 		.4byte	.LFE64-.LFB64
 3780 0018 00000000 		.4byte	.LFB65
 3781 001c 18000000 		.4byte	.LFE65-.LFB65
 3782 0020 00000000 		.4byte	.LFB66
 3783 0024 18000000 		.4byte	.LFE66-.LFB66
 3784 0028 00000000 		.4byte	.LFB67
 3785 002c 18000000 		.4byte	.LFE67-.LFB67
 3786 0030 00000000 		.4byte	.LFB68
 3787 0034 18000000 		.4byte	.LFE68-.LFB68
 3788 0038 00000000 		.4byte	.LFB69
 3789 003c 38000000 		.4byte	.LFE69-.LFB69
 3790 0040 00000000 		.4byte	.LFB70
 3791 0044 C0000000 		.4byte	.LFE70-.LFB70
 3792 0048 00000000 		.4byte	.LFB71
 3793 004c 54000000 		.4byte	.LFE71-.LFB71
 3794 0050 00000000 		.4byte	.LFB72
 3795 0054 34000000 		.4byte	.LFE72-.LFB72
 3796 0058 00000000 		.4byte	.LFB73
 3797 005c 84000000 		.4byte	.LFE73-.LFB73
 3798 0060 00000000 		.4byte	.LFB74
 3799 0064 58020000 		.4byte	.LFE74-.LFB74
 3800 0068 00000000 		.4byte	.LFB75
 3801 006c 8C020000 		.4byte	.LFE75-.LFB75
 3802 0070 00000000 		.4byte	.LFB76
 3803 0074 1C000000 		.4byte	.LFE76-.LFB76
 3804 0078 00000000 		.4byte	.LFB77
 3805 007c A4000000 		.4byte	.LFE77-.LFB77
 3806 0080 00000000 		.4byte	.LFB78
 3807 0084 C4000000 		.4byte	.LFE78-.LFB78
 3808 0088 00000000 		.4byte	0
 3809 008c 00000000 		.4byte	0
 3810              		.section	.debug_ranges,"",%progbits
 3811              	.Ldebug_ranges0:
 3812 0000 38000000 		.4byte	.LBB3
 3813 0004 BC000000 		.4byte	.LBE3
 3814 0008 BE000000 		.4byte	.LBB4
 3815 000c C0000000 		.4byte	.LBE4
 3816 0010 00000000 		.4byte	0
 3817 0014 00000000 		.4byte	0
 3818 0018 C2000000 		.4byte	.LBB5
 3819 001c 46010000 		.4byte	.LBE5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 82


 3820 0020 48010000 		.4byte	.LBB6
 3821 0024 4A010000 		.4byte	.LBE6
 3822 0028 00000000 		.4byte	0
 3823 002c 00000000 		.4byte	0
 3824 0030 4C010000 		.4byte	.LBB7
 3825 0034 D0010000 		.4byte	.LBE7
 3826 0038 D2010000 		.4byte	.LBB8
 3827 003c D4010000 		.4byte	.LBE8
 3828 0040 00000000 		.4byte	0
 3829 0044 00000000 		.4byte	0
 3830 0048 D6010000 		.4byte	.LBB9
 3831 004c 5A020000 		.4byte	.LBE9
 3832 0050 5C020000 		.4byte	.LBB10
 3833 0054 5E020000 		.4byte	.LBE10
 3834 0058 00000000 		.4byte	0
 3835 005c 00000000 		.4byte	0
 3836 0060 00000000 		.4byte	.LFB64
 3837 0064 EC000000 		.4byte	.LFE64
 3838 0068 00000000 		.4byte	.LFB65
 3839 006c 18000000 		.4byte	.LFE65
 3840 0070 00000000 		.4byte	.LFB66
 3841 0074 18000000 		.4byte	.LFE66
 3842 0078 00000000 		.4byte	.LFB67
 3843 007c 18000000 		.4byte	.LFE67
 3844 0080 00000000 		.4byte	.LFB68
 3845 0084 18000000 		.4byte	.LFE68
 3846 0088 00000000 		.4byte	.LFB69
 3847 008c 38000000 		.4byte	.LFE69
 3848 0090 00000000 		.4byte	.LFB70
 3849 0094 C0000000 		.4byte	.LFE70
 3850 0098 00000000 		.4byte	.LFB71
 3851 009c 54000000 		.4byte	.LFE71
 3852 00a0 00000000 		.4byte	.LFB72
 3853 00a4 34000000 		.4byte	.LFE72
 3854 00a8 00000000 		.4byte	.LFB73
 3855 00ac 84000000 		.4byte	.LFE73
 3856 00b0 00000000 		.4byte	.LFB74
 3857 00b4 58020000 		.4byte	.LFE74
 3858 00b8 00000000 		.4byte	.LFB75
 3859 00bc 8C020000 		.4byte	.LFE75
 3860 00c0 00000000 		.4byte	.LFB76
 3861 00c4 1C000000 		.4byte	.LFE76
 3862 00c8 00000000 		.4byte	.LFB77
 3863 00cc A4000000 		.4byte	.LFE77
 3864 00d0 00000000 		.4byte	.LFB78
 3865 00d4 C4000000 		.4byte	.LFE78
 3866 00d8 00000000 		.4byte	0
 3867 00dc 00000000 		.4byte	0
 3868              		.section	.debug_line,"",%progbits
 3869              	.Ldebug_line0:
 3870 0000 F9030000 		.section	.debug_str,"MS",%progbits,1
 3870      02007001 
 3870      00000201 
 3870      FB0E0D00 
 3870      01010101 
 3871              	.LASF47:
 3872 0000 64697265 		.ascii	"direction\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 83


 3872      6374696F 
 3872      6E00
 3873              	.LASF64:
 3874 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3874      61726441 
 3874      66746572 
 3874      5475726E 
 3874      00
 3875              	.LASF50:
 3876 001b 496E7374 		.ascii	"InstructionDirection\000"
 3876      72756374 
 3876      696F6E44 
 3876      69726563 
 3876      74696F6E 
 3877              	.LASF134:
 3878 0030 6D61696E 		.ascii	"main.c\000"
 3878      2E6300
 3879              	.LASF76:
 3880 0037 626C6F63 		.ascii	"blocksize\000"
 3880      6B73697A 
 3880      6500
 3881              	.LASF121:
 3882 0041 62756666 		.ascii	"buffer\000"
 3882      657200
 3883              	.LASF8:
 3884 0048 756E7369 		.ascii	"unsigned int\000"
 3884      676E6564 
 3884      20696E74 
 3884      00
 3885              	.LASF12:
 3886 0055 5F5F696E 		.ascii	"__int32_t\000"
 3886      7433325F 
 3886      7400
 3887              	.LASF18:
 3888 005f 696E7431 		.ascii	"int16\000"
 3888      3600
 3889              	.LASF112:
 3890 0065 73797374 		.ascii	"system_state\000"
 3890      656D5F73 
 3890      74617465 
 3890      00
 3891              	.LASF92:
 3892 0072 6E657874 		.ascii	"nextInstruction\000"
 3892      496E7374 
 3892      72756374 
 3892      696F6E00 
 3893              	.LASF133:
 3894 0082 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3894      43313120 
 3894      352E342E 
 3894      31203230 
 3894      31363036 
 3895 00b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3895      20726576 
 3895      6973696F 
 3895      6E203233 
 3895      37373135 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 84


 3896 00e8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3896      66756E63 
 3896      74696F6E 
 3896      2D736563 
 3896      74696F6E 
 3897              	.LASF69:
 3898 0110 53365F44 		.ascii	"S6_DETECTED\000"
 3898      45544543 
 3898      54454400 
 3899              	.LASF120:
 3900 011c 746F7461 		.ascii	"totalDistance\000"
 3900      6C446973 
 3900      74616E63 
 3900      6500
 3901              	.LASF34:
 3902 012a 67325F78 		.ascii	"g2_xpos\000"
 3902      706F7300 
 3903              	.LASF127:
 3904 0132 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 3904      61726455 
 3904      6E74696C 
 3904      54617267 
 3904      65745374 
 3905              	.LASF89:
 3906 0150 6E756D53 		.ascii	"numSteps\000"
 3906      74657073 
 3906      00
 3907              	.LASF83:
 3908 0159 74617267 		.ascii	"targetRow\000"
 3908      6574526F 
 3908      7700
 3909              	.LASF75:
 3910 0163 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 3910      6F76656D 
 3910      656E7441 
 3910      63636F72 
 3910      64696E67 
 3911              	.LASF107:
 3912 0185 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3912      5F72665F 
 3912      7472616E 
 3912      736D6973 
 3912      73696F6E 
 3913              	.LASF73:
 3914 01a1 466F7277 		.ascii	"ForwardCourseCorrection\000"
 3914      61726443 
 3914      6F757273 
 3914      65436F72 
 3914      72656374 
 3915              	.LASF116:
 3916 01b9 63757272 		.ascii	"currentRobotOrientation\000"
 3916      656E7452 
 3916      6F626F74 
 3916      4F726965 
 3916      6E746174 
 3917              	.LASF86:
 3918 01d1 52657365 		.ascii	"ResetSensorFlags\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 85


 3918      7453656E 
 3918      736F7246 
 3918      6C616773 
 3918      00
 3919              	.LASF37:
 3920 01e2 67325F64 		.ascii	"g2_direction\000"
 3920      69726563 
 3920      74696F6E 
 3920      00
 3921              	.LASF84:
 3922 01ef 74617267 		.ascii	"targetCol\000"
 3922      6574436F 
 3922      6C00
 3923              	.LASF122:
 3924 01f9 71756164 		.ascii	"quadDec2Count\000"
 3924      44656332 
 3924      436F756E 
 3924      7400
 3925              	.LASF19:
 3926 0207 666C6F61 		.ascii	"float\000"
 3926      7400
 3927              	.LASF77:
 3928 020d 63757272 		.ascii	"currentInstructionDirection\000"
 3928      656E7449 
 3928      6E737472 
 3928      75637469 
 3928      6F6E4469 
 3929              	.LASF111:
 3930 0229 75736242 		.ascii	"usbBuffer\000"
 3930      75666665 
 3930      7200
 3931              	.LASF80:
 3932 0233 636F756E 		.ascii	"count\000"
 3932      7400
 3933              	.LASF22:
 3934 0239 696E6465 		.ascii	"index\000"
 3934      7800
 3935              	.LASF7:
 3936 023f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3936      206C6F6E 
 3936      6720756E 
 3936      7369676E 
 3936      65642069 
 3937              	.LASF46:
 3938 0256 496E7374 		.ascii	"Instruction\000"
 3938      72756374 
 3938      696F6E00 
 3939              	.LASF104:
 3940 0262 666C6167 		.ascii	"flag_packet\000"
 3940      5F706163 
 3940      6B657400 
 3941              	.LASF93:
 3942 026e 53657452 		.ascii	"SetRobotMovement\000"
 3942      6F626F74 
 3942      4D6F7665 
 3942      6D656E74 
 3942      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 86


 3943              	.LASF70:
 3944 027f 54494D45 		.ascii	"TIMER_FINISH\000"
 3944      525F4649 
 3944      4E495348 
 3944      00
 3945              	.LASF124:
 3946 028c 6B656570 		.ascii	"keepLedOn\000"
 3946      4C65644F 
 3946      6E00
 3947              	.LASF42:
 3948 0296 466F7277 		.ascii	"ForwardUntilTarget\000"
 3948      61726455 
 3948      6E74696C 
 3948      54617267 
 3948      657400
 3949              	.LASF100:
 3950 02a9 666C6167 		.ascii	"flag_ts_update\000"
 3950      5F74735F 
 3950      75706461 
 3950      746500
 3951              	.LASF99:
 3952 02b8 666C6167 		.ascii	"flag_ts_enc\000"
 3952      5F74735F 
 3952      656E6300 
 3953              	.LASF78:
 3954 02c4 71756164 		.ascii	"quadCountToRPM\000"
 3954      436F756E 
 3954      74546F52 
 3954      504D00
 3955              	.LASF81:
 3956 02d3 626C6F63 		.ascii	"blockSize\000"
 3956      6B53697A 
 3956      6500
 3957              	.LASF43:
 3958 02dd 53746F70 		.ascii	"StopAtTarget\000"
 3958      41745461 
 3958      72676574 
 3958      00
 3959              	.LASF63:
 3960 02ea 77616974 		.ascii	"waitForTurn\000"
 3960      466F7254 
 3960      75726E00 
 3961              	.LASF24:
 3962 02f6 726F626F 		.ascii	"robot_ypos\000"
 3962      745F7970 
 3962      6F7300
 3963              	.LASF98:
 3964 0301 74735F64 		.ascii	"ts_display\000"
 3964      6973706C 
 3964      617900
 3965              	.LASF11:
 3966 030c 63686172 		.ascii	"char\000"
 3966      00
 3967              	.LASF135:
 3968 0311 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3968      6F63756D 
 3968      656E7473 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 87


 3968      5C476974 
 3968      4875625C 
 3969 0340 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3969      635F636F 
 3969      64655F62 
 3969      6173655C 
 3969      43533330 
 3970              	.LASF28:
 3971 0362 67305F73 		.ascii	"g0_speed\000"
 3971      70656564 
 3971      00
 3972              	.LASF90:
 3973 036b 696E7374 		.ascii	"instructionList\000"
 3973      72756374 
 3973      696F6E4C 
 3973      69737400 
 3974              	.LASF91:
 3975 037b 696E7374 		.ascii	"instructionIndex\000"
 3975      72756374 
 3975      696F6E49 
 3975      6E646578 
 3975      00
 3976              	.LASF15:
 3977 038c 75696E74 		.ascii	"uint16\000"
 3977      313600
 3978              	.LASF17:
 3979 0393 696E7438 		.ascii	"int8\000"
 3979      00
 3980              	.LASF129:
 3981 0398 78426C6F 		.ascii	"xBlocksize\000"
 3981      636B7369 
 3981      7A6500
 3982              	.LASF33:
 3983 03a3 67315F64 		.ascii	"g1_direction\000"
 3983      69726563 
 3983      74696F6E 
 3983      00
 3984              	.LASF53:
 3985 03b0 4C656674 		.ascii	"Left\000"
 3985      00
 3986              	.LASF74:
 3987 03b5 73706565 		.ascii	"speedTimer\000"
 3987      6454696D 
 3987      657200
 3988              	.LASF85:
 3989 03c0 70617468 		.ascii	"pathCount\000"
 3989      436F756E 
 3989      7400
 3990              	.LASF126:
 3991 03ca 7475726E 		.ascii	"turnFinishedFlag\000"
 3991      46696E69 
 3991      73686564 
 3991      466C6167 
 3991      00
 3992              	.LASF39:
 3993 03db 77616974 		.ascii	"waitForLeftTurn\000"
 3993      466F724C 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 88


 3993      65667454 
 3993      75726E00 
 3994              	.LASF6:
 3995 03eb 6C6F6E67 		.ascii	"long long int\000"
 3995      206C6F6E 
 3995      6720696E 
 3995      7400
 3996              	.LASF30:
 3997 03f9 67315F78 		.ascii	"g1_xpos\000"
 3997      706F7300 
 3998              	.LASF128:
 3999 0401 626C6F63 		.ascii	"blockSizeTotal\000"
 3999      6B53697A 
 3999      65546F74 
 3999      616C00
 4000              	.LASF117:
 4001 0410 70726576 		.ascii	"previousOrientation\000"
 4001      696F7573 
 4001      4F726965 
 4001      6E746174 
 4001      696F6E00 
 4002              	.LASF41:
 4003 0424 75547572 		.ascii	"uTurn\000"
 4003      6E00
 4004              	.LASF72:
 4005 042a 6E657744 		.ascii	"newDistance\000"
 4005      69737461 
 4005      6E636500 
 4006              	.LASF36:
 4007 0436 67325F73 		.ascii	"g2_speed\000"
 4007      70656564 
 4007      00
 4008              	.LASF27:
 4009 043f 67305F79 		.ascii	"g0_ypos\000"
 4009      706F7300 
 4010              	.LASF113:
 4011 0447 666F6F64 		.ascii	"food_list\000"
 4011      5F6C6973 
 4011      7400
 4012              	.LASF58:
 4013 0451 5475726E 		.ascii	"TurnLeft\000"
 4013      4C656674 
 4013      00
 4014              	.LASF97:
 4015 045a 74735F73 		.ascii	"ts_speed\000"
 4015      70656564 
 4015      00
 4016              	.LASF62:
 4017 0463 556E6B6E 		.ascii	"Unknown\000"
 4017      6F776E00 
 4018              	.LASF16:
 4019 046b 75696E74 		.ascii	"uint32\000"
 4019      333200
 4020              	.LASF40:
 4021 0472 77616974 		.ascii	"waitForRightTurn\000"
 4021      466F7252 
 4021      69676874 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 89


 4021      5475726E 
 4021      00
 4022              	.LASF57:
 4023 0483 5475726E 		.ascii	"TurnRight\000"
 4023      52696768 
 4023      7400
 4024              	.LASF45:
 4025 048d 64617461 		.ascii	"data_main\000"
 4025      5F6D6169 
 4025      6E00
 4026              	.LASF21:
 4027 0497 72737369 		.ascii	"rssi\000"
 4027      00
 4028              	.LASF29:
 4029 049c 67305F64 		.ascii	"g0_direction\000"
 4029      69726563 
 4029      74696F6E 
 4029      00
 4030              	.LASF115:
 4031 04a9 70726576 		.ascii	"previousDirection\000"
 4031      696F7573 
 4031      44697265 
 4031      6374696F 
 4031      6E00
 4032              	.LASF9:
 4033 04bb 6C6F6E67 		.ascii	"long double\000"
 4033      20646F75 
 4033      626C6500 
 4034              	.LASF101:
 4035 04c7 666C6167 		.ascii	"flag_ts_speed\000"
 4035      5F74735F 
 4035      73706565 
 4035      6400
 4036              	.LASF106:
 4037 04d5 64617461 		.ascii	"dataready_flag\000"
 4037      72656164 
 4037      795F666C 
 4037      616700
 4038              	.LASF103:
 4039 04e4 666C6167 		.ascii	"flag_rx\000"
 4039      5F727800 
 4040              	.LASF130:
 4041 04ec 79426C6F 		.ascii	"yBlocksize\000"
 4041      636B7369 
 4041      7A6500
 4042              	.LASF2:
 4043 04f7 73686F72 		.ascii	"short int\000"
 4043      7420696E 
 4043      7400
 4044              	.LASF67:
 4045 0501 53345F44 		.ascii	"S4_DETECTED\000"
 4045      45544543 
 4045      54454400 
 4046              	.LASF66:
 4047 050d 53335F44 		.ascii	"S3_DETECTED\000"
 4047      45544543 
 4047      54454400 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 90


 4048              	.LASF4:
 4049 0519 6C6F6E67 		.ascii	"long int\000"
 4049      20696E74 
 4049      00
 4050              	.LASF94:
 4051 0522 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4051      52784275 
 4051      66666572 
 4051      00
 4052              	.LASF96:
 4053 052f 74735F75 		.ascii	"ts_update\000"
 4053      70646174 
 4053      6500
 4054              	.LASF56:
 4055 0539 466F7277 		.ascii	"Forward\000"
 4055      61726400 
 4056              	.LASF119:
 4057 0541 746F7461 		.ascii	"totalMilliseconds\000"
 4057      6C4D696C 
 4057      6C697365 
 4057      636F6E64 
 4057      7300
 4058              	.LASF35:
 4059 0553 67325F79 		.ascii	"g2_ypos\000"
 4059      706F7300 
 4060              	.LASF87:
 4061 055b 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4061      546F4E65 
 4061      7874496E 
 4061      73747275 
 4061      6374696F 
 4062              	.LASF51:
 4063 0571 4F726965 		.ascii	"OrientationState\000"
 4063      6E746174 
 4063      696F6E53 
 4063      74617465 
 4063      00
 4064              	.LASF52:
 4065 0582 446F776E 		.ascii	"Down\000"
 4065      00
 4066              	.LASF54:
 4067 0587 52696768 		.ascii	"Right\000"
 4067      7400
 4068              	.LASF31:
 4069 058d 67315F79 		.ascii	"g1_ypos\000"
 4069      706F7300 
 4070              	.LASF114:
 4071 0595 63757272 		.ascii	"currentDirection\000"
 4071      656E7444 
 4071      69726563 
 4071      74696F6E 
 4071      00
 4072              	.LASF10:
 4073 05a6 73697A65 		.ascii	"sizetype\000"
 4073      74797065 
 4073      00
 4074              	.LASF5:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 91


 4075 05af 6C6F6E67 		.ascii	"long unsigned int\000"
 4075      20756E73 
 4075      69676E65 
 4075      6420696E 
 4075      7400
 4076              	.LASF125:
 4077 05c1 73746F70 		.ascii	"stopBuffer\000"
 4077      42756666 
 4077      657200
 4078              	.LASF13:
 4079 05cc 696E7433 		.ascii	"int32_t\000"
 4079      325F7400 
 4080              	.LASF23:
 4081 05d4 726F626F 		.ascii	"robot_xpos\000"
 4081      745F7870 
 4081      6F7300
 4082              	.LASF110:
 4083 05df 656E7472 		.ascii	"entry\000"
 4083      7900
 4084              	.LASF55:
 4085 05e5 526F626F 		.ascii	"RobotMovement\000"
 4085      744D6F76 
 4085      656D656E 
 4085      7400
 4086              	.LASF1:
 4087 05f3 756E7369 		.ascii	"unsigned char\000"
 4087      676E6564 
 4087      20636861 
 4087      7200
 4088              	.LASF109:
 4089 0601 6C696E65 		.ascii	"line\000"
 4089      00
 4090              	.LASF79:
 4091 0606 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4091      756C6174 
 4091      65446973 
 4091      74616E63 
 4091      65546F54 
 4092              	.LASF60:
 4093 0620 41646A75 		.ascii	"AdjustToTheRight\000"
 4093      7374546F 
 4093      54686552 
 4093      69676874 
 4093      00
 4094              	.LASF61:
 4095 0631 53746F70 		.ascii	"Stop\000"
 4095      00
 4096              	.LASF88:
 4097 0636 47657449 		.ascii	"GetInstructionAtIndex\000"
 4097      6E737472 
 4097      75637469 
 4097      6F6E4174 
 4097      496E6465 
 4098              	.LASF95:
 4099 064c 74735F65 		.ascii	"ts_enc\000"
 4099      6E6300
 4100              	.LASF102:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 92


 4101 0653 666C6167 		.ascii	"flag_ts_display\000"
 4101      5F74735F 
 4101      64697370 
 4101      6C617900 
 4102              	.LASF44:
 4103 0663 536B6970 		.ascii	"Skip\000"
 4103      00
 4104              	.LASF108:
 4105 0668 64697370 		.ascii	"displaystring\000"
 4105      6C617973 
 4105      7472696E 
 4105      6700
 4106              	.LASF38:
 4107 0676 476F466F 		.ascii	"GoForward\000"
 4107      72776172 
 4107      6400
 4108              	.LASF68:
 4109 0680 53355F44 		.ascii	"S5_DETECTED\000"
 4109      45544543 
 4109      54454400 
 4110              	.LASF0:
 4111 068c 7369676E 		.ascii	"signed char\000"
 4111      65642063 
 4111      68617200 
 4112              	.LASF131:
 4113 0698 63757272 		.ascii	"currentRow\000"
 4113      656E7452 
 4113      6F7700
 4114              	.LASF3:
 4115 06a3 73686F72 		.ascii	"short unsigned int\000"
 4115      7420756E 
 4115      7369676E 
 4115      65642069 
 4115      6E7400
 4116              	.LASF25:
 4117 06b6 726F626F 		.ascii	"robot_orientation\000"
 4117      745F6F72 
 4117      69656E74 
 4117      6174696F 
 4117      6E00
 4118              	.LASF71:
 4119 06c8 6D61696E 		.ascii	"main\000"
 4119      00
 4120              	.LASF118:
 4121 06cd 63757272 		.ascii	"currentInstruction\000"
 4121      656E7449 
 4121      6E737472 
 4121      75637469 
 4121      6F6E00
 4122              	.LASF59:
 4123 06e0 41646A75 		.ascii	"AdjustToTheLeft\000"
 4123      7374546F 
 4123      5468654C 
 4123      65667400 
 4124              	.LASF65:
 4125 06f0 4261636B 		.ascii	"Backward\000"
 4125      77617264 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccVypVvh.s 			page 93


 4125      00
 4126              	.LASF14:
 4127 06f9 75696E74 		.ascii	"uint8\000"
 4127      3800
 4128              	.LASF20:
 4129 06ff 646F7562 		.ascii	"double\000"
 4129      6C6500
 4130              	.LASF132:
 4131 0706 63757272 		.ascii	"currentCol\000"
 4131      656E7443 
 4131      6F6C00
 4132              	.LASF82:
 4133 0711 746F7461 		.ascii	"totalBlockSize\000"
 4133      6C426C6F 
 4133      636B5369 
 4133      7A6500
 4134              	.LASF26:
 4135 0720 67305F78 		.ascii	"g0_xpos\000"
 4135      706F7300 
 4136              	.LASF123:
 4137 0728 74696D65 		.ascii	"timerInt\000"
 4137      72496E74 
 4137      00
 4138              	.LASF105:
 4139 0731 666C6167 		.ascii	"flag_KB_string\000"
 4139      5F4B425F 
 4139      73747269 
 4139      6E6700
 4140              	.LASF32:
 4141 0740 67315F73 		.ascii	"g1_speed\000"
 4141      70656564 
 4141      00
 4142              	.LASF48:
 4143 0749 69676E6F 		.ascii	"ignoreL\000"
 4143      72654C00 
 4144              	.LASF49:
 4145 0751 69676E6F 		.ascii	"ignoreR\000"
 4145      72655200 
 4146              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
