ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              	turnStartedFlag:
 173 0034 00       		.space	1
 174              	turnFinishedFlag:
 175 0035 00       		.space	1
 176              	forwardUntilTargetStartedFlag:
 177 0036 00       		.space	1
 178              	uTurnStartedFlag:
 179 0037 00       		.space	1
 180              	uTurnFinishedFlag:
 181 0038 00       		.space	1
 182              	leftStatusFlag:
 183 0039 00       		.space	1
 184              	rightStatusFlag:
 185 003a 00       		.space	1
 186              	spinCourseCorrectionStarted:
 187 003b 00       		.space	1
 188              	currentIgnoreL:
 189 003c 00       		.space	1
 190              		.data
 191              		.type	currentIgnoreR, %object
 192              		.size	currentIgnoreR, 1
 193              	currentIgnoreR:
 194 0045 01       		.byte	1
 195              		.global	junctionConfiguration
 196              		.bss
 197 003d 000000   		.align	2
 198              		.type	junctionConfiguration, %object
 199              		.size	junctionConfiguration, 4
 200              	junctionConfiguration:
 201 0040 00000000 		.space	4
 202              		.global	blockSizeTotal
 203              		.align	2
 204              		.type	blockSizeTotal, %object
 205              		.size	blockSizeTotal, 4
 206              	blockSizeTotal:
 207 0044 00000000 		.space	4
 208              		.global	__aeabi_i2d
 209              		.global	__aeabi_dmul
 210              		.global	__aeabi_ddiv
 211              		.global	__aeabi_d2f
 212              		.global	__aeabi_fadd
 213              		.section	.text.speedTimer,"ax",%progbits
 214              		.align	2
 215              		.global	speedTimer
 216              		.thumb
 217              		.thumb_func
 218              		.type	speedTimer, %function
 219              	speedTimer:
 220              	.LFB64:
 221              		.file 1 "main.c"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 5


   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** 
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 6


  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** uint8 junctionConfiguration[4] = {0};
  67:main.c        **** 
  68:main.c        **** float blockSizeTotal = 0;
  69:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  70:main.c        **** 
  71:main.c        **** CY_ISR (speedTimer) {
 222              		.loc 1 71 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 90B5     		push	{r4, r7, lr}
 227              		.cfi_def_cfa_offset 12
 228              		.cfi_offset 4, -12
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 83B0     		sub	sp, sp, #12
 232              		.cfi_def_cfa_offset 24
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
  72:main.c        ****     timerInt = 1;
 235              		.loc 1 72 0
 236 0006 344B     		ldr	r3, .L4+16
 237 0008 0122     		movs	r2, #1
 238 000a 1A60     		str	r2, [r3]
  73:main.c        ****     //quadDec_M1 used for turning macros
  74:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 239              		.loc 1 74 0
 240 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 241 0010 0346     		mov	r3, r0
 242 0012 1A46     		mov	r2, r3
 243 0014 314B     		ldr	r3, .L4+20
 244 0016 1A60     		str	r2, [r3]
  75:main.c        ****     
  76:main.c        ****     if ((currentDirection == Forward || 
 245              		.loc 1 76 0
 246 0018 314B     		ldr	r3, .L4+24
 247 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248 001c 002B     		cmp	r3, #0
 249 001e 13D0     		beq	.L2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 250              		.loc 1 77 0 discriminator 1
 251 0020 2F4B     		ldr	r3, .L4+24
 252 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 253              		.loc 1 76 0 discriminator 1
 254 0024 082B     		cmp	r3, #8
 255 0026 0FD0     		beq	.L2
  78:main.c        ****         currentDirection == waitForTurn || 
 256              		.loc 1 78 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 7


 257 0028 2D4B     		ldr	r3, .L4+24
 258 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 259              		.loc 1 77 0
 260 002c 072B     		cmp	r3, #7
 261 002e 0BD0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 262              		.loc 1 79 0
 263 0030 2B4B     		ldr	r3, .L4+24
 264 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:main.c        ****         currentDirection == waitForTurn || 
 265              		.loc 1 78 0
 266 0034 032B     		cmp	r3, #3
 267 0036 07D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 268              		.loc 1 80 0
 269 0038 294B     		ldr	r3, .L4+24
 270 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 271              		.loc 1 79 0
 272 003c 042B     		cmp	r3, #4
 273 003e 03D0     		beq	.L2
  81:main.c        ****         currentDirection == Backward) &&
 274              		.loc 1 81 0
 275 0040 274B     		ldr	r3, .L4+24
 276 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 277              		.loc 1 80 0
 278 0044 092B     		cmp	r3, #9
 279 0046 34D1     		bne	.L3
 280              	.L2:
  82:main.c        ****         quadDec2Count != 0) {
 281              		.loc 1 82 0
 282 0048 244B     		ldr	r3, .L4+20
 283 004a 1B68     		ldr	r3, [r3]
  81:main.c        ****         currentDirection == Backward) &&
 284              		.loc 1 81 0
 285 004c 002B     		cmp	r3, #0
 286 004e 30D0     		beq	.L3
 287              	.LBB2:
  83:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  84:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 288              		.loc 1 84 0
 289 0050 224B     		ldr	r3, .L4+20
 290 0052 1B68     		ldr	r3, [r3]
 291 0054 002B     		cmp	r3, #0
 292 0056 B8BF     		it	lt
 293 0058 5B42     		rsblt	r3, r3, #0
 294 005a 1846     		mov	r0, r3
 295 005c FFF7FEFF 		bl	__aeabi_i2d
 296 0060 19A3     		adr	r3, .L4
 297 0062 D3E90023 		ldrd	r2, [r3]
 298 0066 FFF7FEFF 		bl	__aeabi_dmul
 299 006a 0346     		mov	r3, r0
 300 006c 0C46     		mov	r4, r1
 301 006e 1846     		mov	r0, r3
 302 0070 2146     		mov	r1, r4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 8


 303 0072 17A3     		adr	r3, .L4+8
 304 0074 D3E90023 		ldrd	r2, [r3]
 305 0078 FFF7FEFF 		bl	__aeabi_dmul
 306 007c 0346     		mov	r3, r0
 307 007e 0C46     		mov	r4, r1
 308 0080 1846     		mov	r0, r3
 309 0082 2146     		mov	r1, r4
 310 0084 4FF00002 		mov	r2, #0
 311 0088 164B     		ldr	r3, .L4+28
 312 008a FFF7FEFF 		bl	__aeabi_ddiv
 313 008e 0346     		mov	r3, r0
 314 0090 0C46     		mov	r4, r1
 315 0092 1846     		mov	r0, r3
 316 0094 2146     		mov	r1, r4
 317 0096 FFF7FEFF 		bl	__aeabi_d2f
 318 009a 0346     		mov	r3, r0
 319 009c 7B60     		str	r3, [r7, #4]	@ float
  85:main.c        ****         
  86:main.c        ****         totalDistance = totalDistance + newDistance;
 320              		.loc 1 86 0
 321 009e 124B     		ldr	r3, .L4+32
 322 00a0 1B68     		ldr	r3, [r3]	@ float
 323 00a2 7968     		ldr	r1, [r7, #4]	@ float
 324 00a4 1846     		mov	r0, r3
 325 00a6 FFF7FEFF 		bl	__aeabi_fadd
 326 00aa 0346     		mov	r3, r0
 327 00ac 1A46     		mov	r2, r3
 328 00ae 0E4B     		ldr	r3, .L4+32
 329 00b0 1A60     		str	r2, [r3]	@ float
 330              	.L3:
 331              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     
  89:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 332              		.loc 1 89 0
 333 00b2 0020     		movs	r0, #0
 334 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  90:main.c        ****     QuadDec_M2_Start(); // restart counter
 335              		.loc 1 90 0
 336 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        ****     
  92:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 337              		.loc 1 92 0
 338 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  93:main.c        **** }
 339              		.loc 1 93 0
 340 00c0 00BF     		nop
 341 00c2 0C37     		adds	r7, r7, #12
 342              		.cfi_def_cfa_offset 12
 343 00c4 BD46     		mov	sp, r7
 344              		.cfi_def_cfa_register 13
 345              		@ sp needed
 346 00c6 90BD     		pop	{r4, r7, pc}
 347              	.L5:
 348              		.align	3
 349              	.L4:
 350 00c8 182D4454 		.word	1413754136
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 9


 351 00cc FB210940 		.word	1074340347
 352 00d0 00000000 		.word	0
 353 00d4 00205040 		.word	1078992896
 354 00d8 00000000 		.word	timerInt
 355 00dc 00000000 		.word	quadDec2Count
 356 00e0 00000000 		.word	currentDirection
 357 00e4 00806C40 		.word	1080852480
 358 00e8 00000000 		.word	totalDistance
 359              		.cfi_endproc
 360              	.LFE64:
 361              		.size	speedTimer, .-speedTimer
 362              		.section	.text.S3_DETECTED,"ax",%progbits
 363              		.align	2
 364              		.global	S3_DETECTED
 365              		.thumb
 366              		.thumb_func
 367              		.type	S3_DETECTED, %function
 368              	S3_DETECTED:
 369              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 370              		.loc 1 95 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 0000 80B4     		push	{r7}
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 380              		.loc 1 97 0
 381 0004 034B     		ldr	r3, .L7
 382 0006 0122     		movs	r2, #1
 383 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 384              		.loc 1 99 0
 385 000a 00BF     		nop
 386 000c BD46     		mov	sp, r7
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 000e 80BC     		pop	{r7}
 390              		.cfi_restore 7
 391              		.cfi_def_cfa_offset 0
 392 0010 7047     		bx	lr
 393              	.L8:
 394 0012 00BF     		.align	2
 395              	.L7:
 396 0014 00000000 		.word	s3
 397              		.cfi_endproc
 398              	.LFE65:
 399              		.size	S3_DETECTED, .-S3_DETECTED
 400              		.section	.text.S4_DETECTED,"ax",%progbits
 401              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 10


 402              		.global	S4_DETECTED
 403              		.thumb
 404              		.thumb_func
 405              		.type	S4_DETECTED, %function
 406              	S4_DETECTED:
 407              	.LFB66:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 408              		.loc 1 101 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 418              		.loc 1 103 0
 419 0004 034B     		ldr	r3, .L10
 420 0006 0122     		movs	r2, #1
 421 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 422              		.loc 1 105 0
 423 000a 00BF     		nop
 424 000c BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 000e 80BC     		pop	{r7}
 428              		.cfi_restore 7
 429              		.cfi_def_cfa_offset 0
 430 0010 7047     		bx	lr
 431              	.L11:
 432 0012 00BF     		.align	2
 433              	.L10:
 434 0014 00000000 		.word	s4
 435              		.cfi_endproc
 436              	.LFE66:
 437              		.size	S4_DETECTED, .-S4_DETECTED
 438              		.section	.text.S5_DETECTED,"ax",%progbits
 439              		.align	2
 440              		.global	S5_DETECTED
 441              		.thumb
 442              		.thumb_func
 443              		.type	S5_DETECTED, %function
 444              	S5_DETECTED:
 445              	.LFB67:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 446              		.loc 1 107 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 11


 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 456              		.loc 1 109 0
 457 0004 034B     		ldr	r3, .L13
 458 0006 0122     		movs	r2, #1
 459 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 460              		.loc 1 111 0
 461 000a 00BF     		nop
 462 000c BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 000e 80BC     		pop	{r7}
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0010 7047     		bx	lr
 469              	.L14:
 470 0012 00BF     		.align	2
 471              	.L13:
 472 0014 00000000 		.word	s5
 473              		.cfi_endproc
 474              	.LFE67:
 475              		.size	S5_DETECTED, .-S5_DETECTED
 476              		.section	.text.S6_DETECTED,"ax",%progbits
 477              		.align	2
 478              		.global	S6_DETECTED
 479              		.thumb
 480              		.thumb_func
 481              		.type	S6_DETECTED, %function
 482              	S6_DETECTED:
 483              	.LFB68:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 484              		.loc 1 113 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 494              		.loc 1 115 0
 495 0004 034B     		ldr	r3, .L16
 496 0006 0122     		movs	r2, #1
 497 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 12


 498              		.loc 1 117 0
 499 000a 00BF     		nop
 500 000c BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 000e 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 0010 7047     		bx	lr
 507              	.L17:
 508 0012 00BF     		.align	2
 509              	.L16:
 510 0014 00000000 		.word	s6
 511              		.cfi_endproc
 512              	.LFE68:
 513              		.size	S6_DETECTED, .-S6_DETECTED
 514              		.section	.text.TIMER_FINISH,"ax",%progbits
 515              		.align	2
 516              		.global	TIMER_FINISH
 517              		.thumb
 518              		.thumb_func
 519              		.type	TIMER_FINISH, %function
 520              	TIMER_FINISH:
 521              	.LFB69:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 522              		.loc 1 119 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526 0000 80B5     		push	{r7, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 7, -8
 529              		.cfi_offset 14, -4
 530 0002 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 120:main.c        ****     if (currentDirection == Stop) {
 532              		.loc 1 120 0
 533 0004 0A4B     		ldr	r3, .L21
 534 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535 0008 052B     		cmp	r3, #5
 536 000a 05D1     		bne	.L19
 121:main.c        ****         stopBuffer = stopBuffer + 1;
 537              		.loc 1 121 0
 538 000c 094B     		ldr	r3, .L21+4
 539 000e 1B68     		ldr	r3, [r3]
 540 0010 0133     		adds	r3, r3, #1
 541 0012 084A     		ldr	r2, .L21+4
 542 0014 1360     		str	r3, [r2]
 543 0016 02E0     		b	.L20
 544              	.L19:
 122:main.c        ****     } else {
 123:main.c        ****         stopBuffer = 0;
 545              		.loc 1 123 0
 546 0018 064B     		ldr	r3, .L21+4
 547 001a 0022     		movs	r2, #0
 548 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 13


 549              	.L20:
 124:main.c        ****     }
 125:main.c        ****     SetRobotMovement(); 
 550              		.loc 1 125 0
 551 001e FFF7FEFF 		bl	SetRobotMovement
 126:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 552              		.loc 1 126 0
 553 0022 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     Timer_LED_ReadStatusRegister();
 554              		.loc 1 127 0
 555 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 128:main.c        **** }
 556              		.loc 1 128 0
 557 002a 00BF     		nop
 558 002c 80BD     		pop	{r7, pc}
 559              	.L22:
 560 002e 00BF     		.align	2
 561              	.L21:
 562 0030 00000000 		.word	currentDirection
 563 0034 00000000 		.word	stopBuffer
 564              		.cfi_endproc
 565              	.LFE69:
 566              		.size	TIMER_FINISH, .-TIMER_FINISH
 567              		.section	.text.main,"ax",%progbits
 568              		.align	2
 569              		.global	main
 570              		.thumb
 571              		.thumb_func
 572              		.type	main, %function
 573              	main:
 574              	.LFB70:
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** int main() {
 575              		.loc 1 131 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 24
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 B0B5     		push	{r4, r5, r7, lr}
 580              		.cfi_def_cfa_offset 16
 581              		.cfi_offset 4, -16
 582              		.cfi_offset 5, -12
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 86B0     		sub	sp, sp, #24
 586              		.cfi_def_cfa_offset 40
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 589              		.loc 1 133 0
 590              		.syntax unified
 591              	@ 133 "main.c" 1
 592 0006 62B6     		CPSIE   i
 593              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 594              		.loc 1 134 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 14


 595              		.thumb
 596              		.syntax unified
 597 0008 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 598              		.loc 1 135 0
 599 000c FFF7FEFF 		bl	init
 136:main.c        ****     
 137:main.c        ****     instructionList = findPath(map, food_list, 0);
 600              		.loc 1 137 0
 601 0010 0022     		movs	r2, #0
 602 0012 3349     		ldr	r1, .L27
 603 0014 3348     		ldr	r0, .L27+4
 604 0016 FFF7FEFF 		bl	findPath
 605 001a 0246     		mov	r2, r0
 606 001c 324B     		ldr	r3, .L27+8
 607 001e 1A60     		str	r2, [r3]
 138:main.c        ****     numSteps = instructionsListLength();
 608              		.loc 1 138 0
 609 0020 FFF7FEFF 		bl	instructionsListLength
 610 0024 0346     		mov	r3, r0
 611 0026 1A46     		mov	r2, r3
 612 0028 304B     		ldr	r3, .L27+12
 613 002a 1A60     		str	r2, [r3]
 139:main.c        ****     
 140:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 614              		.loc 1 140 0
 615 002c 2F4B     		ldr	r3, .L27+12
 616 002e 1968     		ldr	r1, [r3]
 617 0030 2D4B     		ldr	r3, .L27+8
 618 0032 1A68     		ldr	r2, [r3]
 619 0034 2E4C     		ldr	r4, .L27+16
 620 0036 3B46     		mov	r3, r7
 621 0038 1846     		mov	r0, r3
 622 003a FFF7FEFF 		bl	GetInstructionAtIndex
 623 003e 2546     		mov	r5, r4
 624 0040 3C46     		mov	r4, r7
 625 0042 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 626 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 627 0046 2368     		ldr	r3, [r4]
 628 0048 2B60     		str	r3, [r5]
 141:main.c        ****     
 142:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 629              		.loc 1 142 0
 630 004a 274B     		ldr	r3, .L27+8
 631 004c 1968     		ldr	r1, [r3]
 632 004e 294B     		ldr	r3, .L27+20
 633 0050 1A68     		ldr	r2, [r3]
 634 0052 1346     		mov	r3, r2
 635 0054 9B00     		lsls	r3, r3, #2
 636 0056 1344     		add	r3, r3, r2
 637 0058 9B00     		lsls	r3, r3, #2
 638 005a 0B44     		add	r3, r3, r1
 639 005c 5B68     		ldr	r3, [r3, #4]
 640 005e DAB2     		uxtb	r2, r3
 641 0060 254B     		ldr	r3, .L27+24
 642 0062 1A70     		strb	r2, [r3]
 143:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 15


 643              		.loc 1 143 0
 644 0064 204B     		ldr	r3, .L27+8
 645 0066 1968     		ldr	r1, [r3]
 646 0068 224B     		ldr	r3, .L27+20
 647 006a 1A68     		ldr	r2, [r3]
 648 006c 1346     		mov	r3, r2
 649 006e 9B00     		lsls	r3, r3, #2
 650 0070 1344     		add	r3, r3, r2
 651 0072 9B00     		lsls	r3, r3, #2
 652 0074 0B44     		add	r3, r3, r1
 653 0076 9B68     		ldr	r3, [r3, #8]
 654 0078 DAB2     		uxtb	r2, r3
 655 007a 204B     		ldr	r3, .L27+28
 656 007c 1A70     		strb	r2, [r3]
 144:main.c        ****     
 145:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 657              		.loc 1 145 0
 658 007e 2048     		ldr	r0, .L27+32
 659 0080 FFF7FEFF 		bl	isr_speed_StartEx
 146:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 660              		.loc 1 146 0
 661 0084 1F48     		ldr	r0, .L27+36
 662 0086 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 147:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 663              		.loc 1 147 0
 664 008a 1F48     		ldr	r0, .L27+40
 665 008c FFF7FEFF 		bl	S3_detected_StartEx
 148:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 666              		.loc 1 148 0
 667 0090 1E48     		ldr	r0, .L27+44
 668 0092 FFF7FEFF 		bl	S4_detected_StartEx
 149:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 669              		.loc 1 149 0
 670 0096 1E48     		ldr	r0, .L27+48
 671 0098 FFF7FEFF 		bl	S5_detected_StartEx
 150:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 672              		.loc 1 150 0
 673 009c 1D48     		ldr	r0, .L27+52
 674 009e FFF7FEFF 		bl	S6_detected_StartEx
 151:main.c        ****     Timer_LED_Start();
 675              		.loc 1 151 0
 676 00a2 FFF7FEFF 		bl	Timer_LED_Start
 152:main.c        **** 
 153:main.c        ****     
 154:main.c        **** // ------USB SETUP ----------------    
 155:main.c        **** #ifdef USE_USB    
 156:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 677              		.loc 1 156 0
 678 00a6 0121     		movs	r1, #1
 679 00a8 0020     		movs	r0, #0
 680 00aa FFF7FEFF 		bl	USBUART_Start
 157:main.c        **** #endif        
 158:main.c        ****     RF_BT_SELECT_Write(0);
 681              		.loc 1 158 0
 682 00ae 0020     		movs	r0, #0
 683 00b0 FFF7FEFF 		bl	RF_BT_SELECT_Write
 684              	.L26:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 16


 159:main.c        ****     
 160:main.c        ****     //usbPutString("Initialised UART");
 161:main.c        ****     for(;;)
 162:main.c        ****     {
 163:main.c        ****         if(timerInt == 1) {
 685              		.loc 1 163 0
 686 00b4 184B     		ldr	r3, .L27+56
 687 00b6 1B68     		ldr	r3, [r3]
 688 00b8 012B     		cmp	r3, #1
 689 00ba 08D1     		bne	.L24
 164:main.c        ****             timerInt = 0;
 690              		.loc 1 164 0
 691 00bc 164B     		ldr	r3, .L27+56
 692 00be 0022     		movs	r2, #0
 693 00c0 1A60     		str	r2, [r3]
 165:main.c        ****             // calculate RPM of M2
 166:main.c        ****             quadCountToRPM(quadDec2Count);
 694              		.loc 1 166 0
 695 00c2 164B     		ldr	r3, .L27+60
 696 00c4 1B68     		ldr	r3, [r3]
 697 00c6 9BB2     		uxth	r3, r3
 698 00c8 1846     		mov	r0, r3
 699 00ca FFF7FEFF 		bl	quadCountToRPM
 700              	.L24:
 167:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 168:main.c        ****             //usbPutString(buffer);
 169:main.c        ****             //usbPutString(" ");
 170:main.c        ****         }
 171:main.c        ****         //handle_usb();
 172:main.c        ****         if (flag_KB_string == 1)
 701              		.loc 1 172 0
 702 00ce 144B     		ldr	r3, .L27+64
 703 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 704 00d2 012B     		cmp	r3, #1
 705 00d4 EED1     		bne	.L26
 173:main.c        ****         {
 174:main.c        ****             //usbPutString("Total Distance: ");
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             flag_KB_string = 0;
 706              		.loc 1 177 0
 707 00d6 124B     		ldr	r3, .L27+64
 708 00d8 0022     		movs	r2, #0
 709 00da 1A70     		strb	r2, [r3]
 178:main.c        ****         }           
 179:main.c        ****     }
 710              		.loc 1 179 0
 711 00dc EAE7     		b	.L26
 712              	.L28:
 713 00de 00BF     		.align	2
 714              	.L27:
 715 00e0 00000000 		.word	food_list
 716 00e4 00000000 		.word	map
 717 00e8 00000000 		.word	instructionList
 718 00ec 00000000 		.word	numSteps
 719 00f0 00000000 		.word	currentInstruction
 720 00f4 14000000 		.word	instructionIndex
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 17


 721 00f8 3C000000 		.word	currentIgnoreL
 722 00fc 45000000 		.word	currentIgnoreR
 723 0100 00000000 		.word	speedTimer
 724 0104 00000000 		.word	TIMER_FINISH
 725 0108 00000000 		.word	S3_DETECTED
 726 010c 00000000 		.word	S4_DETECTED
 727 0110 00000000 		.word	S5_DETECTED
 728 0114 00000000 		.word	S6_DETECTED
 729 0118 00000000 		.word	timerInt
 730 011c 00000000 		.word	quadDec2Count
 731 0120 00000000 		.word	flag_KB_string
 732              		.cfi_endproc
 733              	.LFE70:
 734              		.size	main, .-main
 735              		.global	__aeabi_fmul
 736              		.global	__aeabi_f2iz
 737              		.section	.text.quadCountToRPM,"ax",%progbits
 738              		.align	2
 739              		.global	quadCountToRPM
 740              		.thumb
 741              		.thumb_func
 742              		.type	quadCountToRPM, %function
 743              	quadCountToRPM:
 744              	.LFB71:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count) {
 745              		.loc 1 185 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 16
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 90B5     		push	{r4, r7, lr}
 750              		.cfi_def_cfa_offset 12
 751              		.cfi_offset 4, -12
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 85B0     		sub	sp, sp, #20
 755              		.cfi_def_cfa_offset 32
 756 0004 00AF     		add	r7, sp, #0
 757              		.cfi_def_cfa_register 7
 758 0006 0346     		mov	r3, r0
 759 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 186:main.c        ****     float cps = count/57.00;
 760              		.loc 1 186 0
 761 000a FB88     		ldrh	r3, [r7, #6]
 762 000c 1846     		mov	r0, r3
 763 000e FFF7FEFF 		bl	__aeabi_i2d
 764 0012 4FF00002 		mov	r2, #0
 765 0016 0D4B     		ldr	r3, .L31
 766 0018 FFF7FEFF 		bl	__aeabi_ddiv
 767 001c 0346     		mov	r3, r0
 768 001e 0C46     		mov	r4, r1
 769 0020 1846     		mov	r0, r3
 770 0022 2146     		mov	r1, r4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 18


 771 0024 FFF7FEFF 		bl	__aeabi_d2f
 772 0028 0346     		mov	r3, r0
 773 002a FB60     		str	r3, [r7, #12]	@ float
 187:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 774              		.loc 1 187 0
 775 002c 0849     		ldr	r1, .L31+4
 776 002e F868     		ldr	r0, [r7, #12]	@ float
 777 0030 FFF7FEFF 		bl	__aeabi_fmul
 778 0034 0346     		mov	r3, r0
 779 0036 1846     		mov	r0, r3
 780 0038 FFF7FEFF 		bl	__aeabi_f2iz
 781 003c 0346     		mov	r3, r0
 782 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 188:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 189:main.c        ****     return rpm;
 783              		.loc 1 189 0
 784 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 190:main.c        ****     //usbPutString(buffer);
 191:main.c        ****     //usbPutString("rpm ");
 192:main.c        **** }
 785              		.loc 1 192 0
 786 0044 1846     		mov	r0, r3
 787 0046 1437     		adds	r7, r7, #20
 788              		.cfi_def_cfa_offset 12
 789 0048 BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 004a 90BD     		pop	{r4, r7, pc}
 793              	.L32:
 794              		.align	2
 795              	.L31:
 796 004c 00804C40 		.word	1078755328
 797 0050 00007041 		.word	1097859072
 798              		.cfi_endproc
 799              	.LFE71:
 800              		.size	quadCountToRPM, .-quadCountToRPM
 801              		.section	.text.ResetSensorFlags,"ax",%progbits
 802              		.align	2
 803              		.global	ResetSensorFlags
 804              		.thumb
 805              		.thumb_func
 806              		.type	ResetSensorFlags, %function
 807              	ResetSensorFlags:
 808              	.LFB72:
 193:main.c        **** 
 194:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 195:main.c        **** void ResetSensorFlags() {
 809              		.loc 1 195 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814 0000 80B4     		push	{r7}
 815              		.cfi_def_cfa_offset 4
 816              		.cfi_offset 7, -4
 817 0002 00AF     		add	r7, sp, #0
 818              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 19


 196:main.c        ****     s3 = 0;
 819              		.loc 1 196 0
 820 0004 074B     		ldr	r3, .L34
 821 0006 0022     		movs	r2, #0
 822 0008 1A70     		strb	r2, [r3]
 197:main.c        ****     s4 = 0;
 823              		.loc 1 197 0
 824 000a 074B     		ldr	r3, .L34+4
 825 000c 0022     		movs	r2, #0
 826 000e 1A70     		strb	r2, [r3]
 198:main.c        ****     s5 = 0;
 827              		.loc 1 198 0
 828 0010 064B     		ldr	r3, .L34+8
 829 0012 0022     		movs	r2, #0
 830 0014 1A70     		strb	r2, [r3]
 199:main.c        ****     s6 = 0;
 831              		.loc 1 199 0
 832 0016 064B     		ldr	r3, .L34+12
 833 0018 0022     		movs	r2, #0
 834 001a 1A70     		strb	r2, [r3]
 200:main.c        **** }
 835              		.loc 1 200 0
 836 001c 00BF     		nop
 837 001e BD46     		mov	sp, r7
 838              		.cfi_def_cfa_register 13
 839              		@ sp needed
 840 0020 80BC     		pop	{r7}
 841              		.cfi_restore 7
 842              		.cfi_def_cfa_offset 0
 843 0022 7047     		bx	lr
 844              	.L35:
 845              		.align	2
 846              	.L34:
 847 0024 00000000 		.word	s3
 848 0028 00000000 		.word	s4
 849 002c 00000000 		.word	s5
 850 0030 00000000 		.word	s6
 851              		.cfi_endproc
 852              	.LFE72:
 853              		.size	ResetSensorFlags, .-ResetSensorFlags
 854              		.global	xBlocksize
 855              		.data
 856 0046 0000     		.align	2
 857              		.type	xBlocksize, %object
 858              		.size	xBlocksize, 4
 859              	xBlocksize:
 860 0048 0000F442 		.word	1123287040
 861              		.global	yBlocksize
 862              		.align	2
 863              		.type	yBlocksize, %object
 864              		.size	yBlocksize, 4
 865              	yBlocksize:
 866 004c 0000A042 		.word	1117782016
 867              		.global	currentRow
 868              		.type	currentRow, %object
 869              		.size	currentRow, 1
 870              	currentRow:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 20


 871 0050 01       		.byte	1
 872              		.global	currentCol
 873              		.type	currentCol, %object
 874              		.size	currentCol, 1
 875              	currentCol:
 876 0051 01       		.byte	1
 877              		.global	stoppedAfterTurn
 878              		.bss
 879              		.type	stoppedAfterTurn, %object
 880              		.size	stoppedAfterTurn, 1
 881              	stoppedAfterTurn:
 882 0048 00       		.space	1
 883              		.global	ignoreSensor
 884              		.type	ignoreSensor, %object
 885              		.size	ignoreSensor, 1
 886              	ignoreSensor:
 887 0049 00       		.space	1
 888              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 889              		.align	2
 890              		.global	ForwardCourseCorrection
 891              		.thumb
 892              		.thumb_func
 893              		.type	ForwardCourseCorrection, %function
 894              	ForwardCourseCorrection:
 895              	.LFB73:
 201:main.c        **** 
 202:main.c        **** float xBlocksize = 122; // 122 mm
 203:main.c        **** float yBlocksize = 80; // 80 mm
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1;
 206:main.c        **** 
 207:main.c        **** uint8 stoppedAfterTurn = 0;
 208:main.c        **** uint8 ignoreSensor = 0;
 209:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 210:main.c        **** 
 211:main.c        **** enum RobotMovement ForwardCourseCorrection();
 212:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 896              		.loc 1 212 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 0000 80B4     		push	{r7}
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 213:main.c        ****     // if S5 and S6 are on black, move forward
 214:main.c        ****     if (!s5 && !s6) {
 906              		.loc 1 214 0
 907 0004 1C4B     		ldr	r3, .L44
 908 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 0008 002B     		cmp	r3, #0
 910 000a 0FD1     		bne	.L37
 911              		.loc 1 214 0 is_stmt 0 discriminator 1
 912 000c 1B4B     		ldr	r3, .L44+4
 913 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 21


 914 0010 002B     		cmp	r3, #0
 915 0012 0BD1     		bne	.L37
 215:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 916              		.loc 1 215 0 is_stmt 1
 917 0014 1A4B     		ldr	r3, .L44+8
 918 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 919 0018 032B     		cmp	r3, #3
 920 001a 01D0     		beq	.L38
 216:main.c        ****             return AdjustToTheLeft;
 921              		.loc 1 216 0
 922 001c 0323     		movs	r3, #3
 923 001e 26E0     		b	.L39
 924              	.L38:
 217:main.c        ****         }
 218:main.c        ****         if (previousDirection != AdjustToTheRight) {
 925              		.loc 1 218 0
 926 0020 174B     		ldr	r3, .L44+8
 927 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 0024 042B     		cmp	r3, #4
 929 0026 01D0     		beq	.L37
 219:main.c        ****             return AdjustToTheRight;    
 930              		.loc 1 219 0
 931 0028 0423     		movs	r3, #4
 932 002a 20E0     		b	.L39
 933              	.L37:
 220:main.c        ****         }
 221:main.c        ****     }
 222:main.c        ****     
 223:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 224:main.c        ****     if (s5 && s6) {
 934              		.loc 1 224 0
 935 002c 124B     		ldr	r3, .L44
 936 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 0030 002B     		cmp	r3, #0
 938 0032 0FD0     		beq	.L40
 939              		.loc 1 224 0 is_stmt 0 discriminator 1
 940 0034 114B     		ldr	r3, .L44+4
 941 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 0038 002B     		cmp	r3, #0
 943 003a 0BD0     		beq	.L40
 225:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 944              		.loc 1 225 0 is_stmt 1
 945 003c 104B     		ldr	r3, .L44+8
 946 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 947 0040 032B     		cmp	r3, #3
 948 0042 01D0     		beq	.L41
 226:main.c        ****             return AdjustToTheLeft;
 949              		.loc 1 226 0
 950 0044 0323     		movs	r3, #3
 951 0046 12E0     		b	.L39
 952              	.L41:
 227:main.c        ****         }
 228:main.c        ****         if (previousDirection != AdjustToTheRight) {
 953              		.loc 1 228 0
 954 0048 0D4B     		ldr	r3, .L44+8
 955 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 956 004c 042B     		cmp	r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 22


 957 004e 01D0     		beq	.L40
 229:main.c        ****             return AdjustToTheRight;    
 958              		.loc 1 229 0
 959 0050 0423     		movs	r3, #4
 960 0052 0CE0     		b	.L39
 961              	.L40:
 230:main.c        ****         }
 231:main.c        ****     }
 232:main.c        **** 
 233:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 234:main.c        ****     if (s5) {
 962              		.loc 1 234 0
 963 0054 084B     		ldr	r3, .L44
 964 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 965 0058 002B     		cmp	r3, #0
 966 005a 01D0     		beq	.L42
 235:main.c        ****         return AdjustToTheRight;    
 967              		.loc 1 235 0
 968 005c 0423     		movs	r3, #4
 969 005e 06E0     		b	.L39
 970              	.L42:
 236:main.c        ****     }
 237:main.c        ****     if (s6) {
 971              		.loc 1 237 0
 972 0060 064B     		ldr	r3, .L44+4
 973 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974 0064 002B     		cmp	r3, #0
 975 0066 01D0     		beq	.L43
 238:main.c        ****         return AdjustToTheLeft;    
 976              		.loc 1 238 0
 977 0068 0323     		movs	r3, #3
 978 006a 00E0     		b	.L39
 979              	.L43:
 239:main.c        ****     }
 240:main.c        ****    
 241:main.c        ****     // We should never actually get to this point
 242:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 243:main.c        ****     return Stop;
 980              		.loc 1 243 0
 981 006c 0523     		movs	r3, #5
 982              	.L39:
 244:main.c        **** }
 983              		.loc 1 244 0
 984 006e 1846     		mov	r0, r3
 985 0070 BD46     		mov	sp, r7
 986              		.cfi_def_cfa_register 13
 987              		@ sp needed
 988 0072 80BC     		pop	{r7}
 989              		.cfi_restore 7
 990              		.cfi_def_cfa_offset 0
 991 0074 7047     		bx	lr
 992              	.L45:
 993 0076 00BF     		.align	2
 994              	.L44:
 995 0078 00000000 		.word	s5
 996 007c 00000000 		.word	s6
 997 0080 00000000 		.word	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 23


 998              		.cfi_endproc
 999              	.LFE73:
 1000              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1001              		.global	lastDirectionAfter180
 1002              		.data
 1003              		.type	lastDirectionAfter180, %object
 1004              		.size	lastDirectionAfter180, 1
 1005              	lastDirectionAfter180:
 1006 0052 06       		.byte	6
 1007              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1008              		.align	2
 1009              		.global	SpinCourseCorrection
 1010              		.thumb
 1011              		.thumb_func
 1012              		.type	SpinCourseCorrection, %function
 1013              	SpinCourseCorrection:
 1014              	.LFB74:
 245:main.c        **** 
 246:main.c        **** enum RobotMovement SpinCourseCorrection();
 247:main.c        **** 
 248:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 249:main.c        **** 
 250:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1015              		.loc 1 250 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 1020 0000 80B4     		push	{r7}
 1021              		.cfi_def_cfa_offset 4
 1022              		.cfi_offset 7, -4
 1023 0002 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 251:main.c        ****     // Set first iteration flag.
 252:main.c        ****     if (!spinCourseCorrectionStarted) {
 1025              		.loc 1 252 0
 1026 0004 184B     		ldr	r3, .L53
 1027 0006 1B78     		ldrb	r3, [r3]
 1028 0008 DBB2     		uxtb	r3, r3
 1029 000a 002B     		cmp	r3, #0
 1030 000c 06D1     		bne	.L47
 253:main.c        ****         spinCourseCorrectionStarted = 1;    
 1031              		.loc 1 253 0
 1032 000e 164B     		ldr	r3, .L53
 1033 0010 0122     		movs	r2, #1
 1034 0012 1A70     		strb	r2, [r3]
 254:main.c        ****         lastDirectionAfter180 = currentDirection;
 1035              		.loc 1 254 0
 1036 0014 154B     		ldr	r3, .L53+4
 1037 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0018 154B     		ldr	r3, .L53+8
 1039 001a 1A70     		strb	r2, [r3]
 1040              	.L47:
 255:main.c        ****     }
 256:main.c        ****     
 257:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 258:main.c        ****     if (s5 && s6) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 24


 1041              		.loc 1 258 0
 1042 001c 154B     		ldr	r3, .L53+12
 1043 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0020 002B     		cmp	r3, #0
 1045 0022 0FD0     		beq	.L48
 1046              		.loc 1 258 0 is_stmt 0 discriminator 1
 1047 0024 144B     		ldr	r3, .L53+16
 1048 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 0028 002B     		cmp	r3, #0
 1050 002a 0BD0     		beq	.L48
 259:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1051              		.loc 1 259 0 is_stmt 1
 1052 002c 104B     		ldr	r3, .L53+8
 1053 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 0030 022B     		cmp	r3, #2
 1055 0032 01D0     		beq	.L49
 260:main.c        ****             return TurnLeft;
 1056              		.loc 1 260 0
 1057 0034 0223     		movs	r3, #2
 1058 0036 12E0     		b	.L50
 1059              	.L49:
 261:main.c        ****         }
 262:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1060              		.loc 1 262 0
 1061 0038 0D4B     		ldr	r3, .L53+8
 1062 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 003c 012B     		cmp	r3, #1
 1064 003e 01D0     		beq	.L48
 263:main.c        ****             return TurnRight;    
 1065              		.loc 1 263 0
 1066 0040 0123     		movs	r3, #1
 1067 0042 0CE0     		b	.L50
 1068              	.L48:
 264:main.c        ****         }
 265:main.c        ****     }
 266:main.c        **** 
 267:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 268:main.c        ****     if (s5) {
 1069              		.loc 1 268 0
 1070 0044 0B4B     		ldr	r3, .L53+12
 1071 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 0048 002B     		cmp	r3, #0
 1073 004a 01D0     		beq	.L51
 269:main.c        ****         return TurnRight;    
 1074              		.loc 1 269 0
 1075 004c 0123     		movs	r3, #1
 1076 004e 06E0     		b	.L50
 1077              	.L51:
 270:main.c        ****     }
 271:main.c        ****     if (s6) {
 1078              		.loc 1 271 0
 1079 0050 094B     		ldr	r3, .L53+16
 1080 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 0054 002B     		cmp	r3, #0
 1082 0056 01D0     		beq	.L52
 272:main.c        ****         return TurnLeft;    
 1083              		.loc 1 272 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 25


 1084 0058 0223     		movs	r3, #2
 1085 005a 00E0     		b	.L50
 1086              	.L52:
 273:main.c        ****     }
 274:main.c        ****    
 275:main.c        ****     // We should never actually get to this point
 276:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 277:main.c        ****     return Stop;
 1087              		.loc 1 277 0
 1088 005c 0523     		movs	r3, #5
 1089              	.L50:
 278:main.c        **** }
 1090              		.loc 1 278 0
 1091 005e 1846     		mov	r0, r3
 1092 0060 BD46     		mov	sp, r7
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 0062 80BC     		pop	{r7}
 1096              		.cfi_restore 7
 1097              		.cfi_def_cfa_offset 0
 1098 0064 7047     		bx	lr
 1099              	.L54:
 1100 0066 00BF     		.align	2
 1101              	.L53:
 1102 0068 3B000000 		.word	spinCourseCorrectionStarted
 1103 006c 00000000 		.word	currentDirection
 1104 0070 00000000 		.word	lastDirectionAfter180
 1105 0074 00000000 		.word	s5
 1106 0078 00000000 		.word	s6
 1107              		.cfi_endproc
 1108              	.LFE74:
 1109              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1110              		.global	__aeabi_fcmpge
 1111              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1112              		.align	2
 1113              		.global	GetMovementAccordingToInstruction
 1114              		.thumb
 1115              		.thumb_func
 1116              		.type	GetMovementAccordingToInstruction, %function
 1117              	GetMovementAccordingToInstruction:
 1118              	.LFB75:
 279:main.c        **** 
 280:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1119              		.loc 1 280 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 8
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 82B0     		sub	sp, sp, #8
 1128              		.cfi_def_cfa_offset 16
 1129 0004 00AF     		add	r7, sp, #0
 1130              		.cfi_def_cfa_register 7
 281:main.c        ****     float blocksize;
 282:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 26


 1131              		.loc 1 282 0
 1132 0006 9B4B     		ldr	r3, .L107
 1133 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1134 000a 002B     		cmp	r3, #0
 1135 000c 03D0     		beq	.L56
 1136              		.loc 1 282 0 is_stmt 0 discriminator 1
 1137 000e 994B     		ldr	r3, .L107
 1138 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1139 0012 012B     		cmp	r3, #1
 1140 0014 03D1     		bne	.L57
 1141              	.L56:
 283:main.c        ****         blocksize = yBlocksize;
 1142              		.loc 1 283 0 is_stmt 1
 1143 0016 984B     		ldr	r3, .L107+4
 1144 0018 1B68     		ldr	r3, [r3]	@ float
 1145 001a 7B60     		str	r3, [r7, #4]	@ float
 1146 001c 02E0     		b	.L58
 1147              	.L57:
 284:main.c        ****     } else {
 285:main.c        ****         blocksize = xBlocksize;
 1148              		.loc 1 285 0
 1149 001e 974B     		ldr	r3, .L107+8
 1150 0020 1B68     		ldr	r3, [r3]	@ float
 1151 0022 7B60     		str	r3, [r7, #4]	@ float
 1152              	.L58:
 286:main.c        ****     }
 287:main.c        ****     
 288:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 289:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 290:main.c        ****         // OR an EVENT happens in the current instruction
 291:main.c        ****         // e.g. CurrentInstruction: GoForward 
 292:main.c        ****         //      S3 on BLACK
 293:main.c        ****         //      Check Ignore Count
 294:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 295:main.c        ****     
 296:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1153              		.loc 1 296 0
 1154 0024 964B     		ldr	r3, .L107+12
 1155 0026 1B78     		ldrb	r3, [r3]
 1156 0028 FB70     		strb	r3, [r7, #3]
 297:main.c        ****     
 298:main.c        ****     switch (currentInstructionDirection) {
 1157              		.loc 1 298 0
 1158 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1159 002c 052B     		cmp	r3, #5
 1160 002e 00F2F081 		bhi	.L59
 1161 0032 01A2     		adr	r2, .L61
 1162 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1163              		.p2align 2
 1164              	.L61:
 1165 0038 51000000 		.word	.L60+1
 1166 003c 13010000 		.word	.L62+1
 1167 0040 01020000 		.word	.L63+1
 1168 0044 A5030000 		.word	.L64+1
 1169 0048 2F030000 		.word	.L65+1
 1170 004c 7F030000 		.word	.L66+1
 1171              		.p2align 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 27


 1172              	.L60:
 299:main.c        ****         case GoForward:
 300:main.c        ****             if(currentDirection == Stop) {
 1173              		.loc 1 300 0
 1174 0050 8C4B     		ldr	r3, .L107+16
 1175 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 0054 052B     		cmp	r3, #5
 1177 0056 08D1     		bne	.L67
 301:main.c        ****                 if(stopBuffer <= 50) {
 1178              		.loc 1 301 0
 1179 0058 8B4B     		ldr	r3, .L107+20
 1180 005a 1B68     		ldr	r3, [r3]
 1181 005c 322B     		cmp	r3, #50
 1182 005e 01D8     		bhi	.L68
 302:main.c        ****                     return Stop;
 1183              		.loc 1 302 0
 1184 0060 0523     		movs	r3, #5
 1185 0062 D7E1     		b	.L69
 1186              	.L68:
 303:main.c        ****                 } else {
 304:main.c        ****                     stopBuffer = 100;
 1187              		.loc 1 304 0
 1188 0064 884B     		ldr	r3, .L107+20
 1189 0066 6422     		movs	r2, #100
 1190 0068 1A60     		str	r2, [r3]
 1191              	.L67:
 305:main.c        ****                 }
 306:main.c        ****             }
 307:main.c        ****             if (s3) {
 1192              		.loc 1 307 0
 1193 006a 884B     		ldr	r3, .L107+24
 1194 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 006e 002B     		cmp	r3, #0
 1196 0070 02D0     		beq	.L70
 308:main.c        ****                 leftStatusFlag = 1;
 1197              		.loc 1 308 0
 1198 0072 874B     		ldr	r3, .L107+28
 1199 0074 0122     		movs	r2, #1
 1200 0076 1A70     		strb	r2, [r3]
 1201              	.L70:
 309:main.c        ****             }
 310:main.c        ****             
 311:main.c        ****             if (s4) {
 1202              		.loc 1 311 0
 1203 0078 864B     		ldr	r3, .L107+32
 1204 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 007c 002B     		cmp	r3, #0
 1206 007e 02D0     		beq	.L71
 312:main.c        ****                 rightStatusFlag = 1;
 1207              		.loc 1 312 0
 1208 0080 854B     		ldr	r3, .L107+36
 1209 0082 0122     		movs	r2, #1
 1210 0084 1A70     		strb	r2, [r3]
 1211              	.L71:
 313:main.c        ****             }
 314:main.c        ****             
 315:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 28


 316:main.c        ****             if (leftStatusFlag) {
 1212              		.loc 1 316 0
 1213 0086 824B     		ldr	r3, .L107+28
 1214 0088 1B78     		ldrb	r3, [r3]
 1215 008a DBB2     		uxtb	r3, r3
 1216 008c 002B     		cmp	r3, #0
 1217 008e 1BD0     		beq	.L72
 317:main.c        ****                 if (!s3) {
 1218              		.loc 1 317 0
 1219 0090 7E4B     		ldr	r3, .L107+24
 1220 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0094 002B     		cmp	r3, #0
 1222 0096 17D1     		bne	.L72
 318:main.c        ****                     leftStatusFlag = 0;    
 1223              		.loc 1 318 0
 1224 0098 7D4B     		ldr	r3, .L107+28
 1225 009a 0022     		movs	r2, #0
 1226 009c 1A70     		strb	r2, [r3]
 319:main.c        ****                     if (currentIgnoreL == 0) {
 1227              		.loc 1 319 0
 1228 009e 7F4B     		ldr	r3, .L107+40
 1229 00a0 1B78     		ldrb	r3, [r3]
 1230 00a2 DBB2     		uxtb	r3, r3
 1231 00a4 002B     		cmp	r3, #0
 1232 00a6 03D1     		bne	.L73
 320:main.c        ****                         MoveToNextInstruction();
 1233              		.loc 1 320 0
 1234 00a8 FFF7FEFF 		bl	MoveToNextInstruction
 321:main.c        ****                         return Stop;
 1235              		.loc 1 321 0
 1236 00ac 0523     		movs	r3, #5
 1237 00ae B1E1     		b	.L69
 1238              	.L73:
 322:main.c        ****                     }
 323:main.c        ****                     if (currentIgnoreL > 0) {
 1239              		.loc 1 323 0
 1240 00b0 7A4B     		ldr	r3, .L107+40
 1241 00b2 1B78     		ldrb	r3, [r3]
 1242 00b4 DBB2     		uxtb	r3, r3
 1243 00b6 002B     		cmp	r3, #0
 1244 00b8 06D0     		beq	.L72
 324:main.c        ****                         currentIgnoreL--;    
 1245              		.loc 1 324 0
 1246 00ba 784B     		ldr	r3, .L107+40
 1247 00bc 1B78     		ldrb	r3, [r3]
 1248 00be DBB2     		uxtb	r3, r3
 1249 00c0 013B     		subs	r3, r3, #1
 1250 00c2 DAB2     		uxtb	r2, r3
 1251 00c4 754B     		ldr	r3, .L107+40
 1252 00c6 1A70     		strb	r2, [r3]
 1253              	.L72:
 325:main.c        ****                     }
 326:main.c        ****                 }
 327:main.c        ****             }
 328:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 329:main.c        ****             if (rightStatusFlag) {
 1254              		.loc 1 329 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 29


 1255 00c8 734B     		ldr	r3, .L107+36
 1256 00ca 1B78     		ldrb	r3, [r3]
 1257 00cc DBB2     		uxtb	r3, r3
 1258 00ce 002B     		cmp	r3, #0
 1259 00d0 1BD0     		beq	.L74
 330:main.c        ****                 if (!s4) {
 1260              		.loc 1 330 0
 1261 00d2 704B     		ldr	r3, .L107+32
 1262 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1263 00d6 002B     		cmp	r3, #0
 1264 00d8 17D1     		bne	.L74
 331:main.c        ****                     rightStatusFlag = 0;
 1265              		.loc 1 331 0
 1266 00da 6F4B     		ldr	r3, .L107+36
 1267 00dc 0022     		movs	r2, #0
 1268 00de 1A70     		strb	r2, [r3]
 332:main.c        ****                     if (currentIgnoreR == 0) {
 1269              		.loc 1 332 0
 1270 00e0 6F4B     		ldr	r3, .L107+44
 1271 00e2 1B78     		ldrb	r3, [r3]
 1272 00e4 DBB2     		uxtb	r3, r3
 1273 00e6 002B     		cmp	r3, #0
 1274 00e8 03D1     		bne	.L75
 333:main.c        ****                         MoveToNextInstruction();
 1275              		.loc 1 333 0
 1276 00ea FFF7FEFF 		bl	MoveToNextInstruction
 334:main.c        ****                         return Stop;
 1277              		.loc 1 334 0
 1278 00ee 0523     		movs	r3, #5
 1279 00f0 90E1     		b	.L69
 1280              	.L75:
 335:main.c        ****                     }
 336:main.c        ****                     if (currentIgnoreR > 0) {
 1281              		.loc 1 336 0
 1282 00f2 6B4B     		ldr	r3, .L107+44
 1283 00f4 1B78     		ldrb	r3, [r3]
 1284 00f6 DBB2     		uxtb	r3, r3
 1285 00f8 002B     		cmp	r3, #0
 1286 00fa 06D0     		beq	.L74
 337:main.c        ****                         currentIgnoreR--;    
 1287              		.loc 1 337 0
 1288 00fc 684B     		ldr	r3, .L107+44
 1289 00fe 1B78     		ldrb	r3, [r3]
 1290 0100 DBB2     		uxtb	r3, r3
 1291 0102 013B     		subs	r3, r3, #1
 1292 0104 DAB2     		uxtb	r2, r3
 1293 0106 664B     		ldr	r3, .L107+44
 1294 0108 1A70     		strb	r2, [r3]
 1295              	.L74:
 338:main.c        ****                     }
 339:main.c        ****                 }
 340:main.c        ****             }
 341:main.c        ****           
 342:main.c        ****             return ForwardCourseCorrection();
 1296              		.loc 1 342 0
 1297 010a FFF7FEFF 		bl	ForwardCourseCorrection
 1298 010e 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 30


 1299 0110 80E1     		b	.L69
 1300              	.L62:
 343:main.c        ****             break;
 344:main.c        ****         case waitForLeftTurn:
 345:main.c        ****             // continue moving forward until s3 goes on black
 346:main.c        ****             // if we are turning left already
 347:main.c        ****                 // wait until s5 || s6 are on black
 348:main.c        ****                 // return stop
 349:main.c        **** 
 350:main.c        ****             if (turnFinishedFlag) {
 1301              		.loc 1 350 0
 1302 0112 644B     		ldr	r3, .L107+48
 1303 0114 1B78     		ldrb	r3, [r3]
 1304 0116 DBB2     		uxtb	r3, r3
 1305 0118 002B     		cmp	r3, #0
 1306 011a 26D0     		beq	.L76
 351:main.c        ****                 if (!s3 && !s5 && !s6) {
 1307              		.loc 1 351 0
 1308 011c 5B4B     		ldr	r3, .L107+24
 1309 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0120 002B     		cmp	r3, #0
 1311 0122 0BD1     		bne	.L77
 1312              		.loc 1 351 0 is_stmt 0 discriminator 1
 1313 0124 604B     		ldr	r3, .L107+52
 1314 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1315 0128 002B     		cmp	r3, #0
 1316 012a 07D1     		bne	.L77
 1317              		.loc 1 351 0 discriminator 2
 1318 012c 5F4B     		ldr	r3, .L107+56
 1319 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1320 0130 002B     		cmp	r3, #0
 1321 0132 03D1     		bne	.L77
 352:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 353:main.c        ****                     return ForwardCourseCorrection();
 1322              		.loc 1 353 0 is_stmt 1
 1323 0134 FFF7FEFF 		bl	ForwardCourseCorrection
 1324 0138 0346     		mov	r3, r0
 1325 013a 6BE1     		b	.L69
 1326              	.L77:
 354:main.c        ****                 }
 355:main.c        ****                 if (s5 || s6) {
 1327              		.loc 1 355 0
 1328 013c 5A4B     		ldr	r3, .L107+52
 1329 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0140 002B     		cmp	r3, #0
 1331 0142 03D1     		bne	.L78
 1332              		.loc 1 355 0 is_stmt 0 discriminator 1
 1333 0144 594B     		ldr	r3, .L107+56
 1334 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 0148 002B     		cmp	r3, #0
 1336 014a 03D0     		beq	.L79
 1337              	.L78:
 356:main.c        ****                     return SpinCourseCorrection();
 1338              		.loc 1 356 0 is_stmt 1
 1339 014c FFF7FEFF 		bl	SpinCourseCorrection
 1340 0150 0346     		mov	r3, r0
 1341 0152 5FE1     		b	.L69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 31


 1342              	.L79:
 357:main.c        ****                 }
 358:main.c        ****                 if (s3) {
 1343              		.loc 1 358 0
 1344 0154 4D4B     		ldr	r3, .L107+24
 1345 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 0158 002B     		cmp	r3, #0
 1347 015a 06D0     		beq	.L76
 359:main.c        ****                     turnFinishedFlag = 0;
 1348              		.loc 1 359 0
 1349 015c 514B     		ldr	r3, .L107+48
 1350 015e 0022     		movs	r2, #0
 1351 0160 1A70     		strb	r2, [r3]
 360:main.c        ****                     MoveToNextInstruction();   
 1352              		.loc 1 360 0
 1353 0162 FFF7FEFF 		bl	MoveToNextInstruction
 361:main.c        ****                     return Stop;  
 1354              		.loc 1 361 0
 1355 0166 0523     		movs	r3, #5
 1356 0168 54E1     		b	.L69
 1357              	.L76:
 362:main.c        ****                 }
 363:main.c        ****                 
 364:main.c        ****                 /*
 365:main.c        ****                 if (s3) {
 366:main.c        ****                     turnFinishedFlag = 0;
 367:main.c        ****                     MoveToNextInstruction();    
 368:main.c        ****                     return Stop;
 369:main.c        ****                 }
 370:main.c        ****                 else {
 371:main.c        ****                     return ForwardCourseCorrection();        
 372:main.c        ****                 }
 373:main.c        ****                 */
 374:main.c        ****             }
 375:main.c        ****             
 376:main.c        ****             
 377:main.c        ****             if (currentDirection == Stop) {
 1358              		.loc 1 377 0
 1359 016a 464B     		ldr	r3, .L107+16
 1360 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1361 016e 052B     		cmp	r3, #5
 1362 0170 09D1     		bne	.L80
 378:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 379:main.c        ****                 if (stopBuffer <= 50) {
 1363              		.loc 1 379 0
 1364 0172 454B     		ldr	r3, .L107+20
 1365 0174 1B68     		ldr	r3, [r3]
 1366 0176 322B     		cmp	r3, #50
 1367 0178 01D8     		bhi	.L81
 380:main.c        ****                     return Stop;   
 1368              		.loc 1 380 0
 1369 017a 0523     		movs	r3, #5
 1370 017c 4AE1     		b	.L69
 1371              	.L81:
 381:main.c        ****                 }
 382:main.c        ****                 return ForwardCourseCorrection();
 1372              		.loc 1 382 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 32


 1373 017e FFF7FEFF 		bl	ForwardCourseCorrection
 1374 0182 0346     		mov	r3, r0
 1375 0184 46E1     		b	.L69
 1376              	.L80:
 383:main.c        ****             }
 384:main.c        ****          
 385:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 386:main.c        ****             if (currentDirection == TurnLeft) {
 1377              		.loc 1 386 0
 1378 0186 3F4B     		ldr	r3, .L107+16
 1379 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 018a 022B     		cmp	r3, #2
 1381 018c 2BD1     		bne	.L82
 387:main.c        ****                 // If turn started and we are still on black, continue turning
 388:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 389:main.c        ****                 if (turnStartedFlag) {
 1382              		.loc 1 389 0
 1383 018e 484B     		ldr	r3, .L107+60
 1384 0190 1B78     		ldrb	r3, [r3]
 1385 0192 DBB2     		uxtb	r3, r3
 1386 0194 002B     		cmp	r3, #0
 1387 0196 0ED0     		beq	.L83
 390:main.c        ****                     if (s3 && (s5 && s6)) {
 1388              		.loc 1 390 0
 1389 0198 3C4B     		ldr	r3, .L107+24
 1390 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1391 019c 002B     		cmp	r3, #0
 1392 019e 0AD0     		beq	.L83
 1393              		.loc 1 390 0 is_stmt 0 discriminator 1
 1394 01a0 414B     		ldr	r3, .L107+52
 1395 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 01a4 002B     		cmp	r3, #0
 1397 01a6 06D0     		beq	.L83
 1398              		.loc 1 390 0 discriminator 2
 1399 01a8 404B     		ldr	r3, .L107+56
 1400 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1401 01ac 002B     		cmp	r3, #0
 1402 01ae 02D0     		beq	.L83
 391:main.c        ****                         turnStartedFlag = 0;
 1403              		.loc 1 391 0 is_stmt 1
 1404 01b0 3F4B     		ldr	r3, .L107+60
 1405 01b2 0022     		movs	r2, #0
 1406 01b4 1A70     		strb	r2, [r3]
 1407              	.L83:
 392:main.c        ****                     }
 393:main.c        ****                 }
 394:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1408              		.loc 1 394 0
 1409 01b6 3E4B     		ldr	r3, .L107+60
 1410 01b8 1B78     		ldrb	r3, [r3]
 1411 01ba DBB2     		uxtb	r3, r3
 1412 01bc 002B     		cmp	r3, #0
 1413 01be 10D1     		bne	.L84
 1414              		.loc 1 394 0 is_stmt 0 discriminator 1
 1415 01c0 324B     		ldr	r3, .L107+24
 1416 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 01c4 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 33


 1418 01c6 0CD1     		bne	.L84
 1419              		.loc 1 394 0 discriminator 2
 1420 01c8 374B     		ldr	r3, .L107+52
 1421 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 01cc 002B     		cmp	r3, #0
 1423 01ce 08D1     		bne	.L84
 1424              		.loc 1 394 0 discriminator 3
 1425 01d0 364B     		ldr	r3, .L107+56
 1426 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1427 01d4 002B     		cmp	r3, #0
 1428 01d6 04D1     		bne	.L84
 395:main.c        ****                     turnFinishedFlag = 1;
 1429              		.loc 1 395 0 is_stmt 1
 1430 01d8 324B     		ldr	r3, .L107+48
 1431 01da 0122     		movs	r2, #1
 1432 01dc 1A70     		strb	r2, [r3]
 396:main.c        ****                     return ForwardAfterTurn;
 1433              		.loc 1 396 0
 1434 01de 0823     		movs	r3, #8
 1435 01e0 18E1     		b	.L69
 1436              	.L84:
 397:main.c        ****                 }
 398:main.c        ****                 else
 399:main.c        ****                 {
 400:main.c        ****                     return TurnLeft;
 1437              		.loc 1 400 0
 1438 01e2 0223     		movs	r3, #2
 1439 01e4 16E1     		b	.L69
 1440              	.L82:
 401:main.c        ****                 }
 402:main.c        ****             }
 403:main.c        ****             
 404:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 405:main.c        ****             if (!s3) {
 1441              		.loc 1 405 0
 1442 01e6 294B     		ldr	r3, .L107+24
 1443 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1444 01ea 002B     		cmp	r3, #0
 1445 01ec 04D1     		bne	.L85
 406:main.c        ****                 turnStartedFlag = 1;
 1446              		.loc 1 406 0
 1447 01ee 304B     		ldr	r3, .L107+60
 1448 01f0 0122     		movs	r2, #1
 1449 01f2 1A70     		strb	r2, [r3]
 407:main.c        ****                 return TurnLeft;
 1450              		.loc 1 407 0
 1451 01f4 0223     		movs	r3, #2
 1452 01f6 0DE1     		b	.L69
 1453              	.L85:
 408:main.c        ****             }
 409:main.c        ****             
 410:main.c        ****             // Otherwise, keep going forward
 411:main.c        ****             return ForwardCourseCorrection(); 
 1454              		.loc 1 411 0
 1455 01f8 FFF7FEFF 		bl	ForwardCourseCorrection
 1456 01fc 0346     		mov	r3, r0
 1457 01fe 09E1     		b	.L69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 34


 1458              	.L63:
 412:main.c        ****             break;
 413:main.c        ****         case waitForRightTurn:
 414:main.c        ****             // continue moving forward until s4 goes on black
 415:main.c        ****             // if we are turning left already
 416:main.c        ****                 // wait until s5 || s6 are on black
 417:main.c        ****                 // return stop
 418:main.c        **** 
 419:main.c        ****             if (turnFinishedFlag) {
 1459              		.loc 1 419 0
 1460 0200 284B     		ldr	r3, .L107+48
 1461 0202 1B78     		ldrb	r3, [r3]
 1462 0204 DBB2     		uxtb	r3, r3
 1463 0206 002B     		cmp	r3, #0
 1464 0208 26D0     		beq	.L86
 420:main.c        ****                 if (!s4 && !s5 && !s6) {
 1465              		.loc 1 420 0
 1466 020a 224B     		ldr	r3, .L107+32
 1467 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 020e 002B     		cmp	r3, #0
 1469 0210 0BD1     		bne	.L87
 1470              		.loc 1 420 0 is_stmt 0 discriminator 1
 1471 0212 254B     		ldr	r3, .L107+52
 1472 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 0216 002B     		cmp	r3, #0
 1474 0218 07D1     		bne	.L87
 1475              		.loc 1 420 0 discriminator 2
 1476 021a 244B     		ldr	r3, .L107+56
 1477 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 021e 002B     		cmp	r3, #0
 1479 0220 03D1     		bne	.L87
 421:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 422:main.c        ****                     return ForwardCourseCorrection();
 1480              		.loc 1 422 0 is_stmt 1
 1481 0222 FFF7FEFF 		bl	ForwardCourseCorrection
 1482 0226 0346     		mov	r3, r0
 1483 0228 F4E0     		b	.L69
 1484              	.L87:
 423:main.c        ****                 }
 424:main.c        ****                 if (s5 || s6) {
 1485              		.loc 1 424 0
 1486 022a 1F4B     		ldr	r3, .L107+52
 1487 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 022e 002B     		cmp	r3, #0
 1489 0230 03D1     		bne	.L88
 1490              		.loc 1 424 0 is_stmt 0 discriminator 1
 1491 0232 1E4B     		ldr	r3, .L107+56
 1492 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1493 0236 002B     		cmp	r3, #0
 1494 0238 03D0     		beq	.L89
 1495              	.L88:
 425:main.c        ****                     return SpinCourseCorrection();
 1496              		.loc 1 425 0 is_stmt 1
 1497 023a FFF7FEFF 		bl	SpinCourseCorrection
 1498 023e 0346     		mov	r3, r0
 1499 0240 E8E0     		b	.L69
 1500              	.L89:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 35


 426:main.c        ****                 }
 427:main.c        ****                 if (s4) {
 1501              		.loc 1 427 0
 1502 0242 144B     		ldr	r3, .L107+32
 1503 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1504 0246 002B     		cmp	r3, #0
 1505 0248 06D0     		beq	.L86
 428:main.c        ****                     turnFinishedFlag = 0;
 1506              		.loc 1 428 0
 1507 024a 164B     		ldr	r3, .L107+48
 1508 024c 0022     		movs	r2, #0
 1509 024e 1A70     		strb	r2, [r3]
 429:main.c        ****                     MoveToNextInstruction();   
 1510              		.loc 1 429 0
 1511 0250 FFF7FEFF 		bl	MoveToNextInstruction
 430:main.c        ****                     return Stop;  
 1512              		.loc 1 430 0
 1513 0254 0523     		movs	r3, #5
 1514 0256 DDE0     		b	.L69
 1515              	.L86:
 431:main.c        ****                 }
 432:main.c        ****                 
 433:main.c        **** 
 434:main.c        ****                 /*
 435:main.c        ****                 if (s4) {
 436:main.c        ****                     turnFinishedFlag = 0;
 437:main.c        ****                     MoveToNextInstruction();   
 438:main.c        ****                     return Stop;
 439:main.c        ****                 }
 440:main.c        ****                 else {
 441:main.c        ****                     return ForwardCourseCorrection();        
 442:main.c        ****                 }*/
 443:main.c        ****                 
 444:main.c        ****             }
 445:main.c        ****             
 446:main.c        ****             
 447:main.c        ****             if (currentDirection == Stop) {
 1516              		.loc 1 447 0
 1517 0258 0A4B     		ldr	r3, .L107+16
 1518 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 025c 052B     		cmp	r3, #5
 1520 025e 29D1     		bne	.L90
 448:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 449:main.c        ****                 if (stopBuffer <= 50) {
 1521              		.loc 1 449 0
 1522 0260 094B     		ldr	r3, .L107+20
 1523 0262 1B68     		ldr	r3, [r3]
 1524 0264 322B     		cmp	r3, #50
 1525 0266 01D8     		bhi	.L91
 450:main.c        ****                     return Stop;   
 1526              		.loc 1 450 0
 1527 0268 0523     		movs	r3, #5
 1528 026a D3E0     		b	.L69
 1529              	.L91:
 451:main.c        ****                 }
 452:main.c        **** 
 453:main.c        ****                 return ForwardCourseCorrection();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 36


 1530              		.loc 1 453 0
 1531 026c FFF7FEFF 		bl	ForwardCourseCorrection
 1532 0270 0346     		mov	r3, r0
 1533 0272 CFE0     		b	.L69
 1534              	.L108:
 1535              		.align	2
 1536              	.L107:
 1537 0274 00000000 		.word	currentRobotOrientation
 1538 0278 00000000 		.word	yBlocksize
 1539 027c 00000000 		.word	xBlocksize
 1540 0280 00000000 		.word	currentInstruction
 1541 0284 00000000 		.word	currentDirection
 1542 0288 00000000 		.word	stopBuffer
 1543 028c 00000000 		.word	s3
 1544 0290 39000000 		.word	leftStatusFlag
 1545 0294 00000000 		.word	s4
 1546 0298 3A000000 		.word	rightStatusFlag
 1547 029c 3C000000 		.word	currentIgnoreL
 1548 02a0 45000000 		.word	currentIgnoreR
 1549 02a4 35000000 		.word	turnFinishedFlag
 1550 02a8 00000000 		.word	s5
 1551 02ac 00000000 		.word	s6
 1552 02b0 34000000 		.word	turnStartedFlag
 1553              	.L90:
 454:main.c        ****             }
 455:main.c        ****                       
 456:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 457:main.c        ****             if (currentDirection == TurnRight) {
 1554              		.loc 1 457 0
 1555 02b4 594B     		ldr	r3, .L109
 1556 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 02b8 012B     		cmp	r3, #1
 1558 02ba 2BD1     		bne	.L92
 458:main.c        ****                 // If turn started and we are still on black, continue turning
 459:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 460:main.c        ****                 if (turnStartedFlag) {
 1559              		.loc 1 460 0
 1560 02bc 584B     		ldr	r3, .L109+4
 1561 02be 1B78     		ldrb	r3, [r3]
 1562 02c0 DBB2     		uxtb	r3, r3
 1563 02c2 002B     		cmp	r3, #0
 1564 02c4 0ED0     		beq	.L93
 461:main.c        ****                     if (s4 && (s5 && s6)) {
 1565              		.loc 1 461 0
 1566 02c6 574B     		ldr	r3, .L109+8
 1567 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 02ca 002B     		cmp	r3, #0
 1569 02cc 0AD0     		beq	.L93
 1570              		.loc 1 461 0 is_stmt 0 discriminator 1
 1571 02ce 564B     		ldr	r3, .L109+12
 1572 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1573 02d2 002B     		cmp	r3, #0
 1574 02d4 06D0     		beq	.L93
 1575              		.loc 1 461 0 discriminator 2
 1576 02d6 554B     		ldr	r3, .L109+16
 1577 02d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1578 02da 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 37


 1579 02dc 02D0     		beq	.L93
 462:main.c        ****                         turnStartedFlag = 0;
 1580              		.loc 1 462 0 is_stmt 1
 1581 02de 504B     		ldr	r3, .L109+4
 1582 02e0 0022     		movs	r2, #0
 1583 02e2 1A70     		strb	r2, [r3]
 1584              	.L93:
 463:main.c        ****                     }
 464:main.c        ****                 }
 465:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1585              		.loc 1 465 0
 1586 02e4 4E4B     		ldr	r3, .L109+4
 1587 02e6 1B78     		ldrb	r3, [r3]
 1588 02e8 DBB2     		uxtb	r3, r3
 1589 02ea 002B     		cmp	r3, #0
 1590 02ec 10D1     		bne	.L94
 1591              		.loc 1 465 0 is_stmt 0 discriminator 1
 1592 02ee 4D4B     		ldr	r3, .L109+8
 1593 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 02f2 002B     		cmp	r3, #0
 1595 02f4 0CD1     		bne	.L94
 1596              		.loc 1 465 0 discriminator 2
 1597 02f6 4C4B     		ldr	r3, .L109+12
 1598 02f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 02fa 002B     		cmp	r3, #0
 1600 02fc 08D1     		bne	.L94
 1601              		.loc 1 465 0 discriminator 3
 1602 02fe 4B4B     		ldr	r3, .L109+16
 1603 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 0302 002B     		cmp	r3, #0
 1605 0304 04D1     		bne	.L94
 466:main.c        ****                     turnFinishedFlag = 1;
 1606              		.loc 1 466 0 is_stmt 1
 1607 0306 4A4B     		ldr	r3, .L109+20
 1608 0308 0122     		movs	r2, #1
 1609 030a 1A70     		strb	r2, [r3]
 467:main.c        ****                     return ForwardAfterTurn;
 1610              		.loc 1 467 0
 1611 030c 0823     		movs	r3, #8
 1612 030e 81E0     		b	.L69
 1613              	.L94:
 468:main.c        ****                 }
 469:main.c        ****                 else
 470:main.c        ****                 {
 471:main.c        ****                     return TurnRight;
 1614              		.loc 1 471 0
 1615 0310 0123     		movs	r3, #1
 1616 0312 7FE0     		b	.L69
 1617              	.L92:
 472:main.c        ****                 }
 473:main.c        ****             }
 474:main.c        ****             
 475:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 476:main.c        ****             if (!s4) {
 1618              		.loc 1 476 0
 1619 0314 434B     		ldr	r3, .L109+8
 1620 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 38


 1621 0318 002B     		cmp	r3, #0
 1622 031a 04D1     		bne	.L95
 477:main.c        ****                 turnStartedFlag = 1;
 1623              		.loc 1 477 0
 1624 031c 404B     		ldr	r3, .L109+4
 1625 031e 0122     		movs	r2, #1
 1626 0320 1A70     		strb	r2, [r3]
 478:main.c        ****                 return TurnRight;
 1627              		.loc 1 478 0
 1628 0322 0123     		movs	r3, #1
 1629 0324 76E0     		b	.L69
 1630              	.L95:
 479:main.c        ****             }
 480:main.c        ****             
 481:main.c        ****             // Otherwise, keep going forward
 482:main.c        ****             return ForwardCourseCorrection(); 
 1631              		.loc 1 482 0
 1632 0326 FFF7FEFF 		bl	ForwardCourseCorrection
 1633 032a 0346     		mov	r3, r0
 1634 032c 72E0     		b	.L69
 1635              	.L65:
 483:main.c        ****             break;
 484:main.c        ****         case ForwardUntilTarget:
 485:main.c        ****             // Reset distance on first iteration of this instruction
 486:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1636              		.loc 1 486 0
 1637 032e 414B     		ldr	r3, .L109+24
 1638 0330 1B78     		ldrb	r3, [r3]
 1639 0332 DBB2     		uxtb	r3, r3
 1640 0334 002B     		cmp	r3, #0
 1641 0336 0FD1     		bne	.L96
 487:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1642              		.loc 1 487 0
 1643 0338 3E4B     		ldr	r3, .L109+24
 1644 033a 0122     		movs	r2, #1
 1645 033c 1A70     		strb	r2, [r3]
 488:main.c        ****                 totalDistance = 0;
 1646              		.loc 1 488 0
 1647 033e 3E4B     		ldr	r3, .L109+28
 1648 0340 4FF00002 		mov	r2, #0
 1649 0344 1A60     		str	r2, [r3]	@ float
 489:main.c        **** 
 490:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 491:main.c        ****                 blockSizeTotal = blocksize * 2;
 1650              		.loc 1 491 0
 1651 0346 7B68     		ldr	r3, [r7, #4]	@ float
 1652 0348 1946     		mov	r1, r3
 1653 034a 1846     		mov	r0, r3
 1654 034c FFF7FEFF 		bl	__aeabi_fadd
 1655 0350 0346     		mov	r3, r0
 1656 0352 1A46     		mov	r2, r3
 1657 0354 394B     		ldr	r3, .L109+32
 1658 0356 1A60     		str	r2, [r3]	@ float
 1659              	.L96:
 492:main.c        ****             }
 493:main.c        ****             
 494:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 39


 495:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 496:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1660              		.loc 1 496 0
 1661 0358 374B     		ldr	r3, .L109+28
 1662 035a 1A68     		ldr	r2, [r3]	@ float
 1663 035c 374B     		ldr	r3, .L109+32
 1664 035e 1B68     		ldr	r3, [r3]	@ float
 1665 0360 1946     		mov	r1, r3
 1666 0362 1046     		mov	r0, r2
 1667 0364 FFF7FEFF 		bl	__aeabi_fcmpge
 1668 0368 0346     		mov	r3, r0
 1669 036a 002B     		cmp	r3, #0
 1670 036c 03D0     		beq	.L106
 497:main.c        ****                 // Get next instruction
 498:main.c        ****                 MoveToNextInstruction();
 1671              		.loc 1 498 0
 1672 036e FFF7FEFF 		bl	MoveToNextInstruction
 499:main.c        **** 
 500:main.c        ****                 
 501:main.c        ****                 return Stop;
 1673              		.loc 1 501 0
 1674 0372 0523     		movs	r3, #5
 1675 0374 4EE0     		b	.L69
 1676              	.L106:
 502:main.c        ****             }
 503:main.c        ****             
 504:main.c        ****             return ForwardCourseCorrection();
 1677              		.loc 1 504 0
 1678 0376 FFF7FEFF 		bl	ForwardCourseCorrection
 1679 037a 0346     		mov	r3, r0
 1680 037c 4AE0     		b	.L69
 1681              	.L66:
 505:main.c        ****             break;
 506:main.c        ****         case StopAtTarget:
 507:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 508:main.c        ****             // Reset flags
 509:main.c        ****             totalDistance = 0;
 1682              		.loc 1 509 0
 1683 037e 2E4B     		ldr	r3, .L109+28
 1684 0380 4FF00002 		mov	r2, #0
 1685 0384 1A60     		str	r2, [r3]	@ float
 510:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1686              		.loc 1 510 0
 1687 0386 2B4B     		ldr	r3, .L109+24
 1688 0388 0022     		movs	r2, #0
 1689 038a 1A70     		strb	r2, [r3]
 511:main.c        ****             blockSizeTotal = 0;
 1690              		.loc 1 511 0
 1691 038c 2B4B     		ldr	r3, .L109+32
 1692 038e 4FF00002 		mov	r2, #0
 1693 0392 1A60     		str	r2, [r3]	@ float
 512:main.c        ****             
 513:main.c        ****             if (stopBuffer <= 200) {
 1694              		.loc 1 513 0
 1695 0394 2A4B     		ldr	r3, .L109+36
 1696 0396 1B68     		ldr	r3, [r3]
 1697 0398 C82B     		cmp	r3, #200
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 40


 1698 039a 01D8     		bhi	.L99
 514:main.c        ****                 return Stop;    
 1699              		.loc 1 514 0
 1700 039c 0523     		movs	r3, #5
 1701 039e 39E0     		b	.L69
 1702              	.L99:
 515:main.c        ****             }
 516:main.c        ****             return TurnRight;
 1703              		.loc 1 516 0
 1704 03a0 0123     		movs	r3, #1
 1705 03a2 37E0     		b	.L69
 1706              	.L64:
 517:main.c        ****             break;
 518:main.c        ****         case uTurn:
 519:main.c        ****             if (currentDirection == Stop) {
 1707              		.loc 1 519 0
 1708 03a4 1D4B     		ldr	r3, .L109
 1709 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 03a8 052B     		cmp	r3, #5
 1711 03aa 08D1     		bne	.L100
 520:main.c        ****                 if (stopBuffer <= 50) {
 1712              		.loc 1 520 0
 1713 03ac 244B     		ldr	r3, .L109+36
 1714 03ae 1B68     		ldr	r3, [r3]
 1715 03b0 322B     		cmp	r3, #50
 1716 03b2 01D8     		bhi	.L101
 521:main.c        ****                     return Stop;    
 1717              		.loc 1 521 0
 1718 03b4 0523     		movs	r3, #5
 1719 03b6 2DE0     		b	.L69
 1720              	.L101:
 522:main.c        ****                 } else {
 523:main.c        ****                     stopBuffer = 100;    
 1721              		.loc 1 523 0
 1722 03b8 214B     		ldr	r3, .L109+36
 1723 03ba 6422     		movs	r2, #100
 1724 03bc 1A60     		str	r2, [r3]
 1725              	.L100:
 524:main.c        ****                 }
 525:main.c        ****             }
 526:main.c        ****             
 527:main.c        ****             
 528:main.c        ****             if (!uTurnStartedFlag) {
 1726              		.loc 1 528 0
 1727 03be 214B     		ldr	r3, .L109+40
 1728 03c0 1B78     		ldrb	r3, [r3]
 1729 03c2 DBB2     		uxtb	r3, r3
 1730 03c4 002B     		cmp	r3, #0
 1731 03c6 07D1     		bne	.L102
 529:main.c        ****                 uTurnStartedFlag = 1;
 1732              		.loc 1 529 0
 1733 03c8 1E4B     		ldr	r3, .L109+40
 1734 03ca 0122     		movs	r2, #1
 1735 03cc 1A70     		strb	r2, [r3]
 530:main.c        ****                 spinCourseCorrectionStarted = 0;
 1736              		.loc 1 530 0
 1737 03ce 1E4B     		ldr	r3, .L109+44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 41


 1738 03d0 0022     		movs	r2, #0
 1739 03d2 1A70     		strb	r2, [r3]
 531:main.c        ****                 return Spin180;
 1740              		.loc 1 531 0
 1741 03d4 0A23     		movs	r3, #10
 1742 03d6 1DE0     		b	.L69
 1743              	.L102:
 532:main.c        ****             } 
 533:main.c        ****             
 534:main.c        ****             if (uTurnFinishedFlag) {
 1744              		.loc 1 534 0
 1745 03d8 1C4B     		ldr	r3, .L109+48
 1746 03da 1B78     		ldrb	r3, [r3]
 1747 03dc DBB2     		uxtb	r3, r3
 1748 03de 002B     		cmp	r3, #0
 1749 03e0 03D0     		beq	.L103
 535:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 536:main.c        ****                 MoveToNextInstruction();
 1750              		.loc 1 536 0
 1751 03e2 FFF7FEFF 		bl	MoveToNextInstruction
 537:main.c        ****                 return Stop;    
 1752              		.loc 1 537 0
 1753 03e6 0523     		movs	r3, #5
 1754 03e8 14E0     		b	.L69
 1755              	.L103:
 538:main.c        ****             }
 539:main.c        ****             
 540:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 541:main.c        ****             if (uTurnStartedFlag) {
 1756              		.loc 1 541 0
 1757 03ea 164B     		ldr	r3, .L109+40
 1758 03ec 1B78     		ldrb	r3, [r3]
 1759 03ee DBB2     		uxtb	r3, r3
 1760 03f0 002B     		cmp	r3, #0
 1761 03f2 0AD0     		beq	.L104
 542:main.c        ****                 if (!s5 && !s6) {
 1762              		.loc 1 542 0
 1763 03f4 0C4B     		ldr	r3, .L109+12
 1764 03f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1765 03f8 002B     		cmp	r3, #0
 1766 03fa 06D1     		bne	.L104
 1767              		.loc 1 542 0 is_stmt 0 discriminator 1
 1768 03fc 0B4B     		ldr	r3, .L109+16
 1769 03fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1770 0400 002B     		cmp	r3, #0
 1771 0402 02D1     		bne	.L104
 543:main.c        ****                     uTurnFinishedFlag = 1;    
 1772              		.loc 1 543 0 is_stmt 1
 1773 0404 114B     		ldr	r3, .L109+48
 1774 0406 0122     		movs	r2, #1
 1775 0408 1A70     		strb	r2, [r3]
 1776              	.L104:
 544:main.c        ****                 }    
 545:main.c        ****             }
 546:main.c        ****             
 547:main.c        ****             return SpinCourseCorrection();
 1777              		.loc 1 547 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 42


 1778 040a FFF7FEFF 		bl	SpinCourseCorrection
 1779 040e 0346     		mov	r3, r0
 1780 0410 00E0     		b	.L69
 1781              	.L59:
 548:main.c        ****             break;
 549:main.c        ****         default:
 550:main.c        ****             return Stop;
 1782              		.loc 1 550 0
 1783 0412 0523     		movs	r3, #5
 1784              	.L69:
 551:main.c        ****             break;
 552:main.c        ****     }
 553:main.c        ****     return Stop;
 554:main.c        **** }
 1785              		.loc 1 554 0
 1786 0414 1846     		mov	r0, r3
 1787 0416 0837     		adds	r7, r7, #8
 1788              		.cfi_def_cfa_offset 8
 1789 0418 BD46     		mov	sp, r7
 1790              		.cfi_def_cfa_register 13
 1791              		@ sp needed
 1792 041a 80BD     		pop	{r7, pc}
 1793              	.L110:
 1794              		.align	2
 1795              	.L109:
 1796 041c 00000000 		.word	currentDirection
 1797 0420 34000000 		.word	turnStartedFlag
 1798 0424 00000000 		.word	s4
 1799 0428 00000000 		.word	s5
 1800 042c 00000000 		.word	s6
 1801 0430 35000000 		.word	turnFinishedFlag
 1802 0434 36000000 		.word	forwardUntilTargetStartedFlag
 1803 0438 00000000 		.word	totalDistance
 1804 043c 00000000 		.word	blockSizeTotal
 1805 0440 00000000 		.word	stopBuffer
 1806 0444 37000000 		.word	uTurnStartedFlag
 1807 0448 3B000000 		.word	spinCourseCorrectionStarted
 1808 044c 38000000 		.word	uTurnFinishedFlag
 1809              		.cfi_endproc
 1810              	.LFE75:
 1811              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1812              		.global	__aeabi_i2f
 1813              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1814              		.align	2
 1815              		.global	CalculateDistanceToTravel
 1816              		.thumb
 1817              		.thumb_func
 1818              		.type	CalculateDistanceToTravel, %function
 1819              	CalculateDistanceToTravel:
 1820              	.LFB76:
 555:main.c        **** 
 556:main.c        **** // Calculate total blocksize to travel until target
 557:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1821              		.loc 1 557 0
 1822              		.cfi_startproc
 1823              		@ args = 0, pretend = 0, frame = 40
 1824              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 43


 1825 0000 80B5     		push	{r7, lr}
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 7, -8
 1828              		.cfi_offset 14, -4
 1829 0002 8AB0     		sub	sp, sp, #40
 1830              		.cfi_def_cfa_offset 48
 1831 0004 00AF     		add	r7, sp, #0
 1832              		.cfi_def_cfa_register 7
 1833 0006 7860     		str	r0, [r7, #4]	@ float
 558:main.c        ****     float totalBlockSize;
 559:main.c        ****     
 560:main.c        ****     // Check for Row, Col that target is 
 561:main.c        ****     int targetRow = food_list[0][0];
 1834              		.loc 1 561 0
 1835 0008 9E4B     		ldr	r3, .L156
 1836 000a 1B68     		ldr	r3, [r3]
 1837 000c 3B61     		str	r3, [r7, #16]
 562:main.c        ****     int targetCol = food_list[0][1];
 1838              		.loc 1 562 0
 1839 000e 9D4B     		ldr	r3, .L156
 1840 0010 5B68     		ldr	r3, [r3, #4]
 1841 0012 FB60     		str	r3, [r7, #12]
 563:main.c        ****     
 564:main.c        ****     int pathCount = 0;
 1842              		.loc 1 564 0
 1843 0014 0023     		movs	r3, #0
 1844 0016 7B62     		str	r3, [r7, #36]
 565:main.c        ****     
 566:main.c        ****     // Depending on the robot orientation
 567:main.c        ****     // count++ if row, col is 8
 568:main.c        ****     // count reset if row, col is 1 or 0
 569:main.c        ****     // save count if row, col is 9
 570:main.c        ****     switch (currentRobotOrientation) {
 1845              		.loc 1 570 0
 1846 0018 9B4B     		ldr	r3, .L156+4
 1847 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1848 001c 032B     		cmp	r3, #3
 1849 001e 00F21F81 		bhi	.L112
 1850 0022 01A2     		adr	r2, .L114
 1851 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1852              		.p2align 2
 1853              	.L114:
 1854 0028 39000000 		.word	.L113+1
 1855 002c C3000000 		.word	.L115+1
 1856 0030 4D010000 		.word	.L116+1
 1857 0034 D7010000 		.word	.L117+1
 1858              		.p2align 1
 1859              	.L113:
 1860              	.LBB3:
 571:main.c        ****         case Up:
 572:main.c        ****             // Column
 573:main.c        ****             // Start from Bottom (since we're facing up)
 574:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1861              		.loc 1 574 0
 1862 0038 0F23     		movs	r3, #15
 1863 003a 3B62     		str	r3, [r7, #32]
 1864 003c 3BE0     		b	.L118
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 44


 1865              	.L124:
 575:main.c        ****                 if (map[i][targetCol] == 9) {
 1866              		.loc 1 575 0
 1867 003e 9349     		ldr	r1, .L156+8
 1868 0040 3A6A     		ldr	r2, [r7, #32]
 1869 0042 1346     		mov	r3, r2
 1870 0044 DB00     		lsls	r3, r3, #3
 1871 0046 1344     		add	r3, r3, r2
 1872 0048 5B00     		lsls	r3, r3, #1
 1873 004a 1344     		add	r3, r3, r2
 1874 004c FA68     		ldr	r2, [r7, #12]
 1875 004e 1344     		add	r3, r3, r2
 1876 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1877 0054 092B     		cmp	r3, #9
 1878 0056 32D0     		beq	.L151
 576:main.c        ****                     break;    
 577:main.c        ****                 }
 578:main.c        ****                 if (map[i][targetCol] == 8) {
 1879              		.loc 1 578 0
 1880 0058 8C49     		ldr	r1, .L156+8
 1881 005a 3A6A     		ldr	r2, [r7, #32]
 1882 005c 1346     		mov	r3, r2
 1883 005e DB00     		lsls	r3, r3, #3
 1884 0060 1344     		add	r3, r3, r2
 1885 0062 5B00     		lsls	r3, r3, #1
 1886 0064 1344     		add	r3, r3, r2
 1887 0066 FA68     		ldr	r2, [r7, #12]
 1888 0068 1344     		add	r3, r3, r2
 1889 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1890 006e 082B     		cmp	r3, #8
 1891 0070 02D1     		bne	.L121
 579:main.c        ****                     pathCount++;    
 1892              		.loc 1 579 0
 1893 0072 7B6A     		ldr	r3, [r7, #36]
 1894 0074 0133     		adds	r3, r3, #1
 1895 0076 7B62     		str	r3, [r7, #36]
 1896              	.L121:
 580:main.c        ****                 }
 581:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1897              		.loc 1 581 0
 1898 0078 8449     		ldr	r1, .L156+8
 1899 007a 3A6A     		ldr	r2, [r7, #32]
 1900 007c 1346     		mov	r3, r2
 1901 007e DB00     		lsls	r3, r3, #3
 1902 0080 1344     		add	r3, r3, r2
 1903 0082 5B00     		lsls	r3, r3, #1
 1904 0084 1344     		add	r3, r3, r2
 1905 0086 FA68     		ldr	r2, [r7, #12]
 1906 0088 1344     		add	r3, r3, r2
 1907 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1908 008e 002B     		cmp	r3, #0
 1909 0090 0CD0     		beq	.L122
 1910              		.loc 1 581 0 is_stmt 0 discriminator 1
 1911 0092 7E49     		ldr	r1, .L156+8
 1912 0094 3A6A     		ldr	r2, [r7, #32]
 1913 0096 1346     		mov	r3, r2
 1914 0098 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 45


 1915 009a 1344     		add	r3, r3, r2
 1916 009c 5B00     		lsls	r3, r3, #1
 1917 009e 1344     		add	r3, r3, r2
 1918 00a0 FA68     		ldr	r2, [r7, #12]
 1919 00a2 1344     		add	r3, r3, r2
 1920 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1921 00a8 012B     		cmp	r3, #1
 1922 00aa 01D1     		bne	.L123
 1923              	.L122:
 582:main.c        ****                     pathCount = 0;
 1924              		.loc 1 582 0 is_stmt 1
 1925 00ac 0023     		movs	r3, #0
 1926 00ae 7B62     		str	r3, [r7, #36]
 1927              	.L123:
 574:main.c        ****                 if (map[i][targetCol] == 9) {
 1928              		.loc 1 574 0 discriminator 2
 1929 00b0 3B6A     		ldr	r3, [r7, #32]
 1930 00b2 013B     		subs	r3, r3, #1
 1931 00b4 3B62     		str	r3, [r7, #32]
 1932              	.L118:
 574:main.c        ****                 if (map[i][targetCol] == 9) {
 1933              		.loc 1 574 0 is_stmt 0 discriminator 1
 1934 00b6 3B6A     		ldr	r3, [r7, #32]
 1935 00b8 002B     		cmp	r3, #0
 1936 00ba C0DA     		bge	.L124
 1937              	.LBE3:
 583:main.c        ****                 }
 584:main.c        ****             }
 585:main.c        ****             break;
 1938              		.loc 1 585 0 is_stmt 1
 1939 00bc D0E0     		b	.L112
 1940              	.L151:
 1941              	.LBB4:
 576:main.c        ****                 }
 1942              		.loc 1 576 0
 1943 00be 00BF     		nop
 1944              	.LBE4:
 1945              		.loc 1 585 0
 1946 00c0 CEE0     		b	.L112
 1947              	.L115:
 1948              	.LBB5:
 586:main.c        ****         case Down:
 587:main.c        ****             // Target Column, Check Row
 588:main.c        ****             // Start from Top
 589:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1949              		.loc 1 589 0
 1950 00c2 0023     		movs	r3, #0
 1951 00c4 FB61     		str	r3, [r7, #28]
 1952 00c6 3BE0     		b	.L125
 1953              	.L131:
 590:main.c        ****                 if (map[i][targetCol] == 9) {
 1954              		.loc 1 590 0
 1955 00c8 7049     		ldr	r1, .L156+8
 1956 00ca FA69     		ldr	r2, [r7, #28]
 1957 00cc 1346     		mov	r3, r2
 1958 00ce DB00     		lsls	r3, r3, #3
 1959 00d0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 46


 1960 00d2 5B00     		lsls	r3, r3, #1
 1961 00d4 1344     		add	r3, r3, r2
 1962 00d6 FA68     		ldr	r2, [r7, #12]
 1963 00d8 1344     		add	r3, r3, r2
 1964 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1965 00de 092B     		cmp	r3, #9
 1966 00e0 32D0     		beq	.L152
 591:main.c        ****                     break;    
 592:main.c        ****                 }
 593:main.c        ****                 if (map[i][targetCol] == 8) {
 1967              		.loc 1 593 0
 1968 00e2 6A49     		ldr	r1, .L156+8
 1969 00e4 FA69     		ldr	r2, [r7, #28]
 1970 00e6 1346     		mov	r3, r2
 1971 00e8 DB00     		lsls	r3, r3, #3
 1972 00ea 1344     		add	r3, r3, r2
 1973 00ec 5B00     		lsls	r3, r3, #1
 1974 00ee 1344     		add	r3, r3, r2
 1975 00f0 FA68     		ldr	r2, [r7, #12]
 1976 00f2 1344     		add	r3, r3, r2
 1977 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1978 00f8 082B     		cmp	r3, #8
 1979 00fa 02D1     		bne	.L128
 594:main.c        ****                     pathCount++;    
 1980              		.loc 1 594 0
 1981 00fc 7B6A     		ldr	r3, [r7, #36]
 1982 00fe 0133     		adds	r3, r3, #1
 1983 0100 7B62     		str	r3, [r7, #36]
 1984              	.L128:
 595:main.c        ****                 }
 596:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1985              		.loc 1 596 0
 1986 0102 6249     		ldr	r1, .L156+8
 1987 0104 FA69     		ldr	r2, [r7, #28]
 1988 0106 1346     		mov	r3, r2
 1989 0108 DB00     		lsls	r3, r3, #3
 1990 010a 1344     		add	r3, r3, r2
 1991 010c 5B00     		lsls	r3, r3, #1
 1992 010e 1344     		add	r3, r3, r2
 1993 0110 FA68     		ldr	r2, [r7, #12]
 1994 0112 1344     		add	r3, r3, r2
 1995 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1996 0118 002B     		cmp	r3, #0
 1997 011a 0CD0     		beq	.L129
 1998              		.loc 1 596 0 is_stmt 0 discriminator 1
 1999 011c 5B49     		ldr	r1, .L156+8
 2000 011e FA69     		ldr	r2, [r7, #28]
 2001 0120 1346     		mov	r3, r2
 2002 0122 DB00     		lsls	r3, r3, #3
 2003 0124 1344     		add	r3, r3, r2
 2004 0126 5B00     		lsls	r3, r3, #1
 2005 0128 1344     		add	r3, r3, r2
 2006 012a FA68     		ldr	r2, [r7, #12]
 2007 012c 1344     		add	r3, r3, r2
 2008 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2009 0132 012B     		cmp	r3, #1
 2010 0134 01D1     		bne	.L130
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 47


 2011              	.L129:
 597:main.c        ****                     pathCount = 0;
 2012              		.loc 1 597 0 is_stmt 1
 2013 0136 0023     		movs	r3, #0
 2014 0138 7B62     		str	r3, [r7, #36]
 2015              	.L130:
 589:main.c        ****                 if (map[i][targetCol] == 9) {
 2016              		.loc 1 589 0 discriminator 2
 2017 013a FB69     		ldr	r3, [r7, #28]
 2018 013c 0133     		adds	r3, r3, #1
 2019 013e FB61     		str	r3, [r7, #28]
 2020              	.L125:
 589:main.c        ****                 if (map[i][targetCol] == 9) {
 2021              		.loc 1 589 0 is_stmt 0 discriminator 1
 2022 0140 FB69     		ldr	r3, [r7, #28]
 2023 0142 0E2B     		cmp	r3, #14
 2024 0144 C0DD     		ble	.L131
 2025              	.LBE5:
 598:main.c        ****                 }
 599:main.c        ****             }
 600:main.c        ****             break;
 2026              		.loc 1 600 0 is_stmt 1
 2027 0146 8BE0     		b	.L112
 2028              	.L152:
 2029              	.LBB6:
 591:main.c        ****                 }
 2030              		.loc 1 591 0
 2031 0148 00BF     		nop
 2032              	.LBE6:
 2033              		.loc 1 600 0
 2034 014a 89E0     		b	.L112
 2035              	.L116:
 2036              	.LBB7:
 601:main.c        ****         case Left:
 602:main.c        ****             // Target Row, Check Col
 603:main.c        ****             // Start from Right
 604:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 2037              		.loc 1 604 0
 2038 014c 1323     		movs	r3, #19
 2039 014e BB61     		str	r3, [r7, #24]
 2040 0150 3BE0     		b	.L132
 2041              	.L138:
 605:main.c        ****                 if (map[targetRow][i] == 9) {
 2042              		.loc 1 605 0
 2043 0152 4E49     		ldr	r1, .L156+8
 2044 0154 3A69     		ldr	r2, [r7, #16]
 2045 0156 1346     		mov	r3, r2
 2046 0158 DB00     		lsls	r3, r3, #3
 2047 015a 1344     		add	r3, r3, r2
 2048 015c 5B00     		lsls	r3, r3, #1
 2049 015e 1344     		add	r3, r3, r2
 2050 0160 BA69     		ldr	r2, [r7, #24]
 2051 0162 1344     		add	r3, r3, r2
 2052 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2053 0168 092B     		cmp	r3, #9
 2054 016a 32D0     		beq	.L153
 606:main.c        ****                     break;    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 48


 607:main.c        ****                 }
 608:main.c        ****                 if (map[targetRow][i] == 8) {
 2055              		.loc 1 608 0
 2056 016c 4749     		ldr	r1, .L156+8
 2057 016e 3A69     		ldr	r2, [r7, #16]
 2058 0170 1346     		mov	r3, r2
 2059 0172 DB00     		lsls	r3, r3, #3
 2060 0174 1344     		add	r3, r3, r2
 2061 0176 5B00     		lsls	r3, r3, #1
 2062 0178 1344     		add	r3, r3, r2
 2063 017a BA69     		ldr	r2, [r7, #24]
 2064 017c 1344     		add	r3, r3, r2
 2065 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2066 0182 082B     		cmp	r3, #8
 2067 0184 02D1     		bne	.L135
 609:main.c        ****                     pathCount++;    
 2068              		.loc 1 609 0
 2069 0186 7B6A     		ldr	r3, [r7, #36]
 2070 0188 0133     		adds	r3, r3, #1
 2071 018a 7B62     		str	r3, [r7, #36]
 2072              	.L135:
 610:main.c        ****                 }
 611:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2073              		.loc 1 611 0
 2074 018c 3F49     		ldr	r1, .L156+8
 2075 018e 3A69     		ldr	r2, [r7, #16]
 2076 0190 1346     		mov	r3, r2
 2077 0192 DB00     		lsls	r3, r3, #3
 2078 0194 1344     		add	r3, r3, r2
 2079 0196 5B00     		lsls	r3, r3, #1
 2080 0198 1344     		add	r3, r3, r2
 2081 019a BA69     		ldr	r2, [r7, #24]
 2082 019c 1344     		add	r3, r3, r2
 2083 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2084 01a2 002B     		cmp	r3, #0
 2085 01a4 0CD0     		beq	.L136
 2086              		.loc 1 611 0 is_stmt 0 discriminator 1
 2087 01a6 3949     		ldr	r1, .L156+8
 2088 01a8 BA69     		ldr	r2, [r7, #24]
 2089 01aa 1346     		mov	r3, r2
 2090 01ac DB00     		lsls	r3, r3, #3
 2091 01ae 1344     		add	r3, r3, r2
 2092 01b0 5B00     		lsls	r3, r3, #1
 2093 01b2 1344     		add	r3, r3, r2
 2094 01b4 FA68     		ldr	r2, [r7, #12]
 2095 01b6 1344     		add	r3, r3, r2
 2096 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2097 01bc 012B     		cmp	r3, #1
 2098 01be 01D1     		bne	.L137
 2099              	.L136:
 612:main.c        ****                     pathCount = 0;
 2100              		.loc 1 612 0 is_stmt 1
 2101 01c0 0023     		movs	r3, #0
 2102 01c2 7B62     		str	r3, [r7, #36]
 2103              	.L137:
 604:main.c        ****                 if (map[targetRow][i] == 9) {
 2104              		.loc 1 604 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 49


 2105 01c4 BB69     		ldr	r3, [r7, #24]
 2106 01c6 013B     		subs	r3, r3, #1
 2107 01c8 BB61     		str	r3, [r7, #24]
 2108              	.L132:
 604:main.c        ****                 if (map[targetRow][i] == 9) {
 2109              		.loc 1 604 0 is_stmt 0 discriminator 1
 2110 01ca BB69     		ldr	r3, [r7, #24]
 2111 01cc 002B     		cmp	r3, #0
 2112 01ce C0DA     		bge	.L138
 2113              	.LBE7:
 613:main.c        ****                 }
 614:main.c        ****             }
 615:main.c        ****             break;
 2114              		.loc 1 615 0 is_stmt 1
 2115 01d0 46E0     		b	.L112
 2116              	.L153:
 2117              	.LBB8:
 606:main.c        ****                 }
 2118              		.loc 1 606 0
 2119 01d2 00BF     		nop
 2120              	.LBE8:
 2121              		.loc 1 615 0
 2122 01d4 44E0     		b	.L112
 2123              	.L117:
 2124              	.LBB9:
 616:main.c        ****         
 617:main.c        ****         case Right:
 618:main.c        ****             // Target Row, Check Col
 619:main.c        ****             // Start from Left
 620:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 2125              		.loc 1 620 0
 2126 01d6 0023     		movs	r3, #0
 2127 01d8 7B61     		str	r3, [r7, #20]
 2128 01da 3BE0     		b	.L139
 2129              	.L145:
 621:main.c        ****                 if (map[targetRow][i] == 9) {
 2130              		.loc 1 621 0
 2131 01dc 2B49     		ldr	r1, .L156+8
 2132 01de 3A69     		ldr	r2, [r7, #16]
 2133 01e0 1346     		mov	r3, r2
 2134 01e2 DB00     		lsls	r3, r3, #3
 2135 01e4 1344     		add	r3, r3, r2
 2136 01e6 5B00     		lsls	r3, r3, #1
 2137 01e8 1344     		add	r3, r3, r2
 2138 01ea 7A69     		ldr	r2, [r7, #20]
 2139 01ec 1344     		add	r3, r3, r2
 2140 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2141 01f2 092B     		cmp	r3, #9
 2142 01f4 32D0     		beq	.L154
 622:main.c        ****                     break;    
 623:main.c        ****                 }
 624:main.c        ****                 if (map[targetRow][i] == 8) {
 2143              		.loc 1 624 0
 2144 01f6 2549     		ldr	r1, .L156+8
 2145 01f8 3A69     		ldr	r2, [r7, #16]
 2146 01fa 1346     		mov	r3, r2
 2147 01fc DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 50


 2148 01fe 1344     		add	r3, r3, r2
 2149 0200 5B00     		lsls	r3, r3, #1
 2150 0202 1344     		add	r3, r3, r2
 2151 0204 7A69     		ldr	r2, [r7, #20]
 2152 0206 1344     		add	r3, r3, r2
 2153 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2154 020c 082B     		cmp	r3, #8
 2155 020e 02D1     		bne	.L142
 625:main.c        ****                     pathCount++;    
 2156              		.loc 1 625 0
 2157 0210 7B6A     		ldr	r3, [r7, #36]
 2158 0212 0133     		adds	r3, r3, #1
 2159 0214 7B62     		str	r3, [r7, #36]
 2160              	.L142:
 626:main.c        ****                 }
 627:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2161              		.loc 1 627 0
 2162 0216 1D49     		ldr	r1, .L156+8
 2163 0218 3A69     		ldr	r2, [r7, #16]
 2164 021a 1346     		mov	r3, r2
 2165 021c DB00     		lsls	r3, r3, #3
 2166 021e 1344     		add	r3, r3, r2
 2167 0220 5B00     		lsls	r3, r3, #1
 2168 0222 1344     		add	r3, r3, r2
 2169 0224 7A69     		ldr	r2, [r7, #20]
 2170 0226 1344     		add	r3, r3, r2
 2171 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2172 022c 002B     		cmp	r3, #0
 2173 022e 0CD0     		beq	.L143
 2174              		.loc 1 627 0 is_stmt 0 discriminator 1
 2175 0230 1649     		ldr	r1, .L156+8
 2176 0232 7A69     		ldr	r2, [r7, #20]
 2177 0234 1346     		mov	r3, r2
 2178 0236 DB00     		lsls	r3, r3, #3
 2179 0238 1344     		add	r3, r3, r2
 2180 023a 5B00     		lsls	r3, r3, #1
 2181 023c 1344     		add	r3, r3, r2
 2182 023e FA68     		ldr	r2, [r7, #12]
 2183 0240 1344     		add	r3, r3, r2
 2184 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2185 0246 012B     		cmp	r3, #1
 2186 0248 01D1     		bne	.L144
 2187              	.L143:
 628:main.c        ****                     pathCount = 0;
 2188              		.loc 1 628 0 is_stmt 1
 2189 024a 0023     		movs	r3, #0
 2190 024c 7B62     		str	r3, [r7, #36]
 2191              	.L144:
 620:main.c        ****                 if (map[targetRow][i] == 9) {
 2192              		.loc 1 620 0 discriminator 2
 2193 024e 7B69     		ldr	r3, [r7, #20]
 2194 0250 0133     		adds	r3, r3, #1
 2195 0252 7B61     		str	r3, [r7, #20]
 2196              	.L139:
 620:main.c        ****                 if (map[targetRow][i] == 9) {
 2197              		.loc 1 620 0 is_stmt 0 discriminator 1
 2198 0254 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 51


 2199 0256 122B     		cmp	r3, #18
 2200 0258 C0DD     		ble	.L145
 2201              	.LBE9:
 629:main.c        ****                 }
 630:main.c        **** 
 631:main.c        ****             }
 632:main.c        ****             break;
 2202              		.loc 1 632 0 is_stmt 1
 2203 025a 00E0     		b	.L155
 2204              	.L154:
 2205              	.LBB10:
 622:main.c        ****                 }
 2206              		.loc 1 622 0
 2207 025c 00BF     		nop
 2208              	.L155:
 2209              	.LBE10:
 2210              		.loc 1 632 0
 2211 025e 00BF     		nop
 2212              	.L112:
 633:main.c        ****     }
 634:main.c        ****     totalBlockSize = blockSize * pathCount;
 2213              		.loc 1 634 0
 2214 0260 786A     		ldr	r0, [r7, #36]
 2215 0262 FFF7FEFF 		bl	__aeabi_i2f
 2216 0266 0346     		mov	r3, r0
 2217 0268 7968     		ldr	r1, [r7, #4]	@ float
 2218 026a 1846     		mov	r0, r3
 2219 026c FFF7FEFF 		bl	__aeabi_fmul
 2220 0270 0346     		mov	r3, r0
 2221 0272 BB60     		str	r3, [r7, #8]	@ float
 635:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 2222              		.loc 1 635 0
 2223 0274 0548     		ldr	r0, .L156+8
 2224 0276 FFF7FEFF 		bl	clearMap
 636:main.c        ****     return totalBlockSize;
 2225              		.loc 1 636 0
 2226 027a BB68     		ldr	r3, [r7, #8]	@ float
 637:main.c        **** }
 2227              		.loc 1 637 0
 2228 027c 1846     		mov	r0, r3
 2229 027e 2837     		adds	r7, r7, #40
 2230              		.cfi_def_cfa_offset 8
 2231 0280 BD46     		mov	sp, r7
 2232              		.cfi_def_cfa_register 13
 2233              		@ sp needed
 2234 0282 80BD     		pop	{r7, pc}
 2235              	.L157:
 2236              		.align	2
 2237              	.L156:
 2238 0284 00000000 		.word	food_list
 2239 0288 00000000 		.word	currentRobotOrientation
 2240 028c 00000000 		.word	map
 2241              		.cfi_endproc
 2242              	.LFE76:
 2243              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 2244              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2245              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 52


 2246              		.global	MoveToNextInstruction
 2247              		.thumb
 2248              		.thumb_func
 2249              		.type	MoveToNextInstruction, %function
 2250              	MoveToNextInstruction:
 2251              	.LFB77:
 638:main.c        **** 
 639:main.c        **** // get next instruction
 640:main.c        **** void MoveToNextInstruction() {
 2252              		.loc 1 640 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256              		@ link register save eliminated.
 2257 0000 80B4     		push	{r7}
 2258              		.cfi_def_cfa_offset 4
 2259              		.cfi_offset 7, -4
 2260 0002 00AF     		add	r7, sp, #0
 2261              		.cfi_def_cfa_register 7
 641:main.c        ****     currentIgnoreL = 0;
 2262              		.loc 1 641 0
 2263 0004 144B     		ldr	r3, .L159
 2264 0006 0022     		movs	r2, #0
 2265 0008 1A70     		strb	r2, [r3]
 642:main.c        ****     currentIgnoreR = 0;
 2266              		.loc 1 642 0
 2267 000a 144B     		ldr	r3, .L159+4
 2268 000c 0022     		movs	r2, #0
 2269 000e 1A70     		strb	r2, [r3]
 643:main.c        ****     instructionIndex++;
 2270              		.loc 1 643 0
 2271 0010 134B     		ldr	r3, .L159+8
 2272 0012 1B68     		ldr	r3, [r3]
 2273 0014 0133     		adds	r3, r3, #1
 2274 0016 124A     		ldr	r2, .L159+8
 2275 0018 1360     		str	r3, [r2]
 644:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2276              		.loc 1 644 0
 2277 001a 124B     		ldr	r3, .L159+12
 2278 001c 1968     		ldr	r1, [r3]
 2279 001e 104B     		ldr	r3, .L159+8
 2280 0020 1A68     		ldr	r2, [r3]
 2281 0022 1346     		mov	r3, r2
 2282 0024 9B00     		lsls	r3, r3, #2
 2283 0026 1344     		add	r3, r3, r2
 2284 0028 9B00     		lsls	r3, r3, #2
 2285 002a 0B44     		add	r3, r3, r1
 2286 002c 5B68     		ldr	r3, [r3, #4]
 2287 002e DAB2     		uxtb	r2, r3
 2288 0030 094B     		ldr	r3, .L159
 2289 0032 1A70     		strb	r2, [r3]
 645:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2290              		.loc 1 645 0
 2291 0034 0B4B     		ldr	r3, .L159+12
 2292 0036 1968     		ldr	r1, [r3]
 2293 0038 094B     		ldr	r3, .L159+8
 2294 003a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 53


 2295 003c 1346     		mov	r3, r2
 2296 003e 9B00     		lsls	r3, r3, #2
 2297 0040 1344     		add	r3, r3, r2
 2298 0042 9B00     		lsls	r3, r3, #2
 2299 0044 0B44     		add	r3, r3, r1
 2300 0046 9B68     		ldr	r3, [r3, #8]
 2301 0048 DAB2     		uxtb	r2, r3
 2302 004a 044B     		ldr	r3, .L159+4
 2303 004c 1A70     		strb	r2, [r3]
 646:main.c        ****     /*for (int i = instructionIndex; i < numSteps; i++) {
 647:main.c        ****         if (instructionList[i].direction != Skip) {
 648:main.c        ****             instructionIndex = i;             
 649:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 650:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 651:main.c        ****             break;
 652:main.c        ****         }
 653:main.c        ****     }*/
 654:main.c        ****     
 655:main.c        ****     
 656:main.c        **** }
 2304              		.loc 1 656 0
 2305 004e 00BF     		nop
 2306 0050 BD46     		mov	sp, r7
 2307              		.cfi_def_cfa_register 13
 2308              		@ sp needed
 2309 0052 80BC     		pop	{r7}
 2310              		.cfi_restore 7
 2311              		.cfi_def_cfa_offset 0
 2312 0054 7047     		bx	lr
 2313              	.L160:
 2314 0056 00BF     		.align	2
 2315              	.L159:
 2316 0058 3C000000 		.word	currentIgnoreL
 2317 005c 45000000 		.word	currentIgnoreR
 2318 0060 14000000 		.word	instructionIndex
 2319 0064 00000000 		.word	instructionList
 2320              		.cfi_endproc
 2321              	.LFE77:
 2322              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2323              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2324              		.align	2
 2325              		.global	GetInstructionAtIndex
 2326              		.thumb
 2327              		.thumb_func
 2328              		.type	GetInstructionAtIndex, %function
 2329              	GetInstructionAtIndex:
 2330              	.LFB78:
 657:main.c        **** 
 658:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]) {
 2331              		.loc 1 658 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 40
 2334              		@ frame_needed = 1, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
 2336 0000 B0B4     		push	{r4, r5, r7}
 2337              		.cfi_def_cfa_offset 12
 2338              		.cfi_offset 4, -12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 54


 2339              		.cfi_offset 5, -8
 2340              		.cfi_offset 7, -4
 2341 0002 8BB0     		sub	sp, sp, #44
 2342              		.cfi_def_cfa_offset 56
 2343 0004 00AF     		add	r7, sp, #0
 2344              		.cfi_def_cfa_register 7
 2345 0006 F860     		str	r0, [r7, #12]
 2346 0008 B960     		str	r1, [r7, #8]
 2347 000a 7A60     		str	r2, [r7, #4]
 659:main.c        ****     Instruction nextInstruction;
 660:main.c        ****     // input is list of instructions and robot will react accordingly
 661:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2348              		.loc 1 661 0
 2349 000c 114B     		ldr	r3, .L163
 2350 000e 1A68     		ldr	r2, [r3]
 2351 0010 1346     		mov	r3, r2
 2352 0012 9B00     		lsls	r3, r3, #2
 2353 0014 1344     		add	r3, r3, r2
 2354 0016 9B00     		lsls	r3, r3, #2
 2355 0018 1A46     		mov	r2, r3
 2356 001a 7B68     		ldr	r3, [r7, #4]
 2357 001c 1344     		add	r3, r3, r2
 2358 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 0020 3B75     		strb	r3, [r7, #20]
 662:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2360              		.loc 1 662 0
 2361 0022 0C4B     		ldr	r3, .L163
 2362 0024 1A68     		ldr	r2, [r3]
 2363 0026 1346     		mov	r3, r2
 2364 0028 9B00     		lsls	r3, r3, #2
 2365 002a 1344     		add	r3, r3, r2
 2366 002c 9B00     		lsls	r3, r3, #2
 2367 002e 1A46     		mov	r2, r3
 2368 0030 7B68     		ldr	r3, [r7, #4]
 2369 0032 1344     		add	r3, r3, r2
 2370 0034 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2371 0036 87F82430 		strb	r3, [r7, #36]
 663:main.c        ****     
 664:main.c        ****     /*
 665:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 666:main.c        ****         if(instructionList[i].direction != Skip) {
 667:main.c        ****             nextInstruction.direction = instructionList[i].direction;        
 668:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 669:main.c        ****             instructionIndex = i;
 670:main.c        ****             return nextInstruction; // return next instruction
 671:main.c        ****         }
 672:main.c        ****     }*/
 673:main.c        ****     return nextInstruction;
 2372              		.loc 1 673 0
 2373 003a FB68     		ldr	r3, [r7, #12]
 2374 003c 1D46     		mov	r5, r3
 2375 003e 07F11404 		add	r4, r7, #20
 2376 0042 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2377 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2378 0046 2368     		ldr	r3, [r4]
 2379 0048 2B60     		str	r3, [r5]
 674:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 55


 2380              		.loc 1 674 0
 2381 004a F868     		ldr	r0, [r7, #12]
 2382 004c 2C37     		adds	r7, r7, #44
 2383              		.cfi_def_cfa_offset 12
 2384 004e BD46     		mov	sp, r7
 2385              		.cfi_def_cfa_register 13
 2386              		@ sp needed
 2387 0050 B0BC     		pop	{r4, r5, r7}
 2388              		.cfi_restore 7
 2389              		.cfi_restore 5
 2390              		.cfi_restore 4
 2391              		.cfi_def_cfa_offset 0
 2392 0052 7047     		bx	lr
 2393              	.L164:
 2394              		.align	2
 2395              	.L163:
 2396 0054 14000000 		.word	instructionIndex
 2397              		.cfi_endproc
 2398              	.LFE78:
 2399              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2400              		.section	.text.SetRobotMovement,"ax",%progbits
 2401              		.align	2
 2402              		.global	SetRobotMovement
 2403              		.thumb
 2404              		.thumb_func
 2405              		.type	SetRobotMovement, %function
 2406              	SetRobotMovement:
 2407              	.LFB79:
 675:main.c        **** 
 676:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 677:main.c        **** void SetRobotMovement() {
 2408              		.loc 1 677 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 24
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412 0000 B0B5     		push	{r4, r5, r7, lr}
 2413              		.cfi_def_cfa_offset 16
 2414              		.cfi_offset 4, -16
 2415              		.cfi_offset 5, -12
 2416              		.cfi_offset 7, -8
 2417              		.cfi_offset 14, -4
 2418 0002 86B0     		sub	sp, sp, #24
 2419              		.cfi_def_cfa_offset 40
 2420 0004 00AF     		add	r7, sp, #0
 2421              		.cfi_def_cfa_register 7
 678:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList); // get current/ next ins
 2422              		.loc 1 678 0
 2423 0006 2B4B     		ldr	r3, .L181
 2424 0008 1968     		ldr	r1, [r3]
 2425 000a 2B4B     		ldr	r3, .L181+4
 2426 000c 1A68     		ldr	r2, [r3]
 2427 000e 2B4C     		ldr	r4, .L181+8
 2428 0010 3B46     		mov	r3, r7
 2429 0012 1846     		mov	r0, r3
 2430 0014 FFF7FEFF 		bl	GetInstructionAtIndex
 2431 0018 2546     		mov	r5, r4
 2432 001a 3C46     		mov	r4, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 56


 2433 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2434 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2435 0020 2368     		ldr	r3, [r4]
 2436 0022 2B60     		str	r3, [r5]
 679:main.c        ****     previousDirection = currentDirection;
 2437              		.loc 1 679 0
 2438 0024 264B     		ldr	r3, .L181+12
 2439 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2440 0028 264B     		ldr	r3, .L181+16
 2441 002a 1A70     		strb	r2, [r3]
 680:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2442              		.loc 1 680 0
 2443 002c FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2444 0030 0346     		mov	r3, r0
 2445 0032 1A46     		mov	r2, r3
 2446 0034 224B     		ldr	r3, .L181+12
 2447 0036 1A70     		strb	r2, [r3]
 681:main.c        ****     // move robot depending on sensors
 682:main.c        ****     switch (currentDirection) {
 2448              		.loc 1 682 0
 2449 0038 214B     		ldr	r3, .L181+12
 2450 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 003c 0A2B     		cmp	r3, #10
 2452 003e 35D8     		bhi	.L179
 2453 0040 01A2     		adr	r2, .L168
 2454 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2455 0046 00BF     		.p2align 2
 2456              	.L168:
 2457 0048 75000000 		.word	.L167+1
 2458 004c 7B000000 		.word	.L169+1
 2459 0050 81000000 		.word	.L170+1
 2460 0054 8D000000 		.word	.L171+1
 2461 0058 87000000 		.word	.L172+1
 2462 005c 93000000 		.word	.L173+1
 2463 0060 AB000000 		.word	.L180+1
 2464 0064 AB000000 		.word	.L180+1
 2465 0068 99000000 		.word	.L176+1
 2466 006c 9F000000 		.word	.L177+1
 2467 0070 A5000000 		.word	.L178+1
 2468              		.p2align 1
 2469              	.L167:
 683:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 684:main.c        ****         case Forward:
 685:main.c        ****             moveForward();
 2470              		.loc 1 685 0
 2471 0074 FFF7FEFF 		bl	moveForward
 686:main.c        ****             break;
 2472              		.loc 1 686 0
 2473 0078 18E0     		b	.L166
 2474              	.L169:
 687:main.c        ****         case TurnRight:
 688:main.c        ****             turnRight();
 2475              		.loc 1 688 0
 2476 007a FFF7FEFF 		bl	turnRight
 689:main.c        ****             break;
 2477              		.loc 1 689 0
 2478 007e 15E0     		b	.L166
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 57


 2479              	.L170:
 690:main.c        ****         case TurnLeft:
 691:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2480              		.loc 1 691 0
 2481 0080 FFF7FEFF 		bl	turnLeft
 692:main.c        ****             break;
 2482              		.loc 1 692 0
 2483 0084 12E0     		b	.L166
 2484              	.L172:
 693:main.c        ****         case AdjustToTheRight:
 694:main.c        ****             adjustRight();
 2485              		.loc 1 694 0
 2486 0086 FFF7FEFF 		bl	adjustRight
 695:main.c        ****             break;
 2487              		.loc 1 695 0
 2488 008a 0FE0     		b	.L166
 2489              	.L171:
 696:main.c        ****         case AdjustToTheLeft:
 697:main.c        ****             adjustLeft();
 2490              		.loc 1 697 0
 2491 008c FFF7FEFF 		bl	adjustLeft
 698:main.c        ****             break;
 2492              		.loc 1 698 0
 2493 0090 0CE0     		b	.L166
 2494              	.L173:
 699:main.c        ****         case Stop:
 700:main.c        ****             stopMoving();
 2495              		.loc 1 700 0
 2496 0092 FFF7FEFF 		bl	stopMoving
 701:main.c        ****             break;
 2497              		.loc 1 701 0
 2498 0096 09E0     		b	.L166
 2499              	.L176:
 702:main.c        ****         case ForwardAfterTurn:
 703:main.c        ****             moveForward();
 2500              		.loc 1 703 0
 2501 0098 FFF7FEFF 		bl	moveForward
 704:main.c        ****             break;
 2502              		.loc 1 704 0
 2503 009c 06E0     		b	.L166
 2504              	.L177:
 705:main.c        ****         case Backward:
 706:main.c        ****             moveBackward();
 2505              		.loc 1 706 0
 2506 009e FFF7FEFF 		bl	moveBackward
 707:main.c        ****             break;
 2507              		.loc 1 707 0
 2508 00a2 03E0     		b	.L166
 2509              	.L178:
 708:main.c        ****         case waitForTurn:
 709:main.c        ****             break;
 710:main.c        ****         case Spin180:
 711:main.c        ****             RotateClockwise180Degrees();
 2510              		.loc 1 711 0
 2511 00a4 FFF7FEFF 		bl	RotateClockwise180Degrees
 712:main.c        ****             break;
 2512              		.loc 1 712 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 58


 2513 00a8 00E0     		b	.L166
 2514              	.L180:
 713:main.c        ****         /*case waitForLeftTurn:
 714:main.c        ****             moveForward();
 715:main.c        ****             break;
 716:main.c        ****         case waitForRightTurn:
 717:main.c        ****             moveForward();
 718:main.c        ****             break;*/
 719:main.c        ****         case Unknown:
 720:main.c        ****             // UNKNOWN CONFIGURATION
 721:main.c        ****             break;  
 2515              		.loc 1 721 0
 2516 00aa 00BF     		nop
 2517              	.L166:
 2518              	.L179:
 722:main.c        ****     }
 723:main.c        **** }...
 2519              		.loc 1 723 0
 2520 00ac 00BF     		nop
 2521 00ae 1837     		adds	r7, r7, #24
 2522              		.cfi_def_cfa_offset 16
 2523 00b0 BD46     		mov	sp, r7
 2524              		.cfi_def_cfa_register 13
 2525              		@ sp needed
 2526 00b2 B0BD     		pop	{r4, r5, r7, pc}
 2527              	.L182:
 2528              		.align	2
 2529              	.L181:
 2530 00b4 00000000 		.word	numSteps
 2531 00b8 00000000 		.word	instructionList
 2532 00bc 00000000 		.word	currentInstruction
 2533 00c0 00000000 		.word	currentDirection
 2534 00c4 00000000 		.word	previousDirection
 2535              		.cfi_endproc
 2536              	.LFE79:
 2537              		.size	SetRobotMovement, .-SetRobotMovement
 2538              		.text
 2539              	.Letext0:
 2540              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2541              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2542              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2543              		.file 5 "vars.h"
 2544              		.file 6 "pathfinding.h"
 2545              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2546              		.file 8 "map.h"
 2547              		.section	.debug_info,"",%progbits
 2548              	.Ldebug_info0:
 2549 0000 A1090000 		.4byte	0x9a1
 2550 0004 0400     		.2byte	0x4
 2551 0006 00000000 		.4byte	.Ldebug_abbrev0
 2552 000a 04       		.byte	0x4
 2553 000b 01       		.uleb128 0x1
 2554 000c A2000000 		.4byte	.LASF149
 2555 0010 0C       		.byte	0xc
 2556 0011 30000000 		.4byte	.LASF150
 2557 0015 8C030000 		.4byte	.LASF151
 2558 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 59


 2559 001d 00000000 		.4byte	0
 2560 0021 00000000 		.4byte	.Ldebug_line0
 2561 0025 02       		.uleb128 0x2
 2562 0026 01       		.byte	0x1
 2563 0027 06       		.byte	0x6
 2564 0028 A4070000 		.4byte	.LASF0
 2565 002c 02       		.uleb128 0x2
 2566 002d 01       		.byte	0x1
 2567 002e 08       		.byte	0x8
 2568 002f DC060000 		.4byte	.LASF1
 2569 0033 02       		.uleb128 0x2
 2570 0034 02       		.byte	0x2
 2571 0035 05       		.byte	0x5
 2572 0036 B3050000 		.4byte	.LASF2
 2573 003a 02       		.uleb128 0x2
 2574 003b 02       		.byte	0x2
 2575 003c 07       		.byte	0x7
 2576 003d BB070000 		.4byte	.LASF3
 2577 0041 03       		.uleb128 0x3
 2578 0042 75000000 		.4byte	.LASF12
 2579 0046 02       		.byte	0x2
 2580 0047 3F       		.byte	0x3f
 2581 0048 4C000000 		.4byte	0x4c
 2582 004c 02       		.uleb128 0x2
 2583 004d 04       		.byte	0x4
 2584 004e 05       		.byte	0x5
 2585 004f C9050000 		.4byte	.LASF4
 2586 0053 02       		.uleb128 0x2
 2587 0054 04       		.byte	0x4
 2588 0055 07       		.byte	0x7
 2589 0056 86060000 		.4byte	.LASF5
 2590 005a 02       		.uleb128 0x2
 2591 005b 08       		.byte	0x8
 2592 005c 05       		.byte	0x5
 2593 005d 6D040000 		.4byte	.LASF6
 2594 0061 02       		.uleb128 0x2
 2595 0062 08       		.byte	0x8
 2596 0063 07       		.byte	0x7
 2597 0064 AC020000 		.4byte	.LASF7
 2598 0068 04       		.uleb128 0x4
 2599 0069 04       		.byte	0x4
 2600 006a 05       		.byte	0x5
 2601 006b 696E7400 		.ascii	"int\000"
 2602 006f 02       		.uleb128 0x2
 2603 0070 04       		.byte	0x4
 2604 0071 07       		.byte	0x7
 2605 0072 68000000 		.4byte	.LASF8
 2606 0076 02       		.uleb128 0x2
 2607 0077 08       		.byte	0x8
 2608 0078 04       		.byte	0x4
 2609 0079 77050000 		.4byte	.LASF9
 2610 007d 02       		.uleb128 0x2
 2611 007e 04       		.byte	0x4
 2612 007f 07       		.byte	0x7
 2613 0080 7D060000 		.4byte	.LASF10
 2614 0084 02       		.uleb128 0x2
 2615 0085 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 60


 2616 0086 08       		.byte	0x8
 2617 0087 87030000 		.4byte	.LASF11
 2618 008b 03       		.uleb128 0x3
 2619 008c B5060000 		.4byte	.LASF13
 2620 0090 03       		.byte	0x3
 2621 0091 2C       		.byte	0x2c
 2622 0092 41000000 		.4byte	0x41
 2623 0096 05       		.uleb128 0x5
 2624 0097 11080000 		.4byte	.LASF14
 2625 009b 04       		.byte	0x4
 2626 009c E701     		.2byte	0x1e7
 2627 009e 2C000000 		.4byte	0x2c
 2628 00a2 05       		.uleb128 0x5
 2629 00a3 07040000 		.4byte	.LASF15
 2630 00a7 04       		.byte	0x4
 2631 00a8 E801     		.2byte	0x1e8
 2632 00aa 3A000000 		.4byte	0x3a
 2633 00ae 05       		.uleb128 0x5
 2634 00af 1F050000 		.4byte	.LASF16
 2635 00b3 04       		.byte	0x4
 2636 00b4 E901     		.2byte	0x1e9
 2637 00b6 53000000 		.4byte	0x53
 2638 00ba 05       		.uleb128 0x5
 2639 00bb 0E040000 		.4byte	.LASF17
 2640 00bf 04       		.byte	0x4
 2641 00c0 EA01     		.2byte	0x1ea
 2642 00c2 25000000 		.4byte	0x25
 2643 00c6 05       		.uleb128 0x5
 2644 00c7 7F000000 		.4byte	.LASF18
 2645 00cb 04       		.byte	0x4
 2646 00cc EB01     		.2byte	0x1eb
 2647 00ce 33000000 		.4byte	0x33
 2648 00d2 02       		.uleb128 0x2
 2649 00d3 04       		.byte	0x4
 2650 00d4 04       		.byte	0x4
 2651 00d5 74020000 		.4byte	.LASF19
 2652 00d9 02       		.uleb128 0x2
 2653 00da 08       		.byte	0x8
 2654 00db 04       		.byte	0x4
 2655 00dc 17080000 		.4byte	.LASF20
 2656 00e0 06       		.uleb128 0x6
 2657 00e1 96000000 		.4byte	0x96
 2658 00e5 06       		.uleb128 0x6
 2659 00e6 AE000000 		.4byte	0xae
 2660 00ea 07       		.uleb128 0x7
 2661 00eb 96000000 		.4byte	0x96
 2662 00ef FA000000 		.4byte	0xfa
 2663 00f3 08       		.uleb128 0x8
 2664 00f4 7D000000 		.4byte	0x7d
 2665 00f8 03       		.byte	0x3
 2666 00f9 00       		.byte	0
 2667 00fa 09       		.uleb128 0x9
 2668 00fb 41050000 		.4byte	.LASF50
 2669 00ff 20       		.byte	0x20
 2670 0100 05       		.byte	0x5
 2671 0101 28       		.byte	0x28
 2672 0102 D3010000 		.4byte	0x1d3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 61


 2673 0106 0A       		.uleb128 0xa
 2674 0107 4B050000 		.4byte	.LASF21
 2675 010b 05       		.byte	0x5
 2676 010c 2A       		.byte	0x2a
 2677 010d BA000000 		.4byte	0xba
 2678 0111 00       		.byte	0
 2679 0112 0A       		.uleb128 0xa
 2680 0113 A6020000 		.4byte	.LASF22
 2681 0117 05       		.byte	0x5
 2682 0118 2B       		.byte	0x2b
 2683 0119 96000000 		.4byte	0x96
 2684 011d 01       		.byte	0x1
 2685 011e 0A       		.uleb128 0xa
 2686 011f BD060000 		.4byte	.LASF23
 2687 0123 05       		.byte	0x5
 2688 0124 2C       		.byte	0x2c
 2689 0125 C6000000 		.4byte	0xc6
 2690 0129 02       		.byte	0x2
 2691 012a 0A       		.uleb128 0xa
 2692 012b 71030000 		.4byte	.LASF24
 2693 012f 05       		.byte	0x5
 2694 0130 2D       		.byte	0x2d
 2695 0131 C6000000 		.4byte	0xc6
 2696 0135 04       		.byte	0x4
 2697 0136 0A       		.uleb128 0xa
 2698 0137 CE070000 		.4byte	.LASF25
 2699 013b 05       		.byte	0x5
 2700 013c 2E       		.byte	0x2e
 2701 013d C6000000 		.4byte	0xc6
 2702 0141 06       		.byte	0x6
 2703 0142 0A       		.uleb128 0xa
 2704 0143 38080000 		.4byte	.LASF26
 2705 0147 05       		.byte	0x5
 2706 0148 2F       		.byte	0x2f
 2707 0149 C6000000 		.4byte	0xc6
 2708 014d 08       		.byte	0x8
 2709 014e 0A       		.uleb128 0xa
 2710 014f DD040000 		.4byte	.LASF27
 2711 0153 05       		.byte	0x5
 2712 0154 30       		.byte	0x30
 2713 0155 C6000000 		.4byte	0xc6
 2714 0159 0A       		.byte	0xa
 2715 015a 0A       		.uleb128 0xa
 2716 015b DD030000 		.4byte	.LASF28
 2717 015f 05       		.byte	0x5
 2718 0160 31       		.byte	0x31
 2719 0161 C6000000 		.4byte	0xc6
 2720 0165 0C       		.byte	0xc
 2721 0166 0A       		.uleb128 0xa
 2722 0167 50050000 		.4byte	.LASF29
 2723 016b 05       		.byte	0x5
 2724 016c 32       		.byte	0x32
 2725 016d C6000000 		.4byte	0xc6
 2726 0171 0E       		.byte	0xe
 2727 0172 0A       		.uleb128 0xa
 2728 0173 7B040000 		.4byte	.LASF30
 2729 0177 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 62


 2730 0178 33       		.byte	0x33
 2731 0179 C6000000 		.4byte	0xc6
 2732 017d 10       		.byte	0x10
 2733 017e 0A       		.uleb128 0xa
 2734 017f 3D060000 		.4byte	.LASF31
 2735 0183 05       		.byte	0x5
 2736 0184 34       		.byte	0x34
 2737 0185 C6000000 		.4byte	0xc6
 2738 0189 12       		.byte	0x12
 2739 018a 0A       		.uleb128 0xa
 2740 018b 58080000 		.4byte	.LASF32
 2741 018f 05       		.byte	0x5
 2742 0190 35       		.byte	0x35
 2743 0191 C6000000 		.4byte	0xc6
 2744 0195 14       		.byte	0x14
 2745 0196 0A       		.uleb128 0xa
 2746 0197 1E040000 		.4byte	.LASF33
 2747 019b 05       		.byte	0x5
 2748 019c 36       		.byte	0x36
 2749 019d C6000000 		.4byte	0xc6
 2750 01a1 16       		.byte	0x16
 2751 01a2 0A       		.uleb128 0xa
 2752 01a3 86010000 		.4byte	.LASF34
 2753 01a7 05       		.byte	0x5
 2754 01a8 37       		.byte	0x37
 2755 01a9 C6000000 		.4byte	0xc6
 2756 01ad 18       		.byte	0x18
 2757 01ae 0A       		.uleb128 0xa
 2758 01af 03060000 		.4byte	.LASF35
 2759 01b3 05       		.byte	0x5
 2760 01b4 38       		.byte	0x38
 2761 01b5 C6000000 		.4byte	0xc6
 2762 01b9 1A       		.byte	0x1a
 2763 01ba 0A       		.uleb128 0xa
 2764 01bb D4040000 		.4byte	.LASF36
 2765 01bf 05       		.byte	0x5
 2766 01c0 39       		.byte	0x39
 2767 01c1 C6000000 		.4byte	0xc6
 2768 01c5 1C       		.byte	0x1c
 2769 01c6 0A       		.uleb128 0xa
 2770 01c7 4F020000 		.4byte	.LASF37
 2771 01cb 05       		.byte	0x5
 2772 01cc 3A       		.byte	0x3a
 2773 01cd C6000000 		.4byte	0xc6
 2774 01d1 1E       		.byte	0x1e
 2775 01d2 00       		.byte	0
 2776 01d3 0B       		.uleb128 0xb
 2777 01d4 21060000 		.4byte	.LASF41
 2778 01d8 01       		.byte	0x1
 2779 01d9 2C000000 		.4byte	0x2c
 2780 01dd 06       		.byte	0x6
 2781 01de 0D       		.byte	0xd
 2782 01df FB010000 		.4byte	0x1fb
 2783 01e3 0C       		.uleb128 0xc
 2784 01e4 557000   		.ascii	"Up\000"
 2785 01e7 00       		.byte	0
 2786 01e8 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 63


 2787 01e9 32060000 		.4byte	.LASF38
 2788 01ed 01       		.byte	0x1
 2789 01ee 0D       		.uleb128 0xd
 2790 01ef 03030000 		.4byte	.LASF39
 2791 01f3 02       		.byte	0x2
 2792 01f4 0D       		.uleb128 0xd
 2793 01f5 37060000 		.4byte	.LASF40
 2794 01f9 03       		.byte	0x3
 2795 01fa 00       		.byte	0
 2796 01fb 0B       		.uleb128 0xb
 2797 01fc 1B000000 		.4byte	.LASF42
 2798 0200 01       		.byte	0x1
 2799 0201 2C000000 		.4byte	0x2c
 2800 0205 06       		.byte	0x6
 2801 0206 0E       		.byte	0xe
 2802 0207 36020000 		.4byte	0x236
 2803 020b 0D       		.uleb128 0xd
 2804 020c 8E070000 		.4byte	.LASF43
 2805 0210 00       		.byte	0
 2806 0211 0D       		.uleb128 0xd
 2807 0212 5D040000 		.4byte	.LASF44
 2808 0216 01       		.byte	0x1
 2809 0217 0D       		.uleb128 0xd
 2810 0218 26050000 		.4byte	.LASF45
 2811 021c 02       		.byte	0x2
 2812 021d 0D       		.uleb128 0xd
 2813 021e A6040000 		.4byte	.LASF46
 2814 0222 03       		.byte	0x3
 2815 0223 0D       		.uleb128 0xd
 2816 0224 30010000 		.4byte	.LASF47
 2817 0228 04       		.byte	0x4
 2818 0229 0D       		.uleb128 0xd
 2819 022a 58030000 		.4byte	.LASF48
 2820 022e 05       		.byte	0x5
 2821 022f 0D       		.uleb128 0xd
 2822 0230 7B070000 		.4byte	.LASF49
 2823 0234 06       		.byte	0x6
 2824 0235 00       		.byte	0
 2825 0236 09       		.uleb128 0x9
 2826 0237 C3020000 		.4byte	.LASF51
 2827 023b 14       		.byte	0x14
 2828 023c 06       		.byte	0x6
 2829 023d 10       		.byte	0x10
 2830 023e 7F020000 		.4byte	0x27f
 2831 0242 0A       		.uleb128 0xa
 2832 0243 00000000 		.4byte	.LASF52
 2833 0247 06       		.byte	0x6
 2834 0248 11       		.byte	0x11
 2835 0249 FB010000 		.4byte	0x1fb
 2836 024d 00       		.byte	0
 2837 024e 0A       		.uleb128 0xa
 2838 024f 61080000 		.4byte	.LASF53
 2839 0253 06       		.byte	0x6
 2840 0254 12       		.byte	0x12
 2841 0255 68000000 		.4byte	0x68
 2842 0259 04       		.byte	0x4
 2843 025a 0A       		.uleb128 0xa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 64


 2844 025b 69080000 		.4byte	.LASF54
 2845 025f 06       		.byte	0x6
 2846 0260 13       		.byte	0x13
 2847 0261 68000000 		.4byte	0x68
 2848 0265 08       		.byte	0x8
 2849 0266 0A       		.uleb128 0xa
 2850 0267 AC010000 		.4byte	.LASF55
 2851 026b 06       		.byte	0x6
 2852 026c 14       		.byte	0x14
 2853 026d 68000000 		.4byte	0x68
 2854 0271 0C       		.byte	0xc
 2855 0272 0A       		.uleb128 0xa
 2856 0273 43010000 		.4byte	.LASF56
 2857 0277 06       		.byte	0x6
 2858 0278 15       		.byte	0x15
 2859 0279 D3010000 		.4byte	0x1d3
 2860 027d 10       		.byte	0x10
 2861 027e 00       		.byte	0
 2862 027f 03       		.uleb128 0x3
 2863 0280 C3020000 		.4byte	.LASF51
 2864 0284 06       		.byte	0x6
 2865 0285 16       		.byte	0x16
 2866 0286 36020000 		.4byte	0x236
 2867 028a 0B       		.uleb128 0xb
 2868 028b CE060000 		.4byte	.LASF57
 2869 028f 01       		.byte	0x1
 2870 0290 2C000000 		.4byte	0x2c
 2871 0294 01       		.byte	0x1
 2872 0295 18       		.byte	0x18
 2873 0296 DD020000 		.4byte	0x2dd
 2874 029a 0D       		.uleb128 0xd
 2875 029b E9050000 		.4byte	.LASF58
 2876 029f 00       		.byte	0
 2877 02a0 0D       		.uleb128 0xd
 2878 02a1 37050000 		.4byte	.LASF59
 2879 02a5 01       		.byte	0x1
 2880 02a6 0D       		.uleb128 0xd
 2881 02a7 EF040000 		.4byte	.LASF60
 2882 02ab 02       		.byte	0x2
 2883 02ac 0D       		.uleb128 0xd
 2884 02ad F8070000 		.4byte	.LASF61
 2885 02b1 03       		.byte	0x3
 2886 02b2 0D       		.uleb128 0xd
 2887 02b3 1A070000 		.4byte	.LASF62
 2888 02b7 04       		.byte	0x4
 2889 02b8 0D       		.uleb128 0xd
 2890 02b9 2B070000 		.4byte	.LASF63
 2891 02bd 05       		.byte	0x5
 2892 02be 0D       		.uleb128 0xd
 2893 02bf 17050000 		.4byte	.LASF64
 2894 02c3 06       		.byte	0x6
 2895 02c4 0D       		.uleb128 0xd
 2896 02c5 65030000 		.4byte	.LASF65
 2897 02c9 07       		.byte	0x7
 2898 02ca 0D       		.uleb128 0xd
 2899 02cb 0A000000 		.4byte	.LASF66
 2900 02cf 08       		.byte	0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 65


 2901 02d0 0D       		.uleb128 0xd
 2902 02d1 08080000 		.4byte	.LASF67
 2903 02d5 09       		.byte	0x9
 2904 02d6 0D       		.uleb128 0xd
 2905 02d7 6F050000 		.4byte	.LASF68
 2906 02db 0A       		.byte	0xa
 2907 02dc 00       		.byte	0
 2908 02dd 0E       		.uleb128 0xe
 2909 02de 37040000 		.4byte	.LASF78
 2910 02e2 01       		.byte	0x1
 2911 02e3 47       		.byte	0x47
 2912 02e4 00000000 		.4byte	.LFB64
 2913 02e8 EC000000 		.4byte	.LFE64-.LFB64
 2914 02ec 01       		.uleb128 0x1
 2915 02ed 9C       		.byte	0x9c
 2916 02ee 0B030000 		.4byte	0x30b
 2917 02f2 0F       		.uleb128 0xf
 2918 02f3 50000000 		.4byte	.LBB2
 2919 02f7 62000000 		.4byte	.LBE2-.LBB2
 2920 02fb 10       		.uleb128 0x10
 2921 02fc C8040000 		.4byte	.LASF75
 2922 0300 01       		.byte	0x1
 2923 0301 54       		.byte	0x54
 2924 0302 D2000000 		.4byte	0xd2
 2925 0306 02       		.uleb128 0x2
 2926 0307 91       		.byte	0x91
 2927 0308 6C       		.sleb128 -20
 2928 0309 00       		.byte	0
 2929 030a 00       		.byte	0
 2930 030b 11       		.uleb128 0x11
 2931 030c 2B040000 		.4byte	.LASF69
 2932 0310 01       		.byte	0x1
 2933 0311 5F       		.byte	0x5f
 2934 0312 00000000 		.4byte	.LFB65
 2935 0316 18000000 		.4byte	.LFE65-.LFB65
 2936 031a 01       		.uleb128 0x1
 2937 031b 9C       		.byte	0x9c
 2938 031c 11       		.uleb128 0x11
 2939 031d BD050000 		.4byte	.LASF70
 2940 0321 01       		.byte	0x1
 2941 0322 65       		.byte	0x65
 2942 0323 00000000 		.4byte	.LFB66
 2943 0327 18000000 		.4byte	.LFE66-.LFB66
 2944 032b 01       		.uleb128 0x1
 2945 032c 9C       		.byte	0x9c
 2946 032d 11       		.uleb128 0x11
 2947 032e 98070000 		.4byte	.LASF71
 2948 0332 01       		.byte	0x1
 2949 0333 6B       		.byte	0x6b
 2950 0334 00000000 		.4byte	.LFB67
 2951 0338 18000000 		.4byte	.LFE67-.LFB67
 2952 033c 01       		.uleb128 0x1
 2953 033d 9C       		.byte	0x9c
 2954 033e 11       		.uleb128 0x11
 2955 033f 6C010000 		.4byte	.LASF72
 2956 0343 01       		.byte	0x1
 2957 0344 71       		.byte	0x71
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 66


 2958 0345 00000000 		.4byte	.LFB68
 2959 0349 18000000 		.4byte	.LFE68-.LFB68
 2960 034d 01       		.uleb128 0x1
 2961 034e 9C       		.byte	0x9c
 2962 034f 12       		.uleb128 0x12
 2963 0350 EC020000 		.4byte	.LASF73
 2964 0354 01       		.byte	0x1
 2965 0355 77       		.byte	0x77
 2966 0356 00000000 		.4byte	.LFB69
 2967 035a 38000000 		.4byte	.LFE69-.LFB69
 2968 035e 01       		.uleb128 0x1
 2969 035f 9C       		.byte	0x9c
 2970 0360 13       		.uleb128 0x13
 2971 0361 E0070000 		.4byte	.LASF74
 2972 0365 01       		.byte	0x1
 2973 0366 83       		.byte	0x83
 2974 0367 68000000 		.4byte	0x68
 2975 036b 00000000 		.4byte	.LFB70
 2976 036f 24010000 		.4byte	.LFE70-.LFB70
 2977 0373 01       		.uleb128 0x1
 2978 0374 9C       		.byte	0x9c
 2979 0375 14       		.uleb128 0x14
 2980 0376 32030000 		.4byte	.LASF82
 2981 037a 01       		.byte	0x1
 2982 037b B9       		.byte	0xb9
 2983 037c C6000000 		.4byte	0xc6
 2984 0380 00000000 		.4byte	.LFB71
 2985 0384 54000000 		.4byte	.LFE71-.LFB71
 2986 0388 01       		.uleb128 0x1
 2987 0389 9C       		.byte	0x9c
 2988 038a B9030000 		.4byte	0x3b9
 2989 038e 15       		.uleb128 0x15
 2990 038f A0020000 		.4byte	.LASF84
 2991 0393 01       		.byte	0x1
 2992 0394 B9       		.byte	0xb9
 2993 0395 A2000000 		.4byte	0xa2
 2994 0399 02       		.uleb128 0x2
 2995 039a 91       		.byte	0x91
 2996 039b 66       		.sleb128 -26
 2997 039c 16       		.uleb128 0x16
 2998 039d 63707300 		.ascii	"cps\000"
 2999 03a1 01       		.byte	0x1
 3000 03a2 BA       		.byte	0xba
 3001 03a3 D2000000 		.4byte	0xd2
 3002 03a7 02       		.uleb128 0x2
 3003 03a8 91       		.byte	0x91
 3004 03a9 6C       		.sleb128 -20
 3005 03aa 16       		.uleb128 0x16
 3006 03ab 72706D00 		.ascii	"rpm\000"
 3007 03af 01       		.byte	0x1
 3008 03b0 BB       		.byte	0xbb
 3009 03b1 C6000000 		.4byte	0xc6
 3010 03b5 02       		.uleb128 0x2
 3011 03b6 91       		.byte	0x91
 3012 03b7 6A       		.sleb128 -22
 3013 03b8 00       		.byte	0
 3014 03b9 17       		.uleb128 0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 67


 3015 03ba 3E020000 		.4byte	.LASF90
 3016 03be 01       		.byte	0x1
 3017 03bf C3       		.byte	0xc3
 3018 03c0 00000000 		.4byte	.LFB72
 3019 03c4 34000000 		.4byte	.LFE72-.LFB72
 3020 03c8 01       		.uleb128 0x1
 3021 03c9 9C       		.byte	0x9c
 3022 03ca 18       		.uleb128 0x18
 3023 03cb 0E020000 		.4byte	.LASF76
 3024 03cf 01       		.byte	0x1
 3025 03d0 D4       		.byte	0xd4
 3026 03d1 8A020000 		.4byte	0x28a
 3027 03d5 00000000 		.4byte	.LFB73
 3028 03d9 84000000 		.4byte	.LFE73-.LFB73
 3029 03dd 01       		.uleb128 0x1
 3030 03de 9C       		.byte	0x9c
 3031 03df 18       		.uleb128 0x18
 3032 03e0 57010000 		.4byte	.LASF77
 3033 03e4 01       		.byte	0x1
 3034 03e5 FA       		.byte	0xfa
 3035 03e6 8A020000 		.4byte	0x28a
 3036 03ea 00000000 		.4byte	.LFB74
 3037 03ee 7C000000 		.4byte	.LFE74-.LFB74
 3038 03f2 01       		.uleb128 0x1
 3039 03f3 9C       		.byte	0x9c
 3040 03f4 19       		.uleb128 0x19
 3041 03f5 D0010000 		.4byte	.LASF79
 3042 03f9 01       		.byte	0x1
 3043 03fa 1801     		.2byte	0x118
 3044 03fc 8A020000 		.4byte	0x28a
 3045 0400 00000000 		.4byte	.LFB75
 3046 0404 50040000 		.4byte	.LFE75-.LFB75
 3047 0408 01       		.uleb128 0x1
 3048 0409 9C       		.byte	0x9c
 3049 040a 2D040000 		.4byte	0x42d
 3050 040e 1A       		.uleb128 0x1a
 3051 040f 57000000 		.4byte	.LASF80
 3052 0413 01       		.byte	0x1
 3053 0414 1901     		.2byte	0x119
 3054 0416 D2000000 		.4byte	0xd2
 3055 041a 02       		.uleb128 0x2
 3056 041b 91       		.byte	0x91
 3057 041c 74       		.sleb128 -12
 3058 041d 1A       		.uleb128 0x1a
 3059 041e 7A020000 		.4byte	.LASF81
 3060 0422 01       		.byte	0x1
 3061 0423 2801     		.2byte	0x128
 3062 0425 FB010000 		.4byte	0x1fb
 3063 0429 02       		.uleb128 0x2
 3064 042a 91       		.byte	0x91
 3065 042b 73       		.sleb128 -13
 3066 042c 00       		.byte	0
 3067 042d 1B       		.uleb128 0x1b
 3068 042e 00070000 		.4byte	.LASF83
 3069 0432 01       		.byte	0x1
 3070 0433 2D02     		.2byte	0x22d
 3071 0435 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 68


 3072 0439 00000000 		.4byte	.LFB76
 3073 043d 90020000 		.4byte	.LFE76-.LFB76
 3074 0441 01       		.uleb128 0x1
 3075 0442 9C       		.byte	0x9c
 3076 0443 EB040000 		.4byte	0x4eb
 3077 0447 1C       		.uleb128 0x1c
 3078 0448 41030000 		.4byte	.LASF85
 3079 044c 01       		.byte	0x1
 3080 044d 2D02     		.2byte	0x22d
 3081 044f D2000000 		.4byte	0xd2
 3082 0453 02       		.uleb128 0x2
 3083 0454 91       		.byte	0x91
 3084 0455 54       		.sleb128 -44
 3085 0456 1A       		.uleb128 0x1a
 3086 0457 29080000 		.4byte	.LASF86
 3087 045b 01       		.byte	0x1
 3088 045c 2E02     		.2byte	0x22e
 3089 045e D2000000 		.4byte	0xd2
 3090 0462 02       		.uleb128 0x2
 3091 0463 91       		.byte	0x91
 3092 0464 58       		.sleb128 -40
 3093 0465 1A       		.uleb128 0x1a
 3094 0466 C6010000 		.4byte	.LASF87
 3095 046a 01       		.byte	0x1
 3096 046b 3102     		.2byte	0x231
 3097 046d 68000000 		.4byte	0x68
 3098 0471 02       		.uleb128 0x2
 3099 0472 91       		.byte	0x91
 3100 0473 60       		.sleb128 -32
 3101 0474 1A       		.uleb128 0x1a
 3102 0475 5C020000 		.4byte	.LASF88
 3103 0479 01       		.byte	0x1
 3104 047a 3202     		.2byte	0x232
 3105 047c 68000000 		.4byte	0x68
 3106 0480 02       		.uleb128 0x2
 3107 0481 91       		.byte	0x91
 3108 0482 5C       		.sleb128 -36
 3109 0483 1A       		.uleb128 0x1a
 3110 0484 42040000 		.4byte	.LASF89
 3111 0488 01       		.byte	0x1
 3112 0489 3402     		.2byte	0x234
 3113 048b 68000000 		.4byte	0x68
 3114 048f 02       		.uleb128 0x2
 3115 0490 91       		.byte	0x91
 3116 0491 74       		.sleb128 -12
 3117 0492 1D       		.uleb128 0x1d
 3118 0493 00000000 		.4byte	.Ldebug_ranges0+0
 3119 0497 A9040000 		.4byte	0x4a9
 3120 049b 1E       		.uleb128 0x1e
 3121 049c 6900     		.ascii	"i\000"
 3122 049e 01       		.byte	0x1
 3123 049f 3E02     		.2byte	0x23e
 3124 04a1 68000000 		.4byte	0x68
 3125 04a5 02       		.uleb128 0x2
 3126 04a6 91       		.byte	0x91
 3127 04a7 70       		.sleb128 -16
 3128 04a8 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 69


 3129 04a9 1D       		.uleb128 0x1d
 3130 04aa 18000000 		.4byte	.Ldebug_ranges0+0x18
 3131 04ae C0040000 		.4byte	0x4c0
 3132 04b2 1E       		.uleb128 0x1e
 3133 04b3 6900     		.ascii	"i\000"
 3134 04b5 01       		.byte	0x1
 3135 04b6 4D02     		.2byte	0x24d
 3136 04b8 68000000 		.4byte	0x68
 3137 04bc 02       		.uleb128 0x2
 3138 04bd 91       		.byte	0x91
 3139 04be 6C       		.sleb128 -20
 3140 04bf 00       		.byte	0
 3141 04c0 1D       		.uleb128 0x1d
 3142 04c1 30000000 		.4byte	.Ldebug_ranges0+0x30
 3143 04c5 D7040000 		.4byte	0x4d7
 3144 04c9 1E       		.uleb128 0x1e
 3145 04ca 6900     		.ascii	"i\000"
 3146 04cc 01       		.byte	0x1
 3147 04cd 5C02     		.2byte	0x25c
 3148 04cf 68000000 		.4byte	0x68
 3149 04d3 02       		.uleb128 0x2
 3150 04d4 91       		.byte	0x91
 3151 04d5 68       		.sleb128 -24
 3152 04d6 00       		.byte	0
 3153 04d7 1F       		.uleb128 0x1f
 3154 04d8 48000000 		.4byte	.Ldebug_ranges0+0x48
 3155 04dc 1E       		.uleb128 0x1e
 3156 04dd 6900     		.ascii	"i\000"
 3157 04df 01       		.byte	0x1
 3158 04e0 6C02     		.2byte	0x26c
 3159 04e2 68000000 		.4byte	0x68
 3160 04e6 02       		.uleb128 0x2
 3161 04e7 91       		.byte	0x91
 3162 04e8 64       		.sleb128 -28
 3163 04e9 00       		.byte	0
 3164 04ea 00       		.byte	0
 3165 04eb 20       		.uleb128 0x20
 3166 04ec 0B060000 		.4byte	.LASF91
 3167 04f0 01       		.byte	0x1
 3168 04f1 8002     		.2byte	0x280
 3169 04f3 00000000 		.4byte	.LFB77
 3170 04f7 68000000 		.4byte	.LFE77-.LFB77
 3171 04fb 01       		.uleb128 0x1
 3172 04fc 9C       		.byte	0x9c
 3173 04fd 21       		.uleb128 0x21
 3174 04fe 30070000 		.4byte	.LASF92
 3175 0502 01       		.byte	0x1
 3176 0503 9202     		.2byte	0x292
 3177 0505 7F020000 		.4byte	0x27f
 3178 0509 00000000 		.4byte	.LFB78
 3179 050d 58000000 		.4byte	.LFE78-.LFB78
 3180 0511 01       		.uleb128 0x1
 3181 0512 9C       		.byte	0x9c
 3182 0513 45050000 		.4byte	0x545
 3183 0517 1C       		.uleb128 0x1c
 3184 0518 BD010000 		.4byte	.LASF93
 3185 051c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 70


 3186 051d 9202     		.2byte	0x292
 3187 051f 68000000 		.4byte	0x68
 3188 0523 02       		.uleb128 0x2
 3189 0524 91       		.byte	0x91
 3190 0525 50       		.sleb128 -48
 3191 0526 1C       		.uleb128 0x1c
 3192 0527 E6030000 		.4byte	.LASF94
 3193 052b 01       		.byte	0x1
 3194 052c 9202     		.2byte	0x292
 3195 052e 45050000 		.4byte	0x545
 3196 0532 02       		.uleb128 0x2
 3197 0533 91       		.byte	0x91
 3198 0534 4C       		.sleb128 -52
 3199 0535 1A       		.uleb128 0x1a
 3200 0536 92000000 		.4byte	.LASF95
 3201 053a 01       		.byte	0x1
 3202 053b 9302     		.2byte	0x293
 3203 053d 7F020000 		.4byte	0x27f
 3204 0541 02       		.uleb128 0x2
 3205 0542 91       		.byte	0x91
 3206 0543 5C       		.sleb128 -36
 3207 0544 00       		.byte	0
 3208 0545 22       		.uleb128 0x22
 3209 0546 04       		.byte	0x4
 3210 0547 7F020000 		.4byte	0x27f
 3211 054b 23       		.uleb128 0x23
 3212 054c DB020000 		.4byte	.LASF96
 3213 0550 01       		.byte	0x1
 3214 0551 A502     		.2byte	0x2a5
 3215 0553 00000000 		.4byte	.LFB79
 3216 0557 C8000000 		.4byte	.LFE79-.LFB79
 3217 055b 01       		.uleb128 0x1
 3218 055c 9C       		.byte	0x9c
 3219 055d 10       		.uleb128 0x10
 3220 055e F6030000 		.4byte	.LASF97
 3221 0562 01       		.byte	0x1
 3222 0563 20       		.byte	0x20
 3223 0564 E5000000 		.4byte	0xe5
 3224 0568 05       		.uleb128 0x5
 3225 0569 03       		.byte	0x3
 3226 056a 14000000 		.4byte	instructionIndex
 3227 056e 10       		.uleb128 0x10
 3228 056f 47000000 		.4byte	.LASF98
 3229 0573 01       		.byte	0x1
 3230 0574 34       		.byte	0x34
 3231 0575 E0000000 		.4byte	0xe0
 3232 0579 05       		.uleb128 0x5
 3233 057a 03       		.byte	0x3
 3234 057b 34000000 		.4byte	turnStartedFlag
 3235 057f 10       		.uleb128 0x10
 3236 0580 4C040000 		.4byte	.LASF99
 3237 0584 01       		.byte	0x1
 3238 0585 35       		.byte	0x35
 3239 0586 E0000000 		.4byte	0xe0
 3240 058a 05       		.uleb128 0x5
 3241 058b 03       		.byte	0x3
 3242 058c 35000000 		.4byte	turnFinishedFlag
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 71


 3243 0590 10       		.uleb128 0x10
 3244 0591 8E010000 		.4byte	.LASF100
 3245 0595 01       		.byte	0x1
 3246 0596 37       		.byte	0x37
 3247 0597 E0000000 		.4byte	0xe0
 3248 059b 05       		.uleb128 0x5
 3249 059c 03       		.byte	0x3
 3250 059d 36000000 		.4byte	forwardUntilTargetStartedFlag
 3251 05a1 10       		.uleb128 0x10
 3252 05a2 56060000 		.4byte	.LASF101
 3253 05a6 01       		.byte	0x1
 3254 05a7 38       		.byte	0x38
 3255 05a8 E0000000 		.4byte	0xe0
 3256 05ac 05       		.uleb128 0x5
 3257 05ad 03       		.byte	0x3
 3258 05ae 37000000 		.4byte	uTurnStartedFlag
 3259 05b2 10       		.uleb128 0x10
 3260 05b3 A3060000 		.4byte	.LASF102
 3261 05b7 01       		.byte	0x1
 3262 05b8 39       		.byte	0x39
 3263 05b9 E0000000 		.4byte	0xe0
 3264 05bd 05       		.uleb128 0x5
 3265 05be 03       		.byte	0x3
 3266 05bf 38000000 		.4byte	uTurnFinishedFlag
 3267 05c3 10       		.uleb128 0x10
 3268 05c4 23030000 		.4byte	.LASF103
 3269 05c8 01       		.byte	0x1
 3270 05c9 3B       		.byte	0x3b
 3271 05ca E0000000 		.4byte	0xe0
 3272 05ce 05       		.uleb128 0x5
 3273 05cf 03       		.byte	0x3
 3274 05d0 39000000 		.4byte	leftStatusFlag
 3275 05d4 10       		.uleb128 0x10
 3276 05d5 37000000 		.4byte	.LASF104
 3277 05d9 01       		.byte	0x1
 3278 05da 3C       		.byte	0x3c
 3279 05db E0000000 		.4byte	0xe0
 3280 05df 05       		.uleb128 0x5
 3281 05e0 03       		.byte	0x3
 3282 05e1 3A000000 		.4byte	rightStatusFlag
 3283 05e5 10       		.uleb128 0x10
 3284 05e6 AC040000 		.4byte	.LASF105
 3285 05ea 01       		.byte	0x1
 3286 05eb 3E       		.byte	0x3e
 3287 05ec E0000000 		.4byte	0xe0
 3288 05f0 05       		.uleb128 0x5
 3289 05f1 03       		.byte	0x3
 3290 05f2 3B000000 		.4byte	spinCourseCorrectionStarted
 3291 05f6 10       		.uleb128 0x10
 3292 05f7 5D070000 		.4byte	.LASF106
 3293 05fb 01       		.byte	0x1
 3294 05fc 3F       		.byte	0x3f
 3295 05fd E0000000 		.4byte	0xe0
 3296 0601 05       		.uleb128 0x5
 3297 0602 03       		.byte	0x3
 3298 0603 3C000000 		.4byte	currentIgnoreL
 3299 0607 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 72


 3300 0608 6C070000 		.4byte	.LASF107
 3301 060c 01       		.byte	0x1
 3302 060d 40       		.byte	0x40
 3303 060e E0000000 		.4byte	0xe0
 3304 0612 05       		.uleb128 0x5
 3305 0613 03       		.byte	0x3
 3306 0614 45000000 		.4byte	currentIgnoreR
 3307 0618 24       		.uleb128 0x24
 3308 0619 D2050000 		.4byte	.LASF108
 3309 061d 07       		.byte	0x7
 3310 061e 1207     		.2byte	0x712
 3311 0620 24060000 		.4byte	0x624
 3312 0624 06       		.uleb128 0x6
 3313 0625 8B000000 		.4byte	0x8b
 3314 0629 25       		.uleb128 0x25
 3315 062a 747300   		.ascii	"ts\000"
 3316 062d 05       		.byte	0x5
 3317 062e 10       		.byte	0x10
 3318 062f 96000000 		.4byte	0x96
 3319 0633 05       		.uleb128 0x5
 3320 0634 03       		.byte	0x3
 3321 0635 00000000 		.4byte	ts
 3322 0639 26       		.uleb128 0x26
 3323 063a 46070000 		.4byte	.LASF109
 3324 063e 05       		.byte	0x5
 3325 063f 11       		.byte	0x11
 3326 0640 A2000000 		.4byte	0xa2
 3327 0644 05       		.uleb128 0x5
 3328 0645 03       		.byte	0x3
 3329 0646 00000000 		.4byte	ts_enc
 3330 064a 26       		.uleb128 0x26
 3331 064b DF050000 		.4byte	.LASF110
 3332 064f 05       		.byte	0x5
 3333 0650 12       		.byte	0x12
 3334 0651 A2000000 		.4byte	0xa2
 3335 0655 05       		.uleb128 0x5
 3336 0656 03       		.byte	0x3
 3337 0657 00000000 		.4byte	ts_update
 3338 065b 26       		.uleb128 0x26
 3339 065c F8040000 		.4byte	.LASF111
 3340 0660 05       		.byte	0x5
 3341 0661 13       		.byte	0x13
 3342 0662 A2000000 		.4byte	0xa2
 3343 0666 05       		.uleb128 0x5
 3344 0667 03       		.byte	0x3
 3345 0668 00000000 		.4byte	ts_speed
 3346 066c 26       		.uleb128 0x26
 3347 066d 7C030000 		.4byte	.LASF112
 3348 0671 05       		.byte	0x5
 3349 0672 14       		.byte	0x14
 3350 0673 A2000000 		.4byte	0xa2
 3351 0677 05       		.uleb128 0x5
 3352 0678 03       		.byte	0x3
 3353 0679 00000000 		.4byte	ts_display
 3354 067d 26       		.uleb128 0x26
 3355 067e 17030000 		.4byte	.LASF113
 3356 0682 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 73


 3357 0683 16       		.byte	0x16
 3358 0684 96000000 		.4byte	0x96
 3359 0688 05       		.uleb128 0x5
 3360 0689 03       		.byte	0x3
 3361 068a 00000000 		.4byte	flag_ts_enc
 3362 068e 26       		.uleb128 0x26
 3363 068f 08030000 		.4byte	.LASF114
 3364 0693 05       		.byte	0x5
 3365 0694 17       		.byte	0x17
 3366 0695 96000000 		.4byte	0x96
 3367 0699 05       		.uleb128 0x5
 3368 069a 03       		.byte	0x3
 3369 069b 00000000 		.4byte	flag_ts_update
 3370 069f 26       		.uleb128 0x26
 3371 06a0 83050000 		.4byte	.LASF115
 3372 06a4 05       		.byte	0x5
 3373 06a5 18       		.byte	0x18
 3374 06a6 96000000 		.4byte	0x96
 3375 06aa 05       		.uleb128 0x5
 3376 06ab 03       		.byte	0x3
 3377 06ac 00000000 		.4byte	flag_ts_speed
 3378 06b0 26       		.uleb128 0x26
 3379 06b1 4D070000 		.4byte	.LASF116
 3380 06b5 05       		.byte	0x5
 3381 06b6 19       		.byte	0x19
 3382 06b7 96000000 		.4byte	0x96
 3383 06bb 05       		.uleb128 0x5
 3384 06bc 03       		.byte	0x3
 3385 06bd 00000000 		.4byte	flag_ts_display
 3386 06c1 26       		.uleb128 0x26
 3387 06c2 A0050000 		.4byte	.LASF117
 3388 06c6 05       		.byte	0x5
 3389 06c7 1B       		.byte	0x1b
 3390 06c8 96000000 		.4byte	0x96
 3391 06cc 05       		.uleb128 0x5
 3392 06cd 03       		.byte	0x3
 3393 06ce 00000000 		.4byte	flag_rx
 3394 06d2 26       		.uleb128 0x26
 3395 06d3 CF020000 		.4byte	.LASF118
 3396 06d7 05       		.byte	0x5
 3397 06d8 1C       		.byte	0x1c
 3398 06d9 96000000 		.4byte	0x96
 3399 06dd 05       		.uleb128 0x5
 3400 06de 03       		.byte	0x3
 3401 06df 00000000 		.4byte	flag_packet
 3402 06e3 26       		.uleb128 0x26
 3403 06e4 49080000 		.4byte	.LASF119
 3404 06e8 05       		.byte	0x5
 3405 06e9 1D       		.byte	0x1d
 3406 06ea 96000000 		.4byte	0x96
 3407 06ee 05       		.uleb128 0x5
 3408 06ef 03       		.byte	0x3
 3409 06f0 00000000 		.4byte	flag_KB_string
 3410 06f4 26       		.uleb128 0x26
 3411 06f5 91050000 		.4byte	.LASF120
 3412 06f9 05       		.byte	0x5
 3413 06fa 1F       		.byte	0x1f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 74


 3414 06fb 96000000 		.4byte	0x96
 3415 06ff 05       		.uleb128 0x5
 3416 0700 03       		.byte	0x3
 3417 0701 00000000 		.4byte	dataready_flag
 3418 0705 26       		.uleb128 0x26
 3419 0706 F2010000 		.4byte	.LASF121
 3420 070a 05       		.byte	0x5
 3421 070b 21       		.byte	0x21
 3422 070c 96000000 		.4byte	0x96
 3423 0710 05       		.uleb128 0x5
 3424 0711 03       		.byte	0x3
 3425 0712 00000000 		.4byte	flag_rf_transmission_active
 3426 0716 07       		.uleb128 0x7
 3427 0717 84000000 		.4byte	0x84
 3428 071b 26070000 		.4byte	0x726
 3429 071f 08       		.uleb128 0x8
 3430 0720 7D000000 		.4byte	0x7d
 3431 0724 3F       		.byte	0x3f
 3432 0725 00       		.byte	0
 3433 0726 26       		.uleb128 0x26
 3434 0727 80070000 		.4byte	.LASF122
 3435 072b 05       		.byte	0x5
 3436 072c 24       		.byte	0x24
 3437 072d 16070000 		.4byte	0x716
 3438 0731 05       		.uleb128 0x5
 3439 0732 03       		.byte	0x3
 3440 0733 00000000 		.4byte	displaystring
 3441 0737 26       		.uleb128 0x26
 3442 0738 FB060000 		.4byte	.LASF123
 3443 073c 05       		.byte	0x5
 3444 073d 25       		.byte	0x25
 3445 073e 16070000 		.4byte	0x716
 3446 0742 05       		.uleb128 0x5
 3447 0743 03       		.byte	0x3
 3448 0744 00000000 		.4byte	line
 3449 0748 26       		.uleb128 0x26
 3450 0749 C8060000 		.4byte	.LASF124
 3451 074d 05       		.byte	0x5
 3452 074e 25       		.byte	0x25
 3453 074f 16070000 		.4byte	0x716
 3454 0753 05       		.uleb128 0x5
 3455 0754 03       		.byte	0x3
 3456 0755 00000000 		.4byte	entry
 3457 0759 07       		.uleb128 0x7
 3458 075a 96000000 		.4byte	0x96
 3459 075e 69070000 		.4byte	0x769
 3460 0762 08       		.uleb128 0x8
 3461 0763 7D000000 		.4byte	0x7d
 3462 0767 3F       		.byte	0x3f
 3463 0768 00       		.byte	0
 3464 0769 26       		.uleb128 0x26
 3465 076a 96020000 		.4byte	.LASF125
 3466 076e 05       		.byte	0x5
 3467 076f 26       		.byte	0x26
 3468 0770 59070000 		.4byte	0x759
 3469 0774 05       		.uleb128 0x5
 3470 0775 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 75


 3471 0776 00000000 		.4byte	usbBuffer
 3472 077a 26       		.uleb128 0x26
 3473 077b 85000000 		.4byte	.LASF126
 3474 077f 05       		.byte	0x5
 3475 0780 3C       		.byte	0x3c
 3476 0781 FA000000 		.4byte	0xfa
 3477 0785 05       		.uleb128 0x5
 3478 0786 03       		.byte	0x3
 3479 0787 00000000 		.4byte	system_state
 3480 078b 07       		.uleb128 0x7
 3481 078c 68000000 		.4byte	0x68
 3482 0790 A1070000 		.4byte	0x7a1
 3483 0794 08       		.uleb128 0x8
 3484 0795 7D000000 		.4byte	0x7d
 3485 0799 0E       		.byte	0xe
 3486 079a 08       		.uleb128 0x8
 3487 079b 7D000000 		.4byte	0x7d
 3488 079f 12       		.byte	0x12
 3489 07a0 00       		.byte	0
 3490 07a1 27       		.uleb128 0x27
 3491 07a2 6D617000 		.ascii	"map\000"
 3492 07a6 08       		.byte	0x8
 3493 07a7 04       		.byte	0x4
 3494 07a8 8B070000 		.4byte	0x78b
 3495 07ac 07       		.uleb128 0x7
 3496 07ad 68000000 		.4byte	0x68
 3497 07b1 C2070000 		.4byte	0x7c2
 3498 07b5 08       		.uleb128 0x8
 3499 07b6 7D000000 		.4byte	0x7d
 3500 07ba 04       		.byte	0x4
 3501 07bb 08       		.uleb128 0x8
 3502 07bc 7D000000 		.4byte	0x7d
 3503 07c0 01       		.byte	0x1
 3504 07c1 00       		.byte	0
 3505 07c2 28       		.uleb128 0x28
 3506 07c3 E5040000 		.4byte	.LASF127
 3507 07c7 08       		.byte	0x8
 3508 07c8 05       		.byte	0x5
 3509 07c9 AC070000 		.4byte	0x7ac
 3510 07cd 26       		.uleb128 0x26
 3511 07ce 45060000 		.4byte	.LASF128
 3512 07d2 01       		.byte	0x1
 3513 07d3 19       		.byte	0x19
 3514 07d4 8A020000 		.4byte	0x28a
 3515 07d8 05       		.uleb128 0x5
 3516 07d9 03       		.byte	0x3
 3517 07da 00000000 		.4byte	currentDirection
 3518 07de 26       		.uleb128 0x26
 3519 07df 5D050000 		.4byte	.LASF129
 3520 07e3 01       		.byte	0x1
 3521 07e4 19       		.byte	0x19
 3522 07e5 8A020000 		.4byte	0x28a
 3523 07e9 05       		.uleb128 0x5
 3524 07ea 03       		.byte	0x3
 3525 07eb 00000000 		.4byte	previousDirection
 3526 07ef 26       		.uleb128 0x26
 3527 07f0 26020000 		.4byte	.LASF130
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 76


 3528 07f4 01       		.byte	0x1
 3529 07f5 1B       		.byte	0x1b
 3530 07f6 D3010000 		.4byte	0x1d3
 3531 07fa 05       		.uleb128 0x5
 3532 07fb 03       		.byte	0x3
 3533 07fc 00000000 		.4byte	currentRobotOrientation
 3534 0800 26       		.uleb128 0x26
 3535 0801 92040000 		.4byte	.LASF131
 3536 0805 01       		.byte	0x1
 3537 0806 1B       		.byte	0x1b
 3538 0807 D3010000 		.4byte	0x1d3
 3539 080b 05       		.uleb128 0x5
 3540 080c 03       		.byte	0x3
 3541 080d 00000000 		.4byte	previousOrientation
 3542 0811 26       		.uleb128 0x26
 3543 0812 E5070000 		.4byte	.LASF132
 3544 0816 01       		.byte	0x1
 3545 0817 1C       		.byte	0x1c
 3546 0818 7F020000 		.4byte	0x27f
 3547 081c 05       		.uleb128 0x5
 3548 081d 03       		.byte	0x3
 3549 081e 00000000 		.4byte	currentInstruction
 3550 0822 26       		.uleb128 0x26
 3551 0823 BD010000 		.4byte	.LASF93
 3552 0827 01       		.byte	0x1
 3553 0828 1D       		.byte	0x1d
 3554 0829 68000000 		.4byte	0x68
 3555 082d 05       		.uleb128 0x5
 3556 082e 03       		.byte	0x3
 3557 082f 00000000 		.4byte	numSteps
 3558 0833 26       		.uleb128 0x26
 3559 0834 E6030000 		.4byte	.LASF94
 3560 0838 01       		.byte	0x1
 3561 0839 1F       		.byte	0x1f
 3562 083a 45050000 		.4byte	0x545
 3563 083e 05       		.uleb128 0x5
 3564 083f 03       		.byte	0x3
 3565 0840 00000000 		.4byte	instructionList
 3566 0844 25       		.uleb128 0x25
 3567 0845 733300   		.ascii	"s3\000"
 3568 0848 01       		.byte	0x1
 3569 0849 25       		.byte	0x25
 3570 084a 96000000 		.4byte	0x96
 3571 084e 05       		.uleb128 0x5
 3572 084f 03       		.byte	0x3
 3573 0850 00000000 		.4byte	s3
 3574 0854 25       		.uleb128 0x25
 3575 0855 733400   		.ascii	"s4\000"
 3576 0858 01       		.byte	0x1
 3577 0859 25       		.byte	0x25
 3578 085a 96000000 		.4byte	0x96
 3579 085e 05       		.uleb128 0x5
 3580 085f 03       		.byte	0x3
 3581 0860 00000000 		.4byte	s4
 3582 0864 25       		.uleb128 0x25
 3583 0865 733500   		.ascii	"s5\000"
 3584 0868 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 77


 3585 0869 25       		.byte	0x25
 3586 086a 96000000 		.4byte	0x96
 3587 086e 05       		.uleb128 0x5
 3588 086f 03       		.byte	0x3
 3589 0870 00000000 		.4byte	s5
 3590 0874 25       		.uleb128 0x25
 3591 0875 733600   		.ascii	"s6\000"
 3592 0878 01       		.byte	0x1
 3593 0879 25       		.byte	0x25
 3594 087a 96000000 		.4byte	0x96
 3595 087e 05       		.uleb128 0x5
 3596 087f 03       		.byte	0x3
 3597 0880 00000000 		.4byte	s6
 3598 0884 26       		.uleb128 0x26
 3599 0885 F1050000 		.4byte	.LASF133
 3600 0889 01       		.byte	0x1
 3601 088a 2A       		.byte	0x2a
 3602 088b AE000000 		.4byte	0xae
 3603 088f 05       		.uleb128 0x5
 3604 0890 03       		.byte	0x3
 3605 0891 00000000 		.4byte	totalMilliseconds
 3606 0895 26       		.uleb128 0x26
 3607 0896 78010000 		.4byte	.LASF134
 3608 089a 01       		.byte	0x1
 3609 089b 2B       		.byte	0x2b
 3610 089c D2000000 		.4byte	0xd2
 3611 08a0 05       		.uleb128 0x5
 3612 08a1 03       		.byte	0x3
 3613 08a2 00000000 		.4byte	totalDistance
 3614 08a6 07       		.uleb128 0x7
 3615 08a7 84000000 		.4byte	0x84
 3616 08ab B6080000 		.4byte	0x8b6
 3617 08af 08       		.uleb128 0x8
 3618 08b0 7D000000 		.4byte	0x7d
 3619 08b4 44       		.byte	0x44
 3620 08b5 00       		.byte	0
 3621 08b6 26       		.uleb128 0x26
 3622 08b7 61000000 		.4byte	.LASF135
 3623 08bb 01       		.byte	0x1
 3624 08bc 2D       		.byte	0x2d
 3625 08bd A6080000 		.4byte	0x8a6
 3626 08c1 05       		.uleb128 0x5
 3627 08c2 03       		.byte	0x3
 3628 08c3 00000000 		.4byte	buffer
 3629 08c7 26       		.uleb128 0x26
 3630 08c8 66020000 		.4byte	.LASF136
 3631 08cc 01       		.byte	0x1
 3632 08cd 2E       		.byte	0x2e
 3633 08ce 68000000 		.4byte	0x68
 3634 08d2 05       		.uleb128 0x5
 3635 08d3 03       		.byte	0x3
 3636 08d4 00000000 		.4byte	quadDec2Count
 3637 08d8 26       		.uleb128 0x26
 3638 08d9 40080000 		.4byte	.LASF137
 3639 08dd 01       		.byte	0x1
 3640 08de 2F       		.byte	0x2f
 3641 08df 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 78


 3642 08e3 05       		.uleb128 0x5
 3643 08e4 03       		.byte	0x3
 3644 08e5 00000000 		.4byte	timerInt
 3645 08e9 26       		.uleb128 0x26
 3646 08ea F9020000 		.4byte	.LASF138
 3647 08ee 01       		.byte	0x1
 3648 08ef 30       		.byte	0x30
 3649 08f0 68000000 		.4byte	0x68
 3650 08f4 05       		.uleb128 0x5
 3651 08f5 03       		.byte	0x3
 3652 08f6 00000000 		.4byte	keepLedOn
 3653 08fa 26       		.uleb128 0x26
 3654 08fb 98060000 		.4byte	.LASF139
 3655 08ff 01       		.byte	0x1
 3656 0900 32       		.byte	0x32
 3657 0901 AE000000 		.4byte	0xae
 3658 0905 05       		.uleb128 0x5
 3659 0906 03       		.byte	0x3
 3660 0907 00000000 		.4byte	stopBuffer
 3661 090b 26       		.uleb128 0x26
 3662 090c 01050000 		.4byte	.LASF140
 3663 0910 01       		.byte	0x1
 3664 0911 42       		.byte	0x42
 3665 0912 EA000000 		.4byte	0xea
 3666 0916 05       		.uleb128 0x5
 3667 0917 03       		.byte	0x3
 3668 0918 00000000 		.4byte	junctionConfiguration
 3669 091c 26       		.uleb128 0x26
 3670 091d 83040000 		.4byte	.LASF141
 3671 0921 01       		.byte	0x1
 3672 0922 44       		.byte	0x44
 3673 0923 D2000000 		.4byte	0xd2
 3674 0927 05       		.uleb128 0x5
 3675 0928 03       		.byte	0x3
 3676 0929 00000000 		.4byte	blockSizeTotal
 3677 092d 26       		.uleb128 0x26
 3678 092e 13040000 		.4byte	.LASF142
 3679 0932 01       		.byte	0x1
 3680 0933 CA       		.byte	0xca
 3681 0934 D2000000 		.4byte	0xd2
 3682 0938 05       		.uleb128 0x5
 3683 0939 03       		.byte	0x3
 3684 093a 00000000 		.4byte	xBlocksize
 3685 093e 26       		.uleb128 0x26
 3686 093f A8050000 		.4byte	.LASF143
 3687 0943 01       		.byte	0x1
 3688 0944 CB       		.byte	0xcb
 3689 0945 D2000000 		.4byte	0xd2
 3690 0949 05       		.uleb128 0x5
 3691 094a 03       		.byte	0x3
 3692 094b 00000000 		.4byte	yBlocksize
 3693 094f 26       		.uleb128 0x26
 3694 0950 B0070000 		.4byte	.LASF144
 3695 0954 01       		.byte	0x1
 3696 0955 CC       		.byte	0xcc
 3697 0956 96000000 		.4byte	0x96
 3698 095a 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 79


 3699 095b 03       		.byte	0x3
 3700 095c 00000000 		.4byte	currentRow
 3701 0960 26       		.uleb128 0x26
 3702 0961 1E080000 		.4byte	.LASF145
 3703 0965 01       		.byte	0x1
 3704 0966 CD       		.byte	0xcd
 3705 0967 96000000 		.4byte	0x96
 3706 096b 05       		.uleb128 0x5
 3707 096c 03       		.byte	0x3
 3708 096d 00000000 		.4byte	currentCol
 3709 0971 26       		.uleb128 0x26
 3710 0972 EA060000 		.4byte	.LASF146
 3711 0976 01       		.byte	0x1
 3712 0977 CF       		.byte	0xcf
 3713 0978 96000000 		.4byte	0x96
 3714 097c 05       		.uleb128 0x5
 3715 097d 03       		.byte	0x3
 3716 097e 00000000 		.4byte	stoppedAfterTurn
 3717 0982 26       		.uleb128 0x26
 3718 0983 4B030000 		.4byte	.LASF147
 3719 0987 01       		.byte	0x1
 3720 0988 D0       		.byte	0xd0
 3721 0989 96000000 		.4byte	0x96
 3722 098d 05       		.uleb128 0x5
 3723 098e 03       		.byte	0x3
 3724 098f 00000000 		.4byte	ignoreSensor
 3725 0993 26       		.uleb128 0x26
 3726 0994 67060000 		.4byte	.LASF148
 3727 0998 01       		.byte	0x1
 3728 0999 F8       		.byte	0xf8
 3729 099a 8A020000 		.4byte	0x28a
 3730 099e 05       		.uleb128 0x5
 3731 099f 03       		.byte	0x3
 3732 09a0 00000000 		.4byte	lastDirectionAfter180
 3733 09a4 00       		.byte	0
 3734              		.section	.debug_abbrev,"",%progbits
 3735              	.Ldebug_abbrev0:
 3736 0000 01       		.uleb128 0x1
 3737 0001 11       		.uleb128 0x11
 3738 0002 01       		.byte	0x1
 3739 0003 25       		.uleb128 0x25
 3740 0004 0E       		.uleb128 0xe
 3741 0005 13       		.uleb128 0x13
 3742 0006 0B       		.uleb128 0xb
 3743 0007 03       		.uleb128 0x3
 3744 0008 0E       		.uleb128 0xe
 3745 0009 1B       		.uleb128 0x1b
 3746 000a 0E       		.uleb128 0xe
 3747 000b 55       		.uleb128 0x55
 3748 000c 17       		.uleb128 0x17
 3749 000d 11       		.uleb128 0x11
 3750 000e 01       		.uleb128 0x1
 3751 000f 10       		.uleb128 0x10
 3752 0010 17       		.uleb128 0x17
 3753 0011 00       		.byte	0
 3754 0012 00       		.byte	0
 3755 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 80


 3756 0014 24       		.uleb128 0x24
 3757 0015 00       		.byte	0
 3758 0016 0B       		.uleb128 0xb
 3759 0017 0B       		.uleb128 0xb
 3760 0018 3E       		.uleb128 0x3e
 3761 0019 0B       		.uleb128 0xb
 3762 001a 03       		.uleb128 0x3
 3763 001b 0E       		.uleb128 0xe
 3764 001c 00       		.byte	0
 3765 001d 00       		.byte	0
 3766 001e 03       		.uleb128 0x3
 3767 001f 16       		.uleb128 0x16
 3768 0020 00       		.byte	0
 3769 0021 03       		.uleb128 0x3
 3770 0022 0E       		.uleb128 0xe
 3771 0023 3A       		.uleb128 0x3a
 3772 0024 0B       		.uleb128 0xb
 3773 0025 3B       		.uleb128 0x3b
 3774 0026 0B       		.uleb128 0xb
 3775 0027 49       		.uleb128 0x49
 3776 0028 13       		.uleb128 0x13
 3777 0029 00       		.byte	0
 3778 002a 00       		.byte	0
 3779 002b 04       		.uleb128 0x4
 3780 002c 24       		.uleb128 0x24
 3781 002d 00       		.byte	0
 3782 002e 0B       		.uleb128 0xb
 3783 002f 0B       		.uleb128 0xb
 3784 0030 3E       		.uleb128 0x3e
 3785 0031 0B       		.uleb128 0xb
 3786 0032 03       		.uleb128 0x3
 3787 0033 08       		.uleb128 0x8
 3788 0034 00       		.byte	0
 3789 0035 00       		.byte	0
 3790 0036 05       		.uleb128 0x5
 3791 0037 16       		.uleb128 0x16
 3792 0038 00       		.byte	0
 3793 0039 03       		.uleb128 0x3
 3794 003a 0E       		.uleb128 0xe
 3795 003b 3A       		.uleb128 0x3a
 3796 003c 0B       		.uleb128 0xb
 3797 003d 3B       		.uleb128 0x3b
 3798 003e 05       		.uleb128 0x5
 3799 003f 49       		.uleb128 0x49
 3800 0040 13       		.uleb128 0x13
 3801 0041 00       		.byte	0
 3802 0042 00       		.byte	0
 3803 0043 06       		.uleb128 0x6
 3804 0044 35       		.uleb128 0x35
 3805 0045 00       		.byte	0
 3806 0046 49       		.uleb128 0x49
 3807 0047 13       		.uleb128 0x13
 3808 0048 00       		.byte	0
 3809 0049 00       		.byte	0
 3810 004a 07       		.uleb128 0x7
 3811 004b 01       		.uleb128 0x1
 3812 004c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 81


 3813 004d 49       		.uleb128 0x49
 3814 004e 13       		.uleb128 0x13
 3815 004f 01       		.uleb128 0x1
 3816 0050 13       		.uleb128 0x13
 3817 0051 00       		.byte	0
 3818 0052 00       		.byte	0
 3819 0053 08       		.uleb128 0x8
 3820 0054 21       		.uleb128 0x21
 3821 0055 00       		.byte	0
 3822 0056 49       		.uleb128 0x49
 3823 0057 13       		.uleb128 0x13
 3824 0058 2F       		.uleb128 0x2f
 3825 0059 0B       		.uleb128 0xb
 3826 005a 00       		.byte	0
 3827 005b 00       		.byte	0
 3828 005c 09       		.uleb128 0x9
 3829 005d 13       		.uleb128 0x13
 3830 005e 01       		.byte	0x1
 3831 005f 03       		.uleb128 0x3
 3832 0060 0E       		.uleb128 0xe
 3833 0061 0B       		.uleb128 0xb
 3834 0062 0B       		.uleb128 0xb
 3835 0063 3A       		.uleb128 0x3a
 3836 0064 0B       		.uleb128 0xb
 3837 0065 3B       		.uleb128 0x3b
 3838 0066 0B       		.uleb128 0xb
 3839 0067 01       		.uleb128 0x1
 3840 0068 13       		.uleb128 0x13
 3841 0069 00       		.byte	0
 3842 006a 00       		.byte	0
 3843 006b 0A       		.uleb128 0xa
 3844 006c 0D       		.uleb128 0xd
 3845 006d 00       		.byte	0
 3846 006e 03       		.uleb128 0x3
 3847 006f 0E       		.uleb128 0xe
 3848 0070 3A       		.uleb128 0x3a
 3849 0071 0B       		.uleb128 0xb
 3850 0072 3B       		.uleb128 0x3b
 3851 0073 0B       		.uleb128 0xb
 3852 0074 49       		.uleb128 0x49
 3853 0075 13       		.uleb128 0x13
 3854 0076 38       		.uleb128 0x38
 3855 0077 0B       		.uleb128 0xb
 3856 0078 00       		.byte	0
 3857 0079 00       		.byte	0
 3858 007a 0B       		.uleb128 0xb
 3859 007b 04       		.uleb128 0x4
 3860 007c 01       		.byte	0x1
 3861 007d 03       		.uleb128 0x3
 3862 007e 0E       		.uleb128 0xe
 3863 007f 0B       		.uleb128 0xb
 3864 0080 0B       		.uleb128 0xb
 3865 0081 49       		.uleb128 0x49
 3866 0082 13       		.uleb128 0x13
 3867 0083 3A       		.uleb128 0x3a
 3868 0084 0B       		.uleb128 0xb
 3869 0085 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 82


 3870 0086 0B       		.uleb128 0xb
 3871 0087 01       		.uleb128 0x1
 3872 0088 13       		.uleb128 0x13
 3873 0089 00       		.byte	0
 3874 008a 00       		.byte	0
 3875 008b 0C       		.uleb128 0xc
 3876 008c 28       		.uleb128 0x28
 3877 008d 00       		.byte	0
 3878 008e 03       		.uleb128 0x3
 3879 008f 08       		.uleb128 0x8
 3880 0090 1C       		.uleb128 0x1c
 3881 0091 0B       		.uleb128 0xb
 3882 0092 00       		.byte	0
 3883 0093 00       		.byte	0
 3884 0094 0D       		.uleb128 0xd
 3885 0095 28       		.uleb128 0x28
 3886 0096 00       		.byte	0
 3887 0097 03       		.uleb128 0x3
 3888 0098 0E       		.uleb128 0xe
 3889 0099 1C       		.uleb128 0x1c
 3890 009a 0B       		.uleb128 0xb
 3891 009b 00       		.byte	0
 3892 009c 00       		.byte	0
 3893 009d 0E       		.uleb128 0xe
 3894 009e 2E       		.uleb128 0x2e
 3895 009f 01       		.byte	0x1
 3896 00a0 3F       		.uleb128 0x3f
 3897 00a1 19       		.uleb128 0x19
 3898 00a2 03       		.uleb128 0x3
 3899 00a3 0E       		.uleb128 0xe
 3900 00a4 3A       		.uleb128 0x3a
 3901 00a5 0B       		.uleb128 0xb
 3902 00a6 3B       		.uleb128 0x3b
 3903 00a7 0B       		.uleb128 0xb
 3904 00a8 27       		.uleb128 0x27
 3905 00a9 19       		.uleb128 0x19
 3906 00aa 11       		.uleb128 0x11
 3907 00ab 01       		.uleb128 0x1
 3908 00ac 12       		.uleb128 0x12
 3909 00ad 06       		.uleb128 0x6
 3910 00ae 40       		.uleb128 0x40
 3911 00af 18       		.uleb128 0x18
 3912 00b0 9642     		.uleb128 0x2116
 3913 00b2 19       		.uleb128 0x19
 3914 00b3 01       		.uleb128 0x1
 3915 00b4 13       		.uleb128 0x13
 3916 00b5 00       		.byte	0
 3917 00b6 00       		.byte	0
 3918 00b7 0F       		.uleb128 0xf
 3919 00b8 0B       		.uleb128 0xb
 3920 00b9 01       		.byte	0x1
 3921 00ba 11       		.uleb128 0x11
 3922 00bb 01       		.uleb128 0x1
 3923 00bc 12       		.uleb128 0x12
 3924 00bd 06       		.uleb128 0x6
 3925 00be 00       		.byte	0
 3926 00bf 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 83


 3927 00c0 10       		.uleb128 0x10
 3928 00c1 34       		.uleb128 0x34
 3929 00c2 00       		.byte	0
 3930 00c3 03       		.uleb128 0x3
 3931 00c4 0E       		.uleb128 0xe
 3932 00c5 3A       		.uleb128 0x3a
 3933 00c6 0B       		.uleb128 0xb
 3934 00c7 3B       		.uleb128 0x3b
 3935 00c8 0B       		.uleb128 0xb
 3936 00c9 49       		.uleb128 0x49
 3937 00ca 13       		.uleb128 0x13
 3938 00cb 02       		.uleb128 0x2
 3939 00cc 18       		.uleb128 0x18
 3940 00cd 00       		.byte	0
 3941 00ce 00       		.byte	0
 3942 00cf 11       		.uleb128 0x11
 3943 00d0 2E       		.uleb128 0x2e
 3944 00d1 00       		.byte	0
 3945 00d2 3F       		.uleb128 0x3f
 3946 00d3 19       		.uleb128 0x19
 3947 00d4 03       		.uleb128 0x3
 3948 00d5 0E       		.uleb128 0xe
 3949 00d6 3A       		.uleb128 0x3a
 3950 00d7 0B       		.uleb128 0xb
 3951 00d8 3B       		.uleb128 0x3b
 3952 00d9 0B       		.uleb128 0xb
 3953 00da 27       		.uleb128 0x27
 3954 00db 19       		.uleb128 0x19
 3955 00dc 11       		.uleb128 0x11
 3956 00dd 01       		.uleb128 0x1
 3957 00de 12       		.uleb128 0x12
 3958 00df 06       		.uleb128 0x6
 3959 00e0 40       		.uleb128 0x40
 3960 00e1 18       		.uleb128 0x18
 3961 00e2 9742     		.uleb128 0x2117
 3962 00e4 19       		.uleb128 0x19
 3963 00e5 00       		.byte	0
 3964 00e6 00       		.byte	0
 3965 00e7 12       		.uleb128 0x12
 3966 00e8 2E       		.uleb128 0x2e
 3967 00e9 00       		.byte	0
 3968 00ea 3F       		.uleb128 0x3f
 3969 00eb 19       		.uleb128 0x19
 3970 00ec 03       		.uleb128 0x3
 3971 00ed 0E       		.uleb128 0xe
 3972 00ee 3A       		.uleb128 0x3a
 3973 00ef 0B       		.uleb128 0xb
 3974 00f0 3B       		.uleb128 0x3b
 3975 00f1 0B       		.uleb128 0xb
 3976 00f2 27       		.uleb128 0x27
 3977 00f3 19       		.uleb128 0x19
 3978 00f4 11       		.uleb128 0x11
 3979 00f5 01       		.uleb128 0x1
 3980 00f6 12       		.uleb128 0x12
 3981 00f7 06       		.uleb128 0x6
 3982 00f8 40       		.uleb128 0x40
 3983 00f9 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 84


 3984 00fa 9642     		.uleb128 0x2116
 3985 00fc 19       		.uleb128 0x19
 3986 00fd 00       		.byte	0
 3987 00fe 00       		.byte	0
 3988 00ff 13       		.uleb128 0x13
 3989 0100 2E       		.uleb128 0x2e
 3990 0101 00       		.byte	0
 3991 0102 3F       		.uleb128 0x3f
 3992 0103 19       		.uleb128 0x19
 3993 0104 03       		.uleb128 0x3
 3994 0105 0E       		.uleb128 0xe
 3995 0106 3A       		.uleb128 0x3a
 3996 0107 0B       		.uleb128 0xb
 3997 0108 3B       		.uleb128 0x3b
 3998 0109 0B       		.uleb128 0xb
 3999 010a 49       		.uleb128 0x49
 4000 010b 13       		.uleb128 0x13
 4001 010c 11       		.uleb128 0x11
 4002 010d 01       		.uleb128 0x1
 4003 010e 12       		.uleb128 0x12
 4004 010f 06       		.uleb128 0x6
 4005 0110 40       		.uleb128 0x40
 4006 0111 18       		.uleb128 0x18
 4007 0112 9642     		.uleb128 0x2116
 4008 0114 19       		.uleb128 0x19
 4009 0115 00       		.byte	0
 4010 0116 00       		.byte	0
 4011 0117 14       		.uleb128 0x14
 4012 0118 2E       		.uleb128 0x2e
 4013 0119 01       		.byte	0x1
 4014 011a 3F       		.uleb128 0x3f
 4015 011b 19       		.uleb128 0x19
 4016 011c 03       		.uleb128 0x3
 4017 011d 0E       		.uleb128 0xe
 4018 011e 3A       		.uleb128 0x3a
 4019 011f 0B       		.uleb128 0xb
 4020 0120 3B       		.uleb128 0x3b
 4021 0121 0B       		.uleb128 0xb
 4022 0122 27       		.uleb128 0x27
 4023 0123 19       		.uleb128 0x19
 4024 0124 49       		.uleb128 0x49
 4025 0125 13       		.uleb128 0x13
 4026 0126 11       		.uleb128 0x11
 4027 0127 01       		.uleb128 0x1
 4028 0128 12       		.uleb128 0x12
 4029 0129 06       		.uleb128 0x6
 4030 012a 40       		.uleb128 0x40
 4031 012b 18       		.uleb128 0x18
 4032 012c 9642     		.uleb128 0x2116
 4033 012e 19       		.uleb128 0x19
 4034 012f 01       		.uleb128 0x1
 4035 0130 13       		.uleb128 0x13
 4036 0131 00       		.byte	0
 4037 0132 00       		.byte	0
 4038 0133 15       		.uleb128 0x15
 4039 0134 05       		.uleb128 0x5
 4040 0135 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 85


 4041 0136 03       		.uleb128 0x3
 4042 0137 0E       		.uleb128 0xe
 4043 0138 3A       		.uleb128 0x3a
 4044 0139 0B       		.uleb128 0xb
 4045 013a 3B       		.uleb128 0x3b
 4046 013b 0B       		.uleb128 0xb
 4047 013c 49       		.uleb128 0x49
 4048 013d 13       		.uleb128 0x13
 4049 013e 02       		.uleb128 0x2
 4050 013f 18       		.uleb128 0x18
 4051 0140 00       		.byte	0
 4052 0141 00       		.byte	0
 4053 0142 16       		.uleb128 0x16
 4054 0143 34       		.uleb128 0x34
 4055 0144 00       		.byte	0
 4056 0145 03       		.uleb128 0x3
 4057 0146 08       		.uleb128 0x8
 4058 0147 3A       		.uleb128 0x3a
 4059 0148 0B       		.uleb128 0xb
 4060 0149 3B       		.uleb128 0x3b
 4061 014a 0B       		.uleb128 0xb
 4062 014b 49       		.uleb128 0x49
 4063 014c 13       		.uleb128 0x13
 4064 014d 02       		.uleb128 0x2
 4065 014e 18       		.uleb128 0x18
 4066 014f 00       		.byte	0
 4067 0150 00       		.byte	0
 4068 0151 17       		.uleb128 0x17
 4069 0152 2E       		.uleb128 0x2e
 4070 0153 00       		.byte	0
 4071 0154 3F       		.uleb128 0x3f
 4072 0155 19       		.uleb128 0x19
 4073 0156 03       		.uleb128 0x3
 4074 0157 0E       		.uleb128 0xe
 4075 0158 3A       		.uleb128 0x3a
 4076 0159 0B       		.uleb128 0xb
 4077 015a 3B       		.uleb128 0x3b
 4078 015b 0B       		.uleb128 0xb
 4079 015c 11       		.uleb128 0x11
 4080 015d 01       		.uleb128 0x1
 4081 015e 12       		.uleb128 0x12
 4082 015f 06       		.uleb128 0x6
 4083 0160 40       		.uleb128 0x40
 4084 0161 18       		.uleb128 0x18
 4085 0162 9742     		.uleb128 0x2117
 4086 0164 19       		.uleb128 0x19
 4087 0165 00       		.byte	0
 4088 0166 00       		.byte	0
 4089 0167 18       		.uleb128 0x18
 4090 0168 2E       		.uleb128 0x2e
 4091 0169 00       		.byte	0
 4092 016a 3F       		.uleb128 0x3f
 4093 016b 19       		.uleb128 0x19
 4094 016c 03       		.uleb128 0x3
 4095 016d 0E       		.uleb128 0xe
 4096 016e 3A       		.uleb128 0x3a
 4097 016f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 86


 4098 0170 3B       		.uleb128 0x3b
 4099 0171 0B       		.uleb128 0xb
 4100 0172 49       		.uleb128 0x49
 4101 0173 13       		.uleb128 0x13
 4102 0174 11       		.uleb128 0x11
 4103 0175 01       		.uleb128 0x1
 4104 0176 12       		.uleb128 0x12
 4105 0177 06       		.uleb128 0x6
 4106 0178 40       		.uleb128 0x40
 4107 0179 18       		.uleb128 0x18
 4108 017a 9742     		.uleb128 0x2117
 4109 017c 19       		.uleb128 0x19
 4110 017d 00       		.byte	0
 4111 017e 00       		.byte	0
 4112 017f 19       		.uleb128 0x19
 4113 0180 2E       		.uleb128 0x2e
 4114 0181 01       		.byte	0x1
 4115 0182 3F       		.uleb128 0x3f
 4116 0183 19       		.uleb128 0x19
 4117 0184 03       		.uleb128 0x3
 4118 0185 0E       		.uleb128 0xe
 4119 0186 3A       		.uleb128 0x3a
 4120 0187 0B       		.uleb128 0xb
 4121 0188 3B       		.uleb128 0x3b
 4122 0189 05       		.uleb128 0x5
 4123 018a 49       		.uleb128 0x49
 4124 018b 13       		.uleb128 0x13
 4125 018c 11       		.uleb128 0x11
 4126 018d 01       		.uleb128 0x1
 4127 018e 12       		.uleb128 0x12
 4128 018f 06       		.uleb128 0x6
 4129 0190 40       		.uleb128 0x40
 4130 0191 18       		.uleb128 0x18
 4131 0192 9642     		.uleb128 0x2116
 4132 0194 19       		.uleb128 0x19
 4133 0195 01       		.uleb128 0x1
 4134 0196 13       		.uleb128 0x13
 4135 0197 00       		.byte	0
 4136 0198 00       		.byte	0
 4137 0199 1A       		.uleb128 0x1a
 4138 019a 34       		.uleb128 0x34
 4139 019b 00       		.byte	0
 4140 019c 03       		.uleb128 0x3
 4141 019d 0E       		.uleb128 0xe
 4142 019e 3A       		.uleb128 0x3a
 4143 019f 0B       		.uleb128 0xb
 4144 01a0 3B       		.uleb128 0x3b
 4145 01a1 05       		.uleb128 0x5
 4146 01a2 49       		.uleb128 0x49
 4147 01a3 13       		.uleb128 0x13
 4148 01a4 02       		.uleb128 0x2
 4149 01a5 18       		.uleb128 0x18
 4150 01a6 00       		.byte	0
 4151 01a7 00       		.byte	0
 4152 01a8 1B       		.uleb128 0x1b
 4153 01a9 2E       		.uleb128 0x2e
 4154 01aa 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 87


 4155 01ab 3F       		.uleb128 0x3f
 4156 01ac 19       		.uleb128 0x19
 4157 01ad 03       		.uleb128 0x3
 4158 01ae 0E       		.uleb128 0xe
 4159 01af 3A       		.uleb128 0x3a
 4160 01b0 0B       		.uleb128 0xb
 4161 01b1 3B       		.uleb128 0x3b
 4162 01b2 05       		.uleb128 0x5
 4163 01b3 27       		.uleb128 0x27
 4164 01b4 19       		.uleb128 0x19
 4165 01b5 49       		.uleb128 0x49
 4166 01b6 13       		.uleb128 0x13
 4167 01b7 11       		.uleb128 0x11
 4168 01b8 01       		.uleb128 0x1
 4169 01b9 12       		.uleb128 0x12
 4170 01ba 06       		.uleb128 0x6
 4171 01bb 40       		.uleb128 0x40
 4172 01bc 18       		.uleb128 0x18
 4173 01bd 9642     		.uleb128 0x2116
 4174 01bf 19       		.uleb128 0x19
 4175 01c0 01       		.uleb128 0x1
 4176 01c1 13       		.uleb128 0x13
 4177 01c2 00       		.byte	0
 4178 01c3 00       		.byte	0
 4179 01c4 1C       		.uleb128 0x1c
 4180 01c5 05       		.uleb128 0x5
 4181 01c6 00       		.byte	0
 4182 01c7 03       		.uleb128 0x3
 4183 01c8 0E       		.uleb128 0xe
 4184 01c9 3A       		.uleb128 0x3a
 4185 01ca 0B       		.uleb128 0xb
 4186 01cb 3B       		.uleb128 0x3b
 4187 01cc 05       		.uleb128 0x5
 4188 01cd 49       		.uleb128 0x49
 4189 01ce 13       		.uleb128 0x13
 4190 01cf 02       		.uleb128 0x2
 4191 01d0 18       		.uleb128 0x18
 4192 01d1 00       		.byte	0
 4193 01d2 00       		.byte	0
 4194 01d3 1D       		.uleb128 0x1d
 4195 01d4 0B       		.uleb128 0xb
 4196 01d5 01       		.byte	0x1
 4197 01d6 55       		.uleb128 0x55
 4198 01d7 17       		.uleb128 0x17
 4199 01d8 01       		.uleb128 0x1
 4200 01d9 13       		.uleb128 0x13
 4201 01da 00       		.byte	0
 4202 01db 00       		.byte	0
 4203 01dc 1E       		.uleb128 0x1e
 4204 01dd 34       		.uleb128 0x34
 4205 01de 00       		.byte	0
 4206 01df 03       		.uleb128 0x3
 4207 01e0 08       		.uleb128 0x8
 4208 01e1 3A       		.uleb128 0x3a
 4209 01e2 0B       		.uleb128 0xb
 4210 01e3 3B       		.uleb128 0x3b
 4211 01e4 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 88


 4212 01e5 49       		.uleb128 0x49
 4213 01e6 13       		.uleb128 0x13
 4214 01e7 02       		.uleb128 0x2
 4215 01e8 18       		.uleb128 0x18
 4216 01e9 00       		.byte	0
 4217 01ea 00       		.byte	0
 4218 01eb 1F       		.uleb128 0x1f
 4219 01ec 0B       		.uleb128 0xb
 4220 01ed 01       		.byte	0x1
 4221 01ee 55       		.uleb128 0x55
 4222 01ef 17       		.uleb128 0x17
 4223 01f0 00       		.byte	0
 4224 01f1 00       		.byte	0
 4225 01f2 20       		.uleb128 0x20
 4226 01f3 2E       		.uleb128 0x2e
 4227 01f4 00       		.byte	0
 4228 01f5 3F       		.uleb128 0x3f
 4229 01f6 19       		.uleb128 0x19
 4230 01f7 03       		.uleb128 0x3
 4231 01f8 0E       		.uleb128 0xe
 4232 01f9 3A       		.uleb128 0x3a
 4233 01fa 0B       		.uleb128 0xb
 4234 01fb 3B       		.uleb128 0x3b
 4235 01fc 05       		.uleb128 0x5
 4236 01fd 11       		.uleb128 0x11
 4237 01fe 01       		.uleb128 0x1
 4238 01ff 12       		.uleb128 0x12
 4239 0200 06       		.uleb128 0x6
 4240 0201 40       		.uleb128 0x40
 4241 0202 18       		.uleb128 0x18
 4242 0203 9742     		.uleb128 0x2117
 4243 0205 19       		.uleb128 0x19
 4244 0206 00       		.byte	0
 4245 0207 00       		.byte	0
 4246 0208 21       		.uleb128 0x21
 4247 0209 2E       		.uleb128 0x2e
 4248 020a 01       		.byte	0x1
 4249 020b 3F       		.uleb128 0x3f
 4250 020c 19       		.uleb128 0x19
 4251 020d 03       		.uleb128 0x3
 4252 020e 0E       		.uleb128 0xe
 4253 020f 3A       		.uleb128 0x3a
 4254 0210 0B       		.uleb128 0xb
 4255 0211 3B       		.uleb128 0x3b
 4256 0212 05       		.uleb128 0x5
 4257 0213 27       		.uleb128 0x27
 4258 0214 19       		.uleb128 0x19
 4259 0215 49       		.uleb128 0x49
 4260 0216 13       		.uleb128 0x13
 4261 0217 11       		.uleb128 0x11
 4262 0218 01       		.uleb128 0x1
 4263 0219 12       		.uleb128 0x12
 4264 021a 06       		.uleb128 0x6
 4265 021b 40       		.uleb128 0x40
 4266 021c 18       		.uleb128 0x18
 4267 021d 9742     		.uleb128 0x2117
 4268 021f 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 89


 4269 0220 01       		.uleb128 0x1
 4270 0221 13       		.uleb128 0x13
 4271 0222 00       		.byte	0
 4272 0223 00       		.byte	0
 4273 0224 22       		.uleb128 0x22
 4274 0225 0F       		.uleb128 0xf
 4275 0226 00       		.byte	0
 4276 0227 0B       		.uleb128 0xb
 4277 0228 0B       		.uleb128 0xb
 4278 0229 49       		.uleb128 0x49
 4279 022a 13       		.uleb128 0x13
 4280 022b 00       		.byte	0
 4281 022c 00       		.byte	0
 4282 022d 23       		.uleb128 0x23
 4283 022e 2E       		.uleb128 0x2e
 4284 022f 00       		.byte	0
 4285 0230 3F       		.uleb128 0x3f
 4286 0231 19       		.uleb128 0x19
 4287 0232 03       		.uleb128 0x3
 4288 0233 0E       		.uleb128 0xe
 4289 0234 3A       		.uleb128 0x3a
 4290 0235 0B       		.uleb128 0xb
 4291 0236 3B       		.uleb128 0x3b
 4292 0237 05       		.uleb128 0x5
 4293 0238 11       		.uleb128 0x11
 4294 0239 01       		.uleb128 0x1
 4295 023a 12       		.uleb128 0x12
 4296 023b 06       		.uleb128 0x6
 4297 023c 40       		.uleb128 0x40
 4298 023d 18       		.uleb128 0x18
 4299 023e 9642     		.uleb128 0x2116
 4300 0240 19       		.uleb128 0x19
 4301 0241 00       		.byte	0
 4302 0242 00       		.byte	0
 4303 0243 24       		.uleb128 0x24
 4304 0244 34       		.uleb128 0x34
 4305 0245 00       		.byte	0
 4306 0246 03       		.uleb128 0x3
 4307 0247 0E       		.uleb128 0xe
 4308 0248 3A       		.uleb128 0x3a
 4309 0249 0B       		.uleb128 0xb
 4310 024a 3B       		.uleb128 0x3b
 4311 024b 05       		.uleb128 0x5
 4312 024c 49       		.uleb128 0x49
 4313 024d 13       		.uleb128 0x13
 4314 024e 3F       		.uleb128 0x3f
 4315 024f 19       		.uleb128 0x19
 4316 0250 3C       		.uleb128 0x3c
 4317 0251 19       		.uleb128 0x19
 4318 0252 00       		.byte	0
 4319 0253 00       		.byte	0
 4320 0254 25       		.uleb128 0x25
 4321 0255 34       		.uleb128 0x34
 4322 0256 00       		.byte	0
 4323 0257 03       		.uleb128 0x3
 4324 0258 08       		.uleb128 0x8
 4325 0259 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 90


 4326 025a 0B       		.uleb128 0xb
 4327 025b 3B       		.uleb128 0x3b
 4328 025c 0B       		.uleb128 0xb
 4329 025d 49       		.uleb128 0x49
 4330 025e 13       		.uleb128 0x13
 4331 025f 3F       		.uleb128 0x3f
 4332 0260 19       		.uleb128 0x19
 4333 0261 02       		.uleb128 0x2
 4334 0262 18       		.uleb128 0x18
 4335 0263 00       		.byte	0
 4336 0264 00       		.byte	0
 4337 0265 26       		.uleb128 0x26
 4338 0266 34       		.uleb128 0x34
 4339 0267 00       		.byte	0
 4340 0268 03       		.uleb128 0x3
 4341 0269 0E       		.uleb128 0xe
 4342 026a 3A       		.uleb128 0x3a
 4343 026b 0B       		.uleb128 0xb
 4344 026c 3B       		.uleb128 0x3b
 4345 026d 0B       		.uleb128 0xb
 4346 026e 49       		.uleb128 0x49
 4347 026f 13       		.uleb128 0x13
 4348 0270 3F       		.uleb128 0x3f
 4349 0271 19       		.uleb128 0x19
 4350 0272 02       		.uleb128 0x2
 4351 0273 18       		.uleb128 0x18
 4352 0274 00       		.byte	0
 4353 0275 00       		.byte	0
 4354 0276 27       		.uleb128 0x27
 4355 0277 34       		.uleb128 0x34
 4356 0278 00       		.byte	0
 4357 0279 03       		.uleb128 0x3
 4358 027a 08       		.uleb128 0x8
 4359 027b 3A       		.uleb128 0x3a
 4360 027c 0B       		.uleb128 0xb
 4361 027d 3B       		.uleb128 0x3b
 4362 027e 0B       		.uleb128 0xb
 4363 027f 49       		.uleb128 0x49
 4364 0280 13       		.uleb128 0x13
 4365 0281 3F       		.uleb128 0x3f
 4366 0282 19       		.uleb128 0x19
 4367 0283 3C       		.uleb128 0x3c
 4368 0284 19       		.uleb128 0x19
 4369 0285 00       		.byte	0
 4370 0286 00       		.byte	0
 4371 0287 28       		.uleb128 0x28
 4372 0288 34       		.uleb128 0x34
 4373 0289 00       		.byte	0
 4374 028a 03       		.uleb128 0x3
 4375 028b 0E       		.uleb128 0xe
 4376 028c 3A       		.uleb128 0x3a
 4377 028d 0B       		.uleb128 0xb
 4378 028e 3B       		.uleb128 0x3b
 4379 028f 0B       		.uleb128 0xb
 4380 0290 49       		.uleb128 0x49
 4381 0291 13       		.uleb128 0x13
 4382 0292 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 91


 4383 0293 19       		.uleb128 0x19
 4384 0294 3C       		.uleb128 0x3c
 4385 0295 19       		.uleb128 0x19
 4386 0296 00       		.byte	0
 4387 0297 00       		.byte	0
 4388 0298 00       		.byte	0
 4389              		.section	.debug_aranges,"",%progbits
 4390 0000 94000000 		.4byte	0x94
 4391 0004 0200     		.2byte	0x2
 4392 0006 00000000 		.4byte	.Ldebug_info0
 4393 000a 04       		.byte	0x4
 4394 000b 00       		.byte	0
 4395 000c 0000     		.2byte	0
 4396 000e 0000     		.2byte	0
 4397 0010 00000000 		.4byte	.LFB64
 4398 0014 EC000000 		.4byte	.LFE64-.LFB64
 4399 0018 00000000 		.4byte	.LFB65
 4400 001c 18000000 		.4byte	.LFE65-.LFB65
 4401 0020 00000000 		.4byte	.LFB66
 4402 0024 18000000 		.4byte	.LFE66-.LFB66
 4403 0028 00000000 		.4byte	.LFB67
 4404 002c 18000000 		.4byte	.LFE67-.LFB67
 4405 0030 00000000 		.4byte	.LFB68
 4406 0034 18000000 		.4byte	.LFE68-.LFB68
 4407 0038 00000000 		.4byte	.LFB69
 4408 003c 38000000 		.4byte	.LFE69-.LFB69
 4409 0040 00000000 		.4byte	.LFB70
 4410 0044 24010000 		.4byte	.LFE70-.LFB70
 4411 0048 00000000 		.4byte	.LFB71
 4412 004c 54000000 		.4byte	.LFE71-.LFB71
 4413 0050 00000000 		.4byte	.LFB72
 4414 0054 34000000 		.4byte	.LFE72-.LFB72
 4415 0058 00000000 		.4byte	.LFB73
 4416 005c 84000000 		.4byte	.LFE73-.LFB73
 4417 0060 00000000 		.4byte	.LFB74
 4418 0064 7C000000 		.4byte	.LFE74-.LFB74
 4419 0068 00000000 		.4byte	.LFB75
 4420 006c 50040000 		.4byte	.LFE75-.LFB75
 4421 0070 00000000 		.4byte	.LFB76
 4422 0074 90020000 		.4byte	.LFE76-.LFB76
 4423 0078 00000000 		.4byte	.LFB77
 4424 007c 68000000 		.4byte	.LFE77-.LFB77
 4425 0080 00000000 		.4byte	.LFB78
 4426 0084 58000000 		.4byte	.LFE78-.LFB78
 4427 0088 00000000 		.4byte	.LFB79
 4428 008c C8000000 		.4byte	.LFE79-.LFB79
 4429 0090 00000000 		.4byte	0
 4430 0094 00000000 		.4byte	0
 4431              		.section	.debug_ranges,"",%progbits
 4432              	.Ldebug_ranges0:
 4433 0000 38000000 		.4byte	.LBB3
 4434 0004 BC000000 		.4byte	.LBE3
 4435 0008 BE000000 		.4byte	.LBB4
 4436 000c C0000000 		.4byte	.LBE4
 4437 0010 00000000 		.4byte	0
 4438 0014 00000000 		.4byte	0
 4439 0018 C2000000 		.4byte	.LBB5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 92


 4440 001c 46010000 		.4byte	.LBE5
 4441 0020 48010000 		.4byte	.LBB6
 4442 0024 4A010000 		.4byte	.LBE6
 4443 0028 00000000 		.4byte	0
 4444 002c 00000000 		.4byte	0
 4445 0030 4C010000 		.4byte	.LBB7
 4446 0034 D0010000 		.4byte	.LBE7
 4447 0038 D2010000 		.4byte	.LBB8
 4448 003c D4010000 		.4byte	.LBE8
 4449 0040 00000000 		.4byte	0
 4450 0044 00000000 		.4byte	0
 4451 0048 D6010000 		.4byte	.LBB9
 4452 004c 5A020000 		.4byte	.LBE9
 4453 0050 5C020000 		.4byte	.LBB10
 4454 0054 5E020000 		.4byte	.LBE10
 4455 0058 00000000 		.4byte	0
 4456 005c 00000000 		.4byte	0
 4457 0060 00000000 		.4byte	.LFB64
 4458 0064 EC000000 		.4byte	.LFE64
 4459 0068 00000000 		.4byte	.LFB65
 4460 006c 18000000 		.4byte	.LFE65
 4461 0070 00000000 		.4byte	.LFB66
 4462 0074 18000000 		.4byte	.LFE66
 4463 0078 00000000 		.4byte	.LFB67
 4464 007c 18000000 		.4byte	.LFE67
 4465 0080 00000000 		.4byte	.LFB68
 4466 0084 18000000 		.4byte	.LFE68
 4467 0088 00000000 		.4byte	.LFB69
 4468 008c 38000000 		.4byte	.LFE69
 4469 0090 00000000 		.4byte	.LFB70
 4470 0094 24010000 		.4byte	.LFE70
 4471 0098 00000000 		.4byte	.LFB71
 4472 009c 54000000 		.4byte	.LFE71
 4473 00a0 00000000 		.4byte	.LFB72
 4474 00a4 34000000 		.4byte	.LFE72
 4475 00a8 00000000 		.4byte	.LFB73
 4476 00ac 84000000 		.4byte	.LFE73
 4477 00b0 00000000 		.4byte	.LFB74
 4478 00b4 7C000000 		.4byte	.LFE74
 4479 00b8 00000000 		.4byte	.LFB75
 4480 00bc 50040000 		.4byte	.LFE75
 4481 00c0 00000000 		.4byte	.LFB76
 4482 00c4 90020000 		.4byte	.LFE76
 4483 00c8 00000000 		.4byte	.LFB77
 4484 00cc 68000000 		.4byte	.LFE77
 4485 00d0 00000000 		.4byte	.LFB78
 4486 00d4 58000000 		.4byte	.LFE78
 4487 00d8 00000000 		.4byte	.LFB79
 4488 00dc C8000000 		.4byte	.LFE79
 4489 00e0 00000000 		.4byte	0
 4490 00e4 00000000 		.4byte	0
 4491              		.section	.debug_line,"",%progbits
 4492              	.Ldebug_line0:
 4493 0000 9F040000 		.section	.debug_str,"MS",%progbits,1
 4493      02007001 
 4493      00000201 
 4493      FB0E0D00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 93


 4493      01010101 
 4494              	.LASF52:
 4495 0000 64697265 		.ascii	"direction\000"
 4495      6374696F 
 4495      6E00
 4496              	.LASF66:
 4497 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4497      61726441 
 4497      66746572 
 4497      5475726E 
 4497      00
 4498              	.LASF42:
 4499 001b 496E7374 		.ascii	"InstructionDirection\000"
 4499      72756374 
 4499      696F6E44 
 4499      69726563 
 4499      74696F6E 
 4500              	.LASF150:
 4501 0030 6D61696E 		.ascii	"main.c\000"
 4501      2E6300
 4502              	.LASF104:
 4503 0037 72696768 		.ascii	"rightStatusFlag\000"
 4503      74537461 
 4503      74757346 
 4503      6C616700 
 4504              	.LASF98:
 4505 0047 7475726E 		.ascii	"turnStartedFlag\000"
 4505      53746172 
 4505      74656446 
 4505      6C616700 
 4506              	.LASF80:
 4507 0057 626C6F63 		.ascii	"blocksize\000"
 4507      6B73697A 
 4507      6500
 4508              	.LASF135:
 4509 0061 62756666 		.ascii	"buffer\000"
 4509      657200
 4510              	.LASF8:
 4511 0068 756E7369 		.ascii	"unsigned int\000"
 4511      676E6564 
 4511      20696E74 
 4511      00
 4512              	.LASF12:
 4513 0075 5F5F696E 		.ascii	"__int32_t\000"
 4513      7433325F 
 4513      7400
 4514              	.LASF18:
 4515 007f 696E7431 		.ascii	"int16\000"
 4515      3600
 4516              	.LASF126:
 4517 0085 73797374 		.ascii	"system_state\000"
 4517      656D5F73 
 4517      74617465 
 4517      00
 4518              	.LASF95:
 4519 0092 6E657874 		.ascii	"nextInstruction\000"
 4519      496E7374 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 94


 4519      72756374 
 4519      696F6E00 
 4520              	.LASF149:
 4521 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4521      43313120 
 4521      352E342E 
 4521      31203230 
 4521      31363036 
 4522 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4522      20726576 
 4522      6973696F 
 4522      6E203233 
 4522      37373135 
 4523 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4523      66756E63 
 4523      74696F6E 
 4523      2D736563 
 4523      74696F6E 
 4524              	.LASF47:
 4525 0130 466F7277 		.ascii	"ForwardUntilTarget\000"
 4525      61726455 
 4525      6E74696C 
 4525      54617267 
 4525      657400
 4526              	.LASF56:
 4527 0143 65787065 		.ascii	"expectedOrientation\000"
 4527      63746564 
 4527      4F726965 
 4527      6E746174 
 4527      696F6E00 
 4528              	.LASF77:
 4529 0157 5370696E 		.ascii	"SpinCourseCorrection\000"
 4529      436F7572 
 4529      7365436F 
 4529      72726563 
 4529      74696F6E 
 4530              	.LASF72:
 4531 016c 53365F44 		.ascii	"S6_DETECTED\000"
 4531      45544543 
 4531      54454400 
 4532              	.LASF134:
 4533 0178 746F7461 		.ascii	"totalDistance\000"
 4533      6C446973 
 4533      74616E63 
 4533      6500
 4534              	.LASF34:
 4535 0186 67325F78 		.ascii	"g2_xpos\000"
 4535      706F7300 
 4536              	.LASF100:
 4537 018e 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4537      61726455 
 4537      6E74696C 
 4537      54617267 
 4537      65745374 
 4538              	.LASF55:
 4539 01ac 64697374 		.ascii	"distanceToTarget\000"
 4539      616E6365 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 95


 4539      546F5461 
 4539      72676574 
 4539      00
 4540              	.LASF93:
 4541 01bd 6E756D53 		.ascii	"numSteps\000"
 4541      74657073 
 4541      00
 4542              	.LASF87:
 4543 01c6 74617267 		.ascii	"targetRow\000"
 4543      6574526F 
 4543      7700
 4544              	.LASF79:
 4545 01d0 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4545      6F76656D 
 4545      656E7441 
 4545      63636F72 
 4545      64696E67 
 4546              	.LASF121:
 4547 01f2 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4547      5F72665F 
 4547      7472616E 
 4547      736D6973 
 4547      73696F6E 
 4548              	.LASF76:
 4549 020e 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4549      61726443 
 4549      6F757273 
 4549      65436F72 
 4549      72656374 
 4550              	.LASF130:
 4551 0226 63757272 		.ascii	"currentRobotOrientation\000"
 4551      656E7452 
 4551      6F626F74 
 4551      4F726965 
 4551      6E746174 
 4552              	.LASF90:
 4553 023e 52657365 		.ascii	"ResetSensorFlags\000"
 4553      7453656E 
 4553      736F7246 
 4553      6C616773 
 4553      00
 4554              	.LASF37:
 4555 024f 67325F64 		.ascii	"g2_direction\000"
 4555      69726563 
 4555      74696F6E 
 4555      00
 4556              	.LASF88:
 4557 025c 74617267 		.ascii	"targetCol\000"
 4557      6574436F 
 4557      6C00
 4558              	.LASF136:
 4559 0266 71756164 		.ascii	"quadDec2Count\000"
 4559      44656332 
 4559      436F756E 
 4559      7400
 4560              	.LASF19:
 4561 0274 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 96


 4561      7400
 4562              	.LASF81:
 4563 027a 63757272 		.ascii	"currentInstructionDirection\000"
 4563      656E7449 
 4563      6E737472 
 4563      75637469 
 4563      6F6E4469 
 4564              	.LASF125:
 4565 0296 75736242 		.ascii	"usbBuffer\000"
 4565      75666665 
 4565      7200
 4566              	.LASF84:
 4567 02a0 636F756E 		.ascii	"count\000"
 4567      7400
 4568              	.LASF22:
 4569 02a6 696E6465 		.ascii	"index\000"
 4569      7800
 4570              	.LASF7:
 4571 02ac 6C6F6E67 		.ascii	"long long unsigned int\000"
 4571      206C6F6E 
 4571      6720756E 
 4571      7369676E 
 4571      65642069 
 4572              	.LASF51:
 4573 02c3 496E7374 		.ascii	"Instruction\000"
 4573      72756374 
 4573      696F6E00 
 4574              	.LASF118:
 4575 02cf 666C6167 		.ascii	"flag_packet\000"
 4575      5F706163 
 4575      6B657400 
 4576              	.LASF96:
 4577 02db 53657452 		.ascii	"SetRobotMovement\000"
 4577      6F626F74 
 4577      4D6F7665 
 4577      6D656E74 
 4577      00
 4578              	.LASF73:
 4579 02ec 54494D45 		.ascii	"TIMER_FINISH\000"
 4579      525F4649 
 4579      4E495348 
 4579      00
 4580              	.LASF138:
 4581 02f9 6B656570 		.ascii	"keepLedOn\000"
 4581      4C65644F 
 4581      6E00
 4582              	.LASF39:
 4583 0303 4C656674 		.ascii	"Left\000"
 4583      00
 4584              	.LASF114:
 4585 0308 666C6167 		.ascii	"flag_ts_update\000"
 4585      5F74735F 
 4585      75706461 
 4585      746500
 4586              	.LASF113:
 4587 0317 666C6167 		.ascii	"flag_ts_enc\000"
 4587      5F74735F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 97


 4587      656E6300 
 4588              	.LASF103:
 4589 0323 6C656674 		.ascii	"leftStatusFlag\000"
 4589      53746174 
 4589      7573466C 
 4589      616700
 4590              	.LASF82:
 4591 0332 71756164 		.ascii	"quadCountToRPM\000"
 4591      436F756E 
 4591      74546F52 
 4591      504D00
 4592              	.LASF85:
 4593 0341 626C6F63 		.ascii	"blockSize\000"
 4593      6B53697A 
 4593      6500
 4594              	.LASF147:
 4595 034b 69676E6F 		.ascii	"ignoreSensor\000"
 4595      72655365 
 4595      6E736F72 
 4595      00
 4596              	.LASF48:
 4597 0358 53746F70 		.ascii	"StopAtTarget\000"
 4597      41745461 
 4597      72676574 
 4597      00
 4598              	.LASF65:
 4599 0365 77616974 		.ascii	"waitForTurn\000"
 4599      466F7254 
 4599      75726E00 
 4600              	.LASF24:
 4601 0371 726F626F 		.ascii	"robot_ypos\000"
 4601      745F7970 
 4601      6F7300
 4602              	.LASF112:
 4603 037c 74735F64 		.ascii	"ts_display\000"
 4603      6973706C 
 4603      617900
 4604              	.LASF11:
 4605 0387 63686172 		.ascii	"char\000"
 4605      00
 4606              	.LASF151:
 4607 038c 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4607      6F63756D 
 4607      656E7473 
 4607      5C476974 
 4607      4875625C 
 4608 03bb 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4608      635F636F 
 4608      64655F62 
 4608      6173655C 
 4608      43533330 
 4609              	.LASF28:
 4610 03dd 67305F73 		.ascii	"g0_speed\000"
 4610      70656564 
 4610      00
 4611              	.LASF94:
 4612 03e6 696E7374 		.ascii	"instructionList\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 98


 4612      72756374 
 4612      696F6E4C 
 4612      69737400 
 4613              	.LASF97:
 4614 03f6 696E7374 		.ascii	"instructionIndex\000"
 4614      72756374 
 4614      696F6E49 
 4614      6E646578 
 4614      00
 4615              	.LASF15:
 4616 0407 75696E74 		.ascii	"uint16\000"
 4616      313600
 4617              	.LASF17:
 4618 040e 696E7438 		.ascii	"int8\000"
 4618      00
 4619              	.LASF142:
 4620 0413 78426C6F 		.ascii	"xBlocksize\000"
 4620      636B7369 
 4620      7A6500
 4621              	.LASF33:
 4622 041e 67315F64 		.ascii	"g1_direction\000"
 4622      69726563 
 4622      74696F6E 
 4622      00
 4623              	.LASF69:
 4624 042b 53335F44 		.ascii	"S3_DETECTED\000"
 4624      45544543 
 4624      54454400 
 4625              	.LASF78:
 4626 0437 73706565 		.ascii	"speedTimer\000"
 4626      6454696D 
 4626      657200
 4627              	.LASF89:
 4628 0442 70617468 		.ascii	"pathCount\000"
 4628      436F756E 
 4628      7400
 4629              	.LASF99:
 4630 044c 7475726E 		.ascii	"turnFinishedFlag\000"
 4630      46696E69 
 4630      73686564 
 4630      466C6167 
 4630      00
 4631              	.LASF44:
 4632 045d 77616974 		.ascii	"waitForLeftTurn\000"
 4632      466F724C 
 4632      65667454 
 4632      75726E00 
 4633              	.LASF6:
 4634 046d 6C6F6E67 		.ascii	"long long int\000"
 4634      206C6F6E 
 4634      6720696E 
 4634      7400
 4635              	.LASF30:
 4636 047b 67315F78 		.ascii	"g1_xpos\000"
 4636      706F7300 
 4637              	.LASF141:
 4638 0483 626C6F63 		.ascii	"blockSizeTotal\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 99


 4638      6B53697A 
 4638      65546F74 
 4638      616C00
 4639              	.LASF131:
 4640 0492 70726576 		.ascii	"previousOrientation\000"
 4640      696F7573 
 4640      4F726965 
 4640      6E746174 
 4640      696F6E00 
 4641              	.LASF46:
 4642 04a6 75547572 		.ascii	"uTurn\000"
 4642      6E00
 4643              	.LASF105:
 4644 04ac 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4644      436F7572 
 4644      7365436F 
 4644      72726563 
 4644      74696F6E 
 4645              	.LASF75:
 4646 04c8 6E657744 		.ascii	"newDistance\000"
 4646      69737461 
 4646      6E636500 
 4647              	.LASF36:
 4648 04d4 67325F73 		.ascii	"g2_speed\000"
 4648      70656564 
 4648      00
 4649              	.LASF27:
 4650 04dd 67305F79 		.ascii	"g0_ypos\000"
 4650      706F7300 
 4651              	.LASF127:
 4652 04e5 666F6F64 		.ascii	"food_list\000"
 4652      5F6C6973 
 4652      7400
 4653              	.LASF60:
 4654 04ef 5475726E 		.ascii	"TurnLeft\000"
 4654      4C656674 
 4654      00
 4655              	.LASF111:
 4656 04f8 74735F73 		.ascii	"ts_speed\000"
 4656      70656564 
 4656      00
 4657              	.LASF140:
 4658 0501 6A756E63 		.ascii	"junctionConfiguration\000"
 4658      74696F6E 
 4658      436F6E66 
 4658      69677572 
 4658      6174696F 
 4659              	.LASF64:
 4660 0517 556E6B6E 		.ascii	"Unknown\000"
 4660      6F776E00 
 4661              	.LASF16:
 4662 051f 75696E74 		.ascii	"uint32\000"
 4662      333200
 4663              	.LASF45:
 4664 0526 77616974 		.ascii	"waitForRightTurn\000"
 4664      466F7252 
 4664      69676874 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 100


 4664      5475726E 
 4664      00
 4665              	.LASF59:
 4666 0537 5475726E 		.ascii	"TurnRight\000"
 4666      52696768 
 4666      7400
 4667              	.LASF50:
 4668 0541 64617461 		.ascii	"data_main\000"
 4668      5F6D6169 
 4668      6E00
 4669              	.LASF21:
 4670 054b 72737369 		.ascii	"rssi\000"
 4670      00
 4671              	.LASF29:
 4672 0550 67305F64 		.ascii	"g0_direction\000"
 4672      69726563 
 4672      74696F6E 
 4672      00
 4673              	.LASF129:
 4674 055d 70726576 		.ascii	"previousDirection\000"
 4674      696F7573 
 4674      44697265 
 4674      6374696F 
 4674      6E00
 4675              	.LASF68:
 4676 056f 5370696E 		.ascii	"Spin180\000"
 4676      31383000 
 4677              	.LASF9:
 4678 0577 6C6F6E67 		.ascii	"long double\000"
 4678      20646F75 
 4678      626C6500 
 4679              	.LASF115:
 4680 0583 666C6167 		.ascii	"flag_ts_speed\000"
 4680      5F74735F 
 4680      73706565 
 4680      6400
 4681              	.LASF120:
 4682 0591 64617461 		.ascii	"dataready_flag\000"
 4682      72656164 
 4682      795F666C 
 4682      616700
 4683              	.LASF117:
 4684 05a0 666C6167 		.ascii	"flag_rx\000"
 4684      5F727800 
 4685              	.LASF143:
 4686 05a8 79426C6F 		.ascii	"yBlocksize\000"
 4686      636B7369 
 4686      7A6500
 4687              	.LASF2:
 4688 05b3 73686F72 		.ascii	"short int\000"
 4688      7420696E 
 4688      7400
 4689              	.LASF70:
 4690 05bd 53345F44 		.ascii	"S4_DETECTED\000"
 4690      45544543 
 4690      54454400 
 4691              	.LASF4:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 101


 4692 05c9 6C6F6E67 		.ascii	"long int\000"
 4692      20696E74 
 4692      00
 4693              	.LASF108:
 4694 05d2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4694      52784275 
 4694      66666572 
 4694      00
 4695              	.LASF110:
 4696 05df 74735F75 		.ascii	"ts_update\000"
 4696      70646174 
 4696      6500
 4697              	.LASF58:
 4698 05e9 466F7277 		.ascii	"Forward\000"
 4698      61726400 
 4699              	.LASF133:
 4700 05f1 746F7461 		.ascii	"totalMilliseconds\000"
 4700      6C4D696C 
 4700      6C697365 
 4700      636F6E64 
 4700      7300
 4701              	.LASF35:
 4702 0603 67325F79 		.ascii	"g2_ypos\000"
 4702      706F7300 
 4703              	.LASF91:
 4704 060b 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4704      546F4E65 
 4704      7874496E 
 4704      73747275 
 4704      6374696F 
 4705              	.LASF41:
 4706 0621 4F726965 		.ascii	"OrientationState\000"
 4706      6E746174 
 4706      696F6E53 
 4706      74617465 
 4706      00
 4707              	.LASF38:
 4708 0632 446F776E 		.ascii	"Down\000"
 4708      00
 4709              	.LASF40:
 4710 0637 52696768 		.ascii	"Right\000"
 4710      7400
 4711              	.LASF31:
 4712 063d 67315F79 		.ascii	"g1_ypos\000"
 4712      706F7300 
 4713              	.LASF128:
 4714 0645 63757272 		.ascii	"currentDirection\000"
 4714      656E7444 
 4714      69726563 
 4714      74696F6E 
 4714      00
 4715              	.LASF101:
 4716 0656 75547572 		.ascii	"uTurnStartedFlag\000"
 4716      6E537461 
 4716      72746564 
 4716      466C6167 
 4716      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 102


 4717              	.LASF148:
 4718 0667 6C617374 		.ascii	"lastDirectionAfter180\000"
 4718      44697265 
 4718      6374696F 
 4718      6E416674 
 4718      65723138 
 4719              	.LASF10:
 4720 067d 73697A65 		.ascii	"sizetype\000"
 4720      74797065 
 4720      00
 4721              	.LASF5:
 4722 0686 6C6F6E67 		.ascii	"long unsigned int\000"
 4722      20756E73 
 4722      69676E65 
 4722      6420696E 
 4722      7400
 4723              	.LASF139:
 4724 0698 73746F70 		.ascii	"stopBuffer\000"
 4724      42756666 
 4724      657200
 4725              	.LASF102:
 4726 06a3 75547572 		.ascii	"uTurnFinishedFlag\000"
 4726      6E46696E 
 4726      69736865 
 4726      64466C61 
 4726      6700
 4727              	.LASF13:
 4728 06b5 696E7433 		.ascii	"int32_t\000"
 4728      325F7400 
 4729              	.LASF23:
 4730 06bd 726F626F 		.ascii	"robot_xpos\000"
 4730      745F7870 
 4730      6F7300
 4731              	.LASF124:
 4732 06c8 656E7472 		.ascii	"entry\000"
 4732      7900
 4733              	.LASF57:
 4734 06ce 526F626F 		.ascii	"RobotMovement\000"
 4734      744D6F76 
 4734      656D656E 
 4734      7400
 4735              	.LASF1:
 4736 06dc 756E7369 		.ascii	"unsigned char\000"
 4736      676E6564 
 4736      20636861 
 4736      7200
 4737              	.LASF146:
 4738 06ea 73746F70 		.ascii	"stoppedAfterTurn\000"
 4738      70656441 
 4738      66746572 
 4738      5475726E 
 4738      00
 4739              	.LASF123:
 4740 06fb 6C696E65 		.ascii	"line\000"
 4740      00
 4741              	.LASF83:
 4742 0700 43616C63 		.ascii	"CalculateDistanceToTravel\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 103


 4742      756C6174 
 4742      65446973 
 4742      74616E63 
 4742      65546F54 
 4743              	.LASF62:
 4744 071a 41646A75 		.ascii	"AdjustToTheRight\000"
 4744      7374546F 
 4744      54686552 
 4744      69676874 
 4744      00
 4745              	.LASF63:
 4746 072b 53746F70 		.ascii	"Stop\000"
 4746      00
 4747              	.LASF92:
 4748 0730 47657449 		.ascii	"GetInstructionAtIndex\000"
 4748      6E737472 
 4748      75637469 
 4748      6F6E4174 
 4748      496E6465 
 4749              	.LASF109:
 4750 0746 74735F65 		.ascii	"ts_enc\000"
 4750      6E6300
 4751              	.LASF116:
 4752 074d 666C6167 		.ascii	"flag_ts_display\000"
 4752      5F74735F 
 4752      64697370 
 4752      6C617900 
 4753              	.LASF106:
 4754 075d 63757272 		.ascii	"currentIgnoreL\000"
 4754      656E7449 
 4754      676E6F72 
 4754      654C00
 4755              	.LASF107:
 4756 076c 63757272 		.ascii	"currentIgnoreR\000"
 4756      656E7449 
 4756      676E6F72 
 4756      655200
 4757              	.LASF49:
 4758 077b 536B6970 		.ascii	"Skip\000"
 4758      00
 4759              	.LASF122:
 4760 0780 64697370 		.ascii	"displaystring\000"
 4760      6C617973 
 4760      7472696E 
 4760      6700
 4761              	.LASF43:
 4762 078e 476F466F 		.ascii	"GoForward\000"
 4762      72776172 
 4762      6400
 4763              	.LASF71:
 4764 0798 53355F44 		.ascii	"S5_DETECTED\000"
 4764      45544543 
 4764      54454400 
 4765              	.LASF0:
 4766 07a4 7369676E 		.ascii	"signed char\000"
 4766      65642063 
 4766      68617200 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 104


 4767              	.LASF144:
 4768 07b0 63757272 		.ascii	"currentRow\000"
 4768      656E7452 
 4768      6F7700
 4769              	.LASF3:
 4770 07bb 73686F72 		.ascii	"short unsigned int\000"
 4770      7420756E 
 4770      7369676E 
 4770      65642069 
 4770      6E7400
 4771              	.LASF25:
 4772 07ce 726F626F 		.ascii	"robot_orientation\000"
 4772      745F6F72 
 4772      69656E74 
 4772      6174696F 
 4772      6E00
 4773              	.LASF74:
 4774 07e0 6D61696E 		.ascii	"main\000"
 4774      00
 4775              	.LASF132:
 4776 07e5 63757272 		.ascii	"currentInstruction\000"
 4776      656E7449 
 4776      6E737472 
 4776      75637469 
 4776      6F6E00
 4777              	.LASF61:
 4778 07f8 41646A75 		.ascii	"AdjustToTheLeft\000"
 4778      7374546F 
 4778      5468654C 
 4778      65667400 
 4779              	.LASF67:
 4780 0808 4261636B 		.ascii	"Backward\000"
 4780      77617264 
 4780      00
 4781              	.LASF14:
 4782 0811 75696E74 		.ascii	"uint8\000"
 4782      3800
 4783              	.LASF20:
 4784 0817 646F7562 		.ascii	"double\000"
 4784      6C6500
 4785              	.LASF145:
 4786 081e 63757272 		.ascii	"currentCol\000"
 4786      656E7443 
 4786      6F6C00
 4787              	.LASF86:
 4788 0829 746F7461 		.ascii	"totalBlockSize\000"
 4788      6C426C6F 
 4788      636B5369 
 4788      7A6500
 4789              	.LASF26:
 4790 0838 67305F78 		.ascii	"g0_xpos\000"
 4790      706F7300 
 4791              	.LASF137:
 4792 0840 74696D65 		.ascii	"timerInt\000"
 4792      72496E74 
 4792      00
 4793              	.LASF119:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccX3JFUG.s 			page 105


 4794 0849 666C6167 		.ascii	"flag_KB_string\000"
 4794      5F4B425F 
 4794      73747269 
 4794      6E6700
 4795              	.LASF32:
 4796 0858 67315F73 		.ascii	"g1_speed\000"
 4796      70656564 
 4796      00
 4797              	.LASF53:
 4798 0861 69676E6F 		.ascii	"ignoreL\000"
 4798      72654C00 
 4799              	.LASF54:
 4800 0869 69676E6F 		.ascii	"ignoreR\000"
 4800      72655200 
 4801              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
