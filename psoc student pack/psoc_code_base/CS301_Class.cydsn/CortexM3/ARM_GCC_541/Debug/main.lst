ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              		.global	forwardBuffer
 173              		.align	1
 174              		.type	forwardBuffer, %object
 175              		.size	forwardBuffer, 2
 176              	forwardBuffer:
 177 0034 0000     		.space	2
 178              	turnStartedFlag:
 179 0036 00       		.space	1
 180              	turnFinishedFlag:
 181 0037 00       		.space	1
 182              	forwardUntilTargetStartedFlag:
 183 0038 00       		.space	1
 184              	uTurnStartedFlag:
 185 0039 00       		.space	1
 186              	uTurnFinishedFlag:
 187 003a 00       		.space	1
 188              	leftStatusFlag:
 189 003b 00       		.space	1
 190              	rightStatusFlag:
 191 003c 00       		.space	1
 192              	spinCourseCorrectionStarted:
 193 003d 00       		.space	1
 194              	currentIgnoreL:
 195 003e 00       		.space	1
 196              		.data
 197              		.type	currentIgnoreR, %object
 198              		.size	currentIgnoreR, 1
 199              	currentIgnoreR:
 200 0045 01       		.byte	1
 201              		.bss
 202              	totalLineCount:
 203 003f 00       		.space	1
 204              	lineCount:
 205 0040 00       		.space	1
 206              	onLineFlag:
 207 0041 00       		.space	1
 208              	tooEarlyFlag:
 209 0042 00       		.space	1
 210              	tooLateFlag:
 211 0043 00       		.space	1
 212              		.global	junctionConfiguration
 213              		.align	2
 214              		.type	junctionConfiguration, %object
 215              		.size	junctionConfiguration, 4
 216              	junctionConfiguration:
 217 0044 00000000 		.space	4
 218              		.global	currentFoodListIndex
 219              		.type	currentFoodListIndex, %object
 220              		.size	currentFoodListIndex, 1
 221              	currentFoodListIndex:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 5


 222 0048 00       		.space	1
 223              		.global	blockSizeTotal
 224 0049 000000   		.align	2
 225              		.type	blockSizeTotal, %object
 226              		.size	blockSizeTotal, 4
 227              	blockSizeTotal:
 228 004c 00000000 		.space	4
 229              		.global	__aeabi_i2d
 230              		.global	__aeabi_dmul
 231              		.global	__aeabi_ddiv
 232              		.global	__aeabi_d2f
 233              		.global	__aeabi_fadd
 234              		.section	.text.speedTimer,"ax",%progbits
 235              		.align	2
 236              		.global	speedTimer
 237              		.thumb
 238              		.thumb_func
 239              		.type	speedTimer, %function
 240              	speedTimer:
 241              	.LFB64:
 242              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 6


  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint16 forwardBuffer = 0;
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** void RotateClockwise180Degrees();
  67:main.c        **** 
  68:main.c        **** volatile static uint8 totalLineCount = 0;
  69:main.c        **** volatile static uint8 lineCount = 0;
  70:main.c        **** volatile static uint8 onLineFlag = 0;
  71:main.c        **** 
  72:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  73:main.c        **** volatile static uint8 tooLateFlag = 0;
  74:main.c        **** 
  75:main.c        **** uint8 junctionConfiguration[4] = {0};
  76:main.c        **** uint8 currentFoodListIndex = 0;
  77:main.c        **** 
  78:main.c        **** float blockSizeTotal = 0;
  79:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  80:main.c        **** 
  81:main.c        **** CY_ISR (speedTimer) {
 243              		.loc 1 81 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 90B5     		push	{r4, r7, lr}
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 7


 255              		.cfi_def_cfa_register 7
  82:main.c        ****     timerInt = 1;
 256              		.loc 1 82 0
 257 0006 344B     		ldr	r3, .L4+16
 258 0008 0122     		movs	r2, #1
 259 000a 1A60     		str	r2, [r3]
  83:main.c        ****     //quadDec_M1 used for turning macros
  84:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 260              		.loc 1 84 0
 261 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 262 0010 0346     		mov	r3, r0
 263 0012 1A46     		mov	r2, r3
 264 0014 314B     		ldr	r3, .L4+20
 265 0016 1A60     		str	r2, [r3]
  85:main.c        ****     
  86:main.c        ****     if ((currentDirection == Forward || 
 266              		.loc 1 86 0
 267 0018 314B     		ldr	r3, .L4+24
 268 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 001c 002B     		cmp	r3, #0
 270 001e 13D0     		beq	.L2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 271              		.loc 1 87 0 discriminator 1
 272 0020 2F4B     		ldr	r3, .L4+24
 273 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  86:main.c        ****         currentDirection == ForwardAfterTurn ||
 274              		.loc 1 86 0 discriminator 1
 275 0024 082B     		cmp	r3, #8
 276 0026 0FD0     		beq	.L2
  88:main.c        ****         currentDirection == waitForTurn || 
 277              		.loc 1 88 0
 278 0028 2D4B     		ldr	r3, .L4+24
 279 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87:main.c        ****         currentDirection == ForwardAfterTurn ||
 280              		.loc 1 87 0
 281 002c 072B     		cmp	r3, #7
 282 002e 0BD0     		beq	.L2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 283              		.loc 1 89 0
 284 0030 2B4B     		ldr	r3, .L4+24
 285 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****         currentDirection == waitForTurn || 
 286              		.loc 1 88 0
 287 0034 032B     		cmp	r3, #3
 288 0036 07D0     		beq	.L2
  90:main.c        ****         currentDirection == AdjustToTheRight ||
 289              		.loc 1 90 0
 290 0038 294B     		ldr	r3, .L4+24
 291 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:main.c        ****         currentDirection == AdjustToTheLeft ||
 292              		.loc 1 89 0
 293 003c 042B     		cmp	r3, #4
 294 003e 03D0     		beq	.L2
  91:main.c        ****         currentDirection == Backward) &&
 295              		.loc 1 91 0
 296 0040 274B     		ldr	r3, .L4+24
 297 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 8


  90:main.c        ****         currentDirection == AdjustToTheRight ||
 298              		.loc 1 90 0
 299 0044 092B     		cmp	r3, #9
 300 0046 34D1     		bne	.L3
 301              	.L2:
  92:main.c        ****         quadDec2Count != 0) {
 302              		.loc 1 92 0
 303 0048 244B     		ldr	r3, .L4+20
 304 004a 1B68     		ldr	r3, [r3]
  91:main.c        ****         currentDirection == Backward) &&
 305              		.loc 1 91 0
 306 004c 002B     		cmp	r3, #0
 307 004e 30D0     		beq	.L3
 308              	.LBB2:
  93:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  94:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 309              		.loc 1 94 0
 310 0050 224B     		ldr	r3, .L4+20
 311 0052 1B68     		ldr	r3, [r3]
 312 0054 002B     		cmp	r3, #0
 313 0056 B8BF     		it	lt
 314 0058 5B42     		rsblt	r3, r3, #0
 315 005a 1846     		mov	r0, r3
 316 005c FFF7FEFF 		bl	__aeabi_i2d
 317 0060 19A3     		adr	r3, .L4
 318 0062 D3E90023 		ldrd	r2, [r3]
 319 0066 FFF7FEFF 		bl	__aeabi_dmul
 320 006a 0346     		mov	r3, r0
 321 006c 0C46     		mov	r4, r1
 322 006e 1846     		mov	r0, r3
 323 0070 2146     		mov	r1, r4
 324 0072 17A3     		adr	r3, .L4+8
 325 0074 D3E90023 		ldrd	r2, [r3]
 326 0078 FFF7FEFF 		bl	__aeabi_dmul
 327 007c 0346     		mov	r3, r0
 328 007e 0C46     		mov	r4, r1
 329 0080 1846     		mov	r0, r3
 330 0082 2146     		mov	r1, r4
 331 0084 4FF00002 		mov	r2, #0
 332 0088 164B     		ldr	r3, .L4+28
 333 008a FFF7FEFF 		bl	__aeabi_ddiv
 334 008e 0346     		mov	r3, r0
 335 0090 0C46     		mov	r4, r1
 336 0092 1846     		mov	r0, r3
 337 0094 2146     		mov	r1, r4
 338 0096 FFF7FEFF 		bl	__aeabi_d2f
 339 009a 0346     		mov	r3, r0
 340 009c 7B60     		str	r3, [r7, #4]	@ float
  95:main.c        ****         
  96:main.c        ****         totalDistance = totalDistance + newDistance;
 341              		.loc 1 96 0
 342 009e 124B     		ldr	r3, .L4+32
 343 00a0 1B68     		ldr	r3, [r3]	@ float
 344 00a2 7968     		ldr	r1, [r7, #4]	@ float
 345 00a4 1846     		mov	r0, r3
 346 00a6 FFF7FEFF 		bl	__aeabi_fadd
 347 00aa 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 9


 348 00ac 1A46     		mov	r2, r3
 349 00ae 0E4B     		ldr	r3, .L4+32
 350 00b0 1A60     		str	r2, [r3]	@ float
 351              	.L3:
 352              	.LBE2:
  97:main.c        ****     }
  98:main.c        ****     
  99:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 353              		.loc 1 99 0
 354 00b2 0020     		movs	r0, #0
 355 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 100:main.c        ****     QuadDec_M2_Start(); // restart counter
 356              		.loc 1 100 0
 357 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 101:main.c        ****     
 102:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 358              		.loc 1 102 0
 359 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 103:main.c        **** }
 360              		.loc 1 103 0
 361 00c0 00BF     		nop
 362 00c2 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 12
 364 00c4 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 00c6 90BD     		pop	{r4, r7, pc}
 368              	.L5:
 369              		.align	3
 370              	.L4:
 371 00c8 182D4454 		.word	1413754136
 372 00cc FB210940 		.word	1074340347
 373 00d0 00000000 		.word	0
 374 00d4 00205040 		.word	1078992896
 375 00d8 00000000 		.word	timerInt
 376 00dc 00000000 		.word	quadDec2Count
 377 00e0 00000000 		.word	currentDirection
 378 00e4 00806C40 		.word	1080852480
 379 00e8 00000000 		.word	totalDistance
 380              		.cfi_endproc
 381              	.LFE64:
 382              		.size	speedTimer, .-speedTimer
 383              		.section	.text.S3_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S3_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S3_DETECTED, %function
 389              	S3_DETECTED:
 390              	.LFB65:
 104:main.c        **** 
 105:main.c        **** CY_ISR(S3_DETECTED) {
 391              		.loc 1 105 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 10


 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 106:main.c        ****     // Sensor has detected WHITE
 107:main.c        ****     s3 = 1; // , Black = 0, White = 1
 401              		.loc 1 107 0
 402 0004 034B     		ldr	r3, .L7
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
 108:main.c        ****     //LED_Write(1u);
 109:main.c        **** }
 405              		.loc 1 109 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L8:
 415 0012 00BF     		.align	2
 416              	.L7:
 417 0014 00000000 		.word	s3
 418              		.cfi_endproc
 419              	.LFE65:
 420              		.size	S3_DETECTED, .-S3_DETECTED
 421              		.section	.text.S4_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S4_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S4_DETECTED, %function
 427              	S4_DETECTED:
 428              	.LFB66:
 110:main.c        **** 
 111:main.c        **** CY_ISR(S4_DETECTED) {
 429              		.loc 1 111 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 112:main.c        ****     // Sensor has detected WHITE
 113:main.c        ****     s4 = 1; // , Black = 0, White = 1
 439              		.loc 1 113 0
 440 0004 034B     		ldr	r3, .L10
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
 114:main.c        ****     //LED_Write(1u);
 115:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 11


 443              		.loc 1 115 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L11:
 453 0012 00BF     		.align	2
 454              	.L10:
 455 0014 00000000 		.word	s4
 456              		.cfi_endproc
 457              	.LFE66:
 458              		.size	S4_DETECTED, .-S4_DETECTED
 459              		.section	.text.S5_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S5_DETECTED
 462              		.thumb
 463              		.thumb_func
 464              		.type	S5_DETECTED, %function
 465              	S5_DETECTED:
 466              	.LFB67:
 116:main.c        **** 
 117:main.c        **** CY_ISR(S5_DETECTED) {
 467              		.loc 1 117 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 118:main.c        ****     // Sensor has detected WHITE
 119:main.c        ****     s5 = 1; // , Black = 0, White = 1
 477              		.loc 1 119 0
 478 0004 034B     		ldr	r3, .L13
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 120:main.c        ****     //LED_Write(1u);
 121:main.c        **** }
 481              		.loc 1 121 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L14:
 491 0012 00BF     		.align	2
 492              	.L13:
 493 0014 00000000 		.word	s5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 12


 494              		.cfi_endproc
 495              	.LFE67:
 496              		.size	S5_DETECTED, .-S5_DETECTED
 497              		.section	.text.S6_DETECTED,"ax",%progbits
 498              		.align	2
 499              		.global	S6_DETECTED
 500              		.thumb
 501              		.thumb_func
 502              		.type	S6_DETECTED, %function
 503              	S6_DETECTED:
 504              	.LFB68:
 122:main.c        **** 
 123:main.c        **** CY_ISR(S6_DETECTED) {
 505              		.loc 1 123 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 124:main.c        ****     // Sensor has detected WHITE
 125:main.c        ****     s6 = 1; // , Black = 0, White = 1
 515              		.loc 1 125 0
 516 0004 034B     		ldr	r3, .L16
 517 0006 0122     		movs	r2, #1
 518 0008 1A70     		strb	r2, [r3]
 126:main.c        ****     //LED_Write(1u);
 127:main.c        **** }
 519              		.loc 1 127 0
 520 000a 00BF     		nop
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L17:
 529 0012 00BF     		.align	2
 530              	.L16:
 531 0014 00000000 		.word	s6
 532              		.cfi_endproc
 533              	.LFE68:
 534              		.size	S6_DETECTED, .-S6_DETECTED
 535              		.section	.text.TIMER_FINISH,"ax",%progbits
 536              		.align	2
 537              		.global	TIMER_FINISH
 538              		.thumb
 539              		.thumb_func
 540              		.type	TIMER_FINISH, %function
 541              	TIMER_FINISH:
 542              	.LFB69:
 128:main.c        **** 
 129:main.c        **** CY_ISR(TIMER_FINISH) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 13


 543              		.loc 1 129 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 130:main.c        ****     if (currentDirection == Stop) {
 553              		.loc 1 130 0
 554 0004 154B     		ldr	r3, .L24
 555 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0008 052B     		cmp	r3, #5
 557 000a 05D1     		bne	.L19
 131:main.c        ****         stopBuffer = stopBuffer + 1;
 558              		.loc 1 131 0
 559 000c 144B     		ldr	r3, .L24+4
 560 000e 1B68     		ldr	r3, [r3]
 561 0010 0133     		adds	r3, r3, #1
 562 0012 134A     		ldr	r2, .L24+4
 563 0014 1360     		str	r3, [r2]
 564 0016 02E0     		b	.L20
 565              	.L19:
 132:main.c        ****     } else {
 133:main.c        ****         stopBuffer = 0;
 566              		.loc 1 133 0
 567 0018 114B     		ldr	r3, .L24+4
 568 001a 0022     		movs	r2, #0
 569 001c 1A60     		str	r2, [r3]
 570              	.L20:
 134:main.c        ****     }
 135:main.c        ****     if (currentDirection == Forward || currentDirection == AdjustToTheLeft || currentDirection ==  
 571              		.loc 1 135 0
 572 001e 0F4B     		ldr	r3, .L24
 573 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0022 002B     		cmp	r3, #0
 575 0024 07D0     		beq	.L21
 576              		.loc 1 135 0 is_stmt 0 discriminator 1
 577 0026 0D4B     		ldr	r3, .L24
 578 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 002a 032B     		cmp	r3, #3
 580 002c 03D0     		beq	.L21
 581              		.loc 1 135 0 discriminator 2
 582 002e 0B4B     		ldr	r3, .L24
 583 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0032 042B     		cmp	r3, #4
 585 0034 06D1     		bne	.L22
 586              	.L21:
 136:main.c        ****         forwardBuffer = forwardBuffer + 1;
 587              		.loc 1 136 0 is_stmt 1
 588 0036 0B4B     		ldr	r3, .L24+8
 589 0038 1B88     		ldrh	r3, [r3]
 590 003a 0133     		adds	r3, r3, #1
 591 003c 9AB2     		uxth	r2, r3
 592 003e 094B     		ldr	r3, .L24+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 14


 593 0040 1A80     		strh	r2, [r3]	@ movhi
 594 0042 02E0     		b	.L23
 595              	.L22:
 137:main.c        ****     } else {
 138:main.c        ****         forwardBuffer = 0;    
 596              		.loc 1 138 0
 597 0044 074B     		ldr	r3, .L24+8
 598 0046 0022     		movs	r2, #0
 599 0048 1A80     		strh	r2, [r3]	@ movhi
 600              	.L23:
 139:main.c        ****     }
 140:main.c        ****     SetRobotMovement(); 
 601              		.loc 1 140 0
 602 004a FFF7FEFF 		bl	SetRobotMovement
 141:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 603              		.loc 1 141 0
 604 004e FFF7FEFF 		bl	ResetSensorFlags
 142:main.c        ****     Timer_LED_ReadStatusRegister();
 605              		.loc 1 142 0
 606 0052 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 143:main.c        **** }
 607              		.loc 1 143 0
 608 0056 00BF     		nop
 609 0058 80BD     		pop	{r7, pc}
 610              	.L25:
 611 005a 00BF     		.align	2
 612              	.L24:
 613 005c 00000000 		.word	currentDirection
 614 0060 00000000 		.word	stopBuffer
 615 0064 00000000 		.word	forwardBuffer
 616              		.cfi_endproc
 617              	.LFE69:
 618              		.size	TIMER_FINISH, .-TIMER_FINISH
 619              		.section	.text.main,"ax",%progbits
 620              		.align	2
 621              		.global	main
 622              		.thumb
 623              		.thumb_func
 624              		.type	main, %function
 625              	main:
 626              	.LFB70:
 144:main.c        **** 
 145:main.c        **** 
 146:main.c        **** int main() {
 627              		.loc 1 146 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 24
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 B0B5     		push	{r4, r5, r7, lr}
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 4, -16
 634              		.cfi_offset 5, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 86B0     		sub	sp, sp, #24
 638              		.cfi_def_cfa_offset 40
 639 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 15


 640              		.cfi_def_cfa_register 7
 147:main.c        **** // ----- INITIALIZATIONS ----------
 148:main.c        ****     CYGlobalIntEnable;
 641              		.loc 1 148 0
 642              		.syntax unified
 643              	@ 148 "main.c" 1
 644 0006 62B6     		CPSIE   i
 645              	@ 0 "" 2
 149:main.c        ****     ResetSensorFlags();
 646              		.loc 1 149 0
 647              		.thumb
 648              		.syntax unified
 649 0008 FFF7FEFF 		bl	ResetSensorFlags
 150:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 650              		.loc 1 150 0
 651 000c FFF7FEFF 		bl	init
 151:main.c        ****     
 152:main.c        ****     instructionList = findPath(map, food_list, currentFoodListIndex);
 652              		.loc 1 152 0
 653 0010 334B     		ldr	r3, .L30
 654 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 0014 1A46     		mov	r2, r3
 656 0016 3349     		ldr	r1, .L30+4
 657 0018 3348     		ldr	r0, .L30+8
 658 001a FFF7FEFF 		bl	findPath
 659 001e 0246     		mov	r2, r0
 660 0020 324B     		ldr	r3, .L30+12
 661 0022 1A60     		str	r2, [r3]
 153:main.c        ****     numSteps = instructionsListLength();
 662              		.loc 1 153 0
 663 0024 FFF7FEFF 		bl	instructionsListLength
 664 0028 0346     		mov	r3, r0
 665 002a 1A46     		mov	r2, r3
 666 002c 304B     		ldr	r3, .L30+16
 667 002e 1A60     		str	r2, [r3]
 154:main.c        ****     
 155:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps);
 668              		.loc 1 155 0
 669 0030 2F4B     		ldr	r3, .L30+16
 670 0032 1A68     		ldr	r2, [r3]
 671 0034 2F4C     		ldr	r4, .L30+20
 672 0036 3B46     		mov	r3, r7
 673 0038 1146     		mov	r1, r2
 674 003a 1846     		mov	r0, r3
 675 003c FFF7FEFF 		bl	GetInstructionAtIndex
 676 0040 2546     		mov	r5, r4
 677 0042 3C46     		mov	r4, r7
 678 0044 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 679 0046 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 680 0048 2368     		ldr	r3, [r4]
 681 004a 2B60     		str	r3, [r5]
 156:main.c        ****     
 157:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 682              		.loc 1 157 0
 683 004c 274B     		ldr	r3, .L30+12
 684 004e 1968     		ldr	r1, [r3]
 685 0050 294B     		ldr	r3, .L30+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 16


 686 0052 1A68     		ldr	r2, [r3]
 687 0054 1346     		mov	r3, r2
 688 0056 9B00     		lsls	r3, r3, #2
 689 0058 1344     		add	r3, r3, r2
 690 005a 9B00     		lsls	r3, r3, #2
 691 005c 0B44     		add	r3, r3, r1
 692 005e 5B68     		ldr	r3, [r3, #4]
 693 0060 DAB2     		uxtb	r2, r3
 694 0062 264B     		ldr	r3, .L30+28
 695 0064 1A70     		strb	r2, [r3]
 158:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 696              		.loc 1 158 0
 697 0066 214B     		ldr	r3, .L30+12
 698 0068 1968     		ldr	r1, [r3]
 699 006a 234B     		ldr	r3, .L30+24
 700 006c 1A68     		ldr	r2, [r3]
 701 006e 1346     		mov	r3, r2
 702 0070 9B00     		lsls	r3, r3, #2
 703 0072 1344     		add	r3, r3, r2
 704 0074 9B00     		lsls	r3, r3, #2
 705 0076 0B44     		add	r3, r3, r1
 706 0078 9B68     		ldr	r3, [r3, #8]
 707 007a DAB2     		uxtb	r2, r3
 708 007c 204B     		ldr	r3, .L30+32
 709 007e 1A70     		strb	r2, [r3]
 159:main.c        ****     
 160:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 710              		.loc 1 160 0
 711 0080 2048     		ldr	r0, .L30+36
 712 0082 FFF7FEFF 		bl	isr_speed_StartEx
 161:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 713              		.loc 1 161 0
 714 0086 2048     		ldr	r0, .L30+40
 715 0088 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 162:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 716              		.loc 1 162 0
 717 008c 1F48     		ldr	r0, .L30+44
 718 008e FFF7FEFF 		bl	S3_detected_StartEx
 163:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 719              		.loc 1 163 0
 720 0092 1F48     		ldr	r0, .L30+48
 721 0094 FFF7FEFF 		bl	S4_detected_StartEx
 164:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 722              		.loc 1 164 0
 723 0098 1E48     		ldr	r0, .L30+52
 724 009a FFF7FEFF 		bl	S5_detected_StartEx
 165:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 725              		.loc 1 165 0
 726 009e 1E48     		ldr	r0, .L30+56
 727 00a0 FFF7FEFF 		bl	S6_detected_StartEx
 166:main.c        ****     Timer_LED_Start();
 728              		.loc 1 166 0
 729 00a4 FFF7FEFF 		bl	Timer_LED_Start
 167:main.c        **** 
 168:main.c        ****     
 169:main.c        **** // ------USB SETUP ----------------    
 170:main.c        **** #ifdef USE_USB    
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 17


 171:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 730              		.loc 1 171 0
 731 00a8 0121     		movs	r1, #1
 732 00aa 0020     		movs	r0, #0
 733 00ac FFF7FEFF 		bl	USBUART_Start
 172:main.c        **** #endif        
 173:main.c        ****     RF_BT_SELECT_Write(0);
 734              		.loc 1 173 0
 735 00b0 0020     		movs	r0, #0
 736 00b2 FFF7FEFF 		bl	RF_BT_SELECT_Write
 737              	.L29:
 174:main.c        ****     
 175:main.c        ****     //usbPutString("Initialised UART");
 176:main.c        ****     for(;;)
 177:main.c        ****     {
 178:main.c        ****         if(timerInt == 1) {
 738              		.loc 1 178 0
 739 00b6 194B     		ldr	r3, .L30+60
 740 00b8 1B68     		ldr	r3, [r3]
 741 00ba 012B     		cmp	r3, #1
 742 00bc 08D1     		bne	.L27
 179:main.c        ****             timerInt = 0;
 743              		.loc 1 179 0
 744 00be 174B     		ldr	r3, .L30+60
 745 00c0 0022     		movs	r2, #0
 746 00c2 1A60     		str	r2, [r3]
 180:main.c        ****             // calculate RPM of M2
 181:main.c        ****             quadCountToRPM(quadDec2Count);
 747              		.loc 1 181 0
 748 00c4 164B     		ldr	r3, .L30+64
 749 00c6 1B68     		ldr	r3, [r3]
 750 00c8 9BB2     		uxth	r3, r3
 751 00ca 1846     		mov	r0, r3
 752 00cc FFF7FEFF 		bl	quadCountToRPM
 753              	.L27:
 182:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 183:main.c        ****             //usbPutString(buffer);
 184:main.c        ****             //usbPutString(" ");
 185:main.c        ****         }
 186:main.c        ****         //handle_usb();
 187:main.c        ****         if (flag_KB_string == 1)
 754              		.loc 1 187 0
 755 00d0 144B     		ldr	r3, .L30+68
 756 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 757 00d4 012B     		cmp	r3, #1
 758 00d6 EED1     		bne	.L29
 188:main.c        ****         {
 189:main.c        ****             //usbPutString("Total Distance: ");
 190:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 191:main.c        ****             //usbPutString(buffer);
 192:main.c        ****             flag_KB_string = 0;
 759              		.loc 1 192 0
 760 00d8 124B     		ldr	r3, .L30+68
 761 00da 0022     		movs	r2, #0
 762 00dc 1A70     		strb	r2, [r3]
 193:main.c        ****         }           
 194:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 18


 763              		.loc 1 194 0
 764 00de EAE7     		b	.L29
 765              	.L31:
 766              		.align	2
 767              	.L30:
 768 00e0 00000000 		.word	currentFoodListIndex
 769 00e4 00000000 		.word	food_list
 770 00e8 00000000 		.word	map
 771 00ec 00000000 		.word	instructionList
 772 00f0 00000000 		.word	numSteps
 773 00f4 00000000 		.word	currentInstruction
 774 00f8 14000000 		.word	instructionIndex
 775 00fc 3E000000 		.word	currentIgnoreL
 776 0100 45000000 		.word	currentIgnoreR
 777 0104 00000000 		.word	speedTimer
 778 0108 00000000 		.word	TIMER_FINISH
 779 010c 00000000 		.word	S3_DETECTED
 780 0110 00000000 		.word	S4_DETECTED
 781 0114 00000000 		.word	S5_DETECTED
 782 0118 00000000 		.word	S6_DETECTED
 783 011c 00000000 		.word	timerInt
 784 0120 00000000 		.word	quadDec2Count
 785 0124 00000000 		.word	flag_KB_string
 786              		.cfi_endproc
 787              	.LFE70:
 788              		.size	main, .-main
 789              		.global	__aeabi_fmul
 790              		.global	__aeabi_f2iz
 791              		.section	.text.quadCountToRPM,"ax",%progbits
 792              		.align	2
 793              		.global	quadCountToRPM
 794              		.thumb
 795              		.thumb_func
 796              		.type	quadCountToRPM, %function
 797              	quadCountToRPM:
 798              	.LFB71:
 195:main.c        ****     return 0;
 196:main.c        **** }
 197:main.c        **** 
 198:main.c        **** // Calculations
 199:main.c        **** //* ========================================
 200:main.c        **** int16 quadCountToRPM(uint16 count) {
 799              		.loc 1 200 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 16
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803 0000 90B5     		push	{r4, r7, lr}
 804              		.cfi_def_cfa_offset 12
 805              		.cfi_offset 4, -12
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 85B0     		sub	sp, sp, #20
 809              		.cfi_def_cfa_offset 32
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 0346     		mov	r3, r0
 813 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 19


 201:main.c        ****     float cps = count/57.00;
 814              		.loc 1 201 0
 815 000a FB88     		ldrh	r3, [r7, #6]
 816 000c 1846     		mov	r0, r3
 817 000e FFF7FEFF 		bl	__aeabi_i2d
 818 0012 4FF00002 		mov	r2, #0
 819 0016 0D4B     		ldr	r3, .L34
 820 0018 FFF7FEFF 		bl	__aeabi_ddiv
 821 001c 0346     		mov	r3, r0
 822 001e 0C46     		mov	r4, r1
 823 0020 1846     		mov	r0, r3
 824 0022 2146     		mov	r1, r4
 825 0024 FFF7FEFF 		bl	__aeabi_d2f
 826 0028 0346     		mov	r3, r0
 827 002a FB60     		str	r3, [r7, #12]	@ float
 202:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 828              		.loc 1 202 0
 829 002c 0849     		ldr	r1, .L34+4
 830 002e F868     		ldr	r0, [r7, #12]	@ float
 831 0030 FFF7FEFF 		bl	__aeabi_fmul
 832 0034 0346     		mov	r3, r0
 833 0036 1846     		mov	r0, r3
 834 0038 FFF7FEFF 		bl	__aeabi_f2iz
 835 003c 0346     		mov	r3, r0
 836 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 203:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 204:main.c        ****     return rpm;
 837              		.loc 1 204 0
 838 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 205:main.c        ****     //usbPutString(buffer);
 206:main.c        ****     //usbPutString("rpm ");
 207:main.c        **** }
 839              		.loc 1 207 0
 840 0044 1846     		mov	r0, r3
 841 0046 1437     		adds	r7, r7, #20
 842              		.cfi_def_cfa_offset 12
 843 0048 BD46     		mov	sp, r7
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 004a 90BD     		pop	{r4, r7, pc}
 847              	.L35:
 848              		.align	2
 849              	.L34:
 850 004c 00804C40 		.word	1078755328
 851 0050 00007041 		.word	1097859072
 852              		.cfi_endproc
 853              	.LFE71:
 854              		.size	quadCountToRPM, .-quadCountToRPM
 855              		.section	.text.ResetSensorFlags,"ax",%progbits
 856              		.align	2
 857              		.global	ResetSensorFlags
 858              		.thumb
 859              		.thumb_func
 860              		.type	ResetSensorFlags, %function
 861              	ResetSensorFlags:
 862              	.LFB72:
 208:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 20


 209:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 210:main.c        **** void ResetSensorFlags() {
 863              		.loc 1 210 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 868 0000 80B4     		push	{r7}
 869              		.cfi_def_cfa_offset 4
 870              		.cfi_offset 7, -4
 871 0002 00AF     		add	r7, sp, #0
 872              		.cfi_def_cfa_register 7
 211:main.c        ****     s3 = 0;
 873              		.loc 1 211 0
 874 0004 074B     		ldr	r3, .L37
 875 0006 0022     		movs	r2, #0
 876 0008 1A70     		strb	r2, [r3]
 212:main.c        ****     s4 = 0;
 877              		.loc 1 212 0
 878 000a 074B     		ldr	r3, .L37+4
 879 000c 0022     		movs	r2, #0
 880 000e 1A70     		strb	r2, [r3]
 213:main.c        ****     s5 = 0;
 881              		.loc 1 213 0
 882 0010 064B     		ldr	r3, .L37+8
 883 0012 0022     		movs	r2, #0
 884 0014 1A70     		strb	r2, [r3]
 214:main.c        ****     s6 = 0;
 885              		.loc 1 214 0
 886 0016 064B     		ldr	r3, .L37+12
 887 0018 0022     		movs	r2, #0
 888 001a 1A70     		strb	r2, [r3]
 215:main.c        **** }
 889              		.loc 1 215 0
 890 001c 00BF     		nop
 891 001e BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 0020 80BC     		pop	{r7}
 895              		.cfi_restore 7
 896              		.cfi_def_cfa_offset 0
 897 0022 7047     		bx	lr
 898              	.L38:
 899              		.align	2
 900              	.L37:
 901 0024 00000000 		.word	s3
 902 0028 00000000 		.word	s4
 903 002c 00000000 		.word	s5
 904 0030 00000000 		.word	s6
 905              		.cfi_endproc
 906              	.LFE72:
 907              		.size	ResetSensorFlags, .-ResetSensorFlags
 908              		.global	xBlocksize
 909              		.data
 910 0046 0000     		.align	2
 911              		.type	xBlocksize, %object
 912              		.size	xBlocksize, 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 21


 913              	xBlocksize:
 914 0048 0000F442 		.word	1123287040
 915              		.global	yBlocksize
 916              		.align	2
 917              		.type	yBlocksize, %object
 918              		.size	yBlocksize, 4
 919              	yBlocksize:
 920 004c 00009A42 		.word	1117388800
 921              		.global	currentRow
 922              		.type	currentRow, %object
 923              		.size	currentRow, 1
 924              	currentRow:
 925 0050 01       		.byte	1
 926              		.global	currentCol
 927              		.type	currentCol, %object
 928              		.size	currentCol, 1
 929              	currentCol:
 930 0051 01       		.byte	1
 931              		.global	stoppedAfterTurn
 932              		.bss
 933              		.type	stoppedAfterTurn, %object
 934              		.size	stoppedAfterTurn, 1
 935              	stoppedAfterTurn:
 936 0050 00       		.space	1
 937              		.global	ignoreSensor
 938              		.type	ignoreSensor, %object
 939              		.size	ignoreSensor, 1
 940              	ignoreSensor:
 941 0051 00       		.space	1
 942              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 943              		.align	2
 944              		.global	ForwardCourseCorrection
 945              		.thumb
 946              		.thumb_func
 947              		.type	ForwardCourseCorrection, %function
 948              	ForwardCourseCorrection:
 949              	.LFB73:
 216:main.c        **** 
 217:main.c        **** float xBlocksize = 122; // 122 mm
 218:main.c        **** float yBlocksize = 77; // 80 mm
 219:main.c        **** uint8 currentRow = 1;
 220:main.c        **** uint8 currentCol = 1;
 221:main.c        **** 
 222:main.c        **** uint8 stoppedAfterTurn = 0;
 223:main.c        **** uint8 ignoreSensor = 0;
 224:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 225:main.c        **** 
 226:main.c        **** enum RobotMovement ForwardCourseCorrection();
 227:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 950              		.loc 1 227 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955 0000 80B4     		push	{r7}
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 22


 958 0002 00AF     		add	r7, sp, #0
 959              		.cfi_def_cfa_register 7
 228:main.c        ****     // if S5 and S6 are on black, move forward
 229:main.c        ****     if (!s5 && !s6) {
 960              		.loc 1 229 0
 961 0004 1C4B     		ldr	r3, .L47
 962 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0008 002B     		cmp	r3, #0
 964 000a 0FD1     		bne	.L40
 965              		.loc 1 229 0 is_stmt 0 discriminator 1
 966 000c 1B4B     		ldr	r3, .L47+4
 967 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 0010 002B     		cmp	r3, #0
 969 0012 0BD1     		bne	.L40
 230:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 970              		.loc 1 230 0 is_stmt 1
 971 0014 1A4B     		ldr	r3, .L47+8
 972 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 0018 032B     		cmp	r3, #3
 974 001a 01D0     		beq	.L41
 231:main.c        ****             return AdjustToTheLeft;
 975              		.loc 1 231 0
 976 001c 0323     		movs	r3, #3
 977 001e 26E0     		b	.L42
 978              	.L41:
 232:main.c        ****         }
 233:main.c        ****         if (previousDirection != AdjustToTheRight) {
 979              		.loc 1 233 0
 980 0020 174B     		ldr	r3, .L47+8
 981 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 982 0024 042B     		cmp	r3, #4
 983 0026 01D0     		beq	.L40
 234:main.c        ****             return AdjustToTheRight;    
 984              		.loc 1 234 0
 985 0028 0423     		movs	r3, #4
 986 002a 20E0     		b	.L42
 987              	.L40:
 235:main.c        ****         }
 236:main.c        ****     }
 237:main.c        ****     
 238:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 239:main.c        ****     if (s5 && s6) {
 988              		.loc 1 239 0
 989 002c 124B     		ldr	r3, .L47
 990 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 991 0030 002B     		cmp	r3, #0
 992 0032 0FD0     		beq	.L43
 993              		.loc 1 239 0 is_stmt 0 discriminator 1
 994 0034 114B     		ldr	r3, .L47+4
 995 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 0038 002B     		cmp	r3, #0
 997 003a 0BD0     		beq	.L43
 240:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 998              		.loc 1 240 0 is_stmt 1
 999 003c 104B     		ldr	r3, .L47+8
 1000 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 0040 032B     		cmp	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 23


 1002 0042 01D0     		beq	.L44
 241:main.c        ****             return AdjustToTheLeft;
 1003              		.loc 1 241 0
 1004 0044 0323     		movs	r3, #3
 1005 0046 12E0     		b	.L42
 1006              	.L44:
 242:main.c        ****         }
 243:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1007              		.loc 1 243 0
 1008 0048 0D4B     		ldr	r3, .L47+8
 1009 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 004c 042B     		cmp	r3, #4
 1011 004e 01D0     		beq	.L43
 244:main.c        ****             return AdjustToTheRight;    
 1012              		.loc 1 244 0
 1013 0050 0423     		movs	r3, #4
 1014 0052 0CE0     		b	.L42
 1015              	.L43:
 245:main.c        ****         }
 246:main.c        ****     }
 247:main.c        **** 
 248:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 249:main.c        ****     if (s5) {
 1016              		.loc 1 249 0
 1017 0054 084B     		ldr	r3, .L47
 1018 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1019 0058 002B     		cmp	r3, #0
 1020 005a 01D0     		beq	.L45
 250:main.c        ****         return AdjustToTheRight;    
 1021              		.loc 1 250 0
 1022 005c 0423     		movs	r3, #4
 1023 005e 06E0     		b	.L42
 1024              	.L45:
 251:main.c        ****     }
 252:main.c        ****     if (s6) {
 1025              		.loc 1 252 0
 1026 0060 064B     		ldr	r3, .L47+4
 1027 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1028 0064 002B     		cmp	r3, #0
 1029 0066 01D0     		beq	.L46
 253:main.c        ****         return AdjustToTheLeft;    
 1030              		.loc 1 253 0
 1031 0068 0323     		movs	r3, #3
 1032 006a 00E0     		b	.L42
 1033              	.L46:
 254:main.c        ****     }
 255:main.c        ****    
 256:main.c        ****     // We should never actually get to this point
 257:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 258:main.c        ****     return Stop;
 1034              		.loc 1 258 0
 1035 006c 0523     		movs	r3, #5
 1036              	.L42:
 259:main.c        **** }
 1037              		.loc 1 259 0
 1038 006e 1846     		mov	r0, r3
 1039 0070 BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 24


 1040              		.cfi_def_cfa_register 13
 1041              		@ sp needed
 1042 0072 80BC     		pop	{r7}
 1043              		.cfi_restore 7
 1044              		.cfi_def_cfa_offset 0
 1045 0074 7047     		bx	lr
 1046              	.L48:
 1047 0076 00BF     		.align	2
 1048              	.L47:
 1049 0078 00000000 		.word	s5
 1050 007c 00000000 		.word	s6
 1051 0080 00000000 		.word	previousDirection
 1052              		.cfi_endproc
 1053              	.LFE73:
 1054              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1055              		.global	lastDirectionAfter180
 1056              		.data
 1057              		.type	lastDirectionAfter180, %object
 1058              		.size	lastDirectionAfter180, 1
 1059              	lastDirectionAfter180:
 1060 0052 06       		.byte	6
 1061              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1062              		.align	2
 1063              		.global	SpinCourseCorrection
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	SpinCourseCorrection, %function
 1067              	SpinCourseCorrection:
 1068              	.LFB74:
 260:main.c        **** 
 261:main.c        **** enum RobotMovement SpinCourseCorrection();
 262:main.c        **** 
 263:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 264:main.c        **** 
 265:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1069              		.loc 1 265 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074 0000 80B4     		push	{r7}
 1075              		.cfi_def_cfa_offset 4
 1076              		.cfi_offset 7, -4
 1077 0002 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 266:main.c        ****     // Set first iteration flag.
 267:main.c        ****     if (!spinCourseCorrectionStarted) {
 1079              		.loc 1 267 0
 1080 0004 184B     		ldr	r3, .L56
 1081 0006 1B78     		ldrb	r3, [r3]
 1082 0008 DBB2     		uxtb	r3, r3
 1083 000a 002B     		cmp	r3, #0
 1084 000c 06D1     		bne	.L50
 268:main.c        ****         spinCourseCorrectionStarted = 1;    
 1085              		.loc 1 268 0
 1086 000e 164B     		ldr	r3, .L56
 1087 0010 0122     		movs	r2, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 25


 1088 0012 1A70     		strb	r2, [r3]
 269:main.c        ****         lastDirectionAfter180 = currentDirection;
 1089              		.loc 1 269 0
 1090 0014 154B     		ldr	r3, .L56+4
 1091 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1092 0018 154B     		ldr	r3, .L56+8
 1093 001a 1A70     		strb	r2, [r3]
 1094              	.L50:
 270:main.c        ****     }
 271:main.c        ****     
 272:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 273:main.c        ****     if (s5 && s6) {
 1095              		.loc 1 273 0
 1096 001c 154B     		ldr	r3, .L56+12
 1097 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 0020 002B     		cmp	r3, #0
 1099 0022 0FD0     		beq	.L51
 1100              		.loc 1 273 0 is_stmt 0 discriminator 1
 1101 0024 144B     		ldr	r3, .L56+16
 1102 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1103 0028 002B     		cmp	r3, #0
 1104 002a 0BD0     		beq	.L51
 274:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1105              		.loc 1 274 0 is_stmt 1
 1106 002c 104B     		ldr	r3, .L56+8
 1107 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 0030 022B     		cmp	r3, #2
 1109 0032 01D0     		beq	.L52
 275:main.c        ****             return TurnLeft;
 1110              		.loc 1 275 0
 1111 0034 0223     		movs	r3, #2
 1112 0036 12E0     		b	.L53
 1113              	.L52:
 276:main.c        ****         }
 277:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1114              		.loc 1 277 0
 1115 0038 0D4B     		ldr	r3, .L56+8
 1116 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1117 003c 012B     		cmp	r3, #1
 1118 003e 01D0     		beq	.L51
 278:main.c        ****             return TurnRight;    
 1119              		.loc 1 278 0
 1120 0040 0123     		movs	r3, #1
 1121 0042 0CE0     		b	.L53
 1122              	.L51:
 279:main.c        ****         }
 280:main.c        ****     }
 281:main.c        **** 
 282:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 283:main.c        ****     if (s5) {
 1123              		.loc 1 283 0
 1124 0044 0B4B     		ldr	r3, .L56+12
 1125 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 0048 002B     		cmp	r3, #0
 1127 004a 01D0     		beq	.L54
 284:main.c        ****         return TurnRight;    
 1128              		.loc 1 284 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 26


 1129 004c 0123     		movs	r3, #1
 1130 004e 06E0     		b	.L53
 1131              	.L54:
 285:main.c        ****     }
 286:main.c        ****     if (s6) {
 1132              		.loc 1 286 0
 1133 0050 094B     		ldr	r3, .L56+16
 1134 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 0054 002B     		cmp	r3, #0
 1136 0056 01D0     		beq	.L55
 287:main.c        ****         return TurnLeft;    
 1137              		.loc 1 287 0
 1138 0058 0223     		movs	r3, #2
 1139 005a 00E0     		b	.L53
 1140              	.L55:
 288:main.c        ****     }
 289:main.c        ****    
 290:main.c        ****     // We should never actually get to this point
 291:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 292:main.c        ****     return Stop;
 1141              		.loc 1 292 0
 1142 005c 0523     		movs	r3, #5
 1143              	.L53:
 293:main.c        **** }
 1144              		.loc 1 293 0
 1145 005e 1846     		mov	r0, r3
 1146 0060 BD46     		mov	sp, r7
 1147              		.cfi_def_cfa_register 13
 1148              		@ sp needed
 1149 0062 80BC     		pop	{r7}
 1150              		.cfi_restore 7
 1151              		.cfi_def_cfa_offset 0
 1152 0064 7047     		bx	lr
 1153              	.L57:
 1154 0066 00BF     		.align	2
 1155              	.L56:
 1156 0068 3D000000 		.word	spinCourseCorrectionStarted
 1157 006c 00000000 		.word	currentDirection
 1158 0070 00000000 		.word	lastDirectionAfter180
 1159 0074 00000000 		.word	s5
 1160 0078 00000000 		.word	s6
 1161              		.cfi_endproc
 1162              	.LFE74:
 1163              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1164              		.global	firstTurnIteration
 1165              		.bss
 1166              		.type	firstTurnIteration, %object
 1167              		.size	firstTurnIteration, 1
 1168              	firstTurnIteration:
 1169 0052 00       		.space	1
 1170              		.global	__aeabi_i2f
 1171              		.global	__aeabi_fcmpge
 1172              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1173              		.align	2
 1174              		.global	GetMovementAccordingToInstruction
 1175              		.thumb
 1176              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 27


 1177              		.type	GetMovementAccordingToInstruction, %function
 1178              	GetMovementAccordingToInstruction:
 1179              	.LFB75:
 294:main.c        **** 
 295:main.c        **** uint8 firstTurnIteration = 0;
 296:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1180              		.loc 1 296 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 40
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 B0B5     		push	{r4, r5, r7, lr}
 1185              		.cfi_def_cfa_offset 16
 1186              		.cfi_offset 4, -16
 1187              		.cfi_offset 5, -12
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 8AB0     		sub	sp, sp, #40
 1191              		.cfi_def_cfa_offset 56
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 297:main.c        ****     float blocksize;
 298:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1194              		.loc 1 298 0
 1195 0006 994B     		ldr	r3, .L117
 1196 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1197 000a 002B     		cmp	r3, #0
 1198 000c 03D0     		beq	.L59
 1199              		.loc 1 298 0 is_stmt 0 discriminator 1
 1200 000e 974B     		ldr	r3, .L117
 1201 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1202 0012 012B     		cmp	r3, #1
 1203 0014 03D1     		bne	.L60
 1204              	.L59:
 299:main.c        ****         blocksize = yBlocksize;
 1205              		.loc 1 299 0 is_stmt 1
 1206 0016 964B     		ldr	r3, .L117+4
 1207 0018 1B68     		ldr	r3, [r3]	@ float
 1208 001a 7B62     		str	r3, [r7, #36]	@ float
 1209 001c 02E0     		b	.L61
 1210              	.L60:
 300:main.c        ****     } else {
 301:main.c        ****         blocksize = xBlocksize;
 1211              		.loc 1 301 0
 1212 001e 954B     		ldr	r3, .L117+8
 1213 0020 1B68     		ldr	r3, [r3]	@ float
 1214 0022 7B62     		str	r3, [r7, #36]	@ float
 1215              	.L61:
 302:main.c        ****     }
 303:main.c        ****     
 304:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 305:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 306:main.c        ****         // OR an EVENT happens in the current instruction
 307:main.c        ****         // e.g. CurrentInstruction: GoForward 
 308:main.c        ****         //      S3 on BLACK
 309:main.c        ****         //      Check Ignore Count
 310:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 311:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 28


 312:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1216              		.loc 1 312 0
 1217 0024 914B     		ldr	r3, .L117
 1218 0026 1B78     		ldrb	r3, [r3]
 1219 0028 87F82330 		strb	r3, [r7, #35]
 313:main.c        ****     
 314:main.c        ****     switch (currentInstructionDirection) {
 1220              		.loc 1 314 0
 1221 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1222 0030 052B     		cmp	r3, #5
 1223 0032 00F2C182 		bhi	.L62
 1224 0036 01A2     		adr	r2, .L64
 1225 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1226              		.p2align 2
 1227              	.L64:
 1228 003c 55000000 		.word	.L63+1
 1229 0040 17010000 		.word	.L65+1
 1230 0044 47020000 		.word	.L66+1
 1231 0048 D1040000 		.word	.L67+1
 1232 004c BB030000 		.word	.L68+1
 1233 0050 17040000 		.word	.L69+1
 1234              		.p2align 1
 1235              	.L63:
 315:main.c        ****         case GoForward:
 316:main.c        ****             if(currentDirection == Stop) {
 1236              		.loc 1 316 0
 1237 0054 884B     		ldr	r3, .L117+12
 1238 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0058 052B     		cmp	r3, #5
 1240 005a 08D1     		bne	.L70
 317:main.c        ****                 if(stopBuffer <= 25) {
 1241              		.loc 1 317 0
 1242 005c 874B     		ldr	r3, .L117+16
 1243 005e 1B68     		ldr	r3, [r3]
 1244 0060 192B     		cmp	r3, #25
 1245 0062 01D8     		bhi	.L71
 318:main.c        ****                     return Stop;
 1246              		.loc 1 318 0
 1247 0064 0523     		movs	r3, #5
 1248 0066 A8E2     		b	.L72
 1249              	.L71:
 319:main.c        ****                 } else {
 320:main.c        ****                     stopBuffer = 100;
 1250              		.loc 1 320 0
 1251 0068 844B     		ldr	r3, .L117+16
 1252 006a 6422     		movs	r2, #100
 1253 006c 1A60     		str	r2, [r3]
 1254              	.L70:
 321:main.c        ****                 }
 322:main.c        ****             }
 323:main.c        ****             if (s3) {
 1255              		.loc 1 323 0
 1256 006e 844B     		ldr	r3, .L117+20
 1257 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258 0072 002B     		cmp	r3, #0
 1259 0074 02D0     		beq	.L73
 324:main.c        ****                 leftStatusFlag = 1;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 29


 1260              		.loc 1 324 0
 1261 0076 834B     		ldr	r3, .L117+24
 1262 0078 0122     		movs	r2, #1
 1263 007a 1A70     		strb	r2, [r3]
 1264              	.L73:
 325:main.c        ****             }
 326:main.c        ****             
 327:main.c        ****             if (s4) {
 1265              		.loc 1 327 0
 1266 007c 824B     		ldr	r3, .L117+28
 1267 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 0080 002B     		cmp	r3, #0
 1269 0082 02D0     		beq	.L74
 328:main.c        ****                 rightStatusFlag = 1;
 1270              		.loc 1 328 0
 1271 0084 814B     		ldr	r3, .L117+32
 1272 0086 0122     		movs	r2, #1
 1273 0088 1A70     		strb	r2, [r3]
 1274              	.L74:
 329:main.c        ****             }
 330:main.c        ****             
 331:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 332:main.c        ****             if (leftStatusFlag) {
 1275              		.loc 1 332 0
 1276 008a 7E4B     		ldr	r3, .L117+24
 1277 008c 1B78     		ldrb	r3, [r3]
 1278 008e DBB2     		uxtb	r3, r3
 1279 0090 002B     		cmp	r3, #0
 1280 0092 1BD0     		beq	.L75
 333:main.c        ****                 if (!s3) {
 1281              		.loc 1 333 0
 1282 0094 7A4B     		ldr	r3, .L117+20
 1283 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 0098 002B     		cmp	r3, #0
 1285 009a 17D1     		bne	.L75
 334:main.c        ****                     leftStatusFlag = 0;    
 1286              		.loc 1 334 0
 1287 009c 794B     		ldr	r3, .L117+24
 1288 009e 0022     		movs	r2, #0
 1289 00a0 1A70     		strb	r2, [r3]
 335:main.c        ****                     if (currentIgnoreL == 0) {
 1290              		.loc 1 335 0
 1291 00a2 7B4B     		ldr	r3, .L117+36
 1292 00a4 1B78     		ldrb	r3, [r3]
 1293 00a6 DBB2     		uxtb	r3, r3
 1294 00a8 002B     		cmp	r3, #0
 1295 00aa 03D1     		bne	.L76
 336:main.c        ****                         MoveToNextInstruction();
 1296              		.loc 1 336 0
 1297 00ac FFF7FEFF 		bl	MoveToNextInstruction
 337:main.c        ****                         return Stop;
 1298              		.loc 1 337 0
 1299 00b0 0523     		movs	r3, #5
 1300 00b2 82E2     		b	.L72
 1301              	.L76:
 338:main.c        ****                     }
 339:main.c        ****                     if (currentIgnoreL > 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 30


 1302              		.loc 1 339 0
 1303 00b4 764B     		ldr	r3, .L117+36
 1304 00b6 1B78     		ldrb	r3, [r3]
 1305 00b8 DBB2     		uxtb	r3, r3
 1306 00ba 002B     		cmp	r3, #0
 1307 00bc 06D0     		beq	.L75
 340:main.c        ****                         currentIgnoreL--;    
 1308              		.loc 1 340 0
 1309 00be 744B     		ldr	r3, .L117+36
 1310 00c0 1B78     		ldrb	r3, [r3]
 1311 00c2 DBB2     		uxtb	r3, r3
 1312 00c4 013B     		subs	r3, r3, #1
 1313 00c6 DAB2     		uxtb	r2, r3
 1314 00c8 714B     		ldr	r3, .L117+36
 1315 00ca 1A70     		strb	r2, [r3]
 1316              	.L75:
 341:main.c        ****                     }
 342:main.c        ****                 }
 343:main.c        ****             }
 344:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 345:main.c        ****             if (rightStatusFlag) {
 1317              		.loc 1 345 0
 1318 00cc 6F4B     		ldr	r3, .L117+32
 1319 00ce 1B78     		ldrb	r3, [r3]
 1320 00d0 DBB2     		uxtb	r3, r3
 1321 00d2 002B     		cmp	r3, #0
 1322 00d4 1BD0     		beq	.L77
 346:main.c        ****                 if (!s4) {
 1323              		.loc 1 346 0
 1324 00d6 6C4B     		ldr	r3, .L117+28
 1325 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 00da 002B     		cmp	r3, #0
 1327 00dc 17D1     		bne	.L77
 347:main.c        ****                     rightStatusFlag = 0;
 1328              		.loc 1 347 0
 1329 00de 6B4B     		ldr	r3, .L117+32
 1330 00e0 0022     		movs	r2, #0
 1331 00e2 1A70     		strb	r2, [r3]
 348:main.c        ****                     if (currentIgnoreR == 0) {
 1332              		.loc 1 348 0
 1333 00e4 6B4B     		ldr	r3, .L117+40
 1334 00e6 1B78     		ldrb	r3, [r3]
 1335 00e8 DBB2     		uxtb	r3, r3
 1336 00ea 002B     		cmp	r3, #0
 1337 00ec 03D1     		bne	.L78
 349:main.c        ****                         MoveToNextInstruction();
 1338              		.loc 1 349 0
 1339 00ee FFF7FEFF 		bl	MoveToNextInstruction
 350:main.c        ****                         return Stop;
 1340              		.loc 1 350 0
 1341 00f2 0523     		movs	r3, #5
 1342 00f4 61E2     		b	.L72
 1343              	.L78:
 351:main.c        ****                     }
 352:main.c        ****                     if (currentIgnoreR > 0) {
 1344              		.loc 1 352 0
 1345 00f6 674B     		ldr	r3, .L117+40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 31


 1346 00f8 1B78     		ldrb	r3, [r3]
 1347 00fa DBB2     		uxtb	r3, r3
 1348 00fc 002B     		cmp	r3, #0
 1349 00fe 06D0     		beq	.L77
 353:main.c        ****                         currentIgnoreR--;    
 1350              		.loc 1 353 0
 1351 0100 644B     		ldr	r3, .L117+40
 1352 0102 1B78     		ldrb	r3, [r3]
 1353 0104 DBB2     		uxtb	r3, r3
 1354 0106 013B     		subs	r3, r3, #1
 1355 0108 DAB2     		uxtb	r2, r3
 1356 010a 624B     		ldr	r3, .L117+40
 1357 010c 1A70     		strb	r2, [r3]
 1358              	.L77:
 354:main.c        ****                     }
 355:main.c        ****                 }
 356:main.c        ****             }
 357:main.c        ****           
 358:main.c        ****             return ForwardCourseCorrection();
 1359              		.loc 1 358 0
 1360 010e FFF7FEFF 		bl	ForwardCourseCorrection
 1361 0112 0346     		mov	r3, r0
 1362 0114 51E2     		b	.L72
 1363              	.L65:
 359:main.c        ****             break;
 360:main.c        ****         case waitForLeftTurn:
 361:main.c        ****             // continue moving forward until s3 goes on black
 362:main.c        ****             // if we are turning left already
 363:main.c        ****                 // wait until s5 || s6 are on black
 364:main.c        ****                 // return stop
 365:main.c        ****             if (!firstTurnIteration) {
 1364              		.loc 1 365 0
 1365 0116 604B     		ldr	r3, .L117+44
 1366 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 011a 002B     		cmp	r3, #0
 1368 011c 0ED1     		bne	.L79
 366:main.c        ****                 if (!s3) {
 1369              		.loc 1 366 0
 1370 011e 584B     		ldr	r3, .L117+20
 1371 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1372 0122 002B     		cmp	r3, #0
 1373 0124 04D1     		bne	.L80
 367:main.c        ****                     firstTurnIteration = 1;
 1374              		.loc 1 367 0
 1375 0126 5C4B     		ldr	r3, .L117+44
 1376 0128 0122     		movs	r2, #1
 1377 012a 1A70     		strb	r2, [r3]
 368:main.c        ****                     return Stop;    
 1378              		.loc 1 368 0
 1379 012c 0523     		movs	r3, #5
 1380 012e 44E2     		b	.L72
 1381              	.L80:
 369:main.c        ****                 }
 370:main.c        ****                 if (s3) {
 1382              		.loc 1 370 0
 1383 0130 534B     		ldr	r3, .L117+20
 1384 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 32


 1385 0134 002B     		cmp	r3, #0
 1386 0136 01D0     		beq	.L79
 371:main.c        ****                     return Backward;    
 1387              		.loc 1 371 0
 1388 0138 0923     		movs	r3, #9
 1389 013a 3EE2     		b	.L72
 1390              	.L79:
 372:main.c        ****                 }
 373:main.c        ****             }
 374:main.c        ****             
 375:main.c        ****             if (turnFinishedFlag) {
 1391              		.loc 1 375 0
 1392 013c 574B     		ldr	r3, .L117+48
 1393 013e 1B78     		ldrb	r3, [r3]
 1394 0140 DBB2     		uxtb	r3, r3
 1395 0142 002B     		cmp	r3, #0
 1396 0144 31D0     		beq	.L81
 376:main.c        ****                 if (!s3 && !s5 && !s6) {
 1397              		.loc 1 376 0
 1398 0146 4E4B     		ldr	r3, .L117+20
 1399 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1400 014a 002B     		cmp	r3, #0
 1401 014c 0BD1     		bne	.L82
 1402              		.loc 1 376 0 is_stmt 0 discriminator 1
 1403 014e 544B     		ldr	r3, .L117+52
 1404 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0152 002B     		cmp	r3, #0
 1406 0154 07D1     		bne	.L82
 1407              		.loc 1 376 0 discriminator 2
 1408 0156 534B     		ldr	r3, .L117+56
 1409 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1410 015a 002B     		cmp	r3, #0
 1411 015c 03D1     		bne	.L82
 377:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 378:main.c        ****                     return ForwardCourseCorrection();
 1412              		.loc 1 378 0 is_stmt 1
 1413 015e FFF7FEFF 		bl	ForwardCourseCorrection
 1414 0162 0346     		mov	r3, r0
 1415 0164 29E2     		b	.L72
 1416              	.L82:
 379:main.c        ****                 }
 380:main.c        ****                 if (s5 || s6) {
 1417              		.loc 1 380 0
 1418 0166 4E4B     		ldr	r3, .L117+52
 1419 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1420 016a 002B     		cmp	r3, #0
 1421 016c 03D1     		bne	.L83
 1422              		.loc 1 380 0 is_stmt 0 discriminator 1
 1423 016e 4D4B     		ldr	r3, .L117+56
 1424 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 0172 002B     		cmp	r3, #0
 1426 0174 03D0     		beq	.L84
 1427              	.L83:
 381:main.c        ****                     return SpinCourseCorrection();
 1428              		.loc 1 381 0 is_stmt 1
 1429 0176 FFF7FEFF 		bl	SpinCourseCorrection
 1430 017a 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 33


 1431 017c 1DE2     		b	.L72
 1432              	.L84:
 382:main.c        ****                 }
 383:main.c        ****                 if (forwardBuffer <= 10) {
 1433              		.loc 1 383 0
 1434 017e 4A4B     		ldr	r3, .L117+60
 1435 0180 1B88     		ldrh	r3, [r3]
 1436 0182 0A2B     		cmp	r3, #10
 1437 0184 03D8     		bhi	.L85
 384:main.c        ****                     return ForwardCourseCorrection();    
 1438              		.loc 1 384 0
 1439 0186 FFF7FEFF 		bl	ForwardCourseCorrection
 1440 018a 0346     		mov	r3, r0
 1441 018c 15E2     		b	.L72
 1442              	.L85:
 385:main.c        **** 
 386:main.c        ****                 } else {
 387:main.c        ****                     forwardBuffer = 100;
 1443              		.loc 1 387 0
 1444 018e 464B     		ldr	r3, .L117+60
 1445 0190 6422     		movs	r2, #100
 1446 0192 1A80     		strh	r2, [r3]	@ movhi
 388:main.c        ****                     if (s3) {
 1447              		.loc 1 388 0
 1448 0194 3A4B     		ldr	r3, .L117+20
 1449 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 0198 002B     		cmp	r3, #0
 1451 019a 06D0     		beq	.L81
 389:main.c        ****                         turnFinishedFlag = 0;
 1452              		.loc 1 389 0
 1453 019c 3F4B     		ldr	r3, .L117+48
 1454 019e 0022     		movs	r2, #0
 1455 01a0 1A70     		strb	r2, [r3]
 390:main.c        ****                         MoveToNextInstruction();   
 1456              		.loc 1 390 0
 1457 01a2 FFF7FEFF 		bl	MoveToNextInstruction
 391:main.c        ****                         return Stop;  
 1458              		.loc 1 391 0
 1459 01a6 0523     		movs	r3, #5
 1460 01a8 07E2     		b	.L72
 1461              	.L81:
 392:main.c        ****                     }
 393:main.c        ****                 }
 394:main.c        ****             }
 395:main.c        ****             
 396:main.c        ****             
 397:main.c        ****             if (currentDirection == Stop) {
 1462              		.loc 1 397 0
 1463 01aa 334B     		ldr	r3, .L117+12
 1464 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 01ae 052B     		cmp	r3, #5
 1466 01b0 09D1     		bne	.L86
 398:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 399:main.c        ****                 if (stopBuffer <= 25) {
 1467              		.loc 1 399 0
 1468 01b2 324B     		ldr	r3, .L117+16
 1469 01b4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 34


 1470 01b6 192B     		cmp	r3, #25
 1471 01b8 01D8     		bhi	.L87
 400:main.c        ****                     return Stop;   
 1472              		.loc 1 400 0
 1473 01ba 0523     		movs	r3, #5
 1474 01bc FDE1     		b	.L72
 1475              	.L87:
 401:main.c        ****                 }
 402:main.c        ****                 return ForwardCourseCorrection();
 1476              		.loc 1 402 0
 1477 01be FFF7FEFF 		bl	ForwardCourseCorrection
 1478 01c2 0346     		mov	r3, r0
 1479 01c4 F9E1     		b	.L72
 1480              	.L86:
 403:main.c        ****             }
 404:main.c        ****          
 405:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 406:main.c        ****             if (currentDirection == TurnLeft) {
 1481              		.loc 1 406 0
 1482 01c6 2C4B     		ldr	r3, .L117+12
 1483 01c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 01ca 022B     		cmp	r3, #2
 1485 01cc 2ED1     		bne	.L88
 407:main.c        ****                 // If turn started and we are still on black, continue turning
 408:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 409:main.c        ****                 if (turnStartedFlag) {
 1486              		.loc 1 409 0
 1487 01ce 374B     		ldr	r3, .L117+64
 1488 01d0 1B78     		ldrb	r3, [r3]
 1489 01d2 DBB2     		uxtb	r3, r3
 1490 01d4 002B     		cmp	r3, #0
 1491 01d6 0ED0     		beq	.L89
 410:main.c        ****                     if (s3 && (s5 && s6)) {
 1492              		.loc 1 410 0
 1493 01d8 294B     		ldr	r3, .L117+20
 1494 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 01dc 002B     		cmp	r3, #0
 1496 01de 0AD0     		beq	.L89
 1497              		.loc 1 410 0 is_stmt 0 discriminator 1
 1498 01e0 2F4B     		ldr	r3, .L117+52
 1499 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1500 01e4 002B     		cmp	r3, #0
 1501 01e6 06D0     		beq	.L89
 1502              		.loc 1 410 0 discriminator 2
 1503 01e8 2E4B     		ldr	r3, .L117+56
 1504 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 01ec 002B     		cmp	r3, #0
 1506 01ee 02D0     		beq	.L89
 411:main.c        ****                         turnStartedFlag = 0;
 1507              		.loc 1 411 0 is_stmt 1
 1508 01f0 2E4B     		ldr	r3, .L117+64
 1509 01f2 0022     		movs	r2, #0
 1510 01f4 1A70     		strb	r2, [r3]
 1511              	.L89:
 412:main.c        ****                     }
 413:main.c        ****                 }
 414:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 35


 1512              		.loc 1 414 0
 1513 01f6 2D4B     		ldr	r3, .L117+64
 1514 01f8 1B78     		ldrb	r3, [r3]
 1515 01fa DBB2     		uxtb	r3, r3
 1516 01fc 002B     		cmp	r3, #0
 1517 01fe 13D1     		bne	.L90
 1518              		.loc 1 414 0 is_stmt 0 discriminator 1
 1519 0200 1F4B     		ldr	r3, .L117+20
 1520 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 0204 002B     		cmp	r3, #0
 1522 0206 0FD1     		bne	.L90
 1523              		.loc 1 414 0 discriminator 2
 1524 0208 254B     		ldr	r3, .L117+52
 1525 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 020c 002B     		cmp	r3, #0
 1527 020e 0BD1     		bne	.L90
 1528              		.loc 1 414 0 discriminator 3
 1529 0210 244B     		ldr	r3, .L117+56
 1530 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 0214 002B     		cmp	r3, #0
 1532 0216 07D1     		bne	.L90
 415:main.c        ****                     turnFinishedFlag = 1;
 1533              		.loc 1 415 0 is_stmt 1
 1534 0218 204B     		ldr	r3, .L117+48
 1535 021a 0122     		movs	r2, #1
 1536 021c 1A70     		strb	r2, [r3]
 416:main.c        ****                     firstTurnIteration = 0;
 1537              		.loc 1 416 0
 1538 021e 1E4B     		ldr	r3, .L117+44
 1539 0220 0022     		movs	r2, #0
 1540 0222 1A70     		strb	r2, [r3]
 417:main.c        ****                     return ForwardAfterTurn;
 1541              		.loc 1 417 0
 1542 0224 0823     		movs	r3, #8
 1543 0226 C8E1     		b	.L72
 1544              	.L90:
 418:main.c        ****                 }
 419:main.c        ****                 else
 420:main.c        ****                 {
 421:main.c        ****                     return TurnLeft;
 1545              		.loc 1 421 0
 1546 0228 0223     		movs	r3, #2
 1547 022a C6E1     		b	.L72
 1548              	.L88:
 422:main.c        ****                 }
 423:main.c        ****             }
 424:main.c        ****             
 425:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 426:main.c        ****             if (!s3) {
 1549              		.loc 1 426 0
 1550 022c 144B     		ldr	r3, .L117+20
 1551 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 0230 002B     		cmp	r3, #0
 1553 0232 04D1     		bne	.L91
 427:main.c        ****                 turnStartedFlag = 1;
 1554              		.loc 1 427 0
 1555 0234 1D4B     		ldr	r3, .L117+64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 36


 1556 0236 0122     		movs	r2, #1
 1557 0238 1A70     		strb	r2, [r3]
 428:main.c        ****                 return TurnLeft;
 1558              		.loc 1 428 0
 1559 023a 0223     		movs	r3, #2
 1560 023c BDE1     		b	.L72
 1561              	.L91:
 429:main.c        ****             }
 430:main.c        ****             
 431:main.c        ****             // Otherwise, keep going forward
 432:main.c        ****             return ForwardCourseCorrection(); 
 1562              		.loc 1 432 0
 1563 023e FFF7FEFF 		bl	ForwardCourseCorrection
 1564 0242 0346     		mov	r3, r0
 1565 0244 B9E1     		b	.L72
 1566              	.L66:
 433:main.c        ****             break;
 434:main.c        ****         case waitForRightTurn:
 435:main.c        ****             // continue moving forward until s4 goes on black
 436:main.c        ****             // if we are turning left already
 437:main.c        ****                 // wait until s5 || s6 are on black
 438:main.c        ****                 // return stop
 439:main.c        ****             if (!firstTurnIteration) {
 1567              		.loc 1 439 0
 1568 0246 144B     		ldr	r3, .L117+44
 1569 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1570 024a 002B     		cmp	r3, #0
 1571 024c 30D1     		bne	.L92
 440:main.c        ****                 if (!s4) {
 1572              		.loc 1 440 0
 1573 024e 0E4B     		ldr	r3, .L117+28
 1574 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 0252 002B     		cmp	r3, #0
 1576 0254 04D1     		bne	.L93
 441:main.c        ****                     firstTurnIteration = 1; 
 1577              		.loc 1 441 0
 1578 0256 104B     		ldr	r3, .L117+44
 1579 0258 0122     		movs	r2, #1
 1580 025a 1A70     		strb	r2, [r3]
 442:main.c        ****                     return Stop;
 1581              		.loc 1 442 0
 1582 025c 0523     		movs	r3, #5
 1583 025e ACE1     		b	.L72
 1584              	.L93:
 443:main.c        ****                 }
 444:main.c        ****                 if (s4) {
 1585              		.loc 1 444 0
 1586 0260 094B     		ldr	r3, .L117+28
 1587 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 0264 002B     		cmp	r3, #0
 1589 0266 23D0     		beq	.L92
 445:main.c        ****                     return Backward;    
 1590              		.loc 1 445 0
 1591 0268 0923     		movs	r3, #9
 1592 026a A6E1     		b	.L72
 1593              	.L118:
 1594              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 37


 1595              	.L117:
 1596 026c 00000000 		.word	currentInstruction
 1597 0270 00000000 		.word	yBlocksize
 1598 0274 00000000 		.word	xBlocksize
 1599 0278 00000000 		.word	currentDirection
 1600 027c 00000000 		.word	stopBuffer
 1601 0280 00000000 		.word	s3
 1602 0284 3B000000 		.word	leftStatusFlag
 1603 0288 00000000 		.word	s4
 1604 028c 3C000000 		.word	rightStatusFlag
 1605 0290 3E000000 		.word	currentIgnoreL
 1606 0294 45000000 		.word	currentIgnoreR
 1607 0298 00000000 		.word	firstTurnIteration
 1608 029c 37000000 		.word	turnFinishedFlag
 1609 02a0 00000000 		.word	s5
 1610 02a4 00000000 		.word	s6
 1611 02a8 00000000 		.word	forwardBuffer
 1612 02ac 36000000 		.word	turnStartedFlag
 1613              	.L92:
 446:main.c        ****                 }
 447:main.c        ****             }
 448:main.c        **** 
 449:main.c        ****             if (turnFinishedFlag) {
 1614              		.loc 1 449 0
 1615 02b0 994B     		ldr	r3, .L119
 1616 02b2 1B78     		ldrb	r3, [r3]
 1617 02b4 DBB2     		uxtb	r3, r3
 1618 02b6 002B     		cmp	r3, #0
 1619 02b8 34D0     		beq	.L94
 450:main.c        ****                 if (!s4 && !s5 && !s6) {
 1620              		.loc 1 450 0
 1621 02ba 984B     		ldr	r3, .L119+4
 1622 02bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1623 02be 002B     		cmp	r3, #0
 1624 02c0 0BD1     		bne	.L95
 1625              		.loc 1 450 0 is_stmt 0 discriminator 1
 1626 02c2 974B     		ldr	r3, .L119+8
 1627 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1628 02c6 002B     		cmp	r3, #0
 1629 02c8 07D1     		bne	.L95
 1630              		.loc 1 450 0 discriminator 2
 1631 02ca 964B     		ldr	r3, .L119+12
 1632 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1633 02ce 002B     		cmp	r3, #0
 1634 02d0 03D1     		bne	.L95
 451:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 452:main.c        ****                     return ForwardCourseCorrection();
 1635              		.loc 1 452 0 is_stmt 1
 1636 02d2 FFF7FEFF 		bl	ForwardCourseCorrection
 1637 02d6 0346     		mov	r3, r0
 1638 02d8 6FE1     		b	.L72
 1639              	.L95:
 453:main.c        ****                 }
 454:main.c        ****                 if (s5 || s6) {
 1640              		.loc 1 454 0
 1641 02da 914B     		ldr	r3, .L119+8
 1642 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 38


 1643 02de 002B     		cmp	r3, #0
 1644 02e0 03D1     		bne	.L96
 1645              		.loc 1 454 0 is_stmt 0 discriminator 1
 1646 02e2 904B     		ldr	r3, .L119+12
 1647 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1648 02e6 002B     		cmp	r3, #0
 1649 02e8 03D0     		beq	.L97
 1650              	.L96:
 455:main.c        ****                     return SpinCourseCorrection();
 1651              		.loc 1 455 0 is_stmt 1
 1652 02ea FFF7FEFF 		bl	SpinCourseCorrection
 1653 02ee 0346     		mov	r3, r0
 1654 02f0 63E1     		b	.L72
 1655              	.L97:
 456:main.c        ****                 }
 457:main.c        ****                 if (forwardBuffer <= 10) {
 1656              		.loc 1 457 0
 1657 02f2 8D4B     		ldr	r3, .L119+16
 1658 02f4 1B88     		ldrh	r3, [r3]
 1659 02f6 0A2B     		cmp	r3, #10
 1660 02f8 03D8     		bhi	.L98
 458:main.c        ****                     return ForwardCourseCorrection();    
 1661              		.loc 1 458 0
 1662 02fa FFF7FEFF 		bl	ForwardCourseCorrection
 1663 02fe 0346     		mov	r3, r0
 1664 0300 5BE1     		b	.L72
 1665              	.L98:
 459:main.c        **** 
 460:main.c        ****                 } else {
 461:main.c        ****                     forwardBuffer = 100;
 1666              		.loc 1 461 0
 1667 0302 894B     		ldr	r3, .L119+16
 1668 0304 6422     		movs	r2, #100
 1669 0306 1A80     		strh	r2, [r3]	@ movhi
 462:main.c        ****                     if (s4) {
 1670              		.loc 1 462 0
 1671 0308 844B     		ldr	r3, .L119+4
 1672 030a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 030c 002B     		cmp	r3, #0
 1674 030e 09D0     		beq	.L94
 463:main.c        ****                         firstTurnIteration = 0;
 1675              		.loc 1 463 0
 1676 0310 864B     		ldr	r3, .L119+20
 1677 0312 0022     		movs	r2, #0
 1678 0314 1A70     		strb	r2, [r3]
 464:main.c        ****                         turnFinishedFlag = 0;
 1679              		.loc 1 464 0
 1680 0316 804B     		ldr	r3, .L119
 1681 0318 0022     		movs	r2, #0
 1682 031a 1A70     		strb	r2, [r3]
 465:main.c        ****                         MoveToNextInstruction();   
 1683              		.loc 1 465 0
 1684 031c FFF7FEFF 		bl	MoveToNextInstruction
 466:main.c        ****                         return Stop;  
 1685              		.loc 1 466 0
 1686 0320 0523     		movs	r3, #5
 1687 0322 4AE1     		b	.L72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 39


 1688              	.L94:
 467:main.c        ****                     }
 468:main.c        ****                 }
 469:main.c        ****             }
 470:main.c        ****             
 471:main.c        ****             if (currentDirection == Stop) {
 1689              		.loc 1 471 0
 1690 0324 824B     		ldr	r3, .L119+24
 1691 0326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 0328 052B     		cmp	r3, #5
 1693 032a 09D1     		bne	.L99
 472:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 473:main.c        ****                 if (stopBuffer <= 25) {
 1694              		.loc 1 473 0
 1695 032c 814B     		ldr	r3, .L119+28
 1696 032e 1B68     		ldr	r3, [r3]
 1697 0330 192B     		cmp	r3, #25
 1698 0332 01D8     		bhi	.L100
 474:main.c        ****                     return Stop;   
 1699              		.loc 1 474 0
 1700 0334 0523     		movs	r3, #5
 1701 0336 40E1     		b	.L72
 1702              	.L100:
 475:main.c        ****                 }
 476:main.c        **** 
 477:main.c        ****                 return ForwardCourseCorrection();
 1703              		.loc 1 477 0
 1704 0338 FFF7FEFF 		bl	ForwardCourseCorrection
 1705 033c 0346     		mov	r3, r0
 1706 033e 3CE1     		b	.L72
 1707              	.L99:
 478:main.c        ****             }
 479:main.c        ****                       
 480:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 481:main.c        ****             if (currentDirection == TurnRight) {
 1708              		.loc 1 481 0
 1709 0340 7B4B     		ldr	r3, .L119+24
 1710 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1711 0344 012B     		cmp	r3, #1
 1712 0346 2BD1     		bne	.L101
 482:main.c        ****                 // If turn started and we are still on black, continue turning
 483:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 484:main.c        ****                 if (turnStartedFlag) {
 1713              		.loc 1 484 0
 1714 0348 7B4B     		ldr	r3, .L119+32
 1715 034a 1B78     		ldrb	r3, [r3]
 1716 034c DBB2     		uxtb	r3, r3
 1717 034e 002B     		cmp	r3, #0
 1718 0350 0ED0     		beq	.L102
 485:main.c        ****                     if (s4 && (s5 && s6)) {
 1719              		.loc 1 485 0
 1720 0352 724B     		ldr	r3, .L119+4
 1721 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1722 0356 002B     		cmp	r3, #0
 1723 0358 0AD0     		beq	.L102
 1724              		.loc 1 485 0 is_stmt 0 discriminator 1
 1725 035a 714B     		ldr	r3, .L119+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 40


 1726 035c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1727 035e 002B     		cmp	r3, #0
 1728 0360 06D0     		beq	.L102
 1729              		.loc 1 485 0 discriminator 2
 1730 0362 704B     		ldr	r3, .L119+12
 1731 0364 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1732 0366 002B     		cmp	r3, #0
 1733 0368 02D0     		beq	.L102
 486:main.c        ****                         turnStartedFlag = 0;
 1734              		.loc 1 486 0 is_stmt 1
 1735 036a 734B     		ldr	r3, .L119+32
 1736 036c 0022     		movs	r2, #0
 1737 036e 1A70     		strb	r2, [r3]
 1738              	.L102:
 487:main.c        ****                     }
 488:main.c        ****                 }
 489:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1739              		.loc 1 489 0
 1740 0370 714B     		ldr	r3, .L119+32
 1741 0372 1B78     		ldrb	r3, [r3]
 1742 0374 DBB2     		uxtb	r3, r3
 1743 0376 002B     		cmp	r3, #0
 1744 0378 10D1     		bne	.L103
 1745              		.loc 1 489 0 is_stmt 0 discriminator 1
 1746 037a 684B     		ldr	r3, .L119+4
 1747 037c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1748 037e 002B     		cmp	r3, #0
 1749 0380 0CD1     		bne	.L103
 1750              		.loc 1 489 0 discriminator 2
 1751 0382 674B     		ldr	r3, .L119+8
 1752 0384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1753 0386 002B     		cmp	r3, #0
 1754 0388 08D1     		bne	.L103
 1755              		.loc 1 489 0 discriminator 3
 1756 038a 664B     		ldr	r3, .L119+12
 1757 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1758 038e 002B     		cmp	r3, #0
 1759 0390 04D1     		bne	.L103
 490:main.c        ****                     turnFinishedFlag = 1;
 1760              		.loc 1 490 0 is_stmt 1
 1761 0392 614B     		ldr	r3, .L119
 1762 0394 0122     		movs	r2, #1
 1763 0396 1A70     		strb	r2, [r3]
 491:main.c        ****                     return ForwardAfterTurn;
 1764              		.loc 1 491 0
 1765 0398 0823     		movs	r3, #8
 1766 039a 0EE1     		b	.L72
 1767              	.L103:
 492:main.c        ****                 }
 493:main.c        ****                 else
 494:main.c        ****                 {
 495:main.c        ****                     return TurnRight;
 1768              		.loc 1 495 0
 1769 039c 0123     		movs	r3, #1
 1770 039e 0CE1     		b	.L72
 1771              	.L101:
 496:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 41


 497:main.c        ****             }
 498:main.c        ****             
 499:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 500:main.c        ****             if (!s4) {
 1772              		.loc 1 500 0
 1773 03a0 5E4B     		ldr	r3, .L119+4
 1774 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1775 03a4 002B     		cmp	r3, #0
 1776 03a6 04D1     		bne	.L104
 501:main.c        ****                 turnStartedFlag = 1;
 1777              		.loc 1 501 0
 1778 03a8 634B     		ldr	r3, .L119+32
 1779 03aa 0122     		movs	r2, #1
 1780 03ac 1A70     		strb	r2, [r3]
 502:main.c        ****                 return TurnRight;
 1781              		.loc 1 502 0
 1782 03ae 0123     		movs	r3, #1
 1783 03b0 03E1     		b	.L72
 1784              	.L104:
 503:main.c        ****             }
 504:main.c        ****             
 505:main.c        ****             // Otherwise, keep going forward
 506:main.c        ****             return ForwardCourseCorrection(); 
 1785              		.loc 1 506 0
 1786 03b2 FFF7FEFF 		bl	ForwardCourseCorrection
 1787 03b6 0346     		mov	r3, r0
 1788 03b8 FFE0     		b	.L72
 1789              	.L68:
 507:main.c        ****             break;
 508:main.c        ****         case ForwardUntilTarget:
 509:main.c        ****             // Reset distance on first iteration of this instruction
 510:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1790              		.loc 1 510 0
 1791 03ba 604B     		ldr	r3, .L119+36
 1792 03bc 1B78     		ldrb	r3, [r3]
 1793 03be DBB2     		uxtb	r3, r3
 1794 03c0 002B     		cmp	r3, #0
 1795 03c2 15D1     		bne	.L105
 1796              	.LBB3:
 511:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1797              		.loc 1 511 0
 1798 03c4 5D4B     		ldr	r3, .L119+36
 1799 03c6 0122     		movs	r2, #1
 1800 03c8 1A70     		strb	r2, [r3]
 512:main.c        ****                 totalDistance = 0;
 1801              		.loc 1 512 0
 1802 03ca 5D4B     		ldr	r3, .L119+40
 1803 03cc 4FF00002 		mov	r2, #0
 1804 03d0 1A60     		str	r2, [r3]	@ float
 513:main.c        **** 
 514:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 515:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1805              		.loc 1 515 0
 1806 03d2 5C4B     		ldr	r3, .L119+44
 1807 03d4 DB68     		ldr	r3, [r3, #12]
 1808 03d6 FB61     		str	r3, [r7, #28]
 516:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 42


 1809              		.loc 1 516 0
 1810 03d8 F869     		ldr	r0, [r7, #28]
 1811 03da FFF7FEFF 		bl	__aeabi_i2f
 1812 03de 0346     		mov	r3, r0
 1813 03e0 796A     		ldr	r1, [r7, #36]	@ float
 1814 03e2 1846     		mov	r0, r3
 1815 03e4 FFF7FEFF 		bl	__aeabi_fmul
 1816 03e8 0346     		mov	r3, r0
 1817 03ea 1A46     		mov	r2, r3
 1818 03ec 564B     		ldr	r3, .L119+48
 1819 03ee 1A60     		str	r2, [r3]	@ float
 1820              	.L105:
 1821              	.LBE3:
 517:main.c        ****             }
 518:main.c        ****             
 519:main.c        ****             
 520:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 521:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1822              		.loc 1 521 0
 1823 03f0 534B     		ldr	r3, .L119+40
 1824 03f2 1A68     		ldr	r2, [r3]	@ float
 1825 03f4 544B     		ldr	r3, .L119+48
 1826 03f6 1B68     		ldr	r3, [r3]	@ float
 1827 03f8 1946     		mov	r1, r3
 1828 03fa 1046     		mov	r0, r2
 1829 03fc FFF7FEFF 		bl	__aeabi_fcmpge
 1830 0400 0346     		mov	r3, r0
 1831 0402 002B     		cmp	r3, #0
 1832 0404 03D0     		beq	.L116
 522:main.c        ****                 // Get next instruction
 523:main.c        ****                 MoveToNextInstruction();
 1833              		.loc 1 523 0
 1834 0406 FFF7FEFF 		bl	MoveToNextInstruction
 524:main.c        **** 
 525:main.c        ****                 
 526:main.c        ****                 return Stop;
 1835              		.loc 1 526 0
 1836 040a 0523     		movs	r3, #5
 1837 040c D5E0     		b	.L72
 1838              	.L116:
 527:main.c        ****             }
 528:main.c        ****             
 529:main.c        ****             return ForwardCourseCorrection();
 1839              		.loc 1 529 0
 1840 040e FFF7FEFF 		bl	ForwardCourseCorrection
 1841 0412 0346     		mov	r3, r0
 1842 0414 D1E0     		b	.L72
 1843              	.L69:
 530:main.c        ****             break;
 531:main.c        ****         case StopAtTarget:
 532:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 533:main.c        ****             // Reset flags
 534:main.c        ****             totalDistance = 0;
 1844              		.loc 1 534 0
 1845 0416 4A4B     		ldr	r3, .L119+40
 1846 0418 4FF00002 		mov	r2, #0
 1847 041c 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 43


 535:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1848              		.loc 1 535 0
 1849 041e 474B     		ldr	r3, .L119+36
 1850 0420 0022     		movs	r2, #0
 1851 0422 1A70     		strb	r2, [r3]
 536:main.c        ****             blockSizeTotal = 0;
 1852              		.loc 1 536 0
 1853 0424 484B     		ldr	r3, .L119+48
 1854 0426 4FF00002 		mov	r2, #0
 1855 042a 1A60     		str	r2, [r3]	@ float
 537:main.c        ****             
 538:main.c        ****             if (currentDirection == Stop) {
 1856              		.loc 1 538 0
 1857 042c 404B     		ldr	r3, .L119+24
 1858 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1859 0430 052B     		cmp	r3, #5
 1860 0432 08D1     		bne	.L108
 539:main.c        ****                 if (stopBuffer <= 200) {
 1861              		.loc 1 539 0
 1862 0434 3F4B     		ldr	r3, .L119+28
 1863 0436 1B68     		ldr	r3, [r3]
 1864 0438 C82B     		cmp	r3, #200
 1865 043a 01D8     		bhi	.L109
 540:main.c        ****                     return Stop;    
 1866              		.loc 1 540 0
 1867 043c 0523     		movs	r3, #5
 1868 043e BCE0     		b	.L72
 1869              	.L109:
 541:main.c        ****                 } else {
 542:main.c        ****                     stopBuffer = 250;
 1870              		.loc 1 542 0
 1871 0440 3C4B     		ldr	r3, .L119+28
 1872 0442 FA22     		movs	r2, #250
 1873 0444 1A60     		str	r2, [r3]
 1874              	.L108:
 543:main.c        ****                 }
 544:main.c        ****             }
 545:main.c        ****             
 546:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
 547:main.c        ****             currentFoodListIndex++;
 1875              		.loc 1 547 0
 1876 0446 414B     		ldr	r3, .L119+52
 1877 0448 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 044a 0133     		adds	r3, r3, #1
 1879 044c DAB2     		uxtb	r2, r3
 1880 044e 3F4B     		ldr	r3, .L119+52
 1881 0450 1A70     		strb	r2, [r3]
 548:main.c        ****             instructionIndex = 0;
 1882              		.loc 1 548 0
 1883 0452 3F4B     		ldr	r3, .L119+56
 1884 0454 0022     		movs	r2, #0
 1885 0456 1A60     		str	r2, [r3]
 549:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 1886              		.loc 1 549 0
 1887 0458 3C4B     		ldr	r3, .L119+52
 1888 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1889 045c 1A46     		mov	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 44


 1890 045e 394B     		ldr	r3, .L119+44
 1891 0460 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1892 0462 3C49     		ldr	r1, .L119+60
 1893 0464 3C48     		ldr	r0, .L119+64
 1894 0466 FFF7FEFF 		bl	findPathNewOrientation
 1895 046a 0246     		mov	r2, r0
 1896 046c 3B4B     		ldr	r3, .L119+68
 1897 046e 1A60     		str	r2, [r3]
 550:main.c        ****             numSteps = instructionsListLength();
 1898              		.loc 1 550 0
 1899 0470 FFF7FEFF 		bl	instructionsListLength
 1900 0474 0346     		mov	r3, r0
 1901 0476 1A46     		mov	r2, r3
 1902 0478 394B     		ldr	r3, .L119+72
 1903 047a 1A60     		str	r2, [r3]
 551:main.c        ****     
 552:main.c        ****             currentInstruction = GetInstructionAtIndex(numSteps);
 1904              		.loc 1 552 0
 1905 047c 384B     		ldr	r3, .L119+72
 1906 047e 1A68     		ldr	r2, [r3]
 1907 0480 304C     		ldr	r4, .L119+44
 1908 0482 3B46     		mov	r3, r7
 1909 0484 1146     		mov	r1, r2
 1910 0486 1846     		mov	r0, r3
 1911 0488 FFF7FEFF 		bl	GetInstructionAtIndex
 1912 048c 2546     		mov	r5, r4
 1913 048e 3C46     		mov	r4, r7
 1914 0490 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1915 0492 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1916 0494 2368     		ldr	r3, [r4]
 1917 0496 2B60     		str	r3, [r5]
 553:main.c        **** 
 554:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 1918              		.loc 1 554 0
 1919 0498 304B     		ldr	r3, .L119+68
 1920 049a 1968     		ldr	r1, [r3]
 1921 049c 2C4B     		ldr	r3, .L119+56
 1922 049e 1A68     		ldr	r2, [r3]
 1923 04a0 1346     		mov	r3, r2
 1924 04a2 9B00     		lsls	r3, r3, #2
 1925 04a4 1344     		add	r3, r3, r2
 1926 04a6 9B00     		lsls	r3, r3, #2
 1927 04a8 0B44     		add	r3, r3, r1
 1928 04aa 5B68     		ldr	r3, [r3, #4]
 1929 04ac DAB2     		uxtb	r2, r3
 1930 04ae 2D4B     		ldr	r3, .L119+76
 1931 04b0 1A70     		strb	r2, [r3]
 555:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 1932              		.loc 1 555 0
 1933 04b2 2A4B     		ldr	r3, .L119+68
 1934 04b4 1968     		ldr	r1, [r3]
 1935 04b6 264B     		ldr	r3, .L119+56
 1936 04b8 1A68     		ldr	r2, [r3]
 1937 04ba 1346     		mov	r3, r2
 1938 04bc 9B00     		lsls	r3, r3, #2
 1939 04be 1344     		add	r3, r3, r2
 1940 04c0 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 45


 1941 04c2 0B44     		add	r3, r3, r1
 1942 04c4 9B68     		ldr	r3, [r3, #8]
 1943 04c6 DAB2     		uxtb	r2, r3
 1944 04c8 274B     		ldr	r3, .L119+80
 1945 04ca 1A70     		strb	r2, [r3]
 556:main.c        ****             
 557:main.c        ****             return Stop;
 1946              		.loc 1 557 0
 1947 04cc 0523     		movs	r3, #5
 1948 04ce 74E0     		b	.L72
 1949              	.L67:
 558:main.c        ****             break;
 559:main.c        ****         case uTurn:
 560:main.c        ****             if (currentDirection == Stop) {
 1950              		.loc 1 560 0
 1951 04d0 174B     		ldr	r3, .L119+24
 1952 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1953 04d4 052B     		cmp	r3, #5
 1954 04d6 08D1     		bne	.L110
 561:main.c        ****                 if (stopBuffer <= 50) {
 1955              		.loc 1 561 0
 1956 04d8 164B     		ldr	r3, .L119+28
 1957 04da 1B68     		ldr	r3, [r3]
 1958 04dc 322B     		cmp	r3, #50
 1959 04de 01D8     		bhi	.L111
 562:main.c        ****                     return Stop;    
 1960              		.loc 1 562 0
 1961 04e0 0523     		movs	r3, #5
 1962 04e2 6AE0     		b	.L72
 1963              	.L111:
 563:main.c        ****                 } else {
 564:main.c        ****                     stopBuffer = 100;    
 1964              		.loc 1 564 0
 1965 04e4 134B     		ldr	r3, .L119+28
 1966 04e6 6422     		movs	r2, #100
 1967 04e8 1A60     		str	r2, [r3]
 1968              	.L110:
 565:main.c        ****                 }
 566:main.c        ****             }
 567:main.c        ****             
 568:main.c        ****             
 569:main.c        ****             if (!uTurnStartedFlag) {
 1969              		.loc 1 569 0
 1970 04ea 204B     		ldr	r3, .L119+84
 1971 04ec 1B78     		ldrb	r3, [r3]
 1972 04ee DBB2     		uxtb	r3, r3
 1973 04f0 002B     		cmp	r3, #0
 1974 04f2 07D1     		bne	.L112
 570:main.c        ****                 uTurnStartedFlag = 1;
 1975              		.loc 1 570 0
 1976 04f4 1D4B     		ldr	r3, .L119+84
 1977 04f6 0122     		movs	r2, #1
 1978 04f8 1A70     		strb	r2, [r3]
 571:main.c        ****                 spinCourseCorrectionStarted = 0;
 1979              		.loc 1 571 0
 1980 04fa 1D4B     		ldr	r3, .L119+88
 1981 04fc 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 46


 1982 04fe 1A70     		strb	r2, [r3]
 572:main.c        ****                 return Spin180;
 1983              		.loc 1 572 0
 1984 0500 0A23     		movs	r3, #10
 1985 0502 5AE0     		b	.L72
 1986              	.L112:
 573:main.c        ****             } 
 574:main.c        ****             
 575:main.c        ****             if (uTurnFinishedFlag) {
 1987              		.loc 1 575 0
 1988 0504 1B4B     		ldr	r3, .L119+92
 1989 0506 1B78     		ldrb	r3, [r3]
 1990 0508 DBB2     		uxtb	r3, r3
 1991 050a 002B     		cmp	r3, #0
 1992 050c 34D0     		beq	.L113
 576:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 577:main.c        ****                 MoveToNextInstruction();
 1993              		.loc 1 577 0
 1994 050e FFF7FEFF 		bl	MoveToNextInstruction
 578:main.c        ****                 return Stop;    
 1995              		.loc 1 578 0
 1996 0512 0523     		movs	r3, #5
 1997 0514 51E0     		b	.L72
 1998              	.L120:
 1999 0516 00BF     		.align	2
 2000              	.L119:
 2001 0518 37000000 		.word	turnFinishedFlag
 2002 051c 00000000 		.word	s4
 2003 0520 00000000 		.word	s5
 2004 0524 00000000 		.word	s6
 2005 0528 00000000 		.word	forwardBuffer
 2006 052c 00000000 		.word	firstTurnIteration
 2007 0530 00000000 		.word	currentDirection
 2008 0534 00000000 		.word	stopBuffer
 2009 0538 36000000 		.word	turnStartedFlag
 2010 053c 38000000 		.word	forwardUntilTargetStartedFlag
 2011 0540 00000000 		.word	totalDistance
 2012 0544 00000000 		.word	currentInstruction
 2013 0548 00000000 		.word	blockSizeTotal
 2014 054c 00000000 		.word	currentFoodListIndex
 2015 0550 14000000 		.word	instructionIndex
 2016 0554 00000000 		.word	food_list
 2017 0558 00000000 		.word	map
 2018 055c 00000000 		.word	instructionList
 2019 0560 00000000 		.word	numSteps
 2020 0564 3E000000 		.word	currentIgnoreL
 2021 0568 45000000 		.word	currentIgnoreR
 2022 056c 39000000 		.word	uTurnStartedFlag
 2023 0570 3D000000 		.word	spinCourseCorrectionStarted
 2024 0574 3A000000 		.word	uTurnFinishedFlag
 2025              	.L113:
 579:main.c        ****             }
 580:main.c        ****             
 581:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 582:main.c        ****             if (uTurnStartedFlag) {
 2026              		.loc 1 582 0
 2027 0578 124B     		ldr	r3, .L121
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 47


 2028 057a 1B78     		ldrb	r3, [r3]
 2029 057c DBB2     		uxtb	r3, r3
 2030 057e 002B     		cmp	r3, #0
 2031 0580 16D0     		beq	.L114
 583:main.c        ****                 if (!s5 && !s6) {
 2032              		.loc 1 583 0
 2033 0582 114B     		ldr	r3, .L121+4
 2034 0584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2035 0586 002B     		cmp	r3, #0
 2036 0588 12D1     		bne	.L114
 2037              		.loc 1 583 0 is_stmt 0 discriminator 1
 2038 058a 104B     		ldr	r3, .L121+8
 2039 058c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2040 058e 002B     		cmp	r3, #0
 2041 0590 0ED1     		bne	.L114
 584:main.c        ****                     totalLineCount = 0;
 2042              		.loc 1 584 0 is_stmt 1
 2043 0592 0F4B     		ldr	r3, .L121+12
 2044 0594 0022     		movs	r2, #0
 2045 0596 1A70     		strb	r2, [r3]
 585:main.c        ****                     lineCount = 0;
 2046              		.loc 1 585 0
 2047 0598 0E4B     		ldr	r3, .L121+16
 2048 059a 0022     		movs	r2, #0
 2049 059c 1A70     		strb	r2, [r3]
 586:main.c        ****                     tooEarlyFlag = 0;
 2050              		.loc 1 586 0
 2051 059e 0E4B     		ldr	r3, .L121+20
 2052 05a0 0022     		movs	r2, #0
 2053 05a2 1A70     		strb	r2, [r3]
 587:main.c        ****                     tooLateFlag = 0;
 2054              		.loc 1 587 0
 2055 05a4 0D4B     		ldr	r3, .L121+24
 2056 05a6 0022     		movs	r2, #0
 2057 05a8 1A70     		strb	r2, [r3]
 588:main.c        ****                     uTurnFinishedFlag = 1;    
 2058              		.loc 1 588 0
 2059 05aa 0D4B     		ldr	r3, .L121+28
 2060 05ac 0122     		movs	r2, #1
 2061 05ae 1A70     		strb	r2, [r3]
 2062              	.L114:
 589:main.c        ****                 }    
 590:main.c        ****             }
 591:main.c        ****             
 592:main.c        ****             return SpinCourseCorrection();
 2063              		.loc 1 592 0
 2064 05b0 FFF7FEFF 		bl	SpinCourseCorrection
 2065 05b4 0346     		mov	r3, r0
 2066 05b6 00E0     		b	.L72
 2067              	.L62:
 593:main.c        ****             break;
 594:main.c        ****         default:
 595:main.c        ****             return Stop;
 2068              		.loc 1 595 0
 2069 05b8 0523     		movs	r3, #5
 2070              	.L72:
 596:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 48


 597:main.c        ****     }
 598:main.c        ****     return Stop;
 599:main.c        **** }
 2071              		.loc 1 599 0
 2072 05ba 1846     		mov	r0, r3
 2073 05bc 2837     		adds	r7, r7, #40
 2074              		.cfi_def_cfa_offset 16
 2075 05be BD46     		mov	sp, r7
 2076              		.cfi_def_cfa_register 13
 2077              		@ sp needed
 2078 05c0 B0BD     		pop	{r4, r5, r7, pc}
 2079              	.L122:
 2080 05c2 00BF     		.align	2
 2081              	.L121:
 2082 05c4 39000000 		.word	uTurnStartedFlag
 2083 05c8 00000000 		.word	s5
 2084 05cc 00000000 		.word	s6
 2085 05d0 3F000000 		.word	totalLineCount
 2086 05d4 40000000 		.word	lineCount
 2087 05d8 42000000 		.word	tooEarlyFlag
 2088 05dc 43000000 		.word	tooLateFlag
 2089 05e0 3A000000 		.word	uTurnFinishedFlag
 2090              		.cfi_endproc
 2091              	.LFE75:
 2092              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2093              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2094              		.align	2
 2095              		.global	MoveToNextInstruction
 2096              		.thumb
 2097              		.thumb_func
 2098              		.type	MoveToNextInstruction, %function
 2099              	MoveToNextInstruction:
 2100              	.LFB76:
 600:main.c        **** /*
 601:main.c        **** // Calculate total blocksize to travel until target
 602:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 603:main.c        ****     float totalBlockSize;
 604:main.c        ****     
 605:main.c        ****     // Check for Row, Col that target is 
 606:main.c        ****     int targetRow = food_list[0][0];
 607:main.c        ****     int targetCol = food_list[0][1];
 608:main.c        ****     
 609:main.c        ****     int pathCount = 0;
 610:main.c        ****     currentRobotOrientation = currentInstruction.expectedOrientation;
 611:main.c        ****     // Depending on the robot orientation
 612:main.c        ****     // count++ if row, col is 8
 613:main.c        ****     // count reset if row, col is 1 or 0
 614:main.c        ****     // save count if row, col is 9
 615:main.c        ****     switch (currentRobotOrientation) {
 616:main.c        ****         case Up:
 617:main.c        ****             // Column
 618:main.c        ****             // Start from Bottom (since we're facing up)
 619:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 620:main.c        ****                 if (map[i][targetCol] == 9) {
 621:main.c        ****                     break;    
 622:main.c        ****                 }
 623:main.c        ****                 if (map[i][targetCol] == 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 49


 624:main.c        ****                     pathCount++;    
 625:main.c        ****                 }
 626:main.c        ****                 if (map[i][targetCol] == 1) {
 627:main.c        ****                     pathCount = 0;
 628:main.c        ****                 }
 629:main.c        ****             }
 630:main.c        ****             break;
 631:main.c        ****         case Down:
 632:main.c        ****             // Target Column, Check Row
 633:main.c        ****             // Start from Top
 634:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 635:main.c        ****                 if (map[i][targetCol] == 9) {
 636:main.c        ****                     break;    
 637:main.c        ****                 }
 638:main.c        ****                 if (map[i][targetCol] == 0) {
 639:main.c        ****                     pathCount++;    
 640:main.c        ****                 }
 641:main.c        ****                 if (map[i][targetCol] == 1) {
 642:main.c        ****                     pathCount = 0;
 643:main.c        ****                 }
 644:main.c        ****             }
 645:main.c        ****             break;
 646:main.c        ****         case Left:
 647:main.c        ****             // Target Row, Check Col
 648:main.c        ****             // Start from Right
 649:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 650:main.c        ****                 if (map[targetRow][i] == 9) {
 651:main.c        ****                     break;    
 652:main.c        ****                 }
 653:main.c        ****                 if (map[targetRow][i] == 0) {
 654:main.c        ****                     pathCount++;    
 655:main.c        ****                 }
 656:main.c        ****                 if (map[i][targetCol] == 1) {
 657:main.c        ****                     pathCount = 0;
 658:main.c        ****                 }
 659:main.c        ****             }
 660:main.c        ****             break;
 661:main.c        ****         
 662:main.c        ****         case Right:
 663:main.c        ****             // Target Row, Check Col
 664:main.c        ****             // Start from Left
 665:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 666:main.c        ****                 if (map[targetRow][i] == 9) {
 667:main.c        ****                     break;    
 668:main.c        ****                 }
 669:main.c        ****                 if (map[targetRow][i] == 0) {
 670:main.c        ****                     pathCount++;    
 671:main.c        ****                 }
 672:main.c        ****                 if (map[i][targetCol] == 1) {
 673:main.c        ****                     pathCount = 0;
 674:main.c        ****                 }
 675:main.c        **** 
 676:main.c        ****             }
 677:main.c        ****             break;
 678:main.c        ****     }
 679:main.c        ****     totalBlockSize = blockSize * pathCount;
 680:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 50


 681:main.c        ****     return totalBlockSize;
 682:main.c        **** }
 683:main.c        **** */
 684:main.c        **** // get next instruction
 685:main.c        **** void MoveToNextInstruction() {
 2101              		.loc 1 685 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 1, uses_anonymous_args = 0
 2105              		@ link register save eliminated.
 2106 0000 80B4     		push	{r7}
 2107              		.cfi_def_cfa_offset 4
 2108              		.cfi_offset 7, -4
 2109 0002 00AF     		add	r7, sp, #0
 2110              		.cfi_def_cfa_register 7
 686:main.c        ****     currentIgnoreL = 0;
 2111              		.loc 1 686 0
 2112 0004 144B     		ldr	r3, .L124
 2113 0006 0022     		movs	r2, #0
 2114 0008 1A70     		strb	r2, [r3]
 687:main.c        ****     currentIgnoreR = 0;
 2115              		.loc 1 687 0
 2116 000a 144B     		ldr	r3, .L124+4
 2117 000c 0022     		movs	r2, #0
 2118 000e 1A70     		strb	r2, [r3]
 688:main.c        ****     instructionIndex++;
 2119              		.loc 1 688 0
 2120 0010 134B     		ldr	r3, .L124+8
 2121 0012 1B68     		ldr	r3, [r3]
 2122 0014 0133     		adds	r3, r3, #1
 2123 0016 124A     		ldr	r2, .L124+8
 2124 0018 1360     		str	r3, [r2]
 689:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2125              		.loc 1 689 0
 2126 001a 124B     		ldr	r3, .L124+12
 2127 001c 1968     		ldr	r1, [r3]
 2128 001e 104B     		ldr	r3, .L124+8
 2129 0020 1A68     		ldr	r2, [r3]
 2130 0022 1346     		mov	r3, r2
 2131 0024 9B00     		lsls	r3, r3, #2
 2132 0026 1344     		add	r3, r3, r2
 2133 0028 9B00     		lsls	r3, r3, #2
 2134 002a 0B44     		add	r3, r3, r1
 2135 002c 5B68     		ldr	r3, [r3, #4]
 2136 002e DAB2     		uxtb	r2, r3
 2137 0030 094B     		ldr	r3, .L124
 2138 0032 1A70     		strb	r2, [r3]
 690:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2139              		.loc 1 690 0
 2140 0034 0B4B     		ldr	r3, .L124+12
 2141 0036 1968     		ldr	r1, [r3]
 2142 0038 094B     		ldr	r3, .L124+8
 2143 003a 1A68     		ldr	r2, [r3]
 2144 003c 1346     		mov	r3, r2
 2145 003e 9B00     		lsls	r3, r3, #2
 2146 0040 1344     		add	r3, r3, r2
 2147 0042 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 51


 2148 0044 0B44     		add	r3, r3, r1
 2149 0046 9B68     		ldr	r3, [r3, #8]
 2150 0048 DAB2     		uxtb	r2, r3
 2151 004a 044B     		ldr	r3, .L124+4
 2152 004c 1A70     		strb	r2, [r3]
 691:main.c        **** 
 692:main.c        **** }
 2153              		.loc 1 692 0
 2154 004e 00BF     		nop
 2155 0050 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 0052 80BC     		pop	{r7}
 2159              		.cfi_restore 7
 2160              		.cfi_def_cfa_offset 0
 2161 0054 7047     		bx	lr
 2162              	.L125:
 2163 0056 00BF     		.align	2
 2164              	.L124:
 2165 0058 3E000000 		.word	currentIgnoreL
 2166 005c 45000000 		.word	currentIgnoreR
 2167 0060 14000000 		.word	instructionIndex
 2168 0064 00000000 		.word	instructionList
 2169              		.cfi_endproc
 2170              	.LFE76:
 2171              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2172              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2173              		.align	2
 2174              		.global	GetInstructionAtIndex
 2175              		.thumb
 2176              		.thumb_func
 2177              		.type	GetInstructionAtIndex, %function
 2178              	GetInstructionAtIndex:
 2179              	.LFB77:
 693:main.c        **** 
 694:main.c        **** Instruction GetInstructionAtIndex(int numSteps) {
 2180              		.loc 1 694 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 32
 2183              		@ frame_needed = 1, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
 2185 0000 B0B4     		push	{r4, r5, r7}
 2186              		.cfi_def_cfa_offset 12
 2187              		.cfi_offset 4, -12
 2188              		.cfi_offset 5, -8
 2189              		.cfi_offset 7, -4
 2190 0002 89B0     		sub	sp, sp, #36
 2191              		.cfi_def_cfa_offset 48
 2192 0004 00AF     		add	r7, sp, #0
 2193              		.cfi_def_cfa_register 7
 2194 0006 7860     		str	r0, [r7, #4]
 2195 0008 3960     		str	r1, [r7]
 695:main.c        ****     Instruction nextInstruction;
 696:main.c        ****     // input is list of instructions and robot will react accordingly
 697:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2196              		.loc 1 697 0
 2197 000a 174B     		ldr	r3, .L128
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 52


 2198 000c 1968     		ldr	r1, [r3]
 2199 000e 174B     		ldr	r3, .L128+4
 2200 0010 1A68     		ldr	r2, [r3]
 2201 0012 1346     		mov	r3, r2
 2202 0014 9B00     		lsls	r3, r3, #2
 2203 0016 1344     		add	r3, r3, r2
 2204 0018 9B00     		lsls	r3, r3, #2
 2205 001a 0B44     		add	r3, r3, r1
 2206 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2207 001e 3B73     		strb	r3, [r7, #12]
 698:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2208              		.loc 1 698 0
 2209 0020 114B     		ldr	r3, .L128
 2210 0022 1968     		ldr	r1, [r3]
 2211 0024 114B     		ldr	r3, .L128+4
 2212 0026 1A68     		ldr	r2, [r3]
 2213 0028 1346     		mov	r3, r2
 2214 002a 9B00     		lsls	r3, r3, #2
 2215 002c 1344     		add	r3, r3, r2
 2216 002e 9B00     		lsls	r3, r3, #2
 2217 0030 0B44     		add	r3, r3, r1
 2218 0032 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2219 0034 3B77     		strb	r3, [r7, #28]
 699:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2220              		.loc 1 699 0
 2221 0036 0C4B     		ldr	r3, .L128
 2222 0038 1968     		ldr	r1, [r3]
 2223 003a 0C4B     		ldr	r3, .L128+4
 2224 003c 1A68     		ldr	r2, [r3]
 2225 003e 1346     		mov	r3, r2
 2226 0040 9B00     		lsls	r3, r3, #2
 2227 0042 1344     		add	r3, r3, r2
 2228 0044 9B00     		lsls	r3, r3, #2
 2229 0046 0B44     		add	r3, r3, r1
 2230 0048 DB68     		ldr	r3, [r3, #12]
 2231 004a BB61     		str	r3, [r7, #24]
 700:main.c        ****     return nextInstruction;
 2232              		.loc 1 700 0
 2233 004c 7B68     		ldr	r3, [r7, #4]
 2234 004e 1D46     		mov	r5, r3
 2235 0050 07F10C04 		add	r4, r7, #12
 2236 0054 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2237 0056 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2238 0058 2368     		ldr	r3, [r4]
 2239 005a 2B60     		str	r3, [r5]
 701:main.c        **** }
 2240              		.loc 1 701 0
 2241 005c 7868     		ldr	r0, [r7, #4]
 2242 005e 2437     		adds	r7, r7, #36
 2243              		.cfi_def_cfa_offset 12
 2244 0060 BD46     		mov	sp, r7
 2245              		.cfi_def_cfa_register 13
 2246              		@ sp needed
 2247 0062 B0BC     		pop	{r4, r5, r7}
 2248              		.cfi_restore 7
 2249              		.cfi_restore 5
 2250              		.cfi_restore 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 53


 2251              		.cfi_def_cfa_offset 0
 2252 0064 7047     		bx	lr
 2253              	.L129:
 2254 0066 00BF     		.align	2
 2255              	.L128:
 2256 0068 00000000 		.word	instructionList
 2257 006c 14000000 		.word	instructionIndex
 2258              		.cfi_endproc
 2259              	.LFE77:
 2260              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2261              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2262              		.align	2
 2263              		.global	RotateClockwise180Degrees
 2264              		.thumb
 2265              		.thumb_func
 2266              		.type	RotateClockwise180Degrees, %function
 2267              	RotateClockwise180Degrees:
 2268              	.LFB78:
 702:main.c        **** 
 703:main.c        **** void RotateClockwise180Degrees() {
 2269              		.loc 1 703 0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 8
 2272              		@ frame_needed = 1, uses_anonymous_args = 0
 2273 0000 80B5     		push	{r7, lr}
 2274              		.cfi_def_cfa_offset 8
 2275              		.cfi_offset 7, -8
 2276              		.cfi_offset 14, -4
 2277 0002 82B0     		sub	sp, sp, #8
 2278              		.cfi_def_cfa_offset 16
 2279 0004 00AF     		add	r7, sp, #0
 2280              		.cfi_def_cfa_register 7
 704:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2281              		.loc 1 704 0
 2282 0006 49F20873 		movw	r3, #38664
 2283 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 705:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2284              		.loc 1 705 0
 2285 000c 49F20873 		movw	r3, #38664
 2286 0010 3B80     		strh	r3, [r7]	@ movhi
 706:main.c        ****     PWM_1_WriteCompare(count1);
 2287              		.loc 1 706 0
 2288 0012 7B88     		ldrh	r3, [r7, #2]
 2289 0014 1846     		mov	r0, r3
 2290 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 707:main.c        ****     PWM_2_WriteCompare(count2);
 2291              		.loc 1 707 0
 2292 001a 3B88     		ldrh	r3, [r7]
 2293 001c 1846     		mov	r0, r3
 2294 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 708:main.c        ****     
 709:main.c        ****     int quadPulseCount = 0;
 2295              		.loc 1 709 0
 2296 0022 0023     		movs	r3, #0
 2297 0024 7B60     		str	r3, [r7, #4]
 710:main.c        ****     QuadDec_M1_SetCounter(0);
 2298              		.loc 1 710 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 54


 2299 0026 0020     		movs	r0, #0
 2300 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 711:main.c        ****     // Before 180, save initial configuration
 712:main.c        ****     if (!s3) {
 2301              		.loc 1 712 0
 2302 002c 3A4B     		ldr	r3, .L143
 2303 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2304 0030 002B     		cmp	r3, #0
 2305 0032 06D1     		bne	.L131
 713:main.c        ****         totalLineCount++;    
 2306              		.loc 1 713 0
 2307 0034 394B     		ldr	r3, .L143+4
 2308 0036 1B78     		ldrb	r3, [r3]
 2309 0038 DBB2     		uxtb	r3, r3
 2310 003a 0133     		adds	r3, r3, #1
 2311 003c DAB2     		uxtb	r2, r3
 2312 003e 374B     		ldr	r3, .L143+4
 2313 0040 1A70     		strb	r2, [r3]
 2314              	.L131:
 714:main.c        ****     }
 715:main.c        ****     if (!s4) {
 2315              		.loc 1 715 0
 2316 0042 374B     		ldr	r3, .L143+8
 2317 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2318 0046 002B     		cmp	r3, #0
 2319 0048 06D1     		bne	.L132
 716:main.c        ****         totalLineCount++;    
 2320              		.loc 1 716 0
 2321 004a 344B     		ldr	r3, .L143+4
 2322 004c 1B78     		ldrb	r3, [r3]
 2323 004e DBB2     		uxtb	r3, r3
 2324 0050 0133     		adds	r3, r3, #1
 2325 0052 DAB2     		uxtb	r2, r3
 2326 0054 314B     		ldr	r3, .L143+4
 2327 0056 1A70     		strb	r2, [r3]
 2328              	.L132:
 717:main.c        ****     }
 718:main.c        ****     if (!s5 || !s6) {
 2329              		.loc 1 718 0
 2330 0058 324B     		ldr	r3, .L143+12
 2331 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2332 005c 002B     		cmp	r3, #0
 2333 005e 03D0     		beq	.L133
 2334              		.loc 1 718 0 is_stmt 0 discriminator 1
 2335 0060 314B     		ldr	r3, .L143+16
 2336 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2337 0064 002B     		cmp	r3, #0
 2338 0066 2AD1     		bne	.L135
 2339              	.L133:
 719:main.c        ****         totalLineCount++;    
 2340              		.loc 1 719 0 is_stmt 1
 2341 0068 2C4B     		ldr	r3, .L143+4
 2342 006a 1B78     		ldrb	r3, [r3]
 2343 006c DBB2     		uxtb	r3, r3
 2344 006e 0133     		adds	r3, r3, #1
 2345 0070 DAB2     		uxtb	r2, r3
 2346 0072 2A4B     		ldr	r3, .L143+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 55


 2347 0074 1A70     		strb	r2, [r3]
 720:main.c        ****     }
 721:main.c        ****     
 722:main.c        ****     // During 180
 723:main.c        ****     while(quadPulseCount < 210) {
 2348              		.loc 1 723 0
 2349 0076 22E0     		b	.L135
 2350              	.L138:
 724:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2351              		.loc 1 724 0
 2352 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2353 007c 0346     		mov	r3, r0
 2354 007e 7B60     		str	r3, [r7, #4]
 725:main.c        ****         if (!s3) {
 2355              		.loc 1 725 0
 2356 0080 254B     		ldr	r3, .L143
 2357 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2358 0084 002B     		cmp	r3, #0
 2359 0086 02D1     		bne	.L136
 726:main.c        ****             onLineFlag = 1;    
 2360              		.loc 1 726 0
 2361 0088 284B     		ldr	r3, .L143+20
 2362 008a 0122     		movs	r2, #1
 2363 008c 1A70     		strb	r2, [r3]
 2364              	.L136:
 727:main.c        ****         }
 728:main.c        ****         
 729:main.c        ****         if (onLineFlag) {
 2365              		.loc 1 729 0
 2366 008e 274B     		ldr	r3, .L143+20
 2367 0090 1B78     		ldrb	r3, [r3]
 2368 0092 DBB2     		uxtb	r3, r3
 2369 0094 002B     		cmp	r3, #0
 2370 0096 06D0     		beq	.L137
 730:main.c        ****             lineCount++;    
 2371              		.loc 1 730 0
 2372 0098 254B     		ldr	r3, .L143+24
 2373 009a 1B78     		ldrb	r3, [r3]
 2374 009c DBB2     		uxtb	r3, r3
 2375 009e 0133     		adds	r3, r3, #1
 2376 00a0 DAB2     		uxtb	r2, r3
 2377 00a2 234B     		ldr	r3, .L143+24
 2378 00a4 1A70     		strb	r2, [r3]
 2379              	.L137:
 731:main.c        ****         }
 732:main.c        ****         
 733:main.c        ****         if (!onLineFlag) {
 2380              		.loc 1 733 0
 2381 00a6 214B     		ldr	r3, .L143+20
 2382 00a8 1B78     		ldrb	r3, [r3]
 2383 00aa DBB2     		uxtb	r3, r3
 2384 00ac 002B     		cmp	r3, #0
 2385 00ae 06D1     		bne	.L135
 734:main.c        ****             if (s3) {
 2386              		.loc 1 734 0
 2387 00b0 194B     		ldr	r3, .L143
 2388 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 56


 2389 00b4 002B     		cmp	r3, #0
 2390 00b6 02D0     		beq	.L135
 735:main.c        ****                 onLineFlag = 0;    
 2391              		.loc 1 735 0
 2392 00b8 1C4B     		ldr	r3, .L143+20
 2393 00ba 0022     		movs	r2, #0
 2394 00bc 1A70     		strb	r2, [r3]
 2395              	.L135:
 723:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2396              		.loc 1 723 0
 2397 00be 7B68     		ldr	r3, [r7, #4]
 2398 00c0 D12B     		cmp	r3, #209
 2399 00c2 D9DD     		ble	.L138
 736:main.c        ****             }
 737:main.c        ****         }
 738:main.c        ****     }
 739:main.c        ****     
 740:main.c        ****     // After 180
 741:main.c        ****     if (totalLineCount == 0) {
 2400              		.loc 1 741 0
 2401 00c4 154B     		ldr	r3, .L143+4
 2402 00c6 1B78     		ldrb	r3, [r3]
 2403 00c8 DBB2     		uxtb	r3, r3
 2404 00ca 002B     		cmp	r3, #0
 2405 00cc 06D1     		bne	.L139
 742:main.c        ****         // we are on no lines
 743:main.c        ****         tooEarlyFlag = 1;
 2406              		.loc 1 743 0
 2407 00ce 194B     		ldr	r3, .L143+28
 2408 00d0 0122     		movs	r2, #1
 2409 00d2 1A70     		strb	r2, [r3]
 744:main.c        ****         QuadDec_M1_SetCounter(0);
 2410              		.loc 1 744 0
 2411 00d4 0020     		movs	r0, #0
 2412 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 745:main.c        ****         return;
 2413              		.loc 1 745 0
 2414 00da 19E0     		b	.L130
 2415              	.L139:
 746:main.c        ****     }
 747:main.c        ****     else if (lineCount > totalLineCount) {
 2416              		.loc 1 747 0
 2417 00dc 144B     		ldr	r3, .L143+24
 2418 00de 1B78     		ldrb	r3, [r3]
 2419 00e0 DAB2     		uxtb	r2, r3
 2420 00e2 0E4B     		ldr	r3, .L143+4
 2421 00e4 1B78     		ldrb	r3, [r3]
 2422 00e6 DBB2     		uxtb	r3, r3
 2423 00e8 9A42     		cmp	r2, r3
 2424 00ea 03D9     		bls	.L141
 748:main.c        ****         tooLateFlag = 1;    
 2425              		.loc 1 748 0
 2426 00ec 124B     		ldr	r3, .L143+32
 2427 00ee 0122     		movs	r2, #1
 2428 00f0 1A70     		strb	r2, [r3]
 2429 00f2 0AE0     		b	.L142
 2430              	.L141:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 57


 749:main.c        ****     }
 750:main.c        ****     else if (lineCount < totalLineCount) {
 2431              		.loc 1 750 0
 2432 00f4 0E4B     		ldr	r3, .L143+24
 2433 00f6 1B78     		ldrb	r3, [r3]
 2434 00f8 DAB2     		uxtb	r2, r3
 2435 00fa 084B     		ldr	r3, .L143+4
 2436 00fc 1B78     		ldrb	r3, [r3]
 2437 00fe DBB2     		uxtb	r3, r3
 2438 0100 9A42     		cmp	r2, r3
 2439 0102 02D2     		bcs	.L142
 751:main.c        ****         tooEarlyFlag = 1;    
 2440              		.loc 1 751 0
 2441 0104 0B4B     		ldr	r3, .L143+28
 2442 0106 0122     		movs	r2, #1
 2443 0108 1A70     		strb	r2, [r3]
 2444              	.L142:
 752:main.c        ****     }
 753:main.c        ****     QuadDec_M1_SetCounter(0);
 2445              		.loc 1 753 0
 2446 010a 0020     		movs	r0, #0
 2447 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2448              	.L130:
 754:main.c        **** }
 2449              		.loc 1 754 0
 2450 0110 0837     		adds	r7, r7, #8
 2451              		.cfi_def_cfa_offset 8
 2452 0112 BD46     		mov	sp, r7
 2453              		.cfi_def_cfa_register 13
 2454              		@ sp needed
 2455 0114 80BD     		pop	{r7, pc}
 2456              	.L144:
 2457 0116 00BF     		.align	2
 2458              	.L143:
 2459 0118 00000000 		.word	s3
 2460 011c 3F000000 		.word	totalLineCount
 2461 0120 00000000 		.word	s4
 2462 0124 00000000 		.word	s5
 2463 0128 00000000 		.word	s6
 2464 012c 41000000 		.word	onLineFlag
 2465 0130 40000000 		.word	lineCount
 2466 0134 42000000 		.word	tooEarlyFlag
 2467 0138 43000000 		.word	tooLateFlag
 2468              		.cfi_endproc
 2469              	.LFE78:
 2470              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2471              		.section	.text.SetRobotMovement,"ax",%progbits
 2472              		.align	2
 2473              		.global	SetRobotMovement
 2474              		.thumb
 2475              		.thumb_func
 2476              		.type	SetRobotMovement, %function
 2477              	SetRobotMovement:
 2478              	.LFB79:
 755:main.c        **** 
 756:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 757:main.c        **** void SetRobotMovement() {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 58


 2479              		.loc 1 757 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 24
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 B0B5     		push	{r4, r5, r7, lr}
 2484              		.cfi_def_cfa_offset 16
 2485              		.cfi_offset 4, -16
 2486              		.cfi_offset 5, -12
 2487              		.cfi_offset 7, -8
 2488              		.cfi_offset 14, -4
 2489 0002 86B0     		sub	sp, sp, #24
 2490              		.cfi_def_cfa_offset 40
 2491 0004 00AF     		add	r7, sp, #0
 2492              		.cfi_def_cfa_register 7
 758:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps); // get current/ next instruction
 2493              		.loc 1 758 0
 2494 0006 2A4B     		ldr	r3, .L161
 2495 0008 1A68     		ldr	r2, [r3]
 2496 000a 2A4C     		ldr	r4, .L161+4
 2497 000c 3B46     		mov	r3, r7
 2498 000e 1146     		mov	r1, r2
 2499 0010 1846     		mov	r0, r3
 2500 0012 FFF7FEFF 		bl	GetInstructionAtIndex
 2501 0016 2546     		mov	r5, r4
 2502 0018 3C46     		mov	r4, r7
 2503 001a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2504 001c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2505 001e 2368     		ldr	r3, [r4]
 2506 0020 2B60     		str	r3, [r5]
 759:main.c        ****     previousDirection = currentDirection;
 2507              		.loc 1 759 0
 2508 0022 254B     		ldr	r3, .L161+8
 2509 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2510 0026 254B     		ldr	r3, .L161+12
 2511 0028 1A70     		strb	r2, [r3]
 760:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2512              		.loc 1 760 0
 2513 002a FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2514 002e 0346     		mov	r3, r0
 2515 0030 1A46     		mov	r2, r3
 2516 0032 214B     		ldr	r3, .L161+8
 2517 0034 1A70     		strb	r2, [r3]
 761:main.c        ****     // move robot depending on sensors
 762:main.c        ****     switch (currentDirection) {
 2518              		.loc 1 762 0
 2519 0036 204B     		ldr	r3, .L161+8
 2520 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2521 003a 0A2B     		cmp	r3, #10
 2522 003c 34D8     		bhi	.L159
 2523 003e 01A2     		adr	r2, .L148
 2524 0040 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2525              		.p2align 2
 2526              	.L148:
 2527 0044 71000000 		.word	.L147+1
 2528 0048 77000000 		.word	.L149+1
 2529 004c 7D000000 		.word	.L150+1
 2530 0050 89000000 		.word	.L151+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 59


 2531 0054 83000000 		.word	.L152+1
 2532 0058 8F000000 		.word	.L153+1
 2533 005c A7000000 		.word	.L160+1
 2534 0060 A7000000 		.word	.L160+1
 2535 0064 95000000 		.word	.L156+1
 2536 0068 9B000000 		.word	.L157+1
 2537 006c A1000000 		.word	.L158+1
 2538              		.p2align 1
 2539              	.L147:
 763:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 764:main.c        ****         case Forward:
 765:main.c        ****             moveForward();
 2540              		.loc 1 765 0
 2541 0070 FFF7FEFF 		bl	moveForward
 766:main.c        ****             break;
 2542              		.loc 1 766 0
 2543 0074 18E0     		b	.L146
 2544              	.L149:
 767:main.c        ****         case TurnRight:
 768:main.c        ****             turnRight();
 2545              		.loc 1 768 0
 2546 0076 FFF7FEFF 		bl	turnRight
 769:main.c        ****             break;
 2547              		.loc 1 769 0
 2548 007a 15E0     		b	.L146
 2549              	.L150:
 770:main.c        ****         case TurnLeft:
 771:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2550              		.loc 1 771 0
 2551 007c FFF7FEFF 		bl	turnLeft
 772:main.c        ****             break;
 2552              		.loc 1 772 0
 2553 0080 12E0     		b	.L146
 2554              	.L152:
 773:main.c        ****         case AdjustToTheRight:
 774:main.c        ****             adjustRight();
 2555              		.loc 1 774 0
 2556 0082 FFF7FEFF 		bl	adjustRight
 775:main.c        ****             break;
 2557              		.loc 1 775 0
 2558 0086 0FE0     		b	.L146
 2559              	.L151:
 776:main.c        ****         case AdjustToTheLeft:
 777:main.c        ****             adjustLeft();
 2560              		.loc 1 777 0
 2561 0088 FFF7FEFF 		bl	adjustLeft
 778:main.c        ****             break;
 2562              		.loc 1 778 0
 2563 008c 0CE0     		b	.L146
 2564              	.L153:
 779:main.c        ****         case Stop:
 780:main.c        ****             stopMoving();
 2565              		.loc 1 780 0
 2566 008e FFF7FEFF 		bl	stopMoving
 781:main.c        ****             break;
 2567              		.loc 1 781 0
 2568 0092 09E0     		b	.L146
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 60


 2569              	.L156:
 782:main.c        ****         case ForwardAfterTurn:
 783:main.c        ****             moveForward();
 2570              		.loc 1 783 0
 2571 0094 FFF7FEFF 		bl	moveForward
 784:main.c        ****             break;
 2572              		.loc 1 784 0
 2573 0098 06E0     		b	.L146
 2574              	.L157:
 785:main.c        ****         case Backward:
 786:main.c        ****             moveBackward();
 2575              		.loc 1 786 0
 2576 009a FFF7FEFF 		bl	moveBackward
 787:main.c        ****             break;
 2577              		.loc 1 787 0
 2578 009e 03E0     		b	.L146
 2579              	.L158:
 788:main.c        ****         case waitForTurn:
 789:main.c        ****             break;
 790:main.c        ****         case Spin180:
 791:main.c        ****             RotateClockwise180Degrees();
 2580              		.loc 1 791 0
 2581 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 792:main.c        ****             break;
 2582              		.loc 1 792 0
 2583 00a4 00E0     		b	.L146
 2584              	.L160:
 793:main.c        ****         /*case waitForLeftTurn:
 794:main.c        ****             moveForward();
 795:main.c        ****             break;
 796:main.c        ****         case waitForRightTurn:
 797:main.c        ****             moveForward();
 798:main.c        ****             break;*/
 799:main.c        ****         case Unknown:
 800:main.c        ****             // UNKNOWN CONFIGURATION
 801:main.c        ****             break;  
 2585              		.loc 1 801 0
 2586 00a6 00BF     		nop
 2587              	.L146:
 2588              	.L159:
 802:main.c        ****     }
 803:main.c        **** }
 2589              		.loc 1 803 0
 2590 00a8 00BF     		nop
 2591 00aa 1837     		adds	r7, r7, #24
 2592              		.cfi_def_cfa_offset 16
 2593 00ac BD46     		mov	sp, r7
 2594              		.cfi_def_cfa_register 13
 2595              		@ sp needed
 2596 00ae B0BD     		pop	{r4, r5, r7, pc}
 2597              	.L162:
 2598              		.align	2
 2599              	.L161:
 2600 00b0 00000000 		.word	numSteps
 2601 00b4 00000000 		.word	currentInstruction
 2602 00b8 00000000 		.word	currentDirection
 2603 00bc 00000000 		.word	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 61


 2604              		.cfi_endproc
 2605              	.LFE79:
 2606              		.size	SetRobotMovement, .-SetRobotMovement
 2607              		.text
 2608              	.Letext0:
 2609              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2610              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2611              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2612              		.file 5 "vars.h"
 2613              		.file 6 "pathfinding.h"
 2614              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2615              		.file 8 "map.h"
 2616              		.section	.debug_info,"",%progbits
 2617              	.Ldebug_info0:
 2618 0000 BC090000 		.4byte	0x9bc
 2619 0004 0400     		.2byte	0x4
 2620 0006 00000000 		.4byte	.Ldebug_abbrev0
 2621 000a 04       		.byte	0x4
 2622 000b 01       		.uleb128 0x1
 2623 000c E8000000 		.4byte	.LASF155
 2624 0010 0C       		.byte	0xc
 2625 0011 52040000 		.4byte	.LASF156
 2626 0015 78000000 		.4byte	.LASF157
 2627 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2628 001d 00000000 		.4byte	0
 2629 0021 00000000 		.4byte	.Ldebug_line0
 2630 0025 02       		.uleb128 0x2
 2631 0026 01       		.byte	0x1
 2632 0027 06       		.byte	0x6
 2633 0028 6C000000 		.4byte	.LASF0
 2634 002c 02       		.uleb128 0x2
 2635 002d 01       		.byte	0x1
 2636 002e 08       		.byte	0x8
 2637 002f 01060000 		.4byte	.LASF1
 2638 0033 02       		.uleb128 0x2
 2639 0034 02       		.byte	0x2
 2640 0035 05       		.byte	0x5
 2641 0036 33060000 		.4byte	.LASF2
 2642 003a 02       		.uleb128 0x2
 2643 003b 02       		.byte	0x2
 2644 003c 07       		.byte	0x7
 2645 003d 07040000 		.4byte	.LASF3
 2646 0041 03       		.uleb128 0x3
 2647 0042 48040000 		.4byte	.LASF12
 2648 0046 02       		.byte	0x2
 2649 0047 3F       		.byte	0x3f
 2650 0048 4C000000 		.4byte	0x4c
 2651 004c 02       		.uleb128 0x2
 2652 004d 04       		.byte	0x4
 2653 004e 05       		.byte	0x5
 2654 004f 89020000 		.4byte	.LASF4
 2655 0053 02       		.uleb128 0x2
 2656 0054 04       		.byte	0x4
 2657 0055 07       		.byte	0x7
 2658 0056 AC030000 		.4byte	.LASF5
 2659 005a 02       		.uleb128 0x2
 2660 005b 08       		.byte	0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 62


 2661 005c 05       		.byte	0x5
 2662 005d D9020000 		.4byte	.LASF6
 2663 0061 02       		.uleb128 0x2
 2664 0062 08       		.byte	0x8
 2665 0063 07       		.byte	0x7
 2666 0064 98010000 		.4byte	.LASF7
 2667 0068 04       		.uleb128 0x4
 2668 0069 04       		.byte	0x4
 2669 006a 05       		.byte	0x5
 2670 006b 696E7400 		.ascii	"int\000"
 2671 006f 02       		.uleb128 0x2
 2672 0070 04       		.byte	0x4
 2673 0071 07       		.byte	0x7
 2674 0072 25070000 		.4byte	.LASF8
 2675 0076 02       		.uleb128 0x2
 2676 0077 08       		.byte	0x8
 2677 0078 04       		.byte	0x4
 2678 0079 04070000 		.4byte	.LASF9
 2679 007d 02       		.uleb128 0x2
 2680 007e 04       		.byte	0x4
 2681 007f 07       		.byte	0x7
 2682 0080 F8040000 		.4byte	.LASF10
 2683 0084 02       		.uleb128 0x2
 2684 0085 01       		.byte	0x1
 2685 0086 08       		.byte	0x8
 2686 0087 10070000 		.4byte	.LASF11
 2687 008b 03       		.uleb128 0x3
 2688 008c F9050000 		.4byte	.LASF13
 2689 0090 03       		.byte	0x3
 2690 0091 2C       		.byte	0x2c
 2691 0092 41000000 		.4byte	0x41
 2692 0096 05       		.uleb128 0x5
 2693 0097 D3020000 		.4byte	.LASF14
 2694 009b 04       		.byte	0x4
 2695 009c E701     		.2byte	0x1e7
 2696 009e 2C000000 		.4byte	0x2c
 2697 00a2 05       		.uleb128 0x5
 2698 00a3 0F060000 		.4byte	.LASF15
 2699 00a7 04       		.byte	0x4
 2700 00a8 E801     		.2byte	0x1e8
 2701 00aa 3A000000 		.4byte	0x3a
 2702 00ae 05       		.uleb128 0x5
 2703 00af 39030000 		.4byte	.LASF16
 2704 00b3 04       		.byte	0x4
 2705 00b4 E901     		.2byte	0x1e9
 2706 00b6 53000000 		.4byte	0x53
 2707 00ba 05       		.uleb128 0x5
 2708 00bb 38040000 		.4byte	.LASF17
 2709 00bf 04       		.byte	0x4
 2710 00c0 EA01     		.2byte	0x1ea
 2711 00c2 25000000 		.4byte	0x25
 2712 00c6 05       		.uleb128 0x5
 2713 00c7 61080000 		.4byte	.LASF18
 2714 00cb 04       		.byte	0x4
 2715 00cc EB01     		.2byte	0x1eb
 2716 00ce 33000000 		.4byte	0x33
 2717 00d2 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 63


 2718 00d3 04       		.byte	0x4
 2719 00d4 04       		.byte	0x4
 2720 00d5 9E050000 		.4byte	.LASF19
 2721 00d9 02       		.uleb128 0x2
 2722 00da 08       		.byte	0x8
 2723 00db 04       		.byte	0x4
 2724 00dc E7020000 		.4byte	.LASF20
 2725 00e0 06       		.uleb128 0x6
 2726 00e1 96000000 		.4byte	0x96
 2727 00e5 06       		.uleb128 0x6
 2728 00e6 AE000000 		.4byte	0xae
 2729 00ea 07       		.uleb128 0x7
 2730 00eb 96000000 		.4byte	0x96
 2731 00ef FA000000 		.4byte	0xfa
 2732 00f3 08       		.uleb128 0x8
 2733 00f4 7D000000 		.4byte	0x7d
 2734 00f8 03       		.byte	0x3
 2735 00f9 00       		.byte	0
 2736 00fa 09       		.uleb128 0x9
 2737 00fb 91030000 		.4byte	.LASF50
 2738 00ff 20       		.byte	0x20
 2739 0100 05       		.byte	0x5
 2740 0101 28       		.byte	0x28
 2741 0102 D3010000 		.4byte	0x1d3
 2742 0106 0A       		.uleb128 0xa
 2743 0107 32070000 		.4byte	.LASF21
 2744 010b 05       		.byte	0x5
 2745 010c 2A       		.byte	0x2a
 2746 010d BA000000 		.4byte	0xba
 2747 0111 00       		.byte	0
 2748 0112 0A       		.uleb128 0xa
 2749 0113 37070000 		.4byte	.LASF22
 2750 0117 05       		.byte	0x5
 2751 0118 2B       		.byte	0x2b
 2752 0119 96000000 		.4byte	0x96
 2753 011d 01       		.byte	0x1
 2754 011e 0A       		.uleb128 0xa
 2755 011f 7C070000 		.4byte	.LASF23
 2756 0123 05       		.byte	0x5
 2757 0124 2C       		.byte	0x2c
 2758 0125 C6000000 		.4byte	0xc6
 2759 0129 02       		.byte	0x2
 2760 012a 0A       		.uleb128 0xa
 2761 012b 89060000 		.4byte	.LASF24
 2762 012f 05       		.byte	0x5
 2763 0130 2D       		.byte	0x2d
 2764 0131 C6000000 		.4byte	0xc6
 2765 0135 04       		.byte	0x4
 2766 0136 0A       		.uleb128 0xa
 2767 0137 A8080000 		.4byte	.LASF25
 2768 013b 05       		.byte	0x5
 2769 013c 2E       		.byte	0x2e
 2770 013d C6000000 		.4byte	0xc6
 2771 0141 06       		.byte	0x6
 2772 0142 0A       		.uleb128 0xa
 2773 0143 C9010000 		.4byte	.LASF26
 2774 0147 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 64


 2775 0148 2F       		.byte	0x2f
 2776 0149 C6000000 		.4byte	0xc6
 2777 014d 08       		.byte	0x8
 2778 014e 0A       		.uleb128 0xa
 2779 014f 15070000 		.4byte	.LASF27
 2780 0153 05       		.byte	0x5
 2781 0154 30       		.byte	0x30
 2782 0155 C6000000 		.4byte	0xc6
 2783 0159 0A       		.byte	0xa
 2784 015a 0A       		.uleb128 0xa
 2785 015b 9F080000 		.4byte	.LASF28
 2786 015f 05       		.byte	0x5
 2787 0160 31       		.byte	0x31
 2788 0161 C6000000 		.4byte	0xc6
 2789 0165 0C       		.byte	0xc
 2790 0166 0A       		.uleb128 0xa
 2791 0167 85010000 		.4byte	.LASF29
 2792 016b 05       		.byte	0x5
 2793 016c 32       		.byte	0x32
 2794 016d C6000000 		.4byte	0xc6
 2795 0171 0E       		.byte	0xe
 2796 0172 0A       		.uleb128 0xa
 2797 0173 40050000 		.4byte	.LASF30
 2798 0177 05       		.byte	0x5
 2799 0178 33       		.byte	0x33
 2800 0179 C6000000 		.4byte	0xc6
 2801 017d 10       		.byte	0x10
 2802 017e 0A       		.uleb128 0xa
 2803 017f 59040000 		.4byte	.LASF31
 2804 0183 05       		.byte	0x5
 2805 0184 34       		.byte	0x34
 2806 0185 C6000000 		.4byte	0xc6
 2807 0189 12       		.byte	0x12
 2808 018a 0A       		.uleb128 0xa
 2809 018b D8040000 		.4byte	.LASF32
 2810 018f 05       		.byte	0x5
 2811 0190 35       		.byte	0x35
 2812 0191 C6000000 		.4byte	0xc6
 2813 0195 14       		.byte	0x14
 2814 0196 0A       		.uleb128 0xa
 2815 0197 19050000 		.4byte	.LASF33
 2816 019b 05       		.byte	0x5
 2817 019c 36       		.byte	0x36
 2818 019d C6000000 		.4byte	0xc6
 2819 01a1 16       		.byte	0x16
 2820 01a2 0A       		.uleb128 0xa
 2821 01a3 2B060000 		.4byte	.LASF34
 2822 01a7 05       		.byte	0x5
 2823 01a8 37       		.byte	0x37
 2824 01a9 C6000000 		.4byte	0xc6
 2825 01ad 18       		.byte	0x18
 2826 01ae 0A       		.uleb128 0xa
 2827 01af 48050000 		.4byte	.LASF35
 2828 01b3 05       		.byte	0x5
 2829 01b4 38       		.byte	0x38
 2830 01b5 C6000000 		.4byte	0xc6
 2831 01b9 1A       		.byte	0x1a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 65


 2832 01ba 0A       		.uleb128 0xa
 2833 01bb 1F000000 		.4byte	.LASF36
 2834 01bf 05       		.byte	0x5
 2835 01c0 39       		.byte	0x39
 2836 01c1 C6000000 		.4byte	0xc6
 2837 01c5 1C       		.byte	0x1c
 2838 01c6 0A       		.uleb128 0xa
 2839 01c7 5B030000 		.4byte	.LASF37
 2840 01cb 05       		.byte	0x5
 2841 01cc 3A       		.byte	0x3a
 2842 01cd C6000000 		.4byte	0xc6
 2843 01d1 1E       		.byte	0x1e
 2844 01d2 00       		.byte	0
 2845 01d3 0B       		.uleb128 0xb
 2846 01d4 0E000000 		.4byte	.LASF41
 2847 01d8 01       		.byte	0x1
 2848 01d9 2C000000 		.4byte	0x2c
 2849 01dd 06       		.byte	0x6
 2850 01de 0D       		.byte	0xd
 2851 01df FB010000 		.4byte	0x1fb
 2852 01e3 0C       		.uleb128 0xc
 2853 01e4 557000   		.ascii	"Up\000"
 2854 01e7 00       		.byte	0
 2855 01e8 0D       		.uleb128 0xd
 2856 01e9 53070000 		.4byte	.LASF38
 2857 01ed 01       		.byte	0x1
 2858 01ee 0D       		.uleb128 0xd
 2859 01ef E1040000 		.4byte	.LASF39
 2860 01f3 02       		.byte	0x2
 2861 01f4 0D       		.uleb128 0xd
 2862 01f5 AE060000 		.4byte	.LASF40
 2863 01f9 03       		.byte	0x3
 2864 01fa 00       		.byte	0
 2865 01fb 0B       		.uleb128 0xb
 2866 01fc 16060000 		.4byte	.LASF42
 2867 0200 01       		.byte	0x1
 2868 0201 2C000000 		.4byte	0x2c
 2869 0205 06       		.byte	0x6
 2870 0206 0E       		.byte	0xe
 2871 0207 36020000 		.4byte	0x236
 2872 020b 0D       		.uleb128 0xd
 2873 020c A4060000 		.4byte	.LASF43
 2874 0210 00       		.byte	0
 2875 0211 0D       		.uleb128 0xd
 2876 0212 30050000 		.4byte	.LASF44
 2877 0216 01       		.byte	0x1
 2878 0217 0D       		.uleb128 0xd
 2879 0218 F3070000 		.4byte	.LASF45
 2880 021c 02       		.byte	0x2
 2881 021d 0D       		.uleb128 0xd
 2882 021e C3010000 		.4byte	.LASF46
 2883 0222 03       		.byte	0x3
 2884 0223 0D       		.uleb128 0xd
 2885 0224 B7020000 		.4byte	.LASF47
 2886 0228 04       		.byte	0x4
 2887 0229 0D       		.uleb128 0xd
 2888 022a F8010000 		.4byte	.LASF48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 66


 2889 022e 05       		.byte	0x5
 2890 022f 0D       		.uleb128 0xd
 2891 0230 54000000 		.4byte	.LASF49
 2892 0234 06       		.byte	0x6
 2893 0235 00       		.byte	0
 2894 0236 09       		.uleb128 0x9
 2895 0237 6D020000 		.4byte	.LASF51
 2896 023b 14       		.byte	0x14
 2897 023c 06       		.byte	0x6
 2898 023d 10       		.byte	0x10
 2899 023e 7F020000 		.4byte	0x27f
 2900 0242 0A       		.uleb128 0xa
 2901 0243 D5000000 		.4byte	.LASF52
 2902 0247 06       		.byte	0x6
 2903 0248 11       		.byte	0x11
 2904 0249 FB010000 		.4byte	0x1fb
 2905 024d 00       		.byte	0
 2906 024e 0A       		.uleb128 0xa
 2907 024f 76080000 		.4byte	.LASF53
 2908 0253 06       		.byte	0x6
 2909 0254 12       		.byte	0x12
 2910 0255 68000000 		.4byte	0x68
 2911 0259 04       		.byte	0x4
 2912 025a 0A       		.uleb128 0xa
 2913 025b 87080000 		.4byte	.LASF54
 2914 025f 06       		.byte	0x6
 2915 0260 13       		.byte	0x13
 2916 0261 68000000 		.4byte	0x68
 2917 0265 08       		.byte	0x8
 2918 0266 0A       		.uleb128 0xa
 2919 0267 E7010000 		.4byte	.LASF55
 2920 026b 06       		.byte	0x6
 2921 026c 14       		.byte	0x14
 2922 026d 68000000 		.4byte	0x68
 2923 0271 0C       		.byte	0xc
 2924 0272 0A       		.uleb128 0xa
 2925 0273 AF010000 		.4byte	.LASF56
 2926 0277 06       		.byte	0x6
 2927 0278 15       		.byte	0x15
 2928 0279 D3010000 		.4byte	0x1d3
 2929 027d 10       		.byte	0x10
 2930 027e 00       		.byte	0
 2931 027f 03       		.uleb128 0x3
 2932 0280 6D020000 		.4byte	.LASF51
 2933 0284 06       		.byte	0x6
 2934 0285 16       		.byte	0x16
 2935 0286 36020000 		.4byte	0x236
 2936 028a 0B       		.uleb128 0xb
 2937 028b 46000000 		.4byte	.LASF57
 2938 028f 01       		.byte	0x1
 2939 0290 2C000000 		.4byte	0x2c
 2940 0294 01       		.byte	0x1
 2941 0295 18       		.byte	0x18
 2942 0296 DD020000 		.4byte	0x2dd
 2943 029a 0D       		.uleb128 0xd
 2944 029b FF030000 		.4byte	.LASF58
 2945 029f 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 67


 2946 02a0 0D       		.uleb128 0xd
 2947 02a1 76030000 		.4byte	.LASF59
 2948 02a5 01       		.byte	0x1
 2949 02a6 0D       		.uleb128 0xd
 2950 02a7 7E080000 		.4byte	.LASF60
 2951 02ab 02       		.byte	0x2
 2952 02ac 0D       		.uleb128 0xd
 2953 02ad 94060000 		.4byte	.LASF61
 2954 02b1 03       		.byte	0x3
 2955 02b2 0D       		.uleb128 0xd
 2956 02b3 20030000 		.4byte	.LASF62
 2957 02b7 04       		.byte	0x4
 2958 02b8 0D       		.uleb128 0xd
 2959 02b9 84020000 		.4byte	.LASF63
 2960 02bd 05       		.byte	0x5
 2961 02be 0D       		.uleb128 0xd
 2962 02bf B6050000 		.4byte	.LASF64
 2963 02c3 06       		.byte	0x6
 2964 02c4 0D       		.uleb128 0xd
 2965 02c5 F3030000 		.4byte	.LASF65
 2966 02c9 07       		.byte	0x7
 2967 02ca 0D       		.uleb128 0xd
 2968 02cb 80030000 		.4byte	.LASF66
 2969 02cf 08       		.byte	0x8
 2970 02d0 0D       		.uleb128 0xd
 2971 02d1 CA020000 		.4byte	.LASF67
 2972 02d5 09       		.byte	0x9
 2973 02d6 0D       		.uleb128 0xd
 2974 02d7 1D070000 		.4byte	.LASF68
 2975 02db 0A       		.byte	0xa
 2976 02dc 00       		.byte	0
 2977 02dd 0E       		.uleb128 0xe
 2978 02de 3D040000 		.4byte	.LASF78
 2979 02e2 01       		.byte	0x1
 2980 02e3 51       		.byte	0x51
 2981 02e4 00000000 		.4byte	.LFB64
 2982 02e8 EC000000 		.4byte	.LFE64-.LFB64
 2983 02ec 01       		.uleb128 0x1
 2984 02ed 9C       		.byte	0x9c
 2985 02ee 0B030000 		.4byte	0x30b
 2986 02f2 0F       		.uleb128 0xf
 2987 02f3 50000000 		.4byte	.LBB2
 2988 02f7 62000000 		.4byte	.LBE2-.LBB2
 2989 02fb 10       		.uleb128 0x10
 2990 02fc F8060000 		.4byte	.LASF75
 2991 0300 01       		.byte	0x1
 2992 0301 5E       		.byte	0x5e
 2993 0302 D2000000 		.4byte	0xd2
 2994 0306 02       		.uleb128 0x2
 2995 0307 91       		.byte	0x91
 2996 0308 6C       		.sleb128 -20
 2997 0309 00       		.byte	0
 2998 030a 00       		.byte	0
 2999 030b 11       		.uleb128 0x11
 3000 030c 36020000 		.4byte	.LASF69
 3001 0310 01       		.byte	0x1
 3002 0311 69       		.byte	0x69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 68


 3003 0312 00000000 		.4byte	.LFB65
 3004 0316 18000000 		.4byte	.LFE65-.LFB65
 3005 031a 01       		.uleb128 0x1
 3006 031b 9C       		.byte	0x9c
 3007 031c 11       		.uleb128 0x11
 3008 031d C9000000 		.4byte	.LASF70
 3009 0321 01       		.byte	0x1
 3010 0322 6F       		.byte	0x6f
 3011 0323 00000000 		.4byte	.LFB66
 3012 0327 18000000 		.4byte	.LFE66-.LFB66
 3013 032b 01       		.uleb128 0x1
 3014 032c 9C       		.byte	0x9c
 3015 032d 11       		.uleb128 0x11
 3016 032e 51020000 		.4byte	.LASF71
 3017 0332 01       		.byte	0x1
 3018 0333 75       		.byte	0x75
 3019 0334 00000000 		.4byte	.LFB67
 3020 0338 18000000 		.4byte	.LFE67-.LFB67
 3021 033c 01       		.uleb128 0x1
 3022 033d 9C       		.byte	0x9c
 3023 033e 11       		.uleb128 0x11
 3024 033f 3D070000 		.4byte	.LASF72
 3025 0343 01       		.byte	0x1
 3026 0344 7B       		.byte	0x7b
 3027 0345 00000000 		.4byte	.LFB68
 3028 0349 18000000 		.4byte	.LFE68-.LFB68
 3029 034d 01       		.uleb128 0x1
 3030 034e 9C       		.byte	0x9c
 3031 034f 12       		.uleb128 0x12
 3032 0350 43080000 		.4byte	.LASF73
 3033 0354 01       		.byte	0x1
 3034 0355 81       		.byte	0x81
 3035 0356 00000000 		.4byte	.LFB69
 3036 035a 68000000 		.4byte	.LFE69-.LFB69
 3037 035e 01       		.uleb128 0x1
 3038 035f 9C       		.byte	0x9c
 3039 0360 13       		.uleb128 0x13
 3040 0361 0C030000 		.4byte	.LASF74
 3041 0365 01       		.byte	0x1
 3042 0366 92       		.byte	0x92
 3043 0367 68000000 		.4byte	0x68
 3044 036b 00000000 		.4byte	.LFB70
 3045 036f 28010000 		.4byte	.LFE70-.LFB70
 3046 0373 01       		.uleb128 0x1
 3047 0374 9C       		.byte	0x9c
 3048 0375 14       		.uleb128 0x14
 3049 0376 67080000 		.4byte	.LASF85
 3050 037a 01       		.byte	0x1
 3051 037b C8       		.byte	0xc8
 3052 037c C6000000 		.4byte	0xc6
 3053 0380 00000000 		.4byte	.LFB71
 3054 0384 54000000 		.4byte	.LFE71-.LFB71
 3055 0388 01       		.uleb128 0x1
 3056 0389 9C       		.byte	0x9c
 3057 038a B9030000 		.4byte	0x3b9
 3058 038e 15       		.uleb128 0x15
 3059 038f 50030000 		.4byte	.LASF87
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 69


 3060 0393 01       		.byte	0x1
 3061 0394 C8       		.byte	0xc8
 3062 0395 A2000000 		.4byte	0xa2
 3063 0399 02       		.uleb128 0x2
 3064 039a 91       		.byte	0x91
 3065 039b 66       		.sleb128 -26
 3066 039c 16       		.uleb128 0x16
 3067 039d 63707300 		.ascii	"cps\000"
 3068 03a1 01       		.byte	0x1
 3069 03a2 C9       		.byte	0xc9
 3070 03a3 D2000000 		.4byte	0xd2
 3071 03a7 02       		.uleb128 0x2
 3072 03a8 91       		.byte	0x91
 3073 03a9 6C       		.sleb128 -20
 3074 03aa 16       		.uleb128 0x16
 3075 03ab 72706D00 		.ascii	"rpm\000"
 3076 03af 01       		.byte	0x1
 3077 03b0 CA       		.byte	0xca
 3078 03b1 C6000000 		.4byte	0xc6
 3079 03b5 02       		.uleb128 0x2
 3080 03b6 91       		.byte	0x91
 3081 03b7 6A       		.sleb128 -22
 3082 03b8 00       		.byte	0
 3083 03b9 17       		.uleb128 0x17
 3084 03ba 50080000 		.4byte	.LASF83
 3085 03be 01       		.byte	0x1
 3086 03bf D2       		.byte	0xd2
 3087 03c0 00000000 		.4byte	.LFB72
 3088 03c4 34000000 		.4byte	.LFE72-.LFB72
 3089 03c8 01       		.uleb128 0x1
 3090 03c9 9C       		.byte	0x9c
 3091 03ca 18       		.uleb128 0x18
 3092 03cb A6040000 		.4byte	.LASF76
 3093 03cf 01       		.byte	0x1
 3094 03d0 E3       		.byte	0xe3
 3095 03d1 8A020000 		.4byte	0x28a
 3096 03d5 00000000 		.4byte	.LFB73
 3097 03d9 84000000 		.4byte	.LFE73-.LFB73
 3098 03dd 01       		.uleb128 0x1
 3099 03de 9C       		.byte	0x9c
 3100 03df 19       		.uleb128 0x19
 3101 03e0 D3060000 		.4byte	.LASF77
 3102 03e4 01       		.byte	0x1
 3103 03e5 0901     		.2byte	0x109
 3104 03e7 8A020000 		.4byte	0x28a
 3105 03eb 00000000 		.4byte	.LFB74
 3106 03ef 7C000000 		.4byte	.LFE74-.LFB74
 3107 03f3 01       		.uleb128 0x1
 3108 03f4 9C       		.byte	0x9c
 3109 03f5 1A       		.uleb128 0x1a
 3110 03f6 B0070000 		.4byte	.LASF79
 3111 03fa 01       		.byte	0x1
 3112 03fb 2801     		.2byte	0x128
 3113 03fd 8A020000 		.4byte	0x28a
 3114 0401 00000000 		.4byte	.LFB75
 3115 0405 E4050000 		.4byte	.LFE75-.LFB75
 3116 0409 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 70


 3117 040a 9C       		.byte	0x9c
 3118 040b 47040000 		.4byte	0x447
 3119 040f 1B       		.uleb128 0x1b
 3120 0410 9B030000 		.4byte	.LASF80
 3121 0414 01       		.byte	0x1
 3122 0415 2901     		.2byte	0x129
 3123 0417 D2000000 		.4byte	0xd2
 3124 041b 02       		.uleb128 0x2
 3125 041c 91       		.byte	0x91
 3126 041d 6C       		.sleb128 -20
 3127 041e 1B       		.uleb128 0x1b
 3128 041f 6D060000 		.4byte	.LASF81
 3129 0423 01       		.byte	0x1
 3130 0424 3801     		.2byte	0x138
 3131 0426 FB010000 		.4byte	0x1fb
 3132 042a 02       		.uleb128 0x2
 3133 042b 91       		.byte	0x91
 3134 042c 6B       		.sleb128 -21
 3135 042d 0F       		.uleb128 0xf
 3136 042e C4030000 		.4byte	.LBB3
 3137 0432 2C000000 		.4byte	.LBE3-.LBB3
 3138 0436 1B       		.uleb128 0x1b
 3139 0437 76010000 		.4byte	.LASF82
 3140 043b 01       		.byte	0x1
 3141 043c 0302     		.2byte	0x203
 3142 043e 68000000 		.4byte	0x68
 3143 0442 02       		.uleb128 0x2
 3144 0443 91       		.byte	0x91
 3145 0444 64       		.sleb128 -28
 3146 0445 00       		.byte	0
 3147 0446 00       		.byte	0
 3148 0447 1C       		.uleb128 0x1c
 3149 0448 61040000 		.4byte	.LASF84
 3150 044c 01       		.byte	0x1
 3151 044d AD02     		.2byte	0x2ad
 3152 044f 00000000 		.4byte	.LFB76
 3153 0453 68000000 		.4byte	.LFE76-.LFB76
 3154 0457 01       		.uleb128 0x1
 3155 0458 9C       		.byte	0x9c
 3156 0459 1D       		.uleb128 0x1d
 3157 045a BE050000 		.4byte	.LASF86
 3158 045e 01       		.byte	0x1
 3159 045f B602     		.2byte	0x2b6
 3160 0461 7F020000 		.4byte	0x27f
 3161 0465 00000000 		.4byte	.LFB77
 3162 0469 70000000 		.4byte	.LFE77-.LFB77
 3163 046d 01       		.uleb128 0x1
 3164 046e 9C       		.byte	0x9c
 3165 046f 92040000 		.4byte	0x492
 3166 0473 1E       		.uleb128 0x1e
 3167 0474 CA060000 		.4byte	.LASF88
 3168 0478 01       		.byte	0x1
 3169 0479 B602     		.2byte	0x2b6
 3170 047b 68000000 		.4byte	0x68
 3171 047f 02       		.uleb128 0x2
 3172 0480 91       		.byte	0x91
 3173 0481 50       		.sleb128 -48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 71


 3174 0482 1B       		.uleb128 0x1b
 3175 0483 40030000 		.4byte	.LASF89
 3176 0487 01       		.byte	0x1
 3177 0488 B702     		.2byte	0x2b7
 3178 048a 7F020000 		.4byte	0x27f
 3179 048e 02       		.uleb128 0x2
 3180 048f 91       		.byte	0x91
 3181 0490 5C       		.sleb128 -36
 3182 0491 00       		.byte	0
 3183 0492 1F       		.uleb128 0x1f
 3184 0493 D9030000 		.4byte	.LASF158
 3185 0497 01       		.byte	0x1
 3186 0498 BF02     		.2byte	0x2bf
 3187 049a 00000000 		.4byte	.LFB78
 3188 049e 3C010000 		.4byte	.LFE78-.LFB78
 3189 04a2 01       		.uleb128 0x1
 3190 04a3 9C       		.byte	0x9c
 3191 04a4 D6040000 		.4byte	0x4d6
 3192 04a8 1B       		.uleb128 0x1b
 3193 04a9 3C080000 		.4byte	.LASF90
 3194 04ad 01       		.byte	0x1
 3195 04ae C002     		.2byte	0x2c0
 3196 04b0 A2000000 		.4byte	0xa2
 3197 04b4 02       		.uleb128 0x2
 3198 04b5 91       		.byte	0x91
 3199 04b6 72       		.sleb128 -14
 3200 04b7 1B       		.uleb128 0x1b
 3201 04b8 9F020000 		.4byte	.LASF91
 3202 04bc 01       		.byte	0x1
 3203 04bd C102     		.2byte	0x2c1
 3204 04bf A2000000 		.4byte	0xa2
 3205 04c3 02       		.uleb128 0x2
 3206 04c4 91       		.byte	0x91
 3207 04c5 70       		.sleb128 -16
 3208 04c6 1B       		.uleb128 0x1b
 3209 04c7 77040000 		.4byte	.LASF92
 3210 04cb 01       		.byte	0x1
 3211 04cc C502     		.2byte	0x2c5
 3212 04ce 68000000 		.4byte	0x68
 3213 04d2 02       		.uleb128 0x2
 3214 04d3 91       		.byte	0x91
 3215 04d4 74       		.sleb128 -12
 3216 04d5 00       		.byte	0
 3217 04d6 20       		.uleb128 0x20
 3218 04d7 27040000 		.4byte	.LASF93
 3219 04db 01       		.byte	0x1
 3220 04dc F502     		.2byte	0x2f5
 3221 04de 00000000 		.4byte	.LFB79
 3222 04e2 C0000000 		.4byte	.LFE79-.LFB79
 3223 04e6 01       		.uleb128 0x1
 3224 04e7 9C       		.byte	0x9c
 3225 04e8 10       		.uleb128 0x10
 3226 04e9 A6020000 		.4byte	.LASF94
 3227 04ed 01       		.byte	0x1
 3228 04ee 20       		.byte	0x20
 3229 04ef E5000000 		.4byte	0xe5
 3230 04f3 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 72


 3231 04f4 03       		.byte	0x3
 3232 04f5 14000000 		.4byte	instructionIndex
 3233 04f9 10       		.uleb128 0x10
 3234 04fa 8F080000 		.4byte	.LASF95
 3235 04fe 01       		.byte	0x1
 3236 04ff 34       		.byte	0x34
 3237 0500 E0000000 		.4byte	0xe0
 3238 0504 05       		.uleb128 0x5
 3239 0505 03       		.byte	0x3
 3240 0506 36000000 		.4byte	turnStartedFlag
 3241 050a 10       		.uleb128 0x10
 3242 050b D2070000 		.4byte	.LASF96
 3243 050f 01       		.byte	0x1
 3244 0510 35       		.byte	0x35
 3245 0511 E0000000 		.4byte	0xe0
 3246 0515 05       		.uleb128 0x5
 3247 0516 03       		.byte	0x3
 3248 0517 37000000 		.4byte	turnFinishedFlag
 3249 051b 10       		.uleb128 0x10
 3250 051c 28000000 		.4byte	.LASF97
 3251 0520 01       		.byte	0x1
 3252 0521 37       		.byte	0x37
 3253 0522 E0000000 		.4byte	0xe0
 3254 0526 05       		.uleb128 0x5
 3255 0527 03       		.byte	0x3
 3256 0528 38000000 		.4byte	forwardUntilTargetStartedFlag
 3257 052c 10       		.uleb128 0x10
 3258 052d E8050000 		.4byte	.LASF98
 3259 0531 01       		.byte	0x1
 3260 0532 38       		.byte	0x38
 3261 0533 E0000000 		.4byte	0xe0
 3262 0537 05       		.uleb128 0x5
 3263 0538 03       		.byte	0x3
 3264 0539 39000000 		.4byte	uTurnStartedFlag
 3265 053d 10       		.uleb128 0x10
 3266 053e E6040000 		.4byte	.LASF99
 3267 0542 01       		.byte	0x1
 3268 0543 39       		.byte	0x39
 3269 0544 E0000000 		.4byte	0xe0
 3270 0548 05       		.uleb128 0x5
 3271 0549 03       		.byte	0x3
 3272 054a 3A000000 		.4byte	uTurnFinishedFlag
 3273 054e 10       		.uleb128 0x10
 3274 054f 5E060000 		.4byte	.LASF100
 3275 0553 01       		.byte	0x1
 3276 0554 3B       		.byte	0x3b
 3277 0555 E0000000 		.4byte	0xe0
 3278 0559 05       		.uleb128 0x5
 3279 055a 03       		.byte	0x3
 3280 055b 3B000000 		.4byte	leftStatusFlag
 3281 055f 10       		.uleb128 0x10
 3282 0560 5D020000 		.4byte	.LASF101
 3283 0564 01       		.byte	0x1
 3284 0565 3C       		.byte	0x3c
 3285 0566 E0000000 		.4byte	0xe0
 3286 056a 05       		.uleb128 0x5
 3287 056b 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 73


 3288 056c 3C000000 		.4byte	rightStatusFlag
 3289 0570 10       		.uleb128 0x10
 3290 0571 50050000 		.4byte	.LASF102
 3291 0575 01       		.byte	0x1
 3292 0576 3E       		.byte	0x3e
 3293 0577 E0000000 		.4byte	0xe0
 3294 057b 05       		.uleb128 0x5
 3295 057c 03       		.byte	0x3
 3296 057d 3D000000 		.4byte	spinCourseCorrectionStarted
 3297 0581 10       		.uleb128 0x10
 3298 0582 EE020000 		.4byte	.LASF103
 3299 0586 01       		.byte	0x1
 3300 0587 3F       		.byte	0x3f
 3301 0588 E0000000 		.4byte	0xe0
 3302 058c 05       		.uleb128 0x5
 3303 058d 03       		.byte	0x3
 3304 058e 3E000000 		.4byte	currentIgnoreL
 3305 0592 10       		.uleb128 0x10
 3306 0593 11030000 		.4byte	.LASF104
 3307 0597 01       		.byte	0x1
 3308 0598 40       		.byte	0x40
 3309 0599 E0000000 		.4byte	0xe0
 3310 059d 05       		.uleb128 0x5
 3311 059e 03       		.byte	0x3
 3312 059f 45000000 		.4byte	currentIgnoreR
 3313 05a3 10       		.uleb128 0x10
 3314 05a4 2D080000 		.4byte	.LASF105
 3315 05a8 01       		.byte	0x1
 3316 05a9 44       		.byte	0x44
 3317 05aa E0000000 		.4byte	0xe0
 3318 05ae 05       		.uleb128 0x5
 3319 05af 03       		.byte	0x3
 3320 05b0 3F000000 		.4byte	totalLineCount
 3321 05b4 10       		.uleb128 0x10
 3322 05b5 59000000 		.4byte	.LASF106
 3323 05b9 01       		.byte	0x1
 3324 05ba 45       		.byte	0x45
 3325 05bb E0000000 		.4byte	0xe0
 3326 05bf 05       		.uleb128 0x5
 3327 05c0 03       		.byte	0x3
 3328 05c1 40000000 		.4byte	lineCount
 3329 05c5 10       		.uleb128 0x10
 3330 05c6 DC010000 		.4byte	.LASF107
 3331 05ca 01       		.byte	0x1
 3332 05cb 46       		.byte	0x46
 3333 05cc E0000000 		.4byte	0xe0
 3334 05d0 05       		.uleb128 0x5
 3335 05d1 03       		.byte	0x3
 3336 05d2 41000000 		.4byte	onLineFlag
 3337 05d6 10       		.uleb128 0x10
 3338 05d7 1A040000 		.4byte	.LASF108
 3339 05db 01       		.byte	0x1
 3340 05dc 48       		.byte	0x48
 3341 05dd E0000000 		.4byte	0xe0
 3342 05e1 05       		.uleb128 0x5
 3343 05e2 03       		.byte	0x3
 3344 05e3 42000000 		.4byte	tooEarlyFlag
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 74


 3345 05e7 10       		.uleb128 0x10
 3346 05e8 BE030000 		.4byte	.LASF109
 3347 05ec 01       		.byte	0x1
 3348 05ed 49       		.byte	0x49
 3349 05ee E0000000 		.4byte	0xe0
 3350 05f2 05       		.uleb128 0x5
 3351 05f3 03       		.byte	0x3
 3352 05f4 43000000 		.4byte	tooLateFlag
 3353 05f8 21       		.uleb128 0x21
 3354 05f9 92020000 		.4byte	.LASF110
 3355 05fd 07       		.byte	0x7
 3356 05fe 1207     		.2byte	0x712
 3357 0600 04060000 		.4byte	0x604
 3358 0604 06       		.uleb128 0x6
 3359 0605 8B000000 		.4byte	0x8b
 3360 0609 22       		.uleb128 0x22
 3361 060a 747300   		.ascii	"ts\000"
 3362 060d 05       		.byte	0x5
 3363 060e 10       		.byte	0x10
 3364 060f 96000000 		.4byte	0x96
 3365 0613 05       		.uleb128 0x5
 3366 0614 03       		.byte	0x3
 3367 0615 00000000 		.4byte	ts
 3368 0619 23       		.uleb128 0x23
 3369 061a A5030000 		.4byte	.LASF111
 3370 061e 05       		.byte	0x5
 3371 061f 11       		.byte	0x11
 3372 0620 A2000000 		.4byte	0xa2
 3373 0624 05       		.uleb128 0x5
 3374 0625 03       		.byte	0x3
 3375 0626 00000000 		.4byte	ts_enc
 3376 062a 23       		.uleb128 0x23
 3377 062b DE050000 		.4byte	.LASF112
 3378 062f 05       		.byte	0x5
 3379 0630 12       		.byte	0x12
 3380 0631 A2000000 		.4byte	0xa2
 3381 0635 05       		.uleb128 0x5
 3382 0636 03       		.byte	0x3
 3383 0637 00000000 		.4byte	ts_update
 3384 063b 23       		.uleb128 0x23
 3385 063c 63000000 		.4byte	.LASF113
 3386 0640 05       		.byte	0x5
 3387 0641 13       		.byte	0x13
 3388 0642 A2000000 		.4byte	0xa2
 3389 0646 05       		.uleb128 0x5
 3390 0647 03       		.byte	0x3
 3391 0648 00000000 		.4byte	ts_speed
 3392 064c 23       		.uleb128 0x23
 3393 064d 86040000 		.4byte	.LASF114
 3394 0651 05       		.byte	0x5
 3395 0652 14       		.byte	0x14
 3396 0653 A2000000 		.4byte	0xa2
 3397 0657 05       		.uleb128 0x5
 3398 0658 03       		.byte	0x3
 3399 0659 00000000 		.4byte	ts_display
 3400 065d 23       		.uleb128 0x23
 3401 065e 2A020000 		.4byte	.LASF115
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 75


 3402 0662 05       		.byte	0x5
 3403 0663 16       		.byte	0x16
 3404 0664 96000000 		.4byte	0x96
 3405 0668 05       		.uleb128 0x5
 3406 0669 03       		.byte	0x3
 3407 066a 00000000 		.4byte	flag_ts_enc
 3408 066e 23       		.uleb128 0x23
 3409 066f 5F070000 		.4byte	.LASF116
 3410 0673 05       		.byte	0x5
 3411 0674 17       		.byte	0x17
 3412 0675 96000000 		.4byte	0x96
 3413 0679 05       		.uleb128 0x5
 3414 067a 03       		.byte	0x3
 3415 067b 00000000 		.4byte	flag_ts_update
 3416 067f 23       		.uleb128 0x23
 3417 0680 CA040000 		.4byte	.LASF117
 3418 0684 05       		.byte	0x5
 3419 0685 18       		.byte	0x18
 3420 0686 96000000 		.4byte	0x96
 3421 068a 05       		.uleb128 0x5
 3422 068b 03       		.byte	0x3
 3423 068c 00000000 		.4byte	flag_ts_speed
 3424 0690 23       		.uleb128 0x23
 3425 0691 E8060000 		.4byte	.LASF118
 3426 0695 05       		.byte	0x5
 3427 0696 19       		.byte	0x19
 3428 0697 96000000 		.4byte	0x96
 3429 069b 05       		.uleb128 0x5
 3430 069c 03       		.byte	0x3
 3431 069d 00000000 		.4byte	flag_ts_display
 3432 06a1 23       		.uleb128 0x23
 3433 06a2 31030000 		.4byte	.LASF119
 3434 06a6 05       		.byte	0x5
 3435 06a7 1B       		.byte	0x1b
 3436 06a8 96000000 		.4byte	0x96
 3437 06ac 05       		.uleb128 0x5
 3438 06ad 03       		.byte	0x3
 3439 06ae 00000000 		.4byte	flag_rx
 3440 06b2 23       		.uleb128 0x23
 3441 06b3 BE040000 		.4byte	.LASF120
 3442 06b7 05       		.byte	0x5
 3443 06b8 1C       		.byte	0x1c
 3444 06b9 96000000 		.4byte	0x96
 3445 06bd 05       		.uleb128 0x5
 3446 06be 03       		.byte	0x3
 3447 06bf 00000000 		.4byte	flag_packet
 3448 06c3 23       		.uleb128 0x23
 3449 06c4 42020000 		.4byte	.LASF121
 3450 06c8 05       		.byte	0x5
 3451 06c9 1D       		.byte	0x1d
 3452 06ca 96000000 		.4byte	0x96
 3453 06ce 05       		.uleb128 0x5
 3454 06cf 03       		.byte	0x3
 3455 06d0 00000000 		.4byte	flag_KB_string
 3456 06d4 23       		.uleb128 0x23
 3457 06d5 FD020000 		.4byte	.LASF122
 3458 06d9 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 76


 3459 06da 1F       		.byte	0x1f
 3460 06db 96000000 		.4byte	0x96
 3461 06df 05       		.uleb128 0x5
 3462 06e0 03       		.byte	0x3
 3463 06e1 00000000 		.4byte	dataready_flag
 3464 06e5 23       		.uleb128 0x23
 3465 06e6 6C050000 		.4byte	.LASF123
 3466 06ea 05       		.byte	0x5
 3467 06eb 21       		.byte	0x21
 3468 06ec 96000000 		.4byte	0x96
 3469 06f0 05       		.uleb128 0x5
 3470 06f1 03       		.byte	0x3
 3471 06f2 00000000 		.4byte	flag_rf_transmission_active
 3472 06f6 07       		.uleb128 0x7
 3473 06f7 84000000 		.4byte	0x84
 3474 06fb 06070000 		.4byte	0x706
 3475 06ff 08       		.uleb128 0x8
 3476 0700 7D000000 		.4byte	0x7d
 3477 0704 3F       		.byte	0x3f
 3478 0705 00       		.byte	0
 3479 0706 23       		.uleb128 0x23
 3480 0707 6E070000 		.4byte	.LASF124
 3481 070b 05       		.byte	0x5
 3482 070c 24       		.byte	0x24
 3483 070d F6060000 		.4byte	0x6f6
 3484 0711 05       		.uleb128 0x5
 3485 0712 03       		.byte	0x3
 3486 0713 00000000 		.4byte	displaystring
 3487 0717 23       		.uleb128 0x23
 3488 0718 56030000 		.4byte	.LASF125
 3489 071c 05       		.byte	0x5
 3490 071d 25       		.byte	0x25
 3491 071e F6060000 		.4byte	0x6f6
 3492 0722 05       		.uleb128 0x5
 3493 0723 03       		.byte	0x3
 3494 0724 00000000 		.4byte	line
 3495 0728 23       		.uleb128 0x23
 3496 0729 92010000 		.4byte	.LASF126
 3497 072d 05       		.byte	0x5
 3498 072e 25       		.byte	0x25
 3499 072f F6060000 		.4byte	0x6f6
 3500 0733 05       		.uleb128 0x5
 3501 0734 03       		.byte	0x3
 3502 0735 00000000 		.4byte	entry
 3503 0739 07       		.uleb128 0x7
 3504 073a 96000000 		.4byte	0x96
 3505 073e 49070000 		.4byte	0x749
 3506 0742 08       		.uleb128 0x8
 3507 0743 7D000000 		.4byte	0x7d
 3508 0747 3F       		.byte	0x3f
 3509 0748 00       		.byte	0
 3510 0749 23       		.uleb128 0x23
 3511 074a 26050000 		.4byte	.LASF127
 3512 074e 05       		.byte	0x5
 3513 074f 26       		.byte	0x26
 3514 0750 39070000 		.4byte	0x739
 3515 0754 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 77


 3516 0755 03       		.byte	0x3
 3517 0756 00000000 		.4byte	usbBuffer
 3518 075a 23       		.uleb128 0x23
 3519 075b 0C050000 		.4byte	.LASF128
 3520 075f 05       		.byte	0x5
 3521 0760 3C       		.byte	0x3c
 3522 0761 FA000000 		.4byte	0xfa
 3523 0765 05       		.uleb128 0x5
 3524 0766 03       		.byte	0x3
 3525 0767 00000000 		.4byte	system_state
 3526 076b 07       		.uleb128 0x7
 3527 076c 68000000 		.4byte	0x68
 3528 0770 81070000 		.4byte	0x781
 3529 0774 08       		.uleb128 0x8
 3530 0775 7D000000 		.4byte	0x7d
 3531 0779 0E       		.byte	0xe
 3532 077a 08       		.uleb128 0x8
 3533 077b 7D000000 		.4byte	0x7d
 3534 077f 12       		.byte	0x12
 3535 0780 00       		.byte	0
 3536 0781 24       		.uleb128 0x24
 3537 0782 6D617000 		.ascii	"map\000"
 3538 0786 08       		.byte	0x8
 3539 0787 04       		.byte	0x4
 3540 0788 6B070000 		.4byte	0x76b
 3541 078c 07       		.uleb128 0x7
 3542 078d 68000000 		.4byte	0x68
 3543 0791 A2070000 		.4byte	0x7a2
 3544 0795 08       		.uleb128 0x8
 3545 0796 7D000000 		.4byte	0x7d
 3546 079a 04       		.byte	0x4
 3547 079b 08       		.uleb128 0x8
 3548 079c 7D000000 		.4byte	0x7d
 3549 07a0 01       		.byte	0x1
 3550 07a1 00       		.byte	0
 3551 07a2 25       		.uleb128 0x25
 3552 07a3 49070000 		.4byte	.LASF129
 3553 07a7 08       		.byte	0x8
 3554 07a8 05       		.byte	0x5
 3555 07a9 8C070000 		.4byte	0x78c
 3556 07ad 23       		.uleb128 0x23
 3557 07ae 9F070000 		.4byte	.LASF130
 3558 07b2 01       		.byte	0x1
 3559 07b3 19       		.byte	0x19
 3560 07b4 8A020000 		.4byte	0x28a
 3561 07b8 05       		.uleb128 0x5
 3562 07b9 03       		.byte	0x3
 3563 07ba 00000000 		.4byte	currentDirection
 3564 07be 23       		.uleb128 0x23
 3565 07bf 18020000 		.4byte	.LASF131
 3566 07c3 01       		.byte	0x1
 3567 07c4 19       		.byte	0x19
 3568 07c5 8A020000 		.4byte	0x28a
 3569 07c9 05       		.uleb128 0x5
 3570 07ca 03       		.byte	0x3
 3571 07cb 00000000 		.4byte	previousDirection
 3572 07cf 23       		.uleb128 0x23
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 78


 3573 07d0 87070000 		.4byte	.LASF132
 3574 07d4 01       		.byte	0x1
 3575 07d5 1B       		.byte	0x1b
 3576 07d6 D3010000 		.4byte	0x1d3
 3577 07da 05       		.uleb128 0x5
 3578 07db 03       		.byte	0x3
 3579 07dc 00000000 		.4byte	currentRobotOrientation
 3580 07e0 23       		.uleb128 0x23
 3581 07e1 3D060000 		.4byte	.LASF133
 3582 07e5 01       		.byte	0x1
 3583 07e6 1B       		.byte	0x1b
 3584 07e7 D3010000 		.4byte	0x1d3
 3585 07eb 05       		.uleb128 0x5
 3586 07ec 03       		.byte	0x3
 3587 07ed 00000000 		.4byte	previousOrientation
 3588 07f1 23       		.uleb128 0x23
 3589 07f2 1A080000 		.4byte	.LASF134
 3590 07f6 01       		.byte	0x1
 3591 07f7 1C       		.byte	0x1c
 3592 07f8 7F020000 		.4byte	0x27f
 3593 07fc 05       		.uleb128 0x5
 3594 07fd 03       		.byte	0x3
 3595 07fe 00000000 		.4byte	currentInstruction
 3596 0802 23       		.uleb128 0x23
 3597 0803 CA060000 		.4byte	.LASF88
 3598 0807 01       		.byte	0x1
 3599 0808 1D       		.byte	0x1d
 3600 0809 68000000 		.4byte	0x68
 3601 080d 05       		.uleb128 0x5
 3602 080e 03       		.byte	0x3
 3603 080f 00000000 		.4byte	numSteps
 3604 0813 23       		.uleb128 0x23
 3605 0814 E3070000 		.4byte	.LASF135
 3606 0818 01       		.byte	0x1
 3607 0819 1F       		.byte	0x1f
 3608 081a 24080000 		.4byte	0x824
 3609 081e 05       		.uleb128 0x5
 3610 081f 03       		.byte	0x3
 3611 0820 00000000 		.4byte	instructionList
 3612 0824 26       		.uleb128 0x26
 3613 0825 04       		.byte	0x4
 3614 0826 7F020000 		.4byte	0x27f
 3615 082a 22       		.uleb128 0x22
 3616 082b 733300   		.ascii	"s3\000"
 3617 082e 01       		.byte	0x1
 3618 082f 25       		.byte	0x25
 3619 0830 96000000 		.4byte	0x96
 3620 0834 05       		.uleb128 0x5
 3621 0835 03       		.byte	0x3
 3622 0836 00000000 		.4byte	s3
 3623 083a 22       		.uleb128 0x22
 3624 083b 733400   		.ascii	"s4\000"
 3625 083e 01       		.byte	0x1
 3626 083f 25       		.byte	0x25
 3627 0840 96000000 		.4byte	0x96
 3628 0844 05       		.uleb128 0x5
 3629 0845 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 79


 3630 0846 00000000 		.4byte	s4
 3631 084a 22       		.uleb128 0x22
 3632 084b 733500   		.ascii	"s5\000"
 3633 084e 01       		.byte	0x1
 3634 084f 25       		.byte	0x25
 3635 0850 96000000 		.4byte	0x96
 3636 0854 05       		.uleb128 0x5
 3637 0855 03       		.byte	0x3
 3638 0856 00000000 		.4byte	s5
 3639 085a 22       		.uleb128 0x22
 3640 085b 733600   		.ascii	"s6\000"
 3641 085e 01       		.byte	0x1
 3642 085f 25       		.byte	0x25
 3643 0860 96000000 		.4byte	0x96
 3644 0864 05       		.uleb128 0x5
 3645 0865 03       		.byte	0x3
 3646 0866 00000000 		.4byte	s6
 3647 086a 23       		.uleb128 0x23
 3648 086b A4050000 		.4byte	.LASF136
 3649 086f 01       		.byte	0x1
 3650 0870 2A       		.byte	0x2a
 3651 0871 AE000000 		.4byte	0xae
 3652 0875 05       		.uleb128 0x5
 3653 0876 03       		.byte	0x3
 3654 0877 00000000 		.4byte	totalMilliseconds
 3655 087b 23       		.uleb128 0x23
 3656 087c 00000000 		.4byte	.LASF137
 3657 0880 01       		.byte	0x1
 3658 0881 2B       		.byte	0x2b
 3659 0882 D2000000 		.4byte	0xd2
 3660 0886 05       		.uleb128 0x5
 3661 0887 03       		.byte	0x3
 3662 0888 00000000 		.4byte	totalDistance
 3663 088c 07       		.uleb128 0x7
 3664 088d 84000000 		.4byte	0x84
 3665 0891 9C080000 		.4byte	0x89c
 3666 0895 08       		.uleb128 0x8
 3667 0896 7D000000 		.4byte	0x7d
 3668 089a 44       		.byte	0x44
 3669 089b 00       		.byte	0
 3670 089c 23       		.uleb128 0x23
 3671 089d 58070000 		.4byte	.LASF138
 3672 08a1 01       		.byte	0x1
 3673 08a2 2D       		.byte	0x2d
 3674 08a3 8C080000 		.4byte	0x88c
 3675 08a7 05       		.uleb128 0x5
 3676 08a8 03       		.byte	0x3
 3677 08a9 00000000 		.4byte	buffer
 3678 08ad 23       		.uleb128 0x23
 3679 08ae 68030000 		.4byte	.LASF139
 3680 08b2 01       		.byte	0x1
 3681 08b3 2E       		.byte	0x2e
 3682 08b4 68000000 		.4byte	0x68
 3683 08b8 05       		.uleb128 0x5
 3684 08b9 03       		.byte	0x3
 3685 08ba 00000000 		.4byte	quadDec2Count
 3686 08be 23       		.uleb128 0x23
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 80


 3687 08bf DF000000 		.4byte	.LASF140
 3688 08c3 01       		.byte	0x1
 3689 08c4 2F       		.byte	0x2f
 3690 08c5 68000000 		.4byte	0x68
 3691 08c9 05       		.uleb128 0x5
 3692 08ca 03       		.byte	0x3
 3693 08cb 00000000 		.4byte	timerInt
 3694 08cf 23       		.uleb128 0x23
 3695 08d0 D4050000 		.4byte	.LASF141
 3696 08d4 01       		.byte	0x1
 3697 08d5 30       		.byte	0x30
 3698 08d6 68000000 		.4byte	0x68
 3699 08da 05       		.uleb128 0x5
 3700 08db 03       		.byte	0x3
 3701 08dc 00000000 		.4byte	keepLedOn
 3702 08e0 23       		.uleb128 0x23
 3703 08e1 D1010000 		.4byte	.LASF142
 3704 08e5 01       		.byte	0x1
 3705 08e6 32       		.byte	0x32
 3706 08e7 AE000000 		.4byte	0xae
 3707 08eb 05       		.uleb128 0x5
 3708 08ec 03       		.byte	0x3
 3709 08ed 00000000 		.4byte	stopBuffer
 3710 08f1 23       		.uleb128 0x23
 3711 08f2 CB080000 		.4byte	.LASF143
 3712 08f6 01       		.byte	0x1
 3713 08f7 33       		.byte	0x33
 3714 08f8 A2000000 		.4byte	0xa2
 3715 08fc 05       		.uleb128 0x5
 3716 08fd 03       		.byte	0x3
 3717 08fe 00000000 		.4byte	forwardBuffer
 3718 0902 23       		.uleb128 0x23
 3719 0903 04080000 		.4byte	.LASF144
 3720 0907 01       		.byte	0x1
 3721 0908 4B       		.byte	0x4b
 3722 0909 EA000000 		.4byte	0xea
 3723 090d 05       		.uleb128 0x5
 3724 090e 03       		.byte	0x3
 3725 090f 00000000 		.4byte	junctionConfiguration
 3726 0913 23       		.uleb128 0x23
 3727 0914 91040000 		.4byte	.LASF145
 3728 0918 01       		.byte	0x1
 3729 0919 4C       		.byte	0x4c
 3730 091a 96000000 		.4byte	0x96
 3731 091e 05       		.uleb128 0x5
 3732 091f 03       		.byte	0x3
 3733 0920 00000000 		.4byte	currentFoodListIndex
 3734 0924 23       		.uleb128 0x23
 3735 0925 CA030000 		.4byte	.LASF146
 3736 0929 01       		.byte	0x1
 3737 092a 4E       		.byte	0x4e
 3738 092b D2000000 		.4byte	0xd2
 3739 092f 05       		.uleb128 0x5
 3740 0930 03       		.byte	0x3
 3741 0931 00000000 		.4byte	blockSizeTotal
 3742 0935 23       		.uleb128 0x23
 3743 0936 88050000 		.4byte	.LASF147
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 81


 3744 093a 01       		.byte	0x1
 3745 093b D9       		.byte	0xd9
 3746 093c D2000000 		.4byte	0xd2
 3747 0940 05       		.uleb128 0x5
 3748 0941 03       		.byte	0x3
 3749 0942 00000000 		.4byte	xBlocksize
 3750 0946 23       		.uleb128 0x23
 3751 0947 93050000 		.4byte	.LASF148
 3752 094b 01       		.byte	0x1
 3753 094c DA       		.byte	0xda
 3754 094d D2000000 		.4byte	0xd2
 3755 0951 05       		.uleb128 0x5
 3756 0952 03       		.byte	0x3
 3757 0953 00000000 		.4byte	yBlocksize
 3758 0957 23       		.uleb128 0x23
 3759 0958 01050000 		.4byte	.LASF149
 3760 095c 01       		.byte	0x1
 3761 095d DB       		.byte	0xdb
 3762 095e 96000000 		.4byte	0x96
 3763 0962 05       		.uleb128 0x5
 3764 0963 03       		.byte	0x3
 3765 0964 00000000 		.4byte	currentRow
 3766 0968 23       		.uleb128 0x23
 3767 0969 79020000 		.4byte	.LASF150
 3768 096d 01       		.byte	0x1
 3769 096e DC       		.byte	0xdc
 3770 096f 96000000 		.4byte	0x96
 3771 0973 05       		.uleb128 0x5
 3772 0974 03       		.byte	0x3
 3773 0975 00000000 		.4byte	currentCol
 3774 0979 23       		.uleb128 0x23
 3775 097a BA080000 		.4byte	.LASF151
 3776 097e 01       		.byte	0x1
 3777 097f DE       		.byte	0xde
 3778 0980 96000000 		.4byte	0x96
 3779 0984 05       		.uleb128 0x5
 3780 0985 03       		.byte	0x3
 3781 0986 00000000 		.4byte	stoppedAfterTurn
 3782 098a 23       		.uleb128 0x23
 3783 098b 51060000 		.4byte	.LASF152
 3784 098f 01       		.byte	0x1
 3785 0990 DF       		.byte	0xdf
 3786 0991 96000000 		.4byte	0x96
 3787 0995 05       		.uleb128 0x5
 3788 0996 03       		.byte	0x3
 3789 0997 00000000 		.4byte	ignoreSensor
 3790 099b 27       		.uleb128 0x27
 3791 099c B4060000 		.4byte	.LASF153
 3792 09a0 01       		.byte	0x1
 3793 09a1 0701     		.2byte	0x107
 3794 09a3 8A020000 		.4byte	0x28a
 3795 09a7 05       		.uleb128 0x5
 3796 09a8 03       		.byte	0x3
 3797 09a9 00000000 		.4byte	lastDirectionAfter180
 3798 09ad 27       		.uleb128 0x27
 3799 09ae 05020000 		.4byte	.LASF154
 3800 09b2 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 82


 3801 09b3 2701     		.2byte	0x127
 3802 09b5 96000000 		.4byte	0x96
 3803 09b9 05       		.uleb128 0x5
 3804 09ba 03       		.byte	0x3
 3805 09bb 00000000 		.4byte	firstTurnIteration
 3806 09bf 00       		.byte	0
 3807              		.section	.debug_abbrev,"",%progbits
 3808              	.Ldebug_abbrev0:
 3809 0000 01       		.uleb128 0x1
 3810 0001 11       		.uleb128 0x11
 3811 0002 01       		.byte	0x1
 3812 0003 25       		.uleb128 0x25
 3813 0004 0E       		.uleb128 0xe
 3814 0005 13       		.uleb128 0x13
 3815 0006 0B       		.uleb128 0xb
 3816 0007 03       		.uleb128 0x3
 3817 0008 0E       		.uleb128 0xe
 3818 0009 1B       		.uleb128 0x1b
 3819 000a 0E       		.uleb128 0xe
 3820 000b 55       		.uleb128 0x55
 3821 000c 17       		.uleb128 0x17
 3822 000d 11       		.uleb128 0x11
 3823 000e 01       		.uleb128 0x1
 3824 000f 10       		.uleb128 0x10
 3825 0010 17       		.uleb128 0x17
 3826 0011 00       		.byte	0
 3827 0012 00       		.byte	0
 3828 0013 02       		.uleb128 0x2
 3829 0014 24       		.uleb128 0x24
 3830 0015 00       		.byte	0
 3831 0016 0B       		.uleb128 0xb
 3832 0017 0B       		.uleb128 0xb
 3833 0018 3E       		.uleb128 0x3e
 3834 0019 0B       		.uleb128 0xb
 3835 001a 03       		.uleb128 0x3
 3836 001b 0E       		.uleb128 0xe
 3837 001c 00       		.byte	0
 3838 001d 00       		.byte	0
 3839 001e 03       		.uleb128 0x3
 3840 001f 16       		.uleb128 0x16
 3841 0020 00       		.byte	0
 3842 0021 03       		.uleb128 0x3
 3843 0022 0E       		.uleb128 0xe
 3844 0023 3A       		.uleb128 0x3a
 3845 0024 0B       		.uleb128 0xb
 3846 0025 3B       		.uleb128 0x3b
 3847 0026 0B       		.uleb128 0xb
 3848 0027 49       		.uleb128 0x49
 3849 0028 13       		.uleb128 0x13
 3850 0029 00       		.byte	0
 3851 002a 00       		.byte	0
 3852 002b 04       		.uleb128 0x4
 3853 002c 24       		.uleb128 0x24
 3854 002d 00       		.byte	0
 3855 002e 0B       		.uleb128 0xb
 3856 002f 0B       		.uleb128 0xb
 3857 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 83


 3858 0031 0B       		.uleb128 0xb
 3859 0032 03       		.uleb128 0x3
 3860 0033 08       		.uleb128 0x8
 3861 0034 00       		.byte	0
 3862 0035 00       		.byte	0
 3863 0036 05       		.uleb128 0x5
 3864 0037 16       		.uleb128 0x16
 3865 0038 00       		.byte	0
 3866 0039 03       		.uleb128 0x3
 3867 003a 0E       		.uleb128 0xe
 3868 003b 3A       		.uleb128 0x3a
 3869 003c 0B       		.uleb128 0xb
 3870 003d 3B       		.uleb128 0x3b
 3871 003e 05       		.uleb128 0x5
 3872 003f 49       		.uleb128 0x49
 3873 0040 13       		.uleb128 0x13
 3874 0041 00       		.byte	0
 3875 0042 00       		.byte	0
 3876 0043 06       		.uleb128 0x6
 3877 0044 35       		.uleb128 0x35
 3878 0045 00       		.byte	0
 3879 0046 49       		.uleb128 0x49
 3880 0047 13       		.uleb128 0x13
 3881 0048 00       		.byte	0
 3882 0049 00       		.byte	0
 3883 004a 07       		.uleb128 0x7
 3884 004b 01       		.uleb128 0x1
 3885 004c 01       		.byte	0x1
 3886 004d 49       		.uleb128 0x49
 3887 004e 13       		.uleb128 0x13
 3888 004f 01       		.uleb128 0x1
 3889 0050 13       		.uleb128 0x13
 3890 0051 00       		.byte	0
 3891 0052 00       		.byte	0
 3892 0053 08       		.uleb128 0x8
 3893 0054 21       		.uleb128 0x21
 3894 0055 00       		.byte	0
 3895 0056 49       		.uleb128 0x49
 3896 0057 13       		.uleb128 0x13
 3897 0058 2F       		.uleb128 0x2f
 3898 0059 0B       		.uleb128 0xb
 3899 005a 00       		.byte	0
 3900 005b 00       		.byte	0
 3901 005c 09       		.uleb128 0x9
 3902 005d 13       		.uleb128 0x13
 3903 005e 01       		.byte	0x1
 3904 005f 03       		.uleb128 0x3
 3905 0060 0E       		.uleb128 0xe
 3906 0061 0B       		.uleb128 0xb
 3907 0062 0B       		.uleb128 0xb
 3908 0063 3A       		.uleb128 0x3a
 3909 0064 0B       		.uleb128 0xb
 3910 0065 3B       		.uleb128 0x3b
 3911 0066 0B       		.uleb128 0xb
 3912 0067 01       		.uleb128 0x1
 3913 0068 13       		.uleb128 0x13
 3914 0069 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 84


 3915 006a 00       		.byte	0
 3916 006b 0A       		.uleb128 0xa
 3917 006c 0D       		.uleb128 0xd
 3918 006d 00       		.byte	0
 3919 006e 03       		.uleb128 0x3
 3920 006f 0E       		.uleb128 0xe
 3921 0070 3A       		.uleb128 0x3a
 3922 0071 0B       		.uleb128 0xb
 3923 0072 3B       		.uleb128 0x3b
 3924 0073 0B       		.uleb128 0xb
 3925 0074 49       		.uleb128 0x49
 3926 0075 13       		.uleb128 0x13
 3927 0076 38       		.uleb128 0x38
 3928 0077 0B       		.uleb128 0xb
 3929 0078 00       		.byte	0
 3930 0079 00       		.byte	0
 3931 007a 0B       		.uleb128 0xb
 3932 007b 04       		.uleb128 0x4
 3933 007c 01       		.byte	0x1
 3934 007d 03       		.uleb128 0x3
 3935 007e 0E       		.uleb128 0xe
 3936 007f 0B       		.uleb128 0xb
 3937 0080 0B       		.uleb128 0xb
 3938 0081 49       		.uleb128 0x49
 3939 0082 13       		.uleb128 0x13
 3940 0083 3A       		.uleb128 0x3a
 3941 0084 0B       		.uleb128 0xb
 3942 0085 3B       		.uleb128 0x3b
 3943 0086 0B       		.uleb128 0xb
 3944 0087 01       		.uleb128 0x1
 3945 0088 13       		.uleb128 0x13
 3946 0089 00       		.byte	0
 3947 008a 00       		.byte	0
 3948 008b 0C       		.uleb128 0xc
 3949 008c 28       		.uleb128 0x28
 3950 008d 00       		.byte	0
 3951 008e 03       		.uleb128 0x3
 3952 008f 08       		.uleb128 0x8
 3953 0090 1C       		.uleb128 0x1c
 3954 0091 0B       		.uleb128 0xb
 3955 0092 00       		.byte	0
 3956 0093 00       		.byte	0
 3957 0094 0D       		.uleb128 0xd
 3958 0095 28       		.uleb128 0x28
 3959 0096 00       		.byte	0
 3960 0097 03       		.uleb128 0x3
 3961 0098 0E       		.uleb128 0xe
 3962 0099 1C       		.uleb128 0x1c
 3963 009a 0B       		.uleb128 0xb
 3964 009b 00       		.byte	0
 3965 009c 00       		.byte	0
 3966 009d 0E       		.uleb128 0xe
 3967 009e 2E       		.uleb128 0x2e
 3968 009f 01       		.byte	0x1
 3969 00a0 3F       		.uleb128 0x3f
 3970 00a1 19       		.uleb128 0x19
 3971 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 85


 3972 00a3 0E       		.uleb128 0xe
 3973 00a4 3A       		.uleb128 0x3a
 3974 00a5 0B       		.uleb128 0xb
 3975 00a6 3B       		.uleb128 0x3b
 3976 00a7 0B       		.uleb128 0xb
 3977 00a8 27       		.uleb128 0x27
 3978 00a9 19       		.uleb128 0x19
 3979 00aa 11       		.uleb128 0x11
 3980 00ab 01       		.uleb128 0x1
 3981 00ac 12       		.uleb128 0x12
 3982 00ad 06       		.uleb128 0x6
 3983 00ae 40       		.uleb128 0x40
 3984 00af 18       		.uleb128 0x18
 3985 00b0 9642     		.uleb128 0x2116
 3986 00b2 19       		.uleb128 0x19
 3987 00b3 01       		.uleb128 0x1
 3988 00b4 13       		.uleb128 0x13
 3989 00b5 00       		.byte	0
 3990 00b6 00       		.byte	0
 3991 00b7 0F       		.uleb128 0xf
 3992 00b8 0B       		.uleb128 0xb
 3993 00b9 01       		.byte	0x1
 3994 00ba 11       		.uleb128 0x11
 3995 00bb 01       		.uleb128 0x1
 3996 00bc 12       		.uleb128 0x12
 3997 00bd 06       		.uleb128 0x6
 3998 00be 00       		.byte	0
 3999 00bf 00       		.byte	0
 4000 00c0 10       		.uleb128 0x10
 4001 00c1 34       		.uleb128 0x34
 4002 00c2 00       		.byte	0
 4003 00c3 03       		.uleb128 0x3
 4004 00c4 0E       		.uleb128 0xe
 4005 00c5 3A       		.uleb128 0x3a
 4006 00c6 0B       		.uleb128 0xb
 4007 00c7 3B       		.uleb128 0x3b
 4008 00c8 0B       		.uleb128 0xb
 4009 00c9 49       		.uleb128 0x49
 4010 00ca 13       		.uleb128 0x13
 4011 00cb 02       		.uleb128 0x2
 4012 00cc 18       		.uleb128 0x18
 4013 00cd 00       		.byte	0
 4014 00ce 00       		.byte	0
 4015 00cf 11       		.uleb128 0x11
 4016 00d0 2E       		.uleb128 0x2e
 4017 00d1 00       		.byte	0
 4018 00d2 3F       		.uleb128 0x3f
 4019 00d3 19       		.uleb128 0x19
 4020 00d4 03       		.uleb128 0x3
 4021 00d5 0E       		.uleb128 0xe
 4022 00d6 3A       		.uleb128 0x3a
 4023 00d7 0B       		.uleb128 0xb
 4024 00d8 3B       		.uleb128 0x3b
 4025 00d9 0B       		.uleb128 0xb
 4026 00da 27       		.uleb128 0x27
 4027 00db 19       		.uleb128 0x19
 4028 00dc 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 86


 4029 00dd 01       		.uleb128 0x1
 4030 00de 12       		.uleb128 0x12
 4031 00df 06       		.uleb128 0x6
 4032 00e0 40       		.uleb128 0x40
 4033 00e1 18       		.uleb128 0x18
 4034 00e2 9742     		.uleb128 0x2117
 4035 00e4 19       		.uleb128 0x19
 4036 00e5 00       		.byte	0
 4037 00e6 00       		.byte	0
 4038 00e7 12       		.uleb128 0x12
 4039 00e8 2E       		.uleb128 0x2e
 4040 00e9 00       		.byte	0
 4041 00ea 3F       		.uleb128 0x3f
 4042 00eb 19       		.uleb128 0x19
 4043 00ec 03       		.uleb128 0x3
 4044 00ed 0E       		.uleb128 0xe
 4045 00ee 3A       		.uleb128 0x3a
 4046 00ef 0B       		.uleb128 0xb
 4047 00f0 3B       		.uleb128 0x3b
 4048 00f1 0B       		.uleb128 0xb
 4049 00f2 27       		.uleb128 0x27
 4050 00f3 19       		.uleb128 0x19
 4051 00f4 11       		.uleb128 0x11
 4052 00f5 01       		.uleb128 0x1
 4053 00f6 12       		.uleb128 0x12
 4054 00f7 06       		.uleb128 0x6
 4055 00f8 40       		.uleb128 0x40
 4056 00f9 18       		.uleb128 0x18
 4057 00fa 9642     		.uleb128 0x2116
 4058 00fc 19       		.uleb128 0x19
 4059 00fd 00       		.byte	0
 4060 00fe 00       		.byte	0
 4061 00ff 13       		.uleb128 0x13
 4062 0100 2E       		.uleb128 0x2e
 4063 0101 00       		.byte	0
 4064 0102 3F       		.uleb128 0x3f
 4065 0103 19       		.uleb128 0x19
 4066 0104 03       		.uleb128 0x3
 4067 0105 0E       		.uleb128 0xe
 4068 0106 3A       		.uleb128 0x3a
 4069 0107 0B       		.uleb128 0xb
 4070 0108 3B       		.uleb128 0x3b
 4071 0109 0B       		.uleb128 0xb
 4072 010a 49       		.uleb128 0x49
 4073 010b 13       		.uleb128 0x13
 4074 010c 11       		.uleb128 0x11
 4075 010d 01       		.uleb128 0x1
 4076 010e 12       		.uleb128 0x12
 4077 010f 06       		.uleb128 0x6
 4078 0110 40       		.uleb128 0x40
 4079 0111 18       		.uleb128 0x18
 4080 0112 9642     		.uleb128 0x2116
 4081 0114 19       		.uleb128 0x19
 4082 0115 00       		.byte	0
 4083 0116 00       		.byte	0
 4084 0117 14       		.uleb128 0x14
 4085 0118 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 87


 4086 0119 01       		.byte	0x1
 4087 011a 3F       		.uleb128 0x3f
 4088 011b 19       		.uleb128 0x19
 4089 011c 03       		.uleb128 0x3
 4090 011d 0E       		.uleb128 0xe
 4091 011e 3A       		.uleb128 0x3a
 4092 011f 0B       		.uleb128 0xb
 4093 0120 3B       		.uleb128 0x3b
 4094 0121 0B       		.uleb128 0xb
 4095 0122 27       		.uleb128 0x27
 4096 0123 19       		.uleb128 0x19
 4097 0124 49       		.uleb128 0x49
 4098 0125 13       		.uleb128 0x13
 4099 0126 11       		.uleb128 0x11
 4100 0127 01       		.uleb128 0x1
 4101 0128 12       		.uleb128 0x12
 4102 0129 06       		.uleb128 0x6
 4103 012a 40       		.uleb128 0x40
 4104 012b 18       		.uleb128 0x18
 4105 012c 9642     		.uleb128 0x2116
 4106 012e 19       		.uleb128 0x19
 4107 012f 01       		.uleb128 0x1
 4108 0130 13       		.uleb128 0x13
 4109 0131 00       		.byte	0
 4110 0132 00       		.byte	0
 4111 0133 15       		.uleb128 0x15
 4112 0134 05       		.uleb128 0x5
 4113 0135 00       		.byte	0
 4114 0136 03       		.uleb128 0x3
 4115 0137 0E       		.uleb128 0xe
 4116 0138 3A       		.uleb128 0x3a
 4117 0139 0B       		.uleb128 0xb
 4118 013a 3B       		.uleb128 0x3b
 4119 013b 0B       		.uleb128 0xb
 4120 013c 49       		.uleb128 0x49
 4121 013d 13       		.uleb128 0x13
 4122 013e 02       		.uleb128 0x2
 4123 013f 18       		.uleb128 0x18
 4124 0140 00       		.byte	0
 4125 0141 00       		.byte	0
 4126 0142 16       		.uleb128 0x16
 4127 0143 34       		.uleb128 0x34
 4128 0144 00       		.byte	0
 4129 0145 03       		.uleb128 0x3
 4130 0146 08       		.uleb128 0x8
 4131 0147 3A       		.uleb128 0x3a
 4132 0148 0B       		.uleb128 0xb
 4133 0149 3B       		.uleb128 0x3b
 4134 014a 0B       		.uleb128 0xb
 4135 014b 49       		.uleb128 0x49
 4136 014c 13       		.uleb128 0x13
 4137 014d 02       		.uleb128 0x2
 4138 014e 18       		.uleb128 0x18
 4139 014f 00       		.byte	0
 4140 0150 00       		.byte	0
 4141 0151 17       		.uleb128 0x17
 4142 0152 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 88


 4143 0153 00       		.byte	0
 4144 0154 3F       		.uleb128 0x3f
 4145 0155 19       		.uleb128 0x19
 4146 0156 03       		.uleb128 0x3
 4147 0157 0E       		.uleb128 0xe
 4148 0158 3A       		.uleb128 0x3a
 4149 0159 0B       		.uleb128 0xb
 4150 015a 3B       		.uleb128 0x3b
 4151 015b 0B       		.uleb128 0xb
 4152 015c 11       		.uleb128 0x11
 4153 015d 01       		.uleb128 0x1
 4154 015e 12       		.uleb128 0x12
 4155 015f 06       		.uleb128 0x6
 4156 0160 40       		.uleb128 0x40
 4157 0161 18       		.uleb128 0x18
 4158 0162 9742     		.uleb128 0x2117
 4159 0164 19       		.uleb128 0x19
 4160 0165 00       		.byte	0
 4161 0166 00       		.byte	0
 4162 0167 18       		.uleb128 0x18
 4163 0168 2E       		.uleb128 0x2e
 4164 0169 00       		.byte	0
 4165 016a 3F       		.uleb128 0x3f
 4166 016b 19       		.uleb128 0x19
 4167 016c 03       		.uleb128 0x3
 4168 016d 0E       		.uleb128 0xe
 4169 016e 3A       		.uleb128 0x3a
 4170 016f 0B       		.uleb128 0xb
 4171 0170 3B       		.uleb128 0x3b
 4172 0171 0B       		.uleb128 0xb
 4173 0172 49       		.uleb128 0x49
 4174 0173 13       		.uleb128 0x13
 4175 0174 11       		.uleb128 0x11
 4176 0175 01       		.uleb128 0x1
 4177 0176 12       		.uleb128 0x12
 4178 0177 06       		.uleb128 0x6
 4179 0178 40       		.uleb128 0x40
 4180 0179 18       		.uleb128 0x18
 4181 017a 9742     		.uleb128 0x2117
 4182 017c 19       		.uleb128 0x19
 4183 017d 00       		.byte	0
 4184 017e 00       		.byte	0
 4185 017f 19       		.uleb128 0x19
 4186 0180 2E       		.uleb128 0x2e
 4187 0181 00       		.byte	0
 4188 0182 3F       		.uleb128 0x3f
 4189 0183 19       		.uleb128 0x19
 4190 0184 03       		.uleb128 0x3
 4191 0185 0E       		.uleb128 0xe
 4192 0186 3A       		.uleb128 0x3a
 4193 0187 0B       		.uleb128 0xb
 4194 0188 3B       		.uleb128 0x3b
 4195 0189 05       		.uleb128 0x5
 4196 018a 49       		.uleb128 0x49
 4197 018b 13       		.uleb128 0x13
 4198 018c 11       		.uleb128 0x11
 4199 018d 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 89


 4200 018e 12       		.uleb128 0x12
 4201 018f 06       		.uleb128 0x6
 4202 0190 40       		.uleb128 0x40
 4203 0191 18       		.uleb128 0x18
 4204 0192 9742     		.uleb128 0x2117
 4205 0194 19       		.uleb128 0x19
 4206 0195 00       		.byte	0
 4207 0196 00       		.byte	0
 4208 0197 1A       		.uleb128 0x1a
 4209 0198 2E       		.uleb128 0x2e
 4210 0199 01       		.byte	0x1
 4211 019a 3F       		.uleb128 0x3f
 4212 019b 19       		.uleb128 0x19
 4213 019c 03       		.uleb128 0x3
 4214 019d 0E       		.uleb128 0xe
 4215 019e 3A       		.uleb128 0x3a
 4216 019f 0B       		.uleb128 0xb
 4217 01a0 3B       		.uleb128 0x3b
 4218 01a1 05       		.uleb128 0x5
 4219 01a2 49       		.uleb128 0x49
 4220 01a3 13       		.uleb128 0x13
 4221 01a4 11       		.uleb128 0x11
 4222 01a5 01       		.uleb128 0x1
 4223 01a6 12       		.uleb128 0x12
 4224 01a7 06       		.uleb128 0x6
 4225 01a8 40       		.uleb128 0x40
 4226 01a9 18       		.uleb128 0x18
 4227 01aa 9642     		.uleb128 0x2116
 4228 01ac 19       		.uleb128 0x19
 4229 01ad 01       		.uleb128 0x1
 4230 01ae 13       		.uleb128 0x13
 4231 01af 00       		.byte	0
 4232 01b0 00       		.byte	0
 4233 01b1 1B       		.uleb128 0x1b
 4234 01b2 34       		.uleb128 0x34
 4235 01b3 00       		.byte	0
 4236 01b4 03       		.uleb128 0x3
 4237 01b5 0E       		.uleb128 0xe
 4238 01b6 3A       		.uleb128 0x3a
 4239 01b7 0B       		.uleb128 0xb
 4240 01b8 3B       		.uleb128 0x3b
 4241 01b9 05       		.uleb128 0x5
 4242 01ba 49       		.uleb128 0x49
 4243 01bb 13       		.uleb128 0x13
 4244 01bc 02       		.uleb128 0x2
 4245 01bd 18       		.uleb128 0x18
 4246 01be 00       		.byte	0
 4247 01bf 00       		.byte	0
 4248 01c0 1C       		.uleb128 0x1c
 4249 01c1 2E       		.uleb128 0x2e
 4250 01c2 00       		.byte	0
 4251 01c3 3F       		.uleb128 0x3f
 4252 01c4 19       		.uleb128 0x19
 4253 01c5 03       		.uleb128 0x3
 4254 01c6 0E       		.uleb128 0xe
 4255 01c7 3A       		.uleb128 0x3a
 4256 01c8 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 90


 4257 01c9 3B       		.uleb128 0x3b
 4258 01ca 05       		.uleb128 0x5
 4259 01cb 11       		.uleb128 0x11
 4260 01cc 01       		.uleb128 0x1
 4261 01cd 12       		.uleb128 0x12
 4262 01ce 06       		.uleb128 0x6
 4263 01cf 40       		.uleb128 0x40
 4264 01d0 18       		.uleb128 0x18
 4265 01d1 9742     		.uleb128 0x2117
 4266 01d3 19       		.uleb128 0x19
 4267 01d4 00       		.byte	0
 4268 01d5 00       		.byte	0
 4269 01d6 1D       		.uleb128 0x1d
 4270 01d7 2E       		.uleb128 0x2e
 4271 01d8 01       		.byte	0x1
 4272 01d9 3F       		.uleb128 0x3f
 4273 01da 19       		.uleb128 0x19
 4274 01db 03       		.uleb128 0x3
 4275 01dc 0E       		.uleb128 0xe
 4276 01dd 3A       		.uleb128 0x3a
 4277 01de 0B       		.uleb128 0xb
 4278 01df 3B       		.uleb128 0x3b
 4279 01e0 05       		.uleb128 0x5
 4280 01e1 27       		.uleb128 0x27
 4281 01e2 19       		.uleb128 0x19
 4282 01e3 49       		.uleb128 0x49
 4283 01e4 13       		.uleb128 0x13
 4284 01e5 11       		.uleb128 0x11
 4285 01e6 01       		.uleb128 0x1
 4286 01e7 12       		.uleb128 0x12
 4287 01e8 06       		.uleb128 0x6
 4288 01e9 40       		.uleb128 0x40
 4289 01ea 18       		.uleb128 0x18
 4290 01eb 9742     		.uleb128 0x2117
 4291 01ed 19       		.uleb128 0x19
 4292 01ee 01       		.uleb128 0x1
 4293 01ef 13       		.uleb128 0x13
 4294 01f0 00       		.byte	0
 4295 01f1 00       		.byte	0
 4296 01f2 1E       		.uleb128 0x1e
 4297 01f3 05       		.uleb128 0x5
 4298 01f4 00       		.byte	0
 4299 01f5 03       		.uleb128 0x3
 4300 01f6 0E       		.uleb128 0xe
 4301 01f7 3A       		.uleb128 0x3a
 4302 01f8 0B       		.uleb128 0xb
 4303 01f9 3B       		.uleb128 0x3b
 4304 01fa 05       		.uleb128 0x5
 4305 01fb 49       		.uleb128 0x49
 4306 01fc 13       		.uleb128 0x13
 4307 01fd 02       		.uleb128 0x2
 4308 01fe 18       		.uleb128 0x18
 4309 01ff 00       		.byte	0
 4310 0200 00       		.byte	0
 4311 0201 1F       		.uleb128 0x1f
 4312 0202 2E       		.uleb128 0x2e
 4313 0203 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 91


 4314 0204 3F       		.uleb128 0x3f
 4315 0205 19       		.uleb128 0x19
 4316 0206 03       		.uleb128 0x3
 4317 0207 0E       		.uleb128 0xe
 4318 0208 3A       		.uleb128 0x3a
 4319 0209 0B       		.uleb128 0xb
 4320 020a 3B       		.uleb128 0x3b
 4321 020b 05       		.uleb128 0x5
 4322 020c 11       		.uleb128 0x11
 4323 020d 01       		.uleb128 0x1
 4324 020e 12       		.uleb128 0x12
 4325 020f 06       		.uleb128 0x6
 4326 0210 40       		.uleb128 0x40
 4327 0211 18       		.uleb128 0x18
 4328 0212 9642     		.uleb128 0x2116
 4329 0214 19       		.uleb128 0x19
 4330 0215 01       		.uleb128 0x1
 4331 0216 13       		.uleb128 0x13
 4332 0217 00       		.byte	0
 4333 0218 00       		.byte	0
 4334 0219 20       		.uleb128 0x20
 4335 021a 2E       		.uleb128 0x2e
 4336 021b 00       		.byte	0
 4337 021c 3F       		.uleb128 0x3f
 4338 021d 19       		.uleb128 0x19
 4339 021e 03       		.uleb128 0x3
 4340 021f 0E       		.uleb128 0xe
 4341 0220 3A       		.uleb128 0x3a
 4342 0221 0B       		.uleb128 0xb
 4343 0222 3B       		.uleb128 0x3b
 4344 0223 05       		.uleb128 0x5
 4345 0224 11       		.uleb128 0x11
 4346 0225 01       		.uleb128 0x1
 4347 0226 12       		.uleb128 0x12
 4348 0227 06       		.uleb128 0x6
 4349 0228 40       		.uleb128 0x40
 4350 0229 18       		.uleb128 0x18
 4351 022a 9642     		.uleb128 0x2116
 4352 022c 19       		.uleb128 0x19
 4353 022d 00       		.byte	0
 4354 022e 00       		.byte	0
 4355 022f 21       		.uleb128 0x21
 4356 0230 34       		.uleb128 0x34
 4357 0231 00       		.byte	0
 4358 0232 03       		.uleb128 0x3
 4359 0233 0E       		.uleb128 0xe
 4360 0234 3A       		.uleb128 0x3a
 4361 0235 0B       		.uleb128 0xb
 4362 0236 3B       		.uleb128 0x3b
 4363 0237 05       		.uleb128 0x5
 4364 0238 49       		.uleb128 0x49
 4365 0239 13       		.uleb128 0x13
 4366 023a 3F       		.uleb128 0x3f
 4367 023b 19       		.uleb128 0x19
 4368 023c 3C       		.uleb128 0x3c
 4369 023d 19       		.uleb128 0x19
 4370 023e 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 92


 4371 023f 00       		.byte	0
 4372 0240 22       		.uleb128 0x22
 4373 0241 34       		.uleb128 0x34
 4374 0242 00       		.byte	0
 4375 0243 03       		.uleb128 0x3
 4376 0244 08       		.uleb128 0x8
 4377 0245 3A       		.uleb128 0x3a
 4378 0246 0B       		.uleb128 0xb
 4379 0247 3B       		.uleb128 0x3b
 4380 0248 0B       		.uleb128 0xb
 4381 0249 49       		.uleb128 0x49
 4382 024a 13       		.uleb128 0x13
 4383 024b 3F       		.uleb128 0x3f
 4384 024c 19       		.uleb128 0x19
 4385 024d 02       		.uleb128 0x2
 4386 024e 18       		.uleb128 0x18
 4387 024f 00       		.byte	0
 4388 0250 00       		.byte	0
 4389 0251 23       		.uleb128 0x23
 4390 0252 34       		.uleb128 0x34
 4391 0253 00       		.byte	0
 4392 0254 03       		.uleb128 0x3
 4393 0255 0E       		.uleb128 0xe
 4394 0256 3A       		.uleb128 0x3a
 4395 0257 0B       		.uleb128 0xb
 4396 0258 3B       		.uleb128 0x3b
 4397 0259 0B       		.uleb128 0xb
 4398 025a 49       		.uleb128 0x49
 4399 025b 13       		.uleb128 0x13
 4400 025c 3F       		.uleb128 0x3f
 4401 025d 19       		.uleb128 0x19
 4402 025e 02       		.uleb128 0x2
 4403 025f 18       		.uleb128 0x18
 4404 0260 00       		.byte	0
 4405 0261 00       		.byte	0
 4406 0262 24       		.uleb128 0x24
 4407 0263 34       		.uleb128 0x34
 4408 0264 00       		.byte	0
 4409 0265 03       		.uleb128 0x3
 4410 0266 08       		.uleb128 0x8
 4411 0267 3A       		.uleb128 0x3a
 4412 0268 0B       		.uleb128 0xb
 4413 0269 3B       		.uleb128 0x3b
 4414 026a 0B       		.uleb128 0xb
 4415 026b 49       		.uleb128 0x49
 4416 026c 13       		.uleb128 0x13
 4417 026d 3F       		.uleb128 0x3f
 4418 026e 19       		.uleb128 0x19
 4419 026f 3C       		.uleb128 0x3c
 4420 0270 19       		.uleb128 0x19
 4421 0271 00       		.byte	0
 4422 0272 00       		.byte	0
 4423 0273 25       		.uleb128 0x25
 4424 0274 34       		.uleb128 0x34
 4425 0275 00       		.byte	0
 4426 0276 03       		.uleb128 0x3
 4427 0277 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 93


 4428 0278 3A       		.uleb128 0x3a
 4429 0279 0B       		.uleb128 0xb
 4430 027a 3B       		.uleb128 0x3b
 4431 027b 0B       		.uleb128 0xb
 4432 027c 49       		.uleb128 0x49
 4433 027d 13       		.uleb128 0x13
 4434 027e 3F       		.uleb128 0x3f
 4435 027f 19       		.uleb128 0x19
 4436 0280 3C       		.uleb128 0x3c
 4437 0281 19       		.uleb128 0x19
 4438 0282 00       		.byte	0
 4439 0283 00       		.byte	0
 4440 0284 26       		.uleb128 0x26
 4441 0285 0F       		.uleb128 0xf
 4442 0286 00       		.byte	0
 4443 0287 0B       		.uleb128 0xb
 4444 0288 0B       		.uleb128 0xb
 4445 0289 49       		.uleb128 0x49
 4446 028a 13       		.uleb128 0x13
 4447 028b 00       		.byte	0
 4448 028c 00       		.byte	0
 4449 028d 27       		.uleb128 0x27
 4450 028e 34       		.uleb128 0x34
 4451 028f 00       		.byte	0
 4452 0290 03       		.uleb128 0x3
 4453 0291 0E       		.uleb128 0xe
 4454 0292 3A       		.uleb128 0x3a
 4455 0293 0B       		.uleb128 0xb
 4456 0294 3B       		.uleb128 0x3b
 4457 0295 05       		.uleb128 0x5
 4458 0296 49       		.uleb128 0x49
 4459 0297 13       		.uleb128 0x13
 4460 0298 3F       		.uleb128 0x3f
 4461 0299 19       		.uleb128 0x19
 4462 029a 02       		.uleb128 0x2
 4463 029b 18       		.uleb128 0x18
 4464 029c 00       		.byte	0
 4465 029d 00       		.byte	0
 4466 029e 00       		.byte	0
 4467              		.section	.debug_aranges,"",%progbits
 4468 0000 94000000 		.4byte	0x94
 4469 0004 0200     		.2byte	0x2
 4470 0006 00000000 		.4byte	.Ldebug_info0
 4471 000a 04       		.byte	0x4
 4472 000b 00       		.byte	0
 4473 000c 0000     		.2byte	0
 4474 000e 0000     		.2byte	0
 4475 0010 00000000 		.4byte	.LFB64
 4476 0014 EC000000 		.4byte	.LFE64-.LFB64
 4477 0018 00000000 		.4byte	.LFB65
 4478 001c 18000000 		.4byte	.LFE65-.LFB65
 4479 0020 00000000 		.4byte	.LFB66
 4480 0024 18000000 		.4byte	.LFE66-.LFB66
 4481 0028 00000000 		.4byte	.LFB67
 4482 002c 18000000 		.4byte	.LFE67-.LFB67
 4483 0030 00000000 		.4byte	.LFB68
 4484 0034 18000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 94


 4485 0038 00000000 		.4byte	.LFB69
 4486 003c 68000000 		.4byte	.LFE69-.LFB69
 4487 0040 00000000 		.4byte	.LFB70
 4488 0044 28010000 		.4byte	.LFE70-.LFB70
 4489 0048 00000000 		.4byte	.LFB71
 4490 004c 54000000 		.4byte	.LFE71-.LFB71
 4491 0050 00000000 		.4byte	.LFB72
 4492 0054 34000000 		.4byte	.LFE72-.LFB72
 4493 0058 00000000 		.4byte	.LFB73
 4494 005c 84000000 		.4byte	.LFE73-.LFB73
 4495 0060 00000000 		.4byte	.LFB74
 4496 0064 7C000000 		.4byte	.LFE74-.LFB74
 4497 0068 00000000 		.4byte	.LFB75
 4498 006c E4050000 		.4byte	.LFE75-.LFB75
 4499 0070 00000000 		.4byte	.LFB76
 4500 0074 68000000 		.4byte	.LFE76-.LFB76
 4501 0078 00000000 		.4byte	.LFB77
 4502 007c 70000000 		.4byte	.LFE77-.LFB77
 4503 0080 00000000 		.4byte	.LFB78
 4504 0084 3C010000 		.4byte	.LFE78-.LFB78
 4505 0088 00000000 		.4byte	.LFB79
 4506 008c C0000000 		.4byte	.LFE79-.LFB79
 4507 0090 00000000 		.4byte	0
 4508 0094 00000000 		.4byte	0
 4509              		.section	.debug_ranges,"",%progbits
 4510              	.Ldebug_ranges0:
 4511 0000 00000000 		.4byte	.LFB64
 4512 0004 EC000000 		.4byte	.LFE64
 4513 0008 00000000 		.4byte	.LFB65
 4514 000c 18000000 		.4byte	.LFE65
 4515 0010 00000000 		.4byte	.LFB66
 4516 0014 18000000 		.4byte	.LFE66
 4517 0018 00000000 		.4byte	.LFB67
 4518 001c 18000000 		.4byte	.LFE67
 4519 0020 00000000 		.4byte	.LFB68
 4520 0024 18000000 		.4byte	.LFE68
 4521 0028 00000000 		.4byte	.LFB69
 4522 002c 68000000 		.4byte	.LFE69
 4523 0030 00000000 		.4byte	.LFB70
 4524 0034 28010000 		.4byte	.LFE70
 4525 0038 00000000 		.4byte	.LFB71
 4526 003c 54000000 		.4byte	.LFE71
 4527 0040 00000000 		.4byte	.LFB72
 4528 0044 34000000 		.4byte	.LFE72
 4529 0048 00000000 		.4byte	.LFB73
 4530 004c 84000000 		.4byte	.LFE73
 4531 0050 00000000 		.4byte	.LFB74
 4532 0054 7C000000 		.4byte	.LFE74
 4533 0058 00000000 		.4byte	.LFB75
 4534 005c E4050000 		.4byte	.LFE75
 4535 0060 00000000 		.4byte	.LFB76
 4536 0064 68000000 		.4byte	.LFE76
 4537 0068 00000000 		.4byte	.LFB77
 4538 006c 70000000 		.4byte	.LFE77
 4539 0070 00000000 		.4byte	.LFB78
 4540 0074 3C010000 		.4byte	.LFE78
 4541 0078 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 95


 4542 007c C0000000 		.4byte	.LFE79
 4543 0080 00000000 		.4byte	0
 4544 0084 00000000 		.4byte	0
 4545              		.section	.debug_line,"",%progbits
 4546              	.Ldebug_line0:
 4547 0000 5E040000 		.section	.debug_str,"MS",%progbits,1
 4547      02007001 
 4547      00000201 
 4547      FB0E0D00 
 4547      01010101 
 4548              	.LASF137:
 4549 0000 746F7461 		.ascii	"totalDistance\000"
 4549      6C446973 
 4549      74616E63 
 4549      6500
 4550              	.LASF41:
 4551 000e 4F726965 		.ascii	"OrientationState\000"
 4551      6E746174 
 4551      696F6E53 
 4551      74617465 
 4551      00
 4552              	.LASF36:
 4553 001f 67325F73 		.ascii	"g2_speed\000"
 4553      70656564 
 4553      00
 4554              	.LASF97:
 4555 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4555      61726455 
 4555      6E74696C 
 4555      54617267 
 4555      65745374 
 4556              	.LASF57:
 4557 0046 526F626F 		.ascii	"RobotMovement\000"
 4557      744D6F76 
 4557      656D656E 
 4557      7400
 4558              	.LASF49:
 4559 0054 536B6970 		.ascii	"Skip\000"
 4559      00
 4560              	.LASF106:
 4561 0059 6C696E65 		.ascii	"lineCount\000"
 4561      436F756E 
 4561      7400
 4562              	.LASF113:
 4563 0063 74735F73 		.ascii	"ts_speed\000"
 4563      70656564 
 4563      00
 4564              	.LASF0:
 4565 006c 7369676E 		.ascii	"signed char\000"
 4565      65642063 
 4565      68617200 
 4566              	.LASF157:
 4567 0078 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4567      6F63756D 
 4567      656E7473 
 4567      5C476974 
 4567      4875625C 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 96


 4568 00a7 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4568      635F636F 
 4568      64655F62 
 4568      6173655C 
 4568      43533330 
 4569              	.LASF70:
 4570 00c9 53345F44 		.ascii	"S4_DETECTED\000"
 4570      45544543 
 4570      54454400 
 4571              	.LASF52:
 4572 00d5 64697265 		.ascii	"direction\000"
 4572      6374696F 
 4572      6E00
 4573              	.LASF140:
 4574 00df 74696D65 		.ascii	"timerInt\000"
 4574      72496E74 
 4574      00
 4575              	.LASF155:
 4576 00e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4576      43313120 
 4576      352E342E 
 4576      31203230 
 4576      31363036 
 4577 011b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4577      20726576 
 4577      6973696F 
 4577      6E203233 
 4577      37373135 
 4578 014e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4578      66756E63 
 4578      74696F6E 
 4578      2D736563 
 4578      74696F6E 
 4579              	.LASF82:
 4580 0176 626C6F63 		.ascii	"blocksToTarget\000"
 4580      6B73546F 
 4580      54617267 
 4580      657400
 4581              	.LASF29:
 4582 0185 67305F64 		.ascii	"g0_direction\000"
 4582      69726563 
 4582      74696F6E 
 4582      00
 4583              	.LASF126:
 4584 0192 656E7472 		.ascii	"entry\000"
 4584      7900
 4585              	.LASF7:
 4586 0198 6C6F6E67 		.ascii	"long long unsigned int\000"
 4586      206C6F6E 
 4586      6720756E 
 4586      7369676E 
 4586      65642069 
 4587              	.LASF56:
 4588 01af 65787065 		.ascii	"expectedOrientation\000"
 4588      63746564 
 4588      4F726965 
 4588      6E746174 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 97


 4588      696F6E00 
 4589              	.LASF46:
 4590 01c3 75547572 		.ascii	"uTurn\000"
 4590      6E00
 4591              	.LASF26:
 4592 01c9 67305F78 		.ascii	"g0_xpos\000"
 4592      706F7300 
 4593              	.LASF142:
 4594 01d1 73746F70 		.ascii	"stopBuffer\000"
 4594      42756666 
 4594      657200
 4595              	.LASF107:
 4596 01dc 6F6E4C69 		.ascii	"onLineFlag\000"
 4596      6E65466C 
 4596      616700
 4597              	.LASF55:
 4598 01e7 64697374 		.ascii	"distanceToTarget\000"
 4598      616E6365 
 4598      546F5461 
 4598      72676574 
 4598      00
 4599              	.LASF48:
 4600 01f8 53746F70 		.ascii	"StopAtTarget\000"
 4600      41745461 
 4600      72676574 
 4600      00
 4601              	.LASF154:
 4602 0205 66697273 		.ascii	"firstTurnIteration\000"
 4602      74547572 
 4602      6E497465 
 4602      72617469 
 4602      6F6E00
 4603              	.LASF131:
 4604 0218 70726576 		.ascii	"previousDirection\000"
 4604      696F7573 
 4604      44697265 
 4604      6374696F 
 4604      6E00
 4605              	.LASF115:
 4606 022a 666C6167 		.ascii	"flag_ts_enc\000"
 4606      5F74735F 
 4606      656E6300 
 4607              	.LASF69:
 4608 0236 53335F44 		.ascii	"S3_DETECTED\000"
 4608      45544543 
 4608      54454400 
 4609              	.LASF121:
 4610 0242 666C6167 		.ascii	"flag_KB_string\000"
 4610      5F4B425F 
 4610      73747269 
 4610      6E6700
 4611              	.LASF71:
 4612 0251 53355F44 		.ascii	"S5_DETECTED\000"
 4612      45544543 
 4612      54454400 
 4613              	.LASF101:
 4614 025d 72696768 		.ascii	"rightStatusFlag\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 98


 4614      74537461 
 4614      74757346 
 4614      6C616700 
 4615              	.LASF51:
 4616 026d 496E7374 		.ascii	"Instruction\000"
 4616      72756374 
 4616      696F6E00 
 4617              	.LASF150:
 4618 0279 63757272 		.ascii	"currentCol\000"
 4618      656E7443 
 4618      6F6C00
 4619              	.LASF63:
 4620 0284 53746F70 		.ascii	"Stop\000"
 4620      00
 4621              	.LASF4:
 4622 0289 6C6F6E67 		.ascii	"long int\000"
 4622      20696E74 
 4622      00
 4623              	.LASF110:
 4624 0292 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4624      52784275 
 4624      66666572 
 4624      00
 4625              	.LASF91:
 4626 029f 636F756E 		.ascii	"count2\000"
 4626      743200
 4627              	.LASF94:
 4628 02a6 696E7374 		.ascii	"instructionIndex\000"
 4628      72756374 
 4628      696F6E49 
 4628      6E646578 
 4628      00
 4629              	.LASF47:
 4630 02b7 466F7277 		.ascii	"ForwardUntilTarget\000"
 4630      61726455 
 4630      6E74696C 
 4630      54617267 
 4630      657400
 4631              	.LASF67:
 4632 02ca 4261636B 		.ascii	"Backward\000"
 4632      77617264 
 4632      00
 4633              	.LASF14:
 4634 02d3 75696E74 		.ascii	"uint8\000"
 4634      3800
 4635              	.LASF6:
 4636 02d9 6C6F6E67 		.ascii	"long long int\000"
 4636      206C6F6E 
 4636      6720696E 
 4636      7400
 4637              	.LASF20:
 4638 02e7 646F7562 		.ascii	"double\000"
 4638      6C6500
 4639              	.LASF103:
 4640 02ee 63757272 		.ascii	"currentIgnoreL\000"
 4640      656E7449 
 4640      676E6F72 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 99


 4640      654C00
 4641              	.LASF122:
 4642 02fd 64617461 		.ascii	"dataready_flag\000"
 4642      72656164 
 4642      795F666C 
 4642      616700
 4643              	.LASF74:
 4644 030c 6D61696E 		.ascii	"main\000"
 4644      00
 4645              	.LASF104:
 4646 0311 63757272 		.ascii	"currentIgnoreR\000"
 4646      656E7449 
 4646      676E6F72 
 4646      655200
 4647              	.LASF62:
 4648 0320 41646A75 		.ascii	"AdjustToTheRight\000"
 4648      7374546F 
 4648      54686552 
 4648      69676874 
 4648      00
 4649              	.LASF119:
 4650 0331 666C6167 		.ascii	"flag_rx\000"
 4650      5F727800 
 4651              	.LASF16:
 4652 0339 75696E74 		.ascii	"uint32\000"
 4652      333200
 4653              	.LASF89:
 4654 0340 6E657874 		.ascii	"nextInstruction\000"
 4654      496E7374 
 4654      72756374 
 4654      696F6E00 
 4655              	.LASF87:
 4656 0350 636F756E 		.ascii	"count\000"
 4656      7400
 4657              	.LASF125:
 4658 0356 6C696E65 		.ascii	"line\000"
 4658      00
 4659              	.LASF37:
 4660 035b 67325F64 		.ascii	"g2_direction\000"
 4660      69726563 
 4660      74696F6E 
 4660      00
 4661              	.LASF139:
 4662 0368 71756164 		.ascii	"quadDec2Count\000"
 4662      44656332 
 4662      436F756E 
 4662      7400
 4663              	.LASF59:
 4664 0376 5475726E 		.ascii	"TurnRight\000"
 4664      52696768 
 4664      7400
 4665              	.LASF66:
 4666 0380 466F7277 		.ascii	"ForwardAfterTurn\000"
 4666      61726441 
 4666      66746572 
 4666      5475726E 
 4666      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 100


 4667              	.LASF50:
 4668 0391 64617461 		.ascii	"data_main\000"
 4668      5F6D6169 
 4668      6E00
 4669              	.LASF80:
 4670 039b 626C6F63 		.ascii	"blocksize\000"
 4670      6B73697A 
 4670      6500
 4671              	.LASF111:
 4672 03a5 74735F65 		.ascii	"ts_enc\000"
 4672      6E6300
 4673              	.LASF5:
 4674 03ac 6C6F6E67 		.ascii	"long unsigned int\000"
 4674      20756E73 
 4674      69676E65 
 4674      6420696E 
 4674      7400
 4675              	.LASF109:
 4676 03be 746F6F4C 		.ascii	"tooLateFlag\000"
 4676      61746546 
 4676      6C616700 
 4677              	.LASF146:
 4678 03ca 626C6F63 		.ascii	"blockSizeTotal\000"
 4678      6B53697A 
 4678      65546F74 
 4678      616C00
 4679              	.LASF158:
 4680 03d9 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4680      7465436C 
 4680      6F636B77 
 4680      69736531 
 4680      38304465 
 4681              	.LASF65:
 4682 03f3 77616974 		.ascii	"waitForTurn\000"
 4682      466F7254 
 4682      75726E00 
 4683              	.LASF58:
 4684 03ff 466F7277 		.ascii	"Forward\000"
 4684      61726400 
 4685              	.LASF3:
 4686 0407 73686F72 		.ascii	"short unsigned int\000"
 4686      7420756E 
 4686      7369676E 
 4686      65642069 
 4686      6E7400
 4687              	.LASF108:
 4688 041a 746F6F45 		.ascii	"tooEarlyFlag\000"
 4688      61726C79 
 4688      466C6167 
 4688      00
 4689              	.LASF93:
 4690 0427 53657452 		.ascii	"SetRobotMovement\000"
 4690      6F626F74 
 4690      4D6F7665 
 4690      6D656E74 
 4690      00
 4691              	.LASF17:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 101


 4692 0438 696E7438 		.ascii	"int8\000"
 4692      00
 4693              	.LASF78:
 4694 043d 73706565 		.ascii	"speedTimer\000"
 4694      6454696D 
 4694      657200
 4695              	.LASF12:
 4696 0448 5F5F696E 		.ascii	"__int32_t\000"
 4696      7433325F 
 4696      7400
 4697              	.LASF156:
 4698 0452 6D61696E 		.ascii	"main.c\000"
 4698      2E6300
 4699              	.LASF31:
 4700 0459 67315F79 		.ascii	"g1_ypos\000"
 4700      706F7300 
 4701              	.LASF84:
 4702 0461 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4702      546F4E65 
 4702      7874496E 
 4702      73747275 
 4702      6374696F 
 4703              	.LASF92:
 4704 0477 71756164 		.ascii	"quadPulseCount\000"
 4704      50756C73 
 4704      65436F75 
 4704      6E7400
 4705              	.LASF114:
 4706 0486 74735F64 		.ascii	"ts_display\000"
 4706      6973706C 
 4706      617900
 4707              	.LASF145:
 4708 0491 63757272 		.ascii	"currentFoodListIndex\000"
 4708      656E7446 
 4708      6F6F644C 
 4708      69737449 
 4708      6E646578 
 4709              	.LASF76:
 4710 04a6 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4710      61726443 
 4710      6F757273 
 4710      65436F72 
 4710      72656374 
 4711              	.LASF120:
 4712 04be 666C6167 		.ascii	"flag_packet\000"
 4712      5F706163 
 4712      6B657400 
 4713              	.LASF117:
 4714 04ca 666C6167 		.ascii	"flag_ts_speed\000"
 4714      5F74735F 
 4714      73706565 
 4714      6400
 4715              	.LASF32:
 4716 04d8 67315F73 		.ascii	"g1_speed\000"
 4716      70656564 
 4716      00
 4717              	.LASF39:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 102


 4718 04e1 4C656674 		.ascii	"Left\000"
 4718      00
 4719              	.LASF99:
 4720 04e6 75547572 		.ascii	"uTurnFinishedFlag\000"
 4720      6E46696E 
 4720      69736865 
 4720      64466C61 
 4720      6700
 4721              	.LASF10:
 4722 04f8 73697A65 		.ascii	"sizetype\000"
 4722      74797065 
 4722      00
 4723              	.LASF149:
 4724 0501 63757272 		.ascii	"currentRow\000"
 4724      656E7452 
 4724      6F7700
 4725              	.LASF128:
 4726 050c 73797374 		.ascii	"system_state\000"
 4726      656D5F73 
 4726      74617465 
 4726      00
 4727              	.LASF33:
 4728 0519 67315F64 		.ascii	"g1_direction\000"
 4728      69726563 
 4728      74696F6E 
 4728      00
 4729              	.LASF127:
 4730 0526 75736242 		.ascii	"usbBuffer\000"
 4730      75666665 
 4730      7200
 4731              	.LASF44:
 4732 0530 77616974 		.ascii	"waitForLeftTurn\000"
 4732      466F724C 
 4732      65667454 
 4732      75726E00 
 4733              	.LASF30:
 4734 0540 67315F78 		.ascii	"g1_xpos\000"
 4734      706F7300 
 4735              	.LASF35:
 4736 0548 67325F79 		.ascii	"g2_ypos\000"
 4736      706F7300 
 4737              	.LASF102:
 4738 0550 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4738      436F7572 
 4738      7365436F 
 4738      72726563 
 4738      74696F6E 
 4739              	.LASF123:
 4740 056c 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4740      5F72665F 
 4740      7472616E 
 4740      736D6973 
 4740      73696F6E 
 4741              	.LASF147:
 4742 0588 78426C6F 		.ascii	"xBlocksize\000"
 4742      636B7369 
 4742      7A6500
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 103


 4743              	.LASF148:
 4744 0593 79426C6F 		.ascii	"yBlocksize\000"
 4744      636B7369 
 4744      7A6500
 4745              	.LASF19:
 4746 059e 666C6F61 		.ascii	"float\000"
 4746      7400
 4747              	.LASF136:
 4748 05a4 746F7461 		.ascii	"totalMilliseconds\000"
 4748      6C4D696C 
 4748      6C697365 
 4748      636F6E64 
 4748      7300
 4749              	.LASF64:
 4750 05b6 556E6B6E 		.ascii	"Unknown\000"
 4750      6F776E00 
 4751              	.LASF86:
 4752 05be 47657449 		.ascii	"GetInstructionAtIndex\000"
 4752      6E737472 
 4752      75637469 
 4752      6F6E4174 
 4752      496E6465 
 4753              	.LASF141:
 4754 05d4 6B656570 		.ascii	"keepLedOn\000"
 4754      4C65644F 
 4754      6E00
 4755              	.LASF112:
 4756 05de 74735F75 		.ascii	"ts_update\000"
 4756      70646174 
 4756      6500
 4757              	.LASF98:
 4758 05e8 75547572 		.ascii	"uTurnStartedFlag\000"
 4758      6E537461 
 4758      72746564 
 4758      466C6167 
 4758      00
 4759              	.LASF13:
 4760 05f9 696E7433 		.ascii	"int32_t\000"
 4760      325F7400 
 4761              	.LASF1:
 4762 0601 756E7369 		.ascii	"unsigned char\000"
 4762      676E6564 
 4762      20636861 
 4762      7200
 4763              	.LASF15:
 4764 060f 75696E74 		.ascii	"uint16\000"
 4764      313600
 4765              	.LASF42:
 4766 0616 496E7374 		.ascii	"InstructionDirection\000"
 4766      72756374 
 4766      696F6E44 
 4766      69726563 
 4766      74696F6E 
 4767              	.LASF34:
 4768 062b 67325F78 		.ascii	"g2_xpos\000"
 4768      706F7300 
 4769              	.LASF2:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 104


 4770 0633 73686F72 		.ascii	"short int\000"
 4770      7420696E 
 4770      7400
 4771              	.LASF133:
 4772 063d 70726576 		.ascii	"previousOrientation\000"
 4772      696F7573 
 4772      4F726965 
 4772      6E746174 
 4772      696F6E00 
 4773              	.LASF152:
 4774 0651 69676E6F 		.ascii	"ignoreSensor\000"
 4774      72655365 
 4774      6E736F72 
 4774      00
 4775              	.LASF100:
 4776 065e 6C656674 		.ascii	"leftStatusFlag\000"
 4776      53746174 
 4776      7573466C 
 4776      616700
 4777              	.LASF81:
 4778 066d 63757272 		.ascii	"currentInstructionDirection\000"
 4778      656E7449 
 4778      6E737472 
 4778      75637469 
 4778      6F6E4469 
 4779              	.LASF24:
 4780 0689 726F626F 		.ascii	"robot_ypos\000"
 4780      745F7970 
 4780      6F7300
 4781              	.LASF61:
 4782 0694 41646A75 		.ascii	"AdjustToTheLeft\000"
 4782      7374546F 
 4782      5468654C 
 4782      65667400 
 4783              	.LASF43:
 4784 06a4 476F466F 		.ascii	"GoForward\000"
 4784      72776172 
 4784      6400
 4785              	.LASF40:
 4786 06ae 52696768 		.ascii	"Right\000"
 4786      7400
 4787              	.LASF153:
 4788 06b4 6C617374 		.ascii	"lastDirectionAfter180\000"
 4788      44697265 
 4788      6374696F 
 4788      6E416674 
 4788      65723138 
 4789              	.LASF88:
 4790 06ca 6E756D53 		.ascii	"numSteps\000"
 4790      74657073 
 4790      00
 4791              	.LASF77:
 4792 06d3 5370696E 		.ascii	"SpinCourseCorrection\000"
 4792      436F7572 
 4792      7365436F 
 4792      72726563 
 4792      74696F6E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 105


 4793              	.LASF118:
 4794 06e8 666C6167 		.ascii	"flag_ts_display\000"
 4794      5F74735F 
 4794      64697370 
 4794      6C617900 
 4795              	.LASF75:
 4796 06f8 6E657744 		.ascii	"newDistance\000"
 4796      69737461 
 4796      6E636500 
 4797              	.LASF9:
 4798 0704 6C6F6E67 		.ascii	"long double\000"
 4798      20646F75 
 4798      626C6500 
 4799              	.LASF11:
 4800 0710 63686172 		.ascii	"char\000"
 4800      00
 4801              	.LASF27:
 4802 0715 67305F79 		.ascii	"g0_ypos\000"
 4802      706F7300 
 4803              	.LASF68:
 4804 071d 5370696E 		.ascii	"Spin180\000"
 4804      31383000 
 4805              	.LASF8:
 4806 0725 756E7369 		.ascii	"unsigned int\000"
 4806      676E6564 
 4806      20696E74 
 4806      00
 4807              	.LASF21:
 4808 0732 72737369 		.ascii	"rssi\000"
 4808      00
 4809              	.LASF22:
 4810 0737 696E6465 		.ascii	"index\000"
 4810      7800
 4811              	.LASF72:
 4812 073d 53365F44 		.ascii	"S6_DETECTED\000"
 4812      45544543 
 4812      54454400 
 4813              	.LASF129:
 4814 0749 666F6F64 		.ascii	"food_list\000"
 4814      5F6C6973 
 4814      7400
 4815              	.LASF38:
 4816 0753 446F776E 		.ascii	"Down\000"
 4816      00
 4817              	.LASF138:
 4818 0758 62756666 		.ascii	"buffer\000"
 4818      657200
 4819              	.LASF116:
 4820 075f 666C6167 		.ascii	"flag_ts_update\000"
 4820      5F74735F 
 4820      75706461 
 4820      746500
 4821              	.LASF124:
 4822 076e 64697370 		.ascii	"displaystring\000"
 4822      6C617973 
 4822      7472696E 
 4822      6700
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 106


 4823              	.LASF23:
 4824 077c 726F626F 		.ascii	"robot_xpos\000"
 4824      745F7870 
 4824      6F7300
 4825              	.LASF132:
 4826 0787 63757272 		.ascii	"currentRobotOrientation\000"
 4826      656E7452 
 4826      6F626F74 
 4826      4F726965 
 4826      6E746174 
 4827              	.LASF130:
 4828 079f 63757272 		.ascii	"currentDirection\000"
 4828      656E7444 
 4828      69726563 
 4828      74696F6E 
 4828      00
 4829              	.LASF79:
 4830 07b0 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4830      6F76656D 
 4830      656E7441 
 4830      63636F72 
 4830      64696E67 
 4831              	.LASF96:
 4832 07d2 7475726E 		.ascii	"turnFinishedFlag\000"
 4832      46696E69 
 4832      73686564 
 4832      466C6167 
 4832      00
 4833              	.LASF135:
 4834 07e3 696E7374 		.ascii	"instructionList\000"
 4834      72756374 
 4834      696F6E4C 
 4834      69737400 
 4835              	.LASF45:
 4836 07f3 77616974 		.ascii	"waitForRightTurn\000"
 4836      466F7252 
 4836      69676874 
 4836      5475726E 
 4836      00
 4837              	.LASF144:
 4838 0804 6A756E63 		.ascii	"junctionConfiguration\000"
 4838      74696F6E 
 4838      436F6E66 
 4838      69677572 
 4838      6174696F 
 4839              	.LASF134:
 4840 081a 63757272 		.ascii	"currentInstruction\000"
 4840      656E7449 
 4840      6E737472 
 4840      75637469 
 4840      6F6E00
 4841              	.LASF105:
 4842 082d 746F7461 		.ascii	"totalLineCount\000"
 4842      6C4C696E 
 4842      65436F75 
 4842      6E7400
 4843              	.LASF90:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 107


 4844 083c 636F756E 		.ascii	"count1\000"
 4844      743100
 4845              	.LASF73:
 4846 0843 54494D45 		.ascii	"TIMER_FINISH\000"
 4846      525F4649 
 4846      4E495348 
 4846      00
 4847              	.LASF83:
 4848 0850 52657365 		.ascii	"ResetSensorFlags\000"
 4848      7453656E 
 4848      736F7246 
 4848      6C616773 
 4848      00
 4849              	.LASF18:
 4850 0861 696E7431 		.ascii	"int16\000"
 4850      3600
 4851              	.LASF85:
 4852 0867 71756164 		.ascii	"quadCountToRPM\000"
 4852      436F756E 
 4852      74546F52 
 4852      504D00
 4853              	.LASF53:
 4854 0876 69676E6F 		.ascii	"ignoreL\000"
 4854      72654C00 
 4855              	.LASF60:
 4856 087e 5475726E 		.ascii	"TurnLeft\000"
 4856      4C656674 
 4856      00
 4857              	.LASF54:
 4858 0887 69676E6F 		.ascii	"ignoreR\000"
 4858      72655200 
 4859              	.LASF95:
 4860 088f 7475726E 		.ascii	"turnStartedFlag\000"
 4860      53746172 
 4860      74656446 
 4860      6C616700 
 4861              	.LASF28:
 4862 089f 67305F73 		.ascii	"g0_speed\000"
 4862      70656564 
 4862      00
 4863              	.LASF25:
 4864 08a8 726F626F 		.ascii	"robot_orientation\000"
 4864      745F6F72 
 4864      69656E74 
 4864      6174696F 
 4864      6E00
 4865              	.LASF151:
 4866 08ba 73746F70 		.ascii	"stoppedAfterTurn\000"
 4866      70656441 
 4866      66746572 
 4866      5475726E 
 4866      00
 4867              	.LASF143:
 4868 08cb 666F7277 		.ascii	"forwardBuffer\000"
 4868      61726442 
 4868      75666665 
 4868      7200
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwo3XUe.s 			page 108


 4869              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
