ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 03       		.byte	3
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 03       		.byte	3
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Right;
  46:main.c        **** enum OrientationState previousOrientation = Right;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** // --- YIPPE
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s3 = 0;
  51:main.c        **** uint8 s4 = 0;
  52:main.c        **** uint8 s5 = 0;
  53:main.c        **** uint8 s6 = 0;
  54:main.c        **** //* ========================================
  55:main.c        **** // Calculating Distance
  56:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  57:main.c        **** 
  58:main.c        **** uint32 totalMilliseconds = 0;
  59:main.c        **** float totalDistance = 0; // in mm
  60:main.c        **** //* ========================================
  61:main.c        **** char buffer[69];
  62:main.c        **** int quadDec2Count = 0;
  63:main.c        **** int timerInt = 0;
  64:main.c        **** int keepLedOn = 0;
  65:main.c        **** uint32 stopBuffer = 0;
  66:main.c        **** 
  67:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  68:main.c        **** 
  69:main.c        **** CY_ISR (speedTimer) {
 200              		.loc 1 69 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 6


 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  70:main.c        ****     timerInt = 1;
 213              		.loc 1 70 0
 214 0006 324B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  71:main.c        ****     //quadDec_M1 used for turning macros
  72:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 72 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 2F4B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  73:main.c        ****     
  74:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 74 0
 224 0018 2F4B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 0FD0     		beq	.L2
  75:main.c        ****         currentDirection == waitForTurn || 
 228              		.loc 1 75 0 discriminator 1
 229 0020 2D4B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == waitForTurn || 
 231              		.loc 1 74 0 discriminator 1
 232 0024 072B     		cmp	r3, #7
 233 0026 0BD0     		beq	.L2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 234              		.loc 1 76 0
 235 0028 2B4B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForTurn || 
 237              		.loc 1 75 0
 238 002c 0A2B     		cmp	r3, #10
 239 002e 07D0     		beq	.L2
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 240              		.loc 1 77 0
 241 0030 294B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 243              		.loc 1 76 0
 244 0034 032B     		cmp	r3, #3
 245 0036 03D0     		beq	.L2
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 246              		.loc 1 78 0
 247 0038 274B     		ldr	r3, .L4+24
 248 003a 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 249              		.loc 1 77 0
 250 003c 042B     		cmp	r3, #4
 251 003e 34D1     		bne	.L3
 252              	.L2:
  79:main.c        ****         quadDec2Count != 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 7


 253              		.loc 1 79 0
 254 0040 244B     		ldr	r3, .L4+20
 255 0042 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 256              		.loc 1 78 0
 257 0044 002B     		cmp	r3, #0
 258 0046 30D0     		beq	.L3
 259              	.LBB2:
  80:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  81:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 260              		.loc 1 81 0
 261 0048 224B     		ldr	r3, .L4+20
 262 004a 1B68     		ldr	r3, [r3]
 263 004c 002B     		cmp	r3, #0
 264 004e B8BF     		it	lt
 265 0050 5B42     		rsblt	r3, r3, #0
 266 0052 1846     		mov	r0, r3
 267 0054 FFF7FEFF 		bl	__aeabi_i2d
 268 0058 19A3     		adr	r3, .L4
 269 005a D3E90023 		ldrd	r2, [r3]
 270 005e FFF7FEFF 		bl	__aeabi_dmul
 271 0062 0346     		mov	r3, r0
 272 0064 0C46     		mov	r4, r1
 273 0066 1846     		mov	r0, r3
 274 0068 2146     		mov	r1, r4
 275 006a 17A3     		adr	r3, .L4+8
 276 006c D3E90023 		ldrd	r2, [r3]
 277 0070 FFF7FEFF 		bl	__aeabi_dmul
 278 0074 0346     		mov	r3, r0
 279 0076 0C46     		mov	r4, r1
 280 0078 1846     		mov	r0, r3
 281 007a 2146     		mov	r1, r4
 282 007c 4FF00002 		mov	r2, #0
 283 0080 164B     		ldr	r3, .L4+28
 284 0082 FFF7FEFF 		bl	__aeabi_ddiv
 285 0086 0346     		mov	r3, r0
 286 0088 0C46     		mov	r4, r1
 287 008a 1846     		mov	r0, r3
 288 008c 2146     		mov	r1, r4
 289 008e FFF7FEFF 		bl	__aeabi_d2f
 290 0092 0346     		mov	r3, r0
 291 0094 7B60     		str	r3, [r7, #4]	@ float
  82:main.c        ****         
  83:main.c        ****         totalDistance = totalDistance + newDistance;
 292              		.loc 1 83 0
 293 0096 124B     		ldr	r3, .L4+32
 294 0098 1B68     		ldr	r3, [r3]	@ float
 295 009a 7968     		ldr	r1, [r7, #4]	@ float
 296 009c 1846     		mov	r0, r3
 297 009e FFF7FEFF 		bl	__aeabi_fadd
 298 00a2 0346     		mov	r3, r0
 299 00a4 1A46     		mov	r2, r3
 300 00a6 0E4B     		ldr	r3, .L4+32
 301 00a8 1A60     		str	r2, [r3]	@ float
 302              	.L3:
 303              	.LBE2:
  84:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 8


  85:main.c        ****     
  86:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 304              		.loc 1 86 0
 305 00aa 0020     		movs	r0, #0
 306 00ac FFF7FEFF 		bl	QuadDec_M2_SetCounter
  87:main.c        ****     QuadDec_M2_Start(); // restart counter
 307              		.loc 1 87 0
 308 00b0 FFF7FEFF 		bl	QuadDec_M2_Start
  88:main.c        ****     
  89:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 309              		.loc 1 89 0
 310 00b4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  90:main.c        **** }
 311              		.loc 1 90 0
 312 00b8 00BF     		nop
 313 00ba 0C37     		adds	r7, r7, #12
 314              		.cfi_def_cfa_offset 12
 315 00bc BD46     		mov	sp, r7
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 00be 90BD     		pop	{r4, r7, pc}
 319              	.L5:
 320              		.align	3
 321              	.L4:
 322 00c0 182D4454 		.word	1413754136
 323 00c4 FB210940 		.word	1074340347
 324 00c8 00000000 		.word	0
 325 00cc 00205040 		.word	1078992896
 326 00d0 00000000 		.word	timerInt
 327 00d4 00000000 		.word	quadDec2Count
 328 00d8 00000000 		.word	currentDirection
 329 00dc 00806C40 		.word	1080852480
 330 00e0 00000000 		.word	totalDistance
 331              		.cfi_endproc
 332              	.LFE64:
 333              		.size	speedTimer, .-speedTimer
 334              		.section	.text.S3_DETECTED,"ax",%progbits
 335              		.align	2
 336              		.global	S3_DETECTED
 337              		.thumb
 338              		.thumb_func
 339              		.type	S3_DETECTED, %function
 340              	S3_DETECTED:
 341              	.LFB65:
  91:main.c        **** 
  92:main.c        **** CY_ISR(S3_DETECTED) {
 342              		.loc 1 92 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
  93:main.c        ****     // Sensor has detected WHITE
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 9


  94:main.c        ****     s3 = 1; // , Black = 0, White = 1
 352              		.loc 1 94 0
 353 0004 034B     		ldr	r3, .L7
 354 0006 0122     		movs	r2, #1
 355 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     //LED_Write(1u);
  96:main.c        **** }
 356              		.loc 1 96 0
 357 000a 00BF     		nop
 358 000c BD46     		mov	sp, r7
 359              		.cfi_def_cfa_register 13
 360              		@ sp needed
 361 000e 80BC     		pop	{r7}
 362              		.cfi_restore 7
 363              		.cfi_def_cfa_offset 0
 364 0010 7047     		bx	lr
 365              	.L8:
 366 0012 00BF     		.align	2
 367              	.L7:
 368 0014 00000000 		.word	s3
 369              		.cfi_endproc
 370              	.LFE65:
 371              		.size	S3_DETECTED, .-S3_DETECTED
 372              		.section	.text.S4_DETECTED,"ax",%progbits
 373              		.align	2
 374              		.global	S4_DETECTED
 375              		.thumb
 376              		.thumb_func
 377              		.type	S4_DETECTED, %function
 378              	S4_DETECTED:
 379              	.LFB66:
  97:main.c        **** 
  98:main.c        **** CY_ISR(S4_DETECTED) {
 380              		.loc 1 98 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
  99:main.c        ****     // Sensor has detected WHITE
 100:main.c        ****     s4 = 1; // , Black = 0, White = 1
 390              		.loc 1 100 0
 391 0004 034B     		ldr	r3, .L10
 392 0006 0122     		movs	r2, #1
 393 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     //LED_Write(1u);
 102:main.c        **** }
 394              		.loc 1 102 0
 395 000a 00BF     		nop
 396 000c BD46     		mov	sp, r7
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 10


 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 0010 7047     		bx	lr
 403              	.L11:
 404 0012 00BF     		.align	2
 405              	.L10:
 406 0014 00000000 		.word	s4
 407              		.cfi_endproc
 408              	.LFE66:
 409              		.size	S4_DETECTED, .-S4_DETECTED
 410              		.section	.text.S5_DETECTED,"ax",%progbits
 411              		.align	2
 412              		.global	S5_DETECTED
 413              		.thumb
 414              		.thumb_func
 415              		.type	S5_DETECTED, %function
 416              	S5_DETECTED:
 417              	.LFB67:
 103:main.c        **** 
 104:main.c        **** CY_ISR(S5_DETECTED) {
 418              		.loc 1 104 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423 0000 80B4     		push	{r7}
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 105:main.c        ****     // Sensor has detected WHITE
 106:main.c        ****     s5 = 1; // , Black = 0, White = 1
 428              		.loc 1 106 0
 429 0004 034B     		ldr	r3, .L13
 430 0006 0122     		movs	r2, #1
 431 0008 1A70     		strb	r2, [r3]
 107:main.c        ****     //LED_Write(1u);
 108:main.c        **** }
 432              		.loc 1 108 0
 433 000a 00BF     		nop
 434 000c BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 000e 80BC     		pop	{r7}
 438              		.cfi_restore 7
 439              		.cfi_def_cfa_offset 0
 440 0010 7047     		bx	lr
 441              	.L14:
 442 0012 00BF     		.align	2
 443              	.L13:
 444 0014 00000000 		.word	s5
 445              		.cfi_endproc
 446              	.LFE67:
 447              		.size	S5_DETECTED, .-S5_DETECTED
 448              		.section	.text.S6_DETECTED,"ax",%progbits
 449              		.align	2
 450              		.global	S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 11


 451              		.thumb
 452              		.thumb_func
 453              		.type	S6_DETECTED, %function
 454              	S6_DETECTED:
 455              	.LFB68:
 109:main.c        **** 
 110:main.c        **** CY_ISR(S6_DETECTED) {
 456              		.loc 1 110 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 7, -4
 464 0002 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 111:main.c        ****     // Sensor has detected WHITE
 112:main.c        ****     s6 = 1; // , Black = 0, White = 1
 466              		.loc 1 112 0
 467 0004 034B     		ldr	r3, .L16
 468 0006 0122     		movs	r2, #1
 469 0008 1A70     		strb	r2, [r3]
 113:main.c        ****     //LED_Write(1u);
 114:main.c        **** }
 470              		.loc 1 114 0
 471 000a 00BF     		nop
 472 000c BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 000e 80BC     		pop	{r7}
 476              		.cfi_restore 7
 477              		.cfi_def_cfa_offset 0
 478 0010 7047     		bx	lr
 479              	.L17:
 480 0012 00BF     		.align	2
 481              	.L16:
 482 0014 00000000 		.word	s6
 483              		.cfi_endproc
 484              	.LFE68:
 485              		.size	S6_DETECTED, .-S6_DETECTED
 486              		.section	.text.TIMER_FINISH,"ax",%progbits
 487              		.align	2
 488              		.global	TIMER_FINISH
 489              		.thumb
 490              		.thumb_func
 491              		.type	TIMER_FINISH, %function
 492              	TIMER_FINISH:
 493              	.LFB69:
 115:main.c        **** 
 116:main.c        **** CY_ISR(TIMER_FINISH) {
 494              		.loc 1 116 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 12


 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 117:main.c        ****     if (currentDirection == Stop) {
 504              		.loc 1 117 0
 505 0004 0A4B     		ldr	r3, .L21
 506 0006 1B68     		ldr	r3, [r3]
 507 0008 052B     		cmp	r3, #5
 508 000a 05D1     		bne	.L19
 118:main.c        ****         stopBuffer = stopBuffer + 1;
 509              		.loc 1 118 0
 510 000c 094B     		ldr	r3, .L21+4
 511 000e 1B68     		ldr	r3, [r3]
 512 0010 0133     		adds	r3, r3, #1
 513 0012 084A     		ldr	r2, .L21+4
 514 0014 1360     		str	r3, [r2]
 515 0016 02E0     		b	.L20
 516              	.L19:
 119:main.c        ****     } else {
 120:main.c        ****         stopBuffer = 0;
 517              		.loc 1 120 0
 518 0018 064B     		ldr	r3, .L21+4
 519 001a 0022     		movs	r2, #0
 520 001c 1A60     		str	r2, [r3]
 521              	.L20:
 121:main.c        ****     }
 122:main.c        ****     SetRobotMovement(); 
 522              		.loc 1 122 0
 523 001e FFF7FEFF 		bl	SetRobotMovement
 123:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 524              		.loc 1 123 0
 525 0022 FFF7FEFF 		bl	ResetSensorFlags
 124:main.c        ****     Timer_LED_ReadStatusRegister();
 526              		.loc 1 124 0
 527 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 125:main.c        **** }
 528              		.loc 1 125 0
 529 002a 00BF     		nop
 530 002c 80BD     		pop	{r7, pc}
 531              	.L22:
 532 002e 00BF     		.align	2
 533              	.L21:
 534 0030 00000000 		.word	currentDirection
 535 0034 00000000 		.word	stopBuffer
 536              		.cfi_endproc
 537              	.LFE69:
 538              		.size	TIMER_FINISH, .-TIMER_FINISH
 539              		.section	.text.main,"ax",%progbits
 540              		.align	2
 541              		.global	main
 542              		.thumb
 543              		.thumb_func
 544              		.type	main, %function
 545              	main:
 546              	.LFB70:
 126:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 13


 127:main.c        **** 
 128:main.c        **** int main()
 129:main.c        **** {
 547              		.loc 1 129 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 130:main.c        **** // ----- INITIALIZATIONS ----------
 131:main.c        ****     CYGlobalIntEnable;
 557              		.loc 1 131 0
 558              		.syntax unified
 559              	@ 131 "main.c" 1
 560 0004 62B6     		CPSIE   i
 561              	@ 0 "" 2
 132:main.c        ****     ResetSensorFlags();
 562              		.loc 1 132 0
 563              		.thumb
 564              		.syntax unified
 565 0006 FFF7FEFF 		bl	ResetSensorFlags
 133:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 566              		.loc 1 133 0
 567 000a FFF7FEFF 		bl	init
 134:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 568              		.loc 1 134 0
 569 000e 1A48     		ldr	r0, .L27
 570 0010 FFF7FEFF 		bl	isr_speed_StartEx
 135:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 571              		.loc 1 135 0
 572 0014 1948     		ldr	r0, .L27+4
 573 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 136:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 574              		.loc 1 136 0
 575 001a 1948     		ldr	r0, .L27+8
 576 001c FFF7FEFF 		bl	S3_detected_StartEx
 137:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 577              		.loc 1 137 0
 578 0020 1848     		ldr	r0, .L27+12
 579 0022 FFF7FEFF 		bl	S4_detected_StartEx
 138:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 580              		.loc 1 138 0
 581 0026 1848     		ldr	r0, .L27+16
 582 0028 FFF7FEFF 		bl	S5_detected_StartEx
 139:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 583              		.loc 1 139 0
 584 002c 1748     		ldr	r0, .L27+20
 585 002e FFF7FEFF 		bl	S6_detected_StartEx
 140:main.c        ****     Timer_LED_Start();
 586              		.loc 1 140 0
 587 0032 FFF7FEFF 		bl	Timer_LED_Start
 141:main.c        **** 
 142:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 14


 588              		.loc 1 142 0
 589 0036 1648     		ldr	r0, .L27+24
 590 0038 FFF7FEFF 		bl	findPath
 143:main.c        ****     GetNextStep();
 591              		.loc 1 143 0
 592 003c FFF7FEFF 		bl	GetNextStep
 144:main.c        **** 
 145:main.c        **** // ------USB SETUP ----------------    
 146:main.c        **** #ifdef USE_USB    
 147:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 593              		.loc 1 147 0
 594 0040 0121     		movs	r1, #1
 595 0042 0020     		movs	r0, #0
 596 0044 FFF7FEFF 		bl	USBUART_Start
 148:main.c        **** #endif        
 149:main.c        ****     RF_BT_SELECT_Write(0);
 597              		.loc 1 149 0
 598 0048 0020     		movs	r0, #0
 599 004a FFF7FEFF 		bl	RF_BT_SELECT_Write
 600              	.L26:
 150:main.c        ****     
 151:main.c        ****     //usbPutString("Initialised UART");
 152:main.c        ****     for(;;)
 153:main.c        ****     {
 154:main.c        ****         if(timerInt == 1) {
 601              		.loc 1 154 0
 602 004e 114B     		ldr	r3, .L27+28
 603 0050 1B68     		ldr	r3, [r3]
 604 0052 012B     		cmp	r3, #1
 605 0054 08D1     		bne	.L24
 155:main.c        ****             timerInt = 0;
 606              		.loc 1 155 0
 607 0056 0F4B     		ldr	r3, .L27+28
 608 0058 0022     		movs	r2, #0
 609 005a 1A60     		str	r2, [r3]
 156:main.c        ****             // calculate RPM of M2
 157:main.c        ****             quadCountToRPM(quadDec2Count);
 610              		.loc 1 157 0
 611 005c 0E4B     		ldr	r3, .L27+32
 612 005e 1B68     		ldr	r3, [r3]
 613 0060 9BB2     		uxth	r3, r3
 614 0062 1846     		mov	r0, r3
 615 0064 FFF7FEFF 		bl	quadCountToRPM
 616              	.L24:
 158:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 159:main.c        ****             //usbPutString(buffer);
 160:main.c        ****             //usbPutString(" ");
 161:main.c        ****         }
 162:main.c        ****         //handle_usb();
 163:main.c        ****         if (flag_KB_string == 1)
 617              		.loc 1 163 0
 618 0068 0C4B     		ldr	r3, .L27+36
 619 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 620 006c 012B     		cmp	r3, #1
 621 006e EED1     		bne	.L26
 164:main.c        ****         {
 165:main.c        ****             //usbPutString("Total Distance: ");
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 15


 166:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 167:main.c        ****             //usbPutString(buffer);
 168:main.c        ****             flag_KB_string = 0;
 622              		.loc 1 168 0
 623 0070 0A4B     		ldr	r3, .L27+36
 624 0072 0022     		movs	r2, #0
 625 0074 1A70     		strb	r2, [r3]
 169:main.c        ****         }           
 170:main.c        ****     }
 626              		.loc 1 170 0
 627 0076 EAE7     		b	.L26
 628              	.L28:
 629              		.align	2
 630              	.L27:
 631 0078 00000000 		.word	speedTimer
 632 007c 00000000 		.word	TIMER_FINISH
 633 0080 00000000 		.word	S3_DETECTED
 634 0084 00000000 		.word	S4_DETECTED
 635 0088 00000000 		.word	S5_DETECTED
 636 008c 00000000 		.word	S6_DETECTED
 637 0090 00000000 		.word	map
 638 0094 00000000 		.word	timerInt
 639 0098 00000000 		.word	quadDec2Count
 640 009c 00000000 		.word	flag_KB_string
 641              		.cfi_endproc
 642              	.LFE70:
 643              		.size	main, .-main
 644              		.global	__aeabi_fmul
 645              		.global	__aeabi_f2iz
 646              		.section	.text.quadCountToRPM,"ax",%progbits
 647              		.align	2
 648              		.global	quadCountToRPM
 649              		.thumb
 650              		.thumb_func
 651              		.type	quadCountToRPM, %function
 652              	quadCountToRPM:
 653              	.LFB71:
 171:main.c        ****     return 0;
 172:main.c        **** }
 173:main.c        **** 
 174:main.c        **** // Calculations
 175:main.c        **** //* ========================================
 176:main.c        **** int16 quadCountToRPM(uint16 count)
 177:main.c        **** {
 654              		.loc 1 177 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 16
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658 0000 90B5     		push	{r4, r7, lr}
 659              		.cfi_def_cfa_offset 12
 660              		.cfi_offset 4, -12
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 85B0     		sub	sp, sp, #20
 664              		.cfi_def_cfa_offset 32
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 16


 667 0006 0346     		mov	r3, r0
 668 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 178:main.c        ****     float cps = count/57.00;
 669              		.loc 1 178 0
 670 000a FB88     		ldrh	r3, [r7, #6]
 671 000c 1846     		mov	r0, r3
 672 000e FFF7FEFF 		bl	__aeabi_i2d
 673 0012 4FF00002 		mov	r2, #0
 674 0016 0D4B     		ldr	r3, .L31
 675 0018 FFF7FEFF 		bl	__aeabi_ddiv
 676 001c 0346     		mov	r3, r0
 677 001e 0C46     		mov	r4, r1
 678 0020 1846     		mov	r0, r3
 679 0022 2146     		mov	r1, r4
 680 0024 FFF7FEFF 		bl	__aeabi_d2f
 681 0028 0346     		mov	r3, r0
 682 002a FB60     		str	r3, [r7, #12]	@ float
 179:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 683              		.loc 1 179 0
 684 002c 0849     		ldr	r1, .L31+4
 685 002e F868     		ldr	r0, [r7, #12]	@ float
 686 0030 FFF7FEFF 		bl	__aeabi_fmul
 687 0034 0346     		mov	r3, r0
 688 0036 1846     		mov	r0, r3
 689 0038 FFF7FEFF 		bl	__aeabi_f2iz
 690 003c 0346     		mov	r3, r0
 691 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 180:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 181:main.c        ****     return rpm;
 692              		.loc 1 181 0
 693 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 182:main.c        ****     //usbPutString(buffer);
 183:main.c        ****     //usbPutString("rpm ");
 184:main.c        **** }
 694              		.loc 1 184 0
 695 0044 1846     		mov	r0, r3
 696 0046 1437     		adds	r7, r7, #20
 697              		.cfi_def_cfa_offset 12
 698 0048 BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 004a 90BD     		pop	{r4, r7, pc}
 702              	.L32:
 703              		.align	2
 704              	.L31:
 705 004c 00804C40 		.word	1078755328
 706 0050 00007041 		.word	1097859072
 707              		.cfi_endproc
 708              	.LFE71:
 709              		.size	quadCountToRPM, .-quadCountToRPM
 710              		.section	.text.ResetSensorFlags,"ax",%progbits
 711              		.align	2
 712              		.global	ResetSensorFlags
 713              		.thumb
 714              		.thumb_func
 715              		.type	ResetSensorFlags, %function
 716              	ResetSensorFlags:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 17


 717              	.LFB72:
 185:main.c        **** 
 186:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 187:main.c        **** void ResetSensorFlags() {
 718              		.loc 1 187 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 188:main.c        ****     s3 = 0;
 728              		.loc 1 188 0
 729 0004 074B     		ldr	r3, .L34
 730 0006 0022     		movs	r2, #0
 731 0008 1A70     		strb	r2, [r3]
 189:main.c        ****     s4 = 0;
 732              		.loc 1 189 0
 733 000a 074B     		ldr	r3, .L34+4
 734 000c 0022     		movs	r2, #0
 735 000e 1A70     		strb	r2, [r3]
 190:main.c        ****     s5 = 0;
 736              		.loc 1 190 0
 737 0010 064B     		ldr	r3, .L34+8
 738 0012 0022     		movs	r2, #0
 739 0014 1A70     		strb	r2, [r3]
 191:main.c        ****     s6 = 0;
 740              		.loc 1 191 0
 741 0016 064B     		ldr	r3, .L34+12
 742 0018 0022     		movs	r2, #0
 743 001a 1A70     		strb	r2, [r3]
 192:main.c        **** }
 744              		.loc 1 192 0
 745 001c 00BF     		nop
 746 001e BD46     		mov	sp, r7
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 0020 80BC     		pop	{r7}
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 0022 7047     		bx	lr
 753              	.L35:
 754              		.align	2
 755              	.L34:
 756 0024 00000000 		.word	s3
 757 0028 00000000 		.word	s4
 758 002c 00000000 		.word	s5
 759 0030 00000000 		.word	s6
 760              		.cfi_endproc
 761              	.LFE72:
 762              		.size	ResetSensorFlags, .-ResetSensorFlags
 763              		.global	yBlocksize
 764              		.data
 765 004e 0000     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 18


 766              		.type	yBlocksize, %object
 767              		.size	yBlocksize, 4
 768              	yBlocksize:
 769 0050 0000FF42 		.word	1124007936
 770              		.global	xBlocksize
 771              		.align	2
 772              		.type	xBlocksize, %object
 773              		.size	xBlocksize, 4
 774              	xBlocksize:
 775 0054 0000B942 		.word	1119420416
 776              		.global	currentRow
 777              		.type	currentRow, %object
 778              		.size	currentRow, 1
 779              	currentRow:
 780 0058 01       		.byte	1
 781              		.global	currentCol
 782              		.type	currentCol, %object
 783              		.size	currentCol, 1
 784              	currentCol:
 785 0059 01       		.byte	1
 786              		.section	.text.GetNextStep,"ax",%progbits
 787              		.align	2
 788              		.global	GetNextStep
 789              		.thumb
 790              		.thumb_func
 791              		.type	GetNextStep, %function
 792              	GetNextStep:
 793              	.LFB73:
 193:main.c        **** 
 194:main.c        **** float yBlocksize = 127.5;
 195:main.c        **** float xBlocksize = 92.5;
 196:main.c        **** uint8 currentRow = 1;
 197:main.c        **** uint8 currentCol = 1;
 198:main.c        **** 
 199:main.c        **** enum DirectionState GetNextStep() {
 794              		.loc 1 199 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 80B4     		push	{r7}
 800              		.cfi_def_cfa_offset 4
 801              		.cfi_offset 7, -4
 802 0002 83B0     		sub	sp, sp, #12
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              		.cfi_def_cfa_register 7
 200:main.c        ****     enum DirectionState directionState;
 201:main.c        ****     // Determines robot movement and orientation to follow optimal path
 202:main.c        ****     // enum DirectionState directionState = Stop;
 203:main.c        ****     previousOrientation = currentOrientation;
 806              		.loc 1 203 0
 807 0006 AA4B     		ldr	r3, .L75
 808 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 809 000a AA4B     		ldr	r3, .L75+4
 810 000c 1A70     		strb	r2, [r3]
 204:main.c        ****     
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 19


 205:main.c        ****     if(map[currentRow][currentCol] == 9) {
 811              		.loc 1 205 0
 812 000e AA4B     		ldr	r3, .L75+8
 813 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 814 0012 1A46     		mov	r2, r3
 815 0014 A94B     		ldr	r3, .L75+12
 816 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 817 0018 1846     		mov	r0, r3
 818 001a A949     		ldr	r1, .L75+16
 819 001c 1346     		mov	r3, r2
 820 001e DB00     		lsls	r3, r3, #3
 821 0020 1344     		add	r3, r3, r2
 822 0022 5B00     		lsls	r3, r3, #1
 823 0024 1344     		add	r3, r3, r2
 824 0026 0344     		add	r3, r3, r0
 825 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 826 002c 092B     		cmp	r3, #9
 827 002e 03D1     		bne	.L37
 206:main.c        ****         directionState = Stop; 
 828              		.loc 1 206 0
 829 0030 0523     		movs	r3, #5
 830 0032 7B60     		str	r3, [r7, #4]
 207:main.c        ****         return directionState;
 831              		.loc 1 207 0
 832 0034 7B68     		ldr	r3, [r7, #4]
 833 0036 20E2     		b	.L38
 834              	.L37:
 208:main.c        ****     }
 209:main.c        ****     /*
 210:main.c        ****     if (totalDistance >= (yBlocksize)) {
 211:main.c        ****         directionState = Stop;
 212:main.c        ****         return directionState;
 213:main.c        ****     }
 214:main.c        ****     */
 215:main.c        ****         
 216:main.c        ****     switch (previousOrientation) {
 835              		.loc 1 216 0
 836 0038 9E4B     		ldr	r3, .L75+4
 837 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 838 003c 032B     		cmp	r3, #3
 839 003e 00F21282 		bhi	.L70
 840 0042 01A2     		adr	r2, .L41
 841 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 842              		.p2align 2
 843              	.L41:
 844 0048 59000000 		.word	.L40+1
 845 004c 59010000 		.word	.L42+1
 846 0050 55020000 		.word	.L43+1
 847 0054 69030000 		.word	.L44+1
 848              		.p2align 1
 849              	.L40:
 217:main.c        ****             case Up:
 218:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 850              		.loc 1 218 0
 851 0058 974B     		ldr	r3, .L75+8
 852 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 853 005c 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 20


 854 005e 974B     		ldr	r3, .L75+12
 855 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 856 0062 1846     		mov	r0, r3
 857 0064 9649     		ldr	r1, .L75+16
 858 0066 1346     		mov	r3, r2
 859 0068 DB00     		lsls	r3, r3, #3
 860 006a 1344     		add	r3, r3, r2
 861 006c 5B00     		lsls	r3, r3, #1
 862 006e 1344     		add	r3, r3, r2
 863 0070 0344     		add	r3, r3, r0
 864 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 865 0076 082B     		cmp	r3, #8
 866 0078 10D0     		beq	.L45
 867              		.loc 1 218 0 is_stmt 0 discriminator 1
 868 007a 8F4B     		ldr	r3, .L75+8
 869 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 870 007e 5A1E     		subs	r2, r3, #1
 871 0080 8E4B     		ldr	r3, .L75+12
 872 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 0084 1846     		mov	r0, r3
 874 0086 8E49     		ldr	r1, .L75+16
 875 0088 1346     		mov	r3, r2
 876 008a DB00     		lsls	r3, r3, #3
 877 008c 1344     		add	r3, r3, r2
 878 008e 5B00     		lsls	r3, r3, #1
 879 0090 1344     		add	r3, r3, r2
 880 0092 0344     		add	r3, r3, r0
 881 0094 51F82330 		ldr	r3, [r1, r3, lsl #2]
 882 0098 092B     		cmp	r3, #9
 883 009a 0BD1     		bne	.L46
 884              	.L45:
 219:main.c        ****                     currentOrientation = Up; 
 885              		.loc 1 219 0 is_stmt 1
 886 009c 844B     		ldr	r3, .L75
 887 009e 0022     		movs	r2, #0
 888 00a0 1A70     		strb	r2, [r3]
 220:main.c        ****                     directionState = Forward;
 889              		.loc 1 220 0
 890 00a2 0023     		movs	r3, #0
 891 00a4 7B60     		str	r3, [r7, #4]
 221:main.c        ****                     currentRow--;// update position
 892              		.loc 1 221 0
 893 00a6 844B     		ldr	r3, .L75+8
 894 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 00aa 013B     		subs	r3, r3, #1
 896 00ac DAB2     		uxtb	r2, r3
 897 00ae 824B     		ldr	r3, .L75+8
 898 00b0 1A70     		strb	r2, [r3]
 899 00b2 50E0     		b	.L47
 900              	.L46:
 222:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 901              		.loc 1 222 0
 902 00b4 804B     		ldr	r3, .L75+8
 903 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 00b8 1A46     		mov	r2, r3
 905 00ba 804B     		ldr	r3, .L75+12
 906 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 21


 907 00be 591E     		subs	r1, r3, #1
 908 00c0 7F48     		ldr	r0, .L75+16
 909 00c2 1346     		mov	r3, r2
 910 00c4 DB00     		lsls	r3, r3, #3
 911 00c6 1344     		add	r3, r3, r2
 912 00c8 5B00     		lsls	r3, r3, #1
 913 00ca 1344     		add	r3, r3, r2
 914 00cc 0B44     		add	r3, r3, r1
 915 00ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 916 00d2 082B     		cmp	r3, #8
 917 00d4 10D0     		beq	.L48
 918              		.loc 1 222 0 is_stmt 0 discriminator 1
 919 00d6 784B     		ldr	r3, .L75+8
 920 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 921 00da 1A46     		mov	r2, r3
 922 00dc 774B     		ldr	r3, .L75+12
 923 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 924 00e0 591E     		subs	r1, r3, #1
 925 00e2 7748     		ldr	r0, .L75+16
 926 00e4 1346     		mov	r3, r2
 927 00e6 DB00     		lsls	r3, r3, #3
 928 00e8 1344     		add	r3, r3, r2
 929 00ea 5B00     		lsls	r3, r3, #1
 930 00ec 1344     		add	r3, r3, r2
 931 00ee 0B44     		add	r3, r3, r1
 932 00f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 933 00f4 092B     		cmp	r3, #9
 934 00f6 05D1     		bne	.L49
 935              	.L48:
 223:main.c        ****                     currentOrientation = Left;
 936              		.loc 1 223 0 is_stmt 1
 937 00f8 6D4B     		ldr	r3, .L75
 938 00fa 0222     		movs	r2, #2
 939 00fc 1A70     		strb	r2, [r3]
 224:main.c        ****                     directionState = TurnLeft;
 940              		.loc 1 224 0
 941 00fe 0223     		movs	r3, #2
 942 0100 7B60     		str	r3, [r7, #4]
 943 0102 28E0     		b	.L47
 944              	.L49:
 225:main.c        ****                     //currentRow--;
 226:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 945              		.loc 1 226 0
 946 0104 6C4B     		ldr	r3, .L75+8
 947 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 948 0108 1A46     		mov	r2, r3
 949 010a 6C4B     		ldr	r3, .L75+12
 950 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 010e 591C     		adds	r1, r3, #1
 952 0110 6B48     		ldr	r0, .L75+16
 953 0112 1346     		mov	r3, r2
 954 0114 DB00     		lsls	r3, r3, #3
 955 0116 1344     		add	r3, r3, r2
 956 0118 5B00     		lsls	r3, r3, #1
 957 011a 1344     		add	r3, r3, r2
 958 011c 0B44     		add	r3, r3, r1
 959 011e 50F82330 		ldr	r3, [r0, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 22


 960 0122 082B     		cmp	r3, #8
 961 0124 11D0     		beq	.L50
 962              		.loc 1 226 0 is_stmt 0 discriminator 1
 963 0126 644B     		ldr	r3, .L75+8
 964 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 965 012a 1A46     		mov	r2, r3
 966 012c 634B     		ldr	r3, .L75+12
 967 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 0130 591C     		adds	r1, r3, #1
 969 0132 6348     		ldr	r0, .L75+16
 970 0134 1346     		mov	r3, r2
 971 0136 DB00     		lsls	r3, r3, #3
 972 0138 1344     		add	r3, r3, r2
 973 013a 5B00     		lsls	r3, r3, #1
 974 013c 1344     		add	r3, r3, r2
 975 013e 0B44     		add	r3, r3, r1
 976 0140 50F82330 		ldr	r3, [r0, r3, lsl #2]
 977 0144 092B     		cmp	r3, #9
 978 0146 40F09081 		bne	.L71
 979              	.L50:
 227:main.c        ****                     currentOrientation = Right;
 980              		.loc 1 227 0 is_stmt 1
 981 014a 594B     		ldr	r3, .L75
 982 014c 0322     		movs	r2, #3
 983 014e 1A70     		strb	r2, [r3]
 228:main.c        ****                     directionState = TurnRight;
 984              		.loc 1 228 0
 985 0150 0123     		movs	r3, #1
 986 0152 7B60     		str	r3, [r7, #4]
 229:main.c        ****                     //currentRow++; // update position
 230:main.c        ****                 }
 231:main.c        ****                 break;
 987              		.loc 1 231 0
 988 0154 89E1     		b	.L71
 989              	.L47:
 990 0156 88E1     		b	.L71
 991              	.L42:
 232:main.c        ****             case Down:
 233:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 992              		.loc 1 233 0
 993 0158 574B     		ldr	r3, .L75+8
 994 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995 015c 5A1C     		adds	r2, r3, #1
 996 015e 574B     		ldr	r3, .L75+12
 997 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 998 0162 1846     		mov	r0, r3
 999 0164 5649     		ldr	r1, .L75+16
 1000 0166 1346     		mov	r3, r2
 1001 0168 DB00     		lsls	r3, r3, #3
 1002 016a 1344     		add	r3, r3, r2
 1003 016c 5B00     		lsls	r3, r3, #1
 1004 016e 1344     		add	r3, r3, r2
 1005 0170 0344     		add	r3, r3, r0
 1006 0172 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1007 0176 082B     		cmp	r3, #8
 1008 0178 10D0     		beq	.L52
 1009              		.loc 1 233 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 23


 1010 017a 4F4B     		ldr	r3, .L75+8
 1011 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1012 017e 5A1C     		adds	r2, r3, #1
 1013 0180 4E4B     		ldr	r3, .L75+12
 1014 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 0184 1846     		mov	r0, r3
 1016 0186 4E49     		ldr	r1, .L75+16
 1017 0188 1346     		mov	r3, r2
 1018 018a DB00     		lsls	r3, r3, #3
 1019 018c 1344     		add	r3, r3, r2
 1020 018e 5B00     		lsls	r3, r3, #1
 1021 0190 1344     		add	r3, r3, r2
 1022 0192 0344     		add	r3, r3, r0
 1023 0194 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1024 0198 092B     		cmp	r3, #9
 1025 019a 0BD1     		bne	.L53
 1026              	.L52:
 234:main.c        ****                     currentOrientation = Down;
 1027              		.loc 1 234 0 is_stmt 1
 1028 019c 444B     		ldr	r3, .L75
 1029 019e 0122     		movs	r2, #1
 1030 01a0 1A70     		strb	r2, [r3]
 235:main.c        ****                     directionState = Forward;
 1031              		.loc 1 235 0
 1032 01a2 0023     		movs	r3, #0
 1033 01a4 7B60     		str	r3, [r7, #4]
 236:main.c        ****                     currentRow++;
 1034              		.loc 1 236 0
 1035 01a6 444B     		ldr	r3, .L75+8
 1036 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 01aa 0133     		adds	r3, r3, #1
 1038 01ac DAB2     		uxtb	r2, r3
 1039 01ae 424B     		ldr	r3, .L75+8
 1040 01b0 1A70     		strb	r2, [r3]
 1041 01b2 4EE0     		b	.L54
 1042              	.L53:
 237:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 1043              		.loc 1 237 0
 1044 01b4 404B     		ldr	r3, .L75+8
 1045 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1046 01b8 1A46     		mov	r2, r3
 1047 01ba 404B     		ldr	r3, .L75+12
 1048 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 01be 591E     		subs	r1, r3, #1
 1050 01c0 3F48     		ldr	r0, .L75+16
 1051 01c2 1346     		mov	r3, r2
 1052 01c4 DB00     		lsls	r3, r3, #3
 1053 01c6 1344     		add	r3, r3, r2
 1054 01c8 5B00     		lsls	r3, r3, #1
 1055 01ca 1344     		add	r3, r3, r2
 1056 01cc 0B44     		add	r3, r3, r1
 1057 01ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1058 01d2 082B     		cmp	r3, #8
 1059 01d4 10D0     		beq	.L55
 1060              		.loc 1 237 0 is_stmt 0 discriminator 1
 1061 01d6 384B     		ldr	r3, .L75+8
 1062 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 24


 1063 01da 1A46     		mov	r2, r3
 1064 01dc 374B     		ldr	r3, .L75+12
 1065 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 01e0 591E     		subs	r1, r3, #1
 1067 01e2 3748     		ldr	r0, .L75+16
 1068 01e4 1346     		mov	r3, r2
 1069 01e6 DB00     		lsls	r3, r3, #3
 1070 01e8 1344     		add	r3, r3, r2
 1071 01ea 5B00     		lsls	r3, r3, #1
 1072 01ec 1344     		add	r3, r3, r2
 1073 01ee 0B44     		add	r3, r3, r1
 1074 01f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1075 01f4 092B     		cmp	r3, #9
 1076 01f6 05D1     		bne	.L56
 1077              	.L55:
 238:main.c        ****                     currentOrientation = Right;
 1078              		.loc 1 238 0 is_stmt 1
 1079 01f8 2D4B     		ldr	r3, .L75
 1080 01fa 0322     		movs	r2, #3
 1081 01fc 1A70     		strb	r2, [r3]
 239:main.c        ****                     directionState = TurnRight;
 1082              		.loc 1 239 0
 1083 01fe 0123     		movs	r3, #1
 1084 0200 7B60     		str	r3, [r7, #4]
 1085 0202 26E0     		b	.L54
 1086              	.L56:
 240:main.c        ****                     //currentRow--;
 241:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 1087              		.loc 1 241 0
 1088 0204 2C4B     		ldr	r3, .L75+8
 1089 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1090 0208 1A46     		mov	r2, r3
 1091 020a 2C4B     		ldr	r3, .L75+12
 1092 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 020e 591C     		adds	r1, r3, #1
 1094 0210 2B48     		ldr	r0, .L75+16
 1095 0212 1346     		mov	r3, r2
 1096 0214 DB00     		lsls	r3, r3, #3
 1097 0216 1344     		add	r3, r3, r2
 1098 0218 5B00     		lsls	r3, r3, #1
 1099 021a 1344     		add	r3, r3, r2
 1100 021c 0B44     		add	r3, r3, r1
 1101 021e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1102 0222 082B     		cmp	r3, #8
 1103 0224 11D0     		beq	.L57
 1104              		.loc 1 241 0 is_stmt 0 discriminator 1
 1105 0226 244B     		ldr	r3, .L75+8
 1106 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 022a 1A46     		mov	r2, r3
 1108 022c 234B     		ldr	r3, .L75+12
 1109 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1110 0230 591C     		adds	r1, r3, #1
 1111 0232 2348     		ldr	r0, .L75+16
 1112 0234 1346     		mov	r3, r2
 1113 0236 DB00     		lsls	r3, r3, #3
 1114 0238 1344     		add	r3, r3, r2
 1115 023a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 25


 1116 023c 1344     		add	r3, r3, r2
 1117 023e 0B44     		add	r3, r3, r1
 1118 0240 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1119 0244 092B     		cmp	r3, #9
 1120 0246 40F01281 		bne	.L72
 1121              	.L57:
 242:main.c        ****                     currentOrientation = Left;
 1122              		.loc 1 242 0 is_stmt 1
 1123 024a 194B     		ldr	r3, .L75
 1124 024c 0222     		movs	r2, #2
 1125 024e 1A70     		strb	r2, [r3]
 243:main.c        ****                     //directionState = TurnLeft;
 244:main.c        ****                     //currentRow++; // update position
 245:main.c        ****                 }
 246:main.c        ****                 break;
 1126              		.loc 1 246 0
 1127 0250 0DE1     		b	.L72
 1128              	.L54:
 1129 0252 0CE1     		b	.L72
 1130              	.L43:
 247:main.c        ****             case Left:
 248:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 1131              		.loc 1 248 0
 1132 0254 184B     		ldr	r3, .L75+8
 1133 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1134 0258 1A46     		mov	r2, r3
 1135 025a 184B     		ldr	r3, .L75+12
 1136 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 025e 591E     		subs	r1, r3, #1
 1138 0260 1748     		ldr	r0, .L75+16
 1139 0262 1346     		mov	r3, r2
 1140 0264 DB00     		lsls	r3, r3, #3
 1141 0266 1344     		add	r3, r3, r2
 1142 0268 5B00     		lsls	r3, r3, #1
 1143 026a 1344     		add	r3, r3, r2
 1144 026c 0B44     		add	r3, r3, r1
 1145 026e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1146 0272 082B     		cmp	r3, #8
 1147 0274 10D0     		beq	.L58
 1148              		.loc 1 248 0 is_stmt 0 discriminator 1
 1149 0276 104B     		ldr	r3, .L75+8
 1150 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 027a 1A46     		mov	r2, r3
 1152 027c 0F4B     		ldr	r3, .L75+12
 1153 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1154 0280 591E     		subs	r1, r3, #1
 1155 0282 0F48     		ldr	r0, .L75+16
 1156 0284 1346     		mov	r3, r2
 1157 0286 DB00     		lsls	r3, r3, #3
 1158 0288 1344     		add	r3, r3, r2
 1159 028a 5B00     		lsls	r3, r3, #1
 1160 028c 1344     		add	r3, r3, r2
 1161 028e 0B44     		add	r3, r3, r1
 1162 0290 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1163 0294 092B     		cmp	r3, #9
 1164 0296 15D1     		bne	.L59
 1165              	.L58:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 26


 249:main.c        ****                     currentOrientation = Left;
 1166              		.loc 1 249 0 is_stmt 1
 1167 0298 054B     		ldr	r3, .L75
 1168 029a 0222     		movs	r2, #2
 1169 029c 1A70     		strb	r2, [r3]
 250:main.c        ****                     directionState = Forward;
 1170              		.loc 1 250 0
 1171 029e 0023     		movs	r3, #0
 1172 02a0 7B60     		str	r3, [r7, #4]
 251:main.c        ****                     currentCol--; // update position
 1173              		.loc 1 251 0
 1174 02a2 064B     		ldr	r3, .L75+12
 1175 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 02a6 013B     		subs	r3, r3, #1
 1177 02a8 DAB2     		uxtb	r2, r3
 1178 02aa 044B     		ldr	r3, .L75+12
 1179 02ac 1A70     		strb	r2, [r3]
 1180 02ae 5AE0     		b	.L60
 1181              	.L76:
 1182              		.align	2
 1183              	.L75:
 1184 02b0 00000000 		.word	currentOrientation
 1185 02b4 00000000 		.word	previousOrientation
 1186 02b8 00000000 		.word	currentRow
 1187 02bc 00000000 		.word	currentCol
 1188 02c0 00000000 		.word	map
 1189              	.L59:
 252:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1190              		.loc 1 252 0
 1191 02c4 6F4B     		ldr	r3, .L77
 1192 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 02c8 5A1E     		subs	r2, r3, #1
 1194 02ca 6F4B     		ldr	r3, .L77+4
 1195 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 02ce 1846     		mov	r0, r3
 1197 02d0 6E49     		ldr	r1, .L77+8
 1198 02d2 1346     		mov	r3, r2
 1199 02d4 DB00     		lsls	r3, r3, #3
 1200 02d6 1344     		add	r3, r3, r2
 1201 02d8 5B00     		lsls	r3, r3, #1
 1202 02da 1344     		add	r3, r3, r2
 1203 02dc 0344     		add	r3, r3, r0
 1204 02de 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1205 02e2 082B     		cmp	r3, #8
 1206 02e4 10D0     		beq	.L61
 1207              		.loc 1 252 0 is_stmt 0 discriminator 1
 1208 02e6 674B     		ldr	r3, .L77
 1209 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1210 02ea 5A1E     		subs	r2, r3, #1
 1211 02ec 664B     		ldr	r3, .L77+4
 1212 02ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 02f0 1846     		mov	r0, r3
 1214 02f2 6649     		ldr	r1, .L77+8
 1215 02f4 1346     		mov	r3, r2
 1216 02f6 DB00     		lsls	r3, r3, #3
 1217 02f8 1344     		add	r3, r3, r2
 1218 02fa 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 27


 1219 02fc 1344     		add	r3, r3, r2
 1220 02fe 0344     		add	r3, r3, r0
 1221 0300 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1222 0304 092B     		cmp	r3, #9
 1223 0306 05D1     		bne	.L62
 1224              	.L61:
 253:main.c        ****                     currentOrientation = Up;
 1225              		.loc 1 253 0 is_stmt 1
 1226 0308 614B     		ldr	r3, .L77+12
 1227 030a 0022     		movs	r2, #0
 1228 030c 1A70     		strb	r2, [r3]
 254:main.c        ****                     directionState = TurnRight;
 1229              		.loc 1 254 0
 1230 030e 0123     		movs	r3, #1
 1231 0310 7B60     		str	r3, [r7, #4]
 1232 0312 28E0     		b	.L60
 1233              	.L62:
 255:main.c        ****                     //currentRow++; // update position
 256:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1234              		.loc 1 256 0
 1235 0314 5B4B     		ldr	r3, .L77
 1236 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0318 5A1C     		adds	r2, r3, #1
 1238 031a 5B4B     		ldr	r3, .L77+4
 1239 031c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1240 031e 1846     		mov	r0, r3
 1241 0320 5A49     		ldr	r1, .L77+8
 1242 0322 1346     		mov	r3, r2
 1243 0324 DB00     		lsls	r3, r3, #3
 1244 0326 1344     		add	r3, r3, r2
 1245 0328 5B00     		lsls	r3, r3, #1
 1246 032a 1344     		add	r3, r3, r2
 1247 032c 0344     		add	r3, r3, r0
 1248 032e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1249 0332 082B     		cmp	r3, #8
 1250 0334 11D0     		beq	.L63
 1251              		.loc 1 256 0 is_stmt 0 discriminator 1
 1252 0336 534B     		ldr	r3, .L77
 1253 0338 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 033a 5A1C     		adds	r2, r3, #1
 1255 033c 524B     		ldr	r3, .L77+4
 1256 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 0340 1846     		mov	r0, r3
 1258 0342 5249     		ldr	r1, .L77+8
 1259 0344 1346     		mov	r3, r2
 1260 0346 DB00     		lsls	r3, r3, #3
 1261 0348 1344     		add	r3, r3, r2
 1262 034a 5B00     		lsls	r3, r3, #1
 1263 034c 1344     		add	r3, r3, r2
 1264 034e 0344     		add	r3, r3, r0
 1265 0350 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1266 0354 092B     		cmp	r3, #9
 1267 0356 40F08C80 		bne	.L73
 1268              	.L63:
 257:main.c        ****                     currentOrientation = Down;
 1269              		.loc 1 257 0 is_stmt 1
 1270 035a 4D4B     		ldr	r3, .L77+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 28


 1271 035c 0122     		movs	r2, #1
 1272 035e 1A70     		strb	r2, [r3]
 258:main.c        ****                     directionState = TurnLeft;
 1273              		.loc 1 258 0
 1274 0360 0223     		movs	r3, #2
 1275 0362 7B60     		str	r3, [r7, #4]
 259:main.c        ****                     //currentCol--; // update position
 260:main.c        ****                 }
 261:main.c        ****                 break;
 1276              		.loc 1 261 0
 1277 0364 85E0     		b	.L73
 1278              	.L60:
 1279 0366 84E0     		b	.L73
 1280              	.L44:
 262:main.c        ****             case Right:
 263:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 1281              		.loc 1 263 0
 1282 0368 464B     		ldr	r3, .L77
 1283 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 036c 1A46     		mov	r2, r3
 1285 036e 464B     		ldr	r3, .L77+4
 1286 0370 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1287 0372 591C     		adds	r1, r3, #1
 1288 0374 4548     		ldr	r0, .L77+8
 1289 0376 1346     		mov	r3, r2
 1290 0378 DB00     		lsls	r3, r3, #3
 1291 037a 1344     		add	r3, r3, r2
 1292 037c 5B00     		lsls	r3, r3, #1
 1293 037e 1344     		add	r3, r3, r2
 1294 0380 0B44     		add	r3, r3, r1
 1295 0382 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1296 0386 082B     		cmp	r3, #8
 1297 0388 10D0     		beq	.L64
 1298              		.loc 1 263 0 is_stmt 0 discriminator 1
 1299 038a 3E4B     		ldr	r3, .L77
 1300 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 038e 1A46     		mov	r2, r3
 1302 0390 3D4B     		ldr	r3, .L77+4
 1303 0392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1304 0394 591C     		adds	r1, r3, #1
 1305 0396 3D48     		ldr	r0, .L77+8
 1306 0398 1346     		mov	r3, r2
 1307 039a DB00     		lsls	r3, r3, #3
 1308 039c 1344     		add	r3, r3, r2
 1309 039e 5B00     		lsls	r3, r3, #1
 1310 03a0 1344     		add	r3, r3, r2
 1311 03a2 0B44     		add	r3, r3, r1
 1312 03a4 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1313 03a8 092B     		cmp	r3, #9
 1314 03aa 0BD1     		bne	.L65
 1315              	.L64:
 264:main.c        ****                     currentOrientation = Right;
 1316              		.loc 1 264 0 is_stmt 1
 1317 03ac 384B     		ldr	r3, .L77+12
 1318 03ae 0322     		movs	r2, #3
 1319 03b0 1A70     		strb	r2, [r3]
 265:main.c        ****                     directionState = Forward;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 29


 1320              		.loc 1 265 0
 1321 03b2 0023     		movs	r3, #0
 1322 03b4 7B60     		str	r3, [r7, #4]
 266:main.c        ****                     currentCol++; // update position
 1323              		.loc 1 266 0
 1324 03b6 344B     		ldr	r3, .L77+4
 1325 03b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 03ba 0133     		adds	r3, r3, #1
 1327 03bc DAB2     		uxtb	r2, r3
 1328 03be 324B     		ldr	r3, .L77+4
 1329 03c0 1A70     		strb	r2, [r3]
 1330 03c2 4FE0     		b	.L66
 1331              	.L65:
 267:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1332              		.loc 1 267 0
 1333 03c4 2F4B     		ldr	r3, .L77
 1334 03c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 03c8 5A1E     		subs	r2, r3, #1
 1336 03ca 2F4B     		ldr	r3, .L77+4
 1337 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 03ce 1846     		mov	r0, r3
 1339 03d0 2E49     		ldr	r1, .L77+8
 1340 03d2 1346     		mov	r3, r2
 1341 03d4 DB00     		lsls	r3, r3, #3
 1342 03d6 1344     		add	r3, r3, r2
 1343 03d8 5B00     		lsls	r3, r3, #1
 1344 03da 1344     		add	r3, r3, r2
 1345 03dc 0344     		add	r3, r3, r0
 1346 03de 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1347 03e2 082B     		cmp	r3, #8
 1348 03e4 10D0     		beq	.L67
 1349              		.loc 1 267 0 is_stmt 0 discriminator 1
 1350 03e6 274B     		ldr	r3, .L77
 1351 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 03ea 5A1E     		subs	r2, r3, #1
 1353 03ec 264B     		ldr	r3, .L77+4
 1354 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1355 03f0 1846     		mov	r0, r3
 1356 03f2 2649     		ldr	r1, .L77+8
 1357 03f4 1346     		mov	r3, r2
 1358 03f6 DB00     		lsls	r3, r3, #3
 1359 03f8 1344     		add	r3, r3, r2
 1360 03fa 5B00     		lsls	r3, r3, #1
 1361 03fc 1344     		add	r3, r3, r2
 1362 03fe 0344     		add	r3, r3, r0
 1363 0400 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1364 0404 092B     		cmp	r3, #9
 1365 0406 05D1     		bne	.L68
 1366              	.L67:
 268:main.c        ****                     currentOrientation = Up;
 1367              		.loc 1 268 0 is_stmt 1
 1368 0408 214B     		ldr	r3, .L77+12
 1369 040a 0022     		movs	r2, #0
 1370 040c 1A70     		strb	r2, [r3]
 269:main.c        ****                     directionState = waitForLeftTurn;
 1371              		.loc 1 269 0
 1372 040e 0923     		movs	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 30


 1373 0410 7B60     		str	r3, [r7, #4]
 1374 0412 27E0     		b	.L66
 1375              	.L68:
 270:main.c        ****                     //currentCol++; // update position
 271:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1376              		.loc 1 271 0
 1377 0414 1B4B     		ldr	r3, .L77
 1378 0416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379 0418 5A1C     		adds	r2, r3, #1
 1380 041a 1B4B     		ldr	r3, .L77+4
 1381 041c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 041e 1846     		mov	r0, r3
 1383 0420 1A49     		ldr	r1, .L77+8
 1384 0422 1346     		mov	r3, r2
 1385 0424 DB00     		lsls	r3, r3, #3
 1386 0426 1344     		add	r3, r3, r2
 1387 0428 5B00     		lsls	r3, r3, #1
 1388 042a 1344     		add	r3, r3, r2
 1389 042c 0344     		add	r3, r3, r0
 1390 042e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1391 0432 082B     		cmp	r3, #8
 1392 0434 10D0     		beq	.L69
 1393              		.loc 1 271 0 is_stmt 0 discriminator 1
 1394 0436 134B     		ldr	r3, .L77
 1395 0438 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 043a 5A1C     		adds	r2, r3, #1
 1397 043c 124B     		ldr	r3, .L77+4
 1398 043e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 0440 1846     		mov	r0, r3
 1400 0442 1249     		ldr	r1, .L77+8
 1401 0444 1346     		mov	r3, r2
 1402 0446 DB00     		lsls	r3, r3, #3
 1403 0448 1344     		add	r3, r3, r2
 1404 044a 5B00     		lsls	r3, r3, #1
 1405 044c 1344     		add	r3, r3, r2
 1406 044e 0344     		add	r3, r3, r0
 1407 0450 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1408 0454 092B     		cmp	r3, #9
 1409 0456 0ED1     		bne	.L74
 1410              	.L69:
 272:main.c        ****                     currentOrientation = Down;
 1411              		.loc 1 272 0 is_stmt 1
 1412 0458 0D4B     		ldr	r3, .L77+12
 1413 045a 0122     		movs	r2, #1
 1414 045c 1A70     		strb	r2, [r3]
 273:main.c        ****                     directionState = waitForRightTurn;
 1415              		.loc 1 273 0
 1416 045e 0823     		movs	r3, #8
 1417 0460 7B60     		str	r3, [r7, #4]
 274:main.c        ****                     //currentCol--; // update position
 275:main.c        ****                 }
 276:main.c        ****                 break;
 1418              		.loc 1 276 0
 1419 0462 08E0     		b	.L74
 1420              	.L66:
 1421 0464 07E0     		b	.L74
 1422              	.L70:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 31


 277:main.c        ****             default:
 278:main.c        ****                 break;
 1423              		.loc 1 278 0
 1424 0466 00BF     		nop
 1425 0468 06E0     		b	.L51
 1426              	.L71:
 231:main.c        ****             case Down:
 1427              		.loc 1 231 0
 1428 046a 00BF     		nop
 1429 046c 04E0     		b	.L51
 1430              	.L72:
 246:main.c        ****             case Left:
 1431              		.loc 1 246 0
 1432 046e 00BF     		nop
 1433 0470 02E0     		b	.L51
 1434              	.L73:
 261:main.c        ****             case Right:
 1435              		.loc 1 261 0
 1436 0472 00BF     		nop
 1437 0474 00E0     		b	.L51
 1438              	.L74:
 276:main.c        ****             default:
 1439              		.loc 1 276 0
 1440 0476 00BF     		nop
 1441              	.L51:
 279:main.c        ****         }
 280:main.c        ****     
 281:main.c        ****     return directionState;
 1442              		.loc 1 281 0
 1443 0478 7B68     		ldr	r3, [r7, #4]
 1444              	.L38:
 282:main.c        **** }
 1445              		.loc 1 282 0
 1446 047a 1846     		mov	r0, r3
 1447 047c 0C37     		adds	r7, r7, #12
 1448              		.cfi_def_cfa_offset 4
 1449 047e BD46     		mov	sp, r7
 1450              		.cfi_def_cfa_register 13
 1451              		@ sp needed
 1452 0480 80BC     		pop	{r7}
 1453              		.cfi_restore 7
 1454              		.cfi_def_cfa_offset 0
 1455 0482 7047     		bx	lr
 1456              	.L78:
 1457              		.align	2
 1458              	.L77:
 1459 0484 00000000 		.word	currentRow
 1460 0488 00000000 		.word	currentCol
 1461 048c 00000000 		.word	map
 1462 0490 00000000 		.word	currentOrientation
 1463              		.cfi_endproc
 1464              	.LFE73:
 1465              		.size	GetNextStep, .-GetNextStep
 1466              		.global	__aeabi_fcmpge
 1467              		.section	.text.CheckSensorDirection,"ax",%progbits
 1468              		.align	2
 1469              		.global	CheckSensorDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 32


 1470              		.thumb
 1471              		.thumb_func
 1472              		.type	CheckSensorDirection, %function
 1473              	CheckSensorDirection:
 1474              	.LFB74:
 283:main.c        **** 
 284:main.c        **** enum DirectionState CheckSensorDirection() {
 1475              		.loc 1 284 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 8
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479 0000 80B5     		push	{r7, lr}
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 7, -8
 1482              		.cfi_offset 14, -4
 1483 0002 82B0     		sub	sp, sp, #8
 1484              		.cfi_def_cfa_offset 16
 1485 0004 00AF     		add	r7, sp, #0
 1486              		.cfi_def_cfa_register 7
 285:main.c        ****     float blocksize;
 286:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1487              		.loc 1 286 0
 1488 0006 404B     		ldr	r3, .L95
 1489 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1490 000a 002B     		cmp	r3, #0
 1491 000c 03D0     		beq	.L80
 1492              		.loc 1 286 0 is_stmt 0 discriminator 1
 1493 000e 3E4B     		ldr	r3, .L95
 1494 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 0012 012B     		cmp	r3, #1
 1496 0014 02D1     		bne	.L81
 1497              	.L80:
 287:main.c        ****         blocksize = 92.50;
 1498              		.loc 1 287 0 is_stmt 1
 1499 0016 3D4B     		ldr	r3, .L95+4
 1500 0018 7B60     		str	r3, [r7, #4]	@ float
 1501 001a 01E0     		b	.L82
 1502              	.L81:
 288:main.c        ****     } else {
 289:main.c        ****         blocksize = 128.40;
 1503              		.loc 1 289 0
 1504 001c 3C4B     		ldr	r3, .L95+8
 1505 001e 7B60     		str	r3, [r7, #4]	@ float
 1506              	.L82:
 290:main.c        ****     }
 291:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1507              		.loc 1 291 0
 1508 0020 0523     		movs	r3, #5
 1509 0022 3B60     		str	r3, [r7]
 292:main.c        ****     
 293:main.c        ****     if (totalDistance >= blocksize) {
 1510              		.loc 1 293 0
 1511 0024 3B4B     		ldr	r3, .L95+12
 1512 0026 1B68     		ldr	r3, [r3]	@ float
 1513 0028 7968     		ldr	r1, [r7, #4]	@ float
 1514 002a 1846     		mov	r0, r3
 1515 002c FFF7FEFF 		bl	__aeabi_fcmpge
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 33


 1516 0030 0346     		mov	r3, r0
 1517 0032 002B     		cmp	r3, #0
 1518 0034 0BD0     		beq	.L94
 294:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1519              		.loc 1 294 0
 1520 0036 FFF7FEFF 		bl	GetNextStep
 1521 003a 3860     		str	r0, [r7]
 295:main.c        ****         totalDistance = 0; // reset distance
 1522              		.loc 1 295 0
 1523 003c 354B     		ldr	r3, .L95+12
 1524 003e 4FF00002 		mov	r2, #0
 1525 0042 1A60     		str	r2, [r3]	@ float
 296:main.c        ****         previousDirection = directionState;
 1526              		.loc 1 296 0
 1527 0044 344A     		ldr	r2, .L95+16
 1528 0046 3B68     		ldr	r3, [r7]
 1529 0048 1360     		str	r3, [r2]
 297:main.c        ****         return directionState;
 1530              		.loc 1 297 0
 1531 004a 3B68     		ldr	r3, [r7]
 1532 004c 58E0     		b	.L85
 1533              	.L94:
 298:main.c        ****     }
 299:main.c        ****     
 300:main.c        ****     // STOP BUFFER * ========================================
 301:main.c        ****     if (previousDirection == Stop) {
 1534              		.loc 1 301 0
 1535 004e 324B     		ldr	r3, .L95+16
 1536 0050 1B68     		ldr	r3, [r3]
 1537 0052 052B     		cmp	r3, #5
 1538 0054 0AD1     		bne	.L86
 302:main.c        ****         if (stopBuffer <= 50) {
 1539              		.loc 1 302 0
 1540 0056 314B     		ldr	r3, .L95+20
 1541 0058 1B68     		ldr	r3, [r3]
 1542 005a 322B     		cmp	r3, #50
 1543 005c 04D8     		bhi	.L87
 303:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1544              		.loc 1 303 0
 1545 005e 0523     		movs	r3, #5
 1546 0060 3B60     		str	r3, [r7]
 304:main.c        ****             previousDirection = directionState;
 1547              		.loc 1 304 0
 1548 0062 2D4A     		ldr	r2, .L95+16
 1549 0064 3B68     		ldr	r3, [r7]
 1550 0066 1360     		str	r3, [r2]
 1551              	.L87:
 305:main.c        ****         } else {
 306:main.c        ****             //directionState = ForwardAfterTurn;
 307:main.c        ****         }
 308:main.c        ****         return directionState;
 1552              		.loc 1 308 0
 1553 0068 3B68     		ldr	r3, [r7]
 1554 006a 49E0     		b	.L85
 1555              	.L86:
 309:main.c        ****     }
 310:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 34


 311:main.c        ****     // TURNING- will only turn due to getNextStep() * ========================================    
 312:main.c        ****     /*if (previousDirection == ForwardAfterTurn) {
 313:main.c        ****         if (s3 || s4) {
 314:main.c        ****             //usbPutString("Forward\n");
 315:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 316:main.c        ****             return directionState;
 317:main.c        ****         }
 318:main.c        ****     }
 319:main.c        **** 
 320:main.c        ****     if(previousDirection == waitForRightTurn) {
 321:main.c        ****         if(!s4) {
 322:main.c        ****             //usbPutString("Turn Right\n");
 323:main.c        ****             directionState = TurnRight;
 324:main.c        ****             return directionState;
 325:main.c        ****         } else {
 326:main.c        ****             //usbPutString("Wait for Right Turn\n");
 327:main.c        ****             directionState = waitForRightTurn;
 328:main.c        ****             return directionState;
 329:main.c        ****         }
 330:main.c        ****     }
 331:main.c        **** 
 332:main.c        ****     if(previousDirection == waitForLeftTurn) {
 333:main.c        ****         if(!s3) {
 334:main.c        ****             //usbPutString("Turn Left\n");
 335:main.c        ****             directionState = TurnLeft;
 336:main.c        ****             return directionState;
 337:main.c        ****         } else {
 338:main.c        ****             //usbPutString("Wait for Left Turn\n");
 339:main.c        ****             directionState = waitForLeftTurn;
 340:main.c        ****             return directionState;
 341:main.c        ****         }
 342:main.c        ****     }
 343:main.c        **** 
 344:main.c        ****     if(previousDirection == TurnRight) {
 345:main.c        ****         if(s5 && s6) {
 346:main.c        ****             //usbPutString("Turn Right\n");
 347:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 348:main.c        ****             return directionState;
 349:main.c        ****         } 
 350:main.c        ****         else if (!s5 || !s6) {
 351:main.c        ****             //usbPutString("Stop after Right Turn");
 352:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 353:main.c        ****             totalDistance = 0; // correct totalDistance
 354:main.c        ****             return directionState;
 355:main.c        ****         }
 356:main.c        ****     }    
 357:main.c        **** 
 358:main.c        ****     if(previousDirection == TurnLeft) {
 359:main.c        ****         if(s5 && s6) {
 360:main.c        ****             //usbPutString("Turn Left\n");
 361:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 362:main.c        ****             return directionState;
 363:main.c        ****         } 
 364:main.c        ****         else if (!s5 || !s6) {
 365:main.c        ****            // usbPutString("Stop after Left Turn\n");
 366:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 367:main.c        ****             totalDistance = 0; // correct totalDistance
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 35


 368:main.c        ****             return directionState;
 369:main.c        ****         }
 370:main.c        ****     }*/
 371:main.c        ****     
 372:main.c        ****     // COURSE CORRECTION * ========================================
 373:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1556              		.loc 1 373 0
 1557 006c 2A4B     		ldr	r3, .L95+16
 1558 006e 1B68     		ldr	r3, [r3]
 1559 0070 002B     		cmp	r3, #0
 1560 0072 07D0     		beq	.L88
 1561              		.loc 1 373 0 is_stmt 0 discriminator 1
 1562 0074 284B     		ldr	r3, .L95+16
 1563 0076 1B68     		ldr	r3, [r3]
 1564 0078 032B     		cmp	r3, #3
 1565 007a 03D0     		beq	.L88
 1566              		.loc 1 373 0 discriminator 2
 1567 007c 264B     		ldr	r3, .L95+16
 1568 007e 1B68     		ldr	r3, [r3]
 1569 0080 042B     		cmp	r3, #4
 1570 0082 15D1     		bne	.L89
 1571              	.L88:
 374:main.c        ****         if(s6) {
 1572              		.loc 1 374 0 is_stmt 1
 1573 0084 264B     		ldr	r3, .L95+24
 1574 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 0088 002B     		cmp	r3, #0
 1576 008a 06D0     		beq	.L90
 375:main.c        ****             //usbPutString("Adjust to the left\n");
 376:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1577              		.loc 1 376 0
 1578 008c 0323     		movs	r3, #3
 1579 008e 3B60     		str	r3, [r7]
 377:main.c        ****             previousDirection = directionState;
 1580              		.loc 1 377 0
 1581 0090 214A     		ldr	r2, .L95+16
 1582 0092 3B68     		ldr	r3, [r7]
 1583 0094 1360     		str	r3, [r2]
 378:main.c        ****             return directionState;
 1584              		.loc 1 378 0
 1585 0096 3B68     		ldr	r3, [r7]
 1586 0098 32E0     		b	.L85
 1587              	.L90:
 379:main.c        ****         }
 380:main.c        ****         if(s5) {
 1588              		.loc 1 380 0
 1589 009a 224B     		ldr	r3, .L95+28
 1590 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1591 009e 002B     		cmp	r3, #0
 1592 00a0 06D0     		beq	.L89
 381:main.c        ****             //usbPutString("Adjust to the right\n");
 382:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1593              		.loc 1 382 0
 1594 00a2 0423     		movs	r3, #4
 1595 00a4 3B60     		str	r3, [r7]
 383:main.c        ****             previousDirection = directionState;
 1596              		.loc 1 383 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 36


 1597 00a6 1C4A     		ldr	r2, .L95+16
 1598 00a8 3B68     		ldr	r3, [r7]
 1599 00aa 1360     		str	r3, [r2]
 384:main.c        ****             return directionState;
 1600              		.loc 1 384 0
 1601 00ac 3B68     		ldr	r3, [r7]
 1602 00ae 27E0     		b	.L85
 1603              	.L89:
 385:main.c        ****         }
 386:main.c        ****     }
 387:main.c        ****     
 388:main.c        ****     // FORWARD * ========================================
 389:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1604              		.loc 1 389 0
 1605 00b0 1D4B     		ldr	r3, .L95+32
 1606 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 00b4 002B     		cmp	r3, #0
 1608 00b6 12D0     		beq	.L91
 1609              		.loc 1 389 0 is_stmt 0 discriminator 1
 1610 00b8 1C4B     		ldr	r3, .L95+36
 1611 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1612 00bc 002B     		cmp	r3, #0
 1613 00be 0ED0     		beq	.L91
 1614              		.loc 1 389 0 discriminator 2
 1615 00c0 184B     		ldr	r3, .L95+28
 1616 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1617 00c4 002B     		cmp	r3, #0
 1618 00c6 0AD1     		bne	.L91
 1619              		.loc 1 389 0 discriminator 3
 1620 00c8 154B     		ldr	r3, .L95+24
 1621 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 00cc 002B     		cmp	r3, #0
 1623 00ce 06D1     		bne	.L91
 390:main.c        ****         //usbPutString("Forward\n");
 391:main.c        ****         directionState = Forward;
 1624              		.loc 1 391 0 is_stmt 1
 1625 00d0 0023     		movs	r3, #0
 1626 00d2 3B60     		str	r3, [r7]
 392:main.c        ****         previousDirection = directionState;
 1627              		.loc 1 392 0
 1628 00d4 104A     		ldr	r2, .L95+16
 1629 00d6 3B68     		ldr	r3, [r7]
 1630 00d8 1360     		str	r3, [r2]
 393:main.c        ****         return directionState;   
 1631              		.loc 1 393 0
 1632 00da 3B68     		ldr	r3, [r7]
 1633 00dc 10E0     		b	.L85
 1634              	.L91:
 394:main.c        ****     }
 395:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 396:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
 397:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 398:main.c        ****         return directionState;
 399:main.c        ****     }
 400:main.c        **** 
 401:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 402:main.c        ****         //usbPutString("Wait For Turn\n");
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 37


 403:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 404:main.c        ****         return directionState;
 405:main.c        ****     }*/
 406:main.c        **** 
 407:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 408:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 409:main.c        ****     if (previousDirection == Unknown) {
 1635              		.loc 1 409 0
 1636 00de 0E4B     		ldr	r3, .L95+16
 1637 00e0 1B68     		ldr	r3, [r3]
 1638 00e2 062B     		cmp	r3, #6
 1639 00e4 06D1     		bne	.L92
 410:main.c        ****         directionState = Forward;
 1640              		.loc 1 410 0
 1641 00e6 0023     		movs	r3, #0
 1642 00e8 3B60     		str	r3, [r7]
 411:main.c        ****         previousDirection = directionState;
 1643              		.loc 1 411 0
 1644 00ea 0B4A     		ldr	r2, .L95+16
 1645 00ec 3B68     		ldr	r3, [r7]
 1646 00ee 1360     		str	r3, [r2]
 412:main.c        ****         return directionState;
 1647              		.loc 1 412 0
 1648 00f0 3B68     		ldr	r3, [r7]
 1649 00f2 05E0     		b	.L85
 1650              	.L92:
 413:main.c        ****     }
 414:main.c        **** 
 415:main.c        ****     // Possible reason
 416:main.c        ****     previousDirection = currentDirection;
 1651              		.loc 1 416 0
 1652 00f4 0E4B     		ldr	r3, .L95+40
 1653 00f6 1B68     		ldr	r3, [r3]
 1654 00f8 074A     		ldr	r2, .L95+16
 1655 00fa 1360     		str	r3, [r2]
 417:main.c        ****     return previousDirection;
 1656              		.loc 1 417 0
 1657 00fc 064B     		ldr	r3, .L95+16
 1658 00fe 1B68     		ldr	r3, [r3]
 1659              	.L85:
 418:main.c        **** }
 1660              		.loc 1 418 0
 1661 0100 1846     		mov	r0, r3
 1662 0102 0837     		adds	r7, r7, #8
 1663              		.cfi_def_cfa_offset 8
 1664 0104 BD46     		mov	sp, r7
 1665              		.cfi_def_cfa_register 13
 1666              		@ sp needed
 1667 0106 80BD     		pop	{r7, pc}
 1668              	.L96:
 1669              		.align	2
 1670              	.L95:
 1671 0108 00000000 		.word	currentOrientation
 1672 010c 0000B942 		.word	1119420416
 1673 0110 66660043 		.word	1124099686
 1674 0114 00000000 		.word	totalDistance
 1675 0118 00000000 		.word	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 38


 1676 011c 00000000 		.word	stopBuffer
 1677 0120 00000000 		.word	s6
 1678 0124 00000000 		.word	s5
 1679 0128 00000000 		.word	s3
 1680 012c 00000000 		.word	s4
 1681 0130 00000000 		.word	currentDirection
 1682              		.cfi_endproc
 1683              	.LFE74:
 1684              		.size	CheckSensorDirection, .-CheckSensorDirection
 1685              		.section	.text.SetRobotMovement,"ax",%progbits
 1686              		.align	2
 1687              		.global	SetRobotMovement
 1688              		.thumb
 1689              		.thumb_func
 1690              		.type	SetRobotMovement, %function
 1691              	SetRobotMovement:
 1692              	.LFB75:
 419:main.c        **** 
 420:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 421:main.c        **** void SetRobotMovement() {
 1693              		.loc 1 421 0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 0
 1696              		@ frame_needed = 1, uses_anonymous_args = 0
 1697 0000 80B5     		push	{r7, lr}
 1698              		.cfi_def_cfa_offset 8
 1699              		.cfi_offset 7, -8
 1700              		.cfi_offset 14, -4
 1701 0002 00AF     		add	r7, sp, #0
 1702              		.cfi_def_cfa_register 7
 422:main.c        ****     currentDirection = CheckSensorDirection();   
 1703              		.loc 1 422 0
 1704 0004 FFF7FEFF 		bl	CheckSensorDirection
 1705 0008 0246     		mov	r2, r0
 1706 000a 224B     		ldr	r3, .L114
 1707 000c 1A60     		str	r2, [r3]
 423:main.c        ****     
 424:main.c        ****     switch (currentDirection) {
 1708              		.loc 1 424 0
 1709 000e 214B     		ldr	r3, .L114
 1710 0010 1B68     		ldr	r3, [r3]
 1711 0012 0B2B     		cmp	r3, #11
 1712 0014 3CD8     		bhi	.L112
 1713 0016 01A2     		adr	r2, .L100
 1714 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1715              		.p2align 2
 1716              	.L100:
 1717 001c 4D000000 		.word	.L99+1
 1718 0020 53000000 		.word	.L101+1
 1719 0024 59000000 		.word	.L102+1
 1720 0028 65000000 		.word	.L103+1
 1721 002c 5F000000 		.word	.L104+1
 1722 0030 6B000000 		.word	.L105+1
 1723 0034 8F000000 		.word	.L113+1
 1724 0038 71000000 		.word	.L107+1
 1725 003c 89000000 		.word	.L108+1
 1726 0040 83000000 		.word	.L109+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 39


 1727 0044 77000000 		.word	.L110+1
 1728 0048 7D000000 		.word	.L111+1
 1729              		.p2align 1
 1730              	.L99:
 425:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 426:main.c        ****         case Forward:
 427:main.c        ****             moveForward();
 1731              		.loc 1 427 0
 1732 004c FFF7FEFF 		bl	moveForward
 428:main.c        ****             break;
 1733              		.loc 1 428 0
 1734 0050 1EE0     		b	.L98
 1735              	.L101:
 429:main.c        ****         case TurnRight:
 430:main.c        ****             turnRight();
 1736              		.loc 1 430 0
 1737 0052 FFF7FEFF 		bl	turnRight
 431:main.c        ****             break;
 1738              		.loc 1 431 0
 1739 0056 1BE0     		b	.L98
 1740              	.L102:
 432:main.c        ****         case TurnLeft:
 433:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1741              		.loc 1 433 0
 1742 0058 FFF7FEFF 		bl	turnLeft
 434:main.c        ****             break;
 1743              		.loc 1 434 0
 1744 005c 18E0     		b	.L98
 1745              	.L104:
 435:main.c        ****         case AdjustToTheRight:
 436:main.c        ****             adjustRight();
 1746              		.loc 1 436 0
 1747 005e FFF7FEFF 		bl	adjustRight
 437:main.c        ****             break;
 1748              		.loc 1 437 0
 1749 0062 15E0     		b	.L98
 1750              	.L103:
 438:main.c        ****         case AdjustToTheLeft:
 439:main.c        ****             adjustLeft();
 1751              		.loc 1 439 0
 1752 0064 FFF7FEFF 		bl	adjustLeft
 440:main.c        ****             break;
 1753              		.loc 1 440 0
 1754 0068 12E0     		b	.L98
 1755              	.L105:
 441:main.c        ****         case Stop:
 442:main.c        ****             stopMoving();
 1756              		.loc 1 442 0
 1757 006a FFF7FEFF 		bl	stopMoving
 443:main.c        ****             break;
 1758              		.loc 1 443 0
 1759 006e 0FE0     		b	.L98
 1760              	.L107:
 444:main.c        ****         case waitForTurn:
 445:main.c        ****             moveForward(); 
 1761              		.loc 1 445 0
 1762 0070 FFF7FEFF 		bl	moveForward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 40


 446:main.c        ****             break;
 1763              		.loc 1 446 0
 1764 0074 0CE0     		b	.L98
 1765              	.L110:
 447:main.c        ****         case ForwardAfterTurn:
 448:main.c        ****             moveForward();
 1766              		.loc 1 448 0
 1767 0076 FFF7FEFF 		bl	moveForward
 449:main.c        ****             break;
 1768              		.loc 1 449 0
 1769 007a 09E0     		b	.L98
 1770              	.L111:
 450:main.c        ****         case Backward:
 451:main.c        ****             moveBackward();
 1771              		.loc 1 451 0
 1772 007c FFF7FEFF 		bl	moveBackward
 452:main.c        ****             break;
 1773              		.loc 1 452 0
 1774 0080 06E0     		b	.L98
 1775              	.L109:
 453:main.c        ****         case waitForLeftTurn:
 454:main.c        ****             moveForward();
 1776              		.loc 1 454 0
 1777 0082 FFF7FEFF 		bl	moveForward
 455:main.c        ****             break;
 1778              		.loc 1 455 0
 1779 0086 03E0     		b	.L98
 1780              	.L108:
 456:main.c        ****         case waitForRightTurn:
 457:main.c        ****             moveForward();
 1781              		.loc 1 457 0
 1782 0088 FFF7FEFF 		bl	moveForward
 458:main.c        ****             break;
 1783              		.loc 1 458 0
 1784 008c 00E0     		b	.L98
 1785              	.L113:
 459:main.c        ****         case Unknown:
 460:main.c        ****             // UNKNOWN CONFIGURATION
 461:main.c        ****             break;  
 1786              		.loc 1 461 0
 1787 008e 00BF     		nop
 1788              	.L98:
 1789              	.L112:
 462:main.c        ****     }
 463:main.c        **** }...
 1790              		.loc 1 463 0
 1791 0090 00BF     		nop
 1792 0092 80BD     		pop	{r7, pc}
 1793              	.L115:
 1794              		.align	2
 1795              	.L114:
 1796 0094 00000000 		.word	currentDirection
 1797              		.cfi_endproc
 1798              	.LFE75:
 1799              		.size	SetRobotMovement, .-SetRobotMovement
 1800              		.text
 1801              	.Letext0:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 41


 1802              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1803              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1804              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1805              		.file 5 "vars.h"
 1806              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1807              		.file 7 "map.h"
 1808              		.section	.debug_info,"",%progbits
 1809              	.Ldebug_info0:
 1810 0000 7A060000 		.4byte	0x67a
 1811 0004 0400     		.2byte	0x4
 1812 0006 00000000 		.4byte	.Ldebug_abbrev0
 1813 000a 04       		.byte	0x4
 1814 000b 01       		.uleb128 0x1
 1815 000c 9F000000 		.4byte	.LASF103
 1816 0010 0C       		.byte	0xc
 1817 0011 75040000 		.4byte	.LASF104
 1818 0015 C7030000 		.4byte	.LASF105
 1819 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1820 001d 00000000 		.4byte	0
 1821 0021 00000000 		.4byte	.Ldebug_line0
 1822 0025 02       		.uleb128 0x2
 1823 0026 01       		.byte	0x1
 1824 0027 06       		.byte	0x6
 1825 0028 EE020000 		.4byte	.LASF0
 1826 002c 02       		.uleb128 0x2
 1827 002d 01       		.byte	0x1
 1828 002e 08       		.byte	0x8
 1829 002f 5C020000 		.4byte	.LASF1
 1830 0033 02       		.uleb128 0x2
 1831 0034 02       		.byte	0x2
 1832 0035 05       		.byte	0x5
 1833 0036 5B000000 		.4byte	.LASF2
 1834 003a 02       		.uleb128 0x2
 1835 003b 02       		.byte	0x2
 1836 003c 07       		.byte	0x7
 1837 003d 83030000 		.4byte	.LASF3
 1838 0041 03       		.uleb128 0x3
 1839 0042 D8040000 		.4byte	.LASF12
 1840 0046 02       		.byte	0x2
 1841 0047 3F       		.byte	0x3f
 1842 0048 4C000000 		.4byte	0x4c
 1843 004c 02       		.uleb128 0x2
 1844 004d 04       		.byte	0x4
 1845 004e 05       		.byte	0x5
 1846 004f B6030000 		.4byte	.LASF4
 1847 0053 02       		.uleb128 0x2
 1848 0054 04       		.byte	0x4
 1849 0055 07       		.byte	0x7
 1850 0056 7C040000 		.4byte	.LASF5
 1851 005a 02       		.uleb128 0x2
 1852 005b 08       		.byte	0x8
 1853 005c 05       		.byte	0x5
 1854 005d B9010000 		.4byte	.LASF6
 1855 0061 02       		.uleb128 0x2
 1856 0062 08       		.byte	0x8
 1857 0063 07       		.byte	0x7
 1858 0064 02030000 		.4byte	.LASF7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 42


 1859 0068 04       		.uleb128 0x4
 1860 0069 04       		.byte	0x4
 1861 006a 05       		.byte	0x5
 1862 006b 696E7400 		.ascii	"int\000"
 1863 006f 02       		.uleb128 0x2
 1864 0070 04       		.byte	0x4
 1865 0071 07       		.byte	0x7
 1866 0072 2A030000 		.4byte	.LASF8
 1867 0076 02       		.uleb128 0x2
 1868 0077 08       		.byte	0x8
 1869 0078 04       		.byte	0x4
 1870 0079 82020000 		.4byte	.LASF9
 1871 007d 02       		.uleb128 0x2
 1872 007e 04       		.byte	0x4
 1873 007f 07       		.byte	0x7
 1874 0080 72000000 		.4byte	.LASF10
 1875 0084 02       		.uleb128 0x2
 1876 0085 01       		.byte	0x1
 1877 0086 08       		.byte	0x8
 1878 0087 B1030000 		.4byte	.LASF11
 1879 008b 03       		.uleb128 0x3
 1880 008c FA020000 		.4byte	.LASF13
 1881 0090 03       		.byte	0x3
 1882 0091 2C       		.byte	0x2c
 1883 0092 41000000 		.4byte	0x41
 1884 0096 05       		.uleb128 0x5
 1885 0097 89010000 		.4byte	.LASF14
 1886 009b 04       		.byte	0x4
 1887 009c E701     		.2byte	0x1e7
 1888 009e 2C000000 		.4byte	0x2c
 1889 00a2 05       		.uleb128 0x5
 1890 00a3 6B010000 		.4byte	.LASF15
 1891 00a7 04       		.byte	0x4
 1892 00a8 E801     		.2byte	0x1e8
 1893 00aa 3A000000 		.4byte	0x3a
 1894 00ae 05       		.uleb128 0x5
 1895 00af 6E040000 		.4byte	.LASF16
 1896 00b3 04       		.byte	0x4
 1897 00b4 E901     		.2byte	0x1e9
 1898 00b6 53000000 		.4byte	0x53
 1899 00ba 05       		.uleb128 0x5
 1900 00bb C7010000 		.4byte	.LASF17
 1901 00bf 04       		.byte	0x4
 1902 00c0 EA01     		.2byte	0x1ea
 1903 00c2 25000000 		.4byte	0x25
 1904 00c6 05       		.uleb128 0x5
 1905 00c7 83010000 		.4byte	.LASF18
 1906 00cb 04       		.byte	0x4
 1907 00cc EB01     		.2byte	0x1eb
 1908 00ce 33000000 		.4byte	0x33
 1909 00d2 02       		.uleb128 0x2
 1910 00d3 04       		.byte	0x4
 1911 00d4 04       		.byte	0x4
 1912 00d5 A1010000 		.4byte	.LASF19
 1913 00d9 02       		.uleb128 0x2
 1914 00da 08       		.byte	0x8
 1915 00db 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 43


 1916 00dc 97040000 		.4byte	.LASF20
 1917 00e0 06       		.uleb128 0x6
 1918 00e1 96030000 		.4byte	.LASF106
 1919 00e5 20       		.byte	0x20
 1920 00e6 05       		.byte	0x5
 1921 00e7 28       		.byte	0x28
 1922 00e8 B9010000 		.4byte	0x1b9
 1923 00ec 07       		.uleb128 0x7
 1924 00ed 97050000 		.4byte	.LASF21
 1925 00f1 05       		.byte	0x5
 1926 00f2 2A       		.byte	0x2a
 1927 00f3 BA000000 		.4byte	0xba
 1928 00f7 00       		.byte	0
 1929 00f8 07       		.uleb128 0x7
 1930 00f9 72010000 		.4byte	.LASF22
 1931 00fd 05       		.byte	0x5
 1932 00fe 2B       		.byte	0x2b
 1933 00ff 96000000 		.4byte	0x96
 1934 0103 01       		.byte	0x1
 1935 0104 07       		.uleb128 0x7
 1936 0105 52040000 		.4byte	.LASF23
 1937 0109 05       		.byte	0x5
 1938 010a 2C       		.byte	0x2c
 1939 010b C6000000 		.4byte	0xc6
 1940 010f 02       		.byte	0x2
 1941 0110 07       		.uleb128 0x7
 1942 0111 47050000 		.4byte	.LASF24
 1943 0115 05       		.byte	0x5
 1944 0116 2D       		.byte	0x2d
 1945 0117 C6000000 		.4byte	0xc6
 1946 011b 04       		.byte	0x4
 1947 011c 07       		.uleb128 0x7
 1948 011d EF040000 		.4byte	.LASF25
 1949 0121 05       		.byte	0x5
 1950 0122 2E       		.byte	0x2e
 1951 0123 C6000000 		.4byte	0xc6
 1952 0127 06       		.byte	0x6
 1953 0128 07       		.uleb128 0x7
 1954 0129 FB010000 		.4byte	.LASF26
 1955 012d 05       		.byte	0x5
 1956 012e 2F       		.byte	0x2f
 1957 012f C6000000 		.4byte	0xc6
 1958 0133 08       		.byte	0x8
 1959 0134 07       		.uleb128 0x7
 1960 0135 E7040000 		.4byte	.LASF27
 1961 0139 05       		.byte	0x5
 1962 013a 30       		.byte	0x30
 1963 013b C6000000 		.4byte	0xc6
 1964 013f 0A       		.byte	0xa
 1965 0140 07       		.uleb128 0x7
 1966 0141 C3020000 		.4byte	.LASF28
 1967 0145 05       		.byte	0x5
 1968 0146 31       		.byte	0x31
 1969 0147 C6000000 		.4byte	0xc6
 1970 014b 0C       		.byte	0xc
 1971 014c 07       		.uleb128 0x7
 1972 014d EE010000 		.4byte	.LASF29
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 44


 1973 0151 05       		.byte	0x5
 1974 0152 32       		.byte	0x32
 1975 0153 C6000000 		.4byte	0xc6
 1976 0157 0E       		.byte	0xe
 1977 0158 07       		.uleb128 0x7
 1978 0159 E6020000 		.4byte	.LASF30
 1979 015d 05       		.byte	0x5
 1980 015e 33       		.byte	0x33
 1981 015f C6000000 		.4byte	0xc6
 1982 0163 10       		.byte	0x10
 1983 0164 07       		.uleb128 0x7
 1984 0165 26040000 		.4byte	.LASF31
 1985 0169 05       		.byte	0x5
 1986 016a 34       		.byte	0x34
 1987 016b C6000000 		.4byte	0xc6
 1988 016f 12       		.byte	0x12
 1989 0170 07       		.uleb128 0x7
 1990 0171 3B040000 		.4byte	.LASF32
 1991 0175 05       		.byte	0x5
 1992 0176 35       		.byte	0x35
 1993 0177 C6000000 		.4byte	0xc6
 1994 017b 14       		.byte	0x14
 1995 017c 07       		.uleb128 0x7
 1996 017d 8F010000 		.4byte	.LASF33
 1997 0181 05       		.byte	0x5
 1998 0182 36       		.byte	0x36
 1999 0183 C6000000 		.4byte	0xc6
 2000 0187 16       		.byte	0x16
 2001 0188 07       		.uleb128 0x7
 2002 0189 53000000 		.4byte	.LASF34
 2003 018d 05       		.byte	0x5
 2004 018e 37       		.byte	0x37
 2005 018f C6000000 		.4byte	0xc6
 2006 0193 18       		.byte	0x18
 2007 0194 07       		.uleb128 0x7
 2008 0195 E6010000 		.4byte	.LASF35
 2009 0199 05       		.byte	0x5
 2010 019a 38       		.byte	0x38
 2011 019b C6000000 		.4byte	0xc6
 2012 019f 1A       		.byte	0x1a
 2013 01a0 07       		.uleb128 0x7
 2014 01a1 6E030000 		.4byte	.LASF36
 2015 01a5 05       		.byte	0x5
 2016 01a6 39       		.byte	0x39
 2017 01a7 C6000000 		.4byte	0xc6
 2018 01ab 1C       		.byte	0x1c
 2019 01ac 07       		.uleb128 0x7
 2020 01ad 2E040000 		.4byte	.LASF37
 2021 01b1 05       		.byte	0x5
 2022 01b2 3A       		.byte	0x3a
 2023 01b3 C6000000 		.4byte	0xc6
 2024 01b7 1E       		.byte	0x1e
 2025 01b8 00       		.byte	0
 2026 01b9 08       		.uleb128 0x8
 2027 01ba 86000000 		.4byte	.LASF50
 2028 01be 04       		.byte	0x4
 2029 01bf 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 45


 2030 01c3 01       		.byte	0x1
 2031 01c4 28       		.byte	0x28
 2032 01c5 12020000 		.4byte	0x212
 2033 01c9 09       		.uleb128 0x9
 2034 01ca BF030000 		.4byte	.LASF38
 2035 01ce 00       		.byte	0
 2036 01cf 09       		.uleb128 0x9
 2037 01d0 5D040000 		.4byte	.LASF39
 2038 01d4 01       		.byte	0x1
 2039 01d5 09       		.uleb128 0x9
 2040 01d6 0C000000 		.4byte	.LASF40
 2041 01da 02       		.byte	0x2
 2042 01db 09       		.uleb128 0x9
 2043 01dc 5B010000 		.4byte	.LASF41
 2044 01e0 03       		.byte	0x3
 2045 01e1 09       		.uleb128 0x9
 2046 01e2 19030000 		.4byte	.LASF42
 2047 01e6 04       		.byte	0x4
 2048 01e7 09       		.uleb128 0x9
 2049 01e8 E2040000 		.4byte	.LASF43
 2050 01ec 05       		.byte	0x5
 2051 01ed 09       		.uleb128 0x9
 2052 01ee 9E040000 		.4byte	.LASF44
 2053 01f2 06       		.byte	0x6
 2054 01f3 09       		.uleb128 0x9
 2055 01f4 39000000 		.4byte	.LASF45
 2056 01f8 07       		.byte	0x7
 2057 01f9 09       		.uleb128 0x9
 2058 01fa 32010000 		.4byte	.LASF46
 2059 01fe 08       		.byte	0x8
 2060 01ff 09       		.uleb128 0x9
 2061 0200 0C050000 		.4byte	.LASF47
 2062 0204 09       		.byte	0x9
 2063 0205 09       		.uleb128 0x9
 2064 0206 1C000000 		.4byte	.LASF48
 2065 020a 0A       		.byte	0xa
 2066 020b 09       		.uleb128 0x9
 2067 020c 8E040000 		.4byte	.LASF49
 2068 0210 0B       		.byte	0xb
 2069 0211 00       		.byte	0
 2070 0212 08       		.uleb128 0x8
 2071 0213 9C050000 		.4byte	.LASF51
 2072 0217 01       		.byte	0x1
 2073 0218 2C000000 		.4byte	0x2c
 2074 021c 01       		.byte	0x1
 2075 021d 2A       		.byte	0x2a
 2076 021e 3A020000 		.4byte	0x23a
 2077 0222 0A       		.uleb128 0xa
 2078 0223 557000   		.ascii	"Up\000"
 2079 0226 00       		.byte	0
 2080 0227 09       		.uleb128 0x9
 2081 0228 72050000 		.4byte	.LASF52
 2082 022c 01       		.byte	0x1
 2083 022d 09       		.uleb128 0x9
 2084 022e 17020000 		.4byte	.LASF53
 2085 0232 02       		.byte	0x2
 2086 0233 09       		.uleb128 0x9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 46


 2087 0234 A7010000 		.4byte	.LASF54
 2088 0238 03       		.byte	0x3
 2089 0239 00       		.byte	0
 2090 023a 0B       		.uleb128 0xb
 2091 023b 78010000 		.4byte	.LASF62
 2092 023f 01       		.byte	0x1
 2093 0240 45       		.byte	0x45
 2094 0241 00000000 		.4byte	.LFB64
 2095 0245 E4000000 		.4byte	.LFE64-.LFB64
 2096 0249 01       		.uleb128 0x1
 2097 024a 9C       		.byte	0x9c
 2098 024b 68020000 		.4byte	0x268
 2099 024f 0C       		.uleb128 0xc
 2100 0250 48000000 		.4byte	.LBB2
 2101 0254 62000000 		.4byte	.LBE2-.LBB2
 2102 0258 0D       		.uleb128 0xd
 2103 0259 AD010000 		.4byte	.LASF61
 2104 025d 01       		.byte	0x1
 2105 025e 51       		.byte	0x51
 2106 025f D2000000 		.4byte	0xd2
 2107 0263 02       		.uleb128 0x2
 2108 0264 91       		.byte	0x91
 2109 0265 6C       		.sleb128 -20
 2110 0266 00       		.byte	0
 2111 0267 00       		.byte	0
 2112 0268 0E       		.uleb128 0xe
 2113 0269 B1040000 		.4byte	.LASF55
 2114 026d 01       		.byte	0x1
 2115 026e 5C       		.byte	0x5c
 2116 026f 00000000 		.4byte	.LFB65
 2117 0273 18000000 		.4byte	.LFE65-.LFB65
 2118 0277 01       		.uleb128 0x1
 2119 0278 9C       		.byte	0x9c
 2120 0279 0E       		.uleb128 0xe
 2121 027a 4F010000 		.4byte	.LASF56
 2122 027e 01       		.byte	0x1
 2123 027f 62       		.byte	0x62
 2124 0280 00000000 		.4byte	.LFB66
 2125 0284 18000000 		.4byte	.LFE66-.LFB66
 2126 0288 01       		.uleb128 0x1
 2127 0289 9C       		.byte	0x9c
 2128 028a 0E       		.uleb128 0xe
 2129 028b 77030000 		.4byte	.LASF57
 2130 028f 01       		.byte	0x1
 2131 0290 68       		.byte	0x68
 2132 0291 00000000 		.4byte	.LFB67
 2133 0295 18000000 		.4byte	.LFE67-.LFB67
 2134 0299 01       		.uleb128 0x1
 2135 029a 9C       		.byte	0x9c
 2136 029b 0E       		.uleb128 0xe
 2137 029c 00000000 		.4byte	.LASF58
 2138 02a0 01       		.byte	0x1
 2139 02a1 6E       		.byte	0x6e
 2140 02a2 00000000 		.4byte	.LFB68
 2141 02a6 18000000 		.4byte	.LFE68-.LFB68
 2142 02aa 01       		.uleb128 0x1
 2143 02ab 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 47


 2144 02ac 0F       		.uleb128 0xf
 2145 02ad 61030000 		.4byte	.LASF59
 2146 02b1 01       		.byte	0x1
 2147 02b2 74       		.byte	0x74
 2148 02b3 00000000 		.4byte	.LFB69
 2149 02b7 38000000 		.4byte	.LFE69-.LFB69
 2150 02bb 01       		.uleb128 0x1
 2151 02bc 9C       		.byte	0x9c
 2152 02bd 10       		.uleb128 0x10
 2153 02be 2D010000 		.4byte	.LASF60
 2154 02c2 01       		.byte	0x1
 2155 02c3 80       		.byte	0x80
 2156 02c4 68000000 		.4byte	0x68
 2157 02c8 00000000 		.4byte	.LFB70
 2158 02cc A0000000 		.4byte	.LFE70-.LFB70
 2159 02d0 01       		.uleb128 0x1
 2160 02d1 9C       		.byte	0x9c
 2161 02d2 11       		.uleb128 0x11
 2162 02d3 1C050000 		.4byte	.LASF107
 2163 02d7 01       		.byte	0x1
 2164 02d8 B0       		.byte	0xb0
 2165 02d9 C6000000 		.4byte	0xc6
 2166 02dd 00000000 		.4byte	.LFB71
 2167 02e1 54000000 		.4byte	.LFE71-.LFB71
 2168 02e5 01       		.uleb128 0x1
 2169 02e6 9C       		.byte	0x9c
 2170 02e7 16030000 		.4byte	0x316
 2171 02eb 12       		.uleb128 0x12
 2172 02ec C6040000 		.4byte	.LASF108
 2173 02f0 01       		.byte	0x1
 2174 02f1 B0       		.byte	0xb0
 2175 02f2 A2000000 		.4byte	0xa2
 2176 02f6 02       		.uleb128 0x2
 2177 02f7 91       		.byte	0x91
 2178 02f8 66       		.sleb128 -26
 2179 02f9 13       		.uleb128 0x13
 2180 02fa 63707300 		.ascii	"cps\000"
 2181 02fe 01       		.byte	0x1
 2182 02ff B2       		.byte	0xb2
 2183 0300 D2000000 		.4byte	0xd2
 2184 0304 02       		.uleb128 0x2
 2185 0305 91       		.byte	0x91
 2186 0306 6C       		.sleb128 -20
 2187 0307 13       		.uleb128 0x13
 2188 0308 72706D00 		.ascii	"rpm\000"
 2189 030c 01       		.byte	0x1
 2190 030d B3       		.byte	0xb3
 2191 030e C6000000 		.4byte	0xc6
 2192 0312 02       		.uleb128 0x2
 2193 0313 91       		.byte	0x91
 2194 0314 6A       		.sleb128 -22
 2195 0315 00       		.byte	0
 2196 0316 14       		.uleb128 0x14
 2197 0317 A0030000 		.4byte	.LASF67
 2198 031b 01       		.byte	0x1
 2199 031c BB       		.byte	0xbb
 2200 031d 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 48


 2201 0321 34000000 		.4byte	.LFE72-.LFB72
 2202 0325 01       		.uleb128 0x1
 2203 0326 9C       		.byte	0x9c
 2204 0327 15       		.uleb128 0x15
 2205 0328 43010000 		.4byte	.LASF63
 2206 032c 01       		.byte	0x1
 2207 032d C7       		.byte	0xc7
 2208 032e B9010000 		.4byte	0x1b9
 2209 0332 00000000 		.4byte	.LFB73
 2210 0336 94040000 		.4byte	.LFE73-.LFB73
 2211 033a 01       		.uleb128 0x1
 2212 033b 9C       		.byte	0x9c
 2213 033c 4F030000 		.4byte	0x34f
 2214 0340 0D       		.uleb128 0xd
 2215 0341 88050000 		.4byte	.LASF64
 2216 0345 01       		.byte	0x1
 2217 0346 C8       		.byte	0xc8
 2218 0347 B9010000 		.4byte	0x1b9
 2219 034b 02       		.uleb128 0x2
 2220 034c 91       		.byte	0x91
 2221 034d 74       		.sleb128 -12
 2222 034e 00       		.byte	0
 2223 034f 16       		.uleb128 0x16
 2224 0350 1C020000 		.4byte	.LASF65
 2225 0354 01       		.byte	0x1
 2226 0355 1C01     		.2byte	0x11c
 2227 0357 B9010000 		.4byte	0x1b9
 2228 035b 00000000 		.4byte	.LFB74
 2229 035f 34010000 		.4byte	.LFE74-.LFB74
 2230 0363 01       		.uleb128 0x1
 2231 0364 9C       		.byte	0x9c
 2232 0365 88030000 		.4byte	0x388
 2233 0369 17       		.uleb128 0x17
 2234 036a 52020000 		.4byte	.LASF66
 2235 036e 01       		.byte	0x1
 2236 036f 1D01     		.2byte	0x11d
 2237 0371 D2000000 		.4byte	0xd2
 2238 0375 02       		.uleb128 0x2
 2239 0376 91       		.byte	0x91
 2240 0377 74       		.sleb128 -12
 2241 0378 17       		.uleb128 0x17
 2242 0379 88050000 		.4byte	.LASF64
 2243 037d 01       		.byte	0x1
 2244 037e 2301     		.2byte	0x123
 2245 0380 B9010000 		.4byte	0x1b9
 2246 0384 02       		.uleb128 0x2
 2247 0385 91       		.byte	0x91
 2248 0386 70       		.sleb128 -16
 2249 0387 00       		.byte	0
 2250 0388 18       		.uleb128 0x18
 2251 0389 50030000 		.4byte	.LASF68
 2252 038d 01       		.byte	0x1
 2253 038e A501     		.2byte	0x1a5
 2254 0390 00000000 		.4byte	.LFB75
 2255 0394 98000000 		.4byte	.LFE75-.LFB75
 2256 0398 01       		.uleb128 0x1
 2257 0399 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 49


 2258 039a 19       		.uleb128 0x19
 2259 039b 52050000 		.4byte	.LASF69
 2260 039f 06       		.byte	0x6
 2261 03a0 1207     		.2byte	0x712
 2262 03a2 A6030000 		.4byte	0x3a6
 2263 03a6 1A       		.uleb128 0x1a
 2264 03a7 8B000000 		.4byte	0x8b
 2265 03ab 1B       		.uleb128 0x1b
 2266 03ac 747300   		.ascii	"ts\000"
 2267 03af 05       		.byte	0x5
 2268 03b0 10       		.byte	0x10
 2269 03b1 96000000 		.4byte	0x96
 2270 03b5 05       		.uleb128 0x5
 2271 03b6 03       		.byte	0x3
 2272 03b7 00000000 		.4byte	ts
 2273 03bb 1C       		.uleb128 0x1c
 2274 03bc 15000000 		.4byte	.LASF70
 2275 03c0 05       		.byte	0x5
 2276 03c1 11       		.byte	0x11
 2277 03c2 A2000000 		.4byte	0xa2
 2278 03c6 05       		.uleb128 0x5
 2279 03c7 03       		.byte	0x3
 2280 03c8 00000000 		.4byte	ts_enc
 2281 03cc 1C       		.uleb128 0x1c
 2282 03cd 37030000 		.4byte	.LASF71
 2283 03d1 05       		.byte	0x5
 2284 03d2 12       		.byte	0x12
 2285 03d3 A2000000 		.4byte	0xa2
 2286 03d7 05       		.uleb128 0x5
 2287 03d8 03       		.byte	0x3
 2288 03d9 00000000 		.4byte	ts_update
 2289 03dd 1C       		.uleb128 0x1c
 2290 03de BD040000 		.4byte	.LASF72
 2291 03e2 05       		.byte	0x5
 2292 03e3 13       		.byte	0x13
 2293 03e4 A2000000 		.4byte	0xa2
 2294 03e8 05       		.uleb128 0x5
 2295 03e9 03       		.byte	0x3
 2296 03ea 00000000 		.4byte	ts_speed
 2297 03ee 1C       		.uleb128 0x1c
 2298 03ef 01050000 		.4byte	.LASF73
 2299 03f3 05       		.byte	0x5
 2300 03f4 14       		.byte	0x14
 2301 03f5 A2000000 		.4byte	0xa2
 2302 03f9 05       		.uleb128 0x5
 2303 03fa 03       		.byte	0x3
 2304 03fb 00000000 		.4byte	ts_display
 2305 03ff 1C       		.uleb128 0x1c
 2306 0400 CC040000 		.4byte	.LASF74
 2307 0404 05       		.byte	0x5
 2308 0405 16       		.byte	0x16
 2309 0406 96000000 		.4byte	0x96
 2310 040a 05       		.uleb128 0x5
 2311 040b 03       		.byte	0x3
 2312 040c 00000000 		.4byte	flag_ts_enc
 2313 0410 1C       		.uleb128 0x1c
 2314 0411 D7010000 		.4byte	.LASF75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 50


 2315 0415 05       		.byte	0x5
 2316 0416 17       		.byte	0x17
 2317 0417 96000000 		.4byte	0x96
 2318 041b 05       		.uleb128 0x5
 2319 041c 03       		.byte	0x3
 2320 041d 00000000 		.4byte	flag_ts_update
 2321 0421 1C       		.uleb128 0x1c
 2322 0422 45000000 		.4byte	.LASF76
 2323 0426 05       		.byte	0x5
 2324 0427 18       		.byte	0x18
 2325 0428 96000000 		.4byte	0x96
 2326 042c 05       		.uleb128 0x5
 2327 042d 03       		.byte	0x3
 2328 042e 00000000 		.4byte	flag_ts_speed
 2329 0432 1C       		.uleb128 0x1c
 2330 0433 3A020000 		.4byte	.LASF77
 2331 0437 05       		.byte	0x5
 2332 0438 19       		.byte	0x19
 2333 0439 96000000 		.4byte	0x96
 2334 043d 05       		.uleb128 0x5
 2335 043e 03       		.byte	0x3
 2336 043f 00000000 		.4byte	flag_ts_display
 2337 0443 1C       		.uleb128 0x1c
 2338 0444 4A020000 		.4byte	.LASF78
 2339 0448 05       		.byte	0x5
 2340 0449 1B       		.byte	0x1b
 2341 044a 96000000 		.4byte	0x96
 2342 044e 05       		.uleb128 0x5
 2343 044f 03       		.byte	0x3
 2344 0450 00000000 		.4byte	flag_rx
 2345 0454 1C       		.uleb128 0x1c
 2346 0455 2D000000 		.4byte	.LASF79
 2347 0459 05       		.byte	0x5
 2348 045a 1C       		.byte	0x1c
 2349 045b 96000000 		.4byte	0x96
 2350 045f 05       		.uleb128 0x5
 2351 0460 03       		.byte	0x3
 2352 0461 00000000 		.4byte	flag_packet
 2353 0465 1C       		.uleb128 0x1c
 2354 0466 41030000 		.4byte	.LASF80
 2355 046a 05       		.byte	0x5
 2356 046b 1D       		.byte	0x1d
 2357 046c 96000000 		.4byte	0x96
 2358 0470 05       		.uleb128 0x5
 2359 0471 03       		.byte	0x3
 2360 0472 00000000 		.4byte	flag_KB_string
 2361 0476 1C       		.uleb128 0x1c
 2362 0477 D7020000 		.4byte	.LASF81
 2363 047b 05       		.byte	0x5
 2364 047c 1F       		.byte	0x1f
 2365 047d 96000000 		.4byte	0x96
 2366 0481 05       		.uleb128 0x5
 2367 0482 03       		.byte	0x3
 2368 0483 00000000 		.4byte	dataready_flag
 2369 0487 1C       		.uleb128 0x1c
 2370 0488 2B050000 		.4byte	.LASF82
 2371 048c 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 51


 2372 048d 21       		.byte	0x21
 2373 048e 96000000 		.4byte	0x96
 2374 0492 05       		.uleb128 0x5
 2375 0493 03       		.byte	0x3
 2376 0494 00000000 		.4byte	flag_rf_transmission_active
 2377 0498 1D       		.uleb128 0x1d
 2378 0499 84000000 		.4byte	0x84
 2379 049d A8040000 		.4byte	0x4a8
 2380 04a1 1E       		.uleb128 0x1e
 2381 04a2 7D000000 		.4byte	0x7d
 2382 04a6 3F       		.byte	0x3f
 2383 04a7 00       		.byte	0
 2384 04a8 1C       		.uleb128 0x1c
 2385 04a9 44040000 		.4byte	.LASF83
 2386 04ad 05       		.byte	0x5
 2387 04ae 24       		.byte	0x24
 2388 04af 98040000 		.4byte	0x498
 2389 04b3 05       		.uleb128 0x5
 2390 04b4 03       		.byte	0x3
 2391 04b5 00000000 		.4byte	displaystring
 2392 04b9 1C       		.uleb128 0x1c
 2393 04ba 9C010000 		.4byte	.LASF84
 2394 04be 05       		.byte	0x5
 2395 04bf 25       		.byte	0x25
 2396 04c0 98040000 		.4byte	0x498
 2397 04c4 05       		.uleb128 0x5
 2398 04c5 03       		.byte	0x3
 2399 04c6 00000000 		.4byte	line
 2400 04ca 1C       		.uleb128 0x1c
 2401 04cb 7C020000 		.4byte	.LASF85
 2402 04cf 05       		.byte	0x5
 2403 04d0 25       		.byte	0x25
 2404 04d1 98040000 		.4byte	0x498
 2405 04d5 05       		.uleb128 0x5
 2406 04d6 03       		.byte	0x3
 2407 04d7 00000000 		.4byte	entry
 2408 04db 1D       		.uleb128 0x1d
 2409 04dc 96000000 		.4byte	0x96
 2410 04e0 EB040000 		.4byte	0x4eb
 2411 04e4 1E       		.uleb128 0x1e
 2412 04e5 7D000000 		.4byte	0x7d
 2413 04e9 3F       		.byte	0x3f
 2414 04ea 00       		.byte	0
 2415 04eb 1C       		.uleb128 0x1c
 2416 04ec 95000000 		.4byte	.LASF86
 2417 04f0 05       		.byte	0x5
 2418 04f1 26       		.byte	0x26
 2419 04f2 DB040000 		.4byte	0x4db
 2420 04f6 05       		.uleb128 0x5
 2421 04f7 03       		.byte	0x3
 2422 04f8 00000000 		.4byte	usbBuffer
 2423 04fc 1C       		.uleb128 0x1c
 2424 04fd 65000000 		.4byte	.LASF87
 2425 0501 05       		.byte	0x5
 2426 0502 3C       		.byte	0x3c
 2427 0503 E0000000 		.4byte	0xe0
 2428 0507 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 52


 2429 0508 03       		.byte	0x3
 2430 0509 00000000 		.4byte	system_state
 2431 050d 1D       		.uleb128 0x1d
 2432 050e 68000000 		.4byte	0x68
 2433 0512 23050000 		.4byte	0x523
 2434 0516 1E       		.uleb128 0x1e
 2435 0517 7D000000 		.4byte	0x7d
 2436 051b 0E       		.byte	0xe
 2437 051c 1E       		.uleb128 0x1e
 2438 051d 7D000000 		.4byte	0x7d
 2439 0521 12       		.byte	0x12
 2440 0522 00       		.byte	0
 2441 0523 1F       		.uleb128 0x1f
 2442 0524 6D617000 		.ascii	"map\000"
 2443 0528 07       		.byte	0x7
 2444 0529 04       		.byte	0x4
 2445 052a 0D050000 		.4byte	0x50d
 2446 052e 1C       		.uleb128 0x1c
 2447 052f 77050000 		.4byte	.LASF88
 2448 0533 01       		.byte	0x1
 2449 0534 2B       		.byte	0x2b
 2450 0535 B9010000 		.4byte	0x1b9
 2451 0539 05       		.uleb128 0x5
 2452 053a 03       		.byte	0x3
 2453 053b 00000000 		.4byte	currentDirection
 2454 053f 1C       		.uleb128 0x1c
 2455 0540 99020000 		.4byte	.LASF89
 2456 0544 01       		.byte	0x1
 2457 0545 2C       		.byte	0x2c
 2458 0546 B9010000 		.4byte	0x1b9
 2459 054a 05       		.uleb128 0x5
 2460 054b 03       		.byte	0x3
 2461 054c 00000000 		.4byte	previousDirection
 2462 0550 1C       		.uleb128 0x1c
 2463 0551 5F050000 		.4byte	.LASF90
 2464 0555 01       		.byte	0x1
 2465 0556 2D       		.byte	0x2d
 2466 0557 12020000 		.4byte	0x212
 2467 055b 05       		.uleb128 0x5
 2468 055c 03       		.byte	0x3
 2469 055d 00000000 		.4byte	currentOrientation
 2470 0561 1C       		.uleb128 0x1c
 2471 0562 03020000 		.4byte	.LASF91
 2472 0566 01       		.byte	0x1
 2473 0567 2E       		.byte	0x2e
 2474 0568 12020000 		.4byte	0x212
 2475 056c 05       		.uleb128 0x5
 2476 056d 03       		.byte	0x3
 2477 056e 00000000 		.4byte	previousOrientation
 2478 0572 1B       		.uleb128 0x1b
 2479 0573 733300   		.ascii	"s3\000"
 2480 0576 01       		.byte	0x1
 2481 0577 32       		.byte	0x32
 2482 0578 96000000 		.4byte	0x96
 2483 057c 05       		.uleb128 0x5
 2484 057d 03       		.byte	0x3
 2485 057e 00000000 		.4byte	s3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 53


 2486 0582 1B       		.uleb128 0x1b
 2487 0583 733400   		.ascii	"s4\000"
 2488 0586 01       		.byte	0x1
 2489 0587 33       		.byte	0x33
 2490 0588 96000000 		.4byte	0x96
 2491 058c 05       		.uleb128 0x5
 2492 058d 03       		.byte	0x3
 2493 058e 00000000 		.4byte	s4
 2494 0592 1B       		.uleb128 0x1b
 2495 0593 733500   		.ascii	"s5\000"
 2496 0596 01       		.byte	0x1
 2497 0597 34       		.byte	0x34
 2498 0598 96000000 		.4byte	0x96
 2499 059c 05       		.uleb128 0x5
 2500 059d 03       		.byte	0x3
 2501 059e 00000000 		.4byte	s5
 2502 05a2 1B       		.uleb128 0x1b
 2503 05a3 733600   		.ascii	"s6\000"
 2504 05a6 01       		.byte	0x1
 2505 05a7 35       		.byte	0x35
 2506 05a8 96000000 		.4byte	0x96
 2507 05ac 05       		.uleb128 0x5
 2508 05ad 03       		.byte	0x3
 2509 05ae 00000000 		.4byte	s6
 2510 05b2 1C       		.uleb128 0x1c
 2511 05b3 6A020000 		.4byte	.LASF92
 2512 05b7 01       		.byte	0x1
 2513 05b8 3A       		.byte	0x3a
 2514 05b9 AE000000 		.4byte	0xae
 2515 05bd 05       		.uleb128 0x5
 2516 05be 03       		.byte	0x3
 2517 05bf 00000000 		.4byte	totalMilliseconds
 2518 05c3 1C       		.uleb128 0x1c
 2519 05c4 AB020000 		.4byte	.LASF93
 2520 05c8 01       		.byte	0x1
 2521 05c9 3B       		.byte	0x3b
 2522 05ca D2000000 		.4byte	0xd2
 2523 05ce 05       		.uleb128 0x5
 2524 05cf 03       		.byte	0x3
 2525 05d0 00000000 		.4byte	totalDistance
 2526 05d4 1D       		.uleb128 0x1d
 2527 05d5 84000000 		.4byte	0x84
 2528 05d9 E4050000 		.4byte	0x5e4
 2529 05dd 1E       		.uleb128 0x1e
 2530 05de 7D000000 		.4byte	0x7d
 2531 05e2 44       		.byte	0x44
 2532 05e3 00       		.byte	0
 2533 05e4 1C       		.uleb128 0x1c
 2534 05e5 67040000 		.4byte	.LASF94
 2535 05e9 01       		.byte	0x1
 2536 05ea 3D       		.byte	0x3d
 2537 05eb D4050000 		.4byte	0x5d4
 2538 05ef 05       		.uleb128 0x5
 2539 05f0 03       		.byte	0x3
 2540 05f1 00000000 		.4byte	buffer
 2541 05f5 1C       		.uleb128 0x1c
 2542 05f6 18040000 		.4byte	.LASF95
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 54


 2543 05fa 01       		.byte	0x1
 2544 05fb 3E       		.byte	0x3e
 2545 05fc 68000000 		.4byte	0x68
 2546 0600 05       		.uleb128 0x5
 2547 0601 03       		.byte	0x3
 2548 0602 00000000 		.4byte	quadDec2Count
 2549 0606 1C       		.uleb128 0x1c
 2550 0607 31020000 		.4byte	.LASF96
 2551 060b 01       		.byte	0x1
 2552 060c 3F       		.byte	0x3f
 2553 060d 68000000 		.4byte	0x68
 2554 0611 05       		.uleb128 0x5
 2555 0612 03       		.byte	0x3
 2556 0613 00000000 		.4byte	timerInt
 2557 0617 1C       		.uleb128 0x1c
 2558 0618 B9020000 		.4byte	.LASF97
 2559 061c 01       		.byte	0x1
 2560 061d 40       		.byte	0x40
 2561 061e 68000000 		.4byte	0x68
 2562 0622 05       		.uleb128 0x5
 2563 0623 03       		.byte	0x3
 2564 0624 00000000 		.4byte	keepLedOn
 2565 0628 1C       		.uleb128 0x1c
 2566 0629 7B000000 		.4byte	.LASF98
 2567 062d 01       		.byte	0x1
 2568 062e 41       		.byte	0x41
 2569 062f AE000000 		.4byte	0xae
 2570 0633 05       		.uleb128 0x5
 2571 0634 03       		.byte	0x3
 2572 0635 00000000 		.4byte	stopBuffer
 2573 0639 1C       		.uleb128 0x1c
 2574 063a CC020000 		.4byte	.LASF99
 2575 063e 01       		.byte	0x1
 2576 063f C2       		.byte	0xc2
 2577 0640 D2000000 		.4byte	0xd2
 2578 0644 05       		.uleb128 0x5
 2579 0645 03       		.byte	0x3
 2580 0646 00000000 		.4byte	yBlocksize
 2581 064a 1C       		.uleb128 0x1c
 2582 064b CC010000 		.4byte	.LASF100
 2583 064f 01       		.byte	0x1
 2584 0650 C3       		.byte	0xc3
 2585 0651 D2000000 		.4byte	0xd2
 2586 0655 05       		.uleb128 0x5
 2587 0656 03       		.byte	0x3
 2588 0657 00000000 		.4byte	xBlocksize
 2589 065b 1C       		.uleb128 0x1c
 2590 065c A6040000 		.4byte	.LASF101
 2591 0660 01       		.byte	0x1
 2592 0661 C4       		.byte	0xc4
 2593 0662 96000000 		.4byte	0x96
 2594 0666 05       		.uleb128 0x5
 2595 0667 03       		.byte	0x3
 2596 0668 00000000 		.4byte	currentRow
 2597 066c 1C       		.uleb128 0x1c
 2598 066d 8E020000 		.4byte	.LASF102
 2599 0671 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 55


 2600 0672 C5       		.byte	0xc5
 2601 0673 96000000 		.4byte	0x96
 2602 0677 05       		.uleb128 0x5
 2603 0678 03       		.byte	0x3
 2604 0679 00000000 		.4byte	currentCol
 2605 067d 00       		.byte	0
 2606              		.section	.debug_abbrev,"",%progbits
 2607              	.Ldebug_abbrev0:
 2608 0000 01       		.uleb128 0x1
 2609 0001 11       		.uleb128 0x11
 2610 0002 01       		.byte	0x1
 2611 0003 25       		.uleb128 0x25
 2612 0004 0E       		.uleb128 0xe
 2613 0005 13       		.uleb128 0x13
 2614 0006 0B       		.uleb128 0xb
 2615 0007 03       		.uleb128 0x3
 2616 0008 0E       		.uleb128 0xe
 2617 0009 1B       		.uleb128 0x1b
 2618 000a 0E       		.uleb128 0xe
 2619 000b 55       		.uleb128 0x55
 2620 000c 17       		.uleb128 0x17
 2621 000d 11       		.uleb128 0x11
 2622 000e 01       		.uleb128 0x1
 2623 000f 10       		.uleb128 0x10
 2624 0010 17       		.uleb128 0x17
 2625 0011 00       		.byte	0
 2626 0012 00       		.byte	0
 2627 0013 02       		.uleb128 0x2
 2628 0014 24       		.uleb128 0x24
 2629 0015 00       		.byte	0
 2630 0016 0B       		.uleb128 0xb
 2631 0017 0B       		.uleb128 0xb
 2632 0018 3E       		.uleb128 0x3e
 2633 0019 0B       		.uleb128 0xb
 2634 001a 03       		.uleb128 0x3
 2635 001b 0E       		.uleb128 0xe
 2636 001c 00       		.byte	0
 2637 001d 00       		.byte	0
 2638 001e 03       		.uleb128 0x3
 2639 001f 16       		.uleb128 0x16
 2640 0020 00       		.byte	0
 2641 0021 03       		.uleb128 0x3
 2642 0022 0E       		.uleb128 0xe
 2643 0023 3A       		.uleb128 0x3a
 2644 0024 0B       		.uleb128 0xb
 2645 0025 3B       		.uleb128 0x3b
 2646 0026 0B       		.uleb128 0xb
 2647 0027 49       		.uleb128 0x49
 2648 0028 13       		.uleb128 0x13
 2649 0029 00       		.byte	0
 2650 002a 00       		.byte	0
 2651 002b 04       		.uleb128 0x4
 2652 002c 24       		.uleb128 0x24
 2653 002d 00       		.byte	0
 2654 002e 0B       		.uleb128 0xb
 2655 002f 0B       		.uleb128 0xb
 2656 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 56


 2657 0031 0B       		.uleb128 0xb
 2658 0032 03       		.uleb128 0x3
 2659 0033 08       		.uleb128 0x8
 2660 0034 00       		.byte	0
 2661 0035 00       		.byte	0
 2662 0036 05       		.uleb128 0x5
 2663 0037 16       		.uleb128 0x16
 2664 0038 00       		.byte	0
 2665 0039 03       		.uleb128 0x3
 2666 003a 0E       		.uleb128 0xe
 2667 003b 3A       		.uleb128 0x3a
 2668 003c 0B       		.uleb128 0xb
 2669 003d 3B       		.uleb128 0x3b
 2670 003e 05       		.uleb128 0x5
 2671 003f 49       		.uleb128 0x49
 2672 0040 13       		.uleb128 0x13
 2673 0041 00       		.byte	0
 2674 0042 00       		.byte	0
 2675 0043 06       		.uleb128 0x6
 2676 0044 13       		.uleb128 0x13
 2677 0045 01       		.byte	0x1
 2678 0046 03       		.uleb128 0x3
 2679 0047 0E       		.uleb128 0xe
 2680 0048 0B       		.uleb128 0xb
 2681 0049 0B       		.uleb128 0xb
 2682 004a 3A       		.uleb128 0x3a
 2683 004b 0B       		.uleb128 0xb
 2684 004c 3B       		.uleb128 0x3b
 2685 004d 0B       		.uleb128 0xb
 2686 004e 01       		.uleb128 0x1
 2687 004f 13       		.uleb128 0x13
 2688 0050 00       		.byte	0
 2689 0051 00       		.byte	0
 2690 0052 07       		.uleb128 0x7
 2691 0053 0D       		.uleb128 0xd
 2692 0054 00       		.byte	0
 2693 0055 03       		.uleb128 0x3
 2694 0056 0E       		.uleb128 0xe
 2695 0057 3A       		.uleb128 0x3a
 2696 0058 0B       		.uleb128 0xb
 2697 0059 3B       		.uleb128 0x3b
 2698 005a 0B       		.uleb128 0xb
 2699 005b 49       		.uleb128 0x49
 2700 005c 13       		.uleb128 0x13
 2701 005d 38       		.uleb128 0x38
 2702 005e 0B       		.uleb128 0xb
 2703 005f 00       		.byte	0
 2704 0060 00       		.byte	0
 2705 0061 08       		.uleb128 0x8
 2706 0062 04       		.uleb128 0x4
 2707 0063 01       		.byte	0x1
 2708 0064 03       		.uleb128 0x3
 2709 0065 0E       		.uleb128 0xe
 2710 0066 0B       		.uleb128 0xb
 2711 0067 0B       		.uleb128 0xb
 2712 0068 49       		.uleb128 0x49
 2713 0069 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 57


 2714 006a 3A       		.uleb128 0x3a
 2715 006b 0B       		.uleb128 0xb
 2716 006c 3B       		.uleb128 0x3b
 2717 006d 0B       		.uleb128 0xb
 2718 006e 01       		.uleb128 0x1
 2719 006f 13       		.uleb128 0x13
 2720 0070 00       		.byte	0
 2721 0071 00       		.byte	0
 2722 0072 09       		.uleb128 0x9
 2723 0073 28       		.uleb128 0x28
 2724 0074 00       		.byte	0
 2725 0075 03       		.uleb128 0x3
 2726 0076 0E       		.uleb128 0xe
 2727 0077 1C       		.uleb128 0x1c
 2728 0078 0B       		.uleb128 0xb
 2729 0079 00       		.byte	0
 2730 007a 00       		.byte	0
 2731 007b 0A       		.uleb128 0xa
 2732 007c 28       		.uleb128 0x28
 2733 007d 00       		.byte	0
 2734 007e 03       		.uleb128 0x3
 2735 007f 08       		.uleb128 0x8
 2736 0080 1C       		.uleb128 0x1c
 2737 0081 0B       		.uleb128 0xb
 2738 0082 00       		.byte	0
 2739 0083 00       		.byte	0
 2740 0084 0B       		.uleb128 0xb
 2741 0085 2E       		.uleb128 0x2e
 2742 0086 01       		.byte	0x1
 2743 0087 3F       		.uleb128 0x3f
 2744 0088 19       		.uleb128 0x19
 2745 0089 03       		.uleb128 0x3
 2746 008a 0E       		.uleb128 0xe
 2747 008b 3A       		.uleb128 0x3a
 2748 008c 0B       		.uleb128 0xb
 2749 008d 3B       		.uleb128 0x3b
 2750 008e 0B       		.uleb128 0xb
 2751 008f 27       		.uleb128 0x27
 2752 0090 19       		.uleb128 0x19
 2753 0091 11       		.uleb128 0x11
 2754 0092 01       		.uleb128 0x1
 2755 0093 12       		.uleb128 0x12
 2756 0094 06       		.uleb128 0x6
 2757 0095 40       		.uleb128 0x40
 2758 0096 18       		.uleb128 0x18
 2759 0097 9642     		.uleb128 0x2116
 2760 0099 19       		.uleb128 0x19
 2761 009a 01       		.uleb128 0x1
 2762 009b 13       		.uleb128 0x13
 2763 009c 00       		.byte	0
 2764 009d 00       		.byte	0
 2765 009e 0C       		.uleb128 0xc
 2766 009f 0B       		.uleb128 0xb
 2767 00a0 01       		.byte	0x1
 2768 00a1 11       		.uleb128 0x11
 2769 00a2 01       		.uleb128 0x1
 2770 00a3 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 58


 2771 00a4 06       		.uleb128 0x6
 2772 00a5 00       		.byte	0
 2773 00a6 00       		.byte	0
 2774 00a7 0D       		.uleb128 0xd
 2775 00a8 34       		.uleb128 0x34
 2776 00a9 00       		.byte	0
 2777 00aa 03       		.uleb128 0x3
 2778 00ab 0E       		.uleb128 0xe
 2779 00ac 3A       		.uleb128 0x3a
 2780 00ad 0B       		.uleb128 0xb
 2781 00ae 3B       		.uleb128 0x3b
 2782 00af 0B       		.uleb128 0xb
 2783 00b0 49       		.uleb128 0x49
 2784 00b1 13       		.uleb128 0x13
 2785 00b2 02       		.uleb128 0x2
 2786 00b3 18       		.uleb128 0x18
 2787 00b4 00       		.byte	0
 2788 00b5 00       		.byte	0
 2789 00b6 0E       		.uleb128 0xe
 2790 00b7 2E       		.uleb128 0x2e
 2791 00b8 00       		.byte	0
 2792 00b9 3F       		.uleb128 0x3f
 2793 00ba 19       		.uleb128 0x19
 2794 00bb 03       		.uleb128 0x3
 2795 00bc 0E       		.uleb128 0xe
 2796 00bd 3A       		.uleb128 0x3a
 2797 00be 0B       		.uleb128 0xb
 2798 00bf 3B       		.uleb128 0x3b
 2799 00c0 0B       		.uleb128 0xb
 2800 00c1 27       		.uleb128 0x27
 2801 00c2 19       		.uleb128 0x19
 2802 00c3 11       		.uleb128 0x11
 2803 00c4 01       		.uleb128 0x1
 2804 00c5 12       		.uleb128 0x12
 2805 00c6 06       		.uleb128 0x6
 2806 00c7 40       		.uleb128 0x40
 2807 00c8 18       		.uleb128 0x18
 2808 00c9 9742     		.uleb128 0x2117
 2809 00cb 19       		.uleb128 0x19
 2810 00cc 00       		.byte	0
 2811 00cd 00       		.byte	0
 2812 00ce 0F       		.uleb128 0xf
 2813 00cf 2E       		.uleb128 0x2e
 2814 00d0 00       		.byte	0
 2815 00d1 3F       		.uleb128 0x3f
 2816 00d2 19       		.uleb128 0x19
 2817 00d3 03       		.uleb128 0x3
 2818 00d4 0E       		.uleb128 0xe
 2819 00d5 3A       		.uleb128 0x3a
 2820 00d6 0B       		.uleb128 0xb
 2821 00d7 3B       		.uleb128 0x3b
 2822 00d8 0B       		.uleb128 0xb
 2823 00d9 27       		.uleb128 0x27
 2824 00da 19       		.uleb128 0x19
 2825 00db 11       		.uleb128 0x11
 2826 00dc 01       		.uleb128 0x1
 2827 00dd 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 59


 2828 00de 06       		.uleb128 0x6
 2829 00df 40       		.uleb128 0x40
 2830 00e0 18       		.uleb128 0x18
 2831 00e1 9642     		.uleb128 0x2116
 2832 00e3 19       		.uleb128 0x19
 2833 00e4 00       		.byte	0
 2834 00e5 00       		.byte	0
 2835 00e6 10       		.uleb128 0x10
 2836 00e7 2E       		.uleb128 0x2e
 2837 00e8 00       		.byte	0
 2838 00e9 3F       		.uleb128 0x3f
 2839 00ea 19       		.uleb128 0x19
 2840 00eb 03       		.uleb128 0x3
 2841 00ec 0E       		.uleb128 0xe
 2842 00ed 3A       		.uleb128 0x3a
 2843 00ee 0B       		.uleb128 0xb
 2844 00ef 3B       		.uleb128 0x3b
 2845 00f0 0B       		.uleb128 0xb
 2846 00f1 49       		.uleb128 0x49
 2847 00f2 13       		.uleb128 0x13
 2848 00f3 11       		.uleb128 0x11
 2849 00f4 01       		.uleb128 0x1
 2850 00f5 12       		.uleb128 0x12
 2851 00f6 06       		.uleb128 0x6
 2852 00f7 40       		.uleb128 0x40
 2853 00f8 18       		.uleb128 0x18
 2854 00f9 9642     		.uleb128 0x2116
 2855 00fb 19       		.uleb128 0x19
 2856 00fc 00       		.byte	0
 2857 00fd 00       		.byte	0
 2858 00fe 11       		.uleb128 0x11
 2859 00ff 2E       		.uleb128 0x2e
 2860 0100 01       		.byte	0x1
 2861 0101 3F       		.uleb128 0x3f
 2862 0102 19       		.uleb128 0x19
 2863 0103 03       		.uleb128 0x3
 2864 0104 0E       		.uleb128 0xe
 2865 0105 3A       		.uleb128 0x3a
 2866 0106 0B       		.uleb128 0xb
 2867 0107 3B       		.uleb128 0x3b
 2868 0108 0B       		.uleb128 0xb
 2869 0109 27       		.uleb128 0x27
 2870 010a 19       		.uleb128 0x19
 2871 010b 49       		.uleb128 0x49
 2872 010c 13       		.uleb128 0x13
 2873 010d 11       		.uleb128 0x11
 2874 010e 01       		.uleb128 0x1
 2875 010f 12       		.uleb128 0x12
 2876 0110 06       		.uleb128 0x6
 2877 0111 40       		.uleb128 0x40
 2878 0112 18       		.uleb128 0x18
 2879 0113 9642     		.uleb128 0x2116
 2880 0115 19       		.uleb128 0x19
 2881 0116 01       		.uleb128 0x1
 2882 0117 13       		.uleb128 0x13
 2883 0118 00       		.byte	0
 2884 0119 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 60


 2885 011a 12       		.uleb128 0x12
 2886 011b 05       		.uleb128 0x5
 2887 011c 00       		.byte	0
 2888 011d 03       		.uleb128 0x3
 2889 011e 0E       		.uleb128 0xe
 2890 011f 3A       		.uleb128 0x3a
 2891 0120 0B       		.uleb128 0xb
 2892 0121 3B       		.uleb128 0x3b
 2893 0122 0B       		.uleb128 0xb
 2894 0123 49       		.uleb128 0x49
 2895 0124 13       		.uleb128 0x13
 2896 0125 02       		.uleb128 0x2
 2897 0126 18       		.uleb128 0x18
 2898 0127 00       		.byte	0
 2899 0128 00       		.byte	0
 2900 0129 13       		.uleb128 0x13
 2901 012a 34       		.uleb128 0x34
 2902 012b 00       		.byte	0
 2903 012c 03       		.uleb128 0x3
 2904 012d 08       		.uleb128 0x8
 2905 012e 3A       		.uleb128 0x3a
 2906 012f 0B       		.uleb128 0xb
 2907 0130 3B       		.uleb128 0x3b
 2908 0131 0B       		.uleb128 0xb
 2909 0132 49       		.uleb128 0x49
 2910 0133 13       		.uleb128 0x13
 2911 0134 02       		.uleb128 0x2
 2912 0135 18       		.uleb128 0x18
 2913 0136 00       		.byte	0
 2914 0137 00       		.byte	0
 2915 0138 14       		.uleb128 0x14
 2916 0139 2E       		.uleb128 0x2e
 2917 013a 00       		.byte	0
 2918 013b 3F       		.uleb128 0x3f
 2919 013c 19       		.uleb128 0x19
 2920 013d 03       		.uleb128 0x3
 2921 013e 0E       		.uleb128 0xe
 2922 013f 3A       		.uleb128 0x3a
 2923 0140 0B       		.uleb128 0xb
 2924 0141 3B       		.uleb128 0x3b
 2925 0142 0B       		.uleb128 0xb
 2926 0143 11       		.uleb128 0x11
 2927 0144 01       		.uleb128 0x1
 2928 0145 12       		.uleb128 0x12
 2929 0146 06       		.uleb128 0x6
 2930 0147 40       		.uleb128 0x40
 2931 0148 18       		.uleb128 0x18
 2932 0149 9742     		.uleb128 0x2117
 2933 014b 19       		.uleb128 0x19
 2934 014c 00       		.byte	0
 2935 014d 00       		.byte	0
 2936 014e 15       		.uleb128 0x15
 2937 014f 2E       		.uleb128 0x2e
 2938 0150 01       		.byte	0x1
 2939 0151 3F       		.uleb128 0x3f
 2940 0152 19       		.uleb128 0x19
 2941 0153 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 61


 2942 0154 0E       		.uleb128 0xe
 2943 0155 3A       		.uleb128 0x3a
 2944 0156 0B       		.uleb128 0xb
 2945 0157 3B       		.uleb128 0x3b
 2946 0158 0B       		.uleb128 0xb
 2947 0159 49       		.uleb128 0x49
 2948 015a 13       		.uleb128 0x13
 2949 015b 11       		.uleb128 0x11
 2950 015c 01       		.uleb128 0x1
 2951 015d 12       		.uleb128 0x12
 2952 015e 06       		.uleb128 0x6
 2953 015f 40       		.uleb128 0x40
 2954 0160 18       		.uleb128 0x18
 2955 0161 9742     		.uleb128 0x2117
 2956 0163 19       		.uleb128 0x19
 2957 0164 01       		.uleb128 0x1
 2958 0165 13       		.uleb128 0x13
 2959 0166 00       		.byte	0
 2960 0167 00       		.byte	0
 2961 0168 16       		.uleb128 0x16
 2962 0169 2E       		.uleb128 0x2e
 2963 016a 01       		.byte	0x1
 2964 016b 3F       		.uleb128 0x3f
 2965 016c 19       		.uleb128 0x19
 2966 016d 03       		.uleb128 0x3
 2967 016e 0E       		.uleb128 0xe
 2968 016f 3A       		.uleb128 0x3a
 2969 0170 0B       		.uleb128 0xb
 2970 0171 3B       		.uleb128 0x3b
 2971 0172 05       		.uleb128 0x5
 2972 0173 49       		.uleb128 0x49
 2973 0174 13       		.uleb128 0x13
 2974 0175 11       		.uleb128 0x11
 2975 0176 01       		.uleb128 0x1
 2976 0177 12       		.uleb128 0x12
 2977 0178 06       		.uleb128 0x6
 2978 0179 40       		.uleb128 0x40
 2979 017a 18       		.uleb128 0x18
 2980 017b 9642     		.uleb128 0x2116
 2981 017d 19       		.uleb128 0x19
 2982 017e 01       		.uleb128 0x1
 2983 017f 13       		.uleb128 0x13
 2984 0180 00       		.byte	0
 2985 0181 00       		.byte	0
 2986 0182 17       		.uleb128 0x17
 2987 0183 34       		.uleb128 0x34
 2988 0184 00       		.byte	0
 2989 0185 03       		.uleb128 0x3
 2990 0186 0E       		.uleb128 0xe
 2991 0187 3A       		.uleb128 0x3a
 2992 0188 0B       		.uleb128 0xb
 2993 0189 3B       		.uleb128 0x3b
 2994 018a 05       		.uleb128 0x5
 2995 018b 49       		.uleb128 0x49
 2996 018c 13       		.uleb128 0x13
 2997 018d 02       		.uleb128 0x2
 2998 018e 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 62


 2999 018f 00       		.byte	0
 3000 0190 00       		.byte	0
 3001 0191 18       		.uleb128 0x18
 3002 0192 2E       		.uleb128 0x2e
 3003 0193 00       		.byte	0
 3004 0194 3F       		.uleb128 0x3f
 3005 0195 19       		.uleb128 0x19
 3006 0196 03       		.uleb128 0x3
 3007 0197 0E       		.uleb128 0xe
 3008 0198 3A       		.uleb128 0x3a
 3009 0199 0B       		.uleb128 0xb
 3010 019a 3B       		.uleb128 0x3b
 3011 019b 05       		.uleb128 0x5
 3012 019c 11       		.uleb128 0x11
 3013 019d 01       		.uleb128 0x1
 3014 019e 12       		.uleb128 0x12
 3015 019f 06       		.uleb128 0x6
 3016 01a0 40       		.uleb128 0x40
 3017 01a1 18       		.uleb128 0x18
 3018 01a2 9642     		.uleb128 0x2116
 3019 01a4 19       		.uleb128 0x19
 3020 01a5 00       		.byte	0
 3021 01a6 00       		.byte	0
 3022 01a7 19       		.uleb128 0x19
 3023 01a8 34       		.uleb128 0x34
 3024 01a9 00       		.byte	0
 3025 01aa 03       		.uleb128 0x3
 3026 01ab 0E       		.uleb128 0xe
 3027 01ac 3A       		.uleb128 0x3a
 3028 01ad 0B       		.uleb128 0xb
 3029 01ae 3B       		.uleb128 0x3b
 3030 01af 05       		.uleb128 0x5
 3031 01b0 49       		.uleb128 0x49
 3032 01b1 13       		.uleb128 0x13
 3033 01b2 3F       		.uleb128 0x3f
 3034 01b3 19       		.uleb128 0x19
 3035 01b4 3C       		.uleb128 0x3c
 3036 01b5 19       		.uleb128 0x19
 3037 01b6 00       		.byte	0
 3038 01b7 00       		.byte	0
 3039 01b8 1A       		.uleb128 0x1a
 3040 01b9 35       		.uleb128 0x35
 3041 01ba 00       		.byte	0
 3042 01bb 49       		.uleb128 0x49
 3043 01bc 13       		.uleb128 0x13
 3044 01bd 00       		.byte	0
 3045 01be 00       		.byte	0
 3046 01bf 1B       		.uleb128 0x1b
 3047 01c0 34       		.uleb128 0x34
 3048 01c1 00       		.byte	0
 3049 01c2 03       		.uleb128 0x3
 3050 01c3 08       		.uleb128 0x8
 3051 01c4 3A       		.uleb128 0x3a
 3052 01c5 0B       		.uleb128 0xb
 3053 01c6 3B       		.uleb128 0x3b
 3054 01c7 0B       		.uleb128 0xb
 3055 01c8 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 63


 3056 01c9 13       		.uleb128 0x13
 3057 01ca 3F       		.uleb128 0x3f
 3058 01cb 19       		.uleb128 0x19
 3059 01cc 02       		.uleb128 0x2
 3060 01cd 18       		.uleb128 0x18
 3061 01ce 00       		.byte	0
 3062 01cf 00       		.byte	0
 3063 01d0 1C       		.uleb128 0x1c
 3064 01d1 34       		.uleb128 0x34
 3065 01d2 00       		.byte	0
 3066 01d3 03       		.uleb128 0x3
 3067 01d4 0E       		.uleb128 0xe
 3068 01d5 3A       		.uleb128 0x3a
 3069 01d6 0B       		.uleb128 0xb
 3070 01d7 3B       		.uleb128 0x3b
 3071 01d8 0B       		.uleb128 0xb
 3072 01d9 49       		.uleb128 0x49
 3073 01da 13       		.uleb128 0x13
 3074 01db 3F       		.uleb128 0x3f
 3075 01dc 19       		.uleb128 0x19
 3076 01dd 02       		.uleb128 0x2
 3077 01de 18       		.uleb128 0x18
 3078 01df 00       		.byte	0
 3079 01e0 00       		.byte	0
 3080 01e1 1D       		.uleb128 0x1d
 3081 01e2 01       		.uleb128 0x1
 3082 01e3 01       		.byte	0x1
 3083 01e4 49       		.uleb128 0x49
 3084 01e5 13       		.uleb128 0x13
 3085 01e6 01       		.uleb128 0x1
 3086 01e7 13       		.uleb128 0x13
 3087 01e8 00       		.byte	0
 3088 01e9 00       		.byte	0
 3089 01ea 1E       		.uleb128 0x1e
 3090 01eb 21       		.uleb128 0x21
 3091 01ec 00       		.byte	0
 3092 01ed 49       		.uleb128 0x49
 3093 01ee 13       		.uleb128 0x13
 3094 01ef 2F       		.uleb128 0x2f
 3095 01f0 0B       		.uleb128 0xb
 3096 01f1 00       		.byte	0
 3097 01f2 00       		.byte	0
 3098 01f3 1F       		.uleb128 0x1f
 3099 01f4 34       		.uleb128 0x34
 3100 01f5 00       		.byte	0
 3101 01f6 03       		.uleb128 0x3
 3102 01f7 08       		.uleb128 0x8
 3103 01f8 3A       		.uleb128 0x3a
 3104 01f9 0B       		.uleb128 0xb
 3105 01fa 3B       		.uleb128 0x3b
 3106 01fb 0B       		.uleb128 0xb
 3107 01fc 49       		.uleb128 0x49
 3108 01fd 13       		.uleb128 0x13
 3109 01fe 3F       		.uleb128 0x3f
 3110 01ff 19       		.uleb128 0x19
 3111 0200 3C       		.uleb128 0x3c
 3112 0201 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 64


 3113 0202 00       		.byte	0
 3114 0203 00       		.byte	0
 3115 0204 00       		.byte	0
 3116              		.section	.debug_aranges,"",%progbits
 3117 0000 74000000 		.4byte	0x74
 3118 0004 0200     		.2byte	0x2
 3119 0006 00000000 		.4byte	.Ldebug_info0
 3120 000a 04       		.byte	0x4
 3121 000b 00       		.byte	0
 3122 000c 0000     		.2byte	0
 3123 000e 0000     		.2byte	0
 3124 0010 00000000 		.4byte	.LFB64
 3125 0014 E4000000 		.4byte	.LFE64-.LFB64
 3126 0018 00000000 		.4byte	.LFB65
 3127 001c 18000000 		.4byte	.LFE65-.LFB65
 3128 0020 00000000 		.4byte	.LFB66
 3129 0024 18000000 		.4byte	.LFE66-.LFB66
 3130 0028 00000000 		.4byte	.LFB67
 3131 002c 18000000 		.4byte	.LFE67-.LFB67
 3132 0030 00000000 		.4byte	.LFB68
 3133 0034 18000000 		.4byte	.LFE68-.LFB68
 3134 0038 00000000 		.4byte	.LFB69
 3135 003c 38000000 		.4byte	.LFE69-.LFB69
 3136 0040 00000000 		.4byte	.LFB70
 3137 0044 A0000000 		.4byte	.LFE70-.LFB70
 3138 0048 00000000 		.4byte	.LFB71
 3139 004c 54000000 		.4byte	.LFE71-.LFB71
 3140 0050 00000000 		.4byte	.LFB72
 3141 0054 34000000 		.4byte	.LFE72-.LFB72
 3142 0058 00000000 		.4byte	.LFB73
 3143 005c 94040000 		.4byte	.LFE73-.LFB73
 3144 0060 00000000 		.4byte	.LFB74
 3145 0064 34010000 		.4byte	.LFE74-.LFB74
 3146 0068 00000000 		.4byte	.LFB75
 3147 006c 98000000 		.4byte	.LFE75-.LFB75
 3148 0070 00000000 		.4byte	0
 3149 0074 00000000 		.4byte	0
 3150              		.section	.debug_ranges,"",%progbits
 3151              	.Ldebug_ranges0:
 3152 0000 00000000 		.4byte	.LFB64
 3153 0004 E4000000 		.4byte	.LFE64
 3154 0008 00000000 		.4byte	.LFB65
 3155 000c 18000000 		.4byte	.LFE65
 3156 0010 00000000 		.4byte	.LFB66
 3157 0014 18000000 		.4byte	.LFE66
 3158 0018 00000000 		.4byte	.LFB67
 3159 001c 18000000 		.4byte	.LFE67
 3160 0020 00000000 		.4byte	.LFB68
 3161 0024 18000000 		.4byte	.LFE68
 3162 0028 00000000 		.4byte	.LFB69
 3163 002c 38000000 		.4byte	.LFE69
 3164 0030 00000000 		.4byte	.LFB70
 3165 0034 A0000000 		.4byte	.LFE70
 3166 0038 00000000 		.4byte	.LFB71
 3167 003c 54000000 		.4byte	.LFE71
 3168 0040 00000000 		.4byte	.LFB72
 3169 0044 34000000 		.4byte	.LFE72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 65


 3170 0048 00000000 		.4byte	.LFB73
 3171 004c 94040000 		.4byte	.LFE73
 3172 0050 00000000 		.4byte	.LFB74
 3173 0054 34010000 		.4byte	.LFE74
 3174 0058 00000000 		.4byte	.LFB75
 3175 005c 98000000 		.4byte	.LFE75
 3176 0060 00000000 		.4byte	0
 3177 0064 00000000 		.4byte	0
 3178              		.section	.debug_line,"",%progbits
 3179              	.Ldebug_line0:
 3180 0000 84030000 		.section	.debug_str,"MS",%progbits,1
 3180      02005F01 
 3180      00000201 
 3180      FB0E0D00 
 3180      01010101 
 3181              	.LASF58:
 3182 0000 53365F44 		.ascii	"S6_DETECTED\000"
 3182      45544543 
 3182      54454400 
 3183              	.LASF40:
 3184 000c 5475726E 		.ascii	"TurnLeft\000"
 3184      4C656674 
 3184      00
 3185              	.LASF70:
 3186 0015 74735F65 		.ascii	"ts_enc\000"
 3186      6E6300
 3187              	.LASF48:
 3188 001c 466F7277 		.ascii	"ForwardAfterTurn\000"
 3188      61726441 
 3188      66746572 
 3188      5475726E 
 3188      00
 3189              	.LASF79:
 3190 002d 666C6167 		.ascii	"flag_packet\000"
 3190      5F706163 
 3190      6B657400 
 3191              	.LASF45:
 3192 0039 77616974 		.ascii	"waitForTurn\000"
 3192      466F7254 
 3192      75726E00 
 3193              	.LASF76:
 3194 0045 666C6167 		.ascii	"flag_ts_speed\000"
 3194      5F74735F 
 3194      73706565 
 3194      6400
 3195              	.LASF34:
 3196 0053 67325F78 		.ascii	"g2_xpos\000"
 3196      706F7300 
 3197              	.LASF2:
 3198 005b 73686F72 		.ascii	"short int\000"
 3198      7420696E 
 3198      7400
 3199              	.LASF87:
 3200 0065 73797374 		.ascii	"system_state\000"
 3200      656D5F73 
 3200      74617465 
 3200      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 66


 3201              	.LASF10:
 3202 0072 73697A65 		.ascii	"sizetype\000"
 3202      74797065 
 3202      00
 3203              	.LASF98:
 3204 007b 73746F70 		.ascii	"stopBuffer\000"
 3204      42756666 
 3204      657200
 3205              	.LASF50:
 3206 0086 44697265 		.ascii	"DirectionState\000"
 3206      6374696F 
 3206      6E537461 
 3206      746500
 3207              	.LASF86:
 3208 0095 75736242 		.ascii	"usbBuffer\000"
 3208      75666665 
 3208      7200
 3209              	.LASF103:
 3210 009f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3210      43313120 
 3210      352E342E 
 3210      31203230 
 3210      31363036 
 3211 00d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3211      20726576 
 3211      6973696F 
 3211      6E203233 
 3211      37373135 
 3212 0105 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3212      66756E63 
 3212      74696F6E 
 3212      2D736563 
 3212      74696F6E 
 3213              	.LASF60:
 3214 012d 6D61696E 		.ascii	"main\000"
 3214      00
 3215              	.LASF46:
 3216 0132 77616974 		.ascii	"waitForRightTurn\000"
 3216      466F7252 
 3216      69676874 
 3216      5475726E 
 3216      00
 3217              	.LASF63:
 3218 0143 4765744E 		.ascii	"GetNextStep\000"
 3218      65787453 
 3218      74657000 
 3219              	.LASF56:
 3220 014f 53345F44 		.ascii	"S4_DETECTED\000"
 3220      45544543 
 3220      54454400 
 3221              	.LASF41:
 3222 015b 41646A75 		.ascii	"AdjustToTheLeft\000"
 3222      7374546F 
 3222      5468654C 
 3222      65667400 
 3223              	.LASF15:
 3224 016b 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 67


 3224      313600
 3225              	.LASF22:
 3226 0172 696E6465 		.ascii	"index\000"
 3226      7800
 3227              	.LASF62:
 3228 0178 73706565 		.ascii	"speedTimer\000"
 3228      6454696D 
 3228      657200
 3229              	.LASF18:
 3230 0183 696E7431 		.ascii	"int16\000"
 3230      3600
 3231              	.LASF14:
 3232 0189 75696E74 		.ascii	"uint8\000"
 3232      3800
 3233              	.LASF33:
 3234 018f 67315F64 		.ascii	"g1_direction\000"
 3234      69726563 
 3234      74696F6E 
 3234      00
 3235              	.LASF84:
 3236 019c 6C696E65 		.ascii	"line\000"
 3236      00
 3237              	.LASF19:
 3238 01a1 666C6F61 		.ascii	"float\000"
 3238      7400
 3239              	.LASF54:
 3240 01a7 52696768 		.ascii	"Right\000"
 3240      7400
 3241              	.LASF61:
 3242 01ad 6E657744 		.ascii	"newDistance\000"
 3242      69737461 
 3242      6E636500 
 3243              	.LASF6:
 3244 01b9 6C6F6E67 		.ascii	"long long int\000"
 3244      206C6F6E 
 3244      6720696E 
 3244      7400
 3245              	.LASF17:
 3246 01c7 696E7438 		.ascii	"int8\000"
 3246      00
 3247              	.LASF100:
 3248 01cc 78426C6F 		.ascii	"xBlocksize\000"
 3248      636B7369 
 3248      7A6500
 3249              	.LASF75:
 3250 01d7 666C6167 		.ascii	"flag_ts_update\000"
 3250      5F74735F 
 3250      75706461 
 3250      746500
 3251              	.LASF35:
 3252 01e6 67325F79 		.ascii	"g2_ypos\000"
 3252      706F7300 
 3253              	.LASF29:
 3254 01ee 67305F64 		.ascii	"g0_direction\000"
 3254      69726563 
 3254      74696F6E 
 3254      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 68


 3255              	.LASF26:
 3256 01fb 67305F78 		.ascii	"g0_xpos\000"
 3256      706F7300 
 3257              	.LASF91:
 3258 0203 70726576 		.ascii	"previousOrientation\000"
 3258      696F7573 
 3258      4F726965 
 3258      6E746174 
 3258      696F6E00 
 3259              	.LASF53:
 3260 0217 4C656674 		.ascii	"Left\000"
 3260      00
 3261              	.LASF65:
 3262 021c 43686563 		.ascii	"CheckSensorDirection\000"
 3262      6B53656E 
 3262      736F7244 
 3262      69726563 
 3262      74696F6E 
 3263              	.LASF96:
 3264 0231 74696D65 		.ascii	"timerInt\000"
 3264      72496E74 
 3264      00
 3265              	.LASF77:
 3266 023a 666C6167 		.ascii	"flag_ts_display\000"
 3266      5F74735F 
 3266      64697370 
 3266      6C617900 
 3267              	.LASF78:
 3268 024a 666C6167 		.ascii	"flag_rx\000"
 3268      5F727800 
 3269              	.LASF66:
 3270 0252 626C6F63 		.ascii	"blocksize\000"
 3270      6B73697A 
 3270      6500
 3271              	.LASF1:
 3272 025c 756E7369 		.ascii	"unsigned char\000"
 3272      676E6564 
 3272      20636861 
 3272      7200
 3273              	.LASF92:
 3274 026a 746F7461 		.ascii	"totalMilliseconds\000"
 3274      6C4D696C 
 3274      6C697365 
 3274      636F6E64 
 3274      7300
 3275              	.LASF85:
 3276 027c 656E7472 		.ascii	"entry\000"
 3276      7900
 3277              	.LASF9:
 3278 0282 6C6F6E67 		.ascii	"long double\000"
 3278      20646F75 
 3278      626C6500 
 3279              	.LASF102:
 3280 028e 63757272 		.ascii	"currentCol\000"
 3280      656E7443 
 3280      6F6C00
 3281              	.LASF89:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 69


 3282 0299 70726576 		.ascii	"previousDirection\000"
 3282      696F7573 
 3282      44697265 
 3282      6374696F 
 3282      6E00
 3283              	.LASF93:
 3284 02ab 746F7461 		.ascii	"totalDistance\000"
 3284      6C446973 
 3284      74616E63 
 3284      6500
 3285              	.LASF97:
 3286 02b9 6B656570 		.ascii	"keepLedOn\000"
 3286      4C65644F 
 3286      6E00
 3287              	.LASF28:
 3288 02c3 67305F73 		.ascii	"g0_speed\000"
 3288      70656564 
 3288      00
 3289              	.LASF99:
 3290 02cc 79426C6F 		.ascii	"yBlocksize\000"
 3290      636B7369 
 3290      7A6500
 3291              	.LASF81:
 3292 02d7 64617461 		.ascii	"dataready_flag\000"
 3292      72656164 
 3292      795F666C 
 3292      616700
 3293              	.LASF30:
 3294 02e6 67315F78 		.ascii	"g1_xpos\000"
 3294      706F7300 
 3295              	.LASF0:
 3296 02ee 7369676E 		.ascii	"signed char\000"
 3296      65642063 
 3296      68617200 
 3297              	.LASF13:
 3298 02fa 696E7433 		.ascii	"int32_t\000"
 3298      325F7400 
 3299              	.LASF7:
 3300 0302 6C6F6E67 		.ascii	"long long unsigned int\000"
 3300      206C6F6E 
 3300      6720756E 
 3300      7369676E 
 3300      65642069 
 3301              	.LASF42:
 3302 0319 41646A75 		.ascii	"AdjustToTheRight\000"
 3302      7374546F 
 3302      54686552 
 3302      69676874 
 3302      00
 3303              	.LASF8:
 3304 032a 756E7369 		.ascii	"unsigned int\000"
 3304      676E6564 
 3304      20696E74 
 3304      00
 3305              	.LASF71:
 3306 0337 74735F75 		.ascii	"ts_update\000"
 3306      70646174 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 70


 3306      6500
 3307              	.LASF80:
 3308 0341 666C6167 		.ascii	"flag_KB_string\000"
 3308      5F4B425F 
 3308      73747269 
 3308      6E6700
 3309              	.LASF68:
 3310 0350 53657452 		.ascii	"SetRobotMovement\000"
 3310      6F626F74 
 3310      4D6F7665 
 3310      6D656E74 
 3310      00
 3311              	.LASF59:
 3312 0361 54494D45 		.ascii	"TIMER_FINISH\000"
 3312      525F4649 
 3312      4E495348 
 3312      00
 3313              	.LASF36:
 3314 036e 67325F73 		.ascii	"g2_speed\000"
 3314      70656564 
 3314      00
 3315              	.LASF57:
 3316 0377 53355F44 		.ascii	"S5_DETECTED\000"
 3316      45544543 
 3316      54454400 
 3317              	.LASF3:
 3318 0383 73686F72 		.ascii	"short unsigned int\000"
 3318      7420756E 
 3318      7369676E 
 3318      65642069 
 3318      6E7400
 3319              	.LASF106:
 3320 0396 64617461 		.ascii	"data_main\000"
 3320      5F6D6169 
 3320      6E00
 3321              	.LASF67:
 3322 03a0 52657365 		.ascii	"ResetSensorFlags\000"
 3322      7453656E 
 3322      736F7246 
 3322      6C616773 
 3322      00
 3323              	.LASF11:
 3324 03b1 63686172 		.ascii	"char\000"
 3324      00
 3325              	.LASF4:
 3326 03b6 6C6F6E67 		.ascii	"long int\000"
 3326      20696E74 
 3326      00
 3327              	.LASF38:
 3328 03bf 466F7277 		.ascii	"Forward\000"
 3328      61726400 
 3329              	.LASF105:
 3330 03c7 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3330      6F63756D 
 3330      656E7473 
 3330      5C476974 
 3330      4875625C 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 71


 3331 03f6 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3331      635F636F 
 3331      64655F62 
 3331      6173655C 
 3331      43533330 
 3332              	.LASF95:
 3333 0418 71756164 		.ascii	"quadDec2Count\000"
 3333      44656332 
 3333      436F756E 
 3333      7400
 3334              	.LASF31:
 3335 0426 67315F79 		.ascii	"g1_ypos\000"
 3335      706F7300 
 3336              	.LASF37:
 3337 042e 67325F64 		.ascii	"g2_direction\000"
 3337      69726563 
 3337      74696F6E 
 3337      00
 3338              	.LASF32:
 3339 043b 67315F73 		.ascii	"g1_speed\000"
 3339      70656564 
 3339      00
 3340              	.LASF83:
 3341 0444 64697370 		.ascii	"displaystring\000"
 3341      6C617973 
 3341      7472696E 
 3341      6700
 3342              	.LASF23:
 3343 0452 726F626F 		.ascii	"robot_xpos\000"
 3343      745F7870 
 3343      6F7300
 3344              	.LASF39:
 3345 045d 5475726E 		.ascii	"TurnRight\000"
 3345      52696768 
 3345      7400
 3346              	.LASF94:
 3347 0467 62756666 		.ascii	"buffer\000"
 3347      657200
 3348              	.LASF16:
 3349 046e 75696E74 		.ascii	"uint32\000"
 3349      333200
 3350              	.LASF104:
 3351 0475 6D61696E 		.ascii	"main.c\000"
 3351      2E6300
 3352              	.LASF5:
 3353 047c 6C6F6E67 		.ascii	"long unsigned int\000"
 3353      20756E73 
 3353      69676E65 
 3353      6420696E 
 3353      7400
 3354              	.LASF49:
 3355 048e 4261636B 		.ascii	"Backward\000"
 3355      77617264 
 3355      00
 3356              	.LASF20:
 3357 0497 646F7562 		.ascii	"double\000"
 3357      6C6500
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 72


 3358              	.LASF44:
 3359 049e 556E6B6E 		.ascii	"Unknown\000"
 3359      6F776E00 
 3360              	.LASF101:
 3361 04a6 63757272 		.ascii	"currentRow\000"
 3361      656E7452 
 3361      6F7700
 3362              	.LASF55:
 3363 04b1 53335F44 		.ascii	"S3_DETECTED\000"
 3363      45544543 
 3363      54454400 
 3364              	.LASF72:
 3365 04bd 74735F73 		.ascii	"ts_speed\000"
 3365      70656564 
 3365      00
 3366              	.LASF108:
 3367 04c6 636F756E 		.ascii	"count\000"
 3367      7400
 3368              	.LASF74:
 3369 04cc 666C6167 		.ascii	"flag_ts_enc\000"
 3369      5F74735F 
 3369      656E6300 
 3370              	.LASF12:
 3371 04d8 5F5F696E 		.ascii	"__int32_t\000"
 3371      7433325F 
 3371      7400
 3372              	.LASF43:
 3373 04e2 53746F70 		.ascii	"Stop\000"
 3373      00
 3374              	.LASF27:
 3375 04e7 67305F79 		.ascii	"g0_ypos\000"
 3375      706F7300 
 3376              	.LASF25:
 3377 04ef 726F626F 		.ascii	"robot_orientation\000"
 3377      745F6F72 
 3377      69656E74 
 3377      6174696F 
 3377      6E00
 3378              	.LASF73:
 3379 0501 74735F64 		.ascii	"ts_display\000"
 3379      6973706C 
 3379      617900
 3380              	.LASF47:
 3381 050c 77616974 		.ascii	"waitForLeftTurn\000"
 3381      466F724C 
 3381      65667454 
 3381      75726E00 
 3382              	.LASF107:
 3383 051c 71756164 		.ascii	"quadCountToRPM\000"
 3383      436F756E 
 3383      74546F52 
 3383      504D00
 3384              	.LASF82:
 3385 052b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3385      5F72665F 
 3385      7472616E 
 3385      736D6973 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Md1rq.s 			page 73


 3385      73696F6E 
 3386              	.LASF24:
 3387 0547 726F626F 		.ascii	"robot_ypos\000"
 3387      745F7970 
 3387      6F7300
 3388              	.LASF69:
 3389 0552 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3389      52784275 
 3389      66666572 
 3389      00
 3390              	.LASF90:
 3391 055f 63757272 		.ascii	"currentOrientation\000"
 3391      656E744F 
 3391      7269656E 
 3391      74617469 
 3391      6F6E00
 3392              	.LASF52:
 3393 0572 446F776E 		.ascii	"Down\000"
 3393      00
 3394              	.LASF88:
 3395 0577 63757272 		.ascii	"currentDirection\000"
 3395      656E7444 
 3395      69726563 
 3395      74696F6E 
 3395      00
 3396              	.LASF64:
 3397 0588 64697265 		.ascii	"directionState\000"
 3397      6374696F 
 3397      6E537461 
 3397      746500
 3398              	.LASF21:
 3399 0597 72737369 		.ascii	"rssi\000"
 3399      00
 3400              	.LASF51:
 3401 059c 4F726965 		.ascii	"OrientationState\000"
 3401      6E746174 
 3401      696F6E53 
 3401      74617465 
 3401      00
 3402              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
