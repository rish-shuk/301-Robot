ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,12,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.global	instructionIndex
 124              		.bss
 125 0013 00       		.align	2
 126              		.type	instructionIndex, %object
 127              		.size	instructionIndex, 4
 128              	instructionIndex:
 129 0014 00000000 		.space	4
 130              		.comm	s3,1,1
 131              		.comm	s4,1,1
 132              		.comm	s5,1,1
 133              		.global	s6
 134              		.type	s6, %object
 135              		.size	s6, 1
 136              	s6:
 137 0018 00       		.space	1
 138              		.global	totalMilliseconds
 139 0019 000000   		.align	2
 140              		.type	totalMilliseconds, %object
 141              		.size	totalMilliseconds, 4
 142              	totalMilliseconds:
 143 001c 00000000 		.space	4
 144              		.global	totalDistance
 145              		.align	2
 146              		.type	totalDistance, %object
 147              		.size	totalDistance, 4
 148              	totalDistance:
 149 0020 00000000 		.space	4
 150              		.comm	buffer,69,4
 151              		.global	quadDec2Count
 152              		.align	2
 153              		.type	quadDec2Count, %object
 154              		.size	quadDec2Count, 4
 155              	quadDec2Count:
 156 0024 00000000 		.space	4
 157              		.global	timerInt
 158              		.align	2
 159              		.type	timerInt, %object
 160              		.size	timerInt, 4
 161              	timerInt:
 162 0028 00000000 		.space	4
 163              		.global	keepLedOn
 164              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 4


 165              		.type	keepLedOn, %object
 166              		.size	keepLedOn, 4
 167              	keepLedOn:
 168 002c 00000000 		.space	4
 169              		.global	stopBuffer
 170              		.align	2
 171              		.type	stopBuffer, %object
 172              		.size	stopBuffer, 4
 173              	stopBuffer:
 174 0030 00000000 		.space	4
 175              		.global	turnFinishedFlag
 176              		.type	turnFinishedFlag, %object
 177              		.size	turnFinishedFlag, 1
 178              	turnFinishedFlag:
 179 0034 00       		.space	1
 180              		.global	forwardUntilTargetStartedFlag
 181              		.type	forwardUntilTargetStartedFlag, %object
 182              		.size	forwardUntilTargetStartedFlag, 1
 183              	forwardUntilTargetStartedFlag:
 184 0035 00       		.space	1
 185              		.global	blockSizeTotal
 186 0036 0000     		.align	2
 187              		.type	blockSizeTotal, %object
 188              		.size	blockSizeTotal, 4
 189              	blockSizeTotal:
 190 0038 00000000 		.space	4
 191              		.global	__aeabi_i2d
 192              		.global	__aeabi_dmul
 193              		.global	__aeabi_ddiv
 194              		.global	__aeabi_d2f
 195              		.global	__aeabi_fadd
 196              		.section	.text.speedTimer,"ax",%progbits
 197              		.align	2
 198              		.global	speedTimer
 199              		.thumb
 200              		.thumb_func
 201              		.type	speedTimer, %function
 202              	speedTimer:
 203              	.LFB64:
 204              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 5


  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** uint8 turnFinishedFlag = 0;
  52:main.c        **** uint8 forwardUntilTargetStartedFlag = 0;
  53:main.c        **** float blockSizeTotal = 0;
  54:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  55:main.c        **** 
  56:main.c        **** CY_ISR (speedTimer) {
 205              		.loc 1 56 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 90B5     		push	{r4, r7, lr}
 210              		.cfi_def_cfa_offset 12
 211              		.cfi_offset 4, -12
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 83B0     		sub	sp, sp, #12
 215              		.cfi_def_cfa_offset 24
 216 0004 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
  57:main.c        ****     timerInt = 1;
 218              		.loc 1 57 0
 219 0006 344B     		ldr	r3, .L4+16
 220 0008 0122     		movs	r2, #1
 221 000a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 6


  58:main.c        ****     //quadDec_M1 used for turning macros
  59:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 222              		.loc 1 59 0
 223 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 224 0010 0346     		mov	r3, r0
 225 0012 1A46     		mov	r2, r3
 226 0014 314B     		ldr	r3, .L4+20
 227 0016 1A60     		str	r2, [r3]
  60:main.c        ****     
  61:main.c        ****     if ((currentDirection == Forward || 
 228              		.loc 1 61 0
 229 0018 314B     		ldr	r3, .L4+24
 230 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231 001c 002B     		cmp	r3, #0
 232 001e 13D0     		beq	.L2
  62:main.c        ****         currentDirection == ForwardAfterTurn ||
 233              		.loc 1 62 0 discriminator 1
 234 0020 2F4B     		ldr	r3, .L4+24
 235 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  61:main.c        ****         currentDirection == ForwardAfterTurn ||
 236              		.loc 1 61 0 discriminator 1
 237 0024 082B     		cmp	r3, #8
 238 0026 0FD0     		beq	.L2
  63:main.c        ****         currentDirection == waitForTurn || 
 239              		.loc 1 63 0
 240 0028 2D4B     		ldr	r3, .L4+24
 241 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:main.c        ****         currentDirection == ForwardAfterTurn ||
 242              		.loc 1 62 0
 243 002c 072B     		cmp	r3, #7
 244 002e 0BD0     		beq	.L2
  64:main.c        ****         currentDirection == AdjustToTheLeft ||
 245              		.loc 1 64 0
 246 0030 2B4B     		ldr	r3, .L4+24
 247 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63:main.c        ****         currentDirection == waitForTurn || 
 248              		.loc 1 63 0
 249 0034 032B     		cmp	r3, #3
 250 0036 07D0     		beq	.L2
  65:main.c        ****         currentDirection == AdjustToTheRight ||
 251              		.loc 1 65 0
 252 0038 294B     		ldr	r3, .L4+24
 253 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:main.c        ****         currentDirection == AdjustToTheLeft ||
 254              		.loc 1 64 0
 255 003c 042B     		cmp	r3, #4
 256 003e 03D0     		beq	.L2
  66:main.c        ****         currentDirection == Backward) &&
 257              		.loc 1 66 0
 258 0040 274B     		ldr	r3, .L4+24
 259 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  65:main.c        ****         currentDirection == AdjustToTheRight ||
 260              		.loc 1 65 0
 261 0044 092B     		cmp	r3, #9
 262 0046 34D1     		bne	.L3
 263              	.L2:
  67:main.c        ****         quadDec2Count != 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 7


 264              		.loc 1 67 0
 265 0048 244B     		ldr	r3, .L4+20
 266 004a 1B68     		ldr	r3, [r3]
  66:main.c        ****         currentDirection == Backward) &&
 267              		.loc 1 66 0
 268 004c 002B     		cmp	r3, #0
 269 004e 30D0     		beq	.L3
 270              	.LBB2:
  68:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  69:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 271              		.loc 1 69 0
 272 0050 224B     		ldr	r3, .L4+20
 273 0052 1B68     		ldr	r3, [r3]
 274 0054 002B     		cmp	r3, #0
 275 0056 B8BF     		it	lt
 276 0058 5B42     		rsblt	r3, r3, #0
 277 005a 1846     		mov	r0, r3
 278 005c FFF7FEFF 		bl	__aeabi_i2d
 279 0060 19A3     		adr	r3, .L4
 280 0062 D3E90023 		ldrd	r2, [r3]
 281 0066 FFF7FEFF 		bl	__aeabi_dmul
 282 006a 0346     		mov	r3, r0
 283 006c 0C46     		mov	r4, r1
 284 006e 1846     		mov	r0, r3
 285 0070 2146     		mov	r1, r4
 286 0072 17A3     		adr	r3, .L4+8
 287 0074 D3E90023 		ldrd	r2, [r3]
 288 0078 FFF7FEFF 		bl	__aeabi_dmul
 289 007c 0346     		mov	r3, r0
 290 007e 0C46     		mov	r4, r1
 291 0080 1846     		mov	r0, r3
 292 0082 2146     		mov	r1, r4
 293 0084 4FF00002 		mov	r2, #0
 294 0088 164B     		ldr	r3, .L4+28
 295 008a FFF7FEFF 		bl	__aeabi_ddiv
 296 008e 0346     		mov	r3, r0
 297 0090 0C46     		mov	r4, r1
 298 0092 1846     		mov	r0, r3
 299 0094 2146     		mov	r1, r4
 300 0096 FFF7FEFF 		bl	__aeabi_d2f
 301 009a 0346     		mov	r3, r0
 302 009c 7B60     		str	r3, [r7, #4]	@ float
  70:main.c        ****         
  71:main.c        ****         totalDistance = totalDistance + newDistance;
 303              		.loc 1 71 0
 304 009e 124B     		ldr	r3, .L4+32
 305 00a0 1B68     		ldr	r3, [r3]	@ float
 306 00a2 7968     		ldr	r1, [r7, #4]	@ float
 307 00a4 1846     		mov	r0, r3
 308 00a6 FFF7FEFF 		bl	__aeabi_fadd
 309 00aa 0346     		mov	r3, r0
 310 00ac 1A46     		mov	r2, r3
 311 00ae 0E4B     		ldr	r3, .L4+32
 312 00b0 1A60     		str	r2, [r3]	@ float
 313              	.L3:
 314              	.LBE2:
  72:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 8


  73:main.c        ****     
  74:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 315              		.loc 1 74 0
 316 00b2 0020     		movs	r0, #0
 317 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  75:main.c        ****     QuadDec_M2_Start(); // restart counter
 318              		.loc 1 75 0
 319 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  76:main.c        ****     
  77:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 320              		.loc 1 77 0
 321 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  78:main.c        **** }
 322              		.loc 1 78 0
 323 00c0 00BF     		nop
 324 00c2 0C37     		adds	r7, r7, #12
 325              		.cfi_def_cfa_offset 12
 326 00c4 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 00c6 90BD     		pop	{r4, r7, pc}
 330              	.L5:
 331              		.align	3
 332              	.L4:
 333 00c8 182D4454 		.word	1413754136
 334 00cc FB210940 		.word	1074340347
 335 00d0 00000000 		.word	0
 336 00d4 00205040 		.word	1078992896
 337 00d8 00000000 		.word	timerInt
 338 00dc 00000000 		.word	quadDec2Count
 339 00e0 00000000 		.word	currentDirection
 340 00e4 00806C40 		.word	1080852480
 341 00e8 00000000 		.word	totalDistance
 342              		.cfi_endproc
 343              	.LFE64:
 344              		.size	speedTimer, .-speedTimer
 345              		.section	.text.S3_DETECTED,"ax",%progbits
 346              		.align	2
 347              		.global	S3_DETECTED
 348              		.thumb
 349              		.thumb_func
 350              		.type	S3_DETECTED, %function
 351              	S3_DETECTED:
 352              	.LFB65:
  79:main.c        **** 
  80:main.c        **** CY_ISR(S3_DETECTED) {
 353              		.loc 1 80 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 0000 80B4     		push	{r7}
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
  81:main.c        ****     // Sensor has detected WHITE
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 9


  82:main.c        ****     s3 = 1; // , Black = 0, White = 1
 363              		.loc 1 82 0
 364 0004 034B     		ldr	r3, .L7
 365 0006 0122     		movs	r2, #1
 366 0008 1A70     		strb	r2, [r3]
  83:main.c        ****     //LED_Write(1u);
  84:main.c        **** }
 367              		.loc 1 84 0
 368 000a 00BF     		nop
 369 000c BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 000e 80BC     		pop	{r7}
 373              		.cfi_restore 7
 374              		.cfi_def_cfa_offset 0
 375 0010 7047     		bx	lr
 376              	.L8:
 377 0012 00BF     		.align	2
 378              	.L7:
 379 0014 00000000 		.word	s3
 380              		.cfi_endproc
 381              	.LFE65:
 382              		.size	S3_DETECTED, .-S3_DETECTED
 383              		.section	.text.S4_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S4_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S4_DETECTED, %function
 389              	S4_DETECTED:
 390              	.LFB66:
  85:main.c        **** 
  86:main.c        **** CY_ISR(S4_DETECTED) {
 391              		.loc 1 86 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
  87:main.c        ****     // Sensor has detected WHITE
  88:main.c        ****     s4 = 1; // , Black = 0, White = 1
 401              		.loc 1 88 0
 402 0004 034B     		ldr	r3, .L10
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
  89:main.c        ****     //LED_Write(1u);
  90:main.c        **** }
 405              		.loc 1 90 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 10


 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L11:
 415 0012 00BF     		.align	2
 416              	.L10:
 417 0014 00000000 		.word	s4
 418              		.cfi_endproc
 419              	.LFE66:
 420              		.size	S4_DETECTED, .-S4_DETECTED
 421              		.section	.text.S5_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S5_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S5_DETECTED, %function
 427              	S5_DETECTED:
 428              	.LFB67:
  91:main.c        **** 
  92:main.c        **** CY_ISR(S5_DETECTED) {
 429              		.loc 1 92 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
  93:main.c        ****     // Sensor has detected WHITE
  94:main.c        ****     s5 = 1; // , Black = 0, White = 1
 439              		.loc 1 94 0
 440 0004 034B     		ldr	r3, .L13
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     //LED_Write(1u);
  96:main.c        **** }
 443              		.loc 1 96 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L14:
 453 0012 00BF     		.align	2
 454              	.L13:
 455 0014 00000000 		.word	s5
 456              		.cfi_endproc
 457              	.LFE67:
 458              		.size	S5_DETECTED, .-S5_DETECTED
 459              		.section	.text.S6_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 11


 462              		.thumb
 463              		.thumb_func
 464              		.type	S6_DETECTED, %function
 465              	S6_DETECTED:
 466              	.LFB68:
  97:main.c        **** 
  98:main.c        **** CY_ISR(S6_DETECTED) {
 467              		.loc 1 98 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
  99:main.c        ****     // Sensor has detected WHITE
 100:main.c        ****     s6 = 1; // , Black = 0, White = 1
 477              		.loc 1 100 0
 478 0004 034B     		ldr	r3, .L16
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     //LED_Write(1u);
 102:main.c        **** }
 481              		.loc 1 102 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L17:
 491 0012 00BF     		.align	2
 492              	.L16:
 493 0014 00000000 		.word	s6
 494              		.cfi_endproc
 495              	.LFE68:
 496              		.size	S6_DETECTED, .-S6_DETECTED
 497              		.section	.text.TIMER_FINISH,"ax",%progbits
 498              		.align	2
 499              		.global	TIMER_FINISH
 500              		.thumb
 501              		.thumb_func
 502              		.type	TIMER_FINISH, %function
 503              	TIMER_FINISH:
 504              	.LFB69:
 103:main.c        **** 
 104:main.c        **** CY_ISR(TIMER_FINISH) {
 505              		.loc 1 104 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 12


 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 105:main.c        ****     if (currentDirection == Stop) {
 515              		.loc 1 105 0
 516 0004 0A4B     		ldr	r3, .L21
 517 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 0008 052B     		cmp	r3, #5
 519 000a 05D1     		bne	.L19
 106:main.c        ****         stopBuffer = stopBuffer + 1;
 520              		.loc 1 106 0
 521 000c 094B     		ldr	r3, .L21+4
 522 000e 1B68     		ldr	r3, [r3]
 523 0010 0133     		adds	r3, r3, #1
 524 0012 084A     		ldr	r2, .L21+4
 525 0014 1360     		str	r3, [r2]
 526 0016 02E0     		b	.L20
 527              	.L19:
 107:main.c        ****     } else {
 108:main.c        ****         stopBuffer = 0;
 528              		.loc 1 108 0
 529 0018 064B     		ldr	r3, .L21+4
 530 001a 0022     		movs	r2, #0
 531 001c 1A60     		str	r2, [r3]
 532              	.L20:
 109:main.c        ****     }
 110:main.c        ****     SetRobotMovement(); 
 533              		.loc 1 110 0
 534 001e FFF7FEFF 		bl	SetRobotMovement
 111:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 535              		.loc 1 111 0
 536 0022 FFF7FEFF 		bl	ResetSensorFlags
 112:main.c        ****     Timer_LED_ReadStatusRegister();
 537              		.loc 1 112 0
 538 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 113:main.c        **** }
 539              		.loc 1 113 0
 540 002a 00BF     		nop
 541 002c 80BD     		pop	{r7, pc}
 542              	.L22:
 543 002e 00BF     		.align	2
 544              	.L21:
 545 0030 00000000 		.word	currentDirection
 546 0034 00000000 		.word	stopBuffer
 547              		.cfi_endproc
 548              	.LFE69:
 549              		.size	TIMER_FINISH, .-TIMER_FINISH
 550              		.section	.text.main,"ax",%progbits
 551              		.align	2
 552              		.global	main
 553              		.thumb
 554              		.thumb_func
 555              		.type	main, %function
 556              	main:
 557              	.LFB70:
 114:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 13


 115:main.c        **** 
 116:main.c        **** int main()
 117:main.c        **** {
 558              		.loc 1 117 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 118:main.c        **** // ----- INITIALIZATIONS ----------
 119:main.c        ****     CYGlobalIntEnable;
 568              		.loc 1 119 0
 569              		.syntax unified
 570              	@ 119 "main.c" 1
 571 0004 62B6     		CPSIE   i
 572              	@ 0 "" 2
 120:main.c        ****     ResetSensorFlags();
 573              		.loc 1 120 0
 574              		.thumb
 575              		.syntax unified
 576 0006 FFF7FEFF 		bl	ResetSensorFlags
 121:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 577              		.loc 1 121 0
 578 000a FFF7FEFF 		bl	init
 122:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 579              		.loc 1 122 0
 580 000e 1F48     		ldr	r0, .L27
 581 0010 FFF7FEFF 		bl	isr_speed_StartEx
 123:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 582              		.loc 1 123 0
 583 0014 1E48     		ldr	r0, .L27+4
 584 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 124:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 585              		.loc 1 124 0
 586 001a 1E48     		ldr	r0, .L27+8
 587 001c FFF7FEFF 		bl	S3_detected_StartEx
 125:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 588              		.loc 1 125 0
 589 0020 1D48     		ldr	r0, .L27+12
 590 0022 FFF7FEFF 		bl	S4_detected_StartEx
 126:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 591              		.loc 1 126 0
 592 0026 1D48     		ldr	r0, .L27+16
 593 0028 FFF7FEFF 		bl	S5_detected_StartEx
 127:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 594              		.loc 1 127 0
 595 002c 1C48     		ldr	r0, .L27+20
 596 002e FFF7FEFF 		bl	S6_detected_StartEx
 128:main.c        ****     Timer_LED_Start();
 597              		.loc 1 128 0
 598 0032 FFF7FEFF 		bl	Timer_LED_Start
 129:main.c        ****     instructionList = findPath(map, food_list, 0);
 599              		.loc 1 129 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 14


 600 0036 0022     		movs	r2, #0
 601 0038 1A49     		ldr	r1, .L27+24
 602 003a 1B48     		ldr	r0, .L27+28
 603 003c FFF7FEFF 		bl	findPath
 604 0040 0246     		mov	r2, r0
 605 0042 1A4B     		ldr	r3, .L27+32
 606 0044 1A60     		str	r2, [r3]
 130:main.c        ****     numSteps = instructionsListLength();
 607              		.loc 1 130 0
 608 0046 FFF7FEFF 		bl	instructionsListLength
 609 004a 0346     		mov	r3, r0
 610 004c 1A46     		mov	r2, r3
 611 004e 184B     		ldr	r3, .L27+36
 612 0050 1A60     		str	r2, [r3]
 131:main.c        **** // ------USB SETUP ----------------    
 132:main.c        **** #ifdef USE_USB    
 133:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 613              		.loc 1 133 0
 614 0052 0121     		movs	r1, #1
 615 0054 0020     		movs	r0, #0
 616 0056 FFF7FEFF 		bl	USBUART_Start
 134:main.c        **** #endif        
 135:main.c        ****     RF_BT_SELECT_Write(0);
 617              		.loc 1 135 0
 618 005a 0020     		movs	r0, #0
 619 005c FFF7FEFF 		bl	RF_BT_SELECT_Write
 620              	.L26:
 136:main.c        ****     
 137:main.c        ****     //usbPutString("Initialised UART");
 138:main.c        ****     for(;;)
 139:main.c        ****     {
 140:main.c        ****         if(timerInt == 1) {
 621              		.loc 1 140 0
 622 0060 144B     		ldr	r3, .L27+40
 623 0062 1B68     		ldr	r3, [r3]
 624 0064 012B     		cmp	r3, #1
 625 0066 08D1     		bne	.L24
 141:main.c        ****             timerInt = 0;
 626              		.loc 1 141 0
 627 0068 124B     		ldr	r3, .L27+40
 628 006a 0022     		movs	r2, #0
 629 006c 1A60     		str	r2, [r3]
 142:main.c        ****             // calculate RPM of M2
 143:main.c        ****             quadCountToRPM(quadDec2Count);
 630              		.loc 1 143 0
 631 006e 124B     		ldr	r3, .L27+44
 632 0070 1B68     		ldr	r3, [r3]
 633 0072 9BB2     		uxth	r3, r3
 634 0074 1846     		mov	r0, r3
 635 0076 FFF7FEFF 		bl	quadCountToRPM
 636              	.L24:
 144:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 145:main.c        ****             //usbPutString(buffer);
 146:main.c        ****             //usbPutString(" ");
 147:main.c        ****         }
 148:main.c        ****         //handle_usb();
 149:main.c        ****         if (flag_KB_string == 1)
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 15


 637              		.loc 1 149 0
 638 007a 104B     		ldr	r3, .L27+48
 639 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 007e 012B     		cmp	r3, #1
 641 0080 EED1     		bne	.L26
 150:main.c        ****         {
 151:main.c        ****             //usbPutString("Total Distance: ");
 152:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 153:main.c        ****             //usbPutString(buffer);
 154:main.c        ****             flag_KB_string = 0;
 642              		.loc 1 154 0
 643 0082 0E4B     		ldr	r3, .L27+48
 644 0084 0022     		movs	r2, #0
 645 0086 1A70     		strb	r2, [r3]
 155:main.c        ****         }           
 156:main.c        ****     }
 646              		.loc 1 156 0
 647 0088 EAE7     		b	.L26
 648              	.L28:
 649 008a 00BF     		.align	2
 650              	.L27:
 651 008c 00000000 		.word	speedTimer
 652 0090 00000000 		.word	TIMER_FINISH
 653 0094 00000000 		.word	S3_DETECTED
 654 0098 00000000 		.word	S4_DETECTED
 655 009c 00000000 		.word	S5_DETECTED
 656 00a0 00000000 		.word	S6_DETECTED
 657 00a4 00000000 		.word	food_list
 658 00a8 00000000 		.word	map
 659 00ac 00000000 		.word	instructionList
 660 00b0 00000000 		.word	numSteps
 661 00b4 00000000 		.word	timerInt
 662 00b8 00000000 		.word	quadDec2Count
 663 00bc 00000000 		.word	flag_KB_string
 664              		.cfi_endproc
 665              	.LFE70:
 666              		.size	main, .-main
 667              		.global	__aeabi_fmul
 668              		.global	__aeabi_f2iz
 669              		.section	.text.quadCountToRPM,"ax",%progbits
 670              		.align	2
 671              		.global	quadCountToRPM
 672              		.thumb
 673              		.thumb_func
 674              		.type	quadCountToRPM, %function
 675              	quadCountToRPM:
 676              	.LFB71:
 157:main.c        ****     return 0;
 158:main.c        **** }
 159:main.c        **** 
 160:main.c        **** // Calculations
 161:main.c        **** //* ========================================
 162:main.c        **** int16 quadCountToRPM(uint16 count)
 163:main.c        **** {
 677              		.loc 1 163 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 16


 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 90B5     		push	{r4, r7, lr}
 682              		.cfi_def_cfa_offset 12
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 32
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 0346     		mov	r3, r0
 691 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 164:main.c        ****     float cps = count/57.00;
 692              		.loc 1 164 0
 693 000a FB88     		ldrh	r3, [r7, #6]
 694 000c 1846     		mov	r0, r3
 695 000e FFF7FEFF 		bl	__aeabi_i2d
 696 0012 4FF00002 		mov	r2, #0
 697 0016 0D4B     		ldr	r3, .L31
 698 0018 FFF7FEFF 		bl	__aeabi_ddiv
 699 001c 0346     		mov	r3, r0
 700 001e 0C46     		mov	r4, r1
 701 0020 1846     		mov	r0, r3
 702 0022 2146     		mov	r1, r4
 703 0024 FFF7FEFF 		bl	__aeabi_d2f
 704 0028 0346     		mov	r3, r0
 705 002a FB60     		str	r3, [r7, #12]	@ float
 165:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 706              		.loc 1 165 0
 707 002c 0849     		ldr	r1, .L31+4
 708 002e F868     		ldr	r0, [r7, #12]	@ float
 709 0030 FFF7FEFF 		bl	__aeabi_fmul
 710 0034 0346     		mov	r3, r0
 711 0036 1846     		mov	r0, r3
 712 0038 FFF7FEFF 		bl	__aeabi_f2iz
 713 003c 0346     		mov	r3, r0
 714 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 166:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 167:main.c        ****     return rpm;
 715              		.loc 1 167 0
 716 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 168:main.c        ****     //usbPutString(buffer);
 169:main.c        ****     //usbPutString("rpm ");
 170:main.c        **** }
 717              		.loc 1 170 0
 718 0044 1846     		mov	r0, r3
 719 0046 1437     		adds	r7, r7, #20
 720              		.cfi_def_cfa_offset 12
 721 0048 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 004a 90BD     		pop	{r4, r7, pc}
 725              	.L32:
 726              		.align	2
 727              	.L31:
 728 004c 00804C40 		.word	1078755328
 729 0050 00007041 		.word	1097859072
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 17


 730              		.cfi_endproc
 731              	.LFE71:
 732              		.size	quadCountToRPM, .-quadCountToRPM
 733              		.section	.text.ResetSensorFlags,"ax",%progbits
 734              		.align	2
 735              		.global	ResetSensorFlags
 736              		.thumb
 737              		.thumb_func
 738              		.type	ResetSensorFlags, %function
 739              	ResetSensorFlags:
 740              	.LFB72:
 171:main.c        **** 
 172:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 173:main.c        **** void ResetSensorFlags() {
 741              		.loc 1 173 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746 0000 80B4     		push	{r7}
 747              		.cfi_def_cfa_offset 4
 748              		.cfi_offset 7, -4
 749 0002 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 174:main.c        ****     s3 = 0;
 751              		.loc 1 174 0
 752 0004 074B     		ldr	r3, .L34
 753 0006 0022     		movs	r2, #0
 754 0008 1A70     		strb	r2, [r3]
 175:main.c        ****     s4 = 0;
 755              		.loc 1 175 0
 756 000a 074B     		ldr	r3, .L34+4
 757 000c 0022     		movs	r2, #0
 758 000e 1A70     		strb	r2, [r3]
 176:main.c        ****     s5 = 0;
 759              		.loc 1 176 0
 760 0010 064B     		ldr	r3, .L34+8
 761 0012 0022     		movs	r2, #0
 762 0014 1A70     		strb	r2, [r3]
 177:main.c        ****     s6 = 0;
 763              		.loc 1 177 0
 764 0016 064B     		ldr	r3, .L34+12
 765 0018 0022     		movs	r2, #0
 766 001a 1A70     		strb	r2, [r3]
 178:main.c        **** }
 767              		.loc 1 178 0
 768 001c 00BF     		nop
 769 001e BD46     		mov	sp, r7
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0020 80BC     		pop	{r7}
 773              		.cfi_restore 7
 774              		.cfi_def_cfa_offset 0
 775 0022 7047     		bx	lr
 776              	.L35:
 777              		.align	2
 778              	.L34:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 18


 779 0024 00000000 		.word	s3
 780 0028 00000000 		.word	s4
 781 002c 00000000 		.word	s5
 782 0030 00000000 		.word	s6
 783              		.cfi_endproc
 784              	.LFE72:
 785              		.size	ResetSensorFlags, .-ResetSensorFlags
 786              		.global	xBlocksize
 787              		.data
 788 0045 000000   		.align	2
 789              		.type	xBlocksize, %object
 790              		.size	xBlocksize, 4
 791              	xBlocksize:
 792 0048 0000F442 		.word	1123287040
 793              		.global	yBlocksize
 794              		.align	2
 795              		.type	yBlocksize, %object
 796              		.size	yBlocksize, 4
 797              	yBlocksize:
 798 004c 0000A042 		.word	1117782016
 799              		.global	currentRow
 800              		.type	currentRow, %object
 801              		.size	currentRow, 1
 802              	currentRow:
 803 0050 01       		.byte	1
 804              		.global	currentCol
 805              		.type	currentCol, %object
 806              		.size	currentCol, 1
 807              	currentCol:
 808 0051 01       		.byte	1
 809              		.global	stoppedAfterTurn
 810              		.bss
 811              		.type	stoppedAfterTurn, %object
 812              		.size	stoppedAfterTurn, 1
 813              	stoppedAfterTurn:
 814 003c 00       		.space	1
 815              		.global	ignoreSensor
 816              		.type	ignoreSensor, %object
 817              		.size	ignoreSensor, 1
 818              	ignoreSensor:
 819 003d 00       		.space	1
 820              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 821              		.align	2
 822              		.global	ForwardCourseCorrection
 823              		.thumb
 824              		.thumb_func
 825              		.type	ForwardCourseCorrection, %function
 826              	ForwardCourseCorrection:
 827              	.LFB73:
 179:main.c        **** 
 180:main.c        **** float xBlocksize = 122; // 122 mm
 181:main.c        **** float yBlocksize = 80; // 80 mm
 182:main.c        **** uint8 currentRow = 1;
 183:main.c        **** uint8 currentCol = 1;
 184:main.c        **** 
 185:main.c        **** /*enum DirectionState GetNextStep() {
 186:main.c        ****     enum DirectionState directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 19


 187:main.c        ****     // Determines robot movement and orientation to follow optimal path
 188:main.c        ****     // enum DirectionState directionState = Stop;
 189:main.c        ****     previousOrientation = currentOrientation;
 190:main.c        ****     
 191:main.c        ****     if(map[currentRow][currentCol] == 9) {
 192:main.c        ****         directionState = Stop; // reached target
 193:main.c        ****         return directionState;
 194:main.c        ****     }
 195:main.c        ****         
 196:main.c        ****     switch (previousOrientation) {
 197:main.c        ****             case Up:
 198:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 199:main.c        ****                     currentOrientation = Up; 
 200:main.c        ****                     directionState = Forward;
 201:main.c        ****                     currentRow--;// update position
 202:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 203:main.c        ****                     currentOrientation = Left;
 204:main.c        ****                     directionState = waitForLeftTurn;
 205:main.c        ****                     //currentRow--;
 206:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 207:main.c        ****                     currentOrientation = Right;
 208:main.c        ****                     directionState = waitForRightTurn;
 209:main.c        ****                     //currentRow++; // update position
 210:main.c        ****                 }
 211:main.c        ****                 break;
 212:main.c        ****             case Down:
 213:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 214:main.c        ****                     currentOrientation = Down;
 215:main.c        ****                     directionState = Forward;
 216:main.c        ****                     currentRow++;
 217:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 218:main.c        ****                     currentOrientation = Left;
 219:main.c        ****                     directionState = waitForRightTurn;
 220:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 221:main.c        ****                     currentOrientation = Right;
 222:main.c        ****                     directionState = waitForLeftTurn;
 223:main.c        ****                 }
 224:main.c        ****                 break;
 225:main.c        ****             case Left:
 226:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 227:main.c        ****                     currentOrientation = Left;
 228:main.c        ****                     directionState = Forward;
 229:main.c        ****                     currentCol--; // update position
 230:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 231:main.c        ****                     currentOrientation = Up;
 232:main.c        ****                     directionState = waitForRightTurn;
 233:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 234:main.c        ****                     currentOrientation = Down;
 235:main.c        ****                     directionState = waitForLeftTurn;
 236:main.c        ****                 }
 237:main.c        ****                 break;
 238:main.c        ****             case Right:
 239:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 240:main.c        ****                     currentOrientation = Right;
 241:main.c        ****                     directionState = Forward;
 242:main.c        ****                     currentCol++; // update position
 243:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 20


 244:main.c        ****                     currentOrientation = Up;
 245:main.c        ****                     directionState = waitForLeftTurn;
 246:main.c        ****                     //currentCol++; // update position
 247:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 248:main.c        ****                     currentOrientation = Down;
 249:main.c        ****                     directionState = waitForRightTurn;
 250:main.c        ****                     //currentCol--; // update position
 251:main.c        ****                 }
 252:main.c        ****                 break;
 253:main.c        ****             default:
 254:main.c        ****                 break;
 255:main.c        ****         }
 256:main.c        ****     
 257:main.c        ****     return directionState;
 258:main.c        **** }
 259:main.c        **** */
 260:main.c        **** uint8 stoppedAfterTurn = 0;
 261:main.c        **** uint8 ignoreSensor = 0;
 262:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 263:main.c        **** /*
 264:main.c        **** enum RobotMovement CheckSensorDirection() {
 265:main.c        ****     float blocksize;
 266:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 267:main.c        ****         blocksize = yBlocksize;
 268:main.c        ****     } else {
 269:main.c        ****         blocksize = xBlocksize;
 270:main.c        ****     }
 271:main.c        ****     //if(currentInstruction)
 272:main.c        ****     enum RobotMovement directionState = Stop; // initialise state as stop
 273:main.c        ****     
 274:main.c        ****     if (stoppedAfterTurn == 1) {
 275:main.c        ****         if (stopBuffer <= 50) {
 276:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 277:main.c        ****             previousDirection = directionState;
 278:main.c        ****             return directionState;
 279:main.c        ****         }
 280:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 281:main.c        ****         totalDistance = 0; // reset distance
 282:main.c        ****         previousDirection = directionState;
 283:main.c        ****         stoppedAfterTurn = 0;
 284:main.c        ****         return directionState;
 285:main.c        ****     }
 286:main.c        ****     if (totalDistance >= blocksize) {
 287:main.c        ****         //directionState = GetNextStep(); // get next step at each block
 288:main.c        ****         totalDistance = 0; // reset distance
 289:main.c        ****         previousDirection = directionState;
 290:main.c        ****         return directionState;
 291:main.c        ****     }
 292:main.c        ****     
 293:main.c        ****     // STOP BUFFER * ========================================
 294:main.c        ****     if (previousDirection == Stop) {
 295:main.c        ****         if (stopBuffer <= 50) {
 296:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 297:main.c        ****             previousDirection = directionState;
 298:main.c        ****         } else {
 299:main.c        ****             //directionState = ForwardAfterTurn;
 300:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 21


 301:main.c        ****         return directionState;
 302:main.c        ****     }
 303:main.c        **** 
 304:main.c        ****     // TURNING * ========================================    
 305:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 306:main.c        ****         if (s3 || s4) {
 307:main.c        ****             //ignoreSensor = 0;
 308:main.c        ****             //usbPutString("Forward\n");
 309:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 310:main.c        ****             previousDirection = directionState;
 311:main.c        ****             return directionState;
 312:main.c        ****         }
 313:main.c        ****     }
 314:main.c        **** 
 315:main.c        ****     if(previousDirection == waitForRightTurn) {
 316:main.c        ****         //ignoreSensor = 0;
 317:main.c        ****         if(!s4) {
 318:main.c        ****             //usbPutString("Turn Right\n");
 319:main.c        ****             directionState = TurnRight;
 320:main.c        ****             previousDirection = directionState;
 321:main.c        ****             return directionState;
 322:main.c        ****         } else {
 323:main.c        ****             //usbPutString("Wait for Right Turn\n");
 324:main.c        ****             directionState = waitForRightTurn;
 325:main.c        ****             previousDirection = directionState;
 326:main.c        ****             return directionState;
 327:main.c        ****         }
 328:main.c        ****     }
 329:main.c        **** 
 330:main.c        ****     if(previousDirection == waitForLeftTurn) {
 331:main.c        ****         //ignoreSensor = 0;
 332:main.c        ****         if(!s3) {
 333:main.c        ****             //usbPutString("Turn Left\n");
 334:main.c        ****             directionState = TurnLeft;
 335:main.c        ****             previousDirection = directionState;
 336:main.c        ****             return directionState;
 337:main.c        ****         } else {
 338:main.c        ****             //usbPutString("Wait for Left Turn\n");
 339:main.c        ****             directionState = waitForLeftTurn;
 340:main.c        ****             previousDirection = directionState;
 341:main.c        ****             return directionState;
 342:main.c        ****         }
 343:main.c        ****     }
 344:main.c        **** 
 345:main.c        ****     if(previousDirection == TurnRight) {
 346:main.c        ****         if(s5 && s6) {
 347:main.c        ****             //usbPutString("Turn Right\n");
 348:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 349:main.c        ****             previousDirection = directionState;
 350:main.c        ****             return directionState;
 351:main.c        ****         } 
 352:main.c        ****         else if (!s5 || !s6) {
 353:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 354:main.c        ****             //usbPutString("Stop after Right Turn");
 355:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 356:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 357:main.c        ****             previousDirection = directionState;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 22


 358:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 359:main.c        ****             return directionState;
 360:main.c        ****         }
 361:main.c        ****     }    
 362:main.c        **** 
 363:main.c        ****     if(previousDirection == TurnLeft) {
 364:main.c        ****         if(s5 && s6) {
 365:main.c        ****             //usbPutString("Turn Left\n");
 366:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 367:main.c        ****             previousDirection = directionState;
 368:main.c        ****             return directionState;
 369:main.c        ****         } 
 370:main.c        ****         else if (!s5 || !s6) {
 371:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 372:main.c        ****            // usbPutString("Stop after Left Turn\n");
 373:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 374:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 375:main.c        ****             previousDirection = directionState;
 376:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 377:main.c        ****             return directionState;
 378:main.c        ****         }
 379:main.c        ****     }
 380:main.c        ****     
 381:main.c        ****     // COURSE CORRECTION * ========================================
 382:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 383:main.c        ****         //ignoreSensor = 0;
 384:main.c        ****         if(s6) {
 385:main.c        ****             //usbPutString("Adjust to the left\n");
 386:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 387:main.c        ****             previousDirection = directionState;
 388:main.c        ****             return directionState;
 389:main.c        ****         }
 390:main.c        ****         if(s5) {
 391:main.c        ****             //usbPutString("Adjust to the right\n");
 392:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 393:main.c        ****             previousDirection = directionState;
 394:main.c        ****             return directionState;
 395:main.c        ****         }
 396:main.c        ****     }
 397:main.c        ****     
 398:main.c        ****     // FORWARD * ========================================
 399:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 400:main.c        ****         //usbPutString("Forward\n");
 401:main.c        ****         directionState = Forward;
 402:main.c        ****         previousDirection = directionState;
 403:main.c        ****         return directionState;   
 404:main.c        ****     }
 405:main.c        **** 
 406:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 407:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 408:main.c        ****     if (previousDirection == Unknown) {
 409:main.c        ****         directionState = Forward;
 410:main.c        ****         previousDirection = directionState;
 411:main.c        ****         return directionState;
 412:main.c        ****     }
 413:main.c        **** 
 414:main.c        ****     // Possible reason
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 23


 415:main.c        ****     previousDirection = currentDirection;
 416:main.c        ****     return previousDirection;
 417:main.c        **** }
 418:main.c        **** */
 419:main.c        **** 
 420:main.c        **** enum RobotMovement ForwardCourseCorrection();
 421:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 828              		.loc 1 421 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
 836 0002 00AF     		add	r7, sp, #0
 837              		.cfi_def_cfa_register 7
 422:main.c        ****     // if S5 and S6 are on black, move forward
 423:main.c        ****     if (!s5 && !s6) {
 838              		.loc 1 423 0
 839 0004 1C4B     		ldr	r3, .L44
 840 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 841 0008 002B     		cmp	r3, #0
 842 000a 0FD1     		bne	.L37
 843              		.loc 1 423 0 is_stmt 0 discriminator 1
 844 000c 1B4B     		ldr	r3, .L44+4
 845 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 846 0010 002B     		cmp	r3, #0
 847 0012 0BD1     		bne	.L37
 424:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 848              		.loc 1 424 0 is_stmt 1
 849 0014 1A4B     		ldr	r3, .L44+8
 850 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 851 0018 032B     		cmp	r3, #3
 852 001a 01D0     		beq	.L38
 425:main.c        ****             return AdjustToTheLeft;
 853              		.loc 1 425 0
 854 001c 0323     		movs	r3, #3
 855 001e 26E0     		b	.L39
 856              	.L38:
 426:main.c        ****         }
 427:main.c        ****         if (previousDirection != AdjustToTheRight) {
 857              		.loc 1 427 0
 858 0020 174B     		ldr	r3, .L44+8
 859 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 0024 042B     		cmp	r3, #4
 861 0026 01D0     		beq	.L37
 428:main.c        ****             return AdjustToTheRight;    
 862              		.loc 1 428 0
 863 0028 0423     		movs	r3, #4
 864 002a 20E0     		b	.L39
 865              	.L37:
 429:main.c        ****         }
 430:main.c        ****     }
 431:main.c        ****     
 432:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 433:main.c        ****     if (s5 && s6) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 24


 866              		.loc 1 433 0
 867 002c 124B     		ldr	r3, .L44
 868 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 869 0030 002B     		cmp	r3, #0
 870 0032 0FD0     		beq	.L40
 871              		.loc 1 433 0 is_stmt 0 discriminator 1
 872 0034 114B     		ldr	r3, .L44+4
 873 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 0038 002B     		cmp	r3, #0
 875 003a 0BD0     		beq	.L40
 434:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 876              		.loc 1 434 0 is_stmt 1
 877 003c 104B     		ldr	r3, .L44+8
 878 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 879 0040 032B     		cmp	r3, #3
 880 0042 01D0     		beq	.L41
 435:main.c        ****             return AdjustToTheLeft;
 881              		.loc 1 435 0
 882 0044 0323     		movs	r3, #3
 883 0046 12E0     		b	.L39
 884              	.L41:
 436:main.c        ****         }
 437:main.c        ****         if (previousDirection != AdjustToTheRight) {
 885              		.loc 1 437 0
 886 0048 0D4B     		ldr	r3, .L44+8
 887 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 004c 042B     		cmp	r3, #4
 889 004e 01D0     		beq	.L40
 438:main.c        ****             return AdjustToTheRight;    
 890              		.loc 1 438 0
 891 0050 0423     		movs	r3, #4
 892 0052 0CE0     		b	.L39
 893              	.L40:
 439:main.c        ****         }
 440:main.c        ****     }
 441:main.c        **** 
 442:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 443:main.c        ****     if (s5) {
 894              		.loc 1 443 0
 895 0054 084B     		ldr	r3, .L44
 896 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 897 0058 002B     		cmp	r3, #0
 898 005a 01D0     		beq	.L42
 444:main.c        ****         return AdjustToTheRight;    
 899              		.loc 1 444 0
 900 005c 0423     		movs	r3, #4
 901 005e 06E0     		b	.L39
 902              	.L42:
 445:main.c        ****     }
 446:main.c        ****     if (s6) {
 903              		.loc 1 446 0
 904 0060 064B     		ldr	r3, .L44+4
 905 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 906 0064 002B     		cmp	r3, #0
 907 0066 01D0     		beq	.L43
 447:main.c        ****         return AdjustToTheLeft;    
 908              		.loc 1 447 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 25


 909 0068 0323     		movs	r3, #3
 910 006a 00E0     		b	.L39
 911              	.L43:
 448:main.c        ****     }
 449:main.c        ****    
 450:main.c        ****     // We should never actually get to this point
 451:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 452:main.c        ****     return Stop;
 912              		.loc 1 452 0
 913 006c 0523     		movs	r3, #5
 914              	.L39:
 453:main.c        **** }
 915              		.loc 1 453 0
 916 006e 1846     		mov	r0, r3
 917 0070 BD46     		mov	sp, r7
 918              		.cfi_def_cfa_register 13
 919              		@ sp needed
 920 0072 80BC     		pop	{r7}
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 0074 7047     		bx	lr
 924              	.L45:
 925 0076 00BF     		.align	2
 926              	.L44:
 927 0078 00000000 		.word	s5
 928 007c 00000000 		.word	s6
 929 0080 00000000 		.word	previousDirection
 930              		.cfi_endproc
 931              	.LFE73:
 932              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 933              		.global	__aeabi_fcmpge
 934              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 935              		.align	2
 936              		.global	GetMovementAccordingToInstruction
 937              		.thumb
 938              		.thumb_func
 939              		.type	GetMovementAccordingToInstruction, %function
 940              	GetMovementAccordingToInstruction:
 941              	.LFB74:
 454:main.c        **** 
 455:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 942              		.loc 1 455 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946 0000 80B5     		push	{r7, lr}
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 82B0     		sub	sp, sp, #8
 951              		.cfi_def_cfa_offset 16
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
 456:main.c        ****     float blocksize;
 457:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 954              		.loc 1 457 0
 955 0006 854B     		ldr	r3, .L82
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 26


 956 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957 000a 002B     		cmp	r3, #0
 958 000c 03D0     		beq	.L47
 959              		.loc 1 457 0 is_stmt 0 discriminator 1
 960 000e 834B     		ldr	r3, .L82
 961 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0012 012B     		cmp	r3, #1
 963 0014 03D1     		bne	.L48
 964              	.L47:
 458:main.c        ****         blocksize = yBlocksize;
 965              		.loc 1 458 0 is_stmt 1
 966 0016 824B     		ldr	r3, .L82+4
 967 0018 1B68     		ldr	r3, [r3]	@ float
 968 001a 7B60     		str	r3, [r7, #4]	@ float
 969 001c 02E0     		b	.L49
 970              	.L48:
 459:main.c        ****     } else {
 460:main.c        ****         blocksize = xBlocksize;
 971              		.loc 1 460 0
 972 001e 814B     		ldr	r3, .L82+8
 973 0020 1B68     		ldr	r3, [r3]	@ float
 974 0022 7B60     		str	r3, [r7, #4]	@ float
 975              	.L49:
 461:main.c        ****     }
 462:main.c        ****     
 463:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 464:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 465:main.c        ****         // OR an EVENT happens in the current instruction
 466:main.c        ****         // e.g. CurrentInstruction: GoForward 
 467:main.c        ****         //      S3 on BLACK
 468:main.c        ****         //      Check Ignore Count
 469:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 470:main.c        ****     
 471:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 976              		.loc 1 471 0
 977 0024 804B     		ldr	r3, .L82+12
 978 0026 1B78     		ldrb	r3, [r3]
 979 0028 FB70     		strb	r3, [r7, #3]
 472:main.c        ****     
 473:main.c        ****     switch (currentInstructionDirection) {
 980              		.loc 1 473 0
 981 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 982 002c 052B     		cmp	r3, #5
 983 002e 00F2F080 		bhi	.L50
 984 0032 01A2     		adr	r2, .L52
 985 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 986              		.p2align 2
 987              	.L52:
 988 0038 51000000 		.word	.L51+1
 989 003c 9D000000 		.word	.L53+1
 990 0040 1F010000 		.word	.L54+1
 991 0044 13020000 		.word	.L50+1
 992 0048 A1010000 		.word	.L55+1
 993 004c ED010000 		.word	.L56+1
 994              		.p2align 1
 995              	.L51:
 474:main.c        ****         case GoForward:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 27


 475:main.c        ****             // if s3 or s4 go off, check ignoreCount
 476:main.c        ****             //      if ignoreCount == 0, go to next direction
 477:main.c        ****             //      return stop
 478:main.c        ****             if (!s3) {
 996              		.loc 1 478 0
 997 0050 764B     		ldr	r3, .L82+16
 998 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 0054 002B     		cmp	r3, #0
 1000 0056 0CD1     		bne	.L57
 479:main.c        ****                 if (currentInstruction.ignoreL == 0) {
 1001              		.loc 1 479 0
 1002 0058 734B     		ldr	r3, .L82+12
 1003 005a 5B68     		ldr	r3, [r3, #4]
 1004 005c 002B     		cmp	r3, #0
 1005 005e 03D1     		bne	.L58
 480:main.c        ****                     MoveToNextInstruction();
 1006              		.loc 1 480 0
 1007 0060 FFF7FEFF 		bl	MoveToNextInstruction
 481:main.c        ****                     return Stop;
 1008              		.loc 1 481 0
 1009 0064 0523     		movs	r3, #5
 1010 0066 D5E0     		b	.L59
 1011              	.L58:
 482:main.c        ****                 }
 483:main.c        ****                 currentInstruction.ignoreL--; //decrement ignoreL
 1012              		.loc 1 483 0
 1013 0068 6F4B     		ldr	r3, .L82+12
 1014 006a 5B68     		ldr	r3, [r3, #4]
 1015 006c 013B     		subs	r3, r3, #1
 1016 006e 6E4A     		ldr	r2, .L82+12
 1017 0070 5360     		str	r3, [r2, #4]
 1018              	.L57:
 484:main.c        ****             }
 485:main.c        ****             
 486:main.c        ****             if (!s4) {
 1019              		.loc 1 486 0
 1020 0072 6F4B     		ldr	r3, .L82+20
 1021 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1022 0076 002B     		cmp	r3, #0
 1023 0078 0CD1     		bne	.L60
 487:main.c        ****                 if (currentInstruction.ignoreR == 0) {
 1024              		.loc 1 487 0
 1025 007a 6B4B     		ldr	r3, .L82+12
 1026 007c 9B68     		ldr	r3, [r3, #8]
 1027 007e 002B     		cmp	r3, #0
 1028 0080 03D1     		bne	.L61
 488:main.c        ****                     MoveToNextInstruction();
 1029              		.loc 1 488 0
 1030 0082 FFF7FEFF 		bl	MoveToNextInstruction
 489:main.c        ****                     return Stop;
 1031              		.loc 1 489 0
 1032 0086 0523     		movs	r3, #5
 1033 0088 C4E0     		b	.L59
 1034              	.L61:
 490:main.c        ****                 }
 491:main.c        ****                 currentInstruction.ignoreR--;
 1035              		.loc 1 491 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 28


 1036 008a 674B     		ldr	r3, .L82+12
 1037 008c 9B68     		ldr	r3, [r3, #8]
 1038 008e 013B     		subs	r3, r3, #1
 1039 0090 654A     		ldr	r2, .L82+12
 1040 0092 9360     		str	r3, [r2, #8]
 1041              	.L60:
 492:main.c        ****             }
 493:main.c        ****             return ForwardCourseCorrection();
 1042              		.loc 1 493 0
 1043 0094 FFF7FEFF 		bl	ForwardCourseCorrection
 1044 0098 0346     		mov	r3, r0
 1045 009a BBE0     		b	.L59
 1046              	.L53:
 494:main.c        ****             break;
 495:main.c        ****         case waitForLeftTurn:
 496:main.c        ****             // continue moving forward until s3 goes on black
 497:main.c        ****             // if we are turning left already
 498:main.c        ****                 // wait until s5 || s6 are on black
 499:main.c        ****                 // return stop
 500:main.c        ****             if (turnFinishedFlag) {
 1047              		.loc 1 500 0
 1048 009c 654B     		ldr	r3, .L82+24
 1049 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 00a0 002B     		cmp	r3, #0
 1051 00a2 11D0     		beq	.L62
 501:main.c        ****                 if (turnFinishedFlag) {
 1052              		.loc 1 501 0
 1053 00a4 634B     		ldr	r3, .L82+24
 1054 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 00a8 002B     		cmp	r3, #0
 1056 00aa 0DD0     		beq	.L62
 502:main.c        ****                     if (s3) {
 1057              		.loc 1 502 0
 1058 00ac 5F4B     		ldr	r3, .L82+16
 1059 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 00b0 002B     		cmp	r3, #0
 1061 00b2 05D0     		beq	.L63
 503:main.c        ****                         turnFinishedFlag = 0;
 1062              		.loc 1 503 0
 1063 00b4 5F4B     		ldr	r3, .L82+24
 1064 00b6 0022     		movs	r2, #0
 1065 00b8 1A70     		strb	r2, [r3]
 504:main.c        ****                         MoveToNextInstruction();    
 1066              		.loc 1 504 0
 1067 00ba FFF7FEFF 		bl	MoveToNextInstruction
 1068 00be 03E0     		b	.L62
 1069              	.L63:
 505:main.c        ****                     }
 506:main.c        ****                     else {
 507:main.c        ****                         return ForwardCourseCorrection();        
 1070              		.loc 1 507 0
 1071 00c0 FFF7FEFF 		bl	ForwardCourseCorrection
 1072 00c4 0346     		mov	r3, r0
 1073 00c6 A5E0     		b	.L59
 1074              	.L62:
 508:main.c        ****                     }
 509:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 29


 510:main.c        ****             }
 511:main.c        ****             
 512:main.c        ****             if (currentDirection == Stop) {
 1075              		.loc 1 512 0
 1076 00c8 5B4B     		ldr	r3, .L82+28
 1077 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 00cc 052B     		cmp	r3, #5
 1079 00ce 09D1     		bne	.L64
 513:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 514:main.c        ****                 if (stopBuffer <= 50) {
 1080              		.loc 1 514 0
 1081 00d0 5A4B     		ldr	r3, .L82+32
 1082 00d2 1B68     		ldr	r3, [r3]
 1083 00d4 322B     		cmp	r3, #50
 1084 00d6 01D8     		bhi	.L65
 515:main.c        ****                     return Stop;   
 1085              		.loc 1 515 0
 1086 00d8 0523     		movs	r3, #5
 1087 00da 9BE0     		b	.L59
 1088              	.L65:
 516:main.c        ****                 }
 517:main.c        ****                 return ForwardCourseCorrection();
 1089              		.loc 1 517 0
 1090 00dc FFF7FEFF 		bl	ForwardCourseCorrection
 1091 00e0 0346     		mov	r3, r0
 1092 00e2 97E0     		b	.L59
 1093              	.L64:
 518:main.c        ****             }
 519:main.c        ****          
 520:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 521:main.c        ****             if (currentDirection == TurnLeft) {
 1094              		.loc 1 521 0
 1095 00e4 544B     		ldr	r3, .L82+28
 1096 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 00e8 022B     		cmp	r3, #2
 1098 00ea 0ED1     		bne	.L66
 522:main.c        ****                 if (!s5 && !s6) {
 1099              		.loc 1 522 0
 1100 00ec 544B     		ldr	r3, .L82+36
 1101 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1102 00f0 002B     		cmp	r3, #0
 1103 00f2 08D1     		bne	.L67
 1104              		.loc 1 522 0 is_stmt 0 discriminator 1
 1105 00f4 534B     		ldr	r3, .L82+40
 1106 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 00f8 002B     		cmp	r3, #0
 1108 00fa 04D1     		bne	.L67
 523:main.c        ****                     turnFinishedFlag = 1;
 1109              		.loc 1 523 0 is_stmt 1
 1110 00fc 4D4B     		ldr	r3, .L82+24
 1111 00fe 0122     		movs	r2, #1
 1112 0100 1A70     		strb	r2, [r3]
 524:main.c        ****                     return Stop;
 1113              		.loc 1 524 0
 1114 0102 0523     		movs	r3, #5
 1115 0104 86E0     		b	.L59
 1116              	.L67:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 30


 525:main.c        ****                 }
 526:main.c        ****                 else
 527:main.c        ****                 {
 528:main.c        ****                     return TurnLeft;
 1117              		.loc 1 528 0
 1118 0106 0223     		movs	r3, #2
 1119 0108 84E0     		b	.L59
 1120              	.L66:
 529:main.c        ****                 }
 530:main.c        ****             }
 531:main.c        ****             
 532:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 533:main.c        ****             if (!s3) {
 1121              		.loc 1 533 0
 1122 010a 484B     		ldr	r3, .L82+16
 1123 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 010e 002B     		cmp	r3, #0
 1125 0110 01D1     		bne	.L68
 534:main.c        ****                 return TurnLeft;
 1126              		.loc 1 534 0
 1127 0112 0223     		movs	r3, #2
 1128 0114 7EE0     		b	.L59
 1129              	.L68:
 535:main.c        ****             }
 536:main.c        ****             
 537:main.c        ****             // Otherwise, keep going forward
 538:main.c        ****             return ForwardCourseCorrection(); 
 1130              		.loc 1 538 0
 1131 0116 FFF7FEFF 		bl	ForwardCourseCorrection
 1132 011a 0346     		mov	r3, r0
 1133 011c 7AE0     		b	.L59
 1134              	.L54:
 539:main.c        ****             break;
 540:main.c        ****         case waitForRightTurn:
 541:main.c        ****             // continue moving forward until s4 goes on black
 542:main.c        ****             // if we are turning left already
 543:main.c        ****                 // wait until s5 || s6 are on black
 544:main.c        ****                 // return stop
 545:main.c        ****             if (turnFinishedFlag) {
 1135              		.loc 1 545 0
 1136 011e 454B     		ldr	r3, .L82+24
 1137 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 0122 002B     		cmp	r3, #0
 1139 0124 11D0     		beq	.L69
 546:main.c        ****                 if (turnFinishedFlag) {
 1140              		.loc 1 546 0
 1141 0126 434B     		ldr	r3, .L82+24
 1142 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1143 012a 002B     		cmp	r3, #0
 1144 012c 0DD0     		beq	.L69
 547:main.c        ****                     if (s3) {
 1145              		.loc 1 547 0
 1146 012e 3F4B     		ldr	r3, .L82+16
 1147 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1148 0132 002B     		cmp	r3, #0
 1149 0134 05D0     		beq	.L70
 548:main.c        ****                         turnFinishedFlag = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 31


 1150              		.loc 1 548 0
 1151 0136 3F4B     		ldr	r3, .L82+24
 1152 0138 0022     		movs	r2, #0
 1153 013a 1A70     		strb	r2, [r3]
 549:main.c        ****                         MoveToNextInstruction();    
 1154              		.loc 1 549 0
 1155 013c FFF7FEFF 		bl	MoveToNextInstruction
 1156 0140 03E0     		b	.L69
 1157              	.L70:
 550:main.c        ****                     }
 551:main.c        ****                     else {
 552:main.c        ****                         return ForwardCourseCorrection();        
 1158              		.loc 1 552 0
 1159 0142 FFF7FEFF 		bl	ForwardCourseCorrection
 1160 0146 0346     		mov	r3, r0
 1161 0148 64E0     		b	.L59
 1162              	.L69:
 553:main.c        ****                     }
 554:main.c        ****                 }
 555:main.c        ****             }
 556:main.c        ****             
 557:main.c        ****             if (currentDirection == Stop) {
 1163              		.loc 1 557 0
 1164 014a 3B4B     		ldr	r3, .L82+28
 1165 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 014e 052B     		cmp	r3, #5
 1167 0150 09D1     		bne	.L71
 558:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 559:main.c        ****                 if (stopBuffer <= 50) {
 1168              		.loc 1 559 0
 1169 0152 3A4B     		ldr	r3, .L82+32
 1170 0154 1B68     		ldr	r3, [r3]
 1171 0156 322B     		cmp	r3, #50
 1172 0158 01D8     		bhi	.L72
 560:main.c        ****                     return Stop;   
 1173              		.loc 1 560 0
 1174 015a 0523     		movs	r3, #5
 1175 015c 5AE0     		b	.L59
 1176              	.L72:
 561:main.c        ****                 }
 562:main.c        **** 
 563:main.c        ****                 return ForwardCourseCorrection();
 1177              		.loc 1 563 0
 1178 015e FFF7FEFF 		bl	ForwardCourseCorrection
 1179 0162 0346     		mov	r3, r0
 1180 0164 56E0     		b	.L59
 1181              	.L71:
 564:main.c        ****             }
 565:main.c        ****                       
 566:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 567:main.c        ****             if (currentDirection == TurnRight) {
 1182              		.loc 1 567 0
 1183 0166 344B     		ldr	r3, .L82+28
 1184 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1185 016a 012B     		cmp	r3, #1
 1186 016c 0ED1     		bne	.L73
 568:main.c        ****                 if (!s5 && !s6) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 32


 1187              		.loc 1 568 0
 1188 016e 344B     		ldr	r3, .L82+36
 1189 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 0172 002B     		cmp	r3, #0
 1191 0174 08D1     		bne	.L74
 1192              		.loc 1 568 0 is_stmt 0 discriminator 1
 1193 0176 334B     		ldr	r3, .L82+40
 1194 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 017a 002B     		cmp	r3, #0
 1196 017c 04D1     		bne	.L74
 569:main.c        ****                     turnFinishedFlag = 1;
 1197              		.loc 1 569 0 is_stmt 1
 1198 017e 2D4B     		ldr	r3, .L82+24
 1199 0180 0122     		movs	r2, #1
 1200 0182 1A70     		strb	r2, [r3]
 570:main.c        ****                     return Stop;
 1201              		.loc 1 570 0
 1202 0184 0523     		movs	r3, #5
 1203 0186 45E0     		b	.L59
 1204              	.L74:
 571:main.c        ****                 }
 572:main.c        ****                 else
 573:main.c        ****                 {
 574:main.c        ****                     return TurnRight;
 1205              		.loc 1 574 0
 1206 0188 0123     		movs	r3, #1
 1207 018a 43E0     		b	.L59
 1208              	.L73:
 575:main.c        ****                 }
 576:main.c        ****             }
 577:main.c        ****             
 578:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 579:main.c        ****             if (!s4) {
 1209              		.loc 1 579 0
 1210 018c 284B     		ldr	r3, .L82+20
 1211 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 0190 002B     		cmp	r3, #0
 1213 0192 01D1     		bne	.L75
 580:main.c        ****                 return TurnRight;
 1214              		.loc 1 580 0
 1215 0194 0123     		movs	r3, #1
 1216 0196 3DE0     		b	.L59
 1217              	.L75:
 581:main.c        ****             }
 582:main.c        ****             
 583:main.c        ****             // Otherwise, keep going forward
 584:main.c        ****             return ForwardCourseCorrection(); 
 1218              		.loc 1 584 0
 1219 0198 FFF7FEFF 		bl	ForwardCourseCorrection
 1220 019c 0346     		mov	r3, r0
 1221 019e 39E0     		b	.L59
 1222              	.L55:
 585:main.c        ****             break;
 586:main.c        ****         case ForwardUntilTarget:
 587:main.c        ****             // Reset distance on first iteration of this instruction
 588:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1223              		.loc 1 588 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 33


 1224 01a0 294B     		ldr	r3, .L82+44
 1225 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1226 01a4 002B     		cmp	r3, #0
 1227 01a6 0ED1     		bne	.L76
 589:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1228              		.loc 1 589 0
 1229 01a8 274B     		ldr	r3, .L82+44
 1230 01aa 0122     		movs	r2, #1
 1231 01ac 1A70     		strb	r2, [r3]
 590:main.c        ****                 totalDistance = 0;
 1232              		.loc 1 590 0
 1233 01ae 274B     		ldr	r3, .L82+48
 1234 01b0 4FF00002 		mov	r2, #0
 1235 01b4 1A60     		str	r2, [r3]	@ float
 591:main.c        **** 
 592:main.c        ****                 blockSizeTotal = blocksize * 6;
 1236              		.loc 1 592 0
 1237 01b6 2649     		ldr	r1, .L82+52
 1238 01b8 7868     		ldr	r0, [r7, #4]	@ float
 1239 01ba FFF7FEFF 		bl	__aeabi_fmul
 1240 01be 0346     		mov	r3, r0
 1241 01c0 1A46     		mov	r2, r3
 1242 01c2 244B     		ldr	r3, .L82+56
 1243 01c4 1A60     		str	r2, [r3]	@ float
 1244              	.L76:
 593:main.c        ****             }
 594:main.c        ****             
 595:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 596:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1245              		.loc 1 596 0
 1246 01c6 214B     		ldr	r3, .L82+48
 1247 01c8 1A68     		ldr	r2, [r3]	@ float
 1248 01ca 224B     		ldr	r3, .L82+56
 1249 01cc 1B68     		ldr	r3, [r3]	@ float
 1250 01ce 1946     		mov	r1, r3
 1251 01d0 1046     		mov	r0, r2
 1252 01d2 FFF7FEFF 		bl	__aeabi_fcmpge
 1253 01d6 0346     		mov	r3, r0
 1254 01d8 002B     		cmp	r3, #0
 1255 01da 03D0     		beq	.L81
 597:main.c        ****                 // Get next instruction
 598:main.c        ****                 MoveToNextInstruction();
 1256              		.loc 1 598 0
 1257 01dc FFF7FEFF 		bl	MoveToNextInstruction
 599:main.c        **** 
 600:main.c        ****                 
 601:main.c        ****                 return Stop;
 1258              		.loc 1 601 0
 1259 01e0 0523     		movs	r3, #5
 1260 01e2 17E0     		b	.L59
 1261              	.L81:
 602:main.c        ****             }
 603:main.c        ****             
 604:main.c        ****             return ForwardCourseCorrection();
 1262              		.loc 1 604 0
 1263 01e4 FFF7FEFF 		bl	ForwardCourseCorrection
 1264 01e8 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 34


 1265 01ea 13E0     		b	.L59
 1266              	.L56:
 605:main.c        ****             break;
 606:main.c        ****         case StopAtTarget:
 607:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 608:main.c        ****             // Reset flags
 609:main.c        ****             totalDistance = 0;
 1267              		.loc 1 609 0
 1268 01ec 174B     		ldr	r3, .L82+48
 1269 01ee 4FF00002 		mov	r2, #0
 1270 01f2 1A60     		str	r2, [r3]	@ float
 610:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1271              		.loc 1 610 0
 1272 01f4 144B     		ldr	r3, .L82+44
 1273 01f6 0022     		movs	r2, #0
 1274 01f8 1A70     		strb	r2, [r3]
 611:main.c        ****             blockSizeTotal = 0;
 1275              		.loc 1 611 0
 1276 01fa 164B     		ldr	r3, .L82+56
 1277 01fc 4FF00002 		mov	r2, #0
 1278 0200 1A60     		str	r2, [r3]	@ float
 612:main.c        ****             
 613:main.c        ****             if (stopBuffer <= 200) {
 1279              		.loc 1 613 0
 1280 0202 0E4B     		ldr	r3, .L82+32
 1281 0204 1B68     		ldr	r3, [r3]
 1282 0206 C82B     		cmp	r3, #200
 1283 0208 01D8     		bhi	.L79
 614:main.c        ****                 return Stop;    
 1284              		.loc 1 614 0
 1285 020a 0523     		movs	r3, #5
 1286 020c 02E0     		b	.L59
 1287              	.L79:
 615:main.c        ****             }
 616:main.c        ****             return TurnRight;
 1288              		.loc 1 616 0
 1289 020e 0123     		movs	r3, #1
 1290 0210 00E0     		b	.L59
 1291              	.L50:
 617:main.c        ****             break;
 618:main.c        ****         default:
 619:main.c        ****             return Stop;
 1292              		.loc 1 619 0
 1293 0212 0523     		movs	r3, #5
 1294              	.L59:
 620:main.c        ****             break;
 621:main.c        ****     }
 622:main.c        ****     return Stop;
 623:main.c        **** }
 1295              		.loc 1 623 0
 1296 0214 1846     		mov	r0, r3
 1297 0216 0837     		adds	r7, r7, #8
 1298              		.cfi_def_cfa_offset 8
 1299 0218 BD46     		mov	sp, r7
 1300              		.cfi_def_cfa_register 13
 1301              		@ sp needed
 1302 021a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 35


 1303              	.L83:
 1304              		.align	2
 1305              	.L82:
 1306 021c 00000000 		.word	currentRobotOrientation
 1307 0220 00000000 		.word	yBlocksize
 1308 0224 00000000 		.word	xBlocksize
 1309 0228 00000000 		.word	currentInstruction
 1310 022c 00000000 		.word	s3
 1311 0230 00000000 		.word	s4
 1312 0234 00000000 		.word	turnFinishedFlag
 1313 0238 00000000 		.word	currentDirection
 1314 023c 00000000 		.word	stopBuffer
 1315 0240 00000000 		.word	s5
 1316 0244 00000000 		.word	s6
 1317 0248 00000000 		.word	forwardUntilTargetStartedFlag
 1318 024c 00000000 		.word	totalDistance
 1319 0250 0000C040 		.word	1086324736
 1320 0254 00000000 		.word	blockSizeTotal
 1321              		.cfi_endproc
 1322              	.LFE74:
 1323              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1324              		.global	__aeabi_i2f
 1325              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1326              		.align	2
 1327              		.global	CalculateDistanceToTravel
 1328              		.thumb
 1329              		.thumb_func
 1330              		.type	CalculateDistanceToTravel, %function
 1331              	CalculateDistanceToTravel:
 1332              	.LFB75:
 624:main.c        **** 
 625:main.c        **** // Calculate total blocksize to travel until target
 626:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1333              		.loc 1 626 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 40
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 8AB0     		sub	sp, sp, #40
 1342              		.cfi_def_cfa_offset 48
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 1345 0006 7860     		str	r0, [r7, #4]	@ float
 627:main.c        ****     float totalBlockSize;
 628:main.c        ****     
 629:main.c        ****     // Check for Row, Col that target is 
 630:main.c        ****     int targetRow = food_list[0][0];
 1346              		.loc 1 630 0
 1347 0008 9D4B     		ldr	r3, .L129
 1348 000a 1B68     		ldr	r3, [r3]
 1349 000c 3B61     		str	r3, [r7, #16]
 631:main.c        ****     int targetCol = food_list[0][1];
 1350              		.loc 1 631 0
 1351 000e 9C4B     		ldr	r3, .L129
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 36


 1352 0010 5B68     		ldr	r3, [r3, #4]
 1353 0012 FB60     		str	r3, [r7, #12]
 632:main.c        ****     
 633:main.c        ****     int pathCount = 0;
 1354              		.loc 1 633 0
 1355 0014 0023     		movs	r3, #0
 1356 0016 7B62     		str	r3, [r7, #36]
 634:main.c        ****     
 635:main.c        ****     // Depending on the robot orientation
 636:main.c        ****     // count++ if row, col is 8
 637:main.c        ****     // count reset if row, col is 1 or 0
 638:main.c        ****     // save count if row, col is 9
 639:main.c        ****     switch (currentRobotOrientation) {
 1357              		.loc 1 639 0
 1358 0018 9A4B     		ldr	r3, .L129+4
 1359 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1360 001c 032B     		cmp	r3, #3
 1361 001e 00F21F81 		bhi	.L85
 1362 0022 01A2     		adr	r2, .L87
 1363 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1364              		.p2align 2
 1365              	.L87:
 1366 0028 39000000 		.word	.L86+1
 1367 002c C3000000 		.word	.L88+1
 1368 0030 4D010000 		.word	.L89+1
 1369 0034 D7010000 		.word	.L90+1
 1370              		.p2align 1
 1371              	.L86:
 1372              	.LBB3:
 640:main.c        ****         case Up:
 641:main.c        ****             // Column
 642:main.c        ****             // Start from Bottom (since we're facing up)
 643:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1373              		.loc 1 643 0
 1374 0038 0F23     		movs	r3, #15
 1375 003a 3B62     		str	r3, [r7, #32]
 1376 003c 3BE0     		b	.L91
 1377              	.L97:
 644:main.c        ****                 if (map[i][targetCol] == 9) {
 1378              		.loc 1 644 0
 1379 003e 9249     		ldr	r1, .L129+8
 1380 0040 3A6A     		ldr	r2, [r7, #32]
 1381 0042 1346     		mov	r3, r2
 1382 0044 DB00     		lsls	r3, r3, #3
 1383 0046 1344     		add	r3, r3, r2
 1384 0048 5B00     		lsls	r3, r3, #1
 1385 004a 1344     		add	r3, r3, r2
 1386 004c FA68     		ldr	r2, [r7, #12]
 1387 004e 1344     		add	r3, r3, r2
 1388 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1389 0054 092B     		cmp	r3, #9
 1390 0056 32D0     		beq	.L124
 645:main.c        ****                     break;    
 646:main.c        ****                 }
 647:main.c        ****                 if (map[i][targetCol] == 8) {
 1391              		.loc 1 647 0
 1392 0058 8B49     		ldr	r1, .L129+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 37


 1393 005a 3A6A     		ldr	r2, [r7, #32]
 1394 005c 1346     		mov	r3, r2
 1395 005e DB00     		lsls	r3, r3, #3
 1396 0060 1344     		add	r3, r3, r2
 1397 0062 5B00     		lsls	r3, r3, #1
 1398 0064 1344     		add	r3, r3, r2
 1399 0066 FA68     		ldr	r2, [r7, #12]
 1400 0068 1344     		add	r3, r3, r2
 1401 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1402 006e 082B     		cmp	r3, #8
 1403 0070 02D1     		bne	.L94
 648:main.c        ****                     pathCount++;    
 1404              		.loc 1 648 0
 1405 0072 7B6A     		ldr	r3, [r7, #36]
 1406 0074 0133     		adds	r3, r3, #1
 1407 0076 7B62     		str	r3, [r7, #36]
 1408              	.L94:
 649:main.c        ****                 }
 650:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1409              		.loc 1 650 0
 1410 0078 8349     		ldr	r1, .L129+8
 1411 007a 3A6A     		ldr	r2, [r7, #32]
 1412 007c 1346     		mov	r3, r2
 1413 007e DB00     		lsls	r3, r3, #3
 1414 0080 1344     		add	r3, r3, r2
 1415 0082 5B00     		lsls	r3, r3, #1
 1416 0084 1344     		add	r3, r3, r2
 1417 0086 FA68     		ldr	r2, [r7, #12]
 1418 0088 1344     		add	r3, r3, r2
 1419 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1420 008e 002B     		cmp	r3, #0
 1421 0090 0CD0     		beq	.L95
 1422              		.loc 1 650 0 is_stmt 0 discriminator 1
 1423 0092 7D49     		ldr	r1, .L129+8
 1424 0094 3A6A     		ldr	r2, [r7, #32]
 1425 0096 1346     		mov	r3, r2
 1426 0098 DB00     		lsls	r3, r3, #3
 1427 009a 1344     		add	r3, r3, r2
 1428 009c 5B00     		lsls	r3, r3, #1
 1429 009e 1344     		add	r3, r3, r2
 1430 00a0 FA68     		ldr	r2, [r7, #12]
 1431 00a2 1344     		add	r3, r3, r2
 1432 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1433 00a8 012B     		cmp	r3, #1
 1434 00aa 01D1     		bne	.L96
 1435              	.L95:
 651:main.c        ****                     pathCount = 0;
 1436              		.loc 1 651 0 is_stmt 1
 1437 00ac 0023     		movs	r3, #0
 1438 00ae 7B62     		str	r3, [r7, #36]
 1439              	.L96:
 643:main.c        ****                 if (map[i][targetCol] == 9) {
 1440              		.loc 1 643 0 discriminator 2
 1441 00b0 3B6A     		ldr	r3, [r7, #32]
 1442 00b2 013B     		subs	r3, r3, #1
 1443 00b4 3B62     		str	r3, [r7, #32]
 1444              	.L91:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 38


 643:main.c        ****                 if (map[i][targetCol] == 9) {
 1445              		.loc 1 643 0 is_stmt 0 discriminator 1
 1446 00b6 3B6A     		ldr	r3, [r7, #32]
 1447 00b8 002B     		cmp	r3, #0
 1448 00ba C0DA     		bge	.L97
 1449              	.LBE3:
 652:main.c        ****                 }
 653:main.c        ****             }
 654:main.c        ****             break;
 1450              		.loc 1 654 0 is_stmt 1
 1451 00bc D0E0     		b	.L85
 1452              	.L124:
 1453              	.LBB4:
 645:main.c        ****                 }
 1454              		.loc 1 645 0
 1455 00be 00BF     		nop
 1456              	.LBE4:
 1457              		.loc 1 654 0
 1458 00c0 CEE0     		b	.L85
 1459              	.L88:
 1460              	.LBB5:
 655:main.c        ****         case Down:
 656:main.c        ****             // Target Column, Check Row
 657:main.c        ****             // Start from Top
 658:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1461              		.loc 1 658 0
 1462 00c2 0023     		movs	r3, #0
 1463 00c4 FB61     		str	r3, [r7, #28]
 1464 00c6 3BE0     		b	.L98
 1465              	.L104:
 659:main.c        ****                 if (map[i][targetCol] == 9) {
 1466              		.loc 1 659 0
 1467 00c8 6F49     		ldr	r1, .L129+8
 1468 00ca FA69     		ldr	r2, [r7, #28]
 1469 00cc 1346     		mov	r3, r2
 1470 00ce DB00     		lsls	r3, r3, #3
 1471 00d0 1344     		add	r3, r3, r2
 1472 00d2 5B00     		lsls	r3, r3, #1
 1473 00d4 1344     		add	r3, r3, r2
 1474 00d6 FA68     		ldr	r2, [r7, #12]
 1475 00d8 1344     		add	r3, r3, r2
 1476 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1477 00de 092B     		cmp	r3, #9
 1478 00e0 32D0     		beq	.L125
 660:main.c        ****                     break;    
 661:main.c        ****                 }
 662:main.c        ****                 if (map[i][targetCol] == 8) {
 1479              		.loc 1 662 0
 1480 00e2 6949     		ldr	r1, .L129+8
 1481 00e4 FA69     		ldr	r2, [r7, #28]
 1482 00e6 1346     		mov	r3, r2
 1483 00e8 DB00     		lsls	r3, r3, #3
 1484 00ea 1344     		add	r3, r3, r2
 1485 00ec 5B00     		lsls	r3, r3, #1
 1486 00ee 1344     		add	r3, r3, r2
 1487 00f0 FA68     		ldr	r2, [r7, #12]
 1488 00f2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 39


 1489 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1490 00f8 082B     		cmp	r3, #8
 1491 00fa 02D1     		bne	.L101
 663:main.c        ****                     pathCount++;    
 1492              		.loc 1 663 0
 1493 00fc 7B6A     		ldr	r3, [r7, #36]
 1494 00fe 0133     		adds	r3, r3, #1
 1495 0100 7B62     		str	r3, [r7, #36]
 1496              	.L101:
 664:main.c        ****                 }
 665:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1497              		.loc 1 665 0
 1498 0102 6149     		ldr	r1, .L129+8
 1499 0104 FA69     		ldr	r2, [r7, #28]
 1500 0106 1346     		mov	r3, r2
 1501 0108 DB00     		lsls	r3, r3, #3
 1502 010a 1344     		add	r3, r3, r2
 1503 010c 5B00     		lsls	r3, r3, #1
 1504 010e 1344     		add	r3, r3, r2
 1505 0110 FA68     		ldr	r2, [r7, #12]
 1506 0112 1344     		add	r3, r3, r2
 1507 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1508 0118 002B     		cmp	r3, #0
 1509 011a 0CD0     		beq	.L102
 1510              		.loc 1 665 0 is_stmt 0 discriminator 1
 1511 011c 5A49     		ldr	r1, .L129+8
 1512 011e FA69     		ldr	r2, [r7, #28]
 1513 0120 1346     		mov	r3, r2
 1514 0122 DB00     		lsls	r3, r3, #3
 1515 0124 1344     		add	r3, r3, r2
 1516 0126 5B00     		lsls	r3, r3, #1
 1517 0128 1344     		add	r3, r3, r2
 1518 012a FA68     		ldr	r2, [r7, #12]
 1519 012c 1344     		add	r3, r3, r2
 1520 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1521 0132 012B     		cmp	r3, #1
 1522 0134 01D1     		bne	.L103
 1523              	.L102:
 666:main.c        ****                     pathCount = 0;
 1524              		.loc 1 666 0 is_stmt 1
 1525 0136 0023     		movs	r3, #0
 1526 0138 7B62     		str	r3, [r7, #36]
 1527              	.L103:
 658:main.c        ****                 if (map[i][targetCol] == 9) {
 1528              		.loc 1 658 0 discriminator 2
 1529 013a FB69     		ldr	r3, [r7, #28]
 1530 013c 0133     		adds	r3, r3, #1
 1531 013e FB61     		str	r3, [r7, #28]
 1532              	.L98:
 658:main.c        ****                 if (map[i][targetCol] == 9) {
 1533              		.loc 1 658 0 is_stmt 0 discriminator 1
 1534 0140 FB69     		ldr	r3, [r7, #28]
 1535 0142 0E2B     		cmp	r3, #14
 1536 0144 C0DD     		ble	.L104
 1537              	.LBE5:
 667:main.c        ****                 }
 668:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 40


 669:main.c        ****             break;
 1538              		.loc 1 669 0 is_stmt 1
 1539 0146 8BE0     		b	.L85
 1540              	.L125:
 1541              	.LBB6:
 660:main.c        ****                 }
 1542              		.loc 1 660 0
 1543 0148 00BF     		nop
 1544              	.LBE6:
 1545              		.loc 1 669 0
 1546 014a 89E0     		b	.L85
 1547              	.L89:
 1548              	.LBB7:
 670:main.c        ****         case Left:
 671:main.c        ****             // Target Row, Check Col
 672:main.c        ****             // Start from Right
 673:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1549              		.loc 1 673 0
 1550 014c 1323     		movs	r3, #19
 1551 014e BB61     		str	r3, [r7, #24]
 1552 0150 3BE0     		b	.L105
 1553              	.L111:
 674:main.c        ****                 if (map[targetRow][i] == 9) {
 1554              		.loc 1 674 0
 1555 0152 4D49     		ldr	r1, .L129+8
 1556 0154 3A69     		ldr	r2, [r7, #16]
 1557 0156 1346     		mov	r3, r2
 1558 0158 DB00     		lsls	r3, r3, #3
 1559 015a 1344     		add	r3, r3, r2
 1560 015c 5B00     		lsls	r3, r3, #1
 1561 015e 1344     		add	r3, r3, r2
 1562 0160 BA69     		ldr	r2, [r7, #24]
 1563 0162 1344     		add	r3, r3, r2
 1564 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1565 0168 092B     		cmp	r3, #9
 1566 016a 32D0     		beq	.L126
 675:main.c        ****                     break;    
 676:main.c        ****                 }
 677:main.c        ****                 if (map[targetRow][i] == 8) {
 1567              		.loc 1 677 0
 1568 016c 4649     		ldr	r1, .L129+8
 1569 016e 3A69     		ldr	r2, [r7, #16]
 1570 0170 1346     		mov	r3, r2
 1571 0172 DB00     		lsls	r3, r3, #3
 1572 0174 1344     		add	r3, r3, r2
 1573 0176 5B00     		lsls	r3, r3, #1
 1574 0178 1344     		add	r3, r3, r2
 1575 017a BA69     		ldr	r2, [r7, #24]
 1576 017c 1344     		add	r3, r3, r2
 1577 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1578 0182 082B     		cmp	r3, #8
 1579 0184 02D1     		bne	.L108
 678:main.c        ****                     pathCount++;    
 1580              		.loc 1 678 0
 1581 0186 7B6A     		ldr	r3, [r7, #36]
 1582 0188 0133     		adds	r3, r3, #1
 1583 018a 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 41


 1584              	.L108:
 679:main.c        ****                 }
 680:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1585              		.loc 1 680 0
 1586 018c 3E49     		ldr	r1, .L129+8
 1587 018e 3A69     		ldr	r2, [r7, #16]
 1588 0190 1346     		mov	r3, r2
 1589 0192 DB00     		lsls	r3, r3, #3
 1590 0194 1344     		add	r3, r3, r2
 1591 0196 5B00     		lsls	r3, r3, #1
 1592 0198 1344     		add	r3, r3, r2
 1593 019a BA69     		ldr	r2, [r7, #24]
 1594 019c 1344     		add	r3, r3, r2
 1595 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1596 01a2 002B     		cmp	r3, #0
 1597 01a4 0CD0     		beq	.L109
 1598              		.loc 1 680 0 is_stmt 0 discriminator 1
 1599 01a6 3849     		ldr	r1, .L129+8
 1600 01a8 BA69     		ldr	r2, [r7, #24]
 1601 01aa 1346     		mov	r3, r2
 1602 01ac DB00     		lsls	r3, r3, #3
 1603 01ae 1344     		add	r3, r3, r2
 1604 01b0 5B00     		lsls	r3, r3, #1
 1605 01b2 1344     		add	r3, r3, r2
 1606 01b4 FA68     		ldr	r2, [r7, #12]
 1607 01b6 1344     		add	r3, r3, r2
 1608 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1609 01bc 012B     		cmp	r3, #1
 1610 01be 01D1     		bne	.L110
 1611              	.L109:
 681:main.c        ****                     pathCount = 0;
 1612              		.loc 1 681 0 is_stmt 1
 1613 01c0 0023     		movs	r3, #0
 1614 01c2 7B62     		str	r3, [r7, #36]
 1615              	.L110:
 673:main.c        ****                 if (map[targetRow][i] == 9) {
 1616              		.loc 1 673 0 discriminator 2
 1617 01c4 BB69     		ldr	r3, [r7, #24]
 1618 01c6 013B     		subs	r3, r3, #1
 1619 01c8 BB61     		str	r3, [r7, #24]
 1620              	.L105:
 673:main.c        ****                 if (map[targetRow][i] == 9) {
 1621              		.loc 1 673 0 is_stmt 0 discriminator 1
 1622 01ca BB69     		ldr	r3, [r7, #24]
 1623 01cc 002B     		cmp	r3, #0
 1624 01ce C0DA     		bge	.L111
 1625              	.LBE7:
 682:main.c        ****                 }
 683:main.c        ****             }
 684:main.c        ****             break;
 1626              		.loc 1 684 0 is_stmt 1
 1627 01d0 46E0     		b	.L85
 1628              	.L126:
 1629              	.LBB8:
 675:main.c        ****                 }
 1630              		.loc 1 675 0
 1631 01d2 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 42


 1632              	.LBE8:
 1633              		.loc 1 684 0
 1634 01d4 44E0     		b	.L85
 1635              	.L90:
 1636              	.LBB9:
 685:main.c        ****         
 686:main.c        ****         case Right:
 687:main.c        ****             // Target Row, Check Col
 688:main.c        ****             // Start from Left
 689:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 1637              		.loc 1 689 0
 1638 01d6 0023     		movs	r3, #0
 1639 01d8 7B61     		str	r3, [r7, #20]
 1640 01da 3BE0     		b	.L112
 1641              	.L118:
 690:main.c        ****                 if (map[targetRow][i] == 9) {
 1642              		.loc 1 690 0
 1643 01dc 2A49     		ldr	r1, .L129+8
 1644 01de 3A69     		ldr	r2, [r7, #16]
 1645 01e0 1346     		mov	r3, r2
 1646 01e2 DB00     		lsls	r3, r3, #3
 1647 01e4 1344     		add	r3, r3, r2
 1648 01e6 5B00     		lsls	r3, r3, #1
 1649 01e8 1344     		add	r3, r3, r2
 1650 01ea 7A69     		ldr	r2, [r7, #20]
 1651 01ec 1344     		add	r3, r3, r2
 1652 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1653 01f2 092B     		cmp	r3, #9
 1654 01f4 32D0     		beq	.L127
 691:main.c        ****                     break;    
 692:main.c        ****                 }
 693:main.c        ****                 if (map[targetRow][i] == 8) {
 1655              		.loc 1 693 0
 1656 01f6 2449     		ldr	r1, .L129+8
 1657 01f8 3A69     		ldr	r2, [r7, #16]
 1658 01fa 1346     		mov	r3, r2
 1659 01fc DB00     		lsls	r3, r3, #3
 1660 01fe 1344     		add	r3, r3, r2
 1661 0200 5B00     		lsls	r3, r3, #1
 1662 0202 1344     		add	r3, r3, r2
 1663 0204 7A69     		ldr	r2, [r7, #20]
 1664 0206 1344     		add	r3, r3, r2
 1665 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1666 020c 082B     		cmp	r3, #8
 1667 020e 02D1     		bne	.L115
 694:main.c        ****                     pathCount++;    
 1668              		.loc 1 694 0
 1669 0210 7B6A     		ldr	r3, [r7, #36]
 1670 0212 0133     		adds	r3, r3, #1
 1671 0214 7B62     		str	r3, [r7, #36]
 1672              	.L115:
 695:main.c        ****                 }
 696:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 1673              		.loc 1 696 0
 1674 0216 1C49     		ldr	r1, .L129+8
 1675 0218 3A69     		ldr	r2, [r7, #16]
 1676 021a 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 43


 1677 021c DB00     		lsls	r3, r3, #3
 1678 021e 1344     		add	r3, r3, r2
 1679 0220 5B00     		lsls	r3, r3, #1
 1680 0222 1344     		add	r3, r3, r2
 1681 0224 7A69     		ldr	r2, [r7, #20]
 1682 0226 1344     		add	r3, r3, r2
 1683 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1684 022c 002B     		cmp	r3, #0
 1685 022e 0CD0     		beq	.L116
 1686              		.loc 1 696 0 is_stmt 0 discriminator 1
 1687 0230 1549     		ldr	r1, .L129+8
 1688 0232 7A69     		ldr	r2, [r7, #20]
 1689 0234 1346     		mov	r3, r2
 1690 0236 DB00     		lsls	r3, r3, #3
 1691 0238 1344     		add	r3, r3, r2
 1692 023a 5B00     		lsls	r3, r3, #1
 1693 023c 1344     		add	r3, r3, r2
 1694 023e FA68     		ldr	r2, [r7, #12]
 1695 0240 1344     		add	r3, r3, r2
 1696 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1697 0246 012B     		cmp	r3, #1
 1698 0248 01D1     		bne	.L117
 1699              	.L116:
 697:main.c        ****                     pathCount = 0;
 1700              		.loc 1 697 0 is_stmt 1
 1701 024a 0023     		movs	r3, #0
 1702 024c 7B62     		str	r3, [r7, #36]
 1703              	.L117:
 689:main.c        ****                 if (map[targetRow][i] == 9) {
 1704              		.loc 1 689 0 discriminator 2
 1705 024e 7B69     		ldr	r3, [r7, #20]
 1706 0250 0133     		adds	r3, r3, #1
 1707 0252 7B61     		str	r3, [r7, #20]
 1708              	.L112:
 689:main.c        ****                 if (map[targetRow][i] == 9) {
 1709              		.loc 1 689 0 is_stmt 0 discriminator 1
 1710 0254 7B69     		ldr	r3, [r7, #20]
 1711 0256 122B     		cmp	r3, #18
 1712 0258 C0DD     		ble	.L118
 1713              	.LBE9:
 698:main.c        ****                 }
 699:main.c        **** 
 700:main.c        ****             }
 701:main.c        ****             break;
 1714              		.loc 1 701 0 is_stmt 1
 1715 025a 00E0     		b	.L128
 1716              	.L127:
 1717              	.LBB10:
 691:main.c        ****                 }
 1718              		.loc 1 691 0
 1719 025c 00BF     		nop
 1720              	.L128:
 1721              	.LBE10:
 1722              		.loc 1 701 0
 1723 025e 00BF     		nop
 1724              	.L85:
 702:main.c        ****         
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 44


 703:main.c        ****     }
 704:main.c        ****     totalBlockSize = blockSize * pathCount;
 1725              		.loc 1 704 0
 1726 0260 786A     		ldr	r0, [r7, #36]
 1727 0262 FFF7FEFF 		bl	__aeabi_i2f
 1728 0266 0346     		mov	r3, r0
 1729 0268 7968     		ldr	r1, [r7, #4]	@ float
 1730 026a 1846     		mov	r0, r3
 1731 026c FFF7FEFF 		bl	__aeabi_fmul
 1732 0270 0346     		mov	r3, r0
 1733 0272 BB60     		str	r3, [r7, #8]	@ float
 705:main.c        ****     return totalBlockSize;
 1734              		.loc 1 705 0
 1735 0274 BB68     		ldr	r3, [r7, #8]	@ float
 706:main.c        **** }
 1736              		.loc 1 706 0
 1737 0276 1846     		mov	r0, r3
 1738 0278 2837     		adds	r7, r7, #40
 1739              		.cfi_def_cfa_offset 8
 1740 027a BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 027c 80BD     		pop	{r7, pc}
 1744              	.L130:
 1745 027e 00BF     		.align	2
 1746              	.L129:
 1747 0280 00000000 		.word	food_list
 1748 0284 00000000 		.word	currentRobotOrientation
 1749 0288 00000000 		.word	map
 1750              		.cfi_endproc
 1751              	.LFE75:
 1752              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 1753              		.section	.text.MoveToNextInstruction,"ax",%progbits
 1754              		.align	2
 1755              		.global	MoveToNextInstruction
 1756              		.thumb
 1757              		.thumb_func
 1758              		.type	MoveToNextInstruction, %function
 1759              	MoveToNextInstruction:
 1760              	.LFB76:
 707:main.c        **** 
 708:main.c        **** // get next instruction
 709:main.c        **** void MoveToNextInstruction() {
 1761              		.loc 1 709 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 1766 0000 80B4     		push	{r7}
 1767              		.cfi_def_cfa_offset 4
 1768              		.cfi_offset 7, -4
 1769 0002 00AF     		add	r7, sp, #0
 1770              		.cfi_def_cfa_register 7
 710:main.c        ****     instructionIndex++;
 1771              		.loc 1 710 0
 1772 0004 044B     		ldr	r3, .L132
 1773 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 45


 1774 0008 0133     		adds	r3, r3, #1
 1775 000a 034A     		ldr	r2, .L132
 1776 000c 1360     		str	r3, [r2]
 711:main.c        **** }
 1777              		.loc 1 711 0
 1778 000e 00BF     		nop
 1779 0010 BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 0012 80BC     		pop	{r7}
 1783              		.cfi_restore 7
 1784              		.cfi_def_cfa_offset 0
 1785 0014 7047     		bx	lr
 1786              	.L133:
 1787 0016 00BF     		.align	2
 1788              	.L132:
 1789 0018 00000000 		.word	instructionIndex
 1790              		.cfi_endproc
 1791              	.LFE76:
 1792              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 1793              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 1794              		.align	2
 1795              		.global	GetInstructionAtIndex
 1796              		.thumb
 1797              		.thumb_func
 1798              		.type	GetInstructionAtIndex, %function
 1799              	GetInstructionAtIndex:
 1800              	.LFB77:
 712:main.c        **** 
 713:main.c        **** 
 714:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps], int instruct
 1801              		.loc 1 714 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 32
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806 0000 90B4     		push	{r4, r7}
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 4, -8
 1809              		.cfi_offset 7, -4
 1810 0002 88B0     		sub	sp, sp, #32
 1811              		.cfi_def_cfa_offset 40
 1812 0004 00AF     		add	r7, sp, #0
 1813              		.cfi_def_cfa_register 7
 1814 0006 F860     		str	r0, [r7, #12]
 1815 0008 B960     		str	r1, [r7, #8]
 1816 000a 7A60     		str	r2, [r7, #4]
 1817 000c 3B60     		str	r3, [r7]
 1818              	.LBB11:
 715:main.c        ****     Instruction nextInstruction;
 716:main.c        ****     // input is list of instructions and robot will react accordingly
 717:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 1819              		.loc 1 717 0
 1820 000e 3B68     		ldr	r3, [r7]
 1821 0010 FB61     		str	r3, [r7, #28]
 1822 0012 36E0     		b	.L135
 1823              	.L138:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 46


 718:main.c        ****         if(instructionList[i].direction != Skip) {
 1824              		.loc 1 718 0
 1825 0014 FA69     		ldr	r2, [r7, #28]
 1826 0016 1346     		mov	r3, r2
 1827 0018 5B00     		lsls	r3, r3, #1
 1828 001a 1344     		add	r3, r3, r2
 1829 001c 9B00     		lsls	r3, r3, #2
 1830 001e 1A46     		mov	r2, r3
 1831 0020 7B68     		ldr	r3, [r7, #4]
 1832 0022 1344     		add	r3, r3, r2
 1833 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 0026 062B     		cmp	r3, #6
 1835 0028 26D0     		beq	.L136
 719:main.c        ****             nextInstruction.direction = instructionList[i].direction;
 1836              		.loc 1 719 0
 1837 002a FA69     		ldr	r2, [r7, #28]
 1838 002c 1346     		mov	r3, r2
 1839 002e 5B00     		lsls	r3, r3, #1
 1840 0030 1344     		add	r3, r3, r2
 1841 0032 9B00     		lsls	r3, r3, #2
 1842 0034 1A46     		mov	r2, r3
 1843 0036 7B68     		ldr	r3, [r7, #4]
 1844 0038 1344     		add	r3, r3, r2
 1845 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 003c 3B74     		strb	r3, [r7, #16]
 720:main.c        ****             nextInstruction.ignoreL = instructionList[i].ignoreL;
 1847              		.loc 1 720 0
 1848 003e FA69     		ldr	r2, [r7, #28]
 1849 0040 1346     		mov	r3, r2
 1850 0042 5B00     		lsls	r3, r3, #1
 1851 0044 1344     		add	r3, r3, r2
 1852 0046 9B00     		lsls	r3, r3, #2
 1853 0048 1A46     		mov	r2, r3
 1854 004a 7B68     		ldr	r3, [r7, #4]
 1855 004c 1344     		add	r3, r3, r2
 1856 004e 5B68     		ldr	r3, [r3, #4]
 1857 0050 7B61     		str	r3, [r7, #20]
 721:main.c        ****             nextInstruction.ignoreR = instructionList[i].ignoreR;
 1858              		.loc 1 721 0
 1859 0052 FA69     		ldr	r2, [r7, #28]
 1860 0054 1346     		mov	r3, r2
 1861 0056 5B00     		lsls	r3, r3, #1
 1862 0058 1344     		add	r3, r3, r2
 1863 005a 9B00     		lsls	r3, r3, #2
 1864 005c 1A46     		mov	r2, r3
 1865 005e 7B68     		ldr	r3, [r7, #4]
 1866 0060 1344     		add	r3, r3, r2
 1867 0062 9B68     		ldr	r3, [r3, #8]
 1868 0064 BB61     		str	r3, [r7, #24]
 722:main.c        ****             return nextInstruction; // return next instruction
 1869              		.loc 1 722 0
 1870 0066 FB68     		ldr	r3, [r7, #12]
 1871 0068 1C46     		mov	r4, r3
 1872 006a 07F11003 		add	r3, r7, #16
 1873 006e 93E80700 		ldmia	r3, {r0, r1, r2}
 1874 0072 84E80700 		stmia	r4, {r0, r1, r2}
 1875 0076 10E0     		b	.L134
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 47


 1876              	.L136:
 723:main.c        ****         }
 724:main.c        ****         instructionIndex = i;
 1877              		.loc 1 724 0 discriminator 2
 1878 0078 FB69     		ldr	r3, [r7, #28]
 1879 007a 3B60     		str	r3, [r7]
 717:main.c        ****         if(instructionList[i].direction != Skip) {
 1880              		.loc 1 717 0 discriminator 2
 1881 007c FB69     		ldr	r3, [r7, #28]
 1882 007e 0133     		adds	r3, r3, #1
 1883 0080 FB61     		str	r3, [r7, #28]
 1884              	.L135:
 717:main.c        ****         if(instructionList[i].direction != Skip) {
 1885              		.loc 1 717 0 is_stmt 0 discriminator 1
 1886 0082 FA69     		ldr	r2, [r7, #28]
 1887 0084 BB68     		ldr	r3, [r7, #8]
 1888 0086 9A42     		cmp	r2, r3
 1889 0088 C4DB     		blt	.L138
 1890              	.LBE11:
 725:main.c        ****     }
 726:main.c        ****     return nextInstruction;
 1891              		.loc 1 726 0 is_stmt 1
 1892 008a FB68     		ldr	r3, [r7, #12]
 1893 008c 1C46     		mov	r4, r3
 1894 008e 07F11003 		add	r3, r7, #16
 1895 0092 93E80700 		ldmia	r3, {r0, r1, r2}
 1896 0096 84E80700 		stmia	r4, {r0, r1, r2}
 1897              	.L134:
 727:main.c        **** }
 1898              		.loc 1 727 0
 1899 009a F868     		ldr	r0, [r7, #12]
 1900 009c 2037     		adds	r7, r7, #32
 1901              		.cfi_def_cfa_offset 8
 1902 009e BD46     		mov	sp, r7
 1903              		.cfi_def_cfa_register 13
 1904              		@ sp needed
 1905 00a0 90BC     		pop	{r4, r7}
 1906              		.cfi_restore 7
 1907              		.cfi_restore 4
 1908              		.cfi_def_cfa_offset 0
 1909 00a2 7047     		bx	lr
 1910              		.cfi_endproc
 1911              	.LFE77:
 1912              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 1913              		.section	.text.SetRobotMovement,"ax",%progbits
 1914              		.align	2
 1915              		.global	SetRobotMovement
 1916              		.thumb
 1917              		.thumb_func
 1918              		.type	SetRobotMovement, %function
 1919              	SetRobotMovement:
 1920              	.LFB78:
 728:main.c        **** 
 729:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 730:main.c        **** void SetRobotMovement() {
 1921              		.loc 1 730 0
 1922              		.cfi_startproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 48


 1923              		@ args = 0, pretend = 0, frame = 16
 1924              		@ frame_needed = 1, uses_anonymous_args = 0
 1925 0000 90B5     		push	{r4, r7, lr}
 1926              		.cfi_def_cfa_offset 12
 1927              		.cfi_offset 4, -12
 1928              		.cfi_offset 7, -8
 1929              		.cfi_offset 14, -4
 1930 0002 85B0     		sub	sp, sp, #20
 1931              		.cfi_def_cfa_offset 32
 1932 0004 00AF     		add	r7, sp, #0
 1933              		.cfi_def_cfa_register 7
 731:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList, instructionIndex); // get
 1934              		.loc 1 731 0
 1935 0006 294B     		ldr	r3, .L155
 1936 0008 1968     		ldr	r1, [r3]
 1937 000a 294B     		ldr	r3, .L155+4
 1938 000c 1A68     		ldr	r2, [r3]
 1939 000e 294B     		ldr	r3, .L155+8
 1940 0010 1B68     		ldr	r3, [r3]
 1941 0012 294C     		ldr	r4, .L155+12
 1942 0014 3846     		mov	r0, r7
 1943 0016 FFF7FEFF 		bl	GetInstructionAtIndex
 1944 001a 3B46     		mov	r3, r7
 1945 001c 93E80700 		ldmia	r3, {r0, r1, r2}
 1946 0020 84E80700 		stmia	r4, {r0, r1, r2}
 732:main.c        ****     previousDirection = currentDirection;
 1947              		.loc 1 732 0
 1948 0024 254B     		ldr	r3, .L155+16
 1949 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1950 0028 254B     		ldr	r3, .L155+20
 1951 002a 1A70     		strb	r2, [r3]
 733:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 1952              		.loc 1 733 0
 1953 002c FFF7FEFF 		bl	GetMovementAccordingToInstruction
 1954 0030 0346     		mov	r3, r0
 1955 0032 1A46     		mov	r2, r3
 1956 0034 214B     		ldr	r3, .L155+16
 1957 0036 1A70     		strb	r2, [r3]
 734:main.c        ****     // move robot depending on sensors
 735:main.c        ****     switch (currentDirection) {
 1958              		.loc 1 735 0
 1959 0038 204B     		ldr	r3, .L155+16
 1960 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1961 003c 092B     		cmp	r3, #9
 1962 003e 30D8     		bhi	.L153
 1963 0040 01A2     		adr	r2, .L143
 1964 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1965 0046 00BF     		.p2align 2
 1966              	.L143:
 1967 0048 71000000 		.word	.L142+1
 1968 004c 77000000 		.word	.L144+1
 1969 0050 7D000000 		.word	.L145+1
 1970 0054 89000000 		.word	.L146+1
 1971 0058 83000000 		.word	.L147+1
 1972 005c 8F000000 		.word	.L148+1
 1973 0060 A1000000 		.word	.L154+1
 1974 0064 A1000000 		.word	.L154+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 49


 1975 0068 95000000 		.word	.L151+1
 1976 006c 9B000000 		.word	.L152+1
 1977              		.p2align 1
 1978              	.L142:
 736:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 737:main.c        ****         case Forward:
 738:main.c        ****             moveForward();
 1979              		.loc 1 738 0
 1980 0070 FFF7FEFF 		bl	moveForward
 739:main.c        ****             break;
 1981              		.loc 1 739 0
 1982 0074 15E0     		b	.L141
 1983              	.L144:
 740:main.c        ****         case TurnRight:
 741:main.c        ****             turnRight();
 1984              		.loc 1 741 0
 1985 0076 FFF7FEFF 		bl	turnRight
 742:main.c        ****             break;
 1986              		.loc 1 742 0
 1987 007a 12E0     		b	.L141
 1988              	.L145:
 743:main.c        ****         case TurnLeft:
 744:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1989              		.loc 1 744 0
 1990 007c FFF7FEFF 		bl	turnLeft
 745:main.c        ****             break;
 1991              		.loc 1 745 0
 1992 0080 0FE0     		b	.L141
 1993              	.L147:
 746:main.c        ****         case AdjustToTheRight:
 747:main.c        ****             adjustRight();
 1994              		.loc 1 747 0
 1995 0082 FFF7FEFF 		bl	adjustRight
 748:main.c        ****             break;
 1996              		.loc 1 748 0
 1997 0086 0CE0     		b	.L141
 1998              	.L146:
 749:main.c        ****         case AdjustToTheLeft:
 750:main.c        ****             adjustLeft();
 1999              		.loc 1 750 0
 2000 0088 FFF7FEFF 		bl	adjustLeft
 751:main.c        ****             break;
 2001              		.loc 1 751 0
 2002 008c 09E0     		b	.L141
 2003              	.L148:
 752:main.c        ****         case Stop:
 753:main.c        ****             stopMoving();
 2004              		.loc 1 753 0
 2005 008e FFF7FEFF 		bl	stopMoving
 754:main.c        ****             break;
 2006              		.loc 1 754 0
 2007 0092 06E0     		b	.L141
 2008              	.L151:
 755:main.c        ****         case ForwardAfterTurn:
 756:main.c        ****             moveForward();
 2009              		.loc 1 756 0
 2010 0094 FFF7FEFF 		bl	moveForward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 50


 757:main.c        ****             break;
 2011              		.loc 1 757 0
 2012 0098 03E0     		b	.L141
 2013              	.L152:
 758:main.c        ****         case Backward:
 759:main.c        ****             moveBackward();
 2014              		.loc 1 759 0
 2015 009a FFF7FEFF 		bl	moveBackward
 760:main.c        ****             break;
 2016              		.loc 1 760 0
 2017 009e 00E0     		b	.L141
 2018              	.L154:
 761:main.c        ****         case waitForTurn:
 762:main.c        ****             break;
 763:main.c        ****         /*case waitForLeftTurn:
 764:main.c        ****             moveForward();
 765:main.c        ****             break;
 766:main.c        ****         case waitForRightTurn:
 767:main.c        ****             moveForward();
 768:main.c        ****             break;*/
 769:main.c        ****         case Unknown:
 770:main.c        ****             // UNKNOWN CONFIGURATION
 771:main.c        ****             break;  
 2019              		.loc 1 771 0
 2020 00a0 00BF     		nop
 2021              	.L141:
 2022              	.L153:
 772:main.c        ****     }
 773:main.c        **** }...
 2023              		.loc 1 773 0
 2024 00a2 00BF     		nop
 2025 00a4 1437     		adds	r7, r7, #20
 2026              		.cfi_def_cfa_offset 12
 2027 00a6 BD46     		mov	sp, r7
 2028              		.cfi_def_cfa_register 13
 2029              		@ sp needed
 2030 00a8 90BD     		pop	{r4, r7, pc}
 2031              	.L156:
 2032 00aa 00BF     		.align	2
 2033              	.L155:
 2034 00ac 00000000 		.word	numSteps
 2035 00b0 00000000 		.word	instructionList
 2036 00b4 00000000 		.word	instructionIndex
 2037 00b8 00000000 		.word	currentInstruction
 2038 00bc 00000000 		.word	currentDirection
 2039 00c0 00000000 		.word	previousDirection
 2040              		.cfi_endproc
 2041              	.LFE78:
 2042              		.size	SetRobotMovement, .-SetRobotMovement
 2043              		.text
 2044              	.Letext0:
 2045              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2046              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2047              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2048              		.file 5 "vars.h"
 2049              		.file 6 "pathfinding.h"
 2050              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 51


 2051              		.file 8 "map.h"
 2052              		.section	.debug_info,"",%progbits
 2053              	.Ldebug_info0:
 2054 0000 D3080000 		.4byte	0x8d3
 2055 0004 0400     		.2byte	0x4
 2056 0006 00000000 		.4byte	.Ldebug_abbrev0
 2057 000a 04       		.byte	0x4
 2058 000b 01       		.uleb128 0x1
 2059 000c 82000000 		.4byte	.LASF135
 2060 0010 0C       		.byte	0xc
 2061 0011 30000000 		.4byte	.LASF136
 2062 0015 1E030000 		.4byte	.LASF137
 2063 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2064 001d 00000000 		.4byte	0
 2065 0021 00000000 		.4byte	.Ldebug_line0
 2066 0025 02       		.uleb128 0x2
 2067 0026 01       		.byte	0x1
 2068 0027 06       		.byte	0x6
 2069 0028 AA060000 		.4byte	.LASF0
 2070 002c 02       		.uleb128 0x2
 2071 002d 01       		.byte	0x1
 2072 002e 08       		.byte	0x8
 2073 002f 00060000 		.4byte	.LASF1
 2074 0033 02       		.uleb128 0x2
 2075 0034 02       		.byte	0x2
 2076 0035 05       		.byte	0x5
 2077 0036 04050000 		.4byte	.LASF2
 2078 003a 02       		.uleb128 0x2
 2079 003b 02       		.byte	0x2
 2080 003c 07       		.byte	0x7
 2081 003d C1060000 		.4byte	.LASF3
 2082 0041 03       		.uleb128 0x3
 2083 0042 55000000 		.4byte	.LASF12
 2084 0046 02       		.byte	0x2
 2085 0047 3F       		.byte	0x3f
 2086 0048 4C000000 		.4byte	0x4c
 2087 004c 02       		.uleb128 0x2
 2088 004d 04       		.byte	0x4
 2089 004e 05       		.byte	0x5
 2090 004f 26050000 		.4byte	.LASF4
 2091 0053 02       		.uleb128 0x2
 2092 0054 04       		.byte	0x4
 2093 0055 07       		.byte	0x7
 2094 0056 BC050000 		.4byte	.LASF5
 2095 005a 02       		.uleb128 0x2
 2096 005b 08       		.byte	0x8
 2097 005c 05       		.byte	0x5
 2098 005d F8030000 		.4byte	.LASF6
 2099 0061 02       		.uleb128 0x2
 2100 0062 08       		.byte	0x8
 2101 0063 07       		.byte	0x7
 2102 0064 3F020000 		.4byte	.LASF7
 2103 0068 04       		.uleb128 0x4
 2104 0069 04       		.byte	0x4
 2105 006a 05       		.byte	0x5
 2106 006b 696E7400 		.ascii	"int\000"
 2107 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 52


 2108 0070 04       		.byte	0x4
 2109 0071 07       		.byte	0x7
 2110 0072 48000000 		.4byte	.LASF8
 2111 0076 02       		.uleb128 0x2
 2112 0077 08       		.byte	0x8
 2113 0078 04       		.byte	0x4
 2114 0079 C8040000 		.4byte	.LASF9
 2115 007d 02       		.uleb128 0x2
 2116 007e 04       		.byte	0x4
 2117 007f 07       		.byte	0x7
 2118 0080 B3050000 		.4byte	.LASF10
 2119 0084 02       		.uleb128 0x2
 2120 0085 01       		.byte	0x1
 2121 0086 08       		.byte	0x8
 2122 0087 19030000 		.4byte	.LASF11
 2123 008b 03       		.uleb128 0x3
 2124 008c D9050000 		.4byte	.LASF13
 2125 0090 03       		.byte	0x3
 2126 0091 2C       		.byte	0x2c
 2127 0092 41000000 		.4byte	0x41
 2128 0096 05       		.uleb128 0x5
 2129 0097 17070000 		.4byte	.LASF14
 2130 009b 04       		.byte	0x4
 2131 009c E701     		.2byte	0x1e7
 2132 009e 2C000000 		.4byte	0x2c
 2133 00a2 05       		.uleb128 0x5
 2134 00a3 99030000 		.4byte	.LASF15
 2135 00a7 04       		.byte	0x4
 2136 00a8 E801     		.2byte	0x1e8
 2137 00aa 3A000000 		.4byte	0x3a
 2138 00ae 05       		.uleb128 0x5
 2139 00af 78040000 		.4byte	.LASF16
 2140 00b3 04       		.byte	0x4
 2141 00b4 E901     		.2byte	0x1e9
 2142 00b6 53000000 		.4byte	0x53
 2143 00ba 05       		.uleb128 0x5
 2144 00bb A0030000 		.4byte	.LASF17
 2145 00bf 04       		.byte	0x4
 2146 00c0 EA01     		.2byte	0x1ea
 2147 00c2 25000000 		.4byte	0x25
 2148 00c6 05       		.uleb128 0x5
 2149 00c7 5F000000 		.4byte	.LASF18
 2150 00cb 04       		.byte	0x4
 2151 00cc EB01     		.2byte	0x1eb
 2152 00ce 33000000 		.4byte	0x33
 2153 00d2 02       		.uleb128 0x2
 2154 00d3 04       		.byte	0x4
 2155 00d4 04       		.byte	0x4
 2156 00d5 07020000 		.4byte	.LASF19
 2157 00d9 02       		.uleb128 0x2
 2158 00da 08       		.byte	0x8
 2159 00db 04       		.byte	0x4
 2160 00dc 1D070000 		.4byte	.LASF20
 2161 00e0 06       		.uleb128 0x6
 2162 00e1 9A040000 		.4byte	.LASF45
 2163 00e5 20       		.byte	0x20
 2164 00e6 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 53


 2165 00e7 28       		.byte	0x28
 2166 00e8 B9010000 		.4byte	0x1b9
 2167 00ec 07       		.uleb128 0x7
 2168 00ed A4040000 		.4byte	.LASF21
 2169 00f1 05       		.byte	0x5
 2170 00f2 2A       		.byte	0x2a
 2171 00f3 BA000000 		.4byte	0xba
 2172 00f7 00       		.byte	0
 2173 00f8 07       		.uleb128 0x7
 2174 00f9 39020000 		.4byte	.LASF22
 2175 00fd 05       		.byte	0x5
 2176 00fe 2B       		.byte	0x2b
 2177 00ff 96000000 		.4byte	0x96
 2178 0103 01       		.byte	0x1
 2179 0104 07       		.uleb128 0x7
 2180 0105 E1050000 		.4byte	.LASF23
 2181 0109 05       		.byte	0x5
 2182 010a 2C       		.byte	0x2c
 2183 010b C6000000 		.4byte	0xc6
 2184 010f 02       		.byte	0x2
 2185 0110 07       		.uleb128 0x7
 2186 0111 03030000 		.4byte	.LASF24
 2187 0115 05       		.byte	0x5
 2188 0116 2D       		.byte	0x2d
 2189 0117 C6000000 		.4byte	0xc6
 2190 011b 04       		.byte	0x4
 2191 011c 07       		.uleb128 0x7
 2192 011d D4060000 		.4byte	.LASF25
 2193 0121 05       		.byte	0x5
 2194 0122 2E       		.byte	0x2e
 2195 0123 C6000000 		.4byte	0xc6
 2196 0127 06       		.byte	0x6
 2197 0128 07       		.uleb128 0x7
 2198 0129 3E070000 		.4byte	.LASF26
 2199 012d 05       		.byte	0x5
 2200 012e 2F       		.byte	0x2f
 2201 012f C6000000 		.4byte	0xc6
 2202 0133 08       		.byte	0x8
 2203 0134 07       		.uleb128 0x7
 2204 0135 4C040000 		.4byte	.LASF27
 2205 0139 05       		.byte	0x5
 2206 013a 30       		.byte	0x30
 2207 013b C6000000 		.4byte	0xc6
 2208 013f 0A       		.byte	0xa
 2209 0140 07       		.uleb128 0x7
 2210 0141 6F030000 		.4byte	.LASF28
 2211 0145 05       		.byte	0x5
 2212 0146 31       		.byte	0x31
 2213 0147 C6000000 		.4byte	0xc6
 2214 014b 0C       		.byte	0xc
 2215 014c 07       		.uleb128 0x7
 2216 014d A9040000 		.4byte	.LASF29
 2217 0151 05       		.byte	0x5
 2218 0152 32       		.byte	0x32
 2219 0153 C6000000 		.4byte	0xc6
 2220 0157 0E       		.byte	0xe
 2221 0158 07       		.uleb128 0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 54


 2222 0159 06040000 		.4byte	.LASF30
 2223 015d 05       		.byte	0x5
 2224 015e 33       		.byte	0x33
 2225 015f C6000000 		.4byte	0xc6
 2226 0163 10       		.byte	0x10
 2227 0164 07       		.uleb128 0x7
 2228 0165 9A050000 		.4byte	.LASF31
 2229 0169 05       		.byte	0x5
 2230 016a 34       		.byte	0x34
 2231 016b C6000000 		.4byte	0xc6
 2232 016f 12       		.byte	0x12
 2233 0170 07       		.uleb128 0x7
 2234 0171 5E070000 		.4byte	.LASF32
 2235 0175 05       		.byte	0x5
 2236 0176 35       		.byte	0x35
 2237 0177 C6000000 		.4byte	0xc6
 2238 017b 14       		.byte	0x14
 2239 017c 07       		.uleb128 0x7
 2240 017d B0030000 		.4byte	.LASF33
 2241 0181 05       		.byte	0x5
 2242 0182 36       		.byte	0x36
 2243 0183 C6000000 		.4byte	0xc6
 2244 0187 16       		.byte	0x16
 2245 0188 07       		.uleb128 0x7
 2246 0189 2A010000 		.4byte	.LASF34
 2247 018d 05       		.byte	0x5
 2248 018e 37       		.byte	0x37
 2249 018f C6000000 		.4byte	0xc6
 2250 0193 18       		.byte	0x18
 2251 0194 07       		.uleb128 0x7
 2252 0195 60050000 		.4byte	.LASF35
 2253 0199 05       		.byte	0x5
 2254 019a 38       		.byte	0x38
 2255 019b C6000000 		.4byte	0xc6
 2256 019f 1A       		.byte	0x1a
 2257 01a0 07       		.uleb128 0x7
 2258 01a1 43040000 		.4byte	.LASF36
 2259 01a5 05       		.byte	0x5
 2260 01a6 39       		.byte	0x39
 2261 01a7 C6000000 		.4byte	0xc6
 2262 01ab 1C       		.byte	0x1c
 2263 01ac 07       		.uleb128 0x7
 2264 01ad E2010000 		.4byte	.LASF37
 2265 01b1 05       		.byte	0x5
 2266 01b2 3A       		.byte	0x3a
 2267 01b3 C6000000 		.4byte	0xc6
 2268 01b7 1E       		.byte	0x1e
 2269 01b8 00       		.byte	0
 2270 01b9 08       		.uleb128 0x8
 2271 01ba 1B000000 		.4byte	.LASF50
 2272 01be 01       		.byte	0x1
 2273 01bf 2C000000 		.4byte	0x2c
 2274 01c3 06       		.byte	0x6
 2275 01c4 0D       		.byte	0xd
 2276 01c5 F4010000 		.4byte	0x1f4
 2277 01c9 09       		.uleb128 0x9
 2278 01ca 94060000 		.4byte	.LASF38
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 55


 2279 01ce 00       		.byte	0
 2280 01cf 09       		.uleb128 0x9
 2281 01d0 E8030000 		.4byte	.LASF39
 2282 01d4 01       		.byte	0x1
 2283 01d5 09       		.uleb128 0x9
 2284 01d6 7F040000 		.4byte	.LASF40
 2285 01da 02       		.byte	0x2
 2286 01db 09       		.uleb128 0x9
 2287 01dc 31040000 		.4byte	.LASF41
 2288 01e0 03       		.byte	0x3
 2289 01e1 09       		.uleb128 0x9
 2290 01e2 96020000 		.4byte	.LASF42
 2291 01e6 04       		.byte	0x4
 2292 01e7 09       		.uleb128 0x9
 2293 01e8 EA020000 		.4byte	.LASF43
 2294 01ec 05       		.byte	0x5
 2295 01ed 09       		.uleb128 0x9
 2296 01ee 81060000 		.4byte	.LASF44
 2297 01f2 06       		.byte	0x6
 2298 01f3 00       		.byte	0
 2299 01f4 06       		.uleb128 0x6
 2300 01f5 56020000 		.4byte	.LASF46
 2301 01f9 0C       		.byte	0xc
 2302 01fa 06       		.byte	0x6
 2303 01fb 0E       		.byte	0xe
 2304 01fc 25020000 		.4byte	0x225
 2305 0200 07       		.uleb128 0x7
 2306 0201 00000000 		.4byte	.LASF47
 2307 0205 06       		.byte	0x6
 2308 0206 0F       		.byte	0xf
 2309 0207 B9010000 		.4byte	0x1b9
 2310 020b 00       		.byte	0
 2311 020c 07       		.uleb128 0x7
 2312 020d 67070000 		.4byte	.LASF48
 2313 0211 06       		.byte	0x6
 2314 0212 10       		.byte	0x10
 2315 0213 68000000 		.4byte	0x68
 2316 0217 04       		.byte	0x4
 2317 0218 07       		.uleb128 0x7
 2318 0219 6F070000 		.4byte	.LASF49
 2319 021d 06       		.byte	0x6
 2320 021e 11       		.byte	0x11
 2321 021f 68000000 		.4byte	0x68
 2322 0223 08       		.byte	0x8
 2323 0224 00       		.byte	0
 2324 0225 03       		.uleb128 0x3
 2325 0226 56020000 		.4byte	.LASF46
 2326 022a 06       		.byte	0x6
 2327 022b 12       		.byte	0x12
 2328 022c F4010000 		.4byte	0x1f4
 2329 0230 08       		.uleb128 0x8
 2330 0231 7E050000 		.4byte	.LASF51
 2331 0235 01       		.byte	0x1
 2332 0236 2C000000 		.4byte	0x2c
 2333 023a 06       		.byte	0x6
 2334 023b 14       		.byte	0x14
 2335 023c 58020000 		.4byte	0x258
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 56


 2336 0240 0A       		.uleb128 0xa
 2337 0241 557000   		.ascii	"Up\000"
 2338 0244 00       		.byte	0
 2339 0245 09       		.uleb128 0x9
 2340 0246 8F050000 		.4byte	.LASF52
 2341 024a 01       		.byte	0x1
 2342 024b 09       		.uleb128 0x9
 2343 024c BD030000 		.4byte	.LASF53
 2344 0250 02       		.byte	0x2
 2345 0251 09       		.uleb128 0x9
 2346 0252 94050000 		.4byte	.LASF54
 2347 0256 03       		.byte	0x3
 2348 0257 00       		.byte	0
 2349 0258 08       		.uleb128 0x8
 2350 0259 F2050000 		.4byte	.LASF55
 2351 025d 01       		.byte	0x1
 2352 025e 2C000000 		.4byte	0x2c
 2353 0262 01       		.byte	0x1
 2354 0263 18       		.byte	0x18
 2355 0264 A5020000 		.4byte	0x2a5
 2356 0268 09       		.uleb128 0x9
 2357 0269 46050000 		.4byte	.LASF56
 2358 026d 00       		.byte	0
 2359 026e 09       		.uleb128 0x9
 2360 026f 90040000 		.4byte	.LASF57
 2361 0273 01       		.byte	0x1
 2362 0274 09       		.uleb128 0x9
 2363 0275 5E040000 		.4byte	.LASF58
 2364 0279 02       		.byte	0x2
 2365 027a 09       		.uleb128 0x9
 2366 027b FE060000 		.4byte	.LASF59
 2367 027f 03       		.byte	0x3
 2368 0280 09       		.uleb128 0x9
 2369 0281 3E060000 		.4byte	.LASF60
 2370 0285 04       		.byte	0x4
 2371 0286 09       		.uleb128 0x9
 2372 0287 4F060000 		.4byte	.LASF61
 2373 028b 05       		.byte	0x5
 2374 028c 09       		.uleb128 0x9
 2375 028d 70040000 		.4byte	.LASF62
 2376 0291 06       		.byte	0x6
 2377 0292 09       		.uleb128 0x9
 2378 0293 F7020000 		.4byte	.LASF63
 2379 0297 07       		.byte	0x7
 2380 0298 09       		.uleb128 0x9
 2381 0299 0A000000 		.4byte	.LASF64
 2382 029d 08       		.byte	0x8
 2383 029e 09       		.uleb128 0x9
 2384 029f 0E070000 		.4byte	.LASF65
 2385 02a3 09       		.byte	0x9
 2386 02a4 00       		.byte	0
 2387 02a5 0B       		.uleb128 0xb
 2388 02a6 C2030000 		.4byte	.LASF74
 2389 02aa 01       		.byte	0x1
 2390 02ab 38       		.byte	0x38
 2391 02ac 00000000 		.4byte	.LFB64
 2392 02b0 EC000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 57


 2393 02b4 01       		.uleb128 0x1
 2394 02b5 9C       		.byte	0x9c
 2395 02b6 D3020000 		.4byte	0x2d3
 2396 02ba 0C       		.uleb128 0xc
 2397 02bb 50000000 		.4byte	.LBB2
 2398 02bf 62000000 		.4byte	.LBE2-.LBB2
 2399 02c3 0D       		.uleb128 0xd
 2400 02c4 37040000 		.4byte	.LASF72
 2401 02c8 01       		.byte	0x1
 2402 02c9 45       		.byte	0x45
 2403 02ca D2000000 		.4byte	0xd2
 2404 02ce 02       		.uleb128 0x2
 2405 02cf 91       		.byte	0x91
 2406 02d0 6C       		.sleb128 -20
 2407 02d1 00       		.byte	0
 2408 02d2 00       		.byte	0
 2409 02d3 0E       		.uleb128 0xe
 2410 02d4 1A050000 		.4byte	.LASF66
 2411 02d8 01       		.byte	0x1
 2412 02d9 50       		.byte	0x50
 2413 02da 00000000 		.4byte	.LFB65
 2414 02de 18000000 		.4byte	.LFE65-.LFB65
 2415 02e2 01       		.uleb128 0x1
 2416 02e3 9C       		.byte	0x9c
 2417 02e4 0E       		.uleb128 0xe
 2418 02e5 0E050000 		.4byte	.LASF67
 2419 02e9 01       		.byte	0x1
 2420 02ea 56       		.byte	0x56
 2421 02eb 00000000 		.4byte	.LFB66
 2422 02ef 18000000 		.4byte	.LFE66-.LFB66
 2423 02f3 01       		.uleb128 0x1
 2424 02f4 9C       		.byte	0x9c
 2425 02f5 0E       		.uleb128 0xe
 2426 02f6 9E060000 		.4byte	.LASF68
 2427 02fa 01       		.byte	0x1
 2428 02fb 5C       		.byte	0x5c
 2429 02fc 00000000 		.4byte	.LFB67
 2430 0300 18000000 		.4byte	.LFE67-.LFB67
 2431 0304 01       		.uleb128 0x1
 2432 0305 9C       		.byte	0x9c
 2433 0306 0E       		.uleb128 0xe
 2434 0307 10010000 		.4byte	.LASF69
 2435 030b 01       		.byte	0x1
 2436 030c 62       		.byte	0x62
 2437 030d 00000000 		.4byte	.LFB68
 2438 0311 18000000 		.4byte	.LFE68-.LFB68
 2439 0315 01       		.uleb128 0x1
 2440 0316 9C       		.byte	0x9c
 2441 0317 0F       		.uleb128 0xf
 2442 0318 7F020000 		.4byte	.LASF70
 2443 031c 01       		.byte	0x1
 2444 031d 68       		.byte	0x68
 2445 031e 00000000 		.4byte	.LFB69
 2446 0322 38000000 		.4byte	.LFE69-.LFB69
 2447 0326 01       		.uleb128 0x1
 2448 0327 9C       		.byte	0x9c
 2449 0328 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 58


 2450 0329 E6060000 		.4byte	.LASF71
 2451 032d 01       		.byte	0x1
 2452 032e 74       		.byte	0x74
 2453 032f 68000000 		.4byte	0x68
 2454 0333 00000000 		.4byte	.LFB70
 2455 0337 C0000000 		.4byte	.LFE70-.LFB70
 2456 033b 01       		.uleb128 0x1
 2457 033c 9C       		.byte	0x9c
 2458 033d 11       		.uleb128 0x11
 2459 033e C4020000 		.4byte	.LASF78
 2460 0342 01       		.byte	0x1
 2461 0343 A2       		.byte	0xa2
 2462 0344 C6000000 		.4byte	0xc6
 2463 0348 00000000 		.4byte	.LFB71
 2464 034c 54000000 		.4byte	.LFE71-.LFB71
 2465 0350 01       		.uleb128 0x1
 2466 0351 9C       		.byte	0x9c
 2467 0352 81030000 		.4byte	0x381
 2468 0356 12       		.uleb128 0x12
 2469 0357 33020000 		.4byte	.LASF80
 2470 035b 01       		.byte	0x1
 2471 035c A2       		.byte	0xa2
 2472 035d A2000000 		.4byte	0xa2
 2473 0361 02       		.uleb128 0x2
 2474 0362 91       		.byte	0x91
 2475 0363 66       		.sleb128 -26
 2476 0364 13       		.uleb128 0x13
 2477 0365 63707300 		.ascii	"cps\000"
 2478 0369 01       		.byte	0x1
 2479 036a A4       		.byte	0xa4
 2480 036b D2000000 		.4byte	0xd2
 2481 036f 02       		.uleb128 0x2
 2482 0370 91       		.byte	0x91
 2483 0371 6C       		.sleb128 -20
 2484 0372 13       		.uleb128 0x13
 2485 0373 72706D00 		.ascii	"rpm\000"
 2486 0377 01       		.byte	0x1
 2487 0378 A5       		.byte	0xa5
 2488 0379 C6000000 		.4byte	0xc6
 2489 037d 02       		.uleb128 0x2
 2490 037e 91       		.byte	0x91
 2491 037f 6A       		.sleb128 -22
 2492 0380 00       		.byte	0
 2493 0381 14       		.uleb128 0x14
 2494 0382 D1010000 		.4byte	.LASF86
 2495 0386 01       		.byte	0x1
 2496 0387 AD       		.byte	0xad
 2497 0388 00000000 		.4byte	.LFB72
 2498 038c 34000000 		.4byte	.LFE72-.LFB72
 2499 0390 01       		.uleb128 0x1
 2500 0391 9C       		.byte	0x9c
 2501 0392 15       		.uleb128 0x15
 2502 0393 A1010000 		.4byte	.LASF73
 2503 0397 01       		.byte	0x1
 2504 0398 A501     		.2byte	0x1a5
 2505 039a 58020000 		.4byte	0x258
 2506 039e 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 59


 2507 03a2 84000000 		.4byte	.LFE73-.LFB73
 2508 03a6 01       		.uleb128 0x1
 2509 03a7 9C       		.byte	0x9c
 2510 03a8 16       		.uleb128 0x16
 2511 03a9 63010000 		.4byte	.LASF75
 2512 03ad 01       		.byte	0x1
 2513 03ae C701     		.2byte	0x1c7
 2514 03b0 58020000 		.4byte	0x258
 2515 03b4 00000000 		.4byte	.LFB74
 2516 03b8 58020000 		.4byte	.LFE74-.LFB74
 2517 03bc 01       		.uleb128 0x1
 2518 03bd 9C       		.byte	0x9c
 2519 03be E1030000 		.4byte	0x3e1
 2520 03c2 17       		.uleb128 0x17
 2521 03c3 37000000 		.4byte	.LASF76
 2522 03c7 01       		.byte	0x1
 2523 03c8 C801     		.2byte	0x1c8
 2524 03ca D2000000 		.4byte	0xd2
 2525 03ce 02       		.uleb128 0x2
 2526 03cf 91       		.byte	0x91
 2527 03d0 74       		.sleb128 -12
 2528 03d1 17       		.uleb128 0x17
 2529 03d2 0D020000 		.4byte	.LASF77
 2530 03d6 01       		.byte	0x1
 2531 03d7 D701     		.2byte	0x1d7
 2532 03d9 B9010000 		.4byte	0x1b9
 2533 03dd 02       		.uleb128 0x2
 2534 03de 91       		.byte	0x91
 2535 03df 73       		.sleb128 -13
 2536 03e0 00       		.byte	0
 2537 03e1 18       		.uleb128 0x18
 2538 03e2 24060000 		.4byte	.LASF79
 2539 03e6 01       		.byte	0x1
 2540 03e7 7202     		.2byte	0x272
 2541 03e9 D2000000 		.4byte	0xd2
 2542 03ed 00000000 		.4byte	.LFB75
 2543 03f1 8C020000 		.4byte	.LFE75-.LFB75
 2544 03f5 01       		.uleb128 0x1
 2545 03f6 9C       		.byte	0x9c
 2546 03f7 9F040000 		.4byte	0x49f
 2547 03fb 19       		.uleb128 0x19
 2548 03fc D3020000 		.4byte	.LASF81
 2549 0400 01       		.byte	0x1
 2550 0401 7202     		.2byte	0x272
 2551 0403 D2000000 		.4byte	0xd2
 2552 0407 02       		.uleb128 0x2
 2553 0408 91       		.byte	0x91
 2554 0409 54       		.sleb128 -44
 2555 040a 17       		.uleb128 0x17
 2556 040b 2F070000 		.4byte	.LASF82
 2557 040f 01       		.byte	0x1
 2558 0410 7302     		.2byte	0x273
 2559 0412 D2000000 		.4byte	0xd2
 2560 0416 02       		.uleb128 0x2
 2561 0417 91       		.byte	0x91
 2562 0418 58       		.sleb128 -40
 2563 0419 17       		.uleb128 0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 60


 2564 041a 59010000 		.4byte	.LASF83
 2565 041e 01       		.byte	0x1
 2566 041f 7602     		.2byte	0x276
 2567 0421 68000000 		.4byte	0x68
 2568 0425 02       		.uleb128 0x2
 2569 0426 91       		.byte	0x91
 2570 0427 60       		.sleb128 -32
 2571 0428 17       		.uleb128 0x17
 2572 0429 EF010000 		.4byte	.LASF84
 2573 042d 01       		.byte	0x1
 2574 042e 7702     		.2byte	0x277
 2575 0430 68000000 		.4byte	0x68
 2576 0434 02       		.uleb128 0x2
 2577 0435 91       		.byte	0x91
 2578 0436 5C       		.sleb128 -36
 2579 0437 17       		.uleb128 0x17
 2580 0438 CD030000 		.4byte	.LASF85
 2581 043c 01       		.byte	0x1
 2582 043d 7902     		.2byte	0x279
 2583 043f 68000000 		.4byte	0x68
 2584 0443 02       		.uleb128 0x2
 2585 0444 91       		.byte	0x91
 2586 0445 74       		.sleb128 -12
 2587 0446 1A       		.uleb128 0x1a
 2588 0447 00000000 		.4byte	.Ldebug_ranges0+0
 2589 044b 5D040000 		.4byte	0x45d
 2590 044f 1B       		.uleb128 0x1b
 2591 0450 6900     		.ascii	"i\000"
 2592 0452 01       		.byte	0x1
 2593 0453 8302     		.2byte	0x283
 2594 0455 68000000 		.4byte	0x68
 2595 0459 02       		.uleb128 0x2
 2596 045a 91       		.byte	0x91
 2597 045b 70       		.sleb128 -16
 2598 045c 00       		.byte	0
 2599 045d 1A       		.uleb128 0x1a
 2600 045e 18000000 		.4byte	.Ldebug_ranges0+0x18
 2601 0462 74040000 		.4byte	0x474
 2602 0466 1B       		.uleb128 0x1b
 2603 0467 6900     		.ascii	"i\000"
 2604 0469 01       		.byte	0x1
 2605 046a 9202     		.2byte	0x292
 2606 046c 68000000 		.4byte	0x68
 2607 0470 02       		.uleb128 0x2
 2608 0471 91       		.byte	0x91
 2609 0472 6C       		.sleb128 -20
 2610 0473 00       		.byte	0
 2611 0474 1A       		.uleb128 0x1a
 2612 0475 30000000 		.4byte	.Ldebug_ranges0+0x30
 2613 0479 8B040000 		.4byte	0x48b
 2614 047d 1B       		.uleb128 0x1b
 2615 047e 6900     		.ascii	"i\000"
 2616 0480 01       		.byte	0x1
 2617 0481 A102     		.2byte	0x2a1
 2618 0483 68000000 		.4byte	0x68
 2619 0487 02       		.uleb128 0x2
 2620 0488 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 61


 2621 0489 68       		.sleb128 -24
 2622 048a 00       		.byte	0
 2623 048b 1C       		.uleb128 0x1c
 2624 048c 48000000 		.4byte	.Ldebug_ranges0+0x48
 2625 0490 1B       		.uleb128 0x1b
 2626 0491 6900     		.ascii	"i\000"
 2627 0493 01       		.byte	0x1
 2628 0494 B102     		.2byte	0x2b1
 2629 0496 68000000 		.4byte	0x68
 2630 049a 02       		.uleb128 0x2
 2631 049b 91       		.byte	0x91
 2632 049c 64       		.sleb128 -28
 2633 049d 00       		.byte	0
 2634 049e 00       		.byte	0
 2635 049f 1D       		.uleb128 0x1d
 2636 04a0 68050000 		.4byte	.LASF87
 2637 04a4 01       		.byte	0x1
 2638 04a5 C502     		.2byte	0x2c5
 2639 04a7 00000000 		.4byte	.LFB76
 2640 04ab 1C000000 		.4byte	.LFE76-.LFB76
 2641 04af 01       		.uleb128 0x1
 2642 04b0 9C       		.byte	0x9c
 2643 04b1 1E       		.uleb128 0x1e
 2644 04b2 54060000 		.4byte	.LASF88
 2645 04b6 01       		.byte	0x1
 2646 04b7 CA02     		.2byte	0x2ca
 2647 04b9 25020000 		.4byte	0x225
 2648 04bd 00000000 		.4byte	.LFB77
 2649 04c1 A4000000 		.4byte	.LFE77-.LFB77
 2650 04c5 01       		.uleb128 0x1
 2651 04c6 9C       		.byte	0x9c
 2652 04c7 1F050000 		.4byte	0x51f
 2653 04cb 19       		.uleb128 0x19
 2654 04cc 50010000 		.4byte	.LASF89
 2655 04d0 01       		.byte	0x1
 2656 04d1 CA02     		.2byte	0x2ca
 2657 04d3 68000000 		.4byte	0x68
 2658 04d7 02       		.uleb128 0x2
 2659 04d8 91       		.byte	0x91
 2660 04d9 60       		.sleb128 -32
 2661 04da 19       		.uleb128 0x19
 2662 04db 78030000 		.4byte	.LASF90
 2663 04df 01       		.byte	0x1
 2664 04e0 CA02     		.2byte	0x2ca
 2665 04e2 1F050000 		.4byte	0x51f
 2666 04e6 02       		.uleb128 0x2
 2667 04e7 91       		.byte	0x91
 2668 04e8 5C       		.sleb128 -36
 2669 04e9 19       		.uleb128 0x19
 2670 04ea 88030000 		.4byte	.LASF91
 2671 04ee 01       		.byte	0x1
 2672 04ef CA02     		.2byte	0x2ca
 2673 04f1 68000000 		.4byte	0x68
 2674 04f5 02       		.uleb128 0x2
 2675 04f6 91       		.byte	0x91
 2676 04f7 58       		.sleb128 -40
 2677 04f8 17       		.uleb128 0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 62


 2678 04f9 72000000 		.4byte	.LASF92
 2679 04fd 01       		.byte	0x1
 2680 04fe CB02     		.2byte	0x2cb
 2681 0500 25020000 		.4byte	0x225
 2682 0504 02       		.uleb128 0x2
 2683 0505 91       		.byte	0x91
 2684 0506 68       		.sleb128 -24
 2685 0507 0C       		.uleb128 0xc
 2686 0508 0E000000 		.4byte	.LBB11
 2687 050c 7C000000 		.4byte	.LBE11-.LBB11
 2688 0510 1B       		.uleb128 0x1b
 2689 0511 6900     		.ascii	"i\000"
 2690 0513 01       		.byte	0x1
 2691 0514 CD02     		.2byte	0x2cd
 2692 0516 68000000 		.4byte	0x68
 2693 051a 02       		.uleb128 0x2
 2694 051b 91       		.byte	0x91
 2695 051c 74       		.sleb128 -12
 2696 051d 00       		.byte	0
 2697 051e 00       		.byte	0
 2698 051f 1F       		.uleb128 0x1f
 2699 0520 04       		.byte	0x4
 2700 0521 25020000 		.4byte	0x225
 2701 0525 20       		.uleb128 0x20
 2702 0526 6E020000 		.4byte	.LASF93
 2703 052a 01       		.byte	0x1
 2704 052b DA02     		.2byte	0x2da
 2705 052d 00000000 		.4byte	.LFB78
 2706 0531 C4000000 		.4byte	.LFE78-.LFB78
 2707 0535 01       		.uleb128 0x1
 2708 0536 9C       		.byte	0x9c
 2709 0537 21       		.uleb128 0x21
 2710 0538 2F050000 		.4byte	.LASF94
 2711 053c 07       		.byte	0x7
 2712 053d 1207     		.2byte	0x712
 2713 053f 43050000 		.4byte	0x543
 2714 0543 22       		.uleb128 0x22
 2715 0544 8B000000 		.4byte	0x8b
 2716 0548 23       		.uleb128 0x23
 2717 0549 747300   		.ascii	"ts\000"
 2718 054c 05       		.byte	0x5
 2719 054d 10       		.byte	0x10
 2720 054e 96000000 		.4byte	0x96
 2721 0552 05       		.uleb128 0x5
 2722 0553 03       		.byte	0x3
 2723 0554 00000000 		.4byte	ts
 2724 0558 24       		.uleb128 0x24
 2725 0559 6A060000 		.4byte	.LASF95
 2726 055d 05       		.byte	0x5
 2727 055e 11       		.byte	0x11
 2728 055f A2000000 		.4byte	0xa2
 2729 0563 05       		.uleb128 0x5
 2730 0564 03       		.byte	0x3
 2731 0565 00000000 		.4byte	ts_enc
 2732 0569 24       		.uleb128 0x24
 2733 056a 3C050000 		.4byte	.LASF96
 2734 056e 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 63


 2735 056f 12       		.byte	0x12
 2736 0570 A2000000 		.4byte	0xa2
 2737 0574 05       		.uleb128 0x5
 2738 0575 03       		.byte	0x3
 2739 0576 00000000 		.4byte	ts_update
 2740 057a 24       		.uleb128 0x24
 2741 057b 67040000 		.4byte	.LASF97
 2742 057f 05       		.byte	0x5
 2743 0580 13       		.byte	0x13
 2744 0581 A2000000 		.4byte	0xa2
 2745 0585 05       		.uleb128 0x5
 2746 0586 03       		.byte	0x3
 2747 0587 00000000 		.4byte	ts_speed
 2748 058b 24       		.uleb128 0x24
 2749 058c 0E030000 		.4byte	.LASF98
 2750 0590 05       		.byte	0x5
 2751 0591 14       		.byte	0x14
 2752 0592 A2000000 		.4byte	0xa2
 2753 0596 05       		.uleb128 0x5
 2754 0597 03       		.byte	0x3
 2755 0598 00000000 		.4byte	ts_display
 2756 059c 24       		.uleb128 0x24
 2757 059d B8020000 		.4byte	.LASF99
 2758 05a1 05       		.byte	0x5
 2759 05a2 16       		.byte	0x16
 2760 05a3 96000000 		.4byte	0x96
 2761 05a7 05       		.uleb128 0x5
 2762 05a8 03       		.byte	0x3
 2763 05a9 00000000 		.4byte	flag_ts_enc
 2764 05ad 24       		.uleb128 0x24
 2765 05ae A9020000 		.4byte	.LASF100
 2766 05b2 05       		.byte	0x5
 2767 05b3 17       		.byte	0x17
 2768 05b4 96000000 		.4byte	0x96
 2769 05b8 05       		.uleb128 0x5
 2770 05b9 03       		.byte	0x3
 2771 05ba 00000000 		.4byte	flag_ts_update
 2772 05be 24       		.uleb128 0x24
 2773 05bf D4040000 		.4byte	.LASF101
 2774 05c3 05       		.byte	0x5
 2775 05c4 18       		.byte	0x18
 2776 05c5 96000000 		.4byte	0x96
 2777 05c9 05       		.uleb128 0x5
 2778 05ca 03       		.byte	0x3
 2779 05cb 00000000 		.4byte	flag_ts_speed
 2780 05cf 24       		.uleb128 0x24
 2781 05d0 71060000 		.4byte	.LASF102
 2782 05d4 05       		.byte	0x5
 2783 05d5 19       		.byte	0x19
 2784 05d6 96000000 		.4byte	0x96
 2785 05da 05       		.uleb128 0x5
 2786 05db 03       		.byte	0x3
 2787 05dc 00000000 		.4byte	flag_ts_display
 2788 05e0 24       		.uleb128 0x24
 2789 05e1 F1040000 		.4byte	.LASF103
 2790 05e5 05       		.byte	0x5
 2791 05e6 1B       		.byte	0x1b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 64


 2792 05e7 96000000 		.4byte	0x96
 2793 05eb 05       		.uleb128 0x5
 2794 05ec 03       		.byte	0x3
 2795 05ed 00000000 		.4byte	flag_rx
 2796 05f1 24       		.uleb128 0x24
 2797 05f2 62020000 		.4byte	.LASF104
 2798 05f6 05       		.byte	0x5
 2799 05f7 1C       		.byte	0x1c
 2800 05f8 96000000 		.4byte	0x96
 2801 05fc 05       		.uleb128 0x5
 2802 05fd 03       		.byte	0x3
 2803 05fe 00000000 		.4byte	flag_packet
 2804 0602 24       		.uleb128 0x24
 2805 0603 4F070000 		.4byte	.LASF105
 2806 0607 05       		.byte	0x5
 2807 0608 1D       		.byte	0x1d
 2808 0609 96000000 		.4byte	0x96
 2809 060d 05       		.uleb128 0x5
 2810 060e 03       		.byte	0x3
 2811 060f 00000000 		.4byte	flag_KB_string
 2812 0613 24       		.uleb128 0x24
 2813 0614 E2040000 		.4byte	.LASF106
 2814 0618 05       		.byte	0x5
 2815 0619 1F       		.byte	0x1f
 2816 061a 96000000 		.4byte	0x96
 2817 061e 05       		.uleb128 0x5
 2818 061f 03       		.byte	0x3
 2819 0620 00000000 		.4byte	dataready_flag
 2820 0624 24       		.uleb128 0x24
 2821 0625 85010000 		.4byte	.LASF107
 2822 0629 05       		.byte	0x5
 2823 062a 21       		.byte	0x21
 2824 062b 96000000 		.4byte	0x96
 2825 062f 05       		.uleb128 0x5
 2826 0630 03       		.byte	0x3
 2827 0631 00000000 		.4byte	flag_rf_transmission_active
 2828 0635 25       		.uleb128 0x25
 2829 0636 84000000 		.4byte	0x84
 2830 063a 45060000 		.4byte	0x645
 2831 063e 26       		.uleb128 0x26
 2832 063f 7D000000 		.4byte	0x7d
 2833 0643 3F       		.byte	0x3f
 2834 0644 00       		.byte	0
 2835 0645 24       		.uleb128 0x24
 2836 0646 86060000 		.4byte	.LASF108
 2837 064a 05       		.byte	0x5
 2838 064b 24       		.byte	0x24
 2839 064c 35060000 		.4byte	0x635
 2840 0650 05       		.uleb128 0x5
 2841 0651 03       		.byte	0x3
 2842 0652 00000000 		.4byte	displaystring
 2843 0656 24       		.uleb128 0x24
 2844 0657 1F060000 		.4byte	.LASF109
 2845 065b 05       		.byte	0x5
 2846 065c 25       		.byte	0x25
 2847 065d 35060000 		.4byte	0x635
 2848 0661 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 65


 2849 0662 03       		.byte	0x3
 2850 0663 00000000 		.4byte	line
 2851 0667 24       		.uleb128 0x24
 2852 0668 EC050000 		.4byte	.LASF110
 2853 066c 05       		.byte	0x5
 2854 066d 25       		.byte	0x25
 2855 066e 35060000 		.4byte	0x635
 2856 0672 05       		.uleb128 0x5
 2857 0673 03       		.byte	0x3
 2858 0674 00000000 		.4byte	entry
 2859 0678 25       		.uleb128 0x25
 2860 0679 96000000 		.4byte	0x96
 2861 067d 88060000 		.4byte	0x688
 2862 0681 26       		.uleb128 0x26
 2863 0682 7D000000 		.4byte	0x7d
 2864 0686 3F       		.byte	0x3f
 2865 0687 00       		.byte	0
 2866 0688 24       		.uleb128 0x24
 2867 0689 29020000 		.4byte	.LASF111
 2868 068d 05       		.byte	0x5
 2869 068e 26       		.byte	0x26
 2870 068f 78060000 		.4byte	0x678
 2871 0693 05       		.uleb128 0x5
 2872 0694 03       		.byte	0x3
 2873 0695 00000000 		.4byte	usbBuffer
 2874 0699 24       		.uleb128 0x24
 2875 069a 65000000 		.4byte	.LASF112
 2876 069e 05       		.byte	0x5
 2877 069f 3C       		.byte	0x3c
 2878 06a0 E0000000 		.4byte	0xe0
 2879 06a4 05       		.uleb128 0x5
 2880 06a5 03       		.byte	0x3
 2881 06a6 00000000 		.4byte	system_state
 2882 06aa 25       		.uleb128 0x25
 2883 06ab 68000000 		.4byte	0x68
 2884 06af C0060000 		.4byte	0x6c0
 2885 06b3 26       		.uleb128 0x26
 2886 06b4 7D000000 		.4byte	0x7d
 2887 06b8 0E       		.byte	0xe
 2888 06b9 26       		.uleb128 0x26
 2889 06ba 7D000000 		.4byte	0x7d
 2890 06be 12       		.byte	0x12
 2891 06bf 00       		.byte	0
 2892 06c0 27       		.uleb128 0x27
 2893 06c1 6D617000 		.ascii	"map\000"
 2894 06c5 08       		.byte	0x8
 2895 06c6 04       		.byte	0x4
 2896 06c7 AA060000 		.4byte	0x6aa
 2897 06cb 25       		.uleb128 0x25
 2898 06cc 68000000 		.4byte	0x68
 2899 06d0 E1060000 		.4byte	0x6e1
 2900 06d4 26       		.uleb128 0x26
 2901 06d5 7D000000 		.4byte	0x7d
 2902 06d9 04       		.byte	0x4
 2903 06da 26       		.uleb128 0x26
 2904 06db 7D000000 		.4byte	0x7d
 2905 06df 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 66


 2906 06e0 00       		.byte	0
 2907 06e1 28       		.uleb128 0x28
 2908 06e2 54040000 		.4byte	.LASF113
 2909 06e6 08       		.byte	0x8
 2910 06e7 05       		.byte	0x5
 2911 06e8 CB060000 		.4byte	0x6cb
 2912 06ec 24       		.uleb128 0x24
 2913 06ed A2050000 		.4byte	.LASF114
 2914 06f1 01       		.byte	0x1
 2915 06f2 19       		.byte	0x19
 2916 06f3 58020000 		.4byte	0x258
 2917 06f7 05       		.uleb128 0x5
 2918 06f8 03       		.byte	0x3
 2919 06f9 00000000 		.4byte	currentDirection
 2920 06fd 24       		.uleb128 0x24
 2921 06fe B6040000 		.4byte	.LASF115
 2922 0702 01       		.byte	0x1
 2923 0703 19       		.byte	0x19
 2924 0704 58020000 		.4byte	0x258
 2925 0708 05       		.uleb128 0x5
 2926 0709 03       		.byte	0x3
 2927 070a 00000000 		.4byte	previousDirection
 2928 070e 24       		.uleb128 0x24
 2929 070f B9010000 		.4byte	.LASF116
 2930 0713 01       		.byte	0x1
 2931 0714 1B       		.byte	0x1b
 2932 0715 30020000 		.4byte	0x230
 2933 0719 05       		.uleb128 0x5
 2934 071a 03       		.byte	0x3
 2935 071b 00000000 		.4byte	currentRobotOrientation
 2936 071f 24       		.uleb128 0x24
 2937 0720 1D040000 		.4byte	.LASF117
 2938 0724 01       		.byte	0x1
 2939 0725 1B       		.byte	0x1b
 2940 0726 30020000 		.4byte	0x230
 2941 072a 05       		.uleb128 0x5
 2942 072b 03       		.byte	0x3
 2943 072c 00000000 		.4byte	previousOrientation
 2944 0730 24       		.uleb128 0x24
 2945 0731 EB060000 		.4byte	.LASF118
 2946 0735 01       		.byte	0x1
 2947 0736 1C       		.byte	0x1c
 2948 0737 25020000 		.4byte	0x225
 2949 073b 05       		.uleb128 0x5
 2950 073c 03       		.byte	0x3
 2951 073d 00000000 		.4byte	currentInstruction
 2952 0741 24       		.uleb128 0x24
 2953 0742 50010000 		.4byte	.LASF89
 2954 0746 01       		.byte	0x1
 2955 0747 1D       		.byte	0x1d
 2956 0748 68000000 		.4byte	0x68
 2957 074c 05       		.uleb128 0x5
 2958 074d 03       		.byte	0x3
 2959 074e 00000000 		.4byte	numSteps
 2960 0752 24       		.uleb128 0x24
 2961 0753 78030000 		.4byte	.LASF90
 2962 0757 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 67


 2963 0758 1F       		.byte	0x1f
 2964 0759 1F050000 		.4byte	0x51f
 2965 075d 05       		.uleb128 0x5
 2966 075e 03       		.byte	0x3
 2967 075f 00000000 		.4byte	instructionList
 2968 0763 24       		.uleb128 0x24
 2969 0764 88030000 		.4byte	.LASF91
 2970 0768 01       		.byte	0x1
 2971 0769 20       		.byte	0x20
 2972 076a AE000000 		.4byte	0xae
 2973 076e 05       		.uleb128 0x5
 2974 076f 03       		.byte	0x3
 2975 0770 00000000 		.4byte	instructionIndex
 2976 0774 23       		.uleb128 0x23
 2977 0775 733300   		.ascii	"s3\000"
 2978 0778 01       		.byte	0x1
 2979 0779 25       		.byte	0x25
 2980 077a 96000000 		.4byte	0x96
 2981 077e 05       		.uleb128 0x5
 2982 077f 03       		.byte	0x3
 2983 0780 00000000 		.4byte	s3
 2984 0784 23       		.uleb128 0x23
 2985 0785 733400   		.ascii	"s4\000"
 2986 0788 01       		.byte	0x1
 2987 0789 25       		.byte	0x25
 2988 078a 96000000 		.4byte	0x96
 2989 078e 05       		.uleb128 0x5
 2990 078f 03       		.byte	0x3
 2991 0790 00000000 		.4byte	s4
 2992 0794 23       		.uleb128 0x23
 2993 0795 733500   		.ascii	"s5\000"
 2994 0798 01       		.byte	0x1
 2995 0799 25       		.byte	0x25
 2996 079a 96000000 		.4byte	0x96
 2997 079e 05       		.uleb128 0x5
 2998 079f 03       		.byte	0x3
 2999 07a0 00000000 		.4byte	s5
 3000 07a4 23       		.uleb128 0x23
 3001 07a5 733600   		.ascii	"s6\000"
 3002 07a8 01       		.byte	0x1
 3003 07a9 25       		.byte	0x25
 3004 07aa 96000000 		.4byte	0x96
 3005 07ae 05       		.uleb128 0x5
 3006 07af 03       		.byte	0x3
 3007 07b0 00000000 		.4byte	s6
 3008 07b4 24       		.uleb128 0x24
 3009 07b5 4E050000 		.4byte	.LASF119
 3010 07b9 01       		.byte	0x1
 3011 07ba 2A       		.byte	0x2a
 3012 07bb AE000000 		.4byte	0xae
 3013 07bf 05       		.uleb128 0x5
 3014 07c0 03       		.byte	0x3
 3015 07c1 00000000 		.4byte	totalMilliseconds
 3016 07c5 24       		.uleb128 0x24
 3017 07c6 1C010000 		.4byte	.LASF120
 3018 07ca 01       		.byte	0x1
 3019 07cb 2B       		.byte	0x2b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 68


 3020 07cc D2000000 		.4byte	0xd2
 3021 07d0 05       		.uleb128 0x5
 3022 07d1 03       		.byte	0x3
 3023 07d2 00000000 		.4byte	totalDistance
 3024 07d6 25       		.uleb128 0x25
 3025 07d7 84000000 		.4byte	0x84
 3026 07db E6070000 		.4byte	0x7e6
 3027 07df 26       		.uleb128 0x26
 3028 07e0 7D000000 		.4byte	0x7d
 3029 07e4 44       		.byte	0x44
 3030 07e5 00       		.byte	0
 3031 07e6 24       		.uleb128 0x24
 3032 07e7 41000000 		.4byte	.LASF121
 3033 07eb 01       		.byte	0x1
 3034 07ec 2D       		.byte	0x2d
 3035 07ed D6070000 		.4byte	0x7d6
 3036 07f1 05       		.uleb128 0x5
 3037 07f2 03       		.byte	0x3
 3038 07f3 00000000 		.4byte	buffer
 3039 07f7 24       		.uleb128 0x24
 3040 07f8 F9010000 		.4byte	.LASF122
 3041 07fc 01       		.byte	0x1
 3042 07fd 2E       		.byte	0x2e
 3043 07fe 68000000 		.4byte	0x68
 3044 0802 05       		.uleb128 0x5
 3045 0803 03       		.byte	0x3
 3046 0804 00000000 		.4byte	quadDec2Count
 3047 0808 24       		.uleb128 0x24
 3048 0809 46070000 		.4byte	.LASF123
 3049 080d 01       		.byte	0x1
 3050 080e 2F       		.byte	0x2f
 3051 080f 68000000 		.4byte	0x68
 3052 0813 05       		.uleb128 0x5
 3053 0814 03       		.byte	0x3
 3054 0815 00000000 		.4byte	timerInt
 3055 0819 24       		.uleb128 0x24
 3056 081a 8C020000 		.4byte	.LASF124
 3057 081e 01       		.byte	0x1
 3058 081f 30       		.byte	0x30
 3059 0820 68000000 		.4byte	0x68
 3060 0824 05       		.uleb128 0x5
 3061 0825 03       		.byte	0x3
 3062 0826 00000000 		.4byte	keepLedOn
 3063 082a 24       		.uleb128 0x24
 3064 082b CE050000 		.4byte	.LASF125
 3065 082f 01       		.byte	0x1
 3066 0830 32       		.byte	0x32
 3067 0831 AE000000 		.4byte	0xae
 3068 0835 05       		.uleb128 0x5
 3069 0836 03       		.byte	0x3
 3070 0837 00000000 		.4byte	stopBuffer
 3071 083b 24       		.uleb128 0x24
 3072 083c D7030000 		.4byte	.LASF126
 3073 0840 01       		.byte	0x1
 3074 0841 33       		.byte	0x33
 3075 0842 96000000 		.4byte	0x96
 3076 0846 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 69


 3077 0847 03       		.byte	0x3
 3078 0848 00000000 		.4byte	turnFinishedFlag
 3079 084c 24       		.uleb128 0x24
 3080 084d 32010000 		.4byte	.LASF127
 3081 0851 01       		.byte	0x1
 3082 0852 34       		.byte	0x34
 3083 0853 96000000 		.4byte	0x96
 3084 0857 05       		.uleb128 0x5
 3085 0858 03       		.byte	0x3
 3086 0859 00000000 		.4byte	forwardUntilTargetStartedFlag
 3087 085d 24       		.uleb128 0x24
 3088 085e 0E040000 		.4byte	.LASF128
 3089 0862 01       		.byte	0x1
 3090 0863 35       		.byte	0x35
 3091 0864 D2000000 		.4byte	0xd2
 3092 0868 05       		.uleb128 0x5
 3093 0869 03       		.byte	0x3
 3094 086a 00000000 		.4byte	blockSizeTotal
 3095 086e 24       		.uleb128 0x24
 3096 086f A5030000 		.4byte	.LASF129
 3097 0873 01       		.byte	0x1
 3098 0874 B4       		.byte	0xb4
 3099 0875 D2000000 		.4byte	0xd2
 3100 0879 05       		.uleb128 0x5
 3101 087a 03       		.byte	0x3
 3102 087b 00000000 		.4byte	xBlocksize
 3103 087f 24       		.uleb128 0x24
 3104 0880 F9040000 		.4byte	.LASF130
 3105 0884 01       		.byte	0x1
 3106 0885 B5       		.byte	0xb5
 3107 0886 D2000000 		.4byte	0xd2
 3108 088a 05       		.uleb128 0x5
 3109 088b 03       		.byte	0x3
 3110 088c 00000000 		.4byte	yBlocksize
 3111 0890 24       		.uleb128 0x24
 3112 0891 B6060000 		.4byte	.LASF131
 3113 0895 01       		.byte	0x1
 3114 0896 B6       		.byte	0xb6
 3115 0897 96000000 		.4byte	0x96
 3116 089b 05       		.uleb128 0x5
 3117 089c 03       		.byte	0x3
 3118 089d 00000000 		.4byte	currentRow
 3119 08a1 24       		.uleb128 0x24
 3120 08a2 24070000 		.4byte	.LASF132
 3121 08a6 01       		.byte	0x1
 3122 08a7 B7       		.byte	0xb7
 3123 08a8 96000000 		.4byte	0x96
 3124 08ac 05       		.uleb128 0x5
 3125 08ad 03       		.byte	0x3
 3126 08ae 00000000 		.4byte	currentCol
 3127 08b2 29       		.uleb128 0x29
 3128 08b3 0E060000 		.4byte	.LASF133
 3129 08b7 01       		.byte	0x1
 3130 08b8 0401     		.2byte	0x104
 3131 08ba 96000000 		.4byte	0x96
 3132 08be 05       		.uleb128 0x5
 3133 08bf 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 70


 3134 08c0 00000000 		.4byte	stoppedAfterTurn
 3135 08c4 29       		.uleb128 0x29
 3136 08c5 DD020000 		.4byte	.LASF134
 3137 08c9 01       		.byte	0x1
 3138 08ca 0501     		.2byte	0x105
 3139 08cc 96000000 		.4byte	0x96
 3140 08d0 05       		.uleb128 0x5
 3141 08d1 03       		.byte	0x3
 3142 08d2 00000000 		.4byte	ignoreSensor
 3143 08d6 00       		.byte	0
 3144              		.section	.debug_abbrev,"",%progbits
 3145              	.Ldebug_abbrev0:
 3146 0000 01       		.uleb128 0x1
 3147 0001 11       		.uleb128 0x11
 3148 0002 01       		.byte	0x1
 3149 0003 25       		.uleb128 0x25
 3150 0004 0E       		.uleb128 0xe
 3151 0005 13       		.uleb128 0x13
 3152 0006 0B       		.uleb128 0xb
 3153 0007 03       		.uleb128 0x3
 3154 0008 0E       		.uleb128 0xe
 3155 0009 1B       		.uleb128 0x1b
 3156 000a 0E       		.uleb128 0xe
 3157 000b 55       		.uleb128 0x55
 3158 000c 17       		.uleb128 0x17
 3159 000d 11       		.uleb128 0x11
 3160 000e 01       		.uleb128 0x1
 3161 000f 10       		.uleb128 0x10
 3162 0010 17       		.uleb128 0x17
 3163 0011 00       		.byte	0
 3164 0012 00       		.byte	0
 3165 0013 02       		.uleb128 0x2
 3166 0014 24       		.uleb128 0x24
 3167 0015 00       		.byte	0
 3168 0016 0B       		.uleb128 0xb
 3169 0017 0B       		.uleb128 0xb
 3170 0018 3E       		.uleb128 0x3e
 3171 0019 0B       		.uleb128 0xb
 3172 001a 03       		.uleb128 0x3
 3173 001b 0E       		.uleb128 0xe
 3174 001c 00       		.byte	0
 3175 001d 00       		.byte	0
 3176 001e 03       		.uleb128 0x3
 3177 001f 16       		.uleb128 0x16
 3178 0020 00       		.byte	0
 3179 0021 03       		.uleb128 0x3
 3180 0022 0E       		.uleb128 0xe
 3181 0023 3A       		.uleb128 0x3a
 3182 0024 0B       		.uleb128 0xb
 3183 0025 3B       		.uleb128 0x3b
 3184 0026 0B       		.uleb128 0xb
 3185 0027 49       		.uleb128 0x49
 3186 0028 13       		.uleb128 0x13
 3187 0029 00       		.byte	0
 3188 002a 00       		.byte	0
 3189 002b 04       		.uleb128 0x4
 3190 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 71


 3191 002d 00       		.byte	0
 3192 002e 0B       		.uleb128 0xb
 3193 002f 0B       		.uleb128 0xb
 3194 0030 3E       		.uleb128 0x3e
 3195 0031 0B       		.uleb128 0xb
 3196 0032 03       		.uleb128 0x3
 3197 0033 08       		.uleb128 0x8
 3198 0034 00       		.byte	0
 3199 0035 00       		.byte	0
 3200 0036 05       		.uleb128 0x5
 3201 0037 16       		.uleb128 0x16
 3202 0038 00       		.byte	0
 3203 0039 03       		.uleb128 0x3
 3204 003a 0E       		.uleb128 0xe
 3205 003b 3A       		.uleb128 0x3a
 3206 003c 0B       		.uleb128 0xb
 3207 003d 3B       		.uleb128 0x3b
 3208 003e 05       		.uleb128 0x5
 3209 003f 49       		.uleb128 0x49
 3210 0040 13       		.uleb128 0x13
 3211 0041 00       		.byte	0
 3212 0042 00       		.byte	0
 3213 0043 06       		.uleb128 0x6
 3214 0044 13       		.uleb128 0x13
 3215 0045 01       		.byte	0x1
 3216 0046 03       		.uleb128 0x3
 3217 0047 0E       		.uleb128 0xe
 3218 0048 0B       		.uleb128 0xb
 3219 0049 0B       		.uleb128 0xb
 3220 004a 3A       		.uleb128 0x3a
 3221 004b 0B       		.uleb128 0xb
 3222 004c 3B       		.uleb128 0x3b
 3223 004d 0B       		.uleb128 0xb
 3224 004e 01       		.uleb128 0x1
 3225 004f 13       		.uleb128 0x13
 3226 0050 00       		.byte	0
 3227 0051 00       		.byte	0
 3228 0052 07       		.uleb128 0x7
 3229 0053 0D       		.uleb128 0xd
 3230 0054 00       		.byte	0
 3231 0055 03       		.uleb128 0x3
 3232 0056 0E       		.uleb128 0xe
 3233 0057 3A       		.uleb128 0x3a
 3234 0058 0B       		.uleb128 0xb
 3235 0059 3B       		.uleb128 0x3b
 3236 005a 0B       		.uleb128 0xb
 3237 005b 49       		.uleb128 0x49
 3238 005c 13       		.uleb128 0x13
 3239 005d 38       		.uleb128 0x38
 3240 005e 0B       		.uleb128 0xb
 3241 005f 00       		.byte	0
 3242 0060 00       		.byte	0
 3243 0061 08       		.uleb128 0x8
 3244 0062 04       		.uleb128 0x4
 3245 0063 01       		.byte	0x1
 3246 0064 03       		.uleb128 0x3
 3247 0065 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 72


 3248 0066 0B       		.uleb128 0xb
 3249 0067 0B       		.uleb128 0xb
 3250 0068 49       		.uleb128 0x49
 3251 0069 13       		.uleb128 0x13
 3252 006a 3A       		.uleb128 0x3a
 3253 006b 0B       		.uleb128 0xb
 3254 006c 3B       		.uleb128 0x3b
 3255 006d 0B       		.uleb128 0xb
 3256 006e 01       		.uleb128 0x1
 3257 006f 13       		.uleb128 0x13
 3258 0070 00       		.byte	0
 3259 0071 00       		.byte	0
 3260 0072 09       		.uleb128 0x9
 3261 0073 28       		.uleb128 0x28
 3262 0074 00       		.byte	0
 3263 0075 03       		.uleb128 0x3
 3264 0076 0E       		.uleb128 0xe
 3265 0077 1C       		.uleb128 0x1c
 3266 0078 0B       		.uleb128 0xb
 3267 0079 00       		.byte	0
 3268 007a 00       		.byte	0
 3269 007b 0A       		.uleb128 0xa
 3270 007c 28       		.uleb128 0x28
 3271 007d 00       		.byte	0
 3272 007e 03       		.uleb128 0x3
 3273 007f 08       		.uleb128 0x8
 3274 0080 1C       		.uleb128 0x1c
 3275 0081 0B       		.uleb128 0xb
 3276 0082 00       		.byte	0
 3277 0083 00       		.byte	0
 3278 0084 0B       		.uleb128 0xb
 3279 0085 2E       		.uleb128 0x2e
 3280 0086 01       		.byte	0x1
 3281 0087 3F       		.uleb128 0x3f
 3282 0088 19       		.uleb128 0x19
 3283 0089 03       		.uleb128 0x3
 3284 008a 0E       		.uleb128 0xe
 3285 008b 3A       		.uleb128 0x3a
 3286 008c 0B       		.uleb128 0xb
 3287 008d 3B       		.uleb128 0x3b
 3288 008e 0B       		.uleb128 0xb
 3289 008f 27       		.uleb128 0x27
 3290 0090 19       		.uleb128 0x19
 3291 0091 11       		.uleb128 0x11
 3292 0092 01       		.uleb128 0x1
 3293 0093 12       		.uleb128 0x12
 3294 0094 06       		.uleb128 0x6
 3295 0095 40       		.uleb128 0x40
 3296 0096 18       		.uleb128 0x18
 3297 0097 9642     		.uleb128 0x2116
 3298 0099 19       		.uleb128 0x19
 3299 009a 01       		.uleb128 0x1
 3300 009b 13       		.uleb128 0x13
 3301 009c 00       		.byte	0
 3302 009d 00       		.byte	0
 3303 009e 0C       		.uleb128 0xc
 3304 009f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 73


 3305 00a0 01       		.byte	0x1
 3306 00a1 11       		.uleb128 0x11
 3307 00a2 01       		.uleb128 0x1
 3308 00a3 12       		.uleb128 0x12
 3309 00a4 06       		.uleb128 0x6
 3310 00a5 00       		.byte	0
 3311 00a6 00       		.byte	0
 3312 00a7 0D       		.uleb128 0xd
 3313 00a8 34       		.uleb128 0x34
 3314 00a9 00       		.byte	0
 3315 00aa 03       		.uleb128 0x3
 3316 00ab 0E       		.uleb128 0xe
 3317 00ac 3A       		.uleb128 0x3a
 3318 00ad 0B       		.uleb128 0xb
 3319 00ae 3B       		.uleb128 0x3b
 3320 00af 0B       		.uleb128 0xb
 3321 00b0 49       		.uleb128 0x49
 3322 00b1 13       		.uleb128 0x13
 3323 00b2 02       		.uleb128 0x2
 3324 00b3 18       		.uleb128 0x18
 3325 00b4 00       		.byte	0
 3326 00b5 00       		.byte	0
 3327 00b6 0E       		.uleb128 0xe
 3328 00b7 2E       		.uleb128 0x2e
 3329 00b8 00       		.byte	0
 3330 00b9 3F       		.uleb128 0x3f
 3331 00ba 19       		.uleb128 0x19
 3332 00bb 03       		.uleb128 0x3
 3333 00bc 0E       		.uleb128 0xe
 3334 00bd 3A       		.uleb128 0x3a
 3335 00be 0B       		.uleb128 0xb
 3336 00bf 3B       		.uleb128 0x3b
 3337 00c0 0B       		.uleb128 0xb
 3338 00c1 27       		.uleb128 0x27
 3339 00c2 19       		.uleb128 0x19
 3340 00c3 11       		.uleb128 0x11
 3341 00c4 01       		.uleb128 0x1
 3342 00c5 12       		.uleb128 0x12
 3343 00c6 06       		.uleb128 0x6
 3344 00c7 40       		.uleb128 0x40
 3345 00c8 18       		.uleb128 0x18
 3346 00c9 9742     		.uleb128 0x2117
 3347 00cb 19       		.uleb128 0x19
 3348 00cc 00       		.byte	0
 3349 00cd 00       		.byte	0
 3350 00ce 0F       		.uleb128 0xf
 3351 00cf 2E       		.uleb128 0x2e
 3352 00d0 00       		.byte	0
 3353 00d1 3F       		.uleb128 0x3f
 3354 00d2 19       		.uleb128 0x19
 3355 00d3 03       		.uleb128 0x3
 3356 00d4 0E       		.uleb128 0xe
 3357 00d5 3A       		.uleb128 0x3a
 3358 00d6 0B       		.uleb128 0xb
 3359 00d7 3B       		.uleb128 0x3b
 3360 00d8 0B       		.uleb128 0xb
 3361 00d9 27       		.uleb128 0x27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 74


 3362 00da 19       		.uleb128 0x19
 3363 00db 11       		.uleb128 0x11
 3364 00dc 01       		.uleb128 0x1
 3365 00dd 12       		.uleb128 0x12
 3366 00de 06       		.uleb128 0x6
 3367 00df 40       		.uleb128 0x40
 3368 00e0 18       		.uleb128 0x18
 3369 00e1 9642     		.uleb128 0x2116
 3370 00e3 19       		.uleb128 0x19
 3371 00e4 00       		.byte	0
 3372 00e5 00       		.byte	0
 3373 00e6 10       		.uleb128 0x10
 3374 00e7 2E       		.uleb128 0x2e
 3375 00e8 00       		.byte	0
 3376 00e9 3F       		.uleb128 0x3f
 3377 00ea 19       		.uleb128 0x19
 3378 00eb 03       		.uleb128 0x3
 3379 00ec 0E       		.uleb128 0xe
 3380 00ed 3A       		.uleb128 0x3a
 3381 00ee 0B       		.uleb128 0xb
 3382 00ef 3B       		.uleb128 0x3b
 3383 00f0 0B       		.uleb128 0xb
 3384 00f1 49       		.uleb128 0x49
 3385 00f2 13       		.uleb128 0x13
 3386 00f3 11       		.uleb128 0x11
 3387 00f4 01       		.uleb128 0x1
 3388 00f5 12       		.uleb128 0x12
 3389 00f6 06       		.uleb128 0x6
 3390 00f7 40       		.uleb128 0x40
 3391 00f8 18       		.uleb128 0x18
 3392 00f9 9642     		.uleb128 0x2116
 3393 00fb 19       		.uleb128 0x19
 3394 00fc 00       		.byte	0
 3395 00fd 00       		.byte	0
 3396 00fe 11       		.uleb128 0x11
 3397 00ff 2E       		.uleb128 0x2e
 3398 0100 01       		.byte	0x1
 3399 0101 3F       		.uleb128 0x3f
 3400 0102 19       		.uleb128 0x19
 3401 0103 03       		.uleb128 0x3
 3402 0104 0E       		.uleb128 0xe
 3403 0105 3A       		.uleb128 0x3a
 3404 0106 0B       		.uleb128 0xb
 3405 0107 3B       		.uleb128 0x3b
 3406 0108 0B       		.uleb128 0xb
 3407 0109 27       		.uleb128 0x27
 3408 010a 19       		.uleb128 0x19
 3409 010b 49       		.uleb128 0x49
 3410 010c 13       		.uleb128 0x13
 3411 010d 11       		.uleb128 0x11
 3412 010e 01       		.uleb128 0x1
 3413 010f 12       		.uleb128 0x12
 3414 0110 06       		.uleb128 0x6
 3415 0111 40       		.uleb128 0x40
 3416 0112 18       		.uleb128 0x18
 3417 0113 9642     		.uleb128 0x2116
 3418 0115 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 75


 3419 0116 01       		.uleb128 0x1
 3420 0117 13       		.uleb128 0x13
 3421 0118 00       		.byte	0
 3422 0119 00       		.byte	0
 3423 011a 12       		.uleb128 0x12
 3424 011b 05       		.uleb128 0x5
 3425 011c 00       		.byte	0
 3426 011d 03       		.uleb128 0x3
 3427 011e 0E       		.uleb128 0xe
 3428 011f 3A       		.uleb128 0x3a
 3429 0120 0B       		.uleb128 0xb
 3430 0121 3B       		.uleb128 0x3b
 3431 0122 0B       		.uleb128 0xb
 3432 0123 49       		.uleb128 0x49
 3433 0124 13       		.uleb128 0x13
 3434 0125 02       		.uleb128 0x2
 3435 0126 18       		.uleb128 0x18
 3436 0127 00       		.byte	0
 3437 0128 00       		.byte	0
 3438 0129 13       		.uleb128 0x13
 3439 012a 34       		.uleb128 0x34
 3440 012b 00       		.byte	0
 3441 012c 03       		.uleb128 0x3
 3442 012d 08       		.uleb128 0x8
 3443 012e 3A       		.uleb128 0x3a
 3444 012f 0B       		.uleb128 0xb
 3445 0130 3B       		.uleb128 0x3b
 3446 0131 0B       		.uleb128 0xb
 3447 0132 49       		.uleb128 0x49
 3448 0133 13       		.uleb128 0x13
 3449 0134 02       		.uleb128 0x2
 3450 0135 18       		.uleb128 0x18
 3451 0136 00       		.byte	0
 3452 0137 00       		.byte	0
 3453 0138 14       		.uleb128 0x14
 3454 0139 2E       		.uleb128 0x2e
 3455 013a 00       		.byte	0
 3456 013b 3F       		.uleb128 0x3f
 3457 013c 19       		.uleb128 0x19
 3458 013d 03       		.uleb128 0x3
 3459 013e 0E       		.uleb128 0xe
 3460 013f 3A       		.uleb128 0x3a
 3461 0140 0B       		.uleb128 0xb
 3462 0141 3B       		.uleb128 0x3b
 3463 0142 0B       		.uleb128 0xb
 3464 0143 11       		.uleb128 0x11
 3465 0144 01       		.uleb128 0x1
 3466 0145 12       		.uleb128 0x12
 3467 0146 06       		.uleb128 0x6
 3468 0147 40       		.uleb128 0x40
 3469 0148 18       		.uleb128 0x18
 3470 0149 9742     		.uleb128 0x2117
 3471 014b 19       		.uleb128 0x19
 3472 014c 00       		.byte	0
 3473 014d 00       		.byte	0
 3474 014e 15       		.uleb128 0x15
 3475 014f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 76


 3476 0150 00       		.byte	0
 3477 0151 3F       		.uleb128 0x3f
 3478 0152 19       		.uleb128 0x19
 3479 0153 03       		.uleb128 0x3
 3480 0154 0E       		.uleb128 0xe
 3481 0155 3A       		.uleb128 0x3a
 3482 0156 0B       		.uleb128 0xb
 3483 0157 3B       		.uleb128 0x3b
 3484 0158 05       		.uleb128 0x5
 3485 0159 49       		.uleb128 0x49
 3486 015a 13       		.uleb128 0x13
 3487 015b 11       		.uleb128 0x11
 3488 015c 01       		.uleb128 0x1
 3489 015d 12       		.uleb128 0x12
 3490 015e 06       		.uleb128 0x6
 3491 015f 40       		.uleb128 0x40
 3492 0160 18       		.uleb128 0x18
 3493 0161 9742     		.uleb128 0x2117
 3494 0163 19       		.uleb128 0x19
 3495 0164 00       		.byte	0
 3496 0165 00       		.byte	0
 3497 0166 16       		.uleb128 0x16
 3498 0167 2E       		.uleb128 0x2e
 3499 0168 01       		.byte	0x1
 3500 0169 3F       		.uleb128 0x3f
 3501 016a 19       		.uleb128 0x19
 3502 016b 03       		.uleb128 0x3
 3503 016c 0E       		.uleb128 0xe
 3504 016d 3A       		.uleb128 0x3a
 3505 016e 0B       		.uleb128 0xb
 3506 016f 3B       		.uleb128 0x3b
 3507 0170 05       		.uleb128 0x5
 3508 0171 49       		.uleb128 0x49
 3509 0172 13       		.uleb128 0x13
 3510 0173 11       		.uleb128 0x11
 3511 0174 01       		.uleb128 0x1
 3512 0175 12       		.uleb128 0x12
 3513 0176 06       		.uleb128 0x6
 3514 0177 40       		.uleb128 0x40
 3515 0178 18       		.uleb128 0x18
 3516 0179 9642     		.uleb128 0x2116
 3517 017b 19       		.uleb128 0x19
 3518 017c 01       		.uleb128 0x1
 3519 017d 13       		.uleb128 0x13
 3520 017e 00       		.byte	0
 3521 017f 00       		.byte	0
 3522 0180 17       		.uleb128 0x17
 3523 0181 34       		.uleb128 0x34
 3524 0182 00       		.byte	0
 3525 0183 03       		.uleb128 0x3
 3526 0184 0E       		.uleb128 0xe
 3527 0185 3A       		.uleb128 0x3a
 3528 0186 0B       		.uleb128 0xb
 3529 0187 3B       		.uleb128 0x3b
 3530 0188 05       		.uleb128 0x5
 3531 0189 49       		.uleb128 0x49
 3532 018a 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 77


 3533 018b 02       		.uleb128 0x2
 3534 018c 18       		.uleb128 0x18
 3535 018d 00       		.byte	0
 3536 018e 00       		.byte	0
 3537 018f 18       		.uleb128 0x18
 3538 0190 2E       		.uleb128 0x2e
 3539 0191 01       		.byte	0x1
 3540 0192 3F       		.uleb128 0x3f
 3541 0193 19       		.uleb128 0x19
 3542 0194 03       		.uleb128 0x3
 3543 0195 0E       		.uleb128 0xe
 3544 0196 3A       		.uleb128 0x3a
 3545 0197 0B       		.uleb128 0xb
 3546 0198 3B       		.uleb128 0x3b
 3547 0199 05       		.uleb128 0x5
 3548 019a 27       		.uleb128 0x27
 3549 019b 19       		.uleb128 0x19
 3550 019c 49       		.uleb128 0x49
 3551 019d 13       		.uleb128 0x13
 3552 019e 11       		.uleb128 0x11
 3553 019f 01       		.uleb128 0x1
 3554 01a0 12       		.uleb128 0x12
 3555 01a1 06       		.uleb128 0x6
 3556 01a2 40       		.uleb128 0x40
 3557 01a3 18       		.uleb128 0x18
 3558 01a4 9642     		.uleb128 0x2116
 3559 01a6 19       		.uleb128 0x19
 3560 01a7 01       		.uleb128 0x1
 3561 01a8 13       		.uleb128 0x13
 3562 01a9 00       		.byte	0
 3563 01aa 00       		.byte	0
 3564 01ab 19       		.uleb128 0x19
 3565 01ac 05       		.uleb128 0x5
 3566 01ad 00       		.byte	0
 3567 01ae 03       		.uleb128 0x3
 3568 01af 0E       		.uleb128 0xe
 3569 01b0 3A       		.uleb128 0x3a
 3570 01b1 0B       		.uleb128 0xb
 3571 01b2 3B       		.uleb128 0x3b
 3572 01b3 05       		.uleb128 0x5
 3573 01b4 49       		.uleb128 0x49
 3574 01b5 13       		.uleb128 0x13
 3575 01b6 02       		.uleb128 0x2
 3576 01b7 18       		.uleb128 0x18
 3577 01b8 00       		.byte	0
 3578 01b9 00       		.byte	0
 3579 01ba 1A       		.uleb128 0x1a
 3580 01bb 0B       		.uleb128 0xb
 3581 01bc 01       		.byte	0x1
 3582 01bd 55       		.uleb128 0x55
 3583 01be 17       		.uleb128 0x17
 3584 01bf 01       		.uleb128 0x1
 3585 01c0 13       		.uleb128 0x13
 3586 01c1 00       		.byte	0
 3587 01c2 00       		.byte	0
 3588 01c3 1B       		.uleb128 0x1b
 3589 01c4 34       		.uleb128 0x34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 78


 3590 01c5 00       		.byte	0
 3591 01c6 03       		.uleb128 0x3
 3592 01c7 08       		.uleb128 0x8
 3593 01c8 3A       		.uleb128 0x3a
 3594 01c9 0B       		.uleb128 0xb
 3595 01ca 3B       		.uleb128 0x3b
 3596 01cb 05       		.uleb128 0x5
 3597 01cc 49       		.uleb128 0x49
 3598 01cd 13       		.uleb128 0x13
 3599 01ce 02       		.uleb128 0x2
 3600 01cf 18       		.uleb128 0x18
 3601 01d0 00       		.byte	0
 3602 01d1 00       		.byte	0
 3603 01d2 1C       		.uleb128 0x1c
 3604 01d3 0B       		.uleb128 0xb
 3605 01d4 01       		.byte	0x1
 3606 01d5 55       		.uleb128 0x55
 3607 01d6 17       		.uleb128 0x17
 3608 01d7 00       		.byte	0
 3609 01d8 00       		.byte	0
 3610 01d9 1D       		.uleb128 0x1d
 3611 01da 2E       		.uleb128 0x2e
 3612 01db 00       		.byte	0
 3613 01dc 3F       		.uleb128 0x3f
 3614 01dd 19       		.uleb128 0x19
 3615 01de 03       		.uleb128 0x3
 3616 01df 0E       		.uleb128 0xe
 3617 01e0 3A       		.uleb128 0x3a
 3618 01e1 0B       		.uleb128 0xb
 3619 01e2 3B       		.uleb128 0x3b
 3620 01e3 05       		.uleb128 0x5
 3621 01e4 11       		.uleb128 0x11
 3622 01e5 01       		.uleb128 0x1
 3623 01e6 12       		.uleb128 0x12
 3624 01e7 06       		.uleb128 0x6
 3625 01e8 40       		.uleb128 0x40
 3626 01e9 18       		.uleb128 0x18
 3627 01ea 9742     		.uleb128 0x2117
 3628 01ec 19       		.uleb128 0x19
 3629 01ed 00       		.byte	0
 3630 01ee 00       		.byte	0
 3631 01ef 1E       		.uleb128 0x1e
 3632 01f0 2E       		.uleb128 0x2e
 3633 01f1 01       		.byte	0x1
 3634 01f2 3F       		.uleb128 0x3f
 3635 01f3 19       		.uleb128 0x19
 3636 01f4 03       		.uleb128 0x3
 3637 01f5 0E       		.uleb128 0xe
 3638 01f6 3A       		.uleb128 0x3a
 3639 01f7 0B       		.uleb128 0xb
 3640 01f8 3B       		.uleb128 0x3b
 3641 01f9 05       		.uleb128 0x5
 3642 01fa 27       		.uleb128 0x27
 3643 01fb 19       		.uleb128 0x19
 3644 01fc 49       		.uleb128 0x49
 3645 01fd 13       		.uleb128 0x13
 3646 01fe 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 79


 3647 01ff 01       		.uleb128 0x1
 3648 0200 12       		.uleb128 0x12
 3649 0201 06       		.uleb128 0x6
 3650 0202 40       		.uleb128 0x40
 3651 0203 18       		.uleb128 0x18
 3652 0204 9742     		.uleb128 0x2117
 3653 0206 19       		.uleb128 0x19
 3654 0207 01       		.uleb128 0x1
 3655 0208 13       		.uleb128 0x13
 3656 0209 00       		.byte	0
 3657 020a 00       		.byte	0
 3658 020b 1F       		.uleb128 0x1f
 3659 020c 0F       		.uleb128 0xf
 3660 020d 00       		.byte	0
 3661 020e 0B       		.uleb128 0xb
 3662 020f 0B       		.uleb128 0xb
 3663 0210 49       		.uleb128 0x49
 3664 0211 13       		.uleb128 0x13
 3665 0212 00       		.byte	0
 3666 0213 00       		.byte	0
 3667 0214 20       		.uleb128 0x20
 3668 0215 2E       		.uleb128 0x2e
 3669 0216 00       		.byte	0
 3670 0217 3F       		.uleb128 0x3f
 3671 0218 19       		.uleb128 0x19
 3672 0219 03       		.uleb128 0x3
 3673 021a 0E       		.uleb128 0xe
 3674 021b 3A       		.uleb128 0x3a
 3675 021c 0B       		.uleb128 0xb
 3676 021d 3B       		.uleb128 0x3b
 3677 021e 05       		.uleb128 0x5
 3678 021f 11       		.uleb128 0x11
 3679 0220 01       		.uleb128 0x1
 3680 0221 12       		.uleb128 0x12
 3681 0222 06       		.uleb128 0x6
 3682 0223 40       		.uleb128 0x40
 3683 0224 18       		.uleb128 0x18
 3684 0225 9642     		.uleb128 0x2116
 3685 0227 19       		.uleb128 0x19
 3686 0228 00       		.byte	0
 3687 0229 00       		.byte	0
 3688 022a 21       		.uleb128 0x21
 3689 022b 34       		.uleb128 0x34
 3690 022c 00       		.byte	0
 3691 022d 03       		.uleb128 0x3
 3692 022e 0E       		.uleb128 0xe
 3693 022f 3A       		.uleb128 0x3a
 3694 0230 0B       		.uleb128 0xb
 3695 0231 3B       		.uleb128 0x3b
 3696 0232 05       		.uleb128 0x5
 3697 0233 49       		.uleb128 0x49
 3698 0234 13       		.uleb128 0x13
 3699 0235 3F       		.uleb128 0x3f
 3700 0236 19       		.uleb128 0x19
 3701 0237 3C       		.uleb128 0x3c
 3702 0238 19       		.uleb128 0x19
 3703 0239 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 80


 3704 023a 00       		.byte	0
 3705 023b 22       		.uleb128 0x22
 3706 023c 35       		.uleb128 0x35
 3707 023d 00       		.byte	0
 3708 023e 49       		.uleb128 0x49
 3709 023f 13       		.uleb128 0x13
 3710 0240 00       		.byte	0
 3711 0241 00       		.byte	0
 3712 0242 23       		.uleb128 0x23
 3713 0243 34       		.uleb128 0x34
 3714 0244 00       		.byte	0
 3715 0245 03       		.uleb128 0x3
 3716 0246 08       		.uleb128 0x8
 3717 0247 3A       		.uleb128 0x3a
 3718 0248 0B       		.uleb128 0xb
 3719 0249 3B       		.uleb128 0x3b
 3720 024a 0B       		.uleb128 0xb
 3721 024b 49       		.uleb128 0x49
 3722 024c 13       		.uleb128 0x13
 3723 024d 3F       		.uleb128 0x3f
 3724 024e 19       		.uleb128 0x19
 3725 024f 02       		.uleb128 0x2
 3726 0250 18       		.uleb128 0x18
 3727 0251 00       		.byte	0
 3728 0252 00       		.byte	0
 3729 0253 24       		.uleb128 0x24
 3730 0254 34       		.uleb128 0x34
 3731 0255 00       		.byte	0
 3732 0256 03       		.uleb128 0x3
 3733 0257 0E       		.uleb128 0xe
 3734 0258 3A       		.uleb128 0x3a
 3735 0259 0B       		.uleb128 0xb
 3736 025a 3B       		.uleb128 0x3b
 3737 025b 0B       		.uleb128 0xb
 3738 025c 49       		.uleb128 0x49
 3739 025d 13       		.uleb128 0x13
 3740 025e 3F       		.uleb128 0x3f
 3741 025f 19       		.uleb128 0x19
 3742 0260 02       		.uleb128 0x2
 3743 0261 18       		.uleb128 0x18
 3744 0262 00       		.byte	0
 3745 0263 00       		.byte	0
 3746 0264 25       		.uleb128 0x25
 3747 0265 01       		.uleb128 0x1
 3748 0266 01       		.byte	0x1
 3749 0267 49       		.uleb128 0x49
 3750 0268 13       		.uleb128 0x13
 3751 0269 01       		.uleb128 0x1
 3752 026a 13       		.uleb128 0x13
 3753 026b 00       		.byte	0
 3754 026c 00       		.byte	0
 3755 026d 26       		.uleb128 0x26
 3756 026e 21       		.uleb128 0x21
 3757 026f 00       		.byte	0
 3758 0270 49       		.uleb128 0x49
 3759 0271 13       		.uleb128 0x13
 3760 0272 2F       		.uleb128 0x2f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 81


 3761 0273 0B       		.uleb128 0xb
 3762 0274 00       		.byte	0
 3763 0275 00       		.byte	0
 3764 0276 27       		.uleb128 0x27
 3765 0277 34       		.uleb128 0x34
 3766 0278 00       		.byte	0
 3767 0279 03       		.uleb128 0x3
 3768 027a 08       		.uleb128 0x8
 3769 027b 3A       		.uleb128 0x3a
 3770 027c 0B       		.uleb128 0xb
 3771 027d 3B       		.uleb128 0x3b
 3772 027e 0B       		.uleb128 0xb
 3773 027f 49       		.uleb128 0x49
 3774 0280 13       		.uleb128 0x13
 3775 0281 3F       		.uleb128 0x3f
 3776 0282 19       		.uleb128 0x19
 3777 0283 3C       		.uleb128 0x3c
 3778 0284 19       		.uleb128 0x19
 3779 0285 00       		.byte	0
 3780 0286 00       		.byte	0
 3781 0287 28       		.uleb128 0x28
 3782 0288 34       		.uleb128 0x34
 3783 0289 00       		.byte	0
 3784 028a 03       		.uleb128 0x3
 3785 028b 0E       		.uleb128 0xe
 3786 028c 3A       		.uleb128 0x3a
 3787 028d 0B       		.uleb128 0xb
 3788 028e 3B       		.uleb128 0x3b
 3789 028f 0B       		.uleb128 0xb
 3790 0290 49       		.uleb128 0x49
 3791 0291 13       		.uleb128 0x13
 3792 0292 3F       		.uleb128 0x3f
 3793 0293 19       		.uleb128 0x19
 3794 0294 3C       		.uleb128 0x3c
 3795 0295 19       		.uleb128 0x19
 3796 0296 00       		.byte	0
 3797 0297 00       		.byte	0
 3798 0298 29       		.uleb128 0x29
 3799 0299 34       		.uleb128 0x34
 3800 029a 00       		.byte	0
 3801 029b 03       		.uleb128 0x3
 3802 029c 0E       		.uleb128 0xe
 3803 029d 3A       		.uleb128 0x3a
 3804 029e 0B       		.uleb128 0xb
 3805 029f 3B       		.uleb128 0x3b
 3806 02a0 05       		.uleb128 0x5
 3807 02a1 49       		.uleb128 0x49
 3808 02a2 13       		.uleb128 0x13
 3809 02a3 3F       		.uleb128 0x3f
 3810 02a4 19       		.uleb128 0x19
 3811 02a5 02       		.uleb128 0x2
 3812 02a6 18       		.uleb128 0x18
 3813 02a7 00       		.byte	0
 3814 02a8 00       		.byte	0
 3815 02a9 00       		.byte	0
 3816              		.section	.debug_aranges,"",%progbits
 3817 0000 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 82


 3818 0004 0200     		.2byte	0x2
 3819 0006 00000000 		.4byte	.Ldebug_info0
 3820 000a 04       		.byte	0x4
 3821 000b 00       		.byte	0
 3822 000c 0000     		.2byte	0
 3823 000e 0000     		.2byte	0
 3824 0010 00000000 		.4byte	.LFB64
 3825 0014 EC000000 		.4byte	.LFE64-.LFB64
 3826 0018 00000000 		.4byte	.LFB65
 3827 001c 18000000 		.4byte	.LFE65-.LFB65
 3828 0020 00000000 		.4byte	.LFB66
 3829 0024 18000000 		.4byte	.LFE66-.LFB66
 3830 0028 00000000 		.4byte	.LFB67
 3831 002c 18000000 		.4byte	.LFE67-.LFB67
 3832 0030 00000000 		.4byte	.LFB68
 3833 0034 18000000 		.4byte	.LFE68-.LFB68
 3834 0038 00000000 		.4byte	.LFB69
 3835 003c 38000000 		.4byte	.LFE69-.LFB69
 3836 0040 00000000 		.4byte	.LFB70
 3837 0044 C0000000 		.4byte	.LFE70-.LFB70
 3838 0048 00000000 		.4byte	.LFB71
 3839 004c 54000000 		.4byte	.LFE71-.LFB71
 3840 0050 00000000 		.4byte	.LFB72
 3841 0054 34000000 		.4byte	.LFE72-.LFB72
 3842 0058 00000000 		.4byte	.LFB73
 3843 005c 84000000 		.4byte	.LFE73-.LFB73
 3844 0060 00000000 		.4byte	.LFB74
 3845 0064 58020000 		.4byte	.LFE74-.LFB74
 3846 0068 00000000 		.4byte	.LFB75
 3847 006c 8C020000 		.4byte	.LFE75-.LFB75
 3848 0070 00000000 		.4byte	.LFB76
 3849 0074 1C000000 		.4byte	.LFE76-.LFB76
 3850 0078 00000000 		.4byte	.LFB77
 3851 007c A4000000 		.4byte	.LFE77-.LFB77
 3852 0080 00000000 		.4byte	.LFB78
 3853 0084 C4000000 		.4byte	.LFE78-.LFB78
 3854 0088 00000000 		.4byte	0
 3855 008c 00000000 		.4byte	0
 3856              		.section	.debug_ranges,"",%progbits
 3857              	.Ldebug_ranges0:
 3858 0000 38000000 		.4byte	.LBB3
 3859 0004 BC000000 		.4byte	.LBE3
 3860 0008 BE000000 		.4byte	.LBB4
 3861 000c C0000000 		.4byte	.LBE4
 3862 0010 00000000 		.4byte	0
 3863 0014 00000000 		.4byte	0
 3864 0018 C2000000 		.4byte	.LBB5
 3865 001c 46010000 		.4byte	.LBE5
 3866 0020 48010000 		.4byte	.LBB6
 3867 0024 4A010000 		.4byte	.LBE6
 3868 0028 00000000 		.4byte	0
 3869 002c 00000000 		.4byte	0
 3870 0030 4C010000 		.4byte	.LBB7
 3871 0034 D0010000 		.4byte	.LBE7
 3872 0038 D2010000 		.4byte	.LBB8
 3873 003c D4010000 		.4byte	.LBE8
 3874 0040 00000000 		.4byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 83


 3875 0044 00000000 		.4byte	0
 3876 0048 D6010000 		.4byte	.LBB9
 3877 004c 5A020000 		.4byte	.LBE9
 3878 0050 5C020000 		.4byte	.LBB10
 3879 0054 5E020000 		.4byte	.LBE10
 3880 0058 00000000 		.4byte	0
 3881 005c 00000000 		.4byte	0
 3882 0060 00000000 		.4byte	.LFB64
 3883 0064 EC000000 		.4byte	.LFE64
 3884 0068 00000000 		.4byte	.LFB65
 3885 006c 18000000 		.4byte	.LFE65
 3886 0070 00000000 		.4byte	.LFB66
 3887 0074 18000000 		.4byte	.LFE66
 3888 0078 00000000 		.4byte	.LFB67
 3889 007c 18000000 		.4byte	.LFE67
 3890 0080 00000000 		.4byte	.LFB68
 3891 0084 18000000 		.4byte	.LFE68
 3892 0088 00000000 		.4byte	.LFB69
 3893 008c 38000000 		.4byte	.LFE69
 3894 0090 00000000 		.4byte	.LFB70
 3895 0094 C0000000 		.4byte	.LFE70
 3896 0098 00000000 		.4byte	.LFB71
 3897 009c 54000000 		.4byte	.LFE71
 3898 00a0 00000000 		.4byte	.LFB72
 3899 00a4 34000000 		.4byte	.LFE72
 3900 00a8 00000000 		.4byte	.LFB73
 3901 00ac 84000000 		.4byte	.LFE73
 3902 00b0 00000000 		.4byte	.LFB74
 3903 00b4 58020000 		.4byte	.LFE74
 3904 00b8 00000000 		.4byte	.LFB75
 3905 00bc 8C020000 		.4byte	.LFE75
 3906 00c0 00000000 		.4byte	.LFB76
 3907 00c4 1C000000 		.4byte	.LFE76
 3908 00c8 00000000 		.4byte	.LFB77
 3909 00cc A4000000 		.4byte	.LFE77
 3910 00d0 00000000 		.4byte	.LFB78
 3911 00d4 C4000000 		.4byte	.LFE78
 3912 00d8 00000000 		.4byte	0
 3913 00dc 00000000 		.4byte	0
 3914              		.section	.debug_line,"",%progbits
 3915              	.Ldebug_line0:
 3916 0000 F9030000 		.section	.debug_str,"MS",%progbits,1
 3916      02007001 
 3916      00000201 
 3916      FB0E0D00 
 3916      01010101 
 3917              	.LASF47:
 3918 0000 64697265 		.ascii	"direction\000"
 3918      6374696F 
 3918      6E00
 3919              	.LASF64:
 3920 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3920      61726441 
 3920      66746572 
 3920      5475726E 
 3920      00
 3921              	.LASF50:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 84


 3922 001b 496E7374 		.ascii	"InstructionDirection\000"
 3922      72756374 
 3922      696F6E44 
 3922      69726563 
 3922      74696F6E 
 3923              	.LASF136:
 3924 0030 6D61696E 		.ascii	"main.c\000"
 3924      2E6300
 3925              	.LASF76:
 3926 0037 626C6F63 		.ascii	"blocksize\000"
 3926      6B73697A 
 3926      6500
 3927              	.LASF121:
 3928 0041 62756666 		.ascii	"buffer\000"
 3928      657200
 3929              	.LASF8:
 3930 0048 756E7369 		.ascii	"unsigned int\000"
 3930      676E6564 
 3930      20696E74 
 3930      00
 3931              	.LASF12:
 3932 0055 5F5F696E 		.ascii	"__int32_t\000"
 3932      7433325F 
 3932      7400
 3933              	.LASF18:
 3934 005f 696E7431 		.ascii	"int16\000"
 3934      3600
 3935              	.LASF112:
 3936 0065 73797374 		.ascii	"system_state\000"
 3936      656D5F73 
 3936      74617465 
 3936      00
 3937              	.LASF92:
 3938 0072 6E657874 		.ascii	"nextInstruction\000"
 3938      496E7374 
 3938      72756374 
 3938      696F6E00 
 3939              	.LASF135:
 3940 0082 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3940      43313120 
 3940      352E342E 
 3940      31203230 
 3940      31363036 
 3941 00b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3941      20726576 
 3941      6973696F 
 3941      6E203233 
 3941      37373135 
 3942 00e8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3942      66756E63 
 3942      74696F6E 
 3942      2D736563 
 3942      74696F6E 
 3943              	.LASF69:
 3944 0110 53365F44 		.ascii	"S6_DETECTED\000"
 3944      45544543 
 3944      54454400 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 85


 3945              	.LASF120:
 3946 011c 746F7461 		.ascii	"totalDistance\000"
 3946      6C446973 
 3946      74616E63 
 3946      6500
 3947              	.LASF34:
 3948 012a 67325F78 		.ascii	"g2_xpos\000"
 3948      706F7300 
 3949              	.LASF127:
 3950 0132 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 3950      61726455 
 3950      6E74696C 
 3950      54617267 
 3950      65745374 
 3951              	.LASF89:
 3952 0150 6E756D53 		.ascii	"numSteps\000"
 3952      74657073 
 3952      00
 3953              	.LASF83:
 3954 0159 74617267 		.ascii	"targetRow\000"
 3954      6574526F 
 3954      7700
 3955              	.LASF75:
 3956 0163 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 3956      6F76656D 
 3956      656E7441 
 3956      63636F72 
 3956      64696E67 
 3957              	.LASF107:
 3958 0185 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3958      5F72665F 
 3958      7472616E 
 3958      736D6973 
 3958      73696F6E 
 3959              	.LASF73:
 3960 01a1 466F7277 		.ascii	"ForwardCourseCorrection\000"
 3960      61726443 
 3960      6F757273 
 3960      65436F72 
 3960      72656374 
 3961              	.LASF116:
 3962 01b9 63757272 		.ascii	"currentRobotOrientation\000"
 3962      656E7452 
 3962      6F626F74 
 3962      4F726965 
 3962      6E746174 
 3963              	.LASF86:
 3964 01d1 52657365 		.ascii	"ResetSensorFlags\000"
 3964      7453656E 
 3964      736F7246 
 3964      6C616773 
 3964      00
 3965              	.LASF37:
 3966 01e2 67325F64 		.ascii	"g2_direction\000"
 3966      69726563 
 3966      74696F6E 
 3966      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 86


 3967              	.LASF84:
 3968 01ef 74617267 		.ascii	"targetCol\000"
 3968      6574436F 
 3968      6C00
 3969              	.LASF122:
 3970 01f9 71756164 		.ascii	"quadDec2Count\000"
 3970      44656332 
 3970      436F756E 
 3970      7400
 3971              	.LASF19:
 3972 0207 666C6F61 		.ascii	"float\000"
 3972      7400
 3973              	.LASF77:
 3974 020d 63757272 		.ascii	"currentInstructionDirection\000"
 3974      656E7449 
 3974      6E737472 
 3974      75637469 
 3974      6F6E4469 
 3975              	.LASF111:
 3976 0229 75736242 		.ascii	"usbBuffer\000"
 3976      75666665 
 3976      7200
 3977              	.LASF80:
 3978 0233 636F756E 		.ascii	"count\000"
 3978      7400
 3979              	.LASF22:
 3980 0239 696E6465 		.ascii	"index\000"
 3980      7800
 3981              	.LASF7:
 3982 023f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3982      206C6F6E 
 3982      6720756E 
 3982      7369676E 
 3982      65642069 
 3983              	.LASF46:
 3984 0256 496E7374 		.ascii	"Instruction\000"
 3984      72756374 
 3984      696F6E00 
 3985              	.LASF104:
 3986 0262 666C6167 		.ascii	"flag_packet\000"
 3986      5F706163 
 3986      6B657400 
 3987              	.LASF93:
 3988 026e 53657452 		.ascii	"SetRobotMovement\000"
 3988      6F626F74 
 3988      4D6F7665 
 3988      6D656E74 
 3988      00
 3989              	.LASF70:
 3990 027f 54494D45 		.ascii	"TIMER_FINISH\000"
 3990      525F4649 
 3990      4E495348 
 3990      00
 3991              	.LASF124:
 3992 028c 6B656570 		.ascii	"keepLedOn\000"
 3992      4C65644F 
 3992      6E00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 87


 3993              	.LASF42:
 3994 0296 466F7277 		.ascii	"ForwardUntilTarget\000"
 3994      61726455 
 3994      6E74696C 
 3994      54617267 
 3994      657400
 3995              	.LASF100:
 3996 02a9 666C6167 		.ascii	"flag_ts_update\000"
 3996      5F74735F 
 3996      75706461 
 3996      746500
 3997              	.LASF99:
 3998 02b8 666C6167 		.ascii	"flag_ts_enc\000"
 3998      5F74735F 
 3998      656E6300 
 3999              	.LASF78:
 4000 02c4 71756164 		.ascii	"quadCountToRPM\000"
 4000      436F756E 
 4000      74546F52 
 4000      504D00
 4001              	.LASF81:
 4002 02d3 626C6F63 		.ascii	"blockSize\000"
 4002      6B53697A 
 4002      6500
 4003              	.LASF134:
 4004 02dd 69676E6F 		.ascii	"ignoreSensor\000"
 4004      72655365 
 4004      6E736F72 
 4004      00
 4005              	.LASF43:
 4006 02ea 53746F70 		.ascii	"StopAtTarget\000"
 4006      41745461 
 4006      72676574 
 4006      00
 4007              	.LASF63:
 4008 02f7 77616974 		.ascii	"waitForTurn\000"
 4008      466F7254 
 4008      75726E00 
 4009              	.LASF24:
 4010 0303 726F626F 		.ascii	"robot_ypos\000"
 4010      745F7970 
 4010      6F7300
 4011              	.LASF98:
 4012 030e 74735F64 		.ascii	"ts_display\000"
 4012      6973706C 
 4012      617900
 4013              	.LASF11:
 4014 0319 63686172 		.ascii	"char\000"
 4014      00
 4015              	.LASF137:
 4016 031e 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4016      6F63756D 
 4016      656E7473 
 4016      5C476974 
 4016      4875625C 
 4017 034d 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4017      635F636F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 88


 4017      64655F62 
 4017      6173655C 
 4017      43533330 
 4018              	.LASF28:
 4019 036f 67305F73 		.ascii	"g0_speed\000"
 4019      70656564 
 4019      00
 4020              	.LASF90:
 4021 0378 696E7374 		.ascii	"instructionList\000"
 4021      72756374 
 4021      696F6E4C 
 4021      69737400 
 4022              	.LASF91:
 4023 0388 696E7374 		.ascii	"instructionIndex\000"
 4023      72756374 
 4023      696F6E49 
 4023      6E646578 
 4023      00
 4024              	.LASF15:
 4025 0399 75696E74 		.ascii	"uint16\000"
 4025      313600
 4026              	.LASF17:
 4027 03a0 696E7438 		.ascii	"int8\000"
 4027      00
 4028              	.LASF129:
 4029 03a5 78426C6F 		.ascii	"xBlocksize\000"
 4029      636B7369 
 4029      7A6500
 4030              	.LASF33:
 4031 03b0 67315F64 		.ascii	"g1_direction\000"
 4031      69726563 
 4031      74696F6E 
 4031      00
 4032              	.LASF53:
 4033 03bd 4C656674 		.ascii	"Left\000"
 4033      00
 4034              	.LASF74:
 4035 03c2 73706565 		.ascii	"speedTimer\000"
 4035      6454696D 
 4035      657200
 4036              	.LASF85:
 4037 03cd 70617468 		.ascii	"pathCount\000"
 4037      436F756E 
 4037      7400
 4038              	.LASF126:
 4039 03d7 7475726E 		.ascii	"turnFinishedFlag\000"
 4039      46696E69 
 4039      73686564 
 4039      466C6167 
 4039      00
 4040              	.LASF39:
 4041 03e8 77616974 		.ascii	"waitForLeftTurn\000"
 4041      466F724C 
 4041      65667454 
 4041      75726E00 
 4042              	.LASF6:
 4043 03f8 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 89


 4043      206C6F6E 
 4043      6720696E 
 4043      7400
 4044              	.LASF30:
 4045 0406 67315F78 		.ascii	"g1_xpos\000"
 4045      706F7300 
 4046              	.LASF128:
 4047 040e 626C6F63 		.ascii	"blockSizeTotal\000"
 4047      6B53697A 
 4047      65546F74 
 4047      616C00
 4048              	.LASF117:
 4049 041d 70726576 		.ascii	"previousOrientation\000"
 4049      696F7573 
 4049      4F726965 
 4049      6E746174 
 4049      696F6E00 
 4050              	.LASF41:
 4051 0431 75547572 		.ascii	"uTurn\000"
 4051      6E00
 4052              	.LASF72:
 4053 0437 6E657744 		.ascii	"newDistance\000"
 4053      69737461 
 4053      6E636500 
 4054              	.LASF36:
 4055 0443 67325F73 		.ascii	"g2_speed\000"
 4055      70656564 
 4055      00
 4056              	.LASF27:
 4057 044c 67305F79 		.ascii	"g0_ypos\000"
 4057      706F7300 
 4058              	.LASF113:
 4059 0454 666F6F64 		.ascii	"food_list\000"
 4059      5F6C6973 
 4059      7400
 4060              	.LASF58:
 4061 045e 5475726E 		.ascii	"TurnLeft\000"
 4061      4C656674 
 4061      00
 4062              	.LASF97:
 4063 0467 74735F73 		.ascii	"ts_speed\000"
 4063      70656564 
 4063      00
 4064              	.LASF62:
 4065 0470 556E6B6E 		.ascii	"Unknown\000"
 4065      6F776E00 
 4066              	.LASF16:
 4067 0478 75696E74 		.ascii	"uint32\000"
 4067      333200
 4068              	.LASF40:
 4069 047f 77616974 		.ascii	"waitForRightTurn\000"
 4069      466F7252 
 4069      69676874 
 4069      5475726E 
 4069      00
 4070              	.LASF57:
 4071 0490 5475726E 		.ascii	"TurnRight\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 90


 4071      52696768 
 4071      7400
 4072              	.LASF45:
 4073 049a 64617461 		.ascii	"data_main\000"
 4073      5F6D6169 
 4073      6E00
 4074              	.LASF21:
 4075 04a4 72737369 		.ascii	"rssi\000"
 4075      00
 4076              	.LASF29:
 4077 04a9 67305F64 		.ascii	"g0_direction\000"
 4077      69726563 
 4077      74696F6E 
 4077      00
 4078              	.LASF115:
 4079 04b6 70726576 		.ascii	"previousDirection\000"
 4079      696F7573 
 4079      44697265 
 4079      6374696F 
 4079      6E00
 4080              	.LASF9:
 4081 04c8 6C6F6E67 		.ascii	"long double\000"
 4081      20646F75 
 4081      626C6500 
 4082              	.LASF101:
 4083 04d4 666C6167 		.ascii	"flag_ts_speed\000"
 4083      5F74735F 
 4083      73706565 
 4083      6400
 4084              	.LASF106:
 4085 04e2 64617461 		.ascii	"dataready_flag\000"
 4085      72656164 
 4085      795F666C 
 4085      616700
 4086              	.LASF103:
 4087 04f1 666C6167 		.ascii	"flag_rx\000"
 4087      5F727800 
 4088              	.LASF130:
 4089 04f9 79426C6F 		.ascii	"yBlocksize\000"
 4089      636B7369 
 4089      7A6500
 4090              	.LASF2:
 4091 0504 73686F72 		.ascii	"short int\000"
 4091      7420696E 
 4091      7400
 4092              	.LASF67:
 4093 050e 53345F44 		.ascii	"S4_DETECTED\000"
 4093      45544543 
 4093      54454400 
 4094              	.LASF66:
 4095 051a 53335F44 		.ascii	"S3_DETECTED\000"
 4095      45544543 
 4095      54454400 
 4096              	.LASF4:
 4097 0526 6C6F6E67 		.ascii	"long int\000"
 4097      20696E74 
 4097      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 91


 4098              	.LASF94:
 4099 052f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4099      52784275 
 4099      66666572 
 4099      00
 4100              	.LASF96:
 4101 053c 74735F75 		.ascii	"ts_update\000"
 4101      70646174 
 4101      6500
 4102              	.LASF56:
 4103 0546 466F7277 		.ascii	"Forward\000"
 4103      61726400 
 4104              	.LASF119:
 4105 054e 746F7461 		.ascii	"totalMilliseconds\000"
 4105      6C4D696C 
 4105      6C697365 
 4105      636F6E64 
 4105      7300
 4106              	.LASF35:
 4107 0560 67325F79 		.ascii	"g2_ypos\000"
 4107      706F7300 
 4108              	.LASF87:
 4109 0568 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4109      546F4E65 
 4109      7874496E 
 4109      73747275 
 4109      6374696F 
 4110              	.LASF51:
 4111 057e 4F726965 		.ascii	"OrientationState\000"
 4111      6E746174 
 4111      696F6E53 
 4111      74617465 
 4111      00
 4112              	.LASF52:
 4113 058f 446F776E 		.ascii	"Down\000"
 4113      00
 4114              	.LASF54:
 4115 0594 52696768 		.ascii	"Right\000"
 4115      7400
 4116              	.LASF31:
 4117 059a 67315F79 		.ascii	"g1_ypos\000"
 4117      706F7300 
 4118              	.LASF114:
 4119 05a2 63757272 		.ascii	"currentDirection\000"
 4119      656E7444 
 4119      69726563 
 4119      74696F6E 
 4119      00
 4120              	.LASF10:
 4121 05b3 73697A65 		.ascii	"sizetype\000"
 4121      74797065 
 4121      00
 4122              	.LASF5:
 4123 05bc 6C6F6E67 		.ascii	"long unsigned int\000"
 4123      20756E73 
 4123      69676E65 
 4123      6420696E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 92


 4123      7400
 4124              	.LASF125:
 4125 05ce 73746F70 		.ascii	"stopBuffer\000"
 4125      42756666 
 4125      657200
 4126              	.LASF13:
 4127 05d9 696E7433 		.ascii	"int32_t\000"
 4127      325F7400 
 4128              	.LASF23:
 4129 05e1 726F626F 		.ascii	"robot_xpos\000"
 4129      745F7870 
 4129      6F7300
 4130              	.LASF110:
 4131 05ec 656E7472 		.ascii	"entry\000"
 4131      7900
 4132              	.LASF55:
 4133 05f2 526F626F 		.ascii	"RobotMovement\000"
 4133      744D6F76 
 4133      656D656E 
 4133      7400
 4134              	.LASF1:
 4135 0600 756E7369 		.ascii	"unsigned char\000"
 4135      676E6564 
 4135      20636861 
 4135      7200
 4136              	.LASF133:
 4137 060e 73746F70 		.ascii	"stoppedAfterTurn\000"
 4137      70656441 
 4137      66746572 
 4137      5475726E 
 4137      00
 4138              	.LASF109:
 4139 061f 6C696E65 		.ascii	"line\000"
 4139      00
 4140              	.LASF79:
 4141 0624 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4141      756C6174 
 4141      65446973 
 4141      74616E63 
 4141      65546F54 
 4142              	.LASF60:
 4143 063e 41646A75 		.ascii	"AdjustToTheRight\000"
 4143      7374546F 
 4143      54686552 
 4143      69676874 
 4143      00
 4144              	.LASF61:
 4145 064f 53746F70 		.ascii	"Stop\000"
 4145      00
 4146              	.LASF88:
 4147 0654 47657449 		.ascii	"GetInstructionAtIndex\000"
 4147      6E737472 
 4147      75637469 
 4147      6F6E4174 
 4147      496E6465 
 4148              	.LASF95:
 4149 066a 74735F65 		.ascii	"ts_enc\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 93


 4149      6E6300
 4150              	.LASF102:
 4151 0671 666C6167 		.ascii	"flag_ts_display\000"
 4151      5F74735F 
 4151      64697370 
 4151      6C617900 
 4152              	.LASF44:
 4153 0681 536B6970 		.ascii	"Skip\000"
 4153      00
 4154              	.LASF108:
 4155 0686 64697370 		.ascii	"displaystring\000"
 4155      6C617973 
 4155      7472696E 
 4155      6700
 4156              	.LASF38:
 4157 0694 476F466F 		.ascii	"GoForward\000"
 4157      72776172 
 4157      6400
 4158              	.LASF68:
 4159 069e 53355F44 		.ascii	"S5_DETECTED\000"
 4159      45544543 
 4159      54454400 
 4160              	.LASF0:
 4161 06aa 7369676E 		.ascii	"signed char\000"
 4161      65642063 
 4161      68617200 
 4162              	.LASF131:
 4163 06b6 63757272 		.ascii	"currentRow\000"
 4163      656E7452 
 4163      6F7700
 4164              	.LASF3:
 4165 06c1 73686F72 		.ascii	"short unsigned int\000"
 4165      7420756E 
 4165      7369676E 
 4165      65642069 
 4165      6E7400
 4166              	.LASF25:
 4167 06d4 726F626F 		.ascii	"robot_orientation\000"
 4167      745F6F72 
 4167      69656E74 
 4167      6174696F 
 4167      6E00
 4168              	.LASF71:
 4169 06e6 6D61696E 		.ascii	"main\000"
 4169      00
 4170              	.LASF118:
 4171 06eb 63757272 		.ascii	"currentInstruction\000"
 4171      656E7449 
 4171      6E737472 
 4171      75637469 
 4171      6F6E00
 4172              	.LASF59:
 4173 06fe 41646A75 		.ascii	"AdjustToTheLeft\000"
 4173      7374546F 
 4173      5468654C 
 4173      65667400 
 4174              	.LASF65:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccWUepXd.s 			page 94


 4175 070e 4261636B 		.ascii	"Backward\000"
 4175      77617264 
 4175      00
 4176              	.LASF14:
 4177 0717 75696E74 		.ascii	"uint8\000"
 4177      3800
 4178              	.LASF20:
 4179 071d 646F7562 		.ascii	"double\000"
 4179      6C6500
 4180              	.LASF132:
 4181 0724 63757272 		.ascii	"currentCol\000"
 4181      656E7443 
 4181      6F6C00
 4182              	.LASF82:
 4183 072f 746F7461 		.ascii	"totalBlockSize\000"
 4183      6C426C6F 
 4183      636B5369 
 4183      7A6500
 4184              	.LASF26:
 4185 073e 67305F78 		.ascii	"g0_xpos\000"
 4185      706F7300 
 4186              	.LASF123:
 4187 0746 74696D65 		.ascii	"timerInt\000"
 4187      72496E74 
 4187      00
 4188              	.LASF105:
 4189 074f 666C6167 		.ascii	"flag_KB_string\000"
 4189      5F4B425F 
 4189      73747269 
 4189      6E6700
 4190              	.LASF32:
 4191 075e 67315F73 		.ascii	"g1_speed\000"
 4191      70656564 
 4191      00
 4192              	.LASF48:
 4193 0767 69676E6F 		.ascii	"ignoreL\000"
 4193      72654C00 
 4194              	.LASF49:
 4195 076f 69676E6F 		.ascii	"ignoreR\000"
 4195      72655200 
 4196              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
