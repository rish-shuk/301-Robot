ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,16,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              	turnStartedFlag:
 173 0034 00       		.space	1
 174              	turnFinishedFlag:
 175 0035 00       		.space	1
 176              	forwardUntilTargetStartedFlag:
 177 0036 00       		.space	1
 178              	uTurnStartedFlag:
 179 0037 00       		.space	1
 180              	uTurnFinishedFlag:
 181 0038 00       		.space	1
 182              	leftStatusFlag:
 183 0039 00       		.space	1
 184              	rightStatusFlag:
 185 003a 00       		.space	1
 186              	spinCourseCorrectionStarted:
 187 003b 00       		.space	1
 188              	currentIgnoreL:
 189 003c 00       		.space	1
 190              		.data
 191              		.type	currentIgnoreR, %object
 192              		.size	currentIgnoreR, 1
 193              	currentIgnoreR:
 194 0045 01       		.byte	1
 195              		.global	junctionConfiguration
 196              		.bss
 197 003d 000000   		.align	2
 198              		.type	junctionConfiguration, %object
 199              		.size	junctionConfiguration, 4
 200              	junctionConfiguration:
 201 0040 00000000 		.space	4
 202              		.global	blockSizeTotal
 203              		.align	2
 204              		.type	blockSizeTotal, %object
 205              		.size	blockSizeTotal, 4
 206              	blockSizeTotal:
 207 0044 00000000 		.space	4
 208              		.global	__aeabi_i2d
 209              		.global	__aeabi_dmul
 210              		.global	__aeabi_ddiv
 211              		.global	__aeabi_d2f
 212              		.global	__aeabi_fadd
 213              		.section	.text.speedTimer,"ax",%progbits
 214              		.align	2
 215              		.global	speedTimer
 216              		.thumb
 217              		.thumb_func
 218              		.type	speedTimer, %function
 219              	speedTimer:
 220              	.LFB64:
 221              		.file 1 "main.c"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 5


   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** 
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 6


  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 1;
  65:main.c        **** 
  66:main.c        **** uint8 junctionConfiguration[4] = {0};
  67:main.c        **** 
  68:main.c        **** float blockSizeTotal = 0;
  69:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  70:main.c        **** 
  71:main.c        **** CY_ISR (speedTimer) {
 222              		.loc 1 71 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 90B5     		push	{r4, r7, lr}
 227              		.cfi_def_cfa_offset 12
 228              		.cfi_offset 4, -12
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 83B0     		sub	sp, sp, #12
 232              		.cfi_def_cfa_offset 24
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
  72:main.c        ****     timerInt = 1;
 235              		.loc 1 72 0
 236 0006 344B     		ldr	r3, .L4+16
 237 0008 0122     		movs	r2, #1
 238 000a 1A60     		str	r2, [r3]
  73:main.c        ****     //quadDec_M1 used for turning macros
  74:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 239              		.loc 1 74 0
 240 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 241 0010 0346     		mov	r3, r0
 242 0012 1A46     		mov	r2, r3
 243 0014 314B     		ldr	r3, .L4+20
 244 0016 1A60     		str	r2, [r3]
  75:main.c        ****     
  76:main.c        ****     if ((currentDirection == Forward || 
 245              		.loc 1 76 0
 246 0018 314B     		ldr	r3, .L4+24
 247 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248 001c 002B     		cmp	r3, #0
 249 001e 13D0     		beq	.L2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 250              		.loc 1 77 0 discriminator 1
 251 0020 2F4B     		ldr	r3, .L4+24
 252 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 253              		.loc 1 76 0 discriminator 1
 254 0024 082B     		cmp	r3, #8
 255 0026 0FD0     		beq	.L2
  78:main.c        ****         currentDirection == waitForTurn || 
 256              		.loc 1 78 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 7


 257 0028 2D4B     		ldr	r3, .L4+24
 258 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 259              		.loc 1 77 0
 260 002c 072B     		cmp	r3, #7
 261 002e 0BD0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 262              		.loc 1 79 0
 263 0030 2B4B     		ldr	r3, .L4+24
 264 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:main.c        ****         currentDirection == waitForTurn || 
 265              		.loc 1 78 0
 266 0034 032B     		cmp	r3, #3
 267 0036 07D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 268              		.loc 1 80 0
 269 0038 294B     		ldr	r3, .L4+24
 270 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 271              		.loc 1 79 0
 272 003c 042B     		cmp	r3, #4
 273 003e 03D0     		beq	.L2
  81:main.c        ****         currentDirection == Backward) &&
 274              		.loc 1 81 0
 275 0040 274B     		ldr	r3, .L4+24
 276 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 277              		.loc 1 80 0
 278 0044 092B     		cmp	r3, #9
 279 0046 34D1     		bne	.L3
 280              	.L2:
  82:main.c        ****         quadDec2Count != 0) {
 281              		.loc 1 82 0
 282 0048 244B     		ldr	r3, .L4+20
 283 004a 1B68     		ldr	r3, [r3]
  81:main.c        ****         currentDirection == Backward) &&
 284              		.loc 1 81 0
 285 004c 002B     		cmp	r3, #0
 286 004e 30D0     		beq	.L3
 287              	.LBB2:
  83:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  84:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 288              		.loc 1 84 0
 289 0050 224B     		ldr	r3, .L4+20
 290 0052 1B68     		ldr	r3, [r3]
 291 0054 002B     		cmp	r3, #0
 292 0056 B8BF     		it	lt
 293 0058 5B42     		rsblt	r3, r3, #0
 294 005a 1846     		mov	r0, r3
 295 005c FFF7FEFF 		bl	__aeabi_i2d
 296 0060 19A3     		adr	r3, .L4
 297 0062 D3E90023 		ldrd	r2, [r3]
 298 0066 FFF7FEFF 		bl	__aeabi_dmul
 299 006a 0346     		mov	r3, r0
 300 006c 0C46     		mov	r4, r1
 301 006e 1846     		mov	r0, r3
 302 0070 2146     		mov	r1, r4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 8


 303 0072 17A3     		adr	r3, .L4+8
 304 0074 D3E90023 		ldrd	r2, [r3]
 305 0078 FFF7FEFF 		bl	__aeabi_dmul
 306 007c 0346     		mov	r3, r0
 307 007e 0C46     		mov	r4, r1
 308 0080 1846     		mov	r0, r3
 309 0082 2146     		mov	r1, r4
 310 0084 4FF00002 		mov	r2, #0
 311 0088 164B     		ldr	r3, .L4+28
 312 008a FFF7FEFF 		bl	__aeabi_ddiv
 313 008e 0346     		mov	r3, r0
 314 0090 0C46     		mov	r4, r1
 315 0092 1846     		mov	r0, r3
 316 0094 2146     		mov	r1, r4
 317 0096 FFF7FEFF 		bl	__aeabi_d2f
 318 009a 0346     		mov	r3, r0
 319 009c 7B60     		str	r3, [r7, #4]	@ float
  85:main.c        ****         
  86:main.c        ****         totalDistance = totalDistance + newDistance;
 320              		.loc 1 86 0
 321 009e 124B     		ldr	r3, .L4+32
 322 00a0 1B68     		ldr	r3, [r3]	@ float
 323 00a2 7968     		ldr	r1, [r7, #4]	@ float
 324 00a4 1846     		mov	r0, r3
 325 00a6 FFF7FEFF 		bl	__aeabi_fadd
 326 00aa 0346     		mov	r3, r0
 327 00ac 1A46     		mov	r2, r3
 328 00ae 0E4B     		ldr	r3, .L4+32
 329 00b0 1A60     		str	r2, [r3]	@ float
 330              	.L3:
 331              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     
  89:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 332              		.loc 1 89 0
 333 00b2 0020     		movs	r0, #0
 334 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  90:main.c        ****     QuadDec_M2_Start(); // restart counter
 335              		.loc 1 90 0
 336 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        ****     
  92:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 337              		.loc 1 92 0
 338 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  93:main.c        **** }
 339              		.loc 1 93 0
 340 00c0 00BF     		nop
 341 00c2 0C37     		adds	r7, r7, #12
 342              		.cfi_def_cfa_offset 12
 343 00c4 BD46     		mov	sp, r7
 344              		.cfi_def_cfa_register 13
 345              		@ sp needed
 346 00c6 90BD     		pop	{r4, r7, pc}
 347              	.L5:
 348              		.align	3
 349              	.L4:
 350 00c8 182D4454 		.word	1413754136
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 9


 351 00cc FB210940 		.word	1074340347
 352 00d0 00000000 		.word	0
 353 00d4 00205040 		.word	1078992896
 354 00d8 00000000 		.word	timerInt
 355 00dc 00000000 		.word	quadDec2Count
 356 00e0 00000000 		.word	currentDirection
 357 00e4 00806C40 		.word	1080852480
 358 00e8 00000000 		.word	totalDistance
 359              		.cfi_endproc
 360              	.LFE64:
 361              		.size	speedTimer, .-speedTimer
 362              		.section	.text.S3_DETECTED,"ax",%progbits
 363              		.align	2
 364              		.global	S3_DETECTED
 365              		.thumb
 366              		.thumb_func
 367              		.type	S3_DETECTED, %function
 368              	S3_DETECTED:
 369              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 370              		.loc 1 95 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 0000 80B4     		push	{r7}
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 380              		.loc 1 97 0
 381 0004 034B     		ldr	r3, .L7
 382 0006 0122     		movs	r2, #1
 383 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 384              		.loc 1 99 0
 385 000a 00BF     		nop
 386 000c BD46     		mov	sp, r7
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 000e 80BC     		pop	{r7}
 390              		.cfi_restore 7
 391              		.cfi_def_cfa_offset 0
 392 0010 7047     		bx	lr
 393              	.L8:
 394 0012 00BF     		.align	2
 395              	.L7:
 396 0014 00000000 		.word	s3
 397              		.cfi_endproc
 398              	.LFE65:
 399              		.size	S3_DETECTED, .-S3_DETECTED
 400              		.section	.text.S4_DETECTED,"ax",%progbits
 401              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 10


 402              		.global	S4_DETECTED
 403              		.thumb
 404              		.thumb_func
 405              		.type	S4_DETECTED, %function
 406              	S4_DETECTED:
 407              	.LFB66:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 408              		.loc 1 101 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 418              		.loc 1 103 0
 419 0004 034B     		ldr	r3, .L10
 420 0006 0122     		movs	r2, #1
 421 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 422              		.loc 1 105 0
 423 000a 00BF     		nop
 424 000c BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 000e 80BC     		pop	{r7}
 428              		.cfi_restore 7
 429              		.cfi_def_cfa_offset 0
 430 0010 7047     		bx	lr
 431              	.L11:
 432 0012 00BF     		.align	2
 433              	.L10:
 434 0014 00000000 		.word	s4
 435              		.cfi_endproc
 436              	.LFE66:
 437              		.size	S4_DETECTED, .-S4_DETECTED
 438              		.section	.text.S5_DETECTED,"ax",%progbits
 439              		.align	2
 440              		.global	S5_DETECTED
 441              		.thumb
 442              		.thumb_func
 443              		.type	S5_DETECTED, %function
 444              	S5_DETECTED:
 445              	.LFB67:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 446              		.loc 1 107 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 11


 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 456              		.loc 1 109 0
 457 0004 034B     		ldr	r3, .L13
 458 0006 0122     		movs	r2, #1
 459 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 460              		.loc 1 111 0
 461 000a 00BF     		nop
 462 000c BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 000e 80BC     		pop	{r7}
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0010 7047     		bx	lr
 469              	.L14:
 470 0012 00BF     		.align	2
 471              	.L13:
 472 0014 00000000 		.word	s5
 473              		.cfi_endproc
 474              	.LFE67:
 475              		.size	S5_DETECTED, .-S5_DETECTED
 476              		.section	.text.S6_DETECTED,"ax",%progbits
 477              		.align	2
 478              		.global	S6_DETECTED
 479              		.thumb
 480              		.thumb_func
 481              		.type	S6_DETECTED, %function
 482              	S6_DETECTED:
 483              	.LFB68:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 484              		.loc 1 113 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 494              		.loc 1 115 0
 495 0004 034B     		ldr	r3, .L16
 496 0006 0122     		movs	r2, #1
 497 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 12


 498              		.loc 1 117 0
 499 000a 00BF     		nop
 500 000c BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 000e 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 0010 7047     		bx	lr
 507              	.L17:
 508 0012 00BF     		.align	2
 509              	.L16:
 510 0014 00000000 		.word	s6
 511              		.cfi_endproc
 512              	.LFE68:
 513              		.size	S6_DETECTED, .-S6_DETECTED
 514              		.section	.text.TIMER_FINISH,"ax",%progbits
 515              		.align	2
 516              		.global	TIMER_FINISH
 517              		.thumb
 518              		.thumb_func
 519              		.type	TIMER_FINISH, %function
 520              	TIMER_FINISH:
 521              	.LFB69:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 522              		.loc 1 119 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526 0000 80B5     		push	{r7, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 7, -8
 529              		.cfi_offset 14, -4
 530 0002 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 120:main.c        ****     if (currentDirection == Stop) {
 532              		.loc 1 120 0
 533 0004 0A4B     		ldr	r3, .L21
 534 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535 0008 052B     		cmp	r3, #5
 536 000a 05D1     		bne	.L19
 121:main.c        ****         stopBuffer = stopBuffer + 1;
 537              		.loc 1 121 0
 538 000c 094B     		ldr	r3, .L21+4
 539 000e 1B68     		ldr	r3, [r3]
 540 0010 0133     		adds	r3, r3, #1
 541 0012 084A     		ldr	r2, .L21+4
 542 0014 1360     		str	r3, [r2]
 543 0016 02E0     		b	.L20
 544              	.L19:
 122:main.c        ****     } else {
 123:main.c        ****         stopBuffer = 0;
 545              		.loc 1 123 0
 546 0018 064B     		ldr	r3, .L21+4
 547 001a 0022     		movs	r2, #0
 548 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 13


 549              	.L20:
 124:main.c        ****     }
 125:main.c        ****     SetRobotMovement(); 
 550              		.loc 1 125 0
 551 001e FFF7FEFF 		bl	SetRobotMovement
 126:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 552              		.loc 1 126 0
 553 0022 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     Timer_LED_ReadStatusRegister();
 554              		.loc 1 127 0
 555 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 128:main.c        **** }
 556              		.loc 1 128 0
 557 002a 00BF     		nop
 558 002c 80BD     		pop	{r7, pc}
 559              	.L22:
 560 002e 00BF     		.align	2
 561              	.L21:
 562 0030 00000000 		.word	currentDirection
 563 0034 00000000 		.word	stopBuffer
 564              		.cfi_endproc
 565              	.LFE69:
 566              		.size	TIMER_FINISH, .-TIMER_FINISH
 567              		.section	.text.main,"ax",%progbits
 568              		.align	2
 569              		.global	main
 570              		.thumb
 571              		.thumb_func
 572              		.type	main, %function
 573              	main:
 574              	.LFB70:
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** int main() {
 575              		.loc 1 131 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 90B5     		push	{r4, r7, lr}
 580              		.cfi_def_cfa_offset 12
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 85B0     		sub	sp, sp, #20
 585              		.cfi_def_cfa_offset 32
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 588              		.loc 1 133 0
 589              		.syntax unified
 590              	@ 133 "main.c" 1
 591 0006 62B6     		CPSIE   i
 592              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 593              		.loc 1 134 0
 594              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 14


 595              		.syntax unified
 596 0008 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 597              		.loc 1 135 0
 598 000c FFF7FEFF 		bl	init
 136:main.c        ****     
 137:main.c        ****     instructionList = findPath(map, food_list, 0);
 599              		.loc 1 137 0
 600 0010 0022     		movs	r2, #0
 601 0012 2F49     		ldr	r1, .L27
 602 0014 2F48     		ldr	r0, .L27+4
 603 0016 FFF7FEFF 		bl	findPath
 604 001a 0246     		mov	r2, r0
 605 001c 2E4B     		ldr	r3, .L27+8
 606 001e 1A60     		str	r2, [r3]
 138:main.c        ****     numSteps = instructionsListLength();
 607              		.loc 1 138 0
 608 0020 FFF7FEFF 		bl	instructionsListLength
 609 0024 0346     		mov	r3, r0
 610 0026 1A46     		mov	r2, r3
 611 0028 2C4B     		ldr	r3, .L27+12
 612 002a 1A60     		str	r2, [r3]
 139:main.c        ****     
 140:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 613              		.loc 1 140 0
 614 002c 2B4B     		ldr	r3, .L27+12
 615 002e 1968     		ldr	r1, [r3]
 616 0030 294B     		ldr	r3, .L27+8
 617 0032 1A68     		ldr	r2, [r3]
 618 0034 2A4C     		ldr	r4, .L27+16
 619 0036 3B46     		mov	r3, r7
 620 0038 1846     		mov	r0, r3
 621 003a FFF7FEFF 		bl	GetInstructionAtIndex
 622 003e 3B46     		mov	r3, r7
 623 0040 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 624 0042 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 141:main.c        ****     
 142:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 625              		.loc 1 142 0
 626 0046 244B     		ldr	r3, .L27+8
 627 0048 1A68     		ldr	r2, [r3]
 628 004a 264B     		ldr	r3, .L27+20
 629 004c 1B68     		ldr	r3, [r3]
 630 004e 1B01     		lsls	r3, r3, #4
 631 0050 1344     		add	r3, r3, r2
 632 0052 5B68     		ldr	r3, [r3, #4]
 633 0054 DAB2     		uxtb	r2, r3
 634 0056 244B     		ldr	r3, .L27+24
 635 0058 1A70     		strb	r2, [r3]
 143:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 636              		.loc 1 143 0
 637 005a 1F4B     		ldr	r3, .L27+8
 638 005c 1A68     		ldr	r2, [r3]
 639 005e 214B     		ldr	r3, .L27+20
 640 0060 1B68     		ldr	r3, [r3]
 641 0062 1B01     		lsls	r3, r3, #4
 642 0064 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 15


 643 0066 9B68     		ldr	r3, [r3, #8]
 644 0068 DAB2     		uxtb	r2, r3
 645 006a 204B     		ldr	r3, .L27+28
 646 006c 1A70     		strb	r2, [r3]
 144:main.c        ****     
 145:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 647              		.loc 1 145 0
 648 006e 2048     		ldr	r0, .L27+32
 649 0070 FFF7FEFF 		bl	isr_speed_StartEx
 146:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 650              		.loc 1 146 0
 651 0074 1F48     		ldr	r0, .L27+36
 652 0076 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 147:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 653              		.loc 1 147 0
 654 007a 1F48     		ldr	r0, .L27+40
 655 007c FFF7FEFF 		bl	S3_detected_StartEx
 148:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 656              		.loc 1 148 0
 657 0080 1E48     		ldr	r0, .L27+44
 658 0082 FFF7FEFF 		bl	S4_detected_StartEx
 149:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 659              		.loc 1 149 0
 660 0086 1E48     		ldr	r0, .L27+48
 661 0088 FFF7FEFF 		bl	S5_detected_StartEx
 150:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 662              		.loc 1 150 0
 663 008c 1D48     		ldr	r0, .L27+52
 664 008e FFF7FEFF 		bl	S6_detected_StartEx
 151:main.c        ****     Timer_LED_Start();
 665              		.loc 1 151 0
 666 0092 FFF7FEFF 		bl	Timer_LED_Start
 152:main.c        **** 
 153:main.c        ****     
 154:main.c        **** // ------USB SETUP ----------------    
 155:main.c        **** #ifdef USE_USB    
 156:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 667              		.loc 1 156 0
 668 0096 0121     		movs	r1, #1
 669 0098 0020     		movs	r0, #0
 670 009a FFF7FEFF 		bl	USBUART_Start
 157:main.c        **** #endif        
 158:main.c        ****     RF_BT_SELECT_Write(0);
 671              		.loc 1 158 0
 672 009e 0020     		movs	r0, #0
 673 00a0 FFF7FEFF 		bl	RF_BT_SELECT_Write
 674              	.L26:
 159:main.c        ****     
 160:main.c        ****     //usbPutString("Initialised UART");
 161:main.c        ****     for(;;)
 162:main.c        ****     {
 163:main.c        ****         if(timerInt == 1) {
 675              		.loc 1 163 0
 676 00a4 184B     		ldr	r3, .L27+56
 677 00a6 1B68     		ldr	r3, [r3]
 678 00a8 012B     		cmp	r3, #1
 679 00aa 08D1     		bne	.L24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 16


 164:main.c        ****             timerInt = 0;
 680              		.loc 1 164 0
 681 00ac 164B     		ldr	r3, .L27+56
 682 00ae 0022     		movs	r2, #0
 683 00b0 1A60     		str	r2, [r3]
 165:main.c        ****             // calculate RPM of M2
 166:main.c        ****             quadCountToRPM(quadDec2Count);
 684              		.loc 1 166 0
 685 00b2 164B     		ldr	r3, .L27+60
 686 00b4 1B68     		ldr	r3, [r3]
 687 00b6 9BB2     		uxth	r3, r3
 688 00b8 1846     		mov	r0, r3
 689 00ba FFF7FEFF 		bl	quadCountToRPM
 690              	.L24:
 167:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 168:main.c        ****             //usbPutString(buffer);
 169:main.c        ****             //usbPutString(" ");
 170:main.c        ****         }
 171:main.c        ****         //handle_usb();
 172:main.c        ****         if (flag_KB_string == 1)
 691              		.loc 1 172 0
 692 00be 144B     		ldr	r3, .L27+64
 693 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 694 00c2 012B     		cmp	r3, #1
 695 00c4 EED1     		bne	.L26
 173:main.c        ****         {
 174:main.c        ****             //usbPutString("Total Distance: ");
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             flag_KB_string = 0;
 696              		.loc 1 177 0
 697 00c6 124B     		ldr	r3, .L27+64
 698 00c8 0022     		movs	r2, #0
 699 00ca 1A70     		strb	r2, [r3]
 178:main.c        ****         }           
 179:main.c        ****     }
 700              		.loc 1 179 0
 701 00cc EAE7     		b	.L26
 702              	.L28:
 703 00ce 00BF     		.align	2
 704              	.L27:
 705 00d0 00000000 		.word	food_list
 706 00d4 00000000 		.word	map
 707 00d8 00000000 		.word	instructionList
 708 00dc 00000000 		.word	numSteps
 709 00e0 00000000 		.word	currentInstruction
 710 00e4 14000000 		.word	instructionIndex
 711 00e8 3C000000 		.word	currentIgnoreL
 712 00ec 45000000 		.word	currentIgnoreR
 713 00f0 00000000 		.word	speedTimer
 714 00f4 00000000 		.word	TIMER_FINISH
 715 00f8 00000000 		.word	S3_DETECTED
 716 00fc 00000000 		.word	S4_DETECTED
 717 0100 00000000 		.word	S5_DETECTED
 718 0104 00000000 		.word	S6_DETECTED
 719 0108 00000000 		.word	timerInt
 720 010c 00000000 		.word	quadDec2Count
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 17


 721 0110 00000000 		.word	flag_KB_string
 722              		.cfi_endproc
 723              	.LFE70:
 724              		.size	main, .-main
 725              		.global	__aeabi_fmul
 726              		.global	__aeabi_f2iz
 727              		.section	.text.quadCountToRPM,"ax",%progbits
 728              		.align	2
 729              		.global	quadCountToRPM
 730              		.thumb
 731              		.thumb_func
 732              		.type	quadCountToRPM, %function
 733              	quadCountToRPM:
 734              	.LFB71:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count) {
 735              		.loc 1 185 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 16
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 90B5     		push	{r4, r7, lr}
 740              		.cfi_def_cfa_offset 12
 741              		.cfi_offset 4, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 85B0     		sub	sp, sp, #20
 745              		.cfi_def_cfa_offset 32
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 0346     		mov	r3, r0
 749 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 186:main.c        ****     float cps = count/57.00;
 750              		.loc 1 186 0
 751 000a FB88     		ldrh	r3, [r7, #6]
 752 000c 1846     		mov	r0, r3
 753 000e FFF7FEFF 		bl	__aeabi_i2d
 754 0012 4FF00002 		mov	r2, #0
 755 0016 0D4B     		ldr	r3, .L31
 756 0018 FFF7FEFF 		bl	__aeabi_ddiv
 757 001c 0346     		mov	r3, r0
 758 001e 0C46     		mov	r4, r1
 759 0020 1846     		mov	r0, r3
 760 0022 2146     		mov	r1, r4
 761 0024 FFF7FEFF 		bl	__aeabi_d2f
 762 0028 0346     		mov	r3, r0
 763 002a FB60     		str	r3, [r7, #12]	@ float
 187:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 764              		.loc 1 187 0
 765 002c 0849     		ldr	r1, .L31+4
 766 002e F868     		ldr	r0, [r7, #12]	@ float
 767 0030 FFF7FEFF 		bl	__aeabi_fmul
 768 0034 0346     		mov	r3, r0
 769 0036 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 18


 770 0038 FFF7FEFF 		bl	__aeabi_f2iz
 771 003c 0346     		mov	r3, r0
 772 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 188:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 189:main.c        ****     return rpm;
 773              		.loc 1 189 0
 774 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 190:main.c        ****     //usbPutString(buffer);
 191:main.c        ****     //usbPutString("rpm ");
 192:main.c        **** }
 775              		.loc 1 192 0
 776 0044 1846     		mov	r0, r3
 777 0046 1437     		adds	r7, r7, #20
 778              		.cfi_def_cfa_offset 12
 779 0048 BD46     		mov	sp, r7
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 004a 90BD     		pop	{r4, r7, pc}
 783              	.L32:
 784              		.align	2
 785              	.L31:
 786 004c 00804C40 		.word	1078755328
 787 0050 00007041 		.word	1097859072
 788              		.cfi_endproc
 789              	.LFE71:
 790              		.size	quadCountToRPM, .-quadCountToRPM
 791              		.section	.text.ResetSensorFlags,"ax",%progbits
 792              		.align	2
 793              		.global	ResetSensorFlags
 794              		.thumb
 795              		.thumb_func
 796              		.type	ResetSensorFlags, %function
 797              	ResetSensorFlags:
 798              	.LFB72:
 193:main.c        **** 
 194:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 195:main.c        **** void ResetSensorFlags() {
 799              		.loc 1 195 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 196:main.c        ****     s3 = 0;
 809              		.loc 1 196 0
 810 0004 074B     		ldr	r3, .L34
 811 0006 0022     		movs	r2, #0
 812 0008 1A70     		strb	r2, [r3]
 197:main.c        ****     s4 = 0;
 813              		.loc 1 197 0
 814 000a 074B     		ldr	r3, .L34+4
 815 000c 0022     		movs	r2, #0
 816 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 19


 198:main.c        ****     s5 = 0;
 817              		.loc 1 198 0
 818 0010 064B     		ldr	r3, .L34+8
 819 0012 0022     		movs	r2, #0
 820 0014 1A70     		strb	r2, [r3]
 199:main.c        ****     s6 = 0;
 821              		.loc 1 199 0
 822 0016 064B     		ldr	r3, .L34+12
 823 0018 0022     		movs	r2, #0
 824 001a 1A70     		strb	r2, [r3]
 200:main.c        **** }
 825              		.loc 1 200 0
 826 001c 00BF     		nop
 827 001e BD46     		mov	sp, r7
 828              		.cfi_def_cfa_register 13
 829              		@ sp needed
 830 0020 80BC     		pop	{r7}
 831              		.cfi_restore 7
 832              		.cfi_def_cfa_offset 0
 833 0022 7047     		bx	lr
 834              	.L35:
 835              		.align	2
 836              	.L34:
 837 0024 00000000 		.word	s3
 838 0028 00000000 		.word	s4
 839 002c 00000000 		.word	s5
 840 0030 00000000 		.word	s6
 841              		.cfi_endproc
 842              	.LFE72:
 843              		.size	ResetSensorFlags, .-ResetSensorFlags
 844              		.global	xBlocksize
 845              		.data
 846 0046 0000     		.align	2
 847              		.type	xBlocksize, %object
 848              		.size	xBlocksize, 4
 849              	xBlocksize:
 850 0048 0000F442 		.word	1123287040
 851              		.global	yBlocksize
 852              		.align	2
 853              		.type	yBlocksize, %object
 854              		.size	yBlocksize, 4
 855              	yBlocksize:
 856 004c 0000A042 		.word	1117782016
 857              		.global	currentRow
 858              		.type	currentRow, %object
 859              		.size	currentRow, 1
 860              	currentRow:
 861 0050 01       		.byte	1
 862              		.global	currentCol
 863              		.type	currentCol, %object
 864              		.size	currentCol, 1
 865              	currentCol:
 866 0051 01       		.byte	1
 867              		.global	stoppedAfterTurn
 868              		.bss
 869              		.type	stoppedAfterTurn, %object
 870              		.size	stoppedAfterTurn, 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 20


 871              	stoppedAfterTurn:
 872 0048 00       		.space	1
 873              		.global	ignoreSensor
 874              		.type	ignoreSensor, %object
 875              		.size	ignoreSensor, 1
 876              	ignoreSensor:
 877 0049 00       		.space	1
 878              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 879              		.align	2
 880              		.global	ForwardCourseCorrection
 881              		.thumb
 882              		.thumb_func
 883              		.type	ForwardCourseCorrection, %function
 884              	ForwardCourseCorrection:
 885              	.LFB73:
 201:main.c        **** 
 202:main.c        **** float xBlocksize = 122; // 122 mm
 203:main.c        **** float yBlocksize = 80; // 80 mm
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1;
 206:main.c        **** 
 207:main.c        **** uint8 stoppedAfterTurn = 0;
 208:main.c        **** uint8 ignoreSensor = 0;
 209:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 210:main.c        **** 
 211:main.c        **** enum RobotMovement ForwardCourseCorrection();
 212:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 886              		.loc 1 212 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 80B4     		push	{r7}
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 0002 00AF     		add	r7, sp, #0
 895              		.cfi_def_cfa_register 7
 213:main.c        ****     // if S5 and S6 are on black, move forward
 214:main.c        ****     if (!s5 && !s6) {
 896              		.loc 1 214 0
 897 0004 1C4B     		ldr	r3, .L44
 898 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 0008 002B     		cmp	r3, #0
 900 000a 0FD1     		bne	.L37
 901              		.loc 1 214 0 is_stmt 0 discriminator 1
 902 000c 1B4B     		ldr	r3, .L44+4
 903 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0010 002B     		cmp	r3, #0
 905 0012 0BD1     		bne	.L37
 215:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 906              		.loc 1 215 0 is_stmt 1
 907 0014 1A4B     		ldr	r3, .L44+8
 908 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 0018 032B     		cmp	r3, #3
 910 001a 01D0     		beq	.L38
 216:main.c        ****             return AdjustToTheLeft;
 911              		.loc 1 216 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 21


 912 001c 0323     		movs	r3, #3
 913 001e 26E0     		b	.L39
 914              	.L38:
 217:main.c        ****         }
 218:main.c        ****         if (previousDirection != AdjustToTheRight) {
 915              		.loc 1 218 0
 916 0020 174B     		ldr	r3, .L44+8
 917 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 918 0024 042B     		cmp	r3, #4
 919 0026 01D0     		beq	.L37
 219:main.c        ****             return AdjustToTheRight;    
 920              		.loc 1 219 0
 921 0028 0423     		movs	r3, #4
 922 002a 20E0     		b	.L39
 923              	.L37:
 220:main.c        ****         }
 221:main.c        ****     }
 222:main.c        ****     
 223:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 224:main.c        ****     if (s5 && s6) {
 924              		.loc 1 224 0
 925 002c 124B     		ldr	r3, .L44
 926 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0030 002B     		cmp	r3, #0
 928 0032 0FD0     		beq	.L40
 929              		.loc 1 224 0 is_stmt 0 discriminator 1
 930 0034 114B     		ldr	r3, .L44+4
 931 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 932 0038 002B     		cmp	r3, #0
 933 003a 0BD0     		beq	.L40
 225:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 934              		.loc 1 225 0 is_stmt 1
 935 003c 104B     		ldr	r3, .L44+8
 936 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 0040 032B     		cmp	r3, #3
 938 0042 01D0     		beq	.L41
 226:main.c        ****             return AdjustToTheLeft;
 939              		.loc 1 226 0
 940 0044 0323     		movs	r3, #3
 941 0046 12E0     		b	.L39
 942              	.L41:
 227:main.c        ****         }
 228:main.c        ****         if (previousDirection != AdjustToTheRight) {
 943              		.loc 1 228 0
 944 0048 0D4B     		ldr	r3, .L44+8
 945 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 004c 042B     		cmp	r3, #4
 947 004e 01D0     		beq	.L40
 229:main.c        ****             return AdjustToTheRight;    
 948              		.loc 1 229 0
 949 0050 0423     		movs	r3, #4
 950 0052 0CE0     		b	.L39
 951              	.L40:
 230:main.c        ****         }
 231:main.c        ****     }
 232:main.c        **** 
 233:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 22


 234:main.c        ****     if (s5) {
 952              		.loc 1 234 0
 953 0054 084B     		ldr	r3, .L44
 954 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 955 0058 002B     		cmp	r3, #0
 956 005a 01D0     		beq	.L42
 235:main.c        ****         return AdjustToTheRight;    
 957              		.loc 1 235 0
 958 005c 0423     		movs	r3, #4
 959 005e 06E0     		b	.L39
 960              	.L42:
 236:main.c        ****     }
 237:main.c        ****     if (s6) {
 961              		.loc 1 237 0
 962 0060 064B     		ldr	r3, .L44+4
 963 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 0064 002B     		cmp	r3, #0
 965 0066 01D0     		beq	.L43
 238:main.c        ****         return AdjustToTheLeft;    
 966              		.loc 1 238 0
 967 0068 0323     		movs	r3, #3
 968 006a 00E0     		b	.L39
 969              	.L43:
 239:main.c        ****     }
 240:main.c        ****    
 241:main.c        ****     // We should never actually get to this point
 242:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 243:main.c        ****     return Stop;
 970              		.loc 1 243 0
 971 006c 0523     		movs	r3, #5
 972              	.L39:
 244:main.c        **** }
 973              		.loc 1 244 0
 974 006e 1846     		mov	r0, r3
 975 0070 BD46     		mov	sp, r7
 976              		.cfi_def_cfa_register 13
 977              		@ sp needed
 978 0072 80BC     		pop	{r7}
 979              		.cfi_restore 7
 980              		.cfi_def_cfa_offset 0
 981 0074 7047     		bx	lr
 982              	.L45:
 983 0076 00BF     		.align	2
 984              	.L44:
 985 0078 00000000 		.word	s5
 986 007c 00000000 		.word	s6
 987 0080 00000000 		.word	previousDirection
 988              		.cfi_endproc
 989              	.LFE73:
 990              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 991              		.global	lastDirectionAfter180
 992              		.data
 993              		.type	lastDirectionAfter180, %object
 994              		.size	lastDirectionAfter180, 1
 995              	lastDirectionAfter180:
 996 0052 06       		.byte	6
 997              		.section	.text.SpinCourseCorrection,"ax",%progbits
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 23


 998              		.align	2
 999              		.global	SpinCourseCorrection
 1000              		.thumb
 1001              		.thumb_func
 1002              		.type	SpinCourseCorrection, %function
 1003              	SpinCourseCorrection:
 1004              	.LFB74:
 245:main.c        **** 
 246:main.c        **** enum RobotMovement SpinCourseCorrection();
 247:main.c        **** 
 248:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 249:main.c        **** 
 250:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1005              		.loc 1 250 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 1, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010 0000 80B4     		push	{r7}
 1011              		.cfi_def_cfa_offset 4
 1012              		.cfi_offset 7, -4
 1013 0002 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 251:main.c        ****     // Set first iteration flag.
 252:main.c        ****     if (!spinCourseCorrectionStarted) {
 1015              		.loc 1 252 0
 1016 0004 184B     		ldr	r3, .L53
 1017 0006 1B78     		ldrb	r3, [r3]
 1018 0008 DBB2     		uxtb	r3, r3
 1019 000a 002B     		cmp	r3, #0
 1020 000c 06D1     		bne	.L47
 253:main.c        ****         spinCourseCorrectionStarted = 1;    
 1021              		.loc 1 253 0
 1022 000e 164B     		ldr	r3, .L53
 1023 0010 0122     		movs	r2, #1
 1024 0012 1A70     		strb	r2, [r3]
 254:main.c        ****         lastDirectionAfter180 = currentDirection;
 1025              		.loc 1 254 0
 1026 0014 154B     		ldr	r3, .L53+4
 1027 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1028 0018 154B     		ldr	r3, .L53+8
 1029 001a 1A70     		strb	r2, [r3]
 1030              	.L47:
 255:main.c        ****     }
 256:main.c        ****     
 257:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 258:main.c        ****     if (s5 && s6) {
 1031              		.loc 1 258 0
 1032 001c 154B     		ldr	r3, .L53+12
 1033 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1034 0020 002B     		cmp	r3, #0
 1035 0022 0FD0     		beq	.L48
 1036              		.loc 1 258 0 is_stmt 0 discriminator 1
 1037 0024 144B     		ldr	r3, .L53+16
 1038 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1039 0028 002B     		cmp	r3, #0
 1040 002a 0BD0     		beq	.L48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 24


 259:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1041              		.loc 1 259 0 is_stmt 1
 1042 002c 104B     		ldr	r3, .L53+8
 1043 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0030 022B     		cmp	r3, #2
 1045 0032 01D0     		beq	.L49
 260:main.c        ****             return TurnLeft;
 1046              		.loc 1 260 0
 1047 0034 0223     		movs	r3, #2
 1048 0036 12E0     		b	.L50
 1049              	.L49:
 261:main.c        ****         }
 262:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1050              		.loc 1 262 0
 1051 0038 0D4B     		ldr	r3, .L53+8
 1052 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 003c 012B     		cmp	r3, #1
 1054 003e 01D0     		beq	.L48
 263:main.c        ****             return TurnRight;    
 1055              		.loc 1 263 0
 1056 0040 0123     		movs	r3, #1
 1057 0042 0CE0     		b	.L50
 1058              	.L48:
 264:main.c        ****         }
 265:main.c        ****     }
 266:main.c        **** 
 267:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 268:main.c        ****     if (s5) {
 1059              		.loc 1 268 0
 1060 0044 0B4B     		ldr	r3, .L53+12
 1061 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 0048 002B     		cmp	r3, #0
 1063 004a 01D0     		beq	.L51
 269:main.c        ****         return TurnRight;    
 1064              		.loc 1 269 0
 1065 004c 0123     		movs	r3, #1
 1066 004e 06E0     		b	.L50
 1067              	.L51:
 270:main.c        ****     }
 271:main.c        ****     if (s6) {
 1068              		.loc 1 271 0
 1069 0050 094B     		ldr	r3, .L53+16
 1070 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1071 0054 002B     		cmp	r3, #0
 1072 0056 01D0     		beq	.L52
 272:main.c        ****         return TurnLeft;    
 1073              		.loc 1 272 0
 1074 0058 0223     		movs	r3, #2
 1075 005a 00E0     		b	.L50
 1076              	.L52:
 273:main.c        ****     }
 274:main.c        ****    
 275:main.c        ****     // We should never actually get to this point
 276:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 277:main.c        ****     return Stop;
 1077              		.loc 1 277 0
 1078 005c 0523     		movs	r3, #5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 25


 1079              	.L50:
 278:main.c        **** }
 1080              		.loc 1 278 0
 1081 005e 1846     		mov	r0, r3
 1082 0060 BD46     		mov	sp, r7
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0062 80BC     		pop	{r7}
 1086              		.cfi_restore 7
 1087              		.cfi_def_cfa_offset 0
 1088 0064 7047     		bx	lr
 1089              	.L54:
 1090 0066 00BF     		.align	2
 1091              	.L53:
 1092 0068 3B000000 		.word	spinCourseCorrectionStarted
 1093 006c 00000000 		.word	currentDirection
 1094 0070 00000000 		.word	lastDirectionAfter180
 1095 0074 00000000 		.word	s5
 1096 0078 00000000 		.word	s6
 1097              		.cfi_endproc
 1098              	.LFE74:
 1099              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1100              		.global	__aeabi_fcmpge
 1101              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1102              		.align	2
 1103              		.global	GetMovementAccordingToInstruction
 1104              		.thumb
 1105              		.thumb_func
 1106              		.type	GetMovementAccordingToInstruction, %function
 1107              	GetMovementAccordingToInstruction:
 1108              	.LFB75:
 279:main.c        **** 
 280:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1109              		.loc 1 280 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 8
 1112              		@ frame_needed = 1, uses_anonymous_args = 0
 1113 0000 80B5     		push	{r7, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 7, -8
 1116              		.cfi_offset 14, -4
 1117 0002 82B0     		sub	sp, sp, #8
 1118              		.cfi_def_cfa_offset 16
 1119 0004 00AF     		add	r7, sp, #0
 1120              		.cfi_def_cfa_register 7
 281:main.c        ****     float blocksize;
 282:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 1121              		.loc 1 282 0
 1122 0006 9B4B     		ldr	r3, .L107
 1123 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 000a 002B     		cmp	r3, #0
 1125 000c 03D0     		beq	.L56
 1126              		.loc 1 282 0 is_stmt 0 discriminator 1
 1127 000e 994B     		ldr	r3, .L107
 1128 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1129 0012 012B     		cmp	r3, #1
 1130 0014 03D1     		bne	.L57
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 26


 1131              	.L56:
 283:main.c        ****         blocksize = yBlocksize;
 1132              		.loc 1 283 0 is_stmt 1
 1133 0016 984B     		ldr	r3, .L107+4
 1134 0018 1B68     		ldr	r3, [r3]	@ float
 1135 001a 7B60     		str	r3, [r7, #4]	@ float
 1136 001c 02E0     		b	.L58
 1137              	.L57:
 284:main.c        ****     } else {
 285:main.c        ****         blocksize = xBlocksize;
 1138              		.loc 1 285 0
 1139 001e 974B     		ldr	r3, .L107+8
 1140 0020 1B68     		ldr	r3, [r3]	@ float
 1141 0022 7B60     		str	r3, [r7, #4]	@ float
 1142              	.L58:
 286:main.c        ****     }
 287:main.c        ****     
 288:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 289:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 290:main.c        ****         // OR an EVENT happens in the current instruction
 291:main.c        ****         // e.g. CurrentInstruction: GoForward 
 292:main.c        ****         //      S3 on BLACK
 293:main.c        ****         //      Check Ignore Count
 294:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 295:main.c        ****     
 296:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1143              		.loc 1 296 0
 1144 0024 964B     		ldr	r3, .L107+12
 1145 0026 1B78     		ldrb	r3, [r3]
 1146 0028 FB70     		strb	r3, [r7, #3]
 297:main.c        ****     
 298:main.c        ****     switch (currentInstructionDirection) {
 1147              		.loc 1 298 0
 1148 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1149 002c 052B     		cmp	r3, #5
 1150 002e 00F2F081 		bhi	.L59
 1151 0032 01A2     		adr	r2, .L61
 1152 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1153              		.p2align 2
 1154              	.L61:
 1155 0038 51000000 		.word	.L60+1
 1156 003c 13010000 		.word	.L62+1
 1157 0040 01020000 		.word	.L63+1
 1158 0044 A5030000 		.word	.L64+1
 1159 0048 2F030000 		.word	.L65+1
 1160 004c 7F030000 		.word	.L66+1
 1161              		.p2align 1
 1162              	.L60:
 299:main.c        ****         case GoForward:
 300:main.c        ****             if(currentDirection == Stop) {
 1163              		.loc 1 300 0
 1164 0050 8C4B     		ldr	r3, .L107+16
 1165 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 0054 052B     		cmp	r3, #5
 1167 0056 08D1     		bne	.L67
 301:main.c        ****                 if(stopBuffer <= 50) {
 1168              		.loc 1 301 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 27


 1169 0058 8B4B     		ldr	r3, .L107+20
 1170 005a 1B68     		ldr	r3, [r3]
 1171 005c 322B     		cmp	r3, #50
 1172 005e 01D8     		bhi	.L68
 302:main.c        ****                     return Stop;
 1173              		.loc 1 302 0
 1174 0060 0523     		movs	r3, #5
 1175 0062 D7E1     		b	.L69
 1176              	.L68:
 303:main.c        ****                 } else {
 304:main.c        ****                     stopBuffer = 100;
 1177              		.loc 1 304 0
 1178 0064 884B     		ldr	r3, .L107+20
 1179 0066 6422     		movs	r2, #100
 1180 0068 1A60     		str	r2, [r3]
 1181              	.L67:
 305:main.c        ****                 }
 306:main.c        ****             }
 307:main.c        ****             if (s3) {
 1182              		.loc 1 307 0
 1183 006a 884B     		ldr	r3, .L107+24
 1184 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1185 006e 002B     		cmp	r3, #0
 1186 0070 02D0     		beq	.L70
 308:main.c        ****                 leftStatusFlag = 1;
 1187              		.loc 1 308 0
 1188 0072 874B     		ldr	r3, .L107+28
 1189 0074 0122     		movs	r2, #1
 1190 0076 1A70     		strb	r2, [r3]
 1191              	.L70:
 309:main.c        ****             }
 310:main.c        ****             
 311:main.c        ****             if (s4) {
 1192              		.loc 1 311 0
 1193 0078 864B     		ldr	r3, .L107+32
 1194 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 007c 002B     		cmp	r3, #0
 1196 007e 02D0     		beq	.L71
 312:main.c        ****                 rightStatusFlag = 1;
 1197              		.loc 1 312 0
 1198 0080 854B     		ldr	r3, .L107+36
 1199 0082 0122     		movs	r2, #1
 1200 0084 1A70     		strb	r2, [r3]
 1201              	.L71:
 313:main.c        ****             }
 314:main.c        ****             
 315:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 316:main.c        ****             if (leftStatusFlag) {
 1202              		.loc 1 316 0
 1203 0086 824B     		ldr	r3, .L107+28
 1204 0088 1B78     		ldrb	r3, [r3]
 1205 008a DBB2     		uxtb	r3, r3
 1206 008c 002B     		cmp	r3, #0
 1207 008e 1BD0     		beq	.L72
 317:main.c        ****                 if (!s3) {
 1208              		.loc 1 317 0
 1209 0090 7E4B     		ldr	r3, .L107+24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 28


 1210 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 0094 002B     		cmp	r3, #0
 1212 0096 17D1     		bne	.L72
 318:main.c        ****                     leftStatusFlag = 0;    
 1213              		.loc 1 318 0
 1214 0098 7D4B     		ldr	r3, .L107+28
 1215 009a 0022     		movs	r2, #0
 1216 009c 1A70     		strb	r2, [r3]
 319:main.c        ****                     if (currentIgnoreL == 0) {
 1217              		.loc 1 319 0
 1218 009e 7F4B     		ldr	r3, .L107+40
 1219 00a0 1B78     		ldrb	r3, [r3]
 1220 00a2 DBB2     		uxtb	r3, r3
 1221 00a4 002B     		cmp	r3, #0
 1222 00a6 03D1     		bne	.L73
 320:main.c        ****                         MoveToNextInstruction();
 1223              		.loc 1 320 0
 1224 00a8 FFF7FEFF 		bl	MoveToNextInstruction
 321:main.c        ****                         return Stop;
 1225              		.loc 1 321 0
 1226 00ac 0523     		movs	r3, #5
 1227 00ae B1E1     		b	.L69
 1228              	.L73:
 322:main.c        ****                     }
 323:main.c        ****                     if (currentIgnoreL > 0) {
 1229              		.loc 1 323 0
 1230 00b0 7A4B     		ldr	r3, .L107+40
 1231 00b2 1B78     		ldrb	r3, [r3]
 1232 00b4 DBB2     		uxtb	r3, r3
 1233 00b6 002B     		cmp	r3, #0
 1234 00b8 06D0     		beq	.L72
 324:main.c        ****                         currentIgnoreL--;    
 1235              		.loc 1 324 0
 1236 00ba 784B     		ldr	r3, .L107+40
 1237 00bc 1B78     		ldrb	r3, [r3]
 1238 00be DBB2     		uxtb	r3, r3
 1239 00c0 013B     		subs	r3, r3, #1
 1240 00c2 DAB2     		uxtb	r2, r3
 1241 00c4 754B     		ldr	r3, .L107+40
 1242 00c6 1A70     		strb	r2, [r3]
 1243              	.L72:
 325:main.c        ****                     }
 326:main.c        ****                 }
 327:main.c        ****             }
 328:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 329:main.c        ****             if (rightStatusFlag) {
 1244              		.loc 1 329 0
 1245 00c8 734B     		ldr	r3, .L107+36
 1246 00ca 1B78     		ldrb	r3, [r3]
 1247 00cc DBB2     		uxtb	r3, r3
 1248 00ce 002B     		cmp	r3, #0
 1249 00d0 1BD0     		beq	.L74
 330:main.c        ****                 if (!s4) {
 1250              		.loc 1 330 0
 1251 00d2 704B     		ldr	r3, .L107+32
 1252 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1253 00d6 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 29


 1254 00d8 17D1     		bne	.L74
 331:main.c        ****                     rightStatusFlag = 0;
 1255              		.loc 1 331 0
 1256 00da 6F4B     		ldr	r3, .L107+36
 1257 00dc 0022     		movs	r2, #0
 1258 00de 1A70     		strb	r2, [r3]
 332:main.c        ****                     if (currentIgnoreR == 0) {
 1259              		.loc 1 332 0
 1260 00e0 6F4B     		ldr	r3, .L107+44
 1261 00e2 1B78     		ldrb	r3, [r3]
 1262 00e4 DBB2     		uxtb	r3, r3
 1263 00e6 002B     		cmp	r3, #0
 1264 00e8 03D1     		bne	.L75
 333:main.c        ****                         MoveToNextInstruction();
 1265              		.loc 1 333 0
 1266 00ea FFF7FEFF 		bl	MoveToNextInstruction
 334:main.c        ****                         return Stop;
 1267              		.loc 1 334 0
 1268 00ee 0523     		movs	r3, #5
 1269 00f0 90E1     		b	.L69
 1270              	.L75:
 335:main.c        ****                     }
 336:main.c        ****                     if (currentIgnoreR > 0) {
 1271              		.loc 1 336 0
 1272 00f2 6B4B     		ldr	r3, .L107+44
 1273 00f4 1B78     		ldrb	r3, [r3]
 1274 00f6 DBB2     		uxtb	r3, r3
 1275 00f8 002B     		cmp	r3, #0
 1276 00fa 06D0     		beq	.L74
 337:main.c        ****                         currentIgnoreR--;    
 1277              		.loc 1 337 0
 1278 00fc 684B     		ldr	r3, .L107+44
 1279 00fe 1B78     		ldrb	r3, [r3]
 1280 0100 DBB2     		uxtb	r3, r3
 1281 0102 013B     		subs	r3, r3, #1
 1282 0104 DAB2     		uxtb	r2, r3
 1283 0106 664B     		ldr	r3, .L107+44
 1284 0108 1A70     		strb	r2, [r3]
 1285              	.L74:
 338:main.c        ****                     }
 339:main.c        ****                 }
 340:main.c        ****             }
 341:main.c        ****           
 342:main.c        ****             return ForwardCourseCorrection();
 1286              		.loc 1 342 0
 1287 010a FFF7FEFF 		bl	ForwardCourseCorrection
 1288 010e 0346     		mov	r3, r0
 1289 0110 80E1     		b	.L69
 1290              	.L62:
 343:main.c        ****             break;
 344:main.c        ****         case waitForLeftTurn:
 345:main.c        ****             // continue moving forward until s3 goes on black
 346:main.c        ****             // if we are turning left already
 347:main.c        ****                 // wait until s5 || s6 are on black
 348:main.c        ****                 // return stop
 349:main.c        **** 
 350:main.c        ****             if (turnFinishedFlag) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 30


 1291              		.loc 1 350 0
 1292 0112 644B     		ldr	r3, .L107+48
 1293 0114 1B78     		ldrb	r3, [r3]
 1294 0116 DBB2     		uxtb	r3, r3
 1295 0118 002B     		cmp	r3, #0
 1296 011a 26D0     		beq	.L76
 351:main.c        ****                 if (!s3 && !s5 && !s6) {
 1297              		.loc 1 351 0
 1298 011c 5B4B     		ldr	r3, .L107+24
 1299 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1300 0120 002B     		cmp	r3, #0
 1301 0122 0BD1     		bne	.L77
 1302              		.loc 1 351 0 is_stmt 0 discriminator 1
 1303 0124 604B     		ldr	r3, .L107+52
 1304 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1305 0128 002B     		cmp	r3, #0
 1306 012a 07D1     		bne	.L77
 1307              		.loc 1 351 0 discriminator 2
 1308 012c 5F4B     		ldr	r3, .L107+56
 1309 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0130 002B     		cmp	r3, #0
 1311 0132 03D1     		bne	.L77
 352:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 353:main.c        ****                     return ForwardCourseCorrection();
 1312              		.loc 1 353 0 is_stmt 1
 1313 0134 FFF7FEFF 		bl	ForwardCourseCorrection
 1314 0138 0346     		mov	r3, r0
 1315 013a 6BE1     		b	.L69
 1316              	.L77:
 354:main.c        ****                 }
 355:main.c        ****                 if (s5 || s6) {
 1317              		.loc 1 355 0
 1318 013c 5A4B     		ldr	r3, .L107+52
 1319 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1320 0140 002B     		cmp	r3, #0
 1321 0142 03D1     		bne	.L78
 1322              		.loc 1 355 0 is_stmt 0 discriminator 1
 1323 0144 594B     		ldr	r3, .L107+56
 1324 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0148 002B     		cmp	r3, #0
 1326 014a 03D0     		beq	.L79
 1327              	.L78:
 356:main.c        ****                     return SpinCourseCorrection();
 1328              		.loc 1 356 0 is_stmt 1
 1329 014c FFF7FEFF 		bl	SpinCourseCorrection
 1330 0150 0346     		mov	r3, r0
 1331 0152 5FE1     		b	.L69
 1332              	.L79:
 357:main.c        ****                 }
 358:main.c        ****                 if (s3) {
 1333              		.loc 1 358 0
 1334 0154 4D4B     		ldr	r3, .L107+24
 1335 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 0158 002B     		cmp	r3, #0
 1337 015a 06D0     		beq	.L76
 359:main.c        ****                     turnFinishedFlag = 0;
 1338              		.loc 1 359 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 31


 1339 015c 514B     		ldr	r3, .L107+48
 1340 015e 0022     		movs	r2, #0
 1341 0160 1A70     		strb	r2, [r3]
 360:main.c        ****                     MoveToNextInstruction();   
 1342              		.loc 1 360 0
 1343 0162 FFF7FEFF 		bl	MoveToNextInstruction
 361:main.c        ****                     return Stop;  
 1344              		.loc 1 361 0
 1345 0166 0523     		movs	r3, #5
 1346 0168 54E1     		b	.L69
 1347              	.L76:
 362:main.c        ****                 }
 363:main.c        ****                 
 364:main.c        ****                 /*
 365:main.c        ****                 if (s3) {
 366:main.c        ****                     turnFinishedFlag = 0;
 367:main.c        ****                     MoveToNextInstruction();    
 368:main.c        ****                     return Stop;
 369:main.c        ****                 }
 370:main.c        ****                 else {
 371:main.c        ****                     return ForwardCourseCorrection();        
 372:main.c        ****                 }
 373:main.c        ****                 */
 374:main.c        ****             }
 375:main.c        ****             
 376:main.c        ****             
 377:main.c        ****             if (currentDirection == Stop) {
 1348              		.loc 1 377 0
 1349 016a 464B     		ldr	r3, .L107+16
 1350 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 016e 052B     		cmp	r3, #5
 1352 0170 09D1     		bne	.L80
 378:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 379:main.c        ****                 if (stopBuffer <= 50) {
 1353              		.loc 1 379 0
 1354 0172 454B     		ldr	r3, .L107+20
 1355 0174 1B68     		ldr	r3, [r3]
 1356 0176 322B     		cmp	r3, #50
 1357 0178 01D8     		bhi	.L81
 380:main.c        ****                     return Stop;   
 1358              		.loc 1 380 0
 1359 017a 0523     		movs	r3, #5
 1360 017c 4AE1     		b	.L69
 1361              	.L81:
 381:main.c        ****                 }
 382:main.c        ****                 return ForwardCourseCorrection();
 1362              		.loc 1 382 0
 1363 017e FFF7FEFF 		bl	ForwardCourseCorrection
 1364 0182 0346     		mov	r3, r0
 1365 0184 46E1     		b	.L69
 1366              	.L80:
 383:main.c        ****             }
 384:main.c        ****          
 385:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 386:main.c        ****             if (currentDirection == TurnLeft) {
 1367              		.loc 1 386 0
 1368 0186 3F4B     		ldr	r3, .L107+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 32


 1369 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 018a 022B     		cmp	r3, #2
 1371 018c 2BD1     		bne	.L82
 387:main.c        ****                 // If turn started and we are still on black, continue turning
 388:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 389:main.c        ****                 if (turnStartedFlag) {
 1372              		.loc 1 389 0
 1373 018e 484B     		ldr	r3, .L107+60
 1374 0190 1B78     		ldrb	r3, [r3]
 1375 0192 DBB2     		uxtb	r3, r3
 1376 0194 002B     		cmp	r3, #0
 1377 0196 0ED0     		beq	.L83
 390:main.c        ****                     if (s3 && (s5 && s6)) {
 1378              		.loc 1 390 0
 1379 0198 3C4B     		ldr	r3, .L107+24
 1380 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 019c 002B     		cmp	r3, #0
 1382 019e 0AD0     		beq	.L83
 1383              		.loc 1 390 0 is_stmt 0 discriminator 1
 1384 01a0 414B     		ldr	r3, .L107+52
 1385 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 01a4 002B     		cmp	r3, #0
 1387 01a6 06D0     		beq	.L83
 1388              		.loc 1 390 0 discriminator 2
 1389 01a8 404B     		ldr	r3, .L107+56
 1390 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1391 01ac 002B     		cmp	r3, #0
 1392 01ae 02D0     		beq	.L83
 391:main.c        ****                         turnStartedFlag = 0;
 1393              		.loc 1 391 0 is_stmt 1
 1394 01b0 3F4B     		ldr	r3, .L107+60
 1395 01b2 0022     		movs	r2, #0
 1396 01b4 1A70     		strb	r2, [r3]
 1397              	.L83:
 392:main.c        ****                     }
 393:main.c        ****                 }
 394:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1398              		.loc 1 394 0
 1399 01b6 3E4B     		ldr	r3, .L107+60
 1400 01b8 1B78     		ldrb	r3, [r3]
 1401 01ba DBB2     		uxtb	r3, r3
 1402 01bc 002B     		cmp	r3, #0
 1403 01be 10D1     		bne	.L84
 1404              		.loc 1 394 0 is_stmt 0 discriminator 1
 1405 01c0 324B     		ldr	r3, .L107+24
 1406 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 01c4 002B     		cmp	r3, #0
 1408 01c6 0CD1     		bne	.L84
 1409              		.loc 1 394 0 discriminator 2
 1410 01c8 374B     		ldr	r3, .L107+52
 1411 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1412 01cc 002B     		cmp	r3, #0
 1413 01ce 08D1     		bne	.L84
 1414              		.loc 1 394 0 discriminator 3
 1415 01d0 364B     		ldr	r3, .L107+56
 1416 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 01d4 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 33


 1418 01d6 04D1     		bne	.L84
 395:main.c        ****                     turnFinishedFlag = 1;
 1419              		.loc 1 395 0 is_stmt 1
 1420 01d8 324B     		ldr	r3, .L107+48
 1421 01da 0122     		movs	r2, #1
 1422 01dc 1A70     		strb	r2, [r3]
 396:main.c        ****                     return ForwardAfterTurn;
 1423              		.loc 1 396 0
 1424 01de 0823     		movs	r3, #8
 1425 01e0 18E1     		b	.L69
 1426              	.L84:
 397:main.c        ****                 }
 398:main.c        ****                 else
 399:main.c        ****                 {
 400:main.c        ****                     return TurnLeft;
 1427              		.loc 1 400 0
 1428 01e2 0223     		movs	r3, #2
 1429 01e4 16E1     		b	.L69
 1430              	.L82:
 401:main.c        ****                 }
 402:main.c        ****             }
 403:main.c        ****             
 404:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 405:main.c        ****             if (!s3) {
 1431              		.loc 1 405 0
 1432 01e6 294B     		ldr	r3, .L107+24
 1433 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 01ea 002B     		cmp	r3, #0
 1435 01ec 04D1     		bne	.L85
 406:main.c        ****                 turnStartedFlag = 1;
 1436              		.loc 1 406 0
 1437 01ee 304B     		ldr	r3, .L107+60
 1438 01f0 0122     		movs	r2, #1
 1439 01f2 1A70     		strb	r2, [r3]
 407:main.c        ****                 return TurnLeft;
 1440              		.loc 1 407 0
 1441 01f4 0223     		movs	r3, #2
 1442 01f6 0DE1     		b	.L69
 1443              	.L85:
 408:main.c        ****             }
 409:main.c        ****             
 410:main.c        ****             // Otherwise, keep going forward
 411:main.c        ****             return ForwardCourseCorrection(); 
 1444              		.loc 1 411 0
 1445 01f8 FFF7FEFF 		bl	ForwardCourseCorrection
 1446 01fc 0346     		mov	r3, r0
 1447 01fe 09E1     		b	.L69
 1448              	.L63:
 412:main.c        ****             break;
 413:main.c        ****         case waitForRightTurn:
 414:main.c        ****             // continue moving forward until s4 goes on black
 415:main.c        ****             // if we are turning left already
 416:main.c        ****                 // wait until s5 || s6 are on black
 417:main.c        ****                 // return stop
 418:main.c        **** 
 419:main.c        ****             if (turnFinishedFlag) {
 1449              		.loc 1 419 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 34


 1450 0200 284B     		ldr	r3, .L107+48
 1451 0202 1B78     		ldrb	r3, [r3]
 1452 0204 DBB2     		uxtb	r3, r3
 1453 0206 002B     		cmp	r3, #0
 1454 0208 26D0     		beq	.L86
 420:main.c        ****                 if (!s4 && !s5 && !s6) {
 1455              		.loc 1 420 0
 1456 020a 224B     		ldr	r3, .L107+32
 1457 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 020e 002B     		cmp	r3, #0
 1459 0210 0BD1     		bne	.L87
 1460              		.loc 1 420 0 is_stmt 0 discriminator 1
 1461 0212 254B     		ldr	r3, .L107+52
 1462 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1463 0216 002B     		cmp	r3, #0
 1464 0218 07D1     		bne	.L87
 1465              		.loc 1 420 0 discriminator 2
 1466 021a 244B     		ldr	r3, .L107+56
 1467 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 021e 002B     		cmp	r3, #0
 1469 0220 03D1     		bne	.L87
 421:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 422:main.c        ****                     return ForwardCourseCorrection();
 1470              		.loc 1 422 0 is_stmt 1
 1471 0222 FFF7FEFF 		bl	ForwardCourseCorrection
 1472 0226 0346     		mov	r3, r0
 1473 0228 F4E0     		b	.L69
 1474              	.L87:
 423:main.c        ****                 }
 424:main.c        ****                 if (s5 || s6) {
 1475              		.loc 1 424 0
 1476 022a 1F4B     		ldr	r3, .L107+52
 1477 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 022e 002B     		cmp	r3, #0
 1479 0230 03D1     		bne	.L88
 1480              		.loc 1 424 0 is_stmt 0 discriminator 1
 1481 0232 1E4B     		ldr	r3, .L107+56
 1482 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1483 0236 002B     		cmp	r3, #0
 1484 0238 03D0     		beq	.L89
 1485              	.L88:
 425:main.c        ****                     return SpinCourseCorrection();
 1486              		.loc 1 425 0 is_stmt 1
 1487 023a FFF7FEFF 		bl	SpinCourseCorrection
 1488 023e 0346     		mov	r3, r0
 1489 0240 E8E0     		b	.L69
 1490              	.L89:
 426:main.c        ****                 }
 427:main.c        ****                 if (s4) {
 1491              		.loc 1 427 0
 1492 0242 144B     		ldr	r3, .L107+32
 1493 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1494 0246 002B     		cmp	r3, #0
 1495 0248 06D0     		beq	.L86
 428:main.c        ****                     turnFinishedFlag = 0;
 1496              		.loc 1 428 0
 1497 024a 164B     		ldr	r3, .L107+48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 35


 1498 024c 0022     		movs	r2, #0
 1499 024e 1A70     		strb	r2, [r3]
 429:main.c        ****                     MoveToNextInstruction();   
 1500              		.loc 1 429 0
 1501 0250 FFF7FEFF 		bl	MoveToNextInstruction
 430:main.c        ****                     return Stop;  
 1502              		.loc 1 430 0
 1503 0254 0523     		movs	r3, #5
 1504 0256 DDE0     		b	.L69
 1505              	.L86:
 431:main.c        ****                 }
 432:main.c        ****                 
 433:main.c        **** 
 434:main.c        ****                 /*
 435:main.c        ****                 if (s4) {
 436:main.c        ****                     turnFinishedFlag = 0;
 437:main.c        ****                     MoveToNextInstruction();   
 438:main.c        ****                     return Stop;
 439:main.c        ****                 }
 440:main.c        ****                 else {
 441:main.c        ****                     return ForwardCourseCorrection();        
 442:main.c        ****                 }*/
 443:main.c        ****                 
 444:main.c        ****             }
 445:main.c        ****             
 446:main.c        ****             
 447:main.c        ****             if (currentDirection == Stop) {
 1506              		.loc 1 447 0
 1507 0258 0A4B     		ldr	r3, .L107+16
 1508 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 025c 052B     		cmp	r3, #5
 1510 025e 29D1     		bne	.L90
 448:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 449:main.c        ****                 if (stopBuffer <= 50) {
 1511              		.loc 1 449 0
 1512 0260 094B     		ldr	r3, .L107+20
 1513 0262 1B68     		ldr	r3, [r3]
 1514 0264 322B     		cmp	r3, #50
 1515 0266 01D8     		bhi	.L91
 450:main.c        ****                     return Stop;   
 1516              		.loc 1 450 0
 1517 0268 0523     		movs	r3, #5
 1518 026a D3E0     		b	.L69
 1519              	.L91:
 451:main.c        ****                 }
 452:main.c        **** 
 453:main.c        ****                 return ForwardCourseCorrection();
 1520              		.loc 1 453 0
 1521 026c FFF7FEFF 		bl	ForwardCourseCorrection
 1522 0270 0346     		mov	r3, r0
 1523 0272 CFE0     		b	.L69
 1524              	.L108:
 1525              		.align	2
 1526              	.L107:
 1527 0274 00000000 		.word	currentRobotOrientation
 1528 0278 00000000 		.word	yBlocksize
 1529 027c 00000000 		.word	xBlocksize
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 36


 1530 0280 00000000 		.word	currentInstruction
 1531 0284 00000000 		.word	currentDirection
 1532 0288 00000000 		.word	stopBuffer
 1533 028c 00000000 		.word	s3
 1534 0290 39000000 		.word	leftStatusFlag
 1535 0294 00000000 		.word	s4
 1536 0298 3A000000 		.word	rightStatusFlag
 1537 029c 3C000000 		.word	currentIgnoreL
 1538 02a0 45000000 		.word	currentIgnoreR
 1539 02a4 35000000 		.word	turnFinishedFlag
 1540 02a8 00000000 		.word	s5
 1541 02ac 00000000 		.word	s6
 1542 02b0 34000000 		.word	turnStartedFlag
 1543              	.L90:
 454:main.c        ****             }
 455:main.c        ****                       
 456:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 457:main.c        ****             if (currentDirection == TurnRight) {
 1544              		.loc 1 457 0
 1545 02b4 594B     		ldr	r3, .L109
 1546 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 02b8 012B     		cmp	r3, #1
 1548 02ba 2BD1     		bne	.L92
 458:main.c        ****                 // If turn started and we are still on black, continue turning
 459:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 460:main.c        ****                 if (turnStartedFlag) {
 1549              		.loc 1 460 0
 1550 02bc 584B     		ldr	r3, .L109+4
 1551 02be 1B78     		ldrb	r3, [r3]
 1552 02c0 DBB2     		uxtb	r3, r3
 1553 02c2 002B     		cmp	r3, #0
 1554 02c4 0ED0     		beq	.L93
 461:main.c        ****                     if (s4 && (s5 && s6)) {
 1555              		.loc 1 461 0
 1556 02c6 574B     		ldr	r3, .L109+8
 1557 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1558 02ca 002B     		cmp	r3, #0
 1559 02cc 0AD0     		beq	.L93
 1560              		.loc 1 461 0 is_stmt 0 discriminator 1
 1561 02ce 564B     		ldr	r3, .L109+12
 1562 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1563 02d2 002B     		cmp	r3, #0
 1564 02d4 06D0     		beq	.L93
 1565              		.loc 1 461 0 discriminator 2
 1566 02d6 554B     		ldr	r3, .L109+16
 1567 02d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 02da 002B     		cmp	r3, #0
 1569 02dc 02D0     		beq	.L93
 462:main.c        ****                         turnStartedFlag = 0;
 1570              		.loc 1 462 0 is_stmt 1
 1571 02de 504B     		ldr	r3, .L109+4
 1572 02e0 0022     		movs	r2, #0
 1573 02e2 1A70     		strb	r2, [r3]
 1574              	.L93:
 463:main.c        ****                     }
 464:main.c        ****                 }
 465:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 37


 1575              		.loc 1 465 0
 1576 02e4 4E4B     		ldr	r3, .L109+4
 1577 02e6 1B78     		ldrb	r3, [r3]
 1578 02e8 DBB2     		uxtb	r3, r3
 1579 02ea 002B     		cmp	r3, #0
 1580 02ec 10D1     		bne	.L94
 1581              		.loc 1 465 0 is_stmt 0 discriminator 1
 1582 02ee 4D4B     		ldr	r3, .L109+8
 1583 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 02f2 002B     		cmp	r3, #0
 1585 02f4 0CD1     		bne	.L94
 1586              		.loc 1 465 0 discriminator 2
 1587 02f6 4C4B     		ldr	r3, .L109+12
 1588 02f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1589 02fa 002B     		cmp	r3, #0
 1590 02fc 08D1     		bne	.L94
 1591              		.loc 1 465 0 discriminator 3
 1592 02fe 4B4B     		ldr	r3, .L109+16
 1593 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 0302 002B     		cmp	r3, #0
 1595 0304 04D1     		bne	.L94
 466:main.c        ****                     turnFinishedFlag = 1;
 1596              		.loc 1 466 0 is_stmt 1
 1597 0306 4A4B     		ldr	r3, .L109+20
 1598 0308 0122     		movs	r2, #1
 1599 030a 1A70     		strb	r2, [r3]
 467:main.c        ****                     return ForwardAfterTurn;
 1600              		.loc 1 467 0
 1601 030c 0823     		movs	r3, #8
 1602 030e 81E0     		b	.L69
 1603              	.L94:
 468:main.c        ****                 }
 469:main.c        ****                 else
 470:main.c        ****                 {
 471:main.c        ****                     return TurnRight;
 1604              		.loc 1 471 0
 1605 0310 0123     		movs	r3, #1
 1606 0312 7FE0     		b	.L69
 1607              	.L92:
 472:main.c        ****                 }
 473:main.c        ****             }
 474:main.c        ****             
 475:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 476:main.c        ****             if (!s4) {
 1608              		.loc 1 476 0
 1609 0314 434B     		ldr	r3, .L109+8
 1610 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 0318 002B     		cmp	r3, #0
 1612 031a 04D1     		bne	.L95
 477:main.c        ****                 turnStartedFlag = 1;
 1613              		.loc 1 477 0
 1614 031c 404B     		ldr	r3, .L109+4
 1615 031e 0122     		movs	r2, #1
 1616 0320 1A70     		strb	r2, [r3]
 478:main.c        ****                 return TurnRight;
 1617              		.loc 1 478 0
 1618 0322 0123     		movs	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 38


 1619 0324 76E0     		b	.L69
 1620              	.L95:
 479:main.c        ****             }
 480:main.c        ****             
 481:main.c        ****             // Otherwise, keep going forward
 482:main.c        ****             return ForwardCourseCorrection(); 
 1621              		.loc 1 482 0
 1622 0326 FFF7FEFF 		bl	ForwardCourseCorrection
 1623 032a 0346     		mov	r3, r0
 1624 032c 72E0     		b	.L69
 1625              	.L65:
 483:main.c        ****             break;
 484:main.c        ****         case ForwardUntilTarget:
 485:main.c        ****             // Reset distance on first iteration of this instruction
 486:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1626              		.loc 1 486 0
 1627 032e 414B     		ldr	r3, .L109+24
 1628 0330 1B78     		ldrb	r3, [r3]
 1629 0332 DBB2     		uxtb	r3, r3
 1630 0334 002B     		cmp	r3, #0
 1631 0336 0FD1     		bne	.L96
 487:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1632              		.loc 1 487 0
 1633 0338 3E4B     		ldr	r3, .L109+24
 1634 033a 0122     		movs	r2, #1
 1635 033c 1A70     		strb	r2, [r3]
 488:main.c        ****                 totalDistance = 0;
 1636              		.loc 1 488 0
 1637 033e 3E4B     		ldr	r3, .L109+28
 1638 0340 4FF00002 		mov	r2, #0
 1639 0344 1A60     		str	r2, [r3]	@ float
 489:main.c        **** 
 490:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 491:main.c        ****                 blockSizeTotal = blocksize * 2;
 1640              		.loc 1 491 0
 1641 0346 7B68     		ldr	r3, [r7, #4]	@ float
 1642 0348 1946     		mov	r1, r3
 1643 034a 1846     		mov	r0, r3
 1644 034c FFF7FEFF 		bl	__aeabi_fadd
 1645 0350 0346     		mov	r3, r0
 1646 0352 1A46     		mov	r2, r3
 1647 0354 394B     		ldr	r3, .L109+32
 1648 0356 1A60     		str	r2, [r3]	@ float
 1649              	.L96:
 492:main.c        ****             }
 493:main.c        ****             
 494:main.c        ****             
 495:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 496:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1650              		.loc 1 496 0
 1651 0358 374B     		ldr	r3, .L109+28
 1652 035a 1A68     		ldr	r2, [r3]	@ float
 1653 035c 374B     		ldr	r3, .L109+32
 1654 035e 1B68     		ldr	r3, [r3]	@ float
 1655 0360 1946     		mov	r1, r3
 1656 0362 1046     		mov	r0, r2
 1657 0364 FFF7FEFF 		bl	__aeabi_fcmpge
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 39


 1658 0368 0346     		mov	r3, r0
 1659 036a 002B     		cmp	r3, #0
 1660 036c 03D0     		beq	.L106
 497:main.c        ****                 // Get next instruction
 498:main.c        ****                 MoveToNextInstruction();
 1661              		.loc 1 498 0
 1662 036e FFF7FEFF 		bl	MoveToNextInstruction
 499:main.c        **** 
 500:main.c        ****                 
 501:main.c        ****                 return Stop;
 1663              		.loc 1 501 0
 1664 0372 0523     		movs	r3, #5
 1665 0374 4EE0     		b	.L69
 1666              	.L106:
 502:main.c        ****             }
 503:main.c        ****             
 504:main.c        ****             return ForwardCourseCorrection();
 1667              		.loc 1 504 0
 1668 0376 FFF7FEFF 		bl	ForwardCourseCorrection
 1669 037a 0346     		mov	r3, r0
 1670 037c 4AE0     		b	.L69
 1671              	.L66:
 505:main.c        ****             break;
 506:main.c        ****         case StopAtTarget:
 507:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 508:main.c        ****             // Reset flags
 509:main.c        ****             totalDistance = 0;
 1672              		.loc 1 509 0
 1673 037e 2E4B     		ldr	r3, .L109+28
 1674 0380 4FF00002 		mov	r2, #0
 1675 0384 1A60     		str	r2, [r3]	@ float
 510:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1676              		.loc 1 510 0
 1677 0386 2B4B     		ldr	r3, .L109+24
 1678 0388 0022     		movs	r2, #0
 1679 038a 1A70     		strb	r2, [r3]
 511:main.c        ****             blockSizeTotal = 0;
 1680              		.loc 1 511 0
 1681 038c 2B4B     		ldr	r3, .L109+32
 1682 038e 4FF00002 		mov	r2, #0
 1683 0392 1A60     		str	r2, [r3]	@ float
 512:main.c        ****             
 513:main.c        ****             if (stopBuffer <= 200) {
 1684              		.loc 1 513 0
 1685 0394 2A4B     		ldr	r3, .L109+36
 1686 0396 1B68     		ldr	r3, [r3]
 1687 0398 C82B     		cmp	r3, #200
 1688 039a 01D8     		bhi	.L99
 514:main.c        ****                 return Stop;    
 1689              		.loc 1 514 0
 1690 039c 0523     		movs	r3, #5
 1691 039e 39E0     		b	.L69
 1692              	.L99:
 515:main.c        ****             }
 516:main.c        ****             return TurnRight;
 1693              		.loc 1 516 0
 1694 03a0 0123     		movs	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 40


 1695 03a2 37E0     		b	.L69
 1696              	.L64:
 517:main.c        ****             break;
 518:main.c        ****         case uTurn:
 519:main.c        ****             if (currentDirection == Stop) {
 1697              		.loc 1 519 0
 1698 03a4 1D4B     		ldr	r3, .L109
 1699 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1700 03a8 052B     		cmp	r3, #5
 1701 03aa 08D1     		bne	.L100
 520:main.c        ****                 if (stopBuffer <= 50) {
 1702              		.loc 1 520 0
 1703 03ac 244B     		ldr	r3, .L109+36
 1704 03ae 1B68     		ldr	r3, [r3]
 1705 03b0 322B     		cmp	r3, #50
 1706 03b2 01D8     		bhi	.L101
 521:main.c        ****                     return Stop;    
 1707              		.loc 1 521 0
 1708 03b4 0523     		movs	r3, #5
 1709 03b6 2DE0     		b	.L69
 1710              	.L101:
 522:main.c        ****                 } else {
 523:main.c        ****                     stopBuffer = 100;    
 1711              		.loc 1 523 0
 1712 03b8 214B     		ldr	r3, .L109+36
 1713 03ba 6422     		movs	r2, #100
 1714 03bc 1A60     		str	r2, [r3]
 1715              	.L100:
 524:main.c        ****                 }
 525:main.c        ****             }
 526:main.c        ****             
 527:main.c        ****             
 528:main.c        ****             if (!uTurnStartedFlag) {
 1716              		.loc 1 528 0
 1717 03be 214B     		ldr	r3, .L109+40
 1718 03c0 1B78     		ldrb	r3, [r3]
 1719 03c2 DBB2     		uxtb	r3, r3
 1720 03c4 002B     		cmp	r3, #0
 1721 03c6 07D1     		bne	.L102
 529:main.c        ****                 uTurnStartedFlag = 1;
 1722              		.loc 1 529 0
 1723 03c8 1E4B     		ldr	r3, .L109+40
 1724 03ca 0122     		movs	r2, #1
 1725 03cc 1A70     		strb	r2, [r3]
 530:main.c        ****                 spinCourseCorrectionStarted = 0;
 1726              		.loc 1 530 0
 1727 03ce 1E4B     		ldr	r3, .L109+44
 1728 03d0 0022     		movs	r2, #0
 1729 03d2 1A70     		strb	r2, [r3]
 531:main.c        ****                 return Spin180;
 1730              		.loc 1 531 0
 1731 03d4 0A23     		movs	r3, #10
 1732 03d6 1DE0     		b	.L69
 1733              	.L102:
 532:main.c        ****             } 
 533:main.c        ****             
 534:main.c        ****             if (uTurnFinishedFlag) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 41


 1734              		.loc 1 534 0
 1735 03d8 1C4B     		ldr	r3, .L109+48
 1736 03da 1B78     		ldrb	r3, [r3]
 1737 03dc DBB2     		uxtb	r3, r3
 1738 03de 002B     		cmp	r3, #0
 1739 03e0 03D0     		beq	.L103
 535:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 536:main.c        ****                 MoveToNextInstruction();
 1740              		.loc 1 536 0
 1741 03e2 FFF7FEFF 		bl	MoveToNextInstruction
 537:main.c        ****                 return Stop;    
 1742              		.loc 1 537 0
 1743 03e6 0523     		movs	r3, #5
 1744 03e8 14E0     		b	.L69
 1745              	.L103:
 538:main.c        ****             }
 539:main.c        ****             
 540:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 541:main.c        ****             if (uTurnStartedFlag) {
 1746              		.loc 1 541 0
 1747 03ea 164B     		ldr	r3, .L109+40
 1748 03ec 1B78     		ldrb	r3, [r3]
 1749 03ee DBB2     		uxtb	r3, r3
 1750 03f0 002B     		cmp	r3, #0
 1751 03f2 0AD0     		beq	.L104
 542:main.c        ****                 if (!s5 && !s6) {
 1752              		.loc 1 542 0
 1753 03f4 0C4B     		ldr	r3, .L109+12
 1754 03f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1755 03f8 002B     		cmp	r3, #0
 1756 03fa 06D1     		bne	.L104
 1757              		.loc 1 542 0 is_stmt 0 discriminator 1
 1758 03fc 0B4B     		ldr	r3, .L109+16
 1759 03fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1760 0400 002B     		cmp	r3, #0
 1761 0402 02D1     		bne	.L104
 543:main.c        ****                     uTurnFinishedFlag = 1;    
 1762              		.loc 1 543 0 is_stmt 1
 1763 0404 114B     		ldr	r3, .L109+48
 1764 0406 0122     		movs	r2, #1
 1765 0408 1A70     		strb	r2, [r3]
 1766              	.L104:
 544:main.c        ****                 }    
 545:main.c        ****             }
 546:main.c        ****             
 547:main.c        ****             return SpinCourseCorrection();
 1767              		.loc 1 547 0
 1768 040a FFF7FEFF 		bl	SpinCourseCorrection
 1769 040e 0346     		mov	r3, r0
 1770 0410 00E0     		b	.L69
 1771              	.L59:
 548:main.c        ****             break;
 549:main.c        ****         default:
 550:main.c        ****             return Stop;
 1772              		.loc 1 550 0
 1773 0412 0523     		movs	r3, #5
 1774              	.L69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 42


 551:main.c        ****             break;
 552:main.c        ****     }
 553:main.c        ****     return Stop;
 554:main.c        **** }
 1775              		.loc 1 554 0
 1776 0414 1846     		mov	r0, r3
 1777 0416 0837     		adds	r7, r7, #8
 1778              		.cfi_def_cfa_offset 8
 1779 0418 BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 041a 80BD     		pop	{r7, pc}
 1783              	.L110:
 1784              		.align	2
 1785              	.L109:
 1786 041c 00000000 		.word	currentDirection
 1787 0420 34000000 		.word	turnStartedFlag
 1788 0424 00000000 		.word	s4
 1789 0428 00000000 		.word	s5
 1790 042c 00000000 		.word	s6
 1791 0430 35000000 		.word	turnFinishedFlag
 1792 0434 36000000 		.word	forwardUntilTargetStartedFlag
 1793 0438 00000000 		.word	totalDistance
 1794 043c 00000000 		.word	blockSizeTotal
 1795 0440 00000000 		.word	stopBuffer
 1796 0444 37000000 		.word	uTurnStartedFlag
 1797 0448 3B000000 		.word	spinCourseCorrectionStarted
 1798 044c 38000000 		.word	uTurnFinishedFlag
 1799              		.cfi_endproc
 1800              	.LFE75:
 1801              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1802              		.global	__aeabi_i2f
 1803              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1804              		.align	2
 1805              		.global	CalculateDistanceToTravel
 1806              		.thumb
 1807              		.thumb_func
 1808              		.type	CalculateDistanceToTravel, %function
 1809              	CalculateDistanceToTravel:
 1810              	.LFB76:
 555:main.c        **** 
 556:main.c        **** // Calculate total blocksize to travel until target
 557:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1811              		.loc 1 557 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 40
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 80B5     		push	{r7, lr}
 1816              		.cfi_def_cfa_offset 8
 1817              		.cfi_offset 7, -8
 1818              		.cfi_offset 14, -4
 1819 0002 8AB0     		sub	sp, sp, #40
 1820              		.cfi_def_cfa_offset 48
 1821 0004 00AF     		add	r7, sp, #0
 1822              		.cfi_def_cfa_register 7
 1823 0006 7860     		str	r0, [r7, #4]	@ float
 558:main.c        ****     float totalBlockSize;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 43


 559:main.c        ****     
 560:main.c        ****     // Check for Row, Col that target is 
 561:main.c        ****     int targetRow = food_list[0][0];
 1824              		.loc 1 561 0
 1825 0008 9E4B     		ldr	r3, .L156
 1826 000a 1B68     		ldr	r3, [r3]
 1827 000c 3B61     		str	r3, [r7, #16]
 562:main.c        ****     int targetCol = food_list[0][1];
 1828              		.loc 1 562 0
 1829 000e 9D4B     		ldr	r3, .L156
 1830 0010 5B68     		ldr	r3, [r3, #4]
 1831 0012 FB60     		str	r3, [r7, #12]
 563:main.c        ****     
 564:main.c        ****     int pathCount = 0;
 1832              		.loc 1 564 0
 1833 0014 0023     		movs	r3, #0
 1834 0016 7B62     		str	r3, [r7, #36]
 565:main.c        ****     
 566:main.c        ****     // Depending on the robot orientation
 567:main.c        ****     // count++ if row, col is 8
 568:main.c        ****     // count reset if row, col is 1 or 0
 569:main.c        ****     // save count if row, col is 9
 570:main.c        ****     switch (currentRobotOrientation) {
 1835              		.loc 1 570 0
 1836 0018 9B4B     		ldr	r3, .L156+4
 1837 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1838 001c 032B     		cmp	r3, #3
 1839 001e 00F21F81 		bhi	.L112
 1840 0022 01A2     		adr	r2, .L114
 1841 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1842              		.p2align 2
 1843              	.L114:
 1844 0028 39000000 		.word	.L113+1
 1845 002c C3000000 		.word	.L115+1
 1846 0030 4D010000 		.word	.L116+1
 1847 0034 D7010000 		.word	.L117+1
 1848              		.p2align 1
 1849              	.L113:
 1850              	.LBB3:
 571:main.c        ****         case Up:
 572:main.c        ****             // Column
 573:main.c        ****             // Start from Bottom (since we're facing up)
 574:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1851              		.loc 1 574 0
 1852 0038 0F23     		movs	r3, #15
 1853 003a 3B62     		str	r3, [r7, #32]
 1854 003c 3BE0     		b	.L118
 1855              	.L124:
 575:main.c        ****                 if (map[i][targetCol] == 9) {
 1856              		.loc 1 575 0
 1857 003e 9349     		ldr	r1, .L156+8
 1858 0040 3A6A     		ldr	r2, [r7, #32]
 1859 0042 1346     		mov	r3, r2
 1860 0044 DB00     		lsls	r3, r3, #3
 1861 0046 1344     		add	r3, r3, r2
 1862 0048 5B00     		lsls	r3, r3, #1
 1863 004a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 44


 1864 004c FA68     		ldr	r2, [r7, #12]
 1865 004e 1344     		add	r3, r3, r2
 1866 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1867 0054 092B     		cmp	r3, #9
 1868 0056 32D0     		beq	.L151
 576:main.c        ****                     break;    
 577:main.c        ****                 }
 578:main.c        ****                 if (map[i][targetCol] == 8) {
 1869              		.loc 1 578 0
 1870 0058 8C49     		ldr	r1, .L156+8
 1871 005a 3A6A     		ldr	r2, [r7, #32]
 1872 005c 1346     		mov	r3, r2
 1873 005e DB00     		lsls	r3, r3, #3
 1874 0060 1344     		add	r3, r3, r2
 1875 0062 5B00     		lsls	r3, r3, #1
 1876 0064 1344     		add	r3, r3, r2
 1877 0066 FA68     		ldr	r2, [r7, #12]
 1878 0068 1344     		add	r3, r3, r2
 1879 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1880 006e 082B     		cmp	r3, #8
 1881 0070 02D1     		bne	.L121
 579:main.c        ****                     pathCount++;    
 1882              		.loc 1 579 0
 1883 0072 7B6A     		ldr	r3, [r7, #36]
 1884 0074 0133     		adds	r3, r3, #1
 1885 0076 7B62     		str	r3, [r7, #36]
 1886              	.L121:
 580:main.c        ****                 }
 581:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1887              		.loc 1 581 0
 1888 0078 8449     		ldr	r1, .L156+8
 1889 007a 3A6A     		ldr	r2, [r7, #32]
 1890 007c 1346     		mov	r3, r2
 1891 007e DB00     		lsls	r3, r3, #3
 1892 0080 1344     		add	r3, r3, r2
 1893 0082 5B00     		lsls	r3, r3, #1
 1894 0084 1344     		add	r3, r3, r2
 1895 0086 FA68     		ldr	r2, [r7, #12]
 1896 0088 1344     		add	r3, r3, r2
 1897 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1898 008e 002B     		cmp	r3, #0
 1899 0090 0CD0     		beq	.L122
 1900              		.loc 1 581 0 is_stmt 0 discriminator 1
 1901 0092 7E49     		ldr	r1, .L156+8
 1902 0094 3A6A     		ldr	r2, [r7, #32]
 1903 0096 1346     		mov	r3, r2
 1904 0098 DB00     		lsls	r3, r3, #3
 1905 009a 1344     		add	r3, r3, r2
 1906 009c 5B00     		lsls	r3, r3, #1
 1907 009e 1344     		add	r3, r3, r2
 1908 00a0 FA68     		ldr	r2, [r7, #12]
 1909 00a2 1344     		add	r3, r3, r2
 1910 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1911 00a8 012B     		cmp	r3, #1
 1912 00aa 01D1     		bne	.L123
 1913              	.L122:
 582:main.c        ****                     pathCount = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 45


 1914              		.loc 1 582 0 is_stmt 1
 1915 00ac 0023     		movs	r3, #0
 1916 00ae 7B62     		str	r3, [r7, #36]
 1917              	.L123:
 574:main.c        ****                 if (map[i][targetCol] == 9) {
 1918              		.loc 1 574 0 discriminator 2
 1919 00b0 3B6A     		ldr	r3, [r7, #32]
 1920 00b2 013B     		subs	r3, r3, #1
 1921 00b4 3B62     		str	r3, [r7, #32]
 1922              	.L118:
 574:main.c        ****                 if (map[i][targetCol] == 9) {
 1923              		.loc 1 574 0 is_stmt 0 discriminator 1
 1924 00b6 3B6A     		ldr	r3, [r7, #32]
 1925 00b8 002B     		cmp	r3, #0
 1926 00ba C0DA     		bge	.L124
 1927              	.LBE3:
 583:main.c        ****                 }
 584:main.c        ****             }
 585:main.c        ****             break;
 1928              		.loc 1 585 0 is_stmt 1
 1929 00bc D0E0     		b	.L112
 1930              	.L151:
 1931              	.LBB4:
 576:main.c        ****                 }
 1932              		.loc 1 576 0
 1933 00be 00BF     		nop
 1934              	.LBE4:
 1935              		.loc 1 585 0
 1936 00c0 CEE0     		b	.L112
 1937              	.L115:
 1938              	.LBB5:
 586:main.c        ****         case Down:
 587:main.c        ****             // Target Column, Check Row
 588:main.c        ****             // Start from Top
 589:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1939              		.loc 1 589 0
 1940 00c2 0023     		movs	r3, #0
 1941 00c4 FB61     		str	r3, [r7, #28]
 1942 00c6 3BE0     		b	.L125
 1943              	.L131:
 590:main.c        ****                 if (map[i][targetCol] == 9) {
 1944              		.loc 1 590 0
 1945 00c8 7049     		ldr	r1, .L156+8
 1946 00ca FA69     		ldr	r2, [r7, #28]
 1947 00cc 1346     		mov	r3, r2
 1948 00ce DB00     		lsls	r3, r3, #3
 1949 00d0 1344     		add	r3, r3, r2
 1950 00d2 5B00     		lsls	r3, r3, #1
 1951 00d4 1344     		add	r3, r3, r2
 1952 00d6 FA68     		ldr	r2, [r7, #12]
 1953 00d8 1344     		add	r3, r3, r2
 1954 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1955 00de 092B     		cmp	r3, #9
 1956 00e0 32D0     		beq	.L152
 591:main.c        ****                     break;    
 592:main.c        ****                 }
 593:main.c        ****                 if (map[i][targetCol] == 8) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 46


 1957              		.loc 1 593 0
 1958 00e2 6A49     		ldr	r1, .L156+8
 1959 00e4 FA69     		ldr	r2, [r7, #28]
 1960 00e6 1346     		mov	r3, r2
 1961 00e8 DB00     		lsls	r3, r3, #3
 1962 00ea 1344     		add	r3, r3, r2
 1963 00ec 5B00     		lsls	r3, r3, #1
 1964 00ee 1344     		add	r3, r3, r2
 1965 00f0 FA68     		ldr	r2, [r7, #12]
 1966 00f2 1344     		add	r3, r3, r2
 1967 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1968 00f8 082B     		cmp	r3, #8
 1969 00fa 02D1     		bne	.L128
 594:main.c        ****                     pathCount++;    
 1970              		.loc 1 594 0
 1971 00fc 7B6A     		ldr	r3, [r7, #36]
 1972 00fe 0133     		adds	r3, r3, #1
 1973 0100 7B62     		str	r3, [r7, #36]
 1974              	.L128:
 595:main.c        ****                 }
 596:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1975              		.loc 1 596 0
 1976 0102 6249     		ldr	r1, .L156+8
 1977 0104 FA69     		ldr	r2, [r7, #28]
 1978 0106 1346     		mov	r3, r2
 1979 0108 DB00     		lsls	r3, r3, #3
 1980 010a 1344     		add	r3, r3, r2
 1981 010c 5B00     		lsls	r3, r3, #1
 1982 010e 1344     		add	r3, r3, r2
 1983 0110 FA68     		ldr	r2, [r7, #12]
 1984 0112 1344     		add	r3, r3, r2
 1985 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1986 0118 002B     		cmp	r3, #0
 1987 011a 0CD0     		beq	.L129
 1988              		.loc 1 596 0 is_stmt 0 discriminator 1
 1989 011c 5B49     		ldr	r1, .L156+8
 1990 011e FA69     		ldr	r2, [r7, #28]
 1991 0120 1346     		mov	r3, r2
 1992 0122 DB00     		lsls	r3, r3, #3
 1993 0124 1344     		add	r3, r3, r2
 1994 0126 5B00     		lsls	r3, r3, #1
 1995 0128 1344     		add	r3, r3, r2
 1996 012a FA68     		ldr	r2, [r7, #12]
 1997 012c 1344     		add	r3, r3, r2
 1998 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1999 0132 012B     		cmp	r3, #1
 2000 0134 01D1     		bne	.L130
 2001              	.L129:
 597:main.c        ****                     pathCount = 0;
 2002              		.loc 1 597 0 is_stmt 1
 2003 0136 0023     		movs	r3, #0
 2004 0138 7B62     		str	r3, [r7, #36]
 2005              	.L130:
 589:main.c        ****                 if (map[i][targetCol] == 9) {
 2006              		.loc 1 589 0 discriminator 2
 2007 013a FB69     		ldr	r3, [r7, #28]
 2008 013c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 47


 2009 013e FB61     		str	r3, [r7, #28]
 2010              	.L125:
 589:main.c        ****                 if (map[i][targetCol] == 9) {
 2011              		.loc 1 589 0 is_stmt 0 discriminator 1
 2012 0140 FB69     		ldr	r3, [r7, #28]
 2013 0142 0E2B     		cmp	r3, #14
 2014 0144 C0DD     		ble	.L131
 2015              	.LBE5:
 598:main.c        ****                 }
 599:main.c        ****             }
 600:main.c        ****             break;
 2016              		.loc 1 600 0 is_stmt 1
 2017 0146 8BE0     		b	.L112
 2018              	.L152:
 2019              	.LBB6:
 591:main.c        ****                 }
 2020              		.loc 1 591 0
 2021 0148 00BF     		nop
 2022              	.LBE6:
 2023              		.loc 1 600 0
 2024 014a 89E0     		b	.L112
 2025              	.L116:
 2026              	.LBB7:
 601:main.c        ****         case Left:
 602:main.c        ****             // Target Row, Check Col
 603:main.c        ****             // Start from Right
 604:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 2027              		.loc 1 604 0
 2028 014c 1323     		movs	r3, #19
 2029 014e BB61     		str	r3, [r7, #24]
 2030 0150 3BE0     		b	.L132
 2031              	.L138:
 605:main.c        ****                 if (map[targetRow][i] == 9) {
 2032              		.loc 1 605 0
 2033 0152 4E49     		ldr	r1, .L156+8
 2034 0154 3A69     		ldr	r2, [r7, #16]
 2035 0156 1346     		mov	r3, r2
 2036 0158 DB00     		lsls	r3, r3, #3
 2037 015a 1344     		add	r3, r3, r2
 2038 015c 5B00     		lsls	r3, r3, #1
 2039 015e 1344     		add	r3, r3, r2
 2040 0160 BA69     		ldr	r2, [r7, #24]
 2041 0162 1344     		add	r3, r3, r2
 2042 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2043 0168 092B     		cmp	r3, #9
 2044 016a 32D0     		beq	.L153
 606:main.c        ****                     break;    
 607:main.c        ****                 }
 608:main.c        ****                 if (map[targetRow][i] == 8) {
 2045              		.loc 1 608 0
 2046 016c 4749     		ldr	r1, .L156+8
 2047 016e 3A69     		ldr	r2, [r7, #16]
 2048 0170 1346     		mov	r3, r2
 2049 0172 DB00     		lsls	r3, r3, #3
 2050 0174 1344     		add	r3, r3, r2
 2051 0176 5B00     		lsls	r3, r3, #1
 2052 0178 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 48


 2053 017a BA69     		ldr	r2, [r7, #24]
 2054 017c 1344     		add	r3, r3, r2
 2055 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2056 0182 082B     		cmp	r3, #8
 2057 0184 02D1     		bne	.L135
 609:main.c        ****                     pathCount++;    
 2058              		.loc 1 609 0
 2059 0186 7B6A     		ldr	r3, [r7, #36]
 2060 0188 0133     		adds	r3, r3, #1
 2061 018a 7B62     		str	r3, [r7, #36]
 2062              	.L135:
 610:main.c        ****                 }
 611:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2063              		.loc 1 611 0
 2064 018c 3F49     		ldr	r1, .L156+8
 2065 018e 3A69     		ldr	r2, [r7, #16]
 2066 0190 1346     		mov	r3, r2
 2067 0192 DB00     		lsls	r3, r3, #3
 2068 0194 1344     		add	r3, r3, r2
 2069 0196 5B00     		lsls	r3, r3, #1
 2070 0198 1344     		add	r3, r3, r2
 2071 019a BA69     		ldr	r2, [r7, #24]
 2072 019c 1344     		add	r3, r3, r2
 2073 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2074 01a2 002B     		cmp	r3, #0
 2075 01a4 0CD0     		beq	.L136
 2076              		.loc 1 611 0 is_stmt 0 discriminator 1
 2077 01a6 3949     		ldr	r1, .L156+8
 2078 01a8 BA69     		ldr	r2, [r7, #24]
 2079 01aa 1346     		mov	r3, r2
 2080 01ac DB00     		lsls	r3, r3, #3
 2081 01ae 1344     		add	r3, r3, r2
 2082 01b0 5B00     		lsls	r3, r3, #1
 2083 01b2 1344     		add	r3, r3, r2
 2084 01b4 FA68     		ldr	r2, [r7, #12]
 2085 01b6 1344     		add	r3, r3, r2
 2086 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2087 01bc 012B     		cmp	r3, #1
 2088 01be 01D1     		bne	.L137
 2089              	.L136:
 612:main.c        ****                     pathCount = 0;
 2090              		.loc 1 612 0 is_stmt 1
 2091 01c0 0023     		movs	r3, #0
 2092 01c2 7B62     		str	r3, [r7, #36]
 2093              	.L137:
 604:main.c        ****                 if (map[targetRow][i] == 9) {
 2094              		.loc 1 604 0 discriminator 2
 2095 01c4 BB69     		ldr	r3, [r7, #24]
 2096 01c6 013B     		subs	r3, r3, #1
 2097 01c8 BB61     		str	r3, [r7, #24]
 2098              	.L132:
 604:main.c        ****                 if (map[targetRow][i] == 9) {
 2099              		.loc 1 604 0 is_stmt 0 discriminator 1
 2100 01ca BB69     		ldr	r3, [r7, #24]
 2101 01cc 002B     		cmp	r3, #0
 2102 01ce C0DA     		bge	.L138
 2103              	.LBE7:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 49


 613:main.c        ****                 }
 614:main.c        ****             }
 615:main.c        ****             break;
 2104              		.loc 1 615 0 is_stmt 1
 2105 01d0 46E0     		b	.L112
 2106              	.L153:
 2107              	.LBB8:
 606:main.c        ****                 }
 2108              		.loc 1 606 0
 2109 01d2 00BF     		nop
 2110              	.LBE8:
 2111              		.loc 1 615 0
 2112 01d4 44E0     		b	.L112
 2113              	.L117:
 2114              	.LBB9:
 616:main.c        ****         
 617:main.c        ****         case Right:
 618:main.c        ****             // Target Row, Check Col
 619:main.c        ****             // Start from Left
 620:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 2115              		.loc 1 620 0
 2116 01d6 0023     		movs	r3, #0
 2117 01d8 7B61     		str	r3, [r7, #20]
 2118 01da 3BE0     		b	.L139
 2119              	.L145:
 621:main.c        ****                 if (map[targetRow][i] == 9) {
 2120              		.loc 1 621 0
 2121 01dc 2B49     		ldr	r1, .L156+8
 2122 01de 3A69     		ldr	r2, [r7, #16]
 2123 01e0 1346     		mov	r3, r2
 2124 01e2 DB00     		lsls	r3, r3, #3
 2125 01e4 1344     		add	r3, r3, r2
 2126 01e6 5B00     		lsls	r3, r3, #1
 2127 01e8 1344     		add	r3, r3, r2
 2128 01ea 7A69     		ldr	r2, [r7, #20]
 2129 01ec 1344     		add	r3, r3, r2
 2130 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2131 01f2 092B     		cmp	r3, #9
 2132 01f4 32D0     		beq	.L154
 622:main.c        ****                     break;    
 623:main.c        ****                 }
 624:main.c        ****                 if (map[targetRow][i] == 8) {
 2133              		.loc 1 624 0
 2134 01f6 2549     		ldr	r1, .L156+8
 2135 01f8 3A69     		ldr	r2, [r7, #16]
 2136 01fa 1346     		mov	r3, r2
 2137 01fc DB00     		lsls	r3, r3, #3
 2138 01fe 1344     		add	r3, r3, r2
 2139 0200 5B00     		lsls	r3, r3, #1
 2140 0202 1344     		add	r3, r3, r2
 2141 0204 7A69     		ldr	r2, [r7, #20]
 2142 0206 1344     		add	r3, r3, r2
 2143 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2144 020c 082B     		cmp	r3, #8
 2145 020e 02D1     		bne	.L142
 625:main.c        ****                     pathCount++;    
 2146              		.loc 1 625 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 50


 2147 0210 7B6A     		ldr	r3, [r7, #36]
 2148 0212 0133     		adds	r3, r3, #1
 2149 0214 7B62     		str	r3, [r7, #36]
 2150              	.L142:
 626:main.c        ****                 }
 627:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2151              		.loc 1 627 0
 2152 0216 1D49     		ldr	r1, .L156+8
 2153 0218 3A69     		ldr	r2, [r7, #16]
 2154 021a 1346     		mov	r3, r2
 2155 021c DB00     		lsls	r3, r3, #3
 2156 021e 1344     		add	r3, r3, r2
 2157 0220 5B00     		lsls	r3, r3, #1
 2158 0222 1344     		add	r3, r3, r2
 2159 0224 7A69     		ldr	r2, [r7, #20]
 2160 0226 1344     		add	r3, r3, r2
 2161 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2162 022c 002B     		cmp	r3, #0
 2163 022e 0CD0     		beq	.L143
 2164              		.loc 1 627 0 is_stmt 0 discriminator 1
 2165 0230 1649     		ldr	r1, .L156+8
 2166 0232 7A69     		ldr	r2, [r7, #20]
 2167 0234 1346     		mov	r3, r2
 2168 0236 DB00     		lsls	r3, r3, #3
 2169 0238 1344     		add	r3, r3, r2
 2170 023a 5B00     		lsls	r3, r3, #1
 2171 023c 1344     		add	r3, r3, r2
 2172 023e FA68     		ldr	r2, [r7, #12]
 2173 0240 1344     		add	r3, r3, r2
 2174 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2175 0246 012B     		cmp	r3, #1
 2176 0248 01D1     		bne	.L144
 2177              	.L143:
 628:main.c        ****                     pathCount = 0;
 2178              		.loc 1 628 0 is_stmt 1
 2179 024a 0023     		movs	r3, #0
 2180 024c 7B62     		str	r3, [r7, #36]
 2181              	.L144:
 620:main.c        ****                 if (map[targetRow][i] == 9) {
 2182              		.loc 1 620 0 discriminator 2
 2183 024e 7B69     		ldr	r3, [r7, #20]
 2184 0250 0133     		adds	r3, r3, #1
 2185 0252 7B61     		str	r3, [r7, #20]
 2186              	.L139:
 620:main.c        ****                 if (map[targetRow][i] == 9) {
 2187              		.loc 1 620 0 is_stmt 0 discriminator 1
 2188 0254 7B69     		ldr	r3, [r7, #20]
 2189 0256 122B     		cmp	r3, #18
 2190 0258 C0DD     		ble	.L145
 2191              	.LBE9:
 629:main.c        ****                 }
 630:main.c        **** 
 631:main.c        ****             }
 632:main.c        ****             break;
 2192              		.loc 1 632 0 is_stmt 1
 2193 025a 00E0     		b	.L155
 2194              	.L154:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 51


 2195              	.LBB10:
 622:main.c        ****                 }
 2196              		.loc 1 622 0
 2197 025c 00BF     		nop
 2198              	.L155:
 2199              	.LBE10:
 2200              		.loc 1 632 0
 2201 025e 00BF     		nop
 2202              	.L112:
 633:main.c        ****     }
 634:main.c        ****     totalBlockSize = blockSize * pathCount;
 2203              		.loc 1 634 0
 2204 0260 786A     		ldr	r0, [r7, #36]
 2205 0262 FFF7FEFF 		bl	__aeabi_i2f
 2206 0266 0346     		mov	r3, r0
 2207 0268 7968     		ldr	r1, [r7, #4]	@ float
 2208 026a 1846     		mov	r0, r3
 2209 026c FFF7FEFF 		bl	__aeabi_fmul
 2210 0270 0346     		mov	r3, r0
 2211 0272 BB60     		str	r3, [r7, #8]	@ float
 635:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 2212              		.loc 1 635 0
 2213 0274 0548     		ldr	r0, .L156+8
 2214 0276 FFF7FEFF 		bl	clearMap
 636:main.c        ****     return totalBlockSize;
 2215              		.loc 1 636 0
 2216 027a BB68     		ldr	r3, [r7, #8]	@ float
 637:main.c        **** }
 2217              		.loc 1 637 0
 2218 027c 1846     		mov	r0, r3
 2219 027e 2837     		adds	r7, r7, #40
 2220              		.cfi_def_cfa_offset 8
 2221 0280 BD46     		mov	sp, r7
 2222              		.cfi_def_cfa_register 13
 2223              		@ sp needed
 2224 0282 80BD     		pop	{r7, pc}
 2225              	.L157:
 2226              		.align	2
 2227              	.L156:
 2228 0284 00000000 		.word	food_list
 2229 0288 00000000 		.word	currentRobotOrientation
 2230 028c 00000000 		.word	map
 2231              		.cfi_endproc
 2232              	.LFE76:
 2233              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 2234              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2235              		.align	2
 2236              		.global	MoveToNextInstruction
 2237              		.thumb
 2238              		.thumb_func
 2239              		.type	MoveToNextInstruction, %function
 2240              	MoveToNextInstruction:
 2241              	.LFB77:
 638:main.c        **** 
 639:main.c        **** // get next instruction
 640:main.c        **** void MoveToNextInstruction() {
 2242              		.loc 1 640 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 52


 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 0
 2245              		@ frame_needed = 1, uses_anonymous_args = 0
 2246              		@ link register save eliminated.
 2247 0000 80B4     		push	{r7}
 2248              		.cfi_def_cfa_offset 4
 2249              		.cfi_offset 7, -4
 2250 0002 00AF     		add	r7, sp, #0
 2251              		.cfi_def_cfa_register 7
 641:main.c        ****     currentIgnoreL = 0;
 2252              		.loc 1 641 0
 2253 0004 114B     		ldr	r3, .L159
 2254 0006 0022     		movs	r2, #0
 2255 0008 1A70     		strb	r2, [r3]
 642:main.c        ****     currentIgnoreR = 0;
 2256              		.loc 1 642 0
 2257 000a 114B     		ldr	r3, .L159+4
 2258 000c 0022     		movs	r2, #0
 2259 000e 1A70     		strb	r2, [r3]
 643:main.c        ****     instructionIndex++;
 2260              		.loc 1 643 0
 2261 0010 104B     		ldr	r3, .L159+8
 2262 0012 1B68     		ldr	r3, [r3]
 2263 0014 0133     		adds	r3, r3, #1
 2264 0016 0F4A     		ldr	r2, .L159+8
 2265 0018 1360     		str	r3, [r2]
 644:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2266              		.loc 1 644 0
 2267 001a 0F4B     		ldr	r3, .L159+12
 2268 001c 1A68     		ldr	r2, [r3]
 2269 001e 0D4B     		ldr	r3, .L159+8
 2270 0020 1B68     		ldr	r3, [r3]
 2271 0022 1B01     		lsls	r3, r3, #4
 2272 0024 1344     		add	r3, r3, r2
 2273 0026 5B68     		ldr	r3, [r3, #4]
 2274 0028 DAB2     		uxtb	r2, r3
 2275 002a 084B     		ldr	r3, .L159
 2276 002c 1A70     		strb	r2, [r3]
 645:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2277              		.loc 1 645 0
 2278 002e 0A4B     		ldr	r3, .L159+12
 2279 0030 1A68     		ldr	r2, [r3]
 2280 0032 084B     		ldr	r3, .L159+8
 2281 0034 1B68     		ldr	r3, [r3]
 2282 0036 1B01     		lsls	r3, r3, #4
 2283 0038 1344     		add	r3, r3, r2
 2284 003a 9B68     		ldr	r3, [r3, #8]
 2285 003c DAB2     		uxtb	r2, r3
 2286 003e 044B     		ldr	r3, .L159+4
 2287 0040 1A70     		strb	r2, [r3]
 646:main.c        ****     /*for (int i = instructionIndex; i < numSteps; i++) {
 647:main.c        ****         if (instructionList[i].direction != Skip) {
 648:main.c        ****             instructionIndex = i;             
 649:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 650:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 651:main.c        ****             break;
 652:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 53


 653:main.c        ****     }*/
 654:main.c        ****     
 655:main.c        ****     
 656:main.c        **** }
 2288              		.loc 1 656 0
 2289 0042 00BF     		nop
 2290 0044 BD46     		mov	sp, r7
 2291              		.cfi_def_cfa_register 13
 2292              		@ sp needed
 2293 0046 80BC     		pop	{r7}
 2294              		.cfi_restore 7
 2295              		.cfi_def_cfa_offset 0
 2296 0048 7047     		bx	lr
 2297              	.L160:
 2298 004a 00BF     		.align	2
 2299              	.L159:
 2300 004c 3C000000 		.word	currentIgnoreL
 2301 0050 45000000 		.word	currentIgnoreR
 2302 0054 14000000 		.word	instructionIndex
 2303 0058 00000000 		.word	instructionList
 2304              		.cfi_endproc
 2305              	.LFE77:
 2306              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2307              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2308              		.align	2
 2309              		.global	GetInstructionAtIndex
 2310              		.thumb
 2311              		.thumb_func
 2312              		.type	GetInstructionAtIndex, %function
 2313              	GetInstructionAtIndex:
 2314              	.LFB78:
 657:main.c        **** 
 658:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]) {
 2315              		.loc 1 658 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 32
 2318              		@ frame_needed = 1, uses_anonymous_args = 0
 2319              		@ link register save eliminated.
 2320 0000 90B4     		push	{r4, r7}
 2321              		.cfi_def_cfa_offset 8
 2322              		.cfi_offset 4, -8
 2323              		.cfi_offset 7, -4
 2324 0002 88B0     		sub	sp, sp, #32
 2325              		.cfi_def_cfa_offset 40
 2326 0004 00AF     		add	r7, sp, #0
 2327              		.cfi_def_cfa_register 7
 2328 0006 F860     		str	r0, [r7, #12]
 2329 0008 B960     		str	r1, [r7, #8]
 2330 000a 7A60     		str	r2, [r7, #4]
 659:main.c        ****     Instruction nextInstruction;
 660:main.c        ****     // input is list of instructions and robot will react accordingly
 661:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2331              		.loc 1 661 0
 2332 000c 0C4B     		ldr	r3, .L163
 2333 000e 1B68     		ldr	r3, [r3]
 2334 0010 1B01     		lsls	r3, r3, #4
 2335 0012 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 54


 2336 0014 1344     		add	r3, r3, r2
 2337 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2338 0018 3B74     		strb	r3, [r7, #16]
 662:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2339              		.loc 1 662 0
 2340 001a 094B     		ldr	r3, .L163
 2341 001c 1B68     		ldr	r3, [r3]
 2342 001e 1B01     		lsls	r3, r3, #4
 2343 0020 7A68     		ldr	r2, [r7, #4]
 2344 0022 1344     		add	r3, r3, r2
 2345 0024 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2346 0026 3B77     		strb	r3, [r7, #28]
 663:main.c        ****     
 664:main.c        ****     /*
 665:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 666:main.c        ****         if(instructionList[i].direction != Skip) {
 667:main.c        ****             nextInstruction.direction = instructionList[i].direction;        
 668:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 669:main.c        ****             instructionIndex = i;
 670:main.c        ****             return nextInstruction; // return next instruction
 671:main.c        ****         }
 672:main.c        ****     }*/
 673:main.c        ****     return nextInstruction;
 2347              		.loc 1 673 0
 2348 0028 FB68     		ldr	r3, [r7, #12]
 2349 002a 1C46     		mov	r4, r3
 2350 002c 07F11003 		add	r3, r7, #16
 2351 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2352 0032 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 674:main.c        **** }
 2353              		.loc 1 674 0
 2354 0036 F868     		ldr	r0, [r7, #12]
 2355 0038 2037     		adds	r7, r7, #32
 2356              		.cfi_def_cfa_offset 8
 2357 003a BD46     		mov	sp, r7
 2358              		.cfi_def_cfa_register 13
 2359              		@ sp needed
 2360 003c 90BC     		pop	{r4, r7}
 2361              		.cfi_restore 7
 2362              		.cfi_restore 4
 2363              		.cfi_def_cfa_offset 0
 2364 003e 7047     		bx	lr
 2365              	.L164:
 2366              		.align	2
 2367              	.L163:
 2368 0040 14000000 		.word	instructionIndex
 2369              		.cfi_endproc
 2370              	.LFE78:
 2371              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2372              		.section	.text.SetRobotMovement,"ax",%progbits
 2373              		.align	2
 2374              		.global	SetRobotMovement
 2375              		.thumb
 2376              		.thumb_func
 2377              		.type	SetRobotMovement, %function
 2378              	SetRobotMovement:
 2379              	.LFB79:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 55


 675:main.c        **** 
 676:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 677:main.c        **** void SetRobotMovement() {
 2380              		.loc 1 677 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 16
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384 0000 90B5     		push	{r4, r7, lr}
 2385              		.cfi_def_cfa_offset 12
 2386              		.cfi_offset 4, -12
 2387              		.cfi_offset 7, -8
 2388              		.cfi_offset 14, -4
 2389 0002 85B0     		sub	sp, sp, #20
 2390              		.cfi_def_cfa_offset 32
 2391 0004 00AF     		add	r7, sp, #0
 2392              		.cfi_def_cfa_register 7
 678:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList); // get current/ next ins
 2393              		.loc 1 678 0
 2394 0006 2A4B     		ldr	r3, .L181
 2395 0008 1968     		ldr	r1, [r3]
 2396 000a 2A4B     		ldr	r3, .L181+4
 2397 000c 1A68     		ldr	r2, [r3]
 2398 000e 2A4C     		ldr	r4, .L181+8
 2399 0010 3B46     		mov	r3, r7
 2400 0012 1846     		mov	r0, r3
 2401 0014 FFF7FEFF 		bl	GetInstructionAtIndex
 2402 0018 3B46     		mov	r3, r7
 2403 001a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2404 001c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 679:main.c        ****     previousDirection = currentDirection;
 2405              		.loc 1 679 0
 2406 0020 264B     		ldr	r3, .L181+12
 2407 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2408 0024 264B     		ldr	r3, .L181+16
 2409 0026 1A70     		strb	r2, [r3]
 680:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2410              		.loc 1 680 0
 2411 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2412 002c 0346     		mov	r3, r0
 2413 002e 1A46     		mov	r2, r3
 2414 0030 224B     		ldr	r3, .L181+12
 2415 0032 1A70     		strb	r2, [r3]
 681:main.c        ****     // move robot depending on sensors
 682:main.c        ****     switch (currentDirection) {
 2416              		.loc 1 682 0
 2417 0034 214B     		ldr	r3, .L181+12
 2418 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2419 0038 0A2B     		cmp	r3, #10
 2420 003a 35D8     		bhi	.L179
 2421 003c 01A2     		adr	r2, .L168
 2422 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2423 0042 00BF     		.p2align 2
 2424              	.L168:
 2425 0044 71000000 		.word	.L167+1
 2426 0048 77000000 		.word	.L169+1
 2427 004c 7D000000 		.word	.L170+1
 2428 0050 89000000 		.word	.L171+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 56


 2429 0054 83000000 		.word	.L172+1
 2430 0058 8F000000 		.word	.L173+1
 2431 005c A7000000 		.word	.L180+1
 2432 0060 A7000000 		.word	.L180+1
 2433 0064 95000000 		.word	.L176+1
 2434 0068 9B000000 		.word	.L177+1
 2435 006c A1000000 		.word	.L178+1
 2436              		.p2align 1
 2437              	.L167:
 683:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 684:main.c        ****         case Forward:
 685:main.c        ****             moveForward();
 2438              		.loc 1 685 0
 2439 0070 FFF7FEFF 		bl	moveForward
 686:main.c        ****             break;
 2440              		.loc 1 686 0
 2441 0074 18E0     		b	.L166
 2442              	.L169:
 687:main.c        ****         case TurnRight:
 688:main.c        ****             turnRight();
 2443              		.loc 1 688 0
 2444 0076 FFF7FEFF 		bl	turnRight
 689:main.c        ****             break;
 2445              		.loc 1 689 0
 2446 007a 15E0     		b	.L166
 2447              	.L170:
 690:main.c        ****         case TurnLeft:
 691:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2448              		.loc 1 691 0
 2449 007c FFF7FEFF 		bl	turnLeft
 692:main.c        ****             break;
 2450              		.loc 1 692 0
 2451 0080 12E0     		b	.L166
 2452              	.L172:
 693:main.c        ****         case AdjustToTheRight:
 694:main.c        ****             adjustRight();
 2453              		.loc 1 694 0
 2454 0082 FFF7FEFF 		bl	adjustRight
 695:main.c        ****             break;
 2455              		.loc 1 695 0
 2456 0086 0FE0     		b	.L166
 2457              	.L171:
 696:main.c        ****         case AdjustToTheLeft:
 697:main.c        ****             adjustLeft();
 2458              		.loc 1 697 0
 2459 0088 FFF7FEFF 		bl	adjustLeft
 698:main.c        ****             break;
 2460              		.loc 1 698 0
 2461 008c 0CE0     		b	.L166
 2462              	.L173:
 699:main.c        ****         case Stop:
 700:main.c        ****             stopMoving();
 2463              		.loc 1 700 0
 2464 008e FFF7FEFF 		bl	stopMoving
 701:main.c        ****             break;
 2465              		.loc 1 701 0
 2466 0092 09E0     		b	.L166
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 57


 2467              	.L176:
 702:main.c        ****         case ForwardAfterTurn:
 703:main.c        ****             moveForward();
 2468              		.loc 1 703 0
 2469 0094 FFF7FEFF 		bl	moveForward
 704:main.c        ****             break;
 2470              		.loc 1 704 0
 2471 0098 06E0     		b	.L166
 2472              	.L177:
 705:main.c        ****         case Backward:
 706:main.c        ****             moveBackward();
 2473              		.loc 1 706 0
 2474 009a FFF7FEFF 		bl	moveBackward
 707:main.c        ****             break;
 2475              		.loc 1 707 0
 2476 009e 03E0     		b	.L166
 2477              	.L178:
 708:main.c        ****         case waitForTurn:
 709:main.c        ****             break;
 710:main.c        ****         case Spin180:
 711:main.c        ****             RotateClockwise180Degrees();
 2478              		.loc 1 711 0
 2479 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 712:main.c        ****             break;
 2480              		.loc 1 712 0
 2481 00a4 00E0     		b	.L166
 2482              	.L180:
 713:main.c        ****         /*case waitForLeftTurn:
 714:main.c        ****             moveForward();
 715:main.c        ****             break;
 716:main.c        ****         case waitForRightTurn:
 717:main.c        ****             moveForward();
 718:main.c        ****             break;*/
 719:main.c        ****         case Unknown:
 720:main.c        ****             // UNKNOWN CONFIGURATION
 721:main.c        ****             break;  
 2483              		.loc 1 721 0
 2484 00a6 00BF     		nop
 2485              	.L166:
 2486              	.L179:
 722:main.c        ****     }
 723:main.c        **** }...
 2487              		.loc 1 723 0
 2488 00a8 00BF     		nop
 2489 00aa 1437     		adds	r7, r7, #20
 2490              		.cfi_def_cfa_offset 12
 2491 00ac BD46     		mov	sp, r7
 2492              		.cfi_def_cfa_register 13
 2493              		@ sp needed
 2494 00ae 90BD     		pop	{r4, r7, pc}
 2495              	.L182:
 2496              		.align	2
 2497              	.L181:
 2498 00b0 00000000 		.word	numSteps
 2499 00b4 00000000 		.word	instructionList
 2500 00b8 00000000 		.word	currentInstruction
 2501 00bc 00000000 		.word	currentDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 58


 2502 00c0 00000000 		.word	previousDirection
 2503              		.cfi_endproc
 2504              	.LFE79:
 2505              		.size	SetRobotMovement, .-SetRobotMovement
 2506              		.text
 2507              	.Letext0:
 2508              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2509              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2510              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2511              		.file 5 "vars.h"
 2512              		.file 6 "pathfinding.h"
 2513              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2514              		.file 8 "map.h"
 2515              		.section	.debug_info,"",%progbits
 2516              	.Ldebug_info0:
 2517 0000 95090000 		.4byte	0x995
 2518 0004 0400     		.2byte	0x4
 2519 0006 00000000 		.4byte	.Ldebug_abbrev0
 2520 000a 04       		.byte	0x4
 2521 000b 01       		.uleb128 0x1
 2522 000c A2000000 		.4byte	.LASF148
 2523 0010 0C       		.byte	0xc
 2524 0011 30000000 		.4byte	.LASF149
 2525 0015 7B030000 		.4byte	.LASF150
 2526 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2527 001d 00000000 		.4byte	0
 2528 0021 00000000 		.4byte	.Ldebug_line0
 2529 0025 02       		.uleb128 0x2
 2530 0026 01       		.byte	0x1
 2531 0027 06       		.byte	0x6
 2532 0028 93070000 		.4byte	.LASF0
 2533 002c 02       		.uleb128 0x2
 2534 002d 01       		.byte	0x1
 2535 002e 08       		.byte	0x8
 2536 002f CB060000 		.4byte	.LASF1
 2537 0033 02       		.uleb128 0x2
 2538 0034 02       		.byte	0x2
 2539 0035 05       		.byte	0x5
 2540 0036 A2050000 		.4byte	.LASF2
 2541 003a 02       		.uleb128 0x2
 2542 003b 02       		.byte	0x2
 2543 003c 07       		.byte	0x7
 2544 003d AA070000 		.4byte	.LASF3
 2545 0041 03       		.uleb128 0x3
 2546 0042 75000000 		.4byte	.LASF12
 2547 0046 02       		.byte	0x2
 2548 0047 3F       		.byte	0x3f
 2549 0048 4C000000 		.4byte	0x4c
 2550 004c 02       		.uleb128 0x2
 2551 004d 04       		.byte	0x4
 2552 004e 05       		.byte	0x5
 2553 004f B8050000 		.4byte	.LASF4
 2554 0053 02       		.uleb128 0x2
 2555 0054 04       		.byte	0x4
 2556 0055 07       		.byte	0x7
 2557 0056 75060000 		.4byte	.LASF5
 2558 005a 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 59


 2559 005b 08       		.byte	0x8
 2560 005c 05       		.byte	0x5
 2561 005d 5C040000 		.4byte	.LASF6
 2562 0061 02       		.uleb128 0x2
 2563 0062 08       		.byte	0x8
 2564 0063 07       		.byte	0x7
 2565 0064 9B020000 		.4byte	.LASF7
 2566 0068 04       		.uleb128 0x4
 2567 0069 04       		.byte	0x4
 2568 006a 05       		.byte	0x5
 2569 006b 696E7400 		.ascii	"int\000"
 2570 006f 02       		.uleb128 0x2
 2571 0070 04       		.byte	0x4
 2572 0071 07       		.byte	0x7
 2573 0072 68000000 		.4byte	.LASF8
 2574 0076 02       		.uleb128 0x2
 2575 0077 08       		.byte	0x8
 2576 0078 04       		.byte	0x4
 2577 0079 66050000 		.4byte	.LASF9
 2578 007d 02       		.uleb128 0x2
 2579 007e 04       		.byte	0x4
 2580 007f 07       		.byte	0x7
 2581 0080 6C060000 		.4byte	.LASF10
 2582 0084 02       		.uleb128 0x2
 2583 0085 01       		.byte	0x1
 2584 0086 08       		.byte	0x8
 2585 0087 76030000 		.4byte	.LASF11
 2586 008b 03       		.uleb128 0x3
 2587 008c A4060000 		.4byte	.LASF13
 2588 0090 03       		.byte	0x3
 2589 0091 2C       		.byte	0x2c
 2590 0092 41000000 		.4byte	0x41
 2591 0096 05       		.uleb128 0x5
 2592 0097 00080000 		.4byte	.LASF14
 2593 009b 04       		.byte	0x4
 2594 009c E701     		.2byte	0x1e7
 2595 009e 2C000000 		.4byte	0x2c
 2596 00a2 05       		.uleb128 0x5
 2597 00a3 F6030000 		.4byte	.LASF15
 2598 00a7 04       		.byte	0x4
 2599 00a8 E801     		.2byte	0x1e8
 2600 00aa 3A000000 		.4byte	0x3a
 2601 00ae 05       		.uleb128 0x5
 2602 00af 0E050000 		.4byte	.LASF16
 2603 00b3 04       		.byte	0x4
 2604 00b4 E901     		.2byte	0x1e9
 2605 00b6 53000000 		.4byte	0x53
 2606 00ba 05       		.uleb128 0x5
 2607 00bb FD030000 		.4byte	.LASF17
 2608 00bf 04       		.byte	0x4
 2609 00c0 EA01     		.2byte	0x1ea
 2610 00c2 25000000 		.4byte	0x25
 2611 00c6 05       		.uleb128 0x5
 2612 00c7 7F000000 		.4byte	.LASF18
 2613 00cb 04       		.byte	0x4
 2614 00cc EB01     		.2byte	0x1eb
 2615 00ce 33000000 		.4byte	0x33
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 60


 2616 00d2 02       		.uleb128 0x2
 2617 00d3 04       		.byte	0x4
 2618 00d4 04       		.byte	0x4
 2619 00d5 63020000 		.4byte	.LASF19
 2620 00d9 02       		.uleb128 0x2
 2621 00da 08       		.byte	0x8
 2622 00db 04       		.byte	0x4
 2623 00dc 06080000 		.4byte	.LASF20
 2624 00e0 06       		.uleb128 0x6
 2625 00e1 96000000 		.4byte	0x96
 2626 00e5 06       		.uleb128 0x6
 2627 00e6 AE000000 		.4byte	0xae
 2628 00ea 07       		.uleb128 0x7
 2629 00eb 96000000 		.4byte	0x96
 2630 00ef FA000000 		.4byte	0xfa
 2631 00f3 08       		.uleb128 0x8
 2632 00f4 7D000000 		.4byte	0x7d
 2633 00f8 03       		.byte	0x3
 2634 00f9 00       		.byte	0
 2635 00fa 09       		.uleb128 0x9
 2636 00fb 30050000 		.4byte	.LASF50
 2637 00ff 20       		.byte	0x20
 2638 0100 05       		.byte	0x5
 2639 0101 28       		.byte	0x28
 2640 0102 D3010000 		.4byte	0x1d3
 2641 0106 0A       		.uleb128 0xa
 2642 0107 3A050000 		.4byte	.LASF21
 2643 010b 05       		.byte	0x5
 2644 010c 2A       		.byte	0x2a
 2645 010d BA000000 		.4byte	0xba
 2646 0111 00       		.byte	0
 2647 0112 0A       		.uleb128 0xa
 2648 0113 95020000 		.4byte	.LASF22
 2649 0117 05       		.byte	0x5
 2650 0118 2B       		.byte	0x2b
 2651 0119 96000000 		.4byte	0x96
 2652 011d 01       		.byte	0x1
 2653 011e 0A       		.uleb128 0xa
 2654 011f AC060000 		.4byte	.LASF23
 2655 0123 05       		.byte	0x5
 2656 0124 2C       		.byte	0x2c
 2657 0125 C6000000 		.4byte	0xc6
 2658 0129 02       		.byte	0x2
 2659 012a 0A       		.uleb128 0xa
 2660 012b 60030000 		.4byte	.LASF24
 2661 012f 05       		.byte	0x5
 2662 0130 2D       		.byte	0x2d
 2663 0131 C6000000 		.4byte	0xc6
 2664 0135 04       		.byte	0x4
 2665 0136 0A       		.uleb128 0xa
 2666 0137 BD070000 		.4byte	.LASF25
 2667 013b 05       		.byte	0x5
 2668 013c 2E       		.byte	0x2e
 2669 013d C6000000 		.4byte	0xc6
 2670 0141 06       		.byte	0x6
 2671 0142 0A       		.uleb128 0xa
 2672 0143 27080000 		.4byte	.LASF26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 61


 2673 0147 05       		.byte	0x5
 2674 0148 2F       		.byte	0x2f
 2675 0149 C6000000 		.4byte	0xc6
 2676 014d 08       		.byte	0x8
 2677 014e 0A       		.uleb128 0xa
 2678 014f CC040000 		.4byte	.LASF27
 2679 0153 05       		.byte	0x5
 2680 0154 30       		.byte	0x30
 2681 0155 C6000000 		.4byte	0xc6
 2682 0159 0A       		.byte	0xa
 2683 015a 0A       		.uleb128 0xa
 2684 015b CC030000 		.4byte	.LASF28
 2685 015f 05       		.byte	0x5
 2686 0160 31       		.byte	0x31
 2687 0161 C6000000 		.4byte	0xc6
 2688 0165 0C       		.byte	0xc
 2689 0166 0A       		.uleb128 0xa
 2690 0167 3F050000 		.4byte	.LASF29
 2691 016b 05       		.byte	0x5
 2692 016c 32       		.byte	0x32
 2693 016d C6000000 		.4byte	0xc6
 2694 0171 0E       		.byte	0xe
 2695 0172 0A       		.uleb128 0xa
 2696 0173 6A040000 		.4byte	.LASF30
 2697 0177 05       		.byte	0x5
 2698 0178 33       		.byte	0x33
 2699 0179 C6000000 		.4byte	0xc6
 2700 017d 10       		.byte	0x10
 2701 017e 0A       		.uleb128 0xa
 2702 017f 2C060000 		.4byte	.LASF31
 2703 0183 05       		.byte	0x5
 2704 0184 34       		.byte	0x34
 2705 0185 C6000000 		.4byte	0xc6
 2706 0189 12       		.byte	0x12
 2707 018a 0A       		.uleb128 0xa
 2708 018b 47080000 		.4byte	.LASF32
 2709 018f 05       		.byte	0x5
 2710 0190 35       		.byte	0x35
 2711 0191 C6000000 		.4byte	0xc6
 2712 0195 14       		.byte	0x14
 2713 0196 0A       		.uleb128 0xa
 2714 0197 0D040000 		.4byte	.LASF33
 2715 019b 05       		.byte	0x5
 2716 019c 36       		.byte	0x36
 2717 019d C6000000 		.4byte	0xc6
 2718 01a1 16       		.byte	0x16
 2719 01a2 0A       		.uleb128 0xa
 2720 01a3 86010000 		.4byte	.LASF34
 2721 01a7 05       		.byte	0x5
 2722 01a8 37       		.byte	0x37
 2723 01a9 C6000000 		.4byte	0xc6
 2724 01ad 18       		.byte	0x18
 2725 01ae 0A       		.uleb128 0xa
 2726 01af F2050000 		.4byte	.LASF35
 2727 01b3 05       		.byte	0x5
 2728 01b4 38       		.byte	0x38
 2729 01b5 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 62


 2730 01b9 1A       		.byte	0x1a
 2731 01ba 0A       		.uleb128 0xa
 2732 01bb C3040000 		.4byte	.LASF36
 2733 01bf 05       		.byte	0x5
 2734 01c0 39       		.byte	0x39
 2735 01c1 C6000000 		.4byte	0xc6
 2736 01c5 1C       		.byte	0x1c
 2737 01c6 0A       		.uleb128 0xa
 2738 01c7 3E020000 		.4byte	.LASF37
 2739 01cb 05       		.byte	0x5
 2740 01cc 3A       		.byte	0x3a
 2741 01cd C6000000 		.4byte	0xc6
 2742 01d1 1E       		.byte	0x1e
 2743 01d2 00       		.byte	0
 2744 01d3 0B       		.uleb128 0xb
 2745 01d4 10060000 		.4byte	.LASF41
 2746 01d8 01       		.byte	0x1
 2747 01d9 2C000000 		.4byte	0x2c
 2748 01dd 06       		.byte	0x6
 2749 01de 0D       		.byte	0xd
 2750 01df FB010000 		.4byte	0x1fb
 2751 01e3 0C       		.uleb128 0xc
 2752 01e4 557000   		.ascii	"Up\000"
 2753 01e7 00       		.byte	0
 2754 01e8 0D       		.uleb128 0xd
 2755 01e9 21060000 		.4byte	.LASF38
 2756 01ed 01       		.byte	0x1
 2757 01ee 0D       		.uleb128 0xd
 2758 01ef F2020000 		.4byte	.LASF39
 2759 01f3 02       		.byte	0x2
 2760 01f4 0D       		.uleb128 0xd
 2761 01f5 26060000 		.4byte	.LASF40
 2762 01f9 03       		.byte	0x3
 2763 01fa 00       		.byte	0
 2764 01fb 0B       		.uleb128 0xb
 2765 01fc 1B000000 		.4byte	.LASF42
 2766 0200 01       		.byte	0x1
 2767 0201 2C000000 		.4byte	0x2c
 2768 0205 06       		.byte	0x6
 2769 0206 0E       		.byte	0xe
 2770 0207 36020000 		.4byte	0x236
 2771 020b 0D       		.uleb128 0xd
 2772 020c 7D070000 		.4byte	.LASF43
 2773 0210 00       		.byte	0
 2774 0211 0D       		.uleb128 0xd
 2775 0212 4C040000 		.4byte	.LASF44
 2776 0216 01       		.byte	0x1
 2777 0217 0D       		.uleb128 0xd
 2778 0218 15050000 		.4byte	.LASF45
 2779 021c 02       		.byte	0x2
 2780 021d 0D       		.uleb128 0xd
 2781 021e 95040000 		.4byte	.LASF46
 2782 0222 03       		.byte	0x3
 2783 0223 0D       		.uleb128 0xd
 2784 0224 30010000 		.4byte	.LASF47
 2785 0228 04       		.byte	0x4
 2786 0229 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 63


 2787 022a 47030000 		.4byte	.LASF48
 2788 022e 05       		.byte	0x5
 2789 022f 0D       		.uleb128 0xd
 2790 0230 6A070000 		.4byte	.LASF49
 2791 0234 06       		.byte	0x6
 2792 0235 00       		.byte	0
 2793 0236 09       		.uleb128 0x9
 2794 0237 B2020000 		.4byte	.LASF51
 2795 023b 10       		.byte	0x10
 2796 023c 06       		.byte	0x6
 2797 023d 10       		.byte	0x10
 2798 023e 73020000 		.4byte	0x273
 2799 0242 0A       		.uleb128 0xa
 2800 0243 00000000 		.4byte	.LASF52
 2801 0247 06       		.byte	0x6
 2802 0248 11       		.byte	0x11
 2803 0249 FB010000 		.4byte	0x1fb
 2804 024d 00       		.byte	0
 2805 024e 0A       		.uleb128 0xa
 2806 024f 50080000 		.4byte	.LASF53
 2807 0253 06       		.byte	0x6
 2808 0254 12       		.byte	0x12
 2809 0255 68000000 		.4byte	0x68
 2810 0259 04       		.byte	0x4
 2811 025a 0A       		.uleb128 0xa
 2812 025b 58080000 		.4byte	.LASF54
 2813 025f 06       		.byte	0x6
 2814 0260 13       		.byte	0x13
 2815 0261 68000000 		.4byte	0x68
 2816 0265 08       		.byte	0x8
 2817 0266 0A       		.uleb128 0xa
 2818 0267 43010000 		.4byte	.LASF55
 2819 026b 06       		.byte	0x6
 2820 026c 14       		.byte	0x14
 2821 026d D3010000 		.4byte	0x1d3
 2822 0271 0C       		.byte	0xc
 2823 0272 00       		.byte	0
 2824 0273 03       		.uleb128 0x3
 2825 0274 B2020000 		.4byte	.LASF51
 2826 0278 06       		.byte	0x6
 2827 0279 15       		.byte	0x15
 2828 027a 36020000 		.4byte	0x236
 2829 027e 0B       		.uleb128 0xb
 2830 027f BD060000 		.4byte	.LASF56
 2831 0283 01       		.byte	0x1
 2832 0284 2C000000 		.4byte	0x2c
 2833 0288 01       		.byte	0x1
 2834 0289 18       		.byte	0x18
 2835 028a D1020000 		.4byte	0x2d1
 2836 028e 0D       		.uleb128 0xd
 2837 028f D8050000 		.4byte	.LASF57
 2838 0293 00       		.byte	0
 2839 0294 0D       		.uleb128 0xd
 2840 0295 26050000 		.4byte	.LASF58
 2841 0299 01       		.byte	0x1
 2842 029a 0D       		.uleb128 0xd
 2843 029b DE040000 		.4byte	.LASF59
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 64


 2844 029f 02       		.byte	0x2
 2845 02a0 0D       		.uleb128 0xd
 2846 02a1 E7070000 		.4byte	.LASF60
 2847 02a5 03       		.byte	0x3
 2848 02a6 0D       		.uleb128 0xd
 2849 02a7 09070000 		.4byte	.LASF61
 2850 02ab 04       		.byte	0x4
 2851 02ac 0D       		.uleb128 0xd
 2852 02ad 1A070000 		.4byte	.LASF62
 2853 02b1 05       		.byte	0x5
 2854 02b2 0D       		.uleb128 0xd
 2855 02b3 06050000 		.4byte	.LASF63
 2856 02b7 06       		.byte	0x6
 2857 02b8 0D       		.uleb128 0xd
 2858 02b9 54030000 		.4byte	.LASF64
 2859 02bd 07       		.byte	0x7
 2860 02be 0D       		.uleb128 0xd
 2861 02bf 0A000000 		.4byte	.LASF65
 2862 02c3 08       		.byte	0x8
 2863 02c4 0D       		.uleb128 0xd
 2864 02c5 F7070000 		.4byte	.LASF66
 2865 02c9 09       		.byte	0x9
 2866 02ca 0D       		.uleb128 0xd
 2867 02cb 5E050000 		.4byte	.LASF67
 2868 02cf 0A       		.byte	0xa
 2869 02d0 00       		.byte	0
 2870 02d1 0E       		.uleb128 0xe
 2871 02d2 26040000 		.4byte	.LASF77
 2872 02d6 01       		.byte	0x1
 2873 02d7 47       		.byte	0x47
 2874 02d8 00000000 		.4byte	.LFB64
 2875 02dc EC000000 		.4byte	.LFE64-.LFB64
 2876 02e0 01       		.uleb128 0x1
 2877 02e1 9C       		.byte	0x9c
 2878 02e2 FF020000 		.4byte	0x2ff
 2879 02e6 0F       		.uleb128 0xf
 2880 02e7 50000000 		.4byte	.LBB2
 2881 02eb 62000000 		.4byte	.LBE2-.LBB2
 2882 02ef 10       		.uleb128 0x10
 2883 02f0 B7040000 		.4byte	.LASF74
 2884 02f4 01       		.byte	0x1
 2885 02f5 54       		.byte	0x54
 2886 02f6 D2000000 		.4byte	0xd2
 2887 02fa 02       		.uleb128 0x2
 2888 02fb 91       		.byte	0x91
 2889 02fc 6C       		.sleb128 -20
 2890 02fd 00       		.byte	0
 2891 02fe 00       		.byte	0
 2892 02ff 11       		.uleb128 0x11
 2893 0300 1A040000 		.4byte	.LASF68
 2894 0304 01       		.byte	0x1
 2895 0305 5F       		.byte	0x5f
 2896 0306 00000000 		.4byte	.LFB65
 2897 030a 18000000 		.4byte	.LFE65-.LFB65
 2898 030e 01       		.uleb128 0x1
 2899 030f 9C       		.byte	0x9c
 2900 0310 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 65


 2901 0311 AC050000 		.4byte	.LASF69
 2902 0315 01       		.byte	0x1
 2903 0316 65       		.byte	0x65
 2904 0317 00000000 		.4byte	.LFB66
 2905 031b 18000000 		.4byte	.LFE66-.LFB66
 2906 031f 01       		.uleb128 0x1
 2907 0320 9C       		.byte	0x9c
 2908 0321 11       		.uleb128 0x11
 2909 0322 87070000 		.4byte	.LASF70
 2910 0326 01       		.byte	0x1
 2911 0327 6B       		.byte	0x6b
 2912 0328 00000000 		.4byte	.LFB67
 2913 032c 18000000 		.4byte	.LFE67-.LFB67
 2914 0330 01       		.uleb128 0x1
 2915 0331 9C       		.byte	0x9c
 2916 0332 11       		.uleb128 0x11
 2917 0333 6C010000 		.4byte	.LASF71
 2918 0337 01       		.byte	0x1
 2919 0338 71       		.byte	0x71
 2920 0339 00000000 		.4byte	.LFB68
 2921 033d 18000000 		.4byte	.LFE68-.LFB68
 2922 0341 01       		.uleb128 0x1
 2923 0342 9C       		.byte	0x9c
 2924 0343 12       		.uleb128 0x12
 2925 0344 DB020000 		.4byte	.LASF72
 2926 0348 01       		.byte	0x1
 2927 0349 77       		.byte	0x77
 2928 034a 00000000 		.4byte	.LFB69
 2929 034e 38000000 		.4byte	.LFE69-.LFB69
 2930 0352 01       		.uleb128 0x1
 2931 0353 9C       		.byte	0x9c
 2932 0354 13       		.uleb128 0x13
 2933 0355 CF070000 		.4byte	.LASF73
 2934 0359 01       		.byte	0x1
 2935 035a 83       		.byte	0x83
 2936 035b 68000000 		.4byte	0x68
 2937 035f 00000000 		.4byte	.LFB70
 2938 0363 14010000 		.4byte	.LFE70-.LFB70
 2939 0367 01       		.uleb128 0x1
 2940 0368 9C       		.byte	0x9c
 2941 0369 14       		.uleb128 0x14
 2942 036a 21030000 		.4byte	.LASF81
 2943 036e 01       		.byte	0x1
 2944 036f B9       		.byte	0xb9
 2945 0370 C6000000 		.4byte	0xc6
 2946 0374 00000000 		.4byte	.LFB71
 2947 0378 54000000 		.4byte	.LFE71-.LFB71
 2948 037c 01       		.uleb128 0x1
 2949 037d 9C       		.byte	0x9c
 2950 037e AD030000 		.4byte	0x3ad
 2951 0382 15       		.uleb128 0x15
 2952 0383 8F020000 		.4byte	.LASF83
 2953 0387 01       		.byte	0x1
 2954 0388 B9       		.byte	0xb9
 2955 0389 A2000000 		.4byte	0xa2
 2956 038d 02       		.uleb128 0x2
 2957 038e 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 66


 2958 038f 66       		.sleb128 -26
 2959 0390 16       		.uleb128 0x16
 2960 0391 63707300 		.ascii	"cps\000"
 2961 0395 01       		.byte	0x1
 2962 0396 BA       		.byte	0xba
 2963 0397 D2000000 		.4byte	0xd2
 2964 039b 02       		.uleb128 0x2
 2965 039c 91       		.byte	0x91
 2966 039d 6C       		.sleb128 -20
 2967 039e 16       		.uleb128 0x16
 2968 039f 72706D00 		.ascii	"rpm\000"
 2969 03a3 01       		.byte	0x1
 2970 03a4 BB       		.byte	0xbb
 2971 03a5 C6000000 		.4byte	0xc6
 2972 03a9 02       		.uleb128 0x2
 2973 03aa 91       		.byte	0x91
 2974 03ab 6A       		.sleb128 -22
 2975 03ac 00       		.byte	0
 2976 03ad 17       		.uleb128 0x17
 2977 03ae 2D020000 		.4byte	.LASF89
 2978 03b2 01       		.byte	0x1
 2979 03b3 C3       		.byte	0xc3
 2980 03b4 00000000 		.4byte	.LFB72
 2981 03b8 34000000 		.4byte	.LFE72-.LFB72
 2982 03bc 01       		.uleb128 0x1
 2983 03bd 9C       		.byte	0x9c
 2984 03be 18       		.uleb128 0x18
 2985 03bf FD010000 		.4byte	.LASF75
 2986 03c3 01       		.byte	0x1
 2987 03c4 D4       		.byte	0xd4
 2988 03c5 7E020000 		.4byte	0x27e
 2989 03c9 00000000 		.4byte	.LFB73
 2990 03cd 84000000 		.4byte	.LFE73-.LFB73
 2991 03d1 01       		.uleb128 0x1
 2992 03d2 9C       		.byte	0x9c
 2993 03d3 18       		.uleb128 0x18
 2994 03d4 57010000 		.4byte	.LASF76
 2995 03d8 01       		.byte	0x1
 2996 03d9 FA       		.byte	0xfa
 2997 03da 7E020000 		.4byte	0x27e
 2998 03de 00000000 		.4byte	.LFB74
 2999 03e2 7C000000 		.4byte	.LFE74-.LFB74
 3000 03e6 01       		.uleb128 0x1
 3001 03e7 9C       		.byte	0x9c
 3002 03e8 19       		.uleb128 0x19
 3003 03e9 BF010000 		.4byte	.LASF78
 3004 03ed 01       		.byte	0x1
 3005 03ee 1801     		.2byte	0x118
 3006 03f0 7E020000 		.4byte	0x27e
 3007 03f4 00000000 		.4byte	.LFB75
 3008 03f8 50040000 		.4byte	.LFE75-.LFB75
 3009 03fc 01       		.uleb128 0x1
 3010 03fd 9C       		.byte	0x9c
 3011 03fe 21040000 		.4byte	0x421
 3012 0402 1A       		.uleb128 0x1a
 3013 0403 57000000 		.4byte	.LASF79
 3014 0407 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 67


 3015 0408 1901     		.2byte	0x119
 3016 040a D2000000 		.4byte	0xd2
 3017 040e 02       		.uleb128 0x2
 3018 040f 91       		.byte	0x91
 3019 0410 74       		.sleb128 -12
 3020 0411 1A       		.uleb128 0x1a
 3021 0412 69020000 		.4byte	.LASF80
 3022 0416 01       		.byte	0x1
 3023 0417 2801     		.2byte	0x128
 3024 0419 FB010000 		.4byte	0x1fb
 3025 041d 02       		.uleb128 0x2
 3026 041e 91       		.byte	0x91
 3027 041f 73       		.sleb128 -13
 3028 0420 00       		.byte	0
 3029 0421 1B       		.uleb128 0x1b
 3030 0422 EF060000 		.4byte	.LASF82
 3031 0426 01       		.byte	0x1
 3032 0427 2D02     		.2byte	0x22d
 3033 0429 D2000000 		.4byte	0xd2
 3034 042d 00000000 		.4byte	.LFB76
 3035 0431 90020000 		.4byte	.LFE76-.LFB76
 3036 0435 01       		.uleb128 0x1
 3037 0436 9C       		.byte	0x9c
 3038 0437 DF040000 		.4byte	0x4df
 3039 043b 1C       		.uleb128 0x1c
 3040 043c 30030000 		.4byte	.LASF84
 3041 0440 01       		.byte	0x1
 3042 0441 2D02     		.2byte	0x22d
 3043 0443 D2000000 		.4byte	0xd2
 3044 0447 02       		.uleb128 0x2
 3045 0448 91       		.byte	0x91
 3046 0449 54       		.sleb128 -44
 3047 044a 1A       		.uleb128 0x1a
 3048 044b 18080000 		.4byte	.LASF85
 3049 044f 01       		.byte	0x1
 3050 0450 2E02     		.2byte	0x22e
 3051 0452 D2000000 		.4byte	0xd2
 3052 0456 02       		.uleb128 0x2
 3053 0457 91       		.byte	0x91
 3054 0458 58       		.sleb128 -40
 3055 0459 1A       		.uleb128 0x1a
 3056 045a B5010000 		.4byte	.LASF86
 3057 045e 01       		.byte	0x1
 3058 045f 3102     		.2byte	0x231
 3059 0461 68000000 		.4byte	0x68
 3060 0465 02       		.uleb128 0x2
 3061 0466 91       		.byte	0x91
 3062 0467 60       		.sleb128 -32
 3063 0468 1A       		.uleb128 0x1a
 3064 0469 4B020000 		.4byte	.LASF87
 3065 046d 01       		.byte	0x1
 3066 046e 3202     		.2byte	0x232
 3067 0470 68000000 		.4byte	0x68
 3068 0474 02       		.uleb128 0x2
 3069 0475 91       		.byte	0x91
 3070 0476 5C       		.sleb128 -36
 3071 0477 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 68


 3072 0478 31040000 		.4byte	.LASF88
 3073 047c 01       		.byte	0x1
 3074 047d 3402     		.2byte	0x234
 3075 047f 68000000 		.4byte	0x68
 3076 0483 02       		.uleb128 0x2
 3077 0484 91       		.byte	0x91
 3078 0485 74       		.sleb128 -12
 3079 0486 1D       		.uleb128 0x1d
 3080 0487 00000000 		.4byte	.Ldebug_ranges0+0
 3081 048b 9D040000 		.4byte	0x49d
 3082 048f 1E       		.uleb128 0x1e
 3083 0490 6900     		.ascii	"i\000"
 3084 0492 01       		.byte	0x1
 3085 0493 3E02     		.2byte	0x23e
 3086 0495 68000000 		.4byte	0x68
 3087 0499 02       		.uleb128 0x2
 3088 049a 91       		.byte	0x91
 3089 049b 70       		.sleb128 -16
 3090 049c 00       		.byte	0
 3091 049d 1D       		.uleb128 0x1d
 3092 049e 18000000 		.4byte	.Ldebug_ranges0+0x18
 3093 04a2 B4040000 		.4byte	0x4b4
 3094 04a6 1E       		.uleb128 0x1e
 3095 04a7 6900     		.ascii	"i\000"
 3096 04a9 01       		.byte	0x1
 3097 04aa 4D02     		.2byte	0x24d
 3098 04ac 68000000 		.4byte	0x68
 3099 04b0 02       		.uleb128 0x2
 3100 04b1 91       		.byte	0x91
 3101 04b2 6C       		.sleb128 -20
 3102 04b3 00       		.byte	0
 3103 04b4 1D       		.uleb128 0x1d
 3104 04b5 30000000 		.4byte	.Ldebug_ranges0+0x30
 3105 04b9 CB040000 		.4byte	0x4cb
 3106 04bd 1E       		.uleb128 0x1e
 3107 04be 6900     		.ascii	"i\000"
 3108 04c0 01       		.byte	0x1
 3109 04c1 5C02     		.2byte	0x25c
 3110 04c3 68000000 		.4byte	0x68
 3111 04c7 02       		.uleb128 0x2
 3112 04c8 91       		.byte	0x91
 3113 04c9 68       		.sleb128 -24
 3114 04ca 00       		.byte	0
 3115 04cb 1F       		.uleb128 0x1f
 3116 04cc 48000000 		.4byte	.Ldebug_ranges0+0x48
 3117 04d0 1E       		.uleb128 0x1e
 3118 04d1 6900     		.ascii	"i\000"
 3119 04d3 01       		.byte	0x1
 3120 04d4 6C02     		.2byte	0x26c
 3121 04d6 68000000 		.4byte	0x68
 3122 04da 02       		.uleb128 0x2
 3123 04db 91       		.byte	0x91
 3124 04dc 64       		.sleb128 -28
 3125 04dd 00       		.byte	0
 3126 04de 00       		.byte	0
 3127 04df 20       		.uleb128 0x20
 3128 04e0 FA050000 		.4byte	.LASF90
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 69


 3129 04e4 01       		.byte	0x1
 3130 04e5 8002     		.2byte	0x280
 3131 04e7 00000000 		.4byte	.LFB77
 3132 04eb 5C000000 		.4byte	.LFE77-.LFB77
 3133 04ef 01       		.uleb128 0x1
 3134 04f0 9C       		.byte	0x9c
 3135 04f1 21       		.uleb128 0x21
 3136 04f2 1F070000 		.4byte	.LASF91
 3137 04f6 01       		.byte	0x1
 3138 04f7 9202     		.2byte	0x292
 3139 04f9 73020000 		.4byte	0x273
 3140 04fd 00000000 		.4byte	.LFB78
 3141 0501 44000000 		.4byte	.LFE78-.LFB78
 3142 0505 01       		.uleb128 0x1
 3143 0506 9C       		.byte	0x9c
 3144 0507 39050000 		.4byte	0x539
 3145 050b 1C       		.uleb128 0x1c
 3146 050c AC010000 		.4byte	.LASF92
 3147 0510 01       		.byte	0x1
 3148 0511 9202     		.2byte	0x292
 3149 0513 68000000 		.4byte	0x68
 3150 0517 02       		.uleb128 0x2
 3151 0518 91       		.byte	0x91
 3152 0519 60       		.sleb128 -32
 3153 051a 1C       		.uleb128 0x1c
 3154 051b D5030000 		.4byte	.LASF93
 3155 051f 01       		.byte	0x1
 3156 0520 9202     		.2byte	0x292
 3157 0522 39050000 		.4byte	0x539
 3158 0526 02       		.uleb128 0x2
 3159 0527 91       		.byte	0x91
 3160 0528 5C       		.sleb128 -36
 3161 0529 1A       		.uleb128 0x1a
 3162 052a 92000000 		.4byte	.LASF94
 3163 052e 01       		.byte	0x1
 3164 052f 9302     		.2byte	0x293
 3165 0531 73020000 		.4byte	0x273
 3166 0535 02       		.uleb128 0x2
 3167 0536 91       		.byte	0x91
 3168 0537 68       		.sleb128 -24
 3169 0538 00       		.byte	0
 3170 0539 22       		.uleb128 0x22
 3171 053a 04       		.byte	0x4
 3172 053b 73020000 		.4byte	0x273
 3173 053f 23       		.uleb128 0x23
 3174 0540 CA020000 		.4byte	.LASF95
 3175 0544 01       		.byte	0x1
 3176 0545 A502     		.2byte	0x2a5
 3177 0547 00000000 		.4byte	.LFB79
 3178 054b C4000000 		.4byte	.LFE79-.LFB79
 3179 054f 01       		.uleb128 0x1
 3180 0550 9C       		.byte	0x9c
 3181 0551 10       		.uleb128 0x10
 3182 0552 E5030000 		.4byte	.LASF96
 3183 0556 01       		.byte	0x1
 3184 0557 20       		.byte	0x20
 3185 0558 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 70


 3186 055c 05       		.uleb128 0x5
 3187 055d 03       		.byte	0x3
 3188 055e 14000000 		.4byte	instructionIndex
 3189 0562 10       		.uleb128 0x10
 3190 0563 47000000 		.4byte	.LASF97
 3191 0567 01       		.byte	0x1
 3192 0568 34       		.byte	0x34
 3193 0569 E0000000 		.4byte	0xe0
 3194 056d 05       		.uleb128 0x5
 3195 056e 03       		.byte	0x3
 3196 056f 34000000 		.4byte	turnStartedFlag
 3197 0573 10       		.uleb128 0x10
 3198 0574 3B040000 		.4byte	.LASF98
 3199 0578 01       		.byte	0x1
 3200 0579 35       		.byte	0x35
 3201 057a E0000000 		.4byte	0xe0
 3202 057e 05       		.uleb128 0x5
 3203 057f 03       		.byte	0x3
 3204 0580 35000000 		.4byte	turnFinishedFlag
 3205 0584 10       		.uleb128 0x10
 3206 0585 8E010000 		.4byte	.LASF99
 3207 0589 01       		.byte	0x1
 3208 058a 37       		.byte	0x37
 3209 058b E0000000 		.4byte	0xe0
 3210 058f 05       		.uleb128 0x5
 3211 0590 03       		.byte	0x3
 3212 0591 36000000 		.4byte	forwardUntilTargetStartedFlag
 3213 0595 10       		.uleb128 0x10
 3214 0596 45060000 		.4byte	.LASF100
 3215 059a 01       		.byte	0x1
 3216 059b 38       		.byte	0x38
 3217 059c E0000000 		.4byte	0xe0
 3218 05a0 05       		.uleb128 0x5
 3219 05a1 03       		.byte	0x3
 3220 05a2 37000000 		.4byte	uTurnStartedFlag
 3221 05a6 10       		.uleb128 0x10
 3222 05a7 92060000 		.4byte	.LASF101
 3223 05ab 01       		.byte	0x1
 3224 05ac 39       		.byte	0x39
 3225 05ad E0000000 		.4byte	0xe0
 3226 05b1 05       		.uleb128 0x5
 3227 05b2 03       		.byte	0x3
 3228 05b3 38000000 		.4byte	uTurnFinishedFlag
 3229 05b7 10       		.uleb128 0x10
 3230 05b8 12030000 		.4byte	.LASF102
 3231 05bc 01       		.byte	0x1
 3232 05bd 3B       		.byte	0x3b
 3233 05be E0000000 		.4byte	0xe0
 3234 05c2 05       		.uleb128 0x5
 3235 05c3 03       		.byte	0x3
 3236 05c4 39000000 		.4byte	leftStatusFlag
 3237 05c8 10       		.uleb128 0x10
 3238 05c9 37000000 		.4byte	.LASF103
 3239 05cd 01       		.byte	0x1
 3240 05ce 3C       		.byte	0x3c
 3241 05cf E0000000 		.4byte	0xe0
 3242 05d3 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 71


 3243 05d4 03       		.byte	0x3
 3244 05d5 3A000000 		.4byte	rightStatusFlag
 3245 05d9 10       		.uleb128 0x10
 3246 05da 9B040000 		.4byte	.LASF104
 3247 05de 01       		.byte	0x1
 3248 05df 3E       		.byte	0x3e
 3249 05e0 E0000000 		.4byte	0xe0
 3250 05e4 05       		.uleb128 0x5
 3251 05e5 03       		.byte	0x3
 3252 05e6 3B000000 		.4byte	spinCourseCorrectionStarted
 3253 05ea 10       		.uleb128 0x10
 3254 05eb 4C070000 		.4byte	.LASF105
 3255 05ef 01       		.byte	0x1
 3256 05f0 3F       		.byte	0x3f
 3257 05f1 E0000000 		.4byte	0xe0
 3258 05f5 05       		.uleb128 0x5
 3259 05f6 03       		.byte	0x3
 3260 05f7 3C000000 		.4byte	currentIgnoreL
 3261 05fb 10       		.uleb128 0x10
 3262 05fc 5B070000 		.4byte	.LASF106
 3263 0600 01       		.byte	0x1
 3264 0601 40       		.byte	0x40
 3265 0602 E0000000 		.4byte	0xe0
 3266 0606 05       		.uleb128 0x5
 3267 0607 03       		.byte	0x3
 3268 0608 45000000 		.4byte	currentIgnoreR
 3269 060c 24       		.uleb128 0x24
 3270 060d C1050000 		.4byte	.LASF107
 3271 0611 07       		.byte	0x7
 3272 0612 1207     		.2byte	0x712
 3273 0614 18060000 		.4byte	0x618
 3274 0618 06       		.uleb128 0x6
 3275 0619 8B000000 		.4byte	0x8b
 3276 061d 25       		.uleb128 0x25
 3277 061e 747300   		.ascii	"ts\000"
 3278 0621 05       		.byte	0x5
 3279 0622 10       		.byte	0x10
 3280 0623 96000000 		.4byte	0x96
 3281 0627 05       		.uleb128 0x5
 3282 0628 03       		.byte	0x3
 3283 0629 00000000 		.4byte	ts
 3284 062d 26       		.uleb128 0x26
 3285 062e 35070000 		.4byte	.LASF108
 3286 0632 05       		.byte	0x5
 3287 0633 11       		.byte	0x11
 3288 0634 A2000000 		.4byte	0xa2
 3289 0638 05       		.uleb128 0x5
 3290 0639 03       		.byte	0x3
 3291 063a 00000000 		.4byte	ts_enc
 3292 063e 26       		.uleb128 0x26
 3293 063f CE050000 		.4byte	.LASF109
 3294 0643 05       		.byte	0x5
 3295 0644 12       		.byte	0x12
 3296 0645 A2000000 		.4byte	0xa2
 3297 0649 05       		.uleb128 0x5
 3298 064a 03       		.byte	0x3
 3299 064b 00000000 		.4byte	ts_update
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 72


 3300 064f 26       		.uleb128 0x26
 3301 0650 E7040000 		.4byte	.LASF110
 3302 0654 05       		.byte	0x5
 3303 0655 13       		.byte	0x13
 3304 0656 A2000000 		.4byte	0xa2
 3305 065a 05       		.uleb128 0x5
 3306 065b 03       		.byte	0x3
 3307 065c 00000000 		.4byte	ts_speed
 3308 0660 26       		.uleb128 0x26
 3309 0661 6B030000 		.4byte	.LASF111
 3310 0665 05       		.byte	0x5
 3311 0666 14       		.byte	0x14
 3312 0667 A2000000 		.4byte	0xa2
 3313 066b 05       		.uleb128 0x5
 3314 066c 03       		.byte	0x3
 3315 066d 00000000 		.4byte	ts_display
 3316 0671 26       		.uleb128 0x26
 3317 0672 06030000 		.4byte	.LASF112
 3318 0676 05       		.byte	0x5
 3319 0677 16       		.byte	0x16
 3320 0678 96000000 		.4byte	0x96
 3321 067c 05       		.uleb128 0x5
 3322 067d 03       		.byte	0x3
 3323 067e 00000000 		.4byte	flag_ts_enc
 3324 0682 26       		.uleb128 0x26
 3325 0683 F7020000 		.4byte	.LASF113
 3326 0687 05       		.byte	0x5
 3327 0688 17       		.byte	0x17
 3328 0689 96000000 		.4byte	0x96
 3329 068d 05       		.uleb128 0x5
 3330 068e 03       		.byte	0x3
 3331 068f 00000000 		.4byte	flag_ts_update
 3332 0693 26       		.uleb128 0x26
 3333 0694 72050000 		.4byte	.LASF114
 3334 0698 05       		.byte	0x5
 3335 0699 18       		.byte	0x18
 3336 069a 96000000 		.4byte	0x96
 3337 069e 05       		.uleb128 0x5
 3338 069f 03       		.byte	0x3
 3339 06a0 00000000 		.4byte	flag_ts_speed
 3340 06a4 26       		.uleb128 0x26
 3341 06a5 3C070000 		.4byte	.LASF115
 3342 06a9 05       		.byte	0x5
 3343 06aa 19       		.byte	0x19
 3344 06ab 96000000 		.4byte	0x96
 3345 06af 05       		.uleb128 0x5
 3346 06b0 03       		.byte	0x3
 3347 06b1 00000000 		.4byte	flag_ts_display
 3348 06b5 26       		.uleb128 0x26
 3349 06b6 8F050000 		.4byte	.LASF116
 3350 06ba 05       		.byte	0x5
 3351 06bb 1B       		.byte	0x1b
 3352 06bc 96000000 		.4byte	0x96
 3353 06c0 05       		.uleb128 0x5
 3354 06c1 03       		.byte	0x3
 3355 06c2 00000000 		.4byte	flag_rx
 3356 06c6 26       		.uleb128 0x26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 73


 3357 06c7 BE020000 		.4byte	.LASF117
 3358 06cb 05       		.byte	0x5
 3359 06cc 1C       		.byte	0x1c
 3360 06cd 96000000 		.4byte	0x96
 3361 06d1 05       		.uleb128 0x5
 3362 06d2 03       		.byte	0x3
 3363 06d3 00000000 		.4byte	flag_packet
 3364 06d7 26       		.uleb128 0x26
 3365 06d8 38080000 		.4byte	.LASF118
 3366 06dc 05       		.byte	0x5
 3367 06dd 1D       		.byte	0x1d
 3368 06de 96000000 		.4byte	0x96
 3369 06e2 05       		.uleb128 0x5
 3370 06e3 03       		.byte	0x3
 3371 06e4 00000000 		.4byte	flag_KB_string
 3372 06e8 26       		.uleb128 0x26
 3373 06e9 80050000 		.4byte	.LASF119
 3374 06ed 05       		.byte	0x5
 3375 06ee 1F       		.byte	0x1f
 3376 06ef 96000000 		.4byte	0x96
 3377 06f3 05       		.uleb128 0x5
 3378 06f4 03       		.byte	0x3
 3379 06f5 00000000 		.4byte	dataready_flag
 3380 06f9 26       		.uleb128 0x26
 3381 06fa E1010000 		.4byte	.LASF120
 3382 06fe 05       		.byte	0x5
 3383 06ff 21       		.byte	0x21
 3384 0700 96000000 		.4byte	0x96
 3385 0704 05       		.uleb128 0x5
 3386 0705 03       		.byte	0x3
 3387 0706 00000000 		.4byte	flag_rf_transmission_active
 3388 070a 07       		.uleb128 0x7
 3389 070b 84000000 		.4byte	0x84
 3390 070f 1A070000 		.4byte	0x71a
 3391 0713 08       		.uleb128 0x8
 3392 0714 7D000000 		.4byte	0x7d
 3393 0718 3F       		.byte	0x3f
 3394 0719 00       		.byte	0
 3395 071a 26       		.uleb128 0x26
 3396 071b 6F070000 		.4byte	.LASF121
 3397 071f 05       		.byte	0x5
 3398 0720 24       		.byte	0x24
 3399 0721 0A070000 		.4byte	0x70a
 3400 0725 05       		.uleb128 0x5
 3401 0726 03       		.byte	0x3
 3402 0727 00000000 		.4byte	displaystring
 3403 072b 26       		.uleb128 0x26
 3404 072c EA060000 		.4byte	.LASF122
 3405 0730 05       		.byte	0x5
 3406 0731 25       		.byte	0x25
 3407 0732 0A070000 		.4byte	0x70a
 3408 0736 05       		.uleb128 0x5
 3409 0737 03       		.byte	0x3
 3410 0738 00000000 		.4byte	line
 3411 073c 26       		.uleb128 0x26
 3412 073d B7060000 		.4byte	.LASF123
 3413 0741 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 74


 3414 0742 25       		.byte	0x25
 3415 0743 0A070000 		.4byte	0x70a
 3416 0747 05       		.uleb128 0x5
 3417 0748 03       		.byte	0x3
 3418 0749 00000000 		.4byte	entry
 3419 074d 07       		.uleb128 0x7
 3420 074e 96000000 		.4byte	0x96
 3421 0752 5D070000 		.4byte	0x75d
 3422 0756 08       		.uleb128 0x8
 3423 0757 7D000000 		.4byte	0x7d
 3424 075b 3F       		.byte	0x3f
 3425 075c 00       		.byte	0
 3426 075d 26       		.uleb128 0x26
 3427 075e 85020000 		.4byte	.LASF124
 3428 0762 05       		.byte	0x5
 3429 0763 26       		.byte	0x26
 3430 0764 4D070000 		.4byte	0x74d
 3431 0768 05       		.uleb128 0x5
 3432 0769 03       		.byte	0x3
 3433 076a 00000000 		.4byte	usbBuffer
 3434 076e 26       		.uleb128 0x26
 3435 076f 85000000 		.4byte	.LASF125
 3436 0773 05       		.byte	0x5
 3437 0774 3C       		.byte	0x3c
 3438 0775 FA000000 		.4byte	0xfa
 3439 0779 05       		.uleb128 0x5
 3440 077a 03       		.byte	0x3
 3441 077b 00000000 		.4byte	system_state
 3442 077f 07       		.uleb128 0x7
 3443 0780 68000000 		.4byte	0x68
 3444 0784 95070000 		.4byte	0x795
 3445 0788 08       		.uleb128 0x8
 3446 0789 7D000000 		.4byte	0x7d
 3447 078d 0E       		.byte	0xe
 3448 078e 08       		.uleb128 0x8
 3449 078f 7D000000 		.4byte	0x7d
 3450 0793 12       		.byte	0x12
 3451 0794 00       		.byte	0
 3452 0795 27       		.uleb128 0x27
 3453 0796 6D617000 		.ascii	"map\000"
 3454 079a 08       		.byte	0x8
 3455 079b 04       		.byte	0x4
 3456 079c 7F070000 		.4byte	0x77f
 3457 07a0 07       		.uleb128 0x7
 3458 07a1 68000000 		.4byte	0x68
 3459 07a5 B6070000 		.4byte	0x7b6
 3460 07a9 08       		.uleb128 0x8
 3461 07aa 7D000000 		.4byte	0x7d
 3462 07ae 04       		.byte	0x4
 3463 07af 08       		.uleb128 0x8
 3464 07b0 7D000000 		.4byte	0x7d
 3465 07b4 01       		.byte	0x1
 3466 07b5 00       		.byte	0
 3467 07b6 28       		.uleb128 0x28
 3468 07b7 D4040000 		.4byte	.LASF126
 3469 07bb 08       		.byte	0x8
 3470 07bc 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 75


 3471 07bd A0070000 		.4byte	0x7a0
 3472 07c1 26       		.uleb128 0x26
 3473 07c2 34060000 		.4byte	.LASF127
 3474 07c6 01       		.byte	0x1
 3475 07c7 19       		.byte	0x19
 3476 07c8 7E020000 		.4byte	0x27e
 3477 07cc 05       		.uleb128 0x5
 3478 07cd 03       		.byte	0x3
 3479 07ce 00000000 		.4byte	currentDirection
 3480 07d2 26       		.uleb128 0x26
 3481 07d3 4C050000 		.4byte	.LASF128
 3482 07d7 01       		.byte	0x1
 3483 07d8 19       		.byte	0x19
 3484 07d9 7E020000 		.4byte	0x27e
 3485 07dd 05       		.uleb128 0x5
 3486 07de 03       		.byte	0x3
 3487 07df 00000000 		.4byte	previousDirection
 3488 07e3 26       		.uleb128 0x26
 3489 07e4 15020000 		.4byte	.LASF129
 3490 07e8 01       		.byte	0x1
 3491 07e9 1B       		.byte	0x1b
 3492 07ea D3010000 		.4byte	0x1d3
 3493 07ee 05       		.uleb128 0x5
 3494 07ef 03       		.byte	0x3
 3495 07f0 00000000 		.4byte	currentRobotOrientation
 3496 07f4 26       		.uleb128 0x26
 3497 07f5 81040000 		.4byte	.LASF130
 3498 07f9 01       		.byte	0x1
 3499 07fa 1B       		.byte	0x1b
 3500 07fb D3010000 		.4byte	0x1d3
 3501 07ff 05       		.uleb128 0x5
 3502 0800 03       		.byte	0x3
 3503 0801 00000000 		.4byte	previousOrientation
 3504 0805 26       		.uleb128 0x26
 3505 0806 D4070000 		.4byte	.LASF131
 3506 080a 01       		.byte	0x1
 3507 080b 1C       		.byte	0x1c
 3508 080c 73020000 		.4byte	0x273
 3509 0810 05       		.uleb128 0x5
 3510 0811 03       		.byte	0x3
 3511 0812 00000000 		.4byte	currentInstruction
 3512 0816 26       		.uleb128 0x26
 3513 0817 AC010000 		.4byte	.LASF92
 3514 081b 01       		.byte	0x1
 3515 081c 1D       		.byte	0x1d
 3516 081d 68000000 		.4byte	0x68
 3517 0821 05       		.uleb128 0x5
 3518 0822 03       		.byte	0x3
 3519 0823 00000000 		.4byte	numSteps
 3520 0827 26       		.uleb128 0x26
 3521 0828 D5030000 		.4byte	.LASF93
 3522 082c 01       		.byte	0x1
 3523 082d 1F       		.byte	0x1f
 3524 082e 39050000 		.4byte	0x539
 3525 0832 05       		.uleb128 0x5
 3526 0833 03       		.byte	0x3
 3527 0834 00000000 		.4byte	instructionList
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 76


 3528 0838 25       		.uleb128 0x25
 3529 0839 733300   		.ascii	"s3\000"
 3530 083c 01       		.byte	0x1
 3531 083d 25       		.byte	0x25
 3532 083e 96000000 		.4byte	0x96
 3533 0842 05       		.uleb128 0x5
 3534 0843 03       		.byte	0x3
 3535 0844 00000000 		.4byte	s3
 3536 0848 25       		.uleb128 0x25
 3537 0849 733400   		.ascii	"s4\000"
 3538 084c 01       		.byte	0x1
 3539 084d 25       		.byte	0x25
 3540 084e 96000000 		.4byte	0x96
 3541 0852 05       		.uleb128 0x5
 3542 0853 03       		.byte	0x3
 3543 0854 00000000 		.4byte	s4
 3544 0858 25       		.uleb128 0x25
 3545 0859 733500   		.ascii	"s5\000"
 3546 085c 01       		.byte	0x1
 3547 085d 25       		.byte	0x25
 3548 085e 96000000 		.4byte	0x96
 3549 0862 05       		.uleb128 0x5
 3550 0863 03       		.byte	0x3
 3551 0864 00000000 		.4byte	s5
 3552 0868 25       		.uleb128 0x25
 3553 0869 733600   		.ascii	"s6\000"
 3554 086c 01       		.byte	0x1
 3555 086d 25       		.byte	0x25
 3556 086e 96000000 		.4byte	0x96
 3557 0872 05       		.uleb128 0x5
 3558 0873 03       		.byte	0x3
 3559 0874 00000000 		.4byte	s6
 3560 0878 26       		.uleb128 0x26
 3561 0879 E0050000 		.4byte	.LASF132
 3562 087d 01       		.byte	0x1
 3563 087e 2A       		.byte	0x2a
 3564 087f AE000000 		.4byte	0xae
 3565 0883 05       		.uleb128 0x5
 3566 0884 03       		.byte	0x3
 3567 0885 00000000 		.4byte	totalMilliseconds
 3568 0889 26       		.uleb128 0x26
 3569 088a 78010000 		.4byte	.LASF133
 3570 088e 01       		.byte	0x1
 3571 088f 2B       		.byte	0x2b
 3572 0890 D2000000 		.4byte	0xd2
 3573 0894 05       		.uleb128 0x5
 3574 0895 03       		.byte	0x3
 3575 0896 00000000 		.4byte	totalDistance
 3576 089a 07       		.uleb128 0x7
 3577 089b 84000000 		.4byte	0x84
 3578 089f AA080000 		.4byte	0x8aa
 3579 08a3 08       		.uleb128 0x8
 3580 08a4 7D000000 		.4byte	0x7d
 3581 08a8 44       		.byte	0x44
 3582 08a9 00       		.byte	0
 3583 08aa 26       		.uleb128 0x26
 3584 08ab 61000000 		.4byte	.LASF134
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 77


 3585 08af 01       		.byte	0x1
 3586 08b0 2D       		.byte	0x2d
 3587 08b1 9A080000 		.4byte	0x89a
 3588 08b5 05       		.uleb128 0x5
 3589 08b6 03       		.byte	0x3
 3590 08b7 00000000 		.4byte	buffer
 3591 08bb 26       		.uleb128 0x26
 3592 08bc 55020000 		.4byte	.LASF135
 3593 08c0 01       		.byte	0x1
 3594 08c1 2E       		.byte	0x2e
 3595 08c2 68000000 		.4byte	0x68
 3596 08c6 05       		.uleb128 0x5
 3597 08c7 03       		.byte	0x3
 3598 08c8 00000000 		.4byte	quadDec2Count
 3599 08cc 26       		.uleb128 0x26
 3600 08cd 2F080000 		.4byte	.LASF136
 3601 08d1 01       		.byte	0x1
 3602 08d2 2F       		.byte	0x2f
 3603 08d3 68000000 		.4byte	0x68
 3604 08d7 05       		.uleb128 0x5
 3605 08d8 03       		.byte	0x3
 3606 08d9 00000000 		.4byte	timerInt
 3607 08dd 26       		.uleb128 0x26
 3608 08de E8020000 		.4byte	.LASF137
 3609 08e2 01       		.byte	0x1
 3610 08e3 30       		.byte	0x30
 3611 08e4 68000000 		.4byte	0x68
 3612 08e8 05       		.uleb128 0x5
 3613 08e9 03       		.byte	0x3
 3614 08ea 00000000 		.4byte	keepLedOn
 3615 08ee 26       		.uleb128 0x26
 3616 08ef 87060000 		.4byte	.LASF138
 3617 08f3 01       		.byte	0x1
 3618 08f4 32       		.byte	0x32
 3619 08f5 AE000000 		.4byte	0xae
 3620 08f9 05       		.uleb128 0x5
 3621 08fa 03       		.byte	0x3
 3622 08fb 00000000 		.4byte	stopBuffer
 3623 08ff 26       		.uleb128 0x26
 3624 0900 F0040000 		.4byte	.LASF139
 3625 0904 01       		.byte	0x1
 3626 0905 42       		.byte	0x42
 3627 0906 EA000000 		.4byte	0xea
 3628 090a 05       		.uleb128 0x5
 3629 090b 03       		.byte	0x3
 3630 090c 00000000 		.4byte	junctionConfiguration
 3631 0910 26       		.uleb128 0x26
 3632 0911 72040000 		.4byte	.LASF140
 3633 0915 01       		.byte	0x1
 3634 0916 44       		.byte	0x44
 3635 0917 D2000000 		.4byte	0xd2
 3636 091b 05       		.uleb128 0x5
 3637 091c 03       		.byte	0x3
 3638 091d 00000000 		.4byte	blockSizeTotal
 3639 0921 26       		.uleb128 0x26
 3640 0922 02040000 		.4byte	.LASF141
 3641 0926 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 78


 3642 0927 CA       		.byte	0xca
 3643 0928 D2000000 		.4byte	0xd2
 3644 092c 05       		.uleb128 0x5
 3645 092d 03       		.byte	0x3
 3646 092e 00000000 		.4byte	xBlocksize
 3647 0932 26       		.uleb128 0x26
 3648 0933 97050000 		.4byte	.LASF142
 3649 0937 01       		.byte	0x1
 3650 0938 CB       		.byte	0xcb
 3651 0939 D2000000 		.4byte	0xd2
 3652 093d 05       		.uleb128 0x5
 3653 093e 03       		.byte	0x3
 3654 093f 00000000 		.4byte	yBlocksize
 3655 0943 26       		.uleb128 0x26
 3656 0944 9F070000 		.4byte	.LASF143
 3657 0948 01       		.byte	0x1
 3658 0949 CC       		.byte	0xcc
 3659 094a 96000000 		.4byte	0x96
 3660 094e 05       		.uleb128 0x5
 3661 094f 03       		.byte	0x3
 3662 0950 00000000 		.4byte	currentRow
 3663 0954 26       		.uleb128 0x26
 3664 0955 0D080000 		.4byte	.LASF144
 3665 0959 01       		.byte	0x1
 3666 095a CD       		.byte	0xcd
 3667 095b 96000000 		.4byte	0x96
 3668 095f 05       		.uleb128 0x5
 3669 0960 03       		.byte	0x3
 3670 0961 00000000 		.4byte	currentCol
 3671 0965 26       		.uleb128 0x26
 3672 0966 D9060000 		.4byte	.LASF145
 3673 096a 01       		.byte	0x1
 3674 096b CF       		.byte	0xcf
 3675 096c 96000000 		.4byte	0x96
 3676 0970 05       		.uleb128 0x5
 3677 0971 03       		.byte	0x3
 3678 0972 00000000 		.4byte	stoppedAfterTurn
 3679 0976 26       		.uleb128 0x26
 3680 0977 3A030000 		.4byte	.LASF146
 3681 097b 01       		.byte	0x1
 3682 097c D0       		.byte	0xd0
 3683 097d 96000000 		.4byte	0x96
 3684 0981 05       		.uleb128 0x5
 3685 0982 03       		.byte	0x3
 3686 0983 00000000 		.4byte	ignoreSensor
 3687 0987 26       		.uleb128 0x26
 3688 0988 56060000 		.4byte	.LASF147
 3689 098c 01       		.byte	0x1
 3690 098d F8       		.byte	0xf8
 3691 098e 7E020000 		.4byte	0x27e
 3692 0992 05       		.uleb128 0x5
 3693 0993 03       		.byte	0x3
 3694 0994 00000000 		.4byte	lastDirectionAfter180
 3695 0998 00       		.byte	0
 3696              		.section	.debug_abbrev,"",%progbits
 3697              	.Ldebug_abbrev0:
 3698 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 79


 3699 0001 11       		.uleb128 0x11
 3700 0002 01       		.byte	0x1
 3701 0003 25       		.uleb128 0x25
 3702 0004 0E       		.uleb128 0xe
 3703 0005 13       		.uleb128 0x13
 3704 0006 0B       		.uleb128 0xb
 3705 0007 03       		.uleb128 0x3
 3706 0008 0E       		.uleb128 0xe
 3707 0009 1B       		.uleb128 0x1b
 3708 000a 0E       		.uleb128 0xe
 3709 000b 55       		.uleb128 0x55
 3710 000c 17       		.uleb128 0x17
 3711 000d 11       		.uleb128 0x11
 3712 000e 01       		.uleb128 0x1
 3713 000f 10       		.uleb128 0x10
 3714 0010 17       		.uleb128 0x17
 3715 0011 00       		.byte	0
 3716 0012 00       		.byte	0
 3717 0013 02       		.uleb128 0x2
 3718 0014 24       		.uleb128 0x24
 3719 0015 00       		.byte	0
 3720 0016 0B       		.uleb128 0xb
 3721 0017 0B       		.uleb128 0xb
 3722 0018 3E       		.uleb128 0x3e
 3723 0019 0B       		.uleb128 0xb
 3724 001a 03       		.uleb128 0x3
 3725 001b 0E       		.uleb128 0xe
 3726 001c 00       		.byte	0
 3727 001d 00       		.byte	0
 3728 001e 03       		.uleb128 0x3
 3729 001f 16       		.uleb128 0x16
 3730 0020 00       		.byte	0
 3731 0021 03       		.uleb128 0x3
 3732 0022 0E       		.uleb128 0xe
 3733 0023 3A       		.uleb128 0x3a
 3734 0024 0B       		.uleb128 0xb
 3735 0025 3B       		.uleb128 0x3b
 3736 0026 0B       		.uleb128 0xb
 3737 0027 49       		.uleb128 0x49
 3738 0028 13       		.uleb128 0x13
 3739 0029 00       		.byte	0
 3740 002a 00       		.byte	0
 3741 002b 04       		.uleb128 0x4
 3742 002c 24       		.uleb128 0x24
 3743 002d 00       		.byte	0
 3744 002e 0B       		.uleb128 0xb
 3745 002f 0B       		.uleb128 0xb
 3746 0030 3E       		.uleb128 0x3e
 3747 0031 0B       		.uleb128 0xb
 3748 0032 03       		.uleb128 0x3
 3749 0033 08       		.uleb128 0x8
 3750 0034 00       		.byte	0
 3751 0035 00       		.byte	0
 3752 0036 05       		.uleb128 0x5
 3753 0037 16       		.uleb128 0x16
 3754 0038 00       		.byte	0
 3755 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 80


 3756 003a 0E       		.uleb128 0xe
 3757 003b 3A       		.uleb128 0x3a
 3758 003c 0B       		.uleb128 0xb
 3759 003d 3B       		.uleb128 0x3b
 3760 003e 05       		.uleb128 0x5
 3761 003f 49       		.uleb128 0x49
 3762 0040 13       		.uleb128 0x13
 3763 0041 00       		.byte	0
 3764 0042 00       		.byte	0
 3765 0043 06       		.uleb128 0x6
 3766 0044 35       		.uleb128 0x35
 3767 0045 00       		.byte	0
 3768 0046 49       		.uleb128 0x49
 3769 0047 13       		.uleb128 0x13
 3770 0048 00       		.byte	0
 3771 0049 00       		.byte	0
 3772 004a 07       		.uleb128 0x7
 3773 004b 01       		.uleb128 0x1
 3774 004c 01       		.byte	0x1
 3775 004d 49       		.uleb128 0x49
 3776 004e 13       		.uleb128 0x13
 3777 004f 01       		.uleb128 0x1
 3778 0050 13       		.uleb128 0x13
 3779 0051 00       		.byte	0
 3780 0052 00       		.byte	0
 3781 0053 08       		.uleb128 0x8
 3782 0054 21       		.uleb128 0x21
 3783 0055 00       		.byte	0
 3784 0056 49       		.uleb128 0x49
 3785 0057 13       		.uleb128 0x13
 3786 0058 2F       		.uleb128 0x2f
 3787 0059 0B       		.uleb128 0xb
 3788 005a 00       		.byte	0
 3789 005b 00       		.byte	0
 3790 005c 09       		.uleb128 0x9
 3791 005d 13       		.uleb128 0x13
 3792 005e 01       		.byte	0x1
 3793 005f 03       		.uleb128 0x3
 3794 0060 0E       		.uleb128 0xe
 3795 0061 0B       		.uleb128 0xb
 3796 0062 0B       		.uleb128 0xb
 3797 0063 3A       		.uleb128 0x3a
 3798 0064 0B       		.uleb128 0xb
 3799 0065 3B       		.uleb128 0x3b
 3800 0066 0B       		.uleb128 0xb
 3801 0067 01       		.uleb128 0x1
 3802 0068 13       		.uleb128 0x13
 3803 0069 00       		.byte	0
 3804 006a 00       		.byte	0
 3805 006b 0A       		.uleb128 0xa
 3806 006c 0D       		.uleb128 0xd
 3807 006d 00       		.byte	0
 3808 006e 03       		.uleb128 0x3
 3809 006f 0E       		.uleb128 0xe
 3810 0070 3A       		.uleb128 0x3a
 3811 0071 0B       		.uleb128 0xb
 3812 0072 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 81


 3813 0073 0B       		.uleb128 0xb
 3814 0074 49       		.uleb128 0x49
 3815 0075 13       		.uleb128 0x13
 3816 0076 38       		.uleb128 0x38
 3817 0077 0B       		.uleb128 0xb
 3818 0078 00       		.byte	0
 3819 0079 00       		.byte	0
 3820 007a 0B       		.uleb128 0xb
 3821 007b 04       		.uleb128 0x4
 3822 007c 01       		.byte	0x1
 3823 007d 03       		.uleb128 0x3
 3824 007e 0E       		.uleb128 0xe
 3825 007f 0B       		.uleb128 0xb
 3826 0080 0B       		.uleb128 0xb
 3827 0081 49       		.uleb128 0x49
 3828 0082 13       		.uleb128 0x13
 3829 0083 3A       		.uleb128 0x3a
 3830 0084 0B       		.uleb128 0xb
 3831 0085 3B       		.uleb128 0x3b
 3832 0086 0B       		.uleb128 0xb
 3833 0087 01       		.uleb128 0x1
 3834 0088 13       		.uleb128 0x13
 3835 0089 00       		.byte	0
 3836 008a 00       		.byte	0
 3837 008b 0C       		.uleb128 0xc
 3838 008c 28       		.uleb128 0x28
 3839 008d 00       		.byte	0
 3840 008e 03       		.uleb128 0x3
 3841 008f 08       		.uleb128 0x8
 3842 0090 1C       		.uleb128 0x1c
 3843 0091 0B       		.uleb128 0xb
 3844 0092 00       		.byte	0
 3845 0093 00       		.byte	0
 3846 0094 0D       		.uleb128 0xd
 3847 0095 28       		.uleb128 0x28
 3848 0096 00       		.byte	0
 3849 0097 03       		.uleb128 0x3
 3850 0098 0E       		.uleb128 0xe
 3851 0099 1C       		.uleb128 0x1c
 3852 009a 0B       		.uleb128 0xb
 3853 009b 00       		.byte	0
 3854 009c 00       		.byte	0
 3855 009d 0E       		.uleb128 0xe
 3856 009e 2E       		.uleb128 0x2e
 3857 009f 01       		.byte	0x1
 3858 00a0 3F       		.uleb128 0x3f
 3859 00a1 19       		.uleb128 0x19
 3860 00a2 03       		.uleb128 0x3
 3861 00a3 0E       		.uleb128 0xe
 3862 00a4 3A       		.uleb128 0x3a
 3863 00a5 0B       		.uleb128 0xb
 3864 00a6 3B       		.uleb128 0x3b
 3865 00a7 0B       		.uleb128 0xb
 3866 00a8 27       		.uleb128 0x27
 3867 00a9 19       		.uleb128 0x19
 3868 00aa 11       		.uleb128 0x11
 3869 00ab 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 82


 3870 00ac 12       		.uleb128 0x12
 3871 00ad 06       		.uleb128 0x6
 3872 00ae 40       		.uleb128 0x40
 3873 00af 18       		.uleb128 0x18
 3874 00b0 9642     		.uleb128 0x2116
 3875 00b2 19       		.uleb128 0x19
 3876 00b3 01       		.uleb128 0x1
 3877 00b4 13       		.uleb128 0x13
 3878 00b5 00       		.byte	0
 3879 00b6 00       		.byte	0
 3880 00b7 0F       		.uleb128 0xf
 3881 00b8 0B       		.uleb128 0xb
 3882 00b9 01       		.byte	0x1
 3883 00ba 11       		.uleb128 0x11
 3884 00bb 01       		.uleb128 0x1
 3885 00bc 12       		.uleb128 0x12
 3886 00bd 06       		.uleb128 0x6
 3887 00be 00       		.byte	0
 3888 00bf 00       		.byte	0
 3889 00c0 10       		.uleb128 0x10
 3890 00c1 34       		.uleb128 0x34
 3891 00c2 00       		.byte	0
 3892 00c3 03       		.uleb128 0x3
 3893 00c4 0E       		.uleb128 0xe
 3894 00c5 3A       		.uleb128 0x3a
 3895 00c6 0B       		.uleb128 0xb
 3896 00c7 3B       		.uleb128 0x3b
 3897 00c8 0B       		.uleb128 0xb
 3898 00c9 49       		.uleb128 0x49
 3899 00ca 13       		.uleb128 0x13
 3900 00cb 02       		.uleb128 0x2
 3901 00cc 18       		.uleb128 0x18
 3902 00cd 00       		.byte	0
 3903 00ce 00       		.byte	0
 3904 00cf 11       		.uleb128 0x11
 3905 00d0 2E       		.uleb128 0x2e
 3906 00d1 00       		.byte	0
 3907 00d2 3F       		.uleb128 0x3f
 3908 00d3 19       		.uleb128 0x19
 3909 00d4 03       		.uleb128 0x3
 3910 00d5 0E       		.uleb128 0xe
 3911 00d6 3A       		.uleb128 0x3a
 3912 00d7 0B       		.uleb128 0xb
 3913 00d8 3B       		.uleb128 0x3b
 3914 00d9 0B       		.uleb128 0xb
 3915 00da 27       		.uleb128 0x27
 3916 00db 19       		.uleb128 0x19
 3917 00dc 11       		.uleb128 0x11
 3918 00dd 01       		.uleb128 0x1
 3919 00de 12       		.uleb128 0x12
 3920 00df 06       		.uleb128 0x6
 3921 00e0 40       		.uleb128 0x40
 3922 00e1 18       		.uleb128 0x18
 3923 00e2 9742     		.uleb128 0x2117
 3924 00e4 19       		.uleb128 0x19
 3925 00e5 00       		.byte	0
 3926 00e6 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 83


 3927 00e7 12       		.uleb128 0x12
 3928 00e8 2E       		.uleb128 0x2e
 3929 00e9 00       		.byte	0
 3930 00ea 3F       		.uleb128 0x3f
 3931 00eb 19       		.uleb128 0x19
 3932 00ec 03       		.uleb128 0x3
 3933 00ed 0E       		.uleb128 0xe
 3934 00ee 3A       		.uleb128 0x3a
 3935 00ef 0B       		.uleb128 0xb
 3936 00f0 3B       		.uleb128 0x3b
 3937 00f1 0B       		.uleb128 0xb
 3938 00f2 27       		.uleb128 0x27
 3939 00f3 19       		.uleb128 0x19
 3940 00f4 11       		.uleb128 0x11
 3941 00f5 01       		.uleb128 0x1
 3942 00f6 12       		.uleb128 0x12
 3943 00f7 06       		.uleb128 0x6
 3944 00f8 40       		.uleb128 0x40
 3945 00f9 18       		.uleb128 0x18
 3946 00fa 9642     		.uleb128 0x2116
 3947 00fc 19       		.uleb128 0x19
 3948 00fd 00       		.byte	0
 3949 00fe 00       		.byte	0
 3950 00ff 13       		.uleb128 0x13
 3951 0100 2E       		.uleb128 0x2e
 3952 0101 00       		.byte	0
 3953 0102 3F       		.uleb128 0x3f
 3954 0103 19       		.uleb128 0x19
 3955 0104 03       		.uleb128 0x3
 3956 0105 0E       		.uleb128 0xe
 3957 0106 3A       		.uleb128 0x3a
 3958 0107 0B       		.uleb128 0xb
 3959 0108 3B       		.uleb128 0x3b
 3960 0109 0B       		.uleb128 0xb
 3961 010a 49       		.uleb128 0x49
 3962 010b 13       		.uleb128 0x13
 3963 010c 11       		.uleb128 0x11
 3964 010d 01       		.uleb128 0x1
 3965 010e 12       		.uleb128 0x12
 3966 010f 06       		.uleb128 0x6
 3967 0110 40       		.uleb128 0x40
 3968 0111 18       		.uleb128 0x18
 3969 0112 9642     		.uleb128 0x2116
 3970 0114 19       		.uleb128 0x19
 3971 0115 00       		.byte	0
 3972 0116 00       		.byte	0
 3973 0117 14       		.uleb128 0x14
 3974 0118 2E       		.uleb128 0x2e
 3975 0119 01       		.byte	0x1
 3976 011a 3F       		.uleb128 0x3f
 3977 011b 19       		.uleb128 0x19
 3978 011c 03       		.uleb128 0x3
 3979 011d 0E       		.uleb128 0xe
 3980 011e 3A       		.uleb128 0x3a
 3981 011f 0B       		.uleb128 0xb
 3982 0120 3B       		.uleb128 0x3b
 3983 0121 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 84


 3984 0122 27       		.uleb128 0x27
 3985 0123 19       		.uleb128 0x19
 3986 0124 49       		.uleb128 0x49
 3987 0125 13       		.uleb128 0x13
 3988 0126 11       		.uleb128 0x11
 3989 0127 01       		.uleb128 0x1
 3990 0128 12       		.uleb128 0x12
 3991 0129 06       		.uleb128 0x6
 3992 012a 40       		.uleb128 0x40
 3993 012b 18       		.uleb128 0x18
 3994 012c 9642     		.uleb128 0x2116
 3995 012e 19       		.uleb128 0x19
 3996 012f 01       		.uleb128 0x1
 3997 0130 13       		.uleb128 0x13
 3998 0131 00       		.byte	0
 3999 0132 00       		.byte	0
 4000 0133 15       		.uleb128 0x15
 4001 0134 05       		.uleb128 0x5
 4002 0135 00       		.byte	0
 4003 0136 03       		.uleb128 0x3
 4004 0137 0E       		.uleb128 0xe
 4005 0138 3A       		.uleb128 0x3a
 4006 0139 0B       		.uleb128 0xb
 4007 013a 3B       		.uleb128 0x3b
 4008 013b 0B       		.uleb128 0xb
 4009 013c 49       		.uleb128 0x49
 4010 013d 13       		.uleb128 0x13
 4011 013e 02       		.uleb128 0x2
 4012 013f 18       		.uleb128 0x18
 4013 0140 00       		.byte	0
 4014 0141 00       		.byte	0
 4015 0142 16       		.uleb128 0x16
 4016 0143 34       		.uleb128 0x34
 4017 0144 00       		.byte	0
 4018 0145 03       		.uleb128 0x3
 4019 0146 08       		.uleb128 0x8
 4020 0147 3A       		.uleb128 0x3a
 4021 0148 0B       		.uleb128 0xb
 4022 0149 3B       		.uleb128 0x3b
 4023 014a 0B       		.uleb128 0xb
 4024 014b 49       		.uleb128 0x49
 4025 014c 13       		.uleb128 0x13
 4026 014d 02       		.uleb128 0x2
 4027 014e 18       		.uleb128 0x18
 4028 014f 00       		.byte	0
 4029 0150 00       		.byte	0
 4030 0151 17       		.uleb128 0x17
 4031 0152 2E       		.uleb128 0x2e
 4032 0153 00       		.byte	0
 4033 0154 3F       		.uleb128 0x3f
 4034 0155 19       		.uleb128 0x19
 4035 0156 03       		.uleb128 0x3
 4036 0157 0E       		.uleb128 0xe
 4037 0158 3A       		.uleb128 0x3a
 4038 0159 0B       		.uleb128 0xb
 4039 015a 3B       		.uleb128 0x3b
 4040 015b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 85


 4041 015c 11       		.uleb128 0x11
 4042 015d 01       		.uleb128 0x1
 4043 015e 12       		.uleb128 0x12
 4044 015f 06       		.uleb128 0x6
 4045 0160 40       		.uleb128 0x40
 4046 0161 18       		.uleb128 0x18
 4047 0162 9742     		.uleb128 0x2117
 4048 0164 19       		.uleb128 0x19
 4049 0165 00       		.byte	0
 4050 0166 00       		.byte	0
 4051 0167 18       		.uleb128 0x18
 4052 0168 2E       		.uleb128 0x2e
 4053 0169 00       		.byte	0
 4054 016a 3F       		.uleb128 0x3f
 4055 016b 19       		.uleb128 0x19
 4056 016c 03       		.uleb128 0x3
 4057 016d 0E       		.uleb128 0xe
 4058 016e 3A       		.uleb128 0x3a
 4059 016f 0B       		.uleb128 0xb
 4060 0170 3B       		.uleb128 0x3b
 4061 0171 0B       		.uleb128 0xb
 4062 0172 49       		.uleb128 0x49
 4063 0173 13       		.uleb128 0x13
 4064 0174 11       		.uleb128 0x11
 4065 0175 01       		.uleb128 0x1
 4066 0176 12       		.uleb128 0x12
 4067 0177 06       		.uleb128 0x6
 4068 0178 40       		.uleb128 0x40
 4069 0179 18       		.uleb128 0x18
 4070 017a 9742     		.uleb128 0x2117
 4071 017c 19       		.uleb128 0x19
 4072 017d 00       		.byte	0
 4073 017e 00       		.byte	0
 4074 017f 19       		.uleb128 0x19
 4075 0180 2E       		.uleb128 0x2e
 4076 0181 01       		.byte	0x1
 4077 0182 3F       		.uleb128 0x3f
 4078 0183 19       		.uleb128 0x19
 4079 0184 03       		.uleb128 0x3
 4080 0185 0E       		.uleb128 0xe
 4081 0186 3A       		.uleb128 0x3a
 4082 0187 0B       		.uleb128 0xb
 4083 0188 3B       		.uleb128 0x3b
 4084 0189 05       		.uleb128 0x5
 4085 018a 49       		.uleb128 0x49
 4086 018b 13       		.uleb128 0x13
 4087 018c 11       		.uleb128 0x11
 4088 018d 01       		.uleb128 0x1
 4089 018e 12       		.uleb128 0x12
 4090 018f 06       		.uleb128 0x6
 4091 0190 40       		.uleb128 0x40
 4092 0191 18       		.uleb128 0x18
 4093 0192 9642     		.uleb128 0x2116
 4094 0194 19       		.uleb128 0x19
 4095 0195 01       		.uleb128 0x1
 4096 0196 13       		.uleb128 0x13
 4097 0197 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 86


 4098 0198 00       		.byte	0
 4099 0199 1A       		.uleb128 0x1a
 4100 019a 34       		.uleb128 0x34
 4101 019b 00       		.byte	0
 4102 019c 03       		.uleb128 0x3
 4103 019d 0E       		.uleb128 0xe
 4104 019e 3A       		.uleb128 0x3a
 4105 019f 0B       		.uleb128 0xb
 4106 01a0 3B       		.uleb128 0x3b
 4107 01a1 05       		.uleb128 0x5
 4108 01a2 49       		.uleb128 0x49
 4109 01a3 13       		.uleb128 0x13
 4110 01a4 02       		.uleb128 0x2
 4111 01a5 18       		.uleb128 0x18
 4112 01a6 00       		.byte	0
 4113 01a7 00       		.byte	0
 4114 01a8 1B       		.uleb128 0x1b
 4115 01a9 2E       		.uleb128 0x2e
 4116 01aa 01       		.byte	0x1
 4117 01ab 3F       		.uleb128 0x3f
 4118 01ac 19       		.uleb128 0x19
 4119 01ad 03       		.uleb128 0x3
 4120 01ae 0E       		.uleb128 0xe
 4121 01af 3A       		.uleb128 0x3a
 4122 01b0 0B       		.uleb128 0xb
 4123 01b1 3B       		.uleb128 0x3b
 4124 01b2 05       		.uleb128 0x5
 4125 01b3 27       		.uleb128 0x27
 4126 01b4 19       		.uleb128 0x19
 4127 01b5 49       		.uleb128 0x49
 4128 01b6 13       		.uleb128 0x13
 4129 01b7 11       		.uleb128 0x11
 4130 01b8 01       		.uleb128 0x1
 4131 01b9 12       		.uleb128 0x12
 4132 01ba 06       		.uleb128 0x6
 4133 01bb 40       		.uleb128 0x40
 4134 01bc 18       		.uleb128 0x18
 4135 01bd 9642     		.uleb128 0x2116
 4136 01bf 19       		.uleb128 0x19
 4137 01c0 01       		.uleb128 0x1
 4138 01c1 13       		.uleb128 0x13
 4139 01c2 00       		.byte	0
 4140 01c3 00       		.byte	0
 4141 01c4 1C       		.uleb128 0x1c
 4142 01c5 05       		.uleb128 0x5
 4143 01c6 00       		.byte	0
 4144 01c7 03       		.uleb128 0x3
 4145 01c8 0E       		.uleb128 0xe
 4146 01c9 3A       		.uleb128 0x3a
 4147 01ca 0B       		.uleb128 0xb
 4148 01cb 3B       		.uleb128 0x3b
 4149 01cc 05       		.uleb128 0x5
 4150 01cd 49       		.uleb128 0x49
 4151 01ce 13       		.uleb128 0x13
 4152 01cf 02       		.uleb128 0x2
 4153 01d0 18       		.uleb128 0x18
 4154 01d1 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 87


 4155 01d2 00       		.byte	0
 4156 01d3 1D       		.uleb128 0x1d
 4157 01d4 0B       		.uleb128 0xb
 4158 01d5 01       		.byte	0x1
 4159 01d6 55       		.uleb128 0x55
 4160 01d7 17       		.uleb128 0x17
 4161 01d8 01       		.uleb128 0x1
 4162 01d9 13       		.uleb128 0x13
 4163 01da 00       		.byte	0
 4164 01db 00       		.byte	0
 4165 01dc 1E       		.uleb128 0x1e
 4166 01dd 34       		.uleb128 0x34
 4167 01de 00       		.byte	0
 4168 01df 03       		.uleb128 0x3
 4169 01e0 08       		.uleb128 0x8
 4170 01e1 3A       		.uleb128 0x3a
 4171 01e2 0B       		.uleb128 0xb
 4172 01e3 3B       		.uleb128 0x3b
 4173 01e4 05       		.uleb128 0x5
 4174 01e5 49       		.uleb128 0x49
 4175 01e6 13       		.uleb128 0x13
 4176 01e7 02       		.uleb128 0x2
 4177 01e8 18       		.uleb128 0x18
 4178 01e9 00       		.byte	0
 4179 01ea 00       		.byte	0
 4180 01eb 1F       		.uleb128 0x1f
 4181 01ec 0B       		.uleb128 0xb
 4182 01ed 01       		.byte	0x1
 4183 01ee 55       		.uleb128 0x55
 4184 01ef 17       		.uleb128 0x17
 4185 01f0 00       		.byte	0
 4186 01f1 00       		.byte	0
 4187 01f2 20       		.uleb128 0x20
 4188 01f3 2E       		.uleb128 0x2e
 4189 01f4 00       		.byte	0
 4190 01f5 3F       		.uleb128 0x3f
 4191 01f6 19       		.uleb128 0x19
 4192 01f7 03       		.uleb128 0x3
 4193 01f8 0E       		.uleb128 0xe
 4194 01f9 3A       		.uleb128 0x3a
 4195 01fa 0B       		.uleb128 0xb
 4196 01fb 3B       		.uleb128 0x3b
 4197 01fc 05       		.uleb128 0x5
 4198 01fd 11       		.uleb128 0x11
 4199 01fe 01       		.uleb128 0x1
 4200 01ff 12       		.uleb128 0x12
 4201 0200 06       		.uleb128 0x6
 4202 0201 40       		.uleb128 0x40
 4203 0202 18       		.uleb128 0x18
 4204 0203 9742     		.uleb128 0x2117
 4205 0205 19       		.uleb128 0x19
 4206 0206 00       		.byte	0
 4207 0207 00       		.byte	0
 4208 0208 21       		.uleb128 0x21
 4209 0209 2E       		.uleb128 0x2e
 4210 020a 01       		.byte	0x1
 4211 020b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 88


 4212 020c 19       		.uleb128 0x19
 4213 020d 03       		.uleb128 0x3
 4214 020e 0E       		.uleb128 0xe
 4215 020f 3A       		.uleb128 0x3a
 4216 0210 0B       		.uleb128 0xb
 4217 0211 3B       		.uleb128 0x3b
 4218 0212 05       		.uleb128 0x5
 4219 0213 27       		.uleb128 0x27
 4220 0214 19       		.uleb128 0x19
 4221 0215 49       		.uleb128 0x49
 4222 0216 13       		.uleb128 0x13
 4223 0217 11       		.uleb128 0x11
 4224 0218 01       		.uleb128 0x1
 4225 0219 12       		.uleb128 0x12
 4226 021a 06       		.uleb128 0x6
 4227 021b 40       		.uleb128 0x40
 4228 021c 18       		.uleb128 0x18
 4229 021d 9742     		.uleb128 0x2117
 4230 021f 19       		.uleb128 0x19
 4231 0220 01       		.uleb128 0x1
 4232 0221 13       		.uleb128 0x13
 4233 0222 00       		.byte	0
 4234 0223 00       		.byte	0
 4235 0224 22       		.uleb128 0x22
 4236 0225 0F       		.uleb128 0xf
 4237 0226 00       		.byte	0
 4238 0227 0B       		.uleb128 0xb
 4239 0228 0B       		.uleb128 0xb
 4240 0229 49       		.uleb128 0x49
 4241 022a 13       		.uleb128 0x13
 4242 022b 00       		.byte	0
 4243 022c 00       		.byte	0
 4244 022d 23       		.uleb128 0x23
 4245 022e 2E       		.uleb128 0x2e
 4246 022f 00       		.byte	0
 4247 0230 3F       		.uleb128 0x3f
 4248 0231 19       		.uleb128 0x19
 4249 0232 03       		.uleb128 0x3
 4250 0233 0E       		.uleb128 0xe
 4251 0234 3A       		.uleb128 0x3a
 4252 0235 0B       		.uleb128 0xb
 4253 0236 3B       		.uleb128 0x3b
 4254 0237 05       		.uleb128 0x5
 4255 0238 11       		.uleb128 0x11
 4256 0239 01       		.uleb128 0x1
 4257 023a 12       		.uleb128 0x12
 4258 023b 06       		.uleb128 0x6
 4259 023c 40       		.uleb128 0x40
 4260 023d 18       		.uleb128 0x18
 4261 023e 9642     		.uleb128 0x2116
 4262 0240 19       		.uleb128 0x19
 4263 0241 00       		.byte	0
 4264 0242 00       		.byte	0
 4265 0243 24       		.uleb128 0x24
 4266 0244 34       		.uleb128 0x34
 4267 0245 00       		.byte	0
 4268 0246 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 89


 4269 0247 0E       		.uleb128 0xe
 4270 0248 3A       		.uleb128 0x3a
 4271 0249 0B       		.uleb128 0xb
 4272 024a 3B       		.uleb128 0x3b
 4273 024b 05       		.uleb128 0x5
 4274 024c 49       		.uleb128 0x49
 4275 024d 13       		.uleb128 0x13
 4276 024e 3F       		.uleb128 0x3f
 4277 024f 19       		.uleb128 0x19
 4278 0250 3C       		.uleb128 0x3c
 4279 0251 19       		.uleb128 0x19
 4280 0252 00       		.byte	0
 4281 0253 00       		.byte	0
 4282 0254 25       		.uleb128 0x25
 4283 0255 34       		.uleb128 0x34
 4284 0256 00       		.byte	0
 4285 0257 03       		.uleb128 0x3
 4286 0258 08       		.uleb128 0x8
 4287 0259 3A       		.uleb128 0x3a
 4288 025a 0B       		.uleb128 0xb
 4289 025b 3B       		.uleb128 0x3b
 4290 025c 0B       		.uleb128 0xb
 4291 025d 49       		.uleb128 0x49
 4292 025e 13       		.uleb128 0x13
 4293 025f 3F       		.uleb128 0x3f
 4294 0260 19       		.uleb128 0x19
 4295 0261 02       		.uleb128 0x2
 4296 0262 18       		.uleb128 0x18
 4297 0263 00       		.byte	0
 4298 0264 00       		.byte	0
 4299 0265 26       		.uleb128 0x26
 4300 0266 34       		.uleb128 0x34
 4301 0267 00       		.byte	0
 4302 0268 03       		.uleb128 0x3
 4303 0269 0E       		.uleb128 0xe
 4304 026a 3A       		.uleb128 0x3a
 4305 026b 0B       		.uleb128 0xb
 4306 026c 3B       		.uleb128 0x3b
 4307 026d 0B       		.uleb128 0xb
 4308 026e 49       		.uleb128 0x49
 4309 026f 13       		.uleb128 0x13
 4310 0270 3F       		.uleb128 0x3f
 4311 0271 19       		.uleb128 0x19
 4312 0272 02       		.uleb128 0x2
 4313 0273 18       		.uleb128 0x18
 4314 0274 00       		.byte	0
 4315 0275 00       		.byte	0
 4316 0276 27       		.uleb128 0x27
 4317 0277 34       		.uleb128 0x34
 4318 0278 00       		.byte	0
 4319 0279 03       		.uleb128 0x3
 4320 027a 08       		.uleb128 0x8
 4321 027b 3A       		.uleb128 0x3a
 4322 027c 0B       		.uleb128 0xb
 4323 027d 3B       		.uleb128 0x3b
 4324 027e 0B       		.uleb128 0xb
 4325 027f 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 90


 4326 0280 13       		.uleb128 0x13
 4327 0281 3F       		.uleb128 0x3f
 4328 0282 19       		.uleb128 0x19
 4329 0283 3C       		.uleb128 0x3c
 4330 0284 19       		.uleb128 0x19
 4331 0285 00       		.byte	0
 4332 0286 00       		.byte	0
 4333 0287 28       		.uleb128 0x28
 4334 0288 34       		.uleb128 0x34
 4335 0289 00       		.byte	0
 4336 028a 03       		.uleb128 0x3
 4337 028b 0E       		.uleb128 0xe
 4338 028c 3A       		.uleb128 0x3a
 4339 028d 0B       		.uleb128 0xb
 4340 028e 3B       		.uleb128 0x3b
 4341 028f 0B       		.uleb128 0xb
 4342 0290 49       		.uleb128 0x49
 4343 0291 13       		.uleb128 0x13
 4344 0292 3F       		.uleb128 0x3f
 4345 0293 19       		.uleb128 0x19
 4346 0294 3C       		.uleb128 0x3c
 4347 0295 19       		.uleb128 0x19
 4348 0296 00       		.byte	0
 4349 0297 00       		.byte	0
 4350 0298 00       		.byte	0
 4351              		.section	.debug_aranges,"",%progbits
 4352 0000 94000000 		.4byte	0x94
 4353 0004 0200     		.2byte	0x2
 4354 0006 00000000 		.4byte	.Ldebug_info0
 4355 000a 04       		.byte	0x4
 4356 000b 00       		.byte	0
 4357 000c 0000     		.2byte	0
 4358 000e 0000     		.2byte	0
 4359 0010 00000000 		.4byte	.LFB64
 4360 0014 EC000000 		.4byte	.LFE64-.LFB64
 4361 0018 00000000 		.4byte	.LFB65
 4362 001c 18000000 		.4byte	.LFE65-.LFB65
 4363 0020 00000000 		.4byte	.LFB66
 4364 0024 18000000 		.4byte	.LFE66-.LFB66
 4365 0028 00000000 		.4byte	.LFB67
 4366 002c 18000000 		.4byte	.LFE67-.LFB67
 4367 0030 00000000 		.4byte	.LFB68
 4368 0034 18000000 		.4byte	.LFE68-.LFB68
 4369 0038 00000000 		.4byte	.LFB69
 4370 003c 38000000 		.4byte	.LFE69-.LFB69
 4371 0040 00000000 		.4byte	.LFB70
 4372 0044 14010000 		.4byte	.LFE70-.LFB70
 4373 0048 00000000 		.4byte	.LFB71
 4374 004c 54000000 		.4byte	.LFE71-.LFB71
 4375 0050 00000000 		.4byte	.LFB72
 4376 0054 34000000 		.4byte	.LFE72-.LFB72
 4377 0058 00000000 		.4byte	.LFB73
 4378 005c 84000000 		.4byte	.LFE73-.LFB73
 4379 0060 00000000 		.4byte	.LFB74
 4380 0064 7C000000 		.4byte	.LFE74-.LFB74
 4381 0068 00000000 		.4byte	.LFB75
 4382 006c 50040000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 91


 4383 0070 00000000 		.4byte	.LFB76
 4384 0074 90020000 		.4byte	.LFE76-.LFB76
 4385 0078 00000000 		.4byte	.LFB77
 4386 007c 5C000000 		.4byte	.LFE77-.LFB77
 4387 0080 00000000 		.4byte	.LFB78
 4388 0084 44000000 		.4byte	.LFE78-.LFB78
 4389 0088 00000000 		.4byte	.LFB79
 4390 008c C4000000 		.4byte	.LFE79-.LFB79
 4391 0090 00000000 		.4byte	0
 4392 0094 00000000 		.4byte	0
 4393              		.section	.debug_ranges,"",%progbits
 4394              	.Ldebug_ranges0:
 4395 0000 38000000 		.4byte	.LBB3
 4396 0004 BC000000 		.4byte	.LBE3
 4397 0008 BE000000 		.4byte	.LBB4
 4398 000c C0000000 		.4byte	.LBE4
 4399 0010 00000000 		.4byte	0
 4400 0014 00000000 		.4byte	0
 4401 0018 C2000000 		.4byte	.LBB5
 4402 001c 46010000 		.4byte	.LBE5
 4403 0020 48010000 		.4byte	.LBB6
 4404 0024 4A010000 		.4byte	.LBE6
 4405 0028 00000000 		.4byte	0
 4406 002c 00000000 		.4byte	0
 4407 0030 4C010000 		.4byte	.LBB7
 4408 0034 D0010000 		.4byte	.LBE7
 4409 0038 D2010000 		.4byte	.LBB8
 4410 003c D4010000 		.4byte	.LBE8
 4411 0040 00000000 		.4byte	0
 4412 0044 00000000 		.4byte	0
 4413 0048 D6010000 		.4byte	.LBB9
 4414 004c 5A020000 		.4byte	.LBE9
 4415 0050 5C020000 		.4byte	.LBB10
 4416 0054 5E020000 		.4byte	.LBE10
 4417 0058 00000000 		.4byte	0
 4418 005c 00000000 		.4byte	0
 4419 0060 00000000 		.4byte	.LFB64
 4420 0064 EC000000 		.4byte	.LFE64
 4421 0068 00000000 		.4byte	.LFB65
 4422 006c 18000000 		.4byte	.LFE65
 4423 0070 00000000 		.4byte	.LFB66
 4424 0074 18000000 		.4byte	.LFE66
 4425 0078 00000000 		.4byte	.LFB67
 4426 007c 18000000 		.4byte	.LFE67
 4427 0080 00000000 		.4byte	.LFB68
 4428 0084 18000000 		.4byte	.LFE68
 4429 0088 00000000 		.4byte	.LFB69
 4430 008c 38000000 		.4byte	.LFE69
 4431 0090 00000000 		.4byte	.LFB70
 4432 0094 14010000 		.4byte	.LFE70
 4433 0098 00000000 		.4byte	.LFB71
 4434 009c 54000000 		.4byte	.LFE71
 4435 00a0 00000000 		.4byte	.LFB72
 4436 00a4 34000000 		.4byte	.LFE72
 4437 00a8 00000000 		.4byte	.LFB73
 4438 00ac 84000000 		.4byte	.LFE73
 4439 00b0 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 92


 4440 00b4 7C000000 		.4byte	.LFE74
 4441 00b8 00000000 		.4byte	.LFB75
 4442 00bc 50040000 		.4byte	.LFE75
 4443 00c0 00000000 		.4byte	.LFB76
 4444 00c4 90020000 		.4byte	.LFE76
 4445 00c8 00000000 		.4byte	.LFB77
 4446 00cc 5C000000 		.4byte	.LFE77
 4447 00d0 00000000 		.4byte	.LFB78
 4448 00d4 44000000 		.4byte	.LFE78
 4449 00d8 00000000 		.4byte	.LFB79
 4450 00dc C4000000 		.4byte	.LFE79
 4451 00e0 00000000 		.4byte	0
 4452 00e4 00000000 		.4byte	0
 4453              		.section	.debug_line,"",%progbits
 4454              	.Ldebug_line0:
 4455 0000 9F040000 		.section	.debug_str,"MS",%progbits,1
 4455      02007001 
 4455      00000201 
 4455      FB0E0D00 
 4455      01010101 
 4456              	.LASF52:
 4457 0000 64697265 		.ascii	"direction\000"
 4457      6374696F 
 4457      6E00
 4458              	.LASF65:
 4459 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4459      61726441 
 4459      66746572 
 4459      5475726E 
 4459      00
 4460              	.LASF42:
 4461 001b 496E7374 		.ascii	"InstructionDirection\000"
 4461      72756374 
 4461      696F6E44 
 4461      69726563 
 4461      74696F6E 
 4462              	.LASF149:
 4463 0030 6D61696E 		.ascii	"main.c\000"
 4463      2E6300
 4464              	.LASF103:
 4465 0037 72696768 		.ascii	"rightStatusFlag\000"
 4465      74537461 
 4465      74757346 
 4465      6C616700 
 4466              	.LASF97:
 4467 0047 7475726E 		.ascii	"turnStartedFlag\000"
 4467      53746172 
 4467      74656446 
 4467      6C616700 
 4468              	.LASF79:
 4469 0057 626C6F63 		.ascii	"blocksize\000"
 4469      6B73697A 
 4469      6500
 4470              	.LASF134:
 4471 0061 62756666 		.ascii	"buffer\000"
 4471      657200
 4472              	.LASF8:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 93


 4473 0068 756E7369 		.ascii	"unsigned int\000"
 4473      676E6564 
 4473      20696E74 
 4473      00
 4474              	.LASF12:
 4475 0075 5F5F696E 		.ascii	"__int32_t\000"
 4475      7433325F 
 4475      7400
 4476              	.LASF18:
 4477 007f 696E7431 		.ascii	"int16\000"
 4477      3600
 4478              	.LASF125:
 4479 0085 73797374 		.ascii	"system_state\000"
 4479      656D5F73 
 4479      74617465 
 4479      00
 4480              	.LASF94:
 4481 0092 6E657874 		.ascii	"nextInstruction\000"
 4481      496E7374 
 4481      72756374 
 4481      696F6E00 
 4482              	.LASF148:
 4483 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4483      43313120 
 4483      352E342E 
 4483      31203230 
 4483      31363036 
 4484 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4484      20726576 
 4484      6973696F 
 4484      6E203233 
 4484      37373135 
 4485 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4485      66756E63 
 4485      74696F6E 
 4485      2D736563 
 4485      74696F6E 
 4486              	.LASF47:
 4487 0130 466F7277 		.ascii	"ForwardUntilTarget\000"
 4487      61726455 
 4487      6E74696C 
 4487      54617267 
 4487      657400
 4488              	.LASF55:
 4489 0143 65787065 		.ascii	"expectedOrientation\000"
 4489      63746564 
 4489      4F726965 
 4489      6E746174 
 4489      696F6E00 
 4490              	.LASF76:
 4491 0157 5370696E 		.ascii	"SpinCourseCorrection\000"
 4491      436F7572 
 4491      7365436F 
 4491      72726563 
 4491      74696F6E 
 4492              	.LASF71:
 4493 016c 53365F44 		.ascii	"S6_DETECTED\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 94


 4493      45544543 
 4493      54454400 
 4494              	.LASF133:
 4495 0178 746F7461 		.ascii	"totalDistance\000"
 4495      6C446973 
 4495      74616E63 
 4495      6500
 4496              	.LASF34:
 4497 0186 67325F78 		.ascii	"g2_xpos\000"
 4497      706F7300 
 4498              	.LASF99:
 4499 018e 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4499      61726455 
 4499      6E74696C 
 4499      54617267 
 4499      65745374 
 4500              	.LASF92:
 4501 01ac 6E756D53 		.ascii	"numSteps\000"
 4501      74657073 
 4501      00
 4502              	.LASF86:
 4503 01b5 74617267 		.ascii	"targetRow\000"
 4503      6574526F 
 4503      7700
 4504              	.LASF78:
 4505 01bf 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4505      6F76656D 
 4505      656E7441 
 4505      63636F72 
 4505      64696E67 
 4506              	.LASF120:
 4507 01e1 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4507      5F72665F 
 4507      7472616E 
 4507      736D6973 
 4507      73696F6E 
 4508              	.LASF75:
 4509 01fd 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4509      61726443 
 4509      6F757273 
 4509      65436F72 
 4509      72656374 
 4510              	.LASF129:
 4511 0215 63757272 		.ascii	"currentRobotOrientation\000"
 4511      656E7452 
 4511      6F626F74 
 4511      4F726965 
 4511      6E746174 
 4512              	.LASF89:
 4513 022d 52657365 		.ascii	"ResetSensorFlags\000"
 4513      7453656E 
 4513      736F7246 
 4513      6C616773 
 4513      00
 4514              	.LASF37:
 4515 023e 67325F64 		.ascii	"g2_direction\000"
 4515      69726563 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 95


 4515      74696F6E 
 4515      00
 4516              	.LASF87:
 4517 024b 74617267 		.ascii	"targetCol\000"
 4517      6574436F 
 4517      6C00
 4518              	.LASF135:
 4519 0255 71756164 		.ascii	"quadDec2Count\000"
 4519      44656332 
 4519      436F756E 
 4519      7400
 4520              	.LASF19:
 4521 0263 666C6F61 		.ascii	"float\000"
 4521      7400
 4522              	.LASF80:
 4523 0269 63757272 		.ascii	"currentInstructionDirection\000"
 4523      656E7449 
 4523      6E737472 
 4523      75637469 
 4523      6F6E4469 
 4524              	.LASF124:
 4525 0285 75736242 		.ascii	"usbBuffer\000"
 4525      75666665 
 4525      7200
 4526              	.LASF83:
 4527 028f 636F756E 		.ascii	"count\000"
 4527      7400
 4528              	.LASF22:
 4529 0295 696E6465 		.ascii	"index\000"
 4529      7800
 4530              	.LASF7:
 4531 029b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4531      206C6F6E 
 4531      6720756E 
 4531      7369676E 
 4531      65642069 
 4532              	.LASF51:
 4533 02b2 496E7374 		.ascii	"Instruction\000"
 4533      72756374 
 4533      696F6E00 
 4534              	.LASF117:
 4535 02be 666C6167 		.ascii	"flag_packet\000"
 4535      5F706163 
 4535      6B657400 
 4536              	.LASF95:
 4537 02ca 53657452 		.ascii	"SetRobotMovement\000"
 4537      6F626F74 
 4537      4D6F7665 
 4537      6D656E74 
 4537      00
 4538              	.LASF72:
 4539 02db 54494D45 		.ascii	"TIMER_FINISH\000"
 4539      525F4649 
 4539      4E495348 
 4539      00
 4540              	.LASF137:
 4541 02e8 6B656570 		.ascii	"keepLedOn\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 96


 4541      4C65644F 
 4541      6E00
 4542              	.LASF39:
 4543 02f2 4C656674 		.ascii	"Left\000"
 4543      00
 4544              	.LASF113:
 4545 02f7 666C6167 		.ascii	"flag_ts_update\000"
 4545      5F74735F 
 4545      75706461 
 4545      746500
 4546              	.LASF112:
 4547 0306 666C6167 		.ascii	"flag_ts_enc\000"
 4547      5F74735F 
 4547      656E6300 
 4548              	.LASF102:
 4549 0312 6C656674 		.ascii	"leftStatusFlag\000"
 4549      53746174 
 4549      7573466C 
 4549      616700
 4550              	.LASF81:
 4551 0321 71756164 		.ascii	"quadCountToRPM\000"
 4551      436F756E 
 4551      74546F52 
 4551      504D00
 4552              	.LASF84:
 4553 0330 626C6F63 		.ascii	"blockSize\000"
 4553      6B53697A 
 4553      6500
 4554              	.LASF146:
 4555 033a 69676E6F 		.ascii	"ignoreSensor\000"
 4555      72655365 
 4555      6E736F72 
 4555      00
 4556              	.LASF48:
 4557 0347 53746F70 		.ascii	"StopAtTarget\000"
 4557      41745461 
 4557      72676574 
 4557      00
 4558              	.LASF64:
 4559 0354 77616974 		.ascii	"waitForTurn\000"
 4559      466F7254 
 4559      75726E00 
 4560              	.LASF24:
 4561 0360 726F626F 		.ascii	"robot_ypos\000"
 4561      745F7970 
 4561      6F7300
 4562              	.LASF111:
 4563 036b 74735F64 		.ascii	"ts_display\000"
 4563      6973706C 
 4563      617900
 4564              	.LASF11:
 4565 0376 63686172 		.ascii	"char\000"
 4565      00
 4566              	.LASF150:
 4567 037b 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4567      6F63756D 
 4567      656E7473 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 97


 4567      5C476974 
 4567      4875625C 
 4568 03aa 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4568      635F636F 
 4568      64655F62 
 4568      6173655C 
 4568      43533330 
 4569              	.LASF28:
 4570 03cc 67305F73 		.ascii	"g0_speed\000"
 4570      70656564 
 4570      00
 4571              	.LASF93:
 4572 03d5 696E7374 		.ascii	"instructionList\000"
 4572      72756374 
 4572      696F6E4C 
 4572      69737400 
 4573              	.LASF96:
 4574 03e5 696E7374 		.ascii	"instructionIndex\000"
 4574      72756374 
 4574      696F6E49 
 4574      6E646578 
 4574      00
 4575              	.LASF15:
 4576 03f6 75696E74 		.ascii	"uint16\000"
 4576      313600
 4577              	.LASF17:
 4578 03fd 696E7438 		.ascii	"int8\000"
 4578      00
 4579              	.LASF141:
 4580 0402 78426C6F 		.ascii	"xBlocksize\000"
 4580      636B7369 
 4580      7A6500
 4581              	.LASF33:
 4582 040d 67315F64 		.ascii	"g1_direction\000"
 4582      69726563 
 4582      74696F6E 
 4582      00
 4583              	.LASF68:
 4584 041a 53335F44 		.ascii	"S3_DETECTED\000"
 4584      45544543 
 4584      54454400 
 4585              	.LASF77:
 4586 0426 73706565 		.ascii	"speedTimer\000"
 4586      6454696D 
 4586      657200
 4587              	.LASF88:
 4588 0431 70617468 		.ascii	"pathCount\000"
 4588      436F756E 
 4588      7400
 4589              	.LASF98:
 4590 043b 7475726E 		.ascii	"turnFinishedFlag\000"
 4590      46696E69 
 4590      73686564 
 4590      466C6167 
 4590      00
 4591              	.LASF44:
 4592 044c 77616974 		.ascii	"waitForLeftTurn\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 98


 4592      466F724C 
 4592      65667454 
 4592      75726E00 
 4593              	.LASF6:
 4594 045c 6C6F6E67 		.ascii	"long long int\000"
 4594      206C6F6E 
 4594      6720696E 
 4594      7400
 4595              	.LASF30:
 4596 046a 67315F78 		.ascii	"g1_xpos\000"
 4596      706F7300 
 4597              	.LASF140:
 4598 0472 626C6F63 		.ascii	"blockSizeTotal\000"
 4598      6B53697A 
 4598      65546F74 
 4598      616C00
 4599              	.LASF130:
 4600 0481 70726576 		.ascii	"previousOrientation\000"
 4600      696F7573 
 4600      4F726965 
 4600      6E746174 
 4600      696F6E00 
 4601              	.LASF46:
 4602 0495 75547572 		.ascii	"uTurn\000"
 4602      6E00
 4603              	.LASF104:
 4604 049b 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4604      436F7572 
 4604      7365436F 
 4604      72726563 
 4604      74696F6E 
 4605              	.LASF74:
 4606 04b7 6E657744 		.ascii	"newDistance\000"
 4606      69737461 
 4606      6E636500 
 4607              	.LASF36:
 4608 04c3 67325F73 		.ascii	"g2_speed\000"
 4608      70656564 
 4608      00
 4609              	.LASF27:
 4610 04cc 67305F79 		.ascii	"g0_ypos\000"
 4610      706F7300 
 4611              	.LASF126:
 4612 04d4 666F6F64 		.ascii	"food_list\000"
 4612      5F6C6973 
 4612      7400
 4613              	.LASF59:
 4614 04de 5475726E 		.ascii	"TurnLeft\000"
 4614      4C656674 
 4614      00
 4615              	.LASF110:
 4616 04e7 74735F73 		.ascii	"ts_speed\000"
 4616      70656564 
 4616      00
 4617              	.LASF139:
 4618 04f0 6A756E63 		.ascii	"junctionConfiguration\000"
 4618      74696F6E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 99


 4618      436F6E66 
 4618      69677572 
 4618      6174696F 
 4619              	.LASF63:
 4620 0506 556E6B6E 		.ascii	"Unknown\000"
 4620      6F776E00 
 4621              	.LASF16:
 4622 050e 75696E74 		.ascii	"uint32\000"
 4622      333200
 4623              	.LASF45:
 4624 0515 77616974 		.ascii	"waitForRightTurn\000"
 4624      466F7252 
 4624      69676874 
 4624      5475726E 
 4624      00
 4625              	.LASF58:
 4626 0526 5475726E 		.ascii	"TurnRight\000"
 4626      52696768 
 4626      7400
 4627              	.LASF50:
 4628 0530 64617461 		.ascii	"data_main\000"
 4628      5F6D6169 
 4628      6E00
 4629              	.LASF21:
 4630 053a 72737369 		.ascii	"rssi\000"
 4630      00
 4631              	.LASF29:
 4632 053f 67305F64 		.ascii	"g0_direction\000"
 4632      69726563 
 4632      74696F6E 
 4632      00
 4633              	.LASF128:
 4634 054c 70726576 		.ascii	"previousDirection\000"
 4634      696F7573 
 4634      44697265 
 4634      6374696F 
 4634      6E00
 4635              	.LASF67:
 4636 055e 5370696E 		.ascii	"Spin180\000"
 4636      31383000 
 4637              	.LASF9:
 4638 0566 6C6F6E67 		.ascii	"long double\000"
 4638      20646F75 
 4638      626C6500 
 4639              	.LASF114:
 4640 0572 666C6167 		.ascii	"flag_ts_speed\000"
 4640      5F74735F 
 4640      73706565 
 4640      6400
 4641              	.LASF119:
 4642 0580 64617461 		.ascii	"dataready_flag\000"
 4642      72656164 
 4642      795F666C 
 4642      616700
 4643              	.LASF116:
 4644 058f 666C6167 		.ascii	"flag_rx\000"
 4644      5F727800 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 100


 4645              	.LASF142:
 4646 0597 79426C6F 		.ascii	"yBlocksize\000"
 4646      636B7369 
 4646      7A6500
 4647              	.LASF2:
 4648 05a2 73686F72 		.ascii	"short int\000"
 4648      7420696E 
 4648      7400
 4649              	.LASF69:
 4650 05ac 53345F44 		.ascii	"S4_DETECTED\000"
 4650      45544543 
 4650      54454400 
 4651              	.LASF4:
 4652 05b8 6C6F6E67 		.ascii	"long int\000"
 4652      20696E74 
 4652      00
 4653              	.LASF107:
 4654 05c1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4654      52784275 
 4654      66666572 
 4654      00
 4655              	.LASF109:
 4656 05ce 74735F75 		.ascii	"ts_update\000"
 4656      70646174 
 4656      6500
 4657              	.LASF57:
 4658 05d8 466F7277 		.ascii	"Forward\000"
 4658      61726400 
 4659              	.LASF132:
 4660 05e0 746F7461 		.ascii	"totalMilliseconds\000"
 4660      6C4D696C 
 4660      6C697365 
 4660      636F6E64 
 4660      7300
 4661              	.LASF35:
 4662 05f2 67325F79 		.ascii	"g2_ypos\000"
 4662      706F7300 
 4663              	.LASF90:
 4664 05fa 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4664      546F4E65 
 4664      7874496E 
 4664      73747275 
 4664      6374696F 
 4665              	.LASF41:
 4666 0610 4F726965 		.ascii	"OrientationState\000"
 4666      6E746174 
 4666      696F6E53 
 4666      74617465 
 4666      00
 4667              	.LASF38:
 4668 0621 446F776E 		.ascii	"Down\000"
 4668      00
 4669              	.LASF40:
 4670 0626 52696768 		.ascii	"Right\000"
 4670      7400
 4671              	.LASF31:
 4672 062c 67315F79 		.ascii	"g1_ypos\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 101


 4672      706F7300 
 4673              	.LASF127:
 4674 0634 63757272 		.ascii	"currentDirection\000"
 4674      656E7444 
 4674      69726563 
 4674      74696F6E 
 4674      00
 4675              	.LASF100:
 4676 0645 75547572 		.ascii	"uTurnStartedFlag\000"
 4676      6E537461 
 4676      72746564 
 4676      466C6167 
 4676      00
 4677              	.LASF147:
 4678 0656 6C617374 		.ascii	"lastDirectionAfter180\000"
 4678      44697265 
 4678      6374696F 
 4678      6E416674 
 4678      65723138 
 4679              	.LASF10:
 4680 066c 73697A65 		.ascii	"sizetype\000"
 4680      74797065 
 4680      00
 4681              	.LASF5:
 4682 0675 6C6F6E67 		.ascii	"long unsigned int\000"
 4682      20756E73 
 4682      69676E65 
 4682      6420696E 
 4682      7400
 4683              	.LASF138:
 4684 0687 73746F70 		.ascii	"stopBuffer\000"
 4684      42756666 
 4684      657200
 4685              	.LASF101:
 4686 0692 75547572 		.ascii	"uTurnFinishedFlag\000"
 4686      6E46696E 
 4686      69736865 
 4686      64466C61 
 4686      6700
 4687              	.LASF13:
 4688 06a4 696E7433 		.ascii	"int32_t\000"
 4688      325F7400 
 4689              	.LASF23:
 4690 06ac 726F626F 		.ascii	"robot_xpos\000"
 4690      745F7870 
 4690      6F7300
 4691              	.LASF123:
 4692 06b7 656E7472 		.ascii	"entry\000"
 4692      7900
 4693              	.LASF56:
 4694 06bd 526F626F 		.ascii	"RobotMovement\000"
 4694      744D6F76 
 4694      656D656E 
 4694      7400
 4695              	.LASF1:
 4696 06cb 756E7369 		.ascii	"unsigned char\000"
 4696      676E6564 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 102


 4696      20636861 
 4696      7200
 4697              	.LASF145:
 4698 06d9 73746F70 		.ascii	"stoppedAfterTurn\000"
 4698      70656441 
 4698      66746572 
 4698      5475726E 
 4698      00
 4699              	.LASF122:
 4700 06ea 6C696E65 		.ascii	"line\000"
 4700      00
 4701              	.LASF82:
 4702 06ef 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4702      756C6174 
 4702      65446973 
 4702      74616E63 
 4702      65546F54 
 4703              	.LASF61:
 4704 0709 41646A75 		.ascii	"AdjustToTheRight\000"
 4704      7374546F 
 4704      54686552 
 4704      69676874 
 4704      00
 4705              	.LASF62:
 4706 071a 53746F70 		.ascii	"Stop\000"
 4706      00
 4707              	.LASF91:
 4708 071f 47657449 		.ascii	"GetInstructionAtIndex\000"
 4708      6E737472 
 4708      75637469 
 4708      6F6E4174 
 4708      496E6465 
 4709              	.LASF108:
 4710 0735 74735F65 		.ascii	"ts_enc\000"
 4710      6E6300
 4711              	.LASF115:
 4712 073c 666C6167 		.ascii	"flag_ts_display\000"
 4712      5F74735F 
 4712      64697370 
 4712      6C617900 
 4713              	.LASF105:
 4714 074c 63757272 		.ascii	"currentIgnoreL\000"
 4714      656E7449 
 4714      676E6F72 
 4714      654C00
 4715              	.LASF106:
 4716 075b 63757272 		.ascii	"currentIgnoreR\000"
 4716      656E7449 
 4716      676E6F72 
 4716      655200
 4717              	.LASF49:
 4718 076a 536B6970 		.ascii	"Skip\000"
 4718      00
 4719              	.LASF121:
 4720 076f 64697370 		.ascii	"displaystring\000"
 4720      6C617973 
 4720      7472696E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 103


 4720      6700
 4721              	.LASF43:
 4722 077d 476F466F 		.ascii	"GoForward\000"
 4722      72776172 
 4722      6400
 4723              	.LASF70:
 4724 0787 53355F44 		.ascii	"S5_DETECTED\000"
 4724      45544543 
 4724      54454400 
 4725              	.LASF0:
 4726 0793 7369676E 		.ascii	"signed char\000"
 4726      65642063 
 4726      68617200 
 4727              	.LASF143:
 4728 079f 63757272 		.ascii	"currentRow\000"
 4728      656E7452 
 4728      6F7700
 4729              	.LASF3:
 4730 07aa 73686F72 		.ascii	"short unsigned int\000"
 4730      7420756E 
 4730      7369676E 
 4730      65642069 
 4730      6E7400
 4731              	.LASF25:
 4732 07bd 726F626F 		.ascii	"robot_orientation\000"
 4732      745F6F72 
 4732      69656E74 
 4732      6174696F 
 4732      6E00
 4733              	.LASF73:
 4734 07cf 6D61696E 		.ascii	"main\000"
 4734      00
 4735              	.LASF131:
 4736 07d4 63757272 		.ascii	"currentInstruction\000"
 4736      656E7449 
 4736      6E737472 
 4736      75637469 
 4736      6F6E00
 4737              	.LASF60:
 4738 07e7 41646A75 		.ascii	"AdjustToTheLeft\000"
 4738      7374546F 
 4738      5468654C 
 4738      65667400 
 4739              	.LASF66:
 4740 07f7 4261636B 		.ascii	"Backward\000"
 4740      77617264 
 4740      00
 4741              	.LASF14:
 4742 0800 75696E74 		.ascii	"uint8\000"
 4742      3800
 4743              	.LASF20:
 4744 0806 646F7562 		.ascii	"double\000"
 4744      6C6500
 4745              	.LASF144:
 4746 080d 63757272 		.ascii	"currentCol\000"
 4746      656E7443 
 4746      6F6C00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEWwmLv.s 			page 104


 4747              	.LASF85:
 4748 0818 746F7461 		.ascii	"totalBlockSize\000"
 4748      6C426C6F 
 4748      636B5369 
 4748      7A6500
 4749              	.LASF26:
 4750 0827 67305F78 		.ascii	"g0_xpos\000"
 4750      706F7300 
 4751              	.LASF136:
 4752 082f 74696D65 		.ascii	"timerInt\000"
 4752      72496E74 
 4752      00
 4753              	.LASF118:
 4754 0838 666C6167 		.ascii	"flag_KB_string\000"
 4754      5F4B425F 
 4754      73747269 
 4754      6E6700
 4755              	.LASF32:
 4756 0847 67315F73 		.ascii	"g1_speed\000"
 4756      70656564 
 4756      00
 4757              	.LASF53:
 4758 0850 69676E6F 		.ascii	"ignoreL\000"
 4758      72654C00 
 4759              	.LASF54:
 4760 0858 69676E6F 		.ascii	"ignoreR\000"
 4760      72655200 
 4761              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
