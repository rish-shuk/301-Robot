ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,16,4
 121              		.comm	numSteps,4,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              	turnStartedFlag:
 173 0034 00       		.space	1
 174              	turnFinishedFlag:
 175 0035 00       		.space	1
 176              	forwardUntilTargetStartedFlag:
 177 0036 00       		.space	1
 178              	uTurnStartedFlag:
 179 0037 00       		.space	1
 180              	uTurnFinishedFlag:
 181 0038 00       		.space	1
 182              	leftStatusFlag:
 183 0039 00       		.space	1
 184              	rightStatusFlag:
 185 003a 00       		.space	1
 186              	spinCourseCorrectionStarted:
 187 003b 00       		.space	1
 188              	currentIgnoreL:
 189 003c 00       		.space	1
 190              	currentIgnoreR:
 191 003d 00       		.space	1
 192              		.global	junctionConfiguration
 193 003e 0000     		.align	2
 194              		.type	junctionConfiguration, %object
 195              		.size	junctionConfiguration, 4
 196              	junctionConfiguration:
 197 0040 00000000 		.space	4
 198              		.global	blockSizeTotal
 199              		.align	2
 200              		.type	blockSizeTotal, %object
 201              		.size	blockSizeTotal, 4
 202              	blockSizeTotal:
 203 0044 00000000 		.space	4
 204              		.global	__aeabi_i2d
 205              		.global	__aeabi_dmul
 206              		.global	__aeabi_ddiv
 207              		.global	__aeabi_d2f
 208              		.global	__aeabi_fadd
 209              		.section	.text.speedTimer,"ax",%progbits
 210              		.align	2
 211              		.global	speedTimer
 212              		.thumb
 213              		.thumb_func
 214              		.type	speedTimer, %function
 215              	speedTimer:
 216              	.LFB64:
 217              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 5


   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** int numSteps;
  30:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  31:main.c        **** Instruction * instructionList; // pointer to array
  32:main.c        **** volatile static uint32 instructionIndex = 0;
  33:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]);
  34:main.c        **** float CalculateDistanceToTravel(float blockSize);
  35:main.c        **** void MoveToNextInstruction();
  36:main.c        **** // ----------------------------------------
  37:main.c        **** uint8 s3, s4, s5, s6 = 0;
  38:main.c        **** //* ========================================
  39:main.c        **** // Calculating Distance
  40:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  41:main.c        **** 
  42:main.c        **** uint32 totalMilliseconds = 0;
  43:main.c        **** float totalDistance = 0; // in mm
  44:main.c        **** //* ========================================
  45:main.c        **** char buffer[69];
  46:main.c        **** int quadDec2Count = 0;
  47:main.c        **** int timerInt = 0;
  48:main.c        **** int keepLedOn = 0;
  49:main.c        **** // ========================================= FLAGS
  50:main.c        **** uint32 stopBuffer = 0;
  51:main.c        **** 
  52:main.c        **** volatile static uint8 turnStartedFlag = 0;
  53:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  54:main.c        **** 
  55:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  58:main.c        **** 
  59:main.c        **** volatile static uint8 leftStatusFlag = 0;
  60:main.c        **** volatile static uint8 rightStatusFlag = 0;
  61:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 6


  62:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  63:main.c        **** volatile static uint8 currentIgnoreL = 0;
  64:main.c        **** volatile static uint8 currentIgnoreR = 0;
  65:main.c        **** 
  66:main.c        **** uint8 junctionConfiguration[4] = {0};
  67:main.c        **** 
  68:main.c        **** float blockSizeTotal = 0;
  69:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  70:main.c        **** 
  71:main.c        **** CY_ISR (speedTimer) {
 218              		.loc 1 71 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 90B5     		push	{r4, r7, lr}
 223              		.cfi_def_cfa_offset 12
 224              		.cfi_offset 4, -12
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 24
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  72:main.c        ****     timerInt = 1;
 231              		.loc 1 72 0
 232 0006 344B     		ldr	r3, .L4+16
 233 0008 0122     		movs	r2, #1
 234 000a 1A60     		str	r2, [r3]
  73:main.c        ****     //quadDec_M1 used for turning macros
  74:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 235              		.loc 1 74 0
 236 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 237 0010 0346     		mov	r3, r0
 238 0012 1A46     		mov	r2, r3
 239 0014 314B     		ldr	r3, .L4+20
 240 0016 1A60     		str	r2, [r3]
  75:main.c        ****     
  76:main.c        ****     if ((currentDirection == Forward || 
 241              		.loc 1 76 0
 242 0018 314B     		ldr	r3, .L4+24
 243 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 001c 002B     		cmp	r3, #0
 245 001e 13D0     		beq	.L2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 246              		.loc 1 77 0 discriminator 1
 247 0020 2F4B     		ldr	r3, .L4+24
 248 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 249              		.loc 1 76 0 discriminator 1
 250 0024 082B     		cmp	r3, #8
 251 0026 0FD0     		beq	.L2
  78:main.c        ****         currentDirection == waitForTurn || 
 252              		.loc 1 78 0
 253 0028 2D4B     		ldr	r3, .L4+24
 254 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77:main.c        ****         currentDirection == ForwardAfterTurn ||
 255              		.loc 1 77 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 7


 256 002c 072B     		cmp	r3, #7
 257 002e 0BD0     		beq	.L2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 258              		.loc 1 79 0
 259 0030 2B4B     		ldr	r3, .L4+24
 260 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:main.c        ****         currentDirection == waitForTurn || 
 261              		.loc 1 78 0
 262 0034 032B     		cmp	r3, #3
 263 0036 07D0     		beq	.L2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 264              		.loc 1 80 0
 265 0038 294B     		ldr	r3, .L4+24
 266 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79:main.c        ****         currentDirection == AdjustToTheLeft ||
 267              		.loc 1 79 0
 268 003c 042B     		cmp	r3, #4
 269 003e 03D0     		beq	.L2
  81:main.c        ****         currentDirection == Backward) &&
 270              		.loc 1 81 0
 271 0040 274B     		ldr	r3, .L4+24
 272 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80:main.c        ****         currentDirection == AdjustToTheRight ||
 273              		.loc 1 80 0
 274 0044 092B     		cmp	r3, #9
 275 0046 34D1     		bne	.L3
 276              	.L2:
  82:main.c        ****         quadDec2Count != 0) {
 277              		.loc 1 82 0
 278 0048 244B     		ldr	r3, .L4+20
 279 004a 1B68     		ldr	r3, [r3]
  81:main.c        ****         currentDirection == Backward) &&
 280              		.loc 1 81 0
 281 004c 002B     		cmp	r3, #0
 282 004e 30D0     		beq	.L3
 283              	.LBB2:
  83:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  84:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 284              		.loc 1 84 0
 285 0050 224B     		ldr	r3, .L4+20
 286 0052 1B68     		ldr	r3, [r3]
 287 0054 002B     		cmp	r3, #0
 288 0056 B8BF     		it	lt
 289 0058 5B42     		rsblt	r3, r3, #0
 290 005a 1846     		mov	r0, r3
 291 005c FFF7FEFF 		bl	__aeabi_i2d
 292 0060 19A3     		adr	r3, .L4
 293 0062 D3E90023 		ldrd	r2, [r3]
 294 0066 FFF7FEFF 		bl	__aeabi_dmul
 295 006a 0346     		mov	r3, r0
 296 006c 0C46     		mov	r4, r1
 297 006e 1846     		mov	r0, r3
 298 0070 2146     		mov	r1, r4
 299 0072 17A3     		adr	r3, .L4+8
 300 0074 D3E90023 		ldrd	r2, [r3]
 301 0078 FFF7FEFF 		bl	__aeabi_dmul
 302 007c 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 8


 303 007e 0C46     		mov	r4, r1
 304 0080 1846     		mov	r0, r3
 305 0082 2146     		mov	r1, r4
 306 0084 4FF00002 		mov	r2, #0
 307 0088 164B     		ldr	r3, .L4+28
 308 008a FFF7FEFF 		bl	__aeabi_ddiv
 309 008e 0346     		mov	r3, r0
 310 0090 0C46     		mov	r4, r1
 311 0092 1846     		mov	r0, r3
 312 0094 2146     		mov	r1, r4
 313 0096 FFF7FEFF 		bl	__aeabi_d2f
 314 009a 0346     		mov	r3, r0
 315 009c 7B60     		str	r3, [r7, #4]	@ float
  85:main.c        ****         
  86:main.c        ****         totalDistance = totalDistance + newDistance;
 316              		.loc 1 86 0
 317 009e 124B     		ldr	r3, .L4+32
 318 00a0 1B68     		ldr	r3, [r3]	@ float
 319 00a2 7968     		ldr	r1, [r7, #4]	@ float
 320 00a4 1846     		mov	r0, r3
 321 00a6 FFF7FEFF 		bl	__aeabi_fadd
 322 00aa 0346     		mov	r3, r0
 323 00ac 1A46     		mov	r2, r3
 324 00ae 0E4B     		ldr	r3, .L4+32
 325 00b0 1A60     		str	r2, [r3]	@ float
 326              	.L3:
 327              	.LBE2:
  87:main.c        ****     }
  88:main.c        ****     
  89:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 328              		.loc 1 89 0
 329 00b2 0020     		movs	r0, #0
 330 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  90:main.c        ****     QuadDec_M2_Start(); // restart counter
 331              		.loc 1 90 0
 332 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        ****     
  92:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 333              		.loc 1 92 0
 334 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  93:main.c        **** }
 335              		.loc 1 93 0
 336 00c0 00BF     		nop
 337 00c2 0C37     		adds	r7, r7, #12
 338              		.cfi_def_cfa_offset 12
 339 00c4 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 00c6 90BD     		pop	{r4, r7, pc}
 343              	.L5:
 344              		.align	3
 345              	.L4:
 346 00c8 182D4454 		.word	1413754136
 347 00cc FB210940 		.word	1074340347
 348 00d0 00000000 		.word	0
 349 00d4 00205040 		.word	1078992896
 350 00d8 00000000 		.word	timerInt
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 9


 351 00dc 00000000 		.word	quadDec2Count
 352 00e0 00000000 		.word	currentDirection
 353 00e4 00806C40 		.word	1080852480
 354 00e8 00000000 		.word	totalDistance
 355              		.cfi_endproc
 356              	.LFE64:
 357              		.size	speedTimer, .-speedTimer
 358              		.section	.text.S3_DETECTED,"ax",%progbits
 359              		.align	2
 360              		.global	S3_DETECTED
 361              		.thumb
 362              		.thumb_func
 363              		.type	S3_DETECTED, %function
 364              	S3_DETECTED:
 365              	.LFB65:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 366              		.loc 1 95 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 376              		.loc 1 97 0
 377 0004 034B     		ldr	r3, .L7
 378 0006 0122     		movs	r2, #1
 379 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 380              		.loc 1 99 0
 381 000a 00BF     		nop
 382 000c BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 000e 80BC     		pop	{r7}
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0010 7047     		bx	lr
 389              	.L8:
 390 0012 00BF     		.align	2
 391              	.L7:
 392 0014 00000000 		.word	s3
 393              		.cfi_endproc
 394              	.LFE65:
 395              		.size	S3_DETECTED, .-S3_DETECTED
 396              		.section	.text.S4_DETECTED,"ax",%progbits
 397              		.align	2
 398              		.global	S4_DETECTED
 399              		.thumb
 400              		.thumb_func
 401              		.type	S4_DETECTED, %function
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 10


 402              	S4_DETECTED:
 403              	.LFB66:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 404              		.loc 1 101 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 80B4     		push	{r7}
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 414              		.loc 1 103 0
 415 0004 034B     		ldr	r3, .L10
 416 0006 0122     		movs	r2, #1
 417 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 418              		.loc 1 105 0
 419 000a 00BF     		nop
 420 000c BD46     		mov	sp, r7
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 000e 80BC     		pop	{r7}
 424              		.cfi_restore 7
 425              		.cfi_def_cfa_offset 0
 426 0010 7047     		bx	lr
 427              	.L11:
 428 0012 00BF     		.align	2
 429              	.L10:
 430 0014 00000000 		.word	s4
 431              		.cfi_endproc
 432              	.LFE66:
 433              		.size	S4_DETECTED, .-S4_DETECTED
 434              		.section	.text.S5_DETECTED,"ax",%progbits
 435              		.align	2
 436              		.global	S5_DETECTED
 437              		.thumb
 438              		.thumb_func
 439              		.type	S5_DETECTED, %function
 440              	S5_DETECTED:
 441              	.LFB67:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 442              		.loc 1 107 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447 0000 80B4     		push	{r7}
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 11


 451              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 452              		.loc 1 109 0
 453 0004 034B     		ldr	r3, .L13
 454 0006 0122     		movs	r2, #1
 455 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 456              		.loc 1 111 0
 457 000a 00BF     		nop
 458 000c BD46     		mov	sp, r7
 459              		.cfi_def_cfa_register 13
 460              		@ sp needed
 461 000e 80BC     		pop	{r7}
 462              		.cfi_restore 7
 463              		.cfi_def_cfa_offset 0
 464 0010 7047     		bx	lr
 465              	.L14:
 466 0012 00BF     		.align	2
 467              	.L13:
 468 0014 00000000 		.word	s5
 469              		.cfi_endproc
 470              	.LFE67:
 471              		.size	S5_DETECTED, .-S5_DETECTED
 472              		.section	.text.S6_DETECTED,"ax",%progbits
 473              		.align	2
 474              		.global	S6_DETECTED
 475              		.thumb
 476              		.thumb_func
 477              		.type	S6_DETECTED, %function
 478              	S6_DETECTED:
 479              	.LFB68:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 480              		.loc 1 113 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485 0000 80B4     		push	{r7}
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 7, -4
 488 0002 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 490              		.loc 1 115 0
 491 0004 034B     		ldr	r3, .L16
 492 0006 0122     		movs	r2, #1
 493 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
 494              		.loc 1 117 0
 495 000a 00BF     		nop
 496 000c BD46     		mov	sp, r7
 497              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 12


 498              		@ sp needed
 499 000e 80BC     		pop	{r7}
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 0010 7047     		bx	lr
 503              	.L17:
 504 0012 00BF     		.align	2
 505              	.L16:
 506 0014 00000000 		.word	s6
 507              		.cfi_endproc
 508              	.LFE68:
 509              		.size	S6_DETECTED, .-S6_DETECTED
 510              		.section	.text.TIMER_FINISH,"ax",%progbits
 511              		.align	2
 512              		.global	TIMER_FINISH
 513              		.thumb
 514              		.thumb_func
 515              		.type	TIMER_FINISH, %function
 516              	TIMER_FINISH:
 517              	.LFB69:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 518              		.loc 1 119 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 120:main.c        ****     if (currentDirection == Stop) {
 528              		.loc 1 120 0
 529 0004 0A4B     		ldr	r3, .L21
 530 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 531 0008 052B     		cmp	r3, #5
 532 000a 05D1     		bne	.L19
 121:main.c        ****         stopBuffer = stopBuffer + 1;
 533              		.loc 1 121 0
 534 000c 094B     		ldr	r3, .L21+4
 535 000e 1B68     		ldr	r3, [r3]
 536 0010 0133     		adds	r3, r3, #1
 537 0012 084A     		ldr	r2, .L21+4
 538 0014 1360     		str	r3, [r2]
 539 0016 02E0     		b	.L20
 540              	.L19:
 122:main.c        ****     } else {
 123:main.c        ****         stopBuffer = 0;
 541              		.loc 1 123 0
 542 0018 064B     		ldr	r3, .L21+4
 543 001a 0022     		movs	r2, #0
 544 001c 1A60     		str	r2, [r3]
 545              	.L20:
 124:main.c        ****     }
 125:main.c        ****     SetRobotMovement(); 
 546              		.loc 1 125 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 13


 547 001e FFF7FEFF 		bl	SetRobotMovement
 126:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 548              		.loc 1 126 0
 549 0022 FFF7FEFF 		bl	ResetSensorFlags
 127:main.c        ****     Timer_LED_ReadStatusRegister();
 550              		.loc 1 127 0
 551 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 128:main.c        **** }
 552              		.loc 1 128 0
 553 002a 00BF     		nop
 554 002c 80BD     		pop	{r7, pc}
 555              	.L22:
 556 002e 00BF     		.align	2
 557              	.L21:
 558 0030 00000000 		.word	currentDirection
 559 0034 00000000 		.word	stopBuffer
 560              		.cfi_endproc
 561              	.LFE69:
 562              		.size	TIMER_FINISH, .-TIMER_FINISH
 563              		.section	.text.main,"ax",%progbits
 564              		.align	2
 565              		.global	main
 566              		.thumb
 567              		.thumb_func
 568              		.type	main, %function
 569              	main:
 570              	.LFB70:
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** int main() {
 571              		.loc 1 131 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 16
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 90B5     		push	{r4, r7, lr}
 576              		.cfi_def_cfa_offset 12
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 85B0     		sub	sp, sp, #20
 581              		.cfi_def_cfa_offset 32
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 132:main.c        **** // ----- INITIALIZATIONS ----------
 133:main.c        ****     CYGlobalIntEnable;
 584              		.loc 1 133 0
 585              		.syntax unified
 586              	@ 133 "main.c" 1
 587 0006 62B6     		CPSIE   i
 588              	@ 0 "" 2
 134:main.c        ****     ResetSensorFlags();
 589              		.loc 1 134 0
 590              		.thumb
 591              		.syntax unified
 592 0008 FFF7FEFF 		bl	ResetSensorFlags
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 593              		.loc 1 135 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 14


 594 000c FFF7FEFF 		bl	init
 136:main.c        ****     
 137:main.c        ****     instructionList = findPath(map, food_list, 0);
 595              		.loc 1 137 0
 596 0010 0022     		movs	r2, #0
 597 0012 2F49     		ldr	r1, .L27
 598 0014 2F48     		ldr	r0, .L27+4
 599 0016 FFF7FEFF 		bl	findPath
 600 001a 0246     		mov	r2, r0
 601 001c 2E4B     		ldr	r3, .L27+8
 602 001e 1A60     		str	r2, [r3]
 138:main.c        ****     numSteps = instructionsListLength();
 603              		.loc 1 138 0
 604 0020 FFF7FEFF 		bl	instructionsListLength
 605 0024 0346     		mov	r3, r0
 606 0026 1A46     		mov	r2, r3
 607 0028 2C4B     		ldr	r3, .L27+12
 608 002a 1A60     		str	r2, [r3]
 139:main.c        ****     
 140:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList);
 609              		.loc 1 140 0
 610 002c 2B4B     		ldr	r3, .L27+12
 611 002e 1968     		ldr	r1, [r3]
 612 0030 294B     		ldr	r3, .L27+8
 613 0032 1A68     		ldr	r2, [r3]
 614 0034 2A4C     		ldr	r4, .L27+16
 615 0036 3B46     		mov	r3, r7
 616 0038 1846     		mov	r0, r3
 617 003a FFF7FEFF 		bl	GetInstructionAtIndex
 618 003e 3B46     		mov	r3, r7
 619 0040 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 620 0042 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 141:main.c        ****     
 142:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 621              		.loc 1 142 0
 622 0046 244B     		ldr	r3, .L27+8
 623 0048 1A68     		ldr	r2, [r3]
 624 004a 264B     		ldr	r3, .L27+20
 625 004c 1B68     		ldr	r3, [r3]
 626 004e 1B01     		lsls	r3, r3, #4
 627 0050 1344     		add	r3, r3, r2
 628 0052 5B68     		ldr	r3, [r3, #4]
 629 0054 DAB2     		uxtb	r2, r3
 630 0056 244B     		ldr	r3, .L27+24
 631 0058 1A70     		strb	r2, [r3]
 143:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 632              		.loc 1 143 0
 633 005a 1F4B     		ldr	r3, .L27+8
 634 005c 1A68     		ldr	r2, [r3]
 635 005e 214B     		ldr	r3, .L27+20
 636 0060 1B68     		ldr	r3, [r3]
 637 0062 1B01     		lsls	r3, r3, #4
 638 0064 1344     		add	r3, r3, r2
 639 0066 9B68     		ldr	r3, [r3, #8]
 640 0068 DAB2     		uxtb	r2, r3
 641 006a 204B     		ldr	r3, .L27+28
 642 006c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 15


 144:main.c        ****     
 145:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 643              		.loc 1 145 0
 644 006e 2048     		ldr	r0, .L27+32
 645 0070 FFF7FEFF 		bl	isr_speed_StartEx
 146:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 646              		.loc 1 146 0
 647 0074 1F48     		ldr	r0, .L27+36
 648 0076 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 147:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 649              		.loc 1 147 0
 650 007a 1F48     		ldr	r0, .L27+40
 651 007c FFF7FEFF 		bl	S3_detected_StartEx
 148:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 652              		.loc 1 148 0
 653 0080 1E48     		ldr	r0, .L27+44
 654 0082 FFF7FEFF 		bl	S4_detected_StartEx
 149:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 655              		.loc 1 149 0
 656 0086 1E48     		ldr	r0, .L27+48
 657 0088 FFF7FEFF 		bl	S5_detected_StartEx
 150:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 658              		.loc 1 150 0
 659 008c 1D48     		ldr	r0, .L27+52
 660 008e FFF7FEFF 		bl	S6_detected_StartEx
 151:main.c        ****     Timer_LED_Start();
 661              		.loc 1 151 0
 662 0092 FFF7FEFF 		bl	Timer_LED_Start
 152:main.c        **** 
 153:main.c        ****     
 154:main.c        **** // ------USB SETUP ----------------    
 155:main.c        **** #ifdef USE_USB    
 156:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 663              		.loc 1 156 0
 664 0096 0121     		movs	r1, #1
 665 0098 0020     		movs	r0, #0
 666 009a FFF7FEFF 		bl	USBUART_Start
 157:main.c        **** #endif        
 158:main.c        ****     RF_BT_SELECT_Write(0);
 667              		.loc 1 158 0
 668 009e 0020     		movs	r0, #0
 669 00a0 FFF7FEFF 		bl	RF_BT_SELECT_Write
 670              	.L26:
 159:main.c        ****     
 160:main.c        ****     //usbPutString("Initialised UART");
 161:main.c        ****     for(;;)
 162:main.c        ****     {
 163:main.c        ****         if(timerInt == 1) {
 671              		.loc 1 163 0
 672 00a4 184B     		ldr	r3, .L27+56
 673 00a6 1B68     		ldr	r3, [r3]
 674 00a8 012B     		cmp	r3, #1
 675 00aa 08D1     		bne	.L24
 164:main.c        ****             timerInt = 0;
 676              		.loc 1 164 0
 677 00ac 164B     		ldr	r3, .L27+56
 678 00ae 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 16


 679 00b0 1A60     		str	r2, [r3]
 165:main.c        ****             // calculate RPM of M2
 166:main.c        ****             quadCountToRPM(quadDec2Count);
 680              		.loc 1 166 0
 681 00b2 164B     		ldr	r3, .L27+60
 682 00b4 1B68     		ldr	r3, [r3]
 683 00b6 9BB2     		uxth	r3, r3
 684 00b8 1846     		mov	r0, r3
 685 00ba FFF7FEFF 		bl	quadCountToRPM
 686              	.L24:
 167:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 168:main.c        ****             //usbPutString(buffer);
 169:main.c        ****             //usbPutString(" ");
 170:main.c        ****         }
 171:main.c        ****         //handle_usb();
 172:main.c        ****         if (flag_KB_string == 1)
 687              		.loc 1 172 0
 688 00be 144B     		ldr	r3, .L27+64
 689 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 690 00c2 012B     		cmp	r3, #1
 691 00c4 EED1     		bne	.L26
 173:main.c        ****         {
 174:main.c        ****             //usbPutString("Total Distance: ");
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             flag_KB_string = 0;
 692              		.loc 1 177 0
 693 00c6 124B     		ldr	r3, .L27+64
 694 00c8 0022     		movs	r2, #0
 695 00ca 1A70     		strb	r2, [r3]
 178:main.c        ****         }           
 179:main.c        ****     }
 696              		.loc 1 179 0
 697 00cc EAE7     		b	.L26
 698              	.L28:
 699 00ce 00BF     		.align	2
 700              	.L27:
 701 00d0 00000000 		.word	food_list
 702 00d4 00000000 		.word	map
 703 00d8 00000000 		.word	instructionList
 704 00dc 00000000 		.word	numSteps
 705 00e0 00000000 		.word	currentInstruction
 706 00e4 14000000 		.word	instructionIndex
 707 00e8 3C000000 		.word	currentIgnoreL
 708 00ec 3D000000 		.word	currentIgnoreR
 709 00f0 00000000 		.word	speedTimer
 710 00f4 00000000 		.word	TIMER_FINISH
 711 00f8 00000000 		.word	S3_DETECTED
 712 00fc 00000000 		.word	S4_DETECTED
 713 0100 00000000 		.word	S5_DETECTED
 714 0104 00000000 		.word	S6_DETECTED
 715 0108 00000000 		.word	timerInt
 716 010c 00000000 		.word	quadDec2Count
 717 0110 00000000 		.word	flag_KB_string
 718              		.cfi_endproc
 719              	.LFE70:
 720              		.size	main, .-main
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 17


 721              		.global	__aeabi_fmul
 722              		.global	__aeabi_f2iz
 723              		.section	.text.quadCountToRPM,"ax",%progbits
 724              		.align	2
 725              		.global	quadCountToRPM
 726              		.thumb
 727              		.thumb_func
 728              		.type	quadCountToRPM, %function
 729              	quadCountToRPM:
 730              	.LFB71:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count) {
 731              		.loc 1 185 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 16
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 90B5     		push	{r4, r7, lr}
 736              		.cfi_def_cfa_offset 12
 737              		.cfi_offset 4, -12
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 85B0     		sub	sp, sp, #20
 741              		.cfi_def_cfa_offset 32
 742 0004 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 744 0006 0346     		mov	r3, r0
 745 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 186:main.c        ****     float cps = count/57.00;
 746              		.loc 1 186 0
 747 000a FB88     		ldrh	r3, [r7, #6]
 748 000c 1846     		mov	r0, r3
 749 000e FFF7FEFF 		bl	__aeabi_i2d
 750 0012 4FF00002 		mov	r2, #0
 751 0016 0D4B     		ldr	r3, .L31
 752 0018 FFF7FEFF 		bl	__aeabi_ddiv
 753 001c 0346     		mov	r3, r0
 754 001e 0C46     		mov	r4, r1
 755 0020 1846     		mov	r0, r3
 756 0022 2146     		mov	r1, r4
 757 0024 FFF7FEFF 		bl	__aeabi_d2f
 758 0028 0346     		mov	r3, r0
 759 002a FB60     		str	r3, [r7, #12]	@ float
 187:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 760              		.loc 1 187 0
 761 002c 0849     		ldr	r1, .L31+4
 762 002e F868     		ldr	r0, [r7, #12]	@ float
 763 0030 FFF7FEFF 		bl	__aeabi_fmul
 764 0034 0346     		mov	r3, r0
 765 0036 1846     		mov	r0, r3
 766 0038 FFF7FEFF 		bl	__aeabi_f2iz
 767 003c 0346     		mov	r3, r0
 768 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 188:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 18


 189:main.c        ****     return rpm;
 769              		.loc 1 189 0
 770 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 190:main.c        ****     //usbPutString(buffer);
 191:main.c        ****     //usbPutString("rpm ");
 192:main.c        **** }
 771              		.loc 1 192 0
 772 0044 1846     		mov	r0, r3
 773 0046 1437     		adds	r7, r7, #20
 774              		.cfi_def_cfa_offset 12
 775 0048 BD46     		mov	sp, r7
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 004a 90BD     		pop	{r4, r7, pc}
 779              	.L32:
 780              		.align	2
 781              	.L31:
 782 004c 00804C40 		.word	1078755328
 783 0050 00007041 		.word	1097859072
 784              		.cfi_endproc
 785              	.LFE71:
 786              		.size	quadCountToRPM, .-quadCountToRPM
 787              		.section	.text.ResetSensorFlags,"ax",%progbits
 788              		.align	2
 789              		.global	ResetSensorFlags
 790              		.thumb
 791              		.thumb_func
 792              		.type	ResetSensorFlags, %function
 793              	ResetSensorFlags:
 794              	.LFB72:
 193:main.c        **** 
 194:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 195:main.c        **** void ResetSensorFlags() {
 795              		.loc 1 195 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 80B4     		push	{r7}
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 196:main.c        ****     s3 = 0;
 805              		.loc 1 196 0
 806 0004 074B     		ldr	r3, .L34
 807 0006 0022     		movs	r2, #0
 808 0008 1A70     		strb	r2, [r3]
 197:main.c        ****     s4 = 0;
 809              		.loc 1 197 0
 810 000a 074B     		ldr	r3, .L34+4
 811 000c 0022     		movs	r2, #0
 812 000e 1A70     		strb	r2, [r3]
 198:main.c        ****     s5 = 0;
 813              		.loc 1 198 0
 814 0010 064B     		ldr	r3, .L34+8
 815 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 19


 816 0014 1A70     		strb	r2, [r3]
 199:main.c        ****     s6 = 0;
 817              		.loc 1 199 0
 818 0016 064B     		ldr	r3, .L34+12
 819 0018 0022     		movs	r2, #0
 820 001a 1A70     		strb	r2, [r3]
 200:main.c        **** }
 821              		.loc 1 200 0
 822 001c 00BF     		nop
 823 001e BD46     		mov	sp, r7
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0020 80BC     		pop	{r7}
 827              		.cfi_restore 7
 828              		.cfi_def_cfa_offset 0
 829 0022 7047     		bx	lr
 830              	.L35:
 831              		.align	2
 832              	.L34:
 833 0024 00000000 		.word	s3
 834 0028 00000000 		.word	s4
 835 002c 00000000 		.word	s5
 836 0030 00000000 		.word	s6
 837              		.cfi_endproc
 838              	.LFE72:
 839              		.size	ResetSensorFlags, .-ResetSensorFlags
 840              		.global	xBlocksize
 841              		.data
 842 0045 000000   		.align	2
 843              		.type	xBlocksize, %object
 844              		.size	xBlocksize, 4
 845              	xBlocksize:
 846 0048 0000F442 		.word	1123287040
 847              		.global	yBlocksize
 848              		.align	2
 849              		.type	yBlocksize, %object
 850              		.size	yBlocksize, 4
 851              	yBlocksize:
 852 004c 0000A042 		.word	1117782016
 853              		.global	currentRow
 854              		.type	currentRow, %object
 855              		.size	currentRow, 1
 856              	currentRow:
 857 0050 01       		.byte	1
 858              		.global	currentCol
 859              		.type	currentCol, %object
 860              		.size	currentCol, 1
 861              	currentCol:
 862 0051 01       		.byte	1
 863              		.global	stoppedAfterTurn
 864              		.bss
 865              		.type	stoppedAfterTurn, %object
 866              		.size	stoppedAfterTurn, 1
 867              	stoppedAfterTurn:
 868 0048 00       		.space	1
 869              		.global	ignoreSensor
 870              		.type	ignoreSensor, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 20


 871              		.size	ignoreSensor, 1
 872              	ignoreSensor:
 873 0049 00       		.space	1
 874              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 875              		.align	2
 876              		.global	ForwardCourseCorrection
 877              		.thumb
 878              		.thumb_func
 879              		.type	ForwardCourseCorrection, %function
 880              	ForwardCourseCorrection:
 881              	.LFB73:
 201:main.c        **** 
 202:main.c        **** float xBlocksize = 122; // 122 mm
 203:main.c        **** float yBlocksize = 80; // 80 mm
 204:main.c        **** uint8 currentRow = 1;
 205:main.c        **** uint8 currentCol = 1;
 206:main.c        **** 
 207:main.c        **** uint8 stoppedAfterTurn = 0;
 208:main.c        **** uint8 ignoreSensor = 0;
 209:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 210:main.c        **** 
 211:main.c        **** enum RobotMovement ForwardCourseCorrection();
 212:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 882              		.loc 1 212 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887 0000 80B4     		push	{r7}
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 7, -4
 890 0002 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
 213:main.c        ****     // if S5 and S6 are on black, move forward
 214:main.c        ****     if (!s5 && !s6) {
 892              		.loc 1 214 0
 893 0004 1C4B     		ldr	r3, .L44
 894 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0008 002B     		cmp	r3, #0
 896 000a 0FD1     		bne	.L37
 897              		.loc 1 214 0 is_stmt 0 discriminator 1
 898 000c 1B4B     		ldr	r3, .L44+4
 899 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 0010 002B     		cmp	r3, #0
 901 0012 0BD1     		bne	.L37
 215:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 902              		.loc 1 215 0 is_stmt 1
 903 0014 1A4B     		ldr	r3, .L44+8
 904 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0018 032B     		cmp	r3, #3
 906 001a 01D0     		beq	.L38
 216:main.c        ****             return AdjustToTheLeft;
 907              		.loc 1 216 0
 908 001c 0323     		movs	r3, #3
 909 001e 26E0     		b	.L39
 910              	.L38:
 217:main.c        ****         }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 21


 218:main.c        ****         if (previousDirection != AdjustToTheRight) {
 911              		.loc 1 218 0
 912 0020 174B     		ldr	r3, .L44+8
 913 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 914 0024 042B     		cmp	r3, #4
 915 0026 01D0     		beq	.L37
 219:main.c        ****             return AdjustToTheRight;    
 916              		.loc 1 219 0
 917 0028 0423     		movs	r3, #4
 918 002a 20E0     		b	.L39
 919              	.L37:
 220:main.c        ****         }
 221:main.c        ****     }
 222:main.c        ****     
 223:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 224:main.c        ****     if (s5 && s6) {
 920              		.loc 1 224 0
 921 002c 124B     		ldr	r3, .L44
 922 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 923 0030 002B     		cmp	r3, #0
 924 0032 0FD0     		beq	.L40
 925              		.loc 1 224 0 is_stmt 0 discriminator 1
 926 0034 114B     		ldr	r3, .L44+4
 927 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 0038 002B     		cmp	r3, #0
 929 003a 0BD0     		beq	.L40
 225:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 930              		.loc 1 225 0 is_stmt 1
 931 003c 104B     		ldr	r3, .L44+8
 932 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 0040 032B     		cmp	r3, #3
 934 0042 01D0     		beq	.L41
 226:main.c        ****             return AdjustToTheLeft;
 935              		.loc 1 226 0
 936 0044 0323     		movs	r3, #3
 937 0046 12E0     		b	.L39
 938              	.L41:
 227:main.c        ****         }
 228:main.c        ****         if (previousDirection != AdjustToTheRight) {
 939              		.loc 1 228 0
 940 0048 0D4B     		ldr	r3, .L44+8
 941 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 004c 042B     		cmp	r3, #4
 943 004e 01D0     		beq	.L40
 229:main.c        ****             return AdjustToTheRight;    
 944              		.loc 1 229 0
 945 0050 0423     		movs	r3, #4
 946 0052 0CE0     		b	.L39
 947              	.L40:
 230:main.c        ****         }
 231:main.c        ****     }
 232:main.c        **** 
 233:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 234:main.c        ****     if (s5) {
 948              		.loc 1 234 0
 949 0054 084B     		ldr	r3, .L44
 950 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 22


 951 0058 002B     		cmp	r3, #0
 952 005a 01D0     		beq	.L42
 235:main.c        ****         return AdjustToTheRight;    
 953              		.loc 1 235 0
 954 005c 0423     		movs	r3, #4
 955 005e 06E0     		b	.L39
 956              	.L42:
 236:main.c        ****     }
 237:main.c        ****     if (s6) {
 957              		.loc 1 237 0
 958 0060 064B     		ldr	r3, .L44+4
 959 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0064 002B     		cmp	r3, #0
 961 0066 01D0     		beq	.L43
 238:main.c        ****         return AdjustToTheLeft;    
 962              		.loc 1 238 0
 963 0068 0323     		movs	r3, #3
 964 006a 00E0     		b	.L39
 965              	.L43:
 239:main.c        ****     }
 240:main.c        ****    
 241:main.c        ****     // We should never actually get to this point
 242:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 243:main.c        ****     return Stop;
 966              		.loc 1 243 0
 967 006c 0523     		movs	r3, #5
 968              	.L39:
 244:main.c        **** }
 969              		.loc 1 244 0
 970 006e 1846     		mov	r0, r3
 971 0070 BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0072 80BC     		pop	{r7}
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 0074 7047     		bx	lr
 978              	.L45:
 979 0076 00BF     		.align	2
 980              	.L44:
 981 0078 00000000 		.word	s5
 982 007c 00000000 		.word	s6
 983 0080 00000000 		.word	previousDirection
 984              		.cfi_endproc
 985              	.LFE73:
 986              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 987              		.global	lastDirectionAfter180
 988              		.data
 989              		.type	lastDirectionAfter180, %object
 990              		.size	lastDirectionAfter180, 1
 991              	lastDirectionAfter180:
 992 0052 06       		.byte	6
 993              		.section	.text.SpinCourseCorrection,"ax",%progbits
 994              		.align	2
 995              		.global	SpinCourseCorrection
 996              		.thumb
 997              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 23


 998              		.type	SpinCourseCorrection, %function
 999              	SpinCourseCorrection:
 1000              	.LFB74:
 245:main.c        **** 
 246:main.c        **** enum RobotMovement SpinCourseCorrection();
 247:main.c        **** 
 248:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 249:main.c        **** 
 250:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1001              		.loc 1 250 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006 0000 80B4     		push	{r7}
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 7, -4
 1009 0002 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 251:main.c        ****     // Set first iteration flag.
 252:main.c        ****     if (!spinCourseCorrectionStarted) {
 1011              		.loc 1 252 0
 1012 0004 1E4B     		ldr	r3, .L54
 1013 0006 1B78     		ldrb	r3, [r3]
 1014 0008 DBB2     		uxtb	r3, r3
 1015 000a 002B     		cmp	r3, #0
 1016 000c 06D1     		bne	.L47
 253:main.c        ****         spinCourseCorrectionStarted = 1;    
 1017              		.loc 1 253 0
 1018 000e 1C4B     		ldr	r3, .L54
 1019 0010 0122     		movs	r2, #1
 1020 0012 1A70     		strb	r2, [r3]
 254:main.c        ****         lastDirectionAfter180 = currentDirection;
 1021              		.loc 1 254 0
 1022 0014 1B4B     		ldr	r3, .L54+4
 1023 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1024 0018 1B4B     		ldr	r3, .L54+8
 1025 001a 1A70     		strb	r2, [r3]
 1026              	.L47:
 255:main.c        ****     }
 256:main.c        ****     
 257:main.c        ****     // if S5 and S6 are on black, stop
 258:main.c        ****     if (!s5 && !s6) {
 1027              		.loc 1 258 0
 1028 001c 1B4B     		ldr	r3, .L54+12
 1029 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 0020 002B     		cmp	r3, #0
 1031 0022 08D1     		bne	.L48
 1032              		.loc 1 258 0 is_stmt 0 discriminator 1
 1033 0024 1A4B     		ldr	r3, .L54+16
 1034 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 0028 002B     		cmp	r3, #0
 1036 002a 04D1     		bne	.L48
 259:main.c        ****         spinCourseCorrectionStarted = 0;
 1037              		.loc 1 259 0 is_stmt 1
 1038 002c 144B     		ldr	r3, .L54
 1039 002e 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 24


 1040 0030 1A70     		strb	r2, [r3]
 260:main.c        ****         return Backward;
 1041              		.loc 1 260 0
 1042 0032 0923     		movs	r3, #9
 1043 0034 20E0     		b	.L49
 1044              	.L48:
 261:main.c        ****     }
 262:main.c        ****     
 263:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 264:main.c        ****     if (s5 && s6) {
 1045              		.loc 1 264 0
 1046 0036 154B     		ldr	r3, .L54+12
 1047 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 003a 002B     		cmp	r3, #0
 1049 003c 0FD0     		beq	.L50
 1050              		.loc 1 264 0 is_stmt 0 discriminator 1
 1051 003e 144B     		ldr	r3, .L54+16
 1052 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0042 002B     		cmp	r3, #0
 1054 0044 0BD0     		beq	.L50
 265:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1055              		.loc 1 265 0 is_stmt 1
 1056 0046 104B     		ldr	r3, .L54+8
 1057 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 004a 022B     		cmp	r3, #2
 1059 004c 01D0     		beq	.L51
 266:main.c        ****             return TurnLeft;
 1060              		.loc 1 266 0
 1061 004e 0223     		movs	r3, #2
 1062 0050 12E0     		b	.L49
 1063              	.L51:
 267:main.c        ****         }
 268:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1064              		.loc 1 268 0
 1065 0052 0D4B     		ldr	r3, .L54+8
 1066 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067 0056 012B     		cmp	r3, #1
 1068 0058 01D0     		beq	.L50
 269:main.c        ****             return TurnRight;    
 1069              		.loc 1 269 0
 1070 005a 0123     		movs	r3, #1
 1071 005c 0CE0     		b	.L49
 1072              	.L50:
 270:main.c        ****         }
 271:main.c        ****     }
 272:main.c        **** 
 273:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 274:main.c        ****     if (s5) {
 1073              		.loc 1 274 0
 1074 005e 0B4B     		ldr	r3, .L54+12
 1075 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1076 0062 002B     		cmp	r3, #0
 1077 0064 01D0     		beq	.L52
 275:main.c        ****         return TurnRight;    
 1078              		.loc 1 275 0
 1079 0066 0123     		movs	r3, #1
 1080 0068 06E0     		b	.L49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 25


 1081              	.L52:
 276:main.c        ****     }
 277:main.c        ****     if (s6) {
 1082              		.loc 1 277 0
 1083 006a 094B     		ldr	r3, .L54+16
 1084 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1085 006e 002B     		cmp	r3, #0
 1086 0070 01D0     		beq	.L53
 278:main.c        ****         return TurnLeft;    
 1087              		.loc 1 278 0
 1088 0072 0223     		movs	r3, #2
 1089 0074 00E0     		b	.L49
 1090              	.L53:
 279:main.c        ****     }
 280:main.c        ****    
 281:main.c        ****     // We should never actually get to this point
 282:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 283:main.c        ****     return Stop;
 1091              		.loc 1 283 0
 1092 0076 0523     		movs	r3, #5
 1093              	.L49:
 284:main.c        **** }
 1094              		.loc 1 284 0
 1095 0078 1846     		mov	r0, r3
 1096 007a BD46     		mov	sp, r7
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 007c 80BC     		pop	{r7}
 1100              		.cfi_restore 7
 1101              		.cfi_def_cfa_offset 0
 1102 007e 7047     		bx	lr
 1103              	.L55:
 1104              		.align	2
 1105              	.L54:
 1106 0080 3B000000 		.word	spinCourseCorrectionStarted
 1107 0084 00000000 		.word	currentDirection
 1108 0088 00000000 		.word	lastDirectionAfter180
 1109 008c 00000000 		.word	s5
 1110 0090 00000000 		.word	s6
 1111              		.cfi_endproc
 1112              	.LFE74:
 1113              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1114              		.global	__aeabi_fcmpge
 1115              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1116              		.align	2
 1117              		.global	GetMovementAccordingToInstruction
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	GetMovementAccordingToInstruction, %function
 1121              	GetMovementAccordingToInstruction:
 1122              	.LFB75:
 285:main.c        **** 
 286:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1123              		.loc 1 286 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 26


 1127 0000 80B5     		push	{r7, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 7, -8
 1130              		.cfi_offset 14, -4
 1131 0002 82B0     		sub	sp, sp, #8
 1132              		.cfi_def_cfa_offset 16
 1133 0004 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
 287:main.c        ****     float blocksize;
 288:main.c        ****     if(currentRobotOrientation == Up || currentRobotOrientation == Down) {
 1135              		.loc 1 288 0
 1136 0006 A14B     		ldr	r3, .L104
 1137 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 000a 002B     		cmp	r3, #0
 1139 000c 03D0     		beq	.L57
 1140              		.loc 1 288 0 is_stmt 0 discriminator 1
 1141 000e 9F4B     		ldr	r3, .L104
 1142 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1143 0012 012B     		cmp	r3, #1
 1144 0014 03D1     		bne	.L58
 1145              	.L57:
 289:main.c        ****         blocksize = yBlocksize;
 1146              		.loc 1 289 0 is_stmt 1
 1147 0016 9E4B     		ldr	r3, .L104+4
 1148 0018 1B68     		ldr	r3, [r3]	@ float
 1149 001a 7B60     		str	r3, [r7, #4]	@ float
 1150 001c 02E0     		b	.L59
 1151              	.L58:
 290:main.c        ****     } else {
 291:main.c        ****         blocksize = xBlocksize;
 1152              		.loc 1 291 0
 1153 001e 9D4B     		ldr	r3, .L104+8
 1154 0020 1B68     		ldr	r3, [r3]	@ float
 1155 0022 7B60     		str	r3, [r7, #4]	@ float
 1156              	.L59:
 292:main.c        ****     }
 293:main.c        ****     
 294:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 295:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 296:main.c        ****         // OR an EVENT happens in the current instruction
 297:main.c        ****         // e.g. CurrentInstruction: GoForward 
 298:main.c        ****         //      S3 on BLACK
 299:main.c        ****         //      Check Ignore Count
 300:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 301:main.c        ****     
 302:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1157              		.loc 1 302 0
 1158 0024 9C4B     		ldr	r3, .L104+12
 1159 0026 1B78     		ldrb	r3, [r3]
 1160 0028 FB70     		strb	r3, [r7, #3]
 303:main.c        ****     
 304:main.c        ****     switch (currentInstructionDirection) {
 1161              		.loc 1 304 0
 1162 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1163 002c 052B     		cmp	r3, #5
 1164 002e 00F2B881 		bhi	.L60
 1165 0032 01A2     		adr	r2, .L62
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 27


 1166 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1167              		.p2align 2
 1168              	.L62:
 1169 0038 51000000 		.word	.L61+1
 1170 003c 13010000 		.word	.L63+1
 1171 0040 CF010000 		.word	.L64+1
 1172 0044 41030000 		.word	.L65+1
 1173 0048 CD020000 		.word	.L66+1
 1174 004c 1B030000 		.word	.L67+1
 1175              		.p2align 1
 1176              	.L61:
 305:main.c        ****         case GoForward:
 306:main.c        ****             if(currentDirection == Stop) {
 1177              		.loc 1 306 0
 1178 0050 924B     		ldr	r3, .L104+16
 1179 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1180 0054 052B     		cmp	r3, #5
 1181 0056 08D1     		bne	.L68
 307:main.c        ****                 if(stopBuffer <= 100) {
 1182              		.loc 1 307 0
 1183 0058 914B     		ldr	r3, .L104+20
 1184 005a 1B68     		ldr	r3, [r3]
 1185 005c 642B     		cmp	r3, #100
 1186 005e 01D8     		bhi	.L69
 308:main.c        ****                     return Stop;
 1187              		.loc 1 308 0
 1188 0060 0523     		movs	r3, #5
 1189 0062 9FE1     		b	.L70
 1190              	.L69:
 309:main.c        ****                 } else {
 310:main.c        ****                     stopBuffer = 110;
 1191              		.loc 1 310 0
 1192 0064 8E4B     		ldr	r3, .L104+20
 1193 0066 6E22     		movs	r2, #110
 1194 0068 1A60     		str	r2, [r3]
 1195              	.L68:
 311:main.c        ****                 }
 312:main.c        ****             }
 313:main.c        ****             if (s3) {
 1196              		.loc 1 313 0
 1197 006a 8E4B     		ldr	r3, .L104+24
 1198 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 006e 002B     		cmp	r3, #0
 1200 0070 02D0     		beq	.L71
 314:main.c        ****                 leftStatusFlag = 1;
 1201              		.loc 1 314 0
 1202 0072 8D4B     		ldr	r3, .L104+28
 1203 0074 0122     		movs	r2, #1
 1204 0076 1A70     		strb	r2, [r3]
 1205              	.L71:
 315:main.c        ****             }
 316:main.c        ****             
 317:main.c        ****             if (s4) {
 1206              		.loc 1 317 0
 1207 0078 8C4B     		ldr	r3, .L104+32
 1208 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1209 007c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 28


 1210 007e 02D0     		beq	.L72
 318:main.c        ****                 rightStatusFlag = 1;
 1211              		.loc 1 318 0
 1212 0080 8B4B     		ldr	r3, .L104+36
 1213 0082 0122     		movs	r2, #1
 1214 0084 1A70     		strb	r2, [r3]
 1215              	.L72:
 319:main.c        ****             }
 320:main.c        ****             
 321:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 322:main.c        ****             if (leftStatusFlag) {
 1216              		.loc 1 322 0
 1217 0086 884B     		ldr	r3, .L104+28
 1218 0088 1B78     		ldrb	r3, [r3]
 1219 008a DBB2     		uxtb	r3, r3
 1220 008c 002B     		cmp	r3, #0
 1221 008e 1BD0     		beq	.L73
 323:main.c        ****                 if (!s3) {
 1222              		.loc 1 323 0
 1223 0090 844B     		ldr	r3, .L104+24
 1224 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 0094 002B     		cmp	r3, #0
 1226 0096 17D1     		bne	.L73
 324:main.c        ****                     leftStatusFlag = 0;    
 1227              		.loc 1 324 0
 1228 0098 834B     		ldr	r3, .L104+28
 1229 009a 0022     		movs	r2, #0
 1230 009c 1A70     		strb	r2, [r3]
 325:main.c        ****                     if (currentIgnoreL > 0) {
 1231              		.loc 1 325 0
 1232 009e 854B     		ldr	r3, .L104+40
 1233 00a0 1B78     		ldrb	r3, [r3]
 1234 00a2 DBB2     		uxtb	r3, r3
 1235 00a4 002B     		cmp	r3, #0
 1236 00a6 06D0     		beq	.L74
 326:main.c        ****                         currentIgnoreL--;    
 1237              		.loc 1 326 0
 1238 00a8 824B     		ldr	r3, .L104+40
 1239 00aa 1B78     		ldrb	r3, [r3]
 1240 00ac DBB2     		uxtb	r3, r3
 1241 00ae 013B     		subs	r3, r3, #1
 1242 00b0 DAB2     		uxtb	r2, r3
 1243 00b2 804B     		ldr	r3, .L104+40
 1244 00b4 1A70     		strb	r2, [r3]
 1245              	.L74:
 327:main.c        ****                     }
 328:main.c        ****                     if (currentIgnoreL == 0) {
 1246              		.loc 1 328 0
 1247 00b6 7F4B     		ldr	r3, .L104+40
 1248 00b8 1B78     		ldrb	r3, [r3]
 1249 00ba DBB2     		uxtb	r3, r3
 1250 00bc 002B     		cmp	r3, #0
 1251 00be 03D1     		bne	.L73
 329:main.c        ****                         MoveToNextInstruction();
 1252              		.loc 1 329 0
 1253 00c0 FFF7FEFF 		bl	MoveToNextInstruction
 330:main.c        ****                         return Stop;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 29


 1254              		.loc 1 330 0
 1255 00c4 0523     		movs	r3, #5
 1256 00c6 6DE1     		b	.L70
 1257              	.L73:
 331:main.c        ****                     }
 332:main.c        ****                 }
 333:main.c        ****             }
 334:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 335:main.c        ****             if (rightStatusFlag) {
 1258              		.loc 1 335 0
 1259 00c8 794B     		ldr	r3, .L104+36
 1260 00ca 1B78     		ldrb	r3, [r3]
 1261 00cc DBB2     		uxtb	r3, r3
 1262 00ce 002B     		cmp	r3, #0
 1263 00d0 1BD0     		beq	.L75
 336:main.c        ****                 if (!s4) {
 1264              		.loc 1 336 0
 1265 00d2 764B     		ldr	r3, .L104+32
 1266 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1267 00d6 002B     		cmp	r3, #0
 1268 00d8 17D1     		bne	.L75
 337:main.c        ****                     rightStatusFlag = 0;
 1269              		.loc 1 337 0
 1270 00da 754B     		ldr	r3, .L104+36
 1271 00dc 0022     		movs	r2, #0
 1272 00de 1A70     		strb	r2, [r3]
 338:main.c        ****                     if (currentIgnoreR > 0) {
 1273              		.loc 1 338 0
 1274 00e0 754B     		ldr	r3, .L104+44
 1275 00e2 1B78     		ldrb	r3, [r3]
 1276 00e4 DBB2     		uxtb	r3, r3
 1277 00e6 002B     		cmp	r3, #0
 1278 00e8 06D0     		beq	.L76
 339:main.c        ****                         currentIgnoreR--;    
 1279              		.loc 1 339 0
 1280 00ea 734B     		ldr	r3, .L104+44
 1281 00ec 1B78     		ldrb	r3, [r3]
 1282 00ee DBB2     		uxtb	r3, r3
 1283 00f0 013B     		subs	r3, r3, #1
 1284 00f2 DAB2     		uxtb	r2, r3
 1285 00f4 704B     		ldr	r3, .L104+44
 1286 00f6 1A70     		strb	r2, [r3]
 1287              	.L76:
 340:main.c        ****                     }
 341:main.c        ****                     if (currentIgnoreR == 0) {
 1288              		.loc 1 341 0
 1289 00f8 6F4B     		ldr	r3, .L104+44
 1290 00fa 1B78     		ldrb	r3, [r3]
 1291 00fc DBB2     		uxtb	r3, r3
 1292 00fe 002B     		cmp	r3, #0
 1293 0100 03D1     		bne	.L75
 342:main.c        ****                         MoveToNextInstruction();
 1294              		.loc 1 342 0
 1295 0102 FFF7FEFF 		bl	MoveToNextInstruction
 343:main.c        ****                         return Stop;
 1296              		.loc 1 343 0
 1297 0106 0523     		movs	r3, #5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 30


 1298 0108 4CE1     		b	.L70
 1299              	.L75:
 344:main.c        ****                     }
 345:main.c        ****                     
 346:main.c        ****                 }
 347:main.c        ****             }
 348:main.c        ****           
 349:main.c        ****             return ForwardCourseCorrection();
 1300              		.loc 1 349 0
 1301 010a FFF7FEFF 		bl	ForwardCourseCorrection
 1302 010e 0346     		mov	r3, r0
 1303 0110 48E1     		b	.L70
 1304              	.L63:
 350:main.c        ****             break;
 351:main.c        ****         case waitForLeftTurn:
 352:main.c        ****             // continue moving forward until s3 goes on black
 353:main.c        ****             // if we are turning left already
 354:main.c        ****                 // wait until s5 || s6 are on black
 355:main.c        ****                 // return stop
 356:main.c        **** 
 357:main.c        ****             if (turnFinishedFlag) {
 1305              		.loc 1 357 0
 1306 0112 6A4B     		ldr	r3, .L104+48
 1307 0114 1B78     		ldrb	r3, [r3]
 1308 0116 DBB2     		uxtb	r3, r3
 1309 0118 002B     		cmp	r3, #0
 1310 011a 0DD0     		beq	.L77
 358:main.c        ****                 if (s3) {
 1311              		.loc 1 358 0
 1312 011c 614B     		ldr	r3, .L104+24
 1313 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 0120 002B     		cmp	r3, #0
 1315 0122 05D0     		beq	.L78
 359:main.c        ****                     turnFinishedFlag = 0;
 1316              		.loc 1 359 0
 1317 0124 654B     		ldr	r3, .L104+48
 1318 0126 0022     		movs	r2, #0
 1319 0128 1A70     		strb	r2, [r3]
 360:main.c        ****                     MoveToNextInstruction();    
 1320              		.loc 1 360 0
 1321 012a FFF7FEFF 		bl	MoveToNextInstruction
 1322 012e 03E0     		b	.L77
 1323              	.L78:
 361:main.c        ****                 }
 362:main.c        ****                 else {
 363:main.c        ****                     return ForwardCourseCorrection();        
 1324              		.loc 1 363 0
 1325 0130 FFF7FEFF 		bl	ForwardCourseCorrection
 1326 0134 0346     		mov	r3, r0
 1327 0136 35E1     		b	.L70
 1328              	.L77:
 364:main.c        ****                 }
 365:main.c        ****             }
 366:main.c        ****             
 367:main.c        ****             
 368:main.c        ****             if (currentDirection == Stop) {
 1329              		.loc 1 368 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 31


 1330 0138 584B     		ldr	r3, .L104+16
 1331 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 013c 052B     		cmp	r3, #5
 1333 013e 09D1     		bne	.L79
 369:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 370:main.c        ****                 if (stopBuffer <= 50) {
 1334              		.loc 1 370 0
 1335 0140 574B     		ldr	r3, .L104+20
 1336 0142 1B68     		ldr	r3, [r3]
 1337 0144 322B     		cmp	r3, #50
 1338 0146 01D8     		bhi	.L80
 371:main.c        ****                     return Stop;   
 1339              		.loc 1 371 0
 1340 0148 0523     		movs	r3, #5
 1341 014a 2BE1     		b	.L70
 1342              	.L80:
 372:main.c        ****                 }
 373:main.c        ****                 return ForwardCourseCorrection();
 1343              		.loc 1 373 0
 1344 014c FFF7FEFF 		bl	ForwardCourseCorrection
 1345 0150 0346     		mov	r3, r0
 1346 0152 27E1     		b	.L70
 1347              	.L79:
 374:main.c        ****             }
 375:main.c        ****          
 376:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 377:main.c        ****             if (currentDirection == TurnLeft) {
 1348              		.loc 1 377 0
 1349 0154 514B     		ldr	r3, .L104+16
 1350 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0158 022B     		cmp	r3, #2
 1352 015a 2BD1     		bne	.L81
 378:main.c        ****                 // If turn started and we are still on black, continue turning
 379:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 380:main.c        ****                 if (turnStartedFlag) {
 1353              		.loc 1 380 0
 1354 015c 584B     		ldr	r3, .L104+52
 1355 015e 1B78     		ldrb	r3, [r3]
 1356 0160 DBB2     		uxtb	r3, r3
 1357 0162 002B     		cmp	r3, #0
 1358 0164 0ED0     		beq	.L82
 381:main.c        ****                     if (s3 && (s5 && s6)) {
 1359              		.loc 1 381 0
 1360 0166 4F4B     		ldr	r3, .L104+24
 1361 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 016a 002B     		cmp	r3, #0
 1363 016c 0AD0     		beq	.L82
 1364              		.loc 1 381 0 is_stmt 0 discriminator 1
 1365 016e 554B     		ldr	r3, .L104+56
 1366 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0172 002B     		cmp	r3, #0
 1368 0174 06D0     		beq	.L82
 1369              		.loc 1 381 0 discriminator 2
 1370 0176 544B     		ldr	r3, .L104+60
 1371 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1372 017a 002B     		cmp	r3, #0
 1373 017c 02D0     		beq	.L82
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 32


 382:main.c        ****                         turnStartedFlag = 0;
 1374              		.loc 1 382 0 is_stmt 1
 1375 017e 504B     		ldr	r3, .L104+52
 1376 0180 0022     		movs	r2, #0
 1377 0182 1A70     		strb	r2, [r3]
 1378              	.L82:
 383:main.c        ****                     }
 384:main.c        ****                 }
 385:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 && !s6)) {
 1379              		.loc 1 385 0
 1380 0184 4E4B     		ldr	r3, .L104+52
 1381 0186 1B78     		ldrb	r3, [r3]
 1382 0188 DBB2     		uxtb	r3, r3
 1383 018a 002B     		cmp	r3, #0
 1384 018c 10D1     		bne	.L83
 1385              		.loc 1 385 0 is_stmt 0 discriminator 1
 1386 018e 454B     		ldr	r3, .L104+24
 1387 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1388 0192 002B     		cmp	r3, #0
 1389 0194 0CD1     		bne	.L83
 1390              		.loc 1 385 0 discriminator 2
 1391 0196 4B4B     		ldr	r3, .L104+56
 1392 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1393 019a 002B     		cmp	r3, #0
 1394 019c 08D1     		bne	.L83
 1395              		.loc 1 385 0 discriminator 3
 1396 019e 4A4B     		ldr	r3, .L104+60
 1397 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1398 01a2 002B     		cmp	r3, #0
 1399 01a4 04D1     		bne	.L83
 386:main.c        ****                     turnFinishedFlag = 1;
 1400              		.loc 1 386 0 is_stmt 1
 1401 01a6 454B     		ldr	r3, .L104+48
 1402 01a8 0122     		movs	r2, #1
 1403 01aa 1A70     		strb	r2, [r3]
 387:main.c        ****                     return Stop;
 1404              		.loc 1 387 0
 1405 01ac 0523     		movs	r3, #5
 1406 01ae F9E0     		b	.L70
 1407              	.L83:
 388:main.c        ****                 }
 389:main.c        ****                 else
 390:main.c        ****                 {
 391:main.c        ****                     return TurnLeft;
 1408              		.loc 1 391 0
 1409 01b0 0223     		movs	r3, #2
 1410 01b2 F7E0     		b	.L70
 1411              	.L81:
 392:main.c        ****                 }
 393:main.c        ****             }
 394:main.c        ****             
 395:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 396:main.c        ****             if (!s3) {
 1412              		.loc 1 396 0
 1413 01b4 3B4B     		ldr	r3, .L104+24
 1414 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1415 01b8 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 33


 1416 01ba 04D1     		bne	.L84
 397:main.c        ****                 turnStartedFlag = 1;
 1417              		.loc 1 397 0
 1418 01bc 404B     		ldr	r3, .L104+52
 1419 01be 0122     		movs	r2, #1
 1420 01c0 1A70     		strb	r2, [r3]
 398:main.c        ****                 return TurnLeft;
 1421              		.loc 1 398 0
 1422 01c2 0223     		movs	r3, #2
 1423 01c4 EEE0     		b	.L70
 1424              	.L84:
 399:main.c        ****             }
 400:main.c        ****             
 401:main.c        ****             // Otherwise, keep going forward
 402:main.c        ****             return ForwardCourseCorrection(); 
 1425              		.loc 1 402 0
 1426 01c6 FFF7FEFF 		bl	ForwardCourseCorrection
 1427 01ca 0346     		mov	r3, r0
 1428 01cc EAE0     		b	.L70
 1429              	.L64:
 403:main.c        ****             break;
 404:main.c        ****         case waitForRightTurn:
 405:main.c        ****             // continue moving forward until s4 goes on black
 406:main.c        ****             // if we are turning left already
 407:main.c        ****                 // wait until s5 || s6 are on black
 408:main.c        ****                 // return stop
 409:main.c        **** 
 410:main.c        ****             if (turnFinishedFlag) {
 1430              		.loc 1 410 0
 1431 01ce 3B4B     		ldr	r3, .L104+48
 1432 01d0 1B78     		ldrb	r3, [r3]
 1433 01d2 DBB2     		uxtb	r3, r3
 1434 01d4 002B     		cmp	r3, #0
 1435 01d6 0DD0     		beq	.L85
 411:main.c        ****                 if (s4) {
 1436              		.loc 1 411 0
 1437 01d8 344B     		ldr	r3, .L104+32
 1438 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 01dc 002B     		cmp	r3, #0
 1440 01de 05D0     		beq	.L86
 412:main.c        ****                     turnFinishedFlag = 0;
 1441              		.loc 1 412 0
 1442 01e0 364B     		ldr	r3, .L104+48
 1443 01e2 0022     		movs	r2, #0
 1444 01e4 1A70     		strb	r2, [r3]
 413:main.c        ****                     MoveToNextInstruction();    
 1445              		.loc 1 413 0
 1446 01e6 FFF7FEFF 		bl	MoveToNextInstruction
 1447 01ea 03E0     		b	.L85
 1448              	.L86:
 414:main.c        ****                 }
 415:main.c        ****                 else {
 416:main.c        ****                     return ForwardCourseCorrection();        
 1449              		.loc 1 416 0
 1450 01ec FFF7FEFF 		bl	ForwardCourseCorrection
 1451 01f0 0346     		mov	r3, r0
 1452 01f2 D7E0     		b	.L70
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 34


 1453              	.L85:
 417:main.c        ****                 }
 418:main.c        ****             }
 419:main.c        ****             
 420:main.c        ****             
 421:main.c        ****             if (currentDirection == Stop) {
 1454              		.loc 1 421 0
 1455 01f4 294B     		ldr	r3, .L104+16
 1456 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1457 01f8 052B     		cmp	r3, #5
 1458 01fa 09D1     		bne	.L87
 422:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 423:main.c        ****                 if (stopBuffer <= 50) {
 1459              		.loc 1 423 0
 1460 01fc 284B     		ldr	r3, .L104+20
 1461 01fe 1B68     		ldr	r3, [r3]
 1462 0200 322B     		cmp	r3, #50
 1463 0202 01D8     		bhi	.L88
 424:main.c        ****                     return Stop;   
 1464              		.loc 1 424 0
 1465 0204 0523     		movs	r3, #5
 1466 0206 CDE0     		b	.L70
 1467              	.L88:
 425:main.c        ****                 }
 426:main.c        **** 
 427:main.c        ****                 return ForwardCourseCorrection();
 1468              		.loc 1 427 0
 1469 0208 FFF7FEFF 		bl	ForwardCourseCorrection
 1470 020c 0346     		mov	r3, r0
 1471 020e C9E0     		b	.L70
 1472              	.L87:
 428:main.c        ****             }
 429:main.c        ****                       
 430:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 431:main.c        ****             if (currentDirection == TurnRight) {
 1473              		.loc 1 431 0
 1474 0210 224B     		ldr	r3, .L104+16
 1475 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1476 0214 012B     		cmp	r3, #1
 1477 0216 2BD1     		bne	.L89
 432:main.c        ****                 // If turn started and we are still on black, continue turning
 433:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 434:main.c        ****                 if (turnStartedFlag) {
 1478              		.loc 1 434 0
 1479 0218 294B     		ldr	r3, .L104+52
 1480 021a 1B78     		ldrb	r3, [r3]
 1481 021c DBB2     		uxtb	r3, r3
 1482 021e 002B     		cmp	r3, #0
 1483 0220 0ED0     		beq	.L90
 435:main.c        ****                     if (s4 && (s5 && s6)) {
 1484              		.loc 1 435 0
 1485 0222 224B     		ldr	r3, .L104+32
 1486 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1487 0226 002B     		cmp	r3, #0
 1488 0228 0AD0     		beq	.L90
 1489              		.loc 1 435 0 is_stmt 0 discriminator 1
 1490 022a 264B     		ldr	r3, .L104+56
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 35


 1491 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 022e 002B     		cmp	r3, #0
 1493 0230 06D0     		beq	.L90
 1494              		.loc 1 435 0 discriminator 2
 1495 0232 254B     		ldr	r3, .L104+60
 1496 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1497 0236 002B     		cmp	r3, #0
 1498 0238 02D0     		beq	.L90
 436:main.c        ****                         turnStartedFlag = 0;
 1499              		.loc 1 436 0 is_stmt 1
 1500 023a 214B     		ldr	r3, .L104+52
 1501 023c 0022     		movs	r2, #0
 1502 023e 1A70     		strb	r2, [r3]
 1503              	.L90:
 437:main.c        ****                     }
 438:main.c        ****                 }
 439:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 && !s6)) {
 1504              		.loc 1 439 0
 1505 0240 1F4B     		ldr	r3, .L104+52
 1506 0242 1B78     		ldrb	r3, [r3]
 1507 0244 DBB2     		uxtb	r3, r3
 1508 0246 002B     		cmp	r3, #0
 1509 0248 10D1     		bne	.L91
 1510              		.loc 1 439 0 is_stmt 0 discriminator 1
 1511 024a 184B     		ldr	r3, .L104+32
 1512 024c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 024e 002B     		cmp	r3, #0
 1514 0250 0CD1     		bne	.L91
 1515              		.loc 1 439 0 discriminator 2
 1516 0252 1C4B     		ldr	r3, .L104+56
 1517 0254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1518 0256 002B     		cmp	r3, #0
 1519 0258 08D1     		bne	.L91
 1520              		.loc 1 439 0 discriminator 3
 1521 025a 1B4B     		ldr	r3, .L104+60
 1522 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1523 025e 002B     		cmp	r3, #0
 1524 0260 04D1     		bne	.L91
 440:main.c        ****                     turnFinishedFlag = 1;
 1525              		.loc 1 440 0 is_stmt 1
 1526 0262 164B     		ldr	r3, .L104+48
 1527 0264 0122     		movs	r2, #1
 1528 0266 1A70     		strb	r2, [r3]
 441:main.c        ****                     return Stop;
 1529              		.loc 1 441 0
 1530 0268 0523     		movs	r3, #5
 1531 026a 9BE0     		b	.L70
 1532              	.L91:
 442:main.c        ****                 }
 443:main.c        ****                 else
 444:main.c        ****                 {
 445:main.c        ****                     return TurnRight;
 1533              		.loc 1 445 0
 1534 026c 0123     		movs	r3, #1
 1535 026e 99E0     		b	.L70
 1536              	.L89:
 446:main.c        ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 36


 447:main.c        ****             }
 448:main.c        ****             
 449:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 450:main.c        ****             if (!s4) {
 1537              		.loc 1 450 0
 1538 0270 0E4B     		ldr	r3, .L104+32
 1539 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 0274 002B     		cmp	r3, #0
 1541 0276 04D1     		bne	.L92
 451:main.c        ****                 turnStartedFlag = 1;
 1542              		.loc 1 451 0
 1543 0278 114B     		ldr	r3, .L104+52
 1544 027a 0122     		movs	r2, #1
 1545 027c 1A70     		strb	r2, [r3]
 452:main.c        ****                 return TurnRight;
 1546              		.loc 1 452 0
 1547 027e 0123     		movs	r3, #1
 1548 0280 90E0     		b	.L70
 1549              	.L92:
 453:main.c        ****             }
 454:main.c        ****             
 455:main.c        ****             // Otherwise, keep going forward
 456:main.c        ****             return ForwardCourseCorrection(); 
 1550              		.loc 1 456 0
 1551 0282 FFF7FEFF 		bl	ForwardCourseCorrection
 1552 0286 0346     		mov	r3, r0
 1553 0288 8CE0     		b	.L70
 1554              	.L105:
 1555 028a 00BF     		.align	2
 1556              	.L104:
 1557 028c 00000000 		.word	currentRobotOrientation
 1558 0290 00000000 		.word	yBlocksize
 1559 0294 00000000 		.word	xBlocksize
 1560 0298 00000000 		.word	currentInstruction
 1561 029c 00000000 		.word	currentDirection
 1562 02a0 00000000 		.word	stopBuffer
 1563 02a4 00000000 		.word	s3
 1564 02a8 39000000 		.word	leftStatusFlag
 1565 02ac 00000000 		.word	s4
 1566 02b0 3A000000 		.word	rightStatusFlag
 1567 02b4 3C000000 		.word	currentIgnoreL
 1568 02b8 3D000000 		.word	currentIgnoreR
 1569 02bc 35000000 		.word	turnFinishedFlag
 1570 02c0 34000000 		.word	turnStartedFlag
 1571 02c4 00000000 		.word	s5
 1572 02c8 00000000 		.word	s6
 1573              	.L66:
 457:main.c        ****             break;
 458:main.c        ****         case ForwardUntilTarget:
 459:main.c        ****             // Reset distance on first iteration of this instruction
 460:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1574              		.loc 1 460 0
 1575 02cc 374B     		ldr	r3, .L106
 1576 02ce 1B78     		ldrb	r3, [r3]
 1577 02d0 DBB2     		uxtb	r3, r3
 1578 02d2 002B     		cmp	r3, #0
 1579 02d4 0ED1     		bne	.L93
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 37


 461:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1580              		.loc 1 461 0
 1581 02d6 354B     		ldr	r3, .L106
 1582 02d8 0122     		movs	r2, #1
 1583 02da 1A70     		strb	r2, [r3]
 462:main.c        ****                 totalDistance = 0;
 1584              		.loc 1 462 0
 1585 02dc 344B     		ldr	r3, .L106+4
 1586 02de 4FF00002 		mov	r2, #0
 1587 02e2 1A60     		str	r2, [r3]	@ float
 463:main.c        **** 
 464:main.c        ****                 blockSizeTotal = blocksize * 3;
 1588              		.loc 1 464 0
 1589 02e4 3349     		ldr	r1, .L106+8
 1590 02e6 7868     		ldr	r0, [r7, #4]	@ float
 1591 02e8 FFF7FEFF 		bl	__aeabi_fmul
 1592 02ec 0346     		mov	r3, r0
 1593 02ee 1A46     		mov	r2, r3
 1594 02f0 314B     		ldr	r3, .L106+12
 1595 02f2 1A60     		str	r2, [r3]	@ float
 1596              	.L93:
 465:main.c        ****             }
 466:main.c        ****             
 467:main.c        ****             
 468:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 469:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1597              		.loc 1 469 0
 1598 02f4 2E4B     		ldr	r3, .L106+4
 1599 02f6 1A68     		ldr	r2, [r3]	@ float
 1600 02f8 2F4B     		ldr	r3, .L106+12
 1601 02fa 1B68     		ldr	r3, [r3]	@ float
 1602 02fc 1946     		mov	r1, r3
 1603 02fe 1046     		mov	r0, r2
 1604 0300 FFF7FEFF 		bl	__aeabi_fcmpge
 1605 0304 0346     		mov	r3, r0
 1606 0306 002B     		cmp	r3, #0
 1607 0308 03D0     		beq	.L103
 470:main.c        ****                 // Get next instruction
 471:main.c        ****                 MoveToNextInstruction();
 1608              		.loc 1 471 0
 1609 030a FFF7FEFF 		bl	MoveToNextInstruction
 472:main.c        **** 
 473:main.c        ****                 
 474:main.c        ****                 return Stop;
 1610              		.loc 1 474 0
 1611 030e 0523     		movs	r3, #5
 1612 0310 48E0     		b	.L70
 1613              	.L103:
 475:main.c        ****             }
 476:main.c        ****             
 477:main.c        ****             return ForwardCourseCorrection();
 1614              		.loc 1 477 0
 1615 0312 FFF7FEFF 		bl	ForwardCourseCorrection
 1616 0316 0346     		mov	r3, r0
 1617 0318 44E0     		b	.L70
 1618              	.L67:
 478:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 38


 479:main.c        ****         case StopAtTarget:
 480:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 481:main.c        ****             // Reset flags
 482:main.c        ****             totalDistance = 0;
 1619              		.loc 1 482 0
 1620 031a 254B     		ldr	r3, .L106+4
 1621 031c 4FF00002 		mov	r2, #0
 1622 0320 1A60     		str	r2, [r3]	@ float
 483:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1623              		.loc 1 483 0
 1624 0322 224B     		ldr	r3, .L106
 1625 0324 0022     		movs	r2, #0
 1626 0326 1A70     		strb	r2, [r3]
 484:main.c        ****             blockSizeTotal = 0;
 1627              		.loc 1 484 0
 1628 0328 234B     		ldr	r3, .L106+12
 1629 032a 4FF00002 		mov	r2, #0
 1630 032e 1A60     		str	r2, [r3]	@ float
 485:main.c        ****             
 486:main.c        ****             if (stopBuffer <= 200) {
 1631              		.loc 1 486 0
 1632 0330 224B     		ldr	r3, .L106+16
 1633 0332 1B68     		ldr	r3, [r3]
 1634 0334 C82B     		cmp	r3, #200
 1635 0336 01D8     		bhi	.L96
 487:main.c        ****                 return Stop;    
 1636              		.loc 1 487 0
 1637 0338 0523     		movs	r3, #5
 1638 033a 33E0     		b	.L70
 1639              	.L96:
 488:main.c        ****             }
 489:main.c        ****             return TurnRight;
 1640              		.loc 1 489 0
 1641 033c 0123     		movs	r3, #1
 1642 033e 31E0     		b	.L70
 1643              	.L65:
 490:main.c        ****             break;
 491:main.c        ****         case uTurn:
 492:main.c        ****             if (stopBuffer <= 200) {
 1644              		.loc 1 492 0
 1645 0340 1E4B     		ldr	r3, .L106+16
 1646 0342 1B68     		ldr	r3, [r3]
 1647 0344 C82B     		cmp	r3, #200
 1648 0346 01D8     		bhi	.L97
 493:main.c        ****                 return Stop;    
 1649              		.loc 1 493 0
 1650 0348 0523     		movs	r3, #5
 1651 034a 2BE0     		b	.L70
 1652              	.L97:
 494:main.c        ****             } else {
 495:main.c        ****                 stopBuffer = 210;    
 1653              		.loc 1 495 0
 1654 034c 1B4B     		ldr	r3, .L106+16
 1655 034e D222     		movs	r2, #210
 1656 0350 1A60     		str	r2, [r3]
 496:main.c        ****             }
 497:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 39


 498:main.c        ****             if (!uTurnStartedFlag) {
 1657              		.loc 1 498 0
 1658 0352 1B4B     		ldr	r3, .L106+20
 1659 0354 1B78     		ldrb	r3, [r3]
 1660 0356 DBB2     		uxtb	r3, r3
 1661 0358 002B     		cmp	r3, #0
 1662 035a 07D1     		bne	.L98
 499:main.c        ****                 uTurnStartedFlag = 1;
 1663              		.loc 1 499 0
 1664 035c 184B     		ldr	r3, .L106+20
 1665 035e 0122     		movs	r2, #1
 1666 0360 1A70     		strb	r2, [r3]
 500:main.c        ****                 spinCourseCorrectionStarted = 0;
 1667              		.loc 1 500 0
 1668 0362 184B     		ldr	r3, .L106+24
 1669 0364 0022     		movs	r2, #0
 1670 0366 1A70     		strb	r2, [r3]
 501:main.c        ****                 return Spin180;
 1671              		.loc 1 501 0
 1672 0368 0A23     		movs	r3, #10
 1673 036a 1BE0     		b	.L70
 1674              	.L98:
 502:main.c        ****             } 
 503:main.c        ****             
 504:main.c        ****             if (uTurnFinishedFlag) {
 1675              		.loc 1 504 0
 1676 036c 164B     		ldr	r3, .L106+28
 1677 036e 1B78     		ldrb	r3, [r3]
 1678 0370 DBB2     		uxtb	r3, r3
 1679 0372 002B     		cmp	r3, #0
 1680 0374 01D0     		beq	.L99
 505:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 506:main.c        ****                 return Backward;    
 1681              		.loc 1 506 0
 1682 0376 0923     		movs	r3, #9
 1683 0378 14E0     		b	.L70
 1684              	.L99:
 507:main.c        ****             }
 508:main.c        ****             
 509:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 510:main.c        ****             if (uTurnStartedFlag) {
 1685              		.loc 1 510 0
 1686 037a 114B     		ldr	r3, .L106+20
 1687 037c 1B78     		ldrb	r3, [r3]
 1688 037e DBB2     		uxtb	r3, r3
 1689 0380 002B     		cmp	r3, #0
 1690 0382 0AD0     		beq	.L100
 511:main.c        ****                 if (!s5 || !s6) {
 1691              		.loc 1 511 0
 1692 0384 114B     		ldr	r3, .L106+32
 1693 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1694 0388 002B     		cmp	r3, #0
 1695 038a 03D0     		beq	.L101
 1696              		.loc 1 511 0 is_stmt 0 discriminator 1
 1697 038c 104B     		ldr	r3, .L106+36
 1698 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1699 0390 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 40


 1700 0392 02D1     		bne	.L100
 1701              	.L101:
 512:main.c        ****                     uTurnFinishedFlag = 1;    
 1702              		.loc 1 512 0 is_stmt 1
 1703 0394 0C4B     		ldr	r3, .L106+28
 1704 0396 0122     		movs	r2, #1
 1705 0398 1A70     		strb	r2, [r3]
 1706              	.L100:
 513:main.c        ****                 }    
 514:main.c        ****             }
 515:main.c        ****             
 516:main.c        ****             return SpinCourseCorrection();
 1707              		.loc 1 516 0
 1708 039a FFF7FEFF 		bl	SpinCourseCorrection
 1709 039e 0346     		mov	r3, r0
 1710 03a0 00E0     		b	.L70
 1711              	.L60:
 517:main.c        ****             break;
 518:main.c        ****         default:
 519:main.c        ****             return Stop;
 1712              		.loc 1 519 0
 1713 03a2 0523     		movs	r3, #5
 1714              	.L70:
 520:main.c        ****             break;
 521:main.c        ****     }
 522:main.c        ****     return Stop;
 523:main.c        **** }
 1715              		.loc 1 523 0
 1716 03a4 1846     		mov	r0, r3
 1717 03a6 0837     		adds	r7, r7, #8
 1718              		.cfi_def_cfa_offset 8
 1719 03a8 BD46     		mov	sp, r7
 1720              		.cfi_def_cfa_register 13
 1721              		@ sp needed
 1722 03aa 80BD     		pop	{r7, pc}
 1723              	.L107:
 1724              		.align	2
 1725              	.L106:
 1726 03ac 36000000 		.word	forwardUntilTargetStartedFlag
 1727 03b0 00000000 		.word	totalDistance
 1728 03b4 00004040 		.word	1077936128
 1729 03b8 00000000 		.word	blockSizeTotal
 1730 03bc 00000000 		.word	stopBuffer
 1731 03c0 37000000 		.word	uTurnStartedFlag
 1732 03c4 3B000000 		.word	spinCourseCorrectionStarted
 1733 03c8 38000000 		.word	uTurnFinishedFlag
 1734 03cc 00000000 		.word	s5
 1735 03d0 00000000 		.word	s6
 1736              		.cfi_endproc
 1737              	.LFE75:
 1738              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 1739              		.global	__aeabi_i2f
 1740              		.section	.text.CalculateDistanceToTravel,"ax",%progbits
 1741              		.align	2
 1742              		.global	CalculateDistanceToTravel
 1743              		.thumb
 1744              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 41


 1745              		.type	CalculateDistanceToTravel, %function
 1746              	CalculateDistanceToTravel:
 1747              	.LFB76:
 524:main.c        **** 
 525:main.c        **** // Calculate total blocksize to travel until target
 526:main.c        **** float CalculateDistanceToTravel(float blockSize) {
 1748              		.loc 1 526 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 40
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0000 80B5     		push	{r7, lr}
 1753              		.cfi_def_cfa_offset 8
 1754              		.cfi_offset 7, -8
 1755              		.cfi_offset 14, -4
 1756 0002 8AB0     		sub	sp, sp, #40
 1757              		.cfi_def_cfa_offset 48
 1758 0004 00AF     		add	r7, sp, #0
 1759              		.cfi_def_cfa_register 7
 1760 0006 7860     		str	r0, [r7, #4]	@ float
 527:main.c        ****     float totalBlockSize;
 528:main.c        ****     
 529:main.c        ****     // Check for Row, Col that target is 
 530:main.c        ****     int targetRow = food_list[0][0];
 1761              		.loc 1 530 0
 1762 0008 9E4B     		ldr	r3, .L153
 1763 000a 1B68     		ldr	r3, [r3]
 1764 000c 3B61     		str	r3, [r7, #16]
 531:main.c        ****     int targetCol = food_list[0][1];
 1765              		.loc 1 531 0
 1766 000e 9D4B     		ldr	r3, .L153
 1767 0010 5B68     		ldr	r3, [r3, #4]
 1768 0012 FB60     		str	r3, [r7, #12]
 532:main.c        ****     
 533:main.c        ****     int pathCount = 0;
 1769              		.loc 1 533 0
 1770 0014 0023     		movs	r3, #0
 1771 0016 7B62     		str	r3, [r7, #36]
 534:main.c        ****     
 535:main.c        ****     // Depending on the robot orientation
 536:main.c        ****     // count++ if row, col is 8
 537:main.c        ****     // count reset if row, col is 1 or 0
 538:main.c        ****     // save count if row, col is 9
 539:main.c        ****     switch (currentRobotOrientation) {
 1772              		.loc 1 539 0
 1773 0018 9B4B     		ldr	r3, .L153+4
 1774 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1775 001c 032B     		cmp	r3, #3
 1776 001e 00F21F81 		bhi	.L109
 1777 0022 01A2     		adr	r2, .L111
 1778 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1779              		.p2align 2
 1780              	.L111:
 1781 0028 39000000 		.word	.L110+1
 1782 002c C3000000 		.word	.L112+1
 1783 0030 4D010000 		.word	.L113+1
 1784 0034 D7010000 		.word	.L114+1
 1785              		.p2align 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 42


 1786              	.L110:
 1787              	.LBB3:
 540:main.c        ****         case Up:
 541:main.c        ****             // Column
 542:main.c        ****             // Start from Bottom (since we're facing up)
 543:main.c        ****             for (int i = MAX_ROWS; i >= 0; i--) {
 1788              		.loc 1 543 0
 1789 0038 0F23     		movs	r3, #15
 1790 003a 3B62     		str	r3, [r7, #32]
 1791 003c 3BE0     		b	.L115
 1792              	.L121:
 544:main.c        ****                 if (map[i][targetCol] == 9) {
 1793              		.loc 1 544 0
 1794 003e 9349     		ldr	r1, .L153+8
 1795 0040 3A6A     		ldr	r2, [r7, #32]
 1796 0042 1346     		mov	r3, r2
 1797 0044 DB00     		lsls	r3, r3, #3
 1798 0046 1344     		add	r3, r3, r2
 1799 0048 5B00     		lsls	r3, r3, #1
 1800 004a 1344     		add	r3, r3, r2
 1801 004c FA68     		ldr	r2, [r7, #12]
 1802 004e 1344     		add	r3, r3, r2
 1803 0050 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1804 0054 092B     		cmp	r3, #9
 1805 0056 32D0     		beq	.L148
 545:main.c        ****                     break;    
 546:main.c        ****                 }
 547:main.c        ****                 if (map[i][targetCol] == 8) {
 1806              		.loc 1 547 0
 1807 0058 8C49     		ldr	r1, .L153+8
 1808 005a 3A6A     		ldr	r2, [r7, #32]
 1809 005c 1346     		mov	r3, r2
 1810 005e DB00     		lsls	r3, r3, #3
 1811 0060 1344     		add	r3, r3, r2
 1812 0062 5B00     		lsls	r3, r3, #1
 1813 0064 1344     		add	r3, r3, r2
 1814 0066 FA68     		ldr	r2, [r7, #12]
 1815 0068 1344     		add	r3, r3, r2
 1816 006a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1817 006e 082B     		cmp	r3, #8
 1818 0070 02D1     		bne	.L118
 548:main.c        ****                     pathCount++;    
 1819              		.loc 1 548 0
 1820 0072 7B6A     		ldr	r3, [r7, #36]
 1821 0074 0133     		adds	r3, r3, #1
 1822 0076 7B62     		str	r3, [r7, #36]
 1823              	.L118:
 549:main.c        ****                 }
 550:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1824              		.loc 1 550 0
 1825 0078 8449     		ldr	r1, .L153+8
 1826 007a 3A6A     		ldr	r2, [r7, #32]
 1827 007c 1346     		mov	r3, r2
 1828 007e DB00     		lsls	r3, r3, #3
 1829 0080 1344     		add	r3, r3, r2
 1830 0082 5B00     		lsls	r3, r3, #1
 1831 0084 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 43


 1832 0086 FA68     		ldr	r2, [r7, #12]
 1833 0088 1344     		add	r3, r3, r2
 1834 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1835 008e 002B     		cmp	r3, #0
 1836 0090 0CD0     		beq	.L119
 1837              		.loc 1 550 0 is_stmt 0 discriminator 1
 1838 0092 7E49     		ldr	r1, .L153+8
 1839 0094 3A6A     		ldr	r2, [r7, #32]
 1840 0096 1346     		mov	r3, r2
 1841 0098 DB00     		lsls	r3, r3, #3
 1842 009a 1344     		add	r3, r3, r2
 1843 009c 5B00     		lsls	r3, r3, #1
 1844 009e 1344     		add	r3, r3, r2
 1845 00a0 FA68     		ldr	r2, [r7, #12]
 1846 00a2 1344     		add	r3, r3, r2
 1847 00a4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1848 00a8 012B     		cmp	r3, #1
 1849 00aa 01D1     		bne	.L120
 1850              	.L119:
 551:main.c        ****                     pathCount = 0;
 1851              		.loc 1 551 0 is_stmt 1
 1852 00ac 0023     		movs	r3, #0
 1853 00ae 7B62     		str	r3, [r7, #36]
 1854              	.L120:
 543:main.c        ****                 if (map[i][targetCol] == 9) {
 1855              		.loc 1 543 0 discriminator 2
 1856 00b0 3B6A     		ldr	r3, [r7, #32]
 1857 00b2 013B     		subs	r3, r3, #1
 1858 00b4 3B62     		str	r3, [r7, #32]
 1859              	.L115:
 543:main.c        ****                 if (map[i][targetCol] == 9) {
 1860              		.loc 1 543 0 is_stmt 0 discriminator 1
 1861 00b6 3B6A     		ldr	r3, [r7, #32]
 1862 00b8 002B     		cmp	r3, #0
 1863 00ba C0DA     		bge	.L121
 1864              	.LBE3:
 552:main.c        ****                 }
 553:main.c        ****             }
 554:main.c        ****             break;
 1865              		.loc 1 554 0 is_stmt 1
 1866 00bc D0E0     		b	.L109
 1867              	.L148:
 1868              	.LBB4:
 545:main.c        ****                 }
 1869              		.loc 1 545 0
 1870 00be 00BF     		nop
 1871              	.LBE4:
 1872              		.loc 1 554 0
 1873 00c0 CEE0     		b	.L109
 1874              	.L112:
 1875              	.LBB5:
 555:main.c        ****         case Down:
 556:main.c        ****             // Target Column, Check Row
 557:main.c        ****             // Start from Top
 558:main.c        ****             for (int i = 0; i < MAX_ROWS; i++) {
 1876              		.loc 1 558 0
 1877 00c2 0023     		movs	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 44


 1878 00c4 FB61     		str	r3, [r7, #28]
 1879 00c6 3BE0     		b	.L122
 1880              	.L128:
 559:main.c        ****                 if (map[i][targetCol] == 9) {
 1881              		.loc 1 559 0
 1882 00c8 7049     		ldr	r1, .L153+8
 1883 00ca FA69     		ldr	r2, [r7, #28]
 1884 00cc 1346     		mov	r3, r2
 1885 00ce DB00     		lsls	r3, r3, #3
 1886 00d0 1344     		add	r3, r3, r2
 1887 00d2 5B00     		lsls	r3, r3, #1
 1888 00d4 1344     		add	r3, r3, r2
 1889 00d6 FA68     		ldr	r2, [r7, #12]
 1890 00d8 1344     		add	r3, r3, r2
 1891 00da 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1892 00de 092B     		cmp	r3, #9
 1893 00e0 32D0     		beq	.L149
 560:main.c        ****                     break;    
 561:main.c        ****                 }
 562:main.c        ****                 if (map[i][targetCol] == 8) {
 1894              		.loc 1 562 0
 1895 00e2 6A49     		ldr	r1, .L153+8
 1896 00e4 FA69     		ldr	r2, [r7, #28]
 1897 00e6 1346     		mov	r3, r2
 1898 00e8 DB00     		lsls	r3, r3, #3
 1899 00ea 1344     		add	r3, r3, r2
 1900 00ec 5B00     		lsls	r3, r3, #1
 1901 00ee 1344     		add	r3, r3, r2
 1902 00f0 FA68     		ldr	r2, [r7, #12]
 1903 00f2 1344     		add	r3, r3, r2
 1904 00f4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1905 00f8 082B     		cmp	r3, #8
 1906 00fa 02D1     		bne	.L125
 563:main.c        ****                     pathCount++;    
 1907              		.loc 1 563 0
 1908 00fc 7B6A     		ldr	r3, [r7, #36]
 1909 00fe 0133     		adds	r3, r3, #1
 1910 0100 7B62     		str	r3, [r7, #36]
 1911              	.L125:
 564:main.c        ****                 }
 565:main.c        ****                 if (map[i][targetCol] == 0 || map[i][targetCol] == 1) {
 1912              		.loc 1 565 0
 1913 0102 6249     		ldr	r1, .L153+8
 1914 0104 FA69     		ldr	r2, [r7, #28]
 1915 0106 1346     		mov	r3, r2
 1916 0108 DB00     		lsls	r3, r3, #3
 1917 010a 1344     		add	r3, r3, r2
 1918 010c 5B00     		lsls	r3, r3, #1
 1919 010e 1344     		add	r3, r3, r2
 1920 0110 FA68     		ldr	r2, [r7, #12]
 1921 0112 1344     		add	r3, r3, r2
 1922 0114 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1923 0118 002B     		cmp	r3, #0
 1924 011a 0CD0     		beq	.L126
 1925              		.loc 1 565 0 is_stmt 0 discriminator 1
 1926 011c 5B49     		ldr	r1, .L153+8
 1927 011e FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 45


 1928 0120 1346     		mov	r3, r2
 1929 0122 DB00     		lsls	r3, r3, #3
 1930 0124 1344     		add	r3, r3, r2
 1931 0126 5B00     		lsls	r3, r3, #1
 1932 0128 1344     		add	r3, r3, r2
 1933 012a FA68     		ldr	r2, [r7, #12]
 1934 012c 1344     		add	r3, r3, r2
 1935 012e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1936 0132 012B     		cmp	r3, #1
 1937 0134 01D1     		bne	.L127
 1938              	.L126:
 566:main.c        ****                     pathCount = 0;
 1939              		.loc 1 566 0 is_stmt 1
 1940 0136 0023     		movs	r3, #0
 1941 0138 7B62     		str	r3, [r7, #36]
 1942              	.L127:
 558:main.c        ****                 if (map[i][targetCol] == 9) {
 1943              		.loc 1 558 0 discriminator 2
 1944 013a FB69     		ldr	r3, [r7, #28]
 1945 013c 0133     		adds	r3, r3, #1
 1946 013e FB61     		str	r3, [r7, #28]
 1947              	.L122:
 558:main.c        ****                 if (map[i][targetCol] == 9) {
 1948              		.loc 1 558 0 is_stmt 0 discriminator 1
 1949 0140 FB69     		ldr	r3, [r7, #28]
 1950 0142 0E2B     		cmp	r3, #14
 1951 0144 C0DD     		ble	.L128
 1952              	.LBE5:
 567:main.c        ****                 }
 568:main.c        ****             }
 569:main.c        ****             break;
 1953              		.loc 1 569 0 is_stmt 1
 1954 0146 8BE0     		b	.L109
 1955              	.L149:
 1956              	.LBB6:
 560:main.c        ****                 }
 1957              		.loc 1 560 0
 1958 0148 00BF     		nop
 1959              	.LBE6:
 1960              		.loc 1 569 0
 1961 014a 89E0     		b	.L109
 1962              	.L113:
 1963              	.LBB7:
 570:main.c        ****         case Left:
 571:main.c        ****             // Target Row, Check Col
 572:main.c        ****             // Start from Right
 573:main.c        ****             for (int i = MAX_COLS; i >= 0; i--) {
 1964              		.loc 1 573 0
 1965 014c 1323     		movs	r3, #19
 1966 014e BB61     		str	r3, [r7, #24]
 1967 0150 3BE0     		b	.L129
 1968              	.L135:
 574:main.c        ****                 if (map[targetRow][i] == 9) {
 1969              		.loc 1 574 0
 1970 0152 4E49     		ldr	r1, .L153+8
 1971 0154 3A69     		ldr	r2, [r7, #16]
 1972 0156 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 46


 1973 0158 DB00     		lsls	r3, r3, #3
 1974 015a 1344     		add	r3, r3, r2
 1975 015c 5B00     		lsls	r3, r3, #1
 1976 015e 1344     		add	r3, r3, r2
 1977 0160 BA69     		ldr	r2, [r7, #24]
 1978 0162 1344     		add	r3, r3, r2
 1979 0164 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1980 0168 092B     		cmp	r3, #9
 1981 016a 32D0     		beq	.L150
 575:main.c        ****                     break;    
 576:main.c        ****                 }
 577:main.c        ****                 if (map[targetRow][i] == 8) {
 1982              		.loc 1 577 0
 1983 016c 4749     		ldr	r1, .L153+8
 1984 016e 3A69     		ldr	r2, [r7, #16]
 1985 0170 1346     		mov	r3, r2
 1986 0172 DB00     		lsls	r3, r3, #3
 1987 0174 1344     		add	r3, r3, r2
 1988 0176 5B00     		lsls	r3, r3, #1
 1989 0178 1344     		add	r3, r3, r2
 1990 017a BA69     		ldr	r2, [r7, #24]
 1991 017c 1344     		add	r3, r3, r2
 1992 017e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1993 0182 082B     		cmp	r3, #8
 1994 0184 02D1     		bne	.L132
 578:main.c        ****                     pathCount++;    
 1995              		.loc 1 578 0
 1996 0186 7B6A     		ldr	r3, [r7, #36]
 1997 0188 0133     		adds	r3, r3, #1
 1998 018a 7B62     		str	r3, [r7, #36]
 1999              	.L132:
 579:main.c        ****                 }
 580:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2000              		.loc 1 580 0
 2001 018c 3F49     		ldr	r1, .L153+8
 2002 018e 3A69     		ldr	r2, [r7, #16]
 2003 0190 1346     		mov	r3, r2
 2004 0192 DB00     		lsls	r3, r3, #3
 2005 0194 1344     		add	r3, r3, r2
 2006 0196 5B00     		lsls	r3, r3, #1
 2007 0198 1344     		add	r3, r3, r2
 2008 019a BA69     		ldr	r2, [r7, #24]
 2009 019c 1344     		add	r3, r3, r2
 2010 019e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2011 01a2 002B     		cmp	r3, #0
 2012 01a4 0CD0     		beq	.L133
 2013              		.loc 1 580 0 is_stmt 0 discriminator 1
 2014 01a6 3949     		ldr	r1, .L153+8
 2015 01a8 BA69     		ldr	r2, [r7, #24]
 2016 01aa 1346     		mov	r3, r2
 2017 01ac DB00     		lsls	r3, r3, #3
 2018 01ae 1344     		add	r3, r3, r2
 2019 01b0 5B00     		lsls	r3, r3, #1
 2020 01b2 1344     		add	r3, r3, r2
 2021 01b4 FA68     		ldr	r2, [r7, #12]
 2022 01b6 1344     		add	r3, r3, r2
 2023 01b8 51F82330 		ldr	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 47


 2024 01bc 012B     		cmp	r3, #1
 2025 01be 01D1     		bne	.L134
 2026              	.L133:
 581:main.c        ****                     pathCount = 0;
 2027              		.loc 1 581 0 is_stmt 1
 2028 01c0 0023     		movs	r3, #0
 2029 01c2 7B62     		str	r3, [r7, #36]
 2030              	.L134:
 573:main.c        ****                 if (map[targetRow][i] == 9) {
 2031              		.loc 1 573 0 discriminator 2
 2032 01c4 BB69     		ldr	r3, [r7, #24]
 2033 01c6 013B     		subs	r3, r3, #1
 2034 01c8 BB61     		str	r3, [r7, #24]
 2035              	.L129:
 573:main.c        ****                 if (map[targetRow][i] == 9) {
 2036              		.loc 1 573 0 is_stmt 0 discriminator 1
 2037 01ca BB69     		ldr	r3, [r7, #24]
 2038 01cc 002B     		cmp	r3, #0
 2039 01ce C0DA     		bge	.L135
 2040              	.LBE7:
 582:main.c        ****                 }
 583:main.c        ****             }
 584:main.c        ****             break;
 2041              		.loc 1 584 0 is_stmt 1
 2042 01d0 46E0     		b	.L109
 2043              	.L150:
 2044              	.LBB8:
 575:main.c        ****                 }
 2045              		.loc 1 575 0
 2046 01d2 00BF     		nop
 2047              	.LBE8:
 2048              		.loc 1 584 0
 2049 01d4 44E0     		b	.L109
 2050              	.L114:
 2051              	.LBB9:
 585:main.c        ****         
 586:main.c        ****         case Right:
 587:main.c        ****             // Target Row, Check Col
 588:main.c        ****             // Start from Left
 589:main.c        ****             for (int i = 0; i < MAX_COLS; i++) {
 2052              		.loc 1 589 0
 2053 01d6 0023     		movs	r3, #0
 2054 01d8 7B61     		str	r3, [r7, #20]
 2055 01da 3BE0     		b	.L136
 2056              	.L142:
 590:main.c        ****                 if (map[targetRow][i] == 9) {
 2057              		.loc 1 590 0
 2058 01dc 2B49     		ldr	r1, .L153+8
 2059 01de 3A69     		ldr	r2, [r7, #16]
 2060 01e0 1346     		mov	r3, r2
 2061 01e2 DB00     		lsls	r3, r3, #3
 2062 01e4 1344     		add	r3, r3, r2
 2063 01e6 5B00     		lsls	r3, r3, #1
 2064 01e8 1344     		add	r3, r3, r2
 2065 01ea 7A69     		ldr	r2, [r7, #20]
 2066 01ec 1344     		add	r3, r3, r2
 2067 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 48


 2068 01f2 092B     		cmp	r3, #9
 2069 01f4 32D0     		beq	.L151
 591:main.c        ****                     break;    
 592:main.c        ****                 }
 593:main.c        ****                 if (map[targetRow][i] == 8) {
 2070              		.loc 1 593 0
 2071 01f6 2549     		ldr	r1, .L153+8
 2072 01f8 3A69     		ldr	r2, [r7, #16]
 2073 01fa 1346     		mov	r3, r2
 2074 01fc DB00     		lsls	r3, r3, #3
 2075 01fe 1344     		add	r3, r3, r2
 2076 0200 5B00     		lsls	r3, r3, #1
 2077 0202 1344     		add	r3, r3, r2
 2078 0204 7A69     		ldr	r2, [r7, #20]
 2079 0206 1344     		add	r3, r3, r2
 2080 0208 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2081 020c 082B     		cmp	r3, #8
 2082 020e 02D1     		bne	.L139
 594:main.c        ****                     pathCount++;    
 2083              		.loc 1 594 0
 2084 0210 7B6A     		ldr	r3, [r7, #36]
 2085 0212 0133     		adds	r3, r3, #1
 2086 0214 7B62     		str	r3, [r7, #36]
 2087              	.L139:
 595:main.c        ****                 }
 596:main.c        ****                 if (map[targetRow][i] == 0 || map[i][targetCol] == 1) {
 2088              		.loc 1 596 0
 2089 0216 1D49     		ldr	r1, .L153+8
 2090 0218 3A69     		ldr	r2, [r7, #16]
 2091 021a 1346     		mov	r3, r2
 2092 021c DB00     		lsls	r3, r3, #3
 2093 021e 1344     		add	r3, r3, r2
 2094 0220 5B00     		lsls	r3, r3, #1
 2095 0222 1344     		add	r3, r3, r2
 2096 0224 7A69     		ldr	r2, [r7, #20]
 2097 0226 1344     		add	r3, r3, r2
 2098 0228 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2099 022c 002B     		cmp	r3, #0
 2100 022e 0CD0     		beq	.L140
 2101              		.loc 1 596 0 is_stmt 0 discriminator 1
 2102 0230 1649     		ldr	r1, .L153+8
 2103 0232 7A69     		ldr	r2, [r7, #20]
 2104 0234 1346     		mov	r3, r2
 2105 0236 DB00     		lsls	r3, r3, #3
 2106 0238 1344     		add	r3, r3, r2
 2107 023a 5B00     		lsls	r3, r3, #1
 2108 023c 1344     		add	r3, r3, r2
 2109 023e FA68     		ldr	r2, [r7, #12]
 2110 0240 1344     		add	r3, r3, r2
 2111 0242 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2112 0246 012B     		cmp	r3, #1
 2113 0248 01D1     		bne	.L141
 2114              	.L140:
 597:main.c        ****                     pathCount = 0;
 2115              		.loc 1 597 0 is_stmt 1
 2116 024a 0023     		movs	r3, #0
 2117 024c 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 49


 2118              	.L141:
 589:main.c        ****                 if (map[targetRow][i] == 9) {
 2119              		.loc 1 589 0 discriminator 2
 2120 024e 7B69     		ldr	r3, [r7, #20]
 2121 0250 0133     		adds	r3, r3, #1
 2122 0252 7B61     		str	r3, [r7, #20]
 2123              	.L136:
 589:main.c        ****                 if (map[targetRow][i] == 9) {
 2124              		.loc 1 589 0 is_stmt 0 discriminator 1
 2125 0254 7B69     		ldr	r3, [r7, #20]
 2126 0256 122B     		cmp	r3, #18
 2127 0258 C0DD     		ble	.L142
 2128              	.LBE9:
 598:main.c        ****                 }
 599:main.c        **** 
 600:main.c        ****             }
 601:main.c        ****             break;
 2129              		.loc 1 601 0 is_stmt 1
 2130 025a 00E0     		b	.L152
 2131              	.L151:
 2132              	.LBB10:
 591:main.c        ****                 }
 2133              		.loc 1 591 0
 2134 025c 00BF     		nop
 2135              	.L152:
 2136              	.LBE10:
 2137              		.loc 1 601 0
 2138 025e 00BF     		nop
 2139              	.L109:
 602:main.c        ****         
 603:main.c        ****     }
 604:main.c        ****     totalBlockSize = blockSize * pathCount;
 2140              		.loc 1 604 0
 2141 0260 786A     		ldr	r0, [r7, #36]
 2142 0262 FFF7FEFF 		bl	__aeabi_i2f
 2143 0266 0346     		mov	r3, r0
 2144 0268 7968     		ldr	r1, [r7, #4]	@ float
 2145 026a 1846     		mov	r0, r3
 2146 026c FFF7FEFF 		bl	__aeabi_fmul
 2147 0270 0346     		mov	r3, r0
 2148 0272 BB60     		str	r3, [r7, #8]	@ float
 605:main.c        ****     clearMap(map); // clear map after calculating total block size to travel for forward until targ
 2149              		.loc 1 605 0
 2150 0274 0548     		ldr	r0, .L153+8
 2151 0276 FFF7FEFF 		bl	clearMap
 606:main.c        ****     return totalBlockSize;
 2152              		.loc 1 606 0
 2153 027a BB68     		ldr	r3, [r7, #8]	@ float
 607:main.c        **** }
 2154              		.loc 1 607 0
 2155 027c 1846     		mov	r0, r3
 2156 027e 2837     		adds	r7, r7, #40
 2157              		.cfi_def_cfa_offset 8
 2158 0280 BD46     		mov	sp, r7
 2159              		.cfi_def_cfa_register 13
 2160              		@ sp needed
 2161 0282 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 50


 2162              	.L154:
 2163              		.align	2
 2164              	.L153:
 2165 0284 00000000 		.word	food_list
 2166 0288 00000000 		.word	currentRobotOrientation
 2167 028c 00000000 		.word	map
 2168              		.cfi_endproc
 2169              	.LFE76:
 2170              		.size	CalculateDistanceToTravel, .-CalculateDistanceToTravel
 2171              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2172              		.align	2
 2173              		.global	MoveToNextInstruction
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	MoveToNextInstruction, %function
 2177              	MoveToNextInstruction:
 2178              	.LFB77:
 608:main.c        **** 
 609:main.c        **** // get next instruction
 610:main.c        **** void MoveToNextInstruction() {
 2179              		.loc 1 610 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 1, uses_anonymous_args = 0
 2183              		@ link register save eliminated.
 2184 0000 80B4     		push	{r7}
 2185              		.cfi_def_cfa_offset 4
 2186              		.cfi_offset 7, -4
 2187 0002 00AF     		add	r7, sp, #0
 2188              		.cfi_def_cfa_register 7
 611:main.c        ****     instructionIndex++;
 2189              		.loc 1 611 0
 2190 0004 0E4B     		ldr	r3, .L156
 2191 0006 1B68     		ldr	r3, [r3]
 2192 0008 0133     		adds	r3, r3, #1
 2193 000a 0D4A     		ldr	r2, .L156
 2194 000c 1360     		str	r3, [r2]
 612:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2195              		.loc 1 612 0
 2196 000e 0D4B     		ldr	r3, .L156+4
 2197 0010 1A68     		ldr	r2, [r3]
 2198 0012 0B4B     		ldr	r3, .L156
 2199 0014 1B68     		ldr	r3, [r3]
 2200 0016 1B01     		lsls	r3, r3, #4
 2201 0018 1344     		add	r3, r3, r2
 2202 001a 5B68     		ldr	r3, [r3, #4]
 2203 001c DAB2     		uxtb	r2, r3
 2204 001e 0A4B     		ldr	r3, .L156+8
 2205 0020 1A70     		strb	r2, [r3]
 613:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2206              		.loc 1 613 0
 2207 0022 084B     		ldr	r3, .L156+4
 2208 0024 1A68     		ldr	r2, [r3]
 2209 0026 064B     		ldr	r3, .L156
 2210 0028 1B68     		ldr	r3, [r3]
 2211 002a 1B01     		lsls	r3, r3, #4
 2212 002c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 51


 2213 002e 9B68     		ldr	r3, [r3, #8]
 2214 0030 DAB2     		uxtb	r2, r3
 2215 0032 064B     		ldr	r3, .L156+12
 2216 0034 1A70     		strb	r2, [r3]
 614:main.c        **** }
 2217              		.loc 1 614 0
 2218 0036 00BF     		nop
 2219 0038 BD46     		mov	sp, r7
 2220              		.cfi_def_cfa_register 13
 2221              		@ sp needed
 2222 003a 80BC     		pop	{r7}
 2223              		.cfi_restore 7
 2224              		.cfi_def_cfa_offset 0
 2225 003c 7047     		bx	lr
 2226              	.L157:
 2227 003e 00BF     		.align	2
 2228              	.L156:
 2229 0040 14000000 		.word	instructionIndex
 2230 0044 00000000 		.word	instructionList
 2231 0048 3C000000 		.word	currentIgnoreL
 2232 004c 3D000000 		.word	currentIgnoreR
 2233              		.cfi_endproc
 2234              	.LFE77:
 2235              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2236              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2237              		.align	2
 2238              		.global	GetInstructionAtIndex
 2239              		.thumb
 2240              		.thumb_func
 2241              		.type	GetInstructionAtIndex, %function
 2242              	GetInstructionAtIndex:
 2243              	.LFB78:
 615:main.c        **** 
 616:main.c        **** Instruction GetInstructionAtIndex(int numSteps, Instruction instructionList[numSteps]) {
 2244              		.loc 1 616 0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 40
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248              		@ link register save eliminated.
 2249 0000 90B4     		push	{r4, r7}
 2250              		.cfi_def_cfa_offset 8
 2251              		.cfi_offset 4, -8
 2252              		.cfi_offset 7, -4
 2253 0002 8AB0     		sub	sp, sp, #40
 2254              		.cfi_def_cfa_offset 48
 2255 0004 00AF     		add	r7, sp, #0
 2256              		.cfi_def_cfa_register 7
 2257 0006 F860     		str	r0, [r7, #12]
 2258 0008 B960     		str	r1, [r7, #8]
 2259 000a 7A60     		str	r2, [r7, #4]
 2260              	.LBB11:
 617:main.c        ****     Instruction nextInstruction;
 618:main.c        ****     // input is list of instructions and robot will react accordingly
 619:main.c        ****     for(int i = instructionIndex; i < numSteps; i++) {
 2261              		.loc 1 619 0
 2262 000c 1A4B     		ldr	r3, .L164
 2263 000e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 52


 2264 0010 7B62     		str	r3, [r7, #36]
 2265 0012 21E0     		b	.L159
 2266              	.L162:
 620:main.c        ****         if(instructionList[i].direction != Skip) {
 2267              		.loc 1 620 0
 2268 0014 7B6A     		ldr	r3, [r7, #36]
 2269 0016 1B01     		lsls	r3, r3, #4
 2270 0018 7A68     		ldr	r2, [r7, #4]
 2271 001a 1344     		add	r3, r3, r2
 2272 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2273 001e 062B     		cmp	r3, #6
 2274 0020 17D0     		beq	.L160
 621:main.c        ****             nextInstruction.direction = instructionList[i].direction;        
 2275              		.loc 1 621 0
 2276 0022 7B6A     		ldr	r3, [r7, #36]
 2277 0024 1B01     		lsls	r3, r3, #4
 2278 0026 7A68     		ldr	r2, [r7, #4]
 2279 0028 1344     		add	r3, r3, r2
 2280 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2281 002c 3B75     		strb	r3, [r7, #20]
 622:main.c        ****             nextInstruction.expectedOrientation = instructionList[i].expectedOrientation;
 2282              		.loc 1 622 0
 2283 002e 7B6A     		ldr	r3, [r7, #36]
 2284 0030 1B01     		lsls	r3, r3, #4
 2285 0032 7A68     		ldr	r2, [r7, #4]
 2286 0034 1344     		add	r3, r3, r2
 2287 0036 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2288 0038 87F82030 		strb	r3, [r7, #32]
 623:main.c        ****             instructionIndex = i;
 2289              		.loc 1 623 0
 2290 003c 7B6A     		ldr	r3, [r7, #36]
 2291 003e 0E4A     		ldr	r2, .L164
 2292 0040 1360     		str	r3, [r2]
 624:main.c        ****             return nextInstruction; // return next instruction
 2293              		.loc 1 624 0
 2294 0042 FB68     		ldr	r3, [r7, #12]
 2295 0044 1C46     		mov	r4, r3
 2296 0046 07F11403 		add	r3, r7, #20
 2297 004a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2298 004c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2299 0050 0DE0     		b	.L158
 2300              	.L160:
 619:main.c        ****         if(instructionList[i].direction != Skip) {
 2301              		.loc 1 619 0 discriminator 2
 2302 0052 7B6A     		ldr	r3, [r7, #36]
 2303 0054 0133     		adds	r3, r3, #1
 2304 0056 7B62     		str	r3, [r7, #36]
 2305              	.L159:
 619:main.c        ****         if(instructionList[i].direction != Skip) {
 2306              		.loc 1 619 0 is_stmt 0 discriminator 1
 2307 0058 7A6A     		ldr	r2, [r7, #36]
 2308 005a BB68     		ldr	r3, [r7, #8]
 2309 005c 9A42     		cmp	r2, r3
 2310 005e D9DB     		blt	.L162
 2311              	.LBE11:
 625:main.c        ****         }
 626:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 53


 627:main.c        ****     return nextInstruction;
 2312              		.loc 1 627 0 is_stmt 1
 2313 0060 FB68     		ldr	r3, [r7, #12]
 2314 0062 1C46     		mov	r4, r3
 2315 0064 07F11403 		add	r3, r7, #20
 2316 0068 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2317 006a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2318              	.L158:
 628:main.c        **** }
 2319              		.loc 1 628 0
 2320 006e F868     		ldr	r0, [r7, #12]
 2321 0070 2837     		adds	r7, r7, #40
 2322              		.cfi_def_cfa_offset 8
 2323 0072 BD46     		mov	sp, r7
 2324              		.cfi_def_cfa_register 13
 2325              		@ sp needed
 2326 0074 90BC     		pop	{r4, r7}
 2327              		.cfi_restore 7
 2328              		.cfi_restore 4
 2329              		.cfi_def_cfa_offset 0
 2330 0076 7047     		bx	lr
 2331              	.L165:
 2332              		.align	2
 2333              	.L164:
 2334 0078 14000000 		.word	instructionIndex
 2335              		.cfi_endproc
 2336              	.LFE78:
 2337              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2338              		.section	.text.SetRobotMovement,"ax",%progbits
 2339              		.align	2
 2340              		.global	SetRobotMovement
 2341              		.thumb
 2342              		.thumb_func
 2343              		.type	SetRobotMovement, %function
 2344              	SetRobotMovement:
 2345              	.LFB79:
 629:main.c        **** 
 630:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 631:main.c        **** void SetRobotMovement() {
 2346              		.loc 1 631 0
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 16
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350 0000 90B5     		push	{r4, r7, lr}
 2351              		.cfi_def_cfa_offset 12
 2352              		.cfi_offset 4, -12
 2353              		.cfi_offset 7, -8
 2354              		.cfi_offset 14, -4
 2355 0002 85B0     		sub	sp, sp, #20
 2356              		.cfi_def_cfa_offset 32
 2357 0004 00AF     		add	r7, sp, #0
 2358              		.cfi_def_cfa_register 7
 632:main.c        ****     currentInstruction = GetInstructionAtIndex(numSteps, instructionList); // get current/ next ins
 2359              		.loc 1 632 0
 2360 0006 2A4B     		ldr	r3, .L182
 2361 0008 1968     		ldr	r1, [r3]
 2362 000a 2A4B     		ldr	r3, .L182+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 54


 2363 000c 1A68     		ldr	r2, [r3]
 2364 000e 2A4C     		ldr	r4, .L182+8
 2365 0010 3B46     		mov	r3, r7
 2366 0012 1846     		mov	r0, r3
 2367 0014 FFF7FEFF 		bl	GetInstructionAtIndex
 2368 0018 3B46     		mov	r3, r7
 2369 001a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2370 001c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 633:main.c        ****     previousDirection = currentDirection;
 2371              		.loc 1 633 0
 2372 0020 264B     		ldr	r3, .L182+12
 2373 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2374 0024 264B     		ldr	r3, .L182+16
 2375 0026 1A70     		strb	r2, [r3]
 634:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2376              		.loc 1 634 0
 2377 0028 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2378 002c 0346     		mov	r3, r0
 2379 002e 1A46     		mov	r2, r3
 2380 0030 224B     		ldr	r3, .L182+12
 2381 0032 1A70     		strb	r2, [r3]
 635:main.c        ****     // move robot depending on sensors
 636:main.c        ****     switch (currentDirection) {
 2382              		.loc 1 636 0
 2383 0034 214B     		ldr	r3, .L182+12
 2384 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0038 0A2B     		cmp	r3, #10
 2386 003a 35D8     		bhi	.L180
 2387 003c 01A2     		adr	r2, .L169
 2388 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2389 0042 00BF     		.p2align 2
 2390              	.L169:
 2391 0044 71000000 		.word	.L168+1
 2392 0048 77000000 		.word	.L170+1
 2393 004c 7D000000 		.word	.L171+1
 2394 0050 89000000 		.word	.L172+1
 2395 0054 83000000 		.word	.L173+1
 2396 0058 8F000000 		.word	.L174+1
 2397 005c A7000000 		.word	.L181+1
 2398 0060 A7000000 		.word	.L181+1
 2399 0064 95000000 		.word	.L177+1
 2400 0068 9B000000 		.word	.L178+1
 2401 006c A1000000 		.word	.L179+1
 2402              		.p2align 1
 2403              	.L168:
 637:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 638:main.c        ****         case Forward:
 639:main.c        ****             moveForward();
 2404              		.loc 1 639 0
 2405 0070 FFF7FEFF 		bl	moveForward
 640:main.c        ****             break;
 2406              		.loc 1 640 0
 2407 0074 18E0     		b	.L167
 2408              	.L170:
 641:main.c        ****         case TurnRight:
 642:main.c        ****             turnRight();
 2409              		.loc 1 642 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 55


 2410 0076 FFF7FEFF 		bl	turnRight
 643:main.c        ****             break;
 2411              		.loc 1 643 0
 2412 007a 15E0     		b	.L167
 2413              	.L171:
 644:main.c        ****         case TurnLeft:
 645:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2414              		.loc 1 645 0
 2415 007c FFF7FEFF 		bl	turnLeft
 646:main.c        ****             break;
 2416              		.loc 1 646 0
 2417 0080 12E0     		b	.L167
 2418              	.L173:
 647:main.c        ****         case AdjustToTheRight:
 648:main.c        ****             adjustRight();
 2419              		.loc 1 648 0
 2420 0082 FFF7FEFF 		bl	adjustRight
 649:main.c        ****             break;
 2421              		.loc 1 649 0
 2422 0086 0FE0     		b	.L167
 2423              	.L172:
 650:main.c        ****         case AdjustToTheLeft:
 651:main.c        ****             adjustLeft();
 2424              		.loc 1 651 0
 2425 0088 FFF7FEFF 		bl	adjustLeft
 652:main.c        ****             break;
 2426              		.loc 1 652 0
 2427 008c 0CE0     		b	.L167
 2428              	.L174:
 653:main.c        ****         case Stop:
 654:main.c        ****             stopMoving();
 2429              		.loc 1 654 0
 2430 008e FFF7FEFF 		bl	stopMoving
 655:main.c        ****             break;
 2431              		.loc 1 655 0
 2432 0092 09E0     		b	.L167
 2433              	.L177:
 656:main.c        ****         case ForwardAfterTurn:
 657:main.c        ****             moveForward();
 2434              		.loc 1 657 0
 2435 0094 FFF7FEFF 		bl	moveForward
 658:main.c        ****             break;
 2436              		.loc 1 658 0
 2437 0098 06E0     		b	.L167
 2438              	.L178:
 659:main.c        ****         case Backward:
 660:main.c        ****             moveBackward();
 2439              		.loc 1 660 0
 2440 009a FFF7FEFF 		bl	moveBackward
 661:main.c        ****             break;
 2441              		.loc 1 661 0
 2442 009e 03E0     		b	.L167
 2443              	.L179:
 662:main.c        ****         case waitForTurn:
 663:main.c        ****             break;
 664:main.c        ****         case Spin180:
 665:main.c        ****             RotateClockwise180Degrees();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 56


 2444              		.loc 1 665 0
 2445 00a0 FFF7FEFF 		bl	RotateClockwise180Degrees
 666:main.c        ****             break;
 2446              		.loc 1 666 0
 2447 00a4 00E0     		b	.L167
 2448              	.L181:
 667:main.c        ****         /*case waitForLeftTurn:
 668:main.c        ****             moveForward();
 669:main.c        ****             break;
 670:main.c        ****         case waitForRightTurn:
 671:main.c        ****             moveForward();
 672:main.c        ****             break;*/
 673:main.c        ****         case Unknown:
 674:main.c        ****             // UNKNOWN CONFIGURATION
 675:main.c        ****             break;  
 2449              		.loc 1 675 0
 2450 00a6 00BF     		nop
 2451              	.L167:
 2452              	.L180:
 676:main.c        ****     }
 677:main.c        **** }...
 2453              		.loc 1 677 0
 2454 00a8 00BF     		nop
 2455 00aa 1437     		adds	r7, r7, #20
 2456              		.cfi_def_cfa_offset 12
 2457 00ac BD46     		mov	sp, r7
 2458              		.cfi_def_cfa_register 13
 2459              		@ sp needed
 2460 00ae 90BD     		pop	{r4, r7, pc}
 2461              	.L183:
 2462              		.align	2
 2463              	.L182:
 2464 00b0 00000000 		.word	numSteps
 2465 00b4 00000000 		.word	instructionList
 2466 00b8 00000000 		.word	currentInstruction
 2467 00bc 00000000 		.word	currentDirection
 2468 00c0 00000000 		.word	previousDirection
 2469              		.cfi_endproc
 2470              	.LFE79:
 2471              		.size	SetRobotMovement, .-SetRobotMovement
 2472              		.text
 2473              	.Letext0:
 2474              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2475              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2476              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2477              		.file 5 "vars.h"
 2478              		.file 6 "pathfinding.h"
 2479              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2480              		.file 8 "map.h"
 2481              		.section	.debug_info,"",%progbits
 2482              	.Ldebug_info0:
 2483 0000 AC090000 		.4byte	0x9ac
 2484 0004 0400     		.2byte	0x4
 2485 0006 00000000 		.4byte	.Ldebug_abbrev0
 2486 000a 04       		.byte	0x4
 2487 000b 01       		.uleb128 0x1
 2488 000c A2000000 		.4byte	.LASF148
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 57


 2489 0010 0C       		.byte	0xc
 2490 0011 30000000 		.4byte	.LASF149
 2491 0015 7B030000 		.4byte	.LASF150
 2492 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2493 001d 00000000 		.4byte	0
 2494 0021 00000000 		.4byte	.Ldebug_line0
 2495 0025 02       		.uleb128 0x2
 2496 0026 01       		.byte	0x1
 2497 0027 06       		.byte	0x6
 2498 0028 93070000 		.4byte	.LASF0
 2499 002c 02       		.uleb128 0x2
 2500 002d 01       		.byte	0x1
 2501 002e 08       		.byte	0x8
 2502 002f CB060000 		.4byte	.LASF1
 2503 0033 02       		.uleb128 0x2
 2504 0034 02       		.byte	0x2
 2505 0035 05       		.byte	0x5
 2506 0036 A2050000 		.4byte	.LASF2
 2507 003a 02       		.uleb128 0x2
 2508 003b 02       		.byte	0x2
 2509 003c 07       		.byte	0x7
 2510 003d AA070000 		.4byte	.LASF3
 2511 0041 03       		.uleb128 0x3
 2512 0042 75000000 		.4byte	.LASF12
 2513 0046 02       		.byte	0x2
 2514 0047 3F       		.byte	0x3f
 2515 0048 4C000000 		.4byte	0x4c
 2516 004c 02       		.uleb128 0x2
 2517 004d 04       		.byte	0x4
 2518 004e 05       		.byte	0x5
 2519 004f B8050000 		.4byte	.LASF4
 2520 0053 02       		.uleb128 0x2
 2521 0054 04       		.byte	0x4
 2522 0055 07       		.byte	0x7
 2523 0056 75060000 		.4byte	.LASF5
 2524 005a 02       		.uleb128 0x2
 2525 005b 08       		.byte	0x8
 2526 005c 05       		.byte	0x5
 2527 005d 5C040000 		.4byte	.LASF6
 2528 0061 02       		.uleb128 0x2
 2529 0062 08       		.byte	0x8
 2530 0063 07       		.byte	0x7
 2531 0064 9B020000 		.4byte	.LASF7
 2532 0068 04       		.uleb128 0x4
 2533 0069 04       		.byte	0x4
 2534 006a 05       		.byte	0x5
 2535 006b 696E7400 		.ascii	"int\000"
 2536 006f 02       		.uleb128 0x2
 2537 0070 04       		.byte	0x4
 2538 0071 07       		.byte	0x7
 2539 0072 68000000 		.4byte	.LASF8
 2540 0076 02       		.uleb128 0x2
 2541 0077 08       		.byte	0x8
 2542 0078 04       		.byte	0x4
 2543 0079 66050000 		.4byte	.LASF9
 2544 007d 02       		.uleb128 0x2
 2545 007e 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 58


 2546 007f 07       		.byte	0x7
 2547 0080 6C060000 		.4byte	.LASF10
 2548 0084 02       		.uleb128 0x2
 2549 0085 01       		.byte	0x1
 2550 0086 08       		.byte	0x8
 2551 0087 76030000 		.4byte	.LASF11
 2552 008b 03       		.uleb128 0x3
 2553 008c A4060000 		.4byte	.LASF13
 2554 0090 03       		.byte	0x3
 2555 0091 2C       		.byte	0x2c
 2556 0092 41000000 		.4byte	0x41
 2557 0096 05       		.uleb128 0x5
 2558 0097 00080000 		.4byte	.LASF14
 2559 009b 04       		.byte	0x4
 2560 009c E701     		.2byte	0x1e7
 2561 009e 2C000000 		.4byte	0x2c
 2562 00a2 05       		.uleb128 0x5
 2563 00a3 F6030000 		.4byte	.LASF15
 2564 00a7 04       		.byte	0x4
 2565 00a8 E801     		.2byte	0x1e8
 2566 00aa 3A000000 		.4byte	0x3a
 2567 00ae 05       		.uleb128 0x5
 2568 00af 0E050000 		.4byte	.LASF16
 2569 00b3 04       		.byte	0x4
 2570 00b4 E901     		.2byte	0x1e9
 2571 00b6 53000000 		.4byte	0x53
 2572 00ba 05       		.uleb128 0x5
 2573 00bb FD030000 		.4byte	.LASF17
 2574 00bf 04       		.byte	0x4
 2575 00c0 EA01     		.2byte	0x1ea
 2576 00c2 25000000 		.4byte	0x25
 2577 00c6 05       		.uleb128 0x5
 2578 00c7 7F000000 		.4byte	.LASF18
 2579 00cb 04       		.byte	0x4
 2580 00cc EB01     		.2byte	0x1eb
 2581 00ce 33000000 		.4byte	0x33
 2582 00d2 02       		.uleb128 0x2
 2583 00d3 04       		.byte	0x4
 2584 00d4 04       		.byte	0x4
 2585 00d5 63020000 		.4byte	.LASF19
 2586 00d9 02       		.uleb128 0x2
 2587 00da 08       		.byte	0x8
 2588 00db 04       		.byte	0x4
 2589 00dc 06080000 		.4byte	.LASF20
 2590 00e0 06       		.uleb128 0x6
 2591 00e1 96000000 		.4byte	0x96
 2592 00e5 06       		.uleb128 0x6
 2593 00e6 AE000000 		.4byte	0xae
 2594 00ea 07       		.uleb128 0x7
 2595 00eb 96000000 		.4byte	0x96
 2596 00ef FA000000 		.4byte	0xfa
 2597 00f3 08       		.uleb128 0x8
 2598 00f4 7D000000 		.4byte	0x7d
 2599 00f8 03       		.byte	0x3
 2600 00f9 00       		.byte	0
 2601 00fa 09       		.uleb128 0x9
 2602 00fb 30050000 		.4byte	.LASF50
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 59


 2603 00ff 20       		.byte	0x20
 2604 0100 05       		.byte	0x5
 2605 0101 28       		.byte	0x28
 2606 0102 D3010000 		.4byte	0x1d3
 2607 0106 0A       		.uleb128 0xa
 2608 0107 3A050000 		.4byte	.LASF21
 2609 010b 05       		.byte	0x5
 2610 010c 2A       		.byte	0x2a
 2611 010d BA000000 		.4byte	0xba
 2612 0111 00       		.byte	0
 2613 0112 0A       		.uleb128 0xa
 2614 0113 95020000 		.4byte	.LASF22
 2615 0117 05       		.byte	0x5
 2616 0118 2B       		.byte	0x2b
 2617 0119 96000000 		.4byte	0x96
 2618 011d 01       		.byte	0x1
 2619 011e 0A       		.uleb128 0xa
 2620 011f AC060000 		.4byte	.LASF23
 2621 0123 05       		.byte	0x5
 2622 0124 2C       		.byte	0x2c
 2623 0125 C6000000 		.4byte	0xc6
 2624 0129 02       		.byte	0x2
 2625 012a 0A       		.uleb128 0xa
 2626 012b 60030000 		.4byte	.LASF24
 2627 012f 05       		.byte	0x5
 2628 0130 2D       		.byte	0x2d
 2629 0131 C6000000 		.4byte	0xc6
 2630 0135 04       		.byte	0x4
 2631 0136 0A       		.uleb128 0xa
 2632 0137 BD070000 		.4byte	.LASF25
 2633 013b 05       		.byte	0x5
 2634 013c 2E       		.byte	0x2e
 2635 013d C6000000 		.4byte	0xc6
 2636 0141 06       		.byte	0x6
 2637 0142 0A       		.uleb128 0xa
 2638 0143 27080000 		.4byte	.LASF26
 2639 0147 05       		.byte	0x5
 2640 0148 2F       		.byte	0x2f
 2641 0149 C6000000 		.4byte	0xc6
 2642 014d 08       		.byte	0x8
 2643 014e 0A       		.uleb128 0xa
 2644 014f CC040000 		.4byte	.LASF27
 2645 0153 05       		.byte	0x5
 2646 0154 30       		.byte	0x30
 2647 0155 C6000000 		.4byte	0xc6
 2648 0159 0A       		.byte	0xa
 2649 015a 0A       		.uleb128 0xa
 2650 015b CC030000 		.4byte	.LASF28
 2651 015f 05       		.byte	0x5
 2652 0160 31       		.byte	0x31
 2653 0161 C6000000 		.4byte	0xc6
 2654 0165 0C       		.byte	0xc
 2655 0166 0A       		.uleb128 0xa
 2656 0167 3F050000 		.4byte	.LASF29
 2657 016b 05       		.byte	0x5
 2658 016c 32       		.byte	0x32
 2659 016d C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 60


 2660 0171 0E       		.byte	0xe
 2661 0172 0A       		.uleb128 0xa
 2662 0173 6A040000 		.4byte	.LASF30
 2663 0177 05       		.byte	0x5
 2664 0178 33       		.byte	0x33
 2665 0179 C6000000 		.4byte	0xc6
 2666 017d 10       		.byte	0x10
 2667 017e 0A       		.uleb128 0xa
 2668 017f 2C060000 		.4byte	.LASF31
 2669 0183 05       		.byte	0x5
 2670 0184 34       		.byte	0x34
 2671 0185 C6000000 		.4byte	0xc6
 2672 0189 12       		.byte	0x12
 2673 018a 0A       		.uleb128 0xa
 2674 018b 47080000 		.4byte	.LASF32
 2675 018f 05       		.byte	0x5
 2676 0190 35       		.byte	0x35
 2677 0191 C6000000 		.4byte	0xc6
 2678 0195 14       		.byte	0x14
 2679 0196 0A       		.uleb128 0xa
 2680 0197 0D040000 		.4byte	.LASF33
 2681 019b 05       		.byte	0x5
 2682 019c 36       		.byte	0x36
 2683 019d C6000000 		.4byte	0xc6
 2684 01a1 16       		.byte	0x16
 2685 01a2 0A       		.uleb128 0xa
 2686 01a3 86010000 		.4byte	.LASF34
 2687 01a7 05       		.byte	0x5
 2688 01a8 37       		.byte	0x37
 2689 01a9 C6000000 		.4byte	0xc6
 2690 01ad 18       		.byte	0x18
 2691 01ae 0A       		.uleb128 0xa
 2692 01af F2050000 		.4byte	.LASF35
 2693 01b3 05       		.byte	0x5
 2694 01b4 38       		.byte	0x38
 2695 01b5 C6000000 		.4byte	0xc6
 2696 01b9 1A       		.byte	0x1a
 2697 01ba 0A       		.uleb128 0xa
 2698 01bb C3040000 		.4byte	.LASF36
 2699 01bf 05       		.byte	0x5
 2700 01c0 39       		.byte	0x39
 2701 01c1 C6000000 		.4byte	0xc6
 2702 01c5 1C       		.byte	0x1c
 2703 01c6 0A       		.uleb128 0xa
 2704 01c7 3E020000 		.4byte	.LASF37
 2705 01cb 05       		.byte	0x5
 2706 01cc 3A       		.byte	0x3a
 2707 01cd C6000000 		.4byte	0xc6
 2708 01d1 1E       		.byte	0x1e
 2709 01d2 00       		.byte	0
 2710 01d3 0B       		.uleb128 0xb
 2711 01d4 10060000 		.4byte	.LASF41
 2712 01d8 01       		.byte	0x1
 2713 01d9 2C000000 		.4byte	0x2c
 2714 01dd 06       		.byte	0x6
 2715 01de 0D       		.byte	0xd
 2716 01df FB010000 		.4byte	0x1fb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 61


 2717 01e3 0C       		.uleb128 0xc
 2718 01e4 557000   		.ascii	"Up\000"
 2719 01e7 00       		.byte	0
 2720 01e8 0D       		.uleb128 0xd
 2721 01e9 21060000 		.4byte	.LASF38
 2722 01ed 01       		.byte	0x1
 2723 01ee 0D       		.uleb128 0xd
 2724 01ef F2020000 		.4byte	.LASF39
 2725 01f3 02       		.byte	0x2
 2726 01f4 0D       		.uleb128 0xd
 2727 01f5 26060000 		.4byte	.LASF40
 2728 01f9 03       		.byte	0x3
 2729 01fa 00       		.byte	0
 2730 01fb 0B       		.uleb128 0xb
 2731 01fc 1B000000 		.4byte	.LASF42
 2732 0200 01       		.byte	0x1
 2733 0201 2C000000 		.4byte	0x2c
 2734 0205 06       		.byte	0x6
 2735 0206 0E       		.byte	0xe
 2736 0207 36020000 		.4byte	0x236
 2737 020b 0D       		.uleb128 0xd
 2738 020c 7D070000 		.4byte	.LASF43
 2739 0210 00       		.byte	0
 2740 0211 0D       		.uleb128 0xd
 2741 0212 4C040000 		.4byte	.LASF44
 2742 0216 01       		.byte	0x1
 2743 0217 0D       		.uleb128 0xd
 2744 0218 15050000 		.4byte	.LASF45
 2745 021c 02       		.byte	0x2
 2746 021d 0D       		.uleb128 0xd
 2747 021e 95040000 		.4byte	.LASF46
 2748 0222 03       		.byte	0x3
 2749 0223 0D       		.uleb128 0xd
 2750 0224 30010000 		.4byte	.LASF47
 2751 0228 04       		.byte	0x4
 2752 0229 0D       		.uleb128 0xd
 2753 022a 47030000 		.4byte	.LASF48
 2754 022e 05       		.byte	0x5
 2755 022f 0D       		.uleb128 0xd
 2756 0230 6A070000 		.4byte	.LASF49
 2757 0234 06       		.byte	0x6
 2758 0235 00       		.byte	0
 2759 0236 09       		.uleb128 0x9
 2760 0237 B2020000 		.4byte	.LASF51
 2761 023b 10       		.byte	0x10
 2762 023c 06       		.byte	0x6
 2763 023d 10       		.byte	0x10
 2764 023e 73020000 		.4byte	0x273
 2765 0242 0A       		.uleb128 0xa
 2766 0243 00000000 		.4byte	.LASF52
 2767 0247 06       		.byte	0x6
 2768 0248 11       		.byte	0x11
 2769 0249 FB010000 		.4byte	0x1fb
 2770 024d 00       		.byte	0
 2771 024e 0A       		.uleb128 0xa
 2772 024f 50080000 		.4byte	.LASF53
 2773 0253 06       		.byte	0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 62


 2774 0254 12       		.byte	0x12
 2775 0255 68000000 		.4byte	0x68
 2776 0259 04       		.byte	0x4
 2777 025a 0A       		.uleb128 0xa
 2778 025b 58080000 		.4byte	.LASF54
 2779 025f 06       		.byte	0x6
 2780 0260 13       		.byte	0x13
 2781 0261 68000000 		.4byte	0x68
 2782 0265 08       		.byte	0x8
 2783 0266 0A       		.uleb128 0xa
 2784 0267 43010000 		.4byte	.LASF55
 2785 026b 06       		.byte	0x6
 2786 026c 14       		.byte	0x14
 2787 026d D3010000 		.4byte	0x1d3
 2788 0271 0C       		.byte	0xc
 2789 0272 00       		.byte	0
 2790 0273 03       		.uleb128 0x3
 2791 0274 B2020000 		.4byte	.LASF51
 2792 0278 06       		.byte	0x6
 2793 0279 15       		.byte	0x15
 2794 027a 36020000 		.4byte	0x236
 2795 027e 0B       		.uleb128 0xb
 2796 027f BD060000 		.4byte	.LASF56
 2797 0283 01       		.byte	0x1
 2798 0284 2C000000 		.4byte	0x2c
 2799 0288 01       		.byte	0x1
 2800 0289 18       		.byte	0x18
 2801 028a D1020000 		.4byte	0x2d1
 2802 028e 0D       		.uleb128 0xd
 2803 028f D8050000 		.4byte	.LASF57
 2804 0293 00       		.byte	0
 2805 0294 0D       		.uleb128 0xd
 2806 0295 26050000 		.4byte	.LASF58
 2807 0299 01       		.byte	0x1
 2808 029a 0D       		.uleb128 0xd
 2809 029b DE040000 		.4byte	.LASF59
 2810 029f 02       		.byte	0x2
 2811 02a0 0D       		.uleb128 0xd
 2812 02a1 E7070000 		.4byte	.LASF60
 2813 02a5 03       		.byte	0x3
 2814 02a6 0D       		.uleb128 0xd
 2815 02a7 09070000 		.4byte	.LASF61
 2816 02ab 04       		.byte	0x4
 2817 02ac 0D       		.uleb128 0xd
 2818 02ad 1A070000 		.4byte	.LASF62
 2819 02b1 05       		.byte	0x5
 2820 02b2 0D       		.uleb128 0xd
 2821 02b3 06050000 		.4byte	.LASF63
 2822 02b7 06       		.byte	0x6
 2823 02b8 0D       		.uleb128 0xd
 2824 02b9 54030000 		.4byte	.LASF64
 2825 02bd 07       		.byte	0x7
 2826 02be 0D       		.uleb128 0xd
 2827 02bf 0A000000 		.4byte	.LASF65
 2828 02c3 08       		.byte	0x8
 2829 02c4 0D       		.uleb128 0xd
 2830 02c5 F7070000 		.4byte	.LASF66
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 63


 2831 02c9 09       		.byte	0x9
 2832 02ca 0D       		.uleb128 0xd
 2833 02cb 5E050000 		.4byte	.LASF67
 2834 02cf 0A       		.byte	0xa
 2835 02d0 00       		.byte	0
 2836 02d1 0E       		.uleb128 0xe
 2837 02d2 26040000 		.4byte	.LASF77
 2838 02d6 01       		.byte	0x1
 2839 02d7 47       		.byte	0x47
 2840 02d8 00000000 		.4byte	.LFB64
 2841 02dc EC000000 		.4byte	.LFE64-.LFB64
 2842 02e0 01       		.uleb128 0x1
 2843 02e1 9C       		.byte	0x9c
 2844 02e2 FF020000 		.4byte	0x2ff
 2845 02e6 0F       		.uleb128 0xf
 2846 02e7 50000000 		.4byte	.LBB2
 2847 02eb 62000000 		.4byte	.LBE2-.LBB2
 2848 02ef 10       		.uleb128 0x10
 2849 02f0 B7040000 		.4byte	.LASF74
 2850 02f4 01       		.byte	0x1
 2851 02f5 54       		.byte	0x54
 2852 02f6 D2000000 		.4byte	0xd2
 2853 02fa 02       		.uleb128 0x2
 2854 02fb 91       		.byte	0x91
 2855 02fc 6C       		.sleb128 -20
 2856 02fd 00       		.byte	0
 2857 02fe 00       		.byte	0
 2858 02ff 11       		.uleb128 0x11
 2859 0300 1A040000 		.4byte	.LASF68
 2860 0304 01       		.byte	0x1
 2861 0305 5F       		.byte	0x5f
 2862 0306 00000000 		.4byte	.LFB65
 2863 030a 18000000 		.4byte	.LFE65-.LFB65
 2864 030e 01       		.uleb128 0x1
 2865 030f 9C       		.byte	0x9c
 2866 0310 11       		.uleb128 0x11
 2867 0311 AC050000 		.4byte	.LASF69
 2868 0315 01       		.byte	0x1
 2869 0316 65       		.byte	0x65
 2870 0317 00000000 		.4byte	.LFB66
 2871 031b 18000000 		.4byte	.LFE66-.LFB66
 2872 031f 01       		.uleb128 0x1
 2873 0320 9C       		.byte	0x9c
 2874 0321 11       		.uleb128 0x11
 2875 0322 87070000 		.4byte	.LASF70
 2876 0326 01       		.byte	0x1
 2877 0327 6B       		.byte	0x6b
 2878 0328 00000000 		.4byte	.LFB67
 2879 032c 18000000 		.4byte	.LFE67-.LFB67
 2880 0330 01       		.uleb128 0x1
 2881 0331 9C       		.byte	0x9c
 2882 0332 11       		.uleb128 0x11
 2883 0333 6C010000 		.4byte	.LASF71
 2884 0337 01       		.byte	0x1
 2885 0338 71       		.byte	0x71
 2886 0339 00000000 		.4byte	.LFB68
 2887 033d 18000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 64


 2888 0341 01       		.uleb128 0x1
 2889 0342 9C       		.byte	0x9c
 2890 0343 12       		.uleb128 0x12
 2891 0344 DB020000 		.4byte	.LASF72
 2892 0348 01       		.byte	0x1
 2893 0349 77       		.byte	0x77
 2894 034a 00000000 		.4byte	.LFB69
 2895 034e 38000000 		.4byte	.LFE69-.LFB69
 2896 0352 01       		.uleb128 0x1
 2897 0353 9C       		.byte	0x9c
 2898 0354 13       		.uleb128 0x13
 2899 0355 CF070000 		.4byte	.LASF73
 2900 0359 01       		.byte	0x1
 2901 035a 83       		.byte	0x83
 2902 035b 68000000 		.4byte	0x68
 2903 035f 00000000 		.4byte	.LFB70
 2904 0363 14010000 		.4byte	.LFE70-.LFB70
 2905 0367 01       		.uleb128 0x1
 2906 0368 9C       		.byte	0x9c
 2907 0369 14       		.uleb128 0x14
 2908 036a 21030000 		.4byte	.LASF81
 2909 036e 01       		.byte	0x1
 2910 036f B9       		.byte	0xb9
 2911 0370 C6000000 		.4byte	0xc6
 2912 0374 00000000 		.4byte	.LFB71
 2913 0378 54000000 		.4byte	.LFE71-.LFB71
 2914 037c 01       		.uleb128 0x1
 2915 037d 9C       		.byte	0x9c
 2916 037e AD030000 		.4byte	0x3ad
 2917 0382 15       		.uleb128 0x15
 2918 0383 8F020000 		.4byte	.LASF83
 2919 0387 01       		.byte	0x1
 2920 0388 B9       		.byte	0xb9
 2921 0389 A2000000 		.4byte	0xa2
 2922 038d 02       		.uleb128 0x2
 2923 038e 91       		.byte	0x91
 2924 038f 66       		.sleb128 -26
 2925 0390 16       		.uleb128 0x16
 2926 0391 63707300 		.ascii	"cps\000"
 2927 0395 01       		.byte	0x1
 2928 0396 BA       		.byte	0xba
 2929 0397 D2000000 		.4byte	0xd2
 2930 039b 02       		.uleb128 0x2
 2931 039c 91       		.byte	0x91
 2932 039d 6C       		.sleb128 -20
 2933 039e 16       		.uleb128 0x16
 2934 039f 72706D00 		.ascii	"rpm\000"
 2935 03a3 01       		.byte	0x1
 2936 03a4 BB       		.byte	0xbb
 2937 03a5 C6000000 		.4byte	0xc6
 2938 03a9 02       		.uleb128 0x2
 2939 03aa 91       		.byte	0x91
 2940 03ab 6A       		.sleb128 -22
 2941 03ac 00       		.byte	0
 2942 03ad 17       		.uleb128 0x17
 2943 03ae 2D020000 		.4byte	.LASF89
 2944 03b2 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 65


 2945 03b3 C3       		.byte	0xc3
 2946 03b4 00000000 		.4byte	.LFB72
 2947 03b8 34000000 		.4byte	.LFE72-.LFB72
 2948 03bc 01       		.uleb128 0x1
 2949 03bd 9C       		.byte	0x9c
 2950 03be 18       		.uleb128 0x18
 2951 03bf FD010000 		.4byte	.LASF75
 2952 03c3 01       		.byte	0x1
 2953 03c4 D4       		.byte	0xd4
 2954 03c5 7E020000 		.4byte	0x27e
 2955 03c9 00000000 		.4byte	.LFB73
 2956 03cd 84000000 		.4byte	.LFE73-.LFB73
 2957 03d1 01       		.uleb128 0x1
 2958 03d2 9C       		.byte	0x9c
 2959 03d3 18       		.uleb128 0x18
 2960 03d4 57010000 		.4byte	.LASF76
 2961 03d8 01       		.byte	0x1
 2962 03d9 FA       		.byte	0xfa
 2963 03da 7E020000 		.4byte	0x27e
 2964 03de 00000000 		.4byte	.LFB74
 2965 03e2 94000000 		.4byte	.LFE74-.LFB74
 2966 03e6 01       		.uleb128 0x1
 2967 03e7 9C       		.byte	0x9c
 2968 03e8 19       		.uleb128 0x19
 2969 03e9 BF010000 		.4byte	.LASF78
 2970 03ed 01       		.byte	0x1
 2971 03ee 1E01     		.2byte	0x11e
 2972 03f0 7E020000 		.4byte	0x27e
 2973 03f4 00000000 		.4byte	.LFB75
 2974 03f8 D4030000 		.4byte	.LFE75-.LFB75
 2975 03fc 01       		.uleb128 0x1
 2976 03fd 9C       		.byte	0x9c
 2977 03fe 21040000 		.4byte	0x421
 2978 0402 1A       		.uleb128 0x1a
 2979 0403 57000000 		.4byte	.LASF79
 2980 0407 01       		.byte	0x1
 2981 0408 1F01     		.2byte	0x11f
 2982 040a D2000000 		.4byte	0xd2
 2983 040e 02       		.uleb128 0x2
 2984 040f 91       		.byte	0x91
 2985 0410 74       		.sleb128 -12
 2986 0411 1A       		.uleb128 0x1a
 2987 0412 69020000 		.4byte	.LASF80
 2988 0416 01       		.byte	0x1
 2989 0417 2E01     		.2byte	0x12e
 2990 0419 FB010000 		.4byte	0x1fb
 2991 041d 02       		.uleb128 0x2
 2992 041e 91       		.byte	0x91
 2993 041f 73       		.sleb128 -13
 2994 0420 00       		.byte	0
 2995 0421 1B       		.uleb128 0x1b
 2996 0422 EF060000 		.4byte	.LASF82
 2997 0426 01       		.byte	0x1
 2998 0427 0E02     		.2byte	0x20e
 2999 0429 D2000000 		.4byte	0xd2
 3000 042d 00000000 		.4byte	.LFB76
 3001 0431 90020000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 66


 3002 0435 01       		.uleb128 0x1
 3003 0436 9C       		.byte	0x9c
 3004 0437 DF040000 		.4byte	0x4df
 3005 043b 1C       		.uleb128 0x1c
 3006 043c 30030000 		.4byte	.LASF84
 3007 0440 01       		.byte	0x1
 3008 0441 0E02     		.2byte	0x20e
 3009 0443 D2000000 		.4byte	0xd2
 3010 0447 02       		.uleb128 0x2
 3011 0448 91       		.byte	0x91
 3012 0449 54       		.sleb128 -44
 3013 044a 1A       		.uleb128 0x1a
 3014 044b 18080000 		.4byte	.LASF85
 3015 044f 01       		.byte	0x1
 3016 0450 0F02     		.2byte	0x20f
 3017 0452 D2000000 		.4byte	0xd2
 3018 0456 02       		.uleb128 0x2
 3019 0457 91       		.byte	0x91
 3020 0458 58       		.sleb128 -40
 3021 0459 1A       		.uleb128 0x1a
 3022 045a B5010000 		.4byte	.LASF86
 3023 045e 01       		.byte	0x1
 3024 045f 1202     		.2byte	0x212
 3025 0461 68000000 		.4byte	0x68
 3026 0465 02       		.uleb128 0x2
 3027 0466 91       		.byte	0x91
 3028 0467 60       		.sleb128 -32
 3029 0468 1A       		.uleb128 0x1a
 3030 0469 4B020000 		.4byte	.LASF87
 3031 046d 01       		.byte	0x1
 3032 046e 1302     		.2byte	0x213
 3033 0470 68000000 		.4byte	0x68
 3034 0474 02       		.uleb128 0x2
 3035 0475 91       		.byte	0x91
 3036 0476 5C       		.sleb128 -36
 3037 0477 1A       		.uleb128 0x1a
 3038 0478 31040000 		.4byte	.LASF88
 3039 047c 01       		.byte	0x1
 3040 047d 1502     		.2byte	0x215
 3041 047f 68000000 		.4byte	0x68
 3042 0483 02       		.uleb128 0x2
 3043 0484 91       		.byte	0x91
 3044 0485 74       		.sleb128 -12
 3045 0486 1D       		.uleb128 0x1d
 3046 0487 00000000 		.4byte	.Ldebug_ranges0+0
 3047 048b 9D040000 		.4byte	0x49d
 3048 048f 1E       		.uleb128 0x1e
 3049 0490 6900     		.ascii	"i\000"
 3050 0492 01       		.byte	0x1
 3051 0493 1F02     		.2byte	0x21f
 3052 0495 68000000 		.4byte	0x68
 3053 0499 02       		.uleb128 0x2
 3054 049a 91       		.byte	0x91
 3055 049b 70       		.sleb128 -16
 3056 049c 00       		.byte	0
 3057 049d 1D       		.uleb128 0x1d
 3058 049e 18000000 		.4byte	.Ldebug_ranges0+0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 67


 3059 04a2 B4040000 		.4byte	0x4b4
 3060 04a6 1E       		.uleb128 0x1e
 3061 04a7 6900     		.ascii	"i\000"
 3062 04a9 01       		.byte	0x1
 3063 04aa 2E02     		.2byte	0x22e
 3064 04ac 68000000 		.4byte	0x68
 3065 04b0 02       		.uleb128 0x2
 3066 04b1 91       		.byte	0x91
 3067 04b2 6C       		.sleb128 -20
 3068 04b3 00       		.byte	0
 3069 04b4 1D       		.uleb128 0x1d
 3070 04b5 30000000 		.4byte	.Ldebug_ranges0+0x30
 3071 04b9 CB040000 		.4byte	0x4cb
 3072 04bd 1E       		.uleb128 0x1e
 3073 04be 6900     		.ascii	"i\000"
 3074 04c0 01       		.byte	0x1
 3075 04c1 3D02     		.2byte	0x23d
 3076 04c3 68000000 		.4byte	0x68
 3077 04c7 02       		.uleb128 0x2
 3078 04c8 91       		.byte	0x91
 3079 04c9 68       		.sleb128 -24
 3080 04ca 00       		.byte	0
 3081 04cb 1F       		.uleb128 0x1f
 3082 04cc 48000000 		.4byte	.Ldebug_ranges0+0x48
 3083 04d0 1E       		.uleb128 0x1e
 3084 04d1 6900     		.ascii	"i\000"
 3085 04d3 01       		.byte	0x1
 3086 04d4 4D02     		.2byte	0x24d
 3087 04d6 68000000 		.4byte	0x68
 3088 04da 02       		.uleb128 0x2
 3089 04db 91       		.byte	0x91
 3090 04dc 64       		.sleb128 -28
 3091 04dd 00       		.byte	0
 3092 04de 00       		.byte	0
 3093 04df 20       		.uleb128 0x20
 3094 04e0 FA050000 		.4byte	.LASF90
 3095 04e4 01       		.byte	0x1
 3096 04e5 6202     		.2byte	0x262
 3097 04e7 00000000 		.4byte	.LFB77
 3098 04eb 50000000 		.4byte	.LFE77-.LFB77
 3099 04ef 01       		.uleb128 0x1
 3100 04f0 9C       		.byte	0x9c
 3101 04f1 21       		.uleb128 0x21
 3102 04f2 1F070000 		.4byte	.LASF91
 3103 04f6 01       		.byte	0x1
 3104 04f7 6802     		.2byte	0x268
 3105 04f9 73020000 		.4byte	0x273
 3106 04fd 00000000 		.4byte	.LFB78
 3107 0501 7C000000 		.4byte	.LFE78-.LFB78
 3108 0505 01       		.uleb128 0x1
 3109 0506 9C       		.byte	0x9c
 3110 0507 50050000 		.4byte	0x550
 3111 050b 1C       		.uleb128 0x1c
 3112 050c AC010000 		.4byte	.LASF92
 3113 0510 01       		.byte	0x1
 3114 0511 6802     		.2byte	0x268
 3115 0513 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 68


 3116 0517 02       		.uleb128 0x2
 3117 0518 91       		.byte	0x91
 3118 0519 58       		.sleb128 -40
 3119 051a 1C       		.uleb128 0x1c
 3120 051b D5030000 		.4byte	.LASF93
 3121 051f 01       		.byte	0x1
 3122 0520 6802     		.2byte	0x268
 3123 0522 50050000 		.4byte	0x550
 3124 0526 02       		.uleb128 0x2
 3125 0527 91       		.byte	0x91
 3126 0528 54       		.sleb128 -44
 3127 0529 1A       		.uleb128 0x1a
 3128 052a 92000000 		.4byte	.LASF94
 3129 052e 01       		.byte	0x1
 3130 052f 6902     		.2byte	0x269
 3131 0531 73020000 		.4byte	0x273
 3132 0535 02       		.uleb128 0x2
 3133 0536 91       		.byte	0x91
 3134 0537 64       		.sleb128 -28
 3135 0538 0F       		.uleb128 0xf
 3136 0539 0C000000 		.4byte	.LBB11
 3137 053d 54000000 		.4byte	.LBE11-.LBB11
 3138 0541 1E       		.uleb128 0x1e
 3139 0542 6900     		.ascii	"i\000"
 3140 0544 01       		.byte	0x1
 3141 0545 6B02     		.2byte	0x26b
 3142 0547 68000000 		.4byte	0x68
 3143 054b 02       		.uleb128 0x2
 3144 054c 91       		.byte	0x91
 3145 054d 74       		.sleb128 -12
 3146 054e 00       		.byte	0
 3147 054f 00       		.byte	0
 3148 0550 22       		.uleb128 0x22
 3149 0551 04       		.byte	0x4
 3150 0552 73020000 		.4byte	0x273
 3151 0556 23       		.uleb128 0x23
 3152 0557 CA020000 		.4byte	.LASF95
 3153 055b 01       		.byte	0x1
 3154 055c 7702     		.2byte	0x277
 3155 055e 00000000 		.4byte	.LFB79
 3156 0562 C4000000 		.4byte	.LFE79-.LFB79
 3157 0566 01       		.uleb128 0x1
 3158 0567 9C       		.byte	0x9c
 3159 0568 10       		.uleb128 0x10
 3160 0569 E5030000 		.4byte	.LASF96
 3161 056d 01       		.byte	0x1
 3162 056e 20       		.byte	0x20
 3163 056f E5000000 		.4byte	0xe5
 3164 0573 05       		.uleb128 0x5
 3165 0574 03       		.byte	0x3
 3166 0575 14000000 		.4byte	instructionIndex
 3167 0579 10       		.uleb128 0x10
 3168 057a 47000000 		.4byte	.LASF97
 3169 057e 01       		.byte	0x1
 3170 057f 34       		.byte	0x34
 3171 0580 E0000000 		.4byte	0xe0
 3172 0584 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 69


 3173 0585 03       		.byte	0x3
 3174 0586 34000000 		.4byte	turnStartedFlag
 3175 058a 10       		.uleb128 0x10
 3176 058b 3B040000 		.4byte	.LASF98
 3177 058f 01       		.byte	0x1
 3178 0590 35       		.byte	0x35
 3179 0591 E0000000 		.4byte	0xe0
 3180 0595 05       		.uleb128 0x5
 3181 0596 03       		.byte	0x3
 3182 0597 35000000 		.4byte	turnFinishedFlag
 3183 059b 10       		.uleb128 0x10
 3184 059c 8E010000 		.4byte	.LASF99
 3185 05a0 01       		.byte	0x1
 3186 05a1 37       		.byte	0x37
 3187 05a2 E0000000 		.4byte	0xe0
 3188 05a6 05       		.uleb128 0x5
 3189 05a7 03       		.byte	0x3
 3190 05a8 36000000 		.4byte	forwardUntilTargetStartedFlag
 3191 05ac 10       		.uleb128 0x10
 3192 05ad 45060000 		.4byte	.LASF100
 3193 05b1 01       		.byte	0x1
 3194 05b2 38       		.byte	0x38
 3195 05b3 E0000000 		.4byte	0xe0
 3196 05b7 05       		.uleb128 0x5
 3197 05b8 03       		.byte	0x3
 3198 05b9 37000000 		.4byte	uTurnStartedFlag
 3199 05bd 10       		.uleb128 0x10
 3200 05be 92060000 		.4byte	.LASF101
 3201 05c2 01       		.byte	0x1
 3202 05c3 39       		.byte	0x39
 3203 05c4 E0000000 		.4byte	0xe0
 3204 05c8 05       		.uleb128 0x5
 3205 05c9 03       		.byte	0x3
 3206 05ca 38000000 		.4byte	uTurnFinishedFlag
 3207 05ce 10       		.uleb128 0x10
 3208 05cf 12030000 		.4byte	.LASF102
 3209 05d3 01       		.byte	0x1
 3210 05d4 3B       		.byte	0x3b
 3211 05d5 E0000000 		.4byte	0xe0
 3212 05d9 05       		.uleb128 0x5
 3213 05da 03       		.byte	0x3
 3214 05db 39000000 		.4byte	leftStatusFlag
 3215 05df 10       		.uleb128 0x10
 3216 05e0 37000000 		.4byte	.LASF103
 3217 05e4 01       		.byte	0x1
 3218 05e5 3C       		.byte	0x3c
 3219 05e6 E0000000 		.4byte	0xe0
 3220 05ea 05       		.uleb128 0x5
 3221 05eb 03       		.byte	0x3
 3222 05ec 3A000000 		.4byte	rightStatusFlag
 3223 05f0 10       		.uleb128 0x10
 3224 05f1 9B040000 		.4byte	.LASF104
 3225 05f5 01       		.byte	0x1
 3226 05f6 3E       		.byte	0x3e
 3227 05f7 E0000000 		.4byte	0xe0
 3228 05fb 05       		.uleb128 0x5
 3229 05fc 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 70


 3230 05fd 3B000000 		.4byte	spinCourseCorrectionStarted
 3231 0601 10       		.uleb128 0x10
 3232 0602 4C070000 		.4byte	.LASF105
 3233 0606 01       		.byte	0x1
 3234 0607 3F       		.byte	0x3f
 3235 0608 E0000000 		.4byte	0xe0
 3236 060c 05       		.uleb128 0x5
 3237 060d 03       		.byte	0x3
 3238 060e 3C000000 		.4byte	currentIgnoreL
 3239 0612 10       		.uleb128 0x10
 3240 0613 5B070000 		.4byte	.LASF106
 3241 0617 01       		.byte	0x1
 3242 0618 40       		.byte	0x40
 3243 0619 E0000000 		.4byte	0xe0
 3244 061d 05       		.uleb128 0x5
 3245 061e 03       		.byte	0x3
 3246 061f 3D000000 		.4byte	currentIgnoreR
 3247 0623 24       		.uleb128 0x24
 3248 0624 C1050000 		.4byte	.LASF107
 3249 0628 07       		.byte	0x7
 3250 0629 1207     		.2byte	0x712
 3251 062b 2F060000 		.4byte	0x62f
 3252 062f 06       		.uleb128 0x6
 3253 0630 8B000000 		.4byte	0x8b
 3254 0634 25       		.uleb128 0x25
 3255 0635 747300   		.ascii	"ts\000"
 3256 0638 05       		.byte	0x5
 3257 0639 10       		.byte	0x10
 3258 063a 96000000 		.4byte	0x96
 3259 063e 05       		.uleb128 0x5
 3260 063f 03       		.byte	0x3
 3261 0640 00000000 		.4byte	ts
 3262 0644 26       		.uleb128 0x26
 3263 0645 35070000 		.4byte	.LASF108
 3264 0649 05       		.byte	0x5
 3265 064a 11       		.byte	0x11
 3266 064b A2000000 		.4byte	0xa2
 3267 064f 05       		.uleb128 0x5
 3268 0650 03       		.byte	0x3
 3269 0651 00000000 		.4byte	ts_enc
 3270 0655 26       		.uleb128 0x26
 3271 0656 CE050000 		.4byte	.LASF109
 3272 065a 05       		.byte	0x5
 3273 065b 12       		.byte	0x12
 3274 065c A2000000 		.4byte	0xa2
 3275 0660 05       		.uleb128 0x5
 3276 0661 03       		.byte	0x3
 3277 0662 00000000 		.4byte	ts_update
 3278 0666 26       		.uleb128 0x26
 3279 0667 E7040000 		.4byte	.LASF110
 3280 066b 05       		.byte	0x5
 3281 066c 13       		.byte	0x13
 3282 066d A2000000 		.4byte	0xa2
 3283 0671 05       		.uleb128 0x5
 3284 0672 03       		.byte	0x3
 3285 0673 00000000 		.4byte	ts_speed
 3286 0677 26       		.uleb128 0x26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 71


 3287 0678 6B030000 		.4byte	.LASF111
 3288 067c 05       		.byte	0x5
 3289 067d 14       		.byte	0x14
 3290 067e A2000000 		.4byte	0xa2
 3291 0682 05       		.uleb128 0x5
 3292 0683 03       		.byte	0x3
 3293 0684 00000000 		.4byte	ts_display
 3294 0688 26       		.uleb128 0x26
 3295 0689 06030000 		.4byte	.LASF112
 3296 068d 05       		.byte	0x5
 3297 068e 16       		.byte	0x16
 3298 068f 96000000 		.4byte	0x96
 3299 0693 05       		.uleb128 0x5
 3300 0694 03       		.byte	0x3
 3301 0695 00000000 		.4byte	flag_ts_enc
 3302 0699 26       		.uleb128 0x26
 3303 069a F7020000 		.4byte	.LASF113
 3304 069e 05       		.byte	0x5
 3305 069f 17       		.byte	0x17
 3306 06a0 96000000 		.4byte	0x96
 3307 06a4 05       		.uleb128 0x5
 3308 06a5 03       		.byte	0x3
 3309 06a6 00000000 		.4byte	flag_ts_update
 3310 06aa 26       		.uleb128 0x26
 3311 06ab 72050000 		.4byte	.LASF114
 3312 06af 05       		.byte	0x5
 3313 06b0 18       		.byte	0x18
 3314 06b1 96000000 		.4byte	0x96
 3315 06b5 05       		.uleb128 0x5
 3316 06b6 03       		.byte	0x3
 3317 06b7 00000000 		.4byte	flag_ts_speed
 3318 06bb 26       		.uleb128 0x26
 3319 06bc 3C070000 		.4byte	.LASF115
 3320 06c0 05       		.byte	0x5
 3321 06c1 19       		.byte	0x19
 3322 06c2 96000000 		.4byte	0x96
 3323 06c6 05       		.uleb128 0x5
 3324 06c7 03       		.byte	0x3
 3325 06c8 00000000 		.4byte	flag_ts_display
 3326 06cc 26       		.uleb128 0x26
 3327 06cd 8F050000 		.4byte	.LASF116
 3328 06d1 05       		.byte	0x5
 3329 06d2 1B       		.byte	0x1b
 3330 06d3 96000000 		.4byte	0x96
 3331 06d7 05       		.uleb128 0x5
 3332 06d8 03       		.byte	0x3
 3333 06d9 00000000 		.4byte	flag_rx
 3334 06dd 26       		.uleb128 0x26
 3335 06de BE020000 		.4byte	.LASF117
 3336 06e2 05       		.byte	0x5
 3337 06e3 1C       		.byte	0x1c
 3338 06e4 96000000 		.4byte	0x96
 3339 06e8 05       		.uleb128 0x5
 3340 06e9 03       		.byte	0x3
 3341 06ea 00000000 		.4byte	flag_packet
 3342 06ee 26       		.uleb128 0x26
 3343 06ef 38080000 		.4byte	.LASF118
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 72


 3344 06f3 05       		.byte	0x5
 3345 06f4 1D       		.byte	0x1d
 3346 06f5 96000000 		.4byte	0x96
 3347 06f9 05       		.uleb128 0x5
 3348 06fa 03       		.byte	0x3
 3349 06fb 00000000 		.4byte	flag_KB_string
 3350 06ff 26       		.uleb128 0x26
 3351 0700 80050000 		.4byte	.LASF119
 3352 0704 05       		.byte	0x5
 3353 0705 1F       		.byte	0x1f
 3354 0706 96000000 		.4byte	0x96
 3355 070a 05       		.uleb128 0x5
 3356 070b 03       		.byte	0x3
 3357 070c 00000000 		.4byte	dataready_flag
 3358 0710 26       		.uleb128 0x26
 3359 0711 E1010000 		.4byte	.LASF120
 3360 0715 05       		.byte	0x5
 3361 0716 21       		.byte	0x21
 3362 0717 96000000 		.4byte	0x96
 3363 071b 05       		.uleb128 0x5
 3364 071c 03       		.byte	0x3
 3365 071d 00000000 		.4byte	flag_rf_transmission_active
 3366 0721 07       		.uleb128 0x7
 3367 0722 84000000 		.4byte	0x84
 3368 0726 31070000 		.4byte	0x731
 3369 072a 08       		.uleb128 0x8
 3370 072b 7D000000 		.4byte	0x7d
 3371 072f 3F       		.byte	0x3f
 3372 0730 00       		.byte	0
 3373 0731 26       		.uleb128 0x26
 3374 0732 6F070000 		.4byte	.LASF121
 3375 0736 05       		.byte	0x5
 3376 0737 24       		.byte	0x24
 3377 0738 21070000 		.4byte	0x721
 3378 073c 05       		.uleb128 0x5
 3379 073d 03       		.byte	0x3
 3380 073e 00000000 		.4byte	displaystring
 3381 0742 26       		.uleb128 0x26
 3382 0743 EA060000 		.4byte	.LASF122
 3383 0747 05       		.byte	0x5
 3384 0748 25       		.byte	0x25
 3385 0749 21070000 		.4byte	0x721
 3386 074d 05       		.uleb128 0x5
 3387 074e 03       		.byte	0x3
 3388 074f 00000000 		.4byte	line
 3389 0753 26       		.uleb128 0x26
 3390 0754 B7060000 		.4byte	.LASF123
 3391 0758 05       		.byte	0x5
 3392 0759 25       		.byte	0x25
 3393 075a 21070000 		.4byte	0x721
 3394 075e 05       		.uleb128 0x5
 3395 075f 03       		.byte	0x3
 3396 0760 00000000 		.4byte	entry
 3397 0764 07       		.uleb128 0x7
 3398 0765 96000000 		.4byte	0x96
 3399 0769 74070000 		.4byte	0x774
 3400 076d 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 73


 3401 076e 7D000000 		.4byte	0x7d
 3402 0772 3F       		.byte	0x3f
 3403 0773 00       		.byte	0
 3404 0774 26       		.uleb128 0x26
 3405 0775 85020000 		.4byte	.LASF124
 3406 0779 05       		.byte	0x5
 3407 077a 26       		.byte	0x26
 3408 077b 64070000 		.4byte	0x764
 3409 077f 05       		.uleb128 0x5
 3410 0780 03       		.byte	0x3
 3411 0781 00000000 		.4byte	usbBuffer
 3412 0785 26       		.uleb128 0x26
 3413 0786 85000000 		.4byte	.LASF125
 3414 078a 05       		.byte	0x5
 3415 078b 3C       		.byte	0x3c
 3416 078c FA000000 		.4byte	0xfa
 3417 0790 05       		.uleb128 0x5
 3418 0791 03       		.byte	0x3
 3419 0792 00000000 		.4byte	system_state
 3420 0796 07       		.uleb128 0x7
 3421 0797 68000000 		.4byte	0x68
 3422 079b AC070000 		.4byte	0x7ac
 3423 079f 08       		.uleb128 0x8
 3424 07a0 7D000000 		.4byte	0x7d
 3425 07a4 0E       		.byte	0xe
 3426 07a5 08       		.uleb128 0x8
 3427 07a6 7D000000 		.4byte	0x7d
 3428 07aa 12       		.byte	0x12
 3429 07ab 00       		.byte	0
 3430 07ac 27       		.uleb128 0x27
 3431 07ad 6D617000 		.ascii	"map\000"
 3432 07b1 08       		.byte	0x8
 3433 07b2 04       		.byte	0x4
 3434 07b3 96070000 		.4byte	0x796
 3435 07b7 07       		.uleb128 0x7
 3436 07b8 68000000 		.4byte	0x68
 3437 07bc CD070000 		.4byte	0x7cd
 3438 07c0 08       		.uleb128 0x8
 3439 07c1 7D000000 		.4byte	0x7d
 3440 07c5 04       		.byte	0x4
 3441 07c6 08       		.uleb128 0x8
 3442 07c7 7D000000 		.4byte	0x7d
 3443 07cb 01       		.byte	0x1
 3444 07cc 00       		.byte	0
 3445 07cd 28       		.uleb128 0x28
 3446 07ce D4040000 		.4byte	.LASF126
 3447 07d2 08       		.byte	0x8
 3448 07d3 05       		.byte	0x5
 3449 07d4 B7070000 		.4byte	0x7b7
 3450 07d8 26       		.uleb128 0x26
 3451 07d9 34060000 		.4byte	.LASF127
 3452 07dd 01       		.byte	0x1
 3453 07de 19       		.byte	0x19
 3454 07df 7E020000 		.4byte	0x27e
 3455 07e3 05       		.uleb128 0x5
 3456 07e4 03       		.byte	0x3
 3457 07e5 00000000 		.4byte	currentDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 74


 3458 07e9 26       		.uleb128 0x26
 3459 07ea 4C050000 		.4byte	.LASF128
 3460 07ee 01       		.byte	0x1
 3461 07ef 19       		.byte	0x19
 3462 07f0 7E020000 		.4byte	0x27e
 3463 07f4 05       		.uleb128 0x5
 3464 07f5 03       		.byte	0x3
 3465 07f6 00000000 		.4byte	previousDirection
 3466 07fa 26       		.uleb128 0x26
 3467 07fb 15020000 		.4byte	.LASF129
 3468 07ff 01       		.byte	0x1
 3469 0800 1B       		.byte	0x1b
 3470 0801 D3010000 		.4byte	0x1d3
 3471 0805 05       		.uleb128 0x5
 3472 0806 03       		.byte	0x3
 3473 0807 00000000 		.4byte	currentRobotOrientation
 3474 080b 26       		.uleb128 0x26
 3475 080c 81040000 		.4byte	.LASF130
 3476 0810 01       		.byte	0x1
 3477 0811 1B       		.byte	0x1b
 3478 0812 D3010000 		.4byte	0x1d3
 3479 0816 05       		.uleb128 0x5
 3480 0817 03       		.byte	0x3
 3481 0818 00000000 		.4byte	previousOrientation
 3482 081c 26       		.uleb128 0x26
 3483 081d D4070000 		.4byte	.LASF131
 3484 0821 01       		.byte	0x1
 3485 0822 1C       		.byte	0x1c
 3486 0823 73020000 		.4byte	0x273
 3487 0827 05       		.uleb128 0x5
 3488 0828 03       		.byte	0x3
 3489 0829 00000000 		.4byte	currentInstruction
 3490 082d 26       		.uleb128 0x26
 3491 082e AC010000 		.4byte	.LASF92
 3492 0832 01       		.byte	0x1
 3493 0833 1D       		.byte	0x1d
 3494 0834 68000000 		.4byte	0x68
 3495 0838 05       		.uleb128 0x5
 3496 0839 03       		.byte	0x3
 3497 083a 00000000 		.4byte	numSteps
 3498 083e 26       		.uleb128 0x26
 3499 083f D5030000 		.4byte	.LASF93
 3500 0843 01       		.byte	0x1
 3501 0844 1F       		.byte	0x1f
 3502 0845 50050000 		.4byte	0x550
 3503 0849 05       		.uleb128 0x5
 3504 084a 03       		.byte	0x3
 3505 084b 00000000 		.4byte	instructionList
 3506 084f 25       		.uleb128 0x25
 3507 0850 733300   		.ascii	"s3\000"
 3508 0853 01       		.byte	0x1
 3509 0854 25       		.byte	0x25
 3510 0855 96000000 		.4byte	0x96
 3511 0859 05       		.uleb128 0x5
 3512 085a 03       		.byte	0x3
 3513 085b 00000000 		.4byte	s3
 3514 085f 25       		.uleb128 0x25
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 75


 3515 0860 733400   		.ascii	"s4\000"
 3516 0863 01       		.byte	0x1
 3517 0864 25       		.byte	0x25
 3518 0865 96000000 		.4byte	0x96
 3519 0869 05       		.uleb128 0x5
 3520 086a 03       		.byte	0x3
 3521 086b 00000000 		.4byte	s4
 3522 086f 25       		.uleb128 0x25
 3523 0870 733500   		.ascii	"s5\000"
 3524 0873 01       		.byte	0x1
 3525 0874 25       		.byte	0x25
 3526 0875 96000000 		.4byte	0x96
 3527 0879 05       		.uleb128 0x5
 3528 087a 03       		.byte	0x3
 3529 087b 00000000 		.4byte	s5
 3530 087f 25       		.uleb128 0x25
 3531 0880 733600   		.ascii	"s6\000"
 3532 0883 01       		.byte	0x1
 3533 0884 25       		.byte	0x25
 3534 0885 96000000 		.4byte	0x96
 3535 0889 05       		.uleb128 0x5
 3536 088a 03       		.byte	0x3
 3537 088b 00000000 		.4byte	s6
 3538 088f 26       		.uleb128 0x26
 3539 0890 E0050000 		.4byte	.LASF132
 3540 0894 01       		.byte	0x1
 3541 0895 2A       		.byte	0x2a
 3542 0896 AE000000 		.4byte	0xae
 3543 089a 05       		.uleb128 0x5
 3544 089b 03       		.byte	0x3
 3545 089c 00000000 		.4byte	totalMilliseconds
 3546 08a0 26       		.uleb128 0x26
 3547 08a1 78010000 		.4byte	.LASF133
 3548 08a5 01       		.byte	0x1
 3549 08a6 2B       		.byte	0x2b
 3550 08a7 D2000000 		.4byte	0xd2
 3551 08ab 05       		.uleb128 0x5
 3552 08ac 03       		.byte	0x3
 3553 08ad 00000000 		.4byte	totalDistance
 3554 08b1 07       		.uleb128 0x7
 3555 08b2 84000000 		.4byte	0x84
 3556 08b6 C1080000 		.4byte	0x8c1
 3557 08ba 08       		.uleb128 0x8
 3558 08bb 7D000000 		.4byte	0x7d
 3559 08bf 44       		.byte	0x44
 3560 08c0 00       		.byte	0
 3561 08c1 26       		.uleb128 0x26
 3562 08c2 61000000 		.4byte	.LASF134
 3563 08c6 01       		.byte	0x1
 3564 08c7 2D       		.byte	0x2d
 3565 08c8 B1080000 		.4byte	0x8b1
 3566 08cc 05       		.uleb128 0x5
 3567 08cd 03       		.byte	0x3
 3568 08ce 00000000 		.4byte	buffer
 3569 08d2 26       		.uleb128 0x26
 3570 08d3 55020000 		.4byte	.LASF135
 3571 08d7 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 76


 3572 08d8 2E       		.byte	0x2e
 3573 08d9 68000000 		.4byte	0x68
 3574 08dd 05       		.uleb128 0x5
 3575 08de 03       		.byte	0x3
 3576 08df 00000000 		.4byte	quadDec2Count
 3577 08e3 26       		.uleb128 0x26
 3578 08e4 2F080000 		.4byte	.LASF136
 3579 08e8 01       		.byte	0x1
 3580 08e9 2F       		.byte	0x2f
 3581 08ea 68000000 		.4byte	0x68
 3582 08ee 05       		.uleb128 0x5
 3583 08ef 03       		.byte	0x3
 3584 08f0 00000000 		.4byte	timerInt
 3585 08f4 26       		.uleb128 0x26
 3586 08f5 E8020000 		.4byte	.LASF137
 3587 08f9 01       		.byte	0x1
 3588 08fa 30       		.byte	0x30
 3589 08fb 68000000 		.4byte	0x68
 3590 08ff 05       		.uleb128 0x5
 3591 0900 03       		.byte	0x3
 3592 0901 00000000 		.4byte	keepLedOn
 3593 0905 26       		.uleb128 0x26
 3594 0906 87060000 		.4byte	.LASF138
 3595 090a 01       		.byte	0x1
 3596 090b 32       		.byte	0x32
 3597 090c AE000000 		.4byte	0xae
 3598 0910 05       		.uleb128 0x5
 3599 0911 03       		.byte	0x3
 3600 0912 00000000 		.4byte	stopBuffer
 3601 0916 26       		.uleb128 0x26
 3602 0917 F0040000 		.4byte	.LASF139
 3603 091b 01       		.byte	0x1
 3604 091c 42       		.byte	0x42
 3605 091d EA000000 		.4byte	0xea
 3606 0921 05       		.uleb128 0x5
 3607 0922 03       		.byte	0x3
 3608 0923 00000000 		.4byte	junctionConfiguration
 3609 0927 26       		.uleb128 0x26
 3610 0928 72040000 		.4byte	.LASF140
 3611 092c 01       		.byte	0x1
 3612 092d 44       		.byte	0x44
 3613 092e D2000000 		.4byte	0xd2
 3614 0932 05       		.uleb128 0x5
 3615 0933 03       		.byte	0x3
 3616 0934 00000000 		.4byte	blockSizeTotal
 3617 0938 26       		.uleb128 0x26
 3618 0939 02040000 		.4byte	.LASF141
 3619 093d 01       		.byte	0x1
 3620 093e CA       		.byte	0xca
 3621 093f D2000000 		.4byte	0xd2
 3622 0943 05       		.uleb128 0x5
 3623 0944 03       		.byte	0x3
 3624 0945 00000000 		.4byte	xBlocksize
 3625 0949 26       		.uleb128 0x26
 3626 094a 97050000 		.4byte	.LASF142
 3627 094e 01       		.byte	0x1
 3628 094f CB       		.byte	0xcb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 77


 3629 0950 D2000000 		.4byte	0xd2
 3630 0954 05       		.uleb128 0x5
 3631 0955 03       		.byte	0x3
 3632 0956 00000000 		.4byte	yBlocksize
 3633 095a 26       		.uleb128 0x26
 3634 095b 9F070000 		.4byte	.LASF143
 3635 095f 01       		.byte	0x1
 3636 0960 CC       		.byte	0xcc
 3637 0961 96000000 		.4byte	0x96
 3638 0965 05       		.uleb128 0x5
 3639 0966 03       		.byte	0x3
 3640 0967 00000000 		.4byte	currentRow
 3641 096b 26       		.uleb128 0x26
 3642 096c 0D080000 		.4byte	.LASF144
 3643 0970 01       		.byte	0x1
 3644 0971 CD       		.byte	0xcd
 3645 0972 96000000 		.4byte	0x96
 3646 0976 05       		.uleb128 0x5
 3647 0977 03       		.byte	0x3
 3648 0978 00000000 		.4byte	currentCol
 3649 097c 26       		.uleb128 0x26
 3650 097d D9060000 		.4byte	.LASF145
 3651 0981 01       		.byte	0x1
 3652 0982 CF       		.byte	0xcf
 3653 0983 96000000 		.4byte	0x96
 3654 0987 05       		.uleb128 0x5
 3655 0988 03       		.byte	0x3
 3656 0989 00000000 		.4byte	stoppedAfterTurn
 3657 098d 26       		.uleb128 0x26
 3658 098e 3A030000 		.4byte	.LASF146
 3659 0992 01       		.byte	0x1
 3660 0993 D0       		.byte	0xd0
 3661 0994 96000000 		.4byte	0x96
 3662 0998 05       		.uleb128 0x5
 3663 0999 03       		.byte	0x3
 3664 099a 00000000 		.4byte	ignoreSensor
 3665 099e 26       		.uleb128 0x26
 3666 099f 56060000 		.4byte	.LASF147
 3667 09a3 01       		.byte	0x1
 3668 09a4 F8       		.byte	0xf8
 3669 09a5 7E020000 		.4byte	0x27e
 3670 09a9 05       		.uleb128 0x5
 3671 09aa 03       		.byte	0x3
 3672 09ab 00000000 		.4byte	lastDirectionAfter180
 3673 09af 00       		.byte	0
 3674              		.section	.debug_abbrev,"",%progbits
 3675              	.Ldebug_abbrev0:
 3676 0000 01       		.uleb128 0x1
 3677 0001 11       		.uleb128 0x11
 3678 0002 01       		.byte	0x1
 3679 0003 25       		.uleb128 0x25
 3680 0004 0E       		.uleb128 0xe
 3681 0005 13       		.uleb128 0x13
 3682 0006 0B       		.uleb128 0xb
 3683 0007 03       		.uleb128 0x3
 3684 0008 0E       		.uleb128 0xe
 3685 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 78


 3686 000a 0E       		.uleb128 0xe
 3687 000b 55       		.uleb128 0x55
 3688 000c 17       		.uleb128 0x17
 3689 000d 11       		.uleb128 0x11
 3690 000e 01       		.uleb128 0x1
 3691 000f 10       		.uleb128 0x10
 3692 0010 17       		.uleb128 0x17
 3693 0011 00       		.byte	0
 3694 0012 00       		.byte	0
 3695 0013 02       		.uleb128 0x2
 3696 0014 24       		.uleb128 0x24
 3697 0015 00       		.byte	0
 3698 0016 0B       		.uleb128 0xb
 3699 0017 0B       		.uleb128 0xb
 3700 0018 3E       		.uleb128 0x3e
 3701 0019 0B       		.uleb128 0xb
 3702 001a 03       		.uleb128 0x3
 3703 001b 0E       		.uleb128 0xe
 3704 001c 00       		.byte	0
 3705 001d 00       		.byte	0
 3706 001e 03       		.uleb128 0x3
 3707 001f 16       		.uleb128 0x16
 3708 0020 00       		.byte	0
 3709 0021 03       		.uleb128 0x3
 3710 0022 0E       		.uleb128 0xe
 3711 0023 3A       		.uleb128 0x3a
 3712 0024 0B       		.uleb128 0xb
 3713 0025 3B       		.uleb128 0x3b
 3714 0026 0B       		.uleb128 0xb
 3715 0027 49       		.uleb128 0x49
 3716 0028 13       		.uleb128 0x13
 3717 0029 00       		.byte	0
 3718 002a 00       		.byte	0
 3719 002b 04       		.uleb128 0x4
 3720 002c 24       		.uleb128 0x24
 3721 002d 00       		.byte	0
 3722 002e 0B       		.uleb128 0xb
 3723 002f 0B       		.uleb128 0xb
 3724 0030 3E       		.uleb128 0x3e
 3725 0031 0B       		.uleb128 0xb
 3726 0032 03       		.uleb128 0x3
 3727 0033 08       		.uleb128 0x8
 3728 0034 00       		.byte	0
 3729 0035 00       		.byte	0
 3730 0036 05       		.uleb128 0x5
 3731 0037 16       		.uleb128 0x16
 3732 0038 00       		.byte	0
 3733 0039 03       		.uleb128 0x3
 3734 003a 0E       		.uleb128 0xe
 3735 003b 3A       		.uleb128 0x3a
 3736 003c 0B       		.uleb128 0xb
 3737 003d 3B       		.uleb128 0x3b
 3738 003e 05       		.uleb128 0x5
 3739 003f 49       		.uleb128 0x49
 3740 0040 13       		.uleb128 0x13
 3741 0041 00       		.byte	0
 3742 0042 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 79


 3743 0043 06       		.uleb128 0x6
 3744 0044 35       		.uleb128 0x35
 3745 0045 00       		.byte	0
 3746 0046 49       		.uleb128 0x49
 3747 0047 13       		.uleb128 0x13
 3748 0048 00       		.byte	0
 3749 0049 00       		.byte	0
 3750 004a 07       		.uleb128 0x7
 3751 004b 01       		.uleb128 0x1
 3752 004c 01       		.byte	0x1
 3753 004d 49       		.uleb128 0x49
 3754 004e 13       		.uleb128 0x13
 3755 004f 01       		.uleb128 0x1
 3756 0050 13       		.uleb128 0x13
 3757 0051 00       		.byte	0
 3758 0052 00       		.byte	0
 3759 0053 08       		.uleb128 0x8
 3760 0054 21       		.uleb128 0x21
 3761 0055 00       		.byte	0
 3762 0056 49       		.uleb128 0x49
 3763 0057 13       		.uleb128 0x13
 3764 0058 2F       		.uleb128 0x2f
 3765 0059 0B       		.uleb128 0xb
 3766 005a 00       		.byte	0
 3767 005b 00       		.byte	0
 3768 005c 09       		.uleb128 0x9
 3769 005d 13       		.uleb128 0x13
 3770 005e 01       		.byte	0x1
 3771 005f 03       		.uleb128 0x3
 3772 0060 0E       		.uleb128 0xe
 3773 0061 0B       		.uleb128 0xb
 3774 0062 0B       		.uleb128 0xb
 3775 0063 3A       		.uleb128 0x3a
 3776 0064 0B       		.uleb128 0xb
 3777 0065 3B       		.uleb128 0x3b
 3778 0066 0B       		.uleb128 0xb
 3779 0067 01       		.uleb128 0x1
 3780 0068 13       		.uleb128 0x13
 3781 0069 00       		.byte	0
 3782 006a 00       		.byte	0
 3783 006b 0A       		.uleb128 0xa
 3784 006c 0D       		.uleb128 0xd
 3785 006d 00       		.byte	0
 3786 006e 03       		.uleb128 0x3
 3787 006f 0E       		.uleb128 0xe
 3788 0070 3A       		.uleb128 0x3a
 3789 0071 0B       		.uleb128 0xb
 3790 0072 3B       		.uleb128 0x3b
 3791 0073 0B       		.uleb128 0xb
 3792 0074 49       		.uleb128 0x49
 3793 0075 13       		.uleb128 0x13
 3794 0076 38       		.uleb128 0x38
 3795 0077 0B       		.uleb128 0xb
 3796 0078 00       		.byte	0
 3797 0079 00       		.byte	0
 3798 007a 0B       		.uleb128 0xb
 3799 007b 04       		.uleb128 0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 80


 3800 007c 01       		.byte	0x1
 3801 007d 03       		.uleb128 0x3
 3802 007e 0E       		.uleb128 0xe
 3803 007f 0B       		.uleb128 0xb
 3804 0080 0B       		.uleb128 0xb
 3805 0081 49       		.uleb128 0x49
 3806 0082 13       		.uleb128 0x13
 3807 0083 3A       		.uleb128 0x3a
 3808 0084 0B       		.uleb128 0xb
 3809 0085 3B       		.uleb128 0x3b
 3810 0086 0B       		.uleb128 0xb
 3811 0087 01       		.uleb128 0x1
 3812 0088 13       		.uleb128 0x13
 3813 0089 00       		.byte	0
 3814 008a 00       		.byte	0
 3815 008b 0C       		.uleb128 0xc
 3816 008c 28       		.uleb128 0x28
 3817 008d 00       		.byte	0
 3818 008e 03       		.uleb128 0x3
 3819 008f 08       		.uleb128 0x8
 3820 0090 1C       		.uleb128 0x1c
 3821 0091 0B       		.uleb128 0xb
 3822 0092 00       		.byte	0
 3823 0093 00       		.byte	0
 3824 0094 0D       		.uleb128 0xd
 3825 0095 28       		.uleb128 0x28
 3826 0096 00       		.byte	0
 3827 0097 03       		.uleb128 0x3
 3828 0098 0E       		.uleb128 0xe
 3829 0099 1C       		.uleb128 0x1c
 3830 009a 0B       		.uleb128 0xb
 3831 009b 00       		.byte	0
 3832 009c 00       		.byte	0
 3833 009d 0E       		.uleb128 0xe
 3834 009e 2E       		.uleb128 0x2e
 3835 009f 01       		.byte	0x1
 3836 00a0 3F       		.uleb128 0x3f
 3837 00a1 19       		.uleb128 0x19
 3838 00a2 03       		.uleb128 0x3
 3839 00a3 0E       		.uleb128 0xe
 3840 00a4 3A       		.uleb128 0x3a
 3841 00a5 0B       		.uleb128 0xb
 3842 00a6 3B       		.uleb128 0x3b
 3843 00a7 0B       		.uleb128 0xb
 3844 00a8 27       		.uleb128 0x27
 3845 00a9 19       		.uleb128 0x19
 3846 00aa 11       		.uleb128 0x11
 3847 00ab 01       		.uleb128 0x1
 3848 00ac 12       		.uleb128 0x12
 3849 00ad 06       		.uleb128 0x6
 3850 00ae 40       		.uleb128 0x40
 3851 00af 18       		.uleb128 0x18
 3852 00b0 9642     		.uleb128 0x2116
 3853 00b2 19       		.uleb128 0x19
 3854 00b3 01       		.uleb128 0x1
 3855 00b4 13       		.uleb128 0x13
 3856 00b5 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 81


 3857 00b6 00       		.byte	0
 3858 00b7 0F       		.uleb128 0xf
 3859 00b8 0B       		.uleb128 0xb
 3860 00b9 01       		.byte	0x1
 3861 00ba 11       		.uleb128 0x11
 3862 00bb 01       		.uleb128 0x1
 3863 00bc 12       		.uleb128 0x12
 3864 00bd 06       		.uleb128 0x6
 3865 00be 00       		.byte	0
 3866 00bf 00       		.byte	0
 3867 00c0 10       		.uleb128 0x10
 3868 00c1 34       		.uleb128 0x34
 3869 00c2 00       		.byte	0
 3870 00c3 03       		.uleb128 0x3
 3871 00c4 0E       		.uleb128 0xe
 3872 00c5 3A       		.uleb128 0x3a
 3873 00c6 0B       		.uleb128 0xb
 3874 00c7 3B       		.uleb128 0x3b
 3875 00c8 0B       		.uleb128 0xb
 3876 00c9 49       		.uleb128 0x49
 3877 00ca 13       		.uleb128 0x13
 3878 00cb 02       		.uleb128 0x2
 3879 00cc 18       		.uleb128 0x18
 3880 00cd 00       		.byte	0
 3881 00ce 00       		.byte	0
 3882 00cf 11       		.uleb128 0x11
 3883 00d0 2E       		.uleb128 0x2e
 3884 00d1 00       		.byte	0
 3885 00d2 3F       		.uleb128 0x3f
 3886 00d3 19       		.uleb128 0x19
 3887 00d4 03       		.uleb128 0x3
 3888 00d5 0E       		.uleb128 0xe
 3889 00d6 3A       		.uleb128 0x3a
 3890 00d7 0B       		.uleb128 0xb
 3891 00d8 3B       		.uleb128 0x3b
 3892 00d9 0B       		.uleb128 0xb
 3893 00da 27       		.uleb128 0x27
 3894 00db 19       		.uleb128 0x19
 3895 00dc 11       		.uleb128 0x11
 3896 00dd 01       		.uleb128 0x1
 3897 00de 12       		.uleb128 0x12
 3898 00df 06       		.uleb128 0x6
 3899 00e0 40       		.uleb128 0x40
 3900 00e1 18       		.uleb128 0x18
 3901 00e2 9742     		.uleb128 0x2117
 3902 00e4 19       		.uleb128 0x19
 3903 00e5 00       		.byte	0
 3904 00e6 00       		.byte	0
 3905 00e7 12       		.uleb128 0x12
 3906 00e8 2E       		.uleb128 0x2e
 3907 00e9 00       		.byte	0
 3908 00ea 3F       		.uleb128 0x3f
 3909 00eb 19       		.uleb128 0x19
 3910 00ec 03       		.uleb128 0x3
 3911 00ed 0E       		.uleb128 0xe
 3912 00ee 3A       		.uleb128 0x3a
 3913 00ef 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 82


 3914 00f0 3B       		.uleb128 0x3b
 3915 00f1 0B       		.uleb128 0xb
 3916 00f2 27       		.uleb128 0x27
 3917 00f3 19       		.uleb128 0x19
 3918 00f4 11       		.uleb128 0x11
 3919 00f5 01       		.uleb128 0x1
 3920 00f6 12       		.uleb128 0x12
 3921 00f7 06       		.uleb128 0x6
 3922 00f8 40       		.uleb128 0x40
 3923 00f9 18       		.uleb128 0x18
 3924 00fa 9642     		.uleb128 0x2116
 3925 00fc 19       		.uleb128 0x19
 3926 00fd 00       		.byte	0
 3927 00fe 00       		.byte	0
 3928 00ff 13       		.uleb128 0x13
 3929 0100 2E       		.uleb128 0x2e
 3930 0101 00       		.byte	0
 3931 0102 3F       		.uleb128 0x3f
 3932 0103 19       		.uleb128 0x19
 3933 0104 03       		.uleb128 0x3
 3934 0105 0E       		.uleb128 0xe
 3935 0106 3A       		.uleb128 0x3a
 3936 0107 0B       		.uleb128 0xb
 3937 0108 3B       		.uleb128 0x3b
 3938 0109 0B       		.uleb128 0xb
 3939 010a 49       		.uleb128 0x49
 3940 010b 13       		.uleb128 0x13
 3941 010c 11       		.uleb128 0x11
 3942 010d 01       		.uleb128 0x1
 3943 010e 12       		.uleb128 0x12
 3944 010f 06       		.uleb128 0x6
 3945 0110 40       		.uleb128 0x40
 3946 0111 18       		.uleb128 0x18
 3947 0112 9642     		.uleb128 0x2116
 3948 0114 19       		.uleb128 0x19
 3949 0115 00       		.byte	0
 3950 0116 00       		.byte	0
 3951 0117 14       		.uleb128 0x14
 3952 0118 2E       		.uleb128 0x2e
 3953 0119 01       		.byte	0x1
 3954 011a 3F       		.uleb128 0x3f
 3955 011b 19       		.uleb128 0x19
 3956 011c 03       		.uleb128 0x3
 3957 011d 0E       		.uleb128 0xe
 3958 011e 3A       		.uleb128 0x3a
 3959 011f 0B       		.uleb128 0xb
 3960 0120 3B       		.uleb128 0x3b
 3961 0121 0B       		.uleb128 0xb
 3962 0122 27       		.uleb128 0x27
 3963 0123 19       		.uleb128 0x19
 3964 0124 49       		.uleb128 0x49
 3965 0125 13       		.uleb128 0x13
 3966 0126 11       		.uleb128 0x11
 3967 0127 01       		.uleb128 0x1
 3968 0128 12       		.uleb128 0x12
 3969 0129 06       		.uleb128 0x6
 3970 012a 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 83


 3971 012b 18       		.uleb128 0x18
 3972 012c 9642     		.uleb128 0x2116
 3973 012e 19       		.uleb128 0x19
 3974 012f 01       		.uleb128 0x1
 3975 0130 13       		.uleb128 0x13
 3976 0131 00       		.byte	0
 3977 0132 00       		.byte	0
 3978 0133 15       		.uleb128 0x15
 3979 0134 05       		.uleb128 0x5
 3980 0135 00       		.byte	0
 3981 0136 03       		.uleb128 0x3
 3982 0137 0E       		.uleb128 0xe
 3983 0138 3A       		.uleb128 0x3a
 3984 0139 0B       		.uleb128 0xb
 3985 013a 3B       		.uleb128 0x3b
 3986 013b 0B       		.uleb128 0xb
 3987 013c 49       		.uleb128 0x49
 3988 013d 13       		.uleb128 0x13
 3989 013e 02       		.uleb128 0x2
 3990 013f 18       		.uleb128 0x18
 3991 0140 00       		.byte	0
 3992 0141 00       		.byte	0
 3993 0142 16       		.uleb128 0x16
 3994 0143 34       		.uleb128 0x34
 3995 0144 00       		.byte	0
 3996 0145 03       		.uleb128 0x3
 3997 0146 08       		.uleb128 0x8
 3998 0147 3A       		.uleb128 0x3a
 3999 0148 0B       		.uleb128 0xb
 4000 0149 3B       		.uleb128 0x3b
 4001 014a 0B       		.uleb128 0xb
 4002 014b 49       		.uleb128 0x49
 4003 014c 13       		.uleb128 0x13
 4004 014d 02       		.uleb128 0x2
 4005 014e 18       		.uleb128 0x18
 4006 014f 00       		.byte	0
 4007 0150 00       		.byte	0
 4008 0151 17       		.uleb128 0x17
 4009 0152 2E       		.uleb128 0x2e
 4010 0153 00       		.byte	0
 4011 0154 3F       		.uleb128 0x3f
 4012 0155 19       		.uleb128 0x19
 4013 0156 03       		.uleb128 0x3
 4014 0157 0E       		.uleb128 0xe
 4015 0158 3A       		.uleb128 0x3a
 4016 0159 0B       		.uleb128 0xb
 4017 015a 3B       		.uleb128 0x3b
 4018 015b 0B       		.uleb128 0xb
 4019 015c 11       		.uleb128 0x11
 4020 015d 01       		.uleb128 0x1
 4021 015e 12       		.uleb128 0x12
 4022 015f 06       		.uleb128 0x6
 4023 0160 40       		.uleb128 0x40
 4024 0161 18       		.uleb128 0x18
 4025 0162 9742     		.uleb128 0x2117
 4026 0164 19       		.uleb128 0x19
 4027 0165 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 84


 4028 0166 00       		.byte	0
 4029 0167 18       		.uleb128 0x18
 4030 0168 2E       		.uleb128 0x2e
 4031 0169 00       		.byte	0
 4032 016a 3F       		.uleb128 0x3f
 4033 016b 19       		.uleb128 0x19
 4034 016c 03       		.uleb128 0x3
 4035 016d 0E       		.uleb128 0xe
 4036 016e 3A       		.uleb128 0x3a
 4037 016f 0B       		.uleb128 0xb
 4038 0170 3B       		.uleb128 0x3b
 4039 0171 0B       		.uleb128 0xb
 4040 0172 49       		.uleb128 0x49
 4041 0173 13       		.uleb128 0x13
 4042 0174 11       		.uleb128 0x11
 4043 0175 01       		.uleb128 0x1
 4044 0176 12       		.uleb128 0x12
 4045 0177 06       		.uleb128 0x6
 4046 0178 40       		.uleb128 0x40
 4047 0179 18       		.uleb128 0x18
 4048 017a 9742     		.uleb128 0x2117
 4049 017c 19       		.uleb128 0x19
 4050 017d 00       		.byte	0
 4051 017e 00       		.byte	0
 4052 017f 19       		.uleb128 0x19
 4053 0180 2E       		.uleb128 0x2e
 4054 0181 01       		.byte	0x1
 4055 0182 3F       		.uleb128 0x3f
 4056 0183 19       		.uleb128 0x19
 4057 0184 03       		.uleb128 0x3
 4058 0185 0E       		.uleb128 0xe
 4059 0186 3A       		.uleb128 0x3a
 4060 0187 0B       		.uleb128 0xb
 4061 0188 3B       		.uleb128 0x3b
 4062 0189 05       		.uleb128 0x5
 4063 018a 49       		.uleb128 0x49
 4064 018b 13       		.uleb128 0x13
 4065 018c 11       		.uleb128 0x11
 4066 018d 01       		.uleb128 0x1
 4067 018e 12       		.uleb128 0x12
 4068 018f 06       		.uleb128 0x6
 4069 0190 40       		.uleb128 0x40
 4070 0191 18       		.uleb128 0x18
 4071 0192 9642     		.uleb128 0x2116
 4072 0194 19       		.uleb128 0x19
 4073 0195 01       		.uleb128 0x1
 4074 0196 13       		.uleb128 0x13
 4075 0197 00       		.byte	0
 4076 0198 00       		.byte	0
 4077 0199 1A       		.uleb128 0x1a
 4078 019a 34       		.uleb128 0x34
 4079 019b 00       		.byte	0
 4080 019c 03       		.uleb128 0x3
 4081 019d 0E       		.uleb128 0xe
 4082 019e 3A       		.uleb128 0x3a
 4083 019f 0B       		.uleb128 0xb
 4084 01a0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 85


 4085 01a1 05       		.uleb128 0x5
 4086 01a2 49       		.uleb128 0x49
 4087 01a3 13       		.uleb128 0x13
 4088 01a4 02       		.uleb128 0x2
 4089 01a5 18       		.uleb128 0x18
 4090 01a6 00       		.byte	0
 4091 01a7 00       		.byte	0
 4092 01a8 1B       		.uleb128 0x1b
 4093 01a9 2E       		.uleb128 0x2e
 4094 01aa 01       		.byte	0x1
 4095 01ab 3F       		.uleb128 0x3f
 4096 01ac 19       		.uleb128 0x19
 4097 01ad 03       		.uleb128 0x3
 4098 01ae 0E       		.uleb128 0xe
 4099 01af 3A       		.uleb128 0x3a
 4100 01b0 0B       		.uleb128 0xb
 4101 01b1 3B       		.uleb128 0x3b
 4102 01b2 05       		.uleb128 0x5
 4103 01b3 27       		.uleb128 0x27
 4104 01b4 19       		.uleb128 0x19
 4105 01b5 49       		.uleb128 0x49
 4106 01b6 13       		.uleb128 0x13
 4107 01b7 11       		.uleb128 0x11
 4108 01b8 01       		.uleb128 0x1
 4109 01b9 12       		.uleb128 0x12
 4110 01ba 06       		.uleb128 0x6
 4111 01bb 40       		.uleb128 0x40
 4112 01bc 18       		.uleb128 0x18
 4113 01bd 9642     		.uleb128 0x2116
 4114 01bf 19       		.uleb128 0x19
 4115 01c0 01       		.uleb128 0x1
 4116 01c1 13       		.uleb128 0x13
 4117 01c2 00       		.byte	0
 4118 01c3 00       		.byte	0
 4119 01c4 1C       		.uleb128 0x1c
 4120 01c5 05       		.uleb128 0x5
 4121 01c6 00       		.byte	0
 4122 01c7 03       		.uleb128 0x3
 4123 01c8 0E       		.uleb128 0xe
 4124 01c9 3A       		.uleb128 0x3a
 4125 01ca 0B       		.uleb128 0xb
 4126 01cb 3B       		.uleb128 0x3b
 4127 01cc 05       		.uleb128 0x5
 4128 01cd 49       		.uleb128 0x49
 4129 01ce 13       		.uleb128 0x13
 4130 01cf 02       		.uleb128 0x2
 4131 01d0 18       		.uleb128 0x18
 4132 01d1 00       		.byte	0
 4133 01d2 00       		.byte	0
 4134 01d3 1D       		.uleb128 0x1d
 4135 01d4 0B       		.uleb128 0xb
 4136 01d5 01       		.byte	0x1
 4137 01d6 55       		.uleb128 0x55
 4138 01d7 17       		.uleb128 0x17
 4139 01d8 01       		.uleb128 0x1
 4140 01d9 13       		.uleb128 0x13
 4141 01da 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 86


 4142 01db 00       		.byte	0
 4143 01dc 1E       		.uleb128 0x1e
 4144 01dd 34       		.uleb128 0x34
 4145 01de 00       		.byte	0
 4146 01df 03       		.uleb128 0x3
 4147 01e0 08       		.uleb128 0x8
 4148 01e1 3A       		.uleb128 0x3a
 4149 01e2 0B       		.uleb128 0xb
 4150 01e3 3B       		.uleb128 0x3b
 4151 01e4 05       		.uleb128 0x5
 4152 01e5 49       		.uleb128 0x49
 4153 01e6 13       		.uleb128 0x13
 4154 01e7 02       		.uleb128 0x2
 4155 01e8 18       		.uleb128 0x18
 4156 01e9 00       		.byte	0
 4157 01ea 00       		.byte	0
 4158 01eb 1F       		.uleb128 0x1f
 4159 01ec 0B       		.uleb128 0xb
 4160 01ed 01       		.byte	0x1
 4161 01ee 55       		.uleb128 0x55
 4162 01ef 17       		.uleb128 0x17
 4163 01f0 00       		.byte	0
 4164 01f1 00       		.byte	0
 4165 01f2 20       		.uleb128 0x20
 4166 01f3 2E       		.uleb128 0x2e
 4167 01f4 00       		.byte	0
 4168 01f5 3F       		.uleb128 0x3f
 4169 01f6 19       		.uleb128 0x19
 4170 01f7 03       		.uleb128 0x3
 4171 01f8 0E       		.uleb128 0xe
 4172 01f9 3A       		.uleb128 0x3a
 4173 01fa 0B       		.uleb128 0xb
 4174 01fb 3B       		.uleb128 0x3b
 4175 01fc 05       		.uleb128 0x5
 4176 01fd 11       		.uleb128 0x11
 4177 01fe 01       		.uleb128 0x1
 4178 01ff 12       		.uleb128 0x12
 4179 0200 06       		.uleb128 0x6
 4180 0201 40       		.uleb128 0x40
 4181 0202 18       		.uleb128 0x18
 4182 0203 9742     		.uleb128 0x2117
 4183 0205 19       		.uleb128 0x19
 4184 0206 00       		.byte	0
 4185 0207 00       		.byte	0
 4186 0208 21       		.uleb128 0x21
 4187 0209 2E       		.uleb128 0x2e
 4188 020a 01       		.byte	0x1
 4189 020b 3F       		.uleb128 0x3f
 4190 020c 19       		.uleb128 0x19
 4191 020d 03       		.uleb128 0x3
 4192 020e 0E       		.uleb128 0xe
 4193 020f 3A       		.uleb128 0x3a
 4194 0210 0B       		.uleb128 0xb
 4195 0211 3B       		.uleb128 0x3b
 4196 0212 05       		.uleb128 0x5
 4197 0213 27       		.uleb128 0x27
 4198 0214 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 87


 4199 0215 49       		.uleb128 0x49
 4200 0216 13       		.uleb128 0x13
 4201 0217 11       		.uleb128 0x11
 4202 0218 01       		.uleb128 0x1
 4203 0219 12       		.uleb128 0x12
 4204 021a 06       		.uleb128 0x6
 4205 021b 40       		.uleb128 0x40
 4206 021c 18       		.uleb128 0x18
 4207 021d 9742     		.uleb128 0x2117
 4208 021f 19       		.uleb128 0x19
 4209 0220 01       		.uleb128 0x1
 4210 0221 13       		.uleb128 0x13
 4211 0222 00       		.byte	0
 4212 0223 00       		.byte	0
 4213 0224 22       		.uleb128 0x22
 4214 0225 0F       		.uleb128 0xf
 4215 0226 00       		.byte	0
 4216 0227 0B       		.uleb128 0xb
 4217 0228 0B       		.uleb128 0xb
 4218 0229 49       		.uleb128 0x49
 4219 022a 13       		.uleb128 0x13
 4220 022b 00       		.byte	0
 4221 022c 00       		.byte	0
 4222 022d 23       		.uleb128 0x23
 4223 022e 2E       		.uleb128 0x2e
 4224 022f 00       		.byte	0
 4225 0230 3F       		.uleb128 0x3f
 4226 0231 19       		.uleb128 0x19
 4227 0232 03       		.uleb128 0x3
 4228 0233 0E       		.uleb128 0xe
 4229 0234 3A       		.uleb128 0x3a
 4230 0235 0B       		.uleb128 0xb
 4231 0236 3B       		.uleb128 0x3b
 4232 0237 05       		.uleb128 0x5
 4233 0238 11       		.uleb128 0x11
 4234 0239 01       		.uleb128 0x1
 4235 023a 12       		.uleb128 0x12
 4236 023b 06       		.uleb128 0x6
 4237 023c 40       		.uleb128 0x40
 4238 023d 18       		.uleb128 0x18
 4239 023e 9642     		.uleb128 0x2116
 4240 0240 19       		.uleb128 0x19
 4241 0241 00       		.byte	0
 4242 0242 00       		.byte	0
 4243 0243 24       		.uleb128 0x24
 4244 0244 34       		.uleb128 0x34
 4245 0245 00       		.byte	0
 4246 0246 03       		.uleb128 0x3
 4247 0247 0E       		.uleb128 0xe
 4248 0248 3A       		.uleb128 0x3a
 4249 0249 0B       		.uleb128 0xb
 4250 024a 3B       		.uleb128 0x3b
 4251 024b 05       		.uleb128 0x5
 4252 024c 49       		.uleb128 0x49
 4253 024d 13       		.uleb128 0x13
 4254 024e 3F       		.uleb128 0x3f
 4255 024f 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 88


 4256 0250 3C       		.uleb128 0x3c
 4257 0251 19       		.uleb128 0x19
 4258 0252 00       		.byte	0
 4259 0253 00       		.byte	0
 4260 0254 25       		.uleb128 0x25
 4261 0255 34       		.uleb128 0x34
 4262 0256 00       		.byte	0
 4263 0257 03       		.uleb128 0x3
 4264 0258 08       		.uleb128 0x8
 4265 0259 3A       		.uleb128 0x3a
 4266 025a 0B       		.uleb128 0xb
 4267 025b 3B       		.uleb128 0x3b
 4268 025c 0B       		.uleb128 0xb
 4269 025d 49       		.uleb128 0x49
 4270 025e 13       		.uleb128 0x13
 4271 025f 3F       		.uleb128 0x3f
 4272 0260 19       		.uleb128 0x19
 4273 0261 02       		.uleb128 0x2
 4274 0262 18       		.uleb128 0x18
 4275 0263 00       		.byte	0
 4276 0264 00       		.byte	0
 4277 0265 26       		.uleb128 0x26
 4278 0266 34       		.uleb128 0x34
 4279 0267 00       		.byte	0
 4280 0268 03       		.uleb128 0x3
 4281 0269 0E       		.uleb128 0xe
 4282 026a 3A       		.uleb128 0x3a
 4283 026b 0B       		.uleb128 0xb
 4284 026c 3B       		.uleb128 0x3b
 4285 026d 0B       		.uleb128 0xb
 4286 026e 49       		.uleb128 0x49
 4287 026f 13       		.uleb128 0x13
 4288 0270 3F       		.uleb128 0x3f
 4289 0271 19       		.uleb128 0x19
 4290 0272 02       		.uleb128 0x2
 4291 0273 18       		.uleb128 0x18
 4292 0274 00       		.byte	0
 4293 0275 00       		.byte	0
 4294 0276 27       		.uleb128 0x27
 4295 0277 34       		.uleb128 0x34
 4296 0278 00       		.byte	0
 4297 0279 03       		.uleb128 0x3
 4298 027a 08       		.uleb128 0x8
 4299 027b 3A       		.uleb128 0x3a
 4300 027c 0B       		.uleb128 0xb
 4301 027d 3B       		.uleb128 0x3b
 4302 027e 0B       		.uleb128 0xb
 4303 027f 49       		.uleb128 0x49
 4304 0280 13       		.uleb128 0x13
 4305 0281 3F       		.uleb128 0x3f
 4306 0282 19       		.uleb128 0x19
 4307 0283 3C       		.uleb128 0x3c
 4308 0284 19       		.uleb128 0x19
 4309 0285 00       		.byte	0
 4310 0286 00       		.byte	0
 4311 0287 28       		.uleb128 0x28
 4312 0288 34       		.uleb128 0x34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 89


 4313 0289 00       		.byte	0
 4314 028a 03       		.uleb128 0x3
 4315 028b 0E       		.uleb128 0xe
 4316 028c 3A       		.uleb128 0x3a
 4317 028d 0B       		.uleb128 0xb
 4318 028e 3B       		.uleb128 0x3b
 4319 028f 0B       		.uleb128 0xb
 4320 0290 49       		.uleb128 0x49
 4321 0291 13       		.uleb128 0x13
 4322 0292 3F       		.uleb128 0x3f
 4323 0293 19       		.uleb128 0x19
 4324 0294 3C       		.uleb128 0x3c
 4325 0295 19       		.uleb128 0x19
 4326 0296 00       		.byte	0
 4327 0297 00       		.byte	0
 4328 0298 00       		.byte	0
 4329              		.section	.debug_aranges,"",%progbits
 4330 0000 94000000 		.4byte	0x94
 4331 0004 0200     		.2byte	0x2
 4332 0006 00000000 		.4byte	.Ldebug_info0
 4333 000a 04       		.byte	0x4
 4334 000b 00       		.byte	0
 4335 000c 0000     		.2byte	0
 4336 000e 0000     		.2byte	0
 4337 0010 00000000 		.4byte	.LFB64
 4338 0014 EC000000 		.4byte	.LFE64-.LFB64
 4339 0018 00000000 		.4byte	.LFB65
 4340 001c 18000000 		.4byte	.LFE65-.LFB65
 4341 0020 00000000 		.4byte	.LFB66
 4342 0024 18000000 		.4byte	.LFE66-.LFB66
 4343 0028 00000000 		.4byte	.LFB67
 4344 002c 18000000 		.4byte	.LFE67-.LFB67
 4345 0030 00000000 		.4byte	.LFB68
 4346 0034 18000000 		.4byte	.LFE68-.LFB68
 4347 0038 00000000 		.4byte	.LFB69
 4348 003c 38000000 		.4byte	.LFE69-.LFB69
 4349 0040 00000000 		.4byte	.LFB70
 4350 0044 14010000 		.4byte	.LFE70-.LFB70
 4351 0048 00000000 		.4byte	.LFB71
 4352 004c 54000000 		.4byte	.LFE71-.LFB71
 4353 0050 00000000 		.4byte	.LFB72
 4354 0054 34000000 		.4byte	.LFE72-.LFB72
 4355 0058 00000000 		.4byte	.LFB73
 4356 005c 84000000 		.4byte	.LFE73-.LFB73
 4357 0060 00000000 		.4byte	.LFB74
 4358 0064 94000000 		.4byte	.LFE74-.LFB74
 4359 0068 00000000 		.4byte	.LFB75
 4360 006c D4030000 		.4byte	.LFE75-.LFB75
 4361 0070 00000000 		.4byte	.LFB76
 4362 0074 90020000 		.4byte	.LFE76-.LFB76
 4363 0078 00000000 		.4byte	.LFB77
 4364 007c 50000000 		.4byte	.LFE77-.LFB77
 4365 0080 00000000 		.4byte	.LFB78
 4366 0084 7C000000 		.4byte	.LFE78-.LFB78
 4367 0088 00000000 		.4byte	.LFB79
 4368 008c C4000000 		.4byte	.LFE79-.LFB79
 4369 0090 00000000 		.4byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 90


 4370 0094 00000000 		.4byte	0
 4371              		.section	.debug_ranges,"",%progbits
 4372              	.Ldebug_ranges0:
 4373 0000 38000000 		.4byte	.LBB3
 4374 0004 BC000000 		.4byte	.LBE3
 4375 0008 BE000000 		.4byte	.LBB4
 4376 000c C0000000 		.4byte	.LBE4
 4377 0010 00000000 		.4byte	0
 4378 0014 00000000 		.4byte	0
 4379 0018 C2000000 		.4byte	.LBB5
 4380 001c 46010000 		.4byte	.LBE5
 4381 0020 48010000 		.4byte	.LBB6
 4382 0024 4A010000 		.4byte	.LBE6
 4383 0028 00000000 		.4byte	0
 4384 002c 00000000 		.4byte	0
 4385 0030 4C010000 		.4byte	.LBB7
 4386 0034 D0010000 		.4byte	.LBE7
 4387 0038 D2010000 		.4byte	.LBB8
 4388 003c D4010000 		.4byte	.LBE8
 4389 0040 00000000 		.4byte	0
 4390 0044 00000000 		.4byte	0
 4391 0048 D6010000 		.4byte	.LBB9
 4392 004c 5A020000 		.4byte	.LBE9
 4393 0050 5C020000 		.4byte	.LBB10
 4394 0054 5E020000 		.4byte	.LBE10
 4395 0058 00000000 		.4byte	0
 4396 005c 00000000 		.4byte	0
 4397 0060 00000000 		.4byte	.LFB64
 4398 0064 EC000000 		.4byte	.LFE64
 4399 0068 00000000 		.4byte	.LFB65
 4400 006c 18000000 		.4byte	.LFE65
 4401 0070 00000000 		.4byte	.LFB66
 4402 0074 18000000 		.4byte	.LFE66
 4403 0078 00000000 		.4byte	.LFB67
 4404 007c 18000000 		.4byte	.LFE67
 4405 0080 00000000 		.4byte	.LFB68
 4406 0084 18000000 		.4byte	.LFE68
 4407 0088 00000000 		.4byte	.LFB69
 4408 008c 38000000 		.4byte	.LFE69
 4409 0090 00000000 		.4byte	.LFB70
 4410 0094 14010000 		.4byte	.LFE70
 4411 0098 00000000 		.4byte	.LFB71
 4412 009c 54000000 		.4byte	.LFE71
 4413 00a0 00000000 		.4byte	.LFB72
 4414 00a4 34000000 		.4byte	.LFE72
 4415 00a8 00000000 		.4byte	.LFB73
 4416 00ac 84000000 		.4byte	.LFE73
 4417 00b0 00000000 		.4byte	.LFB74
 4418 00b4 94000000 		.4byte	.LFE74
 4419 00b8 00000000 		.4byte	.LFB75
 4420 00bc D4030000 		.4byte	.LFE75
 4421 00c0 00000000 		.4byte	.LFB76
 4422 00c4 90020000 		.4byte	.LFE76
 4423 00c8 00000000 		.4byte	.LFB77
 4424 00cc 50000000 		.4byte	.LFE77
 4425 00d0 00000000 		.4byte	.LFB78
 4426 00d4 7C000000 		.4byte	.LFE78
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 91


 4427 00d8 00000000 		.4byte	.LFB79
 4428 00dc C4000000 		.4byte	.LFE79
 4429 00e0 00000000 		.4byte	0
 4430 00e4 00000000 		.4byte	0
 4431              		.section	.debug_line,"",%progbits
 4432              	.Ldebug_line0:
 4433 0000 7F040000 		.section	.debug_str,"MS",%progbits,1
 4433      02007001 
 4433      00000201 
 4433      FB0E0D00 
 4433      01010101 
 4434              	.LASF52:
 4435 0000 64697265 		.ascii	"direction\000"
 4435      6374696F 
 4435      6E00
 4436              	.LASF65:
 4437 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 4437      61726441 
 4437      66746572 
 4437      5475726E 
 4437      00
 4438              	.LASF42:
 4439 001b 496E7374 		.ascii	"InstructionDirection\000"
 4439      72756374 
 4439      696F6E44 
 4439      69726563 
 4439      74696F6E 
 4440              	.LASF149:
 4441 0030 6D61696E 		.ascii	"main.c\000"
 4441      2E6300
 4442              	.LASF103:
 4443 0037 72696768 		.ascii	"rightStatusFlag\000"
 4443      74537461 
 4443      74757346 
 4443      6C616700 
 4444              	.LASF97:
 4445 0047 7475726E 		.ascii	"turnStartedFlag\000"
 4445      53746172 
 4445      74656446 
 4445      6C616700 
 4446              	.LASF79:
 4447 0057 626C6F63 		.ascii	"blocksize\000"
 4447      6B73697A 
 4447      6500
 4448              	.LASF134:
 4449 0061 62756666 		.ascii	"buffer\000"
 4449      657200
 4450              	.LASF8:
 4451 0068 756E7369 		.ascii	"unsigned int\000"
 4451      676E6564 
 4451      20696E74 
 4451      00
 4452              	.LASF12:
 4453 0075 5F5F696E 		.ascii	"__int32_t\000"
 4453      7433325F 
 4453      7400
 4454              	.LASF18:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 92


 4455 007f 696E7431 		.ascii	"int16\000"
 4455      3600
 4456              	.LASF125:
 4457 0085 73797374 		.ascii	"system_state\000"
 4457      656D5F73 
 4457      74617465 
 4457      00
 4458              	.LASF94:
 4459 0092 6E657874 		.ascii	"nextInstruction\000"
 4459      496E7374 
 4459      72756374 
 4459      696F6E00 
 4460              	.LASF148:
 4461 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4461      43313120 
 4461      352E342E 
 4461      31203230 
 4461      31363036 
 4462 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4462      20726576 
 4462      6973696F 
 4462      6E203233 
 4462      37373135 
 4463 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4463      66756E63 
 4463      74696F6E 
 4463      2D736563 
 4463      74696F6E 
 4464              	.LASF47:
 4465 0130 466F7277 		.ascii	"ForwardUntilTarget\000"
 4465      61726455 
 4465      6E74696C 
 4465      54617267 
 4465      657400
 4466              	.LASF55:
 4467 0143 65787065 		.ascii	"expectedOrientation\000"
 4467      63746564 
 4467      4F726965 
 4467      6E746174 
 4467      696F6E00 
 4468              	.LASF76:
 4469 0157 5370696E 		.ascii	"SpinCourseCorrection\000"
 4469      436F7572 
 4469      7365436F 
 4469      72726563 
 4469      74696F6E 
 4470              	.LASF71:
 4471 016c 53365F44 		.ascii	"S6_DETECTED\000"
 4471      45544543 
 4471      54454400 
 4472              	.LASF133:
 4473 0178 746F7461 		.ascii	"totalDistance\000"
 4473      6C446973 
 4473      74616E63 
 4473      6500
 4474              	.LASF34:
 4475 0186 67325F78 		.ascii	"g2_xpos\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 93


 4475      706F7300 
 4476              	.LASF99:
 4477 018e 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4477      61726455 
 4477      6E74696C 
 4477      54617267 
 4477      65745374 
 4478              	.LASF92:
 4479 01ac 6E756D53 		.ascii	"numSteps\000"
 4479      74657073 
 4479      00
 4480              	.LASF86:
 4481 01b5 74617267 		.ascii	"targetRow\000"
 4481      6574526F 
 4481      7700
 4482              	.LASF78:
 4483 01bf 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 4483      6F76656D 
 4483      656E7441 
 4483      63636F72 
 4483      64696E67 
 4484              	.LASF120:
 4485 01e1 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4485      5F72665F 
 4485      7472616E 
 4485      736D6973 
 4485      73696F6E 
 4486              	.LASF75:
 4487 01fd 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4487      61726443 
 4487      6F757273 
 4487      65436F72 
 4487      72656374 
 4488              	.LASF129:
 4489 0215 63757272 		.ascii	"currentRobotOrientation\000"
 4489      656E7452 
 4489      6F626F74 
 4489      4F726965 
 4489      6E746174 
 4490              	.LASF89:
 4491 022d 52657365 		.ascii	"ResetSensorFlags\000"
 4491      7453656E 
 4491      736F7246 
 4491      6C616773 
 4491      00
 4492              	.LASF37:
 4493 023e 67325F64 		.ascii	"g2_direction\000"
 4493      69726563 
 4493      74696F6E 
 4493      00
 4494              	.LASF87:
 4495 024b 74617267 		.ascii	"targetCol\000"
 4495      6574436F 
 4495      6C00
 4496              	.LASF135:
 4497 0255 71756164 		.ascii	"quadDec2Count\000"
 4497      44656332 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 94


 4497      436F756E 
 4497      7400
 4498              	.LASF19:
 4499 0263 666C6F61 		.ascii	"float\000"
 4499      7400
 4500              	.LASF80:
 4501 0269 63757272 		.ascii	"currentInstructionDirection\000"
 4501      656E7449 
 4501      6E737472 
 4501      75637469 
 4501      6F6E4469 
 4502              	.LASF124:
 4503 0285 75736242 		.ascii	"usbBuffer\000"
 4503      75666665 
 4503      7200
 4504              	.LASF83:
 4505 028f 636F756E 		.ascii	"count\000"
 4505      7400
 4506              	.LASF22:
 4507 0295 696E6465 		.ascii	"index\000"
 4507      7800
 4508              	.LASF7:
 4509 029b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4509      206C6F6E 
 4509      6720756E 
 4509      7369676E 
 4509      65642069 
 4510              	.LASF51:
 4511 02b2 496E7374 		.ascii	"Instruction\000"
 4511      72756374 
 4511      696F6E00 
 4512              	.LASF117:
 4513 02be 666C6167 		.ascii	"flag_packet\000"
 4513      5F706163 
 4513      6B657400 
 4514              	.LASF95:
 4515 02ca 53657452 		.ascii	"SetRobotMovement\000"
 4515      6F626F74 
 4515      4D6F7665 
 4515      6D656E74 
 4515      00
 4516              	.LASF72:
 4517 02db 54494D45 		.ascii	"TIMER_FINISH\000"
 4517      525F4649 
 4517      4E495348 
 4517      00
 4518              	.LASF137:
 4519 02e8 6B656570 		.ascii	"keepLedOn\000"
 4519      4C65644F 
 4519      6E00
 4520              	.LASF39:
 4521 02f2 4C656674 		.ascii	"Left\000"
 4521      00
 4522              	.LASF113:
 4523 02f7 666C6167 		.ascii	"flag_ts_update\000"
 4523      5F74735F 
 4523      75706461 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 95


 4523      746500
 4524              	.LASF112:
 4525 0306 666C6167 		.ascii	"flag_ts_enc\000"
 4525      5F74735F 
 4525      656E6300 
 4526              	.LASF102:
 4527 0312 6C656674 		.ascii	"leftStatusFlag\000"
 4527      53746174 
 4527      7573466C 
 4527      616700
 4528              	.LASF81:
 4529 0321 71756164 		.ascii	"quadCountToRPM\000"
 4529      436F756E 
 4529      74546F52 
 4529      504D00
 4530              	.LASF84:
 4531 0330 626C6F63 		.ascii	"blockSize\000"
 4531      6B53697A 
 4531      6500
 4532              	.LASF146:
 4533 033a 69676E6F 		.ascii	"ignoreSensor\000"
 4533      72655365 
 4533      6E736F72 
 4533      00
 4534              	.LASF48:
 4535 0347 53746F70 		.ascii	"StopAtTarget\000"
 4535      41745461 
 4535      72676574 
 4535      00
 4536              	.LASF64:
 4537 0354 77616974 		.ascii	"waitForTurn\000"
 4537      466F7254 
 4537      75726E00 
 4538              	.LASF24:
 4539 0360 726F626F 		.ascii	"robot_ypos\000"
 4539      745F7970 
 4539      6F7300
 4540              	.LASF111:
 4541 036b 74735F64 		.ascii	"ts_display\000"
 4541      6973706C 
 4541      617900
 4542              	.LASF11:
 4543 0376 63686172 		.ascii	"char\000"
 4543      00
 4544              	.LASF150:
 4545 037b 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4545      6F63756D 
 4545      656E7473 
 4545      5C476974 
 4545      4875625C 
 4546 03aa 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4546      635F636F 
 4546      64655F62 
 4546      6173655C 
 4546      43533330 
 4547              	.LASF28:
 4548 03cc 67305F73 		.ascii	"g0_speed\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 96


 4548      70656564 
 4548      00
 4549              	.LASF93:
 4550 03d5 696E7374 		.ascii	"instructionList\000"
 4550      72756374 
 4550      696F6E4C 
 4550      69737400 
 4551              	.LASF96:
 4552 03e5 696E7374 		.ascii	"instructionIndex\000"
 4552      72756374 
 4552      696F6E49 
 4552      6E646578 
 4552      00
 4553              	.LASF15:
 4554 03f6 75696E74 		.ascii	"uint16\000"
 4554      313600
 4555              	.LASF17:
 4556 03fd 696E7438 		.ascii	"int8\000"
 4556      00
 4557              	.LASF141:
 4558 0402 78426C6F 		.ascii	"xBlocksize\000"
 4558      636B7369 
 4558      7A6500
 4559              	.LASF33:
 4560 040d 67315F64 		.ascii	"g1_direction\000"
 4560      69726563 
 4560      74696F6E 
 4560      00
 4561              	.LASF68:
 4562 041a 53335F44 		.ascii	"S3_DETECTED\000"
 4562      45544543 
 4562      54454400 
 4563              	.LASF77:
 4564 0426 73706565 		.ascii	"speedTimer\000"
 4564      6454696D 
 4564      657200
 4565              	.LASF88:
 4566 0431 70617468 		.ascii	"pathCount\000"
 4566      436F756E 
 4566      7400
 4567              	.LASF98:
 4568 043b 7475726E 		.ascii	"turnFinishedFlag\000"
 4568      46696E69 
 4568      73686564 
 4568      466C6167 
 4568      00
 4569              	.LASF44:
 4570 044c 77616974 		.ascii	"waitForLeftTurn\000"
 4570      466F724C 
 4570      65667454 
 4570      75726E00 
 4571              	.LASF6:
 4572 045c 6C6F6E67 		.ascii	"long long int\000"
 4572      206C6F6E 
 4572      6720696E 
 4572      7400
 4573              	.LASF30:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 97


 4574 046a 67315F78 		.ascii	"g1_xpos\000"
 4574      706F7300 
 4575              	.LASF140:
 4576 0472 626C6F63 		.ascii	"blockSizeTotal\000"
 4576      6B53697A 
 4576      65546F74 
 4576      616C00
 4577              	.LASF130:
 4578 0481 70726576 		.ascii	"previousOrientation\000"
 4578      696F7573 
 4578      4F726965 
 4578      6E746174 
 4578      696F6E00 
 4579              	.LASF46:
 4580 0495 75547572 		.ascii	"uTurn\000"
 4580      6E00
 4581              	.LASF104:
 4582 049b 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4582      436F7572 
 4582      7365436F 
 4582      72726563 
 4582      74696F6E 
 4583              	.LASF74:
 4584 04b7 6E657744 		.ascii	"newDistance\000"
 4584      69737461 
 4584      6E636500 
 4585              	.LASF36:
 4586 04c3 67325F73 		.ascii	"g2_speed\000"
 4586      70656564 
 4586      00
 4587              	.LASF27:
 4588 04cc 67305F79 		.ascii	"g0_ypos\000"
 4588      706F7300 
 4589              	.LASF126:
 4590 04d4 666F6F64 		.ascii	"food_list\000"
 4590      5F6C6973 
 4590      7400
 4591              	.LASF59:
 4592 04de 5475726E 		.ascii	"TurnLeft\000"
 4592      4C656674 
 4592      00
 4593              	.LASF110:
 4594 04e7 74735F73 		.ascii	"ts_speed\000"
 4594      70656564 
 4594      00
 4595              	.LASF139:
 4596 04f0 6A756E63 		.ascii	"junctionConfiguration\000"
 4596      74696F6E 
 4596      436F6E66 
 4596      69677572 
 4596      6174696F 
 4597              	.LASF63:
 4598 0506 556E6B6E 		.ascii	"Unknown\000"
 4598      6F776E00 
 4599              	.LASF16:
 4600 050e 75696E74 		.ascii	"uint32\000"
 4600      333200
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 98


 4601              	.LASF45:
 4602 0515 77616974 		.ascii	"waitForRightTurn\000"
 4602      466F7252 
 4602      69676874 
 4602      5475726E 
 4602      00
 4603              	.LASF58:
 4604 0526 5475726E 		.ascii	"TurnRight\000"
 4604      52696768 
 4604      7400
 4605              	.LASF50:
 4606 0530 64617461 		.ascii	"data_main\000"
 4606      5F6D6169 
 4606      6E00
 4607              	.LASF21:
 4608 053a 72737369 		.ascii	"rssi\000"
 4608      00
 4609              	.LASF29:
 4610 053f 67305F64 		.ascii	"g0_direction\000"
 4610      69726563 
 4610      74696F6E 
 4610      00
 4611              	.LASF128:
 4612 054c 70726576 		.ascii	"previousDirection\000"
 4612      696F7573 
 4612      44697265 
 4612      6374696F 
 4612      6E00
 4613              	.LASF67:
 4614 055e 5370696E 		.ascii	"Spin180\000"
 4614      31383000 
 4615              	.LASF9:
 4616 0566 6C6F6E67 		.ascii	"long double\000"
 4616      20646F75 
 4616      626C6500 
 4617              	.LASF114:
 4618 0572 666C6167 		.ascii	"flag_ts_speed\000"
 4618      5F74735F 
 4618      73706565 
 4618      6400
 4619              	.LASF119:
 4620 0580 64617461 		.ascii	"dataready_flag\000"
 4620      72656164 
 4620      795F666C 
 4620      616700
 4621              	.LASF116:
 4622 058f 666C6167 		.ascii	"flag_rx\000"
 4622      5F727800 
 4623              	.LASF142:
 4624 0597 79426C6F 		.ascii	"yBlocksize\000"
 4624      636B7369 
 4624      7A6500
 4625              	.LASF2:
 4626 05a2 73686F72 		.ascii	"short int\000"
 4626      7420696E 
 4626      7400
 4627              	.LASF69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 99


 4628 05ac 53345F44 		.ascii	"S4_DETECTED\000"
 4628      45544543 
 4628      54454400 
 4629              	.LASF4:
 4630 05b8 6C6F6E67 		.ascii	"long int\000"
 4630      20696E74 
 4630      00
 4631              	.LASF107:
 4632 05c1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4632      52784275 
 4632      66666572 
 4632      00
 4633              	.LASF109:
 4634 05ce 74735F75 		.ascii	"ts_update\000"
 4634      70646174 
 4634      6500
 4635              	.LASF57:
 4636 05d8 466F7277 		.ascii	"Forward\000"
 4636      61726400 
 4637              	.LASF132:
 4638 05e0 746F7461 		.ascii	"totalMilliseconds\000"
 4638      6C4D696C 
 4638      6C697365 
 4638      636F6E64 
 4638      7300
 4639              	.LASF35:
 4640 05f2 67325F79 		.ascii	"g2_ypos\000"
 4640      706F7300 
 4641              	.LASF90:
 4642 05fa 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4642      546F4E65 
 4642      7874496E 
 4642      73747275 
 4642      6374696F 
 4643              	.LASF41:
 4644 0610 4F726965 		.ascii	"OrientationState\000"
 4644      6E746174 
 4644      696F6E53 
 4644      74617465 
 4644      00
 4645              	.LASF38:
 4646 0621 446F776E 		.ascii	"Down\000"
 4646      00
 4647              	.LASF40:
 4648 0626 52696768 		.ascii	"Right\000"
 4648      7400
 4649              	.LASF31:
 4650 062c 67315F79 		.ascii	"g1_ypos\000"
 4650      706F7300 
 4651              	.LASF127:
 4652 0634 63757272 		.ascii	"currentDirection\000"
 4652      656E7444 
 4652      69726563 
 4652      74696F6E 
 4652      00
 4653              	.LASF100:
 4654 0645 75547572 		.ascii	"uTurnStartedFlag\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 100


 4654      6E537461 
 4654      72746564 
 4654      466C6167 
 4654      00
 4655              	.LASF147:
 4656 0656 6C617374 		.ascii	"lastDirectionAfter180\000"
 4656      44697265 
 4656      6374696F 
 4656      6E416674 
 4656      65723138 
 4657              	.LASF10:
 4658 066c 73697A65 		.ascii	"sizetype\000"
 4658      74797065 
 4658      00
 4659              	.LASF5:
 4660 0675 6C6F6E67 		.ascii	"long unsigned int\000"
 4660      20756E73 
 4660      69676E65 
 4660      6420696E 
 4660      7400
 4661              	.LASF138:
 4662 0687 73746F70 		.ascii	"stopBuffer\000"
 4662      42756666 
 4662      657200
 4663              	.LASF101:
 4664 0692 75547572 		.ascii	"uTurnFinishedFlag\000"
 4664      6E46696E 
 4664      69736865 
 4664      64466C61 
 4664      6700
 4665              	.LASF13:
 4666 06a4 696E7433 		.ascii	"int32_t\000"
 4666      325F7400 
 4667              	.LASF23:
 4668 06ac 726F626F 		.ascii	"robot_xpos\000"
 4668      745F7870 
 4668      6F7300
 4669              	.LASF123:
 4670 06b7 656E7472 		.ascii	"entry\000"
 4670      7900
 4671              	.LASF56:
 4672 06bd 526F626F 		.ascii	"RobotMovement\000"
 4672      744D6F76 
 4672      656D656E 
 4672      7400
 4673              	.LASF1:
 4674 06cb 756E7369 		.ascii	"unsigned char\000"
 4674      676E6564 
 4674      20636861 
 4674      7200
 4675              	.LASF145:
 4676 06d9 73746F70 		.ascii	"stoppedAfterTurn\000"
 4676      70656441 
 4676      66746572 
 4676      5475726E 
 4676      00
 4677              	.LASF122:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 101


 4678 06ea 6C696E65 		.ascii	"line\000"
 4678      00
 4679              	.LASF82:
 4680 06ef 43616C63 		.ascii	"CalculateDistanceToTravel\000"
 4680      756C6174 
 4680      65446973 
 4680      74616E63 
 4680      65546F54 
 4681              	.LASF61:
 4682 0709 41646A75 		.ascii	"AdjustToTheRight\000"
 4682      7374546F 
 4682      54686552 
 4682      69676874 
 4682      00
 4683              	.LASF62:
 4684 071a 53746F70 		.ascii	"Stop\000"
 4684      00
 4685              	.LASF91:
 4686 071f 47657449 		.ascii	"GetInstructionAtIndex\000"
 4686      6E737472 
 4686      75637469 
 4686      6F6E4174 
 4686      496E6465 
 4687              	.LASF108:
 4688 0735 74735F65 		.ascii	"ts_enc\000"
 4688      6E6300
 4689              	.LASF115:
 4690 073c 666C6167 		.ascii	"flag_ts_display\000"
 4690      5F74735F 
 4690      64697370 
 4690      6C617900 
 4691              	.LASF105:
 4692 074c 63757272 		.ascii	"currentIgnoreL\000"
 4692      656E7449 
 4692      676E6F72 
 4692      654C00
 4693              	.LASF106:
 4694 075b 63757272 		.ascii	"currentIgnoreR\000"
 4694      656E7449 
 4694      676E6F72 
 4694      655200
 4695              	.LASF49:
 4696 076a 536B6970 		.ascii	"Skip\000"
 4696      00
 4697              	.LASF121:
 4698 076f 64697370 		.ascii	"displaystring\000"
 4698      6C617973 
 4698      7472696E 
 4698      6700
 4699              	.LASF43:
 4700 077d 476F466F 		.ascii	"GoForward\000"
 4700      72776172 
 4700      6400
 4701              	.LASF70:
 4702 0787 53355F44 		.ascii	"S5_DETECTED\000"
 4702      45544543 
 4702      54454400 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 102


 4703              	.LASF0:
 4704 0793 7369676E 		.ascii	"signed char\000"
 4704      65642063 
 4704      68617200 
 4705              	.LASF143:
 4706 079f 63757272 		.ascii	"currentRow\000"
 4706      656E7452 
 4706      6F7700
 4707              	.LASF3:
 4708 07aa 73686F72 		.ascii	"short unsigned int\000"
 4708      7420756E 
 4708      7369676E 
 4708      65642069 
 4708      6E7400
 4709              	.LASF25:
 4710 07bd 726F626F 		.ascii	"robot_orientation\000"
 4710      745F6F72 
 4710      69656E74 
 4710      6174696F 
 4710      6E00
 4711              	.LASF73:
 4712 07cf 6D61696E 		.ascii	"main\000"
 4712      00
 4713              	.LASF131:
 4714 07d4 63757272 		.ascii	"currentInstruction\000"
 4714      656E7449 
 4714      6E737472 
 4714      75637469 
 4714      6F6E00
 4715              	.LASF60:
 4716 07e7 41646A75 		.ascii	"AdjustToTheLeft\000"
 4716      7374546F 
 4716      5468654C 
 4716      65667400 
 4717              	.LASF66:
 4718 07f7 4261636B 		.ascii	"Backward\000"
 4718      77617264 
 4718      00
 4719              	.LASF14:
 4720 0800 75696E74 		.ascii	"uint8\000"
 4720      3800
 4721              	.LASF20:
 4722 0806 646F7562 		.ascii	"double\000"
 4722      6C6500
 4723              	.LASF144:
 4724 080d 63757272 		.ascii	"currentCol\000"
 4724      656E7443 
 4724      6F6C00
 4725              	.LASF85:
 4726 0818 746F7461 		.ascii	"totalBlockSize\000"
 4726      6C426C6F 
 4726      636B5369 
 4726      7A6500
 4727              	.LASF26:
 4728 0827 67305F78 		.ascii	"g0_xpos\000"
 4728      706F7300 
 4729              	.LASF136:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccR5yvAI.s 			page 103


 4730 082f 74696D65 		.ascii	"timerInt\000"
 4730      72496E74 
 4730      00
 4731              	.LASF118:
 4732 0838 666C6167 		.ascii	"flag_KB_string\000"
 4732      5F4B425F 
 4732      73747269 
 4732      6E6700
 4733              	.LASF32:
 4734 0847 67315F73 		.ascii	"g1_speed\000"
 4734      70656564 
 4734      00
 4735              	.LASF53:
 4736 0850 69676E6F 		.ascii	"ignoreL\000"
 4736      72654C00 
 4737              	.LASF54:
 4738 0858 69676E6F 		.ascii	"ignoreR\000"
 4738      72655200 
 4739              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
