ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	previousInstruction,20,4
 122              		.comm	numSteps,4,4
 123              		.comm	instructionList,4,4
 124              		.bss
 125 0013 00       		.align	2
 126              	instructionIndex:
 127 0014 00000000 		.space	4
 128              		.comm	s3,1,1
 129              		.comm	s4,1,1
 130              		.comm	s5,1,1
 131              		.global	s6
 132              		.type	s6, %object
 133              		.size	s6, 1
 134              	s6:
 135 0018 00       		.space	1
 136              		.global	totalMilliseconds
 137 0019 000000   		.align	2
 138              		.type	totalMilliseconds, %object
 139              		.size	totalMilliseconds, 4
 140              	totalMilliseconds:
 141 001c 00000000 		.space	4
 142              		.global	totalDistance
 143              		.align	2
 144              		.type	totalDistance, %object
 145              		.size	totalDistance, 4
 146              	totalDistance:
 147 0020 00000000 		.space	4
 148              		.comm	buffer,69,4
 149              		.global	quadDec2Count
 150              		.align	2
 151              		.type	quadDec2Count, %object
 152              		.size	quadDec2Count, 4
 153              	quadDec2Count:
 154 0024 00000000 		.space	4
 155              		.global	timerInt
 156              		.align	2
 157              		.type	timerInt, %object
 158              		.size	timerInt, 4
 159              	timerInt:
 160 0028 00000000 		.space	4
 161              		.global	keepLedOn
 162              		.align	2
 163              		.type	keepLedOn, %object
 164              		.size	keepLedOn, 4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 4


 165              	keepLedOn:
 166 002c 00000000 		.space	4
 167              		.global	stopBuffer
 168              		.align	2
 169              		.type	stopBuffer, %object
 170              		.size	stopBuffer, 4
 171              	stopBuffer:
 172 0030 00000000 		.space	4
 173              		.global	forwardBuffer
 174              		.align	1
 175              		.type	forwardBuffer, %object
 176              		.size	forwardBuffer, 2
 177              	forwardBuffer:
 178 0034 0000     		.space	2
 179              	turnStartedFlag:
 180 0036 00       		.space	1
 181              	turnFinishedFlag:
 182 0037 00       		.space	1
 183              	forwardUntilTargetStartedFlag:
 184 0038 00       		.space	1
 185              	uTurnStartedFlag:
 186 0039 00       		.space	1
 187              	uTurnFinishedFlag:
 188 003a 00       		.space	1
 189              	leftStatusFlag:
 190 003b 00       		.space	1
 191              	rightStatusFlag:
 192 003c 00       		.space	1
 193              	spinCourseCorrectionStarted:
 194 003d 00       		.space	1
 195              	currentIgnoreL:
 196 003e 00       		.space	1
 197              	currentIgnoreR:
 198 003f 00       		.space	1
 199              	totalLineCount:
 200 0040 00       		.space	1
 201              	lineCount:
 202 0041 00       		.space	1
 203              	onLineFlag:
 204 0042 00       		.space	1
 205              	tooEarlyFlag:
 206 0043 00       		.space	1
 207              	tooLateFlag:
 208 0044 00       		.space	1
 209              	dontOverwriteRightIgnore:
 210 0045 00       		.space	1
 211              	dontOverwriteLeftIgnore:
 212 0046 00       		.space	1
 213              		.global	junctionConfiguration
 214 0047 00       		.align	2
 215              		.type	junctionConfiguration, %object
 216              		.size	junctionConfiguration, 4
 217              	junctionConfiguration:
 218 0048 00000000 		.space	4
 219              		.global	currentFoodListIndex
 220              		.type	currentFoodListIndex, %object
 221              		.size	currentFoodListIndex, 1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 5


 222              	currentFoodListIndex:
 223 004c 00       		.space	1
 224              		.global	blockSizeTotal
 225 004d 000000   		.align	2
 226              		.type	blockSizeTotal, %object
 227              		.size	blockSizeTotal, 4
 228              	blockSizeTotal:
 229 0050 00000000 		.space	4
 230              		.global	__aeabi_i2d
 231              		.global	__aeabi_dmul
 232              		.global	__aeabi_ddiv
 233              		.global	__aeabi_d2f
 234              		.global	__aeabi_fadd
 235              		.section	.text.speedTimer,"ax",%progbits
 236              		.align	2
 237              		.global	speedTimer
 238              		.thumb
 239              		.thumb_func
 240              		.type	speedTimer, %function
 241              	speedTimer:
 242              	.LFB64:
 243              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** Instruction previousInstruction;
  30:main.c        **** int numSteps;
  31:main.c        **** void traversePath(int numSteps, Instruction instructionList[]);
  32:main.c        **** Instruction * instructionList; // pointer to array
  33:main.c        **** volatile static uint32 instructionIndex = 0;
  34:main.c        **** Instruction GetInstructionAtIndex();
  35:main.c        **** float CalculateDistanceToTravel(float blockSize);
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 6


  36:main.c        **** void MoveToNextInstruction();
  37:main.c        **** // ----------------------------------------
  38:main.c        **** uint8 s3, s4, s5, s6 = 0;
  39:main.c        **** //* ========================================
  40:main.c        **** // Calculating Distance
  41:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  42:main.c        **** 
  43:main.c        **** uint32 totalMilliseconds = 0;
  44:main.c        **** float totalDistance = 0; // in mm
  45:main.c        **** //* ========================================
  46:main.c        **** char buffer[69];
  47:main.c        **** int quadDec2Count = 0;
  48:main.c        **** int timerInt = 0;
  49:main.c        **** int keepLedOn = 0;
  50:main.c        **** // ========================================= FLAGS
  51:main.c        **** uint32 stopBuffer = 0;
  52:main.c        **** uint16 forwardBuffer = 0;
  53:main.c        **** volatile static uint8 turnStartedFlag = 0;
  54:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  55:main.c        **** 
  56:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  57:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  58:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  59:main.c        **** 
  60:main.c        **** volatile static uint8 leftStatusFlag = 0;
  61:main.c        **** volatile static uint8 rightStatusFlag = 0;
  62:main.c        **** 
  63:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  64:main.c        **** volatile static uint8 currentIgnoreL = 0;
  65:main.c        **** volatile static uint8 currentIgnoreR = 0;
  66:main.c        **** 
  67:main.c        **** void RotateClockwise180Degrees();
  68:main.c        **** 
  69:main.c        **** volatile static uint8 totalLineCount = 0;
  70:main.c        **** volatile static uint8 lineCount = 0;
  71:main.c        **** volatile static uint8 onLineFlag = 0;
  72:main.c        **** 
  73:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  74:main.c        **** volatile static uint8 tooLateFlag = 0;
  75:main.c        **** 
  76:main.c        **** volatile static uint8 dontOverwriteRightIgnore = 0;
  77:main.c        **** volatile static uint8 dontOverwriteLeftIgnore = 0;
  78:main.c        **** 
  79:main.c        **** uint8 junctionConfiguration[4] = {0};
  80:main.c        **** uint8 currentFoodListIndex = 0;
  81:main.c        **** 
  82:main.c        **** float blockSizeTotal = 0;
  83:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  84:main.c        **** 
  85:main.c        **** CY_ISR (speedTimer) {
 244              		.loc 1 85 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 90B5     		push	{r4, r7, lr}
 249              		.cfi_def_cfa_offset 12
 250              		.cfi_offset 4, -12
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 7


 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 24
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  86:main.c        ****     timerInt = 1;
 257              		.loc 1 86 0
 258 0006 344B     		ldr	r3, .L4+16
 259 0008 0122     		movs	r2, #1
 260 000a 1A60     		str	r2, [r3]
  87:main.c        ****     //quadDec_M1 used for turning macros
  88:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 261              		.loc 1 88 0
 262 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 263 0010 0346     		mov	r3, r0
 264 0012 1A46     		mov	r2, r3
 265 0014 314B     		ldr	r3, .L4+20
 266 0016 1A60     		str	r2, [r3]
  89:main.c        ****     
  90:main.c        ****     if ((currentDirection == Forward || 
 267              		.loc 1 90 0
 268 0018 314B     		ldr	r3, .L4+24
 269 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 001c 002B     		cmp	r3, #0
 271 001e 13D0     		beq	.L2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 272              		.loc 1 91 0 discriminator 1
 273 0020 2F4B     		ldr	r3, .L4+24
 274 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:main.c        ****         currentDirection == ForwardAfterTurn ||
 275              		.loc 1 90 0 discriminator 1
 276 0024 082B     		cmp	r3, #8
 277 0026 0FD0     		beq	.L2
  92:main.c        ****         currentDirection == waitForTurn || 
 278              		.loc 1 92 0
 279 0028 2D4B     		ldr	r3, .L4+24
 280 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:main.c        ****         currentDirection == ForwardAfterTurn ||
 281              		.loc 1 91 0
 282 002c 072B     		cmp	r3, #7
 283 002e 0BD0     		beq	.L2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 284              		.loc 1 93 0
 285 0030 2B4B     		ldr	r3, .L4+24
 286 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****         currentDirection == waitForTurn || 
 287              		.loc 1 92 0
 288 0034 032B     		cmp	r3, #3
 289 0036 07D0     		beq	.L2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 290              		.loc 1 94 0
 291 0038 294B     		ldr	r3, .L4+24
 292 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93:main.c        ****         currentDirection == AdjustToTheLeft ||
 293              		.loc 1 93 0
 294 003c 042B     		cmp	r3, #4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 8


 295 003e 03D0     		beq	.L2
  95:main.c        ****         currentDirection == Backward) &&
 296              		.loc 1 95 0
 297 0040 274B     		ldr	r3, .L4+24
 298 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94:main.c        ****         currentDirection == AdjustToTheRight ||
 299              		.loc 1 94 0
 300 0044 092B     		cmp	r3, #9
 301 0046 34D1     		bne	.L3
 302              	.L2:
  96:main.c        ****         quadDec2Count != 0) {
 303              		.loc 1 96 0
 304 0048 244B     		ldr	r3, .L4+20
 305 004a 1B68     		ldr	r3, [r3]
  95:main.c        ****         currentDirection == Backward) &&
 306              		.loc 1 95 0
 307 004c 002B     		cmp	r3, #0
 308 004e 30D0     		beq	.L3
 309              	.LBB2:
  97:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  98:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 310              		.loc 1 98 0
 311 0050 224B     		ldr	r3, .L4+20
 312 0052 1B68     		ldr	r3, [r3]
 313 0054 002B     		cmp	r3, #0
 314 0056 B8BF     		it	lt
 315 0058 5B42     		rsblt	r3, r3, #0
 316 005a 1846     		mov	r0, r3
 317 005c FFF7FEFF 		bl	__aeabi_i2d
 318 0060 19A3     		adr	r3, .L4
 319 0062 D3E90023 		ldrd	r2, [r3]
 320 0066 FFF7FEFF 		bl	__aeabi_dmul
 321 006a 0346     		mov	r3, r0
 322 006c 0C46     		mov	r4, r1
 323 006e 1846     		mov	r0, r3
 324 0070 2146     		mov	r1, r4
 325 0072 17A3     		adr	r3, .L4+8
 326 0074 D3E90023 		ldrd	r2, [r3]
 327 0078 FFF7FEFF 		bl	__aeabi_dmul
 328 007c 0346     		mov	r3, r0
 329 007e 0C46     		mov	r4, r1
 330 0080 1846     		mov	r0, r3
 331 0082 2146     		mov	r1, r4
 332 0084 4FF00002 		mov	r2, #0
 333 0088 164B     		ldr	r3, .L4+28
 334 008a FFF7FEFF 		bl	__aeabi_ddiv
 335 008e 0346     		mov	r3, r0
 336 0090 0C46     		mov	r4, r1
 337 0092 1846     		mov	r0, r3
 338 0094 2146     		mov	r1, r4
 339 0096 FFF7FEFF 		bl	__aeabi_d2f
 340 009a 0346     		mov	r3, r0
 341 009c 7B60     		str	r3, [r7, #4]	@ float
  99:main.c        ****         
 100:main.c        ****         totalDistance = totalDistance + newDistance;
 342              		.loc 1 100 0
 343 009e 124B     		ldr	r3, .L4+32
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 9


 344 00a0 1B68     		ldr	r3, [r3]	@ float
 345 00a2 7968     		ldr	r1, [r7, #4]	@ float
 346 00a4 1846     		mov	r0, r3
 347 00a6 FFF7FEFF 		bl	__aeabi_fadd
 348 00aa 0346     		mov	r3, r0
 349 00ac 1A46     		mov	r2, r3
 350 00ae 0E4B     		ldr	r3, .L4+32
 351 00b0 1A60     		str	r2, [r3]	@ float
 352              	.L3:
 353              	.LBE2:
 101:main.c        ****     }
 102:main.c        ****     
 103:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 354              		.loc 1 103 0
 355 00b2 0020     		movs	r0, #0
 356 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 104:main.c        ****     QuadDec_M2_Start(); // restart counter
 357              		.loc 1 104 0
 358 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        ****     
 106:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 359              		.loc 1 106 0
 360 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 107:main.c        **** }
 361              		.loc 1 107 0
 362 00c0 00BF     		nop
 363 00c2 0C37     		adds	r7, r7, #12
 364              		.cfi_def_cfa_offset 12
 365 00c4 BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 00c6 90BD     		pop	{r4, r7, pc}
 369              	.L5:
 370              		.align	3
 371              	.L4:
 372 00c8 182D4454 		.word	1413754136
 373 00cc FB210940 		.word	1074340347
 374 00d0 00000000 		.word	0
 375 00d4 00205040 		.word	1078992896
 376 00d8 00000000 		.word	timerInt
 377 00dc 00000000 		.word	quadDec2Count
 378 00e0 00000000 		.word	currentDirection
 379 00e4 00806C40 		.word	1080852480
 380 00e8 00000000 		.word	totalDistance
 381              		.cfi_endproc
 382              	.LFE64:
 383              		.size	speedTimer, .-speedTimer
 384              		.section	.text.S3_DETECTED,"ax",%progbits
 385              		.align	2
 386              		.global	S3_DETECTED
 387              		.thumb
 388              		.thumb_func
 389              		.type	S3_DETECTED, %function
 390              	S3_DETECTED:
 391              	.LFB65:
 108:main.c        **** 
 109:main.c        **** CY_ISR(S3_DETECTED) {
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 10


 392              		.loc 1 109 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 110:main.c        ****     // Sensor has detected WHITE
 111:main.c        ****     s3 = 1; // , Black = 0, White = 1
 402              		.loc 1 111 0
 403 0004 034B     		ldr	r3, .L7
 404 0006 0122     		movs	r2, #1
 405 0008 1A70     		strb	r2, [r3]
 112:main.c        ****     //LED_Write(1u);
 113:main.c        **** }
 406              		.loc 1 113 0
 407 000a 00BF     		nop
 408 000c BD46     		mov	sp, r7
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 000e 80BC     		pop	{r7}
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0010 7047     		bx	lr
 415              	.L8:
 416 0012 00BF     		.align	2
 417              	.L7:
 418 0014 00000000 		.word	s3
 419              		.cfi_endproc
 420              	.LFE65:
 421              		.size	S3_DETECTED, .-S3_DETECTED
 422              		.section	.text.S4_DETECTED,"ax",%progbits
 423              		.align	2
 424              		.global	S4_DETECTED
 425              		.thumb
 426              		.thumb_func
 427              		.type	S4_DETECTED, %function
 428              	S4_DETECTED:
 429              	.LFB66:
 114:main.c        **** 
 115:main.c        **** CY_ISR(S4_DETECTED) {
 430              		.loc 1 115 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 116:main.c        ****     // Sensor has detected WHITE
 117:main.c        ****     s4 = 1; // , Black = 0, White = 1
 440              		.loc 1 117 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 11


 441 0004 034B     		ldr	r3, .L10
 442 0006 0122     		movs	r2, #1
 443 0008 1A70     		strb	r2, [r3]
 118:main.c        ****     //LED_Write(1u);
 119:main.c        **** }
 444              		.loc 1 119 0
 445 000a 00BF     		nop
 446 000c BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 000e 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0010 7047     		bx	lr
 453              	.L11:
 454 0012 00BF     		.align	2
 455              	.L10:
 456 0014 00000000 		.word	s4
 457              		.cfi_endproc
 458              	.LFE66:
 459              		.size	S4_DETECTED, .-S4_DETECTED
 460              		.section	.text.S5_DETECTED,"ax",%progbits
 461              		.align	2
 462              		.global	S5_DETECTED
 463              		.thumb
 464              		.thumb_func
 465              		.type	S5_DETECTED, %function
 466              	S5_DETECTED:
 467              	.LFB67:
 120:main.c        **** 
 121:main.c        **** CY_ISR(S5_DETECTED) {
 468              		.loc 1 121 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 122:main.c        ****     // Sensor has detected WHITE
 123:main.c        ****     s5 = 1; // , Black = 0, White = 1
 478              		.loc 1 123 0
 479 0004 034B     		ldr	r3, .L13
 480 0006 0122     		movs	r2, #1
 481 0008 1A70     		strb	r2, [r3]
 124:main.c        ****     //LED_Write(1u);
 125:main.c        **** }
 482              		.loc 1 125 0
 483 000a 00BF     		nop
 484 000c BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 000e 80BC     		pop	{r7}
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 12


 490 0010 7047     		bx	lr
 491              	.L14:
 492 0012 00BF     		.align	2
 493              	.L13:
 494 0014 00000000 		.word	s5
 495              		.cfi_endproc
 496              	.LFE67:
 497              		.size	S5_DETECTED, .-S5_DETECTED
 498              		.section	.text.S6_DETECTED,"ax",%progbits
 499              		.align	2
 500              		.global	S6_DETECTED
 501              		.thumb
 502              		.thumb_func
 503              		.type	S6_DETECTED, %function
 504              	S6_DETECTED:
 505              	.LFB68:
 126:main.c        **** 
 127:main.c        **** CY_ISR(S6_DETECTED) {
 506              		.loc 1 127 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 0002 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 128:main.c        ****     // Sensor has detected WHITE
 129:main.c        ****     s6 = 1; // , Black = 0, White = 1
 516              		.loc 1 129 0
 517 0004 034B     		ldr	r3, .L16
 518 0006 0122     		movs	r2, #1
 519 0008 1A70     		strb	r2, [r3]
 130:main.c        ****     //LED_Write(1u);
 131:main.c        **** }
 520              		.loc 1 131 0
 521 000a 00BF     		nop
 522 000c BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 000e 80BC     		pop	{r7}
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 0010 7047     		bx	lr
 529              	.L17:
 530 0012 00BF     		.align	2
 531              	.L16:
 532 0014 00000000 		.word	s6
 533              		.cfi_endproc
 534              	.LFE68:
 535              		.size	S6_DETECTED, .-S6_DETECTED
 536              		.section	.text.TIMER_FINISH,"ax",%progbits
 537              		.align	2
 538              		.global	TIMER_FINISH
 539              		.thumb
 540              		.thumb_func
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 13


 541              		.type	TIMER_FINISH, %function
 542              	TIMER_FINISH:
 543              	.LFB69:
 132:main.c        **** 
 133:main.c        **** CY_ISR(TIMER_FINISH) {
 544              		.loc 1 133 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 134:main.c        ****     if (currentDirection == Stop) {
 554              		.loc 1 134 0
 555 0004 174B     		ldr	r3, .L24
 556 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 0008 052B     		cmp	r3, #5
 558 000a 05D1     		bne	.L19
 135:main.c        ****         stopBuffer = stopBuffer + 1;
 559              		.loc 1 135 0
 560 000c 164B     		ldr	r3, .L24+4
 561 000e 1B68     		ldr	r3, [r3]
 562 0010 0133     		adds	r3, r3, #1
 563 0012 154A     		ldr	r2, .L24+4
 564 0014 1360     		str	r3, [r2]
 565 0016 02E0     		b	.L20
 566              	.L19:
 136:main.c        ****     } else {
 137:main.c        ****         stopBuffer = 0;
 567              		.loc 1 137 0
 568 0018 134B     		ldr	r3, .L24+4
 569 001a 0022     		movs	r2, #0
 570 001c 1A60     		str	r2, [r3]
 571              	.L20:
 138:main.c        ****     }
 139:main.c        ****     if (currentDirection == Forward || 
 572              		.loc 1 139 0
 573 001e 114B     		ldr	r3, .L24
 574 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0022 002B     		cmp	r3, #0
 576 0024 0BD0     		beq	.L21
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
 577              		.loc 1 140 0 discriminator 1
 578 0026 0F4B     		ldr	r3, .L24
 579 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:main.c        ****         currentDirection == AdjustToTheLeft ||
 580              		.loc 1 139 0 discriminator 1
 581 002a 032B     		cmp	r3, #3
 582 002c 07D0     		beq	.L21
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 583              		.loc 1 141 0
 584 002e 0D4B     		ldr	r3, .L24
 585 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140:main.c        ****         currentDirection == AdjustToTheLeft ||
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 14


 586              		.loc 1 140 0
 587 0032 042B     		cmp	r3, #4
 588 0034 03D0     		beq	.L21
 142:main.c        ****         currentDirection == ForwardAfterTurn) {
 589              		.loc 1 142 0
 590 0036 0B4B     		ldr	r3, .L24
 591 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141:main.c        ****         currentDirection ==  AdjustToTheRight || 
 592              		.loc 1 141 0
 593 003a 082B     		cmp	r3, #8
 594 003c 06D1     		bne	.L22
 595              	.L21:
 143:main.c        ****         forwardBuffer = forwardBuffer + 1;
 596              		.loc 1 143 0
 597 003e 0B4B     		ldr	r3, .L24+8
 598 0040 1B88     		ldrh	r3, [r3]
 599 0042 0133     		adds	r3, r3, #1
 600 0044 9AB2     		uxth	r2, r3
 601 0046 094B     		ldr	r3, .L24+8
 602 0048 1A80     		strh	r2, [r3]	@ movhi
 603 004a 02E0     		b	.L23
 604              	.L22:
 144:main.c        ****     } else {
 145:main.c        ****         forwardBuffer = 0;    
 605              		.loc 1 145 0
 606 004c 074B     		ldr	r3, .L24+8
 607 004e 0022     		movs	r2, #0
 608 0050 1A80     		strh	r2, [r3]	@ movhi
 609              	.L23:
 146:main.c        ****     }
 147:main.c        ****     SetRobotMovement(); 
 610              		.loc 1 147 0
 611 0052 FFF7FEFF 		bl	SetRobotMovement
 148:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 612              		.loc 1 148 0
 613 0056 FFF7FEFF 		bl	ResetSensorFlags
 149:main.c        ****     Timer_LED_ReadStatusRegister();
 614              		.loc 1 149 0
 615 005a FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 150:main.c        **** }
 616              		.loc 1 150 0
 617 005e 00BF     		nop
 618 0060 80BD     		pop	{r7, pc}
 619              	.L25:
 620 0062 00BF     		.align	2
 621              	.L24:
 622 0064 00000000 		.word	currentDirection
 623 0068 00000000 		.word	stopBuffer
 624 006c 00000000 		.word	forwardBuffer
 625              		.cfi_endproc
 626              	.LFE69:
 627              		.size	TIMER_FINISH, .-TIMER_FINISH
 628              		.section	.text.main,"ax",%progbits
 629              		.align	2
 630              		.global	main
 631              		.thumb
 632              		.thumb_func
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 15


 633              		.type	main, %function
 634              	main:
 635              	.LFB70:
 151:main.c        **** 
 152:main.c        **** 
 153:main.c        **** int main() {
 636              		.loc 1 153 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 24
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 B0B5     		push	{r4, r5, r7, lr}
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 86B0     		sub	sp, sp, #24
 647              		.cfi_def_cfa_offset 40
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 154:main.c        **** // ----- INITIALIZATIONS ----------
 155:main.c        ****     CYGlobalIntEnable;
 650              		.loc 1 155 0
 651              		.syntax unified
 652              	@ 155 "main.c" 1
 653 0006 62B6     		CPSIE   i
 654              	@ 0 "" 2
 156:main.c        ****     ResetSensorFlags();
 655              		.loc 1 156 0
 656              		.thumb
 657              		.syntax unified
 658 0008 FFF7FEFF 		bl	ResetSensorFlags
 157:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 659              		.loc 1 157 0
 660 000c FFF7FEFF 		bl	init
 158:main.c        ****     
 159:main.c        ****     // MAKE SURE TO CHANGE ORIENTATION
 160:main.c        ****     instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, Up); // initiali
 661              		.loc 1 160 0
 662 0010 2B4B     		ldr	r3, .L29
 663 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664 0014 1A46     		mov	r2, r3
 665 0016 0023     		movs	r3, #0
 666 0018 2A49     		ldr	r1, .L29+4
 667 001a 2B48     		ldr	r0, .L29+8
 668 001c FFF7FEFF 		bl	findPathNewOrientation
 669 0020 0246     		mov	r2, r0
 670 0022 2A4B     		ldr	r3, .L29+12
 671 0024 1A60     		str	r2, [r3]
 161:main.c        ****     numSteps = instructionsListLength();
 672              		.loc 1 161 0
 673 0026 FFF7FEFF 		bl	instructionsListLength
 674 002a 0346     		mov	r3, r0
 675 002c 1A46     		mov	r2, r3
 676 002e 284B     		ldr	r3, .L29+16
 677 0030 1A60     		str	r2, [r3]
 162:main.c        ****     
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 16


 163:main.c        ****     currentInstruction = GetInstructionAtIndex();
 678              		.loc 1 163 0
 679 0032 284C     		ldr	r4, .L29+20
 680 0034 3B46     		mov	r3, r7
 681 0036 1846     		mov	r0, r3
 682 0038 FFF7FEFF 		bl	GetInstructionAtIndex
 683 003c 2546     		mov	r5, r4
 684 003e 3C46     		mov	r4, r7
 685 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 686 0042 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 687 0044 2368     		ldr	r3, [r4]
 688 0046 2B60     		str	r3, [r5]
 164:main.c        ****     
 165:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 689              		.loc 1 165 0
 690 0048 204B     		ldr	r3, .L29+12
 691 004a 1968     		ldr	r1, [r3]
 692 004c 224B     		ldr	r3, .L29+24
 693 004e 1A68     		ldr	r2, [r3]
 694 0050 1346     		mov	r3, r2
 695 0052 9B00     		lsls	r3, r3, #2
 696 0054 1344     		add	r3, r3, r2
 697 0056 9B00     		lsls	r3, r3, #2
 698 0058 0B44     		add	r3, r3, r1
 699 005a 5B68     		ldr	r3, [r3, #4]
 700 005c DAB2     		uxtb	r2, r3
 701 005e 1F4B     		ldr	r3, .L29+28
 702 0060 1A70     		strb	r2, [r3]
 166:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 703              		.loc 1 166 0
 704 0062 1A4B     		ldr	r3, .L29+12
 705 0064 1968     		ldr	r1, [r3]
 706 0066 1C4B     		ldr	r3, .L29+24
 707 0068 1A68     		ldr	r2, [r3]
 708 006a 1346     		mov	r3, r2
 709 006c 9B00     		lsls	r3, r3, #2
 710 006e 1344     		add	r3, r3, r2
 711 0070 9B00     		lsls	r3, r3, #2
 712 0072 0B44     		add	r3, r3, r1
 713 0074 9B68     		ldr	r3, [r3, #8]
 714 0076 DAB2     		uxtb	r2, r3
 715 0078 194B     		ldr	r3, .L29+32
 716 007a 1A70     		strb	r2, [r3]
 167:main.c        ****     
 168:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 717              		.loc 1 168 0
 718 007c 1948     		ldr	r0, .L29+36
 719 007e FFF7FEFF 		bl	isr_speed_StartEx
 169:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 720              		.loc 1 169 0
 721 0082 1948     		ldr	r0, .L29+40
 722 0084 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 170:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 723              		.loc 1 170 0
 724 0088 1848     		ldr	r0, .L29+44
 725 008a FFF7FEFF 		bl	S3_detected_StartEx
 171:main.c        ****     S4_detected_StartEx(S4_DETECTED);
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 17


 726              		.loc 1 171 0
 727 008e 1848     		ldr	r0, .L29+48
 728 0090 FFF7FEFF 		bl	S4_detected_StartEx
 172:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 729              		.loc 1 172 0
 730 0094 1748     		ldr	r0, .L29+52
 731 0096 FFF7FEFF 		bl	S5_detected_StartEx
 173:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 732              		.loc 1 173 0
 733 009a 1748     		ldr	r0, .L29+56
 734 009c FFF7FEFF 		bl	S6_detected_StartEx
 174:main.c        ****     Timer_LED_Start();
 735              		.loc 1 174 0
 736 00a0 FFF7FEFF 		bl	Timer_LED_Start
 737              	.L28:
 175:main.c        **** 
 176:main.c        ****     for(;;)
 177:main.c        ****     {
 178:main.c        ****         if(timerInt == 1) {
 738              		.loc 1 178 0
 739 00a4 154B     		ldr	r3, .L29+60
 740 00a6 1B68     		ldr	r3, [r3]
 741 00a8 012B     		cmp	r3, #1
 742 00aa FBD1     		bne	.L28
 179:main.c        ****             timerInt = 0;
 743              		.loc 1 179 0
 744 00ac 134B     		ldr	r3, .L29+60
 745 00ae 0022     		movs	r2, #0
 746 00b0 1A60     		str	r2, [r3]
 180:main.c        ****             // calculate RPM of M2
 181:main.c        ****             quadCountToRPM(quadDec2Count);
 747              		.loc 1 181 0
 748 00b2 134B     		ldr	r3, .L29+64
 749 00b4 1B68     		ldr	r3, [r3]
 750 00b6 9BB2     		uxth	r3, r3
 751 00b8 1846     		mov	r0, r3
 752 00ba FFF7FEFF 		bl	quadCountToRPM
 182:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 183:main.c        ****             //usbPutString(buffer);
 184:main.c        ****             //usbPutString(" ");
 185:main.c        ****         }
 186:main.c        ****     }
 753              		.loc 1 186 0
 754 00be F1E7     		b	.L28
 755              	.L30:
 756              		.align	2
 757              	.L29:
 758 00c0 00000000 		.word	currentFoodListIndex
 759 00c4 00000000 		.word	food_list
 760 00c8 00000000 		.word	map
 761 00cc 00000000 		.word	instructionList
 762 00d0 00000000 		.word	numSteps
 763 00d4 00000000 		.word	currentInstruction
 764 00d8 14000000 		.word	instructionIndex
 765 00dc 3E000000 		.word	currentIgnoreL
 766 00e0 3F000000 		.word	currentIgnoreR
 767 00e4 00000000 		.word	speedTimer
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 18


 768 00e8 00000000 		.word	TIMER_FINISH
 769 00ec 00000000 		.word	S3_DETECTED
 770 00f0 00000000 		.word	S4_DETECTED
 771 00f4 00000000 		.word	S5_DETECTED
 772 00f8 00000000 		.word	S6_DETECTED
 773 00fc 00000000 		.word	timerInt
 774 0100 00000000 		.word	quadDec2Count
 775              		.cfi_endproc
 776              	.LFE70:
 777              		.size	main, .-main
 778              		.global	__aeabi_fmul
 779              		.global	__aeabi_f2iz
 780              		.section	.text.quadCountToRPM,"ax",%progbits
 781              		.align	2
 782              		.global	quadCountToRPM
 783              		.thumb
 784              		.thumb_func
 785              		.type	quadCountToRPM, %function
 786              	quadCountToRPM:
 787              	.LFB71:
 187:main.c        ****     return 0;
 188:main.c        **** }
 189:main.c        **** 
 190:main.c        **** // Calculations
 191:main.c        **** //* ========================================
 192:main.c        **** int16 quadCountToRPM(uint16 count) {
 788              		.loc 1 192 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 16
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 90B5     		push	{r4, r7, lr}
 793              		.cfi_def_cfa_offset 12
 794              		.cfi_offset 4, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 85B0     		sub	sp, sp, #20
 798              		.cfi_def_cfa_offset 32
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 801 0006 0346     		mov	r3, r0
 802 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 193:main.c        ****     float cps = count/57.00;
 803              		.loc 1 193 0
 804 000a FB88     		ldrh	r3, [r7, #6]
 805 000c 1846     		mov	r0, r3
 806 000e FFF7FEFF 		bl	__aeabi_i2d
 807 0012 4FF00002 		mov	r2, #0
 808 0016 0D4B     		ldr	r3, .L33
 809 0018 FFF7FEFF 		bl	__aeabi_ddiv
 810 001c 0346     		mov	r3, r0
 811 001e 0C46     		mov	r4, r1
 812 0020 1846     		mov	r0, r3
 813 0022 2146     		mov	r1, r4
 814 0024 FFF7FEFF 		bl	__aeabi_d2f
 815 0028 0346     		mov	r3, r0
 816 002a FB60     		str	r3, [r7, #12]	@ float
 194:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 19


 817              		.loc 1 194 0
 818 002c 0849     		ldr	r1, .L33+4
 819 002e F868     		ldr	r0, [r7, #12]	@ float
 820 0030 FFF7FEFF 		bl	__aeabi_fmul
 821 0034 0346     		mov	r3, r0
 822 0036 1846     		mov	r0, r3
 823 0038 FFF7FEFF 		bl	__aeabi_f2iz
 824 003c 0346     		mov	r3, r0
 825 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 195:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 196:main.c        ****     return rpm;
 826              		.loc 1 196 0
 827 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 197:main.c        ****     //usbPutString(buffer);
 198:main.c        ****     //usbPutString("rpm ");
 199:main.c        **** }
 828              		.loc 1 199 0
 829 0044 1846     		mov	r0, r3
 830 0046 1437     		adds	r7, r7, #20
 831              		.cfi_def_cfa_offset 12
 832 0048 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 004a 90BD     		pop	{r4, r7, pc}
 836              	.L34:
 837              		.align	2
 838              	.L33:
 839 004c 00804C40 		.word	1078755328
 840 0050 00007041 		.word	1097859072
 841              		.cfi_endproc
 842              	.LFE71:
 843              		.size	quadCountToRPM, .-quadCountToRPM
 844              		.section	.text.ResetSensorFlags,"ax",%progbits
 845              		.align	2
 846              		.global	ResetSensorFlags
 847              		.thumb
 848              		.thumb_func
 849              		.type	ResetSensorFlags, %function
 850              	ResetSensorFlags:
 851              	.LFB72:
 200:main.c        **** 
 201:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 202:main.c        **** void ResetSensorFlags() {
 852              		.loc 1 202 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857 0000 80B4     		push	{r7}
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 203:main.c        ****     s3 = 0;
 862              		.loc 1 203 0
 863 0004 074B     		ldr	r3, .L36
 864 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 20


 865 0008 1A70     		strb	r2, [r3]
 204:main.c        ****     s4 = 0;
 866              		.loc 1 204 0
 867 000a 074B     		ldr	r3, .L36+4
 868 000c 0022     		movs	r2, #0
 869 000e 1A70     		strb	r2, [r3]
 205:main.c        ****     s5 = 0;
 870              		.loc 1 205 0
 871 0010 064B     		ldr	r3, .L36+8
 872 0012 0022     		movs	r2, #0
 873 0014 1A70     		strb	r2, [r3]
 206:main.c        ****     s6 = 0;
 874              		.loc 1 206 0
 875 0016 064B     		ldr	r3, .L36+12
 876 0018 0022     		movs	r2, #0
 877 001a 1A70     		strb	r2, [r3]
 207:main.c        **** }
 878              		.loc 1 207 0
 879 001c 00BF     		nop
 880 001e BD46     		mov	sp, r7
 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0020 80BC     		pop	{r7}
 884              		.cfi_restore 7
 885              		.cfi_def_cfa_offset 0
 886 0022 7047     		bx	lr
 887              	.L37:
 888              		.align	2
 889              	.L36:
 890 0024 00000000 		.word	s3
 891 0028 00000000 		.word	s4
 892 002c 00000000 		.word	s5
 893 0030 00000000 		.word	s6
 894              		.cfi_endproc
 895              	.LFE72:
 896              		.size	ResetSensorFlags, .-ResetSensorFlags
 897              		.global	xBlocksize
 898              		.data
 899 0045 000000   		.align	2
 900              		.type	xBlocksize, %object
 901              		.size	xBlocksize, 4
 902              	xBlocksize:
 903 0048 0000E842 		.word	1122500608
 904              		.global	yBlocksize
 905              		.align	2
 906              		.type	yBlocksize, %object
 907              		.size	yBlocksize, 4
 908              	yBlocksize:
 909 004c 00009042 		.word	1116733440
 910              		.global	currentRow
 911              		.type	currentRow, %object
 912              		.size	currentRow, 1
 913              	currentRow:
 914 0050 01       		.byte	1
 915              		.global	currentCol
 916              		.type	currentCol, %object
 917              		.size	currentCol, 1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 21


 918              	currentCol:
 919 0051 01       		.byte	1
 920              		.global	stoppedAfterTurn
 921              		.bss
 922              		.type	stoppedAfterTurn, %object
 923              		.size	stoppedAfterTurn, 1
 924              	stoppedAfterTurn:
 925 0054 00       		.space	1
 926              		.global	ignoreSensor
 927              		.type	ignoreSensor, %object
 928              		.size	ignoreSensor, 1
 929              	ignoreSensor:
 930 0055 00       		.space	1
 931              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 932              		.align	2
 933              		.global	ForwardCourseCorrection
 934              		.thumb
 935              		.thumb_func
 936              		.type	ForwardCourseCorrection, %function
 937              	ForwardCourseCorrection:
 938              	.LFB73:
 208:main.c        **** 
 209:main.c        **** float xBlocksize = 116; // 122 mm
 210:main.c        **** float yBlocksize = 72; // 80 mm
 211:main.c        **** uint8 currentRow = 1;
 212:main.c        **** uint8 currentCol = 1;
 213:main.c        **** 
 214:main.c        **** uint8 stoppedAfterTurn = 0;
 215:main.c        **** uint8 ignoreSensor = 0;
 216:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 217:main.c        **** 
 218:main.c        **** enum RobotMovement ForwardCourseCorrection();
 219:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 939              		.loc 1 219 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
 220:main.c        ****     // if S5 and S6 are on black, move forward
 221:main.c        ****     if (!s5 && !s6) {
 949              		.loc 1 221 0
 950 0004 1C4B     		ldr	r3, .L46
 951 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 0008 002B     		cmp	r3, #0
 953 000a 0FD1     		bne	.L39
 954              		.loc 1 221 0 is_stmt 0 discriminator 1
 955 000c 1B4B     		ldr	r3, .L46+4
 956 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957 0010 002B     		cmp	r3, #0
 958 0012 0BD1     		bne	.L39
 222:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 959              		.loc 1 222 0 is_stmt 1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 22


 960 0014 1A4B     		ldr	r3, .L46+8
 961 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0018 032B     		cmp	r3, #3
 963 001a 01D0     		beq	.L40
 223:main.c        ****             return AdjustToTheLeft;
 964              		.loc 1 223 0
 965 001c 0323     		movs	r3, #3
 966 001e 26E0     		b	.L41
 967              	.L40:
 224:main.c        ****         }
 225:main.c        ****         if (previousDirection != AdjustToTheRight) {
 968              		.loc 1 225 0
 969 0020 174B     		ldr	r3, .L46+8
 970 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0024 042B     		cmp	r3, #4
 972 0026 01D0     		beq	.L39
 226:main.c        ****             return AdjustToTheRight;    
 973              		.loc 1 226 0
 974 0028 0423     		movs	r3, #4
 975 002a 20E0     		b	.L41
 976              	.L39:
 227:main.c        ****         }
 228:main.c        ****     }
 229:main.c        ****     
 230:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 231:main.c        ****     if (s5 && s6) {
 977              		.loc 1 231 0
 978 002c 124B     		ldr	r3, .L46
 979 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0030 002B     		cmp	r3, #0
 981 0032 0FD0     		beq	.L42
 982              		.loc 1 231 0 is_stmt 0 discriminator 1
 983 0034 114B     		ldr	r3, .L46+4
 984 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 985 0038 002B     		cmp	r3, #0
 986 003a 0BD0     		beq	.L42
 232:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 987              		.loc 1 232 0 is_stmt 1
 988 003c 104B     		ldr	r3, .L46+8
 989 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 0040 032B     		cmp	r3, #3
 991 0042 01D0     		beq	.L43
 233:main.c        ****             return AdjustToTheLeft;
 992              		.loc 1 233 0
 993 0044 0323     		movs	r3, #3
 994 0046 12E0     		b	.L41
 995              	.L43:
 234:main.c        ****         }
 235:main.c        ****         if (previousDirection != AdjustToTheRight) {
 996              		.loc 1 235 0
 997 0048 0D4B     		ldr	r3, .L46+8
 998 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 004c 042B     		cmp	r3, #4
 1000 004e 01D0     		beq	.L42
 236:main.c        ****             return AdjustToTheRight;    
 1001              		.loc 1 236 0
 1002 0050 0423     		movs	r3, #4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 23


 1003 0052 0CE0     		b	.L41
 1004              	.L42:
 237:main.c        ****         }
 238:main.c        ****     }
 239:main.c        **** 
 240:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 241:main.c        ****     if (s5) {
 1005              		.loc 1 241 0
 1006 0054 084B     		ldr	r3, .L46
 1007 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 0058 002B     		cmp	r3, #0
 1009 005a 01D0     		beq	.L44
 242:main.c        ****         return AdjustToTheRight;    
 1010              		.loc 1 242 0
 1011 005c 0423     		movs	r3, #4
 1012 005e 06E0     		b	.L41
 1013              	.L44:
 243:main.c        ****     }
 244:main.c        ****     if (s6) {
 1014              		.loc 1 244 0
 1015 0060 064B     		ldr	r3, .L46+4
 1016 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 0064 002B     		cmp	r3, #0
 1018 0066 01D0     		beq	.L45
 245:main.c        ****         return AdjustToTheLeft;    
 1019              		.loc 1 245 0
 1020 0068 0323     		movs	r3, #3
 1021 006a 00E0     		b	.L41
 1022              	.L45:
 246:main.c        ****     }
 247:main.c        ****    
 248:main.c        ****     // We should never actually get to this point
 249:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 250:main.c        ****     return Stop;
 1023              		.loc 1 250 0
 1024 006c 0523     		movs	r3, #5
 1025              	.L41:
 251:main.c        **** }
 1026              		.loc 1 251 0
 1027 006e 1846     		mov	r0, r3
 1028 0070 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 0072 80BC     		pop	{r7}
 1032              		.cfi_restore 7
 1033              		.cfi_def_cfa_offset 0
 1034 0074 7047     		bx	lr
 1035              	.L47:
 1036 0076 00BF     		.align	2
 1037              	.L46:
 1038 0078 00000000 		.word	s5
 1039 007c 00000000 		.word	s6
 1040 0080 00000000 		.word	previousDirection
 1041              		.cfi_endproc
 1042              	.LFE73:
 1043              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1044              		.global	lastDirectionAfter180
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 24


 1045              		.data
 1046              		.type	lastDirectionAfter180, %object
 1047              		.size	lastDirectionAfter180, 1
 1048              	lastDirectionAfter180:
 1049 0052 06       		.byte	6
 1050              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1051              		.align	2
 1052              		.global	SpinCourseCorrection
 1053              		.thumb
 1054              		.thumb_func
 1055              		.type	SpinCourseCorrection, %function
 1056              	SpinCourseCorrection:
 1057              	.LFB74:
 252:main.c        **** 
 253:main.c        **** enum RobotMovement SpinCourseCorrection();
 254:main.c        **** 
 255:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 256:main.c        **** 
 257:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1058              		.loc 1 257 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
 1063 0000 80B4     		push	{r7}
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 258:main.c        ****     // Set first iteration flag.
 259:main.c        ****     if (!spinCourseCorrectionStarted) {
 1068              		.loc 1 259 0
 1069 0004 184B     		ldr	r3, .L55
 1070 0006 1B78     		ldrb	r3, [r3]
 1071 0008 DBB2     		uxtb	r3, r3
 1072 000a 002B     		cmp	r3, #0
 1073 000c 06D1     		bne	.L49
 260:main.c        ****         spinCourseCorrectionStarted = 1;    
 1074              		.loc 1 260 0
 1075 000e 164B     		ldr	r3, .L55
 1076 0010 0122     		movs	r2, #1
 1077 0012 1A70     		strb	r2, [r3]
 261:main.c        ****         lastDirectionAfter180 = currentDirection;
 1078              		.loc 1 261 0
 1079 0014 154B     		ldr	r3, .L55+4
 1080 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1081 0018 154B     		ldr	r3, .L55+8
 1082 001a 1A70     		strb	r2, [r3]
 1083              	.L49:
 262:main.c        ****     }
 263:main.c        ****     
 264:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 265:main.c        ****     if (s5 && s6) {
 1084              		.loc 1 265 0
 1085 001c 154B     		ldr	r3, .L55+12
 1086 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 25


 1088 0022 0FD0     		beq	.L50
 1089              		.loc 1 265 0 is_stmt 0 discriminator 1
 1090 0024 144B     		ldr	r3, .L55+16
 1091 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0028 002B     		cmp	r3, #0
 1093 002a 0BD0     		beq	.L50
 266:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1094              		.loc 1 266 0 is_stmt 1
 1095 002c 104B     		ldr	r3, .L55+8
 1096 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0030 022B     		cmp	r3, #2
 1098 0032 01D0     		beq	.L51
 267:main.c        ****             return TurnLeft;
 1099              		.loc 1 267 0
 1100 0034 0223     		movs	r3, #2
 1101 0036 12E0     		b	.L52
 1102              	.L51:
 268:main.c        ****         }
 269:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1103              		.loc 1 269 0
 1104 0038 0D4B     		ldr	r3, .L55+8
 1105 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 003c 012B     		cmp	r3, #1
 1107 003e 01D0     		beq	.L50
 270:main.c        ****             return TurnRight;    
 1108              		.loc 1 270 0
 1109 0040 0123     		movs	r3, #1
 1110 0042 0CE0     		b	.L52
 1111              	.L50:
 271:main.c        ****         }
 272:main.c        ****     }
 273:main.c        **** 
 274:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 275:main.c        ****     if (s5) {
 1112              		.loc 1 275 0
 1113 0044 0B4B     		ldr	r3, .L55+12
 1114 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0048 002B     		cmp	r3, #0
 1116 004a 01D0     		beq	.L53
 276:main.c        ****         return TurnRight;    
 1117              		.loc 1 276 0
 1118 004c 0123     		movs	r3, #1
 1119 004e 06E0     		b	.L52
 1120              	.L53:
 277:main.c        ****     }
 278:main.c        ****     if (s6) {
 1121              		.loc 1 278 0
 1122 0050 094B     		ldr	r3, .L55+16
 1123 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0054 002B     		cmp	r3, #0
 1125 0056 01D0     		beq	.L54
 279:main.c        ****         return TurnLeft;    
 1126              		.loc 1 279 0
 1127 0058 0223     		movs	r3, #2
 1128 005a 00E0     		b	.L52
 1129              	.L54:
 280:main.c        ****     }
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 26


 281:main.c        ****    
 282:main.c        ****     // We should never actually get to this point
 283:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 284:main.c        ****     return Stop;
 1130              		.loc 1 284 0
 1131 005c 0523     		movs	r3, #5
 1132              	.L52:
 285:main.c        **** }
 1133              		.loc 1 285 0
 1134 005e 1846     		mov	r0, r3
 1135 0060 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0062 80BC     		pop	{r7}
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0064 7047     		bx	lr
 1142              	.L56:
 1143 0066 00BF     		.align	2
 1144              	.L55:
 1145 0068 3D000000 		.word	spinCourseCorrectionStarted
 1146 006c 00000000 		.word	currentDirection
 1147 0070 00000000 		.word	lastDirectionAfter180
 1148 0074 00000000 		.word	s5
 1149 0078 00000000 		.word	s6
 1150              		.cfi_endproc
 1151              	.LFE74:
 1152              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1153              		.section	.text.SpinTurnCourseCorrection,"ax",%progbits
 1154              		.align	2
 1155              		.global	SpinTurnCourseCorrection
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	SpinTurnCourseCorrection, %function
 1159              	SpinTurnCourseCorrection:
 1160              	.LFB75:
 286:main.c        **** enum RobotMovement SpinTurnCourseCorrection();
 287:main.c        **** enum RobotMovement SpinTurnCourseCorrection() {
 1161              		.loc 1 287 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166 0000 80B4     		push	{r7}
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 00AF     		add	r7, sp, #0
 1170              		.cfi_def_cfa_register 7
 288:main.c        ****     // if S5 and S6 are on black, move forward
 289:main.c        ****     if (!s5 && !s6) {
 1171              		.loc 1 289 0
 1172 0004 1C4B     		ldr	r3, .L65
 1173 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1174 0008 002B     		cmp	r3, #0
 1175 000a 0FD1     		bne	.L58
 1176              		.loc 1 289 0 is_stmt 0 discriminator 1
 1177 000c 1B4B     		ldr	r3, .L65+4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 27


 1178 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 0010 002B     		cmp	r3, #0
 1180 0012 0BD1     		bne	.L58
 290:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1181              		.loc 1 290 0 is_stmt 1
 1182 0014 1A4B     		ldr	r3, .L65+8
 1183 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 0018 032B     		cmp	r3, #3
 1185 001a 01D0     		beq	.L59
 291:main.c        ****             return TurnLeft;
 1186              		.loc 1 291 0
 1187 001c 0223     		movs	r3, #2
 1188 001e 26E0     		b	.L60
 1189              	.L59:
 292:main.c        ****         }
 293:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1190              		.loc 1 293 0
 1191 0020 174B     		ldr	r3, .L65+8
 1192 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0024 042B     		cmp	r3, #4
 1194 0026 01D0     		beq	.L58
 294:main.c        ****             return TurnRight;    
 1195              		.loc 1 294 0
 1196 0028 0123     		movs	r3, #1
 1197 002a 20E0     		b	.L60
 1198              	.L58:
 295:main.c        ****         }
 296:main.c        ****     }
 297:main.c        ****     
 298:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 299:main.c        ****     if (s5 && s6) {
 1199              		.loc 1 299 0
 1200 002c 124B     		ldr	r3, .L65
 1201 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 0030 002B     		cmp	r3, #0
 1203 0032 0FD0     		beq	.L61
 1204              		.loc 1 299 0 is_stmt 0 discriminator 1
 1205 0034 114B     		ldr	r3, .L65+4
 1206 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1207 0038 002B     		cmp	r3, #0
 1208 003a 0BD0     		beq	.L61
 300:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1209              		.loc 1 300 0 is_stmt 1
 1210 003c 104B     		ldr	r3, .L65+8
 1211 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 0040 032B     		cmp	r3, #3
 1213 0042 01D0     		beq	.L62
 301:main.c        ****             return TurnLeft;
 1214              		.loc 1 301 0
 1215 0044 0223     		movs	r3, #2
 1216 0046 12E0     		b	.L60
 1217              	.L62:
 302:main.c        ****         }
 303:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1218              		.loc 1 303 0
 1219 0048 0D4B     		ldr	r3, .L65+8
 1220 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 28


 1221 004c 042B     		cmp	r3, #4
 1222 004e 01D0     		beq	.L61
 304:main.c        ****             return TurnRight;    
 1223              		.loc 1 304 0
 1224 0050 0123     		movs	r3, #1
 1225 0052 0CE0     		b	.L60
 1226              	.L61:
 305:main.c        ****         }
 306:main.c        ****     }
 307:main.c        **** 
 308:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 309:main.c        ****     if (s5) {
 1227              		.loc 1 309 0
 1228 0054 084B     		ldr	r3, .L65
 1229 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0058 002B     		cmp	r3, #0
 1231 005a 01D0     		beq	.L63
 310:main.c        ****         return TurnRight;    
 1232              		.loc 1 310 0
 1233 005c 0123     		movs	r3, #1
 1234 005e 06E0     		b	.L60
 1235              	.L63:
 311:main.c        ****     }
 312:main.c        ****     if (s6) {
 1236              		.loc 1 312 0
 1237 0060 064B     		ldr	r3, .L65+4
 1238 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0064 002B     		cmp	r3, #0
 1240 0066 01D0     		beq	.L64
 313:main.c        ****         return TurnLeft;    
 1241              		.loc 1 313 0
 1242 0068 0223     		movs	r3, #2
 1243 006a 00E0     		b	.L60
 1244              	.L64:
 314:main.c        ****     }
 315:main.c        ****    
 316:main.c        ****     // We should never actually get to this point
 317:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 318:main.c        ****     return Stop;
 1245              		.loc 1 318 0
 1246 006c 0523     		movs	r3, #5
 1247              	.L60:
 319:main.c        **** }
 1248              		.loc 1 319 0
 1249 006e 1846     		mov	r0, r3
 1250 0070 BD46     		mov	sp, r7
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 0072 80BC     		pop	{r7}
 1254              		.cfi_restore 7
 1255              		.cfi_def_cfa_offset 0
 1256 0074 7047     		bx	lr
 1257              	.L66:
 1258 0076 00BF     		.align	2
 1259              	.L65:
 1260 0078 00000000 		.word	s5
 1261 007c 00000000 		.word	s6
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 29


 1262 0080 00000000 		.word	previousDirection
 1263              		.cfi_endproc
 1264              	.LFE75:
 1265              		.size	SpinTurnCourseCorrection, .-SpinTurnCourseCorrection
 1266              		.global	firstTurnIteration
 1267              		.bss
 1268              		.type	firstTurnIteration, %object
 1269              		.size	firstTurnIteration, 1
 1270              	firstTurnIteration:
 1271 0056 00       		.space	1
 1272              	forwardAfterTurnLIgnore:
 1273 0057 00       		.space	1
 1274              	forwardAfterTurnRIgnore:
 1275 0058 00       		.space	1
 1276              		.global	__aeabi_i2f
 1277              		.global	__aeabi_fcmpge
 1278              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1279              		.align	2
 1280              		.global	GetMovementAccordingToInstruction
 1281              		.thumb
 1282              		.thumb_func
 1283              		.type	GetMovementAccordingToInstruction, %function
 1284              	GetMovementAccordingToInstruction:
 1285              	.LFB76:
 320:main.c        **** 
 321:main.c        **** uint8 firstTurnIteration = 0;
 322:main.c        **** volatile static uint8 forwardAfterTurnLIgnore = 0;
 323:main.c        **** volatile static uint8 forwardAfterTurnRIgnore = 0;
 324:main.c        **** 
 325:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1286              		.loc 1 325 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 40
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 B0B5     		push	{r4, r5, r7, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 8AB0     		sub	sp, sp, #40
 1297              		.cfi_def_cfa_offset 56
 1298 0004 00AF     		add	r7, sp, #0
 1299              		.cfi_def_cfa_register 7
 326:main.c        ****     float blocksize;
 327:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1300              		.loc 1 327 0
 1301 0006 A04B     		ldr	r3, .L132
 1302 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1303 000a 002B     		cmp	r3, #0
 1304 000c 03D0     		beq	.L68
 1305              		.loc 1 327 0 is_stmt 0 discriminator 1
 1306 000e 9E4B     		ldr	r3, .L132
 1307 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1308 0012 012B     		cmp	r3, #1
 1309 0014 03D1     		bne	.L69
 1310              	.L68:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 30


 328:main.c        ****         blocksize = yBlocksize;
 1311              		.loc 1 328 0 is_stmt 1
 1312 0016 9D4B     		ldr	r3, .L132+4
 1313 0018 1B68     		ldr	r3, [r3]	@ float
 1314 001a 7B62     		str	r3, [r7, #36]	@ float
 1315 001c 02E0     		b	.L70
 1316              	.L69:
 329:main.c        ****     } else {
 330:main.c        ****         blocksize = xBlocksize;
 1317              		.loc 1 330 0
 1318 001e 9C4B     		ldr	r3, .L132+8
 1319 0020 1B68     		ldr	r3, [r3]	@ float
 1320 0022 7B62     		str	r3, [r7, #36]	@ float
 1321              	.L70:
 331:main.c        ****     }
 332:main.c        ****     
 333:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 334:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
 335:main.c        ****         // OR an EVENT happens in the current instruction
 336:main.c        ****         // e.g. CurrentInstruction: GoForward 
 337:main.c        ****         //      S3 on BLACK
 338:main.c        ****         //      Check Ignore Count
 339:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 340:main.c        ****     
 341:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1322              		.loc 1 341 0
 1323 0024 984B     		ldr	r3, .L132
 1324 0026 1B78     		ldrb	r3, [r3]
 1325 0028 87F82330 		strb	r3, [r7, #35]
 342:main.c        ****     
 343:main.c        ****     /*
 344:main.c        ****     if (instructionList[instructionIndex + 1].direction == uTurn && currentInstructionDirection == 
 345:main.c        ****         if (s5 && s6) {
 346:main.c        ****             MoveToNextInstruction(); // case to start uTurns when needed. prevents uTurn overshooti
 347:main.c        ****             return Stop;
 348:main.c        ****         }
 349:main.c        ****     }
 350:main.c        ****     */
 351:main.c        ****     
 352:main.c        ****     switch (currentInstructionDirection) {
 1326              		.loc 1 352 0
 1327 002c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1328 0030 052B     		cmp	r3, #5
 1329 0032 00F2E782 		bhi	.L71
 1330 0036 01A2     		adr	r2, .L73
 1331 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1332              		.p2align 2
 1333              	.L73:
 1334 003c 55000000 		.word	.L72+1
 1335 0040 43010000 		.word	.L74+1
 1336 0044 6F020000 		.word	.L75+1
 1337 0048 0B050000 		.word	.L76+1
 1338 004c EB030000 		.word	.L77+1
 1339 0050 4B040000 		.word	.L78+1
 1340              		.p2align 1
 1341              	.L72:
 353:main.c        ****         case GoForward:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 31


 354:main.c        ****             if(currentDirection == Stop) {
 1342              		.loc 1 354 0
 1343 0054 8F4B     		ldr	r3, .L132+12
 1344 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1345 0058 052B     		cmp	r3, #5
 1346 005a 08D1     		bne	.L79
 355:main.c        ****                 if(stopBuffer <= 25) {
 1347              		.loc 1 355 0
 1348 005c 8E4B     		ldr	r3, .L132+16
 1349 005e 1B68     		ldr	r3, [r3]
 1350 0060 192B     		cmp	r3, #25
 1351 0062 01D8     		bhi	.L80
 356:main.c        ****                     return Stop;
 1352              		.loc 1 356 0
 1353 0064 0523     		movs	r3, #5
 1354 0066 CEE2     		b	.L81
 1355              	.L80:
 357:main.c        ****                 } else {
 358:main.c        ****                     stopBuffer = 100;
 1356              		.loc 1 358 0
 1357 0068 8B4B     		ldr	r3, .L132+16
 1358 006a 6422     		movs	r2, #100
 1359 006c 1A60     		str	r2, [r3]
 1360              	.L79:
 359:main.c        ****                 }
 360:main.c        ****             }
 361:main.c        ****             if (s3) {
 1361              		.loc 1 361 0
 1362 006e 8B4B     		ldr	r3, .L132+20
 1363 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1364 0072 002B     		cmp	r3, #0
 1365 0074 02D0     		beq	.L82
 362:main.c        ****                 leftStatusFlag = 1;
 1366              		.loc 1 362 0
 1367 0076 8A4B     		ldr	r3, .L132+24
 1368 0078 0122     		movs	r2, #1
 1369 007a 1A70     		strb	r2, [r3]
 1370              	.L82:
 363:main.c        ****             }
 364:main.c        ****             
 365:main.c        ****             if (s4) {
 1371              		.loc 1 365 0
 1372 007c 894B     		ldr	r3, .L132+28
 1373 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1374 0080 002B     		cmp	r3, #0
 1375 0082 02D0     		beq	.L83
 366:main.c        ****                 rightStatusFlag = 1;
 1376              		.loc 1 366 0
 1377 0084 884B     		ldr	r3, .L132+32
 1378 0086 0122     		movs	r2, #1
 1379 0088 1A70     		strb	r2, [r3]
 1380              	.L83:
 367:main.c        ****             }
 368:main.c        ****             
 369:main.c        ****             
 370:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 371:main.c        ****             if (leftStatusFlag) {
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 32


 1381              		.loc 1 371 0
 1382 008a 854B     		ldr	r3, .L132+24
 1383 008c 1B78     		ldrb	r3, [r3]
 1384 008e DBB2     		uxtb	r3, r3
 1385 0090 002B     		cmp	r3, #0
 1386 0092 1BD0     		beq	.L84
 372:main.c        ****                 if (!s3) {
 1387              		.loc 1 372 0
 1388 0094 814B     		ldr	r3, .L132+20
 1389 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 0098 002B     		cmp	r3, #0
 1391 009a 17D1     		bne	.L84
 373:main.c        ****                     leftStatusFlag = 0;    
 1392              		.loc 1 373 0
 1393 009c 804B     		ldr	r3, .L132+24
 1394 009e 0022     		movs	r2, #0
 1395 00a0 1A70     		strb	r2, [r3]
 374:main.c        ****                     if (currentIgnoreL == 0) {
 1396              		.loc 1 374 0
 1397 00a2 824B     		ldr	r3, .L132+36
 1398 00a4 1B78     		ldrb	r3, [r3]
 1399 00a6 DBB2     		uxtb	r3, r3
 1400 00a8 002B     		cmp	r3, #0
 1401 00aa 03D1     		bne	.L85
 375:main.c        ****                         MoveToNextInstruction();
 1402              		.loc 1 375 0
 1403 00ac FFF7FEFF 		bl	MoveToNextInstruction
 376:main.c        ****                         return Stop;
 1404              		.loc 1 376 0
 1405 00b0 0523     		movs	r3, #5
 1406 00b2 A8E2     		b	.L81
 1407              	.L85:
 377:main.c        ****                     }
 378:main.c        ****                     if (currentIgnoreL > 0) {
 1408              		.loc 1 378 0
 1409 00b4 7D4B     		ldr	r3, .L132+36
 1410 00b6 1B78     		ldrb	r3, [r3]
 1411 00b8 DBB2     		uxtb	r3, r3
 1412 00ba 002B     		cmp	r3, #0
 1413 00bc 06D0     		beq	.L84
 379:main.c        ****                         currentIgnoreL--;    
 1414              		.loc 1 379 0
 1415 00be 7B4B     		ldr	r3, .L132+36
 1416 00c0 1B78     		ldrb	r3, [r3]
 1417 00c2 DBB2     		uxtb	r3, r3
 1418 00c4 013B     		subs	r3, r3, #1
 1419 00c6 DAB2     		uxtb	r2, r3
 1420 00c8 784B     		ldr	r3, .L132+36
 1421 00ca 1A70     		strb	r2, [r3]
 1422              	.L84:
 380:main.c        ****                     }
 381:main.c        ****                     
 382:main.c        ****                 }
 383:main.c        ****             }
 384:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 385:main.c        ****             if (rightStatusFlag) {
 1423              		.loc 1 385 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 33


 1424 00cc 764B     		ldr	r3, .L132+32
 1425 00ce 1B78     		ldrb	r3, [r3]
 1426 00d0 DBB2     		uxtb	r3, r3
 1427 00d2 002B     		cmp	r3, #0
 1428 00d4 1BD0     		beq	.L86
 386:main.c        ****                 if (!s4) {
 1429              		.loc 1 386 0
 1430 00d6 734B     		ldr	r3, .L132+28
 1431 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 00da 002B     		cmp	r3, #0
 1433 00dc 17D1     		bne	.L86
 387:main.c        ****                     rightStatusFlag = 0;           
 1434              		.loc 1 387 0
 1435 00de 724B     		ldr	r3, .L132+32
 1436 00e0 0022     		movs	r2, #0
 1437 00e2 1A70     		strb	r2, [r3]
 388:main.c        ****                     if (currentIgnoreR == 0) {
 1438              		.loc 1 388 0
 1439 00e4 724B     		ldr	r3, .L132+40
 1440 00e6 1B78     		ldrb	r3, [r3]
 1441 00e8 DBB2     		uxtb	r3, r3
 1442 00ea 002B     		cmp	r3, #0
 1443 00ec 03D1     		bne	.L87
 389:main.c        ****                         MoveToNextInstruction();
 1444              		.loc 1 389 0
 1445 00ee FFF7FEFF 		bl	MoveToNextInstruction
 390:main.c        ****                         return Stop;
 1446              		.loc 1 390 0
 1447 00f2 0523     		movs	r3, #5
 1448 00f4 87E2     		b	.L81
 1449              	.L87:
 391:main.c        ****                     }
 392:main.c        ****                     if (currentIgnoreR > 0) {
 1450              		.loc 1 392 0
 1451 00f6 6E4B     		ldr	r3, .L132+40
 1452 00f8 1B78     		ldrb	r3, [r3]
 1453 00fa DBB2     		uxtb	r3, r3
 1454 00fc 002B     		cmp	r3, #0
 1455 00fe 06D0     		beq	.L86
 393:main.c        ****                         currentIgnoreR--;   
 1456              		.loc 1 393 0
 1457 0100 6B4B     		ldr	r3, .L132+40
 1458 0102 1B78     		ldrb	r3, [r3]
 1459 0104 DBB2     		uxtb	r3, r3
 1460 0106 013B     		subs	r3, r3, #1
 1461 0108 DAB2     		uxtb	r2, r3
 1462 010a 694B     		ldr	r3, .L132+40
 1463 010c 1A70     		strb	r2, [r3]
 1464              	.L86:
 394:main.c        ****                     }
 395:main.c        ****                 }
 396:main.c        ****                    
 397:main.c        ****             }
 398:main.c        ****             
 399:main.c        ****             if (currentIgnoreL == 0 || currentIgnoreR == 0) {
 1465              		.loc 1 399 0
 1466 010e 674B     		ldr	r3, .L132+36
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 34


 1467 0110 1B78     		ldrb	r3, [r3]
 1468 0112 DBB2     		uxtb	r3, r3
 1469 0114 002B     		cmp	r3, #0
 1470 0116 04D0     		beq	.L88
 1471              		.loc 1 399 0 is_stmt 0 discriminator 1
 1472 0118 654B     		ldr	r3, .L132+40
 1473 011a 1B78     		ldrb	r3, [r3]
 1474 011c DBB2     		uxtb	r3, r3
 1475 011e 002B     		cmp	r3, #0
 1476 0120 0BD1     		bne	.L89
 1477              	.L88:
 400:main.c        ****                 if (forwardAfterTurnLIgnore == 0 || forwardAfterTurnRIgnore == 0) {
 1478              		.loc 1 400 0 is_stmt 1
 1479 0122 644B     		ldr	r3, .L132+44
 1480 0124 1B78     		ldrb	r3, [r3]
 1481 0126 DBB2     		uxtb	r3, r3
 1482 0128 002B     		cmp	r3, #0
 1483 012a 04D0     		beq	.L90
 1484              		.loc 1 400 0 is_stmt 0 discriminator 1
 1485 012c 624B     		ldr	r3, .L132+48
 1486 012e 1B78     		ldrb	r3, [r3]
 1487 0130 DBB2     		uxtb	r3, r3
 1488 0132 002B     		cmp	r3, #0
 1489 0134 01D1     		bne	.L89
 1490              	.L90:
 401:main.c        ****                     MoveToNextInstruction();                    
 1491              		.loc 1 401 0 is_stmt 1
 1492 0136 FFF7FEFF 		bl	MoveToNextInstruction
 1493              	.L89:
 402:main.c        ****                 }
 403:main.c        ****             }
 404:main.c        ****           
 405:main.c        ****             return ForwardCourseCorrection();
 1494              		.loc 1 405 0
 1495 013a FFF7FEFF 		bl	ForwardCourseCorrection
 1496 013e 0346     		mov	r3, r0
 1497 0140 61E2     		b	.L81
 1498              	.L74:
 406:main.c        ****             break;
 407:main.c        ****         case waitForLeftTurn:
 408:main.c        ****             // continue moving forward until s3 goes on black
 409:main.c        ****             // if we are turning left already
 410:main.c        ****                 // wait until s5 || s6 are on black
 411:main.c        ****                 // return stop
 412:main.c        ****             if (!firstTurnIteration) {
 1499              		.loc 1 412 0
 1500 0142 5E4B     		ldr	r3, .L132+52
 1501 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0146 002B     		cmp	r3, #0
 1503 0148 08D1     		bne	.L91
 413:main.c        ****                 
 414:main.c        ****                 if (!s3) {
 1504              		.loc 1 414 0
 1505 014a 544B     		ldr	r3, .L132+20
 1506 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 014e 002B     		cmp	r3, #0
 1508 0150 04D1     		bne	.L91
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 35


 415:main.c        ****                     firstTurnIteration = 1;
 1509              		.loc 1 415 0
 1510 0152 5A4B     		ldr	r3, .L132+52
 1511 0154 0122     		movs	r2, #1
 1512 0156 1A70     		strb	r2, [r3]
 416:main.c        ****                     return Stop;    
 1513              		.loc 1 416 0
 1514 0158 0523     		movs	r3, #5
 1515 015a 54E2     		b	.L81
 1516              	.L91:
 417:main.c        ****                 }
 418:main.c        ****                 if (s3) {
 419:main.c        ****                     //return Backward;    
 420:main.c        ****                 }
 421:main.c        ****             }
 422:main.c        ****             
 423:main.c        ****             if (turnFinishedFlag) {
 1517              		.loc 1 423 0
 1518 015c 584B     		ldr	r3, .L132+56
 1519 015e 1B78     		ldrb	r3, [r3]
 1520 0160 DBB2     		uxtb	r3, r3
 1521 0162 002B     		cmp	r3, #0
 1522 0164 31D0     		beq	.L93
 424:main.c        ****                 if (!s3 && !s5 && !s6) {
 1523              		.loc 1 424 0
 1524 0166 4D4B     		ldr	r3, .L132+20
 1525 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 016a 002B     		cmp	r3, #0
 1527 016c 0BD1     		bne	.L94
 1528              		.loc 1 424 0 is_stmt 0 discriminator 1
 1529 016e 554B     		ldr	r3, .L132+60
 1530 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 0172 002B     		cmp	r3, #0
 1532 0174 07D1     		bne	.L94
 1533              		.loc 1 424 0 discriminator 2
 1534 0176 544B     		ldr	r3, .L132+64
 1535 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 017a 002B     		cmp	r3, #0
 1537 017c 03D1     		bne	.L94
 425:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 426:main.c        ****                     return ForwardCourseCorrection();
 1538              		.loc 1 426 0 is_stmt 1
 1539 017e FFF7FEFF 		bl	ForwardCourseCorrection
 1540 0182 0346     		mov	r3, r0
 1541 0184 3FE2     		b	.L81
 1542              	.L94:
 427:main.c        ****                 }
 428:main.c        ****                 if (s5 || s6) {
 1543              		.loc 1 428 0
 1544 0186 4F4B     		ldr	r3, .L132+60
 1545 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 018a 002B     		cmp	r3, #0
 1547 018c 03D1     		bne	.L95
 1548              		.loc 1 428 0 is_stmt 0 discriminator 1
 1549 018e 4E4B     		ldr	r3, .L132+64
 1550 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 0192 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 36


 1552 0194 03D0     		beq	.L96
 1553              	.L95:
 429:main.c        ****                     return SpinCourseCorrection();
 1554              		.loc 1 429 0 is_stmt 1
 1555 0196 FFF7FEFF 		bl	SpinCourseCorrection
 1556 019a 0346     		mov	r3, r0
 1557 019c 33E2     		b	.L81
 1558              	.L96:
 430:main.c        ****                 }
 431:main.c        ****                 if (forwardBuffer <= 10) {
 1559              		.loc 1 431 0
 1560 019e 4B4B     		ldr	r3, .L132+68
 1561 01a0 1B88     		ldrh	r3, [r3]
 1562 01a2 0A2B     		cmp	r3, #10
 1563 01a4 03D8     		bhi	.L97
 432:main.c        ****                     return ForwardCourseCorrection();    
 1564              		.loc 1 432 0
 1565 01a6 FFF7FEFF 		bl	ForwardCourseCorrection
 1566 01aa 0346     		mov	r3, r0
 1567 01ac 2BE2     		b	.L81
 1568              	.L97:
 433:main.c        **** 
 434:main.c        ****                 } else {
 435:main.c        ****                     forwardBuffer = 100;
 1569              		.loc 1 435 0
 1570 01ae 474B     		ldr	r3, .L132+68
 1571 01b0 6422     		movs	r2, #100
 1572 01b2 1A80     		strh	r2, [r3]	@ movhi
 436:main.c        ****                     if (s3) {
 1573              		.loc 1 436 0
 1574 01b4 394B     		ldr	r3, .L132+20
 1575 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 01b8 002B     		cmp	r3, #0
 1577 01ba 06D0     		beq	.L93
 437:main.c        ****                         turnFinishedFlag = 0;
 1578              		.loc 1 437 0
 1579 01bc 404B     		ldr	r3, .L132+56
 1580 01be 0022     		movs	r2, #0
 1581 01c0 1A70     		strb	r2, [r3]
 438:main.c        ****                         MoveToNextInstruction();   
 1582              		.loc 1 438 0
 1583 01c2 FFF7FEFF 		bl	MoveToNextInstruction
 439:main.c        ****                         return Stop;  
 1584              		.loc 1 439 0
 1585 01c6 0523     		movs	r3, #5
 1586 01c8 1DE2     		b	.L81
 1587              	.L93:
 440:main.c        ****                     }
 441:main.c        ****                 }
 442:main.c        ****             }
 443:main.c        ****             
 444:main.c        ****             
 445:main.c        ****             if (currentDirection == Stop) {
 1588              		.loc 1 445 0
 1589 01ca 324B     		ldr	r3, .L132+12
 1590 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1591 01ce 052B     		cmp	r3, #5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 37


 1592 01d0 09D1     		bne	.L98
 446:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 447:main.c        ****                 if (stopBuffer <= 25) {
 1593              		.loc 1 447 0
 1594 01d2 314B     		ldr	r3, .L132+16
 1595 01d4 1B68     		ldr	r3, [r3]
 1596 01d6 192B     		cmp	r3, #25
 1597 01d8 01D8     		bhi	.L99
 448:main.c        ****                     return Stop;   
 1598              		.loc 1 448 0
 1599 01da 0523     		movs	r3, #5
 1600 01dc 13E2     		b	.L81
 1601              	.L99:
 449:main.c        ****                 }
 450:main.c        ****                 return ForwardCourseCorrection();
 1602              		.loc 1 450 0
 1603 01de FFF7FEFF 		bl	ForwardCourseCorrection
 1604 01e2 0346     		mov	r3, r0
 1605 01e4 0FE2     		b	.L81
 1606              	.L98:
 451:main.c        ****             }
 452:main.c        ****          
 453:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 454:main.c        ****             if (currentDirection == TurnLeft) {
 1607              		.loc 1 454 0
 1608 01e6 2B4B     		ldr	r3, .L132+12
 1609 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 01ea 022B     		cmp	r3, #2
 1611 01ec 32D1     		bne	.L100
 455:main.c        ****                 // If turn started and we are still on black, continue turning
 456:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 457:main.c        ****                 if (turnStartedFlag) {
 1612              		.loc 1 457 0
 1613 01ee 384B     		ldr	r3, .L132+72
 1614 01f0 1B78     		ldrb	r3, [r3]
 1615 01f2 DBB2     		uxtb	r3, r3
 1616 01f4 002B     		cmp	r3, #0
 1617 01f6 0ED0     		beq	.L101
 458:main.c        ****                     if (s3 && (s5 && s6)) {
 1618              		.loc 1 458 0
 1619 01f8 284B     		ldr	r3, .L132+20
 1620 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1621 01fc 002B     		cmp	r3, #0
 1622 01fe 0AD0     		beq	.L101
 1623              		.loc 1 458 0 is_stmt 0 discriminator 1
 1624 0200 304B     		ldr	r3, .L132+60
 1625 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1626 0204 002B     		cmp	r3, #0
 1627 0206 06D0     		beq	.L101
 1628              		.loc 1 458 0 discriminator 2
 1629 0208 2F4B     		ldr	r3, .L132+64
 1630 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1631 020c 002B     		cmp	r3, #0
 1632 020e 02D0     		beq	.L101
 459:main.c        ****                         turnStartedFlag = 0;
 1633              		.loc 1 459 0 is_stmt 1
 1634 0210 2F4B     		ldr	r3, .L132+72
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 38


 1635 0212 0022     		movs	r2, #0
 1636 0214 1A70     		strb	r2, [r3]
 1637              	.L101:
 460:main.c        ****                     }
 461:main.c        ****                 }
 462:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1638              		.loc 1 462 0
 1639 0216 2E4B     		ldr	r3, .L132+72
 1640 0218 1B78     		ldrb	r3, [r3]
 1641 021a DBB2     		uxtb	r3, r3
 1642 021c 002B     		cmp	r3, #0
 1643 021e 17D1     		bne	.L102
 1644              		.loc 1 462 0 is_stmt 0 discriminator 1
 1645 0220 1E4B     		ldr	r3, .L132+20
 1646 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1647 0224 002B     		cmp	r3, #0
 1648 0226 13D1     		bne	.L102
 1649              		.loc 1 462 0 discriminator 2
 1650 0228 264B     		ldr	r3, .L132+60
 1651 022a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 022c 002B     		cmp	r3, #0
 1653 022e 03D0     		beq	.L103
 1654              		.loc 1 462 0 discriminator 3
 1655 0230 254B     		ldr	r3, .L132+64
 1656 0232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 0234 002B     		cmp	r3, #0
 1658 0236 0BD1     		bne	.L102
 1659              	.L103:
 463:main.c        ****                     turnFinishedFlag = 1;
 1660              		.loc 1 463 0 is_stmt 1
 1661 0238 214B     		ldr	r3, .L132+56
 1662 023a 0122     		movs	r2, #1
 1663 023c 1A70     		strb	r2, [r3]
 464:main.c        ****                     firstTurnIteration = 0;
 1664              		.loc 1 464 0
 1665 023e 1F4B     		ldr	r3, .L132+52
 1666 0240 0022     		movs	r2, #0
 1667 0242 1A70     		strb	r2, [r3]
 465:main.c        ****                     totalDistance = 0;
 1668              		.loc 1 465 0
 1669 0244 234B     		ldr	r3, .L132+76
 1670 0246 4FF00002 		mov	r2, #0
 1671 024a 1A60     		str	r2, [r3]	@ float
 466:main.c        ****                     return ForwardAfterTurn;
 1672              		.loc 1 466 0
 1673 024c 0823     		movs	r3, #8
 1674 024e DAE1     		b	.L81
 1675              	.L102:
 467:main.c        ****                 }
 468:main.c        ****                 else
 469:main.c        ****                 {
 470:main.c        ****                     return TurnLeft;
 1676              		.loc 1 470 0
 1677 0250 0223     		movs	r3, #2
 1678 0252 D8E1     		b	.L81
 1679              	.L100:
 471:main.c        ****                 }
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 39


 472:main.c        ****             }
 473:main.c        ****             
 474:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 475:main.c        ****             if (!s3) {
 1680              		.loc 1 475 0
 1681 0254 114B     		ldr	r3, .L132+20
 1682 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 0258 002B     		cmp	r3, #0
 1684 025a 04D1     		bne	.L104
 476:main.c        ****                 turnStartedFlag = 1;
 1685              		.loc 1 476 0
 1686 025c 1C4B     		ldr	r3, .L132+72
 1687 025e 0122     		movs	r2, #1
 1688 0260 1A70     		strb	r2, [r3]
 477:main.c        ****                 return TurnLeft;
 1689              		.loc 1 477 0
 1690 0262 0223     		movs	r3, #2
 1691 0264 CFE1     		b	.L81
 1692              	.L104:
 478:main.c        ****             }
 479:main.c        ****             
 480:main.c        ****             // Otherwise, keep going forward
 481:main.c        ****             return ForwardCourseCorrection(); 
 1693              		.loc 1 481 0
 1694 0266 FFF7FEFF 		bl	ForwardCourseCorrection
 1695 026a 0346     		mov	r3, r0
 1696 026c CBE1     		b	.L81
 1697              	.L75:
 482:main.c        ****             break;
 483:main.c        ****         case waitForRightTurn:
 484:main.c        ****             // continue moving forward until s4 goes on black
 485:main.c        ****             // if we are turning left already
 486:main.c        ****                 // wait until s5 || s6 are on black
 487:main.c        ****                 // return stop
 488:main.c        ****             if (!firstTurnIteration) {
 1698              		.loc 1 488 0
 1699 026e 134B     		ldr	r3, .L132+52
 1700 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 0272 002B     		cmp	r3, #0
 1702 0274 30D1     		bne	.L105
 489:main.c        ****                 
 490:main.c        ****                 if (!s4) {
 1703              		.loc 1 490 0
 1704 0276 0B4B     		ldr	r3, .L132+28
 1705 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1706 027a 002B     		cmp	r3, #0
 1707 027c 2CD1     		bne	.L105
 491:main.c        ****                     firstTurnIteration = 1; 
 1708              		.loc 1 491 0
 1709 027e 0F4B     		ldr	r3, .L132+52
 1710 0280 0122     		movs	r2, #1
 1711 0282 1A70     		strb	r2, [r3]
 492:main.c        ****                     return Stop;
 1712              		.loc 1 492 0
 1713 0284 0523     		movs	r3, #5
 1714 0286 BEE1     		b	.L81
 1715              	.L133:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 40


 1716              		.align	2
 1717              	.L132:
 1718 0288 00000000 		.word	currentInstruction
 1719 028c 00000000 		.word	yBlocksize
 1720 0290 00000000 		.word	xBlocksize
 1721 0294 00000000 		.word	currentDirection
 1722 0298 00000000 		.word	stopBuffer
 1723 029c 00000000 		.word	s3
 1724 02a0 3B000000 		.word	leftStatusFlag
 1725 02a4 00000000 		.word	s4
 1726 02a8 3C000000 		.word	rightStatusFlag
 1727 02ac 3E000000 		.word	currentIgnoreL
 1728 02b0 3F000000 		.word	currentIgnoreR
 1729 02b4 57000000 		.word	forwardAfterTurnLIgnore
 1730 02b8 58000000 		.word	forwardAfterTurnRIgnore
 1731 02bc 00000000 		.word	firstTurnIteration
 1732 02c0 37000000 		.word	turnFinishedFlag
 1733 02c4 00000000 		.word	s5
 1734 02c8 00000000 		.word	s6
 1735 02cc 00000000 		.word	forwardBuffer
 1736 02d0 36000000 		.word	turnStartedFlag
 1737 02d4 00000000 		.word	totalDistance
 1738              	.L105:
 493:main.c        ****                 }
 494:main.c        ****                 if (s4) {
 495:main.c        ****                     //return Backward;    
 496:main.c        ****                 }
 497:main.c        ****             }
 498:main.c        **** 
 499:main.c        ****             if (turnFinishedFlag) {
 1739              		.loc 1 499 0
 1740 02d8 A04B     		ldr	r3, .L134
 1741 02da 1B78     		ldrb	r3, [r3]
 1742 02dc DBB2     		uxtb	r3, r3
 1743 02de 002B     		cmp	r3, #0
 1744 02e0 34D0     		beq	.L107
 500:main.c        ****                 if (!s4 && !s5 && !s6) {
 1745              		.loc 1 500 0
 1746 02e2 9F4B     		ldr	r3, .L134+4
 1747 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1748 02e6 002B     		cmp	r3, #0
 1749 02e8 0BD1     		bne	.L108
 1750              		.loc 1 500 0 is_stmt 0 discriminator 1
 1751 02ea 9E4B     		ldr	r3, .L134+8
 1752 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1753 02ee 002B     		cmp	r3, #0
 1754 02f0 07D1     		bne	.L108
 1755              		.loc 1 500 0 discriminator 2
 1756 02f2 9D4B     		ldr	r3, .L134+12
 1757 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1758 02f6 002B     		cmp	r3, #0
 1759 02f8 03D1     		bne	.L108
 501:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 502:main.c        ****                     return ForwardCourseCorrection();
 1760              		.loc 1 502 0 is_stmt 1
 1761 02fa FFF7FEFF 		bl	ForwardCourseCorrection
 1762 02fe 0346     		mov	r3, r0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 41


 1763 0300 81E1     		b	.L81
 1764              	.L108:
 503:main.c        ****                 }
 504:main.c        ****                 if (s5 || s6) {
 1765              		.loc 1 504 0
 1766 0302 984B     		ldr	r3, .L134+8
 1767 0304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 0306 002B     		cmp	r3, #0
 1769 0308 03D1     		bne	.L109
 1770              		.loc 1 504 0 is_stmt 0 discriminator 1
 1771 030a 974B     		ldr	r3, .L134+12
 1772 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 030e 002B     		cmp	r3, #0
 1774 0310 03D0     		beq	.L110
 1775              	.L109:
 505:main.c        ****                     return SpinCourseCorrection();
 1776              		.loc 1 505 0 is_stmt 1
 1777 0312 FFF7FEFF 		bl	SpinCourseCorrection
 1778 0316 0346     		mov	r3, r0
 1779 0318 75E1     		b	.L81
 1780              	.L110:
 506:main.c        ****                 }
 507:main.c        ****                 if (forwardBuffer <= 9) {
 1781              		.loc 1 507 0
 1782 031a 944B     		ldr	r3, .L134+16
 1783 031c 1B88     		ldrh	r3, [r3]
 1784 031e 092B     		cmp	r3, #9
 1785 0320 03D8     		bhi	.L111
 508:main.c        ****                     return ForwardCourseCorrection();    
 1786              		.loc 1 508 0
 1787 0322 FFF7FEFF 		bl	ForwardCourseCorrection
 1788 0326 0346     		mov	r3, r0
 1789 0328 6DE1     		b	.L81
 1790              	.L111:
 509:main.c        **** 
 510:main.c        ****                 } else {
 511:main.c        ****                     forwardBuffer = 100;
 1791              		.loc 1 511 0
 1792 032a 904B     		ldr	r3, .L134+16
 1793 032c 6422     		movs	r2, #100
 1794 032e 1A80     		strh	r2, [r3]	@ movhi
 512:main.c        ****                     if (s4) {
 1795              		.loc 1 512 0
 1796 0330 8B4B     		ldr	r3, .L134+4
 1797 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1798 0334 002B     		cmp	r3, #0
 1799 0336 09D0     		beq	.L107
 513:main.c        ****                         firstTurnIteration = 0;
 1800              		.loc 1 513 0
 1801 0338 8D4B     		ldr	r3, .L134+20
 1802 033a 0022     		movs	r2, #0
 1803 033c 1A70     		strb	r2, [r3]
 514:main.c        ****                         turnFinishedFlag = 0;
 1804              		.loc 1 514 0
 1805 033e 874B     		ldr	r3, .L134
 1806 0340 0022     		movs	r2, #0
 1807 0342 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 42


 515:main.c        ****                         MoveToNextInstruction();   
 1808              		.loc 1 515 0
 1809 0344 FFF7FEFF 		bl	MoveToNextInstruction
 516:main.c        ****                         return Stop;  
 1810              		.loc 1 516 0
 1811 0348 0523     		movs	r3, #5
 1812 034a 5CE1     		b	.L81
 1813              	.L107:
 517:main.c        ****                     }
 518:main.c        ****                 }
 519:main.c        ****             }
 520:main.c        ****             
 521:main.c        ****             if (currentDirection == Stop) {
 1814              		.loc 1 521 0
 1815 034c 894B     		ldr	r3, .L134+24
 1816 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 0350 052B     		cmp	r3, #5
 1818 0352 09D1     		bne	.L112
 522:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 523:main.c        ****                 if (stopBuffer <= 25) {
 1819              		.loc 1 523 0
 1820 0354 884B     		ldr	r3, .L134+28
 1821 0356 1B68     		ldr	r3, [r3]
 1822 0358 192B     		cmp	r3, #25
 1823 035a 01D8     		bhi	.L113
 524:main.c        ****                     return Stop;   
 1824              		.loc 1 524 0
 1825 035c 0523     		movs	r3, #5
 1826 035e 52E1     		b	.L81
 1827              	.L113:
 525:main.c        ****                 }
 526:main.c        **** 
 527:main.c        ****                 return ForwardCourseCorrection();
 1828              		.loc 1 527 0
 1829 0360 FFF7FEFF 		bl	ForwardCourseCorrection
 1830 0364 0346     		mov	r3, r0
 1831 0366 4EE1     		b	.L81
 1832              	.L112:
 528:main.c        ****             }
 529:main.c        ****                       
 530:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 531:main.c        ****             if (currentDirection == TurnRight) {
 1833              		.loc 1 531 0
 1834 0368 824B     		ldr	r3, .L134+24
 1835 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 036c 012B     		cmp	r3, #1
 1837 036e 2FD1     		bne	.L114
 532:main.c        ****                 // If turn started and we are still on black, continue turning
 533:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 534:main.c        ****                 if (turnStartedFlag) {
 1838              		.loc 1 534 0
 1839 0370 824B     		ldr	r3, .L134+32
 1840 0372 1B78     		ldrb	r3, [r3]
 1841 0374 DBB2     		uxtb	r3, r3
 1842 0376 002B     		cmp	r3, #0
 1843 0378 0ED0     		beq	.L115
 535:main.c        ****                     if (s4 && (s5 && s6)) {
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 43


 1844              		.loc 1 535 0
 1845 037a 794B     		ldr	r3, .L134+4
 1846 037c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 037e 002B     		cmp	r3, #0
 1848 0380 0AD0     		beq	.L115
 1849              		.loc 1 535 0 is_stmt 0 discriminator 1
 1850 0382 784B     		ldr	r3, .L134+8
 1851 0384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 0386 002B     		cmp	r3, #0
 1853 0388 06D0     		beq	.L115
 1854              		.loc 1 535 0 discriminator 2
 1855 038a 774B     		ldr	r3, .L134+12
 1856 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 038e 002B     		cmp	r3, #0
 1858 0390 02D0     		beq	.L115
 536:main.c        ****                         turnStartedFlag = 0;
 1859              		.loc 1 536 0 is_stmt 1
 1860 0392 7A4B     		ldr	r3, .L134+32
 1861 0394 0022     		movs	r2, #0
 1862 0396 1A70     		strb	r2, [r3]
 1863              	.L115:
 537:main.c        ****                     }
 538:main.c        ****                 }
 539:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1864              		.loc 1 539 0
 1865 0398 784B     		ldr	r3, .L134+32
 1866 039a 1B78     		ldrb	r3, [r3]
 1867 039c DBB2     		uxtb	r3, r3
 1868 039e 002B     		cmp	r3, #0
 1869 03a0 14D1     		bne	.L116
 1870              		.loc 1 539 0 is_stmt 0 discriminator 1
 1871 03a2 6F4B     		ldr	r3, .L134+4
 1872 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1873 03a6 002B     		cmp	r3, #0
 1874 03a8 10D1     		bne	.L116
 1875              		.loc 1 539 0 discriminator 2
 1876 03aa 6E4B     		ldr	r3, .L134+8
 1877 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 03ae 002B     		cmp	r3, #0
 1879 03b0 03D0     		beq	.L117
 1880              		.loc 1 539 0 discriminator 3
 1881 03b2 6D4B     		ldr	r3, .L134+12
 1882 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1883 03b6 002B     		cmp	r3, #0
 1884 03b8 08D1     		bne	.L116
 1885              	.L117:
 540:main.c        ****                     turnFinishedFlag = 1;
 1886              		.loc 1 540 0 is_stmt 1
 1887 03ba 684B     		ldr	r3, .L134
 1888 03bc 0122     		movs	r2, #1
 1889 03be 1A70     		strb	r2, [r3]
 541:main.c        ****                     totalDistance = 0;
 1890              		.loc 1 541 0
 1891 03c0 6F4B     		ldr	r3, .L134+36
 1892 03c2 4FF00002 		mov	r2, #0
 1893 03c6 1A60     		str	r2, [r3]	@ float
 542:main.c        ****                     return ForwardAfterTurn;
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 44


 1894              		.loc 1 542 0
 1895 03c8 0823     		movs	r3, #8
 1896 03ca 1CE1     		b	.L81
 1897              	.L116:
 543:main.c        ****                 }
 544:main.c        ****                 else
 545:main.c        ****                 {
 546:main.c        ****                     return TurnRight;
 1898              		.loc 1 546 0
 1899 03cc 0123     		movs	r3, #1
 1900 03ce 1AE1     		b	.L81
 1901              	.L114:
 547:main.c        ****                 }
 548:main.c        ****             }
 549:main.c        ****             
 550:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 551:main.c        ****             if (!s4) {
 1902              		.loc 1 551 0
 1903 03d0 634B     		ldr	r3, .L134+4
 1904 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 03d4 002B     		cmp	r3, #0
 1906 03d6 04D1     		bne	.L118
 552:main.c        ****                 turnStartedFlag = 1;
 1907              		.loc 1 552 0
 1908 03d8 684B     		ldr	r3, .L134+32
 1909 03da 0122     		movs	r2, #1
 1910 03dc 1A70     		strb	r2, [r3]
 553:main.c        ****                 return TurnRight;
 1911              		.loc 1 553 0
 1912 03de 0123     		movs	r3, #1
 1913 03e0 11E1     		b	.L81
 1914              	.L118:
 554:main.c        ****             }
 555:main.c        ****             
 556:main.c        ****             // Otherwise, keep going forward
 557:main.c        ****             return ForwardCourseCorrection(); 
 1915              		.loc 1 557 0
 1916 03e2 FFF7FEFF 		bl	ForwardCourseCorrection
 1917 03e6 0346     		mov	r3, r0
 1918 03e8 0DE1     		b	.L81
 1919              	.L77:
 558:main.c        ****             break;
 559:main.c        ****         case ForwardUntilTarget:       
 560:main.c        ****             // Reset distance on first iteration of this instruction
 561:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1920              		.loc 1 561 0
 1921 03ea 664B     		ldr	r3, .L134+40
 1922 03ec 1B78     		ldrb	r3, [r3]
 1923 03ee DBB2     		uxtb	r3, r3
 1924 03f0 002B     		cmp	r3, #0
 1925 03f2 17D1     		bne	.L119
 1926              	.LBB3:
 562:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1927              		.loc 1 562 0
 1928 03f4 634B     		ldr	r3, .L134+40
 1929 03f6 0122     		movs	r2, #1
 1930 03f8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 45


 563:main.c        ****                 //uTurnIgnoreL = 0;
 564:main.c        ****                 //uTurnIgnoreR = 0;
 565:main.c        ****                 forwardAfterTurnLIgnore = 0;
 1931              		.loc 1 565 0
 1932 03fa 634B     		ldr	r3, .L134+44
 1933 03fc 0022     		movs	r2, #0
 1934 03fe 1A70     		strb	r2, [r3]
 566:main.c        ****                 forwardAfterTurnRIgnore = 0;
 1935              		.loc 1 566 0
 1936 0400 624B     		ldr	r3, .L134+48
 1937 0402 0022     		movs	r2, #0
 1938 0404 1A70     		strb	r2, [r3]
 567:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 568:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1939              		.loc 1 568 0
 1940 0406 624B     		ldr	r3, .L134+52
 1941 0408 DB68     		ldr	r3, [r3, #12]
 1942 040a FB61     		str	r3, [r7, #28]
 569:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 1943              		.loc 1 569 0
 1944 040c F869     		ldr	r0, [r7, #28]
 1945 040e FFF7FEFF 		bl	__aeabi_i2f
 1946 0412 0346     		mov	r3, r0
 1947 0414 796A     		ldr	r1, [r7, #36]	@ float
 1948 0416 1846     		mov	r0, r3
 1949 0418 FFF7FEFF 		bl	__aeabi_fmul
 1950 041c 0346     		mov	r3, r0
 1951 041e 1A46     		mov	r2, r3
 1952 0420 5C4B     		ldr	r3, .L134+56
 1953 0422 1A60     		str	r2, [r3]	@ float
 1954              	.L119:
 1955              	.LBE3:
 570:main.c        ****             }
 571:main.c        ****             
 572:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 573:main.c        ****             if (totalDistance >= blockSizeTotal) {
 1956              		.loc 1 573 0
 1957 0424 564B     		ldr	r3, .L134+36
 1958 0426 1A68     		ldr	r2, [r3]	@ float
 1959 0428 5A4B     		ldr	r3, .L134+56
 1960 042a 1B68     		ldr	r3, [r3]	@ float
 1961 042c 1946     		mov	r1, r3
 1962 042e 1046     		mov	r0, r2
 1963 0430 FFF7FEFF 		bl	__aeabi_fcmpge
 1964 0434 0346     		mov	r3, r0
 1965 0436 002B     		cmp	r3, #0
 1966 0438 03D0     		beq	.L131
 574:main.c        ****                 // Get next instruction
 575:main.c        ****                 MoveToNextInstruction();
 1967              		.loc 1 575 0
 1968 043a FFF7FEFF 		bl	MoveToNextInstruction
 576:main.c        **** 
 577:main.c        ****                 
 578:main.c        ****                 return Stop;
 1969              		.loc 1 578 0
 1970 043e 0523     		movs	r3, #5
 1971 0440 E1E0     		b	.L81
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 46


 1972              	.L131:
 579:main.c        ****             }
 580:main.c        ****             
 581:main.c        ****             return ForwardCourseCorrection();
 1973              		.loc 1 581 0
 1974 0442 FFF7FEFF 		bl	ForwardCourseCorrection
 1975 0446 0346     		mov	r3, r0
 1976 0448 DDE0     		b	.L81
 1977              	.L78:
 582:main.c        ****             break;
 583:main.c        ****         case StopAtTarget:
 584:main.c        ****             // Reset Forward Until Target Flags (Had to move in here to make it work)
 585:main.c        ****             // Reset flags
 586:main.c        ****             totalDistance = 0;
 1978              		.loc 1 586 0
 1979 044a 4D4B     		ldr	r3, .L134+36
 1980 044c 4FF00002 		mov	r2, #0
 1981 0450 1A60     		str	r2, [r3]	@ float
 587:main.c        ****             forwardUntilTargetStartedFlag = 0;
 1982              		.loc 1 587 0
 1983 0452 4C4B     		ldr	r3, .L134+40
 1984 0454 0022     		movs	r2, #0
 1985 0456 1A70     		strb	r2, [r3]
 588:main.c        ****             blockSizeTotal = 0;
 1986              		.loc 1 588 0
 1987 0458 4E4B     		ldr	r3, .L134+56
 1988 045a 4FF00002 		mov	r2, #0
 1989 045e 1A60     		str	r2, [r3]	@ float
 589:main.c        ****             
 590:main.c        ****             if (currentDirection == Stop) {
 1990              		.loc 1 590 0
 1991 0460 444B     		ldr	r3, .L134+24
 1992 0462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1993 0464 052B     		cmp	r3, #5
 1994 0466 08D1     		bne	.L122
 591:main.c        ****                 if (stopBuffer <= 100) {
 1995              		.loc 1 591 0
 1996 0468 434B     		ldr	r3, .L134+28
 1997 046a 1B68     		ldr	r3, [r3]
 1998 046c 642B     		cmp	r3, #100
 1999 046e 01D8     		bhi	.L123
 592:main.c        ****                     return Stop;    
 2000              		.loc 1 592 0
 2001 0470 0523     		movs	r3, #5
 2002 0472 C8E0     		b	.L81
 2003              	.L123:
 593:main.c        ****                 } else {
 594:main.c        ****                     stopBuffer = 250;
 2004              		.loc 1 594 0
 2005 0474 404B     		ldr	r3, .L134+28
 2006 0476 FA22     		movs	r2, #250
 2007 0478 1A60     		str	r2, [r3]
 2008              	.L122:
 595:main.c        ****                 }
 596:main.c        ****             }
 597:main.c        ****             
 598:main.c        ****             // RESET EVERYTHING AND FIND NEW PATH FOR NEXT FOOD LIST
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 47


 599:main.c        ****             // Make sure index doesn't go over cap
 600:main.c        ****             // Stop at final location
 601:main.c        ****             if (currentFoodListIndex == 4) {
 2009              		.loc 1 601 0
 2010 047a 474B     		ldr	r3, .L134+60
 2011 047c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2012 047e 042B     		cmp	r3, #4
 2013 0480 01D1     		bne	.L124
 602:main.c        ****                 return Stop;    
 2014              		.loc 1 602 0
 2015 0482 0523     		movs	r3, #5
 2016 0484 BFE0     		b	.L81
 2017              	.L124:
 603:main.c        ****             }
 604:main.c        ****             
 605:main.c        ****             currentFoodListIndex++;
 2018              		.loc 1 605 0
 2019 0486 444B     		ldr	r3, .L134+60
 2020 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 048a 0133     		adds	r3, r3, #1
 2022 048c DAB2     		uxtb	r2, r3
 2023 048e 424B     		ldr	r3, .L134+60
 2024 0490 1A70     		strb	r2, [r3]
 606:main.c        ****             instructionIndex = 0;
 2025              		.loc 1 606 0
 2026 0492 424B     		ldr	r3, .L134+64
 2027 0494 0022     		movs	r2, #0
 2028 0496 1A60     		str	r2, [r3]
 607:main.c        ****             instructionList = findPathNewOrientation(map, food_list, currentFoodListIndex, currentI
 2029              		.loc 1 607 0
 2030 0498 3F4B     		ldr	r3, .L134+60
 2031 049a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2032 049c 1A46     		mov	r2, r3
 2033 049e 3C4B     		ldr	r3, .L134+52
 2034 04a0 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2035 04a2 3F49     		ldr	r1, .L134+68
 2036 04a4 3F48     		ldr	r0, .L134+72
 2037 04a6 FFF7FEFF 		bl	findPathNewOrientation
 2038 04aa 0246     		mov	r2, r0
 2039 04ac 3E4B     		ldr	r3, .L134+76
 2040 04ae 1A60     		str	r2, [r3]
 608:main.c        ****             numSteps = instructionsListLength();
 2041              		.loc 1 608 0
 2042 04b0 FFF7FEFF 		bl	instructionsListLength
 2043 04b4 0346     		mov	r3, r0
 2044 04b6 1A46     		mov	r2, r3
 2045 04b8 3C4B     		ldr	r3, .L134+80
 2046 04ba 1A60     		str	r2, [r3]
 609:main.c        ****     
 610:main.c        ****             currentInstruction = GetInstructionAtIndex();
 2047              		.loc 1 610 0
 2048 04bc 344C     		ldr	r4, .L134+52
 2049 04be 3B46     		mov	r3, r7
 2050 04c0 1846     		mov	r0, r3
 2051 04c2 FFF7FEFF 		bl	GetInstructionAtIndex
 2052 04c6 2546     		mov	r5, r4
 2053 04c8 3C46     		mov	r4, r7
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 48


 2054 04ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2055 04cc 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2056 04ce 2368     		ldr	r3, [r4]
 2057 04d0 2B60     		str	r3, [r5]
 611:main.c        **** 
 612:main.c        ****             currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2058              		.loc 1 612 0
 2059 04d2 354B     		ldr	r3, .L134+76
 2060 04d4 1968     		ldr	r1, [r3]
 2061 04d6 314B     		ldr	r3, .L134+64
 2062 04d8 1A68     		ldr	r2, [r3]
 2063 04da 1346     		mov	r3, r2
 2064 04dc 9B00     		lsls	r3, r3, #2
 2065 04de 1344     		add	r3, r3, r2
 2066 04e0 9B00     		lsls	r3, r3, #2
 2067 04e2 0B44     		add	r3, r3, r1
 2068 04e4 5B68     		ldr	r3, [r3, #4]
 2069 04e6 DAB2     		uxtb	r2, r3
 2070 04e8 314B     		ldr	r3, .L134+84
 2071 04ea 1A70     		strb	r2, [r3]
 613:main.c        ****             currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2072              		.loc 1 613 0
 2073 04ec 2E4B     		ldr	r3, .L134+76
 2074 04ee 1968     		ldr	r1, [r3]
 2075 04f0 2A4B     		ldr	r3, .L134+64
 2076 04f2 1A68     		ldr	r2, [r3]
 2077 04f4 1346     		mov	r3, r2
 2078 04f6 9B00     		lsls	r3, r3, #2
 2079 04f8 1344     		add	r3, r3, r2
 2080 04fa 9B00     		lsls	r3, r3, #2
 2081 04fc 0B44     		add	r3, r3, r1
 2082 04fe 9B68     		ldr	r3, [r3, #8]
 2083 0500 DAB2     		uxtb	r2, r3
 2084 0502 2C4B     		ldr	r3, .L134+88
 2085 0504 1A70     		strb	r2, [r3]
 614:main.c        ****             
 615:main.c        ****             return Stop;
 2086              		.loc 1 615 0
 2087 0506 0523     		movs	r3, #5
 2088 0508 7DE0     		b	.L81
 2089              	.L76:
 616:main.c        ****             break;
 617:main.c        ****         case uTurn:
 618:main.c        ****             if (currentDirection == Stop) {
 2090              		.loc 1 618 0
 2091 050a 1A4B     		ldr	r3, .L134+24
 2092 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2093 050e 052B     		cmp	r3, #5
 2094 0510 08D1     		bne	.L125
 619:main.c        ****                 if (stopBuffer <= 50) {
 2095              		.loc 1 619 0
 2096 0512 194B     		ldr	r3, .L134+28
 2097 0514 1B68     		ldr	r3, [r3]
 2098 0516 322B     		cmp	r3, #50
 2099 0518 01D8     		bhi	.L126
 620:main.c        ****                     return Stop;    
 2100              		.loc 1 620 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 49


 2101 051a 0523     		movs	r3, #5
 2102 051c 73E0     		b	.L81
 2103              	.L126:
 621:main.c        ****                 } else {
 622:main.c        ****                     stopBuffer = 100;    
 2104              		.loc 1 622 0
 2105 051e 164B     		ldr	r3, .L134+28
 2106 0520 6422     		movs	r2, #100
 2107 0522 1A60     		str	r2, [r3]
 2108              	.L125:
 623:main.c        ****                 }
 624:main.c        ****             }
 625:main.c        ****             
 626:main.c        ****             
 627:main.c        ****             if (!uTurnStartedFlag) {
 2109              		.loc 1 627 0
 2110 0524 244B     		ldr	r3, .L134+92
 2111 0526 1B78     		ldrb	r3, [r3]
 2112 0528 DBB2     		uxtb	r3, r3
 2113 052a 002B     		cmp	r3, #0
 2114 052c 07D1     		bne	.L127
 628:main.c        ****                 uTurnStartedFlag = 1;
 2115              		.loc 1 628 0
 2116 052e 224B     		ldr	r3, .L134+92
 2117 0530 0122     		movs	r2, #1
 2118 0532 1A70     		strb	r2, [r3]
 629:main.c        ****                 spinCourseCorrectionStarted = 0;
 2119              		.loc 1 629 0
 2120 0534 214B     		ldr	r3, .L134+96
 2121 0536 0022     		movs	r2, #0
 2122 0538 1A70     		strb	r2, [r3]
 630:main.c        ****                 return Spin180;
 2123              		.loc 1 630 0
 2124 053a 0A23     		movs	r3, #10
 2125 053c 63E0     		b	.L81
 2126              	.L127:
 631:main.c        ****             } 
 632:main.c        ****             
 633:main.c        ****             if (uTurnFinishedFlag) {
 2127              		.loc 1 633 0
 2128 053e 204B     		ldr	r3, .L134+100
 2129 0540 1B78     		ldrb	r3, [r3]
 2130 0542 DBB2     		uxtb	r3, r3
 2131 0544 002B     		cmp	r3, #0
 2132 0546 3DD0     		beq	.L128
 634:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 635:main.c        ****                 uTurnFinishedFlag = 0;
 2133              		.loc 1 635 0
 2134 0548 1D4B     		ldr	r3, .L134+100
 2135 054a 0022     		movs	r2, #0
 2136 054c 1A70     		strb	r2, [r3]
 636:main.c        ****                 uTurnStartedFlag = 0;
 2137              		.loc 1 636 0
 2138 054e 1A4B     		ldr	r3, .L134+92
 2139 0550 0022     		movs	r2, #0
 2140 0552 1A70     		strb	r2, [r3]
 637:main.c        ****                 MoveToNextInstruction();
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 50


 2141              		.loc 1 637 0
 2142 0554 FFF7FEFF 		bl	MoveToNextInstruction
 638:main.c        ****                 return Stop;    
 2143              		.loc 1 638 0
 2144 0558 0523     		movs	r3, #5
 2145 055a 54E0     		b	.L81
 2146              	.L135:
 2147              		.align	2
 2148              	.L134:
 2149 055c 37000000 		.word	turnFinishedFlag
 2150 0560 00000000 		.word	s4
 2151 0564 00000000 		.word	s5
 2152 0568 00000000 		.word	s6
 2153 056c 00000000 		.word	forwardBuffer
 2154 0570 00000000 		.word	firstTurnIteration
 2155 0574 00000000 		.word	currentDirection
 2156 0578 00000000 		.word	stopBuffer
 2157 057c 36000000 		.word	turnStartedFlag
 2158 0580 00000000 		.word	totalDistance
 2159 0584 38000000 		.word	forwardUntilTargetStartedFlag
 2160 0588 57000000 		.word	forwardAfterTurnLIgnore
 2161 058c 58000000 		.word	forwardAfterTurnRIgnore
 2162 0590 00000000 		.word	currentInstruction
 2163 0594 00000000 		.word	blockSizeTotal
 2164 0598 00000000 		.word	currentFoodListIndex
 2165 059c 14000000 		.word	instructionIndex
 2166 05a0 00000000 		.word	food_list
 2167 05a4 00000000 		.word	map
 2168 05a8 00000000 		.word	instructionList
 2169 05ac 00000000 		.word	numSteps
 2170 05b0 3E000000 		.word	currentIgnoreL
 2171 05b4 3F000000 		.word	currentIgnoreR
 2172 05b8 39000000 		.word	uTurnStartedFlag
 2173 05bc 3D000000 		.word	spinCourseCorrectionStarted
 2174 05c0 3A000000 		.word	uTurnFinishedFlag
 2175              	.L128:
 639:main.c        ****             }
 640:main.c        ****             
 641:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 642:main.c        ****             if (uTurnStartedFlag) {
 2176              		.loc 1 642 0
 2177 05c4 124B     		ldr	r3, .L136
 2178 05c6 1B78     		ldrb	r3, [r3]
 2179 05c8 DBB2     		uxtb	r3, r3
 2180 05ca 002B     		cmp	r3, #0
 2181 05cc 16D0     		beq	.L129
 643:main.c        ****                 if (!s5 && !s6) {
 2182              		.loc 1 643 0
 2183 05ce 114B     		ldr	r3, .L136+4
 2184 05d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2185 05d2 002B     		cmp	r3, #0
 2186 05d4 12D1     		bne	.L129
 2187              		.loc 1 643 0 is_stmt 0 discriminator 1
 2188 05d6 104B     		ldr	r3, .L136+8
 2189 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2190 05da 002B     		cmp	r3, #0
 2191 05dc 0ED1     		bne	.L129
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 51


 644:main.c        ****                     totalLineCount = 0;
 2192              		.loc 1 644 0 is_stmt 1
 2193 05de 0F4B     		ldr	r3, .L136+12
 2194 05e0 0022     		movs	r2, #0
 2195 05e2 1A70     		strb	r2, [r3]
 645:main.c        ****                     lineCount = 0;
 2196              		.loc 1 645 0
 2197 05e4 0E4B     		ldr	r3, .L136+16
 2198 05e6 0022     		movs	r2, #0
 2199 05e8 1A70     		strb	r2, [r3]
 646:main.c        ****                     tooEarlyFlag = 0;
 2200              		.loc 1 646 0
 2201 05ea 0E4B     		ldr	r3, .L136+20
 2202 05ec 0022     		movs	r2, #0
 2203 05ee 1A70     		strb	r2, [r3]
 647:main.c        ****                     tooLateFlag = 0;
 2204              		.loc 1 647 0
 2205 05f0 0D4B     		ldr	r3, .L136+24
 2206 05f2 0022     		movs	r2, #0
 2207 05f4 1A70     		strb	r2, [r3]
 648:main.c        ****                     uTurnFinishedFlag = 1;    
 2208              		.loc 1 648 0
 2209 05f6 0D4B     		ldr	r3, .L136+28
 2210 05f8 0122     		movs	r2, #1
 2211 05fa 1A70     		strb	r2, [r3]
 2212              	.L129:
 649:main.c        ****                 }    
 650:main.c        ****             }
 651:main.c        ****             
 652:main.c        ****             return SpinCourseCorrection();
 2213              		.loc 1 652 0
 2214 05fc FFF7FEFF 		bl	SpinCourseCorrection
 2215 0600 0346     		mov	r3, r0
 2216 0602 00E0     		b	.L81
 2217              	.L71:
 653:main.c        ****             break;
 654:main.c        ****         default:
 655:main.c        ****             return Stop;
 2218              		.loc 1 655 0
 2219 0604 0523     		movs	r3, #5
 2220              	.L81:
 656:main.c        ****             break;
 657:main.c        ****     }
 658:main.c        ****     return Stop;
 659:main.c        **** }
 2221              		.loc 1 659 0
 2222 0606 1846     		mov	r0, r3
 2223 0608 2837     		adds	r7, r7, #40
 2224              		.cfi_def_cfa_offset 16
 2225 060a BD46     		mov	sp, r7
 2226              		.cfi_def_cfa_register 13
 2227              		@ sp needed
 2228 060c B0BD     		pop	{r4, r5, r7, pc}
 2229              	.L137:
 2230 060e 00BF     		.align	2
 2231              	.L136:
 2232 0610 39000000 		.word	uTurnStartedFlag
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 52


 2233 0614 00000000 		.word	s5
 2234 0618 00000000 		.word	s6
 2235 061c 40000000 		.word	totalLineCount
 2236 0620 41000000 		.word	lineCount
 2237 0624 43000000 		.word	tooEarlyFlag
 2238 0628 44000000 		.word	tooLateFlag
 2239 062c 3A000000 		.word	uTurnFinishedFlag
 2240              		.cfi_endproc
 2241              	.LFE76:
 2242              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2243              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2244              		.align	2
 2245              		.global	MoveToNextInstruction
 2246              		.thumb
 2247              		.thumb_func
 2248              		.type	MoveToNextInstruction, %function
 2249              	MoveToNextInstruction:
 2250              	.LFB77:
 660:main.c        **** 
 661:main.c        **** // get next instruction
 662:main.c        **** void MoveToNextInstruction() {
 2251              		.loc 1 662 0
 2252              		.cfi_startproc
 2253              		@ args = 0, pretend = 0, frame = 0
 2254              		@ frame_needed = 1, uses_anonymous_args = 0
 2255              		@ link register save eliminated.
 2256 0000 80B4     		push	{r7}
 2257              		.cfi_def_cfa_offset 4
 2258              		.cfi_offset 7, -4
 2259 0002 00AF     		add	r7, sp, #0
 2260              		.cfi_def_cfa_register 7
 663:main.c        ****     currentIgnoreL = 0;
 2261              		.loc 1 663 0
 2262 0004 144B     		ldr	r3, .L139
 2263 0006 0022     		movs	r2, #0
 2264 0008 1A70     		strb	r2, [r3]
 664:main.c        ****     currentIgnoreR = 0;
 2265              		.loc 1 664 0
 2266 000a 144B     		ldr	r3, .L139+4
 2267 000c 0022     		movs	r2, #0
 2268 000e 1A70     		strb	r2, [r3]
 665:main.c        **** 
 666:main.c        ****     instructionIndex++;
 2269              		.loc 1 666 0
 2270 0010 134B     		ldr	r3, .L139+8
 2271 0012 1B68     		ldr	r3, [r3]
 2272 0014 0133     		adds	r3, r3, #1
 2273 0016 124A     		ldr	r2, .L139+8
 2274 0018 1360     		str	r3, [r2]
 667:main.c        ****     
 668:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2275              		.loc 1 668 0
 2276 001a 124B     		ldr	r3, .L139+12
 2277 001c 1968     		ldr	r1, [r3]
 2278 001e 104B     		ldr	r3, .L139+8
 2279 0020 1A68     		ldr	r2, [r3]
 2280 0022 1346     		mov	r3, r2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 53


 2281 0024 9B00     		lsls	r3, r3, #2
 2282 0026 1344     		add	r3, r3, r2
 2283 0028 9B00     		lsls	r3, r3, #2
 2284 002a 0B44     		add	r3, r3, r1
 2285 002c 5B68     		ldr	r3, [r3, #4]
 2286 002e DAB2     		uxtb	r2, r3
 2287 0030 094B     		ldr	r3, .L139
 2288 0032 1A70     		strb	r2, [r3]
 669:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR;
 2289              		.loc 1 669 0
 2290 0034 0B4B     		ldr	r3, .L139+12
 2291 0036 1968     		ldr	r1, [r3]
 2292 0038 094B     		ldr	r3, .L139+8
 2293 003a 1A68     		ldr	r2, [r3]
 2294 003c 1346     		mov	r3, r2
 2295 003e 9B00     		lsls	r3, r3, #2
 2296 0040 1344     		add	r3, r3, r2
 2297 0042 9B00     		lsls	r3, r3, #2
 2298 0044 0B44     		add	r3, r3, r1
 2299 0046 9B68     		ldr	r3, [r3, #8]
 2300 0048 DAB2     		uxtb	r2, r3
 2301 004a 044B     		ldr	r3, .L139+4
 2302 004c 1A70     		strb	r2, [r3]
 670:main.c        **** 
 671:main.c        **** }
 2303              		.loc 1 671 0
 2304 004e 00BF     		nop
 2305 0050 BD46     		mov	sp, r7
 2306              		.cfi_def_cfa_register 13
 2307              		@ sp needed
 2308 0052 80BC     		pop	{r7}
 2309              		.cfi_restore 7
 2310              		.cfi_def_cfa_offset 0
 2311 0054 7047     		bx	lr
 2312              	.L140:
 2313 0056 00BF     		.align	2
 2314              	.L139:
 2315 0058 3E000000 		.word	currentIgnoreL
 2316 005c 3F000000 		.word	currentIgnoreR
 2317 0060 14000000 		.word	instructionIndex
 2318 0064 00000000 		.word	instructionList
 2319              		.cfi_endproc
 2320              	.LFE77:
 2321              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2322              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2323              		.align	2
 2324              		.global	GetInstructionAtIndex
 2325              		.thumb
 2326              		.thumb_func
 2327              		.type	GetInstructionAtIndex, %function
 2328              	GetInstructionAtIndex:
 2329              	.LFB78:
 672:main.c        **** 
 673:main.c        **** Instruction GetInstructionAtIndex() {
 2330              		.loc 1 673 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 54


 2333              		@ frame_needed = 1, uses_anonymous_args = 0
 2334              		@ link register save eliminated.
 2335 0000 B0B4     		push	{r4, r5, r7}
 2336              		.cfi_def_cfa_offset 12
 2337              		.cfi_offset 4, -12
 2338              		.cfi_offset 5, -8
 2339              		.cfi_offset 7, -4
 2340 0002 89B0     		sub	sp, sp, #36
 2341              		.cfi_def_cfa_offset 48
 2342 0004 00AF     		add	r7, sp, #0
 2343              		.cfi_def_cfa_register 7
 2344 0006 7860     		str	r0, [r7, #4]
 674:main.c        ****     Instruction nextInstruction;
 675:main.c        ****     // input is list of instructions and robot will react accordingly
 676:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2345              		.loc 1 676 0
 2346 0008 164B     		ldr	r3, .L143
 2347 000a 1968     		ldr	r1, [r3]
 2348 000c 164B     		ldr	r3, .L143+4
 2349 000e 1A68     		ldr	r2, [r3]
 2350 0010 1346     		mov	r3, r2
 2351 0012 9B00     		lsls	r3, r3, #2
 2352 0014 1344     		add	r3, r3, r2
 2353 0016 9B00     		lsls	r3, r3, #2
 2354 0018 0B44     		add	r3, r3, r1
 2355 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2356 001c 3B73     		strb	r3, [r7, #12]
 677:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2357              		.loc 1 677 0
 2358 001e 114B     		ldr	r3, .L143
 2359 0020 1968     		ldr	r1, [r3]
 2360 0022 114B     		ldr	r3, .L143+4
 2361 0024 1A68     		ldr	r2, [r3]
 2362 0026 1346     		mov	r3, r2
 2363 0028 9B00     		lsls	r3, r3, #2
 2364 002a 1344     		add	r3, r3, r2
 2365 002c 9B00     		lsls	r3, r3, #2
 2366 002e 0B44     		add	r3, r3, r1
 2367 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2368 0032 3B77     		strb	r3, [r7, #28]
 678:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2369              		.loc 1 678 0
 2370 0034 0B4B     		ldr	r3, .L143
 2371 0036 1968     		ldr	r1, [r3]
 2372 0038 0B4B     		ldr	r3, .L143+4
 2373 003a 1A68     		ldr	r2, [r3]
 2374 003c 1346     		mov	r3, r2
 2375 003e 9B00     		lsls	r3, r3, #2
 2376 0040 1344     		add	r3, r3, r2
 2377 0042 9B00     		lsls	r3, r3, #2
 2378 0044 0B44     		add	r3, r3, r1
 2379 0046 DB68     		ldr	r3, [r3, #12]
 2380 0048 BB61     		str	r3, [r7, #24]
 679:main.c        ****     return nextInstruction;
 2381              		.loc 1 679 0
 2382 004a 7B68     		ldr	r3, [r7, #4]
 2383 004c 1D46     		mov	r5, r3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 55


 2384 004e 07F10C04 		add	r4, r7, #12
 2385 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2386 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2387 0056 2368     		ldr	r3, [r4]
 2388 0058 2B60     		str	r3, [r5]
 680:main.c        **** }
 2389              		.loc 1 680 0
 2390 005a 7868     		ldr	r0, [r7, #4]
 2391 005c 2437     		adds	r7, r7, #36
 2392              		.cfi_def_cfa_offset 12
 2393 005e BD46     		mov	sp, r7
 2394              		.cfi_def_cfa_register 13
 2395              		@ sp needed
 2396 0060 B0BC     		pop	{r4, r5, r7}
 2397              		.cfi_restore 7
 2398              		.cfi_restore 5
 2399              		.cfi_restore 4
 2400              		.cfi_def_cfa_offset 0
 2401 0062 7047     		bx	lr
 2402              	.L144:
 2403              		.align	2
 2404              	.L143:
 2405 0064 00000000 		.word	instructionList
 2406 0068 14000000 		.word	instructionIndex
 2407              		.cfi_endproc
 2408              	.LFE78:
 2409              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2410              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2411              		.align	2
 2412              		.global	RotateClockwise180Degrees
 2413              		.thumb
 2414              		.thumb_func
 2415              		.type	RotateClockwise180Degrees, %function
 2416              	RotateClockwise180Degrees:
 2417              	.LFB79:
 681:main.c        **** 
 682:main.c        **** void RotateClockwise180Degrees() {
 2418              		.loc 1 682 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 8
 2421              		@ frame_needed = 1, uses_anonymous_args = 0
 2422 0000 80B5     		push	{r7, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              		.cfi_def_cfa_offset 16
 2428 0004 00AF     		add	r7, sp, #0
 2429              		.cfi_def_cfa_register 7
 683:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2430              		.loc 1 683 0
 2431 0006 49F20873 		movw	r3, #38664
 2432 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 684:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2433              		.loc 1 684 0
 2434 000c 49F20873 		movw	r3, #38664
 2435 0010 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 56


 685:main.c        ****     PWM_1_WriteCompare(count1);
 2436              		.loc 1 685 0
 2437 0012 7B88     		ldrh	r3, [r7, #2]
 2438 0014 1846     		mov	r0, r3
 2439 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 686:main.c        ****     PWM_2_WriteCompare(count2);
 2440              		.loc 1 686 0
 2441 001a 3B88     		ldrh	r3, [r7]
 2442 001c 1846     		mov	r0, r3
 2443 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 687:main.c        ****     
 688:main.c        ****     int quadPulseCount = 0;
 2444              		.loc 1 688 0
 2445 0022 0023     		movs	r3, #0
 2446 0024 7B60     		str	r3, [r7, #4]
 689:main.c        ****     QuadDec_M1_SetCounter(0);
 2447              		.loc 1 689 0
 2448 0026 0020     		movs	r0, #0
 2449 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 690:main.c        ****     // Before 180, save initial configuration
 691:main.c        ****     if (!s3) {
 2450              		.loc 1 691 0
 2451 002c 3A4B     		ldr	r3, .L158
 2452 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2453 0030 002B     		cmp	r3, #0
 2454 0032 06D1     		bne	.L146
 692:main.c        ****         totalLineCount++;    
 2455              		.loc 1 692 0
 2456 0034 394B     		ldr	r3, .L158+4
 2457 0036 1B78     		ldrb	r3, [r3]
 2458 0038 DBB2     		uxtb	r3, r3
 2459 003a 0133     		adds	r3, r3, #1
 2460 003c DAB2     		uxtb	r2, r3
 2461 003e 374B     		ldr	r3, .L158+4
 2462 0040 1A70     		strb	r2, [r3]
 2463              	.L146:
 693:main.c        ****     }
 694:main.c        ****     if (!s4) {
 2464              		.loc 1 694 0
 2465 0042 374B     		ldr	r3, .L158+8
 2466 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2467 0046 002B     		cmp	r3, #0
 2468 0048 06D1     		bne	.L147
 695:main.c        ****         totalLineCount++;    
 2469              		.loc 1 695 0
 2470 004a 344B     		ldr	r3, .L158+4
 2471 004c 1B78     		ldrb	r3, [r3]
 2472 004e DBB2     		uxtb	r3, r3
 2473 0050 0133     		adds	r3, r3, #1
 2474 0052 DAB2     		uxtb	r2, r3
 2475 0054 314B     		ldr	r3, .L158+4
 2476 0056 1A70     		strb	r2, [r3]
 2477              	.L147:
 696:main.c        ****     }
 697:main.c        ****     if (!s5 || !s6) {
 2478              		.loc 1 697 0
 2479 0058 324B     		ldr	r3, .L158+12
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 57


 2480 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 005c 002B     		cmp	r3, #0
 2482 005e 03D0     		beq	.L148
 2483              		.loc 1 697 0 is_stmt 0 discriminator 1
 2484 0060 314B     		ldr	r3, .L158+16
 2485 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2486 0064 002B     		cmp	r3, #0
 2487 0066 2AD1     		bne	.L150
 2488              	.L148:
 698:main.c        ****         totalLineCount++;    
 2489              		.loc 1 698 0 is_stmt 1
 2490 0068 2C4B     		ldr	r3, .L158+4
 2491 006a 1B78     		ldrb	r3, [r3]
 2492 006c DBB2     		uxtb	r3, r3
 2493 006e 0133     		adds	r3, r3, #1
 2494 0070 DAB2     		uxtb	r2, r3
 2495 0072 2A4B     		ldr	r3, .L158+4
 2496 0074 1A70     		strb	r2, [r3]
 699:main.c        ****     }
 700:main.c        ****     
 701:main.c        ****     // During 180
 702:main.c        ****     while(quadPulseCount < 210) {
 2497              		.loc 1 702 0
 2498 0076 22E0     		b	.L150
 2499              	.L153:
 703:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2500              		.loc 1 703 0
 2501 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2502 007c 0346     		mov	r3, r0
 2503 007e 7B60     		str	r3, [r7, #4]
 704:main.c        ****         if (!s3) {
 2504              		.loc 1 704 0
 2505 0080 254B     		ldr	r3, .L158
 2506 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 0084 002B     		cmp	r3, #0
 2508 0086 02D1     		bne	.L151
 705:main.c        ****             onLineFlag = 1;    
 2509              		.loc 1 705 0
 2510 0088 284B     		ldr	r3, .L158+20
 2511 008a 0122     		movs	r2, #1
 2512 008c 1A70     		strb	r2, [r3]
 2513              	.L151:
 706:main.c        ****         }
 707:main.c        ****         
 708:main.c        ****         if (onLineFlag) {
 2514              		.loc 1 708 0
 2515 008e 274B     		ldr	r3, .L158+20
 2516 0090 1B78     		ldrb	r3, [r3]
 2517 0092 DBB2     		uxtb	r3, r3
 2518 0094 002B     		cmp	r3, #0
 2519 0096 06D0     		beq	.L152
 709:main.c        ****             lineCount++;    
 2520              		.loc 1 709 0
 2521 0098 254B     		ldr	r3, .L158+24
 2522 009a 1B78     		ldrb	r3, [r3]
 2523 009c DBB2     		uxtb	r3, r3
 2524 009e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 58


 2525 00a0 DAB2     		uxtb	r2, r3
 2526 00a2 234B     		ldr	r3, .L158+24
 2527 00a4 1A70     		strb	r2, [r3]
 2528              	.L152:
 710:main.c        ****         }
 711:main.c        ****         
 712:main.c        ****         if (!onLineFlag) {
 2529              		.loc 1 712 0
 2530 00a6 214B     		ldr	r3, .L158+20
 2531 00a8 1B78     		ldrb	r3, [r3]
 2532 00aa DBB2     		uxtb	r3, r3
 2533 00ac 002B     		cmp	r3, #0
 2534 00ae 06D1     		bne	.L150
 713:main.c        ****             if (s3) {
 2535              		.loc 1 713 0
 2536 00b0 194B     		ldr	r3, .L158
 2537 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2538 00b4 002B     		cmp	r3, #0
 2539 00b6 02D0     		beq	.L150
 714:main.c        ****                 onLineFlag = 0;    
 2540              		.loc 1 714 0
 2541 00b8 1C4B     		ldr	r3, .L158+20
 2542 00ba 0022     		movs	r2, #0
 2543 00bc 1A70     		strb	r2, [r3]
 2544              	.L150:
 702:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2545              		.loc 1 702 0
 2546 00be 7B68     		ldr	r3, [r7, #4]
 2547 00c0 D12B     		cmp	r3, #209
 2548 00c2 D9DD     		ble	.L153
 715:main.c        ****             }
 716:main.c        ****         }
 717:main.c        ****     }
 718:main.c        ****     
 719:main.c        ****     // After 180
 720:main.c        ****     if (totalLineCount == 0) {
 2549              		.loc 1 720 0
 2550 00c4 154B     		ldr	r3, .L158+4
 2551 00c6 1B78     		ldrb	r3, [r3]
 2552 00c8 DBB2     		uxtb	r3, r3
 2553 00ca 002B     		cmp	r3, #0
 2554 00cc 06D1     		bne	.L154
 721:main.c        ****         // we are on no lines
 722:main.c        ****         tooEarlyFlag = 1;
 2555              		.loc 1 722 0
 2556 00ce 194B     		ldr	r3, .L158+28
 2557 00d0 0122     		movs	r2, #1
 2558 00d2 1A70     		strb	r2, [r3]
 723:main.c        ****         QuadDec_M1_SetCounter(0);
 2559              		.loc 1 723 0
 2560 00d4 0020     		movs	r0, #0
 2561 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 724:main.c        ****         return;
 2562              		.loc 1 724 0
 2563 00da 19E0     		b	.L145
 2564              	.L154:
 725:main.c        ****     }
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 59


 726:main.c        ****     else if (lineCount > totalLineCount) {
 2565              		.loc 1 726 0
 2566 00dc 144B     		ldr	r3, .L158+24
 2567 00de 1B78     		ldrb	r3, [r3]
 2568 00e0 DAB2     		uxtb	r2, r3
 2569 00e2 0E4B     		ldr	r3, .L158+4
 2570 00e4 1B78     		ldrb	r3, [r3]
 2571 00e6 DBB2     		uxtb	r3, r3
 2572 00e8 9A42     		cmp	r2, r3
 2573 00ea 03D9     		bls	.L156
 727:main.c        ****         tooLateFlag = 1;    
 2574              		.loc 1 727 0
 2575 00ec 124B     		ldr	r3, .L158+32
 2576 00ee 0122     		movs	r2, #1
 2577 00f0 1A70     		strb	r2, [r3]
 2578 00f2 0AE0     		b	.L157
 2579              	.L156:
 728:main.c        ****     }
 729:main.c        ****     else if (lineCount < totalLineCount) {
 2580              		.loc 1 729 0
 2581 00f4 0E4B     		ldr	r3, .L158+24
 2582 00f6 1B78     		ldrb	r3, [r3]
 2583 00f8 DAB2     		uxtb	r2, r3
 2584 00fa 084B     		ldr	r3, .L158+4
 2585 00fc 1B78     		ldrb	r3, [r3]
 2586 00fe DBB2     		uxtb	r3, r3
 2587 0100 9A42     		cmp	r2, r3
 2588 0102 02D2     		bcs	.L157
 730:main.c        ****         tooEarlyFlag = 1;    
 2589              		.loc 1 730 0
 2590 0104 0B4B     		ldr	r3, .L158+28
 2591 0106 0122     		movs	r2, #1
 2592 0108 1A70     		strb	r2, [r3]
 2593              	.L157:
 731:main.c        ****     }
 732:main.c        ****     QuadDec_M1_SetCounter(0);
 2594              		.loc 1 732 0
 2595 010a 0020     		movs	r0, #0
 2596 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2597              	.L145:
 733:main.c        **** }
 2598              		.loc 1 733 0
 2599 0110 0837     		adds	r7, r7, #8
 2600              		.cfi_def_cfa_offset 8
 2601 0112 BD46     		mov	sp, r7
 2602              		.cfi_def_cfa_register 13
 2603              		@ sp needed
 2604 0114 80BD     		pop	{r7, pc}
 2605              	.L159:
 2606 0116 00BF     		.align	2
 2607              	.L158:
 2608 0118 00000000 		.word	s3
 2609 011c 40000000 		.word	totalLineCount
 2610 0120 00000000 		.word	s4
 2611 0124 00000000 		.word	s5
 2612 0128 00000000 		.word	s6
 2613 012c 42000000 		.word	onLineFlag
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 60


 2614 0130 41000000 		.word	lineCount
 2615 0134 43000000 		.word	tooEarlyFlag
 2616 0138 44000000 		.word	tooLateFlag
 2617              		.cfi_endproc
 2618              	.LFE79:
 2619              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2620              		.section	.text.SetRobotMovement,"ax",%progbits
 2621              		.align	2
 2622              		.global	SetRobotMovement
 2623              		.thumb
 2624              		.thumb_func
 2625              		.type	SetRobotMovement, %function
 2626              	SetRobotMovement:
 2627              	.LFB80:
 734:main.c        **** 
 735:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 736:main.c        **** void SetRobotMovement() {
 2628              		.loc 1 736 0
 2629              		.cfi_startproc
 2630              		@ args = 0, pretend = 0, frame = 24
 2631              		@ frame_needed = 1, uses_anonymous_args = 0
 2632 0000 B0B5     		push	{r4, r5, r7, lr}
 2633              		.cfi_def_cfa_offset 16
 2634              		.cfi_offset 4, -16
 2635              		.cfi_offset 5, -12
 2636              		.cfi_offset 7, -8
 2637              		.cfi_offset 14, -4
 2638 0002 86B0     		sub	sp, sp, #24
 2639              		.cfi_def_cfa_offset 40
 2640 0004 00AF     		add	r7, sp, #0
 2641              		.cfi_def_cfa_register 7
 737:main.c        ****     //MoveToNextInstruction(); // debug purposes
 738:main.c        ****     previousInstruction = currentInstruction;
 2642              		.loc 1 738 0
 2643 0006 2D4A     		ldr	r2, .L176
 2644 0008 2D4B     		ldr	r3, .L176+4
 2645 000a 1446     		mov	r4, r2
 2646 000c 1D46     		mov	r5, r3
 2647 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2648 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2649 0012 2B68     		ldr	r3, [r5]
 2650 0014 2360     		str	r3, [r4]
 739:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2651              		.loc 1 739 0
 2652 0016 2A4C     		ldr	r4, .L176+4
 2653 0018 3B46     		mov	r3, r7
 2654 001a 1846     		mov	r0, r3
 2655 001c FFF7FEFF 		bl	GetInstructionAtIndex
 2656 0020 2546     		mov	r5, r4
 2657 0022 3C46     		mov	r4, r7
 2658 0024 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2659 0026 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2660 0028 2368     		ldr	r3, [r4]
 2661 002a 2B60     		str	r3, [r5]
 740:main.c        ****     previousDirection = currentDirection;
 2662              		.loc 1 740 0
 2663 002c 254B     		ldr	r3, .L176+8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 61


 2664 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2665 0030 254B     		ldr	r3, .L176+12
 2666 0032 1A70     		strb	r2, [r3]
 741:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2667              		.loc 1 741 0
 2668 0034 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2669 0038 0346     		mov	r3, r0
 2670 003a 1A46     		mov	r2, r3
 2671 003c 214B     		ldr	r3, .L176+8
 2672 003e 1A70     		strb	r2, [r3]
 742:main.c        ****     // move robot depending on sensors
 743:main.c        ****     switch (currentDirection) {
 2673              		.loc 1 743 0
 2674 0040 204B     		ldr	r3, .L176+8
 2675 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2676 0044 0A2B     		cmp	r3, #10
 2677 0046 35D8     		bhi	.L174
 2678 0048 01A2     		adr	r2, .L163
 2679 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2680 004e 00BF     		.p2align 2
 2681              	.L163:
 2682 0050 7D000000 		.word	.L162+1
 2683 0054 83000000 		.word	.L164+1
 2684 0058 89000000 		.word	.L165+1
 2685 005c 95000000 		.word	.L166+1
 2686 0060 8F000000 		.word	.L167+1
 2687 0064 9B000000 		.word	.L168+1
 2688 0068 B3000000 		.word	.L175+1
 2689 006c B3000000 		.word	.L175+1
 2690 0070 A1000000 		.word	.L171+1
 2691 0074 A7000000 		.word	.L172+1
 2692 0078 AD000000 		.word	.L173+1
 2693              		.p2align 1
 2694              	.L162:
 744:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 745:main.c        ****         case Forward:
 746:main.c        ****             moveForward();
 2695              		.loc 1 746 0
 2696 007c FFF7FEFF 		bl	moveForward
 747:main.c        ****             break;
 2697              		.loc 1 747 0
 2698 0080 18E0     		b	.L161
 2699              	.L164:
 748:main.c        ****         case TurnRight:
 749:main.c        ****             turnRight();
 2700              		.loc 1 749 0
 2701 0082 FFF7FEFF 		bl	turnRight
 750:main.c        ****             break;
 2702              		.loc 1 750 0
 2703 0086 15E0     		b	.L161
 2704              	.L165:
 751:main.c        ****         case TurnLeft:
 752:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2705              		.loc 1 752 0
 2706 0088 FFF7FEFF 		bl	turnLeft
 753:main.c        ****             break;
 2707              		.loc 1 753 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 62


 2708 008c 12E0     		b	.L161
 2709              	.L167:
 754:main.c        ****         case AdjustToTheRight:
 755:main.c        ****             adjustRight();
 2710              		.loc 1 755 0
 2711 008e FFF7FEFF 		bl	adjustRight
 756:main.c        ****             break;
 2712              		.loc 1 756 0
 2713 0092 0FE0     		b	.L161
 2714              	.L166:
 757:main.c        ****         case AdjustToTheLeft:
 758:main.c        ****             adjustLeft();
 2715              		.loc 1 758 0
 2716 0094 FFF7FEFF 		bl	adjustLeft
 759:main.c        ****             break;
 2717              		.loc 1 759 0
 2718 0098 0CE0     		b	.L161
 2719              	.L168:
 760:main.c        ****         case Stop:
 761:main.c        ****             stopMoving();
 2720              		.loc 1 761 0
 2721 009a FFF7FEFF 		bl	stopMoving
 762:main.c        ****             break;
 2722              		.loc 1 762 0
 2723 009e 09E0     		b	.L161
 2724              	.L171:
 763:main.c        ****         case ForwardAfterTurn:
 764:main.c        ****             moveForward();
 2725              		.loc 1 764 0
 2726 00a0 FFF7FEFF 		bl	moveForward
 765:main.c        ****             break;
 2727              		.loc 1 765 0
 2728 00a4 06E0     		b	.L161
 2729              	.L172:
 766:main.c        ****         case Backward:
 767:main.c        ****             moveBackward();
 2730              		.loc 1 767 0
 2731 00a6 FFF7FEFF 		bl	moveBackward
 768:main.c        ****             break;
 2732              		.loc 1 768 0
 2733 00aa 03E0     		b	.L161
 2734              	.L173:
 769:main.c        ****         case waitForTurn:
 770:main.c        ****             break;
 771:main.c        ****         case Spin180:
 772:main.c        ****             RotateClockwise180Degrees();
 2735              		.loc 1 772 0
 2736 00ac FFF7FEFF 		bl	RotateClockwise180Degrees
 773:main.c        ****             break;
 2737              		.loc 1 773 0
 2738 00b0 00E0     		b	.L161
 2739              	.L175:
 774:main.c        ****         case Unknown:
 775:main.c        ****             break;  
 2740              		.loc 1 775 0
 2741 00b2 00BF     		nop
 2742              	.L161:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 63


 2743              	.L174:
 776:main.c        ****     }
 777:main.c        **** }
 2744              		.loc 1 777 0
 2745 00b4 00BF     		nop
 2746 00b6 1837     		adds	r7, r7, #24
 2747              		.cfi_def_cfa_offset 16
 2748 00b8 BD46     		mov	sp, r7
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed
 2751 00ba B0BD     		pop	{r4, r5, r7, pc}
 2752              	.L177:
 2753              		.align	2
 2754              	.L176:
 2755 00bc 00000000 		.word	previousInstruction
 2756 00c0 00000000 		.word	currentInstruction
 2757 00c4 00000000 		.word	currentDirection
 2758 00c8 00000000 		.word	previousDirection
 2759              		.cfi_endproc
 2760              	.LFE80:
 2761              		.size	SetRobotMovement, .-SetRobotMovement
 2762              		.text
 2763              	.Letext0:
 2764              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2765              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2766              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2767              		.file 5 "vars.h"
 2768              		.file 6 "pathfinding.h"
 2769              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2770              		.file 8 "map.h"
 2771              		.section	.debug_info,"",%progbits
 2772              	.Ldebug_info0:
 2773 0000 130A0000 		.4byte	0xa13
 2774 0004 0400     		.2byte	0x4
 2775 0006 00000000 		.4byte	.Ldebug_abbrev0
 2776 000a 04       		.byte	0x4
 2777 000b 01       		.uleb128 0x1
 2778 000c A4000000 		.4byte	.LASF158
 2779 0010 0C       		.byte	0xc
 2780 0011 5E040000 		.4byte	.LASF159
 2781 0015 BF070000 		.4byte	.LASF160
 2782 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2783 001d 00000000 		.4byte	0
 2784 0021 00000000 		.4byte	.Ldebug_line0
 2785 0025 02       		.uleb128 0x2
 2786 0026 01       		.byte	0x1
 2787 0027 06       		.byte	0x6
 2788 0028 79000000 		.4byte	.LASF0
 2789 002c 02       		.uleb128 0x2
 2790 002d 01       		.byte	0x1
 2791 002e 08       		.byte	0x8
 2792 002f 17060000 		.4byte	.LASF1
 2793 0033 02       		.uleb128 0x2
 2794 0034 02       		.byte	0x2
 2795 0035 05       		.byte	0x5
 2796 0036 83040000 		.4byte	.LASF2
 2797 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 64


 2798 003b 02       		.byte	0x2
 2799 003c 07       		.byte	0x7
 2800 003d FA030000 		.4byte	.LASF3
 2801 0041 03       		.uleb128 0x3
 2802 0042 54040000 		.4byte	.LASF12
 2803 0046 02       		.byte	0x2
 2804 0047 3F       		.byte	0x3f
 2805 0048 4C000000 		.4byte	0x4c
 2806 004c 02       		.uleb128 0x2
 2807 004d 04       		.byte	0x4
 2808 004e 05       		.byte	0x5
 2809 004f 33020000 		.4byte	.LASF4
 2810 0053 02       		.uleb128 0x2
 2811 0054 04       		.byte	0x4
 2812 0055 07       		.byte	0x7
 2813 0056 9F030000 		.4byte	.LASF5
 2814 005a 02       		.uleb128 0x2
 2815 005b 08       		.byte	0x8
 2816 005c 05       		.byte	0x5
 2817 005d 9C020000 		.4byte	.LASF6
 2818 0061 02       		.uleb128 0x2
 2819 0062 08       		.byte	0x8
 2820 0063 07       		.byte	0x7
 2821 0064 54010000 		.4byte	.LASF7
 2822 0068 04       		.uleb128 0x4
 2823 0069 04       		.byte	0x4
 2824 006a 05       		.byte	0x5
 2825 006b 696E7400 		.ascii	"int\000"
 2826 006f 02       		.uleb128 0x2
 2827 0070 04       		.byte	0x4
 2828 0071 07       		.byte	0x7
 2829 0072 45070000 		.4byte	.LASF8
 2830 0076 02       		.uleb128 0x2
 2831 0077 08       		.byte	0x8
 2832 0078 04       		.byte	0x4
 2833 0079 24070000 		.4byte	.LASF9
 2834 007d 02       		.uleb128 0x2
 2835 007e 04       		.byte	0x4
 2836 007f 07       		.byte	0x7
 2837 0080 0E050000 		.4byte	.LASF10
 2838 0084 02       		.uleb128 0x2
 2839 0085 01       		.byte	0x1
 2840 0086 08       		.byte	0x8
 2841 0087 30070000 		.4byte	.LASF11
 2842 008b 03       		.uleb128 0x3
 2843 008c 0F060000 		.4byte	.LASF13
 2844 0090 03       		.byte	0x3
 2845 0091 2C       		.byte	0x2c
 2846 0092 41000000 		.4byte	0x41
 2847 0096 05       		.uleb128 0x5
 2848 0097 96020000 		.4byte	.LASF14
 2849 009b 04       		.byte	0x4
 2850 009c E901     		.2byte	0x1e9
 2851 009e 2C000000 		.4byte	0x2c
 2852 00a2 05       		.uleb128 0x5
 2853 00a3 25060000 		.4byte	.LASF15
 2854 00a7 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 65


 2855 00a8 EA01     		.2byte	0x1ea
 2856 00aa 3A000000 		.4byte	0x3a
 2857 00ae 05       		.uleb128 0x5
 2858 00af 14030000 		.4byte	.LASF16
 2859 00b3 04       		.byte	0x4
 2860 00b4 EB01     		.2byte	0x1eb
 2861 00b6 53000000 		.4byte	0x53
 2862 00ba 05       		.uleb128 0x5
 2863 00bb 44040000 		.4byte	.LASF17
 2864 00bf 04       		.byte	0x4
 2865 00c0 EC01     		.2byte	0x1ec
 2866 00c2 25000000 		.4byte	0x25
 2867 00c6 05       		.uleb128 0x5
 2868 00c7 D5080000 		.4byte	.LASF18
 2869 00cb 04       		.byte	0x4
 2870 00cc ED01     		.2byte	0x1ed
 2871 00ce 33000000 		.4byte	0x33
 2872 00d2 02       		.uleb128 0x2
 2873 00d3 04       		.byte	0x4
 2874 00d4 04       		.byte	0x4
 2875 00d5 B4050000 		.4byte	.LASF19
 2876 00d9 02       		.uleb128 0x2
 2877 00da 08       		.byte	0x8
 2878 00db 04       		.byte	0x4
 2879 00dc AA020000 		.4byte	.LASF20
 2880 00e0 06       		.uleb128 0x6
 2881 00e1 96000000 		.4byte	0x96
 2882 00e5 06       		.uleb128 0x6
 2883 00e6 AE000000 		.4byte	0xae
 2884 00ea 07       		.uleb128 0x7
 2885 00eb 96000000 		.4byte	0x96
 2886 00ef FA000000 		.4byte	0xfa
 2887 00f3 08       		.uleb128 0x8
 2888 00f4 7D000000 		.4byte	0x7d
 2889 00f8 03       		.byte	0x3
 2890 00f9 00       		.byte	0
 2891 00fa 09       		.uleb128 0x9
 2892 00fb 84030000 		.4byte	.LASF49
 2893 00ff 20       		.byte	0x20
 2894 0100 05       		.byte	0x5
 2895 0101 28       		.byte	0x28
 2896 0102 D3010000 		.4byte	0x1d3
 2897 0106 0A       		.uleb128 0xa
 2898 0107 52070000 		.4byte	.LASF21
 2899 010b 05       		.byte	0x5
 2900 010c 2A       		.byte	0x2a
 2901 010d BA000000 		.4byte	0xba
 2902 0111 00       		.byte	0
 2903 0112 0A       		.uleb128 0xa
 2904 0113 57070000 		.4byte	.LASF22
 2905 0117 05       		.byte	0x5
 2906 0118 2B       		.byte	0x2b
 2907 0119 96000000 		.4byte	0x96
 2908 011d 01       		.byte	0x1
 2909 011e 0A       		.uleb128 0xa
 2910 011f 9C070000 		.4byte	.LASF23
 2911 0123 05       		.byte	0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 66


 2912 0124 2C       		.byte	0x2c
 2913 0125 C6000000 		.4byte	0xc6
 2914 0129 02       		.byte	0x2
 2915 012a 0A       		.uleb128 0xa
 2916 012b A9060000 		.4byte	.LASF24
 2917 012f 05       		.byte	0x5
 2918 0130 2D       		.byte	0x2d
 2919 0131 C6000000 		.4byte	0xc6
 2920 0135 04       		.byte	0x4
 2921 0136 0A       		.uleb128 0xa
 2922 0137 34090000 		.4byte	.LASF25
 2923 013b 05       		.byte	0x5
 2924 013c 2E       		.byte	0x2e
 2925 013d C6000000 		.4byte	0xc6
 2926 0141 06       		.byte	0x6
 2927 0142 0A       		.uleb128 0xa
 2928 0143 85010000 		.4byte	.LASF26
 2929 0147 05       		.byte	0x5
 2930 0148 2F       		.byte	0x2f
 2931 0149 C6000000 		.4byte	0xc6
 2932 014d 08       		.byte	0x8
 2933 014e 0A       		.uleb128 0xa
 2934 014f 35070000 		.4byte	.LASF27
 2935 0153 05       		.byte	0x5
 2936 0154 30       		.byte	0x30
 2937 0155 C6000000 		.4byte	0xc6
 2938 0159 0A       		.byte	0xa
 2939 015a 0A       		.uleb128 0xa
 2940 015b 13090000 		.4byte	.LASF28
 2941 015f 05       		.byte	0x5
 2942 0160 31       		.byte	0x31
 2943 0161 C6000000 		.4byte	0xc6
 2944 0165 0C       		.byte	0xc
 2945 0166 0A       		.uleb128 0xa
 2946 0167 41010000 		.4byte	.LASF29
 2947 016b 05       		.byte	0x5
 2948 016c 32       		.byte	0x32
 2949 016d C6000000 		.4byte	0xc6
 2950 0171 0E       		.byte	0xe
 2951 0172 0A       		.uleb128 0xa
 2952 0173 56050000 		.4byte	.LASF30
 2953 0177 05       		.byte	0x5
 2954 0178 33       		.byte	0x33
 2955 0179 C6000000 		.4byte	0xc6
 2956 017d 10       		.byte	0x10
 2957 017e 0A       		.uleb128 0xa
 2958 017f 65040000 		.4byte	.LASF31
 2959 0183 05       		.byte	0x5
 2960 0184 34       		.byte	0x34
 2961 0185 C6000000 		.4byte	0xc6
 2962 0189 12       		.byte	0x12
 2963 018a 0A       		.uleb128 0xa
 2964 018b EE040000 		.4byte	.LASF32
 2965 018f 05       		.byte	0x5
 2966 0190 35       		.byte	0x35
 2967 0191 C6000000 		.4byte	0xc6
 2968 0195 14       		.byte	0x14
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 67


 2969 0196 0A       		.uleb128 0xa
 2970 0197 2F050000 		.4byte	.LASF33
 2971 019b 05       		.byte	0x5
 2972 019c 36       		.byte	0x36
 2973 019d C6000000 		.4byte	0xc6
 2974 01a1 16       		.byte	0x16
 2975 01a2 0A       		.uleb128 0xa
 2976 01a3 41060000 		.4byte	.LASF34
 2977 01a7 05       		.byte	0x5
 2978 01a8 37       		.byte	0x37
 2979 01a9 C6000000 		.4byte	0xc6
 2980 01ad 18       		.byte	0x18
 2981 01ae 0A       		.uleb128 0xa
 2982 01af 5E050000 		.4byte	.LASF35
 2983 01b3 05       		.byte	0x5
 2984 01b4 38       		.byte	0x38
 2985 01b5 C6000000 		.4byte	0xc6
 2986 01b9 1A       		.byte	0x1a
 2987 01ba 0A       		.uleb128 0xa
 2988 01bb 1F000000 		.4byte	.LASF36
 2989 01bf 05       		.byte	0x5
 2990 01c0 39       		.byte	0x39
 2991 01c1 C6000000 		.4byte	0xc6
 2992 01c5 1C       		.byte	0x1c
 2993 01c6 0A       		.uleb128 0xa
 2994 01c7 36030000 		.4byte	.LASF37
 2995 01cb 05       		.byte	0x5
 2996 01cc 3A       		.byte	0x3a
 2997 01cd C6000000 		.4byte	0xc6
 2998 01d1 1E       		.byte	0x1e
 2999 01d2 00       		.byte	0
 3000 01d3 0B       		.uleb128 0xb
 3001 01d4 0E000000 		.4byte	.LASF41
 3002 01d8 01       		.byte	0x1
 3003 01d9 2C000000 		.4byte	0x2c
 3004 01dd 06       		.byte	0x6
 3005 01de 0D       		.byte	0xd
 3006 01df FB010000 		.4byte	0x1fb
 3007 01e3 0C       		.uleb128 0xc
 3008 01e4 557000   		.ascii	"Up\000"
 3009 01e7 00       		.byte	0
 3010 01e8 0D       		.uleb128 0xd
 3011 01e9 73070000 		.4byte	.LASF38
 3012 01ed 01       		.byte	0x1
 3013 01ee 0D       		.uleb128 0xd
 3014 01ef F7040000 		.4byte	.LASF39
 3015 01f3 02       		.byte	0x2
 3016 01f4 0D       		.uleb128 0xd
 3017 01f5 CE060000 		.4byte	.LASF40
 3018 01f9 03       		.byte	0x3
 3019 01fa 00       		.byte	0
 3020 01fb 0B       		.uleb128 0xb
 3021 01fc 2C060000 		.4byte	.LASF42
 3022 0200 01       		.byte	0x1
 3023 0201 2C000000 		.4byte	0x2c
 3024 0205 06       		.byte	0x6
 3025 0206 0E       		.byte	0xe
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 68


 3026 0207 30020000 		.4byte	0x230
 3027 020b 0D       		.uleb128 0xd
 3028 020c C4060000 		.4byte	.LASF43
 3029 0210 00       		.byte	0
 3030 0211 0D       		.uleb128 0xd
 3031 0212 46050000 		.4byte	.LASF44
 3032 0216 01       		.byte	0x1
 3033 0217 0D       		.uleb128 0xd
 3034 0218 67080000 		.4byte	.LASF45
 3035 021c 02       		.byte	0x2
 3036 021d 0D       		.uleb128 0xd
 3037 021e 7F010000 		.4byte	.LASF46
 3038 0222 03       		.byte	0x3
 3039 0223 0D       		.uleb128 0xd
 3040 0224 7A020000 		.4byte	.LASF47
 3041 0228 04       		.byte	0x4
 3042 0229 0D       		.uleb128 0xd
 3043 022a B4010000 		.4byte	.LASF48
 3044 022e 05       		.byte	0x5
 3045 022f 00       		.byte	0
 3046 0230 09       		.uleb128 0x9
 3047 0231 17020000 		.4byte	.LASF50
 3048 0235 14       		.byte	0x14
 3049 0236 06       		.byte	0x6
 3050 0237 10       		.byte	0x10
 3051 0238 79020000 		.4byte	0x279
 3052 023c 0A       		.uleb128 0xa
 3053 023d 91000000 		.4byte	.LASF51
 3054 0241 06       		.byte	0x6
 3055 0242 11       		.byte	0x11
 3056 0243 FB010000 		.4byte	0x1fb
 3057 0247 00       		.byte	0
 3058 0248 0A       		.uleb128 0xa
 3059 0249 EA080000 		.4byte	.LASF52
 3060 024d 06       		.byte	0x6
 3061 024e 12       		.byte	0x12
 3062 024f 68000000 		.4byte	0x68
 3063 0253 04       		.byte	0x4
 3064 0254 0A       		.uleb128 0xa
 3065 0255 FB080000 		.4byte	.LASF53
 3066 0259 06       		.byte	0x6
 3067 025a 13       		.byte	0x13
 3068 025b 68000000 		.4byte	0x68
 3069 025f 08       		.byte	0x8
 3070 0260 0A       		.uleb128 0xa
 3071 0261 A3010000 		.4byte	.LASF54
 3072 0265 06       		.byte	0x6
 3073 0266 14       		.byte	0x14
 3074 0267 68000000 		.4byte	0x68
 3075 026b 0C       		.byte	0xc
 3076 026c 0A       		.uleb128 0xa
 3077 026d 6B010000 		.4byte	.LASF55
 3078 0271 06       		.byte	0x6
 3079 0272 15       		.byte	0x15
 3080 0273 D3010000 		.4byte	0x1d3
 3081 0277 10       		.byte	0x10
 3082 0278 00       		.byte	0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 69


 3083 0279 03       		.uleb128 0x3
 3084 027a 17020000 		.4byte	.LASF50
 3085 027e 06       		.byte	0x6
 3086 027f 16       		.byte	0x16
 3087 0280 30020000 		.4byte	0x230
 3088 0284 0B       		.uleb128 0xb
 3089 0285 46000000 		.4byte	.LASF56
 3090 0289 01       		.byte	0x1
 3091 028a 2C000000 		.4byte	0x2c
 3092 028e 01       		.byte	0x1
 3093 028f 18       		.byte	0x18
 3094 0290 D7020000 		.4byte	0x2d7
 3095 0294 0D       		.uleb128 0xd
 3096 0295 F2030000 		.4byte	.LASF57
 3097 0299 00       		.byte	0
 3098 029a 0D       		.uleb128 0xd
 3099 029b 69030000 		.4byte	.LASF58
 3100 029f 01       		.byte	0x1
 3101 02a0 0D       		.uleb128 0xd
 3102 02a1 F2080000 		.4byte	.LASF59
 3103 02a5 02       		.byte	0x2
 3104 02a6 0D       		.uleb128 0xd
 3105 02a7 B4060000 		.4byte	.LASF60
 3106 02ab 03       		.byte	0x3
 3107 02ac 0D       		.uleb128 0xd
 3108 02ad E3020000 		.4byte	.LASF61
 3109 02b1 04       		.byte	0x4
 3110 02b2 0D       		.uleb128 0xd
 3111 02b3 2E020000 		.4byte	.LASF62
 3112 02b7 05       		.byte	0x5
 3113 02b8 0D       		.uleb128 0xd
 3114 02b9 CC050000 		.4byte	.LASF63
 3115 02bd 06       		.byte	0x6
 3116 02be 0D       		.uleb128 0xd
 3117 02bf E6030000 		.4byte	.LASF64
 3118 02c3 07       		.byte	0x7
 3119 02c4 0D       		.uleb128 0xd
 3120 02c5 73030000 		.4byte	.LASF65
 3121 02c9 08       		.byte	0x8
 3122 02ca 0D       		.uleb128 0xd
 3123 02cb 8D020000 		.4byte	.LASF66
 3124 02cf 09       		.byte	0x9
 3125 02d0 0D       		.uleb128 0xd
 3126 02d1 3D070000 		.4byte	.LASF67
 3127 02d5 0A       		.byte	0xa
 3128 02d6 00       		.byte	0
 3129 02d7 0E       		.uleb128 0xe
 3130 02d8 49040000 		.4byte	.LASF78
 3131 02dc 01       		.byte	0x1
 3132 02dd 55       		.byte	0x55
 3133 02de 00000000 		.4byte	.LFB64
 3134 02e2 EC000000 		.4byte	.LFE64-.LFB64
 3135 02e6 01       		.uleb128 0x1
 3136 02e7 9C       		.byte	0x9c
 3137 02e8 05030000 		.4byte	0x305
 3138 02ec 0F       		.uleb128 0xf
 3139 02ed 50000000 		.4byte	.LBB2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 70


 3140 02f1 62000000 		.4byte	.LBE2-.LBB2
 3141 02f5 10       		.uleb128 0x10
 3142 02f6 18070000 		.4byte	.LASF74
 3143 02fa 01       		.byte	0x1
 3144 02fb 62       		.byte	0x62
 3145 02fc D2000000 		.4byte	0xd2
 3146 0300 02       		.uleb128 0x2
 3147 0301 91       		.byte	0x91
 3148 0302 6C       		.sleb128 -20
 3149 0303 00       		.byte	0
 3150 0304 00       		.byte	0
 3151 0305 11       		.uleb128 0x11
 3152 0306 E0010000 		.4byte	.LASF68
 3153 030a 01       		.byte	0x1
 3154 030b 6D       		.byte	0x6d
 3155 030c 00000000 		.4byte	.LFB65
 3156 0310 18000000 		.4byte	.LFE65-.LFB65
 3157 0314 01       		.uleb128 0x1
 3158 0315 9C       		.byte	0x9c
 3159 0316 11       		.uleb128 0x11
 3160 0317 85000000 		.4byte	.LASF69
 3161 031b 01       		.byte	0x1
 3162 031c 73       		.byte	0x73
 3163 031d 00000000 		.4byte	.LFB66
 3164 0321 18000000 		.4byte	.LFE66-.LFB66
 3165 0325 01       		.uleb128 0x1
 3166 0326 9C       		.byte	0x9c
 3167 0327 11       		.uleb128 0x11
 3168 0328 FB010000 		.4byte	.LASF70
 3169 032c 01       		.byte	0x1
 3170 032d 79       		.byte	0x79
 3171 032e 00000000 		.4byte	.LFB67
 3172 0332 18000000 		.4byte	.LFE67-.LFB67
 3173 0336 01       		.uleb128 0x1
 3174 0337 9C       		.byte	0x9c
 3175 0338 11       		.uleb128 0x11
 3176 0339 5D070000 		.4byte	.LASF71
 3177 033d 01       		.byte	0x1
 3178 033e 7F       		.byte	0x7f
 3179 033f 00000000 		.4byte	.LFB68
 3180 0343 18000000 		.4byte	.LFE68-.LFB68
 3181 0347 01       		.uleb128 0x1
 3182 0348 9C       		.byte	0x9c
 3183 0349 12       		.uleb128 0x12
 3184 034a B7080000 		.4byte	.LASF72
 3185 034e 01       		.byte	0x1
 3186 034f 85       		.byte	0x85
 3187 0350 00000000 		.4byte	.LFB69
 3188 0354 70000000 		.4byte	.LFE69-.LFB69
 3189 0358 01       		.uleb128 0x1
 3190 0359 9C       		.byte	0x9c
 3191 035a 13       		.uleb128 0x13
 3192 035b CF020000 		.4byte	.LASF73
 3193 035f 01       		.byte	0x1
 3194 0360 99       		.byte	0x99
 3195 0361 68000000 		.4byte	0x68
 3196 0365 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 71


 3197 0369 04010000 		.4byte	.LFE70-.LFB70
 3198 036d 01       		.uleb128 0x1
 3199 036e 9C       		.byte	0x9c
 3200 036f 14       		.uleb128 0x14
 3201 0370 DB080000 		.4byte	.LASF161
 3202 0374 01       		.byte	0x1
 3203 0375 C0       		.byte	0xc0
 3204 0376 C6000000 		.4byte	0xc6
 3205 037a 00000000 		.4byte	.LFB71
 3206 037e 54000000 		.4byte	.LFE71-.LFB71
 3207 0382 01       		.uleb128 0x1
 3208 0383 9C       		.byte	0x9c
 3209 0384 B3030000 		.4byte	0x3b3
 3210 0388 15       		.uleb128 0x15
 3211 0389 2B030000 		.4byte	.LASF162
 3212 038d 01       		.byte	0x1
 3213 038e C0       		.byte	0xc0
 3214 038f A2000000 		.4byte	0xa2
 3215 0393 02       		.uleb128 0x2
 3216 0394 91       		.byte	0x91
 3217 0395 66       		.sleb128 -26
 3218 0396 16       		.uleb128 0x16
 3219 0397 63707300 		.ascii	"cps\000"
 3220 039b 01       		.byte	0x1
 3221 039c C1       		.byte	0xc1
 3222 039d D2000000 		.4byte	0xd2
 3223 03a1 02       		.uleb128 0x2
 3224 03a2 91       		.byte	0x91
 3225 03a3 6C       		.sleb128 -20
 3226 03a4 16       		.uleb128 0x16
 3227 03a5 72706D00 		.ascii	"rpm\000"
 3228 03a9 01       		.byte	0x1
 3229 03aa C2       		.byte	0xc2
 3230 03ab C6000000 		.4byte	0xc6
 3231 03af 02       		.uleb128 0x2
 3232 03b0 91       		.byte	0x91
 3233 03b1 6A       		.sleb128 -22
 3234 03b2 00       		.byte	0
 3235 03b3 17       		.uleb128 0x17
 3236 03b4 C4080000 		.4byte	.LASF83
 3237 03b8 01       		.byte	0x1
 3238 03b9 CA       		.byte	0xca
 3239 03ba 00000000 		.4byte	.LFB72
 3240 03be 34000000 		.4byte	.LFE72-.LFB72
 3241 03c2 01       		.uleb128 0x1
 3242 03c3 9C       		.byte	0x9c
 3243 03c4 18       		.uleb128 0x18
 3244 03c5 BC040000 		.4byte	.LASF75
 3245 03c9 01       		.byte	0x1
 3246 03ca DB       		.byte	0xdb
 3247 03cb 84020000 		.4byte	0x284
 3248 03cf 00000000 		.4byte	.LFB73
 3249 03d3 84000000 		.4byte	.LFE73-.LFB73
 3250 03d7 01       		.uleb128 0x1
 3251 03d8 9C       		.byte	0x9c
 3252 03d9 19       		.uleb128 0x19
 3253 03da F3060000 		.4byte	.LASF76
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 72


 3254 03de 01       		.byte	0x1
 3255 03df 0101     		.2byte	0x101
 3256 03e1 84020000 		.4byte	0x284
 3257 03e5 00000000 		.4byte	.LFB74
 3258 03e9 7C000000 		.4byte	.LFE74-.LFB74
 3259 03ed 01       		.uleb128 0x1
 3260 03ee 9C       		.byte	0x9c
 3261 03ef 19       		.uleb128 0x19
 3262 03f0 61020000 		.4byte	.LASF77
 3263 03f4 01       		.byte	0x1
 3264 03f5 1F01     		.2byte	0x11f
 3265 03f7 84020000 		.4byte	0x284
 3266 03fb 00000000 		.4byte	.LFB75
 3267 03ff 84000000 		.4byte	.LFE75-.LFB75
 3268 0403 01       		.uleb128 0x1
 3269 0404 9C       		.byte	0x9c
 3270 0405 1A       		.uleb128 0x1a
 3271 0406 24080000 		.4byte	.LASF79
 3272 040a 01       		.byte	0x1
 3273 040b 4501     		.2byte	0x145
 3274 040d 84020000 		.4byte	0x284
 3275 0411 00000000 		.4byte	.LFB76
 3276 0415 30060000 		.4byte	.LFE76-.LFB76
 3277 0419 01       		.uleb128 0x1
 3278 041a 9C       		.byte	0x9c
 3279 041b 57040000 		.4byte	0x457
 3280 041f 1B       		.uleb128 0x1b
 3281 0420 8E030000 		.4byte	.LASF80
 3282 0424 01       		.byte	0x1
 3283 0425 4601     		.2byte	0x146
 3284 0427 D2000000 		.4byte	0xd2
 3285 042b 02       		.uleb128 0x2
 3286 042c 91       		.byte	0x91
 3287 042d 6C       		.sleb128 -20
 3288 042e 1B       		.uleb128 0x1b
 3289 042f 8D060000 		.4byte	.LASF81
 3290 0433 01       		.byte	0x1
 3291 0434 5501     		.2byte	0x155
 3292 0436 FB010000 		.4byte	0x1fb
 3293 043a 02       		.uleb128 0x2
 3294 043b 91       		.byte	0x91
 3295 043c 6B       		.sleb128 -21
 3296 043d 0F       		.uleb128 0xf
 3297 043e F4030000 		.4byte	.LBB3
 3298 0442 30000000 		.4byte	.LBE3-.LBB3
 3299 0446 1B       		.uleb128 0x1b
 3300 0447 32010000 		.4byte	.LASF82
 3301 044b 01       		.byte	0x1
 3302 044c 3802     		.2byte	0x238
 3303 044e 68000000 		.4byte	0x68
 3304 0452 02       		.uleb128 0x2
 3305 0453 91       		.byte	0x91
 3306 0454 64       		.sleb128 -28
 3307 0455 00       		.byte	0
 3308 0456 00       		.byte	0
 3309 0457 1C       		.uleb128 0x1c
 3310 0458 6D040000 		.4byte	.LASF84
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 73


 3311 045c 01       		.byte	0x1
 3312 045d 9602     		.2byte	0x296
 3313 045f 00000000 		.4byte	.LFB77
 3314 0463 68000000 		.4byte	.LFE77-.LFB77
 3315 0467 01       		.uleb128 0x1
 3316 0468 9C       		.byte	0x9c
 3317 0469 1D       		.uleb128 0x1d
 3318 046a D4050000 		.4byte	.LASF85
 3319 046e 01       		.byte	0x1
 3320 046f A102     		.2byte	0x2a1
 3321 0471 79020000 		.4byte	0x279
 3322 0475 00000000 		.4byte	.LFB78
 3323 0479 6C000000 		.4byte	.LFE78-.LFB78
 3324 047d 01       		.uleb128 0x1
 3325 047e 9C       		.byte	0x9c
 3326 047f 93040000 		.4byte	0x493
 3327 0483 1B       		.uleb128 0x1b
 3328 0484 1B030000 		.4byte	.LASF86
 3329 0488 01       		.byte	0x1
 3330 0489 A202     		.2byte	0x2a2
 3331 048b 79020000 		.4byte	0x279
 3332 048f 02       		.uleb128 0x2
 3333 0490 91       		.byte	0x91
 3334 0491 5C       		.sleb128 -36
 3335 0492 00       		.byte	0
 3336 0493 1E       		.uleb128 0x1e
 3337 0494 CC030000 		.4byte	.LASF163
 3338 0498 01       		.byte	0x1
 3339 0499 AA02     		.2byte	0x2aa
 3340 049b 00000000 		.4byte	.LFB79
 3341 049f 3C010000 		.4byte	.LFE79-.LFB79
 3342 04a3 01       		.uleb128 0x1
 3343 04a4 9C       		.byte	0x9c
 3344 04a5 D7040000 		.4byte	0x4d7
 3345 04a9 1B       		.uleb128 0x1b
 3346 04aa B0080000 		.4byte	.LASF87
 3347 04ae 01       		.byte	0x1
 3348 04af AB02     		.2byte	0x2ab
 3349 04b1 A2000000 		.4byte	0xa2
 3350 04b5 02       		.uleb128 0x2
 3351 04b6 91       		.byte	0x91
 3352 04b7 72       		.sleb128 -14
 3353 04b8 1B       		.uleb128 0x1b
 3354 04b9 49020000 		.4byte	.LASF88
 3355 04bd 01       		.byte	0x1
 3356 04be AC02     		.2byte	0x2ac
 3357 04c0 A2000000 		.4byte	0xa2
 3358 04c4 02       		.uleb128 0x2
 3359 04c5 91       		.byte	0x91
 3360 04c6 70       		.sleb128 -16
 3361 04c7 1B       		.uleb128 0x1b
 3362 04c8 8D040000 		.4byte	.LASF89
 3363 04cc 01       		.byte	0x1
 3364 04cd B002     		.2byte	0x2b0
 3365 04cf 68000000 		.4byte	0x68
 3366 04d3 02       		.uleb128 0x2
 3367 04d4 91       		.byte	0x91
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 74


 3368 04d5 74       		.sleb128 -12
 3369 04d6 00       		.byte	0
 3370 04d7 1F       		.uleb128 0x1f
 3371 04d8 33040000 		.4byte	.LASF90
 3372 04dc 01       		.byte	0x1
 3373 04dd E002     		.2byte	0x2e0
 3374 04df 00000000 		.4byte	.LFB80
 3375 04e3 CC000000 		.4byte	.LFE80-.LFB80
 3376 04e7 01       		.uleb128 0x1
 3377 04e8 9C       		.byte	0x9c
 3378 04e9 10       		.uleb128 0x10
 3379 04ea 50020000 		.4byte	.LASF91
 3380 04ee 01       		.byte	0x1
 3381 04ef 21       		.byte	0x21
 3382 04f0 E5000000 		.4byte	0xe5
 3383 04f4 05       		.uleb128 0x5
 3384 04f5 03       		.byte	0x3
 3385 04f6 14000000 		.4byte	instructionIndex
 3386 04fa 10       		.uleb128 0x10
 3387 04fb 03090000 		.4byte	.LASF92
 3388 04ff 01       		.byte	0x1
 3389 0500 35       		.byte	0x35
 3390 0501 E0000000 		.4byte	0xe0
 3391 0505 05       		.uleb128 0x5
 3392 0506 03       		.byte	0x3
 3393 0507 36000000 		.4byte	turnStartedFlag
 3394 050b 10       		.uleb128 0x10
 3395 050c 46080000 		.4byte	.LASF93
 3396 0510 01       		.byte	0x1
 3397 0511 36       		.byte	0x36
 3398 0512 E0000000 		.4byte	0xe0
 3399 0516 05       		.uleb128 0x5
 3400 0517 03       		.byte	0x3
 3401 0518 37000000 		.4byte	turnFinishedFlag
 3402 051c 10       		.uleb128 0x10
 3403 051d 28000000 		.4byte	.LASF94
 3404 0521 01       		.byte	0x1
 3405 0522 38       		.byte	0x38
 3406 0523 E0000000 		.4byte	0xe0
 3407 0527 05       		.uleb128 0x5
 3408 0528 03       		.byte	0x3
 3409 0529 38000000 		.4byte	forwardUntilTargetStartedFlag
 3410 052d 10       		.uleb128 0x10
 3411 052e FE050000 		.4byte	.LASF95
 3412 0532 01       		.byte	0x1
 3413 0533 39       		.byte	0x39
 3414 0534 E0000000 		.4byte	0xe0
 3415 0538 05       		.uleb128 0x5
 3416 0539 03       		.byte	0x3
 3417 053a 39000000 		.4byte	uTurnStartedFlag
 3418 053e 10       		.uleb128 0x10
 3419 053f FC040000 		.4byte	.LASF96
 3420 0543 01       		.byte	0x1
 3421 0544 3A       		.byte	0x3a
 3422 0545 E0000000 		.4byte	0xe0
 3423 0549 05       		.uleb128 0x5
 3424 054a 03       		.byte	0x3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 75


 3425 054b 3A000000 		.4byte	uTurnFinishedFlag
 3426 054f 10       		.uleb128 0x10
 3427 0550 7E060000 		.4byte	.LASF97
 3428 0554 01       		.byte	0x1
 3429 0555 3C       		.byte	0x3c
 3430 0556 E0000000 		.4byte	0xe0
 3431 055a 05       		.uleb128 0x5
 3432 055b 03       		.byte	0x3
 3433 055c 3B000000 		.4byte	leftStatusFlag
 3434 0560 10       		.uleb128 0x10
 3435 0561 07020000 		.4byte	.LASF98
 3436 0565 01       		.byte	0x1
 3437 0566 3D       		.byte	0x3d
 3438 0567 E0000000 		.4byte	0xe0
 3439 056b 05       		.uleb128 0x5
 3440 056c 03       		.byte	0x3
 3441 056d 3C000000 		.4byte	rightStatusFlag
 3442 0571 10       		.uleb128 0x10
 3443 0572 66050000 		.4byte	.LASF99
 3444 0576 01       		.byte	0x1
 3445 0577 3F       		.byte	0x3f
 3446 0578 E0000000 		.4byte	0xe0
 3447 057c 05       		.uleb128 0x5
 3448 057d 03       		.byte	0x3
 3449 057e 3D000000 		.4byte	spinCourseCorrectionStarted
 3450 0582 10       		.uleb128 0x10
 3451 0583 B1020000 		.4byte	.LASF100
 3452 0587 01       		.byte	0x1
 3453 0588 40       		.byte	0x40
 3454 0589 E0000000 		.4byte	0xe0
 3455 058d 05       		.uleb128 0x5
 3456 058e 03       		.byte	0x3
 3457 058f 3E000000 		.4byte	currentIgnoreL
 3458 0593 10       		.uleb128 0x10
 3459 0594 D4020000 		.4byte	.LASF101
 3460 0598 01       		.byte	0x1
 3461 0599 41       		.byte	0x41
 3462 059a E0000000 		.4byte	0xe0
 3463 059e 05       		.uleb128 0x5
 3464 059f 03       		.byte	0x3
 3465 05a0 3F000000 		.4byte	currentIgnoreR
 3466 05a4 10       		.uleb128 0x10
 3467 05a5 A1080000 		.4byte	.LASF102
 3468 05a9 01       		.byte	0x1
 3469 05aa 45       		.byte	0x45
 3470 05ab E0000000 		.4byte	0xe0
 3471 05af 05       		.uleb128 0x5
 3472 05b0 03       		.byte	0x3
 3473 05b1 40000000 		.4byte	totalLineCount
 3474 05b5 10       		.uleb128 0x10
 3475 05b6 66000000 		.4byte	.LASF103
 3476 05ba 01       		.byte	0x1
 3477 05bb 46       		.byte	0x46
 3478 05bc E0000000 		.4byte	0xe0
 3479 05c0 05       		.uleb128 0x5
 3480 05c1 03       		.byte	0x3
 3481 05c2 41000000 		.4byte	lineCount
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 76


 3482 05c6 10       		.uleb128 0x10
 3483 05c7 98010000 		.4byte	.LASF104
 3484 05cb 01       		.byte	0x1
 3485 05cc 47       		.byte	0x47
 3486 05cd E0000000 		.4byte	0xe0
 3487 05d1 05       		.uleb128 0x5
 3488 05d2 03       		.byte	0x3
 3489 05d3 42000000 		.4byte	onLineFlag
 3490 05d7 10       		.uleb128 0x10
 3491 05d8 26040000 		.4byte	.LASF105
 3492 05dc 01       		.byte	0x1
 3493 05dd 49       		.byte	0x49
 3494 05de E0000000 		.4byte	0xe0
 3495 05e2 05       		.uleb128 0x5
 3496 05e3 03       		.byte	0x3
 3497 05e4 43000000 		.4byte	tooEarlyFlag
 3498 05e8 10       		.uleb128 0x10
 3499 05e9 B1030000 		.4byte	.LASF106
 3500 05ed 01       		.byte	0x1
 3501 05ee 4A       		.byte	0x4a
 3502 05ef E0000000 		.4byte	0xe0
 3503 05f3 05       		.uleb128 0x5
 3504 05f4 03       		.byte	0x3
 3505 05f5 44000000 		.4byte	tooLateFlag
 3506 05f9 10       		.uleb128 0x10
 3507 05fa 0D040000 		.4byte	.LASF107
 3508 05fe 01       		.byte	0x1
 3509 05ff 4C       		.byte	0x4c
 3510 0600 E0000000 		.4byte	0xe0
 3511 0604 05       		.uleb128 0x5
 3512 0605 03       		.byte	0x3
 3513 0606 45000000 		.4byte	dontOverwriteRightIgnore
 3514 060a 10       		.uleb128 0x10
 3515 060b 43030000 		.4byte	.LASF108
 3516 060f 01       		.byte	0x1
 3517 0610 4D       		.byte	0x4d
 3518 0611 E0000000 		.4byte	0xe0
 3519 0615 05       		.uleb128 0x5
 3520 0616 03       		.byte	0x3
 3521 0617 46000000 		.4byte	dontOverwriteLeftIgnore
 3522 061b 1B       		.uleb128 0x1b
 3523 061c F4020000 		.4byte	.LASF109
 3524 0620 01       		.byte	0x1
 3525 0621 4201     		.2byte	0x142
 3526 0623 E0000000 		.4byte	0xe0
 3527 0627 05       		.uleb128 0x5
 3528 0628 03       		.byte	0x3
 3529 0629 57000000 		.4byte	forwardAfterTurnLIgnore
 3530 062d 1B       		.uleb128 0x1b
 3531 062e 1C090000 		.4byte	.LASF110
 3532 0632 01       		.byte	0x1
 3533 0633 4301     		.2byte	0x143
 3534 0635 E0000000 		.4byte	0xe0
 3535 0639 05       		.uleb128 0x5
 3536 063a 03       		.byte	0x3
 3537 063b 58000000 		.4byte	forwardAfterTurnRIgnore
 3538 063f 20       		.uleb128 0x20
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 77


 3539 0640 3C020000 		.4byte	.LASF111
 3540 0644 07       		.byte	0x7
 3541 0645 1207     		.2byte	0x712
 3542 0647 4B060000 		.4byte	0x64b
 3543 064b 06       		.uleb128 0x6
 3544 064c 8B000000 		.4byte	0x8b
 3545 0650 21       		.uleb128 0x21
 3546 0651 747300   		.ascii	"ts\000"
 3547 0654 05       		.byte	0x5
 3548 0655 10       		.byte	0x10
 3549 0656 96000000 		.4byte	0x96
 3550 065a 05       		.uleb128 0x5
 3551 065b 03       		.byte	0x3
 3552 065c 00000000 		.4byte	ts
 3553 0660 22       		.uleb128 0x22
 3554 0661 98030000 		.4byte	.LASF112
 3555 0665 05       		.byte	0x5
 3556 0666 11       		.byte	0x11
 3557 0667 A2000000 		.4byte	0xa2
 3558 066b 05       		.uleb128 0x5
 3559 066c 03       		.byte	0x3
 3560 066d 00000000 		.4byte	ts_enc
 3561 0671 22       		.uleb128 0x22
 3562 0672 F4050000 		.4byte	.LASF113
 3563 0676 05       		.byte	0x5
 3564 0677 12       		.byte	0x12
 3565 0678 A2000000 		.4byte	0xa2
 3566 067c 05       		.uleb128 0x5
 3567 067d 03       		.byte	0x3
 3568 067e 00000000 		.4byte	ts_update
 3569 0682 22       		.uleb128 0x22
 3570 0683 70000000 		.4byte	.LASF114
 3571 0687 05       		.byte	0x5
 3572 0688 13       		.byte	0x13
 3573 0689 A2000000 		.4byte	0xa2
 3574 068d 05       		.uleb128 0x5
 3575 068e 03       		.byte	0x3
 3576 068f 00000000 		.4byte	ts_speed
 3577 0693 22       		.uleb128 0x22
 3578 0694 9C040000 		.4byte	.LASF115
 3579 0698 05       		.byte	0x5
 3580 0699 14       		.byte	0x14
 3581 069a A2000000 		.4byte	0xa2
 3582 069e 05       		.uleb128 0x5
 3583 069f 03       		.byte	0x3
 3584 06a0 00000000 		.4byte	ts_display
 3585 06a4 22       		.uleb128 0x22
 3586 06a5 D4010000 		.4byte	.LASF116
 3587 06a9 05       		.byte	0x5
 3588 06aa 16       		.byte	0x16
 3589 06ab 96000000 		.4byte	0x96
 3590 06af 05       		.uleb128 0x5
 3591 06b0 03       		.byte	0x3
 3592 06b1 00000000 		.4byte	flag_ts_enc
 3593 06b5 22       		.uleb128 0x22
 3594 06b6 7F070000 		.4byte	.LASF117
 3595 06ba 05       		.byte	0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 78


 3596 06bb 17       		.byte	0x17
 3597 06bc 96000000 		.4byte	0x96
 3598 06c0 05       		.uleb128 0x5
 3599 06c1 03       		.byte	0x3
 3600 06c2 00000000 		.4byte	flag_ts_update
 3601 06c6 22       		.uleb128 0x22
 3602 06c7 E0040000 		.4byte	.LASF118
 3603 06cb 05       		.byte	0x5
 3604 06cc 18       		.byte	0x18
 3605 06cd 96000000 		.4byte	0x96
 3606 06d1 05       		.uleb128 0x5
 3607 06d2 03       		.byte	0x3
 3608 06d3 00000000 		.4byte	flag_ts_speed
 3609 06d7 22       		.uleb128 0x22
 3610 06d8 08070000 		.4byte	.LASF119
 3611 06dc 05       		.byte	0x5
 3612 06dd 19       		.byte	0x19
 3613 06de 96000000 		.4byte	0x96
 3614 06e2 05       		.uleb128 0x5
 3615 06e3 03       		.byte	0x3
 3616 06e4 00000000 		.4byte	flag_ts_display
 3617 06e8 22       		.uleb128 0x22
 3618 06e9 0C030000 		.4byte	.LASF120
 3619 06ed 05       		.byte	0x5
 3620 06ee 1B       		.byte	0x1b
 3621 06ef 96000000 		.4byte	0x96
 3622 06f3 05       		.uleb128 0x5
 3623 06f4 03       		.byte	0x3
 3624 06f5 00000000 		.4byte	flag_rx
 3625 06f9 22       		.uleb128 0x22
 3626 06fa D4040000 		.4byte	.LASF121
 3627 06fe 05       		.byte	0x5
 3628 06ff 1C       		.byte	0x1c
 3629 0700 96000000 		.4byte	0x96
 3630 0704 05       		.uleb128 0x5
 3631 0705 03       		.byte	0x3
 3632 0706 00000000 		.4byte	flag_packet
 3633 070a 22       		.uleb128 0x22
 3634 070b EC010000 		.4byte	.LASF122
 3635 070f 05       		.byte	0x5
 3636 0710 1D       		.byte	0x1d
 3637 0711 96000000 		.4byte	0x96
 3638 0715 05       		.uleb128 0x5
 3639 0716 03       		.byte	0x3
 3640 0717 00000000 		.4byte	flag_KB_string
 3641 071b 22       		.uleb128 0x22
 3642 071c C0020000 		.4byte	.LASF123
 3643 0720 05       		.byte	0x5
 3644 0721 1F       		.byte	0x1f
 3645 0722 96000000 		.4byte	0x96
 3646 0726 05       		.uleb128 0x5
 3647 0727 03       		.byte	0x3
 3648 0728 00000000 		.4byte	dataready_flag
 3649 072c 22       		.uleb128 0x22
 3650 072d 82050000 		.4byte	.LASF124
 3651 0731 05       		.byte	0x5
 3652 0732 21       		.byte	0x21
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 79


 3653 0733 96000000 		.4byte	0x96
 3654 0737 05       		.uleb128 0x5
 3655 0738 03       		.byte	0x3
 3656 0739 00000000 		.4byte	flag_rf_transmission_active
 3657 073d 07       		.uleb128 0x7
 3658 073e 84000000 		.4byte	0x84
 3659 0742 4D070000 		.4byte	0x74d
 3660 0746 08       		.uleb128 0x8
 3661 0747 7D000000 		.4byte	0x7d
 3662 074b 3F       		.byte	0x3f
 3663 074c 00       		.byte	0
 3664 074d 22       		.uleb128 0x22
 3665 074e 8E070000 		.4byte	.LASF125
 3666 0752 05       		.byte	0x5
 3667 0753 24       		.byte	0x24
 3668 0754 3D070000 		.4byte	0x73d
 3669 0758 05       		.uleb128 0x5
 3670 0759 03       		.byte	0x3
 3671 075a 00000000 		.4byte	displaystring
 3672 075e 22       		.uleb128 0x22
 3673 075f 31030000 		.4byte	.LASF126
 3674 0763 05       		.byte	0x5
 3675 0764 25       		.byte	0x25
 3676 0765 3D070000 		.4byte	0x73d
 3677 0769 05       		.uleb128 0x5
 3678 076a 03       		.byte	0x3
 3679 076b 00000000 		.4byte	line
 3680 076f 22       		.uleb128 0x22
 3681 0770 4E010000 		.4byte	.LASF127
 3682 0774 05       		.byte	0x5
 3683 0775 25       		.byte	0x25
 3684 0776 3D070000 		.4byte	0x73d
 3685 077a 05       		.uleb128 0x5
 3686 077b 03       		.byte	0x3
 3687 077c 00000000 		.4byte	entry
 3688 0780 07       		.uleb128 0x7
 3689 0781 96000000 		.4byte	0x96
 3690 0785 90070000 		.4byte	0x790
 3691 0789 08       		.uleb128 0x8
 3692 078a 7D000000 		.4byte	0x7d
 3693 078e 3F       		.byte	0x3f
 3694 078f 00       		.byte	0
 3695 0790 22       		.uleb128 0x22
 3696 0791 3C050000 		.4byte	.LASF128
 3697 0795 05       		.byte	0x5
 3698 0796 26       		.byte	0x26
 3699 0797 80070000 		.4byte	0x780
 3700 079b 05       		.uleb128 0x5
 3701 079c 03       		.byte	0x3
 3702 079d 00000000 		.4byte	usbBuffer
 3703 07a1 22       		.uleb128 0x22
 3704 07a2 22050000 		.4byte	.LASF129
 3705 07a6 05       		.byte	0x5
 3706 07a7 3C       		.byte	0x3c
 3707 07a8 FA000000 		.4byte	0xfa
 3708 07ac 05       		.uleb128 0x5
 3709 07ad 03       		.byte	0x3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 80


 3710 07ae 00000000 		.4byte	system_state
 3711 07b2 07       		.uleb128 0x7
 3712 07b3 68000000 		.4byte	0x68
 3713 07b7 C8070000 		.4byte	0x7c8
 3714 07bb 08       		.uleb128 0x8
 3715 07bc 7D000000 		.4byte	0x7d
 3716 07c0 0E       		.byte	0xe
 3717 07c1 08       		.uleb128 0x8
 3718 07c2 7D000000 		.4byte	0x7d
 3719 07c6 12       		.byte	0x12
 3720 07c7 00       		.byte	0
 3721 07c8 23       		.uleb128 0x23
 3722 07c9 6D617000 		.ascii	"map\000"
 3723 07cd 08       		.byte	0x8
 3724 07ce 04       		.byte	0x4
 3725 07cf B2070000 		.4byte	0x7b2
 3726 07d3 07       		.uleb128 0x7
 3727 07d4 68000000 		.4byte	0x68
 3728 07d8 E9070000 		.4byte	0x7e9
 3729 07dc 08       		.uleb128 0x8
 3730 07dd 7D000000 		.4byte	0x7d
 3731 07e1 05       		.byte	0x5
 3732 07e2 08       		.uleb128 0x8
 3733 07e3 7D000000 		.4byte	0x7d
 3734 07e7 01       		.byte	0x1
 3735 07e8 00       		.byte	0
 3736 07e9 24       		.uleb128 0x24
 3737 07ea 69070000 		.4byte	.LASF130
 3738 07ee 08       		.byte	0x8
 3739 07ef 05       		.byte	0x5
 3740 07f0 D3070000 		.4byte	0x7d3
 3741 07f4 22       		.uleb128 0x22
 3742 07f5 13080000 		.4byte	.LASF131
 3743 07f9 01       		.byte	0x1
 3744 07fa 19       		.byte	0x19
 3745 07fb 84020000 		.4byte	0x284
 3746 07ff 05       		.uleb128 0x5
 3747 0800 03       		.byte	0x3
 3748 0801 00000000 		.4byte	currentDirection
 3749 0805 22       		.uleb128 0x22
 3750 0806 54000000 		.4byte	.LASF132
 3751 080a 01       		.byte	0x1
 3752 080b 19       		.byte	0x19
 3753 080c 84020000 		.4byte	0x284
 3754 0810 05       		.uleb128 0x5
 3755 0811 03       		.byte	0x3
 3756 0812 00000000 		.4byte	previousDirection
 3757 0816 22       		.uleb128 0x22
 3758 0817 A7070000 		.4byte	.LASF133
 3759 081b 01       		.byte	0x1
 3760 081c 1B       		.byte	0x1b
 3761 081d D3010000 		.4byte	0x1d3
 3762 0821 05       		.uleb128 0x5
 3763 0822 03       		.byte	0x3
 3764 0823 00000000 		.4byte	currentRobotOrientation
 3765 0827 22       		.uleb128 0x22
 3766 0828 5D060000 		.4byte	.LASF134
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 81


 3767 082c 01       		.byte	0x1
 3768 082d 1B       		.byte	0x1b
 3769 082e D3010000 		.4byte	0x1d3
 3770 0832 05       		.uleb128 0x5
 3771 0833 03       		.byte	0x3
 3772 0834 00000000 		.4byte	previousOrientation
 3773 0838 22       		.uleb128 0x22
 3774 0839 8E080000 		.4byte	.LASF135
 3775 083d 01       		.byte	0x1
 3776 083e 1C       		.byte	0x1c
 3777 083f 79020000 		.4byte	0x279
 3778 0843 05       		.uleb128 0x5
 3779 0844 03       		.byte	0x3
 3780 0845 00000000 		.4byte	currentInstruction
 3781 0849 22       		.uleb128 0x22
 3782 084a 49060000 		.4byte	.LASF136
 3783 084e 01       		.byte	0x1
 3784 084f 1D       		.byte	0x1d
 3785 0850 79020000 		.4byte	0x279
 3786 0854 05       		.uleb128 0x5
 3787 0855 03       		.byte	0x3
 3788 0856 00000000 		.4byte	previousInstruction
 3789 085a 22       		.uleb128 0x22
 3790 085b EA060000 		.4byte	.LASF137
 3791 085f 01       		.byte	0x1
 3792 0860 1E       		.byte	0x1e
 3793 0861 68000000 		.4byte	0x68
 3794 0865 05       		.uleb128 0x5
 3795 0866 03       		.byte	0x3
 3796 0867 00000000 		.4byte	numSteps
 3797 086b 22       		.uleb128 0x22
 3798 086c 57080000 		.4byte	.LASF138
 3799 0870 01       		.byte	0x1
 3800 0871 20       		.byte	0x20
 3801 0872 7C080000 		.4byte	0x87c
 3802 0876 05       		.uleb128 0x5
 3803 0877 03       		.byte	0x3
 3804 0878 00000000 		.4byte	instructionList
 3805 087c 25       		.uleb128 0x25
 3806 087d 04       		.byte	0x4
 3807 087e 79020000 		.4byte	0x279
 3808 0882 21       		.uleb128 0x21
 3809 0883 733300   		.ascii	"s3\000"
 3810 0886 01       		.byte	0x1
 3811 0887 26       		.byte	0x26
 3812 0888 96000000 		.4byte	0x96
 3813 088c 05       		.uleb128 0x5
 3814 088d 03       		.byte	0x3
 3815 088e 00000000 		.4byte	s3
 3816 0892 21       		.uleb128 0x21
 3817 0893 733400   		.ascii	"s4\000"
 3818 0896 01       		.byte	0x1
 3819 0897 26       		.byte	0x26
 3820 0898 96000000 		.4byte	0x96
 3821 089c 05       		.uleb128 0x5
 3822 089d 03       		.byte	0x3
 3823 089e 00000000 		.4byte	s4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 82


 3824 08a2 21       		.uleb128 0x21
 3825 08a3 733500   		.ascii	"s5\000"
 3826 08a6 01       		.byte	0x1
 3827 08a7 26       		.byte	0x26
 3828 08a8 96000000 		.4byte	0x96
 3829 08ac 05       		.uleb128 0x5
 3830 08ad 03       		.byte	0x3
 3831 08ae 00000000 		.4byte	s5
 3832 08b2 21       		.uleb128 0x21
 3833 08b3 733600   		.ascii	"s6\000"
 3834 08b6 01       		.byte	0x1
 3835 08b7 26       		.byte	0x26
 3836 08b8 96000000 		.4byte	0x96
 3837 08bc 05       		.uleb128 0x5
 3838 08bd 03       		.byte	0x3
 3839 08be 00000000 		.4byte	s6
 3840 08c2 22       		.uleb128 0x22
 3841 08c3 BA050000 		.4byte	.LASF139
 3842 08c7 01       		.byte	0x1
 3843 08c8 2B       		.byte	0x2b
 3844 08c9 AE000000 		.4byte	0xae
 3845 08cd 05       		.uleb128 0x5
 3846 08ce 03       		.byte	0x3
 3847 08cf 00000000 		.4byte	totalMilliseconds
 3848 08d3 22       		.uleb128 0x22
 3849 08d4 00000000 		.4byte	.LASF140
 3850 08d8 01       		.byte	0x1
 3851 08d9 2C       		.byte	0x2c
 3852 08da D2000000 		.4byte	0xd2
 3853 08de 05       		.uleb128 0x5
 3854 08df 03       		.byte	0x3
 3855 08e0 00000000 		.4byte	totalDistance
 3856 08e4 07       		.uleb128 0x7
 3857 08e5 84000000 		.4byte	0x84
 3858 08e9 F4080000 		.4byte	0x8f4
 3859 08ed 08       		.uleb128 0x8
 3860 08ee 7D000000 		.4byte	0x7d
 3861 08f2 44       		.byte	0x44
 3862 08f3 00       		.byte	0
 3863 08f4 22       		.uleb128 0x22
 3864 08f5 78070000 		.4byte	.LASF141
 3865 08f9 01       		.byte	0x1
 3866 08fa 2E       		.byte	0x2e
 3867 08fb E4080000 		.4byte	0x8e4
 3868 08ff 05       		.uleb128 0x5
 3869 0900 03       		.byte	0x3
 3870 0901 00000000 		.4byte	buffer
 3871 0905 22       		.uleb128 0x22
 3872 0906 5B030000 		.4byte	.LASF142
 3873 090a 01       		.byte	0x1
 3874 090b 2F       		.byte	0x2f
 3875 090c 68000000 		.4byte	0x68
 3876 0910 05       		.uleb128 0x5
 3877 0911 03       		.byte	0x3
 3878 0912 00000000 		.4byte	quadDec2Count
 3879 0916 22       		.uleb128 0x22
 3880 0917 9B000000 		.4byte	.LASF143
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 83


 3881 091b 01       		.byte	0x1
 3882 091c 30       		.byte	0x30
 3883 091d 68000000 		.4byte	0x68
 3884 0921 05       		.uleb128 0x5
 3885 0922 03       		.byte	0x3
 3886 0923 00000000 		.4byte	timerInt
 3887 0927 22       		.uleb128 0x22
 3888 0928 EA050000 		.4byte	.LASF144
 3889 092c 01       		.byte	0x1
 3890 092d 31       		.byte	0x31
 3891 092e 68000000 		.4byte	0x68
 3892 0932 05       		.uleb128 0x5
 3893 0933 03       		.byte	0x3
 3894 0934 00000000 		.4byte	keepLedOn
 3895 0938 22       		.uleb128 0x22
 3896 0939 8D010000 		.4byte	.LASF145
 3897 093d 01       		.byte	0x1
 3898 093e 33       		.byte	0x33
 3899 093f AE000000 		.4byte	0xae
 3900 0943 05       		.uleb128 0x5
 3901 0944 03       		.byte	0x3
 3902 0945 00000000 		.4byte	stopBuffer
 3903 0949 22       		.uleb128 0x22
 3904 094a 57090000 		.4byte	.LASF146
 3905 094e 01       		.byte	0x1
 3906 094f 34       		.byte	0x34
 3907 0950 A2000000 		.4byte	0xa2
 3908 0954 05       		.uleb128 0x5
 3909 0955 03       		.byte	0x3
 3910 0956 00000000 		.4byte	forwardBuffer
 3911 095a 22       		.uleb128 0x22
 3912 095b 78080000 		.4byte	.LASF147
 3913 095f 01       		.byte	0x1
 3914 0960 4F       		.byte	0x4f
 3915 0961 EA000000 		.4byte	0xea
 3916 0965 05       		.uleb128 0x5
 3917 0966 03       		.byte	0x3
 3918 0967 00000000 		.4byte	junctionConfiguration
 3919 096b 22       		.uleb128 0x22
 3920 096c A7040000 		.4byte	.LASF148
 3921 0970 01       		.byte	0x1
 3922 0971 50       		.byte	0x50
 3923 0972 96000000 		.4byte	0x96
 3924 0976 05       		.uleb128 0x5
 3925 0977 03       		.byte	0x3
 3926 0978 00000000 		.4byte	currentFoodListIndex
 3927 097c 22       		.uleb128 0x22
 3928 097d BD030000 		.4byte	.LASF149
 3929 0981 01       		.byte	0x1
 3930 0982 52       		.byte	0x52
 3931 0983 D2000000 		.4byte	0xd2
 3932 0987 05       		.uleb128 0x5
 3933 0988 03       		.byte	0x3
 3934 0989 00000000 		.4byte	blockSizeTotal
 3935 098d 22       		.uleb128 0x22
 3936 098e 9E050000 		.4byte	.LASF150
 3937 0992 01       		.byte	0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 84


 3938 0993 D1       		.byte	0xd1
 3939 0994 D2000000 		.4byte	0xd2
 3940 0998 05       		.uleb128 0x5
 3941 0999 03       		.byte	0x3
 3942 099a 00000000 		.4byte	xBlocksize
 3943 099e 22       		.uleb128 0x22
 3944 099f A9050000 		.4byte	.LASF151
 3945 09a3 01       		.byte	0x1
 3946 09a4 D2       		.byte	0xd2
 3947 09a5 D2000000 		.4byte	0xd2
 3948 09a9 05       		.uleb128 0x5
 3949 09aa 03       		.byte	0x3
 3950 09ab 00000000 		.4byte	yBlocksize
 3951 09af 22       		.uleb128 0x22
 3952 09b0 17050000 		.4byte	.LASF152
 3953 09b4 01       		.byte	0x1
 3954 09b5 D3       		.byte	0xd3
 3955 09b6 96000000 		.4byte	0x96
 3956 09ba 05       		.uleb128 0x5
 3957 09bb 03       		.byte	0x3
 3958 09bc 00000000 		.4byte	currentRow
 3959 09c0 22       		.uleb128 0x22
 3960 09c1 23020000 		.4byte	.LASF153
 3961 09c5 01       		.byte	0x1
 3962 09c6 D4       		.byte	0xd4
 3963 09c7 96000000 		.4byte	0x96
 3964 09cb 05       		.uleb128 0x5
 3965 09cc 03       		.byte	0x3
 3966 09cd 00000000 		.4byte	currentCol
 3967 09d1 22       		.uleb128 0x22
 3968 09d2 46090000 		.4byte	.LASF154
 3969 09d6 01       		.byte	0x1
 3970 09d7 D6       		.byte	0xd6
 3971 09d8 96000000 		.4byte	0x96
 3972 09dc 05       		.uleb128 0x5
 3973 09dd 03       		.byte	0x3
 3974 09de 00000000 		.4byte	stoppedAfterTurn
 3975 09e2 22       		.uleb128 0x22
 3976 09e3 71060000 		.4byte	.LASF155
 3977 09e7 01       		.byte	0x1
 3978 09e8 D7       		.byte	0xd7
 3979 09e9 96000000 		.4byte	0x96
 3980 09ed 05       		.uleb128 0x5
 3981 09ee 03       		.byte	0x3
 3982 09ef 00000000 		.4byte	ignoreSensor
 3983 09f3 22       		.uleb128 0x22
 3984 09f4 D4060000 		.4byte	.LASF156
 3985 09f8 01       		.byte	0x1
 3986 09f9 FF       		.byte	0xff
 3987 09fa 84020000 		.4byte	0x284
 3988 09fe 05       		.uleb128 0x5
 3989 09ff 03       		.byte	0x3
 3990 0a00 00000000 		.4byte	lastDirectionAfter180
 3991 0a04 26       		.uleb128 0x26
 3992 0a05 C1010000 		.4byte	.LASF157
 3993 0a09 01       		.byte	0x1
 3994 0a0a 4101     		.2byte	0x141
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 85


 3995 0a0c 96000000 		.4byte	0x96
 3996 0a10 05       		.uleb128 0x5
 3997 0a11 03       		.byte	0x3
 3998 0a12 00000000 		.4byte	firstTurnIteration
 3999 0a16 00       		.byte	0
 4000              		.section	.debug_abbrev,"",%progbits
 4001              	.Ldebug_abbrev0:
 4002 0000 01       		.uleb128 0x1
 4003 0001 11       		.uleb128 0x11
 4004 0002 01       		.byte	0x1
 4005 0003 25       		.uleb128 0x25
 4006 0004 0E       		.uleb128 0xe
 4007 0005 13       		.uleb128 0x13
 4008 0006 0B       		.uleb128 0xb
 4009 0007 03       		.uleb128 0x3
 4010 0008 0E       		.uleb128 0xe
 4011 0009 1B       		.uleb128 0x1b
 4012 000a 0E       		.uleb128 0xe
 4013 000b 55       		.uleb128 0x55
 4014 000c 17       		.uleb128 0x17
 4015 000d 11       		.uleb128 0x11
 4016 000e 01       		.uleb128 0x1
 4017 000f 10       		.uleb128 0x10
 4018 0010 17       		.uleb128 0x17
 4019 0011 00       		.byte	0
 4020 0012 00       		.byte	0
 4021 0013 02       		.uleb128 0x2
 4022 0014 24       		.uleb128 0x24
 4023 0015 00       		.byte	0
 4024 0016 0B       		.uleb128 0xb
 4025 0017 0B       		.uleb128 0xb
 4026 0018 3E       		.uleb128 0x3e
 4027 0019 0B       		.uleb128 0xb
 4028 001a 03       		.uleb128 0x3
 4029 001b 0E       		.uleb128 0xe
 4030 001c 00       		.byte	0
 4031 001d 00       		.byte	0
 4032 001e 03       		.uleb128 0x3
 4033 001f 16       		.uleb128 0x16
 4034 0020 00       		.byte	0
 4035 0021 03       		.uleb128 0x3
 4036 0022 0E       		.uleb128 0xe
 4037 0023 3A       		.uleb128 0x3a
 4038 0024 0B       		.uleb128 0xb
 4039 0025 3B       		.uleb128 0x3b
 4040 0026 0B       		.uleb128 0xb
 4041 0027 49       		.uleb128 0x49
 4042 0028 13       		.uleb128 0x13
 4043 0029 00       		.byte	0
 4044 002a 00       		.byte	0
 4045 002b 04       		.uleb128 0x4
 4046 002c 24       		.uleb128 0x24
 4047 002d 00       		.byte	0
 4048 002e 0B       		.uleb128 0xb
 4049 002f 0B       		.uleb128 0xb
 4050 0030 3E       		.uleb128 0x3e
 4051 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 86


 4052 0032 03       		.uleb128 0x3
 4053 0033 08       		.uleb128 0x8
 4054 0034 00       		.byte	0
 4055 0035 00       		.byte	0
 4056 0036 05       		.uleb128 0x5
 4057 0037 16       		.uleb128 0x16
 4058 0038 00       		.byte	0
 4059 0039 03       		.uleb128 0x3
 4060 003a 0E       		.uleb128 0xe
 4061 003b 3A       		.uleb128 0x3a
 4062 003c 0B       		.uleb128 0xb
 4063 003d 3B       		.uleb128 0x3b
 4064 003e 05       		.uleb128 0x5
 4065 003f 49       		.uleb128 0x49
 4066 0040 13       		.uleb128 0x13
 4067 0041 00       		.byte	0
 4068 0042 00       		.byte	0
 4069 0043 06       		.uleb128 0x6
 4070 0044 35       		.uleb128 0x35
 4071 0045 00       		.byte	0
 4072 0046 49       		.uleb128 0x49
 4073 0047 13       		.uleb128 0x13
 4074 0048 00       		.byte	0
 4075 0049 00       		.byte	0
 4076 004a 07       		.uleb128 0x7
 4077 004b 01       		.uleb128 0x1
 4078 004c 01       		.byte	0x1
 4079 004d 49       		.uleb128 0x49
 4080 004e 13       		.uleb128 0x13
 4081 004f 01       		.uleb128 0x1
 4082 0050 13       		.uleb128 0x13
 4083 0051 00       		.byte	0
 4084 0052 00       		.byte	0
 4085 0053 08       		.uleb128 0x8
 4086 0054 21       		.uleb128 0x21
 4087 0055 00       		.byte	0
 4088 0056 49       		.uleb128 0x49
 4089 0057 13       		.uleb128 0x13
 4090 0058 2F       		.uleb128 0x2f
 4091 0059 0B       		.uleb128 0xb
 4092 005a 00       		.byte	0
 4093 005b 00       		.byte	0
 4094 005c 09       		.uleb128 0x9
 4095 005d 13       		.uleb128 0x13
 4096 005e 01       		.byte	0x1
 4097 005f 03       		.uleb128 0x3
 4098 0060 0E       		.uleb128 0xe
 4099 0061 0B       		.uleb128 0xb
 4100 0062 0B       		.uleb128 0xb
 4101 0063 3A       		.uleb128 0x3a
 4102 0064 0B       		.uleb128 0xb
 4103 0065 3B       		.uleb128 0x3b
 4104 0066 0B       		.uleb128 0xb
 4105 0067 01       		.uleb128 0x1
 4106 0068 13       		.uleb128 0x13
 4107 0069 00       		.byte	0
 4108 006a 00       		.byte	0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 87


 4109 006b 0A       		.uleb128 0xa
 4110 006c 0D       		.uleb128 0xd
 4111 006d 00       		.byte	0
 4112 006e 03       		.uleb128 0x3
 4113 006f 0E       		.uleb128 0xe
 4114 0070 3A       		.uleb128 0x3a
 4115 0071 0B       		.uleb128 0xb
 4116 0072 3B       		.uleb128 0x3b
 4117 0073 0B       		.uleb128 0xb
 4118 0074 49       		.uleb128 0x49
 4119 0075 13       		.uleb128 0x13
 4120 0076 38       		.uleb128 0x38
 4121 0077 0B       		.uleb128 0xb
 4122 0078 00       		.byte	0
 4123 0079 00       		.byte	0
 4124 007a 0B       		.uleb128 0xb
 4125 007b 04       		.uleb128 0x4
 4126 007c 01       		.byte	0x1
 4127 007d 03       		.uleb128 0x3
 4128 007e 0E       		.uleb128 0xe
 4129 007f 0B       		.uleb128 0xb
 4130 0080 0B       		.uleb128 0xb
 4131 0081 49       		.uleb128 0x49
 4132 0082 13       		.uleb128 0x13
 4133 0083 3A       		.uleb128 0x3a
 4134 0084 0B       		.uleb128 0xb
 4135 0085 3B       		.uleb128 0x3b
 4136 0086 0B       		.uleb128 0xb
 4137 0087 01       		.uleb128 0x1
 4138 0088 13       		.uleb128 0x13
 4139 0089 00       		.byte	0
 4140 008a 00       		.byte	0
 4141 008b 0C       		.uleb128 0xc
 4142 008c 28       		.uleb128 0x28
 4143 008d 00       		.byte	0
 4144 008e 03       		.uleb128 0x3
 4145 008f 08       		.uleb128 0x8
 4146 0090 1C       		.uleb128 0x1c
 4147 0091 0B       		.uleb128 0xb
 4148 0092 00       		.byte	0
 4149 0093 00       		.byte	0
 4150 0094 0D       		.uleb128 0xd
 4151 0095 28       		.uleb128 0x28
 4152 0096 00       		.byte	0
 4153 0097 03       		.uleb128 0x3
 4154 0098 0E       		.uleb128 0xe
 4155 0099 1C       		.uleb128 0x1c
 4156 009a 0B       		.uleb128 0xb
 4157 009b 00       		.byte	0
 4158 009c 00       		.byte	0
 4159 009d 0E       		.uleb128 0xe
 4160 009e 2E       		.uleb128 0x2e
 4161 009f 01       		.byte	0x1
 4162 00a0 3F       		.uleb128 0x3f
 4163 00a1 19       		.uleb128 0x19
 4164 00a2 03       		.uleb128 0x3
 4165 00a3 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 88


 4166 00a4 3A       		.uleb128 0x3a
 4167 00a5 0B       		.uleb128 0xb
 4168 00a6 3B       		.uleb128 0x3b
 4169 00a7 0B       		.uleb128 0xb
 4170 00a8 27       		.uleb128 0x27
 4171 00a9 19       		.uleb128 0x19
 4172 00aa 11       		.uleb128 0x11
 4173 00ab 01       		.uleb128 0x1
 4174 00ac 12       		.uleb128 0x12
 4175 00ad 06       		.uleb128 0x6
 4176 00ae 40       		.uleb128 0x40
 4177 00af 18       		.uleb128 0x18
 4178 00b0 9642     		.uleb128 0x2116
 4179 00b2 19       		.uleb128 0x19
 4180 00b3 01       		.uleb128 0x1
 4181 00b4 13       		.uleb128 0x13
 4182 00b5 00       		.byte	0
 4183 00b6 00       		.byte	0
 4184 00b7 0F       		.uleb128 0xf
 4185 00b8 0B       		.uleb128 0xb
 4186 00b9 01       		.byte	0x1
 4187 00ba 11       		.uleb128 0x11
 4188 00bb 01       		.uleb128 0x1
 4189 00bc 12       		.uleb128 0x12
 4190 00bd 06       		.uleb128 0x6
 4191 00be 00       		.byte	0
 4192 00bf 00       		.byte	0
 4193 00c0 10       		.uleb128 0x10
 4194 00c1 34       		.uleb128 0x34
 4195 00c2 00       		.byte	0
 4196 00c3 03       		.uleb128 0x3
 4197 00c4 0E       		.uleb128 0xe
 4198 00c5 3A       		.uleb128 0x3a
 4199 00c6 0B       		.uleb128 0xb
 4200 00c7 3B       		.uleb128 0x3b
 4201 00c8 0B       		.uleb128 0xb
 4202 00c9 49       		.uleb128 0x49
 4203 00ca 13       		.uleb128 0x13
 4204 00cb 02       		.uleb128 0x2
 4205 00cc 18       		.uleb128 0x18
 4206 00cd 00       		.byte	0
 4207 00ce 00       		.byte	0
 4208 00cf 11       		.uleb128 0x11
 4209 00d0 2E       		.uleb128 0x2e
 4210 00d1 00       		.byte	0
 4211 00d2 3F       		.uleb128 0x3f
 4212 00d3 19       		.uleb128 0x19
 4213 00d4 03       		.uleb128 0x3
 4214 00d5 0E       		.uleb128 0xe
 4215 00d6 3A       		.uleb128 0x3a
 4216 00d7 0B       		.uleb128 0xb
 4217 00d8 3B       		.uleb128 0x3b
 4218 00d9 0B       		.uleb128 0xb
 4219 00da 27       		.uleb128 0x27
 4220 00db 19       		.uleb128 0x19
 4221 00dc 11       		.uleb128 0x11
 4222 00dd 01       		.uleb128 0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 89


 4223 00de 12       		.uleb128 0x12
 4224 00df 06       		.uleb128 0x6
 4225 00e0 40       		.uleb128 0x40
 4226 00e1 18       		.uleb128 0x18
 4227 00e2 9742     		.uleb128 0x2117
 4228 00e4 19       		.uleb128 0x19
 4229 00e5 00       		.byte	0
 4230 00e6 00       		.byte	0
 4231 00e7 12       		.uleb128 0x12
 4232 00e8 2E       		.uleb128 0x2e
 4233 00e9 00       		.byte	0
 4234 00ea 3F       		.uleb128 0x3f
 4235 00eb 19       		.uleb128 0x19
 4236 00ec 03       		.uleb128 0x3
 4237 00ed 0E       		.uleb128 0xe
 4238 00ee 3A       		.uleb128 0x3a
 4239 00ef 0B       		.uleb128 0xb
 4240 00f0 3B       		.uleb128 0x3b
 4241 00f1 0B       		.uleb128 0xb
 4242 00f2 27       		.uleb128 0x27
 4243 00f3 19       		.uleb128 0x19
 4244 00f4 11       		.uleb128 0x11
 4245 00f5 01       		.uleb128 0x1
 4246 00f6 12       		.uleb128 0x12
 4247 00f7 06       		.uleb128 0x6
 4248 00f8 40       		.uleb128 0x40
 4249 00f9 18       		.uleb128 0x18
 4250 00fa 9642     		.uleb128 0x2116
 4251 00fc 19       		.uleb128 0x19
 4252 00fd 00       		.byte	0
 4253 00fe 00       		.byte	0
 4254 00ff 13       		.uleb128 0x13
 4255 0100 2E       		.uleb128 0x2e
 4256 0101 00       		.byte	0
 4257 0102 3F       		.uleb128 0x3f
 4258 0103 19       		.uleb128 0x19
 4259 0104 03       		.uleb128 0x3
 4260 0105 0E       		.uleb128 0xe
 4261 0106 3A       		.uleb128 0x3a
 4262 0107 0B       		.uleb128 0xb
 4263 0108 3B       		.uleb128 0x3b
 4264 0109 0B       		.uleb128 0xb
 4265 010a 49       		.uleb128 0x49
 4266 010b 13       		.uleb128 0x13
 4267 010c 11       		.uleb128 0x11
 4268 010d 01       		.uleb128 0x1
 4269 010e 12       		.uleb128 0x12
 4270 010f 06       		.uleb128 0x6
 4271 0110 40       		.uleb128 0x40
 4272 0111 18       		.uleb128 0x18
 4273 0112 9642     		.uleb128 0x2116
 4274 0114 19       		.uleb128 0x19
 4275 0115 00       		.byte	0
 4276 0116 00       		.byte	0
 4277 0117 14       		.uleb128 0x14
 4278 0118 2E       		.uleb128 0x2e
 4279 0119 01       		.byte	0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 90


 4280 011a 3F       		.uleb128 0x3f
 4281 011b 19       		.uleb128 0x19
 4282 011c 03       		.uleb128 0x3
 4283 011d 0E       		.uleb128 0xe
 4284 011e 3A       		.uleb128 0x3a
 4285 011f 0B       		.uleb128 0xb
 4286 0120 3B       		.uleb128 0x3b
 4287 0121 0B       		.uleb128 0xb
 4288 0122 27       		.uleb128 0x27
 4289 0123 19       		.uleb128 0x19
 4290 0124 49       		.uleb128 0x49
 4291 0125 13       		.uleb128 0x13
 4292 0126 11       		.uleb128 0x11
 4293 0127 01       		.uleb128 0x1
 4294 0128 12       		.uleb128 0x12
 4295 0129 06       		.uleb128 0x6
 4296 012a 40       		.uleb128 0x40
 4297 012b 18       		.uleb128 0x18
 4298 012c 9642     		.uleb128 0x2116
 4299 012e 19       		.uleb128 0x19
 4300 012f 01       		.uleb128 0x1
 4301 0130 13       		.uleb128 0x13
 4302 0131 00       		.byte	0
 4303 0132 00       		.byte	0
 4304 0133 15       		.uleb128 0x15
 4305 0134 05       		.uleb128 0x5
 4306 0135 00       		.byte	0
 4307 0136 03       		.uleb128 0x3
 4308 0137 0E       		.uleb128 0xe
 4309 0138 3A       		.uleb128 0x3a
 4310 0139 0B       		.uleb128 0xb
 4311 013a 3B       		.uleb128 0x3b
 4312 013b 0B       		.uleb128 0xb
 4313 013c 49       		.uleb128 0x49
 4314 013d 13       		.uleb128 0x13
 4315 013e 02       		.uleb128 0x2
 4316 013f 18       		.uleb128 0x18
 4317 0140 00       		.byte	0
 4318 0141 00       		.byte	0
 4319 0142 16       		.uleb128 0x16
 4320 0143 34       		.uleb128 0x34
 4321 0144 00       		.byte	0
 4322 0145 03       		.uleb128 0x3
 4323 0146 08       		.uleb128 0x8
 4324 0147 3A       		.uleb128 0x3a
 4325 0148 0B       		.uleb128 0xb
 4326 0149 3B       		.uleb128 0x3b
 4327 014a 0B       		.uleb128 0xb
 4328 014b 49       		.uleb128 0x49
 4329 014c 13       		.uleb128 0x13
 4330 014d 02       		.uleb128 0x2
 4331 014e 18       		.uleb128 0x18
 4332 014f 00       		.byte	0
 4333 0150 00       		.byte	0
 4334 0151 17       		.uleb128 0x17
 4335 0152 2E       		.uleb128 0x2e
 4336 0153 00       		.byte	0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 91


 4337 0154 3F       		.uleb128 0x3f
 4338 0155 19       		.uleb128 0x19
 4339 0156 03       		.uleb128 0x3
 4340 0157 0E       		.uleb128 0xe
 4341 0158 3A       		.uleb128 0x3a
 4342 0159 0B       		.uleb128 0xb
 4343 015a 3B       		.uleb128 0x3b
 4344 015b 0B       		.uleb128 0xb
 4345 015c 11       		.uleb128 0x11
 4346 015d 01       		.uleb128 0x1
 4347 015e 12       		.uleb128 0x12
 4348 015f 06       		.uleb128 0x6
 4349 0160 40       		.uleb128 0x40
 4350 0161 18       		.uleb128 0x18
 4351 0162 9742     		.uleb128 0x2117
 4352 0164 19       		.uleb128 0x19
 4353 0165 00       		.byte	0
 4354 0166 00       		.byte	0
 4355 0167 18       		.uleb128 0x18
 4356 0168 2E       		.uleb128 0x2e
 4357 0169 00       		.byte	0
 4358 016a 3F       		.uleb128 0x3f
 4359 016b 19       		.uleb128 0x19
 4360 016c 03       		.uleb128 0x3
 4361 016d 0E       		.uleb128 0xe
 4362 016e 3A       		.uleb128 0x3a
 4363 016f 0B       		.uleb128 0xb
 4364 0170 3B       		.uleb128 0x3b
 4365 0171 0B       		.uleb128 0xb
 4366 0172 49       		.uleb128 0x49
 4367 0173 13       		.uleb128 0x13
 4368 0174 11       		.uleb128 0x11
 4369 0175 01       		.uleb128 0x1
 4370 0176 12       		.uleb128 0x12
 4371 0177 06       		.uleb128 0x6
 4372 0178 40       		.uleb128 0x40
 4373 0179 18       		.uleb128 0x18
 4374 017a 9742     		.uleb128 0x2117
 4375 017c 19       		.uleb128 0x19
 4376 017d 00       		.byte	0
 4377 017e 00       		.byte	0
 4378 017f 19       		.uleb128 0x19
 4379 0180 2E       		.uleb128 0x2e
 4380 0181 00       		.byte	0
 4381 0182 3F       		.uleb128 0x3f
 4382 0183 19       		.uleb128 0x19
 4383 0184 03       		.uleb128 0x3
 4384 0185 0E       		.uleb128 0xe
 4385 0186 3A       		.uleb128 0x3a
 4386 0187 0B       		.uleb128 0xb
 4387 0188 3B       		.uleb128 0x3b
 4388 0189 05       		.uleb128 0x5
 4389 018a 49       		.uleb128 0x49
 4390 018b 13       		.uleb128 0x13
 4391 018c 11       		.uleb128 0x11
 4392 018d 01       		.uleb128 0x1
 4393 018e 12       		.uleb128 0x12
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 92


 4394 018f 06       		.uleb128 0x6
 4395 0190 40       		.uleb128 0x40
 4396 0191 18       		.uleb128 0x18
 4397 0192 9742     		.uleb128 0x2117
 4398 0194 19       		.uleb128 0x19
 4399 0195 00       		.byte	0
 4400 0196 00       		.byte	0
 4401 0197 1A       		.uleb128 0x1a
 4402 0198 2E       		.uleb128 0x2e
 4403 0199 01       		.byte	0x1
 4404 019a 3F       		.uleb128 0x3f
 4405 019b 19       		.uleb128 0x19
 4406 019c 03       		.uleb128 0x3
 4407 019d 0E       		.uleb128 0xe
 4408 019e 3A       		.uleb128 0x3a
 4409 019f 0B       		.uleb128 0xb
 4410 01a0 3B       		.uleb128 0x3b
 4411 01a1 05       		.uleb128 0x5
 4412 01a2 49       		.uleb128 0x49
 4413 01a3 13       		.uleb128 0x13
 4414 01a4 11       		.uleb128 0x11
 4415 01a5 01       		.uleb128 0x1
 4416 01a6 12       		.uleb128 0x12
 4417 01a7 06       		.uleb128 0x6
 4418 01a8 40       		.uleb128 0x40
 4419 01a9 18       		.uleb128 0x18
 4420 01aa 9642     		.uleb128 0x2116
 4421 01ac 19       		.uleb128 0x19
 4422 01ad 01       		.uleb128 0x1
 4423 01ae 13       		.uleb128 0x13
 4424 01af 00       		.byte	0
 4425 01b0 00       		.byte	0
 4426 01b1 1B       		.uleb128 0x1b
 4427 01b2 34       		.uleb128 0x34
 4428 01b3 00       		.byte	0
 4429 01b4 03       		.uleb128 0x3
 4430 01b5 0E       		.uleb128 0xe
 4431 01b6 3A       		.uleb128 0x3a
 4432 01b7 0B       		.uleb128 0xb
 4433 01b8 3B       		.uleb128 0x3b
 4434 01b9 05       		.uleb128 0x5
 4435 01ba 49       		.uleb128 0x49
 4436 01bb 13       		.uleb128 0x13
 4437 01bc 02       		.uleb128 0x2
 4438 01bd 18       		.uleb128 0x18
 4439 01be 00       		.byte	0
 4440 01bf 00       		.byte	0
 4441 01c0 1C       		.uleb128 0x1c
 4442 01c1 2E       		.uleb128 0x2e
 4443 01c2 00       		.byte	0
 4444 01c3 3F       		.uleb128 0x3f
 4445 01c4 19       		.uleb128 0x19
 4446 01c5 03       		.uleb128 0x3
 4447 01c6 0E       		.uleb128 0xe
 4448 01c7 3A       		.uleb128 0x3a
 4449 01c8 0B       		.uleb128 0xb
 4450 01c9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 93


 4451 01ca 05       		.uleb128 0x5
 4452 01cb 11       		.uleb128 0x11
 4453 01cc 01       		.uleb128 0x1
 4454 01cd 12       		.uleb128 0x12
 4455 01ce 06       		.uleb128 0x6
 4456 01cf 40       		.uleb128 0x40
 4457 01d0 18       		.uleb128 0x18
 4458 01d1 9742     		.uleb128 0x2117
 4459 01d3 19       		.uleb128 0x19
 4460 01d4 00       		.byte	0
 4461 01d5 00       		.byte	0
 4462 01d6 1D       		.uleb128 0x1d
 4463 01d7 2E       		.uleb128 0x2e
 4464 01d8 01       		.byte	0x1
 4465 01d9 3F       		.uleb128 0x3f
 4466 01da 19       		.uleb128 0x19
 4467 01db 03       		.uleb128 0x3
 4468 01dc 0E       		.uleb128 0xe
 4469 01dd 3A       		.uleb128 0x3a
 4470 01de 0B       		.uleb128 0xb
 4471 01df 3B       		.uleb128 0x3b
 4472 01e0 05       		.uleb128 0x5
 4473 01e1 49       		.uleb128 0x49
 4474 01e2 13       		.uleb128 0x13
 4475 01e3 11       		.uleb128 0x11
 4476 01e4 01       		.uleb128 0x1
 4477 01e5 12       		.uleb128 0x12
 4478 01e6 06       		.uleb128 0x6
 4479 01e7 40       		.uleb128 0x40
 4480 01e8 18       		.uleb128 0x18
 4481 01e9 9742     		.uleb128 0x2117
 4482 01eb 19       		.uleb128 0x19
 4483 01ec 01       		.uleb128 0x1
 4484 01ed 13       		.uleb128 0x13
 4485 01ee 00       		.byte	0
 4486 01ef 00       		.byte	0
 4487 01f0 1E       		.uleb128 0x1e
 4488 01f1 2E       		.uleb128 0x2e
 4489 01f2 01       		.byte	0x1
 4490 01f3 3F       		.uleb128 0x3f
 4491 01f4 19       		.uleb128 0x19
 4492 01f5 03       		.uleb128 0x3
 4493 01f6 0E       		.uleb128 0xe
 4494 01f7 3A       		.uleb128 0x3a
 4495 01f8 0B       		.uleb128 0xb
 4496 01f9 3B       		.uleb128 0x3b
 4497 01fa 05       		.uleb128 0x5
 4498 01fb 11       		.uleb128 0x11
 4499 01fc 01       		.uleb128 0x1
 4500 01fd 12       		.uleb128 0x12
 4501 01fe 06       		.uleb128 0x6
 4502 01ff 40       		.uleb128 0x40
 4503 0200 18       		.uleb128 0x18
 4504 0201 9642     		.uleb128 0x2116
 4505 0203 19       		.uleb128 0x19
 4506 0204 01       		.uleb128 0x1
 4507 0205 13       		.uleb128 0x13
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 94


 4508 0206 00       		.byte	0
 4509 0207 00       		.byte	0
 4510 0208 1F       		.uleb128 0x1f
 4511 0209 2E       		.uleb128 0x2e
 4512 020a 00       		.byte	0
 4513 020b 3F       		.uleb128 0x3f
 4514 020c 19       		.uleb128 0x19
 4515 020d 03       		.uleb128 0x3
 4516 020e 0E       		.uleb128 0xe
 4517 020f 3A       		.uleb128 0x3a
 4518 0210 0B       		.uleb128 0xb
 4519 0211 3B       		.uleb128 0x3b
 4520 0212 05       		.uleb128 0x5
 4521 0213 11       		.uleb128 0x11
 4522 0214 01       		.uleb128 0x1
 4523 0215 12       		.uleb128 0x12
 4524 0216 06       		.uleb128 0x6
 4525 0217 40       		.uleb128 0x40
 4526 0218 18       		.uleb128 0x18
 4527 0219 9642     		.uleb128 0x2116
 4528 021b 19       		.uleb128 0x19
 4529 021c 00       		.byte	0
 4530 021d 00       		.byte	0
 4531 021e 20       		.uleb128 0x20
 4532 021f 34       		.uleb128 0x34
 4533 0220 00       		.byte	0
 4534 0221 03       		.uleb128 0x3
 4535 0222 0E       		.uleb128 0xe
 4536 0223 3A       		.uleb128 0x3a
 4537 0224 0B       		.uleb128 0xb
 4538 0225 3B       		.uleb128 0x3b
 4539 0226 05       		.uleb128 0x5
 4540 0227 49       		.uleb128 0x49
 4541 0228 13       		.uleb128 0x13
 4542 0229 3F       		.uleb128 0x3f
 4543 022a 19       		.uleb128 0x19
 4544 022b 3C       		.uleb128 0x3c
 4545 022c 19       		.uleb128 0x19
 4546 022d 00       		.byte	0
 4547 022e 00       		.byte	0
 4548 022f 21       		.uleb128 0x21
 4549 0230 34       		.uleb128 0x34
 4550 0231 00       		.byte	0
 4551 0232 03       		.uleb128 0x3
 4552 0233 08       		.uleb128 0x8
 4553 0234 3A       		.uleb128 0x3a
 4554 0235 0B       		.uleb128 0xb
 4555 0236 3B       		.uleb128 0x3b
 4556 0237 0B       		.uleb128 0xb
 4557 0238 49       		.uleb128 0x49
 4558 0239 13       		.uleb128 0x13
 4559 023a 3F       		.uleb128 0x3f
 4560 023b 19       		.uleb128 0x19
 4561 023c 02       		.uleb128 0x2
 4562 023d 18       		.uleb128 0x18
 4563 023e 00       		.byte	0
 4564 023f 00       		.byte	0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 95


 4565 0240 22       		.uleb128 0x22
 4566 0241 34       		.uleb128 0x34
 4567 0242 00       		.byte	0
 4568 0243 03       		.uleb128 0x3
 4569 0244 0E       		.uleb128 0xe
 4570 0245 3A       		.uleb128 0x3a
 4571 0246 0B       		.uleb128 0xb
 4572 0247 3B       		.uleb128 0x3b
 4573 0248 0B       		.uleb128 0xb
 4574 0249 49       		.uleb128 0x49
 4575 024a 13       		.uleb128 0x13
 4576 024b 3F       		.uleb128 0x3f
 4577 024c 19       		.uleb128 0x19
 4578 024d 02       		.uleb128 0x2
 4579 024e 18       		.uleb128 0x18
 4580 024f 00       		.byte	0
 4581 0250 00       		.byte	0
 4582 0251 23       		.uleb128 0x23
 4583 0252 34       		.uleb128 0x34
 4584 0253 00       		.byte	0
 4585 0254 03       		.uleb128 0x3
 4586 0255 08       		.uleb128 0x8
 4587 0256 3A       		.uleb128 0x3a
 4588 0257 0B       		.uleb128 0xb
 4589 0258 3B       		.uleb128 0x3b
 4590 0259 0B       		.uleb128 0xb
 4591 025a 49       		.uleb128 0x49
 4592 025b 13       		.uleb128 0x13
 4593 025c 3F       		.uleb128 0x3f
 4594 025d 19       		.uleb128 0x19
 4595 025e 3C       		.uleb128 0x3c
 4596 025f 19       		.uleb128 0x19
 4597 0260 00       		.byte	0
 4598 0261 00       		.byte	0
 4599 0262 24       		.uleb128 0x24
 4600 0263 34       		.uleb128 0x34
 4601 0264 00       		.byte	0
 4602 0265 03       		.uleb128 0x3
 4603 0266 0E       		.uleb128 0xe
 4604 0267 3A       		.uleb128 0x3a
 4605 0268 0B       		.uleb128 0xb
 4606 0269 3B       		.uleb128 0x3b
 4607 026a 0B       		.uleb128 0xb
 4608 026b 49       		.uleb128 0x49
 4609 026c 13       		.uleb128 0x13
 4610 026d 3F       		.uleb128 0x3f
 4611 026e 19       		.uleb128 0x19
 4612 026f 3C       		.uleb128 0x3c
 4613 0270 19       		.uleb128 0x19
 4614 0271 00       		.byte	0
 4615 0272 00       		.byte	0
 4616 0273 25       		.uleb128 0x25
 4617 0274 0F       		.uleb128 0xf
 4618 0275 00       		.byte	0
 4619 0276 0B       		.uleb128 0xb
 4620 0277 0B       		.uleb128 0xb
 4621 0278 49       		.uleb128 0x49
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 96


 4622 0279 13       		.uleb128 0x13
 4623 027a 00       		.byte	0
 4624 027b 00       		.byte	0
 4625 027c 26       		.uleb128 0x26
 4626 027d 34       		.uleb128 0x34
 4627 027e 00       		.byte	0
 4628 027f 03       		.uleb128 0x3
 4629 0280 0E       		.uleb128 0xe
 4630 0281 3A       		.uleb128 0x3a
 4631 0282 0B       		.uleb128 0xb
 4632 0283 3B       		.uleb128 0x3b
 4633 0284 05       		.uleb128 0x5
 4634 0285 49       		.uleb128 0x49
 4635 0286 13       		.uleb128 0x13
 4636 0287 3F       		.uleb128 0x3f
 4637 0288 19       		.uleb128 0x19
 4638 0289 02       		.uleb128 0x2
 4639 028a 18       		.uleb128 0x18
 4640 028b 00       		.byte	0
 4641 028c 00       		.byte	0
 4642 028d 00       		.byte	0
 4643              		.section	.debug_aranges,"",%progbits
 4644 0000 9C000000 		.4byte	0x9c
 4645 0004 0200     		.2byte	0x2
 4646 0006 00000000 		.4byte	.Ldebug_info0
 4647 000a 04       		.byte	0x4
 4648 000b 00       		.byte	0
 4649 000c 0000     		.2byte	0
 4650 000e 0000     		.2byte	0
 4651 0010 00000000 		.4byte	.LFB64
 4652 0014 EC000000 		.4byte	.LFE64-.LFB64
 4653 0018 00000000 		.4byte	.LFB65
 4654 001c 18000000 		.4byte	.LFE65-.LFB65
 4655 0020 00000000 		.4byte	.LFB66
 4656 0024 18000000 		.4byte	.LFE66-.LFB66
 4657 0028 00000000 		.4byte	.LFB67
 4658 002c 18000000 		.4byte	.LFE67-.LFB67
 4659 0030 00000000 		.4byte	.LFB68
 4660 0034 18000000 		.4byte	.LFE68-.LFB68
 4661 0038 00000000 		.4byte	.LFB69
 4662 003c 70000000 		.4byte	.LFE69-.LFB69
 4663 0040 00000000 		.4byte	.LFB70
 4664 0044 04010000 		.4byte	.LFE70-.LFB70
 4665 0048 00000000 		.4byte	.LFB71
 4666 004c 54000000 		.4byte	.LFE71-.LFB71
 4667 0050 00000000 		.4byte	.LFB72
 4668 0054 34000000 		.4byte	.LFE72-.LFB72
 4669 0058 00000000 		.4byte	.LFB73
 4670 005c 84000000 		.4byte	.LFE73-.LFB73
 4671 0060 00000000 		.4byte	.LFB74
 4672 0064 7C000000 		.4byte	.LFE74-.LFB74
 4673 0068 00000000 		.4byte	.LFB75
 4674 006c 84000000 		.4byte	.LFE75-.LFB75
 4675 0070 00000000 		.4byte	.LFB76
 4676 0074 30060000 		.4byte	.LFE76-.LFB76
 4677 0078 00000000 		.4byte	.LFB77
 4678 007c 68000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 97


 4679 0080 00000000 		.4byte	.LFB78
 4680 0084 6C000000 		.4byte	.LFE78-.LFB78
 4681 0088 00000000 		.4byte	.LFB79
 4682 008c 3C010000 		.4byte	.LFE79-.LFB79
 4683 0090 00000000 		.4byte	.LFB80
 4684 0094 CC000000 		.4byte	.LFE80-.LFB80
 4685 0098 00000000 		.4byte	0
 4686 009c 00000000 		.4byte	0
 4687              		.section	.debug_ranges,"",%progbits
 4688              	.Ldebug_ranges0:
 4689 0000 00000000 		.4byte	.LFB64
 4690 0004 EC000000 		.4byte	.LFE64
 4691 0008 00000000 		.4byte	.LFB65
 4692 000c 18000000 		.4byte	.LFE65
 4693 0010 00000000 		.4byte	.LFB66
 4694 0014 18000000 		.4byte	.LFE66
 4695 0018 00000000 		.4byte	.LFB67
 4696 001c 18000000 		.4byte	.LFE67
 4697 0020 00000000 		.4byte	.LFB68
 4698 0024 18000000 		.4byte	.LFE68
 4699 0028 00000000 		.4byte	.LFB69
 4700 002c 70000000 		.4byte	.LFE69
 4701 0030 00000000 		.4byte	.LFB70
 4702 0034 04010000 		.4byte	.LFE70
 4703 0038 00000000 		.4byte	.LFB71
 4704 003c 54000000 		.4byte	.LFE71
 4705 0040 00000000 		.4byte	.LFB72
 4706 0044 34000000 		.4byte	.LFE72
 4707 0048 00000000 		.4byte	.LFB73
 4708 004c 84000000 		.4byte	.LFE73
 4709 0050 00000000 		.4byte	.LFB74
 4710 0054 7C000000 		.4byte	.LFE74
 4711 0058 00000000 		.4byte	.LFB75
 4712 005c 84000000 		.4byte	.LFE75
 4713 0060 00000000 		.4byte	.LFB76
 4714 0064 30060000 		.4byte	.LFE76
 4715 0068 00000000 		.4byte	.LFB77
 4716 006c 68000000 		.4byte	.LFE77
 4717 0070 00000000 		.4byte	.LFB78
 4718 0074 6C000000 		.4byte	.LFE78
 4719 0078 00000000 		.4byte	.LFB79
 4720 007c 3C010000 		.4byte	.LFE79
 4721 0080 00000000 		.4byte	.LFB80
 4722 0084 CC000000 		.4byte	.LFE80
 4723 0088 00000000 		.4byte	0
 4724 008c 00000000 		.4byte	0
 4725              		.section	.debug_line,"",%progbits
 4726              	.Ldebug_line0:
 4727 0000 9F040000 		.section	.debug_str,"MS",%progbits,1
 4727      02007001 
 4727      00000201 
 4727      FB0E0D00 
 4727      01010101 
 4728              	.LASF140:
 4729 0000 746F7461 		.ascii	"totalDistance\000"
 4729      6C446973 
 4729      74616E63 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 98


 4729      6500
 4730              	.LASF41:
 4731 000e 4F726965 		.ascii	"OrientationState\000"
 4731      6E746174 
 4731      696F6E53 
 4731      74617465 
 4731      00
 4732              	.LASF36:
 4733 001f 67325F73 		.ascii	"g2_speed\000"
 4733      70656564 
 4733      00
 4734              	.LASF94:
 4735 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4735      61726455 
 4735      6E74696C 
 4735      54617267 
 4735      65745374 
 4736              	.LASF56:
 4737 0046 526F626F 		.ascii	"RobotMovement\000"
 4737      744D6F76 
 4737      656D656E 
 4737      7400
 4738              	.LASF132:
 4739 0054 70726576 		.ascii	"previousDirection\000"
 4739      696F7573 
 4739      44697265 
 4739      6374696F 
 4739      6E00
 4740              	.LASF103:
 4741 0066 6C696E65 		.ascii	"lineCount\000"
 4741      436F756E 
 4741      7400
 4742              	.LASF114:
 4743 0070 74735F73 		.ascii	"ts_speed\000"
 4743      70656564 
 4743      00
 4744              	.LASF0:
 4745 0079 7369676E 		.ascii	"signed char\000"
 4745      65642063 
 4745      68617200 
 4746              	.LASF69:
 4747 0085 53345F44 		.ascii	"S4_DETECTED\000"
 4747      45544543 
 4747      54454400 
 4748              	.LASF51:
 4749 0091 64697265 		.ascii	"direction\000"
 4749      6374696F 
 4749      6E00
 4750              	.LASF143:
 4751 009b 74696D65 		.ascii	"timerInt\000"
 4751      72496E74 
 4751      00
 4752              	.LASF158:
 4753 00a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4753      43313120 
 4753      352E342E 
 4753      31203230 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 99


 4753      31363036 
 4754 00d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4754      20726576 
 4754      6973696F 
 4754      6E203233 
 4754      37373135 
 4755 010a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4755      66756E63 
 4755      74696F6E 
 4755      2D736563 
 4755      74696F6E 
 4756              	.LASF82:
 4757 0132 626C6F63 		.ascii	"blocksToTarget\000"
 4757      6B73546F 
 4757      54617267 
 4757      657400
 4758              	.LASF29:
 4759 0141 67305F64 		.ascii	"g0_direction\000"
 4759      69726563 
 4759      74696F6E 
 4759      00
 4760              	.LASF127:
 4761 014e 656E7472 		.ascii	"entry\000"
 4761      7900
 4762              	.LASF7:
 4763 0154 6C6F6E67 		.ascii	"long long unsigned int\000"
 4763      206C6F6E 
 4763      6720756E 
 4763      7369676E 
 4763      65642069 
 4764              	.LASF55:
 4765 016b 65787065 		.ascii	"expectedOrientation\000"
 4765      63746564 
 4765      4F726965 
 4765      6E746174 
 4765      696F6E00 
 4766              	.LASF46:
 4767 017f 75547572 		.ascii	"uTurn\000"
 4767      6E00
 4768              	.LASF26:
 4769 0185 67305F78 		.ascii	"g0_xpos\000"
 4769      706F7300 
 4770              	.LASF145:
 4771 018d 73746F70 		.ascii	"stopBuffer\000"
 4771      42756666 
 4771      657200
 4772              	.LASF104:
 4773 0198 6F6E4C69 		.ascii	"onLineFlag\000"
 4773      6E65466C 
 4773      616700
 4774              	.LASF54:
 4775 01a3 64697374 		.ascii	"distanceToTarget\000"
 4775      616E6365 
 4775      546F5461 
 4775      72676574 
 4775      00
 4776              	.LASF48:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 100


 4777 01b4 53746F70 		.ascii	"StopAtTarget\000"
 4777      41745461 
 4777      72676574 
 4777      00
 4778              	.LASF157:
 4779 01c1 66697273 		.ascii	"firstTurnIteration\000"
 4779      74547572 
 4779      6E497465 
 4779      72617469 
 4779      6F6E00
 4780              	.LASF116:
 4781 01d4 666C6167 		.ascii	"flag_ts_enc\000"
 4781      5F74735F 
 4781      656E6300 
 4782              	.LASF68:
 4783 01e0 53335F44 		.ascii	"S3_DETECTED\000"
 4783      45544543 
 4783      54454400 
 4784              	.LASF122:
 4785 01ec 666C6167 		.ascii	"flag_KB_string\000"
 4785      5F4B425F 
 4785      73747269 
 4785      6E6700
 4786              	.LASF70:
 4787 01fb 53355F44 		.ascii	"S5_DETECTED\000"
 4787      45544543 
 4787      54454400 
 4788              	.LASF98:
 4789 0207 72696768 		.ascii	"rightStatusFlag\000"
 4789      74537461 
 4789      74757346 
 4789      6C616700 
 4790              	.LASF50:
 4791 0217 496E7374 		.ascii	"Instruction\000"
 4791      72756374 
 4791      696F6E00 
 4792              	.LASF153:
 4793 0223 63757272 		.ascii	"currentCol\000"
 4793      656E7443 
 4793      6F6C00
 4794              	.LASF62:
 4795 022e 53746F70 		.ascii	"Stop\000"
 4795      00
 4796              	.LASF4:
 4797 0233 6C6F6E67 		.ascii	"long int\000"
 4797      20696E74 
 4797      00
 4798              	.LASF111:
 4799 023c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4799      52784275 
 4799      66666572 
 4799      00
 4800              	.LASF88:
 4801 0249 636F756E 		.ascii	"count2\000"
 4801      743200
 4802              	.LASF91:
 4803 0250 696E7374 		.ascii	"instructionIndex\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 101


 4803      72756374 
 4803      696F6E49 
 4803      6E646578 
 4803      00
 4804              	.LASF77:
 4805 0261 5370696E 		.ascii	"SpinTurnCourseCorrection\000"
 4805      5475726E 
 4805      436F7572 
 4805      7365436F 
 4805      72726563 
 4806              	.LASF47:
 4807 027a 466F7277 		.ascii	"ForwardUntilTarget\000"
 4807      61726455 
 4807      6E74696C 
 4807      54617267 
 4807      657400
 4808              	.LASF66:
 4809 028d 4261636B 		.ascii	"Backward\000"
 4809      77617264 
 4809      00
 4810              	.LASF14:
 4811 0296 75696E74 		.ascii	"uint8\000"
 4811      3800
 4812              	.LASF6:
 4813 029c 6C6F6E67 		.ascii	"long long int\000"
 4813      206C6F6E 
 4813      6720696E 
 4813      7400
 4814              	.LASF20:
 4815 02aa 646F7562 		.ascii	"double\000"
 4815      6C6500
 4816              	.LASF100:
 4817 02b1 63757272 		.ascii	"currentIgnoreL\000"
 4817      656E7449 
 4817      676E6F72 
 4817      654C00
 4818              	.LASF123:
 4819 02c0 64617461 		.ascii	"dataready_flag\000"
 4819      72656164 
 4819      795F666C 
 4819      616700
 4820              	.LASF73:
 4821 02cf 6D61696E 		.ascii	"main\000"
 4821      00
 4822              	.LASF101:
 4823 02d4 63757272 		.ascii	"currentIgnoreR\000"
 4823      656E7449 
 4823      676E6F72 
 4823      655200
 4824              	.LASF61:
 4825 02e3 41646A75 		.ascii	"AdjustToTheRight\000"
 4825      7374546F 
 4825      54686552 
 4825      69676874 
 4825      00
 4826              	.LASF109:
 4827 02f4 666F7277 		.ascii	"forwardAfterTurnLIgnore\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 102


 4827      61726441 
 4827      66746572 
 4827      5475726E 
 4827      4C49676E 
 4828              	.LASF120:
 4829 030c 666C6167 		.ascii	"flag_rx\000"
 4829      5F727800 
 4830              	.LASF16:
 4831 0314 75696E74 		.ascii	"uint32\000"
 4831      333200
 4832              	.LASF86:
 4833 031b 6E657874 		.ascii	"nextInstruction\000"
 4833      496E7374 
 4833      72756374 
 4833      696F6E00 
 4834              	.LASF162:
 4835 032b 636F756E 		.ascii	"count\000"
 4835      7400
 4836              	.LASF126:
 4837 0331 6C696E65 		.ascii	"line\000"
 4837      00
 4838              	.LASF37:
 4839 0336 67325F64 		.ascii	"g2_direction\000"
 4839      69726563 
 4839      74696F6E 
 4839      00
 4840              	.LASF108:
 4841 0343 646F6E74 		.ascii	"dontOverwriteLeftIgnore\000"
 4841      4F766572 
 4841      77726974 
 4841      654C6566 
 4841      7449676E 
 4842              	.LASF142:
 4843 035b 71756164 		.ascii	"quadDec2Count\000"
 4843      44656332 
 4843      436F756E 
 4843      7400
 4844              	.LASF58:
 4845 0369 5475726E 		.ascii	"TurnRight\000"
 4845      52696768 
 4845      7400
 4846              	.LASF65:
 4847 0373 466F7277 		.ascii	"ForwardAfterTurn\000"
 4847      61726441 
 4847      66746572 
 4847      5475726E 
 4847      00
 4848              	.LASF49:
 4849 0384 64617461 		.ascii	"data_main\000"
 4849      5F6D6169 
 4849      6E00
 4850              	.LASF80:
 4851 038e 626C6F63 		.ascii	"blocksize\000"
 4851      6B73697A 
 4851      6500
 4852              	.LASF112:
 4853 0398 74735F65 		.ascii	"ts_enc\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 103


 4853      6E6300
 4854              	.LASF5:
 4855 039f 6C6F6E67 		.ascii	"long unsigned int\000"
 4855      20756E73 
 4855      69676E65 
 4855      6420696E 
 4855      7400
 4856              	.LASF106:
 4857 03b1 746F6F4C 		.ascii	"tooLateFlag\000"
 4857      61746546 
 4857      6C616700 
 4858              	.LASF149:
 4859 03bd 626C6F63 		.ascii	"blockSizeTotal\000"
 4859      6B53697A 
 4859      65546F74 
 4859      616C00
 4860              	.LASF163:
 4861 03cc 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4861      7465436C 
 4861      6F636B77 
 4861      69736531 
 4861      38304465 
 4862              	.LASF64:
 4863 03e6 77616974 		.ascii	"waitForTurn\000"
 4863      466F7254 
 4863      75726E00 
 4864              	.LASF57:
 4865 03f2 466F7277 		.ascii	"Forward\000"
 4865      61726400 
 4866              	.LASF3:
 4867 03fa 73686F72 		.ascii	"short unsigned int\000"
 4867      7420756E 
 4867      7369676E 
 4867      65642069 
 4867      6E7400
 4868              	.LASF107:
 4869 040d 646F6E74 		.ascii	"dontOverwriteRightIgnore\000"
 4869      4F766572 
 4869      77726974 
 4869      65526967 
 4869      68744967 
 4870              	.LASF105:
 4871 0426 746F6F45 		.ascii	"tooEarlyFlag\000"
 4871      61726C79 
 4871      466C6167 
 4871      00
 4872              	.LASF90:
 4873 0433 53657452 		.ascii	"SetRobotMovement\000"
 4873      6F626F74 
 4873      4D6F7665 
 4873      6D656E74 
 4873      00
 4874              	.LASF17:
 4875 0444 696E7438 		.ascii	"int8\000"
 4875      00
 4876              	.LASF78:
 4877 0449 73706565 		.ascii	"speedTimer\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 104


 4877      6454696D 
 4877      657200
 4878              	.LASF12:
 4879 0454 5F5F696E 		.ascii	"__int32_t\000"
 4879      7433325F 
 4879      7400
 4880              	.LASF159:
 4881 045e 6D61696E 		.ascii	"main.c\000"
 4881      2E6300
 4882              	.LASF31:
 4883 0465 67315F79 		.ascii	"g1_ypos\000"
 4883      706F7300 
 4884              	.LASF84:
 4885 046d 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4885      546F4E65 
 4885      7874496E 
 4885      73747275 
 4885      6374696F 
 4886              	.LASF2:
 4887 0483 73686F72 		.ascii	"short int\000"
 4887      7420696E 
 4887      7400
 4888              	.LASF89:
 4889 048d 71756164 		.ascii	"quadPulseCount\000"
 4889      50756C73 
 4889      65436F75 
 4889      6E7400
 4890              	.LASF115:
 4891 049c 74735F64 		.ascii	"ts_display\000"
 4891      6973706C 
 4891      617900
 4892              	.LASF148:
 4893 04a7 63757272 		.ascii	"currentFoodListIndex\000"
 4893      656E7446 
 4893      6F6F644C 
 4893      69737449 
 4893      6E646578 
 4894              	.LASF75:
 4895 04bc 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4895      61726443 
 4895      6F757273 
 4895      65436F72 
 4895      72656374 
 4896              	.LASF121:
 4897 04d4 666C6167 		.ascii	"flag_packet\000"
 4897      5F706163 
 4897      6B657400 
 4898              	.LASF118:
 4899 04e0 666C6167 		.ascii	"flag_ts_speed\000"
 4899      5F74735F 
 4899      73706565 
 4899      6400
 4900              	.LASF32:
 4901 04ee 67315F73 		.ascii	"g1_speed\000"
 4901      70656564 
 4901      00
 4902              	.LASF39:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 105


 4903 04f7 4C656674 		.ascii	"Left\000"
 4903      00
 4904              	.LASF96:
 4905 04fc 75547572 		.ascii	"uTurnFinishedFlag\000"
 4905      6E46696E 
 4905      69736865 
 4905      64466C61 
 4905      6700
 4906              	.LASF10:
 4907 050e 73697A65 		.ascii	"sizetype\000"
 4907      74797065 
 4907      00
 4908              	.LASF152:
 4909 0517 63757272 		.ascii	"currentRow\000"
 4909      656E7452 
 4909      6F7700
 4910              	.LASF129:
 4911 0522 73797374 		.ascii	"system_state\000"
 4911      656D5F73 
 4911      74617465 
 4911      00
 4912              	.LASF33:
 4913 052f 67315F64 		.ascii	"g1_direction\000"
 4913      69726563 
 4913      74696F6E 
 4913      00
 4914              	.LASF128:
 4915 053c 75736242 		.ascii	"usbBuffer\000"
 4915      75666665 
 4915      7200
 4916              	.LASF44:
 4917 0546 77616974 		.ascii	"waitForLeftTurn\000"
 4917      466F724C 
 4917      65667454 
 4917      75726E00 
 4918              	.LASF30:
 4919 0556 67315F78 		.ascii	"g1_xpos\000"
 4919      706F7300 
 4920              	.LASF35:
 4921 055e 67325F79 		.ascii	"g2_ypos\000"
 4921      706F7300 
 4922              	.LASF99:
 4923 0566 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 4923      436F7572 
 4923      7365436F 
 4923      72726563 
 4923      74696F6E 
 4924              	.LASF124:
 4925 0582 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4925      5F72665F 
 4925      7472616E 
 4925      736D6973 
 4925      73696F6E 
 4926              	.LASF150:
 4927 059e 78426C6F 		.ascii	"xBlocksize\000"
 4927      636B7369 
 4927      7A6500
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 106


 4928              	.LASF151:
 4929 05a9 79426C6F 		.ascii	"yBlocksize\000"
 4929      636B7369 
 4929      7A6500
 4930              	.LASF19:
 4931 05b4 666C6F61 		.ascii	"float\000"
 4931      7400
 4932              	.LASF139:
 4933 05ba 746F7461 		.ascii	"totalMilliseconds\000"
 4933      6C4D696C 
 4933      6C697365 
 4933      636F6E64 
 4933      7300
 4934              	.LASF63:
 4935 05cc 556E6B6E 		.ascii	"Unknown\000"
 4935      6F776E00 
 4936              	.LASF85:
 4937 05d4 47657449 		.ascii	"GetInstructionAtIndex\000"
 4937      6E737472 
 4937      75637469 
 4937      6F6E4174 
 4937      496E6465 
 4938              	.LASF144:
 4939 05ea 6B656570 		.ascii	"keepLedOn\000"
 4939      4C65644F 
 4939      6E00
 4940              	.LASF113:
 4941 05f4 74735F75 		.ascii	"ts_update\000"
 4941      70646174 
 4941      6500
 4942              	.LASF95:
 4943 05fe 75547572 		.ascii	"uTurnStartedFlag\000"
 4943      6E537461 
 4943      72746564 
 4943      466C6167 
 4943      00
 4944              	.LASF13:
 4945 060f 696E7433 		.ascii	"int32_t\000"
 4945      325F7400 
 4946              	.LASF1:
 4947 0617 756E7369 		.ascii	"unsigned char\000"
 4947      676E6564 
 4947      20636861 
 4947      7200
 4948              	.LASF15:
 4949 0625 75696E74 		.ascii	"uint16\000"
 4949      313600
 4950              	.LASF42:
 4951 062c 496E7374 		.ascii	"InstructionDirection\000"
 4951      72756374 
 4951      696F6E44 
 4951      69726563 
 4951      74696F6E 
 4952              	.LASF34:
 4953 0641 67325F78 		.ascii	"g2_xpos\000"
 4953      706F7300 
 4954              	.LASF136:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 107


 4955 0649 70726576 		.ascii	"previousInstruction\000"
 4955      696F7573 
 4955      496E7374 
 4955      72756374 
 4955      696F6E00 
 4956              	.LASF134:
 4957 065d 70726576 		.ascii	"previousOrientation\000"
 4957      696F7573 
 4957      4F726965 
 4957      6E746174 
 4957      696F6E00 
 4958              	.LASF155:
 4959 0671 69676E6F 		.ascii	"ignoreSensor\000"
 4959      72655365 
 4959      6E736F72 
 4959      00
 4960              	.LASF97:
 4961 067e 6C656674 		.ascii	"leftStatusFlag\000"
 4961      53746174 
 4961      7573466C 
 4961      616700
 4962              	.LASF81:
 4963 068d 63757272 		.ascii	"currentInstructionDirection\000"
 4963      656E7449 
 4963      6E737472 
 4963      75637469 
 4963      6F6E4469 
 4964              	.LASF24:
 4965 06a9 726F626F 		.ascii	"robot_ypos\000"
 4965      745F7970 
 4965      6F7300
 4966              	.LASF60:
 4967 06b4 41646A75 		.ascii	"AdjustToTheLeft\000"
 4967      7374546F 
 4967      5468654C 
 4967      65667400 
 4968              	.LASF43:
 4969 06c4 476F466F 		.ascii	"GoForward\000"
 4969      72776172 
 4969      6400
 4970              	.LASF40:
 4971 06ce 52696768 		.ascii	"Right\000"
 4971      7400
 4972              	.LASF156:
 4973 06d4 6C617374 		.ascii	"lastDirectionAfter180\000"
 4973      44697265 
 4973      6374696F 
 4973      6E416674 
 4973      65723138 
 4974              	.LASF137:
 4975 06ea 6E756D53 		.ascii	"numSteps\000"
 4975      74657073 
 4975      00
 4976              	.LASF76:
 4977 06f3 5370696E 		.ascii	"SpinCourseCorrection\000"
 4977      436F7572 
 4977      7365436F 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 108


 4977      72726563 
 4977      74696F6E 
 4978              	.LASF119:
 4979 0708 666C6167 		.ascii	"flag_ts_display\000"
 4979      5F74735F 
 4979      64697370 
 4979      6C617900 
 4980              	.LASF74:
 4981 0718 6E657744 		.ascii	"newDistance\000"
 4981      69737461 
 4981      6E636500 
 4982              	.LASF9:
 4983 0724 6C6F6E67 		.ascii	"long double\000"
 4983      20646F75 
 4983      626C6500 
 4984              	.LASF11:
 4985 0730 63686172 		.ascii	"char\000"
 4985      00
 4986              	.LASF27:
 4987 0735 67305F79 		.ascii	"g0_ypos\000"
 4987      706F7300 
 4988              	.LASF67:
 4989 073d 5370696E 		.ascii	"Spin180\000"
 4989      31383000 
 4990              	.LASF8:
 4991 0745 756E7369 		.ascii	"unsigned int\000"
 4991      676E6564 
 4991      20696E74 
 4991      00
 4992              	.LASF21:
 4993 0752 72737369 		.ascii	"rssi\000"
 4993      00
 4994              	.LASF22:
 4995 0757 696E6465 		.ascii	"index\000"
 4995      7800
 4996              	.LASF71:
 4997 075d 53365F44 		.ascii	"S6_DETECTED\000"
 4997      45544543 
 4997      54454400 
 4998              	.LASF130:
 4999 0769 666F6F64 		.ascii	"food_list\000"
 4999      5F6C6973 
 4999      7400
 5000              	.LASF38:
 5001 0773 446F776E 		.ascii	"Down\000"
 5001      00
 5002              	.LASF141:
 5003 0778 62756666 		.ascii	"buffer\000"
 5003      657200
 5004              	.LASF117:
 5005 077f 666C6167 		.ascii	"flag_ts_update\000"
 5005      5F74735F 
 5005      75706461 
 5005      746500
 5006              	.LASF125:
 5007 078e 64697370 		.ascii	"displaystring\000"
 5007      6C617973 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 109


 5007      7472696E 
 5007      6700
 5008              	.LASF23:
 5009 079c 726F626F 		.ascii	"robot_xpos\000"
 5009      745F7870 
 5009      6F7300
 5010              	.LASF133:
 5011 07a7 63757272 		.ascii	"currentRobotOrientation\000"
 5011      656E7452 
 5011      6F626F74 
 5011      4F726965 
 5011      6E746174 
 5012              	.LASF160:
 5013 07bf 433A5C50 		.ascii	"C:\\Projects\\University\\301-Robot\\psoc student p"
 5013      726F6A65 
 5013      6374735C 
 5013      556E6976 
 5013      65727369 
 5014 07ee 61636B5C 		.ascii	"ack\\psoc_code_base\\CS301_Class.cydsn\000"
 5014      70736F63 
 5014      5F636F64 
 5014      655F6261 
 5014      73655C43 
 5015              	.LASF131:
 5016 0813 63757272 		.ascii	"currentDirection\000"
 5016      656E7444 
 5016      69726563 
 5016      74696F6E 
 5016      00
 5017              	.LASF79:
 5018 0824 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 5018      6F76656D 
 5018      656E7441 
 5018      63636F72 
 5018      64696E67 
 5019              	.LASF93:
 5020 0846 7475726E 		.ascii	"turnFinishedFlag\000"
 5020      46696E69 
 5020      73686564 
 5020      466C6167 
 5020      00
 5021              	.LASF138:
 5022 0857 696E7374 		.ascii	"instructionList\000"
 5022      72756374 
 5022      696F6E4C 
 5022      69737400 
 5023              	.LASF45:
 5024 0867 77616974 		.ascii	"waitForRightTurn\000"
 5024      466F7252 
 5024      69676874 
 5024      5475726E 
 5024      00
 5025              	.LASF147:
 5026 0878 6A756E63 		.ascii	"junctionConfiguration\000"
 5026      74696F6E 
 5026      436F6E66 
 5026      69677572 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 110


 5026      6174696F 
 5027              	.LASF135:
 5028 088e 63757272 		.ascii	"currentInstruction\000"
 5028      656E7449 
 5028      6E737472 
 5028      75637469 
 5028      6F6E00
 5029              	.LASF102:
 5030 08a1 746F7461 		.ascii	"totalLineCount\000"
 5030      6C4C696E 
 5030      65436F75 
 5030      6E7400
 5031              	.LASF87:
 5032 08b0 636F756E 		.ascii	"count1\000"
 5032      743100
 5033              	.LASF72:
 5034 08b7 54494D45 		.ascii	"TIMER_FINISH\000"
 5034      525F4649 
 5034      4E495348 
 5034      00
 5035              	.LASF83:
 5036 08c4 52657365 		.ascii	"ResetSensorFlags\000"
 5036      7453656E 
 5036      736F7246 
 5036      6C616773 
 5036      00
 5037              	.LASF18:
 5038 08d5 696E7431 		.ascii	"int16\000"
 5038      3600
 5039              	.LASF161:
 5040 08db 71756164 		.ascii	"quadCountToRPM\000"
 5040      436F756E 
 5040      74546F52 
 5040      504D00
 5041              	.LASF52:
 5042 08ea 69676E6F 		.ascii	"ignoreL\000"
 5042      72654C00 
 5043              	.LASF59:
 5044 08f2 5475726E 		.ascii	"TurnLeft\000"
 5044      4C656674 
 5044      00
 5045              	.LASF53:
 5046 08fb 69676E6F 		.ascii	"ignoreR\000"
 5046      72655200 
 5047              	.LASF92:
 5048 0903 7475726E 		.ascii	"turnStartedFlag\000"
 5048      53746172 
 5048      74656446 
 5048      6C616700 
 5049              	.LASF28:
 5050 0913 67305F73 		.ascii	"g0_speed\000"
 5050      70656564 
 5050      00
 5051              	.LASF110:
 5052 091c 666F7277 		.ascii	"forwardAfterTurnRIgnore\000"
 5052      61726441 
 5052      66746572 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxpZ13e.s 			page 111


 5052      5475726E 
 5052      5249676E 
 5053              	.LASF25:
 5054 0934 726F626F 		.ascii	"robot_orientation\000"
 5054      745F6F72 
 5054      69656E74 
 5054      6174696F 
 5054      6E00
 5055              	.LASF154:
 5056 0946 73746F70 		.ascii	"stoppedAfterTurn\000"
 5056      70656441 
 5056      66746572 
 5056      5475726E 
 5056      00
 5057              	.LASF146:
 5058 0957 666F7277 		.ascii	"forwardBuffer\000"
 5058      61726442 
 5058      75666665 
 5058      7200
 5059              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
