ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 03       		.byte	3
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 03       		.byte	3
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Right;
  46:main.c        **** enum OrientationState previousOrientation = Right;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** // --- YIPPE
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s3 = 0;
  51:main.c        **** uint8 s4 = 0;
  52:main.c        **** uint8 s5 = 0;
  53:main.c        **** uint8 s6 = 0;
  54:main.c        **** //* ========================================
  55:main.c        **** // Calculating Distance
  56:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  57:main.c        **** 
  58:main.c        **** uint32 totalMilliseconds = 0;
  59:main.c        **** float totalDistance = 0; // in mm
  60:main.c        **** //* ========================================
  61:main.c        **** char buffer[69];
  62:main.c        **** int quadDec2Count = 0;
  63:main.c        **** int timerInt = 0;
  64:main.c        **** int keepLedOn = 0;
  65:main.c        **** uint32 stopBuffer = 0;
  66:main.c        **** 
  67:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  68:main.c        **** 
  69:main.c        **** CY_ISR (speedTimer) {
 200              		.loc 1 69 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 6


 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  70:main.c        ****     timerInt = 1;
 213              		.loc 1 70 0
 214 0006 324B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  71:main.c        ****     //quadDec_M1 used for turning macros
  72:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 72 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 2F4B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  73:main.c        ****     
  74:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 74 0
 224 0018 2F4B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 0FD0     		beq	.L2
  75:main.c        ****         currentDirection == waitForTurn || 
 228              		.loc 1 75 0 discriminator 1
 229 0020 2D4B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == waitForTurn || 
 231              		.loc 1 74 0 discriminator 1
 232 0024 072B     		cmp	r3, #7
 233 0026 0BD0     		beq	.L2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 234              		.loc 1 76 0
 235 0028 2B4B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForTurn || 
 237              		.loc 1 75 0
 238 002c 0A2B     		cmp	r3, #10
 239 002e 07D0     		beq	.L2
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 240              		.loc 1 77 0
 241 0030 294B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 243              		.loc 1 76 0
 244 0034 032B     		cmp	r3, #3
 245 0036 03D0     		beq	.L2
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 246              		.loc 1 78 0
 247 0038 274B     		ldr	r3, .L4+24
 248 003a 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 249              		.loc 1 77 0
 250 003c 042B     		cmp	r3, #4
 251 003e 34D1     		bne	.L3
 252              	.L2:
  79:main.c        ****         quadDec2Count != 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 7


 253              		.loc 1 79 0
 254 0040 244B     		ldr	r3, .L4+20
 255 0042 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 256              		.loc 1 78 0
 257 0044 002B     		cmp	r3, #0
 258 0046 30D0     		beq	.L3
 259              	.LBB2:
  80:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  81:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 260              		.loc 1 81 0
 261 0048 224B     		ldr	r3, .L4+20
 262 004a 1B68     		ldr	r3, [r3]
 263 004c 002B     		cmp	r3, #0
 264 004e B8BF     		it	lt
 265 0050 5B42     		rsblt	r3, r3, #0
 266 0052 1846     		mov	r0, r3
 267 0054 FFF7FEFF 		bl	__aeabi_i2d
 268 0058 19A3     		adr	r3, .L4
 269 005a D3E90023 		ldrd	r2, [r3]
 270 005e FFF7FEFF 		bl	__aeabi_dmul
 271 0062 0346     		mov	r3, r0
 272 0064 0C46     		mov	r4, r1
 273 0066 1846     		mov	r0, r3
 274 0068 2146     		mov	r1, r4
 275 006a 17A3     		adr	r3, .L4+8
 276 006c D3E90023 		ldrd	r2, [r3]
 277 0070 FFF7FEFF 		bl	__aeabi_dmul
 278 0074 0346     		mov	r3, r0
 279 0076 0C46     		mov	r4, r1
 280 0078 1846     		mov	r0, r3
 281 007a 2146     		mov	r1, r4
 282 007c 4FF00002 		mov	r2, #0
 283 0080 164B     		ldr	r3, .L4+28
 284 0082 FFF7FEFF 		bl	__aeabi_ddiv
 285 0086 0346     		mov	r3, r0
 286 0088 0C46     		mov	r4, r1
 287 008a 1846     		mov	r0, r3
 288 008c 2146     		mov	r1, r4
 289 008e FFF7FEFF 		bl	__aeabi_d2f
 290 0092 0346     		mov	r3, r0
 291 0094 7B60     		str	r3, [r7, #4]	@ float
  82:main.c        ****         
  83:main.c        ****         totalDistance = totalDistance + newDistance;
 292              		.loc 1 83 0
 293 0096 124B     		ldr	r3, .L4+32
 294 0098 1B68     		ldr	r3, [r3]	@ float
 295 009a 7968     		ldr	r1, [r7, #4]	@ float
 296 009c 1846     		mov	r0, r3
 297 009e FFF7FEFF 		bl	__aeabi_fadd
 298 00a2 0346     		mov	r3, r0
 299 00a4 1A46     		mov	r2, r3
 300 00a6 0E4B     		ldr	r3, .L4+32
 301 00a8 1A60     		str	r2, [r3]	@ float
 302              	.L3:
 303              	.LBE2:
  84:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 8


  85:main.c        ****     
  86:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 304              		.loc 1 86 0
 305 00aa 0020     		movs	r0, #0
 306 00ac FFF7FEFF 		bl	QuadDec_M2_SetCounter
  87:main.c        ****     QuadDec_M2_Start(); // restart counter
 307              		.loc 1 87 0
 308 00b0 FFF7FEFF 		bl	QuadDec_M2_Start
  88:main.c        ****     
  89:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 309              		.loc 1 89 0
 310 00b4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  90:main.c        **** }
 311              		.loc 1 90 0
 312 00b8 00BF     		nop
 313 00ba 0C37     		adds	r7, r7, #12
 314              		.cfi_def_cfa_offset 12
 315 00bc BD46     		mov	sp, r7
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 00be 90BD     		pop	{r4, r7, pc}
 319              	.L5:
 320              		.align	3
 321              	.L4:
 322 00c0 182D4454 		.word	1413754136
 323 00c4 FB210940 		.word	1074340347
 324 00c8 00000000 		.word	0
 325 00cc 00205040 		.word	1078992896
 326 00d0 00000000 		.word	timerInt
 327 00d4 00000000 		.word	quadDec2Count
 328 00d8 00000000 		.word	currentDirection
 329 00dc 00806C40 		.word	1080852480
 330 00e0 00000000 		.word	totalDistance
 331              		.cfi_endproc
 332              	.LFE64:
 333              		.size	speedTimer, .-speedTimer
 334              		.section	.text.S3_DETECTED,"ax",%progbits
 335              		.align	2
 336              		.global	S3_DETECTED
 337              		.thumb
 338              		.thumb_func
 339              		.type	S3_DETECTED, %function
 340              	S3_DETECTED:
 341              	.LFB65:
  91:main.c        **** 
  92:main.c        **** CY_ISR(S3_DETECTED) {
 342              		.loc 1 92 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
  93:main.c        ****     // Sensor has detected WHITE
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 9


  94:main.c        ****     s3 = 1; // , Black = 0, White = 1
 352              		.loc 1 94 0
 353 0004 034B     		ldr	r3, .L7
 354 0006 0122     		movs	r2, #1
 355 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     //LED_Write(1u);
  96:main.c        **** }
 356              		.loc 1 96 0
 357 000a 00BF     		nop
 358 000c BD46     		mov	sp, r7
 359              		.cfi_def_cfa_register 13
 360              		@ sp needed
 361 000e 80BC     		pop	{r7}
 362              		.cfi_restore 7
 363              		.cfi_def_cfa_offset 0
 364 0010 7047     		bx	lr
 365              	.L8:
 366 0012 00BF     		.align	2
 367              	.L7:
 368 0014 00000000 		.word	s3
 369              		.cfi_endproc
 370              	.LFE65:
 371              		.size	S3_DETECTED, .-S3_DETECTED
 372              		.section	.text.S4_DETECTED,"ax",%progbits
 373              		.align	2
 374              		.global	S4_DETECTED
 375              		.thumb
 376              		.thumb_func
 377              		.type	S4_DETECTED, %function
 378              	S4_DETECTED:
 379              	.LFB66:
  97:main.c        **** 
  98:main.c        **** CY_ISR(S4_DETECTED) {
 380              		.loc 1 98 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
  99:main.c        ****     // Sensor has detected WHITE
 100:main.c        ****     s4 = 1; // , Black = 0, White = 1
 390              		.loc 1 100 0
 391 0004 034B     		ldr	r3, .L10
 392 0006 0122     		movs	r2, #1
 393 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     //LED_Write(1u);
 102:main.c        **** }
 394              		.loc 1 102 0
 395 000a 00BF     		nop
 396 000c BD46     		mov	sp, r7
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 10


 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 0010 7047     		bx	lr
 403              	.L11:
 404 0012 00BF     		.align	2
 405              	.L10:
 406 0014 00000000 		.word	s4
 407              		.cfi_endproc
 408              	.LFE66:
 409              		.size	S4_DETECTED, .-S4_DETECTED
 410              		.section	.text.S5_DETECTED,"ax",%progbits
 411              		.align	2
 412              		.global	S5_DETECTED
 413              		.thumb
 414              		.thumb_func
 415              		.type	S5_DETECTED, %function
 416              	S5_DETECTED:
 417              	.LFB67:
 103:main.c        **** 
 104:main.c        **** CY_ISR(S5_DETECTED) {
 418              		.loc 1 104 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423 0000 80B4     		push	{r7}
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 105:main.c        ****     // Sensor has detected WHITE
 106:main.c        ****     s5 = 1; // , Black = 0, White = 1
 428              		.loc 1 106 0
 429 0004 034B     		ldr	r3, .L13
 430 0006 0122     		movs	r2, #1
 431 0008 1A70     		strb	r2, [r3]
 107:main.c        ****     //LED_Write(1u);
 108:main.c        **** }
 432              		.loc 1 108 0
 433 000a 00BF     		nop
 434 000c BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 000e 80BC     		pop	{r7}
 438              		.cfi_restore 7
 439              		.cfi_def_cfa_offset 0
 440 0010 7047     		bx	lr
 441              	.L14:
 442 0012 00BF     		.align	2
 443              	.L13:
 444 0014 00000000 		.word	s5
 445              		.cfi_endproc
 446              	.LFE67:
 447              		.size	S5_DETECTED, .-S5_DETECTED
 448              		.section	.text.S6_DETECTED,"ax",%progbits
 449              		.align	2
 450              		.global	S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 11


 451              		.thumb
 452              		.thumb_func
 453              		.type	S6_DETECTED, %function
 454              	S6_DETECTED:
 455              	.LFB68:
 109:main.c        **** 
 110:main.c        **** CY_ISR(S6_DETECTED) {
 456              		.loc 1 110 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 7, -4
 464 0002 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 111:main.c        ****     // Sensor has detected WHITE
 112:main.c        ****     s6 = 1; // , Black = 0, White = 1
 466              		.loc 1 112 0
 467 0004 034B     		ldr	r3, .L16
 468 0006 0122     		movs	r2, #1
 469 0008 1A70     		strb	r2, [r3]
 113:main.c        ****     //LED_Write(1u);
 114:main.c        **** }
 470              		.loc 1 114 0
 471 000a 00BF     		nop
 472 000c BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 000e 80BC     		pop	{r7}
 476              		.cfi_restore 7
 477              		.cfi_def_cfa_offset 0
 478 0010 7047     		bx	lr
 479              	.L17:
 480 0012 00BF     		.align	2
 481              	.L16:
 482 0014 00000000 		.word	s6
 483              		.cfi_endproc
 484              	.LFE68:
 485              		.size	S6_DETECTED, .-S6_DETECTED
 486              		.section	.text.TIMER_FINISH,"ax",%progbits
 487              		.align	2
 488              		.global	TIMER_FINISH
 489              		.thumb
 490              		.thumb_func
 491              		.type	TIMER_FINISH, %function
 492              	TIMER_FINISH:
 493              	.LFB69:
 115:main.c        **** 
 116:main.c        **** CY_ISR(TIMER_FINISH) {
 494              		.loc 1 116 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 12


 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 117:main.c        ****     if (currentDirection == Stop) {
 504              		.loc 1 117 0
 505 0004 0A4B     		ldr	r3, .L21
 506 0006 1B68     		ldr	r3, [r3]
 507 0008 052B     		cmp	r3, #5
 508 000a 05D1     		bne	.L19
 118:main.c        ****         stopBuffer = stopBuffer + 1;
 509              		.loc 1 118 0
 510 000c 094B     		ldr	r3, .L21+4
 511 000e 1B68     		ldr	r3, [r3]
 512 0010 0133     		adds	r3, r3, #1
 513 0012 084A     		ldr	r2, .L21+4
 514 0014 1360     		str	r3, [r2]
 515 0016 02E0     		b	.L20
 516              	.L19:
 119:main.c        ****     } else {
 120:main.c        ****         stopBuffer = 0;
 517              		.loc 1 120 0
 518 0018 064B     		ldr	r3, .L21+4
 519 001a 0022     		movs	r2, #0
 520 001c 1A60     		str	r2, [r3]
 521              	.L20:
 121:main.c        ****     }
 122:main.c        ****     SetRobotMovement(); 
 522              		.loc 1 122 0
 523 001e FFF7FEFF 		bl	SetRobotMovement
 123:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 524              		.loc 1 123 0
 525 0022 FFF7FEFF 		bl	ResetSensorFlags
 124:main.c        ****     Timer_LED_ReadStatusRegister();
 526              		.loc 1 124 0
 527 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 125:main.c        **** }
 528              		.loc 1 125 0
 529 002a 00BF     		nop
 530 002c 80BD     		pop	{r7, pc}
 531              	.L22:
 532 002e 00BF     		.align	2
 533              	.L21:
 534 0030 00000000 		.word	currentDirection
 535 0034 00000000 		.word	stopBuffer
 536              		.cfi_endproc
 537              	.LFE69:
 538              		.size	TIMER_FINISH, .-TIMER_FINISH
 539              		.section	.text.main,"ax",%progbits
 540              		.align	2
 541              		.global	main
 542              		.thumb
 543              		.thumb_func
 544              		.type	main, %function
 545              	main:
 546              	.LFB70:
 126:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 13


 127:main.c        **** 
 128:main.c        **** int main()
 129:main.c        **** {
 547              		.loc 1 129 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 130:main.c        **** // ----- INITIALIZATIONS ----------
 131:main.c        ****     CYGlobalIntEnable;
 557              		.loc 1 131 0
 558              		.syntax unified
 559              	@ 131 "main.c" 1
 560 0004 62B6     		CPSIE   i
 561              	@ 0 "" 2
 132:main.c        ****     ResetSensorFlags();
 562              		.loc 1 132 0
 563              		.thumb
 564              		.syntax unified
 565 0006 FFF7FEFF 		bl	ResetSensorFlags
 133:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 566              		.loc 1 133 0
 567 000a FFF7FEFF 		bl	init
 134:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 568              		.loc 1 134 0
 569 000e 1948     		ldr	r0, .L27
 570 0010 FFF7FEFF 		bl	isr_speed_StartEx
 135:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 571              		.loc 1 135 0
 572 0014 1848     		ldr	r0, .L27+4
 573 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 136:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 574              		.loc 1 136 0
 575 001a 1848     		ldr	r0, .L27+8
 576 001c FFF7FEFF 		bl	S3_detected_StartEx
 137:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 577              		.loc 1 137 0
 578 0020 1748     		ldr	r0, .L27+12
 579 0022 FFF7FEFF 		bl	S4_detected_StartEx
 138:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 580              		.loc 1 138 0
 581 0026 1748     		ldr	r0, .L27+16
 582 0028 FFF7FEFF 		bl	S5_detected_StartEx
 139:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 583              		.loc 1 139 0
 584 002c 1648     		ldr	r0, .L27+20
 585 002e FFF7FEFF 		bl	S6_detected_StartEx
 140:main.c        ****     Timer_LED_Start();
 586              		.loc 1 140 0
 587 0032 FFF7FEFF 		bl	Timer_LED_Start
 141:main.c        **** 
 142:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 14


 588              		.loc 1 142 0
 589 0036 1548     		ldr	r0, .L27+24
 590 0038 FFF7FEFF 		bl	findPath
 143:main.c        **** 
 144:main.c        **** // ------USB SETUP ----------------    
 145:main.c        **** #ifdef USE_USB    
 146:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 591              		.loc 1 146 0
 592 003c 0121     		movs	r1, #1
 593 003e 0020     		movs	r0, #0
 594 0040 FFF7FEFF 		bl	USBUART_Start
 147:main.c        **** #endif        
 148:main.c        ****     RF_BT_SELECT_Write(0);
 595              		.loc 1 148 0
 596 0044 0020     		movs	r0, #0
 597 0046 FFF7FEFF 		bl	RF_BT_SELECT_Write
 598              	.L26:
 149:main.c        ****     
 150:main.c        ****     //usbPutString("Initialised UART");
 151:main.c        ****     for(;;)
 152:main.c        ****     {
 153:main.c        ****         if(timerInt == 1) {
 599              		.loc 1 153 0
 600 004a 114B     		ldr	r3, .L27+28
 601 004c 1B68     		ldr	r3, [r3]
 602 004e 012B     		cmp	r3, #1
 603 0050 08D1     		bne	.L24
 154:main.c        ****             timerInt = 0;
 604              		.loc 1 154 0
 605 0052 0F4B     		ldr	r3, .L27+28
 606 0054 0022     		movs	r2, #0
 607 0056 1A60     		str	r2, [r3]
 155:main.c        ****             // calculate RPM of M2
 156:main.c        ****             quadCountToRPM(quadDec2Count);
 608              		.loc 1 156 0
 609 0058 0E4B     		ldr	r3, .L27+32
 610 005a 1B68     		ldr	r3, [r3]
 611 005c 9BB2     		uxth	r3, r3
 612 005e 1846     		mov	r0, r3
 613 0060 FFF7FEFF 		bl	quadCountToRPM
 614              	.L24:
 157:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 158:main.c        ****             //usbPutString(buffer);
 159:main.c        ****             //usbPutString(" ");
 160:main.c        ****         }
 161:main.c        ****         //handle_usb();
 162:main.c        ****         if (flag_KB_string == 1)
 615              		.loc 1 162 0
 616 0064 0C4B     		ldr	r3, .L27+36
 617 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 618 0068 012B     		cmp	r3, #1
 619 006a EED1     		bne	.L26
 163:main.c        ****         {
 164:main.c        ****             //usbPutString("Total Distance: ");
 165:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 166:main.c        ****             //usbPutString(buffer);
 167:main.c        ****             flag_KB_string = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 15


 620              		.loc 1 167 0
 621 006c 0A4B     		ldr	r3, .L27+36
 622 006e 0022     		movs	r2, #0
 623 0070 1A70     		strb	r2, [r3]
 168:main.c        ****         }           
 169:main.c        ****     }
 624              		.loc 1 169 0
 625 0072 EAE7     		b	.L26
 626              	.L28:
 627              		.align	2
 628              	.L27:
 629 0074 00000000 		.word	speedTimer
 630 0078 00000000 		.word	TIMER_FINISH
 631 007c 00000000 		.word	S3_DETECTED
 632 0080 00000000 		.word	S4_DETECTED
 633 0084 00000000 		.word	S5_DETECTED
 634 0088 00000000 		.word	S6_DETECTED
 635 008c 00000000 		.word	map
 636 0090 00000000 		.word	timerInt
 637 0094 00000000 		.word	quadDec2Count
 638 0098 00000000 		.word	flag_KB_string
 639              		.cfi_endproc
 640              	.LFE70:
 641              		.size	main, .-main
 642              		.global	__aeabi_fmul
 643              		.global	__aeabi_f2iz
 644              		.section	.text.quadCountToRPM,"ax",%progbits
 645              		.align	2
 646              		.global	quadCountToRPM
 647              		.thumb
 648              		.thumb_func
 649              		.type	quadCountToRPM, %function
 650              	quadCountToRPM:
 651              	.LFB71:
 170:main.c        ****     return 0;
 171:main.c        **** }
 172:main.c        **** 
 173:main.c        **** // Calculations
 174:main.c        **** //* ========================================
 175:main.c        **** int16 quadCountToRPM(uint16 count)
 176:main.c        **** {
 652              		.loc 1 176 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 16
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 90B5     		push	{r4, r7, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 32
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 0346     		mov	r3, r0
 666 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 177:main.c        ****     float cps = count/57.00;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 16


 667              		.loc 1 177 0
 668 000a FB88     		ldrh	r3, [r7, #6]
 669 000c 1846     		mov	r0, r3
 670 000e FFF7FEFF 		bl	__aeabi_i2d
 671 0012 4FF00002 		mov	r2, #0
 672 0016 0D4B     		ldr	r3, .L31
 673 0018 FFF7FEFF 		bl	__aeabi_ddiv
 674 001c 0346     		mov	r3, r0
 675 001e 0C46     		mov	r4, r1
 676 0020 1846     		mov	r0, r3
 677 0022 2146     		mov	r1, r4
 678 0024 FFF7FEFF 		bl	__aeabi_d2f
 679 0028 0346     		mov	r3, r0
 680 002a FB60     		str	r3, [r7, #12]	@ float
 178:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 681              		.loc 1 178 0
 682 002c 0849     		ldr	r1, .L31+4
 683 002e F868     		ldr	r0, [r7, #12]	@ float
 684 0030 FFF7FEFF 		bl	__aeabi_fmul
 685 0034 0346     		mov	r3, r0
 686 0036 1846     		mov	r0, r3
 687 0038 FFF7FEFF 		bl	__aeabi_f2iz
 688 003c 0346     		mov	r3, r0
 689 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 179:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 180:main.c        ****     return rpm;
 690              		.loc 1 180 0
 691 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 181:main.c        ****     //usbPutString(buffer);
 182:main.c        ****     //usbPutString("rpm ");
 183:main.c        **** }
 692              		.loc 1 183 0
 693 0044 1846     		mov	r0, r3
 694 0046 1437     		adds	r7, r7, #20
 695              		.cfi_def_cfa_offset 12
 696 0048 BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 004a 90BD     		pop	{r4, r7, pc}
 700              	.L32:
 701              		.align	2
 702              	.L31:
 703 004c 00804C40 		.word	1078755328
 704 0050 00007041 		.word	1097859072
 705              		.cfi_endproc
 706              	.LFE71:
 707              		.size	quadCountToRPM, .-quadCountToRPM
 708              		.section	.text.ResetSensorFlags,"ax",%progbits
 709              		.align	2
 710              		.global	ResetSensorFlags
 711              		.thumb
 712              		.thumb_func
 713              		.type	ResetSensorFlags, %function
 714              	ResetSensorFlags:
 715              	.LFB72:
 184:main.c        **** 
 185:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 17


 186:main.c        **** void ResetSensorFlags() {
 716              		.loc 1 186 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 187:main.c        ****     s3 = 0;
 726              		.loc 1 187 0
 727 0004 074B     		ldr	r3, .L34
 728 0006 0022     		movs	r2, #0
 729 0008 1A70     		strb	r2, [r3]
 188:main.c        ****     s4 = 0;
 730              		.loc 1 188 0
 731 000a 074B     		ldr	r3, .L34+4
 732 000c 0022     		movs	r2, #0
 733 000e 1A70     		strb	r2, [r3]
 189:main.c        ****     s5 = 0;
 734              		.loc 1 189 0
 735 0010 064B     		ldr	r3, .L34+8
 736 0012 0022     		movs	r2, #0
 737 0014 1A70     		strb	r2, [r3]
 190:main.c        ****     s6 = 0;
 738              		.loc 1 190 0
 739 0016 064B     		ldr	r3, .L34+12
 740 0018 0022     		movs	r2, #0
 741 001a 1A70     		strb	r2, [r3]
 191:main.c        **** }
 742              		.loc 1 191 0
 743 001c 00BF     		nop
 744 001e BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 0020 80BC     		pop	{r7}
 748              		.cfi_restore 7
 749              		.cfi_def_cfa_offset 0
 750 0022 7047     		bx	lr
 751              	.L35:
 752              		.align	2
 753              	.L34:
 754 0024 00000000 		.word	s3
 755 0028 00000000 		.word	s4
 756 002c 00000000 		.word	s5
 757 0030 00000000 		.word	s6
 758              		.cfi_endproc
 759              	.LFE72:
 760              		.size	ResetSensorFlags, .-ResetSensorFlags
 761              		.global	yBlocksize
 762              		.data
 763 004e 0000     		.align	2
 764              		.type	yBlocksize, %object
 765              		.size	yBlocksize, 4
 766              	yBlocksize:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 18


 767 0050 0000FF42 		.word	1124007936
 768              		.global	xBlocksize
 769              		.align	2
 770              		.type	xBlocksize, %object
 771              		.size	xBlocksize, 4
 772              	xBlocksize:
 773 0054 0000B942 		.word	1119420416
 774              		.global	currentRow
 775              		.type	currentRow, %object
 776              		.size	currentRow, 1
 777              	currentRow:
 778 0058 01       		.byte	1
 779              		.global	currentCol
 780              		.type	currentCol, %object
 781              		.size	currentCol, 1
 782              	currentCol:
 783 0059 01       		.byte	1
 784              		.section	.text.GetNextStep,"ax",%progbits
 785              		.align	2
 786              		.global	GetNextStep
 787              		.thumb
 788              		.thumb_func
 789              		.type	GetNextStep, %function
 790              	GetNextStep:
 791              	.LFB73:
 192:main.c        **** 
 193:main.c        **** float yBlocksize = 127.5;
 194:main.c        **** float xBlocksize = 92.5;
 195:main.c        **** uint8 currentRow = 1;
 196:main.c        **** uint8 currentCol = 1;
 197:main.c        **** 
 198:main.c        **** enum DirectionState GetNextStep() {
 792              		.loc 1 198 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 0000 80B4     		push	{r7}
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0002 83B0     		sub	sp, sp, #12
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 199:main.c        ****     enum DirectionState directionState;
 200:main.c        ****     // Determines robot movement and orientation to follow optimal path
 201:main.c        ****     //enum DirectionState directionState = Stop;
 202:main.c        ****     if((currentRow == 1) && (currentCol == 5)) {
 804              		.loc 1 202 0
 805 0006 AC4B     		ldr	r3, .L63
 806 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 807 000a 012B     		cmp	r3, #1
 808 000c 07D1     		bne	.L37
 809              		.loc 1 202 0 is_stmt 0 discriminator 1
 810 000e AB4B     		ldr	r3, .L63+4
 811 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 0012 052B     		cmp	r3, #5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 19


 813 0014 03D1     		bne	.L37
 203:main.c        ****         directionState = Stop; 
 814              		.loc 1 203 0 is_stmt 1
 815 0016 0523     		movs	r3, #5
 816 0018 7B60     		str	r3, [r7, #4]
 204:main.c        ****         return directionState;
 817              		.loc 1 204 0
 818 001a 7B68     		ldr	r3, [r7, #4]
 819 001c 46E1     		b	.L38
 820              	.L37:
 205:main.c        ****     }
 206:main.c        ****     switch (previousOrientation) {
 821              		.loc 1 206 0
 822 001e A84B     		ldr	r3, .L63+8
 823 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 824 0022 032B     		cmp	r3, #3
 825 0024 00F23881 		bhi	.L58
 826 0028 01A2     		adr	r2, .L41
 827 002a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 828 002e 00BF     		.p2align 2
 829              	.L41:
 830 0030 41000000 		.word	.L40+1
 831 0034 D9000000 		.word	.L42+1
 832 0038 6D010000 		.word	.L43+1
 833 003c 03020000 		.word	.L44+1
 834              		.p2align 1
 835              	.L40:
 207:main.c        ****             case Up:
 208:main.c        ****                 if(map[currentRow - 1][currentCol] == 8) {
 836              		.loc 1 208 0
 837 0040 9D4B     		ldr	r3, .L63
 838 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 839 0044 5A1E     		subs	r2, r3, #1
 840 0046 9D4B     		ldr	r3, .L63+4
 841 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 842 004a 1846     		mov	r0, r3
 843 004c 9D49     		ldr	r1, .L63+12
 844 004e 1346     		mov	r3, r2
 845 0050 DB00     		lsls	r3, r3, #3
 846 0052 1344     		add	r3, r3, r2
 847 0054 5B00     		lsls	r3, r3, #1
 848 0056 1344     		add	r3, r3, r2
 849 0058 0344     		add	r3, r3, r0
 850 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 851 005e 082B     		cmp	r3, #8
 852 0060 0BD1     		bne	.L45
 209:main.c        ****                     currentOrientation = Up; 
 853              		.loc 1 209 0
 854 0062 994B     		ldr	r3, .L63+16
 855 0064 0022     		movs	r2, #0
 856 0066 1A70     		strb	r2, [r3]
 210:main.c        ****                     directionState = Forward;
 857              		.loc 1 210 0
 858 0068 0023     		movs	r3, #0
 859 006a 7B60     		str	r3, [r7, #4]
 211:main.c        ****                     currentRow--;// update position
 860              		.loc 1 211 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 20


 861 006c 924B     		ldr	r3, .L63
 862 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 0070 013B     		subs	r3, r3, #1
 864 0072 DAB2     		uxtb	r2, r3
 865 0074 904B     		ldr	r3, .L63
 866 0076 1A70     		strb	r2, [r3]
 212:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 213:main.c        ****                     currentOrientation = Left;
 214:main.c        ****                     directionState = TurnLeft;
 215:main.c        ****                     //currentRow--;
 216:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 217:main.c        ****                     currentOrientation = Right;
 218:main.c        ****                     directionState = TurnRight;
 219:main.c        ****                     //currentRow++; // update position
 220:main.c        ****                 }
 221:main.c        ****                 break;
 867              		.loc 1 221 0
 868 0078 10E1     		b	.L59
 869              	.L45:
 212:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 870              		.loc 1 212 0
 871 007a 8F4B     		ldr	r3, .L63
 872 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 007e 1A46     		mov	r2, r3
 874 0080 8E4B     		ldr	r3, .L63+4
 875 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 876 0084 591E     		subs	r1, r3, #1
 877 0086 8F48     		ldr	r0, .L63+12
 878 0088 1346     		mov	r3, r2
 879 008a DB00     		lsls	r3, r3, #3
 880 008c 1344     		add	r3, r3, r2
 881 008e 5B00     		lsls	r3, r3, #1
 882 0090 1344     		add	r3, r3, r2
 883 0092 0B44     		add	r3, r3, r1
 884 0094 50F82330 		ldr	r3, [r0, r3, lsl #2]
 885 0098 082B     		cmp	r3, #8
 886 009a 05D1     		bne	.L47
 213:main.c        ****                     directionState = TurnLeft;
 887              		.loc 1 213 0
 888 009c 8A4B     		ldr	r3, .L63+16
 889 009e 0222     		movs	r2, #2
 890 00a0 1A70     		strb	r2, [r3]
 214:main.c        ****                     //currentRow--;
 891              		.loc 1 214 0
 892 00a2 0223     		movs	r3, #2
 893 00a4 7B60     		str	r3, [r7, #4]
 894              		.loc 1 221 0
 895 00a6 F9E0     		b	.L59
 896              	.L47:
 216:main.c        ****                     currentOrientation = Right;
 897              		.loc 1 216 0
 898 00a8 834B     		ldr	r3, .L63
 899 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 00ac 1A46     		mov	r2, r3
 901 00ae 834B     		ldr	r3, .L63+4
 902 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 903 00b2 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 21


 904 00b4 8348     		ldr	r0, .L63+12
 905 00b6 1346     		mov	r3, r2
 906 00b8 DB00     		lsls	r3, r3, #3
 907 00ba 1344     		add	r3, r3, r2
 908 00bc 5B00     		lsls	r3, r3, #1
 909 00be 1344     		add	r3, r3, r2
 910 00c0 0B44     		add	r3, r3, r1
 911 00c2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 912 00c6 082B     		cmp	r3, #8
 913 00c8 40F0E880 		bne	.L59
 217:main.c        ****                     directionState = TurnRight;
 914              		.loc 1 217 0
 915 00cc 7E4B     		ldr	r3, .L63+16
 916 00ce 0322     		movs	r2, #3
 917 00d0 1A70     		strb	r2, [r3]
 218:main.c        ****                     //currentRow++; // update position
 918              		.loc 1 218 0
 919 00d2 0123     		movs	r3, #1
 920 00d4 7B60     		str	r3, [r7, #4]
 921              		.loc 1 221 0
 922 00d6 E1E0     		b	.L59
 923              	.L42:
 222:main.c        ****             case Down:
 223:main.c        ****                 if(map[currentRow + 1][currentCol] == 8) {
 924              		.loc 1 223 0
 925 00d8 774B     		ldr	r3, .L63
 926 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 00dc 5A1C     		adds	r2, r3, #1
 928 00de 774B     		ldr	r3, .L63+4
 929 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 930 00e2 1846     		mov	r0, r3
 931 00e4 7749     		ldr	r1, .L63+12
 932 00e6 1346     		mov	r3, r2
 933 00e8 DB00     		lsls	r3, r3, #3
 934 00ea 1344     		add	r3, r3, r2
 935 00ec 5B00     		lsls	r3, r3, #1
 936 00ee 1344     		add	r3, r3, r2
 937 00f0 0344     		add	r3, r3, r0
 938 00f2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 939 00f6 082B     		cmp	r3, #8
 940 00f8 0BD1     		bne	.L49
 224:main.c        ****                     currentOrientation = Down;
 941              		.loc 1 224 0
 942 00fa 734B     		ldr	r3, .L63+16
 943 00fc 0122     		movs	r2, #1
 944 00fe 1A70     		strb	r2, [r3]
 225:main.c        ****                     directionState = Forward;
 945              		.loc 1 225 0
 946 0100 0023     		movs	r3, #0
 947 0102 7B60     		str	r3, [r7, #4]
 226:main.c        ****                     currentRow++;
 948              		.loc 1 226 0
 949 0104 6C4B     		ldr	r3, .L63
 950 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 0108 0133     		adds	r3, r3, #1
 952 010a DAB2     		uxtb	r2, r3
 953 010c 6A4B     		ldr	r3, .L63
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 22


 954 010e 1A70     		strb	r2, [r3]
 227:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 228:main.c        ****                     currentOrientation = Right;
 229:main.c        ****                     directionState = TurnRight;
 230:main.c        ****                     //currentRow--;
 231:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 232:main.c        ****                     currentOrientation = Left;
 233:main.c        ****                     //directionState = TurnLeft;
 234:main.c        ****                     //currentRow++; // update position
 235:main.c        ****                 }
 236:main.c        ****                 break;
 955              		.loc 1 236 0
 956 0110 C6E0     		b	.L60
 957              	.L49:
 227:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 958              		.loc 1 227 0
 959 0112 694B     		ldr	r3, .L63
 960 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961 0116 1A46     		mov	r2, r3
 962 0118 684B     		ldr	r3, .L63+4
 963 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 011c 591E     		subs	r1, r3, #1
 965 011e 6948     		ldr	r0, .L63+12
 966 0120 1346     		mov	r3, r2
 967 0122 DB00     		lsls	r3, r3, #3
 968 0124 1344     		add	r3, r3, r2
 969 0126 5B00     		lsls	r3, r3, #1
 970 0128 1344     		add	r3, r3, r2
 971 012a 0B44     		add	r3, r3, r1
 972 012c 50F82330 		ldr	r3, [r0, r3, lsl #2]
 973 0130 082B     		cmp	r3, #8
 974 0132 05D1     		bne	.L51
 228:main.c        ****                     directionState = TurnRight;
 975              		.loc 1 228 0
 976 0134 644B     		ldr	r3, .L63+16
 977 0136 0322     		movs	r2, #3
 978 0138 1A70     		strb	r2, [r3]
 229:main.c        ****                     //currentRow--;
 979              		.loc 1 229 0
 980 013a 0123     		movs	r3, #1
 981 013c 7B60     		str	r3, [r7, #4]
 982              		.loc 1 236 0
 983 013e AFE0     		b	.L60
 984              	.L51:
 231:main.c        ****                     currentOrientation = Left;
 985              		.loc 1 231 0
 986 0140 5D4B     		ldr	r3, .L63
 987 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 988 0144 1A46     		mov	r2, r3
 989 0146 5D4B     		ldr	r3, .L63+4
 990 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 991 014a 591C     		adds	r1, r3, #1
 992 014c 5D48     		ldr	r0, .L63+12
 993 014e 1346     		mov	r3, r2
 994 0150 DB00     		lsls	r3, r3, #3
 995 0152 1344     		add	r3, r3, r2
 996 0154 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 23


 997 0156 1344     		add	r3, r3, r2
 998 0158 0B44     		add	r3, r3, r1
 999 015a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1000 015e 082B     		cmp	r3, #8
 1001 0160 40F09E80 		bne	.L60
 232:main.c        ****                     //directionState = TurnLeft;
 1002              		.loc 1 232 0
 1003 0164 584B     		ldr	r3, .L63+16
 1004 0166 0222     		movs	r2, #2
 1005 0168 1A70     		strb	r2, [r3]
 1006              		.loc 1 236 0
 1007 016a 99E0     		b	.L60
 1008              	.L43:
 237:main.c        ****             case Left:
 238:main.c        ****                 if(map[currentRow][currentCol - 1] == 8) {
 1009              		.loc 1 238 0
 1010 016c 524B     		ldr	r3, .L63
 1011 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1012 0170 1A46     		mov	r2, r3
 1013 0172 524B     		ldr	r3, .L63+4
 1014 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 0176 591E     		subs	r1, r3, #1
 1016 0178 5248     		ldr	r0, .L63+12
 1017 017a 1346     		mov	r3, r2
 1018 017c DB00     		lsls	r3, r3, #3
 1019 017e 1344     		add	r3, r3, r2
 1020 0180 5B00     		lsls	r3, r3, #1
 1021 0182 1344     		add	r3, r3, r2
 1022 0184 0B44     		add	r3, r3, r1
 1023 0186 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1024 018a 082B     		cmp	r3, #8
 1025 018c 0BD1     		bne	.L52
 239:main.c        ****                     currentOrientation = Left;
 1026              		.loc 1 239 0
 1027 018e 4E4B     		ldr	r3, .L63+16
 1028 0190 0222     		movs	r2, #2
 1029 0192 1A70     		strb	r2, [r3]
 240:main.c        ****                     directionState = Forward;
 1030              		.loc 1 240 0
 1031 0194 0023     		movs	r3, #0
 1032 0196 7B60     		str	r3, [r7, #4]
 241:main.c        ****                     currentCol--; // update position
 1033              		.loc 1 241 0
 1034 0198 484B     		ldr	r3, .L63+4
 1035 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1036 019c 013B     		subs	r3, r3, #1
 1037 019e DAB2     		uxtb	r2, r3
 1038 01a0 464B     		ldr	r3, .L63+4
 1039 01a2 1A70     		strb	r2, [r3]
 242:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 243:main.c        ****                     currentOrientation = Up;
 244:main.c        ****                     directionState = TurnRight;
 245:main.c        ****                     //currentRow++; // update position
 246:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 247:main.c        ****                     currentOrientation = Down;
 248:main.c        ****                     directionState = TurnLeft;
 249:main.c        ****                     //currentCol--; // update position
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 24


 250:main.c        ****                 }
 251:main.c        ****                 break;
 1040              		.loc 1 251 0
 1041 01a4 7EE0     		b	.L61
 1042              	.L52:
 242:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1043              		.loc 1 242 0
 1044 01a6 444B     		ldr	r3, .L63
 1045 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1046 01aa 5A1E     		subs	r2, r3, #1
 1047 01ac 434B     		ldr	r3, .L63+4
 1048 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 01b0 1846     		mov	r0, r3
 1050 01b2 4449     		ldr	r1, .L63+12
 1051 01b4 1346     		mov	r3, r2
 1052 01b6 DB00     		lsls	r3, r3, #3
 1053 01b8 1344     		add	r3, r3, r2
 1054 01ba 5B00     		lsls	r3, r3, #1
 1055 01bc 1344     		add	r3, r3, r2
 1056 01be 0344     		add	r3, r3, r0
 1057 01c0 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1058 01c4 082B     		cmp	r3, #8
 1059 01c6 05D1     		bne	.L54
 243:main.c        ****                     directionState = TurnRight;
 1060              		.loc 1 243 0
 1061 01c8 3F4B     		ldr	r3, .L63+16
 1062 01ca 0022     		movs	r2, #0
 1063 01cc 1A70     		strb	r2, [r3]
 244:main.c        ****                     //currentRow++; // update position
 1064              		.loc 1 244 0
 1065 01ce 0123     		movs	r3, #1
 1066 01d0 7B60     		str	r3, [r7, #4]
 1067              		.loc 1 251 0
 1068 01d2 67E0     		b	.L61
 1069              	.L54:
 246:main.c        ****                     currentOrientation = Down;
 1070              		.loc 1 246 0
 1071 01d4 384B     		ldr	r3, .L63
 1072 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 01d8 5A1C     		adds	r2, r3, #1
 1074 01da 384B     		ldr	r3, .L63+4
 1075 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1076 01de 1846     		mov	r0, r3
 1077 01e0 3849     		ldr	r1, .L63+12
 1078 01e2 1346     		mov	r3, r2
 1079 01e4 DB00     		lsls	r3, r3, #3
 1080 01e6 1344     		add	r3, r3, r2
 1081 01e8 5B00     		lsls	r3, r3, #1
 1082 01ea 1344     		add	r3, r3, r2
 1083 01ec 0344     		add	r3, r3, r0
 1084 01ee 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1085 01f2 082B     		cmp	r3, #8
 1086 01f4 56D1     		bne	.L61
 247:main.c        ****                     directionState = TurnLeft;
 1087              		.loc 1 247 0
 1088 01f6 344B     		ldr	r3, .L63+16
 1089 01f8 0122     		movs	r2, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 25


 1090 01fa 1A70     		strb	r2, [r3]
 248:main.c        ****                     //currentCol--; // update position
 1091              		.loc 1 248 0
 1092 01fc 0223     		movs	r3, #2
 1093 01fe 7B60     		str	r3, [r7, #4]
 1094              		.loc 1 251 0
 1095 0200 50E0     		b	.L61
 1096              	.L44:
 252:main.c        ****             case Right:
 253:main.c        ****                 if(map[currentRow][currentCol + 1] == 8) {
 1097              		.loc 1 253 0
 1098 0202 2D4B     		ldr	r3, .L63
 1099 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1100 0206 1A46     		mov	r2, r3
 1101 0208 2C4B     		ldr	r3, .L63+4
 1102 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1103 020c 591C     		adds	r1, r3, #1
 1104 020e 2D48     		ldr	r0, .L63+12
 1105 0210 1346     		mov	r3, r2
 1106 0212 DB00     		lsls	r3, r3, #3
 1107 0214 1344     		add	r3, r3, r2
 1108 0216 5B00     		lsls	r3, r3, #1
 1109 0218 1344     		add	r3, r3, r2
 1110 021a 0B44     		add	r3, r3, r1
 1111 021c 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1112 0220 082B     		cmp	r3, #8
 1113 0222 0BD1     		bne	.L55
 254:main.c        ****                     currentOrientation = Right;
 1114              		.loc 1 254 0
 1115 0224 284B     		ldr	r3, .L63+16
 1116 0226 0322     		movs	r2, #3
 1117 0228 1A70     		strb	r2, [r3]
 255:main.c        ****                     directionState = Forward;
 1118              		.loc 1 255 0
 1119 022a 0023     		movs	r3, #0
 1120 022c 7B60     		str	r3, [r7, #4]
 256:main.c        ****                     currentCol++; // update position
 1121              		.loc 1 256 0
 1122 022e 234B     		ldr	r3, .L63+4
 1123 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0232 0133     		adds	r3, r3, #1
 1125 0234 DAB2     		uxtb	r2, r3
 1126 0236 214B     		ldr	r3, .L63+4
 1127 0238 1A70     		strb	r2, [r3]
 257:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 258:main.c        ****                     currentOrientation = Up;
 259:main.c        ****                     directionState = waitForLeftTurn;
 260:main.c        ****                     //currentCol++; // update position
 261:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 262:main.c        ****                     currentOrientation = Down;
 263:main.c        ****                     directionState = waitForRightTurn;
 264:main.c        ****                     //currentCol--; // update position
 265:main.c        ****                 }
 266:main.c        ****                 break;
 1128              		.loc 1 266 0
 1129 023a 35E0     		b	.L62
 1130              	.L55:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 26


 257:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1131              		.loc 1 257 0
 1132 023c 1E4B     		ldr	r3, .L63
 1133 023e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1134 0240 5A1E     		subs	r2, r3, #1
 1135 0242 1E4B     		ldr	r3, .L63+4
 1136 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 0246 1846     		mov	r0, r3
 1138 0248 1E49     		ldr	r1, .L63+12
 1139 024a 1346     		mov	r3, r2
 1140 024c DB00     		lsls	r3, r3, #3
 1141 024e 1344     		add	r3, r3, r2
 1142 0250 5B00     		lsls	r3, r3, #1
 1143 0252 1344     		add	r3, r3, r2
 1144 0254 0344     		add	r3, r3, r0
 1145 0256 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1146 025a 082B     		cmp	r3, #8
 1147 025c 05D1     		bne	.L57
 258:main.c        ****                     directionState = waitForLeftTurn;
 1148              		.loc 1 258 0
 1149 025e 1A4B     		ldr	r3, .L63+16
 1150 0260 0022     		movs	r2, #0
 1151 0262 1A70     		strb	r2, [r3]
 259:main.c        ****                     //currentCol++; // update position
 1152              		.loc 1 259 0
 1153 0264 0923     		movs	r3, #9
 1154 0266 7B60     		str	r3, [r7, #4]
 1155              		.loc 1 266 0
 1156 0268 1EE0     		b	.L62
 1157              	.L57:
 261:main.c        ****                     currentOrientation = Down;
 1158              		.loc 1 261 0
 1159 026a 134B     		ldr	r3, .L63
 1160 026c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1161 026e 5A1C     		adds	r2, r3, #1
 1162 0270 124B     		ldr	r3, .L63+4
 1163 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1164 0274 1846     		mov	r0, r3
 1165 0276 1349     		ldr	r1, .L63+12
 1166 0278 1346     		mov	r3, r2
 1167 027a DB00     		lsls	r3, r3, #3
 1168 027c 1344     		add	r3, r3, r2
 1169 027e 5B00     		lsls	r3, r3, #1
 1170 0280 1344     		add	r3, r3, r2
 1171 0282 0344     		add	r3, r3, r0
 1172 0284 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1173 0288 082B     		cmp	r3, #8
 1174 028a 0DD1     		bne	.L62
 262:main.c        ****                     directionState = waitForRightTurn;
 1175              		.loc 1 262 0
 1176 028c 0E4B     		ldr	r3, .L63+16
 1177 028e 0122     		movs	r2, #1
 1178 0290 1A70     		strb	r2, [r3]
 263:main.c        ****                     //currentCol--; // update position
 1179              		.loc 1 263 0
 1180 0292 0823     		movs	r3, #8
 1181 0294 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 27


 1182              		.loc 1 266 0
 1183 0296 07E0     		b	.L62
 1184              	.L58:
 267:main.c        ****             default:
 268:main.c        ****                 break;
 1185              		.loc 1 268 0
 1186 0298 00BF     		nop
 1187 029a 06E0     		b	.L48
 1188              	.L59:
 221:main.c        ****             case Down:
 1189              		.loc 1 221 0
 1190 029c 00BF     		nop
 1191 029e 04E0     		b	.L48
 1192              	.L60:
 236:main.c        ****             case Left:
 1193              		.loc 1 236 0
 1194 02a0 00BF     		nop
 1195 02a2 02E0     		b	.L48
 1196              	.L61:
 251:main.c        ****             case Right:
 1197              		.loc 1 251 0
 1198 02a4 00BF     		nop
 1199 02a6 00E0     		b	.L48
 1200              	.L62:
 266:main.c        ****             default:
 1201              		.loc 1 266 0
 1202 02a8 00BF     		nop
 1203              	.L48:
 269:main.c        ****         }
 270:main.c        ****     return directionState;
 1204              		.loc 1 270 0
 1205 02aa 7B68     		ldr	r3, [r7, #4]
 1206              	.L38:
 271:main.c        **** }
 1207              		.loc 1 271 0
 1208 02ac 1846     		mov	r0, r3
 1209 02ae 0C37     		adds	r7, r7, #12
 1210              		.cfi_def_cfa_offset 4
 1211 02b0 BD46     		mov	sp, r7
 1212              		.cfi_def_cfa_register 13
 1213              		@ sp needed
 1214 02b2 80BC     		pop	{r7}
 1215              		.cfi_restore 7
 1216              		.cfi_def_cfa_offset 0
 1217 02b4 7047     		bx	lr
 1218              	.L64:
 1219 02b6 00BF     		.align	2
 1220              	.L63:
 1221 02b8 00000000 		.word	currentRow
 1222 02bc 00000000 		.word	currentCol
 1223 02c0 00000000 		.word	previousOrientation
 1224 02c4 00000000 		.word	map
 1225 02c8 00000000 		.word	currentOrientation
 1226              		.cfi_endproc
 1227              	.LFE73:
 1228              		.size	GetNextStep, .-GetNextStep
 1229              		.global	__aeabi_fcmpge
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 28


 1230              		.section	.text.CheckSensorDirection,"ax",%progbits
 1231              		.align	2
 1232              		.global	CheckSensorDirection
 1233              		.thumb
 1234              		.thumb_func
 1235              		.type	CheckSensorDirection, %function
 1236              	CheckSensorDirection:
 1237              	.LFB74:
 272:main.c        **** 
 273:main.c        **** enum DirectionState CheckSensorDirection() {
 1238              		.loc 1 273 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 8
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242 0000 80B5     		push	{r7, lr}
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 82B0     		sub	sp, sp, #8
 1247              		.cfi_def_cfa_offset 16
 1248 0004 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 274:main.c        ****     float blocksize;
 275:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1250              		.loc 1 275 0
 1251 0006 814B     		ldr	r3, .L97
 1252 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1253 000a 002B     		cmp	r3, #0
 1254 000c 03D0     		beq	.L66
 1255              		.loc 1 275 0 is_stmt 0 discriminator 1
 1256 000e 7F4B     		ldr	r3, .L97
 1257 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258 0012 012B     		cmp	r3, #1
 1259 0014 02D1     		bne	.L67
 1260              	.L66:
 276:main.c        ****         blocksize = 128.40;
 1261              		.loc 1 276 0 is_stmt 1
 1262 0016 7E4B     		ldr	r3, .L97+4
 1263 0018 7B60     		str	r3, [r7, #4]	@ float
 1264 001a 01E0     		b	.L68
 1265              	.L67:
 277:main.c        ****     } else {
 278:main.c        ****         blocksize = 92.50;
 1266              		.loc 1 278 0
 1267 001c 7D4B     		ldr	r3, .L97+8
 1268 001e 7B60     		str	r3, [r7, #4]	@ float
 1269              	.L68:
 279:main.c        ****     }
 280:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1270              		.loc 1 280 0
 1271 0020 0523     		movs	r3, #5
 1272 0022 3B60     		str	r3, [r7]
 281:main.c        ****     previousDirection = currentDirection; // store currentDirection as previousDirection for next p
 1273              		.loc 1 281 0
 1274 0024 7C4B     		ldr	r3, .L97+12
 1275 0026 1B68     		ldr	r3, [r3]
 1276 0028 7C4A     		ldr	r2, .L97+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 29


 1277 002a 1360     		str	r3, [r2]
 282:main.c        ****     
 283:main.c        ****     if (totalDistance >= blocksize) {
 1278              		.loc 1 283 0
 1279 002c 7C4B     		ldr	r3, .L97+20
 1280 002e 1B68     		ldr	r3, [r3]	@ float
 1281 0030 7968     		ldr	r1, [r7, #4]	@ float
 1282 0032 1846     		mov	r0, r3
 1283 0034 FFF7FEFF 		bl	__aeabi_fcmpge
 1284 0038 0346     		mov	r3, r0
 1285 003a 002B     		cmp	r3, #0
 1286 003c 08D0     		beq	.L96
 284:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1287              		.loc 1 284 0
 1288 003e FFF7FEFF 		bl	GetNextStep
 1289 0042 3860     		str	r0, [r7]
 285:main.c        ****         totalDistance = 0; // reset distance
 1290              		.loc 1 285 0
 1291 0044 764B     		ldr	r3, .L97+20
 1292 0046 4FF00002 		mov	r2, #0
 1293 004a 1A60     		str	r2, [r3]	@ float
 286:main.c        ****         return directionState;
 1294              		.loc 1 286 0
 1295 004c 3B68     		ldr	r3, [r7]
 1296 004e D9E0     		b	.L71
 1297              	.L96:
 287:main.c        ****     }
 288:main.c        ****     
 289:main.c        ****     // STOP BUFFER * ========================================
 290:main.c        ****     if (previousDirection == Stop) {
 1298              		.loc 1 290 0
 1299 0050 724B     		ldr	r3, .L97+16
 1300 0052 1B68     		ldr	r3, [r3]
 1301 0054 052B     		cmp	r3, #5
 1302 0056 0AD1     		bne	.L72
 291:main.c        ****         if (stopBuffer <= 10) {
 1303              		.loc 1 291 0
 1304 0058 724B     		ldr	r3, .L97+24
 1305 005a 1B68     		ldr	r3, [r3]
 1306 005c 0A2B     		cmp	r3, #10
 1307 005e 02D8     		bhi	.L73
 292:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1308              		.loc 1 292 0
 1309 0060 0523     		movs	r3, #5
 1310 0062 3B60     		str	r3, [r7]
 1311 0064 01E0     		b	.L74
 1312              	.L73:
 293:main.c        ****         } else {
 294:main.c        ****             directionState = ForwardAfterTurn;
 1313              		.loc 1 294 0
 1314 0066 0A23     		movs	r3, #10
 1315 0068 3B60     		str	r3, [r7]
 1316              	.L74:
 295:main.c        ****         }
 296:main.c        ****         return directionState;
 1317              		.loc 1 296 0
 1318 006a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 30


 1319 006c CAE0     		b	.L71
 1320              	.L72:
 297:main.c        ****     }
 298:main.c        **** 
 299:main.c        ****     // TURNING- will only turn due to getNextStep() * ========================================    
 300:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1321              		.loc 1 300 0
 1322 006e 6B4B     		ldr	r3, .L97+16
 1323 0070 1B68     		ldr	r3, [r3]
 1324 0072 0A2B     		cmp	r3, #10
 1325 0074 0BD1     		bne	.L75
 301:main.c        ****         if (s3 || s4) {
 1326              		.loc 1 301 0
 1327 0076 6C4B     		ldr	r3, .L97+28
 1328 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1329 007a 002B     		cmp	r3, #0
 1330 007c 03D1     		bne	.L76
 1331              		.loc 1 301 0 is_stmt 0 discriminator 1
 1332 007e 6B4B     		ldr	r3, .L97+32
 1333 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1334 0082 002B     		cmp	r3, #0
 1335 0084 03D0     		beq	.L75
 1336              	.L76:
 302:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 1337              		.loc 1 302 0 is_stmt 1
 1338 0086 0023     		movs	r3, #0
 1339 0088 3B60     		str	r3, [r7]
 303:main.c        ****             return directionState;
 1340              		.loc 1 303 0
 1341 008a 3B68     		ldr	r3, [r7]
 1342 008c BAE0     		b	.L71
 1343              	.L75:
 304:main.c        ****         }
 305:main.c        ****     }
 306:main.c        **** 
 307:main.c        ****     if(previousDirection == waitForRightTurn) {
 1344              		.loc 1 307 0
 1345 008e 634B     		ldr	r3, .L97+16
 1346 0090 1B68     		ldr	r3, [r3]
 1347 0092 082B     		cmp	r3, #8
 1348 0094 0BD1     		bne	.L77
 308:main.c        ****         if(s4) {
 1349              		.loc 1 308 0
 1350 0096 654B     		ldr	r3, .L97+32
 1351 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 009a 002B     		cmp	r3, #0
 1353 009c 03D0     		beq	.L78
 309:main.c        ****             directionState = TurnRight;
 1354              		.loc 1 309 0
 1355 009e 0123     		movs	r3, #1
 1356 00a0 3B60     		str	r3, [r7]
 310:main.c        ****             return directionState;
 1357              		.loc 1 310 0
 1358 00a2 3B68     		ldr	r3, [r7]
 1359 00a4 AEE0     		b	.L71
 1360              	.L78:
 311:main.c        ****         } else {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 31


 312:main.c        ****             directionState = waitForRightTurn;
 1361              		.loc 1 312 0
 1362 00a6 0823     		movs	r3, #8
 1363 00a8 3B60     		str	r3, [r7]
 313:main.c        ****             return directionState;
 1364              		.loc 1 313 0
 1365 00aa 3B68     		ldr	r3, [r7]
 1366 00ac AAE0     		b	.L71
 1367              	.L77:
 314:main.c        ****         }
 315:main.c        ****     }
 316:main.c        **** 
 317:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1368              		.loc 1 317 0
 1369 00ae 5B4B     		ldr	r3, .L97+16
 1370 00b0 1B68     		ldr	r3, [r3]
 1371 00b2 092B     		cmp	r3, #9
 1372 00b4 0BD1     		bne	.L79
 318:main.c        ****         if(s3) {
 1373              		.loc 1 318 0
 1374 00b6 5C4B     		ldr	r3, .L97+28
 1375 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 00ba 002B     		cmp	r3, #0
 1377 00bc 03D0     		beq	.L80
 319:main.c        ****             directionState = TurnLeft;
 1378              		.loc 1 319 0
 1379 00be 0223     		movs	r3, #2
 1380 00c0 3B60     		str	r3, [r7]
 320:main.c        ****             return directionState;
 1381              		.loc 1 320 0
 1382 00c2 3B68     		ldr	r3, [r7]
 1383 00c4 9EE0     		b	.L71
 1384              	.L80:
 321:main.c        ****         } else {
 322:main.c        ****             directionState = waitForLeftTurn;
 1385              		.loc 1 322 0
 1386 00c6 0923     		movs	r3, #9
 1387 00c8 3B60     		str	r3, [r7]
 323:main.c        ****             return directionState;
 1388              		.loc 1 323 0
 1389 00ca 3B68     		ldr	r3, [r7]
 1390 00cc 9AE0     		b	.L71
 1391              	.L79:
 324:main.c        ****         }
 325:main.c        ****     }
 326:main.c        **** 
 327:main.c        ****     if(previousDirection == TurnRight) {
 1392              		.loc 1 327 0
 1393 00ce 534B     		ldr	r3, .L97+16
 1394 00d0 1B68     		ldr	r3, [r3]
 1395 00d2 012B     		cmp	r3, #1
 1396 00d4 1BD1     		bne	.L81
 328:main.c        ****         if(s5 && s6) {
 1397              		.loc 1 328 0
 1398 00d6 564B     		ldr	r3, .L97+36
 1399 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1400 00da 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 32


 1401 00dc 07D0     		beq	.L82
 1402              		.loc 1 328 0 is_stmt 0 discriminator 1
 1403 00de 554B     		ldr	r3, .L97+40
 1404 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 00e2 002B     		cmp	r3, #0
 1406 00e4 03D0     		beq	.L82
 329:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1407              		.loc 1 329 0 is_stmt 1
 1408 00e6 0123     		movs	r3, #1
 1409 00e8 3B60     		str	r3, [r7]
 330:main.c        ****             return directionState;
 1410              		.loc 1 330 0
 1411 00ea 3B68     		ldr	r3, [r7]
 1412 00ec 8AE0     		b	.L71
 1413              	.L82:
 331:main.c        ****         } 
 332:main.c        ****         else if (!s5 || !s6) {
 1414              		.loc 1 332 0
 1415 00ee 504B     		ldr	r3, .L97+36
 1416 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 00f2 002B     		cmp	r3, #0
 1418 00f4 03D0     		beq	.L83
 1419              		.loc 1 332 0 is_stmt 0 discriminator 1
 1420 00f6 4F4B     		ldr	r3, .L97+40
 1421 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 00fa 002B     		cmp	r3, #0
 1423 00fc 07D1     		bne	.L81
 1424              	.L83:
 333:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1425              		.loc 1 333 0 is_stmt 1
 1426 00fe 0523     		movs	r3, #5
 1427 0100 3B60     		str	r3, [r7]
 334:main.c        ****             totalDistance = 0; // correct totalDistance
 1428              		.loc 1 334 0
 1429 0102 474B     		ldr	r3, .L97+20
 1430 0104 4FF00002 		mov	r2, #0
 1431 0108 1A60     		str	r2, [r3]	@ float
 335:main.c        ****             return directionState;
 1432              		.loc 1 335 0
 1433 010a 3B68     		ldr	r3, [r7]
 1434 010c 7AE0     		b	.L71
 1435              	.L81:
 336:main.c        ****         }
 337:main.c        ****     }    
 338:main.c        **** 
 339:main.c        ****     if(previousDirection == TurnLeft) {
 1436              		.loc 1 339 0
 1437 010e 434B     		ldr	r3, .L97+16
 1438 0110 1B68     		ldr	r3, [r3]
 1439 0112 022B     		cmp	r3, #2
 1440 0114 1BD1     		bne	.L84
 340:main.c        ****         if(s5 && s6) {
 1441              		.loc 1 340 0
 1442 0116 464B     		ldr	r3, .L97+36
 1443 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1444 011a 002B     		cmp	r3, #0
 1445 011c 07D0     		beq	.L85
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 33


 1446              		.loc 1 340 0 is_stmt 0 discriminator 1
 1447 011e 454B     		ldr	r3, .L97+40
 1448 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1449 0122 002B     		cmp	r3, #0
 1450 0124 03D0     		beq	.L85
 341:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1451              		.loc 1 341 0 is_stmt 1
 1452 0126 0223     		movs	r3, #2
 1453 0128 3B60     		str	r3, [r7]
 342:main.c        ****             return directionState;
 1454              		.loc 1 342 0
 1455 012a 3B68     		ldr	r3, [r7]
 1456 012c 6AE0     		b	.L71
 1457              	.L85:
 343:main.c        ****         } 
 344:main.c        ****         else if (!s5 || !s6) {
 1458              		.loc 1 344 0
 1459 012e 404B     		ldr	r3, .L97+36
 1460 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 0132 002B     		cmp	r3, #0
 1462 0134 03D0     		beq	.L86
 1463              		.loc 1 344 0 is_stmt 0 discriminator 1
 1464 0136 3F4B     		ldr	r3, .L97+40
 1465 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1466 013a 002B     		cmp	r3, #0
 1467 013c 07D1     		bne	.L84
 1468              	.L86:
 345:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1469              		.loc 1 345 0 is_stmt 1
 1470 013e 0523     		movs	r3, #5
 1471 0140 3B60     		str	r3, [r7]
 346:main.c        ****             totalDistance = 0; // correct totalDistance
 1472              		.loc 1 346 0
 1473 0142 374B     		ldr	r3, .L97+20
 1474 0144 4FF00002 		mov	r2, #0
 1475 0148 1A60     		str	r2, [r3]	@ float
 347:main.c        ****             return directionState;
 1476              		.loc 1 347 0
 1477 014a 3B68     		ldr	r3, [r7]
 1478 014c 5AE0     		b	.L71
 1479              	.L84:
 348:main.c        ****         }
 349:main.c        ****     }
 350:main.c        ****     
 351:main.c        ****     // COURSE CORRECTION * ========================================
 352:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1480              		.loc 1 352 0
 1481 014e 334B     		ldr	r3, .L97+16
 1482 0150 1B68     		ldr	r3, [r3]
 1483 0152 002B     		cmp	r3, #0
 1484 0154 07D0     		beq	.L87
 1485              		.loc 1 352 0 is_stmt 0 discriminator 1
 1486 0156 314B     		ldr	r3, .L97+16
 1487 0158 1B68     		ldr	r3, [r3]
 1488 015a 032B     		cmp	r3, #3
 1489 015c 03D0     		beq	.L87
 1490              		.loc 1 352 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 34


 1491 015e 2F4B     		ldr	r3, .L97+16
 1492 0160 1B68     		ldr	r3, [r3]
 1493 0162 042B     		cmp	r3, #4
 1494 0164 0FD1     		bne	.L88
 1495              	.L87:
 353:main.c        ****         if(s6) {
 1496              		.loc 1 353 0 is_stmt 1
 1497 0166 334B     		ldr	r3, .L97+40
 1498 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1499 016a 002B     		cmp	r3, #0
 1500 016c 03D0     		beq	.L89
 354:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1501              		.loc 1 354 0
 1502 016e 0323     		movs	r3, #3
 1503 0170 3B60     		str	r3, [r7]
 355:main.c        ****             return directionState;
 1504              		.loc 1 355 0
 1505 0172 3B68     		ldr	r3, [r7]
 1506 0174 46E0     		b	.L71
 1507              	.L89:
 356:main.c        ****         }
 357:main.c        ****         if(s5) {
 1508              		.loc 1 357 0
 1509 0176 2E4B     		ldr	r3, .L97+36
 1510 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 017a 002B     		cmp	r3, #0
 1512 017c 03D0     		beq	.L88
 358:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1513              		.loc 1 358 0
 1514 017e 0423     		movs	r3, #4
 1515 0180 3B60     		str	r3, [r7]
 359:main.c        ****             return directionState;
 1516              		.loc 1 359 0
 1517 0182 3B68     		ldr	r3, [r7]
 1518 0184 3EE0     		b	.L71
 1519              	.L88:
 360:main.c        ****         }
 361:main.c        ****     }
 362:main.c        ****     
 363:main.c        ****     // FORWARD * ========================================
 364:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1520              		.loc 1 364 0
 1521 0186 284B     		ldr	r3, .L97+28
 1522 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1523 018a 002B     		cmp	r3, #0
 1524 018c 0FD0     		beq	.L90
 1525              		.loc 1 364 0 is_stmt 0 discriminator 1
 1526 018e 274B     		ldr	r3, .L97+32
 1527 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1528 0192 002B     		cmp	r3, #0
 1529 0194 0BD0     		beq	.L90
 1530              		.loc 1 364 0 discriminator 2
 1531 0196 264B     		ldr	r3, .L97+36
 1532 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 019a 002B     		cmp	r3, #0
 1534 019c 07D1     		bne	.L90
 1535              		.loc 1 364 0 discriminator 3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 35


 1536 019e 254B     		ldr	r3, .L97+40
 1537 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 01a2 002B     		cmp	r3, #0
 1539 01a4 03D1     		bne	.L90
 365:main.c        ****         directionState = Forward;
 1540              		.loc 1 365 0 is_stmt 1
 1541 01a6 0023     		movs	r3, #0
 1542 01a8 3B60     		str	r3, [r7]
 366:main.c        ****         return directionState;   
 1543              		.loc 1 366 0
 1544 01aa 3B68     		ldr	r3, [r7]
 1545 01ac 2AE0     		b	.L71
 1546              	.L90:
 367:main.c        ****     }
 368:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 369:main.c        ****     if(s5 && s6 && (previousDirection != waitForTurn)) {
 1547              		.loc 1 369 0
 1548 01ae 204B     		ldr	r3, .L97+36
 1549 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1550 01b2 002B     		cmp	r3, #0
 1551 01b4 0BD0     		beq	.L91
 1552              		.loc 1 369 0 is_stmt 0 discriminator 1
 1553 01b6 1F4B     		ldr	r3, .L97+40
 1554 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 01ba 002B     		cmp	r3, #0
 1556 01bc 07D0     		beq	.L91
 1557              		.loc 1 369 0 discriminator 2
 1558 01be 174B     		ldr	r3, .L97+16
 1559 01c0 1B68     		ldr	r3, [r3]
 1560 01c2 072B     		cmp	r3, #7
 1561 01c4 03D0     		beq	.L91
 370:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 1562              		.loc 1 370 0 is_stmt 1
 1563 01c6 0723     		movs	r3, #7
 1564 01c8 3B60     		str	r3, [r7]
 371:main.c        ****         return directionState;
 1565              		.loc 1 371 0
 1566 01ca 3B68     		ldr	r3, [r7]
 1567 01cc 1AE0     		b	.L71
 1568              	.L91:
 372:main.c        ****     }
 373:main.c        **** 
 374:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 1569              		.loc 1 374 0
 1570 01ce 134B     		ldr	r3, .L97+16
 1571 01d0 1B68     		ldr	r3, [r3]
 1572 01d2 072B     		cmp	r3, #7
 1573 01d4 0CD1     		bne	.L92
 1574              		.loc 1 374 0 is_stmt 0 discriminator 1
 1575 01d6 144B     		ldr	r3, .L97+28
 1576 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 01da 002B     		cmp	r3, #0
 1578 01dc 03D1     		bne	.L93
 1579              		.loc 1 374 0 discriminator 2
 1580 01de 134B     		ldr	r3, .L97+32
 1581 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 01e2 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 36


 1583 01e4 04D0     		beq	.L92
 1584              	.L93:
 375:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 1585              		.loc 1 375 0 is_stmt 1
 1586 01e6 FFF7FEFF 		bl	GetNextStep
 1587 01ea 3860     		str	r0, [r7]
 376:main.c        ****         return directionState;
 1588              		.loc 1 376 0
 1589 01ec 3B68     		ldr	r3, [r7]
 1590 01ee 09E0     		b	.L71
 1591              	.L92:
 377:main.c        ****     }
 378:main.c        **** 
 379:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 380:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 381:main.c        ****     if (previousDirection == Unknown) {
 1592              		.loc 1 381 0
 1593 01f0 0A4B     		ldr	r3, .L97+16
 1594 01f2 1B68     		ldr	r3, [r3]
 1595 01f4 062B     		cmp	r3, #6
 1596 01f6 03D1     		bne	.L94
 382:main.c        ****         directionState = Forward;
 1597              		.loc 1 382 0
 1598 01f8 0023     		movs	r3, #0
 1599 01fa 3B60     		str	r3, [r7]
 383:main.c        ****         return directionState;
 1600              		.loc 1 383 0
 1601 01fc 3B68     		ldr	r3, [r7]
 1602 01fe 01E0     		b	.L71
 1603              	.L94:
 384:main.c        ****     }
 385:main.c        **** 
 386:main.c        ****     // Possible reason
 387:main.c        ****     return previousDirection;
 1604              		.loc 1 387 0
 1605 0200 064B     		ldr	r3, .L97+16
 1606 0202 1B68     		ldr	r3, [r3]
 1607              	.L71:
 388:main.c        **** }
 1608              		.loc 1 388 0
 1609 0204 1846     		mov	r0, r3
 1610 0206 0837     		adds	r7, r7, #8
 1611              		.cfi_def_cfa_offset 8
 1612 0208 BD46     		mov	sp, r7
 1613              		.cfi_def_cfa_register 13
 1614              		@ sp needed
 1615 020a 80BD     		pop	{r7, pc}
 1616              	.L98:
 1617              		.align	2
 1618              	.L97:
 1619 020c 00000000 		.word	currentOrientation
 1620 0210 66660043 		.word	1124099686
 1621 0214 0000B942 		.word	1119420416
 1622 0218 00000000 		.word	currentDirection
 1623 021c 00000000 		.word	previousDirection
 1624 0220 00000000 		.word	totalDistance
 1625 0224 00000000 		.word	stopBuffer
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 37


 1626 0228 00000000 		.word	s3
 1627 022c 00000000 		.word	s4
 1628 0230 00000000 		.word	s5
 1629 0234 00000000 		.word	s6
 1630              		.cfi_endproc
 1631              	.LFE74:
 1632              		.size	CheckSensorDirection, .-CheckSensorDirection
 1633              		.section	.text.SetRobotMovement,"ax",%progbits
 1634              		.align	2
 1635              		.global	SetRobotMovement
 1636              		.thumb
 1637              		.thumb_func
 1638              		.type	SetRobotMovement, %function
 1639              	SetRobotMovement:
 1640              	.LFB75:
 389:main.c        **** 
 390:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 391:main.c        **** void SetRobotMovement() {
 1641              		.loc 1 391 0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 0
 1644              		@ frame_needed = 1, uses_anonymous_args = 0
 1645 0000 80B5     		push	{r7, lr}
 1646              		.cfi_def_cfa_offset 8
 1647              		.cfi_offset 7, -8
 1648              		.cfi_offset 14, -4
 1649 0002 00AF     		add	r7, sp, #0
 1650              		.cfi_def_cfa_register 7
 392:main.c        ****     currentDirection = CheckSensorDirection();   
 1651              		.loc 1 392 0
 1652 0004 FFF7FEFF 		bl	CheckSensorDirection
 1653 0008 0246     		mov	r2, r0
 1654 000a 224B     		ldr	r3, .L116
 1655 000c 1A60     		str	r2, [r3]
 393:main.c        ****     
 394:main.c        ****     switch (currentDirection) {
 1656              		.loc 1 394 0
 1657 000e 214B     		ldr	r3, .L116
 1658 0010 1B68     		ldr	r3, [r3]
 1659 0012 0B2B     		cmp	r3, #11
 1660 0014 3CD8     		bhi	.L114
 1661 0016 01A2     		adr	r2, .L102
 1662 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1663              		.p2align 2
 1664              	.L102:
 1665 001c 4D000000 		.word	.L101+1
 1666 0020 53000000 		.word	.L103+1
 1667 0024 59000000 		.word	.L104+1
 1668 0028 65000000 		.word	.L105+1
 1669 002c 5F000000 		.word	.L106+1
 1670 0030 6B000000 		.word	.L107+1
 1671 0034 8F000000 		.word	.L115+1
 1672 0038 71000000 		.word	.L109+1
 1673 003c 89000000 		.word	.L110+1
 1674 0040 83000000 		.word	.L111+1
 1675 0044 77000000 		.word	.L112+1
 1676 0048 7D000000 		.word	.L113+1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 38


 1677              		.p2align 1
 1678              	.L101:
 395:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 396:main.c        ****         case Forward:
 397:main.c        ****             moveForward();
 1679              		.loc 1 397 0
 1680 004c FFF7FEFF 		bl	moveForward
 398:main.c        ****             break;
 1681              		.loc 1 398 0
 1682 0050 1EE0     		b	.L100
 1683              	.L103:
 399:main.c        ****         case TurnRight:
 400:main.c        ****             turnRight();
 1684              		.loc 1 400 0
 1685 0052 FFF7FEFF 		bl	turnRight
 401:main.c        ****             break;
 1686              		.loc 1 401 0
 1687 0056 1BE0     		b	.L100
 1688              	.L104:
 402:main.c        ****         case TurnLeft:
 403:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1689              		.loc 1 403 0
 1690 0058 FFF7FEFF 		bl	turnLeft
 404:main.c        ****             break;
 1691              		.loc 1 404 0
 1692 005c 18E0     		b	.L100
 1693              	.L106:
 405:main.c        ****         case AdjustToTheRight:
 406:main.c        ****             adjustRight();
 1694              		.loc 1 406 0
 1695 005e FFF7FEFF 		bl	adjustRight
 407:main.c        ****             break;
 1696              		.loc 1 407 0
 1697 0062 15E0     		b	.L100
 1698              	.L105:
 408:main.c        ****         case AdjustToTheLeft:
 409:main.c        ****             adjustLeft();
 1699              		.loc 1 409 0
 1700 0064 FFF7FEFF 		bl	adjustLeft
 410:main.c        ****             break;
 1701              		.loc 1 410 0
 1702 0068 12E0     		b	.L100
 1703              	.L107:
 411:main.c        ****         case Stop:
 412:main.c        ****             stopMoving();
 1704              		.loc 1 412 0
 1705 006a FFF7FEFF 		bl	stopMoving
 413:main.c        ****             break;
 1706              		.loc 1 413 0
 1707 006e 0FE0     		b	.L100
 1708              	.L109:
 414:main.c        ****         case waitForTurn:
 415:main.c        ****             moveForward(); 
 1709              		.loc 1 415 0
 1710 0070 FFF7FEFF 		bl	moveForward
 416:main.c        ****             break;
 1711              		.loc 1 416 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 39


 1712 0074 0CE0     		b	.L100
 1713              	.L112:
 417:main.c        ****         case ForwardAfterTurn:
 418:main.c        ****             moveForward();
 1714              		.loc 1 418 0
 1715 0076 FFF7FEFF 		bl	moveForward
 419:main.c        ****             break;
 1716              		.loc 1 419 0
 1717 007a 09E0     		b	.L100
 1718              	.L113:
 420:main.c        ****         case Backward:
 421:main.c        ****             moveBackward();
 1719              		.loc 1 421 0
 1720 007c FFF7FEFF 		bl	moveBackward
 422:main.c        ****             break;
 1721              		.loc 1 422 0
 1722 0080 06E0     		b	.L100
 1723              	.L111:
 423:main.c        ****         case waitForLeftTurn:
 424:main.c        ****             moveForward();
 1724              		.loc 1 424 0
 1725 0082 FFF7FEFF 		bl	moveForward
 425:main.c        ****             break;
 1726              		.loc 1 425 0
 1727 0086 03E0     		b	.L100
 1728              	.L110:
 426:main.c        ****         case waitForRightTurn:
 427:main.c        ****             moveForward();
 1729              		.loc 1 427 0
 1730 0088 FFF7FEFF 		bl	moveForward
 428:main.c        ****             break;
 1731              		.loc 1 428 0
 1732 008c 00E0     		b	.L100
 1733              	.L115:
 429:main.c        ****         case Unknown:
 430:main.c        ****             // UNKNOWN CONFIGURATION
 431:main.c        ****             break;  
 1734              		.loc 1 431 0
 1735 008e 00BF     		nop
 1736              	.L100:
 1737              	.L114:
 432:main.c        ****     }
 433:main.c        **** }
 1738              		.loc 1 433 0
 1739 0090 00BF     		nop
 1740 0092 80BD     		pop	{r7, pc}
 1741              	.L117:
 1742              		.align	2
 1743              	.L116:
 1744 0094 00000000 		.word	currentDirection
 1745              		.cfi_endproc
 1746              	.LFE75:
 1747              		.size	SetRobotMovement, .-SetRobotMovement
 1748              		.text
 1749              	.Letext0:
 1750              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1751              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 40


 1752              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1753              		.file 5 "vars.h"
 1754              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1755              		.file 7 "map.h"
 1756              		.section	.debug_info,"",%progbits
 1757              	.Ldebug_info0:
 1758 0000 7A060000 		.4byte	0x67a
 1759 0004 0400     		.2byte	0x4
 1760 0006 00000000 		.4byte	.Ldebug_abbrev0
 1761 000a 04       		.byte	0x4
 1762 000b 01       		.uleb128 0x1
 1763 000c 9F000000 		.4byte	.LASF103
 1764 0010 0C       		.byte	0xc
 1765 0011 75040000 		.4byte	.LASF104
 1766 0015 C7030000 		.4byte	.LASF105
 1767 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1768 001d 00000000 		.4byte	0
 1769 0021 00000000 		.4byte	.Ldebug_line0
 1770 0025 02       		.uleb128 0x2
 1771 0026 01       		.byte	0x1
 1772 0027 06       		.byte	0x6
 1773 0028 EE020000 		.4byte	.LASF0
 1774 002c 02       		.uleb128 0x2
 1775 002d 01       		.byte	0x1
 1776 002e 08       		.byte	0x8
 1777 002f 5C020000 		.4byte	.LASF1
 1778 0033 02       		.uleb128 0x2
 1779 0034 02       		.byte	0x2
 1780 0035 05       		.byte	0x5
 1781 0036 5B000000 		.4byte	.LASF2
 1782 003a 02       		.uleb128 0x2
 1783 003b 02       		.byte	0x2
 1784 003c 07       		.byte	0x7
 1785 003d 83030000 		.4byte	.LASF3
 1786 0041 03       		.uleb128 0x3
 1787 0042 D8040000 		.4byte	.LASF12
 1788 0046 02       		.byte	0x2
 1789 0047 3F       		.byte	0x3f
 1790 0048 4C000000 		.4byte	0x4c
 1791 004c 02       		.uleb128 0x2
 1792 004d 04       		.byte	0x4
 1793 004e 05       		.byte	0x5
 1794 004f B6030000 		.4byte	.LASF4
 1795 0053 02       		.uleb128 0x2
 1796 0054 04       		.byte	0x4
 1797 0055 07       		.byte	0x7
 1798 0056 7C040000 		.4byte	.LASF5
 1799 005a 02       		.uleb128 0x2
 1800 005b 08       		.byte	0x8
 1801 005c 05       		.byte	0x5
 1802 005d B9010000 		.4byte	.LASF6
 1803 0061 02       		.uleb128 0x2
 1804 0062 08       		.byte	0x8
 1805 0063 07       		.byte	0x7
 1806 0064 02030000 		.4byte	.LASF7
 1807 0068 04       		.uleb128 0x4
 1808 0069 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 41


 1809 006a 05       		.byte	0x5
 1810 006b 696E7400 		.ascii	"int\000"
 1811 006f 02       		.uleb128 0x2
 1812 0070 04       		.byte	0x4
 1813 0071 07       		.byte	0x7
 1814 0072 2A030000 		.4byte	.LASF8
 1815 0076 02       		.uleb128 0x2
 1816 0077 08       		.byte	0x8
 1817 0078 04       		.byte	0x4
 1818 0079 82020000 		.4byte	.LASF9
 1819 007d 02       		.uleb128 0x2
 1820 007e 04       		.byte	0x4
 1821 007f 07       		.byte	0x7
 1822 0080 72000000 		.4byte	.LASF10
 1823 0084 02       		.uleb128 0x2
 1824 0085 01       		.byte	0x1
 1825 0086 08       		.byte	0x8
 1826 0087 B1030000 		.4byte	.LASF11
 1827 008b 03       		.uleb128 0x3
 1828 008c FA020000 		.4byte	.LASF13
 1829 0090 03       		.byte	0x3
 1830 0091 2C       		.byte	0x2c
 1831 0092 41000000 		.4byte	0x41
 1832 0096 05       		.uleb128 0x5
 1833 0097 89010000 		.4byte	.LASF14
 1834 009b 04       		.byte	0x4
 1835 009c E701     		.2byte	0x1e7
 1836 009e 2C000000 		.4byte	0x2c
 1837 00a2 05       		.uleb128 0x5
 1838 00a3 6B010000 		.4byte	.LASF15
 1839 00a7 04       		.byte	0x4
 1840 00a8 E801     		.2byte	0x1e8
 1841 00aa 3A000000 		.4byte	0x3a
 1842 00ae 05       		.uleb128 0x5
 1843 00af 6E040000 		.4byte	.LASF16
 1844 00b3 04       		.byte	0x4
 1845 00b4 E901     		.2byte	0x1e9
 1846 00b6 53000000 		.4byte	0x53
 1847 00ba 05       		.uleb128 0x5
 1848 00bb C7010000 		.4byte	.LASF17
 1849 00bf 04       		.byte	0x4
 1850 00c0 EA01     		.2byte	0x1ea
 1851 00c2 25000000 		.4byte	0x25
 1852 00c6 05       		.uleb128 0x5
 1853 00c7 83010000 		.4byte	.LASF18
 1854 00cb 04       		.byte	0x4
 1855 00cc EB01     		.2byte	0x1eb
 1856 00ce 33000000 		.4byte	0x33
 1857 00d2 02       		.uleb128 0x2
 1858 00d3 04       		.byte	0x4
 1859 00d4 04       		.byte	0x4
 1860 00d5 A1010000 		.4byte	.LASF19
 1861 00d9 02       		.uleb128 0x2
 1862 00da 08       		.byte	0x8
 1863 00db 04       		.byte	0x4
 1864 00dc 97040000 		.4byte	.LASF20
 1865 00e0 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 42


 1866 00e1 96030000 		.4byte	.LASF106
 1867 00e5 20       		.byte	0x20
 1868 00e6 05       		.byte	0x5
 1869 00e7 28       		.byte	0x28
 1870 00e8 B9010000 		.4byte	0x1b9
 1871 00ec 07       		.uleb128 0x7
 1872 00ed 97050000 		.4byte	.LASF21
 1873 00f1 05       		.byte	0x5
 1874 00f2 2A       		.byte	0x2a
 1875 00f3 BA000000 		.4byte	0xba
 1876 00f7 00       		.byte	0
 1877 00f8 07       		.uleb128 0x7
 1878 00f9 72010000 		.4byte	.LASF22
 1879 00fd 05       		.byte	0x5
 1880 00fe 2B       		.byte	0x2b
 1881 00ff 96000000 		.4byte	0x96
 1882 0103 01       		.byte	0x1
 1883 0104 07       		.uleb128 0x7
 1884 0105 52040000 		.4byte	.LASF23
 1885 0109 05       		.byte	0x5
 1886 010a 2C       		.byte	0x2c
 1887 010b C6000000 		.4byte	0xc6
 1888 010f 02       		.byte	0x2
 1889 0110 07       		.uleb128 0x7
 1890 0111 47050000 		.4byte	.LASF24
 1891 0115 05       		.byte	0x5
 1892 0116 2D       		.byte	0x2d
 1893 0117 C6000000 		.4byte	0xc6
 1894 011b 04       		.byte	0x4
 1895 011c 07       		.uleb128 0x7
 1896 011d EF040000 		.4byte	.LASF25
 1897 0121 05       		.byte	0x5
 1898 0122 2E       		.byte	0x2e
 1899 0123 C6000000 		.4byte	0xc6
 1900 0127 06       		.byte	0x6
 1901 0128 07       		.uleb128 0x7
 1902 0129 FB010000 		.4byte	.LASF26
 1903 012d 05       		.byte	0x5
 1904 012e 2F       		.byte	0x2f
 1905 012f C6000000 		.4byte	0xc6
 1906 0133 08       		.byte	0x8
 1907 0134 07       		.uleb128 0x7
 1908 0135 E7040000 		.4byte	.LASF27
 1909 0139 05       		.byte	0x5
 1910 013a 30       		.byte	0x30
 1911 013b C6000000 		.4byte	0xc6
 1912 013f 0A       		.byte	0xa
 1913 0140 07       		.uleb128 0x7
 1914 0141 C3020000 		.4byte	.LASF28
 1915 0145 05       		.byte	0x5
 1916 0146 31       		.byte	0x31
 1917 0147 C6000000 		.4byte	0xc6
 1918 014b 0C       		.byte	0xc
 1919 014c 07       		.uleb128 0x7
 1920 014d EE010000 		.4byte	.LASF29
 1921 0151 05       		.byte	0x5
 1922 0152 32       		.byte	0x32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 43


 1923 0153 C6000000 		.4byte	0xc6
 1924 0157 0E       		.byte	0xe
 1925 0158 07       		.uleb128 0x7
 1926 0159 E6020000 		.4byte	.LASF30
 1927 015d 05       		.byte	0x5
 1928 015e 33       		.byte	0x33
 1929 015f C6000000 		.4byte	0xc6
 1930 0163 10       		.byte	0x10
 1931 0164 07       		.uleb128 0x7
 1932 0165 26040000 		.4byte	.LASF31
 1933 0169 05       		.byte	0x5
 1934 016a 34       		.byte	0x34
 1935 016b C6000000 		.4byte	0xc6
 1936 016f 12       		.byte	0x12
 1937 0170 07       		.uleb128 0x7
 1938 0171 3B040000 		.4byte	.LASF32
 1939 0175 05       		.byte	0x5
 1940 0176 35       		.byte	0x35
 1941 0177 C6000000 		.4byte	0xc6
 1942 017b 14       		.byte	0x14
 1943 017c 07       		.uleb128 0x7
 1944 017d 8F010000 		.4byte	.LASF33
 1945 0181 05       		.byte	0x5
 1946 0182 36       		.byte	0x36
 1947 0183 C6000000 		.4byte	0xc6
 1948 0187 16       		.byte	0x16
 1949 0188 07       		.uleb128 0x7
 1950 0189 53000000 		.4byte	.LASF34
 1951 018d 05       		.byte	0x5
 1952 018e 37       		.byte	0x37
 1953 018f C6000000 		.4byte	0xc6
 1954 0193 18       		.byte	0x18
 1955 0194 07       		.uleb128 0x7
 1956 0195 E6010000 		.4byte	.LASF35
 1957 0199 05       		.byte	0x5
 1958 019a 38       		.byte	0x38
 1959 019b C6000000 		.4byte	0xc6
 1960 019f 1A       		.byte	0x1a
 1961 01a0 07       		.uleb128 0x7
 1962 01a1 6E030000 		.4byte	.LASF36
 1963 01a5 05       		.byte	0x5
 1964 01a6 39       		.byte	0x39
 1965 01a7 C6000000 		.4byte	0xc6
 1966 01ab 1C       		.byte	0x1c
 1967 01ac 07       		.uleb128 0x7
 1968 01ad 2E040000 		.4byte	.LASF37
 1969 01b1 05       		.byte	0x5
 1970 01b2 3A       		.byte	0x3a
 1971 01b3 C6000000 		.4byte	0xc6
 1972 01b7 1E       		.byte	0x1e
 1973 01b8 00       		.byte	0
 1974 01b9 08       		.uleb128 0x8
 1975 01ba 86000000 		.4byte	.LASF50
 1976 01be 04       		.byte	0x4
 1977 01bf 6F000000 		.4byte	0x6f
 1978 01c3 01       		.byte	0x1
 1979 01c4 28       		.byte	0x28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 44


 1980 01c5 12020000 		.4byte	0x212
 1981 01c9 09       		.uleb128 0x9
 1982 01ca BF030000 		.4byte	.LASF38
 1983 01ce 00       		.byte	0
 1984 01cf 09       		.uleb128 0x9
 1985 01d0 5D040000 		.4byte	.LASF39
 1986 01d4 01       		.byte	0x1
 1987 01d5 09       		.uleb128 0x9
 1988 01d6 0C000000 		.4byte	.LASF40
 1989 01da 02       		.byte	0x2
 1990 01db 09       		.uleb128 0x9
 1991 01dc 5B010000 		.4byte	.LASF41
 1992 01e0 03       		.byte	0x3
 1993 01e1 09       		.uleb128 0x9
 1994 01e2 19030000 		.4byte	.LASF42
 1995 01e6 04       		.byte	0x4
 1996 01e7 09       		.uleb128 0x9
 1997 01e8 E2040000 		.4byte	.LASF43
 1998 01ec 05       		.byte	0x5
 1999 01ed 09       		.uleb128 0x9
 2000 01ee 9E040000 		.4byte	.LASF44
 2001 01f2 06       		.byte	0x6
 2002 01f3 09       		.uleb128 0x9
 2003 01f4 39000000 		.4byte	.LASF45
 2004 01f8 07       		.byte	0x7
 2005 01f9 09       		.uleb128 0x9
 2006 01fa 32010000 		.4byte	.LASF46
 2007 01fe 08       		.byte	0x8
 2008 01ff 09       		.uleb128 0x9
 2009 0200 0C050000 		.4byte	.LASF47
 2010 0204 09       		.byte	0x9
 2011 0205 09       		.uleb128 0x9
 2012 0206 1C000000 		.4byte	.LASF48
 2013 020a 0A       		.byte	0xa
 2014 020b 09       		.uleb128 0x9
 2015 020c 8E040000 		.4byte	.LASF49
 2016 0210 0B       		.byte	0xb
 2017 0211 00       		.byte	0
 2018 0212 08       		.uleb128 0x8
 2019 0213 9C050000 		.4byte	.LASF51
 2020 0217 01       		.byte	0x1
 2021 0218 2C000000 		.4byte	0x2c
 2022 021c 01       		.byte	0x1
 2023 021d 2A       		.byte	0x2a
 2024 021e 3A020000 		.4byte	0x23a
 2025 0222 0A       		.uleb128 0xa
 2026 0223 557000   		.ascii	"Up\000"
 2027 0226 00       		.byte	0
 2028 0227 09       		.uleb128 0x9
 2029 0228 72050000 		.4byte	.LASF52
 2030 022c 01       		.byte	0x1
 2031 022d 09       		.uleb128 0x9
 2032 022e 17020000 		.4byte	.LASF53
 2033 0232 02       		.byte	0x2
 2034 0233 09       		.uleb128 0x9
 2035 0234 A7010000 		.4byte	.LASF54
 2036 0238 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 45


 2037 0239 00       		.byte	0
 2038 023a 0B       		.uleb128 0xb
 2039 023b 78010000 		.4byte	.LASF62
 2040 023f 01       		.byte	0x1
 2041 0240 45       		.byte	0x45
 2042 0241 00000000 		.4byte	.LFB64
 2043 0245 E4000000 		.4byte	.LFE64-.LFB64
 2044 0249 01       		.uleb128 0x1
 2045 024a 9C       		.byte	0x9c
 2046 024b 68020000 		.4byte	0x268
 2047 024f 0C       		.uleb128 0xc
 2048 0250 48000000 		.4byte	.LBB2
 2049 0254 62000000 		.4byte	.LBE2-.LBB2
 2050 0258 0D       		.uleb128 0xd
 2051 0259 AD010000 		.4byte	.LASF61
 2052 025d 01       		.byte	0x1
 2053 025e 51       		.byte	0x51
 2054 025f D2000000 		.4byte	0xd2
 2055 0263 02       		.uleb128 0x2
 2056 0264 91       		.byte	0x91
 2057 0265 6C       		.sleb128 -20
 2058 0266 00       		.byte	0
 2059 0267 00       		.byte	0
 2060 0268 0E       		.uleb128 0xe
 2061 0269 B1040000 		.4byte	.LASF55
 2062 026d 01       		.byte	0x1
 2063 026e 5C       		.byte	0x5c
 2064 026f 00000000 		.4byte	.LFB65
 2065 0273 18000000 		.4byte	.LFE65-.LFB65
 2066 0277 01       		.uleb128 0x1
 2067 0278 9C       		.byte	0x9c
 2068 0279 0E       		.uleb128 0xe
 2069 027a 4F010000 		.4byte	.LASF56
 2070 027e 01       		.byte	0x1
 2071 027f 62       		.byte	0x62
 2072 0280 00000000 		.4byte	.LFB66
 2073 0284 18000000 		.4byte	.LFE66-.LFB66
 2074 0288 01       		.uleb128 0x1
 2075 0289 9C       		.byte	0x9c
 2076 028a 0E       		.uleb128 0xe
 2077 028b 77030000 		.4byte	.LASF57
 2078 028f 01       		.byte	0x1
 2079 0290 68       		.byte	0x68
 2080 0291 00000000 		.4byte	.LFB67
 2081 0295 18000000 		.4byte	.LFE67-.LFB67
 2082 0299 01       		.uleb128 0x1
 2083 029a 9C       		.byte	0x9c
 2084 029b 0E       		.uleb128 0xe
 2085 029c 00000000 		.4byte	.LASF58
 2086 02a0 01       		.byte	0x1
 2087 02a1 6E       		.byte	0x6e
 2088 02a2 00000000 		.4byte	.LFB68
 2089 02a6 18000000 		.4byte	.LFE68-.LFB68
 2090 02aa 01       		.uleb128 0x1
 2091 02ab 9C       		.byte	0x9c
 2092 02ac 0F       		.uleb128 0xf
 2093 02ad 61030000 		.4byte	.LASF59
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 46


 2094 02b1 01       		.byte	0x1
 2095 02b2 74       		.byte	0x74
 2096 02b3 00000000 		.4byte	.LFB69
 2097 02b7 38000000 		.4byte	.LFE69-.LFB69
 2098 02bb 01       		.uleb128 0x1
 2099 02bc 9C       		.byte	0x9c
 2100 02bd 10       		.uleb128 0x10
 2101 02be 2D010000 		.4byte	.LASF60
 2102 02c2 01       		.byte	0x1
 2103 02c3 80       		.byte	0x80
 2104 02c4 68000000 		.4byte	0x68
 2105 02c8 00000000 		.4byte	.LFB70
 2106 02cc 9C000000 		.4byte	.LFE70-.LFB70
 2107 02d0 01       		.uleb128 0x1
 2108 02d1 9C       		.byte	0x9c
 2109 02d2 11       		.uleb128 0x11
 2110 02d3 1C050000 		.4byte	.LASF107
 2111 02d7 01       		.byte	0x1
 2112 02d8 AF       		.byte	0xaf
 2113 02d9 C6000000 		.4byte	0xc6
 2114 02dd 00000000 		.4byte	.LFB71
 2115 02e1 54000000 		.4byte	.LFE71-.LFB71
 2116 02e5 01       		.uleb128 0x1
 2117 02e6 9C       		.byte	0x9c
 2118 02e7 16030000 		.4byte	0x316
 2119 02eb 12       		.uleb128 0x12
 2120 02ec C6040000 		.4byte	.LASF108
 2121 02f0 01       		.byte	0x1
 2122 02f1 AF       		.byte	0xaf
 2123 02f2 A2000000 		.4byte	0xa2
 2124 02f6 02       		.uleb128 0x2
 2125 02f7 91       		.byte	0x91
 2126 02f8 66       		.sleb128 -26
 2127 02f9 13       		.uleb128 0x13
 2128 02fa 63707300 		.ascii	"cps\000"
 2129 02fe 01       		.byte	0x1
 2130 02ff B1       		.byte	0xb1
 2131 0300 D2000000 		.4byte	0xd2
 2132 0304 02       		.uleb128 0x2
 2133 0305 91       		.byte	0x91
 2134 0306 6C       		.sleb128 -20
 2135 0307 13       		.uleb128 0x13
 2136 0308 72706D00 		.ascii	"rpm\000"
 2137 030c 01       		.byte	0x1
 2138 030d B2       		.byte	0xb2
 2139 030e C6000000 		.4byte	0xc6
 2140 0312 02       		.uleb128 0x2
 2141 0313 91       		.byte	0x91
 2142 0314 6A       		.sleb128 -22
 2143 0315 00       		.byte	0
 2144 0316 14       		.uleb128 0x14
 2145 0317 A0030000 		.4byte	.LASF67
 2146 031b 01       		.byte	0x1
 2147 031c BA       		.byte	0xba
 2148 031d 00000000 		.4byte	.LFB72
 2149 0321 34000000 		.4byte	.LFE72-.LFB72
 2150 0325 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 47


 2151 0326 9C       		.byte	0x9c
 2152 0327 15       		.uleb128 0x15
 2153 0328 43010000 		.4byte	.LASF63
 2154 032c 01       		.byte	0x1
 2155 032d C6       		.byte	0xc6
 2156 032e B9010000 		.4byte	0x1b9
 2157 0332 00000000 		.4byte	.LFB73
 2158 0336 CC020000 		.4byte	.LFE73-.LFB73
 2159 033a 01       		.uleb128 0x1
 2160 033b 9C       		.byte	0x9c
 2161 033c 4F030000 		.4byte	0x34f
 2162 0340 0D       		.uleb128 0xd
 2163 0341 88050000 		.4byte	.LASF64
 2164 0345 01       		.byte	0x1
 2165 0346 C7       		.byte	0xc7
 2166 0347 B9010000 		.4byte	0x1b9
 2167 034b 02       		.uleb128 0x2
 2168 034c 91       		.byte	0x91
 2169 034d 74       		.sleb128 -12
 2170 034e 00       		.byte	0
 2171 034f 16       		.uleb128 0x16
 2172 0350 1C020000 		.4byte	.LASF65
 2173 0354 01       		.byte	0x1
 2174 0355 1101     		.2byte	0x111
 2175 0357 B9010000 		.4byte	0x1b9
 2176 035b 00000000 		.4byte	.LFB74
 2177 035f 38020000 		.4byte	.LFE74-.LFB74
 2178 0363 01       		.uleb128 0x1
 2179 0364 9C       		.byte	0x9c
 2180 0365 88030000 		.4byte	0x388
 2181 0369 17       		.uleb128 0x17
 2182 036a 52020000 		.4byte	.LASF66
 2183 036e 01       		.byte	0x1
 2184 036f 1201     		.2byte	0x112
 2185 0371 D2000000 		.4byte	0xd2
 2186 0375 02       		.uleb128 0x2
 2187 0376 91       		.byte	0x91
 2188 0377 74       		.sleb128 -12
 2189 0378 17       		.uleb128 0x17
 2190 0379 88050000 		.4byte	.LASF64
 2191 037d 01       		.byte	0x1
 2192 037e 1801     		.2byte	0x118
 2193 0380 B9010000 		.4byte	0x1b9
 2194 0384 02       		.uleb128 0x2
 2195 0385 91       		.byte	0x91
 2196 0386 70       		.sleb128 -16
 2197 0387 00       		.byte	0
 2198 0388 18       		.uleb128 0x18
 2199 0389 50030000 		.4byte	.LASF68
 2200 038d 01       		.byte	0x1
 2201 038e 8701     		.2byte	0x187
 2202 0390 00000000 		.4byte	.LFB75
 2203 0394 98000000 		.4byte	.LFE75-.LFB75
 2204 0398 01       		.uleb128 0x1
 2205 0399 9C       		.byte	0x9c
 2206 039a 19       		.uleb128 0x19
 2207 039b 52050000 		.4byte	.LASF69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 48


 2208 039f 06       		.byte	0x6
 2209 03a0 1207     		.2byte	0x712
 2210 03a2 A6030000 		.4byte	0x3a6
 2211 03a6 1A       		.uleb128 0x1a
 2212 03a7 8B000000 		.4byte	0x8b
 2213 03ab 1B       		.uleb128 0x1b
 2214 03ac 747300   		.ascii	"ts\000"
 2215 03af 05       		.byte	0x5
 2216 03b0 10       		.byte	0x10
 2217 03b1 96000000 		.4byte	0x96
 2218 03b5 05       		.uleb128 0x5
 2219 03b6 03       		.byte	0x3
 2220 03b7 00000000 		.4byte	ts
 2221 03bb 1C       		.uleb128 0x1c
 2222 03bc 15000000 		.4byte	.LASF70
 2223 03c0 05       		.byte	0x5
 2224 03c1 11       		.byte	0x11
 2225 03c2 A2000000 		.4byte	0xa2
 2226 03c6 05       		.uleb128 0x5
 2227 03c7 03       		.byte	0x3
 2228 03c8 00000000 		.4byte	ts_enc
 2229 03cc 1C       		.uleb128 0x1c
 2230 03cd 37030000 		.4byte	.LASF71
 2231 03d1 05       		.byte	0x5
 2232 03d2 12       		.byte	0x12
 2233 03d3 A2000000 		.4byte	0xa2
 2234 03d7 05       		.uleb128 0x5
 2235 03d8 03       		.byte	0x3
 2236 03d9 00000000 		.4byte	ts_update
 2237 03dd 1C       		.uleb128 0x1c
 2238 03de BD040000 		.4byte	.LASF72
 2239 03e2 05       		.byte	0x5
 2240 03e3 13       		.byte	0x13
 2241 03e4 A2000000 		.4byte	0xa2
 2242 03e8 05       		.uleb128 0x5
 2243 03e9 03       		.byte	0x3
 2244 03ea 00000000 		.4byte	ts_speed
 2245 03ee 1C       		.uleb128 0x1c
 2246 03ef 01050000 		.4byte	.LASF73
 2247 03f3 05       		.byte	0x5
 2248 03f4 14       		.byte	0x14
 2249 03f5 A2000000 		.4byte	0xa2
 2250 03f9 05       		.uleb128 0x5
 2251 03fa 03       		.byte	0x3
 2252 03fb 00000000 		.4byte	ts_display
 2253 03ff 1C       		.uleb128 0x1c
 2254 0400 CC040000 		.4byte	.LASF74
 2255 0404 05       		.byte	0x5
 2256 0405 16       		.byte	0x16
 2257 0406 96000000 		.4byte	0x96
 2258 040a 05       		.uleb128 0x5
 2259 040b 03       		.byte	0x3
 2260 040c 00000000 		.4byte	flag_ts_enc
 2261 0410 1C       		.uleb128 0x1c
 2262 0411 D7010000 		.4byte	.LASF75
 2263 0415 05       		.byte	0x5
 2264 0416 17       		.byte	0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 49


 2265 0417 96000000 		.4byte	0x96
 2266 041b 05       		.uleb128 0x5
 2267 041c 03       		.byte	0x3
 2268 041d 00000000 		.4byte	flag_ts_update
 2269 0421 1C       		.uleb128 0x1c
 2270 0422 45000000 		.4byte	.LASF76
 2271 0426 05       		.byte	0x5
 2272 0427 18       		.byte	0x18
 2273 0428 96000000 		.4byte	0x96
 2274 042c 05       		.uleb128 0x5
 2275 042d 03       		.byte	0x3
 2276 042e 00000000 		.4byte	flag_ts_speed
 2277 0432 1C       		.uleb128 0x1c
 2278 0433 3A020000 		.4byte	.LASF77
 2279 0437 05       		.byte	0x5
 2280 0438 19       		.byte	0x19
 2281 0439 96000000 		.4byte	0x96
 2282 043d 05       		.uleb128 0x5
 2283 043e 03       		.byte	0x3
 2284 043f 00000000 		.4byte	flag_ts_display
 2285 0443 1C       		.uleb128 0x1c
 2286 0444 4A020000 		.4byte	.LASF78
 2287 0448 05       		.byte	0x5
 2288 0449 1B       		.byte	0x1b
 2289 044a 96000000 		.4byte	0x96
 2290 044e 05       		.uleb128 0x5
 2291 044f 03       		.byte	0x3
 2292 0450 00000000 		.4byte	flag_rx
 2293 0454 1C       		.uleb128 0x1c
 2294 0455 2D000000 		.4byte	.LASF79
 2295 0459 05       		.byte	0x5
 2296 045a 1C       		.byte	0x1c
 2297 045b 96000000 		.4byte	0x96
 2298 045f 05       		.uleb128 0x5
 2299 0460 03       		.byte	0x3
 2300 0461 00000000 		.4byte	flag_packet
 2301 0465 1C       		.uleb128 0x1c
 2302 0466 41030000 		.4byte	.LASF80
 2303 046a 05       		.byte	0x5
 2304 046b 1D       		.byte	0x1d
 2305 046c 96000000 		.4byte	0x96
 2306 0470 05       		.uleb128 0x5
 2307 0471 03       		.byte	0x3
 2308 0472 00000000 		.4byte	flag_KB_string
 2309 0476 1C       		.uleb128 0x1c
 2310 0477 D7020000 		.4byte	.LASF81
 2311 047b 05       		.byte	0x5
 2312 047c 1F       		.byte	0x1f
 2313 047d 96000000 		.4byte	0x96
 2314 0481 05       		.uleb128 0x5
 2315 0482 03       		.byte	0x3
 2316 0483 00000000 		.4byte	dataready_flag
 2317 0487 1C       		.uleb128 0x1c
 2318 0488 2B050000 		.4byte	.LASF82
 2319 048c 05       		.byte	0x5
 2320 048d 21       		.byte	0x21
 2321 048e 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 50


 2322 0492 05       		.uleb128 0x5
 2323 0493 03       		.byte	0x3
 2324 0494 00000000 		.4byte	flag_rf_transmission_active
 2325 0498 1D       		.uleb128 0x1d
 2326 0499 84000000 		.4byte	0x84
 2327 049d A8040000 		.4byte	0x4a8
 2328 04a1 1E       		.uleb128 0x1e
 2329 04a2 7D000000 		.4byte	0x7d
 2330 04a6 3F       		.byte	0x3f
 2331 04a7 00       		.byte	0
 2332 04a8 1C       		.uleb128 0x1c
 2333 04a9 44040000 		.4byte	.LASF83
 2334 04ad 05       		.byte	0x5
 2335 04ae 24       		.byte	0x24
 2336 04af 98040000 		.4byte	0x498
 2337 04b3 05       		.uleb128 0x5
 2338 04b4 03       		.byte	0x3
 2339 04b5 00000000 		.4byte	displaystring
 2340 04b9 1C       		.uleb128 0x1c
 2341 04ba 9C010000 		.4byte	.LASF84
 2342 04be 05       		.byte	0x5
 2343 04bf 25       		.byte	0x25
 2344 04c0 98040000 		.4byte	0x498
 2345 04c4 05       		.uleb128 0x5
 2346 04c5 03       		.byte	0x3
 2347 04c6 00000000 		.4byte	line
 2348 04ca 1C       		.uleb128 0x1c
 2349 04cb 7C020000 		.4byte	.LASF85
 2350 04cf 05       		.byte	0x5
 2351 04d0 25       		.byte	0x25
 2352 04d1 98040000 		.4byte	0x498
 2353 04d5 05       		.uleb128 0x5
 2354 04d6 03       		.byte	0x3
 2355 04d7 00000000 		.4byte	entry
 2356 04db 1D       		.uleb128 0x1d
 2357 04dc 96000000 		.4byte	0x96
 2358 04e0 EB040000 		.4byte	0x4eb
 2359 04e4 1E       		.uleb128 0x1e
 2360 04e5 7D000000 		.4byte	0x7d
 2361 04e9 3F       		.byte	0x3f
 2362 04ea 00       		.byte	0
 2363 04eb 1C       		.uleb128 0x1c
 2364 04ec 95000000 		.4byte	.LASF86
 2365 04f0 05       		.byte	0x5
 2366 04f1 26       		.byte	0x26
 2367 04f2 DB040000 		.4byte	0x4db
 2368 04f6 05       		.uleb128 0x5
 2369 04f7 03       		.byte	0x3
 2370 04f8 00000000 		.4byte	usbBuffer
 2371 04fc 1C       		.uleb128 0x1c
 2372 04fd 65000000 		.4byte	.LASF87
 2373 0501 05       		.byte	0x5
 2374 0502 3C       		.byte	0x3c
 2375 0503 E0000000 		.4byte	0xe0
 2376 0507 05       		.uleb128 0x5
 2377 0508 03       		.byte	0x3
 2378 0509 00000000 		.4byte	system_state
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 51


 2379 050d 1D       		.uleb128 0x1d
 2380 050e 68000000 		.4byte	0x68
 2381 0512 23050000 		.4byte	0x523
 2382 0516 1E       		.uleb128 0x1e
 2383 0517 7D000000 		.4byte	0x7d
 2384 051b 0E       		.byte	0xe
 2385 051c 1E       		.uleb128 0x1e
 2386 051d 7D000000 		.4byte	0x7d
 2387 0521 12       		.byte	0x12
 2388 0522 00       		.byte	0
 2389 0523 1F       		.uleb128 0x1f
 2390 0524 6D617000 		.ascii	"map\000"
 2391 0528 07       		.byte	0x7
 2392 0529 04       		.byte	0x4
 2393 052a 0D050000 		.4byte	0x50d
 2394 052e 1C       		.uleb128 0x1c
 2395 052f 77050000 		.4byte	.LASF88
 2396 0533 01       		.byte	0x1
 2397 0534 2B       		.byte	0x2b
 2398 0535 B9010000 		.4byte	0x1b9
 2399 0539 05       		.uleb128 0x5
 2400 053a 03       		.byte	0x3
 2401 053b 00000000 		.4byte	currentDirection
 2402 053f 1C       		.uleb128 0x1c
 2403 0540 99020000 		.4byte	.LASF89
 2404 0544 01       		.byte	0x1
 2405 0545 2C       		.byte	0x2c
 2406 0546 B9010000 		.4byte	0x1b9
 2407 054a 05       		.uleb128 0x5
 2408 054b 03       		.byte	0x3
 2409 054c 00000000 		.4byte	previousDirection
 2410 0550 1C       		.uleb128 0x1c
 2411 0551 5F050000 		.4byte	.LASF90
 2412 0555 01       		.byte	0x1
 2413 0556 2D       		.byte	0x2d
 2414 0557 12020000 		.4byte	0x212
 2415 055b 05       		.uleb128 0x5
 2416 055c 03       		.byte	0x3
 2417 055d 00000000 		.4byte	currentOrientation
 2418 0561 1C       		.uleb128 0x1c
 2419 0562 03020000 		.4byte	.LASF91
 2420 0566 01       		.byte	0x1
 2421 0567 2E       		.byte	0x2e
 2422 0568 12020000 		.4byte	0x212
 2423 056c 05       		.uleb128 0x5
 2424 056d 03       		.byte	0x3
 2425 056e 00000000 		.4byte	previousOrientation
 2426 0572 1B       		.uleb128 0x1b
 2427 0573 733300   		.ascii	"s3\000"
 2428 0576 01       		.byte	0x1
 2429 0577 32       		.byte	0x32
 2430 0578 96000000 		.4byte	0x96
 2431 057c 05       		.uleb128 0x5
 2432 057d 03       		.byte	0x3
 2433 057e 00000000 		.4byte	s3
 2434 0582 1B       		.uleb128 0x1b
 2435 0583 733400   		.ascii	"s4\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 52


 2436 0586 01       		.byte	0x1
 2437 0587 33       		.byte	0x33
 2438 0588 96000000 		.4byte	0x96
 2439 058c 05       		.uleb128 0x5
 2440 058d 03       		.byte	0x3
 2441 058e 00000000 		.4byte	s4
 2442 0592 1B       		.uleb128 0x1b
 2443 0593 733500   		.ascii	"s5\000"
 2444 0596 01       		.byte	0x1
 2445 0597 34       		.byte	0x34
 2446 0598 96000000 		.4byte	0x96
 2447 059c 05       		.uleb128 0x5
 2448 059d 03       		.byte	0x3
 2449 059e 00000000 		.4byte	s5
 2450 05a2 1B       		.uleb128 0x1b
 2451 05a3 733600   		.ascii	"s6\000"
 2452 05a6 01       		.byte	0x1
 2453 05a7 35       		.byte	0x35
 2454 05a8 96000000 		.4byte	0x96
 2455 05ac 05       		.uleb128 0x5
 2456 05ad 03       		.byte	0x3
 2457 05ae 00000000 		.4byte	s6
 2458 05b2 1C       		.uleb128 0x1c
 2459 05b3 6A020000 		.4byte	.LASF92
 2460 05b7 01       		.byte	0x1
 2461 05b8 3A       		.byte	0x3a
 2462 05b9 AE000000 		.4byte	0xae
 2463 05bd 05       		.uleb128 0x5
 2464 05be 03       		.byte	0x3
 2465 05bf 00000000 		.4byte	totalMilliseconds
 2466 05c3 1C       		.uleb128 0x1c
 2467 05c4 AB020000 		.4byte	.LASF93
 2468 05c8 01       		.byte	0x1
 2469 05c9 3B       		.byte	0x3b
 2470 05ca D2000000 		.4byte	0xd2
 2471 05ce 05       		.uleb128 0x5
 2472 05cf 03       		.byte	0x3
 2473 05d0 00000000 		.4byte	totalDistance
 2474 05d4 1D       		.uleb128 0x1d
 2475 05d5 84000000 		.4byte	0x84
 2476 05d9 E4050000 		.4byte	0x5e4
 2477 05dd 1E       		.uleb128 0x1e
 2478 05de 7D000000 		.4byte	0x7d
 2479 05e2 44       		.byte	0x44
 2480 05e3 00       		.byte	0
 2481 05e4 1C       		.uleb128 0x1c
 2482 05e5 67040000 		.4byte	.LASF94
 2483 05e9 01       		.byte	0x1
 2484 05ea 3D       		.byte	0x3d
 2485 05eb D4050000 		.4byte	0x5d4
 2486 05ef 05       		.uleb128 0x5
 2487 05f0 03       		.byte	0x3
 2488 05f1 00000000 		.4byte	buffer
 2489 05f5 1C       		.uleb128 0x1c
 2490 05f6 18040000 		.4byte	.LASF95
 2491 05fa 01       		.byte	0x1
 2492 05fb 3E       		.byte	0x3e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 53


 2493 05fc 68000000 		.4byte	0x68
 2494 0600 05       		.uleb128 0x5
 2495 0601 03       		.byte	0x3
 2496 0602 00000000 		.4byte	quadDec2Count
 2497 0606 1C       		.uleb128 0x1c
 2498 0607 31020000 		.4byte	.LASF96
 2499 060b 01       		.byte	0x1
 2500 060c 3F       		.byte	0x3f
 2501 060d 68000000 		.4byte	0x68
 2502 0611 05       		.uleb128 0x5
 2503 0612 03       		.byte	0x3
 2504 0613 00000000 		.4byte	timerInt
 2505 0617 1C       		.uleb128 0x1c
 2506 0618 B9020000 		.4byte	.LASF97
 2507 061c 01       		.byte	0x1
 2508 061d 40       		.byte	0x40
 2509 061e 68000000 		.4byte	0x68
 2510 0622 05       		.uleb128 0x5
 2511 0623 03       		.byte	0x3
 2512 0624 00000000 		.4byte	keepLedOn
 2513 0628 1C       		.uleb128 0x1c
 2514 0629 7B000000 		.4byte	.LASF98
 2515 062d 01       		.byte	0x1
 2516 062e 41       		.byte	0x41
 2517 062f AE000000 		.4byte	0xae
 2518 0633 05       		.uleb128 0x5
 2519 0634 03       		.byte	0x3
 2520 0635 00000000 		.4byte	stopBuffer
 2521 0639 1C       		.uleb128 0x1c
 2522 063a CC020000 		.4byte	.LASF99
 2523 063e 01       		.byte	0x1
 2524 063f C1       		.byte	0xc1
 2525 0640 D2000000 		.4byte	0xd2
 2526 0644 05       		.uleb128 0x5
 2527 0645 03       		.byte	0x3
 2528 0646 00000000 		.4byte	yBlocksize
 2529 064a 1C       		.uleb128 0x1c
 2530 064b CC010000 		.4byte	.LASF100
 2531 064f 01       		.byte	0x1
 2532 0650 C2       		.byte	0xc2
 2533 0651 D2000000 		.4byte	0xd2
 2534 0655 05       		.uleb128 0x5
 2535 0656 03       		.byte	0x3
 2536 0657 00000000 		.4byte	xBlocksize
 2537 065b 1C       		.uleb128 0x1c
 2538 065c A6040000 		.4byte	.LASF101
 2539 0660 01       		.byte	0x1
 2540 0661 C3       		.byte	0xc3
 2541 0662 96000000 		.4byte	0x96
 2542 0666 05       		.uleb128 0x5
 2543 0667 03       		.byte	0x3
 2544 0668 00000000 		.4byte	currentRow
 2545 066c 1C       		.uleb128 0x1c
 2546 066d 8E020000 		.4byte	.LASF102
 2547 0671 01       		.byte	0x1
 2548 0672 C4       		.byte	0xc4
 2549 0673 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 54


 2550 0677 05       		.uleb128 0x5
 2551 0678 03       		.byte	0x3
 2552 0679 00000000 		.4byte	currentCol
 2553 067d 00       		.byte	0
 2554              		.section	.debug_abbrev,"",%progbits
 2555              	.Ldebug_abbrev0:
 2556 0000 01       		.uleb128 0x1
 2557 0001 11       		.uleb128 0x11
 2558 0002 01       		.byte	0x1
 2559 0003 25       		.uleb128 0x25
 2560 0004 0E       		.uleb128 0xe
 2561 0005 13       		.uleb128 0x13
 2562 0006 0B       		.uleb128 0xb
 2563 0007 03       		.uleb128 0x3
 2564 0008 0E       		.uleb128 0xe
 2565 0009 1B       		.uleb128 0x1b
 2566 000a 0E       		.uleb128 0xe
 2567 000b 55       		.uleb128 0x55
 2568 000c 17       		.uleb128 0x17
 2569 000d 11       		.uleb128 0x11
 2570 000e 01       		.uleb128 0x1
 2571 000f 10       		.uleb128 0x10
 2572 0010 17       		.uleb128 0x17
 2573 0011 00       		.byte	0
 2574 0012 00       		.byte	0
 2575 0013 02       		.uleb128 0x2
 2576 0014 24       		.uleb128 0x24
 2577 0015 00       		.byte	0
 2578 0016 0B       		.uleb128 0xb
 2579 0017 0B       		.uleb128 0xb
 2580 0018 3E       		.uleb128 0x3e
 2581 0019 0B       		.uleb128 0xb
 2582 001a 03       		.uleb128 0x3
 2583 001b 0E       		.uleb128 0xe
 2584 001c 00       		.byte	0
 2585 001d 00       		.byte	0
 2586 001e 03       		.uleb128 0x3
 2587 001f 16       		.uleb128 0x16
 2588 0020 00       		.byte	0
 2589 0021 03       		.uleb128 0x3
 2590 0022 0E       		.uleb128 0xe
 2591 0023 3A       		.uleb128 0x3a
 2592 0024 0B       		.uleb128 0xb
 2593 0025 3B       		.uleb128 0x3b
 2594 0026 0B       		.uleb128 0xb
 2595 0027 49       		.uleb128 0x49
 2596 0028 13       		.uleb128 0x13
 2597 0029 00       		.byte	0
 2598 002a 00       		.byte	0
 2599 002b 04       		.uleb128 0x4
 2600 002c 24       		.uleb128 0x24
 2601 002d 00       		.byte	0
 2602 002e 0B       		.uleb128 0xb
 2603 002f 0B       		.uleb128 0xb
 2604 0030 3E       		.uleb128 0x3e
 2605 0031 0B       		.uleb128 0xb
 2606 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 55


 2607 0033 08       		.uleb128 0x8
 2608 0034 00       		.byte	0
 2609 0035 00       		.byte	0
 2610 0036 05       		.uleb128 0x5
 2611 0037 16       		.uleb128 0x16
 2612 0038 00       		.byte	0
 2613 0039 03       		.uleb128 0x3
 2614 003a 0E       		.uleb128 0xe
 2615 003b 3A       		.uleb128 0x3a
 2616 003c 0B       		.uleb128 0xb
 2617 003d 3B       		.uleb128 0x3b
 2618 003e 05       		.uleb128 0x5
 2619 003f 49       		.uleb128 0x49
 2620 0040 13       		.uleb128 0x13
 2621 0041 00       		.byte	0
 2622 0042 00       		.byte	0
 2623 0043 06       		.uleb128 0x6
 2624 0044 13       		.uleb128 0x13
 2625 0045 01       		.byte	0x1
 2626 0046 03       		.uleb128 0x3
 2627 0047 0E       		.uleb128 0xe
 2628 0048 0B       		.uleb128 0xb
 2629 0049 0B       		.uleb128 0xb
 2630 004a 3A       		.uleb128 0x3a
 2631 004b 0B       		.uleb128 0xb
 2632 004c 3B       		.uleb128 0x3b
 2633 004d 0B       		.uleb128 0xb
 2634 004e 01       		.uleb128 0x1
 2635 004f 13       		.uleb128 0x13
 2636 0050 00       		.byte	0
 2637 0051 00       		.byte	0
 2638 0052 07       		.uleb128 0x7
 2639 0053 0D       		.uleb128 0xd
 2640 0054 00       		.byte	0
 2641 0055 03       		.uleb128 0x3
 2642 0056 0E       		.uleb128 0xe
 2643 0057 3A       		.uleb128 0x3a
 2644 0058 0B       		.uleb128 0xb
 2645 0059 3B       		.uleb128 0x3b
 2646 005a 0B       		.uleb128 0xb
 2647 005b 49       		.uleb128 0x49
 2648 005c 13       		.uleb128 0x13
 2649 005d 38       		.uleb128 0x38
 2650 005e 0B       		.uleb128 0xb
 2651 005f 00       		.byte	0
 2652 0060 00       		.byte	0
 2653 0061 08       		.uleb128 0x8
 2654 0062 04       		.uleb128 0x4
 2655 0063 01       		.byte	0x1
 2656 0064 03       		.uleb128 0x3
 2657 0065 0E       		.uleb128 0xe
 2658 0066 0B       		.uleb128 0xb
 2659 0067 0B       		.uleb128 0xb
 2660 0068 49       		.uleb128 0x49
 2661 0069 13       		.uleb128 0x13
 2662 006a 3A       		.uleb128 0x3a
 2663 006b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 56


 2664 006c 3B       		.uleb128 0x3b
 2665 006d 0B       		.uleb128 0xb
 2666 006e 01       		.uleb128 0x1
 2667 006f 13       		.uleb128 0x13
 2668 0070 00       		.byte	0
 2669 0071 00       		.byte	0
 2670 0072 09       		.uleb128 0x9
 2671 0073 28       		.uleb128 0x28
 2672 0074 00       		.byte	0
 2673 0075 03       		.uleb128 0x3
 2674 0076 0E       		.uleb128 0xe
 2675 0077 1C       		.uleb128 0x1c
 2676 0078 0B       		.uleb128 0xb
 2677 0079 00       		.byte	0
 2678 007a 00       		.byte	0
 2679 007b 0A       		.uleb128 0xa
 2680 007c 28       		.uleb128 0x28
 2681 007d 00       		.byte	0
 2682 007e 03       		.uleb128 0x3
 2683 007f 08       		.uleb128 0x8
 2684 0080 1C       		.uleb128 0x1c
 2685 0081 0B       		.uleb128 0xb
 2686 0082 00       		.byte	0
 2687 0083 00       		.byte	0
 2688 0084 0B       		.uleb128 0xb
 2689 0085 2E       		.uleb128 0x2e
 2690 0086 01       		.byte	0x1
 2691 0087 3F       		.uleb128 0x3f
 2692 0088 19       		.uleb128 0x19
 2693 0089 03       		.uleb128 0x3
 2694 008a 0E       		.uleb128 0xe
 2695 008b 3A       		.uleb128 0x3a
 2696 008c 0B       		.uleb128 0xb
 2697 008d 3B       		.uleb128 0x3b
 2698 008e 0B       		.uleb128 0xb
 2699 008f 27       		.uleb128 0x27
 2700 0090 19       		.uleb128 0x19
 2701 0091 11       		.uleb128 0x11
 2702 0092 01       		.uleb128 0x1
 2703 0093 12       		.uleb128 0x12
 2704 0094 06       		.uleb128 0x6
 2705 0095 40       		.uleb128 0x40
 2706 0096 18       		.uleb128 0x18
 2707 0097 9642     		.uleb128 0x2116
 2708 0099 19       		.uleb128 0x19
 2709 009a 01       		.uleb128 0x1
 2710 009b 13       		.uleb128 0x13
 2711 009c 00       		.byte	0
 2712 009d 00       		.byte	0
 2713 009e 0C       		.uleb128 0xc
 2714 009f 0B       		.uleb128 0xb
 2715 00a0 01       		.byte	0x1
 2716 00a1 11       		.uleb128 0x11
 2717 00a2 01       		.uleb128 0x1
 2718 00a3 12       		.uleb128 0x12
 2719 00a4 06       		.uleb128 0x6
 2720 00a5 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 57


 2721 00a6 00       		.byte	0
 2722 00a7 0D       		.uleb128 0xd
 2723 00a8 34       		.uleb128 0x34
 2724 00a9 00       		.byte	0
 2725 00aa 03       		.uleb128 0x3
 2726 00ab 0E       		.uleb128 0xe
 2727 00ac 3A       		.uleb128 0x3a
 2728 00ad 0B       		.uleb128 0xb
 2729 00ae 3B       		.uleb128 0x3b
 2730 00af 0B       		.uleb128 0xb
 2731 00b0 49       		.uleb128 0x49
 2732 00b1 13       		.uleb128 0x13
 2733 00b2 02       		.uleb128 0x2
 2734 00b3 18       		.uleb128 0x18
 2735 00b4 00       		.byte	0
 2736 00b5 00       		.byte	0
 2737 00b6 0E       		.uleb128 0xe
 2738 00b7 2E       		.uleb128 0x2e
 2739 00b8 00       		.byte	0
 2740 00b9 3F       		.uleb128 0x3f
 2741 00ba 19       		.uleb128 0x19
 2742 00bb 03       		.uleb128 0x3
 2743 00bc 0E       		.uleb128 0xe
 2744 00bd 3A       		.uleb128 0x3a
 2745 00be 0B       		.uleb128 0xb
 2746 00bf 3B       		.uleb128 0x3b
 2747 00c0 0B       		.uleb128 0xb
 2748 00c1 27       		.uleb128 0x27
 2749 00c2 19       		.uleb128 0x19
 2750 00c3 11       		.uleb128 0x11
 2751 00c4 01       		.uleb128 0x1
 2752 00c5 12       		.uleb128 0x12
 2753 00c6 06       		.uleb128 0x6
 2754 00c7 40       		.uleb128 0x40
 2755 00c8 18       		.uleb128 0x18
 2756 00c9 9742     		.uleb128 0x2117
 2757 00cb 19       		.uleb128 0x19
 2758 00cc 00       		.byte	0
 2759 00cd 00       		.byte	0
 2760 00ce 0F       		.uleb128 0xf
 2761 00cf 2E       		.uleb128 0x2e
 2762 00d0 00       		.byte	0
 2763 00d1 3F       		.uleb128 0x3f
 2764 00d2 19       		.uleb128 0x19
 2765 00d3 03       		.uleb128 0x3
 2766 00d4 0E       		.uleb128 0xe
 2767 00d5 3A       		.uleb128 0x3a
 2768 00d6 0B       		.uleb128 0xb
 2769 00d7 3B       		.uleb128 0x3b
 2770 00d8 0B       		.uleb128 0xb
 2771 00d9 27       		.uleb128 0x27
 2772 00da 19       		.uleb128 0x19
 2773 00db 11       		.uleb128 0x11
 2774 00dc 01       		.uleb128 0x1
 2775 00dd 12       		.uleb128 0x12
 2776 00de 06       		.uleb128 0x6
 2777 00df 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 58


 2778 00e0 18       		.uleb128 0x18
 2779 00e1 9642     		.uleb128 0x2116
 2780 00e3 19       		.uleb128 0x19
 2781 00e4 00       		.byte	0
 2782 00e5 00       		.byte	0
 2783 00e6 10       		.uleb128 0x10
 2784 00e7 2E       		.uleb128 0x2e
 2785 00e8 00       		.byte	0
 2786 00e9 3F       		.uleb128 0x3f
 2787 00ea 19       		.uleb128 0x19
 2788 00eb 03       		.uleb128 0x3
 2789 00ec 0E       		.uleb128 0xe
 2790 00ed 3A       		.uleb128 0x3a
 2791 00ee 0B       		.uleb128 0xb
 2792 00ef 3B       		.uleb128 0x3b
 2793 00f0 0B       		.uleb128 0xb
 2794 00f1 49       		.uleb128 0x49
 2795 00f2 13       		.uleb128 0x13
 2796 00f3 11       		.uleb128 0x11
 2797 00f4 01       		.uleb128 0x1
 2798 00f5 12       		.uleb128 0x12
 2799 00f6 06       		.uleb128 0x6
 2800 00f7 40       		.uleb128 0x40
 2801 00f8 18       		.uleb128 0x18
 2802 00f9 9642     		.uleb128 0x2116
 2803 00fb 19       		.uleb128 0x19
 2804 00fc 00       		.byte	0
 2805 00fd 00       		.byte	0
 2806 00fe 11       		.uleb128 0x11
 2807 00ff 2E       		.uleb128 0x2e
 2808 0100 01       		.byte	0x1
 2809 0101 3F       		.uleb128 0x3f
 2810 0102 19       		.uleb128 0x19
 2811 0103 03       		.uleb128 0x3
 2812 0104 0E       		.uleb128 0xe
 2813 0105 3A       		.uleb128 0x3a
 2814 0106 0B       		.uleb128 0xb
 2815 0107 3B       		.uleb128 0x3b
 2816 0108 0B       		.uleb128 0xb
 2817 0109 27       		.uleb128 0x27
 2818 010a 19       		.uleb128 0x19
 2819 010b 49       		.uleb128 0x49
 2820 010c 13       		.uleb128 0x13
 2821 010d 11       		.uleb128 0x11
 2822 010e 01       		.uleb128 0x1
 2823 010f 12       		.uleb128 0x12
 2824 0110 06       		.uleb128 0x6
 2825 0111 40       		.uleb128 0x40
 2826 0112 18       		.uleb128 0x18
 2827 0113 9642     		.uleb128 0x2116
 2828 0115 19       		.uleb128 0x19
 2829 0116 01       		.uleb128 0x1
 2830 0117 13       		.uleb128 0x13
 2831 0118 00       		.byte	0
 2832 0119 00       		.byte	0
 2833 011a 12       		.uleb128 0x12
 2834 011b 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 59


 2835 011c 00       		.byte	0
 2836 011d 03       		.uleb128 0x3
 2837 011e 0E       		.uleb128 0xe
 2838 011f 3A       		.uleb128 0x3a
 2839 0120 0B       		.uleb128 0xb
 2840 0121 3B       		.uleb128 0x3b
 2841 0122 0B       		.uleb128 0xb
 2842 0123 49       		.uleb128 0x49
 2843 0124 13       		.uleb128 0x13
 2844 0125 02       		.uleb128 0x2
 2845 0126 18       		.uleb128 0x18
 2846 0127 00       		.byte	0
 2847 0128 00       		.byte	0
 2848 0129 13       		.uleb128 0x13
 2849 012a 34       		.uleb128 0x34
 2850 012b 00       		.byte	0
 2851 012c 03       		.uleb128 0x3
 2852 012d 08       		.uleb128 0x8
 2853 012e 3A       		.uleb128 0x3a
 2854 012f 0B       		.uleb128 0xb
 2855 0130 3B       		.uleb128 0x3b
 2856 0131 0B       		.uleb128 0xb
 2857 0132 49       		.uleb128 0x49
 2858 0133 13       		.uleb128 0x13
 2859 0134 02       		.uleb128 0x2
 2860 0135 18       		.uleb128 0x18
 2861 0136 00       		.byte	0
 2862 0137 00       		.byte	0
 2863 0138 14       		.uleb128 0x14
 2864 0139 2E       		.uleb128 0x2e
 2865 013a 00       		.byte	0
 2866 013b 3F       		.uleb128 0x3f
 2867 013c 19       		.uleb128 0x19
 2868 013d 03       		.uleb128 0x3
 2869 013e 0E       		.uleb128 0xe
 2870 013f 3A       		.uleb128 0x3a
 2871 0140 0B       		.uleb128 0xb
 2872 0141 3B       		.uleb128 0x3b
 2873 0142 0B       		.uleb128 0xb
 2874 0143 11       		.uleb128 0x11
 2875 0144 01       		.uleb128 0x1
 2876 0145 12       		.uleb128 0x12
 2877 0146 06       		.uleb128 0x6
 2878 0147 40       		.uleb128 0x40
 2879 0148 18       		.uleb128 0x18
 2880 0149 9742     		.uleb128 0x2117
 2881 014b 19       		.uleb128 0x19
 2882 014c 00       		.byte	0
 2883 014d 00       		.byte	0
 2884 014e 15       		.uleb128 0x15
 2885 014f 2E       		.uleb128 0x2e
 2886 0150 01       		.byte	0x1
 2887 0151 3F       		.uleb128 0x3f
 2888 0152 19       		.uleb128 0x19
 2889 0153 03       		.uleb128 0x3
 2890 0154 0E       		.uleb128 0xe
 2891 0155 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 60


 2892 0156 0B       		.uleb128 0xb
 2893 0157 3B       		.uleb128 0x3b
 2894 0158 0B       		.uleb128 0xb
 2895 0159 49       		.uleb128 0x49
 2896 015a 13       		.uleb128 0x13
 2897 015b 11       		.uleb128 0x11
 2898 015c 01       		.uleb128 0x1
 2899 015d 12       		.uleb128 0x12
 2900 015e 06       		.uleb128 0x6
 2901 015f 40       		.uleb128 0x40
 2902 0160 18       		.uleb128 0x18
 2903 0161 9742     		.uleb128 0x2117
 2904 0163 19       		.uleb128 0x19
 2905 0164 01       		.uleb128 0x1
 2906 0165 13       		.uleb128 0x13
 2907 0166 00       		.byte	0
 2908 0167 00       		.byte	0
 2909 0168 16       		.uleb128 0x16
 2910 0169 2E       		.uleb128 0x2e
 2911 016a 01       		.byte	0x1
 2912 016b 3F       		.uleb128 0x3f
 2913 016c 19       		.uleb128 0x19
 2914 016d 03       		.uleb128 0x3
 2915 016e 0E       		.uleb128 0xe
 2916 016f 3A       		.uleb128 0x3a
 2917 0170 0B       		.uleb128 0xb
 2918 0171 3B       		.uleb128 0x3b
 2919 0172 05       		.uleb128 0x5
 2920 0173 49       		.uleb128 0x49
 2921 0174 13       		.uleb128 0x13
 2922 0175 11       		.uleb128 0x11
 2923 0176 01       		.uleb128 0x1
 2924 0177 12       		.uleb128 0x12
 2925 0178 06       		.uleb128 0x6
 2926 0179 40       		.uleb128 0x40
 2927 017a 18       		.uleb128 0x18
 2928 017b 9642     		.uleb128 0x2116
 2929 017d 19       		.uleb128 0x19
 2930 017e 01       		.uleb128 0x1
 2931 017f 13       		.uleb128 0x13
 2932 0180 00       		.byte	0
 2933 0181 00       		.byte	0
 2934 0182 17       		.uleb128 0x17
 2935 0183 34       		.uleb128 0x34
 2936 0184 00       		.byte	0
 2937 0185 03       		.uleb128 0x3
 2938 0186 0E       		.uleb128 0xe
 2939 0187 3A       		.uleb128 0x3a
 2940 0188 0B       		.uleb128 0xb
 2941 0189 3B       		.uleb128 0x3b
 2942 018a 05       		.uleb128 0x5
 2943 018b 49       		.uleb128 0x49
 2944 018c 13       		.uleb128 0x13
 2945 018d 02       		.uleb128 0x2
 2946 018e 18       		.uleb128 0x18
 2947 018f 00       		.byte	0
 2948 0190 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 61


 2949 0191 18       		.uleb128 0x18
 2950 0192 2E       		.uleb128 0x2e
 2951 0193 00       		.byte	0
 2952 0194 3F       		.uleb128 0x3f
 2953 0195 19       		.uleb128 0x19
 2954 0196 03       		.uleb128 0x3
 2955 0197 0E       		.uleb128 0xe
 2956 0198 3A       		.uleb128 0x3a
 2957 0199 0B       		.uleb128 0xb
 2958 019a 3B       		.uleb128 0x3b
 2959 019b 05       		.uleb128 0x5
 2960 019c 11       		.uleb128 0x11
 2961 019d 01       		.uleb128 0x1
 2962 019e 12       		.uleb128 0x12
 2963 019f 06       		.uleb128 0x6
 2964 01a0 40       		.uleb128 0x40
 2965 01a1 18       		.uleb128 0x18
 2966 01a2 9642     		.uleb128 0x2116
 2967 01a4 19       		.uleb128 0x19
 2968 01a5 00       		.byte	0
 2969 01a6 00       		.byte	0
 2970 01a7 19       		.uleb128 0x19
 2971 01a8 34       		.uleb128 0x34
 2972 01a9 00       		.byte	0
 2973 01aa 03       		.uleb128 0x3
 2974 01ab 0E       		.uleb128 0xe
 2975 01ac 3A       		.uleb128 0x3a
 2976 01ad 0B       		.uleb128 0xb
 2977 01ae 3B       		.uleb128 0x3b
 2978 01af 05       		.uleb128 0x5
 2979 01b0 49       		.uleb128 0x49
 2980 01b1 13       		.uleb128 0x13
 2981 01b2 3F       		.uleb128 0x3f
 2982 01b3 19       		.uleb128 0x19
 2983 01b4 3C       		.uleb128 0x3c
 2984 01b5 19       		.uleb128 0x19
 2985 01b6 00       		.byte	0
 2986 01b7 00       		.byte	0
 2987 01b8 1A       		.uleb128 0x1a
 2988 01b9 35       		.uleb128 0x35
 2989 01ba 00       		.byte	0
 2990 01bb 49       		.uleb128 0x49
 2991 01bc 13       		.uleb128 0x13
 2992 01bd 00       		.byte	0
 2993 01be 00       		.byte	0
 2994 01bf 1B       		.uleb128 0x1b
 2995 01c0 34       		.uleb128 0x34
 2996 01c1 00       		.byte	0
 2997 01c2 03       		.uleb128 0x3
 2998 01c3 08       		.uleb128 0x8
 2999 01c4 3A       		.uleb128 0x3a
 3000 01c5 0B       		.uleb128 0xb
 3001 01c6 3B       		.uleb128 0x3b
 3002 01c7 0B       		.uleb128 0xb
 3003 01c8 49       		.uleb128 0x49
 3004 01c9 13       		.uleb128 0x13
 3005 01ca 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 62


 3006 01cb 19       		.uleb128 0x19
 3007 01cc 02       		.uleb128 0x2
 3008 01cd 18       		.uleb128 0x18
 3009 01ce 00       		.byte	0
 3010 01cf 00       		.byte	0
 3011 01d0 1C       		.uleb128 0x1c
 3012 01d1 34       		.uleb128 0x34
 3013 01d2 00       		.byte	0
 3014 01d3 03       		.uleb128 0x3
 3015 01d4 0E       		.uleb128 0xe
 3016 01d5 3A       		.uleb128 0x3a
 3017 01d6 0B       		.uleb128 0xb
 3018 01d7 3B       		.uleb128 0x3b
 3019 01d8 0B       		.uleb128 0xb
 3020 01d9 49       		.uleb128 0x49
 3021 01da 13       		.uleb128 0x13
 3022 01db 3F       		.uleb128 0x3f
 3023 01dc 19       		.uleb128 0x19
 3024 01dd 02       		.uleb128 0x2
 3025 01de 18       		.uleb128 0x18
 3026 01df 00       		.byte	0
 3027 01e0 00       		.byte	0
 3028 01e1 1D       		.uleb128 0x1d
 3029 01e2 01       		.uleb128 0x1
 3030 01e3 01       		.byte	0x1
 3031 01e4 49       		.uleb128 0x49
 3032 01e5 13       		.uleb128 0x13
 3033 01e6 01       		.uleb128 0x1
 3034 01e7 13       		.uleb128 0x13
 3035 01e8 00       		.byte	0
 3036 01e9 00       		.byte	0
 3037 01ea 1E       		.uleb128 0x1e
 3038 01eb 21       		.uleb128 0x21
 3039 01ec 00       		.byte	0
 3040 01ed 49       		.uleb128 0x49
 3041 01ee 13       		.uleb128 0x13
 3042 01ef 2F       		.uleb128 0x2f
 3043 01f0 0B       		.uleb128 0xb
 3044 01f1 00       		.byte	0
 3045 01f2 00       		.byte	0
 3046 01f3 1F       		.uleb128 0x1f
 3047 01f4 34       		.uleb128 0x34
 3048 01f5 00       		.byte	0
 3049 01f6 03       		.uleb128 0x3
 3050 01f7 08       		.uleb128 0x8
 3051 01f8 3A       		.uleb128 0x3a
 3052 01f9 0B       		.uleb128 0xb
 3053 01fa 3B       		.uleb128 0x3b
 3054 01fb 0B       		.uleb128 0xb
 3055 01fc 49       		.uleb128 0x49
 3056 01fd 13       		.uleb128 0x13
 3057 01fe 3F       		.uleb128 0x3f
 3058 01ff 19       		.uleb128 0x19
 3059 0200 3C       		.uleb128 0x3c
 3060 0201 19       		.uleb128 0x19
 3061 0202 00       		.byte	0
 3062 0203 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 63


 3063 0204 00       		.byte	0
 3064              		.section	.debug_aranges,"",%progbits
 3065 0000 74000000 		.4byte	0x74
 3066 0004 0200     		.2byte	0x2
 3067 0006 00000000 		.4byte	.Ldebug_info0
 3068 000a 04       		.byte	0x4
 3069 000b 00       		.byte	0
 3070 000c 0000     		.2byte	0
 3071 000e 0000     		.2byte	0
 3072 0010 00000000 		.4byte	.LFB64
 3073 0014 E4000000 		.4byte	.LFE64-.LFB64
 3074 0018 00000000 		.4byte	.LFB65
 3075 001c 18000000 		.4byte	.LFE65-.LFB65
 3076 0020 00000000 		.4byte	.LFB66
 3077 0024 18000000 		.4byte	.LFE66-.LFB66
 3078 0028 00000000 		.4byte	.LFB67
 3079 002c 18000000 		.4byte	.LFE67-.LFB67
 3080 0030 00000000 		.4byte	.LFB68
 3081 0034 18000000 		.4byte	.LFE68-.LFB68
 3082 0038 00000000 		.4byte	.LFB69
 3083 003c 38000000 		.4byte	.LFE69-.LFB69
 3084 0040 00000000 		.4byte	.LFB70
 3085 0044 9C000000 		.4byte	.LFE70-.LFB70
 3086 0048 00000000 		.4byte	.LFB71
 3087 004c 54000000 		.4byte	.LFE71-.LFB71
 3088 0050 00000000 		.4byte	.LFB72
 3089 0054 34000000 		.4byte	.LFE72-.LFB72
 3090 0058 00000000 		.4byte	.LFB73
 3091 005c CC020000 		.4byte	.LFE73-.LFB73
 3092 0060 00000000 		.4byte	.LFB74
 3093 0064 38020000 		.4byte	.LFE74-.LFB74
 3094 0068 00000000 		.4byte	.LFB75
 3095 006c 98000000 		.4byte	.LFE75-.LFB75
 3096 0070 00000000 		.4byte	0
 3097 0074 00000000 		.4byte	0
 3098              		.section	.debug_ranges,"",%progbits
 3099              	.Ldebug_ranges0:
 3100 0000 00000000 		.4byte	.LFB64
 3101 0004 E4000000 		.4byte	.LFE64
 3102 0008 00000000 		.4byte	.LFB65
 3103 000c 18000000 		.4byte	.LFE65
 3104 0010 00000000 		.4byte	.LFB66
 3105 0014 18000000 		.4byte	.LFE66
 3106 0018 00000000 		.4byte	.LFB67
 3107 001c 18000000 		.4byte	.LFE67
 3108 0020 00000000 		.4byte	.LFB68
 3109 0024 18000000 		.4byte	.LFE68
 3110 0028 00000000 		.4byte	.LFB69
 3111 002c 38000000 		.4byte	.LFE69
 3112 0030 00000000 		.4byte	.LFB70
 3113 0034 9C000000 		.4byte	.LFE70
 3114 0038 00000000 		.4byte	.LFB71
 3115 003c 54000000 		.4byte	.LFE71
 3116 0040 00000000 		.4byte	.LFB72
 3117 0044 34000000 		.4byte	.LFE72
 3118 0048 00000000 		.4byte	.LFB73
 3119 004c CC020000 		.4byte	.LFE73
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 64


 3120 0050 00000000 		.4byte	.LFB74
 3121 0054 38020000 		.4byte	.LFE74
 3122 0058 00000000 		.4byte	.LFB75
 3123 005c 98000000 		.4byte	.LFE75
 3124 0060 00000000 		.4byte	0
 3125 0064 00000000 		.4byte	0
 3126              		.section	.debug_line,"",%progbits
 3127              	.Ldebug_line0:
 3128 0000 95030000 		.section	.debug_str,"MS",%progbits,1
 3128      02005F01 
 3128      00000201 
 3128      FB0E0D00 
 3128      01010101 
 3129              	.LASF58:
 3130 0000 53365F44 		.ascii	"S6_DETECTED\000"
 3130      45544543 
 3130      54454400 
 3131              	.LASF40:
 3132 000c 5475726E 		.ascii	"TurnLeft\000"
 3132      4C656674 
 3132      00
 3133              	.LASF70:
 3134 0015 74735F65 		.ascii	"ts_enc\000"
 3134      6E6300
 3135              	.LASF48:
 3136 001c 466F7277 		.ascii	"ForwardAfterTurn\000"
 3136      61726441 
 3136      66746572 
 3136      5475726E 
 3136      00
 3137              	.LASF79:
 3138 002d 666C6167 		.ascii	"flag_packet\000"
 3138      5F706163 
 3138      6B657400 
 3139              	.LASF45:
 3140 0039 77616974 		.ascii	"waitForTurn\000"
 3140      466F7254 
 3140      75726E00 
 3141              	.LASF76:
 3142 0045 666C6167 		.ascii	"flag_ts_speed\000"
 3142      5F74735F 
 3142      73706565 
 3142      6400
 3143              	.LASF34:
 3144 0053 67325F78 		.ascii	"g2_xpos\000"
 3144      706F7300 
 3145              	.LASF2:
 3146 005b 73686F72 		.ascii	"short int\000"
 3146      7420696E 
 3146      7400
 3147              	.LASF87:
 3148 0065 73797374 		.ascii	"system_state\000"
 3148      656D5F73 
 3148      74617465 
 3148      00
 3149              	.LASF10:
 3150 0072 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 65


 3150      74797065 
 3150      00
 3151              	.LASF98:
 3152 007b 73746F70 		.ascii	"stopBuffer\000"
 3152      42756666 
 3152      657200
 3153              	.LASF50:
 3154 0086 44697265 		.ascii	"DirectionState\000"
 3154      6374696F 
 3154      6E537461 
 3154      746500
 3155              	.LASF86:
 3156 0095 75736242 		.ascii	"usbBuffer\000"
 3156      75666665 
 3156      7200
 3157              	.LASF103:
 3158 009f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3158      43313120 
 3158      352E342E 
 3158      31203230 
 3158      31363036 
 3159 00d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3159      20726576 
 3159      6973696F 
 3159      6E203233 
 3159      37373135 
 3160 0105 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3160      66756E63 
 3160      74696F6E 
 3160      2D736563 
 3160      74696F6E 
 3161              	.LASF60:
 3162 012d 6D61696E 		.ascii	"main\000"
 3162      00
 3163              	.LASF46:
 3164 0132 77616974 		.ascii	"waitForRightTurn\000"
 3164      466F7252 
 3164      69676874 
 3164      5475726E 
 3164      00
 3165              	.LASF63:
 3166 0143 4765744E 		.ascii	"GetNextStep\000"
 3166      65787453 
 3166      74657000 
 3167              	.LASF56:
 3168 014f 53345F44 		.ascii	"S4_DETECTED\000"
 3168      45544543 
 3168      54454400 
 3169              	.LASF41:
 3170 015b 41646A75 		.ascii	"AdjustToTheLeft\000"
 3170      7374546F 
 3170      5468654C 
 3170      65667400 
 3171              	.LASF15:
 3172 016b 75696E74 		.ascii	"uint16\000"
 3172      313600
 3173              	.LASF22:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 66


 3174 0172 696E6465 		.ascii	"index\000"
 3174      7800
 3175              	.LASF62:
 3176 0178 73706565 		.ascii	"speedTimer\000"
 3176      6454696D 
 3176      657200
 3177              	.LASF18:
 3178 0183 696E7431 		.ascii	"int16\000"
 3178      3600
 3179              	.LASF14:
 3180 0189 75696E74 		.ascii	"uint8\000"
 3180      3800
 3181              	.LASF33:
 3182 018f 67315F64 		.ascii	"g1_direction\000"
 3182      69726563 
 3182      74696F6E 
 3182      00
 3183              	.LASF84:
 3184 019c 6C696E65 		.ascii	"line\000"
 3184      00
 3185              	.LASF19:
 3186 01a1 666C6F61 		.ascii	"float\000"
 3186      7400
 3187              	.LASF54:
 3188 01a7 52696768 		.ascii	"Right\000"
 3188      7400
 3189              	.LASF61:
 3190 01ad 6E657744 		.ascii	"newDistance\000"
 3190      69737461 
 3190      6E636500 
 3191              	.LASF6:
 3192 01b9 6C6F6E67 		.ascii	"long long int\000"
 3192      206C6F6E 
 3192      6720696E 
 3192      7400
 3193              	.LASF17:
 3194 01c7 696E7438 		.ascii	"int8\000"
 3194      00
 3195              	.LASF100:
 3196 01cc 78426C6F 		.ascii	"xBlocksize\000"
 3196      636B7369 
 3196      7A6500
 3197              	.LASF75:
 3198 01d7 666C6167 		.ascii	"flag_ts_update\000"
 3198      5F74735F 
 3198      75706461 
 3198      746500
 3199              	.LASF35:
 3200 01e6 67325F79 		.ascii	"g2_ypos\000"
 3200      706F7300 
 3201              	.LASF29:
 3202 01ee 67305F64 		.ascii	"g0_direction\000"
 3202      69726563 
 3202      74696F6E 
 3202      00
 3203              	.LASF26:
 3204 01fb 67305F78 		.ascii	"g0_xpos\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 67


 3204      706F7300 
 3205              	.LASF91:
 3206 0203 70726576 		.ascii	"previousOrientation\000"
 3206      696F7573 
 3206      4F726965 
 3206      6E746174 
 3206      696F6E00 
 3207              	.LASF53:
 3208 0217 4C656674 		.ascii	"Left\000"
 3208      00
 3209              	.LASF65:
 3210 021c 43686563 		.ascii	"CheckSensorDirection\000"
 3210      6B53656E 
 3210      736F7244 
 3210      69726563 
 3210      74696F6E 
 3211              	.LASF96:
 3212 0231 74696D65 		.ascii	"timerInt\000"
 3212      72496E74 
 3212      00
 3213              	.LASF77:
 3214 023a 666C6167 		.ascii	"flag_ts_display\000"
 3214      5F74735F 
 3214      64697370 
 3214      6C617900 
 3215              	.LASF78:
 3216 024a 666C6167 		.ascii	"flag_rx\000"
 3216      5F727800 
 3217              	.LASF66:
 3218 0252 626C6F63 		.ascii	"blocksize\000"
 3218      6B73697A 
 3218      6500
 3219              	.LASF1:
 3220 025c 756E7369 		.ascii	"unsigned char\000"
 3220      676E6564 
 3220      20636861 
 3220      7200
 3221              	.LASF92:
 3222 026a 746F7461 		.ascii	"totalMilliseconds\000"
 3222      6C4D696C 
 3222      6C697365 
 3222      636F6E64 
 3222      7300
 3223              	.LASF85:
 3224 027c 656E7472 		.ascii	"entry\000"
 3224      7900
 3225              	.LASF9:
 3226 0282 6C6F6E67 		.ascii	"long double\000"
 3226      20646F75 
 3226      626C6500 
 3227              	.LASF102:
 3228 028e 63757272 		.ascii	"currentCol\000"
 3228      656E7443 
 3228      6F6C00
 3229              	.LASF89:
 3230 0299 70726576 		.ascii	"previousDirection\000"
 3230      696F7573 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 68


 3230      44697265 
 3230      6374696F 
 3230      6E00
 3231              	.LASF93:
 3232 02ab 746F7461 		.ascii	"totalDistance\000"
 3232      6C446973 
 3232      74616E63 
 3232      6500
 3233              	.LASF97:
 3234 02b9 6B656570 		.ascii	"keepLedOn\000"
 3234      4C65644F 
 3234      6E00
 3235              	.LASF28:
 3236 02c3 67305F73 		.ascii	"g0_speed\000"
 3236      70656564 
 3236      00
 3237              	.LASF99:
 3238 02cc 79426C6F 		.ascii	"yBlocksize\000"
 3238      636B7369 
 3238      7A6500
 3239              	.LASF81:
 3240 02d7 64617461 		.ascii	"dataready_flag\000"
 3240      72656164 
 3240      795F666C 
 3240      616700
 3241              	.LASF30:
 3242 02e6 67315F78 		.ascii	"g1_xpos\000"
 3242      706F7300 
 3243              	.LASF0:
 3244 02ee 7369676E 		.ascii	"signed char\000"
 3244      65642063 
 3244      68617200 
 3245              	.LASF13:
 3246 02fa 696E7433 		.ascii	"int32_t\000"
 3246      325F7400 
 3247              	.LASF7:
 3248 0302 6C6F6E67 		.ascii	"long long unsigned int\000"
 3248      206C6F6E 
 3248      6720756E 
 3248      7369676E 
 3248      65642069 
 3249              	.LASF42:
 3250 0319 41646A75 		.ascii	"AdjustToTheRight\000"
 3250      7374546F 
 3250      54686552 
 3250      69676874 
 3250      00
 3251              	.LASF8:
 3252 032a 756E7369 		.ascii	"unsigned int\000"
 3252      676E6564 
 3252      20696E74 
 3252      00
 3253              	.LASF71:
 3254 0337 74735F75 		.ascii	"ts_update\000"
 3254      70646174 
 3254      6500
 3255              	.LASF80:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 69


 3256 0341 666C6167 		.ascii	"flag_KB_string\000"
 3256      5F4B425F 
 3256      73747269 
 3256      6E6700
 3257              	.LASF68:
 3258 0350 53657452 		.ascii	"SetRobotMovement\000"
 3258      6F626F74 
 3258      4D6F7665 
 3258      6D656E74 
 3258      00
 3259              	.LASF59:
 3260 0361 54494D45 		.ascii	"TIMER_FINISH\000"
 3260      525F4649 
 3260      4E495348 
 3260      00
 3261              	.LASF36:
 3262 036e 67325F73 		.ascii	"g2_speed\000"
 3262      70656564 
 3262      00
 3263              	.LASF57:
 3264 0377 53355F44 		.ascii	"S5_DETECTED\000"
 3264      45544543 
 3264      54454400 
 3265              	.LASF3:
 3266 0383 73686F72 		.ascii	"short unsigned int\000"
 3266      7420756E 
 3266      7369676E 
 3266      65642069 
 3266      6E7400
 3267              	.LASF106:
 3268 0396 64617461 		.ascii	"data_main\000"
 3268      5F6D6169 
 3268      6E00
 3269              	.LASF67:
 3270 03a0 52657365 		.ascii	"ResetSensorFlags\000"
 3270      7453656E 
 3270      736F7246 
 3270      6C616773 
 3270      00
 3271              	.LASF11:
 3272 03b1 63686172 		.ascii	"char\000"
 3272      00
 3273              	.LASF4:
 3274 03b6 6C6F6E67 		.ascii	"long int\000"
 3274      20696E74 
 3274      00
 3275              	.LASF38:
 3276 03bf 466F7277 		.ascii	"Forward\000"
 3276      61726400 
 3277              	.LASF105:
 3278 03c7 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3278      6F63756D 
 3278      656E7473 
 3278      5C476974 
 3278      4875625C 
 3279 03f6 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3279      635F636F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 70


 3279      64655F62 
 3279      6173655C 
 3279      43533330 
 3280              	.LASF95:
 3281 0418 71756164 		.ascii	"quadDec2Count\000"
 3281      44656332 
 3281      436F756E 
 3281      7400
 3282              	.LASF31:
 3283 0426 67315F79 		.ascii	"g1_ypos\000"
 3283      706F7300 
 3284              	.LASF37:
 3285 042e 67325F64 		.ascii	"g2_direction\000"
 3285      69726563 
 3285      74696F6E 
 3285      00
 3286              	.LASF32:
 3287 043b 67315F73 		.ascii	"g1_speed\000"
 3287      70656564 
 3287      00
 3288              	.LASF83:
 3289 0444 64697370 		.ascii	"displaystring\000"
 3289      6C617973 
 3289      7472696E 
 3289      6700
 3290              	.LASF23:
 3291 0452 726F626F 		.ascii	"robot_xpos\000"
 3291      745F7870 
 3291      6F7300
 3292              	.LASF39:
 3293 045d 5475726E 		.ascii	"TurnRight\000"
 3293      52696768 
 3293      7400
 3294              	.LASF94:
 3295 0467 62756666 		.ascii	"buffer\000"
 3295      657200
 3296              	.LASF16:
 3297 046e 75696E74 		.ascii	"uint32\000"
 3297      333200
 3298              	.LASF104:
 3299 0475 6D61696E 		.ascii	"main.c\000"
 3299      2E6300
 3300              	.LASF5:
 3301 047c 6C6F6E67 		.ascii	"long unsigned int\000"
 3301      20756E73 
 3301      69676E65 
 3301      6420696E 
 3301      7400
 3302              	.LASF49:
 3303 048e 4261636B 		.ascii	"Backward\000"
 3303      77617264 
 3303      00
 3304              	.LASF20:
 3305 0497 646F7562 		.ascii	"double\000"
 3305      6C6500
 3306              	.LASF44:
 3307 049e 556E6B6E 		.ascii	"Unknown\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 71


 3307      6F776E00 
 3308              	.LASF101:
 3309 04a6 63757272 		.ascii	"currentRow\000"
 3309      656E7452 
 3309      6F7700
 3310              	.LASF55:
 3311 04b1 53335F44 		.ascii	"S3_DETECTED\000"
 3311      45544543 
 3311      54454400 
 3312              	.LASF72:
 3313 04bd 74735F73 		.ascii	"ts_speed\000"
 3313      70656564 
 3313      00
 3314              	.LASF108:
 3315 04c6 636F756E 		.ascii	"count\000"
 3315      7400
 3316              	.LASF74:
 3317 04cc 666C6167 		.ascii	"flag_ts_enc\000"
 3317      5F74735F 
 3317      656E6300 
 3318              	.LASF12:
 3319 04d8 5F5F696E 		.ascii	"__int32_t\000"
 3319      7433325F 
 3319      7400
 3320              	.LASF43:
 3321 04e2 53746F70 		.ascii	"Stop\000"
 3321      00
 3322              	.LASF27:
 3323 04e7 67305F79 		.ascii	"g0_ypos\000"
 3323      706F7300 
 3324              	.LASF25:
 3325 04ef 726F626F 		.ascii	"robot_orientation\000"
 3325      745F6F72 
 3325      69656E74 
 3325      6174696F 
 3325      6E00
 3326              	.LASF73:
 3327 0501 74735F64 		.ascii	"ts_display\000"
 3327      6973706C 
 3327      617900
 3328              	.LASF47:
 3329 050c 77616974 		.ascii	"waitForLeftTurn\000"
 3329      466F724C 
 3329      65667454 
 3329      75726E00 
 3330              	.LASF107:
 3331 051c 71756164 		.ascii	"quadCountToRPM\000"
 3331      436F756E 
 3331      74546F52 
 3331      504D00
 3332              	.LASF82:
 3333 052b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3333      5F72665F 
 3333      7472616E 
 3333      736D6973 
 3333      73696F6E 
 3334              	.LASF24:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccEjzYNY.s 			page 72


 3335 0547 726F626F 		.ascii	"robot_ypos\000"
 3335      745F7970 
 3335      6F7300
 3336              	.LASF69:
 3337 0552 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3337      52784275 
 3337      66666572 
 3337      00
 3338              	.LASF90:
 3339 055f 63757272 		.ascii	"currentOrientation\000"
 3339      656E744F 
 3339      7269656E 
 3339      74617469 
 3339      6F6E00
 3340              	.LASF52:
 3341 0572 446F776E 		.ascii	"Down\000"
 3341      00
 3342              	.LASF88:
 3343 0577 63757272 		.ascii	"currentDirection\000"
 3343      656E7444 
 3343      69726563 
 3343      74696F6E 
 3343      00
 3344              	.LASF64:
 3345 0588 64697265 		.ascii	"directionState\000"
 3345      6374696F 
 3345      6E537461 
 3345      746500
 3346              	.LASF21:
 3347 0597 72737369 		.ascii	"rssi\000"
 3347      00
 3348              	.LASF51:
 3349 059c 4F726965 		.ascii	"OrientationState\000"
 3349      6E746174 
 3349      696F6E53 
 3349      74617465 
 3349      00
 3350              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
