ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	previousRobotOrientation,1,1
 107              		.comm	currentRobotOrientation,1,1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 3


 108              		.comm	Instructions,285,4
 109              		.global	currentDirection
 110              		.align	2
 111              		.type	currentDirection, %object
 112              		.size	currentDirection, 4
 113              	currentDirection:
 114 0044 06000000 		.word	6
 115              		.global	previousDirection
 116              		.align	2
 117              		.type	previousDirection, %object
 118              		.size	previousDirection, 4
 119              	previousDirection:
 120 0048 06000000 		.word	6
 121              		.global	currentOrientation
 122              		.type	currentOrientation, %object
 123              		.size	currentOrientation, 1
 124              	currentOrientation:
 125 004c 03       		.byte	3
 126              		.global	previousOrientation
 127              		.type	previousOrientation, %object
 128              		.size	previousOrientation, 1
 129              	previousOrientation:
 130 004d 03       		.byte	3
 131              		.comm	instructionList,3420,4
 132              		.comm	s3,1,1
 133              		.comm	s4,1,1
 134              		.comm	s5,1,1
 135              		.global	s6
 136              		.bss
 137              		.type	s6, %object
 138              		.size	s6, 1
 139              	s6:
 140 0012 00       		.space	1
 141              		.global	totalMilliseconds
 142 0013 00       		.align	2
 143              		.type	totalMilliseconds, %object
 144              		.size	totalMilliseconds, 4
 145              	totalMilliseconds:
 146 0014 00000000 		.space	4
 147              		.global	totalDistance
 148              		.align	2
 149              		.type	totalDistance, %object
 150              		.size	totalDistance, 4
 151              	totalDistance:
 152 0018 00000000 		.space	4
 153              		.comm	buffer,69,4
 154              		.global	quadDec2Count
 155              		.align	2
 156              		.type	quadDec2Count, %object
 157              		.size	quadDec2Count, 4
 158              	quadDec2Count:
 159 001c 00000000 		.space	4
 160              		.global	timerInt
 161              		.align	2
 162              		.type	timerInt, %object
 163              		.size	timerInt, 4
 164              	timerInt:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 4


 165 0020 00000000 		.space	4
 166              		.global	keepLedOn
 167              		.align	2
 168              		.type	keepLedOn, %object
 169              		.size	keepLedOn, 4
 170              	keepLedOn:
 171 0024 00000000 		.space	4
 172              		.global	stopBuffer
 173              		.align	2
 174              		.type	stopBuffer, %object
 175              		.size	stopBuffer, 4
 176              	stopBuffer:
 177 0028 00000000 		.space	4
 178              		.global	__aeabi_i2d
 179              		.global	__aeabi_dmul
 180              		.global	__aeabi_ddiv
 181              		.global	__aeabi_d2f
 182              		.global	__aeabi_fadd
 183              		.section	.text.speedTimer,"ax",%progbits
 184              		.align	2
 185              		.global	speedTimer
 186              		.thumb
 187              		.thumb_func
 188              		.type	speedTimer, %function
 189              	speedTimer:
 190              	.LFB64:
 191              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 5


  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum DirectionState currentDirection = Unknown;
  43:main.c        **** enum DirectionState previousDirection = Unknown;
  44:main.c        **** enum OrientationState currentOrientation = Right;
  45:main.c        **** enum OrientationState previousOrientation = Right;
  46:main.c        **** enum DirectionState GetNextStep();
  47:main.c        **** 
  48:main.c        **** void traversePath(int numSteps, struct Instructions instructionList[]);
  49:main.c        **** struct Instructions instructionList[285];
  50:main.c        **** // ----------------------------------------
  51:main.c        **** uint8 s3, s4, s5, s6 = 0;
  52:main.c        **** //* ========================================
  53:main.c        **** // Calculating Distance
  54:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  55:main.c        **** 
  56:main.c        **** uint32 totalMilliseconds = 0;
  57:main.c        **** float totalDistance = 0; // in mm
  58:main.c        **** //* ========================================
  59:main.c        **** char buffer[69];
  60:main.c        **** int quadDec2Count = 0;
  61:main.c        **** int timerInt = 0;
  62:main.c        **** int keepLedOn = 0;
  63:main.c        **** uint32 stopBuffer = 0;
  64:main.c        **** 
  65:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  66:main.c        **** 
  67:main.c        **** CY_ISR (speedTimer) {
 192              		.loc 1 67 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 90B5     		push	{r4, r7, lr}
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              		.cfi_def_cfa_offset 24
 203 0004 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
  68:main.c        ****     timerInt = 1;
 205              		.loc 1 68 0
 206 0006 364B     		ldr	r3, .L4+16
 207 0008 0122     		movs	r2, #1
 208 000a 1A60     		str	r2, [r3]
  69:main.c        ****     //quadDec_M1 used for turning macros
  70:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 6


 209              		.loc 1 70 0
 210 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 211 0010 0346     		mov	r3, r0
 212 0012 1A46     		mov	r2, r3
 213 0014 334B     		ldr	r3, .L4+20
 214 0016 1A60     		str	r2, [r3]
  71:main.c        ****     
  72:main.c        ****     if ((currentDirection == Forward || 
 215              		.loc 1 72 0
 216 0018 334B     		ldr	r3, .L4+24
 217 001a 1B68     		ldr	r3, [r3]
 218 001c 002B     		cmp	r3, #0
 219 001e 17D0     		beq	.L2
  73:main.c        ****         currentDirection == waitForTurn || 
 220              		.loc 1 73 0 discriminator 1
 221 0020 314B     		ldr	r3, .L4+24
 222 0022 1B68     		ldr	r3, [r3]
  72:main.c        ****         currentDirection == waitForTurn || 
 223              		.loc 1 72 0 discriminator 1
 224 0024 072B     		cmp	r3, #7
 225 0026 13D0     		beq	.L2
  74:main.c        ****         currentDirection == waitForLeftTurn ||
 226              		.loc 1 74 0
 227 0028 2F4B     		ldr	r3, .L4+24
 228 002a 1B68     		ldr	r3, [r3]
  73:main.c        ****         currentDirection == waitForTurn || 
 229              		.loc 1 73 0
 230 002c 092B     		cmp	r3, #9
 231 002e 0FD0     		beq	.L2
  75:main.c        ****         currentDirection == waitForRightTurn ||
 232              		.loc 1 75 0
 233 0030 2D4B     		ldr	r3, .L4+24
 234 0032 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == waitForLeftTurn ||
 235              		.loc 1 74 0
 236 0034 082B     		cmp	r3, #8
 237 0036 0BD0     		beq	.L2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 238              		.loc 1 76 0
 239 0038 2B4B     		ldr	r3, .L4+24
 240 003a 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForRightTurn ||
 241              		.loc 1 75 0
 242 003c 0A2B     		cmp	r3, #10
 243 003e 07D0     		beq	.L2
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 244              		.loc 1 77 0
 245 0040 294B     		ldr	r3, .L4+24
 246 0042 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 247              		.loc 1 76 0
 248 0044 032B     		cmp	r3, #3
 249 0046 03D0     		beq	.L2
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 250              		.loc 1 78 0
 251 0048 274B     		ldr	r3, .L4+24
 252 004a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 7


  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 253              		.loc 1 77 0
 254 004c 042B     		cmp	r3, #4
 255 004e 34D1     		bne	.L3
 256              	.L2:
  79:main.c        ****         quadDec2Count != 0) {
 257              		.loc 1 79 0
 258 0050 244B     		ldr	r3, .L4+20
 259 0052 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 260              		.loc 1 78 0
 261 0054 002B     		cmp	r3, #0
 262 0056 30D0     		beq	.L3
 263              	.LBB2:
  80:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  81:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 264              		.loc 1 81 0
 265 0058 224B     		ldr	r3, .L4+20
 266 005a 1B68     		ldr	r3, [r3]
 267 005c 002B     		cmp	r3, #0
 268 005e B8BF     		it	lt
 269 0060 5B42     		rsblt	r3, r3, #0
 270 0062 1846     		mov	r0, r3
 271 0064 FFF7FEFF 		bl	__aeabi_i2d
 272 0068 19A3     		adr	r3, .L4
 273 006a D3E90023 		ldrd	r2, [r3]
 274 006e FFF7FEFF 		bl	__aeabi_dmul
 275 0072 0346     		mov	r3, r0
 276 0074 0C46     		mov	r4, r1
 277 0076 1846     		mov	r0, r3
 278 0078 2146     		mov	r1, r4
 279 007a 17A3     		adr	r3, .L4+8
 280 007c D3E90023 		ldrd	r2, [r3]
 281 0080 FFF7FEFF 		bl	__aeabi_dmul
 282 0084 0346     		mov	r3, r0
 283 0086 0C46     		mov	r4, r1
 284 0088 1846     		mov	r0, r3
 285 008a 2146     		mov	r1, r4
 286 008c 4FF00002 		mov	r2, #0
 287 0090 164B     		ldr	r3, .L4+28
 288 0092 FFF7FEFF 		bl	__aeabi_ddiv
 289 0096 0346     		mov	r3, r0
 290 0098 0C46     		mov	r4, r1
 291 009a 1846     		mov	r0, r3
 292 009c 2146     		mov	r1, r4
 293 009e FFF7FEFF 		bl	__aeabi_d2f
 294 00a2 0346     		mov	r3, r0
 295 00a4 7B60     		str	r3, [r7, #4]	@ float
  82:main.c        ****         
  83:main.c        ****         totalDistance = totalDistance + newDistance;
 296              		.loc 1 83 0
 297 00a6 124B     		ldr	r3, .L4+32
 298 00a8 1B68     		ldr	r3, [r3]	@ float
 299 00aa 7968     		ldr	r1, [r7, #4]	@ float
 300 00ac 1846     		mov	r0, r3
 301 00ae FFF7FEFF 		bl	__aeabi_fadd
 302 00b2 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 8


 303 00b4 1A46     		mov	r2, r3
 304 00b6 0E4B     		ldr	r3, .L4+32
 305 00b8 1A60     		str	r2, [r3]	@ float
 306              	.L3:
 307              	.LBE2:
  84:main.c        ****     }
  85:main.c        ****     
  86:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 308              		.loc 1 86 0
 309 00ba 0020     		movs	r0, #0
 310 00bc FFF7FEFF 		bl	QuadDec_M2_SetCounter
  87:main.c        ****     QuadDec_M2_Start(); // restart counter
 311              		.loc 1 87 0
 312 00c0 FFF7FEFF 		bl	QuadDec_M2_Start
  88:main.c        ****     
  89:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 313              		.loc 1 89 0
 314 00c4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  90:main.c        **** }
 315              		.loc 1 90 0
 316 00c8 00BF     		nop
 317 00ca 0C37     		adds	r7, r7, #12
 318              		.cfi_def_cfa_offset 12
 319 00cc BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 00ce 90BD     		pop	{r4, r7, pc}
 323              	.L5:
 324              		.align	3
 325              	.L4:
 326 00d0 182D4454 		.word	1413754136
 327 00d4 FB210940 		.word	1074340347
 328 00d8 00000000 		.word	0
 329 00dc 00205040 		.word	1078992896
 330 00e0 00000000 		.word	timerInt
 331 00e4 00000000 		.word	quadDec2Count
 332 00e8 00000000 		.word	currentDirection
 333 00ec 00806C40 		.word	1080852480
 334 00f0 00000000 		.word	totalDistance
 335              		.cfi_endproc
 336              	.LFE64:
 337              		.size	speedTimer, .-speedTimer
 338              		.section	.text.S3_DETECTED,"ax",%progbits
 339              		.align	2
 340              		.global	S3_DETECTED
 341              		.thumb
 342              		.thumb_func
 343              		.type	S3_DETECTED, %function
 344              	S3_DETECTED:
 345              	.LFB65:
  91:main.c        **** 
  92:main.c        **** CY_ISR(S3_DETECTED) {
 346              		.loc 1 92 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350              		@ link register save eliminated.
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 9


 351 0000 80B4     		push	{r7}
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 7, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
  93:main.c        ****     // Sensor has detected WHITE
  94:main.c        ****     s3 = 1; // , Black = 0, White = 1
 356              		.loc 1 94 0
 357 0004 034B     		ldr	r3, .L7
 358 0006 0122     		movs	r2, #1
 359 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     //LED_Write(1u);
  96:main.c        **** }
 360              		.loc 1 96 0
 361 000a 00BF     		nop
 362 000c BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 000e 80BC     		pop	{r7}
 366              		.cfi_restore 7
 367              		.cfi_def_cfa_offset 0
 368 0010 7047     		bx	lr
 369              	.L8:
 370 0012 00BF     		.align	2
 371              	.L7:
 372 0014 00000000 		.word	s3
 373              		.cfi_endproc
 374              	.LFE65:
 375              		.size	S3_DETECTED, .-S3_DETECTED
 376              		.section	.text.S4_DETECTED,"ax",%progbits
 377              		.align	2
 378              		.global	S4_DETECTED
 379              		.thumb
 380              		.thumb_func
 381              		.type	S4_DETECTED, %function
 382              	S4_DETECTED:
 383              	.LFB66:
  97:main.c        **** 
  98:main.c        **** CY_ISR(S4_DETECTED) {
 384              		.loc 1 98 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
  99:main.c        ****     // Sensor has detected WHITE
 100:main.c        ****     s4 = 1; // , Black = 0, White = 1
 394              		.loc 1 100 0
 395 0004 034B     		ldr	r3, .L10
 396 0006 0122     		movs	r2, #1
 397 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     //LED_Write(1u);
 102:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 10


 398              		.loc 1 102 0
 399 000a 00BF     		nop
 400 000c BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 000e 80BC     		pop	{r7}
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0010 7047     		bx	lr
 407              	.L11:
 408 0012 00BF     		.align	2
 409              	.L10:
 410 0014 00000000 		.word	s4
 411              		.cfi_endproc
 412              	.LFE66:
 413              		.size	S4_DETECTED, .-S4_DETECTED
 414              		.section	.text.S5_DETECTED,"ax",%progbits
 415              		.align	2
 416              		.global	S5_DETECTED
 417              		.thumb
 418              		.thumb_func
 419              		.type	S5_DETECTED, %function
 420              	S5_DETECTED:
 421              	.LFB67:
 103:main.c        **** 
 104:main.c        **** CY_ISR(S5_DETECTED) {
 422              		.loc 1 104 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427 0000 80B4     		push	{r7}
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 7, -4
 430 0002 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 105:main.c        ****     // Sensor has detected WHITE
 106:main.c        ****     s5 = 1; // , Black = 0, White = 1
 432              		.loc 1 106 0
 433 0004 034B     		ldr	r3, .L13
 434 0006 0122     		movs	r2, #1
 435 0008 1A70     		strb	r2, [r3]
 107:main.c        ****     //LED_Write(1u);
 108:main.c        **** }
 436              		.loc 1 108 0
 437 000a 00BF     		nop
 438 000c BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 000e 80BC     		pop	{r7}
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
 444 0010 7047     		bx	lr
 445              	.L14:
 446 0012 00BF     		.align	2
 447              	.L13:
 448 0014 00000000 		.word	s5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 11


 449              		.cfi_endproc
 450              	.LFE67:
 451              		.size	S5_DETECTED, .-S5_DETECTED
 452              		.section	.text.S6_DETECTED,"ax",%progbits
 453              		.align	2
 454              		.global	S6_DETECTED
 455              		.thumb
 456              		.thumb_func
 457              		.type	S6_DETECTED, %function
 458              	S6_DETECTED:
 459              	.LFB68:
 109:main.c        **** 
 110:main.c        **** CY_ISR(S6_DETECTED) {
 460              		.loc 1 110 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465 0000 80B4     		push	{r7}
 466              		.cfi_def_cfa_offset 4
 467              		.cfi_offset 7, -4
 468 0002 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 111:main.c        ****     // Sensor has detected WHITE
 112:main.c        ****     s6 = 1; // , Black = 0, White = 1
 470              		.loc 1 112 0
 471 0004 034B     		ldr	r3, .L16
 472 0006 0122     		movs	r2, #1
 473 0008 1A70     		strb	r2, [r3]
 113:main.c        ****     //LED_Write(1u);
 114:main.c        **** }
 474              		.loc 1 114 0
 475 000a 00BF     		nop
 476 000c BD46     		mov	sp, r7
 477              		.cfi_def_cfa_register 13
 478              		@ sp needed
 479 000e 80BC     		pop	{r7}
 480              		.cfi_restore 7
 481              		.cfi_def_cfa_offset 0
 482 0010 7047     		bx	lr
 483              	.L17:
 484 0012 00BF     		.align	2
 485              	.L16:
 486 0014 00000000 		.word	s6
 487              		.cfi_endproc
 488              	.LFE68:
 489              		.size	S6_DETECTED, .-S6_DETECTED
 490              		.section	.text.TIMER_FINISH,"ax",%progbits
 491              		.align	2
 492              		.global	TIMER_FINISH
 493              		.thumb
 494              		.thumb_func
 495              		.type	TIMER_FINISH, %function
 496              	TIMER_FINISH:
 497              	.LFB69:
 115:main.c        **** 
 116:main.c        **** CY_ISR(TIMER_FINISH) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 12


 498              		.loc 1 116 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 117:main.c        ****     if (currentDirection == Stop) {
 508              		.loc 1 117 0
 509 0004 0A4B     		ldr	r3, .L21
 510 0006 1B68     		ldr	r3, [r3]
 511 0008 052B     		cmp	r3, #5
 512 000a 05D1     		bne	.L19
 118:main.c        ****         stopBuffer = stopBuffer + 1;
 513              		.loc 1 118 0
 514 000c 094B     		ldr	r3, .L21+4
 515 000e 1B68     		ldr	r3, [r3]
 516 0010 0133     		adds	r3, r3, #1
 517 0012 084A     		ldr	r2, .L21+4
 518 0014 1360     		str	r3, [r2]
 519 0016 02E0     		b	.L20
 520              	.L19:
 119:main.c        ****     } else {
 120:main.c        ****         stopBuffer = 0;
 521              		.loc 1 120 0
 522 0018 064B     		ldr	r3, .L21+4
 523 001a 0022     		movs	r2, #0
 524 001c 1A60     		str	r2, [r3]
 525              	.L20:
 121:main.c        ****     }
 122:main.c        ****     SetRobotMovement(); 
 526              		.loc 1 122 0
 527 001e FFF7FEFF 		bl	SetRobotMovement
 123:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 528              		.loc 1 123 0
 529 0022 FFF7FEFF 		bl	ResetSensorFlags
 124:main.c        ****     Timer_LED_ReadStatusRegister();
 530              		.loc 1 124 0
 531 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 125:main.c        **** }
 532              		.loc 1 125 0
 533 002a 00BF     		nop
 534 002c 80BD     		pop	{r7, pc}
 535              	.L22:
 536 002e 00BF     		.align	2
 537              	.L21:
 538 0030 00000000 		.word	currentDirection
 539 0034 00000000 		.word	stopBuffer
 540              		.cfi_endproc
 541              	.LFE69:
 542              		.size	TIMER_FINISH, .-TIMER_FINISH
 543              		.section	.text.main,"ax",%progbits
 544              		.align	2
 545              		.global	main
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 13


 546              		.thumb
 547              		.thumb_func
 548              		.type	main, %function
 549              	main:
 550              	.LFB70:
 126:main.c        **** 
 127:main.c        **** 
 128:main.c        **** int main()
 129:main.c        **** {
 551              		.loc 1 129 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 130:main.c        **** // ----- INITIALIZATIONS ----------
 131:main.c        ****     CYGlobalIntEnable;
 561              		.loc 1 131 0
 562              		.syntax unified
 563              	@ 131 "main.c" 1
 564 0004 62B6     		CPSIE   i
 565              	@ 0 "" 2
 132:main.c        ****     ResetSensorFlags();
 566              		.loc 1 132 0
 567              		.thumb
 568              		.syntax unified
 569 0006 FFF7FEFF 		bl	ResetSensorFlags
 133:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 570              		.loc 1 133 0
 571 000a FFF7FEFF 		bl	init
 134:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 572              		.loc 1 134 0
 573 000e 1848     		ldr	r0, .L27
 574 0010 FFF7FEFF 		bl	isr_speed_StartEx
 135:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 575              		.loc 1 135 0
 576 0014 1748     		ldr	r0, .L27+4
 577 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 136:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 578              		.loc 1 136 0
 579 001a 1748     		ldr	r0, .L27+8
 580 001c FFF7FEFF 		bl	S3_detected_StartEx
 137:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 581              		.loc 1 137 0
 582 0020 1648     		ldr	r0, .L27+12
 583 0022 FFF7FEFF 		bl	S4_detected_StartEx
 138:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 584              		.loc 1 138 0
 585 0026 1648     		ldr	r0, .L27+16
 586 0028 FFF7FEFF 		bl	S5_detected_StartEx
 139:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 587              		.loc 1 139 0
 588 002c 1548     		ldr	r0, .L27+20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 14


 589 002e FFF7FEFF 		bl	S6_detected_StartEx
 140:main.c        ****     Timer_LED_Start();
 590              		.loc 1 140 0
 591 0032 FFF7FEFF 		bl	Timer_LED_Start
 141:main.c        ****     
 142:main.c        **** // ------USB SETUP ----------------    
 143:main.c        **** #ifdef USE_USB    
 144:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 592              		.loc 1 144 0
 593 0036 0121     		movs	r1, #1
 594 0038 0020     		movs	r0, #0
 595 003a FFF7FEFF 		bl	USBUART_Start
 145:main.c        **** #endif        
 146:main.c        ****     RF_BT_SELECT_Write(0);
 596              		.loc 1 146 0
 597 003e 0020     		movs	r0, #0
 598 0040 FFF7FEFF 		bl	RF_BT_SELECT_Write
 599              	.L26:
 147:main.c        ****     
 148:main.c        ****     //usbPutString("Initialised UART");
 149:main.c        ****     for(;;)
 150:main.c        ****     {
 151:main.c        ****         if(timerInt == 1) {
 600              		.loc 1 151 0
 601 0044 104B     		ldr	r3, .L27+24
 602 0046 1B68     		ldr	r3, [r3]
 603 0048 012B     		cmp	r3, #1
 604 004a 08D1     		bne	.L24
 152:main.c        ****             timerInt = 0;
 605              		.loc 1 152 0
 606 004c 0E4B     		ldr	r3, .L27+24
 607 004e 0022     		movs	r2, #0
 608 0050 1A60     		str	r2, [r3]
 153:main.c        ****             // calculate RPM of M2
 154:main.c        ****             quadCountToRPM(quadDec2Count);
 609              		.loc 1 154 0
 610 0052 0E4B     		ldr	r3, .L27+28
 611 0054 1B68     		ldr	r3, [r3]
 612 0056 9BB2     		uxth	r3, r3
 613 0058 1846     		mov	r0, r3
 614 005a FFF7FEFF 		bl	quadCountToRPM
 615              	.L24:
 155:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 156:main.c        ****             //usbPutString(buffer);
 157:main.c        ****             //usbPutString(" ");
 158:main.c        ****         }
 159:main.c        ****         //handle_usb();
 160:main.c        ****         if (flag_KB_string == 1)
 616              		.loc 1 160 0
 617 005e 0C4B     		ldr	r3, .L27+32
 618 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 619 0062 012B     		cmp	r3, #1
 620 0064 EED1     		bne	.L26
 161:main.c        ****         {
 162:main.c        ****             //usbPutString("Total Distance: ");
 163:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 164:main.c        ****             //usbPutString(buffer);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 15


 165:main.c        ****             flag_KB_string = 0;
 621              		.loc 1 165 0
 622 0066 0A4B     		ldr	r3, .L27+32
 623 0068 0022     		movs	r2, #0
 624 006a 1A70     		strb	r2, [r3]
 166:main.c        ****         }           
 167:main.c        ****     }
 625              		.loc 1 167 0
 626 006c EAE7     		b	.L26
 627              	.L28:
 628 006e 00BF     		.align	2
 629              	.L27:
 630 0070 00000000 		.word	speedTimer
 631 0074 00000000 		.word	TIMER_FINISH
 632 0078 00000000 		.word	S3_DETECTED
 633 007c 00000000 		.word	S4_DETECTED
 634 0080 00000000 		.word	S5_DETECTED
 635 0084 00000000 		.word	S6_DETECTED
 636 0088 00000000 		.word	timerInt
 637 008c 00000000 		.word	quadDec2Count
 638 0090 00000000 		.word	flag_KB_string
 639              		.cfi_endproc
 640              	.LFE70:
 641              		.size	main, .-main
 642              		.global	__aeabi_fmul
 643              		.global	__aeabi_f2iz
 644              		.section	.text.quadCountToRPM,"ax",%progbits
 645              		.align	2
 646              		.global	quadCountToRPM
 647              		.thumb
 648              		.thumb_func
 649              		.type	quadCountToRPM, %function
 650              	quadCountToRPM:
 651              	.LFB71:
 168:main.c        ****     return 0;
 169:main.c        **** }
 170:main.c        **** 
 171:main.c        **** // Calculations
 172:main.c        **** //* ========================================
 173:main.c        **** int16 quadCountToRPM(uint16 count)
 174:main.c        **** {
 652              		.loc 1 174 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 16
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 90B5     		push	{r4, r7, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 32
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 0346     		mov	r3, r0
 666 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 175:main.c        ****     float cps = count/57.00;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 16


 667              		.loc 1 175 0
 668 000a FB88     		ldrh	r3, [r7, #6]
 669 000c 1846     		mov	r0, r3
 670 000e FFF7FEFF 		bl	__aeabi_i2d
 671 0012 4FF00002 		mov	r2, #0
 672 0016 0D4B     		ldr	r3, .L31
 673 0018 FFF7FEFF 		bl	__aeabi_ddiv
 674 001c 0346     		mov	r3, r0
 675 001e 0C46     		mov	r4, r1
 676 0020 1846     		mov	r0, r3
 677 0022 2146     		mov	r1, r4
 678 0024 FFF7FEFF 		bl	__aeabi_d2f
 679 0028 0346     		mov	r3, r0
 680 002a FB60     		str	r3, [r7, #12]	@ float
 176:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 681              		.loc 1 176 0
 682 002c 0849     		ldr	r1, .L31+4
 683 002e F868     		ldr	r0, [r7, #12]	@ float
 684 0030 FFF7FEFF 		bl	__aeabi_fmul
 685 0034 0346     		mov	r3, r0
 686 0036 1846     		mov	r0, r3
 687 0038 FFF7FEFF 		bl	__aeabi_f2iz
 688 003c 0346     		mov	r3, r0
 689 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 177:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 178:main.c        ****     return rpm;
 690              		.loc 1 178 0
 691 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 179:main.c        ****     //usbPutString(buffer);
 180:main.c        ****     //usbPutString("rpm ");
 181:main.c        **** }
 692              		.loc 1 181 0
 693 0044 1846     		mov	r0, r3
 694 0046 1437     		adds	r7, r7, #20
 695              		.cfi_def_cfa_offset 12
 696 0048 BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 004a 90BD     		pop	{r4, r7, pc}
 700              	.L32:
 701              		.align	2
 702              	.L31:
 703 004c 00804C40 		.word	1078755328
 704 0050 00007041 		.word	1097859072
 705              		.cfi_endproc
 706              	.LFE71:
 707              		.size	quadCountToRPM, .-quadCountToRPM
 708              		.section	.text.ResetSensorFlags,"ax",%progbits
 709              		.align	2
 710              		.global	ResetSensorFlags
 711              		.thumb
 712              		.thumb_func
 713              		.type	ResetSensorFlags, %function
 714              	ResetSensorFlags:
 715              	.LFB72:
 182:main.c        **** 
 183:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 17


 184:main.c        **** void ResetSensorFlags() {
 716              		.loc 1 184 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 185:main.c        ****     s3 = 0;
 726              		.loc 1 185 0
 727 0004 074B     		ldr	r3, .L34
 728 0006 0022     		movs	r2, #0
 729 0008 1A70     		strb	r2, [r3]
 186:main.c        ****     s4 = 0;
 730              		.loc 1 186 0
 731 000a 074B     		ldr	r3, .L34+4
 732 000c 0022     		movs	r2, #0
 733 000e 1A70     		strb	r2, [r3]
 187:main.c        ****     s5 = 0;
 734              		.loc 1 187 0
 735 0010 064B     		ldr	r3, .L34+8
 736 0012 0022     		movs	r2, #0
 737 0014 1A70     		strb	r2, [r3]
 188:main.c        ****     s6 = 0;
 738              		.loc 1 188 0
 739 0016 064B     		ldr	r3, .L34+12
 740 0018 0022     		movs	r2, #0
 741 001a 1A70     		strb	r2, [r3]
 189:main.c        **** }
 742              		.loc 1 189 0
 743 001c 00BF     		nop
 744 001e BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 0020 80BC     		pop	{r7}
 748              		.cfi_restore 7
 749              		.cfi_def_cfa_offset 0
 750 0022 7047     		bx	lr
 751              	.L35:
 752              		.align	2
 753              	.L34:
 754 0024 00000000 		.word	s3
 755 0028 00000000 		.word	s4
 756 002c 00000000 		.word	s5
 757 0030 00000000 		.word	s6
 758              		.cfi_endproc
 759              	.LFE72:
 760              		.size	ResetSensorFlags, .-ResetSensorFlags
 761              		.global	xBlocksize
 762              		.data
 763 004e 0000     		.align	2
 764              		.type	xBlocksize, %object
 765              		.size	xBlocksize, 4
 766              	xBlocksize:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 18


 767 0050 0000FF42 		.word	1124007936
 768              		.global	yBlocksize
 769              		.align	2
 770              		.type	yBlocksize, %object
 771              		.size	yBlocksize, 4
 772              	yBlocksize:
 773 0054 0000A042 		.word	1117782016
 774              		.global	currentRow
 775              		.type	currentRow, %object
 776              		.size	currentRow, 1
 777              	currentRow:
 778 0058 01       		.byte	1
 779              		.global	currentCol
 780              		.type	currentCol, %object
 781              		.size	currentCol, 1
 782              	currentCol:
 783 0059 01       		.byte	1
 784              		.section	.text.GetNextStep,"ax",%progbits
 785              		.align	2
 786              		.global	GetNextStep
 787              		.thumb
 788              		.thumb_func
 789              		.type	GetNextStep, %function
 790              	GetNextStep:
 791              	.LFB73:
 190:main.c        **** 
 191:main.c        **** float xBlocksize = 127.5; // 127.5
 192:main.c        **** float yBlocksize = 80; // 80
 193:main.c        **** uint8 currentRow = 1;
 194:main.c        **** uint8 currentCol = 1;
 195:main.c        **** 
 196:main.c        **** enum DirectionState GetNextStep() {
 792              		.loc 1 196 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 0000 80B4     		push	{r7}
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0002 83B0     		sub	sp, sp, #12
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 197:main.c        ****     enum DirectionState directionState;
 198:main.c        ****     // Determines robot movement and orientation to follow optimal path
 199:main.c        ****     // enum DirectionState directionState = Stop;
 200:main.c        ****     previousOrientation = currentOrientation;
 804              		.loc 1 200 0
 805 0006 AB4B     		ldr	r3, .L75
 806 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 807 000a AB4B     		ldr	r3, .L75+4
 808 000c 1A70     		strb	r2, [r3]
 201:main.c        ****     
 202:main.c        ****     if(map[currentRow][currentCol] == 9) {
 809              		.loc 1 202 0
 810 000e AB4B     		ldr	r3, .L75+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 19


 811 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 0012 1A46     		mov	r2, r3
 813 0014 AA4B     		ldr	r3, .L75+12
 814 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 815 0018 1846     		mov	r0, r3
 816 001a AA49     		ldr	r1, .L75+16
 817 001c 1346     		mov	r3, r2
 818 001e DB00     		lsls	r3, r3, #3
 819 0020 1344     		add	r3, r3, r2
 820 0022 5B00     		lsls	r3, r3, #1
 821 0024 1344     		add	r3, r3, r2
 822 0026 0344     		add	r3, r3, r0
 823 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 824 002c 092B     		cmp	r3, #9
 825 002e 03D1     		bne	.L37
 203:main.c        ****         directionState = Stop; // reached target
 826              		.loc 1 203 0
 827 0030 0523     		movs	r3, #5
 828 0032 7B60     		str	r3, [r7, #4]
 204:main.c        ****         return directionState;
 829              		.loc 1 204 0
 830 0034 7B68     		ldr	r3, [r7, #4]
 831 0036 22E2     		b	.L38
 832              	.L37:
 205:main.c        ****     }
 206:main.c        ****     /*
 207:main.c        ****     if (totalDistance >= (yBlocksize)) {
 208:main.c        ****         directionState = Stop;
 209:main.c        ****         return directionState;
 210:main.c        ****     }
 211:main.c        ****     */
 212:main.c        ****         
 213:main.c        ****     switch (previousOrientation) {
 833              		.loc 1 213 0
 834 0038 9F4B     		ldr	r3, .L75+4
 835 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 003c 032B     		cmp	r3, #3
 837 003e 00F21482 		bhi	.L70
 838 0042 01A2     		adr	r2, .L41
 839 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 840              		.p2align 2
 841              	.L41:
 842 0048 59000000 		.word	.L40+1
 843 004c 59010000 		.word	.L42+1
 844 0050 59020000 		.word	.L43+1
 845 0054 6D030000 		.word	.L44+1
 846              		.p2align 1
 847              	.L40:
 214:main.c        ****             case Up:
 215:main.c        ****                 if(map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 848              		.loc 1 215 0
 849 0058 984B     		ldr	r3, .L75+8
 850 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 851 005c 5A1E     		subs	r2, r3, #1
 852 005e 984B     		ldr	r3, .L75+12
 853 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 854 0062 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 20


 855 0064 9749     		ldr	r1, .L75+16
 856 0066 1346     		mov	r3, r2
 857 0068 DB00     		lsls	r3, r3, #3
 858 006a 1344     		add	r3, r3, r2
 859 006c 5B00     		lsls	r3, r3, #1
 860 006e 1344     		add	r3, r3, r2
 861 0070 0344     		add	r3, r3, r0
 862 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 863 0076 082B     		cmp	r3, #8
 864 0078 10D0     		beq	.L45
 865              		.loc 1 215 0 is_stmt 0 discriminator 1
 866 007a 904B     		ldr	r3, .L75+8
 867 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 007e 5A1E     		subs	r2, r3, #1
 869 0080 8F4B     		ldr	r3, .L75+12
 870 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 871 0084 1846     		mov	r0, r3
 872 0086 8F49     		ldr	r1, .L75+16
 873 0088 1346     		mov	r3, r2
 874 008a DB00     		lsls	r3, r3, #3
 875 008c 1344     		add	r3, r3, r2
 876 008e 5B00     		lsls	r3, r3, #1
 877 0090 1344     		add	r3, r3, r2
 878 0092 0344     		add	r3, r3, r0
 879 0094 51F82330 		ldr	r3, [r1, r3, lsl #2]
 880 0098 092B     		cmp	r3, #9
 881 009a 0BD1     		bne	.L46
 882              	.L45:
 216:main.c        ****                     currentOrientation = Up; 
 883              		.loc 1 216 0 is_stmt 1
 884 009c 854B     		ldr	r3, .L75
 885 009e 0022     		movs	r2, #0
 886 00a0 1A70     		strb	r2, [r3]
 217:main.c        ****                     directionState = Forward;
 887              		.loc 1 217 0
 888 00a2 0023     		movs	r3, #0
 889 00a4 7B60     		str	r3, [r7, #4]
 218:main.c        ****                     currentRow--;// update position
 890              		.loc 1 218 0
 891 00a6 854B     		ldr	r3, .L75+8
 892 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 893 00aa 013B     		subs	r3, r3, #1
 894 00ac DAB2     		uxtb	r2, r3
 895 00ae 834B     		ldr	r3, .L75+8
 896 00b0 1A70     		strb	r2, [r3]
 897 00b2 50E0     		b	.L47
 898              	.L46:
 219:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 899              		.loc 1 219 0
 900 00b4 814B     		ldr	r3, .L75+8
 901 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 00b8 1A46     		mov	r2, r3
 903 00ba 814B     		ldr	r3, .L75+12
 904 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 00be 591E     		subs	r1, r3, #1
 906 00c0 8048     		ldr	r0, .L75+16
 907 00c2 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 21


 908 00c4 DB00     		lsls	r3, r3, #3
 909 00c6 1344     		add	r3, r3, r2
 910 00c8 5B00     		lsls	r3, r3, #1
 911 00ca 1344     		add	r3, r3, r2
 912 00cc 0B44     		add	r3, r3, r1
 913 00ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 914 00d2 082B     		cmp	r3, #8
 915 00d4 10D0     		beq	.L48
 916              		.loc 1 219 0 is_stmt 0 discriminator 1
 917 00d6 794B     		ldr	r3, .L75+8
 918 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 919 00da 1A46     		mov	r2, r3
 920 00dc 784B     		ldr	r3, .L75+12
 921 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 922 00e0 591E     		subs	r1, r3, #1
 923 00e2 7848     		ldr	r0, .L75+16
 924 00e4 1346     		mov	r3, r2
 925 00e6 DB00     		lsls	r3, r3, #3
 926 00e8 1344     		add	r3, r3, r2
 927 00ea 5B00     		lsls	r3, r3, #1
 928 00ec 1344     		add	r3, r3, r2
 929 00ee 0B44     		add	r3, r3, r1
 930 00f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 931 00f4 092B     		cmp	r3, #9
 932 00f6 05D1     		bne	.L49
 933              	.L48:
 220:main.c        ****                     currentOrientation = Left;
 934              		.loc 1 220 0 is_stmt 1
 935 00f8 6E4B     		ldr	r3, .L75
 936 00fa 0222     		movs	r2, #2
 937 00fc 1A70     		strb	r2, [r3]
 221:main.c        ****                     directionState = waitForLeftTurn;
 938              		.loc 1 221 0
 939 00fe 0923     		movs	r3, #9
 940 0100 7B60     		str	r3, [r7, #4]
 941 0102 28E0     		b	.L47
 942              	.L49:
 222:main.c        ****                     //currentRow--;
 223:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 943              		.loc 1 223 0
 944 0104 6D4B     		ldr	r3, .L75+8
 945 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 0108 1A46     		mov	r2, r3
 947 010a 6D4B     		ldr	r3, .L75+12
 948 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 010e 591C     		adds	r1, r3, #1
 950 0110 6C48     		ldr	r0, .L75+16
 951 0112 1346     		mov	r3, r2
 952 0114 DB00     		lsls	r3, r3, #3
 953 0116 1344     		add	r3, r3, r2
 954 0118 5B00     		lsls	r3, r3, #1
 955 011a 1344     		add	r3, r3, r2
 956 011c 0B44     		add	r3, r3, r1
 957 011e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 958 0122 082B     		cmp	r3, #8
 959 0124 11D0     		beq	.L50
 960              		.loc 1 223 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 22


 961 0126 654B     		ldr	r3, .L75+8
 962 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 012a 1A46     		mov	r2, r3
 964 012c 644B     		ldr	r3, .L75+12
 965 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 966 0130 591C     		adds	r1, r3, #1
 967 0132 6448     		ldr	r0, .L75+16
 968 0134 1346     		mov	r3, r2
 969 0136 DB00     		lsls	r3, r3, #3
 970 0138 1344     		add	r3, r3, r2
 971 013a 5B00     		lsls	r3, r3, #1
 972 013c 1344     		add	r3, r3, r2
 973 013e 0B44     		add	r3, r3, r1
 974 0140 50F82330 		ldr	r3, [r0, r3, lsl #2]
 975 0144 092B     		cmp	r3, #9
 976 0146 40F09281 		bne	.L71
 977              	.L50:
 224:main.c        ****                     currentOrientation = Right;
 978              		.loc 1 224 0 is_stmt 1
 979 014a 5A4B     		ldr	r3, .L75
 980 014c 0322     		movs	r2, #3
 981 014e 1A70     		strb	r2, [r3]
 225:main.c        ****                     directionState = waitForRightTurn;
 982              		.loc 1 225 0
 983 0150 0823     		movs	r3, #8
 984 0152 7B60     		str	r3, [r7, #4]
 226:main.c        ****                     //currentRow++; // update position
 227:main.c        ****                 }
 228:main.c        ****                 break;
 985              		.loc 1 228 0
 986 0154 8BE1     		b	.L71
 987              	.L47:
 988 0156 8AE1     		b	.L71
 989              	.L42:
 229:main.c        ****             case Down:
 230:main.c        ****                 if(map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 990              		.loc 1 230 0
 991 0158 584B     		ldr	r3, .L75+8
 992 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 015c 5A1C     		adds	r2, r3, #1
 994 015e 584B     		ldr	r3, .L75+12
 995 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 0162 1846     		mov	r0, r3
 997 0164 5749     		ldr	r1, .L75+16
 998 0166 1346     		mov	r3, r2
 999 0168 DB00     		lsls	r3, r3, #3
 1000 016a 1344     		add	r3, r3, r2
 1001 016c 5B00     		lsls	r3, r3, #1
 1002 016e 1344     		add	r3, r3, r2
 1003 0170 0344     		add	r3, r3, r0
 1004 0172 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1005 0176 082B     		cmp	r3, #8
 1006 0178 10D0     		beq	.L52
 1007              		.loc 1 230 0 is_stmt 0 discriminator 1
 1008 017a 504B     		ldr	r3, .L75+8
 1009 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 017e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 23


 1011 0180 4F4B     		ldr	r3, .L75+12
 1012 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1013 0184 1846     		mov	r0, r3
 1014 0186 4F49     		ldr	r1, .L75+16
 1015 0188 1346     		mov	r3, r2
 1016 018a DB00     		lsls	r3, r3, #3
 1017 018c 1344     		add	r3, r3, r2
 1018 018e 5B00     		lsls	r3, r3, #1
 1019 0190 1344     		add	r3, r3, r2
 1020 0192 0344     		add	r3, r3, r0
 1021 0194 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1022 0198 092B     		cmp	r3, #9
 1023 019a 0BD1     		bne	.L53
 1024              	.L52:
 231:main.c        ****                     currentOrientation = Down;
 1025              		.loc 1 231 0 is_stmt 1
 1026 019c 454B     		ldr	r3, .L75
 1027 019e 0122     		movs	r2, #1
 1028 01a0 1A70     		strb	r2, [r3]
 232:main.c        ****                     directionState = Forward;
 1029              		.loc 1 232 0
 1030 01a2 0023     		movs	r3, #0
 1031 01a4 7B60     		str	r3, [r7, #4]
 233:main.c        ****                     currentRow++;
 1032              		.loc 1 233 0
 1033 01a6 454B     		ldr	r3, .L75+8
 1034 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 01aa 0133     		adds	r3, r3, #1
 1036 01ac DAB2     		uxtb	r2, r3
 1037 01ae 434B     		ldr	r3, .L75+8
 1038 01b0 1A70     		strb	r2, [r3]
 1039 01b2 50E0     		b	.L54
 1040              	.L53:
 234:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] 
 1041              		.loc 1 234 0
 1042 01b4 414B     		ldr	r3, .L75+8
 1043 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 01b8 1A46     		mov	r2, r3
 1045 01ba 414B     		ldr	r3, .L75+12
 1046 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 01be 591E     		subs	r1, r3, #1
 1048 01c0 4048     		ldr	r0, .L75+16
 1049 01c2 1346     		mov	r3, r2
 1050 01c4 DB00     		lsls	r3, r3, #3
 1051 01c6 1344     		add	r3, r3, r2
 1052 01c8 5B00     		lsls	r3, r3, #1
 1053 01ca 1344     		add	r3, r3, r2
 1054 01cc 0B44     		add	r3, r3, r1
 1055 01ce 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1056 01d2 082B     		cmp	r3, #8
 1057 01d4 10D0     		beq	.L55
 1058              		.loc 1 234 0 is_stmt 0 discriminator 1
 1059 01d6 394B     		ldr	r3, .L75+8
 1060 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 01da 1A46     		mov	r2, r3
 1062 01dc 384B     		ldr	r3, .L75+12
 1063 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 24


 1064 01e0 591E     		subs	r1, r3, #1
 1065 01e2 3848     		ldr	r0, .L75+16
 1066 01e4 1346     		mov	r3, r2
 1067 01e6 DB00     		lsls	r3, r3, #3
 1068 01e8 1344     		add	r3, r3, r2
 1069 01ea 5B00     		lsls	r3, r3, #1
 1070 01ec 1344     		add	r3, r3, r2
 1071 01ee 0B44     		add	r3, r3, r1
 1072 01f0 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1073 01f4 092B     		cmp	r3, #9
 1074 01f6 05D1     		bne	.L56
 1075              	.L55:
 235:main.c        ****                     currentOrientation = Left;
 1076              		.loc 1 235 0 is_stmt 1
 1077 01f8 2E4B     		ldr	r3, .L75
 1078 01fa 0222     		movs	r2, #2
 1079 01fc 1A70     		strb	r2, [r3]
 236:main.c        ****                     directionState = waitForRightTurn;
 1080              		.loc 1 236 0
 1081 01fe 0823     		movs	r3, #8
 1082 0200 7B60     		str	r3, [r7, #4]
 1083 0202 28E0     		b	.L54
 1084              	.L56:
 237:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] 
 1085              		.loc 1 237 0
 1086 0204 2D4B     		ldr	r3, .L75+8
 1087 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1088 0208 1A46     		mov	r2, r3
 1089 020a 2D4B     		ldr	r3, .L75+12
 1090 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1091 020e 591C     		adds	r1, r3, #1
 1092 0210 2C48     		ldr	r0, .L75+16
 1093 0212 1346     		mov	r3, r2
 1094 0214 DB00     		lsls	r3, r3, #3
 1095 0216 1344     		add	r3, r3, r2
 1096 0218 5B00     		lsls	r3, r3, #1
 1097 021a 1344     		add	r3, r3, r2
 1098 021c 0B44     		add	r3, r3, r1
 1099 021e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1100 0222 082B     		cmp	r3, #8
 1101 0224 11D0     		beq	.L57
 1102              		.loc 1 237 0 is_stmt 0 discriminator 1
 1103 0226 254B     		ldr	r3, .L75+8
 1104 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 022a 1A46     		mov	r2, r3
 1106 022c 244B     		ldr	r3, .L75+12
 1107 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 0230 591C     		adds	r1, r3, #1
 1109 0232 2448     		ldr	r0, .L75+16
 1110 0234 1346     		mov	r3, r2
 1111 0236 DB00     		lsls	r3, r3, #3
 1112 0238 1344     		add	r3, r3, r2
 1113 023a 5B00     		lsls	r3, r3, #1
 1114 023c 1344     		add	r3, r3, r2
 1115 023e 0B44     		add	r3, r3, r1
 1116 0240 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1117 0244 092B     		cmp	r3, #9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 25


 1118 0246 40F01481 		bne	.L72
 1119              	.L57:
 238:main.c        ****                     currentOrientation = Right;
 1120              		.loc 1 238 0 is_stmt 1
 1121 024a 1A4B     		ldr	r3, .L75
 1122 024c 0322     		movs	r2, #3
 1123 024e 1A70     		strb	r2, [r3]
 239:main.c        ****                     directionState = waitForLeftTurn;
 1124              		.loc 1 239 0
 1125 0250 0923     		movs	r3, #9
 1126 0252 7B60     		str	r3, [r7, #4]
 240:main.c        ****                 }
 241:main.c        ****                 break;
 1127              		.loc 1 241 0
 1128 0254 0DE1     		b	.L72
 1129              	.L54:
 1130 0256 0CE1     		b	.L72
 1131              	.L43:
 242:main.c        ****             case Left:
 243:main.c        ****                 if(map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 1132              		.loc 1 243 0
 1133 0258 184B     		ldr	r3, .L75+8
 1134 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 025c 1A46     		mov	r2, r3
 1136 025e 184B     		ldr	r3, .L75+12
 1137 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 0262 591E     		subs	r1, r3, #1
 1139 0264 1748     		ldr	r0, .L75+16
 1140 0266 1346     		mov	r3, r2
 1141 0268 DB00     		lsls	r3, r3, #3
 1142 026a 1344     		add	r3, r3, r2
 1143 026c 5B00     		lsls	r3, r3, #1
 1144 026e 1344     		add	r3, r3, r2
 1145 0270 0B44     		add	r3, r3, r1
 1146 0272 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1147 0276 082B     		cmp	r3, #8
 1148 0278 10D0     		beq	.L58
 1149              		.loc 1 243 0 is_stmt 0 discriminator 1
 1150 027a 104B     		ldr	r3, .L75+8
 1151 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 027e 1A46     		mov	r2, r3
 1153 0280 0F4B     		ldr	r3, .L75+12
 1154 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 0284 591E     		subs	r1, r3, #1
 1156 0286 0F48     		ldr	r0, .L75+16
 1157 0288 1346     		mov	r3, r2
 1158 028a DB00     		lsls	r3, r3, #3
 1159 028c 1344     		add	r3, r3, r2
 1160 028e 5B00     		lsls	r3, r3, #1
 1161 0290 1344     		add	r3, r3, r2
 1162 0292 0B44     		add	r3, r3, r1
 1163 0294 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1164 0298 092B     		cmp	r3, #9
 1165 029a 15D1     		bne	.L59
 1166              	.L58:
 244:main.c        ****                     currentOrientation = Left;
 1167              		.loc 1 244 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 26


 1168 029c 054B     		ldr	r3, .L75
 1169 029e 0222     		movs	r2, #2
 1170 02a0 1A70     		strb	r2, [r3]
 245:main.c        ****                     directionState = Forward;
 1171              		.loc 1 245 0
 1172 02a2 0023     		movs	r3, #0
 1173 02a4 7B60     		str	r3, [r7, #4]
 246:main.c        ****                     currentCol--; // update position
 1174              		.loc 1 246 0
 1175 02a6 064B     		ldr	r3, .L75+12
 1176 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 02aa 013B     		subs	r3, r3, #1
 1178 02ac DAB2     		uxtb	r2, r3
 1179 02ae 044B     		ldr	r3, .L75+12
 1180 02b0 1A70     		strb	r2, [r3]
 1181 02b2 5AE0     		b	.L60
 1182              	.L76:
 1183              		.align	2
 1184              	.L75:
 1185 02b4 00000000 		.word	currentOrientation
 1186 02b8 00000000 		.word	previousOrientation
 1187 02bc 00000000 		.word	currentRow
 1188 02c0 00000000 		.word	currentCol
 1189 02c4 00000000 		.word	map
 1190              	.L59:
 247:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1191              		.loc 1 247 0
 1192 02c8 6F4B     		ldr	r3, .L77
 1193 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1194 02cc 5A1E     		subs	r2, r3, #1
 1195 02ce 6F4B     		ldr	r3, .L77+4
 1196 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1197 02d2 1846     		mov	r0, r3
 1198 02d4 6E49     		ldr	r1, .L77+8
 1199 02d6 1346     		mov	r3, r2
 1200 02d8 DB00     		lsls	r3, r3, #3
 1201 02da 1344     		add	r3, r3, r2
 1202 02dc 5B00     		lsls	r3, r3, #1
 1203 02de 1344     		add	r3, r3, r2
 1204 02e0 0344     		add	r3, r3, r0
 1205 02e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1206 02e6 082B     		cmp	r3, #8
 1207 02e8 10D0     		beq	.L61
 1208              		.loc 1 247 0 is_stmt 0 discriminator 1
 1209 02ea 674B     		ldr	r3, .L77
 1210 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 02ee 5A1E     		subs	r2, r3, #1
 1212 02f0 664B     		ldr	r3, .L77+4
 1213 02f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 02f4 1846     		mov	r0, r3
 1215 02f6 6649     		ldr	r1, .L77+8
 1216 02f8 1346     		mov	r3, r2
 1217 02fa DB00     		lsls	r3, r3, #3
 1218 02fc 1344     		add	r3, r3, r2
 1219 02fe 5B00     		lsls	r3, r3, #1
 1220 0300 1344     		add	r3, r3, r2
 1221 0302 0344     		add	r3, r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 27


 1222 0304 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1223 0308 092B     		cmp	r3, #9
 1224 030a 05D1     		bne	.L62
 1225              	.L61:
 248:main.c        ****                     currentOrientation = Up;
 1226              		.loc 1 248 0 is_stmt 1
 1227 030c 614B     		ldr	r3, .L77+12
 1228 030e 0022     		movs	r2, #0
 1229 0310 1A70     		strb	r2, [r3]
 249:main.c        ****                     directionState = waitForRightTurn;
 1230              		.loc 1 249 0
 1231 0312 0823     		movs	r3, #8
 1232 0314 7B60     		str	r3, [r7, #4]
 1233 0316 28E0     		b	.L60
 1234              	.L62:
 250:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1235              		.loc 1 250 0
 1236 0318 5B4B     		ldr	r3, .L77
 1237 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 031c 5A1C     		adds	r2, r3, #1
 1239 031e 5B4B     		ldr	r3, .L77+4
 1240 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1241 0322 1846     		mov	r0, r3
 1242 0324 5A49     		ldr	r1, .L77+8
 1243 0326 1346     		mov	r3, r2
 1244 0328 DB00     		lsls	r3, r3, #3
 1245 032a 1344     		add	r3, r3, r2
 1246 032c 5B00     		lsls	r3, r3, #1
 1247 032e 1344     		add	r3, r3, r2
 1248 0330 0344     		add	r3, r3, r0
 1249 0332 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1250 0336 082B     		cmp	r3, #8
 1251 0338 11D0     		beq	.L63
 1252              		.loc 1 250 0 is_stmt 0 discriminator 1
 1253 033a 534B     		ldr	r3, .L77
 1254 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1255 033e 5A1C     		adds	r2, r3, #1
 1256 0340 524B     		ldr	r3, .L77+4
 1257 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258 0344 1846     		mov	r0, r3
 1259 0346 5249     		ldr	r1, .L77+8
 1260 0348 1346     		mov	r3, r2
 1261 034a DB00     		lsls	r3, r3, #3
 1262 034c 1344     		add	r3, r3, r2
 1263 034e 5B00     		lsls	r3, r3, #1
 1264 0350 1344     		add	r3, r3, r2
 1265 0352 0344     		add	r3, r3, r0
 1266 0354 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1267 0358 092B     		cmp	r3, #9
 1268 035a 40F08C80 		bne	.L73
 1269              	.L63:
 251:main.c        ****                     currentOrientation = Down;
 1270              		.loc 1 251 0 is_stmt 1
 1271 035e 4D4B     		ldr	r3, .L77+12
 1272 0360 0122     		movs	r2, #1
 1273 0362 1A70     		strb	r2, [r3]
 252:main.c        ****                     directionState = waitForLeftTurn;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 28


 1274              		.loc 1 252 0
 1275 0364 0923     		movs	r3, #9
 1276 0366 7B60     		str	r3, [r7, #4]
 253:main.c        ****                 }
 254:main.c        ****                 break;
 1277              		.loc 1 254 0
 1278 0368 85E0     		b	.L73
 1279              	.L60:
 1280 036a 84E0     		b	.L73
 1281              	.L44:
 255:main.c        ****             case Right:
 256:main.c        ****                 if(map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 1282              		.loc 1 256 0
 1283 036c 464B     		ldr	r3, .L77
 1284 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1285 0370 1A46     		mov	r2, r3
 1286 0372 464B     		ldr	r3, .L77+4
 1287 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1288 0376 591C     		adds	r1, r3, #1
 1289 0378 4548     		ldr	r0, .L77+8
 1290 037a 1346     		mov	r3, r2
 1291 037c DB00     		lsls	r3, r3, #3
 1292 037e 1344     		add	r3, r3, r2
 1293 0380 5B00     		lsls	r3, r3, #1
 1294 0382 1344     		add	r3, r3, r2
 1295 0384 0B44     		add	r3, r3, r1
 1296 0386 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1297 038a 082B     		cmp	r3, #8
 1298 038c 10D0     		beq	.L64
 1299              		.loc 1 256 0 is_stmt 0 discriminator 1
 1300 038e 3E4B     		ldr	r3, .L77
 1301 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1302 0392 1A46     		mov	r2, r3
 1303 0394 3D4B     		ldr	r3, .L77+4
 1304 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1305 0398 591C     		adds	r1, r3, #1
 1306 039a 3D48     		ldr	r0, .L77+8
 1307 039c 1346     		mov	r3, r2
 1308 039e DB00     		lsls	r3, r3, #3
 1309 03a0 1344     		add	r3, r3, r2
 1310 03a2 5B00     		lsls	r3, r3, #1
 1311 03a4 1344     		add	r3, r3, r2
 1312 03a6 0B44     		add	r3, r3, r1
 1313 03a8 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1314 03ac 092B     		cmp	r3, #9
 1315 03ae 0BD1     		bne	.L65
 1316              	.L64:
 257:main.c        ****                     currentOrientation = Right;
 1317              		.loc 1 257 0 is_stmt 1
 1318 03b0 384B     		ldr	r3, .L77+12
 1319 03b2 0322     		movs	r2, #3
 1320 03b4 1A70     		strb	r2, [r3]
 258:main.c        ****                     directionState = Forward;
 1321              		.loc 1 258 0
 1322 03b6 0023     		movs	r3, #0
 1323 03b8 7B60     		str	r3, [r7, #4]
 259:main.c        ****                     currentCol++; // update position
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 29


 1324              		.loc 1 259 0
 1325 03ba 344B     		ldr	r3, .L77+4
 1326 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 03be 0133     		adds	r3, r3, #1
 1328 03c0 DAB2     		uxtb	r2, r3
 1329 03c2 324B     		ldr	r3, .L77+4
 1330 03c4 1A70     		strb	r2, [r3]
 1331 03c6 4FE0     		b	.L66
 1332              	.L65:
 260:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] 
 1333              		.loc 1 260 0
 1334 03c8 2F4B     		ldr	r3, .L77
 1335 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 03cc 5A1E     		subs	r2, r3, #1
 1337 03ce 2F4B     		ldr	r3, .L77+4
 1338 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 03d2 1846     		mov	r0, r3
 1340 03d4 2E49     		ldr	r1, .L77+8
 1341 03d6 1346     		mov	r3, r2
 1342 03d8 DB00     		lsls	r3, r3, #3
 1343 03da 1344     		add	r3, r3, r2
 1344 03dc 5B00     		lsls	r3, r3, #1
 1345 03de 1344     		add	r3, r3, r2
 1346 03e0 0344     		add	r3, r3, r0
 1347 03e2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1348 03e6 082B     		cmp	r3, #8
 1349 03e8 10D0     		beq	.L67
 1350              		.loc 1 260 0 is_stmt 0 discriminator 1
 1351 03ea 274B     		ldr	r3, .L77
 1352 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 03ee 5A1E     		subs	r2, r3, #1
 1354 03f0 264B     		ldr	r3, .L77+4
 1355 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1356 03f4 1846     		mov	r0, r3
 1357 03f6 2649     		ldr	r1, .L77+8
 1358 03f8 1346     		mov	r3, r2
 1359 03fa DB00     		lsls	r3, r3, #3
 1360 03fc 1344     		add	r3, r3, r2
 1361 03fe 5B00     		lsls	r3, r3, #1
 1362 0400 1344     		add	r3, r3, r2
 1363 0402 0344     		add	r3, r3, r0
 1364 0404 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1365 0408 092B     		cmp	r3, #9
 1366 040a 05D1     		bne	.L68
 1367              	.L67:
 261:main.c        ****                     currentOrientation = Up;
 1368              		.loc 1 261 0 is_stmt 1
 1369 040c 214B     		ldr	r3, .L77+12
 1370 040e 0022     		movs	r2, #0
 1371 0410 1A70     		strb	r2, [r3]
 262:main.c        ****                     directionState = waitForLeftTurn;
 1372              		.loc 1 262 0
 1373 0412 0923     		movs	r3, #9
 1374 0414 7B60     		str	r3, [r7, #4]
 1375 0416 27E0     		b	.L66
 1376              	.L68:
 263:main.c        ****                     //currentCol++; // update position
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 30


 264:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] 
 1377              		.loc 1 264 0
 1378 0418 1B4B     		ldr	r3, .L77
 1379 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 041c 5A1C     		adds	r2, r3, #1
 1381 041e 1B4B     		ldr	r3, .L77+4
 1382 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 0422 1846     		mov	r0, r3
 1384 0424 1A49     		ldr	r1, .L77+8
 1385 0426 1346     		mov	r3, r2
 1386 0428 DB00     		lsls	r3, r3, #3
 1387 042a 1344     		add	r3, r3, r2
 1388 042c 5B00     		lsls	r3, r3, #1
 1389 042e 1344     		add	r3, r3, r2
 1390 0430 0344     		add	r3, r3, r0
 1391 0432 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1392 0436 082B     		cmp	r3, #8
 1393 0438 10D0     		beq	.L69
 1394              		.loc 1 264 0 is_stmt 0 discriminator 1
 1395 043a 134B     		ldr	r3, .L77
 1396 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 043e 5A1C     		adds	r2, r3, #1
 1398 0440 124B     		ldr	r3, .L77+4
 1399 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1400 0444 1846     		mov	r0, r3
 1401 0446 1249     		ldr	r1, .L77+8
 1402 0448 1346     		mov	r3, r2
 1403 044a DB00     		lsls	r3, r3, #3
 1404 044c 1344     		add	r3, r3, r2
 1405 044e 5B00     		lsls	r3, r3, #1
 1406 0450 1344     		add	r3, r3, r2
 1407 0452 0344     		add	r3, r3, r0
 1408 0454 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1409 0458 092B     		cmp	r3, #9
 1410 045a 0ED1     		bne	.L74
 1411              	.L69:
 265:main.c        ****                     currentOrientation = Down;
 1412              		.loc 1 265 0 is_stmt 1
 1413 045c 0D4B     		ldr	r3, .L77+12
 1414 045e 0122     		movs	r2, #1
 1415 0460 1A70     		strb	r2, [r3]
 266:main.c        ****                     directionState = waitForRightTurn;
 1416              		.loc 1 266 0
 1417 0462 0823     		movs	r3, #8
 1418 0464 7B60     		str	r3, [r7, #4]
 267:main.c        ****                     //currentCol--; // update position
 268:main.c        ****                 }
 269:main.c        ****                 break;
 1419              		.loc 1 269 0
 1420 0466 08E0     		b	.L74
 1421              	.L66:
 1422 0468 07E0     		b	.L74
 1423              	.L70:
 270:main.c        ****             default:
 271:main.c        ****                 break;
 1424              		.loc 1 271 0
 1425 046a 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 31


 1426 046c 06E0     		b	.L51
 1427              	.L71:
 228:main.c        ****             case Down:
 1428              		.loc 1 228 0
 1429 046e 00BF     		nop
 1430 0470 04E0     		b	.L51
 1431              	.L72:
 241:main.c        ****             case Left:
 1432              		.loc 1 241 0
 1433 0472 00BF     		nop
 1434 0474 02E0     		b	.L51
 1435              	.L73:
 254:main.c        ****             case Right:
 1436              		.loc 1 254 0
 1437 0476 00BF     		nop
 1438 0478 00E0     		b	.L51
 1439              	.L74:
 269:main.c        ****             default:
 1440              		.loc 1 269 0
 1441 047a 00BF     		nop
 1442              	.L51:
 272:main.c        ****         }
 273:main.c        ****     
 274:main.c        ****     return directionState;
 1443              		.loc 1 274 0
 1444 047c 7B68     		ldr	r3, [r7, #4]
 1445              	.L38:
 275:main.c        **** }
 1446              		.loc 1 275 0
 1447 047e 1846     		mov	r0, r3
 1448 0480 0C37     		adds	r7, r7, #12
 1449              		.cfi_def_cfa_offset 4
 1450 0482 BD46     		mov	sp, r7
 1451              		.cfi_def_cfa_register 13
 1452              		@ sp needed
 1453 0484 80BC     		pop	{r7}
 1454              		.cfi_restore 7
 1455              		.cfi_def_cfa_offset 0
 1456 0486 7047     		bx	lr
 1457              	.L78:
 1458              		.align	2
 1459              	.L77:
 1460 0488 00000000 		.word	currentRow
 1461 048c 00000000 		.word	currentCol
 1462 0490 00000000 		.word	map
 1463 0494 00000000 		.word	currentOrientation
 1464              		.cfi_endproc
 1465              	.LFE73:
 1466              		.size	GetNextStep, .-GetNextStep
 1467              		.global	stoppedAfterTurn
 1468              		.bss
 1469              		.type	stoppedAfterTurn, %object
 1470              		.size	stoppedAfterTurn, 1
 1471              	stoppedAfterTurn:
 1472 002c 00       		.space	1
 1473              		.global	ignoreSensor
 1474              		.type	ignoreSensor, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 32


 1475              		.size	ignoreSensor, 1
 1476              	ignoreSensor:
 1477 002d 00       		.space	1
 1478              		.global	__aeabi_fcmpge
 1479              		.section	.text.CheckSensorDirection,"ax",%progbits
 1480              		.align	2
 1481              		.global	CheckSensorDirection
 1482              		.thumb
 1483              		.thumb_func
 1484              		.type	CheckSensorDirection, %function
 1485              	CheckSensorDirection:
 1486              	.LFB74:
 276:main.c        **** 
 277:main.c        **** uint8 stoppedAfterTurn = 0;
 278:main.c        **** uint8 ignoreSensor = 0;
 279:main.c        **** 
 280:main.c        **** enum DirectionState CheckSensorDirection() {
 1487              		.loc 1 280 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491 0000 80B5     		push	{r7, lr}
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 7, -8
 1494              		.cfi_offset 14, -4
 1495 0002 82B0     		sub	sp, sp, #8
 1496              		.cfi_def_cfa_offset 16
 1497 0004 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
 281:main.c        ****     float blocksize;
 282:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1499              		.loc 1 282 0
 1500 0006 8C4B     		ldr	r3, .L111
 1501 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 000a 002B     		cmp	r3, #0
 1503 000c 03D0     		beq	.L80
 1504              		.loc 1 282 0 is_stmt 0 discriminator 1
 1505 000e 8A4B     		ldr	r3, .L111
 1506 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 0012 012B     		cmp	r3, #1
 1508 0014 03D1     		bne	.L81
 1509              	.L80:
 283:main.c        ****         blocksize = yBlocksize;
 1510              		.loc 1 283 0 is_stmt 1
 1511 0016 894B     		ldr	r3, .L111+4
 1512 0018 1B68     		ldr	r3, [r3]	@ float
 1513 001a 7B60     		str	r3, [r7, #4]	@ float
 1514 001c 02E0     		b	.L82
 1515              	.L81:
 284:main.c        ****     } else {
 285:main.c        ****         blocksize = xBlocksize;
 1516              		.loc 1 285 0
 1517 001e 884B     		ldr	r3, .L111+8
 1518 0020 1B68     		ldr	r3, [r3]	@ float
 1519 0022 7B60     		str	r3, [r7, #4]	@ float
 1520              	.L82:
 286:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 33


 287:main.c        ****     enum DirectionState directionState = Stop; // initialise state as stop
 1521              		.loc 1 287 0
 1522 0024 0523     		movs	r3, #5
 1523 0026 3B60     		str	r3, [r7]
 288:main.c        ****     
 289:main.c        ****     // GET NEXT STEP * ========================================
 290:main.c        ****     // intersection/ turn check
 291:main.c        ****     if((previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1524              		.loc 1 291 0
 1525 0028 864B     		ldr	r3, .L111+12
 1526 002a 1B68     		ldr	r3, [r3]
 1527 002c 002B     		cmp	r3, #0
 1528 002e 07D0     		beq	.L83
 1529              		.loc 1 291 0 is_stmt 0 discriminator 2
 1530 0030 844B     		ldr	r3, .L111+12
 1531 0032 1B68     		ldr	r3, [r3]
 1532 0034 032B     		cmp	r3, #3
 1533 0036 03D0     		beq	.L83
 1534              		.loc 1 291 0 discriminator 4
 1535 0038 824B     		ldr	r3, .L111+12
 1536 003a 1B68     		ldr	r3, [r3]
 1537 003c 042B     		cmp	r3, #4
 1538 003e 27D1     		bne	.L84
 1539              	.L83:
 1540              		.loc 1 291 0 discriminator 5
 1541 0040 814B     		ldr	r3, .L111+16
 1542 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1543 0044 002B     		cmp	r3, #0
 1544 0046 23D1     		bne	.L84
 1545              		.loc 1 291 0 discriminator 6
 1546 0048 804B     		ldr	r3, .L111+20
 1547 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 004c 002B     		cmp	r3, #0
 1549 004e 1FD1     		bne	.L84
 292:main.c        ****         && (previousDirection != ForwardAfterTurn && previousDirection != waitForLeftTurn && previo
 1550              		.loc 1 292 0 is_stmt 1
 1551 0050 7C4B     		ldr	r3, .L111+12
 1552 0052 1B68     		ldr	r3, [r3]
 1553 0054 0A2B     		cmp	r3, #10
 1554 0056 1BD0     		beq	.L84
 1555              		.loc 1 292 0 is_stmt 0 discriminator 1
 1556 0058 7A4B     		ldr	r3, .L111+12
 1557 005a 1B68     		ldr	r3, [r3]
 1558 005c 092B     		cmp	r3, #9
 1559 005e 17D0     		beq	.L84
 1560              		.loc 1 292 0 discriminator 2
 1561 0060 784B     		ldr	r3, .L111+12
 1562 0062 1B68     		ldr	r3, [r3]
 1563 0064 082B     		cmp	r3, #8
 1564 0066 13D0     		beq	.L84
 293:main.c        ****             previousDirection != TurnLeft && previousDirection != TurnRight)) {
 1565              		.loc 1 293 0 is_stmt 1 discriminator 3
 1566 0068 764B     		ldr	r3, .L111+12
 1567 006a 1B68     		ldr	r3, [r3]
 292:main.c        ****         && (previousDirection != ForwardAfterTurn && previousDirection != waitForLeftTurn && previo
 1568              		.loc 1 292 0 discriminator 3
 1569 006c 022B     		cmp	r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 34


 1570 006e 0FD0     		beq	.L84
 1571              		.loc 1 293 0
 1572 0070 744B     		ldr	r3, .L111+12
 1573 0072 1B68     		ldr	r3, [r3]
 1574 0074 012B     		cmp	r3, #1
 1575 0076 0BD0     		beq	.L84
 294:main.c        **** 
 295:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1576              		.loc 1 295 0
 1577 0078 FFF7FEFF 		bl	GetNextStep
 1578 007c 3860     		str	r0, [r7]
 296:main.c        ****         totalDistance = 0; // reset distance
 1579              		.loc 1 296 0
 1580 007e 744B     		ldr	r3, .L111+24
 1581 0080 4FF00002 		mov	r2, #0
 1582 0084 1A60     		str	r2, [r3]	@ float
 297:main.c        ****         previousDirection = directionState;
 1583              		.loc 1 297 0
 1584 0086 6F4A     		ldr	r2, .L111+12
 1585 0088 3B68     		ldr	r3, [r7]
 1586 008a 1360     		str	r3, [r2]
 298:main.c        ****         return directionState;
 1587              		.loc 1 298 0
 1588 008c 3B68     		ldr	r3, [r7]
 1589 008e 33E1     		b	.L85
 1590              	.L84:
 299:main.c        ****     }
 300:main.c        ****     if (stoppedAfterTurn == 1) {
 1591              		.loc 1 300 0
 1592 0090 704B     		ldr	r3, .L111+28
 1593 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 0094 012B     		cmp	r3, #1
 1595 0096 19D1     		bne	.L86
 301:main.c        ****         if (stopBuffer <= 50) {
 1596              		.loc 1 301 0
 1597 0098 6F4B     		ldr	r3, .L111+32
 1598 009a 1B68     		ldr	r3, [r3]
 1599 009c 322B     		cmp	r3, #50
 1600 009e 06D8     		bhi	.L87
 302:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1601              		.loc 1 302 0
 1602 00a0 0523     		movs	r3, #5
 1603 00a2 3B60     		str	r3, [r7]
 303:main.c        ****             previousDirection = directionState;
 1604              		.loc 1 303 0
 1605 00a4 674A     		ldr	r2, .L111+12
 1606 00a6 3B68     		ldr	r3, [r7]
 1607 00a8 1360     		str	r3, [r2]
 304:main.c        ****             return directionState;
 1608              		.loc 1 304 0
 1609 00aa 3B68     		ldr	r3, [r7]
 1610 00ac 24E1     		b	.L85
 1611              	.L87:
 305:main.c        ****         }
 306:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1612              		.loc 1 306 0
 1613 00ae FFF7FEFF 		bl	GetNextStep
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 35


 1614 00b2 3860     		str	r0, [r7]
 307:main.c        ****         totalDistance = 0; // reset distance
 1615              		.loc 1 307 0
 1616 00b4 664B     		ldr	r3, .L111+24
 1617 00b6 4FF00002 		mov	r2, #0
 1618 00ba 1A60     		str	r2, [r3]	@ float
 308:main.c        ****         previousDirection = directionState;
 1619              		.loc 1 308 0
 1620 00bc 614A     		ldr	r2, .L111+12
 1621 00be 3B68     		ldr	r3, [r7]
 1622 00c0 1360     		str	r3, [r2]
 309:main.c        ****         stoppedAfterTurn = 0;
 1623              		.loc 1 309 0
 1624 00c2 644B     		ldr	r3, .L111+28
 1625 00c4 0022     		movs	r2, #0
 1626 00c6 1A70     		strb	r2, [r3]
 310:main.c        ****         return directionState;
 1627              		.loc 1 310 0
 1628 00c8 3B68     		ldr	r3, [r7]
 1629 00ca 15E1     		b	.L85
 1630              	.L86:
 311:main.c        ****     }
 312:main.c        ****     if (totalDistance >= blocksize) {
 1631              		.loc 1 312 0
 1632 00cc 604B     		ldr	r3, .L111+24
 1633 00ce 1B68     		ldr	r3, [r3]	@ float
 1634 00d0 7968     		ldr	r1, [r7, #4]	@ float
 1635 00d2 1846     		mov	r0, r3
 1636 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1637 00d8 0346     		mov	r3, r0
 1638 00da 002B     		cmp	r3, #0
 1639 00dc 0BD0     		beq	.L110
 313:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1640              		.loc 1 313 0
 1641 00de FFF7FEFF 		bl	GetNextStep
 1642 00e2 3860     		str	r0, [r7]
 314:main.c        ****         totalDistance = 0; // reset distance
 1643              		.loc 1 314 0
 1644 00e4 5A4B     		ldr	r3, .L111+24
 1645 00e6 4FF00002 		mov	r2, #0
 1646 00ea 1A60     		str	r2, [r3]	@ float
 315:main.c        ****         previousDirection = directionState;
 1647              		.loc 1 315 0
 1648 00ec 554A     		ldr	r2, .L111+12
 1649 00ee 3B68     		ldr	r3, [r7]
 1650 00f0 1360     		str	r3, [r2]
 316:main.c        ****         return directionState;
 1651              		.loc 1 316 0
 1652 00f2 3B68     		ldr	r3, [r7]
 1653 00f4 00E1     		b	.L85
 1654              	.L110:
 317:main.c        ****     }
 318:main.c        ****     
 319:main.c        ****     // STOP BUFFER * ========================================
 320:main.c        ****     if (previousDirection == Stop) {
 1655              		.loc 1 320 0
 1656 00f6 534B     		ldr	r3, .L111+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 36


 1657 00f8 1B68     		ldr	r3, [r3]
 1658 00fa 052B     		cmp	r3, #5
 1659 00fc 0AD1     		bne	.L90
 321:main.c        ****         if (stopBuffer <= 50) {
 1660              		.loc 1 321 0
 1661 00fe 564B     		ldr	r3, .L111+32
 1662 0100 1B68     		ldr	r3, [r3]
 1663 0102 322B     		cmp	r3, #50
 1664 0104 04D8     		bhi	.L91
 322:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1665              		.loc 1 322 0
 1666 0106 0523     		movs	r3, #5
 1667 0108 3B60     		str	r3, [r7]
 323:main.c        ****             previousDirection = directionState;
 1668              		.loc 1 323 0
 1669 010a 4E4A     		ldr	r2, .L111+12
 1670 010c 3B68     		ldr	r3, [r7]
 1671 010e 1360     		str	r3, [r2]
 1672              	.L91:
 324:main.c        ****         } else {
 325:main.c        ****             //directionState = ForwardAfterTurn;
 326:main.c        ****         }
 327:main.c        ****         return directionState;
 1673              		.loc 1 327 0
 1674 0110 3B68     		ldr	r3, [r7]
 1675 0112 F1E0     		b	.L85
 1676              	.L90:
 328:main.c        ****     }
 329:main.c        **** 
 330:main.c        ****     // TURNING * ========================================    
 331:main.c        ****     if (previousDirection == ForwardAfterTurn) {
 1677              		.loc 1 331 0
 1678 0114 4B4B     		ldr	r3, .L111+12
 1679 0116 1B68     		ldr	r3, [r3]
 1680 0118 0A2B     		cmp	r3, #10
 1681 011a 0ED1     		bne	.L92
 332:main.c        **** 
 333:main.c        ****         if (s3 || s4) {
 1682              		.loc 1 333 0
 1683 011c 4A4B     		ldr	r3, .L111+16
 1684 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1685 0120 002B     		cmp	r3, #0
 1686 0122 03D1     		bne	.L93
 1687              		.loc 1 333 0 is_stmt 0 discriminator 1
 1688 0124 494B     		ldr	r3, .L111+20
 1689 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1690 0128 002B     		cmp	r3, #0
 1691 012a 06D0     		beq	.L92
 1692              	.L93:
 334:main.c        ****             //ignoreSensor = 0;
 335:main.c        ****             //usbPutString("Forward\n");
 336:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 1693              		.loc 1 336 0 is_stmt 1
 1694 012c 0023     		movs	r3, #0
 1695 012e 3B60     		str	r3, [r7]
 337:main.c        ****             previousDirection = directionState;
 1696              		.loc 1 337 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 37


 1697 0130 444A     		ldr	r2, .L111+12
 1698 0132 3B68     		ldr	r3, [r7]
 1699 0134 1360     		str	r3, [r2]
 338:main.c        ****             return directionState;
 1700              		.loc 1 338 0
 1701 0136 3B68     		ldr	r3, [r7]
 1702 0138 DEE0     		b	.L85
 1703              	.L92:
 339:main.c        ****         }
 340:main.c        ****     }
 341:main.c        **** 
 342:main.c        ****     if(previousDirection == waitForRightTurn) {
 1704              		.loc 1 342 0
 1705 013a 424B     		ldr	r3, .L111+12
 1706 013c 1B68     		ldr	r3, [r3]
 1707 013e 082B     		cmp	r3, #8
 1708 0140 11D1     		bne	.L94
 343:main.c        ****         //ignoreSensor = 0;
 344:main.c        ****         if(!s4) {
 1709              		.loc 1 344 0
 1710 0142 424B     		ldr	r3, .L111+20
 1711 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 0146 002B     		cmp	r3, #0
 1713 0148 06D1     		bne	.L95
 345:main.c        ****             //usbPutString("Turn Right\n");
 346:main.c        ****             directionState = TurnRight;
 1714              		.loc 1 346 0
 1715 014a 0123     		movs	r3, #1
 1716 014c 3B60     		str	r3, [r7]
 347:main.c        ****             previousDirection = directionState;
 1717              		.loc 1 347 0
 1718 014e 3D4A     		ldr	r2, .L111+12
 1719 0150 3B68     		ldr	r3, [r7]
 1720 0152 1360     		str	r3, [r2]
 348:main.c        ****             return directionState;
 1721              		.loc 1 348 0
 1722 0154 3B68     		ldr	r3, [r7]
 1723 0156 CFE0     		b	.L85
 1724              	.L95:
 349:main.c        ****         } else {
 350:main.c        ****             //usbPutString("Wait for Right Turn\n");
 351:main.c        ****             directionState = waitForRightTurn;
 1725              		.loc 1 351 0
 1726 0158 0823     		movs	r3, #8
 1727 015a 3B60     		str	r3, [r7]
 352:main.c        ****             previousDirection = directionState;
 1728              		.loc 1 352 0
 1729 015c 394A     		ldr	r2, .L111+12
 1730 015e 3B68     		ldr	r3, [r7]
 1731 0160 1360     		str	r3, [r2]
 353:main.c        ****             return directionState;
 1732              		.loc 1 353 0
 1733 0162 3B68     		ldr	r3, [r7]
 1734 0164 C8E0     		b	.L85
 1735              	.L94:
 354:main.c        ****         }
 355:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 38


 356:main.c        **** 
 357:main.c        ****     if(previousDirection == waitForLeftTurn) {
 1736              		.loc 1 357 0
 1737 0166 374B     		ldr	r3, .L111+12
 1738 0168 1B68     		ldr	r3, [r3]
 1739 016a 092B     		cmp	r3, #9
 1740 016c 11D1     		bne	.L96
 358:main.c        ****         //ignoreSensor = 0;
 359:main.c        ****         if(!s3) {
 1741              		.loc 1 359 0
 1742 016e 364B     		ldr	r3, .L111+16
 1743 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1744 0172 002B     		cmp	r3, #0
 1745 0174 06D1     		bne	.L97
 360:main.c        ****             //usbPutString("Turn Left\n");
 361:main.c        ****             directionState = TurnLeft;
 1746              		.loc 1 361 0
 1747 0176 0223     		movs	r3, #2
 1748 0178 3B60     		str	r3, [r7]
 362:main.c        ****             previousDirection = directionState;
 1749              		.loc 1 362 0
 1750 017a 324A     		ldr	r2, .L111+12
 1751 017c 3B68     		ldr	r3, [r7]
 1752 017e 1360     		str	r3, [r2]
 363:main.c        ****             return directionState;
 1753              		.loc 1 363 0
 1754 0180 3B68     		ldr	r3, [r7]
 1755 0182 B9E0     		b	.L85
 1756              	.L97:
 364:main.c        ****         } else {
 365:main.c        ****             //usbPutString("Wait for Left Turn\n");
 366:main.c        ****             directionState = waitForLeftTurn;
 1757              		.loc 1 366 0
 1758 0184 0923     		movs	r3, #9
 1759 0186 3B60     		str	r3, [r7]
 367:main.c        ****             previousDirection = directionState;
 1760              		.loc 1 367 0
 1761 0188 2E4A     		ldr	r2, .L111+12
 1762 018a 3B68     		ldr	r3, [r7]
 1763 018c 1360     		str	r3, [r2]
 368:main.c        ****             return directionState;
 1764              		.loc 1 368 0
 1765 018e 3B68     		ldr	r3, [r7]
 1766 0190 B2E0     		b	.L85
 1767              	.L96:
 369:main.c        ****         }
 370:main.c        ****     }
 371:main.c        **** 
 372:main.c        ****     if(previousDirection == TurnRight) {
 1768              		.loc 1 372 0
 1769 0192 2C4B     		ldr	r3, .L111+12
 1770 0194 1B68     		ldr	r3, [r3]
 1771 0196 012B     		cmp	r3, #1
 1772 0198 24D1     		bne	.L98
 373:main.c        ****         if(s5 && s6) {
 1773              		.loc 1 373 0
 1774 019a 304B     		ldr	r3, .L111+36
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 39


 1775 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 019e 002B     		cmp	r3, #0
 1777 01a0 0AD0     		beq	.L99
 1778              		.loc 1 373 0 is_stmt 0 discriminator 1
 1779 01a2 2F4B     		ldr	r3, .L111+40
 1780 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1781 01a6 002B     		cmp	r3, #0
 1782 01a8 06D0     		beq	.L99
 374:main.c        ****             //usbPutString("Turn Right\n");
 375:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 1783              		.loc 1 375 0 is_stmt 1
 1784 01aa 0123     		movs	r3, #1
 1785 01ac 3B60     		str	r3, [r7]
 376:main.c        ****             previousDirection = directionState;
 1786              		.loc 1 376 0
 1787 01ae 254A     		ldr	r2, .L111+12
 1788 01b0 3B68     		ldr	r3, [r7]
 1789 01b2 1360     		str	r3, [r2]
 377:main.c        ****             return directionState;
 1790              		.loc 1 377 0
 1791 01b4 3B68     		ldr	r3, [r7]
 1792 01b6 9FE0     		b	.L85
 1793              	.L99:
 378:main.c        ****         } 
 379:main.c        ****         else if (!s5 || !s6) {
 1794              		.loc 1 379 0
 1795 01b8 284B     		ldr	r3, .L111+36
 1796 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 01bc 002B     		cmp	r3, #0
 1798 01be 03D0     		beq	.L100
 1799              		.loc 1 379 0 is_stmt 0 discriminator 1
 1800 01c0 274B     		ldr	r3, .L111+40
 1801 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1802 01c4 002B     		cmp	r3, #0
 1803 01c6 0DD1     		bne	.L98
 1804              	.L100:
 380:main.c        ****             //ignoreSensor = 1; // ignore turn check after turn completed
 381:main.c        ****             //usbPutString("Stop after Right Turn");
 382:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1805              		.loc 1 382 0 is_stmt 1
 1806 01c8 0523     		movs	r3, #5
 1807 01ca 3B60     		str	r3, [r7]
 383:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1808              		.loc 1 383 0
 1809 01cc 204B     		ldr	r3, .L111+24
 1810 01ce 4FF00002 		mov	r2, #0
 1811 01d2 1A60     		str	r2, [r3]	@ float
 384:main.c        ****             previousDirection = directionState;
 1812              		.loc 1 384 0
 1813 01d4 1B4A     		ldr	r2, .L111+12
 1814 01d6 3B68     		ldr	r3, [r7]
 1815 01d8 1360     		str	r3, [r2]
 385:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1816              		.loc 1 385 0
 1817 01da 1E4B     		ldr	r3, .L111+28
 1818 01dc 0122     		movs	r2, #1
 1819 01de 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 40


 386:main.c        ****             return directionState;
 1820              		.loc 1 386 0
 1821 01e0 3B68     		ldr	r3, [r7]
 1822 01e2 89E0     		b	.L85
 1823              	.L98:
 387:main.c        ****         }
 388:main.c        ****     }    
 389:main.c        **** 
 390:main.c        ****     if(previousDirection == TurnLeft) {
 1824              		.loc 1 390 0
 1825 01e4 174B     		ldr	r3, .L111+12
 1826 01e6 1B68     		ldr	r3, [r3]
 1827 01e8 022B     		cmp	r3, #2
 1828 01ea 3BD1     		bne	.L101
 391:main.c        ****         if(s5 && s6) {
 1829              		.loc 1 391 0
 1830 01ec 1B4B     		ldr	r3, .L111+36
 1831 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1832 01f0 002B     		cmp	r3, #0
 1833 01f2 0AD0     		beq	.L102
 1834              		.loc 1 391 0 is_stmt 0 discriminator 1
 1835 01f4 1A4B     		ldr	r3, .L111+40
 1836 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1837 01f8 002B     		cmp	r3, #0
 1838 01fa 06D0     		beq	.L102
 392:main.c        ****             //usbPutString("Turn Left\n");
 393:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 1839              		.loc 1 393 0 is_stmt 1
 1840 01fc 0223     		movs	r3, #2
 1841 01fe 3B60     		str	r3, [r7]
 394:main.c        ****             previousDirection = directionState;
 1842              		.loc 1 394 0
 1843 0200 104A     		ldr	r2, .L111+12
 1844 0202 3B68     		ldr	r3, [r7]
 1845 0204 1360     		str	r3, [r2]
 395:main.c        ****             return directionState;
 1846              		.loc 1 395 0
 1847 0206 3B68     		ldr	r3, [r7]
 1848 0208 76E0     		b	.L85
 1849              	.L102:
 396:main.c        ****         } 
 397:main.c        ****         else if (!s5 || !s6) {
 1850              		.loc 1 397 0
 1851 020a 144B     		ldr	r3, .L111+36
 1852 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1853 020e 002B     		cmp	r3, #0
 1854 0210 03D0     		beq	.L103
 1855              		.loc 1 397 0 is_stmt 0 discriminator 1
 1856 0212 134B     		ldr	r3, .L111+40
 1857 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 0216 002B     		cmp	r3, #0
 1859 0218 24D1     		bne	.L101
 1860              	.L103:
 398:main.c        ****             //ignoreSensor = 1; // ignore sensor after turn
 399:main.c        ****            // usbPutString("Stop after Left Turn\n");
 400:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 1861              		.loc 1 400 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 41


 1862 021a 0523     		movs	r3, #5
 1863 021c 3B60     		str	r3, [r7]
 401:main.c        ****             totalDistance = 0; // correct/ RESET totalDistance
 1864              		.loc 1 401 0
 1865 021e 0C4B     		ldr	r3, .L111+24
 1866 0220 4FF00002 		mov	r2, #0
 1867 0224 1A60     		str	r2, [r3]	@ float
 402:main.c        ****             previousDirection = directionState;
 1868              		.loc 1 402 0
 1869 0226 074A     		ldr	r2, .L111+12
 1870 0228 3B68     		ldr	r3, [r7]
 1871 022a 1360     		str	r3, [r2]
 403:main.c        ****             stoppedAfterTurn = 1; // set flag- differentiate from stop at targetLocation
 1872              		.loc 1 403 0
 1873 022c 094B     		ldr	r3, .L111+28
 1874 022e 0122     		movs	r2, #1
 1875 0230 1A70     		strb	r2, [r3]
 404:main.c        ****             return directionState;
 1876              		.loc 1 404 0
 1877 0232 3B68     		ldr	r3, [r7]
 1878 0234 60E0     		b	.L85
 1879              	.L112:
 1880 0236 00BF     		.align	2
 1881              	.L111:
 1882 0238 00000000 		.word	currentOrientation
 1883 023c 00000000 		.word	yBlocksize
 1884 0240 00000000 		.word	xBlocksize
 1885 0244 00000000 		.word	previousDirection
 1886 0248 00000000 		.word	s3
 1887 024c 00000000 		.word	s4
 1888 0250 00000000 		.word	totalDistance
 1889 0254 00000000 		.word	stoppedAfterTurn
 1890 0258 00000000 		.word	stopBuffer
 1891 025c 00000000 		.word	s5
 1892 0260 00000000 		.word	s6
 1893              	.L101:
 405:main.c        ****         }
 406:main.c        ****     }
 407:main.c        ****     
 408:main.c        ****     // COURSE CORRECTION * ========================================
 409:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1894              		.loc 1 409 0
 1895 0264 264B     		ldr	r3, .L113
 1896 0266 1B68     		ldr	r3, [r3]
 1897 0268 002B     		cmp	r3, #0
 1898 026a 07D0     		beq	.L104
 1899              		.loc 1 409 0 is_stmt 0 discriminator 1
 1900 026c 244B     		ldr	r3, .L113
 1901 026e 1B68     		ldr	r3, [r3]
 1902 0270 032B     		cmp	r3, #3
 1903 0272 03D0     		beq	.L104
 1904              		.loc 1 409 0 discriminator 2
 1905 0274 224B     		ldr	r3, .L113
 1906 0276 1B68     		ldr	r3, [r3]
 1907 0278 042B     		cmp	r3, #4
 1908 027a 15D1     		bne	.L105
 1909              	.L104:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 42


 410:main.c        ****         //ignoreSensor = 0;
 411:main.c        ****         if(s6) {
 1910              		.loc 1 411 0 is_stmt 1
 1911 027c 214B     		ldr	r3, .L113+4
 1912 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1913 0280 002B     		cmp	r3, #0
 1914 0282 06D0     		beq	.L106
 412:main.c        ****             //usbPutString("Adjust to the left\n");
 413:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1915              		.loc 1 413 0
 1916 0284 0323     		movs	r3, #3
 1917 0286 3B60     		str	r3, [r7]
 414:main.c        ****             previousDirection = directionState;
 1918              		.loc 1 414 0
 1919 0288 1D4A     		ldr	r2, .L113
 1920 028a 3B68     		ldr	r3, [r7]
 1921 028c 1360     		str	r3, [r2]
 415:main.c        ****             return directionState;
 1922              		.loc 1 415 0
 1923 028e 3B68     		ldr	r3, [r7]
 1924 0290 32E0     		b	.L85
 1925              	.L106:
 416:main.c        ****         }
 417:main.c        ****         if(s5) {
 1926              		.loc 1 417 0
 1927 0292 1D4B     		ldr	r3, .L113+8
 1928 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1929 0296 002B     		cmp	r3, #0
 1930 0298 06D0     		beq	.L105
 418:main.c        ****             //usbPutString("Adjust to the right\n");
 419:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1931              		.loc 1 419 0
 1932 029a 0423     		movs	r3, #4
 1933 029c 3B60     		str	r3, [r7]
 420:main.c        ****             previousDirection = directionState;
 1934              		.loc 1 420 0
 1935 029e 184A     		ldr	r2, .L113
 1936 02a0 3B68     		ldr	r3, [r7]
 1937 02a2 1360     		str	r3, [r2]
 421:main.c        ****             return directionState;
 1938              		.loc 1 421 0
 1939 02a4 3B68     		ldr	r3, [r7]
 1940 02a6 27E0     		b	.L85
 1941              	.L105:
 422:main.c        ****         }
 423:main.c        ****     }
 424:main.c        ****     
 425:main.c        ****     // FORWARD * ========================================
 426:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1942              		.loc 1 426 0
 1943 02a8 184B     		ldr	r3, .L113+12
 1944 02aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 02ac 002B     		cmp	r3, #0
 1946 02ae 12D0     		beq	.L107
 1947              		.loc 1 426 0 is_stmt 0 discriminator 1
 1948 02b0 174B     		ldr	r3, .L113+16
 1949 02b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 43


 1950 02b4 002B     		cmp	r3, #0
 1951 02b6 0ED0     		beq	.L107
 1952              		.loc 1 426 0 discriminator 2
 1953 02b8 134B     		ldr	r3, .L113+8
 1954 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1955 02bc 002B     		cmp	r3, #0
 1956 02be 0AD1     		bne	.L107
 1957              		.loc 1 426 0 discriminator 3
 1958 02c0 104B     		ldr	r3, .L113+4
 1959 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1960 02c4 002B     		cmp	r3, #0
 1961 02c6 06D1     		bne	.L107
 427:main.c        ****         //usbPutString("Forward\n");
 428:main.c        ****         directionState = Forward;
 1962              		.loc 1 428 0 is_stmt 1
 1963 02c8 0023     		movs	r3, #0
 1964 02ca 3B60     		str	r3, [r7]
 429:main.c        ****         previousDirection = directionState;
 1965              		.loc 1 429 0
 1966 02cc 0C4A     		ldr	r2, .L113
 1967 02ce 3B68     		ldr	r3, [r7]
 1968 02d0 1360     		str	r3, [r2]
 430:main.c        ****         return directionState;   
 1969              		.loc 1 430 0
 1970 02d2 3B68     		ldr	r3, [r7]
 1971 02d4 10E0     		b	.L85
 1972              	.L107:
 431:main.c        ****     }
 432:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 433:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
 434:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 435:main.c        ****         return directionState;
 436:main.c        ****     }
 437:main.c        **** 
 438:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 439:main.c        ****         //usbPutString("Wait For Turn\n");
 440:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 441:main.c        ****         return directionState;
 442:main.c        ****     }*/
 443:main.c        **** 
 444:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 445:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 446:main.c        ****     if (previousDirection == Unknown) {
 1973              		.loc 1 446 0
 1974 02d6 0A4B     		ldr	r3, .L113
 1975 02d8 1B68     		ldr	r3, [r3]
 1976 02da 062B     		cmp	r3, #6
 1977 02dc 06D1     		bne	.L108
 447:main.c        ****         directionState = Forward;
 1978              		.loc 1 447 0
 1979 02de 0023     		movs	r3, #0
 1980 02e0 3B60     		str	r3, [r7]
 448:main.c        ****         previousDirection = directionState;
 1981              		.loc 1 448 0
 1982 02e2 074A     		ldr	r2, .L113
 1983 02e4 3B68     		ldr	r3, [r7]
 1984 02e6 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 44


 449:main.c        ****         return directionState;
 1985              		.loc 1 449 0
 1986 02e8 3B68     		ldr	r3, [r7]
 1987 02ea 05E0     		b	.L85
 1988              	.L108:
 450:main.c        ****     }
 451:main.c        **** 
 452:main.c        ****     // Possible reason
 453:main.c        ****     previousDirection = currentDirection;
 1989              		.loc 1 453 0
 1990 02ec 094B     		ldr	r3, .L113+20
 1991 02ee 1B68     		ldr	r3, [r3]
 1992 02f0 034A     		ldr	r2, .L113
 1993 02f2 1360     		str	r3, [r2]
 454:main.c        ****     return previousDirection;
 1994              		.loc 1 454 0
 1995 02f4 024B     		ldr	r3, .L113
 1996 02f6 1B68     		ldr	r3, [r3]
 1997              	.L85:
 455:main.c        **** }
 1998              		.loc 1 455 0
 1999 02f8 1846     		mov	r0, r3
 2000 02fa 0837     		adds	r7, r7, #8
 2001              		.cfi_def_cfa_offset 8
 2002 02fc BD46     		mov	sp, r7
 2003              		.cfi_def_cfa_register 13
 2004              		@ sp needed
 2005 02fe 80BD     		pop	{r7, pc}
 2006              	.L114:
 2007              		.align	2
 2008              	.L113:
 2009 0300 00000000 		.word	previousDirection
 2010 0304 00000000 		.word	s6
 2011 0308 00000000 		.word	s5
 2012 030c 00000000 		.word	s3
 2013 0310 00000000 		.word	s4
 2014 0314 00000000 		.word	currentDirection
 2015              		.cfi_endproc
 2016              	.LFE74:
 2017              		.size	CheckSensorDirection, .-CheckSensorDirection
 2018              		.section	.text.traversePath,"ax",%progbits
 2019              		.align	2
 2020              		.global	traversePath
 2021              		.thumb
 2022              		.thumb_func
 2023              		.type	traversePath, %function
 2024              	traversePath:
 2025              	.LFB75:
 456:main.c        **** 
 457:main.c        **** 
 458:main.c        **** void traversePath(int numSteps, struct Instructions instructionList[numSteps]) {
 2026              		.loc 1 458 0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 16
 2029              		@ frame_needed = 1, uses_anonymous_args = 0
 2030              		@ link register save eliminated.
 2031 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 45


 2032              		.cfi_def_cfa_offset 4
 2033              		.cfi_offset 7, -4
 2034 0002 85B0     		sub	sp, sp, #20
 2035              		.cfi_def_cfa_offset 24
 2036 0004 00AF     		add	r7, sp, #0
 2037              		.cfi_def_cfa_register 7
 2038 0006 7860     		str	r0, [r7, #4]
 2039 0008 3960     		str	r1, [r7]
 2040              	.LBB3:
 459:main.c        ****     // input is list of instructions and robot will react accordingly
 460:main.c        ****     for(int i = 0; i < numSteps; i++) {
 2041              		.loc 1 460 0
 2042 000a 0023     		movs	r3, #0
 2043 000c FB60     		str	r3, [r7, #12]
 2044 000e 2DE0     		b	.L116
 2045              	.L127:
 461:main.c        ****         if(instructionList[i].direction != Skip) {
 2046              		.loc 1 461 0
 2047 0010 FA68     		ldr	r2, [r7, #12]
 2048 0012 1346     		mov	r3, r2
 2049 0014 5B00     		lsls	r3, r3, #1
 2050 0016 1344     		add	r3, r3, r2
 2051 0018 9B00     		lsls	r3, r3, #2
 2052 001a 1A46     		mov	r2, r3
 2053 001c 3B68     		ldr	r3, [r7]
 2054 001e 1344     		add	r3, r3, r2
 2055 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2056 0022 062B     		cmp	r3, #6
 2057 0024 1FD0     		beq	.L117
 462:main.c        ****             switch (instructionList[i].direction) {
 2058              		.loc 1 462 0
 2059 0026 FA68     		ldr	r2, [r7, #12]
 2060 0028 1346     		mov	r3, r2
 2061 002a 5B00     		lsls	r3, r3, #1
 2062 002c 1344     		add	r3, r3, r2
 2063 002e 9B00     		lsls	r3, r3, #2
 2064 0030 1A46     		mov	r2, r3
 2065 0032 3B68     		ldr	r3, [r7]
 2066 0034 1344     		add	r3, r3, r2
 2067 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2068 0038 052B     		cmp	r3, #5
 2069 003a 13D8     		bhi	.L128
 2070 003c 01A2     		adr	r2, .L120
 2071 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2072 0042 00BF     		.p2align 2
 2073              	.L120:
 2074 0044 5D000000 		.word	.L119+1
 2075 0048 65000000 		.word	.L128+1
 2076 004c 65000000 		.word	.L128+1
 2077 0050 65000000 		.word	.L128+1
 2078 0054 65000000 		.word	.L128+1
 2079 0058 65000000 		.word	.L128+1
 2080              		.p2align 1
 2081              	.L119:
 463:main.c        ****                 case GoForward:
 464:main.c        ****                     if(!s5 && !s6) {
 2082              		.loc 1 464 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 46


 2083 005c 084B     		ldr	r3, .L129
 2084 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2085 0060 002B     		cmp	r3, #0
 465:main.c        ****                         
 466:main.c        ****                     }
 467:main.c        ****                     break;
 2086              		.loc 1 467 0
 2087 0062 00E0     		b	.L117
 2088              	.L128:
 468:main.c        ****                 case waitForTurnLeft:
 469:main.c        ****                     break;
 470:main.c        ****                 case waitForTurnRight:
 471:main.c        ****                     break;
 472:main.c        ****                 case uTurn:
 473:main.c        ****                     break;
 474:main.c        ****                 case StopAtTarget:
 475:main.c        ****                     break;
 476:main.c        ****                 case ForwardUntilTarget:
 477:main.c        ****                     break;
 478:main.c        ****                 default:
 479:main.c        ****                     break;
 2089              		.loc 1 479 0
 2090 0064 00BF     		nop
 2091              	.L117:
 460:main.c        ****         if(instructionList[i].direction != Skip) {
 2092              		.loc 1 460 0 discriminator 2
 2093 0066 FB68     		ldr	r3, [r7, #12]
 2094 0068 0133     		adds	r3, r3, #1
 2095 006a FB60     		str	r3, [r7, #12]
 2096              	.L116:
 460:main.c        ****         if(instructionList[i].direction != Skip) {
 2097              		.loc 1 460 0 is_stmt 0 discriminator 1
 2098 006c FA68     		ldr	r2, [r7, #12]
 2099 006e 7B68     		ldr	r3, [r7, #4]
 2100 0070 9A42     		cmp	r2, r3
 2101 0072 CDDB     		blt	.L127
 2102              	.LBE3:
 480:main.c        ****             }
 481:main.c        ****         }
 482:main.c        ****     }
 483:main.c        **** }
 2103              		.loc 1 483 0 is_stmt 1
 2104 0074 00BF     		nop
 2105 0076 1437     		adds	r7, r7, #20
 2106              		.cfi_def_cfa_offset 4
 2107 0078 BD46     		mov	sp, r7
 2108              		.cfi_def_cfa_register 13
 2109              		@ sp needed
 2110 007a 80BC     		pop	{r7}
 2111              		.cfi_restore 7
 2112              		.cfi_def_cfa_offset 0
 2113 007c 7047     		bx	lr
 2114              	.L130:
 2115 007e 00BF     		.align	2
 2116              	.L129:
 2117 0080 00000000 		.word	s5
 2118              		.cfi_endproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 47


 2119              	.LFE75:
 2120              		.size	traversePath, .-traversePath
 2121              		.section	.text.SetRobotMovement,"ax",%progbits
 2122              		.align	2
 2123              		.global	SetRobotMovement
 2124              		.thumb
 2125              		.thumb_func
 2126              		.type	SetRobotMovement, %function
 2127              	SetRobotMovement:
 2128              	.LFB76:
 484:main.c        **** 
 485:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 486:main.c        **** void SetRobotMovement() {
 2129              		.loc 1 486 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 0
 2132              		@ frame_needed = 1, uses_anonymous_args = 0
 2133 0000 80B5     		push	{r7, lr}
 2134              		.cfi_def_cfa_offset 8
 2135              		.cfi_offset 7, -8
 2136              		.cfi_offset 14, -4
 2137 0002 00AF     		add	r7, sp, #0
 2138              		.cfi_def_cfa_register 7
 487:main.c        ****     currentDirection = 0; //  traversePath(numSteps, instructionList[]);   
 2139              		.loc 1 487 0
 2140 0004 224B     		ldr	r3, .L148
 2141 0006 0022     		movs	r2, #0
 2142 0008 1A60     		str	r2, [r3]
 488:main.c        ****     switch (currentDirection) {
 2143              		.loc 1 488 0
 2144 000a 214B     		ldr	r3, .L148
 2145 000c 1B68     		ldr	r3, [r3]
 2146 000e 0B2B     		cmp	r3, #11
 2147 0010 3CD8     		bhi	.L146
 2148 0012 01A2     		adr	r2, .L134
 2149 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2150              		.p2align 2
 2151              	.L134:
 2152 0018 49000000 		.word	.L133+1
 2153 001c 4F000000 		.word	.L135+1
 2154 0020 55000000 		.word	.L136+1
 2155 0024 61000000 		.word	.L137+1
 2156 0028 5B000000 		.word	.L138+1
 2157 002c 67000000 		.word	.L139+1
 2158 0030 8B000000 		.word	.L147+1
 2159 0034 6D000000 		.word	.L141+1
 2160 0038 85000000 		.word	.L142+1
 2161 003c 7F000000 		.word	.L143+1
 2162 0040 73000000 		.word	.L144+1
 2163 0044 79000000 		.word	.L145+1
 2164              		.p2align 1
 2165              	.L133:
 489:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 490:main.c        ****         case Forward:
 491:main.c        ****             moveForward();
 2166              		.loc 1 491 0
 2167 0048 FFF7FEFF 		bl	moveForward
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 48


 492:main.c        ****             break;
 2168              		.loc 1 492 0
 2169 004c 1EE0     		b	.L132
 2170              	.L135:
 493:main.c        ****         case TurnRight:
 494:main.c        ****             turnRight();
 2171              		.loc 1 494 0
 2172 004e FFF7FEFF 		bl	turnRight
 495:main.c        ****             break;
 2173              		.loc 1 495 0
 2174 0052 1BE0     		b	.L132
 2175              	.L136:
 496:main.c        ****         case TurnLeft:
 497:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2176              		.loc 1 497 0
 2177 0054 FFF7FEFF 		bl	turnLeft
 498:main.c        ****             break;
 2178              		.loc 1 498 0
 2179 0058 18E0     		b	.L132
 2180              	.L138:
 499:main.c        ****         case AdjustToTheRight:
 500:main.c        ****             adjustRight();
 2181              		.loc 1 500 0
 2182 005a FFF7FEFF 		bl	adjustRight
 501:main.c        ****             break;
 2183              		.loc 1 501 0
 2184 005e 15E0     		b	.L132
 2185              	.L137:
 502:main.c        ****         case AdjustToTheLeft:
 503:main.c        ****             adjustLeft();
 2186              		.loc 1 503 0
 2187 0060 FFF7FEFF 		bl	adjustLeft
 504:main.c        ****             break;
 2188              		.loc 1 504 0
 2189 0064 12E0     		b	.L132
 2190              	.L139:
 505:main.c        ****         case Stop:
 506:main.c        ****             stopMoving();
 2191              		.loc 1 506 0
 2192 0066 FFF7FEFF 		bl	stopMoving
 507:main.c        ****             break;
 2193              		.loc 1 507 0
 2194 006a 0FE0     		b	.L132
 2195              	.L141:
 508:main.c        ****         case waitForTurn:
 509:main.c        ****             moveForward(); 
 2196              		.loc 1 509 0
 2197 006c FFF7FEFF 		bl	moveForward
 510:main.c        ****             break;
 2198              		.loc 1 510 0
 2199 0070 0CE0     		b	.L132
 2200              	.L144:
 511:main.c        ****         case ForwardAfterTurn:
 512:main.c        ****             moveForward();
 2201              		.loc 1 512 0
 2202 0072 FFF7FEFF 		bl	moveForward
 513:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 49


 2203              		.loc 1 513 0
 2204 0076 09E0     		b	.L132
 2205              	.L145:
 514:main.c        ****         case Backward:
 515:main.c        ****             moveBackward();
 2206              		.loc 1 515 0
 2207 0078 FFF7FEFF 		bl	moveBackward
 516:main.c        ****             break;
 2208              		.loc 1 516 0
 2209 007c 06E0     		b	.L132
 2210              	.L143:
 517:main.c        ****         case waitForLeftTurn:
 518:main.c        ****             moveForward();
 2211              		.loc 1 518 0
 2212 007e FFF7FEFF 		bl	moveForward
 519:main.c        ****             break;
 2213              		.loc 1 519 0
 2214 0082 03E0     		b	.L132
 2215              	.L142:
 520:main.c        ****         case waitForRightTurn:
 521:main.c        ****             moveForward();
 2216              		.loc 1 521 0
 2217 0084 FFF7FEFF 		bl	moveForward
 522:main.c        ****             break;
 2218              		.loc 1 522 0
 2219 0088 00E0     		b	.L132
 2220              	.L147:
 523:main.c        ****         case Unknown:
 524:main.c        ****             // UNKNOWN CONFIGURATION
 525:main.c        ****             break;  
 2221              		.loc 1 525 0
 2222 008a 00BF     		nop
 2223              	.L132:
 2224              	.L146:
 526:main.c        ****     }
 527:main.c        **** }...
 2225              		.loc 1 527 0
 2226 008c 00BF     		nop
 2227 008e 80BD     		pop	{r7, pc}
 2228              	.L149:
 2229              		.align	2
 2230              	.L148:
 2231 0090 00000000 		.word	currentDirection
 2232              		.cfi_endproc
 2233              	.LFE76:
 2234              		.size	SetRobotMovement, .-SetRobotMovement
 2235              		.text
 2236              	.Letext0:
 2237              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2238              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2239              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2240              		.file 5 "vars.h"
 2241              		.file 6 "pathfinding.h"
 2242              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2243              		.file 8 "map.h"
 2244              		.section	.debug_info,"",%progbits
 2245              	.Ldebug_info0:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 50


 2246 0000 C2070000 		.4byte	0x7c2
 2247 0004 0400     		.2byte	0x4
 2248 0006 00000000 		.4byte	.Ldebug_abbrev0
 2249 000a 04       		.byte	0x4
 2250 000b 01       		.uleb128 0x1
 2251 000c 92000000 		.4byte	.LASF124
 2252 0010 0C       		.byte	0xc
 2253 0011 3F000000 		.4byte	.LASF125
 2254 0015 BC020000 		.4byte	.LASF126
 2255 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2256 001d 00000000 		.4byte	0
 2257 0021 00000000 		.4byte	.Ldebug_line0
 2258 0025 02       		.uleb128 0x2
 2259 0026 01       		.byte	0x1
 2260 0027 06       		.byte	0x6
 2261 0028 E7050000 		.4byte	.LASF0
 2262 002c 02       		.uleb128 0x2
 2263 002d 01       		.byte	0x1
 2264 002e 08       		.byte	0x8
 2265 002f 44050000 		.4byte	.LASF1
 2266 0033 02       		.uleb128 0x2
 2267 0034 02       		.byte	0x2
 2268 0035 05       		.byte	0x5
 2269 0036 6C040000 		.4byte	.LASF2
 2270 003a 02       		.uleb128 0x2
 2271 003b 02       		.byte	0x2
 2272 003c 07       		.byte	0x7
 2273 003d FE050000 		.4byte	.LASF3
 2274 0041 03       		.uleb128 0x3
 2275 0042 75000000 		.4byte	.LASF12
 2276 0046 02       		.byte	0x2
 2277 0047 3F       		.byte	0x3f
 2278 0048 4C000000 		.4byte	0x4c
 2279 004c 02       		.uleb128 0x2
 2280 004d 04       		.byte	0x4
 2281 004e 05       		.byte	0x5
 2282 004f 8E040000 		.4byte	.LASF4
 2283 0053 02       		.uleb128 0x2
 2284 0054 04       		.byte	0x4
 2285 0055 07       		.byte	0x7
 2286 0056 0E050000 		.4byte	.LASF5
 2287 005a 02       		.uleb128 0x2
 2288 005b 08       		.byte	0x8
 2289 005c 05       		.byte	0x5
 2290 005d 6A030000 		.4byte	.LASF6
 2291 0061 02       		.uleb128 0x2
 2292 0062 08       		.byte	0x8
 2293 0063 07       		.byte	0x7
 2294 0064 C7010000 		.4byte	.LASF7
 2295 0068 04       		.uleb128 0x4
 2296 0069 04       		.byte	0x4
 2297 006a 05       		.byte	0x5
 2298 006b 696E7400 		.ascii	"int\000"
 2299 006f 02       		.uleb128 0x2
 2300 0070 04       		.byte	0x4
 2301 0071 07       		.byte	0x7
 2302 0072 68000000 		.4byte	.LASF8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 51


 2303 0076 02       		.uleb128 0x2
 2304 0077 08       		.byte	0x8
 2305 0078 04       		.byte	0x4
 2306 0079 30040000 		.4byte	.LASF9
 2307 007d 02       		.uleb128 0x2
 2308 007e 04       		.byte	0x4
 2309 007f 07       		.byte	0x7
 2310 0080 05050000 		.4byte	.LASF10
 2311 0084 02       		.uleb128 0x2
 2312 0085 01       		.byte	0x1
 2313 0086 08       		.byte	0x8
 2314 0087 B7020000 		.4byte	.LASF11
 2315 008b 03       		.uleb128 0x3
 2316 008c 2B050000 		.4byte	.LASF13
 2317 0090 03       		.byte	0x3
 2318 0091 2C       		.byte	0x2c
 2319 0092 41000000 		.4byte	0x41
 2320 0096 05       		.uleb128 0x5
 2321 0097 41060000 		.4byte	.LASF14
 2322 009b 04       		.byte	0x4
 2323 009c E701     		.2byte	0x1e7
 2324 009e 2C000000 		.4byte	0x2c
 2325 00a2 05       		.uleb128 0x5
 2326 00a3 26030000 		.4byte	.LASF15
 2327 00a7 04       		.byte	0x4
 2328 00a8 E801     		.2byte	0x1e8
 2329 00aa 3A000000 		.4byte	0x3a
 2330 00ae 05       		.uleb128 0x5
 2331 00af E0030000 		.4byte	.LASF16
 2332 00b3 04       		.byte	0x4
 2333 00b4 E901     		.2byte	0x1e9
 2334 00b6 53000000 		.4byte	0x53
 2335 00ba 05       		.uleb128 0x5
 2336 00bb 2D030000 		.4byte	.LASF17
 2337 00bf 04       		.byte	0x4
 2338 00c0 EA01     		.2byte	0x1ea
 2339 00c2 25000000 		.4byte	0x25
 2340 00c6 05       		.uleb128 0x5
 2341 00c7 7F000000 		.4byte	.LASF18
 2342 00cb 04       		.byte	0x4
 2343 00cc EB01     		.2byte	0x1eb
 2344 00ce 33000000 		.4byte	0x33
 2345 00d2 02       		.uleb128 0x2
 2346 00d3 04       		.byte	0x4
 2347 00d4 04       		.byte	0x4
 2348 00d5 AB010000 		.4byte	.LASF19
 2349 00d9 02       		.uleb128 0x2
 2350 00da 08       		.byte	0x8
 2351 00db 04       		.byte	0x4
 2352 00dc 47060000 		.4byte	.LASF20
 2353 00e0 06       		.uleb128 0x6
 2354 00e1 02040000 		.4byte	.LASF50
 2355 00e5 20       		.byte	0x20
 2356 00e6 05       		.byte	0x5
 2357 00e7 28       		.byte	0x28
 2358 00e8 B9010000 		.4byte	0x1b9
 2359 00ec 07       		.uleb128 0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 52


 2360 00ed 0C040000 		.4byte	.LASF21
 2361 00f1 05       		.byte	0x5
 2362 00f2 2A       		.byte	0x2a
 2363 00f3 BA000000 		.4byte	0xba
 2364 00f7 00       		.byte	0
 2365 00f8 07       		.uleb128 0x7
 2366 00f9 C1010000 		.4byte	.LASF22
 2367 00fd 05       		.byte	0x5
 2368 00fe 2B       		.byte	0x2b
 2369 00ff 96000000 		.4byte	0x96
 2370 0103 01       		.byte	0x1
 2371 0104 07       		.uleb128 0x7
 2372 0105 33050000 		.4byte	.LASF23
 2373 0109 05       		.byte	0x5
 2374 010a 2C       		.byte	0x2c
 2375 010b C6000000 		.4byte	0xc6
 2376 010f 02       		.byte	0x2
 2377 0110 07       		.uleb128 0x7
 2378 0111 8E020000 		.4byte	.LASF24
 2379 0115 05       		.byte	0x5
 2380 0116 2D       		.byte	0x2d
 2381 0117 C6000000 		.4byte	0xc6
 2382 011b 04       		.byte	0x4
 2383 011c 07       		.uleb128 0x7
 2384 011d 11060000 		.4byte	.LASF25
 2385 0121 05       		.byte	0x5
 2386 0122 2E       		.byte	0x2e
 2387 0123 C6000000 		.4byte	0xc6
 2388 0127 06       		.byte	0x6
 2389 0128 07       		.uleb128 0x7
 2390 0129 6E060000 		.4byte	.LASF26
 2391 012d 05       		.byte	0x5
 2392 012e 2F       		.byte	0x2f
 2393 012f C6000000 		.4byte	0xc6
 2394 0133 08       		.byte	0x8
 2395 0134 07       		.uleb128 0x7
 2396 0135 AF030000 		.4byte	.LASF27
 2397 0139 05       		.byte	0x5
 2398 013a 30       		.byte	0x30
 2399 013b C6000000 		.4byte	0xc6
 2400 013f 0A       		.byte	0xa
 2401 0140 07       		.uleb128 0x7
 2402 0141 0D030000 		.4byte	.LASF28
 2403 0145 05       		.byte	0x5
 2404 0146 31       		.byte	0x31
 2405 0147 C6000000 		.4byte	0xc6
 2406 014b 0C       		.byte	0xc
 2407 014c 07       		.uleb128 0x7
 2408 014d 11040000 		.4byte	.LASF29
 2409 0151 05       		.byte	0x5
 2410 0152 32       		.byte	0x32
 2411 0153 C6000000 		.4byte	0xc6
 2412 0157 0E       		.byte	0xe
 2413 0158 07       		.uleb128 0x7
 2414 0159 78030000 		.4byte	.LASF30
 2415 015d 05       		.byte	0x5
 2416 015e 33       		.byte	0x33
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 53


 2417 015f C6000000 		.4byte	0xc6
 2418 0163 10       		.byte	0x10
 2419 0164 07       		.uleb128 0x7
 2420 0165 EC040000 		.4byte	.LASF31
 2421 0169 05       		.byte	0x5
 2422 016a 34       		.byte	0x34
 2423 016b C6000000 		.4byte	0xc6
 2424 016f 12       		.byte	0x12
 2425 0170 07       		.uleb128 0x7
 2426 0171 9B060000 		.4byte	.LASF32
 2427 0175 05       		.byte	0x5
 2428 0176 35       		.byte	0x35
 2429 0177 C6000000 		.4byte	0xc6
 2430 017b 14       		.byte	0x14
 2431 017c 07       		.uleb128 0x7
 2432 017d 3D030000 		.4byte	.LASF33
 2433 0181 05       		.byte	0x5
 2434 0182 36       		.byte	0x36
 2435 0183 C6000000 		.4byte	0xc6
 2436 0187 16       		.byte	0x16
 2437 0188 07       		.uleb128 0x7
 2438 0189 3A010000 		.4byte	.LASF34
 2439 018d 05       		.byte	0x5
 2440 018e 37       		.byte	0x37
 2441 018f C6000000 		.4byte	0xc6
 2442 0193 18       		.byte	0x18
 2443 0194 07       		.uleb128 0x7
 2444 0195 C8040000 		.4byte	.LASF35
 2445 0199 05       		.byte	0x5
 2446 019a 38       		.byte	0x38
 2447 019b C6000000 		.4byte	0xc6
 2448 019f 1A       		.byte	0x1a
 2449 01a0 07       		.uleb128 0x7
 2450 01a1 A6030000 		.4byte	.LASF36
 2451 01a5 05       		.byte	0x5
 2452 01a6 39       		.byte	0x39
 2453 01a7 C6000000 		.4byte	0xc6
 2454 01ab 1C       		.byte	0x1c
 2455 01ac 07       		.uleb128 0x7
 2456 01ad 90010000 		.4byte	.LASF37
 2457 01b1 05       		.byte	0x5
 2458 01b2 3A       		.byte	0x3a
 2459 01b3 C6000000 		.4byte	0xc6
 2460 01b7 1E       		.byte	0x1e
 2461 01b8 00       		.byte	0
 2462 01b9 08       		.uleb128 0x8
 2463 01ba 1B000000 		.4byte	.LASF45
 2464 01be 01       		.byte	0x1
 2465 01bf 2C000000 		.4byte	0x2c
 2466 01c3 06       		.byte	0x6
 2467 01c4 1F       		.byte	0x1f
 2468 01c5 F4010000 		.4byte	0x1f4
 2469 01c9 09       		.uleb128 0x9
 2470 01ca D1050000 		.4byte	.LASF38
 2471 01ce 00       		.byte	0
 2472 01cf 09       		.uleb128 0x9
 2473 01d0 AE050000 		.4byte	.LASF39
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 54


 2474 01d4 01       		.byte	0x1
 2475 01d5 09       		.uleb128 0x9
 2476 01d6 46000000 		.4byte	.LASF40
 2477 01da 02       		.byte	0x2
 2478 01db 09       		.uleb128 0x9
 2479 01dc 94030000 		.4byte	.LASF41
 2480 01e0 03       		.byte	0x3
 2481 01e1 09       		.uleb128 0x9
 2482 01e2 1E020000 		.4byte	.LASF42
 2483 01e6 04       		.byte	0x4
 2484 01e7 09       		.uleb128 0x9
 2485 01e8 75020000 		.4byte	.LASF43
 2486 01ec 05       		.byte	0x5
 2487 01ed 09       		.uleb128 0x9
 2488 01ee BE050000 		.4byte	.LASF44
 2489 01f2 06       		.byte	0x6
 2490 01f3 00       		.byte	0
 2491 01f4 08       		.uleb128 0x8
 2492 01f5 D0040000 		.4byte	.LASF46
 2493 01f9 01       		.byte	0x1
 2494 01fa 2C000000 		.4byte	0x2c
 2495 01fe 06       		.byte	0x6
 2496 01ff 20       		.byte	0x20
 2497 0200 1C020000 		.4byte	0x21c
 2498 0204 0A       		.uleb128 0xa
 2499 0205 557000   		.ascii	"Up\000"
 2500 0208 00       		.byte	0
 2501 0209 09       		.uleb128 0x9
 2502 020a E1040000 		.4byte	.LASF47
 2503 020e 01       		.byte	0x1
 2504 020f 09       		.uleb128 0x9
 2505 0210 4A030000 		.4byte	.LASF48
 2506 0214 02       		.byte	0x2
 2507 0215 09       		.uleb128 0x9
 2508 0216 E6040000 		.4byte	.LASF49
 2509 021a 03       		.byte	0x3
 2510 021b 00       		.byte	0
 2511 021c 06       		.uleb128 0x6
 2512 021d 31020000 		.4byte	.LASF51
 2513 0221 0C       		.byte	0xc
 2514 0222 06       		.byte	0x6
 2515 0223 23       		.byte	0x23
 2516 0224 4D020000 		.4byte	0x24d
 2517 0228 07       		.uleb128 0x7
 2518 0229 00000000 		.4byte	.LASF52
 2519 022d 06       		.byte	0x6
 2520 022e 24       		.byte	0x24
 2521 022f B9010000 		.4byte	0x1b9
 2522 0233 00       		.byte	0
 2523 0234 07       		.uleb128 0x7
 2524 0235 A4060000 		.4byte	.LASF53
 2525 0239 06       		.byte	0x6
 2526 023a 25       		.byte	0x25
 2527 023b 68000000 		.4byte	0x68
 2528 023f 04       		.byte	0x4
 2529 0240 07       		.uleb128 0x7
 2530 0241 AC060000 		.4byte	.LASF54
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 55


 2531 0245 06       		.byte	0x6
 2532 0246 26       		.byte	0x26
 2533 0247 68000000 		.4byte	0x68
 2534 024b 08       		.byte	0x8
 2535 024c 00       		.byte	0
 2536 024d 08       		.uleb128 0x8
 2537 024e 30000000 		.4byte	.LASF55
 2538 0252 04       		.byte	0x4
 2539 0253 6F000000 		.4byte	0x6f
 2540 0257 01       		.byte	0x1
 2541 0258 28       		.byte	0x28
 2542 0259 A6020000 		.4byte	0x2a6
 2543 025d 09       		.uleb128 0x9
 2544 025e AE040000 		.4byte	.LASF56
 2545 0262 00       		.byte	0
 2546 0263 09       		.uleb128 0x9
 2547 0264 F8030000 		.4byte	.LASF57
 2548 0268 01       		.byte	0x1
 2549 0269 09       		.uleb128 0x9
 2550 026a B7030000 		.4byte	.LASF58
 2551 026e 02       		.byte	0x2
 2552 026f 09       		.uleb128 0x9
 2553 0270 28060000 		.4byte	.LASF59
 2554 0274 03       		.byte	0x3
 2555 0275 09       		.uleb128 0x9
 2556 0276 68050000 		.4byte	.LASF60
 2557 027a 04       		.byte	0x4
 2558 027b 09       		.uleb128 0x9
 2559 027c 79050000 		.4byte	.LASF61
 2560 0280 05       		.byte	0x5
 2561 0281 09       		.uleb128 0x9
 2562 0282 C9030000 		.4byte	.LASF62
 2563 0286 06       		.byte	0x6
 2564 0287 09       		.uleb128 0x9
 2565 0288 82020000 		.4byte	.LASF63
 2566 028c 07       		.byte	0x7
 2567 028d 09       		.uleb128 0x9
 2568 028e E7030000 		.4byte	.LASF64
 2569 0292 08       		.byte	0x8
 2570 0293 09       		.uleb128 0x9
 2571 0294 5A030000 		.4byte	.LASF65
 2572 0298 09       		.byte	0x9
 2573 0299 09       		.uleb128 0x9
 2574 029a 0A000000 		.4byte	.LASF66
 2575 029e 0A       		.byte	0xa
 2576 029f 09       		.uleb128 0x9
 2577 02a0 38060000 		.4byte	.LASF67
 2578 02a4 0B       		.byte	0xb
 2579 02a5 00       		.byte	0
 2580 02a6 0B       		.uleb128 0xb
 2581 02a7 4F030000 		.4byte	.LASF75
 2582 02ab 01       		.byte	0x1
 2583 02ac 43       		.byte	0x43
 2584 02ad 00000000 		.4byte	.LFB64
 2585 02b1 F4000000 		.4byte	.LFE64-.LFB64
 2586 02b5 01       		.uleb128 0x1
 2587 02b6 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 56


 2588 02b7 D4020000 		.4byte	0x2d4
 2589 02bb 0C       		.uleb128 0xc
 2590 02bc 58000000 		.4byte	.LBB2
 2591 02c0 62000000 		.4byte	.LBE2-.LBB2
 2592 02c4 0D       		.uleb128 0xd
 2593 02c5 9A030000 		.4byte	.LASF74
 2594 02c9 01       		.byte	0x1
 2595 02ca 51       		.byte	0x51
 2596 02cb D2000000 		.4byte	0xd2
 2597 02cf 02       		.uleb128 0x2
 2598 02d0 91       		.byte	0x91
 2599 02d1 6C       		.sleb128 -20
 2600 02d2 00       		.byte	0
 2601 02d3 00       		.byte	0
 2602 02d4 0E       		.uleb128 0xe
 2603 02d5 82040000 		.4byte	.LASF68
 2604 02d9 01       		.byte	0x1
 2605 02da 5C       		.byte	0x5c
 2606 02db 00000000 		.4byte	.LFB65
 2607 02df 18000000 		.4byte	.LFE65-.LFB65
 2608 02e3 01       		.uleb128 0x1
 2609 02e4 9C       		.byte	0x9c
 2610 02e5 0E       		.uleb128 0xe
 2611 02e6 76040000 		.4byte	.LASF69
 2612 02ea 01       		.byte	0x1
 2613 02eb 62       		.byte	0x62
 2614 02ec 00000000 		.4byte	.LFB66
 2615 02f0 18000000 		.4byte	.LFE66-.LFB66
 2616 02f4 01       		.uleb128 0x1
 2617 02f5 9C       		.byte	0x9c
 2618 02f6 0E       		.uleb128 0xe
 2619 02f7 DB050000 		.4byte	.LASF70
 2620 02fb 01       		.byte	0x1
 2621 02fc 68       		.byte	0x68
 2622 02fd 00000000 		.4byte	.LFB67
 2623 0301 18000000 		.4byte	.LFE67-.LFB67
 2624 0305 01       		.uleb128 0x1
 2625 0306 9C       		.byte	0x9c
 2626 0307 0E       		.uleb128 0xe
 2627 0308 20010000 		.4byte	.LASF71
 2628 030c 01       		.byte	0x1
 2629 030d 6E       		.byte	0x6e
 2630 030e 00000000 		.4byte	.LFB68
 2631 0312 18000000 		.4byte	.LFE68-.LFB68
 2632 0316 01       		.uleb128 0x1
 2633 0317 9C       		.byte	0x9c
 2634 0318 0F       		.uleb128 0xf
 2635 0319 FB010000 		.4byte	.LASF72
 2636 031d 01       		.byte	0x1
 2637 031e 74       		.byte	0x74
 2638 031f 00000000 		.4byte	.LFB69
 2639 0323 38000000 		.4byte	.LFE69-.LFB69
 2640 0327 01       		.uleb128 0x1
 2641 0328 9C       		.byte	0x9c
 2642 0329 10       		.uleb128 0x10
 2643 032a 23060000 		.4byte	.LASF73
 2644 032e 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 57


 2645 032f 80       		.byte	0x80
 2646 0330 68000000 		.4byte	0x68
 2647 0334 00000000 		.4byte	.LFB70
 2648 0338 94000000 		.4byte	.LFE70-.LFB70
 2649 033c 01       		.uleb128 0x1
 2650 033d 9C       		.byte	0x9c
 2651 033e 11       		.uleb128 0x11
 2652 033f 59020000 		.4byte	.LASF127
 2653 0343 01       		.byte	0x1
 2654 0344 AD       		.byte	0xad
 2655 0345 C6000000 		.4byte	0xc6
 2656 0349 00000000 		.4byte	.LFB71
 2657 034d 54000000 		.4byte	.LFE71-.LFB71
 2658 0351 01       		.uleb128 0x1
 2659 0352 9C       		.byte	0x9c
 2660 0353 82030000 		.4byte	0x382
 2661 0357 12       		.uleb128 0x12
 2662 0358 BB010000 		.4byte	.LASF81
 2663 035c 01       		.byte	0x1
 2664 035d AD       		.byte	0xad
 2665 035e A2000000 		.4byte	0xa2
 2666 0362 02       		.uleb128 0x2
 2667 0363 91       		.byte	0x91
 2668 0364 66       		.sleb128 -26
 2669 0365 13       		.uleb128 0x13
 2670 0366 63707300 		.ascii	"cps\000"
 2671 036a 01       		.byte	0x1
 2672 036b AF       		.byte	0xaf
 2673 036c D2000000 		.4byte	0xd2
 2674 0370 02       		.uleb128 0x2
 2675 0371 91       		.byte	0x91
 2676 0372 6C       		.sleb128 -20
 2677 0373 13       		.uleb128 0x13
 2678 0374 72706D00 		.ascii	"rpm\000"
 2679 0378 01       		.byte	0x1
 2680 0379 B0       		.byte	0xb0
 2681 037a C6000000 		.4byte	0xc6
 2682 037e 02       		.uleb128 0x2
 2683 037f 91       		.byte	0x91
 2684 0380 6A       		.sleb128 -22
 2685 0381 00       		.byte	0
 2686 0382 14       		.uleb128 0x14
 2687 0383 7F010000 		.4byte	.LASF84
 2688 0387 01       		.byte	0x1
 2689 0388 B8       		.byte	0xb8
 2690 0389 00000000 		.4byte	.LFB72
 2691 038d 34000000 		.4byte	.LFE72-.LFB72
 2692 0391 01       		.uleb128 0x1
 2693 0392 9C       		.byte	0x9c
 2694 0393 15       		.uleb128 0x15
 2695 0394 08020000 		.4byte	.LASF76
 2696 0398 01       		.byte	0x1
 2697 0399 C4       		.byte	0xc4
 2698 039a 4D020000 		.4byte	0x24d
 2699 039e 00000000 		.4byte	.LFB73
 2700 03a2 98040000 		.4byte	.LFE73-.LFB73
 2701 03a6 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 58


 2702 03a7 9C       		.byte	0x9c
 2703 03a8 BB030000 		.4byte	0x3bb
 2704 03ac 0D       		.uleb128 0xd
 2705 03ad D1030000 		.4byte	.LASF77
 2706 03b1 01       		.byte	0x1
 2707 03b2 C5       		.byte	0xc5
 2708 03b3 4D020000 		.4byte	0x24d
 2709 03b7 02       		.uleb128 0x2
 2710 03b8 91       		.byte	0x91
 2711 03b9 74       		.sleb128 -12
 2712 03ba 00       		.byte	0
 2713 03bb 16       		.uleb128 0x16
 2714 03bc 4E060000 		.4byte	.LASF78
 2715 03c0 01       		.byte	0x1
 2716 03c1 1801     		.2byte	0x118
 2717 03c3 4D020000 		.4byte	0x24d
 2718 03c7 00000000 		.4byte	.LFB74
 2719 03cb 18030000 		.4byte	.LFE74-.LFB74
 2720 03cf 01       		.uleb128 0x1
 2721 03d0 9C       		.byte	0x9c
 2722 03d1 F4030000 		.4byte	0x3f4
 2723 03d5 17       		.uleb128 0x17
 2724 03d6 57000000 		.4byte	.LASF79
 2725 03da 01       		.byte	0x1
 2726 03db 1901     		.2byte	0x119
 2727 03dd D2000000 		.4byte	0xd2
 2728 03e1 02       		.uleb128 0x2
 2729 03e2 91       		.byte	0x91
 2730 03e3 74       		.sleb128 -12
 2731 03e4 17       		.uleb128 0x17
 2732 03e5 D1030000 		.4byte	.LASF77
 2733 03e9 01       		.byte	0x1
 2734 03ea 1F01     		.2byte	0x11f
 2735 03ec 4D020000 		.4byte	0x24d
 2736 03f0 02       		.uleb128 0x2
 2737 03f1 91       		.byte	0x91
 2738 03f2 70       		.sleb128 -16
 2739 03f3 00       		.byte	0
 2740 03f4 18       		.uleb128 0x18
 2741 03f5 7F060000 		.4byte	.LASF80
 2742 03f9 01       		.byte	0x1
 2743 03fa CA01     		.2byte	0x1ca
 2744 03fc 00000000 		.4byte	.LFB75
 2745 0400 84000000 		.4byte	.LFE75-.LFB75
 2746 0404 01       		.uleb128 0x1
 2747 0405 9C       		.byte	0x9c
 2748 0406 40040000 		.4byte	0x440
 2749 040a 19       		.uleb128 0x19
 2750 040b 42010000 		.4byte	.LASF82
 2751 040f 01       		.byte	0x1
 2752 0410 CA01     		.2byte	0x1ca
 2753 0412 68000000 		.4byte	0x68
 2754 0416 02       		.uleb128 0x2
 2755 0417 91       		.byte	0x91
 2756 0418 6C       		.sleb128 -20
 2757 0419 19       		.uleb128 0x19
 2758 041a 16030000 		.4byte	.LASF83
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 59


 2759 041e 01       		.byte	0x1
 2760 041f CA01     		.2byte	0x1ca
 2761 0421 40040000 		.4byte	0x440
 2762 0425 02       		.uleb128 0x2
 2763 0426 91       		.byte	0x91
 2764 0427 68       		.sleb128 -24
 2765 0428 0C       		.uleb128 0xc
 2766 0429 0A000000 		.4byte	.LBB3
 2767 042d 6A000000 		.4byte	.LBE3-.LBB3
 2768 0431 1A       		.uleb128 0x1a
 2769 0432 6900     		.ascii	"i\000"
 2770 0434 01       		.byte	0x1
 2771 0435 CC01     		.2byte	0x1cc
 2772 0437 68000000 		.4byte	0x68
 2773 043b 02       		.uleb128 0x2
 2774 043c 91       		.byte	0x91
 2775 043d 74       		.sleb128 -12
 2776 043e 00       		.byte	0
 2777 043f 00       		.byte	0
 2778 0440 1B       		.uleb128 0x1b
 2779 0441 04       		.byte	0x4
 2780 0442 1C020000 		.4byte	0x21c
 2781 0446 1C       		.uleb128 0x1c
 2782 0447 EA010000 		.4byte	.LASF85
 2783 044b 01       		.byte	0x1
 2784 044c E601     		.2byte	0x1e6
 2785 044e 00000000 		.4byte	.LFB76
 2786 0452 94000000 		.4byte	.LFE76-.LFB76
 2787 0456 01       		.uleb128 0x1
 2788 0457 9C       		.byte	0x9c
 2789 0458 1D       		.uleb128 0x1d
 2790 0459 97040000 		.4byte	.LASF86
 2791 045d 07       		.byte	0x7
 2792 045e 1207     		.2byte	0x712
 2793 0460 64040000 		.4byte	0x464
 2794 0464 1E       		.uleb128 0x1e
 2795 0465 8B000000 		.4byte	0x8b
 2796 0469 1F       		.uleb128 0x1f
 2797 046a 747300   		.ascii	"ts\000"
 2798 046d 05       		.byte	0x5
 2799 046e 10       		.byte	0x10
 2800 046f 96000000 		.4byte	0x96
 2801 0473 05       		.uleb128 0x5
 2802 0474 03       		.byte	0x3
 2803 0475 00000000 		.4byte	ts
 2804 0479 20       		.uleb128 0x20
 2805 047a 7E050000 		.4byte	.LASF87
 2806 047e 05       		.byte	0x5
 2807 047f 11       		.byte	0x11
 2808 0480 A2000000 		.4byte	0xa2
 2809 0484 05       		.uleb128 0x5
 2810 0485 03       		.byte	0x3
 2811 0486 00000000 		.4byte	ts_enc
 2812 048a 20       		.uleb128 0x20
 2813 048b A4040000 		.4byte	.LASF88
 2814 048f 05       		.byte	0x5
 2815 0490 12       		.byte	0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 60


 2816 0491 A2000000 		.4byte	0xa2
 2817 0495 05       		.uleb128 0x5
 2818 0496 03       		.byte	0x3
 2819 0497 00000000 		.4byte	ts_update
 2820 049b 20       		.uleb128 0x20
 2821 049c C0030000 		.4byte	.LASF89
 2822 04a0 05       		.byte	0x5
 2823 04a1 13       		.byte	0x13
 2824 04a2 A2000000 		.4byte	0xa2
 2825 04a6 05       		.uleb128 0x5
 2826 04a7 03       		.byte	0x3
 2827 04a8 00000000 		.4byte	ts_speed
 2828 04ac 20       		.uleb128 0x20
 2829 04ad 99020000 		.4byte	.LASF90
 2830 04b1 05       		.byte	0x5
 2831 04b2 14       		.byte	0x14
 2832 04b3 A2000000 		.4byte	0xa2
 2833 04b7 05       		.uleb128 0x5
 2834 04b8 03       		.byte	0x3
 2835 04b9 00000000 		.4byte	ts_display
 2836 04bd 20       		.uleb128 0x20
 2837 04be 4D020000 		.4byte	.LASF91
 2838 04c2 05       		.byte	0x5
 2839 04c3 16       		.byte	0x16
 2840 04c4 96000000 		.4byte	0x96
 2841 04c8 05       		.uleb128 0x5
 2842 04c9 03       		.byte	0x3
 2843 04ca 00000000 		.4byte	flag_ts_enc
 2844 04ce 20       		.uleb128 0x20
 2845 04cf 3E020000 		.4byte	.LASF92
 2846 04d3 05       		.byte	0x5
 2847 04d4 17       		.byte	0x17
 2848 04d5 96000000 		.4byte	0x96
 2849 04d9 05       		.uleb128 0x5
 2850 04da 03       		.byte	0x3
 2851 04db 00000000 		.4byte	flag_ts_update
 2852 04df 20       		.uleb128 0x20
 2853 04e0 3C040000 		.4byte	.LASF93
 2854 04e4 05       		.byte	0x5
 2855 04e5 18       		.byte	0x18
 2856 04e6 96000000 		.4byte	0x96
 2857 04ea 05       		.uleb128 0x5
 2858 04eb 03       		.byte	0x3
 2859 04ec 00000000 		.4byte	flag_ts_speed
 2860 04f0 20       		.uleb128 0x20
 2861 04f1 85050000 		.4byte	.LASF94
 2862 04f5 05       		.byte	0x5
 2863 04f6 19       		.byte	0x19
 2864 04f7 96000000 		.4byte	0x96
 2865 04fb 05       		.uleb128 0x5
 2866 04fc 03       		.byte	0x3
 2867 04fd 00000000 		.4byte	flag_ts_display
 2868 0501 20       		.uleb128 0x20
 2869 0502 59040000 		.4byte	.LASF95
 2870 0506 05       		.byte	0x5
 2871 0507 1B       		.byte	0x1b
 2872 0508 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 61


 2873 050c 05       		.uleb128 0x5
 2874 050d 03       		.byte	0x3
 2875 050e 00000000 		.4byte	flag_rx
 2876 0512 20       		.uleb128 0x20
 2877 0513 DE010000 		.4byte	.LASF96
 2878 0517 05       		.byte	0x5
 2879 0518 1C       		.byte	0x1c
 2880 0519 96000000 		.4byte	0x96
 2881 051d 05       		.uleb128 0x5
 2882 051e 03       		.byte	0x3
 2883 051f 00000000 		.4byte	flag_packet
 2884 0523 20       		.uleb128 0x20
 2885 0524 8C060000 		.4byte	.LASF97
 2886 0528 05       		.byte	0x5
 2887 0529 1D       		.byte	0x1d
 2888 052a 96000000 		.4byte	0x96
 2889 052e 05       		.uleb128 0x5
 2890 052f 03       		.byte	0x3
 2891 0530 00000000 		.4byte	flag_KB_string
 2892 0534 20       		.uleb128 0x20
 2893 0535 4A040000 		.4byte	.LASF98
 2894 0539 05       		.byte	0x5
 2895 053a 1F       		.byte	0x1f
 2896 053b 96000000 		.4byte	0x96
 2897 053f 05       		.uleb128 0x5
 2898 0540 03       		.byte	0x3
 2899 0541 00000000 		.4byte	dataready_flag
 2900 0545 20       		.uleb128 0x20
 2901 0546 4B010000 		.4byte	.LASF99
 2902 054a 05       		.byte	0x5
 2903 054b 21       		.byte	0x21
 2904 054c 96000000 		.4byte	0x96
 2905 0550 05       		.uleb128 0x5
 2906 0551 03       		.byte	0x3
 2907 0552 00000000 		.4byte	flag_rf_transmission_active
 2908 0556 21       		.uleb128 0x21
 2909 0557 84000000 		.4byte	0x84
 2910 055b 66050000 		.4byte	0x566
 2911 055f 22       		.uleb128 0x22
 2912 0560 7D000000 		.4byte	0x7d
 2913 0564 3F       		.byte	0x3f
 2914 0565 00       		.byte	0
 2915 0566 20       		.uleb128 0x20
 2916 0567 C3050000 		.4byte	.LASF100
 2917 056b 05       		.byte	0x5
 2918 056c 24       		.byte	0x24
 2919 056d 56050000 		.4byte	0x556
 2920 0571 05       		.uleb128 0x5
 2921 0572 03       		.byte	0x3
 2922 0573 00000000 		.4byte	displaystring
 2923 0577 20       		.uleb128 0x20
 2924 0578 63050000 		.4byte	.LASF101
 2925 057c 05       		.byte	0x5
 2926 057d 25       		.byte	0x25
 2927 057e 56050000 		.4byte	0x556
 2928 0582 05       		.uleb128 0x5
 2929 0583 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 62


 2930 0584 00000000 		.4byte	line
 2931 0588 20       		.uleb128 0x20
 2932 0589 3E050000 		.4byte	.LASF102
 2933 058d 05       		.byte	0x5
 2934 058e 25       		.byte	0x25
 2935 058f 56050000 		.4byte	0x556
 2936 0593 05       		.uleb128 0x5
 2937 0594 03       		.byte	0x3
 2938 0595 00000000 		.4byte	entry
 2939 0599 21       		.uleb128 0x21
 2940 059a 96000000 		.4byte	0x96
 2941 059e A9050000 		.4byte	0x5a9
 2942 05a2 22       		.uleb128 0x22
 2943 05a3 7D000000 		.4byte	0x7d
 2944 05a7 3F       		.byte	0x3f
 2945 05a8 00       		.byte	0
 2946 05a9 20       		.uleb128 0x20
 2947 05aa B1010000 		.4byte	.LASF103
 2948 05ae 05       		.byte	0x5
 2949 05af 26       		.byte	0x26
 2950 05b0 99050000 		.4byte	0x599
 2951 05b4 05       		.uleb128 0x5
 2952 05b5 03       		.byte	0x3
 2953 05b6 00000000 		.4byte	usbBuffer
 2954 05ba 20       		.uleb128 0x20
 2955 05bb 85000000 		.4byte	.LASF104
 2956 05bf 05       		.byte	0x5
 2957 05c0 3C       		.byte	0x3c
 2958 05c1 E0000000 		.4byte	0xe0
 2959 05c5 05       		.uleb128 0x5
 2960 05c6 03       		.byte	0x3
 2961 05c7 00000000 		.4byte	system_state
 2962 05cb 20       		.uleb128 0x20
 2963 05cc 95050000 		.4byte	.LASF105
 2964 05d0 06       		.byte	0x6
 2965 05d1 21       		.byte	0x21
 2966 05d2 F4010000 		.4byte	0x1f4
 2967 05d6 05       		.uleb128 0x5
 2968 05d7 03       		.byte	0x3
 2969 05d8 00000000 		.4byte	previousRobotOrientation
 2970 05dc 20       		.uleb128 0x20
 2971 05dd 67010000 		.4byte	.LASF106
 2972 05e1 06       		.byte	0x6
 2973 05e2 21       		.byte	0x21
 2974 05e3 F4010000 		.4byte	0x1f4
 2975 05e7 05       		.uleb128 0x5
 2976 05e8 03       		.byte	0x3
 2977 05e9 00000000 		.4byte	currentRobotOrientation
 2978 05ed 21       		.uleb128 0x21
 2979 05ee B9010000 		.4byte	0x1b9
 2980 05f2 FE050000 		.4byte	0x5fe
 2981 05f6 23       		.uleb128 0x23
 2982 05f7 7D000000 		.4byte	0x7d
 2983 05fb 1C01     		.2byte	0x11c
 2984 05fd 00       		.byte	0
 2985 05fe 20       		.uleb128 0x20
 2986 05ff 31020000 		.4byte	.LASF51
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 63


 2987 0603 06       		.byte	0x6
 2988 0604 22       		.byte	0x22
 2989 0605 ED050000 		.4byte	0x5ed
 2990 0609 05       		.uleb128 0x5
 2991 060a 03       		.byte	0x3
 2992 060b 00000000 		.4byte	Instructions
 2993 060f 21       		.uleb128 0x21
 2994 0610 68000000 		.4byte	0x68
 2995 0614 25060000 		.4byte	0x625
 2996 0618 22       		.uleb128 0x22
 2997 0619 7D000000 		.4byte	0x7d
 2998 061d 0E       		.byte	0xe
 2999 061e 22       		.uleb128 0x22
 3000 061f 7D000000 		.4byte	0x7d
 3001 0623 12       		.byte	0x12
 3002 0624 00       		.byte	0
 3003 0625 24       		.uleb128 0x24
 3004 0626 6D617000 		.ascii	"map\000"
 3005 062a 08       		.byte	0x8
 3006 062b 04       		.byte	0x4
 3007 062c 0F060000 		.4byte	0x60f
 3008 0630 20       		.uleb128 0x20
 3009 0631 F4040000 		.4byte	.LASF107
 3010 0635 01       		.byte	0x1
 3011 0636 2A       		.byte	0x2a
 3012 0637 4D020000 		.4byte	0x24d
 3013 063b 05       		.uleb128 0x5
 3014 063c 03       		.byte	0x3
 3015 063d 00000000 		.4byte	currentDirection
 3016 0641 20       		.uleb128 0x20
 3017 0642 1E040000 		.4byte	.LASF108
 3018 0646 01       		.byte	0x1
 3019 0647 2B       		.byte	0x2b
 3020 0648 4D020000 		.4byte	0x24d
 3021 064c 05       		.uleb128 0x5
 3022 064d 03       		.byte	0x3
 3023 064e 00000000 		.4byte	previousDirection
 3024 0652 20       		.uleb128 0x20
 3025 0653 A4020000 		.4byte	.LASF109
 3026 0657 01       		.byte	0x1
 3027 0658 2C       		.byte	0x2c
 3028 0659 F4010000 		.4byte	0x1f4
 3029 065d 05       		.uleb128 0x5
 3030 065e 03       		.byte	0x3
 3031 065f 00000000 		.4byte	currentOrientation
 3032 0663 20       		.uleb128 0x20
 3033 0664 80030000 		.4byte	.LASF110
 3034 0668 01       		.byte	0x1
 3035 0669 2D       		.byte	0x2d
 3036 066a F4010000 		.4byte	0x1f4
 3037 066e 05       		.uleb128 0x5
 3038 066f 03       		.byte	0x3
 3039 0670 00000000 		.4byte	previousOrientation
 3040 0674 21       		.uleb128 0x21
 3041 0675 1C020000 		.4byte	0x21c
 3042 0679 85060000 		.4byte	0x685
 3043 067d 23       		.uleb128 0x23
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 64


 3044 067e 7D000000 		.4byte	0x7d
 3045 0682 1C01     		.2byte	0x11c
 3046 0684 00       		.byte	0
 3047 0685 20       		.uleb128 0x20
 3048 0686 16030000 		.4byte	.LASF83
 3049 068a 01       		.byte	0x1
 3050 068b 31       		.byte	0x31
 3051 068c 74060000 		.4byte	0x674
 3052 0690 05       		.uleb128 0x5
 3053 0691 03       		.byte	0x3
 3054 0692 00000000 		.4byte	instructionList
 3055 0696 1F       		.uleb128 0x1f
 3056 0697 733300   		.ascii	"s3\000"
 3057 069a 01       		.byte	0x1
 3058 069b 33       		.byte	0x33
 3059 069c 96000000 		.4byte	0x96
 3060 06a0 05       		.uleb128 0x5
 3061 06a1 03       		.byte	0x3
 3062 06a2 00000000 		.4byte	s3
 3063 06a6 1F       		.uleb128 0x1f
 3064 06a7 733400   		.ascii	"s4\000"
 3065 06aa 01       		.byte	0x1
 3066 06ab 33       		.byte	0x33
 3067 06ac 96000000 		.4byte	0x96
 3068 06b0 05       		.uleb128 0x5
 3069 06b1 03       		.byte	0x3
 3070 06b2 00000000 		.4byte	s4
 3071 06b6 1F       		.uleb128 0x1f
 3072 06b7 733500   		.ascii	"s5\000"
 3073 06ba 01       		.byte	0x1
 3074 06bb 33       		.byte	0x33
 3075 06bc 96000000 		.4byte	0x96
 3076 06c0 05       		.uleb128 0x5
 3077 06c1 03       		.byte	0x3
 3078 06c2 00000000 		.4byte	s5
 3079 06c6 1F       		.uleb128 0x1f
 3080 06c7 733600   		.ascii	"s6\000"
 3081 06ca 01       		.byte	0x1
 3082 06cb 33       		.byte	0x33
 3083 06cc 96000000 		.4byte	0x96
 3084 06d0 05       		.uleb128 0x5
 3085 06d1 03       		.byte	0x3
 3086 06d2 00000000 		.4byte	s6
 3087 06d6 20       		.uleb128 0x20
 3088 06d7 B6040000 		.4byte	.LASF111
 3089 06db 01       		.byte	0x1
 3090 06dc 38       		.byte	0x38
 3091 06dd AE000000 		.4byte	0xae
 3092 06e1 05       		.uleb128 0x5
 3093 06e2 03       		.byte	0x3
 3094 06e3 00000000 		.4byte	totalMilliseconds
 3095 06e7 20       		.uleb128 0x20
 3096 06e8 2C010000 		.4byte	.LASF112
 3097 06ec 01       		.byte	0x1
 3098 06ed 39       		.byte	0x39
 3099 06ee D2000000 		.4byte	0xd2
 3100 06f2 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 65


 3101 06f3 03       		.byte	0x3
 3102 06f4 00000000 		.4byte	totalDistance
 3103 06f8 21       		.uleb128 0x21
 3104 06f9 84000000 		.4byte	0x84
 3105 06fd 08070000 		.4byte	0x708
 3106 0701 22       		.uleb128 0x22
 3107 0702 7D000000 		.4byte	0x7d
 3108 0706 44       		.byte	0x44
 3109 0707 00       		.byte	0
 3110 0708 20       		.uleb128 0x20
 3111 0709 61000000 		.4byte	.LASF113
 3112 070d 01       		.byte	0x1
 3113 070e 3B       		.byte	0x3b
 3114 070f F8060000 		.4byte	0x6f8
 3115 0713 05       		.uleb128 0x5
 3116 0714 03       		.byte	0x3
 3117 0715 00000000 		.4byte	buffer
 3118 0719 20       		.uleb128 0x20
 3119 071a 9D010000 		.4byte	.LASF114
 3120 071e 01       		.byte	0x1
 3121 071f 3C       		.byte	0x3c
 3122 0720 68000000 		.4byte	0x68
 3123 0724 05       		.uleb128 0x5
 3124 0725 03       		.byte	0x3
 3125 0726 00000000 		.4byte	quadDec2Count
 3126 072a 20       		.uleb128 0x20
 3127 072b 76060000 		.4byte	.LASF115
 3128 072f 01       		.byte	0x1
 3129 0730 3D       		.byte	0x3d
 3130 0731 68000000 		.4byte	0x68
 3131 0735 05       		.uleb128 0x5
 3132 0736 03       		.byte	0x3
 3133 0737 00000000 		.4byte	timerInt
 3134 073b 20       		.uleb128 0x20
 3135 073c 14020000 		.4byte	.LASF116
 3136 0740 01       		.byte	0x1
 3137 0741 3E       		.byte	0x3e
 3138 0742 68000000 		.4byte	0x68
 3139 0746 05       		.uleb128 0x5
 3140 0747 03       		.byte	0x3
 3141 0748 00000000 		.4byte	keepLedOn
 3142 074c 20       		.uleb128 0x20
 3143 074d 20050000 		.4byte	.LASF117
 3144 0751 01       		.byte	0x1
 3145 0752 3F       		.byte	0x3f
 3146 0753 AE000000 		.4byte	0xae
 3147 0757 05       		.uleb128 0x5
 3148 0758 03       		.byte	0x3
 3149 0759 00000000 		.4byte	stopBuffer
 3150 075d 20       		.uleb128 0x20
 3151 075e 32030000 		.4byte	.LASF118
 3152 0762 01       		.byte	0x1
 3153 0763 BF       		.byte	0xbf
 3154 0764 D2000000 		.4byte	0xd2
 3155 0768 05       		.uleb128 0x5
 3156 0769 03       		.byte	0x3
 3157 076a 00000000 		.4byte	xBlocksize
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 66


 3158 076e 20       		.uleb128 0x20
 3159 076f 61040000 		.4byte	.LASF119
 3160 0773 01       		.byte	0x1
 3161 0774 C0       		.byte	0xc0
 3162 0775 D2000000 		.4byte	0xd2
 3163 0779 05       		.uleb128 0x5
 3164 077a 03       		.byte	0x3
 3165 077b 00000000 		.4byte	yBlocksize
 3166 077f 20       		.uleb128 0x20
 3167 0780 F3050000 		.4byte	.LASF120
 3168 0784 01       		.byte	0x1
 3169 0785 C1       		.byte	0xc1
 3170 0786 96000000 		.4byte	0x96
 3171 078a 05       		.uleb128 0x5
 3172 078b 03       		.byte	0x3
 3173 078c 00000000 		.4byte	currentRow
 3174 0790 20       		.uleb128 0x20
 3175 0791 63060000 		.4byte	.LASF121
 3176 0795 01       		.byte	0x1
 3177 0796 C2       		.byte	0xc2
 3178 0797 96000000 		.4byte	0x96
 3179 079b 05       		.uleb128 0x5
 3180 079c 03       		.byte	0x3
 3181 079d 00000000 		.4byte	currentCol
 3182 07a1 25       		.uleb128 0x25
 3183 07a2 52050000 		.4byte	.LASF122
 3184 07a6 01       		.byte	0x1
 3185 07a7 1501     		.2byte	0x115
 3186 07a9 96000000 		.4byte	0x96
 3187 07ad 05       		.uleb128 0x5
 3188 07ae 03       		.byte	0x3
 3189 07af 00000000 		.4byte	stoppedAfterTurn
 3190 07b3 25       		.uleb128 0x25
 3191 07b4 68020000 		.4byte	.LASF123
 3192 07b8 01       		.byte	0x1
 3193 07b9 1601     		.2byte	0x116
 3194 07bb 96000000 		.4byte	0x96
 3195 07bf 05       		.uleb128 0x5
 3196 07c0 03       		.byte	0x3
 3197 07c1 00000000 		.4byte	ignoreSensor
 3198 07c5 00       		.byte	0
 3199              		.section	.debug_abbrev,"",%progbits
 3200              	.Ldebug_abbrev0:
 3201 0000 01       		.uleb128 0x1
 3202 0001 11       		.uleb128 0x11
 3203 0002 01       		.byte	0x1
 3204 0003 25       		.uleb128 0x25
 3205 0004 0E       		.uleb128 0xe
 3206 0005 13       		.uleb128 0x13
 3207 0006 0B       		.uleb128 0xb
 3208 0007 03       		.uleb128 0x3
 3209 0008 0E       		.uleb128 0xe
 3210 0009 1B       		.uleb128 0x1b
 3211 000a 0E       		.uleb128 0xe
 3212 000b 55       		.uleb128 0x55
 3213 000c 17       		.uleb128 0x17
 3214 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 67


 3215 000e 01       		.uleb128 0x1
 3216 000f 10       		.uleb128 0x10
 3217 0010 17       		.uleb128 0x17
 3218 0011 00       		.byte	0
 3219 0012 00       		.byte	0
 3220 0013 02       		.uleb128 0x2
 3221 0014 24       		.uleb128 0x24
 3222 0015 00       		.byte	0
 3223 0016 0B       		.uleb128 0xb
 3224 0017 0B       		.uleb128 0xb
 3225 0018 3E       		.uleb128 0x3e
 3226 0019 0B       		.uleb128 0xb
 3227 001a 03       		.uleb128 0x3
 3228 001b 0E       		.uleb128 0xe
 3229 001c 00       		.byte	0
 3230 001d 00       		.byte	0
 3231 001e 03       		.uleb128 0x3
 3232 001f 16       		.uleb128 0x16
 3233 0020 00       		.byte	0
 3234 0021 03       		.uleb128 0x3
 3235 0022 0E       		.uleb128 0xe
 3236 0023 3A       		.uleb128 0x3a
 3237 0024 0B       		.uleb128 0xb
 3238 0025 3B       		.uleb128 0x3b
 3239 0026 0B       		.uleb128 0xb
 3240 0027 49       		.uleb128 0x49
 3241 0028 13       		.uleb128 0x13
 3242 0029 00       		.byte	0
 3243 002a 00       		.byte	0
 3244 002b 04       		.uleb128 0x4
 3245 002c 24       		.uleb128 0x24
 3246 002d 00       		.byte	0
 3247 002e 0B       		.uleb128 0xb
 3248 002f 0B       		.uleb128 0xb
 3249 0030 3E       		.uleb128 0x3e
 3250 0031 0B       		.uleb128 0xb
 3251 0032 03       		.uleb128 0x3
 3252 0033 08       		.uleb128 0x8
 3253 0034 00       		.byte	0
 3254 0035 00       		.byte	0
 3255 0036 05       		.uleb128 0x5
 3256 0037 16       		.uleb128 0x16
 3257 0038 00       		.byte	0
 3258 0039 03       		.uleb128 0x3
 3259 003a 0E       		.uleb128 0xe
 3260 003b 3A       		.uleb128 0x3a
 3261 003c 0B       		.uleb128 0xb
 3262 003d 3B       		.uleb128 0x3b
 3263 003e 05       		.uleb128 0x5
 3264 003f 49       		.uleb128 0x49
 3265 0040 13       		.uleb128 0x13
 3266 0041 00       		.byte	0
 3267 0042 00       		.byte	0
 3268 0043 06       		.uleb128 0x6
 3269 0044 13       		.uleb128 0x13
 3270 0045 01       		.byte	0x1
 3271 0046 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 68


 3272 0047 0E       		.uleb128 0xe
 3273 0048 0B       		.uleb128 0xb
 3274 0049 0B       		.uleb128 0xb
 3275 004a 3A       		.uleb128 0x3a
 3276 004b 0B       		.uleb128 0xb
 3277 004c 3B       		.uleb128 0x3b
 3278 004d 0B       		.uleb128 0xb
 3279 004e 01       		.uleb128 0x1
 3280 004f 13       		.uleb128 0x13
 3281 0050 00       		.byte	0
 3282 0051 00       		.byte	0
 3283 0052 07       		.uleb128 0x7
 3284 0053 0D       		.uleb128 0xd
 3285 0054 00       		.byte	0
 3286 0055 03       		.uleb128 0x3
 3287 0056 0E       		.uleb128 0xe
 3288 0057 3A       		.uleb128 0x3a
 3289 0058 0B       		.uleb128 0xb
 3290 0059 3B       		.uleb128 0x3b
 3291 005a 0B       		.uleb128 0xb
 3292 005b 49       		.uleb128 0x49
 3293 005c 13       		.uleb128 0x13
 3294 005d 38       		.uleb128 0x38
 3295 005e 0B       		.uleb128 0xb
 3296 005f 00       		.byte	0
 3297 0060 00       		.byte	0
 3298 0061 08       		.uleb128 0x8
 3299 0062 04       		.uleb128 0x4
 3300 0063 01       		.byte	0x1
 3301 0064 03       		.uleb128 0x3
 3302 0065 0E       		.uleb128 0xe
 3303 0066 0B       		.uleb128 0xb
 3304 0067 0B       		.uleb128 0xb
 3305 0068 49       		.uleb128 0x49
 3306 0069 13       		.uleb128 0x13
 3307 006a 3A       		.uleb128 0x3a
 3308 006b 0B       		.uleb128 0xb
 3309 006c 3B       		.uleb128 0x3b
 3310 006d 0B       		.uleb128 0xb
 3311 006e 01       		.uleb128 0x1
 3312 006f 13       		.uleb128 0x13
 3313 0070 00       		.byte	0
 3314 0071 00       		.byte	0
 3315 0072 09       		.uleb128 0x9
 3316 0073 28       		.uleb128 0x28
 3317 0074 00       		.byte	0
 3318 0075 03       		.uleb128 0x3
 3319 0076 0E       		.uleb128 0xe
 3320 0077 1C       		.uleb128 0x1c
 3321 0078 0B       		.uleb128 0xb
 3322 0079 00       		.byte	0
 3323 007a 00       		.byte	0
 3324 007b 0A       		.uleb128 0xa
 3325 007c 28       		.uleb128 0x28
 3326 007d 00       		.byte	0
 3327 007e 03       		.uleb128 0x3
 3328 007f 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 69


 3329 0080 1C       		.uleb128 0x1c
 3330 0081 0B       		.uleb128 0xb
 3331 0082 00       		.byte	0
 3332 0083 00       		.byte	0
 3333 0084 0B       		.uleb128 0xb
 3334 0085 2E       		.uleb128 0x2e
 3335 0086 01       		.byte	0x1
 3336 0087 3F       		.uleb128 0x3f
 3337 0088 19       		.uleb128 0x19
 3338 0089 03       		.uleb128 0x3
 3339 008a 0E       		.uleb128 0xe
 3340 008b 3A       		.uleb128 0x3a
 3341 008c 0B       		.uleb128 0xb
 3342 008d 3B       		.uleb128 0x3b
 3343 008e 0B       		.uleb128 0xb
 3344 008f 27       		.uleb128 0x27
 3345 0090 19       		.uleb128 0x19
 3346 0091 11       		.uleb128 0x11
 3347 0092 01       		.uleb128 0x1
 3348 0093 12       		.uleb128 0x12
 3349 0094 06       		.uleb128 0x6
 3350 0095 40       		.uleb128 0x40
 3351 0096 18       		.uleb128 0x18
 3352 0097 9642     		.uleb128 0x2116
 3353 0099 19       		.uleb128 0x19
 3354 009a 01       		.uleb128 0x1
 3355 009b 13       		.uleb128 0x13
 3356 009c 00       		.byte	0
 3357 009d 00       		.byte	0
 3358 009e 0C       		.uleb128 0xc
 3359 009f 0B       		.uleb128 0xb
 3360 00a0 01       		.byte	0x1
 3361 00a1 11       		.uleb128 0x11
 3362 00a2 01       		.uleb128 0x1
 3363 00a3 12       		.uleb128 0x12
 3364 00a4 06       		.uleb128 0x6
 3365 00a5 00       		.byte	0
 3366 00a6 00       		.byte	0
 3367 00a7 0D       		.uleb128 0xd
 3368 00a8 34       		.uleb128 0x34
 3369 00a9 00       		.byte	0
 3370 00aa 03       		.uleb128 0x3
 3371 00ab 0E       		.uleb128 0xe
 3372 00ac 3A       		.uleb128 0x3a
 3373 00ad 0B       		.uleb128 0xb
 3374 00ae 3B       		.uleb128 0x3b
 3375 00af 0B       		.uleb128 0xb
 3376 00b0 49       		.uleb128 0x49
 3377 00b1 13       		.uleb128 0x13
 3378 00b2 02       		.uleb128 0x2
 3379 00b3 18       		.uleb128 0x18
 3380 00b4 00       		.byte	0
 3381 00b5 00       		.byte	0
 3382 00b6 0E       		.uleb128 0xe
 3383 00b7 2E       		.uleb128 0x2e
 3384 00b8 00       		.byte	0
 3385 00b9 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 70


 3386 00ba 19       		.uleb128 0x19
 3387 00bb 03       		.uleb128 0x3
 3388 00bc 0E       		.uleb128 0xe
 3389 00bd 3A       		.uleb128 0x3a
 3390 00be 0B       		.uleb128 0xb
 3391 00bf 3B       		.uleb128 0x3b
 3392 00c0 0B       		.uleb128 0xb
 3393 00c1 27       		.uleb128 0x27
 3394 00c2 19       		.uleb128 0x19
 3395 00c3 11       		.uleb128 0x11
 3396 00c4 01       		.uleb128 0x1
 3397 00c5 12       		.uleb128 0x12
 3398 00c6 06       		.uleb128 0x6
 3399 00c7 40       		.uleb128 0x40
 3400 00c8 18       		.uleb128 0x18
 3401 00c9 9742     		.uleb128 0x2117
 3402 00cb 19       		.uleb128 0x19
 3403 00cc 00       		.byte	0
 3404 00cd 00       		.byte	0
 3405 00ce 0F       		.uleb128 0xf
 3406 00cf 2E       		.uleb128 0x2e
 3407 00d0 00       		.byte	0
 3408 00d1 3F       		.uleb128 0x3f
 3409 00d2 19       		.uleb128 0x19
 3410 00d3 03       		.uleb128 0x3
 3411 00d4 0E       		.uleb128 0xe
 3412 00d5 3A       		.uleb128 0x3a
 3413 00d6 0B       		.uleb128 0xb
 3414 00d7 3B       		.uleb128 0x3b
 3415 00d8 0B       		.uleb128 0xb
 3416 00d9 27       		.uleb128 0x27
 3417 00da 19       		.uleb128 0x19
 3418 00db 11       		.uleb128 0x11
 3419 00dc 01       		.uleb128 0x1
 3420 00dd 12       		.uleb128 0x12
 3421 00de 06       		.uleb128 0x6
 3422 00df 40       		.uleb128 0x40
 3423 00e0 18       		.uleb128 0x18
 3424 00e1 9642     		.uleb128 0x2116
 3425 00e3 19       		.uleb128 0x19
 3426 00e4 00       		.byte	0
 3427 00e5 00       		.byte	0
 3428 00e6 10       		.uleb128 0x10
 3429 00e7 2E       		.uleb128 0x2e
 3430 00e8 00       		.byte	0
 3431 00e9 3F       		.uleb128 0x3f
 3432 00ea 19       		.uleb128 0x19
 3433 00eb 03       		.uleb128 0x3
 3434 00ec 0E       		.uleb128 0xe
 3435 00ed 3A       		.uleb128 0x3a
 3436 00ee 0B       		.uleb128 0xb
 3437 00ef 3B       		.uleb128 0x3b
 3438 00f0 0B       		.uleb128 0xb
 3439 00f1 49       		.uleb128 0x49
 3440 00f2 13       		.uleb128 0x13
 3441 00f3 11       		.uleb128 0x11
 3442 00f4 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 71


 3443 00f5 12       		.uleb128 0x12
 3444 00f6 06       		.uleb128 0x6
 3445 00f7 40       		.uleb128 0x40
 3446 00f8 18       		.uleb128 0x18
 3447 00f9 9642     		.uleb128 0x2116
 3448 00fb 19       		.uleb128 0x19
 3449 00fc 00       		.byte	0
 3450 00fd 00       		.byte	0
 3451 00fe 11       		.uleb128 0x11
 3452 00ff 2E       		.uleb128 0x2e
 3453 0100 01       		.byte	0x1
 3454 0101 3F       		.uleb128 0x3f
 3455 0102 19       		.uleb128 0x19
 3456 0103 03       		.uleb128 0x3
 3457 0104 0E       		.uleb128 0xe
 3458 0105 3A       		.uleb128 0x3a
 3459 0106 0B       		.uleb128 0xb
 3460 0107 3B       		.uleb128 0x3b
 3461 0108 0B       		.uleb128 0xb
 3462 0109 27       		.uleb128 0x27
 3463 010a 19       		.uleb128 0x19
 3464 010b 49       		.uleb128 0x49
 3465 010c 13       		.uleb128 0x13
 3466 010d 11       		.uleb128 0x11
 3467 010e 01       		.uleb128 0x1
 3468 010f 12       		.uleb128 0x12
 3469 0110 06       		.uleb128 0x6
 3470 0111 40       		.uleb128 0x40
 3471 0112 18       		.uleb128 0x18
 3472 0113 9642     		.uleb128 0x2116
 3473 0115 19       		.uleb128 0x19
 3474 0116 01       		.uleb128 0x1
 3475 0117 13       		.uleb128 0x13
 3476 0118 00       		.byte	0
 3477 0119 00       		.byte	0
 3478 011a 12       		.uleb128 0x12
 3479 011b 05       		.uleb128 0x5
 3480 011c 00       		.byte	0
 3481 011d 03       		.uleb128 0x3
 3482 011e 0E       		.uleb128 0xe
 3483 011f 3A       		.uleb128 0x3a
 3484 0120 0B       		.uleb128 0xb
 3485 0121 3B       		.uleb128 0x3b
 3486 0122 0B       		.uleb128 0xb
 3487 0123 49       		.uleb128 0x49
 3488 0124 13       		.uleb128 0x13
 3489 0125 02       		.uleb128 0x2
 3490 0126 18       		.uleb128 0x18
 3491 0127 00       		.byte	0
 3492 0128 00       		.byte	0
 3493 0129 13       		.uleb128 0x13
 3494 012a 34       		.uleb128 0x34
 3495 012b 00       		.byte	0
 3496 012c 03       		.uleb128 0x3
 3497 012d 08       		.uleb128 0x8
 3498 012e 3A       		.uleb128 0x3a
 3499 012f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 72


 3500 0130 3B       		.uleb128 0x3b
 3501 0131 0B       		.uleb128 0xb
 3502 0132 49       		.uleb128 0x49
 3503 0133 13       		.uleb128 0x13
 3504 0134 02       		.uleb128 0x2
 3505 0135 18       		.uleb128 0x18
 3506 0136 00       		.byte	0
 3507 0137 00       		.byte	0
 3508 0138 14       		.uleb128 0x14
 3509 0139 2E       		.uleb128 0x2e
 3510 013a 00       		.byte	0
 3511 013b 3F       		.uleb128 0x3f
 3512 013c 19       		.uleb128 0x19
 3513 013d 03       		.uleb128 0x3
 3514 013e 0E       		.uleb128 0xe
 3515 013f 3A       		.uleb128 0x3a
 3516 0140 0B       		.uleb128 0xb
 3517 0141 3B       		.uleb128 0x3b
 3518 0142 0B       		.uleb128 0xb
 3519 0143 11       		.uleb128 0x11
 3520 0144 01       		.uleb128 0x1
 3521 0145 12       		.uleb128 0x12
 3522 0146 06       		.uleb128 0x6
 3523 0147 40       		.uleb128 0x40
 3524 0148 18       		.uleb128 0x18
 3525 0149 9742     		.uleb128 0x2117
 3526 014b 19       		.uleb128 0x19
 3527 014c 00       		.byte	0
 3528 014d 00       		.byte	0
 3529 014e 15       		.uleb128 0x15
 3530 014f 2E       		.uleb128 0x2e
 3531 0150 01       		.byte	0x1
 3532 0151 3F       		.uleb128 0x3f
 3533 0152 19       		.uleb128 0x19
 3534 0153 03       		.uleb128 0x3
 3535 0154 0E       		.uleb128 0xe
 3536 0155 3A       		.uleb128 0x3a
 3537 0156 0B       		.uleb128 0xb
 3538 0157 3B       		.uleb128 0x3b
 3539 0158 0B       		.uleb128 0xb
 3540 0159 49       		.uleb128 0x49
 3541 015a 13       		.uleb128 0x13
 3542 015b 11       		.uleb128 0x11
 3543 015c 01       		.uleb128 0x1
 3544 015d 12       		.uleb128 0x12
 3545 015e 06       		.uleb128 0x6
 3546 015f 40       		.uleb128 0x40
 3547 0160 18       		.uleb128 0x18
 3548 0161 9742     		.uleb128 0x2117
 3549 0163 19       		.uleb128 0x19
 3550 0164 01       		.uleb128 0x1
 3551 0165 13       		.uleb128 0x13
 3552 0166 00       		.byte	0
 3553 0167 00       		.byte	0
 3554 0168 16       		.uleb128 0x16
 3555 0169 2E       		.uleb128 0x2e
 3556 016a 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 73


 3557 016b 3F       		.uleb128 0x3f
 3558 016c 19       		.uleb128 0x19
 3559 016d 03       		.uleb128 0x3
 3560 016e 0E       		.uleb128 0xe
 3561 016f 3A       		.uleb128 0x3a
 3562 0170 0B       		.uleb128 0xb
 3563 0171 3B       		.uleb128 0x3b
 3564 0172 05       		.uleb128 0x5
 3565 0173 49       		.uleb128 0x49
 3566 0174 13       		.uleb128 0x13
 3567 0175 11       		.uleb128 0x11
 3568 0176 01       		.uleb128 0x1
 3569 0177 12       		.uleb128 0x12
 3570 0178 06       		.uleb128 0x6
 3571 0179 40       		.uleb128 0x40
 3572 017a 18       		.uleb128 0x18
 3573 017b 9642     		.uleb128 0x2116
 3574 017d 19       		.uleb128 0x19
 3575 017e 01       		.uleb128 0x1
 3576 017f 13       		.uleb128 0x13
 3577 0180 00       		.byte	0
 3578 0181 00       		.byte	0
 3579 0182 17       		.uleb128 0x17
 3580 0183 34       		.uleb128 0x34
 3581 0184 00       		.byte	0
 3582 0185 03       		.uleb128 0x3
 3583 0186 0E       		.uleb128 0xe
 3584 0187 3A       		.uleb128 0x3a
 3585 0188 0B       		.uleb128 0xb
 3586 0189 3B       		.uleb128 0x3b
 3587 018a 05       		.uleb128 0x5
 3588 018b 49       		.uleb128 0x49
 3589 018c 13       		.uleb128 0x13
 3590 018d 02       		.uleb128 0x2
 3591 018e 18       		.uleb128 0x18
 3592 018f 00       		.byte	0
 3593 0190 00       		.byte	0
 3594 0191 18       		.uleb128 0x18
 3595 0192 2E       		.uleb128 0x2e
 3596 0193 01       		.byte	0x1
 3597 0194 3F       		.uleb128 0x3f
 3598 0195 19       		.uleb128 0x19
 3599 0196 03       		.uleb128 0x3
 3600 0197 0E       		.uleb128 0xe
 3601 0198 3A       		.uleb128 0x3a
 3602 0199 0B       		.uleb128 0xb
 3603 019a 3B       		.uleb128 0x3b
 3604 019b 05       		.uleb128 0x5
 3605 019c 27       		.uleb128 0x27
 3606 019d 19       		.uleb128 0x19
 3607 019e 11       		.uleb128 0x11
 3608 019f 01       		.uleb128 0x1
 3609 01a0 12       		.uleb128 0x12
 3610 01a1 06       		.uleb128 0x6
 3611 01a2 40       		.uleb128 0x40
 3612 01a3 18       		.uleb128 0x18
 3613 01a4 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 74


 3614 01a6 19       		.uleb128 0x19
 3615 01a7 01       		.uleb128 0x1
 3616 01a8 13       		.uleb128 0x13
 3617 01a9 00       		.byte	0
 3618 01aa 00       		.byte	0
 3619 01ab 19       		.uleb128 0x19
 3620 01ac 05       		.uleb128 0x5
 3621 01ad 00       		.byte	0
 3622 01ae 03       		.uleb128 0x3
 3623 01af 0E       		.uleb128 0xe
 3624 01b0 3A       		.uleb128 0x3a
 3625 01b1 0B       		.uleb128 0xb
 3626 01b2 3B       		.uleb128 0x3b
 3627 01b3 05       		.uleb128 0x5
 3628 01b4 49       		.uleb128 0x49
 3629 01b5 13       		.uleb128 0x13
 3630 01b6 02       		.uleb128 0x2
 3631 01b7 18       		.uleb128 0x18
 3632 01b8 00       		.byte	0
 3633 01b9 00       		.byte	0
 3634 01ba 1A       		.uleb128 0x1a
 3635 01bb 34       		.uleb128 0x34
 3636 01bc 00       		.byte	0
 3637 01bd 03       		.uleb128 0x3
 3638 01be 08       		.uleb128 0x8
 3639 01bf 3A       		.uleb128 0x3a
 3640 01c0 0B       		.uleb128 0xb
 3641 01c1 3B       		.uleb128 0x3b
 3642 01c2 05       		.uleb128 0x5
 3643 01c3 49       		.uleb128 0x49
 3644 01c4 13       		.uleb128 0x13
 3645 01c5 02       		.uleb128 0x2
 3646 01c6 18       		.uleb128 0x18
 3647 01c7 00       		.byte	0
 3648 01c8 00       		.byte	0
 3649 01c9 1B       		.uleb128 0x1b
 3650 01ca 0F       		.uleb128 0xf
 3651 01cb 00       		.byte	0
 3652 01cc 0B       		.uleb128 0xb
 3653 01cd 0B       		.uleb128 0xb
 3654 01ce 49       		.uleb128 0x49
 3655 01cf 13       		.uleb128 0x13
 3656 01d0 00       		.byte	0
 3657 01d1 00       		.byte	0
 3658 01d2 1C       		.uleb128 0x1c
 3659 01d3 2E       		.uleb128 0x2e
 3660 01d4 00       		.byte	0
 3661 01d5 3F       		.uleb128 0x3f
 3662 01d6 19       		.uleb128 0x19
 3663 01d7 03       		.uleb128 0x3
 3664 01d8 0E       		.uleb128 0xe
 3665 01d9 3A       		.uleb128 0x3a
 3666 01da 0B       		.uleb128 0xb
 3667 01db 3B       		.uleb128 0x3b
 3668 01dc 05       		.uleb128 0x5
 3669 01dd 11       		.uleb128 0x11
 3670 01de 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 75


 3671 01df 12       		.uleb128 0x12
 3672 01e0 06       		.uleb128 0x6
 3673 01e1 40       		.uleb128 0x40
 3674 01e2 18       		.uleb128 0x18
 3675 01e3 9642     		.uleb128 0x2116
 3676 01e5 19       		.uleb128 0x19
 3677 01e6 00       		.byte	0
 3678 01e7 00       		.byte	0
 3679 01e8 1D       		.uleb128 0x1d
 3680 01e9 34       		.uleb128 0x34
 3681 01ea 00       		.byte	0
 3682 01eb 03       		.uleb128 0x3
 3683 01ec 0E       		.uleb128 0xe
 3684 01ed 3A       		.uleb128 0x3a
 3685 01ee 0B       		.uleb128 0xb
 3686 01ef 3B       		.uleb128 0x3b
 3687 01f0 05       		.uleb128 0x5
 3688 01f1 49       		.uleb128 0x49
 3689 01f2 13       		.uleb128 0x13
 3690 01f3 3F       		.uleb128 0x3f
 3691 01f4 19       		.uleb128 0x19
 3692 01f5 3C       		.uleb128 0x3c
 3693 01f6 19       		.uleb128 0x19
 3694 01f7 00       		.byte	0
 3695 01f8 00       		.byte	0
 3696 01f9 1E       		.uleb128 0x1e
 3697 01fa 35       		.uleb128 0x35
 3698 01fb 00       		.byte	0
 3699 01fc 49       		.uleb128 0x49
 3700 01fd 13       		.uleb128 0x13
 3701 01fe 00       		.byte	0
 3702 01ff 00       		.byte	0
 3703 0200 1F       		.uleb128 0x1f
 3704 0201 34       		.uleb128 0x34
 3705 0202 00       		.byte	0
 3706 0203 03       		.uleb128 0x3
 3707 0204 08       		.uleb128 0x8
 3708 0205 3A       		.uleb128 0x3a
 3709 0206 0B       		.uleb128 0xb
 3710 0207 3B       		.uleb128 0x3b
 3711 0208 0B       		.uleb128 0xb
 3712 0209 49       		.uleb128 0x49
 3713 020a 13       		.uleb128 0x13
 3714 020b 3F       		.uleb128 0x3f
 3715 020c 19       		.uleb128 0x19
 3716 020d 02       		.uleb128 0x2
 3717 020e 18       		.uleb128 0x18
 3718 020f 00       		.byte	0
 3719 0210 00       		.byte	0
 3720 0211 20       		.uleb128 0x20
 3721 0212 34       		.uleb128 0x34
 3722 0213 00       		.byte	0
 3723 0214 03       		.uleb128 0x3
 3724 0215 0E       		.uleb128 0xe
 3725 0216 3A       		.uleb128 0x3a
 3726 0217 0B       		.uleb128 0xb
 3727 0218 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 76


 3728 0219 0B       		.uleb128 0xb
 3729 021a 49       		.uleb128 0x49
 3730 021b 13       		.uleb128 0x13
 3731 021c 3F       		.uleb128 0x3f
 3732 021d 19       		.uleb128 0x19
 3733 021e 02       		.uleb128 0x2
 3734 021f 18       		.uleb128 0x18
 3735 0220 00       		.byte	0
 3736 0221 00       		.byte	0
 3737 0222 21       		.uleb128 0x21
 3738 0223 01       		.uleb128 0x1
 3739 0224 01       		.byte	0x1
 3740 0225 49       		.uleb128 0x49
 3741 0226 13       		.uleb128 0x13
 3742 0227 01       		.uleb128 0x1
 3743 0228 13       		.uleb128 0x13
 3744 0229 00       		.byte	0
 3745 022a 00       		.byte	0
 3746 022b 22       		.uleb128 0x22
 3747 022c 21       		.uleb128 0x21
 3748 022d 00       		.byte	0
 3749 022e 49       		.uleb128 0x49
 3750 022f 13       		.uleb128 0x13
 3751 0230 2F       		.uleb128 0x2f
 3752 0231 0B       		.uleb128 0xb
 3753 0232 00       		.byte	0
 3754 0233 00       		.byte	0
 3755 0234 23       		.uleb128 0x23
 3756 0235 21       		.uleb128 0x21
 3757 0236 00       		.byte	0
 3758 0237 49       		.uleb128 0x49
 3759 0238 13       		.uleb128 0x13
 3760 0239 2F       		.uleb128 0x2f
 3761 023a 05       		.uleb128 0x5
 3762 023b 00       		.byte	0
 3763 023c 00       		.byte	0
 3764 023d 24       		.uleb128 0x24
 3765 023e 34       		.uleb128 0x34
 3766 023f 00       		.byte	0
 3767 0240 03       		.uleb128 0x3
 3768 0241 08       		.uleb128 0x8
 3769 0242 3A       		.uleb128 0x3a
 3770 0243 0B       		.uleb128 0xb
 3771 0244 3B       		.uleb128 0x3b
 3772 0245 0B       		.uleb128 0xb
 3773 0246 49       		.uleb128 0x49
 3774 0247 13       		.uleb128 0x13
 3775 0248 3F       		.uleb128 0x3f
 3776 0249 19       		.uleb128 0x19
 3777 024a 3C       		.uleb128 0x3c
 3778 024b 19       		.uleb128 0x19
 3779 024c 00       		.byte	0
 3780 024d 00       		.byte	0
 3781 024e 25       		.uleb128 0x25
 3782 024f 34       		.uleb128 0x34
 3783 0250 00       		.byte	0
 3784 0251 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 77


 3785 0252 0E       		.uleb128 0xe
 3786 0253 3A       		.uleb128 0x3a
 3787 0254 0B       		.uleb128 0xb
 3788 0255 3B       		.uleb128 0x3b
 3789 0256 05       		.uleb128 0x5
 3790 0257 49       		.uleb128 0x49
 3791 0258 13       		.uleb128 0x13
 3792 0259 3F       		.uleb128 0x3f
 3793 025a 19       		.uleb128 0x19
 3794 025b 02       		.uleb128 0x2
 3795 025c 18       		.uleb128 0x18
 3796 025d 00       		.byte	0
 3797 025e 00       		.byte	0
 3798 025f 00       		.byte	0
 3799              		.section	.debug_aranges,"",%progbits
 3800 0000 7C000000 		.4byte	0x7c
 3801 0004 0200     		.2byte	0x2
 3802 0006 00000000 		.4byte	.Ldebug_info0
 3803 000a 04       		.byte	0x4
 3804 000b 00       		.byte	0
 3805 000c 0000     		.2byte	0
 3806 000e 0000     		.2byte	0
 3807 0010 00000000 		.4byte	.LFB64
 3808 0014 F4000000 		.4byte	.LFE64-.LFB64
 3809 0018 00000000 		.4byte	.LFB65
 3810 001c 18000000 		.4byte	.LFE65-.LFB65
 3811 0020 00000000 		.4byte	.LFB66
 3812 0024 18000000 		.4byte	.LFE66-.LFB66
 3813 0028 00000000 		.4byte	.LFB67
 3814 002c 18000000 		.4byte	.LFE67-.LFB67
 3815 0030 00000000 		.4byte	.LFB68
 3816 0034 18000000 		.4byte	.LFE68-.LFB68
 3817 0038 00000000 		.4byte	.LFB69
 3818 003c 38000000 		.4byte	.LFE69-.LFB69
 3819 0040 00000000 		.4byte	.LFB70
 3820 0044 94000000 		.4byte	.LFE70-.LFB70
 3821 0048 00000000 		.4byte	.LFB71
 3822 004c 54000000 		.4byte	.LFE71-.LFB71
 3823 0050 00000000 		.4byte	.LFB72
 3824 0054 34000000 		.4byte	.LFE72-.LFB72
 3825 0058 00000000 		.4byte	.LFB73
 3826 005c 98040000 		.4byte	.LFE73-.LFB73
 3827 0060 00000000 		.4byte	.LFB74
 3828 0064 18030000 		.4byte	.LFE74-.LFB74
 3829 0068 00000000 		.4byte	.LFB75
 3830 006c 84000000 		.4byte	.LFE75-.LFB75
 3831 0070 00000000 		.4byte	.LFB76
 3832 0074 94000000 		.4byte	.LFE76-.LFB76
 3833 0078 00000000 		.4byte	0
 3834 007c 00000000 		.4byte	0
 3835              		.section	.debug_ranges,"",%progbits
 3836              	.Ldebug_ranges0:
 3837 0000 00000000 		.4byte	.LFB64
 3838 0004 F4000000 		.4byte	.LFE64
 3839 0008 00000000 		.4byte	.LFB65
 3840 000c 18000000 		.4byte	.LFE65
 3841 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 78


 3842 0014 18000000 		.4byte	.LFE66
 3843 0018 00000000 		.4byte	.LFB67
 3844 001c 18000000 		.4byte	.LFE67
 3845 0020 00000000 		.4byte	.LFB68
 3846 0024 18000000 		.4byte	.LFE68
 3847 0028 00000000 		.4byte	.LFB69
 3848 002c 38000000 		.4byte	.LFE69
 3849 0030 00000000 		.4byte	.LFB70
 3850 0034 94000000 		.4byte	.LFE70
 3851 0038 00000000 		.4byte	.LFB71
 3852 003c 54000000 		.4byte	.LFE71
 3853 0040 00000000 		.4byte	.LFB72
 3854 0044 34000000 		.4byte	.LFE72
 3855 0048 00000000 		.4byte	.LFB73
 3856 004c 98040000 		.4byte	.LFE73
 3857 0050 00000000 		.4byte	.LFB74
 3858 0054 18030000 		.4byte	.LFE74
 3859 0058 00000000 		.4byte	.LFB75
 3860 005c 84000000 		.4byte	.LFE75
 3861 0060 00000000 		.4byte	.LFB76
 3862 0064 94000000 		.4byte	.LFE76
 3863 0068 00000000 		.4byte	0
 3864 006c 00000000 		.4byte	0
 3865              		.section	.debug_line,"",%progbits
 3866              	.Ldebug_line0:
 3867 0000 4B040000 		.section	.debug_str,"MS",%progbits,1
 3867      02007001 
 3867      00000201 
 3867      FB0E0D00 
 3867      01010101 
 3868              	.LASF52:
 3869 0000 64697265 		.ascii	"direction\000"
 3869      6374696F 
 3869      6E00
 3870              	.LASF66:
 3871 000a 466F7277 		.ascii	"ForwardAfterTurn\000"
 3871      61726441 
 3871      66746572 
 3871      5475726E 
 3871      00
 3872              	.LASF45:
 3873 001b 496E7374 		.ascii	"InstructionDirection\000"
 3873      72756374 
 3873      696F6E44 
 3873      69726563 
 3873      74696F6E 
 3874              	.LASF55:
 3875 0030 44697265 		.ascii	"DirectionState\000"
 3875      6374696F 
 3875      6E537461 
 3875      746500
 3876              	.LASF125:
 3877 003f 6D61696E 		.ascii	"main.c\000"
 3877      2E6300
 3878              	.LASF40:
 3879 0046 77616974 		.ascii	"waitForTurnRight\000"
 3879      466F7254 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 79


 3879      75726E52 
 3879      69676874 
 3879      00
 3880              	.LASF79:
 3881 0057 626C6F63 		.ascii	"blocksize\000"
 3881      6B73697A 
 3881      6500
 3882              	.LASF113:
 3883 0061 62756666 		.ascii	"buffer\000"
 3883      657200
 3884              	.LASF8:
 3885 0068 756E7369 		.ascii	"unsigned int\000"
 3885      676E6564 
 3885      20696E74 
 3885      00
 3886              	.LASF12:
 3887 0075 5F5F696E 		.ascii	"__int32_t\000"
 3887      7433325F 
 3887      7400
 3888              	.LASF18:
 3889 007f 696E7431 		.ascii	"int16\000"
 3889      3600
 3890              	.LASF104:
 3891 0085 73797374 		.ascii	"system_state\000"
 3891      656D5F73 
 3891      74617465 
 3891      00
 3892              	.LASF124:
 3893 0092 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3893      43313120 
 3893      352E342E 
 3893      31203230 
 3893      31363036 
 3894 00c5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3894      20726576 
 3894      6973696F 
 3894      6E203233 
 3894      37373135 
 3895 00f8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3895      66756E63 
 3895      74696F6E 
 3895      2D736563 
 3895      74696F6E 
 3896              	.LASF71:
 3897 0120 53365F44 		.ascii	"S6_DETECTED\000"
 3897      45544543 
 3897      54454400 
 3898              	.LASF112:
 3899 012c 746F7461 		.ascii	"totalDistance\000"
 3899      6C446973 
 3899      74616E63 
 3899      6500
 3900              	.LASF34:
 3901 013a 67325F78 		.ascii	"g2_xpos\000"
 3901      706F7300 
 3902              	.LASF82:
 3903 0142 6E756D53 		.ascii	"numSteps\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 80


 3903      74657073 
 3903      00
 3904              	.LASF99:
 3905 014b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3905      5F72665F 
 3905      7472616E 
 3905      736D6973 
 3905      73696F6E 
 3906              	.LASF106:
 3907 0167 63757272 		.ascii	"currentRobotOrientation\000"
 3907      656E7452 
 3907      6F626F74 
 3907      4F726965 
 3907      6E746174 
 3908              	.LASF84:
 3909 017f 52657365 		.ascii	"ResetSensorFlags\000"
 3909      7453656E 
 3909      736F7246 
 3909      6C616773 
 3909      00
 3910              	.LASF37:
 3911 0190 67325F64 		.ascii	"g2_direction\000"
 3911      69726563 
 3911      74696F6E 
 3911      00
 3912              	.LASF114:
 3913 019d 71756164 		.ascii	"quadDec2Count\000"
 3913      44656332 
 3913      436F756E 
 3913      7400
 3914              	.LASF19:
 3915 01ab 666C6F61 		.ascii	"float\000"
 3915      7400
 3916              	.LASF103:
 3917 01b1 75736242 		.ascii	"usbBuffer\000"
 3917      75666665 
 3917      7200
 3918              	.LASF81:
 3919 01bb 636F756E 		.ascii	"count\000"
 3919      7400
 3920              	.LASF22:
 3921 01c1 696E6465 		.ascii	"index\000"
 3921      7800
 3922              	.LASF7:
 3923 01c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 3923      206C6F6E 
 3923      6720756E 
 3923      7369676E 
 3923      65642069 
 3924              	.LASF96:
 3925 01de 666C6167 		.ascii	"flag_packet\000"
 3925      5F706163 
 3925      6B657400 
 3926              	.LASF85:
 3927 01ea 53657452 		.ascii	"SetRobotMovement\000"
 3927      6F626F74 
 3927      4D6F7665 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 81


 3927      6D656E74 
 3927      00
 3928              	.LASF72:
 3929 01fb 54494D45 		.ascii	"TIMER_FINISH\000"
 3929      525F4649 
 3929      4E495348 
 3929      00
 3930              	.LASF76:
 3931 0208 4765744E 		.ascii	"GetNextStep\000"
 3931      65787453 
 3931      74657000 
 3932              	.LASF116:
 3933 0214 6B656570 		.ascii	"keepLedOn\000"
 3933      4C65644F 
 3933      6E00
 3934              	.LASF42:
 3935 021e 466F7277 		.ascii	"ForwardUntilTarget\000"
 3935      61726455 
 3935      6E74696C 
 3935      54617267 
 3935      657400
 3936              	.LASF51:
 3937 0231 496E7374 		.ascii	"Instructions\000"
 3937      72756374 
 3937      696F6E73 
 3937      00
 3938              	.LASF92:
 3939 023e 666C6167 		.ascii	"flag_ts_update\000"
 3939      5F74735F 
 3939      75706461 
 3939      746500
 3940              	.LASF91:
 3941 024d 666C6167 		.ascii	"flag_ts_enc\000"
 3941      5F74735F 
 3941      656E6300 
 3942              	.LASF127:
 3943 0259 71756164 		.ascii	"quadCountToRPM\000"
 3943      436F756E 
 3943      74546F52 
 3943      504D00
 3944              	.LASF123:
 3945 0268 69676E6F 		.ascii	"ignoreSensor\000"
 3945      72655365 
 3945      6E736F72 
 3945      00
 3946              	.LASF43:
 3947 0275 53746F70 		.ascii	"StopAtTarget\000"
 3947      41745461 
 3947      72676574 
 3947      00
 3948              	.LASF63:
 3949 0282 77616974 		.ascii	"waitForTurn\000"
 3949      466F7254 
 3949      75726E00 
 3950              	.LASF24:
 3951 028e 726F626F 		.ascii	"robot_ypos\000"
 3951      745F7970 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 82


 3951      6F7300
 3952              	.LASF90:
 3953 0299 74735F64 		.ascii	"ts_display\000"
 3953      6973706C 
 3953      617900
 3954              	.LASF109:
 3955 02a4 63757272 		.ascii	"currentOrientation\000"
 3955      656E744F 
 3955      7269656E 
 3955      74617469 
 3955      6F6E00
 3956              	.LASF11:
 3957 02b7 63686172 		.ascii	"char\000"
 3957      00
 3958              	.LASF126:
 3959 02bc 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3959      6F63756D 
 3959      656E7473 
 3959      5C476974 
 3959      4875625C 
 3960 02eb 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3960      635F636F 
 3960      64655F62 
 3960      6173655C 
 3960      43533330 
 3961              	.LASF28:
 3962 030d 67305F73 		.ascii	"g0_speed\000"
 3962      70656564 
 3962      00
 3963              	.LASF83:
 3964 0316 696E7374 		.ascii	"instructionList\000"
 3964      72756374 
 3964      696F6E4C 
 3964      69737400 
 3965              	.LASF15:
 3966 0326 75696E74 		.ascii	"uint16\000"
 3966      313600
 3967              	.LASF17:
 3968 032d 696E7438 		.ascii	"int8\000"
 3968      00
 3969              	.LASF118:
 3970 0332 78426C6F 		.ascii	"xBlocksize\000"
 3970      636B7369 
 3970      7A6500
 3971              	.LASF33:
 3972 033d 67315F64 		.ascii	"g1_direction\000"
 3972      69726563 
 3972      74696F6E 
 3972      00
 3973              	.LASF48:
 3974 034a 4C656674 		.ascii	"Left\000"
 3974      00
 3975              	.LASF75:
 3976 034f 73706565 		.ascii	"speedTimer\000"
 3976      6454696D 
 3976      657200
 3977              	.LASF65:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 83


 3978 035a 77616974 		.ascii	"waitForLeftTurn\000"
 3978      466F724C 
 3978      65667454 
 3978      75726E00 
 3979              	.LASF6:
 3980 036a 6C6F6E67 		.ascii	"long long int\000"
 3980      206C6F6E 
 3980      6720696E 
 3980      7400
 3981              	.LASF30:
 3982 0378 67315F78 		.ascii	"g1_xpos\000"
 3982      706F7300 
 3983              	.LASF110:
 3984 0380 70726576 		.ascii	"previousOrientation\000"
 3984      696F7573 
 3984      4F726965 
 3984      6E746174 
 3984      696F6E00 
 3985              	.LASF41:
 3986 0394 75547572 		.ascii	"uTurn\000"
 3986      6E00
 3987              	.LASF74:
 3988 039a 6E657744 		.ascii	"newDistance\000"
 3988      69737461 
 3988      6E636500 
 3989              	.LASF36:
 3990 03a6 67325F73 		.ascii	"g2_speed\000"
 3990      70656564 
 3990      00
 3991              	.LASF27:
 3992 03af 67305F79 		.ascii	"g0_ypos\000"
 3992      706F7300 
 3993              	.LASF58:
 3994 03b7 5475726E 		.ascii	"TurnLeft\000"
 3994      4C656674 
 3994      00
 3995              	.LASF89:
 3996 03c0 74735F73 		.ascii	"ts_speed\000"
 3996      70656564 
 3996      00
 3997              	.LASF62:
 3998 03c9 556E6B6E 		.ascii	"Unknown\000"
 3998      6F776E00 
 3999              	.LASF77:
 4000 03d1 64697265 		.ascii	"directionState\000"
 4000      6374696F 
 4000      6E537461 
 4000      746500
 4001              	.LASF16:
 4002 03e0 75696E74 		.ascii	"uint32\000"
 4002      333200
 4003              	.LASF64:
 4004 03e7 77616974 		.ascii	"waitForRightTurn\000"
 4004      466F7252 
 4004      69676874 
 4004      5475726E 
 4004      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 84


 4005              	.LASF57:
 4006 03f8 5475726E 		.ascii	"TurnRight\000"
 4006      52696768 
 4006      7400
 4007              	.LASF50:
 4008 0402 64617461 		.ascii	"data_main\000"
 4008      5F6D6169 
 4008      6E00
 4009              	.LASF21:
 4010 040c 72737369 		.ascii	"rssi\000"
 4010      00
 4011              	.LASF29:
 4012 0411 67305F64 		.ascii	"g0_direction\000"
 4012      69726563 
 4012      74696F6E 
 4012      00
 4013              	.LASF108:
 4014 041e 70726576 		.ascii	"previousDirection\000"
 4014      696F7573 
 4014      44697265 
 4014      6374696F 
 4014      6E00
 4015              	.LASF9:
 4016 0430 6C6F6E67 		.ascii	"long double\000"
 4016      20646F75 
 4016      626C6500 
 4017              	.LASF93:
 4018 043c 666C6167 		.ascii	"flag_ts_speed\000"
 4018      5F74735F 
 4018      73706565 
 4018      6400
 4019              	.LASF98:
 4020 044a 64617461 		.ascii	"dataready_flag\000"
 4020      72656164 
 4020      795F666C 
 4020      616700
 4021              	.LASF95:
 4022 0459 666C6167 		.ascii	"flag_rx\000"
 4022      5F727800 
 4023              	.LASF119:
 4024 0461 79426C6F 		.ascii	"yBlocksize\000"
 4024      636B7369 
 4024      7A6500
 4025              	.LASF2:
 4026 046c 73686F72 		.ascii	"short int\000"
 4026      7420696E 
 4026      7400
 4027              	.LASF69:
 4028 0476 53345F44 		.ascii	"S4_DETECTED\000"
 4028      45544543 
 4028      54454400 
 4029              	.LASF68:
 4030 0482 53335F44 		.ascii	"S3_DETECTED\000"
 4030      45544543 
 4030      54454400 
 4031              	.LASF4:
 4032 048e 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 85


 4032      20696E74 
 4032      00
 4033              	.LASF86:
 4034 0497 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4034      52784275 
 4034      66666572 
 4034      00
 4035              	.LASF88:
 4036 04a4 74735F75 		.ascii	"ts_update\000"
 4036      70646174 
 4036      6500
 4037              	.LASF56:
 4038 04ae 466F7277 		.ascii	"Forward\000"
 4038      61726400 
 4039              	.LASF111:
 4040 04b6 746F7461 		.ascii	"totalMilliseconds\000"
 4040      6C4D696C 
 4040      6C697365 
 4040      636F6E64 
 4040      7300
 4041              	.LASF35:
 4042 04c8 67325F79 		.ascii	"g2_ypos\000"
 4042      706F7300 
 4043              	.LASF46:
 4044 04d0 4F726965 		.ascii	"OrientationState\000"
 4044      6E746174 
 4044      696F6E53 
 4044      74617465 
 4044      00
 4045              	.LASF47:
 4046 04e1 446F776E 		.ascii	"Down\000"
 4046      00
 4047              	.LASF49:
 4048 04e6 52696768 		.ascii	"Right\000"
 4048      7400
 4049              	.LASF31:
 4050 04ec 67315F79 		.ascii	"g1_ypos\000"
 4050      706F7300 
 4051              	.LASF107:
 4052 04f4 63757272 		.ascii	"currentDirection\000"
 4052      656E7444 
 4052      69726563 
 4052      74696F6E 
 4052      00
 4053              	.LASF10:
 4054 0505 73697A65 		.ascii	"sizetype\000"
 4054      74797065 
 4054      00
 4055              	.LASF5:
 4056 050e 6C6F6E67 		.ascii	"long unsigned int\000"
 4056      20756E73 
 4056      69676E65 
 4056      6420696E 
 4056      7400
 4057              	.LASF117:
 4058 0520 73746F70 		.ascii	"stopBuffer\000"
 4058      42756666 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 86


 4058      657200
 4059              	.LASF13:
 4060 052b 696E7433 		.ascii	"int32_t\000"
 4060      325F7400 
 4061              	.LASF23:
 4062 0533 726F626F 		.ascii	"robot_xpos\000"
 4062      745F7870 
 4062      6F7300
 4063              	.LASF102:
 4064 053e 656E7472 		.ascii	"entry\000"
 4064      7900
 4065              	.LASF1:
 4066 0544 756E7369 		.ascii	"unsigned char\000"
 4066      676E6564 
 4066      20636861 
 4066      7200
 4067              	.LASF122:
 4068 0552 73746F70 		.ascii	"stoppedAfterTurn\000"
 4068      70656441 
 4068      66746572 
 4068      5475726E 
 4068      00
 4069              	.LASF101:
 4070 0563 6C696E65 		.ascii	"line\000"
 4070      00
 4071              	.LASF60:
 4072 0568 41646A75 		.ascii	"AdjustToTheRight\000"
 4072      7374546F 
 4072      54686552 
 4072      69676874 
 4072      00
 4073              	.LASF61:
 4074 0579 53746F70 		.ascii	"Stop\000"
 4074      00
 4075              	.LASF87:
 4076 057e 74735F65 		.ascii	"ts_enc\000"
 4076      6E6300
 4077              	.LASF94:
 4078 0585 666C6167 		.ascii	"flag_ts_display\000"
 4078      5F74735F 
 4078      64697370 
 4078      6C617900 
 4079              	.LASF105:
 4080 0595 70726576 		.ascii	"previousRobotOrientation\000"
 4080      696F7573 
 4080      526F626F 
 4080      744F7269 
 4080      656E7461 
 4081              	.LASF39:
 4082 05ae 77616974 		.ascii	"waitForTurnLeft\000"
 4082      466F7254 
 4082      75726E4C 
 4082      65667400 
 4083              	.LASF44:
 4084 05be 536B6970 		.ascii	"Skip\000"
 4084      00
 4085              	.LASF100:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 87


 4086 05c3 64697370 		.ascii	"displaystring\000"
 4086      6C617973 
 4086      7472696E 
 4086      6700
 4087              	.LASF38:
 4088 05d1 476F466F 		.ascii	"GoForward\000"
 4088      72776172 
 4088      6400
 4089              	.LASF70:
 4090 05db 53355F44 		.ascii	"S5_DETECTED\000"
 4090      45544543 
 4090      54454400 
 4091              	.LASF0:
 4092 05e7 7369676E 		.ascii	"signed char\000"
 4092      65642063 
 4092      68617200 
 4093              	.LASF120:
 4094 05f3 63757272 		.ascii	"currentRow\000"
 4094      656E7452 
 4094      6F7700
 4095              	.LASF3:
 4096 05fe 73686F72 		.ascii	"short unsigned int\000"
 4096      7420756E 
 4096      7369676E 
 4096      65642069 
 4096      6E7400
 4097              	.LASF25:
 4098 0611 726F626F 		.ascii	"robot_orientation\000"
 4098      745F6F72 
 4098      69656E74 
 4098      6174696F 
 4098      6E00
 4099              	.LASF73:
 4100 0623 6D61696E 		.ascii	"main\000"
 4100      00
 4101              	.LASF59:
 4102 0628 41646A75 		.ascii	"AdjustToTheLeft\000"
 4102      7374546F 
 4102      5468654C 
 4102      65667400 
 4103              	.LASF67:
 4104 0638 4261636B 		.ascii	"Backward\000"
 4104      77617264 
 4104      00
 4105              	.LASF14:
 4106 0641 75696E74 		.ascii	"uint8\000"
 4106      3800
 4107              	.LASF20:
 4108 0647 646F7562 		.ascii	"double\000"
 4108      6C6500
 4109              	.LASF78:
 4110 064e 43686563 		.ascii	"CheckSensorDirection\000"
 4110      6B53656E 
 4110      736F7244 
 4110      69726563 
 4110      74696F6E 
 4111              	.LASF121:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0Kgbwd.s 			page 88


 4112 0663 63757272 		.ascii	"currentCol\000"
 4112      656E7443 
 4112      6F6C00
 4113              	.LASF26:
 4114 066e 67305F78 		.ascii	"g0_xpos\000"
 4114      706F7300 
 4115              	.LASF115:
 4116 0676 74696D65 		.ascii	"timerInt\000"
 4116      72496E74 
 4116      00
 4117              	.LASF80:
 4118 067f 74726176 		.ascii	"traversePath\000"
 4118      65727365 
 4118      50617468 
 4118      00
 4119              	.LASF97:
 4120 068c 666C6167 		.ascii	"flag_KB_string\000"
 4120      5F4B425F 
 4120      73747269 
 4120      6E6700
 4121              	.LASF32:
 4122 069b 67315F73 		.ascii	"g1_speed\000"
 4122      70656564 
 4122      00
 4123              	.LASF53:
 4124 06a4 69676E6F 		.ascii	"ignoreL\000"
 4124      72654C00 
 4125              	.LASF54:
 4126 06ac 69676E6F 		.ascii	"ignoreR\000"
 4126      72655200 
 4127              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
