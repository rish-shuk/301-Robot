ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	currentOrientation
 119              		.type	currentOrientation, %object
 120              		.size	currentOrientation, 1
 121              	currentOrientation:
 122 004c 03       		.byte	3
 123              		.global	previousOrientation
 124              		.type	previousOrientation, %object
 125              		.size	previousOrientation, 1
 126              	previousOrientation:
 127 004d 03       		.byte	3
 128              		.global	s3
 129              		.bss
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0012 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0013 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0014 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0015 00       		.space	1
 149              		.global	totalMilliseconds
 150 0016 0000     		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	stopBuffer
 181              		.align	2
 182              		.type	stopBuffer, %object
 183              		.size	stopBuffer, 4
 184              	stopBuffer:
 185 002c 00000000 		.space	4
 186              		.global	__aeabi_i2d
 187              		.global	__aeabi_dmul
 188              		.global	__aeabi_ddiv
 189              		.global	__aeabi_d2f
 190              		.global	__aeabi_fadd
 191              		.section	.text.speedTimer,"ax",%progbits
 192              		.align	2
 193              		.global	speedTimer
 194              		.thumb
 195              		.thumb_func
 196              		.type	speedTimer, %function
 197              	speedTimer:
 198              	.LFB64:
 199              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 5


  23:main.c        **** #include "vars.h"
  24:main.c        **** #include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** #include "map.h"
  29:main.c        **** //* ========================================
  30:main.c        **** // USBUART
  31:main.c        **** void usbPutString(char *s);
  32:main.c        **** void usbPutChar(char c);
  33:main.c        **** void handle_usb();
  34:main.c        **** //* ========================================
  35:main.c        **** int16 quadCountToRPM(uint16 count);
  36:main.c        **** //* ========================================
  37:main.c        **** // Sensors, Course correction and Movement Direction.
  38:main.c        **** void ResetSensorFlags();
  39:main.c        **** void SetRobotMovement();
  40:main.c        **** enum DirectionState CheckSensorDirection();
  41:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  42:main.c        **** enum OrientationState {Up, Down, Left, Right};
  43:main.c        **** enum DirectionState currentDirection = Stop;
  44:main.c        **** enum DirectionState previousDirection = Unknown;
  45:main.c        **** enum OrientationState currentOrientation = Right;
  46:main.c        **** enum OrientationState previousOrientation = Right;
  47:main.c        **** enum DirectionState GetNextStep();
  48:main.c        **** // --- YIPPE
  49:main.c        **** // ----------------------------------------
  50:main.c        **** uint8 s3 = 0;
  51:main.c        **** uint8 s4 = 0;
  52:main.c        **** uint8 s5 = 0;
  53:main.c        **** uint8 s6 = 0;
  54:main.c        **** //* ========================================
  55:main.c        **** // Calculating Distance
  56:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  57:main.c        **** 
  58:main.c        **** uint32 totalMilliseconds = 0;
  59:main.c        **** float totalDistance = 0; // in mm
  60:main.c        **** //* ========================================
  61:main.c        **** char buffer[69];
  62:main.c        **** int quadDec2Count = 0;
  63:main.c        **** int timerInt = 0;
  64:main.c        **** int keepLedOn = 0;
  65:main.c        **** uint32 stopBuffer = 0;
  66:main.c        **** 
  67:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  68:main.c        **** 
  69:main.c        **** CY_ISR (speedTimer) {
 200              		.loc 1 69 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 6


 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  70:main.c        ****     timerInt = 1;
 213              		.loc 1 70 0
 214 0006 324B     		ldr	r3, .L4+16
 215 0008 0122     		movs	r2, #1
 216 000a 1A60     		str	r2, [r3]
  71:main.c        ****     //quadDec_M1 used for turning macros
  72:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 217              		.loc 1 72 0
 218 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 219 0010 0346     		mov	r3, r0
 220 0012 1A46     		mov	r2, r3
 221 0014 2F4B     		ldr	r3, .L4+20
 222 0016 1A60     		str	r2, [r3]
  73:main.c        ****     
  74:main.c        ****     if ((currentDirection == Forward || 
 223              		.loc 1 74 0
 224 0018 2F4B     		ldr	r3, .L4+24
 225 001a 1B68     		ldr	r3, [r3]
 226 001c 002B     		cmp	r3, #0
 227 001e 0FD0     		beq	.L2
  75:main.c        ****         currentDirection == waitForTurn || 
 228              		.loc 1 75 0 discriminator 1
 229 0020 2D4B     		ldr	r3, .L4+24
 230 0022 1B68     		ldr	r3, [r3]
  74:main.c        ****         currentDirection == waitForTurn || 
 231              		.loc 1 74 0 discriminator 1
 232 0024 072B     		cmp	r3, #7
 233 0026 0BD0     		beq	.L2
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 234              		.loc 1 76 0
 235 0028 2B4B     		ldr	r3, .L4+24
 236 002a 1B68     		ldr	r3, [r3]
  75:main.c        ****         currentDirection == waitForTurn || 
 237              		.loc 1 75 0
 238 002c 0A2B     		cmp	r3, #10
 239 002e 07D0     		beq	.L2
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 240              		.loc 1 77 0
 241 0030 294B     		ldr	r3, .L4+24
 242 0032 1B68     		ldr	r3, [r3]
  76:main.c        ****         currentDirection == ForwardAfterTurn ||
 243              		.loc 1 76 0
 244 0034 032B     		cmp	r3, #3
 245 0036 03D0     		beq	.L2
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 246              		.loc 1 78 0
 247 0038 274B     		ldr	r3, .L4+24
 248 003a 1B68     		ldr	r3, [r3]
  77:main.c        ****         currentDirection == AdjustToTheLeft ||
 249              		.loc 1 77 0
 250 003c 042B     		cmp	r3, #4
 251 003e 34D1     		bne	.L3
 252              	.L2:
  79:main.c        ****         quadDec2Count != 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 7


 253              		.loc 1 79 0
 254 0040 244B     		ldr	r3, .L4+20
 255 0042 1B68     		ldr	r3, [r3]
  78:main.c        ****         currentDirection == AdjustToTheRight) &&
 256              		.loc 1 78 0
 257 0044 002B     		cmp	r3, #0
 258 0046 30D0     		beq	.L3
 259              	.LBB2:
  80:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  81:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 260              		.loc 1 81 0
 261 0048 224B     		ldr	r3, .L4+20
 262 004a 1B68     		ldr	r3, [r3]
 263 004c 002B     		cmp	r3, #0
 264 004e B8BF     		it	lt
 265 0050 5B42     		rsblt	r3, r3, #0
 266 0052 1846     		mov	r0, r3
 267 0054 FFF7FEFF 		bl	__aeabi_i2d
 268 0058 19A3     		adr	r3, .L4
 269 005a D3E90023 		ldrd	r2, [r3]
 270 005e FFF7FEFF 		bl	__aeabi_dmul
 271 0062 0346     		mov	r3, r0
 272 0064 0C46     		mov	r4, r1
 273 0066 1846     		mov	r0, r3
 274 0068 2146     		mov	r1, r4
 275 006a 17A3     		adr	r3, .L4+8
 276 006c D3E90023 		ldrd	r2, [r3]
 277 0070 FFF7FEFF 		bl	__aeabi_dmul
 278 0074 0346     		mov	r3, r0
 279 0076 0C46     		mov	r4, r1
 280 0078 1846     		mov	r0, r3
 281 007a 2146     		mov	r1, r4
 282 007c 4FF00002 		mov	r2, #0
 283 0080 164B     		ldr	r3, .L4+28
 284 0082 FFF7FEFF 		bl	__aeabi_ddiv
 285 0086 0346     		mov	r3, r0
 286 0088 0C46     		mov	r4, r1
 287 008a 1846     		mov	r0, r3
 288 008c 2146     		mov	r1, r4
 289 008e FFF7FEFF 		bl	__aeabi_d2f
 290 0092 0346     		mov	r3, r0
 291 0094 7B60     		str	r3, [r7, #4]	@ float
  82:main.c        ****         
  83:main.c        ****         totalDistance = totalDistance + newDistance;
 292              		.loc 1 83 0
 293 0096 124B     		ldr	r3, .L4+32
 294 0098 1B68     		ldr	r3, [r3]	@ float
 295 009a 7968     		ldr	r1, [r7, #4]	@ float
 296 009c 1846     		mov	r0, r3
 297 009e FFF7FEFF 		bl	__aeabi_fadd
 298 00a2 0346     		mov	r3, r0
 299 00a4 1A46     		mov	r2, r3
 300 00a6 0E4B     		ldr	r3, .L4+32
 301 00a8 1A60     		str	r2, [r3]	@ float
 302              	.L3:
 303              	.LBE2:
  84:main.c        ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 8


  85:main.c        ****     
  86:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 304              		.loc 1 86 0
 305 00aa 0020     		movs	r0, #0
 306 00ac FFF7FEFF 		bl	QuadDec_M2_SetCounter
  87:main.c        ****     QuadDec_M2_Start(); // restart counter
 307              		.loc 1 87 0
 308 00b0 FFF7FEFF 		bl	QuadDec_M2_Start
  88:main.c        ****     
  89:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 309              		.loc 1 89 0
 310 00b4 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  90:main.c        **** }
 311              		.loc 1 90 0
 312 00b8 00BF     		nop
 313 00ba 0C37     		adds	r7, r7, #12
 314              		.cfi_def_cfa_offset 12
 315 00bc BD46     		mov	sp, r7
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 00be 90BD     		pop	{r4, r7, pc}
 319              	.L5:
 320              		.align	3
 321              	.L4:
 322 00c0 182D4454 		.word	1413754136
 323 00c4 FB210940 		.word	1074340347
 324 00c8 00000000 		.word	0
 325 00cc 00205040 		.word	1078992896
 326 00d0 00000000 		.word	timerInt
 327 00d4 00000000 		.word	quadDec2Count
 328 00d8 00000000 		.word	currentDirection
 329 00dc 00806C40 		.word	1080852480
 330 00e0 00000000 		.word	totalDistance
 331              		.cfi_endproc
 332              	.LFE64:
 333              		.size	speedTimer, .-speedTimer
 334              		.section	.text.S3_DETECTED,"ax",%progbits
 335              		.align	2
 336              		.global	S3_DETECTED
 337              		.thumb
 338              		.thumb_func
 339              		.type	S3_DETECTED, %function
 340              	S3_DETECTED:
 341              	.LFB65:
  91:main.c        **** 
  92:main.c        **** CY_ISR(S3_DETECTED) {
 342              		.loc 1 92 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
  93:main.c        ****     // Sensor has detected WHITE
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 9


  94:main.c        ****     s3 = 1; // , Black = 0, White = 1
 352              		.loc 1 94 0
 353 0004 034B     		ldr	r3, .L7
 354 0006 0122     		movs	r2, #1
 355 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     //LED_Write(1u);
  96:main.c        **** }
 356              		.loc 1 96 0
 357 000a 00BF     		nop
 358 000c BD46     		mov	sp, r7
 359              		.cfi_def_cfa_register 13
 360              		@ sp needed
 361 000e 80BC     		pop	{r7}
 362              		.cfi_restore 7
 363              		.cfi_def_cfa_offset 0
 364 0010 7047     		bx	lr
 365              	.L8:
 366 0012 00BF     		.align	2
 367              	.L7:
 368 0014 00000000 		.word	s3
 369              		.cfi_endproc
 370              	.LFE65:
 371              		.size	S3_DETECTED, .-S3_DETECTED
 372              		.section	.text.S4_DETECTED,"ax",%progbits
 373              		.align	2
 374              		.global	S4_DETECTED
 375              		.thumb
 376              		.thumb_func
 377              		.type	S4_DETECTED, %function
 378              	S4_DETECTED:
 379              	.LFB66:
  97:main.c        **** 
  98:main.c        **** CY_ISR(S4_DETECTED) {
 380              		.loc 1 98 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
  99:main.c        ****     // Sensor has detected WHITE
 100:main.c        ****     s4 = 1; // , Black = 0, White = 1
 390              		.loc 1 100 0
 391 0004 034B     		ldr	r3, .L10
 392 0006 0122     		movs	r2, #1
 393 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     //LED_Write(1u);
 102:main.c        **** }
 394              		.loc 1 102 0
 395 000a 00BF     		nop
 396 000c BD46     		mov	sp, r7
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 10


 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 0010 7047     		bx	lr
 403              	.L11:
 404 0012 00BF     		.align	2
 405              	.L10:
 406 0014 00000000 		.word	s4
 407              		.cfi_endproc
 408              	.LFE66:
 409              		.size	S4_DETECTED, .-S4_DETECTED
 410              		.section	.text.S5_DETECTED,"ax",%progbits
 411              		.align	2
 412              		.global	S5_DETECTED
 413              		.thumb
 414              		.thumb_func
 415              		.type	S5_DETECTED, %function
 416              	S5_DETECTED:
 417              	.LFB67:
 103:main.c        **** 
 104:main.c        **** CY_ISR(S5_DETECTED) {
 418              		.loc 1 104 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423 0000 80B4     		push	{r7}
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 105:main.c        ****     // Sensor has detected WHITE
 106:main.c        ****     s5 = 1; // , Black = 0, White = 1
 428              		.loc 1 106 0
 429 0004 034B     		ldr	r3, .L13
 430 0006 0122     		movs	r2, #1
 431 0008 1A70     		strb	r2, [r3]
 107:main.c        ****     //LED_Write(1u);
 108:main.c        **** }
 432              		.loc 1 108 0
 433 000a 00BF     		nop
 434 000c BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 000e 80BC     		pop	{r7}
 438              		.cfi_restore 7
 439              		.cfi_def_cfa_offset 0
 440 0010 7047     		bx	lr
 441              	.L14:
 442 0012 00BF     		.align	2
 443              	.L13:
 444 0014 00000000 		.word	s5
 445              		.cfi_endproc
 446              	.LFE67:
 447              		.size	S5_DETECTED, .-S5_DETECTED
 448              		.section	.text.S6_DETECTED,"ax",%progbits
 449              		.align	2
 450              		.global	S6_DETECTED
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 11


 451              		.thumb
 452              		.thumb_func
 453              		.type	S6_DETECTED, %function
 454              	S6_DETECTED:
 455              	.LFB68:
 109:main.c        **** 
 110:main.c        **** CY_ISR(S6_DETECTED) {
 456              		.loc 1 110 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 7, -4
 464 0002 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 111:main.c        ****     // Sensor has detected WHITE
 112:main.c        ****     s6 = 1; // , Black = 0, White = 1
 466              		.loc 1 112 0
 467 0004 034B     		ldr	r3, .L16
 468 0006 0122     		movs	r2, #1
 469 0008 1A70     		strb	r2, [r3]
 113:main.c        ****     //LED_Write(1u);
 114:main.c        **** }
 470              		.loc 1 114 0
 471 000a 00BF     		nop
 472 000c BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 000e 80BC     		pop	{r7}
 476              		.cfi_restore 7
 477              		.cfi_def_cfa_offset 0
 478 0010 7047     		bx	lr
 479              	.L17:
 480 0012 00BF     		.align	2
 481              	.L16:
 482 0014 00000000 		.word	s6
 483              		.cfi_endproc
 484              	.LFE68:
 485              		.size	S6_DETECTED, .-S6_DETECTED
 486              		.section	.text.TIMER_FINISH,"ax",%progbits
 487              		.align	2
 488              		.global	TIMER_FINISH
 489              		.thumb
 490              		.thumb_func
 491              		.type	TIMER_FINISH, %function
 492              	TIMER_FINISH:
 493              	.LFB69:
 115:main.c        **** 
 116:main.c        **** CY_ISR(TIMER_FINISH) {
 494              		.loc 1 116 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 12


 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 117:main.c        ****     if (currentDirection == Stop) {
 504              		.loc 1 117 0
 505 0004 0A4B     		ldr	r3, .L21
 506 0006 1B68     		ldr	r3, [r3]
 507 0008 052B     		cmp	r3, #5
 508 000a 05D1     		bne	.L19
 118:main.c        ****         stopBuffer = stopBuffer + 1;
 509              		.loc 1 118 0
 510 000c 094B     		ldr	r3, .L21+4
 511 000e 1B68     		ldr	r3, [r3]
 512 0010 0133     		adds	r3, r3, #1
 513 0012 084A     		ldr	r2, .L21+4
 514 0014 1360     		str	r3, [r2]
 515 0016 02E0     		b	.L20
 516              	.L19:
 119:main.c        ****     } else {
 120:main.c        ****         stopBuffer = 0;
 517              		.loc 1 120 0
 518 0018 064B     		ldr	r3, .L21+4
 519 001a 0022     		movs	r2, #0
 520 001c 1A60     		str	r2, [r3]
 521              	.L20:
 121:main.c        ****     }
 122:main.c        ****     SetRobotMovement(); 
 522              		.loc 1 122 0
 523 001e FFF7FEFF 		bl	SetRobotMovement
 123:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 524              		.loc 1 123 0
 525 0022 FFF7FEFF 		bl	ResetSensorFlags
 124:main.c        ****     Timer_LED_ReadStatusRegister();
 526              		.loc 1 124 0
 527 0026 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 125:main.c        **** }
 528              		.loc 1 125 0
 529 002a 00BF     		nop
 530 002c 80BD     		pop	{r7, pc}
 531              	.L22:
 532 002e 00BF     		.align	2
 533              	.L21:
 534 0030 00000000 		.word	currentDirection
 535 0034 00000000 		.word	stopBuffer
 536              		.cfi_endproc
 537              	.LFE69:
 538              		.size	TIMER_FINISH, .-TIMER_FINISH
 539              		.section	.text.main,"ax",%progbits
 540              		.align	2
 541              		.global	main
 542              		.thumb
 543              		.thumb_func
 544              		.type	main, %function
 545              	main:
 546              	.LFB70:
 126:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 13


 127:main.c        **** 
 128:main.c        **** int main()
 129:main.c        **** {
 547              		.loc 1 129 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 130:main.c        **** // ----- INITIALIZATIONS ----------
 131:main.c        ****     CYGlobalIntEnable;
 557              		.loc 1 131 0
 558              		.syntax unified
 559              	@ 131 "main.c" 1
 560 0004 62B6     		CPSIE   i
 561              	@ 0 "" 2
 132:main.c        ****     ResetSensorFlags();
 562              		.loc 1 132 0
 563              		.thumb
 564              		.syntax unified
 565 0006 FFF7FEFF 		bl	ResetSensorFlags
 133:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 566              		.loc 1 133 0
 567 000a FFF7FEFF 		bl	init
 134:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 568              		.loc 1 134 0
 569 000e 1948     		ldr	r0, .L27
 570 0010 FFF7FEFF 		bl	isr_speed_StartEx
 135:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 571              		.loc 1 135 0
 572 0014 1848     		ldr	r0, .L27+4
 573 0016 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 136:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 574              		.loc 1 136 0
 575 001a 1848     		ldr	r0, .L27+8
 576 001c FFF7FEFF 		bl	S3_detected_StartEx
 137:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 577              		.loc 1 137 0
 578 0020 1748     		ldr	r0, .L27+12
 579 0022 FFF7FEFF 		bl	S4_detected_StartEx
 138:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 580              		.loc 1 138 0
 581 0026 1748     		ldr	r0, .L27+16
 582 0028 FFF7FEFF 		bl	S5_detected_StartEx
 139:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 583              		.loc 1 139 0
 584 002c 1648     		ldr	r0, .L27+20
 585 002e FFF7FEFF 		bl	S6_detected_StartEx
 140:main.c        ****     Timer_LED_Start();
 586              		.loc 1 140 0
 587 0032 FFF7FEFF 		bl	Timer_LED_Start
 141:main.c        **** 
 142:main.c        ****     findPath(map);// find shortest path- store this in map wasn't being called before
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 14


 588              		.loc 1 142 0
 589 0036 1548     		ldr	r0, .L27+24
 590 0038 FFF7FEFF 		bl	findPath
 143:main.c        **** 
 144:main.c        **** // ------USB SETUP ----------------    
 145:main.c        **** #ifdef USE_USB    
 146:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 591              		.loc 1 146 0
 592 003c 0121     		movs	r1, #1
 593 003e 0020     		movs	r0, #0
 594 0040 FFF7FEFF 		bl	USBUART_Start
 147:main.c        **** #endif        
 148:main.c        ****     RF_BT_SELECT_Write(0);
 595              		.loc 1 148 0
 596 0044 0020     		movs	r0, #0
 597 0046 FFF7FEFF 		bl	RF_BT_SELECT_Write
 598              	.L26:
 149:main.c        ****     
 150:main.c        ****     //usbPutString("Initialised UART");
 151:main.c        ****     for(;;)
 152:main.c        ****     {
 153:main.c        ****         if(timerInt == 1) {
 599              		.loc 1 153 0
 600 004a 114B     		ldr	r3, .L27+28
 601 004c 1B68     		ldr	r3, [r3]
 602 004e 012B     		cmp	r3, #1
 603 0050 08D1     		bne	.L24
 154:main.c        ****             timerInt = 0;
 604              		.loc 1 154 0
 605 0052 0F4B     		ldr	r3, .L27+28
 606 0054 0022     		movs	r2, #0
 607 0056 1A60     		str	r2, [r3]
 155:main.c        ****             // calculate RPM of M2
 156:main.c        ****             quadCountToRPM(quadDec2Count);
 608              		.loc 1 156 0
 609 0058 0E4B     		ldr	r3, .L27+32
 610 005a 1B68     		ldr	r3, [r3]
 611 005c 9BB2     		uxth	r3, r3
 612 005e 1846     		mov	r0, r3
 613 0060 FFF7FEFF 		bl	quadCountToRPM
 614              	.L24:
 157:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 158:main.c        ****             //usbPutString(buffer);
 159:main.c        ****             //usbPutString(" ");
 160:main.c        ****         }
 161:main.c        ****         //handle_usb();
 162:main.c        ****         if (flag_KB_string == 1)
 615              		.loc 1 162 0
 616 0064 0C4B     		ldr	r3, .L27+36
 617 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 618 0068 012B     		cmp	r3, #1
 619 006a EED1     		bne	.L26
 163:main.c        ****         {
 164:main.c        ****             //usbPutString("Total Distance: ");
 165:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 166:main.c        ****             //usbPutString(buffer);
 167:main.c        ****             flag_KB_string = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 15


 620              		.loc 1 167 0
 621 006c 0A4B     		ldr	r3, .L27+36
 622 006e 0022     		movs	r2, #0
 623 0070 1A70     		strb	r2, [r3]
 168:main.c        ****         }           
 169:main.c        ****     }
 624              		.loc 1 169 0
 625 0072 EAE7     		b	.L26
 626              	.L28:
 627              		.align	2
 628              	.L27:
 629 0074 00000000 		.word	speedTimer
 630 0078 00000000 		.word	TIMER_FINISH
 631 007c 00000000 		.word	S3_DETECTED
 632 0080 00000000 		.word	S4_DETECTED
 633 0084 00000000 		.word	S5_DETECTED
 634 0088 00000000 		.word	S6_DETECTED
 635 008c 00000000 		.word	map
 636 0090 00000000 		.word	timerInt
 637 0094 00000000 		.word	quadDec2Count
 638 0098 00000000 		.word	flag_KB_string
 639              		.cfi_endproc
 640              	.LFE70:
 641              		.size	main, .-main
 642              		.global	__aeabi_fmul
 643              		.global	__aeabi_f2iz
 644              		.section	.text.quadCountToRPM,"ax",%progbits
 645              		.align	2
 646              		.global	quadCountToRPM
 647              		.thumb
 648              		.thumb_func
 649              		.type	quadCountToRPM, %function
 650              	quadCountToRPM:
 651              	.LFB71:
 170:main.c        ****     return 0;
 171:main.c        **** }
 172:main.c        **** 
 173:main.c        **** // Calculations
 174:main.c        **** //* ========================================
 175:main.c        **** int16 quadCountToRPM(uint16 count)
 176:main.c        **** {
 652              		.loc 1 176 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 16
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 90B5     		push	{r4, r7, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 32
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 0346     		mov	r3, r0
 666 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 177:main.c        ****     float cps = count/57.00;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 16


 667              		.loc 1 177 0
 668 000a FB88     		ldrh	r3, [r7, #6]
 669 000c 1846     		mov	r0, r3
 670 000e FFF7FEFF 		bl	__aeabi_i2d
 671 0012 4FF00002 		mov	r2, #0
 672 0016 0D4B     		ldr	r3, .L31
 673 0018 FFF7FEFF 		bl	__aeabi_ddiv
 674 001c 0346     		mov	r3, r0
 675 001e 0C46     		mov	r4, r1
 676 0020 1846     		mov	r0, r3
 677 0022 2146     		mov	r1, r4
 678 0024 FFF7FEFF 		bl	__aeabi_d2f
 679 0028 0346     		mov	r3, r0
 680 002a FB60     		str	r3, [r7, #12]	@ float
 178:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 681              		.loc 1 178 0
 682 002c 0849     		ldr	r1, .L31+4
 683 002e F868     		ldr	r0, [r7, #12]	@ float
 684 0030 FFF7FEFF 		bl	__aeabi_fmul
 685 0034 0346     		mov	r3, r0
 686 0036 1846     		mov	r0, r3
 687 0038 FFF7FEFF 		bl	__aeabi_f2iz
 688 003c 0346     		mov	r3, r0
 689 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 179:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 180:main.c        ****     return rpm;
 690              		.loc 1 180 0
 691 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 181:main.c        ****     //usbPutString(buffer);
 182:main.c        ****     //usbPutString("rpm ");
 183:main.c        **** }
 692              		.loc 1 183 0
 693 0044 1846     		mov	r0, r3
 694 0046 1437     		adds	r7, r7, #20
 695              		.cfi_def_cfa_offset 12
 696 0048 BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 004a 90BD     		pop	{r4, r7, pc}
 700              	.L32:
 701              		.align	2
 702              	.L31:
 703 004c 00804C40 		.word	1078755328
 704 0050 00007041 		.word	1097859072
 705              		.cfi_endproc
 706              	.LFE71:
 707              		.size	quadCountToRPM, .-quadCountToRPM
 708              		.section	.text.ResetSensorFlags,"ax",%progbits
 709              		.align	2
 710              		.global	ResetSensorFlags
 711              		.thumb
 712              		.thumb_func
 713              		.type	ResetSensorFlags, %function
 714              	ResetSensorFlags:
 715              	.LFB72:
 184:main.c        **** 
 185:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 17


 186:main.c        **** void ResetSensorFlags() {
 716              		.loc 1 186 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 187:main.c        ****     s3 = 0;
 726              		.loc 1 187 0
 727 0004 074B     		ldr	r3, .L34
 728 0006 0022     		movs	r2, #0
 729 0008 1A70     		strb	r2, [r3]
 188:main.c        ****     s4 = 0;
 730              		.loc 1 188 0
 731 000a 074B     		ldr	r3, .L34+4
 732 000c 0022     		movs	r2, #0
 733 000e 1A70     		strb	r2, [r3]
 189:main.c        ****     s5 = 0;
 734              		.loc 1 189 0
 735 0010 064B     		ldr	r3, .L34+8
 736 0012 0022     		movs	r2, #0
 737 0014 1A70     		strb	r2, [r3]
 190:main.c        ****     s6 = 0;
 738              		.loc 1 190 0
 739 0016 064B     		ldr	r3, .L34+12
 740 0018 0022     		movs	r2, #0
 741 001a 1A70     		strb	r2, [r3]
 191:main.c        **** }
 742              		.loc 1 191 0
 743 001c 00BF     		nop
 744 001e BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 0020 80BC     		pop	{r7}
 748              		.cfi_restore 7
 749              		.cfi_def_cfa_offset 0
 750 0022 7047     		bx	lr
 751              	.L35:
 752              		.align	2
 753              	.L34:
 754 0024 00000000 		.word	s3
 755 0028 00000000 		.word	s4
 756 002c 00000000 		.word	s5
 757 0030 00000000 		.word	s6
 758              		.cfi_endproc
 759              	.LFE72:
 760              		.size	ResetSensorFlags, .-ResetSensorFlags
 761              		.global	yBlocksize
 762              		.data
 763 004e 0000     		.align	2
 764              		.type	yBlocksize, %object
 765              		.size	yBlocksize, 4
 766              	yBlocksize:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 18


 767 0050 0000FF42 		.word	1124007936
 768              		.global	xBlocksize
 769              		.align	2
 770              		.type	xBlocksize, %object
 771              		.size	xBlocksize, 4
 772              	xBlocksize:
 773 0054 0000B942 		.word	1119420416
 774              		.global	currentRow
 775              		.type	currentRow, %object
 776              		.size	currentRow, 1
 777              	currentRow:
 778 0058 01       		.byte	1
 779              		.global	currentCol
 780              		.type	currentCol, %object
 781              		.size	currentCol, 1
 782              	currentCol:
 783 0059 01       		.byte	1
 784              		.section	.text.GetNextStep,"ax",%progbits
 785              		.align	2
 786              		.global	GetNextStep
 787              		.thumb
 788              		.thumb_func
 789              		.type	GetNextStep, %function
 790              	GetNextStep:
 791              	.LFB73:
 192:main.c        **** 
 193:main.c        **** float yBlocksize = 127.5;
 194:main.c        **** float xBlocksize = 92.5;
 195:main.c        **** uint8 currentRow = 1;
 196:main.c        **** uint8 currentCol = 1;
 197:main.c        **** 
 198:main.c        **** enum DirectionState GetNextStep() {
 792              		.loc 1 198 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 0000 80B4     		push	{r7}
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0002 83B0     		sub	sp, sp, #12
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 199:main.c        ****     enum DirectionState directionState;
 200:main.c        ****     // Determines robot movement and orientation to follow optimal path
 201:main.c        ****     // enum DirectionState directionState = Stop;
 202:main.c        ****     previousOrientation = currentOrientation;
 804              		.loc 1 202 0
 805 0006 B24B     		ldr	r3, .L63
 806 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 807 000a B24B     		ldr	r3, .L63+4
 808 000c 1A70     		strb	r2, [r3]
 203:main.c        ****     
 204:main.c        ****     if(map[currentRow][currentCol] == 9) {
 809              		.loc 1 204 0
 810 000e B24B     		ldr	r3, .L63+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 19


 811 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 0012 1A46     		mov	r2, r3
 813 0014 B14B     		ldr	r3, .L63+12
 814 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 815 0018 1846     		mov	r0, r3
 816 001a B149     		ldr	r1, .L63+16
 817 001c 1346     		mov	r3, r2
 818 001e DB00     		lsls	r3, r3, #3
 819 0020 1344     		add	r3, r3, r2
 820 0022 5B00     		lsls	r3, r3, #1
 821 0024 1344     		add	r3, r3, r2
 822 0026 0344     		add	r3, r3, r0
 823 0028 51F82330 		ldr	r3, [r1, r3, lsl #2]
 824 002c 092B     		cmp	r3, #9
 825 002e 03D1     		bne	.L37
 205:main.c        ****         directionState = Stop; 
 826              		.loc 1 205 0
 827 0030 0523     		movs	r3, #5
 828 0032 7B60     		str	r3, [r7, #4]
 206:main.c        ****         return directionState;
 829              		.loc 1 206 0
 830 0034 7B68     		ldr	r3, [r7, #4]
 831 0036 45E1     		b	.L38
 832              	.L37:
 207:main.c        ****     }
 208:main.c        ****     /*
 209:main.c        ****     if (totalDistance >= (yBlocksize)) {
 210:main.c        ****         directionState = Stop;
 211:main.c        ****         return directionState;
 212:main.c        ****     }
 213:main.c        ****     */
 214:main.c        ****         
 215:main.c        ****     switch (previousOrientation) {
 833              		.loc 1 215 0
 834 0038 A64B     		ldr	r3, .L63+4
 835 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 003c 032B     		cmp	r3, #3
 837 003e 00F23781 		bhi	.L58
 838 0042 01A2     		adr	r2, .L41
 839 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 840              		.p2align 2
 841              	.L41:
 842 0048 59000000 		.word	.L40+1
 843 004c F1000000 		.word	.L42+1
 844 0050 85010000 		.word	.L43+1
 845 0054 1B020000 		.word	.L44+1
 846              		.p2align 1
 847              	.L40:
 216:main.c        ****             case Up:
 217:main.c        ****                 if(map[currentRow - 1][currentCol] == 8) {
 848              		.loc 1 217 0
 849 0058 9F4B     		ldr	r3, .L63+8
 850 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 851 005c 5A1E     		subs	r2, r3, #1
 852 005e 9F4B     		ldr	r3, .L63+12
 853 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 854 0062 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 20


 855 0064 9E49     		ldr	r1, .L63+16
 856 0066 1346     		mov	r3, r2
 857 0068 DB00     		lsls	r3, r3, #3
 858 006a 1344     		add	r3, r3, r2
 859 006c 5B00     		lsls	r3, r3, #1
 860 006e 1344     		add	r3, r3, r2
 861 0070 0344     		add	r3, r3, r0
 862 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 863 0076 082B     		cmp	r3, #8
 864 0078 0BD1     		bne	.L45
 218:main.c        ****                     currentOrientation = Up; 
 865              		.loc 1 218 0
 866 007a 954B     		ldr	r3, .L63
 867 007c 0022     		movs	r2, #0
 868 007e 1A70     		strb	r2, [r3]
 219:main.c        ****                     directionState = Forward;
 869              		.loc 1 219 0
 870 0080 0023     		movs	r3, #0
 871 0082 7B60     		str	r3, [r7, #4]
 220:main.c        ****                     currentRow--;// update position
 872              		.loc 1 220 0
 873 0084 944B     		ldr	r3, .L63+8
 874 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 875 0088 013B     		subs	r3, r3, #1
 876 008a DAB2     		uxtb	r2, r3
 877 008c 924B     		ldr	r3, .L63+8
 878 008e 1A70     		strb	r2, [r3]
 221:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 222:main.c        ****                     currentOrientation = Left;
 223:main.c        ****                     directionState = TurnLeft;
 224:main.c        ****                     //currentRow--;
 225:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 226:main.c        ****                     currentOrientation = Right;
 227:main.c        ****                     directionState = TurnRight;
 228:main.c        ****                     //currentRow++; // update position
 229:main.c        ****                 }
 230:main.c        ****                 break;
 879              		.loc 1 230 0
 880 0090 10E1     		b	.L59
 881              	.L45:
 221:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 882              		.loc 1 221 0
 883 0092 914B     		ldr	r3, .L63+8
 884 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 0096 1A46     		mov	r2, r3
 886 0098 904B     		ldr	r3, .L63+12
 887 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 009c 591E     		subs	r1, r3, #1
 889 009e 9048     		ldr	r0, .L63+16
 890 00a0 1346     		mov	r3, r2
 891 00a2 DB00     		lsls	r3, r3, #3
 892 00a4 1344     		add	r3, r3, r2
 893 00a6 5B00     		lsls	r3, r3, #1
 894 00a8 1344     		add	r3, r3, r2
 895 00aa 0B44     		add	r3, r3, r1
 896 00ac 50F82330 		ldr	r3, [r0, r3, lsl #2]
 897 00b0 082B     		cmp	r3, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 21


 898 00b2 05D1     		bne	.L47
 222:main.c        ****                     directionState = TurnLeft;
 899              		.loc 1 222 0
 900 00b4 864B     		ldr	r3, .L63
 901 00b6 0222     		movs	r2, #2
 902 00b8 1A70     		strb	r2, [r3]
 223:main.c        ****                     //currentRow--;
 903              		.loc 1 223 0
 904 00ba 0223     		movs	r3, #2
 905 00bc 7B60     		str	r3, [r7, #4]
 906              		.loc 1 230 0
 907 00be F9E0     		b	.L59
 908              	.L47:
 225:main.c        ****                     currentOrientation = Right;
 909              		.loc 1 225 0
 910 00c0 854B     		ldr	r3, .L63+8
 911 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 912 00c4 1A46     		mov	r2, r3
 913 00c6 854B     		ldr	r3, .L63+12
 914 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 915 00ca 591C     		adds	r1, r3, #1
 916 00cc 8448     		ldr	r0, .L63+16
 917 00ce 1346     		mov	r3, r2
 918 00d0 DB00     		lsls	r3, r3, #3
 919 00d2 1344     		add	r3, r3, r2
 920 00d4 5B00     		lsls	r3, r3, #1
 921 00d6 1344     		add	r3, r3, r2
 922 00d8 0B44     		add	r3, r3, r1
 923 00da 50F82330 		ldr	r3, [r0, r3, lsl #2]
 924 00de 082B     		cmp	r3, #8
 925 00e0 40F0E880 		bne	.L59
 226:main.c        ****                     directionState = TurnRight;
 926              		.loc 1 226 0
 927 00e4 7A4B     		ldr	r3, .L63
 928 00e6 0322     		movs	r2, #3
 929 00e8 1A70     		strb	r2, [r3]
 227:main.c        ****                     //currentRow++; // update position
 930              		.loc 1 227 0
 931 00ea 0123     		movs	r3, #1
 932 00ec 7B60     		str	r3, [r7, #4]
 933              		.loc 1 230 0
 934 00ee E1E0     		b	.L59
 935              	.L42:
 231:main.c        ****             case Down:
 232:main.c        ****                 if(map[currentRow + 1][currentCol] == 8) {
 936              		.loc 1 232 0
 937 00f0 794B     		ldr	r3, .L63+8
 938 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 00f4 5A1C     		adds	r2, r3, #1
 940 00f6 794B     		ldr	r3, .L63+12
 941 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 00fa 1846     		mov	r0, r3
 943 00fc 7849     		ldr	r1, .L63+16
 944 00fe 1346     		mov	r3, r2
 945 0100 DB00     		lsls	r3, r3, #3
 946 0102 1344     		add	r3, r3, r2
 947 0104 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 22


 948 0106 1344     		add	r3, r3, r2
 949 0108 0344     		add	r3, r3, r0
 950 010a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 951 010e 082B     		cmp	r3, #8
 952 0110 0BD1     		bne	.L49
 233:main.c        ****                     currentOrientation = Down;
 953              		.loc 1 233 0
 954 0112 6F4B     		ldr	r3, .L63
 955 0114 0122     		movs	r2, #1
 956 0116 1A70     		strb	r2, [r3]
 234:main.c        ****                     directionState = Forward;
 957              		.loc 1 234 0
 958 0118 0023     		movs	r3, #0
 959 011a 7B60     		str	r3, [r7, #4]
 235:main.c        ****                     currentRow++;
 960              		.loc 1 235 0
 961 011c 6E4B     		ldr	r3, .L63+8
 962 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0120 0133     		adds	r3, r3, #1
 964 0122 DAB2     		uxtb	r2, r3
 965 0124 6C4B     		ldr	r3, .L63+8
 966 0126 1A70     		strb	r2, [r3]
 236:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 237:main.c        ****                     currentOrientation = Right;
 238:main.c        ****                     directionState = TurnRight;
 239:main.c        ****                     //currentRow--;
 240:main.c        ****                 } else if (map[currentRow][currentCol + 1] == 8) {
 241:main.c        ****                     currentOrientation = Left;
 242:main.c        ****                     //directionState = TurnLeft;
 243:main.c        ****                     //currentRow++; // update position
 244:main.c        ****                 }
 245:main.c        ****                 break;
 967              		.loc 1 245 0
 968 0128 C6E0     		b	.L60
 969              	.L49:
 236:main.c        ****                 } else if (map[currentRow][currentCol - 1] == 8) {
 970              		.loc 1 236 0
 971 012a 6B4B     		ldr	r3, .L63+8
 972 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 012e 1A46     		mov	r2, r3
 974 0130 6A4B     		ldr	r3, .L63+12
 975 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 0134 591E     		subs	r1, r3, #1
 977 0136 6A48     		ldr	r0, .L63+16
 978 0138 1346     		mov	r3, r2
 979 013a DB00     		lsls	r3, r3, #3
 980 013c 1344     		add	r3, r3, r2
 981 013e 5B00     		lsls	r3, r3, #1
 982 0140 1344     		add	r3, r3, r2
 983 0142 0B44     		add	r3, r3, r1
 984 0144 50F82330 		ldr	r3, [r0, r3, lsl #2]
 985 0148 082B     		cmp	r3, #8
 986 014a 05D1     		bne	.L51
 237:main.c        ****                     directionState = TurnRight;
 987              		.loc 1 237 0
 988 014c 604B     		ldr	r3, .L63
 989 014e 0322     		movs	r2, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 23


 990 0150 1A70     		strb	r2, [r3]
 238:main.c        ****                     //currentRow--;
 991              		.loc 1 238 0
 992 0152 0123     		movs	r3, #1
 993 0154 7B60     		str	r3, [r7, #4]
 994              		.loc 1 245 0
 995 0156 AFE0     		b	.L60
 996              	.L51:
 240:main.c        ****                     currentOrientation = Left;
 997              		.loc 1 240 0
 998 0158 5F4B     		ldr	r3, .L63+8
 999 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1000 015c 1A46     		mov	r2, r3
 1001 015e 5F4B     		ldr	r3, .L63+12
 1002 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 0162 591C     		adds	r1, r3, #1
 1004 0164 5E48     		ldr	r0, .L63+16
 1005 0166 1346     		mov	r3, r2
 1006 0168 DB00     		lsls	r3, r3, #3
 1007 016a 1344     		add	r3, r3, r2
 1008 016c 5B00     		lsls	r3, r3, #1
 1009 016e 1344     		add	r3, r3, r2
 1010 0170 0B44     		add	r3, r3, r1
 1011 0172 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1012 0176 082B     		cmp	r3, #8
 1013 0178 40F09E80 		bne	.L60
 241:main.c        ****                     //directionState = TurnLeft;
 1014              		.loc 1 241 0
 1015 017c 544B     		ldr	r3, .L63
 1016 017e 0222     		movs	r2, #2
 1017 0180 1A70     		strb	r2, [r3]
 1018              		.loc 1 245 0
 1019 0182 99E0     		b	.L60
 1020              	.L43:
 246:main.c        ****             case Left:
 247:main.c        ****                 if(map[currentRow][currentCol - 1] == 8) {
 1021              		.loc 1 247 0
 1022 0184 544B     		ldr	r3, .L63+8
 1023 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 0188 1A46     		mov	r2, r3
 1025 018a 544B     		ldr	r3, .L63+12
 1026 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 018e 591E     		subs	r1, r3, #1
 1028 0190 5348     		ldr	r0, .L63+16
 1029 0192 1346     		mov	r3, r2
 1030 0194 DB00     		lsls	r3, r3, #3
 1031 0196 1344     		add	r3, r3, r2
 1032 0198 5B00     		lsls	r3, r3, #1
 1033 019a 1344     		add	r3, r3, r2
 1034 019c 0B44     		add	r3, r3, r1
 1035 019e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1036 01a2 082B     		cmp	r3, #8
 1037 01a4 0BD1     		bne	.L52
 248:main.c        ****                     currentOrientation = Left;
 1038              		.loc 1 248 0
 1039 01a6 4A4B     		ldr	r3, .L63
 1040 01a8 0222     		movs	r2, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 24


 1041 01aa 1A70     		strb	r2, [r3]
 249:main.c        ****                     directionState = Forward;
 1042              		.loc 1 249 0
 1043 01ac 0023     		movs	r3, #0
 1044 01ae 7B60     		str	r3, [r7, #4]
 250:main.c        ****                     currentCol--; // update position
 1045              		.loc 1 250 0
 1046 01b0 4A4B     		ldr	r3, .L63+12
 1047 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 01b4 013B     		subs	r3, r3, #1
 1049 01b6 DAB2     		uxtb	r2, r3
 1050 01b8 484B     		ldr	r3, .L63+12
 1051 01ba 1A70     		strb	r2, [r3]
 251:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 252:main.c        ****                     currentOrientation = Up;
 253:main.c        ****                     directionState = TurnRight;
 254:main.c        ****                     //currentRow++; // update position
 255:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 256:main.c        ****                     currentOrientation = Down;
 257:main.c        ****                     directionState = TurnLeft;
 258:main.c        ****                     //currentCol--; // update position
 259:main.c        ****                 }
 260:main.c        ****                 break;
 1052              		.loc 1 260 0
 1053 01bc 7EE0     		b	.L61
 1054              	.L52:
 251:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1055              		.loc 1 251 0
 1056 01be 464B     		ldr	r3, .L63+8
 1057 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 01c2 5A1E     		subs	r2, r3, #1
 1059 01c4 454B     		ldr	r3, .L63+12
 1060 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 01c8 1846     		mov	r0, r3
 1062 01ca 4549     		ldr	r1, .L63+16
 1063 01cc 1346     		mov	r3, r2
 1064 01ce DB00     		lsls	r3, r3, #3
 1065 01d0 1344     		add	r3, r3, r2
 1066 01d2 5B00     		lsls	r3, r3, #1
 1067 01d4 1344     		add	r3, r3, r2
 1068 01d6 0344     		add	r3, r3, r0
 1069 01d8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1070 01dc 082B     		cmp	r3, #8
 1071 01de 05D1     		bne	.L54
 252:main.c        ****                     directionState = TurnRight;
 1072              		.loc 1 252 0
 1073 01e0 3B4B     		ldr	r3, .L63
 1074 01e2 0022     		movs	r2, #0
 1075 01e4 1A70     		strb	r2, [r3]
 253:main.c        ****                     //currentRow++; // update position
 1076              		.loc 1 253 0
 1077 01e6 0123     		movs	r3, #1
 1078 01e8 7B60     		str	r3, [r7, #4]
 1079              		.loc 1 260 0
 1080 01ea 67E0     		b	.L61
 1081              	.L54:
 255:main.c        ****                     currentOrientation = Down;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 25


 1082              		.loc 1 255 0
 1083 01ec 3A4B     		ldr	r3, .L63+8
 1084 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1085 01f0 5A1C     		adds	r2, r3, #1
 1086 01f2 3A4B     		ldr	r3, .L63+12
 1087 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1088 01f6 1846     		mov	r0, r3
 1089 01f8 3949     		ldr	r1, .L63+16
 1090 01fa 1346     		mov	r3, r2
 1091 01fc DB00     		lsls	r3, r3, #3
 1092 01fe 1344     		add	r3, r3, r2
 1093 0200 5B00     		lsls	r3, r3, #1
 1094 0202 1344     		add	r3, r3, r2
 1095 0204 0344     		add	r3, r3, r0
 1096 0206 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1097 020a 082B     		cmp	r3, #8
 1098 020c 56D1     		bne	.L61
 256:main.c        ****                     directionState = TurnLeft;
 1099              		.loc 1 256 0
 1100 020e 304B     		ldr	r3, .L63
 1101 0210 0122     		movs	r2, #1
 1102 0212 1A70     		strb	r2, [r3]
 257:main.c        ****                     //currentCol--; // update position
 1103              		.loc 1 257 0
 1104 0214 0223     		movs	r3, #2
 1105 0216 7B60     		str	r3, [r7, #4]
 1106              		.loc 1 260 0
 1107 0218 50E0     		b	.L61
 1108              	.L44:
 261:main.c        ****             case Right:
 262:main.c        ****                 if(map[currentRow][currentCol + 1] == 8) {
 1109              		.loc 1 262 0
 1110 021a 2F4B     		ldr	r3, .L63+8
 1111 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1112 021e 1A46     		mov	r2, r3
 1113 0220 2E4B     		ldr	r3, .L63+12
 1114 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0224 591C     		adds	r1, r3, #1
 1116 0226 2E48     		ldr	r0, .L63+16
 1117 0228 1346     		mov	r3, r2
 1118 022a DB00     		lsls	r3, r3, #3
 1119 022c 1344     		add	r3, r3, r2
 1120 022e 5B00     		lsls	r3, r3, #1
 1121 0230 1344     		add	r3, r3, r2
 1122 0232 0B44     		add	r3, r3, r1
 1123 0234 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1124 0238 082B     		cmp	r3, #8
 1125 023a 0BD1     		bne	.L55
 263:main.c        ****                     currentOrientation = Right;
 1126              		.loc 1 263 0
 1127 023c 244B     		ldr	r3, .L63
 1128 023e 0322     		movs	r2, #3
 1129 0240 1A70     		strb	r2, [r3]
 264:main.c        ****                     directionState = Forward;
 1130              		.loc 1 264 0
 1131 0242 0023     		movs	r3, #0
 1132 0244 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 26


 265:main.c        ****                     currentCol++; // update position
 1133              		.loc 1 265 0
 1134 0246 254B     		ldr	r3, .L63+12
 1135 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1136 024a 0133     		adds	r3, r3, #1
 1137 024c DAB2     		uxtb	r2, r3
 1138 024e 234B     		ldr	r3, .L63+12
 1139 0250 1A70     		strb	r2, [r3]
 266:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 267:main.c        ****                     currentOrientation = Up;
 268:main.c        ****                     directionState = waitForLeftTurn;
 269:main.c        ****                     //currentCol++; // update position
 270:main.c        ****                 } else if (map[currentRow + 1][currentCol] == 8) {
 271:main.c        ****                     currentOrientation = Down;
 272:main.c        ****                     directionState = waitForRightTurn;
 273:main.c        ****                     //currentCol--; // update position
 274:main.c        ****                 }
 275:main.c        ****                 break;
 1140              		.loc 1 275 0
 1141 0252 35E0     		b	.L62
 1142              	.L55:
 266:main.c        ****                 } else if (map[currentRow - 1][currentCol] == 8) {
 1143              		.loc 1 266 0
 1144 0254 204B     		ldr	r3, .L63+8
 1145 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1146 0258 5A1E     		subs	r2, r3, #1
 1147 025a 204B     		ldr	r3, .L63+12
 1148 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 025e 1846     		mov	r0, r3
 1150 0260 1F49     		ldr	r1, .L63+16
 1151 0262 1346     		mov	r3, r2
 1152 0264 DB00     		lsls	r3, r3, #3
 1153 0266 1344     		add	r3, r3, r2
 1154 0268 5B00     		lsls	r3, r3, #1
 1155 026a 1344     		add	r3, r3, r2
 1156 026c 0344     		add	r3, r3, r0
 1157 026e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1158 0272 082B     		cmp	r3, #8
 1159 0274 05D1     		bne	.L57
 267:main.c        ****                     directionState = waitForLeftTurn;
 1160              		.loc 1 267 0
 1161 0276 164B     		ldr	r3, .L63
 1162 0278 0022     		movs	r2, #0
 1163 027a 1A70     		strb	r2, [r3]
 268:main.c        ****                     //currentCol++; // update position
 1164              		.loc 1 268 0
 1165 027c 0923     		movs	r3, #9
 1166 027e 7B60     		str	r3, [r7, #4]
 1167              		.loc 1 275 0
 1168 0280 1EE0     		b	.L62
 1169              	.L57:
 270:main.c        ****                     currentOrientation = Down;
 1170              		.loc 1 270 0
 1171 0282 154B     		ldr	r3, .L63+8
 1172 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1173 0286 5A1C     		adds	r2, r3, #1
 1174 0288 144B     		ldr	r3, .L63+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 27


 1175 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 028c 1846     		mov	r0, r3
 1177 028e 1449     		ldr	r1, .L63+16
 1178 0290 1346     		mov	r3, r2
 1179 0292 DB00     		lsls	r3, r3, #3
 1180 0294 1344     		add	r3, r3, r2
 1181 0296 5B00     		lsls	r3, r3, #1
 1182 0298 1344     		add	r3, r3, r2
 1183 029a 0344     		add	r3, r3, r0
 1184 029c 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1185 02a0 082B     		cmp	r3, #8
 1186 02a2 0DD1     		bne	.L62
 271:main.c        ****                     directionState = waitForRightTurn;
 1187              		.loc 1 271 0
 1188 02a4 0A4B     		ldr	r3, .L63
 1189 02a6 0122     		movs	r2, #1
 1190 02a8 1A70     		strb	r2, [r3]
 272:main.c        ****                     //currentCol--; // update position
 1191              		.loc 1 272 0
 1192 02aa 0823     		movs	r3, #8
 1193 02ac 7B60     		str	r3, [r7, #4]
 1194              		.loc 1 275 0
 1195 02ae 07E0     		b	.L62
 1196              	.L58:
 276:main.c        ****             default:
 277:main.c        ****                 break;
 1197              		.loc 1 277 0
 1198 02b0 00BF     		nop
 1199 02b2 06E0     		b	.L48
 1200              	.L59:
 230:main.c        ****             case Down:
 1201              		.loc 1 230 0
 1202 02b4 00BF     		nop
 1203 02b6 04E0     		b	.L48
 1204              	.L60:
 245:main.c        ****             case Left:
 1205              		.loc 1 245 0
 1206 02b8 00BF     		nop
 1207 02ba 02E0     		b	.L48
 1208              	.L61:
 260:main.c        ****             case Right:
 1209              		.loc 1 260 0
 1210 02bc 00BF     		nop
 1211 02be 00E0     		b	.L48
 1212              	.L62:
 275:main.c        ****             default:
 1213              		.loc 1 275 0
 1214 02c0 00BF     		nop
 1215              	.L48:
 278:main.c        ****         }
 279:main.c        ****     
 280:main.c        ****     return Backward;
 1216              		.loc 1 280 0
 1217 02c2 0B23     		movs	r3, #11
 1218              	.L38:
 281:main.c        **** }
 1219              		.loc 1 281 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 28


 1220 02c4 1846     		mov	r0, r3
 1221 02c6 0C37     		adds	r7, r7, #12
 1222              		.cfi_def_cfa_offset 4
 1223 02c8 BD46     		mov	sp, r7
 1224              		.cfi_def_cfa_register 13
 1225              		@ sp needed
 1226 02ca 80BC     		pop	{r7}
 1227              		.cfi_restore 7
 1228              		.cfi_def_cfa_offset 0
 1229 02cc 7047     		bx	lr
 1230              	.L64:
 1231 02ce 00BF     		.align	2
 1232              	.L63:
 1233 02d0 00000000 		.word	currentOrientation
 1234 02d4 00000000 		.word	previousOrientation
 1235 02d8 00000000 		.word	currentRow
 1236 02dc 00000000 		.word	currentCol
 1237 02e0 00000000 		.word	map
 1238              		.cfi_endproc
 1239              	.LFE73:
 1240              		.size	GetNextStep, .-GetNextStep
 1241              		.global	__aeabi_fcmpge
 1242              		.section	.text.CheckSensorDirection,"ax",%progbits
 1243              		.align	2
 1244              		.global	CheckSensorDirection
 1245              		.thumb
 1246              		.thumb_func
 1247              		.type	CheckSensorDirection, %function
 1248              	CheckSensorDirection:
 1249              	.LFB74:
 282:main.c        **** 
 283:main.c        **** enum DirectionState CheckSensorDirection() {
 1250              		.loc 1 283 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 8
 1253              		@ frame_needed = 1, uses_anonymous_args = 0
 1254 0000 80B5     		push	{r7, lr}
 1255              		.cfi_def_cfa_offset 8
 1256              		.cfi_offset 7, -8
 1257              		.cfi_offset 14, -4
 1258 0002 82B0     		sub	sp, sp, #8
 1259              		.cfi_def_cfa_offset 16
 1260 0004 00AF     		add	r7, sp, #0
 1261              		.cfi_def_cfa_register 7
 284:main.c        ****     float blocksize;
 285:main.c        ****     if(currentOrientation == Up || currentOrientation == Down) {
 1262              		.loc 1 285 0
 1263 0006 374B     		ldr	r3, .L81
 1264 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 000a 002B     		cmp	r3, #0
 1266 000c 03D0     		beq	.L66
 1267              		.loc 1 285 0 is_stmt 0 discriminator 1
 1268 000e 354B     		ldr	r3, .L81
 1269 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1270 0012 012B     		cmp	r3, #1
 1271 0014 02D1     		bne	.L67
 1272              	.L66:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 29


 286:main.c        ****         blocksize = 92.50;
 1273              		.loc 1 286 0 is_stmt 1
 1274 0016 344B     		ldr	r3, .L81+4
 1275 0018 7B60     		str	r3, [r7, #4]	@ float
 1276 001a 01E0     		b	.L68
 1277              	.L67:
 287:main.c        ****     } else {
 288:main.c        ****         blocksize = 128.40;
 1278              		.loc 1 288 0
 1279 001c 334B     		ldr	r3, .L81+8
 1280 001e 7B60     		str	r3, [r7, #4]	@ float
 1281              	.L68:
 289:main.c        ****     }
 290:main.c        ****     enum DirectionState directionState = Forward; // initialise state as stop
 1282              		.loc 1 290 0
 1283 0020 0023     		movs	r3, #0
 1284 0022 3B60     		str	r3, [r7]
 291:main.c        ****     previousDirection = currentDirection; // store currentDirection as previousDirection for next p
 1285              		.loc 1 291 0
 1286 0024 324B     		ldr	r3, .L81+12
 1287 0026 1B68     		ldr	r3, [r3]
 1288 0028 324A     		ldr	r2, .L81+16
 1289 002a 1360     		str	r3, [r2]
 292:main.c        ****     
 293:main.c        ****     if (totalDistance >= blocksize) {
 1290              		.loc 1 293 0
 1291 002c 324B     		ldr	r3, .L81+20
 1292 002e 1B68     		ldr	r3, [r3]	@ float
 1293 0030 7968     		ldr	r1, [r7, #4]	@ float
 1294 0032 1846     		mov	r0, r3
 1295 0034 FFF7FEFF 		bl	__aeabi_fcmpge
 1296 0038 0346     		mov	r3, r0
 1297 003a 002B     		cmp	r3, #0
 1298 003c 08D0     		beq	.L80
 294:main.c        ****         directionState = GetNextStep(); // get next step at each block
 1299              		.loc 1 294 0
 1300 003e FFF7FEFF 		bl	GetNextStep
 1301 0042 3860     		str	r0, [r7]
 295:main.c        ****         totalDistance = 0; // reset distance
 1302              		.loc 1 295 0
 1303 0044 2C4B     		ldr	r3, .L81+20
 1304 0046 4FF00002 		mov	r2, #0
 1305 004a 1A60     		str	r2, [r3]	@ float
 296:main.c        ****         return directionState;
 1306              		.loc 1 296 0
 1307 004c 3B68     		ldr	r3, [r7]
 1308 004e 45E0     		b	.L71
 1309              	.L80:
 297:main.c        ****     }
 298:main.c        ****     
 299:main.c        ****     // STOP BUFFER * ========================================
 300:main.c        ****     if (previousDirection == Stop) {
 1310              		.loc 1 300 0
 1311 0050 284B     		ldr	r3, .L81+16
 1312 0052 1B68     		ldr	r3, [r3]
 1313 0054 052B     		cmp	r3, #5
 1314 0056 07D1     		bne	.L72
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 30


 301:main.c        ****         if (stopBuffer <= 50) {
 1315              		.loc 1 301 0
 1316 0058 284B     		ldr	r3, .L81+24
 1317 005a 1B68     		ldr	r3, [r3]
 1318 005c 322B     		cmp	r3, #50
 1319 005e 01D8     		bhi	.L73
 302:main.c        ****             directionState = Stop; // stop buffer- prevents overturning
 1320              		.loc 1 302 0
 1321 0060 0523     		movs	r3, #5
 1322 0062 3B60     		str	r3, [r7]
 1323              	.L73:
 303:main.c        ****         } else {
 304:main.c        ****             //directionState = ForwardAfterTurn;
 305:main.c        ****         }
 306:main.c        ****         return directionState;
 1324              		.loc 1 306 0
 1325 0064 3B68     		ldr	r3, [r7]
 1326 0066 39E0     		b	.L71
 1327              	.L72:
 307:main.c        ****     }
 308:main.c        **** 
 309:main.c        ****     // TURNING- will only turn due to getNextStep() * ========================================    
 310:main.c        ****     /*if (previousDirection == ForwardAfterTurn) {
 311:main.c        ****         if (s3 || s4) {
 312:main.c        ****             //usbPutString("Forward\n");
 313:main.c        ****             directionState = Forward; // turns when robot has rotated 90º
 314:main.c        ****             return directionState;
 315:main.c        ****         }
 316:main.c        ****     }
 317:main.c        **** 
 318:main.c        ****     if(previousDirection == waitForRightTurn) {
 319:main.c        ****         if(!s4) {
 320:main.c        ****             //usbPutString("Turn Right\n");
 321:main.c        ****             directionState = TurnRight;
 322:main.c        ****             return directionState;
 323:main.c        ****         } else {
 324:main.c        ****             //usbPutString("Wait for Right Turn\n");
 325:main.c        ****             directionState = waitForRightTurn;
 326:main.c        ****             return directionState;
 327:main.c        ****         }
 328:main.c        ****     }
 329:main.c        **** 
 330:main.c        ****     if(previousDirection == waitForLeftTurn) {
 331:main.c        ****         if(!s3) {
 332:main.c        ****             //usbPutString("Turn Left\n");
 333:main.c        ****             directionState = TurnLeft;
 334:main.c        ****             return directionState;
 335:main.c        ****         } else {
 336:main.c        ****             //usbPutString("Wait for Left Turn\n");
 337:main.c        ****             directionState = waitForLeftTurn;
 338:main.c        ****             return directionState;
 339:main.c        ****         }
 340:main.c        ****     }
 341:main.c        **** 
 342:main.c        ****     if(previousDirection == TurnRight) {
 343:main.c        ****         if(s5 && s6) {
 344:main.c        ****             //usbPutString("Turn Right\n");
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 31


 345:main.c        ****             directionState = TurnRight; // keep turning while s5 & s6 are high
 346:main.c        ****             return directionState;
 347:main.c        ****         } 
 348:main.c        ****         else if (!s5 || !s6) {
 349:main.c        ****             //usbPutString("Stop after Right Turn");
 350:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 351:main.c        ****             totalDistance = 0; // correct totalDistance
 352:main.c        ****             return directionState;
 353:main.c        ****         }
 354:main.c        ****     }    
 355:main.c        **** 
 356:main.c        ****     if(previousDirection == TurnLeft) {
 357:main.c        ****         if(s5 && s6) {
 358:main.c        ****             //usbPutString("Turn Left\n");
 359:main.c        ****             directionState = TurnLeft; // keep turning while s5 & s6 are high
 360:main.c        ****             return directionState;
 361:main.c        ****         } 
 362:main.c        ****         else if (!s5 || !s6) {
 363:main.c        ****            // usbPutString("Stop after Left Turn\n");
 364:main.c        ****             directionState = Stop; // stop turning when s5 & s6 are low
 365:main.c        ****             totalDistance = 0; // correct totalDistance
 366:main.c        ****             return directionState;
 367:main.c        ****         }
 368:main.c        ****     }*/
 369:main.c        ****     
 370:main.c        ****     // COURSE CORRECTION * ========================================
 371:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 1328              		.loc 1 371 0
 1329 0068 224B     		ldr	r3, .L81+16
 1330 006a 1B68     		ldr	r3, [r3]
 1331 006c 002B     		cmp	r3, #0
 1332 006e 07D0     		beq	.L74
 1333              		.loc 1 371 0 is_stmt 0 discriminator 1
 1334 0070 204B     		ldr	r3, .L81+16
 1335 0072 1B68     		ldr	r3, [r3]
 1336 0074 032B     		cmp	r3, #3
 1337 0076 03D0     		beq	.L74
 1338              		.loc 1 371 0 discriminator 2
 1339 0078 1E4B     		ldr	r3, .L81+16
 1340 007a 1B68     		ldr	r3, [r3]
 1341 007c 042B     		cmp	r3, #4
 1342 007e 0FD1     		bne	.L75
 1343              	.L74:
 372:main.c        ****         if(s6) {
 1344              		.loc 1 372 0 is_stmt 1
 1345 0080 1F4B     		ldr	r3, .L81+28
 1346 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 0084 002B     		cmp	r3, #0
 1348 0086 03D0     		beq	.L76
 373:main.c        ****             //usbPutString("Adjust to the left\n");
 374:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 1349              		.loc 1 374 0
 1350 0088 0323     		movs	r3, #3
 1351 008a 3B60     		str	r3, [r7]
 375:main.c        ****             return directionState;
 1352              		.loc 1 375 0
 1353 008c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 32


 1354 008e 25E0     		b	.L71
 1355              	.L76:
 376:main.c        ****         }
 377:main.c        ****         if(s5) {
 1356              		.loc 1 377 0
 1357 0090 1C4B     		ldr	r3, .L81+32
 1358 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1359 0094 002B     		cmp	r3, #0
 1360 0096 03D0     		beq	.L75
 378:main.c        ****             //usbPutString("Adjust to the right\n");
 379:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1361              		.loc 1 379 0
 1362 0098 0423     		movs	r3, #4
 1363 009a 3B60     		str	r3, [r7]
 380:main.c        ****             return directionState;
 1364              		.loc 1 380 0
 1365 009c 3B68     		ldr	r3, [r7]
 1366 009e 1DE0     		b	.L71
 1367              	.L75:
 381:main.c        ****         }
 382:main.c        ****     }
 383:main.c        ****     
 384:main.c        ****     // FORWARD * ========================================
 385:main.c        ****     if (s3 && s4 && !s5 && !s6) {
 1368              		.loc 1 385 0
 1369 00a0 194B     		ldr	r3, .L81+36
 1370 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 00a4 002B     		cmp	r3, #0
 1372 00a6 0FD0     		beq	.L77
 1373              		.loc 1 385 0 is_stmt 0 discriminator 1
 1374 00a8 184B     		ldr	r3, .L81+40
 1375 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 00ac 002B     		cmp	r3, #0
 1377 00ae 0BD0     		beq	.L77
 1378              		.loc 1 385 0 discriminator 2
 1379 00b0 144B     		ldr	r3, .L81+32
 1380 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00b4 002B     		cmp	r3, #0
 1382 00b6 07D1     		bne	.L77
 1383              		.loc 1 385 0 discriminator 3
 1384 00b8 114B     		ldr	r3, .L81+28
 1385 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 00bc 002B     		cmp	r3, #0
 1387 00be 03D1     		bne	.L77
 386:main.c        ****         //usbPutString("Forward\n");
 387:main.c        ****         directionState = Forward;
 1388              		.loc 1 387 0 is_stmt 1
 1389 00c0 0023     		movs	r3, #0
 1390 00c2 3B60     		str	r3, [r7]
 388:main.c        ****         return directionState;   
 1391              		.loc 1 388 0
 1392 00c4 3B68     		ldr	r3, [r7]
 1393 00c6 09E0     		b	.L71
 1394              	.L77:
 389:main.c        ****     }
 390:main.c        ****     // SENSORS ALL HIGH CONDITION- waiting for a turn * ========================================
 391:main.c        ****     /*if(s5 && s6 && (previousDirection != waitForTurn)) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 33


 392:main.c        ****         directionState = waitForTurn; // need to keep going forward until s3 || s4 are low before t
 393:main.c        ****         return directionState;
 394:main.c        ****     }
 395:main.c        **** 
 396:main.c        ****     if (previousDirection == waitForTurn && (s3 || s4)) {
 397:main.c        ****         //usbPutString("Wait For Turn\n");
 398:main.c        ****         directionState = GetNextStep(); // determine which way to turn
 399:main.c        ****         return directionState;
 400:main.c        ****     }*/
 401:main.c        **** 
 402:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 403:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 404:main.c        ****     if (previousDirection == Unknown) {
 1395              		.loc 1 404 0
 1396 00c8 0A4B     		ldr	r3, .L81+16
 1397 00ca 1B68     		ldr	r3, [r3]
 1398 00cc 062B     		cmp	r3, #6
 1399 00ce 03D1     		bne	.L78
 405:main.c        ****         directionState = Forward;
 1400              		.loc 1 405 0
 1401 00d0 0023     		movs	r3, #0
 1402 00d2 3B60     		str	r3, [r7]
 406:main.c        ****         return directionState;
 1403              		.loc 1 406 0
 1404 00d4 3B68     		ldr	r3, [r7]
 1405 00d6 01E0     		b	.L71
 1406              	.L78:
 407:main.c        ****     }
 408:main.c        **** 
 409:main.c        ****     // Possible reason
 410:main.c        ****     return previousDirection;
 1407              		.loc 1 410 0
 1408 00d8 064B     		ldr	r3, .L81+16
 1409 00da 1B68     		ldr	r3, [r3]
 1410              	.L71:
 411:main.c        **** }
 1411              		.loc 1 411 0
 1412 00dc 1846     		mov	r0, r3
 1413 00de 0837     		adds	r7, r7, #8
 1414              		.cfi_def_cfa_offset 8
 1415 00e0 BD46     		mov	sp, r7
 1416              		.cfi_def_cfa_register 13
 1417              		@ sp needed
 1418 00e2 80BD     		pop	{r7, pc}
 1419              	.L82:
 1420              		.align	2
 1421              	.L81:
 1422 00e4 00000000 		.word	currentOrientation
 1423 00e8 0000B942 		.word	1119420416
 1424 00ec 66660043 		.word	1124099686
 1425 00f0 00000000 		.word	currentDirection
 1426 00f4 00000000 		.word	previousDirection
 1427 00f8 00000000 		.word	totalDistance
 1428 00fc 00000000 		.word	stopBuffer
 1429 0100 00000000 		.word	s6
 1430 0104 00000000 		.word	s5
 1431 0108 00000000 		.word	s3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 34


 1432 010c 00000000 		.word	s4
 1433              		.cfi_endproc
 1434              	.LFE74:
 1435              		.size	CheckSensorDirection, .-CheckSensorDirection
 1436              		.section	.text.SetRobotMovement,"ax",%progbits
 1437              		.align	2
 1438              		.global	SetRobotMovement
 1439              		.thumb
 1440              		.thumb_func
 1441              		.type	SetRobotMovement, %function
 1442              	SetRobotMovement:
 1443              	.LFB75:
 412:main.c        **** 
 413:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 414:main.c        **** void SetRobotMovement() {
 1444              		.loc 1 414 0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 0
 1447              		@ frame_needed = 1, uses_anonymous_args = 0
 1448 0000 80B5     		push	{r7, lr}
 1449              		.cfi_def_cfa_offset 8
 1450              		.cfi_offset 7, -8
 1451              		.cfi_offset 14, -4
 1452 0002 00AF     		add	r7, sp, #0
 1453              		.cfi_def_cfa_register 7
 415:main.c        ****     currentDirection = CheckSensorDirection();   
 1454              		.loc 1 415 0
 1455 0004 FFF7FEFF 		bl	CheckSensorDirection
 1456 0008 0246     		mov	r2, r0
 1457 000a 224B     		ldr	r3, .L100
 1458 000c 1A60     		str	r2, [r3]
 416:main.c        ****     
 417:main.c        ****     switch (currentDirection) {
 1459              		.loc 1 417 0
 1460 000e 214B     		ldr	r3, .L100
 1461 0010 1B68     		ldr	r3, [r3]
 1462 0012 0B2B     		cmp	r3, #11
 1463 0014 3CD8     		bhi	.L98
 1464 0016 01A2     		adr	r2, .L86
 1465 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1466              		.p2align 2
 1467              	.L86:
 1468 001c 4D000000 		.word	.L85+1
 1469 0020 53000000 		.word	.L87+1
 1470 0024 59000000 		.word	.L88+1
 1471 0028 65000000 		.word	.L89+1
 1472 002c 5F000000 		.word	.L90+1
 1473 0030 6B000000 		.word	.L91+1
 1474 0034 8F000000 		.word	.L99+1
 1475 0038 71000000 		.word	.L93+1
 1476 003c 89000000 		.word	.L94+1
 1477 0040 83000000 		.word	.L95+1
 1478 0044 77000000 		.word	.L96+1
 1479 0048 7D000000 		.word	.L97+1
 1480              		.p2align 1
 1481              	.L85:
 418:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 35


 419:main.c        ****         case Forward:
 420:main.c        ****             moveForward();
 1482              		.loc 1 420 0
 1483 004c FFF7FEFF 		bl	moveForward
 421:main.c        ****             break;
 1484              		.loc 1 421 0
 1485 0050 1EE0     		b	.L84
 1486              	.L87:
 422:main.c        ****         case TurnRight:
 423:main.c        ****             turnRight();
 1487              		.loc 1 423 0
 1488 0052 FFF7FEFF 		bl	turnRight
 424:main.c        ****             break;
 1489              		.loc 1 424 0
 1490 0056 1BE0     		b	.L84
 1491              	.L88:
 425:main.c        ****         case TurnLeft:
 426:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1492              		.loc 1 426 0
 1493 0058 FFF7FEFF 		bl	turnLeft
 427:main.c        ****             break;
 1494              		.loc 1 427 0
 1495 005c 18E0     		b	.L84
 1496              	.L90:
 428:main.c        ****         case AdjustToTheRight:
 429:main.c        ****             adjustRight();
 1497              		.loc 1 429 0
 1498 005e FFF7FEFF 		bl	adjustRight
 430:main.c        ****             break;
 1499              		.loc 1 430 0
 1500 0062 15E0     		b	.L84
 1501              	.L89:
 431:main.c        ****         case AdjustToTheLeft:
 432:main.c        ****             adjustLeft();
 1502              		.loc 1 432 0
 1503 0064 FFF7FEFF 		bl	adjustLeft
 433:main.c        ****             break;
 1504              		.loc 1 433 0
 1505 0068 12E0     		b	.L84
 1506              	.L91:
 434:main.c        ****         case Stop:
 435:main.c        ****             stopMoving();
 1507              		.loc 1 435 0
 1508 006a FFF7FEFF 		bl	stopMoving
 436:main.c        ****             break;
 1509              		.loc 1 436 0
 1510 006e 0FE0     		b	.L84
 1511              	.L93:
 437:main.c        ****         case waitForTurn:
 438:main.c        ****             moveForward(); 
 1512              		.loc 1 438 0
 1513 0070 FFF7FEFF 		bl	moveForward
 439:main.c        ****             break;
 1514              		.loc 1 439 0
 1515 0074 0CE0     		b	.L84
 1516              	.L96:
 440:main.c        ****         case ForwardAfterTurn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 36


 441:main.c        ****             moveForward();
 1517              		.loc 1 441 0
 1518 0076 FFF7FEFF 		bl	moveForward
 442:main.c        ****             break;
 1519              		.loc 1 442 0
 1520 007a 09E0     		b	.L84
 1521              	.L97:
 443:main.c        ****         case Backward:
 444:main.c        ****             moveBackward();
 1522              		.loc 1 444 0
 1523 007c FFF7FEFF 		bl	moveBackward
 445:main.c        ****             break;
 1524              		.loc 1 445 0
 1525 0080 06E0     		b	.L84
 1526              	.L95:
 446:main.c        ****         case waitForLeftTurn:
 447:main.c        ****             moveForward();
 1527              		.loc 1 447 0
 1528 0082 FFF7FEFF 		bl	moveForward
 448:main.c        ****             break;
 1529              		.loc 1 448 0
 1530 0086 03E0     		b	.L84
 1531              	.L94:
 449:main.c        ****         case waitForRightTurn:
 450:main.c        ****             moveForward();
 1532              		.loc 1 450 0
 1533 0088 FFF7FEFF 		bl	moveForward
 451:main.c        ****             break;
 1534              		.loc 1 451 0
 1535 008c 00E0     		b	.L84
 1536              	.L99:
 452:main.c        ****         case Unknown:
 453:main.c        ****             // UNKNOWN CONFIGURATION
 454:main.c        ****             break;  
 1537              		.loc 1 454 0
 1538 008e 00BF     		nop
 1539              	.L84:
 1540              	.L98:
 455:main.c        ****     }
 456:main.c        **** }...
 1541              		.loc 1 456 0
 1542 0090 00BF     		nop
 1543 0092 80BD     		pop	{r7, pc}
 1544              	.L101:
 1545              		.align	2
 1546              	.L100:
 1547 0094 00000000 		.word	currentDirection
 1548              		.cfi_endproc
 1549              	.LFE75:
 1550              		.size	SetRobotMovement, .-SetRobotMovement
 1551              		.text
 1552              	.Letext0:
 1553              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1554              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1555              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1556              		.file 5 "vars.h"
 1557              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 37


 1558              		.file 7 "map.h"
 1559              		.section	.debug_info,"",%progbits
 1560              	.Ldebug_info0:
 1561 0000 7A060000 		.4byte	0x67a
 1562 0004 0400     		.2byte	0x4
 1563 0006 00000000 		.4byte	.Ldebug_abbrev0
 1564 000a 04       		.byte	0x4
 1565 000b 01       		.uleb128 0x1
 1566 000c 9F000000 		.4byte	.LASF103
 1567 0010 0C       		.byte	0xc
 1568 0011 75040000 		.4byte	.LASF104
 1569 0015 C7030000 		.4byte	.LASF105
 1570 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1571 001d 00000000 		.4byte	0
 1572 0021 00000000 		.4byte	.Ldebug_line0
 1573 0025 02       		.uleb128 0x2
 1574 0026 01       		.byte	0x1
 1575 0027 06       		.byte	0x6
 1576 0028 EE020000 		.4byte	.LASF0
 1577 002c 02       		.uleb128 0x2
 1578 002d 01       		.byte	0x1
 1579 002e 08       		.byte	0x8
 1580 002f 5C020000 		.4byte	.LASF1
 1581 0033 02       		.uleb128 0x2
 1582 0034 02       		.byte	0x2
 1583 0035 05       		.byte	0x5
 1584 0036 5B000000 		.4byte	.LASF2
 1585 003a 02       		.uleb128 0x2
 1586 003b 02       		.byte	0x2
 1587 003c 07       		.byte	0x7
 1588 003d 83030000 		.4byte	.LASF3
 1589 0041 03       		.uleb128 0x3
 1590 0042 D8040000 		.4byte	.LASF12
 1591 0046 02       		.byte	0x2
 1592 0047 3F       		.byte	0x3f
 1593 0048 4C000000 		.4byte	0x4c
 1594 004c 02       		.uleb128 0x2
 1595 004d 04       		.byte	0x4
 1596 004e 05       		.byte	0x5
 1597 004f B6030000 		.4byte	.LASF4
 1598 0053 02       		.uleb128 0x2
 1599 0054 04       		.byte	0x4
 1600 0055 07       		.byte	0x7
 1601 0056 7C040000 		.4byte	.LASF5
 1602 005a 02       		.uleb128 0x2
 1603 005b 08       		.byte	0x8
 1604 005c 05       		.byte	0x5
 1605 005d B9010000 		.4byte	.LASF6
 1606 0061 02       		.uleb128 0x2
 1607 0062 08       		.byte	0x8
 1608 0063 07       		.byte	0x7
 1609 0064 02030000 		.4byte	.LASF7
 1610 0068 04       		.uleb128 0x4
 1611 0069 04       		.byte	0x4
 1612 006a 05       		.byte	0x5
 1613 006b 696E7400 		.ascii	"int\000"
 1614 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 38


 1615 0070 04       		.byte	0x4
 1616 0071 07       		.byte	0x7
 1617 0072 2A030000 		.4byte	.LASF8
 1618 0076 02       		.uleb128 0x2
 1619 0077 08       		.byte	0x8
 1620 0078 04       		.byte	0x4
 1621 0079 82020000 		.4byte	.LASF9
 1622 007d 02       		.uleb128 0x2
 1623 007e 04       		.byte	0x4
 1624 007f 07       		.byte	0x7
 1625 0080 72000000 		.4byte	.LASF10
 1626 0084 02       		.uleb128 0x2
 1627 0085 01       		.byte	0x1
 1628 0086 08       		.byte	0x8
 1629 0087 B1030000 		.4byte	.LASF11
 1630 008b 03       		.uleb128 0x3
 1631 008c FA020000 		.4byte	.LASF13
 1632 0090 03       		.byte	0x3
 1633 0091 2C       		.byte	0x2c
 1634 0092 41000000 		.4byte	0x41
 1635 0096 05       		.uleb128 0x5
 1636 0097 89010000 		.4byte	.LASF14
 1637 009b 04       		.byte	0x4
 1638 009c E701     		.2byte	0x1e7
 1639 009e 2C000000 		.4byte	0x2c
 1640 00a2 05       		.uleb128 0x5
 1641 00a3 6B010000 		.4byte	.LASF15
 1642 00a7 04       		.byte	0x4
 1643 00a8 E801     		.2byte	0x1e8
 1644 00aa 3A000000 		.4byte	0x3a
 1645 00ae 05       		.uleb128 0x5
 1646 00af 6E040000 		.4byte	.LASF16
 1647 00b3 04       		.byte	0x4
 1648 00b4 E901     		.2byte	0x1e9
 1649 00b6 53000000 		.4byte	0x53
 1650 00ba 05       		.uleb128 0x5
 1651 00bb C7010000 		.4byte	.LASF17
 1652 00bf 04       		.byte	0x4
 1653 00c0 EA01     		.2byte	0x1ea
 1654 00c2 25000000 		.4byte	0x25
 1655 00c6 05       		.uleb128 0x5
 1656 00c7 83010000 		.4byte	.LASF18
 1657 00cb 04       		.byte	0x4
 1658 00cc EB01     		.2byte	0x1eb
 1659 00ce 33000000 		.4byte	0x33
 1660 00d2 02       		.uleb128 0x2
 1661 00d3 04       		.byte	0x4
 1662 00d4 04       		.byte	0x4
 1663 00d5 A1010000 		.4byte	.LASF19
 1664 00d9 02       		.uleb128 0x2
 1665 00da 08       		.byte	0x8
 1666 00db 04       		.byte	0x4
 1667 00dc 97040000 		.4byte	.LASF20
 1668 00e0 06       		.uleb128 0x6
 1669 00e1 96030000 		.4byte	.LASF106
 1670 00e5 20       		.byte	0x20
 1671 00e6 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 39


 1672 00e7 28       		.byte	0x28
 1673 00e8 B9010000 		.4byte	0x1b9
 1674 00ec 07       		.uleb128 0x7
 1675 00ed 97050000 		.4byte	.LASF21
 1676 00f1 05       		.byte	0x5
 1677 00f2 2A       		.byte	0x2a
 1678 00f3 BA000000 		.4byte	0xba
 1679 00f7 00       		.byte	0
 1680 00f8 07       		.uleb128 0x7
 1681 00f9 72010000 		.4byte	.LASF22
 1682 00fd 05       		.byte	0x5
 1683 00fe 2B       		.byte	0x2b
 1684 00ff 96000000 		.4byte	0x96
 1685 0103 01       		.byte	0x1
 1686 0104 07       		.uleb128 0x7
 1687 0105 52040000 		.4byte	.LASF23
 1688 0109 05       		.byte	0x5
 1689 010a 2C       		.byte	0x2c
 1690 010b C6000000 		.4byte	0xc6
 1691 010f 02       		.byte	0x2
 1692 0110 07       		.uleb128 0x7
 1693 0111 47050000 		.4byte	.LASF24
 1694 0115 05       		.byte	0x5
 1695 0116 2D       		.byte	0x2d
 1696 0117 C6000000 		.4byte	0xc6
 1697 011b 04       		.byte	0x4
 1698 011c 07       		.uleb128 0x7
 1699 011d EF040000 		.4byte	.LASF25
 1700 0121 05       		.byte	0x5
 1701 0122 2E       		.byte	0x2e
 1702 0123 C6000000 		.4byte	0xc6
 1703 0127 06       		.byte	0x6
 1704 0128 07       		.uleb128 0x7
 1705 0129 FB010000 		.4byte	.LASF26
 1706 012d 05       		.byte	0x5
 1707 012e 2F       		.byte	0x2f
 1708 012f C6000000 		.4byte	0xc6
 1709 0133 08       		.byte	0x8
 1710 0134 07       		.uleb128 0x7
 1711 0135 E7040000 		.4byte	.LASF27
 1712 0139 05       		.byte	0x5
 1713 013a 30       		.byte	0x30
 1714 013b C6000000 		.4byte	0xc6
 1715 013f 0A       		.byte	0xa
 1716 0140 07       		.uleb128 0x7
 1717 0141 C3020000 		.4byte	.LASF28
 1718 0145 05       		.byte	0x5
 1719 0146 31       		.byte	0x31
 1720 0147 C6000000 		.4byte	0xc6
 1721 014b 0C       		.byte	0xc
 1722 014c 07       		.uleb128 0x7
 1723 014d EE010000 		.4byte	.LASF29
 1724 0151 05       		.byte	0x5
 1725 0152 32       		.byte	0x32
 1726 0153 C6000000 		.4byte	0xc6
 1727 0157 0E       		.byte	0xe
 1728 0158 07       		.uleb128 0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 40


 1729 0159 E6020000 		.4byte	.LASF30
 1730 015d 05       		.byte	0x5
 1731 015e 33       		.byte	0x33
 1732 015f C6000000 		.4byte	0xc6
 1733 0163 10       		.byte	0x10
 1734 0164 07       		.uleb128 0x7
 1735 0165 26040000 		.4byte	.LASF31
 1736 0169 05       		.byte	0x5
 1737 016a 34       		.byte	0x34
 1738 016b C6000000 		.4byte	0xc6
 1739 016f 12       		.byte	0x12
 1740 0170 07       		.uleb128 0x7
 1741 0171 3B040000 		.4byte	.LASF32
 1742 0175 05       		.byte	0x5
 1743 0176 35       		.byte	0x35
 1744 0177 C6000000 		.4byte	0xc6
 1745 017b 14       		.byte	0x14
 1746 017c 07       		.uleb128 0x7
 1747 017d 8F010000 		.4byte	.LASF33
 1748 0181 05       		.byte	0x5
 1749 0182 36       		.byte	0x36
 1750 0183 C6000000 		.4byte	0xc6
 1751 0187 16       		.byte	0x16
 1752 0188 07       		.uleb128 0x7
 1753 0189 53000000 		.4byte	.LASF34
 1754 018d 05       		.byte	0x5
 1755 018e 37       		.byte	0x37
 1756 018f C6000000 		.4byte	0xc6
 1757 0193 18       		.byte	0x18
 1758 0194 07       		.uleb128 0x7
 1759 0195 E6010000 		.4byte	.LASF35
 1760 0199 05       		.byte	0x5
 1761 019a 38       		.byte	0x38
 1762 019b C6000000 		.4byte	0xc6
 1763 019f 1A       		.byte	0x1a
 1764 01a0 07       		.uleb128 0x7
 1765 01a1 6E030000 		.4byte	.LASF36
 1766 01a5 05       		.byte	0x5
 1767 01a6 39       		.byte	0x39
 1768 01a7 C6000000 		.4byte	0xc6
 1769 01ab 1C       		.byte	0x1c
 1770 01ac 07       		.uleb128 0x7
 1771 01ad 2E040000 		.4byte	.LASF37
 1772 01b1 05       		.byte	0x5
 1773 01b2 3A       		.byte	0x3a
 1774 01b3 C6000000 		.4byte	0xc6
 1775 01b7 1E       		.byte	0x1e
 1776 01b8 00       		.byte	0
 1777 01b9 08       		.uleb128 0x8
 1778 01ba 86000000 		.4byte	.LASF50
 1779 01be 04       		.byte	0x4
 1780 01bf 6F000000 		.4byte	0x6f
 1781 01c3 01       		.byte	0x1
 1782 01c4 28       		.byte	0x28
 1783 01c5 12020000 		.4byte	0x212
 1784 01c9 09       		.uleb128 0x9
 1785 01ca BF030000 		.4byte	.LASF38
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 41


 1786 01ce 00       		.byte	0
 1787 01cf 09       		.uleb128 0x9
 1788 01d0 5D040000 		.4byte	.LASF39
 1789 01d4 01       		.byte	0x1
 1790 01d5 09       		.uleb128 0x9
 1791 01d6 0C000000 		.4byte	.LASF40
 1792 01da 02       		.byte	0x2
 1793 01db 09       		.uleb128 0x9
 1794 01dc 5B010000 		.4byte	.LASF41
 1795 01e0 03       		.byte	0x3
 1796 01e1 09       		.uleb128 0x9
 1797 01e2 19030000 		.4byte	.LASF42
 1798 01e6 04       		.byte	0x4
 1799 01e7 09       		.uleb128 0x9
 1800 01e8 E2040000 		.4byte	.LASF43
 1801 01ec 05       		.byte	0x5
 1802 01ed 09       		.uleb128 0x9
 1803 01ee 9E040000 		.4byte	.LASF44
 1804 01f2 06       		.byte	0x6
 1805 01f3 09       		.uleb128 0x9
 1806 01f4 39000000 		.4byte	.LASF45
 1807 01f8 07       		.byte	0x7
 1808 01f9 09       		.uleb128 0x9
 1809 01fa 32010000 		.4byte	.LASF46
 1810 01fe 08       		.byte	0x8
 1811 01ff 09       		.uleb128 0x9
 1812 0200 0C050000 		.4byte	.LASF47
 1813 0204 09       		.byte	0x9
 1814 0205 09       		.uleb128 0x9
 1815 0206 1C000000 		.4byte	.LASF48
 1816 020a 0A       		.byte	0xa
 1817 020b 09       		.uleb128 0x9
 1818 020c 8E040000 		.4byte	.LASF49
 1819 0210 0B       		.byte	0xb
 1820 0211 00       		.byte	0
 1821 0212 08       		.uleb128 0x8
 1822 0213 9C050000 		.4byte	.LASF51
 1823 0217 01       		.byte	0x1
 1824 0218 2C000000 		.4byte	0x2c
 1825 021c 01       		.byte	0x1
 1826 021d 2A       		.byte	0x2a
 1827 021e 3A020000 		.4byte	0x23a
 1828 0222 0A       		.uleb128 0xa
 1829 0223 557000   		.ascii	"Up\000"
 1830 0226 00       		.byte	0
 1831 0227 09       		.uleb128 0x9
 1832 0228 72050000 		.4byte	.LASF52
 1833 022c 01       		.byte	0x1
 1834 022d 09       		.uleb128 0x9
 1835 022e 17020000 		.4byte	.LASF53
 1836 0232 02       		.byte	0x2
 1837 0233 09       		.uleb128 0x9
 1838 0234 A7010000 		.4byte	.LASF54
 1839 0238 03       		.byte	0x3
 1840 0239 00       		.byte	0
 1841 023a 0B       		.uleb128 0xb
 1842 023b 78010000 		.4byte	.LASF62
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 42


 1843 023f 01       		.byte	0x1
 1844 0240 45       		.byte	0x45
 1845 0241 00000000 		.4byte	.LFB64
 1846 0245 E4000000 		.4byte	.LFE64-.LFB64
 1847 0249 01       		.uleb128 0x1
 1848 024a 9C       		.byte	0x9c
 1849 024b 68020000 		.4byte	0x268
 1850 024f 0C       		.uleb128 0xc
 1851 0250 48000000 		.4byte	.LBB2
 1852 0254 62000000 		.4byte	.LBE2-.LBB2
 1853 0258 0D       		.uleb128 0xd
 1854 0259 AD010000 		.4byte	.LASF61
 1855 025d 01       		.byte	0x1
 1856 025e 51       		.byte	0x51
 1857 025f D2000000 		.4byte	0xd2
 1858 0263 02       		.uleb128 0x2
 1859 0264 91       		.byte	0x91
 1860 0265 6C       		.sleb128 -20
 1861 0266 00       		.byte	0
 1862 0267 00       		.byte	0
 1863 0268 0E       		.uleb128 0xe
 1864 0269 B1040000 		.4byte	.LASF55
 1865 026d 01       		.byte	0x1
 1866 026e 5C       		.byte	0x5c
 1867 026f 00000000 		.4byte	.LFB65
 1868 0273 18000000 		.4byte	.LFE65-.LFB65
 1869 0277 01       		.uleb128 0x1
 1870 0278 9C       		.byte	0x9c
 1871 0279 0E       		.uleb128 0xe
 1872 027a 4F010000 		.4byte	.LASF56
 1873 027e 01       		.byte	0x1
 1874 027f 62       		.byte	0x62
 1875 0280 00000000 		.4byte	.LFB66
 1876 0284 18000000 		.4byte	.LFE66-.LFB66
 1877 0288 01       		.uleb128 0x1
 1878 0289 9C       		.byte	0x9c
 1879 028a 0E       		.uleb128 0xe
 1880 028b 77030000 		.4byte	.LASF57
 1881 028f 01       		.byte	0x1
 1882 0290 68       		.byte	0x68
 1883 0291 00000000 		.4byte	.LFB67
 1884 0295 18000000 		.4byte	.LFE67-.LFB67
 1885 0299 01       		.uleb128 0x1
 1886 029a 9C       		.byte	0x9c
 1887 029b 0E       		.uleb128 0xe
 1888 029c 00000000 		.4byte	.LASF58
 1889 02a0 01       		.byte	0x1
 1890 02a1 6E       		.byte	0x6e
 1891 02a2 00000000 		.4byte	.LFB68
 1892 02a6 18000000 		.4byte	.LFE68-.LFB68
 1893 02aa 01       		.uleb128 0x1
 1894 02ab 9C       		.byte	0x9c
 1895 02ac 0F       		.uleb128 0xf
 1896 02ad 61030000 		.4byte	.LASF59
 1897 02b1 01       		.byte	0x1
 1898 02b2 74       		.byte	0x74
 1899 02b3 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 43


 1900 02b7 38000000 		.4byte	.LFE69-.LFB69
 1901 02bb 01       		.uleb128 0x1
 1902 02bc 9C       		.byte	0x9c
 1903 02bd 10       		.uleb128 0x10
 1904 02be 2D010000 		.4byte	.LASF60
 1905 02c2 01       		.byte	0x1
 1906 02c3 80       		.byte	0x80
 1907 02c4 68000000 		.4byte	0x68
 1908 02c8 00000000 		.4byte	.LFB70
 1909 02cc 9C000000 		.4byte	.LFE70-.LFB70
 1910 02d0 01       		.uleb128 0x1
 1911 02d1 9C       		.byte	0x9c
 1912 02d2 11       		.uleb128 0x11
 1913 02d3 1C050000 		.4byte	.LASF107
 1914 02d7 01       		.byte	0x1
 1915 02d8 AF       		.byte	0xaf
 1916 02d9 C6000000 		.4byte	0xc6
 1917 02dd 00000000 		.4byte	.LFB71
 1918 02e1 54000000 		.4byte	.LFE71-.LFB71
 1919 02e5 01       		.uleb128 0x1
 1920 02e6 9C       		.byte	0x9c
 1921 02e7 16030000 		.4byte	0x316
 1922 02eb 12       		.uleb128 0x12
 1923 02ec C6040000 		.4byte	.LASF108
 1924 02f0 01       		.byte	0x1
 1925 02f1 AF       		.byte	0xaf
 1926 02f2 A2000000 		.4byte	0xa2
 1927 02f6 02       		.uleb128 0x2
 1928 02f7 91       		.byte	0x91
 1929 02f8 66       		.sleb128 -26
 1930 02f9 13       		.uleb128 0x13
 1931 02fa 63707300 		.ascii	"cps\000"
 1932 02fe 01       		.byte	0x1
 1933 02ff B1       		.byte	0xb1
 1934 0300 D2000000 		.4byte	0xd2
 1935 0304 02       		.uleb128 0x2
 1936 0305 91       		.byte	0x91
 1937 0306 6C       		.sleb128 -20
 1938 0307 13       		.uleb128 0x13
 1939 0308 72706D00 		.ascii	"rpm\000"
 1940 030c 01       		.byte	0x1
 1941 030d B2       		.byte	0xb2
 1942 030e C6000000 		.4byte	0xc6
 1943 0312 02       		.uleb128 0x2
 1944 0313 91       		.byte	0x91
 1945 0314 6A       		.sleb128 -22
 1946 0315 00       		.byte	0
 1947 0316 14       		.uleb128 0x14
 1948 0317 A0030000 		.4byte	.LASF67
 1949 031b 01       		.byte	0x1
 1950 031c BA       		.byte	0xba
 1951 031d 00000000 		.4byte	.LFB72
 1952 0321 34000000 		.4byte	.LFE72-.LFB72
 1953 0325 01       		.uleb128 0x1
 1954 0326 9C       		.byte	0x9c
 1955 0327 15       		.uleb128 0x15
 1956 0328 43010000 		.4byte	.LASF63
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 44


 1957 032c 01       		.byte	0x1
 1958 032d C6       		.byte	0xc6
 1959 032e B9010000 		.4byte	0x1b9
 1960 0332 00000000 		.4byte	.LFB73
 1961 0336 E4020000 		.4byte	.LFE73-.LFB73
 1962 033a 01       		.uleb128 0x1
 1963 033b 9C       		.byte	0x9c
 1964 033c 4F030000 		.4byte	0x34f
 1965 0340 0D       		.uleb128 0xd
 1966 0341 88050000 		.4byte	.LASF64
 1967 0345 01       		.byte	0x1
 1968 0346 C7       		.byte	0xc7
 1969 0347 B9010000 		.4byte	0x1b9
 1970 034b 02       		.uleb128 0x2
 1971 034c 91       		.byte	0x91
 1972 034d 74       		.sleb128 -12
 1973 034e 00       		.byte	0
 1974 034f 16       		.uleb128 0x16
 1975 0350 1C020000 		.4byte	.LASF65
 1976 0354 01       		.byte	0x1
 1977 0355 1B01     		.2byte	0x11b
 1978 0357 B9010000 		.4byte	0x1b9
 1979 035b 00000000 		.4byte	.LFB74
 1980 035f 10010000 		.4byte	.LFE74-.LFB74
 1981 0363 01       		.uleb128 0x1
 1982 0364 9C       		.byte	0x9c
 1983 0365 88030000 		.4byte	0x388
 1984 0369 17       		.uleb128 0x17
 1985 036a 52020000 		.4byte	.LASF66
 1986 036e 01       		.byte	0x1
 1987 036f 1C01     		.2byte	0x11c
 1988 0371 D2000000 		.4byte	0xd2
 1989 0375 02       		.uleb128 0x2
 1990 0376 91       		.byte	0x91
 1991 0377 74       		.sleb128 -12
 1992 0378 17       		.uleb128 0x17
 1993 0379 88050000 		.4byte	.LASF64
 1994 037d 01       		.byte	0x1
 1995 037e 2201     		.2byte	0x122
 1996 0380 B9010000 		.4byte	0x1b9
 1997 0384 02       		.uleb128 0x2
 1998 0385 91       		.byte	0x91
 1999 0386 70       		.sleb128 -16
 2000 0387 00       		.byte	0
 2001 0388 18       		.uleb128 0x18
 2002 0389 50030000 		.4byte	.LASF68
 2003 038d 01       		.byte	0x1
 2004 038e 9E01     		.2byte	0x19e
 2005 0390 00000000 		.4byte	.LFB75
 2006 0394 98000000 		.4byte	.LFE75-.LFB75
 2007 0398 01       		.uleb128 0x1
 2008 0399 9C       		.byte	0x9c
 2009 039a 19       		.uleb128 0x19
 2010 039b 52050000 		.4byte	.LASF69
 2011 039f 06       		.byte	0x6
 2012 03a0 1207     		.2byte	0x712
 2013 03a2 A6030000 		.4byte	0x3a6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 45


 2014 03a6 1A       		.uleb128 0x1a
 2015 03a7 8B000000 		.4byte	0x8b
 2016 03ab 1B       		.uleb128 0x1b
 2017 03ac 747300   		.ascii	"ts\000"
 2018 03af 05       		.byte	0x5
 2019 03b0 10       		.byte	0x10
 2020 03b1 96000000 		.4byte	0x96
 2021 03b5 05       		.uleb128 0x5
 2022 03b6 03       		.byte	0x3
 2023 03b7 00000000 		.4byte	ts
 2024 03bb 1C       		.uleb128 0x1c
 2025 03bc 15000000 		.4byte	.LASF70
 2026 03c0 05       		.byte	0x5
 2027 03c1 11       		.byte	0x11
 2028 03c2 A2000000 		.4byte	0xa2
 2029 03c6 05       		.uleb128 0x5
 2030 03c7 03       		.byte	0x3
 2031 03c8 00000000 		.4byte	ts_enc
 2032 03cc 1C       		.uleb128 0x1c
 2033 03cd 37030000 		.4byte	.LASF71
 2034 03d1 05       		.byte	0x5
 2035 03d2 12       		.byte	0x12
 2036 03d3 A2000000 		.4byte	0xa2
 2037 03d7 05       		.uleb128 0x5
 2038 03d8 03       		.byte	0x3
 2039 03d9 00000000 		.4byte	ts_update
 2040 03dd 1C       		.uleb128 0x1c
 2041 03de BD040000 		.4byte	.LASF72
 2042 03e2 05       		.byte	0x5
 2043 03e3 13       		.byte	0x13
 2044 03e4 A2000000 		.4byte	0xa2
 2045 03e8 05       		.uleb128 0x5
 2046 03e9 03       		.byte	0x3
 2047 03ea 00000000 		.4byte	ts_speed
 2048 03ee 1C       		.uleb128 0x1c
 2049 03ef 01050000 		.4byte	.LASF73
 2050 03f3 05       		.byte	0x5
 2051 03f4 14       		.byte	0x14
 2052 03f5 A2000000 		.4byte	0xa2
 2053 03f9 05       		.uleb128 0x5
 2054 03fa 03       		.byte	0x3
 2055 03fb 00000000 		.4byte	ts_display
 2056 03ff 1C       		.uleb128 0x1c
 2057 0400 CC040000 		.4byte	.LASF74
 2058 0404 05       		.byte	0x5
 2059 0405 16       		.byte	0x16
 2060 0406 96000000 		.4byte	0x96
 2061 040a 05       		.uleb128 0x5
 2062 040b 03       		.byte	0x3
 2063 040c 00000000 		.4byte	flag_ts_enc
 2064 0410 1C       		.uleb128 0x1c
 2065 0411 D7010000 		.4byte	.LASF75
 2066 0415 05       		.byte	0x5
 2067 0416 17       		.byte	0x17
 2068 0417 96000000 		.4byte	0x96
 2069 041b 05       		.uleb128 0x5
 2070 041c 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 46


 2071 041d 00000000 		.4byte	flag_ts_update
 2072 0421 1C       		.uleb128 0x1c
 2073 0422 45000000 		.4byte	.LASF76
 2074 0426 05       		.byte	0x5
 2075 0427 18       		.byte	0x18
 2076 0428 96000000 		.4byte	0x96
 2077 042c 05       		.uleb128 0x5
 2078 042d 03       		.byte	0x3
 2079 042e 00000000 		.4byte	flag_ts_speed
 2080 0432 1C       		.uleb128 0x1c
 2081 0433 3A020000 		.4byte	.LASF77
 2082 0437 05       		.byte	0x5
 2083 0438 19       		.byte	0x19
 2084 0439 96000000 		.4byte	0x96
 2085 043d 05       		.uleb128 0x5
 2086 043e 03       		.byte	0x3
 2087 043f 00000000 		.4byte	flag_ts_display
 2088 0443 1C       		.uleb128 0x1c
 2089 0444 4A020000 		.4byte	.LASF78
 2090 0448 05       		.byte	0x5
 2091 0449 1B       		.byte	0x1b
 2092 044a 96000000 		.4byte	0x96
 2093 044e 05       		.uleb128 0x5
 2094 044f 03       		.byte	0x3
 2095 0450 00000000 		.4byte	flag_rx
 2096 0454 1C       		.uleb128 0x1c
 2097 0455 2D000000 		.4byte	.LASF79
 2098 0459 05       		.byte	0x5
 2099 045a 1C       		.byte	0x1c
 2100 045b 96000000 		.4byte	0x96
 2101 045f 05       		.uleb128 0x5
 2102 0460 03       		.byte	0x3
 2103 0461 00000000 		.4byte	flag_packet
 2104 0465 1C       		.uleb128 0x1c
 2105 0466 41030000 		.4byte	.LASF80
 2106 046a 05       		.byte	0x5
 2107 046b 1D       		.byte	0x1d
 2108 046c 96000000 		.4byte	0x96
 2109 0470 05       		.uleb128 0x5
 2110 0471 03       		.byte	0x3
 2111 0472 00000000 		.4byte	flag_KB_string
 2112 0476 1C       		.uleb128 0x1c
 2113 0477 D7020000 		.4byte	.LASF81
 2114 047b 05       		.byte	0x5
 2115 047c 1F       		.byte	0x1f
 2116 047d 96000000 		.4byte	0x96
 2117 0481 05       		.uleb128 0x5
 2118 0482 03       		.byte	0x3
 2119 0483 00000000 		.4byte	dataready_flag
 2120 0487 1C       		.uleb128 0x1c
 2121 0488 2B050000 		.4byte	.LASF82
 2122 048c 05       		.byte	0x5
 2123 048d 21       		.byte	0x21
 2124 048e 96000000 		.4byte	0x96
 2125 0492 05       		.uleb128 0x5
 2126 0493 03       		.byte	0x3
 2127 0494 00000000 		.4byte	flag_rf_transmission_active
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 47


 2128 0498 1D       		.uleb128 0x1d
 2129 0499 84000000 		.4byte	0x84
 2130 049d A8040000 		.4byte	0x4a8
 2131 04a1 1E       		.uleb128 0x1e
 2132 04a2 7D000000 		.4byte	0x7d
 2133 04a6 3F       		.byte	0x3f
 2134 04a7 00       		.byte	0
 2135 04a8 1C       		.uleb128 0x1c
 2136 04a9 44040000 		.4byte	.LASF83
 2137 04ad 05       		.byte	0x5
 2138 04ae 24       		.byte	0x24
 2139 04af 98040000 		.4byte	0x498
 2140 04b3 05       		.uleb128 0x5
 2141 04b4 03       		.byte	0x3
 2142 04b5 00000000 		.4byte	displaystring
 2143 04b9 1C       		.uleb128 0x1c
 2144 04ba 9C010000 		.4byte	.LASF84
 2145 04be 05       		.byte	0x5
 2146 04bf 25       		.byte	0x25
 2147 04c0 98040000 		.4byte	0x498
 2148 04c4 05       		.uleb128 0x5
 2149 04c5 03       		.byte	0x3
 2150 04c6 00000000 		.4byte	line
 2151 04ca 1C       		.uleb128 0x1c
 2152 04cb 7C020000 		.4byte	.LASF85
 2153 04cf 05       		.byte	0x5
 2154 04d0 25       		.byte	0x25
 2155 04d1 98040000 		.4byte	0x498
 2156 04d5 05       		.uleb128 0x5
 2157 04d6 03       		.byte	0x3
 2158 04d7 00000000 		.4byte	entry
 2159 04db 1D       		.uleb128 0x1d
 2160 04dc 96000000 		.4byte	0x96
 2161 04e0 EB040000 		.4byte	0x4eb
 2162 04e4 1E       		.uleb128 0x1e
 2163 04e5 7D000000 		.4byte	0x7d
 2164 04e9 3F       		.byte	0x3f
 2165 04ea 00       		.byte	0
 2166 04eb 1C       		.uleb128 0x1c
 2167 04ec 95000000 		.4byte	.LASF86
 2168 04f0 05       		.byte	0x5
 2169 04f1 26       		.byte	0x26
 2170 04f2 DB040000 		.4byte	0x4db
 2171 04f6 05       		.uleb128 0x5
 2172 04f7 03       		.byte	0x3
 2173 04f8 00000000 		.4byte	usbBuffer
 2174 04fc 1C       		.uleb128 0x1c
 2175 04fd 65000000 		.4byte	.LASF87
 2176 0501 05       		.byte	0x5
 2177 0502 3C       		.byte	0x3c
 2178 0503 E0000000 		.4byte	0xe0
 2179 0507 05       		.uleb128 0x5
 2180 0508 03       		.byte	0x3
 2181 0509 00000000 		.4byte	system_state
 2182 050d 1D       		.uleb128 0x1d
 2183 050e 68000000 		.4byte	0x68
 2184 0512 23050000 		.4byte	0x523
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 48


 2185 0516 1E       		.uleb128 0x1e
 2186 0517 7D000000 		.4byte	0x7d
 2187 051b 0E       		.byte	0xe
 2188 051c 1E       		.uleb128 0x1e
 2189 051d 7D000000 		.4byte	0x7d
 2190 0521 12       		.byte	0x12
 2191 0522 00       		.byte	0
 2192 0523 1F       		.uleb128 0x1f
 2193 0524 6D617000 		.ascii	"map\000"
 2194 0528 07       		.byte	0x7
 2195 0529 04       		.byte	0x4
 2196 052a 0D050000 		.4byte	0x50d
 2197 052e 1C       		.uleb128 0x1c
 2198 052f 77050000 		.4byte	.LASF88
 2199 0533 01       		.byte	0x1
 2200 0534 2B       		.byte	0x2b
 2201 0535 B9010000 		.4byte	0x1b9
 2202 0539 05       		.uleb128 0x5
 2203 053a 03       		.byte	0x3
 2204 053b 00000000 		.4byte	currentDirection
 2205 053f 1C       		.uleb128 0x1c
 2206 0540 99020000 		.4byte	.LASF89
 2207 0544 01       		.byte	0x1
 2208 0545 2C       		.byte	0x2c
 2209 0546 B9010000 		.4byte	0x1b9
 2210 054a 05       		.uleb128 0x5
 2211 054b 03       		.byte	0x3
 2212 054c 00000000 		.4byte	previousDirection
 2213 0550 1C       		.uleb128 0x1c
 2214 0551 5F050000 		.4byte	.LASF90
 2215 0555 01       		.byte	0x1
 2216 0556 2D       		.byte	0x2d
 2217 0557 12020000 		.4byte	0x212
 2218 055b 05       		.uleb128 0x5
 2219 055c 03       		.byte	0x3
 2220 055d 00000000 		.4byte	currentOrientation
 2221 0561 1C       		.uleb128 0x1c
 2222 0562 03020000 		.4byte	.LASF91
 2223 0566 01       		.byte	0x1
 2224 0567 2E       		.byte	0x2e
 2225 0568 12020000 		.4byte	0x212
 2226 056c 05       		.uleb128 0x5
 2227 056d 03       		.byte	0x3
 2228 056e 00000000 		.4byte	previousOrientation
 2229 0572 1B       		.uleb128 0x1b
 2230 0573 733300   		.ascii	"s3\000"
 2231 0576 01       		.byte	0x1
 2232 0577 32       		.byte	0x32
 2233 0578 96000000 		.4byte	0x96
 2234 057c 05       		.uleb128 0x5
 2235 057d 03       		.byte	0x3
 2236 057e 00000000 		.4byte	s3
 2237 0582 1B       		.uleb128 0x1b
 2238 0583 733400   		.ascii	"s4\000"
 2239 0586 01       		.byte	0x1
 2240 0587 33       		.byte	0x33
 2241 0588 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 49


 2242 058c 05       		.uleb128 0x5
 2243 058d 03       		.byte	0x3
 2244 058e 00000000 		.4byte	s4
 2245 0592 1B       		.uleb128 0x1b
 2246 0593 733500   		.ascii	"s5\000"
 2247 0596 01       		.byte	0x1
 2248 0597 34       		.byte	0x34
 2249 0598 96000000 		.4byte	0x96
 2250 059c 05       		.uleb128 0x5
 2251 059d 03       		.byte	0x3
 2252 059e 00000000 		.4byte	s5
 2253 05a2 1B       		.uleb128 0x1b
 2254 05a3 733600   		.ascii	"s6\000"
 2255 05a6 01       		.byte	0x1
 2256 05a7 35       		.byte	0x35
 2257 05a8 96000000 		.4byte	0x96
 2258 05ac 05       		.uleb128 0x5
 2259 05ad 03       		.byte	0x3
 2260 05ae 00000000 		.4byte	s6
 2261 05b2 1C       		.uleb128 0x1c
 2262 05b3 6A020000 		.4byte	.LASF92
 2263 05b7 01       		.byte	0x1
 2264 05b8 3A       		.byte	0x3a
 2265 05b9 AE000000 		.4byte	0xae
 2266 05bd 05       		.uleb128 0x5
 2267 05be 03       		.byte	0x3
 2268 05bf 00000000 		.4byte	totalMilliseconds
 2269 05c3 1C       		.uleb128 0x1c
 2270 05c4 AB020000 		.4byte	.LASF93
 2271 05c8 01       		.byte	0x1
 2272 05c9 3B       		.byte	0x3b
 2273 05ca D2000000 		.4byte	0xd2
 2274 05ce 05       		.uleb128 0x5
 2275 05cf 03       		.byte	0x3
 2276 05d0 00000000 		.4byte	totalDistance
 2277 05d4 1D       		.uleb128 0x1d
 2278 05d5 84000000 		.4byte	0x84
 2279 05d9 E4050000 		.4byte	0x5e4
 2280 05dd 1E       		.uleb128 0x1e
 2281 05de 7D000000 		.4byte	0x7d
 2282 05e2 44       		.byte	0x44
 2283 05e3 00       		.byte	0
 2284 05e4 1C       		.uleb128 0x1c
 2285 05e5 67040000 		.4byte	.LASF94
 2286 05e9 01       		.byte	0x1
 2287 05ea 3D       		.byte	0x3d
 2288 05eb D4050000 		.4byte	0x5d4
 2289 05ef 05       		.uleb128 0x5
 2290 05f0 03       		.byte	0x3
 2291 05f1 00000000 		.4byte	buffer
 2292 05f5 1C       		.uleb128 0x1c
 2293 05f6 18040000 		.4byte	.LASF95
 2294 05fa 01       		.byte	0x1
 2295 05fb 3E       		.byte	0x3e
 2296 05fc 68000000 		.4byte	0x68
 2297 0600 05       		.uleb128 0x5
 2298 0601 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 50


 2299 0602 00000000 		.4byte	quadDec2Count
 2300 0606 1C       		.uleb128 0x1c
 2301 0607 31020000 		.4byte	.LASF96
 2302 060b 01       		.byte	0x1
 2303 060c 3F       		.byte	0x3f
 2304 060d 68000000 		.4byte	0x68
 2305 0611 05       		.uleb128 0x5
 2306 0612 03       		.byte	0x3
 2307 0613 00000000 		.4byte	timerInt
 2308 0617 1C       		.uleb128 0x1c
 2309 0618 B9020000 		.4byte	.LASF97
 2310 061c 01       		.byte	0x1
 2311 061d 40       		.byte	0x40
 2312 061e 68000000 		.4byte	0x68
 2313 0622 05       		.uleb128 0x5
 2314 0623 03       		.byte	0x3
 2315 0624 00000000 		.4byte	keepLedOn
 2316 0628 1C       		.uleb128 0x1c
 2317 0629 7B000000 		.4byte	.LASF98
 2318 062d 01       		.byte	0x1
 2319 062e 41       		.byte	0x41
 2320 062f AE000000 		.4byte	0xae
 2321 0633 05       		.uleb128 0x5
 2322 0634 03       		.byte	0x3
 2323 0635 00000000 		.4byte	stopBuffer
 2324 0639 1C       		.uleb128 0x1c
 2325 063a CC020000 		.4byte	.LASF99
 2326 063e 01       		.byte	0x1
 2327 063f C1       		.byte	0xc1
 2328 0640 D2000000 		.4byte	0xd2
 2329 0644 05       		.uleb128 0x5
 2330 0645 03       		.byte	0x3
 2331 0646 00000000 		.4byte	yBlocksize
 2332 064a 1C       		.uleb128 0x1c
 2333 064b CC010000 		.4byte	.LASF100
 2334 064f 01       		.byte	0x1
 2335 0650 C2       		.byte	0xc2
 2336 0651 D2000000 		.4byte	0xd2
 2337 0655 05       		.uleb128 0x5
 2338 0656 03       		.byte	0x3
 2339 0657 00000000 		.4byte	xBlocksize
 2340 065b 1C       		.uleb128 0x1c
 2341 065c A6040000 		.4byte	.LASF101
 2342 0660 01       		.byte	0x1
 2343 0661 C3       		.byte	0xc3
 2344 0662 96000000 		.4byte	0x96
 2345 0666 05       		.uleb128 0x5
 2346 0667 03       		.byte	0x3
 2347 0668 00000000 		.4byte	currentRow
 2348 066c 1C       		.uleb128 0x1c
 2349 066d 8E020000 		.4byte	.LASF102
 2350 0671 01       		.byte	0x1
 2351 0672 C4       		.byte	0xc4
 2352 0673 96000000 		.4byte	0x96
 2353 0677 05       		.uleb128 0x5
 2354 0678 03       		.byte	0x3
 2355 0679 00000000 		.4byte	currentCol
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 51


 2356 067d 00       		.byte	0
 2357              		.section	.debug_abbrev,"",%progbits
 2358              	.Ldebug_abbrev0:
 2359 0000 01       		.uleb128 0x1
 2360 0001 11       		.uleb128 0x11
 2361 0002 01       		.byte	0x1
 2362 0003 25       		.uleb128 0x25
 2363 0004 0E       		.uleb128 0xe
 2364 0005 13       		.uleb128 0x13
 2365 0006 0B       		.uleb128 0xb
 2366 0007 03       		.uleb128 0x3
 2367 0008 0E       		.uleb128 0xe
 2368 0009 1B       		.uleb128 0x1b
 2369 000a 0E       		.uleb128 0xe
 2370 000b 55       		.uleb128 0x55
 2371 000c 17       		.uleb128 0x17
 2372 000d 11       		.uleb128 0x11
 2373 000e 01       		.uleb128 0x1
 2374 000f 10       		.uleb128 0x10
 2375 0010 17       		.uleb128 0x17
 2376 0011 00       		.byte	0
 2377 0012 00       		.byte	0
 2378 0013 02       		.uleb128 0x2
 2379 0014 24       		.uleb128 0x24
 2380 0015 00       		.byte	0
 2381 0016 0B       		.uleb128 0xb
 2382 0017 0B       		.uleb128 0xb
 2383 0018 3E       		.uleb128 0x3e
 2384 0019 0B       		.uleb128 0xb
 2385 001a 03       		.uleb128 0x3
 2386 001b 0E       		.uleb128 0xe
 2387 001c 00       		.byte	0
 2388 001d 00       		.byte	0
 2389 001e 03       		.uleb128 0x3
 2390 001f 16       		.uleb128 0x16
 2391 0020 00       		.byte	0
 2392 0021 03       		.uleb128 0x3
 2393 0022 0E       		.uleb128 0xe
 2394 0023 3A       		.uleb128 0x3a
 2395 0024 0B       		.uleb128 0xb
 2396 0025 3B       		.uleb128 0x3b
 2397 0026 0B       		.uleb128 0xb
 2398 0027 49       		.uleb128 0x49
 2399 0028 13       		.uleb128 0x13
 2400 0029 00       		.byte	0
 2401 002a 00       		.byte	0
 2402 002b 04       		.uleb128 0x4
 2403 002c 24       		.uleb128 0x24
 2404 002d 00       		.byte	0
 2405 002e 0B       		.uleb128 0xb
 2406 002f 0B       		.uleb128 0xb
 2407 0030 3E       		.uleb128 0x3e
 2408 0031 0B       		.uleb128 0xb
 2409 0032 03       		.uleb128 0x3
 2410 0033 08       		.uleb128 0x8
 2411 0034 00       		.byte	0
 2412 0035 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 52


 2413 0036 05       		.uleb128 0x5
 2414 0037 16       		.uleb128 0x16
 2415 0038 00       		.byte	0
 2416 0039 03       		.uleb128 0x3
 2417 003a 0E       		.uleb128 0xe
 2418 003b 3A       		.uleb128 0x3a
 2419 003c 0B       		.uleb128 0xb
 2420 003d 3B       		.uleb128 0x3b
 2421 003e 05       		.uleb128 0x5
 2422 003f 49       		.uleb128 0x49
 2423 0040 13       		.uleb128 0x13
 2424 0041 00       		.byte	0
 2425 0042 00       		.byte	0
 2426 0043 06       		.uleb128 0x6
 2427 0044 13       		.uleb128 0x13
 2428 0045 01       		.byte	0x1
 2429 0046 03       		.uleb128 0x3
 2430 0047 0E       		.uleb128 0xe
 2431 0048 0B       		.uleb128 0xb
 2432 0049 0B       		.uleb128 0xb
 2433 004a 3A       		.uleb128 0x3a
 2434 004b 0B       		.uleb128 0xb
 2435 004c 3B       		.uleb128 0x3b
 2436 004d 0B       		.uleb128 0xb
 2437 004e 01       		.uleb128 0x1
 2438 004f 13       		.uleb128 0x13
 2439 0050 00       		.byte	0
 2440 0051 00       		.byte	0
 2441 0052 07       		.uleb128 0x7
 2442 0053 0D       		.uleb128 0xd
 2443 0054 00       		.byte	0
 2444 0055 03       		.uleb128 0x3
 2445 0056 0E       		.uleb128 0xe
 2446 0057 3A       		.uleb128 0x3a
 2447 0058 0B       		.uleb128 0xb
 2448 0059 3B       		.uleb128 0x3b
 2449 005a 0B       		.uleb128 0xb
 2450 005b 49       		.uleb128 0x49
 2451 005c 13       		.uleb128 0x13
 2452 005d 38       		.uleb128 0x38
 2453 005e 0B       		.uleb128 0xb
 2454 005f 00       		.byte	0
 2455 0060 00       		.byte	0
 2456 0061 08       		.uleb128 0x8
 2457 0062 04       		.uleb128 0x4
 2458 0063 01       		.byte	0x1
 2459 0064 03       		.uleb128 0x3
 2460 0065 0E       		.uleb128 0xe
 2461 0066 0B       		.uleb128 0xb
 2462 0067 0B       		.uleb128 0xb
 2463 0068 49       		.uleb128 0x49
 2464 0069 13       		.uleb128 0x13
 2465 006a 3A       		.uleb128 0x3a
 2466 006b 0B       		.uleb128 0xb
 2467 006c 3B       		.uleb128 0x3b
 2468 006d 0B       		.uleb128 0xb
 2469 006e 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 53


 2470 006f 13       		.uleb128 0x13
 2471 0070 00       		.byte	0
 2472 0071 00       		.byte	0
 2473 0072 09       		.uleb128 0x9
 2474 0073 28       		.uleb128 0x28
 2475 0074 00       		.byte	0
 2476 0075 03       		.uleb128 0x3
 2477 0076 0E       		.uleb128 0xe
 2478 0077 1C       		.uleb128 0x1c
 2479 0078 0B       		.uleb128 0xb
 2480 0079 00       		.byte	0
 2481 007a 00       		.byte	0
 2482 007b 0A       		.uleb128 0xa
 2483 007c 28       		.uleb128 0x28
 2484 007d 00       		.byte	0
 2485 007e 03       		.uleb128 0x3
 2486 007f 08       		.uleb128 0x8
 2487 0080 1C       		.uleb128 0x1c
 2488 0081 0B       		.uleb128 0xb
 2489 0082 00       		.byte	0
 2490 0083 00       		.byte	0
 2491 0084 0B       		.uleb128 0xb
 2492 0085 2E       		.uleb128 0x2e
 2493 0086 01       		.byte	0x1
 2494 0087 3F       		.uleb128 0x3f
 2495 0088 19       		.uleb128 0x19
 2496 0089 03       		.uleb128 0x3
 2497 008a 0E       		.uleb128 0xe
 2498 008b 3A       		.uleb128 0x3a
 2499 008c 0B       		.uleb128 0xb
 2500 008d 3B       		.uleb128 0x3b
 2501 008e 0B       		.uleb128 0xb
 2502 008f 27       		.uleb128 0x27
 2503 0090 19       		.uleb128 0x19
 2504 0091 11       		.uleb128 0x11
 2505 0092 01       		.uleb128 0x1
 2506 0093 12       		.uleb128 0x12
 2507 0094 06       		.uleb128 0x6
 2508 0095 40       		.uleb128 0x40
 2509 0096 18       		.uleb128 0x18
 2510 0097 9642     		.uleb128 0x2116
 2511 0099 19       		.uleb128 0x19
 2512 009a 01       		.uleb128 0x1
 2513 009b 13       		.uleb128 0x13
 2514 009c 00       		.byte	0
 2515 009d 00       		.byte	0
 2516 009e 0C       		.uleb128 0xc
 2517 009f 0B       		.uleb128 0xb
 2518 00a0 01       		.byte	0x1
 2519 00a1 11       		.uleb128 0x11
 2520 00a2 01       		.uleb128 0x1
 2521 00a3 12       		.uleb128 0x12
 2522 00a4 06       		.uleb128 0x6
 2523 00a5 00       		.byte	0
 2524 00a6 00       		.byte	0
 2525 00a7 0D       		.uleb128 0xd
 2526 00a8 34       		.uleb128 0x34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 54


 2527 00a9 00       		.byte	0
 2528 00aa 03       		.uleb128 0x3
 2529 00ab 0E       		.uleb128 0xe
 2530 00ac 3A       		.uleb128 0x3a
 2531 00ad 0B       		.uleb128 0xb
 2532 00ae 3B       		.uleb128 0x3b
 2533 00af 0B       		.uleb128 0xb
 2534 00b0 49       		.uleb128 0x49
 2535 00b1 13       		.uleb128 0x13
 2536 00b2 02       		.uleb128 0x2
 2537 00b3 18       		.uleb128 0x18
 2538 00b4 00       		.byte	0
 2539 00b5 00       		.byte	0
 2540 00b6 0E       		.uleb128 0xe
 2541 00b7 2E       		.uleb128 0x2e
 2542 00b8 00       		.byte	0
 2543 00b9 3F       		.uleb128 0x3f
 2544 00ba 19       		.uleb128 0x19
 2545 00bb 03       		.uleb128 0x3
 2546 00bc 0E       		.uleb128 0xe
 2547 00bd 3A       		.uleb128 0x3a
 2548 00be 0B       		.uleb128 0xb
 2549 00bf 3B       		.uleb128 0x3b
 2550 00c0 0B       		.uleb128 0xb
 2551 00c1 27       		.uleb128 0x27
 2552 00c2 19       		.uleb128 0x19
 2553 00c3 11       		.uleb128 0x11
 2554 00c4 01       		.uleb128 0x1
 2555 00c5 12       		.uleb128 0x12
 2556 00c6 06       		.uleb128 0x6
 2557 00c7 40       		.uleb128 0x40
 2558 00c8 18       		.uleb128 0x18
 2559 00c9 9742     		.uleb128 0x2117
 2560 00cb 19       		.uleb128 0x19
 2561 00cc 00       		.byte	0
 2562 00cd 00       		.byte	0
 2563 00ce 0F       		.uleb128 0xf
 2564 00cf 2E       		.uleb128 0x2e
 2565 00d0 00       		.byte	0
 2566 00d1 3F       		.uleb128 0x3f
 2567 00d2 19       		.uleb128 0x19
 2568 00d3 03       		.uleb128 0x3
 2569 00d4 0E       		.uleb128 0xe
 2570 00d5 3A       		.uleb128 0x3a
 2571 00d6 0B       		.uleb128 0xb
 2572 00d7 3B       		.uleb128 0x3b
 2573 00d8 0B       		.uleb128 0xb
 2574 00d9 27       		.uleb128 0x27
 2575 00da 19       		.uleb128 0x19
 2576 00db 11       		.uleb128 0x11
 2577 00dc 01       		.uleb128 0x1
 2578 00dd 12       		.uleb128 0x12
 2579 00de 06       		.uleb128 0x6
 2580 00df 40       		.uleb128 0x40
 2581 00e0 18       		.uleb128 0x18
 2582 00e1 9642     		.uleb128 0x2116
 2583 00e3 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 55


 2584 00e4 00       		.byte	0
 2585 00e5 00       		.byte	0
 2586 00e6 10       		.uleb128 0x10
 2587 00e7 2E       		.uleb128 0x2e
 2588 00e8 00       		.byte	0
 2589 00e9 3F       		.uleb128 0x3f
 2590 00ea 19       		.uleb128 0x19
 2591 00eb 03       		.uleb128 0x3
 2592 00ec 0E       		.uleb128 0xe
 2593 00ed 3A       		.uleb128 0x3a
 2594 00ee 0B       		.uleb128 0xb
 2595 00ef 3B       		.uleb128 0x3b
 2596 00f0 0B       		.uleb128 0xb
 2597 00f1 49       		.uleb128 0x49
 2598 00f2 13       		.uleb128 0x13
 2599 00f3 11       		.uleb128 0x11
 2600 00f4 01       		.uleb128 0x1
 2601 00f5 12       		.uleb128 0x12
 2602 00f6 06       		.uleb128 0x6
 2603 00f7 40       		.uleb128 0x40
 2604 00f8 18       		.uleb128 0x18
 2605 00f9 9642     		.uleb128 0x2116
 2606 00fb 19       		.uleb128 0x19
 2607 00fc 00       		.byte	0
 2608 00fd 00       		.byte	0
 2609 00fe 11       		.uleb128 0x11
 2610 00ff 2E       		.uleb128 0x2e
 2611 0100 01       		.byte	0x1
 2612 0101 3F       		.uleb128 0x3f
 2613 0102 19       		.uleb128 0x19
 2614 0103 03       		.uleb128 0x3
 2615 0104 0E       		.uleb128 0xe
 2616 0105 3A       		.uleb128 0x3a
 2617 0106 0B       		.uleb128 0xb
 2618 0107 3B       		.uleb128 0x3b
 2619 0108 0B       		.uleb128 0xb
 2620 0109 27       		.uleb128 0x27
 2621 010a 19       		.uleb128 0x19
 2622 010b 49       		.uleb128 0x49
 2623 010c 13       		.uleb128 0x13
 2624 010d 11       		.uleb128 0x11
 2625 010e 01       		.uleb128 0x1
 2626 010f 12       		.uleb128 0x12
 2627 0110 06       		.uleb128 0x6
 2628 0111 40       		.uleb128 0x40
 2629 0112 18       		.uleb128 0x18
 2630 0113 9642     		.uleb128 0x2116
 2631 0115 19       		.uleb128 0x19
 2632 0116 01       		.uleb128 0x1
 2633 0117 13       		.uleb128 0x13
 2634 0118 00       		.byte	0
 2635 0119 00       		.byte	0
 2636 011a 12       		.uleb128 0x12
 2637 011b 05       		.uleb128 0x5
 2638 011c 00       		.byte	0
 2639 011d 03       		.uleb128 0x3
 2640 011e 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 56


 2641 011f 3A       		.uleb128 0x3a
 2642 0120 0B       		.uleb128 0xb
 2643 0121 3B       		.uleb128 0x3b
 2644 0122 0B       		.uleb128 0xb
 2645 0123 49       		.uleb128 0x49
 2646 0124 13       		.uleb128 0x13
 2647 0125 02       		.uleb128 0x2
 2648 0126 18       		.uleb128 0x18
 2649 0127 00       		.byte	0
 2650 0128 00       		.byte	0
 2651 0129 13       		.uleb128 0x13
 2652 012a 34       		.uleb128 0x34
 2653 012b 00       		.byte	0
 2654 012c 03       		.uleb128 0x3
 2655 012d 08       		.uleb128 0x8
 2656 012e 3A       		.uleb128 0x3a
 2657 012f 0B       		.uleb128 0xb
 2658 0130 3B       		.uleb128 0x3b
 2659 0131 0B       		.uleb128 0xb
 2660 0132 49       		.uleb128 0x49
 2661 0133 13       		.uleb128 0x13
 2662 0134 02       		.uleb128 0x2
 2663 0135 18       		.uleb128 0x18
 2664 0136 00       		.byte	0
 2665 0137 00       		.byte	0
 2666 0138 14       		.uleb128 0x14
 2667 0139 2E       		.uleb128 0x2e
 2668 013a 00       		.byte	0
 2669 013b 3F       		.uleb128 0x3f
 2670 013c 19       		.uleb128 0x19
 2671 013d 03       		.uleb128 0x3
 2672 013e 0E       		.uleb128 0xe
 2673 013f 3A       		.uleb128 0x3a
 2674 0140 0B       		.uleb128 0xb
 2675 0141 3B       		.uleb128 0x3b
 2676 0142 0B       		.uleb128 0xb
 2677 0143 11       		.uleb128 0x11
 2678 0144 01       		.uleb128 0x1
 2679 0145 12       		.uleb128 0x12
 2680 0146 06       		.uleb128 0x6
 2681 0147 40       		.uleb128 0x40
 2682 0148 18       		.uleb128 0x18
 2683 0149 9742     		.uleb128 0x2117
 2684 014b 19       		.uleb128 0x19
 2685 014c 00       		.byte	0
 2686 014d 00       		.byte	0
 2687 014e 15       		.uleb128 0x15
 2688 014f 2E       		.uleb128 0x2e
 2689 0150 01       		.byte	0x1
 2690 0151 3F       		.uleb128 0x3f
 2691 0152 19       		.uleb128 0x19
 2692 0153 03       		.uleb128 0x3
 2693 0154 0E       		.uleb128 0xe
 2694 0155 3A       		.uleb128 0x3a
 2695 0156 0B       		.uleb128 0xb
 2696 0157 3B       		.uleb128 0x3b
 2697 0158 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 57


 2698 0159 49       		.uleb128 0x49
 2699 015a 13       		.uleb128 0x13
 2700 015b 11       		.uleb128 0x11
 2701 015c 01       		.uleb128 0x1
 2702 015d 12       		.uleb128 0x12
 2703 015e 06       		.uleb128 0x6
 2704 015f 40       		.uleb128 0x40
 2705 0160 18       		.uleb128 0x18
 2706 0161 9742     		.uleb128 0x2117
 2707 0163 19       		.uleb128 0x19
 2708 0164 01       		.uleb128 0x1
 2709 0165 13       		.uleb128 0x13
 2710 0166 00       		.byte	0
 2711 0167 00       		.byte	0
 2712 0168 16       		.uleb128 0x16
 2713 0169 2E       		.uleb128 0x2e
 2714 016a 01       		.byte	0x1
 2715 016b 3F       		.uleb128 0x3f
 2716 016c 19       		.uleb128 0x19
 2717 016d 03       		.uleb128 0x3
 2718 016e 0E       		.uleb128 0xe
 2719 016f 3A       		.uleb128 0x3a
 2720 0170 0B       		.uleb128 0xb
 2721 0171 3B       		.uleb128 0x3b
 2722 0172 05       		.uleb128 0x5
 2723 0173 49       		.uleb128 0x49
 2724 0174 13       		.uleb128 0x13
 2725 0175 11       		.uleb128 0x11
 2726 0176 01       		.uleb128 0x1
 2727 0177 12       		.uleb128 0x12
 2728 0178 06       		.uleb128 0x6
 2729 0179 40       		.uleb128 0x40
 2730 017a 18       		.uleb128 0x18
 2731 017b 9642     		.uleb128 0x2116
 2732 017d 19       		.uleb128 0x19
 2733 017e 01       		.uleb128 0x1
 2734 017f 13       		.uleb128 0x13
 2735 0180 00       		.byte	0
 2736 0181 00       		.byte	0
 2737 0182 17       		.uleb128 0x17
 2738 0183 34       		.uleb128 0x34
 2739 0184 00       		.byte	0
 2740 0185 03       		.uleb128 0x3
 2741 0186 0E       		.uleb128 0xe
 2742 0187 3A       		.uleb128 0x3a
 2743 0188 0B       		.uleb128 0xb
 2744 0189 3B       		.uleb128 0x3b
 2745 018a 05       		.uleb128 0x5
 2746 018b 49       		.uleb128 0x49
 2747 018c 13       		.uleb128 0x13
 2748 018d 02       		.uleb128 0x2
 2749 018e 18       		.uleb128 0x18
 2750 018f 00       		.byte	0
 2751 0190 00       		.byte	0
 2752 0191 18       		.uleb128 0x18
 2753 0192 2E       		.uleb128 0x2e
 2754 0193 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 58


 2755 0194 3F       		.uleb128 0x3f
 2756 0195 19       		.uleb128 0x19
 2757 0196 03       		.uleb128 0x3
 2758 0197 0E       		.uleb128 0xe
 2759 0198 3A       		.uleb128 0x3a
 2760 0199 0B       		.uleb128 0xb
 2761 019a 3B       		.uleb128 0x3b
 2762 019b 05       		.uleb128 0x5
 2763 019c 11       		.uleb128 0x11
 2764 019d 01       		.uleb128 0x1
 2765 019e 12       		.uleb128 0x12
 2766 019f 06       		.uleb128 0x6
 2767 01a0 40       		.uleb128 0x40
 2768 01a1 18       		.uleb128 0x18
 2769 01a2 9642     		.uleb128 0x2116
 2770 01a4 19       		.uleb128 0x19
 2771 01a5 00       		.byte	0
 2772 01a6 00       		.byte	0
 2773 01a7 19       		.uleb128 0x19
 2774 01a8 34       		.uleb128 0x34
 2775 01a9 00       		.byte	0
 2776 01aa 03       		.uleb128 0x3
 2777 01ab 0E       		.uleb128 0xe
 2778 01ac 3A       		.uleb128 0x3a
 2779 01ad 0B       		.uleb128 0xb
 2780 01ae 3B       		.uleb128 0x3b
 2781 01af 05       		.uleb128 0x5
 2782 01b0 49       		.uleb128 0x49
 2783 01b1 13       		.uleb128 0x13
 2784 01b2 3F       		.uleb128 0x3f
 2785 01b3 19       		.uleb128 0x19
 2786 01b4 3C       		.uleb128 0x3c
 2787 01b5 19       		.uleb128 0x19
 2788 01b6 00       		.byte	0
 2789 01b7 00       		.byte	0
 2790 01b8 1A       		.uleb128 0x1a
 2791 01b9 35       		.uleb128 0x35
 2792 01ba 00       		.byte	0
 2793 01bb 49       		.uleb128 0x49
 2794 01bc 13       		.uleb128 0x13
 2795 01bd 00       		.byte	0
 2796 01be 00       		.byte	0
 2797 01bf 1B       		.uleb128 0x1b
 2798 01c0 34       		.uleb128 0x34
 2799 01c1 00       		.byte	0
 2800 01c2 03       		.uleb128 0x3
 2801 01c3 08       		.uleb128 0x8
 2802 01c4 3A       		.uleb128 0x3a
 2803 01c5 0B       		.uleb128 0xb
 2804 01c6 3B       		.uleb128 0x3b
 2805 01c7 0B       		.uleb128 0xb
 2806 01c8 49       		.uleb128 0x49
 2807 01c9 13       		.uleb128 0x13
 2808 01ca 3F       		.uleb128 0x3f
 2809 01cb 19       		.uleb128 0x19
 2810 01cc 02       		.uleb128 0x2
 2811 01cd 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 59


 2812 01ce 00       		.byte	0
 2813 01cf 00       		.byte	0
 2814 01d0 1C       		.uleb128 0x1c
 2815 01d1 34       		.uleb128 0x34
 2816 01d2 00       		.byte	0
 2817 01d3 03       		.uleb128 0x3
 2818 01d4 0E       		.uleb128 0xe
 2819 01d5 3A       		.uleb128 0x3a
 2820 01d6 0B       		.uleb128 0xb
 2821 01d7 3B       		.uleb128 0x3b
 2822 01d8 0B       		.uleb128 0xb
 2823 01d9 49       		.uleb128 0x49
 2824 01da 13       		.uleb128 0x13
 2825 01db 3F       		.uleb128 0x3f
 2826 01dc 19       		.uleb128 0x19
 2827 01dd 02       		.uleb128 0x2
 2828 01de 18       		.uleb128 0x18
 2829 01df 00       		.byte	0
 2830 01e0 00       		.byte	0
 2831 01e1 1D       		.uleb128 0x1d
 2832 01e2 01       		.uleb128 0x1
 2833 01e3 01       		.byte	0x1
 2834 01e4 49       		.uleb128 0x49
 2835 01e5 13       		.uleb128 0x13
 2836 01e6 01       		.uleb128 0x1
 2837 01e7 13       		.uleb128 0x13
 2838 01e8 00       		.byte	0
 2839 01e9 00       		.byte	0
 2840 01ea 1E       		.uleb128 0x1e
 2841 01eb 21       		.uleb128 0x21
 2842 01ec 00       		.byte	0
 2843 01ed 49       		.uleb128 0x49
 2844 01ee 13       		.uleb128 0x13
 2845 01ef 2F       		.uleb128 0x2f
 2846 01f0 0B       		.uleb128 0xb
 2847 01f1 00       		.byte	0
 2848 01f2 00       		.byte	0
 2849 01f3 1F       		.uleb128 0x1f
 2850 01f4 34       		.uleb128 0x34
 2851 01f5 00       		.byte	0
 2852 01f6 03       		.uleb128 0x3
 2853 01f7 08       		.uleb128 0x8
 2854 01f8 3A       		.uleb128 0x3a
 2855 01f9 0B       		.uleb128 0xb
 2856 01fa 3B       		.uleb128 0x3b
 2857 01fb 0B       		.uleb128 0xb
 2858 01fc 49       		.uleb128 0x49
 2859 01fd 13       		.uleb128 0x13
 2860 01fe 3F       		.uleb128 0x3f
 2861 01ff 19       		.uleb128 0x19
 2862 0200 3C       		.uleb128 0x3c
 2863 0201 19       		.uleb128 0x19
 2864 0202 00       		.byte	0
 2865 0203 00       		.byte	0
 2866 0204 00       		.byte	0
 2867              		.section	.debug_aranges,"",%progbits
 2868 0000 74000000 		.4byte	0x74
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 60


 2869 0004 0200     		.2byte	0x2
 2870 0006 00000000 		.4byte	.Ldebug_info0
 2871 000a 04       		.byte	0x4
 2872 000b 00       		.byte	0
 2873 000c 0000     		.2byte	0
 2874 000e 0000     		.2byte	0
 2875 0010 00000000 		.4byte	.LFB64
 2876 0014 E4000000 		.4byte	.LFE64-.LFB64
 2877 0018 00000000 		.4byte	.LFB65
 2878 001c 18000000 		.4byte	.LFE65-.LFB65
 2879 0020 00000000 		.4byte	.LFB66
 2880 0024 18000000 		.4byte	.LFE66-.LFB66
 2881 0028 00000000 		.4byte	.LFB67
 2882 002c 18000000 		.4byte	.LFE67-.LFB67
 2883 0030 00000000 		.4byte	.LFB68
 2884 0034 18000000 		.4byte	.LFE68-.LFB68
 2885 0038 00000000 		.4byte	.LFB69
 2886 003c 38000000 		.4byte	.LFE69-.LFB69
 2887 0040 00000000 		.4byte	.LFB70
 2888 0044 9C000000 		.4byte	.LFE70-.LFB70
 2889 0048 00000000 		.4byte	.LFB71
 2890 004c 54000000 		.4byte	.LFE71-.LFB71
 2891 0050 00000000 		.4byte	.LFB72
 2892 0054 34000000 		.4byte	.LFE72-.LFB72
 2893 0058 00000000 		.4byte	.LFB73
 2894 005c E4020000 		.4byte	.LFE73-.LFB73
 2895 0060 00000000 		.4byte	.LFB74
 2896 0064 10010000 		.4byte	.LFE74-.LFB74
 2897 0068 00000000 		.4byte	.LFB75
 2898 006c 98000000 		.4byte	.LFE75-.LFB75
 2899 0070 00000000 		.4byte	0
 2900 0074 00000000 		.4byte	0
 2901              		.section	.debug_ranges,"",%progbits
 2902              	.Ldebug_ranges0:
 2903 0000 00000000 		.4byte	.LFB64
 2904 0004 E4000000 		.4byte	.LFE64
 2905 0008 00000000 		.4byte	.LFB65
 2906 000c 18000000 		.4byte	.LFE65
 2907 0010 00000000 		.4byte	.LFB66
 2908 0014 18000000 		.4byte	.LFE66
 2909 0018 00000000 		.4byte	.LFB67
 2910 001c 18000000 		.4byte	.LFE67
 2911 0020 00000000 		.4byte	.LFB68
 2912 0024 18000000 		.4byte	.LFE68
 2913 0028 00000000 		.4byte	.LFB69
 2914 002c 38000000 		.4byte	.LFE69
 2915 0030 00000000 		.4byte	.LFB70
 2916 0034 9C000000 		.4byte	.LFE70
 2917 0038 00000000 		.4byte	.LFB71
 2918 003c 54000000 		.4byte	.LFE71
 2919 0040 00000000 		.4byte	.LFB72
 2920 0044 34000000 		.4byte	.LFE72
 2921 0048 00000000 		.4byte	.LFB73
 2922 004c E4020000 		.4byte	.LFE73
 2923 0050 00000000 		.4byte	.LFB74
 2924 0054 10010000 		.4byte	.LFE74
 2925 0058 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 61


 2926 005c 98000000 		.4byte	.LFE75
 2927 0060 00000000 		.4byte	0
 2928 0064 00000000 		.4byte	0
 2929              		.section	.debug_line,"",%progbits
 2930              	.Ldebug_line0:
 2931 0000 34030000 		.section	.debug_str,"MS",%progbits,1
 2931      02005F01 
 2931      00000201 
 2931      FB0E0D00 
 2931      01010101 
 2932              	.LASF58:
 2933 0000 53365F44 		.ascii	"S6_DETECTED\000"
 2933      45544543 
 2933      54454400 
 2934              	.LASF40:
 2935 000c 5475726E 		.ascii	"TurnLeft\000"
 2935      4C656674 
 2935      00
 2936              	.LASF70:
 2937 0015 74735F65 		.ascii	"ts_enc\000"
 2937      6E6300
 2938              	.LASF48:
 2939 001c 466F7277 		.ascii	"ForwardAfterTurn\000"
 2939      61726441 
 2939      66746572 
 2939      5475726E 
 2939      00
 2940              	.LASF79:
 2941 002d 666C6167 		.ascii	"flag_packet\000"
 2941      5F706163 
 2941      6B657400 
 2942              	.LASF45:
 2943 0039 77616974 		.ascii	"waitForTurn\000"
 2943      466F7254 
 2943      75726E00 
 2944              	.LASF76:
 2945 0045 666C6167 		.ascii	"flag_ts_speed\000"
 2945      5F74735F 
 2945      73706565 
 2945      6400
 2946              	.LASF34:
 2947 0053 67325F78 		.ascii	"g2_xpos\000"
 2947      706F7300 
 2948              	.LASF2:
 2949 005b 73686F72 		.ascii	"short int\000"
 2949      7420696E 
 2949      7400
 2950              	.LASF87:
 2951 0065 73797374 		.ascii	"system_state\000"
 2951      656D5F73 
 2951      74617465 
 2951      00
 2952              	.LASF10:
 2953 0072 73697A65 		.ascii	"sizetype\000"
 2953      74797065 
 2953      00
 2954              	.LASF98:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 62


 2955 007b 73746F70 		.ascii	"stopBuffer\000"
 2955      42756666 
 2955      657200
 2956              	.LASF50:
 2957 0086 44697265 		.ascii	"DirectionState\000"
 2957      6374696F 
 2957      6E537461 
 2957      746500
 2958              	.LASF86:
 2959 0095 75736242 		.ascii	"usbBuffer\000"
 2959      75666665 
 2959      7200
 2960              	.LASF103:
 2961 009f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2961      43313120 
 2961      352E342E 
 2961      31203230 
 2961      31363036 
 2962 00d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2962      20726576 
 2962      6973696F 
 2962      6E203233 
 2962      37373135 
 2963 0105 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2963      66756E63 
 2963      74696F6E 
 2963      2D736563 
 2963      74696F6E 
 2964              	.LASF60:
 2965 012d 6D61696E 		.ascii	"main\000"
 2965      00
 2966              	.LASF46:
 2967 0132 77616974 		.ascii	"waitForRightTurn\000"
 2967      466F7252 
 2967      69676874 
 2967      5475726E 
 2967      00
 2968              	.LASF63:
 2969 0143 4765744E 		.ascii	"GetNextStep\000"
 2969      65787453 
 2969      74657000 
 2970              	.LASF56:
 2971 014f 53345F44 		.ascii	"S4_DETECTED\000"
 2971      45544543 
 2971      54454400 
 2972              	.LASF41:
 2973 015b 41646A75 		.ascii	"AdjustToTheLeft\000"
 2973      7374546F 
 2973      5468654C 
 2973      65667400 
 2974              	.LASF15:
 2975 016b 75696E74 		.ascii	"uint16\000"
 2975      313600
 2976              	.LASF22:
 2977 0172 696E6465 		.ascii	"index\000"
 2977      7800
 2978              	.LASF62:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 63


 2979 0178 73706565 		.ascii	"speedTimer\000"
 2979      6454696D 
 2979      657200
 2980              	.LASF18:
 2981 0183 696E7431 		.ascii	"int16\000"
 2981      3600
 2982              	.LASF14:
 2983 0189 75696E74 		.ascii	"uint8\000"
 2983      3800
 2984              	.LASF33:
 2985 018f 67315F64 		.ascii	"g1_direction\000"
 2985      69726563 
 2985      74696F6E 
 2985      00
 2986              	.LASF84:
 2987 019c 6C696E65 		.ascii	"line\000"
 2987      00
 2988              	.LASF19:
 2989 01a1 666C6F61 		.ascii	"float\000"
 2989      7400
 2990              	.LASF54:
 2991 01a7 52696768 		.ascii	"Right\000"
 2991      7400
 2992              	.LASF61:
 2993 01ad 6E657744 		.ascii	"newDistance\000"
 2993      69737461 
 2993      6E636500 
 2994              	.LASF6:
 2995 01b9 6C6F6E67 		.ascii	"long long int\000"
 2995      206C6F6E 
 2995      6720696E 
 2995      7400
 2996              	.LASF17:
 2997 01c7 696E7438 		.ascii	"int8\000"
 2997      00
 2998              	.LASF100:
 2999 01cc 78426C6F 		.ascii	"xBlocksize\000"
 2999      636B7369 
 2999      7A6500
 3000              	.LASF75:
 3001 01d7 666C6167 		.ascii	"flag_ts_update\000"
 3001      5F74735F 
 3001      75706461 
 3001      746500
 3002              	.LASF35:
 3003 01e6 67325F79 		.ascii	"g2_ypos\000"
 3003      706F7300 
 3004              	.LASF29:
 3005 01ee 67305F64 		.ascii	"g0_direction\000"
 3005      69726563 
 3005      74696F6E 
 3005      00
 3006              	.LASF26:
 3007 01fb 67305F78 		.ascii	"g0_xpos\000"
 3007      706F7300 
 3008              	.LASF91:
 3009 0203 70726576 		.ascii	"previousOrientation\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 64


 3009      696F7573 
 3009      4F726965 
 3009      6E746174 
 3009      696F6E00 
 3010              	.LASF53:
 3011 0217 4C656674 		.ascii	"Left\000"
 3011      00
 3012              	.LASF65:
 3013 021c 43686563 		.ascii	"CheckSensorDirection\000"
 3013      6B53656E 
 3013      736F7244 
 3013      69726563 
 3013      74696F6E 
 3014              	.LASF96:
 3015 0231 74696D65 		.ascii	"timerInt\000"
 3015      72496E74 
 3015      00
 3016              	.LASF77:
 3017 023a 666C6167 		.ascii	"flag_ts_display\000"
 3017      5F74735F 
 3017      64697370 
 3017      6C617900 
 3018              	.LASF78:
 3019 024a 666C6167 		.ascii	"flag_rx\000"
 3019      5F727800 
 3020              	.LASF66:
 3021 0252 626C6F63 		.ascii	"blocksize\000"
 3021      6B73697A 
 3021      6500
 3022              	.LASF1:
 3023 025c 756E7369 		.ascii	"unsigned char\000"
 3023      676E6564 
 3023      20636861 
 3023      7200
 3024              	.LASF92:
 3025 026a 746F7461 		.ascii	"totalMilliseconds\000"
 3025      6C4D696C 
 3025      6C697365 
 3025      636F6E64 
 3025      7300
 3026              	.LASF85:
 3027 027c 656E7472 		.ascii	"entry\000"
 3027      7900
 3028              	.LASF9:
 3029 0282 6C6F6E67 		.ascii	"long double\000"
 3029      20646F75 
 3029      626C6500 
 3030              	.LASF102:
 3031 028e 63757272 		.ascii	"currentCol\000"
 3031      656E7443 
 3031      6F6C00
 3032              	.LASF89:
 3033 0299 70726576 		.ascii	"previousDirection\000"
 3033      696F7573 
 3033      44697265 
 3033      6374696F 
 3033      6E00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 65


 3034              	.LASF93:
 3035 02ab 746F7461 		.ascii	"totalDistance\000"
 3035      6C446973 
 3035      74616E63 
 3035      6500
 3036              	.LASF97:
 3037 02b9 6B656570 		.ascii	"keepLedOn\000"
 3037      4C65644F 
 3037      6E00
 3038              	.LASF28:
 3039 02c3 67305F73 		.ascii	"g0_speed\000"
 3039      70656564 
 3039      00
 3040              	.LASF99:
 3041 02cc 79426C6F 		.ascii	"yBlocksize\000"
 3041      636B7369 
 3041      7A6500
 3042              	.LASF81:
 3043 02d7 64617461 		.ascii	"dataready_flag\000"
 3043      72656164 
 3043      795F666C 
 3043      616700
 3044              	.LASF30:
 3045 02e6 67315F78 		.ascii	"g1_xpos\000"
 3045      706F7300 
 3046              	.LASF0:
 3047 02ee 7369676E 		.ascii	"signed char\000"
 3047      65642063 
 3047      68617200 
 3048              	.LASF13:
 3049 02fa 696E7433 		.ascii	"int32_t\000"
 3049      325F7400 
 3050              	.LASF7:
 3051 0302 6C6F6E67 		.ascii	"long long unsigned int\000"
 3051      206C6F6E 
 3051      6720756E 
 3051      7369676E 
 3051      65642069 
 3052              	.LASF42:
 3053 0319 41646A75 		.ascii	"AdjustToTheRight\000"
 3053      7374546F 
 3053      54686552 
 3053      69676874 
 3053      00
 3054              	.LASF8:
 3055 032a 756E7369 		.ascii	"unsigned int\000"
 3055      676E6564 
 3055      20696E74 
 3055      00
 3056              	.LASF71:
 3057 0337 74735F75 		.ascii	"ts_update\000"
 3057      70646174 
 3057      6500
 3058              	.LASF80:
 3059 0341 666C6167 		.ascii	"flag_KB_string\000"
 3059      5F4B425F 
 3059      73747269 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 66


 3059      6E6700
 3060              	.LASF68:
 3061 0350 53657452 		.ascii	"SetRobotMovement\000"
 3061      6F626F74 
 3061      4D6F7665 
 3061      6D656E74 
 3061      00
 3062              	.LASF59:
 3063 0361 54494D45 		.ascii	"TIMER_FINISH\000"
 3063      525F4649 
 3063      4E495348 
 3063      00
 3064              	.LASF36:
 3065 036e 67325F73 		.ascii	"g2_speed\000"
 3065      70656564 
 3065      00
 3066              	.LASF57:
 3067 0377 53355F44 		.ascii	"S5_DETECTED\000"
 3067      45544543 
 3067      54454400 
 3068              	.LASF3:
 3069 0383 73686F72 		.ascii	"short unsigned int\000"
 3069      7420756E 
 3069      7369676E 
 3069      65642069 
 3069      6E7400
 3070              	.LASF106:
 3071 0396 64617461 		.ascii	"data_main\000"
 3071      5F6D6169 
 3071      6E00
 3072              	.LASF67:
 3073 03a0 52657365 		.ascii	"ResetSensorFlags\000"
 3073      7453656E 
 3073      736F7246 
 3073      6C616773 
 3073      00
 3074              	.LASF11:
 3075 03b1 63686172 		.ascii	"char\000"
 3075      00
 3076              	.LASF4:
 3077 03b6 6C6F6E67 		.ascii	"long int\000"
 3077      20696E74 
 3077      00
 3078              	.LASF38:
 3079 03bf 466F7277 		.ascii	"Forward\000"
 3079      61726400 
 3080              	.LASF105:
 3081 03c7 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 3081      6F63756D 
 3081      656E7473 
 3081      5C476974 
 3081      4875625C 
 3082 03f6 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 3082      635F636F 
 3082      64655F62 
 3082      6173655C 
 3082      43533330 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 67


 3083              	.LASF95:
 3084 0418 71756164 		.ascii	"quadDec2Count\000"
 3084      44656332 
 3084      436F756E 
 3084      7400
 3085              	.LASF31:
 3086 0426 67315F79 		.ascii	"g1_ypos\000"
 3086      706F7300 
 3087              	.LASF37:
 3088 042e 67325F64 		.ascii	"g2_direction\000"
 3088      69726563 
 3088      74696F6E 
 3088      00
 3089              	.LASF32:
 3090 043b 67315F73 		.ascii	"g1_speed\000"
 3090      70656564 
 3090      00
 3091              	.LASF83:
 3092 0444 64697370 		.ascii	"displaystring\000"
 3092      6C617973 
 3092      7472696E 
 3092      6700
 3093              	.LASF23:
 3094 0452 726F626F 		.ascii	"robot_xpos\000"
 3094      745F7870 
 3094      6F7300
 3095              	.LASF39:
 3096 045d 5475726E 		.ascii	"TurnRight\000"
 3096      52696768 
 3096      7400
 3097              	.LASF94:
 3098 0467 62756666 		.ascii	"buffer\000"
 3098      657200
 3099              	.LASF16:
 3100 046e 75696E74 		.ascii	"uint32\000"
 3100      333200
 3101              	.LASF104:
 3102 0475 6D61696E 		.ascii	"main.c\000"
 3102      2E6300
 3103              	.LASF5:
 3104 047c 6C6F6E67 		.ascii	"long unsigned int\000"
 3104      20756E73 
 3104      69676E65 
 3104      6420696E 
 3104      7400
 3105              	.LASF49:
 3106 048e 4261636B 		.ascii	"Backward\000"
 3106      77617264 
 3106      00
 3107              	.LASF20:
 3108 0497 646F7562 		.ascii	"double\000"
 3108      6C6500
 3109              	.LASF44:
 3110 049e 556E6B6E 		.ascii	"Unknown\000"
 3110      6F776E00 
 3111              	.LASF101:
 3112 04a6 63757272 		.ascii	"currentRow\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 68


 3112      656E7452 
 3112      6F7700
 3113              	.LASF55:
 3114 04b1 53335F44 		.ascii	"S3_DETECTED\000"
 3114      45544543 
 3114      54454400 
 3115              	.LASF72:
 3116 04bd 74735F73 		.ascii	"ts_speed\000"
 3116      70656564 
 3116      00
 3117              	.LASF108:
 3118 04c6 636F756E 		.ascii	"count\000"
 3118      7400
 3119              	.LASF74:
 3120 04cc 666C6167 		.ascii	"flag_ts_enc\000"
 3120      5F74735F 
 3120      656E6300 
 3121              	.LASF12:
 3122 04d8 5F5F696E 		.ascii	"__int32_t\000"
 3122      7433325F 
 3122      7400
 3123              	.LASF43:
 3124 04e2 53746F70 		.ascii	"Stop\000"
 3124      00
 3125              	.LASF27:
 3126 04e7 67305F79 		.ascii	"g0_ypos\000"
 3126      706F7300 
 3127              	.LASF25:
 3128 04ef 726F626F 		.ascii	"robot_orientation\000"
 3128      745F6F72 
 3128      69656E74 
 3128      6174696F 
 3128      6E00
 3129              	.LASF73:
 3130 0501 74735F64 		.ascii	"ts_display\000"
 3130      6973706C 
 3130      617900
 3131              	.LASF47:
 3132 050c 77616974 		.ascii	"waitForLeftTurn\000"
 3132      466F724C 
 3132      65667454 
 3132      75726E00 
 3133              	.LASF107:
 3134 051c 71756164 		.ascii	"quadCountToRPM\000"
 3134      436F756E 
 3134      74546F52 
 3134      504D00
 3135              	.LASF82:
 3136 052b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3136      5F72665F 
 3136      7472616E 
 3136      736D6973 
 3136      73696F6E 
 3137              	.LASF24:
 3138 0547 726F626F 		.ascii	"robot_ypos\000"
 3138      745F7970 
 3138      6F7300
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccgxDbJF.s 			page 69


 3139              	.LASF69:
 3140 0552 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3140      52784275 
 3140      66666572 
 3140      00
 3141              	.LASF90:
 3142 055f 63757272 		.ascii	"currentOrientation\000"
 3142      656E744F 
 3142      7269656E 
 3142      74617469 
 3142      6F6E00
 3143              	.LASF52:
 3144 0572 446F776E 		.ascii	"Down\000"
 3144      00
 3145              	.LASF88:
 3146 0577 63757272 		.ascii	"currentDirection\000"
 3146      656E7444 
 3146      69726563 
 3146      74696F6E 
 3146      00
 3147              	.LASF64:
 3148 0588 64697265 		.ascii	"directionState\000"
 3148      6374696F 
 3148      6E537461 
 3148      746500
 3149              	.LASF21:
 3150 0597 72737369 		.ascii	"rssi\000"
 3150      00
 3151              	.LASF51:
 3152 059c 4F726965 		.ascii	"OrientationState\000"
 3152      6E746174 
 3152      696F6E53 
 3152      74617465 
 3152      00
 3153              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
