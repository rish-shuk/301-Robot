ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	currentDirection,1,1
 107              		.global	previousDirection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 3


 108              		.bss
 109              		.type	previousDirection, %object
 110              		.size	previousDirection, 1
 111              	previousDirection:
 112 0012 00       		.space	1
 113              		.comm	currentRobotOrientation,1,1
 114              		.global	previousOrientation
 115              		.data
 116              		.type	previousOrientation, %object
 117              		.size	previousOrientation, 1
 118              	previousOrientation:
 119 0044 01       		.byte	1
 120              		.comm	currentInstruction,20,4
 121              		.comm	previousInstruction,20,4
 122              		.comm	instructionList,4,4
 123              		.bss
 124 0013 00       		.align	2
 125              	instructionIndex:
 126 0014 00000000 		.space	4
 127              		.comm	s3,1,1
 128              		.comm	s4,1,1
 129              		.comm	s5,1,1
 130              		.global	s6
 131              		.type	s6, %object
 132              		.size	s6, 1
 133              	s6:
 134 0018 00       		.space	1
 135              		.global	totalMilliseconds
 136 0019 000000   		.align	2
 137              		.type	totalMilliseconds, %object
 138              		.size	totalMilliseconds, 4
 139              	totalMilliseconds:
 140 001c 00000000 		.space	4
 141              		.global	totalDistance
 142              		.align	2
 143              		.type	totalDistance, %object
 144              		.size	totalDistance, 4
 145              	totalDistance:
 146 0020 00000000 		.space	4
 147              		.comm	buffer,69,4
 148              		.global	quadDec2Count
 149              		.align	2
 150              		.type	quadDec2Count, %object
 151              		.size	quadDec2Count, 4
 152              	quadDec2Count:
 153 0024 00000000 		.space	4
 154              		.global	timerInt
 155              		.align	2
 156              		.type	timerInt, %object
 157              		.size	timerInt, 4
 158              	timerInt:
 159 0028 00000000 		.space	4
 160              		.global	keepLedOn
 161              		.align	2
 162              		.type	keepLedOn, %object
 163              		.size	keepLedOn, 4
 164              	keepLedOn:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 4


 165 002c 00000000 		.space	4
 166              		.global	stopBuffer
 167              		.align	2
 168              		.type	stopBuffer, %object
 169              		.size	stopBuffer, 4
 170              	stopBuffer:
 171 0030 00000000 		.space	4
 172              		.global	forwardBuffer
 173              		.align	1
 174              		.type	forwardBuffer, %object
 175              		.size	forwardBuffer, 2
 176              	forwardBuffer:
 177 0034 0000     		.space	2
 178              	turnStartedFlag:
 179 0036 00       		.space	1
 180              	turnFinishedFlag:
 181 0037 00       		.space	1
 182              	forwardUntilTargetStartedFlag:
 183 0038 00       		.space	1
 184              	uTurnStartedFlag:
 185 0039 00       		.space	1
 186              	uTurnFinishedFlag:
 187 003a 00       		.space	1
 188              	leftStatusFlag:
 189 003b 00       		.space	1
 190              	rightStatusFlag:
 191 003c 00       		.space	1
 192              	spinCourseCorrectionStarted:
 193 003d 00       		.space	1
 194              	currentIgnoreL:
 195 003e 00       		.space	1
 196              	currentIgnoreR:
 197 003f 00       		.space	1
 198              	totalLineCount:
 199 0040 00       		.space	1
 200              	lineCount:
 201 0041 00       		.space	1
 202              	onLineFlag:
 203 0042 00       		.space	1
 204              	tooEarlyFlag:
 205 0043 00       		.space	1
 206              	tooLateFlag:
 207 0044 00       		.space	1
 208              	dontOverwriteRightIgnore:
 209 0045 00       		.space	1
 210              	dontOverwriteLeftIgnore:
 211 0046 00       		.space	1
 212              		.global	junctionConfiguration
 213 0047 00       		.align	2
 214              		.type	junctionConfiguration, %object
 215              		.size	junctionConfiguration, 4
 216              	junctionConfiguration:
 217 0048 00000000 		.space	4
 218              		.global	currentFoodListIndex
 219              		.type	currentFoodListIndex, %object
 220              		.size	currentFoodListIndex, 1
 221              	currentFoodListIndex:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 5


 222 004c 00       		.space	1
 223              		.global	blockSizeTotal
 224 004d 000000   		.align	2
 225              		.type	blockSizeTotal, %object
 226              		.size	blockSizeTotal, 4
 227              	blockSizeTotal:
 228 0050 00000000 		.space	4
 229              		.global	__aeabi_i2d
 230              		.global	__aeabi_dmul
 231              		.global	__aeabi_ddiv
 232              		.global	__aeabi_d2f
 233              		.global	__aeabi_fadd
 234              		.section	.text.speedTimer,"ax",%progbits
 235              		.align	2
 236              		.global	speedTimer
 237              		.thumb
 238              		.thumb_func
 239              		.type	speedTimer, %function
 240              	speedTimer:
 241              	.LFB64:
 242              		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <string.h>
   3:main.c        **** #include <stdlib.h>
   4:main.c        **** #include <project.h>
   5:main.c        **** //* ========================================
   6:main.c        **** #include "defines.h"
   7:main.c        **** #include "vars.h"
   8:main.c        **** #include "pathfinding.h"
   9:main.c        **** #include "initialise.h"
  10:main.c        **** #include "movement.h"
  11:main.c        **** #include "usbUART.h"
  12:main.c        **** #include "map.h"
  13:main.c        **** //* ========================================
  14:main.c        **** // USBUART
  15:main.c        **** void usbPutString(char *s);
  16:main.c        **** void usbPutChar(char c);
  17:main.c        **** void handle_usb();
  18:main.c        **** //* ========================================
  19:main.c        **** int16 quadCountToRPM(uint16 count);
  20:main.c        **** //* ========================================
  21:main.c        **** // Sensors, Course correction and Movement Direction.
  22:main.c        **** void ResetSensorFlags();
  23:main.c        **** void SetRobotMovement();
  24:main.c        **** enum RobotMovement {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown,
  25:main.c        **** enum RobotMovement currentDirection, previousDirection = Forward; 
  26:main.c        **** enum RobotMovement GetMovementAccordingToInstruction();
  27:main.c        **** enum OrientationState currentRobotOrientation, previousOrientation = Down;
  28:main.c        **** Instruction currentInstruction;
  29:main.c        **** Instruction previousInstruction;
  30:main.c        **** Instruction * instructionList; // pointer to array
  31:main.c        **** volatile static uint32 instructionIndex = 0;
  32:main.c        **** Instruction GetInstructionAtIndex();
  33:main.c        **** float CalculateDistanceToTravel(float blockSize);
  34:main.c        **** void MoveToNextInstruction();
  35:main.c        **** // ----------------------------------------
  36:main.c        **** uint8 s3, s4, s5, s6 = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 6


  37:main.c        **** //* ========================================
  38:main.c        **** // Calculating Distance
  39:main.c        **** #define WHEEL_DIAMETER_MM 64.5
  40:main.c        **** 
  41:main.c        **** uint32 totalMilliseconds = 0;
  42:main.c        **** float totalDistance = 0; // in mm
  43:main.c        **** //* ========================================
  44:main.c        **** char buffer[69];
  45:main.c        **** int quadDec2Count = 0;
  46:main.c        **** int timerInt = 0;
  47:main.c        **** int keepLedOn = 0;
  48:main.c        **** // ========================================= FLAGS
  49:main.c        **** uint32 stopBuffer = 0;
  50:main.c        **** uint16 forwardBuffer = 0;
  51:main.c        **** volatile static uint8 turnStartedFlag = 0;
  52:main.c        **** volatile static uint8 turnFinishedFlag = 0;
  53:main.c        **** 
  54:main.c        **** volatile static uint8 forwardUntilTargetStartedFlag = 0;
  55:main.c        **** volatile static uint8 uTurnStartedFlag = 0;
  56:main.c        **** volatile static uint8 uTurnFinishedFlag = 0;
  57:main.c        **** 
  58:main.c        **** volatile static uint8 leftStatusFlag = 0;
  59:main.c        **** volatile static uint8 rightStatusFlag = 0;
  60:main.c        **** 
  61:main.c        **** volatile static uint8 spinCourseCorrectionStarted = 0;
  62:main.c        **** volatile static uint8 currentIgnoreL = 0;
  63:main.c        **** volatile static uint8 currentIgnoreR = 0;
  64:main.c        **** 
  65:main.c        **** void RotateClockwise180Degrees();
  66:main.c        **** 
  67:main.c        **** volatile static uint8 totalLineCount = 0;
  68:main.c        **** volatile static uint8 lineCount = 0;
  69:main.c        **** volatile static uint8 onLineFlag = 0;
  70:main.c        **** 
  71:main.c        **** volatile static uint8 tooEarlyFlag = 0;
  72:main.c        **** volatile static uint8 tooLateFlag = 0;
  73:main.c        **** 
  74:main.c        **** volatile static uint8 dontOverwriteRightIgnore = 0;
  75:main.c        **** volatile static uint8 dontOverwriteLeftIgnore = 0;
  76:main.c        **** 
  77:main.c        **** uint8 junctionConfiguration[4] = {0};
  78:main.c        **** uint8 currentFoodListIndex = 0;
  79:main.c        **** 
  80:main.c        **** float blockSizeTotal = 0;
  81:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  82:main.c        **** 
  83:main.c        **** CY_ISR (speedTimer) {
 243              		.loc 1 83 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 90B5     		push	{r4, r7, lr}
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 7


 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  84:main.c        ****     timerInt = 1;
 256              		.loc 1 84 0
 257 0006 344B     		ldr	r3, .L4+16
 258 0008 0122     		movs	r2, #1
 259 000a 1A60     		str	r2, [r3]
  85:main.c        ****     //quadDec_M1 used for turning macros
  86:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 260              		.loc 1 86 0
 261 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 262 0010 0346     		mov	r3, r0
 263 0012 1A46     		mov	r2, r3
 264 0014 314B     		ldr	r3, .L4+20
 265 0016 1A60     		str	r2, [r3]
  87:main.c        ****     
  88:main.c        ****     if ((currentDirection == Forward || 
 266              		.loc 1 88 0
 267 0018 314B     		ldr	r3, .L4+24
 268 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 001c 002B     		cmp	r3, #0
 270 001e 13D0     		beq	.L2
  89:main.c        ****         currentDirection == ForwardAfterTurn ||
 271              		.loc 1 89 0 discriminator 1
 272 0020 2F4B     		ldr	r3, .L4+24
 273 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****         currentDirection == ForwardAfterTurn ||
 274              		.loc 1 88 0 discriminator 1
 275 0024 082B     		cmp	r3, #8
 276 0026 0FD0     		beq	.L2
  90:main.c        ****         currentDirection == waitForTurn || 
 277              		.loc 1 90 0
 278 0028 2D4B     		ldr	r3, .L4+24
 279 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:main.c        ****         currentDirection == ForwardAfterTurn ||
 280              		.loc 1 89 0
 281 002c 072B     		cmp	r3, #7
 282 002e 0BD0     		beq	.L2
  91:main.c        ****         currentDirection == AdjustToTheLeft ||
 283              		.loc 1 91 0
 284 0030 2B4B     		ldr	r3, .L4+24
 285 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:main.c        ****         currentDirection == waitForTurn || 
 286              		.loc 1 90 0
 287 0034 032B     		cmp	r3, #3
 288 0036 07D0     		beq	.L2
  92:main.c        ****         currentDirection == AdjustToTheRight ||
 289              		.loc 1 92 0
 290 0038 294B     		ldr	r3, .L4+24
 291 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:main.c        ****         currentDirection == AdjustToTheLeft ||
 292              		.loc 1 91 0
 293 003c 042B     		cmp	r3, #4
 294 003e 03D0     		beq	.L2
  93:main.c        ****         currentDirection == Backward) &&
 295              		.loc 1 93 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 8


 296 0040 274B     		ldr	r3, .L4+24
 297 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****         currentDirection == AdjustToTheRight ||
 298              		.loc 1 92 0
 299 0044 092B     		cmp	r3, #9
 300 0046 34D1     		bne	.L3
 301              	.L2:
  94:main.c        ****         quadDec2Count != 0) {
 302              		.loc 1 94 0
 303 0048 244B     		ldr	r3, .L4+20
 304 004a 1B68     		ldr	r3, [r3]
  93:main.c        ****         currentDirection == Backward) &&
 305              		.loc 1 93 0
 306 004c 002B     		cmp	r3, #0
 307 004e 30D0     		beq	.L3
 308              	.LBB2:
  95:main.c        ****         //uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
  96:main.c        ****         float newDistance = (abs(quadDec2Count) * CY_M_PI * WHEEL_DIAMETER_MM)/228;
 309              		.loc 1 96 0
 310 0050 224B     		ldr	r3, .L4+20
 311 0052 1B68     		ldr	r3, [r3]
 312 0054 002B     		cmp	r3, #0
 313 0056 B8BF     		it	lt
 314 0058 5B42     		rsblt	r3, r3, #0
 315 005a 1846     		mov	r0, r3
 316 005c FFF7FEFF 		bl	__aeabi_i2d
 317 0060 19A3     		adr	r3, .L4
 318 0062 D3E90023 		ldrd	r2, [r3]
 319 0066 FFF7FEFF 		bl	__aeabi_dmul
 320 006a 0346     		mov	r3, r0
 321 006c 0C46     		mov	r4, r1
 322 006e 1846     		mov	r0, r3
 323 0070 2146     		mov	r1, r4
 324 0072 17A3     		adr	r3, .L4+8
 325 0074 D3E90023 		ldrd	r2, [r3]
 326 0078 FFF7FEFF 		bl	__aeabi_dmul
 327 007c 0346     		mov	r3, r0
 328 007e 0C46     		mov	r4, r1
 329 0080 1846     		mov	r0, r3
 330 0082 2146     		mov	r1, r4
 331 0084 4FF00002 		mov	r2, #0
 332 0088 164B     		ldr	r3, .L4+28
 333 008a FFF7FEFF 		bl	__aeabi_ddiv
 334 008e 0346     		mov	r3, r0
 335 0090 0C46     		mov	r4, r1
 336 0092 1846     		mov	r0, r3
 337 0094 2146     		mov	r1, r4
 338 0096 FFF7FEFF 		bl	__aeabi_d2f
 339 009a 0346     		mov	r3, r0
 340 009c 7B60     		str	r3, [r7, #4]	@ float
  97:main.c        ****         
  98:main.c        ****         totalDistance = totalDistance + newDistance;
 341              		.loc 1 98 0
 342 009e 124B     		ldr	r3, .L4+32
 343 00a0 1B68     		ldr	r3, [r3]	@ float
 344 00a2 7968     		ldr	r1, [r7, #4]	@ float
 345 00a4 1846     		mov	r0, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 9


 346 00a6 FFF7FEFF 		bl	__aeabi_fadd
 347 00aa 0346     		mov	r3, r0
 348 00ac 1A46     		mov	r2, r3
 349 00ae 0E4B     		ldr	r3, .L4+32
 350 00b0 1A60     		str	r2, [r3]	@ float
 351              	.L3:
 352              	.LBE2:
  99:main.c        ****     }
 100:main.c        ****     
 101:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 353              		.loc 1 101 0
 354 00b2 0020     		movs	r0, #0
 355 00b4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 102:main.c        ****     QuadDec_M2_Start(); // restart counter
 356              		.loc 1 102 0
 357 00b8 FFF7FEFF 		bl	QuadDec_M2_Start
 103:main.c        ****     
 104:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 358              		.loc 1 104 0
 359 00bc FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 105:main.c        **** }
 360              		.loc 1 105 0
 361 00c0 00BF     		nop
 362 00c2 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 12
 364 00c4 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 00c6 90BD     		pop	{r4, r7, pc}
 368              	.L5:
 369              		.align	3
 370              	.L4:
 371 00c8 182D4454 		.word	1413754136
 372 00cc FB210940 		.word	1074340347
 373 00d0 00000000 		.word	0
 374 00d4 00205040 		.word	1078992896
 375 00d8 00000000 		.word	timerInt
 376 00dc 00000000 		.word	quadDec2Count
 377 00e0 00000000 		.word	currentDirection
 378 00e4 00806C40 		.word	1080852480
 379 00e8 00000000 		.word	totalDistance
 380              		.cfi_endproc
 381              	.LFE64:
 382              		.size	speedTimer, .-speedTimer
 383              		.section	.text.S3_DETECTED,"ax",%progbits
 384              		.align	2
 385              		.global	S3_DETECTED
 386              		.thumb
 387              		.thumb_func
 388              		.type	S3_DETECTED, %function
 389              	S3_DETECTED:
 390              	.LFB65:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S3_DETECTED) {
 391              		.loc 1 107 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 10


 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s3 = 1; // , Black = 0, White = 1
 401              		.loc 1 109 0
 402 0004 034B     		ldr	r3, .L7
 403 0006 0122     		movs	r2, #1
 404 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 405              		.loc 1 111 0
 406 000a 00BF     		nop
 407 000c BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 000e 80BC     		pop	{r7}
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 0010 7047     		bx	lr
 414              	.L8:
 415 0012 00BF     		.align	2
 416              	.L7:
 417 0014 00000000 		.word	s3
 418              		.cfi_endproc
 419              	.LFE65:
 420              		.size	S3_DETECTED, .-S3_DETECTED
 421              		.section	.text.S4_DETECTED,"ax",%progbits
 422              		.align	2
 423              		.global	S4_DETECTED
 424              		.thumb
 425              		.thumb_func
 426              		.type	S4_DETECTED, %function
 427              	S4_DETECTED:
 428              	.LFB66:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S4_DETECTED) {
 429              		.loc 1 113 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s4 = 1; // , Black = 0, White = 1
 439              		.loc 1 115 0
 440 0004 034B     		ldr	r3, .L10
 441 0006 0122     		movs	r2, #1
 442 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 11


 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
 443              		.loc 1 117 0
 444 000a 00BF     		nop
 445 000c BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 000e 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0010 7047     		bx	lr
 452              	.L11:
 453 0012 00BF     		.align	2
 454              	.L10:
 455 0014 00000000 		.word	s4
 456              		.cfi_endproc
 457              	.LFE66:
 458              		.size	S4_DETECTED, .-S4_DETECTED
 459              		.section	.text.S5_DETECTED,"ax",%progbits
 460              		.align	2
 461              		.global	S5_DETECTED
 462              		.thumb
 463              		.thumb_func
 464              		.type	S5_DETECTED, %function
 465              	S5_DETECTED:
 466              	.LFB67:
 118:main.c        **** 
 119:main.c        **** CY_ISR(S5_DETECTED) {
 467              		.loc 1 119 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 120:main.c        ****     // Sensor has detected WHITE
 121:main.c        ****     s5 = 1; // , Black = 0, White = 1
 477              		.loc 1 121 0
 478 0004 034B     		ldr	r3, .L13
 479 0006 0122     		movs	r2, #1
 480 0008 1A70     		strb	r2, [r3]
 122:main.c        ****     //LED_Write(1u);
 123:main.c        **** }
 481              		.loc 1 123 0
 482 000a 00BF     		nop
 483 000c BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 000e 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0010 7047     		bx	lr
 490              	.L14:
 491 0012 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 12


 492              	.L13:
 493 0014 00000000 		.word	s5
 494              		.cfi_endproc
 495              	.LFE67:
 496              		.size	S5_DETECTED, .-S5_DETECTED
 497              		.section	.text.S6_DETECTED,"ax",%progbits
 498              		.align	2
 499              		.global	S6_DETECTED
 500              		.thumb
 501              		.thumb_func
 502              		.type	S6_DETECTED, %function
 503              	S6_DETECTED:
 504              	.LFB68:
 124:main.c        **** 
 125:main.c        **** CY_ISR(S6_DETECTED) {
 505              		.loc 1 125 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 126:main.c        ****     // Sensor has detected WHITE
 127:main.c        ****     s6 = 1; // , Black = 0, White = 1
 515              		.loc 1 127 0
 516 0004 034B     		ldr	r3, .L16
 517 0006 0122     		movs	r2, #1
 518 0008 1A70     		strb	r2, [r3]
 128:main.c        ****     //LED_Write(1u);
 129:main.c        **** }
 519              		.loc 1 129 0
 520 000a 00BF     		nop
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L17:
 529 0012 00BF     		.align	2
 530              	.L16:
 531 0014 00000000 		.word	s6
 532              		.cfi_endproc
 533              	.LFE68:
 534              		.size	S6_DETECTED, .-S6_DETECTED
 535              		.section	.text.TIMER_FINISH,"ax",%progbits
 536              		.align	2
 537              		.global	TIMER_FINISH
 538              		.thumb
 539              		.thumb_func
 540              		.type	TIMER_FINISH, %function
 541              	TIMER_FINISH:
 542              	.LFB69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 13


 130:main.c        **** 
 131:main.c        **** CY_ISR(TIMER_FINISH) {
 543              		.loc 1 131 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 132:main.c        ****     if (currentDirection == Stop) {
 553              		.loc 1 132 0
 554 0004 174B     		ldr	r3, .L24
 555 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0008 052B     		cmp	r3, #5
 557 000a 05D1     		bne	.L19
 133:main.c        ****         stopBuffer = stopBuffer + 1;
 558              		.loc 1 133 0
 559 000c 164B     		ldr	r3, .L24+4
 560 000e 1B68     		ldr	r3, [r3]
 561 0010 0133     		adds	r3, r3, #1
 562 0012 154A     		ldr	r2, .L24+4
 563 0014 1360     		str	r3, [r2]
 564 0016 02E0     		b	.L20
 565              	.L19:
 134:main.c        ****     } else {
 135:main.c        ****         stopBuffer = 0;
 566              		.loc 1 135 0
 567 0018 134B     		ldr	r3, .L24+4
 568 001a 0022     		movs	r2, #0
 569 001c 1A60     		str	r2, [r3]
 570              	.L20:
 136:main.c        ****     }
 137:main.c        ****     if (currentDirection == Forward || 
 571              		.loc 1 137 0
 572 001e 114B     		ldr	r3, .L24
 573 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0022 002B     		cmp	r3, #0
 575 0024 0BD0     		beq	.L21
 138:main.c        ****         currentDirection == AdjustToTheLeft ||
 576              		.loc 1 138 0 discriminator 1
 577 0026 0F4B     		ldr	r3, .L24
 578 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 137:main.c        ****         currentDirection == AdjustToTheLeft ||
 579              		.loc 1 137 0 discriminator 1
 580 002a 032B     		cmp	r3, #3
 581 002c 07D0     		beq	.L21
 139:main.c        ****         currentDirection ==  AdjustToTheRight || 
 582              		.loc 1 139 0
 583 002e 0D4B     		ldr	r3, .L24
 584 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 138:main.c        ****         currentDirection == AdjustToTheLeft ||
 585              		.loc 1 138 0
 586 0032 042B     		cmp	r3, #4
 587 0034 03D0     		beq	.L21
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 14


 140:main.c        ****         currentDirection == ForwardAfterTurn) {
 588              		.loc 1 140 0
 589 0036 0B4B     		ldr	r3, .L24
 590 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:main.c        ****         currentDirection ==  AdjustToTheRight || 
 591              		.loc 1 139 0
 592 003a 082B     		cmp	r3, #8
 593 003c 06D1     		bne	.L22
 594              	.L21:
 141:main.c        ****         forwardBuffer = forwardBuffer + 1;
 595              		.loc 1 141 0
 596 003e 0B4B     		ldr	r3, .L24+8
 597 0040 1B88     		ldrh	r3, [r3]
 598 0042 0133     		adds	r3, r3, #1
 599 0044 9AB2     		uxth	r2, r3
 600 0046 094B     		ldr	r3, .L24+8
 601 0048 1A80     		strh	r2, [r3]	@ movhi
 602 004a 02E0     		b	.L23
 603              	.L22:
 142:main.c        ****     } else {
 143:main.c        ****         forwardBuffer = 0;    
 604              		.loc 1 143 0
 605 004c 074B     		ldr	r3, .L24+8
 606 004e 0022     		movs	r2, #0
 607 0050 1A80     		strh	r2, [r3]	@ movhi
 608              	.L23:
 144:main.c        ****     }
 145:main.c        ****     SetRobotMovement(); 
 609              		.loc 1 145 0
 610 0052 FFF7FEFF 		bl	SetRobotMovement
 146:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 611              		.loc 1 146 0
 612 0056 FFF7FEFF 		bl	ResetSensorFlags
 147:main.c        ****     Timer_LED_ReadStatusRegister();
 613              		.loc 1 147 0
 614 005a FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 148:main.c        **** }
 615              		.loc 1 148 0
 616 005e 00BF     		nop
 617 0060 80BD     		pop	{r7, pc}
 618              	.L25:
 619 0062 00BF     		.align	2
 620              	.L24:
 621 0064 00000000 		.word	currentDirection
 622 0068 00000000 		.word	stopBuffer
 623 006c 00000000 		.word	forwardBuffer
 624              		.cfi_endproc
 625              	.LFE69:
 626              		.size	TIMER_FINISH, .-TIMER_FINISH
 627              		.section	.text.main,"ax",%progbits
 628              		.align	2
 629              		.global	main
 630              		.thumb
 631              		.thumb_func
 632              		.type	main, %function
 633              	main:
 634              	.LFB70:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 15


 149:main.c        **** 
 150:main.c        **** 
 151:main.c        **** int main() {
 635              		.loc 1 151 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 24
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 B0B5     		push	{r4, r5, r7, lr}
 640              		.cfi_def_cfa_offset 16
 641              		.cfi_offset 4, -16
 642              		.cfi_offset 5, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 86B0     		sub	sp, sp, #24
 646              		.cfi_def_cfa_offset 40
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 152:main.c        **** // ----- INITIALIZATIONS ----------
 153:main.c        ****     CYGlobalIntEnable;
 649              		.loc 1 153 0
 650              		.syntax unified
 651              	@ 153 "main.c" 1
 652 0006 62B6     		CPSIE   i
 653              	@ 0 "" 2
 154:main.c        ****     ResetSensorFlags();
 654              		.loc 1 154 0
 655              		.thumb
 656              		.syntax unified
 657 0008 FFF7FEFF 		bl	ResetSensorFlags
 155:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 658              		.loc 1 155 0
 659 000c FFF7FEFF 		bl	init
 156:main.c        ****     
 157:main.c        ****     // MAKE SURE TO INITIALISE CORRECT ORIENTATION
 158:main.c        ****     instructionList = findPath(map, food_list, currentFoodListIndex, Down); // initialise with star
 660              		.loc 1 158 0
 661 0010 284B     		ldr	r3, .L29
 662 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 663 0014 1A46     		mov	r2, r3
 664 0016 0123     		movs	r3, #1
 665 0018 2749     		ldr	r1, .L29+4
 666 001a 2848     		ldr	r0, .L29+8
 667 001c FFF7FEFF 		bl	findPath
 668 0020 0246     		mov	r2, r0
 669 0022 274B     		ldr	r3, .L29+12
 670 0024 1A60     		str	r2, [r3]
 159:main.c        ****     
 160:main.c        ****     currentInstruction = GetInstructionAtIndex(); // initialise instructiony
 671              		.loc 1 160 0
 672 0026 274C     		ldr	r4, .L29+16
 673 0028 3B46     		mov	r3, r7
 674 002a 1846     		mov	r0, r3
 675 002c FFF7FEFF 		bl	GetInstructionAtIndex
 676 0030 2546     		mov	r5, r4
 677 0032 3C46     		mov	r4, r7
 678 0034 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 679 0036 0FC5     		stmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 16


 680 0038 2368     		ldr	r3, [r4]
 681 003a 2B60     		str	r3, [r5]
 161:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 682              		.loc 1 161 0
 683 003c 204B     		ldr	r3, .L29+12
 684 003e 1968     		ldr	r1, [r3]
 685 0040 214B     		ldr	r3, .L29+20
 686 0042 1A68     		ldr	r2, [r3]
 687 0044 1346     		mov	r3, r2
 688 0046 9B00     		lsls	r3, r3, #2
 689 0048 1344     		add	r3, r3, r2
 690 004a 9B00     		lsls	r3, r3, #2
 691 004c 0B44     		add	r3, r3, r1
 692 004e 5B68     		ldr	r3, [r3, #4]
 693 0050 DAB2     		uxtb	r2, r3
 694 0052 1E4B     		ldr	r3, .L29+24
 695 0054 1A70     		strb	r2, [r3]
 162:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR; // initialise ignores
 696              		.loc 1 162 0
 697 0056 1A4B     		ldr	r3, .L29+12
 698 0058 1968     		ldr	r1, [r3]
 699 005a 1B4B     		ldr	r3, .L29+20
 700 005c 1A68     		ldr	r2, [r3]
 701 005e 1346     		mov	r3, r2
 702 0060 9B00     		lsls	r3, r3, #2
 703 0062 1344     		add	r3, r3, r2
 704 0064 9B00     		lsls	r3, r3, #2
 705 0066 0B44     		add	r3, r3, r1
 706 0068 9B68     		ldr	r3, [r3, #8]
 707 006a DAB2     		uxtb	r2, r3
 708 006c 184B     		ldr	r3, .L29+28
 709 006e 1A70     		strb	r2, [r3]
 163:main.c        ****     
 164:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 710              		.loc 1 164 0
 711 0070 1848     		ldr	r0, .L29+32
 712 0072 FFF7FEFF 		bl	isr_speed_StartEx
 165:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 713              		.loc 1 165 0
 714 0076 1848     		ldr	r0, .L29+36
 715 0078 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 166:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 716              		.loc 1 166 0
 717 007c 1748     		ldr	r0, .L29+40
 718 007e FFF7FEFF 		bl	S3_detected_StartEx
 167:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 719              		.loc 1 167 0
 720 0082 1748     		ldr	r0, .L29+44
 721 0084 FFF7FEFF 		bl	S4_detected_StartEx
 168:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 722              		.loc 1 168 0
 723 0088 1648     		ldr	r0, .L29+48
 724 008a FFF7FEFF 		bl	S5_detected_StartEx
 169:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 725              		.loc 1 169 0
 726 008e 1648     		ldr	r0, .L29+52
 727 0090 FFF7FEFF 		bl	S6_detected_StartEx
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 17


 170:main.c        ****     Timer_LED_Start();
 728              		.loc 1 170 0
 729 0094 FFF7FEFF 		bl	Timer_LED_Start
 730              	.L28:
 171:main.c        **** 
 172:main.c        ****     for(;;)
 173:main.c        ****     {
 174:main.c        ****         if(timerInt == 1) {
 731              		.loc 1 174 0
 732 0098 144B     		ldr	r3, .L29+56
 733 009a 1B68     		ldr	r3, [r3]
 734 009c 012B     		cmp	r3, #1
 735 009e FBD1     		bne	.L28
 175:main.c        ****             timerInt = 0;
 736              		.loc 1 175 0
 737 00a0 124B     		ldr	r3, .L29+56
 738 00a2 0022     		movs	r2, #0
 739 00a4 1A60     		str	r2, [r3]
 176:main.c        ****             quadCountToRPM(quadDec2Count); // calculate RPM of M2
 740              		.loc 1 176 0
 741 00a6 124B     		ldr	r3, .L29+60
 742 00a8 1B68     		ldr	r3, [r3]
 743 00aa 9BB2     		uxth	r3, r3
 744 00ac 1846     		mov	r0, r3
 745 00ae FFF7FEFF 		bl	quadCountToRPM
 177:main.c        ****         }
 178:main.c        ****     }
 746              		.loc 1 178 0
 747 00b2 F1E7     		b	.L28
 748              	.L30:
 749              		.align	2
 750              	.L29:
 751 00b4 00000000 		.word	currentFoodListIndex
 752 00b8 00000000 		.word	food_list
 753 00bc 00000000 		.word	map
 754 00c0 00000000 		.word	instructionList
 755 00c4 00000000 		.word	currentInstruction
 756 00c8 14000000 		.word	instructionIndex
 757 00cc 3E000000 		.word	currentIgnoreL
 758 00d0 3F000000 		.word	currentIgnoreR
 759 00d4 00000000 		.word	speedTimer
 760 00d8 00000000 		.word	TIMER_FINISH
 761 00dc 00000000 		.word	S3_DETECTED
 762 00e0 00000000 		.word	S4_DETECTED
 763 00e4 00000000 		.word	S5_DETECTED
 764 00e8 00000000 		.word	S6_DETECTED
 765 00ec 00000000 		.word	timerInt
 766 00f0 00000000 		.word	quadDec2Count
 767              		.cfi_endproc
 768              	.LFE70:
 769              		.size	main, .-main
 770              		.global	__aeabi_fmul
 771              		.global	__aeabi_f2iz
 772              		.section	.text.quadCountToRPM,"ax",%progbits
 773              		.align	2
 774              		.global	quadCountToRPM
 775              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 18


 776              		.thumb_func
 777              		.type	quadCountToRPM, %function
 778              	quadCountToRPM:
 779              	.LFB71:
 179:main.c        ****     return 0;
 180:main.c        **** }
 181:main.c        **** 
 182:main.c        **** // Calculations
 183:main.c        **** //* ========================================
 184:main.c        **** int16 quadCountToRPM(uint16 count) {
 780              		.loc 1 184 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 16
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 90B5     		push	{r4, r7, lr}
 785              		.cfi_def_cfa_offset 12
 786              		.cfi_offset 4, -12
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 85B0     		sub	sp, sp, #20
 790              		.cfi_def_cfa_offset 32
 791 0004 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 793 0006 0346     		mov	r3, r0
 794 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 185:main.c        ****     float cps = count/57.00;
 795              		.loc 1 185 0
 796 000a FB88     		ldrh	r3, [r7, #6]
 797 000c 1846     		mov	r0, r3
 798 000e FFF7FEFF 		bl	__aeabi_i2d
 799 0012 4FF00002 		mov	r2, #0
 800 0016 0D4B     		ldr	r3, .L33
 801 0018 FFF7FEFF 		bl	__aeabi_ddiv
 802 001c 0346     		mov	r3, r0
 803 001e 0C46     		mov	r4, r1
 804 0020 1846     		mov	r0, r3
 805 0022 2146     		mov	r1, r4
 806 0024 FFF7FEFF 		bl	__aeabi_d2f
 807 0028 0346     		mov	r3, r0
 808 002a FB60     		str	r3, [r7, #12]	@ float
 186:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 809              		.loc 1 186 0
 810 002c 0849     		ldr	r1, .L33+4
 811 002e F868     		ldr	r0, [r7, #12]	@ float
 812 0030 FFF7FEFF 		bl	__aeabi_fmul
 813 0034 0346     		mov	r3, r0
 814 0036 1846     		mov	r0, r3
 815 0038 FFF7FEFF 		bl	__aeabi_f2iz
 816 003c 0346     		mov	r3, r0
 817 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 187:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 188:main.c        ****     return rpm;
 818              		.loc 1 188 0
 819 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 189:main.c        ****     //usbPutString(buffer);
 190:main.c        ****     //usbPutString("rpm ");
 191:main.c        **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 19


 820              		.loc 1 191 0
 821 0044 1846     		mov	r0, r3
 822 0046 1437     		adds	r7, r7, #20
 823              		.cfi_def_cfa_offset 12
 824 0048 BD46     		mov	sp, r7
 825              		.cfi_def_cfa_register 13
 826              		@ sp needed
 827 004a 90BD     		pop	{r4, r7, pc}
 828              	.L34:
 829              		.align	2
 830              	.L33:
 831 004c 00804C40 		.word	1078755328
 832 0050 00007041 		.word	1097859072
 833              		.cfi_endproc
 834              	.LFE71:
 835              		.size	quadCountToRPM, .-quadCountToRPM
 836              		.section	.text.ResetSensorFlags,"ax",%progbits
 837              		.align	2
 838              		.global	ResetSensorFlags
 839              		.thumb
 840              		.thumb_func
 841              		.type	ResetSensorFlags, %function
 842              	ResetSensorFlags:
 843              	.LFB72:
 192:main.c        **** 
 193:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 194:main.c        **** void ResetSensorFlags() {
 844              		.loc 1 194 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849 0000 80B4     		push	{r7}
 850              		.cfi_def_cfa_offset 4
 851              		.cfi_offset 7, -4
 852 0002 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 195:main.c        ****     s3 = 0;
 854              		.loc 1 195 0
 855 0004 074B     		ldr	r3, .L36
 856 0006 0022     		movs	r2, #0
 857 0008 1A70     		strb	r2, [r3]
 196:main.c        ****     s4 = 0;
 858              		.loc 1 196 0
 859 000a 074B     		ldr	r3, .L36+4
 860 000c 0022     		movs	r2, #0
 861 000e 1A70     		strb	r2, [r3]
 197:main.c        ****     s5 = 0;
 862              		.loc 1 197 0
 863 0010 064B     		ldr	r3, .L36+8
 864 0012 0022     		movs	r2, #0
 865 0014 1A70     		strb	r2, [r3]
 198:main.c        ****     s6 = 0;
 866              		.loc 1 198 0
 867 0016 064B     		ldr	r3, .L36+12
 868 0018 0022     		movs	r2, #0
 869 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 20


 199:main.c        **** }
 870              		.loc 1 199 0
 871 001c 00BF     		nop
 872 001e BD46     		mov	sp, r7
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 0020 80BC     		pop	{r7}
 876              		.cfi_restore 7
 877              		.cfi_def_cfa_offset 0
 878 0022 7047     		bx	lr
 879              	.L37:
 880              		.align	2
 881              	.L36:
 882 0024 00000000 		.word	s3
 883 0028 00000000 		.word	s4
 884 002c 00000000 		.word	s5
 885 0030 00000000 		.word	s6
 886              		.cfi_endproc
 887              	.LFE72:
 888              		.size	ResetSensorFlags, .-ResetSensorFlags
 889              		.global	xBlocksize
 890              		.data
 891 0045 000000   		.align	2
 892              		.type	xBlocksize, %object
 893              		.size	xBlocksize, 4
 894              	xBlocksize:
 895 0048 0000E842 		.word	1122500608
 896              		.global	yBlocksize
 897              		.align	2
 898              		.type	yBlocksize, %object
 899              		.size	yBlocksize, 4
 900              	yBlocksize:
 901 004c 00009042 		.word	1116733440
 902              		.global	currentRow
 903              		.type	currentRow, %object
 904              		.size	currentRow, 1
 905              	currentRow:
 906 0050 01       		.byte	1
 907              		.global	currentCol
 908              		.type	currentCol, %object
 909              		.size	currentCol, 1
 910              	currentCol:
 911 0051 01       		.byte	1
 912              		.global	stoppedAfterTurn
 913              		.bss
 914              		.type	stoppedAfterTurn, %object
 915              		.size	stoppedAfterTurn, 1
 916              	stoppedAfterTurn:
 917 0054 00       		.space	1
 918              		.global	ignoreSensor
 919              		.type	ignoreSensor, %object
 920              		.size	ignoreSensor, 1
 921              	ignoreSensor:
 922 0055 00       		.space	1
 923              		.section	.text.ForwardCourseCorrection,"ax",%progbits
 924              		.align	2
 925              		.global	ForwardCourseCorrection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 21


 926              		.thumb
 927              		.thumb_func
 928              		.type	ForwardCourseCorrection, %function
 929              	ForwardCourseCorrection:
 930              	.LFB73:
 200:main.c        **** 
 201:main.c        **** float xBlocksize = 116; // 122 mm
 202:main.c        **** float yBlocksize = 72; // 80 mm
 203:main.c        **** uint8 currentRow = 1;
 204:main.c        **** uint8 currentCol = 1;
 205:main.c        **** 
 206:main.c        **** uint8 stoppedAfterTurn = 0;
 207:main.c        **** uint8 ignoreSensor = 0;
 208:main.c        **** // needs to make sure robot is going in the correct direction (supplied from instruction)
 209:main.c        **** 
 210:main.c        **** enum RobotMovement ForwardCourseCorrection();
 211:main.c        **** enum RobotMovement ForwardCourseCorrection() {
 931              		.loc 1 211 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936 0000 80B4     		push	{r7}
 937              		.cfi_def_cfa_offset 4
 938              		.cfi_offset 7, -4
 939 0002 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 212:main.c        ****     // if S5 and S6 are on black, move forward
 213:main.c        ****     if (!s5 && !s6) {
 941              		.loc 1 213 0
 942 0004 1C4B     		ldr	r3, .L46
 943 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 0008 002B     		cmp	r3, #0
 945 000a 0FD1     		bne	.L39
 946              		.loc 1 213 0 is_stmt 0 discriminator 1
 947 000c 1B4B     		ldr	r3, .L46+4
 948 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 0010 002B     		cmp	r3, #0
 950 0012 0BD1     		bne	.L39
 214:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 951              		.loc 1 214 0 is_stmt 1
 952 0014 1A4B     		ldr	r3, .L46+8
 953 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 954 0018 032B     		cmp	r3, #3
 955 001a 01D0     		beq	.L40
 215:main.c        ****             return AdjustToTheLeft;
 956              		.loc 1 215 0
 957 001c 0323     		movs	r3, #3
 958 001e 26E0     		b	.L41
 959              	.L40:
 216:main.c        ****         }
 217:main.c        ****         if (previousDirection != AdjustToTheRight) {
 960              		.loc 1 217 0
 961 0020 174B     		ldr	r3, .L46+8
 962 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0024 042B     		cmp	r3, #4
 964 0026 01D0     		beq	.L39
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 22


 218:main.c        ****             return AdjustToTheRight;    
 965              		.loc 1 218 0
 966 0028 0423     		movs	r3, #4
 967 002a 20E0     		b	.L41
 968              	.L39:
 219:main.c        ****         }
 220:main.c        ****     }
 221:main.c        ****     
 222:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 223:main.c        ****     if (s5 && s6) {
 969              		.loc 1 223 0
 970 002c 124B     		ldr	r3, .L46
 971 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 972 0030 002B     		cmp	r3, #0
 973 0032 0FD0     		beq	.L42
 974              		.loc 1 223 0 is_stmt 0 discriminator 1
 975 0034 114B     		ldr	r3, .L46+4
 976 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 0038 002B     		cmp	r3, #0
 978 003a 0BD0     		beq	.L42
 224:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 979              		.loc 1 224 0 is_stmt 1
 980 003c 104B     		ldr	r3, .L46+8
 981 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 982 0040 032B     		cmp	r3, #3
 983 0042 01D0     		beq	.L43
 225:main.c        ****             return AdjustToTheLeft;
 984              		.loc 1 225 0
 985 0044 0323     		movs	r3, #3
 986 0046 12E0     		b	.L41
 987              	.L43:
 226:main.c        ****         }
 227:main.c        ****         if (previousDirection != AdjustToTheRight) {
 988              		.loc 1 227 0
 989 0048 0D4B     		ldr	r3, .L46+8
 990 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 991 004c 042B     		cmp	r3, #4
 992 004e 01D0     		beq	.L42
 228:main.c        ****             return AdjustToTheRight;    
 993              		.loc 1 228 0
 994 0050 0423     		movs	r3, #4
 995 0052 0CE0     		b	.L41
 996              	.L42:
 229:main.c        ****         }
 230:main.c        ****     }
 231:main.c        **** 
 232:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 233:main.c        ****     if (s5) {
 997              		.loc 1 233 0
 998 0054 084B     		ldr	r3, .L46
 999 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1000 0058 002B     		cmp	r3, #0
 1001 005a 01D0     		beq	.L44
 234:main.c        ****         return AdjustToTheRight;    
 1002              		.loc 1 234 0
 1003 005c 0423     		movs	r3, #4
 1004 005e 06E0     		b	.L41
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 23


 1005              	.L44:
 235:main.c        ****     }
 236:main.c        ****     if (s6) {
 1006              		.loc 1 236 0
 1007 0060 064B     		ldr	r3, .L46+4
 1008 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 0064 002B     		cmp	r3, #0
 1010 0066 01D0     		beq	.L45
 237:main.c        ****         return AdjustToTheLeft;    
 1011              		.loc 1 237 0
 1012 0068 0323     		movs	r3, #3
 1013 006a 00E0     		b	.L41
 1014              	.L45:
 238:main.c        ****     }
 239:main.c        ****    
 240:main.c        ****     // We should never actually get to this point
 241:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 242:main.c        ****     return Stop;
 1015              		.loc 1 242 0
 1016 006c 0523     		movs	r3, #5
 1017              	.L41:
 243:main.c        **** }
 1018              		.loc 1 243 0
 1019 006e 1846     		mov	r0, r3
 1020 0070 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 0072 80BC     		pop	{r7}
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 0074 7047     		bx	lr
 1027              	.L47:
 1028 0076 00BF     		.align	2
 1029              	.L46:
 1030 0078 00000000 		.word	s5
 1031 007c 00000000 		.word	s6
 1032 0080 00000000 		.word	previousDirection
 1033              		.cfi_endproc
 1034              	.LFE73:
 1035              		.size	ForwardCourseCorrection, .-ForwardCourseCorrection
 1036              		.global	lastDirectionAfter180
 1037              		.data
 1038              		.type	lastDirectionAfter180, %object
 1039              		.size	lastDirectionAfter180, 1
 1040              	lastDirectionAfter180:
 1041 0052 06       		.byte	6
 1042              		.section	.text.SpinCourseCorrection,"ax",%progbits
 1043              		.align	2
 1044              		.global	SpinCourseCorrection
 1045              		.thumb
 1046              		.thumb_func
 1047              		.type	SpinCourseCorrection, %function
 1048              	SpinCourseCorrection:
 1049              	.LFB74:
 244:main.c        **** 
 245:main.c        **** enum RobotMovement SpinCourseCorrection();
 246:main.c        **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 24


 247:main.c        **** enum RobotMovement lastDirectionAfter180 = Unknown;
 248:main.c        **** 
 249:main.c        **** enum RobotMovement SpinCourseCorrection() {
 1050              		.loc 1 249 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 1, uses_anonymous_args = 0
 1054              		@ link register save eliminated.
 1055 0000 80B4     		push	{r7}
 1056              		.cfi_def_cfa_offset 4
 1057              		.cfi_offset 7, -4
 1058 0002 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
 250:main.c        ****     // Set first iteration flag.
 251:main.c        ****     if (!spinCourseCorrectionStarted) {
 1060              		.loc 1 251 0
 1061 0004 184B     		ldr	r3, .L55
 1062 0006 1B78     		ldrb	r3, [r3]
 1063 0008 DBB2     		uxtb	r3, r3
 1064 000a 002B     		cmp	r3, #0
 1065 000c 06D1     		bne	.L49
 252:main.c        ****         spinCourseCorrectionStarted = 1;    
 1066              		.loc 1 252 0
 1067 000e 164B     		ldr	r3, .L55
 1068 0010 0122     		movs	r2, #1
 1069 0012 1A70     		strb	r2, [r3]
 253:main.c        ****         lastDirectionAfter180 = currentDirection;
 1070              		.loc 1 253 0
 1071 0014 154B     		ldr	r3, .L55+4
 1072 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1073 0018 154B     		ldr	r3, .L55+8
 1074 001a 1A70     		strb	r2, [r3]
 1075              	.L49:
 254:main.c        ****     }
 255:main.c        ****     
 256:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 257:main.c        ****     if (s5 && s6) {
 1076              		.loc 1 257 0
 1077 001c 154B     		ldr	r3, .L55+12
 1078 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1079 0020 002B     		cmp	r3, #0
 1080 0022 0FD0     		beq	.L50
 1081              		.loc 1 257 0 is_stmt 0 discriminator 1
 1082 0024 144B     		ldr	r3, .L55+16
 1083 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1084 0028 002B     		cmp	r3, #0
 1085 002a 0BD0     		beq	.L50
 258:main.c        ****         if (lastDirectionAfter180 != TurnLeft) {
 1086              		.loc 1 258 0 is_stmt 1
 1087 002c 104B     		ldr	r3, .L55+8
 1088 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1089 0030 022B     		cmp	r3, #2
 1090 0032 01D0     		beq	.L51
 259:main.c        ****             return TurnLeft;
 1091              		.loc 1 259 0
 1092 0034 0223     		movs	r3, #2
 1093 0036 12E0     		b	.L52
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 25


 1094              	.L51:
 260:main.c        ****         }
 261:main.c        ****         if (lastDirectionAfter180 != TurnRight) {
 1095              		.loc 1 261 0
 1096 0038 0D4B     		ldr	r3, .L55+8
 1097 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 003c 012B     		cmp	r3, #1
 1099 003e 01D0     		beq	.L50
 262:main.c        ****             return TurnRight;    
 1100              		.loc 1 262 0
 1101 0040 0123     		movs	r3, #1
 1102 0042 0CE0     		b	.L52
 1103              	.L50:
 263:main.c        ****         }
 264:main.c        ****     }
 265:main.c        **** 
 266:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 267:main.c        ****     if (s5) {
 1104              		.loc 1 267 0
 1105 0044 0B4B     		ldr	r3, .L55+12
 1106 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 0048 002B     		cmp	r3, #0
 1108 004a 01D0     		beq	.L53
 268:main.c        ****         return TurnRight;    
 1109              		.loc 1 268 0
 1110 004c 0123     		movs	r3, #1
 1111 004e 06E0     		b	.L52
 1112              	.L53:
 269:main.c        ****     }
 270:main.c        ****     if (s6) {
 1113              		.loc 1 270 0
 1114 0050 094B     		ldr	r3, .L55+16
 1115 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116 0054 002B     		cmp	r3, #0
 1117 0056 01D0     		beq	.L54
 271:main.c        ****         return TurnLeft;    
 1118              		.loc 1 271 0
 1119 0058 0223     		movs	r3, #2
 1120 005a 00E0     		b	.L52
 1121              	.L54:
 272:main.c        ****     }
 273:main.c        ****    
 274:main.c        ****     // We should never actually get to this point
 275:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 276:main.c        ****     return Stop;
 1122              		.loc 1 276 0
 1123 005c 0523     		movs	r3, #5
 1124              	.L52:
 277:main.c        **** }
 1125              		.loc 1 277 0
 1126 005e 1846     		mov	r0, r3
 1127 0060 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 0062 80BC     		pop	{r7}
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 26


 1133 0064 7047     		bx	lr
 1134              	.L56:
 1135 0066 00BF     		.align	2
 1136              	.L55:
 1137 0068 3D000000 		.word	spinCourseCorrectionStarted
 1138 006c 00000000 		.word	currentDirection
 1139 0070 00000000 		.word	lastDirectionAfter180
 1140 0074 00000000 		.word	s5
 1141 0078 00000000 		.word	s6
 1142              		.cfi_endproc
 1143              	.LFE74:
 1144              		.size	SpinCourseCorrection, .-SpinCourseCorrection
 1145              		.section	.text.SpinTurnCourseCorrection,"ax",%progbits
 1146              		.align	2
 1147              		.global	SpinTurnCourseCorrection
 1148              		.thumb
 1149              		.thumb_func
 1150              		.type	SpinTurnCourseCorrection, %function
 1151              	SpinTurnCourseCorrection:
 1152              	.LFB75:
 278:main.c        **** enum RobotMovement SpinTurnCourseCorrection();
 279:main.c        **** enum RobotMovement SpinTurnCourseCorrection() {
 1153              		.loc 1 279 0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 1, uses_anonymous_args = 0
 1157              		@ link register save eliminated.
 1158 0000 80B4     		push	{r7}
 1159              		.cfi_def_cfa_offset 4
 1160              		.cfi_offset 7, -4
 1161 0002 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 280:main.c        ****     // if S5 and S6 are on black, move forward
 281:main.c        ****     if (!s5 && !s6) {
 1163              		.loc 1 281 0
 1164 0004 1C4B     		ldr	r3, .L65
 1165 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 0008 002B     		cmp	r3, #0
 1167 000a 0FD1     		bne	.L58
 1168              		.loc 1 281 0 is_stmt 0 discriminator 1
 1169 000c 1B4B     		ldr	r3, .L65+4
 1170 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1171 0010 002B     		cmp	r3, #0
 1172 0012 0BD1     		bne	.L58
 282:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1173              		.loc 1 282 0 is_stmt 1
 1174 0014 1A4B     		ldr	r3, .L65+8
 1175 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 0018 032B     		cmp	r3, #3
 1177 001a 01D0     		beq	.L59
 283:main.c        ****             return TurnLeft;
 1178              		.loc 1 283 0
 1179 001c 0223     		movs	r3, #2
 1180 001e 26E0     		b	.L60
 1181              	.L59:
 284:main.c        ****         }
 285:main.c        ****         if (previousDirection != AdjustToTheRight) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 27


 1182              		.loc 1 285 0
 1183 0020 174B     		ldr	r3, .L65+8
 1184 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1185 0024 042B     		cmp	r3, #4
 1186 0026 01D0     		beq	.L58
 286:main.c        ****             return TurnRight;    
 1187              		.loc 1 286 0
 1188 0028 0123     		movs	r3, #1
 1189 002a 20E0     		b	.L60
 1190              	.L58:
 287:main.c        ****         }
 288:main.c        ****     }
 289:main.c        ****     
 290:main.c        ****     // ATTEMPTED COURSE CORRECTION WHEN BOTH ON WHITE
 291:main.c        ****     if (s5 && s6) {
 1191              		.loc 1 291 0
 1192 002c 124B     		ldr	r3, .L65
 1193 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1194 0030 002B     		cmp	r3, #0
 1195 0032 0FD0     		beq	.L61
 1196              		.loc 1 291 0 is_stmt 0 discriminator 1
 1197 0034 114B     		ldr	r3, .L65+4
 1198 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 0038 002B     		cmp	r3, #0
 1200 003a 0BD0     		beq	.L61
 292:main.c        ****         if (previousDirection != AdjustToTheLeft) {
 1201              		.loc 1 292 0 is_stmt 1
 1202 003c 104B     		ldr	r3, .L65+8
 1203 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204 0040 032B     		cmp	r3, #3
 1205 0042 01D0     		beq	.L62
 293:main.c        ****             return TurnLeft;
 1206              		.loc 1 293 0
 1207 0044 0223     		movs	r3, #2
 1208 0046 12E0     		b	.L60
 1209              	.L62:
 294:main.c        ****         }
 295:main.c        ****         if (previousDirection != AdjustToTheRight) {
 1210              		.loc 1 295 0
 1211 0048 0D4B     		ldr	r3, .L65+8
 1212 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 004c 042B     		cmp	r3, #4
 1214 004e 01D0     		beq	.L61
 296:main.c        ****             return TurnRight;    
 1215              		.loc 1 296 0
 1216 0050 0123     		movs	r3, #1
 1217 0052 0CE0     		b	.L60
 1218              	.L61:
 297:main.c        ****         }
 298:main.c        ****     }
 299:main.c        **** 
 300:main.c        ****     // if S5 OR S6 are on white, adjust accordingly
 301:main.c        ****     if (s5) {
 1219              		.loc 1 301 0
 1220 0054 084B     		ldr	r3, .L65
 1221 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222 0058 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 28


 1223 005a 01D0     		beq	.L63
 302:main.c        ****         return TurnRight;    
 1224              		.loc 1 302 0
 1225 005c 0123     		movs	r3, #1
 1226 005e 06E0     		b	.L60
 1227              	.L63:
 303:main.c        ****     }
 304:main.c        ****     if (s6) {
 1228              		.loc 1 304 0
 1229 0060 064B     		ldr	r3, .L65+4
 1230 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1231 0064 002B     		cmp	r3, #0
 1232 0066 01D0     		beq	.L64
 305:main.c        ****         return TurnLeft;    
 1233              		.loc 1 305 0
 1234 0068 0223     		movs	r3, #2
 1235 006a 00E0     		b	.L60
 1236              	.L64:
 306:main.c        ****     }
 307:main.c        ****    
 308:main.c        ****     // We should never actually get to this point
 309:main.c        ****     // If S5 and S6 condition are GONE, then we will reach this point.
 310:main.c        ****     return Stop;
 1237              		.loc 1 310 0
 1238 006c 0523     		movs	r3, #5
 1239              	.L60:
 311:main.c        **** }
 1240              		.loc 1 311 0
 1241 006e 1846     		mov	r0, r3
 1242 0070 BD46     		mov	sp, r7
 1243              		.cfi_def_cfa_register 13
 1244              		@ sp needed
 1245 0072 80BC     		pop	{r7}
 1246              		.cfi_restore 7
 1247              		.cfi_def_cfa_offset 0
 1248 0074 7047     		bx	lr
 1249              	.L66:
 1250 0076 00BF     		.align	2
 1251              	.L65:
 1252 0078 00000000 		.word	s5
 1253 007c 00000000 		.word	s6
 1254 0080 00000000 		.word	previousDirection
 1255              		.cfi_endproc
 1256              	.LFE75:
 1257              		.size	SpinTurnCourseCorrection, .-SpinTurnCourseCorrection
 1258              		.global	firstTurnIteration
 1259              		.bss
 1260              		.type	firstTurnIteration, %object
 1261              		.size	firstTurnIteration, 1
 1262              	firstTurnIteration:
 1263 0056 00       		.space	1
 1264              	forwardAfterTurnLIgnore:
 1265 0057 00       		.space	1
 1266              	forwardAfterTurnRIgnore:
 1267 0058 00       		.space	1
 1268              		.global	__aeabi_i2f
 1269              		.global	__aeabi_fcmpge
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 29


 1270              		.section	.text.GetMovementAccordingToInstruction,"ax",%progbits
 1271              		.align	2
 1272              		.global	GetMovementAccordingToInstruction
 1273              		.thumb
 1274              		.thumb_func
 1275              		.type	GetMovementAccordingToInstruction, %function
 1276              	GetMovementAccordingToInstruction:
 1277              	.LFB76:
 312:main.c        **** 
 313:main.c        **** uint8 firstTurnIteration = 0;
 314:main.c        **** volatile static uint8 forwardAfterTurnLIgnore = 0;
 315:main.c        **** volatile static uint8 forwardAfterTurnRIgnore = 0;
 316:main.c        **** 
 317:main.c        **** enum RobotMovement GetMovementAccordingToInstruction() {
 1278              		.loc 1 317 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 16
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 84B0     		sub	sp, sp, #16
 1287              		.cfi_def_cfa_offset 24
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
 318:main.c        ****     float blocksize;
 319:main.c        ****     if(currentInstruction.expectedOrientation == Up || currentInstruction.expectedOrientation == Do
 1290              		.loc 1 319 0
 1291 0006 944B     		ldr	r3, .L140
 1292 0008 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1293 000a 002B     		cmp	r3, #0
 1294 000c 03D0     		beq	.L68
 1295              		.loc 1 319 0 is_stmt 0 discriminator 1
 1296 000e 924B     		ldr	r3, .L140
 1297 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1298 0012 012B     		cmp	r3, #1
 1299 0014 03D1     		bne	.L69
 1300              	.L68:
 320:main.c        ****         blocksize = yBlocksize;
 1301              		.loc 1 320 0 is_stmt 1
 1302 0016 914B     		ldr	r3, .L140+4
 1303 0018 1B68     		ldr	r3, [r3]	@ float
 1304 001a FB60     		str	r3, [r7, #12]	@ float
 1305 001c 02E0     		b	.L70
 1306              	.L69:
 321:main.c        ****     } else {
 322:main.c        ****         blocksize = xBlocksize;
 1307              		.loc 1 322 0
 1308 001e 904B     		ldr	r3, .L140+8
 1309 0020 1B68     		ldr	r3, [r3]	@ float
 1310 0022 FB60     		str	r3, [r7, #12]	@ float
 1311              	.L70:
 323:main.c        ****     }
 324:main.c        ****     
 325:main.c        ****     // This function makes it so that it will return a robotmovement direction according to the cur
 326:main.c        ****     // AND move to the next instruction when EITHER totalDistance >= blocksize, 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 30


 327:main.c        ****         // OR an EVENT happens in the current instruction
 328:main.c        ****         // e.g. CurrentInstruction: GoForward 
 329:main.c        ****         //      S3 on BLACK
 330:main.c        ****         //      Check Ignore Count
 331:main.c        ****         //      If Ignore Count = 0, move to next instruction.
 332:main.c        ****     
 333:main.c        ****     enum InstructionDirection currentInstructionDirection = currentInstruction.direction;
 1312              		.loc 1 333 0
 1313 0024 8C4B     		ldr	r3, .L140
 1314 0026 1B78     		ldrb	r3, [r3]
 1315 0028 FB72     		strb	r3, [r7, #11]
 334:main.c        ****     
 335:main.c        ****     switch (currentInstructionDirection) {
 1316              		.loc 1 335 0
 1317 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1318 002c 052B     		cmp	r3, #5
 1319 002e 00F22E83 		bhi	.L71
 1320 0032 01A2     		adr	r2, .L73
 1321 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1322              		.p2align 2
 1323              	.L73:
 1324 0038 51000000 		.word	.L72+1
 1325 003c B3010000 		.word	.L74+1
 1326 0040 29030000 		.word	.L75+1
 1327 0044 FD050000 		.word	.L76+1
 1328 0048 55040000 		.word	.L77+1
 1329 004c C5050000 		.word	.L78+1
 1330              		.p2align 1
 1331              	.L72:
 336:main.c        ****         case GoForward:
 337:main.c        ****             if(currentDirection == Stop) {
 1332              		.loc 1 337 0
 1333 0050 844B     		ldr	r3, .L140+12
 1334 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 0054 052B     		cmp	r3, #5
 1336 0056 08D1     		bne	.L79
 338:main.c        ****                 if(stopBuffer <= 25) {
 1337              		.loc 1 338 0
 1338 0058 834B     		ldr	r3, .L140+16
 1339 005a 1B68     		ldr	r3, [r3]
 1340 005c 192B     		cmp	r3, #25
 1341 005e 01D8     		bhi	.L80
 339:main.c        ****                     return Stop;
 1342              		.loc 1 339 0
 1343 0060 0523     		movs	r3, #5
 1344 0062 15E3     		b	.L81
 1345              	.L80:
 340:main.c        ****                 } else {
 341:main.c        ****                     stopBuffer = 100;
 1346              		.loc 1 341 0
 1347 0064 804B     		ldr	r3, .L140+16
 1348 0066 6422     		movs	r2, #100
 1349 0068 1A60     		str	r2, [r3]
 1350              	.L79:
 342:main.c        ****                 }
 343:main.c        ****             }
 344:main.c        ****             if (s3) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 31


 1351              		.loc 1 344 0
 1352 006a 804B     		ldr	r3, .L140+20
 1353 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1354 006e 002B     		cmp	r3, #0
 1355 0070 02D0     		beq	.L82
 345:main.c        ****                 leftStatusFlag = 1;
 1356              		.loc 1 345 0
 1357 0072 7F4B     		ldr	r3, .L140+24
 1358 0074 0122     		movs	r2, #1
 1359 0076 1A70     		strb	r2, [r3]
 1360              	.L82:
 346:main.c        ****             }
 347:main.c        ****             
 348:main.c        ****             if (s4) {
 1361              		.loc 1 348 0
 1362 0078 7E4B     		ldr	r3, .L140+28
 1363 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1364 007c 002B     		cmp	r3, #0
 1365 007e 02D0     		beq	.L83
 349:main.c        ****                 rightStatusFlag = 1;
 1366              		.loc 1 349 0
 1367 0080 7D4B     		ldr	r3, .L140+32
 1368 0082 0122     		movs	r2, #1
 1369 0084 1A70     		strb	r2, [r3]
 1370              	.L83:
 350:main.c        ****             }
 351:main.c        ****             
 352:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 353:main.c        ****             if (leftStatusFlag) {
 1371              		.loc 1 353 0
 1372 0086 7A4B     		ldr	r3, .L140+24
 1373 0088 1B78     		ldrb	r3, [r3]
 1374 008a DBB2     		uxtb	r3, r3
 1375 008c 002B     		cmp	r3, #0
 1376 008e 38D0     		beq	.L84
 354:main.c        ****                 if (!s3) {
 1377              		.loc 1 354 0
 1378 0090 764B     		ldr	r3, .L140+20
 1379 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 0094 002B     		cmp	r3, #0
 1381 0096 34D1     		bne	.L84
 355:main.c        ****                     leftStatusFlag = 0;    
 1382              		.loc 1 355 0
 1383 0098 754B     		ldr	r3, .L140+24
 1384 009a 0022     		movs	r2, #0
 1385 009c 1A70     		strb	r2, [r3]
 356:main.c        ****                     if (currentIgnoreR != 0 && forwardAfterTurnLIgnore > 0) {
 1386              		.loc 1 356 0
 1387 009e 774B     		ldr	r3, .L140+36
 1388 00a0 1B78     		ldrb	r3, [r3]
 1389 00a2 DBB2     		uxtb	r3, r3
 1390 00a4 002B     		cmp	r3, #0
 1391 00a6 0CD0     		beq	.L85
 1392              		.loc 1 356 0 is_stmt 0 discriminator 1
 1393 00a8 754B     		ldr	r3, .L140+40
 1394 00aa 1B78     		ldrb	r3, [r3]
 1395 00ac DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 32


 1396 00ae 002B     		cmp	r3, #0
 1397 00b0 07D0     		beq	.L85
 357:main.c        ****                         forwardAfterTurnLIgnore--;
 1398              		.loc 1 357 0 is_stmt 1
 1399 00b2 734B     		ldr	r3, .L140+40
 1400 00b4 1B78     		ldrb	r3, [r3]
 1401 00b6 DBB2     		uxtb	r3, r3
 1402 00b8 013B     		subs	r3, r3, #1
 1403 00ba DAB2     		uxtb	r2, r3
 1404 00bc 704B     		ldr	r3, .L140+40
 1405 00be 1A70     		strb	r2, [r3]
 1406 00c0 1FE0     		b	.L84
 1407              	.L85:
 358:main.c        ****                     } else {
 359:main.c        ****                         if (currentIgnoreL == 0) {
 1408              		.loc 1 359 0
 1409 00c2 704B     		ldr	r3, .L140+44
 1410 00c4 1B78     		ldrb	r3, [r3]
 1411 00c6 DBB2     		uxtb	r3, r3
 1412 00c8 002B     		cmp	r3, #0
 1413 00ca 0ED1     		bne	.L86
 360:main.c        ****                             if (forwardAfterTurnLIgnore > 0) {
 1414              		.loc 1 360 0
 1415 00cc 6C4B     		ldr	r3, .L140+40
 1416 00ce 1B78     		ldrb	r3, [r3]
 1417 00d0 DBB2     		uxtb	r3, r3
 1418 00d2 002B     		cmp	r3, #0
 1419 00d4 07D0     		beq	.L87
 361:main.c        ****                                 forwardAfterTurnLIgnore--;
 1420              		.loc 1 361 0
 1421 00d6 6A4B     		ldr	r3, .L140+40
 1422 00d8 1B78     		ldrb	r3, [r3]
 1423 00da DBB2     		uxtb	r3, r3
 1424 00dc 013B     		subs	r3, r3, #1
 1425 00de DAB2     		uxtb	r2, r3
 1426 00e0 674B     		ldr	r3, .L140+40
 1427 00e2 1A70     		strb	r2, [r3]
 1428 00e4 01E0     		b	.L86
 1429              	.L87:
 362:main.c        ****                             } else {
 363:main.c        ****                                 //MoveToNextInstruction();
 364:main.c        ****                                 return Stop;
 1430              		.loc 1 364 0
 1431 00e6 0523     		movs	r3, #5
 1432 00e8 D2E2     		b	.L81
 1433              	.L86:
 365:main.c        ****                             }
 366:main.c        ****                         }
 367:main.c        ****                         if (currentIgnoreL > 0) {
 1434              		.loc 1 367 0
 1435 00ea 664B     		ldr	r3, .L140+44
 1436 00ec 1B78     		ldrb	r3, [r3]
 1437 00ee DBB2     		uxtb	r3, r3
 1438 00f0 002B     		cmp	r3, #0
 1439 00f2 06D0     		beq	.L84
 368:main.c        ****                             currentIgnoreL--;    
 1440              		.loc 1 368 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 33


 1441 00f4 634B     		ldr	r3, .L140+44
 1442 00f6 1B78     		ldrb	r3, [r3]
 1443 00f8 DBB2     		uxtb	r3, r3
 1444 00fa 013B     		subs	r3, r3, #1
 1445 00fc DAB2     		uxtb	r2, r3
 1446 00fe 614B     		ldr	r3, .L140+44
 1447 0100 1A70     		strb	r2, [r3]
 1448              	.L84:
 369:main.c        ****                         }
 370:main.c        ****                     }
 371:main.c        ****                 }
 372:main.c        ****             }
 373:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 374:main.c        ****             if (rightStatusFlag) {
 1449              		.loc 1 374 0
 1450 0102 5D4B     		ldr	r3, .L140+32
 1451 0104 1B78     		ldrb	r3, [r3]
 1452 0106 DBB2     		uxtb	r3, r3
 1453 0108 002B     		cmp	r3, #0
 1454 010a 38D0     		beq	.L88
 375:main.c        ****                 if (!s4) {
 1455              		.loc 1 375 0
 1456 010c 594B     		ldr	r3, .L140+28
 1457 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0110 002B     		cmp	r3, #0
 1459 0112 34D1     		bne	.L88
 376:main.c        ****                     rightStatusFlag = 0;           
 1460              		.loc 1 376 0
 1461 0114 584B     		ldr	r3, .L140+32
 1462 0116 0022     		movs	r2, #0
 1463 0118 1A70     		strb	r2, [r3]
 377:main.c        ****                     if (currentIgnoreR != 0 && forwardAfterTurnRIgnore > 0) {
 1464              		.loc 1 377 0
 1465 011a 584B     		ldr	r3, .L140+36
 1466 011c 1B78     		ldrb	r3, [r3]
 1467 011e DBB2     		uxtb	r3, r3
 1468 0120 002B     		cmp	r3, #0
 1469 0122 0CD0     		beq	.L89
 1470              		.loc 1 377 0 is_stmt 0 discriminator 1
 1471 0124 584B     		ldr	r3, .L140+48
 1472 0126 1B78     		ldrb	r3, [r3]
 1473 0128 DBB2     		uxtb	r3, r3
 1474 012a 002B     		cmp	r3, #0
 1475 012c 07D0     		beq	.L89
 378:main.c        ****                         forwardAfterTurnRIgnore--;
 1476              		.loc 1 378 0 is_stmt 1
 1477 012e 564B     		ldr	r3, .L140+48
 1478 0130 1B78     		ldrb	r3, [r3]
 1479 0132 DBB2     		uxtb	r3, r3
 1480 0134 013B     		subs	r3, r3, #1
 1481 0136 DAB2     		uxtb	r2, r3
 1482 0138 534B     		ldr	r3, .L140+48
 1483 013a 1A70     		strb	r2, [r3]
 1484 013c 1FE0     		b	.L88
 1485              	.L89:
 379:main.c        ****                     } else {
 380:main.c        ****                         if (currentIgnoreR == 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 34


 1486              		.loc 1 380 0
 1487 013e 4F4B     		ldr	r3, .L140+36
 1488 0140 1B78     		ldrb	r3, [r3]
 1489 0142 DBB2     		uxtb	r3, r3
 1490 0144 002B     		cmp	r3, #0
 1491 0146 0ED1     		bne	.L90
 381:main.c        ****                             if (forwardAfterTurnRIgnore > 0) {
 1492              		.loc 1 381 0
 1493 0148 4F4B     		ldr	r3, .L140+48
 1494 014a 1B78     		ldrb	r3, [r3]
 1495 014c DBB2     		uxtb	r3, r3
 1496 014e 002B     		cmp	r3, #0
 1497 0150 07D0     		beq	.L91
 382:main.c        ****                                 forwardAfterTurnRIgnore--;
 1498              		.loc 1 382 0
 1499 0152 4D4B     		ldr	r3, .L140+48
 1500 0154 1B78     		ldrb	r3, [r3]
 1501 0156 DBB2     		uxtb	r3, r3
 1502 0158 013B     		subs	r3, r3, #1
 1503 015a DAB2     		uxtb	r2, r3
 1504 015c 4A4B     		ldr	r3, .L140+48
 1505 015e 1A70     		strb	r2, [r3]
 1506 0160 01E0     		b	.L90
 1507              	.L91:
 383:main.c        ****                             } else {
 384:main.c        ****                                 //MoveToNextInstruction();
 385:main.c        ****                                 return Stop;
 1508              		.loc 1 385 0
 1509 0162 0523     		movs	r3, #5
 1510 0164 94E2     		b	.L81
 1511              	.L90:
 386:main.c        ****                             }
 387:main.c        ****                         }
 388:main.c        ****                         if (currentIgnoreR > 0) {
 1512              		.loc 1 388 0
 1513 0166 454B     		ldr	r3, .L140+36
 1514 0168 1B78     		ldrb	r3, [r3]
 1515 016a DBB2     		uxtb	r3, r3
 1516 016c 002B     		cmp	r3, #0
 1517 016e 06D0     		beq	.L88
 389:main.c        ****                             currentIgnoreR--;   
 1518              		.loc 1 389 0
 1519 0170 424B     		ldr	r3, .L140+36
 1520 0172 1B78     		ldrb	r3, [r3]
 1521 0174 DBB2     		uxtb	r3, r3
 1522 0176 013B     		subs	r3, r3, #1
 1523 0178 DAB2     		uxtb	r2, r3
 1524 017a 404B     		ldr	r3, .L140+36
 1525 017c 1A70     		strb	r2, [r3]
 1526              	.L88:
 390:main.c        ****                         }
 391:main.c        ****                     }
 392:main.c        ****                     
 393:main.c        ****                 }
 394:main.c        ****                    
 395:main.c        ****             }
 396:main.c        ****             
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 35


 397:main.c        ****             if (currentIgnoreL == 0 || currentIgnoreR == 0) {
 1527              		.loc 1 397 0
 1528 017e 414B     		ldr	r3, .L140+44
 1529 0180 1B78     		ldrb	r3, [r3]
 1530 0182 DBB2     		uxtb	r3, r3
 1531 0184 002B     		cmp	r3, #0
 1532 0186 04D0     		beq	.L92
 1533              		.loc 1 397 0 is_stmt 0 discriminator 1
 1534 0188 3C4B     		ldr	r3, .L140+36
 1535 018a 1B78     		ldrb	r3, [r3]
 1536 018c DBB2     		uxtb	r3, r3
 1537 018e 002B     		cmp	r3, #0
 1538 0190 0BD1     		bne	.L93
 1539              	.L92:
 398:main.c        ****                 if (forwardAfterTurnLIgnore == 0 || forwardAfterTurnRIgnore == 0) {
 1540              		.loc 1 398 0 is_stmt 1
 1541 0192 3B4B     		ldr	r3, .L140+40
 1542 0194 1B78     		ldrb	r3, [r3]
 1543 0196 DBB2     		uxtb	r3, r3
 1544 0198 002B     		cmp	r3, #0
 1545 019a 04D0     		beq	.L94
 1546              		.loc 1 398 0 is_stmt 0 discriminator 1
 1547 019c 3A4B     		ldr	r3, .L140+48
 1548 019e 1B78     		ldrb	r3, [r3]
 1549 01a0 DBB2     		uxtb	r3, r3
 1550 01a2 002B     		cmp	r3, #0
 1551 01a4 01D1     		bne	.L93
 1552              	.L94:
 399:main.c        ****                     MoveToNextInstruction();                    
 1553              		.loc 1 399 0 is_stmt 1
 1554 01a6 FFF7FEFF 		bl	MoveToNextInstruction
 1555              	.L93:
 400:main.c        ****                 }
 401:main.c        ****             }
 402:main.c        ****           
 403:main.c        ****             return ForwardCourseCorrection();
 1556              		.loc 1 403 0
 1557 01aa FFF7FEFF 		bl	ForwardCourseCorrection
 1558 01ae 0346     		mov	r3, r0
 1559 01b0 6EE2     		b	.L81
 1560              	.L74:
 404:main.c        ****             break;
 405:main.c        ****         case waitForLeftTurn:
 406:main.c        ****             // continue moving forward until s3 goes on black
 407:main.c        ****             // if we are turning left already
 408:main.c        ****                 // wait until s5 || s6 are on black
 409:main.c        ****                 // return stop
 410:main.c        ****             if (!firstTurnIteration) {
 1561              		.loc 1 410 0
 1562 01b2 364B     		ldr	r3, .L140+52
 1563 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 01b6 002B     		cmp	r3, #0
 1565 01b8 08D1     		bne	.L95
 411:main.c        ****                 
 412:main.c        ****                 if (!s3) {
 1566              		.loc 1 412 0
 1567 01ba 2C4B     		ldr	r3, .L140+20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 36


 1568 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 01be 002B     		cmp	r3, #0
 1570 01c0 04D1     		bne	.L95
 413:main.c        ****                     firstTurnIteration = 1;
 1571              		.loc 1 413 0
 1572 01c2 324B     		ldr	r3, .L140+52
 1573 01c4 0122     		movs	r2, #1
 1574 01c6 1A70     		strb	r2, [r3]
 414:main.c        ****                     return Stop;    
 1575              		.loc 1 414 0
 1576 01c8 0523     		movs	r3, #5
 1577 01ca 61E2     		b	.L81
 1578              	.L95:
 415:main.c        ****                 }
 416:main.c        ****                 if (s3) {
 417:main.c        ****                     //return Backward;    
 418:main.c        ****                 }
 419:main.c        ****             }
 420:main.c        ****             
 421:main.c        ****             if (turnFinishedFlag) {
 1579              		.loc 1 421 0
 1580 01cc 304B     		ldr	r3, .L140+56
 1581 01ce 1B78     		ldrb	r3, [r3]
 1582 01d0 DBB2     		uxtb	r3, r3
 1583 01d2 002B     		cmp	r3, #0
 1584 01d4 31D0     		beq	.L97
 422:main.c        ****                 if (!s3 && !s5 && !s6) {
 1585              		.loc 1 422 0
 1586 01d6 254B     		ldr	r3, .L140+20
 1587 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 01da 002B     		cmp	r3, #0
 1589 01dc 0BD1     		bne	.L98
 1590              		.loc 1 422 0 is_stmt 0 discriminator 1
 1591 01de 2D4B     		ldr	r3, .L140+60
 1592 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1593 01e2 002B     		cmp	r3, #0
 1594 01e4 07D1     		bne	.L98
 1595              		.loc 1 422 0 discriminator 2
 1596 01e6 2C4B     		ldr	r3, .L140+64
 1597 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 01ea 002B     		cmp	r3, #0
 1599 01ec 03D1     		bne	.L98
 423:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 424:main.c        ****                     return ForwardCourseCorrection();
 1600              		.loc 1 424 0 is_stmt 1
 1601 01ee FFF7FEFF 		bl	ForwardCourseCorrection
 1602 01f2 0346     		mov	r3, r0
 1603 01f4 4CE2     		b	.L81
 1604              	.L98:
 425:main.c        ****                 }
 426:main.c        ****                 if (s5 || s6) {
 1605              		.loc 1 426 0
 1606 01f6 274B     		ldr	r3, .L140+60
 1607 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1608 01fa 002B     		cmp	r3, #0
 1609 01fc 03D1     		bne	.L99
 1610              		.loc 1 426 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 37


 1611 01fe 264B     		ldr	r3, .L140+64
 1612 0200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1613 0202 002B     		cmp	r3, #0
 1614 0204 03D0     		beq	.L100
 1615              	.L99:
 427:main.c        ****                     return SpinCourseCorrection();
 1616              		.loc 1 427 0 is_stmt 1
 1617 0206 FFF7FEFF 		bl	SpinCourseCorrection
 1618 020a 0346     		mov	r3, r0
 1619 020c 40E2     		b	.L81
 1620              	.L100:
 428:main.c        ****                 }
 429:main.c        ****                 if (forwardBuffer <= 10) {
 1621              		.loc 1 429 0
 1622 020e 234B     		ldr	r3, .L140+68
 1623 0210 1B88     		ldrh	r3, [r3]
 1624 0212 0A2B     		cmp	r3, #10
 1625 0214 03D8     		bhi	.L101
 430:main.c        ****                     return ForwardCourseCorrection();    
 1626              		.loc 1 430 0
 1627 0216 FFF7FEFF 		bl	ForwardCourseCorrection
 1628 021a 0346     		mov	r3, r0
 1629 021c 38E2     		b	.L81
 1630              	.L101:
 431:main.c        **** 
 432:main.c        ****                 } else {
 433:main.c        ****                     forwardBuffer = 100;
 1631              		.loc 1 433 0
 1632 021e 1F4B     		ldr	r3, .L140+68
 1633 0220 6422     		movs	r2, #100
 1634 0222 1A80     		strh	r2, [r3]	@ movhi
 434:main.c        ****                     if (s3) {
 1635              		.loc 1 434 0
 1636 0224 114B     		ldr	r3, .L140+20
 1637 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0228 002B     		cmp	r3, #0
 1639 022a 06D0     		beq	.L97
 435:main.c        ****                         turnFinishedFlag = 0;
 1640              		.loc 1 435 0
 1641 022c 184B     		ldr	r3, .L140+56
 1642 022e 0022     		movs	r2, #0
 1643 0230 1A70     		strb	r2, [r3]
 436:main.c        ****                         MoveToNextInstruction();   
 1644              		.loc 1 436 0
 1645 0232 FFF7FEFF 		bl	MoveToNextInstruction
 437:main.c        ****                         return Stop;  
 1646              		.loc 1 437 0
 1647 0236 0523     		movs	r3, #5
 1648 0238 2AE2     		b	.L81
 1649              	.L97:
 438:main.c        ****                     }
 439:main.c        ****                 }
 440:main.c        ****             }
 441:main.c        ****             
 442:main.c        ****             
 443:main.c        ****             if (currentDirection == Stop) {
 1650              		.loc 1 443 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 38


 1651 023a 0A4B     		ldr	r3, .L140+12
 1652 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1653 023e 052B     		cmp	r3, #5
 1654 0240 2ED1     		bne	.L102
 444:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 445:main.c        ****                 if (stopBuffer <= 25) {
 1655              		.loc 1 445 0
 1656 0242 094B     		ldr	r3, .L140+16
 1657 0244 1B68     		ldr	r3, [r3]
 1658 0246 192B     		cmp	r3, #25
 1659 0248 01D8     		bhi	.L103
 446:main.c        ****                     return Stop;   
 1660              		.loc 1 446 0
 1661 024a 0523     		movs	r3, #5
 1662 024c 20E2     		b	.L81
 1663              	.L103:
 447:main.c        ****                 }
 448:main.c        ****                 return ForwardCourseCorrection();
 1664              		.loc 1 448 0
 1665 024e FFF7FEFF 		bl	ForwardCourseCorrection
 1666 0252 0346     		mov	r3, r0
 1667 0254 1CE2     		b	.L81
 1668              	.L141:
 1669 0256 00BF     		.align	2
 1670              	.L140:
 1671 0258 00000000 		.word	currentInstruction
 1672 025c 00000000 		.word	yBlocksize
 1673 0260 00000000 		.word	xBlocksize
 1674 0264 00000000 		.word	currentDirection
 1675 0268 00000000 		.word	stopBuffer
 1676 026c 00000000 		.word	s3
 1677 0270 3B000000 		.word	leftStatusFlag
 1678 0274 00000000 		.word	s4
 1679 0278 3C000000 		.word	rightStatusFlag
 1680 027c 3F000000 		.word	currentIgnoreR
 1681 0280 57000000 		.word	forwardAfterTurnLIgnore
 1682 0284 3E000000 		.word	currentIgnoreL
 1683 0288 58000000 		.word	forwardAfterTurnRIgnore
 1684 028c 00000000 		.word	firstTurnIteration
 1685 0290 37000000 		.word	turnFinishedFlag
 1686 0294 00000000 		.word	s5
 1687 0298 00000000 		.word	s6
 1688 029c 00000000 		.word	forwardBuffer
 1689              	.L102:
 449:main.c        ****             }
 450:main.c        ****          
 451:main.c        ****             // if we are already turning left, then check if s5 && s6 are on black
 452:main.c        ****             if (currentDirection == TurnLeft) {
 1690              		.loc 1 452 0
 1691 02a0 9D4B     		ldr	r3, .L142
 1692 02a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1693 02a4 022B     		cmp	r3, #2
 1694 02a6 32D1     		bne	.L104
 453:main.c        ****                 // If turn started and we are still on black, continue turning
 454:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 455:main.c        ****                 if (turnStartedFlag) {
 1695              		.loc 1 455 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 39


 1696 02a8 9C4B     		ldr	r3, .L142+4
 1697 02aa 1B78     		ldrb	r3, [r3]
 1698 02ac DBB2     		uxtb	r3, r3
 1699 02ae 002B     		cmp	r3, #0
 1700 02b0 0ED0     		beq	.L105
 456:main.c        ****                     if (s3 && (s5 && s6)) {
 1701              		.loc 1 456 0
 1702 02b2 9B4B     		ldr	r3, .L142+8
 1703 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1704 02b6 002B     		cmp	r3, #0
 1705 02b8 0AD0     		beq	.L105
 1706              		.loc 1 456 0 is_stmt 0 discriminator 1
 1707 02ba 9A4B     		ldr	r3, .L142+12
 1708 02bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1709 02be 002B     		cmp	r3, #0
 1710 02c0 06D0     		beq	.L105
 1711              		.loc 1 456 0 discriminator 2
 1712 02c2 994B     		ldr	r3, .L142+16
 1713 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1714 02c6 002B     		cmp	r3, #0
 1715 02c8 02D0     		beq	.L105
 457:main.c        ****                         turnStartedFlag = 0;
 1716              		.loc 1 457 0 is_stmt 1
 1717 02ca 944B     		ldr	r3, .L142+4
 1718 02cc 0022     		movs	r2, #0
 1719 02ce 1A70     		strb	r2, [r3]
 1720              	.L105:
 458:main.c        ****                     }
 459:main.c        ****                 }
 460:main.c        ****                 if (!turnStartedFlag && !s3 && (!s5 || !s6)) {
 1721              		.loc 1 460 0
 1722 02d0 924B     		ldr	r3, .L142+4
 1723 02d2 1B78     		ldrb	r3, [r3]
 1724 02d4 DBB2     		uxtb	r3, r3
 1725 02d6 002B     		cmp	r3, #0
 1726 02d8 17D1     		bne	.L106
 1727              		.loc 1 460 0 is_stmt 0 discriminator 1
 1728 02da 914B     		ldr	r3, .L142+8
 1729 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1730 02de 002B     		cmp	r3, #0
 1731 02e0 13D1     		bne	.L106
 1732              		.loc 1 460 0 discriminator 2
 1733 02e2 904B     		ldr	r3, .L142+12
 1734 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1735 02e6 002B     		cmp	r3, #0
 1736 02e8 03D0     		beq	.L107
 1737              		.loc 1 460 0 discriminator 3
 1738 02ea 8F4B     		ldr	r3, .L142+16
 1739 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1740 02ee 002B     		cmp	r3, #0
 1741 02f0 0BD1     		bne	.L106
 1742              	.L107:
 461:main.c        ****                     turnFinishedFlag = 1;
 1743              		.loc 1 461 0 is_stmt 1
 1744 02f2 8E4B     		ldr	r3, .L142+20
 1745 02f4 0122     		movs	r2, #1
 1746 02f6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 40


 462:main.c        ****                     firstTurnIteration = 0;
 1747              		.loc 1 462 0
 1748 02f8 8D4B     		ldr	r3, .L142+24
 1749 02fa 0022     		movs	r2, #0
 1750 02fc 1A70     		strb	r2, [r3]
 463:main.c        ****                     totalDistance = 0;
 1751              		.loc 1 463 0
 1752 02fe 8D4B     		ldr	r3, .L142+28
 1753 0300 4FF00002 		mov	r2, #0
 1754 0304 1A60     		str	r2, [r3]	@ float
 464:main.c        ****                     return ForwardAfterTurn;
 1755              		.loc 1 464 0
 1756 0306 0823     		movs	r3, #8
 1757 0308 C2E1     		b	.L81
 1758              	.L106:
 465:main.c        ****                 }
 466:main.c        ****                 else
 467:main.c        ****                 {
 468:main.c        ****                     return TurnLeft;
 1759              		.loc 1 468 0
 1760 030a 0223     		movs	r3, #2
 1761 030c C0E1     		b	.L81
 1762              	.L104:
 469:main.c        ****                 }
 470:main.c        ****             }
 471:main.c        ****             
 472:main.c        ****             // If we are not already turning left then once s3 goes on BLACK, turn left
 473:main.c        ****             if (!s3) {
 1763              		.loc 1 473 0
 1764 030e 844B     		ldr	r3, .L142+8
 1765 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1766 0312 002B     		cmp	r3, #0
 1767 0314 04D1     		bne	.L108
 474:main.c        ****                 turnStartedFlag = 1;
 1768              		.loc 1 474 0
 1769 0316 814B     		ldr	r3, .L142+4
 1770 0318 0122     		movs	r2, #1
 1771 031a 1A70     		strb	r2, [r3]
 475:main.c        ****                 return TurnLeft;
 1772              		.loc 1 475 0
 1773 031c 0223     		movs	r3, #2
 1774 031e B7E1     		b	.L81
 1775              	.L108:
 476:main.c        ****             }
 477:main.c        ****             
 478:main.c        ****             // Otherwise, keep going forward
 479:main.c        ****             return ForwardCourseCorrection(); 
 1776              		.loc 1 479 0
 1777 0320 FFF7FEFF 		bl	ForwardCourseCorrection
 1778 0324 0346     		mov	r3, r0
 1779 0326 B3E1     		b	.L81
 1780              	.L75:
 480:main.c        ****             break;
 481:main.c        ****         case waitForRightTurn:
 482:main.c        ****             // continue moving forward until s4 goes on black
 483:main.c        ****             // if we are turning left already
 484:main.c        ****                 // wait until s5 || s6 are on black
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 41


 485:main.c        ****                 // return stop
 486:main.c        ****             if (!firstTurnIteration) {
 1781              		.loc 1 486 0
 1782 0328 814B     		ldr	r3, .L142+24
 1783 032a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1784 032c 002B     		cmp	r3, #0
 1785 032e 08D1     		bne	.L109
 487:main.c        ****                 
 488:main.c        ****                 if (!s4) {
 1786              		.loc 1 488 0
 1787 0330 814B     		ldr	r3, .L142+32
 1788 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 0334 002B     		cmp	r3, #0
 1790 0336 04D1     		bne	.L109
 489:main.c        ****                     firstTurnIteration = 1; 
 1791              		.loc 1 489 0
 1792 0338 7D4B     		ldr	r3, .L142+24
 1793 033a 0122     		movs	r2, #1
 1794 033c 1A70     		strb	r2, [r3]
 490:main.c        ****                     return Stop;
 1795              		.loc 1 490 0
 1796 033e 0523     		movs	r3, #5
 1797 0340 A6E1     		b	.L81
 1798              	.L109:
 491:main.c        ****                 }
 492:main.c        ****                 if (s4) {
 493:main.c        ****                     //return Backward;    
 494:main.c        ****                 }
 495:main.c        ****             }
 496:main.c        **** 
 497:main.c        ****             if (turnFinishedFlag) {
 1799              		.loc 1 497 0
 1800 0342 7A4B     		ldr	r3, .L142+20
 1801 0344 1B78     		ldrb	r3, [r3]
 1802 0346 DBB2     		uxtb	r3, r3
 1803 0348 002B     		cmp	r3, #0
 1804 034a 34D0     		beq	.L111
 498:main.c        ****                 if (!s4 && !s5 && !s6) {
 1805              		.loc 1 498 0
 1806 034c 7A4B     		ldr	r3, .L142+32
 1807 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 0350 002B     		cmp	r3, #0
 1809 0352 0BD1     		bne	.L112
 1810              		.loc 1 498 0 is_stmt 0 discriminator 1
 1811 0354 734B     		ldr	r3, .L142+12
 1812 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 0358 002B     		cmp	r3, #0
 1814 035a 07D1     		bne	.L112
 1815              		.loc 1 498 0 discriminator 2
 1816 035c 724B     		ldr	r3, .L142+16
 1817 035e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1818 0360 002B     		cmp	r3, #0
 1819 0362 03D1     		bne	.L112
 499:main.c        ****                     // we are correctly on the line so go forward until S4 on white
 500:main.c        ****                     return ForwardCourseCorrection();
 1820              		.loc 1 500 0 is_stmt 1
 1821 0364 FFF7FEFF 		bl	ForwardCourseCorrection
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 42


 1822 0368 0346     		mov	r3, r0
 1823 036a 91E1     		b	.L81
 1824              	.L112:
 501:main.c        ****                 }
 502:main.c        ****                 if (s5 || s6) {
 1825              		.loc 1 502 0
 1826 036c 6D4B     		ldr	r3, .L142+12
 1827 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 0370 002B     		cmp	r3, #0
 1829 0372 03D1     		bne	.L113
 1830              		.loc 1 502 0 is_stmt 0 discriminator 1
 1831 0374 6C4B     		ldr	r3, .L142+16
 1832 0376 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1833 0378 002B     		cmp	r3, #0
 1834 037a 03D0     		beq	.L114
 1835              	.L113:
 503:main.c        ****                     return SpinCourseCorrection();
 1836              		.loc 1 503 0 is_stmt 1
 1837 037c FFF7FEFF 		bl	SpinCourseCorrection
 1838 0380 0346     		mov	r3, r0
 1839 0382 85E1     		b	.L81
 1840              	.L114:
 504:main.c        ****                 }
 505:main.c        ****                 if (forwardBuffer <= 9) {
 1841              		.loc 1 505 0
 1842 0384 6D4B     		ldr	r3, .L142+36
 1843 0386 1B88     		ldrh	r3, [r3]
 1844 0388 092B     		cmp	r3, #9
 1845 038a 03D8     		bhi	.L115
 506:main.c        ****                     return ForwardCourseCorrection();    
 1846              		.loc 1 506 0
 1847 038c FFF7FEFF 		bl	ForwardCourseCorrection
 1848 0390 0346     		mov	r3, r0
 1849 0392 7DE1     		b	.L81
 1850              	.L115:
 507:main.c        **** 
 508:main.c        ****                 } else {
 509:main.c        ****                     forwardBuffer = 100;
 1851              		.loc 1 509 0
 1852 0394 694B     		ldr	r3, .L142+36
 1853 0396 6422     		movs	r2, #100
 1854 0398 1A80     		strh	r2, [r3]	@ movhi
 510:main.c        ****                     if (s4) {
 1855              		.loc 1 510 0
 1856 039a 674B     		ldr	r3, .L142+32
 1857 039c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 039e 002B     		cmp	r3, #0
 1859 03a0 09D0     		beq	.L111
 511:main.c        ****                         firstTurnIteration = 0;
 1860              		.loc 1 511 0
 1861 03a2 634B     		ldr	r3, .L142+24
 1862 03a4 0022     		movs	r2, #0
 1863 03a6 1A70     		strb	r2, [r3]
 512:main.c        ****                         turnFinishedFlag = 0;
 1864              		.loc 1 512 0
 1865 03a8 604B     		ldr	r3, .L142+20
 1866 03aa 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 43


 1867 03ac 1A70     		strb	r2, [r3]
 513:main.c        ****                         MoveToNextInstruction();   
 1868              		.loc 1 513 0
 1869 03ae FFF7FEFF 		bl	MoveToNextInstruction
 514:main.c        ****                         return Stop;  
 1870              		.loc 1 514 0
 1871 03b2 0523     		movs	r3, #5
 1872 03b4 6CE1     		b	.L81
 1873              	.L111:
 515:main.c        ****                     }
 516:main.c        ****                 }
 517:main.c        ****             }
 518:main.c        ****             
 519:main.c        ****             if (currentDirection == Stop) {
 1874              		.loc 1 519 0
 1875 03b6 584B     		ldr	r3, .L142
 1876 03b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1877 03ba 052B     		cmp	r3, #5
 1878 03bc 09D1     		bne	.L116
 520:main.c        ****                 // We should be facing a different direction now so we move to the next instruction
 521:main.c        ****                 if (stopBuffer <= 25) {
 1879              		.loc 1 521 0
 1880 03be 604B     		ldr	r3, .L142+40
 1881 03c0 1B68     		ldr	r3, [r3]
 1882 03c2 192B     		cmp	r3, #25
 1883 03c4 01D8     		bhi	.L117
 522:main.c        ****                     return Stop;   
 1884              		.loc 1 522 0
 1885 03c6 0523     		movs	r3, #5
 1886 03c8 62E1     		b	.L81
 1887              	.L117:
 523:main.c        ****                 }
 524:main.c        **** 
 525:main.c        ****                 return ForwardCourseCorrection();
 1888              		.loc 1 525 0
 1889 03ca FFF7FEFF 		bl	ForwardCourseCorrection
 1890 03ce 0346     		mov	r3, r0
 1891 03d0 5EE1     		b	.L81
 1892              	.L116:
 526:main.c        ****             }
 527:main.c        ****                       
 528:main.c        ****             // if we are already turning right, then check if s5 && s6 are on black
 529:main.c        ****             if (currentDirection == TurnRight) {
 1893              		.loc 1 529 0
 1894 03d2 514B     		ldr	r3, .L142
 1895 03d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1896 03d6 012B     		cmp	r3, #1
 1897 03d8 2FD1     		bne	.L118
 530:main.c        ****                 // If turn started and we are still on black, continue turning
 531:main.c        ****                 // Otherwise, if all sensors are on white, turnStartedFlag = 0;
 532:main.c        ****                 if (turnStartedFlag) {
 1898              		.loc 1 532 0
 1899 03da 504B     		ldr	r3, .L142+4
 1900 03dc 1B78     		ldrb	r3, [r3]
 1901 03de DBB2     		uxtb	r3, r3
 1902 03e0 002B     		cmp	r3, #0
 1903 03e2 0ED0     		beq	.L119
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 44


 533:main.c        ****                     if (s4 && (s5 && s6)) {
 1904              		.loc 1 533 0
 1905 03e4 544B     		ldr	r3, .L142+32
 1906 03e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1907 03e8 002B     		cmp	r3, #0
 1908 03ea 0AD0     		beq	.L119
 1909              		.loc 1 533 0 is_stmt 0 discriminator 1
 1910 03ec 4D4B     		ldr	r3, .L142+12
 1911 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1912 03f0 002B     		cmp	r3, #0
 1913 03f2 06D0     		beq	.L119
 1914              		.loc 1 533 0 discriminator 2
 1915 03f4 4C4B     		ldr	r3, .L142+16
 1916 03f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 03f8 002B     		cmp	r3, #0
 1918 03fa 02D0     		beq	.L119
 534:main.c        ****                         turnStartedFlag = 0;
 1919              		.loc 1 534 0 is_stmt 1
 1920 03fc 474B     		ldr	r3, .L142+4
 1921 03fe 0022     		movs	r2, #0
 1922 0400 1A70     		strb	r2, [r3]
 1923              	.L119:
 535:main.c        ****                     }
 536:main.c        ****                 }
 537:main.c        ****                 if (!turnStartedFlag && !s4 && (!s5 || !s6)) {
 1924              		.loc 1 537 0
 1925 0402 464B     		ldr	r3, .L142+4
 1926 0404 1B78     		ldrb	r3, [r3]
 1927 0406 DBB2     		uxtb	r3, r3
 1928 0408 002B     		cmp	r3, #0
 1929 040a 14D1     		bne	.L120
 1930              		.loc 1 537 0 is_stmt 0 discriminator 1
 1931 040c 4A4B     		ldr	r3, .L142+32
 1932 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 0410 002B     		cmp	r3, #0
 1934 0412 10D1     		bne	.L120
 1935              		.loc 1 537 0 discriminator 2
 1936 0414 434B     		ldr	r3, .L142+12
 1937 0416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1938 0418 002B     		cmp	r3, #0
 1939 041a 03D0     		beq	.L121
 1940              		.loc 1 537 0 discriminator 3
 1941 041c 424B     		ldr	r3, .L142+16
 1942 041e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1943 0420 002B     		cmp	r3, #0
 1944 0422 08D1     		bne	.L120
 1945              	.L121:
 538:main.c        ****                     turnFinishedFlag = 1;
 1946              		.loc 1 538 0 is_stmt 1
 1947 0424 414B     		ldr	r3, .L142+20
 1948 0426 0122     		movs	r2, #1
 1949 0428 1A70     		strb	r2, [r3]
 539:main.c        ****                     totalDistance = 0;
 1950              		.loc 1 539 0
 1951 042a 424B     		ldr	r3, .L142+28
 1952 042c 4FF00002 		mov	r2, #0
 1953 0430 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 45


 540:main.c        ****                     return ForwardAfterTurn;
 1954              		.loc 1 540 0
 1955 0432 0823     		movs	r3, #8
 1956 0434 2CE1     		b	.L81
 1957              	.L120:
 541:main.c        ****                 }
 542:main.c        ****                 else
 543:main.c        ****                 {
 544:main.c        ****                     return TurnRight;
 1958              		.loc 1 544 0
 1959 0436 0123     		movs	r3, #1
 1960 0438 2AE1     		b	.L81
 1961              	.L118:
 545:main.c        ****                 }
 546:main.c        ****             }
 547:main.c        ****             
 548:main.c        ****             // If we are not already turning right then once s4 goes on BLACK, turn left
 549:main.c        ****             if (!s4) {
 1962              		.loc 1 549 0
 1963 043a 3F4B     		ldr	r3, .L142+32
 1964 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1965 043e 002B     		cmp	r3, #0
 1966 0440 04D1     		bne	.L122
 550:main.c        ****                 turnStartedFlag = 1;
 1967              		.loc 1 550 0
 1968 0442 364B     		ldr	r3, .L142+4
 1969 0444 0122     		movs	r2, #1
 1970 0446 1A70     		strb	r2, [r3]
 551:main.c        ****                 return TurnRight;
 1971              		.loc 1 551 0
 1972 0448 0123     		movs	r3, #1
 1973 044a 21E1     		b	.L81
 1974              	.L122:
 552:main.c        ****             }
 553:main.c        ****             
 554:main.c        ****             // Otherwise, keep going forward
 555:main.c        ****             return ForwardCourseCorrection(); 
 1975              		.loc 1 555 0
 1976 044c FFF7FEFF 		bl	ForwardCourseCorrection
 1977 0450 0346     		mov	r3, r0
 1978 0452 1DE1     		b	.L81
 1979              	.L77:
 556:main.c        ****             break;
 557:main.c        ****         case ForwardUntilTarget:       
 558:main.c        ****             /*
 559:main.c        ****             TEST THIS- FIX DEAD END OVERSHOOT
 560:main.c        ****             if (instructionList[instructionIndex + 1].direction == uTurn && currentInstructionDirec
 561:main.c        ****                 if (s5 && s6) {
 562:main.c        ****                     MoveToNextInstruction(); // case to start uTurns when needed. prevents uTurn ov
 563:main.c        ****                     return Stop;
 564:main.c        ****                 }
 565:main.c        ****             }
 566:main.c        ****             */
 567:main.c        ****             // Reset distance on first iteration of this instruction
 568:main.c        ****             if (!forwardUntilTargetStartedFlag) {
 1980              		.loc 1 568 0
 1981 0454 3B4B     		ldr	r3, .L142+44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 46


 1982 0456 1B78     		ldrb	r3, [r3]
 1983 0458 DBB2     		uxtb	r3, r3
 1984 045a 002B     		cmp	r3, #0
 1985 045c 17D1     		bne	.L123
 1986              	.LBB3:
 569:main.c        ****                 forwardUntilTargetStartedFlag = 1;
 1987              		.loc 1 569 0
 1988 045e 394B     		ldr	r3, .L142+44
 1989 0460 0122     		movs	r2, #1
 1990 0462 1A70     		strb	r2, [r3]
 570:main.c        ****                 //uTurnIgnoreL = 0;
 571:main.c        ****                 //uTurnIgnoreR = 0;
 572:main.c        ****                 forwardAfterTurnLIgnore = 0;
 1991              		.loc 1 572 0
 1992 0464 384B     		ldr	r3, .L142+48
 1993 0466 0022     		movs	r2, #0
 1994 0468 1A70     		strb	r2, [r3]
 573:main.c        ****                 forwardAfterTurnRIgnore = 0;
 1995              		.loc 1 573 0
 1996 046a 384B     		ldr	r3, .L142+52
 1997 046c 0022     		movs	r2, #0
 1998 046e 1A70     		strb	r2, [r3]
 574:main.c        ****                 //blockSizeTotal = CalculateDistanceToTravel(blocksize);
 575:main.c        ****                 int blocksToTarget = currentInstruction.distanceToTarget;
 1999              		.loc 1 575 0
 2000 0470 374B     		ldr	r3, .L142+56
 2001 0472 DB68     		ldr	r3, [r3, #12]
 2002 0474 7B60     		str	r3, [r7, #4]
 576:main.c        ****                 blockSizeTotal = blocksize * blocksToTarget;
 2003              		.loc 1 576 0
 2004 0476 7868     		ldr	r0, [r7, #4]
 2005 0478 FFF7FEFF 		bl	__aeabi_i2f
 2006 047c 0346     		mov	r3, r0
 2007 047e F968     		ldr	r1, [r7, #12]	@ float
 2008 0480 1846     		mov	r0, r3
 2009 0482 FFF7FEFF 		bl	__aeabi_fmul
 2010 0486 0346     		mov	r3, r0
 2011 0488 1A46     		mov	r2, r3
 2012 048a 324B     		ldr	r3, .L142+60
 2013 048c 1A60     		str	r2, [r3]	@ float
 2014              	.L123:
 2015              	.LBE3:
 577:main.c        ****             }
 578:main.c        ****             
 579:main.c        ****             if (s3) {
 2016              		.loc 1 579 0
 2017 048e 244B     		ldr	r3, .L142+8
 2018 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2019 0492 002B     		cmp	r3, #0
 2020 0494 02D0     		beq	.L124
 580:main.c        ****                 leftStatusFlag = 1;
 2021              		.loc 1 580 0
 2022 0496 304B     		ldr	r3, .L142+64
 2023 0498 0122     		movs	r2, #1
 2024 049a 1A70     		strb	r2, [r3]
 2025              	.L124:
 581:main.c        ****             }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 47


 582:main.c        ****             
 583:main.c        ****             if (s4) {
 2026              		.loc 1 583 0
 2027 049c 264B     		ldr	r3, .L142+32
 2028 049e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 04a0 002B     		cmp	r3, #0
 2030 04a2 02D0     		beq	.L125
 584:main.c        ****                 rightStatusFlag = 1;
 2031              		.loc 1 584 0
 2032 04a4 2D4B     		ldr	r3, .L142+68
 2033 04a6 0122     		movs	r2, #1
 2034 04a8 1A70     		strb	r2, [r3]
 2035              	.L125:
 585:main.c        ****             }
 586:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 587:main.c        ****             // LEFT WING CHECK =-=-=-=-=-=-=-=-=-=-=
 588:main.c        ****             if (leftStatusFlag) {
 2036              		.loc 1 588 0
 2037 04aa 2B4B     		ldr	r3, .L142+64
 2038 04ac 1B78     		ldrb	r3, [r3]
 2039 04ae DBB2     		uxtb	r3, r3
 2040 04b0 002B     		cmp	r3, #0
 2041 04b2 15D0     		beq	.L126
 589:main.c        ****                 if (currentInstruction.ignoreL == 0 && !s3) {
 2042              		.loc 1 589 0
 2043 04b4 264B     		ldr	r3, .L142+56
 2044 04b6 5B68     		ldr	r3, [r3, #4]
 2045 04b8 002B     		cmp	r3, #0
 2046 04ba 11D1     		bne	.L126
 2047              		.loc 1 589 0 is_stmt 0 discriminator 1
 2048 04bc 184B     		ldr	r3, .L142+8
 2049 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 04c0 002B     		cmp	r3, #0
 2051 04c2 0DD1     		bne	.L126
 590:main.c        ****                     leftStatusFlag = 0;    
 2052              		.loc 1 590 0 is_stmt 1
 2053 04c4 244B     		ldr	r3, .L142+64
 2054 04c6 0022     		movs	r2, #0
 2055 04c8 1A70     		strb	r2, [r3]
 591:main.c        ****                     forwardAfterTurnRIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING OPP
 2056              		.loc 1 591 0
 2057 04ca 204B     		ldr	r3, .L142+52
 2058 04cc 1B78     		ldrb	r3, [r3]
 2059 04ce DBB2     		uxtb	r3, r3
 2060 04d0 0133     		adds	r3, r3, #1
 2061 04d2 DAB2     		uxtb	r2, r3
 2062 04d4 1D4B     		ldr	r3, .L142+52
 2063 04d6 1A70     		strb	r2, [r3]
 592:main.c        ****                     return ForwardCourseCorrection();
 2064              		.loc 1 592 0
 2065 04d8 FFF7FEFF 		bl	ForwardCourseCorrection
 2066 04dc 0346     		mov	r3, r0
 2067 04de D7E0     		b	.L81
 2068              	.L126:
 593:main.c        ****                 }
 594:main.c        ****             }
 595:main.c        ****             // RIGHT WING CHECK =-=-=-=-=-=-=-=-=-=-=
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 48


 596:main.c        ****             if (rightStatusFlag) {
 2069              		.loc 1 596 0
 2070 04e0 1E4B     		ldr	r3, .L142+68
 2071 04e2 1B78     		ldrb	r3, [r3]
 2072 04e4 DBB2     		uxtb	r3, r3
 2073 04e6 002B     		cmp	r3, #0
 2074 04e8 3AD0     		beq	.L127
 597:main.c        ****                 if (currentInstruction.ignoreR == 0 && !s4) {
 2075              		.loc 1 597 0
 2076 04ea 194B     		ldr	r3, .L142+56
 2077 04ec 9B68     		ldr	r3, [r3, #8]
 2078 04ee 002B     		cmp	r3, #0
 2079 04f0 36D1     		bne	.L127
 2080              		.loc 1 597 0 is_stmt 0 discriminator 1
 2081 04f2 114B     		ldr	r3, .L142+32
 2082 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2083 04f6 002B     		cmp	r3, #0
 2084 04f8 32D1     		bne	.L127
 598:main.c        ****                     rightStatusFlag = 0;
 2085              		.loc 1 598 0 is_stmt 1
 2086 04fa 184B     		ldr	r3, .L142+68
 2087 04fc 0022     		movs	r2, #0
 2088 04fe 1A70     		strb	r2, [r3]
 599:main.c        ****                     forwardAfterTurnLIgnore++; // TRYING TO FIX UTURN EDGE CASE BY INCREMENTING OPP
 2089              		.loc 1 599 0
 2090 0500 114B     		ldr	r3, .L142+48
 2091 0502 1B78     		ldrb	r3, [r3]
 2092 0504 DBB2     		uxtb	r3, r3
 2093 0506 0133     		adds	r3, r3, #1
 2094 0508 DAB2     		uxtb	r2, r3
 2095 050a 0F4B     		ldr	r3, .L142+48
 2096 050c 1A70     		strb	r2, [r3]
 600:main.c        ****                     return ForwardCourseCorrection(); // CHEECK IF CONDITION IS ACTUALLY BEING FULF
 2097              		.loc 1 600 0
 2098 050e FFF7FEFF 		bl	ForwardCourseCorrection
 2099 0512 0346     		mov	r3, r0
 2100 0514 BCE0     		b	.L81
 2101              	.L143:
 2102 0516 00BF     		.align	2
 2103              	.L142:
 2104 0518 00000000 		.word	currentDirection
 2105 051c 36000000 		.word	turnStartedFlag
 2106 0520 00000000 		.word	s3
 2107 0524 00000000 		.word	s5
 2108 0528 00000000 		.word	s6
 2109 052c 37000000 		.word	turnFinishedFlag
 2110 0530 00000000 		.word	firstTurnIteration
 2111 0534 00000000 		.word	totalDistance
 2112 0538 00000000 		.word	s4
 2113 053c 00000000 		.word	forwardBuffer
 2114 0540 00000000 		.word	stopBuffer
 2115 0544 38000000 		.word	forwardUntilTargetStartedFlag
 2116 0548 57000000 		.word	forwardAfterTurnLIgnore
 2117 054c 58000000 		.word	forwardAfterTurnRIgnore
 2118 0550 00000000 		.word	currentInstruction
 2119 0554 00000000 		.word	blockSizeTotal
 2120 0558 3B000000 		.word	leftStatusFlag
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 49


 2121 055c 3C000000 		.word	rightStatusFlag
 2122              	.L127:
 601:main.c        ****                 }
 602:main.c        ****             }
 603:main.c        ****             // FLAG CHECKS FOR UTURN STATE
 604:main.c        ****             
 605:main.c        ****             // If totalDistance >= blockSizeTotal then we should be at target
 606:main.c        ****             if (totalDistance >= blockSizeTotal && (currentInstruction.ignoreL > 0 && currentInstru
 2123              		.loc 1 606 0
 2124 0560 4D4B     		ldr	r3, .L144
 2125 0562 1A68     		ldr	r2, [r3]	@ float
 2126 0564 4D4B     		ldr	r3, .L144+4
 2127 0566 1B68     		ldr	r3, [r3]	@ float
 2128 0568 1946     		mov	r1, r3
 2129 056a 1046     		mov	r0, r2
 2130 056c FFF7FEFF 		bl	__aeabi_fcmpge
 2131 0570 0346     		mov	r3, r0
 2132 0572 002B     		cmp	r3, #0
 2133 0574 0BD0     		beq	.L128
 2134              		.loc 1 606 0 is_stmt 0 discriminator 1
 2135 0576 4A4B     		ldr	r3, .L144+8
 2136 0578 5B68     		ldr	r3, [r3, #4]
 2137 057a 002B     		cmp	r3, #0
 2138 057c 07DD     		ble	.L128
 2139              		.loc 1 606 0 discriminator 2
 2140 057e 484B     		ldr	r3, .L144+8
 2141 0580 9B68     		ldr	r3, [r3, #8]
 2142 0582 002B     		cmp	r3, #0
 2143 0584 03DD     		ble	.L128
 607:main.c        ****                 // Get next instruction
 608:main.c        ****                 MoveToNextInstruction();
 2144              		.loc 1 608 0 is_stmt 1
 2145 0586 FFF7FEFF 		bl	MoveToNextInstruction
 609:main.c        ****                 return Stop;
 2146              		.loc 1 609 0
 2147 058a 0523     		movs	r3, #5
 2148 058c 80E0     		b	.L81
 2149              	.L128:
 610:main.c        ****             }
 611:main.c        ****             else if (totalDistance >= blockSizeTotal || (currentInstruction.ignoreL == 0 || current
 2150              		.loc 1 611 0
 2151 058e 424B     		ldr	r3, .L144
 2152 0590 1A68     		ldr	r2, [r3]	@ float
 2153 0592 424B     		ldr	r3, .L144+4
 2154 0594 1B68     		ldr	r3, [r3]	@ float
 2155 0596 1946     		mov	r1, r3
 2156 0598 1046     		mov	r0, r2
 2157 059a FFF7FEFF 		bl	__aeabi_fcmpge
 2158 059e 0346     		mov	r3, r0
 2159 05a0 002B     		cmp	r3, #0
 2160 05a2 07D1     		bne	.L130
 2161              		.loc 1 611 0 is_stmt 0 discriminator 1
 2162 05a4 3E4B     		ldr	r3, .L144+8
 2163 05a6 5B68     		ldr	r3, [r3, #4]
 2164 05a8 002B     		cmp	r3, #0
 2165 05aa 03D0     		beq	.L130
 2166              		.loc 1 611 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 50


 2167 05ac 3C4B     		ldr	r3, .L144+8
 2168 05ae 9B68     		ldr	r3, [r3, #8]
 2169 05b0 002B     		cmp	r3, #0
 2170 05b2 03D1     		bne	.L131
 2171              	.L130:
 612:main.c        ****                 MoveToNextInstruction();
 2172              		.loc 1 612 0 is_stmt 1
 2173 05b4 FFF7FEFF 		bl	MoveToNextInstruction
 613:main.c        ****                 return Stop;
 2174              		.loc 1 613 0
 2175 05b8 0523     		movs	r3, #5
 2176 05ba 69E0     		b	.L81
 2177              	.L131:
 614:main.c        ****             }
 615:main.c        ****             
 616:main.c        ****             return ForwardCourseCorrection();
 2178              		.loc 1 616 0
 2179 05bc FFF7FEFF 		bl	ForwardCourseCorrection
 2180 05c0 0346     		mov	r3, r0
 2181 05c2 65E0     		b	.L81
 2182              	.L78:
 617:main.c        ****             break;
 618:main.c        **** 
 619:main.c        ****         case StopAtTarget: // just need to move to next instruction
 620:main.c        ****             totalDistance = 0; // reset distance 
 2183              		.loc 1 620 0
 2184 05c4 344B     		ldr	r3, .L144
 2185 05c6 4FF00002 		mov	r2, #0
 2186 05ca 1A60     		str	r2, [r3]	@ float
 621:main.c        ****             forwardUntilTargetStartedFlag = 0; // reset flag
 2187              		.loc 1 621 0
 2188 05cc 354B     		ldr	r3, .L144+12
 2189 05ce 0022     		movs	r2, #0
 2190 05d0 1A70     		strb	r2, [r3]
 622:main.c        ****             blockSizeTotal = 0; // reset block size
 2191              		.loc 1 622 0
 2192 05d2 324B     		ldr	r3, .L144+4
 2193 05d4 4FF00002 		mov	r2, #0
 2194 05d8 1A60     		str	r2, [r3]	@ float
 623:main.c        ****             
 624:main.c        ****             if (currentDirection == Stop) {
 2195              		.loc 1 624 0
 2196 05da 334B     		ldr	r3, .L144+16
 2197 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2198 05de 052B     		cmp	r3, #5
 2199 05e0 08D1     		bne	.L132
 625:main.c        ****                 if (stopBuffer <= 100) {
 2200              		.loc 1 625 0
 2201 05e2 324B     		ldr	r3, .L144+20
 2202 05e4 1B68     		ldr	r3, [r3]
 2203 05e6 642B     		cmp	r3, #100
 2204 05e8 01D8     		bhi	.L133
 626:main.c        ****                     return Stop;    
 2205              		.loc 1 626 0
 2206 05ea 0523     		movs	r3, #5
 2207 05ec 50E0     		b	.L81
 2208              	.L133:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 51


 627:main.c        ****                 } else {
 628:main.c        ****                     stopBuffer = 250;
 2209              		.loc 1 628 0
 2210 05ee 2F4B     		ldr	r3, .L144+20
 2211 05f0 FA22     		movs	r2, #250
 2212 05f2 1A60     		str	r2, [r3]
 2213              	.L132:
 629:main.c        ****                 }
 630:main.c        ****             }
 631:main.c        ****     
 632:main.c        ****             MoveToNextInstruction(); // simply move to next instruction
 2214              		.loc 1 632 0
 2215 05f4 FFF7FEFF 		bl	MoveToNextInstruction
 633:main.c        ****             return Stop;
 2216              		.loc 1 633 0
 2217 05f8 0523     		movs	r3, #5
 2218 05fa 49E0     		b	.L81
 2219              	.L76:
 634:main.c        ****             break;
 635:main.c        **** 
 636:main.c        ****         case uTurn:
 637:main.c        ****             if (currentDirection == Stop) {
 2220              		.loc 1 637 0
 2221 05fc 2A4B     		ldr	r3, .L144+16
 2222 05fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 0600 052B     		cmp	r3, #5
 2224 0602 08D1     		bne	.L134
 638:main.c        ****                 if (stopBuffer <= 50) {
 2225              		.loc 1 638 0
 2226 0604 294B     		ldr	r3, .L144+20
 2227 0606 1B68     		ldr	r3, [r3]
 2228 0608 322B     		cmp	r3, #50
 2229 060a 01D8     		bhi	.L135
 639:main.c        ****                     return Stop;    
 2230              		.loc 1 639 0
 2231 060c 0523     		movs	r3, #5
 2232 060e 3FE0     		b	.L81
 2233              	.L135:
 640:main.c        ****                 } else {
 641:main.c        ****                     stopBuffer = 100;    
 2234              		.loc 1 641 0
 2235 0610 264B     		ldr	r3, .L144+20
 2236 0612 6422     		movs	r2, #100
 2237 0614 1A60     		str	r2, [r3]
 2238              	.L134:
 642:main.c        ****                 }
 643:main.c        ****             }
 644:main.c        ****             
 645:main.c        ****             if (!uTurnStartedFlag) {
 2239              		.loc 1 645 0
 2240 0616 264B     		ldr	r3, .L144+24
 2241 0618 1B78     		ldrb	r3, [r3]
 2242 061a DBB2     		uxtb	r3, r3
 2243 061c 002B     		cmp	r3, #0
 2244 061e 07D1     		bne	.L136
 646:main.c        ****                 uTurnStartedFlag = 1;
 2245              		.loc 1 646 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 52


 2246 0620 234B     		ldr	r3, .L144+24
 2247 0622 0122     		movs	r2, #1
 2248 0624 1A70     		strb	r2, [r3]
 647:main.c        ****                 spinCourseCorrectionStarted = 0;
 2249              		.loc 1 647 0
 2250 0626 234B     		ldr	r3, .L144+28
 2251 0628 0022     		movs	r2, #0
 2252 062a 1A70     		strb	r2, [r3]
 648:main.c        ****                 return Spin180;
 2253              		.loc 1 648 0
 2254 062c 0A23     		movs	r3, #10
 2255 062e 2FE0     		b	.L81
 2256              	.L136:
 649:main.c        ****             } 
 650:main.c        ****             
 651:main.c        ****             if (uTurnFinishedFlag) {
 2257              		.loc 1 651 0
 2258 0630 214B     		ldr	r3, .L144+32
 2259 0632 1B78     		ldrb	r3, [r3]
 2260 0634 DBB2     		uxtb	r3, r3
 2261 0636 002B     		cmp	r3, #0
 2262 0638 09D0     		beq	.L137
 652:main.c        ****                 // MOVE TO NEXT INSTRUCTION
 653:main.c        ****                 uTurnFinishedFlag = 0;
 2263              		.loc 1 653 0
 2264 063a 1F4B     		ldr	r3, .L144+32
 2265 063c 0022     		movs	r2, #0
 2266 063e 1A70     		strb	r2, [r3]
 654:main.c        ****                 uTurnStartedFlag = 0;
 2267              		.loc 1 654 0
 2268 0640 1B4B     		ldr	r3, .L144+24
 2269 0642 0022     		movs	r2, #0
 2270 0644 1A70     		strb	r2, [r3]
 655:main.c        ****                 MoveToNextInstruction();
 2271              		.loc 1 655 0
 2272 0646 FFF7FEFF 		bl	MoveToNextInstruction
 656:main.c        ****                 return Stop;    
 2273              		.loc 1 656 0
 2274 064a 0523     		movs	r3, #5
 2275 064c 20E0     		b	.L81
 2276              	.L137:
 657:main.c        ****             }
 658:main.c        ****             
 659:main.c        ****             // Repeat SpinCourseCorrection until both or one on black
 660:main.c        ****             if (uTurnStartedFlag) {
 2277              		.loc 1 660 0
 2278 064e 184B     		ldr	r3, .L144+24
 2279 0650 1B78     		ldrb	r3, [r3]
 2280 0652 DBB2     		uxtb	r3, r3
 2281 0654 002B     		cmp	r3, #0
 2282 0656 16D0     		beq	.L138
 661:main.c        ****                 if (!s5 && !s6) {
 2283              		.loc 1 661 0
 2284 0658 184B     		ldr	r3, .L144+36
 2285 065a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 065c 002B     		cmp	r3, #0
 2287 065e 12D1     		bne	.L138
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 53


 2288              		.loc 1 661 0 is_stmt 0 discriminator 1
 2289 0660 174B     		ldr	r3, .L144+40
 2290 0662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2291 0664 002B     		cmp	r3, #0
 2292 0666 0ED1     		bne	.L138
 662:main.c        ****                     totalLineCount = 0;
 2293              		.loc 1 662 0 is_stmt 1
 2294 0668 164B     		ldr	r3, .L144+44
 2295 066a 0022     		movs	r2, #0
 2296 066c 1A70     		strb	r2, [r3]
 663:main.c        ****                     lineCount = 0;
 2297              		.loc 1 663 0
 2298 066e 164B     		ldr	r3, .L144+48
 2299 0670 0022     		movs	r2, #0
 2300 0672 1A70     		strb	r2, [r3]
 664:main.c        ****                     tooEarlyFlag = 0;
 2301              		.loc 1 664 0
 2302 0674 154B     		ldr	r3, .L144+52
 2303 0676 0022     		movs	r2, #0
 2304 0678 1A70     		strb	r2, [r3]
 665:main.c        ****                     tooLateFlag = 0;
 2305              		.loc 1 665 0
 2306 067a 154B     		ldr	r3, .L144+56
 2307 067c 0022     		movs	r2, #0
 2308 067e 1A70     		strb	r2, [r3]
 666:main.c        ****                     uTurnFinishedFlag = 1;    
 2309              		.loc 1 666 0
 2310 0680 0D4B     		ldr	r3, .L144+32
 2311 0682 0122     		movs	r2, #1
 2312 0684 1A70     		strb	r2, [r3]
 2313              	.L138:
 667:main.c        ****                 }    
 668:main.c        ****             }
 669:main.c        ****             
 670:main.c        ****             return SpinCourseCorrection();
 2314              		.loc 1 670 0
 2315 0686 FFF7FEFF 		bl	SpinCourseCorrection
 2316 068a 0346     		mov	r3, r0
 2317 068c 00E0     		b	.L81
 2318              	.L71:
 671:main.c        ****             break;
 672:main.c        ****         default:
 673:main.c        ****             return Stop;
 2319              		.loc 1 673 0
 2320 068e 0523     		movs	r3, #5
 2321              	.L81:
 674:main.c        ****             break;
 675:main.c        ****     }
 676:main.c        ****     return Stop;
 677:main.c        **** }
 2322              		.loc 1 677 0
 2323 0690 1846     		mov	r0, r3
 2324 0692 1037     		adds	r7, r7, #16
 2325              		.cfi_def_cfa_offset 8
 2326 0694 BD46     		mov	sp, r7
 2327              		.cfi_def_cfa_register 13
 2328              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 54


 2329 0696 80BD     		pop	{r7, pc}
 2330              	.L145:
 2331              		.align	2
 2332              	.L144:
 2333 0698 00000000 		.word	totalDistance
 2334 069c 00000000 		.word	blockSizeTotal
 2335 06a0 00000000 		.word	currentInstruction
 2336 06a4 38000000 		.word	forwardUntilTargetStartedFlag
 2337 06a8 00000000 		.word	currentDirection
 2338 06ac 00000000 		.word	stopBuffer
 2339 06b0 39000000 		.word	uTurnStartedFlag
 2340 06b4 3D000000 		.word	spinCourseCorrectionStarted
 2341 06b8 3A000000 		.word	uTurnFinishedFlag
 2342 06bc 00000000 		.word	s5
 2343 06c0 00000000 		.word	s6
 2344 06c4 40000000 		.word	totalLineCount
 2345 06c8 41000000 		.word	lineCount
 2346 06cc 43000000 		.word	tooEarlyFlag
 2347 06d0 44000000 		.word	tooLateFlag
 2348              		.cfi_endproc
 2349              	.LFE76:
 2350              		.size	GetMovementAccordingToInstruction, .-GetMovementAccordingToInstruction
 2351              		.section	.text.MoveToNextInstruction,"ax",%progbits
 2352              		.align	2
 2353              		.global	MoveToNextInstruction
 2354              		.thumb
 2355              		.thumb_func
 2356              		.type	MoveToNextInstruction, %function
 2357              	MoveToNextInstruction:
 2358              	.LFB77:
 678:main.c        **** 
 679:main.c        **** // get next instruction
 680:main.c        **** void MoveToNextInstruction() {
 2359              		.loc 1 680 0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 0
 2362              		@ frame_needed = 1, uses_anonymous_args = 0
 2363              		@ link register save eliminated.
 2364 0000 80B4     		push	{r7}
 2365              		.cfi_def_cfa_offset 4
 2366              		.cfi_offset 7, -4
 2367 0002 00AF     		add	r7, sp, #0
 2368              		.cfi_def_cfa_register 7
 681:main.c        ****     currentIgnoreL = 0;
 2369              		.loc 1 681 0
 2370 0004 144B     		ldr	r3, .L147
 2371 0006 0022     		movs	r2, #0
 2372 0008 1A70     		strb	r2, [r3]
 682:main.c        ****     currentIgnoreR = 0;
 2373              		.loc 1 682 0
 2374 000a 144B     		ldr	r3, .L147+4
 2375 000c 0022     		movs	r2, #0
 2376 000e 1A70     		strb	r2, [r3]
 683:main.c        ****     instructionIndex++; // increment instruction index
 2377              		.loc 1 683 0
 2378 0010 134B     		ldr	r3, .L147+8
 2379 0012 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 55


 2380 0014 0133     		adds	r3, r3, #1
 2381 0016 124A     		ldr	r2, .L147+8
 2382 0018 1360     		str	r3, [r2]
 684:main.c        ****     currentIgnoreL = instructionList[instructionIndex].ignoreL;
 2383              		.loc 1 684 0
 2384 001a 124B     		ldr	r3, .L147+12
 2385 001c 1968     		ldr	r1, [r3]
 2386 001e 104B     		ldr	r3, .L147+8
 2387 0020 1A68     		ldr	r2, [r3]
 2388 0022 1346     		mov	r3, r2
 2389 0024 9B00     		lsls	r3, r3, #2
 2390 0026 1344     		add	r3, r3, r2
 2391 0028 9B00     		lsls	r3, r3, #2
 2392 002a 0B44     		add	r3, r3, r1
 2393 002c 5B68     		ldr	r3, [r3, #4]
 2394 002e DAB2     		uxtb	r2, r3
 2395 0030 094B     		ldr	r3, .L147
 2396 0032 1A70     		strb	r2, [r3]
 685:main.c        ****     currentIgnoreR = instructionList[instructionIndex].ignoreR; // update ignores
 2397              		.loc 1 685 0
 2398 0034 0B4B     		ldr	r3, .L147+12
 2399 0036 1968     		ldr	r1, [r3]
 2400 0038 094B     		ldr	r3, .L147+8
 2401 003a 1A68     		ldr	r2, [r3]
 2402 003c 1346     		mov	r3, r2
 2403 003e 9B00     		lsls	r3, r3, #2
 2404 0040 1344     		add	r3, r3, r2
 2405 0042 9B00     		lsls	r3, r3, #2
 2406 0044 0B44     		add	r3, r3, r1
 2407 0046 9B68     		ldr	r3, [r3, #8]
 2408 0048 DAB2     		uxtb	r2, r3
 2409 004a 044B     		ldr	r3, .L147+4
 2410 004c 1A70     		strb	r2, [r3]
 686:main.c        **** }
 2411              		.loc 1 686 0
 2412 004e 00BF     		nop
 2413 0050 BD46     		mov	sp, r7
 2414              		.cfi_def_cfa_register 13
 2415              		@ sp needed
 2416 0052 80BC     		pop	{r7}
 2417              		.cfi_restore 7
 2418              		.cfi_def_cfa_offset 0
 2419 0054 7047     		bx	lr
 2420              	.L148:
 2421 0056 00BF     		.align	2
 2422              	.L147:
 2423 0058 3E000000 		.word	currentIgnoreL
 2424 005c 3F000000 		.word	currentIgnoreR
 2425 0060 14000000 		.word	instructionIndex
 2426 0064 00000000 		.word	instructionList
 2427              		.cfi_endproc
 2428              	.LFE77:
 2429              		.size	MoveToNextInstruction, .-MoveToNextInstruction
 2430              		.section	.text.GetInstructionAtIndex,"ax",%progbits
 2431              		.align	2
 2432              		.global	GetInstructionAtIndex
 2433              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 56


 2434              		.thumb_func
 2435              		.type	GetInstructionAtIndex, %function
 2436              	GetInstructionAtIndex:
 2437              	.LFB78:
 687:main.c        **** 
 688:main.c        **** Instruction GetInstructionAtIndex() {
 2438              		.loc 1 688 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 32
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442              		@ link register save eliminated.
 2443 0000 B0B4     		push	{r4, r5, r7}
 2444              		.cfi_def_cfa_offset 12
 2445              		.cfi_offset 4, -12
 2446              		.cfi_offset 5, -8
 2447              		.cfi_offset 7, -4
 2448 0002 89B0     		sub	sp, sp, #36
 2449              		.cfi_def_cfa_offset 48
 2450 0004 00AF     		add	r7, sp, #0
 2451              		.cfi_def_cfa_register 7
 2452 0006 7860     		str	r0, [r7, #4]
 689:main.c        ****     Instruction nextInstruction;
 690:main.c        ****     // input is list of instructions and robot will react accordingly
 691:main.c        ****     nextInstruction.direction = instructionList[instructionIndex].direction;        
 2453              		.loc 1 691 0
 2454 0008 164B     		ldr	r3, .L151
 2455 000a 1968     		ldr	r1, [r3]
 2456 000c 164B     		ldr	r3, .L151+4
 2457 000e 1A68     		ldr	r2, [r3]
 2458 0010 1346     		mov	r3, r2
 2459 0012 9B00     		lsls	r3, r3, #2
 2460 0014 1344     		add	r3, r3, r2
 2461 0016 9B00     		lsls	r3, r3, #2
 2462 0018 0B44     		add	r3, r3, r1
 2463 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2464 001c 3B73     		strb	r3, [r7, #12]
 692:main.c        ****     nextInstruction.expectedOrientation = instructionList[instructionIndex].expectedOrientation;
 2465              		.loc 1 692 0
 2466 001e 114B     		ldr	r3, .L151
 2467 0020 1968     		ldr	r1, [r3]
 2468 0022 114B     		ldr	r3, .L151+4
 2469 0024 1A68     		ldr	r2, [r3]
 2470 0026 1346     		mov	r3, r2
 2471 0028 9B00     		lsls	r3, r3, #2
 2472 002a 1344     		add	r3, r3, r2
 2473 002c 9B00     		lsls	r3, r3, #2
 2474 002e 0B44     		add	r3, r3, r1
 2475 0030 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2476 0032 3B77     		strb	r3, [r7, #28]
 693:main.c        ****     nextInstruction.distanceToTarget = instructionList[instructionIndex].distanceToTarget;
 2477              		.loc 1 693 0
 2478 0034 0B4B     		ldr	r3, .L151
 2479 0036 1968     		ldr	r1, [r3]
 2480 0038 0B4B     		ldr	r3, .L151+4
 2481 003a 1A68     		ldr	r2, [r3]
 2482 003c 1346     		mov	r3, r2
 2483 003e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 57


 2484 0040 1344     		add	r3, r3, r2
 2485 0042 9B00     		lsls	r3, r3, #2
 2486 0044 0B44     		add	r3, r3, r1
 2487 0046 DB68     		ldr	r3, [r3, #12]
 2488 0048 BB61     		str	r3, [r7, #24]
 694:main.c        ****     return nextInstruction;
 2489              		.loc 1 694 0
 2490 004a 7B68     		ldr	r3, [r7, #4]
 2491 004c 1D46     		mov	r5, r3
 2492 004e 07F10C04 		add	r4, r7, #12
 2493 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2494 0054 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2495 0056 2368     		ldr	r3, [r4]
 2496 0058 2B60     		str	r3, [r5]
 695:main.c        **** }
 2497              		.loc 1 695 0
 2498 005a 7868     		ldr	r0, [r7, #4]
 2499 005c 2437     		adds	r7, r7, #36
 2500              		.cfi_def_cfa_offset 12
 2501 005e BD46     		mov	sp, r7
 2502              		.cfi_def_cfa_register 13
 2503              		@ sp needed
 2504 0060 B0BC     		pop	{r4, r5, r7}
 2505              		.cfi_restore 7
 2506              		.cfi_restore 5
 2507              		.cfi_restore 4
 2508              		.cfi_def_cfa_offset 0
 2509 0062 7047     		bx	lr
 2510              	.L152:
 2511              		.align	2
 2512              	.L151:
 2513 0064 00000000 		.word	instructionList
 2514 0068 14000000 		.word	instructionIndex
 2515              		.cfi_endproc
 2516              	.LFE78:
 2517              		.size	GetInstructionAtIndex, .-GetInstructionAtIndex
 2518              		.section	.text.RotateClockwise180Degrees,"ax",%progbits
 2519              		.align	2
 2520              		.global	RotateClockwise180Degrees
 2521              		.thumb
 2522              		.thumb_func
 2523              		.type	RotateClockwise180Degrees, %function
 2524              	RotateClockwise180Degrees:
 2525              	.LFB79:
 696:main.c        **** 
 697:main.c        **** void RotateClockwise180Degrees() {
 2526              		.loc 1 697 0
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 8
 2529              		@ frame_needed = 1, uses_anonymous_args = 0
 2530 0000 80B5     		push	{r7, lr}
 2531              		.cfi_def_cfa_offset 8
 2532              		.cfi_offset 7, -8
 2533              		.cfi_offset 14, -4
 2534 0002 82B0     		sub	sp, sp, #8
 2535              		.cfi_def_cfa_offset 16
 2536 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 58


 2537              		.cfi_def_cfa_register 7
 698:main.c        ****     uint16 count1 = (32767 + (6553 * 0.9));
 2538              		.loc 1 698 0
 2539 0006 49F20873 		movw	r3, #38664
 2540 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 699:main.c        ****     uint16 count2 = (32767 + (6553 * 0.9));
 2541              		.loc 1 699 0
 2542 000c 49F20873 		movw	r3, #38664
 2543 0010 3B80     		strh	r3, [r7]	@ movhi
 700:main.c        ****     PWM_1_WriteCompare(count1);
 2544              		.loc 1 700 0
 2545 0012 7B88     		ldrh	r3, [r7, #2]
 2546 0014 1846     		mov	r0, r3
 2547 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
 701:main.c        ****     PWM_2_WriteCompare(count2);
 2548              		.loc 1 701 0
 2549 001a 3B88     		ldrh	r3, [r7]
 2550 001c 1846     		mov	r0, r3
 2551 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 702:main.c        ****     
 703:main.c        ****     int quadPulseCount = 0;
 2552              		.loc 1 703 0
 2553 0022 0023     		movs	r3, #0
 2554 0024 7B60     		str	r3, [r7, #4]
 704:main.c        ****     QuadDec_M1_SetCounter(0);
 2555              		.loc 1 704 0
 2556 0026 0020     		movs	r0, #0
 2557 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 705:main.c        ****     // Before 180, save initial configuration
 706:main.c        ****     if (!s3) {
 2558              		.loc 1 706 0
 2559 002c 3A4B     		ldr	r3, .L166
 2560 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2561 0030 002B     		cmp	r3, #0
 2562 0032 06D1     		bne	.L154
 707:main.c        ****         totalLineCount++;    
 2563              		.loc 1 707 0
 2564 0034 394B     		ldr	r3, .L166+4
 2565 0036 1B78     		ldrb	r3, [r3]
 2566 0038 DBB2     		uxtb	r3, r3
 2567 003a 0133     		adds	r3, r3, #1
 2568 003c DAB2     		uxtb	r2, r3
 2569 003e 374B     		ldr	r3, .L166+4
 2570 0040 1A70     		strb	r2, [r3]
 2571              	.L154:
 708:main.c        ****     }
 709:main.c        ****     if (!s4) {
 2572              		.loc 1 709 0
 2573 0042 374B     		ldr	r3, .L166+8
 2574 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2575 0046 002B     		cmp	r3, #0
 2576 0048 06D1     		bne	.L155
 710:main.c        ****         totalLineCount++;    
 2577              		.loc 1 710 0
 2578 004a 344B     		ldr	r3, .L166+4
 2579 004c 1B78     		ldrb	r3, [r3]
 2580 004e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 59


 2581 0050 0133     		adds	r3, r3, #1
 2582 0052 DAB2     		uxtb	r2, r3
 2583 0054 314B     		ldr	r3, .L166+4
 2584 0056 1A70     		strb	r2, [r3]
 2585              	.L155:
 711:main.c        ****     }
 712:main.c        ****     if (!s5 || !s6) {
 2586              		.loc 1 712 0
 2587 0058 324B     		ldr	r3, .L166+12
 2588 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2589 005c 002B     		cmp	r3, #0
 2590 005e 03D0     		beq	.L156
 2591              		.loc 1 712 0 is_stmt 0 discriminator 1
 2592 0060 314B     		ldr	r3, .L166+16
 2593 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2594 0064 002B     		cmp	r3, #0
 2595 0066 2AD1     		bne	.L158
 2596              	.L156:
 713:main.c        ****         totalLineCount++;    
 2597              		.loc 1 713 0 is_stmt 1
 2598 0068 2C4B     		ldr	r3, .L166+4
 2599 006a 1B78     		ldrb	r3, [r3]
 2600 006c DBB2     		uxtb	r3, r3
 2601 006e 0133     		adds	r3, r3, #1
 2602 0070 DAB2     		uxtb	r2, r3
 2603 0072 2A4B     		ldr	r3, .L166+4
 2604 0074 1A70     		strb	r2, [r3]
 714:main.c        ****     }
 715:main.c        ****     
 716:main.c        ****     // During 180
 717:main.c        ****     while(quadPulseCount < 210) {
 2605              		.loc 1 717 0
 2606 0076 22E0     		b	.L158
 2607              	.L161:
 718:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2608              		.loc 1 718 0
 2609 0078 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2610 007c 0346     		mov	r3, r0
 2611 007e 7B60     		str	r3, [r7, #4]
 719:main.c        ****         if (!s3) {
 2612              		.loc 1 719 0
 2613 0080 254B     		ldr	r3, .L166
 2614 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2615 0084 002B     		cmp	r3, #0
 2616 0086 02D1     		bne	.L159
 720:main.c        ****             onLineFlag = 1;    
 2617              		.loc 1 720 0
 2618 0088 284B     		ldr	r3, .L166+20
 2619 008a 0122     		movs	r2, #1
 2620 008c 1A70     		strb	r2, [r3]
 2621              	.L159:
 721:main.c        ****         }
 722:main.c        ****         
 723:main.c        ****         if (onLineFlag) {
 2622              		.loc 1 723 0
 2623 008e 274B     		ldr	r3, .L166+20
 2624 0090 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 60


 2625 0092 DBB2     		uxtb	r3, r3
 2626 0094 002B     		cmp	r3, #0
 2627 0096 06D0     		beq	.L160
 724:main.c        ****             lineCount++;    
 2628              		.loc 1 724 0
 2629 0098 254B     		ldr	r3, .L166+24
 2630 009a 1B78     		ldrb	r3, [r3]
 2631 009c DBB2     		uxtb	r3, r3
 2632 009e 0133     		adds	r3, r3, #1
 2633 00a0 DAB2     		uxtb	r2, r3
 2634 00a2 234B     		ldr	r3, .L166+24
 2635 00a4 1A70     		strb	r2, [r3]
 2636              	.L160:
 725:main.c        ****         }
 726:main.c        ****         
 727:main.c        ****         if (!onLineFlag) {
 2637              		.loc 1 727 0
 2638 00a6 214B     		ldr	r3, .L166+20
 2639 00a8 1B78     		ldrb	r3, [r3]
 2640 00aa DBB2     		uxtb	r3, r3
 2641 00ac 002B     		cmp	r3, #0
 2642 00ae 06D1     		bne	.L158
 728:main.c        ****             if (s3) {
 2643              		.loc 1 728 0
 2644 00b0 194B     		ldr	r3, .L166
 2645 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2646 00b4 002B     		cmp	r3, #0
 2647 00b6 02D0     		beq	.L158
 729:main.c        ****                 onLineFlag = 0;    
 2648              		.loc 1 729 0
 2649 00b8 1C4B     		ldr	r3, .L166+20
 2650 00ba 0022     		movs	r2, #0
 2651 00bc 1A70     		strb	r2, [r3]
 2652              	.L158:
 717:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 2653              		.loc 1 717 0
 2654 00be 7B68     		ldr	r3, [r7, #4]
 2655 00c0 D12B     		cmp	r3, #209
 2656 00c2 D9DD     		ble	.L161
 730:main.c        ****             }
 731:main.c        ****         }
 732:main.c        ****     }
 733:main.c        ****     
 734:main.c        ****     // After 180
 735:main.c        ****     if (totalLineCount == 0) {
 2657              		.loc 1 735 0
 2658 00c4 154B     		ldr	r3, .L166+4
 2659 00c6 1B78     		ldrb	r3, [r3]
 2660 00c8 DBB2     		uxtb	r3, r3
 2661 00ca 002B     		cmp	r3, #0
 2662 00cc 06D1     		bne	.L162
 736:main.c        ****         // we are on no lines
 737:main.c        ****         tooEarlyFlag = 1;
 2663              		.loc 1 737 0
 2664 00ce 194B     		ldr	r3, .L166+28
 2665 00d0 0122     		movs	r2, #1
 2666 00d2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 61


 738:main.c        ****         QuadDec_M1_SetCounter(0);
 2667              		.loc 1 738 0
 2668 00d4 0020     		movs	r0, #0
 2669 00d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 739:main.c        ****         return;
 2670              		.loc 1 739 0
 2671 00da 19E0     		b	.L153
 2672              	.L162:
 740:main.c        ****     }
 741:main.c        ****     else if (lineCount > totalLineCount) {
 2673              		.loc 1 741 0
 2674 00dc 144B     		ldr	r3, .L166+24
 2675 00de 1B78     		ldrb	r3, [r3]
 2676 00e0 DAB2     		uxtb	r2, r3
 2677 00e2 0E4B     		ldr	r3, .L166+4
 2678 00e4 1B78     		ldrb	r3, [r3]
 2679 00e6 DBB2     		uxtb	r3, r3
 2680 00e8 9A42     		cmp	r2, r3
 2681 00ea 03D9     		bls	.L164
 742:main.c        ****         tooLateFlag = 1;    
 2682              		.loc 1 742 0
 2683 00ec 124B     		ldr	r3, .L166+32
 2684 00ee 0122     		movs	r2, #1
 2685 00f0 1A70     		strb	r2, [r3]
 2686 00f2 0AE0     		b	.L165
 2687              	.L164:
 743:main.c        ****     }
 744:main.c        ****     else if (lineCount < totalLineCount) {
 2688              		.loc 1 744 0
 2689 00f4 0E4B     		ldr	r3, .L166+24
 2690 00f6 1B78     		ldrb	r3, [r3]
 2691 00f8 DAB2     		uxtb	r2, r3
 2692 00fa 084B     		ldr	r3, .L166+4
 2693 00fc 1B78     		ldrb	r3, [r3]
 2694 00fe DBB2     		uxtb	r3, r3
 2695 0100 9A42     		cmp	r2, r3
 2696 0102 02D2     		bcs	.L165
 745:main.c        ****         tooEarlyFlag = 1;    
 2697              		.loc 1 745 0
 2698 0104 0B4B     		ldr	r3, .L166+28
 2699 0106 0122     		movs	r2, #1
 2700 0108 1A70     		strb	r2, [r3]
 2701              	.L165:
 746:main.c        ****     }
 747:main.c        ****     QuadDec_M1_SetCounter(0);
 2702              		.loc 1 747 0
 2703 010a 0020     		movs	r0, #0
 2704 010c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 2705              	.L153:
 748:main.c        **** }
 2706              		.loc 1 748 0
 2707 0110 0837     		adds	r7, r7, #8
 2708              		.cfi_def_cfa_offset 8
 2709 0112 BD46     		mov	sp, r7
 2710              		.cfi_def_cfa_register 13
 2711              		@ sp needed
 2712 0114 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 62


 2713              	.L167:
 2714 0116 00BF     		.align	2
 2715              	.L166:
 2716 0118 00000000 		.word	s3
 2717 011c 40000000 		.word	totalLineCount
 2718 0120 00000000 		.word	s4
 2719 0124 00000000 		.word	s5
 2720 0128 00000000 		.word	s6
 2721 012c 42000000 		.word	onLineFlag
 2722 0130 41000000 		.word	lineCount
 2723 0134 43000000 		.word	tooEarlyFlag
 2724 0138 44000000 		.word	tooLateFlag
 2725              		.cfi_endproc
 2726              	.LFE79:
 2727              		.size	RotateClockwise180Degrees, .-RotateClockwise180Degrees
 2728              		.section	.text.SetRobotMovement,"ax",%progbits
 2729              		.align	2
 2730              		.global	SetRobotMovement
 2731              		.thumb
 2732              		.thumb_func
 2733              		.type	SetRobotMovement, %function
 2734              	SetRobotMovement:
 2735              	.LFB80:
 749:main.c        **** 
 750:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 751:main.c        **** void SetRobotMovement() {
 2736              		.loc 1 751 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 24
 2739              		@ frame_needed = 1, uses_anonymous_args = 0
 2740 0000 B0B5     		push	{r4, r5, r7, lr}
 2741              		.cfi_def_cfa_offset 16
 2742              		.cfi_offset 4, -16
 2743              		.cfi_offset 5, -12
 2744              		.cfi_offset 7, -8
 2745              		.cfi_offset 14, -4
 2746 0002 86B0     		sub	sp, sp, #24
 2747              		.cfi_def_cfa_offset 40
 2748 0004 00AF     		add	r7, sp, #0
 2749              		.cfi_def_cfa_register 7
 752:main.c        ****     //MoveToNextInstruction(); // debug purposes
 753:main.c        ****     previousInstruction = currentInstruction;
 2750              		.loc 1 753 0
 2751 0006 2D4A     		ldr	r2, .L184
 2752 0008 2D4B     		ldr	r3, .L184+4
 2753 000a 1446     		mov	r4, r2
 2754 000c 1D46     		mov	r5, r3
 2755 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2756 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2757 0012 2B68     		ldr	r3, [r5]
 2758 0014 2360     		str	r3, [r4]
 754:main.c        ****     currentInstruction = GetInstructionAtIndex(); // get current/ next instruction
 2759              		.loc 1 754 0
 2760 0016 2A4C     		ldr	r4, .L184+4
 2761 0018 3B46     		mov	r3, r7
 2762 001a 1846     		mov	r0, r3
 2763 001c FFF7FEFF 		bl	GetInstructionAtIndex
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 63


 2764 0020 2546     		mov	r5, r4
 2765 0022 3C46     		mov	r4, r7
 2766 0024 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2767 0026 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2768 0028 2368     		ldr	r3, [r4]
 2769 002a 2B60     		str	r3, [r5]
 755:main.c        ****     previousDirection = currentDirection;
 2770              		.loc 1 755 0
 2771 002c 254B     		ldr	r3, .L184+8
 2772 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2773 0030 254B     		ldr	r3, .L184+12
 2774 0032 1A70     		strb	r2, [r3]
 756:main.c        ****     currentDirection = GetMovementAccordingToInstruction(); // check sensors, adjust robot movement
 2775              		.loc 1 756 0
 2776 0034 FFF7FEFF 		bl	GetMovementAccordingToInstruction
 2777 0038 0346     		mov	r3, r0
 2778 003a 1A46     		mov	r2, r3
 2779 003c 214B     		ldr	r3, .L184+8
 2780 003e 1A70     		strb	r2, [r3]
 757:main.c        ****     // move robot depending on sensors
 758:main.c        ****     switch (currentDirection) {
 2781              		.loc 1 758 0
 2782 0040 204B     		ldr	r3, .L184+8
 2783 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2784 0044 0A2B     		cmp	r3, #10
 2785 0046 35D8     		bhi	.L182
 2786 0048 01A2     		adr	r2, .L171
 2787 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2788 004e 00BF     		.p2align 2
 2789              	.L171:
 2790 0050 7D000000 		.word	.L170+1
 2791 0054 83000000 		.word	.L172+1
 2792 0058 89000000 		.word	.L173+1
 2793 005c 95000000 		.word	.L174+1
 2794 0060 8F000000 		.word	.L175+1
 2795 0064 9B000000 		.word	.L176+1
 2796 0068 B3000000 		.word	.L183+1
 2797 006c B3000000 		.word	.L183+1
 2798 0070 A1000000 		.word	.L179+1
 2799 0074 A7000000 		.word	.L180+1
 2800 0078 AD000000 		.word	.L181+1
 2801              		.p2align 1
 2802              	.L170:
 759:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 760:main.c        ****         case Forward:
 761:main.c        ****             moveForward();
 2803              		.loc 1 761 0
 2804 007c FFF7FEFF 		bl	moveForward
 762:main.c        ****             break;
 2805              		.loc 1 762 0
 2806 0080 18E0     		b	.L169
 2807              	.L172:
 763:main.c        ****         case TurnRight:
 764:main.c        ****             turnRight();
 2808              		.loc 1 764 0
 2809 0082 FFF7FEFF 		bl	turnRight
 765:main.c        ****             break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 64


 2810              		.loc 1 765 0
 2811 0086 15E0     		b	.L169
 2812              	.L173:
 766:main.c        ****         case TurnLeft:
 767:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 2813              		.loc 1 767 0
 2814 0088 FFF7FEFF 		bl	turnLeft
 768:main.c        ****             break;
 2815              		.loc 1 768 0
 2816 008c 12E0     		b	.L169
 2817              	.L175:
 769:main.c        ****         case AdjustToTheRight:
 770:main.c        ****             adjustRight();
 2818              		.loc 1 770 0
 2819 008e FFF7FEFF 		bl	adjustRight
 771:main.c        ****             break;
 2820              		.loc 1 771 0
 2821 0092 0FE0     		b	.L169
 2822              	.L174:
 772:main.c        ****         case AdjustToTheLeft:
 773:main.c        ****             adjustLeft();
 2823              		.loc 1 773 0
 2824 0094 FFF7FEFF 		bl	adjustLeft
 774:main.c        ****             break;
 2825              		.loc 1 774 0
 2826 0098 0CE0     		b	.L169
 2827              	.L176:
 775:main.c        ****         case Stop:
 776:main.c        ****             stopMoving();
 2828              		.loc 1 776 0
 2829 009a FFF7FEFF 		bl	stopMoving
 777:main.c        ****             break;
 2830              		.loc 1 777 0
 2831 009e 09E0     		b	.L169
 2832              	.L179:
 778:main.c        ****         case ForwardAfterTurn:
 779:main.c        ****             moveForward();
 2833              		.loc 1 779 0
 2834 00a0 FFF7FEFF 		bl	moveForward
 780:main.c        ****             break;
 2835              		.loc 1 780 0
 2836 00a4 06E0     		b	.L169
 2837              	.L180:
 781:main.c        ****         case Backward:
 782:main.c        ****             moveBackward();
 2838              		.loc 1 782 0
 2839 00a6 FFF7FEFF 		bl	moveBackward
 783:main.c        ****             break;
 2840              		.loc 1 783 0
 2841 00aa 03E0     		b	.L169
 2842              	.L181:
 784:main.c        ****         case waitForTurn:
 785:main.c        ****             break;
 786:main.c        ****         case Spin180:
 787:main.c        ****             RotateClockwise180Degrees();
 2843              		.loc 1 787 0
 2844 00ac FFF7FEFF 		bl	RotateClockwise180Degrees
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 65


 788:main.c        ****             break;
 2845              		.loc 1 788 0
 2846 00b0 00E0     		b	.L169
 2847              	.L183:
 789:main.c        ****         case Unknown:
 790:main.c        ****             break;  
 2848              		.loc 1 790 0
 2849 00b2 00BF     		nop
 2850              	.L169:
 2851              	.L182:
 791:main.c        ****     }
 792:main.c        **** }
 2852              		.loc 1 792 0
 2853 00b4 00BF     		nop
 2854 00b6 1837     		adds	r7, r7, #24
 2855              		.cfi_def_cfa_offset 16
 2856 00b8 BD46     		mov	sp, r7
 2857              		.cfi_def_cfa_register 13
 2858              		@ sp needed
 2859 00ba B0BD     		pop	{r4, r5, r7, pc}
 2860              	.L185:
 2861              		.align	2
 2862              	.L184:
 2863 00bc 00000000 		.word	previousInstruction
 2864 00c0 00000000 		.word	currentInstruction
 2865 00c4 00000000 		.word	currentDirection
 2866 00c8 00000000 		.word	previousDirection
 2867              		.cfi_endproc
 2868              	.LFE80:
 2869              		.size	SetRobotMovement, .-SetRobotMovement
 2870              		.text
 2871              	.Letext0:
 2872              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2873              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2874              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2875              		.file 5 "vars.h"
 2876              		.file 6 "pathfinding.h"
 2877              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2878              		.file 8 "map.h"
 2879              		.section	.debug_info,"",%progbits
 2880              	.Ldebug_info0:
 2881 0000 010A0000 		.4byte	0xa01
 2882 0004 0400     		.2byte	0x4
 2883 0006 00000000 		.4byte	.Ldebug_abbrev0
 2884 000a 04       		.byte	0x4
 2885 000b 01       		.uleb128 0x1
 2886 000c F5000000 		.4byte	.LASF157
 2887 0010 0C       		.byte	0xc
 2888 0011 AF040000 		.4byte	.LASF158
 2889 0015 85000000 		.4byte	.LASF159
 2890 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2891 001d 00000000 		.4byte	0
 2892 0021 00000000 		.4byte	.Ldebug_line0
 2893 0025 02       		.uleb128 0x2
 2894 0026 01       		.byte	0x1
 2895 0027 06       		.byte	0x6
 2896 0028 79000000 		.4byte	.LASF0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 66


 2897 002c 02       		.uleb128 0x2
 2898 002d 01       		.byte	0x1
 2899 002e 08       		.byte	0x8
 2900 002f 68060000 		.4byte	.LASF1
 2901 0033 02       		.uleb128 0x2
 2902 0034 02       		.byte	0x2
 2903 0035 05       		.byte	0x5
 2904 0036 D4040000 		.4byte	.LASF2
 2905 003a 02       		.uleb128 0x2
 2906 003b 02       		.byte	0x2
 2907 003c 07       		.byte	0x7
 2908 003d 4B040000 		.4byte	.LASF3
 2909 0041 03       		.uleb128 0x3
 2910 0042 A5040000 		.4byte	.LASF12
 2911 0046 02       		.byte	0x2
 2912 0047 3F       		.byte	0x3f
 2913 0048 4C000000 		.4byte	0x4c
 2914 004c 02       		.uleb128 0x2
 2915 004d 04       		.byte	0x4
 2916 004e 05       		.byte	0x5
 2917 004f 84020000 		.4byte	.LASF4
 2918 0053 02       		.uleb128 0x2
 2919 0054 04       		.byte	0x4
 2920 0055 07       		.byte	0x7
 2921 0056 F0030000 		.4byte	.LASF5
 2922 005a 02       		.uleb128 0x2
 2923 005b 08       		.byte	0x8
 2924 005c 05       		.byte	0x5
 2925 005d ED020000 		.4byte	.LASF6
 2926 0061 02       		.uleb128 0x2
 2927 0062 08       		.byte	0x8
 2928 0063 07       		.byte	0x7
 2929 0064 A5010000 		.4byte	.LASF7
 2930 0068 04       		.uleb128 0x4
 2931 0069 04       		.byte	0x4
 2932 006a 05       		.byte	0x5
 2933 006b 696E7400 		.ascii	"int\000"
 2934 006f 02       		.uleb128 0x2
 2935 0070 04       		.byte	0x4
 2936 0071 07       		.byte	0x7
 2937 0072 8D070000 		.4byte	.LASF8
 2938 0076 02       		.uleb128 0x2
 2939 0077 08       		.byte	0x8
 2940 0078 04       		.byte	0x4
 2941 0079 6C070000 		.4byte	.LASF9
 2942 007d 02       		.uleb128 0x2
 2943 007e 04       		.byte	0x4
 2944 007f 07       		.byte	0x7
 2945 0080 5F050000 		.4byte	.LASF10
 2946 0084 02       		.uleb128 0x2
 2947 0085 01       		.byte	0x1
 2948 0086 08       		.byte	0x8
 2949 0087 78070000 		.4byte	.LASF11
 2950 008b 03       		.uleb128 0x3
 2951 008c 60060000 		.4byte	.LASF13
 2952 0090 03       		.byte	0x3
 2953 0091 2C       		.byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 67


 2954 0092 41000000 		.4byte	0x41
 2955 0096 05       		.uleb128 0x5
 2956 0097 E7020000 		.4byte	.LASF14
 2957 009b 04       		.byte	0x4
 2958 009c E701     		.2byte	0x1e7
 2959 009e 2C000000 		.4byte	0x2c
 2960 00a2 05       		.uleb128 0x5
 2961 00a3 76060000 		.4byte	.LASF15
 2962 00a7 04       		.byte	0x4
 2963 00a8 E801     		.2byte	0x1e8
 2964 00aa 3A000000 		.4byte	0x3a
 2965 00ae 05       		.uleb128 0x5
 2966 00af 65030000 		.4byte	.LASF16
 2967 00b3 04       		.byte	0x4
 2968 00b4 E901     		.2byte	0x1e9
 2969 00b6 53000000 		.4byte	0x53
 2970 00ba 05       		.uleb128 0x5
 2971 00bb 95040000 		.4byte	.LASF17
 2972 00bf 04       		.byte	0x4
 2973 00c0 EA01     		.2byte	0x1ea
 2974 00c2 25000000 		.4byte	0x25
 2975 00c6 05       		.uleb128 0x5
 2976 00c7 C9080000 		.4byte	.LASF18
 2977 00cb 04       		.byte	0x4
 2978 00cc EB01     		.2byte	0x1eb
 2979 00ce 33000000 		.4byte	0x33
 2980 00d2 02       		.uleb128 0x2
 2981 00d3 04       		.byte	0x4
 2982 00d4 04       		.byte	0x4
 2983 00d5 05060000 		.4byte	.LASF19
 2984 00d9 02       		.uleb128 0x2
 2985 00da 08       		.byte	0x8
 2986 00db 04       		.byte	0x4
 2987 00dc FB020000 		.4byte	.LASF20
 2988 00e0 06       		.uleb128 0x6
 2989 00e1 96000000 		.4byte	0x96
 2990 00e5 06       		.uleb128 0x6
 2991 00e6 AE000000 		.4byte	0xae
 2992 00ea 07       		.uleb128 0x7
 2993 00eb 96000000 		.4byte	0x96
 2994 00ef FA000000 		.4byte	0xfa
 2995 00f3 08       		.uleb128 0x8
 2996 00f4 7D000000 		.4byte	0x7d
 2997 00f8 03       		.byte	0x3
 2998 00f9 00       		.byte	0
 2999 00fa 09       		.uleb128 0x9
 3000 00fb D5030000 		.4byte	.LASF49
 3001 00ff 20       		.byte	0x20
 3002 0100 05       		.byte	0x5
 3003 0101 28       		.byte	0x28
 3004 0102 D3010000 		.4byte	0x1d3
 3005 0106 0A       		.uleb128 0xa
 3006 0107 9A070000 		.4byte	.LASF21
 3007 010b 05       		.byte	0x5
 3008 010c 2A       		.byte	0x2a
 3009 010d BA000000 		.4byte	0xba
 3010 0111 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 68


 3011 0112 0A       		.uleb128 0xa
 3012 0113 9F070000 		.4byte	.LASF22
 3013 0117 05       		.byte	0x5
 3014 0118 2B       		.byte	0x2b
 3015 0119 96000000 		.4byte	0x96
 3016 011d 01       		.byte	0x1
 3017 011e 0A       		.uleb128 0xa
 3018 011f E4070000 		.4byte	.LASF23
 3019 0123 05       		.byte	0x5
 3020 0124 2C       		.byte	0x2c
 3021 0125 C6000000 		.4byte	0xc6
 3022 0129 02       		.byte	0x2
 3023 012a 0A       		.uleb128 0xa
 3024 012b FA060000 		.4byte	.LASF24
 3025 012f 05       		.byte	0x5
 3026 0130 2D       		.byte	0x2d
 3027 0131 C6000000 		.4byte	0xc6
 3028 0135 04       		.byte	0x4
 3029 0136 0A       		.uleb128 0xa
 3030 0137 28090000 		.4byte	.LASF25
 3031 013b 05       		.byte	0x5
 3032 013c 2E       		.byte	0x2e
 3033 013d C6000000 		.4byte	0xc6
 3034 0141 06       		.byte	0x6
 3035 0142 0A       		.uleb128 0xa
 3036 0143 D6010000 		.4byte	.LASF26
 3037 0147 05       		.byte	0x5
 3038 0148 2F       		.byte	0x2f
 3039 0149 C6000000 		.4byte	0xc6
 3040 014d 08       		.byte	0x8
 3041 014e 0A       		.uleb128 0xa
 3042 014f 7D070000 		.4byte	.LASF27
 3043 0153 05       		.byte	0x5
 3044 0154 30       		.byte	0x30
 3045 0155 C6000000 		.4byte	0xc6
 3046 0159 0A       		.byte	0xa
 3047 015a 0A       		.uleb128 0xa
 3048 015b 07090000 		.4byte	.LASF28
 3049 015f 05       		.byte	0x5
 3050 0160 31       		.byte	0x31
 3051 0161 C6000000 		.4byte	0xc6
 3052 0165 0C       		.byte	0xc
 3053 0166 0A       		.uleb128 0xa
 3054 0167 92010000 		.4byte	.LASF29
 3055 016b 05       		.byte	0x5
 3056 016c 32       		.byte	0x32
 3057 016d C6000000 		.4byte	0xc6
 3058 0171 0E       		.byte	0xe
 3059 0172 0A       		.uleb128 0xa
 3060 0173 A7050000 		.4byte	.LASF30
 3061 0177 05       		.byte	0x5
 3062 0178 33       		.byte	0x33
 3063 0179 C6000000 		.4byte	0xc6
 3064 017d 10       		.byte	0x10
 3065 017e 0A       		.uleb128 0xa
 3066 017f B6040000 		.4byte	.LASF31
 3067 0183 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 69


 3068 0184 34       		.byte	0x34
 3069 0185 C6000000 		.4byte	0xc6
 3070 0189 12       		.byte	0x12
 3071 018a 0A       		.uleb128 0xa
 3072 018b 3F050000 		.4byte	.LASF32
 3073 018f 05       		.byte	0x5
 3074 0190 35       		.byte	0x35
 3075 0191 C6000000 		.4byte	0xc6
 3076 0195 14       		.byte	0x14
 3077 0196 0A       		.uleb128 0xa
 3078 0197 80050000 		.4byte	.LASF33
 3079 019b 05       		.byte	0x5
 3080 019c 36       		.byte	0x36
 3081 019d C6000000 		.4byte	0xc6
 3082 01a1 16       		.byte	0x16
 3083 01a2 0A       		.uleb128 0xa
 3084 01a3 92060000 		.4byte	.LASF34
 3085 01a7 05       		.byte	0x5
 3086 01a8 37       		.byte	0x37
 3087 01a9 C6000000 		.4byte	0xc6
 3088 01ad 18       		.byte	0x18
 3089 01ae 0A       		.uleb128 0xa
 3090 01af AF050000 		.4byte	.LASF35
 3091 01b3 05       		.byte	0x5
 3092 01b4 38       		.byte	0x38
 3093 01b5 C6000000 		.4byte	0xc6
 3094 01b9 1A       		.byte	0x1a
 3095 01ba 0A       		.uleb128 0xa
 3096 01bb 1F000000 		.4byte	.LASF36
 3097 01bf 05       		.byte	0x5
 3098 01c0 39       		.byte	0x39
 3099 01c1 C6000000 		.4byte	0xc6
 3100 01c5 1C       		.byte	0x1c
 3101 01c6 0A       		.uleb128 0xa
 3102 01c7 87030000 		.4byte	.LASF37
 3103 01cb 05       		.byte	0x5
 3104 01cc 3A       		.byte	0x3a
 3105 01cd C6000000 		.4byte	0xc6
 3106 01d1 1E       		.byte	0x1e
 3107 01d2 00       		.byte	0
 3108 01d3 0B       		.uleb128 0xb
 3109 01d4 0E000000 		.4byte	.LASF41
 3110 01d8 01       		.byte	0x1
 3111 01d9 2C000000 		.4byte	0x2c
 3112 01dd 06       		.byte	0x6
 3113 01de 0D       		.byte	0xd
 3114 01df FB010000 		.4byte	0x1fb
 3115 01e3 0C       		.uleb128 0xc
 3116 01e4 557000   		.ascii	"Up\000"
 3117 01e7 00       		.byte	0
 3118 01e8 0D       		.uleb128 0xd
 3119 01e9 BB070000 		.4byte	.LASF38
 3120 01ed 01       		.byte	0x1
 3121 01ee 0D       		.uleb128 0xd
 3122 01ef 48050000 		.4byte	.LASF39
 3123 01f3 02       		.byte	0x2
 3124 01f4 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 70


 3125 01f5 1F070000 		.4byte	.LASF40
 3126 01f9 03       		.byte	0x3
 3127 01fa 00       		.byte	0
 3128 01fb 0B       		.uleb128 0xb
 3129 01fc 7D060000 		.4byte	.LASF42
 3130 0200 01       		.byte	0x1
 3131 0201 2C000000 		.4byte	0x2c
 3132 0205 06       		.byte	0x6
 3133 0206 0E       		.byte	0xe
 3134 0207 30020000 		.4byte	0x230
 3135 020b 0D       		.uleb128 0xd
 3136 020c 15070000 		.4byte	.LASF43
 3137 0210 00       		.byte	0
 3138 0211 0D       		.uleb128 0xd
 3139 0212 97050000 		.4byte	.LASF44
 3140 0216 01       		.byte	0x1
 3141 0217 0D       		.uleb128 0xd
 3142 0218 5B080000 		.4byte	.LASF45
 3143 021c 02       		.byte	0x2
 3144 021d 0D       		.uleb128 0xd
 3145 021e D0010000 		.4byte	.LASF46
 3146 0222 03       		.byte	0x3
 3147 0223 0D       		.uleb128 0xd
 3148 0224 CB020000 		.4byte	.LASF47
 3149 0228 04       		.byte	0x4
 3150 0229 0D       		.uleb128 0xd
 3151 022a 05020000 		.4byte	.LASF48
 3152 022e 05       		.byte	0x5
 3153 022f 00       		.byte	0
 3154 0230 09       		.uleb128 0x9
 3155 0231 68020000 		.4byte	.LASF50
 3156 0235 14       		.byte	0x14
 3157 0236 06       		.byte	0x6
 3158 0237 10       		.byte	0x10
 3159 0238 79020000 		.4byte	0x279
 3160 023c 0A       		.uleb128 0xa
 3161 023d E2000000 		.4byte	.LASF51
 3162 0241 06       		.byte	0x6
 3163 0242 11       		.byte	0x11
 3164 0243 FB010000 		.4byte	0x1fb
 3165 0247 00       		.byte	0
 3166 0248 0A       		.uleb128 0xa
 3167 0249 DE080000 		.4byte	.LASF52
 3168 024d 06       		.byte	0x6
 3169 024e 12       		.byte	0x12
 3170 024f 68000000 		.4byte	0x68
 3171 0253 04       		.byte	0x4
 3172 0254 0A       		.uleb128 0xa
 3173 0255 EF080000 		.4byte	.LASF53
 3174 0259 06       		.byte	0x6
 3175 025a 13       		.byte	0x13
 3176 025b 68000000 		.4byte	0x68
 3177 025f 08       		.byte	0x8
 3178 0260 0A       		.uleb128 0xa
 3179 0261 F4010000 		.4byte	.LASF54
 3180 0265 06       		.byte	0x6
 3181 0266 14       		.byte	0x14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 71


 3182 0267 68000000 		.4byte	0x68
 3183 026b 0C       		.byte	0xc
 3184 026c 0A       		.uleb128 0xa
 3185 026d BC010000 		.4byte	.LASF55
 3186 0271 06       		.byte	0x6
 3187 0272 15       		.byte	0x15
 3188 0273 D3010000 		.4byte	0x1d3
 3189 0277 10       		.byte	0x10
 3190 0278 00       		.byte	0
 3191 0279 03       		.uleb128 0x3
 3192 027a 68020000 		.4byte	.LASF50
 3193 027e 06       		.byte	0x6
 3194 027f 16       		.byte	0x16
 3195 0280 30020000 		.4byte	0x230
 3196 0284 0B       		.uleb128 0xb
 3197 0285 46000000 		.4byte	.LASF56
 3198 0289 01       		.byte	0x1
 3199 028a 2C000000 		.4byte	0x2c
 3200 028e 01       		.byte	0x1
 3201 028f 18       		.byte	0x18
 3202 0290 D7020000 		.4byte	0x2d7
 3203 0294 0D       		.uleb128 0xd
 3204 0295 43040000 		.4byte	.LASF57
 3205 0299 00       		.byte	0
 3206 029a 0D       		.uleb128 0xd
 3207 029b BA030000 		.4byte	.LASF58
 3208 029f 01       		.byte	0x1
 3209 02a0 0D       		.uleb128 0xd
 3210 02a1 E6080000 		.4byte	.LASF59
 3211 02a5 02       		.byte	0x2
 3212 02a6 0D       		.uleb128 0xd
 3213 02a7 05070000 		.4byte	.LASF60
 3214 02ab 03       		.byte	0x3
 3215 02ac 0D       		.uleb128 0xd
 3216 02ad 34030000 		.4byte	.LASF61
 3217 02b1 04       		.byte	0x4
 3218 02b2 0D       		.uleb128 0xd
 3219 02b3 7F020000 		.4byte	.LASF62
 3220 02b7 05       		.byte	0x5
 3221 02b8 0D       		.uleb128 0xd
 3222 02b9 1D060000 		.4byte	.LASF63
 3223 02bd 06       		.byte	0x6
 3224 02be 0D       		.uleb128 0xd
 3225 02bf 37040000 		.4byte	.LASF64
 3226 02c3 07       		.byte	0x7
 3227 02c4 0D       		.uleb128 0xd
 3228 02c5 C4030000 		.4byte	.LASF65
 3229 02c9 08       		.byte	0x8
 3230 02ca 0D       		.uleb128 0xd
 3231 02cb DE020000 		.4byte	.LASF66
 3232 02cf 09       		.byte	0x9
 3233 02d0 0D       		.uleb128 0xd
 3234 02d1 85070000 		.4byte	.LASF67
 3235 02d5 0A       		.byte	0xa
 3236 02d6 00       		.byte	0
 3237 02d7 0E       		.uleb128 0xe
 3238 02d8 9A040000 		.4byte	.LASF78
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 72


 3239 02dc 01       		.byte	0x1
 3240 02dd 53       		.byte	0x53
 3241 02de 00000000 		.4byte	.LFB64
 3242 02e2 EC000000 		.4byte	.LFE64-.LFB64
 3243 02e6 01       		.uleb128 0x1
 3244 02e7 9C       		.byte	0x9c
 3245 02e8 05030000 		.4byte	0x305
 3246 02ec 0F       		.uleb128 0xf
 3247 02ed 50000000 		.4byte	.LBB2
 3248 02f1 62000000 		.4byte	.LBE2-.LBB2
 3249 02f5 10       		.uleb128 0x10
 3250 02f6 60070000 		.4byte	.LASF74
 3251 02fa 01       		.byte	0x1
 3252 02fb 60       		.byte	0x60
 3253 02fc D2000000 		.4byte	0xd2
 3254 0300 02       		.uleb128 0x2
 3255 0301 91       		.byte	0x91
 3256 0302 6C       		.sleb128 -20
 3257 0303 00       		.byte	0
 3258 0304 00       		.byte	0
 3259 0305 11       		.uleb128 0x11
 3260 0306 31020000 		.4byte	.LASF68
 3261 030a 01       		.byte	0x1
 3262 030b 6B       		.byte	0x6b
 3263 030c 00000000 		.4byte	.LFB65
 3264 0310 18000000 		.4byte	.LFE65-.LFB65
 3265 0314 01       		.uleb128 0x1
 3266 0315 9C       		.byte	0x9c
 3267 0316 11       		.uleb128 0x11
 3268 0317 D6000000 		.4byte	.LASF69
 3269 031b 01       		.byte	0x1
 3270 031c 71       		.byte	0x71
 3271 031d 00000000 		.4byte	.LFB66
 3272 0321 18000000 		.4byte	.LFE66-.LFB66
 3273 0325 01       		.uleb128 0x1
 3274 0326 9C       		.byte	0x9c
 3275 0327 11       		.uleb128 0x11
 3276 0328 4C020000 		.4byte	.LASF70
 3277 032c 01       		.byte	0x1
 3278 032d 77       		.byte	0x77
 3279 032e 00000000 		.4byte	.LFB67
 3280 0332 18000000 		.4byte	.LFE67-.LFB67
 3281 0336 01       		.uleb128 0x1
 3282 0337 9C       		.byte	0x9c
 3283 0338 11       		.uleb128 0x11
 3284 0339 A5070000 		.4byte	.LASF71
 3285 033d 01       		.byte	0x1
 3286 033e 7D       		.byte	0x7d
 3287 033f 00000000 		.4byte	.LFB68
 3288 0343 18000000 		.4byte	.LFE68-.LFB68
 3289 0347 01       		.uleb128 0x1
 3290 0348 9C       		.byte	0x9c
 3291 0349 12       		.uleb128 0x12
 3292 034a AB080000 		.4byte	.LASF72
 3293 034e 01       		.byte	0x1
 3294 034f 83       		.byte	0x83
 3295 0350 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 73


 3296 0354 70000000 		.4byte	.LFE69-.LFB69
 3297 0358 01       		.uleb128 0x1
 3298 0359 9C       		.byte	0x9c
 3299 035a 13       		.uleb128 0x13
 3300 035b 20030000 		.4byte	.LASF73
 3301 035f 01       		.byte	0x1
 3302 0360 97       		.byte	0x97
 3303 0361 68000000 		.4byte	0x68
 3304 0365 00000000 		.4byte	.LFB70
 3305 0369 F4000000 		.4byte	.LFE70-.LFB70
 3306 036d 01       		.uleb128 0x1
 3307 036e 9C       		.byte	0x9c
 3308 036f 14       		.uleb128 0x14
 3309 0370 CF080000 		.4byte	.LASF160
 3310 0374 01       		.byte	0x1
 3311 0375 B8       		.byte	0xb8
 3312 0376 C6000000 		.4byte	0xc6
 3313 037a 00000000 		.4byte	.LFB71
 3314 037e 54000000 		.4byte	.LFE71-.LFB71
 3315 0382 01       		.uleb128 0x1
 3316 0383 9C       		.byte	0x9c
 3317 0384 B3030000 		.4byte	0x3b3
 3318 0388 15       		.uleb128 0x15
 3319 0389 7C030000 		.4byte	.LASF161
 3320 038d 01       		.byte	0x1
 3321 038e B8       		.byte	0xb8
 3322 038f A2000000 		.4byte	0xa2
 3323 0393 02       		.uleb128 0x2
 3324 0394 91       		.byte	0x91
 3325 0395 66       		.sleb128 -26
 3326 0396 16       		.uleb128 0x16
 3327 0397 63707300 		.ascii	"cps\000"
 3328 039b 01       		.byte	0x1
 3329 039c B9       		.byte	0xb9
 3330 039d D2000000 		.4byte	0xd2
 3331 03a1 02       		.uleb128 0x2
 3332 03a2 91       		.byte	0x91
 3333 03a3 6C       		.sleb128 -20
 3334 03a4 16       		.uleb128 0x16
 3335 03a5 72706D00 		.ascii	"rpm\000"
 3336 03a9 01       		.byte	0x1
 3337 03aa BA       		.byte	0xba
 3338 03ab C6000000 		.4byte	0xc6
 3339 03af 02       		.uleb128 0x2
 3340 03b0 91       		.byte	0x91
 3341 03b1 6A       		.sleb128 -22
 3342 03b2 00       		.byte	0
 3343 03b3 17       		.uleb128 0x17
 3344 03b4 B8080000 		.4byte	.LASF83
 3345 03b8 01       		.byte	0x1
 3346 03b9 C2       		.byte	0xc2
 3347 03ba 00000000 		.4byte	.LFB72
 3348 03be 34000000 		.4byte	.LFE72-.LFB72
 3349 03c2 01       		.uleb128 0x1
 3350 03c3 9C       		.byte	0x9c
 3351 03c4 18       		.uleb128 0x18
 3352 03c5 0D050000 		.4byte	.LASF75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 74


 3353 03c9 01       		.byte	0x1
 3354 03ca D3       		.byte	0xd3
 3355 03cb 84020000 		.4byte	0x284
 3356 03cf 00000000 		.4byte	.LFB73
 3357 03d3 84000000 		.4byte	.LFE73-.LFB73
 3358 03d7 01       		.uleb128 0x1
 3359 03d8 9C       		.byte	0x9c
 3360 03d9 18       		.uleb128 0x18
 3361 03da 3B070000 		.4byte	.LASF76
 3362 03de 01       		.byte	0x1
 3363 03df F9       		.byte	0xf9
 3364 03e0 84020000 		.4byte	0x284
 3365 03e4 00000000 		.4byte	.LFB74
 3366 03e8 7C000000 		.4byte	.LFE74-.LFB74
 3367 03ec 01       		.uleb128 0x1
 3368 03ed 9C       		.byte	0x9c
 3369 03ee 19       		.uleb128 0x19
 3370 03ef B2020000 		.4byte	.LASF77
 3371 03f3 01       		.byte	0x1
 3372 03f4 1701     		.2byte	0x117
 3373 03f6 84020000 		.4byte	0x284
 3374 03fa 00000000 		.4byte	.LFB75
 3375 03fe 84000000 		.4byte	.LFE75-.LFB75
 3376 0402 01       		.uleb128 0x1
 3377 0403 9C       		.byte	0x9c
 3378 0404 1A       		.uleb128 0x1a
 3379 0405 18080000 		.4byte	.LASF79
 3380 0409 01       		.byte	0x1
 3381 040a 3D01     		.2byte	0x13d
 3382 040c 84020000 		.4byte	0x284
 3383 0410 00000000 		.4byte	.LFB76
 3384 0414 D4060000 		.4byte	.LFE76-.LFB76
 3385 0418 01       		.uleb128 0x1
 3386 0419 9C       		.byte	0x9c
 3387 041a 56040000 		.4byte	0x456
 3388 041e 1B       		.uleb128 0x1b
 3389 041f DF030000 		.4byte	.LASF80
 3390 0423 01       		.byte	0x1
 3391 0424 3E01     		.2byte	0x13e
 3392 0426 D2000000 		.4byte	0xd2
 3393 042a 02       		.uleb128 0x2
 3394 042b 91       		.byte	0x91
 3395 042c 74       		.sleb128 -12
 3396 042d 1B       		.uleb128 0x1b
 3397 042e DE060000 		.4byte	.LASF81
 3398 0432 01       		.byte	0x1
 3399 0433 4D01     		.2byte	0x14d
 3400 0435 FB010000 		.4byte	0x1fb
 3401 0439 02       		.uleb128 0x2
 3402 043a 91       		.byte	0x91
 3403 043b 73       		.sleb128 -13
 3404 043c 0F       		.uleb128 0xf
 3405 043d 5E040000 		.4byte	.LBB3
 3406 0441 30000000 		.4byte	.LBE3-.LBB3
 3407 0445 1B       		.uleb128 0x1b
 3408 0446 83010000 		.4byte	.LASF82
 3409 044a 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 75


 3410 044b 3F02     		.2byte	0x23f
 3411 044d 68000000 		.4byte	0x68
 3412 0451 02       		.uleb128 0x2
 3413 0452 91       		.byte	0x91
 3414 0453 6C       		.sleb128 -20
 3415 0454 00       		.byte	0
 3416 0455 00       		.byte	0
 3417 0456 1C       		.uleb128 0x1c
 3418 0457 BE040000 		.4byte	.LASF84
 3419 045b 01       		.byte	0x1
 3420 045c A802     		.2byte	0x2a8
 3421 045e 00000000 		.4byte	.LFB77
 3422 0462 68000000 		.4byte	.LFE77-.LFB77
 3423 0466 01       		.uleb128 0x1
 3424 0467 9C       		.byte	0x9c
 3425 0468 1D       		.uleb128 0x1d
 3426 0469 25060000 		.4byte	.LASF85
 3427 046d 01       		.byte	0x1
 3428 046e B002     		.2byte	0x2b0
 3429 0470 79020000 		.4byte	0x279
 3430 0474 00000000 		.4byte	.LFB78
 3431 0478 6C000000 		.4byte	.LFE78-.LFB78
 3432 047c 01       		.uleb128 0x1
 3433 047d 9C       		.byte	0x9c
 3434 047e 92040000 		.4byte	0x492
 3435 0482 1B       		.uleb128 0x1b
 3436 0483 6C030000 		.4byte	.LASF86
 3437 0487 01       		.byte	0x1
 3438 0488 B102     		.2byte	0x2b1
 3439 048a 79020000 		.4byte	0x279
 3440 048e 02       		.uleb128 0x2
 3441 048f 91       		.byte	0x91
 3442 0490 5C       		.sleb128 -36
 3443 0491 00       		.byte	0
 3444 0492 1E       		.uleb128 0x1e
 3445 0493 1D040000 		.4byte	.LASF162
 3446 0497 01       		.byte	0x1
 3447 0498 B902     		.2byte	0x2b9
 3448 049a 00000000 		.4byte	.LFB79
 3449 049e 3C010000 		.4byte	.LFE79-.LFB79
 3450 04a2 01       		.uleb128 0x1
 3451 04a3 9C       		.byte	0x9c
 3452 04a4 D6040000 		.4byte	0x4d6
 3453 04a8 1B       		.uleb128 0x1b
 3454 04a9 A4080000 		.4byte	.LASF87
 3455 04ad 01       		.byte	0x1
 3456 04ae BA02     		.2byte	0x2ba
 3457 04b0 A2000000 		.4byte	0xa2
 3458 04b4 02       		.uleb128 0x2
 3459 04b5 91       		.byte	0x91
 3460 04b6 72       		.sleb128 -14
 3461 04b7 1B       		.uleb128 0x1b
 3462 04b8 9A020000 		.4byte	.LASF88
 3463 04bc 01       		.byte	0x1
 3464 04bd BB02     		.2byte	0x2bb
 3465 04bf A2000000 		.4byte	0xa2
 3466 04c3 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 76


 3467 04c4 91       		.byte	0x91
 3468 04c5 70       		.sleb128 -16
 3469 04c6 1B       		.uleb128 0x1b
 3470 04c7 DE040000 		.4byte	.LASF89
 3471 04cb 01       		.byte	0x1
 3472 04cc BF02     		.2byte	0x2bf
 3473 04ce 68000000 		.4byte	0x68
 3474 04d2 02       		.uleb128 0x2
 3475 04d3 91       		.byte	0x91
 3476 04d4 74       		.sleb128 -12
 3477 04d5 00       		.byte	0
 3478 04d6 1F       		.uleb128 0x1f
 3479 04d7 84040000 		.4byte	.LASF90
 3480 04db 01       		.byte	0x1
 3481 04dc EF02     		.2byte	0x2ef
 3482 04de 00000000 		.4byte	.LFB80
 3483 04e2 CC000000 		.4byte	.LFE80-.LFB80
 3484 04e6 01       		.uleb128 0x1
 3485 04e7 9C       		.byte	0x9c
 3486 04e8 10       		.uleb128 0x10
 3487 04e9 A1020000 		.4byte	.LASF91
 3488 04ed 01       		.byte	0x1
 3489 04ee 1F       		.byte	0x1f
 3490 04ef E5000000 		.4byte	0xe5
 3491 04f3 05       		.uleb128 0x5
 3492 04f4 03       		.byte	0x3
 3493 04f5 14000000 		.4byte	instructionIndex
 3494 04f9 10       		.uleb128 0x10
 3495 04fa F7080000 		.4byte	.LASF92
 3496 04fe 01       		.byte	0x1
 3497 04ff 33       		.byte	0x33
 3498 0500 E0000000 		.4byte	0xe0
 3499 0504 05       		.uleb128 0x5
 3500 0505 03       		.byte	0x3
 3501 0506 36000000 		.4byte	turnStartedFlag
 3502 050a 10       		.uleb128 0x10
 3503 050b 3A080000 		.4byte	.LASF93
 3504 050f 01       		.byte	0x1
 3505 0510 34       		.byte	0x34
 3506 0511 E0000000 		.4byte	0xe0
 3507 0515 05       		.uleb128 0x5
 3508 0516 03       		.byte	0x3
 3509 0517 37000000 		.4byte	turnFinishedFlag
 3510 051b 10       		.uleb128 0x10
 3511 051c 28000000 		.4byte	.LASF94
 3512 0520 01       		.byte	0x1
 3513 0521 36       		.byte	0x36
 3514 0522 E0000000 		.4byte	0xe0
 3515 0526 05       		.uleb128 0x5
 3516 0527 03       		.byte	0x3
 3517 0528 38000000 		.4byte	forwardUntilTargetStartedFlag
 3518 052c 10       		.uleb128 0x10
 3519 052d 4F060000 		.4byte	.LASF95
 3520 0531 01       		.byte	0x1
 3521 0532 37       		.byte	0x37
 3522 0533 E0000000 		.4byte	0xe0
 3523 0537 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 77


 3524 0538 03       		.byte	0x3
 3525 0539 39000000 		.4byte	uTurnStartedFlag
 3526 053d 10       		.uleb128 0x10
 3527 053e 4D050000 		.4byte	.LASF96
 3528 0542 01       		.byte	0x1
 3529 0543 38       		.byte	0x38
 3530 0544 E0000000 		.4byte	0xe0
 3531 0548 05       		.uleb128 0x5
 3532 0549 03       		.byte	0x3
 3533 054a 3A000000 		.4byte	uTurnFinishedFlag
 3534 054e 10       		.uleb128 0x10
 3535 054f CF060000 		.4byte	.LASF97
 3536 0553 01       		.byte	0x1
 3537 0554 3A       		.byte	0x3a
 3538 0555 E0000000 		.4byte	0xe0
 3539 0559 05       		.uleb128 0x5
 3540 055a 03       		.byte	0x3
 3541 055b 3B000000 		.4byte	leftStatusFlag
 3542 055f 10       		.uleb128 0x10
 3543 0560 58020000 		.4byte	.LASF98
 3544 0564 01       		.byte	0x1
 3545 0565 3B       		.byte	0x3b
 3546 0566 E0000000 		.4byte	0xe0
 3547 056a 05       		.uleb128 0x5
 3548 056b 03       		.byte	0x3
 3549 056c 3C000000 		.4byte	rightStatusFlag
 3550 0570 10       		.uleb128 0x10
 3551 0571 B7050000 		.4byte	.LASF99
 3552 0575 01       		.byte	0x1
 3553 0576 3D       		.byte	0x3d
 3554 0577 E0000000 		.4byte	0xe0
 3555 057b 05       		.uleb128 0x5
 3556 057c 03       		.byte	0x3
 3557 057d 3D000000 		.4byte	spinCourseCorrectionStarted
 3558 0581 10       		.uleb128 0x10
 3559 0582 02030000 		.4byte	.LASF100
 3560 0586 01       		.byte	0x1
 3561 0587 3E       		.byte	0x3e
 3562 0588 E0000000 		.4byte	0xe0
 3563 058c 05       		.uleb128 0x5
 3564 058d 03       		.byte	0x3
 3565 058e 3E000000 		.4byte	currentIgnoreL
 3566 0592 10       		.uleb128 0x10
 3567 0593 25030000 		.4byte	.LASF101
 3568 0597 01       		.byte	0x1
 3569 0598 3F       		.byte	0x3f
 3570 0599 E0000000 		.4byte	0xe0
 3571 059d 05       		.uleb128 0x5
 3572 059e 03       		.byte	0x3
 3573 059f 3F000000 		.4byte	currentIgnoreR
 3574 05a3 10       		.uleb128 0x10
 3575 05a4 95080000 		.4byte	.LASF102
 3576 05a8 01       		.byte	0x1
 3577 05a9 43       		.byte	0x43
 3578 05aa E0000000 		.4byte	0xe0
 3579 05ae 05       		.uleb128 0x5
 3580 05af 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 78


 3581 05b0 40000000 		.4byte	totalLineCount
 3582 05b4 10       		.uleb128 0x10
 3583 05b5 66000000 		.4byte	.LASF103
 3584 05b9 01       		.byte	0x1
 3585 05ba 44       		.byte	0x44
 3586 05bb E0000000 		.4byte	0xe0
 3587 05bf 05       		.uleb128 0x5
 3588 05c0 03       		.byte	0x3
 3589 05c1 41000000 		.4byte	lineCount
 3590 05c5 10       		.uleb128 0x10
 3591 05c6 E9010000 		.4byte	.LASF104
 3592 05ca 01       		.byte	0x1
 3593 05cb 45       		.byte	0x45
 3594 05cc E0000000 		.4byte	0xe0
 3595 05d0 05       		.uleb128 0x5
 3596 05d1 03       		.byte	0x3
 3597 05d2 42000000 		.4byte	onLineFlag
 3598 05d6 10       		.uleb128 0x10
 3599 05d7 77040000 		.4byte	.LASF105
 3600 05db 01       		.byte	0x1
 3601 05dc 47       		.byte	0x47
 3602 05dd E0000000 		.4byte	0xe0
 3603 05e1 05       		.uleb128 0x5
 3604 05e2 03       		.byte	0x3
 3605 05e3 43000000 		.4byte	tooEarlyFlag
 3606 05e7 10       		.uleb128 0x10
 3607 05e8 02040000 		.4byte	.LASF106
 3608 05ec 01       		.byte	0x1
 3609 05ed 48       		.byte	0x48
 3610 05ee E0000000 		.4byte	0xe0
 3611 05f2 05       		.uleb128 0x5
 3612 05f3 03       		.byte	0x3
 3613 05f4 44000000 		.4byte	tooLateFlag
 3614 05f8 10       		.uleb128 0x10
 3615 05f9 5E040000 		.4byte	.LASF107
 3616 05fd 01       		.byte	0x1
 3617 05fe 4A       		.byte	0x4a
 3618 05ff E0000000 		.4byte	0xe0
 3619 0603 05       		.uleb128 0x5
 3620 0604 03       		.byte	0x3
 3621 0605 45000000 		.4byte	dontOverwriteRightIgnore
 3622 0609 10       		.uleb128 0x10
 3623 060a 94030000 		.4byte	.LASF108
 3624 060e 01       		.byte	0x1
 3625 060f 4B       		.byte	0x4b
 3626 0610 E0000000 		.4byte	0xe0
 3627 0614 05       		.uleb128 0x5
 3628 0615 03       		.byte	0x3
 3629 0616 46000000 		.4byte	dontOverwriteLeftIgnore
 3630 061a 1B       		.uleb128 0x1b
 3631 061b 45030000 		.4byte	.LASF109
 3632 061f 01       		.byte	0x1
 3633 0620 3A01     		.2byte	0x13a
 3634 0622 E0000000 		.4byte	0xe0
 3635 0626 05       		.uleb128 0x5
 3636 0627 03       		.byte	0x3
 3637 0628 57000000 		.4byte	forwardAfterTurnLIgnore
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 79


 3638 062c 1B       		.uleb128 0x1b
 3639 062d 10090000 		.4byte	.LASF110
 3640 0631 01       		.byte	0x1
 3641 0632 3B01     		.2byte	0x13b
 3642 0634 E0000000 		.4byte	0xe0
 3643 0638 05       		.uleb128 0x5
 3644 0639 03       		.byte	0x3
 3645 063a 58000000 		.4byte	forwardAfterTurnRIgnore
 3646 063e 20       		.uleb128 0x20
 3647 063f 8D020000 		.4byte	.LASF111
 3648 0643 07       		.byte	0x7
 3649 0644 1207     		.2byte	0x712
 3650 0646 4A060000 		.4byte	0x64a
 3651 064a 06       		.uleb128 0x6
 3652 064b 8B000000 		.4byte	0x8b
 3653 064f 21       		.uleb128 0x21
 3654 0650 747300   		.ascii	"ts\000"
 3655 0653 05       		.byte	0x5
 3656 0654 10       		.byte	0x10
 3657 0655 96000000 		.4byte	0x96
 3658 0659 05       		.uleb128 0x5
 3659 065a 03       		.byte	0x3
 3660 065b 00000000 		.4byte	ts
 3661 065f 22       		.uleb128 0x22
 3662 0660 E9030000 		.4byte	.LASF112
 3663 0664 05       		.byte	0x5
 3664 0665 11       		.byte	0x11
 3665 0666 A2000000 		.4byte	0xa2
 3666 066a 05       		.uleb128 0x5
 3667 066b 03       		.byte	0x3
 3668 066c 00000000 		.4byte	ts_enc
 3669 0670 22       		.uleb128 0x22
 3670 0671 45060000 		.4byte	.LASF113
 3671 0675 05       		.byte	0x5
 3672 0676 12       		.byte	0x12
 3673 0677 A2000000 		.4byte	0xa2
 3674 067b 05       		.uleb128 0x5
 3675 067c 03       		.byte	0x3
 3676 067d 00000000 		.4byte	ts_update
 3677 0681 22       		.uleb128 0x22
 3678 0682 70000000 		.4byte	.LASF114
 3679 0686 05       		.byte	0x5
 3680 0687 13       		.byte	0x13
 3681 0688 A2000000 		.4byte	0xa2
 3682 068c 05       		.uleb128 0x5
 3683 068d 03       		.byte	0x3
 3684 068e 00000000 		.4byte	ts_speed
 3685 0692 22       		.uleb128 0x22
 3686 0693 ED040000 		.4byte	.LASF115
 3687 0697 05       		.byte	0x5
 3688 0698 14       		.byte	0x14
 3689 0699 A2000000 		.4byte	0xa2
 3690 069d 05       		.uleb128 0x5
 3691 069e 03       		.byte	0x3
 3692 069f 00000000 		.4byte	ts_display
 3693 06a3 22       		.uleb128 0x22
 3694 06a4 25020000 		.4byte	.LASF116
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 80


 3695 06a8 05       		.byte	0x5
 3696 06a9 16       		.byte	0x16
 3697 06aa 96000000 		.4byte	0x96
 3698 06ae 05       		.uleb128 0x5
 3699 06af 03       		.byte	0x3
 3700 06b0 00000000 		.4byte	flag_ts_enc
 3701 06b4 22       		.uleb128 0x22
 3702 06b5 C7070000 		.4byte	.LASF117
 3703 06b9 05       		.byte	0x5
 3704 06ba 17       		.byte	0x17
 3705 06bb 96000000 		.4byte	0x96
 3706 06bf 05       		.uleb128 0x5
 3707 06c0 03       		.byte	0x3
 3708 06c1 00000000 		.4byte	flag_ts_update
 3709 06c5 22       		.uleb128 0x22
 3710 06c6 31050000 		.4byte	.LASF118
 3711 06ca 05       		.byte	0x5
 3712 06cb 18       		.byte	0x18
 3713 06cc 96000000 		.4byte	0x96
 3714 06d0 05       		.uleb128 0x5
 3715 06d1 03       		.byte	0x3
 3716 06d2 00000000 		.4byte	flag_ts_speed
 3717 06d6 22       		.uleb128 0x22
 3718 06d7 50070000 		.4byte	.LASF119
 3719 06db 05       		.byte	0x5
 3720 06dc 19       		.byte	0x19
 3721 06dd 96000000 		.4byte	0x96
 3722 06e1 05       		.uleb128 0x5
 3723 06e2 03       		.byte	0x3
 3724 06e3 00000000 		.4byte	flag_ts_display
 3725 06e7 22       		.uleb128 0x22
 3726 06e8 5D030000 		.4byte	.LASF120
 3727 06ec 05       		.byte	0x5
 3728 06ed 1B       		.byte	0x1b
 3729 06ee 96000000 		.4byte	0x96
 3730 06f2 05       		.uleb128 0x5
 3731 06f3 03       		.byte	0x3
 3732 06f4 00000000 		.4byte	flag_rx
 3733 06f8 22       		.uleb128 0x22
 3734 06f9 25050000 		.4byte	.LASF121
 3735 06fd 05       		.byte	0x5
 3736 06fe 1C       		.byte	0x1c
 3737 06ff 96000000 		.4byte	0x96
 3738 0703 05       		.uleb128 0x5
 3739 0704 03       		.byte	0x3
 3740 0705 00000000 		.4byte	flag_packet
 3741 0709 22       		.uleb128 0x22
 3742 070a 3D020000 		.4byte	.LASF122
 3743 070e 05       		.byte	0x5
 3744 070f 1D       		.byte	0x1d
 3745 0710 96000000 		.4byte	0x96
 3746 0714 05       		.uleb128 0x5
 3747 0715 03       		.byte	0x3
 3748 0716 00000000 		.4byte	flag_KB_string
 3749 071a 22       		.uleb128 0x22
 3750 071b 11030000 		.4byte	.LASF123
 3751 071f 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 81


 3752 0720 1F       		.byte	0x1f
 3753 0721 96000000 		.4byte	0x96
 3754 0725 05       		.uleb128 0x5
 3755 0726 03       		.byte	0x3
 3756 0727 00000000 		.4byte	dataready_flag
 3757 072b 22       		.uleb128 0x22
 3758 072c D3050000 		.4byte	.LASF124
 3759 0730 05       		.byte	0x5
 3760 0731 21       		.byte	0x21
 3761 0732 96000000 		.4byte	0x96
 3762 0736 05       		.uleb128 0x5
 3763 0737 03       		.byte	0x3
 3764 0738 00000000 		.4byte	flag_rf_transmission_active
 3765 073c 07       		.uleb128 0x7
 3766 073d 84000000 		.4byte	0x84
 3767 0741 4C070000 		.4byte	0x74c
 3768 0745 08       		.uleb128 0x8
 3769 0746 7D000000 		.4byte	0x7d
 3770 074a 3F       		.byte	0x3f
 3771 074b 00       		.byte	0
 3772 074c 22       		.uleb128 0x22
 3773 074d D6070000 		.4byte	.LASF125
 3774 0751 05       		.byte	0x5
 3775 0752 24       		.byte	0x24
 3776 0753 3C070000 		.4byte	0x73c
 3777 0757 05       		.uleb128 0x5
 3778 0758 03       		.byte	0x3
 3779 0759 00000000 		.4byte	displaystring
 3780 075d 22       		.uleb128 0x22
 3781 075e 82030000 		.4byte	.LASF126
 3782 0762 05       		.byte	0x5
 3783 0763 25       		.byte	0x25
 3784 0764 3C070000 		.4byte	0x73c
 3785 0768 05       		.uleb128 0x5
 3786 0769 03       		.byte	0x3
 3787 076a 00000000 		.4byte	line
 3788 076e 22       		.uleb128 0x22
 3789 076f 9F010000 		.4byte	.LASF127
 3790 0773 05       		.byte	0x5
 3791 0774 25       		.byte	0x25
 3792 0775 3C070000 		.4byte	0x73c
 3793 0779 05       		.uleb128 0x5
 3794 077a 03       		.byte	0x3
 3795 077b 00000000 		.4byte	entry
 3796 077f 07       		.uleb128 0x7
 3797 0780 96000000 		.4byte	0x96
 3798 0784 8F070000 		.4byte	0x78f
 3799 0788 08       		.uleb128 0x8
 3800 0789 7D000000 		.4byte	0x7d
 3801 078d 3F       		.byte	0x3f
 3802 078e 00       		.byte	0
 3803 078f 22       		.uleb128 0x22
 3804 0790 8D050000 		.4byte	.LASF128
 3805 0794 05       		.byte	0x5
 3806 0795 26       		.byte	0x26
 3807 0796 7F070000 		.4byte	0x77f
 3808 079a 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 82


 3809 079b 03       		.byte	0x3
 3810 079c 00000000 		.4byte	usbBuffer
 3811 07a0 22       		.uleb128 0x22
 3812 07a1 73050000 		.4byte	.LASF129
 3813 07a5 05       		.byte	0x5
 3814 07a6 3C       		.byte	0x3c
 3815 07a7 FA000000 		.4byte	0xfa
 3816 07ab 05       		.uleb128 0x5
 3817 07ac 03       		.byte	0x3
 3818 07ad 00000000 		.4byte	system_state
 3819 07b1 07       		.uleb128 0x7
 3820 07b2 68000000 		.4byte	0x68
 3821 07b6 C7070000 		.4byte	0x7c7
 3822 07ba 08       		.uleb128 0x8
 3823 07bb 7D000000 		.4byte	0x7d
 3824 07bf 0E       		.byte	0xe
 3825 07c0 08       		.uleb128 0x8
 3826 07c1 7D000000 		.4byte	0x7d
 3827 07c5 12       		.byte	0x12
 3828 07c6 00       		.byte	0
 3829 07c7 23       		.uleb128 0x23
 3830 07c8 6D617000 		.ascii	"map\000"
 3831 07cc 08       		.byte	0x8
 3832 07cd 04       		.byte	0x4
 3833 07ce B1070000 		.4byte	0x7b1
 3834 07d2 07       		.uleb128 0x7
 3835 07d3 68000000 		.4byte	0x68
 3836 07d7 E8070000 		.4byte	0x7e8
 3837 07db 08       		.uleb128 0x8
 3838 07dc 7D000000 		.4byte	0x7d
 3839 07e0 05       		.byte	0x5
 3840 07e1 08       		.uleb128 0x8
 3841 07e2 7D000000 		.4byte	0x7d
 3842 07e6 01       		.byte	0x1
 3843 07e7 00       		.byte	0
 3844 07e8 24       		.uleb128 0x24
 3845 07e9 B1070000 		.4byte	.LASF130
 3846 07ed 08       		.byte	0x8
 3847 07ee 05       		.byte	0x5
 3848 07ef D2070000 		.4byte	0x7d2
 3849 07f3 22       		.uleb128 0x22
 3850 07f4 07080000 		.4byte	.LASF131
 3851 07f8 01       		.byte	0x1
 3852 07f9 19       		.byte	0x19
 3853 07fa 84020000 		.4byte	0x284
 3854 07fe 05       		.uleb128 0x5
 3855 07ff 03       		.byte	0x3
 3856 0800 00000000 		.4byte	currentDirection
 3857 0804 22       		.uleb128 0x22
 3858 0805 54000000 		.4byte	.LASF132
 3859 0809 01       		.byte	0x1
 3860 080a 19       		.byte	0x19
 3861 080b 84020000 		.4byte	0x284
 3862 080f 05       		.uleb128 0x5
 3863 0810 03       		.byte	0x3
 3864 0811 00000000 		.4byte	previousDirection
 3865 0815 22       		.uleb128 0x22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 83


 3866 0816 EF070000 		.4byte	.LASF133
 3867 081a 01       		.byte	0x1
 3868 081b 1B       		.byte	0x1b
 3869 081c D3010000 		.4byte	0x1d3
 3870 0820 05       		.uleb128 0x5
 3871 0821 03       		.byte	0x3
 3872 0822 00000000 		.4byte	currentRobotOrientation
 3873 0826 22       		.uleb128 0x22
 3874 0827 AE060000 		.4byte	.LASF134
 3875 082b 01       		.byte	0x1
 3876 082c 1B       		.byte	0x1b
 3877 082d D3010000 		.4byte	0x1d3
 3878 0831 05       		.uleb128 0x5
 3879 0832 03       		.byte	0x3
 3880 0833 00000000 		.4byte	previousOrientation
 3881 0837 22       		.uleb128 0x22
 3882 0838 82080000 		.4byte	.LASF135
 3883 083c 01       		.byte	0x1
 3884 083d 1C       		.byte	0x1c
 3885 083e 79020000 		.4byte	0x279
 3886 0842 05       		.uleb128 0x5
 3887 0843 03       		.byte	0x3
 3888 0844 00000000 		.4byte	currentInstruction
 3889 0848 22       		.uleb128 0x22
 3890 0849 9A060000 		.4byte	.LASF136
 3891 084d 01       		.byte	0x1
 3892 084e 1D       		.byte	0x1d
 3893 084f 79020000 		.4byte	0x279
 3894 0853 05       		.uleb128 0x5
 3895 0854 03       		.byte	0x3
 3896 0855 00000000 		.4byte	previousInstruction
 3897 0859 22       		.uleb128 0x22
 3898 085a 4B080000 		.4byte	.LASF137
 3899 085e 01       		.byte	0x1
 3900 085f 1E       		.byte	0x1e
 3901 0860 6A080000 		.4byte	0x86a
 3902 0864 05       		.uleb128 0x5
 3903 0865 03       		.byte	0x3
 3904 0866 00000000 		.4byte	instructionList
 3905 086a 25       		.uleb128 0x25
 3906 086b 04       		.byte	0x4
 3907 086c 79020000 		.4byte	0x279
 3908 0870 21       		.uleb128 0x21
 3909 0871 733300   		.ascii	"s3\000"
 3910 0874 01       		.byte	0x1
 3911 0875 24       		.byte	0x24
 3912 0876 96000000 		.4byte	0x96
 3913 087a 05       		.uleb128 0x5
 3914 087b 03       		.byte	0x3
 3915 087c 00000000 		.4byte	s3
 3916 0880 21       		.uleb128 0x21
 3917 0881 733400   		.ascii	"s4\000"
 3918 0884 01       		.byte	0x1
 3919 0885 24       		.byte	0x24
 3920 0886 96000000 		.4byte	0x96
 3921 088a 05       		.uleb128 0x5
 3922 088b 03       		.byte	0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 84


 3923 088c 00000000 		.4byte	s4
 3924 0890 21       		.uleb128 0x21
 3925 0891 733500   		.ascii	"s5\000"
 3926 0894 01       		.byte	0x1
 3927 0895 24       		.byte	0x24
 3928 0896 96000000 		.4byte	0x96
 3929 089a 05       		.uleb128 0x5
 3930 089b 03       		.byte	0x3
 3931 089c 00000000 		.4byte	s5
 3932 08a0 21       		.uleb128 0x21
 3933 08a1 733600   		.ascii	"s6\000"
 3934 08a4 01       		.byte	0x1
 3935 08a5 24       		.byte	0x24
 3936 08a6 96000000 		.4byte	0x96
 3937 08aa 05       		.uleb128 0x5
 3938 08ab 03       		.byte	0x3
 3939 08ac 00000000 		.4byte	s6
 3940 08b0 22       		.uleb128 0x22
 3941 08b1 0B060000 		.4byte	.LASF138
 3942 08b5 01       		.byte	0x1
 3943 08b6 29       		.byte	0x29
 3944 08b7 AE000000 		.4byte	0xae
 3945 08bb 05       		.uleb128 0x5
 3946 08bc 03       		.byte	0x3
 3947 08bd 00000000 		.4byte	totalMilliseconds
 3948 08c1 22       		.uleb128 0x22
 3949 08c2 00000000 		.4byte	.LASF139
 3950 08c6 01       		.byte	0x1
 3951 08c7 2A       		.byte	0x2a
 3952 08c8 D2000000 		.4byte	0xd2
 3953 08cc 05       		.uleb128 0x5
 3954 08cd 03       		.byte	0x3
 3955 08ce 00000000 		.4byte	totalDistance
 3956 08d2 07       		.uleb128 0x7
 3957 08d3 84000000 		.4byte	0x84
 3958 08d7 E2080000 		.4byte	0x8e2
 3959 08db 08       		.uleb128 0x8
 3960 08dc 7D000000 		.4byte	0x7d
 3961 08e0 44       		.byte	0x44
 3962 08e1 00       		.byte	0
 3963 08e2 22       		.uleb128 0x22
 3964 08e3 C0070000 		.4byte	.LASF140
 3965 08e7 01       		.byte	0x1
 3966 08e8 2C       		.byte	0x2c
 3967 08e9 D2080000 		.4byte	0x8d2
 3968 08ed 05       		.uleb128 0x5
 3969 08ee 03       		.byte	0x3
 3970 08ef 00000000 		.4byte	buffer
 3971 08f3 22       		.uleb128 0x22
 3972 08f4 AC030000 		.4byte	.LASF141
 3973 08f8 01       		.byte	0x1
 3974 08f9 2D       		.byte	0x2d
 3975 08fa 68000000 		.4byte	0x68
 3976 08fe 05       		.uleb128 0x5
 3977 08ff 03       		.byte	0x3
 3978 0900 00000000 		.4byte	quadDec2Count
 3979 0904 22       		.uleb128 0x22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 85


 3980 0905 EC000000 		.4byte	.LASF142
 3981 0909 01       		.byte	0x1
 3982 090a 2E       		.byte	0x2e
 3983 090b 68000000 		.4byte	0x68
 3984 090f 05       		.uleb128 0x5
 3985 0910 03       		.byte	0x3
 3986 0911 00000000 		.4byte	timerInt
 3987 0915 22       		.uleb128 0x22
 3988 0916 3B060000 		.4byte	.LASF143
 3989 091a 01       		.byte	0x1
 3990 091b 2F       		.byte	0x2f
 3991 091c 68000000 		.4byte	0x68
 3992 0920 05       		.uleb128 0x5
 3993 0921 03       		.byte	0x3
 3994 0922 00000000 		.4byte	keepLedOn
 3995 0926 22       		.uleb128 0x22
 3996 0927 DE010000 		.4byte	.LASF144
 3997 092b 01       		.byte	0x1
 3998 092c 31       		.byte	0x31
 3999 092d AE000000 		.4byte	0xae
 4000 0931 05       		.uleb128 0x5
 4001 0932 03       		.byte	0x3
 4002 0933 00000000 		.4byte	stopBuffer
 4003 0937 22       		.uleb128 0x22
 4004 0938 4B090000 		.4byte	.LASF145
 4005 093c 01       		.byte	0x1
 4006 093d 32       		.byte	0x32
 4007 093e A2000000 		.4byte	0xa2
 4008 0942 05       		.uleb128 0x5
 4009 0943 03       		.byte	0x3
 4010 0944 00000000 		.4byte	forwardBuffer
 4011 0948 22       		.uleb128 0x22
 4012 0949 6C080000 		.4byte	.LASF146
 4013 094d 01       		.byte	0x1
 4014 094e 4D       		.byte	0x4d
 4015 094f EA000000 		.4byte	0xea
 4016 0953 05       		.uleb128 0x5
 4017 0954 03       		.byte	0x3
 4018 0955 00000000 		.4byte	junctionConfiguration
 4019 0959 22       		.uleb128 0x22
 4020 095a F8040000 		.4byte	.LASF147
 4021 095e 01       		.byte	0x1
 4022 095f 4E       		.byte	0x4e
 4023 0960 96000000 		.4byte	0x96
 4024 0964 05       		.uleb128 0x5
 4025 0965 03       		.byte	0x3
 4026 0966 00000000 		.4byte	currentFoodListIndex
 4027 096a 22       		.uleb128 0x22
 4028 096b 0E040000 		.4byte	.LASF148
 4029 096f 01       		.byte	0x1
 4030 0970 50       		.byte	0x50
 4031 0971 D2000000 		.4byte	0xd2
 4032 0975 05       		.uleb128 0x5
 4033 0976 03       		.byte	0x3
 4034 0977 00000000 		.4byte	blockSizeTotal
 4035 097b 22       		.uleb128 0x22
 4036 097c EF050000 		.4byte	.LASF149
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 86


 4037 0980 01       		.byte	0x1
 4038 0981 C9       		.byte	0xc9
 4039 0982 D2000000 		.4byte	0xd2
 4040 0986 05       		.uleb128 0x5
 4041 0987 03       		.byte	0x3
 4042 0988 00000000 		.4byte	xBlocksize
 4043 098c 22       		.uleb128 0x22
 4044 098d FA050000 		.4byte	.LASF150
 4045 0991 01       		.byte	0x1
 4046 0992 CA       		.byte	0xca
 4047 0993 D2000000 		.4byte	0xd2
 4048 0997 05       		.uleb128 0x5
 4049 0998 03       		.byte	0x3
 4050 0999 00000000 		.4byte	yBlocksize
 4051 099d 22       		.uleb128 0x22
 4052 099e 68050000 		.4byte	.LASF151
 4053 09a2 01       		.byte	0x1
 4054 09a3 CB       		.byte	0xcb
 4055 09a4 96000000 		.4byte	0x96
 4056 09a8 05       		.uleb128 0x5
 4057 09a9 03       		.byte	0x3
 4058 09aa 00000000 		.4byte	currentRow
 4059 09ae 22       		.uleb128 0x22
 4060 09af 74020000 		.4byte	.LASF152
 4061 09b3 01       		.byte	0x1
 4062 09b4 CC       		.byte	0xcc
 4063 09b5 96000000 		.4byte	0x96
 4064 09b9 05       		.uleb128 0x5
 4065 09ba 03       		.byte	0x3
 4066 09bb 00000000 		.4byte	currentCol
 4067 09bf 22       		.uleb128 0x22
 4068 09c0 3A090000 		.4byte	.LASF153
 4069 09c4 01       		.byte	0x1
 4070 09c5 CE       		.byte	0xce
 4071 09c6 96000000 		.4byte	0x96
 4072 09ca 05       		.uleb128 0x5
 4073 09cb 03       		.byte	0x3
 4074 09cc 00000000 		.4byte	stoppedAfterTurn
 4075 09d0 22       		.uleb128 0x22
 4076 09d1 C2060000 		.4byte	.LASF154
 4077 09d5 01       		.byte	0x1
 4078 09d6 CF       		.byte	0xcf
 4079 09d7 96000000 		.4byte	0x96
 4080 09db 05       		.uleb128 0x5
 4081 09dc 03       		.byte	0x3
 4082 09dd 00000000 		.4byte	ignoreSensor
 4083 09e1 22       		.uleb128 0x22
 4084 09e2 25070000 		.4byte	.LASF155
 4085 09e6 01       		.byte	0x1
 4086 09e7 F7       		.byte	0xf7
 4087 09e8 84020000 		.4byte	0x284
 4088 09ec 05       		.uleb128 0x5
 4089 09ed 03       		.byte	0x3
 4090 09ee 00000000 		.4byte	lastDirectionAfter180
 4091 09f2 26       		.uleb128 0x26
 4092 09f3 12020000 		.4byte	.LASF156
 4093 09f7 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 87


 4094 09f8 3901     		.2byte	0x139
 4095 09fa 96000000 		.4byte	0x96
 4096 09fe 05       		.uleb128 0x5
 4097 09ff 03       		.byte	0x3
 4098 0a00 00000000 		.4byte	firstTurnIteration
 4099 0a04 00       		.byte	0
 4100              		.section	.debug_abbrev,"",%progbits
 4101              	.Ldebug_abbrev0:
 4102 0000 01       		.uleb128 0x1
 4103 0001 11       		.uleb128 0x11
 4104 0002 01       		.byte	0x1
 4105 0003 25       		.uleb128 0x25
 4106 0004 0E       		.uleb128 0xe
 4107 0005 13       		.uleb128 0x13
 4108 0006 0B       		.uleb128 0xb
 4109 0007 03       		.uleb128 0x3
 4110 0008 0E       		.uleb128 0xe
 4111 0009 1B       		.uleb128 0x1b
 4112 000a 0E       		.uleb128 0xe
 4113 000b 55       		.uleb128 0x55
 4114 000c 17       		.uleb128 0x17
 4115 000d 11       		.uleb128 0x11
 4116 000e 01       		.uleb128 0x1
 4117 000f 10       		.uleb128 0x10
 4118 0010 17       		.uleb128 0x17
 4119 0011 00       		.byte	0
 4120 0012 00       		.byte	0
 4121 0013 02       		.uleb128 0x2
 4122 0014 24       		.uleb128 0x24
 4123 0015 00       		.byte	0
 4124 0016 0B       		.uleb128 0xb
 4125 0017 0B       		.uleb128 0xb
 4126 0018 3E       		.uleb128 0x3e
 4127 0019 0B       		.uleb128 0xb
 4128 001a 03       		.uleb128 0x3
 4129 001b 0E       		.uleb128 0xe
 4130 001c 00       		.byte	0
 4131 001d 00       		.byte	0
 4132 001e 03       		.uleb128 0x3
 4133 001f 16       		.uleb128 0x16
 4134 0020 00       		.byte	0
 4135 0021 03       		.uleb128 0x3
 4136 0022 0E       		.uleb128 0xe
 4137 0023 3A       		.uleb128 0x3a
 4138 0024 0B       		.uleb128 0xb
 4139 0025 3B       		.uleb128 0x3b
 4140 0026 0B       		.uleb128 0xb
 4141 0027 49       		.uleb128 0x49
 4142 0028 13       		.uleb128 0x13
 4143 0029 00       		.byte	0
 4144 002a 00       		.byte	0
 4145 002b 04       		.uleb128 0x4
 4146 002c 24       		.uleb128 0x24
 4147 002d 00       		.byte	0
 4148 002e 0B       		.uleb128 0xb
 4149 002f 0B       		.uleb128 0xb
 4150 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 88


 4151 0031 0B       		.uleb128 0xb
 4152 0032 03       		.uleb128 0x3
 4153 0033 08       		.uleb128 0x8
 4154 0034 00       		.byte	0
 4155 0035 00       		.byte	0
 4156 0036 05       		.uleb128 0x5
 4157 0037 16       		.uleb128 0x16
 4158 0038 00       		.byte	0
 4159 0039 03       		.uleb128 0x3
 4160 003a 0E       		.uleb128 0xe
 4161 003b 3A       		.uleb128 0x3a
 4162 003c 0B       		.uleb128 0xb
 4163 003d 3B       		.uleb128 0x3b
 4164 003e 05       		.uleb128 0x5
 4165 003f 49       		.uleb128 0x49
 4166 0040 13       		.uleb128 0x13
 4167 0041 00       		.byte	0
 4168 0042 00       		.byte	0
 4169 0043 06       		.uleb128 0x6
 4170 0044 35       		.uleb128 0x35
 4171 0045 00       		.byte	0
 4172 0046 49       		.uleb128 0x49
 4173 0047 13       		.uleb128 0x13
 4174 0048 00       		.byte	0
 4175 0049 00       		.byte	0
 4176 004a 07       		.uleb128 0x7
 4177 004b 01       		.uleb128 0x1
 4178 004c 01       		.byte	0x1
 4179 004d 49       		.uleb128 0x49
 4180 004e 13       		.uleb128 0x13
 4181 004f 01       		.uleb128 0x1
 4182 0050 13       		.uleb128 0x13
 4183 0051 00       		.byte	0
 4184 0052 00       		.byte	0
 4185 0053 08       		.uleb128 0x8
 4186 0054 21       		.uleb128 0x21
 4187 0055 00       		.byte	0
 4188 0056 49       		.uleb128 0x49
 4189 0057 13       		.uleb128 0x13
 4190 0058 2F       		.uleb128 0x2f
 4191 0059 0B       		.uleb128 0xb
 4192 005a 00       		.byte	0
 4193 005b 00       		.byte	0
 4194 005c 09       		.uleb128 0x9
 4195 005d 13       		.uleb128 0x13
 4196 005e 01       		.byte	0x1
 4197 005f 03       		.uleb128 0x3
 4198 0060 0E       		.uleb128 0xe
 4199 0061 0B       		.uleb128 0xb
 4200 0062 0B       		.uleb128 0xb
 4201 0063 3A       		.uleb128 0x3a
 4202 0064 0B       		.uleb128 0xb
 4203 0065 3B       		.uleb128 0x3b
 4204 0066 0B       		.uleb128 0xb
 4205 0067 01       		.uleb128 0x1
 4206 0068 13       		.uleb128 0x13
 4207 0069 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 89


 4208 006a 00       		.byte	0
 4209 006b 0A       		.uleb128 0xa
 4210 006c 0D       		.uleb128 0xd
 4211 006d 00       		.byte	0
 4212 006e 03       		.uleb128 0x3
 4213 006f 0E       		.uleb128 0xe
 4214 0070 3A       		.uleb128 0x3a
 4215 0071 0B       		.uleb128 0xb
 4216 0072 3B       		.uleb128 0x3b
 4217 0073 0B       		.uleb128 0xb
 4218 0074 49       		.uleb128 0x49
 4219 0075 13       		.uleb128 0x13
 4220 0076 38       		.uleb128 0x38
 4221 0077 0B       		.uleb128 0xb
 4222 0078 00       		.byte	0
 4223 0079 00       		.byte	0
 4224 007a 0B       		.uleb128 0xb
 4225 007b 04       		.uleb128 0x4
 4226 007c 01       		.byte	0x1
 4227 007d 03       		.uleb128 0x3
 4228 007e 0E       		.uleb128 0xe
 4229 007f 0B       		.uleb128 0xb
 4230 0080 0B       		.uleb128 0xb
 4231 0081 49       		.uleb128 0x49
 4232 0082 13       		.uleb128 0x13
 4233 0083 3A       		.uleb128 0x3a
 4234 0084 0B       		.uleb128 0xb
 4235 0085 3B       		.uleb128 0x3b
 4236 0086 0B       		.uleb128 0xb
 4237 0087 01       		.uleb128 0x1
 4238 0088 13       		.uleb128 0x13
 4239 0089 00       		.byte	0
 4240 008a 00       		.byte	0
 4241 008b 0C       		.uleb128 0xc
 4242 008c 28       		.uleb128 0x28
 4243 008d 00       		.byte	0
 4244 008e 03       		.uleb128 0x3
 4245 008f 08       		.uleb128 0x8
 4246 0090 1C       		.uleb128 0x1c
 4247 0091 0B       		.uleb128 0xb
 4248 0092 00       		.byte	0
 4249 0093 00       		.byte	0
 4250 0094 0D       		.uleb128 0xd
 4251 0095 28       		.uleb128 0x28
 4252 0096 00       		.byte	0
 4253 0097 03       		.uleb128 0x3
 4254 0098 0E       		.uleb128 0xe
 4255 0099 1C       		.uleb128 0x1c
 4256 009a 0B       		.uleb128 0xb
 4257 009b 00       		.byte	0
 4258 009c 00       		.byte	0
 4259 009d 0E       		.uleb128 0xe
 4260 009e 2E       		.uleb128 0x2e
 4261 009f 01       		.byte	0x1
 4262 00a0 3F       		.uleb128 0x3f
 4263 00a1 19       		.uleb128 0x19
 4264 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 90


 4265 00a3 0E       		.uleb128 0xe
 4266 00a4 3A       		.uleb128 0x3a
 4267 00a5 0B       		.uleb128 0xb
 4268 00a6 3B       		.uleb128 0x3b
 4269 00a7 0B       		.uleb128 0xb
 4270 00a8 27       		.uleb128 0x27
 4271 00a9 19       		.uleb128 0x19
 4272 00aa 11       		.uleb128 0x11
 4273 00ab 01       		.uleb128 0x1
 4274 00ac 12       		.uleb128 0x12
 4275 00ad 06       		.uleb128 0x6
 4276 00ae 40       		.uleb128 0x40
 4277 00af 18       		.uleb128 0x18
 4278 00b0 9642     		.uleb128 0x2116
 4279 00b2 19       		.uleb128 0x19
 4280 00b3 01       		.uleb128 0x1
 4281 00b4 13       		.uleb128 0x13
 4282 00b5 00       		.byte	0
 4283 00b6 00       		.byte	0
 4284 00b7 0F       		.uleb128 0xf
 4285 00b8 0B       		.uleb128 0xb
 4286 00b9 01       		.byte	0x1
 4287 00ba 11       		.uleb128 0x11
 4288 00bb 01       		.uleb128 0x1
 4289 00bc 12       		.uleb128 0x12
 4290 00bd 06       		.uleb128 0x6
 4291 00be 00       		.byte	0
 4292 00bf 00       		.byte	0
 4293 00c0 10       		.uleb128 0x10
 4294 00c1 34       		.uleb128 0x34
 4295 00c2 00       		.byte	0
 4296 00c3 03       		.uleb128 0x3
 4297 00c4 0E       		.uleb128 0xe
 4298 00c5 3A       		.uleb128 0x3a
 4299 00c6 0B       		.uleb128 0xb
 4300 00c7 3B       		.uleb128 0x3b
 4301 00c8 0B       		.uleb128 0xb
 4302 00c9 49       		.uleb128 0x49
 4303 00ca 13       		.uleb128 0x13
 4304 00cb 02       		.uleb128 0x2
 4305 00cc 18       		.uleb128 0x18
 4306 00cd 00       		.byte	0
 4307 00ce 00       		.byte	0
 4308 00cf 11       		.uleb128 0x11
 4309 00d0 2E       		.uleb128 0x2e
 4310 00d1 00       		.byte	0
 4311 00d2 3F       		.uleb128 0x3f
 4312 00d3 19       		.uleb128 0x19
 4313 00d4 03       		.uleb128 0x3
 4314 00d5 0E       		.uleb128 0xe
 4315 00d6 3A       		.uleb128 0x3a
 4316 00d7 0B       		.uleb128 0xb
 4317 00d8 3B       		.uleb128 0x3b
 4318 00d9 0B       		.uleb128 0xb
 4319 00da 27       		.uleb128 0x27
 4320 00db 19       		.uleb128 0x19
 4321 00dc 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 91


 4322 00dd 01       		.uleb128 0x1
 4323 00de 12       		.uleb128 0x12
 4324 00df 06       		.uleb128 0x6
 4325 00e0 40       		.uleb128 0x40
 4326 00e1 18       		.uleb128 0x18
 4327 00e2 9742     		.uleb128 0x2117
 4328 00e4 19       		.uleb128 0x19
 4329 00e5 00       		.byte	0
 4330 00e6 00       		.byte	0
 4331 00e7 12       		.uleb128 0x12
 4332 00e8 2E       		.uleb128 0x2e
 4333 00e9 00       		.byte	0
 4334 00ea 3F       		.uleb128 0x3f
 4335 00eb 19       		.uleb128 0x19
 4336 00ec 03       		.uleb128 0x3
 4337 00ed 0E       		.uleb128 0xe
 4338 00ee 3A       		.uleb128 0x3a
 4339 00ef 0B       		.uleb128 0xb
 4340 00f0 3B       		.uleb128 0x3b
 4341 00f1 0B       		.uleb128 0xb
 4342 00f2 27       		.uleb128 0x27
 4343 00f3 19       		.uleb128 0x19
 4344 00f4 11       		.uleb128 0x11
 4345 00f5 01       		.uleb128 0x1
 4346 00f6 12       		.uleb128 0x12
 4347 00f7 06       		.uleb128 0x6
 4348 00f8 40       		.uleb128 0x40
 4349 00f9 18       		.uleb128 0x18
 4350 00fa 9642     		.uleb128 0x2116
 4351 00fc 19       		.uleb128 0x19
 4352 00fd 00       		.byte	0
 4353 00fe 00       		.byte	0
 4354 00ff 13       		.uleb128 0x13
 4355 0100 2E       		.uleb128 0x2e
 4356 0101 00       		.byte	0
 4357 0102 3F       		.uleb128 0x3f
 4358 0103 19       		.uleb128 0x19
 4359 0104 03       		.uleb128 0x3
 4360 0105 0E       		.uleb128 0xe
 4361 0106 3A       		.uleb128 0x3a
 4362 0107 0B       		.uleb128 0xb
 4363 0108 3B       		.uleb128 0x3b
 4364 0109 0B       		.uleb128 0xb
 4365 010a 49       		.uleb128 0x49
 4366 010b 13       		.uleb128 0x13
 4367 010c 11       		.uleb128 0x11
 4368 010d 01       		.uleb128 0x1
 4369 010e 12       		.uleb128 0x12
 4370 010f 06       		.uleb128 0x6
 4371 0110 40       		.uleb128 0x40
 4372 0111 18       		.uleb128 0x18
 4373 0112 9642     		.uleb128 0x2116
 4374 0114 19       		.uleb128 0x19
 4375 0115 00       		.byte	0
 4376 0116 00       		.byte	0
 4377 0117 14       		.uleb128 0x14
 4378 0118 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 92


 4379 0119 01       		.byte	0x1
 4380 011a 3F       		.uleb128 0x3f
 4381 011b 19       		.uleb128 0x19
 4382 011c 03       		.uleb128 0x3
 4383 011d 0E       		.uleb128 0xe
 4384 011e 3A       		.uleb128 0x3a
 4385 011f 0B       		.uleb128 0xb
 4386 0120 3B       		.uleb128 0x3b
 4387 0121 0B       		.uleb128 0xb
 4388 0122 27       		.uleb128 0x27
 4389 0123 19       		.uleb128 0x19
 4390 0124 49       		.uleb128 0x49
 4391 0125 13       		.uleb128 0x13
 4392 0126 11       		.uleb128 0x11
 4393 0127 01       		.uleb128 0x1
 4394 0128 12       		.uleb128 0x12
 4395 0129 06       		.uleb128 0x6
 4396 012a 40       		.uleb128 0x40
 4397 012b 18       		.uleb128 0x18
 4398 012c 9642     		.uleb128 0x2116
 4399 012e 19       		.uleb128 0x19
 4400 012f 01       		.uleb128 0x1
 4401 0130 13       		.uleb128 0x13
 4402 0131 00       		.byte	0
 4403 0132 00       		.byte	0
 4404 0133 15       		.uleb128 0x15
 4405 0134 05       		.uleb128 0x5
 4406 0135 00       		.byte	0
 4407 0136 03       		.uleb128 0x3
 4408 0137 0E       		.uleb128 0xe
 4409 0138 3A       		.uleb128 0x3a
 4410 0139 0B       		.uleb128 0xb
 4411 013a 3B       		.uleb128 0x3b
 4412 013b 0B       		.uleb128 0xb
 4413 013c 49       		.uleb128 0x49
 4414 013d 13       		.uleb128 0x13
 4415 013e 02       		.uleb128 0x2
 4416 013f 18       		.uleb128 0x18
 4417 0140 00       		.byte	0
 4418 0141 00       		.byte	0
 4419 0142 16       		.uleb128 0x16
 4420 0143 34       		.uleb128 0x34
 4421 0144 00       		.byte	0
 4422 0145 03       		.uleb128 0x3
 4423 0146 08       		.uleb128 0x8
 4424 0147 3A       		.uleb128 0x3a
 4425 0148 0B       		.uleb128 0xb
 4426 0149 3B       		.uleb128 0x3b
 4427 014a 0B       		.uleb128 0xb
 4428 014b 49       		.uleb128 0x49
 4429 014c 13       		.uleb128 0x13
 4430 014d 02       		.uleb128 0x2
 4431 014e 18       		.uleb128 0x18
 4432 014f 00       		.byte	0
 4433 0150 00       		.byte	0
 4434 0151 17       		.uleb128 0x17
 4435 0152 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 93


 4436 0153 00       		.byte	0
 4437 0154 3F       		.uleb128 0x3f
 4438 0155 19       		.uleb128 0x19
 4439 0156 03       		.uleb128 0x3
 4440 0157 0E       		.uleb128 0xe
 4441 0158 3A       		.uleb128 0x3a
 4442 0159 0B       		.uleb128 0xb
 4443 015a 3B       		.uleb128 0x3b
 4444 015b 0B       		.uleb128 0xb
 4445 015c 11       		.uleb128 0x11
 4446 015d 01       		.uleb128 0x1
 4447 015e 12       		.uleb128 0x12
 4448 015f 06       		.uleb128 0x6
 4449 0160 40       		.uleb128 0x40
 4450 0161 18       		.uleb128 0x18
 4451 0162 9742     		.uleb128 0x2117
 4452 0164 19       		.uleb128 0x19
 4453 0165 00       		.byte	0
 4454 0166 00       		.byte	0
 4455 0167 18       		.uleb128 0x18
 4456 0168 2E       		.uleb128 0x2e
 4457 0169 00       		.byte	0
 4458 016a 3F       		.uleb128 0x3f
 4459 016b 19       		.uleb128 0x19
 4460 016c 03       		.uleb128 0x3
 4461 016d 0E       		.uleb128 0xe
 4462 016e 3A       		.uleb128 0x3a
 4463 016f 0B       		.uleb128 0xb
 4464 0170 3B       		.uleb128 0x3b
 4465 0171 0B       		.uleb128 0xb
 4466 0172 49       		.uleb128 0x49
 4467 0173 13       		.uleb128 0x13
 4468 0174 11       		.uleb128 0x11
 4469 0175 01       		.uleb128 0x1
 4470 0176 12       		.uleb128 0x12
 4471 0177 06       		.uleb128 0x6
 4472 0178 40       		.uleb128 0x40
 4473 0179 18       		.uleb128 0x18
 4474 017a 9742     		.uleb128 0x2117
 4475 017c 19       		.uleb128 0x19
 4476 017d 00       		.byte	0
 4477 017e 00       		.byte	0
 4478 017f 19       		.uleb128 0x19
 4479 0180 2E       		.uleb128 0x2e
 4480 0181 00       		.byte	0
 4481 0182 3F       		.uleb128 0x3f
 4482 0183 19       		.uleb128 0x19
 4483 0184 03       		.uleb128 0x3
 4484 0185 0E       		.uleb128 0xe
 4485 0186 3A       		.uleb128 0x3a
 4486 0187 0B       		.uleb128 0xb
 4487 0188 3B       		.uleb128 0x3b
 4488 0189 05       		.uleb128 0x5
 4489 018a 49       		.uleb128 0x49
 4490 018b 13       		.uleb128 0x13
 4491 018c 11       		.uleb128 0x11
 4492 018d 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 94


 4493 018e 12       		.uleb128 0x12
 4494 018f 06       		.uleb128 0x6
 4495 0190 40       		.uleb128 0x40
 4496 0191 18       		.uleb128 0x18
 4497 0192 9742     		.uleb128 0x2117
 4498 0194 19       		.uleb128 0x19
 4499 0195 00       		.byte	0
 4500 0196 00       		.byte	0
 4501 0197 1A       		.uleb128 0x1a
 4502 0198 2E       		.uleb128 0x2e
 4503 0199 01       		.byte	0x1
 4504 019a 3F       		.uleb128 0x3f
 4505 019b 19       		.uleb128 0x19
 4506 019c 03       		.uleb128 0x3
 4507 019d 0E       		.uleb128 0xe
 4508 019e 3A       		.uleb128 0x3a
 4509 019f 0B       		.uleb128 0xb
 4510 01a0 3B       		.uleb128 0x3b
 4511 01a1 05       		.uleb128 0x5
 4512 01a2 49       		.uleb128 0x49
 4513 01a3 13       		.uleb128 0x13
 4514 01a4 11       		.uleb128 0x11
 4515 01a5 01       		.uleb128 0x1
 4516 01a6 12       		.uleb128 0x12
 4517 01a7 06       		.uleb128 0x6
 4518 01a8 40       		.uleb128 0x40
 4519 01a9 18       		.uleb128 0x18
 4520 01aa 9642     		.uleb128 0x2116
 4521 01ac 19       		.uleb128 0x19
 4522 01ad 01       		.uleb128 0x1
 4523 01ae 13       		.uleb128 0x13
 4524 01af 00       		.byte	0
 4525 01b0 00       		.byte	0
 4526 01b1 1B       		.uleb128 0x1b
 4527 01b2 34       		.uleb128 0x34
 4528 01b3 00       		.byte	0
 4529 01b4 03       		.uleb128 0x3
 4530 01b5 0E       		.uleb128 0xe
 4531 01b6 3A       		.uleb128 0x3a
 4532 01b7 0B       		.uleb128 0xb
 4533 01b8 3B       		.uleb128 0x3b
 4534 01b9 05       		.uleb128 0x5
 4535 01ba 49       		.uleb128 0x49
 4536 01bb 13       		.uleb128 0x13
 4537 01bc 02       		.uleb128 0x2
 4538 01bd 18       		.uleb128 0x18
 4539 01be 00       		.byte	0
 4540 01bf 00       		.byte	0
 4541 01c0 1C       		.uleb128 0x1c
 4542 01c1 2E       		.uleb128 0x2e
 4543 01c2 00       		.byte	0
 4544 01c3 3F       		.uleb128 0x3f
 4545 01c4 19       		.uleb128 0x19
 4546 01c5 03       		.uleb128 0x3
 4547 01c6 0E       		.uleb128 0xe
 4548 01c7 3A       		.uleb128 0x3a
 4549 01c8 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 95


 4550 01c9 3B       		.uleb128 0x3b
 4551 01ca 05       		.uleb128 0x5
 4552 01cb 11       		.uleb128 0x11
 4553 01cc 01       		.uleb128 0x1
 4554 01cd 12       		.uleb128 0x12
 4555 01ce 06       		.uleb128 0x6
 4556 01cf 40       		.uleb128 0x40
 4557 01d0 18       		.uleb128 0x18
 4558 01d1 9742     		.uleb128 0x2117
 4559 01d3 19       		.uleb128 0x19
 4560 01d4 00       		.byte	0
 4561 01d5 00       		.byte	0
 4562 01d6 1D       		.uleb128 0x1d
 4563 01d7 2E       		.uleb128 0x2e
 4564 01d8 01       		.byte	0x1
 4565 01d9 3F       		.uleb128 0x3f
 4566 01da 19       		.uleb128 0x19
 4567 01db 03       		.uleb128 0x3
 4568 01dc 0E       		.uleb128 0xe
 4569 01dd 3A       		.uleb128 0x3a
 4570 01de 0B       		.uleb128 0xb
 4571 01df 3B       		.uleb128 0x3b
 4572 01e0 05       		.uleb128 0x5
 4573 01e1 49       		.uleb128 0x49
 4574 01e2 13       		.uleb128 0x13
 4575 01e3 11       		.uleb128 0x11
 4576 01e4 01       		.uleb128 0x1
 4577 01e5 12       		.uleb128 0x12
 4578 01e6 06       		.uleb128 0x6
 4579 01e7 40       		.uleb128 0x40
 4580 01e8 18       		.uleb128 0x18
 4581 01e9 9742     		.uleb128 0x2117
 4582 01eb 19       		.uleb128 0x19
 4583 01ec 01       		.uleb128 0x1
 4584 01ed 13       		.uleb128 0x13
 4585 01ee 00       		.byte	0
 4586 01ef 00       		.byte	0
 4587 01f0 1E       		.uleb128 0x1e
 4588 01f1 2E       		.uleb128 0x2e
 4589 01f2 01       		.byte	0x1
 4590 01f3 3F       		.uleb128 0x3f
 4591 01f4 19       		.uleb128 0x19
 4592 01f5 03       		.uleb128 0x3
 4593 01f6 0E       		.uleb128 0xe
 4594 01f7 3A       		.uleb128 0x3a
 4595 01f8 0B       		.uleb128 0xb
 4596 01f9 3B       		.uleb128 0x3b
 4597 01fa 05       		.uleb128 0x5
 4598 01fb 11       		.uleb128 0x11
 4599 01fc 01       		.uleb128 0x1
 4600 01fd 12       		.uleb128 0x12
 4601 01fe 06       		.uleb128 0x6
 4602 01ff 40       		.uleb128 0x40
 4603 0200 18       		.uleb128 0x18
 4604 0201 9642     		.uleb128 0x2116
 4605 0203 19       		.uleb128 0x19
 4606 0204 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 96


 4607 0205 13       		.uleb128 0x13
 4608 0206 00       		.byte	0
 4609 0207 00       		.byte	0
 4610 0208 1F       		.uleb128 0x1f
 4611 0209 2E       		.uleb128 0x2e
 4612 020a 00       		.byte	0
 4613 020b 3F       		.uleb128 0x3f
 4614 020c 19       		.uleb128 0x19
 4615 020d 03       		.uleb128 0x3
 4616 020e 0E       		.uleb128 0xe
 4617 020f 3A       		.uleb128 0x3a
 4618 0210 0B       		.uleb128 0xb
 4619 0211 3B       		.uleb128 0x3b
 4620 0212 05       		.uleb128 0x5
 4621 0213 11       		.uleb128 0x11
 4622 0214 01       		.uleb128 0x1
 4623 0215 12       		.uleb128 0x12
 4624 0216 06       		.uleb128 0x6
 4625 0217 40       		.uleb128 0x40
 4626 0218 18       		.uleb128 0x18
 4627 0219 9642     		.uleb128 0x2116
 4628 021b 19       		.uleb128 0x19
 4629 021c 00       		.byte	0
 4630 021d 00       		.byte	0
 4631 021e 20       		.uleb128 0x20
 4632 021f 34       		.uleb128 0x34
 4633 0220 00       		.byte	0
 4634 0221 03       		.uleb128 0x3
 4635 0222 0E       		.uleb128 0xe
 4636 0223 3A       		.uleb128 0x3a
 4637 0224 0B       		.uleb128 0xb
 4638 0225 3B       		.uleb128 0x3b
 4639 0226 05       		.uleb128 0x5
 4640 0227 49       		.uleb128 0x49
 4641 0228 13       		.uleb128 0x13
 4642 0229 3F       		.uleb128 0x3f
 4643 022a 19       		.uleb128 0x19
 4644 022b 3C       		.uleb128 0x3c
 4645 022c 19       		.uleb128 0x19
 4646 022d 00       		.byte	0
 4647 022e 00       		.byte	0
 4648 022f 21       		.uleb128 0x21
 4649 0230 34       		.uleb128 0x34
 4650 0231 00       		.byte	0
 4651 0232 03       		.uleb128 0x3
 4652 0233 08       		.uleb128 0x8
 4653 0234 3A       		.uleb128 0x3a
 4654 0235 0B       		.uleb128 0xb
 4655 0236 3B       		.uleb128 0x3b
 4656 0237 0B       		.uleb128 0xb
 4657 0238 49       		.uleb128 0x49
 4658 0239 13       		.uleb128 0x13
 4659 023a 3F       		.uleb128 0x3f
 4660 023b 19       		.uleb128 0x19
 4661 023c 02       		.uleb128 0x2
 4662 023d 18       		.uleb128 0x18
 4663 023e 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 97


 4664 023f 00       		.byte	0
 4665 0240 22       		.uleb128 0x22
 4666 0241 34       		.uleb128 0x34
 4667 0242 00       		.byte	0
 4668 0243 03       		.uleb128 0x3
 4669 0244 0E       		.uleb128 0xe
 4670 0245 3A       		.uleb128 0x3a
 4671 0246 0B       		.uleb128 0xb
 4672 0247 3B       		.uleb128 0x3b
 4673 0248 0B       		.uleb128 0xb
 4674 0249 49       		.uleb128 0x49
 4675 024a 13       		.uleb128 0x13
 4676 024b 3F       		.uleb128 0x3f
 4677 024c 19       		.uleb128 0x19
 4678 024d 02       		.uleb128 0x2
 4679 024e 18       		.uleb128 0x18
 4680 024f 00       		.byte	0
 4681 0250 00       		.byte	0
 4682 0251 23       		.uleb128 0x23
 4683 0252 34       		.uleb128 0x34
 4684 0253 00       		.byte	0
 4685 0254 03       		.uleb128 0x3
 4686 0255 08       		.uleb128 0x8
 4687 0256 3A       		.uleb128 0x3a
 4688 0257 0B       		.uleb128 0xb
 4689 0258 3B       		.uleb128 0x3b
 4690 0259 0B       		.uleb128 0xb
 4691 025a 49       		.uleb128 0x49
 4692 025b 13       		.uleb128 0x13
 4693 025c 3F       		.uleb128 0x3f
 4694 025d 19       		.uleb128 0x19
 4695 025e 3C       		.uleb128 0x3c
 4696 025f 19       		.uleb128 0x19
 4697 0260 00       		.byte	0
 4698 0261 00       		.byte	0
 4699 0262 24       		.uleb128 0x24
 4700 0263 34       		.uleb128 0x34
 4701 0264 00       		.byte	0
 4702 0265 03       		.uleb128 0x3
 4703 0266 0E       		.uleb128 0xe
 4704 0267 3A       		.uleb128 0x3a
 4705 0268 0B       		.uleb128 0xb
 4706 0269 3B       		.uleb128 0x3b
 4707 026a 0B       		.uleb128 0xb
 4708 026b 49       		.uleb128 0x49
 4709 026c 13       		.uleb128 0x13
 4710 026d 3F       		.uleb128 0x3f
 4711 026e 19       		.uleb128 0x19
 4712 026f 3C       		.uleb128 0x3c
 4713 0270 19       		.uleb128 0x19
 4714 0271 00       		.byte	0
 4715 0272 00       		.byte	0
 4716 0273 25       		.uleb128 0x25
 4717 0274 0F       		.uleb128 0xf
 4718 0275 00       		.byte	0
 4719 0276 0B       		.uleb128 0xb
 4720 0277 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 98


 4721 0278 49       		.uleb128 0x49
 4722 0279 13       		.uleb128 0x13
 4723 027a 00       		.byte	0
 4724 027b 00       		.byte	0
 4725 027c 26       		.uleb128 0x26
 4726 027d 34       		.uleb128 0x34
 4727 027e 00       		.byte	0
 4728 027f 03       		.uleb128 0x3
 4729 0280 0E       		.uleb128 0xe
 4730 0281 3A       		.uleb128 0x3a
 4731 0282 0B       		.uleb128 0xb
 4732 0283 3B       		.uleb128 0x3b
 4733 0284 05       		.uleb128 0x5
 4734 0285 49       		.uleb128 0x49
 4735 0286 13       		.uleb128 0x13
 4736 0287 3F       		.uleb128 0x3f
 4737 0288 19       		.uleb128 0x19
 4738 0289 02       		.uleb128 0x2
 4739 028a 18       		.uleb128 0x18
 4740 028b 00       		.byte	0
 4741 028c 00       		.byte	0
 4742 028d 00       		.byte	0
 4743              		.section	.debug_aranges,"",%progbits
 4744 0000 9C000000 		.4byte	0x9c
 4745 0004 0200     		.2byte	0x2
 4746 0006 00000000 		.4byte	.Ldebug_info0
 4747 000a 04       		.byte	0x4
 4748 000b 00       		.byte	0
 4749 000c 0000     		.2byte	0
 4750 000e 0000     		.2byte	0
 4751 0010 00000000 		.4byte	.LFB64
 4752 0014 EC000000 		.4byte	.LFE64-.LFB64
 4753 0018 00000000 		.4byte	.LFB65
 4754 001c 18000000 		.4byte	.LFE65-.LFB65
 4755 0020 00000000 		.4byte	.LFB66
 4756 0024 18000000 		.4byte	.LFE66-.LFB66
 4757 0028 00000000 		.4byte	.LFB67
 4758 002c 18000000 		.4byte	.LFE67-.LFB67
 4759 0030 00000000 		.4byte	.LFB68
 4760 0034 18000000 		.4byte	.LFE68-.LFB68
 4761 0038 00000000 		.4byte	.LFB69
 4762 003c 70000000 		.4byte	.LFE69-.LFB69
 4763 0040 00000000 		.4byte	.LFB70
 4764 0044 F4000000 		.4byte	.LFE70-.LFB70
 4765 0048 00000000 		.4byte	.LFB71
 4766 004c 54000000 		.4byte	.LFE71-.LFB71
 4767 0050 00000000 		.4byte	.LFB72
 4768 0054 34000000 		.4byte	.LFE72-.LFB72
 4769 0058 00000000 		.4byte	.LFB73
 4770 005c 84000000 		.4byte	.LFE73-.LFB73
 4771 0060 00000000 		.4byte	.LFB74
 4772 0064 7C000000 		.4byte	.LFE74-.LFB74
 4773 0068 00000000 		.4byte	.LFB75
 4774 006c 84000000 		.4byte	.LFE75-.LFB75
 4775 0070 00000000 		.4byte	.LFB76
 4776 0074 D4060000 		.4byte	.LFE76-.LFB76
 4777 0078 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 99


 4778 007c 68000000 		.4byte	.LFE77-.LFB77
 4779 0080 00000000 		.4byte	.LFB78
 4780 0084 6C000000 		.4byte	.LFE78-.LFB78
 4781 0088 00000000 		.4byte	.LFB79
 4782 008c 3C010000 		.4byte	.LFE79-.LFB79
 4783 0090 00000000 		.4byte	.LFB80
 4784 0094 CC000000 		.4byte	.LFE80-.LFB80
 4785 0098 00000000 		.4byte	0
 4786 009c 00000000 		.4byte	0
 4787              		.section	.debug_ranges,"",%progbits
 4788              	.Ldebug_ranges0:
 4789 0000 00000000 		.4byte	.LFB64
 4790 0004 EC000000 		.4byte	.LFE64
 4791 0008 00000000 		.4byte	.LFB65
 4792 000c 18000000 		.4byte	.LFE65
 4793 0010 00000000 		.4byte	.LFB66
 4794 0014 18000000 		.4byte	.LFE66
 4795 0018 00000000 		.4byte	.LFB67
 4796 001c 18000000 		.4byte	.LFE67
 4797 0020 00000000 		.4byte	.LFB68
 4798 0024 18000000 		.4byte	.LFE68
 4799 0028 00000000 		.4byte	.LFB69
 4800 002c 70000000 		.4byte	.LFE69
 4801 0030 00000000 		.4byte	.LFB70
 4802 0034 F4000000 		.4byte	.LFE70
 4803 0038 00000000 		.4byte	.LFB71
 4804 003c 54000000 		.4byte	.LFE71
 4805 0040 00000000 		.4byte	.LFB72
 4806 0044 34000000 		.4byte	.LFE72
 4807 0048 00000000 		.4byte	.LFB73
 4808 004c 84000000 		.4byte	.LFE73
 4809 0050 00000000 		.4byte	.LFB74
 4810 0054 7C000000 		.4byte	.LFE74
 4811 0058 00000000 		.4byte	.LFB75
 4812 005c 84000000 		.4byte	.LFE75
 4813 0060 00000000 		.4byte	.LFB76
 4814 0064 D4060000 		.4byte	.LFE76
 4815 0068 00000000 		.4byte	.LFB77
 4816 006c 68000000 		.4byte	.LFE77
 4817 0070 00000000 		.4byte	.LFB78
 4818 0074 6C000000 		.4byte	.LFE78
 4819 0078 00000000 		.4byte	.LFB79
 4820 007c 3C010000 		.4byte	.LFE79
 4821 0080 00000000 		.4byte	.LFB80
 4822 0084 CC000000 		.4byte	.LFE80
 4823 0088 00000000 		.4byte	0
 4824 008c 00000000 		.4byte	0
 4825              		.section	.debug_line,"",%progbits
 4826              	.Ldebug_line0:
 4827 0000 E1040000 		.section	.debug_str,"MS",%progbits,1
 4827      02007001 
 4827      00000201 
 4827      FB0E0D00 
 4827      01010101 
 4828              	.LASF139:
 4829 0000 746F7461 		.ascii	"totalDistance\000"
 4829      6C446973 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 100


 4829      74616E63 
 4829      6500
 4830              	.LASF41:
 4831 000e 4F726965 		.ascii	"OrientationState\000"
 4831      6E746174 
 4831      696F6E53 
 4831      74617465 
 4831      00
 4832              	.LASF36:
 4833 001f 67325F73 		.ascii	"g2_speed\000"
 4833      70656564 
 4833      00
 4834              	.LASF94:
 4835 0028 666F7277 		.ascii	"forwardUntilTargetStartedFlag\000"
 4835      61726455 
 4835      6E74696C 
 4835      54617267 
 4835      65745374 
 4836              	.LASF56:
 4837 0046 526F626F 		.ascii	"RobotMovement\000"
 4837      744D6F76 
 4837      656D656E 
 4837      7400
 4838              	.LASF132:
 4839 0054 70726576 		.ascii	"previousDirection\000"
 4839      696F7573 
 4839      44697265 
 4839      6374696F 
 4839      6E00
 4840              	.LASF103:
 4841 0066 6C696E65 		.ascii	"lineCount\000"
 4841      436F756E 
 4841      7400
 4842              	.LASF114:
 4843 0070 74735F73 		.ascii	"ts_speed\000"
 4843      70656564 
 4843      00
 4844              	.LASF0:
 4845 0079 7369676E 		.ascii	"signed char\000"
 4845      65642063 
 4845      68617200 
 4846              	.LASF159:
 4847 0085 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4847      6F63756D 
 4847      656E7473 
 4847      5C476974 
 4847      4875625C 
 4848 00b4 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4848      635F636F 
 4848      64655F62 
 4848      6173655C 
 4848      43533330 
 4849              	.LASF69:
 4850 00d6 53345F44 		.ascii	"S4_DETECTED\000"
 4850      45544543 
 4850      54454400 
 4851              	.LASF51:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 101


 4852 00e2 64697265 		.ascii	"direction\000"
 4852      6374696F 
 4852      6E00
 4853              	.LASF142:
 4854 00ec 74696D65 		.ascii	"timerInt\000"
 4854      72496E74 
 4854      00
 4855              	.LASF157:
 4856 00f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4856      43313120 
 4856      352E342E 
 4856      31203230 
 4856      31363036 
 4857 0128 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4857      20726576 
 4857      6973696F 
 4857      6E203233 
 4857      37373135 
 4858 015b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4858      66756E63 
 4858      74696F6E 
 4858      2D736563 
 4858      74696F6E 
 4859              	.LASF82:
 4860 0183 626C6F63 		.ascii	"blocksToTarget\000"
 4860      6B73546F 
 4860      54617267 
 4860      657400
 4861              	.LASF29:
 4862 0192 67305F64 		.ascii	"g0_direction\000"
 4862      69726563 
 4862      74696F6E 
 4862      00
 4863              	.LASF127:
 4864 019f 656E7472 		.ascii	"entry\000"
 4864      7900
 4865              	.LASF7:
 4866 01a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4866      206C6F6E 
 4866      6720756E 
 4866      7369676E 
 4866      65642069 
 4867              	.LASF55:
 4868 01bc 65787065 		.ascii	"expectedOrientation\000"
 4868      63746564 
 4868      4F726965 
 4868      6E746174 
 4868      696F6E00 
 4869              	.LASF46:
 4870 01d0 75547572 		.ascii	"uTurn\000"
 4870      6E00
 4871              	.LASF26:
 4872 01d6 67305F78 		.ascii	"g0_xpos\000"
 4872      706F7300 
 4873              	.LASF144:
 4874 01de 73746F70 		.ascii	"stopBuffer\000"
 4874      42756666 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 102


 4874      657200
 4875              	.LASF104:
 4876 01e9 6F6E4C69 		.ascii	"onLineFlag\000"
 4876      6E65466C 
 4876      616700
 4877              	.LASF54:
 4878 01f4 64697374 		.ascii	"distanceToTarget\000"
 4878      616E6365 
 4878      546F5461 
 4878      72676574 
 4878      00
 4879              	.LASF48:
 4880 0205 53746F70 		.ascii	"StopAtTarget\000"
 4880      41745461 
 4880      72676574 
 4880      00
 4881              	.LASF156:
 4882 0212 66697273 		.ascii	"firstTurnIteration\000"
 4882      74547572 
 4882      6E497465 
 4882      72617469 
 4882      6F6E00
 4883              	.LASF116:
 4884 0225 666C6167 		.ascii	"flag_ts_enc\000"
 4884      5F74735F 
 4884      656E6300 
 4885              	.LASF68:
 4886 0231 53335F44 		.ascii	"S3_DETECTED\000"
 4886      45544543 
 4886      54454400 
 4887              	.LASF122:
 4888 023d 666C6167 		.ascii	"flag_KB_string\000"
 4888      5F4B425F 
 4888      73747269 
 4888      6E6700
 4889              	.LASF70:
 4890 024c 53355F44 		.ascii	"S5_DETECTED\000"
 4890      45544543 
 4890      54454400 
 4891              	.LASF98:
 4892 0258 72696768 		.ascii	"rightStatusFlag\000"
 4892      74537461 
 4892      74757346 
 4892      6C616700 
 4893              	.LASF50:
 4894 0268 496E7374 		.ascii	"Instruction\000"
 4894      72756374 
 4894      696F6E00 
 4895              	.LASF152:
 4896 0274 63757272 		.ascii	"currentCol\000"
 4896      656E7443 
 4896      6F6C00
 4897              	.LASF62:
 4898 027f 53746F70 		.ascii	"Stop\000"
 4898      00
 4899              	.LASF4:
 4900 0284 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 103


 4900      20696E74 
 4900      00
 4901              	.LASF111:
 4902 028d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4902      52784275 
 4902      66666572 
 4902      00
 4903              	.LASF88:
 4904 029a 636F756E 		.ascii	"count2\000"
 4904      743200
 4905              	.LASF91:
 4906 02a1 696E7374 		.ascii	"instructionIndex\000"
 4906      72756374 
 4906      696F6E49 
 4906      6E646578 
 4906      00
 4907              	.LASF77:
 4908 02b2 5370696E 		.ascii	"SpinTurnCourseCorrection\000"
 4908      5475726E 
 4908      436F7572 
 4908      7365436F 
 4908      72726563 
 4909              	.LASF47:
 4910 02cb 466F7277 		.ascii	"ForwardUntilTarget\000"
 4910      61726455 
 4910      6E74696C 
 4910      54617267 
 4910      657400
 4911              	.LASF66:
 4912 02de 4261636B 		.ascii	"Backward\000"
 4912      77617264 
 4912      00
 4913              	.LASF14:
 4914 02e7 75696E74 		.ascii	"uint8\000"
 4914      3800
 4915              	.LASF6:
 4916 02ed 6C6F6E67 		.ascii	"long long int\000"
 4916      206C6F6E 
 4916      6720696E 
 4916      7400
 4917              	.LASF20:
 4918 02fb 646F7562 		.ascii	"double\000"
 4918      6C6500
 4919              	.LASF100:
 4920 0302 63757272 		.ascii	"currentIgnoreL\000"
 4920      656E7449 
 4920      676E6F72 
 4920      654C00
 4921              	.LASF123:
 4922 0311 64617461 		.ascii	"dataready_flag\000"
 4922      72656164 
 4922      795F666C 
 4922      616700
 4923              	.LASF73:
 4924 0320 6D61696E 		.ascii	"main\000"
 4924      00
 4925              	.LASF101:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 104


 4926 0325 63757272 		.ascii	"currentIgnoreR\000"
 4926      656E7449 
 4926      676E6F72 
 4926      655200
 4927              	.LASF61:
 4928 0334 41646A75 		.ascii	"AdjustToTheRight\000"
 4928      7374546F 
 4928      54686552 
 4928      69676874 
 4928      00
 4929              	.LASF109:
 4930 0345 666F7277 		.ascii	"forwardAfterTurnLIgnore\000"
 4930      61726441 
 4930      66746572 
 4930      5475726E 
 4930      4C49676E 
 4931              	.LASF120:
 4932 035d 666C6167 		.ascii	"flag_rx\000"
 4932      5F727800 
 4933              	.LASF16:
 4934 0365 75696E74 		.ascii	"uint32\000"
 4934      333200
 4935              	.LASF86:
 4936 036c 6E657874 		.ascii	"nextInstruction\000"
 4936      496E7374 
 4936      72756374 
 4936      696F6E00 
 4937              	.LASF161:
 4938 037c 636F756E 		.ascii	"count\000"
 4938      7400
 4939              	.LASF126:
 4940 0382 6C696E65 		.ascii	"line\000"
 4940      00
 4941              	.LASF37:
 4942 0387 67325F64 		.ascii	"g2_direction\000"
 4942      69726563 
 4942      74696F6E 
 4942      00
 4943              	.LASF108:
 4944 0394 646F6E74 		.ascii	"dontOverwriteLeftIgnore\000"
 4944      4F766572 
 4944      77726974 
 4944      654C6566 
 4944      7449676E 
 4945              	.LASF141:
 4946 03ac 71756164 		.ascii	"quadDec2Count\000"
 4946      44656332 
 4946      436F756E 
 4946      7400
 4947              	.LASF58:
 4948 03ba 5475726E 		.ascii	"TurnRight\000"
 4948      52696768 
 4948      7400
 4949              	.LASF65:
 4950 03c4 466F7277 		.ascii	"ForwardAfterTurn\000"
 4950      61726441 
 4950      66746572 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 105


 4950      5475726E 
 4950      00
 4951              	.LASF49:
 4952 03d5 64617461 		.ascii	"data_main\000"
 4952      5F6D6169 
 4952      6E00
 4953              	.LASF80:
 4954 03df 626C6F63 		.ascii	"blocksize\000"
 4954      6B73697A 
 4954      6500
 4955              	.LASF112:
 4956 03e9 74735F65 		.ascii	"ts_enc\000"
 4956      6E6300
 4957              	.LASF5:
 4958 03f0 6C6F6E67 		.ascii	"long unsigned int\000"
 4958      20756E73 
 4958      69676E65 
 4958      6420696E 
 4958      7400
 4959              	.LASF106:
 4960 0402 746F6F4C 		.ascii	"tooLateFlag\000"
 4960      61746546 
 4960      6C616700 
 4961              	.LASF148:
 4962 040e 626C6F63 		.ascii	"blockSizeTotal\000"
 4962      6B53697A 
 4962      65546F74 
 4962      616C00
 4963              	.LASF162:
 4964 041d 526F7461 		.ascii	"RotateClockwise180Degrees\000"
 4964      7465436C 
 4964      6F636B77 
 4964      69736531 
 4964      38304465 
 4965              	.LASF64:
 4966 0437 77616974 		.ascii	"waitForTurn\000"
 4966      466F7254 
 4966      75726E00 
 4967              	.LASF57:
 4968 0443 466F7277 		.ascii	"Forward\000"
 4968      61726400 
 4969              	.LASF3:
 4970 044b 73686F72 		.ascii	"short unsigned int\000"
 4970      7420756E 
 4970      7369676E 
 4970      65642069 
 4970      6E7400
 4971              	.LASF107:
 4972 045e 646F6E74 		.ascii	"dontOverwriteRightIgnore\000"
 4972      4F766572 
 4972      77726974 
 4972      65526967 
 4972      68744967 
 4973              	.LASF105:
 4974 0477 746F6F45 		.ascii	"tooEarlyFlag\000"
 4974      61726C79 
 4974      466C6167 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 106


 4974      00
 4975              	.LASF90:
 4976 0484 53657452 		.ascii	"SetRobotMovement\000"
 4976      6F626F74 
 4976      4D6F7665 
 4976      6D656E74 
 4976      00
 4977              	.LASF17:
 4978 0495 696E7438 		.ascii	"int8\000"
 4978      00
 4979              	.LASF78:
 4980 049a 73706565 		.ascii	"speedTimer\000"
 4980      6454696D 
 4980      657200
 4981              	.LASF12:
 4982 04a5 5F5F696E 		.ascii	"__int32_t\000"
 4982      7433325F 
 4982      7400
 4983              	.LASF158:
 4984 04af 6D61696E 		.ascii	"main.c\000"
 4984      2E6300
 4985              	.LASF31:
 4986 04b6 67315F79 		.ascii	"g1_ypos\000"
 4986      706F7300 
 4987              	.LASF84:
 4988 04be 4D6F7665 		.ascii	"MoveToNextInstruction\000"
 4988      546F4E65 
 4988      7874496E 
 4988      73747275 
 4988      6374696F 
 4989              	.LASF2:
 4990 04d4 73686F72 		.ascii	"short int\000"
 4990      7420696E 
 4990      7400
 4991              	.LASF89:
 4992 04de 71756164 		.ascii	"quadPulseCount\000"
 4992      50756C73 
 4992      65436F75 
 4992      6E7400
 4993              	.LASF115:
 4994 04ed 74735F64 		.ascii	"ts_display\000"
 4994      6973706C 
 4994      617900
 4995              	.LASF147:
 4996 04f8 63757272 		.ascii	"currentFoodListIndex\000"
 4996      656E7446 
 4996      6F6F644C 
 4996      69737449 
 4996      6E646578 
 4997              	.LASF75:
 4998 050d 466F7277 		.ascii	"ForwardCourseCorrection\000"
 4998      61726443 
 4998      6F757273 
 4998      65436F72 
 4998      72656374 
 4999              	.LASF121:
 5000 0525 666C6167 		.ascii	"flag_packet\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 107


 5000      5F706163 
 5000      6B657400 
 5001              	.LASF118:
 5002 0531 666C6167 		.ascii	"flag_ts_speed\000"
 5002      5F74735F 
 5002      73706565 
 5002      6400
 5003              	.LASF32:
 5004 053f 67315F73 		.ascii	"g1_speed\000"
 5004      70656564 
 5004      00
 5005              	.LASF39:
 5006 0548 4C656674 		.ascii	"Left\000"
 5006      00
 5007              	.LASF96:
 5008 054d 75547572 		.ascii	"uTurnFinishedFlag\000"
 5008      6E46696E 
 5008      69736865 
 5008      64466C61 
 5008      6700
 5009              	.LASF10:
 5010 055f 73697A65 		.ascii	"sizetype\000"
 5010      74797065 
 5010      00
 5011              	.LASF151:
 5012 0568 63757272 		.ascii	"currentRow\000"
 5012      656E7452 
 5012      6F7700
 5013              	.LASF129:
 5014 0573 73797374 		.ascii	"system_state\000"
 5014      656D5F73 
 5014      74617465 
 5014      00
 5015              	.LASF33:
 5016 0580 67315F64 		.ascii	"g1_direction\000"
 5016      69726563 
 5016      74696F6E 
 5016      00
 5017              	.LASF128:
 5018 058d 75736242 		.ascii	"usbBuffer\000"
 5018      75666665 
 5018      7200
 5019              	.LASF44:
 5020 0597 77616974 		.ascii	"waitForLeftTurn\000"
 5020      466F724C 
 5020      65667454 
 5020      75726E00 
 5021              	.LASF30:
 5022 05a7 67315F78 		.ascii	"g1_xpos\000"
 5022      706F7300 
 5023              	.LASF35:
 5024 05af 67325F79 		.ascii	"g2_ypos\000"
 5024      706F7300 
 5025              	.LASF99:
 5026 05b7 7370696E 		.ascii	"spinCourseCorrectionStarted\000"
 5026      436F7572 
 5026      7365436F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 108


 5026      72726563 
 5026      74696F6E 
 5027              	.LASF124:
 5028 05d3 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5028      5F72665F 
 5028      7472616E 
 5028      736D6973 
 5028      73696F6E 
 5029              	.LASF149:
 5030 05ef 78426C6F 		.ascii	"xBlocksize\000"
 5030      636B7369 
 5030      7A6500
 5031              	.LASF150:
 5032 05fa 79426C6F 		.ascii	"yBlocksize\000"
 5032      636B7369 
 5032      7A6500
 5033              	.LASF19:
 5034 0605 666C6F61 		.ascii	"float\000"
 5034      7400
 5035              	.LASF138:
 5036 060b 746F7461 		.ascii	"totalMilliseconds\000"
 5036      6C4D696C 
 5036      6C697365 
 5036      636F6E64 
 5036      7300
 5037              	.LASF63:
 5038 061d 556E6B6E 		.ascii	"Unknown\000"
 5038      6F776E00 
 5039              	.LASF85:
 5040 0625 47657449 		.ascii	"GetInstructionAtIndex\000"
 5040      6E737472 
 5040      75637469 
 5040      6F6E4174 
 5040      496E6465 
 5041              	.LASF143:
 5042 063b 6B656570 		.ascii	"keepLedOn\000"
 5042      4C65644F 
 5042      6E00
 5043              	.LASF113:
 5044 0645 74735F75 		.ascii	"ts_update\000"
 5044      70646174 
 5044      6500
 5045              	.LASF95:
 5046 064f 75547572 		.ascii	"uTurnStartedFlag\000"
 5046      6E537461 
 5046      72746564 
 5046      466C6167 
 5046      00
 5047              	.LASF13:
 5048 0660 696E7433 		.ascii	"int32_t\000"
 5048      325F7400 
 5049              	.LASF1:
 5050 0668 756E7369 		.ascii	"unsigned char\000"
 5050      676E6564 
 5050      20636861 
 5050      7200
 5051              	.LASF15:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 109


 5052 0676 75696E74 		.ascii	"uint16\000"
 5052      313600
 5053              	.LASF42:
 5054 067d 496E7374 		.ascii	"InstructionDirection\000"
 5054      72756374 
 5054      696F6E44 
 5054      69726563 
 5054      74696F6E 
 5055              	.LASF34:
 5056 0692 67325F78 		.ascii	"g2_xpos\000"
 5056      706F7300 
 5057              	.LASF136:
 5058 069a 70726576 		.ascii	"previousInstruction\000"
 5058      696F7573 
 5058      496E7374 
 5058      72756374 
 5058      696F6E00 
 5059              	.LASF134:
 5060 06ae 70726576 		.ascii	"previousOrientation\000"
 5060      696F7573 
 5060      4F726965 
 5060      6E746174 
 5060      696F6E00 
 5061              	.LASF154:
 5062 06c2 69676E6F 		.ascii	"ignoreSensor\000"
 5062      72655365 
 5062      6E736F72 
 5062      00
 5063              	.LASF97:
 5064 06cf 6C656674 		.ascii	"leftStatusFlag\000"
 5064      53746174 
 5064      7573466C 
 5064      616700
 5065              	.LASF81:
 5066 06de 63757272 		.ascii	"currentInstructionDirection\000"
 5066      656E7449 
 5066      6E737472 
 5066      75637469 
 5066      6F6E4469 
 5067              	.LASF24:
 5068 06fa 726F626F 		.ascii	"robot_ypos\000"
 5068      745F7970 
 5068      6F7300
 5069              	.LASF60:
 5070 0705 41646A75 		.ascii	"AdjustToTheLeft\000"
 5070      7374546F 
 5070      5468654C 
 5070      65667400 
 5071              	.LASF43:
 5072 0715 476F466F 		.ascii	"GoForward\000"
 5072      72776172 
 5072      6400
 5073              	.LASF40:
 5074 071f 52696768 		.ascii	"Right\000"
 5074      7400
 5075              	.LASF155:
 5076 0725 6C617374 		.ascii	"lastDirectionAfter180\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 110


 5076      44697265 
 5076      6374696F 
 5076      6E416674 
 5076      65723138 
 5077              	.LASF76:
 5078 073b 5370696E 		.ascii	"SpinCourseCorrection\000"
 5078      436F7572 
 5078      7365436F 
 5078      72726563 
 5078      74696F6E 
 5079              	.LASF119:
 5080 0750 666C6167 		.ascii	"flag_ts_display\000"
 5080      5F74735F 
 5080      64697370 
 5080      6C617900 
 5081              	.LASF74:
 5082 0760 6E657744 		.ascii	"newDistance\000"
 5082      69737461 
 5082      6E636500 
 5083              	.LASF9:
 5084 076c 6C6F6E67 		.ascii	"long double\000"
 5084      20646F75 
 5084      626C6500 
 5085              	.LASF11:
 5086 0778 63686172 		.ascii	"char\000"
 5086      00
 5087              	.LASF27:
 5088 077d 67305F79 		.ascii	"g0_ypos\000"
 5088      706F7300 
 5089              	.LASF67:
 5090 0785 5370696E 		.ascii	"Spin180\000"
 5090      31383000 
 5091              	.LASF8:
 5092 078d 756E7369 		.ascii	"unsigned int\000"
 5092      676E6564 
 5092      20696E74 
 5092      00
 5093              	.LASF21:
 5094 079a 72737369 		.ascii	"rssi\000"
 5094      00
 5095              	.LASF22:
 5096 079f 696E6465 		.ascii	"index\000"
 5096      7800
 5097              	.LASF71:
 5098 07a5 53365F44 		.ascii	"S6_DETECTED\000"
 5098      45544543 
 5098      54454400 
 5099              	.LASF130:
 5100 07b1 666F6F64 		.ascii	"food_list\000"
 5100      5F6C6973 
 5100      7400
 5101              	.LASF38:
 5102 07bb 446F776E 		.ascii	"Down\000"
 5102      00
 5103              	.LASF140:
 5104 07c0 62756666 		.ascii	"buffer\000"
 5104      657200
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 111


 5105              	.LASF117:
 5106 07c7 666C6167 		.ascii	"flag_ts_update\000"
 5106      5F74735F 
 5106      75706461 
 5106      746500
 5107              	.LASF125:
 5108 07d6 64697370 		.ascii	"displaystring\000"
 5108      6C617973 
 5108      7472696E 
 5108      6700
 5109              	.LASF23:
 5110 07e4 726F626F 		.ascii	"robot_xpos\000"
 5110      745F7870 
 5110      6F7300
 5111              	.LASF133:
 5112 07ef 63757272 		.ascii	"currentRobotOrientation\000"
 5112      656E7452 
 5112      6F626F74 
 5112      4F726965 
 5112      6E746174 
 5113              	.LASF131:
 5114 0807 63757272 		.ascii	"currentDirection\000"
 5114      656E7444 
 5114      69726563 
 5114      74696F6E 
 5114      00
 5115              	.LASF79:
 5116 0818 4765744D 		.ascii	"GetMovementAccordingToInstruction\000"
 5116      6F76656D 
 5116      656E7441 
 5116      63636F72 
 5116      64696E67 
 5117              	.LASF93:
 5118 083a 7475726E 		.ascii	"turnFinishedFlag\000"
 5118      46696E69 
 5118      73686564 
 5118      466C6167 
 5118      00
 5119              	.LASF137:
 5120 084b 696E7374 		.ascii	"instructionList\000"
 5120      72756374 
 5120      696F6E4C 
 5120      69737400 
 5121              	.LASF45:
 5122 085b 77616974 		.ascii	"waitForRightTurn\000"
 5122      466F7252 
 5122      69676874 
 5122      5475726E 
 5122      00
 5123              	.LASF146:
 5124 086c 6A756E63 		.ascii	"junctionConfiguration\000"
 5124      74696F6E 
 5124      436F6E66 
 5124      69677572 
 5124      6174696F 
 5125              	.LASF135:
 5126 0882 63757272 		.ascii	"currentInstruction\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 112


 5126      656E7449 
 5126      6E737472 
 5126      75637469 
 5126      6F6E00
 5127              	.LASF102:
 5128 0895 746F7461 		.ascii	"totalLineCount\000"
 5128      6C4C696E 
 5128      65436F75 
 5128      6E7400
 5129              	.LASF87:
 5130 08a4 636F756E 		.ascii	"count1\000"
 5130      743100
 5131              	.LASF72:
 5132 08ab 54494D45 		.ascii	"TIMER_FINISH\000"
 5132      525F4649 
 5132      4E495348 
 5132      00
 5133              	.LASF83:
 5134 08b8 52657365 		.ascii	"ResetSensorFlags\000"
 5134      7453656E 
 5134      736F7246 
 5134      6C616773 
 5134      00
 5135              	.LASF18:
 5136 08c9 696E7431 		.ascii	"int16\000"
 5136      3600
 5137              	.LASF160:
 5138 08cf 71756164 		.ascii	"quadCountToRPM\000"
 5138      436F756E 
 5138      74546F52 
 5138      504D00
 5139              	.LASF52:
 5140 08de 69676E6F 		.ascii	"ignoreL\000"
 5140      72654C00 
 5141              	.LASF59:
 5142 08e6 5475726E 		.ascii	"TurnLeft\000"
 5142      4C656674 
 5142      00
 5143              	.LASF53:
 5144 08ef 69676E6F 		.ascii	"ignoreR\000"
 5144      72655200 
 5145              	.LASF92:
 5146 08f7 7475726E 		.ascii	"turnStartedFlag\000"
 5146      53746172 
 5146      74656446 
 5146      6C616700 
 5147              	.LASF28:
 5148 0907 67305F73 		.ascii	"g0_speed\000"
 5148      70656564 
 5148      00
 5149              	.LASF110:
 5150 0910 666F7277 		.ascii	"forwardAfterTurnRIgnore\000"
 5150      61726441 
 5150      66746572 
 5150      5475726E 
 5150      5249676E 
 5151              	.LASF25:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccOMat0T.s 			page 113


 5152 0928 726F626F 		.ascii	"robot_orientation\000"
 5152      745F6F72 
 5152      69656E74 
 5152      6174696F 
 5152      6E00
 5153              	.LASF153:
 5154 093a 73746F70 		.ascii	"stoppedAfterTurn\000"
 5154      70656441 
 5154      66746572 
 5154      5475726E 
 5154      00
 5155              	.LASF145:
 5156 094b 666F7277 		.ascii	"forwardBuffer\000"
 5156      61726442 
 5156      75666665 
 5156      7200
 5157              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
