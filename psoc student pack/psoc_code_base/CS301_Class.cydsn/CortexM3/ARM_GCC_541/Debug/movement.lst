ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	rangeMovementMultiplier
  20              		.data
  21              		.align	2
  22              		.type	rangeMovementMultiplier, %object
  23              		.size	rangeMovementMultiplier, 4
  24              	rangeMovementMultiplier:
  25 0000 CDCCCC3E 		.word	1053609165
  26              		.global	minMovementMultiplier
  27              		.align	2
  28              		.type	minMovementMultiplier, %object
  29              		.size	minMovementMultiplier, 4
  30              	minMovementMultiplier:
  31 0004 3333333F 		.word	1060320051
  32              		.global	turnCount
  33              		.bss
  34              		.align	1
  35              		.type	turnCount, %object
  36              		.size	turnCount, 2
  37              	turnCount:
  38 0000 0000     		.space	2
  39              		.global	maxTurnCount
  40              		.data
  41              		.align	1
  42              		.type	maxTurnCount, %object
  43              		.size	maxTurnCount, 2
  44              	maxTurnCount:
  45 0008 1900     		.short	25
  46              		.section	.text.stopMoving,"ax",%progbits
  47              		.align	2
  48              		.global	stopMoving
  49              		.thumb
  50              		.thumb_func
  51              		.type	stopMoving, %function
  52              	stopMoving:
  53              	.LFB64:
  54              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 2


   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
  17:movement.c    **** #define maxForwardPWM 9830
  18:movement.c    **** #define maxTurningPWM 6553
  19:movement.c    **** 
  20:movement.c    **** // CHANGE SPEED
  21:movement.c    **** // max speed is 20.83cm/s
  22:movement.c    **** // min speed is 11.69cm/s
  23:movement.c    **** #define MOVEMENT_SPEED_MULTIPLIER 0.9
  24:movement.c    **** 
  25:movement.c    **** float rangeMovementMultiplier = 0.4;
  26:movement.c    **** float minMovementMultiplier = 0.7;
  27:movement.c    **** 
  28:movement.c    **** uint16 turnCount = 0;
  29:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  30:movement.c    **** 
  31:movement.c    **** // Direction/ Movement macros
  32:movement.c    **** //* ========================================
  33:movement.c    **** // stop moving
  34:movement.c    **** void stopMoving() {
  55              		.loc 1 34 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  35:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  65              		.loc 1 35 0
  66 0004 4FF40040 		mov	r0, #32768
  67 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  36:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  68              		.loc 1 36 0
  69 000c 4FF40040 		mov	r0, #32768
  70 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  37:movement.c    **** }
  71              		.loc 1 37 0
  72 0014 00BF     		nop
  73 0016 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE64:
  76              		.size	stopMoving, .-stopMoving
  77              		.global	__aeabi_f2d
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 3


  78              		.global	__aeabi_dmul
  79              		.global	__aeabi_dadd
  80              		.global	__aeabi_d2f
  81              		.global	__aeabi_fmul
  82              		.global	__aeabi_fadd
  83              		.global	__aeabi_f2uiz
  84              		.global	__aeabi_fsub
  85              		.section	.text.adjustRight,"ax",%progbits
  86              		.align	2
  87              		.global	adjustRight
  88              		.thumb
  89              		.thumb_func
  90              		.type	adjustRight, %function
  91              	adjustRight:
  92              	.LFB65:
  38:movement.c    **** 
  39:movement.c    **** // keep rotating clockwise
  40:movement.c    **** // used for adjusting deviations
  41:movement.c    **** void adjustRight() {
  93              		.loc 1 41 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 8
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97 0000 B0B5     		push	{r4, r5, r7, lr}
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 82B0     		sub	sp, sp, #8
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
  42:movement.c    ****     // totalMultiplier = 0.5 + (0.7 * movement_speed_multiplier)
  43:movement.c    ****     float totalMultiplier = minMovementMultiplier + (rangeMovementMultiplier * MOVEMENT_SPEED_MULTI
 107              		.loc 1 43 0
 108 0006 264B     		ldr	r3, .L3+8
 109 0008 1B68     		ldr	r3, [r3]	@ float
 110 000a 1846     		mov	r0, r3
 111 000c FFF7FEFF 		bl	__aeabi_f2d
 112 0010 0446     		mov	r4, r0
 113 0012 0D46     		mov	r5, r1
 114 0014 234B     		ldr	r3, .L3+12
 115 0016 1B68     		ldr	r3, [r3]	@ float
 116 0018 1846     		mov	r0, r3
 117 001a FFF7FEFF 		bl	__aeabi_f2d
 118 001e 1EA3     		adr	r3, .L3
 119 0020 D3E90023 		ldrd	r2, [r3]
 120 0024 FFF7FEFF 		bl	__aeabi_dmul
 121 0028 0246     		mov	r2, r0
 122 002a 0B46     		mov	r3, r1
 123 002c 2046     		mov	r0, r4
 124 002e 2946     		mov	r1, r5
 125 0030 FFF7FEFF 		bl	__aeabi_dadd
 126 0034 0346     		mov	r3, r0
 127 0036 0C46     		mov	r4, r1
 128 0038 1846     		mov	r0, r3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 4


 129 003a 2146     		mov	r1, r4
 130 003c FFF7FEFF 		bl	__aeabi_d2f
 131 0040 0346     		mov	r3, r0
 132 0042 7B60     		str	r3, [r7, #4]	@ float
  44:movement.c    ****     
  45:movement.c    ****     uint16 count1 = (32767 + (maxForwardPWM * totalMultiplier));
 133              		.loc 1 45 0
 134 0044 1849     		ldr	r1, .L3+16
 135 0046 7868     		ldr	r0, [r7, #4]	@ float
 136 0048 FFF7FEFF 		bl	__aeabi_fmul
 137 004c 0346     		mov	r3, r0
 138 004e 1749     		ldr	r1, .L3+20
 139 0050 1846     		mov	r0, r3
 140 0052 FFF7FEFF 		bl	__aeabi_fadd
 141 0056 0346     		mov	r3, r0
 142 0058 1846     		mov	r0, r3
 143 005a FFF7FEFF 		bl	__aeabi_f2uiz
 144 005e 0346     		mov	r3, r0
 145 0060 7B80     		strh	r3, [r7, #2]	@ movhi
  46:movement.c    ****     uint16 count2 = (32767 - (maxTurningPWM * totalMultiplier));
 146              		.loc 1 46 0
 147 0062 1349     		ldr	r1, .L3+24
 148 0064 7868     		ldr	r0, [r7, #4]	@ float
 149 0066 FFF7FEFF 		bl	__aeabi_fmul
 150 006a 0346     		mov	r3, r0
 151 006c 1946     		mov	r1, r3
 152 006e 0F48     		ldr	r0, .L3+20
 153 0070 FFF7FEFF 		bl	__aeabi_fsub
 154 0074 0346     		mov	r3, r0
 155 0076 1846     		mov	r0, r3
 156 0078 FFF7FEFF 		bl	__aeabi_f2uiz
 157 007c 0346     		mov	r3, r0
 158 007e 3B80     		strh	r3, [r7]	@ movhi
  47:movement.c    ****     PWM_1_WriteCompare(count1); // 65% - Left Wheel Clockwise
 159              		.loc 1 47 0
 160 0080 7B88     		ldrh	r3, [r7, #2]
 161 0082 1846     		mov	r0, r3
 162 0084 FFF7FEFF 		bl	PWM_1_WriteCompare
  48:movement.c    ****     PWM_2_WriteCompare(count2); // 40% - Right Wheel Clockwise
 163              		.loc 1 48 0
 164 0088 3B88     		ldrh	r3, [r7]
 165 008a 1846     		mov	r0, r3
 166 008c FFF7FEFF 		bl	PWM_2_WriteCompare
  49:movement.c    **** }
 167              		.loc 1 49 0
 168 0090 00BF     		nop
 169 0092 0837     		adds	r7, r7, #8
 170              		.cfi_def_cfa_offset 16
 171 0094 BD46     		mov	sp, r7
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 0096 B0BD     		pop	{r4, r5, r7, pc}
 175              	.L4:
 176              		.align	3
 177              	.L3:
 178 0098 CDCCCCCC 		.word	-858993459
 179 009c CCCCEC3F 		.word	1072483532
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 5


 180 00a0 00000000 		.word	minMovementMultiplier
 181 00a4 00000000 		.word	rangeMovementMultiplier
 182 00a8 00981946 		.word	1176082432
 183 00ac 00FEFF46 		.word	1191181824
 184 00b0 00C8CC45 		.word	1171048448
 185              		.cfi_endproc
 186              	.LFE65:
 187              		.size	adjustRight, .-adjustRight
 188              		.section	.text.adjustLeft,"ax",%progbits
 189              		.align	2
 190              		.global	adjustLeft
 191              		.thumb
 192              		.thumb_func
 193              		.type	adjustLeft, %function
 194              	adjustLeft:
 195              	.LFB66:
  50:movement.c    **** 
  51:movement.c    **** // keep rotating anticlockwise
  52:movement.c    **** // used for adjusting deviations
  53:movement.c    **** void adjustLeft() {
 196              		.loc 1 53 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 B0B5     		push	{r4, r5, r7, lr}
 201              		.cfi_def_cfa_offset 16
 202              		.cfi_offset 4, -16
 203              		.cfi_offset 5, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 82B0     		sub	sp, sp, #8
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
  54:movement.c    ****     // totalMultiplier = 0.5 + (0.7 * movement_speed_multiplier)
  55:movement.c    ****     float totalMultiplier = minMovementMultiplier + (rangeMovementMultiplier * MOVEMENT_SPEED_MULTI
 210              		.loc 1 55 0
 211 0006 264B     		ldr	r3, .L6+8
 212 0008 1B68     		ldr	r3, [r3]	@ float
 213 000a 1846     		mov	r0, r3
 214 000c FFF7FEFF 		bl	__aeabi_f2d
 215 0010 0446     		mov	r4, r0
 216 0012 0D46     		mov	r5, r1
 217 0014 234B     		ldr	r3, .L6+12
 218 0016 1B68     		ldr	r3, [r3]	@ float
 219 0018 1846     		mov	r0, r3
 220 001a FFF7FEFF 		bl	__aeabi_f2d
 221 001e 1EA3     		adr	r3, .L6
 222 0020 D3E90023 		ldrd	r2, [r3]
 223 0024 FFF7FEFF 		bl	__aeabi_dmul
 224 0028 0246     		mov	r2, r0
 225 002a 0B46     		mov	r3, r1
 226 002c 2046     		mov	r0, r4
 227 002e 2946     		mov	r1, r5
 228 0030 FFF7FEFF 		bl	__aeabi_dadd
 229 0034 0346     		mov	r3, r0
 230 0036 0C46     		mov	r4, r1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 6


 231 0038 1846     		mov	r0, r3
 232 003a 2146     		mov	r1, r4
 233 003c FFF7FEFF 		bl	__aeabi_d2f
 234 0040 0346     		mov	r3, r0
 235 0042 7B60     		str	r3, [r7, #4]	@ float
  56:movement.c    ****     
  57:movement.c    ****     uint16 count1 = (32767 + (maxTurningPWM * totalMultiplier));
 236              		.loc 1 57 0
 237 0044 1849     		ldr	r1, .L6+16
 238 0046 7868     		ldr	r0, [r7, #4]	@ float
 239 0048 FFF7FEFF 		bl	__aeabi_fmul
 240 004c 0346     		mov	r3, r0
 241 004e 1749     		ldr	r1, .L6+20
 242 0050 1846     		mov	r0, r3
 243 0052 FFF7FEFF 		bl	__aeabi_fadd
 244 0056 0346     		mov	r3, r0
 245 0058 1846     		mov	r0, r3
 246 005a FFF7FEFF 		bl	__aeabi_f2uiz
 247 005e 0346     		mov	r3, r0
 248 0060 7B80     		strh	r3, [r7, #2]	@ movhi
  58:movement.c    ****     uint16 count2 = (32767 - (maxForwardPWM * totalMultiplier));
 249              		.loc 1 58 0
 250 0062 1349     		ldr	r1, .L6+24
 251 0064 7868     		ldr	r0, [r7, #4]	@ float
 252 0066 FFF7FEFF 		bl	__aeabi_fmul
 253 006a 0346     		mov	r3, r0
 254 006c 1946     		mov	r1, r3
 255 006e 0F48     		ldr	r0, .L6+20
 256 0070 FFF7FEFF 		bl	__aeabi_fsub
 257 0074 0346     		mov	r3, r0
 258 0076 1846     		mov	r0, r3
 259 0078 FFF7FEFF 		bl	__aeabi_f2uiz
 260 007c 0346     		mov	r3, r0
 261 007e 3B80     		strh	r3, [r7]	@ movhi
  59:movement.c    ****     PWM_1_WriteCompare(count1); // 60% - Left Wheel Clockwise
 262              		.loc 1 59 0
 263 0080 7B88     		ldrh	r3, [r7, #2]
 264 0082 1846     		mov	r0, r3
 265 0084 FFF7FEFF 		bl	PWM_1_WriteCompare
  60:movement.c    ****     PWM_2_WriteCompare(count2); // 35% - Right Wheel Clockwise
 266              		.loc 1 60 0
 267 0088 3B88     		ldrh	r3, [r7]
 268 008a 1846     		mov	r0, r3
 269 008c FFF7FEFF 		bl	PWM_2_WriteCompare
  61:movement.c    **** }
 270              		.loc 1 61 0
 271 0090 00BF     		nop
 272 0092 0837     		adds	r7, r7, #8
 273              		.cfi_def_cfa_offset 16
 274 0094 BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 0096 B0BD     		pop	{r4, r5, r7, pc}
 278              	.L7:
 279              		.align	3
 280              	.L6:
 281 0098 CDCCCCCC 		.word	-858993459
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 7


 282 009c CCCCEC3F 		.word	1072483532
 283 00a0 00000000 		.word	minMovementMultiplier
 284 00a4 00000000 		.word	rangeMovementMultiplier
 285 00a8 00C8CC45 		.word	1171048448
 286 00ac 00FEFF46 		.word	1191181824
 287 00b0 00981946 		.word	1176082432
 288              		.cfi_endproc
 289              	.LFE66:
 290              		.size	adjustLeft, .-adjustLeft
 291              		.section	.text.turnLeft,"ax",%progbits
 292              		.align	2
 293              		.global	turnLeft
 294              		.thumb
 295              		.thumb_func
 296              		.type	turnLeft, %function
 297              	turnLeft:
 298              	.LFB67:
  62:movement.c    **** 
  63:movement.c    **** // Anti-clockwise
  64:movement.c    **** void turnLeft() {
 299              		.loc 1 64 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303 0000 80B5     		push	{r7, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  65:movement.c    ****     uint16 count1 = (32767 - (maxTurningPWM * 0.9));
 311              		.loc 1 65 0
 312 0006 46F6F503 		movw	r3, #26869
 313 000a FB80     		strh	r3, [r7, #6]	@ movhi
  66:movement.c    ****     uint16 count2 = (32767 - (maxTurningPWM * 0.9)); // try 45%
 314              		.loc 1 66 0
 315 000c 46F6F503 		movw	r3, #26869
 316 0010 BB80     		strh	r3, [r7, #4]	@ movhi
  67:movement.c    ****     PWM_1_WriteCompare(count1); // 40% -- Left Wheel spins Clockwise
 317              		.loc 1 67 0
 318 0012 FB88     		ldrh	r3, [r7, #6]
 319 0014 1846     		mov	r0, r3
 320 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
  68:movement.c    ****     PWM_2_WriteCompare(count2); // 40% -- Right wheel spins clockwise
 321              		.loc 1 68 0
 322 001a BB88     		ldrh	r3, [r7, #4]
 323 001c 1846     		mov	r0, r3
 324 001e FFF7FEFF 		bl	PWM_2_WriteCompare
  69:movement.c    **** }
 325              		.loc 1 69 0
 326 0022 00BF     		nop
 327 0024 0837     		adds	r7, r7, #8
 328              		.cfi_def_cfa_offset 8
 329 0026 BD46     		mov	sp, r7
 330              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 8


 331              		@ sp needed
 332 0028 80BD     		pop	{r7, pc}
 333              		.cfi_endproc
 334              	.LFE67:
 335              		.size	turnLeft, .-turnLeft
 336 002a 00BF     		.section	.text.turnRight,"ax",%progbits
 337              		.align	2
 338              		.global	turnRight
 339              		.thumb
 340              		.thumb_func
 341              		.type	turnRight, %function
 342              	turnRight:
 343              	.LFB68:
  70:movement.c    **** 
  71:movement.c    **** // Clockwise
  72:movement.c    **** void turnRight() {
 344              		.loc 1 72 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 82B0     		sub	sp, sp, #8
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
  73:movement.c    ****     uint16 count1 = (32767 + (maxTurningPWM * 0.9));
 356              		.loc 1 73 0
 357 0006 49F20873 		movw	r3, #38664
 358 000a FB80     		strh	r3, [r7, #6]	@ movhi
  74:movement.c    ****     uint16 count2 = (32767 + (maxTurningPWM * 0.9));
 359              		.loc 1 74 0
 360 000c 49F20873 		movw	r3, #38664
 361 0010 BB80     		strh	r3, [r7, #4]	@ movhi
  75:movement.c    ****     PWM_1_WriteCompare(count1); // 60% -- Left wheel spins clockwise
 362              		.loc 1 75 0
 363 0012 FB88     		ldrh	r3, [r7, #6]
 364 0014 1846     		mov	r0, r3
 365 0016 FFF7FEFF 		bl	PWM_1_WriteCompare
  76:movement.c    ****     PWM_2_WriteCompare(count2); // 60% - Right wheel spins Anti Clockwise
 366              		.loc 1 76 0
 367 001a BB88     		ldrh	r3, [r7, #4]
 368 001c 1846     		mov	r0, r3
 369 001e FFF7FEFF 		bl	PWM_2_WriteCompare
  77:movement.c    **** }
 370              		.loc 1 77 0
 371 0022 00BF     		nop
 372 0024 0837     		adds	r7, r7, #8
 373              		.cfi_def_cfa_offset 8
 374 0026 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0028 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE68:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 9


 380              		.size	turnRight, .-turnRight
 381              		.global	__aeabi_dsub
 382              		.global	__aeabi_d2uiz
 383 002a 00BF     		.section	.text.moveForward,"ax",%progbits
 384              		.align	2
 385              		.global	moveForward
 386              		.thumb
 387              		.thumb_func
 388              		.type	moveForward, %function
 389              	moveForward:
 390              	.LFB69:
  78:movement.c    **** 
  79:movement.c    **** void moveForward() {
 391              		.loc 1 79 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 8
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395 0000 B0B5     		push	{r4, r5, r7, lr}
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 4, -16
 398              		.cfi_offset 5, -12
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 82B0     		sub	sp, sp, #8
 402              		.cfi_def_cfa_offset 24
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
  80:movement.c    ****     // totalMultiplier = 0.5 + (0.7 * movement_speed_multiplier)
  81:movement.c    ****     float totalMultiplier = minMovementMultiplier + (rangeMovementMultiplier * MOVEMENT_SPEED_MULTI
 405              		.loc 1 81 0
 406 0006 304B     		ldr	r3, .L11+16
 407 0008 1B68     		ldr	r3, [r3]	@ float
 408 000a 1846     		mov	r0, r3
 409 000c FFF7FEFF 		bl	__aeabi_f2d
 410 0010 0446     		mov	r4, r0
 411 0012 0D46     		mov	r5, r1
 412 0014 2D4B     		ldr	r3, .L11+20
 413 0016 1B68     		ldr	r3, [r3]	@ float
 414 0018 1846     		mov	r0, r3
 415 001a FFF7FEFF 		bl	__aeabi_f2d
 416 001e 26A3     		adr	r3, .L11
 417 0020 D3E90023 		ldrd	r2, [r3]
 418 0024 FFF7FEFF 		bl	__aeabi_dmul
 419 0028 0246     		mov	r2, r0
 420 002a 0B46     		mov	r3, r1
 421 002c 2046     		mov	r0, r4
 422 002e 2946     		mov	r1, r5
 423 0030 FFF7FEFF 		bl	__aeabi_dadd
 424 0034 0346     		mov	r3, r0
 425 0036 0C46     		mov	r4, r1
 426 0038 1846     		mov	r0, r3
 427 003a 2146     		mov	r1, r4
 428 003c FFF7FEFF 		bl	__aeabi_d2f
 429 0040 0346     		mov	r3, r0
 430 0042 7B60     		str	r3, [r7, #4]	@ float
  82:movement.c    ****     
  83:movement.c    ****     uint16 count1 = (32767 + (maxForwardPWM * totalMultiplier));
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 10


 431              		.loc 1 83 0
 432 0044 2249     		ldr	r1, .L11+24
 433 0046 7868     		ldr	r0, [r7, #4]	@ float
 434 0048 FFF7FEFF 		bl	__aeabi_fmul
 435 004c 0346     		mov	r3, r0
 436 004e 2149     		ldr	r1, .L11+28
 437 0050 1846     		mov	r0, r3
 438 0052 FFF7FEFF 		bl	__aeabi_fadd
 439 0056 0346     		mov	r3, r0
 440 0058 1846     		mov	r0, r3
 441 005a FFF7FEFF 		bl	__aeabi_f2uiz
 442 005e 0346     		mov	r3, r0
 443 0060 7B80     		strh	r3, [r7, #2]	@ movhi
  84:movement.c    ****     uint16 count2 = (32767 - (maxForwardPWM * totalMultiplier * 0.5)); // left wheel is slower, so 
 444              		.loc 1 84 0
 445 0062 1B49     		ldr	r1, .L11+24
 446 0064 7868     		ldr	r0, [r7, #4]	@ float
 447 0066 FFF7FEFF 		bl	__aeabi_fmul
 448 006a 0346     		mov	r3, r0
 449 006c 1846     		mov	r0, r3
 450 006e FFF7FEFF 		bl	__aeabi_f2d
 451 0072 4FF00002 		mov	r2, #0
 452 0076 184B     		ldr	r3, .L11+32
 453 0078 FFF7FEFF 		bl	__aeabi_dmul
 454 007c 0346     		mov	r3, r0
 455 007e 0C46     		mov	r4, r1
 456 0080 1A46     		mov	r2, r3
 457 0082 2346     		mov	r3, r4
 458 0084 0EA1     		adr	r1, .L11+8
 459 0086 D1E90001 		ldrd	r0, [r1]
 460 008a FFF7FEFF 		bl	__aeabi_dsub
 461 008e 0346     		mov	r3, r0
 462 0090 0C46     		mov	r4, r1
 463 0092 1846     		mov	r0, r3
 464 0094 2146     		mov	r1, r4
 465 0096 FFF7FEFF 		bl	__aeabi_d2uiz
 466 009a 0346     		mov	r3, r0
 467 009c 3B80     		strh	r3, [r7]	@ movhi
  85:movement.c    ****     PWM_1_WriteCompare(count1); // 65% - Left Wheel Clockwise
 468              		.loc 1 85 0
 469 009e 7B88     		ldrh	r3, [r7, #2]
 470 00a0 1846     		mov	r0, r3
 471 00a2 FFF7FEFF 		bl	PWM_1_WriteCompare
  86:movement.c    ****     PWM_2_WriteCompare(count2); // 35% - Right Wheel Clockwise
 472              		.loc 1 86 0
 473 00a6 3B88     		ldrh	r3, [r7]
 474 00a8 1846     		mov	r0, r3
 475 00aa FFF7FEFF 		bl	PWM_2_WriteCompare
  87:movement.c    **** }
 476              		.loc 1 87 0
 477 00ae 00BF     		nop
 478 00b0 0837     		adds	r7, r7, #8
 479              		.cfi_def_cfa_offset 16
 480 00b2 BD46     		mov	sp, r7
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 00b4 B0BD     		pop	{r4, r5, r7, pc}
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 11


 484              	.L12:
 485 00b6 00BF     		.align	3
 486              	.L11:
 487 00b8 CDCCCCCC 		.word	-858993459
 488 00bc CCCCEC3F 		.word	1072483532
 489 00c0 00000000 		.word	0
 490 00c4 C0FFDF40 		.word	1088421824
 491 00c8 00000000 		.word	minMovementMultiplier
 492 00cc 00000000 		.word	rangeMovementMultiplier
 493 00d0 00981946 		.word	1176082432
 494 00d4 00FEFF46 		.word	1191181824
 495 00d8 0000E03F 		.word	1071644672
 496              		.cfi_endproc
 497              	.LFE69:
 498              		.size	moveForward, .-moveForward
 499              		.section	.text.moveBackward,"ax",%progbits
 500              		.align	2
 501              		.global	moveBackward
 502              		.thumb
 503              		.thumb_func
 504              		.type	moveBackward, %function
 505              	moveBackward:
 506              	.LFB70:
  88:movement.c    **** 
  89:movement.c    **** void moveBackward() {
 507              		.loc 1 89 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
  90:movement.c    ****     PWM_1_WriteCompare(22937); // 35% - Left Wheel Anti Clockwise
 517              		.loc 1 90 0
 518 0004 45F69910 		movw	r0, #22937
 519 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  91:movement.c    ****     PWM_2_WriteCompare(42598); // 65% - Right Wheel Anti Clockwise
 520              		.loc 1 91 0
 521 000c 4AF26660 		movw	r0, #42598
 522 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  92:movement.c    **** }
 523              		.loc 1 92 0
 524 0014 00BF     		nop
 525 0016 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE70:
 528              		.size	moveBackward, .-moveBackward
 529              		.text
 530              	.Letext0:
 531              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 532              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 533              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 534              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 535              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 12


 536              	.Ldebug_info0:
 537 0000 48020000 		.4byte	0x248
 538 0004 0400     		.2byte	0x4
 539 0006 00000000 		.4byte	.Ldebug_abbrev0
 540 000a 04       		.byte	0x4
 541 000b 01       		.uleb128 0x1
 542 000c 0B000000 		.4byte	.LASF32
 543 0010 0C       		.byte	0xc
 544 0011 83010000 		.4byte	.LASF33
 545 0015 BB000000 		.4byte	.LASF34
 546 0019 00000000 		.4byte	.Ldebug_ranges0+0
 547 001d 00000000 		.4byte	0
 548 0021 00000000 		.4byte	.Ldebug_line0
 549 0025 02       		.uleb128 0x2
 550 0026 01       		.byte	0x1
 551 0027 06       		.byte	0x6
 552 0028 4F020000 		.4byte	.LASF0
 553 002c 02       		.uleb128 0x2
 554 002d 01       		.byte	0x1
 555 002e 08       		.byte	0x8
 556 002f 01010000 		.4byte	.LASF1
 557 0033 02       		.uleb128 0x2
 558 0034 02       		.byte	0x2
 559 0035 05       		.byte	0x5
 560 0036 30020000 		.4byte	.LASF2
 561 003a 02       		.uleb128 0x2
 562 003b 02       		.byte	0x2
 563 003c 07       		.byte	0x7
 564 003d 3E010000 		.4byte	.LASF3
 565 0041 03       		.uleb128 0x3
 566 0042 A7000000 		.4byte	.LASF9
 567 0046 02       		.byte	0x2
 568 0047 3F       		.byte	0x3f
 569 0048 4C000000 		.4byte	0x4c
 570 004c 02       		.uleb128 0x2
 571 004d 04       		.byte	0x4
 572 004e 05       		.byte	0x5
 573 004f 3A020000 		.4byte	.LASF4
 574 0053 02       		.uleb128 0x2
 575 0054 04       		.byte	0x4
 576 0055 07       		.byte	0x7
 577 0056 1F010000 		.4byte	.LASF5
 578 005a 02       		.uleb128 0x2
 579 005b 08       		.byte	0x8
 580 005c 05       		.byte	0x5
 581 005d 07020000 		.4byte	.LASF6
 582 0061 02       		.uleb128 0x2
 583 0062 08       		.byte	0x8
 584 0063 07       		.byte	0x7
 585 0064 C9010000 		.4byte	.LASF7
 586 0068 04       		.uleb128 0x4
 587 0069 04       		.byte	0x4
 588 006a 05       		.byte	0x5
 589 006b 696E7400 		.ascii	"int\000"
 590 006f 02       		.uleb128 0x2
 591 0070 04       		.byte	0x4
 592 0071 07       		.byte	0x7
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 13


 593 0072 BC010000 		.4byte	.LASF8
 594 0076 03       		.uleb128 0x3
 595 0077 F6010000 		.4byte	.LASF10
 596 007b 03       		.byte	0x3
 597 007c 2C       		.byte	0x2c
 598 007d 41000000 		.4byte	0x41
 599 0081 05       		.uleb128 0x5
 600 0082 7C010000 		.4byte	.LASF11
 601 0086 04       		.byte	0x4
 602 0087 E801     		.2byte	0x1e8
 603 0089 3A000000 		.4byte	0x3a
 604 008d 02       		.uleb128 0x2
 605 008e 04       		.byte	0x4
 606 008f 04       		.byte	0x4
 607 0090 FB000000 		.4byte	.LASF12
 608 0094 02       		.uleb128 0x2
 609 0095 08       		.byte	0x8
 610 0096 04       		.byte	0x4
 611 0097 6A010000 		.4byte	.LASF13
 612 009b 02       		.uleb128 0x2
 613 009c 01       		.byte	0x1
 614 009d 08       		.byte	0x8
 615 009e 15020000 		.4byte	.LASF14
 616 00a2 02       		.uleb128 0x2
 617 00a3 08       		.byte	0x8
 618 00a4 04       		.byte	0x4
 619 00a5 43020000 		.4byte	.LASF15
 620 00a9 02       		.uleb128 0x2
 621 00aa 04       		.byte	0x4
 622 00ab 07       		.byte	0x7
 623 00ac FE010000 		.4byte	.LASF16
 624 00b0 06       		.uleb128 0x6
 625 00b1 00000000 		.4byte	.LASF25
 626 00b5 01       		.byte	0x1
 627 00b6 22       		.byte	0x22
 628 00b7 00000000 		.4byte	.LFB64
 629 00bb 18000000 		.4byte	.LFE64-.LFB64
 630 00bf 01       		.uleb128 0x1
 631 00c0 9C       		.byte	0x9c
 632 00c1 07       		.uleb128 0x7
 633 00c2 5E010000 		.4byte	.LASF20
 634 00c6 01       		.byte	0x1
 635 00c7 29       		.byte	0x29
 636 00c8 00000000 		.4byte	.LFB65
 637 00cc B4000000 		.4byte	.LFE65-.LFB65
 638 00d0 01       		.uleb128 0x1
 639 00d1 9C       		.byte	0x9c
 640 00d2 01010000 		.4byte	0x101
 641 00d6 08       		.uleb128 0x8
 642 00d7 0F010000 		.4byte	.LASF17
 643 00db 01       		.byte	0x1
 644 00dc 2B       		.byte	0x2b
 645 00dd 8D000000 		.4byte	0x8d
 646 00e1 02       		.uleb128 0x2
 647 00e2 91       		.byte	0x91
 648 00e3 6C       		.sleb128 -20
 649 00e4 08       		.uleb128 0x8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 14


 650 00e5 99000000 		.4byte	.LASF18
 651 00e9 01       		.byte	0x1
 652 00ea 2D       		.byte	0x2d
 653 00eb 81000000 		.4byte	0x81
 654 00ef 02       		.uleb128 0x2
 655 00f0 91       		.byte	0x91
 656 00f1 6A       		.sleb128 -22
 657 00f2 08       		.uleb128 0x8
 658 00f3 A0000000 		.4byte	.LASF19
 659 00f7 01       		.byte	0x1
 660 00f8 2E       		.byte	0x2e
 661 00f9 81000000 		.4byte	0x81
 662 00fd 02       		.uleb128 0x2
 663 00fe 91       		.byte	0x91
 664 00ff 68       		.sleb128 -24
 665 0100 00       		.byte	0
 666 0101 07       		.uleb128 0x7
 667 0102 71010000 		.4byte	.LASF21
 668 0106 01       		.byte	0x1
 669 0107 35       		.byte	0x35
 670 0108 00000000 		.4byte	.LFB66
 671 010c B4000000 		.4byte	.LFE66-.LFB66
 672 0110 01       		.uleb128 0x1
 673 0111 9C       		.byte	0x9c
 674 0112 41010000 		.4byte	0x141
 675 0116 08       		.uleb128 0x8
 676 0117 0F010000 		.4byte	.LASF17
 677 011b 01       		.byte	0x1
 678 011c 37       		.byte	0x37
 679 011d 8D000000 		.4byte	0x8d
 680 0121 02       		.uleb128 0x2
 681 0122 91       		.byte	0x91
 682 0123 6C       		.sleb128 -20
 683 0124 08       		.uleb128 0x8
 684 0125 99000000 		.4byte	.LASF18
 685 0129 01       		.byte	0x1
 686 012a 39       		.byte	0x39
 687 012b 81000000 		.4byte	0x81
 688 012f 02       		.uleb128 0x2
 689 0130 91       		.byte	0x91
 690 0131 6A       		.sleb128 -22
 691 0132 08       		.uleb128 0x8
 692 0133 A0000000 		.4byte	.LASF19
 693 0137 01       		.byte	0x1
 694 0138 3A       		.byte	0x3a
 695 0139 81000000 		.4byte	0x81
 696 013d 02       		.uleb128 0x2
 697 013e 91       		.byte	0x91
 698 013f 68       		.sleb128 -24
 699 0140 00       		.byte	0
 700 0141 07       		.uleb128 0x7
 701 0142 ED010000 		.4byte	.LASF22
 702 0146 01       		.byte	0x1
 703 0147 40       		.byte	0x40
 704 0148 00000000 		.4byte	.LFB67
 705 014c 2A000000 		.4byte	.LFE67-.LFB67
 706 0150 01       		.uleb128 0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 15


 707 0151 9C       		.byte	0x9c
 708 0152 73010000 		.4byte	0x173
 709 0156 08       		.uleb128 0x8
 710 0157 99000000 		.4byte	.LASF18
 711 015b 01       		.byte	0x1
 712 015c 41       		.byte	0x41
 713 015d 81000000 		.4byte	0x81
 714 0161 02       		.uleb128 0x2
 715 0162 91       		.byte	0x91
 716 0163 76       		.sleb128 -10
 717 0164 08       		.uleb128 0x8
 718 0165 A0000000 		.4byte	.LASF19
 719 0169 01       		.byte	0x1
 720 016a 42       		.byte	0x42
 721 016b 81000000 		.4byte	0x81
 722 016f 02       		.uleb128 0x2
 723 0170 91       		.byte	0x91
 724 0171 74       		.sleb128 -12
 725 0172 00       		.byte	0
 726 0173 07       		.uleb128 0x7
 727 0174 B1000000 		.4byte	.LASF23
 728 0178 01       		.byte	0x1
 729 0179 48       		.byte	0x48
 730 017a 00000000 		.4byte	.LFB68
 731 017e 2A000000 		.4byte	.LFE68-.LFB68
 732 0182 01       		.uleb128 0x1
 733 0183 9C       		.byte	0x9c
 734 0184 A5010000 		.4byte	0x1a5
 735 0188 08       		.uleb128 0x8
 736 0189 99000000 		.4byte	.LASF18
 737 018d 01       		.byte	0x1
 738 018e 49       		.byte	0x49
 739 018f 81000000 		.4byte	0x81
 740 0193 02       		.uleb128 0x2
 741 0194 91       		.byte	0x91
 742 0195 76       		.sleb128 -10
 743 0196 08       		.uleb128 0x8
 744 0197 A0000000 		.4byte	.LASF19
 745 019b 01       		.byte	0x1
 746 019c 4A       		.byte	0x4a
 747 019d 81000000 		.4byte	0x81
 748 01a1 02       		.uleb128 0x2
 749 01a2 91       		.byte	0x91
 750 01a3 74       		.sleb128 -12
 751 01a4 00       		.byte	0
 752 01a5 07       		.uleb128 0x7
 753 01a6 1A020000 		.4byte	.LASF24
 754 01aa 01       		.byte	0x1
 755 01ab 4F       		.byte	0x4f
 756 01ac 00000000 		.4byte	.LFB69
 757 01b0 DC000000 		.4byte	.LFE69-.LFB69
 758 01b4 01       		.uleb128 0x1
 759 01b5 9C       		.byte	0x9c
 760 01b6 E5010000 		.4byte	0x1e5
 761 01ba 08       		.uleb128 0x8
 762 01bb 0F010000 		.4byte	.LASF17
 763 01bf 01       		.byte	0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 16


 764 01c0 51       		.byte	0x51
 765 01c1 8D000000 		.4byte	0x8d
 766 01c5 02       		.uleb128 0x2
 767 01c6 91       		.byte	0x91
 768 01c7 6C       		.sleb128 -20
 769 01c8 08       		.uleb128 0x8
 770 01c9 99000000 		.4byte	.LASF18
 771 01cd 01       		.byte	0x1
 772 01ce 53       		.byte	0x53
 773 01cf 81000000 		.4byte	0x81
 774 01d3 02       		.uleb128 0x2
 775 01d4 91       		.byte	0x91
 776 01d5 6A       		.sleb128 -22
 777 01d6 08       		.uleb128 0x8
 778 01d7 A0000000 		.4byte	.LASF19
 779 01db 01       		.byte	0x1
 780 01dc 54       		.byte	0x54
 781 01dd 81000000 		.4byte	0x81
 782 01e1 02       		.uleb128 0x2
 783 01e2 91       		.byte	0x91
 784 01e3 68       		.sleb128 -24
 785 01e4 00       		.byte	0
 786 01e5 06       		.uleb128 0x6
 787 01e6 31010000 		.4byte	.LASF26
 788 01ea 01       		.byte	0x1
 789 01eb 59       		.byte	0x59
 790 01ec 00000000 		.4byte	.LFB70
 791 01f0 18000000 		.4byte	.LFE70-.LFB70
 792 01f4 01       		.uleb128 0x1
 793 01f5 9C       		.byte	0x9c
 794 01f6 09       		.uleb128 0x9
 795 01f7 51010000 		.4byte	.LASF27
 796 01fb 05       		.byte	0x5
 797 01fc 1207     		.2byte	0x712
 798 01fe 02020000 		.4byte	0x202
 799 0202 0A       		.uleb128 0xa
 800 0203 76000000 		.4byte	0x76
 801 0207 0B       		.uleb128 0xb
 802 0208 8E010000 		.4byte	.LASF28
 803 020c 01       		.byte	0x1
 804 020d 19       		.byte	0x19
 805 020e 8D000000 		.4byte	0x8d
 806 0212 05       		.uleb128 0x5
 807 0213 03       		.byte	0x3
 808 0214 00000000 		.4byte	rangeMovementMultiplier
 809 0218 0B       		.uleb128 0xb
 810 0219 A6010000 		.4byte	.LASF29
 811 021d 01       		.byte	0x1
 812 021e 1A       		.byte	0x1a
 813 021f 8D000000 		.4byte	0x8d
 814 0223 05       		.uleb128 0x5
 815 0224 03       		.byte	0x3
 816 0225 00000000 		.4byte	minMovementMultiplier
 817 0229 0B       		.uleb128 0xb
 818 022a 26020000 		.4byte	.LASF30
 819 022e 01       		.byte	0x1
 820 022f 1C       		.byte	0x1c
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 17


 821 0230 81000000 		.4byte	0x81
 822 0234 05       		.uleb128 0x5
 823 0235 03       		.byte	0x3
 824 0236 00000000 		.4byte	turnCount
 825 023a 0B       		.uleb128 0xb
 826 023b E0010000 		.4byte	.LASF31
 827 023f 01       		.byte	0x1
 828 0240 1D       		.byte	0x1d
 829 0241 81000000 		.4byte	0x81
 830 0245 05       		.uleb128 0x5
 831 0246 03       		.byte	0x3
 832 0247 00000000 		.4byte	maxTurnCount
 833 024b 00       		.byte	0
 834              		.section	.debug_abbrev,"",%progbits
 835              	.Ldebug_abbrev0:
 836 0000 01       		.uleb128 0x1
 837 0001 11       		.uleb128 0x11
 838 0002 01       		.byte	0x1
 839 0003 25       		.uleb128 0x25
 840 0004 0E       		.uleb128 0xe
 841 0005 13       		.uleb128 0x13
 842 0006 0B       		.uleb128 0xb
 843 0007 03       		.uleb128 0x3
 844 0008 0E       		.uleb128 0xe
 845 0009 1B       		.uleb128 0x1b
 846 000a 0E       		.uleb128 0xe
 847 000b 55       		.uleb128 0x55
 848 000c 17       		.uleb128 0x17
 849 000d 11       		.uleb128 0x11
 850 000e 01       		.uleb128 0x1
 851 000f 10       		.uleb128 0x10
 852 0010 17       		.uleb128 0x17
 853 0011 00       		.byte	0
 854 0012 00       		.byte	0
 855 0013 02       		.uleb128 0x2
 856 0014 24       		.uleb128 0x24
 857 0015 00       		.byte	0
 858 0016 0B       		.uleb128 0xb
 859 0017 0B       		.uleb128 0xb
 860 0018 3E       		.uleb128 0x3e
 861 0019 0B       		.uleb128 0xb
 862 001a 03       		.uleb128 0x3
 863 001b 0E       		.uleb128 0xe
 864 001c 00       		.byte	0
 865 001d 00       		.byte	0
 866 001e 03       		.uleb128 0x3
 867 001f 16       		.uleb128 0x16
 868 0020 00       		.byte	0
 869 0021 03       		.uleb128 0x3
 870 0022 0E       		.uleb128 0xe
 871 0023 3A       		.uleb128 0x3a
 872 0024 0B       		.uleb128 0xb
 873 0025 3B       		.uleb128 0x3b
 874 0026 0B       		.uleb128 0xb
 875 0027 49       		.uleb128 0x49
 876 0028 13       		.uleb128 0x13
 877 0029 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 18


 878 002a 00       		.byte	0
 879 002b 04       		.uleb128 0x4
 880 002c 24       		.uleb128 0x24
 881 002d 00       		.byte	0
 882 002e 0B       		.uleb128 0xb
 883 002f 0B       		.uleb128 0xb
 884 0030 3E       		.uleb128 0x3e
 885 0031 0B       		.uleb128 0xb
 886 0032 03       		.uleb128 0x3
 887 0033 08       		.uleb128 0x8
 888 0034 00       		.byte	0
 889 0035 00       		.byte	0
 890 0036 05       		.uleb128 0x5
 891 0037 16       		.uleb128 0x16
 892 0038 00       		.byte	0
 893 0039 03       		.uleb128 0x3
 894 003a 0E       		.uleb128 0xe
 895 003b 3A       		.uleb128 0x3a
 896 003c 0B       		.uleb128 0xb
 897 003d 3B       		.uleb128 0x3b
 898 003e 05       		.uleb128 0x5
 899 003f 49       		.uleb128 0x49
 900 0040 13       		.uleb128 0x13
 901 0041 00       		.byte	0
 902 0042 00       		.byte	0
 903 0043 06       		.uleb128 0x6
 904 0044 2E       		.uleb128 0x2e
 905 0045 00       		.byte	0
 906 0046 3F       		.uleb128 0x3f
 907 0047 19       		.uleb128 0x19
 908 0048 03       		.uleb128 0x3
 909 0049 0E       		.uleb128 0xe
 910 004a 3A       		.uleb128 0x3a
 911 004b 0B       		.uleb128 0xb
 912 004c 3B       		.uleb128 0x3b
 913 004d 0B       		.uleb128 0xb
 914 004e 11       		.uleb128 0x11
 915 004f 01       		.uleb128 0x1
 916 0050 12       		.uleb128 0x12
 917 0051 06       		.uleb128 0x6
 918 0052 40       		.uleb128 0x40
 919 0053 18       		.uleb128 0x18
 920 0054 9642     		.uleb128 0x2116
 921 0056 19       		.uleb128 0x19
 922 0057 00       		.byte	0
 923 0058 00       		.byte	0
 924 0059 07       		.uleb128 0x7
 925 005a 2E       		.uleb128 0x2e
 926 005b 01       		.byte	0x1
 927 005c 3F       		.uleb128 0x3f
 928 005d 19       		.uleb128 0x19
 929 005e 03       		.uleb128 0x3
 930 005f 0E       		.uleb128 0xe
 931 0060 3A       		.uleb128 0x3a
 932 0061 0B       		.uleb128 0xb
 933 0062 3B       		.uleb128 0x3b
 934 0063 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 19


 935 0064 11       		.uleb128 0x11
 936 0065 01       		.uleb128 0x1
 937 0066 12       		.uleb128 0x12
 938 0067 06       		.uleb128 0x6
 939 0068 40       		.uleb128 0x40
 940 0069 18       		.uleb128 0x18
 941 006a 9642     		.uleb128 0x2116
 942 006c 19       		.uleb128 0x19
 943 006d 01       		.uleb128 0x1
 944 006e 13       		.uleb128 0x13
 945 006f 00       		.byte	0
 946 0070 00       		.byte	0
 947 0071 08       		.uleb128 0x8
 948 0072 34       		.uleb128 0x34
 949 0073 00       		.byte	0
 950 0074 03       		.uleb128 0x3
 951 0075 0E       		.uleb128 0xe
 952 0076 3A       		.uleb128 0x3a
 953 0077 0B       		.uleb128 0xb
 954 0078 3B       		.uleb128 0x3b
 955 0079 0B       		.uleb128 0xb
 956 007a 49       		.uleb128 0x49
 957 007b 13       		.uleb128 0x13
 958 007c 02       		.uleb128 0x2
 959 007d 18       		.uleb128 0x18
 960 007e 00       		.byte	0
 961 007f 00       		.byte	0
 962 0080 09       		.uleb128 0x9
 963 0081 34       		.uleb128 0x34
 964 0082 00       		.byte	0
 965 0083 03       		.uleb128 0x3
 966 0084 0E       		.uleb128 0xe
 967 0085 3A       		.uleb128 0x3a
 968 0086 0B       		.uleb128 0xb
 969 0087 3B       		.uleb128 0x3b
 970 0088 05       		.uleb128 0x5
 971 0089 49       		.uleb128 0x49
 972 008a 13       		.uleb128 0x13
 973 008b 3F       		.uleb128 0x3f
 974 008c 19       		.uleb128 0x19
 975 008d 3C       		.uleb128 0x3c
 976 008e 19       		.uleb128 0x19
 977 008f 00       		.byte	0
 978 0090 00       		.byte	0
 979 0091 0A       		.uleb128 0xa
 980 0092 35       		.uleb128 0x35
 981 0093 00       		.byte	0
 982 0094 49       		.uleb128 0x49
 983 0095 13       		.uleb128 0x13
 984 0096 00       		.byte	0
 985 0097 00       		.byte	0
 986 0098 0B       		.uleb128 0xb
 987 0099 34       		.uleb128 0x34
 988 009a 00       		.byte	0
 989 009b 03       		.uleb128 0x3
 990 009c 0E       		.uleb128 0xe
 991 009d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 20


 992 009e 0B       		.uleb128 0xb
 993 009f 3B       		.uleb128 0x3b
 994 00a0 0B       		.uleb128 0xb
 995 00a1 49       		.uleb128 0x49
 996 00a2 13       		.uleb128 0x13
 997 00a3 3F       		.uleb128 0x3f
 998 00a4 19       		.uleb128 0x19
 999 00a5 02       		.uleb128 0x2
 1000 00a6 18       		.uleb128 0x18
 1001 00a7 00       		.byte	0
 1002 00a8 00       		.byte	0
 1003 00a9 00       		.byte	0
 1004              		.section	.debug_aranges,"",%progbits
 1005 0000 4C000000 		.4byte	0x4c
 1006 0004 0200     		.2byte	0x2
 1007 0006 00000000 		.4byte	.Ldebug_info0
 1008 000a 04       		.byte	0x4
 1009 000b 00       		.byte	0
 1010 000c 0000     		.2byte	0
 1011 000e 0000     		.2byte	0
 1012 0010 00000000 		.4byte	.LFB64
 1013 0014 18000000 		.4byte	.LFE64-.LFB64
 1014 0018 00000000 		.4byte	.LFB65
 1015 001c B4000000 		.4byte	.LFE65-.LFB65
 1016 0020 00000000 		.4byte	.LFB66
 1017 0024 B4000000 		.4byte	.LFE66-.LFB66
 1018 0028 00000000 		.4byte	.LFB67
 1019 002c 2A000000 		.4byte	.LFE67-.LFB67
 1020 0030 00000000 		.4byte	.LFB68
 1021 0034 2A000000 		.4byte	.LFE68-.LFB68
 1022 0038 00000000 		.4byte	.LFB69
 1023 003c DC000000 		.4byte	.LFE69-.LFB69
 1024 0040 00000000 		.4byte	.LFB70
 1025 0044 18000000 		.4byte	.LFE70-.LFB70
 1026 0048 00000000 		.4byte	0
 1027 004c 00000000 		.4byte	0
 1028              		.section	.debug_ranges,"",%progbits
 1029              	.Ldebug_ranges0:
 1030 0000 00000000 		.4byte	.LFB64
 1031 0004 18000000 		.4byte	.LFE64
 1032 0008 00000000 		.4byte	.LFB65
 1033 000c B4000000 		.4byte	.LFE65
 1034 0010 00000000 		.4byte	.LFB66
 1035 0014 B4000000 		.4byte	.LFE66
 1036 0018 00000000 		.4byte	.LFB67
 1037 001c 2A000000 		.4byte	.LFE67
 1038 0020 00000000 		.4byte	.LFB68
 1039 0024 2A000000 		.4byte	.LFE68
 1040 0028 00000000 		.4byte	.LFB69
 1041 002c DC000000 		.4byte	.LFE69
 1042 0030 00000000 		.4byte	.LFB70
 1043 0034 18000000 		.4byte	.LFE70
 1044 0038 00000000 		.4byte	0
 1045 003c 00000000 		.4byte	0
 1046              		.section	.debug_line,"",%progbits
 1047              	.Ldebug_line0:
 1048 0000 E8010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 21


 1048      02005001 
 1048      00000201 
 1048      FB0E0D00 
 1048      01010101 
 1049              	.LASF25:
 1050 0000 73746F70 		.ascii	"stopMoving\000"
 1050      4D6F7669 
 1050      6E6700
 1051              	.LASF32:
 1052 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1052      43313120 
 1052      352E342E 
 1052      31203230 
 1052      31363036 
 1053 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1053      20726576 
 1053      6973696F 
 1053      6E203233 
 1053      37373135 
 1054 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1054      66756E63 
 1054      74696F6E 
 1054      2D736563 
 1054      74696F6E 
 1055              	.LASF18:
 1056 0099 636F756E 		.ascii	"count1\000"
 1056      743100
 1057              	.LASF19:
 1058 00a0 636F756E 		.ascii	"count2\000"
 1058      743200
 1059              	.LASF9:
 1060 00a7 5F5F696E 		.ascii	"__int32_t\000"
 1060      7433325F 
 1060      7400
 1061              	.LASF23:
 1062 00b1 7475726E 		.ascii	"turnRight\000"
 1062      52696768 
 1062      7400
 1063              	.LASF34:
 1064 00bb 483A5C33 		.ascii	"H:\\301-Robot\\psoc student pack\\psoc_code_base\\C"
 1064      30312D52 
 1064      6F626F74 
 1064      5C70736F 
 1064      63207374 
 1065 00ea 53333031 		.ascii	"S301_Class.cydsn\000"
 1065      5F436C61 
 1065      73732E63 
 1065      7964736E 
 1065      00
 1066              	.LASF12:
 1067 00fb 666C6F61 		.ascii	"float\000"
 1067      7400
 1068              	.LASF1:
 1069 0101 756E7369 		.ascii	"unsigned char\000"
 1069      676E6564 
 1069      20636861 
 1069      7200
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 22


 1070              	.LASF17:
 1071 010f 746F7461 		.ascii	"totalMultiplier\000"
 1071      6C4D756C 
 1071      7469706C 
 1071      69657200 
 1072              	.LASF5:
 1073 011f 6C6F6E67 		.ascii	"long unsigned int\000"
 1073      20756E73 
 1073      69676E65 
 1073      6420696E 
 1073      7400
 1074              	.LASF26:
 1075 0131 6D6F7665 		.ascii	"moveBackward\000"
 1075      4261636B 
 1075      77617264 
 1075      00
 1076              	.LASF3:
 1077 013e 73686F72 		.ascii	"short unsigned int\000"
 1077      7420756E 
 1077      7369676E 
 1077      65642069 
 1077      6E7400
 1078              	.LASF27:
 1079 0151 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1079      52784275 
 1079      66666572 
 1079      00
 1080              	.LASF20:
 1081 015e 61646A75 		.ascii	"adjustRight\000"
 1081      73745269 
 1081      67687400 
 1082              	.LASF13:
 1083 016a 646F7562 		.ascii	"double\000"
 1083      6C6500
 1084              	.LASF21:
 1085 0171 61646A75 		.ascii	"adjustLeft\000"
 1085      73744C65 
 1085      667400
 1086              	.LASF11:
 1087 017c 75696E74 		.ascii	"uint16\000"
 1087      313600
 1088              	.LASF33:
 1089 0183 6D6F7665 		.ascii	"movement.c\000"
 1089      6D656E74 
 1089      2E6300
 1090              	.LASF28:
 1091 018e 72616E67 		.ascii	"rangeMovementMultiplier\000"
 1091      654D6F76 
 1091      656D656E 
 1091      744D756C 
 1091      7469706C 
 1092              	.LASF29:
 1093 01a6 6D696E4D 		.ascii	"minMovementMultiplier\000"
 1093      6F76656D 
 1093      656E744D 
 1093      756C7469 
 1093      706C6965 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 23


 1094              	.LASF8:
 1095 01bc 756E7369 		.ascii	"unsigned int\000"
 1095      676E6564 
 1095      20696E74 
 1095      00
 1096              	.LASF7:
 1097 01c9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1097      206C6F6E 
 1097      6720756E 
 1097      7369676E 
 1097      65642069 
 1098              	.LASF31:
 1099 01e0 6D617854 		.ascii	"maxTurnCount\000"
 1099      75726E43 
 1099      6F756E74 
 1099      00
 1100              	.LASF22:
 1101 01ed 7475726E 		.ascii	"turnLeft\000"
 1101      4C656674 
 1101      00
 1102              	.LASF10:
 1103 01f6 696E7433 		.ascii	"int32_t\000"
 1103      325F7400 
 1104              	.LASF16:
 1105 01fe 73697A65 		.ascii	"sizetype\000"
 1105      74797065 
 1105      00
 1106              	.LASF6:
 1107 0207 6C6F6E67 		.ascii	"long long int\000"
 1107      206C6F6E 
 1107      6720696E 
 1107      7400
 1108              	.LASF14:
 1109 0215 63686172 		.ascii	"char\000"
 1109      00
 1110              	.LASF24:
 1111 021a 6D6F7665 		.ascii	"moveForward\000"
 1111      466F7277 
 1111      61726400 
 1112              	.LASF30:
 1113 0226 7475726E 		.ascii	"turnCount\000"
 1113      436F756E 
 1113      7400
 1114              	.LASF2:
 1115 0230 73686F72 		.ascii	"short int\000"
 1115      7420696E 
 1115      7400
 1116              	.LASF4:
 1117 023a 6C6F6E67 		.ascii	"long int\000"
 1117      20696E74 
 1117      00
 1118              	.LASF15:
 1119 0243 6C6F6E67 		.ascii	"long double\000"
 1119      20646F75 
 1119      626C6500 
 1120              	.LASF0:
 1121 024f 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\cc4PhTzl.s 			page 24


 1121      65642063 
 1121      68617200 
 1122              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
