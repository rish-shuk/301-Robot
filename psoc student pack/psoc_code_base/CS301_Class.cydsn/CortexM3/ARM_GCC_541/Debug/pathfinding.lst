ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 01       		.byte	1
  26              		.comm	Instructions,285,4
  27              		.comm	numSteps,4,4
  28              		.global	map
  29 0001 000000   		.align	2
  30              		.type	map, %object
  31              		.size	map, 1140
  32              	map:
  33 0004 01000000 		.word	1
  34 0008 01000000 		.word	1
  35 000c 01000000 		.word	1
  36 0010 01000000 		.word	1
  37 0014 01000000 		.word	1
  38 0018 01000000 		.word	1
  39 001c 01000000 		.word	1
  40 0020 01000000 		.word	1
  41 0024 01000000 		.word	1
  42 0028 01000000 		.word	1
  43 002c 01000000 		.word	1
  44 0030 01000000 		.word	1
  45 0034 01000000 		.word	1
  46 0038 01000000 		.word	1
  47 003c 01000000 		.word	1
  48 0040 01000000 		.word	1
  49 0044 01000000 		.word	1
  50 0048 01000000 		.word	1
  51 004c 01000000 		.word	1
  52 0050 01000000 		.word	1
  53 0054 00000000 		.word	0
  54 0058 01000000 		.word	1
  55 005c 00000000 		.word	0
  56 0060 00000000 		.word	0
  57 0064 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 2


  58 0068 00000000 		.word	0
  59 006c 00000000 		.word	0
  60 0070 00000000 		.word	0
  61 0074 00000000 		.word	0
  62 0078 00000000 		.word	0
  63 007c 00000000 		.word	0
  64 0080 00000000 		.word	0
  65 0084 00000000 		.word	0
  66 0088 00000000 		.word	0
  67 008c 00000000 		.word	0
  68 0090 00000000 		.word	0
  69 0094 00000000 		.word	0
  70 0098 01000000 		.word	1
  71 009c 01000000 		.word	1
  72 00a0 00000000 		.word	0
  73 00a4 01000000 		.word	1
  74 00a8 00000000 		.word	0
  75 00ac 01000000 		.word	1
  76 00b0 01000000 		.word	1
  77 00b4 01000000 		.word	1
  78 00b8 01000000 		.word	1
  79 00bc 01000000 		.word	1
  80 00c0 00000000 		.word	0
  81 00c4 01000000 		.word	1
  82 00c8 01000000 		.word	1
  83 00cc 01000000 		.word	1
  84 00d0 00000000 		.word	0
  85 00d4 01000000 		.word	1
  86 00d8 01000000 		.word	1
  87 00dc 01000000 		.word	1
  88 00e0 00000000 		.word	0
  89 00e4 01000000 		.word	1
  90 00e8 01000000 		.word	1
  91 00ec 00000000 		.word	0
  92 00f0 00000000 		.word	0
  93 00f4 00000000 		.word	0
  94 00f8 01000000 		.word	1
  95 00fc 00000000 		.word	0
  96 0100 00000000 		.word	0
  97 0104 00000000 		.word	0
  98 0108 01000000 		.word	1
  99 010c 00000000 		.word	0
 100 0110 00000000 		.word	0
 101 0114 00000000 		.word	0
 102 0118 00000000 		.word	0
 103 011c 00000000 		.word	0
 104 0120 00000000 		.word	0
 105 0124 00000000 		.word	0
 106 0128 01000000 		.word	1
 107 012c 00000000 		.word	0
 108 0130 01000000 		.word	1
 109 0134 01000000 		.word	1
 110 0138 01000000 		.word	1
 111 013c 01000000 		.word	1
 112 0140 00000000 		.word	0
 113 0144 01000000 		.word	1
 114 0148 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 3


 115 014c 01000000 		.word	1
 116 0150 00000000 		.word	0
 117 0154 01000000 		.word	1
 118 0158 01000000 		.word	1
 119 015c 01000000 		.word	1
 120 0160 00000000 		.word	0
 121 0164 01000000 		.word	1
 122 0168 00000000 		.word	0
 123 016c 01000000 		.word	1
 124 0170 01000000 		.word	1
 125 0174 01000000 		.word	1
 126 0178 00000000 		.word	0
 127 017c 01000000 		.word	1
 128 0180 01000000 		.word	1
 129 0184 00000000 		.word	0
 130 0188 00000000 		.word	0
 131 018c 00000000 		.word	0
 132 0190 01000000 		.word	1
 133 0194 00000000 		.word	0
 134 0198 01000000 		.word	1
 135 019c 00000000 		.word	0
 136 01a0 00000000 		.word	0
 137 01a4 00000000 		.word	0
 138 01a8 01000000 		.word	1
 139 01ac 00000000 		.word	0
 140 01b0 01000000 		.word	1
 141 01b4 00000000 		.word	0
 142 01b8 00000000 		.word	0
 143 01bc 00000000 		.word	0
 144 01c0 00000000 		.word	0
 145 01c4 00000000 		.word	0
 146 01c8 01000000 		.word	1
 147 01cc 01000000 		.word	1
 148 01d0 00000000 		.word	0
 149 01d4 01000000 		.word	1
 150 01d8 01000000 		.word	1
 151 01dc 01000000 		.word	1
 152 01e0 00000000 		.word	0
 153 01e4 01000000 		.word	1
 154 01e8 00000000 		.word	0
 155 01ec 01000000 		.word	1
 156 01f0 00000000 		.word	0
 157 01f4 01000000 		.word	1
 158 01f8 00000000 		.word	0
 159 01fc 01000000 		.word	1
 160 0200 00000000 		.word	0
 161 0204 01000000 		.word	1
 162 0208 01000000 		.word	1
 163 020c 01000000 		.word	1
 164 0210 00000000 		.word	0
 165 0214 01000000 		.word	1
 166 0218 01000000 		.word	1
 167 021c 00000000 		.word	0
 168 0220 01000000 		.word	1
 169 0224 00000000 		.word	0
 170 0228 01000000 		.word	1
 171 022c 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 4


 172 0230 00000000 		.word	0
 173 0234 00000000 		.word	0
 174 0238 01000000 		.word	1
 175 023c 00000000 		.word	0
 176 0240 01000000 		.word	1
 177 0244 00000000 		.word	0
 178 0248 01000000 		.word	1
 179 024c 00000000 		.word	0
 180 0250 01000000 		.word	1
 181 0254 00000000 		.word	0
 182 0258 00000000 		.word	0
 183 025c 00000000 		.word	0
 184 0260 01000000 		.word	1
 185 0264 01000000 		.word	1
 186 0268 00000000 		.word	0
 187 026c 01000000 		.word	1
 188 0270 00000000 		.word	0
 189 0274 01000000 		.word	1
 190 0278 00000000 		.word	0
 191 027c 01000000 		.word	1
 192 0280 01000000 		.word	1
 193 0284 01000000 		.word	1
 194 0288 00000000 		.word	0
 195 028c 01000000 		.word	1
 196 0290 00000000 		.word	0
 197 0294 01000000 		.word	1
 198 0298 00000000 		.word	0
 199 029c 01000000 		.word	1
 200 02a0 00000000 		.word	0
 201 02a4 01000000 		.word	1
 202 02a8 01000000 		.word	1
 203 02ac 01000000 		.word	1
 204 02b0 01000000 		.word	1
 205 02b4 00000000 		.word	0
 206 02b8 00000000 		.word	0
 207 02bc 00000000 		.word	0
 208 02c0 01000000 		.word	1
 209 02c4 00000000 		.word	0
 210 02c8 01000000 		.word	1
 211 02cc 00000000 		.word	0
 212 02d0 00000000 		.word	0
 213 02d4 00000000 		.word	0
 214 02d8 01000000 		.word	1
 215 02dc 00000000 		.word	0
 216 02e0 00000000 		.word	0
 217 02e4 00000000 		.word	0
 218 02e8 01000000 		.word	1
 219 02ec 00000000 		.word	0
 220 02f0 00000000 		.word	0
 221 02f4 00000000 		.word	0
 222 02f8 01000000 		.word	1
 223 02fc 01000000 		.word	1
 224 0300 01000000 		.word	1
 225 0304 01000000 		.word	1
 226 0308 00000000 		.word	0
 227 030c 01000000 		.word	1
 228 0310 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 5


 229 0314 01000000 		.word	1
 230 0318 01000000 		.word	1
 231 031c 01000000 		.word	1
 232 0320 01000000 		.word	1
 233 0324 01000000 		.word	1
 234 0328 01000000 		.word	1
 235 032c 01000000 		.word	1
 236 0330 01000000 		.word	1
 237 0334 01000000 		.word	1
 238 0338 01000000 		.word	1
 239 033c 01000000 		.word	1
 240 0340 00000000 		.word	0
 241 0344 01000000 		.word	1
 242 0348 01000000 		.word	1
 243 034c 00000000 		.word	0
 244 0350 00000000 		.word	0
 245 0354 00000000 		.word	0
 246 0358 00000000 		.word	0
 247 035c 00000000 		.word	0
 248 0360 00000000 		.word	0
 249 0364 00000000 		.word	0
 250 0368 00000000 		.word	0
 251 036c 00000000 		.word	0
 252 0370 00000000 		.word	0
 253 0374 00000000 		.word	0
 254 0378 00000000 		.word	0
 255 037c 00000000 		.word	0
 256 0380 00000000 		.word	0
 257 0384 00000000 		.word	0
 258 0388 00000000 		.word	0
 259 038c 00000000 		.word	0
 260 0390 01000000 		.word	1
 261 0394 01000000 		.word	1
 262 0398 00000000 		.word	0
 263 039c 01000000 		.word	1
 264 03a0 01000000 		.word	1
 265 03a4 01000000 		.word	1
 266 03a8 01000000 		.word	1
 267 03ac 01000000 		.word	1
 268 03b0 01000000 		.word	1
 269 03b4 01000000 		.word	1
 270 03b8 01000000 		.word	1
 271 03bc 01000000 		.word	1
 272 03c0 01000000 		.word	1
 273 03c4 01000000 		.word	1
 274 03c8 00000000 		.word	0
 275 03cc 01000000 		.word	1
 276 03d0 01000000 		.word	1
 277 03d4 01000000 		.word	1
 278 03d8 01000000 		.word	1
 279 03dc 01000000 		.word	1
 280 03e0 01000000 		.word	1
 281 03e4 00000000 		.word	0
 282 03e8 00000000 		.word	0
 283 03ec 00000000 		.word	0
 284 03f0 00000000 		.word	0
 285 03f4 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 6


 286 03f8 00000000 		.word	0
 287 03fc 00000000 		.word	0
 288 0400 01000000 		.word	1
 289 0404 00000000 		.word	0
 290 0408 00000000 		.word	0
 291 040c 00000000 		.word	0
 292 0410 00000000 		.word	0
 293 0414 00000000 		.word	0
 294 0418 00000000 		.word	0
 295 041c 00000000 		.word	0
 296 0420 00000000 		.word	0
 297 0424 00000000 		.word	0
 298 0428 01000000 		.word	1
 299 042c 01000000 		.word	1
 300 0430 01000000 		.word	1
 301 0434 01000000 		.word	1
 302 0438 01000000 		.word	1
 303 043c 01000000 		.word	1
 304 0440 01000000 		.word	1
 305 0444 01000000 		.word	1
 306 0448 01000000 		.word	1
 307 044c 01000000 		.word	1
 308 0450 01000000 		.word	1
 309 0454 01000000 		.word	1
 310 0458 01000000 		.word	1
 311 045c 01000000 		.word	1
 312 0460 01000000 		.word	1
 313 0464 01000000 		.word	1
 314 0468 01000000 		.word	1
 315 046c 01000000 		.word	1
 316 0470 01000000 		.word	1
 317 0474 01000000 		.word	1
 318              		.global	start_pos
 319              		.align	2
 320              		.type	start_pos, %object
 321              		.size	start_pos, 8
 322              	start_pos:
 323 0478 01000000 		.word	1
 324 047c 01000000 		.word	1
 325              		.global	food_list
 326              		.align	2
 327              		.type	food_list, %object
 328              		.size	food_list, 40
 329              	food_list:
 330 0480 01000000 		.word	1
 331 0484 09000000 		.word	9
 332 0488 05000000 		.word	5
 333 048c 05000000 		.word	5
 334 0490 07000000 		.word	7
 335 0494 01000000 		.word	1
 336 0498 0D000000 		.word	13
 337 049c 05000000 		.word	5
 338 04a0 09000000 		.word	9
 339 04a4 09000000 		.word	9
 340              		.comm	path_of_coordinates,2280,4
 341              		.section	.rodata
 342              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 7


 343              	.LC0:
 344 0000 256400   		.ascii	"%d\000"
 345              		.section	.text.printMap,"ax",%progbits
 346              		.align	2
 347              		.global	printMap
 348              		.thumb
 349              		.thumb_func
 350              		.type	printMap, %function
 351              	printMap:
 352              	.LFB1:
 353              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** 
  18:pathfinding.c **** #define MAX_ROWS 15
  19:pathfinding.c **** #define MAX_COLS 19
  20:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  21:pathfinding.c **** 
  22:pathfinding.c **** enum InstructionDirection {GoForward, waitForLeftTurn, waitForRightTurn, uTurn, ForwardUntilTarget,
  23:pathfinding.c **** enum OrientationState {Up, Down, Left, Right};
  24:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Down; // initialize 
  25:pathfinding.c **** enum InstructionDirection Instructions[285];
  26:pathfinding.c **** struct Instructions {
  27:pathfinding.c ****     enum InstructionDirection direction;
  28:pathfinding.c ****     int ignoreL;
  29:pathfinding.c ****     int ignoreR;
  30:pathfinding.c **** };
  31:pathfinding.c **** int numSteps;
  32:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  33:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  34:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  35:pathfinding.c **** void processInstructionList(int index);
  36:pathfinding.c **** 
  37:pathfinding.c **** int map[15][19] = {
  38:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  39:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  40:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
  41:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  42:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  43:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  44:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  45:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  46:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 8


  47:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  48:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  49:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  50:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  51:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  52:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  53:pathfinding.c **** };
  54:pathfinding.c **** 
  55:pathfinding.c **** /*
  56:pathfinding.c **** int map[15][19] = {
  57:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  58:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  59:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  60:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  61:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  62:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  63:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  64:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  65:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  66:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  67:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  68:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  69:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  70:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  71:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  72:pathfinding.c **** };
  73:pathfinding.c **** */
  74:pathfinding.c **** 
  75:pathfinding.c **** 
  76:pathfinding.c **** int start_pos[2] = {1,1};
  77:pathfinding.c **** 
  78:pathfinding.c **** int food_list[5][2]= {
  79:pathfinding.c **** {1,9},
  80:pathfinding.c **** {5,5},
  81:pathfinding.c **** {7,1},
  82:pathfinding.c **** {13,5},
  83:pathfinding.c **** {9,9}
  84:pathfinding.c **** };
  85:pathfinding.c **** 
  86:pathfinding.c **** int path_of_coordinates[285][2];
  87:pathfinding.c **** 
  88:pathfinding.c **** 
  89:pathfinding.c **** // MAP INITIALISATION CODE
  90:pathfinding.c **** 
  91:pathfinding.c **** /*void printMap(char map[MAX_ROWS][MAX_COLS]) {
  92:pathfinding.c ****     // Print the map in a grid format
  93:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
  94:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
  95:pathfinding.c ****             printf("%c", map[i][j]);
  96:pathfinding.c ****         }
  97:pathfinding.c ****         printf("\n");
  98:pathfinding.c ****     }
  99:pathfinding.c **** }*/
 100:pathfinding.c **** 
 101:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 354              		.loc 1 101 0
 355              		.cfi_startproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 9


 356              		@ args = 0, pretend = 0, frame = 16
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 84B0     		sub	sp, sp, #16
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 367              	.LBB2:
 102:pathfinding.c ****     // Print the map in a grid format
 103:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 368              		.loc 1 103 0
 369 0008 0023     		movs	r3, #0
 370 000a FB60     		str	r3, [r7, #12]
 371 000c 1BE0     		b	.L2
 372              	.L5:
 373              	.LBB3:
 104:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 374              		.loc 1 104 0
 375 000e 0023     		movs	r3, #0
 376 0010 BB60     		str	r3, [r7, #8]
 377 0012 0FE0     		b	.L3
 378              	.L4:
 105:pathfinding.c ****             printf("%d", map[i][j]);
 379              		.loc 1 105 0 discriminator 3
 380 0014 FB68     		ldr	r3, [r7, #12]
 381 0016 4C22     		movs	r2, #76
 382 0018 02FB03F3 		mul	r3, r2, r3
 383 001c 7A68     		ldr	r2, [r7, #4]
 384 001e 1344     		add	r3, r3, r2
 385 0020 BA68     		ldr	r2, [r7, #8]
 386 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 387 0026 1946     		mov	r1, r3
 388 0028 0A48     		ldr	r0, .L6
 389 002a FFF7FEFF 		bl	printf
 104:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 390              		.loc 1 104 0 discriminator 3
 391 002e BB68     		ldr	r3, [r7, #8]
 392 0030 0133     		adds	r3, r3, #1
 393 0032 BB60     		str	r3, [r7, #8]
 394              	.L3:
 104:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 395              		.loc 1 104 0 is_stmt 0 discriminator 1
 396 0034 BB68     		ldr	r3, [r7, #8]
 397 0036 122B     		cmp	r3, #18
 398 0038 ECDD     		ble	.L4
 399              	.LBE3:
 106:pathfinding.c ****         }
 107:pathfinding.c ****         printf("\n");
 400              		.loc 1 107 0 is_stmt 1 discriminator 2
 401 003a 0A20     		movs	r0, #10
 402 003c FFF7FEFF 		bl	putchar
 103:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 403              		.loc 1 103 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 10


 404 0040 FB68     		ldr	r3, [r7, #12]
 405 0042 0133     		adds	r3, r3, #1
 406 0044 FB60     		str	r3, [r7, #12]
 407              	.L2:
 103:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 408              		.loc 1 103 0 is_stmt 0 discriminator 1
 409 0046 FB68     		ldr	r3, [r7, #12]
 410 0048 0E2B     		cmp	r3, #14
 411 004a E0DD     		ble	.L5
 412              	.LBE2:
 108:pathfinding.c ****     }
 109:pathfinding.c **** }
 413              		.loc 1 109 0 is_stmt 1
 414 004c 00BF     		nop
 415 004e 1037     		adds	r7, r7, #16
 416              		.cfi_def_cfa_offset 8
 417 0050 BD46     		mov	sp, r7
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0052 80BD     		pop	{r7, pc}
 421              	.L7:
 422              		.align	2
 423              	.L6:
 424 0054 00000000 		.word	.LC0
 425              		.cfi_endproc
 426              	.LFE1:
 427              		.size	printMap, .-printMap
 428              		.section	.text.clearMap,"ax",%progbits
 429              		.align	2
 430              		.global	clearMap
 431              		.thumb
 432              		.thumb_func
 433              		.type	clearMap, %function
 434              	clearMap:
 435              	.LFB2:
 110:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 436              		.loc 1 110 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 16
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 85B0     		sub	sp, sp, #20
 445              		.cfi_def_cfa_offset 24
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 449              	.LBB4:
 111:pathfinding.c ****     // Print the map in a grid format
 112:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 450              		.loc 1 112 0
 451 0008 0023     		movs	r3, #0
 452 000a FB60     		str	r3, [r7, #12]
 453 000c 20E0     		b	.L9
 454              	.L13:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 11


 455              	.LBB5:
 113:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 456              		.loc 1 113 0
 457 000e 0023     		movs	r3, #0
 458 0010 BB60     		str	r3, [r7, #8]
 459 0012 17E0     		b	.L10
 460              	.L12:
 114:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
 461              		.loc 1 114 0
 462 0014 FB68     		ldr	r3, [r7, #12]
 463 0016 4C22     		movs	r2, #76
 464 0018 02FB03F3 		mul	r3, r2, r3
 465 001c 7A68     		ldr	r2, [r7, #4]
 466 001e 1344     		add	r3, r3, r2
 467 0020 BA68     		ldr	r2, [r7, #8]
 468 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 469 0026 012B     		cmp	r3, #1
 470 0028 09D0     		beq	.L11
 471              		.loc 1 114 0 is_stmt 0 discriminator 1
 472 002a FB68     		ldr	r3, [r7, #12]
 473 002c 4C22     		movs	r2, #76
 474 002e 02FB03F3 		mul	r3, r2, r3
 475 0032 7A68     		ldr	r2, [r7, #4]
 476 0034 1344     		add	r3, r3, r2
 477 0036 BA68     		ldr	r2, [r7, #8]
 478 0038 0021     		movs	r1, #0
 479 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 480              	.L11:
 113:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 481              		.loc 1 113 0 is_stmt 1 discriminator 2
 482 003e BB68     		ldr	r3, [r7, #8]
 483 0040 0133     		adds	r3, r3, #1
 484 0042 BB60     		str	r3, [r7, #8]
 485              	.L10:
 113:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 486              		.loc 1 113 0 is_stmt 0 discriminator 1
 487 0044 BB68     		ldr	r3, [r7, #8]
 488 0046 122B     		cmp	r3, #18
 489 0048 E4DD     		ble	.L12
 490              	.LBE5:
 112:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 491              		.loc 1 112 0 is_stmt 1 discriminator 2
 492 004a FB68     		ldr	r3, [r7, #12]
 493 004c 0133     		adds	r3, r3, #1
 494 004e FB60     		str	r3, [r7, #12]
 495              	.L9:
 112:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 496              		.loc 1 112 0 is_stmt 0 discriminator 1
 497 0050 FB68     		ldr	r3, [r7, #12]
 498 0052 0E2B     		cmp	r3, #14
 499 0054 DBDD     		ble	.L13
 500              	.LBE4:
 115:pathfinding.c ****         }
 116:pathfinding.c ****     }
 117:pathfinding.c **** }
 501              		.loc 1 117 0 is_stmt 1
 502 0056 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 12


 503 0058 1437     		adds	r7, r7, #20
 504              		.cfi_def_cfa_offset 4
 505 005a BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 005c 80BC     		pop	{r7}
 509              		.cfi_restore 7
 510              		.cfi_def_cfa_offset 0
 511 005e 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE2:
 514              		.size	clearMap, .-clearMap
 515              		.comm	list_of_optimal_coordinates,2280,4
 516              		.global	moves
 517              		.data
 518              		.align	2
 519              		.type	moves, %object
 520              		.size	moves, 32
 521              	moves:
 522 04a8 00000000 		.word	0
 523 04ac 01000000 		.word	1
 524 04b0 00000000 		.word	0
 525 04b4 FFFFFFFF 		.word	-1
 526 04b8 01000000 		.word	1
 527 04bc 00000000 		.word	0
 528 04c0 FFFFFFFF 		.word	-1
 529 04c4 00000000 		.word	0
 530              		.section	.text.isValidMove,"ax",%progbits
 531              		.align	2
 532              		.global	isValidMove
 533              		.thumb
 534              		.thumb_func
 535              		.type	isValidMove, %function
 536              	isValidMove:
 537              	.LFB3:
 118:pathfinding.c **** struct Location {
 119:pathfinding.c ****     int row;
 120:pathfinding.c ****     int col;
 121:pathfinding.c **** };
 122:pathfinding.c **** 
 123:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 124:pathfinding.c **** 
 125:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 126:pathfinding.c **** 
 127:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 538              		.loc 1 127 0
 539              		.cfi_startproc
 540              		@ args = 4, pretend = 0, frame = 16
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 0002 85B0     		sub	sp, sp, #20
 547              		.cfi_def_cfa_offset 24
 548 0004 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 13


 550 0006 F860     		str	r0, [r7, #12]
 551 0008 B960     		str	r1, [r7, #8]
 552 000a 7A60     		str	r2, [r7, #4]
 553 000c 3B60     		str	r3, [r7]
 128:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 554              		.loc 1 128 0
 555 000e FB68     		ldr	r3, [r7, #12]
 556 0010 002B     		cmp	r3, #0
 557 0012 17DB     		blt	.L15
 558              		.loc 1 128 0 is_stmt 0 discriminator 1
 559 0014 FA68     		ldr	r2, [r7, #12]
 560 0016 7B68     		ldr	r3, [r7, #4]
 561 0018 9A42     		cmp	r2, r3
 562 001a 13DA     		bge	.L15
 563              		.loc 1 128 0 discriminator 3
 564 001c BB68     		ldr	r3, [r7, #8]
 565 001e 002B     		cmp	r3, #0
 566 0020 10DB     		blt	.L15
 567              		.loc 1 128 0 discriminator 5
 568 0022 BA68     		ldr	r2, [r7, #8]
 569 0024 3B68     		ldr	r3, [r7]
 570 0026 9A42     		cmp	r2, r3
 571 0028 0CDA     		bge	.L15
 572              		.loc 1 128 0 discriminator 7
 573 002a FB68     		ldr	r3, [r7, #12]
 574 002c 4C22     		movs	r2, #76
 575 002e 02FB03F3 		mul	r3, r2, r3
 576 0032 BA69     		ldr	r2, [r7, #24]
 577 0034 1344     		add	r3, r3, r2
 578 0036 BA68     		ldr	r2, [r7, #8]
 579 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 580 003c 002B     		cmp	r3, #0
 581 003e 01D1     		bne	.L15
 582              		.loc 1 128 0 discriminator 9
 583 0040 0123     		movs	r3, #1
 584 0042 00E0     		b	.L16
 585              	.L15:
 586              		.loc 1 128 0 discriminator 10
 587 0044 0023     		movs	r3, #0
 588              	.L16:
 589              		.loc 1 128 0 discriminator 12
 590 0046 03F00103 		and	r3, r3, #1
 591 004a DBB2     		uxtb	r3, r3
 129:pathfinding.c **** }
 592              		.loc 1 129 0 is_stmt 1 discriminator 12
 593 004c 1846     		mov	r0, r3
 594 004e 1437     		adds	r7, r7, #20
 595              		.cfi_def_cfa_offset 4
 596 0050 BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0052 80BC     		pop	{r7}
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0054 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE3:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 14


 605              		.size	isValidMove, .-isValidMove
 606 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 607              		.align	2
 608              		.global	dijkstra
 609              		.thumb
 610              		.thumb_func
 611              		.type	dijkstra, %function
 612              	dijkstra:
 613              	.LFB4:
 130:pathfinding.c **** 
 131:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
 614              		.loc 1 131 0
 615              		.cfi_startproc
 616              		@ args = 12, pretend = 8, frame = 5816
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 82B0     		sub	sp, sp, #8
 619              		.cfi_def_cfa_offset 8
 620 0002 90B5     		push	{r4, r7, lr}
 621              		.cfi_def_cfa_offset 20
 622              		.cfi_offset 4, -20
 623              		.cfi_offset 7, -16
 624              		.cfi_offset 14, -12
 625 0004 ADF5B65D 		sub	sp, sp, #5824
 626              		.cfi_def_cfa_offset 5844
 627 0008 81B0     		sub	sp, sp, #4
 628              		.cfi_def_cfa_offset 5848
 629 000a 02AF     		add	r7, sp, #8
 630              		.cfi_def_cfa 7, 5840
 631 000c 07F11804 		add	r4, r7, #24
 632 0010 0C3C     		subs	r4, r4, #12
 633 0012 2060     		str	r0, [r4]
 634 0014 07F11800 		add	r0, r7, #24
 635 0018 1438     		subs	r0, r0, #20
 636 001a 80E80600 		stmia	r0, {r1, r2}
 637 001e 07F5B652 		add	r2, r7, #5824
 638 0022 02F10C02 		add	r2, r2, #12
 639 0026 1360     		str	r3, [r2]
 640              	.LBB6:
 132:pathfinding.c **** 
 133:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 134:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 641              		.loc 1 134 0
 642 0028 0023     		movs	r3, #0
 643 002a 07F5B552 		add	r2, r7, #5792
 644 002e 02F11402 		add	r2, r2, #20
 645 0032 1360     		str	r3, [r2]
 646 0034 3AE0     		b	.L19
 647              	.L22:
 648              	.LBB7:
 135:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 649              		.loc 1 135 0
 650 0036 0023     		movs	r3, #0
 651 0038 07F5B552 		add	r2, r7, #5792
 652 003c 02F11002 		add	r2, r2, #16
 653 0040 1360     		str	r3, [r2]
 654 0042 21E0     		b	.L20
 655              	.L21:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 15


 136:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 656              		.loc 1 136 0 discriminator 3
 657 0044 07F58F51 		add	r1, r7, #4576
 658 0048 01F10C01 		add	r1, r1, #12
 659 004c 07F5B553 		add	r3, r7, #5792
 660 0050 03F11403 		add	r3, r3, #20
 661 0054 1A68     		ldr	r2, [r3]
 662 0056 1346     		mov	r3, r2
 663 0058 DB00     		lsls	r3, r3, #3
 664 005a 1344     		add	r3, r3, r2
 665 005c 5B00     		lsls	r3, r3, #1
 666 005e 1344     		add	r3, r3, r2
 667 0060 07F5B552 		add	r2, r7, #5792
 668 0064 02F11002 		add	r2, r2, #16
 669 0068 1268     		ldr	r2, [r2]
 670 006a 1344     		add	r3, r3, r2
 671 006c 0122     		movs	r2, #1
 672 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 135:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 673              		.loc 1 135 0 discriminator 3
 674 0072 07F5B553 		add	r3, r7, #5792
 675 0076 03F11003 		add	r3, r3, #16
 676 007a 1B68     		ldr	r3, [r3]
 677 007c 0133     		adds	r3, r3, #1
 678 007e 07F5B552 		add	r2, r7, #5792
 679 0082 02F11002 		add	r2, r2, #16
 680 0086 1360     		str	r3, [r2]
 681              	.L20:
 135:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 682              		.loc 1 135 0 is_stmt 0 discriminator 1
 683 0088 07F5B553 		add	r3, r7, #5792
 684 008c 03F11003 		add	r3, r3, #16
 685 0090 1B68     		ldr	r3, [r3]
 686 0092 122B     		cmp	r3, #18
 687 0094 D6DD     		ble	.L21
 688              	.LBE7:
 134:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 689              		.loc 1 134 0 is_stmt 1 discriminator 2
 690 0096 07F5B553 		add	r3, r7, #5792
 691 009a 03F11403 		add	r3, r3, #20
 692 009e 1B68     		ldr	r3, [r3]
 693 00a0 0133     		adds	r3, r3, #1
 694 00a2 07F5B552 		add	r2, r7, #5792
 695 00a6 02F11402 		add	r2, r2, #20
 696 00aa 1360     		str	r3, [r2]
 697              	.L19:
 134:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 698              		.loc 1 134 0 is_stmt 0 discriminator 1
 699 00ac 07F5B553 		add	r3, r7, #5792
 700 00b0 03F11403 		add	r3, r3, #20
 701 00b4 1B68     		ldr	r3, [r3]
 702 00b6 0E2B     		cmp	r3, #14
 703 00b8 BDDD     		ble	.L22
 704              	.LBE6:
 137:pathfinding.c ****         }
 138:pathfinding.c ****     }
 139:pathfinding.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 16


 140:pathfinding.c ****     struct PriorityQueue {
 141:pathfinding.c ****         struct Location location;
 142:pathfinding.c ****         int distance;
 143:pathfinding.c ****     };
 144:pathfinding.c **** 
 145:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 146:pathfinding.c ****     int pqSize = 0;
 705              		.loc 1 146 0 is_stmt 1
 706 00ba 0023     		movs	r3, #0
 707 00bc 07F5B552 		add	r2, r7, #5792
 708 00c0 02F10C02 		add	r2, r2, #12
 709 00c4 1360     		str	r3, [r2]
 710              	.LBB8:
 147:pathfinding.c **** 
 148:pathfinding.c ****     // Initialize distances and paths arrays
 149:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 150:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 151:pathfinding.c **** 
 152:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 711              		.loc 1 152 0
 712 00c6 0023     		movs	r3, #0
 713 00c8 07F5B552 		add	r2, r7, #5792
 714 00cc 02F10802 		add	r2, r2, #8
 715 00d0 1360     		str	r3, [r2]
 716 00d2 3AE0     		b	.L23
 717              	.L26:
 718              	.LBB9:
 153:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 719              		.loc 1 153 0
 720 00d4 0023     		movs	r3, #0
 721 00d6 07F5B552 		add	r2, r7, #5792
 722 00da 02F10402 		add	r2, r2, #4
 723 00de 1360     		str	r3, [r2]
 724 00e0 21E0     		b	.L24
 725              	.L25:
 154:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 726              		.loc 1 154 0 discriminator 3
 727 00e2 07F13802 		add	r2, r7, #56
 728 00e6 1C3A     		subs	r2, r2, #28
 729 00e8 07F5B553 		add	r3, r7, #5792
 730 00ec 03F10803 		add	r3, r3, #8
 731 00f0 1968     		ldr	r1, [r3]
 732 00f2 0B46     		mov	r3, r1
 733 00f4 DB00     		lsls	r3, r3, #3
 734 00f6 0B44     		add	r3, r3, r1
 735 00f8 5B00     		lsls	r3, r3, #1
 736 00fa 0B44     		add	r3, r3, r1
 737 00fc 07F5B551 		add	r1, r7, #5792
 738 0100 01F10401 		add	r1, r1, #4
 739 0104 0968     		ldr	r1, [r1]
 740 0106 0B44     		add	r3, r3, r1
 741 0108 4FF47A71 		mov	r1, #1000
 742 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 153:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 743              		.loc 1 153 0 discriminator 3
 744 0110 07F5B553 		add	r3, r7, #5792
 745 0114 03F10403 		add	r3, r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 17


 746 0118 1B68     		ldr	r3, [r3]
 747 011a 0133     		adds	r3, r3, #1
 748 011c 07F5B552 		add	r2, r7, #5792
 749 0120 02F10402 		add	r2, r2, #4
 750 0124 1360     		str	r3, [r2]
 751              	.L24:
 153:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 752              		.loc 1 153 0 is_stmt 0 discriminator 1
 753 0126 07F5B553 		add	r3, r7, #5792
 754 012a 03F10403 		add	r3, r3, #4
 755 012e 1B68     		ldr	r3, [r3]
 756 0130 122B     		cmp	r3, #18
 757 0132 D6DD     		ble	.L25
 758              	.LBE9:
 152:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 759              		.loc 1 152 0 is_stmt 1 discriminator 2
 760 0134 07F5B553 		add	r3, r7, #5792
 761 0138 03F10803 		add	r3, r3, #8
 762 013c 1B68     		ldr	r3, [r3]
 763 013e 0133     		adds	r3, r3, #1
 764 0140 07F5B552 		add	r2, r7, #5792
 765 0144 02F10802 		add	r2, r2, #8
 766 0148 1360     		str	r3, [r2]
 767              	.L23:
 152:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 768              		.loc 1 152 0 is_stmt 0 discriminator 1
 769 014a 07F5B553 		add	r3, r7, #5792
 770 014e 03F10803 		add	r3, r3, #8
 771 0152 1B68     		ldr	r3, [r3]
 772 0154 0E2B     		cmp	r3, #14
 773 0156 BDDD     		ble	.L26
 774              	.LBE8:
 155:pathfinding.c ****         }
 156:pathfinding.c ****     }
 157:pathfinding.c **** 
 158:pathfinding.c ****     int stepNum = 0;
 775              		.loc 1 158 0 is_stmt 1
 776 0158 0023     		movs	r3, #0
 777 015a 07F5B552 		add	r2, r7, #5792
 778 015e 1360     		str	r3, [r2]
 159:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 779              		.loc 1 159 0
 780 0160 07F11803 		add	r3, r7, #24
 781 0164 143B     		subs	r3, r3, #20
 782 0166 1968     		ldr	r1, [r3]
 783 0168 07F11803 		add	r3, r7, #24
 784 016c 143B     		subs	r3, r3, #20
 785 016e 5868     		ldr	r0, [r3, #4]
 786 0170 07F13802 		add	r2, r7, #56
 787 0174 1C3A     		subs	r2, r2, #28
 788 0176 0B46     		mov	r3, r1
 789 0178 DB00     		lsls	r3, r3, #3
 790 017a 0B44     		add	r3, r3, r1
 791 017c 5B00     		lsls	r3, r3, #1
 792 017e 0B44     		add	r3, r3, r1
 793 0180 0344     		add	r3, r3, r0
 794 0182 0021     		movs	r1, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 18


 795 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 160:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 161:pathfinding.c ****     stepNum++; // increment stepNum
 796              		.loc 1 161 0
 797 0188 07F5B553 		add	r3, r7, #5792
 798 018c 1B68     		ldr	r3, [r3]
 799 018e 0133     		adds	r3, r3, #1
 800 0190 07F5B552 		add	r2, r7, #5792
 801 0194 1360     		str	r3, [r2]
 162:pathfinding.c **** 
 163:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
 802              		.loc 1 163 0
 803 0196 07F59362 		add	r2, r7, #1176
 804 019a 083A     		subs	r2, r2, #8
 805 019c 07F5B553 		add	r3, r7, #5792
 806 01a0 03F10C03 		add	r3, r3, #12
 807 01a4 1968     		ldr	r1, [r3]
 808 01a6 0B46     		mov	r3, r1
 809 01a8 5B00     		lsls	r3, r3, #1
 810 01aa 0B44     		add	r3, r3, r1
 811 01ac 9B00     		lsls	r3, r3, #2
 812 01ae 1A44     		add	r2, r2, r3
 813 01b0 07F11803 		add	r3, r7, #24
 814 01b4 143B     		subs	r3, r3, #20
 815 01b6 93E80300 		ldmia	r3, {r0, r1}
 816 01ba 82E80300 		stmia	r2, {r0, r1}
 164:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 817              		.loc 1 164 0
 818 01be 07F59362 		add	r2, r7, #1176
 819 01c2 083A     		subs	r2, r2, #8
 820 01c4 07F5B553 		add	r3, r7, #5792
 821 01c8 03F10C03 		add	r3, r3, #12
 822 01cc 1968     		ldr	r1, [r3]
 823 01ce 0B46     		mov	r3, r1
 824 01d0 5B00     		lsls	r3, r3, #1
 825 01d2 0B44     		add	r3, r3, r1
 826 01d4 9B00     		lsls	r3, r3, #2
 827 01d6 1344     		add	r3, r3, r2
 828 01d8 0833     		adds	r3, r3, #8
 829 01da 0022     		movs	r2, #0
 830 01dc 1A60     		str	r2, [r3]
 165:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 831              		.loc 1 165 0
 832 01de 07F5B553 		add	r3, r7, #5792
 833 01e2 03F10C03 		add	r3, r3, #12
 834 01e6 1B68     		ldr	r3, [r3]
 835 01e8 0133     		adds	r3, r3, #1
 836 01ea 07F5B552 		add	r2, r7, #5792
 837 01ee 02F10C02 		add	r2, r2, #12
 838 01f2 1360     		str	r3, [r2]
 166:pathfinding.c **** 
 167:pathfinding.c ****     while (pqSize > 0) {
 839              		.loc 1 167 0
 840 01f4 F5E1     		b	.L27
 841              	.L37:
 842              	.LBB10:
 168:pathfinding.c ****         int idx = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 19


 843              		.loc 1 168 0
 844 01f6 0023     		movs	r3, #0
 845 01f8 07F5B452 		add	r2, r7, #5760
 846 01fc 02F11C02 		add	r2, r2, #28
 847 0200 1360     		str	r3, [r2]
 848              	.LBB11:
 169:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 849              		.loc 1 169 0
 850 0202 0123     		movs	r3, #1
 851 0204 07F5B452 		add	r2, r7, #5760
 852 0208 02F11802 		add	r2, r2, #24
 853 020c 1360     		str	r3, [r2]
 854 020e 34E0     		b	.L28
 855              	.L30:
 170:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 856              		.loc 1 170 0
 857 0210 07F59362 		add	r2, r7, #1176
 858 0214 083A     		subs	r2, r2, #8
 859 0216 07F5B453 		add	r3, r7, #5760
 860 021a 03F11803 		add	r3, r3, #24
 861 021e 1968     		ldr	r1, [r3]
 862 0220 0B46     		mov	r3, r1
 863 0222 5B00     		lsls	r3, r3, #1
 864 0224 0B44     		add	r3, r3, r1
 865 0226 9B00     		lsls	r3, r3, #2
 866 0228 1344     		add	r3, r3, r2
 867 022a 0833     		adds	r3, r3, #8
 868 022c 1868     		ldr	r0, [r3]
 869 022e 07F59362 		add	r2, r7, #1176
 870 0232 083A     		subs	r2, r2, #8
 871 0234 07F5B453 		add	r3, r7, #5760
 872 0238 03F11C03 		add	r3, r3, #28
 873 023c 1968     		ldr	r1, [r3]
 874 023e 0B46     		mov	r3, r1
 875 0240 5B00     		lsls	r3, r3, #1
 876 0242 0B44     		add	r3, r3, r1
 877 0244 9B00     		lsls	r3, r3, #2
 878 0246 1344     		add	r3, r3, r2
 879 0248 0833     		adds	r3, r3, #8
 880 024a 1B68     		ldr	r3, [r3]
 881 024c 9842     		cmp	r0, r3
 882 024e 09DA     		bge	.L29
 171:pathfinding.c ****                 idx = i; // find the shortest distance location 
 883              		.loc 1 171 0
 884 0250 07F5B453 		add	r3, r7, #5760
 885 0254 03F11803 		add	r3, r3, #24
 886 0258 1B68     		ldr	r3, [r3]
 887 025a 07F5B452 		add	r2, r7, #5760
 888 025e 02F11C02 		add	r2, r2, #28
 889 0262 1360     		str	r3, [r2]
 890              	.L29:
 169:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 891              		.loc 1 169 0 discriminator 2
 892 0264 07F5B453 		add	r3, r7, #5760
 893 0268 03F11803 		add	r3, r3, #24
 894 026c 1B68     		ldr	r3, [r3]
 895 026e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 20


 896 0270 07F5B452 		add	r2, r7, #5760
 897 0274 02F11802 		add	r2, r2, #24
 898 0278 1360     		str	r3, [r2]
 899              	.L28:
 169:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 900              		.loc 1 169 0 is_stmt 0 discriminator 1
 901 027a 07F5B453 		add	r3, r7, #5760
 902 027e 03F11803 		add	r3, r3, #24
 903 0282 1A68     		ldr	r2, [r3]
 904 0284 07F5B553 		add	r3, r7, #5792
 905 0288 03F10C03 		add	r3, r3, #12
 906 028c 1B68     		ldr	r3, [r3]
 907 028e 9A42     		cmp	r2, r3
 908 0290 BEDB     		blt	.L30
 909              	.LBE11:
 172:pathfinding.c ****             }
 173:pathfinding.c ****         }
 174:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 910              		.loc 1 174 0 is_stmt 1
 911 0292 07F11801 		add	r1, r7, #24
 912 0296 0839     		subs	r1, r1, #8
 913 0298 07F59362 		add	r2, r7, #1176
 914 029c 083A     		subs	r2, r2, #8
 915 029e 07F5B453 		add	r3, r7, #5760
 916 02a2 03F11C03 		add	r3, r3, #28
 917 02a6 1868     		ldr	r0, [r3]
 918 02a8 0346     		mov	r3, r0
 919 02aa 5B00     		lsls	r3, r3, #1
 920 02ac 0344     		add	r3, r3, r0
 921 02ae 9B00     		lsls	r3, r3, #2
 922 02b0 1A44     		add	r2, r2, r3
 923 02b2 0B46     		mov	r3, r1
 924 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 925 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 175:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 926              		.loc 1 175 0
 927 02ba 07F5B553 		add	r3, r7, #5792
 928 02be 03F10C03 		add	r3, r3, #12
 929 02c2 1B68     		ldr	r3, [r3]
 930 02c4 591E     		subs	r1, r3, #1
 931 02c6 07F59362 		add	r2, r7, #1176
 932 02ca 083A     		subs	r2, r2, #8
 933 02cc 07F5B453 		add	r3, r7, #5760
 934 02d0 03F11C03 		add	r3, r3, #28
 935 02d4 1868     		ldr	r0, [r3]
 936 02d6 0346     		mov	r3, r0
 937 02d8 5B00     		lsls	r3, r3, #1
 938 02da 0344     		add	r3, r3, r0
 939 02dc 9B00     		lsls	r3, r3, #2
 940 02de D018     		adds	r0, r2, r3
 941 02e0 07F59362 		add	r2, r7, #1176
 942 02e4 083A     		subs	r2, r2, #8
 943 02e6 0B46     		mov	r3, r1
 944 02e8 5B00     		lsls	r3, r3, #1
 945 02ea 0B44     		add	r3, r3, r1
 946 02ec 9B00     		lsls	r3, r3, #2
 947 02ee 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 21


 948 02f0 0346     		mov	r3, r0
 949 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 950 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 176:pathfinding.c ****         pqSize--; // decrement pqSize
 951              		.loc 1 176 0
 952 02f8 07F5B553 		add	r3, r7, #5792
 953 02fc 03F10C03 		add	r3, r3, #12
 954 0300 1B68     		ldr	r3, [r3]
 955 0302 013B     		subs	r3, r3, #1
 956 0304 07F5B552 		add	r2, r7, #5792
 957 0308 02F10C02 		add	r2, r2, #12
 958 030c 1360     		str	r3, [r2]
 177:pathfinding.c **** 
 178:pathfinding.c ****         int row = current.location.row;
 959              		.loc 1 178 0
 960 030e 07F11803 		add	r3, r7, #24
 961 0312 083B     		subs	r3, r3, #8
 962 0314 1B68     		ldr	r3, [r3]
 963 0316 07F5B352 		add	r2, r7, #5728
 964 031a 02F11C02 		add	r2, r2, #28
 965 031e 1360     		str	r3, [r2]
 179:pathfinding.c ****         int col = current.location.col; // get current location details
 966              		.loc 1 179 0
 967 0320 07F11803 		add	r3, r7, #24
 968 0324 083B     		subs	r3, r3, #8
 969 0326 5B68     		ldr	r3, [r3, #4]
 970 0328 07F5B352 		add	r2, r7, #5728
 971 032c 02F11802 		add	r2, r2, #24
 972 0330 1360     		str	r3, [r2]
 180:pathfinding.c **** 
 181:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 973              		.loc 1 181 0
 974 0332 07F58F51 		add	r1, r7, #4576
 975 0336 01F10C01 		add	r1, r1, #12
 976 033a 07F5B353 		add	r3, r7, #5728
 977 033e 03F11C03 		add	r3, r3, #28
 978 0342 1A68     		ldr	r2, [r3]
 979 0344 1346     		mov	r3, r2
 980 0346 DB00     		lsls	r3, r3, #3
 981 0348 1344     		add	r3, r3, r2
 982 034a 5B00     		lsls	r3, r3, #1
 983 034c 1344     		add	r3, r3, r2
 984 034e 07F5B352 		add	r2, r7, #5728
 985 0352 02F11802 		add	r2, r2, #24
 986 0356 1268     		ldr	r2, [r2]
 987 0358 1344     		add	r3, r3, r2
 988 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 989 035e 012B     		cmp	r3, #1
 990 0360 40F03F81 		bne	.L27
 182:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 991              		.loc 1 182 0
 992 0364 07F58F51 		add	r1, r7, #4576
 993 0368 01F10C01 		add	r1, r1, #12
 994 036c 07F5B353 		add	r3, r7, #5728
 995 0370 03F11C03 		add	r3, r3, #28
 996 0374 1A68     		ldr	r2, [r3]
 997 0376 1346     		mov	r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 22


 998 0378 DB00     		lsls	r3, r3, #3
 999 037a 1344     		add	r3, r3, r2
 1000 037c 5B00     		lsls	r3, r3, #1
 1001 037e 1344     		add	r3, r3, r2
 1002 0380 07F5B352 		add	r2, r7, #5728
 1003 0384 02F11802 		add	r2, r2, #24
 1004 0388 1268     		ldr	r2, [r2]
 1005 038a 1344     		add	r3, r3, r2
 1006 038c 0022     		movs	r2, #0
 1007 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 183:pathfinding.c **** 
 184:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1008              		.loc 1 184 0
 1009 0392 07F5B653 		add	r3, r7, #5824
 1010 0396 03F10C03 		add	r3, r3, #12
 1011 039a 1A68     		ldr	r2, [r3]
 1012 039c 07F5B353 		add	r3, r7, #5728
 1013 03a0 03F11C03 		add	r3, r3, #28
 1014 03a4 1B68     		ldr	r3, [r3]
 1015 03a6 9A42     		cmp	r2, r3
 1016 03a8 0CD1     		bne	.L32
 1017              		.loc 1 184 0 is_stmt 0 discriminator 1
 1018 03aa 07F5B653 		add	r3, r7, #5824
 1019 03ae 03F11003 		add	r3, r3, #16
 1020 03b2 1A68     		ldr	r2, [r3]
 1021 03b4 07F5B353 		add	r3, r7, #5728
 1022 03b8 03F11803 		add	r3, r3, #24
 1023 03bc 1B68     		ldr	r3, [r3]
 1024 03be 9A42     		cmp	r2, r3
 1025 03c0 00F01881 		beq	.L43
 1026              	.L32:
 1027              	.LBB12:
 185:pathfinding.c ****                 break; // if reached target destination, end
 186:pathfinding.c ****             }
 187:pathfinding.c ****             // make a move, check if valid
 188:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1028              		.loc 1 188 0 is_stmt 1
 1029 03c4 0023     		movs	r3, #0
 1030 03c6 07F5B452 		add	r2, r7, #5760
 1031 03ca 02F11402 		add	r2, r2, #20
 1032 03ce 1360     		str	r3, [r2]
 1033 03d0 FFE0     		b	.L34
 1034              	.L36:
 1035              	.LBB13:
 189:pathfinding.c ****                 int newRow = row + moves[i].row;
 1036              		.loc 1 189 0
 1037 03d2 D04A     		ldr	r2, .L44
 1038 03d4 07F5B453 		add	r3, r7, #5760
 1039 03d8 03F11403 		add	r3, r3, #20
 1040 03dc 1B68     		ldr	r3, [r3]
 1041 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1042 03e2 07F5B353 		add	r3, r7, #5728
 1043 03e6 03F11C03 		add	r3, r3, #28
 1044 03ea 1B68     		ldr	r3, [r3]
 1045 03ec 1344     		add	r3, r3, r2
 1046 03ee 07F5B352 		add	r2, r7, #5728
 1047 03f2 02F11402 		add	r2, r2, #20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 23


 1048 03f6 1360     		str	r3, [r2]
 190:pathfinding.c ****                 int newCol = col + moves[i].col;
 1049              		.loc 1 190 0
 1050 03f8 C64A     		ldr	r2, .L44
 1051 03fa 07F5B453 		add	r3, r7, #5760
 1052 03fe 03F11403 		add	r3, r3, #20
 1053 0402 1B68     		ldr	r3, [r3]
 1054 0404 DB00     		lsls	r3, r3, #3
 1055 0406 1344     		add	r3, r3, r2
 1056 0408 5A68     		ldr	r2, [r3, #4]
 1057 040a 07F5B353 		add	r3, r7, #5728
 1058 040e 03F11803 		add	r3, r3, #24
 1059 0412 1B68     		ldr	r3, [r3]
 1060 0414 1344     		add	r3, r3, r2
 1061 0416 07F5B352 		add	r2, r7, #5728
 1062 041a 02F11002 		add	r2, r2, #16
 1063 041e 1360     		str	r3, [r2]
 191:pathfinding.c **** 
 192:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1064              		.loc 1 192 0
 1065 0420 07F11803 		add	r3, r7, #24
 1066 0424 0C3B     		subs	r3, r3, #12
 1067 0426 1B68     		ldr	r3, [r3]
 1068 0428 0093     		str	r3, [sp]
 1069 042a 1323     		movs	r3, #19
 1070 042c 0F22     		movs	r2, #15
 1071 042e 07F5B351 		add	r1, r7, #5728
 1072 0432 01F11001 		add	r1, r1, #16
 1073 0436 0968     		ldr	r1, [r1]
 1074 0438 07F5B350 		add	r0, r7, #5728
 1075 043c 00F11400 		add	r0, r0, #20
 1076 0440 0068     		ldr	r0, [r0]
 1077 0442 FFF7FEFF 		bl	isValidMove
 1078 0446 0346     		mov	r3, r0
 1079 0448 002B     		cmp	r3, #0
 1080 044a 00F0B780 		beq	.L35
 1081              		.loc 1 192 0 is_stmt 0 discriminator 1
 1082 044e 07F58F51 		add	r1, r7, #4576
 1083 0452 01F10C01 		add	r1, r1, #12
 1084 0456 07F5B353 		add	r3, r7, #5728
 1085 045a 03F11403 		add	r3, r3, #20
 1086 045e 1A68     		ldr	r2, [r3]
 1087 0460 1346     		mov	r3, r2
 1088 0462 DB00     		lsls	r3, r3, #3
 1089 0464 1344     		add	r3, r3, r2
 1090 0466 5B00     		lsls	r3, r3, #1
 1091 0468 1344     		add	r3, r3, r2
 1092 046a 07F5B352 		add	r2, r7, #5728
 1093 046e 02F11002 		add	r2, r2, #16
 1094 0472 1268     		ldr	r2, [r2]
 1095 0474 1344     		add	r3, r3, r2
 1096 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1097 047a 012B     		cmp	r3, #1
 1098 047c 40F09E80 		bne	.L35
 1099              	.LBB14:
 193:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1100              		.loc 1 193 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 24


 1101 0480 07F13802 		add	r2, r7, #56
 1102 0484 1C3A     		subs	r2, r2, #28
 1103 0486 07F5B353 		add	r3, r7, #5728
 1104 048a 03F11C03 		add	r3, r3, #28
 1105 048e 1968     		ldr	r1, [r3]
 1106 0490 0B46     		mov	r3, r1
 1107 0492 DB00     		lsls	r3, r3, #3
 1108 0494 0B44     		add	r3, r3, r1
 1109 0496 5B00     		lsls	r3, r3, #1
 1110 0498 0B44     		add	r3, r3, r1
 1111 049a 07F5B351 		add	r1, r7, #5728
 1112 049e 01F11801 		add	r1, r1, #24
 1113 04a2 0968     		ldr	r1, [r1]
 1114 04a4 0B44     		add	r3, r3, r1
 1115 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1116 04aa 0133     		adds	r3, r3, #1
 1117 04ac 07F5B352 		add	r2, r7, #5728
 1118 04b0 02F10C02 		add	r2, r2, #12
 1119 04b4 1360     		str	r3, [r2]
 194:pathfinding.c ****                     // take the shortest distance between new and existing
 195:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1120              		.loc 1 195 0
 1121 04b6 07F13802 		add	r2, r7, #56
 1122 04ba 1C3A     		subs	r2, r2, #28
 1123 04bc 07F5B353 		add	r3, r7, #5728
 1124 04c0 03F11403 		add	r3, r3, #20
 1125 04c4 1968     		ldr	r1, [r3]
 1126 04c6 0B46     		mov	r3, r1
 1127 04c8 DB00     		lsls	r3, r3, #3
 1128 04ca 0B44     		add	r3, r3, r1
 1129 04cc 5B00     		lsls	r3, r3, #1
 1130 04ce 0B44     		add	r3, r3, r1
 1131 04d0 07F5B351 		add	r1, r7, #5728
 1132 04d4 01F11001 		add	r1, r1, #16
 1133 04d8 0968     		ldr	r1, [r1]
 1134 04da 0B44     		add	r3, r3, r1
 1135 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1136 04e0 07F5B353 		add	r3, r7, #5728
 1137 04e4 03F10C03 		add	r3, r3, #12
 1138 04e8 1B68     		ldr	r3, [r3]
 1139 04ea 9A42     		cmp	r2, r3
 1140 04ec 66DD     		ble	.L35
 196:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1141              		.loc 1 196 0
 1142 04ee 07F13802 		add	r2, r7, #56
 1143 04f2 1C3A     		subs	r2, r2, #28
 1144 04f4 07F5B353 		add	r3, r7, #5728
 1145 04f8 03F11403 		add	r3, r3, #20
 1146 04fc 1968     		ldr	r1, [r3]
 1147 04fe 0B46     		mov	r3, r1
 1148 0500 DB00     		lsls	r3, r3, #3
 1149 0502 0B44     		add	r3, r3, r1
 1150 0504 5B00     		lsls	r3, r3, #1
 1151 0506 0B44     		add	r3, r3, r1
 1152 0508 07F5B351 		add	r1, r7, #5728
 1153 050c 01F11001 		add	r1, r1, #16
 1154 0510 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 25


 1155 0512 0B44     		add	r3, r3, r1
 1156 0514 07F5B351 		add	r1, r7, #5728
 1157 0518 01F10C01 		add	r1, r1, #12
 1158 051c 0968     		ldr	r1, [r1]
 1159 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 197:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 198:pathfinding.c ****                         
 199:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1160              		.loc 1 199 0
 1161 0522 07F59362 		add	r2, r7, #1176
 1162 0526 083A     		subs	r2, r2, #8
 1163 0528 07F5B553 		add	r3, r7, #5792
 1164 052c 03F10C03 		add	r3, r3, #12
 1165 0530 1968     		ldr	r1, [r3]
 1166 0532 0B46     		mov	r3, r1
 1167 0534 5B00     		lsls	r3, r3, #1
 1168 0536 0B44     		add	r3, r3, r1
 1169 0538 9B00     		lsls	r3, r3, #2
 1170 053a 1344     		add	r3, r3, r2
 1171 053c 07F5B352 		add	r2, r7, #5728
 1172 0540 02F11402 		add	r2, r2, #20
 1173 0544 1268     		ldr	r2, [r2]
 1174 0546 1A60     		str	r2, [r3]
 200:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1175              		.loc 1 200 0
 1176 0548 07F59362 		add	r2, r7, #1176
 1177 054c 083A     		subs	r2, r2, #8
 1178 054e 07F5B553 		add	r3, r7, #5792
 1179 0552 03F10C03 		add	r3, r3, #12
 1180 0556 1968     		ldr	r1, [r3]
 1181 0558 0B46     		mov	r3, r1
 1182 055a 5B00     		lsls	r3, r3, #1
 1183 055c 0B44     		add	r3, r3, r1
 1184 055e 9B00     		lsls	r3, r3, #2
 1185 0560 1344     		add	r3, r3, r2
 1186 0562 0433     		adds	r3, r3, #4
 1187 0564 07F5B352 		add	r2, r7, #5728
 1188 0568 02F11002 		add	r2, r2, #16
 1189 056c 1268     		ldr	r2, [r2]
 1190 056e 1A60     		str	r2, [r3]
 201:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1191              		.loc 1 201 0
 1192 0570 07F59362 		add	r2, r7, #1176
 1193 0574 083A     		subs	r2, r2, #8
 1194 0576 07F5B553 		add	r3, r7, #5792
 1195 057a 03F10C03 		add	r3, r3, #12
 1196 057e 1968     		ldr	r1, [r3]
 1197 0580 0B46     		mov	r3, r1
 1198 0582 5B00     		lsls	r3, r3, #1
 1199 0584 0B44     		add	r3, r3, r1
 1200 0586 9B00     		lsls	r3, r3, #2
 1201 0588 1344     		add	r3, r3, r2
 1202 058a 0833     		adds	r3, r3, #8
 1203 058c 07F5B352 		add	r2, r7, #5728
 1204 0590 02F10C02 		add	r2, r2, #12
 1205 0594 1268     		ldr	r2, [r2]
 1206 0596 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 26


 202:pathfinding.c ****                         
 203:pathfinding.c ****                         stepNum++;
 1207              		.loc 1 203 0
 1208 0598 07F5B553 		add	r3, r7, #5792
 1209 059c 1B68     		ldr	r3, [r3]
 1210 059e 0133     		adds	r3, r3, #1
 1211 05a0 07F5B552 		add	r2, r7, #5792
 1212 05a4 1360     		str	r3, [r2]
 204:pathfinding.c ****                         pqSize++;
 1213              		.loc 1 204 0
 1214 05a6 07F5B553 		add	r3, r7, #5792
 1215 05aa 03F10C03 		add	r3, r3, #12
 1216 05ae 1B68     		ldr	r3, [r3]
 1217 05b0 0133     		adds	r3, r3, #1
 1218 05b2 07F5B552 		add	r2, r7, #5792
 1219 05b6 02F10C02 		add	r2, r2, #12
 1220 05ba 1360     		str	r3, [r2]
 1221              	.L35:
 1222              	.LBE14:
 1223              	.LBE13:
 188:pathfinding.c ****                 int newRow = row + moves[i].row;
 1224              		.loc 1 188 0 discriminator 2
 1225 05bc 07F5B453 		add	r3, r7, #5760
 1226 05c0 03F11403 		add	r3, r3, #20
 1227 05c4 1B68     		ldr	r3, [r3]
 1228 05c6 0133     		adds	r3, r3, #1
 1229 05c8 07F5B452 		add	r2, r7, #5760
 1230 05cc 02F11402 		add	r2, r2, #20
 1231 05d0 1360     		str	r3, [r2]
 1232              	.L34:
 188:pathfinding.c ****                 int newRow = row + moves[i].row;
 1233              		.loc 1 188 0 is_stmt 0 discriminator 1
 1234 05d2 07F5B453 		add	r3, r7, #5760
 1235 05d6 03F11403 		add	r3, r3, #20
 1236 05da 1B68     		ldr	r3, [r3]
 1237 05dc 032B     		cmp	r3, #3
 1238 05de 7FF6F8AE 		bls	.L36
 1239              	.L27:
 1240              	.LBE12:
 1241              	.LBE10:
 167:pathfinding.c ****         int idx = 0;
 1242              		.loc 1 167 0 is_stmt 1
 1243 05e2 07F5B553 		add	r3, r7, #5792
 1244 05e6 03F10C03 		add	r3, r3, #12
 1245 05ea 1B68     		ldr	r3, [r3]
 1246 05ec 002B     		cmp	r3, #0
 1247 05ee 3FF702AE 		bgt	.L37
 1248 05f2 00E0     		b	.L33
 1249              	.L43:
 1250              	.LBB15:
 185:pathfinding.c ****             }
 1251              		.loc 1 185 0
 1252 05f4 00BF     		nop
 1253              	.L33:
 1254              	.LBE15:
 205:pathfinding.c ****                     }
 206:pathfinding.c ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 27


 207:pathfinding.c ****             }
 208:pathfinding.c ****         }
 209:pathfinding.c ****     }
 210:pathfinding.c **** 
 211:pathfinding.c ****     // PATH RECONSTRUCTION
 212:pathfinding.c ****     // initialise maximum distance- will be decremented
 213:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1255              		.loc 1 213 0
 1256 05f6 07F5B653 		add	r3, r7, #5824
 1257 05fa 03F10C03 		add	r3, r3, #12
 1258 05fe 1968     		ldr	r1, [r3]
 1259 0600 07F5B653 		add	r3, r7, #5824
 1260 0604 03F11003 		add	r3, r3, #16
 1261 0608 1868     		ldr	r0, [r3]
 1262 060a 07F13802 		add	r2, r7, #56
 1263 060e 1C3A     		subs	r2, r2, #28
 1264 0610 0B46     		mov	r3, r1
 1265 0612 DB00     		lsls	r3, r3, #3
 1266 0614 0B44     		add	r3, r3, r1
 1267 0616 5B00     		lsls	r3, r3, #1
 1268 0618 0B44     		add	r3, r3, r1
 1269 061a 0344     		add	r3, r3, r0
 1270 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1271 0620 07F5B452 		add	r2, r7, #5760
 1272 0624 02F11002 		add	r2, r2, #16
 1273 0628 1360     		str	r3, [r2]
 214:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1274              		.loc 1 214 0
 1275 062a 3B4A     		ldr	r2, .L44+4
 1276 062c 07F5B453 		add	r3, r7, #5760
 1277 0630 03F11003 		add	r3, r3, #16
 1278 0634 1B68     		ldr	r3, [r3]
 1279 0636 1360     		str	r3, [r2]
 215:pathfinding.c ****     // retsteps can be generated from here
 216:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1280              		.loc 1 216 0
 1281 0638 07F5B453 		add	r3, r7, #5760
 1282 063c 03F11003 		add	r3, r3, #16
 1283 0640 1B68     		ldr	r3, [r3]
 1284 0642 DB00     		lsls	r3, r3, #3
 1285 0644 1846     		mov	r0, r3
 1286 0646 FFF7FEFF 		bl	malloc
 1287 064a 0346     		mov	r3, r0
 1288 064c 07F5B352 		add	r2, r7, #5728
 1289 0650 02F10802 		add	r2, r2, #8
 1290 0654 1360     		str	r3, [r2]
 217:pathfinding.c ****     int currentRow = targetlocation.row;
 1291              		.loc 1 217 0
 1292 0656 07F5B653 		add	r3, r7, #5824
 1293 065a 03F10C03 		add	r3, r3, #12
 1294 065e 1B68     		ldr	r3, [r3]
 1295 0660 07F5B452 		add	r2, r7, #5760
 1296 0664 02F10C02 		add	r2, r2, #12
 1297 0668 1360     		str	r3, [r2]
 218:pathfinding.c ****     int currentCol = targetlocation.col;
 1298              		.loc 1 218 0
 1299 066a 07F5B653 		add	r3, r7, #5824
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 28


 1300 066e 03F11003 		add	r3, r3, #16
 1301 0672 1B68     		ldr	r3, [r3]
 1302 0674 07F5B452 		add	r2, r7, #5760
 1303 0678 02F10802 		add	r2, r2, #8
 1304 067c 1360     		str	r3, [r2]
 219:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1305              		.loc 1 219 0
 1306 067e 07F5B453 		add	r3, r7, #5760
 1307 0682 03F11003 		add	r3, r3, #16
 1308 0686 1B68     		ldr	r3, [r3]
 1309 0688 03F10053 		add	r3, r3, #536870912
 1310 068c 013B     		subs	r3, r3, #1
 1311 068e DB00     		lsls	r3, r3, #3
 1312 0690 07F5B352 		add	r2, r7, #5728
 1313 0694 02F10802 		add	r2, r2, #8
 1314 0698 1268     		ldr	r2, [r2]
 1315 069a 1344     		add	r3, r3, r2
 1316 069c 07F5B452 		add	r2, r7, #5760
 1317 06a0 02F10C02 		add	r2, r2, #12
 1318 06a4 1268     		ldr	r2, [r2]
 1319 06a6 1A60     		str	r2, [r3]
 220:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1320              		.loc 1 220 0
 1321 06a8 07F5B453 		add	r3, r7, #5760
 1322 06ac 03F11003 		add	r3, r3, #16
 1323 06b0 1B68     		ldr	r3, [r3]
 1324 06b2 03F10053 		add	r3, r3, #536870912
 1325 06b6 013B     		subs	r3, r3, #1
 1326 06b8 DB00     		lsls	r3, r3, #3
 1327 06ba 07F5B352 		add	r2, r7, #5728
 1328 06be 02F10802 		add	r2, r2, #8
 1329 06c2 1268     		ldr	r2, [r2]
 1330 06c4 1344     		add	r3, r3, r2
 1331 06c6 07F5B452 		add	r2, r7, #5760
 1332 06ca 02F10802 		add	r2, r2, #8
 1333 06ce 1268     		ldr	r2, [r2]
 1334 06d0 5A60     		str	r2, [r3, #4]
 221:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 222:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1335              		.loc 1 222 0
 1336 06d2 07F5B453 		add	r3, r7, #5760
 1337 06d6 03F10C03 		add	r3, r3, #12
 1338 06da 1B68     		ldr	r3, [r3]
 1339 06dc 4C22     		movs	r2, #76
 1340 06de 02FB03F2 		mul	r2, r2, r3
 1341 06e2 07F11803 		add	r3, r7, #24
 1342 06e6 0C3B     		subs	r3, r3, #12
 1343 06e8 1B68     		ldr	r3, [r3]
 1344 06ea 1344     		add	r3, r3, r2
 1345 06ec 07F5B452 		add	r2, r7, #5760
 1346 06f0 02F10802 		add	r2, r2, #8
 1347 06f4 1268     		ldr	r2, [r2]
 1348 06f6 0921     		movs	r1, #9
 1349 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 223:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 224:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 225:pathfinding.c ****     int pathIndex = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 29


 1350              		.loc 1 225 0
 1351 06fc 0023     		movs	r3, #0
 1352 06fe 07F5B452 		add	r2, r7, #5760
 1353 0702 02F10402 		add	r2, r2, #4
 1354 0706 1360     		str	r3, [r2]
 226:pathfinding.c **** 
 227:pathfinding.c ****     while(shortestDist > 0) {    
 1355              		.loc 1 227 0
 1356 0708 0BE1     		b	.L38
 1357              	.L42:
 1358              	.LBB16:
 228:pathfinding.c ****         // make a move, check if valid and is the next step in path
 229:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1359              		.loc 1 229 0
 1360 070a 0023     		movs	r3, #0
 1361 070c 07F5B452 		add	r2, r7, #5760
 1362 0710 1360     		str	r3, [r2]
 1363 0712 00E1     		b	.L39
 1364              	.L45:
 1365              		.align	2
 1366              	.L44:
 1367 0714 00000000 		.word	moves
 1368 0718 00000000 		.word	numSteps
 1369              	.L41:
 1370              	.LBB17:
 230:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1371              		.loc 1 230 0
 1372 071c 894A     		ldr	r2, .L46
 1373 071e 07F5B453 		add	r3, r7, #5760
 1374 0722 1B68     		ldr	r3, [r3]
 1375 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1376 0728 07F5B453 		add	r3, r7, #5760
 1377 072c 03F10C03 		add	r3, r3, #12
 1378 0730 1B68     		ldr	r3, [r3]
 1379 0732 1344     		add	r3, r3, r2
 1380 0734 07F5B352 		add	r2, r7, #5728
 1381 0738 02F10402 		add	r2, r2, #4
 1382 073c 1360     		str	r3, [r2]
 231:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1383              		.loc 1 231 0
 1384 073e 814A     		ldr	r2, .L46
 1385 0740 07F5B453 		add	r3, r7, #5760
 1386 0744 1B68     		ldr	r3, [r3]
 1387 0746 DB00     		lsls	r3, r3, #3
 1388 0748 1344     		add	r3, r3, r2
 1389 074a 5A68     		ldr	r2, [r3, #4]
 1390 074c 07F5B453 		add	r3, r7, #5760
 1391 0750 03F10803 		add	r3, r3, #8
 1392 0754 1B68     		ldr	r3, [r3]
 1393 0756 1344     		add	r3, r3, r2
 1394 0758 07F5B352 		add	r2, r7, #5728
 1395 075c 1360     		str	r3, [r2]
 232:pathfinding.c **** 
 233:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1396              		.loc 1 233 0
 1397 075e 07F11803 		add	r3, r7, #24
 1398 0762 0C3B     		subs	r3, r3, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 30


 1399 0764 1B68     		ldr	r3, [r3]
 1400 0766 0093     		str	r3, [sp]
 1401 0768 1323     		movs	r3, #19
 1402 076a 0F22     		movs	r2, #15
 1403 076c 07F5B351 		add	r1, r7, #5728
 1404 0770 0968     		ldr	r1, [r1]
 1405 0772 07F5B350 		add	r0, r7, #5728
 1406 0776 00F10400 		add	r0, r0, #4
 1407 077a 0068     		ldr	r0, [r0]
 1408 077c FFF7FEFF 		bl	isValidMove
 1409 0780 0346     		mov	r3, r0
 1410 0782 002B     		cmp	r3, #0
 1411 0784 00F0C080 		beq	.L40
 1412              		.loc 1 233 0 is_stmt 0 discriminator 1
 1413 0788 07F13802 		add	r2, r7, #56
 1414 078c 1C3A     		subs	r2, r2, #28
 1415 078e 07F5B353 		add	r3, r7, #5728
 1416 0792 03F10403 		add	r3, r3, #4
 1417 0796 1968     		ldr	r1, [r3]
 1418 0798 0B46     		mov	r3, r1
 1419 079a DB00     		lsls	r3, r3, #3
 1420 079c 0B44     		add	r3, r3, r1
 1421 079e 5B00     		lsls	r3, r3, #1
 1422 07a0 0B44     		add	r3, r3, r1
 1423 07a2 07F5B351 		add	r1, r7, #5728
 1424 07a6 0968     		ldr	r1, [r1]
 1425 07a8 0B44     		add	r3, r3, r1
 1426 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1427 07ae 07F5B453 		add	r3, r7, #5760
 1428 07b2 03F11003 		add	r3, r3, #16
 1429 07b6 1B68     		ldr	r3, [r3]
 1430 07b8 013B     		subs	r3, r3, #1
 1431 07ba 9A42     		cmp	r2, r3
 1432 07bc 40F0A480 		bne	.L40
 234:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1433              		.loc 1 234 0 is_stmt 1
 1434 07c0 07F5B353 		add	r3, r7, #5728
 1435 07c4 03F10403 		add	r3, r3, #4
 1436 07c8 1B68     		ldr	r3, [r3]
 1437 07ca 4C22     		movs	r2, #76
 1438 07cc 02FB03F2 		mul	r2, r2, r3
 1439 07d0 07F11803 		add	r3, r7, #24
 1440 07d4 0C3B     		subs	r3, r3, #12
 1441 07d6 1B68     		ldr	r3, [r3]
 1442 07d8 1344     		add	r3, r3, r2
 1443 07da 07F5B352 		add	r2, r7, #5728
 1444 07de 1268     		ldr	r2, [r2]
 1445 07e0 0821     		movs	r1, #8
 1446 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 235:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1447              		.loc 1 235 0
 1448 07e6 5849     		ldr	r1, .L46+4
 1449 07e8 07F5B453 		add	r3, r7, #5760
 1450 07ec 03F10403 		add	r3, r3, #4
 1451 07f0 1B68     		ldr	r3, [r3]
 1452 07f2 07F5B352 		add	r2, r7, #5728
 1453 07f6 02F10402 		add	r2, r2, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 31


 1454 07fa 1268     		ldr	r2, [r2]
 1455 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 236:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1456              		.loc 1 236 0
 1457 0800 514A     		ldr	r2, .L46+4
 1458 0802 07F5B453 		add	r3, r7, #5760
 1459 0806 03F10403 		add	r3, r3, #4
 1460 080a 1B68     		ldr	r3, [r3]
 1461 080c DB00     		lsls	r3, r3, #3
 1462 080e 1344     		add	r3, r3, r2
 1463 0810 07F5B352 		add	r2, r7, #5728
 1464 0814 1268     		ldr	r2, [r2]
 1465 0816 5A60     		str	r2, [r3, #4]
 237:pathfinding.c ****                 pathIndex++;
 1466              		.loc 1 237 0
 1467 0818 07F5B453 		add	r3, r7, #5760
 1468 081c 03F10403 		add	r3, r3, #4
 1469 0820 1B68     		ldr	r3, [r3]
 1470 0822 0133     		adds	r3, r3, #1
 1471 0824 07F5B452 		add	r2, r7, #5760
 1472 0828 02F10402 		add	r2, r2, #4
 1473 082c 1360     		str	r3, [r2]
 238:pathfinding.c ****                 // reverse array somewhere
 239:pathfinding.c **** 
 240:pathfinding.c ****                 shortestDist--; // decrement distance
 1474              		.loc 1 240 0
 1475 082e 07F5B453 		add	r3, r7, #5760
 1476 0832 03F11003 		add	r3, r3, #16
 1477 0836 1B68     		ldr	r3, [r3]
 1478 0838 013B     		subs	r3, r3, #1
 1479 083a 07F5B452 		add	r2, r7, #5760
 1480 083e 02F11002 		add	r2, r2, #16
 1481 0842 1360     		str	r3, [r2]
 241:pathfinding.c ****                 currentRow = newRow; 
 1482              		.loc 1 241 0
 1483 0844 07F5B353 		add	r3, r7, #5728
 1484 0848 03F10403 		add	r3, r3, #4
 1485 084c 1B68     		ldr	r3, [r3]
 1486 084e 07F5B452 		add	r2, r7, #5760
 1487 0852 02F10C02 		add	r2, r2, #12
 1488 0856 1360     		str	r3, [r2]
 242:pathfinding.c ****                 currentCol = newCol; // change current location
 1489              		.loc 1 242 0
 1490 0858 07F5B353 		add	r3, r7, #5728
 1491 085c 1B68     		ldr	r3, [r3]
 1492 085e 07F5B452 		add	r2, r7, #5760
 1493 0862 02F10802 		add	r2, r2, #8
 1494 0866 1360     		str	r3, [r2]
 243:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 244:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1495              		.loc 1 244 0
 1496 0868 07F5B453 		add	r3, r7, #5760
 1497 086c 03F11003 		add	r3, r3, #16
 1498 0870 1B68     		ldr	r3, [r3]
 1499 0872 DB00     		lsls	r3, r3, #3
 1500 0874 07F5B352 		add	r2, r7, #5728
 1501 0878 02F10802 		add	r2, r2, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 32


 1502 087c 1268     		ldr	r2, [r2]
 1503 087e 1344     		add	r3, r3, r2
 1504 0880 07F5B452 		add	r2, r7, #5760
 1505 0884 02F10C02 		add	r2, r2, #12
 1506 0888 1268     		ldr	r2, [r2]
 1507 088a 1A60     		str	r2, [r3]
 245:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1508              		.loc 1 245 0
 1509 088c 07F5B453 		add	r3, r7, #5760
 1510 0890 03F11003 		add	r3, r3, #16
 1511 0894 1B68     		ldr	r3, [r3]
 1512 0896 DB00     		lsls	r3, r3, #3
 1513 0898 07F5B352 		add	r2, r7, #5728
 1514 089c 02F10802 		add	r2, r2, #8
 1515 08a0 1268     		ldr	r2, [r2]
 1516 08a2 1344     		add	r3, r3, r2
 1517 08a4 07F5B452 		add	r2, r7, #5760
 1518 08a8 02F10802 		add	r2, r2, #8
 1519 08ac 1268     		ldr	r2, [r2]
 1520 08ae 5A60     		str	r2, [r3, #4]
 246:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1521              		.loc 1 246 0
 1522 08b0 07F11803 		add	r3, r7, #24
 1523 08b4 143B     		subs	r3, r3, #20
 1524 08b6 1A68     		ldr	r2, [r3]
 1525 08b8 07F5B453 		add	r3, r7, #5760
 1526 08bc 03F10C03 		add	r3, r3, #12
 1527 08c0 1B68     		ldr	r3, [r3]
 1528 08c2 9A42     		cmp	r2, r3
 1529 08c4 20D1     		bne	.L40
 1530              		.loc 1 246 0 is_stmt 0 discriminator 1
 1531 08c6 07F11803 		add	r3, r7, #24
 1532 08ca 143B     		subs	r3, r3, #20
 1533 08cc 5A68     		ldr	r2, [r3, #4]
 1534 08ce 07F5B453 		add	r3, r7, #5760
 1535 08d2 03F10803 		add	r3, r3, #8
 1536 08d6 1B68     		ldr	r3, [r3]
 1537 08d8 9A42     		cmp	r2, r3
 1538 08da 15D1     		bne	.L40
 247:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1539              		.loc 1 247 0 is_stmt 1
 1540 08dc 07F5B453 		add	r3, r7, #5760
 1541 08e0 03F10C03 		add	r3, r3, #12
 1542 08e4 1B68     		ldr	r3, [r3]
 1543 08e6 4C22     		movs	r2, #76
 1544 08e8 02FB03F2 		mul	r2, r2, r3
 1545 08ec 07F11803 		add	r3, r7, #24
 1546 08f0 0C3B     		subs	r3, r3, #12
 1547 08f2 1B68     		ldr	r3, [r3]
 1548 08f4 1344     		add	r3, r3, r2
 1549 08f6 07F5B452 		add	r2, r7, #5760
 1550 08fa 02F10802 		add	r2, r2, #8
 1551 08fe 1268     		ldr	r2, [r2]
 1552 0900 0221     		movs	r1, #2
 1553 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 248:pathfinding.c ****                     break;
 1554              		.loc 1 248 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 33


 1555 0906 0CE0     		b	.L38
 1556              	.L40:
 1557              	.LBE17:
 229:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1558              		.loc 1 229 0 discriminator 2
 1559 0908 07F5B453 		add	r3, r7, #5760
 1560 090c 1B68     		ldr	r3, [r3]
 1561 090e 0133     		adds	r3, r3, #1
 1562 0910 07F5B452 		add	r2, r7, #5760
 1563 0914 1360     		str	r3, [r2]
 1564              	.L39:
 229:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1565              		.loc 1 229 0 is_stmt 0 discriminator 1
 1566 0916 07F5B453 		add	r3, r7, #5760
 1567 091a 1B68     		ldr	r3, [r3]
 1568 091c 032B     		cmp	r3, #3
 1569 091e 7FF6FDAE 		bls	.L41
 1570              	.L38:
 1571              	.LBE16:
 227:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1572              		.loc 1 227 0 is_stmt 1
 1573 0922 07F5B453 		add	r3, r7, #5760
 1574 0926 03F11003 		add	r3, r3, #16
 1575 092a 1B68     		ldr	r3, [r3]
 1576 092c 002B     		cmp	r3, #0
 1577 092e 3FF7ECAE 		bgt	.L42
 249:pathfinding.c ****                 }   
 250:pathfinding.c ****             }
 251:pathfinding.c ****         }
 252:pathfinding.c ****     }
 253:pathfinding.c ****     //printMap(map);
 254:pathfinding.c ****     //return retSteps;
 255:pathfinding.c **** }
 1578              		.loc 1 255 0
 1579 0932 00BF     		nop
 1580 0934 07F5B557 		add	r7, r7, #5792
 1581 0938 1C37     		adds	r7, r7, #28
 1582              		.cfi_def_cfa_offset 20
 1583 093a BD46     		mov	sp, r7
 1584              		.cfi_def_cfa_register 13
 1585              		@ sp needed
 1586 093c BDE89040 		pop	{r4, r7, lr}
 1587              		.cfi_restore 14
 1588              		.cfi_restore 7
 1589              		.cfi_restore 4
 1590              		.cfi_def_cfa_offset 8
 1591 0940 02B0     		add	sp, sp, #8
 1592              		.cfi_def_cfa_offset 0
 1593 0942 7047     		bx	lr
 1594              	.L47:
 1595              		.align	2
 1596              	.L46:
 1597 0944 00000000 		.word	moves
 1598 0948 00000000 		.word	list_of_optimal_coordinates
 1599              		.cfi_endproc
 1600              	.LFE4:
 1601              		.size	dijkstra, .-dijkstra
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 34


 1602              		.global	ignoreR
 1603              		.bss
 1604              		.align	2
 1605              		.type	ignoreR, %object
 1606              		.size	ignoreR, 4
 1607              	ignoreR:
 1608 0000 00000000 		.space	4
 1609              		.global	ignoreL
 1610              		.align	2
 1611              		.type	ignoreL, %object
 1612              		.size	ignoreL, 4
 1613              	ignoreL:
 1614 0004 00000000 		.space	4
 1615              		.comm	instructionsList,3420,4
 1616              		.section	.rodata
 1617 0003 00       		.align	2
 1618              	.LC1:
 1619 0004 53746F70 		.ascii	"Stop at target\000"
 1619      20617420 
 1619      74617267 
 1619      657400
 1620 0013 00       		.align	2
 1621              	.LC2:
 1622 0014 52696768 		.ascii	"Right Turn\000"
 1622      74205475 
 1622      726E00
 1623 001f 00       		.align	2
 1624              	.LC3:
 1625 0020 4C656674 		.ascii	"Left Turn\000"
 1625      20547572 
 1625      6E00
 1626 002a 0000     		.align	2
 1627              	.LC4:
 1628 002c 466F7277 		.ascii	"Forward until target\000"
 1628      61726420 
 1628      756E7469 
 1628      6C207461 
 1628      72676574 
 1629 0041 000000   		.align	2
 1630              	.LC5:
 1631 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1631      6172643B 
 1631      2069676E 
 1631      6F726520 
 1631      25644C2C 
 1632 0065 000000   		.align	2
 1633              	.LC6:
 1634 0068 552D7475 		.ascii	"U-turn\000"
 1634      726E00
 1635              		.section	.text.getPathInstructions,"ax",%progbits
 1636              		.align	2
 1637              		.global	getPathInstructions
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	getPathInstructions, %function
 1641              	getPathInstructions:
 1642              	.LFB5:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 35


 256:pathfinding.c **** 
 257:pathfinding.c **** 
 258:pathfinding.c **** 
 259:pathfinding.c **** // PATHFINDING PROCESSING *====================
 260:pathfinding.c **** 
 261:pathfinding.c **** 
 262:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 263:pathfinding.c **** struct Instructions instructionsList[285]; // list to store instructions
 264:pathfinding.c **** // return a list of instructions for robot to execute
 265:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1643              		.loc 1 265 0
 1644              		.cfi_startproc
 1645              		@ args = 8, pretend = 0, frame = 40
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647 0000 80B5     		push	{r7, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 8AB0     		sub	sp, sp, #40
 1652              		.cfi_def_cfa_offset 48
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 F860     		str	r0, [r7, #12]
 1656 0008 B960     		str	r1, [r7, #8]
 1657 000a 3946     		mov	r1, r7
 1658 000c 81E80C00 		stmia	r1, {r2, r3}
 266:pathfinding.c ****     int currentRow = startLocation.row; 
 1659              		.loc 1 266 0
 1660 0010 3B68     		ldr	r3, [r7]
 1661 0012 7B62     		str	r3, [r7, #36]
 267:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1662              		.loc 1 267 0
 1663 0014 7B68     		ldr	r3, [r7, #4]
 1664 0016 3B62     		str	r3, [r7, #32]
 268:pathfinding.c ****     int listIndex = 0;
 1665              		.loc 1 268 0
 1666 0018 0023     		movs	r3, #0
 1667 001a FB61     		str	r3, [r7, #28]
 269:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1668              		.loc 1 269 0
 1669 001c 3B6B     		ldr	r3, [r7, #48]
 1670 001e 7A6B     		ldr	r2, [r7, #52]
 1671 0020 1146     		mov	r1, r2
 1672 0022 1846     		mov	r0, r3
 1673 0024 FFF7FEFF 		bl	getTargetOrientation
 1674 0028 0346     		mov	r3, r0
 1675 002a 3B61     		str	r3, [r7, #16]
 270:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 271:pathfinding.c ****     while(numSteps >= 0) {
 1676              		.loc 1 271 0
 1677 002c ACE1     		b	.L49
 1678              	.L78:
 1679              	.LBB18:
 272:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1680              		.loc 1 272 0
 1681 002e 914B     		ldr	r3, .L80
 1682 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 36


 1683 0032 3A6A     		ldr	r2, [r7, #32]
 1684 0034 796A     		ldr	r1, [r7, #36]
 1685 0036 1846     		mov	r0, r3
 1686 0038 FFF7FEFF 		bl	checkIgnoreTurn
 273:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1687              		.loc 1 273 0
 1688 003c 7B6A     		ldr	r3, [r7, #36]
 1689 003e 4C22     		movs	r2, #76
 1690 0040 02FB03F3 		mul	r3, r2, r3
 1691 0044 FA68     		ldr	r2, [r7, #12]
 1692 0046 1344     		add	r3, r3, r2
 1693 0048 3A6A     		ldr	r2, [r7, #32]
 1694 004a 0021     		movs	r1, #0
 1695 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 274:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
 1696              		.loc 1 274 0
 1697 0050 884B     		ldr	r3, .L80
 1698 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1699 0054 884B     		ldr	r3, .L80+4
 1700 0056 1A70     		strb	r2, [r3]
 275:pathfinding.c ****         enum InstructionDirection newDirection;
 276:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1701              		.loc 1 276 0
 1702 0058 396A     		ldr	r1, [r7, #32]
 1703 005a 786A     		ldr	r0, [r7, #36]
 1704 005c FFF7FEFF 		bl	checkPathDirection
 1705 0060 0346     		mov	r3, r0
 1706 0062 7B61     		str	r3, [r7, #20]
 277:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1707              		.loc 1 277 0
 1708 0064 3A6B     		ldr	r2, [r7, #48]
 1709 0066 7B6A     		ldr	r3, [r7, #36]
 1710 0068 9A42     		cmp	r2, r3
 1711 006a 0AD1     		bne	.L50
 1712              		.loc 1 277 0 is_stmt 0 discriminator 1
 1713 006c 7A6B     		ldr	r2, [r7, #52]
 1714 006e 3B6A     		ldr	r3, [r7, #32]
 1715 0070 9A42     		cmp	r2, r3
 1716 0072 06D1     		bne	.L50
 278:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1717              		.loc 1 278 0 is_stmt 1
 1718 0074 0523     		movs	r3, #5
 1719 0076 FB76     		strb	r3, [r7, #27]
 279:pathfinding.c ****             printf("Stop at target\n");
 1720              		.loc 1 279 0
 1721 0078 8048     		ldr	r0, .L80+8
 1722 007a FFF7FEFF 		bl	puts
 280:pathfinding.c ****             nextStep = 5;
 1723              		.loc 1 280 0
 1724 007e 0523     		movs	r3, #5
 1725 0080 7B61     		str	r3, [r7, #20]
 1726              	.L50:
 281:pathfinding.c ****         }
 282:pathfinding.c ****         switch (nextStep) {
 1727              		.loc 1 282 0
 1728 0082 7B69     		ldr	r3, [r7, #20]
 1729 0084 032B     		cmp	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 37


 1730 0086 00F25981 		bhi	.L79
 1731 008a 01A2     		adr	r2, .L53
 1732 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1733              		.p2align 2
 1734              	.L53:
 1735 0090 A1000000 		.word	.L52+1
 1736 0094 35010000 		.word	.L54+1
 1737 0098 D5010000 		.word	.L55+1
 1738 009c 9D020000 		.word	.L56+1
 1739              		.p2align 1
 1740              	.L52:
 283:pathfinding.c ****             case 0: // next step is up
 284:pathfinding.c ****                 currentRobotOrientation = Up;
 1741              		.loc 1 284 0
 1742 00a0 744B     		ldr	r3, .L80
 1743 00a2 0022     		movs	r2, #0
 1744 00a4 1A70     		strb	r2, [r3]
 285:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1745              		.loc 1 285 0
 1746 00a6 744B     		ldr	r3, .L80+4
 1747 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1748 00aa 022B     		cmp	r3, #2
 1749 00ac 0AD1     		bne	.L57
 286:pathfinding.c ****                     newDirection = waitForRightTurn;
 1750              		.loc 1 286 0
 1751 00ae 0223     		movs	r3, #2
 1752 00b0 FB76     		strb	r3, [r7, #27]
 287:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1753              		.loc 1 287 0
 1754 00b2 7348     		ldr	r0, .L80+12
 1755 00b4 FFF7FEFF 		bl	puts
 288:pathfinding.c ****                     ignoreL = 0;
 1756              		.loc 1 288 0
 1757 00b8 724B     		ldr	r3, .L80+16
 1758 00ba 0022     		movs	r2, #0
 1759 00bc 1A60     		str	r2, [r3]
 289:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1760              		.loc 1 289 0
 1761 00be 724B     		ldr	r3, .L80+20
 1762 00c0 0022     		movs	r2, #0
 1763 00c2 1A60     		str	r2, [r3]
 1764              	.L57:
 290:pathfinding.c ****                 } 
 291:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1765              		.loc 1 291 0
 1766 00c4 6C4B     		ldr	r3, .L80+4
 1767 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 00c8 032B     		cmp	r3, #3
 1769 00ca 0AD1     		bne	.L58
 292:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1770              		.loc 1 292 0
 1771 00cc 0123     		movs	r3, #1
 1772 00ce FB76     		strb	r3, [r7, #27]
 293:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1773              		.loc 1 293 0
 1774 00d0 6E48     		ldr	r0, .L80+24
 1775 00d2 FFF7FEFF 		bl	puts
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 38


 294:pathfinding.c ****                     ignoreL = 0;
 1776              		.loc 1 294 0
 1777 00d6 6B4B     		ldr	r3, .L80+16
 1778 00d8 0022     		movs	r2, #0
 1779 00da 1A60     		str	r2, [r3]
 295:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1780              		.loc 1 295 0
 1781 00dc 6A4B     		ldr	r3, .L80+20
 1782 00de 0022     		movs	r2, #0
 1783 00e0 1A60     		str	r2, [r3]
 1784              	.L58:
 296:pathfinding.c ****                 }
 297:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1785              		.loc 1 297 0
 1786 00e2 654B     		ldr	r3, .L80+4
 1787 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1788 00e6 002B     		cmp	r3, #0
 1789 00e8 17D1     		bne	.L59
 298:pathfinding.c ****                     // check if we only need to go forward to reach target
 299:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1790              		.loc 1 299 0
 1791 00ea 3A69     		ldr	r2, [r7, #16]
 1792 00ec 7B69     		ldr	r3, [r7, #20]
 1793 00ee 9A42     		cmp	r2, r3
 1794 00f0 09D1     		bne	.L60
 1795              		.loc 1 299 0 is_stmt 0 discriminator 1
 1796 00f2 7A6B     		ldr	r2, [r7, #52]
 1797 00f4 3B6A     		ldr	r3, [r7, #32]
 1798 00f6 9A42     		cmp	r2, r3
 1799 00f8 05D1     		bne	.L60
 300:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1800              		.loc 1 300 0 is_stmt 1
 1801 00fa 0423     		movs	r3, #4
 1802 00fc FB76     		strb	r3, [r7, #27]
 301:pathfinding.c ****                         printf("Forward until target\n"); // THIS WILL HAVE AN EDGE CASE
 1803              		.loc 1 301 0
 1804 00fe 6448     		ldr	r0, .L80+28
 1805 0100 FFF7FEFF 		bl	puts
 1806 0104 09E0     		b	.L59
 1807              	.L60:
 302:pathfinding.c ****                     } else {
 303:pathfinding.c ****                         newDirection = GoForward;
 1808              		.loc 1 303 0
 1809 0106 0023     		movs	r3, #0
 1810 0108 FB76     		strb	r3, [r7, #27]
 304:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1811              		.loc 1 304 0
 1812 010a 5E4B     		ldr	r3, .L80+16
 1813 010c 1968     		ldr	r1, [r3]
 1814 010e 5E4B     		ldr	r3, .L80+20
 1815 0110 1B68     		ldr	r3, [r3]
 1816 0112 1A46     		mov	r2, r3
 1817 0114 5F48     		ldr	r0, .L80+32
 1818 0116 FFF7FEFF 		bl	printf
 1819              	.L59:
 305:pathfinding.c ****                     }
 306:pathfinding.c ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 39


 307:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1820              		.loc 1 307 0
 1821 011a 574B     		ldr	r3, .L80+4
 1822 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1823 011e 012B     		cmp	r3, #1
 1824 0120 04D1     		bne	.L61
 308:pathfinding.c ****                     newDirection = uTurn;
 1825              		.loc 1 308 0
 1826 0122 0323     		movs	r3, #3
 1827 0124 FB76     		strb	r3, [r7, #27]
 309:pathfinding.c ****                     printf("U-turn\n");
 1828              		.loc 1 309 0
 1829 0126 5C48     		ldr	r0, .L80+36
 1830 0128 FFF7FEFF 		bl	puts
 1831              	.L61:
 310:pathfinding.c ****                 }
 311:pathfinding.c ****                 currentRow--; // jump to new location
 1832              		.loc 1 311 0
 1833 012c 7B6A     		ldr	r3, [r7, #36]
 1834 012e 013B     		subs	r3, r3, #1
 1835 0130 7B62     		str	r3, [r7, #36]
 312:pathfinding.c ****                 break;
 1836              		.loc 1 312 0
 1837 0132 04E1     		b	.L62
 1838              	.L54:
 313:pathfinding.c ****             case 1: // next step is down
 314:pathfinding.c ****                 currentRobotOrientation = Down;
 1839              		.loc 1 314 0
 1840 0134 4F4B     		ldr	r3, .L80
 1841 0136 0122     		movs	r2, #1
 1842 0138 1A70     		strb	r2, [r3]
 315:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1843              		.loc 1 315 0
 1844 013a 4F4B     		ldr	r3, .L80+4
 1845 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 013e 032B     		cmp	r3, #3
 1847 0140 0AD1     		bne	.L63
 316:pathfinding.c ****                     newDirection = waitForRightTurn;
 1848              		.loc 1 316 0
 1849 0142 0223     		movs	r3, #2
 1850 0144 FB76     		strb	r3, [r7, #27]
 317:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1851              		.loc 1 317 0
 1852 0146 4E48     		ldr	r0, .L80+12
 1853 0148 FFF7FEFF 		bl	puts
 318:pathfinding.c ****                     ignoreL = 0;
 1854              		.loc 1 318 0
 1855 014c 4D4B     		ldr	r3, .L80+16
 1856 014e 0022     		movs	r2, #0
 1857 0150 1A60     		str	r2, [r3]
 319:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1858              		.loc 1 319 0
 1859 0152 4D4B     		ldr	r3, .L80+20
 1860 0154 0022     		movs	r2, #0
 1861 0156 1A60     		str	r2, [r3]
 1862              	.L63:
 320:pathfinding.c ****                 } 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 40


 321:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1863              		.loc 1 321 0
 1864 0158 474B     		ldr	r3, .L80+4
 1865 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1866 015c 022B     		cmp	r3, #2
 1867 015e 0AD1     		bne	.L64
 322:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1868              		.loc 1 322 0
 1869 0160 0123     		movs	r3, #1
 1870 0162 FB76     		strb	r3, [r7, #27]
 323:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1871              		.loc 1 323 0
 1872 0164 4948     		ldr	r0, .L80+24
 1873 0166 FFF7FEFF 		bl	puts
 324:pathfinding.c ****                     ignoreL = 0;
 1874              		.loc 1 324 0
 1875 016a 464B     		ldr	r3, .L80+16
 1876 016c 0022     		movs	r2, #0
 1877 016e 1A60     		str	r2, [r3]
 325:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1878              		.loc 1 325 0
 1879 0170 454B     		ldr	r3, .L80+20
 1880 0172 0022     		movs	r2, #0
 1881 0174 1A60     		str	r2, [r3]
 1882              	.L64:
 326:pathfinding.c ****                 }
 327:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1883              		.loc 1 327 0
 1884 0176 404B     		ldr	r3, .L80+4
 1885 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1886 017a 012B     		cmp	r3, #1
 1887 017c 17D1     		bne	.L65
 328:pathfinding.c ****                     // check if we only need to go forward to reach target
 329:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1888              		.loc 1 329 0
 1889 017e 3A69     		ldr	r2, [r7, #16]
 1890 0180 7B69     		ldr	r3, [r7, #20]
 1891 0182 9A42     		cmp	r2, r3
 1892 0184 09D1     		bne	.L66
 1893              		.loc 1 329 0 is_stmt 0 discriminator 1
 1894 0186 7A6B     		ldr	r2, [r7, #52]
 1895 0188 3B6A     		ldr	r3, [r7, #32]
 1896 018a 9A42     		cmp	r2, r3
 1897 018c 05D1     		bne	.L66
 330:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1898              		.loc 1 330 0 is_stmt 1
 1899 018e 0423     		movs	r3, #4
 1900 0190 FB76     		strb	r3, [r7, #27]
 331:pathfinding.c ****                         printf("Forward until target\n");
 1901              		.loc 1 331 0
 1902 0192 3F48     		ldr	r0, .L80+28
 1903 0194 FFF7FEFF 		bl	puts
 1904 0198 09E0     		b	.L65
 1905              	.L66:
 332:pathfinding.c ****                     } else {
 333:pathfinding.c ****                         newDirection = GoForward;
 1906              		.loc 1 333 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 41


 1907 019a 0023     		movs	r3, #0
 1908 019c FB76     		strb	r3, [r7, #27]
 334:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1909              		.loc 1 334 0
 1910 019e 394B     		ldr	r3, .L80+16
 1911 01a0 1968     		ldr	r1, [r3]
 1912 01a2 394B     		ldr	r3, .L80+20
 1913 01a4 1B68     		ldr	r3, [r3]
 1914 01a6 1A46     		mov	r2, r3
 1915 01a8 3A48     		ldr	r0, .L80+32
 1916 01aa FFF7FEFF 		bl	printf
 1917              	.L65:
 335:pathfinding.c ****                     }                    
 336:pathfinding.c ****                 }
 337:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1918              		.loc 1 337 0
 1919 01ae 324B     		ldr	r3, .L80+4
 1920 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1921 01b2 002B     		cmp	r3, #0
 1922 01b4 0AD1     		bne	.L67
 338:pathfinding.c ****                     newDirection = uTurn;
 1923              		.loc 1 338 0
 1924 01b6 0323     		movs	r3, #3
 1925 01b8 FB76     		strb	r3, [r7, #27]
 339:pathfinding.c ****                     ignoreL = 0;
 1926              		.loc 1 339 0
 1927 01ba 324B     		ldr	r3, .L80+16
 1928 01bc 0022     		movs	r2, #0
 1929 01be 1A60     		str	r2, [r3]
 340:pathfinding.c ****                     ignoreR = 0;
 1930              		.loc 1 340 0
 1931 01c0 314B     		ldr	r3, .L80+20
 1932 01c2 0022     		movs	r2, #0
 1933 01c4 1A60     		str	r2, [r3]
 341:pathfinding.c ****                     printf("U-turn\n");
 1934              		.loc 1 341 0
 1935 01c6 3448     		ldr	r0, .L80+36
 1936 01c8 FFF7FEFF 		bl	puts
 1937              	.L67:
 342:pathfinding.c ****                 }
 343:pathfinding.c ****                 currentRow++;
 1938              		.loc 1 343 0
 1939 01cc 7B6A     		ldr	r3, [r7, #36]
 1940 01ce 0133     		adds	r3, r3, #1
 1941 01d0 7B62     		str	r3, [r7, #36]
 344:pathfinding.c ****                 break;
 1942              		.loc 1 344 0
 1943 01d2 B4E0     		b	.L62
 1944              	.L55:
 345:pathfinding.c ****             case 2: // next step is left
 346:pathfinding.c ****                 currentRobotOrientation = Left;
 1945              		.loc 1 346 0
 1946 01d4 274B     		ldr	r3, .L80
 1947 01d6 0222     		movs	r2, #2
 1948 01d8 1A70     		strb	r2, [r3]
 347:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1949              		.loc 1 347 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 42


 1950 01da 274B     		ldr	r3, .L80+4
 1951 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1952 01de 002B     		cmp	r3, #0
 1953 01e0 0AD1     		bne	.L68
 348:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1954              		.loc 1 348 0
 1955 01e2 0123     		movs	r3, #1
 1956 01e4 FB76     		strb	r3, [r7, #27]
 349:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 1957              		.loc 1 349 0
 1958 01e6 2948     		ldr	r0, .L80+24
 1959 01e8 FFF7FEFF 		bl	puts
 350:pathfinding.c ****                     ignoreL = 0;
 1960              		.loc 1 350 0
 1961 01ec 254B     		ldr	r3, .L80+16
 1962 01ee 0022     		movs	r2, #0
 1963 01f0 1A60     		str	r2, [r3]
 351:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1964              		.loc 1 351 0
 1965 01f2 254B     		ldr	r3, .L80+20
 1966 01f4 0022     		movs	r2, #0
 1967 01f6 1A60     		str	r2, [r3]
 1968              	.L68:
 352:pathfinding.c ****                 } 
 353:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1969              		.loc 1 353 0
 1970 01f8 1F4B     		ldr	r3, .L80+4
 1971 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1972 01fc 012B     		cmp	r3, #1
 1973 01fe 0AD1     		bne	.L69
 354:pathfinding.c ****                     newDirection = waitForRightTurn;
 1974              		.loc 1 354 0
 1975 0200 0223     		movs	r3, #2
 1976 0202 FB76     		strb	r3, [r7, #27]
 355:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 1977              		.loc 1 355 0
 1978 0204 1E48     		ldr	r0, .L80+12
 1979 0206 FFF7FEFF 		bl	puts
 356:pathfinding.c ****                     ignoreL = 0;
 1980              		.loc 1 356 0
 1981 020a 1E4B     		ldr	r3, .L80+16
 1982 020c 0022     		movs	r2, #0
 1983 020e 1A60     		str	r2, [r3]
 357:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1984              		.loc 1 357 0
 1985 0210 1D4B     		ldr	r3, .L80+20
 1986 0212 0022     		movs	r2, #0
 1987 0214 1A60     		str	r2, [r3]
 1988              	.L69:
 358:pathfinding.c ****                 }
 359:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1989              		.loc 1 359 0
 1990 0216 184B     		ldr	r3, .L80+4
 1991 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1992 021a 022B     		cmp	r3, #2
 1993 021c 17D1     		bne	.L70
 360:pathfinding.c ****                     // check if we only need to go forward to reach target
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 43


 361:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1994              		.loc 1 361 0
 1995 021e 3A69     		ldr	r2, [r7, #16]
 1996 0220 7B69     		ldr	r3, [r7, #20]
 1997 0222 9A42     		cmp	r2, r3
 1998 0224 09D1     		bne	.L71
 1999              		.loc 1 361 0 is_stmt 0 discriminator 1
 2000 0226 3A6B     		ldr	r2, [r7, #48]
 2001 0228 7B6A     		ldr	r3, [r7, #36]
 2002 022a 9A42     		cmp	r2, r3
 2003 022c 05D1     		bne	.L71
 362:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2004              		.loc 1 362 0 is_stmt 1
 2005 022e 0423     		movs	r3, #4
 2006 0230 FB76     		strb	r3, [r7, #27]
 363:pathfinding.c ****                         printf("Forward until target\n");
 2007              		.loc 1 363 0
 2008 0232 1748     		ldr	r0, .L80+28
 2009 0234 FFF7FEFF 		bl	puts
 2010 0238 09E0     		b	.L70
 2011              	.L71:
 364:pathfinding.c ****                     } else {
 365:pathfinding.c ****                         newDirection = GoForward;
 2012              		.loc 1 365 0
 2013 023a 0023     		movs	r3, #0
 2014 023c FB76     		strb	r3, [r7, #27]
 366:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2015              		.loc 1 366 0
 2016 023e 114B     		ldr	r3, .L80+16
 2017 0240 1968     		ldr	r1, [r3]
 2018 0242 114B     		ldr	r3, .L80+20
 2019 0244 1B68     		ldr	r3, [r3]
 2020 0246 1A46     		mov	r2, r3
 2021 0248 1248     		ldr	r0, .L80+32
 2022 024a FFF7FEFF 		bl	printf
 2023              	.L70:
 367:pathfinding.c ****                     }
 368:pathfinding.c ****                 }
 369:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2024              		.loc 1 369 0
 2025 024e 0A4B     		ldr	r3, .L80+4
 2026 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2027 0252 032B     		cmp	r3, #3
 2028 0254 0AD1     		bne	.L72
 370:pathfinding.c ****                     newDirection = uTurn;
 2029              		.loc 1 370 0
 2030 0256 0323     		movs	r3, #3
 2031 0258 FB76     		strb	r3, [r7, #27]
 371:pathfinding.c ****                     ignoreL = 0;
 2032              		.loc 1 371 0
 2033 025a 0A4B     		ldr	r3, .L80+16
 2034 025c 0022     		movs	r2, #0
 2035 025e 1A60     		str	r2, [r3]
 372:pathfinding.c ****                     ignoreR = 0;
 2036              		.loc 1 372 0
 2037 0260 094B     		ldr	r3, .L80+20
 2038 0262 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 44


 2039 0264 1A60     		str	r2, [r3]
 373:pathfinding.c ****                     printf("U-turn\n");
 2040              		.loc 1 373 0
 2041 0266 0C48     		ldr	r0, .L80+36
 2042 0268 FFF7FEFF 		bl	puts
 2043              	.L72:
 374:pathfinding.c ****                 }
 375:pathfinding.c ****                 currentCol--;
 2044              		.loc 1 375 0
 2045 026c 3B6A     		ldr	r3, [r7, #32]
 2046 026e 013B     		subs	r3, r3, #1
 2047 0270 3B62     		str	r3, [r7, #32]
 376:pathfinding.c ****                 break;
 2048              		.loc 1 376 0
 2049 0272 64E0     		b	.L62
 2050              	.L81:
 2051              		.align	2
 2052              	.L80:
 2053 0274 00000000 		.word	currentRobotOrientation
 2054 0278 00000000 		.word	previousRobotOrientation
 2055 027c 04000000 		.word	.LC1
 2056 0280 14000000 		.word	.LC2
 2057 0284 00000000 		.word	ignoreL
 2058 0288 00000000 		.word	ignoreR
 2059 028c 20000000 		.word	.LC3
 2060 0290 2C000000 		.word	.LC4
 2061 0294 44000000 		.word	.LC5
 2062 0298 68000000 		.word	.LC6
 2063              	.L56:
 377:pathfinding.c ****             case 3: // next step is right
 378:pathfinding.c ****                 currentRobotOrientation = Right;
 2064              		.loc 1 378 0
 2065 029c 404B     		ldr	r3, .L82
 2066 029e 0322     		movs	r2, #3
 2067 02a0 1A70     		strb	r2, [r3]
 379:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2068              		.loc 1 379 0
 2069 02a2 404B     		ldr	r3, .L82+4
 2070 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2071 02a6 002B     		cmp	r3, #0
 2072 02a8 0AD1     		bne	.L73
 380:pathfinding.c ****                     newDirection = waitForRightTurn;
 2073              		.loc 1 380 0
 2074 02aa 0223     		movs	r3, #2
 2075 02ac FB76     		strb	r3, [r7, #27]
 381:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2076              		.loc 1 381 0
 2077 02ae 3E48     		ldr	r0, .L82+8
 2078 02b0 FFF7FEFF 		bl	puts
 382:pathfinding.c ****                     ignoreL = 0;
 2079              		.loc 1 382 0
 2080 02b4 3D4B     		ldr	r3, .L82+12
 2081 02b6 0022     		movs	r2, #0
 2082 02b8 1A60     		str	r2, [r3]
 383:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2083              		.loc 1 383 0
 2084 02ba 3D4B     		ldr	r3, .L82+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 45


 2085 02bc 0022     		movs	r2, #0
 2086 02be 1A60     		str	r2, [r3]
 2087              	.L73:
 384:pathfinding.c ****                 }
 385:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2088              		.loc 1 385 0
 2089 02c0 384B     		ldr	r3, .L82+4
 2090 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2091 02c4 012B     		cmp	r3, #1
 2092 02c6 0AD1     		bne	.L74
 386:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2093              		.loc 1 386 0
 2094 02c8 0123     		movs	r3, #1
 2095 02ca FB76     		strb	r3, [r7, #27]
 387:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2096              		.loc 1 387 0
 2097 02cc 3948     		ldr	r0, .L82+20
 2098 02ce FFF7FEFF 		bl	puts
 388:pathfinding.c ****                     ignoreL = 0;
 2099              		.loc 1 388 0
 2100 02d2 364B     		ldr	r3, .L82+12
 2101 02d4 0022     		movs	r2, #0
 2102 02d6 1A60     		str	r2, [r3]
 389:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2103              		.loc 1 389 0
 2104 02d8 354B     		ldr	r3, .L82+16
 2105 02da 0022     		movs	r2, #0
 2106 02dc 1A60     		str	r2, [r3]
 2107              	.L74:
 390:pathfinding.c ****                 }
 391:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2108              		.loc 1 391 0
 2109 02de 314B     		ldr	r3, .L82+4
 2110 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2111 02e2 032B     		cmp	r3, #3
 2112 02e4 17D1     		bne	.L75
 392:pathfinding.c ****                     // check if we only need to go forward to reach target
 393:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2113              		.loc 1 393 0
 2114 02e6 3A69     		ldr	r2, [r7, #16]
 2115 02e8 7B69     		ldr	r3, [r7, #20]
 2116 02ea 9A42     		cmp	r2, r3
 2117 02ec 09D1     		bne	.L76
 2118              		.loc 1 393 0 is_stmt 0 discriminator 1
 2119 02ee 3A6B     		ldr	r2, [r7, #48]
 2120 02f0 7B6A     		ldr	r3, [r7, #36]
 2121 02f2 9A42     		cmp	r2, r3
 2122 02f4 05D1     		bne	.L76
 394:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2123              		.loc 1 394 0 is_stmt 1
 2124 02f6 0423     		movs	r3, #4
 2125 02f8 FB76     		strb	r3, [r7, #27]
 395:pathfinding.c ****                         printf("Forward until target\n");
 2126              		.loc 1 395 0
 2127 02fa 2F48     		ldr	r0, .L82+24
 2128 02fc FFF7FEFF 		bl	puts
 2129 0300 09E0     		b	.L75
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 46


 2130              	.L76:
 396:pathfinding.c ****                     } else {
 397:pathfinding.c ****                         newDirection = GoForward;
 2131              		.loc 1 397 0
 2132 0302 0023     		movs	r3, #0
 2133 0304 FB76     		strb	r3, [r7, #27]
 398:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2134              		.loc 1 398 0
 2135 0306 294B     		ldr	r3, .L82+12
 2136 0308 1968     		ldr	r1, [r3]
 2137 030a 294B     		ldr	r3, .L82+16
 2138 030c 1B68     		ldr	r3, [r3]
 2139 030e 1A46     		mov	r2, r3
 2140 0310 2A48     		ldr	r0, .L82+28
 2141 0312 FFF7FEFF 		bl	printf
 2142              	.L75:
 399:pathfinding.c ****                     }
 400:pathfinding.c ****                 }
 401:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2143              		.loc 1 401 0
 2144 0316 234B     		ldr	r3, .L82+4
 2145 0318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2146 031a 022B     		cmp	r3, #2
 2147 031c 0AD1     		bne	.L77
 402:pathfinding.c ****                     newDirection = uTurn;
 2148              		.loc 1 402 0
 2149 031e 0323     		movs	r3, #3
 2150 0320 FB76     		strb	r3, [r7, #27]
 403:pathfinding.c ****                     ignoreL = 0;
 2151              		.loc 1 403 0
 2152 0322 224B     		ldr	r3, .L82+12
 2153 0324 0022     		movs	r2, #0
 2154 0326 1A60     		str	r2, [r3]
 404:pathfinding.c ****                     ignoreR = 0;
 2155              		.loc 1 404 0
 2156 0328 214B     		ldr	r3, .L82+16
 2157 032a 0022     		movs	r2, #0
 2158 032c 1A60     		str	r2, [r3]
 405:pathfinding.c ****                     printf("U-turn\n");
 2159              		.loc 1 405 0
 2160 032e 2448     		ldr	r0, .L82+32
 2161 0330 FFF7FEFF 		bl	puts
 2162              	.L77:
 406:pathfinding.c ****                 }
 407:pathfinding.c ****                 currentCol++;
 2163              		.loc 1 407 0
 2164 0334 3B6A     		ldr	r3, [r7, #32]
 2165 0336 0133     		adds	r3, r3, #1
 2166 0338 3B62     		str	r3, [r7, #32]
 408:pathfinding.c ****                 break;
 2167              		.loc 1 408 0
 2168 033a 00E0     		b	.L62
 2169              	.L79:
 409:pathfinding.c ****             default:
 410:pathfinding.c ****                 break;
 2170              		.loc 1 410 0
 2171 033c 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 47


 2172              	.L62:
 411:pathfinding.c ****         }
 412:pathfinding.c ****         
 413:pathfinding.c ****         // add new direction to list
 414:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2173              		.loc 1 414 0
 2174 033e 2149     		ldr	r1, .L82+36
 2175 0340 FA69     		ldr	r2, [r7, #28]
 2176 0342 1346     		mov	r3, r2
 2177 0344 5B00     		lsls	r3, r3, #1
 2178 0346 1344     		add	r3, r3, r2
 2179 0348 9B00     		lsls	r3, r3, #2
 2180 034a 0B44     		add	r3, r3, r1
 2181 034c FA7E     		ldrb	r2, [r7, #27]
 2182 034e 1A70     		strb	r2, [r3]
 415:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2183              		.loc 1 415 0
 2184 0350 164B     		ldr	r3, .L82+12
 2185 0352 1968     		ldr	r1, [r3]
 2186 0354 1B48     		ldr	r0, .L82+36
 2187 0356 FA69     		ldr	r2, [r7, #28]
 2188 0358 1346     		mov	r3, r2
 2189 035a 5B00     		lsls	r3, r3, #1
 2190 035c 1344     		add	r3, r3, r2
 2191 035e 9B00     		lsls	r3, r3, #2
 2192 0360 0344     		add	r3, r3, r0
 2193 0362 0433     		adds	r3, r3, #4
 2194 0364 1960     		str	r1, [r3]
 416:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2195              		.loc 1 416 0
 2196 0366 124B     		ldr	r3, .L82+16
 2197 0368 1968     		ldr	r1, [r3]
 2198 036a 1648     		ldr	r0, .L82+36
 2199 036c FA69     		ldr	r2, [r7, #28]
 2200 036e 1346     		mov	r3, r2
 2201 0370 5B00     		lsls	r3, r3, #1
 2202 0372 1344     		add	r3, r3, r2
 2203 0374 9B00     		lsls	r3, r3, #2
 2204 0376 0344     		add	r3, r3, r0
 2205 0378 0833     		adds	r3, r3, #8
 2206 037a 1960     		str	r1, [r3]
 417:pathfinding.c ****         listIndex++; // increment instruction list index
 2207              		.loc 1 417 0
 2208 037c FB69     		ldr	r3, [r7, #28]
 2209 037e 0133     		adds	r3, r3, #1
 2210 0380 FB61     		str	r3, [r7, #28]
 418:pathfinding.c ****         numSteps--; // decrement numSteps
 2211              		.loc 1 418 0
 2212 0382 BB68     		ldr	r3, [r7, #8]
 2213 0384 013B     		subs	r3, r3, #1
 2214 0386 BB60     		str	r3, [r7, #8]
 2215              	.L49:
 2216              	.LBE18:
 271:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2217              		.loc 1 271 0
 2218 0388 BB68     		ldr	r3, [r7, #8]
 2219 038a 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 48


 2220 038c BFF64FAE 		bge	.L78
 419:pathfinding.c ****     }
 420:pathfinding.c ****     processInstructionList(listIndex);
 2221              		.loc 1 420 0
 2222 0390 F869     		ldr	r0, [r7, #28]
 2223 0392 FFF7FEFF 		bl	processInstructionList
 421:pathfinding.c **** }
 2224              		.loc 1 421 0
 2225 0396 00BF     		nop
 2226 0398 2837     		adds	r7, r7, #40
 2227              		.cfi_def_cfa_offset 8
 2228 039a BD46     		mov	sp, r7
 2229              		.cfi_def_cfa_register 13
 2230              		@ sp needed
 2231 039c 80BD     		pop	{r7, pc}
 2232              	.L83:
 2233 039e 00BF     		.align	2
 2234              	.L82:
 2235 03a0 00000000 		.word	currentRobotOrientation
 2236 03a4 00000000 		.word	previousRobotOrientation
 2237 03a8 14000000 		.word	.LC2
 2238 03ac 00000000 		.word	ignoreL
 2239 03b0 00000000 		.word	ignoreR
 2240 03b4 20000000 		.word	.LC3
 2241 03b8 2C000000 		.word	.LC4
 2242 03bc 44000000 		.word	.LC5
 2243 03c0 68000000 		.word	.LC6
 2244 03c4 00000000 		.word	instructionsList
 2245              		.cfi_endproc
 2246              	.LFE5:
 2247              		.size	getPathInstructions, .-getPathInstructions
 2248              		.section	.text.processInstructionList,"ax",%progbits
 2249              		.align	2
 2250              		.global	processInstructionList
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	processInstructionList, %function
 2254              	processInstructionList:
 2255              	.LFB6:
 422:pathfinding.c **** 
 423:pathfinding.c **** void processInstructionList(int index) {
 2256              		.loc 1 423 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 16
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261 0000 80B4     		push	{r7}
 2262              		.cfi_def_cfa_offset 4
 2263              		.cfi_offset 7, -4
 2264 0002 85B0     		sub	sp, sp, #20
 2265              		.cfi_def_cfa_offset 24
 2266 0004 00AF     		add	r7, sp, #0
 2267              		.cfi_def_cfa_register 7
 2268 0006 7860     		str	r0, [r7, #4]
 2269              	.LBB19:
 424:pathfinding.c ****     // remove repeated forwards
 425:pathfinding.c ****     for(int i = 0; i < index-1; i ++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 49


 2270              		.loc 1 425 0
 2271 0008 0023     		movs	r3, #0
 2272 000a FB60     		str	r3, [r7, #12]
 2273 000c 32E0     		b	.L85
 2274              	.L87:
 426:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2275              		.loc 1 426 0
 2276 000e 1E49     		ldr	r1, .L88
 2277 0010 FA68     		ldr	r2, [r7, #12]
 2278 0012 1346     		mov	r3, r2
 2279 0014 5B00     		lsls	r3, r3, #1
 2280 0016 1344     		add	r3, r3, r2
 2281 0018 9B00     		lsls	r3, r3, #2
 2282 001a 0B44     		add	r3, r3, r1
 2283 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2284 001e FB68     		ldr	r3, [r7, #12]
 2285 0020 5A1C     		adds	r2, r3, #1
 2286 0022 1948     		ldr	r0, .L88
 2287 0024 1346     		mov	r3, r2
 2288 0026 5B00     		lsls	r3, r3, #1
 2289 0028 1344     		add	r3, r3, r2
 2290 002a 9B00     		lsls	r3, r3, #2
 2291 002c 0344     		add	r3, r3, r0
 2292 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2293 0030 9942     		cmp	r1, r3
 2294 0032 1CD1     		bne	.L86
 427:pathfinding.c ****             instructionsList[i].direction = Skip;
 2295              		.loc 1 427 0
 2296 0034 1449     		ldr	r1, .L88
 2297 0036 FA68     		ldr	r2, [r7, #12]
 2298 0038 1346     		mov	r3, r2
 2299 003a 5B00     		lsls	r3, r3, #1
 2300 003c 1344     		add	r3, r3, r2
 2301 003e 9B00     		lsls	r3, r3, #2
 2302 0040 0B44     		add	r3, r3, r1
 2303 0042 0622     		movs	r2, #6
 2304 0044 1A70     		strb	r2, [r3]
 428:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2305              		.loc 1 428 0
 2306 0046 1049     		ldr	r1, .L88
 2307 0048 FA68     		ldr	r2, [r7, #12]
 2308 004a 1346     		mov	r3, r2
 2309 004c 5B00     		lsls	r3, r3, #1
 2310 004e 1344     		add	r3, r3, r2
 2311 0050 9B00     		lsls	r3, r3, #2
 2312 0052 0B44     		add	r3, r3, r1
 2313 0054 0433     		adds	r3, r3, #4
 2314 0056 0022     		movs	r2, #0
 2315 0058 1A60     		str	r2, [r3]
 429:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2316              		.loc 1 429 0
 2317 005a 0B49     		ldr	r1, .L88
 2318 005c FA68     		ldr	r2, [r7, #12]
 2319 005e 1346     		mov	r3, r2
 2320 0060 5B00     		lsls	r3, r3, #1
 2321 0062 1344     		add	r3, r3, r2
 2322 0064 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 50


 2323 0066 0B44     		add	r3, r3, r1
 2324 0068 0833     		adds	r3, r3, #8
 2325 006a 0022     		movs	r2, #0
 2326 006c 1A60     		str	r2, [r3]
 2327              	.L86:
 425:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2328              		.loc 1 425 0 discriminator 2
 2329 006e FB68     		ldr	r3, [r7, #12]
 2330 0070 0133     		adds	r3, r3, #1
 2331 0072 FB60     		str	r3, [r7, #12]
 2332              	.L85:
 425:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2333              		.loc 1 425 0 is_stmt 0 discriminator 1
 2334 0074 7B68     		ldr	r3, [r7, #4]
 2335 0076 5A1E     		subs	r2, r3, #1
 2336 0078 FB68     		ldr	r3, [r7, #12]
 2337 007a 9A42     		cmp	r2, r3
 2338 007c C7DC     		bgt	.L87
 2339              	.LBE19:
 430:pathfinding.c ****         }
 431:pathfinding.c ****     }
 432:pathfinding.c **** }
 2340              		.loc 1 432 0 is_stmt 1
 2341 007e 00BF     		nop
 2342 0080 1437     		adds	r7, r7, #20
 2343              		.cfi_def_cfa_offset 4
 2344 0082 BD46     		mov	sp, r7
 2345              		.cfi_def_cfa_register 13
 2346              		@ sp needed
 2347 0084 80BC     		pop	{r7}
 2348              		.cfi_restore 7
 2349              		.cfi_def_cfa_offset 0
 2350 0086 7047     		bx	lr
 2351              	.L89:
 2352              		.align	2
 2353              	.L88:
 2354 0088 00000000 		.word	instructionsList
 2355              		.cfi_endproc
 2356              	.LFE6:
 2357              		.size	processInstructionList, .-processInstructionList
 2358              		.section	.text.checkPathDirection,"ax",%progbits
 2359              		.align	2
 2360              		.global	checkPathDirection
 2361              		.thumb
 2362              		.thumb_func
 2363              		.type	checkPathDirection, %function
 2364              	checkPathDirection:
 2365              	.LFB7:
 433:pathfinding.c **** 
 434:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2366              		.loc 1 434 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 8
 2369              		@ frame_needed = 1, uses_anonymous_args = 0
 2370              		@ link register save eliminated.
 2371 0000 80B4     		push	{r7}
 2372              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 51


 2373              		.cfi_offset 7, -4
 2374 0002 83B0     		sub	sp, sp, #12
 2375              		.cfi_def_cfa_offset 16
 2376 0004 00AF     		add	r7, sp, #0
 2377              		.cfi_def_cfa_register 7
 2378 0006 7860     		str	r0, [r7, #4]
 2379 0008 3960     		str	r1, [r7]
 435:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 436:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2380              		.loc 1 436 0
 2381 000a 7B68     		ldr	r3, [r7, #4]
 2382 000c 5A1E     		subs	r2, r3, #1
 2383 000e 3E49     		ldr	r1, .L100
 2384 0010 1346     		mov	r3, r2
 2385 0012 DB00     		lsls	r3, r3, #3
 2386 0014 1344     		add	r3, r3, r2
 2387 0016 5B00     		lsls	r3, r3, #1
 2388 0018 1344     		add	r3, r3, r2
 2389 001a 3A68     		ldr	r2, [r7]
 2390 001c 1344     		add	r3, r3, r2
 2391 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2392 0022 082B     		cmp	r3, #8
 2393 0024 0DD0     		beq	.L91
 2394              		.loc 1 436 0 is_stmt 0 discriminator 1
 2395 0026 7B68     		ldr	r3, [r7, #4]
 2396 0028 5A1E     		subs	r2, r3, #1
 2397 002a 3749     		ldr	r1, .L100
 2398 002c 1346     		mov	r3, r2
 2399 002e DB00     		lsls	r3, r3, #3
 2400 0030 1344     		add	r3, r3, r2
 2401 0032 5B00     		lsls	r3, r3, #1
 2402 0034 1344     		add	r3, r3, r2
 2403 0036 3A68     		ldr	r2, [r7]
 2404 0038 1344     		add	r3, r3, r2
 2405 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2406 003e 092B     		cmp	r3, #9
 2407 0040 01D1     		bne	.L92
 2408              	.L91:
 437:pathfinding.c ****         return 0; // up 
 2409              		.loc 1 437 0 is_stmt 1
 2410 0042 0023     		movs	r3, #0
 2411 0044 5AE0     		b	.L93
 2412              	.L92:
 438:pathfinding.c ****     }
 439:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2413              		.loc 1 439 0
 2414 0046 7B68     		ldr	r3, [r7, #4]
 2415 0048 5A1C     		adds	r2, r3, #1
 2416 004a 2F49     		ldr	r1, .L100
 2417 004c 1346     		mov	r3, r2
 2418 004e DB00     		lsls	r3, r3, #3
 2419 0050 1344     		add	r3, r3, r2
 2420 0052 5B00     		lsls	r3, r3, #1
 2421 0054 1344     		add	r3, r3, r2
 2422 0056 3A68     		ldr	r2, [r7]
 2423 0058 1344     		add	r3, r3, r2
 2424 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 52


 2425 005e 082B     		cmp	r3, #8
 2426 0060 0DD0     		beq	.L94
 2427              		.loc 1 439 0 is_stmt 0 discriminator 1
 2428 0062 7B68     		ldr	r3, [r7, #4]
 2429 0064 5A1C     		adds	r2, r3, #1
 2430 0066 2849     		ldr	r1, .L100
 2431 0068 1346     		mov	r3, r2
 2432 006a DB00     		lsls	r3, r3, #3
 2433 006c 1344     		add	r3, r3, r2
 2434 006e 5B00     		lsls	r3, r3, #1
 2435 0070 1344     		add	r3, r3, r2
 2436 0072 3A68     		ldr	r2, [r7]
 2437 0074 1344     		add	r3, r3, r2
 2438 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2439 007a 092B     		cmp	r3, #9
 2440 007c 01D1     		bne	.L95
 2441              	.L94:
 440:pathfinding.c ****         return 1; // down
 2442              		.loc 1 440 0 is_stmt 1
 2443 007e 0123     		movs	r3, #1
 2444 0080 3CE0     		b	.L93
 2445              	.L95:
 441:pathfinding.c ****     }
 442:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2446              		.loc 1 442 0
 2447 0082 3B68     		ldr	r3, [r7]
 2448 0084 591E     		subs	r1, r3, #1
 2449 0086 2048     		ldr	r0, .L100
 2450 0088 7A68     		ldr	r2, [r7, #4]
 2451 008a 1346     		mov	r3, r2
 2452 008c DB00     		lsls	r3, r3, #3
 2453 008e 1344     		add	r3, r3, r2
 2454 0090 5B00     		lsls	r3, r3, #1
 2455 0092 1344     		add	r3, r3, r2
 2456 0094 0B44     		add	r3, r3, r1
 2457 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2458 009a 082B     		cmp	r3, #8
 2459 009c 0DD0     		beq	.L96
 2460              		.loc 1 442 0 is_stmt 0 discriminator 1
 2461 009e 3B68     		ldr	r3, [r7]
 2462 00a0 591E     		subs	r1, r3, #1
 2463 00a2 1948     		ldr	r0, .L100
 2464 00a4 7A68     		ldr	r2, [r7, #4]
 2465 00a6 1346     		mov	r3, r2
 2466 00a8 DB00     		lsls	r3, r3, #3
 2467 00aa 1344     		add	r3, r3, r2
 2468 00ac 5B00     		lsls	r3, r3, #1
 2469 00ae 1344     		add	r3, r3, r2
 2470 00b0 0B44     		add	r3, r3, r1
 2471 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2472 00b6 092B     		cmp	r3, #9
 2473 00b8 01D1     		bne	.L97
 2474              	.L96:
 443:pathfinding.c ****         return 2; // left
 2475              		.loc 1 443 0 is_stmt 1
 2476 00ba 0223     		movs	r3, #2
 2477 00bc 1EE0     		b	.L93
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 53


 2478              	.L97:
 444:pathfinding.c ****     }
 445:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2479              		.loc 1 445 0
 2480 00be 3B68     		ldr	r3, [r7]
 2481 00c0 591C     		adds	r1, r3, #1
 2482 00c2 1148     		ldr	r0, .L100
 2483 00c4 7A68     		ldr	r2, [r7, #4]
 2484 00c6 1346     		mov	r3, r2
 2485 00c8 DB00     		lsls	r3, r3, #3
 2486 00ca 1344     		add	r3, r3, r2
 2487 00cc 5B00     		lsls	r3, r3, #1
 2488 00ce 1344     		add	r3, r3, r2
 2489 00d0 0B44     		add	r3, r3, r1
 2490 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2491 00d6 082B     		cmp	r3, #8
 2492 00d8 0DD0     		beq	.L98
 2493              		.loc 1 445 0 is_stmt 0 discriminator 1
 2494 00da 3B68     		ldr	r3, [r7]
 2495 00dc 591C     		adds	r1, r3, #1
 2496 00de 0A48     		ldr	r0, .L100
 2497 00e0 7A68     		ldr	r2, [r7, #4]
 2498 00e2 1346     		mov	r3, r2
 2499 00e4 DB00     		lsls	r3, r3, #3
 2500 00e6 1344     		add	r3, r3, r2
 2501 00e8 5B00     		lsls	r3, r3, #1
 2502 00ea 1344     		add	r3, r3, r2
 2503 00ec 0B44     		add	r3, r3, r1
 2504 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2505 00f2 092B     		cmp	r3, #9
 2506 00f4 01D1     		bne	.L99
 2507              	.L98:
 446:pathfinding.c ****         return 3; // right
 2508              		.loc 1 446 0 is_stmt 1
 2509 00f6 0323     		movs	r3, #3
 2510 00f8 00E0     		b	.L93
 2511              	.L99:
 447:pathfinding.c ****     }
 448:pathfinding.c ****     return 5; // default- will never reach this
 2512              		.loc 1 448 0
 2513 00fa 0523     		movs	r3, #5
 2514              	.L93:
 449:pathfinding.c **** }
 2515              		.loc 1 449 0
 2516 00fc 1846     		mov	r0, r3
 2517 00fe 0C37     		adds	r7, r7, #12
 2518              		.cfi_def_cfa_offset 4
 2519 0100 BD46     		mov	sp, r7
 2520              		.cfi_def_cfa_register 13
 2521              		@ sp needed
 2522 0102 80BC     		pop	{r7}
 2523              		.cfi_restore 7
 2524              		.cfi_def_cfa_offset 0
 2525 0104 7047     		bx	lr
 2526              	.L101:
 2527 0106 00BF     		.align	2
 2528              	.L100:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 54


 2529 0108 00000000 		.word	map
 2530              		.cfi_endproc
 2531              	.LFE7:
 2532              		.size	checkPathDirection, .-checkPathDirection
 2533              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2534              		.align	2
 2535              		.global	checkIgnoreTurn
 2536              		.thumb
 2537              		.thumb_func
 2538              		.type	checkIgnoreTurn, %function
 2539              	checkIgnoreTurn:
 2540              	.LFB8:
 450:pathfinding.c **** 
 451:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2541              		.loc 1 451 0
 2542              		.cfi_startproc
 2543              		@ args = 0, pretend = 0, frame = 16
 2544              		@ frame_needed = 1, uses_anonymous_args = 0
 2545              		@ link register save eliminated.
 2546 0000 80B4     		push	{r7}
 2547              		.cfi_def_cfa_offset 4
 2548              		.cfi_offset 7, -4
 2549 0002 85B0     		sub	sp, sp, #20
 2550              		.cfi_def_cfa_offset 24
 2551 0004 00AF     		add	r7, sp, #0
 2552              		.cfi_def_cfa_register 7
 2553 0006 0346     		mov	r3, r0
 2554 0008 B960     		str	r1, [r7, #8]
 2555 000a 7A60     		str	r2, [r7, #4]
 2556 000c FB73     		strb	r3, [r7, #15]
 452:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 453:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2557              		.loc 1 453 0
 2558 000e BB68     		ldr	r3, [r7, #8]
 2559 0010 5A1E     		subs	r2, r3, #1
 2560 0012 4149     		ldr	r1, .L120
 2561 0014 1346     		mov	r3, r2
 2562 0016 DB00     		lsls	r3, r3, #3
 2563 0018 1344     		add	r3, r3, r2
 2564 001a 5B00     		lsls	r3, r3, #1
 2565 001c 1344     		add	r3, r3, r2
 2566 001e 7A68     		ldr	r2, [r7, #4]
 2567 0020 1344     		add	r3, r3, r2
 2568 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2569 0026 002B     		cmp	r3, #0
 2570 0028 11D1     		bne	.L103
 454:pathfinding.c ****         switch (robotOrientation) {
 2571              		.loc 1 454 0
 2572 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2573 002c 022B     		cmp	r3, #2
 2574 002e 02D0     		beq	.L105
 2575 0030 032B     		cmp	r3, #3
 2576 0032 06D0     		beq	.L106
 455:pathfinding.c ****             case Left:
 456:pathfinding.c ****                 ignoreR++;
 457:pathfinding.c ****                 break;
 458:pathfinding.c ****             case Right:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 55


 459:pathfinding.c ****                 ignoreL++;
 460:pathfinding.c ****                 break;
 461:pathfinding.c ****             default:
 462:pathfinding.c ****                 break; // ignore when going up and down
 2577              		.loc 1 462 0
 2578 0034 0BE0     		b	.L103
 2579              	.L105:
 456:pathfinding.c ****                 break;
 2580              		.loc 1 456 0
 2581 0036 394B     		ldr	r3, .L120+4
 2582 0038 1B68     		ldr	r3, [r3]
 2583 003a 0133     		adds	r3, r3, #1
 2584 003c 374A     		ldr	r2, .L120+4
 2585 003e 1360     		str	r3, [r2]
 457:pathfinding.c ****             case Right:
 2586              		.loc 1 457 0
 2587 0040 05E0     		b	.L103
 2588              	.L106:
 459:pathfinding.c ****                 break;
 2589              		.loc 1 459 0
 2590 0042 374B     		ldr	r3, .L120+8
 2591 0044 1B68     		ldr	r3, [r3]
 2592 0046 0133     		adds	r3, r3, #1
 2593 0048 354A     		ldr	r2, .L120+8
 2594 004a 1360     		str	r3, [r2]
 460:pathfinding.c ****             default:
 2595              		.loc 1 460 0
 2596 004c 00BF     		nop
 2597              	.L103:
 463:pathfinding.c ****         }
 464:pathfinding.c ****     }
 465:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2598              		.loc 1 465 0
 2599 004e BB68     		ldr	r3, [r7, #8]
 2600 0050 5A1C     		adds	r2, r3, #1
 2601 0052 3149     		ldr	r1, .L120
 2602 0054 1346     		mov	r3, r2
 2603 0056 DB00     		lsls	r3, r3, #3
 2604 0058 1344     		add	r3, r3, r2
 2605 005a 5B00     		lsls	r3, r3, #1
 2606 005c 1344     		add	r3, r3, r2
 2607 005e 7A68     		ldr	r2, [r7, #4]
 2608 0060 1344     		add	r3, r3, r2
 2609 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2610 0066 002B     		cmp	r3, #0
 2611 0068 11D1     		bne	.L107
 466:pathfinding.c ****         switch (robotOrientation) {
 2612              		.loc 1 466 0
 2613 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2614 006c 022B     		cmp	r3, #2
 2615 006e 02D0     		beq	.L109
 2616 0070 032B     		cmp	r3, #3
 2617 0072 06D0     		beq	.L110
 467:pathfinding.c ****             case Left:
 468:pathfinding.c ****                 ignoreL++;
 469:pathfinding.c ****                 break;
 470:pathfinding.c ****             case Right:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 56


 471:pathfinding.c ****                 ignoreR++;
 472:pathfinding.c ****                 break;
 473:pathfinding.c ****             default:
 474:pathfinding.c ****                 break;
 2618              		.loc 1 474 0
 2619 0074 0BE0     		b	.L107
 2620              	.L109:
 468:pathfinding.c ****                 break;
 2621              		.loc 1 468 0
 2622 0076 2A4B     		ldr	r3, .L120+8
 2623 0078 1B68     		ldr	r3, [r3]
 2624 007a 0133     		adds	r3, r3, #1
 2625 007c 284A     		ldr	r2, .L120+8
 2626 007e 1360     		str	r3, [r2]
 469:pathfinding.c ****             case Right:
 2627              		.loc 1 469 0
 2628 0080 05E0     		b	.L107
 2629              	.L110:
 471:pathfinding.c ****                 break;
 2630              		.loc 1 471 0
 2631 0082 264B     		ldr	r3, .L120+4
 2632 0084 1B68     		ldr	r3, [r3]
 2633 0086 0133     		adds	r3, r3, #1
 2634 0088 244A     		ldr	r2, .L120+4
 2635 008a 1360     		str	r3, [r2]
 472:pathfinding.c ****             default:
 2636              		.loc 1 472 0
 2637 008c 00BF     		nop
 2638              	.L107:
 475:pathfinding.c ****         }
 476:pathfinding.c ****     }
 477:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2639              		.loc 1 477 0
 2640 008e 7B68     		ldr	r3, [r7, #4]
 2641 0090 591E     		subs	r1, r3, #1
 2642 0092 2148     		ldr	r0, .L120
 2643 0094 BA68     		ldr	r2, [r7, #8]
 2644 0096 1346     		mov	r3, r2
 2645 0098 DB00     		lsls	r3, r3, #3
 2646 009a 1344     		add	r3, r3, r2
 2647 009c 5B00     		lsls	r3, r3, #1
 2648 009e 1344     		add	r3, r3, r2
 2649 00a0 0B44     		add	r3, r3, r1
 2650 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2651 00a6 002B     		cmp	r3, #0
 2652 00a8 11D1     		bne	.L111
 478:pathfinding.c ****         switch (robotOrientation) {
 2653              		.loc 1 478 0
 2654 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2655 00ac 002B     		cmp	r3, #0
 2656 00ae 02D0     		beq	.L113
 2657 00b0 012B     		cmp	r3, #1
 2658 00b2 06D0     		beq	.L114
 479:pathfinding.c ****             case Up:
 480:pathfinding.c ****                 ignoreL++;
 481:pathfinding.c ****                 break;
 482:pathfinding.c ****             case Down:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 57


 483:pathfinding.c ****                 ignoreR++;
 484:pathfinding.c ****                 break;
 485:pathfinding.c ****             default:
 486:pathfinding.c ****                 break;
 2659              		.loc 1 486 0
 2660 00b4 0BE0     		b	.L111
 2661              	.L113:
 480:pathfinding.c ****                 break;
 2662              		.loc 1 480 0
 2663 00b6 1A4B     		ldr	r3, .L120+8
 2664 00b8 1B68     		ldr	r3, [r3]
 2665 00ba 0133     		adds	r3, r3, #1
 2666 00bc 184A     		ldr	r2, .L120+8
 2667 00be 1360     		str	r3, [r2]
 481:pathfinding.c ****             case Down:
 2668              		.loc 1 481 0
 2669 00c0 05E0     		b	.L111
 2670              	.L114:
 483:pathfinding.c ****                 break;
 2671              		.loc 1 483 0
 2672 00c2 164B     		ldr	r3, .L120+4
 2673 00c4 1B68     		ldr	r3, [r3]
 2674 00c6 0133     		adds	r3, r3, #1
 2675 00c8 144A     		ldr	r2, .L120+4
 2676 00ca 1360     		str	r3, [r2]
 484:pathfinding.c ****             default:
 2677              		.loc 1 484 0
 2678 00cc 00BF     		nop
 2679              	.L111:
 487:pathfinding.c ****         }
 488:pathfinding.c ****     }
 489:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2680              		.loc 1 489 0
 2681 00ce 7B68     		ldr	r3, [r7, #4]
 2682 00d0 591C     		adds	r1, r3, #1
 2683 00d2 1148     		ldr	r0, .L120
 2684 00d4 BA68     		ldr	r2, [r7, #8]
 2685 00d6 1346     		mov	r3, r2
 2686 00d8 DB00     		lsls	r3, r3, #3
 2687 00da 1344     		add	r3, r3, r2
 2688 00dc 5B00     		lsls	r3, r3, #1
 2689 00de 1344     		add	r3, r3, r2
 2690 00e0 0B44     		add	r3, r3, r1
 2691 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2692 00e6 002B     		cmp	r3, #0
 2693 00e8 11D1     		bne	.L119
 490:pathfinding.c ****         switch (robotOrientation) {
 2694              		.loc 1 490 0
 2695 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2696 00ec 002B     		cmp	r3, #0
 2697 00ee 02D0     		beq	.L117
 2698 00f0 012B     		cmp	r3, #1
 2699 00f2 06D0     		beq	.L118
 491:pathfinding.c ****             case Up:
 492:pathfinding.c ****                 ignoreR++;
 493:pathfinding.c ****                 break;
 494:pathfinding.c ****             case Down:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 58


 495:pathfinding.c ****                 ignoreL++;
 496:pathfinding.c ****                 break;
 497:pathfinding.c ****             default:
 498:pathfinding.c ****                 break;
 2700              		.loc 1 498 0
 2701 00f4 0BE0     		b	.L115
 2702              	.L117:
 492:pathfinding.c ****                 break;
 2703              		.loc 1 492 0
 2704 00f6 094B     		ldr	r3, .L120+4
 2705 00f8 1B68     		ldr	r3, [r3]
 2706 00fa 0133     		adds	r3, r3, #1
 2707 00fc 074A     		ldr	r2, .L120+4
 2708 00fe 1360     		str	r3, [r2]
 493:pathfinding.c ****             case Down:
 2709              		.loc 1 493 0
 2710 0100 05E0     		b	.L115
 2711              	.L118:
 495:pathfinding.c ****                 break;
 2712              		.loc 1 495 0
 2713 0102 074B     		ldr	r3, .L120+8
 2714 0104 1B68     		ldr	r3, [r3]
 2715 0106 0133     		adds	r3, r3, #1
 2716 0108 054A     		ldr	r2, .L120+8
 2717 010a 1360     		str	r3, [r2]
 496:pathfinding.c ****             default:
 2718              		.loc 1 496 0
 2719 010c 00BF     		nop
 2720              	.L115:
 2721              	.L119:
 499:pathfinding.c ****         }
 500:pathfinding.c ****     }
 501:pathfinding.c **** }
 2722              		.loc 1 501 0
 2723 010e 00BF     		nop
 2724 0110 1437     		adds	r7, r7, #20
 2725              		.cfi_def_cfa_offset 4
 2726 0112 BD46     		mov	sp, r7
 2727              		.cfi_def_cfa_register 13
 2728              		@ sp needed
 2729 0114 80BC     		pop	{r7}
 2730              		.cfi_restore 7
 2731              		.cfi_def_cfa_offset 0
 2732 0116 7047     		bx	lr
 2733              	.L121:
 2734              		.align	2
 2735              	.L120:
 2736 0118 00000000 		.word	map
 2737 011c 00000000 		.word	ignoreR
 2738 0120 00000000 		.word	ignoreL
 2739              		.cfi_endproc
 2740              	.LFE8:
 2741              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 2742              		.section	.text.getTargetOrientation,"ax",%progbits
 2743              		.align	2
 2744              		.global	getTargetOrientation
 2745              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 59


 2746              		.thumb_func
 2747              		.type	getTargetOrientation, %function
 2748              	getTargetOrientation:
 2749              	.LFB9:
 502:pathfinding.c **** 
 503:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 2750              		.loc 1 503 0
 2751              		.cfi_startproc
 2752              		@ args = 0, pretend = 0, frame = 8
 2753              		@ frame_needed = 1, uses_anonymous_args = 0
 2754              		@ link register save eliminated.
 2755 0000 80B4     		push	{r7}
 2756              		.cfi_def_cfa_offset 4
 2757              		.cfi_offset 7, -4
 2758 0002 83B0     		sub	sp, sp, #12
 2759              		.cfi_def_cfa_offset 16
 2760 0004 00AF     		add	r7, sp, #0
 2761              		.cfi_def_cfa_register 7
 2762 0006 7860     		str	r0, [r7, #4]
 2763 0008 3960     		str	r1, [r7]
 504:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 2764              		.loc 1 504 0
 2765 000a 7B68     		ldr	r3, [r7, #4]
 2766 000c 5A1C     		adds	r2, r3, #1
 2767 000e 2249     		ldr	r1, .L128
 2768 0010 1346     		mov	r3, r2
 2769 0012 DB00     		lsls	r3, r3, #3
 2770 0014 1344     		add	r3, r3, r2
 2771 0016 5B00     		lsls	r3, r3, #1
 2772 0018 1344     		add	r3, r3, r2
 2773 001a 3A68     		ldr	r2, [r7]
 2774 001c 1344     		add	r3, r3, r2
 2775 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2776 0022 082B     		cmp	r3, #8
 2777 0024 01D1     		bne	.L123
 505:pathfinding.c ****         return 0; // robot will be travelling up
 2778              		.loc 1 505 0
 2779 0026 0023     		movs	r3, #0
 2780 0028 30E0     		b	.L124
 2781              	.L123:
 506:pathfinding.c ****     }
 507:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 2782              		.loc 1 507 0
 2783 002a 7B68     		ldr	r3, [r7, #4]
 2784 002c 5A1E     		subs	r2, r3, #1
 2785 002e 1A49     		ldr	r1, .L128
 2786 0030 1346     		mov	r3, r2
 2787 0032 DB00     		lsls	r3, r3, #3
 2788 0034 1344     		add	r3, r3, r2
 2789 0036 5B00     		lsls	r3, r3, #1
 2790 0038 1344     		add	r3, r3, r2
 2791 003a 3A68     		ldr	r2, [r7]
 2792 003c 1344     		add	r3, r3, r2
 2793 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2794 0042 082B     		cmp	r3, #8
 2795 0044 01D1     		bne	.L125
 508:pathfinding.c ****         return 1; // robot will be travelling down
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 60


 2796              		.loc 1 508 0
 2797 0046 0123     		movs	r3, #1
 2798 0048 20E0     		b	.L124
 2799              	.L125:
 509:pathfinding.c ****     }
 510:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 2800              		.loc 1 510 0
 2801 004a 3B68     		ldr	r3, [r7]
 2802 004c 591C     		adds	r1, r3, #1
 2803 004e 1248     		ldr	r0, .L128
 2804 0050 7A68     		ldr	r2, [r7, #4]
 2805 0052 1346     		mov	r3, r2
 2806 0054 DB00     		lsls	r3, r3, #3
 2807 0056 1344     		add	r3, r3, r2
 2808 0058 5B00     		lsls	r3, r3, #1
 2809 005a 1344     		add	r3, r3, r2
 2810 005c 0B44     		add	r3, r3, r1
 2811 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2812 0062 082B     		cmp	r3, #8
 2813 0064 01D1     		bne	.L126
 511:pathfinding.c ****         return 2; // robot will be travelling left
 2814              		.loc 1 511 0
 2815 0066 0223     		movs	r3, #2
 2816 0068 10E0     		b	.L124
 2817              	.L126:
 512:pathfinding.c ****     }
 513:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 2818              		.loc 1 513 0
 2819 006a 3B68     		ldr	r3, [r7]
 2820 006c 591E     		subs	r1, r3, #1
 2821 006e 0A48     		ldr	r0, .L128
 2822 0070 7A68     		ldr	r2, [r7, #4]
 2823 0072 1346     		mov	r3, r2
 2824 0074 DB00     		lsls	r3, r3, #3
 2825 0076 1344     		add	r3, r3, r2
 2826 0078 5B00     		lsls	r3, r3, #1
 2827 007a 1344     		add	r3, r3, r2
 2828 007c 0B44     		add	r3, r3, r1
 2829 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2830 0082 082B     		cmp	r3, #8
 2831 0084 01D1     		bne	.L127
 514:pathfinding.c ****         return 3; // robot will be travelling right
 2832              		.loc 1 514 0
 2833 0086 0323     		movs	r3, #3
 2834 0088 00E0     		b	.L124
 2835              	.L127:
 515:pathfinding.c ****     }
 516:pathfinding.c ****     return 5; // placeholder
 2836              		.loc 1 516 0
 2837 008a 0523     		movs	r3, #5
 2838              	.L124:
 517:pathfinding.c **** }
 2839              		.loc 1 517 0
 2840 008c 1846     		mov	r0, r3
 2841 008e 0C37     		adds	r7, r7, #12
 2842              		.cfi_def_cfa_offset 4
 2843 0090 BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 61


 2844              		.cfi_def_cfa_register 13
 2845              		@ sp needed
 2846 0092 80BC     		pop	{r7}
 2847              		.cfi_restore 7
 2848              		.cfi_def_cfa_offset 0
 2849 0094 7047     		bx	lr
 2850              	.L129:
 2851 0096 00BF     		.align	2
 2852              	.L128:
 2853 0098 00000000 		.word	map
 2854              		.cfi_endproc
 2855              	.LFE9:
 2856              		.size	getTargetOrientation, .-getTargetOrientation
 2857              		.section	.text.findPath,"ax",%progbits
 2858              		.align	2
 2859              		.global	findPath
 2860              		.thumb
 2861              		.thumb_func
 2862              		.type	findPath, %function
 2863              	findPath:
 2864              	.LFB10:
 518:pathfinding.c **** 
 519:pathfinding.c **** void findPath(int map[MAX_ROWS][MAX_COLS], struct Location startLocation, struct Location targetLoc
 2865              		.loc 1 519 0
 2866              		.cfi_startproc
 2867              		@ args = 12, pretend = 8, frame = 16
 2868              		@ frame_needed = 1, uses_anonymous_args = 0
 2869 0000 82B0     		sub	sp, sp, #8
 2870              		.cfi_def_cfa_offset 8
 2871 0002 90B5     		push	{r4, r7, lr}
 2872              		.cfi_def_cfa_offset 20
 2873              		.cfi_offset 4, -20
 2874              		.cfi_offset 7, -16
 2875              		.cfi_offset 14, -12
 2876 0004 87B0     		sub	sp, sp, #28
 2877              		.cfi_def_cfa_offset 48
 2878 0006 02AF     		add	r7, sp, #8
 2879              		.cfi_def_cfa 7, 40
 2880 0008 F860     		str	r0, [r7, #12]
 2881 000a 381D     		adds	r0, r7, #4
 2882 000c 80E80600 		stmia	r0, {r1, r2}
 2883 0010 7B62     		str	r3, [r7, #36]
 520:pathfinding.c ****     clearMap(map); // clear map between each pass
 2884              		.loc 1 520 0
 2885 0012 F868     		ldr	r0, [r7, #12]
 2886 0014 FFF7FEFF 		bl	clearMap
 521:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 2887              		.loc 1 521 0
 2888 0018 BB6A     		ldr	r3, [r7, #40]
 2889 001a 0093     		str	r3, [sp]
 2890 001c 7B6A     		ldr	r3, [r7, #36]
 2891 001e 3A1D     		adds	r2, r7, #4
 2892 0020 06CA     		ldmia	r2, {r1, r2}
 2893 0022 F868     		ldr	r0, [r7, #12]
 2894 0024 FFF7FEFF 		bl	dijkstra
 522:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // get list of instructions
 2895              		.loc 1 522 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 62


 2896 0028 0A4B     		ldr	r3, .L131
 2897 002a 1C68     		ldr	r4, [r3]
 2898 002c 6A46     		mov	r2, sp
 2899 002e 07F12403 		add	r3, r7, #36
 2900 0032 93E80300 		ldmia	r3, {r0, r1}
 2901 0036 82E80300 		stmia	r2, {r0, r1}
 2902 003a 3B1D     		adds	r3, r7, #4
 2903 003c 0CCB     		ldmia	r3, {r2, r3}
 2904 003e 2146     		mov	r1, r4
 2905 0040 F868     		ldr	r0, [r7, #12]
 2906 0042 FFF7FEFF 		bl	getPathInstructions
 523:pathfinding.c **** }
 2907              		.loc 1 523 0
 2908 0046 00BF     		nop
 2909 0048 1437     		adds	r7, r7, #20
 2910              		.cfi_def_cfa_offset 20
 2911 004a BD46     		mov	sp, r7
 2912              		.cfi_def_cfa_register 13
 2913              		@ sp needed
 2914 004c BDE89040 		pop	{r4, r7, lr}
 2915              		.cfi_restore 14
 2916              		.cfi_restore 7
 2917              		.cfi_restore 4
 2918              		.cfi_def_cfa_offset 8
 2919 0050 02B0     		add	sp, sp, #8
 2920              		.cfi_def_cfa_offset 0
 2921 0052 7047     		bx	lr
 2922              	.L132:
 2923              		.align	2
 2924              	.L131:
 2925 0054 00000000 		.word	numSteps
 2926              		.cfi_endproc
 2927              	.LFE10:
 2928              		.size	findPath, .-findPath
 2929              		.text
 2930              	.Letext0:
 2931              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2932              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2933              		.section	.debug_info,"",%progbits
 2934              	.Ldebug_info0:
 2935 0000 1D080000 		.4byte	0x81d
 2936 0004 0400     		.2byte	0x4
 2937 0006 00000000 		.4byte	.Ldebug_abbrev0
 2938 000a 04       		.byte	0x4
 2939 000b 01       		.uleb128 0x1
 2940 000c 50000000 		.4byte	.LASF81
 2941 0010 0C       		.byte	0xc
 2942 0011 32040000 		.4byte	.LASF82
 2943 0015 32010000 		.4byte	.LASF83
 2944 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2945 001d 00000000 		.4byte	0
 2946 0021 00000000 		.4byte	.Ldebug_line0
 2947 0025 02       		.uleb128 0x2
 2948 0026 01       		.byte	0x1
 2949 0027 06       		.byte	0x6
 2950 0028 30000000 		.4byte	.LASF0
 2951 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 63


 2952 002d 3C000000 		.4byte	.LASF12
 2953 0031 02       		.byte	0x2
 2954 0032 1D       		.byte	0x1d
 2955 0033 37000000 		.4byte	0x37
 2956 0037 02       		.uleb128 0x2
 2957 0038 01       		.byte	0x1
 2958 0039 08       		.byte	0x8
 2959 003a 2E030000 		.4byte	.LASF1
 2960 003e 02       		.uleb128 0x2
 2961 003f 02       		.byte	0x2
 2962 0040 05       		.byte	0x5
 2963 0041 6F030000 		.4byte	.LASF2
 2964 0045 02       		.uleb128 0x2
 2965 0046 02       		.byte	0x2
 2966 0047 07       		.byte	0x7
 2967 0048 72020000 		.4byte	.LASF3
 2968 004c 02       		.uleb128 0x2
 2969 004d 04       		.byte	0x4
 2970 004e 05       		.byte	0x5
 2971 004f A2010000 		.4byte	.LASF4
 2972 0053 02       		.uleb128 0x2
 2973 0054 04       		.byte	0x4
 2974 0055 07       		.byte	0x7
 2975 0056 3A020000 		.4byte	.LASF5
 2976 005a 02       		.uleb128 0x2
 2977 005b 08       		.byte	0x8
 2978 005c 05       		.byte	0x5
 2979 005d 24010000 		.4byte	.LASF6
 2980 0061 02       		.uleb128 0x2
 2981 0062 08       		.byte	0x8
 2982 0063 07       		.byte	0x7
 2983 0064 DE000000 		.4byte	.LASF7
 2984 0068 04       		.uleb128 0x4
 2985 0069 04       		.byte	0x4
 2986 006a 05       		.byte	0x5
 2987 006b 696E7400 		.ascii	"int\000"
 2988 006f 02       		.uleb128 0x2
 2989 0070 04       		.byte	0x4
 2990 0071 07       		.byte	0x7
 2991 0072 20020000 		.4byte	.LASF8
 2992 0076 02       		.uleb128 0x2
 2993 0077 08       		.byte	0x8
 2994 0078 04       		.byte	0x4
 2995 0079 C2020000 		.4byte	.LASF9
 2996 007d 02       		.uleb128 0x2
 2997 007e 04       		.byte	0x4
 2998 007f 07       		.byte	0x7
 2999 0080 B9020000 		.4byte	.LASF10
 3000 0084 02       		.uleb128 0x2
 3001 0085 01       		.byte	0x1
 3002 0086 08       		.byte	0x8
 3003 0087 C8030000 		.4byte	.LASF11
 3004 008b 03       		.uleb128 0x3
 3005 008c 7E040000 		.4byte	.LASF13
 3006 0090 03       		.byte	0x3
 3007 0091 18       		.byte	0x18
 3008 0092 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 64


 3009 0096 05       		.uleb128 0x5
 3010 0097 3C030000 		.4byte	.LASF21
 3011 009b 01       		.byte	0x1
 3012 009c 37000000 		.4byte	0x37
 3013 00a0 01       		.byte	0x1
 3014 00a1 16       		.byte	0x16
 3015 00a2 D1000000 		.4byte	0xd1
 3016 00a6 06       		.uleb128 0x6
 3017 00a7 88030000 		.4byte	.LASF14
 3018 00ab 00       		.byte	0
 3019 00ac 06       		.uleb128 0x6
 3020 00ad F0020000 		.4byte	.LASF15
 3021 00b1 01       		.byte	0x1
 3022 00b2 06       		.uleb128 0x6
 3023 00b3 51040000 		.4byte	.LASF16
 3024 00b7 02       		.byte	0x2
 3025 00b8 06       		.uleb128 0x6
 3026 00b9 07010000 		.4byte	.LASF17
 3027 00bd 03       		.byte	0x3
 3028 00be 06       		.uleb128 0x6
 3029 00bf BA010000 		.4byte	.LASF18
 3030 00c3 04       		.byte	0x4
 3031 00c4 06       		.uleb128 0x6
 3032 00c5 85020000 		.4byte	.LASF19
 3033 00c9 05       		.byte	0x5
 3034 00ca 06       		.uleb128 0x6
 3035 00cb 1A000000 		.4byte	.LASF20
 3036 00cf 06       		.byte	0x6
 3037 00d0 00       		.byte	0
 3038 00d1 05       		.uleb128 0x5
 3039 00d2 00000000 		.4byte	.LASF22
 3040 00d6 01       		.byte	0x1
 3041 00d7 37000000 		.4byte	0x37
 3042 00db 01       		.byte	0x1
 3043 00dc 17       		.byte	0x17
 3044 00dd F9000000 		.4byte	0xf9
 3045 00e1 07       		.uleb128 0x7
 3046 00e2 557000   		.ascii	"Up\000"
 3047 00e5 00       		.byte	0
 3048 00e6 06       		.uleb128 0x6
 3049 00e7 09040000 		.4byte	.LASF23
 3050 00eb 01       		.byte	0x1
 3051 00ec 06       		.uleb128 0x6
 3052 00ed B4020000 		.4byte	.LASF24
 3053 00f1 02       		.byte	0x2
 3054 00f2 06       		.uleb128 0x6
 3055 00f3 92030000 		.4byte	.LASF25
 3056 00f7 03       		.byte	0x3
 3057 00f8 00       		.byte	0
 3058 00f9 08       		.uleb128 0x8
 3059 00fa 95010000 		.4byte	.LASF29
 3060 00fe 0C       		.byte	0xc
 3061 00ff 01       		.byte	0x1
 3062 0100 1A       		.byte	0x1a
 3063 0101 2A010000 		.4byte	0x12a
 3064 0105 09       		.uleb128 0x9
 3065 0106 46000000 		.4byte	.LASF26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 65


 3066 010a 01       		.byte	0x1
 3067 010b 1B       		.byte	0x1b
 3068 010c 96000000 		.4byte	0x96
 3069 0110 00       		.byte	0
 3070 0111 09       		.uleb128 0x9
 3071 0112 B4040000 		.4byte	.LASF27
 3072 0116 01       		.byte	0x1
 3073 0117 1C       		.byte	0x1c
 3074 0118 68000000 		.4byte	0x68
 3075 011c 04       		.byte	0x4
 3076 011d 09       		.uleb128 0x9
 3077 011e BC040000 		.4byte	.LASF28
 3078 0122 01       		.byte	0x1
 3079 0123 1D       		.byte	0x1d
 3080 0124 68000000 		.4byte	0x68
 3081 0128 08       		.byte	0x8
 3082 0129 00       		.byte	0
 3083 012a 08       		.uleb128 0x8
 3084 012b CD010000 		.4byte	.LASF30
 3085 012f 08       		.byte	0x8
 3086 0130 01       		.byte	0x1
 3087 0131 76       		.byte	0x76
 3088 0132 4F010000 		.4byte	0x14f
 3089 0136 0A       		.uleb128 0xa
 3090 0137 726F7700 		.ascii	"row\000"
 3091 013b 01       		.byte	0x1
 3092 013c 77       		.byte	0x77
 3093 013d 68000000 		.4byte	0x68
 3094 0141 00       		.byte	0
 3095 0142 0A       		.uleb128 0xa
 3096 0143 636F6C00 		.ascii	"col\000"
 3097 0147 01       		.byte	0x1
 3098 0148 78       		.byte	0x78
 3099 0149 68000000 		.4byte	0x68
 3100 014d 04       		.byte	0x4
 3101 014e 00       		.byte	0
 3102 014f 0B       		.uleb128 0xb
 3103 0150 1B010000 		.4byte	.LASF31
 3104 0154 01       		.byte	0x1
 3105 0155 65       		.byte	0x65
 3106 0156 00000000 		.4byte	.LFB1
 3107 015a 58000000 		.4byte	.LFE1-.LFB1
 3108 015e 01       		.uleb128 0x1
 3109 015f 9C       		.byte	0x9c
 3110 0160 9F010000 		.4byte	0x19f
 3111 0164 0C       		.uleb128 0xc
 3112 0165 6D617000 		.ascii	"map\000"
 3113 0169 01       		.byte	0x1
 3114 016a 65       		.byte	0x65
 3115 016b AF010000 		.4byte	0x1af
 3116 016f 02       		.uleb128 0x2
 3117 0170 91       		.byte	0x91
 3118 0171 6C       		.sleb128 -20
 3119 0172 0D       		.uleb128 0xd
 3120 0173 08000000 		.4byte	.LBB2
 3121 0177 44000000 		.4byte	.LBE2-.LBB2
 3122 017b 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 66


 3123 017c 6900     		.ascii	"i\000"
 3124 017e 01       		.byte	0x1
 3125 017f 67       		.byte	0x67
 3126 0180 68000000 		.4byte	0x68
 3127 0184 02       		.uleb128 0x2
 3128 0185 91       		.byte	0x91
 3129 0186 74       		.sleb128 -12
 3130 0187 0D       		.uleb128 0xd
 3131 0188 0E000000 		.4byte	.LBB3
 3132 018c 2C000000 		.4byte	.LBE3-.LBB3
 3133 0190 0E       		.uleb128 0xe
 3134 0191 6A00     		.ascii	"j\000"
 3135 0193 01       		.byte	0x1
 3136 0194 68       		.byte	0x68
 3137 0195 68000000 		.4byte	0x68
 3138 0199 02       		.uleb128 0x2
 3139 019a 91       		.byte	0x91
 3140 019b 70       		.sleb128 -16
 3141 019c 00       		.byte	0
 3142 019d 00       		.byte	0
 3143 019e 00       		.byte	0
 3144 019f 0F       		.uleb128 0xf
 3145 01a0 68000000 		.4byte	0x68
 3146 01a4 AF010000 		.4byte	0x1af
 3147 01a8 10       		.uleb128 0x10
 3148 01a9 7D000000 		.4byte	0x7d
 3149 01ad 12       		.byte	0x12
 3150 01ae 00       		.byte	0
 3151 01af 11       		.uleb128 0x11
 3152 01b0 04       		.byte	0x4
 3153 01b1 9F010000 		.4byte	0x19f
 3154 01b5 12       		.uleb128 0x12
 3155 01b6 12030000 		.4byte	.LASF32
 3156 01ba 01       		.byte	0x1
 3157 01bb 6E       		.byte	0x6e
 3158 01bc 00000000 		.4byte	.LFB2
 3159 01c0 60000000 		.4byte	.LFE2-.LFB2
 3160 01c4 01       		.uleb128 0x1
 3161 01c5 9C       		.byte	0x9c
 3162 01c6 05020000 		.4byte	0x205
 3163 01ca 0C       		.uleb128 0xc
 3164 01cb 6D617000 		.ascii	"map\000"
 3165 01cf 01       		.byte	0x1
 3166 01d0 6E       		.byte	0x6e
 3167 01d1 AF010000 		.4byte	0x1af
 3168 01d5 02       		.uleb128 0x2
 3169 01d6 91       		.byte	0x91
 3170 01d7 6C       		.sleb128 -20
 3171 01d8 0D       		.uleb128 0xd
 3172 01d9 08000000 		.4byte	.LBB4
 3173 01dd 4E000000 		.4byte	.LBE4-.LBB4
 3174 01e1 0E       		.uleb128 0xe
 3175 01e2 6900     		.ascii	"i\000"
 3176 01e4 01       		.byte	0x1
 3177 01e5 70       		.byte	0x70
 3178 01e6 68000000 		.4byte	0x68
 3179 01ea 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 67


 3180 01eb 91       		.byte	0x91
 3181 01ec 74       		.sleb128 -12
 3182 01ed 0D       		.uleb128 0xd
 3183 01ee 0E000000 		.4byte	.LBB5
 3184 01f2 3C000000 		.4byte	.LBE5-.LBB5
 3185 01f6 0E       		.uleb128 0xe
 3186 01f7 6A00     		.ascii	"j\000"
 3187 01f9 01       		.byte	0x1
 3188 01fa 71       		.byte	0x71
 3189 01fb 68000000 		.4byte	0x68
 3190 01ff 02       		.uleb128 0x2
 3191 0200 91       		.byte	0x91
 3192 0201 70       		.sleb128 -16
 3193 0202 00       		.byte	0
 3194 0203 00       		.byte	0
 3195 0204 00       		.byte	0
 3196 0205 13       		.uleb128 0x13
 3197 0206 24000000 		.4byte	.LASF65
 3198 020a 01       		.byte	0x1
 3199 020b 7F       		.byte	0x7f
 3200 020c 61020000 		.4byte	0x261
 3201 0210 00000000 		.4byte	.LFB3
 3202 0214 56000000 		.4byte	.LFE3-.LFB3
 3203 0218 01       		.uleb128 0x1
 3204 0219 9C       		.byte	0x9c
 3205 021a 61020000 		.4byte	0x261
 3206 021e 0C       		.uleb128 0xc
 3207 021f 7200     		.ascii	"r\000"
 3208 0221 01       		.byte	0x1
 3209 0222 7F       		.byte	0x7f
 3210 0223 68000000 		.4byte	0x68
 3211 0227 02       		.uleb128 0x2
 3212 0228 91       		.byte	0x91
 3213 0229 74       		.sleb128 -12
 3214 022a 0C       		.uleb128 0xc
 3215 022b 6300     		.ascii	"c\000"
 3216 022d 01       		.byte	0x1
 3217 022e 7F       		.byte	0x7f
 3218 022f 68000000 		.4byte	0x68
 3219 0233 02       		.uleb128 0x2
 3220 0234 91       		.byte	0x91
 3221 0235 70       		.sleb128 -16
 3222 0236 14       		.uleb128 0x14
 3223 0237 1F000000 		.4byte	.LASF33
 3224 023b 01       		.byte	0x1
 3225 023c 7F       		.byte	0x7f
 3226 023d 68000000 		.4byte	0x68
 3227 0241 02       		.uleb128 0x2
 3228 0242 91       		.byte	0x91
 3229 0243 6C       		.sleb128 -20
 3230 0244 14       		.uleb128 0x14
 3231 0245 A6040000 		.4byte	.LASF34
 3232 0249 01       		.byte	0x1
 3233 024a 7F       		.byte	0x7f
 3234 024b 68000000 		.4byte	0x68
 3235 024f 02       		.uleb128 0x2
 3236 0250 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 68


 3237 0251 68       		.sleb128 -24
 3238 0252 0C       		.uleb128 0xc
 3239 0253 6D617000 		.ascii	"map\000"
 3240 0257 01       		.byte	0x1
 3241 0258 7F       		.byte	0x7f
 3242 0259 AF010000 		.4byte	0x1af
 3243 025d 02       		.uleb128 0x2
 3244 025e 91       		.byte	0x91
 3245 025f 00       		.sleb128 0
 3246 0260 00       		.byte	0
 3247 0261 02       		.uleb128 0x2
 3248 0262 01       		.byte	0x1
 3249 0263 02       		.byte	0x2
 3250 0264 28030000 		.4byte	.LASF35
 3251 0268 0B       		.uleb128 0xb
 3252 0269 11000000 		.4byte	.LASF36
 3253 026d 01       		.byte	0x1
 3254 026e 83       		.byte	0x83
 3255 026f 00000000 		.4byte	.LFB4
 3256 0273 4C090000 		.4byte	.LFE4-.LFB4
 3257 0277 01       		.uleb128 0x1
 3258 0278 9C       		.byte	0x9c
 3259 0279 B6040000 		.4byte	0x4b6
 3260 027d 0C       		.uleb128 0xc
 3261 027e 6D617000 		.ascii	"map\000"
 3262 0282 01       		.byte	0x1
 3263 0283 83       		.byte	0x83
 3264 0284 AF010000 		.4byte	0x1af
 3265 0288 03       		.uleb128 0x3
 3266 0289 91       		.byte	0x91
 3267 028a BC52     		.sleb128 -5828
 3268 028c 14       		.uleb128 0x14
 3269 028d 0D010000 		.4byte	.LASF37
 3270 0291 01       		.byte	0x1
 3271 0292 83       		.byte	0x83
 3272 0293 2A010000 		.4byte	0x12a
 3273 0297 03       		.uleb128 0x3
 3274 0298 91       		.byte	0x91
 3275 0299 B452     		.sleb128 -5836
 3276 029b 14       		.uleb128 0x14
 3277 029c AB010000 		.4byte	.LASF38
 3278 02a0 01       		.byte	0x1
 3279 02a1 83       		.byte	0x83
 3280 02a2 2A010000 		.4byte	0x12a
 3281 02a6 02       		.uleb128 0x2
 3282 02a7 91       		.byte	0x91
 3283 02a8 7C       		.sleb128 -4
 3284 02a9 15       		.uleb128 0x15
 3285 02aa BD030000 		.4byte	.LASF39
 3286 02ae 01       		.byte	0x1
 3287 02af 85       		.byte	0x85
 3288 02b0 B6040000 		.4byte	0x4b6
 3289 02b4 03       		.uleb128 0x3
 3290 02b5 91       		.byte	0x91
 3291 02b6 9C76     		.sleb128 -1252
 3292 02b8 08       		.uleb128 0x8
 3293 02b9 62040000 		.4byte	.LASF40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 69


 3294 02bd 0C       		.byte	0xc
 3295 02be 01       		.byte	0x1
 3296 02bf 8C       		.byte	0x8c
 3297 02c0 DD020000 		.4byte	0x2dd
 3298 02c4 09       		.uleb128 0x9
 3299 02c5 B4030000 		.4byte	.LASF41
 3300 02c9 01       		.byte	0x1
 3301 02ca 8D       		.byte	0x8d
 3302 02cb 2A010000 		.4byte	0x12a
 3303 02cf 00       		.byte	0
 3304 02d0 09       		.uleb128 0x9
 3305 02d1 F0030000 		.4byte	.LASF42
 3306 02d5 01       		.byte	0x1
 3307 02d6 8E       		.byte	0x8e
 3308 02d7 68000000 		.4byte	0x68
 3309 02db 08       		.byte	0x8
 3310 02dc 00       		.byte	0
 3311 02dd 0E       		.uleb128 0xe
 3312 02de 707100   		.ascii	"pq\000"
 3313 02e1 01       		.byte	0x1
 3314 02e2 91       		.byte	0x91
 3315 02e3 CC040000 		.4byte	0x4cc
 3316 02e7 03       		.uleb128 0x3
 3317 02e8 91       		.byte	0x91
 3318 02e9 C05B     		.sleb128 -4672
 3319 02eb 15       		.uleb128 0x15
 3320 02ec 99020000 		.4byte	.LASF43
 3321 02f0 01       		.byte	0x1
 3322 02f1 92       		.byte	0x92
 3323 02f2 68000000 		.4byte	0x68
 3324 02f6 02       		.uleb128 0x2
 3325 02f7 91       		.byte	0x91
 3326 02f8 5C       		.sleb128 -36
 3327 02f9 15       		.uleb128 0x15
 3328 02fa FD000000 		.4byte	.LASF44
 3329 02fe 01       		.byte	0x1
 3330 02ff 95       		.byte	0x95
 3331 0300 B6040000 		.4byte	0x4b6
 3332 0304 03       		.uleb128 0x3
 3333 0305 91       		.byte	0x91
 3334 0306 CC52     		.sleb128 -5812
 3335 0308 15       		.uleb128 0x15
 3336 0309 F5000000 		.4byte	.LASF45
 3337 030d 01       		.byte	0x1
 3338 030e 9E       		.byte	0x9e
 3339 030f 68000000 		.4byte	0x68
 3340 0313 02       		.uleb128 0x2
 3341 0314 91       		.byte	0x91
 3342 0315 50       		.sleb128 -48
 3343 0316 15       		.uleb128 0x15
 3344 0317 2D020000 		.4byte	.LASF46
 3345 031b 01       		.byte	0x1
 3346 031c D5       		.byte	0xd5
 3347 031d 68000000 		.4byte	0x68
 3348 0321 02       		.uleb128 0x2
 3349 0322 91       		.byte	0x91
 3350 0323 40       		.sleb128 -64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 70


 3351 0324 15       		.uleb128 0x15
 3352 0325 AB030000 		.4byte	.LASF47
 3353 0329 01       		.byte	0x1
 3354 032a D8       		.byte	0xd8
 3355 032b DD040000 		.4byte	0x4dd
 3356 032f 03       		.uleb128 0x3
 3357 0330 91       		.byte	0x91
 3358 0331 987F     		.sleb128 -104
 3359 0333 15       		.uleb128 0x15
 3360 0334 CE020000 		.4byte	.LASF48
 3361 0338 01       		.byte	0x1
 3362 0339 D9       		.byte	0xd9
 3363 033a 68000000 		.4byte	0x68
 3364 033e 03       		.uleb128 0x3
 3365 033f 91       		.byte	0x91
 3366 0340 BC7F     		.sleb128 -68
 3367 0342 15       		.uleb128 0x15
 3368 0343 8A010000 		.4byte	.LASF49
 3369 0347 01       		.byte	0x1
 3370 0348 DA       		.byte	0xda
 3371 0349 68000000 		.4byte	0x68
 3372 034d 03       		.uleb128 0x3
 3373 034e 91       		.byte	0x91
 3374 034f B87F     		.sleb128 -72
 3375 0351 15       		.uleb128 0x15
 3376 0352 08030000 		.4byte	.LASF50
 3377 0356 01       		.byte	0x1
 3378 0357 E1       		.byte	0xe1
 3379 0358 68000000 		.4byte	0x68
 3380 035c 03       		.uleb128 0x3
 3381 035d 91       		.byte	0x91
 3382 035e B47F     		.sleb128 -76
 3383 0360 16       		.uleb128 0x16
 3384 0361 28000000 		.4byte	.LBB6
 3385 0365 92000000 		.4byte	.LBE6-.LBB6
 3386 0369 90030000 		.4byte	0x390
 3387 036d 0E       		.uleb128 0xe
 3388 036e 6900     		.ascii	"i\000"
 3389 0370 01       		.byte	0x1
 3390 0371 86       		.byte	0x86
 3391 0372 68000000 		.4byte	0x68
 3392 0376 02       		.uleb128 0x2
 3393 0377 91       		.byte	0x91
 3394 0378 64       		.sleb128 -28
 3395 0379 0D       		.uleb128 0xd
 3396 037a 36000000 		.4byte	.LBB7
 3397 037e 60000000 		.4byte	.LBE7-.LBB7
 3398 0382 0E       		.uleb128 0xe
 3399 0383 6A00     		.ascii	"j\000"
 3400 0385 01       		.byte	0x1
 3401 0386 87       		.byte	0x87
 3402 0387 68000000 		.4byte	0x68
 3403 038b 02       		.uleb128 0x2
 3404 038c 91       		.byte	0x91
 3405 038d 60       		.sleb128 -32
 3406 038e 00       		.byte	0
 3407 038f 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 71


 3408 0390 16       		.uleb128 0x16
 3409 0391 C6000000 		.4byte	.LBB8
 3410 0395 92000000 		.4byte	.LBE8-.LBB8
 3411 0399 C0030000 		.4byte	0x3c0
 3412 039d 0E       		.uleb128 0xe
 3413 039e 6900     		.ascii	"i\000"
 3414 03a0 01       		.byte	0x1
 3415 03a1 98       		.byte	0x98
 3416 03a2 68000000 		.4byte	0x68
 3417 03a6 02       		.uleb128 0x2
 3418 03a7 91       		.byte	0x91
 3419 03a8 58       		.sleb128 -40
 3420 03a9 0D       		.uleb128 0xd
 3421 03aa D4000000 		.4byte	.LBB9
 3422 03ae 60000000 		.4byte	.LBE9-.LBB9
 3423 03b2 0E       		.uleb128 0xe
 3424 03b3 6A00     		.ascii	"j\000"
 3425 03b5 01       		.byte	0x1
 3426 03b6 99       		.byte	0x99
 3427 03b7 68000000 		.4byte	0x68
 3428 03bb 02       		.uleb128 0x2
 3429 03bc 91       		.byte	0x91
 3430 03bd 54       		.sleb128 -44
 3431 03be 00       		.byte	0
 3432 03bf 00       		.byte	0
 3433 03c0 17       		.uleb128 0x17
 3434 03c1 00000000 		.4byte	.Ldebug_ranges0+0
 3435 03c5 76040000 		.4byte	0x476
 3436 03c9 0E       		.uleb128 0xe
 3437 03ca 69647800 		.ascii	"idx\000"
 3438 03ce 01       		.byte	0x1
 3439 03cf A8       		.byte	0xa8
 3440 03d0 68000000 		.4byte	0x68
 3441 03d4 02       		.uleb128 0x2
 3442 03d5 91       		.byte	0x91
 3443 03d6 4C       		.sleb128 -52
 3444 03d7 15       		.uleb128 0x15
 3445 03d8 00030000 		.4byte	.LASF51
 3446 03dc 01       		.byte	0x1
 3447 03dd AE       		.byte	0xae
 3448 03de B8020000 		.4byte	0x2b8
 3449 03e2 03       		.uleb128 0x3
 3450 03e3 91       		.byte	0x91
 3451 03e4 C052     		.sleb128 -5824
 3452 03e6 0E       		.uleb128 0xe
 3453 03e7 726F7700 		.ascii	"row\000"
 3454 03eb 01       		.byte	0x1
 3455 03ec B2       		.byte	0xb2
 3456 03ed 68000000 		.4byte	0x68
 3457 03f1 03       		.uleb128 0x3
 3458 03f2 91       		.byte	0x91
 3459 03f3 AC7F     		.sleb128 -84
 3460 03f5 0E       		.uleb128 0xe
 3461 03f6 636F6C00 		.ascii	"col\000"
 3462 03fa 01       		.byte	0x1
 3463 03fb B3       		.byte	0xb3
 3464 03fc 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 72


 3465 0400 03       		.uleb128 0x3
 3466 0401 91       		.byte	0x91
 3467 0402 A87F     		.sleb128 -88
 3468 0404 16       		.uleb128 0x16
 3469 0405 02020000 		.4byte	.LBB11
 3470 0409 90000000 		.4byte	.LBE11-.LBB11
 3471 040d 1E040000 		.4byte	0x41e
 3472 0411 0E       		.uleb128 0xe
 3473 0412 6900     		.ascii	"i\000"
 3474 0414 01       		.byte	0x1
 3475 0415 A9       		.byte	0xa9
 3476 0416 68000000 		.4byte	0x68
 3477 041a 02       		.uleb128 0x2
 3478 041b 91       		.byte	0x91
 3479 041c 48       		.sleb128 -56
 3480 041d 00       		.byte	0
 3481 041e 0D       		.uleb128 0xd
 3482 041f C4030000 		.4byte	.LBB12
 3483 0423 1E020000 		.4byte	.LBE12-.LBB12
 3484 0427 0E       		.uleb128 0xe
 3485 0428 6900     		.ascii	"i\000"
 3486 042a 01       		.byte	0x1
 3487 042b BC       		.byte	0xbc
 3488 042c 68000000 		.4byte	0x68
 3489 0430 02       		.uleb128 0x2
 3490 0431 91       		.byte	0x91
 3491 0432 44       		.sleb128 -60
 3492 0433 0D       		.uleb128 0xd
 3493 0434 D2030000 		.4byte	.LBB13
 3494 0438 EA010000 		.4byte	.LBE13-.LBB13
 3495 043c 15       		.uleb128 0x15
 3496 043d 92020000 		.4byte	.LASF52
 3497 0441 01       		.byte	0x1
 3498 0442 BD       		.byte	0xbd
 3499 0443 68000000 		.4byte	0x68
 3500 0447 03       		.uleb128 0x3
 3501 0448 91       		.byte	0x91
 3502 0449 A47F     		.sleb128 -92
 3503 044b 15       		.uleb128 0x15
 3504 044c 83010000 		.4byte	.LASF53
 3505 0450 01       		.byte	0x1
 3506 0451 BE       		.byte	0xbe
 3507 0452 68000000 		.4byte	0x68
 3508 0456 03       		.uleb128 0x3
 3509 0457 91       		.byte	0x91
 3510 0458 A07F     		.sleb128 -96
 3511 045a 0D       		.uleb128 0xd
 3512 045b 80040000 		.4byte	.LBB14
 3513 045f 3C010000 		.4byte	.LBE14-.LBB14
 3514 0463 15       		.uleb128 0x15
 3515 0464 26040000 		.4byte	.LASF54
 3516 0468 01       		.byte	0x1
 3517 0469 C1       		.byte	0xc1
 3518 046a 68000000 		.4byte	0x68
 3519 046e 03       		.uleb128 0x3
 3520 046f 91       		.byte	0x91
 3521 0470 9C7F     		.sleb128 -100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 73


 3522 0472 00       		.byte	0
 3523 0473 00       		.byte	0
 3524 0474 00       		.byte	0
 3525 0475 00       		.byte	0
 3526 0476 0D       		.uleb128 0xd
 3527 0477 0A070000 		.4byte	.LBB16
 3528 047b 18020000 		.4byte	.LBE16-.LBB16
 3529 047f 0E       		.uleb128 0xe
 3530 0480 6900     		.ascii	"i\000"
 3531 0482 01       		.byte	0x1
 3532 0483 E5       		.byte	0xe5
 3533 0484 68000000 		.4byte	0x68
 3534 0488 03       		.uleb128 0x3
 3535 0489 91       		.byte	0x91
 3536 048a B07F     		.sleb128 -80
 3537 048c 0D       		.uleb128 0xd
 3538 048d 1C070000 		.4byte	.LBB17
 3539 0491 EC010000 		.4byte	.LBE17-.LBB17
 3540 0495 15       		.uleb128 0x15
 3541 0496 92020000 		.4byte	.LASF52
 3542 049a 01       		.byte	0x1
 3543 049b E6       		.byte	0xe6
 3544 049c 68000000 		.4byte	0x68
 3545 04a0 03       		.uleb128 0x3
 3546 04a1 91       		.byte	0x91
 3547 04a2 947F     		.sleb128 -108
 3548 04a4 15       		.uleb128 0x15
 3549 04a5 83010000 		.4byte	.LASF53
 3550 04a9 01       		.byte	0x1
 3551 04aa E7       		.byte	0xe7
 3552 04ab 68000000 		.4byte	0x68
 3553 04af 03       		.uleb128 0x3
 3554 04b0 91       		.byte	0x91
 3555 04b1 907F     		.sleb128 -112
 3556 04b3 00       		.byte	0
 3557 04b4 00       		.byte	0
 3558 04b5 00       		.byte	0
 3559 04b6 0F       		.uleb128 0xf
 3560 04b7 68000000 		.4byte	0x68
 3561 04bb CC040000 		.4byte	0x4cc
 3562 04bf 10       		.uleb128 0x10
 3563 04c0 7D000000 		.4byte	0x7d
 3564 04c4 0E       		.byte	0xe
 3565 04c5 10       		.uleb128 0x10
 3566 04c6 7D000000 		.4byte	0x7d
 3567 04ca 12       		.byte	0x12
 3568 04cb 00       		.byte	0
 3569 04cc 0F       		.uleb128 0xf
 3570 04cd B8020000 		.4byte	0x2b8
 3571 04d1 DD040000 		.4byte	0x4dd
 3572 04d5 18       		.uleb128 0x18
 3573 04d6 7D000000 		.4byte	0x7d
 3574 04da 1C01     		.2byte	0x11c
 3575 04dc 00       		.byte	0
 3576 04dd 11       		.uleb128 0x11
 3577 04de 04       		.byte	0x4
 3578 04df 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 74


 3579 04e3 19       		.uleb128 0x19
 3580 04e4 A0020000 		.4byte	.LASF55
 3581 04e8 01       		.byte	0x1
 3582 04e9 0901     		.2byte	0x109
 3583 04eb 00000000 		.4byte	.LFB5
 3584 04ef C8030000 		.4byte	.LFE5-.LFB5
 3585 04f3 01       		.uleb128 0x1
 3586 04f4 9C       		.byte	0x9c
 3587 04f5 9A050000 		.4byte	0x59a
 3588 04f9 1A       		.uleb128 0x1a
 3589 04fa 6D617000 		.ascii	"map\000"
 3590 04fe 01       		.byte	0x1
 3591 04ff 0901     		.2byte	0x109
 3592 0501 AF010000 		.4byte	0x1af
 3593 0505 02       		.uleb128 0x2
 3594 0506 91       		.byte	0x91
 3595 0507 5C       		.sleb128 -36
 3596 0508 1B       		.uleb128 0x1b
 3597 0509 98030000 		.4byte	.LASF56
 3598 050d 01       		.byte	0x1
 3599 050e 0901     		.2byte	0x109
 3600 0510 68000000 		.4byte	0x68
 3601 0514 02       		.uleb128 0x2
 3602 0515 91       		.byte	0x91
 3603 0516 58       		.sleb128 -40
 3604 0517 1B       		.uleb128 0x1b
 3605 0518 70040000 		.4byte	.LASF57
 3606 051c 01       		.byte	0x1
 3607 051d 0901     		.2byte	0x109
 3608 051f 2A010000 		.4byte	0x12a
 3609 0523 02       		.uleb128 0x2
 3610 0524 91       		.byte	0x91
 3611 0525 50       		.sleb128 -48
 3612 0526 1B       		.uleb128 0x1b
 3613 0527 79030000 		.4byte	.LASF58
 3614 052b 01       		.byte	0x1
 3615 052c 0901     		.2byte	0x109
 3616 052e 2A010000 		.4byte	0x12a
 3617 0532 02       		.uleb128 0x2
 3618 0533 91       		.byte	0x91
 3619 0534 00       		.sleb128 0
 3620 0535 1C       		.uleb128 0x1c
 3621 0536 CE020000 		.4byte	.LASF48
 3622 053a 01       		.byte	0x1
 3623 053b 0A01     		.2byte	0x10a
 3624 053d 68000000 		.4byte	0x68
 3625 0541 02       		.uleb128 0x2
 3626 0542 91       		.byte	0x91
 3627 0543 74       		.sleb128 -12
 3628 0544 1C       		.uleb128 0x1c
 3629 0545 8A010000 		.4byte	.LASF49
 3630 0549 01       		.byte	0x1
 3631 054a 0B01     		.2byte	0x10b
 3632 054c 68000000 		.4byte	0x68
 3633 0550 02       		.uleb128 0x2
 3634 0551 91       		.byte	0x91
 3635 0552 70       		.sleb128 -16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 75


 3636 0553 1C       		.uleb128 0x1c
 3637 0554 A1030000 		.4byte	.LASF59
 3638 0558 01       		.byte	0x1
 3639 0559 0C01     		.2byte	0x10c
 3640 055b 68000000 		.4byte	0x68
 3641 055f 02       		.uleb128 0x2
 3642 0560 91       		.byte	0x91
 3643 0561 6C       		.sleb128 -20
 3644 0562 1C       		.uleb128 0x1c
 3645 0563 60020000 		.4byte	.LASF60
 3646 0567 01       		.byte	0x1
 3647 0568 0D01     		.2byte	0x10d
 3648 056a 68000000 		.4byte	0x68
 3649 056e 02       		.uleb128 0x2
 3650 056f 91       		.byte	0x91
 3651 0570 60       		.sleb128 -32
 3652 0571 0D       		.uleb128 0xd
 3653 0572 2E000000 		.4byte	.LBB18
 3654 0576 5A030000 		.4byte	.LBE18-.LBB18
 3655 057a 1C       		.uleb128 0x1c
 3656 057b 1B030000 		.4byte	.LASF61
 3657 057f 01       		.byte	0x1
 3658 0580 1301     		.2byte	0x113
 3659 0582 96000000 		.4byte	0x96
 3660 0586 02       		.uleb128 0x2
 3661 0587 91       		.byte	0x91
 3662 0588 6B       		.sleb128 -21
 3663 0589 1C       		.uleb128 0x1c
 3664 058a AB040000 		.4byte	.LASF62
 3665 058e 01       		.byte	0x1
 3666 058f 1401     		.2byte	0x114
 3667 0591 68000000 		.4byte	0x68
 3668 0595 02       		.uleb128 0x2
 3669 0596 91       		.byte	0x91
 3670 0597 64       		.sleb128 -28
 3671 0598 00       		.byte	0
 3672 0599 00       		.byte	0
 3673 059a 1D       		.uleb128 0x1d
 3674 059b D9020000 		.4byte	.LASF63
 3675 059f 01       		.byte	0x1
 3676 05a0 A701     		.2byte	0x1a7
 3677 05a2 00000000 		.4byte	.LFB6
 3678 05a6 8C000000 		.4byte	.LFE6-.LFB6
 3679 05aa 01       		.uleb128 0x1
 3680 05ab 9C       		.byte	0x9c
 3681 05ac D7050000 		.4byte	0x5d7
 3682 05b0 1B       		.uleb128 0x1b
 3683 05b1 F9030000 		.4byte	.LASF64
 3684 05b5 01       		.byte	0x1
 3685 05b6 A701     		.2byte	0x1a7
 3686 05b8 68000000 		.4byte	0x68
 3687 05bc 02       		.uleb128 0x2
 3688 05bd 91       		.byte	0x91
 3689 05be 6C       		.sleb128 -20
 3690 05bf 0D       		.uleb128 0xd
 3691 05c0 08000000 		.4byte	.LBB19
 3692 05c4 76000000 		.4byte	.LBE19-.LBB19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 76


 3693 05c8 1E       		.uleb128 0x1e
 3694 05c9 6900     		.ascii	"i\000"
 3695 05cb 01       		.byte	0x1
 3696 05cc A901     		.2byte	0x1a9
 3697 05ce 68000000 		.4byte	0x68
 3698 05d2 02       		.uleb128 0x2
 3699 05d3 91       		.byte	0x91
 3700 05d4 74       		.sleb128 -12
 3701 05d5 00       		.byte	0
 3702 05d6 00       		.byte	0
 3703 05d7 1F       		.uleb128 0x1f
 3704 05d8 F1010000 		.4byte	.LASF66
 3705 05dc 01       		.byte	0x1
 3706 05dd B201     		.2byte	0x1b2
 3707 05df 8B000000 		.4byte	0x8b
 3708 05e3 00000000 		.4byte	.LFB7
 3709 05e7 0C010000 		.4byte	.LFE7-.LFB7
 3710 05eb 01       		.uleb128 0x1
 3711 05ec 9C       		.byte	0x9c
 3712 05ed 10060000 		.4byte	0x610
 3713 05f1 1B       		.uleb128 0x1b
 3714 05f2 CE020000 		.4byte	.LASF48
 3715 05f6 01       		.byte	0x1
 3716 05f7 B201     		.2byte	0x1b2
 3717 05f9 68000000 		.4byte	0x68
 3718 05fd 02       		.uleb128 0x2
 3719 05fe 91       		.byte	0x91
 3720 05ff 74       		.sleb128 -12
 3721 0600 1B       		.uleb128 0x1b
 3722 0601 8A010000 		.4byte	.LASF49
 3723 0605 01       		.byte	0x1
 3724 0606 B201     		.2byte	0x1b2
 3725 0608 68000000 		.4byte	0x68
 3726 060c 02       		.uleb128 0x2
 3727 060d 91       		.byte	0x91
 3728 060e 70       		.sleb128 -16
 3729 060f 00       		.byte	0
 3730 0610 1D       		.uleb128 0x1d
 3731 0611 96040000 		.4byte	.LASF67
 3732 0615 01       		.byte	0x1
 3733 0616 C301     		.2byte	0x1c3
 3734 0618 00000000 		.4byte	.LFB8
 3735 061c 24010000 		.4byte	.LFE8-.LFB8
 3736 0620 01       		.uleb128 0x1
 3737 0621 9C       		.byte	0x9c
 3738 0622 54060000 		.4byte	0x654
 3739 0626 1B       		.uleb128 0x1b
 3740 0627 40040000 		.4byte	.LASF68
 3741 062b 01       		.byte	0x1
 3742 062c C301     		.2byte	0x1c3
 3743 062e D1000000 		.4byte	0xd1
 3744 0632 02       		.uleb128 0x2
 3745 0633 91       		.byte	0x91
 3746 0634 77       		.sleb128 -9
 3747 0635 1B       		.uleb128 0x1b
 3748 0636 CE020000 		.4byte	.LASF48
 3749 063a 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 77


 3750 063b C301     		.2byte	0x1c3
 3751 063d 68000000 		.4byte	0x68
 3752 0641 02       		.uleb128 0x2
 3753 0642 91       		.byte	0x91
 3754 0643 70       		.sleb128 -16
 3755 0644 1B       		.uleb128 0x1b
 3756 0645 8A010000 		.4byte	.LASF49
 3757 0649 01       		.byte	0x1
 3758 064a C301     		.2byte	0x1c3
 3759 064c 68000000 		.4byte	0x68
 3760 0650 02       		.uleb128 0x2
 3761 0651 91       		.byte	0x91
 3762 0652 6C       		.sleb128 -20
 3763 0653 00       		.byte	0
 3764 0654 1F       		.uleb128 0x1f
 3765 0655 51030000 		.4byte	.LASF69
 3766 0659 01       		.byte	0x1
 3767 065a F701     		.2byte	0x1f7
 3768 065c 8B000000 		.4byte	0x8b
 3769 0660 00000000 		.4byte	.LFB9
 3770 0664 9C000000 		.4byte	.LFE9-.LFB9
 3771 0668 01       		.uleb128 0x1
 3772 0669 9C       		.byte	0x9c
 3773 066a 8D060000 		.4byte	0x68d
 3774 066e 1B       		.uleb128 0x1b
 3775 066f D6010000 		.4byte	.LASF70
 3776 0673 01       		.byte	0x1
 3777 0674 F701     		.2byte	0x1f7
 3778 0676 68000000 		.4byte	0x68
 3779 067a 02       		.uleb128 0x2
 3780 067b 91       		.byte	0x91
 3781 067c 74       		.sleb128 -12
 3782 067d 1B       		.uleb128 0x1b
 3783 067e 8C040000 		.4byte	.LASF71
 3784 0682 01       		.byte	0x1
 3785 0683 F701     		.2byte	0x1f7
 3786 0685 68000000 		.4byte	0x68
 3787 0689 02       		.uleb128 0x2
 3788 068a 91       		.byte	0x91
 3789 068b 70       		.sleb128 -16
 3790 068c 00       		.byte	0
 3791 068d 19       		.uleb128 0x19
 3792 068e 66030000 		.4byte	.LASF72
 3793 0692 01       		.byte	0x1
 3794 0693 0702     		.2byte	0x207
 3795 0695 00000000 		.4byte	.LFB10
 3796 0699 58000000 		.4byte	.LFE10-.LFB10
 3797 069d 01       		.uleb128 0x1
 3798 069e 9C       		.byte	0x9c
 3799 069f D1060000 		.4byte	0x6d1
 3800 06a3 1A       		.uleb128 0x1a
 3801 06a4 6D617000 		.ascii	"map\000"
 3802 06a8 01       		.byte	0x1
 3803 06a9 0702     		.2byte	0x207
 3804 06ab AF010000 		.4byte	0x1af
 3805 06af 02       		.uleb128 0x2
 3806 06b0 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 78


 3807 06b1 64       		.sleb128 -28
 3808 06b2 1B       		.uleb128 0x1b
 3809 06b3 70040000 		.4byte	.LASF57
 3810 06b7 01       		.byte	0x1
 3811 06b8 0702     		.2byte	0x207
 3812 06ba 2A010000 		.4byte	0x12a
 3813 06be 02       		.uleb128 0x2
 3814 06bf 91       		.byte	0x91
 3815 06c0 5C       		.sleb128 -36
 3816 06c1 1B       		.uleb128 0x1b
 3817 06c2 79030000 		.4byte	.LASF58
 3818 06c6 01       		.byte	0x1
 3819 06c7 0702     		.2byte	0x207
 3820 06c9 2A010000 		.4byte	0x12a
 3821 06cd 02       		.uleb128 0x2
 3822 06ce 91       		.byte	0x91
 3823 06cf 7C       		.sleb128 -4
 3824 06d0 00       		.byte	0
 3825 06d1 20       		.uleb128 0x20
 3826 06d2 6D617000 		.ascii	"map\000"
 3827 06d6 01       		.byte	0x1
 3828 06d7 25       		.byte	0x25
 3829 06d8 B6040000 		.4byte	0x4b6
 3830 06dc 05       		.uleb128 0x5
 3831 06dd 03       		.byte	0x3
 3832 06de 00000000 		.4byte	map
 3833 06e2 0F       		.uleb128 0xf
 3834 06e3 68000000 		.4byte	0x68
 3835 06e7 F8060000 		.4byte	0x6f8
 3836 06eb 10       		.uleb128 0x10
 3837 06ec 7D000000 		.4byte	0x7d
 3838 06f0 04       		.byte	0x4
 3839 06f1 10       		.uleb128 0x10
 3840 06f2 7D000000 		.4byte	0x7d
 3841 06f6 01       		.byte	0x1
 3842 06f7 00       		.byte	0
 3843 06f8 21       		.uleb128 0x21
 3844 06f9 FF030000 		.4byte	.LASF73
 3845 06fd 01       		.byte	0x1
 3846 06fe 4E       		.byte	0x4e
 3847 06ff E2060000 		.4byte	0x6e2
 3848 0703 05       		.uleb128 0x5
 3849 0704 03       		.byte	0x3
 3850 0705 00000000 		.4byte	food_list
 3851 0709 21       		.uleb128 0x21
 3852 070a D7030000 		.4byte	.LASF74
 3853 070e 01       		.byte	0x1
 3854 070f 18       		.byte	0x18
 3855 0710 D1000000 		.4byte	0xd1
 3856 0714 05       		.uleb128 0x5
 3857 0715 03       		.byte	0x3
 3858 0716 00000000 		.4byte	previousRobotOrientation
 3859 071a 21       		.uleb128 0x21
 3860 071b 0E040000 		.4byte	.LASF75
 3861 071f 01       		.byte	0x1
 3862 0720 18       		.byte	0x18
 3863 0721 D1000000 		.4byte	0xd1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 79


 3864 0725 05       		.uleb128 0x5
 3865 0726 03       		.byte	0x3
 3866 0727 00000000 		.4byte	currentRobotOrientation
 3867 072b 0F       		.uleb128 0xf
 3868 072c 96000000 		.4byte	0x96
 3869 0730 3C070000 		.4byte	0x73c
 3870 0734 18       		.uleb128 0x18
 3871 0735 7D000000 		.4byte	0x7d
 3872 0739 1C01     		.2byte	0x11c
 3873 073b 00       		.byte	0
 3874 073c 21       		.uleb128 0x21
 3875 073d 95010000 		.4byte	.LASF29
 3876 0741 01       		.byte	0x1
 3877 0742 19       		.byte	0x19
 3878 0743 2B070000 		.4byte	0x72b
 3879 0747 05       		.uleb128 0x5
 3880 0748 03       		.byte	0x3
 3881 0749 00000000 		.4byte	Instructions
 3882 074d 21       		.uleb128 0x21
 3883 074e 98030000 		.4byte	.LASF56
 3884 0752 01       		.byte	0x1
 3885 0753 1F       		.byte	0x1f
 3886 0754 68000000 		.4byte	0x68
 3887 0758 05       		.uleb128 0x5
 3888 0759 03       		.byte	0x3
 3889 075a 00000000 		.4byte	numSteps
 3890 075e 0F       		.uleb128 0xf
 3891 075f 68000000 		.4byte	0x68
 3892 0763 6E070000 		.4byte	0x76e
 3893 0767 10       		.uleb128 0x10
 3894 0768 7D000000 		.4byte	0x7d
 3895 076c 01       		.byte	0x1
 3896 076d 00       		.byte	0
 3897 076e 21       		.uleb128 0x21
 3898 076f CD030000 		.4byte	.LASF76
 3899 0773 01       		.byte	0x1
 3900 0774 4C       		.byte	0x4c
 3901 0775 5E070000 		.4byte	0x75e
 3902 0779 05       		.uleb128 0x5
 3903 077a 03       		.byte	0x3
 3904 077b 00000000 		.4byte	start_pos
 3905 077f 0F       		.uleb128 0xf
 3906 0780 68000000 		.4byte	0x68
 3907 0784 96070000 		.4byte	0x796
 3908 0788 18       		.uleb128 0x18
 3909 0789 7D000000 		.4byte	0x7d
 3910 078d 1C01     		.2byte	0x11c
 3911 078f 10       		.uleb128 0x10
 3912 0790 7D000000 		.4byte	0x7d
 3913 0794 01       		.byte	0x1
 3914 0795 00       		.byte	0
 3915 0796 21       		.uleb128 0x21
 3916 0797 4C020000 		.4byte	.LASF77
 3917 079b 01       		.byte	0x1
 3918 079c 56       		.byte	0x56
 3919 079d 7F070000 		.4byte	0x77f
 3920 07a1 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 80


 3921 07a2 03       		.byte	0x3
 3922 07a3 00000000 		.4byte	path_of_coordinates
 3923 07a7 21       		.uleb128 0x21
 3924 07a8 04020000 		.4byte	.LASF78
 3925 07ac 01       		.byte	0x1
 3926 07ad 7B       		.byte	0x7b
 3927 07ae 7F070000 		.4byte	0x77f
 3928 07b2 05       		.uleb128 0x5
 3929 07b3 03       		.byte	0x3
 3930 07b4 00000000 		.4byte	list_of_optimal_coordinates
 3931 07b8 0F       		.uleb128 0xf
 3932 07b9 2A010000 		.4byte	0x12a
 3933 07bd C8070000 		.4byte	0x7c8
 3934 07c1 10       		.uleb128 0x10
 3935 07c2 7D000000 		.4byte	0x7d
 3936 07c6 03       		.byte	0x3
 3937 07c7 00       		.byte	0
 3938 07c8 21       		.uleb128 0x21
 3939 07c9 86040000 		.4byte	.LASF79
 3940 07cd 01       		.byte	0x1
 3941 07ce 7D       		.byte	0x7d
 3942 07cf B8070000 		.4byte	0x7b8
 3943 07d3 05       		.uleb128 0x5
 3944 07d4 03       		.byte	0x3
 3945 07d5 00000000 		.4byte	moves
 3946 07d9 22       		.uleb128 0x22
 3947 07da BC040000 		.4byte	.LASF28
 3948 07de 01       		.byte	0x1
 3949 07df 0601     		.2byte	0x106
 3950 07e1 68000000 		.4byte	0x68
 3951 07e5 05       		.uleb128 0x5
 3952 07e6 03       		.byte	0x3
 3953 07e7 00000000 		.4byte	ignoreR
 3954 07eb 22       		.uleb128 0x22
 3955 07ec B4040000 		.4byte	.LASF27
 3956 07f0 01       		.byte	0x1
 3957 07f1 0601     		.2byte	0x106
 3958 07f3 68000000 		.4byte	0x68
 3959 07f7 05       		.uleb128 0x5
 3960 07f8 03       		.byte	0x3
 3961 07f9 00000000 		.4byte	ignoreL
 3962 07fd 0F       		.uleb128 0xf
 3963 07fe F9000000 		.4byte	0xf9
 3964 0802 0E080000 		.4byte	0x80e
 3965 0806 18       		.uleb128 0x18
 3966 0807 7D000000 		.4byte	0x7d
 3967 080b 1C01     		.2byte	0x11c
 3968 080d 00       		.byte	0
 3969 080e 22       		.uleb128 0x22
 3970 080f E0010000 		.4byte	.LASF80
 3971 0813 01       		.byte	0x1
 3972 0814 0701     		.2byte	0x107
 3973 0816 FD070000 		.4byte	0x7fd
 3974 081a 05       		.uleb128 0x5
 3975 081b 03       		.byte	0x3
 3976 081c 00000000 		.4byte	instructionsList
 3977 0820 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 81


 3978              		.section	.debug_abbrev,"",%progbits
 3979              	.Ldebug_abbrev0:
 3980 0000 01       		.uleb128 0x1
 3981 0001 11       		.uleb128 0x11
 3982 0002 01       		.byte	0x1
 3983 0003 25       		.uleb128 0x25
 3984 0004 0E       		.uleb128 0xe
 3985 0005 13       		.uleb128 0x13
 3986 0006 0B       		.uleb128 0xb
 3987 0007 03       		.uleb128 0x3
 3988 0008 0E       		.uleb128 0xe
 3989 0009 1B       		.uleb128 0x1b
 3990 000a 0E       		.uleb128 0xe
 3991 000b 55       		.uleb128 0x55
 3992 000c 17       		.uleb128 0x17
 3993 000d 11       		.uleb128 0x11
 3994 000e 01       		.uleb128 0x1
 3995 000f 10       		.uleb128 0x10
 3996 0010 17       		.uleb128 0x17
 3997 0011 00       		.byte	0
 3998 0012 00       		.byte	0
 3999 0013 02       		.uleb128 0x2
 4000 0014 24       		.uleb128 0x24
 4001 0015 00       		.byte	0
 4002 0016 0B       		.uleb128 0xb
 4003 0017 0B       		.uleb128 0xb
 4004 0018 3E       		.uleb128 0x3e
 4005 0019 0B       		.uleb128 0xb
 4006 001a 03       		.uleb128 0x3
 4007 001b 0E       		.uleb128 0xe
 4008 001c 00       		.byte	0
 4009 001d 00       		.byte	0
 4010 001e 03       		.uleb128 0x3
 4011 001f 16       		.uleb128 0x16
 4012 0020 00       		.byte	0
 4013 0021 03       		.uleb128 0x3
 4014 0022 0E       		.uleb128 0xe
 4015 0023 3A       		.uleb128 0x3a
 4016 0024 0B       		.uleb128 0xb
 4017 0025 3B       		.uleb128 0x3b
 4018 0026 0B       		.uleb128 0xb
 4019 0027 49       		.uleb128 0x49
 4020 0028 13       		.uleb128 0x13
 4021 0029 00       		.byte	0
 4022 002a 00       		.byte	0
 4023 002b 04       		.uleb128 0x4
 4024 002c 24       		.uleb128 0x24
 4025 002d 00       		.byte	0
 4026 002e 0B       		.uleb128 0xb
 4027 002f 0B       		.uleb128 0xb
 4028 0030 3E       		.uleb128 0x3e
 4029 0031 0B       		.uleb128 0xb
 4030 0032 03       		.uleb128 0x3
 4031 0033 08       		.uleb128 0x8
 4032 0034 00       		.byte	0
 4033 0035 00       		.byte	0
 4034 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 82


 4035 0037 04       		.uleb128 0x4
 4036 0038 01       		.byte	0x1
 4037 0039 03       		.uleb128 0x3
 4038 003a 0E       		.uleb128 0xe
 4039 003b 0B       		.uleb128 0xb
 4040 003c 0B       		.uleb128 0xb
 4041 003d 49       		.uleb128 0x49
 4042 003e 13       		.uleb128 0x13
 4043 003f 3A       		.uleb128 0x3a
 4044 0040 0B       		.uleb128 0xb
 4045 0041 3B       		.uleb128 0x3b
 4046 0042 0B       		.uleb128 0xb
 4047 0043 01       		.uleb128 0x1
 4048 0044 13       		.uleb128 0x13
 4049 0045 00       		.byte	0
 4050 0046 00       		.byte	0
 4051 0047 06       		.uleb128 0x6
 4052 0048 28       		.uleb128 0x28
 4053 0049 00       		.byte	0
 4054 004a 03       		.uleb128 0x3
 4055 004b 0E       		.uleb128 0xe
 4056 004c 1C       		.uleb128 0x1c
 4057 004d 0B       		.uleb128 0xb
 4058 004e 00       		.byte	0
 4059 004f 00       		.byte	0
 4060 0050 07       		.uleb128 0x7
 4061 0051 28       		.uleb128 0x28
 4062 0052 00       		.byte	0
 4063 0053 03       		.uleb128 0x3
 4064 0054 08       		.uleb128 0x8
 4065 0055 1C       		.uleb128 0x1c
 4066 0056 0B       		.uleb128 0xb
 4067 0057 00       		.byte	0
 4068 0058 00       		.byte	0
 4069 0059 08       		.uleb128 0x8
 4070 005a 13       		.uleb128 0x13
 4071 005b 01       		.byte	0x1
 4072 005c 03       		.uleb128 0x3
 4073 005d 0E       		.uleb128 0xe
 4074 005e 0B       		.uleb128 0xb
 4075 005f 0B       		.uleb128 0xb
 4076 0060 3A       		.uleb128 0x3a
 4077 0061 0B       		.uleb128 0xb
 4078 0062 3B       		.uleb128 0x3b
 4079 0063 0B       		.uleb128 0xb
 4080 0064 01       		.uleb128 0x1
 4081 0065 13       		.uleb128 0x13
 4082 0066 00       		.byte	0
 4083 0067 00       		.byte	0
 4084 0068 09       		.uleb128 0x9
 4085 0069 0D       		.uleb128 0xd
 4086 006a 00       		.byte	0
 4087 006b 03       		.uleb128 0x3
 4088 006c 0E       		.uleb128 0xe
 4089 006d 3A       		.uleb128 0x3a
 4090 006e 0B       		.uleb128 0xb
 4091 006f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 83


 4092 0070 0B       		.uleb128 0xb
 4093 0071 49       		.uleb128 0x49
 4094 0072 13       		.uleb128 0x13
 4095 0073 38       		.uleb128 0x38
 4096 0074 0B       		.uleb128 0xb
 4097 0075 00       		.byte	0
 4098 0076 00       		.byte	0
 4099 0077 0A       		.uleb128 0xa
 4100 0078 0D       		.uleb128 0xd
 4101 0079 00       		.byte	0
 4102 007a 03       		.uleb128 0x3
 4103 007b 08       		.uleb128 0x8
 4104 007c 3A       		.uleb128 0x3a
 4105 007d 0B       		.uleb128 0xb
 4106 007e 3B       		.uleb128 0x3b
 4107 007f 0B       		.uleb128 0xb
 4108 0080 49       		.uleb128 0x49
 4109 0081 13       		.uleb128 0x13
 4110 0082 38       		.uleb128 0x38
 4111 0083 0B       		.uleb128 0xb
 4112 0084 00       		.byte	0
 4113 0085 00       		.byte	0
 4114 0086 0B       		.uleb128 0xb
 4115 0087 2E       		.uleb128 0x2e
 4116 0088 01       		.byte	0x1
 4117 0089 3F       		.uleb128 0x3f
 4118 008a 19       		.uleb128 0x19
 4119 008b 03       		.uleb128 0x3
 4120 008c 0E       		.uleb128 0xe
 4121 008d 3A       		.uleb128 0x3a
 4122 008e 0B       		.uleb128 0xb
 4123 008f 3B       		.uleb128 0x3b
 4124 0090 0B       		.uleb128 0xb
 4125 0091 27       		.uleb128 0x27
 4126 0092 19       		.uleb128 0x19
 4127 0093 11       		.uleb128 0x11
 4128 0094 01       		.uleb128 0x1
 4129 0095 12       		.uleb128 0x12
 4130 0096 06       		.uleb128 0x6
 4131 0097 40       		.uleb128 0x40
 4132 0098 18       		.uleb128 0x18
 4133 0099 9642     		.uleb128 0x2116
 4134 009b 19       		.uleb128 0x19
 4135 009c 01       		.uleb128 0x1
 4136 009d 13       		.uleb128 0x13
 4137 009e 00       		.byte	0
 4138 009f 00       		.byte	0
 4139 00a0 0C       		.uleb128 0xc
 4140 00a1 05       		.uleb128 0x5
 4141 00a2 00       		.byte	0
 4142 00a3 03       		.uleb128 0x3
 4143 00a4 08       		.uleb128 0x8
 4144 00a5 3A       		.uleb128 0x3a
 4145 00a6 0B       		.uleb128 0xb
 4146 00a7 3B       		.uleb128 0x3b
 4147 00a8 0B       		.uleb128 0xb
 4148 00a9 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 84


 4149 00aa 13       		.uleb128 0x13
 4150 00ab 02       		.uleb128 0x2
 4151 00ac 18       		.uleb128 0x18
 4152 00ad 00       		.byte	0
 4153 00ae 00       		.byte	0
 4154 00af 0D       		.uleb128 0xd
 4155 00b0 0B       		.uleb128 0xb
 4156 00b1 01       		.byte	0x1
 4157 00b2 11       		.uleb128 0x11
 4158 00b3 01       		.uleb128 0x1
 4159 00b4 12       		.uleb128 0x12
 4160 00b5 06       		.uleb128 0x6
 4161 00b6 00       		.byte	0
 4162 00b7 00       		.byte	0
 4163 00b8 0E       		.uleb128 0xe
 4164 00b9 34       		.uleb128 0x34
 4165 00ba 00       		.byte	0
 4166 00bb 03       		.uleb128 0x3
 4167 00bc 08       		.uleb128 0x8
 4168 00bd 3A       		.uleb128 0x3a
 4169 00be 0B       		.uleb128 0xb
 4170 00bf 3B       		.uleb128 0x3b
 4171 00c0 0B       		.uleb128 0xb
 4172 00c1 49       		.uleb128 0x49
 4173 00c2 13       		.uleb128 0x13
 4174 00c3 02       		.uleb128 0x2
 4175 00c4 18       		.uleb128 0x18
 4176 00c5 00       		.byte	0
 4177 00c6 00       		.byte	0
 4178 00c7 0F       		.uleb128 0xf
 4179 00c8 01       		.uleb128 0x1
 4180 00c9 01       		.byte	0x1
 4181 00ca 49       		.uleb128 0x49
 4182 00cb 13       		.uleb128 0x13
 4183 00cc 01       		.uleb128 0x1
 4184 00cd 13       		.uleb128 0x13
 4185 00ce 00       		.byte	0
 4186 00cf 00       		.byte	0
 4187 00d0 10       		.uleb128 0x10
 4188 00d1 21       		.uleb128 0x21
 4189 00d2 00       		.byte	0
 4190 00d3 49       		.uleb128 0x49
 4191 00d4 13       		.uleb128 0x13
 4192 00d5 2F       		.uleb128 0x2f
 4193 00d6 0B       		.uleb128 0xb
 4194 00d7 00       		.byte	0
 4195 00d8 00       		.byte	0
 4196 00d9 11       		.uleb128 0x11
 4197 00da 0F       		.uleb128 0xf
 4198 00db 00       		.byte	0
 4199 00dc 0B       		.uleb128 0xb
 4200 00dd 0B       		.uleb128 0xb
 4201 00de 49       		.uleb128 0x49
 4202 00df 13       		.uleb128 0x13
 4203 00e0 00       		.byte	0
 4204 00e1 00       		.byte	0
 4205 00e2 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 85


 4206 00e3 2E       		.uleb128 0x2e
 4207 00e4 01       		.byte	0x1
 4208 00e5 3F       		.uleb128 0x3f
 4209 00e6 19       		.uleb128 0x19
 4210 00e7 03       		.uleb128 0x3
 4211 00e8 0E       		.uleb128 0xe
 4212 00e9 3A       		.uleb128 0x3a
 4213 00ea 0B       		.uleb128 0xb
 4214 00eb 3B       		.uleb128 0x3b
 4215 00ec 0B       		.uleb128 0xb
 4216 00ed 27       		.uleb128 0x27
 4217 00ee 19       		.uleb128 0x19
 4218 00ef 11       		.uleb128 0x11
 4219 00f0 01       		.uleb128 0x1
 4220 00f1 12       		.uleb128 0x12
 4221 00f2 06       		.uleb128 0x6
 4222 00f3 40       		.uleb128 0x40
 4223 00f4 18       		.uleb128 0x18
 4224 00f5 9742     		.uleb128 0x2117
 4225 00f7 19       		.uleb128 0x19
 4226 00f8 01       		.uleb128 0x1
 4227 00f9 13       		.uleb128 0x13
 4228 00fa 00       		.byte	0
 4229 00fb 00       		.byte	0
 4230 00fc 13       		.uleb128 0x13
 4231 00fd 2E       		.uleb128 0x2e
 4232 00fe 01       		.byte	0x1
 4233 00ff 3F       		.uleb128 0x3f
 4234 0100 19       		.uleb128 0x19
 4235 0101 03       		.uleb128 0x3
 4236 0102 0E       		.uleb128 0xe
 4237 0103 3A       		.uleb128 0x3a
 4238 0104 0B       		.uleb128 0xb
 4239 0105 3B       		.uleb128 0x3b
 4240 0106 0B       		.uleb128 0xb
 4241 0107 27       		.uleb128 0x27
 4242 0108 19       		.uleb128 0x19
 4243 0109 49       		.uleb128 0x49
 4244 010a 13       		.uleb128 0x13
 4245 010b 11       		.uleb128 0x11
 4246 010c 01       		.uleb128 0x1
 4247 010d 12       		.uleb128 0x12
 4248 010e 06       		.uleb128 0x6
 4249 010f 40       		.uleb128 0x40
 4250 0110 18       		.uleb128 0x18
 4251 0111 9742     		.uleb128 0x2117
 4252 0113 19       		.uleb128 0x19
 4253 0114 01       		.uleb128 0x1
 4254 0115 13       		.uleb128 0x13
 4255 0116 00       		.byte	0
 4256 0117 00       		.byte	0
 4257 0118 14       		.uleb128 0x14
 4258 0119 05       		.uleb128 0x5
 4259 011a 00       		.byte	0
 4260 011b 03       		.uleb128 0x3
 4261 011c 0E       		.uleb128 0xe
 4262 011d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 86


 4263 011e 0B       		.uleb128 0xb
 4264 011f 3B       		.uleb128 0x3b
 4265 0120 0B       		.uleb128 0xb
 4266 0121 49       		.uleb128 0x49
 4267 0122 13       		.uleb128 0x13
 4268 0123 02       		.uleb128 0x2
 4269 0124 18       		.uleb128 0x18
 4270 0125 00       		.byte	0
 4271 0126 00       		.byte	0
 4272 0127 15       		.uleb128 0x15
 4273 0128 34       		.uleb128 0x34
 4274 0129 00       		.byte	0
 4275 012a 03       		.uleb128 0x3
 4276 012b 0E       		.uleb128 0xe
 4277 012c 3A       		.uleb128 0x3a
 4278 012d 0B       		.uleb128 0xb
 4279 012e 3B       		.uleb128 0x3b
 4280 012f 0B       		.uleb128 0xb
 4281 0130 49       		.uleb128 0x49
 4282 0131 13       		.uleb128 0x13
 4283 0132 02       		.uleb128 0x2
 4284 0133 18       		.uleb128 0x18
 4285 0134 00       		.byte	0
 4286 0135 00       		.byte	0
 4287 0136 16       		.uleb128 0x16
 4288 0137 0B       		.uleb128 0xb
 4289 0138 01       		.byte	0x1
 4290 0139 11       		.uleb128 0x11
 4291 013a 01       		.uleb128 0x1
 4292 013b 12       		.uleb128 0x12
 4293 013c 06       		.uleb128 0x6
 4294 013d 01       		.uleb128 0x1
 4295 013e 13       		.uleb128 0x13
 4296 013f 00       		.byte	0
 4297 0140 00       		.byte	0
 4298 0141 17       		.uleb128 0x17
 4299 0142 0B       		.uleb128 0xb
 4300 0143 01       		.byte	0x1
 4301 0144 55       		.uleb128 0x55
 4302 0145 17       		.uleb128 0x17
 4303 0146 01       		.uleb128 0x1
 4304 0147 13       		.uleb128 0x13
 4305 0148 00       		.byte	0
 4306 0149 00       		.byte	0
 4307 014a 18       		.uleb128 0x18
 4308 014b 21       		.uleb128 0x21
 4309 014c 00       		.byte	0
 4310 014d 49       		.uleb128 0x49
 4311 014e 13       		.uleb128 0x13
 4312 014f 2F       		.uleb128 0x2f
 4313 0150 05       		.uleb128 0x5
 4314 0151 00       		.byte	0
 4315 0152 00       		.byte	0
 4316 0153 19       		.uleb128 0x19
 4317 0154 2E       		.uleb128 0x2e
 4318 0155 01       		.byte	0x1
 4319 0156 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 87


 4320 0157 19       		.uleb128 0x19
 4321 0158 03       		.uleb128 0x3
 4322 0159 0E       		.uleb128 0xe
 4323 015a 3A       		.uleb128 0x3a
 4324 015b 0B       		.uleb128 0xb
 4325 015c 3B       		.uleb128 0x3b
 4326 015d 05       		.uleb128 0x5
 4327 015e 27       		.uleb128 0x27
 4328 015f 19       		.uleb128 0x19
 4329 0160 11       		.uleb128 0x11
 4330 0161 01       		.uleb128 0x1
 4331 0162 12       		.uleb128 0x12
 4332 0163 06       		.uleb128 0x6
 4333 0164 40       		.uleb128 0x40
 4334 0165 18       		.uleb128 0x18
 4335 0166 9642     		.uleb128 0x2116
 4336 0168 19       		.uleb128 0x19
 4337 0169 01       		.uleb128 0x1
 4338 016a 13       		.uleb128 0x13
 4339 016b 00       		.byte	0
 4340 016c 00       		.byte	0
 4341 016d 1A       		.uleb128 0x1a
 4342 016e 05       		.uleb128 0x5
 4343 016f 00       		.byte	0
 4344 0170 03       		.uleb128 0x3
 4345 0171 08       		.uleb128 0x8
 4346 0172 3A       		.uleb128 0x3a
 4347 0173 0B       		.uleb128 0xb
 4348 0174 3B       		.uleb128 0x3b
 4349 0175 05       		.uleb128 0x5
 4350 0176 49       		.uleb128 0x49
 4351 0177 13       		.uleb128 0x13
 4352 0178 02       		.uleb128 0x2
 4353 0179 18       		.uleb128 0x18
 4354 017a 00       		.byte	0
 4355 017b 00       		.byte	0
 4356 017c 1B       		.uleb128 0x1b
 4357 017d 05       		.uleb128 0x5
 4358 017e 00       		.byte	0
 4359 017f 03       		.uleb128 0x3
 4360 0180 0E       		.uleb128 0xe
 4361 0181 3A       		.uleb128 0x3a
 4362 0182 0B       		.uleb128 0xb
 4363 0183 3B       		.uleb128 0x3b
 4364 0184 05       		.uleb128 0x5
 4365 0185 49       		.uleb128 0x49
 4366 0186 13       		.uleb128 0x13
 4367 0187 02       		.uleb128 0x2
 4368 0188 18       		.uleb128 0x18
 4369 0189 00       		.byte	0
 4370 018a 00       		.byte	0
 4371 018b 1C       		.uleb128 0x1c
 4372 018c 34       		.uleb128 0x34
 4373 018d 00       		.byte	0
 4374 018e 03       		.uleb128 0x3
 4375 018f 0E       		.uleb128 0xe
 4376 0190 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 88


 4377 0191 0B       		.uleb128 0xb
 4378 0192 3B       		.uleb128 0x3b
 4379 0193 05       		.uleb128 0x5
 4380 0194 49       		.uleb128 0x49
 4381 0195 13       		.uleb128 0x13
 4382 0196 02       		.uleb128 0x2
 4383 0197 18       		.uleb128 0x18
 4384 0198 00       		.byte	0
 4385 0199 00       		.byte	0
 4386 019a 1D       		.uleb128 0x1d
 4387 019b 2E       		.uleb128 0x2e
 4388 019c 01       		.byte	0x1
 4389 019d 3F       		.uleb128 0x3f
 4390 019e 19       		.uleb128 0x19
 4391 019f 03       		.uleb128 0x3
 4392 01a0 0E       		.uleb128 0xe
 4393 01a1 3A       		.uleb128 0x3a
 4394 01a2 0B       		.uleb128 0xb
 4395 01a3 3B       		.uleb128 0x3b
 4396 01a4 05       		.uleb128 0x5
 4397 01a5 27       		.uleb128 0x27
 4398 01a6 19       		.uleb128 0x19
 4399 01a7 11       		.uleb128 0x11
 4400 01a8 01       		.uleb128 0x1
 4401 01a9 12       		.uleb128 0x12
 4402 01aa 06       		.uleb128 0x6
 4403 01ab 40       		.uleb128 0x40
 4404 01ac 18       		.uleb128 0x18
 4405 01ad 9742     		.uleb128 0x2117
 4406 01af 19       		.uleb128 0x19
 4407 01b0 01       		.uleb128 0x1
 4408 01b1 13       		.uleb128 0x13
 4409 01b2 00       		.byte	0
 4410 01b3 00       		.byte	0
 4411 01b4 1E       		.uleb128 0x1e
 4412 01b5 34       		.uleb128 0x34
 4413 01b6 00       		.byte	0
 4414 01b7 03       		.uleb128 0x3
 4415 01b8 08       		.uleb128 0x8
 4416 01b9 3A       		.uleb128 0x3a
 4417 01ba 0B       		.uleb128 0xb
 4418 01bb 3B       		.uleb128 0x3b
 4419 01bc 05       		.uleb128 0x5
 4420 01bd 49       		.uleb128 0x49
 4421 01be 13       		.uleb128 0x13
 4422 01bf 02       		.uleb128 0x2
 4423 01c0 18       		.uleb128 0x18
 4424 01c1 00       		.byte	0
 4425 01c2 00       		.byte	0
 4426 01c3 1F       		.uleb128 0x1f
 4427 01c4 2E       		.uleb128 0x2e
 4428 01c5 01       		.byte	0x1
 4429 01c6 3F       		.uleb128 0x3f
 4430 01c7 19       		.uleb128 0x19
 4431 01c8 03       		.uleb128 0x3
 4432 01c9 0E       		.uleb128 0xe
 4433 01ca 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 89


 4434 01cb 0B       		.uleb128 0xb
 4435 01cc 3B       		.uleb128 0x3b
 4436 01cd 05       		.uleb128 0x5
 4437 01ce 27       		.uleb128 0x27
 4438 01cf 19       		.uleb128 0x19
 4439 01d0 49       		.uleb128 0x49
 4440 01d1 13       		.uleb128 0x13
 4441 01d2 11       		.uleb128 0x11
 4442 01d3 01       		.uleb128 0x1
 4443 01d4 12       		.uleb128 0x12
 4444 01d5 06       		.uleb128 0x6
 4445 01d6 40       		.uleb128 0x40
 4446 01d7 18       		.uleb128 0x18
 4447 01d8 9742     		.uleb128 0x2117
 4448 01da 19       		.uleb128 0x19
 4449 01db 01       		.uleb128 0x1
 4450 01dc 13       		.uleb128 0x13
 4451 01dd 00       		.byte	0
 4452 01de 00       		.byte	0
 4453 01df 20       		.uleb128 0x20
 4454 01e0 34       		.uleb128 0x34
 4455 01e1 00       		.byte	0
 4456 01e2 03       		.uleb128 0x3
 4457 01e3 08       		.uleb128 0x8
 4458 01e4 3A       		.uleb128 0x3a
 4459 01e5 0B       		.uleb128 0xb
 4460 01e6 3B       		.uleb128 0x3b
 4461 01e7 0B       		.uleb128 0xb
 4462 01e8 49       		.uleb128 0x49
 4463 01e9 13       		.uleb128 0x13
 4464 01ea 3F       		.uleb128 0x3f
 4465 01eb 19       		.uleb128 0x19
 4466 01ec 02       		.uleb128 0x2
 4467 01ed 18       		.uleb128 0x18
 4468 01ee 00       		.byte	0
 4469 01ef 00       		.byte	0
 4470 01f0 21       		.uleb128 0x21
 4471 01f1 34       		.uleb128 0x34
 4472 01f2 00       		.byte	0
 4473 01f3 03       		.uleb128 0x3
 4474 01f4 0E       		.uleb128 0xe
 4475 01f5 3A       		.uleb128 0x3a
 4476 01f6 0B       		.uleb128 0xb
 4477 01f7 3B       		.uleb128 0x3b
 4478 01f8 0B       		.uleb128 0xb
 4479 01f9 49       		.uleb128 0x49
 4480 01fa 13       		.uleb128 0x13
 4481 01fb 3F       		.uleb128 0x3f
 4482 01fc 19       		.uleb128 0x19
 4483 01fd 02       		.uleb128 0x2
 4484 01fe 18       		.uleb128 0x18
 4485 01ff 00       		.byte	0
 4486 0200 00       		.byte	0
 4487 0201 22       		.uleb128 0x22
 4488 0202 34       		.uleb128 0x34
 4489 0203 00       		.byte	0
 4490 0204 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 90


 4491 0205 0E       		.uleb128 0xe
 4492 0206 3A       		.uleb128 0x3a
 4493 0207 0B       		.uleb128 0xb
 4494 0208 3B       		.uleb128 0x3b
 4495 0209 05       		.uleb128 0x5
 4496 020a 49       		.uleb128 0x49
 4497 020b 13       		.uleb128 0x13
 4498 020c 3F       		.uleb128 0x3f
 4499 020d 19       		.uleb128 0x19
 4500 020e 02       		.uleb128 0x2
 4501 020f 18       		.uleb128 0x18
 4502 0210 00       		.byte	0
 4503 0211 00       		.byte	0
 4504 0212 00       		.byte	0
 4505              		.section	.debug_aranges,"",%progbits
 4506 0000 64000000 		.4byte	0x64
 4507 0004 0200     		.2byte	0x2
 4508 0006 00000000 		.4byte	.Ldebug_info0
 4509 000a 04       		.byte	0x4
 4510 000b 00       		.byte	0
 4511 000c 0000     		.2byte	0
 4512 000e 0000     		.2byte	0
 4513 0010 00000000 		.4byte	.LFB1
 4514 0014 58000000 		.4byte	.LFE1-.LFB1
 4515 0018 00000000 		.4byte	.LFB2
 4516 001c 60000000 		.4byte	.LFE2-.LFB2
 4517 0020 00000000 		.4byte	.LFB3
 4518 0024 56000000 		.4byte	.LFE3-.LFB3
 4519 0028 00000000 		.4byte	.LFB4
 4520 002c 4C090000 		.4byte	.LFE4-.LFB4
 4521 0030 00000000 		.4byte	.LFB5
 4522 0034 C8030000 		.4byte	.LFE5-.LFB5
 4523 0038 00000000 		.4byte	.LFB6
 4524 003c 8C000000 		.4byte	.LFE6-.LFB6
 4525 0040 00000000 		.4byte	.LFB7
 4526 0044 0C010000 		.4byte	.LFE7-.LFB7
 4527 0048 00000000 		.4byte	.LFB8
 4528 004c 24010000 		.4byte	.LFE8-.LFB8
 4529 0050 00000000 		.4byte	.LFB9
 4530 0054 9C000000 		.4byte	.LFE9-.LFB9
 4531 0058 00000000 		.4byte	.LFB10
 4532 005c 58000000 		.4byte	.LFE10-.LFB10
 4533 0060 00000000 		.4byte	0
 4534 0064 00000000 		.4byte	0
 4535              		.section	.debug_ranges,"",%progbits
 4536              	.Ldebug_ranges0:
 4537 0000 F6010000 		.4byte	.LBB10
 4538 0004 E2050000 		.4byte	.LBE10
 4539 0008 F4050000 		.4byte	.LBB15
 4540 000c F6050000 		.4byte	.LBE15
 4541 0010 00000000 		.4byte	0
 4542 0014 00000000 		.4byte	0
 4543 0018 00000000 		.4byte	.LFB1
 4544 001c 58000000 		.4byte	.LFE1
 4545 0020 00000000 		.4byte	.LFB2
 4546 0024 60000000 		.4byte	.LFE2
 4547 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 91


 4548 002c 56000000 		.4byte	.LFE3
 4549 0030 00000000 		.4byte	.LFB4
 4550 0034 4C090000 		.4byte	.LFE4
 4551 0038 00000000 		.4byte	.LFB5
 4552 003c C8030000 		.4byte	.LFE5
 4553 0040 00000000 		.4byte	.LFB6
 4554 0044 8C000000 		.4byte	.LFE6
 4555 0048 00000000 		.4byte	.LFB7
 4556 004c 0C010000 		.4byte	.LFE7
 4557 0050 00000000 		.4byte	.LFB8
 4558 0054 24010000 		.4byte	.LFE8
 4559 0058 00000000 		.4byte	.LFB9
 4560 005c 9C000000 		.4byte	.LFE9
 4561 0060 00000000 		.4byte	.LFB10
 4562 0064 58000000 		.4byte	.LFE10
 4563 0068 00000000 		.4byte	0
 4564 006c 00000000 		.4byte	0
 4565              		.section	.debug_line,"",%progbits
 4566              	.Ldebug_line0:
 4567 0000 2E040000 		.section	.debug_str,"MS",%progbits,1
 4567      02002101 
 4567      00000201 
 4567      FB0E0D00 
 4567      01010101 
 4568              	.LASF22:
 4569 0000 4F726965 		.ascii	"OrientationState\000"
 4569      6E746174 
 4569      696F6E53 
 4569      74617465 
 4569      00
 4570              	.LASF36:
 4571 0011 64696A6B 		.ascii	"dijkstra\000"
 4571      73747261 
 4571      00
 4572              	.LASF20:
 4573 001a 536B6970 		.ascii	"Skip\000"
 4573      00
 4574              	.LASF33:
 4575 001f 726F7773 		.ascii	"rows\000"
 4575      00
 4576              	.LASF65:
 4577 0024 69735661 		.ascii	"isValidMove\000"
 4577      6C69644D 
 4577      6F766500 
 4578              	.LASF0:
 4579 0030 7369676E 		.ascii	"signed char\000"
 4579      65642063 
 4579      68617200 
 4580              	.LASF12:
 4581 003c 5F5F7569 		.ascii	"__uint8_t\000"
 4581      6E74385F 
 4581      7400
 4582              	.LASF26:
 4583 0046 64697265 		.ascii	"direction\000"
 4583      6374696F 
 4583      6E00
 4584              	.LASF81:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 92


 4585 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4585      43313120 
 4585      352E342E 
 4585      31203230 
 4585      31363036 
 4586 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4586      20726576 
 4586      6973696F 
 4586      6E203233 
 4586      37373135 
 4587 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4587      66756E63 
 4587      74696F6E 
 4587      2D736563 
 4587      74696F6E 
 4588              	.LASF7:
 4589 00de 6C6F6E67 		.ascii	"long long unsigned int\000"
 4589      206C6F6E 
 4589      6720756E 
 4589      7369676E 
 4589      65642069 
 4590              	.LASF45:
 4591 00f5 73746570 		.ascii	"stepNum\000"
 4591      4E756D00 
 4592              	.LASF44:
 4593 00fd 64697374 		.ascii	"distances\000"
 4593      616E6365 
 4593      7300
 4594              	.LASF17:
 4595 0107 75547572 		.ascii	"uTurn\000"
 4595      6E00
 4596              	.LASF37:
 4597 010d 73746172 		.ascii	"startlocation\000"
 4597      746C6F63 
 4597      6174696F 
 4597      6E00
 4598              	.LASF31:
 4599 011b 7072696E 		.ascii	"printMap\000"
 4599      744D6170 
 4599      00
 4600              	.LASF6:
 4601 0124 6C6F6E67 		.ascii	"long long int\000"
 4601      206C6F6E 
 4601      6720696E 
 4601      7400
 4602              	.LASF83:
 4603 0132 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4603      6F63756D 
 4603      656E7473 
 4603      5C476974 
 4603      4875625C 
 4604 0161 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4604      635F636F 
 4604      64655F62 
 4604      6173655C 
 4604      43533330 
 4605              	.LASF53:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 93


 4606 0183 6E657743 		.ascii	"newCol\000"
 4606      6F6C00
 4607              	.LASF49:
 4608 018a 63757272 		.ascii	"currentCol\000"
 4608      656E7443 
 4608      6F6C00
 4609              	.LASF29:
 4610 0195 496E7374 		.ascii	"Instructions\000"
 4610      72756374 
 4610      696F6E73 
 4610      00
 4611              	.LASF4:
 4612 01a2 6C6F6E67 		.ascii	"long int\000"
 4612      20696E74 
 4612      00
 4613              	.LASF38:
 4614 01ab 74617267 		.ascii	"targetlocation\000"
 4614      65746C6F 
 4614      63617469 
 4614      6F6E00
 4615              	.LASF18:
 4616 01ba 466F7277 		.ascii	"ForwardUntilTarget\000"
 4616      61726455 
 4616      6E74696C 
 4616      54617267 
 4616      657400
 4617              	.LASF30:
 4618 01cd 4C6F6361 		.ascii	"Location\000"
 4618      74696F6E 
 4618      00
 4619              	.LASF70:
 4620 01d6 74617267 		.ascii	"targetRow\000"
 4620      6574526F 
 4620      7700
 4621              	.LASF80:
 4622 01e0 696E7374 		.ascii	"instructionsList\000"
 4622      72756374 
 4622      696F6E73 
 4622      4C697374 
 4622      00
 4623              	.LASF66:
 4624 01f1 63686563 		.ascii	"checkPathDirection\000"
 4624      6B506174 
 4624      68446972 
 4624      65637469 
 4624      6F6E00
 4625              	.LASF78:
 4626 0204 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 4626      5F6F665F 
 4626      6F707469 
 4626      6D616C5F 
 4626      636F6F72 
 4627              	.LASF8:
 4628 0220 756E7369 		.ascii	"unsigned int\000"
 4628      676E6564 
 4628      20696E74 
 4628      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 94


 4629              	.LASF46:
 4630 022d 73686F72 		.ascii	"shortestDist\000"
 4630      74657374 
 4630      44697374 
 4630      00
 4631              	.LASF5:
 4632 023a 6C6F6E67 		.ascii	"long unsigned int\000"
 4632      20756E73 
 4632      69676E65 
 4632      6420696E 
 4632      7400
 4633              	.LASF77:
 4634 024c 70617468 		.ascii	"path_of_coordinates\000"
 4634      5F6F665F 
 4634      636F6F72 
 4634      64696E61 
 4634      74657300 
 4635              	.LASF60:
 4636 0260 74617267 		.ascii	"targetOrientation\000"
 4636      65744F72 
 4636      69656E74 
 4636      6174696F 
 4636      6E00
 4637              	.LASF3:
 4638 0272 73686F72 		.ascii	"short unsigned int\000"
 4638      7420756E 
 4638      7369676E 
 4638      65642069 
 4638      6E7400
 4639              	.LASF19:
 4640 0285 53746F70 		.ascii	"StopAtTarget\000"
 4640      41745461 
 4640      72676574 
 4640      00
 4641              	.LASF52:
 4642 0292 6E657752 		.ascii	"newRow\000"
 4642      6F7700
 4643              	.LASF43:
 4644 0299 70715369 		.ascii	"pqSize\000"
 4644      7A6500
 4645              	.LASF55:
 4646 02a0 67657450 		.ascii	"getPathInstructions\000"
 4646      61746849 
 4646      6E737472 
 4646      75637469 
 4646      6F6E7300 
 4647              	.LASF24:
 4648 02b4 4C656674 		.ascii	"Left\000"
 4648      00
 4649              	.LASF10:
 4650 02b9 73697A65 		.ascii	"sizetype\000"
 4650      74797065 
 4650      00
 4651              	.LASF9:
 4652 02c2 6C6F6E67 		.ascii	"long double\000"
 4652      20646F75 
 4652      626C6500 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 95


 4653              	.LASF48:
 4654 02ce 63757272 		.ascii	"currentRow\000"
 4654      656E7452 
 4654      6F7700
 4655              	.LASF63:
 4656 02d9 70726F63 		.ascii	"processInstructionList\000"
 4656      65737349 
 4656      6E737472 
 4656      75637469 
 4656      6F6E4C69 
 4657              	.LASF15:
 4658 02f0 77616974 		.ascii	"waitForLeftTurn\000"
 4658      466F724C 
 4658      65667454 
 4658      75726E00 
 4659              	.LASF51:
 4660 0300 63757272 		.ascii	"current\000"
 4660      656E7400 
 4661              	.LASF50:
 4662 0308 70617468 		.ascii	"pathIndex\000"
 4662      496E6465 
 4662      7800
 4663              	.LASF32:
 4664 0312 636C6561 		.ascii	"clearMap\000"
 4664      724D6170 
 4664      00
 4665              	.LASF61:
 4666 031b 6E657744 		.ascii	"newDirection\000"
 4666      69726563 
 4666      74696F6E 
 4666      00
 4667              	.LASF35:
 4668 0328 5F426F6F 		.ascii	"_Bool\000"
 4668      6C00
 4669              	.LASF1:
 4670 032e 756E7369 		.ascii	"unsigned char\000"
 4670      676E6564 
 4670      20636861 
 4670      7200
 4671              	.LASF21:
 4672 033c 496E7374 		.ascii	"InstructionDirection\000"
 4672      72756374 
 4672      696F6E44 
 4672      69726563 
 4672      74696F6E 
 4673              	.LASF69:
 4674 0351 67657454 		.ascii	"getTargetOrientation\000"
 4674      61726765 
 4674      744F7269 
 4674      656E7461 
 4674      74696F6E 
 4675              	.LASF72:
 4676 0366 66696E64 		.ascii	"findPath\000"
 4676      50617468 
 4676      00
 4677              	.LASF2:
 4678 036f 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 96


 4678      7420696E 
 4678      7400
 4679              	.LASF58:
 4680 0379 74617267 		.ascii	"targetLocation\000"
 4680      65744C6F 
 4680      63617469 
 4680      6F6E00
 4681              	.LASF14:
 4682 0388 476F466F 		.ascii	"GoForward\000"
 4682      72776172 
 4682      6400
 4683              	.LASF25:
 4684 0392 52696768 		.ascii	"Right\000"
 4684      7400
 4685              	.LASF56:
 4686 0398 6E756D53 		.ascii	"numSteps\000"
 4686      74657073 
 4686      00
 4687              	.LASF59:
 4688 03a1 6C697374 		.ascii	"listIndex\000"
 4688      496E6465 
 4688      7800
 4689              	.LASF47:
 4690 03ab 72657453 		.ascii	"retSteps\000"
 4690      74657073 
 4690      00
 4691              	.LASF41:
 4692 03b4 6C6F6361 		.ascii	"location\000"
 4692      74696F6E 
 4692      00
 4693              	.LASF39:
 4694 03bd 76697369 		.ascii	"visitedMap\000"
 4694      7465644D 
 4694      617000
 4695              	.LASF11:
 4696 03c8 63686172 		.ascii	"char\000"
 4696      00
 4697              	.LASF76:
 4698 03cd 73746172 		.ascii	"start_pos\000"
 4698      745F706F 
 4698      7300
 4699              	.LASF74:
 4700 03d7 70726576 		.ascii	"previousRobotOrientation\000"
 4700      696F7573 
 4700      526F626F 
 4700      744F7269 
 4700      656E7461 
 4701              	.LASF42:
 4702 03f0 64697374 		.ascii	"distance\000"
 4702      616E6365 
 4702      00
 4703              	.LASF64:
 4704 03f9 696E6465 		.ascii	"index\000"
 4704      7800
 4705              	.LASF73:
 4706 03ff 666F6F64 		.ascii	"food_list\000"
 4706      5F6C6973 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 97


 4706      7400
 4707              	.LASF23:
 4708 0409 446F776E 		.ascii	"Down\000"
 4708      00
 4709              	.LASF75:
 4710 040e 63757272 		.ascii	"currentRobotOrientation\000"
 4710      656E7452 
 4710      6F626F74 
 4710      4F726965 
 4710      6E746174 
 4711              	.LASF54:
 4712 0426 6E657744 		.ascii	"newDistance\000"
 4712      69737461 
 4712      6E636500 
 4713              	.LASF82:
 4714 0432 70617468 		.ascii	"pathfinding.c\000"
 4714      66696E64 
 4714      696E672E 
 4714      6300
 4715              	.LASF68:
 4716 0440 726F626F 		.ascii	"robotOrientation\000"
 4716      744F7269 
 4716      656E7461 
 4716      74696F6E 
 4716      00
 4717              	.LASF16:
 4718 0451 77616974 		.ascii	"waitForRightTurn\000"
 4718      466F7252 
 4718      69676874 
 4718      5475726E 
 4718      00
 4719              	.LASF40:
 4720 0462 5072696F 		.ascii	"PriorityQueue\000"
 4720      72697479 
 4720      51756575 
 4720      6500
 4721              	.LASF57:
 4722 0470 73746172 		.ascii	"startLocation\000"
 4722      744C6F63 
 4722      6174696F 
 4722      6E00
 4723              	.LASF13:
 4724 047e 75696E74 		.ascii	"uint8_t\000"
 4724      385F7400 
 4725              	.LASF79:
 4726 0486 6D6F7665 		.ascii	"moves\000"
 4726      7300
 4727              	.LASF71:
 4728 048c 74617267 		.ascii	"targetCol\000"
 4728      6574436F 
 4728      6C00
 4729              	.LASF67:
 4730 0496 63686563 		.ascii	"checkIgnoreTurn\000"
 4730      6B49676E 
 4730      6F726554 
 4730      75726E00 
 4731              	.LASF34:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccHhUv9q.s 			page 98


 4732 04a6 636F6C73 		.ascii	"cols\000"
 4732      00
 4733              	.LASF62:
 4734 04ab 6E657874 		.ascii	"nextStep\000"
 4734      53746570 
 4734      00
 4735              	.LASF27:
 4736 04b4 69676E6F 		.ascii	"ignoreL\000"
 4736      72654C00 
 4737              	.LASF28:
 4738 04bc 69676E6F 		.ascii	"ignoreR\000"
 4738      72655200 
 4739              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
