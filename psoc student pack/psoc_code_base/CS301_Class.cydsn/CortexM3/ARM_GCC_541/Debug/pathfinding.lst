ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 01       		.byte	1
  26              		.bss
  27              		.align	2
  28              	instructionsList:
  29 0000 00000000 		.space	5700
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.align	2
  31              	finalInstructionList:
  32 1644 00000000 		.space	5700
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.align	2
  34              	numSteps:
  35 2c88 00000000 		.space	4
  36              		.global	map
  37              		.data
  38 0001 000000   		.align	2
  39              		.type	map, %object
  40              		.size	map, 1140
  41              	map:
  42 0004 01000000 		.word	1
  43 0008 01000000 		.word	1
  44 000c 01000000 		.word	1
  45 0010 01000000 		.word	1
  46 0014 01000000 		.word	1
  47 0018 01000000 		.word	1
  48 001c 01000000 		.word	1
  49 0020 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 2


  50 0024 01000000 		.word	1
  51 0028 01000000 		.word	1
  52 002c 01000000 		.word	1
  53 0030 01000000 		.word	1
  54 0034 01000000 		.word	1
  55 0038 01000000 		.word	1
  56 003c 01000000 		.word	1
  57 0040 01000000 		.word	1
  58 0044 01000000 		.word	1
  59 0048 01000000 		.word	1
  60 004c 01000000 		.word	1
  61 0050 01000000 		.word	1
  62 0054 00000000 		.word	0
  63 0058 01000000 		.word	1
  64 005c 00000000 		.word	0
  65 0060 00000000 		.word	0
  66 0064 00000000 		.word	0
  67 0068 00000000 		.word	0
  68 006c 00000000 		.word	0
  69 0070 00000000 		.word	0
  70 0074 00000000 		.word	0
  71 0078 00000000 		.word	0
  72 007c 00000000 		.word	0
  73 0080 00000000 		.word	0
  74 0084 00000000 		.word	0
  75 0088 00000000 		.word	0
  76 008c 00000000 		.word	0
  77 0090 00000000 		.word	0
  78 0094 00000000 		.word	0
  79 0098 01000000 		.word	1
  80 009c 01000000 		.word	1
  81 00a0 00000000 		.word	0
  82 00a4 01000000 		.word	1
  83 00a8 00000000 		.word	0
  84 00ac 01000000 		.word	1
  85 00b0 01000000 		.word	1
  86 00b4 01000000 		.word	1
  87 00b8 01000000 		.word	1
  88 00bc 01000000 		.word	1
  89 00c0 00000000 		.word	0
  90 00c4 01000000 		.word	1
  91 00c8 01000000 		.word	1
  92 00cc 01000000 		.word	1
  93 00d0 00000000 		.word	0
  94 00d4 01000000 		.word	1
  95 00d8 01000000 		.word	1
  96 00dc 01000000 		.word	1
  97 00e0 00000000 		.word	0
  98 00e4 01000000 		.word	1
  99 00e8 01000000 		.word	1
 100 00ec 00000000 		.word	0
 101 00f0 00000000 		.word	0
 102 00f4 00000000 		.word	0
 103 00f8 01000000 		.word	1
 104 00fc 00000000 		.word	0
 105 0100 00000000 		.word	0
 106 0104 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 3


 107 0108 01000000 		.word	1
 108 010c 00000000 		.word	0
 109 0110 00000000 		.word	0
 110 0114 00000000 		.word	0
 111 0118 00000000 		.word	0
 112 011c 00000000 		.word	0
 113 0120 00000000 		.word	0
 114 0124 00000000 		.word	0
 115 0128 01000000 		.word	1
 116 012c 00000000 		.word	0
 117 0130 01000000 		.word	1
 118 0134 01000000 		.word	1
 119 0138 01000000 		.word	1
 120 013c 01000000 		.word	1
 121 0140 00000000 		.word	0
 122 0144 01000000 		.word	1
 123 0148 00000000 		.word	0
 124 014c 01000000 		.word	1
 125 0150 00000000 		.word	0
 126 0154 01000000 		.word	1
 127 0158 01000000 		.word	1
 128 015c 01000000 		.word	1
 129 0160 00000000 		.word	0
 130 0164 01000000 		.word	1
 131 0168 00000000 		.word	0
 132 016c 01000000 		.word	1
 133 0170 01000000 		.word	1
 134 0174 01000000 		.word	1
 135 0178 00000000 		.word	0
 136 017c 01000000 		.word	1
 137 0180 01000000 		.word	1
 138 0184 00000000 		.word	0
 139 0188 00000000 		.word	0
 140 018c 00000000 		.word	0
 141 0190 01000000 		.word	1
 142 0194 00000000 		.word	0
 143 0198 01000000 		.word	1
 144 019c 00000000 		.word	0
 145 01a0 00000000 		.word	0
 146 01a4 00000000 		.word	0
 147 01a8 01000000 		.word	1
 148 01ac 00000000 		.word	0
 149 01b0 01000000 		.word	1
 150 01b4 00000000 		.word	0
 151 01b8 00000000 		.word	0
 152 01bc 00000000 		.word	0
 153 01c0 00000000 		.word	0
 154 01c4 00000000 		.word	0
 155 01c8 01000000 		.word	1
 156 01cc 01000000 		.word	1
 157 01d0 00000000 		.word	0
 158 01d4 01000000 		.word	1
 159 01d8 01000000 		.word	1
 160 01dc 01000000 		.word	1
 161 01e0 00000000 		.word	0
 162 01e4 01000000 		.word	1
 163 01e8 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 4


 164 01ec 01000000 		.word	1
 165 01f0 00000000 		.word	0
 166 01f4 01000000 		.word	1
 167 01f8 00000000 		.word	0
 168 01fc 01000000 		.word	1
 169 0200 00000000 		.word	0
 170 0204 01000000 		.word	1
 171 0208 01000000 		.word	1
 172 020c 01000000 		.word	1
 173 0210 00000000 		.word	0
 174 0214 01000000 		.word	1
 175 0218 01000000 		.word	1
 176 021c 00000000 		.word	0
 177 0220 01000000 		.word	1
 178 0224 00000000 		.word	0
 179 0228 01000000 		.word	1
 180 022c 00000000 		.word	0
 181 0230 00000000 		.word	0
 182 0234 00000000 		.word	0
 183 0238 01000000 		.word	1
 184 023c 00000000 		.word	0
 185 0240 01000000 		.word	1
 186 0244 00000000 		.word	0
 187 0248 01000000 		.word	1
 188 024c 00000000 		.word	0
 189 0250 01000000 		.word	1
 190 0254 00000000 		.word	0
 191 0258 00000000 		.word	0
 192 025c 00000000 		.word	0
 193 0260 01000000 		.word	1
 194 0264 01000000 		.word	1
 195 0268 00000000 		.word	0
 196 026c 01000000 		.word	1
 197 0270 00000000 		.word	0
 198 0274 01000000 		.word	1
 199 0278 00000000 		.word	0
 200 027c 01000000 		.word	1
 201 0280 01000000 		.word	1
 202 0284 01000000 		.word	1
 203 0288 00000000 		.word	0
 204 028c 01000000 		.word	1
 205 0290 00000000 		.word	0
 206 0294 01000000 		.word	1
 207 0298 00000000 		.word	0
 208 029c 01000000 		.word	1
 209 02a0 00000000 		.word	0
 210 02a4 01000000 		.word	1
 211 02a8 01000000 		.word	1
 212 02ac 01000000 		.word	1
 213 02b0 01000000 		.word	1
 214 02b4 00000000 		.word	0
 215 02b8 00000000 		.word	0
 216 02bc 00000000 		.word	0
 217 02c0 01000000 		.word	1
 218 02c4 00000000 		.word	0
 219 02c8 01000000 		.word	1
 220 02cc 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 5


 221 02d0 00000000 		.word	0
 222 02d4 00000000 		.word	0
 223 02d8 01000000 		.word	1
 224 02dc 00000000 		.word	0
 225 02e0 00000000 		.word	0
 226 02e4 00000000 		.word	0
 227 02e8 01000000 		.word	1
 228 02ec 00000000 		.word	0
 229 02f0 00000000 		.word	0
 230 02f4 00000000 		.word	0
 231 02f8 01000000 		.word	1
 232 02fc 01000000 		.word	1
 233 0300 01000000 		.word	1
 234 0304 01000000 		.word	1
 235 0308 00000000 		.word	0
 236 030c 01000000 		.word	1
 237 0310 00000000 		.word	0
 238 0314 01000000 		.word	1
 239 0318 01000000 		.word	1
 240 031c 01000000 		.word	1
 241 0320 01000000 		.word	1
 242 0324 01000000 		.word	1
 243 0328 01000000 		.word	1
 244 032c 01000000 		.word	1
 245 0330 01000000 		.word	1
 246 0334 01000000 		.word	1
 247 0338 01000000 		.word	1
 248 033c 01000000 		.word	1
 249 0340 00000000 		.word	0
 250 0344 01000000 		.word	1
 251 0348 01000000 		.word	1
 252 034c 00000000 		.word	0
 253 0350 00000000 		.word	0
 254 0354 00000000 		.word	0
 255 0358 00000000 		.word	0
 256 035c 00000000 		.word	0
 257 0360 00000000 		.word	0
 258 0364 00000000 		.word	0
 259 0368 00000000 		.word	0
 260 036c 00000000 		.word	0
 261 0370 00000000 		.word	0
 262 0374 00000000 		.word	0
 263 0378 00000000 		.word	0
 264 037c 00000000 		.word	0
 265 0380 00000000 		.word	0
 266 0384 00000000 		.word	0
 267 0388 00000000 		.word	0
 268 038c 00000000 		.word	0
 269 0390 01000000 		.word	1
 270 0394 01000000 		.word	1
 271 0398 00000000 		.word	0
 272 039c 01000000 		.word	1
 273 03a0 01000000 		.word	1
 274 03a4 01000000 		.word	1
 275 03a8 01000000 		.word	1
 276 03ac 01000000 		.word	1
 277 03b0 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 6


 278 03b4 01000000 		.word	1
 279 03b8 01000000 		.word	1
 280 03bc 01000000 		.word	1
 281 03c0 01000000 		.word	1
 282 03c4 01000000 		.word	1
 283 03c8 00000000 		.word	0
 284 03cc 01000000 		.word	1
 285 03d0 01000000 		.word	1
 286 03d4 01000000 		.word	1
 287 03d8 01000000 		.word	1
 288 03dc 01000000 		.word	1
 289 03e0 01000000 		.word	1
 290 03e4 00000000 		.word	0
 291 03e8 00000000 		.word	0
 292 03ec 00000000 		.word	0
 293 03f0 00000000 		.word	0
 294 03f4 00000000 		.word	0
 295 03f8 00000000 		.word	0
 296 03fc 00000000 		.word	0
 297 0400 01000000 		.word	1
 298 0404 00000000 		.word	0
 299 0408 00000000 		.word	0
 300 040c 00000000 		.word	0
 301 0410 00000000 		.word	0
 302 0414 00000000 		.word	0
 303 0418 00000000 		.word	0
 304 041c 00000000 		.word	0
 305 0420 00000000 		.word	0
 306 0424 00000000 		.word	0
 307 0428 01000000 		.word	1
 308 042c 01000000 		.word	1
 309 0430 01000000 		.word	1
 310 0434 01000000 		.word	1
 311 0438 01000000 		.word	1
 312 043c 01000000 		.word	1
 313 0440 01000000 		.word	1
 314 0444 01000000 		.word	1
 315 0448 01000000 		.word	1
 316 044c 01000000 		.word	1
 317 0450 01000000 		.word	1
 318 0454 01000000 		.word	1
 319 0458 01000000 		.word	1
 320 045c 01000000 		.word	1
 321 0460 01000000 		.word	1
 322 0464 01000000 		.word	1
 323 0468 01000000 		.word	1
 324 046c 01000000 		.word	1
 325 0470 01000000 		.word	1
 326 0474 01000000 		.word	1
 327              		.global	start_pos
 328              		.align	2
 329              		.type	start_pos, %object
 330              		.size	start_pos, 8
 331              	start_pos:
 332 0478 01000000 		.word	1
 333 047c 01000000 		.word	1
 334              		.global	food_list
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 7


 335              		.align	2
 336              		.type	food_list, %object
 337              		.size	food_list, 40
 338              	food_list:
 339 0480 09000000 		.word	9
 340 0484 01000000 		.word	1
 341 0488 05000000 		.word	5
 342 048c 05000000 		.word	5
 343 0490 01000000 		.word	1
 344 0494 07000000 		.word	7
 345 0498 05000000 		.word	5
 346 049c 0D000000 		.word	13
 347 04a0 09000000 		.word	9
 348 04a4 09000000 		.word	9
 349              		.section	.rodata
 350              		.align	2
 351              	.LC0:
 352 0000 256400   		.ascii	"%d\000"
 353              		.section	.text.printMap,"ax",%progbits
 354              		.align	2
 355              		.global	printMap
 356              		.thumb
 357              		.thumb_func
 358              		.type	printMap, %function
 359              	printMap:
 360              	.LFB1:
 361              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Down; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static Instruction finalInstructionList[285];
  26:pathfinding.c **** static int numSteps = 0;
  27:pathfinding.c **** 
  28:pathfinding.c **** uint8_t instructionsListLength();
  29:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  30:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 8


  31:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  32:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  33:pathfinding.c **** 
  34:pathfinding.c **** 
  35:pathfinding.c **** int map[15][19] = {
  36:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  37:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  38:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
  39:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  40:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  41:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  42:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  44:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  45:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  46:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  47:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  48:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  49:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  50:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  51:pathfinding.c **** };
  52:pathfinding.c **** 
  53:pathfinding.c **** /*
  54:pathfinding.c **** int map[15][19] = {
  55:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  56:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  57:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  58:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  60:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  61:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  62:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  63:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  64:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  65:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  66:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  67:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  68:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  69:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  70:pathfinding.c **** };
  71:pathfinding.c **** */
  72:pathfinding.c **** 
  73:pathfinding.c **** 
  74:pathfinding.c **** int start_pos[2] = {1,1};
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {9,1},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {1,7},
  79:pathfinding.c **** {5,13},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** /*
  83:pathfinding.c **** int food_list[5][2]= {
  84:pathfinding.c **** {1,1},
  85:pathfinding.c **** {5,5},
  86:pathfinding.c **** {7,1},
  87:pathfinding.c **** {13,5},
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 9


  88:pathfinding.c **** {9,9}
  89:pathfinding.c **** };
  90:pathfinding.c **** */
  91:pathfinding.c **** // MAP INITIALISATION CODE
  92:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 362              		.loc 1 92 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 16
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 84B0     		sub	sp, sp, #16
 371              		.cfi_def_cfa_offset 24
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 7860     		str	r0, [r7, #4]
 375              	.LBB2:
  93:pathfinding.c ****     // Print the map in a grid format
  94:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 376              		.loc 1 94 0
 377 0008 0023     		movs	r3, #0
 378 000a FB60     		str	r3, [r7, #12]
 379 000c 1BE0     		b	.L2
 380              	.L5:
 381              	.LBB3:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 382              		.loc 1 95 0
 383 000e 0023     		movs	r3, #0
 384 0010 BB60     		str	r3, [r7, #8]
 385 0012 0FE0     		b	.L3
 386              	.L4:
  96:pathfinding.c ****             printf("%d", map[i][j]);
 387              		.loc 1 96 0 discriminator 3
 388 0014 FB68     		ldr	r3, [r7, #12]
 389 0016 4C22     		movs	r2, #76
 390 0018 02FB03F3 		mul	r3, r2, r3
 391 001c 7A68     		ldr	r2, [r7, #4]
 392 001e 1344     		add	r3, r3, r2
 393 0020 BA68     		ldr	r2, [r7, #8]
 394 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 395 0026 1946     		mov	r1, r3
 396 0028 0A48     		ldr	r0, .L6
 397 002a FFF7FEFF 		bl	printf
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 398              		.loc 1 95 0 discriminator 3
 399 002e BB68     		ldr	r3, [r7, #8]
 400 0030 0133     		adds	r3, r3, #1
 401 0032 BB60     		str	r3, [r7, #8]
 402              	.L3:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 403              		.loc 1 95 0 is_stmt 0 discriminator 1
 404 0034 BB68     		ldr	r3, [r7, #8]
 405 0036 122B     		cmp	r3, #18
 406 0038 ECDD     		ble	.L4
 407              	.LBE3:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 10


  97:pathfinding.c ****         }
  98:pathfinding.c ****         printf("\n");
 408              		.loc 1 98 0 is_stmt 1 discriminator 2
 409 003a 0A20     		movs	r0, #10
 410 003c FFF7FEFF 		bl	putchar
  94:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 411              		.loc 1 94 0 discriminator 2
 412 0040 FB68     		ldr	r3, [r7, #12]
 413 0042 0133     		adds	r3, r3, #1
 414 0044 FB60     		str	r3, [r7, #12]
 415              	.L2:
  94:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 416              		.loc 1 94 0 is_stmt 0 discriminator 1
 417 0046 FB68     		ldr	r3, [r7, #12]
 418 0048 0E2B     		cmp	r3, #14
 419 004a E0DD     		ble	.L5
 420              	.LBE2:
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 421              		.loc 1 100 0 is_stmt 1
 422 004c 00BF     		nop
 423 004e 1037     		adds	r7, r7, #16
 424              		.cfi_def_cfa_offset 8
 425 0050 BD46     		mov	sp, r7
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 0052 80BD     		pop	{r7, pc}
 429              	.L7:
 430              		.align	2
 431              	.L6:
 432 0054 00000000 		.word	.LC0
 433              		.cfi_endproc
 434              	.LFE1:
 435              		.size	printMap, .-printMap
 436              		.section	.text.clearMap,"ax",%progbits
 437              		.align	2
 438              		.global	clearMap
 439              		.thumb
 440              		.thumb_func
 441              		.type	clearMap, %function
 442              	clearMap:
 443              	.LFB2:
 101:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 444              		.loc 1 101 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 0000 80B4     		push	{r7}
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 85B0     		sub	sp, sp, #20
 453              		.cfi_def_cfa_offset 24
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 457              	.LBB4:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 11


 102:pathfinding.c ****     // Print the map in a grid format
 103:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 458              		.loc 1 103 0
 459 0008 0023     		movs	r3, #0
 460 000a FB60     		str	r3, [r7, #12]
 461 000c 20E0     		b	.L9
 462              	.L13:
 463              	.LBB5:
 104:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 464              		.loc 1 104 0
 465 000e 0023     		movs	r3, #0
 466 0010 BB60     		str	r3, [r7, #8]
 467 0012 17E0     		b	.L10
 468              	.L12:
 105:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
 469              		.loc 1 105 0
 470 0014 FB68     		ldr	r3, [r7, #12]
 471 0016 4C22     		movs	r2, #76
 472 0018 02FB03F3 		mul	r3, r2, r3
 473 001c 7A68     		ldr	r2, [r7, #4]
 474 001e 1344     		add	r3, r3, r2
 475 0020 BA68     		ldr	r2, [r7, #8]
 476 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 477 0026 012B     		cmp	r3, #1
 478 0028 09D0     		beq	.L11
 479              		.loc 1 105 0 is_stmt 0 discriminator 1
 480 002a FB68     		ldr	r3, [r7, #12]
 481 002c 4C22     		movs	r2, #76
 482 002e 02FB03F3 		mul	r3, r2, r3
 483 0032 7A68     		ldr	r2, [r7, #4]
 484 0034 1344     		add	r3, r3, r2
 485 0036 BA68     		ldr	r2, [r7, #8]
 486 0038 0021     		movs	r1, #0
 487 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 488              	.L11:
 104:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 489              		.loc 1 104 0 is_stmt 1 discriminator 2
 490 003e BB68     		ldr	r3, [r7, #8]
 491 0040 0133     		adds	r3, r3, #1
 492 0042 BB60     		str	r3, [r7, #8]
 493              	.L10:
 104:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 494              		.loc 1 104 0 is_stmt 0 discriminator 1
 495 0044 BB68     		ldr	r3, [r7, #8]
 496 0046 122B     		cmp	r3, #18
 497 0048 E4DD     		ble	.L12
 498              	.LBE5:
 103:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 499              		.loc 1 103 0 is_stmt 1 discriminator 2
 500 004a FB68     		ldr	r3, [r7, #12]
 501 004c 0133     		adds	r3, r3, #1
 502 004e FB60     		str	r3, [r7, #12]
 503              	.L9:
 103:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 504              		.loc 1 103 0 is_stmt 0 discriminator 1
 505 0050 FB68     		ldr	r3, [r7, #12]
 506 0052 0E2B     		cmp	r3, #14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 12


 507 0054 DBDD     		ble	.L13
 508              	.LBE4:
 106:pathfinding.c ****         }
 107:pathfinding.c ****     }
 108:pathfinding.c **** }
 509              		.loc 1 108 0 is_stmt 1
 510 0056 00BF     		nop
 511 0058 1437     		adds	r7, r7, #20
 512              		.cfi_def_cfa_offset 4
 513 005a BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 005c 80BC     		pop	{r7}
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 005e 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE2:
 522              		.size	clearMap, .-clearMap
 523              		.comm	list_of_optimal_coordinates,2280,4
 524              		.global	moves
 525              		.data
 526              		.align	2
 527              		.type	moves, %object
 528              		.size	moves, 32
 529              	moves:
 530 04a8 00000000 		.word	0
 531 04ac 01000000 		.word	1
 532 04b0 00000000 		.word	0
 533 04b4 FFFFFFFF 		.word	-1
 534 04b8 01000000 		.word	1
 535 04bc 00000000 		.word	0
 536 04c0 FFFFFFFF 		.word	-1
 537 04c4 00000000 		.word	0
 538              		.section	.text.isValidMove,"ax",%progbits
 539              		.align	2
 540              		.global	isValidMove
 541              		.thumb
 542              		.thumb_func
 543              		.type	isValidMove, %function
 544              	isValidMove:
 545              	.LFB3:
 109:pathfinding.c **** 
 110:pathfinding.c **** 
 111:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 112:pathfinding.c **** 
 113:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 114:pathfinding.c **** 
 115:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 546              		.loc 1 115 0
 547              		.cfi_startproc
 548              		@ args = 4, pretend = 0, frame = 16
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              		.cfi_def_cfa_offset 4
 553              		.cfi_offset 7, -4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 13


 554 0002 85B0     		sub	sp, sp, #20
 555              		.cfi_def_cfa_offset 24
 556 0004 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 558 0006 F860     		str	r0, [r7, #12]
 559 0008 B960     		str	r1, [r7, #8]
 560 000a 7A60     		str	r2, [r7, #4]
 561 000c 3B60     		str	r3, [r7]
 116:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 562              		.loc 1 116 0
 563 000e FB68     		ldr	r3, [r7, #12]
 564 0010 002B     		cmp	r3, #0
 565 0012 17DB     		blt	.L15
 566              		.loc 1 116 0 is_stmt 0 discriminator 1
 567 0014 FA68     		ldr	r2, [r7, #12]
 568 0016 7B68     		ldr	r3, [r7, #4]
 569 0018 9A42     		cmp	r2, r3
 570 001a 13DA     		bge	.L15
 571              		.loc 1 116 0 discriminator 3
 572 001c BB68     		ldr	r3, [r7, #8]
 573 001e 002B     		cmp	r3, #0
 574 0020 10DB     		blt	.L15
 575              		.loc 1 116 0 discriminator 5
 576 0022 BA68     		ldr	r2, [r7, #8]
 577 0024 3B68     		ldr	r3, [r7]
 578 0026 9A42     		cmp	r2, r3
 579 0028 0CDA     		bge	.L15
 580              		.loc 1 116 0 discriminator 7
 581 002a FB68     		ldr	r3, [r7, #12]
 582 002c 4C22     		movs	r2, #76
 583 002e 02FB03F3 		mul	r3, r2, r3
 584 0032 BA69     		ldr	r2, [r7, #24]
 585 0034 1344     		add	r3, r3, r2
 586 0036 BA68     		ldr	r2, [r7, #8]
 587 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 588 003c 002B     		cmp	r3, #0
 589 003e 01D1     		bne	.L15
 590              		.loc 1 116 0 discriminator 9
 591 0040 0123     		movs	r3, #1
 592 0042 00E0     		b	.L16
 593              	.L15:
 594              		.loc 1 116 0 discriminator 10
 595 0044 0023     		movs	r3, #0
 596              	.L16:
 597              		.loc 1 116 0 discriminator 12
 598 0046 03F00103 		and	r3, r3, #1
 599 004a DBB2     		uxtb	r3, r3
 117:pathfinding.c **** }
 600              		.loc 1 117 0 is_stmt 1 discriminator 12
 601 004c 1846     		mov	r0, r3
 602 004e 1437     		adds	r7, r7, #20
 603              		.cfi_def_cfa_offset 4
 604 0050 BD46     		mov	sp, r7
 605              		.cfi_def_cfa_register 13
 606              		@ sp needed
 607 0052 80BC     		pop	{r7}
 608              		.cfi_restore 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 14


 609              		.cfi_def_cfa_offset 0
 610 0054 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE3:
 613              		.size	isValidMove, .-isValidMove
 614 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 615              		.align	2
 616              		.global	dijkstra
 617              		.thumb
 618              		.thumb_func
 619              		.type	dijkstra, %function
 620              	dijkstra:
 621              	.LFB4:
 118:pathfinding.c **** 
 119:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
 622              		.loc 1 119 0
 623              		.cfi_startproc
 624              		@ args = 12, pretend = 8, frame = 5816
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 82B0     		sub	sp, sp, #8
 627              		.cfi_def_cfa_offset 8
 628 0002 90B5     		push	{r4, r7, lr}
 629              		.cfi_def_cfa_offset 20
 630              		.cfi_offset 4, -20
 631              		.cfi_offset 7, -16
 632              		.cfi_offset 14, -12
 633 0004 ADF5B65D 		sub	sp, sp, #5824
 634              		.cfi_def_cfa_offset 5844
 635 0008 81B0     		sub	sp, sp, #4
 636              		.cfi_def_cfa_offset 5848
 637 000a 02AF     		add	r7, sp, #8
 638              		.cfi_def_cfa 7, 5840
 639 000c 07F11804 		add	r4, r7, #24
 640 0010 0C3C     		subs	r4, r4, #12
 641 0012 2060     		str	r0, [r4]
 642 0014 07F11800 		add	r0, r7, #24
 643 0018 1438     		subs	r0, r0, #20
 644 001a 80E80600 		stmia	r0, {r1, r2}
 645 001e 07F5B652 		add	r2, r7, #5824
 646 0022 02F10C02 		add	r2, r2, #12
 647 0026 1360     		str	r3, [r2]
 648              	.LBB6:
 120:pathfinding.c **** 
 121:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 122:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 649              		.loc 1 122 0
 650 0028 0023     		movs	r3, #0
 651 002a 07F5B552 		add	r2, r7, #5792
 652 002e 02F11402 		add	r2, r2, #20
 653 0032 1360     		str	r3, [r2]
 654 0034 3AE0     		b	.L19
 655              	.L22:
 656              	.LBB7:
 123:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 657              		.loc 1 123 0
 658 0036 0023     		movs	r3, #0
 659 0038 07F5B552 		add	r2, r7, #5792
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 15


 660 003c 02F11002 		add	r2, r2, #16
 661 0040 1360     		str	r3, [r2]
 662 0042 21E0     		b	.L20
 663              	.L21:
 124:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 664              		.loc 1 124 0 discriminator 3
 665 0044 07F58F51 		add	r1, r7, #4576
 666 0048 01F10C01 		add	r1, r1, #12
 667 004c 07F5B553 		add	r3, r7, #5792
 668 0050 03F11403 		add	r3, r3, #20
 669 0054 1A68     		ldr	r2, [r3]
 670 0056 1346     		mov	r3, r2
 671 0058 DB00     		lsls	r3, r3, #3
 672 005a 1344     		add	r3, r3, r2
 673 005c 5B00     		lsls	r3, r3, #1
 674 005e 1344     		add	r3, r3, r2
 675 0060 07F5B552 		add	r2, r7, #5792
 676 0064 02F11002 		add	r2, r2, #16
 677 0068 1268     		ldr	r2, [r2]
 678 006a 1344     		add	r3, r3, r2
 679 006c 0122     		movs	r2, #1
 680 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 123:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 681              		.loc 1 123 0 discriminator 3
 682 0072 07F5B553 		add	r3, r7, #5792
 683 0076 03F11003 		add	r3, r3, #16
 684 007a 1B68     		ldr	r3, [r3]
 685 007c 0133     		adds	r3, r3, #1
 686 007e 07F5B552 		add	r2, r7, #5792
 687 0082 02F11002 		add	r2, r2, #16
 688 0086 1360     		str	r3, [r2]
 689              	.L20:
 123:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 690              		.loc 1 123 0 is_stmt 0 discriminator 1
 691 0088 07F5B553 		add	r3, r7, #5792
 692 008c 03F11003 		add	r3, r3, #16
 693 0090 1B68     		ldr	r3, [r3]
 694 0092 122B     		cmp	r3, #18
 695 0094 D6DD     		ble	.L21
 696              	.LBE7:
 122:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 697              		.loc 1 122 0 is_stmt 1 discriminator 2
 698 0096 07F5B553 		add	r3, r7, #5792
 699 009a 03F11403 		add	r3, r3, #20
 700 009e 1B68     		ldr	r3, [r3]
 701 00a0 0133     		adds	r3, r3, #1
 702 00a2 07F5B552 		add	r2, r7, #5792
 703 00a6 02F11402 		add	r2, r2, #20
 704 00aa 1360     		str	r3, [r2]
 705              	.L19:
 122:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 706              		.loc 1 122 0 is_stmt 0 discriminator 1
 707 00ac 07F5B553 		add	r3, r7, #5792
 708 00b0 03F11403 		add	r3, r3, #20
 709 00b4 1B68     		ldr	r3, [r3]
 710 00b6 0E2B     		cmp	r3, #14
 711 00b8 BDDD     		ble	.L22
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 16


 712              	.LBE6:
 125:pathfinding.c ****         }
 126:pathfinding.c ****     }
 127:pathfinding.c **** 
 128:pathfinding.c ****     struct PriorityQueue {
 129:pathfinding.c ****         struct Location location;
 130:pathfinding.c ****         int distance;
 131:pathfinding.c ****     };
 132:pathfinding.c **** 
 133:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 134:pathfinding.c ****     int pqSize = 0;
 713              		.loc 1 134 0 is_stmt 1
 714 00ba 0023     		movs	r3, #0
 715 00bc 07F5B552 		add	r2, r7, #5792
 716 00c0 02F10C02 		add	r2, r2, #12
 717 00c4 1360     		str	r3, [r2]
 718              	.LBB8:
 135:pathfinding.c **** 
 136:pathfinding.c ****     // Initialize distances and paths arrays
 137:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 138:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 139:pathfinding.c **** 
 140:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 719              		.loc 1 140 0
 720 00c6 0023     		movs	r3, #0
 721 00c8 07F5B552 		add	r2, r7, #5792
 722 00cc 02F10802 		add	r2, r2, #8
 723 00d0 1360     		str	r3, [r2]
 724 00d2 3AE0     		b	.L23
 725              	.L26:
 726              	.LBB9:
 141:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 727              		.loc 1 141 0
 728 00d4 0023     		movs	r3, #0
 729 00d6 07F5B552 		add	r2, r7, #5792
 730 00da 02F10402 		add	r2, r2, #4
 731 00de 1360     		str	r3, [r2]
 732 00e0 21E0     		b	.L24
 733              	.L25:
 142:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 734              		.loc 1 142 0 discriminator 3
 735 00e2 07F13802 		add	r2, r7, #56
 736 00e6 1C3A     		subs	r2, r2, #28
 737 00e8 07F5B553 		add	r3, r7, #5792
 738 00ec 03F10803 		add	r3, r3, #8
 739 00f0 1968     		ldr	r1, [r3]
 740 00f2 0B46     		mov	r3, r1
 741 00f4 DB00     		lsls	r3, r3, #3
 742 00f6 0B44     		add	r3, r3, r1
 743 00f8 5B00     		lsls	r3, r3, #1
 744 00fa 0B44     		add	r3, r3, r1
 745 00fc 07F5B551 		add	r1, r7, #5792
 746 0100 01F10401 		add	r1, r1, #4
 747 0104 0968     		ldr	r1, [r1]
 748 0106 0B44     		add	r3, r3, r1
 749 0108 4FF47A71 		mov	r1, #1000
 750 010c 42F82310 		str	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 17


 141:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 751              		.loc 1 141 0 discriminator 3
 752 0110 07F5B553 		add	r3, r7, #5792
 753 0114 03F10403 		add	r3, r3, #4
 754 0118 1B68     		ldr	r3, [r3]
 755 011a 0133     		adds	r3, r3, #1
 756 011c 07F5B552 		add	r2, r7, #5792
 757 0120 02F10402 		add	r2, r2, #4
 758 0124 1360     		str	r3, [r2]
 759              	.L24:
 141:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 760              		.loc 1 141 0 is_stmt 0 discriminator 1
 761 0126 07F5B553 		add	r3, r7, #5792
 762 012a 03F10403 		add	r3, r3, #4
 763 012e 1B68     		ldr	r3, [r3]
 764 0130 122B     		cmp	r3, #18
 765 0132 D6DD     		ble	.L25
 766              	.LBE9:
 140:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 767              		.loc 1 140 0 is_stmt 1 discriminator 2
 768 0134 07F5B553 		add	r3, r7, #5792
 769 0138 03F10803 		add	r3, r3, #8
 770 013c 1B68     		ldr	r3, [r3]
 771 013e 0133     		adds	r3, r3, #1
 772 0140 07F5B552 		add	r2, r7, #5792
 773 0144 02F10802 		add	r2, r2, #8
 774 0148 1360     		str	r3, [r2]
 775              	.L23:
 140:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 776              		.loc 1 140 0 is_stmt 0 discriminator 1
 777 014a 07F5B553 		add	r3, r7, #5792
 778 014e 03F10803 		add	r3, r3, #8
 779 0152 1B68     		ldr	r3, [r3]
 780 0154 0E2B     		cmp	r3, #14
 781 0156 BDDD     		ble	.L26
 782              	.LBE8:
 143:pathfinding.c ****         }
 144:pathfinding.c ****     }
 145:pathfinding.c **** 
 146:pathfinding.c ****     int stepNum = 0;
 783              		.loc 1 146 0 is_stmt 1
 784 0158 0023     		movs	r3, #0
 785 015a 07F5B552 		add	r2, r7, #5792
 786 015e 1360     		str	r3, [r2]
 147:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 787              		.loc 1 147 0
 788 0160 07F11803 		add	r3, r7, #24
 789 0164 143B     		subs	r3, r3, #20
 790 0166 1968     		ldr	r1, [r3]
 791 0168 07F11803 		add	r3, r7, #24
 792 016c 143B     		subs	r3, r3, #20
 793 016e 5868     		ldr	r0, [r3, #4]
 794 0170 07F13802 		add	r2, r7, #56
 795 0174 1C3A     		subs	r2, r2, #28
 796 0176 0B46     		mov	r3, r1
 797 0178 DB00     		lsls	r3, r3, #3
 798 017a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 18


 799 017c 5B00     		lsls	r3, r3, #1
 800 017e 0B44     		add	r3, r3, r1
 801 0180 0344     		add	r3, r3, r0
 802 0182 0021     		movs	r1, #0
 803 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 148:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 149:pathfinding.c ****     stepNum++; // increment stepNum
 804              		.loc 1 149 0
 805 0188 07F5B553 		add	r3, r7, #5792
 806 018c 1B68     		ldr	r3, [r3]
 807 018e 0133     		adds	r3, r3, #1
 808 0190 07F5B552 		add	r2, r7, #5792
 809 0194 1360     		str	r3, [r2]
 150:pathfinding.c **** 
 151:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
 810              		.loc 1 151 0
 811 0196 07F59362 		add	r2, r7, #1176
 812 019a 083A     		subs	r2, r2, #8
 813 019c 07F5B553 		add	r3, r7, #5792
 814 01a0 03F10C03 		add	r3, r3, #12
 815 01a4 1968     		ldr	r1, [r3]
 816 01a6 0B46     		mov	r3, r1
 817 01a8 5B00     		lsls	r3, r3, #1
 818 01aa 0B44     		add	r3, r3, r1
 819 01ac 9B00     		lsls	r3, r3, #2
 820 01ae 1A44     		add	r2, r2, r3
 821 01b0 07F11803 		add	r3, r7, #24
 822 01b4 143B     		subs	r3, r3, #20
 823 01b6 93E80300 		ldmia	r3, {r0, r1}
 824 01ba 82E80300 		stmia	r2, {r0, r1}
 152:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 825              		.loc 1 152 0
 826 01be 07F59362 		add	r2, r7, #1176
 827 01c2 083A     		subs	r2, r2, #8
 828 01c4 07F5B553 		add	r3, r7, #5792
 829 01c8 03F10C03 		add	r3, r3, #12
 830 01cc 1968     		ldr	r1, [r3]
 831 01ce 0B46     		mov	r3, r1
 832 01d0 5B00     		lsls	r3, r3, #1
 833 01d2 0B44     		add	r3, r3, r1
 834 01d4 9B00     		lsls	r3, r3, #2
 835 01d6 1344     		add	r3, r3, r2
 836 01d8 0833     		adds	r3, r3, #8
 837 01da 0022     		movs	r2, #0
 838 01dc 1A60     		str	r2, [r3]
 153:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 839              		.loc 1 153 0
 840 01de 07F5B553 		add	r3, r7, #5792
 841 01e2 03F10C03 		add	r3, r3, #12
 842 01e6 1B68     		ldr	r3, [r3]
 843 01e8 0133     		adds	r3, r3, #1
 844 01ea 07F5B552 		add	r2, r7, #5792
 845 01ee 02F10C02 		add	r2, r2, #12
 846 01f2 1360     		str	r3, [r2]
 154:pathfinding.c **** 
 155:pathfinding.c ****     while (pqSize > 0) {
 847              		.loc 1 155 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 19


 848 01f4 F5E1     		b	.L27
 849              	.L37:
 850              	.LBB10:
 156:pathfinding.c ****         int idx = 0;
 851              		.loc 1 156 0
 852 01f6 0023     		movs	r3, #0
 853 01f8 07F5B452 		add	r2, r7, #5760
 854 01fc 02F11C02 		add	r2, r2, #28
 855 0200 1360     		str	r3, [r2]
 856              	.LBB11:
 157:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 857              		.loc 1 157 0
 858 0202 0123     		movs	r3, #1
 859 0204 07F5B452 		add	r2, r7, #5760
 860 0208 02F11802 		add	r2, r2, #24
 861 020c 1360     		str	r3, [r2]
 862 020e 34E0     		b	.L28
 863              	.L30:
 158:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 864              		.loc 1 158 0
 865 0210 07F59362 		add	r2, r7, #1176
 866 0214 083A     		subs	r2, r2, #8
 867 0216 07F5B453 		add	r3, r7, #5760
 868 021a 03F11803 		add	r3, r3, #24
 869 021e 1968     		ldr	r1, [r3]
 870 0220 0B46     		mov	r3, r1
 871 0222 5B00     		lsls	r3, r3, #1
 872 0224 0B44     		add	r3, r3, r1
 873 0226 9B00     		lsls	r3, r3, #2
 874 0228 1344     		add	r3, r3, r2
 875 022a 0833     		adds	r3, r3, #8
 876 022c 1868     		ldr	r0, [r3]
 877 022e 07F59362 		add	r2, r7, #1176
 878 0232 083A     		subs	r2, r2, #8
 879 0234 07F5B453 		add	r3, r7, #5760
 880 0238 03F11C03 		add	r3, r3, #28
 881 023c 1968     		ldr	r1, [r3]
 882 023e 0B46     		mov	r3, r1
 883 0240 5B00     		lsls	r3, r3, #1
 884 0242 0B44     		add	r3, r3, r1
 885 0244 9B00     		lsls	r3, r3, #2
 886 0246 1344     		add	r3, r3, r2
 887 0248 0833     		adds	r3, r3, #8
 888 024a 1B68     		ldr	r3, [r3]
 889 024c 9842     		cmp	r0, r3
 890 024e 09DA     		bge	.L29
 159:pathfinding.c ****                 idx = i; // find the shortest distance location 
 891              		.loc 1 159 0
 892 0250 07F5B453 		add	r3, r7, #5760
 893 0254 03F11803 		add	r3, r3, #24
 894 0258 1B68     		ldr	r3, [r3]
 895 025a 07F5B452 		add	r2, r7, #5760
 896 025e 02F11C02 		add	r2, r2, #28
 897 0262 1360     		str	r3, [r2]
 898              	.L29:
 157:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 899              		.loc 1 157 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 20


 900 0264 07F5B453 		add	r3, r7, #5760
 901 0268 03F11803 		add	r3, r3, #24
 902 026c 1B68     		ldr	r3, [r3]
 903 026e 0133     		adds	r3, r3, #1
 904 0270 07F5B452 		add	r2, r7, #5760
 905 0274 02F11802 		add	r2, r2, #24
 906 0278 1360     		str	r3, [r2]
 907              	.L28:
 157:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 908              		.loc 1 157 0 is_stmt 0 discriminator 1
 909 027a 07F5B453 		add	r3, r7, #5760
 910 027e 03F11803 		add	r3, r3, #24
 911 0282 1A68     		ldr	r2, [r3]
 912 0284 07F5B553 		add	r3, r7, #5792
 913 0288 03F10C03 		add	r3, r3, #12
 914 028c 1B68     		ldr	r3, [r3]
 915 028e 9A42     		cmp	r2, r3
 916 0290 BEDB     		blt	.L30
 917              	.LBE11:
 160:pathfinding.c ****             }
 161:pathfinding.c ****         }
 162:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 918              		.loc 1 162 0 is_stmt 1
 919 0292 07F11801 		add	r1, r7, #24
 920 0296 0839     		subs	r1, r1, #8
 921 0298 07F59362 		add	r2, r7, #1176
 922 029c 083A     		subs	r2, r2, #8
 923 029e 07F5B453 		add	r3, r7, #5760
 924 02a2 03F11C03 		add	r3, r3, #28
 925 02a6 1868     		ldr	r0, [r3]
 926 02a8 0346     		mov	r3, r0
 927 02aa 5B00     		lsls	r3, r3, #1
 928 02ac 0344     		add	r3, r3, r0
 929 02ae 9B00     		lsls	r3, r3, #2
 930 02b0 1A44     		add	r2, r2, r3
 931 02b2 0B46     		mov	r3, r1
 932 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 933 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 163:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 934              		.loc 1 163 0
 935 02ba 07F5B553 		add	r3, r7, #5792
 936 02be 03F10C03 		add	r3, r3, #12
 937 02c2 1B68     		ldr	r3, [r3]
 938 02c4 591E     		subs	r1, r3, #1
 939 02c6 07F59362 		add	r2, r7, #1176
 940 02ca 083A     		subs	r2, r2, #8
 941 02cc 07F5B453 		add	r3, r7, #5760
 942 02d0 03F11C03 		add	r3, r3, #28
 943 02d4 1868     		ldr	r0, [r3]
 944 02d6 0346     		mov	r3, r0
 945 02d8 5B00     		lsls	r3, r3, #1
 946 02da 0344     		add	r3, r3, r0
 947 02dc 9B00     		lsls	r3, r3, #2
 948 02de D018     		adds	r0, r2, r3
 949 02e0 07F59362 		add	r2, r7, #1176
 950 02e4 083A     		subs	r2, r2, #8
 951 02e6 0B46     		mov	r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 21


 952 02e8 5B00     		lsls	r3, r3, #1
 953 02ea 0B44     		add	r3, r3, r1
 954 02ec 9B00     		lsls	r3, r3, #2
 955 02ee 1A44     		add	r2, r2, r3
 956 02f0 0346     		mov	r3, r0
 957 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 958 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 164:pathfinding.c ****         pqSize--; // decrement pqSize
 959              		.loc 1 164 0
 960 02f8 07F5B553 		add	r3, r7, #5792
 961 02fc 03F10C03 		add	r3, r3, #12
 962 0300 1B68     		ldr	r3, [r3]
 963 0302 013B     		subs	r3, r3, #1
 964 0304 07F5B552 		add	r2, r7, #5792
 965 0308 02F10C02 		add	r2, r2, #12
 966 030c 1360     		str	r3, [r2]
 165:pathfinding.c **** 
 166:pathfinding.c ****         int row = current.location.row;
 967              		.loc 1 166 0
 968 030e 07F11803 		add	r3, r7, #24
 969 0312 083B     		subs	r3, r3, #8
 970 0314 1B68     		ldr	r3, [r3]
 971 0316 07F5B352 		add	r2, r7, #5728
 972 031a 02F11C02 		add	r2, r2, #28
 973 031e 1360     		str	r3, [r2]
 167:pathfinding.c ****         int col = current.location.col; // get current location details
 974              		.loc 1 167 0
 975 0320 07F11803 		add	r3, r7, #24
 976 0324 083B     		subs	r3, r3, #8
 977 0326 5B68     		ldr	r3, [r3, #4]
 978 0328 07F5B352 		add	r2, r7, #5728
 979 032c 02F11802 		add	r2, r2, #24
 980 0330 1360     		str	r3, [r2]
 168:pathfinding.c **** 
 169:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 981              		.loc 1 169 0
 982 0332 07F58F51 		add	r1, r7, #4576
 983 0336 01F10C01 		add	r1, r1, #12
 984 033a 07F5B353 		add	r3, r7, #5728
 985 033e 03F11C03 		add	r3, r3, #28
 986 0342 1A68     		ldr	r2, [r3]
 987 0344 1346     		mov	r3, r2
 988 0346 DB00     		lsls	r3, r3, #3
 989 0348 1344     		add	r3, r3, r2
 990 034a 5B00     		lsls	r3, r3, #1
 991 034c 1344     		add	r3, r3, r2
 992 034e 07F5B352 		add	r2, r7, #5728
 993 0352 02F11802 		add	r2, r2, #24
 994 0356 1268     		ldr	r2, [r2]
 995 0358 1344     		add	r3, r3, r2
 996 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 997 035e 012B     		cmp	r3, #1
 998 0360 40F03F81 		bne	.L27
 170:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 999              		.loc 1 170 0
 1000 0364 07F58F51 		add	r1, r7, #4576
 1001 0368 01F10C01 		add	r1, r1, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 22


 1002 036c 07F5B353 		add	r3, r7, #5728
 1003 0370 03F11C03 		add	r3, r3, #28
 1004 0374 1A68     		ldr	r2, [r3]
 1005 0376 1346     		mov	r3, r2
 1006 0378 DB00     		lsls	r3, r3, #3
 1007 037a 1344     		add	r3, r3, r2
 1008 037c 5B00     		lsls	r3, r3, #1
 1009 037e 1344     		add	r3, r3, r2
 1010 0380 07F5B352 		add	r2, r7, #5728
 1011 0384 02F11802 		add	r2, r2, #24
 1012 0388 1268     		ldr	r2, [r2]
 1013 038a 1344     		add	r3, r3, r2
 1014 038c 0022     		movs	r2, #0
 1015 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 171:pathfinding.c **** 
 172:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1016              		.loc 1 172 0
 1017 0392 07F5B653 		add	r3, r7, #5824
 1018 0396 03F10C03 		add	r3, r3, #12
 1019 039a 1A68     		ldr	r2, [r3]
 1020 039c 07F5B353 		add	r3, r7, #5728
 1021 03a0 03F11C03 		add	r3, r3, #28
 1022 03a4 1B68     		ldr	r3, [r3]
 1023 03a6 9A42     		cmp	r2, r3
 1024 03a8 0CD1     		bne	.L32
 1025              		.loc 1 172 0 is_stmt 0 discriminator 1
 1026 03aa 07F5B653 		add	r3, r7, #5824
 1027 03ae 03F11003 		add	r3, r3, #16
 1028 03b2 1A68     		ldr	r2, [r3]
 1029 03b4 07F5B353 		add	r3, r7, #5728
 1030 03b8 03F11803 		add	r3, r3, #24
 1031 03bc 1B68     		ldr	r3, [r3]
 1032 03be 9A42     		cmp	r2, r3
 1033 03c0 00F01881 		beq	.L43
 1034              	.L32:
 1035              	.LBB12:
 173:pathfinding.c ****                 break; // if reached target destination, end
 174:pathfinding.c ****             }
 175:pathfinding.c ****             // make a move, check if valid
 176:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1036              		.loc 1 176 0 is_stmt 1
 1037 03c4 0023     		movs	r3, #0
 1038 03c6 07F5B452 		add	r2, r7, #5760
 1039 03ca 02F11402 		add	r2, r2, #20
 1040 03ce 1360     		str	r3, [r2]
 1041 03d0 FFE0     		b	.L34
 1042              	.L36:
 1043              	.LBB13:
 177:pathfinding.c ****                 int newRow = row + moves[i].row;
 1044              		.loc 1 177 0
 1045 03d2 D04A     		ldr	r2, .L44
 1046 03d4 07F5B453 		add	r3, r7, #5760
 1047 03d8 03F11403 		add	r3, r3, #20
 1048 03dc 1B68     		ldr	r3, [r3]
 1049 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1050 03e2 07F5B353 		add	r3, r7, #5728
 1051 03e6 03F11C03 		add	r3, r3, #28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 23


 1052 03ea 1B68     		ldr	r3, [r3]
 1053 03ec 1344     		add	r3, r3, r2
 1054 03ee 07F5B352 		add	r2, r7, #5728
 1055 03f2 02F11402 		add	r2, r2, #20
 1056 03f6 1360     		str	r3, [r2]
 178:pathfinding.c ****                 int newCol = col + moves[i].col;
 1057              		.loc 1 178 0
 1058 03f8 C64A     		ldr	r2, .L44
 1059 03fa 07F5B453 		add	r3, r7, #5760
 1060 03fe 03F11403 		add	r3, r3, #20
 1061 0402 1B68     		ldr	r3, [r3]
 1062 0404 DB00     		lsls	r3, r3, #3
 1063 0406 1344     		add	r3, r3, r2
 1064 0408 5A68     		ldr	r2, [r3, #4]
 1065 040a 07F5B353 		add	r3, r7, #5728
 1066 040e 03F11803 		add	r3, r3, #24
 1067 0412 1B68     		ldr	r3, [r3]
 1068 0414 1344     		add	r3, r3, r2
 1069 0416 07F5B352 		add	r2, r7, #5728
 1070 041a 02F11002 		add	r2, r2, #16
 1071 041e 1360     		str	r3, [r2]
 179:pathfinding.c **** 
 180:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1072              		.loc 1 180 0
 1073 0420 07F11803 		add	r3, r7, #24
 1074 0424 0C3B     		subs	r3, r3, #12
 1075 0426 1B68     		ldr	r3, [r3]
 1076 0428 0093     		str	r3, [sp]
 1077 042a 1323     		movs	r3, #19
 1078 042c 0F22     		movs	r2, #15
 1079 042e 07F5B351 		add	r1, r7, #5728
 1080 0432 01F11001 		add	r1, r1, #16
 1081 0436 0968     		ldr	r1, [r1]
 1082 0438 07F5B350 		add	r0, r7, #5728
 1083 043c 00F11400 		add	r0, r0, #20
 1084 0440 0068     		ldr	r0, [r0]
 1085 0442 FFF7FEFF 		bl	isValidMove
 1086 0446 0346     		mov	r3, r0
 1087 0448 002B     		cmp	r3, #0
 1088 044a 00F0B780 		beq	.L35
 1089              		.loc 1 180 0 is_stmt 0 discriminator 1
 1090 044e 07F58F51 		add	r1, r7, #4576
 1091 0452 01F10C01 		add	r1, r1, #12
 1092 0456 07F5B353 		add	r3, r7, #5728
 1093 045a 03F11403 		add	r3, r3, #20
 1094 045e 1A68     		ldr	r2, [r3]
 1095 0460 1346     		mov	r3, r2
 1096 0462 DB00     		lsls	r3, r3, #3
 1097 0464 1344     		add	r3, r3, r2
 1098 0466 5B00     		lsls	r3, r3, #1
 1099 0468 1344     		add	r3, r3, r2
 1100 046a 07F5B352 		add	r2, r7, #5728
 1101 046e 02F11002 		add	r2, r2, #16
 1102 0472 1268     		ldr	r2, [r2]
 1103 0474 1344     		add	r3, r3, r2
 1104 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1105 047a 012B     		cmp	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 24


 1106 047c 40F09E80 		bne	.L35
 1107              	.LBB14:
 181:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1108              		.loc 1 181 0 is_stmt 1
 1109 0480 07F13802 		add	r2, r7, #56
 1110 0484 1C3A     		subs	r2, r2, #28
 1111 0486 07F5B353 		add	r3, r7, #5728
 1112 048a 03F11C03 		add	r3, r3, #28
 1113 048e 1968     		ldr	r1, [r3]
 1114 0490 0B46     		mov	r3, r1
 1115 0492 DB00     		lsls	r3, r3, #3
 1116 0494 0B44     		add	r3, r3, r1
 1117 0496 5B00     		lsls	r3, r3, #1
 1118 0498 0B44     		add	r3, r3, r1
 1119 049a 07F5B351 		add	r1, r7, #5728
 1120 049e 01F11801 		add	r1, r1, #24
 1121 04a2 0968     		ldr	r1, [r1]
 1122 04a4 0B44     		add	r3, r3, r1
 1123 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1124 04aa 0133     		adds	r3, r3, #1
 1125 04ac 07F5B352 		add	r2, r7, #5728
 1126 04b0 02F10C02 		add	r2, r2, #12
 1127 04b4 1360     		str	r3, [r2]
 182:pathfinding.c ****                     // take the shortest distance between new and existing
 183:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1128              		.loc 1 183 0
 1129 04b6 07F13802 		add	r2, r7, #56
 1130 04ba 1C3A     		subs	r2, r2, #28
 1131 04bc 07F5B353 		add	r3, r7, #5728
 1132 04c0 03F11403 		add	r3, r3, #20
 1133 04c4 1968     		ldr	r1, [r3]
 1134 04c6 0B46     		mov	r3, r1
 1135 04c8 DB00     		lsls	r3, r3, #3
 1136 04ca 0B44     		add	r3, r3, r1
 1137 04cc 5B00     		lsls	r3, r3, #1
 1138 04ce 0B44     		add	r3, r3, r1
 1139 04d0 07F5B351 		add	r1, r7, #5728
 1140 04d4 01F11001 		add	r1, r1, #16
 1141 04d8 0968     		ldr	r1, [r1]
 1142 04da 0B44     		add	r3, r3, r1
 1143 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1144 04e0 07F5B353 		add	r3, r7, #5728
 1145 04e4 03F10C03 		add	r3, r3, #12
 1146 04e8 1B68     		ldr	r3, [r3]
 1147 04ea 9A42     		cmp	r2, r3
 1148 04ec 66DD     		ble	.L35
 184:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1149              		.loc 1 184 0
 1150 04ee 07F13802 		add	r2, r7, #56
 1151 04f2 1C3A     		subs	r2, r2, #28
 1152 04f4 07F5B353 		add	r3, r7, #5728
 1153 04f8 03F11403 		add	r3, r3, #20
 1154 04fc 1968     		ldr	r1, [r3]
 1155 04fe 0B46     		mov	r3, r1
 1156 0500 DB00     		lsls	r3, r3, #3
 1157 0502 0B44     		add	r3, r3, r1
 1158 0504 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 25


 1159 0506 0B44     		add	r3, r3, r1
 1160 0508 07F5B351 		add	r1, r7, #5728
 1161 050c 01F11001 		add	r1, r1, #16
 1162 0510 0968     		ldr	r1, [r1]
 1163 0512 0B44     		add	r3, r3, r1
 1164 0514 07F5B351 		add	r1, r7, #5728
 1165 0518 01F10C01 		add	r1, r1, #12
 1166 051c 0968     		ldr	r1, [r1]
 1167 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 185:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 186:pathfinding.c ****                         
 187:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1168              		.loc 1 187 0
 1169 0522 07F59362 		add	r2, r7, #1176
 1170 0526 083A     		subs	r2, r2, #8
 1171 0528 07F5B553 		add	r3, r7, #5792
 1172 052c 03F10C03 		add	r3, r3, #12
 1173 0530 1968     		ldr	r1, [r3]
 1174 0532 0B46     		mov	r3, r1
 1175 0534 5B00     		lsls	r3, r3, #1
 1176 0536 0B44     		add	r3, r3, r1
 1177 0538 9B00     		lsls	r3, r3, #2
 1178 053a 1344     		add	r3, r3, r2
 1179 053c 07F5B352 		add	r2, r7, #5728
 1180 0540 02F11402 		add	r2, r2, #20
 1181 0544 1268     		ldr	r2, [r2]
 1182 0546 1A60     		str	r2, [r3]
 188:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1183              		.loc 1 188 0
 1184 0548 07F59362 		add	r2, r7, #1176
 1185 054c 083A     		subs	r2, r2, #8
 1186 054e 07F5B553 		add	r3, r7, #5792
 1187 0552 03F10C03 		add	r3, r3, #12
 1188 0556 1968     		ldr	r1, [r3]
 1189 0558 0B46     		mov	r3, r1
 1190 055a 5B00     		lsls	r3, r3, #1
 1191 055c 0B44     		add	r3, r3, r1
 1192 055e 9B00     		lsls	r3, r3, #2
 1193 0560 1344     		add	r3, r3, r2
 1194 0562 0433     		adds	r3, r3, #4
 1195 0564 07F5B352 		add	r2, r7, #5728
 1196 0568 02F11002 		add	r2, r2, #16
 1197 056c 1268     		ldr	r2, [r2]
 1198 056e 1A60     		str	r2, [r3]
 189:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1199              		.loc 1 189 0
 1200 0570 07F59362 		add	r2, r7, #1176
 1201 0574 083A     		subs	r2, r2, #8
 1202 0576 07F5B553 		add	r3, r7, #5792
 1203 057a 03F10C03 		add	r3, r3, #12
 1204 057e 1968     		ldr	r1, [r3]
 1205 0580 0B46     		mov	r3, r1
 1206 0582 5B00     		lsls	r3, r3, #1
 1207 0584 0B44     		add	r3, r3, r1
 1208 0586 9B00     		lsls	r3, r3, #2
 1209 0588 1344     		add	r3, r3, r2
 1210 058a 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 26


 1211 058c 07F5B352 		add	r2, r7, #5728
 1212 0590 02F10C02 		add	r2, r2, #12
 1213 0594 1268     		ldr	r2, [r2]
 1214 0596 1A60     		str	r2, [r3]
 190:pathfinding.c ****                         
 191:pathfinding.c ****                         stepNum++;
 1215              		.loc 1 191 0
 1216 0598 07F5B553 		add	r3, r7, #5792
 1217 059c 1B68     		ldr	r3, [r3]
 1218 059e 0133     		adds	r3, r3, #1
 1219 05a0 07F5B552 		add	r2, r7, #5792
 1220 05a4 1360     		str	r3, [r2]
 192:pathfinding.c ****                         pqSize++;
 1221              		.loc 1 192 0
 1222 05a6 07F5B553 		add	r3, r7, #5792
 1223 05aa 03F10C03 		add	r3, r3, #12
 1224 05ae 1B68     		ldr	r3, [r3]
 1225 05b0 0133     		adds	r3, r3, #1
 1226 05b2 07F5B552 		add	r2, r7, #5792
 1227 05b6 02F10C02 		add	r2, r2, #12
 1228 05ba 1360     		str	r3, [r2]
 1229              	.L35:
 1230              	.LBE14:
 1231              	.LBE13:
 176:pathfinding.c ****                 int newRow = row + moves[i].row;
 1232              		.loc 1 176 0 discriminator 2
 1233 05bc 07F5B453 		add	r3, r7, #5760
 1234 05c0 03F11403 		add	r3, r3, #20
 1235 05c4 1B68     		ldr	r3, [r3]
 1236 05c6 0133     		adds	r3, r3, #1
 1237 05c8 07F5B452 		add	r2, r7, #5760
 1238 05cc 02F11402 		add	r2, r2, #20
 1239 05d0 1360     		str	r3, [r2]
 1240              	.L34:
 176:pathfinding.c ****                 int newRow = row + moves[i].row;
 1241              		.loc 1 176 0 is_stmt 0 discriminator 1
 1242 05d2 07F5B453 		add	r3, r7, #5760
 1243 05d6 03F11403 		add	r3, r3, #20
 1244 05da 1B68     		ldr	r3, [r3]
 1245 05dc 032B     		cmp	r3, #3
 1246 05de 7FF6F8AE 		bls	.L36
 1247              	.L27:
 1248              	.LBE12:
 1249              	.LBE10:
 155:pathfinding.c ****         int idx = 0;
 1250              		.loc 1 155 0 is_stmt 1
 1251 05e2 07F5B553 		add	r3, r7, #5792
 1252 05e6 03F10C03 		add	r3, r3, #12
 1253 05ea 1B68     		ldr	r3, [r3]
 1254 05ec 002B     		cmp	r3, #0
 1255 05ee 3FF702AE 		bgt	.L37
 1256 05f2 00E0     		b	.L33
 1257              	.L43:
 1258              	.LBB15:
 173:pathfinding.c ****             }
 1259              		.loc 1 173 0
 1260 05f4 00BF     		nop
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 27


 1261              	.L33:
 1262              	.LBE15:
 193:pathfinding.c ****                     }
 194:pathfinding.c ****                 }
 195:pathfinding.c ****             }
 196:pathfinding.c ****         }
 197:pathfinding.c ****     }
 198:pathfinding.c **** 
 199:pathfinding.c ****     // PATH RECONSTRUCTION
 200:pathfinding.c ****     // initialise maximum distance- will be decremented
 201:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1263              		.loc 1 201 0
 1264 05f6 07F5B653 		add	r3, r7, #5824
 1265 05fa 03F10C03 		add	r3, r3, #12
 1266 05fe 1968     		ldr	r1, [r3]
 1267 0600 07F5B653 		add	r3, r7, #5824
 1268 0604 03F11003 		add	r3, r3, #16
 1269 0608 1868     		ldr	r0, [r3]
 1270 060a 07F13802 		add	r2, r7, #56
 1271 060e 1C3A     		subs	r2, r2, #28
 1272 0610 0B46     		mov	r3, r1
 1273 0612 DB00     		lsls	r3, r3, #3
 1274 0614 0B44     		add	r3, r3, r1
 1275 0616 5B00     		lsls	r3, r3, #1
 1276 0618 0B44     		add	r3, r3, r1
 1277 061a 0344     		add	r3, r3, r0
 1278 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1279 0620 07F5B452 		add	r2, r7, #5760
 1280 0624 02F11002 		add	r2, r2, #16
 1281 0628 1360     		str	r3, [r2]
 202:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1282              		.loc 1 202 0
 1283 062a 3B4A     		ldr	r2, .L44+4
 1284 062c 07F5B453 		add	r3, r7, #5760
 1285 0630 03F11003 		add	r3, r3, #16
 1286 0634 1B68     		ldr	r3, [r3]
 1287 0636 1360     		str	r3, [r2]
 203:pathfinding.c ****     // retsteps can be generated from here
 204:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1288              		.loc 1 204 0
 1289 0638 07F5B453 		add	r3, r7, #5760
 1290 063c 03F11003 		add	r3, r3, #16
 1291 0640 1B68     		ldr	r3, [r3]
 1292 0642 DB00     		lsls	r3, r3, #3
 1293 0644 1846     		mov	r0, r3
 1294 0646 FFF7FEFF 		bl	malloc
 1295 064a 0346     		mov	r3, r0
 1296 064c 07F5B352 		add	r2, r7, #5728
 1297 0650 02F10802 		add	r2, r2, #8
 1298 0654 1360     		str	r3, [r2]
 205:pathfinding.c ****     int currentRow = targetlocation.row;
 1299              		.loc 1 205 0
 1300 0656 07F5B653 		add	r3, r7, #5824
 1301 065a 03F10C03 		add	r3, r3, #12
 1302 065e 1B68     		ldr	r3, [r3]
 1303 0660 07F5B452 		add	r2, r7, #5760
 1304 0664 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 28


 1305 0668 1360     		str	r3, [r2]
 206:pathfinding.c ****     int currentCol = targetlocation.col;
 1306              		.loc 1 206 0
 1307 066a 07F5B653 		add	r3, r7, #5824
 1308 066e 03F11003 		add	r3, r3, #16
 1309 0672 1B68     		ldr	r3, [r3]
 1310 0674 07F5B452 		add	r2, r7, #5760
 1311 0678 02F10802 		add	r2, r2, #8
 1312 067c 1360     		str	r3, [r2]
 207:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1313              		.loc 1 207 0
 1314 067e 07F5B453 		add	r3, r7, #5760
 1315 0682 03F11003 		add	r3, r3, #16
 1316 0686 1B68     		ldr	r3, [r3]
 1317 0688 03F10053 		add	r3, r3, #536870912
 1318 068c 013B     		subs	r3, r3, #1
 1319 068e DB00     		lsls	r3, r3, #3
 1320 0690 07F5B352 		add	r2, r7, #5728
 1321 0694 02F10802 		add	r2, r2, #8
 1322 0698 1268     		ldr	r2, [r2]
 1323 069a 1344     		add	r3, r3, r2
 1324 069c 07F5B452 		add	r2, r7, #5760
 1325 06a0 02F10C02 		add	r2, r2, #12
 1326 06a4 1268     		ldr	r2, [r2]
 1327 06a6 1A60     		str	r2, [r3]
 208:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1328              		.loc 1 208 0
 1329 06a8 07F5B453 		add	r3, r7, #5760
 1330 06ac 03F11003 		add	r3, r3, #16
 1331 06b0 1B68     		ldr	r3, [r3]
 1332 06b2 03F10053 		add	r3, r3, #536870912
 1333 06b6 013B     		subs	r3, r3, #1
 1334 06b8 DB00     		lsls	r3, r3, #3
 1335 06ba 07F5B352 		add	r2, r7, #5728
 1336 06be 02F10802 		add	r2, r2, #8
 1337 06c2 1268     		ldr	r2, [r2]
 1338 06c4 1344     		add	r3, r3, r2
 1339 06c6 07F5B452 		add	r2, r7, #5760
 1340 06ca 02F10802 		add	r2, r2, #8
 1341 06ce 1268     		ldr	r2, [r2]
 1342 06d0 5A60     		str	r2, [r3, #4]
 209:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1343              		.loc 1 209 0
 1344 06d2 07F5B453 		add	r3, r7, #5760
 1345 06d6 03F10C03 		add	r3, r3, #12
 1346 06da 1B68     		ldr	r3, [r3]
 1347 06dc 4C22     		movs	r2, #76
 1348 06de 02FB03F2 		mul	r2, r2, r3
 1349 06e2 07F11803 		add	r3, r7, #24
 1350 06e6 0C3B     		subs	r3, r3, #12
 1351 06e8 1B68     		ldr	r3, [r3]
 1352 06ea 1344     		add	r3, r3, r2
 1353 06ec 07F5B452 		add	r2, r7, #5760
 1354 06f0 02F10802 		add	r2, r2, #8
 1355 06f4 1268     		ldr	r2, [r2]
 1356 06f6 0921     		movs	r1, #9
 1357 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 29


 210:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 211:pathfinding.c ****     int pathIndex = 0;
 1358              		.loc 1 211 0
 1359 06fc 0023     		movs	r3, #0
 1360 06fe 07F5B452 		add	r2, r7, #5760
 1361 0702 02F10402 		add	r2, r2, #4
 1362 0706 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****     while(shortestDist > 0) {    
 1363              		.loc 1 213 0
 1364 0708 0BE1     		b	.L38
 1365              	.L42:
 1366              	.LBB16:
 214:pathfinding.c ****         // make a move, check if valid and is the next step in path
 215:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1367              		.loc 1 215 0
 1368 070a 0023     		movs	r3, #0
 1369 070c 07F5B452 		add	r2, r7, #5760
 1370 0710 1360     		str	r3, [r2]
 1371 0712 00E1     		b	.L39
 1372              	.L45:
 1373              		.align	2
 1374              	.L44:
 1375 0714 00000000 		.word	moves
 1376 0718 882C0000 		.word	numSteps
 1377              	.L41:
 1378              	.LBB17:
 216:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1379              		.loc 1 216 0
 1380 071c 894A     		ldr	r2, .L46
 1381 071e 07F5B453 		add	r3, r7, #5760
 1382 0722 1B68     		ldr	r3, [r3]
 1383 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1384 0728 07F5B453 		add	r3, r7, #5760
 1385 072c 03F10C03 		add	r3, r3, #12
 1386 0730 1B68     		ldr	r3, [r3]
 1387 0732 1344     		add	r3, r3, r2
 1388 0734 07F5B352 		add	r2, r7, #5728
 1389 0738 02F10402 		add	r2, r2, #4
 1390 073c 1360     		str	r3, [r2]
 217:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1391              		.loc 1 217 0
 1392 073e 814A     		ldr	r2, .L46
 1393 0740 07F5B453 		add	r3, r7, #5760
 1394 0744 1B68     		ldr	r3, [r3]
 1395 0746 DB00     		lsls	r3, r3, #3
 1396 0748 1344     		add	r3, r3, r2
 1397 074a 5A68     		ldr	r2, [r3, #4]
 1398 074c 07F5B453 		add	r3, r7, #5760
 1399 0750 03F10803 		add	r3, r3, #8
 1400 0754 1B68     		ldr	r3, [r3]
 1401 0756 1344     		add	r3, r3, r2
 1402 0758 07F5B352 		add	r2, r7, #5728
 1403 075c 1360     		str	r3, [r2]
 218:pathfinding.c **** 
 219:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1404              		.loc 1 219 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 30


 1405 075e 07F11803 		add	r3, r7, #24
 1406 0762 0C3B     		subs	r3, r3, #12
 1407 0764 1B68     		ldr	r3, [r3]
 1408 0766 0093     		str	r3, [sp]
 1409 0768 1323     		movs	r3, #19
 1410 076a 0F22     		movs	r2, #15
 1411 076c 07F5B351 		add	r1, r7, #5728
 1412 0770 0968     		ldr	r1, [r1]
 1413 0772 07F5B350 		add	r0, r7, #5728
 1414 0776 00F10400 		add	r0, r0, #4
 1415 077a 0068     		ldr	r0, [r0]
 1416 077c FFF7FEFF 		bl	isValidMove
 1417 0780 0346     		mov	r3, r0
 1418 0782 002B     		cmp	r3, #0
 1419 0784 00F0C080 		beq	.L40
 1420              		.loc 1 219 0 is_stmt 0 discriminator 1
 1421 0788 07F13802 		add	r2, r7, #56
 1422 078c 1C3A     		subs	r2, r2, #28
 1423 078e 07F5B353 		add	r3, r7, #5728
 1424 0792 03F10403 		add	r3, r3, #4
 1425 0796 1968     		ldr	r1, [r3]
 1426 0798 0B46     		mov	r3, r1
 1427 079a DB00     		lsls	r3, r3, #3
 1428 079c 0B44     		add	r3, r3, r1
 1429 079e 5B00     		lsls	r3, r3, #1
 1430 07a0 0B44     		add	r3, r3, r1
 1431 07a2 07F5B351 		add	r1, r7, #5728
 1432 07a6 0968     		ldr	r1, [r1]
 1433 07a8 0B44     		add	r3, r3, r1
 1434 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1435 07ae 07F5B453 		add	r3, r7, #5760
 1436 07b2 03F11003 		add	r3, r3, #16
 1437 07b6 1B68     		ldr	r3, [r3]
 1438 07b8 013B     		subs	r3, r3, #1
 1439 07ba 9A42     		cmp	r2, r3
 1440 07bc 40F0A480 		bne	.L40
 220:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1441              		.loc 1 220 0 is_stmt 1
 1442 07c0 07F5B353 		add	r3, r7, #5728
 1443 07c4 03F10403 		add	r3, r3, #4
 1444 07c8 1B68     		ldr	r3, [r3]
 1445 07ca 4C22     		movs	r2, #76
 1446 07cc 02FB03F2 		mul	r2, r2, r3
 1447 07d0 07F11803 		add	r3, r7, #24
 1448 07d4 0C3B     		subs	r3, r3, #12
 1449 07d6 1B68     		ldr	r3, [r3]
 1450 07d8 1344     		add	r3, r3, r2
 1451 07da 07F5B352 		add	r2, r7, #5728
 1452 07de 1268     		ldr	r2, [r2]
 1453 07e0 0821     		movs	r1, #8
 1454 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 221:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1455              		.loc 1 221 0
 1456 07e6 5849     		ldr	r1, .L46+4
 1457 07e8 07F5B453 		add	r3, r7, #5760
 1458 07ec 03F10403 		add	r3, r3, #4
 1459 07f0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 31


 1460 07f2 07F5B352 		add	r2, r7, #5728
 1461 07f6 02F10402 		add	r2, r2, #4
 1462 07fa 1268     		ldr	r2, [r2]
 1463 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 222:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1464              		.loc 1 222 0
 1465 0800 514A     		ldr	r2, .L46+4
 1466 0802 07F5B453 		add	r3, r7, #5760
 1467 0806 03F10403 		add	r3, r3, #4
 1468 080a 1B68     		ldr	r3, [r3]
 1469 080c DB00     		lsls	r3, r3, #3
 1470 080e 1344     		add	r3, r3, r2
 1471 0810 07F5B352 		add	r2, r7, #5728
 1472 0814 1268     		ldr	r2, [r2]
 1473 0816 5A60     		str	r2, [r3, #4]
 223:pathfinding.c ****                 pathIndex++;
 1474              		.loc 1 223 0
 1475 0818 07F5B453 		add	r3, r7, #5760
 1476 081c 03F10403 		add	r3, r3, #4
 1477 0820 1B68     		ldr	r3, [r3]
 1478 0822 0133     		adds	r3, r3, #1
 1479 0824 07F5B452 		add	r2, r7, #5760
 1480 0828 02F10402 		add	r2, r2, #4
 1481 082c 1360     		str	r3, [r2]
 224:pathfinding.c ****                 // reverse array somewhere
 225:pathfinding.c **** 
 226:pathfinding.c ****                 shortestDist--; // decrement distance
 1482              		.loc 1 226 0
 1483 082e 07F5B453 		add	r3, r7, #5760
 1484 0832 03F11003 		add	r3, r3, #16
 1485 0836 1B68     		ldr	r3, [r3]
 1486 0838 013B     		subs	r3, r3, #1
 1487 083a 07F5B452 		add	r2, r7, #5760
 1488 083e 02F11002 		add	r2, r2, #16
 1489 0842 1360     		str	r3, [r2]
 227:pathfinding.c ****                 currentRow = newRow; 
 1490              		.loc 1 227 0
 1491 0844 07F5B353 		add	r3, r7, #5728
 1492 0848 03F10403 		add	r3, r3, #4
 1493 084c 1B68     		ldr	r3, [r3]
 1494 084e 07F5B452 		add	r2, r7, #5760
 1495 0852 02F10C02 		add	r2, r2, #12
 1496 0856 1360     		str	r3, [r2]
 228:pathfinding.c ****                 currentCol = newCol; // change current location
 1497              		.loc 1 228 0
 1498 0858 07F5B353 		add	r3, r7, #5728
 1499 085c 1B68     		ldr	r3, [r3]
 1500 085e 07F5B452 		add	r2, r7, #5760
 1501 0862 02F10802 		add	r2, r2, #8
 1502 0866 1360     		str	r3, [r2]
 229:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1503              		.loc 1 229 0
 1504 0868 07F5B453 		add	r3, r7, #5760
 1505 086c 03F11003 		add	r3, r3, #16
 1506 0870 1B68     		ldr	r3, [r3]
 1507 0872 DB00     		lsls	r3, r3, #3
 1508 0874 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 32


 1509 0878 02F10802 		add	r2, r2, #8
 1510 087c 1268     		ldr	r2, [r2]
 1511 087e 1344     		add	r3, r3, r2
 1512 0880 07F5B452 		add	r2, r7, #5760
 1513 0884 02F10C02 		add	r2, r2, #12
 1514 0888 1268     		ldr	r2, [r2]
 1515 088a 1A60     		str	r2, [r3]
 230:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1516              		.loc 1 230 0
 1517 088c 07F5B453 		add	r3, r7, #5760
 1518 0890 03F11003 		add	r3, r3, #16
 1519 0894 1B68     		ldr	r3, [r3]
 1520 0896 DB00     		lsls	r3, r3, #3
 1521 0898 07F5B352 		add	r2, r7, #5728
 1522 089c 02F10802 		add	r2, r2, #8
 1523 08a0 1268     		ldr	r2, [r2]
 1524 08a2 1344     		add	r3, r3, r2
 1525 08a4 07F5B452 		add	r2, r7, #5760
 1526 08a8 02F10802 		add	r2, r2, #8
 1527 08ac 1268     		ldr	r2, [r2]
 1528 08ae 5A60     		str	r2, [r3, #4]
 231:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1529              		.loc 1 231 0
 1530 08b0 07F11803 		add	r3, r7, #24
 1531 08b4 143B     		subs	r3, r3, #20
 1532 08b6 1A68     		ldr	r2, [r3]
 1533 08b8 07F5B453 		add	r3, r7, #5760
 1534 08bc 03F10C03 		add	r3, r3, #12
 1535 08c0 1B68     		ldr	r3, [r3]
 1536 08c2 9A42     		cmp	r2, r3
 1537 08c4 20D1     		bne	.L40
 1538              		.loc 1 231 0 is_stmt 0 discriminator 1
 1539 08c6 07F11803 		add	r3, r7, #24
 1540 08ca 143B     		subs	r3, r3, #20
 1541 08cc 5A68     		ldr	r2, [r3, #4]
 1542 08ce 07F5B453 		add	r3, r7, #5760
 1543 08d2 03F10803 		add	r3, r3, #8
 1544 08d6 1B68     		ldr	r3, [r3]
 1545 08d8 9A42     		cmp	r2, r3
 1546 08da 15D1     		bne	.L40
 232:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1547              		.loc 1 232 0 is_stmt 1
 1548 08dc 07F5B453 		add	r3, r7, #5760
 1549 08e0 03F10C03 		add	r3, r3, #12
 1550 08e4 1B68     		ldr	r3, [r3]
 1551 08e6 4C22     		movs	r2, #76
 1552 08e8 02FB03F2 		mul	r2, r2, r3
 1553 08ec 07F11803 		add	r3, r7, #24
 1554 08f0 0C3B     		subs	r3, r3, #12
 1555 08f2 1B68     		ldr	r3, [r3]
 1556 08f4 1344     		add	r3, r3, r2
 1557 08f6 07F5B452 		add	r2, r7, #5760
 1558 08fa 02F10802 		add	r2, r2, #8
 1559 08fe 1268     		ldr	r2, [r2]
 1560 0900 0221     		movs	r1, #2
 1561 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 233:pathfinding.c ****                     break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 33


 1562              		.loc 1 233 0
 1563 0906 0CE0     		b	.L38
 1564              	.L40:
 1565              	.LBE17:
 215:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1566              		.loc 1 215 0 discriminator 2
 1567 0908 07F5B453 		add	r3, r7, #5760
 1568 090c 1B68     		ldr	r3, [r3]
 1569 090e 0133     		adds	r3, r3, #1
 1570 0910 07F5B452 		add	r2, r7, #5760
 1571 0914 1360     		str	r3, [r2]
 1572              	.L39:
 215:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1573              		.loc 1 215 0 is_stmt 0 discriminator 1
 1574 0916 07F5B453 		add	r3, r7, #5760
 1575 091a 1B68     		ldr	r3, [r3]
 1576 091c 032B     		cmp	r3, #3
 1577 091e 7FF6FDAE 		bls	.L41
 1578              	.L38:
 1579              	.LBE16:
 213:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1580              		.loc 1 213 0 is_stmt 1
 1581 0922 07F5B453 		add	r3, r7, #5760
 1582 0926 03F11003 		add	r3, r3, #16
 1583 092a 1B68     		ldr	r3, [r3]
 1584 092c 002B     		cmp	r3, #0
 1585 092e 3FF7ECAE 		bgt	.L42
 234:pathfinding.c ****                 }   
 235:pathfinding.c ****             }
 236:pathfinding.c ****         }
 237:pathfinding.c ****     }
 238:pathfinding.c **** }
 1586              		.loc 1 238 0
 1587 0932 00BF     		nop
 1588 0934 07F5B557 		add	r7, r7, #5792
 1589 0938 1C37     		adds	r7, r7, #28
 1590              		.cfi_def_cfa_offset 20
 1591 093a BD46     		mov	sp, r7
 1592              		.cfi_def_cfa_register 13
 1593              		@ sp needed
 1594 093c BDE89040 		pop	{r4, r7, lr}
 1595              		.cfi_restore 14
 1596              		.cfi_restore 7
 1597              		.cfi_restore 4
 1598              		.cfi_def_cfa_offset 8
 1599 0940 02B0     		add	sp, sp, #8
 1600              		.cfi_def_cfa_offset 0
 1601 0942 7047     		bx	lr
 1602              	.L47:
 1603              		.align	2
 1604              	.L46:
 1605 0944 00000000 		.word	moves
 1606 0948 00000000 		.word	list_of_optimal_coordinates
 1607              		.cfi_endproc
 1608              	.LFE4:
 1609              		.size	dijkstra, .-dijkstra
 1610              		.global	ignoreR
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 34


 1611              		.bss
 1612              		.align	2
 1613              		.type	ignoreR, %object
 1614              		.size	ignoreR, 4
 1615              	ignoreR:
 1616 2c8c 00000000 		.space	4
 1617              		.global	ignoreL
 1618              		.align	2
 1619              		.type	ignoreL, %object
 1620              		.size	ignoreL, 4
 1621              	ignoreL:
 1622 2c90 00000000 		.space	4
 1623              		.global	distanceToTarget
 1624              		.data
 1625              		.align	2
 1626              		.type	distanceToTarget, %object
 1627              		.size	distanceToTarget, 4
 1628              	distanceToTarget:
 1629 04c8 C97D2704 		.word	69696969
 1630              		.section	.text.getPathInstructions,"ax",%progbits
 1631              		.align	2
 1632              		.global	getPathInstructions
 1633              		.thumb
 1634              		.thumb_func
 1635              		.type	getPathInstructions, %function
 1636              	getPathInstructions:
 1637              	.LFB5:
 239:pathfinding.c **** 
 240:pathfinding.c **** // PATHFINDING PROCESSING *====================
 241:pathfinding.c **** 
 242:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 243:pathfinding.c **** int distanceToTarget = 69696969;
 244:pathfinding.c **** 
 245:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 246:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1638              		.loc 1 246 0
 1639              		.cfi_startproc
 1640              		@ args = 8, pretend = 0, frame = 80
 1641              		@ frame_needed = 1, uses_anonymous_args = 0
 1642 0000 80B5     		push	{r7, lr}
 1643              		.cfi_def_cfa_offset 8
 1644              		.cfi_offset 7, -8
 1645              		.cfi_offset 14, -4
 1646 0002 94B0     		sub	sp, sp, #80
 1647              		.cfi_def_cfa_offset 88
 1648 0004 00AF     		add	r7, sp, #0
 1649              		.cfi_def_cfa_register 7
 1650 0006 F860     		str	r0, [r7, #12]
 1651 0008 B960     		str	r1, [r7, #8]
 1652 000a 3946     		mov	r1, r7
 1653 000c 81E80C00 		stmia	r1, {r2, r3}
 247:pathfinding.c ****     int currentRow = startLocation.row; 
 1654              		.loc 1 247 0
 1655 0010 3B68     		ldr	r3, [r7]
 1656 0012 FB64     		str	r3, [r7, #76]
 248:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1657              		.loc 1 248 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 35


 1658 0014 7B68     		ldr	r3, [r7, #4]
 1659 0016 BB64     		str	r3, [r7, #72]
 249:pathfinding.c ****     int listIndex = 0;
 1660              		.loc 1 249 0
 1661 0018 0023     		movs	r3, #0
 1662 001a 7B64     		str	r3, [r7, #68]
 250:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1663              		.loc 1 250 0
 1664 001c BB6D     		ldr	r3, [r7, #88]
 1665 001e FA6D     		ldr	r2, [r7, #92]
 1666 0020 1146     		mov	r1, r2
 1667 0022 1846     		mov	r0, r3
 1668 0024 FFF7FEFF 		bl	getTargetOrientation
 1669 0028 0346     		mov	r3, r0
 1670 002a 3B61     		str	r3, [r7, #16]
 251:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 252:pathfinding.c ****     while(numSteps >= 0) {
 1671              		.loc 1 252 0
 1672 002c 5FE2     		b	.L49
 1673              	.L106:
 1674              	.LBB18:
 253:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1675              		.loc 1 253 0
 1676 002e 924B     		ldr	r3, .L111
 1677 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1678 0032 BA6C     		ldr	r2, [r7, #72]
 1679 0034 F96C     		ldr	r1, [r7, #76]
 1680 0036 1846     		mov	r0, r3
 1681 0038 FFF7FEFF 		bl	checkIgnoreTurn
 254:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1682              		.loc 1 254 0
 1683 003c FB6C     		ldr	r3, [r7, #76]
 1684 003e 4C22     		movs	r2, #76
 1685 0040 02FB03F3 		mul	r3, r2, r3
 1686 0044 FA68     		ldr	r2, [r7, #12]
 1687 0046 1344     		add	r3, r3, r2
 1688 0048 BA6C     		ldr	r2, [r7, #72]
 1689 004a 0021     		movs	r1, #0
 1690 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 255:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
 1691              		.loc 1 255 0
 1692 0050 894B     		ldr	r3, .L111
 1693 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1694 0054 894B     		ldr	r3, .L111+4
 1695 0056 1A70     		strb	r2, [r3]
 256:pathfinding.c ****         enum InstructionDirection newDirection;
 257:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1696              		.loc 1 257 0
 1697 0058 B96C     		ldr	r1, [r7, #72]
 1698 005a F86C     		ldr	r0, [r7, #76]
 1699 005c FFF7FEFF 		bl	checkPathDirection
 1700 0060 0346     		mov	r3, r0
 1701 0062 FB63     		str	r3, [r7, #60]
 258:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1702              		.loc 1 258 0
 1703 0064 BA6D     		ldr	r2, [r7, #88]
 1704 0066 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 36


 1705 0068 9A42     		cmp	r2, r3
 1706 006a 08D1     		bne	.L50
 1707              		.loc 1 258 0 is_stmt 0 discriminator 1
 1708 006c FA6D     		ldr	r2, [r7, #92]
 1709 006e BB6C     		ldr	r3, [r7, #72]
 1710 0070 9A42     		cmp	r2, r3
 1711 0072 04D1     		bne	.L50
 259:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1712              		.loc 1 259 0 is_stmt 1
 1713 0074 0523     		movs	r3, #5
 1714 0076 87F84330 		strb	r3, [r7, #67]
 260:pathfinding.c ****             nextStep = 5;
 1715              		.loc 1 260 0
 1716 007a 0523     		movs	r3, #5
 1717 007c FB63     		str	r3, [r7, #60]
 1718              	.L50:
 261:pathfinding.c ****         }
 262:pathfinding.c ****         switch (nextStep) {
 1719              		.loc 1 262 0
 1720 007e FB6B     		ldr	r3, [r7, #60]
 1721 0080 032B     		cmp	r3, #3
 1722 0082 00F2F381 		bhi	.L110
 1723 0086 01A2     		adr	r2, .L53
 1724 0088 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1725              		.p2align 2
 1726              	.L53:
 1727 008c 9D000000 		.word	.L52+1
 1728 0090 87010000 		.word	.L54+1
 1729 0094 8D020000 		.word	.L55+1
 1730 0098 7F030000 		.word	.L56+1
 1731              		.p2align 1
 1732              	.L52:
 263:pathfinding.c ****             case 0: // next step is up                
 264:pathfinding.c ****                 currentRobotOrientation = Up;
 1733              		.loc 1 264 0
 1734 009c 764B     		ldr	r3, .L111
 1735 009e 0022     		movs	r2, #0
 1736 00a0 1A70     		strb	r2, [r3]
 265:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1737              		.loc 1 265 0
 1738 00a2 764B     		ldr	r3, .L111+4
 1739 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1740 00a6 022B     		cmp	r3, #2
 1741 00a8 08D1     		bne	.L57
 266:pathfinding.c ****                     newDirection = waitForRightTurn;
 1742              		.loc 1 266 0
 1743 00aa 0223     		movs	r3, #2
 1744 00ac 87F84330 		strb	r3, [r7, #67]
 267:pathfinding.c ****                     ignoreL = 0;
 1745              		.loc 1 267 0
 1746 00b0 734B     		ldr	r3, .L111+8
 1747 00b2 0022     		movs	r2, #0
 1748 00b4 1A60     		str	r2, [r3]
 268:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1749              		.loc 1 268 0
 1750 00b6 734B     		ldr	r3, .L111+12
 1751 00b8 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 37


 1752 00ba 1A60     		str	r2, [r3]
 1753              	.L57:
 269:pathfinding.c ****                 } 
 270:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1754              		.loc 1 270 0
 1755 00bc 6F4B     		ldr	r3, .L111+4
 1756 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1757 00c0 032B     		cmp	r3, #3
 1758 00c2 08D1     		bne	.L58
 271:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1759              		.loc 1 271 0
 1760 00c4 0123     		movs	r3, #1
 1761 00c6 87F84330 		strb	r3, [r7, #67]
 272:pathfinding.c ****                     ignoreL = 0;
 1762              		.loc 1 272 0
 1763 00ca 6D4B     		ldr	r3, .L111+8
 1764 00cc 0022     		movs	r2, #0
 1765 00ce 1A60     		str	r2, [r3]
 273:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1766              		.loc 1 273 0
 1767 00d0 6C4B     		ldr	r3, .L111+12
 1768 00d2 0022     		movs	r2, #0
 1769 00d4 1A60     		str	r2, [r3]
 1770              	.L58:
 274:pathfinding.c ****                 }
 275:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1771              		.loc 1 275 0
 1772 00d6 694B     		ldr	r3, .L111+4
 1773 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1774 00da 002B     		cmp	r3, #0
 1775 00dc 48D1     		bne	.L59
 276:pathfinding.c ****                     // check if we only need to go forward to reach target
 277:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1776              		.loc 1 277 0
 1777 00de 3A69     		ldr	r2, [r7, #16]
 1778 00e0 FB6B     		ldr	r3, [r7, #60]
 1779 00e2 9A42     		cmp	r2, r3
 1780 00e4 41D1     		bne	.L60
 1781              		.loc 1 277 0 is_stmt 0 discriminator 1
 1782 00e6 FA6D     		ldr	r2, [r7, #92]
 1783 00e8 BB6C     		ldr	r3, [r7, #72]
 1784 00ea 9A42     		cmp	r2, r3
 1785 00ec 3DD1     		bne	.L60
 1786              	.LBB19:
 278:pathfinding.c ****                         int atTarget = 1;
 1787              		.loc 1 278 0 is_stmt 1
 1788 00ee 0123     		movs	r3, #1
 1789 00f0 BB63     		str	r3, [r7, #56]
 1790              	.LBB20:
 279:pathfinding.c ****                         // check if we only need to go forward to reach target
 280:pathfinding.c ****                         for(int i = 1; i < currentRow-targetLocation.row; i++) {
 1791              		.loc 1 280 0
 1792 00f2 0123     		movs	r3, #1
 1793 00f4 7B63     		str	r3, [r7, #52]
 1794 00f6 27E0     		b	.L61
 1795              	.L65:
 281:pathfinding.c ****                             // check columns in front to see if there are any obstacles
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 38


 282:pathfinding.c ****                             if(map[currentRow - i][currentCol] == 1) {
 1796              		.loc 1 282 0
 1797 00f8 FA6C     		ldr	r2, [r7, #76]
 1798 00fa 7B6B     		ldr	r3, [r7, #52]
 1799 00fc D31A     		subs	r3, r2, r3
 1800 00fe 1A46     		mov	r2, r3
 1801 0100 4C23     		movs	r3, #76
 1802 0102 03FB02F3 		mul	r3, r3, r2
 1803 0106 FA68     		ldr	r2, [r7, #12]
 1804 0108 1344     		add	r3, r3, r2
 1805 010a BA6C     		ldr	r2, [r7, #72]
 1806 010c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1807 0110 012B     		cmp	r3, #1
 1808 0112 02D1     		bne	.L62
 283:pathfinding.c ****                                 atTarget = 0;
 1809              		.loc 1 283 0
 1810 0114 0023     		movs	r3, #0
 1811 0116 BB63     		str	r3, [r7, #56]
 284:pathfinding.c ****                                 break;
 1812              		.loc 1 284 0
 1813 0118 1CE0     		b	.L63
 1814              	.L62:
 285:pathfinding.c ****                             }
 286:pathfinding.c ****                             if(map[currentRow - i][currentCol] == 9) {
 1815              		.loc 1 286 0
 1816 011a FA6C     		ldr	r2, [r7, #76]
 1817 011c 7B6B     		ldr	r3, [r7, #52]
 1818 011e D31A     		subs	r3, r2, r3
 1819 0120 1A46     		mov	r2, r3
 1820 0122 4C23     		movs	r3, #76
 1821 0124 03FB02F3 		mul	r3, r3, r2
 1822 0128 FA68     		ldr	r2, [r7, #12]
 1823 012a 1344     		add	r3, r3, r2
 1824 012c BA6C     		ldr	r2, [r7, #72]
 1825 012e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1826 0132 092B     		cmp	r3, #9
 1827 0134 05D1     		bne	.L64
 287:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 1828              		.loc 1 287 0
 1829 0136 0123     		movs	r3, #1
 1830 0138 BB63     		str	r3, [r7, #56]
 288:pathfinding.c ****                                 distanceToTarget = i;
 1831              		.loc 1 288 0
 1832 013a 534A     		ldr	r2, .L111+16
 1833 013c 7B6B     		ldr	r3, [r7, #52]
 1834 013e 1360     		str	r3, [r2]
 289:pathfinding.c ****                                 break;
 1835              		.loc 1 289 0
 1836 0140 08E0     		b	.L63
 1837              	.L64:
 280:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1838              		.loc 1 280 0 discriminator 2
 1839 0142 7B6B     		ldr	r3, [r7, #52]
 1840 0144 0133     		adds	r3, r3, #1
 1841 0146 7B63     		str	r3, [r7, #52]
 1842              	.L61:
 280:pathfinding.c ****                             // check columns in front to see if there are any obstacles
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 39


 1843              		.loc 1 280 0 is_stmt 0 discriminator 1
 1844 0148 BB6D     		ldr	r3, [r7, #88]
 1845 014a FA6C     		ldr	r2, [r7, #76]
 1846 014c D21A     		subs	r2, r2, r3
 1847 014e 7B6B     		ldr	r3, [r7, #52]
 1848 0150 9A42     		cmp	r2, r3
 1849 0152 D1DC     		bgt	.L65
 1850              	.L63:
 1851              	.LBE20:
 290:pathfinding.c ****                             }
 291:pathfinding.c ****                         }
 292:pathfinding.c ****                         if(atTarget) {
 1852              		.loc 1 292 0 is_stmt 1
 1853 0154 BB6B     		ldr	r3, [r7, #56]
 1854 0156 002B     		cmp	r3, #0
 1855 0158 03D0     		beq	.L66
 293:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 1856              		.loc 1 293 0
 1857 015a 0423     		movs	r3, #4
 1858 015c 87F84330 		strb	r3, [r7, #67]
 1859              	.LBE19:
 277:pathfinding.c ****                         int atTarget = 1;
 1860              		.loc 1 277 0
 1861 0160 06E0     		b	.L59
 1862              	.L66:
 1863              	.LBB21:
 294:pathfinding.c ****                         } else {
 295:pathfinding.c ****                             newDirection = GoForward;
 1864              		.loc 1 295 0
 1865 0162 0023     		movs	r3, #0
 1866 0164 87F84330 		strb	r3, [r7, #67]
 1867              	.LBE21:
 277:pathfinding.c ****                         int atTarget = 1;
 1868              		.loc 1 277 0
 1869 0168 02E0     		b	.L59
 1870              	.L60:
 296:pathfinding.c ****                         }
 297:pathfinding.c ****                     } else {
 298:pathfinding.c ****                         newDirection = GoForward;
 1871              		.loc 1 298 0
 1872 016a 0023     		movs	r3, #0
 1873 016c 87F84330 		strb	r3, [r7, #67]
 1874              	.L59:
 299:pathfinding.c ****                     }
 300:pathfinding.c ****                 }
 301:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1875              		.loc 1 301 0
 1876 0170 424B     		ldr	r3, .L111+4
 1877 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 0174 012B     		cmp	r3, #1
 1879 0176 02D1     		bne	.L68
 302:pathfinding.c ****                     newDirection = uTurn;
 1880              		.loc 1 302 0
 1881 0178 0323     		movs	r3, #3
 1882 017a 87F84330 		strb	r3, [r7, #67]
 1883              	.L68:
 303:pathfinding.c ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 40


 304:pathfinding.c ****                 currentRow--; // jump to new location
 1884              		.loc 1 304 0
 1885 017e FB6C     		ldr	r3, [r7, #76]
 1886 0180 013B     		subs	r3, r3, #1
 1887 0182 FB64     		str	r3, [r7, #76]
 305:pathfinding.c ****                 break;
 1888              		.loc 1 305 0
 1889 0184 73E1     		b	.L69
 1890              	.L54:
 306:pathfinding.c ****             case 1: // next step is down
 307:pathfinding.c ****                 currentRobotOrientation = Down;
 1891              		.loc 1 307 0
 1892 0186 3C4B     		ldr	r3, .L111
 1893 0188 0122     		movs	r2, #1
 1894 018a 1A70     		strb	r2, [r3]
 308:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1895              		.loc 1 308 0
 1896 018c 3B4B     		ldr	r3, .L111+4
 1897 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1898 0190 032B     		cmp	r3, #3
 1899 0192 08D1     		bne	.L70
 309:pathfinding.c ****                     newDirection = waitForRightTurn;
 1900              		.loc 1 309 0
 1901 0194 0223     		movs	r3, #2
 1902 0196 87F84330 		strb	r3, [r7, #67]
 310:pathfinding.c ****                     ignoreL = 0;
 1903              		.loc 1 310 0
 1904 019a 394B     		ldr	r3, .L111+8
 1905 019c 0022     		movs	r2, #0
 1906 019e 1A60     		str	r2, [r3]
 311:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1907              		.loc 1 311 0
 1908 01a0 384B     		ldr	r3, .L111+12
 1909 01a2 0022     		movs	r2, #0
 1910 01a4 1A60     		str	r2, [r3]
 1911              	.L70:
 312:pathfinding.c ****                 } 
 313:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1912              		.loc 1 313 0
 1913 01a6 354B     		ldr	r3, .L111+4
 1914 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1915 01aa 022B     		cmp	r3, #2
 1916 01ac 08D1     		bne	.L71
 314:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1917              		.loc 1 314 0
 1918 01ae 0123     		movs	r3, #1
 1919 01b0 87F84330 		strb	r3, [r7, #67]
 315:pathfinding.c ****                     ignoreL = 0;
 1920              		.loc 1 315 0
 1921 01b4 324B     		ldr	r3, .L111+8
 1922 01b6 0022     		movs	r2, #0
 1923 01b8 1A60     		str	r2, [r3]
 316:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1924              		.loc 1 316 0
 1925 01ba 324B     		ldr	r3, .L111+12
 1926 01bc 0022     		movs	r2, #0
 1927 01be 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 41


 1928              	.L71:
 317:pathfinding.c ****                 }
 318:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1929              		.loc 1 318 0
 1930 01c0 2E4B     		ldr	r3, .L111+4
 1931 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1932 01c4 012B     		cmp	r3, #1
 1933 01c6 46D1     		bne	.L72
 319:pathfinding.c ****                    if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1934              		.loc 1 319 0
 1935 01c8 3A69     		ldr	r2, [r7, #16]
 1936 01ca FB6B     		ldr	r3, [r7, #60]
 1937 01cc 9A42     		cmp	r2, r3
 1938 01ce 3FD1     		bne	.L73
 1939              		.loc 1 319 0 is_stmt 0 discriminator 1
 1940 01d0 FA6D     		ldr	r2, [r7, #92]
 1941 01d2 BB6C     		ldr	r3, [r7, #72]
 1942 01d4 9A42     		cmp	r2, r3
 1943 01d6 3BD1     		bne	.L73
 1944              	.LBB22:
 320:pathfinding.c ****                         int atTarget = 1;
 1945              		.loc 1 320 0 is_stmt 1
 1946 01d8 0123     		movs	r3, #1
 1947 01da 3B63     		str	r3, [r7, #48]
 1948              	.LBB23:
 321:pathfinding.c ****                         // check if we only need to go forward to reach target
 322:pathfinding.c ****                         for(int i = 1; i < targetLocation.row; i++) {
 1949              		.loc 1 322 0
 1950 01dc 0123     		movs	r3, #1
 1951 01de FB62     		str	r3, [r7, #44]
 1952 01e0 27E0     		b	.L74
 1953              	.L78:
 323:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 324:pathfinding.c ****                             if(map[currentRow + i][currentCol] == 1) {
 1954              		.loc 1 324 0
 1955 01e2 FA6C     		ldr	r2, [r7, #76]
 1956 01e4 FB6A     		ldr	r3, [r7, #44]
 1957 01e6 1344     		add	r3, r3, r2
 1958 01e8 1A46     		mov	r2, r3
 1959 01ea 4C23     		movs	r3, #76
 1960 01ec 03FB02F3 		mul	r3, r3, r2
 1961 01f0 FA68     		ldr	r2, [r7, #12]
 1962 01f2 1344     		add	r3, r3, r2
 1963 01f4 BA6C     		ldr	r2, [r7, #72]
 1964 01f6 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1965 01fa 012B     		cmp	r3, #1
 1966 01fc 02D1     		bne	.L75
 325:pathfinding.c ****                                 atTarget = 0;
 1967              		.loc 1 325 0
 1968 01fe 0023     		movs	r3, #0
 1969 0200 3B63     		str	r3, [r7, #48]
 326:pathfinding.c ****                                 break;
 1970              		.loc 1 326 0
 1971 0202 1AE0     		b	.L76
 1972              	.L75:
 327:pathfinding.c ****                             }
 328:pathfinding.c ****                             if(map[currentRow + i][currentCol] == 9) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 42


 1973              		.loc 1 328 0
 1974 0204 FA6C     		ldr	r2, [r7, #76]
 1975 0206 FB6A     		ldr	r3, [r7, #44]
 1976 0208 1344     		add	r3, r3, r2
 1977 020a 1A46     		mov	r2, r3
 1978 020c 4C23     		movs	r3, #76
 1979 020e 03FB02F3 		mul	r3, r3, r2
 1980 0212 FA68     		ldr	r2, [r7, #12]
 1981 0214 1344     		add	r3, r3, r2
 1982 0216 BA6C     		ldr	r2, [r7, #72]
 1983 0218 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1984 021c 092B     		cmp	r3, #9
 1985 021e 05D1     		bne	.L77
 329:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 1986              		.loc 1 329 0
 1987 0220 0123     		movs	r3, #1
 1988 0222 3B63     		str	r3, [r7, #48]
 330:pathfinding.c ****                                 distanceToTarget = i;
 1989              		.loc 1 330 0
 1990 0224 184A     		ldr	r2, .L111+16
 1991 0226 FB6A     		ldr	r3, [r7, #44]
 1992 0228 1360     		str	r3, [r2]
 331:pathfinding.c ****                                 break;
 1993              		.loc 1 331 0
 1994 022a 06E0     		b	.L76
 1995              	.L77:
 322:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1996              		.loc 1 322 0 discriminator 2
 1997 022c FB6A     		ldr	r3, [r7, #44]
 1998 022e 0133     		adds	r3, r3, #1
 1999 0230 FB62     		str	r3, [r7, #44]
 2000              	.L74:
 322:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2001              		.loc 1 322 0 is_stmt 0 discriminator 1
 2002 0232 BA6D     		ldr	r2, [r7, #88]
 2003 0234 FB6A     		ldr	r3, [r7, #44]
 2004 0236 9A42     		cmp	r2, r3
 2005 0238 D3DC     		bgt	.L78
 2006              	.L76:
 2007              	.LBE23:
 332:pathfinding.c ****                             }
 333:pathfinding.c ****                         }
 334:pathfinding.c ****                         if(atTarget) {
 2008              		.loc 1 334 0 is_stmt 1
 2009 023a 3B6B     		ldr	r3, [r7, #48]
 2010 023c 002B     		cmp	r3, #0
 2011 023e 03D0     		beq	.L79
 335:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2012              		.loc 1 335 0
 2013 0240 0423     		movs	r3, #4
 2014 0242 87F84330 		strb	r3, [r7, #67]
 2015              	.LBE22:
 319:pathfinding.c ****                         int atTarget = 1;
 2016              		.loc 1 319 0
 2017 0246 06E0     		b	.L72
 2018              	.L79:
 2019              	.LBB24:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 43


 336:pathfinding.c ****                         } else {
 337:pathfinding.c ****                             newDirection = GoForward;
 2020              		.loc 1 337 0
 2021 0248 0023     		movs	r3, #0
 2022 024a 87F84330 		strb	r3, [r7, #67]
 2023              	.LBE24:
 319:pathfinding.c ****                         int atTarget = 1;
 2024              		.loc 1 319 0
 2025 024e 02E0     		b	.L72
 2026              	.L73:
 338:pathfinding.c ****                         }
 339:pathfinding.c ****                     }      
 340:pathfinding.c ****                     else {
 341:pathfinding.c ****                         newDirection = GoForward;
 2027              		.loc 1 341 0
 2028 0250 0023     		movs	r3, #0
 2029 0252 87F84330 		strb	r3, [r7, #67]
 2030              	.L72:
 342:pathfinding.c ****                     }
 343:pathfinding.c ****                 }
 344:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2031              		.loc 1 344 0
 2032 0256 094B     		ldr	r3, .L111+4
 2033 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 025a 002B     		cmp	r3, #0
 2035 025c 08D1     		bne	.L81
 345:pathfinding.c ****                     newDirection = uTurn;
 2036              		.loc 1 345 0
 2037 025e 0323     		movs	r3, #3
 2038 0260 87F84330 		strb	r3, [r7, #67]
 346:pathfinding.c ****                     ignoreL = 0;
 2039              		.loc 1 346 0
 2040 0264 064B     		ldr	r3, .L111+8
 2041 0266 0022     		movs	r2, #0
 2042 0268 1A60     		str	r2, [r3]
 347:pathfinding.c ****                     ignoreR = 0;
 2043              		.loc 1 347 0
 2044 026a 064B     		ldr	r3, .L111+12
 2045 026c 0022     		movs	r2, #0
 2046 026e 1A60     		str	r2, [r3]
 2047              	.L81:
 348:pathfinding.c ****                 }
 349:pathfinding.c ****                 currentRow++;
 2048              		.loc 1 349 0
 2049 0270 FB6C     		ldr	r3, [r7, #76]
 2050 0272 0133     		adds	r3, r3, #1
 2051 0274 FB64     		str	r3, [r7, #76]
 350:pathfinding.c ****                 break;
 2052              		.loc 1 350 0
 2053 0276 FAE0     		b	.L69
 2054              	.L112:
 2055              		.align	2
 2056              	.L111:
 2057 0278 00000000 		.word	currentRobotOrientation
 2058 027c 00000000 		.word	previousRobotOrientation
 2059 0280 00000000 		.word	ignoreL
 2060 0284 00000000 		.word	ignoreR
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 44


 2061 0288 00000000 		.word	distanceToTarget
 2062              	.L55:
 351:pathfinding.c ****             case 2: // next step is left
 352:pathfinding.c ****                 currentRobotOrientation = Left;
 2063              		.loc 1 352 0
 2064 028c 9C4B     		ldr	r3, .L113
 2065 028e 0222     		movs	r2, #2
 2066 0290 1A70     		strb	r2, [r3]
 353:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2067              		.loc 1 353 0
 2068 0292 9C4B     		ldr	r3, .L113+4
 2069 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 0296 002B     		cmp	r3, #0
 2071 0298 08D1     		bne	.L82
 354:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2072              		.loc 1 354 0
 2073 029a 0123     		movs	r3, #1
 2074 029c 87F84330 		strb	r3, [r7, #67]
 355:pathfinding.c ****                     ignoreL = 0;
 2075              		.loc 1 355 0
 2076 02a0 994B     		ldr	r3, .L113+8
 2077 02a2 0022     		movs	r2, #0
 2078 02a4 1A60     		str	r2, [r3]
 356:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2079              		.loc 1 356 0
 2080 02a6 994B     		ldr	r3, .L113+12
 2081 02a8 0022     		movs	r2, #0
 2082 02aa 1A60     		str	r2, [r3]
 2083              	.L82:
 357:pathfinding.c ****                 } 
 358:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2084              		.loc 1 358 0
 2085 02ac 954B     		ldr	r3, .L113+4
 2086 02ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2087 02b0 012B     		cmp	r3, #1
 2088 02b2 08D1     		bne	.L83
 359:pathfinding.c ****                     newDirection = waitForRightTurn;
 2089              		.loc 1 359 0
 2090 02b4 0223     		movs	r3, #2
 2091 02b6 87F84330 		strb	r3, [r7, #67]
 360:pathfinding.c ****                     ignoreL = 0;
 2092              		.loc 1 360 0
 2093 02ba 934B     		ldr	r3, .L113+8
 2094 02bc 0022     		movs	r2, #0
 2095 02be 1A60     		str	r2, [r3]
 361:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2096              		.loc 1 361 0
 2097 02c0 924B     		ldr	r3, .L113+12
 2098 02c2 0022     		movs	r2, #0
 2099 02c4 1A60     		str	r2, [r3]
 2100              	.L83:
 362:pathfinding.c ****                 }
 363:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2101              		.loc 1 363 0
 2102 02c6 8F4B     		ldr	r3, .L113+4
 2103 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2104 02ca 022B     		cmp	r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 45


 2105 02cc 46D1     		bne	.L84
 364:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2106              		.loc 1 364 0
 2107 02ce 3A69     		ldr	r2, [r7, #16]
 2108 02d0 FB6B     		ldr	r3, [r7, #60]
 2109 02d2 9A42     		cmp	r2, r3
 2110 02d4 3FD1     		bne	.L85
 2111              		.loc 1 364 0 is_stmt 0 discriminator 1
 2112 02d6 BA6D     		ldr	r2, [r7, #88]
 2113 02d8 FB6C     		ldr	r3, [r7, #76]
 2114 02da 9A42     		cmp	r2, r3
 2115 02dc 3BD1     		bne	.L85
 2116              	.LBB25:
 365:pathfinding.c ****                         int atTarget = 1;
 2117              		.loc 1 365 0 is_stmt 1
 2118 02de 0123     		movs	r3, #1
 2119 02e0 BB62     		str	r3, [r7, #40]
 2120              	.LBB26:
 366:pathfinding.c ****                         // check if we only need to go forward to reach target
 367:pathfinding.c ****                         for(int i = 1; i < currentCol-targetLocation.col; i++) {
 2121              		.loc 1 367 0
 2122 02e2 0123     		movs	r3, #1
 2123 02e4 7B62     		str	r3, [r7, #36]
 2124 02e6 25E0     		b	.L86
 2125              	.L90:
 368:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 369:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2126              		.loc 1 369 0
 2127 02e8 FB6C     		ldr	r3, [r7, #76]
 2128 02ea 4C22     		movs	r2, #76
 2129 02ec 02FB03F3 		mul	r3, r2, r3
 2130 02f0 FA68     		ldr	r2, [r7, #12]
 2131 02f2 1344     		add	r3, r3, r2
 2132 02f4 B96C     		ldr	r1, [r7, #72]
 2133 02f6 7A6A     		ldr	r2, [r7, #36]
 2134 02f8 8A1A     		subs	r2, r1, r2
 2135 02fa 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2136 02fe 012B     		cmp	r3, #1
 2137 0300 02D1     		bne	.L87
 370:pathfinding.c ****                                 atTarget = 0;
 2138              		.loc 1 370 0
 2139 0302 0023     		movs	r3, #0
 2140 0304 BB62     		str	r3, [r7, #40]
 371:pathfinding.c ****                                 break;
 2141              		.loc 1 371 0
 2142 0306 1BE0     		b	.L88
 2143              	.L87:
 372:pathfinding.c ****                             }
 373:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 9) {
 2144              		.loc 1 373 0
 2145 0308 FB6C     		ldr	r3, [r7, #76]
 2146 030a 4C22     		movs	r2, #76
 2147 030c 02FB03F3 		mul	r3, r2, r3
 2148 0310 FA68     		ldr	r2, [r7, #12]
 2149 0312 1344     		add	r3, r3, r2
 2150 0314 B96C     		ldr	r1, [r7, #72]
 2151 0316 7A6A     		ldr	r2, [r7, #36]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 46


 2152 0318 8A1A     		subs	r2, r1, r2
 2153 031a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2154 031e 092B     		cmp	r3, #9
 2155 0320 05D1     		bne	.L89
 374:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2156              		.loc 1 374 0
 2157 0322 0123     		movs	r3, #1
 2158 0324 BB62     		str	r3, [r7, #40]
 375:pathfinding.c ****                                 distanceToTarget = i;
 2159              		.loc 1 375 0
 2160 0326 7A4A     		ldr	r2, .L113+16
 2161 0328 7B6A     		ldr	r3, [r7, #36]
 2162 032a 1360     		str	r3, [r2]
 376:pathfinding.c ****                                 break;
 2163              		.loc 1 376 0
 2164 032c 08E0     		b	.L88
 2165              	.L89:
 367:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2166              		.loc 1 367 0 discriminator 2
 2167 032e 7B6A     		ldr	r3, [r7, #36]
 2168 0330 0133     		adds	r3, r3, #1
 2169 0332 7B62     		str	r3, [r7, #36]
 2170              	.L86:
 367:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2171              		.loc 1 367 0 is_stmt 0 discriminator 1
 2172 0334 FB6D     		ldr	r3, [r7, #92]
 2173 0336 BA6C     		ldr	r2, [r7, #72]
 2174 0338 D21A     		subs	r2, r2, r3
 2175 033a 7B6A     		ldr	r3, [r7, #36]
 2176 033c 9A42     		cmp	r2, r3
 2177 033e D3DC     		bgt	.L90
 2178              	.L88:
 2179              	.LBE26:
 377:pathfinding.c ****                             }
 378:pathfinding.c ****                         }
 379:pathfinding.c ****                         if(atTarget) {
 2180              		.loc 1 379 0 is_stmt 1
 2181 0340 BB6A     		ldr	r3, [r7, #40]
 2182 0342 002B     		cmp	r3, #0
 2183 0344 03D0     		beq	.L91
 380:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2184              		.loc 1 380 0
 2185 0346 0423     		movs	r3, #4
 2186 0348 87F84330 		strb	r3, [r7, #67]
 2187              	.LBE25:
 364:pathfinding.c ****                         int atTarget = 1;
 2188              		.loc 1 364 0
 2189 034c 06E0     		b	.L84
 2190              	.L91:
 2191              	.LBB27:
 381:pathfinding.c ****                         } else {
 382:pathfinding.c ****                             newDirection = GoForward;
 2192              		.loc 1 382 0
 2193 034e 0023     		movs	r3, #0
 2194 0350 87F84330 		strb	r3, [r7, #67]
 2195              	.LBE27:
 364:pathfinding.c ****                         int atTarget = 1;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 47


 2196              		.loc 1 364 0
 2197 0354 02E0     		b	.L84
 2198              	.L85:
 383:pathfinding.c ****                         }
 384:pathfinding.c ****                     } else {
 385:pathfinding.c ****                         newDirection = GoForward;
 2199              		.loc 1 385 0
 2200 0356 0023     		movs	r3, #0
 2201 0358 87F84330 		strb	r3, [r7, #67]
 2202              	.L84:
 386:pathfinding.c ****                     }
 387:pathfinding.c ****                 }
 388:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2203              		.loc 1 388 0
 2204 035c 694B     		ldr	r3, .L113+4
 2205 035e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 0360 032B     		cmp	r3, #3
 2207 0362 08D1     		bne	.L93
 389:pathfinding.c ****                     newDirection = uTurn;
 2208              		.loc 1 389 0
 2209 0364 0323     		movs	r3, #3
 2210 0366 87F84330 		strb	r3, [r7, #67]
 390:pathfinding.c ****                     ignoreL = 0;
 2211              		.loc 1 390 0
 2212 036a 674B     		ldr	r3, .L113+8
 2213 036c 0022     		movs	r2, #0
 2214 036e 1A60     		str	r2, [r3]
 391:pathfinding.c ****                     ignoreR = 0;
 2215              		.loc 1 391 0
 2216 0370 664B     		ldr	r3, .L113+12
 2217 0372 0022     		movs	r2, #0
 2218 0374 1A60     		str	r2, [r3]
 2219              	.L93:
 392:pathfinding.c ****                 }
 393:pathfinding.c ****                 currentCol--;
 2220              		.loc 1 393 0
 2221 0376 BB6C     		ldr	r3, [r7, #72]
 2222 0378 013B     		subs	r3, r3, #1
 2223 037a BB64     		str	r3, [r7, #72]
 394:pathfinding.c ****                 break;
 2224              		.loc 1 394 0
 2225 037c 77E0     		b	.L69
 2226              	.L56:
 395:pathfinding.c ****             case 3: // next step is right
 396:pathfinding.c ****                 currentRobotOrientation = Right;
 2227              		.loc 1 396 0
 2228 037e 604B     		ldr	r3, .L113
 2229 0380 0322     		movs	r2, #3
 2230 0382 1A70     		strb	r2, [r3]
 397:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2231              		.loc 1 397 0
 2232 0384 5F4B     		ldr	r3, .L113+4
 2233 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 0388 002B     		cmp	r3, #0
 2235 038a 08D1     		bne	.L94
 398:pathfinding.c ****                     newDirection = waitForRightTurn;
 2236              		.loc 1 398 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 48


 2237 038c 0223     		movs	r3, #2
 2238 038e 87F84330 		strb	r3, [r7, #67]
 399:pathfinding.c ****                     ignoreL = 0;
 2239              		.loc 1 399 0
 2240 0392 5D4B     		ldr	r3, .L113+8
 2241 0394 0022     		movs	r2, #0
 2242 0396 1A60     		str	r2, [r3]
 400:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2243              		.loc 1 400 0
 2244 0398 5C4B     		ldr	r3, .L113+12
 2245 039a 0022     		movs	r2, #0
 2246 039c 1A60     		str	r2, [r3]
 2247              	.L94:
 401:pathfinding.c ****                 }
 402:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2248              		.loc 1 402 0
 2249 039e 594B     		ldr	r3, .L113+4
 2250 03a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2251 03a2 012B     		cmp	r3, #1
 2252 03a4 08D1     		bne	.L95
 403:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2253              		.loc 1 403 0
 2254 03a6 0123     		movs	r3, #1
 2255 03a8 87F84330 		strb	r3, [r7, #67]
 404:pathfinding.c ****                     ignoreL = 0;
 2256              		.loc 1 404 0
 2257 03ac 564B     		ldr	r3, .L113+8
 2258 03ae 0022     		movs	r2, #0
 2259 03b0 1A60     		str	r2, [r3]
 405:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2260              		.loc 1 405 0
 2261 03b2 564B     		ldr	r3, .L113+12
 2262 03b4 0022     		movs	r2, #0
 2263 03b6 1A60     		str	r2, [r3]
 2264              	.L95:
 406:pathfinding.c ****                 }
 407:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2265              		.loc 1 407 0
 2266 03b8 524B     		ldr	r3, .L113+4
 2267 03ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2268 03bc 032B     		cmp	r3, #3
 2269 03be 44D1     		bne	.L96
 408:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2270              		.loc 1 408 0
 2271 03c0 3A69     		ldr	r2, [r7, #16]
 2272 03c2 FB6B     		ldr	r3, [r7, #60]
 2273 03c4 9A42     		cmp	r2, r3
 2274 03c6 3DD1     		bne	.L97
 2275              		.loc 1 408 0 is_stmt 0 discriminator 1
 2276 03c8 BA6D     		ldr	r2, [r7, #88]
 2277 03ca FB6C     		ldr	r3, [r7, #76]
 2278 03cc 9A42     		cmp	r2, r3
 2279 03ce 39D1     		bne	.L97
 2280              	.LBB28:
 409:pathfinding.c ****                         int atTarget = 1;
 2281              		.loc 1 409 0 is_stmt 1
 2282 03d0 0123     		movs	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 49


 2283 03d2 3B62     		str	r3, [r7, #32]
 2284              	.LBB29:
 410:pathfinding.c ****                         // check if we only need to go forward to reach target
 411:pathfinding.c ****                         for(int i = 1; i < targetLocation.col; i++) {
 2285              		.loc 1 411 0
 2286 03d4 0123     		movs	r3, #1
 2287 03d6 FB61     		str	r3, [r7, #28]
 2288 03d8 25E0     		b	.L98
 2289              	.L102:
 412:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 413:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 1) {
 2290              		.loc 1 413 0
 2291 03da FB6C     		ldr	r3, [r7, #76]
 2292 03dc 4C22     		movs	r2, #76
 2293 03de 02FB03F3 		mul	r3, r2, r3
 2294 03e2 FA68     		ldr	r2, [r7, #12]
 2295 03e4 1344     		add	r3, r3, r2
 2296 03e6 B96C     		ldr	r1, [r7, #72]
 2297 03e8 FA69     		ldr	r2, [r7, #28]
 2298 03ea 0A44     		add	r2, r2, r1
 2299 03ec 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2300 03f0 012B     		cmp	r3, #1
 2301 03f2 02D1     		bne	.L99
 414:pathfinding.c ****                                 atTarget = 0;
 2302              		.loc 1 414 0
 2303 03f4 0023     		movs	r3, #0
 2304 03f6 3B62     		str	r3, [r7, #32]
 415:pathfinding.c ****                                 break;
 2305              		.loc 1 415 0
 2306 03f8 19E0     		b	.L100
 2307              	.L99:
 416:pathfinding.c ****                             }
 417:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 9) {
 2308              		.loc 1 417 0
 2309 03fa FB6C     		ldr	r3, [r7, #76]
 2310 03fc 4C22     		movs	r2, #76
 2311 03fe 02FB03F3 		mul	r3, r2, r3
 2312 0402 FA68     		ldr	r2, [r7, #12]
 2313 0404 1344     		add	r3, r3, r2
 2314 0406 B96C     		ldr	r1, [r7, #72]
 2315 0408 FA69     		ldr	r2, [r7, #28]
 2316 040a 0A44     		add	r2, r2, r1
 2317 040c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2318 0410 092B     		cmp	r3, #9
 2319 0412 05D1     		bne	.L101
 418:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2320              		.loc 1 418 0
 2321 0414 0123     		movs	r3, #1
 2322 0416 3B62     		str	r3, [r7, #32]
 419:pathfinding.c ****                                 distanceToTarget = i;
 2323              		.loc 1 419 0
 2324 0418 3D4A     		ldr	r2, .L113+16
 2325 041a FB69     		ldr	r3, [r7, #28]
 2326 041c 1360     		str	r3, [r2]
 420:pathfinding.c ****                                 break;
 2327              		.loc 1 420 0
 2328 041e 06E0     		b	.L100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 50


 2329              	.L101:
 411:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2330              		.loc 1 411 0 discriminator 2
 2331 0420 FB69     		ldr	r3, [r7, #28]
 2332 0422 0133     		adds	r3, r3, #1
 2333 0424 FB61     		str	r3, [r7, #28]
 2334              	.L98:
 411:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2335              		.loc 1 411 0 is_stmt 0 discriminator 1
 2336 0426 FA6D     		ldr	r2, [r7, #92]
 2337 0428 FB69     		ldr	r3, [r7, #28]
 2338 042a 9A42     		cmp	r2, r3
 2339 042c D5DC     		bgt	.L102
 2340              	.L100:
 2341              	.LBE29:
 421:pathfinding.c ****                             }
 422:pathfinding.c ****                         }
 423:pathfinding.c ****                         if(atTarget) {
 2342              		.loc 1 423 0 is_stmt 1
 2343 042e 3B6A     		ldr	r3, [r7, #32]
 2344 0430 002B     		cmp	r3, #0
 2345 0432 03D0     		beq	.L103
 424:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2346              		.loc 1 424 0
 2347 0434 0423     		movs	r3, #4
 2348 0436 87F84330 		strb	r3, [r7, #67]
 2349              	.LBE28:
 408:pathfinding.c ****                         int atTarget = 1;
 2350              		.loc 1 408 0
 2351 043a 06E0     		b	.L96
 2352              	.L103:
 2353              	.LBB30:
 425:pathfinding.c ****                         } else {
 426:pathfinding.c ****                             newDirection = GoForward;
 2354              		.loc 1 426 0
 2355 043c 0023     		movs	r3, #0
 2356 043e 87F84330 		strb	r3, [r7, #67]
 2357              	.LBE30:
 408:pathfinding.c ****                         int atTarget = 1;
 2358              		.loc 1 408 0
 2359 0442 02E0     		b	.L96
 2360              	.L97:
 427:pathfinding.c ****                         }
 428:pathfinding.c ****                     } else {
 429:pathfinding.c ****                         newDirection = GoForward;
 2361              		.loc 1 429 0
 2362 0444 0023     		movs	r3, #0
 2363 0446 87F84330 		strb	r3, [r7, #67]
 2364              	.L96:
 430:pathfinding.c ****                     }
 431:pathfinding.c ****                 }
 432:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2365              		.loc 1 432 0
 2366 044a 2E4B     		ldr	r3, .L113+4
 2367 044c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2368 044e 022B     		cmp	r3, #2
 2369 0450 08D1     		bne	.L105
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 51


 433:pathfinding.c ****                     newDirection = uTurn;
 2370              		.loc 1 433 0
 2371 0452 0323     		movs	r3, #3
 2372 0454 87F84330 		strb	r3, [r7, #67]
 434:pathfinding.c ****                     ignoreL = 0;
 2373              		.loc 1 434 0
 2374 0458 2B4B     		ldr	r3, .L113+8
 2375 045a 0022     		movs	r2, #0
 2376 045c 1A60     		str	r2, [r3]
 435:pathfinding.c ****                     ignoreR = 0;
 2377              		.loc 1 435 0
 2378 045e 2B4B     		ldr	r3, .L113+12
 2379 0460 0022     		movs	r2, #0
 2380 0462 1A60     		str	r2, [r3]
 2381              	.L105:
 436:pathfinding.c ****                 }
 437:pathfinding.c ****                 currentCol++;
 2382              		.loc 1 437 0
 2383 0464 BB6C     		ldr	r3, [r7, #72]
 2384 0466 0133     		adds	r3, r3, #1
 2385 0468 BB64     		str	r3, [r7, #72]
 438:pathfinding.c ****                 break;
 2386              		.loc 1 438 0
 2387 046a 00E0     		b	.L69
 2388              	.L110:
 439:pathfinding.c ****             default:
 440:pathfinding.c ****                 break;
 2389              		.loc 1 440 0
 2390 046c 00BF     		nop
 2391              	.L69:
 441:pathfinding.c ****         }
 442:pathfinding.c ****         
 443:pathfinding.c ****         // add new direction to list
 444:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2392              		.loc 1 444 0
 2393 046e 2949     		ldr	r1, .L113+20
 2394 0470 7A6C     		ldr	r2, [r7, #68]
 2395 0472 1346     		mov	r3, r2
 2396 0474 9B00     		lsls	r3, r3, #2
 2397 0476 1344     		add	r3, r3, r2
 2398 0478 9B00     		lsls	r3, r3, #2
 2399 047a 0B44     		add	r3, r3, r1
 2400 047c 97F84320 		ldrb	r2, [r7, #67]
 2401 0480 1A70     		strb	r2, [r3]
 445:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2402              		.loc 1 445 0
 2403 0482 214B     		ldr	r3, .L113+8
 2404 0484 1968     		ldr	r1, [r3]
 2405 0486 2348     		ldr	r0, .L113+20
 2406 0488 7A6C     		ldr	r2, [r7, #68]
 2407 048a 1346     		mov	r3, r2
 2408 048c 9B00     		lsls	r3, r3, #2
 2409 048e 1344     		add	r3, r3, r2
 2410 0490 9B00     		lsls	r3, r3, #2
 2411 0492 0344     		add	r3, r3, r0
 2412 0494 0433     		adds	r3, r3, #4
 2413 0496 1960     		str	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 52


 446:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2414              		.loc 1 446 0
 2415 0498 1C4B     		ldr	r3, .L113+12
 2416 049a 1968     		ldr	r1, [r3]
 2417 049c 1D48     		ldr	r0, .L113+20
 2418 049e 7A6C     		ldr	r2, [r7, #68]
 2419 04a0 1346     		mov	r3, r2
 2420 04a2 9B00     		lsls	r3, r3, #2
 2421 04a4 1344     		add	r3, r3, r2
 2422 04a6 9B00     		lsls	r3, r3, #2
 2423 04a8 0344     		add	r3, r3, r0
 2424 04aa 0833     		adds	r3, r3, #8
 2425 04ac 1960     		str	r1, [r3]
 447:pathfinding.c ****         instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 2426              		.loc 1 447 0
 2427 04ae 154B     		ldr	r3, .L113+4
 2428 04b0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2429 04b2 1849     		ldr	r1, .L113+20
 2430 04b4 7A6C     		ldr	r2, [r7, #68]
 2431 04b6 1346     		mov	r3, r2
 2432 04b8 9B00     		lsls	r3, r3, #2
 2433 04ba 1344     		add	r3, r3, r2
 2434 04bc 9B00     		lsls	r3, r3, #2
 2435 04be 0B44     		add	r3, r3, r1
 2436 04c0 1033     		adds	r3, r3, #16
 2437 04c2 0246     		mov	r2, r0
 2438 04c4 1A70     		strb	r2, [r3]
 448:pathfinding.c ****         instructionsList[listIndex].distanceToTarget = distanceToTarget;
 2439              		.loc 1 448 0
 2440 04c6 124B     		ldr	r3, .L113+16
 2441 04c8 1968     		ldr	r1, [r3]
 2442 04ca 1248     		ldr	r0, .L113+20
 2443 04cc 7A6C     		ldr	r2, [r7, #68]
 2444 04ce 1346     		mov	r3, r2
 2445 04d0 9B00     		lsls	r3, r3, #2
 2446 04d2 1344     		add	r3, r3, r2
 2447 04d4 9B00     		lsls	r3, r3, #2
 2448 04d6 0344     		add	r3, r3, r0
 2449 04d8 0C33     		adds	r3, r3, #12
 2450 04da 1960     		str	r1, [r3]
 449:pathfinding.c ****         distanceToTarget = 69;
 2451              		.loc 1 449 0
 2452 04dc 0C4B     		ldr	r3, .L113+16
 2453 04de 4522     		movs	r2, #69
 2454 04e0 1A60     		str	r2, [r3]
 450:pathfinding.c ****         listIndex++; // increment instruction list index
 2455              		.loc 1 450 0
 2456 04e2 7B6C     		ldr	r3, [r7, #68]
 2457 04e4 0133     		adds	r3, r3, #1
 2458 04e6 7B64     		str	r3, [r7, #68]
 451:pathfinding.c ****         numSteps--; // decrement numSteps
 2459              		.loc 1 451 0
 2460 04e8 BB68     		ldr	r3, [r7, #8]
 2461 04ea 013B     		subs	r3, r3, #1
 2462 04ec BB60     		str	r3, [r7, #8]
 2463              	.L49:
 2464              	.LBE18:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 53


 252:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2465              		.loc 1 252 0
 2466 04ee BB68     		ldr	r3, [r7, #8]
 2467 04f0 002B     		cmp	r3, #0
 2468 04f2 BFF69CAD 		bge	.L106
 452:pathfinding.c ****     }
 453:pathfinding.c ****     // process list, remove repeated forward outputs
 454:pathfinding.c ****     int j = 0;
 2469              		.loc 1 454 0
 2470 04f6 0023     		movs	r3, #0
 2471 04f8 BB61     		str	r3, [r7, #24]
 2472              	.LBB31:
 455:pathfinding.c ****     // remove repeated forwards
 456:pathfinding.c ****         for(int i = 0; i < listIndex; i ++) {
 2473              		.loc 1 456 0
 2474 04fa 0023     		movs	r3, #0
 2475 04fc 7B61     		str	r3, [r7, #20]
 2476 04fe 7EE0     		b	.L107
 2477              	.L114:
 2478              		.align	2
 2479              	.L113:
 2480 0500 00000000 		.word	currentRobotOrientation
 2481 0504 00000000 		.word	previousRobotOrientation
 2482 0508 00000000 		.word	ignoreL
 2483 050c 00000000 		.word	ignoreR
 2484 0510 00000000 		.word	distanceToTarget
 2485 0514 00000000 		.word	instructionsList
 2486              	.L109:
 457:pathfinding.c ****             if(instructionsList[i].direction != instructionsList[i+1].direction) {
 2487              		.loc 1 457 0
 2488 0518 3D49     		ldr	r1, .L115
 2489 051a 7A69     		ldr	r2, [r7, #20]
 2490 051c 1346     		mov	r3, r2
 2491 051e 9B00     		lsls	r3, r3, #2
 2492 0520 1344     		add	r3, r3, r2
 2493 0522 9B00     		lsls	r3, r3, #2
 2494 0524 0B44     		add	r3, r3, r1
 2495 0526 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2496 0528 7B69     		ldr	r3, [r7, #20]
 2497 052a 5A1C     		adds	r2, r3, #1
 2498 052c 3848     		ldr	r0, .L115
 2499 052e 1346     		mov	r3, r2
 2500 0530 9B00     		lsls	r3, r3, #2
 2501 0532 1344     		add	r3, r3, r2
 2502 0534 9B00     		lsls	r3, r3, #2
 2503 0536 0344     		add	r3, r3, r0
 2504 0538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2505 053a 9942     		cmp	r1, r3
 2506 053c 5CD0     		beq	.L108
 458:pathfinding.c ****                 finalInstructionList[j].direction = instructionsList[i].direction;
 2507              		.loc 1 458 0
 2508 053e 3449     		ldr	r1, .L115
 2509 0540 7A69     		ldr	r2, [r7, #20]
 2510 0542 1346     		mov	r3, r2
 2511 0544 9B00     		lsls	r3, r3, #2
 2512 0546 1344     		add	r3, r3, r2
 2513 0548 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 54


 2514 054a 0B44     		add	r3, r3, r1
 2515 054c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2516 054e 3149     		ldr	r1, .L115+4
 2517 0550 BA69     		ldr	r2, [r7, #24]
 2518 0552 1346     		mov	r3, r2
 2519 0554 9B00     		lsls	r3, r3, #2
 2520 0556 1344     		add	r3, r3, r2
 2521 0558 9B00     		lsls	r3, r3, #2
 2522 055a 0B44     		add	r3, r3, r1
 2523 055c 0246     		mov	r2, r0
 2524 055e 1A70     		strb	r2, [r3]
 459:pathfinding.c ****                 finalInstructionList[j].ignoreL = instructionsList[i].ignoreL;
 2525              		.loc 1 459 0
 2526 0560 2B49     		ldr	r1, .L115
 2527 0562 7A69     		ldr	r2, [r7, #20]
 2528 0564 1346     		mov	r3, r2
 2529 0566 9B00     		lsls	r3, r3, #2
 2530 0568 1344     		add	r3, r3, r2
 2531 056a 9B00     		lsls	r3, r3, #2
 2532 056c 0B44     		add	r3, r3, r1
 2533 056e 0433     		adds	r3, r3, #4
 2534 0570 1968     		ldr	r1, [r3]
 2535 0572 2848     		ldr	r0, .L115+4
 2536 0574 BA69     		ldr	r2, [r7, #24]
 2537 0576 1346     		mov	r3, r2
 2538 0578 9B00     		lsls	r3, r3, #2
 2539 057a 1344     		add	r3, r3, r2
 2540 057c 9B00     		lsls	r3, r3, #2
 2541 057e 0344     		add	r3, r3, r0
 2542 0580 0433     		adds	r3, r3, #4
 2543 0582 1960     		str	r1, [r3]
 460:pathfinding.c ****                 finalInstructionList[j].ignoreR = instructionsList[i].ignoreR; // skip all the repe
 2544              		.loc 1 460 0
 2545 0584 2249     		ldr	r1, .L115
 2546 0586 7A69     		ldr	r2, [r7, #20]
 2547 0588 1346     		mov	r3, r2
 2548 058a 9B00     		lsls	r3, r3, #2
 2549 058c 1344     		add	r3, r3, r2
 2550 058e 9B00     		lsls	r3, r3, #2
 2551 0590 0B44     		add	r3, r3, r1
 2552 0592 0833     		adds	r3, r3, #8
 2553 0594 1968     		ldr	r1, [r3]
 2554 0596 1F48     		ldr	r0, .L115+4
 2555 0598 BA69     		ldr	r2, [r7, #24]
 2556 059a 1346     		mov	r3, r2
 2557 059c 9B00     		lsls	r3, r3, #2
 2558 059e 1344     		add	r3, r3, r2
 2559 05a0 9B00     		lsls	r3, r3, #2
 2560 05a2 0344     		add	r3, r3, r0
 2561 05a4 0833     		adds	r3, r3, #8
 2562 05a6 1960     		str	r1, [r3]
 461:pathfinding.c ****                 finalInstructionList[j].expectedOrientation = instructionsList[i].expectedOrientati
 2563              		.loc 1 461 0
 2564 05a8 1949     		ldr	r1, .L115
 2565 05aa 7A69     		ldr	r2, [r7, #20]
 2566 05ac 1346     		mov	r3, r2
 2567 05ae 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 55


 2568 05b0 1344     		add	r3, r3, r2
 2569 05b2 9B00     		lsls	r3, r3, #2
 2570 05b4 0B44     		add	r3, r3, r1
 2571 05b6 1033     		adds	r3, r3, #16
 2572 05b8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2573 05ba 1649     		ldr	r1, .L115+4
 2574 05bc BA69     		ldr	r2, [r7, #24]
 2575 05be 1346     		mov	r3, r2
 2576 05c0 9B00     		lsls	r3, r3, #2
 2577 05c2 1344     		add	r3, r3, r2
 2578 05c4 9B00     		lsls	r3, r3, #2
 2579 05c6 0B44     		add	r3, r3, r1
 2580 05c8 1033     		adds	r3, r3, #16
 2581 05ca 0246     		mov	r2, r0
 2582 05cc 1A70     		strb	r2, [r3]
 462:pathfinding.c ****                 finalInstructionList[j].distanceToTarget = instructionsList[i].distanceToTarget;
 2583              		.loc 1 462 0
 2584 05ce 1049     		ldr	r1, .L115
 2585 05d0 7A69     		ldr	r2, [r7, #20]
 2586 05d2 1346     		mov	r3, r2
 2587 05d4 9B00     		lsls	r3, r3, #2
 2588 05d6 1344     		add	r3, r3, r2
 2589 05d8 9B00     		lsls	r3, r3, #2
 2590 05da 0B44     		add	r3, r3, r1
 2591 05dc 0C33     		adds	r3, r3, #12
 2592 05de 1968     		ldr	r1, [r3]
 2593 05e0 0C48     		ldr	r0, .L115+4
 2594 05e2 BA69     		ldr	r2, [r7, #24]
 2595 05e4 1346     		mov	r3, r2
 2596 05e6 9B00     		lsls	r3, r3, #2
 2597 05e8 1344     		add	r3, r3, r2
 2598 05ea 9B00     		lsls	r3, r3, #2
 2599 05ec 0344     		add	r3, r3, r0
 2600 05ee 0C33     		adds	r3, r3, #12
 2601 05f0 1960     		str	r1, [r3]
 463:pathfinding.c ****                 j++; // move to next element in finalInstructionList
 2602              		.loc 1 463 0
 2603 05f2 BB69     		ldr	r3, [r7, #24]
 2604 05f4 0133     		adds	r3, r3, #1
 2605 05f6 BB61     		str	r3, [r7, #24]
 2606              	.L108:
 456:pathfinding.c ****             if(instructionsList[i].direction != instructionsList[i+1].direction) {
 2607              		.loc 1 456 0 discriminator 2
 2608 05f8 7B69     		ldr	r3, [r7, #20]
 2609 05fa 0133     		adds	r3, r3, #1
 2610 05fc 7B61     		str	r3, [r7, #20]
 2611              	.L107:
 456:pathfinding.c ****             if(instructionsList[i].direction != instructionsList[i+1].direction) {
 2612              		.loc 1 456 0 is_stmt 0 discriminator 1
 2613 05fe 7A69     		ldr	r2, [r7, #20]
 2614 0600 7B6C     		ldr	r3, [r7, #68]
 2615 0602 9A42     		cmp	r2, r3
 2616 0604 88DB     		blt	.L109
 2617              	.LBE31:
 464:pathfinding.c ****             }
 465:pathfinding.c ****     }
 466:pathfinding.c **** }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 56


 2618              		.loc 1 466 0 is_stmt 1
 2619 0606 00BF     		nop
 2620 0608 5037     		adds	r7, r7, #80
 2621              		.cfi_def_cfa_offset 8
 2622 060a BD46     		mov	sp, r7
 2623              		.cfi_def_cfa_register 13
 2624              		@ sp needed
 2625 060c 80BD     		pop	{r7, pc}
 2626              	.L116:
 2627 060e 00BF     		.align	2
 2628              	.L115:
 2629 0610 00000000 		.word	instructionsList
 2630 0614 44160000 		.word	finalInstructionList
 2631              		.cfi_endproc
 2632              	.LFE5:
 2633              		.size	getPathInstructions, .-getPathInstructions
 2634              		.section	.text.checkPathDirection,"ax",%progbits
 2635              		.align	2
 2636              		.global	checkPathDirection
 2637              		.thumb
 2638              		.thumb_func
 2639              		.type	checkPathDirection, %function
 2640              	checkPathDirection:
 2641              	.LFB6:
 467:pathfinding.c **** 
 468:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2642              		.loc 1 468 0
 2643              		.cfi_startproc
 2644              		@ args = 0, pretend = 0, frame = 8
 2645              		@ frame_needed = 1, uses_anonymous_args = 0
 2646              		@ link register save eliminated.
 2647 0000 80B4     		push	{r7}
 2648              		.cfi_def_cfa_offset 4
 2649              		.cfi_offset 7, -4
 2650 0002 83B0     		sub	sp, sp, #12
 2651              		.cfi_def_cfa_offset 16
 2652 0004 00AF     		add	r7, sp, #0
 2653              		.cfi_def_cfa_register 7
 2654 0006 7860     		str	r0, [r7, #4]
 2655 0008 3960     		str	r1, [r7]
 469:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 470:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2656              		.loc 1 470 0
 2657 000a 7B68     		ldr	r3, [r7, #4]
 2658 000c 5A1E     		subs	r2, r3, #1
 2659 000e 3E49     		ldr	r1, .L127
 2660 0010 1346     		mov	r3, r2
 2661 0012 DB00     		lsls	r3, r3, #3
 2662 0014 1344     		add	r3, r3, r2
 2663 0016 5B00     		lsls	r3, r3, #1
 2664 0018 1344     		add	r3, r3, r2
 2665 001a 3A68     		ldr	r2, [r7]
 2666 001c 1344     		add	r3, r3, r2
 2667 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2668 0022 082B     		cmp	r3, #8
 2669 0024 0DD0     		beq	.L118
 2670              		.loc 1 470 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 57


 2671 0026 7B68     		ldr	r3, [r7, #4]
 2672 0028 5A1E     		subs	r2, r3, #1
 2673 002a 3749     		ldr	r1, .L127
 2674 002c 1346     		mov	r3, r2
 2675 002e DB00     		lsls	r3, r3, #3
 2676 0030 1344     		add	r3, r3, r2
 2677 0032 5B00     		lsls	r3, r3, #1
 2678 0034 1344     		add	r3, r3, r2
 2679 0036 3A68     		ldr	r2, [r7]
 2680 0038 1344     		add	r3, r3, r2
 2681 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2682 003e 092B     		cmp	r3, #9
 2683 0040 01D1     		bne	.L119
 2684              	.L118:
 471:pathfinding.c ****         return 0; // up 
 2685              		.loc 1 471 0 is_stmt 1
 2686 0042 0023     		movs	r3, #0
 2687 0044 5AE0     		b	.L120
 2688              	.L119:
 472:pathfinding.c ****     }
 473:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2689              		.loc 1 473 0
 2690 0046 7B68     		ldr	r3, [r7, #4]
 2691 0048 5A1C     		adds	r2, r3, #1
 2692 004a 2F49     		ldr	r1, .L127
 2693 004c 1346     		mov	r3, r2
 2694 004e DB00     		lsls	r3, r3, #3
 2695 0050 1344     		add	r3, r3, r2
 2696 0052 5B00     		lsls	r3, r3, #1
 2697 0054 1344     		add	r3, r3, r2
 2698 0056 3A68     		ldr	r2, [r7]
 2699 0058 1344     		add	r3, r3, r2
 2700 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2701 005e 082B     		cmp	r3, #8
 2702 0060 0DD0     		beq	.L121
 2703              		.loc 1 473 0 is_stmt 0 discriminator 1
 2704 0062 7B68     		ldr	r3, [r7, #4]
 2705 0064 5A1C     		adds	r2, r3, #1
 2706 0066 2849     		ldr	r1, .L127
 2707 0068 1346     		mov	r3, r2
 2708 006a DB00     		lsls	r3, r3, #3
 2709 006c 1344     		add	r3, r3, r2
 2710 006e 5B00     		lsls	r3, r3, #1
 2711 0070 1344     		add	r3, r3, r2
 2712 0072 3A68     		ldr	r2, [r7]
 2713 0074 1344     		add	r3, r3, r2
 2714 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2715 007a 092B     		cmp	r3, #9
 2716 007c 01D1     		bne	.L122
 2717              	.L121:
 474:pathfinding.c ****         return 1; // down
 2718              		.loc 1 474 0 is_stmt 1
 2719 007e 0123     		movs	r3, #1
 2720 0080 3CE0     		b	.L120
 2721              	.L122:
 475:pathfinding.c ****     }
 476:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 58


 2722              		.loc 1 476 0
 2723 0082 3B68     		ldr	r3, [r7]
 2724 0084 591E     		subs	r1, r3, #1
 2725 0086 2048     		ldr	r0, .L127
 2726 0088 7A68     		ldr	r2, [r7, #4]
 2727 008a 1346     		mov	r3, r2
 2728 008c DB00     		lsls	r3, r3, #3
 2729 008e 1344     		add	r3, r3, r2
 2730 0090 5B00     		lsls	r3, r3, #1
 2731 0092 1344     		add	r3, r3, r2
 2732 0094 0B44     		add	r3, r3, r1
 2733 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2734 009a 082B     		cmp	r3, #8
 2735 009c 0DD0     		beq	.L123
 2736              		.loc 1 476 0 is_stmt 0 discriminator 1
 2737 009e 3B68     		ldr	r3, [r7]
 2738 00a0 591E     		subs	r1, r3, #1
 2739 00a2 1948     		ldr	r0, .L127
 2740 00a4 7A68     		ldr	r2, [r7, #4]
 2741 00a6 1346     		mov	r3, r2
 2742 00a8 DB00     		lsls	r3, r3, #3
 2743 00aa 1344     		add	r3, r3, r2
 2744 00ac 5B00     		lsls	r3, r3, #1
 2745 00ae 1344     		add	r3, r3, r2
 2746 00b0 0B44     		add	r3, r3, r1
 2747 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2748 00b6 092B     		cmp	r3, #9
 2749 00b8 01D1     		bne	.L124
 2750              	.L123:
 477:pathfinding.c ****         return 2; // left
 2751              		.loc 1 477 0 is_stmt 1
 2752 00ba 0223     		movs	r3, #2
 2753 00bc 1EE0     		b	.L120
 2754              	.L124:
 478:pathfinding.c ****     }
 479:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2755              		.loc 1 479 0
 2756 00be 3B68     		ldr	r3, [r7]
 2757 00c0 591C     		adds	r1, r3, #1
 2758 00c2 1148     		ldr	r0, .L127
 2759 00c4 7A68     		ldr	r2, [r7, #4]
 2760 00c6 1346     		mov	r3, r2
 2761 00c8 DB00     		lsls	r3, r3, #3
 2762 00ca 1344     		add	r3, r3, r2
 2763 00cc 5B00     		lsls	r3, r3, #1
 2764 00ce 1344     		add	r3, r3, r2
 2765 00d0 0B44     		add	r3, r3, r1
 2766 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2767 00d6 082B     		cmp	r3, #8
 2768 00d8 0DD0     		beq	.L125
 2769              		.loc 1 479 0 is_stmt 0 discriminator 1
 2770 00da 3B68     		ldr	r3, [r7]
 2771 00dc 591C     		adds	r1, r3, #1
 2772 00de 0A48     		ldr	r0, .L127
 2773 00e0 7A68     		ldr	r2, [r7, #4]
 2774 00e2 1346     		mov	r3, r2
 2775 00e4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 59


 2776 00e6 1344     		add	r3, r3, r2
 2777 00e8 5B00     		lsls	r3, r3, #1
 2778 00ea 1344     		add	r3, r3, r2
 2779 00ec 0B44     		add	r3, r3, r1
 2780 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2781 00f2 092B     		cmp	r3, #9
 2782 00f4 01D1     		bne	.L126
 2783              	.L125:
 480:pathfinding.c ****         return 3; // right
 2784              		.loc 1 480 0 is_stmt 1
 2785 00f6 0323     		movs	r3, #3
 2786 00f8 00E0     		b	.L120
 2787              	.L126:
 481:pathfinding.c ****     }
 482:pathfinding.c ****     return 5; // default- will never reach this
 2788              		.loc 1 482 0
 2789 00fa 0523     		movs	r3, #5
 2790              	.L120:
 483:pathfinding.c **** }
 2791              		.loc 1 483 0
 2792 00fc 1846     		mov	r0, r3
 2793 00fe 0C37     		adds	r7, r7, #12
 2794              		.cfi_def_cfa_offset 4
 2795 0100 BD46     		mov	sp, r7
 2796              		.cfi_def_cfa_register 13
 2797              		@ sp needed
 2798 0102 80BC     		pop	{r7}
 2799              		.cfi_restore 7
 2800              		.cfi_def_cfa_offset 0
 2801 0104 7047     		bx	lr
 2802              	.L128:
 2803 0106 00BF     		.align	2
 2804              	.L127:
 2805 0108 00000000 		.word	map
 2806              		.cfi_endproc
 2807              	.LFE6:
 2808              		.size	checkPathDirection, .-checkPathDirection
 2809              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2810              		.align	2
 2811              		.global	checkIgnoreTurn
 2812              		.thumb
 2813              		.thumb_func
 2814              		.type	checkIgnoreTurn, %function
 2815              	checkIgnoreTurn:
 2816              	.LFB7:
 484:pathfinding.c **** 
 485:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2817              		.loc 1 485 0
 2818              		.cfi_startproc
 2819              		@ args = 0, pretend = 0, frame = 16
 2820              		@ frame_needed = 1, uses_anonymous_args = 0
 2821              		@ link register save eliminated.
 2822 0000 80B4     		push	{r7}
 2823              		.cfi_def_cfa_offset 4
 2824              		.cfi_offset 7, -4
 2825 0002 85B0     		sub	sp, sp, #20
 2826              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 60


 2827 0004 00AF     		add	r7, sp, #0
 2828              		.cfi_def_cfa_register 7
 2829 0006 0346     		mov	r3, r0
 2830 0008 B960     		str	r1, [r7, #8]
 2831 000a 7A60     		str	r2, [r7, #4]
 2832 000c FB73     		strb	r3, [r7, #15]
 486:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 487:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2833              		.loc 1 487 0
 2834 000e BB68     		ldr	r3, [r7, #8]
 2835 0010 5A1E     		subs	r2, r3, #1
 2836 0012 4149     		ldr	r1, .L147
 2837 0014 1346     		mov	r3, r2
 2838 0016 DB00     		lsls	r3, r3, #3
 2839 0018 1344     		add	r3, r3, r2
 2840 001a 5B00     		lsls	r3, r3, #1
 2841 001c 1344     		add	r3, r3, r2
 2842 001e 7A68     		ldr	r2, [r7, #4]
 2843 0020 1344     		add	r3, r3, r2
 2844 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2845 0026 002B     		cmp	r3, #0
 2846 0028 11D1     		bne	.L130
 488:pathfinding.c ****         switch (robotOrientation) {
 2847              		.loc 1 488 0
 2848 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2849 002c 022B     		cmp	r3, #2
 2850 002e 02D0     		beq	.L132
 2851 0030 032B     		cmp	r3, #3
 2852 0032 06D0     		beq	.L133
 489:pathfinding.c ****             case Left:
 490:pathfinding.c ****                 ignoreR++;
 491:pathfinding.c ****                 break;
 492:pathfinding.c ****             case Right:
 493:pathfinding.c ****                 ignoreL++;
 494:pathfinding.c ****                 break;
 495:pathfinding.c ****             default:
 496:pathfinding.c ****                 break; // ignore when going up and down
 2853              		.loc 1 496 0
 2854 0034 0BE0     		b	.L130
 2855              	.L132:
 490:pathfinding.c ****                 break;
 2856              		.loc 1 490 0
 2857 0036 394B     		ldr	r3, .L147+4
 2858 0038 1B68     		ldr	r3, [r3]
 2859 003a 0133     		adds	r3, r3, #1
 2860 003c 374A     		ldr	r2, .L147+4
 2861 003e 1360     		str	r3, [r2]
 491:pathfinding.c ****             case Right:
 2862              		.loc 1 491 0
 2863 0040 05E0     		b	.L130
 2864              	.L133:
 493:pathfinding.c ****                 break;
 2865              		.loc 1 493 0
 2866 0042 374B     		ldr	r3, .L147+8
 2867 0044 1B68     		ldr	r3, [r3]
 2868 0046 0133     		adds	r3, r3, #1
 2869 0048 354A     		ldr	r2, .L147+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 61


 2870 004a 1360     		str	r3, [r2]
 494:pathfinding.c ****             default:
 2871              		.loc 1 494 0
 2872 004c 00BF     		nop
 2873              	.L130:
 497:pathfinding.c ****         }
 498:pathfinding.c ****     }
 499:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2874              		.loc 1 499 0
 2875 004e BB68     		ldr	r3, [r7, #8]
 2876 0050 5A1C     		adds	r2, r3, #1
 2877 0052 3149     		ldr	r1, .L147
 2878 0054 1346     		mov	r3, r2
 2879 0056 DB00     		lsls	r3, r3, #3
 2880 0058 1344     		add	r3, r3, r2
 2881 005a 5B00     		lsls	r3, r3, #1
 2882 005c 1344     		add	r3, r3, r2
 2883 005e 7A68     		ldr	r2, [r7, #4]
 2884 0060 1344     		add	r3, r3, r2
 2885 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2886 0066 002B     		cmp	r3, #0
 2887 0068 11D1     		bne	.L134
 500:pathfinding.c ****         switch (robotOrientation) {
 2888              		.loc 1 500 0
 2889 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2890 006c 022B     		cmp	r3, #2
 2891 006e 02D0     		beq	.L136
 2892 0070 032B     		cmp	r3, #3
 2893 0072 06D0     		beq	.L137
 501:pathfinding.c ****             case Left:
 502:pathfinding.c ****                 ignoreL++;
 503:pathfinding.c ****                 break;
 504:pathfinding.c ****             case Right:
 505:pathfinding.c ****                 ignoreR++;
 506:pathfinding.c ****                 break;
 507:pathfinding.c ****             default:
 508:pathfinding.c ****                 break;
 2894              		.loc 1 508 0
 2895 0074 0BE0     		b	.L134
 2896              	.L136:
 502:pathfinding.c ****                 break;
 2897              		.loc 1 502 0
 2898 0076 2A4B     		ldr	r3, .L147+8
 2899 0078 1B68     		ldr	r3, [r3]
 2900 007a 0133     		adds	r3, r3, #1
 2901 007c 284A     		ldr	r2, .L147+8
 2902 007e 1360     		str	r3, [r2]
 503:pathfinding.c ****             case Right:
 2903              		.loc 1 503 0
 2904 0080 05E0     		b	.L134
 2905              	.L137:
 505:pathfinding.c ****                 break;
 2906              		.loc 1 505 0
 2907 0082 264B     		ldr	r3, .L147+4
 2908 0084 1B68     		ldr	r3, [r3]
 2909 0086 0133     		adds	r3, r3, #1
 2910 0088 244A     		ldr	r2, .L147+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 62


 2911 008a 1360     		str	r3, [r2]
 506:pathfinding.c ****             default:
 2912              		.loc 1 506 0
 2913 008c 00BF     		nop
 2914              	.L134:
 509:pathfinding.c ****         }
 510:pathfinding.c ****     }
 511:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2915              		.loc 1 511 0
 2916 008e 7B68     		ldr	r3, [r7, #4]
 2917 0090 591E     		subs	r1, r3, #1
 2918 0092 2148     		ldr	r0, .L147
 2919 0094 BA68     		ldr	r2, [r7, #8]
 2920 0096 1346     		mov	r3, r2
 2921 0098 DB00     		lsls	r3, r3, #3
 2922 009a 1344     		add	r3, r3, r2
 2923 009c 5B00     		lsls	r3, r3, #1
 2924 009e 1344     		add	r3, r3, r2
 2925 00a0 0B44     		add	r3, r3, r1
 2926 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2927 00a6 002B     		cmp	r3, #0
 2928 00a8 11D1     		bne	.L138
 512:pathfinding.c ****         switch (robotOrientation) {
 2929              		.loc 1 512 0
 2930 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2931 00ac 002B     		cmp	r3, #0
 2932 00ae 02D0     		beq	.L140
 2933 00b0 012B     		cmp	r3, #1
 2934 00b2 06D0     		beq	.L141
 513:pathfinding.c ****             case Up:
 514:pathfinding.c ****                 ignoreL++;
 515:pathfinding.c ****                 break;
 516:pathfinding.c ****             case Down:
 517:pathfinding.c ****                 ignoreR++;
 518:pathfinding.c ****                 break;
 519:pathfinding.c ****             default:
 520:pathfinding.c ****                 break;
 2935              		.loc 1 520 0
 2936 00b4 0BE0     		b	.L138
 2937              	.L140:
 514:pathfinding.c ****                 break;
 2938              		.loc 1 514 0
 2939 00b6 1A4B     		ldr	r3, .L147+8
 2940 00b8 1B68     		ldr	r3, [r3]
 2941 00ba 0133     		adds	r3, r3, #1
 2942 00bc 184A     		ldr	r2, .L147+8
 2943 00be 1360     		str	r3, [r2]
 515:pathfinding.c ****             case Down:
 2944              		.loc 1 515 0
 2945 00c0 05E0     		b	.L138
 2946              	.L141:
 517:pathfinding.c ****                 break;
 2947              		.loc 1 517 0
 2948 00c2 164B     		ldr	r3, .L147+4
 2949 00c4 1B68     		ldr	r3, [r3]
 2950 00c6 0133     		adds	r3, r3, #1
 2951 00c8 144A     		ldr	r2, .L147+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 63


 2952 00ca 1360     		str	r3, [r2]
 518:pathfinding.c ****             default:
 2953              		.loc 1 518 0
 2954 00cc 00BF     		nop
 2955              	.L138:
 521:pathfinding.c ****         }
 522:pathfinding.c ****     }
 523:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2956              		.loc 1 523 0
 2957 00ce 7B68     		ldr	r3, [r7, #4]
 2958 00d0 591C     		adds	r1, r3, #1
 2959 00d2 1148     		ldr	r0, .L147
 2960 00d4 BA68     		ldr	r2, [r7, #8]
 2961 00d6 1346     		mov	r3, r2
 2962 00d8 DB00     		lsls	r3, r3, #3
 2963 00da 1344     		add	r3, r3, r2
 2964 00dc 5B00     		lsls	r3, r3, #1
 2965 00de 1344     		add	r3, r3, r2
 2966 00e0 0B44     		add	r3, r3, r1
 2967 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2968 00e6 002B     		cmp	r3, #0
 2969 00e8 11D1     		bne	.L146
 524:pathfinding.c ****         switch (robotOrientation) {
 2970              		.loc 1 524 0
 2971 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2972 00ec 002B     		cmp	r3, #0
 2973 00ee 02D0     		beq	.L144
 2974 00f0 012B     		cmp	r3, #1
 2975 00f2 06D0     		beq	.L145
 525:pathfinding.c ****             case Up:
 526:pathfinding.c ****                 ignoreR++;
 527:pathfinding.c ****                 break;
 528:pathfinding.c ****             case Down:
 529:pathfinding.c ****                 ignoreL++;
 530:pathfinding.c ****                 break;
 531:pathfinding.c ****             default:
 532:pathfinding.c ****                 break;
 2976              		.loc 1 532 0
 2977 00f4 0BE0     		b	.L142
 2978              	.L144:
 526:pathfinding.c ****                 break;
 2979              		.loc 1 526 0
 2980 00f6 094B     		ldr	r3, .L147+4
 2981 00f8 1B68     		ldr	r3, [r3]
 2982 00fa 0133     		adds	r3, r3, #1
 2983 00fc 074A     		ldr	r2, .L147+4
 2984 00fe 1360     		str	r3, [r2]
 527:pathfinding.c ****             case Down:
 2985              		.loc 1 527 0
 2986 0100 05E0     		b	.L142
 2987              	.L145:
 529:pathfinding.c ****                 break;
 2988              		.loc 1 529 0
 2989 0102 074B     		ldr	r3, .L147+8
 2990 0104 1B68     		ldr	r3, [r3]
 2991 0106 0133     		adds	r3, r3, #1
 2992 0108 054A     		ldr	r2, .L147+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 64


 2993 010a 1360     		str	r3, [r2]
 530:pathfinding.c ****             default:
 2994              		.loc 1 530 0
 2995 010c 00BF     		nop
 2996              	.L142:
 2997              	.L146:
 533:pathfinding.c ****         }
 534:pathfinding.c ****     }
 535:pathfinding.c **** }
 2998              		.loc 1 535 0
 2999 010e 00BF     		nop
 3000 0110 1437     		adds	r7, r7, #20
 3001              		.cfi_def_cfa_offset 4
 3002 0112 BD46     		mov	sp, r7
 3003              		.cfi_def_cfa_register 13
 3004              		@ sp needed
 3005 0114 80BC     		pop	{r7}
 3006              		.cfi_restore 7
 3007              		.cfi_def_cfa_offset 0
 3008 0116 7047     		bx	lr
 3009              	.L148:
 3010              		.align	2
 3011              	.L147:
 3012 0118 00000000 		.word	map
 3013 011c 00000000 		.word	ignoreR
 3014 0120 00000000 		.word	ignoreL
 3015              		.cfi_endproc
 3016              	.LFE7:
 3017              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 3018              		.section	.text.getTargetOrientation,"ax",%progbits
 3019              		.align	2
 3020              		.global	getTargetOrientation
 3021              		.thumb
 3022              		.thumb_func
 3023              		.type	getTargetOrientation, %function
 3024              	getTargetOrientation:
 3025              	.LFB8:
 536:pathfinding.c **** 
 537:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 3026              		.loc 1 537 0
 3027              		.cfi_startproc
 3028              		@ args = 0, pretend = 0, frame = 8
 3029              		@ frame_needed = 1, uses_anonymous_args = 0
 3030              		@ link register save eliminated.
 3031 0000 80B4     		push	{r7}
 3032              		.cfi_def_cfa_offset 4
 3033              		.cfi_offset 7, -4
 3034 0002 83B0     		sub	sp, sp, #12
 3035              		.cfi_def_cfa_offset 16
 3036 0004 00AF     		add	r7, sp, #0
 3037              		.cfi_def_cfa_register 7
 3038 0006 7860     		str	r0, [r7, #4]
 3039 0008 3960     		str	r1, [r7]
 538:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 3040              		.loc 1 538 0
 3041 000a 7B68     		ldr	r3, [r7, #4]
 3042 000c 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 65


 3043 000e 2249     		ldr	r1, .L155
 3044 0010 1346     		mov	r3, r2
 3045 0012 DB00     		lsls	r3, r3, #3
 3046 0014 1344     		add	r3, r3, r2
 3047 0016 5B00     		lsls	r3, r3, #1
 3048 0018 1344     		add	r3, r3, r2
 3049 001a 3A68     		ldr	r2, [r7]
 3050 001c 1344     		add	r3, r3, r2
 3051 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3052 0022 082B     		cmp	r3, #8
 3053 0024 01D1     		bne	.L150
 539:pathfinding.c ****         return 0; // robot will be travelling up
 3054              		.loc 1 539 0
 3055 0026 0023     		movs	r3, #0
 3056 0028 30E0     		b	.L151
 3057              	.L150:
 540:pathfinding.c ****     }
 541:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 3058              		.loc 1 541 0
 3059 002a 7B68     		ldr	r3, [r7, #4]
 3060 002c 5A1E     		subs	r2, r3, #1
 3061 002e 1A49     		ldr	r1, .L155
 3062 0030 1346     		mov	r3, r2
 3063 0032 DB00     		lsls	r3, r3, #3
 3064 0034 1344     		add	r3, r3, r2
 3065 0036 5B00     		lsls	r3, r3, #1
 3066 0038 1344     		add	r3, r3, r2
 3067 003a 3A68     		ldr	r2, [r7]
 3068 003c 1344     		add	r3, r3, r2
 3069 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3070 0042 082B     		cmp	r3, #8
 3071 0044 01D1     		bne	.L152
 542:pathfinding.c ****         return 1; // robot will be travelling down
 3072              		.loc 1 542 0
 3073 0046 0123     		movs	r3, #1
 3074 0048 20E0     		b	.L151
 3075              	.L152:
 543:pathfinding.c ****     }
 544:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 3076              		.loc 1 544 0
 3077 004a 3B68     		ldr	r3, [r7]
 3078 004c 591C     		adds	r1, r3, #1
 3079 004e 1248     		ldr	r0, .L155
 3080 0050 7A68     		ldr	r2, [r7, #4]
 3081 0052 1346     		mov	r3, r2
 3082 0054 DB00     		lsls	r3, r3, #3
 3083 0056 1344     		add	r3, r3, r2
 3084 0058 5B00     		lsls	r3, r3, #1
 3085 005a 1344     		add	r3, r3, r2
 3086 005c 0B44     		add	r3, r3, r1
 3087 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3088 0062 082B     		cmp	r3, #8
 3089 0064 01D1     		bne	.L153
 545:pathfinding.c ****         return 2; // robot will be travelling left
 3090              		.loc 1 545 0
 3091 0066 0223     		movs	r3, #2
 3092 0068 10E0     		b	.L151
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 66


 3093              	.L153:
 546:pathfinding.c ****     }
 547:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 3094              		.loc 1 547 0
 3095 006a 3B68     		ldr	r3, [r7]
 3096 006c 591E     		subs	r1, r3, #1
 3097 006e 0A48     		ldr	r0, .L155
 3098 0070 7A68     		ldr	r2, [r7, #4]
 3099 0072 1346     		mov	r3, r2
 3100 0074 DB00     		lsls	r3, r3, #3
 3101 0076 1344     		add	r3, r3, r2
 3102 0078 5B00     		lsls	r3, r3, #1
 3103 007a 1344     		add	r3, r3, r2
 3104 007c 0B44     		add	r3, r3, r1
 3105 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3106 0082 082B     		cmp	r3, #8
 3107 0084 01D1     		bne	.L154
 548:pathfinding.c ****         return 3; // robot will be travelling right
 3108              		.loc 1 548 0
 3109 0086 0323     		movs	r3, #3
 3110 0088 00E0     		b	.L151
 3111              	.L154:
 549:pathfinding.c ****     }
 550:pathfinding.c ****     return 5; // placeholder
 3112              		.loc 1 550 0
 3113 008a 0523     		movs	r3, #5
 3114              	.L151:
 551:pathfinding.c **** }
 3115              		.loc 1 551 0
 3116 008c 1846     		mov	r0, r3
 3117 008e 0C37     		adds	r7, r7, #12
 3118              		.cfi_def_cfa_offset 4
 3119 0090 BD46     		mov	sp, r7
 3120              		.cfi_def_cfa_register 13
 3121              		@ sp needed
 3122 0092 80BC     		pop	{r7}
 3123              		.cfi_restore 7
 3124              		.cfi_def_cfa_offset 0
 3125 0094 7047     		bx	lr
 3126              	.L156:
 3127 0096 00BF     		.align	2
 3128              	.L155:
 3129 0098 00000000 		.word	map
 3130              		.cfi_endproc
 3131              	.LFE8:
 3132              		.size	getTargetOrientation, .-getTargetOrientation
 3133              		.section	.text.instructionsListLength,"ax",%progbits
 3134              		.align	2
 3135              		.global	instructionsListLength
 3136              		.thumb
 3137              		.thumb_func
 3138              		.type	instructionsListLength, %function
 3139              	instructionsListLength:
 3140              	.LFB9:
 552:pathfinding.c **** uint8_t instructionsListLength() {
 3141              		.loc 1 552 0
 3142              		.cfi_startproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 67


 3143              		@ args = 0, pretend = 0, frame = 0
 3144              		@ frame_needed = 1, uses_anonymous_args = 0
 3145              		@ link register save eliminated.
 3146 0000 80B4     		push	{r7}
 3147              		.cfi_def_cfa_offset 4
 3148              		.cfi_offset 7, -4
 3149 0002 00AF     		add	r7, sp, #0
 3150              		.cfi_def_cfa_register 7
 553:pathfinding.c ****     return numSteps;
 3151              		.loc 1 553 0
 3152 0004 034B     		ldr	r3, .L159
 3153 0006 1B68     		ldr	r3, [r3]
 3154 0008 DBB2     		uxtb	r3, r3
 554:pathfinding.c **** }
 3155              		.loc 1 554 0
 3156 000a 1846     		mov	r0, r3
 3157 000c BD46     		mov	sp, r7
 3158              		.cfi_def_cfa_register 13
 3159              		@ sp needed
 3160 000e 80BC     		pop	{r7}
 3161              		.cfi_restore 7
 3162              		.cfi_def_cfa_offset 0
 3163 0010 7047     		bx	lr
 3164              	.L160:
 3165 0012 00BF     		.align	2
 3166              	.L159:
 3167 0014 882C0000 		.word	numSteps
 3168              		.cfi_endproc
 3169              	.LFE9:
 3170              		.size	instructionsListLength, .-instructionsListLength
 3171              		.section	.text.findPath,"ax",%progbits
 3172              		.align	2
 3173              		.global	findPath
 3174              		.thumb
 3175              		.thumb_func
 3176              		.type	findPath, %function
 3177              	findPath:
 3178              	.LFB10:
 555:pathfinding.c **** 
 556:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 3179              		.loc 1 556 0
 3180              		.cfi_startproc
 3181              		@ args = 0, pretend = 0, frame = 32
 3182              		@ frame_needed = 1, uses_anonymous_args = 0
 3183 0000 90B5     		push	{r4, r7, lr}
 3184              		.cfi_def_cfa_offset 12
 3185              		.cfi_offset 4, -12
 3186              		.cfi_offset 7, -8
 3187              		.cfi_offset 14, -4
 3188 0002 8BB0     		sub	sp, sp, #44
 3189              		.cfi_def_cfa_offset 56
 3190 0004 02AF     		add	r7, sp, #8
 3191              		.cfi_def_cfa 7, 48
 3192 0006 F860     		str	r0, [r7, #12]
 3193 0008 B960     		str	r1, [r7, #8]
 3194 000a 7A60     		str	r2, [r7, #4]
 557:pathfinding.c ****     //clearMap(map); // clear map between each pass
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 68


 558:pathfinding.c ****     struct Location startLocation, targetLocation;
 559:pathfinding.c ****     startLocation.row = start_pos[0];
 3195              		.loc 1 559 0
 3196 000c 174B     		ldr	r3, .L163
 3197 000e 1B68     		ldr	r3, [r3]
 3198 0010 BB61     		str	r3, [r7, #24]
 560:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 3199              		.loc 1 560 0
 3200 0012 164B     		ldr	r3, .L163
 3201 0014 5B68     		ldr	r3, [r3, #4]
 3202 0016 FB61     		str	r3, [r7, #28]
 561:pathfinding.c ****     targetLocation.row = food_list[i][0];
 3203              		.loc 1 561 0
 3204 0018 7B68     		ldr	r3, [r7, #4]
 3205 001a DB00     		lsls	r3, r3, #3
 3206 001c BA68     		ldr	r2, [r7, #8]
 3207 001e 1344     		add	r3, r3, r2
 3208 0020 1B68     		ldr	r3, [r3]
 3209 0022 3B61     		str	r3, [r7, #16]
 562:pathfinding.c ****     targetLocation.col = food_list[i][1];
 3210              		.loc 1 562 0
 3211 0024 7B68     		ldr	r3, [r7, #4]
 3212 0026 DB00     		lsls	r3, r3, #3
 3213 0028 BA68     		ldr	r2, [r7, #8]
 3214 002a 1344     		add	r3, r3, r2
 3215 002c 5B68     		ldr	r3, [r3, #4]
 3216 002e 7B61     		str	r3, [r7, #20]
 563:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 3217              		.loc 1 563 0
 3218 0030 7B69     		ldr	r3, [r7, #20]
 3219 0032 0093     		str	r3, [sp]
 3220 0034 3B69     		ldr	r3, [r7, #16]
 3221 0036 07F11802 		add	r2, r7, #24
 3222 003a 06CA     		ldmia	r2, {r1, r2}
 3223 003c F868     		ldr	r0, [r7, #12]
 3224 003e FFF7FEFF 		bl	dijkstra
 564:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 3225              		.loc 1 564 0
 3226 0042 0B4B     		ldr	r3, .L163+4
 3227 0044 1C68     		ldr	r4, [r3]
 3228 0046 6A46     		mov	r2, sp
 3229 0048 07F11003 		add	r3, r7, #16
 3230 004c 93E80300 		ldmia	r3, {r0, r1}
 3231 0050 82E80300 		stmia	r2, {r0, r1}
 3232 0054 07F11803 		add	r3, r7, #24
 3233 0058 0CCB     		ldmia	r3, {r2, r3}
 3234 005a 2146     		mov	r1, r4
 3235 005c F868     		ldr	r0, [r7, #12]
 3236 005e FFF7FEFF 		bl	getPathInstructions
 565:pathfinding.c ****     return finalInstructionList;
 3237              		.loc 1 565 0
 3238 0062 044B     		ldr	r3, .L163+8
 566:pathfinding.c **** }
 3239              		.loc 1 566 0
 3240 0064 1846     		mov	r0, r3
 3241 0066 2437     		adds	r7, r7, #36
 3242              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 69


 3243 0068 BD46     		mov	sp, r7
 3244              		.cfi_def_cfa_register 13
 3245              		@ sp needed
 3246 006a 90BD     		pop	{r4, r7, pc}
 3247              	.L164:
 3248              		.align	2
 3249              	.L163:
 3250 006c 00000000 		.word	start_pos
 3251 0070 882C0000 		.word	numSteps
 3252 0074 44160000 		.word	finalInstructionList
 3253              		.cfi_endproc
 3254              	.LFE10:
 3255              		.size	findPath, .-findPath
 3256              		.section	.text.findPathNewOrientation,"ax",%progbits
 3257              		.align	2
 3258              		.global	findPathNewOrientation
 3259              		.thumb
 3260              		.thumb_func
 3261              		.type	findPathNewOrientation, %function
 3262              	findPathNewOrientation:
 3263              	.LFB11:
 567:pathfinding.c **** 
 568:pathfinding.c **** Instruction * findPathNewOrientation(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i, enum 
 3264              		.loc 1 568 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 32
 3267              		@ frame_needed = 1, uses_anonymous_args = 0
 3268 0000 90B5     		push	{r4, r7, lr}
 3269              		.cfi_def_cfa_offset 12
 3270              		.cfi_offset 4, -12
 3271              		.cfi_offset 7, -8
 3272              		.cfi_offset 14, -4
 3273 0002 8BB0     		sub	sp, sp, #44
 3274              		.cfi_def_cfa_offset 56
 3275 0004 02AF     		add	r7, sp, #8
 3276              		.cfi_def_cfa 7, 48
 3277 0006 F860     		str	r0, [r7, #12]
 3278 0008 B960     		str	r1, [r7, #8]
 3279 000a 7A60     		str	r2, [r7, #4]
 3280 000c FB70     		strb	r3, [r7, #3]
 569:pathfinding.c ****     //clearMap(map); // clear map between each pass
 570:pathfinding.c ****     // update pathfinding orientation with current robot orientation
 571:pathfinding.c ****     currentRobotOrientation = orientation;
 3281              		.loc 1 571 0
 3282 000e 1F4A     		ldr	r2, .L167
 3283 0010 FB78     		ldrb	r3, [r7, #3]
 3284 0012 1370     		strb	r3, [r2]
 572:pathfinding.c ****     struct Location startLocation, targetLocation;
 573:pathfinding.c ****     startLocation.row = food_list[i - 1][0];
 3285              		.loc 1 573 0
 3286 0014 7B68     		ldr	r3, [r7, #4]
 3287 0016 03F10053 		add	r3, r3, #536870912
 3288 001a 013B     		subs	r3, r3, #1
 3289 001c DB00     		lsls	r3, r3, #3
 3290 001e BA68     		ldr	r2, [r7, #8]
 3291 0020 1344     		add	r3, r3, r2
 3292 0022 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 70


 3293 0024 BB61     		str	r3, [r7, #24]
 574:pathfinding.c ****     startLocation.col = food_list[i - 1][1]; // need to change every pass
 3294              		.loc 1 574 0
 3295 0026 7B68     		ldr	r3, [r7, #4]
 3296 0028 03F10053 		add	r3, r3, #536870912
 3297 002c 013B     		subs	r3, r3, #1
 3298 002e DB00     		lsls	r3, r3, #3
 3299 0030 BA68     		ldr	r2, [r7, #8]
 3300 0032 1344     		add	r3, r3, r2
 3301 0034 5B68     		ldr	r3, [r3, #4]
 3302 0036 FB61     		str	r3, [r7, #28]
 575:pathfinding.c ****     targetLocation.row = food_list[i][0];
 3303              		.loc 1 575 0
 3304 0038 7B68     		ldr	r3, [r7, #4]
 3305 003a DB00     		lsls	r3, r3, #3
 3306 003c BA68     		ldr	r2, [r7, #8]
 3307 003e 1344     		add	r3, r3, r2
 3308 0040 1B68     		ldr	r3, [r3]
 3309 0042 3B61     		str	r3, [r7, #16]
 576:pathfinding.c ****     targetLocation.col = food_list[i][1];
 3310              		.loc 1 576 0
 3311 0044 7B68     		ldr	r3, [r7, #4]
 3312 0046 DB00     		lsls	r3, r3, #3
 3313 0048 BA68     		ldr	r2, [r7, #8]
 3314 004a 1344     		add	r3, r3, r2
 3315 004c 5B68     		ldr	r3, [r3, #4]
 3316 004e 7B61     		str	r3, [r7, #20]
 577:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 3317              		.loc 1 577 0
 3318 0050 7B69     		ldr	r3, [r7, #20]
 3319 0052 0093     		str	r3, [sp]
 3320 0054 3B69     		ldr	r3, [r7, #16]
 3321 0056 07F11802 		add	r2, r7, #24
 3322 005a 06CA     		ldmia	r2, {r1, r2}
 3323 005c F868     		ldr	r0, [r7, #12]
 3324 005e FFF7FEFF 		bl	dijkstra
 578:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 3325              		.loc 1 578 0
 3326 0062 0B4B     		ldr	r3, .L167+4
 3327 0064 1C68     		ldr	r4, [r3]
 3328 0066 6A46     		mov	r2, sp
 3329 0068 07F11003 		add	r3, r7, #16
 3330 006c 93E80300 		ldmia	r3, {r0, r1}
 3331 0070 82E80300 		stmia	r2, {r0, r1}
 3332 0074 07F11803 		add	r3, r7, #24
 3333 0078 0CCB     		ldmia	r3, {r2, r3}
 3334 007a 2146     		mov	r1, r4
 3335 007c F868     		ldr	r0, [r7, #12]
 3336 007e FFF7FEFF 		bl	getPathInstructions
 579:pathfinding.c ****     return finalInstructionList;
 3337              		.loc 1 579 0
 3338 0082 044B     		ldr	r3, .L167+8
 580:pathfinding.c **** }
 3339              		.loc 1 580 0
 3340 0084 1846     		mov	r0, r3
 3341 0086 2437     		adds	r7, r7, #36
 3342              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 71


 3343 0088 BD46     		mov	sp, r7
 3344              		.cfi_def_cfa_register 13
 3345              		@ sp needed
 3346 008a 90BD     		pop	{r4, r7, pc}
 3347              	.L168:
 3348              		.align	2
 3349              	.L167:
 3350 008c 00000000 		.word	currentRobotOrientation
 3351 0090 882C0000 		.word	numSteps
 3352 0094 44160000 		.word	finalInstructionList
 3353              		.cfi_endproc
 3354              	.LFE11:
 3355              		.size	findPathNewOrientation, .-findPathNewOrientation
 3356              		.text
 3357              	.Letext0:
 3358              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3359              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3360              		.file 4 "pathfinding.h"
 3361              		.section	.debug_info,"",%progbits
 3362              	.Ldebug_info0:
 3363 0000 84090000 		.4byte	0x984
 3364 0004 0400     		.2byte	0x4
 3365 0006 00000000 		.4byte	.Ldebug_abbrev0
 3366 000a 04       		.byte	0x4
 3367 000b 01       		.uleb128 0x1
 3368 000c 50000000 		.4byte	.LASF84
 3369 0010 0C       		.byte	0xc
 3370 0011 5F040000 		.4byte	.LASF85
 3371 0015 57010000 		.4byte	.LASF86
 3372 0019 78000000 		.4byte	.Ldebug_ranges0+0x78
 3373 001d 00000000 		.4byte	0
 3374 0021 00000000 		.4byte	.Ldebug_line0
 3375 0025 02       		.uleb128 0x2
 3376 0026 01       		.byte	0x1
 3377 0027 06       		.byte	0x6
 3378 0028 30000000 		.4byte	.LASF0
 3379 002c 03       		.uleb128 0x3
 3380 002d 3C000000 		.4byte	.LASF12
 3381 0031 02       		.byte	0x2
 3382 0032 1D       		.byte	0x1d
 3383 0033 37000000 		.4byte	0x37
 3384 0037 02       		.uleb128 0x2
 3385 0038 01       		.byte	0x1
 3386 0039 08       		.byte	0x8
 3387 003a 61030000 		.4byte	.LASF1
 3388 003e 02       		.uleb128 0x2
 3389 003f 02       		.byte	0x2
 3390 0040 05       		.byte	0x5
 3391 0041 A2030000 		.4byte	.LASF2
 3392 0045 02       		.uleb128 0x2
 3393 0046 02       		.byte	0x2
 3394 0047 07       		.byte	0x7
 3395 0048 82020000 		.4byte	.LASF3
 3396 004c 02       		.uleb128 0x2
 3397 004d 04       		.byte	0x4
 3398 004e 05       		.byte	0x5
 3399 004f C6010000 		.4byte	.LASF4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 72


 3400 0053 02       		.uleb128 0x2
 3401 0054 04       		.byte	0x4
 3402 0055 07       		.byte	0x7
 3403 0056 5E020000 		.4byte	.LASF5
 3404 005a 02       		.uleb128 0x2
 3405 005b 08       		.byte	0x8
 3406 005c 05       		.byte	0x5
 3407 005d 49010000 		.4byte	.LASF6
 3408 0061 02       		.uleb128 0x2
 3409 0062 08       		.byte	0x8
 3410 0063 07       		.byte	0x7
 3411 0064 E6000000 		.4byte	.LASF7
 3412 0068 04       		.uleb128 0x4
 3413 0069 04       		.byte	0x4
 3414 006a 05       		.byte	0x5
 3415 006b 696E7400 		.ascii	"int\000"
 3416 006f 02       		.uleb128 0x2
 3417 0070 04       		.byte	0x4
 3418 0071 07       		.byte	0x7
 3419 0072 44020000 		.4byte	.LASF8
 3420 0076 02       		.uleb128 0x2
 3421 0077 08       		.byte	0x8
 3422 0078 04       		.byte	0x4
 3423 0079 D2020000 		.4byte	.LASF9
 3424 007d 02       		.uleb128 0x2
 3425 007e 04       		.byte	0x4
 3426 007f 07       		.byte	0x7
 3427 0080 C9020000 		.4byte	.LASF10
 3428 0084 02       		.uleb128 0x2
 3429 0085 01       		.byte	0x1
 3430 0086 08       		.byte	0x8
 3431 0087 FB030000 		.4byte	.LASF11
 3432 008b 03       		.uleb128 0x3
 3433 008c C2040000 		.4byte	.LASF13
 3434 0090 03       		.byte	0x3
 3435 0091 18       		.byte	0x18
 3436 0092 2C000000 		.4byte	0x2c
 3437 0096 05       		.uleb128 0x5
 3438 0097 00000000 		.4byte	.LASF17
 3439 009b 01       		.byte	0x1
 3440 009c 37000000 		.4byte	0x37
 3441 00a0 04       		.byte	0x4
 3442 00a1 0D       		.byte	0xd
 3443 00a2 BE000000 		.4byte	0xbe
 3444 00a6 06       		.uleb128 0x6
 3445 00a7 557000   		.ascii	"Up\000"
 3446 00aa 00       		.byte	0
 3447 00ab 07       		.uleb128 0x7
 3448 00ac 36040000 		.4byte	.LASF14
 3449 00b0 01       		.byte	0x1
 3450 00b1 07       		.uleb128 0x7
 3451 00b2 C4020000 		.4byte	.LASF15
 3452 00b6 02       		.byte	0x2
 3453 00b7 07       		.uleb128 0x7
 3454 00b8 C5030000 		.4byte	.LASF16
 3455 00bc 03       		.byte	0x3
 3456 00bd 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 73


 3457 00be 05       		.uleb128 0x5
 3458 00bf 6F030000 		.4byte	.LASF18
 3459 00c3 01       		.byte	0x1
 3460 00c4 37000000 		.4byte	0x37
 3461 00c8 04       		.byte	0x4
 3462 00c9 0E       		.byte	0xe
 3463 00ca F9000000 		.4byte	0xf9
 3464 00ce 07       		.uleb128 0x7
 3465 00cf BB030000 		.4byte	.LASF19
 3466 00d3 00       		.byte	0
 3467 00d4 07       		.uleb128 0x7
 3468 00d5 F9020000 		.4byte	.LASF20
 3469 00d9 01       		.byte	0x1
 3470 00da 07       		.uleb128 0x7
 3471 00db 7E040000 		.4byte	.LASF21
 3472 00df 02       		.byte	0x2
 3473 00e0 07       		.uleb128 0x7
 3474 00e1 1B010000 		.4byte	.LASF22
 3475 00e5 03       		.byte	0x3
 3476 00e6 07       		.uleb128 0x7
 3477 00e7 DE010000 		.4byte	.LASF23
 3478 00eb 04       		.byte	0x4
 3479 00ec 07       		.uleb128 0x7
 3480 00ed 95020000 		.4byte	.LASF24
 3481 00f1 05       		.byte	0x5
 3482 00f2 07       		.uleb128 0x7
 3483 00f3 1A000000 		.4byte	.LASF25
 3484 00f7 06       		.byte	0x6
 3485 00f8 00       		.byte	0
 3486 00f9 08       		.uleb128 0x8
 3487 00fa AF010000 		.4byte	.LASF31
 3488 00fe 14       		.byte	0x14
 3489 00ff 04       		.byte	0x4
 3490 0100 10       		.byte	0x10
 3491 0101 42010000 		.4byte	0x142
 3492 0105 09       		.uleb128 0x9
 3493 0106 46000000 		.4byte	.LASF26
 3494 010a 04       		.byte	0x4
 3495 010b 11       		.byte	0x11
 3496 010c BE000000 		.4byte	0xbe
 3497 0110 00       		.byte	0
 3498 0111 09       		.uleb128 0x9
 3499 0112 FF040000 		.4byte	.LASF27
 3500 0116 04       		.byte	0x4
 3501 0117 12       		.byte	0x12
 3502 0118 68000000 		.4byte	0x68
 3503 011c 04       		.byte	0x4
 3504 011d 09       		.uleb128 0x9
 3505 011e 07050000 		.4byte	.LASF28
 3506 0122 04       		.byte	0x4
 3507 0123 13       		.byte	0x13
 3508 0124 68000000 		.4byte	0x68
 3509 0128 08       		.byte	0x8
 3510 0129 09       		.uleb128 0x9
 3511 012a 38010000 		.4byte	.LASF29
 3512 012e 04       		.byte	0x4
 3513 012f 14       		.byte	0x14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 74


 3514 0130 68000000 		.4byte	0x68
 3515 0134 0C       		.byte	0xc
 3516 0135 09       		.uleb128 0x9
 3517 0136 FD000000 		.4byte	.LASF30
 3518 013a 04       		.byte	0x4
 3519 013b 15       		.byte	0x15
 3520 013c 96000000 		.4byte	0x96
 3521 0140 10       		.byte	0x10
 3522 0141 00       		.byte	0
 3523 0142 03       		.uleb128 0x3
 3524 0143 AF010000 		.4byte	.LASF31
 3525 0147 04       		.byte	0x4
 3526 0148 16       		.byte	0x16
 3527 0149 F9000000 		.4byte	0xf9
 3528 014d 08       		.uleb128 0x8
 3529 014e F1010000 		.4byte	.LASF32
 3530 0152 08       		.byte	0x8
 3531 0153 04       		.byte	0x4
 3532 0154 1A       		.byte	0x1a
 3533 0155 72010000 		.4byte	0x172
 3534 0159 0A       		.uleb128 0xa
 3535 015a 726F7700 		.ascii	"row\000"
 3536 015e 04       		.byte	0x4
 3537 015f 1C       		.byte	0x1c
 3538 0160 68000000 		.4byte	0x68
 3539 0164 00       		.byte	0
 3540 0165 0A       		.uleb128 0xa
 3541 0166 636F6C00 		.ascii	"col\000"
 3542 016a 04       		.byte	0x4
 3543 016b 1D       		.byte	0x1d
 3544 016c 68000000 		.4byte	0x68
 3545 0170 04       		.byte	0x4
 3546 0171 00       		.byte	0
 3547 0172 0B       		.uleb128 0xb
 3548 0173 2F010000 		.4byte	.LASF33
 3549 0177 01       		.byte	0x1
 3550 0178 5C       		.byte	0x5c
 3551 0179 00000000 		.4byte	.LFB1
 3552 017d 58000000 		.4byte	.LFE1-.LFB1
 3553 0181 01       		.uleb128 0x1
 3554 0182 9C       		.byte	0x9c
 3555 0183 C2010000 		.4byte	0x1c2
 3556 0187 0C       		.uleb128 0xc
 3557 0188 6D617000 		.ascii	"map\000"
 3558 018c 01       		.byte	0x1
 3559 018d 5C       		.byte	0x5c
 3560 018e D2010000 		.4byte	0x1d2
 3561 0192 02       		.uleb128 0x2
 3562 0193 91       		.byte	0x91
 3563 0194 6C       		.sleb128 -20
 3564 0195 0D       		.uleb128 0xd
 3565 0196 08000000 		.4byte	.LBB2
 3566 019a 44000000 		.4byte	.LBE2-.LBB2
 3567 019e 0E       		.uleb128 0xe
 3568 019f 6900     		.ascii	"i\000"
 3569 01a1 01       		.byte	0x1
 3570 01a2 5E       		.byte	0x5e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 75


 3571 01a3 68000000 		.4byte	0x68
 3572 01a7 02       		.uleb128 0x2
 3573 01a8 91       		.byte	0x91
 3574 01a9 74       		.sleb128 -12
 3575 01aa 0D       		.uleb128 0xd
 3576 01ab 0E000000 		.4byte	.LBB3
 3577 01af 2C000000 		.4byte	.LBE3-.LBB3
 3578 01b3 0E       		.uleb128 0xe
 3579 01b4 6A00     		.ascii	"j\000"
 3580 01b6 01       		.byte	0x1
 3581 01b7 5F       		.byte	0x5f
 3582 01b8 68000000 		.4byte	0x68
 3583 01bc 02       		.uleb128 0x2
 3584 01bd 91       		.byte	0x91
 3585 01be 70       		.sleb128 -16
 3586 01bf 00       		.byte	0
 3587 01c0 00       		.byte	0
 3588 01c1 00       		.byte	0
 3589 01c2 0F       		.uleb128 0xf
 3590 01c3 68000000 		.4byte	0x68
 3591 01c7 D2010000 		.4byte	0x1d2
 3592 01cb 10       		.uleb128 0x10
 3593 01cc 7D000000 		.4byte	0x7d
 3594 01d0 12       		.byte	0x12
 3595 01d1 00       		.byte	0
 3596 01d2 11       		.uleb128 0x11
 3597 01d3 04       		.byte	0x4
 3598 01d4 C2010000 		.4byte	0x1c2
 3599 01d8 12       		.uleb128 0x12
 3600 01d9 45030000 		.4byte	.LASF34
 3601 01dd 01       		.byte	0x1
 3602 01de 65       		.byte	0x65
 3603 01df 00000000 		.4byte	.LFB2
 3604 01e3 60000000 		.4byte	.LFE2-.LFB2
 3605 01e7 01       		.uleb128 0x1
 3606 01e8 9C       		.byte	0x9c
 3607 01e9 28020000 		.4byte	0x228
 3608 01ed 0C       		.uleb128 0xc
 3609 01ee 6D617000 		.ascii	"map\000"
 3610 01f2 01       		.byte	0x1
 3611 01f3 65       		.byte	0x65
 3612 01f4 D2010000 		.4byte	0x1d2
 3613 01f8 02       		.uleb128 0x2
 3614 01f9 91       		.byte	0x91
 3615 01fa 6C       		.sleb128 -20
 3616 01fb 0D       		.uleb128 0xd
 3617 01fc 08000000 		.4byte	.LBB4
 3618 0200 4E000000 		.4byte	.LBE4-.LBB4
 3619 0204 0E       		.uleb128 0xe
 3620 0205 6900     		.ascii	"i\000"
 3621 0207 01       		.byte	0x1
 3622 0208 67       		.byte	0x67
 3623 0209 68000000 		.4byte	0x68
 3624 020d 02       		.uleb128 0x2
 3625 020e 91       		.byte	0x91
 3626 020f 74       		.sleb128 -12
 3627 0210 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 76


 3628 0211 0E000000 		.4byte	.LBB5
 3629 0215 3C000000 		.4byte	.LBE5-.LBB5
 3630 0219 0E       		.uleb128 0xe
 3631 021a 6A00     		.ascii	"j\000"
 3632 021c 01       		.byte	0x1
 3633 021d 68       		.byte	0x68
 3634 021e 68000000 		.4byte	0x68
 3635 0222 02       		.uleb128 0x2
 3636 0223 91       		.byte	0x91
 3637 0224 70       		.sleb128 -16
 3638 0225 00       		.byte	0
 3639 0226 00       		.byte	0
 3640 0227 00       		.byte	0
 3641 0228 13       		.uleb128 0x13
 3642 0229 24000000 		.4byte	.LASF66
 3643 022d 01       		.byte	0x1
 3644 022e 73       		.byte	0x73
 3645 022f 84020000 		.4byte	0x284
 3646 0233 00000000 		.4byte	.LFB3
 3647 0237 56000000 		.4byte	.LFE3-.LFB3
 3648 023b 01       		.uleb128 0x1
 3649 023c 9C       		.byte	0x9c
 3650 023d 84020000 		.4byte	0x284
 3651 0241 0C       		.uleb128 0xc
 3652 0242 7200     		.ascii	"r\000"
 3653 0244 01       		.byte	0x1
 3654 0245 73       		.byte	0x73
 3655 0246 68000000 		.4byte	0x68
 3656 024a 02       		.uleb128 0x2
 3657 024b 91       		.byte	0x91
 3658 024c 74       		.sleb128 -12
 3659 024d 0C       		.uleb128 0xc
 3660 024e 6300     		.ascii	"c\000"
 3661 0250 01       		.byte	0x1
 3662 0251 73       		.byte	0x73
 3663 0252 68000000 		.4byte	0x68
 3664 0256 02       		.uleb128 0x2
 3665 0257 91       		.byte	0x91
 3666 0258 70       		.sleb128 -16
 3667 0259 14       		.uleb128 0x14
 3668 025a 1F000000 		.4byte	.LASF35
 3669 025e 01       		.byte	0x1
 3670 025f 73       		.byte	0x73
 3671 0260 68000000 		.4byte	0x68
 3672 0264 02       		.uleb128 0x2
 3673 0265 91       		.byte	0x91
 3674 0266 6C       		.sleb128 -20
 3675 0267 14       		.uleb128 0x14
 3676 0268 F1040000 		.4byte	.LASF36
 3677 026c 01       		.byte	0x1
 3678 026d 73       		.byte	0x73
 3679 026e 68000000 		.4byte	0x68
 3680 0272 02       		.uleb128 0x2
 3681 0273 91       		.byte	0x91
 3682 0274 68       		.sleb128 -24
 3683 0275 0C       		.uleb128 0xc
 3684 0276 6D617000 		.ascii	"map\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 77


 3685 027a 01       		.byte	0x1
 3686 027b 73       		.byte	0x73
 3687 027c D2010000 		.4byte	0x1d2
 3688 0280 02       		.uleb128 0x2
 3689 0281 91       		.byte	0x91
 3690 0282 00       		.sleb128 0
 3691 0283 00       		.byte	0
 3692 0284 02       		.uleb128 0x2
 3693 0285 01       		.byte	0x1
 3694 0286 02       		.byte	0x2
 3695 0287 5B030000 		.4byte	.LASF37
 3696 028b 0B       		.uleb128 0xb
 3697 028c 11000000 		.4byte	.LASF38
 3698 0290 01       		.byte	0x1
 3699 0291 77       		.byte	0x77
 3700 0292 00000000 		.4byte	.LFB4
 3701 0296 4C090000 		.4byte	.LFE4-.LFB4
 3702 029a 01       		.uleb128 0x1
 3703 029b 9C       		.byte	0x9c
 3704 029c D9040000 		.4byte	0x4d9
 3705 02a0 0C       		.uleb128 0xc
 3706 02a1 6D617000 		.ascii	"map\000"
 3707 02a5 01       		.byte	0x1
 3708 02a6 77       		.byte	0x77
 3709 02a7 D2010000 		.4byte	0x1d2
 3710 02ab 03       		.uleb128 0x3
 3711 02ac 91       		.byte	0x91
 3712 02ad BC52     		.sleb128 -5828
 3713 02af 14       		.uleb128 0x14
 3714 02b0 21010000 		.4byte	.LASF39
 3715 02b4 01       		.byte	0x1
 3716 02b5 77       		.byte	0x77
 3717 02b6 4D010000 		.4byte	0x14d
 3718 02ba 03       		.uleb128 0x3
 3719 02bb 91       		.byte	0x91
 3720 02bc B452     		.sleb128 -5836
 3721 02be 14       		.uleb128 0x14
 3722 02bf CF010000 		.4byte	.LASF40
 3723 02c3 01       		.byte	0x1
 3724 02c4 77       		.byte	0x77
 3725 02c5 4D010000 		.4byte	0x14d
 3726 02c9 02       		.uleb128 0x2
 3727 02ca 91       		.byte	0x91
 3728 02cb 7C       		.sleb128 -4
 3729 02cc 15       		.uleb128 0x15
 3730 02cd F0030000 		.4byte	.LASF41
 3731 02d1 01       		.byte	0x1
 3732 02d2 79       		.byte	0x79
 3733 02d3 D9040000 		.4byte	0x4d9
 3734 02d7 03       		.uleb128 0x3
 3735 02d8 91       		.byte	0x91
 3736 02d9 9C76     		.sleb128 -1252
 3737 02db 08       		.uleb128 0x8
 3738 02dc 8F040000 		.4byte	.LASF42
 3739 02e0 0C       		.byte	0xc
 3740 02e1 01       		.byte	0x1
 3741 02e2 80       		.byte	0x80
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 78


 3742 02e3 00030000 		.4byte	0x300
 3743 02e7 09       		.uleb128 0x9
 3744 02e8 E7030000 		.4byte	.LASF43
 3745 02ec 01       		.byte	0x1
 3746 02ed 81       		.byte	0x81
 3747 02ee 4D010000 		.4byte	0x14d
 3748 02f2 00       		.byte	0
 3749 02f3 09       		.uleb128 0x9
 3750 02f4 23040000 		.4byte	.LASF44
 3751 02f8 01       		.byte	0x1
 3752 02f9 82       		.byte	0x82
 3753 02fa 68000000 		.4byte	0x68
 3754 02fe 08       		.byte	0x8
 3755 02ff 00       		.byte	0
 3756 0300 0E       		.uleb128 0xe
 3757 0301 707100   		.ascii	"pq\000"
 3758 0304 01       		.byte	0x1
 3759 0305 85       		.byte	0x85
 3760 0306 EF040000 		.4byte	0x4ef
 3761 030a 03       		.uleb128 0x3
 3762 030b 91       		.byte	0x91
 3763 030c C05B     		.sleb128 -4672
 3764 030e 15       		.uleb128 0x15
 3765 030f A9020000 		.4byte	.LASF45
 3766 0313 01       		.byte	0x1
 3767 0314 86       		.byte	0x86
 3768 0315 68000000 		.4byte	0x68
 3769 0319 02       		.uleb128 0x2
 3770 031a 91       		.byte	0x91
 3771 031b 5C       		.sleb128 -36
 3772 031c 15       		.uleb128 0x15
 3773 031d 11010000 		.4byte	.LASF46
 3774 0321 01       		.byte	0x1
 3775 0322 89       		.byte	0x89
 3776 0323 D9040000 		.4byte	0x4d9
 3777 0327 03       		.uleb128 0x3
 3778 0328 91       		.byte	0x91
 3779 0329 CC52     		.sleb128 -5812
 3780 032b 15       		.uleb128 0x15
 3781 032c DE000000 		.4byte	.LASF47
 3782 0330 01       		.byte	0x1
 3783 0331 92       		.byte	0x92
 3784 0332 68000000 		.4byte	0x68
 3785 0336 02       		.uleb128 0x2
 3786 0337 91       		.byte	0x91
 3787 0338 50       		.sleb128 -48
 3788 0339 15       		.uleb128 0x15
 3789 033a 51020000 		.4byte	.LASF48
 3790 033e 01       		.byte	0x1
 3791 033f C9       		.byte	0xc9
 3792 0340 68000000 		.4byte	0x68
 3793 0344 02       		.uleb128 0x2
 3794 0345 91       		.byte	0x91
 3795 0346 40       		.sleb128 -64
 3796 0347 15       		.uleb128 0x15
 3797 0348 DE030000 		.4byte	.LASF49
 3798 034c 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 79


 3799 034d CC       		.byte	0xcc
 3800 034e 00050000 		.4byte	0x500
 3801 0352 03       		.uleb128 0x3
 3802 0353 91       		.byte	0x91
 3803 0354 987F     		.sleb128 -104
 3804 0356 15       		.uleb128 0x15
 3805 0357 DE020000 		.4byte	.LASF50
 3806 035b 01       		.byte	0x1
 3807 035c CD       		.byte	0xcd
 3808 035d 68000000 		.4byte	0x68
 3809 0361 03       		.uleb128 0x3
 3810 0362 91       		.byte	0x91
 3811 0363 BC7F     		.sleb128 -68
 3812 0365 15       		.uleb128 0x15
 3813 0366 BB010000 		.4byte	.LASF51
 3814 036a 01       		.byte	0x1
 3815 036b CE       		.byte	0xce
 3816 036c 68000000 		.4byte	0x68
 3817 0370 03       		.uleb128 0x3
 3818 0371 91       		.byte	0x91
 3819 0372 B87F     		.sleb128 -72
 3820 0374 15       		.uleb128 0x15
 3821 0375 3B030000 		.4byte	.LASF52
 3822 0379 01       		.byte	0x1
 3823 037a D3       		.byte	0xd3
 3824 037b 68000000 		.4byte	0x68
 3825 037f 03       		.uleb128 0x3
 3826 0380 91       		.byte	0x91
 3827 0381 B47F     		.sleb128 -76
 3828 0383 16       		.uleb128 0x16
 3829 0384 28000000 		.4byte	.LBB6
 3830 0388 92000000 		.4byte	.LBE6-.LBB6
 3831 038c B3030000 		.4byte	0x3b3
 3832 0390 0E       		.uleb128 0xe
 3833 0391 6900     		.ascii	"i\000"
 3834 0393 01       		.byte	0x1
 3835 0394 7A       		.byte	0x7a
 3836 0395 68000000 		.4byte	0x68
 3837 0399 02       		.uleb128 0x2
 3838 039a 91       		.byte	0x91
 3839 039b 64       		.sleb128 -28
 3840 039c 0D       		.uleb128 0xd
 3841 039d 36000000 		.4byte	.LBB7
 3842 03a1 60000000 		.4byte	.LBE7-.LBB7
 3843 03a5 0E       		.uleb128 0xe
 3844 03a6 6A00     		.ascii	"j\000"
 3845 03a8 01       		.byte	0x1
 3846 03a9 7B       		.byte	0x7b
 3847 03aa 68000000 		.4byte	0x68
 3848 03ae 02       		.uleb128 0x2
 3849 03af 91       		.byte	0x91
 3850 03b0 60       		.sleb128 -32
 3851 03b1 00       		.byte	0
 3852 03b2 00       		.byte	0
 3853 03b3 16       		.uleb128 0x16
 3854 03b4 C6000000 		.4byte	.LBB8
 3855 03b8 92000000 		.4byte	.LBE8-.LBB8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 80


 3856 03bc E3030000 		.4byte	0x3e3
 3857 03c0 0E       		.uleb128 0xe
 3858 03c1 6900     		.ascii	"i\000"
 3859 03c3 01       		.byte	0x1
 3860 03c4 8C       		.byte	0x8c
 3861 03c5 68000000 		.4byte	0x68
 3862 03c9 02       		.uleb128 0x2
 3863 03ca 91       		.byte	0x91
 3864 03cb 58       		.sleb128 -40
 3865 03cc 0D       		.uleb128 0xd
 3866 03cd D4000000 		.4byte	.LBB9
 3867 03d1 60000000 		.4byte	.LBE9-.LBB9
 3868 03d5 0E       		.uleb128 0xe
 3869 03d6 6A00     		.ascii	"j\000"
 3870 03d8 01       		.byte	0x1
 3871 03d9 8D       		.byte	0x8d
 3872 03da 68000000 		.4byte	0x68
 3873 03de 02       		.uleb128 0x2
 3874 03df 91       		.byte	0x91
 3875 03e0 54       		.sleb128 -44
 3876 03e1 00       		.byte	0
 3877 03e2 00       		.byte	0
 3878 03e3 17       		.uleb128 0x17
 3879 03e4 00000000 		.4byte	.Ldebug_ranges0+0
 3880 03e8 99040000 		.4byte	0x499
 3881 03ec 0E       		.uleb128 0xe
 3882 03ed 69647800 		.ascii	"idx\000"
 3883 03f1 01       		.byte	0x1
 3884 03f2 9C       		.byte	0x9c
 3885 03f3 68000000 		.4byte	0x68
 3886 03f7 02       		.uleb128 0x2
 3887 03f8 91       		.byte	0x91
 3888 03f9 4C       		.sleb128 -52
 3889 03fa 15       		.uleb128 0x15
 3890 03fb 2A030000 		.4byte	.LASF53
 3891 03ff 01       		.byte	0x1
 3892 0400 A2       		.byte	0xa2
 3893 0401 DB020000 		.4byte	0x2db
 3894 0405 03       		.uleb128 0x3
 3895 0406 91       		.byte	0x91
 3896 0407 C052     		.sleb128 -5824
 3897 0409 0E       		.uleb128 0xe
 3898 040a 726F7700 		.ascii	"row\000"
 3899 040e 01       		.byte	0x1
 3900 040f A6       		.byte	0xa6
 3901 0410 68000000 		.4byte	0x68
 3902 0414 03       		.uleb128 0x3
 3903 0415 91       		.byte	0x91
 3904 0416 AC7F     		.sleb128 -84
 3905 0418 0E       		.uleb128 0xe
 3906 0419 636F6C00 		.ascii	"col\000"
 3907 041d 01       		.byte	0x1
 3908 041e A7       		.byte	0xa7
 3909 041f 68000000 		.4byte	0x68
 3910 0423 03       		.uleb128 0x3
 3911 0424 91       		.byte	0x91
 3912 0425 A87F     		.sleb128 -88
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 81


 3913 0427 16       		.uleb128 0x16
 3914 0428 02020000 		.4byte	.LBB11
 3915 042c 90000000 		.4byte	.LBE11-.LBB11
 3916 0430 41040000 		.4byte	0x441
 3917 0434 0E       		.uleb128 0xe
 3918 0435 6900     		.ascii	"i\000"
 3919 0437 01       		.byte	0x1
 3920 0438 9D       		.byte	0x9d
 3921 0439 68000000 		.4byte	0x68
 3922 043d 02       		.uleb128 0x2
 3923 043e 91       		.byte	0x91
 3924 043f 48       		.sleb128 -56
 3925 0440 00       		.byte	0
 3926 0441 0D       		.uleb128 0xd
 3927 0442 C4030000 		.4byte	.LBB12
 3928 0446 1E020000 		.4byte	.LBE12-.LBB12
 3929 044a 0E       		.uleb128 0xe
 3930 044b 6900     		.ascii	"i\000"
 3931 044d 01       		.byte	0x1
 3932 044e B0       		.byte	0xb0
 3933 044f 68000000 		.4byte	0x68
 3934 0453 02       		.uleb128 0x2
 3935 0454 91       		.byte	0x91
 3936 0455 44       		.sleb128 -60
 3937 0456 0D       		.uleb128 0xd
 3938 0457 D2030000 		.4byte	.LBB13
 3939 045b EA010000 		.4byte	.LBE13-.LBB13
 3940 045f 15       		.uleb128 0x15
 3941 0460 A2020000 		.4byte	.LASF54
 3942 0464 01       		.byte	0x1
 3943 0465 B1       		.byte	0xb1
 3944 0466 68000000 		.4byte	0x68
 3945 046a 03       		.uleb128 0x3
 3946 046b 91       		.byte	0x91
 3947 046c A47F     		.sleb128 -92
 3948 046e 15       		.uleb128 0x15
 3949 046f A8010000 		.4byte	.LASF55
 3950 0473 01       		.byte	0x1
 3951 0474 B2       		.byte	0xb2
 3952 0475 68000000 		.4byte	0x68
 3953 0479 03       		.uleb128 0x3
 3954 047a 91       		.byte	0x91
 3955 047b A07F     		.sleb128 -96
 3956 047d 0D       		.uleb128 0xd
 3957 047e 80040000 		.4byte	.LBB14
 3958 0482 3C010000 		.4byte	.LBE14-.LBB14
 3959 0486 15       		.uleb128 0x15
 3960 0487 53040000 		.4byte	.LASF56
 3961 048b 01       		.byte	0x1
 3962 048c B5       		.byte	0xb5
 3963 048d 68000000 		.4byte	0x68
 3964 0491 03       		.uleb128 0x3
 3965 0492 91       		.byte	0x91
 3966 0493 9C7F     		.sleb128 -100
 3967 0495 00       		.byte	0
 3968 0496 00       		.byte	0
 3969 0497 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 82


 3970 0498 00       		.byte	0
 3971 0499 0D       		.uleb128 0xd
 3972 049a 0A070000 		.4byte	.LBB16
 3973 049e 18020000 		.4byte	.LBE16-.LBB16
 3974 04a2 0E       		.uleb128 0xe
 3975 04a3 6900     		.ascii	"i\000"
 3976 04a5 01       		.byte	0x1
 3977 04a6 D7       		.byte	0xd7
 3978 04a7 68000000 		.4byte	0x68
 3979 04ab 03       		.uleb128 0x3
 3980 04ac 91       		.byte	0x91
 3981 04ad B07F     		.sleb128 -80
 3982 04af 0D       		.uleb128 0xd
 3983 04b0 1C070000 		.4byte	.LBB17
 3984 04b4 EC010000 		.4byte	.LBE17-.LBB17
 3985 04b8 15       		.uleb128 0x15
 3986 04b9 A2020000 		.4byte	.LASF54
 3987 04bd 01       		.byte	0x1
 3988 04be D8       		.byte	0xd8
 3989 04bf 68000000 		.4byte	0x68
 3990 04c3 03       		.uleb128 0x3
 3991 04c4 91       		.byte	0x91
 3992 04c5 947F     		.sleb128 -108
 3993 04c7 15       		.uleb128 0x15
 3994 04c8 A8010000 		.4byte	.LASF55
 3995 04cc 01       		.byte	0x1
 3996 04cd D9       		.byte	0xd9
 3997 04ce 68000000 		.4byte	0x68
 3998 04d2 03       		.uleb128 0x3
 3999 04d3 91       		.byte	0x91
 4000 04d4 907F     		.sleb128 -112
 4001 04d6 00       		.byte	0
 4002 04d7 00       		.byte	0
 4003 04d8 00       		.byte	0
 4004 04d9 0F       		.uleb128 0xf
 4005 04da 68000000 		.4byte	0x68
 4006 04de EF040000 		.4byte	0x4ef
 4007 04e2 10       		.uleb128 0x10
 4008 04e3 7D000000 		.4byte	0x7d
 4009 04e7 0E       		.byte	0xe
 4010 04e8 10       		.uleb128 0x10
 4011 04e9 7D000000 		.4byte	0x7d
 4012 04ed 12       		.byte	0x12
 4013 04ee 00       		.byte	0
 4014 04ef 0F       		.uleb128 0xf
 4015 04f0 DB020000 		.4byte	0x2db
 4016 04f4 00050000 		.4byte	0x500
 4017 04f8 18       		.uleb128 0x18
 4018 04f9 7D000000 		.4byte	0x7d
 4019 04fd 1C01     		.2byte	0x11c
 4020 04ff 00       		.byte	0
 4021 0500 11       		.uleb128 0x11
 4022 0501 04       		.byte	0x4
 4023 0502 4D010000 		.4byte	0x14d
 4024 0506 0B       		.uleb128 0xb
 4025 0507 B0020000 		.4byte	.LASF57
 4026 050b 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 83


 4027 050c F6       		.byte	0xf6
 4028 050d 00000000 		.4byte	.LFB5
 4029 0511 18060000 		.4byte	.LFE5-.LFB5
 4030 0515 01       		.uleb128 0x1
 4031 0516 9C       		.byte	0x9c
 4032 0517 9D060000 		.4byte	0x69d
 4033 051b 0C       		.uleb128 0xc
 4034 051c 6D617000 		.ascii	"map\000"
 4035 0520 01       		.byte	0x1
 4036 0521 F6       		.byte	0xf6
 4037 0522 D2010000 		.4byte	0x1d2
 4038 0526 03       		.uleb128 0x3
 4039 0527 91       		.byte	0x91
 4040 0528 B47F     		.sleb128 -76
 4041 052a 14       		.uleb128 0x14
 4042 052b CB030000 		.4byte	.LASF58
 4043 052f 01       		.byte	0x1
 4044 0530 F6       		.byte	0xf6
 4045 0531 68000000 		.4byte	0x68
 4046 0535 03       		.uleb128 0x3
 4047 0536 91       		.byte	0x91
 4048 0537 B07F     		.sleb128 -80
 4049 0539 14       		.uleb128 0x14
 4050 053a 9D040000 		.4byte	.LASF59
 4051 053e 01       		.byte	0x1
 4052 053f F6       		.byte	0xf6
 4053 0540 4D010000 		.4byte	0x14d
 4054 0544 03       		.uleb128 0x3
 4055 0545 91       		.byte	0x91
 4056 0546 A87F     		.sleb128 -88
 4057 0548 14       		.uleb128 0x14
 4058 0549 AC030000 		.4byte	.LASF60
 4059 054d 01       		.byte	0x1
 4060 054e F6       		.byte	0xf6
 4061 054f 4D010000 		.4byte	0x14d
 4062 0553 02       		.uleb128 0x2
 4063 0554 91       		.byte	0x91
 4064 0555 00       		.sleb128 0
 4065 0556 15       		.uleb128 0x15
 4066 0557 DE020000 		.4byte	.LASF50
 4067 055b 01       		.byte	0x1
 4068 055c F7       		.byte	0xf7
 4069 055d 68000000 		.4byte	0x68
 4070 0561 02       		.uleb128 0x2
 4071 0562 91       		.byte	0x91
 4072 0563 74       		.sleb128 -12
 4073 0564 15       		.uleb128 0x15
 4074 0565 BB010000 		.4byte	.LASF51
 4075 0569 01       		.byte	0x1
 4076 056a F8       		.byte	0xf8
 4077 056b 68000000 		.4byte	0x68
 4078 056f 02       		.uleb128 0x2
 4079 0570 91       		.byte	0x91
 4080 0571 70       		.sleb128 -16
 4081 0572 15       		.uleb128 0x15
 4082 0573 D4030000 		.4byte	.LASF61
 4083 0577 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 84


 4084 0578 F9       		.byte	0xf9
 4085 0579 68000000 		.4byte	0x68
 4086 057d 02       		.uleb128 0x2
 4087 057e 91       		.byte	0x91
 4088 057f 6C       		.sleb128 -20
 4089 0580 15       		.uleb128 0x15
 4090 0581 70020000 		.4byte	.LASF62
 4091 0585 01       		.byte	0x1
 4092 0586 FA       		.byte	0xfa
 4093 0587 68000000 		.4byte	0x68
 4094 058b 03       		.uleb128 0x3
 4095 058c 91       		.byte	0x91
 4096 058d B87F     		.sleb128 -72
 4097 058f 19       		.uleb128 0x19
 4098 0590 6A00     		.ascii	"j\000"
 4099 0592 01       		.byte	0x1
 4100 0593 C601     		.2byte	0x1c6
 4101 0595 68000000 		.4byte	0x68
 4102 0599 02       		.uleb128 0x2
 4103 059a 91       		.byte	0x91
 4104 059b 40       		.sleb128 -64
 4105 059c 16       		.uleb128 0x16
 4106 059d 2E000000 		.4byte	.LBB18
 4107 05a1 C0040000 		.4byte	.LBE18-.LBB18
 4108 05a5 84060000 		.4byte	0x684
 4109 05a9 1A       		.uleb128 0x1a
 4110 05aa 4E030000 		.4byte	.LASF63
 4111 05ae 01       		.byte	0x1
 4112 05af 0001     		.2byte	0x100
 4113 05b1 BE000000 		.4byte	0xbe
 4114 05b5 02       		.uleb128 0x2
 4115 05b6 91       		.byte	0x91
 4116 05b7 6B       		.sleb128 -21
 4117 05b8 1A       		.uleb128 0x1a
 4118 05b9 F6040000 		.4byte	.LASF64
 4119 05bd 01       		.byte	0x1
 4120 05be 0101     		.2byte	0x101
 4121 05c0 68000000 		.4byte	0x68
 4122 05c4 02       		.uleb128 0x2
 4123 05c5 91       		.byte	0x91
 4124 05c6 64       		.sleb128 -28
 4125 05c7 17       		.uleb128 0x17
 4126 05c8 18000000 		.4byte	.Ldebug_ranges0+0x18
 4127 05cc F7050000 		.4byte	0x5f7
 4128 05d0 1A       		.uleb128 0x1a
 4129 05d1 32030000 		.4byte	.LASF65
 4130 05d5 01       		.byte	0x1
 4131 05d6 1601     		.2byte	0x116
 4132 05d8 68000000 		.4byte	0x68
 4133 05dc 02       		.uleb128 0x2
 4134 05dd 91       		.byte	0x91
 4135 05de 60       		.sleb128 -32
 4136 05df 0D       		.uleb128 0xd
 4137 05e0 F2000000 		.4byte	.LBB20
 4138 05e4 62000000 		.4byte	.LBE20-.LBB20
 4139 05e8 19       		.uleb128 0x19
 4140 05e9 6900     		.ascii	"i\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 85


 4141 05eb 01       		.byte	0x1
 4142 05ec 1801     		.2byte	0x118
 4143 05ee 68000000 		.4byte	0x68
 4144 05f2 02       		.uleb128 0x2
 4145 05f3 91       		.byte	0x91
 4146 05f4 5C       		.sleb128 -36
 4147 05f5 00       		.byte	0
 4148 05f6 00       		.byte	0
 4149 05f7 17       		.uleb128 0x17
 4150 05f8 30000000 		.4byte	.Ldebug_ranges0+0x30
 4151 05fc 27060000 		.4byte	0x627
 4152 0600 1A       		.uleb128 0x1a
 4153 0601 32030000 		.4byte	.LASF65
 4154 0605 01       		.byte	0x1
 4155 0606 4001     		.2byte	0x140
 4156 0608 68000000 		.4byte	0x68
 4157 060c 02       		.uleb128 0x2
 4158 060d 91       		.byte	0x91
 4159 060e 58       		.sleb128 -40
 4160 060f 0D       		.uleb128 0xd
 4161 0610 DC010000 		.4byte	.LBB23
 4162 0614 5E000000 		.4byte	.LBE23-.LBB23
 4163 0618 19       		.uleb128 0x19
 4164 0619 6900     		.ascii	"i\000"
 4165 061b 01       		.byte	0x1
 4166 061c 4201     		.2byte	0x142
 4167 061e 68000000 		.4byte	0x68
 4168 0622 02       		.uleb128 0x2
 4169 0623 91       		.byte	0x91
 4170 0624 54       		.sleb128 -44
 4171 0625 00       		.byte	0
 4172 0626 00       		.byte	0
 4173 0627 17       		.uleb128 0x17
 4174 0628 48000000 		.4byte	.Ldebug_ranges0+0x48
 4175 062c 57060000 		.4byte	0x657
 4176 0630 1A       		.uleb128 0x1a
 4177 0631 32030000 		.4byte	.LASF65
 4178 0635 01       		.byte	0x1
 4179 0636 6D01     		.2byte	0x16d
 4180 0638 68000000 		.4byte	0x68
 4181 063c 02       		.uleb128 0x2
 4182 063d 91       		.byte	0x91
 4183 063e 50       		.sleb128 -48
 4184 063f 0D       		.uleb128 0xd
 4185 0640 E2020000 		.4byte	.LBB26
 4186 0644 5E000000 		.4byte	.LBE26-.LBB26
 4187 0648 19       		.uleb128 0x19
 4188 0649 6900     		.ascii	"i\000"
 4189 064b 01       		.byte	0x1
 4190 064c 6F01     		.2byte	0x16f
 4191 064e 68000000 		.4byte	0x68
 4192 0652 02       		.uleb128 0x2
 4193 0653 91       		.byte	0x91
 4194 0654 4C       		.sleb128 -52
 4195 0655 00       		.byte	0
 4196 0656 00       		.byte	0
 4197 0657 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 86


 4198 0658 60000000 		.4byte	.Ldebug_ranges0+0x60
 4199 065c 1A       		.uleb128 0x1a
 4200 065d 32030000 		.4byte	.LASF65
 4201 0661 01       		.byte	0x1
 4202 0662 9901     		.2byte	0x199
 4203 0664 68000000 		.4byte	0x68
 4204 0668 02       		.uleb128 0x2
 4205 0669 91       		.byte	0x91
 4206 066a 48       		.sleb128 -56
 4207 066b 0D       		.uleb128 0xd
 4208 066c D4030000 		.4byte	.LBB29
 4209 0670 5A000000 		.4byte	.LBE29-.LBB29
 4210 0674 19       		.uleb128 0x19
 4211 0675 6900     		.ascii	"i\000"
 4212 0677 01       		.byte	0x1
 4213 0678 9B01     		.2byte	0x19b
 4214 067a 68000000 		.4byte	0x68
 4215 067e 02       		.uleb128 0x2
 4216 067f 91       		.byte	0x91
 4217 0680 44       		.sleb128 -60
 4218 0681 00       		.byte	0
 4219 0682 00       		.byte	0
 4220 0683 00       		.byte	0
 4221 0684 0D       		.uleb128 0xd
 4222 0685 FA040000 		.4byte	.LBB31
 4223 0689 0C010000 		.4byte	.LBE31-.LBB31
 4224 068d 19       		.uleb128 0x19
 4225 068e 6900     		.ascii	"i\000"
 4226 0690 01       		.byte	0x1
 4227 0691 C801     		.2byte	0x1c8
 4228 0693 68000000 		.4byte	0x68
 4229 0697 03       		.uleb128 0x3
 4230 0698 91       		.byte	0x91
 4231 0699 BC7F     		.sleb128 -68
 4232 069b 00       		.byte	0
 4233 069c 00       		.byte	0
 4234 069d 1C       		.uleb128 0x1c
 4235 069e 15020000 		.4byte	.LASF67
 4236 06a2 01       		.byte	0x1
 4237 06a3 D401     		.2byte	0x1d4
 4238 06a5 8B000000 		.4byte	0x8b
 4239 06a9 00000000 		.4byte	.LFB6
 4240 06ad 0C010000 		.4byte	.LFE6-.LFB6
 4241 06b1 01       		.uleb128 0x1
 4242 06b2 9C       		.byte	0x9c
 4243 06b3 D6060000 		.4byte	0x6d6
 4244 06b7 1D       		.uleb128 0x1d
 4245 06b8 DE020000 		.4byte	.LASF50
 4246 06bc 01       		.byte	0x1
 4247 06bd D401     		.2byte	0x1d4
 4248 06bf 68000000 		.4byte	0x68
 4249 06c3 02       		.uleb128 0x2
 4250 06c4 91       		.byte	0x91
 4251 06c5 74       		.sleb128 -12
 4252 06c6 1D       		.uleb128 0x1d
 4253 06c7 BB010000 		.4byte	.LASF51
 4254 06cb 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 87


 4255 06cc D401     		.2byte	0x1d4
 4256 06ce 68000000 		.4byte	0x68
 4257 06d2 02       		.uleb128 0x2
 4258 06d3 91       		.byte	0x91
 4259 06d4 70       		.sleb128 -16
 4260 06d5 00       		.byte	0
 4261 06d6 1E       		.uleb128 0x1e
 4262 06d7 E9020000 		.4byte	.LASF68
 4263 06db 01       		.byte	0x1
 4264 06dc E501     		.2byte	0x1e5
 4265 06de 00000000 		.4byte	.LFB7
 4266 06e2 24010000 		.4byte	.LFE7-.LFB7
 4267 06e6 01       		.uleb128 0x1
 4268 06e7 9C       		.byte	0x9c
 4269 06e8 1A070000 		.4byte	0x71a
 4270 06ec 1D       		.uleb128 0x1d
 4271 06ed 6D040000 		.4byte	.LASF69
 4272 06f1 01       		.byte	0x1
 4273 06f2 E501     		.2byte	0x1e5
 4274 06f4 96000000 		.4byte	0x96
 4275 06f8 02       		.uleb128 0x2
 4276 06f9 91       		.byte	0x91
 4277 06fa 77       		.sleb128 -9
 4278 06fb 1D       		.uleb128 0x1d
 4279 06fc DE020000 		.4byte	.LASF50
 4280 0700 01       		.byte	0x1
 4281 0701 E501     		.2byte	0x1e5
 4282 0703 68000000 		.4byte	0x68
 4283 0707 02       		.uleb128 0x2
 4284 0708 91       		.byte	0x91
 4285 0709 70       		.sleb128 -16
 4286 070a 1D       		.uleb128 0x1d
 4287 070b BB010000 		.4byte	.LASF51
 4288 070f 01       		.byte	0x1
 4289 0710 E501     		.2byte	0x1e5
 4290 0712 68000000 		.4byte	0x68
 4291 0716 02       		.uleb128 0x2
 4292 0717 91       		.byte	0x91
 4293 0718 6C       		.sleb128 -20
 4294 0719 00       		.byte	0
 4295 071a 1C       		.uleb128 0x1c
 4296 071b 84030000 		.4byte	.LASF70
 4297 071f 01       		.byte	0x1
 4298 0720 1902     		.2byte	0x219
 4299 0722 8B000000 		.4byte	0x8b
 4300 0726 00000000 		.4byte	.LFB8
 4301 072a 9C000000 		.4byte	.LFE8-.LFB8
 4302 072e 01       		.uleb128 0x1
 4303 072f 9C       		.byte	0x9c
 4304 0730 53070000 		.4byte	0x753
 4305 0734 1D       		.uleb128 0x1d
 4306 0735 FA010000 		.4byte	.LASF71
 4307 0739 01       		.byte	0x1
 4308 073a 1902     		.2byte	0x219
 4309 073c 68000000 		.4byte	0x68
 4310 0740 02       		.uleb128 0x2
 4311 0741 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 88


 4312 0742 74       		.sleb128 -12
 4313 0743 1D       		.uleb128 0x1d
 4314 0744 E7040000 		.4byte	.LASF72
 4315 0748 01       		.byte	0x1
 4316 0749 1902     		.2byte	0x219
 4317 074b 68000000 		.4byte	0x68
 4318 074f 02       		.uleb128 0x2
 4319 0750 91       		.byte	0x91
 4320 0751 70       		.sleb128 -16
 4321 0752 00       		.byte	0
 4322 0753 1F       		.uleb128 0x1f
 4323 0754 CA040000 		.4byte	.LASF87
 4324 0758 01       		.byte	0x1
 4325 0759 2802     		.2byte	0x228
 4326 075b 8B000000 		.4byte	0x8b
 4327 075f 00000000 		.4byte	.LFB9
 4328 0763 18000000 		.4byte	.LFE9-.LFB9
 4329 0767 01       		.uleb128 0x1
 4330 0768 9C       		.byte	0x9c
 4331 0769 20       		.uleb128 0x20
 4332 076a 99030000 		.4byte	.LASF73
 4333 076e 01       		.byte	0x1
 4334 076f 2C02     		.2byte	0x22c
 4335 0771 CD070000 		.4byte	0x7cd
 4336 0775 00000000 		.4byte	.LFB10
 4337 0779 78000000 		.4byte	.LFE10-.LFB10
 4338 077d 01       		.uleb128 0x1
 4339 077e 9C       		.byte	0x9c
 4340 077f CD070000 		.4byte	0x7cd
 4341 0783 21       		.uleb128 0x21
 4342 0784 6D617000 		.ascii	"map\000"
 4343 0788 01       		.byte	0x1
 4344 0789 2C02     		.2byte	0x22c
 4345 078b D2010000 		.4byte	0x1d2
 4346 078f 02       		.uleb128 0x2
 4347 0790 91       		.byte	0x91
 4348 0791 5C       		.sleb128 -36
 4349 0792 1D       		.uleb128 0x1d
 4350 0793 2C040000 		.4byte	.LASF74
 4351 0797 01       		.byte	0x1
 4352 0798 2C02     		.2byte	0x22c
 4353 079a E3070000 		.4byte	0x7e3
 4354 079e 02       		.uleb128 0x2
 4355 079f 91       		.byte	0x91
 4356 07a0 58       		.sleb128 -40
 4357 07a1 21       		.uleb128 0x21
 4358 07a2 6900     		.ascii	"i\000"
 4359 07a4 01       		.byte	0x1
 4360 07a5 2C02     		.2byte	0x22c
 4361 07a7 68000000 		.4byte	0x68
 4362 07ab 02       		.uleb128 0x2
 4363 07ac 91       		.byte	0x91
 4364 07ad 54       		.sleb128 -44
 4365 07ae 1A       		.uleb128 0x1a
 4366 07af 9D040000 		.4byte	.LASF59
 4367 07b3 01       		.byte	0x1
 4368 07b4 2E02     		.2byte	0x22e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 89


 4369 07b6 4D010000 		.4byte	0x14d
 4370 07ba 02       		.uleb128 0x2
 4371 07bb 91       		.byte	0x91
 4372 07bc 68       		.sleb128 -24
 4373 07bd 1A       		.uleb128 0x1a
 4374 07be AC030000 		.4byte	.LASF60
 4375 07c2 01       		.byte	0x1
 4376 07c3 2E02     		.2byte	0x22e
 4377 07c5 4D010000 		.4byte	0x14d
 4378 07c9 02       		.uleb128 0x2
 4379 07ca 91       		.byte	0x91
 4380 07cb 60       		.sleb128 -32
 4381 07cc 00       		.byte	0
 4382 07cd 11       		.uleb128 0x11
 4383 07ce 04       		.byte	0x4
 4384 07cf 42010000 		.4byte	0x142
 4385 07d3 0F       		.uleb128 0xf
 4386 07d4 68000000 		.4byte	0x68
 4387 07d8 E3070000 		.4byte	0x7e3
 4388 07dc 10       		.uleb128 0x10
 4389 07dd 7D000000 		.4byte	0x7d
 4390 07e1 01       		.byte	0x1
 4391 07e2 00       		.byte	0
 4392 07e3 11       		.uleb128 0x11
 4393 07e4 04       		.byte	0x4
 4394 07e5 D3070000 		.4byte	0x7d3
 4395 07e9 20       		.uleb128 0x20
 4396 07ea AB040000 		.4byte	.LASF75
 4397 07ee 01       		.byte	0x1
 4398 07ef 3802     		.2byte	0x238
 4399 07f1 CD070000 		.4byte	0x7cd
 4400 07f5 00000000 		.4byte	.LFB11
 4401 07f9 98000000 		.4byte	.LFE11-.LFB11
 4402 07fd 01       		.uleb128 0x1
 4403 07fe 9C       		.byte	0x9c
 4404 07ff 5C080000 		.4byte	0x85c
 4405 0803 21       		.uleb128 0x21
 4406 0804 6D617000 		.ascii	"map\000"
 4407 0808 01       		.byte	0x1
 4408 0809 3802     		.2byte	0x238
 4409 080b D2010000 		.4byte	0x1d2
 4410 080f 02       		.uleb128 0x2
 4411 0810 91       		.byte	0x91
 4412 0811 5C       		.sleb128 -36
 4413 0812 1D       		.uleb128 0x1d
 4414 0813 2C040000 		.4byte	.LASF74
 4415 0817 01       		.byte	0x1
 4416 0818 3802     		.2byte	0x238
 4417 081a E3070000 		.4byte	0x7e3
 4418 081e 02       		.uleb128 0x2
 4419 081f 91       		.byte	0x91
 4420 0820 58       		.sleb128 -40
 4421 0821 21       		.uleb128 0x21
 4422 0822 6900     		.ascii	"i\000"
 4423 0824 01       		.byte	0x1
 4424 0825 3802     		.2byte	0x238
 4425 0827 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 90


 4426 082b 02       		.uleb128 0x2
 4427 082c 91       		.byte	0x91
 4428 082d 54       		.sleb128 -44
 4429 082e 1D       		.uleb128 0x1d
 4430 082f 09030000 		.4byte	.LASF76
 4431 0833 01       		.byte	0x1
 4432 0834 3802     		.2byte	0x238
 4433 0836 96000000 		.4byte	0x96
 4434 083a 02       		.uleb128 0x2
 4435 083b 91       		.byte	0x91
 4436 083c 53       		.sleb128 -45
 4437 083d 1A       		.uleb128 0x1a
 4438 083e 9D040000 		.4byte	.LASF59
 4439 0842 01       		.byte	0x1
 4440 0843 3C02     		.2byte	0x23c
 4441 0845 4D010000 		.4byte	0x14d
 4442 0849 02       		.uleb128 0x2
 4443 084a 91       		.byte	0x91
 4444 084b 68       		.sleb128 -24
 4445 084c 1A       		.uleb128 0x1a
 4446 084d AC030000 		.4byte	.LASF60
 4447 0851 01       		.byte	0x1
 4448 0852 3C02     		.2byte	0x23c
 4449 0854 4D010000 		.4byte	0x14d
 4450 0858 02       		.uleb128 0x2
 4451 0859 91       		.byte	0x91
 4452 085a 60       		.sleb128 -32
 4453 085b 00       		.byte	0
 4454 085c 0F       		.uleb128 0xf
 4455 085d 42010000 		.4byte	0x142
 4456 0861 6D080000 		.4byte	0x86d
 4457 0865 18       		.uleb128 0x18
 4458 0866 7D000000 		.4byte	0x7d
 4459 086a 1C01     		.2byte	0x11c
 4460 086c 00       		.byte	0
 4461 086d 15       		.uleb128 0x15
 4462 086e 04020000 		.4byte	.LASF77
 4463 0872 01       		.byte	0x1
 4464 0873 18       		.byte	0x18
 4465 0874 5C080000 		.4byte	0x85c
 4466 0878 05       		.uleb128 0x5
 4467 0879 03       		.byte	0x3
 4468 087a 00000000 		.4byte	instructionsList
 4469 087e 15       		.uleb128 0x15
 4470 087f 15030000 		.4byte	.LASF78
 4471 0883 01       		.byte	0x1
 4472 0884 19       		.byte	0x19
 4473 0885 5C080000 		.4byte	0x85c
 4474 0889 05       		.uleb128 0x5
 4475 088a 03       		.byte	0x3
 4476 088b 44160000 		.4byte	finalInstructionList
 4477 088f 15       		.uleb128 0x15
 4478 0890 CB030000 		.4byte	.LASF58
 4479 0894 01       		.byte	0x1
 4480 0895 1A       		.byte	0x1a
 4481 0896 68000000 		.4byte	0x68
 4482 089a 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 91


 4483 089b 03       		.byte	0x3
 4484 089c 882C0000 		.4byte	numSteps
 4485 08a0 22       		.uleb128 0x22
 4486 08a1 6D617000 		.ascii	"map\000"
 4487 08a5 01       		.byte	0x1
 4488 08a6 23       		.byte	0x23
 4489 08a7 D9040000 		.4byte	0x4d9
 4490 08ab 05       		.uleb128 0x5
 4491 08ac 03       		.byte	0x3
 4492 08ad 00000000 		.4byte	map
 4493 08b1 0F       		.uleb128 0xf
 4494 08b2 68000000 		.4byte	0x68
 4495 08b6 C7080000 		.4byte	0x8c7
 4496 08ba 10       		.uleb128 0x10
 4497 08bb 7D000000 		.4byte	0x7d
 4498 08bf 04       		.byte	0x4
 4499 08c0 10       		.uleb128 0x10
 4500 08c1 7D000000 		.4byte	0x7d
 4501 08c5 01       		.byte	0x1
 4502 08c6 00       		.byte	0
 4503 08c7 23       		.uleb128 0x23
 4504 08c8 2C040000 		.4byte	.LASF74
 4505 08cc 01       		.byte	0x1
 4506 08cd 4B       		.byte	0x4b
 4507 08ce B1080000 		.4byte	0x8b1
 4508 08d2 05       		.uleb128 0x5
 4509 08d3 03       		.byte	0x3
 4510 08d4 00000000 		.4byte	food_list
 4511 08d8 23       		.uleb128 0x23
 4512 08d9 0A040000 		.4byte	.LASF79
 4513 08dd 01       		.byte	0x1
 4514 08de 16       		.byte	0x16
 4515 08df 96000000 		.4byte	0x96
 4516 08e3 05       		.uleb128 0x5
 4517 08e4 03       		.byte	0x3
 4518 08e5 00000000 		.4byte	previousRobotOrientation
 4519 08e9 23       		.uleb128 0x23
 4520 08ea 3B040000 		.4byte	.LASF80
 4521 08ee 01       		.byte	0x1
 4522 08ef 16       		.byte	0x16
 4523 08f0 96000000 		.4byte	0x96
 4524 08f4 05       		.uleb128 0x5
 4525 08f5 03       		.byte	0x3
 4526 08f6 00000000 		.4byte	currentRobotOrientation
 4527 08fa 23       		.uleb128 0x23
 4528 08fb 00040000 		.4byte	.LASF81
 4529 08ff 01       		.byte	0x1
 4530 0900 4A       		.byte	0x4a
 4531 0901 D3070000 		.4byte	0x7d3
 4532 0905 05       		.uleb128 0x5
 4533 0906 03       		.byte	0x3
 4534 0907 00000000 		.4byte	start_pos
 4535 090b 0F       		.uleb128 0xf
 4536 090c 68000000 		.4byte	0x68
 4537 0910 22090000 		.4byte	0x922
 4538 0914 18       		.uleb128 0x18
 4539 0915 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 92


 4540 0919 1C01     		.2byte	0x11c
 4541 091b 10       		.uleb128 0x10
 4542 091c 7D000000 		.4byte	0x7d
 4543 0920 01       		.byte	0x1
 4544 0921 00       		.byte	0
 4545 0922 23       		.uleb128 0x23
 4546 0923 28020000 		.4byte	.LASF82
 4547 0927 01       		.byte	0x1
 4548 0928 6F       		.byte	0x6f
 4549 0929 0B090000 		.4byte	0x90b
 4550 092d 05       		.uleb128 0x5
 4551 092e 03       		.byte	0x3
 4552 092f 00000000 		.4byte	list_of_optimal_coordinates
 4553 0933 0F       		.uleb128 0xf
 4554 0934 4D010000 		.4byte	0x14d
 4555 0938 43090000 		.4byte	0x943
 4556 093c 10       		.uleb128 0x10
 4557 093d 7D000000 		.4byte	0x7d
 4558 0941 03       		.byte	0x3
 4559 0942 00       		.byte	0
 4560 0943 23       		.uleb128 0x23
 4561 0944 E1040000 		.4byte	.LASF83
 4562 0948 01       		.byte	0x1
 4563 0949 71       		.byte	0x71
 4564 094a 33090000 		.4byte	0x933
 4565 094e 05       		.uleb128 0x5
 4566 094f 03       		.byte	0x3
 4567 0950 00000000 		.4byte	moves
 4568 0954 23       		.uleb128 0x23
 4569 0955 07050000 		.4byte	.LASF28
 4570 0959 01       		.byte	0x1
 4571 095a F2       		.byte	0xf2
 4572 095b 68000000 		.4byte	0x68
 4573 095f 05       		.uleb128 0x5
 4574 0960 03       		.byte	0x3
 4575 0961 00000000 		.4byte	ignoreR
 4576 0965 23       		.uleb128 0x23
 4577 0966 FF040000 		.4byte	.LASF27
 4578 096a 01       		.byte	0x1
 4579 096b F2       		.byte	0xf2
 4580 096c 68000000 		.4byte	0x68
 4581 0970 05       		.uleb128 0x5
 4582 0971 03       		.byte	0x3
 4583 0972 00000000 		.4byte	ignoreL
 4584 0976 23       		.uleb128 0x23
 4585 0977 38010000 		.4byte	.LASF29
 4586 097b 01       		.byte	0x1
 4587 097c F3       		.byte	0xf3
 4588 097d 68000000 		.4byte	0x68
 4589 0981 05       		.uleb128 0x5
 4590 0982 03       		.byte	0x3
 4591 0983 00000000 		.4byte	distanceToTarget
 4592 0987 00       		.byte	0
 4593              		.section	.debug_abbrev,"",%progbits
 4594              	.Ldebug_abbrev0:
 4595 0000 01       		.uleb128 0x1
 4596 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 93


 4597 0002 01       		.byte	0x1
 4598 0003 25       		.uleb128 0x25
 4599 0004 0E       		.uleb128 0xe
 4600 0005 13       		.uleb128 0x13
 4601 0006 0B       		.uleb128 0xb
 4602 0007 03       		.uleb128 0x3
 4603 0008 0E       		.uleb128 0xe
 4604 0009 1B       		.uleb128 0x1b
 4605 000a 0E       		.uleb128 0xe
 4606 000b 55       		.uleb128 0x55
 4607 000c 17       		.uleb128 0x17
 4608 000d 11       		.uleb128 0x11
 4609 000e 01       		.uleb128 0x1
 4610 000f 10       		.uleb128 0x10
 4611 0010 17       		.uleb128 0x17
 4612 0011 00       		.byte	0
 4613 0012 00       		.byte	0
 4614 0013 02       		.uleb128 0x2
 4615 0014 24       		.uleb128 0x24
 4616 0015 00       		.byte	0
 4617 0016 0B       		.uleb128 0xb
 4618 0017 0B       		.uleb128 0xb
 4619 0018 3E       		.uleb128 0x3e
 4620 0019 0B       		.uleb128 0xb
 4621 001a 03       		.uleb128 0x3
 4622 001b 0E       		.uleb128 0xe
 4623 001c 00       		.byte	0
 4624 001d 00       		.byte	0
 4625 001e 03       		.uleb128 0x3
 4626 001f 16       		.uleb128 0x16
 4627 0020 00       		.byte	0
 4628 0021 03       		.uleb128 0x3
 4629 0022 0E       		.uleb128 0xe
 4630 0023 3A       		.uleb128 0x3a
 4631 0024 0B       		.uleb128 0xb
 4632 0025 3B       		.uleb128 0x3b
 4633 0026 0B       		.uleb128 0xb
 4634 0027 49       		.uleb128 0x49
 4635 0028 13       		.uleb128 0x13
 4636 0029 00       		.byte	0
 4637 002a 00       		.byte	0
 4638 002b 04       		.uleb128 0x4
 4639 002c 24       		.uleb128 0x24
 4640 002d 00       		.byte	0
 4641 002e 0B       		.uleb128 0xb
 4642 002f 0B       		.uleb128 0xb
 4643 0030 3E       		.uleb128 0x3e
 4644 0031 0B       		.uleb128 0xb
 4645 0032 03       		.uleb128 0x3
 4646 0033 08       		.uleb128 0x8
 4647 0034 00       		.byte	0
 4648 0035 00       		.byte	0
 4649 0036 05       		.uleb128 0x5
 4650 0037 04       		.uleb128 0x4
 4651 0038 01       		.byte	0x1
 4652 0039 03       		.uleb128 0x3
 4653 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 94


 4654 003b 0B       		.uleb128 0xb
 4655 003c 0B       		.uleb128 0xb
 4656 003d 49       		.uleb128 0x49
 4657 003e 13       		.uleb128 0x13
 4658 003f 3A       		.uleb128 0x3a
 4659 0040 0B       		.uleb128 0xb
 4660 0041 3B       		.uleb128 0x3b
 4661 0042 0B       		.uleb128 0xb
 4662 0043 01       		.uleb128 0x1
 4663 0044 13       		.uleb128 0x13
 4664 0045 00       		.byte	0
 4665 0046 00       		.byte	0
 4666 0047 06       		.uleb128 0x6
 4667 0048 28       		.uleb128 0x28
 4668 0049 00       		.byte	0
 4669 004a 03       		.uleb128 0x3
 4670 004b 08       		.uleb128 0x8
 4671 004c 1C       		.uleb128 0x1c
 4672 004d 0B       		.uleb128 0xb
 4673 004e 00       		.byte	0
 4674 004f 00       		.byte	0
 4675 0050 07       		.uleb128 0x7
 4676 0051 28       		.uleb128 0x28
 4677 0052 00       		.byte	0
 4678 0053 03       		.uleb128 0x3
 4679 0054 0E       		.uleb128 0xe
 4680 0055 1C       		.uleb128 0x1c
 4681 0056 0B       		.uleb128 0xb
 4682 0057 00       		.byte	0
 4683 0058 00       		.byte	0
 4684 0059 08       		.uleb128 0x8
 4685 005a 13       		.uleb128 0x13
 4686 005b 01       		.byte	0x1
 4687 005c 03       		.uleb128 0x3
 4688 005d 0E       		.uleb128 0xe
 4689 005e 0B       		.uleb128 0xb
 4690 005f 0B       		.uleb128 0xb
 4691 0060 3A       		.uleb128 0x3a
 4692 0061 0B       		.uleb128 0xb
 4693 0062 3B       		.uleb128 0x3b
 4694 0063 0B       		.uleb128 0xb
 4695 0064 01       		.uleb128 0x1
 4696 0065 13       		.uleb128 0x13
 4697 0066 00       		.byte	0
 4698 0067 00       		.byte	0
 4699 0068 09       		.uleb128 0x9
 4700 0069 0D       		.uleb128 0xd
 4701 006a 00       		.byte	0
 4702 006b 03       		.uleb128 0x3
 4703 006c 0E       		.uleb128 0xe
 4704 006d 3A       		.uleb128 0x3a
 4705 006e 0B       		.uleb128 0xb
 4706 006f 3B       		.uleb128 0x3b
 4707 0070 0B       		.uleb128 0xb
 4708 0071 49       		.uleb128 0x49
 4709 0072 13       		.uleb128 0x13
 4710 0073 38       		.uleb128 0x38
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 95


 4711 0074 0B       		.uleb128 0xb
 4712 0075 00       		.byte	0
 4713 0076 00       		.byte	0
 4714 0077 0A       		.uleb128 0xa
 4715 0078 0D       		.uleb128 0xd
 4716 0079 00       		.byte	0
 4717 007a 03       		.uleb128 0x3
 4718 007b 08       		.uleb128 0x8
 4719 007c 3A       		.uleb128 0x3a
 4720 007d 0B       		.uleb128 0xb
 4721 007e 3B       		.uleb128 0x3b
 4722 007f 0B       		.uleb128 0xb
 4723 0080 49       		.uleb128 0x49
 4724 0081 13       		.uleb128 0x13
 4725 0082 38       		.uleb128 0x38
 4726 0083 0B       		.uleb128 0xb
 4727 0084 00       		.byte	0
 4728 0085 00       		.byte	0
 4729 0086 0B       		.uleb128 0xb
 4730 0087 2E       		.uleb128 0x2e
 4731 0088 01       		.byte	0x1
 4732 0089 3F       		.uleb128 0x3f
 4733 008a 19       		.uleb128 0x19
 4734 008b 03       		.uleb128 0x3
 4735 008c 0E       		.uleb128 0xe
 4736 008d 3A       		.uleb128 0x3a
 4737 008e 0B       		.uleb128 0xb
 4738 008f 3B       		.uleb128 0x3b
 4739 0090 0B       		.uleb128 0xb
 4740 0091 27       		.uleb128 0x27
 4741 0092 19       		.uleb128 0x19
 4742 0093 11       		.uleb128 0x11
 4743 0094 01       		.uleb128 0x1
 4744 0095 12       		.uleb128 0x12
 4745 0096 06       		.uleb128 0x6
 4746 0097 40       		.uleb128 0x40
 4747 0098 18       		.uleb128 0x18
 4748 0099 9642     		.uleb128 0x2116
 4749 009b 19       		.uleb128 0x19
 4750 009c 01       		.uleb128 0x1
 4751 009d 13       		.uleb128 0x13
 4752 009e 00       		.byte	0
 4753 009f 00       		.byte	0
 4754 00a0 0C       		.uleb128 0xc
 4755 00a1 05       		.uleb128 0x5
 4756 00a2 00       		.byte	0
 4757 00a3 03       		.uleb128 0x3
 4758 00a4 08       		.uleb128 0x8
 4759 00a5 3A       		.uleb128 0x3a
 4760 00a6 0B       		.uleb128 0xb
 4761 00a7 3B       		.uleb128 0x3b
 4762 00a8 0B       		.uleb128 0xb
 4763 00a9 49       		.uleb128 0x49
 4764 00aa 13       		.uleb128 0x13
 4765 00ab 02       		.uleb128 0x2
 4766 00ac 18       		.uleb128 0x18
 4767 00ad 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 96


 4768 00ae 00       		.byte	0
 4769 00af 0D       		.uleb128 0xd
 4770 00b0 0B       		.uleb128 0xb
 4771 00b1 01       		.byte	0x1
 4772 00b2 11       		.uleb128 0x11
 4773 00b3 01       		.uleb128 0x1
 4774 00b4 12       		.uleb128 0x12
 4775 00b5 06       		.uleb128 0x6
 4776 00b6 00       		.byte	0
 4777 00b7 00       		.byte	0
 4778 00b8 0E       		.uleb128 0xe
 4779 00b9 34       		.uleb128 0x34
 4780 00ba 00       		.byte	0
 4781 00bb 03       		.uleb128 0x3
 4782 00bc 08       		.uleb128 0x8
 4783 00bd 3A       		.uleb128 0x3a
 4784 00be 0B       		.uleb128 0xb
 4785 00bf 3B       		.uleb128 0x3b
 4786 00c0 0B       		.uleb128 0xb
 4787 00c1 49       		.uleb128 0x49
 4788 00c2 13       		.uleb128 0x13
 4789 00c3 02       		.uleb128 0x2
 4790 00c4 18       		.uleb128 0x18
 4791 00c5 00       		.byte	0
 4792 00c6 00       		.byte	0
 4793 00c7 0F       		.uleb128 0xf
 4794 00c8 01       		.uleb128 0x1
 4795 00c9 01       		.byte	0x1
 4796 00ca 49       		.uleb128 0x49
 4797 00cb 13       		.uleb128 0x13
 4798 00cc 01       		.uleb128 0x1
 4799 00cd 13       		.uleb128 0x13
 4800 00ce 00       		.byte	0
 4801 00cf 00       		.byte	0
 4802 00d0 10       		.uleb128 0x10
 4803 00d1 21       		.uleb128 0x21
 4804 00d2 00       		.byte	0
 4805 00d3 49       		.uleb128 0x49
 4806 00d4 13       		.uleb128 0x13
 4807 00d5 2F       		.uleb128 0x2f
 4808 00d6 0B       		.uleb128 0xb
 4809 00d7 00       		.byte	0
 4810 00d8 00       		.byte	0
 4811 00d9 11       		.uleb128 0x11
 4812 00da 0F       		.uleb128 0xf
 4813 00db 00       		.byte	0
 4814 00dc 0B       		.uleb128 0xb
 4815 00dd 0B       		.uleb128 0xb
 4816 00de 49       		.uleb128 0x49
 4817 00df 13       		.uleb128 0x13
 4818 00e0 00       		.byte	0
 4819 00e1 00       		.byte	0
 4820 00e2 12       		.uleb128 0x12
 4821 00e3 2E       		.uleb128 0x2e
 4822 00e4 01       		.byte	0x1
 4823 00e5 3F       		.uleb128 0x3f
 4824 00e6 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 97


 4825 00e7 03       		.uleb128 0x3
 4826 00e8 0E       		.uleb128 0xe
 4827 00e9 3A       		.uleb128 0x3a
 4828 00ea 0B       		.uleb128 0xb
 4829 00eb 3B       		.uleb128 0x3b
 4830 00ec 0B       		.uleb128 0xb
 4831 00ed 27       		.uleb128 0x27
 4832 00ee 19       		.uleb128 0x19
 4833 00ef 11       		.uleb128 0x11
 4834 00f0 01       		.uleb128 0x1
 4835 00f1 12       		.uleb128 0x12
 4836 00f2 06       		.uleb128 0x6
 4837 00f3 40       		.uleb128 0x40
 4838 00f4 18       		.uleb128 0x18
 4839 00f5 9742     		.uleb128 0x2117
 4840 00f7 19       		.uleb128 0x19
 4841 00f8 01       		.uleb128 0x1
 4842 00f9 13       		.uleb128 0x13
 4843 00fa 00       		.byte	0
 4844 00fb 00       		.byte	0
 4845 00fc 13       		.uleb128 0x13
 4846 00fd 2E       		.uleb128 0x2e
 4847 00fe 01       		.byte	0x1
 4848 00ff 3F       		.uleb128 0x3f
 4849 0100 19       		.uleb128 0x19
 4850 0101 03       		.uleb128 0x3
 4851 0102 0E       		.uleb128 0xe
 4852 0103 3A       		.uleb128 0x3a
 4853 0104 0B       		.uleb128 0xb
 4854 0105 3B       		.uleb128 0x3b
 4855 0106 0B       		.uleb128 0xb
 4856 0107 27       		.uleb128 0x27
 4857 0108 19       		.uleb128 0x19
 4858 0109 49       		.uleb128 0x49
 4859 010a 13       		.uleb128 0x13
 4860 010b 11       		.uleb128 0x11
 4861 010c 01       		.uleb128 0x1
 4862 010d 12       		.uleb128 0x12
 4863 010e 06       		.uleb128 0x6
 4864 010f 40       		.uleb128 0x40
 4865 0110 18       		.uleb128 0x18
 4866 0111 9742     		.uleb128 0x2117
 4867 0113 19       		.uleb128 0x19
 4868 0114 01       		.uleb128 0x1
 4869 0115 13       		.uleb128 0x13
 4870 0116 00       		.byte	0
 4871 0117 00       		.byte	0
 4872 0118 14       		.uleb128 0x14
 4873 0119 05       		.uleb128 0x5
 4874 011a 00       		.byte	0
 4875 011b 03       		.uleb128 0x3
 4876 011c 0E       		.uleb128 0xe
 4877 011d 3A       		.uleb128 0x3a
 4878 011e 0B       		.uleb128 0xb
 4879 011f 3B       		.uleb128 0x3b
 4880 0120 0B       		.uleb128 0xb
 4881 0121 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 98


 4882 0122 13       		.uleb128 0x13
 4883 0123 02       		.uleb128 0x2
 4884 0124 18       		.uleb128 0x18
 4885 0125 00       		.byte	0
 4886 0126 00       		.byte	0
 4887 0127 15       		.uleb128 0x15
 4888 0128 34       		.uleb128 0x34
 4889 0129 00       		.byte	0
 4890 012a 03       		.uleb128 0x3
 4891 012b 0E       		.uleb128 0xe
 4892 012c 3A       		.uleb128 0x3a
 4893 012d 0B       		.uleb128 0xb
 4894 012e 3B       		.uleb128 0x3b
 4895 012f 0B       		.uleb128 0xb
 4896 0130 49       		.uleb128 0x49
 4897 0131 13       		.uleb128 0x13
 4898 0132 02       		.uleb128 0x2
 4899 0133 18       		.uleb128 0x18
 4900 0134 00       		.byte	0
 4901 0135 00       		.byte	0
 4902 0136 16       		.uleb128 0x16
 4903 0137 0B       		.uleb128 0xb
 4904 0138 01       		.byte	0x1
 4905 0139 11       		.uleb128 0x11
 4906 013a 01       		.uleb128 0x1
 4907 013b 12       		.uleb128 0x12
 4908 013c 06       		.uleb128 0x6
 4909 013d 01       		.uleb128 0x1
 4910 013e 13       		.uleb128 0x13
 4911 013f 00       		.byte	0
 4912 0140 00       		.byte	0
 4913 0141 17       		.uleb128 0x17
 4914 0142 0B       		.uleb128 0xb
 4915 0143 01       		.byte	0x1
 4916 0144 55       		.uleb128 0x55
 4917 0145 17       		.uleb128 0x17
 4918 0146 01       		.uleb128 0x1
 4919 0147 13       		.uleb128 0x13
 4920 0148 00       		.byte	0
 4921 0149 00       		.byte	0
 4922 014a 18       		.uleb128 0x18
 4923 014b 21       		.uleb128 0x21
 4924 014c 00       		.byte	0
 4925 014d 49       		.uleb128 0x49
 4926 014e 13       		.uleb128 0x13
 4927 014f 2F       		.uleb128 0x2f
 4928 0150 05       		.uleb128 0x5
 4929 0151 00       		.byte	0
 4930 0152 00       		.byte	0
 4931 0153 19       		.uleb128 0x19
 4932 0154 34       		.uleb128 0x34
 4933 0155 00       		.byte	0
 4934 0156 03       		.uleb128 0x3
 4935 0157 08       		.uleb128 0x8
 4936 0158 3A       		.uleb128 0x3a
 4937 0159 0B       		.uleb128 0xb
 4938 015a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 99


 4939 015b 05       		.uleb128 0x5
 4940 015c 49       		.uleb128 0x49
 4941 015d 13       		.uleb128 0x13
 4942 015e 02       		.uleb128 0x2
 4943 015f 18       		.uleb128 0x18
 4944 0160 00       		.byte	0
 4945 0161 00       		.byte	0
 4946 0162 1A       		.uleb128 0x1a
 4947 0163 34       		.uleb128 0x34
 4948 0164 00       		.byte	0
 4949 0165 03       		.uleb128 0x3
 4950 0166 0E       		.uleb128 0xe
 4951 0167 3A       		.uleb128 0x3a
 4952 0168 0B       		.uleb128 0xb
 4953 0169 3B       		.uleb128 0x3b
 4954 016a 05       		.uleb128 0x5
 4955 016b 49       		.uleb128 0x49
 4956 016c 13       		.uleb128 0x13
 4957 016d 02       		.uleb128 0x2
 4958 016e 18       		.uleb128 0x18
 4959 016f 00       		.byte	0
 4960 0170 00       		.byte	0
 4961 0171 1B       		.uleb128 0x1b
 4962 0172 0B       		.uleb128 0xb
 4963 0173 01       		.byte	0x1
 4964 0174 55       		.uleb128 0x55
 4965 0175 17       		.uleb128 0x17
 4966 0176 00       		.byte	0
 4967 0177 00       		.byte	0
 4968 0178 1C       		.uleb128 0x1c
 4969 0179 2E       		.uleb128 0x2e
 4970 017a 01       		.byte	0x1
 4971 017b 3F       		.uleb128 0x3f
 4972 017c 19       		.uleb128 0x19
 4973 017d 03       		.uleb128 0x3
 4974 017e 0E       		.uleb128 0xe
 4975 017f 3A       		.uleb128 0x3a
 4976 0180 0B       		.uleb128 0xb
 4977 0181 3B       		.uleb128 0x3b
 4978 0182 05       		.uleb128 0x5
 4979 0183 27       		.uleb128 0x27
 4980 0184 19       		.uleb128 0x19
 4981 0185 49       		.uleb128 0x49
 4982 0186 13       		.uleb128 0x13
 4983 0187 11       		.uleb128 0x11
 4984 0188 01       		.uleb128 0x1
 4985 0189 12       		.uleb128 0x12
 4986 018a 06       		.uleb128 0x6
 4987 018b 40       		.uleb128 0x40
 4988 018c 18       		.uleb128 0x18
 4989 018d 9742     		.uleb128 0x2117
 4990 018f 19       		.uleb128 0x19
 4991 0190 01       		.uleb128 0x1
 4992 0191 13       		.uleb128 0x13
 4993 0192 00       		.byte	0
 4994 0193 00       		.byte	0
 4995 0194 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 100


 4996 0195 05       		.uleb128 0x5
 4997 0196 00       		.byte	0
 4998 0197 03       		.uleb128 0x3
 4999 0198 0E       		.uleb128 0xe
 5000 0199 3A       		.uleb128 0x3a
 5001 019a 0B       		.uleb128 0xb
 5002 019b 3B       		.uleb128 0x3b
 5003 019c 05       		.uleb128 0x5
 5004 019d 49       		.uleb128 0x49
 5005 019e 13       		.uleb128 0x13
 5006 019f 02       		.uleb128 0x2
 5007 01a0 18       		.uleb128 0x18
 5008 01a1 00       		.byte	0
 5009 01a2 00       		.byte	0
 5010 01a3 1E       		.uleb128 0x1e
 5011 01a4 2E       		.uleb128 0x2e
 5012 01a5 01       		.byte	0x1
 5013 01a6 3F       		.uleb128 0x3f
 5014 01a7 19       		.uleb128 0x19
 5015 01a8 03       		.uleb128 0x3
 5016 01a9 0E       		.uleb128 0xe
 5017 01aa 3A       		.uleb128 0x3a
 5018 01ab 0B       		.uleb128 0xb
 5019 01ac 3B       		.uleb128 0x3b
 5020 01ad 05       		.uleb128 0x5
 5021 01ae 27       		.uleb128 0x27
 5022 01af 19       		.uleb128 0x19
 5023 01b0 11       		.uleb128 0x11
 5024 01b1 01       		.uleb128 0x1
 5025 01b2 12       		.uleb128 0x12
 5026 01b3 06       		.uleb128 0x6
 5027 01b4 40       		.uleb128 0x40
 5028 01b5 18       		.uleb128 0x18
 5029 01b6 9742     		.uleb128 0x2117
 5030 01b8 19       		.uleb128 0x19
 5031 01b9 01       		.uleb128 0x1
 5032 01ba 13       		.uleb128 0x13
 5033 01bb 00       		.byte	0
 5034 01bc 00       		.byte	0
 5035 01bd 1F       		.uleb128 0x1f
 5036 01be 2E       		.uleb128 0x2e
 5037 01bf 00       		.byte	0
 5038 01c0 3F       		.uleb128 0x3f
 5039 01c1 19       		.uleb128 0x19
 5040 01c2 03       		.uleb128 0x3
 5041 01c3 0E       		.uleb128 0xe
 5042 01c4 3A       		.uleb128 0x3a
 5043 01c5 0B       		.uleb128 0xb
 5044 01c6 3B       		.uleb128 0x3b
 5045 01c7 05       		.uleb128 0x5
 5046 01c8 49       		.uleb128 0x49
 5047 01c9 13       		.uleb128 0x13
 5048 01ca 11       		.uleb128 0x11
 5049 01cb 01       		.uleb128 0x1
 5050 01cc 12       		.uleb128 0x12
 5051 01cd 06       		.uleb128 0x6
 5052 01ce 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 101


 5053 01cf 18       		.uleb128 0x18
 5054 01d0 9742     		.uleb128 0x2117
 5055 01d2 19       		.uleb128 0x19
 5056 01d3 00       		.byte	0
 5057 01d4 00       		.byte	0
 5058 01d5 20       		.uleb128 0x20
 5059 01d6 2E       		.uleb128 0x2e
 5060 01d7 01       		.byte	0x1
 5061 01d8 3F       		.uleb128 0x3f
 5062 01d9 19       		.uleb128 0x19
 5063 01da 03       		.uleb128 0x3
 5064 01db 0E       		.uleb128 0xe
 5065 01dc 3A       		.uleb128 0x3a
 5066 01dd 0B       		.uleb128 0xb
 5067 01de 3B       		.uleb128 0x3b
 5068 01df 05       		.uleb128 0x5
 5069 01e0 27       		.uleb128 0x27
 5070 01e1 19       		.uleb128 0x19
 5071 01e2 49       		.uleb128 0x49
 5072 01e3 13       		.uleb128 0x13
 5073 01e4 11       		.uleb128 0x11
 5074 01e5 01       		.uleb128 0x1
 5075 01e6 12       		.uleb128 0x12
 5076 01e7 06       		.uleb128 0x6
 5077 01e8 40       		.uleb128 0x40
 5078 01e9 18       		.uleb128 0x18
 5079 01ea 9642     		.uleb128 0x2116
 5080 01ec 19       		.uleb128 0x19
 5081 01ed 01       		.uleb128 0x1
 5082 01ee 13       		.uleb128 0x13
 5083 01ef 00       		.byte	0
 5084 01f0 00       		.byte	0
 5085 01f1 21       		.uleb128 0x21
 5086 01f2 05       		.uleb128 0x5
 5087 01f3 00       		.byte	0
 5088 01f4 03       		.uleb128 0x3
 5089 01f5 08       		.uleb128 0x8
 5090 01f6 3A       		.uleb128 0x3a
 5091 01f7 0B       		.uleb128 0xb
 5092 01f8 3B       		.uleb128 0x3b
 5093 01f9 05       		.uleb128 0x5
 5094 01fa 49       		.uleb128 0x49
 5095 01fb 13       		.uleb128 0x13
 5096 01fc 02       		.uleb128 0x2
 5097 01fd 18       		.uleb128 0x18
 5098 01fe 00       		.byte	0
 5099 01ff 00       		.byte	0
 5100 0200 22       		.uleb128 0x22
 5101 0201 34       		.uleb128 0x34
 5102 0202 00       		.byte	0
 5103 0203 03       		.uleb128 0x3
 5104 0204 08       		.uleb128 0x8
 5105 0205 3A       		.uleb128 0x3a
 5106 0206 0B       		.uleb128 0xb
 5107 0207 3B       		.uleb128 0x3b
 5108 0208 0B       		.uleb128 0xb
 5109 0209 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 102


 5110 020a 13       		.uleb128 0x13
 5111 020b 3F       		.uleb128 0x3f
 5112 020c 19       		.uleb128 0x19
 5113 020d 02       		.uleb128 0x2
 5114 020e 18       		.uleb128 0x18
 5115 020f 00       		.byte	0
 5116 0210 00       		.byte	0
 5117 0211 23       		.uleb128 0x23
 5118 0212 34       		.uleb128 0x34
 5119 0213 00       		.byte	0
 5120 0214 03       		.uleb128 0x3
 5121 0215 0E       		.uleb128 0xe
 5122 0216 3A       		.uleb128 0x3a
 5123 0217 0B       		.uleb128 0xb
 5124 0218 3B       		.uleb128 0x3b
 5125 0219 0B       		.uleb128 0xb
 5126 021a 49       		.uleb128 0x49
 5127 021b 13       		.uleb128 0x13
 5128 021c 3F       		.uleb128 0x3f
 5129 021d 19       		.uleb128 0x19
 5130 021e 02       		.uleb128 0x2
 5131 021f 18       		.uleb128 0x18
 5132 0220 00       		.byte	0
 5133 0221 00       		.byte	0
 5134 0222 00       		.byte	0
 5135              		.section	.debug_aranges,"",%progbits
 5136 0000 6C000000 		.4byte	0x6c
 5137 0004 0200     		.2byte	0x2
 5138 0006 00000000 		.4byte	.Ldebug_info0
 5139 000a 04       		.byte	0x4
 5140 000b 00       		.byte	0
 5141 000c 0000     		.2byte	0
 5142 000e 0000     		.2byte	0
 5143 0010 00000000 		.4byte	.LFB1
 5144 0014 58000000 		.4byte	.LFE1-.LFB1
 5145 0018 00000000 		.4byte	.LFB2
 5146 001c 60000000 		.4byte	.LFE2-.LFB2
 5147 0020 00000000 		.4byte	.LFB3
 5148 0024 56000000 		.4byte	.LFE3-.LFB3
 5149 0028 00000000 		.4byte	.LFB4
 5150 002c 4C090000 		.4byte	.LFE4-.LFB4
 5151 0030 00000000 		.4byte	.LFB5
 5152 0034 18060000 		.4byte	.LFE5-.LFB5
 5153 0038 00000000 		.4byte	.LFB6
 5154 003c 0C010000 		.4byte	.LFE6-.LFB6
 5155 0040 00000000 		.4byte	.LFB7
 5156 0044 24010000 		.4byte	.LFE7-.LFB7
 5157 0048 00000000 		.4byte	.LFB8
 5158 004c 9C000000 		.4byte	.LFE8-.LFB8
 5159 0050 00000000 		.4byte	.LFB9
 5160 0054 18000000 		.4byte	.LFE9-.LFB9
 5161 0058 00000000 		.4byte	.LFB10
 5162 005c 78000000 		.4byte	.LFE10-.LFB10
 5163 0060 00000000 		.4byte	.LFB11
 5164 0064 98000000 		.4byte	.LFE11-.LFB11
 5165 0068 00000000 		.4byte	0
 5166 006c 00000000 		.4byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 103


 5167              		.section	.debug_ranges,"",%progbits
 5168              	.Ldebug_ranges0:
 5169 0000 F6010000 		.4byte	.LBB10
 5170 0004 E2050000 		.4byte	.LBE10
 5171 0008 F4050000 		.4byte	.LBB15
 5172 000c F6050000 		.4byte	.LBE15
 5173 0010 00000000 		.4byte	0
 5174 0014 00000000 		.4byte	0
 5175 0018 EE000000 		.4byte	.LBB19
 5176 001c 60010000 		.4byte	.LBE19
 5177 0020 62010000 		.4byte	.LBB21
 5178 0024 68010000 		.4byte	.LBE21
 5179 0028 00000000 		.4byte	0
 5180 002c 00000000 		.4byte	0
 5181 0030 D8010000 		.4byte	.LBB22
 5182 0034 46020000 		.4byte	.LBE22
 5183 0038 48020000 		.4byte	.LBB24
 5184 003c 4E020000 		.4byte	.LBE24
 5185 0040 00000000 		.4byte	0
 5186 0044 00000000 		.4byte	0
 5187 0048 DE020000 		.4byte	.LBB25
 5188 004c 4C030000 		.4byte	.LBE25
 5189 0050 4E030000 		.4byte	.LBB27
 5190 0054 54030000 		.4byte	.LBE27
 5191 0058 00000000 		.4byte	0
 5192 005c 00000000 		.4byte	0
 5193 0060 D0030000 		.4byte	.LBB28
 5194 0064 3A040000 		.4byte	.LBE28
 5195 0068 3C040000 		.4byte	.LBB30
 5196 006c 42040000 		.4byte	.LBE30
 5197 0070 00000000 		.4byte	0
 5198 0074 00000000 		.4byte	0
 5199 0078 00000000 		.4byte	.LFB1
 5200 007c 58000000 		.4byte	.LFE1
 5201 0080 00000000 		.4byte	.LFB2
 5202 0084 60000000 		.4byte	.LFE2
 5203 0088 00000000 		.4byte	.LFB3
 5204 008c 56000000 		.4byte	.LFE3
 5205 0090 00000000 		.4byte	.LFB4
 5206 0094 4C090000 		.4byte	.LFE4
 5207 0098 00000000 		.4byte	.LFB5
 5208 009c 18060000 		.4byte	.LFE5
 5209 00a0 00000000 		.4byte	.LFB6
 5210 00a4 0C010000 		.4byte	.LFE6
 5211 00a8 00000000 		.4byte	.LFB7
 5212 00ac 24010000 		.4byte	.LFE7
 5213 00b0 00000000 		.4byte	.LFB8
 5214 00b4 9C000000 		.4byte	.LFE8
 5215 00b8 00000000 		.4byte	.LFB9
 5216 00bc 18000000 		.4byte	.LFE9
 5217 00c0 00000000 		.4byte	.LFB10
 5218 00c4 78000000 		.4byte	.LFE10
 5219 00c8 00000000 		.4byte	.LFB11
 5220 00cc 98000000 		.4byte	.LFE11
 5221 00d0 00000000 		.4byte	0
 5222 00d4 00000000 		.4byte	0
 5223              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 104


 5224              	.Ldebug_line0:
 5225 0000 EA040000 		.section	.debug_str,"MS",%progbits,1
 5225      02003201 
 5225      00000201 
 5225      FB0E0D00 
 5225      01010101 
 5226              	.LASF17:
 5227 0000 4F726965 		.ascii	"OrientationState\000"
 5227      6E746174 
 5227      696F6E53 
 5227      74617465 
 5227      00
 5228              	.LASF38:
 5229 0011 64696A6B 		.ascii	"dijkstra\000"
 5229      73747261 
 5229      00
 5230              	.LASF25:
 5231 001a 536B6970 		.ascii	"Skip\000"
 5231      00
 5232              	.LASF35:
 5233 001f 726F7773 		.ascii	"rows\000"
 5233      00
 5234              	.LASF66:
 5235 0024 69735661 		.ascii	"isValidMove\000"
 5235      6C69644D 
 5235      6F766500 
 5236              	.LASF0:
 5237 0030 7369676E 		.ascii	"signed char\000"
 5237      65642063 
 5237      68617200 
 5238              	.LASF12:
 5239 003c 5F5F7569 		.ascii	"__uint8_t\000"
 5239      6E74385F 
 5239      7400
 5240              	.LASF26:
 5241 0046 64697265 		.ascii	"direction\000"
 5241      6374696F 
 5241      6E00
 5242              	.LASF84:
 5243 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5243      43313120 
 5243      352E342E 
 5243      31203230 
 5243      31363036 
 5244 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5244      20726576 
 5244      6973696F 
 5244      6E203233 
 5244      37373135 
 5245 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5245      66756E63 
 5245      74696F6E 
 5245      2D736563 
 5245      74696F6E 
 5246              	.LASF47:
 5247 00de 73746570 		.ascii	"stepNum\000"
 5247      4E756D00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 105


 5248              	.LASF7:
 5249 00e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 5249      206C6F6E 
 5249      6720756E 
 5249      7369676E 
 5249      65642069 
 5250              	.LASF30:
 5251 00fd 65787065 		.ascii	"expectedOrientation\000"
 5251      63746564 
 5251      4F726965 
 5251      6E746174 
 5251      696F6E00 
 5252              	.LASF46:
 5253 0111 64697374 		.ascii	"distances\000"
 5253      616E6365 
 5253      7300
 5254              	.LASF22:
 5255 011b 75547572 		.ascii	"uTurn\000"
 5255      6E00
 5256              	.LASF39:
 5257 0121 73746172 		.ascii	"startlocation\000"
 5257      746C6F63 
 5257      6174696F 
 5257      6E00
 5258              	.LASF33:
 5259 012f 7072696E 		.ascii	"printMap\000"
 5259      744D6170 
 5259      00
 5260              	.LASF29:
 5261 0138 64697374 		.ascii	"distanceToTarget\000"
 5261      616E6365 
 5261      546F5461 
 5261      72676574 
 5261      00
 5262              	.LASF6:
 5263 0149 6C6F6E67 		.ascii	"long long int\000"
 5263      206C6F6E 
 5263      6720696E 
 5263      7400
 5264              	.LASF86:
 5265 0157 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 5265      6F63756D 
 5265      656E7473 
 5265      5C476974 
 5265      4875625C 
 5266 0186 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 5266      635F636F 
 5266      64655F62 
 5266      6173655C 
 5266      43533330 
 5267              	.LASF55:
 5268 01a8 6E657743 		.ascii	"newCol\000"
 5268      6F6C00
 5269              	.LASF31:
 5270 01af 496E7374 		.ascii	"Instruction\000"
 5270      72756374 
 5270      696F6E00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 106


 5271              	.LASF51:
 5272 01bb 63757272 		.ascii	"currentCol\000"
 5272      656E7443 
 5272      6F6C00
 5273              	.LASF4:
 5274 01c6 6C6F6E67 		.ascii	"long int\000"
 5274      20696E74 
 5274      00
 5275              	.LASF40:
 5276 01cf 74617267 		.ascii	"targetlocation\000"
 5276      65746C6F 
 5276      63617469 
 5276      6F6E00
 5277              	.LASF23:
 5278 01de 466F7277 		.ascii	"ForwardUntilTarget\000"
 5278      61726455 
 5278      6E74696C 
 5278      54617267 
 5278      657400
 5279              	.LASF32:
 5280 01f1 4C6F6361 		.ascii	"Location\000"
 5280      74696F6E 
 5280      00
 5281              	.LASF71:
 5282 01fa 74617267 		.ascii	"targetRow\000"
 5282      6574526F 
 5282      7700
 5283              	.LASF77:
 5284 0204 696E7374 		.ascii	"instructionsList\000"
 5284      72756374 
 5284      696F6E73 
 5284      4C697374 
 5284      00
 5285              	.LASF67:
 5286 0215 63686563 		.ascii	"checkPathDirection\000"
 5286      6B506174 
 5286      68446972 
 5286      65637469 
 5286      6F6E00
 5287              	.LASF82:
 5288 0228 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 5288      5F6F665F 
 5288      6F707469 
 5288      6D616C5F 
 5288      636F6F72 
 5289              	.LASF8:
 5290 0244 756E7369 		.ascii	"unsigned int\000"
 5290      676E6564 
 5290      20696E74 
 5290      00
 5291              	.LASF48:
 5292 0251 73686F72 		.ascii	"shortestDist\000"
 5292      74657374 
 5292      44697374 
 5292      00
 5293              	.LASF5:
 5294 025e 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 107


 5294      20756E73 
 5294      69676E65 
 5294      6420696E 
 5294      7400
 5295              	.LASF62:
 5296 0270 74617267 		.ascii	"targetOrientation\000"
 5296      65744F72 
 5296      69656E74 
 5296      6174696F 
 5296      6E00
 5297              	.LASF3:
 5298 0282 73686F72 		.ascii	"short unsigned int\000"
 5298      7420756E 
 5298      7369676E 
 5298      65642069 
 5298      6E7400
 5299              	.LASF24:
 5300 0295 53746F70 		.ascii	"StopAtTarget\000"
 5300      41745461 
 5300      72676574 
 5300      00
 5301              	.LASF54:
 5302 02a2 6E657752 		.ascii	"newRow\000"
 5302      6F7700
 5303              	.LASF45:
 5304 02a9 70715369 		.ascii	"pqSize\000"
 5304      7A6500
 5305              	.LASF57:
 5306 02b0 67657450 		.ascii	"getPathInstructions\000"
 5306      61746849 
 5306      6E737472 
 5306      75637469 
 5306      6F6E7300 
 5307              	.LASF15:
 5308 02c4 4C656674 		.ascii	"Left\000"
 5308      00
 5309              	.LASF10:
 5310 02c9 73697A65 		.ascii	"sizetype\000"
 5310      74797065 
 5310      00
 5311              	.LASF9:
 5312 02d2 6C6F6E67 		.ascii	"long double\000"
 5312      20646F75 
 5312      626C6500 
 5313              	.LASF50:
 5314 02de 63757272 		.ascii	"currentRow\000"
 5314      656E7452 
 5314      6F7700
 5315              	.LASF68:
 5316 02e9 63686563 		.ascii	"checkIgnoreTurn\000"
 5316      6B49676E 
 5316      6F726554 
 5316      75726E00 
 5317              	.LASF20:
 5318 02f9 77616974 		.ascii	"waitForLeftTurn\000"
 5318      466F724C 
 5318      65667454 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 108


 5318      75726E00 
 5319              	.LASF76:
 5320 0309 6F726965 		.ascii	"orientation\000"
 5320      6E746174 
 5320      696F6E00 
 5321              	.LASF78:
 5322 0315 66696E61 		.ascii	"finalInstructionList\000"
 5322      6C496E73 
 5322      74727563 
 5322      74696F6E 
 5322      4C697374 
 5323              	.LASF53:
 5324 032a 63757272 		.ascii	"current\000"
 5324      656E7400 
 5325              	.LASF65:
 5326 0332 61745461 		.ascii	"atTarget\000"
 5326      72676574 
 5326      00
 5327              	.LASF52:
 5328 033b 70617468 		.ascii	"pathIndex\000"
 5328      496E6465 
 5328      7800
 5329              	.LASF34:
 5330 0345 636C6561 		.ascii	"clearMap\000"
 5330      724D6170 
 5330      00
 5331              	.LASF63:
 5332 034e 6E657744 		.ascii	"newDirection\000"
 5332      69726563 
 5332      74696F6E 
 5332      00
 5333              	.LASF37:
 5334 035b 5F426F6F 		.ascii	"_Bool\000"
 5334      6C00
 5335              	.LASF1:
 5336 0361 756E7369 		.ascii	"unsigned char\000"
 5336      676E6564 
 5336      20636861 
 5336      7200
 5337              	.LASF18:
 5338 036f 496E7374 		.ascii	"InstructionDirection\000"
 5338      72756374 
 5338      696F6E44 
 5338      69726563 
 5338      74696F6E 
 5339              	.LASF70:
 5340 0384 67657454 		.ascii	"getTargetOrientation\000"
 5340      61726765 
 5340      744F7269 
 5340      656E7461 
 5340      74696F6E 
 5341              	.LASF73:
 5342 0399 66696E64 		.ascii	"findPath\000"
 5342      50617468 
 5342      00
 5343              	.LASF2:
 5344 03a2 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 109


 5344      7420696E 
 5344      7400
 5345              	.LASF60:
 5346 03ac 74617267 		.ascii	"targetLocation\000"
 5346      65744C6F 
 5346      63617469 
 5346      6F6E00
 5347              	.LASF19:
 5348 03bb 476F466F 		.ascii	"GoForward\000"
 5348      72776172 
 5348      6400
 5349              	.LASF16:
 5350 03c5 52696768 		.ascii	"Right\000"
 5350      7400
 5351              	.LASF58:
 5352 03cb 6E756D53 		.ascii	"numSteps\000"
 5352      74657073 
 5352      00
 5353              	.LASF61:
 5354 03d4 6C697374 		.ascii	"listIndex\000"
 5354      496E6465 
 5354      7800
 5355              	.LASF49:
 5356 03de 72657453 		.ascii	"retSteps\000"
 5356      74657073 
 5356      00
 5357              	.LASF43:
 5358 03e7 6C6F6361 		.ascii	"location\000"
 5358      74696F6E 
 5358      00
 5359              	.LASF41:
 5360 03f0 76697369 		.ascii	"visitedMap\000"
 5360      7465644D 
 5360      617000
 5361              	.LASF11:
 5362 03fb 63686172 		.ascii	"char\000"
 5362      00
 5363              	.LASF81:
 5364 0400 73746172 		.ascii	"start_pos\000"
 5364      745F706F 
 5364      7300
 5365              	.LASF79:
 5366 040a 70726576 		.ascii	"previousRobotOrientation\000"
 5366      696F7573 
 5366      526F626F 
 5366      744F7269 
 5366      656E7461 
 5367              	.LASF44:
 5368 0423 64697374 		.ascii	"distance\000"
 5368      616E6365 
 5368      00
 5369              	.LASF74:
 5370 042c 666F6F64 		.ascii	"food_list\000"
 5370      5F6C6973 
 5370      7400
 5371              	.LASF14:
 5372 0436 446F776E 		.ascii	"Down\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 110


 5372      00
 5373              	.LASF80:
 5374 043b 63757272 		.ascii	"currentRobotOrientation\000"
 5374      656E7452 
 5374      6F626F74 
 5374      4F726965 
 5374      6E746174 
 5375              	.LASF56:
 5376 0453 6E657744 		.ascii	"newDistance\000"
 5376      69737461 
 5376      6E636500 
 5377              	.LASF85:
 5378 045f 70617468 		.ascii	"pathfinding.c\000"
 5378      66696E64 
 5378      696E672E 
 5378      6300
 5379              	.LASF69:
 5380 046d 726F626F 		.ascii	"robotOrientation\000"
 5380      744F7269 
 5380      656E7461 
 5380      74696F6E 
 5380      00
 5381              	.LASF21:
 5382 047e 77616974 		.ascii	"waitForRightTurn\000"
 5382      466F7252 
 5382      69676874 
 5382      5475726E 
 5382      00
 5383              	.LASF42:
 5384 048f 5072696F 		.ascii	"PriorityQueue\000"
 5384      72697479 
 5384      51756575 
 5384      6500
 5385              	.LASF59:
 5386 049d 73746172 		.ascii	"startLocation\000"
 5386      744C6F63 
 5386      6174696F 
 5386      6E00
 5387              	.LASF75:
 5388 04ab 66696E64 		.ascii	"findPathNewOrientation\000"
 5388      50617468 
 5388      4E65774F 
 5388      7269656E 
 5388      74617469 
 5389              	.LASF13:
 5390 04c2 75696E74 		.ascii	"uint8_t\000"
 5390      385F7400 
 5391              	.LASF87:
 5392 04ca 696E7374 		.ascii	"instructionsListLength\000"
 5392      72756374 
 5392      696F6E73 
 5392      4C697374 
 5392      4C656E67 
 5393              	.LASF83:
 5394 04e1 6D6F7665 		.ascii	"moves\000"
 5394      7300
 5395              	.LASF72:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccqmrS2t.s 			page 111


 5396 04e7 74617267 		.ascii	"targetCol\000"
 5396      6574436F 
 5396      6C00
 5397              	.LASF36:
 5398 04f1 636F6C73 		.ascii	"cols\000"
 5398      00
 5399              	.LASF64:
 5400 04f6 6E657874 		.ascii	"nextStep\000"
 5400      53746570 
 5400      00
 5401              	.LASF27:
 5402 04ff 69676E6F 		.ascii	"ignoreL\000"
 5402      72654C00 
 5403              	.LASF28:
 5404 0507 69676E6F 		.ascii	"ignoreR\000"
 5404      72655200 
 5405              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
