ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.comm	currentRobotOrientation,1,1
  21              		.bss
  22              		.align	2
  23              	instructionsList:
  24 0000 00000000 		.space	5700
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.align	2
  26              	finalInstructionList:
  27 1644 00000000 		.space	5700
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              		.align	2
  29              	numSteps:
  30 2c88 00000000 		.space	4
  31              		.global	map
  32              		.data
  33              		.align	2
  34              		.type	map, %object
  35              		.size	map, 1140
  36              	map:
  37 0000 01000000 		.word	1
  38 0004 01000000 		.word	1
  39 0008 01000000 		.word	1
  40 000c 01000000 		.word	1
  41 0010 01000000 		.word	1
  42 0014 01000000 		.word	1
  43 0018 01000000 		.word	1
  44 001c 01000000 		.word	1
  45 0020 01000000 		.word	1
  46 0024 01000000 		.word	1
  47 0028 01000000 		.word	1
  48 002c 01000000 		.word	1
  49 0030 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 2


  50 0034 01000000 		.word	1
  51 0038 01000000 		.word	1
  52 003c 01000000 		.word	1
  53 0040 01000000 		.word	1
  54 0044 01000000 		.word	1
  55 0048 01000000 		.word	1
  56 004c 01000000 		.word	1
  57 0050 00000000 		.word	0
  58 0054 01000000 		.word	1
  59 0058 00000000 		.word	0
  60 005c 00000000 		.word	0
  61 0060 00000000 		.word	0
  62 0064 00000000 		.word	0
  63 0068 00000000 		.word	0
  64 006c 00000000 		.word	0
  65 0070 00000000 		.word	0
  66 0074 00000000 		.word	0
  67 0078 00000000 		.word	0
  68 007c 00000000 		.word	0
  69 0080 00000000 		.word	0
  70 0084 00000000 		.word	0
  71 0088 00000000 		.word	0
  72 008c 00000000 		.word	0
  73 0090 00000000 		.word	0
  74 0094 01000000 		.word	1
  75 0098 01000000 		.word	1
  76 009c 00000000 		.word	0
  77 00a0 01000000 		.word	1
  78 00a4 00000000 		.word	0
  79 00a8 01000000 		.word	1
  80 00ac 01000000 		.word	1
  81 00b0 01000000 		.word	1
  82 00b4 01000000 		.word	1
  83 00b8 01000000 		.word	1
  84 00bc 00000000 		.word	0
  85 00c0 01000000 		.word	1
  86 00c4 01000000 		.word	1
  87 00c8 01000000 		.word	1
  88 00cc 00000000 		.word	0
  89 00d0 01000000 		.word	1
  90 00d4 01000000 		.word	1
  91 00d8 01000000 		.word	1
  92 00dc 00000000 		.word	0
  93 00e0 01000000 		.word	1
  94 00e4 01000000 		.word	1
  95 00e8 00000000 		.word	0
  96 00ec 00000000 		.word	0
  97 00f0 00000000 		.word	0
  98 00f4 01000000 		.word	1
  99 00f8 00000000 		.word	0
 100 00fc 00000000 		.word	0
 101 0100 00000000 		.word	0
 102 0104 01000000 		.word	1
 103 0108 00000000 		.word	0
 104 010c 00000000 		.word	0
 105 0110 00000000 		.word	0
 106 0114 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 3


 107 0118 00000000 		.word	0
 108 011c 00000000 		.word	0
 109 0120 00000000 		.word	0
 110 0124 01000000 		.word	1
 111 0128 00000000 		.word	0
 112 012c 01000000 		.word	1
 113 0130 01000000 		.word	1
 114 0134 01000000 		.word	1
 115 0138 01000000 		.word	1
 116 013c 00000000 		.word	0
 117 0140 01000000 		.word	1
 118 0144 00000000 		.word	0
 119 0148 01000000 		.word	1
 120 014c 00000000 		.word	0
 121 0150 01000000 		.word	1
 122 0154 01000000 		.word	1
 123 0158 01000000 		.word	1
 124 015c 00000000 		.word	0
 125 0160 01000000 		.word	1
 126 0164 00000000 		.word	0
 127 0168 01000000 		.word	1
 128 016c 01000000 		.word	1
 129 0170 01000000 		.word	1
 130 0174 00000000 		.word	0
 131 0178 01000000 		.word	1
 132 017c 01000000 		.word	1
 133 0180 00000000 		.word	0
 134 0184 00000000 		.word	0
 135 0188 00000000 		.word	0
 136 018c 01000000 		.word	1
 137 0190 00000000 		.word	0
 138 0194 01000000 		.word	1
 139 0198 00000000 		.word	0
 140 019c 00000000 		.word	0
 141 01a0 00000000 		.word	0
 142 01a4 01000000 		.word	1
 143 01a8 00000000 		.word	0
 144 01ac 01000000 		.word	1
 145 01b0 00000000 		.word	0
 146 01b4 00000000 		.word	0
 147 01b8 00000000 		.word	0
 148 01bc 00000000 		.word	0
 149 01c0 00000000 		.word	0
 150 01c4 01000000 		.word	1
 151 01c8 01000000 		.word	1
 152 01cc 00000000 		.word	0
 153 01d0 01000000 		.word	1
 154 01d4 01000000 		.word	1
 155 01d8 01000000 		.word	1
 156 01dc 00000000 		.word	0
 157 01e0 01000000 		.word	1
 158 01e4 00000000 		.word	0
 159 01e8 01000000 		.word	1
 160 01ec 00000000 		.word	0
 161 01f0 01000000 		.word	1
 162 01f4 00000000 		.word	0
 163 01f8 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 4


 164 01fc 00000000 		.word	0
 165 0200 01000000 		.word	1
 166 0204 01000000 		.word	1
 167 0208 01000000 		.word	1
 168 020c 00000000 		.word	0
 169 0210 01000000 		.word	1
 170 0214 01000000 		.word	1
 171 0218 00000000 		.word	0
 172 021c 01000000 		.word	1
 173 0220 00000000 		.word	0
 174 0224 01000000 		.word	1
 175 0228 00000000 		.word	0
 176 022c 00000000 		.word	0
 177 0230 00000000 		.word	0
 178 0234 01000000 		.word	1
 179 0238 00000000 		.word	0
 180 023c 01000000 		.word	1
 181 0240 00000000 		.word	0
 182 0244 01000000 		.word	1
 183 0248 00000000 		.word	0
 184 024c 01000000 		.word	1
 185 0250 00000000 		.word	0
 186 0254 00000000 		.word	0
 187 0258 00000000 		.word	0
 188 025c 01000000 		.word	1
 189 0260 01000000 		.word	1
 190 0264 00000000 		.word	0
 191 0268 01000000 		.word	1
 192 026c 00000000 		.word	0
 193 0270 01000000 		.word	1
 194 0274 00000000 		.word	0
 195 0278 01000000 		.word	1
 196 027c 01000000 		.word	1
 197 0280 01000000 		.word	1
 198 0284 00000000 		.word	0
 199 0288 01000000 		.word	1
 200 028c 00000000 		.word	0
 201 0290 01000000 		.word	1
 202 0294 00000000 		.word	0
 203 0298 01000000 		.word	1
 204 029c 00000000 		.word	0
 205 02a0 01000000 		.word	1
 206 02a4 01000000 		.word	1
 207 02a8 01000000 		.word	1
 208 02ac 01000000 		.word	1
 209 02b0 00000000 		.word	0
 210 02b4 00000000 		.word	0
 211 02b8 00000000 		.word	0
 212 02bc 01000000 		.word	1
 213 02c0 00000000 		.word	0
 214 02c4 01000000 		.word	1
 215 02c8 00000000 		.word	0
 216 02cc 00000000 		.word	0
 217 02d0 00000000 		.word	0
 218 02d4 01000000 		.word	1
 219 02d8 00000000 		.word	0
 220 02dc 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 5


 221 02e0 00000000 		.word	0
 222 02e4 01000000 		.word	1
 223 02e8 00000000 		.word	0
 224 02ec 00000000 		.word	0
 225 02f0 00000000 		.word	0
 226 02f4 01000000 		.word	1
 227 02f8 01000000 		.word	1
 228 02fc 01000000 		.word	1
 229 0300 01000000 		.word	1
 230 0304 00000000 		.word	0
 231 0308 01000000 		.word	1
 232 030c 00000000 		.word	0
 233 0310 01000000 		.word	1
 234 0314 01000000 		.word	1
 235 0318 01000000 		.word	1
 236 031c 01000000 		.word	1
 237 0320 01000000 		.word	1
 238 0324 01000000 		.word	1
 239 0328 01000000 		.word	1
 240 032c 01000000 		.word	1
 241 0330 01000000 		.word	1
 242 0334 01000000 		.word	1
 243 0338 01000000 		.word	1
 244 033c 00000000 		.word	0
 245 0340 01000000 		.word	1
 246 0344 01000000 		.word	1
 247 0348 00000000 		.word	0
 248 034c 00000000 		.word	0
 249 0350 00000000 		.word	0
 250 0354 00000000 		.word	0
 251 0358 00000000 		.word	0
 252 035c 00000000 		.word	0
 253 0360 00000000 		.word	0
 254 0364 00000000 		.word	0
 255 0368 00000000 		.word	0
 256 036c 00000000 		.word	0
 257 0370 00000000 		.word	0
 258 0374 00000000 		.word	0
 259 0378 00000000 		.word	0
 260 037c 00000000 		.word	0
 261 0380 00000000 		.word	0
 262 0384 00000000 		.word	0
 263 0388 00000000 		.word	0
 264 038c 01000000 		.word	1
 265 0390 01000000 		.word	1
 266 0394 00000000 		.word	0
 267 0398 01000000 		.word	1
 268 039c 01000000 		.word	1
 269 03a0 01000000 		.word	1
 270 03a4 01000000 		.word	1
 271 03a8 01000000 		.word	1
 272 03ac 01000000 		.word	1
 273 03b0 01000000 		.word	1
 274 03b4 01000000 		.word	1
 275 03b8 01000000 		.word	1
 276 03bc 01000000 		.word	1
 277 03c0 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 6


 278 03c4 00000000 		.word	0
 279 03c8 01000000 		.word	1
 280 03cc 01000000 		.word	1
 281 03d0 01000000 		.word	1
 282 03d4 01000000 		.word	1
 283 03d8 01000000 		.word	1
 284 03dc 01000000 		.word	1
 285 03e0 00000000 		.word	0
 286 03e4 00000000 		.word	0
 287 03e8 00000000 		.word	0
 288 03ec 00000000 		.word	0
 289 03f0 00000000 		.word	0
 290 03f4 00000000 		.word	0
 291 03f8 00000000 		.word	0
 292 03fc 01000000 		.word	1
 293 0400 00000000 		.word	0
 294 0404 00000000 		.word	0
 295 0408 00000000 		.word	0
 296 040c 00000000 		.word	0
 297 0410 00000000 		.word	0
 298 0414 00000000 		.word	0
 299 0418 00000000 		.word	0
 300 041c 00000000 		.word	0
 301 0420 00000000 		.word	0
 302 0424 01000000 		.word	1
 303 0428 01000000 		.word	1
 304 042c 01000000 		.word	1
 305 0430 01000000 		.word	1
 306 0434 01000000 		.word	1
 307 0438 01000000 		.word	1
 308 043c 01000000 		.word	1
 309 0440 01000000 		.word	1
 310 0444 01000000 		.word	1
 311 0448 01000000 		.word	1
 312 044c 01000000 		.word	1
 313 0450 01000000 		.word	1
 314 0454 01000000 		.word	1
 315 0458 01000000 		.word	1
 316 045c 01000000 		.word	1
 317 0460 01000000 		.word	1
 318 0464 01000000 		.word	1
 319 0468 01000000 		.word	1
 320 046c 01000000 		.word	1
 321 0470 01000000 		.word	1
 322              		.global	food_list
 323              		.align	2
 324              		.type	food_list, %object
 325              		.size	food_list, 48
 326              	food_list:
 327 0474 09000000 		.word	9
 328 0478 07000000 		.word	7
 329 047c 03000000 		.word	3
 330 0480 05000000 		.word	5
 331 0484 03000000 		.word	3
 332 0488 01000000 		.word	1
 333 048c 07000000 		.word	7
 334 0490 0B000000 		.word	11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 7


 335 0494 01000000 		.word	1
 336 0498 11000000 		.word	17
 337 049c 0D000000 		.word	13
 338 04a0 0F000000 		.word	15
 339              		.section	.rodata
 340              		.align	2
 341              	.LC0:
 342 0000 256400   		.ascii	"%d\000"
 343              		.section	.text.printMap,"ax",%progbits
 344              		.align	2
 345              		.global	printMap
 346              		.thumb
 347              		.thumb_func
 348              		.type	printMap, %function
 349              	printMap:
 350              	.LFB1:
 351              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation; // initialised by function
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static Instruction finalInstructionList[285];
  26:pathfinding.c **** static int numSteps = 0;
  27:pathfinding.c **** 
  28:pathfinding.c **** uint8_t instructionsListLength();
  29:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  30:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  31:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}, // 0
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}, // 1
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1}, // 2
  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1}, // 3
  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1}, // 4
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1}, // 5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 8


  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1}, // 6
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1}, // 7
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1}, // 8
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1}, // 9
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1}, // 10
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}, // 11
  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1}, // 12
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1}, // 13
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}, // 14
  50:pathfinding.c **** };
  51:pathfinding.c **** /*
  52:pathfinding.c **** *0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,
  53:pathfinding.c **** */
  54:pathfinding.c **** 
  55:pathfinding.c **** int food_list[6][2]= {
  56:pathfinding.c **** {9,7}, // first element is our start position
  57:pathfinding.c **** {3,5},
  58:pathfinding.c **** {3,1},
  59:pathfinding.c **** {7,11},
  60:pathfinding.c **** {1,17},
  61:pathfinding.c **** {13,15}
  62:pathfinding.c **** };
  63:pathfinding.c **** 
  64:pathfinding.c **** 
  65:pathfinding.c **** // MAP INITIALISATION CODE
  66:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 352              		.loc 1 66 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 16
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 84B0     		sub	sp, sp, #16
 361              		.cfi_def_cfa_offset 24
 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 365              	.LBB2:
  67:pathfinding.c ****     // Print the map in a grid format
  68:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 366              		.loc 1 68 0
 367 0008 0023     		movs	r3, #0
 368 000a FB60     		str	r3, [r7, #12]
 369 000c 1BE0     		b	.L2
 370              	.L5:
 371              	.LBB3:
  69:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 372              		.loc 1 69 0
 373 000e 0023     		movs	r3, #0
 374 0010 BB60     		str	r3, [r7, #8]
 375 0012 0FE0     		b	.L3
 376              	.L4:
  70:pathfinding.c ****             printf("%d", map[i][j]);
 377              		.loc 1 70 0 discriminator 3
 378 0014 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 9


 379 0016 4C22     		movs	r2, #76
 380 0018 02FB03F3 		mul	r3, r2, r3
 381 001c 7A68     		ldr	r2, [r7, #4]
 382 001e 1344     		add	r3, r3, r2
 383 0020 BA68     		ldr	r2, [r7, #8]
 384 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 385 0026 1946     		mov	r1, r3
 386 0028 0A48     		ldr	r0, .L6
 387 002a FFF7FEFF 		bl	printf
  69:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 388              		.loc 1 69 0 discriminator 3
 389 002e BB68     		ldr	r3, [r7, #8]
 390 0030 0133     		adds	r3, r3, #1
 391 0032 BB60     		str	r3, [r7, #8]
 392              	.L3:
  69:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 393              		.loc 1 69 0 is_stmt 0 discriminator 1
 394 0034 BB68     		ldr	r3, [r7, #8]
 395 0036 122B     		cmp	r3, #18
 396 0038 ECDD     		ble	.L4
 397              	.LBE3:
  71:pathfinding.c ****         }
  72:pathfinding.c ****         printf("\n");
 398              		.loc 1 72 0 is_stmt 1 discriminator 2
 399 003a 0A20     		movs	r0, #10
 400 003c FFF7FEFF 		bl	putchar
  68:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 401              		.loc 1 68 0 discriminator 2
 402 0040 FB68     		ldr	r3, [r7, #12]
 403 0042 0133     		adds	r3, r3, #1
 404 0044 FB60     		str	r3, [r7, #12]
 405              	.L2:
  68:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 406              		.loc 1 68 0 is_stmt 0 discriminator 1
 407 0046 FB68     		ldr	r3, [r7, #12]
 408 0048 0E2B     		cmp	r3, #14
 409 004a E0DD     		ble	.L5
 410              	.LBE2:
  73:pathfinding.c ****     }
  74:pathfinding.c **** }
 411              		.loc 1 74 0 is_stmt 1
 412 004c 00BF     		nop
 413 004e 1037     		adds	r7, r7, #16
 414              		.cfi_def_cfa_offset 8
 415 0050 BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 0052 80BD     		pop	{r7, pc}
 419              	.L7:
 420              		.align	2
 421              	.L6:
 422 0054 00000000 		.word	.LC0
 423              		.cfi_endproc
 424              	.LFE1:
 425              		.size	printMap, .-printMap
 426              		.section	.text.clearMap,"ax",%progbits
 427              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 10


 428              		.global	clearMap
 429              		.thumb
 430              		.thumb_func
 431              		.type	clearMap, %function
 432              	clearMap:
 433              	.LFB2:
  75:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 434              		.loc 1 75 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 16
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439 0000 80B4     		push	{r7}
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 0002 85B0     		sub	sp, sp, #20
 443              		.cfi_def_cfa_offset 24
 444 0004 00AF     		add	r7, sp, #0
 445              		.cfi_def_cfa_register 7
 446 0006 7860     		str	r0, [r7, #4]
 447              	.LBB4:
  76:pathfinding.c ****     // Print the map in a grid format
  77:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 448              		.loc 1 77 0
 449 0008 0023     		movs	r3, #0
 450 000a FB60     		str	r3, [r7, #12]
 451 000c 20E0     		b	.L9
 452              	.L13:
 453              	.LBB5:
  78:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 454              		.loc 1 78 0
 455 000e 0023     		movs	r3, #0
 456 0010 BB60     		str	r3, [r7, #8]
 457 0012 17E0     		b	.L10
 458              	.L12:
  79:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
 459              		.loc 1 79 0
 460 0014 FB68     		ldr	r3, [r7, #12]
 461 0016 4C22     		movs	r2, #76
 462 0018 02FB03F3 		mul	r3, r2, r3
 463 001c 7A68     		ldr	r2, [r7, #4]
 464 001e 1344     		add	r3, r3, r2
 465 0020 BA68     		ldr	r2, [r7, #8]
 466 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 467 0026 012B     		cmp	r3, #1
 468 0028 09D0     		beq	.L11
 469              		.loc 1 79 0 is_stmt 0 discriminator 1
 470 002a FB68     		ldr	r3, [r7, #12]
 471 002c 4C22     		movs	r2, #76
 472 002e 02FB03F3 		mul	r3, r2, r3
 473 0032 7A68     		ldr	r2, [r7, #4]
 474 0034 1344     		add	r3, r3, r2
 475 0036 BA68     		ldr	r2, [r7, #8]
 476 0038 0021     		movs	r1, #0
 477 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 478              	.L11:
  78:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 11


 479              		.loc 1 78 0 is_stmt 1 discriminator 2
 480 003e BB68     		ldr	r3, [r7, #8]
 481 0040 0133     		adds	r3, r3, #1
 482 0042 BB60     		str	r3, [r7, #8]
 483              	.L10:
  78:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 484              		.loc 1 78 0 is_stmt 0 discriminator 1
 485 0044 BB68     		ldr	r3, [r7, #8]
 486 0046 122B     		cmp	r3, #18
 487 0048 E4DD     		ble	.L12
 488              	.LBE5:
  77:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 489              		.loc 1 77 0 is_stmt 1 discriminator 2
 490 004a FB68     		ldr	r3, [r7, #12]
 491 004c 0133     		adds	r3, r3, #1
 492 004e FB60     		str	r3, [r7, #12]
 493              	.L9:
  77:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 494              		.loc 1 77 0 is_stmt 0 discriminator 1
 495 0050 FB68     		ldr	r3, [r7, #12]
 496 0052 0E2B     		cmp	r3, #14
 497 0054 DBDD     		ble	.L13
 498              	.LBE4:
  80:pathfinding.c ****         }
  81:pathfinding.c ****     }
  82:pathfinding.c **** }
 499              		.loc 1 82 0 is_stmt 1
 500 0056 00BF     		nop
 501 0058 1437     		adds	r7, r7, #20
 502              		.cfi_def_cfa_offset 4
 503 005a BD46     		mov	sp, r7
 504              		.cfi_def_cfa_register 13
 505              		@ sp needed
 506 005c 80BC     		pop	{r7}
 507              		.cfi_restore 7
 508              		.cfi_def_cfa_offset 0
 509 005e 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE2:
 512              		.size	clearMap, .-clearMap
 513              		.global	moves
 514              		.data
 515              		.align	2
 516              		.type	moves, %object
 517              		.size	moves, 32
 518              	moves:
 519 04a4 00000000 		.word	0
 520 04a8 01000000 		.word	1
 521 04ac 00000000 		.word	0
 522 04b0 FFFFFFFF 		.word	-1
 523 04b4 01000000 		.word	1
 524 04b8 00000000 		.word	0
 525 04bc FFFFFFFF 		.word	-1
 526 04c0 00000000 		.word	0
 527              		.section	.text.isValidMove,"ax",%progbits
 528              		.align	2
 529              		.global	isValidMove
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 12


 530              		.thumb
 531              		.thumb_func
 532              		.type	isValidMove, %function
 533              	isValidMove:
 534              	.LFB3:
  83:pathfinding.c **** 
  84:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
  85:pathfinding.c **** 
  86:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 535              		.loc 1 86 0
 536              		.cfi_startproc
 537              		@ args = 4, pretend = 0, frame = 16
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              		.cfi_def_cfa_offset 24
 545 0004 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 547 0006 F860     		str	r0, [r7, #12]
 548 0008 B960     		str	r1, [r7, #8]
 549 000a 7A60     		str	r2, [r7, #4]
 550 000c 3B60     		str	r3, [r7]
  87:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 551              		.loc 1 87 0
 552 000e FB68     		ldr	r3, [r7, #12]
 553 0010 002B     		cmp	r3, #0
 554 0012 17DB     		blt	.L15
 555              		.loc 1 87 0 is_stmt 0 discriminator 1
 556 0014 FA68     		ldr	r2, [r7, #12]
 557 0016 7B68     		ldr	r3, [r7, #4]
 558 0018 9A42     		cmp	r2, r3
 559 001a 13DA     		bge	.L15
 560              		.loc 1 87 0 discriminator 3
 561 001c BB68     		ldr	r3, [r7, #8]
 562 001e 002B     		cmp	r3, #0
 563 0020 10DB     		blt	.L15
 564              		.loc 1 87 0 discriminator 5
 565 0022 BA68     		ldr	r2, [r7, #8]
 566 0024 3B68     		ldr	r3, [r7]
 567 0026 9A42     		cmp	r2, r3
 568 0028 0CDA     		bge	.L15
 569              		.loc 1 87 0 discriminator 7
 570 002a FB68     		ldr	r3, [r7, #12]
 571 002c 4C22     		movs	r2, #76
 572 002e 02FB03F3 		mul	r3, r2, r3
 573 0032 BA69     		ldr	r2, [r7, #24]
 574 0034 1344     		add	r3, r3, r2
 575 0036 BA68     		ldr	r2, [r7, #8]
 576 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 577 003c 002B     		cmp	r3, #0
 578 003e 01D1     		bne	.L15
 579              		.loc 1 87 0 discriminator 9
 580 0040 0123     		movs	r3, #1
 581 0042 00E0     		b	.L16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 13


 582              	.L15:
 583              		.loc 1 87 0 discriminator 10
 584 0044 0023     		movs	r3, #0
 585              	.L16:
 586              		.loc 1 87 0 discriminator 12
 587 0046 03F00103 		and	r3, r3, #1
 588 004a DBB2     		uxtb	r3, r3
  88:pathfinding.c **** }
 589              		.loc 1 88 0 is_stmt 1 discriminator 12
 590 004c 1846     		mov	r0, r3
 591 004e 1437     		adds	r7, r7, #20
 592              		.cfi_def_cfa_offset 4
 593 0050 BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0052 80BC     		pop	{r7}
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 0054 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE3:
 602              		.size	isValidMove, .-isValidMove
 603 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 604              		.align	2
 605              		.global	dijkstra
 606              		.thumb
 607              		.thumb_func
 608              		.type	dijkstra, %function
 609              	dijkstra:
 610              	.LFB4:
  89:pathfinding.c **** 
  90:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
 611              		.loc 1 90 0
 612              		.cfi_startproc
 613              		@ args = 12, pretend = 8, frame = 5816
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615 0000 82B0     		sub	sp, sp, #8
 616              		.cfi_def_cfa_offset 8
 617 0002 90B5     		push	{r4, r7, lr}
 618              		.cfi_def_cfa_offset 20
 619              		.cfi_offset 4, -20
 620              		.cfi_offset 7, -16
 621              		.cfi_offset 14, -12
 622 0004 ADF5B65D 		sub	sp, sp, #5824
 623              		.cfi_def_cfa_offset 5844
 624 0008 81B0     		sub	sp, sp, #4
 625              		.cfi_def_cfa_offset 5848
 626 000a 02AF     		add	r7, sp, #8
 627              		.cfi_def_cfa 7, 5840
 628 000c 07F11804 		add	r4, r7, #24
 629 0010 0C3C     		subs	r4, r4, #12
 630 0012 2060     		str	r0, [r4]
 631 0014 07F11800 		add	r0, r7, #24
 632 0018 1438     		subs	r0, r0, #20
 633 001a 80E80600 		stmia	r0, {r1, r2}
 634 001e 07F5B652 		add	r2, r7, #5824
 635 0022 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 14


 636 0026 1360     		str	r3, [r2]
 637              	.LBB6:
  91:pathfinding.c **** 
  92:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
  93:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 638              		.loc 1 93 0
 639 0028 0023     		movs	r3, #0
 640 002a 07F5B552 		add	r2, r7, #5792
 641 002e 02F11402 		add	r2, r2, #20
 642 0032 1360     		str	r3, [r2]
 643 0034 3AE0     		b	.L19
 644              	.L22:
 645              	.LBB7:
  94:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 646              		.loc 1 94 0
 647 0036 0023     		movs	r3, #0
 648 0038 07F5B552 		add	r2, r7, #5792
 649 003c 02F11002 		add	r2, r2, #16
 650 0040 1360     		str	r3, [r2]
 651 0042 21E0     		b	.L20
 652              	.L21:
  95:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 653              		.loc 1 95 0 discriminator 3
 654 0044 07F58F51 		add	r1, r7, #4576
 655 0048 01F10C01 		add	r1, r1, #12
 656 004c 07F5B553 		add	r3, r7, #5792
 657 0050 03F11403 		add	r3, r3, #20
 658 0054 1A68     		ldr	r2, [r3]
 659 0056 1346     		mov	r3, r2
 660 0058 DB00     		lsls	r3, r3, #3
 661 005a 1344     		add	r3, r3, r2
 662 005c 5B00     		lsls	r3, r3, #1
 663 005e 1344     		add	r3, r3, r2
 664 0060 07F5B552 		add	r2, r7, #5792
 665 0064 02F11002 		add	r2, r2, #16
 666 0068 1268     		ldr	r2, [r2]
 667 006a 1344     		add	r3, r3, r2
 668 006c 0122     		movs	r2, #1
 669 006e 41F82320 		str	r2, [r1, r3, lsl #2]
  94:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 670              		.loc 1 94 0 discriminator 3
 671 0072 07F5B553 		add	r3, r7, #5792
 672 0076 03F11003 		add	r3, r3, #16
 673 007a 1B68     		ldr	r3, [r3]
 674 007c 0133     		adds	r3, r3, #1
 675 007e 07F5B552 		add	r2, r7, #5792
 676 0082 02F11002 		add	r2, r2, #16
 677 0086 1360     		str	r3, [r2]
 678              	.L20:
  94:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 679              		.loc 1 94 0 is_stmt 0 discriminator 1
 680 0088 07F5B553 		add	r3, r7, #5792
 681 008c 03F11003 		add	r3, r3, #16
 682 0090 1B68     		ldr	r3, [r3]
 683 0092 122B     		cmp	r3, #18
 684 0094 D6DD     		ble	.L21
 685              	.LBE7:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 15


  93:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 686              		.loc 1 93 0 is_stmt 1 discriminator 2
 687 0096 07F5B553 		add	r3, r7, #5792
 688 009a 03F11403 		add	r3, r3, #20
 689 009e 1B68     		ldr	r3, [r3]
 690 00a0 0133     		adds	r3, r3, #1
 691 00a2 07F5B552 		add	r2, r7, #5792
 692 00a6 02F11402 		add	r2, r2, #20
 693 00aa 1360     		str	r3, [r2]
 694              	.L19:
  93:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 695              		.loc 1 93 0 is_stmt 0 discriminator 1
 696 00ac 07F5B553 		add	r3, r7, #5792
 697 00b0 03F11403 		add	r3, r3, #20
 698 00b4 1B68     		ldr	r3, [r3]
 699 00b6 0E2B     		cmp	r3, #14
 700 00b8 BDDD     		ble	.L22
 701              	.LBE6:
  96:pathfinding.c ****         }
  97:pathfinding.c ****     }
  98:pathfinding.c **** 
  99:pathfinding.c ****     struct PriorityQueue {
 100:pathfinding.c ****         struct Location location;
 101:pathfinding.c ****         int distance;
 102:pathfinding.c ****     };
 103:pathfinding.c **** 
 104:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 105:pathfinding.c ****     int pqSize = 0;
 702              		.loc 1 105 0 is_stmt 1
 703 00ba 0023     		movs	r3, #0
 704 00bc 07F5B552 		add	r2, r7, #5792
 705 00c0 02F10C02 		add	r2, r2, #12
 706 00c4 1360     		str	r3, [r2]
 707              	.LBB8:
 106:pathfinding.c **** 
 107:pathfinding.c ****     // Initialize distances and paths arrays
 108:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 109:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 110:pathfinding.c **** 
 111:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 708              		.loc 1 111 0
 709 00c6 0023     		movs	r3, #0
 710 00c8 07F5B552 		add	r2, r7, #5792
 711 00cc 02F10802 		add	r2, r2, #8
 712 00d0 1360     		str	r3, [r2]
 713 00d2 3AE0     		b	.L23
 714              	.L26:
 715              	.LBB9:
 112:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 716              		.loc 1 112 0
 717 00d4 0023     		movs	r3, #0
 718 00d6 07F5B552 		add	r2, r7, #5792
 719 00da 02F10402 		add	r2, r2, #4
 720 00de 1360     		str	r3, [r2]
 721 00e0 21E0     		b	.L24
 722              	.L25:
 113:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 16


 723              		.loc 1 113 0 discriminator 3
 724 00e2 07F13802 		add	r2, r7, #56
 725 00e6 1C3A     		subs	r2, r2, #28
 726 00e8 07F5B553 		add	r3, r7, #5792
 727 00ec 03F10803 		add	r3, r3, #8
 728 00f0 1968     		ldr	r1, [r3]
 729 00f2 0B46     		mov	r3, r1
 730 00f4 DB00     		lsls	r3, r3, #3
 731 00f6 0B44     		add	r3, r3, r1
 732 00f8 5B00     		lsls	r3, r3, #1
 733 00fa 0B44     		add	r3, r3, r1
 734 00fc 07F5B551 		add	r1, r7, #5792
 735 0100 01F10401 		add	r1, r1, #4
 736 0104 0968     		ldr	r1, [r1]
 737 0106 0B44     		add	r3, r3, r1
 738 0108 4FF47A71 		mov	r1, #1000
 739 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 112:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 740              		.loc 1 112 0 discriminator 3
 741 0110 07F5B553 		add	r3, r7, #5792
 742 0114 03F10403 		add	r3, r3, #4
 743 0118 1B68     		ldr	r3, [r3]
 744 011a 0133     		adds	r3, r3, #1
 745 011c 07F5B552 		add	r2, r7, #5792
 746 0120 02F10402 		add	r2, r2, #4
 747 0124 1360     		str	r3, [r2]
 748              	.L24:
 112:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 749              		.loc 1 112 0 is_stmt 0 discriminator 1
 750 0126 07F5B553 		add	r3, r7, #5792
 751 012a 03F10403 		add	r3, r3, #4
 752 012e 1B68     		ldr	r3, [r3]
 753 0130 122B     		cmp	r3, #18
 754 0132 D6DD     		ble	.L25
 755              	.LBE9:
 111:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 756              		.loc 1 111 0 is_stmt 1 discriminator 2
 757 0134 07F5B553 		add	r3, r7, #5792
 758 0138 03F10803 		add	r3, r3, #8
 759 013c 1B68     		ldr	r3, [r3]
 760 013e 0133     		adds	r3, r3, #1
 761 0140 07F5B552 		add	r2, r7, #5792
 762 0144 02F10802 		add	r2, r2, #8
 763 0148 1360     		str	r3, [r2]
 764              	.L23:
 111:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 765              		.loc 1 111 0 is_stmt 0 discriminator 1
 766 014a 07F5B553 		add	r3, r7, #5792
 767 014e 03F10803 		add	r3, r3, #8
 768 0152 1B68     		ldr	r3, [r3]
 769 0154 0E2B     		cmp	r3, #14
 770 0156 BDDD     		ble	.L26
 771              	.LBE8:
 114:pathfinding.c ****         }
 115:pathfinding.c ****     }
 116:pathfinding.c **** 
 117:pathfinding.c ****     int stepNum = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 17


 772              		.loc 1 117 0 is_stmt 1
 773 0158 0023     		movs	r3, #0
 774 015a 07F5B552 		add	r2, r7, #5792
 775 015e 1360     		str	r3, [r2]
 118:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 776              		.loc 1 118 0
 777 0160 07F11803 		add	r3, r7, #24
 778 0164 143B     		subs	r3, r3, #20
 779 0166 1968     		ldr	r1, [r3]
 780 0168 07F11803 		add	r3, r7, #24
 781 016c 143B     		subs	r3, r3, #20
 782 016e 5868     		ldr	r0, [r3, #4]
 783 0170 07F13802 		add	r2, r7, #56
 784 0174 1C3A     		subs	r2, r2, #28
 785 0176 0B46     		mov	r3, r1
 786 0178 DB00     		lsls	r3, r3, #3
 787 017a 0B44     		add	r3, r3, r1
 788 017c 5B00     		lsls	r3, r3, #1
 789 017e 0B44     		add	r3, r3, r1
 790 0180 0344     		add	r3, r3, r0
 791 0182 0021     		movs	r1, #0
 792 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 119:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 120:pathfinding.c ****     stepNum++; // increment stepNum
 793              		.loc 1 120 0
 794 0188 07F5B553 		add	r3, r7, #5792
 795 018c 1B68     		ldr	r3, [r3]
 796 018e 0133     		adds	r3, r3, #1
 797 0190 07F5B552 		add	r2, r7, #5792
 798 0194 1360     		str	r3, [r2]
 121:pathfinding.c **** 
 122:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
 799              		.loc 1 122 0
 800 0196 07F59362 		add	r2, r7, #1176
 801 019a 083A     		subs	r2, r2, #8
 802 019c 07F5B553 		add	r3, r7, #5792
 803 01a0 03F10C03 		add	r3, r3, #12
 804 01a4 1968     		ldr	r1, [r3]
 805 01a6 0B46     		mov	r3, r1
 806 01a8 5B00     		lsls	r3, r3, #1
 807 01aa 0B44     		add	r3, r3, r1
 808 01ac 9B00     		lsls	r3, r3, #2
 809 01ae 1A44     		add	r2, r2, r3
 810 01b0 07F11803 		add	r3, r7, #24
 811 01b4 143B     		subs	r3, r3, #20
 812 01b6 93E80300 		ldmia	r3, {r0, r1}
 813 01ba 82E80300 		stmia	r2, {r0, r1}
 123:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 814              		.loc 1 123 0
 815 01be 07F59362 		add	r2, r7, #1176
 816 01c2 083A     		subs	r2, r2, #8
 817 01c4 07F5B553 		add	r3, r7, #5792
 818 01c8 03F10C03 		add	r3, r3, #12
 819 01cc 1968     		ldr	r1, [r3]
 820 01ce 0B46     		mov	r3, r1
 821 01d0 5B00     		lsls	r3, r3, #1
 822 01d2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 18


 823 01d4 9B00     		lsls	r3, r3, #2
 824 01d6 1344     		add	r3, r3, r2
 825 01d8 0833     		adds	r3, r3, #8
 826 01da 0022     		movs	r2, #0
 827 01dc 1A60     		str	r2, [r3]
 124:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 828              		.loc 1 124 0
 829 01de 07F5B553 		add	r3, r7, #5792
 830 01e2 03F10C03 		add	r3, r3, #12
 831 01e6 1B68     		ldr	r3, [r3]
 832 01e8 0133     		adds	r3, r3, #1
 833 01ea 07F5B552 		add	r2, r7, #5792
 834 01ee 02F10C02 		add	r2, r2, #12
 835 01f2 1360     		str	r3, [r2]
 125:pathfinding.c **** 
 126:pathfinding.c ****     while (pqSize > 0) {
 836              		.loc 1 126 0
 837 01f4 F5E1     		b	.L27
 838              	.L37:
 839              	.LBB10:
 127:pathfinding.c ****         int idx = 0;
 840              		.loc 1 127 0
 841 01f6 0023     		movs	r3, #0
 842 01f8 07F5B452 		add	r2, r7, #5760
 843 01fc 02F11C02 		add	r2, r2, #28
 844 0200 1360     		str	r3, [r2]
 845              	.LBB11:
 128:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 846              		.loc 1 128 0
 847 0202 0123     		movs	r3, #1
 848 0204 07F5B452 		add	r2, r7, #5760
 849 0208 02F11802 		add	r2, r2, #24
 850 020c 1360     		str	r3, [r2]
 851 020e 34E0     		b	.L28
 852              	.L30:
 129:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 853              		.loc 1 129 0
 854 0210 07F59362 		add	r2, r7, #1176
 855 0214 083A     		subs	r2, r2, #8
 856 0216 07F5B453 		add	r3, r7, #5760
 857 021a 03F11803 		add	r3, r3, #24
 858 021e 1968     		ldr	r1, [r3]
 859 0220 0B46     		mov	r3, r1
 860 0222 5B00     		lsls	r3, r3, #1
 861 0224 0B44     		add	r3, r3, r1
 862 0226 9B00     		lsls	r3, r3, #2
 863 0228 1344     		add	r3, r3, r2
 864 022a 0833     		adds	r3, r3, #8
 865 022c 1868     		ldr	r0, [r3]
 866 022e 07F59362 		add	r2, r7, #1176
 867 0232 083A     		subs	r2, r2, #8
 868 0234 07F5B453 		add	r3, r7, #5760
 869 0238 03F11C03 		add	r3, r3, #28
 870 023c 1968     		ldr	r1, [r3]
 871 023e 0B46     		mov	r3, r1
 872 0240 5B00     		lsls	r3, r3, #1
 873 0242 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 19


 874 0244 9B00     		lsls	r3, r3, #2
 875 0246 1344     		add	r3, r3, r2
 876 0248 0833     		adds	r3, r3, #8
 877 024a 1B68     		ldr	r3, [r3]
 878 024c 9842     		cmp	r0, r3
 879 024e 09DA     		bge	.L29
 130:pathfinding.c ****                 idx = i; // find the shortest distance location 
 880              		.loc 1 130 0
 881 0250 07F5B453 		add	r3, r7, #5760
 882 0254 03F11803 		add	r3, r3, #24
 883 0258 1B68     		ldr	r3, [r3]
 884 025a 07F5B452 		add	r2, r7, #5760
 885 025e 02F11C02 		add	r2, r2, #28
 886 0262 1360     		str	r3, [r2]
 887              	.L29:
 128:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 888              		.loc 1 128 0 discriminator 2
 889 0264 07F5B453 		add	r3, r7, #5760
 890 0268 03F11803 		add	r3, r3, #24
 891 026c 1B68     		ldr	r3, [r3]
 892 026e 0133     		adds	r3, r3, #1
 893 0270 07F5B452 		add	r2, r7, #5760
 894 0274 02F11802 		add	r2, r2, #24
 895 0278 1360     		str	r3, [r2]
 896              	.L28:
 128:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 897              		.loc 1 128 0 is_stmt 0 discriminator 1
 898 027a 07F5B453 		add	r3, r7, #5760
 899 027e 03F11803 		add	r3, r3, #24
 900 0282 1A68     		ldr	r2, [r3]
 901 0284 07F5B553 		add	r3, r7, #5792
 902 0288 03F10C03 		add	r3, r3, #12
 903 028c 1B68     		ldr	r3, [r3]
 904 028e 9A42     		cmp	r2, r3
 905 0290 BEDB     		blt	.L30
 906              	.LBE11:
 131:pathfinding.c ****             }
 132:pathfinding.c ****         }
 133:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 907              		.loc 1 133 0 is_stmt 1
 908 0292 07F11801 		add	r1, r7, #24
 909 0296 0839     		subs	r1, r1, #8
 910 0298 07F59362 		add	r2, r7, #1176
 911 029c 083A     		subs	r2, r2, #8
 912 029e 07F5B453 		add	r3, r7, #5760
 913 02a2 03F11C03 		add	r3, r3, #28
 914 02a6 1868     		ldr	r0, [r3]
 915 02a8 0346     		mov	r3, r0
 916 02aa 5B00     		lsls	r3, r3, #1
 917 02ac 0344     		add	r3, r3, r0
 918 02ae 9B00     		lsls	r3, r3, #2
 919 02b0 1A44     		add	r2, r2, r3
 920 02b2 0B46     		mov	r3, r1
 921 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 922 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 134:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 923              		.loc 1 134 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 20


 924 02ba 07F5B553 		add	r3, r7, #5792
 925 02be 03F10C03 		add	r3, r3, #12
 926 02c2 1B68     		ldr	r3, [r3]
 927 02c4 591E     		subs	r1, r3, #1
 928 02c6 07F59362 		add	r2, r7, #1176
 929 02ca 083A     		subs	r2, r2, #8
 930 02cc 07F5B453 		add	r3, r7, #5760
 931 02d0 03F11C03 		add	r3, r3, #28
 932 02d4 1868     		ldr	r0, [r3]
 933 02d6 0346     		mov	r3, r0
 934 02d8 5B00     		lsls	r3, r3, #1
 935 02da 0344     		add	r3, r3, r0
 936 02dc 9B00     		lsls	r3, r3, #2
 937 02de D018     		adds	r0, r2, r3
 938 02e0 07F59362 		add	r2, r7, #1176
 939 02e4 083A     		subs	r2, r2, #8
 940 02e6 0B46     		mov	r3, r1
 941 02e8 5B00     		lsls	r3, r3, #1
 942 02ea 0B44     		add	r3, r3, r1
 943 02ec 9B00     		lsls	r3, r3, #2
 944 02ee 1A44     		add	r2, r2, r3
 945 02f0 0346     		mov	r3, r0
 946 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 947 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 135:pathfinding.c ****         pqSize--; // decrement pqSize
 948              		.loc 1 135 0
 949 02f8 07F5B553 		add	r3, r7, #5792
 950 02fc 03F10C03 		add	r3, r3, #12
 951 0300 1B68     		ldr	r3, [r3]
 952 0302 013B     		subs	r3, r3, #1
 953 0304 07F5B552 		add	r2, r7, #5792
 954 0308 02F10C02 		add	r2, r2, #12
 955 030c 1360     		str	r3, [r2]
 136:pathfinding.c **** 
 137:pathfinding.c ****         int row = current.location.row;
 956              		.loc 1 137 0
 957 030e 07F11803 		add	r3, r7, #24
 958 0312 083B     		subs	r3, r3, #8
 959 0314 1B68     		ldr	r3, [r3]
 960 0316 07F5B352 		add	r2, r7, #5728
 961 031a 02F11C02 		add	r2, r2, #28
 962 031e 1360     		str	r3, [r2]
 138:pathfinding.c ****         int col = current.location.col; // get current location details
 963              		.loc 1 138 0
 964 0320 07F11803 		add	r3, r7, #24
 965 0324 083B     		subs	r3, r3, #8
 966 0326 5B68     		ldr	r3, [r3, #4]
 967 0328 07F5B352 		add	r2, r7, #5728
 968 032c 02F11802 		add	r2, r2, #24
 969 0330 1360     		str	r3, [r2]
 139:pathfinding.c **** 
 140:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 970              		.loc 1 140 0
 971 0332 07F58F51 		add	r1, r7, #4576
 972 0336 01F10C01 		add	r1, r1, #12
 973 033a 07F5B353 		add	r3, r7, #5728
 974 033e 03F11C03 		add	r3, r3, #28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 21


 975 0342 1A68     		ldr	r2, [r3]
 976 0344 1346     		mov	r3, r2
 977 0346 DB00     		lsls	r3, r3, #3
 978 0348 1344     		add	r3, r3, r2
 979 034a 5B00     		lsls	r3, r3, #1
 980 034c 1344     		add	r3, r3, r2
 981 034e 07F5B352 		add	r2, r7, #5728
 982 0352 02F11802 		add	r2, r2, #24
 983 0356 1268     		ldr	r2, [r2]
 984 0358 1344     		add	r3, r3, r2
 985 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 986 035e 012B     		cmp	r3, #1
 987 0360 40F03F81 		bne	.L27
 141:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 988              		.loc 1 141 0
 989 0364 07F58F51 		add	r1, r7, #4576
 990 0368 01F10C01 		add	r1, r1, #12
 991 036c 07F5B353 		add	r3, r7, #5728
 992 0370 03F11C03 		add	r3, r3, #28
 993 0374 1A68     		ldr	r2, [r3]
 994 0376 1346     		mov	r3, r2
 995 0378 DB00     		lsls	r3, r3, #3
 996 037a 1344     		add	r3, r3, r2
 997 037c 5B00     		lsls	r3, r3, #1
 998 037e 1344     		add	r3, r3, r2
 999 0380 07F5B352 		add	r2, r7, #5728
 1000 0384 02F11802 		add	r2, r2, #24
 1001 0388 1268     		ldr	r2, [r2]
 1002 038a 1344     		add	r3, r3, r2
 1003 038c 0022     		movs	r2, #0
 1004 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 142:pathfinding.c **** 
 143:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1005              		.loc 1 143 0
 1006 0392 07F5B653 		add	r3, r7, #5824
 1007 0396 03F10C03 		add	r3, r3, #12
 1008 039a 1A68     		ldr	r2, [r3]
 1009 039c 07F5B353 		add	r3, r7, #5728
 1010 03a0 03F11C03 		add	r3, r3, #28
 1011 03a4 1B68     		ldr	r3, [r3]
 1012 03a6 9A42     		cmp	r2, r3
 1013 03a8 0CD1     		bne	.L32
 1014              		.loc 1 143 0 is_stmt 0 discriminator 1
 1015 03aa 07F5B653 		add	r3, r7, #5824
 1016 03ae 03F11003 		add	r3, r3, #16
 1017 03b2 1A68     		ldr	r2, [r3]
 1018 03b4 07F5B353 		add	r3, r7, #5728
 1019 03b8 03F11803 		add	r3, r3, #24
 1020 03bc 1B68     		ldr	r3, [r3]
 1021 03be 9A42     		cmp	r2, r3
 1022 03c0 00F01881 		beq	.L43
 1023              	.L32:
 1024              	.LBB12:
 144:pathfinding.c ****                 break; // if reached target destination, end
 145:pathfinding.c ****             }
 146:pathfinding.c ****             // make a move, check if valid
 147:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 22


 1025              		.loc 1 147 0 is_stmt 1
 1026 03c4 0023     		movs	r3, #0
 1027 03c6 07F5B452 		add	r2, r7, #5760
 1028 03ca 02F11402 		add	r2, r2, #20
 1029 03ce 1360     		str	r3, [r2]
 1030 03d0 FFE0     		b	.L34
 1031              	.L36:
 1032              	.LBB13:
 148:pathfinding.c ****                 int newRow = row + moves[i].row;
 1033              		.loc 1 148 0
 1034 03d2 D04A     		ldr	r2, .L44
 1035 03d4 07F5B453 		add	r3, r7, #5760
 1036 03d8 03F11403 		add	r3, r3, #20
 1037 03dc 1B68     		ldr	r3, [r3]
 1038 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1039 03e2 07F5B353 		add	r3, r7, #5728
 1040 03e6 03F11C03 		add	r3, r3, #28
 1041 03ea 1B68     		ldr	r3, [r3]
 1042 03ec 1344     		add	r3, r3, r2
 1043 03ee 07F5B352 		add	r2, r7, #5728
 1044 03f2 02F11402 		add	r2, r2, #20
 1045 03f6 1360     		str	r3, [r2]
 149:pathfinding.c ****                 int newCol = col + moves[i].col;
 1046              		.loc 1 149 0
 1047 03f8 C64A     		ldr	r2, .L44
 1048 03fa 07F5B453 		add	r3, r7, #5760
 1049 03fe 03F11403 		add	r3, r3, #20
 1050 0402 1B68     		ldr	r3, [r3]
 1051 0404 DB00     		lsls	r3, r3, #3
 1052 0406 1344     		add	r3, r3, r2
 1053 0408 5A68     		ldr	r2, [r3, #4]
 1054 040a 07F5B353 		add	r3, r7, #5728
 1055 040e 03F11803 		add	r3, r3, #24
 1056 0412 1B68     		ldr	r3, [r3]
 1057 0414 1344     		add	r3, r3, r2
 1058 0416 07F5B352 		add	r2, r7, #5728
 1059 041a 02F11002 		add	r2, r2, #16
 1060 041e 1360     		str	r3, [r2]
 150:pathfinding.c **** 
 151:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1061              		.loc 1 151 0
 1062 0420 07F11803 		add	r3, r7, #24
 1063 0424 0C3B     		subs	r3, r3, #12
 1064 0426 1B68     		ldr	r3, [r3]
 1065 0428 0093     		str	r3, [sp]
 1066 042a 1323     		movs	r3, #19
 1067 042c 0F22     		movs	r2, #15
 1068 042e 07F5B351 		add	r1, r7, #5728
 1069 0432 01F11001 		add	r1, r1, #16
 1070 0436 0968     		ldr	r1, [r1]
 1071 0438 07F5B350 		add	r0, r7, #5728
 1072 043c 00F11400 		add	r0, r0, #20
 1073 0440 0068     		ldr	r0, [r0]
 1074 0442 FFF7FEFF 		bl	isValidMove
 1075 0446 0346     		mov	r3, r0
 1076 0448 002B     		cmp	r3, #0
 1077 044a 00F0B780 		beq	.L35
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 23


 1078              		.loc 1 151 0 is_stmt 0 discriminator 1
 1079 044e 07F58F51 		add	r1, r7, #4576
 1080 0452 01F10C01 		add	r1, r1, #12
 1081 0456 07F5B353 		add	r3, r7, #5728
 1082 045a 03F11403 		add	r3, r3, #20
 1083 045e 1A68     		ldr	r2, [r3]
 1084 0460 1346     		mov	r3, r2
 1085 0462 DB00     		lsls	r3, r3, #3
 1086 0464 1344     		add	r3, r3, r2
 1087 0466 5B00     		lsls	r3, r3, #1
 1088 0468 1344     		add	r3, r3, r2
 1089 046a 07F5B352 		add	r2, r7, #5728
 1090 046e 02F11002 		add	r2, r2, #16
 1091 0472 1268     		ldr	r2, [r2]
 1092 0474 1344     		add	r3, r3, r2
 1093 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1094 047a 012B     		cmp	r3, #1
 1095 047c 40F09E80 		bne	.L35
 1096              	.LBB14:
 152:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1097              		.loc 1 152 0 is_stmt 1
 1098 0480 07F13802 		add	r2, r7, #56
 1099 0484 1C3A     		subs	r2, r2, #28
 1100 0486 07F5B353 		add	r3, r7, #5728
 1101 048a 03F11C03 		add	r3, r3, #28
 1102 048e 1968     		ldr	r1, [r3]
 1103 0490 0B46     		mov	r3, r1
 1104 0492 DB00     		lsls	r3, r3, #3
 1105 0494 0B44     		add	r3, r3, r1
 1106 0496 5B00     		lsls	r3, r3, #1
 1107 0498 0B44     		add	r3, r3, r1
 1108 049a 07F5B351 		add	r1, r7, #5728
 1109 049e 01F11801 		add	r1, r1, #24
 1110 04a2 0968     		ldr	r1, [r1]
 1111 04a4 0B44     		add	r3, r3, r1
 1112 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1113 04aa 0133     		adds	r3, r3, #1
 1114 04ac 07F5B352 		add	r2, r7, #5728
 1115 04b0 02F10C02 		add	r2, r2, #12
 1116 04b4 1360     		str	r3, [r2]
 153:pathfinding.c ****                     // take the shortest distance between new and existing
 154:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1117              		.loc 1 154 0
 1118 04b6 07F13802 		add	r2, r7, #56
 1119 04ba 1C3A     		subs	r2, r2, #28
 1120 04bc 07F5B353 		add	r3, r7, #5728
 1121 04c0 03F11403 		add	r3, r3, #20
 1122 04c4 1968     		ldr	r1, [r3]
 1123 04c6 0B46     		mov	r3, r1
 1124 04c8 DB00     		lsls	r3, r3, #3
 1125 04ca 0B44     		add	r3, r3, r1
 1126 04cc 5B00     		lsls	r3, r3, #1
 1127 04ce 0B44     		add	r3, r3, r1
 1128 04d0 07F5B351 		add	r1, r7, #5728
 1129 04d4 01F11001 		add	r1, r1, #16
 1130 04d8 0968     		ldr	r1, [r1]
 1131 04da 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 24


 1132 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1133 04e0 07F5B353 		add	r3, r7, #5728
 1134 04e4 03F10C03 		add	r3, r3, #12
 1135 04e8 1B68     		ldr	r3, [r3]
 1136 04ea 9A42     		cmp	r2, r3
 1137 04ec 66DD     		ble	.L35
 155:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1138              		.loc 1 155 0
 1139 04ee 07F13802 		add	r2, r7, #56
 1140 04f2 1C3A     		subs	r2, r2, #28
 1141 04f4 07F5B353 		add	r3, r7, #5728
 1142 04f8 03F11403 		add	r3, r3, #20
 1143 04fc 1968     		ldr	r1, [r3]
 1144 04fe 0B46     		mov	r3, r1
 1145 0500 DB00     		lsls	r3, r3, #3
 1146 0502 0B44     		add	r3, r3, r1
 1147 0504 5B00     		lsls	r3, r3, #1
 1148 0506 0B44     		add	r3, r3, r1
 1149 0508 07F5B351 		add	r1, r7, #5728
 1150 050c 01F11001 		add	r1, r1, #16
 1151 0510 0968     		ldr	r1, [r1]
 1152 0512 0B44     		add	r3, r3, r1
 1153 0514 07F5B351 		add	r1, r7, #5728
 1154 0518 01F10C01 		add	r1, r1, #12
 1155 051c 0968     		ldr	r1, [r1]
 1156 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 156:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 157:pathfinding.c ****                         
 158:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1157              		.loc 1 158 0
 1158 0522 07F59362 		add	r2, r7, #1176
 1159 0526 083A     		subs	r2, r2, #8
 1160 0528 07F5B553 		add	r3, r7, #5792
 1161 052c 03F10C03 		add	r3, r3, #12
 1162 0530 1968     		ldr	r1, [r3]
 1163 0532 0B46     		mov	r3, r1
 1164 0534 5B00     		lsls	r3, r3, #1
 1165 0536 0B44     		add	r3, r3, r1
 1166 0538 9B00     		lsls	r3, r3, #2
 1167 053a 1344     		add	r3, r3, r2
 1168 053c 07F5B352 		add	r2, r7, #5728
 1169 0540 02F11402 		add	r2, r2, #20
 1170 0544 1268     		ldr	r2, [r2]
 1171 0546 1A60     		str	r2, [r3]
 159:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1172              		.loc 1 159 0
 1173 0548 07F59362 		add	r2, r7, #1176
 1174 054c 083A     		subs	r2, r2, #8
 1175 054e 07F5B553 		add	r3, r7, #5792
 1176 0552 03F10C03 		add	r3, r3, #12
 1177 0556 1968     		ldr	r1, [r3]
 1178 0558 0B46     		mov	r3, r1
 1179 055a 5B00     		lsls	r3, r3, #1
 1180 055c 0B44     		add	r3, r3, r1
 1181 055e 9B00     		lsls	r3, r3, #2
 1182 0560 1344     		add	r3, r3, r2
 1183 0562 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 25


 1184 0564 07F5B352 		add	r2, r7, #5728
 1185 0568 02F11002 		add	r2, r2, #16
 1186 056c 1268     		ldr	r2, [r2]
 1187 056e 1A60     		str	r2, [r3]
 160:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1188              		.loc 1 160 0
 1189 0570 07F59362 		add	r2, r7, #1176
 1190 0574 083A     		subs	r2, r2, #8
 1191 0576 07F5B553 		add	r3, r7, #5792
 1192 057a 03F10C03 		add	r3, r3, #12
 1193 057e 1968     		ldr	r1, [r3]
 1194 0580 0B46     		mov	r3, r1
 1195 0582 5B00     		lsls	r3, r3, #1
 1196 0584 0B44     		add	r3, r3, r1
 1197 0586 9B00     		lsls	r3, r3, #2
 1198 0588 1344     		add	r3, r3, r2
 1199 058a 0833     		adds	r3, r3, #8
 1200 058c 07F5B352 		add	r2, r7, #5728
 1201 0590 02F10C02 		add	r2, r2, #12
 1202 0594 1268     		ldr	r2, [r2]
 1203 0596 1A60     		str	r2, [r3]
 161:pathfinding.c ****                         
 162:pathfinding.c ****                         stepNum++;
 1204              		.loc 1 162 0
 1205 0598 07F5B553 		add	r3, r7, #5792
 1206 059c 1B68     		ldr	r3, [r3]
 1207 059e 0133     		adds	r3, r3, #1
 1208 05a0 07F5B552 		add	r2, r7, #5792
 1209 05a4 1360     		str	r3, [r2]
 163:pathfinding.c ****                         pqSize++;
 1210              		.loc 1 163 0
 1211 05a6 07F5B553 		add	r3, r7, #5792
 1212 05aa 03F10C03 		add	r3, r3, #12
 1213 05ae 1B68     		ldr	r3, [r3]
 1214 05b0 0133     		adds	r3, r3, #1
 1215 05b2 07F5B552 		add	r2, r7, #5792
 1216 05b6 02F10C02 		add	r2, r2, #12
 1217 05ba 1360     		str	r3, [r2]
 1218              	.L35:
 1219              	.LBE14:
 1220              	.LBE13:
 147:pathfinding.c ****                 int newRow = row + moves[i].row;
 1221              		.loc 1 147 0 discriminator 2
 1222 05bc 07F5B453 		add	r3, r7, #5760
 1223 05c0 03F11403 		add	r3, r3, #20
 1224 05c4 1B68     		ldr	r3, [r3]
 1225 05c6 0133     		adds	r3, r3, #1
 1226 05c8 07F5B452 		add	r2, r7, #5760
 1227 05cc 02F11402 		add	r2, r2, #20
 1228 05d0 1360     		str	r3, [r2]
 1229              	.L34:
 147:pathfinding.c ****                 int newRow = row + moves[i].row;
 1230              		.loc 1 147 0 is_stmt 0 discriminator 1
 1231 05d2 07F5B453 		add	r3, r7, #5760
 1232 05d6 03F11403 		add	r3, r3, #20
 1233 05da 1B68     		ldr	r3, [r3]
 1234 05dc 032B     		cmp	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 26


 1235 05de 7FF6F8AE 		bls	.L36
 1236              	.L27:
 1237              	.LBE12:
 1238              	.LBE10:
 126:pathfinding.c ****         int idx = 0;
 1239              		.loc 1 126 0 is_stmt 1
 1240 05e2 07F5B553 		add	r3, r7, #5792
 1241 05e6 03F10C03 		add	r3, r3, #12
 1242 05ea 1B68     		ldr	r3, [r3]
 1243 05ec 002B     		cmp	r3, #0
 1244 05ee 3FF702AE 		bgt	.L37
 1245 05f2 00E0     		b	.L33
 1246              	.L43:
 1247              	.LBB15:
 144:pathfinding.c ****             }
 1248              		.loc 1 144 0
 1249 05f4 00BF     		nop
 1250              	.L33:
 1251              	.LBE15:
 164:pathfinding.c ****                     }
 165:pathfinding.c ****                 }
 166:pathfinding.c ****             }
 167:pathfinding.c ****         }
 168:pathfinding.c ****     }
 169:pathfinding.c **** 
 170:pathfinding.c ****     // PATH RECONSTRUCTION
 171:pathfinding.c ****     // initialise maximum distance- will be decremented
 172:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1252              		.loc 1 172 0
 1253 05f6 07F5B653 		add	r3, r7, #5824
 1254 05fa 03F10C03 		add	r3, r3, #12
 1255 05fe 1968     		ldr	r1, [r3]
 1256 0600 07F5B653 		add	r3, r7, #5824
 1257 0604 03F11003 		add	r3, r3, #16
 1258 0608 1868     		ldr	r0, [r3]
 1259 060a 07F13802 		add	r2, r7, #56
 1260 060e 1C3A     		subs	r2, r2, #28
 1261 0610 0B46     		mov	r3, r1
 1262 0612 DB00     		lsls	r3, r3, #3
 1263 0614 0B44     		add	r3, r3, r1
 1264 0616 5B00     		lsls	r3, r3, #1
 1265 0618 0B44     		add	r3, r3, r1
 1266 061a 0344     		add	r3, r3, r0
 1267 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1268 0620 07F5B452 		add	r2, r7, #5760
 1269 0624 02F11002 		add	r2, r2, #16
 1270 0628 1360     		str	r3, [r2]
 173:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1271              		.loc 1 173 0
 1272 062a 3B4A     		ldr	r2, .L44+4
 1273 062c 07F5B453 		add	r3, r7, #5760
 1274 0630 03F11003 		add	r3, r3, #16
 1275 0634 1B68     		ldr	r3, [r3]
 1276 0636 1360     		str	r3, [r2]
 174:pathfinding.c ****     // retsteps can be generated from here
 175:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1277              		.loc 1 175 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 27


 1278 0638 07F5B453 		add	r3, r7, #5760
 1279 063c 03F11003 		add	r3, r3, #16
 1280 0640 1B68     		ldr	r3, [r3]
 1281 0642 DB00     		lsls	r3, r3, #3
 1282 0644 1846     		mov	r0, r3
 1283 0646 FFF7FEFF 		bl	malloc
 1284 064a 0346     		mov	r3, r0
 1285 064c 07F5B352 		add	r2, r7, #5728
 1286 0650 02F10802 		add	r2, r2, #8
 1287 0654 1360     		str	r3, [r2]
 176:pathfinding.c ****     int currentRow = targetlocation.row;
 1288              		.loc 1 176 0
 1289 0656 07F5B653 		add	r3, r7, #5824
 1290 065a 03F10C03 		add	r3, r3, #12
 1291 065e 1B68     		ldr	r3, [r3]
 1292 0660 07F5B452 		add	r2, r7, #5760
 1293 0664 02F10C02 		add	r2, r2, #12
 1294 0668 1360     		str	r3, [r2]
 177:pathfinding.c ****     int currentCol = targetlocation.col;
 1295              		.loc 1 177 0
 1296 066a 07F5B653 		add	r3, r7, #5824
 1297 066e 03F11003 		add	r3, r3, #16
 1298 0672 1B68     		ldr	r3, [r3]
 1299 0674 07F5B452 		add	r2, r7, #5760
 1300 0678 02F10802 		add	r2, r2, #8
 1301 067c 1360     		str	r3, [r2]
 178:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1302              		.loc 1 178 0
 1303 067e 07F5B453 		add	r3, r7, #5760
 1304 0682 03F11003 		add	r3, r3, #16
 1305 0686 1B68     		ldr	r3, [r3]
 1306 0688 03F10053 		add	r3, r3, #536870912
 1307 068c 013B     		subs	r3, r3, #1
 1308 068e DB00     		lsls	r3, r3, #3
 1309 0690 07F5B352 		add	r2, r7, #5728
 1310 0694 02F10802 		add	r2, r2, #8
 1311 0698 1268     		ldr	r2, [r2]
 1312 069a 1344     		add	r3, r3, r2
 1313 069c 07F5B452 		add	r2, r7, #5760
 1314 06a0 02F10C02 		add	r2, r2, #12
 1315 06a4 1268     		ldr	r2, [r2]
 1316 06a6 1A60     		str	r2, [r3]
 179:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1317              		.loc 1 179 0
 1318 06a8 07F5B453 		add	r3, r7, #5760
 1319 06ac 03F11003 		add	r3, r3, #16
 1320 06b0 1B68     		ldr	r3, [r3]
 1321 06b2 03F10053 		add	r3, r3, #536870912
 1322 06b6 013B     		subs	r3, r3, #1
 1323 06b8 DB00     		lsls	r3, r3, #3
 1324 06ba 07F5B352 		add	r2, r7, #5728
 1325 06be 02F10802 		add	r2, r2, #8
 1326 06c2 1268     		ldr	r2, [r2]
 1327 06c4 1344     		add	r3, r3, r2
 1328 06c6 07F5B452 		add	r2, r7, #5760
 1329 06ca 02F10802 		add	r2, r2, #8
 1330 06ce 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 28


 1331 06d0 5A60     		str	r2, [r3, #4]
 180:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1332              		.loc 1 180 0
 1333 06d2 07F5B453 		add	r3, r7, #5760
 1334 06d6 03F10C03 		add	r3, r3, #12
 1335 06da 1B68     		ldr	r3, [r3]
 1336 06dc 4C22     		movs	r2, #76
 1337 06de 02FB03F2 		mul	r2, r2, r3
 1338 06e2 07F11803 		add	r3, r7, #24
 1339 06e6 0C3B     		subs	r3, r3, #12
 1340 06e8 1B68     		ldr	r3, [r3]
 1341 06ea 1344     		add	r3, r3, r2
 1342 06ec 07F5B452 		add	r2, r7, #5760
 1343 06f0 02F10802 		add	r2, r2, #8
 1344 06f4 1268     		ldr	r2, [r2]
 1345 06f6 0921     		movs	r1, #9
 1346 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 181:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 182:pathfinding.c ****     int pathIndex = 0;
 1347              		.loc 1 182 0
 1348 06fc 0023     		movs	r3, #0
 1349 06fe 07F5B452 		add	r2, r7, #5760
 1350 0702 02F10402 		add	r2, r2, #4
 1351 0706 1360     		str	r3, [r2]
 183:pathfinding.c **** 
 184:pathfinding.c ****     while(shortestDist > 0) {    
 1352              		.loc 1 184 0
 1353 0708 F2E0     		b	.L38
 1354              	.L42:
 1355              	.LBB16:
 185:pathfinding.c ****         // make a move, check if valid and is the next step in path
 186:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1356              		.loc 1 186 0
 1357 070a 0023     		movs	r3, #0
 1358 070c 07F5B452 		add	r2, r7, #5760
 1359 0710 1360     		str	r3, [r2]
 1360 0712 E7E0     		b	.L39
 1361              	.L45:
 1362              		.align	2
 1363              	.L44:
 1364 0714 00000000 		.word	moves
 1365 0718 882C0000 		.word	numSteps
 1366              	.L41:
 1367              	.LBB17:
 187:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1368              		.loc 1 187 0
 1369 071c 7D4A     		ldr	r2, .L46
 1370 071e 07F5B453 		add	r3, r7, #5760
 1371 0722 1B68     		ldr	r3, [r3]
 1372 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1373 0728 07F5B453 		add	r3, r7, #5760
 1374 072c 03F10C03 		add	r3, r3, #12
 1375 0730 1B68     		ldr	r3, [r3]
 1376 0732 1344     		add	r3, r3, r2
 1377 0734 07F5B352 		add	r2, r7, #5728
 1378 0738 02F10402 		add	r2, r2, #4
 1379 073c 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 29


 188:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1380              		.loc 1 188 0
 1381 073e 754A     		ldr	r2, .L46
 1382 0740 07F5B453 		add	r3, r7, #5760
 1383 0744 1B68     		ldr	r3, [r3]
 1384 0746 DB00     		lsls	r3, r3, #3
 1385 0748 1344     		add	r3, r3, r2
 1386 074a 5A68     		ldr	r2, [r3, #4]
 1387 074c 07F5B453 		add	r3, r7, #5760
 1388 0750 03F10803 		add	r3, r3, #8
 1389 0754 1B68     		ldr	r3, [r3]
 1390 0756 1344     		add	r3, r3, r2
 1391 0758 07F5B352 		add	r2, r7, #5728
 1392 075c 1360     		str	r3, [r2]
 189:pathfinding.c **** 
 190:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1393              		.loc 1 190 0
 1394 075e 07F11803 		add	r3, r7, #24
 1395 0762 0C3B     		subs	r3, r3, #12
 1396 0764 1B68     		ldr	r3, [r3]
 1397 0766 0093     		str	r3, [sp]
 1398 0768 1323     		movs	r3, #19
 1399 076a 0F22     		movs	r2, #15
 1400 076c 07F5B351 		add	r1, r7, #5728
 1401 0770 0968     		ldr	r1, [r1]
 1402 0772 07F5B350 		add	r0, r7, #5728
 1403 0776 00F10400 		add	r0, r0, #4
 1404 077a 0068     		ldr	r0, [r0]
 1405 077c FFF7FEFF 		bl	isValidMove
 1406 0780 0346     		mov	r3, r0
 1407 0782 002B     		cmp	r3, #0
 1408 0784 00F0A780 		beq	.L40
 1409              		.loc 1 190 0 is_stmt 0 discriminator 1
 1410 0788 07F13802 		add	r2, r7, #56
 1411 078c 1C3A     		subs	r2, r2, #28
 1412 078e 07F5B353 		add	r3, r7, #5728
 1413 0792 03F10403 		add	r3, r3, #4
 1414 0796 1968     		ldr	r1, [r3]
 1415 0798 0B46     		mov	r3, r1
 1416 079a DB00     		lsls	r3, r3, #3
 1417 079c 0B44     		add	r3, r3, r1
 1418 079e 5B00     		lsls	r3, r3, #1
 1419 07a0 0B44     		add	r3, r3, r1
 1420 07a2 07F5B351 		add	r1, r7, #5728
 1421 07a6 0968     		ldr	r1, [r1]
 1422 07a8 0B44     		add	r3, r3, r1
 1423 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1424 07ae 07F5B453 		add	r3, r7, #5760
 1425 07b2 03F11003 		add	r3, r3, #16
 1426 07b6 1B68     		ldr	r3, [r3]
 1427 07b8 013B     		subs	r3, r3, #1
 1428 07ba 9A42     		cmp	r2, r3
 1429 07bc 40F08B80 		bne	.L40
 191:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1430              		.loc 1 191 0 is_stmt 1
 1431 07c0 07F5B353 		add	r3, r7, #5728
 1432 07c4 03F10403 		add	r3, r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 30


 1433 07c8 1B68     		ldr	r3, [r3]
 1434 07ca 4C22     		movs	r2, #76
 1435 07cc 02FB03F2 		mul	r2, r2, r3
 1436 07d0 07F11803 		add	r3, r7, #24
 1437 07d4 0C3B     		subs	r3, r3, #12
 1438 07d6 1B68     		ldr	r3, [r3]
 1439 07d8 1344     		add	r3, r3, r2
 1440 07da 07F5B352 		add	r2, r7, #5728
 1441 07de 1268     		ldr	r2, [r2]
 1442 07e0 0821     		movs	r1, #8
 1443 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 192:pathfinding.c ****                 pathIndex++;
 1444              		.loc 1 192 0
 1445 07e6 07F5B453 		add	r3, r7, #5760
 1446 07ea 03F10403 		add	r3, r3, #4
 1447 07ee 1B68     		ldr	r3, [r3]
 1448 07f0 0133     		adds	r3, r3, #1
 1449 07f2 07F5B452 		add	r2, r7, #5760
 1450 07f6 02F10402 		add	r2, r2, #4
 1451 07fa 1360     		str	r3, [r2]
 193:pathfinding.c ****                 // reverse array somewhere
 194:pathfinding.c **** 
 195:pathfinding.c ****                 shortestDist--; // decrement distance
 1452              		.loc 1 195 0
 1453 07fc 07F5B453 		add	r3, r7, #5760
 1454 0800 03F11003 		add	r3, r3, #16
 1455 0804 1B68     		ldr	r3, [r3]
 1456 0806 013B     		subs	r3, r3, #1
 1457 0808 07F5B452 		add	r2, r7, #5760
 1458 080c 02F11002 		add	r2, r2, #16
 1459 0810 1360     		str	r3, [r2]
 196:pathfinding.c ****                 currentRow = newRow; 
 1460              		.loc 1 196 0
 1461 0812 07F5B353 		add	r3, r7, #5728
 1462 0816 03F10403 		add	r3, r3, #4
 1463 081a 1B68     		ldr	r3, [r3]
 1464 081c 07F5B452 		add	r2, r7, #5760
 1465 0820 02F10C02 		add	r2, r2, #12
 1466 0824 1360     		str	r3, [r2]
 197:pathfinding.c ****                 currentCol = newCol; // change current location
 1467              		.loc 1 197 0
 1468 0826 07F5B353 		add	r3, r7, #5728
 1469 082a 1B68     		ldr	r3, [r3]
 1470 082c 07F5B452 		add	r2, r7, #5760
 1471 0830 02F10802 		add	r2, r2, #8
 1472 0834 1360     		str	r3, [r2]
 198:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1473              		.loc 1 198 0
 1474 0836 07F5B453 		add	r3, r7, #5760
 1475 083a 03F11003 		add	r3, r3, #16
 1476 083e 1B68     		ldr	r3, [r3]
 1477 0840 DB00     		lsls	r3, r3, #3
 1478 0842 07F5B352 		add	r2, r7, #5728
 1479 0846 02F10802 		add	r2, r2, #8
 1480 084a 1268     		ldr	r2, [r2]
 1481 084c 1344     		add	r3, r3, r2
 1482 084e 07F5B452 		add	r2, r7, #5760
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 31


 1483 0852 02F10C02 		add	r2, r2, #12
 1484 0856 1268     		ldr	r2, [r2]
 1485 0858 1A60     		str	r2, [r3]
 199:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1486              		.loc 1 199 0
 1487 085a 07F5B453 		add	r3, r7, #5760
 1488 085e 03F11003 		add	r3, r3, #16
 1489 0862 1B68     		ldr	r3, [r3]
 1490 0864 DB00     		lsls	r3, r3, #3
 1491 0866 07F5B352 		add	r2, r7, #5728
 1492 086a 02F10802 		add	r2, r2, #8
 1493 086e 1268     		ldr	r2, [r2]
 1494 0870 1344     		add	r3, r3, r2
 1495 0872 07F5B452 		add	r2, r7, #5760
 1496 0876 02F10802 		add	r2, r2, #8
 1497 087a 1268     		ldr	r2, [r2]
 1498 087c 5A60     		str	r2, [r3, #4]
 200:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1499              		.loc 1 200 0
 1500 087e 07F11803 		add	r3, r7, #24
 1501 0882 143B     		subs	r3, r3, #20
 1502 0884 1A68     		ldr	r2, [r3]
 1503 0886 07F5B453 		add	r3, r7, #5760
 1504 088a 03F10C03 		add	r3, r3, #12
 1505 088e 1B68     		ldr	r3, [r3]
 1506 0890 9A42     		cmp	r2, r3
 1507 0892 20D1     		bne	.L40
 1508              		.loc 1 200 0 is_stmt 0 discriminator 1
 1509 0894 07F11803 		add	r3, r7, #24
 1510 0898 143B     		subs	r3, r3, #20
 1511 089a 5A68     		ldr	r2, [r3, #4]
 1512 089c 07F5B453 		add	r3, r7, #5760
 1513 08a0 03F10803 		add	r3, r3, #8
 1514 08a4 1B68     		ldr	r3, [r3]
 1515 08a6 9A42     		cmp	r2, r3
 1516 08a8 15D1     		bne	.L40
 201:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1517              		.loc 1 201 0 is_stmt 1
 1518 08aa 07F5B453 		add	r3, r7, #5760
 1519 08ae 03F10C03 		add	r3, r3, #12
 1520 08b2 1B68     		ldr	r3, [r3]
 1521 08b4 4C22     		movs	r2, #76
 1522 08b6 02FB03F2 		mul	r2, r2, r3
 1523 08ba 07F11803 		add	r3, r7, #24
 1524 08be 0C3B     		subs	r3, r3, #12
 1525 08c0 1B68     		ldr	r3, [r3]
 1526 08c2 1344     		add	r3, r3, r2
 1527 08c4 07F5B452 		add	r2, r7, #5760
 1528 08c8 02F10802 		add	r2, r2, #8
 1529 08cc 1268     		ldr	r2, [r2]
 1530 08ce 0221     		movs	r1, #2
 1531 08d0 43F82210 		str	r1, [r3, r2, lsl #2]
 202:pathfinding.c ****                     break;
 1532              		.loc 1 202 0
 1533 08d4 0CE0     		b	.L38
 1534              	.L40:
 1535              	.LBE17:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 32


 186:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1536              		.loc 1 186 0 discriminator 2
 1537 08d6 07F5B453 		add	r3, r7, #5760
 1538 08da 1B68     		ldr	r3, [r3]
 1539 08dc 0133     		adds	r3, r3, #1
 1540 08de 07F5B452 		add	r2, r7, #5760
 1541 08e2 1360     		str	r3, [r2]
 1542              	.L39:
 186:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1543              		.loc 1 186 0 is_stmt 0 discriminator 1
 1544 08e4 07F5B453 		add	r3, r7, #5760
 1545 08e8 1B68     		ldr	r3, [r3]
 1546 08ea 032B     		cmp	r3, #3
 1547 08ec 7FF616AF 		bls	.L41
 1548              	.L38:
 1549              	.LBE16:
 184:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1550              		.loc 1 184 0 is_stmt 1
 1551 08f0 07F5B453 		add	r3, r7, #5760
 1552 08f4 03F11003 		add	r3, r3, #16
 1553 08f8 1B68     		ldr	r3, [r3]
 1554 08fa 002B     		cmp	r3, #0
 1555 08fc 3FF705AF 		bgt	.L42
 203:pathfinding.c ****                 }   
 204:pathfinding.c ****             }
 205:pathfinding.c ****         }
 206:pathfinding.c ****     }
 207:pathfinding.c **** }
 1556              		.loc 1 207 0
 1557 0900 00BF     		nop
 1558 0902 07F5B557 		add	r7, r7, #5792
 1559 0906 1C37     		adds	r7, r7, #28
 1560              		.cfi_def_cfa_offset 20
 1561 0908 BD46     		mov	sp, r7
 1562              		.cfi_def_cfa_register 13
 1563              		@ sp needed
 1564 090a BDE89040 		pop	{r4, r7, lr}
 1565              		.cfi_restore 14
 1566              		.cfi_restore 7
 1567              		.cfi_restore 4
 1568              		.cfi_def_cfa_offset 8
 1569 090e 02B0     		add	sp, sp, #8
 1570              		.cfi_def_cfa_offset 0
 1571 0910 7047     		bx	lr
 1572              	.L47:
 1573 0912 00BF     		.align	2
 1574              	.L46:
 1575 0914 00000000 		.word	moves
 1576              		.cfi_endproc
 1577              	.LFE4:
 1578              		.size	dijkstra, .-dijkstra
 1579              		.global	ignoreR
 1580              		.bss
 1581              		.align	2
 1582              		.type	ignoreR, %object
 1583              		.size	ignoreR, 4
 1584              	ignoreR:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 33


 1585 2c8c 00000000 		.space	4
 1586              		.global	ignoreL
 1587              		.align	2
 1588              		.type	ignoreL, %object
 1589              		.size	ignoreL, 4
 1590              	ignoreL:
 1591 2c90 00000000 		.space	4
 1592              		.global	distanceToTarget
 1593              		.align	2
 1594              		.type	distanceToTarget, %object
 1595              		.size	distanceToTarget, 4
 1596              	distanceToTarget:
 1597 2c94 00000000 		.space	4
 1598              		.section	.text.getPathInstructions,"ax",%progbits
 1599              		.align	2
 1600              		.global	getPathInstructions
 1601              		.thumb
 1602              		.thumb_func
 1603              		.type	getPathInstructions, %function
 1604              	getPathInstructions:
 1605              	.LFB5:
 208:pathfinding.c **** 
 209:pathfinding.c **** // PATHFINDING PROCESSING *====================
 210:pathfinding.c **** 
 211:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 212:pathfinding.c **** int distanceToTarget = 0;
 213:pathfinding.c **** 
 214:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 215:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1606              		.loc 1 215 0
 1607              		.cfi_startproc
 1608              		@ args = 8, pretend = 0, frame = 88
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610 0000 80B5     		push	{r7, lr}
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 7, -8
 1613              		.cfi_offset 14, -4
 1614 0002 96B0     		sub	sp, sp, #88
 1615              		.cfi_def_cfa_offset 96
 1616 0004 00AF     		add	r7, sp, #0
 1617              		.cfi_def_cfa_register 7
 1618 0006 F860     		str	r0, [r7, #12]
 1619 0008 B960     		str	r1, [r7, #8]
 1620 000a 3946     		mov	r1, r7
 1621 000c 81E80C00 		stmia	r1, {r2, r3}
 216:pathfinding.c ****     int currentRow = startLocation.row; 
 1622              		.loc 1 216 0
 1623 0010 3B68     		ldr	r3, [r7]
 1624 0012 7B65     		str	r3, [r7, #84]
 217:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1625              		.loc 1 217 0
 1626 0014 7B68     		ldr	r3, [r7, #4]
 1627 0016 3B65     		str	r3, [r7, #80]
 218:pathfinding.c ****     int listIndex = 0;
 1628              		.loc 1 218 0
 1629 0018 0023     		movs	r3, #0
 1630 001a FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 34


 219:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1631              		.loc 1 219 0
 1632 001c 3B6E     		ldr	r3, [r7, #96]
 1633 001e 7A6E     		ldr	r2, [r7, #100]
 1634 0020 1146     		mov	r1, r2
 1635 0022 1846     		mov	r0, r3
 1636 0024 FFF7FEFF 		bl	getTargetOrientation
 1637 0028 0346     		mov	r3, r0
 1638 002a 7B61     		str	r3, [r7, #20]
 220:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 221:pathfinding.c ****     while(numSteps >= 0) {
 1639              		.loc 1 221 0
 1640 002c 8BE2     		b	.L49
 1641              	.L109:
 1642              	.LBB18:
 222:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1643              		.loc 1 222 0
 1644 002e A64B     		ldr	r3, .L114
 1645 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 0032 3A6D     		ldr	r2, [r7, #80]
 1647 0034 796D     		ldr	r1, [r7, #84]
 1648 0036 1846     		mov	r0, r3
 1649 0038 FFF7FEFF 		bl	checkIgnoreTurn
 223:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1650              		.loc 1 223 0
 1651 003c 7B6D     		ldr	r3, [r7, #84]
 1652 003e 4C22     		movs	r2, #76
 1653 0040 02FB03F3 		mul	r3, r2, r3
 1654 0044 FA68     		ldr	r2, [r7, #12]
 1655 0046 1344     		add	r3, r3, r2
 1656 0048 3A6D     		ldr	r2, [r7, #80]
 1657 004a 0021     		movs	r1, #0
 1658 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 224:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
 1659              		.loc 1 224 0
 1660 0050 9D4B     		ldr	r3, .L114
 1661 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1662 0054 9D4B     		ldr	r3, .L114+4
 1663 0056 1A70     		strb	r2, [r3]
 225:pathfinding.c ****         enum InstructionDirection newDirection;
 226:pathfinding.c ****         int distanceToTarget = 0;
 1664              		.loc 1 226 0
 1665 0058 0023     		movs	r3, #0
 1666 005a 7B64     		str	r3, [r7, #68]
 227:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1667              		.loc 1 227 0
 1668 005c 396D     		ldr	r1, [r7, #80]
 1669 005e 786D     		ldr	r0, [r7, #84]
 1670 0060 FFF7FEFF 		bl	checkPathDirection
 1671 0064 0346     		mov	r3, r0
 1672 0066 3B64     		str	r3, [r7, #64]
 228:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1673              		.loc 1 228 0
 1674 0068 3A6E     		ldr	r2, [r7, #96]
 1675 006a 7B6D     		ldr	r3, [r7, #84]
 1676 006c 9A42     		cmp	r2, r3
 1677 006e 3ED1     		bne	.L50
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 35


 1678              		.loc 1 228 0 is_stmt 0 discriminator 1
 1679 0070 7A6E     		ldr	r2, [r7, #100]
 1680 0072 3B6D     		ldr	r3, [r7, #80]
 1681 0074 9A42     		cmp	r2, r3
 1682 0076 3AD1     		bne	.L50
 229:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1683              		.loc 1 229 0 is_stmt 1
 1684 0078 0523     		movs	r3, #5
 1685 007a 87F84B30 		strb	r3, [r7, #75]
 230:pathfinding.c ****             instructionsList[listIndex].direction = newDirection;
 1686              		.loc 1 230 0
 1687 007e 9449     		ldr	r1, .L114+8
 1688 0080 FA6C     		ldr	r2, [r7, #76]
 1689 0082 1346     		mov	r3, r2
 1690 0084 9B00     		lsls	r3, r3, #2
 1691 0086 1344     		add	r3, r3, r2
 1692 0088 9B00     		lsls	r3, r3, #2
 1693 008a 0B44     		add	r3, r3, r1
 1694 008c 97F84B20 		ldrb	r2, [r7, #75]
 1695 0090 1A70     		strb	r2, [r3]
 231:pathfinding.c ****             instructionsList[listIndex].distanceToTarget = 0;
 1696              		.loc 1 231 0
 1697 0092 8F49     		ldr	r1, .L114+8
 1698 0094 FA6C     		ldr	r2, [r7, #76]
 1699 0096 1346     		mov	r3, r2
 1700 0098 9B00     		lsls	r3, r3, #2
 1701 009a 1344     		add	r3, r3, r2
 1702 009c 9B00     		lsls	r3, r3, #2
 1703 009e 0B44     		add	r3, r3, r1
 1704 00a0 0C33     		adds	r3, r3, #12
 1705 00a2 0022     		movs	r2, #0
 1706 00a4 1A60     		str	r2, [r3]
 232:pathfinding.c ****             instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 1707              		.loc 1 232 0
 1708 00a6 894B     		ldr	r3, .L114+4
 1709 00a8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1710 00aa 8949     		ldr	r1, .L114+8
 1711 00ac FA6C     		ldr	r2, [r7, #76]
 1712 00ae 1346     		mov	r3, r2
 1713 00b0 9B00     		lsls	r3, r3, #2
 1714 00b2 1344     		add	r3, r3, r2
 1715 00b4 9B00     		lsls	r3, r3, #2
 1716 00b6 0B44     		add	r3, r3, r1
 1717 00b8 1033     		adds	r3, r3, #16
 1718 00ba 0246     		mov	r2, r0
 1719 00bc 1A70     		strb	r2, [r3]
 233:pathfinding.c ****             instructionsList[listIndex].ignoreL = 0;
 1720              		.loc 1 233 0
 1721 00be 8449     		ldr	r1, .L114+8
 1722 00c0 FA6C     		ldr	r2, [r7, #76]
 1723 00c2 1346     		mov	r3, r2
 1724 00c4 9B00     		lsls	r3, r3, #2
 1725 00c6 1344     		add	r3, r3, r2
 1726 00c8 9B00     		lsls	r3, r3, #2
 1727 00ca 0B44     		add	r3, r3, r1
 1728 00cc 0433     		adds	r3, r3, #4
 1729 00ce 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 36


 1730 00d0 1A60     		str	r2, [r3]
 234:pathfinding.c ****             instructionsList[listIndex].ignoreR = 0;
 1731              		.loc 1 234 0
 1732 00d2 7F49     		ldr	r1, .L114+8
 1733 00d4 FA6C     		ldr	r2, [r7, #76]
 1734 00d6 1346     		mov	r3, r2
 1735 00d8 9B00     		lsls	r3, r3, #2
 1736 00da 1344     		add	r3, r3, r2
 1737 00dc 9B00     		lsls	r3, r3, #2
 1738 00de 0B44     		add	r3, r3, r1
 1739 00e0 0833     		adds	r3, r3, #8
 1740 00e2 0022     		movs	r2, #0
 1741 00e4 1A60     		str	r2, [r3]
 235:pathfinding.c ****             listIndex++; // returned stop, no need for pathfinding anymore
 1742              		.loc 1 235 0
 1743 00e6 FB6C     		ldr	r3, [r7, #76]
 1744 00e8 0133     		adds	r3, r3, #1
 1745 00ea FB64     		str	r3, [r7, #76]
 236:pathfinding.c ****             break;
 1746              		.loc 1 236 0
 1747 00ec 2FE2     		b	.L51
 1748              	.L50:
 237:pathfinding.c ****         }
 238:pathfinding.c ****         if(instructionsList[listIndex - 1].direction == ForwardUntilTarget && newDirection != StopA
 1749              		.loc 1 238 0
 1750 00ee FB6C     		ldr	r3, [r7, #76]
 1751 00f0 5A1E     		subs	r2, r3, #1
 1752 00f2 7749     		ldr	r1, .L114+8
 1753 00f4 1346     		mov	r3, r2
 1754 00f6 9B00     		lsls	r3, r3, #2
 1755 00f8 1344     		add	r3, r3, r2
 1756 00fa 9B00     		lsls	r3, r3, #2
 1757 00fc 0B44     		add	r3, r3, r1
 1758 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1759 0100 042B     		cmp	r3, #4
 1760 0102 09D1     		bne	.L52
 1761              		.loc 1 238 0 is_stmt 0 discriminator 1
 1762 0104 97F84B30 		ldrb	r3, [r7, #75]	@ zero_extendqisi2
 1763 0108 052B     		cmp	r3, #5
 1764 010a 05D0     		beq	.L52
 239:pathfinding.c ****             currentRow = targetLocation.row;
 1765              		.loc 1 239 0 is_stmt 1
 1766 010c 3B6E     		ldr	r3, [r7, #96]
 1767 010e 7B65     		str	r3, [r7, #84]
 240:pathfinding.c ****             currentCol = targetLocation.col;
 1768              		.loc 1 240 0
 1769 0110 7B6E     		ldr	r3, [r7, #100]
 1770 0112 3B65     		str	r3, [r7, #80]
 241:pathfinding.c ****             nextStep = 5; // next instruction should be stop at target
 1771              		.loc 1 241 0
 1772 0114 0523     		movs	r3, #5
 1773 0116 3B64     		str	r3, [r7, #64]
 1774              	.L52:
 242:pathfinding.c ****         }
 243:pathfinding.c ****         switch (nextStep) {
 1775              		.loc 1 243 0
 1776 0118 3B6C     		ldr	r3, [r7, #64]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 37


 1777 011a 032B     		cmp	r3, #3
 1778 011c 00F2D281 		bhi	.L113
 1779 0120 01A2     		adr	r2, .L55
 1780 0122 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1781 0126 00BF     		.p2align 2
 1782              	.L55:
 1783 0128 39010000 		.word	.L54+1
 1784 012c 11020000 		.word	.L56+1
 1785 0130 05030000 		.word	.L57+1
 1786 0134 E7030000 		.word	.L58+1
 1787              		.p2align 1
 1788              	.L54:
 244:pathfinding.c ****             case 0: // next step is up                
 245:pathfinding.c ****                 currentRobotOrientation = Up;
 1789              		.loc 1 245 0
 1790 0138 634B     		ldr	r3, .L114
 1791 013a 0022     		movs	r2, #0
 1792 013c 1A70     		strb	r2, [r3]
 246:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1793              		.loc 1 246 0
 1794 013e 634B     		ldr	r3, .L114+4
 1795 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 0142 022B     		cmp	r3, #2
 1797 0144 08D1     		bne	.L59
 247:pathfinding.c ****                     newDirection = waitForRightTurn;
 1798              		.loc 1 247 0
 1799 0146 0223     		movs	r3, #2
 1800 0148 87F84B30 		strb	r3, [r7, #75]
 248:pathfinding.c ****                     ignoreL = 0;
 1801              		.loc 1 248 0
 1802 014c 614B     		ldr	r3, .L114+12
 1803 014e 0022     		movs	r2, #0
 1804 0150 1A60     		str	r2, [r3]
 249:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1805              		.loc 1 249 0
 1806 0152 614B     		ldr	r3, .L114+16
 1807 0154 0022     		movs	r2, #0
 1808 0156 1A60     		str	r2, [r3]
 1809              	.L59:
 250:pathfinding.c ****                 } 
 251:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1810              		.loc 1 251 0
 1811 0158 5C4B     		ldr	r3, .L114+4
 1812 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 015c 032B     		cmp	r3, #3
 1814 015e 08D1     		bne	.L60
 252:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1815              		.loc 1 252 0
 1816 0160 0123     		movs	r3, #1
 1817 0162 87F84B30 		strb	r3, [r7, #75]
 253:pathfinding.c ****                     ignoreL = 0;
 1818              		.loc 1 253 0
 1819 0166 5B4B     		ldr	r3, .L114+12
 1820 0168 0022     		movs	r2, #0
 1821 016a 1A60     		str	r2, [r3]
 254:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1822              		.loc 1 254 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 38


 1823 016c 5A4B     		ldr	r3, .L114+16
 1824 016e 0022     		movs	r2, #0
 1825 0170 1A60     		str	r2, [r3]
 1826              	.L60:
 255:pathfinding.c ****                 }
 256:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1827              		.loc 1 256 0
 1828 0172 564B     		ldr	r3, .L114+4
 1829 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1830 0176 002B     		cmp	r3, #0
 1831 0178 3FD1     		bne	.L61
 257:pathfinding.c ****                     // check if we only need to go forward to reach target
 258:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1832              		.loc 1 258 0
 1833 017a 7A69     		ldr	r2, [r7, #20]
 1834 017c 3B6C     		ldr	r3, [r7, #64]
 1835 017e 9A42     		cmp	r2, r3
 1836 0180 38D1     		bne	.L62
 1837              		.loc 1 258 0 is_stmt 0 discriminator 1
 1838 0182 7A6E     		ldr	r2, [r7, #100]
 1839 0184 3B6D     		ldr	r3, [r7, #80]
 1840 0186 9A42     		cmp	r2, r3
 1841 0188 34D1     		bne	.L62
 1842              	.LBB19:
 259:pathfinding.c ****                         int atTarget = 1;
 1843              		.loc 1 259 0 is_stmt 1
 1844 018a 0123     		movs	r3, #1
 1845 018c FB63     		str	r3, [r7, #60]
 1846              	.LBB20:
 260:pathfinding.c ****                         // check if we only need to go forward to reach target
 261:pathfinding.c ****                         for(int i = 1; i <= currentRow-targetLocation.row; i++) {
 1847              		.loc 1 261 0
 1848 018e 0123     		movs	r3, #1
 1849 0190 BB63     		str	r3, [r7, #56]
 1850 0192 1EE0     		b	.L63
 1851              	.L67:
 262:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 263:pathfinding.c ****                             if(map[currentRow - i][currentCol] == 1) {
 1852              		.loc 1 263 0
 1853 0194 7A6D     		ldr	r2, [r7, #84]
 1854 0196 BB6B     		ldr	r3, [r7, #56]
 1855 0198 D31A     		subs	r3, r2, r3
 1856 019a 1A46     		mov	r2, r3
 1857 019c 4C23     		movs	r3, #76
 1858 019e 03FB02F3 		mul	r3, r3, r2
 1859 01a2 FA68     		ldr	r2, [r7, #12]
 1860 01a4 1344     		add	r3, r3, r2
 1861 01a6 3A6D     		ldr	r2, [r7, #80]
 1862 01a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1863 01ac 012B     		cmp	r3, #1
 1864 01ae 02D1     		bne	.L64
 264:pathfinding.c ****                                 atTarget = 0;
 1865              		.loc 1 264 0
 1866 01b0 0023     		movs	r3, #0
 1867 01b2 FB63     		str	r3, [r7, #60]
 265:pathfinding.c ****                                 break;
 1868              		.loc 1 265 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 39


 1869 01b4 13E0     		b	.L65
 1870              	.L64:
 266:pathfinding.c ****                             }
 267:pathfinding.c ****                             if(currentRow - i == targetLocation.row) {
 1871              		.loc 1 267 0
 1872 01b6 7A6D     		ldr	r2, [r7, #84]
 1873 01b8 BB6B     		ldr	r3, [r7, #56]
 1874 01ba D21A     		subs	r2, r2, r3
 1875 01bc 3B6E     		ldr	r3, [r7, #96]
 1876 01be 9A42     		cmp	r2, r3
 1877 01c0 04D1     		bne	.L66
 268:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 1878              		.loc 1 268 0
 1879 01c2 0123     		movs	r3, #1
 1880 01c4 FB63     		str	r3, [r7, #60]
 269:pathfinding.c ****                                 distanceToTarget = i; 
 1881              		.loc 1 269 0
 1882 01c6 BB6B     		ldr	r3, [r7, #56]
 1883 01c8 7B64     		str	r3, [r7, #68]
 270:pathfinding.c ****                                 break;
 1884              		.loc 1 270 0
 1885 01ca 08E0     		b	.L65
 1886              	.L66:
 261:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1887              		.loc 1 261 0 discriminator 2
 1888 01cc BB6B     		ldr	r3, [r7, #56]
 1889 01ce 0133     		adds	r3, r3, #1
 1890 01d0 BB63     		str	r3, [r7, #56]
 1891              	.L63:
 261:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1892              		.loc 1 261 0 is_stmt 0 discriminator 1
 1893 01d2 3B6E     		ldr	r3, [r7, #96]
 1894 01d4 7A6D     		ldr	r2, [r7, #84]
 1895 01d6 D21A     		subs	r2, r2, r3
 1896 01d8 BB6B     		ldr	r3, [r7, #56]
 1897 01da 9A42     		cmp	r2, r3
 1898 01dc DADA     		bge	.L67
 1899              	.L65:
 1900              	.LBE20:
 271:pathfinding.c ****                             }
 272:pathfinding.c ****                         }
 273:pathfinding.c ****                         if(atTarget) {
 1901              		.loc 1 273 0 is_stmt 1
 1902 01de FB6B     		ldr	r3, [r7, #60]
 1903 01e0 002B     		cmp	r3, #0
 1904 01e2 03D0     		beq	.L68
 274:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 1905              		.loc 1 274 0
 1906 01e4 0423     		movs	r3, #4
 1907 01e6 87F84B30 		strb	r3, [r7, #75]
 1908              	.LBE19:
 258:pathfinding.c ****                         int atTarget = 1;
 1909              		.loc 1 258 0
 1910 01ea 06E0     		b	.L61
 1911              	.L68:
 1912              	.LBB21:
 275:pathfinding.c ****                         } else {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 40


 276:pathfinding.c ****                             newDirection = GoForward;
 1913              		.loc 1 276 0
 1914 01ec 0023     		movs	r3, #0
 1915 01ee 87F84B30 		strb	r3, [r7, #75]
 1916              	.LBE21:
 258:pathfinding.c ****                         int atTarget = 1;
 1917              		.loc 1 258 0
 1918 01f2 02E0     		b	.L61
 1919              	.L62:
 277:pathfinding.c ****                         }
 278:pathfinding.c ****                     } else {
 279:pathfinding.c ****                         newDirection = GoForward;
 1920              		.loc 1 279 0
 1921 01f4 0023     		movs	r3, #0
 1922 01f6 87F84B30 		strb	r3, [r7, #75]
 1923              	.L61:
 280:pathfinding.c ****                     }
 281:pathfinding.c ****                 }
 282:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1924              		.loc 1 282 0
 1925 01fa 344B     		ldr	r3, .L114+4
 1926 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1927 01fe 012B     		cmp	r3, #1
 1928 0200 02D1     		bne	.L70
 283:pathfinding.c ****                     newDirection = uTurn;
 1929              		.loc 1 283 0
 1930 0202 0323     		movs	r3, #3
 1931 0204 87F84B30 		strb	r3, [r7, #75]
 1932              	.L70:
 284:pathfinding.c ****                 }
 285:pathfinding.c ****                 currentRow--; // jump to new location
 1933              		.loc 1 285 0
 1934 0208 7B6D     		ldr	r3, [r7, #84]
 1935 020a 013B     		subs	r3, r3, #1
 1936 020c 7B65     		str	r3, [r7, #84]
 286:pathfinding.c ****                 break;
 1937              		.loc 1 286 0
 1938 020e 5AE1     		b	.L71
 1939              	.L56:
 287:pathfinding.c ****             case 1: // next step is down
 288:pathfinding.c ****                 currentRobotOrientation = Down;
 1940              		.loc 1 288 0
 1941 0210 2D4B     		ldr	r3, .L114
 1942 0212 0122     		movs	r2, #1
 1943 0214 1A70     		strb	r2, [r3]
 289:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1944              		.loc 1 289 0
 1945 0216 2D4B     		ldr	r3, .L114+4
 1946 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1947 021a 032B     		cmp	r3, #3
 1948 021c 08D1     		bne	.L72
 290:pathfinding.c ****                     newDirection = waitForRightTurn;
 1949              		.loc 1 290 0
 1950 021e 0223     		movs	r3, #2
 1951 0220 87F84B30 		strb	r3, [r7, #75]
 291:pathfinding.c ****                     ignoreL = 0;
 1952              		.loc 1 291 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 41


 1953 0224 2B4B     		ldr	r3, .L114+12
 1954 0226 0022     		movs	r2, #0
 1955 0228 1A60     		str	r2, [r3]
 292:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1956              		.loc 1 292 0
 1957 022a 2B4B     		ldr	r3, .L114+16
 1958 022c 0022     		movs	r2, #0
 1959 022e 1A60     		str	r2, [r3]
 1960              	.L72:
 293:pathfinding.c ****                 } 
 294:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1961              		.loc 1 294 0
 1962 0230 264B     		ldr	r3, .L114+4
 1963 0232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1964 0234 022B     		cmp	r3, #2
 1965 0236 08D1     		bne	.L73
 295:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1966              		.loc 1 295 0
 1967 0238 0123     		movs	r3, #1
 1968 023a 87F84B30 		strb	r3, [r7, #75]
 296:pathfinding.c ****                     ignoreL = 0;
 1969              		.loc 1 296 0
 1970 023e 254B     		ldr	r3, .L114+12
 1971 0240 0022     		movs	r2, #0
 1972 0242 1A60     		str	r2, [r3]
 297:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1973              		.loc 1 297 0
 1974 0244 244B     		ldr	r3, .L114+16
 1975 0246 0022     		movs	r2, #0
 1976 0248 1A60     		str	r2, [r3]
 1977              	.L73:
 298:pathfinding.c ****                 }
 299:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1978              		.loc 1 299 0
 1979 024a 204B     		ldr	r3, .L114+4
 1980 024c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1981 024e 012B     		cmp	r3, #1
 1982 0250 47D1     		bne	.L74
 300:pathfinding.c ****                    if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1983              		.loc 1 300 0
 1984 0252 7A69     		ldr	r2, [r7, #20]
 1985 0254 3B6C     		ldr	r3, [r7, #64]
 1986 0256 9A42     		cmp	r2, r3
 1987 0258 40D1     		bne	.L75
 1988              		.loc 1 300 0 is_stmt 0 discriminator 1
 1989 025a 7A6E     		ldr	r2, [r7, #100]
 1990 025c 3B6D     		ldr	r3, [r7, #80]
 1991 025e 9A42     		cmp	r2, r3
 1992 0260 3CD1     		bne	.L75
 1993              	.LBB22:
 301:pathfinding.c ****                         int atTarget = 1;
 1994              		.loc 1 301 0 is_stmt 1
 1995 0262 0123     		movs	r3, #1
 1996 0264 7B63     		str	r3, [r7, #52]
 1997              	.LBB23:
 302:pathfinding.c ****                         // check if we only need to go forward to reach target
 303:pathfinding.c ****                         for(int i = 1; i <= targetLocation.row; i++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 42


 1998              		.loc 1 303 0
 1999 0266 0123     		movs	r3, #1
 2000 0268 3B63     		str	r3, [r7, #48]
 2001 026a 1EE0     		b	.L76
 2002              	.L80:
 304:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 305:pathfinding.c ****                             if(map[currentRow + i][currentCol] == 1) {
 2003              		.loc 1 305 0
 2004 026c 7A6D     		ldr	r2, [r7, #84]
 2005 026e 3B6B     		ldr	r3, [r7, #48]
 2006 0270 1344     		add	r3, r3, r2
 2007 0272 1A46     		mov	r2, r3
 2008 0274 4C23     		movs	r3, #76
 2009 0276 03FB02F3 		mul	r3, r3, r2
 2010 027a FA68     		ldr	r2, [r7, #12]
 2011 027c 1344     		add	r3, r3, r2
 2012 027e 3A6D     		ldr	r2, [r7, #80]
 2013 0280 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2014 0284 012B     		cmp	r3, #1
 2015 0286 02D1     		bne	.L77
 306:pathfinding.c ****                                 atTarget = 0;
 2016              		.loc 1 306 0
 2017 0288 0023     		movs	r3, #0
 2018 028a 7B63     		str	r3, [r7, #52]
 307:pathfinding.c ****                                 break;
 2019              		.loc 1 307 0
 2020 028c 11E0     		b	.L78
 2021              	.L77:
 308:pathfinding.c ****                             }
 309:pathfinding.c ****                             if(currentRow + i == targetLocation.row) {
 2022              		.loc 1 309 0
 2023 028e 7A6D     		ldr	r2, [r7, #84]
 2024 0290 3B6B     		ldr	r3, [r7, #48]
 2025 0292 1A44     		add	r2, r2, r3
 2026 0294 3B6E     		ldr	r3, [r7, #96]
 2027 0296 9A42     		cmp	r2, r3
 2028 0298 04D1     		bne	.L79
 310:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 2029              		.loc 1 310 0
 2030 029a 0123     		movs	r3, #1
 2031 029c 7B63     		str	r3, [r7, #52]
 311:pathfinding.c ****                                 distanceToTarget = i;
 2032              		.loc 1 311 0
 2033 029e 3B6B     		ldr	r3, [r7, #48]
 2034 02a0 7B64     		str	r3, [r7, #68]
 312:pathfinding.c ****                                 break;
 2035              		.loc 1 312 0
 2036 02a2 06E0     		b	.L78
 2037              	.L79:
 303:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2038              		.loc 1 303 0 discriminator 2
 2039 02a4 3B6B     		ldr	r3, [r7, #48]
 2040 02a6 0133     		adds	r3, r3, #1
 2041 02a8 3B63     		str	r3, [r7, #48]
 2042              	.L76:
 303:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2043              		.loc 1 303 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 43


 2044 02aa 3A6E     		ldr	r2, [r7, #96]
 2045 02ac 3B6B     		ldr	r3, [r7, #48]
 2046 02ae 9A42     		cmp	r2, r3
 2047 02b0 DCDA     		bge	.L80
 2048              	.L78:
 2049              	.LBE23:
 313:pathfinding.c ****                             }
 314:pathfinding.c ****                         }
 315:pathfinding.c ****                         if(atTarget) {
 2050              		.loc 1 315 0 is_stmt 1
 2051 02b2 7B6B     		ldr	r3, [r7, #52]
 2052 02b4 002B     		cmp	r3, #0
 2053 02b6 03D0     		beq	.L81
 316:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2054              		.loc 1 316 0
 2055 02b8 0423     		movs	r3, #4
 2056 02ba 87F84B30 		strb	r3, [r7, #75]
 2057              	.LBE22:
 300:pathfinding.c ****                         int atTarget = 1;
 2058              		.loc 1 300 0
 2059 02be 10E0     		b	.L74
 2060              	.L81:
 2061              	.LBB24:
 317:pathfinding.c ****                         } else {
 318:pathfinding.c ****                             newDirection = GoForward;
 2062              		.loc 1 318 0
 2063 02c0 0023     		movs	r3, #0
 2064 02c2 87F84B30 		strb	r3, [r7, #75]
 2065              	.LBE24:
 300:pathfinding.c ****                         int atTarget = 1;
 2066              		.loc 1 300 0
 2067 02c6 0CE0     		b	.L74
 2068              	.L115:
 2069              		.align	2
 2070              	.L114:
 2071 02c8 00000000 		.word	currentRobotOrientation
 2072 02cc 00000000 		.word	previousRobotOrientation
 2073 02d0 00000000 		.word	instructionsList
 2074 02d4 00000000 		.word	ignoreL
 2075 02d8 00000000 		.word	ignoreR
 2076              	.L75:
 319:pathfinding.c ****                         }
 320:pathfinding.c ****                     }      
 321:pathfinding.c ****                     else {
 322:pathfinding.c ****                         newDirection = GoForward;
 2077              		.loc 1 322 0
 2078 02dc 0023     		movs	r3, #0
 2079 02de 87F84B30 		strb	r3, [r7, #75]
 2080              	.L74:
 323:pathfinding.c ****                     }
 324:pathfinding.c ****                 }
 325:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2081              		.loc 1 325 0
 2082 02e2 9D4B     		ldr	r3, .L116
 2083 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2084 02e6 002B     		cmp	r3, #0
 2085 02e8 08D1     		bne	.L83
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 44


 326:pathfinding.c ****                     newDirection = uTurn;
 2086              		.loc 1 326 0
 2087 02ea 0323     		movs	r3, #3
 2088 02ec 87F84B30 		strb	r3, [r7, #75]
 327:pathfinding.c ****                     ignoreL = 0;
 2089              		.loc 1 327 0
 2090 02f0 9A4B     		ldr	r3, .L116+4
 2091 02f2 0022     		movs	r2, #0
 2092 02f4 1A60     		str	r2, [r3]
 328:pathfinding.c ****                     ignoreR = 0;
 2093              		.loc 1 328 0
 2094 02f6 9A4B     		ldr	r3, .L116+8
 2095 02f8 0022     		movs	r2, #0
 2096 02fa 1A60     		str	r2, [r3]
 2097              	.L83:
 329:pathfinding.c ****                 }
 330:pathfinding.c ****                 currentRow++;
 2098              		.loc 1 330 0
 2099 02fc 7B6D     		ldr	r3, [r7, #84]
 2100 02fe 0133     		adds	r3, r3, #1
 2101 0300 7B65     		str	r3, [r7, #84]
 331:pathfinding.c ****                 break;
 2102              		.loc 1 331 0
 2103 0302 E0E0     		b	.L71
 2104              	.L57:
 332:pathfinding.c ****             case 2: // next step is left
 333:pathfinding.c ****                 currentRobotOrientation = Left;
 2105              		.loc 1 333 0
 2106 0304 974B     		ldr	r3, .L116+12
 2107 0306 0222     		movs	r2, #2
 2108 0308 1A70     		strb	r2, [r3]
 334:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2109              		.loc 1 334 0
 2110 030a 934B     		ldr	r3, .L116
 2111 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2112 030e 002B     		cmp	r3, #0
 2113 0310 08D1     		bne	.L84
 335:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2114              		.loc 1 335 0
 2115 0312 0123     		movs	r3, #1
 2116 0314 87F84B30 		strb	r3, [r7, #75]
 336:pathfinding.c ****                     ignoreL = 0;
 2117              		.loc 1 336 0
 2118 0318 904B     		ldr	r3, .L116+4
 2119 031a 0022     		movs	r2, #0
 2120 031c 1A60     		str	r2, [r3]
 337:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2121              		.loc 1 337 0
 2122 031e 904B     		ldr	r3, .L116+8
 2123 0320 0022     		movs	r2, #0
 2124 0322 1A60     		str	r2, [r3]
 2125              	.L84:
 338:pathfinding.c ****                 } 
 339:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2126              		.loc 1 339 0
 2127 0324 8C4B     		ldr	r3, .L116
 2128 0326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 45


 2129 0328 012B     		cmp	r3, #1
 2130 032a 08D1     		bne	.L85
 340:pathfinding.c ****                     newDirection = waitForRightTurn;
 2131              		.loc 1 340 0
 2132 032c 0223     		movs	r3, #2
 2133 032e 87F84B30 		strb	r3, [r7, #75]
 341:pathfinding.c ****                     ignoreL = 0;
 2134              		.loc 1 341 0
 2135 0332 8A4B     		ldr	r3, .L116+4
 2136 0334 0022     		movs	r2, #0
 2137 0336 1A60     		str	r2, [r3]
 342:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2138              		.loc 1 342 0
 2139 0338 894B     		ldr	r3, .L116+8
 2140 033a 0022     		movs	r2, #0
 2141 033c 1A60     		str	r2, [r3]
 2142              	.L85:
 343:pathfinding.c ****                 }
 344:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2143              		.loc 1 344 0
 2144 033e 864B     		ldr	r3, .L116
 2145 0340 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2146 0342 022B     		cmp	r3, #2
 2147 0344 3ED1     		bne	.L86
 345:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2148              		.loc 1 345 0
 2149 0346 7A69     		ldr	r2, [r7, #20]
 2150 0348 3B6C     		ldr	r3, [r7, #64]
 2151 034a 9A42     		cmp	r2, r3
 2152 034c 37D1     		bne	.L87
 2153              		.loc 1 345 0 is_stmt 0 discriminator 1
 2154 034e 3A6E     		ldr	r2, [r7, #96]
 2155 0350 7B6D     		ldr	r3, [r7, #84]
 2156 0352 9A42     		cmp	r2, r3
 2157 0354 33D1     		bne	.L87
 2158              	.LBB25:
 346:pathfinding.c ****                         int atTarget = 1;
 2159              		.loc 1 346 0 is_stmt 1
 2160 0356 0123     		movs	r3, #1
 2161 0358 FB62     		str	r3, [r7, #44]
 2162              	.LBB26:
 347:pathfinding.c ****                         // check if we only need to go forward to reach target
 348:pathfinding.c ****                         for(int i = 1; i <= currentCol-targetLocation.col; i++) {
 2163              		.loc 1 348 0
 2164 035a 0123     		movs	r3, #1
 2165 035c BB62     		str	r3, [r7, #40]
 2166 035e 1DE0     		b	.L88
 2167              	.L92:
 349:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 350:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2168              		.loc 1 350 0
 2169 0360 7B6D     		ldr	r3, [r7, #84]
 2170 0362 4C22     		movs	r2, #76
 2171 0364 02FB03F3 		mul	r3, r2, r3
 2172 0368 FA68     		ldr	r2, [r7, #12]
 2173 036a 1344     		add	r3, r3, r2
 2174 036c 396D     		ldr	r1, [r7, #80]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 46


 2175 036e BA6A     		ldr	r2, [r7, #40]
 2176 0370 8A1A     		subs	r2, r1, r2
 2177 0372 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2178 0376 012B     		cmp	r3, #1
 2179 0378 02D1     		bne	.L89
 351:pathfinding.c ****                                 atTarget = 0;
 2180              		.loc 1 351 0
 2181 037a 0023     		movs	r3, #0
 2182 037c FB62     		str	r3, [r7, #44]
 352:pathfinding.c ****                                 break;
 2183              		.loc 1 352 0
 2184 037e 13E0     		b	.L90
 2185              	.L89:
 353:pathfinding.c ****                             }
 354:pathfinding.c ****                             if(currentCol - i == targetLocation.col) {
 2186              		.loc 1 354 0
 2187 0380 3A6D     		ldr	r2, [r7, #80]
 2188 0382 BB6A     		ldr	r3, [r7, #40]
 2189 0384 D21A     		subs	r2, r2, r3
 2190 0386 7B6E     		ldr	r3, [r7, #100]
 2191 0388 9A42     		cmp	r2, r3
 2192 038a 04D1     		bne	.L91
 355:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2193              		.loc 1 355 0
 2194 038c 0123     		movs	r3, #1
 2195 038e FB62     		str	r3, [r7, #44]
 356:pathfinding.c ****                                 distanceToTarget = i;
 2196              		.loc 1 356 0
 2197 0390 BB6A     		ldr	r3, [r7, #40]
 2198 0392 7B64     		str	r3, [r7, #68]
 357:pathfinding.c ****                                 break;
 2199              		.loc 1 357 0
 2200 0394 08E0     		b	.L90
 2201              	.L91:
 348:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2202              		.loc 1 348 0 discriminator 2
 2203 0396 BB6A     		ldr	r3, [r7, #40]
 2204 0398 0133     		adds	r3, r3, #1
 2205 039a BB62     		str	r3, [r7, #40]
 2206              	.L88:
 348:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2207              		.loc 1 348 0 is_stmt 0 discriminator 1
 2208 039c 7B6E     		ldr	r3, [r7, #100]
 2209 039e 3A6D     		ldr	r2, [r7, #80]
 2210 03a0 D21A     		subs	r2, r2, r3
 2211 03a2 BB6A     		ldr	r3, [r7, #40]
 2212 03a4 9A42     		cmp	r2, r3
 2213 03a6 DBDA     		bge	.L92
 2214              	.L90:
 2215              	.LBE26:
 358:pathfinding.c ****                             }
 359:pathfinding.c ****                         }
 360:pathfinding.c ****                         if(atTarget) {
 2216              		.loc 1 360 0 is_stmt 1
 2217 03a8 FB6A     		ldr	r3, [r7, #44]
 2218 03aa 002B     		cmp	r3, #0
 2219 03ac 03D0     		beq	.L93
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 47


 361:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2220              		.loc 1 361 0
 2221 03ae 0423     		movs	r3, #4
 2222 03b0 87F84B30 		strb	r3, [r7, #75]
 2223              	.LBE25:
 345:pathfinding.c ****                         int atTarget = 1;
 2224              		.loc 1 345 0
 2225 03b4 06E0     		b	.L86
 2226              	.L93:
 2227              	.LBB27:
 362:pathfinding.c ****                         } else {
 363:pathfinding.c ****                             newDirection = GoForward;
 2228              		.loc 1 363 0
 2229 03b6 0023     		movs	r3, #0
 2230 03b8 87F84B30 		strb	r3, [r7, #75]
 2231              	.LBE27:
 345:pathfinding.c ****                         int atTarget = 1;
 2232              		.loc 1 345 0
 2233 03bc 02E0     		b	.L86
 2234              	.L87:
 364:pathfinding.c ****                         }
 365:pathfinding.c ****                     } else {
 366:pathfinding.c ****                         newDirection = GoForward;
 2235              		.loc 1 366 0
 2236 03be 0023     		movs	r3, #0
 2237 03c0 87F84B30 		strb	r3, [r7, #75]
 2238              	.L86:
 367:pathfinding.c ****                     }
 368:pathfinding.c ****                 }
 369:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2239              		.loc 1 369 0
 2240 03c4 644B     		ldr	r3, .L116
 2241 03c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2242 03c8 032B     		cmp	r3, #3
 2243 03ca 08D1     		bne	.L95
 370:pathfinding.c ****                     newDirection = uTurn;
 2244              		.loc 1 370 0
 2245 03cc 0323     		movs	r3, #3
 2246 03ce 87F84B30 		strb	r3, [r7, #75]
 371:pathfinding.c ****                     ignoreL = 0;
 2247              		.loc 1 371 0
 2248 03d2 624B     		ldr	r3, .L116+4
 2249 03d4 0022     		movs	r2, #0
 2250 03d6 1A60     		str	r2, [r3]
 372:pathfinding.c ****                     ignoreR = 0;
 2251              		.loc 1 372 0
 2252 03d8 614B     		ldr	r3, .L116+8
 2253 03da 0022     		movs	r2, #0
 2254 03dc 1A60     		str	r2, [r3]
 2255              	.L95:
 373:pathfinding.c ****                 }
 374:pathfinding.c ****                 currentCol--;
 2256              		.loc 1 374 0
 2257 03de 3B6D     		ldr	r3, [r7, #80]
 2258 03e0 013B     		subs	r3, r3, #1
 2259 03e2 3B65     		str	r3, [r7, #80]
 375:pathfinding.c ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 48


 2260              		.loc 1 375 0
 2261 03e4 6FE0     		b	.L71
 2262              	.L58:
 376:pathfinding.c ****             case 3: // next step is right
 377:pathfinding.c ****                 currentRobotOrientation = Right;
 2263              		.loc 1 377 0
 2264 03e6 5F4B     		ldr	r3, .L116+12
 2265 03e8 0322     		movs	r2, #3
 2266 03ea 1A70     		strb	r2, [r3]
 378:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2267              		.loc 1 378 0
 2268 03ec 5A4B     		ldr	r3, .L116
 2269 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2270 03f0 002B     		cmp	r3, #0
 2271 03f2 08D1     		bne	.L96
 379:pathfinding.c ****                     newDirection = waitForRightTurn;
 2272              		.loc 1 379 0
 2273 03f4 0223     		movs	r3, #2
 2274 03f6 87F84B30 		strb	r3, [r7, #75]
 380:pathfinding.c ****                     ignoreL = 0;
 2275              		.loc 1 380 0
 2276 03fa 584B     		ldr	r3, .L116+4
 2277 03fc 0022     		movs	r2, #0
 2278 03fe 1A60     		str	r2, [r3]
 381:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2279              		.loc 1 381 0
 2280 0400 574B     		ldr	r3, .L116+8
 2281 0402 0022     		movs	r2, #0
 2282 0404 1A60     		str	r2, [r3]
 2283              	.L96:
 382:pathfinding.c ****                 }
 383:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2284              		.loc 1 383 0
 2285 0406 544B     		ldr	r3, .L116
 2286 0408 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2287 040a 012B     		cmp	r3, #1
 2288 040c 08D1     		bne	.L97
 384:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2289              		.loc 1 384 0
 2290 040e 0123     		movs	r3, #1
 2291 0410 87F84B30 		strb	r3, [r7, #75]
 385:pathfinding.c ****                     ignoreL = 0;
 2292              		.loc 1 385 0
 2293 0414 514B     		ldr	r3, .L116+4
 2294 0416 0022     		movs	r2, #0
 2295 0418 1A60     		str	r2, [r3]
 386:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2296              		.loc 1 386 0
 2297 041a 514B     		ldr	r3, .L116+8
 2298 041c 0022     		movs	r2, #0
 2299 041e 1A60     		str	r2, [r3]
 2300              	.L97:
 387:pathfinding.c ****                 }
 388:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2301              		.loc 1 388 0
 2302 0420 4D4B     		ldr	r3, .L116
 2303 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 49


 2304 0424 032B     		cmp	r3, #3
 2305 0426 3CD1     		bne	.L98
 389:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2306              		.loc 1 389 0
 2307 0428 7A69     		ldr	r2, [r7, #20]
 2308 042a 3B6C     		ldr	r3, [r7, #64]
 2309 042c 9A42     		cmp	r2, r3
 2310 042e 35D1     		bne	.L99
 2311              		.loc 1 389 0 is_stmt 0 discriminator 1
 2312 0430 3A6E     		ldr	r2, [r7, #96]
 2313 0432 7B6D     		ldr	r3, [r7, #84]
 2314 0434 9A42     		cmp	r2, r3
 2315 0436 31D1     		bne	.L99
 2316              	.LBB28:
 390:pathfinding.c ****                         int atTarget = 1;
 2317              		.loc 1 390 0 is_stmt 1
 2318 0438 0123     		movs	r3, #1
 2319 043a 7B62     		str	r3, [r7, #36]
 2320              	.LBB29:
 391:pathfinding.c ****                         // check if we only need to go forward to reach target
 392:pathfinding.c ****                         for(int i = 1; i <= targetLocation.col; i++) {
 2321              		.loc 1 392 0
 2322 043c 0123     		movs	r3, #1
 2323 043e 3B62     		str	r3, [r7, #32]
 2324 0440 1DE0     		b	.L100
 2325              	.L104:
 393:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 394:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 1) {
 2326              		.loc 1 394 0
 2327 0442 7B6D     		ldr	r3, [r7, #84]
 2328 0444 4C22     		movs	r2, #76
 2329 0446 02FB03F3 		mul	r3, r2, r3
 2330 044a FA68     		ldr	r2, [r7, #12]
 2331 044c 1344     		add	r3, r3, r2
 2332 044e 396D     		ldr	r1, [r7, #80]
 2333 0450 3A6A     		ldr	r2, [r7, #32]
 2334 0452 0A44     		add	r2, r2, r1
 2335 0454 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2336 0458 012B     		cmp	r3, #1
 2337 045a 02D1     		bne	.L101
 395:pathfinding.c ****                                 atTarget = 0;
 2338              		.loc 1 395 0
 2339 045c 0023     		movs	r3, #0
 2340 045e 7B62     		str	r3, [r7, #36]
 396:pathfinding.c ****                                 break;
 2341              		.loc 1 396 0
 2342 0460 11E0     		b	.L102
 2343              	.L101:
 397:pathfinding.c ****                             }
 398:pathfinding.c ****                             if(currentCol + i == targetLocation.col) {
 2344              		.loc 1 398 0
 2345 0462 3A6D     		ldr	r2, [r7, #80]
 2346 0464 3B6A     		ldr	r3, [r7, #32]
 2347 0466 1A44     		add	r2, r2, r3
 2348 0468 7B6E     		ldr	r3, [r7, #100]
 2349 046a 9A42     		cmp	r2, r3
 2350 046c 04D1     		bne	.L103
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 50


 399:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2351              		.loc 1 399 0
 2352 046e 0123     		movs	r3, #1
 2353 0470 7B62     		str	r3, [r7, #36]
 400:pathfinding.c ****                                 distanceToTarget = i;
 2354              		.loc 1 400 0
 2355 0472 3B6A     		ldr	r3, [r7, #32]
 2356 0474 7B64     		str	r3, [r7, #68]
 401:pathfinding.c ****                                 break;
 2357              		.loc 1 401 0
 2358 0476 06E0     		b	.L102
 2359              	.L103:
 392:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2360              		.loc 1 392 0 discriminator 2
 2361 0478 3B6A     		ldr	r3, [r7, #32]
 2362 047a 0133     		adds	r3, r3, #1
 2363 047c 3B62     		str	r3, [r7, #32]
 2364              	.L100:
 392:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2365              		.loc 1 392 0 is_stmt 0 discriminator 1
 2366 047e 7A6E     		ldr	r2, [r7, #100]
 2367 0480 3B6A     		ldr	r3, [r7, #32]
 2368 0482 9A42     		cmp	r2, r3
 2369 0484 DDDA     		bge	.L104
 2370              	.L102:
 2371              	.LBE29:
 402:pathfinding.c ****                             }
 403:pathfinding.c ****                         }
 404:pathfinding.c ****                         if(atTarget) {
 2372              		.loc 1 404 0 is_stmt 1
 2373 0486 7B6A     		ldr	r3, [r7, #36]
 2374 0488 002B     		cmp	r3, #0
 2375 048a 03D0     		beq	.L105
 405:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2376              		.loc 1 405 0
 2377 048c 0423     		movs	r3, #4
 2378 048e 87F84B30 		strb	r3, [r7, #75]
 2379              	.LBE28:
 389:pathfinding.c ****                         int atTarget = 1;
 2380              		.loc 1 389 0
 2381 0492 06E0     		b	.L98
 2382              	.L105:
 2383              	.LBB30:
 406:pathfinding.c ****                         } else {
 407:pathfinding.c ****                             newDirection = GoForward;
 2384              		.loc 1 407 0
 2385 0494 0023     		movs	r3, #0
 2386 0496 87F84B30 		strb	r3, [r7, #75]
 2387              	.LBE30:
 389:pathfinding.c ****                         int atTarget = 1;
 2388              		.loc 1 389 0
 2389 049a 02E0     		b	.L98
 2390              	.L99:
 408:pathfinding.c ****                         }
 409:pathfinding.c ****                     } else {
 410:pathfinding.c ****                         newDirection = GoForward;
 2391              		.loc 1 410 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 51


 2392 049c 0023     		movs	r3, #0
 2393 049e 87F84B30 		strb	r3, [r7, #75]
 2394              	.L98:
 411:pathfinding.c ****                     }
 412:pathfinding.c ****                 }
 413:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2395              		.loc 1 413 0
 2396 04a2 2D4B     		ldr	r3, .L116
 2397 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2398 04a6 022B     		cmp	r3, #2
 2399 04a8 08D1     		bne	.L107
 414:pathfinding.c ****                     newDirection = uTurn;
 2400              		.loc 1 414 0
 2401 04aa 0323     		movs	r3, #3
 2402 04ac 87F84B30 		strb	r3, [r7, #75]
 415:pathfinding.c ****                     ignoreL = 0;
 2403              		.loc 1 415 0
 2404 04b0 2A4B     		ldr	r3, .L116+4
 2405 04b2 0022     		movs	r2, #0
 2406 04b4 1A60     		str	r2, [r3]
 416:pathfinding.c ****                     ignoreR = 0;
 2407              		.loc 1 416 0
 2408 04b6 2A4B     		ldr	r3, .L116+8
 2409 04b8 0022     		movs	r2, #0
 2410 04ba 1A60     		str	r2, [r3]
 2411              	.L107:
 417:pathfinding.c ****                 }
 418:pathfinding.c ****                 currentCol++;
 2412              		.loc 1 418 0
 2413 04bc 3B6D     		ldr	r3, [r7, #80]
 2414 04be 0133     		adds	r3, r3, #1
 2415 04c0 3B65     		str	r3, [r7, #80]
 419:pathfinding.c ****                 break;
 2416              		.loc 1 419 0
 2417 04c2 00E0     		b	.L71
 2418              	.L113:
 420:pathfinding.c ****             default:
 421:pathfinding.c ****                 break;
 2419              		.loc 1 421 0
 2420 04c4 00BF     		nop
 2421              	.L71:
 422:pathfinding.c ****         }
 423:pathfinding.c ****         if(nextStep != 5) {
 2422              		.loc 1 423 0
 2423 04c6 3B6C     		ldr	r3, [r7, #64]
 2424 04c8 052B     		cmp	r3, #5
 2425 04ca 39D0     		beq	.L108
 424:pathfinding.c ****             instructionsList[listIndex].direction = newDirection;
 2426              		.loc 1 424 0
 2427 04cc 2649     		ldr	r1, .L116+16
 2428 04ce FA6C     		ldr	r2, [r7, #76]
 2429 04d0 1346     		mov	r3, r2
 2430 04d2 9B00     		lsls	r3, r3, #2
 2431 04d4 1344     		add	r3, r3, r2
 2432 04d6 9B00     		lsls	r3, r3, #2
 2433 04d8 0B44     		add	r3, r3, r1
 2434 04da 97F84B20 		ldrb	r2, [r7, #75]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 52


 2435 04de 1A70     		strb	r2, [r3]
 425:pathfinding.c ****             instructionsList[listIndex].ignoreL = ignoreL;
 2436              		.loc 1 425 0
 2437 04e0 1E4B     		ldr	r3, .L116+4
 2438 04e2 1968     		ldr	r1, [r3]
 2439 04e4 2048     		ldr	r0, .L116+16
 2440 04e6 FA6C     		ldr	r2, [r7, #76]
 2441 04e8 1346     		mov	r3, r2
 2442 04ea 9B00     		lsls	r3, r3, #2
 2443 04ec 1344     		add	r3, r3, r2
 2444 04ee 9B00     		lsls	r3, r3, #2
 2445 04f0 0344     		add	r3, r3, r0
 2446 04f2 0433     		adds	r3, r3, #4
 2447 04f4 1960     		str	r1, [r3]
 426:pathfinding.c ****             instructionsList[listIndex].ignoreR = ignoreR;
 2448              		.loc 1 426 0
 2449 04f6 1A4B     		ldr	r3, .L116+8
 2450 04f8 1968     		ldr	r1, [r3]
 2451 04fa 1B48     		ldr	r0, .L116+16
 2452 04fc FA6C     		ldr	r2, [r7, #76]
 2453 04fe 1346     		mov	r3, r2
 2454 0500 9B00     		lsls	r3, r3, #2
 2455 0502 1344     		add	r3, r3, r2
 2456 0504 9B00     		lsls	r3, r3, #2
 2457 0506 0344     		add	r3, r3, r0
 2458 0508 0833     		adds	r3, r3, #8
 2459 050a 1960     		str	r1, [r3]
 427:pathfinding.c ****             instructionsList[listIndex].distanceToTarget = distanceToTarget + 1;
 2460              		.loc 1 427 0
 2461 050c 7B6C     		ldr	r3, [r7, #68]
 2462 050e 591C     		adds	r1, r3, #1
 2463 0510 1548     		ldr	r0, .L116+16
 2464 0512 FA6C     		ldr	r2, [r7, #76]
 2465 0514 1346     		mov	r3, r2
 2466 0516 9B00     		lsls	r3, r3, #2
 2467 0518 1344     		add	r3, r3, r2
 2468 051a 9B00     		lsls	r3, r3, #2
 2469 051c 0344     		add	r3, r3, r0
 2470 051e 0C33     		adds	r3, r3, #12
 2471 0520 1960     		str	r1, [r3]
 428:pathfinding.c ****             instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 2472              		.loc 1 428 0
 2473 0522 0D4B     		ldr	r3, .L116
 2474 0524 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2475 0526 1049     		ldr	r1, .L116+16
 2476 0528 FA6C     		ldr	r2, [r7, #76]
 2477 052a 1346     		mov	r3, r2
 2478 052c 9B00     		lsls	r3, r3, #2
 2479 052e 1344     		add	r3, r3, r2
 2480 0530 9B00     		lsls	r3, r3, #2
 2481 0532 0B44     		add	r3, r3, r1
 2482 0534 1033     		adds	r3, r3, #16
 2483 0536 0246     		mov	r2, r0
 2484 0538 1A70     		strb	r2, [r3]
 429:pathfinding.c ****             listIndex++;
 2485              		.loc 1 429 0
 2486 053a FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 53


 2487 053c 0133     		adds	r3, r3, #1
 2488 053e FB64     		str	r3, [r7, #76]
 2489              	.L108:
 430:pathfinding.c ****         }
 431:pathfinding.c ****         numSteps--;
 2490              		.loc 1 431 0
 2491 0540 BB68     		ldr	r3, [r7, #8]
 2492 0542 013B     		subs	r3, r3, #1
 2493 0544 BB60     		str	r3, [r7, #8]
 2494              	.L49:
 2495              	.LBE18:
 221:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2496              		.loc 1 221 0
 2497 0546 BB68     		ldr	r3, [r7, #8]
 2498 0548 002B     		cmp	r3, #0
 2499 054a BFF670AD 		bge	.L109
 2500              	.L51:
 432:pathfinding.c ****     }
 433:pathfinding.c ****     // process list, remove repeated forward outputs
 434:pathfinding.c ****     int j = 0;
 2501              		.loc 1 434 0
 2502 054e 0023     		movs	r3, #0
 2503 0550 FB61     		str	r3, [r7, #28]
 2504              	.LBB31:
 435:pathfinding.c ****     // remove repeated forwards
 436:pathfinding.c ****         for(int i = 0; i < listIndex; i ++) {
 2505              		.loc 1 436 0
 2506 0552 0023     		movs	r3, #0
 2507 0554 BB61     		str	r3, [r7, #24]
 2508 0556 7CE0     		b	.L110
 2509              	.L117:
 2510              		.align	2
 2511              	.L116:
 2512 0558 00000000 		.word	previousRobotOrientation
 2513 055c 00000000 		.word	ignoreL
 2514 0560 00000000 		.word	ignoreR
 2515 0564 00000000 		.word	currentRobotOrientation
 2516 0568 00000000 		.word	instructionsList
 2517              	.L112:
 437:pathfinding.c ****             if(instructionsList[i].direction != instructionsList[i+1].direction) {
 2518              		.loc 1 437 0
 2519 056c 3D49     		ldr	r1, .L118
 2520 056e BA69     		ldr	r2, [r7, #24]
 2521 0570 1346     		mov	r3, r2
 2522 0572 9B00     		lsls	r3, r3, #2
 2523 0574 1344     		add	r3, r3, r2
 2524 0576 9B00     		lsls	r3, r3, #2
 2525 0578 0B44     		add	r3, r3, r1
 2526 057a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2527 057c BB69     		ldr	r3, [r7, #24]
 2528 057e 5A1C     		adds	r2, r3, #1
 2529 0580 3848     		ldr	r0, .L118
 2530 0582 1346     		mov	r3, r2
 2531 0584 9B00     		lsls	r3, r3, #2
 2532 0586 1344     		add	r3, r3, r2
 2533 0588 9B00     		lsls	r3, r3, #2
 2534 058a 0344     		add	r3, r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 54


 2535 058c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2536 058e 9942     		cmp	r1, r3
 2537 0590 5CD0     		beq	.L111
 438:pathfinding.c ****                 finalInstructionList[j].direction = instructionsList[i].direction;
 2538              		.loc 1 438 0
 2539 0592 3449     		ldr	r1, .L118
 2540 0594 BA69     		ldr	r2, [r7, #24]
 2541 0596 1346     		mov	r3, r2
 2542 0598 9B00     		lsls	r3, r3, #2
 2543 059a 1344     		add	r3, r3, r2
 2544 059c 9B00     		lsls	r3, r3, #2
 2545 059e 0B44     		add	r3, r3, r1
 2546 05a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2547 05a2 3149     		ldr	r1, .L118+4
 2548 05a4 FA69     		ldr	r2, [r7, #28]
 2549 05a6 1346     		mov	r3, r2
 2550 05a8 9B00     		lsls	r3, r3, #2
 2551 05aa 1344     		add	r3, r3, r2
 2552 05ac 9B00     		lsls	r3, r3, #2
 2553 05ae 0B44     		add	r3, r3, r1
 2554 05b0 0246     		mov	r2, r0
 2555 05b2 1A70     		strb	r2, [r3]
 439:pathfinding.c ****                 finalInstructionList[j].ignoreL = instructionsList[i].ignoreL;
 2556              		.loc 1 439 0
 2557 05b4 2B49     		ldr	r1, .L118
 2558 05b6 BA69     		ldr	r2, [r7, #24]
 2559 05b8 1346     		mov	r3, r2
 2560 05ba 9B00     		lsls	r3, r3, #2
 2561 05bc 1344     		add	r3, r3, r2
 2562 05be 9B00     		lsls	r3, r3, #2
 2563 05c0 0B44     		add	r3, r3, r1
 2564 05c2 0433     		adds	r3, r3, #4
 2565 05c4 1968     		ldr	r1, [r3]
 2566 05c6 2848     		ldr	r0, .L118+4
 2567 05c8 FA69     		ldr	r2, [r7, #28]
 2568 05ca 1346     		mov	r3, r2
 2569 05cc 9B00     		lsls	r3, r3, #2
 2570 05ce 1344     		add	r3, r3, r2
 2571 05d0 9B00     		lsls	r3, r3, #2
 2572 05d2 0344     		add	r3, r3, r0
 2573 05d4 0433     		adds	r3, r3, #4
 2574 05d6 1960     		str	r1, [r3]
 440:pathfinding.c ****                 finalInstructionList[j].ignoreR = instructionsList[i].ignoreR; // skip all the repe
 2575              		.loc 1 440 0
 2576 05d8 2249     		ldr	r1, .L118
 2577 05da BA69     		ldr	r2, [r7, #24]
 2578 05dc 1346     		mov	r3, r2
 2579 05de 9B00     		lsls	r3, r3, #2
 2580 05e0 1344     		add	r3, r3, r2
 2581 05e2 9B00     		lsls	r3, r3, #2
 2582 05e4 0B44     		add	r3, r3, r1
 2583 05e6 0833     		adds	r3, r3, #8
 2584 05e8 1968     		ldr	r1, [r3]
 2585 05ea 1F48     		ldr	r0, .L118+4
 2586 05ec FA69     		ldr	r2, [r7, #28]
 2587 05ee 1346     		mov	r3, r2
 2588 05f0 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 55


 2589 05f2 1344     		add	r3, r3, r2
 2590 05f4 9B00     		lsls	r3, r3, #2
 2591 05f6 0344     		add	r3, r3, r0
 2592 05f8 0833     		adds	r3, r3, #8
 2593 05fa 1960     		str	r1, [r3]
 441:pathfinding.c ****                 finalInstructionList[j].expectedOrientation = instructionsList[i].expectedOrientati
 2594              		.loc 1 441 0
 2595 05fc 1949     		ldr	r1, .L118
 2596 05fe BA69     		ldr	r2, [r7, #24]
 2597 0600 1346     		mov	r3, r2
 2598 0602 9B00     		lsls	r3, r3, #2
 2599 0604 1344     		add	r3, r3, r2
 2600 0606 9B00     		lsls	r3, r3, #2
 2601 0608 0B44     		add	r3, r3, r1
 2602 060a 1033     		adds	r3, r3, #16
 2603 060c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2604 060e 1649     		ldr	r1, .L118+4
 2605 0610 FA69     		ldr	r2, [r7, #28]
 2606 0612 1346     		mov	r3, r2
 2607 0614 9B00     		lsls	r3, r3, #2
 2608 0616 1344     		add	r3, r3, r2
 2609 0618 9B00     		lsls	r3, r3, #2
 2610 061a 0B44     		add	r3, r3, r1
 2611 061c 1033     		adds	r3, r3, #16
 2612 061e 0246     		mov	r2, r0
 2613 0620 1A70     		strb	r2, [r3]
 442:pathfinding.c ****                 finalInstructionList[j].distanceToTarget = instructionsList[i].distanceToTarget;
 2614              		.loc 1 442 0
 2615 0622 1049     		ldr	r1, .L118
 2616 0624 BA69     		ldr	r2, [r7, #24]
 2617 0626 1346     		mov	r3, r2
 2618 0628 9B00     		lsls	r3, r3, #2
 2619 062a 1344     		add	r3, r3, r2
 2620 062c 9B00     		lsls	r3, r3, #2
 2621 062e 0B44     		add	r3, r3, r1
 2622 0630 0C33     		adds	r3, r3, #12
 2623 0632 1968     		ldr	r1, [r3]
 2624 0634 0C48     		ldr	r0, .L118+4
 2625 0636 FA69     		ldr	r2, [r7, #28]
 2626 0638 1346     		mov	r3, r2
 2627 063a 9B00     		lsls	r3, r3, #2
 2628 063c 1344     		add	r3, r3, r2
 2629 063e 9B00     		lsls	r3, r3, #2
 2630 0640 0344     		add	r3, r3, r0
 2631 0642 0C33     		adds	r3, r3, #12
 2632 0644 1960     		str	r1, [r3]
 443:pathfinding.c ****                 /*if(instructionsList[listIndex-1].direction == StopAtTarget) {
 444:pathfinding.c ****                     break; // break after 1 StopAtTarget
 445:pathfinding.c ****                 }*/
 446:pathfinding.c ****                 j++; // move to next element in finalInstructionList
 2633              		.loc 1 446 0
 2634 0646 FB69     		ldr	r3, [r7, #28]
 2635 0648 0133     		adds	r3, r3, #1
 2636 064a FB61     		str	r3, [r7, #28]
 2637              	.L111:
 436:pathfinding.c ****             if(instructionsList[i].direction != instructionsList[i+1].direction) {
 2638              		.loc 1 436 0 discriminator 2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 56


 2639 064c BB69     		ldr	r3, [r7, #24]
 2640 064e 0133     		adds	r3, r3, #1
 2641 0650 BB61     		str	r3, [r7, #24]
 2642              	.L110:
 436:pathfinding.c ****             if(instructionsList[i].direction != instructionsList[i+1].direction) {
 2643              		.loc 1 436 0 is_stmt 0 discriminator 1
 2644 0652 BA69     		ldr	r2, [r7, #24]
 2645 0654 FB6C     		ldr	r3, [r7, #76]
 2646 0656 9A42     		cmp	r2, r3
 2647 0658 88DB     		blt	.L112
 2648              	.LBE31:
 447:pathfinding.c ****             }
 448:pathfinding.c ****     }
 449:pathfinding.c **** }
 2649              		.loc 1 449 0 is_stmt 1
 2650 065a 00BF     		nop
 2651 065c 5837     		adds	r7, r7, #88
 2652              		.cfi_def_cfa_offset 8
 2653 065e BD46     		mov	sp, r7
 2654              		.cfi_def_cfa_register 13
 2655              		@ sp needed
 2656 0660 80BD     		pop	{r7, pc}
 2657              	.L119:
 2658 0662 00BF     		.align	2
 2659              	.L118:
 2660 0664 00000000 		.word	instructionsList
 2661 0668 44160000 		.word	finalInstructionList
 2662              		.cfi_endproc
 2663              	.LFE5:
 2664              		.size	getPathInstructions, .-getPathInstructions
 2665              		.section	.text.checkPathDirection,"ax",%progbits
 2666              		.align	2
 2667              		.global	checkPathDirection
 2668              		.thumb
 2669              		.thumb_func
 2670              		.type	checkPathDirection, %function
 2671              	checkPathDirection:
 2672              	.LFB6:
 450:pathfinding.c **** 
 451:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2673              		.loc 1 451 0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 8
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
 2678 0000 80B4     		push	{r7}
 2679              		.cfi_def_cfa_offset 4
 2680              		.cfi_offset 7, -4
 2681 0002 83B0     		sub	sp, sp, #12
 2682              		.cfi_def_cfa_offset 16
 2683 0004 00AF     		add	r7, sp, #0
 2684              		.cfi_def_cfa_register 7
 2685 0006 7860     		str	r0, [r7, #4]
 2686 0008 3960     		str	r1, [r7]
 452:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 453:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2687              		.loc 1 453 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 57


 2688 000a 7B68     		ldr	r3, [r7, #4]
 2689 000c 5A1E     		subs	r2, r3, #1
 2690 000e 3E49     		ldr	r1, .L130
 2691 0010 1346     		mov	r3, r2
 2692 0012 DB00     		lsls	r3, r3, #3
 2693 0014 1344     		add	r3, r3, r2
 2694 0016 5B00     		lsls	r3, r3, #1
 2695 0018 1344     		add	r3, r3, r2
 2696 001a 3A68     		ldr	r2, [r7]
 2697 001c 1344     		add	r3, r3, r2
 2698 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2699 0022 082B     		cmp	r3, #8
 2700 0024 0DD0     		beq	.L121
 2701              		.loc 1 453 0 is_stmt 0 discriminator 1
 2702 0026 7B68     		ldr	r3, [r7, #4]
 2703 0028 5A1E     		subs	r2, r3, #1
 2704 002a 3749     		ldr	r1, .L130
 2705 002c 1346     		mov	r3, r2
 2706 002e DB00     		lsls	r3, r3, #3
 2707 0030 1344     		add	r3, r3, r2
 2708 0032 5B00     		lsls	r3, r3, #1
 2709 0034 1344     		add	r3, r3, r2
 2710 0036 3A68     		ldr	r2, [r7]
 2711 0038 1344     		add	r3, r3, r2
 2712 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2713 003e 092B     		cmp	r3, #9
 2714 0040 01D1     		bne	.L122
 2715              	.L121:
 454:pathfinding.c ****         return 0; // up 
 2716              		.loc 1 454 0 is_stmt 1
 2717 0042 0023     		movs	r3, #0
 2718 0044 5AE0     		b	.L123
 2719              	.L122:
 455:pathfinding.c ****     }
 456:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2720              		.loc 1 456 0
 2721 0046 7B68     		ldr	r3, [r7, #4]
 2722 0048 5A1C     		adds	r2, r3, #1
 2723 004a 2F49     		ldr	r1, .L130
 2724 004c 1346     		mov	r3, r2
 2725 004e DB00     		lsls	r3, r3, #3
 2726 0050 1344     		add	r3, r3, r2
 2727 0052 5B00     		lsls	r3, r3, #1
 2728 0054 1344     		add	r3, r3, r2
 2729 0056 3A68     		ldr	r2, [r7]
 2730 0058 1344     		add	r3, r3, r2
 2731 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2732 005e 082B     		cmp	r3, #8
 2733 0060 0DD0     		beq	.L124
 2734              		.loc 1 456 0 is_stmt 0 discriminator 1
 2735 0062 7B68     		ldr	r3, [r7, #4]
 2736 0064 5A1C     		adds	r2, r3, #1
 2737 0066 2849     		ldr	r1, .L130
 2738 0068 1346     		mov	r3, r2
 2739 006a DB00     		lsls	r3, r3, #3
 2740 006c 1344     		add	r3, r3, r2
 2741 006e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 58


 2742 0070 1344     		add	r3, r3, r2
 2743 0072 3A68     		ldr	r2, [r7]
 2744 0074 1344     		add	r3, r3, r2
 2745 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2746 007a 092B     		cmp	r3, #9
 2747 007c 01D1     		bne	.L125
 2748              	.L124:
 457:pathfinding.c ****         return 1; // down
 2749              		.loc 1 457 0 is_stmt 1
 2750 007e 0123     		movs	r3, #1
 2751 0080 3CE0     		b	.L123
 2752              	.L125:
 458:pathfinding.c ****     }
 459:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2753              		.loc 1 459 0
 2754 0082 3B68     		ldr	r3, [r7]
 2755 0084 591E     		subs	r1, r3, #1
 2756 0086 2048     		ldr	r0, .L130
 2757 0088 7A68     		ldr	r2, [r7, #4]
 2758 008a 1346     		mov	r3, r2
 2759 008c DB00     		lsls	r3, r3, #3
 2760 008e 1344     		add	r3, r3, r2
 2761 0090 5B00     		lsls	r3, r3, #1
 2762 0092 1344     		add	r3, r3, r2
 2763 0094 0B44     		add	r3, r3, r1
 2764 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2765 009a 082B     		cmp	r3, #8
 2766 009c 0DD0     		beq	.L126
 2767              		.loc 1 459 0 is_stmt 0 discriminator 1
 2768 009e 3B68     		ldr	r3, [r7]
 2769 00a0 591E     		subs	r1, r3, #1
 2770 00a2 1948     		ldr	r0, .L130
 2771 00a4 7A68     		ldr	r2, [r7, #4]
 2772 00a6 1346     		mov	r3, r2
 2773 00a8 DB00     		lsls	r3, r3, #3
 2774 00aa 1344     		add	r3, r3, r2
 2775 00ac 5B00     		lsls	r3, r3, #1
 2776 00ae 1344     		add	r3, r3, r2
 2777 00b0 0B44     		add	r3, r3, r1
 2778 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2779 00b6 092B     		cmp	r3, #9
 2780 00b8 01D1     		bne	.L127
 2781              	.L126:
 460:pathfinding.c ****         return 2; // left
 2782              		.loc 1 460 0 is_stmt 1
 2783 00ba 0223     		movs	r3, #2
 2784 00bc 1EE0     		b	.L123
 2785              	.L127:
 461:pathfinding.c ****     }
 462:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2786              		.loc 1 462 0
 2787 00be 3B68     		ldr	r3, [r7]
 2788 00c0 591C     		adds	r1, r3, #1
 2789 00c2 1148     		ldr	r0, .L130
 2790 00c4 7A68     		ldr	r2, [r7, #4]
 2791 00c6 1346     		mov	r3, r2
 2792 00c8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 59


 2793 00ca 1344     		add	r3, r3, r2
 2794 00cc 5B00     		lsls	r3, r3, #1
 2795 00ce 1344     		add	r3, r3, r2
 2796 00d0 0B44     		add	r3, r3, r1
 2797 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2798 00d6 082B     		cmp	r3, #8
 2799 00d8 0DD0     		beq	.L128
 2800              		.loc 1 462 0 is_stmt 0 discriminator 1
 2801 00da 3B68     		ldr	r3, [r7]
 2802 00dc 591C     		adds	r1, r3, #1
 2803 00de 0A48     		ldr	r0, .L130
 2804 00e0 7A68     		ldr	r2, [r7, #4]
 2805 00e2 1346     		mov	r3, r2
 2806 00e4 DB00     		lsls	r3, r3, #3
 2807 00e6 1344     		add	r3, r3, r2
 2808 00e8 5B00     		lsls	r3, r3, #1
 2809 00ea 1344     		add	r3, r3, r2
 2810 00ec 0B44     		add	r3, r3, r1
 2811 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2812 00f2 092B     		cmp	r3, #9
 2813 00f4 01D1     		bne	.L129
 2814              	.L128:
 463:pathfinding.c ****         return 3; // right
 2815              		.loc 1 463 0 is_stmt 1
 2816 00f6 0323     		movs	r3, #3
 2817 00f8 00E0     		b	.L123
 2818              	.L129:
 464:pathfinding.c ****     }
 465:pathfinding.c ****     return 5; // default- will never reach this
 2819              		.loc 1 465 0
 2820 00fa 0523     		movs	r3, #5
 2821              	.L123:
 466:pathfinding.c **** }
 2822              		.loc 1 466 0
 2823 00fc 1846     		mov	r0, r3
 2824 00fe 0C37     		adds	r7, r7, #12
 2825              		.cfi_def_cfa_offset 4
 2826 0100 BD46     		mov	sp, r7
 2827              		.cfi_def_cfa_register 13
 2828              		@ sp needed
 2829 0102 80BC     		pop	{r7}
 2830              		.cfi_restore 7
 2831              		.cfi_def_cfa_offset 0
 2832 0104 7047     		bx	lr
 2833              	.L131:
 2834 0106 00BF     		.align	2
 2835              	.L130:
 2836 0108 00000000 		.word	map
 2837              		.cfi_endproc
 2838              	.LFE6:
 2839              		.size	checkPathDirection, .-checkPathDirection
 2840              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2841              		.align	2
 2842              		.global	checkIgnoreTurn
 2843              		.thumb
 2844              		.thumb_func
 2845              		.type	checkIgnoreTurn, %function
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 60


 2846              	checkIgnoreTurn:
 2847              	.LFB7:
 467:pathfinding.c **** 
 468:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2848              		.loc 1 468 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 16
 2851              		@ frame_needed = 1, uses_anonymous_args = 0
 2852              		@ link register save eliminated.
 2853 0000 80B4     		push	{r7}
 2854              		.cfi_def_cfa_offset 4
 2855              		.cfi_offset 7, -4
 2856 0002 85B0     		sub	sp, sp, #20
 2857              		.cfi_def_cfa_offset 24
 2858 0004 00AF     		add	r7, sp, #0
 2859              		.cfi_def_cfa_register 7
 2860 0006 0346     		mov	r3, r0
 2861 0008 B960     		str	r1, [r7, #8]
 2862 000a 7A60     		str	r2, [r7, #4]
 2863 000c FB73     		strb	r3, [r7, #15]
 469:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 470:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2864              		.loc 1 470 0
 2865 000e BB68     		ldr	r3, [r7, #8]
 2866 0010 5A1E     		subs	r2, r3, #1
 2867 0012 4149     		ldr	r1, .L150
 2868 0014 1346     		mov	r3, r2
 2869 0016 DB00     		lsls	r3, r3, #3
 2870 0018 1344     		add	r3, r3, r2
 2871 001a 5B00     		lsls	r3, r3, #1
 2872 001c 1344     		add	r3, r3, r2
 2873 001e 7A68     		ldr	r2, [r7, #4]
 2874 0020 1344     		add	r3, r3, r2
 2875 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2876 0026 002B     		cmp	r3, #0
 2877 0028 11D1     		bne	.L133
 471:pathfinding.c ****         switch (robotOrientation) {
 2878              		.loc 1 471 0
 2879 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2880 002c 022B     		cmp	r3, #2
 2881 002e 02D0     		beq	.L135
 2882 0030 032B     		cmp	r3, #3
 2883 0032 06D0     		beq	.L136
 472:pathfinding.c ****             case Left:
 473:pathfinding.c ****                 ignoreR++;
 474:pathfinding.c ****                 break;
 475:pathfinding.c ****             case Right:
 476:pathfinding.c ****                 ignoreL++;
 477:pathfinding.c ****                 break;
 478:pathfinding.c ****             default:
 479:pathfinding.c ****                 break; // ignore when going up and down
 2884              		.loc 1 479 0
 2885 0034 0BE0     		b	.L133
 2886              	.L135:
 473:pathfinding.c ****                 break;
 2887              		.loc 1 473 0
 2888 0036 394B     		ldr	r3, .L150+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 61


 2889 0038 1B68     		ldr	r3, [r3]
 2890 003a 0133     		adds	r3, r3, #1
 2891 003c 374A     		ldr	r2, .L150+4
 2892 003e 1360     		str	r3, [r2]
 474:pathfinding.c ****             case Right:
 2893              		.loc 1 474 0
 2894 0040 05E0     		b	.L133
 2895              	.L136:
 476:pathfinding.c ****                 break;
 2896              		.loc 1 476 0
 2897 0042 374B     		ldr	r3, .L150+8
 2898 0044 1B68     		ldr	r3, [r3]
 2899 0046 0133     		adds	r3, r3, #1
 2900 0048 354A     		ldr	r2, .L150+8
 2901 004a 1360     		str	r3, [r2]
 477:pathfinding.c ****             default:
 2902              		.loc 1 477 0
 2903 004c 00BF     		nop
 2904              	.L133:
 480:pathfinding.c ****         }
 481:pathfinding.c ****     }
 482:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2905              		.loc 1 482 0
 2906 004e BB68     		ldr	r3, [r7, #8]
 2907 0050 5A1C     		adds	r2, r3, #1
 2908 0052 3149     		ldr	r1, .L150
 2909 0054 1346     		mov	r3, r2
 2910 0056 DB00     		lsls	r3, r3, #3
 2911 0058 1344     		add	r3, r3, r2
 2912 005a 5B00     		lsls	r3, r3, #1
 2913 005c 1344     		add	r3, r3, r2
 2914 005e 7A68     		ldr	r2, [r7, #4]
 2915 0060 1344     		add	r3, r3, r2
 2916 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2917 0066 002B     		cmp	r3, #0
 2918 0068 11D1     		bne	.L137
 483:pathfinding.c ****         switch (robotOrientation) {
 2919              		.loc 1 483 0
 2920 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2921 006c 022B     		cmp	r3, #2
 2922 006e 02D0     		beq	.L139
 2923 0070 032B     		cmp	r3, #3
 2924 0072 06D0     		beq	.L140
 484:pathfinding.c ****             case Left:
 485:pathfinding.c ****                 ignoreL++;
 486:pathfinding.c ****                 break;
 487:pathfinding.c ****             case Right:
 488:pathfinding.c ****                 ignoreR++;
 489:pathfinding.c ****                 break;
 490:pathfinding.c ****             default:
 491:pathfinding.c ****                 break;
 2925              		.loc 1 491 0
 2926 0074 0BE0     		b	.L137
 2927              	.L139:
 485:pathfinding.c ****                 break;
 2928              		.loc 1 485 0
 2929 0076 2A4B     		ldr	r3, .L150+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 62


 2930 0078 1B68     		ldr	r3, [r3]
 2931 007a 0133     		adds	r3, r3, #1
 2932 007c 284A     		ldr	r2, .L150+8
 2933 007e 1360     		str	r3, [r2]
 486:pathfinding.c ****             case Right:
 2934              		.loc 1 486 0
 2935 0080 05E0     		b	.L137
 2936              	.L140:
 488:pathfinding.c ****                 break;
 2937              		.loc 1 488 0
 2938 0082 264B     		ldr	r3, .L150+4
 2939 0084 1B68     		ldr	r3, [r3]
 2940 0086 0133     		adds	r3, r3, #1
 2941 0088 244A     		ldr	r2, .L150+4
 2942 008a 1360     		str	r3, [r2]
 489:pathfinding.c ****             default:
 2943              		.loc 1 489 0
 2944 008c 00BF     		nop
 2945              	.L137:
 492:pathfinding.c ****         }
 493:pathfinding.c ****     }
 494:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2946              		.loc 1 494 0
 2947 008e 7B68     		ldr	r3, [r7, #4]
 2948 0090 591E     		subs	r1, r3, #1
 2949 0092 2148     		ldr	r0, .L150
 2950 0094 BA68     		ldr	r2, [r7, #8]
 2951 0096 1346     		mov	r3, r2
 2952 0098 DB00     		lsls	r3, r3, #3
 2953 009a 1344     		add	r3, r3, r2
 2954 009c 5B00     		lsls	r3, r3, #1
 2955 009e 1344     		add	r3, r3, r2
 2956 00a0 0B44     		add	r3, r3, r1
 2957 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2958 00a6 002B     		cmp	r3, #0
 2959 00a8 11D1     		bne	.L141
 495:pathfinding.c ****         switch (robotOrientation) {
 2960              		.loc 1 495 0
 2961 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2962 00ac 002B     		cmp	r3, #0
 2963 00ae 02D0     		beq	.L143
 2964 00b0 012B     		cmp	r3, #1
 2965 00b2 06D0     		beq	.L144
 496:pathfinding.c ****             case Up:
 497:pathfinding.c ****                 ignoreL++;
 498:pathfinding.c ****                 break;
 499:pathfinding.c ****             case Down:
 500:pathfinding.c ****                 ignoreR++;
 501:pathfinding.c ****                 break;
 502:pathfinding.c ****             default:
 503:pathfinding.c ****                 break;
 2966              		.loc 1 503 0
 2967 00b4 0BE0     		b	.L141
 2968              	.L143:
 497:pathfinding.c ****                 break;
 2969              		.loc 1 497 0
 2970 00b6 1A4B     		ldr	r3, .L150+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 63


 2971 00b8 1B68     		ldr	r3, [r3]
 2972 00ba 0133     		adds	r3, r3, #1
 2973 00bc 184A     		ldr	r2, .L150+8
 2974 00be 1360     		str	r3, [r2]
 498:pathfinding.c ****             case Down:
 2975              		.loc 1 498 0
 2976 00c0 05E0     		b	.L141
 2977              	.L144:
 500:pathfinding.c ****                 break;
 2978              		.loc 1 500 0
 2979 00c2 164B     		ldr	r3, .L150+4
 2980 00c4 1B68     		ldr	r3, [r3]
 2981 00c6 0133     		adds	r3, r3, #1
 2982 00c8 144A     		ldr	r2, .L150+4
 2983 00ca 1360     		str	r3, [r2]
 501:pathfinding.c ****             default:
 2984              		.loc 1 501 0
 2985 00cc 00BF     		nop
 2986              	.L141:
 504:pathfinding.c ****         }
 505:pathfinding.c ****     }
 506:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2987              		.loc 1 506 0
 2988 00ce 7B68     		ldr	r3, [r7, #4]
 2989 00d0 591C     		adds	r1, r3, #1
 2990 00d2 1148     		ldr	r0, .L150
 2991 00d4 BA68     		ldr	r2, [r7, #8]
 2992 00d6 1346     		mov	r3, r2
 2993 00d8 DB00     		lsls	r3, r3, #3
 2994 00da 1344     		add	r3, r3, r2
 2995 00dc 5B00     		lsls	r3, r3, #1
 2996 00de 1344     		add	r3, r3, r2
 2997 00e0 0B44     		add	r3, r3, r1
 2998 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2999 00e6 002B     		cmp	r3, #0
 3000 00e8 11D1     		bne	.L149
 507:pathfinding.c ****         switch (robotOrientation) {
 3001              		.loc 1 507 0
 3002 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3003 00ec 002B     		cmp	r3, #0
 3004 00ee 02D0     		beq	.L147
 3005 00f0 012B     		cmp	r3, #1
 3006 00f2 06D0     		beq	.L148
 508:pathfinding.c ****             case Up:
 509:pathfinding.c ****                 ignoreR++;
 510:pathfinding.c ****                 break;
 511:pathfinding.c ****             case Down:
 512:pathfinding.c ****                 ignoreL++;
 513:pathfinding.c ****                 break;
 514:pathfinding.c ****             default:
 515:pathfinding.c ****                 break;
 3007              		.loc 1 515 0
 3008 00f4 0BE0     		b	.L145
 3009              	.L147:
 509:pathfinding.c ****                 break;
 3010              		.loc 1 509 0
 3011 00f6 094B     		ldr	r3, .L150+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 64


 3012 00f8 1B68     		ldr	r3, [r3]
 3013 00fa 0133     		adds	r3, r3, #1
 3014 00fc 074A     		ldr	r2, .L150+4
 3015 00fe 1360     		str	r3, [r2]
 510:pathfinding.c ****             case Down:
 3016              		.loc 1 510 0
 3017 0100 05E0     		b	.L145
 3018              	.L148:
 512:pathfinding.c ****                 break;
 3019              		.loc 1 512 0
 3020 0102 074B     		ldr	r3, .L150+8
 3021 0104 1B68     		ldr	r3, [r3]
 3022 0106 0133     		adds	r3, r3, #1
 3023 0108 054A     		ldr	r2, .L150+8
 3024 010a 1360     		str	r3, [r2]
 513:pathfinding.c ****             default:
 3025              		.loc 1 513 0
 3026 010c 00BF     		nop
 3027              	.L145:
 3028              	.L149:
 516:pathfinding.c ****         }
 517:pathfinding.c ****     }
 518:pathfinding.c **** }
 3029              		.loc 1 518 0
 3030 010e 00BF     		nop
 3031 0110 1437     		adds	r7, r7, #20
 3032              		.cfi_def_cfa_offset 4
 3033 0112 BD46     		mov	sp, r7
 3034              		.cfi_def_cfa_register 13
 3035              		@ sp needed
 3036 0114 80BC     		pop	{r7}
 3037              		.cfi_restore 7
 3038              		.cfi_def_cfa_offset 0
 3039 0116 7047     		bx	lr
 3040              	.L151:
 3041              		.align	2
 3042              	.L150:
 3043 0118 00000000 		.word	map
 3044 011c 00000000 		.word	ignoreR
 3045 0120 00000000 		.word	ignoreL
 3046              		.cfi_endproc
 3047              	.LFE7:
 3048              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 3049              		.section	.text.getTargetOrientation,"ax",%progbits
 3050              		.align	2
 3051              		.global	getTargetOrientation
 3052              		.thumb
 3053              		.thumb_func
 3054              		.type	getTargetOrientation, %function
 3055              	getTargetOrientation:
 3056              	.LFB8:
 519:pathfinding.c **** 
 520:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 3057              		.loc 1 520 0
 3058              		.cfi_startproc
 3059              		@ args = 0, pretend = 0, frame = 8
 3060              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 65


 3061              		@ link register save eliminated.
 3062 0000 80B4     		push	{r7}
 3063              		.cfi_def_cfa_offset 4
 3064              		.cfi_offset 7, -4
 3065 0002 83B0     		sub	sp, sp, #12
 3066              		.cfi_def_cfa_offset 16
 3067 0004 00AF     		add	r7, sp, #0
 3068              		.cfi_def_cfa_register 7
 3069 0006 7860     		str	r0, [r7, #4]
 3070 0008 3960     		str	r1, [r7]
 521:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 3071              		.loc 1 521 0
 3072 000a 7B68     		ldr	r3, [r7, #4]
 3073 000c 5A1C     		adds	r2, r3, #1
 3074 000e 2249     		ldr	r1, .L158
 3075 0010 1346     		mov	r3, r2
 3076 0012 DB00     		lsls	r3, r3, #3
 3077 0014 1344     		add	r3, r3, r2
 3078 0016 5B00     		lsls	r3, r3, #1
 3079 0018 1344     		add	r3, r3, r2
 3080 001a 3A68     		ldr	r2, [r7]
 3081 001c 1344     		add	r3, r3, r2
 3082 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3083 0022 082B     		cmp	r3, #8
 3084 0024 01D1     		bne	.L153
 522:pathfinding.c ****         return 0; // robot will be travelling up
 3085              		.loc 1 522 0
 3086 0026 0023     		movs	r3, #0
 3087 0028 30E0     		b	.L154
 3088              	.L153:
 523:pathfinding.c ****     }
 524:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 3089              		.loc 1 524 0
 3090 002a 7B68     		ldr	r3, [r7, #4]
 3091 002c 5A1E     		subs	r2, r3, #1
 3092 002e 1A49     		ldr	r1, .L158
 3093 0030 1346     		mov	r3, r2
 3094 0032 DB00     		lsls	r3, r3, #3
 3095 0034 1344     		add	r3, r3, r2
 3096 0036 5B00     		lsls	r3, r3, #1
 3097 0038 1344     		add	r3, r3, r2
 3098 003a 3A68     		ldr	r2, [r7]
 3099 003c 1344     		add	r3, r3, r2
 3100 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3101 0042 082B     		cmp	r3, #8
 3102 0044 01D1     		bne	.L155
 525:pathfinding.c ****         return 1; // robot will be travelling down
 3103              		.loc 1 525 0
 3104 0046 0123     		movs	r3, #1
 3105 0048 20E0     		b	.L154
 3106              	.L155:
 526:pathfinding.c ****     }
 527:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 3107              		.loc 1 527 0
 3108 004a 3B68     		ldr	r3, [r7]
 3109 004c 591C     		adds	r1, r3, #1
 3110 004e 1248     		ldr	r0, .L158
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 66


 3111 0050 7A68     		ldr	r2, [r7, #4]
 3112 0052 1346     		mov	r3, r2
 3113 0054 DB00     		lsls	r3, r3, #3
 3114 0056 1344     		add	r3, r3, r2
 3115 0058 5B00     		lsls	r3, r3, #1
 3116 005a 1344     		add	r3, r3, r2
 3117 005c 0B44     		add	r3, r3, r1
 3118 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3119 0062 082B     		cmp	r3, #8
 3120 0064 01D1     		bne	.L156
 528:pathfinding.c ****         return 2; // robot will be travelling left
 3121              		.loc 1 528 0
 3122 0066 0223     		movs	r3, #2
 3123 0068 10E0     		b	.L154
 3124              	.L156:
 529:pathfinding.c ****     }
 530:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 3125              		.loc 1 530 0
 3126 006a 3B68     		ldr	r3, [r7]
 3127 006c 591E     		subs	r1, r3, #1
 3128 006e 0A48     		ldr	r0, .L158
 3129 0070 7A68     		ldr	r2, [r7, #4]
 3130 0072 1346     		mov	r3, r2
 3131 0074 DB00     		lsls	r3, r3, #3
 3132 0076 1344     		add	r3, r3, r2
 3133 0078 5B00     		lsls	r3, r3, #1
 3134 007a 1344     		add	r3, r3, r2
 3135 007c 0B44     		add	r3, r3, r1
 3136 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3137 0082 082B     		cmp	r3, #8
 3138 0084 01D1     		bne	.L157
 531:pathfinding.c ****         return 3; // robot will be travelling right
 3139              		.loc 1 531 0
 3140 0086 0323     		movs	r3, #3
 3141 0088 00E0     		b	.L154
 3142              	.L157:
 532:pathfinding.c ****     }
 533:pathfinding.c ****     return 5; // placeholder
 3143              		.loc 1 533 0
 3144 008a 0523     		movs	r3, #5
 3145              	.L154:
 534:pathfinding.c **** }
 3146              		.loc 1 534 0
 3147 008c 1846     		mov	r0, r3
 3148 008e 0C37     		adds	r7, r7, #12
 3149              		.cfi_def_cfa_offset 4
 3150 0090 BD46     		mov	sp, r7
 3151              		.cfi_def_cfa_register 13
 3152              		@ sp needed
 3153 0092 80BC     		pop	{r7}
 3154              		.cfi_restore 7
 3155              		.cfi_def_cfa_offset 0
 3156 0094 7047     		bx	lr
 3157              	.L159:
 3158 0096 00BF     		.align	2
 3159              	.L158:
 3160 0098 00000000 		.word	map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 67


 3161              		.cfi_endproc
 3162              	.LFE8:
 3163              		.size	getTargetOrientation, .-getTargetOrientation
 3164              		.section	.text.instructionsListLength,"ax",%progbits
 3165              		.align	2
 3166              		.global	instructionsListLength
 3167              		.thumb
 3168              		.thumb_func
 3169              		.type	instructionsListLength, %function
 3170              	instructionsListLength:
 3171              	.LFB9:
 535:pathfinding.c **** uint8_t instructionsListLength() {
 3172              		.loc 1 535 0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 0
 3175              		@ frame_needed = 1, uses_anonymous_args = 0
 3176              		@ link register save eliminated.
 3177 0000 80B4     		push	{r7}
 3178              		.cfi_def_cfa_offset 4
 3179              		.cfi_offset 7, -4
 3180 0002 00AF     		add	r7, sp, #0
 3181              		.cfi_def_cfa_register 7
 536:pathfinding.c ****     return numSteps;
 3182              		.loc 1 536 0
 3183 0004 034B     		ldr	r3, .L162
 3184 0006 1B68     		ldr	r3, [r3]
 3185 0008 DBB2     		uxtb	r3, r3
 537:pathfinding.c **** }
 3186              		.loc 1 537 0
 3187 000a 1846     		mov	r0, r3
 3188 000c BD46     		mov	sp, r7
 3189              		.cfi_def_cfa_register 13
 3190              		@ sp needed
 3191 000e 80BC     		pop	{r7}
 3192              		.cfi_restore 7
 3193              		.cfi_def_cfa_offset 0
 3194 0010 7047     		bx	lr
 3195              	.L163:
 3196 0012 00BF     		.align	2
 3197              	.L162:
 3198 0014 882C0000 		.word	numSteps
 3199              		.cfi_endproc
 3200              	.LFE9:
 3201              		.size	instructionsListLength, .-instructionsListLength
 3202              		.section	.text.findPathNewOrientation,"ax",%progbits
 3203              		.align	2
 3204              		.global	findPathNewOrientation
 3205              		.thumb
 3206              		.thumb_func
 3207              		.type	findPathNewOrientation, %function
 3208              	findPathNewOrientation:
 3209              	.LFB10:
 538:pathfinding.c **** 
 539:pathfinding.c **** Instruction * findPathNewOrientation(int map[MAX_ROWS][MAX_COLS], int food_list[6][2], int i, enum 
 3210              		.loc 1 539 0
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 68


 3213              		@ frame_needed = 1, uses_anonymous_args = 0
 3214 0000 90B5     		push	{r4, r7, lr}
 3215              		.cfi_def_cfa_offset 12
 3216              		.cfi_offset 4, -12
 3217              		.cfi_offset 7, -8
 3218              		.cfi_offset 14, -4
 3219 0002 8BB0     		sub	sp, sp, #44
 3220              		.cfi_def_cfa_offset 56
 3221 0004 02AF     		add	r7, sp, #8
 3222              		.cfi_def_cfa 7, 48
 3223 0006 F860     		str	r0, [r7, #12]
 3224 0008 B960     		str	r1, [r7, #8]
 3225 000a 7A60     		str	r2, [r7, #4]
 3226 000c FB70     		strb	r3, [r7, #3]
 540:pathfinding.c ****     clearMap(map); // clear map between each pass
 3227              		.loc 1 540 0
 3228 000e F868     		ldr	r0, [r7, #12]
 3229 0010 FFF7FEFF 		bl	clearMap
 541:pathfinding.c ****     // update pathfinding orientation with current robot orientation
 542:pathfinding.c ****     currentRobotOrientation = orientation;
 3230              		.loc 1 542 0
 3231 0014 1D4A     		ldr	r2, .L166
 3232 0016 FB78     		ldrb	r3, [r7, #3]
 3233 0018 1370     		strb	r3, [r2]
 543:pathfinding.c ****     struct Location startLocation, targetLocation;
 544:pathfinding.c ****     startLocation.row = food_list[i][0];
 3234              		.loc 1 544 0
 3235 001a 7B68     		ldr	r3, [r7, #4]
 3236 001c DB00     		lsls	r3, r3, #3
 3237 001e BA68     		ldr	r2, [r7, #8]
 3238 0020 1344     		add	r3, r3, r2
 3239 0022 1B68     		ldr	r3, [r3]
 3240 0024 BB61     		str	r3, [r7, #24]
 545:pathfinding.c ****     startLocation.col = food_list[i][1]; // need to change every pass
 3241              		.loc 1 545 0
 3242 0026 7B68     		ldr	r3, [r7, #4]
 3243 0028 DB00     		lsls	r3, r3, #3
 3244 002a BA68     		ldr	r2, [r7, #8]
 3245 002c 1344     		add	r3, r3, r2
 3246 002e 5B68     		ldr	r3, [r3, #4]
 3247 0030 FB61     		str	r3, [r7, #28]
 546:pathfinding.c ****     targetLocation.row = food_list[i + 1][0];
 3248              		.loc 1 546 0
 3249 0032 7B68     		ldr	r3, [r7, #4]
 3250 0034 0133     		adds	r3, r3, #1
 3251 0036 DB00     		lsls	r3, r3, #3
 3252 0038 BA68     		ldr	r2, [r7, #8]
 3253 003a 1344     		add	r3, r3, r2
 3254 003c 1B68     		ldr	r3, [r3]
 3255 003e 3B61     		str	r3, [r7, #16]
 547:pathfinding.c ****     targetLocation.col = food_list[i + 1][1];
 3256              		.loc 1 547 0
 3257 0040 7B68     		ldr	r3, [r7, #4]
 3258 0042 0133     		adds	r3, r3, #1
 3259 0044 DB00     		lsls	r3, r3, #3
 3260 0046 BA68     		ldr	r2, [r7, #8]
 3261 0048 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 69


 3262 004a 5B68     		ldr	r3, [r3, #4]
 3263 004c 7B61     		str	r3, [r7, #20]
 548:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 3264              		.loc 1 548 0
 3265 004e 7B69     		ldr	r3, [r7, #20]
 3266 0050 0093     		str	r3, [sp]
 3267 0052 3B69     		ldr	r3, [r7, #16]
 3268 0054 07F11802 		add	r2, r7, #24
 3269 0058 06CA     		ldmia	r2, {r1, r2}
 3270 005a F868     		ldr	r0, [r7, #12]
 3271 005c FFF7FEFF 		bl	dijkstra
 549:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 3272              		.loc 1 549 0
 3273 0060 0B4B     		ldr	r3, .L166+4
 3274 0062 1C68     		ldr	r4, [r3]
 3275 0064 6A46     		mov	r2, sp
 3276 0066 07F11003 		add	r3, r7, #16
 3277 006a 93E80300 		ldmia	r3, {r0, r1}
 3278 006e 82E80300 		stmia	r2, {r0, r1}
 3279 0072 07F11803 		add	r3, r7, #24
 3280 0076 0CCB     		ldmia	r3, {r2, r3}
 3281 0078 2146     		mov	r1, r4
 3282 007a F868     		ldr	r0, [r7, #12]
 3283 007c FFF7FEFF 		bl	getPathInstructions
 550:pathfinding.c ****     return finalInstructionList;
 3284              		.loc 1 550 0
 3285 0080 044B     		ldr	r3, .L166+8
 551:pathfinding.c **** }
 3286              		.loc 1 551 0
 3287 0082 1846     		mov	r0, r3
 3288 0084 2437     		adds	r7, r7, #36
 3289              		.cfi_def_cfa_offset 12
 3290 0086 BD46     		mov	sp, r7
 3291              		.cfi_def_cfa_register 13
 3292              		@ sp needed
 3293 0088 90BD     		pop	{r4, r7, pc}
 3294              	.L167:
 3295 008a 00BF     		.align	2
 3296              	.L166:
 3297 008c 00000000 		.word	currentRobotOrientation
 3298 0090 882C0000 		.word	numSteps
 3299 0094 44160000 		.word	finalInstructionList
 3300              		.cfi_endproc
 3301              	.LFE10:
 3302              		.size	findPathNewOrientation, .-findPathNewOrientation
 3303              		.text
 3304              	.Letext0:
 3305              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3306              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3307              		.file 4 "pathfinding.h"
 3308              		.section	.debug_info,"",%progbits
 3309              	.Ldebug_info0:
 3310 0000 EE080000 		.4byte	0x8ee
 3311 0004 0400     		.2byte	0x4
 3312 0006 00000000 		.4byte	.Ldebug_abbrev0
 3313 000a 04       		.byte	0x4
 3314 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 70


 3315 000c 4B000000 		.4byte	.LASF80
 3316 0010 0C       		.byte	0xc
 3317 0011 2B040000 		.4byte	.LASF81
 3318 0015 52010000 		.4byte	.LASF82
 3319 0019 78000000 		.4byte	.Ldebug_ranges0+0x78
 3320 001d 00000000 		.4byte	0
 3321 0021 00000000 		.4byte	.Ldebug_line0
 3322 0025 02       		.uleb128 0x2
 3323 0026 01       		.byte	0x1
 3324 0027 06       		.byte	0x6
 3325 0028 2B000000 		.4byte	.LASF0
 3326 002c 03       		.uleb128 0x3
 3327 002d 37000000 		.4byte	.LASF12
 3328 0031 02       		.byte	0x2
 3329 0032 1D       		.byte	0x1d
 3330 0033 37000000 		.4byte	0x37
 3331 0037 02       		.uleb128 0x2
 3332 0038 01       		.byte	0x1
 3333 0039 08       		.byte	0x8
 3334 003a 40030000 		.4byte	.LASF1
 3335 003e 02       		.uleb128 0x2
 3336 003f 02       		.byte	0x2
 3337 0040 05       		.byte	0x5
 3338 0041 78030000 		.4byte	.LASF2
 3339 0045 02       		.uleb128 0x2
 3340 0046 02       		.byte	0x2
 3341 0047 07       		.byte	0x7
 3342 0048 61020000 		.4byte	.LASF3
 3343 004c 02       		.uleb128 0x2
 3344 004d 04       		.byte	0x4
 3345 004e 05       		.byte	0x5
 3346 004f C1010000 		.4byte	.LASF4
 3347 0053 02       		.uleb128 0x2
 3348 0054 04       		.byte	0x4
 3349 0055 07       		.byte	0x7
 3350 0056 3D020000 		.4byte	.LASF5
 3351 005a 02       		.uleb128 0x2
 3352 005b 08       		.byte	0x8
 3353 005c 05       		.byte	0x5
 3354 005d 44010000 		.4byte	.LASF6
 3355 0061 02       		.uleb128 0x2
 3356 0062 08       		.byte	0x8
 3357 0063 07       		.byte	0x7
 3358 0064 E1000000 		.4byte	.LASF7
 3359 0068 04       		.uleb128 0x4
 3360 0069 04       		.byte	0x4
 3361 006a 05       		.byte	0x5
 3362 006b 696E7400 		.ascii	"int\000"
 3363 006f 02       		.uleb128 0x2
 3364 0070 04       		.byte	0x4
 3365 0071 07       		.byte	0x7
 3366 0072 23020000 		.4byte	.LASF8
 3367 0076 02       		.uleb128 0x2
 3368 0077 08       		.byte	0x8
 3369 0078 04       		.byte	0x4
 3370 0079 B1020000 		.4byte	.LASF9
 3371 007d 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 71


 3372 007e 04       		.byte	0x4
 3373 007f 07       		.byte	0x7
 3374 0080 A8020000 		.4byte	.LASF10
 3375 0084 02       		.uleb128 0x2
 3376 0085 01       		.byte	0x1
 3377 0086 08       		.byte	0x8
 3378 0087 D1030000 		.4byte	.LASF11
 3379 008b 03       		.uleb128 0x3
 3380 008c 8E040000 		.4byte	.LASF13
 3381 0090 03       		.byte	0x3
 3382 0091 18       		.byte	0x18
 3383 0092 2C000000 		.4byte	0x2c
 3384 0096 05       		.uleb128 0x5
 3385 0097 00000000 		.4byte	.LASF17
 3386 009b 01       		.byte	0x1
 3387 009c 37000000 		.4byte	0x37
 3388 00a0 04       		.byte	0x4
 3389 00a1 0D       		.byte	0xd
 3390 00a2 BE000000 		.4byte	0xbe
 3391 00a6 06       		.uleb128 0x6
 3392 00a7 557000   		.ascii	"Up\000"
 3393 00aa 00       		.byte	0
 3394 00ab 07       		.uleb128 0x7
 3395 00ac 02040000 		.4byte	.LASF14
 3396 00b0 01       		.byte	0x1
 3397 00b1 07       		.uleb128 0x7
 3398 00b2 A3020000 		.4byte	.LASF15
 3399 00b6 02       		.byte	0x2
 3400 00b7 07       		.uleb128 0x7
 3401 00b8 9B030000 		.4byte	.LASF16
 3402 00bc 03       		.byte	0x3
 3403 00bd 00       		.byte	0
 3404 00be 05       		.uleb128 0x5
 3405 00bf 4E030000 		.4byte	.LASF18
 3406 00c3 01       		.byte	0x1
 3407 00c4 37000000 		.4byte	0x37
 3408 00c8 04       		.byte	0x4
 3409 00c9 0E       		.byte	0xe
 3410 00ca F3000000 		.4byte	0xf3
 3411 00ce 07       		.uleb128 0x7
 3412 00cf 91030000 		.4byte	.LASF19
 3413 00d3 00       		.byte	0
 3414 00d4 07       		.uleb128 0x7
 3415 00d5 D8020000 		.4byte	.LASF20
 3416 00d9 01       		.byte	0x1
 3417 00da 07       		.uleb128 0x7
 3418 00db 4A040000 		.4byte	.LASF21
 3419 00df 02       		.byte	0x2
 3420 00e0 07       		.uleb128 0x7
 3421 00e1 16010000 		.4byte	.LASF22
 3422 00e5 03       		.byte	0x3
 3423 00e6 07       		.uleb128 0x7
 3424 00e7 D9010000 		.4byte	.LASF23
 3425 00eb 04       		.byte	0x4
 3426 00ec 07       		.uleb128 0x7
 3427 00ed 74020000 		.4byte	.LASF24
 3428 00f1 05       		.byte	0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 72


 3429 00f2 00       		.byte	0
 3430 00f3 08       		.uleb128 0x8
 3431 00f4 AA010000 		.4byte	.LASF30
 3432 00f8 14       		.byte	0x14
 3433 00f9 04       		.byte	0x4
 3434 00fa 10       		.byte	0x10
 3435 00fb 3C010000 		.4byte	0x13c
 3436 00ff 09       		.uleb128 0x9
 3437 0100 41000000 		.4byte	.LASF25
 3438 0104 04       		.byte	0x4
 3439 0105 11       		.byte	0x11
 3440 0106 BE000000 		.4byte	0xbe
 3441 010a 00       		.byte	0
 3442 010b 09       		.uleb128 0x9
 3443 010c CB040000 		.4byte	.LASF26
 3444 0110 04       		.byte	0x4
 3445 0111 12       		.byte	0x12
 3446 0112 68000000 		.4byte	0x68
 3447 0116 04       		.byte	0x4
 3448 0117 09       		.uleb128 0x9
 3449 0118 D3040000 		.4byte	.LASF27
 3450 011c 04       		.byte	0x4
 3451 011d 13       		.byte	0x13
 3452 011e 68000000 		.4byte	0x68
 3453 0122 08       		.byte	0x8
 3454 0123 09       		.uleb128 0x9
 3455 0124 33010000 		.4byte	.LASF28
 3456 0128 04       		.byte	0x4
 3457 0129 14       		.byte	0x14
 3458 012a 68000000 		.4byte	0x68
 3459 012e 0C       		.byte	0xc
 3460 012f 09       		.uleb128 0x9
 3461 0130 F8000000 		.4byte	.LASF29
 3462 0134 04       		.byte	0x4
 3463 0135 15       		.byte	0x15
 3464 0136 96000000 		.4byte	0x96
 3465 013a 10       		.byte	0x10
 3466 013b 00       		.byte	0
 3467 013c 03       		.uleb128 0x3
 3468 013d AA010000 		.4byte	.LASF30
 3469 0141 04       		.byte	0x4
 3470 0142 16       		.byte	0x16
 3471 0143 F3000000 		.4byte	0xf3
 3472 0147 08       		.uleb128 0x8
 3473 0148 EC010000 		.4byte	.LASF31
 3474 014c 08       		.byte	0x8
 3475 014d 04       		.byte	0x4
 3476 014e 1A       		.byte	0x1a
 3477 014f 6C010000 		.4byte	0x16c
 3478 0153 0A       		.uleb128 0xa
 3479 0154 726F7700 		.ascii	"row\000"
 3480 0158 04       		.byte	0x4
 3481 0159 1C       		.byte	0x1c
 3482 015a 68000000 		.4byte	0x68
 3483 015e 00       		.byte	0
 3484 015f 0A       		.uleb128 0xa
 3485 0160 636F6C00 		.ascii	"col\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 73


 3486 0164 04       		.byte	0x4
 3487 0165 1D       		.byte	0x1d
 3488 0166 68000000 		.4byte	0x68
 3489 016a 04       		.byte	0x4
 3490 016b 00       		.byte	0
 3491 016c 0B       		.uleb128 0xb
 3492 016d 2A010000 		.4byte	.LASF32
 3493 0171 01       		.byte	0x1
 3494 0172 42       		.byte	0x42
 3495 0173 00000000 		.4byte	.LFB1
 3496 0177 58000000 		.4byte	.LFE1-.LFB1
 3497 017b 01       		.uleb128 0x1
 3498 017c 9C       		.byte	0x9c
 3499 017d BC010000 		.4byte	0x1bc
 3500 0181 0C       		.uleb128 0xc
 3501 0182 6D617000 		.ascii	"map\000"
 3502 0186 01       		.byte	0x1
 3503 0187 42       		.byte	0x42
 3504 0188 CC010000 		.4byte	0x1cc
 3505 018c 02       		.uleb128 0x2
 3506 018d 91       		.byte	0x91
 3507 018e 6C       		.sleb128 -20
 3508 018f 0D       		.uleb128 0xd
 3509 0190 08000000 		.4byte	.LBB2
 3510 0194 44000000 		.4byte	.LBE2-.LBB2
 3511 0198 0E       		.uleb128 0xe
 3512 0199 6900     		.ascii	"i\000"
 3513 019b 01       		.byte	0x1
 3514 019c 44       		.byte	0x44
 3515 019d 68000000 		.4byte	0x68
 3516 01a1 02       		.uleb128 0x2
 3517 01a2 91       		.byte	0x91
 3518 01a3 74       		.sleb128 -12
 3519 01a4 0D       		.uleb128 0xd
 3520 01a5 0E000000 		.4byte	.LBB3
 3521 01a9 2C000000 		.4byte	.LBE3-.LBB3
 3522 01ad 0E       		.uleb128 0xe
 3523 01ae 6A00     		.ascii	"j\000"
 3524 01b0 01       		.byte	0x1
 3525 01b1 45       		.byte	0x45
 3526 01b2 68000000 		.4byte	0x68
 3527 01b6 02       		.uleb128 0x2
 3528 01b7 91       		.byte	0x91
 3529 01b8 70       		.sleb128 -16
 3530 01b9 00       		.byte	0
 3531 01ba 00       		.byte	0
 3532 01bb 00       		.byte	0
 3533 01bc 0F       		.uleb128 0xf
 3534 01bd 68000000 		.4byte	0x68
 3535 01c1 CC010000 		.4byte	0x1cc
 3536 01c5 10       		.uleb128 0x10
 3537 01c6 7D000000 		.4byte	0x7d
 3538 01ca 12       		.byte	0x12
 3539 01cb 00       		.byte	0
 3540 01cc 11       		.uleb128 0x11
 3541 01cd 04       		.byte	0x4
 3542 01ce BC010000 		.4byte	0x1bc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 74


 3543 01d2 12       		.uleb128 0x12
 3544 01d3 24030000 		.4byte	.LASF33
 3545 01d7 01       		.byte	0x1
 3546 01d8 4B       		.byte	0x4b
 3547 01d9 00000000 		.4byte	.LFB2
 3548 01dd 60000000 		.4byte	.LFE2-.LFB2
 3549 01e1 01       		.uleb128 0x1
 3550 01e2 9C       		.byte	0x9c
 3551 01e3 22020000 		.4byte	0x222
 3552 01e7 0C       		.uleb128 0xc
 3553 01e8 6D617000 		.ascii	"map\000"
 3554 01ec 01       		.byte	0x1
 3555 01ed 4B       		.byte	0x4b
 3556 01ee CC010000 		.4byte	0x1cc
 3557 01f2 02       		.uleb128 0x2
 3558 01f3 91       		.byte	0x91
 3559 01f4 6C       		.sleb128 -20
 3560 01f5 0D       		.uleb128 0xd
 3561 01f6 08000000 		.4byte	.LBB4
 3562 01fa 4E000000 		.4byte	.LBE4-.LBB4
 3563 01fe 0E       		.uleb128 0xe
 3564 01ff 6900     		.ascii	"i\000"
 3565 0201 01       		.byte	0x1
 3566 0202 4D       		.byte	0x4d
 3567 0203 68000000 		.4byte	0x68
 3568 0207 02       		.uleb128 0x2
 3569 0208 91       		.byte	0x91
 3570 0209 74       		.sleb128 -12
 3571 020a 0D       		.uleb128 0xd
 3572 020b 0E000000 		.4byte	.LBB5
 3573 020f 3C000000 		.4byte	.LBE5-.LBB5
 3574 0213 0E       		.uleb128 0xe
 3575 0214 6A00     		.ascii	"j\000"
 3576 0216 01       		.byte	0x1
 3577 0217 4E       		.byte	0x4e
 3578 0218 68000000 		.4byte	0x68
 3579 021c 02       		.uleb128 0x2
 3580 021d 91       		.byte	0x91
 3581 021e 70       		.sleb128 -16
 3582 021f 00       		.byte	0
 3583 0220 00       		.byte	0
 3584 0221 00       		.byte	0
 3585 0222 13       		.uleb128 0x13
 3586 0223 1F000000 		.4byte	.LASF65
 3587 0227 01       		.byte	0x1
 3588 0228 56       		.byte	0x56
 3589 0229 7E020000 		.4byte	0x27e
 3590 022d 00000000 		.4byte	.LFB3
 3591 0231 56000000 		.4byte	.LFE3-.LFB3
 3592 0235 01       		.uleb128 0x1
 3593 0236 9C       		.byte	0x9c
 3594 0237 7E020000 		.4byte	0x27e
 3595 023b 0C       		.uleb128 0xc
 3596 023c 7200     		.ascii	"r\000"
 3597 023e 01       		.byte	0x1
 3598 023f 56       		.byte	0x56
 3599 0240 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 75


 3600 0244 02       		.uleb128 0x2
 3601 0245 91       		.byte	0x91
 3602 0246 74       		.sleb128 -12
 3603 0247 0C       		.uleb128 0xc
 3604 0248 6300     		.ascii	"c\000"
 3605 024a 01       		.byte	0x1
 3606 024b 56       		.byte	0x56
 3607 024c 68000000 		.4byte	0x68
 3608 0250 02       		.uleb128 0x2
 3609 0251 91       		.byte	0x91
 3610 0252 70       		.sleb128 -16
 3611 0253 14       		.uleb128 0x14
 3612 0254 1A000000 		.4byte	.LASF34
 3613 0258 01       		.byte	0x1
 3614 0259 56       		.byte	0x56
 3615 025a 68000000 		.4byte	0x68
 3616 025e 02       		.uleb128 0x2
 3617 025f 91       		.byte	0x91
 3618 0260 6C       		.sleb128 -20
 3619 0261 14       		.uleb128 0x14
 3620 0262 BD040000 		.4byte	.LASF35
 3621 0266 01       		.byte	0x1
 3622 0267 56       		.byte	0x56
 3623 0268 68000000 		.4byte	0x68
 3624 026c 02       		.uleb128 0x2
 3625 026d 91       		.byte	0x91
 3626 026e 68       		.sleb128 -24
 3627 026f 0C       		.uleb128 0xc
 3628 0270 6D617000 		.ascii	"map\000"
 3629 0274 01       		.byte	0x1
 3630 0275 56       		.byte	0x56
 3631 0276 CC010000 		.4byte	0x1cc
 3632 027a 02       		.uleb128 0x2
 3633 027b 91       		.byte	0x91
 3634 027c 00       		.sleb128 0
 3635 027d 00       		.byte	0
 3636 027e 02       		.uleb128 0x2
 3637 027f 01       		.byte	0x1
 3638 0280 02       		.byte	0x2
 3639 0281 3A030000 		.4byte	.LASF36
 3640 0285 0B       		.uleb128 0xb
 3641 0286 11000000 		.4byte	.LASF37
 3642 028a 01       		.byte	0x1
 3643 028b 5A       		.byte	0x5a
 3644 028c 00000000 		.4byte	.LFB4
 3645 0290 18090000 		.4byte	.LFE4-.LFB4
 3646 0294 01       		.uleb128 0x1
 3647 0295 9C       		.byte	0x9c
 3648 0296 D3040000 		.4byte	0x4d3
 3649 029a 0C       		.uleb128 0xc
 3650 029b 6D617000 		.ascii	"map\000"
 3651 029f 01       		.byte	0x1
 3652 02a0 5A       		.byte	0x5a
 3653 02a1 CC010000 		.4byte	0x1cc
 3654 02a5 03       		.uleb128 0x3
 3655 02a6 91       		.byte	0x91
 3656 02a7 BC52     		.sleb128 -5828
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 76


 3657 02a9 14       		.uleb128 0x14
 3658 02aa 1C010000 		.4byte	.LASF38
 3659 02ae 01       		.byte	0x1
 3660 02af 5A       		.byte	0x5a
 3661 02b0 47010000 		.4byte	0x147
 3662 02b4 03       		.uleb128 0x3
 3663 02b5 91       		.byte	0x91
 3664 02b6 B452     		.sleb128 -5836
 3665 02b8 14       		.uleb128 0x14
 3666 02b9 CA010000 		.4byte	.LASF39
 3667 02bd 01       		.byte	0x1
 3668 02be 5A       		.byte	0x5a
 3669 02bf 47010000 		.4byte	0x147
 3670 02c3 02       		.uleb128 0x2
 3671 02c4 91       		.byte	0x91
 3672 02c5 7C       		.sleb128 -4
 3673 02c6 15       		.uleb128 0x15
 3674 02c7 C6030000 		.4byte	.LASF40
 3675 02cb 01       		.byte	0x1
 3676 02cc 5C       		.byte	0x5c
 3677 02cd D3040000 		.4byte	0x4d3
 3678 02d1 03       		.uleb128 0x3
 3679 02d2 91       		.byte	0x91
 3680 02d3 9C76     		.sleb128 -1252
 3681 02d5 08       		.uleb128 0x8
 3682 02d6 5B040000 		.4byte	.LASF41
 3683 02da 0C       		.byte	0xc
 3684 02db 01       		.byte	0x1
 3685 02dc 63       		.byte	0x63
 3686 02dd FA020000 		.4byte	0x2fa
 3687 02e1 09       		.uleb128 0x9
 3688 02e2 BD030000 		.4byte	.LASF42
 3689 02e6 01       		.byte	0x1
 3690 02e7 64       		.byte	0x64
 3691 02e8 47010000 		.4byte	0x147
 3692 02ec 00       		.byte	0
 3693 02ed 09       		.uleb128 0x9
 3694 02ee EF030000 		.4byte	.LASF43
 3695 02f2 01       		.byte	0x1
 3696 02f3 65       		.byte	0x65
 3697 02f4 68000000 		.4byte	0x68
 3698 02f8 08       		.byte	0x8
 3699 02f9 00       		.byte	0
 3700 02fa 0E       		.uleb128 0xe
 3701 02fb 707100   		.ascii	"pq\000"
 3702 02fe 01       		.byte	0x1
 3703 02ff 68       		.byte	0x68
 3704 0300 E9040000 		.4byte	0x4e9
 3705 0304 03       		.uleb128 0x3
 3706 0305 91       		.byte	0x91
 3707 0306 C05B     		.sleb128 -4672
 3708 0308 15       		.uleb128 0x15
 3709 0309 88020000 		.4byte	.LASF44
 3710 030d 01       		.byte	0x1
 3711 030e 69       		.byte	0x69
 3712 030f 68000000 		.4byte	0x68
 3713 0313 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 77


 3714 0314 91       		.byte	0x91
 3715 0315 5C       		.sleb128 -36
 3716 0316 15       		.uleb128 0x15
 3717 0317 0C010000 		.4byte	.LASF45
 3718 031b 01       		.byte	0x1
 3719 031c 6C       		.byte	0x6c
 3720 031d D3040000 		.4byte	0x4d3
 3721 0321 03       		.uleb128 0x3
 3722 0322 91       		.byte	0x91
 3723 0323 CC52     		.sleb128 -5812
 3724 0325 15       		.uleb128 0x15
 3725 0326 D9000000 		.4byte	.LASF46
 3726 032a 01       		.byte	0x1
 3727 032b 75       		.byte	0x75
 3728 032c 68000000 		.4byte	0x68
 3729 0330 02       		.uleb128 0x2
 3730 0331 91       		.byte	0x91
 3731 0332 50       		.sleb128 -48
 3732 0333 15       		.uleb128 0x15
 3733 0334 30020000 		.4byte	.LASF47
 3734 0338 01       		.byte	0x1
 3735 0339 AC       		.byte	0xac
 3736 033a 68000000 		.4byte	0x68
 3737 033e 02       		.uleb128 0x2
 3738 033f 91       		.byte	0x91
 3739 0340 40       		.sleb128 -64
 3740 0341 15       		.uleb128 0x15
 3741 0342 B4030000 		.4byte	.LASF48
 3742 0346 01       		.byte	0x1
 3743 0347 AF       		.byte	0xaf
 3744 0348 FA040000 		.4byte	0x4fa
 3745 034c 03       		.uleb128 0x3
 3746 034d 91       		.byte	0x91
 3747 034e 987F     		.sleb128 -104
 3748 0350 15       		.uleb128 0x15
 3749 0351 BD020000 		.4byte	.LASF49
 3750 0355 01       		.byte	0x1
 3751 0356 B0       		.byte	0xb0
 3752 0357 68000000 		.4byte	0x68
 3753 035b 03       		.uleb128 0x3
 3754 035c 91       		.byte	0x91
 3755 035d BC7F     		.sleb128 -68
 3756 035f 15       		.uleb128 0x15
 3757 0360 B6010000 		.4byte	.LASF50
 3758 0364 01       		.byte	0x1
 3759 0365 B1       		.byte	0xb1
 3760 0366 68000000 		.4byte	0x68
 3761 036a 03       		.uleb128 0x3
 3762 036b 91       		.byte	0x91
 3763 036c B87F     		.sleb128 -72
 3764 036e 15       		.uleb128 0x15
 3765 036f 1A030000 		.4byte	.LASF51
 3766 0373 01       		.byte	0x1
 3767 0374 B6       		.byte	0xb6
 3768 0375 68000000 		.4byte	0x68
 3769 0379 03       		.uleb128 0x3
 3770 037a 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 78


 3771 037b B47F     		.sleb128 -76
 3772 037d 16       		.uleb128 0x16
 3773 037e 28000000 		.4byte	.LBB6
 3774 0382 92000000 		.4byte	.LBE6-.LBB6
 3775 0386 AD030000 		.4byte	0x3ad
 3776 038a 0E       		.uleb128 0xe
 3777 038b 6900     		.ascii	"i\000"
 3778 038d 01       		.byte	0x1
 3779 038e 5D       		.byte	0x5d
 3780 038f 68000000 		.4byte	0x68
 3781 0393 02       		.uleb128 0x2
 3782 0394 91       		.byte	0x91
 3783 0395 64       		.sleb128 -28
 3784 0396 0D       		.uleb128 0xd
 3785 0397 36000000 		.4byte	.LBB7
 3786 039b 60000000 		.4byte	.LBE7-.LBB7
 3787 039f 0E       		.uleb128 0xe
 3788 03a0 6A00     		.ascii	"j\000"
 3789 03a2 01       		.byte	0x1
 3790 03a3 5E       		.byte	0x5e
 3791 03a4 68000000 		.4byte	0x68
 3792 03a8 02       		.uleb128 0x2
 3793 03a9 91       		.byte	0x91
 3794 03aa 60       		.sleb128 -32
 3795 03ab 00       		.byte	0
 3796 03ac 00       		.byte	0
 3797 03ad 16       		.uleb128 0x16
 3798 03ae C6000000 		.4byte	.LBB8
 3799 03b2 92000000 		.4byte	.LBE8-.LBB8
 3800 03b6 DD030000 		.4byte	0x3dd
 3801 03ba 0E       		.uleb128 0xe
 3802 03bb 6900     		.ascii	"i\000"
 3803 03bd 01       		.byte	0x1
 3804 03be 6F       		.byte	0x6f
 3805 03bf 68000000 		.4byte	0x68
 3806 03c3 02       		.uleb128 0x2
 3807 03c4 91       		.byte	0x91
 3808 03c5 58       		.sleb128 -40
 3809 03c6 0D       		.uleb128 0xd
 3810 03c7 D4000000 		.4byte	.LBB9
 3811 03cb 60000000 		.4byte	.LBE9-.LBB9
 3812 03cf 0E       		.uleb128 0xe
 3813 03d0 6A00     		.ascii	"j\000"
 3814 03d2 01       		.byte	0x1
 3815 03d3 70       		.byte	0x70
 3816 03d4 68000000 		.4byte	0x68
 3817 03d8 02       		.uleb128 0x2
 3818 03d9 91       		.byte	0x91
 3819 03da 54       		.sleb128 -44
 3820 03db 00       		.byte	0
 3821 03dc 00       		.byte	0
 3822 03dd 17       		.uleb128 0x17
 3823 03de 00000000 		.4byte	.Ldebug_ranges0+0
 3824 03e2 93040000 		.4byte	0x493
 3825 03e6 0E       		.uleb128 0xe
 3826 03e7 69647800 		.ascii	"idx\000"
 3827 03eb 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 79


 3828 03ec 7F       		.byte	0x7f
 3829 03ed 68000000 		.4byte	0x68
 3830 03f1 02       		.uleb128 0x2
 3831 03f2 91       		.byte	0x91
 3832 03f3 4C       		.sleb128 -52
 3833 03f4 15       		.uleb128 0x15
 3834 03f5 09030000 		.4byte	.LASF52
 3835 03f9 01       		.byte	0x1
 3836 03fa 85       		.byte	0x85
 3837 03fb D5020000 		.4byte	0x2d5
 3838 03ff 03       		.uleb128 0x3
 3839 0400 91       		.byte	0x91
 3840 0401 C052     		.sleb128 -5824
 3841 0403 0E       		.uleb128 0xe
 3842 0404 726F7700 		.ascii	"row\000"
 3843 0408 01       		.byte	0x1
 3844 0409 89       		.byte	0x89
 3845 040a 68000000 		.4byte	0x68
 3846 040e 03       		.uleb128 0x3
 3847 040f 91       		.byte	0x91
 3848 0410 AC7F     		.sleb128 -84
 3849 0412 0E       		.uleb128 0xe
 3850 0413 636F6C00 		.ascii	"col\000"
 3851 0417 01       		.byte	0x1
 3852 0418 8A       		.byte	0x8a
 3853 0419 68000000 		.4byte	0x68
 3854 041d 03       		.uleb128 0x3
 3855 041e 91       		.byte	0x91
 3856 041f A87F     		.sleb128 -88
 3857 0421 16       		.uleb128 0x16
 3858 0422 02020000 		.4byte	.LBB11
 3859 0426 90000000 		.4byte	.LBE11-.LBB11
 3860 042a 3B040000 		.4byte	0x43b
 3861 042e 0E       		.uleb128 0xe
 3862 042f 6900     		.ascii	"i\000"
 3863 0431 01       		.byte	0x1
 3864 0432 80       		.byte	0x80
 3865 0433 68000000 		.4byte	0x68
 3866 0437 02       		.uleb128 0x2
 3867 0438 91       		.byte	0x91
 3868 0439 48       		.sleb128 -56
 3869 043a 00       		.byte	0
 3870 043b 0D       		.uleb128 0xd
 3871 043c C4030000 		.4byte	.LBB12
 3872 0440 1E020000 		.4byte	.LBE12-.LBB12
 3873 0444 0E       		.uleb128 0xe
 3874 0445 6900     		.ascii	"i\000"
 3875 0447 01       		.byte	0x1
 3876 0448 93       		.byte	0x93
 3877 0449 68000000 		.4byte	0x68
 3878 044d 02       		.uleb128 0x2
 3879 044e 91       		.byte	0x91
 3880 044f 44       		.sleb128 -60
 3881 0450 0D       		.uleb128 0xd
 3882 0451 D2030000 		.4byte	.LBB13
 3883 0455 EA010000 		.4byte	.LBE13-.LBB13
 3884 0459 15       		.uleb128 0x15
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 80


 3885 045a 81020000 		.4byte	.LASF53
 3886 045e 01       		.byte	0x1
 3887 045f 94       		.byte	0x94
 3888 0460 68000000 		.4byte	0x68
 3889 0464 03       		.uleb128 0x3
 3890 0465 91       		.byte	0x91
 3891 0466 A47F     		.sleb128 -92
 3892 0468 15       		.uleb128 0x15
 3893 0469 A3010000 		.4byte	.LASF54
 3894 046d 01       		.byte	0x1
 3895 046e 95       		.byte	0x95
 3896 046f 68000000 		.4byte	0x68
 3897 0473 03       		.uleb128 0x3
 3898 0474 91       		.byte	0x91
 3899 0475 A07F     		.sleb128 -96
 3900 0477 0D       		.uleb128 0xd
 3901 0478 80040000 		.4byte	.LBB14
 3902 047c 3C010000 		.4byte	.LBE14-.LBB14
 3903 0480 15       		.uleb128 0x15
 3904 0481 1F040000 		.4byte	.LASF55
 3905 0485 01       		.byte	0x1
 3906 0486 98       		.byte	0x98
 3907 0487 68000000 		.4byte	0x68
 3908 048b 03       		.uleb128 0x3
 3909 048c 91       		.byte	0x91
 3910 048d 9C7F     		.sleb128 -100
 3911 048f 00       		.byte	0
 3912 0490 00       		.byte	0
 3913 0491 00       		.byte	0
 3914 0492 00       		.byte	0
 3915 0493 0D       		.uleb128 0xd
 3916 0494 0A070000 		.4byte	.LBB16
 3917 0498 E6010000 		.4byte	.LBE16-.LBB16
 3918 049c 0E       		.uleb128 0xe
 3919 049d 6900     		.ascii	"i\000"
 3920 049f 01       		.byte	0x1
 3921 04a0 BA       		.byte	0xba
 3922 04a1 68000000 		.4byte	0x68
 3923 04a5 03       		.uleb128 0x3
 3924 04a6 91       		.byte	0x91
 3925 04a7 B07F     		.sleb128 -80
 3926 04a9 0D       		.uleb128 0xd
 3927 04aa 1C070000 		.4byte	.LBB17
 3928 04ae BA010000 		.4byte	.LBE17-.LBB17
 3929 04b2 15       		.uleb128 0x15
 3930 04b3 81020000 		.4byte	.LASF53
 3931 04b7 01       		.byte	0x1
 3932 04b8 BB       		.byte	0xbb
 3933 04b9 68000000 		.4byte	0x68
 3934 04bd 03       		.uleb128 0x3
 3935 04be 91       		.byte	0x91
 3936 04bf 947F     		.sleb128 -108
 3937 04c1 15       		.uleb128 0x15
 3938 04c2 A3010000 		.4byte	.LASF54
 3939 04c6 01       		.byte	0x1
 3940 04c7 BC       		.byte	0xbc
 3941 04c8 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 81


 3942 04cc 03       		.uleb128 0x3
 3943 04cd 91       		.byte	0x91
 3944 04ce 907F     		.sleb128 -112
 3945 04d0 00       		.byte	0
 3946 04d1 00       		.byte	0
 3947 04d2 00       		.byte	0
 3948 04d3 0F       		.uleb128 0xf
 3949 04d4 68000000 		.4byte	0x68
 3950 04d8 E9040000 		.4byte	0x4e9
 3951 04dc 10       		.uleb128 0x10
 3952 04dd 7D000000 		.4byte	0x7d
 3953 04e1 0E       		.byte	0xe
 3954 04e2 10       		.uleb128 0x10
 3955 04e3 7D000000 		.4byte	0x7d
 3956 04e7 12       		.byte	0x12
 3957 04e8 00       		.byte	0
 3958 04e9 0F       		.uleb128 0xf
 3959 04ea D5020000 		.4byte	0x2d5
 3960 04ee FA040000 		.4byte	0x4fa
 3961 04f2 18       		.uleb128 0x18
 3962 04f3 7D000000 		.4byte	0x7d
 3963 04f7 1C01     		.2byte	0x11c
 3964 04f9 00       		.byte	0
 3965 04fa 11       		.uleb128 0x11
 3966 04fb 04       		.byte	0x4
 3967 04fc 47010000 		.4byte	0x147
 3968 0500 0B       		.uleb128 0xb
 3969 0501 8F020000 		.4byte	.LASF56
 3970 0505 01       		.byte	0x1
 3971 0506 D7       		.byte	0xd7
 3972 0507 00000000 		.4byte	.LFB5
 3973 050b 6C060000 		.4byte	.LFE5-.LFB5
 3974 050f 01       		.uleb128 0x1
 3975 0510 9C       		.byte	0x9c
 3976 0511 A4060000 		.4byte	0x6a4
 3977 0515 0C       		.uleb128 0xc
 3978 0516 6D617000 		.ascii	"map\000"
 3979 051a 01       		.byte	0x1
 3980 051b D7       		.byte	0xd7
 3981 051c CC010000 		.4byte	0x1cc
 3982 0520 03       		.uleb128 0x3
 3983 0521 91       		.byte	0x91
 3984 0522 AC7F     		.sleb128 -84
 3985 0524 14       		.uleb128 0x14
 3986 0525 A1030000 		.4byte	.LASF57
 3987 0529 01       		.byte	0x1
 3988 052a D7       		.byte	0xd7
 3989 052b 68000000 		.4byte	0x68
 3990 052f 03       		.uleb128 0x3
 3991 0530 91       		.byte	0x91
 3992 0531 A87F     		.sleb128 -88
 3993 0533 14       		.uleb128 0x14
 3994 0534 69040000 		.4byte	.LASF58
 3995 0538 01       		.byte	0x1
 3996 0539 D7       		.byte	0xd7
 3997 053a 47010000 		.4byte	0x147
 3998 053e 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 82


 3999 053f 91       		.byte	0x91
 4000 0540 A07F     		.sleb128 -96
 4001 0542 14       		.uleb128 0x14
 4002 0543 82030000 		.4byte	.LASF59
 4003 0547 01       		.byte	0x1
 4004 0548 D7       		.byte	0xd7
 4005 0549 47010000 		.4byte	0x147
 4006 054d 02       		.uleb128 0x2
 4007 054e 91       		.byte	0x91
 4008 054f 00       		.sleb128 0
 4009 0550 15       		.uleb128 0x15
 4010 0551 BD020000 		.4byte	.LASF49
 4011 0555 01       		.byte	0x1
 4012 0556 D8       		.byte	0xd8
 4013 0557 68000000 		.4byte	0x68
 4014 055b 02       		.uleb128 0x2
 4015 055c 91       		.byte	0x91
 4016 055d 74       		.sleb128 -12
 4017 055e 15       		.uleb128 0x15
 4018 055f B6010000 		.4byte	.LASF50
 4019 0563 01       		.byte	0x1
 4020 0564 D9       		.byte	0xd9
 4021 0565 68000000 		.4byte	0x68
 4022 0569 02       		.uleb128 0x2
 4023 056a 91       		.byte	0x91
 4024 056b 70       		.sleb128 -16
 4025 056c 15       		.uleb128 0x15
 4026 056d AA030000 		.4byte	.LASF60
 4027 0571 01       		.byte	0x1
 4028 0572 DA       		.byte	0xda
 4029 0573 68000000 		.4byte	0x68
 4030 0577 02       		.uleb128 0x2
 4031 0578 91       		.byte	0x91
 4032 0579 6C       		.sleb128 -20
 4033 057a 15       		.uleb128 0x15
 4034 057b 4F020000 		.4byte	.LASF61
 4035 057f 01       		.byte	0x1
 4036 0580 DB       		.byte	0xdb
 4037 0581 68000000 		.4byte	0x68
 4038 0585 03       		.uleb128 0x3
 4039 0586 91       		.byte	0x91
 4040 0587 B47F     		.sleb128 -76
 4041 0589 19       		.uleb128 0x19
 4042 058a 6A00     		.ascii	"j\000"
 4043 058c 01       		.byte	0x1
 4044 058d B201     		.2byte	0x1b2
 4045 058f 68000000 		.4byte	0x68
 4046 0593 03       		.uleb128 0x3
 4047 0594 91       		.byte	0x91
 4048 0595 BC7F     		.sleb128 -68
 4049 0597 16       		.uleb128 0x16
 4050 0598 2E000000 		.4byte	.LBB18
 4051 059c 18050000 		.4byte	.LBE18-.LBB18
 4052 05a0 8B060000 		.4byte	0x68b
 4053 05a4 15       		.uleb128 0x15
 4054 05a5 2D030000 		.4byte	.LASF62
 4055 05a9 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 83


 4056 05aa E1       		.byte	0xe1
 4057 05ab BE000000 		.4byte	0xbe
 4058 05af 02       		.uleb128 0x2
 4059 05b0 91       		.byte	0x91
 4060 05b1 6B       		.sleb128 -21
 4061 05b2 15       		.uleb128 0x15
 4062 05b3 33010000 		.4byte	.LASF28
 4063 05b7 01       		.byte	0x1
 4064 05b8 E2       		.byte	0xe2
 4065 05b9 68000000 		.4byte	0x68
 4066 05bd 02       		.uleb128 0x2
 4067 05be 91       		.byte	0x91
 4068 05bf 64       		.sleb128 -28
 4069 05c0 15       		.uleb128 0x15
 4070 05c1 C2040000 		.4byte	.LASF63
 4071 05c5 01       		.byte	0x1
 4072 05c6 E3       		.byte	0xe3
 4073 05c7 68000000 		.4byte	0x68
 4074 05cb 02       		.uleb128 0x2
 4075 05cc 91       		.byte	0x91
 4076 05cd 60       		.sleb128 -32
 4077 05ce 17       		.uleb128 0x17
 4078 05cf 18000000 		.4byte	.Ldebug_ranges0+0x18
 4079 05d3 FE050000 		.4byte	0x5fe
 4080 05d7 1A       		.uleb128 0x1a
 4081 05d8 11030000 		.4byte	.LASF64
 4082 05dc 01       		.byte	0x1
 4083 05dd 0301     		.2byte	0x103
 4084 05df 68000000 		.4byte	0x68
 4085 05e3 02       		.uleb128 0x2
 4086 05e4 91       		.byte	0x91
 4087 05e5 5C       		.sleb128 -36
 4088 05e6 0D       		.uleb128 0xd
 4089 05e7 8E010000 		.4byte	.LBB20
 4090 05eb 50000000 		.4byte	.LBE20-.LBB20
 4091 05ef 19       		.uleb128 0x19
 4092 05f0 6900     		.ascii	"i\000"
 4093 05f2 01       		.byte	0x1
 4094 05f3 0501     		.2byte	0x105
 4095 05f5 68000000 		.4byte	0x68
 4096 05f9 02       		.uleb128 0x2
 4097 05fa 91       		.byte	0x91
 4098 05fb 58       		.sleb128 -40
 4099 05fc 00       		.byte	0
 4100 05fd 00       		.byte	0
 4101 05fe 17       		.uleb128 0x17
 4102 05ff 30000000 		.4byte	.Ldebug_ranges0+0x30
 4103 0603 2E060000 		.4byte	0x62e
 4104 0607 1A       		.uleb128 0x1a
 4105 0608 11030000 		.4byte	.LASF64
 4106 060c 01       		.byte	0x1
 4107 060d 2D01     		.2byte	0x12d
 4108 060f 68000000 		.4byte	0x68
 4109 0613 02       		.uleb128 0x2
 4110 0614 91       		.byte	0x91
 4111 0615 54       		.sleb128 -44
 4112 0616 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 84


 4113 0617 66020000 		.4byte	.LBB23
 4114 061b 4C000000 		.4byte	.LBE23-.LBB23
 4115 061f 19       		.uleb128 0x19
 4116 0620 6900     		.ascii	"i\000"
 4117 0622 01       		.byte	0x1
 4118 0623 2F01     		.2byte	0x12f
 4119 0625 68000000 		.4byte	0x68
 4120 0629 02       		.uleb128 0x2
 4121 062a 91       		.byte	0x91
 4122 062b 50       		.sleb128 -48
 4123 062c 00       		.byte	0
 4124 062d 00       		.byte	0
 4125 062e 17       		.uleb128 0x17
 4126 062f 48000000 		.4byte	.Ldebug_ranges0+0x48
 4127 0633 5E060000 		.4byte	0x65e
 4128 0637 1A       		.uleb128 0x1a
 4129 0638 11030000 		.4byte	.LASF64
 4130 063c 01       		.byte	0x1
 4131 063d 5A01     		.2byte	0x15a
 4132 063f 68000000 		.4byte	0x68
 4133 0643 02       		.uleb128 0x2
 4134 0644 91       		.byte	0x91
 4135 0645 4C       		.sleb128 -52
 4136 0646 0D       		.uleb128 0xd
 4137 0647 5A030000 		.4byte	.LBB26
 4138 064b 4E000000 		.4byte	.LBE26-.LBB26
 4139 064f 19       		.uleb128 0x19
 4140 0650 6900     		.ascii	"i\000"
 4141 0652 01       		.byte	0x1
 4142 0653 5C01     		.2byte	0x15c
 4143 0655 68000000 		.4byte	0x68
 4144 0659 02       		.uleb128 0x2
 4145 065a 91       		.byte	0x91
 4146 065b 48       		.sleb128 -56
 4147 065c 00       		.byte	0
 4148 065d 00       		.byte	0
 4149 065e 1B       		.uleb128 0x1b
 4150 065f 60000000 		.4byte	.Ldebug_ranges0+0x60
 4151 0663 1A       		.uleb128 0x1a
 4152 0664 11030000 		.4byte	.LASF64
 4153 0668 01       		.byte	0x1
 4154 0669 8601     		.2byte	0x186
 4155 066b 68000000 		.4byte	0x68
 4156 066f 02       		.uleb128 0x2
 4157 0670 91       		.byte	0x91
 4158 0671 44       		.sleb128 -60
 4159 0672 0D       		.uleb128 0xd
 4160 0673 3C040000 		.4byte	.LBB29
 4161 0677 4A000000 		.4byte	.LBE29-.LBB29
 4162 067b 19       		.uleb128 0x19
 4163 067c 6900     		.ascii	"i\000"
 4164 067e 01       		.byte	0x1
 4165 067f 8801     		.2byte	0x188
 4166 0681 68000000 		.4byte	0x68
 4167 0685 02       		.uleb128 0x2
 4168 0686 91       		.byte	0x91
 4169 0687 40       		.sleb128 -64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 85


 4170 0688 00       		.byte	0
 4171 0689 00       		.byte	0
 4172 068a 00       		.byte	0
 4173 068b 0D       		.uleb128 0xd
 4174 068c 52050000 		.4byte	.LBB31
 4175 0690 08010000 		.4byte	.LBE31-.LBB31
 4176 0694 19       		.uleb128 0x19
 4177 0695 6900     		.ascii	"i\000"
 4178 0697 01       		.byte	0x1
 4179 0698 B401     		.2byte	0x1b4
 4180 069a 68000000 		.4byte	0x68
 4181 069e 03       		.uleb128 0x3
 4182 069f 91       		.byte	0x91
 4183 06a0 B87F     		.sleb128 -72
 4184 06a2 00       		.byte	0
 4185 06a3 00       		.byte	0
 4186 06a4 1C       		.uleb128 0x1c
 4187 06a5 10020000 		.4byte	.LASF66
 4188 06a9 01       		.byte	0x1
 4189 06aa C301     		.2byte	0x1c3
 4190 06ac 8B000000 		.4byte	0x8b
 4191 06b0 00000000 		.4byte	.LFB6
 4192 06b4 0C010000 		.4byte	.LFE6-.LFB6
 4193 06b8 01       		.uleb128 0x1
 4194 06b9 9C       		.byte	0x9c
 4195 06ba DD060000 		.4byte	0x6dd
 4196 06be 1D       		.uleb128 0x1d
 4197 06bf BD020000 		.4byte	.LASF49
 4198 06c3 01       		.byte	0x1
 4199 06c4 C301     		.2byte	0x1c3
 4200 06c6 68000000 		.4byte	0x68
 4201 06ca 02       		.uleb128 0x2
 4202 06cb 91       		.byte	0x91
 4203 06cc 74       		.sleb128 -12
 4204 06cd 1D       		.uleb128 0x1d
 4205 06ce B6010000 		.4byte	.LASF50
 4206 06d2 01       		.byte	0x1
 4207 06d3 C301     		.2byte	0x1c3
 4208 06d5 68000000 		.4byte	0x68
 4209 06d9 02       		.uleb128 0x2
 4210 06da 91       		.byte	0x91
 4211 06db 70       		.sleb128 -16
 4212 06dc 00       		.byte	0
 4213 06dd 1E       		.uleb128 0x1e
 4214 06de C8020000 		.4byte	.LASF67
 4215 06e2 01       		.byte	0x1
 4216 06e3 D401     		.2byte	0x1d4
 4217 06e5 00000000 		.4byte	.LFB7
 4218 06e9 24010000 		.4byte	.LFE7-.LFB7
 4219 06ed 01       		.uleb128 0x1
 4220 06ee 9C       		.byte	0x9c
 4221 06ef 21070000 		.4byte	0x721
 4222 06f3 1D       		.uleb128 0x1d
 4223 06f4 39040000 		.4byte	.LASF68
 4224 06f8 01       		.byte	0x1
 4225 06f9 D401     		.2byte	0x1d4
 4226 06fb 96000000 		.4byte	0x96
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 86


 4227 06ff 02       		.uleb128 0x2
 4228 0700 91       		.byte	0x91
 4229 0701 77       		.sleb128 -9
 4230 0702 1D       		.uleb128 0x1d
 4231 0703 BD020000 		.4byte	.LASF49
 4232 0707 01       		.byte	0x1
 4233 0708 D401     		.2byte	0x1d4
 4234 070a 68000000 		.4byte	0x68
 4235 070e 02       		.uleb128 0x2
 4236 070f 91       		.byte	0x91
 4237 0710 70       		.sleb128 -16
 4238 0711 1D       		.uleb128 0x1d
 4239 0712 B6010000 		.4byte	.LASF50
 4240 0716 01       		.byte	0x1
 4241 0717 D401     		.2byte	0x1d4
 4242 0719 68000000 		.4byte	0x68
 4243 071d 02       		.uleb128 0x2
 4244 071e 91       		.byte	0x91
 4245 071f 6C       		.sleb128 -20
 4246 0720 00       		.byte	0
 4247 0721 1C       		.uleb128 0x1c
 4248 0722 63030000 		.4byte	.LASF69
 4249 0726 01       		.byte	0x1
 4250 0727 0802     		.2byte	0x208
 4251 0729 8B000000 		.4byte	0x8b
 4252 072d 00000000 		.4byte	.LFB8
 4253 0731 9C000000 		.4byte	.LFE8-.LFB8
 4254 0735 01       		.uleb128 0x1
 4255 0736 9C       		.byte	0x9c
 4256 0737 5A070000 		.4byte	0x75a
 4257 073b 1D       		.uleb128 0x1d
 4258 073c F5010000 		.4byte	.LASF70
 4259 0740 01       		.byte	0x1
 4260 0741 0802     		.2byte	0x208
 4261 0743 68000000 		.4byte	0x68
 4262 0747 02       		.uleb128 0x2
 4263 0748 91       		.byte	0x91
 4264 0749 74       		.sleb128 -12
 4265 074a 1D       		.uleb128 0x1d
 4266 074b B3040000 		.4byte	.LASF71
 4267 074f 01       		.byte	0x1
 4268 0750 0802     		.2byte	0x208
 4269 0752 68000000 		.4byte	0x68
 4270 0756 02       		.uleb128 0x2
 4271 0757 91       		.byte	0x91
 4272 0758 70       		.sleb128 -16
 4273 0759 00       		.byte	0
 4274 075a 1F       		.uleb128 0x1f
 4275 075b 96040000 		.4byte	.LASF83
 4276 075f 01       		.byte	0x1
 4277 0760 1702     		.2byte	0x217
 4278 0762 8B000000 		.4byte	0x8b
 4279 0766 00000000 		.4byte	.LFB9
 4280 076a 18000000 		.4byte	.LFE9-.LFB9
 4281 076e 01       		.uleb128 0x1
 4282 076f 9C       		.byte	0x9c
 4283 0770 20       		.uleb128 0x20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 87


 4284 0771 77040000 		.4byte	.LASF72
 4285 0775 01       		.byte	0x1
 4286 0776 1B02     		.2byte	0x21b
 4287 0778 E3070000 		.4byte	0x7e3
 4288 077c 00000000 		.4byte	.LFB10
 4289 0780 98000000 		.4byte	.LFE10-.LFB10
 4290 0784 01       		.uleb128 0x1
 4291 0785 9C       		.byte	0x9c
 4292 0786 E3070000 		.4byte	0x7e3
 4293 078a 21       		.uleb128 0x21
 4294 078b 6D617000 		.ascii	"map\000"
 4295 078f 01       		.byte	0x1
 4296 0790 1B02     		.2byte	0x21b
 4297 0792 CC010000 		.4byte	0x1cc
 4298 0796 02       		.uleb128 0x2
 4299 0797 91       		.byte	0x91
 4300 0798 5C       		.sleb128 -36
 4301 0799 1D       		.uleb128 0x1d
 4302 079a F8030000 		.4byte	.LASF73
 4303 079e 01       		.byte	0x1
 4304 079f 1B02     		.2byte	0x21b
 4305 07a1 F9070000 		.4byte	0x7f9
 4306 07a5 02       		.uleb128 0x2
 4307 07a6 91       		.byte	0x91
 4308 07a7 58       		.sleb128 -40
 4309 07a8 21       		.uleb128 0x21
 4310 07a9 6900     		.ascii	"i\000"
 4311 07ab 01       		.byte	0x1
 4312 07ac 1B02     		.2byte	0x21b
 4313 07ae 68000000 		.4byte	0x68
 4314 07b2 02       		.uleb128 0x2
 4315 07b3 91       		.byte	0x91
 4316 07b4 54       		.sleb128 -44
 4317 07b5 1D       		.uleb128 0x1d
 4318 07b6 E8020000 		.4byte	.LASF74
 4319 07ba 01       		.byte	0x1
 4320 07bb 1B02     		.2byte	0x21b
 4321 07bd 96000000 		.4byte	0x96
 4322 07c1 02       		.uleb128 0x2
 4323 07c2 91       		.byte	0x91
 4324 07c3 53       		.sleb128 -45
 4325 07c4 1A       		.uleb128 0x1a
 4326 07c5 69040000 		.4byte	.LASF58
 4327 07c9 01       		.byte	0x1
 4328 07ca 1F02     		.2byte	0x21f
 4329 07cc 47010000 		.4byte	0x147
 4330 07d0 02       		.uleb128 0x2
 4331 07d1 91       		.byte	0x91
 4332 07d2 68       		.sleb128 -24
 4333 07d3 1A       		.uleb128 0x1a
 4334 07d4 82030000 		.4byte	.LASF59
 4335 07d8 01       		.byte	0x1
 4336 07d9 1F02     		.2byte	0x21f
 4337 07db 47010000 		.4byte	0x147
 4338 07df 02       		.uleb128 0x2
 4339 07e0 91       		.byte	0x91
 4340 07e1 60       		.sleb128 -32
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 88


 4341 07e2 00       		.byte	0
 4342 07e3 11       		.uleb128 0x11
 4343 07e4 04       		.byte	0x4
 4344 07e5 3C010000 		.4byte	0x13c
 4345 07e9 0F       		.uleb128 0xf
 4346 07ea 68000000 		.4byte	0x68
 4347 07ee F9070000 		.4byte	0x7f9
 4348 07f2 10       		.uleb128 0x10
 4349 07f3 7D000000 		.4byte	0x7d
 4350 07f7 01       		.byte	0x1
 4351 07f8 00       		.byte	0
 4352 07f9 11       		.uleb128 0x11
 4353 07fa 04       		.byte	0x4
 4354 07fb E9070000 		.4byte	0x7e9
 4355 07ff 0F       		.uleb128 0xf
 4356 0800 3C010000 		.4byte	0x13c
 4357 0804 10080000 		.4byte	0x810
 4358 0808 18       		.uleb128 0x18
 4359 0809 7D000000 		.4byte	0x7d
 4360 080d 1C01     		.2byte	0x11c
 4361 080f 00       		.byte	0
 4362 0810 15       		.uleb128 0x15
 4363 0811 FF010000 		.4byte	.LASF75
 4364 0815 01       		.byte	0x1
 4365 0816 18       		.byte	0x18
 4366 0817 FF070000 		.4byte	0x7ff
 4367 081b 05       		.uleb128 0x5
 4368 081c 03       		.byte	0x3
 4369 081d 00000000 		.4byte	instructionsList
 4370 0821 15       		.uleb128 0x15
 4371 0822 F4020000 		.4byte	.LASF76
 4372 0826 01       		.byte	0x1
 4373 0827 19       		.byte	0x19
 4374 0828 FF070000 		.4byte	0x7ff
 4375 082c 05       		.uleb128 0x5
 4376 082d 03       		.byte	0x3
 4377 082e 44160000 		.4byte	finalInstructionList
 4378 0832 15       		.uleb128 0x15
 4379 0833 A1030000 		.4byte	.LASF57
 4380 0837 01       		.byte	0x1
 4381 0838 1A       		.byte	0x1a
 4382 0839 68000000 		.4byte	0x68
 4383 083d 05       		.uleb128 0x5
 4384 083e 03       		.byte	0x3
 4385 083f 882C0000 		.4byte	numSteps
 4386 0843 22       		.uleb128 0x22
 4387 0844 6D617000 		.ascii	"map\000"
 4388 0848 01       		.byte	0x1
 4389 0849 22       		.byte	0x22
 4390 084a D3040000 		.4byte	0x4d3
 4391 084e 05       		.uleb128 0x5
 4392 084f 03       		.byte	0x3
 4393 0850 00000000 		.4byte	map
 4394 0854 0F       		.uleb128 0xf
 4395 0855 68000000 		.4byte	0x68
 4396 0859 6A080000 		.4byte	0x86a
 4397 085d 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 89


 4398 085e 7D000000 		.4byte	0x7d
 4399 0862 05       		.byte	0x5
 4400 0863 10       		.uleb128 0x10
 4401 0864 7D000000 		.4byte	0x7d
 4402 0868 01       		.byte	0x1
 4403 0869 00       		.byte	0
 4404 086a 23       		.uleb128 0x23
 4405 086b F8030000 		.4byte	.LASF73
 4406 086f 01       		.byte	0x1
 4407 0870 37       		.byte	0x37
 4408 0871 54080000 		.4byte	0x854
 4409 0875 05       		.uleb128 0x5
 4410 0876 03       		.byte	0x3
 4411 0877 00000000 		.4byte	food_list
 4412 087b 23       		.uleb128 0x23
 4413 087c D6030000 		.4byte	.LASF77
 4414 0880 01       		.byte	0x1
 4415 0881 16       		.byte	0x16
 4416 0882 96000000 		.4byte	0x96
 4417 0886 05       		.uleb128 0x5
 4418 0887 03       		.byte	0x3
 4419 0888 00000000 		.4byte	previousRobotOrientation
 4420 088c 23       		.uleb128 0x23
 4421 088d 07040000 		.4byte	.LASF78
 4422 0891 01       		.byte	0x1
 4423 0892 16       		.byte	0x16
 4424 0893 96000000 		.4byte	0x96
 4425 0897 05       		.uleb128 0x5
 4426 0898 03       		.byte	0x3
 4427 0899 00000000 		.4byte	currentRobotOrientation
 4428 089d 0F       		.uleb128 0xf
 4429 089e 47010000 		.4byte	0x147
 4430 08a2 AD080000 		.4byte	0x8ad
 4431 08a6 10       		.uleb128 0x10
 4432 08a7 7D000000 		.4byte	0x7d
 4433 08ab 03       		.byte	0x3
 4434 08ac 00       		.byte	0
 4435 08ad 23       		.uleb128 0x23
 4436 08ae AD040000 		.4byte	.LASF79
 4437 08b2 01       		.byte	0x1
 4438 08b3 54       		.byte	0x54
 4439 08b4 9D080000 		.4byte	0x89d
 4440 08b8 05       		.uleb128 0x5
 4441 08b9 03       		.byte	0x3
 4442 08ba 00000000 		.4byte	moves
 4443 08be 23       		.uleb128 0x23
 4444 08bf D3040000 		.4byte	.LASF27
 4445 08c3 01       		.byte	0x1
 4446 08c4 D3       		.byte	0xd3
 4447 08c5 68000000 		.4byte	0x68
 4448 08c9 05       		.uleb128 0x5
 4449 08ca 03       		.byte	0x3
 4450 08cb 00000000 		.4byte	ignoreR
 4451 08cf 23       		.uleb128 0x23
 4452 08d0 CB040000 		.4byte	.LASF26
 4453 08d4 01       		.byte	0x1
 4454 08d5 D3       		.byte	0xd3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 90


 4455 08d6 68000000 		.4byte	0x68
 4456 08da 05       		.uleb128 0x5
 4457 08db 03       		.byte	0x3
 4458 08dc 00000000 		.4byte	ignoreL
 4459 08e0 23       		.uleb128 0x23
 4460 08e1 33010000 		.4byte	.LASF28
 4461 08e5 01       		.byte	0x1
 4462 08e6 D4       		.byte	0xd4
 4463 08e7 68000000 		.4byte	0x68
 4464 08eb 05       		.uleb128 0x5
 4465 08ec 03       		.byte	0x3
 4466 08ed 00000000 		.4byte	distanceToTarget
 4467 08f1 00       		.byte	0
 4468              		.section	.debug_abbrev,"",%progbits
 4469              	.Ldebug_abbrev0:
 4470 0000 01       		.uleb128 0x1
 4471 0001 11       		.uleb128 0x11
 4472 0002 01       		.byte	0x1
 4473 0003 25       		.uleb128 0x25
 4474 0004 0E       		.uleb128 0xe
 4475 0005 13       		.uleb128 0x13
 4476 0006 0B       		.uleb128 0xb
 4477 0007 03       		.uleb128 0x3
 4478 0008 0E       		.uleb128 0xe
 4479 0009 1B       		.uleb128 0x1b
 4480 000a 0E       		.uleb128 0xe
 4481 000b 55       		.uleb128 0x55
 4482 000c 17       		.uleb128 0x17
 4483 000d 11       		.uleb128 0x11
 4484 000e 01       		.uleb128 0x1
 4485 000f 10       		.uleb128 0x10
 4486 0010 17       		.uleb128 0x17
 4487 0011 00       		.byte	0
 4488 0012 00       		.byte	0
 4489 0013 02       		.uleb128 0x2
 4490 0014 24       		.uleb128 0x24
 4491 0015 00       		.byte	0
 4492 0016 0B       		.uleb128 0xb
 4493 0017 0B       		.uleb128 0xb
 4494 0018 3E       		.uleb128 0x3e
 4495 0019 0B       		.uleb128 0xb
 4496 001a 03       		.uleb128 0x3
 4497 001b 0E       		.uleb128 0xe
 4498 001c 00       		.byte	0
 4499 001d 00       		.byte	0
 4500 001e 03       		.uleb128 0x3
 4501 001f 16       		.uleb128 0x16
 4502 0020 00       		.byte	0
 4503 0021 03       		.uleb128 0x3
 4504 0022 0E       		.uleb128 0xe
 4505 0023 3A       		.uleb128 0x3a
 4506 0024 0B       		.uleb128 0xb
 4507 0025 3B       		.uleb128 0x3b
 4508 0026 0B       		.uleb128 0xb
 4509 0027 49       		.uleb128 0x49
 4510 0028 13       		.uleb128 0x13
 4511 0029 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 91


 4512 002a 00       		.byte	0
 4513 002b 04       		.uleb128 0x4
 4514 002c 24       		.uleb128 0x24
 4515 002d 00       		.byte	0
 4516 002e 0B       		.uleb128 0xb
 4517 002f 0B       		.uleb128 0xb
 4518 0030 3E       		.uleb128 0x3e
 4519 0031 0B       		.uleb128 0xb
 4520 0032 03       		.uleb128 0x3
 4521 0033 08       		.uleb128 0x8
 4522 0034 00       		.byte	0
 4523 0035 00       		.byte	0
 4524 0036 05       		.uleb128 0x5
 4525 0037 04       		.uleb128 0x4
 4526 0038 01       		.byte	0x1
 4527 0039 03       		.uleb128 0x3
 4528 003a 0E       		.uleb128 0xe
 4529 003b 0B       		.uleb128 0xb
 4530 003c 0B       		.uleb128 0xb
 4531 003d 49       		.uleb128 0x49
 4532 003e 13       		.uleb128 0x13
 4533 003f 3A       		.uleb128 0x3a
 4534 0040 0B       		.uleb128 0xb
 4535 0041 3B       		.uleb128 0x3b
 4536 0042 0B       		.uleb128 0xb
 4537 0043 01       		.uleb128 0x1
 4538 0044 13       		.uleb128 0x13
 4539 0045 00       		.byte	0
 4540 0046 00       		.byte	0
 4541 0047 06       		.uleb128 0x6
 4542 0048 28       		.uleb128 0x28
 4543 0049 00       		.byte	0
 4544 004a 03       		.uleb128 0x3
 4545 004b 08       		.uleb128 0x8
 4546 004c 1C       		.uleb128 0x1c
 4547 004d 0B       		.uleb128 0xb
 4548 004e 00       		.byte	0
 4549 004f 00       		.byte	0
 4550 0050 07       		.uleb128 0x7
 4551 0051 28       		.uleb128 0x28
 4552 0052 00       		.byte	0
 4553 0053 03       		.uleb128 0x3
 4554 0054 0E       		.uleb128 0xe
 4555 0055 1C       		.uleb128 0x1c
 4556 0056 0B       		.uleb128 0xb
 4557 0057 00       		.byte	0
 4558 0058 00       		.byte	0
 4559 0059 08       		.uleb128 0x8
 4560 005a 13       		.uleb128 0x13
 4561 005b 01       		.byte	0x1
 4562 005c 03       		.uleb128 0x3
 4563 005d 0E       		.uleb128 0xe
 4564 005e 0B       		.uleb128 0xb
 4565 005f 0B       		.uleb128 0xb
 4566 0060 3A       		.uleb128 0x3a
 4567 0061 0B       		.uleb128 0xb
 4568 0062 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 92


 4569 0063 0B       		.uleb128 0xb
 4570 0064 01       		.uleb128 0x1
 4571 0065 13       		.uleb128 0x13
 4572 0066 00       		.byte	0
 4573 0067 00       		.byte	0
 4574 0068 09       		.uleb128 0x9
 4575 0069 0D       		.uleb128 0xd
 4576 006a 00       		.byte	0
 4577 006b 03       		.uleb128 0x3
 4578 006c 0E       		.uleb128 0xe
 4579 006d 3A       		.uleb128 0x3a
 4580 006e 0B       		.uleb128 0xb
 4581 006f 3B       		.uleb128 0x3b
 4582 0070 0B       		.uleb128 0xb
 4583 0071 49       		.uleb128 0x49
 4584 0072 13       		.uleb128 0x13
 4585 0073 38       		.uleb128 0x38
 4586 0074 0B       		.uleb128 0xb
 4587 0075 00       		.byte	0
 4588 0076 00       		.byte	0
 4589 0077 0A       		.uleb128 0xa
 4590 0078 0D       		.uleb128 0xd
 4591 0079 00       		.byte	0
 4592 007a 03       		.uleb128 0x3
 4593 007b 08       		.uleb128 0x8
 4594 007c 3A       		.uleb128 0x3a
 4595 007d 0B       		.uleb128 0xb
 4596 007e 3B       		.uleb128 0x3b
 4597 007f 0B       		.uleb128 0xb
 4598 0080 49       		.uleb128 0x49
 4599 0081 13       		.uleb128 0x13
 4600 0082 38       		.uleb128 0x38
 4601 0083 0B       		.uleb128 0xb
 4602 0084 00       		.byte	0
 4603 0085 00       		.byte	0
 4604 0086 0B       		.uleb128 0xb
 4605 0087 2E       		.uleb128 0x2e
 4606 0088 01       		.byte	0x1
 4607 0089 3F       		.uleb128 0x3f
 4608 008a 19       		.uleb128 0x19
 4609 008b 03       		.uleb128 0x3
 4610 008c 0E       		.uleb128 0xe
 4611 008d 3A       		.uleb128 0x3a
 4612 008e 0B       		.uleb128 0xb
 4613 008f 3B       		.uleb128 0x3b
 4614 0090 0B       		.uleb128 0xb
 4615 0091 27       		.uleb128 0x27
 4616 0092 19       		.uleb128 0x19
 4617 0093 11       		.uleb128 0x11
 4618 0094 01       		.uleb128 0x1
 4619 0095 12       		.uleb128 0x12
 4620 0096 06       		.uleb128 0x6
 4621 0097 40       		.uleb128 0x40
 4622 0098 18       		.uleb128 0x18
 4623 0099 9642     		.uleb128 0x2116
 4624 009b 19       		.uleb128 0x19
 4625 009c 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 93


 4626 009d 13       		.uleb128 0x13
 4627 009e 00       		.byte	0
 4628 009f 00       		.byte	0
 4629 00a0 0C       		.uleb128 0xc
 4630 00a1 05       		.uleb128 0x5
 4631 00a2 00       		.byte	0
 4632 00a3 03       		.uleb128 0x3
 4633 00a4 08       		.uleb128 0x8
 4634 00a5 3A       		.uleb128 0x3a
 4635 00a6 0B       		.uleb128 0xb
 4636 00a7 3B       		.uleb128 0x3b
 4637 00a8 0B       		.uleb128 0xb
 4638 00a9 49       		.uleb128 0x49
 4639 00aa 13       		.uleb128 0x13
 4640 00ab 02       		.uleb128 0x2
 4641 00ac 18       		.uleb128 0x18
 4642 00ad 00       		.byte	0
 4643 00ae 00       		.byte	0
 4644 00af 0D       		.uleb128 0xd
 4645 00b0 0B       		.uleb128 0xb
 4646 00b1 01       		.byte	0x1
 4647 00b2 11       		.uleb128 0x11
 4648 00b3 01       		.uleb128 0x1
 4649 00b4 12       		.uleb128 0x12
 4650 00b5 06       		.uleb128 0x6
 4651 00b6 00       		.byte	0
 4652 00b7 00       		.byte	0
 4653 00b8 0E       		.uleb128 0xe
 4654 00b9 34       		.uleb128 0x34
 4655 00ba 00       		.byte	0
 4656 00bb 03       		.uleb128 0x3
 4657 00bc 08       		.uleb128 0x8
 4658 00bd 3A       		.uleb128 0x3a
 4659 00be 0B       		.uleb128 0xb
 4660 00bf 3B       		.uleb128 0x3b
 4661 00c0 0B       		.uleb128 0xb
 4662 00c1 49       		.uleb128 0x49
 4663 00c2 13       		.uleb128 0x13
 4664 00c3 02       		.uleb128 0x2
 4665 00c4 18       		.uleb128 0x18
 4666 00c5 00       		.byte	0
 4667 00c6 00       		.byte	0
 4668 00c7 0F       		.uleb128 0xf
 4669 00c8 01       		.uleb128 0x1
 4670 00c9 01       		.byte	0x1
 4671 00ca 49       		.uleb128 0x49
 4672 00cb 13       		.uleb128 0x13
 4673 00cc 01       		.uleb128 0x1
 4674 00cd 13       		.uleb128 0x13
 4675 00ce 00       		.byte	0
 4676 00cf 00       		.byte	0
 4677 00d0 10       		.uleb128 0x10
 4678 00d1 21       		.uleb128 0x21
 4679 00d2 00       		.byte	0
 4680 00d3 49       		.uleb128 0x49
 4681 00d4 13       		.uleb128 0x13
 4682 00d5 2F       		.uleb128 0x2f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 94


 4683 00d6 0B       		.uleb128 0xb
 4684 00d7 00       		.byte	0
 4685 00d8 00       		.byte	0
 4686 00d9 11       		.uleb128 0x11
 4687 00da 0F       		.uleb128 0xf
 4688 00db 00       		.byte	0
 4689 00dc 0B       		.uleb128 0xb
 4690 00dd 0B       		.uleb128 0xb
 4691 00de 49       		.uleb128 0x49
 4692 00df 13       		.uleb128 0x13
 4693 00e0 00       		.byte	0
 4694 00e1 00       		.byte	0
 4695 00e2 12       		.uleb128 0x12
 4696 00e3 2E       		.uleb128 0x2e
 4697 00e4 01       		.byte	0x1
 4698 00e5 3F       		.uleb128 0x3f
 4699 00e6 19       		.uleb128 0x19
 4700 00e7 03       		.uleb128 0x3
 4701 00e8 0E       		.uleb128 0xe
 4702 00e9 3A       		.uleb128 0x3a
 4703 00ea 0B       		.uleb128 0xb
 4704 00eb 3B       		.uleb128 0x3b
 4705 00ec 0B       		.uleb128 0xb
 4706 00ed 27       		.uleb128 0x27
 4707 00ee 19       		.uleb128 0x19
 4708 00ef 11       		.uleb128 0x11
 4709 00f0 01       		.uleb128 0x1
 4710 00f1 12       		.uleb128 0x12
 4711 00f2 06       		.uleb128 0x6
 4712 00f3 40       		.uleb128 0x40
 4713 00f4 18       		.uleb128 0x18
 4714 00f5 9742     		.uleb128 0x2117
 4715 00f7 19       		.uleb128 0x19
 4716 00f8 01       		.uleb128 0x1
 4717 00f9 13       		.uleb128 0x13
 4718 00fa 00       		.byte	0
 4719 00fb 00       		.byte	0
 4720 00fc 13       		.uleb128 0x13
 4721 00fd 2E       		.uleb128 0x2e
 4722 00fe 01       		.byte	0x1
 4723 00ff 3F       		.uleb128 0x3f
 4724 0100 19       		.uleb128 0x19
 4725 0101 03       		.uleb128 0x3
 4726 0102 0E       		.uleb128 0xe
 4727 0103 3A       		.uleb128 0x3a
 4728 0104 0B       		.uleb128 0xb
 4729 0105 3B       		.uleb128 0x3b
 4730 0106 0B       		.uleb128 0xb
 4731 0107 27       		.uleb128 0x27
 4732 0108 19       		.uleb128 0x19
 4733 0109 49       		.uleb128 0x49
 4734 010a 13       		.uleb128 0x13
 4735 010b 11       		.uleb128 0x11
 4736 010c 01       		.uleb128 0x1
 4737 010d 12       		.uleb128 0x12
 4738 010e 06       		.uleb128 0x6
 4739 010f 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 95


 4740 0110 18       		.uleb128 0x18
 4741 0111 9742     		.uleb128 0x2117
 4742 0113 19       		.uleb128 0x19
 4743 0114 01       		.uleb128 0x1
 4744 0115 13       		.uleb128 0x13
 4745 0116 00       		.byte	0
 4746 0117 00       		.byte	0
 4747 0118 14       		.uleb128 0x14
 4748 0119 05       		.uleb128 0x5
 4749 011a 00       		.byte	0
 4750 011b 03       		.uleb128 0x3
 4751 011c 0E       		.uleb128 0xe
 4752 011d 3A       		.uleb128 0x3a
 4753 011e 0B       		.uleb128 0xb
 4754 011f 3B       		.uleb128 0x3b
 4755 0120 0B       		.uleb128 0xb
 4756 0121 49       		.uleb128 0x49
 4757 0122 13       		.uleb128 0x13
 4758 0123 02       		.uleb128 0x2
 4759 0124 18       		.uleb128 0x18
 4760 0125 00       		.byte	0
 4761 0126 00       		.byte	0
 4762 0127 15       		.uleb128 0x15
 4763 0128 34       		.uleb128 0x34
 4764 0129 00       		.byte	0
 4765 012a 03       		.uleb128 0x3
 4766 012b 0E       		.uleb128 0xe
 4767 012c 3A       		.uleb128 0x3a
 4768 012d 0B       		.uleb128 0xb
 4769 012e 3B       		.uleb128 0x3b
 4770 012f 0B       		.uleb128 0xb
 4771 0130 49       		.uleb128 0x49
 4772 0131 13       		.uleb128 0x13
 4773 0132 02       		.uleb128 0x2
 4774 0133 18       		.uleb128 0x18
 4775 0134 00       		.byte	0
 4776 0135 00       		.byte	0
 4777 0136 16       		.uleb128 0x16
 4778 0137 0B       		.uleb128 0xb
 4779 0138 01       		.byte	0x1
 4780 0139 11       		.uleb128 0x11
 4781 013a 01       		.uleb128 0x1
 4782 013b 12       		.uleb128 0x12
 4783 013c 06       		.uleb128 0x6
 4784 013d 01       		.uleb128 0x1
 4785 013e 13       		.uleb128 0x13
 4786 013f 00       		.byte	0
 4787 0140 00       		.byte	0
 4788 0141 17       		.uleb128 0x17
 4789 0142 0B       		.uleb128 0xb
 4790 0143 01       		.byte	0x1
 4791 0144 55       		.uleb128 0x55
 4792 0145 17       		.uleb128 0x17
 4793 0146 01       		.uleb128 0x1
 4794 0147 13       		.uleb128 0x13
 4795 0148 00       		.byte	0
 4796 0149 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 96


 4797 014a 18       		.uleb128 0x18
 4798 014b 21       		.uleb128 0x21
 4799 014c 00       		.byte	0
 4800 014d 49       		.uleb128 0x49
 4801 014e 13       		.uleb128 0x13
 4802 014f 2F       		.uleb128 0x2f
 4803 0150 05       		.uleb128 0x5
 4804 0151 00       		.byte	0
 4805 0152 00       		.byte	0
 4806 0153 19       		.uleb128 0x19
 4807 0154 34       		.uleb128 0x34
 4808 0155 00       		.byte	0
 4809 0156 03       		.uleb128 0x3
 4810 0157 08       		.uleb128 0x8
 4811 0158 3A       		.uleb128 0x3a
 4812 0159 0B       		.uleb128 0xb
 4813 015a 3B       		.uleb128 0x3b
 4814 015b 05       		.uleb128 0x5
 4815 015c 49       		.uleb128 0x49
 4816 015d 13       		.uleb128 0x13
 4817 015e 02       		.uleb128 0x2
 4818 015f 18       		.uleb128 0x18
 4819 0160 00       		.byte	0
 4820 0161 00       		.byte	0
 4821 0162 1A       		.uleb128 0x1a
 4822 0163 34       		.uleb128 0x34
 4823 0164 00       		.byte	0
 4824 0165 03       		.uleb128 0x3
 4825 0166 0E       		.uleb128 0xe
 4826 0167 3A       		.uleb128 0x3a
 4827 0168 0B       		.uleb128 0xb
 4828 0169 3B       		.uleb128 0x3b
 4829 016a 05       		.uleb128 0x5
 4830 016b 49       		.uleb128 0x49
 4831 016c 13       		.uleb128 0x13
 4832 016d 02       		.uleb128 0x2
 4833 016e 18       		.uleb128 0x18
 4834 016f 00       		.byte	0
 4835 0170 00       		.byte	0
 4836 0171 1B       		.uleb128 0x1b
 4837 0172 0B       		.uleb128 0xb
 4838 0173 01       		.byte	0x1
 4839 0174 55       		.uleb128 0x55
 4840 0175 17       		.uleb128 0x17
 4841 0176 00       		.byte	0
 4842 0177 00       		.byte	0
 4843 0178 1C       		.uleb128 0x1c
 4844 0179 2E       		.uleb128 0x2e
 4845 017a 01       		.byte	0x1
 4846 017b 3F       		.uleb128 0x3f
 4847 017c 19       		.uleb128 0x19
 4848 017d 03       		.uleb128 0x3
 4849 017e 0E       		.uleb128 0xe
 4850 017f 3A       		.uleb128 0x3a
 4851 0180 0B       		.uleb128 0xb
 4852 0181 3B       		.uleb128 0x3b
 4853 0182 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 97


 4854 0183 27       		.uleb128 0x27
 4855 0184 19       		.uleb128 0x19
 4856 0185 49       		.uleb128 0x49
 4857 0186 13       		.uleb128 0x13
 4858 0187 11       		.uleb128 0x11
 4859 0188 01       		.uleb128 0x1
 4860 0189 12       		.uleb128 0x12
 4861 018a 06       		.uleb128 0x6
 4862 018b 40       		.uleb128 0x40
 4863 018c 18       		.uleb128 0x18
 4864 018d 9742     		.uleb128 0x2117
 4865 018f 19       		.uleb128 0x19
 4866 0190 01       		.uleb128 0x1
 4867 0191 13       		.uleb128 0x13
 4868 0192 00       		.byte	0
 4869 0193 00       		.byte	0
 4870 0194 1D       		.uleb128 0x1d
 4871 0195 05       		.uleb128 0x5
 4872 0196 00       		.byte	0
 4873 0197 03       		.uleb128 0x3
 4874 0198 0E       		.uleb128 0xe
 4875 0199 3A       		.uleb128 0x3a
 4876 019a 0B       		.uleb128 0xb
 4877 019b 3B       		.uleb128 0x3b
 4878 019c 05       		.uleb128 0x5
 4879 019d 49       		.uleb128 0x49
 4880 019e 13       		.uleb128 0x13
 4881 019f 02       		.uleb128 0x2
 4882 01a0 18       		.uleb128 0x18
 4883 01a1 00       		.byte	0
 4884 01a2 00       		.byte	0
 4885 01a3 1E       		.uleb128 0x1e
 4886 01a4 2E       		.uleb128 0x2e
 4887 01a5 01       		.byte	0x1
 4888 01a6 3F       		.uleb128 0x3f
 4889 01a7 19       		.uleb128 0x19
 4890 01a8 03       		.uleb128 0x3
 4891 01a9 0E       		.uleb128 0xe
 4892 01aa 3A       		.uleb128 0x3a
 4893 01ab 0B       		.uleb128 0xb
 4894 01ac 3B       		.uleb128 0x3b
 4895 01ad 05       		.uleb128 0x5
 4896 01ae 27       		.uleb128 0x27
 4897 01af 19       		.uleb128 0x19
 4898 01b0 11       		.uleb128 0x11
 4899 01b1 01       		.uleb128 0x1
 4900 01b2 12       		.uleb128 0x12
 4901 01b3 06       		.uleb128 0x6
 4902 01b4 40       		.uleb128 0x40
 4903 01b5 18       		.uleb128 0x18
 4904 01b6 9742     		.uleb128 0x2117
 4905 01b8 19       		.uleb128 0x19
 4906 01b9 01       		.uleb128 0x1
 4907 01ba 13       		.uleb128 0x13
 4908 01bb 00       		.byte	0
 4909 01bc 00       		.byte	0
 4910 01bd 1F       		.uleb128 0x1f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 98


 4911 01be 2E       		.uleb128 0x2e
 4912 01bf 00       		.byte	0
 4913 01c0 3F       		.uleb128 0x3f
 4914 01c1 19       		.uleb128 0x19
 4915 01c2 03       		.uleb128 0x3
 4916 01c3 0E       		.uleb128 0xe
 4917 01c4 3A       		.uleb128 0x3a
 4918 01c5 0B       		.uleb128 0xb
 4919 01c6 3B       		.uleb128 0x3b
 4920 01c7 05       		.uleb128 0x5
 4921 01c8 49       		.uleb128 0x49
 4922 01c9 13       		.uleb128 0x13
 4923 01ca 11       		.uleb128 0x11
 4924 01cb 01       		.uleb128 0x1
 4925 01cc 12       		.uleb128 0x12
 4926 01cd 06       		.uleb128 0x6
 4927 01ce 40       		.uleb128 0x40
 4928 01cf 18       		.uleb128 0x18
 4929 01d0 9742     		.uleb128 0x2117
 4930 01d2 19       		.uleb128 0x19
 4931 01d3 00       		.byte	0
 4932 01d4 00       		.byte	0
 4933 01d5 20       		.uleb128 0x20
 4934 01d6 2E       		.uleb128 0x2e
 4935 01d7 01       		.byte	0x1
 4936 01d8 3F       		.uleb128 0x3f
 4937 01d9 19       		.uleb128 0x19
 4938 01da 03       		.uleb128 0x3
 4939 01db 0E       		.uleb128 0xe
 4940 01dc 3A       		.uleb128 0x3a
 4941 01dd 0B       		.uleb128 0xb
 4942 01de 3B       		.uleb128 0x3b
 4943 01df 05       		.uleb128 0x5
 4944 01e0 27       		.uleb128 0x27
 4945 01e1 19       		.uleb128 0x19
 4946 01e2 49       		.uleb128 0x49
 4947 01e3 13       		.uleb128 0x13
 4948 01e4 11       		.uleb128 0x11
 4949 01e5 01       		.uleb128 0x1
 4950 01e6 12       		.uleb128 0x12
 4951 01e7 06       		.uleb128 0x6
 4952 01e8 40       		.uleb128 0x40
 4953 01e9 18       		.uleb128 0x18
 4954 01ea 9642     		.uleb128 0x2116
 4955 01ec 19       		.uleb128 0x19
 4956 01ed 01       		.uleb128 0x1
 4957 01ee 13       		.uleb128 0x13
 4958 01ef 00       		.byte	0
 4959 01f0 00       		.byte	0
 4960 01f1 21       		.uleb128 0x21
 4961 01f2 05       		.uleb128 0x5
 4962 01f3 00       		.byte	0
 4963 01f4 03       		.uleb128 0x3
 4964 01f5 08       		.uleb128 0x8
 4965 01f6 3A       		.uleb128 0x3a
 4966 01f7 0B       		.uleb128 0xb
 4967 01f8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 99


 4968 01f9 05       		.uleb128 0x5
 4969 01fa 49       		.uleb128 0x49
 4970 01fb 13       		.uleb128 0x13
 4971 01fc 02       		.uleb128 0x2
 4972 01fd 18       		.uleb128 0x18
 4973 01fe 00       		.byte	0
 4974 01ff 00       		.byte	0
 4975 0200 22       		.uleb128 0x22
 4976 0201 34       		.uleb128 0x34
 4977 0202 00       		.byte	0
 4978 0203 03       		.uleb128 0x3
 4979 0204 08       		.uleb128 0x8
 4980 0205 3A       		.uleb128 0x3a
 4981 0206 0B       		.uleb128 0xb
 4982 0207 3B       		.uleb128 0x3b
 4983 0208 0B       		.uleb128 0xb
 4984 0209 49       		.uleb128 0x49
 4985 020a 13       		.uleb128 0x13
 4986 020b 3F       		.uleb128 0x3f
 4987 020c 19       		.uleb128 0x19
 4988 020d 02       		.uleb128 0x2
 4989 020e 18       		.uleb128 0x18
 4990 020f 00       		.byte	0
 4991 0210 00       		.byte	0
 4992 0211 23       		.uleb128 0x23
 4993 0212 34       		.uleb128 0x34
 4994 0213 00       		.byte	0
 4995 0214 03       		.uleb128 0x3
 4996 0215 0E       		.uleb128 0xe
 4997 0216 3A       		.uleb128 0x3a
 4998 0217 0B       		.uleb128 0xb
 4999 0218 3B       		.uleb128 0x3b
 5000 0219 0B       		.uleb128 0xb
 5001 021a 49       		.uleb128 0x49
 5002 021b 13       		.uleb128 0x13
 5003 021c 3F       		.uleb128 0x3f
 5004 021d 19       		.uleb128 0x19
 5005 021e 02       		.uleb128 0x2
 5006 021f 18       		.uleb128 0x18
 5007 0220 00       		.byte	0
 5008 0221 00       		.byte	0
 5009 0222 00       		.byte	0
 5010              		.section	.debug_aranges,"",%progbits
 5011 0000 64000000 		.4byte	0x64
 5012 0004 0200     		.2byte	0x2
 5013 0006 00000000 		.4byte	.Ldebug_info0
 5014 000a 04       		.byte	0x4
 5015 000b 00       		.byte	0
 5016 000c 0000     		.2byte	0
 5017 000e 0000     		.2byte	0
 5018 0010 00000000 		.4byte	.LFB1
 5019 0014 58000000 		.4byte	.LFE1-.LFB1
 5020 0018 00000000 		.4byte	.LFB2
 5021 001c 60000000 		.4byte	.LFE2-.LFB2
 5022 0020 00000000 		.4byte	.LFB3
 5023 0024 56000000 		.4byte	.LFE3-.LFB3
 5024 0028 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 100


 5025 002c 18090000 		.4byte	.LFE4-.LFB4
 5026 0030 00000000 		.4byte	.LFB5
 5027 0034 6C060000 		.4byte	.LFE5-.LFB5
 5028 0038 00000000 		.4byte	.LFB6
 5029 003c 0C010000 		.4byte	.LFE6-.LFB6
 5030 0040 00000000 		.4byte	.LFB7
 5031 0044 24010000 		.4byte	.LFE7-.LFB7
 5032 0048 00000000 		.4byte	.LFB8
 5033 004c 9C000000 		.4byte	.LFE8-.LFB8
 5034 0050 00000000 		.4byte	.LFB9
 5035 0054 18000000 		.4byte	.LFE9-.LFB9
 5036 0058 00000000 		.4byte	.LFB10
 5037 005c 98000000 		.4byte	.LFE10-.LFB10
 5038 0060 00000000 		.4byte	0
 5039 0064 00000000 		.4byte	0
 5040              		.section	.debug_ranges,"",%progbits
 5041              	.Ldebug_ranges0:
 5042 0000 F6010000 		.4byte	.LBB10
 5043 0004 E2050000 		.4byte	.LBE10
 5044 0008 F4050000 		.4byte	.LBB15
 5045 000c F6050000 		.4byte	.LBE15
 5046 0010 00000000 		.4byte	0
 5047 0014 00000000 		.4byte	0
 5048 0018 8A010000 		.4byte	.LBB19
 5049 001c EA010000 		.4byte	.LBE19
 5050 0020 EC010000 		.4byte	.LBB21
 5051 0024 F2010000 		.4byte	.LBE21
 5052 0028 00000000 		.4byte	0
 5053 002c 00000000 		.4byte	0
 5054 0030 62020000 		.4byte	.LBB22
 5055 0034 BE020000 		.4byte	.LBE22
 5056 0038 C0020000 		.4byte	.LBB24
 5057 003c C6020000 		.4byte	.LBE24
 5058 0040 00000000 		.4byte	0
 5059 0044 00000000 		.4byte	0
 5060 0048 56030000 		.4byte	.LBB25
 5061 004c B4030000 		.4byte	.LBE25
 5062 0050 B6030000 		.4byte	.LBB27
 5063 0054 BC030000 		.4byte	.LBE27
 5064 0058 00000000 		.4byte	0
 5065 005c 00000000 		.4byte	0
 5066 0060 38040000 		.4byte	.LBB28
 5067 0064 92040000 		.4byte	.LBE28
 5068 0068 94040000 		.4byte	.LBB30
 5069 006c 9A040000 		.4byte	.LBE30
 5070 0070 00000000 		.4byte	0
 5071 0074 00000000 		.4byte	0
 5072 0078 00000000 		.4byte	.LFB1
 5073 007c 58000000 		.4byte	.LFE1
 5074 0080 00000000 		.4byte	.LFB2
 5075 0084 60000000 		.4byte	.LFE2
 5076 0088 00000000 		.4byte	.LFB3
 5077 008c 56000000 		.4byte	.LFE3
 5078 0090 00000000 		.4byte	.LFB4
 5079 0094 18090000 		.4byte	.LFE4
 5080 0098 00000000 		.4byte	.LFB5
 5081 009c 6C060000 		.4byte	.LFE5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 101


 5082 00a0 00000000 		.4byte	.LFB6
 5083 00a4 0C010000 		.4byte	.LFE6
 5084 00a8 00000000 		.4byte	.LFB7
 5085 00ac 24010000 		.4byte	.LFE7
 5086 00b0 00000000 		.4byte	.LFB8
 5087 00b4 9C000000 		.4byte	.LFE8
 5088 00b8 00000000 		.4byte	.LFB9
 5089 00bc 18000000 		.4byte	.LFE9
 5090 00c0 00000000 		.4byte	.LFB10
 5091 00c4 98000000 		.4byte	.LFE10
 5092 00c8 00000000 		.4byte	0
 5093 00cc 00000000 		.4byte	0
 5094              		.section	.debug_line,"",%progbits
 5095              	.Ldebug_line0:
 5096 0000 E3040000 		.section	.debug_str,"MS",%progbits,1
 5096      02003201 
 5096      00000201 
 5096      FB0E0D00 
 5096      01010101 
 5097              	.LASF17:
 5098 0000 4F726965 		.ascii	"OrientationState\000"
 5098      6E746174 
 5098      696F6E53 
 5098      74617465 
 5098      00
 5099              	.LASF37:
 5100 0011 64696A6B 		.ascii	"dijkstra\000"
 5100      73747261 
 5100      00
 5101              	.LASF34:
 5102 001a 726F7773 		.ascii	"rows\000"
 5102      00
 5103              	.LASF65:
 5104 001f 69735661 		.ascii	"isValidMove\000"
 5104      6C69644D 
 5104      6F766500 
 5105              	.LASF0:
 5106 002b 7369676E 		.ascii	"signed char\000"
 5106      65642063 
 5106      68617200 
 5107              	.LASF12:
 5108 0037 5F5F7569 		.ascii	"__uint8_t\000"
 5108      6E74385F 
 5108      7400
 5109              	.LASF25:
 5110 0041 64697265 		.ascii	"direction\000"
 5110      6374696F 
 5110      6E00
 5111              	.LASF80:
 5112 004b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5112      43313120 
 5112      352E342E 
 5112      31203230 
 5112      31363036 
 5113 007e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5113      20726576 
 5113      6973696F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 102


 5113      6E203233 
 5113      37373135 
 5114 00b1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5114      66756E63 
 5114      74696F6E 
 5114      2D736563 
 5114      74696F6E 
 5115              	.LASF46:
 5116 00d9 73746570 		.ascii	"stepNum\000"
 5116      4E756D00 
 5117              	.LASF7:
 5118 00e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 5118      206C6F6E 
 5118      6720756E 
 5118      7369676E 
 5118      65642069 
 5119              	.LASF29:
 5120 00f8 65787065 		.ascii	"expectedOrientation\000"
 5120      63746564 
 5120      4F726965 
 5120      6E746174 
 5120      696F6E00 
 5121              	.LASF45:
 5122 010c 64697374 		.ascii	"distances\000"
 5122      616E6365 
 5122      7300
 5123              	.LASF22:
 5124 0116 75547572 		.ascii	"uTurn\000"
 5124      6E00
 5125              	.LASF38:
 5126 011c 73746172 		.ascii	"startlocation\000"
 5126      746C6F63 
 5126      6174696F 
 5126      6E00
 5127              	.LASF32:
 5128 012a 7072696E 		.ascii	"printMap\000"
 5128      744D6170 
 5128      00
 5129              	.LASF28:
 5130 0133 64697374 		.ascii	"distanceToTarget\000"
 5130      616E6365 
 5130      546F5461 
 5130      72676574 
 5130      00
 5131              	.LASF6:
 5132 0144 6C6F6E67 		.ascii	"long long int\000"
 5132      206C6F6E 
 5132      6720696E 
 5132      7400
 5133              	.LASF82:
 5134 0152 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 5134      6F63756D 
 5134      656E7473 
 5134      5C476974 
 5134      4875625C 
 5135 0181 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 5135      635F636F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 103


 5135      64655F62 
 5135      6173655C 
 5135      43533330 
 5136              	.LASF54:
 5137 01a3 6E657743 		.ascii	"newCol\000"
 5137      6F6C00
 5138              	.LASF30:
 5139 01aa 496E7374 		.ascii	"Instruction\000"
 5139      72756374 
 5139      696F6E00 
 5140              	.LASF50:
 5141 01b6 63757272 		.ascii	"currentCol\000"
 5141      656E7443 
 5141      6F6C00
 5142              	.LASF4:
 5143 01c1 6C6F6E67 		.ascii	"long int\000"
 5143      20696E74 
 5143      00
 5144              	.LASF39:
 5145 01ca 74617267 		.ascii	"targetlocation\000"
 5145      65746C6F 
 5145      63617469 
 5145      6F6E00
 5146              	.LASF23:
 5147 01d9 466F7277 		.ascii	"ForwardUntilTarget\000"
 5147      61726455 
 5147      6E74696C 
 5147      54617267 
 5147      657400
 5148              	.LASF31:
 5149 01ec 4C6F6361 		.ascii	"Location\000"
 5149      74696F6E 
 5149      00
 5150              	.LASF70:
 5151 01f5 74617267 		.ascii	"targetRow\000"
 5151      6574526F 
 5151      7700
 5152              	.LASF75:
 5153 01ff 696E7374 		.ascii	"instructionsList\000"
 5153      72756374 
 5153      696F6E73 
 5153      4C697374 
 5153      00
 5154              	.LASF66:
 5155 0210 63686563 		.ascii	"checkPathDirection\000"
 5155      6B506174 
 5155      68446972 
 5155      65637469 
 5155      6F6E00
 5156              	.LASF8:
 5157 0223 756E7369 		.ascii	"unsigned int\000"
 5157      676E6564 
 5157      20696E74 
 5157      00
 5158              	.LASF47:
 5159 0230 73686F72 		.ascii	"shortestDist\000"
 5159      74657374 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 104


 5159      44697374 
 5159      00
 5160              	.LASF5:
 5161 023d 6C6F6E67 		.ascii	"long unsigned int\000"
 5161      20756E73 
 5161      69676E65 
 5161      6420696E 
 5161      7400
 5162              	.LASF61:
 5163 024f 74617267 		.ascii	"targetOrientation\000"
 5163      65744F72 
 5163      69656E74 
 5163      6174696F 
 5163      6E00
 5164              	.LASF3:
 5165 0261 73686F72 		.ascii	"short unsigned int\000"
 5165      7420756E 
 5165      7369676E 
 5165      65642069 
 5165      6E7400
 5166              	.LASF24:
 5167 0274 53746F70 		.ascii	"StopAtTarget\000"
 5167      41745461 
 5167      72676574 
 5167      00
 5168              	.LASF53:
 5169 0281 6E657752 		.ascii	"newRow\000"
 5169      6F7700
 5170              	.LASF44:
 5171 0288 70715369 		.ascii	"pqSize\000"
 5171      7A6500
 5172              	.LASF56:
 5173 028f 67657450 		.ascii	"getPathInstructions\000"
 5173      61746849 
 5173      6E737472 
 5173      75637469 
 5173      6F6E7300 
 5174              	.LASF15:
 5175 02a3 4C656674 		.ascii	"Left\000"
 5175      00
 5176              	.LASF10:
 5177 02a8 73697A65 		.ascii	"sizetype\000"
 5177      74797065 
 5177      00
 5178              	.LASF9:
 5179 02b1 6C6F6E67 		.ascii	"long double\000"
 5179      20646F75 
 5179      626C6500 
 5180              	.LASF49:
 5181 02bd 63757272 		.ascii	"currentRow\000"
 5181      656E7452 
 5181      6F7700
 5182              	.LASF67:
 5183 02c8 63686563 		.ascii	"checkIgnoreTurn\000"
 5183      6B49676E 
 5183      6F726554 
 5183      75726E00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 105


 5184              	.LASF20:
 5185 02d8 77616974 		.ascii	"waitForLeftTurn\000"
 5185      466F724C 
 5185      65667454 
 5185      75726E00 
 5186              	.LASF74:
 5187 02e8 6F726965 		.ascii	"orientation\000"
 5187      6E746174 
 5187      696F6E00 
 5188              	.LASF76:
 5189 02f4 66696E61 		.ascii	"finalInstructionList\000"
 5189      6C496E73 
 5189      74727563 
 5189      74696F6E 
 5189      4C697374 
 5190              	.LASF52:
 5191 0309 63757272 		.ascii	"current\000"
 5191      656E7400 
 5192              	.LASF64:
 5193 0311 61745461 		.ascii	"atTarget\000"
 5193      72676574 
 5193      00
 5194              	.LASF51:
 5195 031a 70617468 		.ascii	"pathIndex\000"
 5195      496E6465 
 5195      7800
 5196              	.LASF33:
 5197 0324 636C6561 		.ascii	"clearMap\000"
 5197      724D6170 
 5197      00
 5198              	.LASF62:
 5199 032d 6E657744 		.ascii	"newDirection\000"
 5199      69726563 
 5199      74696F6E 
 5199      00
 5200              	.LASF36:
 5201 033a 5F426F6F 		.ascii	"_Bool\000"
 5201      6C00
 5202              	.LASF1:
 5203 0340 756E7369 		.ascii	"unsigned char\000"
 5203      676E6564 
 5203      20636861 
 5203      7200
 5204              	.LASF18:
 5205 034e 496E7374 		.ascii	"InstructionDirection\000"
 5205      72756374 
 5205      696F6E44 
 5205      69726563 
 5205      74696F6E 
 5206              	.LASF69:
 5207 0363 67657454 		.ascii	"getTargetOrientation\000"
 5207      61726765 
 5207      744F7269 
 5207      656E7461 
 5207      74696F6E 
 5208              	.LASF2:
 5209 0378 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 106


 5209      7420696E 
 5209      7400
 5210              	.LASF59:
 5211 0382 74617267 		.ascii	"targetLocation\000"
 5211      65744C6F 
 5211      63617469 
 5211      6F6E00
 5212              	.LASF19:
 5213 0391 476F466F 		.ascii	"GoForward\000"
 5213      72776172 
 5213      6400
 5214              	.LASF16:
 5215 039b 52696768 		.ascii	"Right\000"
 5215      7400
 5216              	.LASF57:
 5217 03a1 6E756D53 		.ascii	"numSteps\000"
 5217      74657073 
 5217      00
 5218              	.LASF60:
 5219 03aa 6C697374 		.ascii	"listIndex\000"
 5219      496E6465 
 5219      7800
 5220              	.LASF48:
 5221 03b4 72657453 		.ascii	"retSteps\000"
 5221      74657073 
 5221      00
 5222              	.LASF42:
 5223 03bd 6C6F6361 		.ascii	"location\000"
 5223      74696F6E 
 5223      00
 5224              	.LASF40:
 5225 03c6 76697369 		.ascii	"visitedMap\000"
 5225      7465644D 
 5225      617000
 5226              	.LASF11:
 5227 03d1 63686172 		.ascii	"char\000"
 5227      00
 5228              	.LASF77:
 5229 03d6 70726576 		.ascii	"previousRobotOrientation\000"
 5229      696F7573 
 5229      526F626F 
 5229      744F7269 
 5229      656E7461 
 5230              	.LASF43:
 5231 03ef 64697374 		.ascii	"distance\000"
 5231      616E6365 
 5231      00
 5232              	.LASF73:
 5233 03f8 666F6F64 		.ascii	"food_list\000"
 5233      5F6C6973 
 5233      7400
 5234              	.LASF14:
 5235 0402 446F776E 		.ascii	"Down\000"
 5235      00
 5236              	.LASF78:
 5237 0407 63757272 		.ascii	"currentRobotOrientation\000"
 5237      656E7452 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 107


 5237      6F626F74 
 5237      4F726965 
 5237      6E746174 
 5238              	.LASF55:
 5239 041f 6E657744 		.ascii	"newDistance\000"
 5239      69737461 
 5239      6E636500 
 5240              	.LASF81:
 5241 042b 70617468 		.ascii	"pathfinding.c\000"
 5241      66696E64 
 5241      696E672E 
 5241      6300
 5242              	.LASF68:
 5243 0439 726F626F 		.ascii	"robotOrientation\000"
 5243      744F7269 
 5243      656E7461 
 5243      74696F6E 
 5243      00
 5244              	.LASF21:
 5245 044a 77616974 		.ascii	"waitForRightTurn\000"
 5245      466F7252 
 5245      69676874 
 5245      5475726E 
 5245      00
 5246              	.LASF41:
 5247 045b 5072696F 		.ascii	"PriorityQueue\000"
 5247      72697479 
 5247      51756575 
 5247      6500
 5248              	.LASF58:
 5249 0469 73746172 		.ascii	"startLocation\000"
 5249      744C6F63 
 5249      6174696F 
 5249      6E00
 5250              	.LASF72:
 5251 0477 66696E64 		.ascii	"findPathNewOrientation\000"
 5251      50617468 
 5251      4E65774F 
 5251      7269656E 
 5251      74617469 
 5252              	.LASF13:
 5253 048e 75696E74 		.ascii	"uint8_t\000"
 5253      385F7400 
 5254              	.LASF83:
 5255 0496 696E7374 		.ascii	"instructionsListLength\000"
 5255      72756374 
 5255      696F6E73 
 5255      4C697374 
 5255      4C656E67 
 5256              	.LASF79:
 5257 04ad 6D6F7665 		.ascii	"moves\000"
 5257      7300
 5258              	.LASF71:
 5259 04b3 74617267 		.ascii	"targetCol\000"
 5259      6574436F 
 5259      6C00
 5260              	.LASF35:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc0zVA6F.s 			page 108


 5261 04bd 636F6C73 		.ascii	"cols\000"
 5261      00
 5262              	.LASF63:
 5263 04c2 6E657874 		.ascii	"nextStep\000"
 5263      53746570 
 5263      00
 5264              	.LASF26:
 5265 04cb 69676E6F 		.ascii	"ignoreL\000"
 5265      72654C00 
 5266              	.LASF27:
 5267 04d3 69676E6F 		.ascii	"ignoreR\000"
 5267      72655200 
 5268              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
