ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 01       		.byte	1
  26              		.bss
  27              		.align	2
  28              	instructionsList:
  29 0000 00000000 		.space	3420
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.align	2
  31              	numSteps:
  32 0d5c 00000000 		.space	4
  33              		.global	map
  34              		.data
  35 0001 000000   		.align	2
  36              		.type	map, %object
  37              		.size	map, 1140
  38              	map:
  39 0004 01000000 		.word	1
  40 0008 01000000 		.word	1
  41 000c 01000000 		.word	1
  42 0010 01000000 		.word	1
  43 0014 01000000 		.word	1
  44 0018 01000000 		.word	1
  45 001c 01000000 		.word	1
  46 0020 01000000 		.word	1
  47 0024 01000000 		.word	1
  48 0028 01000000 		.word	1
  49 002c 01000000 		.word	1
  50 0030 01000000 		.word	1
  51 0034 01000000 		.word	1
  52 0038 01000000 		.word	1
  53 003c 01000000 		.word	1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 2


  54 0040 01000000 		.word	1
  55 0044 01000000 		.word	1
  56 0048 01000000 		.word	1
  57 004c 01000000 		.word	1
  58 0050 01000000 		.word	1
  59 0054 00000000 		.word	0
  60 0058 01000000 		.word	1
  61 005c 00000000 		.word	0
  62 0060 00000000 		.word	0
  63 0064 00000000 		.word	0
  64 0068 00000000 		.word	0
  65 006c 00000000 		.word	0
  66 0070 00000000 		.word	0
  67 0074 00000000 		.word	0
  68 0078 00000000 		.word	0
  69 007c 00000000 		.word	0
  70 0080 00000000 		.word	0
  71 0084 00000000 		.word	0
  72 0088 00000000 		.word	0
  73 008c 00000000 		.word	0
  74 0090 00000000 		.word	0
  75 0094 00000000 		.word	0
  76 0098 01000000 		.word	1
  77 009c 01000000 		.word	1
  78 00a0 00000000 		.word	0
  79 00a4 01000000 		.word	1
  80 00a8 00000000 		.word	0
  81 00ac 01000000 		.word	1
  82 00b0 01000000 		.word	1
  83 00b4 01000000 		.word	1
  84 00b8 01000000 		.word	1
  85 00bc 01000000 		.word	1
  86 00c0 00000000 		.word	0
  87 00c4 01000000 		.word	1
  88 00c8 01000000 		.word	1
  89 00cc 01000000 		.word	1
  90 00d0 00000000 		.word	0
  91 00d4 01000000 		.word	1
  92 00d8 01000000 		.word	1
  93 00dc 01000000 		.word	1
  94 00e0 00000000 		.word	0
  95 00e4 01000000 		.word	1
  96 00e8 01000000 		.word	1
  97 00ec 00000000 		.word	0
  98 00f0 00000000 		.word	0
  99 00f4 00000000 		.word	0
 100 00f8 01000000 		.word	1
 101 00fc 00000000 		.word	0
 102 0100 00000000 		.word	0
 103 0104 00000000 		.word	0
 104 0108 01000000 		.word	1
 105 010c 00000000 		.word	0
 106 0110 00000000 		.word	0
 107 0114 00000000 		.word	0
 108 0118 00000000 		.word	0
 109 011c 00000000 		.word	0
 110 0120 00000000 		.word	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 3


 111 0124 00000000 		.word	0
 112 0128 01000000 		.word	1
 113 012c 00000000 		.word	0
 114 0130 01000000 		.word	1
 115 0134 01000000 		.word	1
 116 0138 01000000 		.word	1
 117 013c 01000000 		.word	1
 118 0140 00000000 		.word	0
 119 0144 01000000 		.word	1
 120 0148 00000000 		.word	0
 121 014c 01000000 		.word	1
 122 0150 00000000 		.word	0
 123 0154 01000000 		.word	1
 124 0158 01000000 		.word	1
 125 015c 01000000 		.word	1
 126 0160 00000000 		.word	0
 127 0164 01000000 		.word	1
 128 0168 00000000 		.word	0
 129 016c 01000000 		.word	1
 130 0170 01000000 		.word	1
 131 0174 01000000 		.word	1
 132 0178 00000000 		.word	0
 133 017c 01000000 		.word	1
 134 0180 01000000 		.word	1
 135 0184 00000000 		.word	0
 136 0188 00000000 		.word	0
 137 018c 00000000 		.word	0
 138 0190 01000000 		.word	1
 139 0194 00000000 		.word	0
 140 0198 01000000 		.word	1
 141 019c 00000000 		.word	0
 142 01a0 00000000 		.word	0
 143 01a4 00000000 		.word	0
 144 01a8 01000000 		.word	1
 145 01ac 00000000 		.word	0
 146 01b0 01000000 		.word	1
 147 01b4 00000000 		.word	0
 148 01b8 00000000 		.word	0
 149 01bc 00000000 		.word	0
 150 01c0 00000000 		.word	0
 151 01c4 00000000 		.word	0
 152 01c8 01000000 		.word	1
 153 01cc 01000000 		.word	1
 154 01d0 00000000 		.word	0
 155 01d4 01000000 		.word	1
 156 01d8 01000000 		.word	1
 157 01dc 01000000 		.word	1
 158 01e0 00000000 		.word	0
 159 01e4 01000000 		.word	1
 160 01e8 00000000 		.word	0
 161 01ec 01000000 		.word	1
 162 01f0 00000000 		.word	0
 163 01f4 01000000 		.word	1
 164 01f8 00000000 		.word	0
 165 01fc 01000000 		.word	1
 166 0200 00000000 		.word	0
 167 0204 01000000 		.word	1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 4


 168 0208 01000000 		.word	1
 169 020c 01000000 		.word	1
 170 0210 00000000 		.word	0
 171 0214 01000000 		.word	1
 172 0218 01000000 		.word	1
 173 021c 00000000 		.word	0
 174 0220 01000000 		.word	1
 175 0224 00000000 		.word	0
 176 0228 01000000 		.word	1
 177 022c 00000000 		.word	0
 178 0230 00000000 		.word	0
 179 0234 00000000 		.word	0
 180 0238 01000000 		.word	1
 181 023c 00000000 		.word	0
 182 0240 01000000 		.word	1
 183 0244 00000000 		.word	0
 184 0248 01000000 		.word	1
 185 024c 00000000 		.word	0
 186 0250 01000000 		.word	1
 187 0254 00000000 		.word	0
 188 0258 00000000 		.word	0
 189 025c 00000000 		.word	0
 190 0260 01000000 		.word	1
 191 0264 01000000 		.word	1
 192 0268 00000000 		.word	0
 193 026c 01000000 		.word	1
 194 0270 00000000 		.word	0
 195 0274 01000000 		.word	1
 196 0278 00000000 		.word	0
 197 027c 01000000 		.word	1
 198 0280 01000000 		.word	1
 199 0284 01000000 		.word	1
 200 0288 00000000 		.word	0
 201 028c 01000000 		.word	1
 202 0290 00000000 		.word	0
 203 0294 01000000 		.word	1
 204 0298 00000000 		.word	0
 205 029c 01000000 		.word	1
 206 02a0 00000000 		.word	0
 207 02a4 01000000 		.word	1
 208 02a8 01000000 		.word	1
 209 02ac 01000000 		.word	1
 210 02b0 01000000 		.word	1
 211 02b4 00000000 		.word	0
 212 02b8 00000000 		.word	0
 213 02bc 00000000 		.word	0
 214 02c0 01000000 		.word	1
 215 02c4 00000000 		.word	0
 216 02c8 01000000 		.word	1
 217 02cc 00000000 		.word	0
 218 02d0 00000000 		.word	0
 219 02d4 00000000 		.word	0
 220 02d8 01000000 		.word	1
 221 02dc 00000000 		.word	0
 222 02e0 00000000 		.word	0
 223 02e4 00000000 		.word	0
 224 02e8 01000000 		.word	1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 5


 225 02ec 00000000 		.word	0
 226 02f0 00000000 		.word	0
 227 02f4 00000000 		.word	0
 228 02f8 01000000 		.word	1
 229 02fc 01000000 		.word	1
 230 0300 01000000 		.word	1
 231 0304 01000000 		.word	1
 232 0308 00000000 		.word	0
 233 030c 01000000 		.word	1
 234 0310 00000000 		.word	0
 235 0314 01000000 		.word	1
 236 0318 01000000 		.word	1
 237 031c 01000000 		.word	1
 238 0320 01000000 		.word	1
 239 0324 01000000 		.word	1
 240 0328 01000000 		.word	1
 241 032c 01000000 		.word	1
 242 0330 01000000 		.word	1
 243 0334 01000000 		.word	1
 244 0338 01000000 		.word	1
 245 033c 01000000 		.word	1
 246 0340 00000000 		.word	0
 247 0344 01000000 		.word	1
 248 0348 01000000 		.word	1
 249 034c 00000000 		.word	0
 250 0350 00000000 		.word	0
 251 0354 00000000 		.word	0
 252 0358 00000000 		.word	0
 253 035c 00000000 		.word	0
 254 0360 00000000 		.word	0
 255 0364 00000000 		.word	0
 256 0368 00000000 		.word	0
 257 036c 00000000 		.word	0
 258 0370 00000000 		.word	0
 259 0374 00000000 		.word	0
 260 0378 00000000 		.word	0
 261 037c 00000000 		.word	0
 262 0380 00000000 		.word	0
 263 0384 00000000 		.word	0
 264 0388 00000000 		.word	0
 265 038c 00000000 		.word	0
 266 0390 01000000 		.word	1
 267 0394 01000000 		.word	1
 268 0398 00000000 		.word	0
 269 039c 01000000 		.word	1
 270 03a0 01000000 		.word	1
 271 03a4 01000000 		.word	1
 272 03a8 01000000 		.word	1
 273 03ac 01000000 		.word	1
 274 03b0 01000000 		.word	1
 275 03b4 01000000 		.word	1
 276 03b8 01000000 		.word	1
 277 03bc 01000000 		.word	1
 278 03c0 01000000 		.word	1
 279 03c4 01000000 		.word	1
 280 03c8 00000000 		.word	0
 281 03cc 01000000 		.word	1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 6


 282 03d0 01000000 		.word	1
 283 03d4 01000000 		.word	1
 284 03d8 01000000 		.word	1
 285 03dc 01000000 		.word	1
 286 03e0 01000000 		.word	1
 287 03e4 00000000 		.word	0
 288 03e8 00000000 		.word	0
 289 03ec 00000000 		.word	0
 290 03f0 00000000 		.word	0
 291 03f4 00000000 		.word	0
 292 03f8 00000000 		.word	0
 293 03fc 00000000 		.word	0
 294 0400 01000000 		.word	1
 295 0404 00000000 		.word	0
 296 0408 00000000 		.word	0
 297 040c 00000000 		.word	0
 298 0410 00000000 		.word	0
 299 0414 00000000 		.word	0
 300 0418 00000000 		.word	0
 301 041c 00000000 		.word	0
 302 0420 00000000 		.word	0
 303 0424 00000000 		.word	0
 304 0428 01000000 		.word	1
 305 042c 01000000 		.word	1
 306 0430 01000000 		.word	1
 307 0434 01000000 		.word	1
 308 0438 01000000 		.word	1
 309 043c 01000000 		.word	1
 310 0440 01000000 		.word	1
 311 0444 01000000 		.word	1
 312 0448 01000000 		.word	1
 313 044c 01000000 		.word	1
 314 0450 01000000 		.word	1
 315 0454 01000000 		.word	1
 316 0458 01000000 		.word	1
 317 045c 01000000 		.word	1
 318 0460 01000000 		.word	1
 319 0464 01000000 		.word	1
 320 0468 01000000 		.word	1
 321 046c 01000000 		.word	1
 322 0470 01000000 		.word	1
 323 0474 01000000 		.word	1
 324              		.global	start_pos
 325              		.align	2
 326              		.type	start_pos, %object
 327              		.size	start_pos, 8
 328              	start_pos:
 329 0478 01000000 		.word	1
 330 047c 01000000 		.word	1
 331              		.global	food_list
 332              		.align	2
 333              		.type	food_list, %object
 334              		.size	food_list, 40
 335              	food_list:
 336 0480 01000000 		.word	1
 337 0484 09000000 		.word	9
 338 0488 05000000 		.word	5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 7


 339 048c 05000000 		.word	5
 340 0490 07000000 		.word	7
 341 0494 01000000 		.word	1
 342 0498 0D000000 		.word	13
 343 049c 05000000 		.word	5
 344 04a0 09000000 		.word	9
 345 04a4 09000000 		.word	9
 346              		.section	.rodata
 347              		.align	2
 348              	.LC0:
 349 0000 256400   		.ascii	"%d\000"
 350              		.section	.text.printMap,"ax",%progbits
 351              		.align	2
 352              		.global	printMap
 353              		.thumb
 354              		.thumb_func
 355              		.type	printMap, %function
 356              	printMap:
 357              	.LFB1:
 358              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Down; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static int numSteps = 0;
  26:pathfinding.c **** 
  27:pathfinding.c **** uint8_t instructionsListLength();
  28:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  29:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  30:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  31:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 8


  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  50:pathfinding.c **** };
  51:pathfinding.c **** 
  52:pathfinding.c **** /*
  53:pathfinding.c **** int map[15][19] = {
  54:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  55:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  56:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  57:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  58:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  60:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  62:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  64:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  65:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  66:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  68:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:pathfinding.c **** };
  70:pathfinding.c **** */
  71:pathfinding.c **** 
  72:pathfinding.c **** 
  73:pathfinding.c **** int start_pos[2] = {1,1};
  74:pathfinding.c **** 
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {1,9},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {7,1},
  79:pathfinding.c **** {13,5},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** 
  83:pathfinding.c **** // MAP INITIALISATION CODE
  84:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 359              		.loc 1 84 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 84B0     		sub	sp, sp, #16
 368              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 9


 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
 372              	.LBB2:
  85:pathfinding.c ****     // Print the map in a grid format
  86:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 373              		.loc 1 86 0
 374 0008 0023     		movs	r3, #0
 375 000a FB60     		str	r3, [r7, #12]
 376 000c 1BE0     		b	.L2
 377              	.L5:
 378              	.LBB3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 379              		.loc 1 87 0
 380 000e 0023     		movs	r3, #0
 381 0010 BB60     		str	r3, [r7, #8]
 382 0012 0FE0     		b	.L3
 383              	.L4:
  88:pathfinding.c ****             printf("%d", map[i][j]);
 384              		.loc 1 88 0 discriminator 3
 385 0014 FB68     		ldr	r3, [r7, #12]
 386 0016 4C22     		movs	r2, #76
 387 0018 02FB03F3 		mul	r3, r2, r3
 388 001c 7A68     		ldr	r2, [r7, #4]
 389 001e 1344     		add	r3, r3, r2
 390 0020 BA68     		ldr	r2, [r7, #8]
 391 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 392 0026 1946     		mov	r1, r3
 393 0028 0A48     		ldr	r0, .L6
 394 002a FFF7FEFF 		bl	printf
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 395              		.loc 1 87 0 discriminator 3
 396 002e BB68     		ldr	r3, [r7, #8]
 397 0030 0133     		adds	r3, r3, #1
 398 0032 BB60     		str	r3, [r7, #8]
 399              	.L3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 400              		.loc 1 87 0 is_stmt 0 discriminator 1
 401 0034 BB68     		ldr	r3, [r7, #8]
 402 0036 122B     		cmp	r3, #18
 403 0038 ECDD     		ble	.L4
 404              	.LBE3:
  89:pathfinding.c ****         }
  90:pathfinding.c ****         printf("\n");
 405              		.loc 1 90 0 is_stmt 1 discriminator 2
 406 003a 0A20     		movs	r0, #10
 407 003c FFF7FEFF 		bl	putchar
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 408              		.loc 1 86 0 discriminator 2
 409 0040 FB68     		ldr	r3, [r7, #12]
 410 0042 0133     		adds	r3, r3, #1
 411 0044 FB60     		str	r3, [r7, #12]
 412              	.L2:
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 413              		.loc 1 86 0 is_stmt 0 discriminator 1
 414 0046 FB68     		ldr	r3, [r7, #12]
 415 0048 0E2B     		cmp	r3, #14
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 10


 416 004a E0DD     		ble	.L5
 417              	.LBE2:
  91:pathfinding.c ****     }
  92:pathfinding.c **** }
 418              		.loc 1 92 0 is_stmt 1
 419 004c 00BF     		nop
 420 004e 1037     		adds	r7, r7, #16
 421              		.cfi_def_cfa_offset 8
 422 0050 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0052 80BD     		pop	{r7, pc}
 426              	.L7:
 427              		.align	2
 428              	.L6:
 429 0054 00000000 		.word	.LC0
 430              		.cfi_endproc
 431              	.LFE1:
 432              		.size	printMap, .-printMap
 433              		.section	.text.clearMap,"ax",%progbits
 434              		.align	2
 435              		.global	clearMap
 436              		.thumb
 437              		.thumb_func
 438              		.type	clearMap, %function
 439              	clearMap:
 440              	.LFB2:
  93:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 441              		.loc 1 93 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 16
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 85B0     		sub	sp, sp, #20
 450              		.cfi_def_cfa_offset 24
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 454              	.LBB4:
  94:pathfinding.c ****     // Print the map in a grid format
  95:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 455              		.loc 1 95 0
 456 0008 0023     		movs	r3, #0
 457 000a FB60     		str	r3, [r7, #12]
 458 000c 20E0     		b	.L9
 459              	.L13:
 460              	.LBB5:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 461              		.loc 1 96 0
 462 000e 0023     		movs	r3, #0
 463 0010 BB60     		str	r3, [r7, #8]
 464 0012 17E0     		b	.L10
 465              	.L12:
  97:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 11


 466              		.loc 1 97 0
 467 0014 FB68     		ldr	r3, [r7, #12]
 468 0016 4C22     		movs	r2, #76
 469 0018 02FB03F3 		mul	r3, r2, r3
 470 001c 7A68     		ldr	r2, [r7, #4]
 471 001e 1344     		add	r3, r3, r2
 472 0020 BA68     		ldr	r2, [r7, #8]
 473 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 474 0026 012B     		cmp	r3, #1
 475 0028 09D0     		beq	.L11
 476              		.loc 1 97 0 is_stmt 0 discriminator 1
 477 002a FB68     		ldr	r3, [r7, #12]
 478 002c 4C22     		movs	r2, #76
 479 002e 02FB03F3 		mul	r3, r2, r3
 480 0032 7A68     		ldr	r2, [r7, #4]
 481 0034 1344     		add	r3, r3, r2
 482 0036 BA68     		ldr	r2, [r7, #8]
 483 0038 0021     		movs	r1, #0
 484 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 485              	.L11:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 486              		.loc 1 96 0 is_stmt 1 discriminator 2
 487 003e BB68     		ldr	r3, [r7, #8]
 488 0040 0133     		adds	r3, r3, #1
 489 0042 BB60     		str	r3, [r7, #8]
 490              	.L10:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 491              		.loc 1 96 0 is_stmt 0 discriminator 1
 492 0044 BB68     		ldr	r3, [r7, #8]
 493 0046 122B     		cmp	r3, #18
 494 0048 E4DD     		ble	.L12
 495              	.LBE5:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 496              		.loc 1 95 0 is_stmt 1 discriminator 2
 497 004a FB68     		ldr	r3, [r7, #12]
 498 004c 0133     		adds	r3, r3, #1
 499 004e FB60     		str	r3, [r7, #12]
 500              	.L9:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 501              		.loc 1 95 0 is_stmt 0 discriminator 1
 502 0050 FB68     		ldr	r3, [r7, #12]
 503 0052 0E2B     		cmp	r3, #14
 504 0054 DBDD     		ble	.L13
 505              	.LBE4:
  98:pathfinding.c ****         }
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 506              		.loc 1 100 0 is_stmt 1
 507 0056 00BF     		nop
 508 0058 1437     		adds	r7, r7, #20
 509              		.cfi_def_cfa_offset 4
 510 005a BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 005c 80BC     		pop	{r7}
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 12


 516 005e 7047     		bx	lr
 517              		.cfi_endproc
 518              	.LFE2:
 519              		.size	clearMap, .-clearMap
 520              		.comm	list_of_optimal_coordinates,2280,4
 521              		.global	moves
 522              		.data
 523              		.align	2
 524              		.type	moves, %object
 525              		.size	moves, 32
 526              	moves:
 527 04a8 00000000 		.word	0
 528 04ac 01000000 		.word	1
 529 04b0 00000000 		.word	0
 530 04b4 FFFFFFFF 		.word	-1
 531 04b8 01000000 		.word	1
 532 04bc 00000000 		.word	0
 533 04c0 FFFFFFFF 		.word	-1
 534 04c4 00000000 		.word	0
 535              		.section	.text.isValidMove,"ax",%progbits
 536              		.align	2
 537              		.global	isValidMove
 538              		.thumb
 539              		.thumb_func
 540              		.type	isValidMove, %function
 541              	isValidMove:
 542              	.LFB3:
 101:pathfinding.c **** 
 102:pathfinding.c **** 
 103:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 104:pathfinding.c **** 
 105:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 106:pathfinding.c **** 
 107:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 543              		.loc 1 107 0
 544              		.cfi_startproc
 545              		@ args = 4, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 F860     		str	r0, [r7, #12]
 556 0008 B960     		str	r1, [r7, #8]
 557 000a 7A60     		str	r2, [r7, #4]
 558 000c 3B60     		str	r3, [r7]
 108:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 559              		.loc 1 108 0
 560 000e FB68     		ldr	r3, [r7, #12]
 561 0010 002B     		cmp	r3, #0
 562 0012 17DB     		blt	.L15
 563              		.loc 1 108 0 is_stmt 0 discriminator 1
 564 0014 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 13


 565 0016 7B68     		ldr	r3, [r7, #4]
 566 0018 9A42     		cmp	r2, r3
 567 001a 13DA     		bge	.L15
 568              		.loc 1 108 0 discriminator 3
 569 001c BB68     		ldr	r3, [r7, #8]
 570 001e 002B     		cmp	r3, #0
 571 0020 10DB     		blt	.L15
 572              		.loc 1 108 0 discriminator 5
 573 0022 BA68     		ldr	r2, [r7, #8]
 574 0024 3B68     		ldr	r3, [r7]
 575 0026 9A42     		cmp	r2, r3
 576 0028 0CDA     		bge	.L15
 577              		.loc 1 108 0 discriminator 7
 578 002a FB68     		ldr	r3, [r7, #12]
 579 002c 4C22     		movs	r2, #76
 580 002e 02FB03F3 		mul	r3, r2, r3
 581 0032 BA69     		ldr	r2, [r7, #24]
 582 0034 1344     		add	r3, r3, r2
 583 0036 BA68     		ldr	r2, [r7, #8]
 584 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 585 003c 002B     		cmp	r3, #0
 586 003e 01D1     		bne	.L15
 587              		.loc 1 108 0 discriminator 9
 588 0040 0123     		movs	r3, #1
 589 0042 00E0     		b	.L16
 590              	.L15:
 591              		.loc 1 108 0 discriminator 10
 592 0044 0023     		movs	r3, #0
 593              	.L16:
 594              		.loc 1 108 0 discriminator 12
 595 0046 03F00103 		and	r3, r3, #1
 596 004a DBB2     		uxtb	r3, r3
 109:pathfinding.c **** }
 597              		.loc 1 109 0 is_stmt 1 discriminator 12
 598 004c 1846     		mov	r0, r3
 599 004e 1437     		adds	r7, r7, #20
 600              		.cfi_def_cfa_offset 4
 601 0050 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 0052 80BC     		pop	{r7}
 605              		.cfi_restore 7
 606              		.cfi_def_cfa_offset 0
 607 0054 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE3:
 610              		.size	isValidMove, .-isValidMove
 611 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 612              		.align	2
 613              		.global	dijkstra
 614              		.thumb
 615              		.thumb_func
 616              		.type	dijkstra, %function
 617              	dijkstra:
 618              	.LFB4:
 110:pathfinding.c **** 
 111:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 14


 619              		.loc 1 111 0
 620              		.cfi_startproc
 621              		@ args = 12, pretend = 8, frame = 5816
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 82B0     		sub	sp, sp, #8
 624              		.cfi_def_cfa_offset 8
 625 0002 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 20
 627              		.cfi_offset 4, -20
 628              		.cfi_offset 7, -16
 629              		.cfi_offset 14, -12
 630 0004 ADF5B65D 		sub	sp, sp, #5824
 631              		.cfi_def_cfa_offset 5844
 632 0008 81B0     		sub	sp, sp, #4
 633              		.cfi_def_cfa_offset 5848
 634 000a 02AF     		add	r7, sp, #8
 635              		.cfi_def_cfa 7, 5840
 636 000c 07F11804 		add	r4, r7, #24
 637 0010 0C3C     		subs	r4, r4, #12
 638 0012 2060     		str	r0, [r4]
 639 0014 07F11800 		add	r0, r7, #24
 640 0018 1438     		subs	r0, r0, #20
 641 001a 80E80600 		stmia	r0, {r1, r2}
 642 001e 07F5B652 		add	r2, r7, #5824
 643 0022 02F10C02 		add	r2, r2, #12
 644 0026 1360     		str	r3, [r2]
 645              	.LBB6:
 112:pathfinding.c **** 
 113:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 114:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 646              		.loc 1 114 0
 647 0028 0023     		movs	r3, #0
 648 002a 07F5B552 		add	r2, r7, #5792
 649 002e 02F11402 		add	r2, r2, #20
 650 0032 1360     		str	r3, [r2]
 651 0034 3AE0     		b	.L19
 652              	.L22:
 653              	.LBB7:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 654              		.loc 1 115 0
 655 0036 0023     		movs	r3, #0
 656 0038 07F5B552 		add	r2, r7, #5792
 657 003c 02F11002 		add	r2, r2, #16
 658 0040 1360     		str	r3, [r2]
 659 0042 21E0     		b	.L20
 660              	.L21:
 116:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 661              		.loc 1 116 0 discriminator 3
 662 0044 07F58F51 		add	r1, r7, #4576
 663 0048 01F10C01 		add	r1, r1, #12
 664 004c 07F5B553 		add	r3, r7, #5792
 665 0050 03F11403 		add	r3, r3, #20
 666 0054 1A68     		ldr	r2, [r3]
 667 0056 1346     		mov	r3, r2
 668 0058 DB00     		lsls	r3, r3, #3
 669 005a 1344     		add	r3, r3, r2
 670 005c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 15


 671 005e 1344     		add	r3, r3, r2
 672 0060 07F5B552 		add	r2, r7, #5792
 673 0064 02F11002 		add	r2, r2, #16
 674 0068 1268     		ldr	r2, [r2]
 675 006a 1344     		add	r3, r3, r2
 676 006c 0122     		movs	r2, #1
 677 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 678              		.loc 1 115 0 discriminator 3
 679 0072 07F5B553 		add	r3, r7, #5792
 680 0076 03F11003 		add	r3, r3, #16
 681 007a 1B68     		ldr	r3, [r3]
 682 007c 0133     		adds	r3, r3, #1
 683 007e 07F5B552 		add	r2, r7, #5792
 684 0082 02F11002 		add	r2, r2, #16
 685 0086 1360     		str	r3, [r2]
 686              	.L20:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 687              		.loc 1 115 0 is_stmt 0 discriminator 1
 688 0088 07F5B553 		add	r3, r7, #5792
 689 008c 03F11003 		add	r3, r3, #16
 690 0090 1B68     		ldr	r3, [r3]
 691 0092 122B     		cmp	r3, #18
 692 0094 D6DD     		ble	.L21
 693              	.LBE7:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 694              		.loc 1 114 0 is_stmt 1 discriminator 2
 695 0096 07F5B553 		add	r3, r7, #5792
 696 009a 03F11403 		add	r3, r3, #20
 697 009e 1B68     		ldr	r3, [r3]
 698 00a0 0133     		adds	r3, r3, #1
 699 00a2 07F5B552 		add	r2, r7, #5792
 700 00a6 02F11402 		add	r2, r2, #20
 701 00aa 1360     		str	r3, [r2]
 702              	.L19:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 703              		.loc 1 114 0 is_stmt 0 discriminator 1
 704 00ac 07F5B553 		add	r3, r7, #5792
 705 00b0 03F11403 		add	r3, r3, #20
 706 00b4 1B68     		ldr	r3, [r3]
 707 00b6 0E2B     		cmp	r3, #14
 708 00b8 BDDD     		ble	.L22
 709              	.LBE6:
 117:pathfinding.c ****         }
 118:pathfinding.c ****     }
 119:pathfinding.c **** 
 120:pathfinding.c ****     struct PriorityQueue {
 121:pathfinding.c ****         struct Location location;
 122:pathfinding.c ****         int distance;
 123:pathfinding.c ****     };
 124:pathfinding.c **** 
 125:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 126:pathfinding.c ****     int pqSize = 0;
 710              		.loc 1 126 0 is_stmt 1
 711 00ba 0023     		movs	r3, #0
 712 00bc 07F5B552 		add	r2, r7, #5792
 713 00c0 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 16


 714 00c4 1360     		str	r3, [r2]
 715              	.LBB8:
 127:pathfinding.c **** 
 128:pathfinding.c ****     // Initialize distances and paths arrays
 129:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 130:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 131:pathfinding.c **** 
 132:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 716              		.loc 1 132 0
 717 00c6 0023     		movs	r3, #0
 718 00c8 07F5B552 		add	r2, r7, #5792
 719 00cc 02F10802 		add	r2, r2, #8
 720 00d0 1360     		str	r3, [r2]
 721 00d2 3AE0     		b	.L23
 722              	.L26:
 723              	.LBB9:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 724              		.loc 1 133 0
 725 00d4 0023     		movs	r3, #0
 726 00d6 07F5B552 		add	r2, r7, #5792
 727 00da 02F10402 		add	r2, r2, #4
 728 00de 1360     		str	r3, [r2]
 729 00e0 21E0     		b	.L24
 730              	.L25:
 134:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 731              		.loc 1 134 0 discriminator 3
 732 00e2 07F13802 		add	r2, r7, #56
 733 00e6 1C3A     		subs	r2, r2, #28
 734 00e8 07F5B553 		add	r3, r7, #5792
 735 00ec 03F10803 		add	r3, r3, #8
 736 00f0 1968     		ldr	r1, [r3]
 737 00f2 0B46     		mov	r3, r1
 738 00f4 DB00     		lsls	r3, r3, #3
 739 00f6 0B44     		add	r3, r3, r1
 740 00f8 5B00     		lsls	r3, r3, #1
 741 00fa 0B44     		add	r3, r3, r1
 742 00fc 07F5B551 		add	r1, r7, #5792
 743 0100 01F10401 		add	r1, r1, #4
 744 0104 0968     		ldr	r1, [r1]
 745 0106 0B44     		add	r3, r3, r1
 746 0108 4FF47A71 		mov	r1, #1000
 747 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 748              		.loc 1 133 0 discriminator 3
 749 0110 07F5B553 		add	r3, r7, #5792
 750 0114 03F10403 		add	r3, r3, #4
 751 0118 1B68     		ldr	r3, [r3]
 752 011a 0133     		adds	r3, r3, #1
 753 011c 07F5B552 		add	r2, r7, #5792
 754 0120 02F10402 		add	r2, r2, #4
 755 0124 1360     		str	r3, [r2]
 756              	.L24:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 757              		.loc 1 133 0 is_stmt 0 discriminator 1
 758 0126 07F5B553 		add	r3, r7, #5792
 759 012a 03F10403 		add	r3, r3, #4
 760 012e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 17


 761 0130 122B     		cmp	r3, #18
 762 0132 D6DD     		ble	.L25
 763              	.LBE9:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 764              		.loc 1 132 0 is_stmt 1 discriminator 2
 765 0134 07F5B553 		add	r3, r7, #5792
 766 0138 03F10803 		add	r3, r3, #8
 767 013c 1B68     		ldr	r3, [r3]
 768 013e 0133     		adds	r3, r3, #1
 769 0140 07F5B552 		add	r2, r7, #5792
 770 0144 02F10802 		add	r2, r2, #8
 771 0148 1360     		str	r3, [r2]
 772              	.L23:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 773              		.loc 1 132 0 is_stmt 0 discriminator 1
 774 014a 07F5B553 		add	r3, r7, #5792
 775 014e 03F10803 		add	r3, r3, #8
 776 0152 1B68     		ldr	r3, [r3]
 777 0154 0E2B     		cmp	r3, #14
 778 0156 BDDD     		ble	.L26
 779              	.LBE8:
 135:pathfinding.c ****         }
 136:pathfinding.c ****     }
 137:pathfinding.c **** 
 138:pathfinding.c ****     int stepNum = 0;
 780              		.loc 1 138 0 is_stmt 1
 781 0158 0023     		movs	r3, #0
 782 015a 07F5B552 		add	r2, r7, #5792
 783 015e 1360     		str	r3, [r2]
 139:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 784              		.loc 1 139 0
 785 0160 07F11803 		add	r3, r7, #24
 786 0164 143B     		subs	r3, r3, #20
 787 0166 1968     		ldr	r1, [r3]
 788 0168 07F11803 		add	r3, r7, #24
 789 016c 143B     		subs	r3, r3, #20
 790 016e 5868     		ldr	r0, [r3, #4]
 791 0170 07F13802 		add	r2, r7, #56
 792 0174 1C3A     		subs	r2, r2, #28
 793 0176 0B46     		mov	r3, r1
 794 0178 DB00     		lsls	r3, r3, #3
 795 017a 0B44     		add	r3, r3, r1
 796 017c 5B00     		lsls	r3, r3, #1
 797 017e 0B44     		add	r3, r3, r1
 798 0180 0344     		add	r3, r3, r0
 799 0182 0021     		movs	r1, #0
 800 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 140:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 141:pathfinding.c ****     stepNum++; // increment stepNum
 801              		.loc 1 141 0
 802 0188 07F5B553 		add	r3, r7, #5792
 803 018c 1B68     		ldr	r3, [r3]
 804 018e 0133     		adds	r3, r3, #1
 805 0190 07F5B552 		add	r2, r7, #5792
 806 0194 1360     		str	r3, [r2]
 142:pathfinding.c **** 
 143:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 18


 807              		.loc 1 143 0
 808 0196 07F59362 		add	r2, r7, #1176
 809 019a 083A     		subs	r2, r2, #8
 810 019c 07F5B553 		add	r3, r7, #5792
 811 01a0 03F10C03 		add	r3, r3, #12
 812 01a4 1968     		ldr	r1, [r3]
 813 01a6 0B46     		mov	r3, r1
 814 01a8 5B00     		lsls	r3, r3, #1
 815 01aa 0B44     		add	r3, r3, r1
 816 01ac 9B00     		lsls	r3, r3, #2
 817 01ae 1A44     		add	r2, r2, r3
 818 01b0 07F11803 		add	r3, r7, #24
 819 01b4 143B     		subs	r3, r3, #20
 820 01b6 93E80300 		ldmia	r3, {r0, r1}
 821 01ba 82E80300 		stmia	r2, {r0, r1}
 144:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 822              		.loc 1 144 0
 823 01be 07F59362 		add	r2, r7, #1176
 824 01c2 083A     		subs	r2, r2, #8
 825 01c4 07F5B553 		add	r3, r7, #5792
 826 01c8 03F10C03 		add	r3, r3, #12
 827 01cc 1968     		ldr	r1, [r3]
 828 01ce 0B46     		mov	r3, r1
 829 01d0 5B00     		lsls	r3, r3, #1
 830 01d2 0B44     		add	r3, r3, r1
 831 01d4 9B00     		lsls	r3, r3, #2
 832 01d6 1344     		add	r3, r3, r2
 833 01d8 0833     		adds	r3, r3, #8
 834 01da 0022     		movs	r2, #0
 835 01dc 1A60     		str	r2, [r3]
 145:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 836              		.loc 1 145 0
 837 01de 07F5B553 		add	r3, r7, #5792
 838 01e2 03F10C03 		add	r3, r3, #12
 839 01e6 1B68     		ldr	r3, [r3]
 840 01e8 0133     		adds	r3, r3, #1
 841 01ea 07F5B552 		add	r2, r7, #5792
 842 01ee 02F10C02 		add	r2, r2, #12
 843 01f2 1360     		str	r3, [r2]
 146:pathfinding.c **** 
 147:pathfinding.c ****     while (pqSize > 0) {
 844              		.loc 1 147 0
 845 01f4 F5E1     		b	.L27
 846              	.L37:
 847              	.LBB10:
 148:pathfinding.c ****         int idx = 0;
 848              		.loc 1 148 0
 849 01f6 0023     		movs	r3, #0
 850 01f8 07F5B452 		add	r2, r7, #5760
 851 01fc 02F11C02 		add	r2, r2, #28
 852 0200 1360     		str	r3, [r2]
 853              	.LBB11:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 854              		.loc 1 149 0
 855 0202 0123     		movs	r3, #1
 856 0204 07F5B452 		add	r2, r7, #5760
 857 0208 02F11802 		add	r2, r2, #24
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 19


 858 020c 1360     		str	r3, [r2]
 859 020e 34E0     		b	.L28
 860              	.L30:
 150:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 861              		.loc 1 150 0
 862 0210 07F59362 		add	r2, r7, #1176
 863 0214 083A     		subs	r2, r2, #8
 864 0216 07F5B453 		add	r3, r7, #5760
 865 021a 03F11803 		add	r3, r3, #24
 866 021e 1968     		ldr	r1, [r3]
 867 0220 0B46     		mov	r3, r1
 868 0222 5B00     		lsls	r3, r3, #1
 869 0224 0B44     		add	r3, r3, r1
 870 0226 9B00     		lsls	r3, r3, #2
 871 0228 1344     		add	r3, r3, r2
 872 022a 0833     		adds	r3, r3, #8
 873 022c 1868     		ldr	r0, [r3]
 874 022e 07F59362 		add	r2, r7, #1176
 875 0232 083A     		subs	r2, r2, #8
 876 0234 07F5B453 		add	r3, r7, #5760
 877 0238 03F11C03 		add	r3, r3, #28
 878 023c 1968     		ldr	r1, [r3]
 879 023e 0B46     		mov	r3, r1
 880 0240 5B00     		lsls	r3, r3, #1
 881 0242 0B44     		add	r3, r3, r1
 882 0244 9B00     		lsls	r3, r3, #2
 883 0246 1344     		add	r3, r3, r2
 884 0248 0833     		adds	r3, r3, #8
 885 024a 1B68     		ldr	r3, [r3]
 886 024c 9842     		cmp	r0, r3
 887 024e 09DA     		bge	.L29
 151:pathfinding.c ****                 idx = i; // find the shortest distance location 
 888              		.loc 1 151 0
 889 0250 07F5B453 		add	r3, r7, #5760
 890 0254 03F11803 		add	r3, r3, #24
 891 0258 1B68     		ldr	r3, [r3]
 892 025a 07F5B452 		add	r2, r7, #5760
 893 025e 02F11C02 		add	r2, r2, #28
 894 0262 1360     		str	r3, [r2]
 895              	.L29:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 896              		.loc 1 149 0 discriminator 2
 897 0264 07F5B453 		add	r3, r7, #5760
 898 0268 03F11803 		add	r3, r3, #24
 899 026c 1B68     		ldr	r3, [r3]
 900 026e 0133     		adds	r3, r3, #1
 901 0270 07F5B452 		add	r2, r7, #5760
 902 0274 02F11802 		add	r2, r2, #24
 903 0278 1360     		str	r3, [r2]
 904              	.L28:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 905              		.loc 1 149 0 is_stmt 0 discriminator 1
 906 027a 07F5B453 		add	r3, r7, #5760
 907 027e 03F11803 		add	r3, r3, #24
 908 0282 1A68     		ldr	r2, [r3]
 909 0284 07F5B553 		add	r3, r7, #5792
 910 0288 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 20


 911 028c 1B68     		ldr	r3, [r3]
 912 028e 9A42     		cmp	r2, r3
 913 0290 BEDB     		blt	.L30
 914              	.LBE11:
 152:pathfinding.c ****             }
 153:pathfinding.c ****         }
 154:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 915              		.loc 1 154 0 is_stmt 1
 916 0292 07F11801 		add	r1, r7, #24
 917 0296 0839     		subs	r1, r1, #8
 918 0298 07F59362 		add	r2, r7, #1176
 919 029c 083A     		subs	r2, r2, #8
 920 029e 07F5B453 		add	r3, r7, #5760
 921 02a2 03F11C03 		add	r3, r3, #28
 922 02a6 1868     		ldr	r0, [r3]
 923 02a8 0346     		mov	r3, r0
 924 02aa 5B00     		lsls	r3, r3, #1
 925 02ac 0344     		add	r3, r3, r0
 926 02ae 9B00     		lsls	r3, r3, #2
 927 02b0 1A44     		add	r2, r2, r3
 928 02b2 0B46     		mov	r3, r1
 929 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 930 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 155:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 931              		.loc 1 155 0
 932 02ba 07F5B553 		add	r3, r7, #5792
 933 02be 03F10C03 		add	r3, r3, #12
 934 02c2 1B68     		ldr	r3, [r3]
 935 02c4 591E     		subs	r1, r3, #1
 936 02c6 07F59362 		add	r2, r7, #1176
 937 02ca 083A     		subs	r2, r2, #8
 938 02cc 07F5B453 		add	r3, r7, #5760
 939 02d0 03F11C03 		add	r3, r3, #28
 940 02d4 1868     		ldr	r0, [r3]
 941 02d6 0346     		mov	r3, r0
 942 02d8 5B00     		lsls	r3, r3, #1
 943 02da 0344     		add	r3, r3, r0
 944 02dc 9B00     		lsls	r3, r3, #2
 945 02de D018     		adds	r0, r2, r3
 946 02e0 07F59362 		add	r2, r7, #1176
 947 02e4 083A     		subs	r2, r2, #8
 948 02e6 0B46     		mov	r3, r1
 949 02e8 5B00     		lsls	r3, r3, #1
 950 02ea 0B44     		add	r3, r3, r1
 951 02ec 9B00     		lsls	r3, r3, #2
 952 02ee 1A44     		add	r2, r2, r3
 953 02f0 0346     		mov	r3, r0
 954 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 955 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 156:pathfinding.c ****         pqSize--; // decrement pqSize
 956              		.loc 1 156 0
 957 02f8 07F5B553 		add	r3, r7, #5792
 958 02fc 03F10C03 		add	r3, r3, #12
 959 0300 1B68     		ldr	r3, [r3]
 960 0302 013B     		subs	r3, r3, #1
 961 0304 07F5B552 		add	r2, r7, #5792
 962 0308 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 21


 963 030c 1360     		str	r3, [r2]
 157:pathfinding.c **** 
 158:pathfinding.c ****         int row = current.location.row;
 964              		.loc 1 158 0
 965 030e 07F11803 		add	r3, r7, #24
 966 0312 083B     		subs	r3, r3, #8
 967 0314 1B68     		ldr	r3, [r3]
 968 0316 07F5B352 		add	r2, r7, #5728
 969 031a 02F11C02 		add	r2, r2, #28
 970 031e 1360     		str	r3, [r2]
 159:pathfinding.c ****         int col = current.location.col; // get current location details
 971              		.loc 1 159 0
 972 0320 07F11803 		add	r3, r7, #24
 973 0324 083B     		subs	r3, r3, #8
 974 0326 5B68     		ldr	r3, [r3, #4]
 975 0328 07F5B352 		add	r2, r7, #5728
 976 032c 02F11802 		add	r2, r2, #24
 977 0330 1360     		str	r3, [r2]
 160:pathfinding.c **** 
 161:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 978              		.loc 1 161 0
 979 0332 07F58F51 		add	r1, r7, #4576
 980 0336 01F10C01 		add	r1, r1, #12
 981 033a 07F5B353 		add	r3, r7, #5728
 982 033e 03F11C03 		add	r3, r3, #28
 983 0342 1A68     		ldr	r2, [r3]
 984 0344 1346     		mov	r3, r2
 985 0346 DB00     		lsls	r3, r3, #3
 986 0348 1344     		add	r3, r3, r2
 987 034a 5B00     		lsls	r3, r3, #1
 988 034c 1344     		add	r3, r3, r2
 989 034e 07F5B352 		add	r2, r7, #5728
 990 0352 02F11802 		add	r2, r2, #24
 991 0356 1268     		ldr	r2, [r2]
 992 0358 1344     		add	r3, r3, r2
 993 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 994 035e 012B     		cmp	r3, #1
 995 0360 40F03F81 		bne	.L27
 162:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 996              		.loc 1 162 0
 997 0364 07F58F51 		add	r1, r7, #4576
 998 0368 01F10C01 		add	r1, r1, #12
 999 036c 07F5B353 		add	r3, r7, #5728
 1000 0370 03F11C03 		add	r3, r3, #28
 1001 0374 1A68     		ldr	r2, [r3]
 1002 0376 1346     		mov	r3, r2
 1003 0378 DB00     		lsls	r3, r3, #3
 1004 037a 1344     		add	r3, r3, r2
 1005 037c 5B00     		lsls	r3, r3, #1
 1006 037e 1344     		add	r3, r3, r2
 1007 0380 07F5B352 		add	r2, r7, #5728
 1008 0384 02F11802 		add	r2, r2, #24
 1009 0388 1268     		ldr	r2, [r2]
 1010 038a 1344     		add	r3, r3, r2
 1011 038c 0022     		movs	r2, #0
 1012 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 163:pathfinding.c **** 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 22


 164:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1013              		.loc 1 164 0
 1014 0392 07F5B653 		add	r3, r7, #5824
 1015 0396 03F10C03 		add	r3, r3, #12
 1016 039a 1A68     		ldr	r2, [r3]
 1017 039c 07F5B353 		add	r3, r7, #5728
 1018 03a0 03F11C03 		add	r3, r3, #28
 1019 03a4 1B68     		ldr	r3, [r3]
 1020 03a6 9A42     		cmp	r2, r3
 1021 03a8 0CD1     		bne	.L32
 1022              		.loc 1 164 0 is_stmt 0 discriminator 1
 1023 03aa 07F5B653 		add	r3, r7, #5824
 1024 03ae 03F11003 		add	r3, r3, #16
 1025 03b2 1A68     		ldr	r2, [r3]
 1026 03b4 07F5B353 		add	r3, r7, #5728
 1027 03b8 03F11803 		add	r3, r3, #24
 1028 03bc 1B68     		ldr	r3, [r3]
 1029 03be 9A42     		cmp	r2, r3
 1030 03c0 00F01881 		beq	.L43
 1031              	.L32:
 1032              	.LBB12:
 165:pathfinding.c ****                 break; // if reached target destination, end
 166:pathfinding.c ****             }
 167:pathfinding.c ****             // make a move, check if valid
 168:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1033              		.loc 1 168 0 is_stmt 1
 1034 03c4 0023     		movs	r3, #0
 1035 03c6 07F5B452 		add	r2, r7, #5760
 1036 03ca 02F11402 		add	r2, r2, #20
 1037 03ce 1360     		str	r3, [r2]
 1038 03d0 FFE0     		b	.L34
 1039              	.L36:
 1040              	.LBB13:
 169:pathfinding.c ****                 int newRow = row + moves[i].row;
 1041              		.loc 1 169 0
 1042 03d2 D04A     		ldr	r2, .L44
 1043 03d4 07F5B453 		add	r3, r7, #5760
 1044 03d8 03F11403 		add	r3, r3, #20
 1045 03dc 1B68     		ldr	r3, [r3]
 1046 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1047 03e2 07F5B353 		add	r3, r7, #5728
 1048 03e6 03F11C03 		add	r3, r3, #28
 1049 03ea 1B68     		ldr	r3, [r3]
 1050 03ec 1344     		add	r3, r3, r2
 1051 03ee 07F5B352 		add	r2, r7, #5728
 1052 03f2 02F11402 		add	r2, r2, #20
 1053 03f6 1360     		str	r3, [r2]
 170:pathfinding.c ****                 int newCol = col + moves[i].col;
 1054              		.loc 1 170 0
 1055 03f8 C64A     		ldr	r2, .L44
 1056 03fa 07F5B453 		add	r3, r7, #5760
 1057 03fe 03F11403 		add	r3, r3, #20
 1058 0402 1B68     		ldr	r3, [r3]
 1059 0404 DB00     		lsls	r3, r3, #3
 1060 0406 1344     		add	r3, r3, r2
 1061 0408 5A68     		ldr	r2, [r3, #4]
 1062 040a 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 23


 1063 040e 03F11803 		add	r3, r3, #24
 1064 0412 1B68     		ldr	r3, [r3]
 1065 0414 1344     		add	r3, r3, r2
 1066 0416 07F5B352 		add	r2, r7, #5728
 1067 041a 02F11002 		add	r2, r2, #16
 1068 041e 1360     		str	r3, [r2]
 171:pathfinding.c **** 
 172:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1069              		.loc 1 172 0
 1070 0420 07F11803 		add	r3, r7, #24
 1071 0424 0C3B     		subs	r3, r3, #12
 1072 0426 1B68     		ldr	r3, [r3]
 1073 0428 0093     		str	r3, [sp]
 1074 042a 1323     		movs	r3, #19
 1075 042c 0F22     		movs	r2, #15
 1076 042e 07F5B351 		add	r1, r7, #5728
 1077 0432 01F11001 		add	r1, r1, #16
 1078 0436 0968     		ldr	r1, [r1]
 1079 0438 07F5B350 		add	r0, r7, #5728
 1080 043c 00F11400 		add	r0, r0, #20
 1081 0440 0068     		ldr	r0, [r0]
 1082 0442 FFF7FEFF 		bl	isValidMove
 1083 0446 0346     		mov	r3, r0
 1084 0448 002B     		cmp	r3, #0
 1085 044a 00F0B780 		beq	.L35
 1086              		.loc 1 172 0 is_stmt 0 discriminator 1
 1087 044e 07F58F51 		add	r1, r7, #4576
 1088 0452 01F10C01 		add	r1, r1, #12
 1089 0456 07F5B353 		add	r3, r7, #5728
 1090 045a 03F11403 		add	r3, r3, #20
 1091 045e 1A68     		ldr	r2, [r3]
 1092 0460 1346     		mov	r3, r2
 1093 0462 DB00     		lsls	r3, r3, #3
 1094 0464 1344     		add	r3, r3, r2
 1095 0466 5B00     		lsls	r3, r3, #1
 1096 0468 1344     		add	r3, r3, r2
 1097 046a 07F5B352 		add	r2, r7, #5728
 1098 046e 02F11002 		add	r2, r2, #16
 1099 0472 1268     		ldr	r2, [r2]
 1100 0474 1344     		add	r3, r3, r2
 1101 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1102 047a 012B     		cmp	r3, #1
 1103 047c 40F09E80 		bne	.L35
 1104              	.LBB14:
 173:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1105              		.loc 1 173 0 is_stmt 1
 1106 0480 07F13802 		add	r2, r7, #56
 1107 0484 1C3A     		subs	r2, r2, #28
 1108 0486 07F5B353 		add	r3, r7, #5728
 1109 048a 03F11C03 		add	r3, r3, #28
 1110 048e 1968     		ldr	r1, [r3]
 1111 0490 0B46     		mov	r3, r1
 1112 0492 DB00     		lsls	r3, r3, #3
 1113 0494 0B44     		add	r3, r3, r1
 1114 0496 5B00     		lsls	r3, r3, #1
 1115 0498 0B44     		add	r3, r3, r1
 1116 049a 07F5B351 		add	r1, r7, #5728
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 24


 1117 049e 01F11801 		add	r1, r1, #24
 1118 04a2 0968     		ldr	r1, [r1]
 1119 04a4 0B44     		add	r3, r3, r1
 1120 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1121 04aa 0133     		adds	r3, r3, #1
 1122 04ac 07F5B352 		add	r2, r7, #5728
 1123 04b0 02F10C02 		add	r2, r2, #12
 1124 04b4 1360     		str	r3, [r2]
 174:pathfinding.c ****                     // take the shortest distance between new and existing
 175:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1125              		.loc 1 175 0
 1126 04b6 07F13802 		add	r2, r7, #56
 1127 04ba 1C3A     		subs	r2, r2, #28
 1128 04bc 07F5B353 		add	r3, r7, #5728
 1129 04c0 03F11403 		add	r3, r3, #20
 1130 04c4 1968     		ldr	r1, [r3]
 1131 04c6 0B46     		mov	r3, r1
 1132 04c8 DB00     		lsls	r3, r3, #3
 1133 04ca 0B44     		add	r3, r3, r1
 1134 04cc 5B00     		lsls	r3, r3, #1
 1135 04ce 0B44     		add	r3, r3, r1
 1136 04d0 07F5B351 		add	r1, r7, #5728
 1137 04d4 01F11001 		add	r1, r1, #16
 1138 04d8 0968     		ldr	r1, [r1]
 1139 04da 0B44     		add	r3, r3, r1
 1140 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1141 04e0 07F5B353 		add	r3, r7, #5728
 1142 04e4 03F10C03 		add	r3, r3, #12
 1143 04e8 1B68     		ldr	r3, [r3]
 1144 04ea 9A42     		cmp	r2, r3
 1145 04ec 66DD     		ble	.L35
 176:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1146              		.loc 1 176 0
 1147 04ee 07F13802 		add	r2, r7, #56
 1148 04f2 1C3A     		subs	r2, r2, #28
 1149 04f4 07F5B353 		add	r3, r7, #5728
 1150 04f8 03F11403 		add	r3, r3, #20
 1151 04fc 1968     		ldr	r1, [r3]
 1152 04fe 0B46     		mov	r3, r1
 1153 0500 DB00     		lsls	r3, r3, #3
 1154 0502 0B44     		add	r3, r3, r1
 1155 0504 5B00     		lsls	r3, r3, #1
 1156 0506 0B44     		add	r3, r3, r1
 1157 0508 07F5B351 		add	r1, r7, #5728
 1158 050c 01F11001 		add	r1, r1, #16
 1159 0510 0968     		ldr	r1, [r1]
 1160 0512 0B44     		add	r3, r3, r1
 1161 0514 07F5B351 		add	r1, r7, #5728
 1162 0518 01F10C01 		add	r1, r1, #12
 1163 051c 0968     		ldr	r1, [r1]
 1164 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 177:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 178:pathfinding.c ****                         
 179:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1165              		.loc 1 179 0
 1166 0522 07F59362 		add	r2, r7, #1176
 1167 0526 083A     		subs	r2, r2, #8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 25


 1168 0528 07F5B553 		add	r3, r7, #5792
 1169 052c 03F10C03 		add	r3, r3, #12
 1170 0530 1968     		ldr	r1, [r3]
 1171 0532 0B46     		mov	r3, r1
 1172 0534 5B00     		lsls	r3, r3, #1
 1173 0536 0B44     		add	r3, r3, r1
 1174 0538 9B00     		lsls	r3, r3, #2
 1175 053a 1344     		add	r3, r3, r2
 1176 053c 07F5B352 		add	r2, r7, #5728
 1177 0540 02F11402 		add	r2, r2, #20
 1178 0544 1268     		ldr	r2, [r2]
 1179 0546 1A60     		str	r2, [r3]
 180:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1180              		.loc 1 180 0
 1181 0548 07F59362 		add	r2, r7, #1176
 1182 054c 083A     		subs	r2, r2, #8
 1183 054e 07F5B553 		add	r3, r7, #5792
 1184 0552 03F10C03 		add	r3, r3, #12
 1185 0556 1968     		ldr	r1, [r3]
 1186 0558 0B46     		mov	r3, r1
 1187 055a 5B00     		lsls	r3, r3, #1
 1188 055c 0B44     		add	r3, r3, r1
 1189 055e 9B00     		lsls	r3, r3, #2
 1190 0560 1344     		add	r3, r3, r2
 1191 0562 0433     		adds	r3, r3, #4
 1192 0564 07F5B352 		add	r2, r7, #5728
 1193 0568 02F11002 		add	r2, r2, #16
 1194 056c 1268     		ldr	r2, [r2]
 1195 056e 1A60     		str	r2, [r3]
 181:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1196              		.loc 1 181 0
 1197 0570 07F59362 		add	r2, r7, #1176
 1198 0574 083A     		subs	r2, r2, #8
 1199 0576 07F5B553 		add	r3, r7, #5792
 1200 057a 03F10C03 		add	r3, r3, #12
 1201 057e 1968     		ldr	r1, [r3]
 1202 0580 0B46     		mov	r3, r1
 1203 0582 5B00     		lsls	r3, r3, #1
 1204 0584 0B44     		add	r3, r3, r1
 1205 0586 9B00     		lsls	r3, r3, #2
 1206 0588 1344     		add	r3, r3, r2
 1207 058a 0833     		adds	r3, r3, #8
 1208 058c 07F5B352 		add	r2, r7, #5728
 1209 0590 02F10C02 		add	r2, r2, #12
 1210 0594 1268     		ldr	r2, [r2]
 1211 0596 1A60     		str	r2, [r3]
 182:pathfinding.c ****                         
 183:pathfinding.c ****                         stepNum++;
 1212              		.loc 1 183 0
 1213 0598 07F5B553 		add	r3, r7, #5792
 1214 059c 1B68     		ldr	r3, [r3]
 1215 059e 0133     		adds	r3, r3, #1
 1216 05a0 07F5B552 		add	r2, r7, #5792
 1217 05a4 1360     		str	r3, [r2]
 184:pathfinding.c ****                         pqSize++;
 1218              		.loc 1 184 0
 1219 05a6 07F5B553 		add	r3, r7, #5792
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 26


 1220 05aa 03F10C03 		add	r3, r3, #12
 1221 05ae 1B68     		ldr	r3, [r3]
 1222 05b0 0133     		adds	r3, r3, #1
 1223 05b2 07F5B552 		add	r2, r7, #5792
 1224 05b6 02F10C02 		add	r2, r2, #12
 1225 05ba 1360     		str	r3, [r2]
 1226              	.L35:
 1227              	.LBE14:
 1228              	.LBE13:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1229              		.loc 1 168 0 discriminator 2
 1230 05bc 07F5B453 		add	r3, r7, #5760
 1231 05c0 03F11403 		add	r3, r3, #20
 1232 05c4 1B68     		ldr	r3, [r3]
 1233 05c6 0133     		adds	r3, r3, #1
 1234 05c8 07F5B452 		add	r2, r7, #5760
 1235 05cc 02F11402 		add	r2, r2, #20
 1236 05d0 1360     		str	r3, [r2]
 1237              	.L34:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1238              		.loc 1 168 0 is_stmt 0 discriminator 1
 1239 05d2 07F5B453 		add	r3, r7, #5760
 1240 05d6 03F11403 		add	r3, r3, #20
 1241 05da 1B68     		ldr	r3, [r3]
 1242 05dc 032B     		cmp	r3, #3
 1243 05de 7FF6F8AE 		bls	.L36
 1244              	.L27:
 1245              	.LBE12:
 1246              	.LBE10:
 147:pathfinding.c ****         int idx = 0;
 1247              		.loc 1 147 0 is_stmt 1
 1248 05e2 07F5B553 		add	r3, r7, #5792
 1249 05e6 03F10C03 		add	r3, r3, #12
 1250 05ea 1B68     		ldr	r3, [r3]
 1251 05ec 002B     		cmp	r3, #0
 1252 05ee 3FF702AE 		bgt	.L37
 1253 05f2 00E0     		b	.L33
 1254              	.L43:
 1255              	.LBB15:
 165:pathfinding.c ****             }
 1256              		.loc 1 165 0
 1257 05f4 00BF     		nop
 1258              	.L33:
 1259              	.LBE15:
 185:pathfinding.c ****                     }
 186:pathfinding.c ****                 }
 187:pathfinding.c ****             }
 188:pathfinding.c ****         }
 189:pathfinding.c ****     }
 190:pathfinding.c **** 
 191:pathfinding.c ****     // PATH RECONSTRUCTION
 192:pathfinding.c ****     // initialise maximum distance- will be decremented
 193:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1260              		.loc 1 193 0
 1261 05f6 07F5B653 		add	r3, r7, #5824
 1262 05fa 03F10C03 		add	r3, r3, #12
 1263 05fe 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 27


 1264 0600 07F5B653 		add	r3, r7, #5824
 1265 0604 03F11003 		add	r3, r3, #16
 1266 0608 1868     		ldr	r0, [r3]
 1267 060a 07F13802 		add	r2, r7, #56
 1268 060e 1C3A     		subs	r2, r2, #28
 1269 0610 0B46     		mov	r3, r1
 1270 0612 DB00     		lsls	r3, r3, #3
 1271 0614 0B44     		add	r3, r3, r1
 1272 0616 5B00     		lsls	r3, r3, #1
 1273 0618 0B44     		add	r3, r3, r1
 1274 061a 0344     		add	r3, r3, r0
 1275 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1276 0620 07F5B452 		add	r2, r7, #5760
 1277 0624 02F11002 		add	r2, r2, #16
 1278 0628 1360     		str	r3, [r2]
 194:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1279              		.loc 1 194 0
 1280 062a 3B4A     		ldr	r2, .L44+4
 1281 062c 07F5B453 		add	r3, r7, #5760
 1282 0630 03F11003 		add	r3, r3, #16
 1283 0634 1B68     		ldr	r3, [r3]
 1284 0636 1360     		str	r3, [r2]
 195:pathfinding.c ****     // retsteps can be generated from here
 196:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1285              		.loc 1 196 0
 1286 0638 07F5B453 		add	r3, r7, #5760
 1287 063c 03F11003 		add	r3, r3, #16
 1288 0640 1B68     		ldr	r3, [r3]
 1289 0642 DB00     		lsls	r3, r3, #3
 1290 0644 1846     		mov	r0, r3
 1291 0646 FFF7FEFF 		bl	malloc
 1292 064a 0346     		mov	r3, r0
 1293 064c 07F5B352 		add	r2, r7, #5728
 1294 0650 02F10802 		add	r2, r2, #8
 1295 0654 1360     		str	r3, [r2]
 197:pathfinding.c ****     int currentRow = targetlocation.row;
 1296              		.loc 1 197 0
 1297 0656 07F5B653 		add	r3, r7, #5824
 1298 065a 03F10C03 		add	r3, r3, #12
 1299 065e 1B68     		ldr	r3, [r3]
 1300 0660 07F5B452 		add	r2, r7, #5760
 1301 0664 02F10C02 		add	r2, r2, #12
 1302 0668 1360     		str	r3, [r2]
 198:pathfinding.c ****     int currentCol = targetlocation.col;
 1303              		.loc 1 198 0
 1304 066a 07F5B653 		add	r3, r7, #5824
 1305 066e 03F11003 		add	r3, r3, #16
 1306 0672 1B68     		ldr	r3, [r3]
 1307 0674 07F5B452 		add	r2, r7, #5760
 1308 0678 02F10802 		add	r2, r2, #8
 1309 067c 1360     		str	r3, [r2]
 199:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1310              		.loc 1 199 0
 1311 067e 07F5B453 		add	r3, r7, #5760
 1312 0682 03F11003 		add	r3, r3, #16
 1313 0686 1B68     		ldr	r3, [r3]
 1314 0688 03F10053 		add	r3, r3, #536870912
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 28


 1315 068c 013B     		subs	r3, r3, #1
 1316 068e DB00     		lsls	r3, r3, #3
 1317 0690 07F5B352 		add	r2, r7, #5728
 1318 0694 02F10802 		add	r2, r2, #8
 1319 0698 1268     		ldr	r2, [r2]
 1320 069a 1344     		add	r3, r3, r2
 1321 069c 07F5B452 		add	r2, r7, #5760
 1322 06a0 02F10C02 		add	r2, r2, #12
 1323 06a4 1268     		ldr	r2, [r2]
 1324 06a6 1A60     		str	r2, [r3]
 200:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1325              		.loc 1 200 0
 1326 06a8 07F5B453 		add	r3, r7, #5760
 1327 06ac 03F11003 		add	r3, r3, #16
 1328 06b0 1B68     		ldr	r3, [r3]
 1329 06b2 03F10053 		add	r3, r3, #536870912
 1330 06b6 013B     		subs	r3, r3, #1
 1331 06b8 DB00     		lsls	r3, r3, #3
 1332 06ba 07F5B352 		add	r2, r7, #5728
 1333 06be 02F10802 		add	r2, r2, #8
 1334 06c2 1268     		ldr	r2, [r2]
 1335 06c4 1344     		add	r3, r3, r2
 1336 06c6 07F5B452 		add	r2, r7, #5760
 1337 06ca 02F10802 		add	r2, r2, #8
 1338 06ce 1268     		ldr	r2, [r2]
 1339 06d0 5A60     		str	r2, [r3, #4]
 201:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 202:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1340              		.loc 1 202 0
 1341 06d2 07F5B453 		add	r3, r7, #5760
 1342 06d6 03F10C03 		add	r3, r3, #12
 1343 06da 1B68     		ldr	r3, [r3]
 1344 06dc 4C22     		movs	r2, #76
 1345 06de 02FB03F2 		mul	r2, r2, r3
 1346 06e2 07F11803 		add	r3, r7, #24
 1347 06e6 0C3B     		subs	r3, r3, #12
 1348 06e8 1B68     		ldr	r3, [r3]
 1349 06ea 1344     		add	r3, r3, r2
 1350 06ec 07F5B452 		add	r2, r7, #5760
 1351 06f0 02F10802 		add	r2, r2, #8
 1352 06f4 1268     		ldr	r2, [r2]
 1353 06f6 0921     		movs	r1, #9
 1354 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 203:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 204:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 205:pathfinding.c ****     int pathIndex = 0;
 1355              		.loc 1 205 0
 1356 06fc 0023     		movs	r3, #0
 1357 06fe 07F5B452 		add	r2, r7, #5760
 1358 0702 02F10402 		add	r2, r2, #4
 1359 0706 1360     		str	r3, [r2]
 206:pathfinding.c **** 
 207:pathfinding.c ****     while(shortestDist > 0) {    
 1360              		.loc 1 207 0
 1361 0708 0BE1     		b	.L38
 1362              	.L42:
 1363              	.LBB16:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 29


 208:pathfinding.c ****         // make a move, check if valid and is the next step in path
 209:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1364              		.loc 1 209 0
 1365 070a 0023     		movs	r3, #0
 1366 070c 07F5B452 		add	r2, r7, #5760
 1367 0710 1360     		str	r3, [r2]
 1368 0712 00E1     		b	.L39
 1369              	.L45:
 1370              		.align	2
 1371              	.L44:
 1372 0714 00000000 		.word	moves
 1373 0718 5C0D0000 		.word	numSteps
 1374              	.L41:
 1375              	.LBB17:
 210:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1376              		.loc 1 210 0
 1377 071c 894A     		ldr	r2, .L46
 1378 071e 07F5B453 		add	r3, r7, #5760
 1379 0722 1B68     		ldr	r3, [r3]
 1380 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1381 0728 07F5B453 		add	r3, r7, #5760
 1382 072c 03F10C03 		add	r3, r3, #12
 1383 0730 1B68     		ldr	r3, [r3]
 1384 0732 1344     		add	r3, r3, r2
 1385 0734 07F5B352 		add	r2, r7, #5728
 1386 0738 02F10402 		add	r2, r2, #4
 1387 073c 1360     		str	r3, [r2]
 211:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1388              		.loc 1 211 0
 1389 073e 814A     		ldr	r2, .L46
 1390 0740 07F5B453 		add	r3, r7, #5760
 1391 0744 1B68     		ldr	r3, [r3]
 1392 0746 DB00     		lsls	r3, r3, #3
 1393 0748 1344     		add	r3, r3, r2
 1394 074a 5A68     		ldr	r2, [r3, #4]
 1395 074c 07F5B453 		add	r3, r7, #5760
 1396 0750 03F10803 		add	r3, r3, #8
 1397 0754 1B68     		ldr	r3, [r3]
 1398 0756 1344     		add	r3, r3, r2
 1399 0758 07F5B352 		add	r2, r7, #5728
 1400 075c 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1401              		.loc 1 213 0
 1402 075e 07F11803 		add	r3, r7, #24
 1403 0762 0C3B     		subs	r3, r3, #12
 1404 0764 1B68     		ldr	r3, [r3]
 1405 0766 0093     		str	r3, [sp]
 1406 0768 1323     		movs	r3, #19
 1407 076a 0F22     		movs	r2, #15
 1408 076c 07F5B351 		add	r1, r7, #5728
 1409 0770 0968     		ldr	r1, [r1]
 1410 0772 07F5B350 		add	r0, r7, #5728
 1411 0776 00F10400 		add	r0, r0, #4
 1412 077a 0068     		ldr	r0, [r0]
 1413 077c FFF7FEFF 		bl	isValidMove
 1414 0780 0346     		mov	r3, r0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 30


 1415 0782 002B     		cmp	r3, #0
 1416 0784 00F0C080 		beq	.L40
 1417              		.loc 1 213 0 is_stmt 0 discriminator 1
 1418 0788 07F13802 		add	r2, r7, #56
 1419 078c 1C3A     		subs	r2, r2, #28
 1420 078e 07F5B353 		add	r3, r7, #5728
 1421 0792 03F10403 		add	r3, r3, #4
 1422 0796 1968     		ldr	r1, [r3]
 1423 0798 0B46     		mov	r3, r1
 1424 079a DB00     		lsls	r3, r3, #3
 1425 079c 0B44     		add	r3, r3, r1
 1426 079e 5B00     		lsls	r3, r3, #1
 1427 07a0 0B44     		add	r3, r3, r1
 1428 07a2 07F5B351 		add	r1, r7, #5728
 1429 07a6 0968     		ldr	r1, [r1]
 1430 07a8 0B44     		add	r3, r3, r1
 1431 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1432 07ae 07F5B453 		add	r3, r7, #5760
 1433 07b2 03F11003 		add	r3, r3, #16
 1434 07b6 1B68     		ldr	r3, [r3]
 1435 07b8 013B     		subs	r3, r3, #1
 1436 07ba 9A42     		cmp	r2, r3
 1437 07bc 40F0A480 		bne	.L40
 214:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1438              		.loc 1 214 0 is_stmt 1
 1439 07c0 07F5B353 		add	r3, r7, #5728
 1440 07c4 03F10403 		add	r3, r3, #4
 1441 07c8 1B68     		ldr	r3, [r3]
 1442 07ca 4C22     		movs	r2, #76
 1443 07cc 02FB03F2 		mul	r2, r2, r3
 1444 07d0 07F11803 		add	r3, r7, #24
 1445 07d4 0C3B     		subs	r3, r3, #12
 1446 07d6 1B68     		ldr	r3, [r3]
 1447 07d8 1344     		add	r3, r3, r2
 1448 07da 07F5B352 		add	r2, r7, #5728
 1449 07de 1268     		ldr	r2, [r2]
 1450 07e0 0821     		movs	r1, #8
 1451 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 215:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1452              		.loc 1 215 0
 1453 07e6 5849     		ldr	r1, .L46+4
 1454 07e8 07F5B453 		add	r3, r7, #5760
 1455 07ec 03F10403 		add	r3, r3, #4
 1456 07f0 1B68     		ldr	r3, [r3]
 1457 07f2 07F5B352 		add	r2, r7, #5728
 1458 07f6 02F10402 		add	r2, r2, #4
 1459 07fa 1268     		ldr	r2, [r2]
 1460 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 216:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1461              		.loc 1 216 0
 1462 0800 514A     		ldr	r2, .L46+4
 1463 0802 07F5B453 		add	r3, r7, #5760
 1464 0806 03F10403 		add	r3, r3, #4
 1465 080a 1B68     		ldr	r3, [r3]
 1466 080c DB00     		lsls	r3, r3, #3
 1467 080e 1344     		add	r3, r3, r2
 1468 0810 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 31


 1469 0814 1268     		ldr	r2, [r2]
 1470 0816 5A60     		str	r2, [r3, #4]
 217:pathfinding.c ****                 pathIndex++;
 1471              		.loc 1 217 0
 1472 0818 07F5B453 		add	r3, r7, #5760
 1473 081c 03F10403 		add	r3, r3, #4
 1474 0820 1B68     		ldr	r3, [r3]
 1475 0822 0133     		adds	r3, r3, #1
 1476 0824 07F5B452 		add	r2, r7, #5760
 1477 0828 02F10402 		add	r2, r2, #4
 1478 082c 1360     		str	r3, [r2]
 218:pathfinding.c ****                 // reverse array somewhere
 219:pathfinding.c **** 
 220:pathfinding.c ****                 shortestDist--; // decrement distance
 1479              		.loc 1 220 0
 1480 082e 07F5B453 		add	r3, r7, #5760
 1481 0832 03F11003 		add	r3, r3, #16
 1482 0836 1B68     		ldr	r3, [r3]
 1483 0838 013B     		subs	r3, r3, #1
 1484 083a 07F5B452 		add	r2, r7, #5760
 1485 083e 02F11002 		add	r2, r2, #16
 1486 0842 1360     		str	r3, [r2]
 221:pathfinding.c ****                 currentRow = newRow; 
 1487              		.loc 1 221 0
 1488 0844 07F5B353 		add	r3, r7, #5728
 1489 0848 03F10403 		add	r3, r3, #4
 1490 084c 1B68     		ldr	r3, [r3]
 1491 084e 07F5B452 		add	r2, r7, #5760
 1492 0852 02F10C02 		add	r2, r2, #12
 1493 0856 1360     		str	r3, [r2]
 222:pathfinding.c ****                 currentCol = newCol; // change current location
 1494              		.loc 1 222 0
 1495 0858 07F5B353 		add	r3, r7, #5728
 1496 085c 1B68     		ldr	r3, [r3]
 1497 085e 07F5B452 		add	r2, r7, #5760
 1498 0862 02F10802 		add	r2, r2, #8
 1499 0866 1360     		str	r3, [r2]
 223:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 224:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1500              		.loc 1 224 0
 1501 0868 07F5B453 		add	r3, r7, #5760
 1502 086c 03F11003 		add	r3, r3, #16
 1503 0870 1B68     		ldr	r3, [r3]
 1504 0872 DB00     		lsls	r3, r3, #3
 1505 0874 07F5B352 		add	r2, r7, #5728
 1506 0878 02F10802 		add	r2, r2, #8
 1507 087c 1268     		ldr	r2, [r2]
 1508 087e 1344     		add	r3, r3, r2
 1509 0880 07F5B452 		add	r2, r7, #5760
 1510 0884 02F10C02 		add	r2, r2, #12
 1511 0888 1268     		ldr	r2, [r2]
 1512 088a 1A60     		str	r2, [r3]
 225:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1513              		.loc 1 225 0
 1514 088c 07F5B453 		add	r3, r7, #5760
 1515 0890 03F11003 		add	r3, r3, #16
 1516 0894 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 32


 1517 0896 DB00     		lsls	r3, r3, #3
 1518 0898 07F5B352 		add	r2, r7, #5728
 1519 089c 02F10802 		add	r2, r2, #8
 1520 08a0 1268     		ldr	r2, [r2]
 1521 08a2 1344     		add	r3, r3, r2
 1522 08a4 07F5B452 		add	r2, r7, #5760
 1523 08a8 02F10802 		add	r2, r2, #8
 1524 08ac 1268     		ldr	r2, [r2]
 1525 08ae 5A60     		str	r2, [r3, #4]
 226:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1526              		.loc 1 226 0
 1527 08b0 07F11803 		add	r3, r7, #24
 1528 08b4 143B     		subs	r3, r3, #20
 1529 08b6 1A68     		ldr	r2, [r3]
 1530 08b8 07F5B453 		add	r3, r7, #5760
 1531 08bc 03F10C03 		add	r3, r3, #12
 1532 08c0 1B68     		ldr	r3, [r3]
 1533 08c2 9A42     		cmp	r2, r3
 1534 08c4 20D1     		bne	.L40
 1535              		.loc 1 226 0 is_stmt 0 discriminator 1
 1536 08c6 07F11803 		add	r3, r7, #24
 1537 08ca 143B     		subs	r3, r3, #20
 1538 08cc 5A68     		ldr	r2, [r3, #4]
 1539 08ce 07F5B453 		add	r3, r7, #5760
 1540 08d2 03F10803 		add	r3, r3, #8
 1541 08d6 1B68     		ldr	r3, [r3]
 1542 08d8 9A42     		cmp	r2, r3
 1543 08da 15D1     		bne	.L40
 227:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1544              		.loc 1 227 0 is_stmt 1
 1545 08dc 07F5B453 		add	r3, r7, #5760
 1546 08e0 03F10C03 		add	r3, r3, #12
 1547 08e4 1B68     		ldr	r3, [r3]
 1548 08e6 4C22     		movs	r2, #76
 1549 08e8 02FB03F2 		mul	r2, r2, r3
 1550 08ec 07F11803 		add	r3, r7, #24
 1551 08f0 0C3B     		subs	r3, r3, #12
 1552 08f2 1B68     		ldr	r3, [r3]
 1553 08f4 1344     		add	r3, r3, r2
 1554 08f6 07F5B452 		add	r2, r7, #5760
 1555 08fa 02F10802 		add	r2, r2, #8
 1556 08fe 1268     		ldr	r2, [r2]
 1557 0900 0221     		movs	r1, #2
 1558 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 228:pathfinding.c ****                     break;
 1559              		.loc 1 228 0
 1560 0906 0CE0     		b	.L38
 1561              	.L40:
 1562              	.LBE17:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1563              		.loc 1 209 0 discriminator 2
 1564 0908 07F5B453 		add	r3, r7, #5760
 1565 090c 1B68     		ldr	r3, [r3]
 1566 090e 0133     		adds	r3, r3, #1
 1567 0910 07F5B452 		add	r2, r7, #5760
 1568 0914 1360     		str	r3, [r2]
 1569              	.L39:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 33


 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1570              		.loc 1 209 0 is_stmt 0 discriminator 1
 1571 0916 07F5B453 		add	r3, r7, #5760
 1572 091a 1B68     		ldr	r3, [r3]
 1573 091c 032B     		cmp	r3, #3
 1574 091e 7FF6FDAE 		bls	.L41
 1575              	.L38:
 1576              	.LBE16:
 207:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1577              		.loc 1 207 0 is_stmt 1
 1578 0922 07F5B453 		add	r3, r7, #5760
 1579 0926 03F11003 		add	r3, r3, #16
 1580 092a 1B68     		ldr	r3, [r3]
 1581 092c 002B     		cmp	r3, #0
 1582 092e 3FF7ECAE 		bgt	.L42
 229:pathfinding.c ****                 }   
 230:pathfinding.c ****             }
 231:pathfinding.c ****         }
 232:pathfinding.c ****     }
 233:pathfinding.c **** }
 1583              		.loc 1 233 0
 1584 0932 00BF     		nop
 1585 0934 07F5B557 		add	r7, r7, #5792
 1586 0938 1C37     		adds	r7, r7, #28
 1587              		.cfi_def_cfa_offset 20
 1588 093a BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 093c BDE89040 		pop	{r4, r7, lr}
 1592              		.cfi_restore 14
 1593              		.cfi_restore 7
 1594              		.cfi_restore 4
 1595              		.cfi_def_cfa_offset 8
 1596 0940 02B0     		add	sp, sp, #8
 1597              		.cfi_def_cfa_offset 0
 1598 0942 7047     		bx	lr
 1599              	.L47:
 1600              		.align	2
 1601              	.L46:
 1602 0944 00000000 		.word	moves
 1603 0948 00000000 		.word	list_of_optimal_coordinates
 1604              		.cfi_endproc
 1605              	.LFE4:
 1606              		.size	dijkstra, .-dijkstra
 1607              		.global	ignoreR
 1608              		.bss
 1609              		.align	2
 1610              		.type	ignoreR, %object
 1611              		.size	ignoreR, 4
 1612              	ignoreR:
 1613 0d60 00000000 		.space	4
 1614              		.global	ignoreL
 1615              		.align	2
 1616              		.type	ignoreL, %object
 1617              		.size	ignoreL, 4
 1618              	ignoreL:
 1619 0d64 00000000 		.space	4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 34


 1620              		.section	.rodata
 1621 0003 00       		.align	2
 1622              	.LC1:
 1623 0004 53746F70 		.ascii	"Stop at target\000"
 1623      20617420 
 1623      74617267 
 1623      657400
 1624 0013 00       		.align	2
 1625              	.LC2:
 1626 0014 52696768 		.ascii	"Right Turn\000"
 1626      74205475 
 1626      726E00
 1627 001f 00       		.align	2
 1628              	.LC3:
 1629 0020 4C656674 		.ascii	"Left Turn\000"
 1629      20547572 
 1629      6E00
 1630 002a 0000     		.align	2
 1631              	.LC4:
 1632 002c 466F7277 		.ascii	"Forward until target\000"
 1632      61726420 
 1632      756E7469 
 1632      6C207461 
 1632      72676574 
 1633 0041 000000   		.align	2
 1634              	.LC5:
 1635 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1635      6172643B 
 1635      2069676E 
 1635      6F726520 
 1635      25644C2C 
 1636 0065 000000   		.align	2
 1637              	.LC6:
 1638 0068 552D7475 		.ascii	"U-turn\000"
 1638      726E00
 1639              		.section	.text.getPathInstructions,"ax",%progbits
 1640              		.align	2
 1641              		.global	getPathInstructions
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	getPathInstructions, %function
 1645              	getPathInstructions:
 1646              	.LFB5:
 234:pathfinding.c **** 
 235:pathfinding.c **** 
 236:pathfinding.c **** 
 237:pathfinding.c **** // PATHFINDING PROCESSING *====================
 238:pathfinding.c **** 
 239:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 240:pathfinding.c **** 
 241:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 242:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1647              		.loc 1 242 0
 1648              		.cfi_startproc
 1649              		@ args = 8, pretend = 0, frame = 48
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 35


 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 8CB0     		sub	sp, sp, #48
 1656              		.cfi_def_cfa_offset 56
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 F860     		str	r0, [r7, #12]
 1660 0008 B960     		str	r1, [r7, #8]
 1661 000a 3946     		mov	r1, r7
 1662 000c 81E80C00 		stmia	r1, {r2, r3}
 243:pathfinding.c ****     int currentRow = startLocation.row; 
 1663              		.loc 1 243 0
 1664 0010 3B68     		ldr	r3, [r7]
 1665 0012 FB62     		str	r3, [r7, #44]
 244:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1666              		.loc 1 244 0
 1667 0014 7B68     		ldr	r3, [r7, #4]
 1668 0016 BB62     		str	r3, [r7, #40]
 245:pathfinding.c ****     int listIndex = 0;
 1669              		.loc 1 245 0
 1670 0018 0023     		movs	r3, #0
 1671 001a 7B62     		str	r3, [r7, #36]
 246:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1672              		.loc 1 246 0
 1673 001c BB6B     		ldr	r3, [r7, #56]
 1674 001e FA6B     		ldr	r2, [r7, #60]
 1675 0020 1146     		mov	r1, r2
 1676 0022 1846     		mov	r0, r3
 1677 0024 FFF7FEFF 		bl	getTargetOrientation
 1678 0028 0346     		mov	r3, r0
 1679 002a 7B61     		str	r3, [r7, #20]
 247:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 248:pathfinding.c ****     while(numSteps >= 0) {
 1680              		.loc 1 248 0
 1681 002c C4E1     		b	.L49
 1682              	.L78:
 1683              	.LBB18:
 249:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1684              		.loc 1 249 0
 1685 002e 9A4B     		ldr	r3, .L83
 1686 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1687 0032 BA6A     		ldr	r2, [r7, #40]
 1688 0034 F96A     		ldr	r1, [r7, #44]
 1689 0036 1846     		mov	r0, r3
 1690 0038 FFF7FEFF 		bl	checkIgnoreTurn
 250:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1691              		.loc 1 250 0
 1692 003c FB6A     		ldr	r3, [r7, #44]
 1693 003e 4C22     		movs	r2, #76
 1694 0040 02FB03F3 		mul	r3, r2, r3
 1695 0044 FA68     		ldr	r2, [r7, #12]
 1696 0046 1344     		add	r3, r3, r2
 1697 0048 BA6A     		ldr	r2, [r7, #40]
 1698 004a 0021     		movs	r1, #0
 1699 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 36


 1700              		.loc 1 251 0
 1701 0050 914B     		ldr	r3, .L83
 1702 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1703 0054 914B     		ldr	r3, .L83+4
 1704 0056 1A70     		strb	r2, [r3]
 252:pathfinding.c ****         enum InstructionDirection newDirection;
 253:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1705              		.loc 1 253 0
 1706 0058 B96A     		ldr	r1, [r7, #40]
 1707 005a F86A     		ldr	r0, [r7, #44]
 1708 005c FFF7FEFF 		bl	checkPathDirection
 1709 0060 0346     		mov	r3, r0
 1710 0062 FB61     		str	r3, [r7, #28]
 254:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1711              		.loc 1 254 0
 1712 0064 BA6B     		ldr	r2, [r7, #56]
 1713 0066 FB6A     		ldr	r3, [r7, #44]
 1714 0068 9A42     		cmp	r2, r3
 1715 006a 0BD1     		bne	.L50
 1716              		.loc 1 254 0 is_stmt 0 discriminator 1
 1717 006c FA6B     		ldr	r2, [r7, #60]
 1718 006e BB6A     		ldr	r3, [r7, #40]
 1719 0070 9A42     		cmp	r2, r3
 1720 0072 07D1     		bne	.L50
 255:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1721              		.loc 1 255 0 is_stmt 1
 1722 0074 0523     		movs	r3, #5
 1723 0076 87F82330 		strb	r3, [r7, #35]
 256:pathfinding.c ****             printf("Stop at target\n");
 1724              		.loc 1 256 0
 1725 007a 8948     		ldr	r0, .L83+8
 1726 007c FFF7FEFF 		bl	puts
 257:pathfinding.c ****             nextStep = 5;
 1727              		.loc 1 257 0
 1728 0080 0523     		movs	r3, #5
 1729 0082 FB61     		str	r3, [r7, #28]
 1730              	.L50:
 258:pathfinding.c ****         }
 259:pathfinding.c ****         switch (nextStep) {
 1731              		.loc 1 259 0
 1732 0084 FB69     		ldr	r3, [r7, #28]
 1733 0086 032B     		cmp	r3, #3
 1734 0088 00F26F81 		bhi	.L82
 1735 008c 01A2     		adr	r2, .L53
 1736 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1737 0092 00BF     		.p2align 2
 1738              	.L53:
 1739 0094 A5000000 		.word	.L52+1
 1740 0098 43010000 		.word	.L54+1
 1741 009c ED010000 		.word	.L55+1
 1742 00a0 C1020000 		.word	.L56+1
 1743              		.p2align 1
 1744              	.L52:
 260:pathfinding.c ****             case 0: // next step is up
 261:pathfinding.c ****                 currentRobotOrientation = Up;
 1745              		.loc 1 261 0
 1746 00a4 7C4B     		ldr	r3, .L83
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 37


 1747 00a6 0022     		movs	r2, #0
 1748 00a8 1A70     		strb	r2, [r3]
 262:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1749              		.loc 1 262 0
 1750 00aa 7C4B     		ldr	r3, .L83+4
 1751 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 00ae 022B     		cmp	r3, #2
 1753 00b0 0BD1     		bne	.L57
 263:pathfinding.c ****                     newDirection = waitForRightTurn;
 1754              		.loc 1 263 0
 1755 00b2 0223     		movs	r3, #2
 1756 00b4 87F82330 		strb	r3, [r7, #35]
 264:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1757              		.loc 1 264 0
 1758 00b8 7A48     		ldr	r0, .L83+12
 1759 00ba FFF7FEFF 		bl	puts
 265:pathfinding.c ****                     ignoreL = 0;
 1760              		.loc 1 265 0
 1761 00be 7A4B     		ldr	r3, .L83+16
 1762 00c0 0022     		movs	r2, #0
 1763 00c2 1A60     		str	r2, [r3]
 266:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1764              		.loc 1 266 0
 1765 00c4 794B     		ldr	r3, .L83+20
 1766 00c6 0022     		movs	r2, #0
 1767 00c8 1A60     		str	r2, [r3]
 1768              	.L57:
 267:pathfinding.c ****                 } 
 268:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1769              		.loc 1 268 0
 1770 00ca 744B     		ldr	r3, .L83+4
 1771 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1772 00ce 032B     		cmp	r3, #3
 1773 00d0 0BD1     		bne	.L58
 269:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1774              		.loc 1 269 0
 1775 00d2 0123     		movs	r3, #1
 1776 00d4 87F82330 		strb	r3, [r7, #35]
 270:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1777              		.loc 1 270 0
 1778 00d8 7548     		ldr	r0, .L83+24
 1779 00da FFF7FEFF 		bl	puts
 271:pathfinding.c ****                     ignoreL = 0;
 1780              		.loc 1 271 0
 1781 00de 724B     		ldr	r3, .L83+16
 1782 00e0 0022     		movs	r2, #0
 1783 00e2 1A60     		str	r2, [r3]
 272:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1784              		.loc 1 272 0
 1785 00e4 714B     		ldr	r3, .L83+20
 1786 00e6 0022     		movs	r2, #0
 1787 00e8 1A60     		str	r2, [r3]
 1788              	.L58:
 273:pathfinding.c ****                 }
 274:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1789              		.loc 1 274 0
 1790 00ea 6C4B     		ldr	r3, .L83+4
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 38


 1791 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1792 00ee 002B     		cmp	r3, #0
 1793 00f0 19D1     		bne	.L59
 275:pathfinding.c ****                     // check if we only need to go forward to reach target
 276:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1794              		.loc 1 276 0
 1795 00f2 7A69     		ldr	r2, [r7, #20]
 1796 00f4 FB69     		ldr	r3, [r7, #28]
 1797 00f6 9A42     		cmp	r2, r3
 1798 00f8 0AD1     		bne	.L60
 1799              		.loc 1 276 0 is_stmt 0 discriminator 1
 1800 00fa FA6B     		ldr	r2, [r7, #60]
 1801 00fc BB6A     		ldr	r3, [r7, #40]
 1802 00fe 9A42     		cmp	r2, r3
 1803 0100 06D1     		bne	.L60
 277:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1804              		.loc 1 277 0 is_stmt 1
 1805 0102 0423     		movs	r3, #4
 1806 0104 87F82330 		strb	r3, [r7, #35]
 278:pathfinding.c ****                         printf("Forward until target\n"); // THIS WILL HAVE AN EDGE CASE
 1807              		.loc 1 278 0
 1808 0108 6A48     		ldr	r0, .L83+28
 1809 010a FFF7FEFF 		bl	puts
 1810 010e 0AE0     		b	.L59
 1811              	.L60:
 279:pathfinding.c ****                     } else {
 280:pathfinding.c ****                         newDirection = GoForward;
 1812              		.loc 1 280 0
 1813 0110 0023     		movs	r3, #0
 1814 0112 87F82330 		strb	r3, [r7, #35]
 281:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1815              		.loc 1 281 0
 1816 0116 644B     		ldr	r3, .L83+16
 1817 0118 1968     		ldr	r1, [r3]
 1818 011a 644B     		ldr	r3, .L83+20
 1819 011c 1B68     		ldr	r3, [r3]
 1820 011e 1A46     		mov	r2, r3
 1821 0120 6548     		ldr	r0, .L83+32
 1822 0122 FFF7FEFF 		bl	printf
 1823              	.L59:
 282:pathfinding.c ****                     }
 283:pathfinding.c ****                 }
 284:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1824              		.loc 1 284 0
 1825 0126 5D4B     		ldr	r3, .L83+4
 1826 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 012a 012B     		cmp	r3, #1
 1828 012c 05D1     		bne	.L61
 285:pathfinding.c ****                     newDirection = uTurn;
 1829              		.loc 1 285 0
 1830 012e 0323     		movs	r3, #3
 1831 0130 87F82330 		strb	r3, [r7, #35]
 286:pathfinding.c ****                     printf("U-turn\n");
 1832              		.loc 1 286 0
 1833 0134 6148     		ldr	r0, .L83+36
 1834 0136 FFF7FEFF 		bl	puts
 1835              	.L61:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 39


 287:pathfinding.c ****                 }
 288:pathfinding.c ****                 currentRow--; // jump to new location
 1836              		.loc 1 288 0
 1837 013a FB6A     		ldr	r3, [r7, #44]
 1838 013c 013B     		subs	r3, r3, #1
 1839 013e FB62     		str	r3, [r7, #44]
 289:pathfinding.c ****                 break;
 1840              		.loc 1 289 0
 1841 0140 14E1     		b	.L62
 1842              	.L54:
 290:pathfinding.c ****             case 1: // next step is down
 291:pathfinding.c ****                 currentRobotOrientation = Down;
 1843              		.loc 1 291 0
 1844 0142 554B     		ldr	r3, .L83
 1845 0144 0122     		movs	r2, #1
 1846 0146 1A70     		strb	r2, [r3]
 292:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1847              		.loc 1 292 0
 1848 0148 544B     		ldr	r3, .L83+4
 1849 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 014c 032B     		cmp	r3, #3
 1851 014e 0BD1     		bne	.L63
 293:pathfinding.c ****                     newDirection = waitForRightTurn;
 1852              		.loc 1 293 0
 1853 0150 0223     		movs	r3, #2
 1854 0152 87F82330 		strb	r3, [r7, #35]
 294:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1855              		.loc 1 294 0
 1856 0156 5348     		ldr	r0, .L83+12
 1857 0158 FFF7FEFF 		bl	puts
 295:pathfinding.c ****                     ignoreL = 0;
 1858              		.loc 1 295 0
 1859 015c 524B     		ldr	r3, .L83+16
 1860 015e 0022     		movs	r2, #0
 1861 0160 1A60     		str	r2, [r3]
 296:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1862              		.loc 1 296 0
 1863 0162 524B     		ldr	r3, .L83+20
 1864 0164 0022     		movs	r2, #0
 1865 0166 1A60     		str	r2, [r3]
 1866              	.L63:
 297:pathfinding.c ****                 } 
 298:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1867              		.loc 1 298 0
 1868 0168 4C4B     		ldr	r3, .L83+4
 1869 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1870 016c 022B     		cmp	r3, #2
 1871 016e 0BD1     		bne	.L64
 299:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1872              		.loc 1 299 0
 1873 0170 0123     		movs	r3, #1
 1874 0172 87F82330 		strb	r3, [r7, #35]
 300:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1875              		.loc 1 300 0
 1876 0176 4E48     		ldr	r0, .L83+24
 1877 0178 FFF7FEFF 		bl	puts
 301:pathfinding.c ****                     ignoreL = 0;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 40


 1878              		.loc 1 301 0
 1879 017c 4A4B     		ldr	r3, .L83+16
 1880 017e 0022     		movs	r2, #0
 1881 0180 1A60     		str	r2, [r3]
 302:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1882              		.loc 1 302 0
 1883 0182 4A4B     		ldr	r3, .L83+20
 1884 0184 0022     		movs	r2, #0
 1885 0186 1A60     		str	r2, [r3]
 1886              	.L64:
 303:pathfinding.c ****                 }
 304:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1887              		.loc 1 304 0
 1888 0188 444B     		ldr	r3, .L83+4
 1889 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1890 018c 012B     		cmp	r3, #1
 1891 018e 19D1     		bne	.L65
 305:pathfinding.c ****                     // check if we only need to go forward to reach target
 306:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1892              		.loc 1 306 0
 1893 0190 7A69     		ldr	r2, [r7, #20]
 1894 0192 FB69     		ldr	r3, [r7, #28]
 1895 0194 9A42     		cmp	r2, r3
 1896 0196 0AD1     		bne	.L66
 1897              		.loc 1 306 0 is_stmt 0 discriminator 1
 1898 0198 FA6B     		ldr	r2, [r7, #60]
 1899 019a BB6A     		ldr	r3, [r7, #40]
 1900 019c 9A42     		cmp	r2, r3
 1901 019e 06D1     		bne	.L66
 307:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1902              		.loc 1 307 0 is_stmt 1
 1903 01a0 0423     		movs	r3, #4
 1904 01a2 87F82330 		strb	r3, [r7, #35]
 308:pathfinding.c ****                         printf("Forward until target\n");
 1905              		.loc 1 308 0
 1906 01a6 4348     		ldr	r0, .L83+28
 1907 01a8 FFF7FEFF 		bl	puts
 1908 01ac 0AE0     		b	.L65
 1909              	.L66:
 309:pathfinding.c ****                     } else {
 310:pathfinding.c ****                         newDirection = GoForward;
 1910              		.loc 1 310 0
 1911 01ae 0023     		movs	r3, #0
 1912 01b0 87F82330 		strb	r3, [r7, #35]
 311:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1913              		.loc 1 311 0
 1914 01b4 3C4B     		ldr	r3, .L83+16
 1915 01b6 1968     		ldr	r1, [r3]
 1916 01b8 3C4B     		ldr	r3, .L83+20
 1917 01ba 1B68     		ldr	r3, [r3]
 1918 01bc 1A46     		mov	r2, r3
 1919 01be 3E48     		ldr	r0, .L83+32
 1920 01c0 FFF7FEFF 		bl	printf
 1921              	.L65:
 312:pathfinding.c ****                     }                    
 313:pathfinding.c ****                 }
 314:pathfinding.c ****                 if(previousRobotOrientation == Up) {
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 41


 1922              		.loc 1 314 0
 1923 01c4 354B     		ldr	r3, .L83+4
 1924 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1925 01c8 002B     		cmp	r3, #0
 1926 01ca 0BD1     		bne	.L67
 315:pathfinding.c ****                     newDirection = uTurn;
 1927              		.loc 1 315 0
 1928 01cc 0323     		movs	r3, #3
 1929 01ce 87F82330 		strb	r3, [r7, #35]
 316:pathfinding.c ****                     ignoreL = 0;
 1930              		.loc 1 316 0
 1931 01d2 354B     		ldr	r3, .L83+16
 1932 01d4 0022     		movs	r2, #0
 1933 01d6 1A60     		str	r2, [r3]
 317:pathfinding.c ****                     ignoreR = 0;
 1934              		.loc 1 317 0
 1935 01d8 344B     		ldr	r3, .L83+20
 1936 01da 0022     		movs	r2, #0
 1937 01dc 1A60     		str	r2, [r3]
 318:pathfinding.c ****                     printf("U-turn\n");
 1938              		.loc 1 318 0
 1939 01de 3748     		ldr	r0, .L83+36
 1940 01e0 FFF7FEFF 		bl	puts
 1941              	.L67:
 319:pathfinding.c ****                 }
 320:pathfinding.c ****                 currentRow++;
 1942              		.loc 1 320 0
 1943 01e4 FB6A     		ldr	r3, [r7, #44]
 1944 01e6 0133     		adds	r3, r3, #1
 1945 01e8 FB62     		str	r3, [r7, #44]
 321:pathfinding.c ****                 break;
 1946              		.loc 1 321 0
 1947 01ea BFE0     		b	.L62
 1948              	.L55:
 322:pathfinding.c ****             case 2: // next step is left
 323:pathfinding.c ****                 currentRobotOrientation = Left;
 1949              		.loc 1 323 0
 1950 01ec 2A4B     		ldr	r3, .L83
 1951 01ee 0222     		movs	r2, #2
 1952 01f0 1A70     		strb	r2, [r3]
 324:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1953              		.loc 1 324 0
 1954 01f2 2A4B     		ldr	r3, .L83+4
 1955 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 01f6 002B     		cmp	r3, #0
 1957 01f8 0BD1     		bne	.L68
 325:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1958              		.loc 1 325 0
 1959 01fa 0123     		movs	r3, #1
 1960 01fc 87F82330 		strb	r3, [r7, #35]
 326:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 1961              		.loc 1 326 0
 1962 0200 2B48     		ldr	r0, .L83+24
 1963 0202 FFF7FEFF 		bl	puts
 327:pathfinding.c ****                     ignoreL = 0;
 1964              		.loc 1 327 0
 1965 0206 284B     		ldr	r3, .L83+16
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 42


 1966 0208 0022     		movs	r2, #0
 1967 020a 1A60     		str	r2, [r3]
 328:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1968              		.loc 1 328 0
 1969 020c 274B     		ldr	r3, .L83+20
 1970 020e 0022     		movs	r2, #0
 1971 0210 1A60     		str	r2, [r3]
 1972              	.L68:
 329:pathfinding.c ****                 } 
 330:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1973              		.loc 1 330 0
 1974 0212 224B     		ldr	r3, .L83+4
 1975 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1976 0216 012B     		cmp	r3, #1
 1977 0218 0BD1     		bne	.L69
 331:pathfinding.c ****                     newDirection = waitForRightTurn;
 1978              		.loc 1 331 0
 1979 021a 0223     		movs	r3, #2
 1980 021c 87F82330 		strb	r3, [r7, #35]
 332:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 1981              		.loc 1 332 0
 1982 0220 2048     		ldr	r0, .L83+12
 1983 0222 FFF7FEFF 		bl	puts
 333:pathfinding.c ****                     ignoreL = 0;
 1984              		.loc 1 333 0
 1985 0226 204B     		ldr	r3, .L83+16
 1986 0228 0022     		movs	r2, #0
 1987 022a 1A60     		str	r2, [r3]
 334:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1988              		.loc 1 334 0
 1989 022c 1F4B     		ldr	r3, .L83+20
 1990 022e 0022     		movs	r2, #0
 1991 0230 1A60     		str	r2, [r3]
 1992              	.L69:
 335:pathfinding.c ****                 }
 336:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1993              		.loc 1 336 0
 1994 0232 1A4B     		ldr	r3, .L83+4
 1995 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 0236 022B     		cmp	r3, #2
 1997 0238 19D1     		bne	.L70
 337:pathfinding.c ****                     // check if we only need to go forward to reach target
 338:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1998              		.loc 1 338 0
 1999 023a 7A69     		ldr	r2, [r7, #20]
 2000 023c FB69     		ldr	r3, [r7, #28]
 2001 023e 9A42     		cmp	r2, r3
 2002 0240 0AD1     		bne	.L71
 2003              		.loc 1 338 0 is_stmt 0 discriminator 1
 2004 0242 BA6B     		ldr	r2, [r7, #56]
 2005 0244 FB6A     		ldr	r3, [r7, #44]
 2006 0246 9A42     		cmp	r2, r3
 2007 0248 06D1     		bne	.L71
 339:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2008              		.loc 1 339 0 is_stmt 1
 2009 024a 0423     		movs	r3, #4
 2010 024c 87F82330 		strb	r3, [r7, #35]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 43


 340:pathfinding.c ****                         printf("Forward until target\n");
 2011              		.loc 1 340 0
 2012 0250 1848     		ldr	r0, .L83+28
 2013 0252 FFF7FEFF 		bl	puts
 2014 0256 0AE0     		b	.L70
 2015              	.L71:
 341:pathfinding.c ****                     } else {
 342:pathfinding.c ****                         newDirection = GoForward;
 2016              		.loc 1 342 0
 2017 0258 0023     		movs	r3, #0
 2018 025a 87F82330 		strb	r3, [r7, #35]
 343:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2019              		.loc 1 343 0
 2020 025e 124B     		ldr	r3, .L83+16
 2021 0260 1968     		ldr	r1, [r3]
 2022 0262 124B     		ldr	r3, .L83+20
 2023 0264 1B68     		ldr	r3, [r3]
 2024 0266 1A46     		mov	r2, r3
 2025 0268 1348     		ldr	r0, .L83+32
 2026 026a FFF7FEFF 		bl	printf
 2027              	.L70:
 344:pathfinding.c ****                     }
 345:pathfinding.c ****                 }
 346:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2028              		.loc 1 346 0
 2029 026e 0B4B     		ldr	r3, .L83+4
 2030 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2031 0272 032B     		cmp	r3, #3
 2032 0274 0BD1     		bne	.L72
 347:pathfinding.c ****                     newDirection = uTurn;
 2033              		.loc 1 347 0
 2034 0276 0323     		movs	r3, #3
 2035 0278 87F82330 		strb	r3, [r7, #35]
 348:pathfinding.c ****                     ignoreL = 0;
 2036              		.loc 1 348 0
 2037 027c 0A4B     		ldr	r3, .L83+16
 2038 027e 0022     		movs	r2, #0
 2039 0280 1A60     		str	r2, [r3]
 349:pathfinding.c ****                     ignoreR = 0;
 2040              		.loc 1 349 0
 2041 0282 0A4B     		ldr	r3, .L83+20
 2042 0284 0022     		movs	r2, #0
 2043 0286 1A60     		str	r2, [r3]
 350:pathfinding.c ****                     printf("U-turn\n");
 2044              		.loc 1 350 0
 2045 0288 0C48     		ldr	r0, .L83+36
 2046 028a FFF7FEFF 		bl	puts
 2047              	.L72:
 351:pathfinding.c ****                 }
 352:pathfinding.c ****                 currentCol--;
 2048              		.loc 1 352 0
 2049 028e BB6A     		ldr	r3, [r7, #40]
 2050 0290 013B     		subs	r3, r3, #1
 2051 0292 BB62     		str	r3, [r7, #40]
 353:pathfinding.c ****                 break;
 2052              		.loc 1 353 0
 2053 0294 6AE0     		b	.L62
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 44


 2054              	.L84:
 2055 0296 00BF     		.align	2
 2056              	.L83:
 2057 0298 00000000 		.word	currentRobotOrientation
 2058 029c 00000000 		.word	previousRobotOrientation
 2059 02a0 04000000 		.word	.LC1
 2060 02a4 14000000 		.word	.LC2
 2061 02a8 00000000 		.word	ignoreL
 2062 02ac 00000000 		.word	ignoreR
 2063 02b0 20000000 		.word	.LC3
 2064 02b4 2C000000 		.word	.LC4
 2065 02b8 44000000 		.word	.LC5
 2066 02bc 68000000 		.word	.LC6
 2067              	.L56:
 354:pathfinding.c ****             case 3: // next step is right
 355:pathfinding.c ****                 currentRobotOrientation = Right;
 2068              		.loc 1 355 0
 2069 02c0 5F4B     		ldr	r3, .L85
 2070 02c2 0322     		movs	r2, #3
 2071 02c4 1A70     		strb	r2, [r3]
 356:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2072              		.loc 1 356 0
 2073 02c6 5F4B     		ldr	r3, .L85+4
 2074 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2075 02ca 002B     		cmp	r3, #0
 2076 02cc 0BD1     		bne	.L73
 357:pathfinding.c ****                     newDirection = waitForRightTurn;
 2077              		.loc 1 357 0
 2078 02ce 0223     		movs	r3, #2
 2079 02d0 87F82330 		strb	r3, [r7, #35]
 358:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2080              		.loc 1 358 0
 2081 02d4 5C48     		ldr	r0, .L85+8
 2082 02d6 FFF7FEFF 		bl	puts
 359:pathfinding.c ****                     ignoreL = 0;
 2083              		.loc 1 359 0
 2084 02da 5C4B     		ldr	r3, .L85+12
 2085 02dc 0022     		movs	r2, #0
 2086 02de 1A60     		str	r2, [r3]
 360:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2087              		.loc 1 360 0
 2088 02e0 5B4B     		ldr	r3, .L85+16
 2089 02e2 0022     		movs	r2, #0
 2090 02e4 1A60     		str	r2, [r3]
 2091              	.L73:
 361:pathfinding.c ****                 }
 362:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2092              		.loc 1 362 0
 2093 02e6 574B     		ldr	r3, .L85+4
 2094 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2095 02ea 012B     		cmp	r3, #1
 2096 02ec 0BD1     		bne	.L74
 363:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2097              		.loc 1 363 0
 2098 02ee 0123     		movs	r3, #1
 2099 02f0 87F82330 		strb	r3, [r7, #35]
 364:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 45


 2100              		.loc 1 364 0
 2101 02f4 5748     		ldr	r0, .L85+20
 2102 02f6 FFF7FEFF 		bl	puts
 365:pathfinding.c ****                     ignoreL = 0;
 2103              		.loc 1 365 0
 2104 02fa 544B     		ldr	r3, .L85+12
 2105 02fc 0022     		movs	r2, #0
 2106 02fe 1A60     		str	r2, [r3]
 366:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2107              		.loc 1 366 0
 2108 0300 534B     		ldr	r3, .L85+16
 2109 0302 0022     		movs	r2, #0
 2110 0304 1A60     		str	r2, [r3]
 2111              	.L74:
 367:pathfinding.c ****                 }
 368:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2112              		.loc 1 368 0
 2113 0306 4F4B     		ldr	r3, .L85+4
 2114 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2115 030a 032B     		cmp	r3, #3
 2116 030c 19D1     		bne	.L75
 369:pathfinding.c ****                     // check if we only need to go forward to reach target
 370:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2117              		.loc 1 370 0
 2118 030e 7A69     		ldr	r2, [r7, #20]
 2119 0310 FB69     		ldr	r3, [r7, #28]
 2120 0312 9A42     		cmp	r2, r3
 2121 0314 0AD1     		bne	.L76
 2122              		.loc 1 370 0 is_stmt 0 discriminator 1
 2123 0316 BA6B     		ldr	r2, [r7, #56]
 2124 0318 FB6A     		ldr	r3, [r7, #44]
 2125 031a 9A42     		cmp	r2, r3
 2126 031c 06D1     		bne	.L76
 371:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2127              		.loc 1 371 0 is_stmt 1
 2128 031e 0423     		movs	r3, #4
 2129 0320 87F82330 		strb	r3, [r7, #35]
 372:pathfinding.c ****                         printf("Forward until target\n");
 2130              		.loc 1 372 0
 2131 0324 4C48     		ldr	r0, .L85+24
 2132 0326 FFF7FEFF 		bl	puts
 2133 032a 0AE0     		b	.L75
 2134              	.L76:
 373:pathfinding.c ****                     } else {
 374:pathfinding.c ****                         newDirection = GoForward;
 2135              		.loc 1 374 0
 2136 032c 0023     		movs	r3, #0
 2137 032e 87F82330 		strb	r3, [r7, #35]
 375:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2138              		.loc 1 375 0
 2139 0332 464B     		ldr	r3, .L85+12
 2140 0334 1968     		ldr	r1, [r3]
 2141 0336 464B     		ldr	r3, .L85+16
 2142 0338 1B68     		ldr	r3, [r3]
 2143 033a 1A46     		mov	r2, r3
 2144 033c 4748     		ldr	r0, .L85+28
 2145 033e FFF7FEFF 		bl	printf
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 46


 2146              	.L75:
 376:pathfinding.c ****                     }
 377:pathfinding.c ****                 }
 378:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2147              		.loc 1 378 0
 2148 0342 404B     		ldr	r3, .L85+4
 2149 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2150 0346 022B     		cmp	r3, #2
 2151 0348 0BD1     		bne	.L77
 379:pathfinding.c ****                     newDirection = uTurn;
 2152              		.loc 1 379 0
 2153 034a 0323     		movs	r3, #3
 2154 034c 87F82330 		strb	r3, [r7, #35]
 380:pathfinding.c ****                     ignoreL = 0;
 2155              		.loc 1 380 0
 2156 0350 3E4B     		ldr	r3, .L85+12
 2157 0352 0022     		movs	r2, #0
 2158 0354 1A60     		str	r2, [r3]
 381:pathfinding.c ****                     ignoreR = 0;
 2159              		.loc 1 381 0
 2160 0356 3E4B     		ldr	r3, .L85+16
 2161 0358 0022     		movs	r2, #0
 2162 035a 1A60     		str	r2, [r3]
 382:pathfinding.c ****                     printf("U-turn\n");
 2163              		.loc 1 382 0
 2164 035c 4048     		ldr	r0, .L85+32
 2165 035e FFF7FEFF 		bl	puts
 2166              	.L77:
 383:pathfinding.c ****                 }
 384:pathfinding.c ****                 currentCol++;
 2167              		.loc 1 384 0
 2168 0362 BB6A     		ldr	r3, [r7, #40]
 2169 0364 0133     		adds	r3, r3, #1
 2170 0366 BB62     		str	r3, [r7, #40]
 385:pathfinding.c ****                 break;
 2171              		.loc 1 385 0
 2172 0368 00E0     		b	.L62
 2173              	.L82:
 386:pathfinding.c ****             default:
 387:pathfinding.c ****                 break;
 2174              		.loc 1 387 0
 2175 036a 00BF     		nop
 2176              	.L62:
 388:pathfinding.c ****         }
 389:pathfinding.c ****         
 390:pathfinding.c ****         // add new direction to list
 391:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2177              		.loc 1 391 0
 2178 036c 3D49     		ldr	r1, .L85+36
 2179 036e 7A6A     		ldr	r2, [r7, #36]
 2180 0370 1346     		mov	r3, r2
 2181 0372 5B00     		lsls	r3, r3, #1
 2182 0374 1344     		add	r3, r3, r2
 2183 0376 9B00     		lsls	r3, r3, #2
 2184 0378 0B44     		add	r3, r3, r1
 2185 037a 97F82320 		ldrb	r2, [r7, #35]
 2186 037e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 47


 392:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2187              		.loc 1 392 0
 2188 0380 324B     		ldr	r3, .L85+12
 2189 0382 1968     		ldr	r1, [r3]
 2190 0384 3748     		ldr	r0, .L85+36
 2191 0386 7A6A     		ldr	r2, [r7, #36]
 2192 0388 1346     		mov	r3, r2
 2193 038a 5B00     		lsls	r3, r3, #1
 2194 038c 1344     		add	r3, r3, r2
 2195 038e 9B00     		lsls	r3, r3, #2
 2196 0390 0344     		add	r3, r3, r0
 2197 0392 0433     		adds	r3, r3, #4
 2198 0394 1960     		str	r1, [r3]
 393:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2199              		.loc 1 393 0
 2200 0396 2E4B     		ldr	r3, .L85+16
 2201 0398 1968     		ldr	r1, [r3]
 2202 039a 3248     		ldr	r0, .L85+36
 2203 039c 7A6A     		ldr	r2, [r7, #36]
 2204 039e 1346     		mov	r3, r2
 2205 03a0 5B00     		lsls	r3, r3, #1
 2206 03a2 1344     		add	r3, r3, r2
 2207 03a4 9B00     		lsls	r3, r3, #2
 2208 03a6 0344     		add	r3, r3, r0
 2209 03a8 0833     		adds	r3, r3, #8
 2210 03aa 1960     		str	r1, [r3]
 394:pathfinding.c ****         listIndex++; // increment instruction list index
 2211              		.loc 1 394 0
 2212 03ac 7B6A     		ldr	r3, [r7, #36]
 2213 03ae 0133     		adds	r3, r3, #1
 2214 03b0 7B62     		str	r3, [r7, #36]
 395:pathfinding.c ****         numSteps--; // decrement numSteps
 2215              		.loc 1 395 0
 2216 03b2 BB68     		ldr	r3, [r7, #8]
 2217 03b4 013B     		subs	r3, r3, #1
 2218 03b6 BB60     		str	r3, [r7, #8]
 2219              	.L49:
 2220              	.LBE18:
 248:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2221              		.loc 1 248 0
 2222 03b8 BB68     		ldr	r3, [r7, #8]
 2223 03ba 002B     		cmp	r3, #0
 2224 03bc BFF637AE 		bge	.L78
 2225              	.LBB19:
 396:pathfinding.c ****     }
 397:pathfinding.c ****     // process list, remove repeated forward outputs
 398:pathfinding.c ****     for(int i = 0; i < listIndex-1; i ++) {
 2226              		.loc 1 398 0
 2227 03c0 0023     		movs	r3, #0
 2228 03c2 BB61     		str	r3, [r7, #24]
 2229 03c4 32E0     		b	.L79
 2230              	.L81:
 399:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2231              		.loc 1 399 0
 2232 03c6 2749     		ldr	r1, .L85+36
 2233 03c8 BA69     		ldr	r2, [r7, #24]
 2234 03ca 1346     		mov	r3, r2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 48


 2235 03cc 5B00     		lsls	r3, r3, #1
 2236 03ce 1344     		add	r3, r3, r2
 2237 03d0 9B00     		lsls	r3, r3, #2
 2238 03d2 0B44     		add	r3, r3, r1
 2239 03d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2240 03d6 BB69     		ldr	r3, [r7, #24]
 2241 03d8 5A1C     		adds	r2, r3, #1
 2242 03da 2248     		ldr	r0, .L85+36
 2243 03dc 1346     		mov	r3, r2
 2244 03de 5B00     		lsls	r3, r3, #1
 2245 03e0 1344     		add	r3, r3, r2
 2246 03e2 9B00     		lsls	r3, r3, #2
 2247 03e4 0344     		add	r3, r3, r0
 2248 03e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2249 03e8 9942     		cmp	r1, r3
 2250 03ea 1CD1     		bne	.L80
 400:pathfinding.c ****             instructionsList[i].direction = Skip;
 2251              		.loc 1 400 0
 2252 03ec 1D49     		ldr	r1, .L85+36
 2253 03ee BA69     		ldr	r2, [r7, #24]
 2254 03f0 1346     		mov	r3, r2
 2255 03f2 5B00     		lsls	r3, r3, #1
 2256 03f4 1344     		add	r3, r3, r2
 2257 03f6 9B00     		lsls	r3, r3, #2
 2258 03f8 0B44     		add	r3, r3, r1
 2259 03fa 0622     		movs	r2, #6
 2260 03fc 1A70     		strb	r2, [r3]
 401:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2261              		.loc 1 401 0
 2262 03fe 1949     		ldr	r1, .L85+36
 2263 0400 BA69     		ldr	r2, [r7, #24]
 2264 0402 1346     		mov	r3, r2
 2265 0404 5B00     		lsls	r3, r3, #1
 2266 0406 1344     		add	r3, r3, r2
 2267 0408 9B00     		lsls	r3, r3, #2
 2268 040a 0B44     		add	r3, r3, r1
 2269 040c 0433     		adds	r3, r3, #4
 2270 040e 0022     		movs	r2, #0
 2271 0410 1A60     		str	r2, [r3]
 402:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2272              		.loc 1 402 0
 2273 0412 1449     		ldr	r1, .L85+36
 2274 0414 BA69     		ldr	r2, [r7, #24]
 2275 0416 1346     		mov	r3, r2
 2276 0418 5B00     		lsls	r3, r3, #1
 2277 041a 1344     		add	r3, r3, r2
 2278 041c 9B00     		lsls	r3, r3, #2
 2279 041e 0B44     		add	r3, r3, r1
 2280 0420 0833     		adds	r3, r3, #8
 2281 0422 0022     		movs	r2, #0
 2282 0424 1A60     		str	r2, [r3]
 2283              	.L80:
 398:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2284              		.loc 1 398 0 discriminator 2
 2285 0426 BB69     		ldr	r3, [r7, #24]
 2286 0428 0133     		adds	r3, r3, #1
 2287 042a BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 49


 2288              	.L79:
 398:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2289              		.loc 1 398 0 is_stmt 0 discriminator 1
 2290 042c 7B6A     		ldr	r3, [r7, #36]
 2291 042e 5A1E     		subs	r2, r3, #1
 2292 0430 BB69     		ldr	r3, [r7, #24]
 2293 0432 9A42     		cmp	r2, r3
 2294 0434 C7DC     		bgt	.L81
 2295              	.LBE19:
 403:pathfinding.c ****         }
 404:pathfinding.c ****     }
 405:pathfinding.c **** }
 2296              		.loc 1 405 0 is_stmt 1
 2297 0436 00BF     		nop
 2298 0438 3037     		adds	r7, r7, #48
 2299              		.cfi_def_cfa_offset 8
 2300 043a BD46     		mov	sp, r7
 2301              		.cfi_def_cfa_register 13
 2302              		@ sp needed
 2303 043c 80BD     		pop	{r7, pc}
 2304              	.L86:
 2305 043e 00BF     		.align	2
 2306              	.L85:
 2307 0440 00000000 		.word	currentRobotOrientation
 2308 0444 00000000 		.word	previousRobotOrientation
 2309 0448 14000000 		.word	.LC2
 2310 044c 00000000 		.word	ignoreL
 2311 0450 00000000 		.word	ignoreR
 2312 0454 20000000 		.word	.LC3
 2313 0458 2C000000 		.word	.LC4
 2314 045c 44000000 		.word	.LC5
 2315 0460 68000000 		.word	.LC6
 2316 0464 00000000 		.word	instructionsList
 2317              		.cfi_endproc
 2318              	.LFE5:
 2319              		.size	getPathInstructions, .-getPathInstructions
 2320              		.section	.text.checkPathDirection,"ax",%progbits
 2321              		.align	2
 2322              		.global	checkPathDirection
 2323              		.thumb
 2324              		.thumb_func
 2325              		.type	checkPathDirection, %function
 2326              	checkPathDirection:
 2327              	.LFB6:
 406:pathfinding.c **** 
 407:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2328              		.loc 1 407 0
 2329              		.cfi_startproc
 2330              		@ args = 0, pretend = 0, frame = 8
 2331              		@ frame_needed = 1, uses_anonymous_args = 0
 2332              		@ link register save eliminated.
 2333 0000 80B4     		push	{r7}
 2334              		.cfi_def_cfa_offset 4
 2335              		.cfi_offset 7, -4
 2336 0002 83B0     		sub	sp, sp, #12
 2337              		.cfi_def_cfa_offset 16
 2338 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 50


 2339              		.cfi_def_cfa_register 7
 2340 0006 7860     		str	r0, [r7, #4]
 2341 0008 3960     		str	r1, [r7]
 408:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 409:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2342              		.loc 1 409 0
 2343 000a 7B68     		ldr	r3, [r7, #4]
 2344 000c 5A1E     		subs	r2, r3, #1
 2345 000e 3E49     		ldr	r1, .L97
 2346 0010 1346     		mov	r3, r2
 2347 0012 DB00     		lsls	r3, r3, #3
 2348 0014 1344     		add	r3, r3, r2
 2349 0016 5B00     		lsls	r3, r3, #1
 2350 0018 1344     		add	r3, r3, r2
 2351 001a 3A68     		ldr	r2, [r7]
 2352 001c 1344     		add	r3, r3, r2
 2353 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2354 0022 082B     		cmp	r3, #8
 2355 0024 0DD0     		beq	.L88
 2356              		.loc 1 409 0 is_stmt 0 discriminator 1
 2357 0026 7B68     		ldr	r3, [r7, #4]
 2358 0028 5A1E     		subs	r2, r3, #1
 2359 002a 3749     		ldr	r1, .L97
 2360 002c 1346     		mov	r3, r2
 2361 002e DB00     		lsls	r3, r3, #3
 2362 0030 1344     		add	r3, r3, r2
 2363 0032 5B00     		lsls	r3, r3, #1
 2364 0034 1344     		add	r3, r3, r2
 2365 0036 3A68     		ldr	r2, [r7]
 2366 0038 1344     		add	r3, r3, r2
 2367 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2368 003e 092B     		cmp	r3, #9
 2369 0040 01D1     		bne	.L89
 2370              	.L88:
 410:pathfinding.c ****         return 0; // up 
 2371              		.loc 1 410 0 is_stmt 1
 2372 0042 0023     		movs	r3, #0
 2373 0044 5AE0     		b	.L90
 2374              	.L89:
 411:pathfinding.c ****     }
 412:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2375              		.loc 1 412 0
 2376 0046 7B68     		ldr	r3, [r7, #4]
 2377 0048 5A1C     		adds	r2, r3, #1
 2378 004a 2F49     		ldr	r1, .L97
 2379 004c 1346     		mov	r3, r2
 2380 004e DB00     		lsls	r3, r3, #3
 2381 0050 1344     		add	r3, r3, r2
 2382 0052 5B00     		lsls	r3, r3, #1
 2383 0054 1344     		add	r3, r3, r2
 2384 0056 3A68     		ldr	r2, [r7]
 2385 0058 1344     		add	r3, r3, r2
 2386 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2387 005e 082B     		cmp	r3, #8
 2388 0060 0DD0     		beq	.L91
 2389              		.loc 1 412 0 is_stmt 0 discriminator 1
 2390 0062 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 51


 2391 0064 5A1C     		adds	r2, r3, #1
 2392 0066 2849     		ldr	r1, .L97
 2393 0068 1346     		mov	r3, r2
 2394 006a DB00     		lsls	r3, r3, #3
 2395 006c 1344     		add	r3, r3, r2
 2396 006e 5B00     		lsls	r3, r3, #1
 2397 0070 1344     		add	r3, r3, r2
 2398 0072 3A68     		ldr	r2, [r7]
 2399 0074 1344     		add	r3, r3, r2
 2400 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2401 007a 092B     		cmp	r3, #9
 2402 007c 01D1     		bne	.L92
 2403              	.L91:
 413:pathfinding.c ****         return 1; // down
 2404              		.loc 1 413 0 is_stmt 1
 2405 007e 0123     		movs	r3, #1
 2406 0080 3CE0     		b	.L90
 2407              	.L92:
 414:pathfinding.c ****     }
 415:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2408              		.loc 1 415 0
 2409 0082 3B68     		ldr	r3, [r7]
 2410 0084 591E     		subs	r1, r3, #1
 2411 0086 2048     		ldr	r0, .L97
 2412 0088 7A68     		ldr	r2, [r7, #4]
 2413 008a 1346     		mov	r3, r2
 2414 008c DB00     		lsls	r3, r3, #3
 2415 008e 1344     		add	r3, r3, r2
 2416 0090 5B00     		lsls	r3, r3, #1
 2417 0092 1344     		add	r3, r3, r2
 2418 0094 0B44     		add	r3, r3, r1
 2419 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2420 009a 082B     		cmp	r3, #8
 2421 009c 0DD0     		beq	.L93
 2422              		.loc 1 415 0 is_stmt 0 discriminator 1
 2423 009e 3B68     		ldr	r3, [r7]
 2424 00a0 591E     		subs	r1, r3, #1
 2425 00a2 1948     		ldr	r0, .L97
 2426 00a4 7A68     		ldr	r2, [r7, #4]
 2427 00a6 1346     		mov	r3, r2
 2428 00a8 DB00     		lsls	r3, r3, #3
 2429 00aa 1344     		add	r3, r3, r2
 2430 00ac 5B00     		lsls	r3, r3, #1
 2431 00ae 1344     		add	r3, r3, r2
 2432 00b0 0B44     		add	r3, r3, r1
 2433 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2434 00b6 092B     		cmp	r3, #9
 2435 00b8 01D1     		bne	.L94
 2436              	.L93:
 416:pathfinding.c ****         return 2; // left
 2437              		.loc 1 416 0 is_stmt 1
 2438 00ba 0223     		movs	r3, #2
 2439 00bc 1EE0     		b	.L90
 2440              	.L94:
 417:pathfinding.c ****     }
 418:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2441              		.loc 1 418 0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 52


 2442 00be 3B68     		ldr	r3, [r7]
 2443 00c0 591C     		adds	r1, r3, #1
 2444 00c2 1148     		ldr	r0, .L97
 2445 00c4 7A68     		ldr	r2, [r7, #4]
 2446 00c6 1346     		mov	r3, r2
 2447 00c8 DB00     		lsls	r3, r3, #3
 2448 00ca 1344     		add	r3, r3, r2
 2449 00cc 5B00     		lsls	r3, r3, #1
 2450 00ce 1344     		add	r3, r3, r2
 2451 00d0 0B44     		add	r3, r3, r1
 2452 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2453 00d6 082B     		cmp	r3, #8
 2454 00d8 0DD0     		beq	.L95
 2455              		.loc 1 418 0 is_stmt 0 discriminator 1
 2456 00da 3B68     		ldr	r3, [r7]
 2457 00dc 591C     		adds	r1, r3, #1
 2458 00de 0A48     		ldr	r0, .L97
 2459 00e0 7A68     		ldr	r2, [r7, #4]
 2460 00e2 1346     		mov	r3, r2
 2461 00e4 DB00     		lsls	r3, r3, #3
 2462 00e6 1344     		add	r3, r3, r2
 2463 00e8 5B00     		lsls	r3, r3, #1
 2464 00ea 1344     		add	r3, r3, r2
 2465 00ec 0B44     		add	r3, r3, r1
 2466 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2467 00f2 092B     		cmp	r3, #9
 2468 00f4 01D1     		bne	.L96
 2469              	.L95:
 419:pathfinding.c ****         return 3; // right
 2470              		.loc 1 419 0 is_stmt 1
 2471 00f6 0323     		movs	r3, #3
 2472 00f8 00E0     		b	.L90
 2473              	.L96:
 420:pathfinding.c ****     }
 421:pathfinding.c ****     return 5; // default- will never reach this
 2474              		.loc 1 421 0
 2475 00fa 0523     		movs	r3, #5
 2476              	.L90:
 422:pathfinding.c **** }
 2477              		.loc 1 422 0
 2478 00fc 1846     		mov	r0, r3
 2479 00fe 0C37     		adds	r7, r7, #12
 2480              		.cfi_def_cfa_offset 4
 2481 0100 BD46     		mov	sp, r7
 2482              		.cfi_def_cfa_register 13
 2483              		@ sp needed
 2484 0102 80BC     		pop	{r7}
 2485              		.cfi_restore 7
 2486              		.cfi_def_cfa_offset 0
 2487 0104 7047     		bx	lr
 2488              	.L98:
 2489 0106 00BF     		.align	2
 2490              	.L97:
 2491 0108 00000000 		.word	map
 2492              		.cfi_endproc
 2493              	.LFE6:
 2494              		.size	checkPathDirection, .-checkPathDirection
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 53


 2495              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2496              		.align	2
 2497              		.global	checkIgnoreTurn
 2498              		.thumb
 2499              		.thumb_func
 2500              		.type	checkIgnoreTurn, %function
 2501              	checkIgnoreTurn:
 2502              	.LFB7:
 423:pathfinding.c **** 
 424:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2503              		.loc 1 424 0
 2504              		.cfi_startproc
 2505              		@ args = 0, pretend = 0, frame = 16
 2506              		@ frame_needed = 1, uses_anonymous_args = 0
 2507              		@ link register save eliminated.
 2508 0000 80B4     		push	{r7}
 2509              		.cfi_def_cfa_offset 4
 2510              		.cfi_offset 7, -4
 2511 0002 85B0     		sub	sp, sp, #20
 2512              		.cfi_def_cfa_offset 24
 2513 0004 00AF     		add	r7, sp, #0
 2514              		.cfi_def_cfa_register 7
 2515 0006 0346     		mov	r3, r0
 2516 0008 B960     		str	r1, [r7, #8]
 2517 000a 7A60     		str	r2, [r7, #4]
 2518 000c FB73     		strb	r3, [r7, #15]
 425:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 426:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2519              		.loc 1 426 0
 2520 000e BB68     		ldr	r3, [r7, #8]
 2521 0010 5A1E     		subs	r2, r3, #1
 2522 0012 4149     		ldr	r1, .L117
 2523 0014 1346     		mov	r3, r2
 2524 0016 DB00     		lsls	r3, r3, #3
 2525 0018 1344     		add	r3, r3, r2
 2526 001a 5B00     		lsls	r3, r3, #1
 2527 001c 1344     		add	r3, r3, r2
 2528 001e 7A68     		ldr	r2, [r7, #4]
 2529 0020 1344     		add	r3, r3, r2
 2530 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2531 0026 002B     		cmp	r3, #0
 2532 0028 11D1     		bne	.L100
 427:pathfinding.c ****         switch (robotOrientation) {
 2533              		.loc 1 427 0
 2534 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2535 002c 022B     		cmp	r3, #2
 2536 002e 02D0     		beq	.L102
 2537 0030 032B     		cmp	r3, #3
 2538 0032 06D0     		beq	.L103
 428:pathfinding.c ****             case Left:
 429:pathfinding.c ****                 ignoreR++;
 430:pathfinding.c ****                 break;
 431:pathfinding.c ****             case Right:
 432:pathfinding.c ****                 ignoreL++;
 433:pathfinding.c ****                 break;
 434:pathfinding.c ****             default:
 435:pathfinding.c ****                 break; // ignore when going up and down
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 54


 2539              		.loc 1 435 0
 2540 0034 0BE0     		b	.L100
 2541              	.L102:
 429:pathfinding.c ****                 break;
 2542              		.loc 1 429 0
 2543 0036 394B     		ldr	r3, .L117+4
 2544 0038 1B68     		ldr	r3, [r3]
 2545 003a 0133     		adds	r3, r3, #1
 2546 003c 374A     		ldr	r2, .L117+4
 2547 003e 1360     		str	r3, [r2]
 430:pathfinding.c ****             case Right:
 2548              		.loc 1 430 0
 2549 0040 05E0     		b	.L100
 2550              	.L103:
 432:pathfinding.c ****                 break;
 2551              		.loc 1 432 0
 2552 0042 374B     		ldr	r3, .L117+8
 2553 0044 1B68     		ldr	r3, [r3]
 2554 0046 0133     		adds	r3, r3, #1
 2555 0048 354A     		ldr	r2, .L117+8
 2556 004a 1360     		str	r3, [r2]
 433:pathfinding.c ****             default:
 2557              		.loc 1 433 0
 2558 004c 00BF     		nop
 2559              	.L100:
 436:pathfinding.c ****         }
 437:pathfinding.c ****     }
 438:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2560              		.loc 1 438 0
 2561 004e BB68     		ldr	r3, [r7, #8]
 2562 0050 5A1C     		adds	r2, r3, #1
 2563 0052 3149     		ldr	r1, .L117
 2564 0054 1346     		mov	r3, r2
 2565 0056 DB00     		lsls	r3, r3, #3
 2566 0058 1344     		add	r3, r3, r2
 2567 005a 5B00     		lsls	r3, r3, #1
 2568 005c 1344     		add	r3, r3, r2
 2569 005e 7A68     		ldr	r2, [r7, #4]
 2570 0060 1344     		add	r3, r3, r2
 2571 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2572 0066 002B     		cmp	r3, #0
 2573 0068 11D1     		bne	.L104
 439:pathfinding.c ****         switch (robotOrientation) {
 2574              		.loc 1 439 0
 2575 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2576 006c 022B     		cmp	r3, #2
 2577 006e 02D0     		beq	.L106
 2578 0070 032B     		cmp	r3, #3
 2579 0072 06D0     		beq	.L107
 440:pathfinding.c ****             case Left:
 441:pathfinding.c ****                 ignoreL++;
 442:pathfinding.c ****                 break;
 443:pathfinding.c ****             case Right:
 444:pathfinding.c ****                 ignoreR++;
 445:pathfinding.c ****                 break;
 446:pathfinding.c ****             default:
 447:pathfinding.c ****                 break;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 55


 2580              		.loc 1 447 0
 2581 0074 0BE0     		b	.L104
 2582              	.L106:
 441:pathfinding.c ****                 break;
 2583              		.loc 1 441 0
 2584 0076 2A4B     		ldr	r3, .L117+8
 2585 0078 1B68     		ldr	r3, [r3]
 2586 007a 0133     		adds	r3, r3, #1
 2587 007c 284A     		ldr	r2, .L117+8
 2588 007e 1360     		str	r3, [r2]
 442:pathfinding.c ****             case Right:
 2589              		.loc 1 442 0
 2590 0080 05E0     		b	.L104
 2591              	.L107:
 444:pathfinding.c ****                 break;
 2592              		.loc 1 444 0
 2593 0082 264B     		ldr	r3, .L117+4
 2594 0084 1B68     		ldr	r3, [r3]
 2595 0086 0133     		adds	r3, r3, #1
 2596 0088 244A     		ldr	r2, .L117+4
 2597 008a 1360     		str	r3, [r2]
 445:pathfinding.c ****             default:
 2598              		.loc 1 445 0
 2599 008c 00BF     		nop
 2600              	.L104:
 448:pathfinding.c ****         }
 449:pathfinding.c ****     }
 450:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2601              		.loc 1 450 0
 2602 008e 7B68     		ldr	r3, [r7, #4]
 2603 0090 591E     		subs	r1, r3, #1
 2604 0092 2148     		ldr	r0, .L117
 2605 0094 BA68     		ldr	r2, [r7, #8]
 2606 0096 1346     		mov	r3, r2
 2607 0098 DB00     		lsls	r3, r3, #3
 2608 009a 1344     		add	r3, r3, r2
 2609 009c 5B00     		lsls	r3, r3, #1
 2610 009e 1344     		add	r3, r3, r2
 2611 00a0 0B44     		add	r3, r3, r1
 2612 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2613 00a6 002B     		cmp	r3, #0
 2614 00a8 11D1     		bne	.L108
 451:pathfinding.c ****         switch (robotOrientation) {
 2615              		.loc 1 451 0
 2616 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2617 00ac 002B     		cmp	r3, #0
 2618 00ae 02D0     		beq	.L110
 2619 00b0 012B     		cmp	r3, #1
 2620 00b2 06D0     		beq	.L111
 452:pathfinding.c ****             case Up:
 453:pathfinding.c ****                 ignoreL++;
 454:pathfinding.c ****                 break;
 455:pathfinding.c ****             case Down:
 456:pathfinding.c ****                 ignoreR++;
 457:pathfinding.c ****                 break;
 458:pathfinding.c ****             default:
 459:pathfinding.c ****                 break;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 56


 2621              		.loc 1 459 0
 2622 00b4 0BE0     		b	.L108
 2623              	.L110:
 453:pathfinding.c ****                 break;
 2624              		.loc 1 453 0
 2625 00b6 1A4B     		ldr	r3, .L117+8
 2626 00b8 1B68     		ldr	r3, [r3]
 2627 00ba 0133     		adds	r3, r3, #1
 2628 00bc 184A     		ldr	r2, .L117+8
 2629 00be 1360     		str	r3, [r2]
 454:pathfinding.c ****             case Down:
 2630              		.loc 1 454 0
 2631 00c0 05E0     		b	.L108
 2632              	.L111:
 456:pathfinding.c ****                 break;
 2633              		.loc 1 456 0
 2634 00c2 164B     		ldr	r3, .L117+4
 2635 00c4 1B68     		ldr	r3, [r3]
 2636 00c6 0133     		adds	r3, r3, #1
 2637 00c8 144A     		ldr	r2, .L117+4
 2638 00ca 1360     		str	r3, [r2]
 457:pathfinding.c ****             default:
 2639              		.loc 1 457 0
 2640 00cc 00BF     		nop
 2641              	.L108:
 460:pathfinding.c ****         }
 461:pathfinding.c ****     }
 462:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2642              		.loc 1 462 0
 2643 00ce 7B68     		ldr	r3, [r7, #4]
 2644 00d0 591C     		adds	r1, r3, #1
 2645 00d2 1148     		ldr	r0, .L117
 2646 00d4 BA68     		ldr	r2, [r7, #8]
 2647 00d6 1346     		mov	r3, r2
 2648 00d8 DB00     		lsls	r3, r3, #3
 2649 00da 1344     		add	r3, r3, r2
 2650 00dc 5B00     		lsls	r3, r3, #1
 2651 00de 1344     		add	r3, r3, r2
 2652 00e0 0B44     		add	r3, r3, r1
 2653 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2654 00e6 002B     		cmp	r3, #0
 2655 00e8 11D1     		bne	.L116
 463:pathfinding.c ****         switch (robotOrientation) {
 2656              		.loc 1 463 0
 2657 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2658 00ec 002B     		cmp	r3, #0
 2659 00ee 02D0     		beq	.L114
 2660 00f0 012B     		cmp	r3, #1
 2661 00f2 06D0     		beq	.L115
 464:pathfinding.c ****             case Up:
 465:pathfinding.c ****                 ignoreR++;
 466:pathfinding.c ****                 break;
 467:pathfinding.c ****             case Down:
 468:pathfinding.c ****                 ignoreL++;
 469:pathfinding.c ****                 break;
 470:pathfinding.c ****             default:
 471:pathfinding.c ****                 break;
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 57


 2662              		.loc 1 471 0
 2663 00f4 0BE0     		b	.L112
 2664              	.L114:
 465:pathfinding.c ****                 break;
 2665              		.loc 1 465 0
 2666 00f6 094B     		ldr	r3, .L117+4
 2667 00f8 1B68     		ldr	r3, [r3]
 2668 00fa 0133     		adds	r3, r3, #1
 2669 00fc 074A     		ldr	r2, .L117+4
 2670 00fe 1360     		str	r3, [r2]
 466:pathfinding.c ****             case Down:
 2671              		.loc 1 466 0
 2672 0100 05E0     		b	.L112
 2673              	.L115:
 468:pathfinding.c ****                 break;
 2674              		.loc 1 468 0
 2675 0102 074B     		ldr	r3, .L117+8
 2676 0104 1B68     		ldr	r3, [r3]
 2677 0106 0133     		adds	r3, r3, #1
 2678 0108 054A     		ldr	r2, .L117+8
 2679 010a 1360     		str	r3, [r2]
 469:pathfinding.c ****             default:
 2680              		.loc 1 469 0
 2681 010c 00BF     		nop
 2682              	.L112:
 2683              	.L116:
 472:pathfinding.c ****         }
 473:pathfinding.c ****     }
 474:pathfinding.c **** }
 2684              		.loc 1 474 0
 2685 010e 00BF     		nop
 2686 0110 1437     		adds	r7, r7, #20
 2687              		.cfi_def_cfa_offset 4
 2688 0112 BD46     		mov	sp, r7
 2689              		.cfi_def_cfa_register 13
 2690              		@ sp needed
 2691 0114 80BC     		pop	{r7}
 2692              		.cfi_restore 7
 2693              		.cfi_def_cfa_offset 0
 2694 0116 7047     		bx	lr
 2695              	.L118:
 2696              		.align	2
 2697              	.L117:
 2698 0118 00000000 		.word	map
 2699 011c 00000000 		.word	ignoreR
 2700 0120 00000000 		.word	ignoreL
 2701              		.cfi_endproc
 2702              	.LFE7:
 2703              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 2704              		.section	.text.getTargetOrientation,"ax",%progbits
 2705              		.align	2
 2706              		.global	getTargetOrientation
 2707              		.thumb
 2708              		.thumb_func
 2709              		.type	getTargetOrientation, %function
 2710              	getTargetOrientation:
 2711              	.LFB8:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 58


 475:pathfinding.c **** 
 476:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 2712              		.loc 1 476 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 8
 2715              		@ frame_needed = 1, uses_anonymous_args = 0
 2716              		@ link register save eliminated.
 2717 0000 80B4     		push	{r7}
 2718              		.cfi_def_cfa_offset 4
 2719              		.cfi_offset 7, -4
 2720 0002 83B0     		sub	sp, sp, #12
 2721              		.cfi_def_cfa_offset 16
 2722 0004 00AF     		add	r7, sp, #0
 2723              		.cfi_def_cfa_register 7
 2724 0006 7860     		str	r0, [r7, #4]
 2725 0008 3960     		str	r1, [r7]
 477:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 2726              		.loc 1 477 0
 2727 000a 7B68     		ldr	r3, [r7, #4]
 2728 000c 5A1C     		adds	r2, r3, #1
 2729 000e 2249     		ldr	r1, .L125
 2730 0010 1346     		mov	r3, r2
 2731 0012 DB00     		lsls	r3, r3, #3
 2732 0014 1344     		add	r3, r3, r2
 2733 0016 5B00     		lsls	r3, r3, #1
 2734 0018 1344     		add	r3, r3, r2
 2735 001a 3A68     		ldr	r2, [r7]
 2736 001c 1344     		add	r3, r3, r2
 2737 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2738 0022 082B     		cmp	r3, #8
 2739 0024 01D1     		bne	.L120
 478:pathfinding.c ****         return 0; // robot will be travelling up
 2740              		.loc 1 478 0
 2741 0026 0023     		movs	r3, #0
 2742 0028 30E0     		b	.L121
 2743              	.L120:
 479:pathfinding.c ****     }
 480:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 2744              		.loc 1 480 0
 2745 002a 7B68     		ldr	r3, [r7, #4]
 2746 002c 5A1E     		subs	r2, r3, #1
 2747 002e 1A49     		ldr	r1, .L125
 2748 0030 1346     		mov	r3, r2
 2749 0032 DB00     		lsls	r3, r3, #3
 2750 0034 1344     		add	r3, r3, r2
 2751 0036 5B00     		lsls	r3, r3, #1
 2752 0038 1344     		add	r3, r3, r2
 2753 003a 3A68     		ldr	r2, [r7]
 2754 003c 1344     		add	r3, r3, r2
 2755 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2756 0042 082B     		cmp	r3, #8
 2757 0044 01D1     		bne	.L122
 481:pathfinding.c ****         return 1; // robot will be travelling down
 2758              		.loc 1 481 0
 2759 0046 0123     		movs	r3, #1
 2760 0048 20E0     		b	.L121
 2761              	.L122:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 59


 482:pathfinding.c ****     }
 483:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 2762              		.loc 1 483 0
 2763 004a 3B68     		ldr	r3, [r7]
 2764 004c 591C     		adds	r1, r3, #1
 2765 004e 1248     		ldr	r0, .L125
 2766 0050 7A68     		ldr	r2, [r7, #4]
 2767 0052 1346     		mov	r3, r2
 2768 0054 DB00     		lsls	r3, r3, #3
 2769 0056 1344     		add	r3, r3, r2
 2770 0058 5B00     		lsls	r3, r3, #1
 2771 005a 1344     		add	r3, r3, r2
 2772 005c 0B44     		add	r3, r3, r1
 2773 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2774 0062 082B     		cmp	r3, #8
 2775 0064 01D1     		bne	.L123
 484:pathfinding.c ****         return 2; // robot will be travelling left
 2776              		.loc 1 484 0
 2777 0066 0223     		movs	r3, #2
 2778 0068 10E0     		b	.L121
 2779              	.L123:
 485:pathfinding.c ****     }
 486:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 2780              		.loc 1 486 0
 2781 006a 3B68     		ldr	r3, [r7]
 2782 006c 591E     		subs	r1, r3, #1
 2783 006e 0A48     		ldr	r0, .L125
 2784 0070 7A68     		ldr	r2, [r7, #4]
 2785 0072 1346     		mov	r3, r2
 2786 0074 DB00     		lsls	r3, r3, #3
 2787 0076 1344     		add	r3, r3, r2
 2788 0078 5B00     		lsls	r3, r3, #1
 2789 007a 1344     		add	r3, r3, r2
 2790 007c 0B44     		add	r3, r3, r1
 2791 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2792 0082 082B     		cmp	r3, #8
 2793 0084 01D1     		bne	.L124
 487:pathfinding.c ****         return 3; // robot will be travelling right
 2794              		.loc 1 487 0
 2795 0086 0323     		movs	r3, #3
 2796 0088 00E0     		b	.L121
 2797              	.L124:
 488:pathfinding.c ****     }
 489:pathfinding.c ****     return 5; // placeholder
 2798              		.loc 1 489 0
 2799 008a 0523     		movs	r3, #5
 2800              	.L121:
 490:pathfinding.c **** }
 2801              		.loc 1 490 0
 2802 008c 1846     		mov	r0, r3
 2803 008e 0C37     		adds	r7, r7, #12
 2804              		.cfi_def_cfa_offset 4
 2805 0090 BD46     		mov	sp, r7
 2806              		.cfi_def_cfa_register 13
 2807              		@ sp needed
 2808 0092 80BC     		pop	{r7}
 2809              		.cfi_restore 7
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 60


 2810              		.cfi_def_cfa_offset 0
 2811 0094 7047     		bx	lr
 2812              	.L126:
 2813 0096 00BF     		.align	2
 2814              	.L125:
 2815 0098 00000000 		.word	map
 2816              		.cfi_endproc
 2817              	.LFE8:
 2818              		.size	getTargetOrientation, .-getTargetOrientation
 2819              		.section	.text.instructionsListLength,"ax",%progbits
 2820              		.align	2
 2821              		.global	instructionsListLength
 2822              		.thumb
 2823              		.thumb_func
 2824              		.type	instructionsListLength, %function
 2825              	instructionsListLength:
 2826              	.LFB9:
 491:pathfinding.c **** uint8_t instructionsListLength() {
 2827              		.loc 1 491 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 1, uses_anonymous_args = 0
 2831              		@ link register save eliminated.
 2832 0000 80B4     		push	{r7}
 2833              		.cfi_def_cfa_offset 4
 2834              		.cfi_offset 7, -4
 2835 0002 00AF     		add	r7, sp, #0
 2836              		.cfi_def_cfa_register 7
 492:pathfinding.c ****     return numSteps;
 2837              		.loc 1 492 0
 2838 0004 034B     		ldr	r3, .L129
 2839 0006 1B68     		ldr	r3, [r3]
 2840 0008 DBB2     		uxtb	r3, r3
 493:pathfinding.c **** }
 2841              		.loc 1 493 0
 2842 000a 1846     		mov	r0, r3
 2843 000c BD46     		mov	sp, r7
 2844              		.cfi_def_cfa_register 13
 2845              		@ sp needed
 2846 000e 80BC     		pop	{r7}
 2847              		.cfi_restore 7
 2848              		.cfi_def_cfa_offset 0
 2849 0010 7047     		bx	lr
 2850              	.L130:
 2851 0012 00BF     		.align	2
 2852              	.L129:
 2853 0014 5C0D0000 		.word	numSteps
 2854              		.cfi_endproc
 2855              	.LFE9:
 2856              		.size	instructionsListLength, .-instructionsListLength
 2857              		.section	.text.findPath,"ax",%progbits
 2858              		.align	2
 2859              		.global	findPath
 2860              		.thumb
 2861              		.thumb_func
 2862              		.type	findPath, %function
 2863              	findPath:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 61


 2864              	.LFB10:
 494:pathfinding.c **** 
 495:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 2865              		.loc 1 495 0
 2866              		.cfi_startproc
 2867              		@ args = 0, pretend = 0, frame = 32
 2868              		@ frame_needed = 1, uses_anonymous_args = 0
 2869 0000 90B5     		push	{r4, r7, lr}
 2870              		.cfi_def_cfa_offset 12
 2871              		.cfi_offset 4, -12
 2872              		.cfi_offset 7, -8
 2873              		.cfi_offset 14, -4
 2874 0002 8BB0     		sub	sp, sp, #44
 2875              		.cfi_def_cfa_offset 56
 2876 0004 02AF     		add	r7, sp, #8
 2877              		.cfi_def_cfa 7, 48
 2878 0006 F860     		str	r0, [r7, #12]
 2879 0008 B960     		str	r1, [r7, #8]
 2880 000a 7A60     		str	r2, [r7, #4]
 496:pathfinding.c ****     clearMap(map); // clear map between each pass
 2881              		.loc 1 496 0
 2882 000c F868     		ldr	r0, [r7, #12]
 2883 000e FFF7FEFF 		bl	clearMap
 497:pathfinding.c ****     struct Location startLocation, targetLocation;
 498:pathfinding.c ****     startLocation.row = start_pos[0];
 2884              		.loc 1 498 0
 2885 0012 184B     		ldr	r3, .L133
 2886 0014 1B68     		ldr	r3, [r3]
 2887 0016 BB61     		str	r3, [r7, #24]
 499:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 2888              		.loc 1 499 0
 2889 0018 164B     		ldr	r3, .L133
 2890 001a 5B68     		ldr	r3, [r3, #4]
 2891 001c FB61     		str	r3, [r7, #28]
 500:pathfinding.c ****     targetLocation.row = food_list[i][0];
 2892              		.loc 1 500 0
 2893 001e 7B68     		ldr	r3, [r7, #4]
 2894 0020 DB00     		lsls	r3, r3, #3
 2895 0022 BA68     		ldr	r2, [r7, #8]
 2896 0024 1344     		add	r3, r3, r2
 2897 0026 1B68     		ldr	r3, [r3]
 2898 0028 3B61     		str	r3, [r7, #16]
 501:pathfinding.c ****     targetLocation.col = food_list[i][1];
 2899              		.loc 1 501 0
 2900 002a 7B68     		ldr	r3, [r7, #4]
 2901 002c DB00     		lsls	r3, r3, #3
 2902 002e BA68     		ldr	r2, [r7, #8]
 2903 0030 1344     		add	r3, r3, r2
 2904 0032 5B68     		ldr	r3, [r3, #4]
 2905 0034 7B61     		str	r3, [r7, #20]
 502:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 2906              		.loc 1 502 0
 2907 0036 7B69     		ldr	r3, [r7, #20]
 2908 0038 0093     		str	r3, [sp]
 2909 003a 3B69     		ldr	r3, [r7, #16]
 2910 003c 07F11802 		add	r2, r7, #24
 2911 0040 06CA     		ldmia	r2, {r1, r2}
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 62


 2912 0042 F868     		ldr	r0, [r7, #12]
 2913 0044 FFF7FEFF 		bl	dijkstra
 503:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 2914              		.loc 1 503 0
 2915 0048 0B4B     		ldr	r3, .L133+4
 2916 004a 1C68     		ldr	r4, [r3]
 2917 004c 6A46     		mov	r2, sp
 2918 004e 07F11003 		add	r3, r7, #16
 2919 0052 93E80300 		ldmia	r3, {r0, r1}
 2920 0056 82E80300 		stmia	r2, {r0, r1}
 2921 005a 07F11803 		add	r3, r7, #24
 2922 005e 0CCB     		ldmia	r3, {r2, r3}
 2923 0060 2146     		mov	r1, r4
 2924 0062 F868     		ldr	r0, [r7, #12]
 2925 0064 FFF7FEFF 		bl	getPathInstructions
 504:pathfinding.c ****     return instructionsList;
 2926              		.loc 1 504 0
 2927 0068 044B     		ldr	r3, .L133+8
 505:pathfinding.c **** }
 2928              		.loc 1 505 0
 2929 006a 1846     		mov	r0, r3
 2930 006c 2437     		adds	r7, r7, #36
 2931              		.cfi_def_cfa_offset 12
 2932 006e BD46     		mov	sp, r7
 2933              		.cfi_def_cfa_register 13
 2934              		@ sp needed
 2935 0070 90BD     		pop	{r4, r7, pc}
 2936              	.L134:
 2937 0072 00BF     		.align	2
 2938              	.L133:
 2939 0074 00000000 		.word	start_pos
 2940 0078 5C0D0000 		.word	numSteps
 2941 007c 00000000 		.word	instructionsList
 2942              		.cfi_endproc
 2943              	.LFE10:
 2944              		.size	findPath, .-findPath
 2945              		.text
 2946              	.Letext0:
 2947              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2948              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2949              		.file 4 "pathfinding.h"
 2950              		.section	.debug_info,"",%progbits
 2951              	.Ldebug_info0:
 2952 0000 07080000 		.4byte	0x807
 2953 0004 0400     		.2byte	0x4
 2954 0006 00000000 		.4byte	.Ldebug_abbrev0
 2955 000a 04       		.byte	0x4
 2956 000b 01       		.uleb128 0x1
 2957 000c 84000000 		.4byte	.LASF78
 2958 0010 0C       		.byte	0xc
 2959 0011 FF030000 		.4byte	.LASF79
 2960 0015 1F000000 		.4byte	.LASF80
 2961 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2962 001d 00000000 		.4byte	0
 2963 0021 00000000 		.4byte	.Ldebug_line0
 2964 0025 02       		.uleb128 0x2
 2965 0026 01       		.byte	0x1
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 63


 2966 0027 06       		.byte	0x6
 2967 0028 66010000 		.4byte	.LASF0
 2968 002c 03       		.uleb128 0x3
 2969 002d 70000000 		.4byte	.LASF12
 2970 0031 02       		.byte	0x2
 2971 0032 1D       		.byte	0x1d
 2972 0033 37000000 		.4byte	0x37
 2973 0037 02       		.uleb128 0x2
 2974 0038 01       		.byte	0x1
 2975 0039 08       		.byte	0x8
 2976 003a 01030000 		.4byte	.LASF1
 2977 003e 02       		.uleb128 0x2
 2978 003f 02       		.byte	0x2
 2979 0040 05       		.byte	0x5
 2980 0041 42030000 		.4byte	.LASF2
 2981 0045 02       		.uleb128 0x2
 2982 0046 02       		.byte	0x2
 2983 0047 07       		.byte	0x7
 2984 0048 4C020000 		.4byte	.LASF3
 2985 004c 02       		.uleb128 0x2
 2986 004d 04       		.byte	0x4
 2987 004e 05       		.byte	0x5
 2988 004f 90010000 		.4byte	.LASF4
 2989 0053 02       		.uleb128 0x2
 2990 0054 04       		.byte	0x4
 2991 0055 07       		.byte	0x7
 2992 0056 28020000 		.4byte	.LASF5
 2993 005a 02       		.uleb128 0x2
 2994 005b 08       		.byte	0x8
 2995 005c 05       		.byte	0x5
 2996 005d 58010000 		.4byte	.LASF6
 2997 0061 02       		.uleb128 0x2
 2998 0062 08       		.byte	0x8
 2999 0063 07       		.byte	0x7
 3000 0064 12010000 		.4byte	.LASF7
 3001 0068 04       		.uleb128 0x4
 3002 0069 04       		.byte	0x4
 3003 006a 05       		.byte	0x5
 3004 006b 696E7400 		.ascii	"int\000"
 3005 006f 02       		.uleb128 0x2
 3006 0070 04       		.byte	0x4
 3007 0071 07       		.byte	0x7
 3008 0072 0E020000 		.4byte	.LASF8
 3009 0076 02       		.uleb128 0x2
 3010 0077 08       		.byte	0x8
 3011 0078 04       		.byte	0x4
 3012 0079 9C020000 		.4byte	.LASF9
 3013 007d 02       		.uleb128 0x2
 3014 007e 04       		.byte	0x4
 3015 007f 07       		.byte	0x7
 3016 0080 93020000 		.4byte	.LASF10
 3017 0084 02       		.uleb128 0x2
 3018 0085 01       		.byte	0x1
 3019 0086 08       		.byte	0x8
 3020 0087 9B030000 		.4byte	.LASF11
 3021 008b 03       		.uleb128 0x3
 3022 008c 4B040000 		.4byte	.LASF13
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 64


 3023 0090 03       		.byte	0x3
 3024 0091 18       		.byte	0x18
 3025 0092 2C000000 		.4byte	0x2c
 3026 0096 05       		.uleb128 0x5
 3027 0097 0F030000 		.4byte	.LASF25
 3028 009b 01       		.byte	0x1
 3029 009c 37000000 		.4byte	0x37
 3030 00a0 04       		.byte	0x4
 3031 00a1 0D       		.byte	0xd
 3032 00a2 D1000000 		.4byte	0xd1
 3033 00a6 06       		.uleb128 0x6
 3034 00a7 5B030000 		.4byte	.LASF14
 3035 00ab 00       		.byte	0
 3036 00ac 06       		.uleb128 0x6
 3037 00ad C3020000 		.4byte	.LASF15
 3038 00b1 01       		.byte	0x1
 3039 00b2 06       		.uleb128 0x6
 3040 00b3 1E040000 		.4byte	.LASF16
 3041 00b7 02       		.byte	0x2
 3042 00b8 06       		.uleb128 0x6
 3043 00b9 3B010000 		.4byte	.LASF17
 3044 00bd 03       		.byte	0x3
 3045 00be 06       		.uleb128 0x6
 3046 00bf A8010000 		.4byte	.LASF18
 3047 00c3 04       		.byte	0x4
 3048 00c4 06       		.uleb128 0x6
 3049 00c5 5F020000 		.4byte	.LASF19
 3050 00c9 05       		.byte	0x5
 3051 00ca 06       		.uleb128 0x6
 3052 00cb 1A000000 		.4byte	.LASF20
 3053 00cf 06       		.byte	0x6
 3054 00d0 00       		.byte	0
 3055 00d1 07       		.uleb128 0x7
 3056 00d2 79010000 		.4byte	.LASF24
 3057 00d6 0C       		.byte	0xc
 3058 00d7 04       		.byte	0x4
 3059 00d8 0E       		.byte	0xe
 3060 00d9 02010000 		.4byte	0x102
 3061 00dd 08       		.uleb128 0x8
 3062 00de 7A000000 		.4byte	.LASF21
 3063 00e2 04       		.byte	0x4
 3064 00e3 0F       		.byte	0xf
 3065 00e4 96000000 		.4byte	0x96
 3066 00e8 00       		.byte	0
 3067 00e9 08       		.uleb128 0x8
 3068 00ea 88040000 		.4byte	.LASF22
 3069 00ee 04       		.byte	0x4
 3070 00ef 10       		.byte	0x10
 3071 00f0 68000000 		.4byte	0x68
 3072 00f4 04       		.byte	0x4
 3073 00f5 08       		.uleb128 0x8
 3074 00f6 90040000 		.4byte	.LASF23
 3075 00fa 04       		.byte	0x4
 3076 00fb 11       		.byte	0x11
 3077 00fc 68000000 		.4byte	0x68
 3078 0100 08       		.byte	0x8
 3079 0101 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 65


 3080 0102 03       		.uleb128 0x3
 3081 0103 79010000 		.4byte	.LASF24
 3082 0107 04       		.byte	0x4
 3083 0108 12       		.byte	0x12
 3084 0109 D1000000 		.4byte	0xd1
 3085 010d 05       		.uleb128 0x5
 3086 010e 00000000 		.4byte	.LASF26
 3087 0112 01       		.byte	0x1
 3088 0113 37000000 		.4byte	0x37
 3089 0117 04       		.byte	0x4
 3090 0118 14       		.byte	0x14
 3091 0119 35010000 		.4byte	0x135
 3092 011d 09       		.uleb128 0x9
 3093 011e 557000   		.ascii	"Up\000"
 3094 0121 00       		.byte	0
 3095 0122 06       		.uleb128 0x6
 3096 0123 D6030000 		.4byte	.LASF27
 3097 0127 01       		.byte	0x1
 3098 0128 06       		.uleb128 0x6
 3099 0129 8E020000 		.4byte	.LASF28
 3100 012d 02       		.byte	0x2
 3101 012e 06       		.uleb128 0x6
 3102 012f 65030000 		.4byte	.LASF29
 3103 0133 03       		.byte	0x3
 3104 0134 00       		.byte	0
 3105 0135 07       		.uleb128 0x7
 3106 0136 BB010000 		.4byte	.LASF30
 3107 013a 08       		.byte	0x8
 3108 013b 04       		.byte	0x4
 3109 013c 16       		.byte	0x16
 3110 013d 5A010000 		.4byte	0x15a
 3111 0141 0A       		.uleb128 0xa
 3112 0142 726F7700 		.ascii	"row\000"
 3113 0146 04       		.byte	0x4
 3114 0147 18       		.byte	0x18
 3115 0148 68000000 		.4byte	0x68
 3116 014c 00       		.byte	0
 3117 014d 0A       		.uleb128 0xa
 3118 014e 636F6C00 		.ascii	"col\000"
 3119 0152 04       		.byte	0x4
 3120 0153 19       		.byte	0x19
 3121 0154 68000000 		.4byte	0x68
 3122 0158 04       		.byte	0x4
 3123 0159 00       		.byte	0
 3124 015a 0B       		.uleb128 0xb
 3125 015b 4F010000 		.4byte	.LASF31
 3126 015f 01       		.byte	0x1
 3127 0160 54       		.byte	0x54
 3128 0161 00000000 		.4byte	.LFB1
 3129 0165 58000000 		.4byte	.LFE1-.LFB1
 3130 0169 01       		.uleb128 0x1
 3131 016a 9C       		.byte	0x9c
 3132 016b AA010000 		.4byte	0x1aa
 3133 016f 0C       		.uleb128 0xc
 3134 0170 6D617000 		.ascii	"map\000"
 3135 0174 01       		.byte	0x1
 3136 0175 54       		.byte	0x54
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 66


 3137 0176 BA010000 		.4byte	0x1ba
 3138 017a 02       		.uleb128 0x2
 3139 017b 91       		.byte	0x91
 3140 017c 6C       		.sleb128 -20
 3141 017d 0D       		.uleb128 0xd
 3142 017e 08000000 		.4byte	.LBB2
 3143 0182 44000000 		.4byte	.LBE2-.LBB2
 3144 0186 0E       		.uleb128 0xe
 3145 0187 6900     		.ascii	"i\000"
 3146 0189 01       		.byte	0x1
 3147 018a 56       		.byte	0x56
 3148 018b 68000000 		.4byte	0x68
 3149 018f 02       		.uleb128 0x2
 3150 0190 91       		.byte	0x91
 3151 0191 74       		.sleb128 -12
 3152 0192 0D       		.uleb128 0xd
 3153 0193 0E000000 		.4byte	.LBB3
 3154 0197 2C000000 		.4byte	.LBE3-.LBB3
 3155 019b 0E       		.uleb128 0xe
 3156 019c 6A00     		.ascii	"j\000"
 3157 019e 01       		.byte	0x1
 3158 019f 57       		.byte	0x57
 3159 01a0 68000000 		.4byte	0x68
 3160 01a4 02       		.uleb128 0x2
 3161 01a5 91       		.byte	0x91
 3162 01a6 70       		.sleb128 -16
 3163 01a7 00       		.byte	0
 3164 01a8 00       		.byte	0
 3165 01a9 00       		.byte	0
 3166 01aa 0F       		.uleb128 0xf
 3167 01ab 68000000 		.4byte	0x68
 3168 01af BA010000 		.4byte	0x1ba
 3169 01b3 10       		.uleb128 0x10
 3170 01b4 7D000000 		.4byte	0x7d
 3171 01b8 12       		.byte	0x12
 3172 01b9 00       		.byte	0
 3173 01ba 11       		.uleb128 0x11
 3174 01bb 04       		.byte	0x4
 3175 01bc AA010000 		.4byte	0x1aa
 3176 01c0 12       		.uleb128 0x12
 3177 01c1 E5020000 		.4byte	.LASF32
 3178 01c5 01       		.byte	0x1
 3179 01c6 5D       		.byte	0x5d
 3180 01c7 00000000 		.4byte	.LFB2
 3181 01cb 60000000 		.4byte	.LFE2-.LFB2
 3182 01cf 01       		.uleb128 0x1
 3183 01d0 9C       		.byte	0x9c
 3184 01d1 10020000 		.4byte	0x210
 3185 01d5 0C       		.uleb128 0xc
 3186 01d6 6D617000 		.ascii	"map\000"
 3187 01da 01       		.byte	0x1
 3188 01db 5D       		.byte	0x5d
 3189 01dc BA010000 		.4byte	0x1ba
 3190 01e0 02       		.uleb128 0x2
 3191 01e1 91       		.byte	0x91
 3192 01e2 6C       		.sleb128 -20
 3193 01e3 0D       		.uleb128 0xd
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 67


 3194 01e4 08000000 		.4byte	.LBB4
 3195 01e8 4E000000 		.4byte	.LBE4-.LBB4
 3196 01ec 0E       		.uleb128 0xe
 3197 01ed 6900     		.ascii	"i\000"
 3198 01ef 01       		.byte	0x1
 3199 01f0 5F       		.byte	0x5f
 3200 01f1 68000000 		.4byte	0x68
 3201 01f5 02       		.uleb128 0x2
 3202 01f6 91       		.byte	0x91
 3203 01f7 74       		.sleb128 -12
 3204 01f8 0D       		.uleb128 0xd
 3205 01f9 0E000000 		.4byte	.LBB5
 3206 01fd 3C000000 		.4byte	.LBE5-.LBB5
 3207 0201 0E       		.uleb128 0xe
 3208 0202 6A00     		.ascii	"j\000"
 3209 0204 01       		.byte	0x1
 3210 0205 60       		.byte	0x60
 3211 0206 68000000 		.4byte	0x68
 3212 020a 02       		.uleb128 0x2
 3213 020b 91       		.byte	0x91
 3214 020c 70       		.sleb128 -16
 3215 020d 00       		.byte	0
 3216 020e 00       		.byte	0
 3217 020f 00       		.byte	0
 3218 0210 13       		.uleb128 0x13
 3219 0211 64000000 		.4byte	.LASF63
 3220 0215 01       		.byte	0x1
 3221 0216 6B       		.byte	0x6b
 3222 0217 6C020000 		.4byte	0x26c
 3223 021b 00000000 		.4byte	.LFB3
 3224 021f 56000000 		.4byte	.LFE3-.LFB3
 3225 0223 01       		.uleb128 0x1
 3226 0224 9C       		.byte	0x9c
 3227 0225 6C020000 		.4byte	0x26c
 3228 0229 0C       		.uleb128 0xc
 3229 022a 7200     		.ascii	"r\000"
 3230 022c 01       		.byte	0x1
 3231 022d 6B       		.byte	0x6b
 3232 022e 68000000 		.4byte	0x68
 3233 0232 02       		.uleb128 0x2
 3234 0233 91       		.byte	0x91
 3235 0234 74       		.sleb128 -12
 3236 0235 0C       		.uleb128 0xc
 3237 0236 6300     		.ascii	"c\000"
 3238 0238 01       		.byte	0x1
 3239 0239 6B       		.byte	0x6b
 3240 023a 68000000 		.4byte	0x68
 3241 023e 02       		.uleb128 0x2
 3242 023f 91       		.byte	0x91
 3243 0240 70       		.sleb128 -16
 3244 0241 14       		.uleb128 0x14
 3245 0242 5F000000 		.4byte	.LASF33
 3246 0246 01       		.byte	0x1
 3247 0247 6B       		.byte	0x6b
 3248 0248 68000000 		.4byte	0x68
 3249 024c 02       		.uleb128 0x2
 3250 024d 91       		.byte	0x91
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 68


 3251 024e 6C       		.sleb128 -20
 3252 024f 14       		.uleb128 0x14
 3253 0250 7A040000 		.4byte	.LASF34
 3254 0254 01       		.byte	0x1
 3255 0255 6B       		.byte	0x6b
 3256 0256 68000000 		.4byte	0x68
 3257 025a 02       		.uleb128 0x2
 3258 025b 91       		.byte	0x91
 3259 025c 68       		.sleb128 -24
 3260 025d 0C       		.uleb128 0xc
 3261 025e 6D617000 		.ascii	"map\000"
 3262 0262 01       		.byte	0x1
 3263 0263 6B       		.byte	0x6b
 3264 0264 BA010000 		.4byte	0x1ba
 3265 0268 02       		.uleb128 0x2
 3266 0269 91       		.byte	0x91
 3267 026a 00       		.sleb128 0
 3268 026b 00       		.byte	0
 3269 026c 02       		.uleb128 0x2
 3270 026d 01       		.byte	0x1
 3271 026e 02       		.byte	0x2
 3272 026f FB020000 		.4byte	.LASF35
 3273 0273 0B       		.uleb128 0xb
 3274 0274 11000000 		.4byte	.LASF36
 3275 0278 01       		.byte	0x1
 3276 0279 6F       		.byte	0x6f
 3277 027a 00000000 		.4byte	.LFB4
 3278 027e 4C090000 		.4byte	.LFE4-.LFB4
 3279 0282 01       		.uleb128 0x1
 3280 0283 9C       		.byte	0x9c
 3281 0284 C1040000 		.4byte	0x4c1
 3282 0288 0C       		.uleb128 0xc
 3283 0289 6D617000 		.ascii	"map\000"
 3284 028d 01       		.byte	0x1
 3285 028e 6F       		.byte	0x6f
 3286 028f BA010000 		.4byte	0x1ba
 3287 0293 03       		.uleb128 0x3
 3288 0294 91       		.byte	0x91
 3289 0295 BC52     		.sleb128 -5828
 3290 0297 14       		.uleb128 0x14
 3291 0298 41010000 		.4byte	.LASF37
 3292 029c 01       		.byte	0x1
 3293 029d 6F       		.byte	0x6f
 3294 029e 35010000 		.4byte	0x135
 3295 02a2 03       		.uleb128 0x3
 3296 02a3 91       		.byte	0x91
 3297 02a4 B452     		.sleb128 -5836
 3298 02a6 14       		.uleb128 0x14
 3299 02a7 99010000 		.4byte	.LASF38
 3300 02ab 01       		.byte	0x1
 3301 02ac 6F       		.byte	0x6f
 3302 02ad 35010000 		.4byte	0x135
 3303 02b1 02       		.uleb128 0x2
 3304 02b2 91       		.byte	0x91
 3305 02b3 7C       		.sleb128 -4
 3306 02b4 15       		.uleb128 0x15
 3307 02b5 90030000 		.4byte	.LASF39
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 69


 3308 02b9 01       		.byte	0x1
 3309 02ba 71       		.byte	0x71
 3310 02bb C1040000 		.4byte	0x4c1
 3311 02bf 03       		.uleb128 0x3
 3312 02c0 91       		.byte	0x91
 3313 02c1 9C76     		.sleb128 -1252
 3314 02c3 07       		.uleb128 0x7
 3315 02c4 2F040000 		.4byte	.LASF40
 3316 02c8 0C       		.byte	0xc
 3317 02c9 01       		.byte	0x1
 3318 02ca 78       		.byte	0x78
 3319 02cb E8020000 		.4byte	0x2e8
 3320 02cf 08       		.uleb128 0x8
 3321 02d0 87030000 		.4byte	.LASF41
 3322 02d4 01       		.byte	0x1
 3323 02d5 79       		.byte	0x79
 3324 02d6 35010000 		.4byte	0x135
 3325 02da 00       		.byte	0
 3326 02db 08       		.uleb128 0x8
 3327 02dc C3030000 		.4byte	.LASF42
 3328 02e0 01       		.byte	0x1
 3329 02e1 7A       		.byte	0x7a
 3330 02e2 68000000 		.4byte	0x68
 3331 02e6 08       		.byte	0x8
 3332 02e7 00       		.byte	0
 3333 02e8 0E       		.uleb128 0xe
 3334 02e9 707100   		.ascii	"pq\000"
 3335 02ec 01       		.byte	0x1
 3336 02ed 7D       		.byte	0x7d
 3337 02ee D7040000 		.4byte	0x4d7
 3338 02f2 03       		.uleb128 0x3
 3339 02f3 91       		.byte	0x91
 3340 02f4 C05B     		.sleb128 -4672
 3341 02f6 15       		.uleb128 0x15
 3342 02f7 73020000 		.4byte	.LASF43
 3343 02fb 01       		.byte	0x1
 3344 02fc 7E       		.byte	0x7e
 3345 02fd 68000000 		.4byte	0x68
 3346 0301 02       		.uleb128 0x2
 3347 0302 91       		.byte	0x91
 3348 0303 5C       		.sleb128 -36
 3349 0304 15       		.uleb128 0x15
 3350 0305 31010000 		.4byte	.LASF44
 3351 0309 01       		.byte	0x1
 3352 030a 81       		.byte	0x81
 3353 030b C1040000 		.4byte	0x4c1
 3354 030f 03       		.uleb128 0x3
 3355 0310 91       		.byte	0x91
 3356 0311 CC52     		.sleb128 -5812
 3357 0313 15       		.uleb128 0x15
 3358 0314 29010000 		.4byte	.LASF45
 3359 0318 01       		.byte	0x1
 3360 0319 8A       		.byte	0x8a
 3361 031a 68000000 		.4byte	0x68
 3362 031e 02       		.uleb128 0x2
 3363 031f 91       		.byte	0x91
 3364 0320 50       		.sleb128 -48
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 70


 3365 0321 15       		.uleb128 0x15
 3366 0322 1B020000 		.4byte	.LASF46
 3367 0326 01       		.byte	0x1
 3368 0327 C1       		.byte	0xc1
 3369 0328 68000000 		.4byte	0x68
 3370 032c 02       		.uleb128 0x2
 3371 032d 91       		.byte	0x91
 3372 032e 40       		.sleb128 -64
 3373 032f 15       		.uleb128 0x15
 3374 0330 7E030000 		.4byte	.LASF47
 3375 0334 01       		.byte	0x1
 3376 0335 C4       		.byte	0xc4
 3377 0336 E8040000 		.4byte	0x4e8
 3378 033a 03       		.uleb128 0x3
 3379 033b 91       		.byte	0x91
 3380 033c 987F     		.sleb128 -104
 3381 033e 15       		.uleb128 0x15
 3382 033f A8020000 		.4byte	.LASF48
 3383 0343 01       		.byte	0x1
 3384 0344 C5       		.byte	0xc5
 3385 0345 68000000 		.4byte	0x68
 3386 0349 03       		.uleb128 0x3
 3387 034a 91       		.byte	0x91
 3388 034b BC7F     		.sleb128 -68
 3389 034d 15       		.uleb128 0x15
 3390 034e 85010000 		.4byte	.LASF49
 3391 0352 01       		.byte	0x1
 3392 0353 C6       		.byte	0xc6
 3393 0354 68000000 		.4byte	0x68
 3394 0358 03       		.uleb128 0x3
 3395 0359 91       		.byte	0x91
 3396 035a B87F     		.sleb128 -72
 3397 035c 15       		.uleb128 0x15
 3398 035d DB020000 		.4byte	.LASF50
 3399 0361 01       		.byte	0x1
 3400 0362 CD       		.byte	0xcd
 3401 0363 68000000 		.4byte	0x68
 3402 0367 03       		.uleb128 0x3
 3403 0368 91       		.byte	0x91
 3404 0369 B47F     		.sleb128 -76
 3405 036b 16       		.uleb128 0x16
 3406 036c 28000000 		.4byte	.LBB6
 3407 0370 92000000 		.4byte	.LBE6-.LBB6
 3408 0374 9B030000 		.4byte	0x39b
 3409 0378 0E       		.uleb128 0xe
 3410 0379 6900     		.ascii	"i\000"
 3411 037b 01       		.byte	0x1
 3412 037c 72       		.byte	0x72
 3413 037d 68000000 		.4byte	0x68
 3414 0381 02       		.uleb128 0x2
 3415 0382 91       		.byte	0x91
 3416 0383 64       		.sleb128 -28
 3417 0384 0D       		.uleb128 0xd
 3418 0385 36000000 		.4byte	.LBB7
 3419 0389 60000000 		.4byte	.LBE7-.LBB7
 3420 038d 0E       		.uleb128 0xe
 3421 038e 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 71


 3422 0390 01       		.byte	0x1
 3423 0391 73       		.byte	0x73
 3424 0392 68000000 		.4byte	0x68
 3425 0396 02       		.uleb128 0x2
 3426 0397 91       		.byte	0x91
 3427 0398 60       		.sleb128 -32
 3428 0399 00       		.byte	0
 3429 039a 00       		.byte	0
 3430 039b 16       		.uleb128 0x16
 3431 039c C6000000 		.4byte	.LBB8
 3432 03a0 92000000 		.4byte	.LBE8-.LBB8
 3433 03a4 CB030000 		.4byte	0x3cb
 3434 03a8 0E       		.uleb128 0xe
 3435 03a9 6900     		.ascii	"i\000"
 3436 03ab 01       		.byte	0x1
 3437 03ac 84       		.byte	0x84
 3438 03ad 68000000 		.4byte	0x68
 3439 03b1 02       		.uleb128 0x2
 3440 03b2 91       		.byte	0x91
 3441 03b3 58       		.sleb128 -40
 3442 03b4 0D       		.uleb128 0xd
 3443 03b5 D4000000 		.4byte	.LBB9
 3444 03b9 60000000 		.4byte	.LBE9-.LBB9
 3445 03bd 0E       		.uleb128 0xe
 3446 03be 6A00     		.ascii	"j\000"
 3447 03c0 01       		.byte	0x1
 3448 03c1 85       		.byte	0x85
 3449 03c2 68000000 		.4byte	0x68
 3450 03c6 02       		.uleb128 0x2
 3451 03c7 91       		.byte	0x91
 3452 03c8 54       		.sleb128 -44
 3453 03c9 00       		.byte	0
 3454 03ca 00       		.byte	0
 3455 03cb 17       		.uleb128 0x17
 3456 03cc 00000000 		.4byte	.Ldebug_ranges0+0
 3457 03d0 81040000 		.4byte	0x481
 3458 03d4 0E       		.uleb128 0xe
 3459 03d5 69647800 		.ascii	"idx\000"
 3460 03d9 01       		.byte	0x1
 3461 03da 94       		.byte	0x94
 3462 03db 68000000 		.4byte	0x68
 3463 03df 02       		.uleb128 0x2
 3464 03e0 91       		.byte	0x91
 3465 03e1 4C       		.sleb128 -52
 3466 03e2 15       		.uleb128 0x15
 3467 03e3 D3020000 		.4byte	.LASF51
 3468 03e7 01       		.byte	0x1
 3469 03e8 9A       		.byte	0x9a
 3470 03e9 C3020000 		.4byte	0x2c3
 3471 03ed 03       		.uleb128 0x3
 3472 03ee 91       		.byte	0x91
 3473 03ef C052     		.sleb128 -5824
 3474 03f1 0E       		.uleb128 0xe
 3475 03f2 726F7700 		.ascii	"row\000"
 3476 03f6 01       		.byte	0x1
 3477 03f7 9E       		.byte	0x9e
 3478 03f8 68000000 		.4byte	0x68
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 72


 3479 03fc 03       		.uleb128 0x3
 3480 03fd 91       		.byte	0x91
 3481 03fe AC7F     		.sleb128 -84
 3482 0400 0E       		.uleb128 0xe
 3483 0401 636F6C00 		.ascii	"col\000"
 3484 0405 01       		.byte	0x1
 3485 0406 9F       		.byte	0x9f
 3486 0407 68000000 		.4byte	0x68
 3487 040b 03       		.uleb128 0x3
 3488 040c 91       		.byte	0x91
 3489 040d A87F     		.sleb128 -88
 3490 040f 16       		.uleb128 0x16
 3491 0410 02020000 		.4byte	.LBB11
 3492 0414 90000000 		.4byte	.LBE11-.LBB11
 3493 0418 29040000 		.4byte	0x429
 3494 041c 0E       		.uleb128 0xe
 3495 041d 6900     		.ascii	"i\000"
 3496 041f 01       		.byte	0x1
 3497 0420 95       		.byte	0x95
 3498 0421 68000000 		.4byte	0x68
 3499 0425 02       		.uleb128 0x2
 3500 0426 91       		.byte	0x91
 3501 0427 48       		.sleb128 -56
 3502 0428 00       		.byte	0
 3503 0429 0D       		.uleb128 0xd
 3504 042a C4030000 		.4byte	.LBB12
 3505 042e 1E020000 		.4byte	.LBE12-.LBB12
 3506 0432 0E       		.uleb128 0xe
 3507 0433 6900     		.ascii	"i\000"
 3508 0435 01       		.byte	0x1
 3509 0436 A8       		.byte	0xa8
 3510 0437 68000000 		.4byte	0x68
 3511 043b 02       		.uleb128 0x2
 3512 043c 91       		.byte	0x91
 3513 043d 44       		.sleb128 -60
 3514 043e 0D       		.uleb128 0xd
 3515 043f D2030000 		.4byte	.LBB13
 3516 0443 EA010000 		.4byte	.LBE13-.LBB13
 3517 0447 15       		.uleb128 0x15
 3518 0448 6C020000 		.4byte	.LASF52
 3519 044c 01       		.byte	0x1
 3520 044d A9       		.byte	0xa9
 3521 044e 68000000 		.4byte	0x68
 3522 0452 03       		.uleb128 0x3
 3523 0453 91       		.byte	0x91
 3524 0454 A47F     		.sleb128 -92
 3525 0456 15       		.uleb128 0x15
 3526 0457 72010000 		.4byte	.LASF53
 3527 045b 01       		.byte	0x1
 3528 045c AA       		.byte	0xaa
 3529 045d 68000000 		.4byte	0x68
 3530 0461 03       		.uleb128 0x3
 3531 0462 91       		.byte	0x91
 3532 0463 A07F     		.sleb128 -96
 3533 0465 0D       		.uleb128 0xd
 3534 0466 80040000 		.4byte	.LBB14
 3535 046a 3C010000 		.4byte	.LBE14-.LBB14
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 73


 3536 046e 15       		.uleb128 0x15
 3537 046f F3030000 		.4byte	.LASF54
 3538 0473 01       		.byte	0x1
 3539 0474 AD       		.byte	0xad
 3540 0475 68000000 		.4byte	0x68
 3541 0479 03       		.uleb128 0x3
 3542 047a 91       		.byte	0x91
 3543 047b 9C7F     		.sleb128 -100
 3544 047d 00       		.byte	0
 3545 047e 00       		.byte	0
 3546 047f 00       		.byte	0
 3547 0480 00       		.byte	0
 3548 0481 0D       		.uleb128 0xd
 3549 0482 0A070000 		.4byte	.LBB16
 3550 0486 18020000 		.4byte	.LBE16-.LBB16
 3551 048a 0E       		.uleb128 0xe
 3552 048b 6900     		.ascii	"i\000"
 3553 048d 01       		.byte	0x1
 3554 048e D1       		.byte	0xd1
 3555 048f 68000000 		.4byte	0x68
 3556 0493 03       		.uleb128 0x3
 3557 0494 91       		.byte	0x91
 3558 0495 B07F     		.sleb128 -80
 3559 0497 0D       		.uleb128 0xd
 3560 0498 1C070000 		.4byte	.LBB17
 3561 049c EC010000 		.4byte	.LBE17-.LBB17
 3562 04a0 15       		.uleb128 0x15
 3563 04a1 6C020000 		.4byte	.LASF52
 3564 04a5 01       		.byte	0x1
 3565 04a6 D2       		.byte	0xd2
 3566 04a7 68000000 		.4byte	0x68
 3567 04ab 03       		.uleb128 0x3
 3568 04ac 91       		.byte	0x91
 3569 04ad 947F     		.sleb128 -108
 3570 04af 15       		.uleb128 0x15
 3571 04b0 72010000 		.4byte	.LASF53
 3572 04b4 01       		.byte	0x1
 3573 04b5 D3       		.byte	0xd3
 3574 04b6 68000000 		.4byte	0x68
 3575 04ba 03       		.uleb128 0x3
 3576 04bb 91       		.byte	0x91
 3577 04bc 907F     		.sleb128 -112
 3578 04be 00       		.byte	0
 3579 04bf 00       		.byte	0
 3580 04c0 00       		.byte	0
 3581 04c1 0F       		.uleb128 0xf
 3582 04c2 68000000 		.4byte	0x68
 3583 04c6 D7040000 		.4byte	0x4d7
 3584 04ca 10       		.uleb128 0x10
 3585 04cb 7D000000 		.4byte	0x7d
 3586 04cf 0E       		.byte	0xe
 3587 04d0 10       		.uleb128 0x10
 3588 04d1 7D000000 		.4byte	0x7d
 3589 04d5 12       		.byte	0x12
 3590 04d6 00       		.byte	0
 3591 04d7 0F       		.uleb128 0xf
 3592 04d8 C3020000 		.4byte	0x2c3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 74


 3593 04dc E8040000 		.4byte	0x4e8
 3594 04e0 18       		.uleb128 0x18
 3595 04e1 7D000000 		.4byte	0x7d
 3596 04e5 1C01     		.2byte	0x11c
 3597 04e7 00       		.byte	0
 3598 04e8 11       		.uleb128 0x11
 3599 04e9 04       		.byte	0x4
 3600 04ea 35010000 		.4byte	0x135
 3601 04ee 0B       		.uleb128 0xb
 3602 04ef 7A020000 		.4byte	.LASF55
 3603 04f3 01       		.byte	0x1
 3604 04f4 F2       		.byte	0xf2
 3605 04f5 00000000 		.4byte	.LFB5
 3606 04f9 68040000 		.4byte	.LFE5-.LFB5
 3607 04fd 01       		.uleb128 0x1
 3608 04fe 9C       		.byte	0x9c
 3609 04ff B5050000 		.4byte	0x5b5
 3610 0503 0C       		.uleb128 0xc
 3611 0504 6D617000 		.ascii	"map\000"
 3612 0508 01       		.byte	0x1
 3613 0509 F2       		.byte	0xf2
 3614 050a BA010000 		.4byte	0x1ba
 3615 050e 02       		.uleb128 0x2
 3616 050f 91       		.byte	0x91
 3617 0510 54       		.sleb128 -44
 3618 0511 14       		.uleb128 0x14
 3619 0512 6B030000 		.4byte	.LASF56
 3620 0516 01       		.byte	0x1
 3621 0517 F2       		.byte	0xf2
 3622 0518 68000000 		.4byte	0x68
 3623 051c 02       		.uleb128 0x2
 3624 051d 91       		.byte	0x91
 3625 051e 50       		.sleb128 -48
 3626 051f 14       		.uleb128 0x14
 3627 0520 3D040000 		.4byte	.LASF57
 3628 0524 01       		.byte	0x1
 3629 0525 F2       		.byte	0xf2
 3630 0526 35010000 		.4byte	0x135
 3631 052a 02       		.uleb128 0x2
 3632 052b 91       		.byte	0x91
 3633 052c 48       		.sleb128 -56
 3634 052d 14       		.uleb128 0x14
 3635 052e 4C030000 		.4byte	.LASF58
 3636 0532 01       		.byte	0x1
 3637 0533 F2       		.byte	0xf2
 3638 0534 35010000 		.4byte	0x135
 3639 0538 02       		.uleb128 0x2
 3640 0539 91       		.byte	0x91
 3641 053a 00       		.sleb128 0
 3642 053b 15       		.uleb128 0x15
 3643 053c A8020000 		.4byte	.LASF48
 3644 0540 01       		.byte	0x1
 3645 0541 F3       		.byte	0xf3
 3646 0542 68000000 		.4byte	0x68
 3647 0546 02       		.uleb128 0x2
 3648 0547 91       		.byte	0x91
 3649 0548 74       		.sleb128 -12
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 75


 3650 0549 15       		.uleb128 0x15
 3651 054a 85010000 		.4byte	.LASF49
 3652 054e 01       		.byte	0x1
 3653 054f F4       		.byte	0xf4
 3654 0550 68000000 		.4byte	0x68
 3655 0554 02       		.uleb128 0x2
 3656 0555 91       		.byte	0x91
 3657 0556 70       		.sleb128 -16
 3658 0557 15       		.uleb128 0x15
 3659 0558 74030000 		.4byte	.LASF59
 3660 055c 01       		.byte	0x1
 3661 055d F5       		.byte	0xf5
 3662 055e 68000000 		.4byte	0x68
 3663 0562 02       		.uleb128 0x2
 3664 0563 91       		.byte	0x91
 3665 0564 6C       		.sleb128 -20
 3666 0565 15       		.uleb128 0x15
 3667 0566 3A020000 		.4byte	.LASF60
 3668 056a 01       		.byte	0x1
 3669 056b F6       		.byte	0xf6
 3670 056c 68000000 		.4byte	0x68
 3671 0570 02       		.uleb128 0x2
 3672 0571 91       		.byte	0x91
 3673 0572 5C       		.sleb128 -36
 3674 0573 16       		.uleb128 0x16
 3675 0574 2E000000 		.4byte	.LBB18
 3676 0578 8A030000 		.4byte	.LBE18-.LBB18
 3677 057c 9D050000 		.4byte	0x59d
 3678 0580 15       		.uleb128 0x15
 3679 0581 EE020000 		.4byte	.LASF61
 3680 0585 01       		.byte	0x1
 3681 0586 FC       		.byte	0xfc
 3682 0587 96000000 		.4byte	0x96
 3683 058b 02       		.uleb128 0x2
 3684 058c 91       		.byte	0x91
 3685 058d 6B       		.sleb128 -21
 3686 058e 15       		.uleb128 0x15
 3687 058f 7F040000 		.4byte	.LASF62
 3688 0593 01       		.byte	0x1
 3689 0594 FD       		.byte	0xfd
 3690 0595 68000000 		.4byte	0x68
 3691 0599 02       		.uleb128 0x2
 3692 059a 91       		.byte	0x91
 3693 059b 64       		.sleb128 -28
 3694 059c 00       		.byte	0
 3695 059d 0D       		.uleb128 0xd
 3696 059e C0030000 		.4byte	.LBB19
 3697 05a2 76000000 		.4byte	.LBE19-.LBB19
 3698 05a6 19       		.uleb128 0x19
 3699 05a7 6900     		.ascii	"i\000"
 3700 05a9 01       		.byte	0x1
 3701 05aa 8E01     		.2byte	0x18e
 3702 05ac 68000000 		.4byte	0x68
 3703 05b0 02       		.uleb128 0x2
 3704 05b1 91       		.byte	0x91
 3705 05b2 60       		.sleb128 -32
 3706 05b3 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 76


 3707 05b4 00       		.byte	0
 3708 05b5 1A       		.uleb128 0x1a
 3709 05b6 DF010000 		.4byte	.LASF64
 3710 05ba 01       		.byte	0x1
 3711 05bb 9701     		.2byte	0x197
 3712 05bd 8B000000 		.4byte	0x8b
 3713 05c1 00000000 		.4byte	.LFB6
 3714 05c5 0C010000 		.4byte	.LFE6-.LFB6
 3715 05c9 01       		.uleb128 0x1
 3716 05ca 9C       		.byte	0x9c
 3717 05cb EE050000 		.4byte	0x5ee
 3718 05cf 1B       		.uleb128 0x1b
 3719 05d0 A8020000 		.4byte	.LASF48
 3720 05d4 01       		.byte	0x1
 3721 05d5 9701     		.2byte	0x197
 3722 05d7 68000000 		.4byte	0x68
 3723 05db 02       		.uleb128 0x2
 3724 05dc 91       		.byte	0x91
 3725 05dd 74       		.sleb128 -12
 3726 05de 1B       		.uleb128 0x1b
 3727 05df 85010000 		.4byte	.LASF49
 3728 05e3 01       		.byte	0x1
 3729 05e4 9701     		.2byte	0x197
 3730 05e6 68000000 		.4byte	0x68
 3731 05ea 02       		.uleb128 0x2
 3732 05eb 91       		.byte	0x91
 3733 05ec 70       		.sleb128 -16
 3734 05ed 00       		.byte	0
 3735 05ee 1C       		.uleb128 0x1c
 3736 05ef B3020000 		.4byte	.LASF65
 3737 05f3 01       		.byte	0x1
 3738 05f4 A801     		.2byte	0x1a8
 3739 05f6 00000000 		.4byte	.LFB7
 3740 05fa 24010000 		.4byte	.LFE7-.LFB7
 3741 05fe 01       		.uleb128 0x1
 3742 05ff 9C       		.byte	0x9c
 3743 0600 32060000 		.4byte	0x632
 3744 0604 1B       		.uleb128 0x1b
 3745 0605 0D040000 		.4byte	.LASF66
 3746 0609 01       		.byte	0x1
 3747 060a A801     		.2byte	0x1a8
 3748 060c 0D010000 		.4byte	0x10d
 3749 0610 02       		.uleb128 0x2
 3750 0611 91       		.byte	0x91
 3751 0612 77       		.sleb128 -9
 3752 0613 1B       		.uleb128 0x1b
 3753 0614 A8020000 		.4byte	.LASF48
 3754 0618 01       		.byte	0x1
 3755 0619 A801     		.2byte	0x1a8
 3756 061b 68000000 		.4byte	0x68
 3757 061f 02       		.uleb128 0x2
 3758 0620 91       		.byte	0x91
 3759 0621 70       		.sleb128 -16
 3760 0622 1B       		.uleb128 0x1b
 3761 0623 85010000 		.4byte	.LASF49
 3762 0627 01       		.byte	0x1
 3763 0628 A801     		.2byte	0x1a8
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 77


 3764 062a 68000000 		.4byte	0x68
 3765 062e 02       		.uleb128 0x2
 3766 062f 91       		.byte	0x91
 3767 0630 6C       		.sleb128 -20
 3768 0631 00       		.byte	0
 3769 0632 1A       		.uleb128 0x1a
 3770 0633 24030000 		.4byte	.LASF67
 3771 0637 01       		.byte	0x1
 3772 0638 DC01     		.2byte	0x1dc
 3773 063a 8B000000 		.4byte	0x8b
 3774 063e 00000000 		.4byte	.LFB8
 3775 0642 9C000000 		.4byte	.LFE8-.LFB8
 3776 0646 01       		.uleb128 0x1
 3777 0647 9C       		.byte	0x9c
 3778 0648 6B060000 		.4byte	0x66b
 3779 064c 1B       		.uleb128 0x1b
 3780 064d C4010000 		.4byte	.LASF68
 3781 0651 01       		.byte	0x1
 3782 0652 DC01     		.2byte	0x1dc
 3783 0654 68000000 		.4byte	0x68
 3784 0658 02       		.uleb128 0x2
 3785 0659 91       		.byte	0x91
 3786 065a 74       		.sleb128 -12
 3787 065b 1B       		.uleb128 0x1b
 3788 065c 70040000 		.4byte	.LASF69
 3789 0660 01       		.byte	0x1
 3790 0661 DC01     		.2byte	0x1dc
 3791 0663 68000000 		.4byte	0x68
 3792 0667 02       		.uleb128 0x2
 3793 0668 91       		.byte	0x91
 3794 0669 70       		.sleb128 -16
 3795 066a 00       		.byte	0
 3796 066b 1D       		.uleb128 0x1d
 3797 066c 53040000 		.4byte	.LASF81
 3798 0670 01       		.byte	0x1
 3799 0671 EB01     		.2byte	0x1eb
 3800 0673 8B000000 		.4byte	0x8b
 3801 0677 00000000 		.4byte	.LFB9
 3802 067b 18000000 		.4byte	.LFE9-.LFB9
 3803 067f 01       		.uleb128 0x1
 3804 0680 9C       		.byte	0x9c
 3805 0681 1E       		.uleb128 0x1e
 3806 0682 39030000 		.4byte	.LASF70
 3807 0686 01       		.byte	0x1
 3808 0687 EF01     		.2byte	0x1ef
 3809 0689 E5060000 		.4byte	0x6e5
 3810 068d 00000000 		.4byte	.LFB10
 3811 0691 80000000 		.4byte	.LFE10-.LFB10
 3812 0695 01       		.uleb128 0x1
 3813 0696 9C       		.byte	0x9c
 3814 0697 E5060000 		.4byte	0x6e5
 3815 069b 1F       		.uleb128 0x1f
 3816 069c 6D617000 		.ascii	"map\000"
 3817 06a0 01       		.byte	0x1
 3818 06a1 EF01     		.2byte	0x1ef
 3819 06a3 BA010000 		.4byte	0x1ba
 3820 06a7 02       		.uleb128 0x2
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 78


 3821 06a8 91       		.byte	0x91
 3822 06a9 5C       		.sleb128 -36
 3823 06aa 1B       		.uleb128 0x1b
 3824 06ab CC030000 		.4byte	.LASF71
 3825 06af 01       		.byte	0x1
 3826 06b0 EF01     		.2byte	0x1ef
 3827 06b2 FB060000 		.4byte	0x6fb
 3828 06b6 02       		.uleb128 0x2
 3829 06b7 91       		.byte	0x91
 3830 06b8 58       		.sleb128 -40
 3831 06b9 1F       		.uleb128 0x1f
 3832 06ba 6900     		.ascii	"i\000"
 3833 06bc 01       		.byte	0x1
 3834 06bd EF01     		.2byte	0x1ef
 3835 06bf 68000000 		.4byte	0x68
 3836 06c3 02       		.uleb128 0x2
 3837 06c4 91       		.byte	0x91
 3838 06c5 54       		.sleb128 -44
 3839 06c6 20       		.uleb128 0x20
 3840 06c7 3D040000 		.4byte	.LASF57
 3841 06cb 01       		.byte	0x1
 3842 06cc F101     		.2byte	0x1f1
 3843 06ce 35010000 		.4byte	0x135
 3844 06d2 02       		.uleb128 0x2
 3845 06d3 91       		.byte	0x91
 3846 06d4 68       		.sleb128 -24
 3847 06d5 20       		.uleb128 0x20
 3848 06d6 4C030000 		.4byte	.LASF58
 3849 06da 01       		.byte	0x1
 3850 06db F101     		.2byte	0x1f1
 3851 06dd 35010000 		.4byte	0x135
 3852 06e1 02       		.uleb128 0x2
 3853 06e2 91       		.byte	0x91
 3854 06e3 60       		.sleb128 -32
 3855 06e4 00       		.byte	0
 3856 06e5 11       		.uleb128 0x11
 3857 06e6 04       		.byte	0x4
 3858 06e7 02010000 		.4byte	0x102
 3859 06eb 0F       		.uleb128 0xf
 3860 06ec 68000000 		.4byte	0x68
 3861 06f0 FB060000 		.4byte	0x6fb
 3862 06f4 10       		.uleb128 0x10
 3863 06f5 7D000000 		.4byte	0x7d
 3864 06f9 01       		.byte	0x1
 3865 06fa 00       		.byte	0
 3866 06fb 11       		.uleb128 0x11
 3867 06fc 04       		.byte	0x4
 3868 06fd EB060000 		.4byte	0x6eb
 3869 0701 0F       		.uleb128 0xf
 3870 0702 02010000 		.4byte	0x102
 3871 0706 12070000 		.4byte	0x712
 3872 070a 18       		.uleb128 0x18
 3873 070b 7D000000 		.4byte	0x7d
 3874 070f 1C01     		.2byte	0x11c
 3875 0711 00       		.byte	0
 3876 0712 15       		.uleb128 0x15
 3877 0713 CE010000 		.4byte	.LASF72
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 79


 3878 0717 01       		.byte	0x1
 3879 0718 18       		.byte	0x18
 3880 0719 01070000 		.4byte	0x701
 3881 071d 05       		.uleb128 0x5
 3882 071e 03       		.byte	0x3
 3883 071f 00000000 		.4byte	instructionsList
 3884 0723 15       		.uleb128 0x15
 3885 0724 6B030000 		.4byte	.LASF56
 3886 0728 01       		.byte	0x1
 3887 0729 19       		.byte	0x19
 3888 072a 68000000 		.4byte	0x68
 3889 072e 05       		.uleb128 0x5
 3890 072f 03       		.byte	0x3
 3891 0730 5C0D0000 		.4byte	numSteps
 3892 0734 21       		.uleb128 0x21
 3893 0735 6D617000 		.ascii	"map\000"
 3894 0739 01       		.byte	0x1
 3895 073a 22       		.byte	0x22
 3896 073b C1040000 		.4byte	0x4c1
 3897 073f 05       		.uleb128 0x5
 3898 0740 03       		.byte	0x3
 3899 0741 00000000 		.4byte	map
 3900 0745 0F       		.uleb128 0xf
 3901 0746 68000000 		.4byte	0x68
 3902 074a 5B070000 		.4byte	0x75b
 3903 074e 10       		.uleb128 0x10
 3904 074f 7D000000 		.4byte	0x7d
 3905 0753 04       		.byte	0x4
 3906 0754 10       		.uleb128 0x10
 3907 0755 7D000000 		.4byte	0x7d
 3908 0759 01       		.byte	0x1
 3909 075a 00       		.byte	0
 3910 075b 22       		.uleb128 0x22
 3911 075c CC030000 		.4byte	.LASF71
 3912 0760 01       		.byte	0x1
 3913 0761 4B       		.byte	0x4b
 3914 0762 45070000 		.4byte	0x745
 3915 0766 05       		.uleb128 0x5
 3916 0767 03       		.byte	0x3
 3917 0768 00000000 		.4byte	food_list
 3918 076c 22       		.uleb128 0x22
 3919 076d AA030000 		.4byte	.LASF73
 3920 0771 01       		.byte	0x1
 3921 0772 16       		.byte	0x16
 3922 0773 0D010000 		.4byte	0x10d
 3923 0777 05       		.uleb128 0x5
 3924 0778 03       		.byte	0x3
 3925 0779 00000000 		.4byte	previousRobotOrientation
 3926 077d 22       		.uleb128 0x22
 3927 077e DB030000 		.4byte	.LASF74
 3928 0782 01       		.byte	0x1
 3929 0783 16       		.byte	0x16
 3930 0784 0D010000 		.4byte	0x10d
 3931 0788 05       		.uleb128 0x5
 3932 0789 03       		.byte	0x3
 3933 078a 00000000 		.4byte	currentRobotOrientation
 3934 078e 22       		.uleb128 0x22
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 80


 3935 078f A0030000 		.4byte	.LASF75
 3936 0793 01       		.byte	0x1
 3937 0794 49       		.byte	0x49
 3938 0795 EB060000 		.4byte	0x6eb
 3939 0799 05       		.uleb128 0x5
 3940 079a 03       		.byte	0x3
 3941 079b 00000000 		.4byte	start_pos
 3942 079f 0F       		.uleb128 0xf
 3943 07a0 68000000 		.4byte	0x68
 3944 07a4 B6070000 		.4byte	0x7b6
 3945 07a8 18       		.uleb128 0x18
 3946 07a9 7D000000 		.4byte	0x7d
 3947 07ad 1C01     		.2byte	0x11c
 3948 07af 10       		.uleb128 0x10
 3949 07b0 7D000000 		.4byte	0x7d
 3950 07b4 01       		.byte	0x1
 3951 07b5 00       		.byte	0
 3952 07b6 22       		.uleb128 0x22
 3953 07b7 F2010000 		.4byte	.LASF76
 3954 07bb 01       		.byte	0x1
 3955 07bc 67       		.byte	0x67
 3956 07bd 9F070000 		.4byte	0x79f
 3957 07c1 05       		.uleb128 0x5
 3958 07c2 03       		.byte	0x3
 3959 07c3 00000000 		.4byte	list_of_optimal_coordinates
 3960 07c7 0F       		.uleb128 0xf
 3961 07c8 35010000 		.4byte	0x135
 3962 07cc D7070000 		.4byte	0x7d7
 3963 07d0 10       		.uleb128 0x10
 3964 07d1 7D000000 		.4byte	0x7d
 3965 07d5 03       		.byte	0x3
 3966 07d6 00       		.byte	0
 3967 07d7 22       		.uleb128 0x22
 3968 07d8 6A040000 		.4byte	.LASF77
 3969 07dc 01       		.byte	0x1
 3970 07dd 69       		.byte	0x69
 3971 07de C7070000 		.4byte	0x7c7
 3972 07e2 05       		.uleb128 0x5
 3973 07e3 03       		.byte	0x3
 3974 07e4 00000000 		.4byte	moves
 3975 07e8 22       		.uleb128 0x22
 3976 07e9 90040000 		.4byte	.LASF23
 3977 07ed 01       		.byte	0x1
 3978 07ee EF       		.byte	0xef
 3979 07ef 68000000 		.4byte	0x68
 3980 07f3 05       		.uleb128 0x5
 3981 07f4 03       		.byte	0x3
 3982 07f5 00000000 		.4byte	ignoreR
 3983 07f9 22       		.uleb128 0x22
 3984 07fa 88040000 		.4byte	.LASF22
 3985 07fe 01       		.byte	0x1
 3986 07ff EF       		.byte	0xef
 3987 0800 68000000 		.4byte	0x68
 3988 0804 05       		.uleb128 0x5
 3989 0805 03       		.byte	0x3
 3990 0806 00000000 		.4byte	ignoreL
 3991 080a 00       		.byte	0
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 81


 3992              		.section	.debug_abbrev,"",%progbits
 3993              	.Ldebug_abbrev0:
 3994 0000 01       		.uleb128 0x1
 3995 0001 11       		.uleb128 0x11
 3996 0002 01       		.byte	0x1
 3997 0003 25       		.uleb128 0x25
 3998 0004 0E       		.uleb128 0xe
 3999 0005 13       		.uleb128 0x13
 4000 0006 0B       		.uleb128 0xb
 4001 0007 03       		.uleb128 0x3
 4002 0008 0E       		.uleb128 0xe
 4003 0009 1B       		.uleb128 0x1b
 4004 000a 0E       		.uleb128 0xe
 4005 000b 55       		.uleb128 0x55
 4006 000c 17       		.uleb128 0x17
 4007 000d 11       		.uleb128 0x11
 4008 000e 01       		.uleb128 0x1
 4009 000f 10       		.uleb128 0x10
 4010 0010 17       		.uleb128 0x17
 4011 0011 00       		.byte	0
 4012 0012 00       		.byte	0
 4013 0013 02       		.uleb128 0x2
 4014 0014 24       		.uleb128 0x24
 4015 0015 00       		.byte	0
 4016 0016 0B       		.uleb128 0xb
 4017 0017 0B       		.uleb128 0xb
 4018 0018 3E       		.uleb128 0x3e
 4019 0019 0B       		.uleb128 0xb
 4020 001a 03       		.uleb128 0x3
 4021 001b 0E       		.uleb128 0xe
 4022 001c 00       		.byte	0
 4023 001d 00       		.byte	0
 4024 001e 03       		.uleb128 0x3
 4025 001f 16       		.uleb128 0x16
 4026 0020 00       		.byte	0
 4027 0021 03       		.uleb128 0x3
 4028 0022 0E       		.uleb128 0xe
 4029 0023 3A       		.uleb128 0x3a
 4030 0024 0B       		.uleb128 0xb
 4031 0025 3B       		.uleb128 0x3b
 4032 0026 0B       		.uleb128 0xb
 4033 0027 49       		.uleb128 0x49
 4034 0028 13       		.uleb128 0x13
 4035 0029 00       		.byte	0
 4036 002a 00       		.byte	0
 4037 002b 04       		.uleb128 0x4
 4038 002c 24       		.uleb128 0x24
 4039 002d 00       		.byte	0
 4040 002e 0B       		.uleb128 0xb
 4041 002f 0B       		.uleb128 0xb
 4042 0030 3E       		.uleb128 0x3e
 4043 0031 0B       		.uleb128 0xb
 4044 0032 03       		.uleb128 0x3
 4045 0033 08       		.uleb128 0x8
 4046 0034 00       		.byte	0
 4047 0035 00       		.byte	0
 4048 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 82


 4049 0037 04       		.uleb128 0x4
 4050 0038 01       		.byte	0x1
 4051 0039 03       		.uleb128 0x3
 4052 003a 0E       		.uleb128 0xe
 4053 003b 0B       		.uleb128 0xb
 4054 003c 0B       		.uleb128 0xb
 4055 003d 49       		.uleb128 0x49
 4056 003e 13       		.uleb128 0x13
 4057 003f 3A       		.uleb128 0x3a
 4058 0040 0B       		.uleb128 0xb
 4059 0041 3B       		.uleb128 0x3b
 4060 0042 0B       		.uleb128 0xb
 4061 0043 01       		.uleb128 0x1
 4062 0044 13       		.uleb128 0x13
 4063 0045 00       		.byte	0
 4064 0046 00       		.byte	0
 4065 0047 06       		.uleb128 0x6
 4066 0048 28       		.uleb128 0x28
 4067 0049 00       		.byte	0
 4068 004a 03       		.uleb128 0x3
 4069 004b 0E       		.uleb128 0xe
 4070 004c 1C       		.uleb128 0x1c
 4071 004d 0B       		.uleb128 0xb
 4072 004e 00       		.byte	0
 4073 004f 00       		.byte	0
 4074 0050 07       		.uleb128 0x7
 4075 0051 13       		.uleb128 0x13
 4076 0052 01       		.byte	0x1
 4077 0053 03       		.uleb128 0x3
 4078 0054 0E       		.uleb128 0xe
 4079 0055 0B       		.uleb128 0xb
 4080 0056 0B       		.uleb128 0xb
 4081 0057 3A       		.uleb128 0x3a
 4082 0058 0B       		.uleb128 0xb
 4083 0059 3B       		.uleb128 0x3b
 4084 005a 0B       		.uleb128 0xb
 4085 005b 01       		.uleb128 0x1
 4086 005c 13       		.uleb128 0x13
 4087 005d 00       		.byte	0
 4088 005e 00       		.byte	0
 4089 005f 08       		.uleb128 0x8
 4090 0060 0D       		.uleb128 0xd
 4091 0061 00       		.byte	0
 4092 0062 03       		.uleb128 0x3
 4093 0063 0E       		.uleb128 0xe
 4094 0064 3A       		.uleb128 0x3a
 4095 0065 0B       		.uleb128 0xb
 4096 0066 3B       		.uleb128 0x3b
 4097 0067 0B       		.uleb128 0xb
 4098 0068 49       		.uleb128 0x49
 4099 0069 13       		.uleb128 0x13
 4100 006a 38       		.uleb128 0x38
 4101 006b 0B       		.uleb128 0xb
 4102 006c 00       		.byte	0
 4103 006d 00       		.byte	0
 4104 006e 09       		.uleb128 0x9
 4105 006f 28       		.uleb128 0x28
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 83


 4106 0070 00       		.byte	0
 4107 0071 03       		.uleb128 0x3
 4108 0072 08       		.uleb128 0x8
 4109 0073 1C       		.uleb128 0x1c
 4110 0074 0B       		.uleb128 0xb
 4111 0075 00       		.byte	0
 4112 0076 00       		.byte	0
 4113 0077 0A       		.uleb128 0xa
 4114 0078 0D       		.uleb128 0xd
 4115 0079 00       		.byte	0
 4116 007a 03       		.uleb128 0x3
 4117 007b 08       		.uleb128 0x8
 4118 007c 3A       		.uleb128 0x3a
 4119 007d 0B       		.uleb128 0xb
 4120 007e 3B       		.uleb128 0x3b
 4121 007f 0B       		.uleb128 0xb
 4122 0080 49       		.uleb128 0x49
 4123 0081 13       		.uleb128 0x13
 4124 0082 38       		.uleb128 0x38
 4125 0083 0B       		.uleb128 0xb
 4126 0084 00       		.byte	0
 4127 0085 00       		.byte	0
 4128 0086 0B       		.uleb128 0xb
 4129 0087 2E       		.uleb128 0x2e
 4130 0088 01       		.byte	0x1
 4131 0089 3F       		.uleb128 0x3f
 4132 008a 19       		.uleb128 0x19
 4133 008b 03       		.uleb128 0x3
 4134 008c 0E       		.uleb128 0xe
 4135 008d 3A       		.uleb128 0x3a
 4136 008e 0B       		.uleb128 0xb
 4137 008f 3B       		.uleb128 0x3b
 4138 0090 0B       		.uleb128 0xb
 4139 0091 27       		.uleb128 0x27
 4140 0092 19       		.uleb128 0x19
 4141 0093 11       		.uleb128 0x11
 4142 0094 01       		.uleb128 0x1
 4143 0095 12       		.uleb128 0x12
 4144 0096 06       		.uleb128 0x6
 4145 0097 40       		.uleb128 0x40
 4146 0098 18       		.uleb128 0x18
 4147 0099 9642     		.uleb128 0x2116
 4148 009b 19       		.uleb128 0x19
 4149 009c 01       		.uleb128 0x1
 4150 009d 13       		.uleb128 0x13
 4151 009e 00       		.byte	0
 4152 009f 00       		.byte	0
 4153 00a0 0C       		.uleb128 0xc
 4154 00a1 05       		.uleb128 0x5
 4155 00a2 00       		.byte	0
 4156 00a3 03       		.uleb128 0x3
 4157 00a4 08       		.uleb128 0x8
 4158 00a5 3A       		.uleb128 0x3a
 4159 00a6 0B       		.uleb128 0xb
 4160 00a7 3B       		.uleb128 0x3b
 4161 00a8 0B       		.uleb128 0xb
 4162 00a9 49       		.uleb128 0x49
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 84


 4163 00aa 13       		.uleb128 0x13
 4164 00ab 02       		.uleb128 0x2
 4165 00ac 18       		.uleb128 0x18
 4166 00ad 00       		.byte	0
 4167 00ae 00       		.byte	0
 4168 00af 0D       		.uleb128 0xd
 4169 00b0 0B       		.uleb128 0xb
 4170 00b1 01       		.byte	0x1
 4171 00b2 11       		.uleb128 0x11
 4172 00b3 01       		.uleb128 0x1
 4173 00b4 12       		.uleb128 0x12
 4174 00b5 06       		.uleb128 0x6
 4175 00b6 00       		.byte	0
 4176 00b7 00       		.byte	0
 4177 00b8 0E       		.uleb128 0xe
 4178 00b9 34       		.uleb128 0x34
 4179 00ba 00       		.byte	0
 4180 00bb 03       		.uleb128 0x3
 4181 00bc 08       		.uleb128 0x8
 4182 00bd 3A       		.uleb128 0x3a
 4183 00be 0B       		.uleb128 0xb
 4184 00bf 3B       		.uleb128 0x3b
 4185 00c0 0B       		.uleb128 0xb
 4186 00c1 49       		.uleb128 0x49
 4187 00c2 13       		.uleb128 0x13
 4188 00c3 02       		.uleb128 0x2
 4189 00c4 18       		.uleb128 0x18
 4190 00c5 00       		.byte	0
 4191 00c6 00       		.byte	0
 4192 00c7 0F       		.uleb128 0xf
 4193 00c8 01       		.uleb128 0x1
 4194 00c9 01       		.byte	0x1
 4195 00ca 49       		.uleb128 0x49
 4196 00cb 13       		.uleb128 0x13
 4197 00cc 01       		.uleb128 0x1
 4198 00cd 13       		.uleb128 0x13
 4199 00ce 00       		.byte	0
 4200 00cf 00       		.byte	0
 4201 00d0 10       		.uleb128 0x10
 4202 00d1 21       		.uleb128 0x21
 4203 00d2 00       		.byte	0
 4204 00d3 49       		.uleb128 0x49
 4205 00d4 13       		.uleb128 0x13
 4206 00d5 2F       		.uleb128 0x2f
 4207 00d6 0B       		.uleb128 0xb
 4208 00d7 00       		.byte	0
 4209 00d8 00       		.byte	0
 4210 00d9 11       		.uleb128 0x11
 4211 00da 0F       		.uleb128 0xf
 4212 00db 00       		.byte	0
 4213 00dc 0B       		.uleb128 0xb
 4214 00dd 0B       		.uleb128 0xb
 4215 00de 49       		.uleb128 0x49
 4216 00df 13       		.uleb128 0x13
 4217 00e0 00       		.byte	0
 4218 00e1 00       		.byte	0
 4219 00e2 12       		.uleb128 0x12
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 85


 4220 00e3 2E       		.uleb128 0x2e
 4221 00e4 01       		.byte	0x1
 4222 00e5 3F       		.uleb128 0x3f
 4223 00e6 19       		.uleb128 0x19
 4224 00e7 03       		.uleb128 0x3
 4225 00e8 0E       		.uleb128 0xe
 4226 00e9 3A       		.uleb128 0x3a
 4227 00ea 0B       		.uleb128 0xb
 4228 00eb 3B       		.uleb128 0x3b
 4229 00ec 0B       		.uleb128 0xb
 4230 00ed 27       		.uleb128 0x27
 4231 00ee 19       		.uleb128 0x19
 4232 00ef 11       		.uleb128 0x11
 4233 00f0 01       		.uleb128 0x1
 4234 00f1 12       		.uleb128 0x12
 4235 00f2 06       		.uleb128 0x6
 4236 00f3 40       		.uleb128 0x40
 4237 00f4 18       		.uleb128 0x18
 4238 00f5 9742     		.uleb128 0x2117
 4239 00f7 19       		.uleb128 0x19
 4240 00f8 01       		.uleb128 0x1
 4241 00f9 13       		.uleb128 0x13
 4242 00fa 00       		.byte	0
 4243 00fb 00       		.byte	0
 4244 00fc 13       		.uleb128 0x13
 4245 00fd 2E       		.uleb128 0x2e
 4246 00fe 01       		.byte	0x1
 4247 00ff 3F       		.uleb128 0x3f
 4248 0100 19       		.uleb128 0x19
 4249 0101 03       		.uleb128 0x3
 4250 0102 0E       		.uleb128 0xe
 4251 0103 3A       		.uleb128 0x3a
 4252 0104 0B       		.uleb128 0xb
 4253 0105 3B       		.uleb128 0x3b
 4254 0106 0B       		.uleb128 0xb
 4255 0107 27       		.uleb128 0x27
 4256 0108 19       		.uleb128 0x19
 4257 0109 49       		.uleb128 0x49
 4258 010a 13       		.uleb128 0x13
 4259 010b 11       		.uleb128 0x11
 4260 010c 01       		.uleb128 0x1
 4261 010d 12       		.uleb128 0x12
 4262 010e 06       		.uleb128 0x6
 4263 010f 40       		.uleb128 0x40
 4264 0110 18       		.uleb128 0x18
 4265 0111 9742     		.uleb128 0x2117
 4266 0113 19       		.uleb128 0x19
 4267 0114 01       		.uleb128 0x1
 4268 0115 13       		.uleb128 0x13
 4269 0116 00       		.byte	0
 4270 0117 00       		.byte	0
 4271 0118 14       		.uleb128 0x14
 4272 0119 05       		.uleb128 0x5
 4273 011a 00       		.byte	0
 4274 011b 03       		.uleb128 0x3
 4275 011c 0E       		.uleb128 0xe
 4276 011d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 86


 4277 011e 0B       		.uleb128 0xb
 4278 011f 3B       		.uleb128 0x3b
 4279 0120 0B       		.uleb128 0xb
 4280 0121 49       		.uleb128 0x49
 4281 0122 13       		.uleb128 0x13
 4282 0123 02       		.uleb128 0x2
 4283 0124 18       		.uleb128 0x18
 4284 0125 00       		.byte	0
 4285 0126 00       		.byte	0
 4286 0127 15       		.uleb128 0x15
 4287 0128 34       		.uleb128 0x34
 4288 0129 00       		.byte	0
 4289 012a 03       		.uleb128 0x3
 4290 012b 0E       		.uleb128 0xe
 4291 012c 3A       		.uleb128 0x3a
 4292 012d 0B       		.uleb128 0xb
 4293 012e 3B       		.uleb128 0x3b
 4294 012f 0B       		.uleb128 0xb
 4295 0130 49       		.uleb128 0x49
 4296 0131 13       		.uleb128 0x13
 4297 0132 02       		.uleb128 0x2
 4298 0133 18       		.uleb128 0x18
 4299 0134 00       		.byte	0
 4300 0135 00       		.byte	0
 4301 0136 16       		.uleb128 0x16
 4302 0137 0B       		.uleb128 0xb
 4303 0138 01       		.byte	0x1
 4304 0139 11       		.uleb128 0x11
 4305 013a 01       		.uleb128 0x1
 4306 013b 12       		.uleb128 0x12
 4307 013c 06       		.uleb128 0x6
 4308 013d 01       		.uleb128 0x1
 4309 013e 13       		.uleb128 0x13
 4310 013f 00       		.byte	0
 4311 0140 00       		.byte	0
 4312 0141 17       		.uleb128 0x17
 4313 0142 0B       		.uleb128 0xb
 4314 0143 01       		.byte	0x1
 4315 0144 55       		.uleb128 0x55
 4316 0145 17       		.uleb128 0x17
 4317 0146 01       		.uleb128 0x1
 4318 0147 13       		.uleb128 0x13
 4319 0148 00       		.byte	0
 4320 0149 00       		.byte	0
 4321 014a 18       		.uleb128 0x18
 4322 014b 21       		.uleb128 0x21
 4323 014c 00       		.byte	0
 4324 014d 49       		.uleb128 0x49
 4325 014e 13       		.uleb128 0x13
 4326 014f 2F       		.uleb128 0x2f
 4327 0150 05       		.uleb128 0x5
 4328 0151 00       		.byte	0
 4329 0152 00       		.byte	0
 4330 0153 19       		.uleb128 0x19
 4331 0154 34       		.uleb128 0x34
 4332 0155 00       		.byte	0
 4333 0156 03       		.uleb128 0x3
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 87


 4334 0157 08       		.uleb128 0x8
 4335 0158 3A       		.uleb128 0x3a
 4336 0159 0B       		.uleb128 0xb
 4337 015a 3B       		.uleb128 0x3b
 4338 015b 05       		.uleb128 0x5
 4339 015c 49       		.uleb128 0x49
 4340 015d 13       		.uleb128 0x13
 4341 015e 02       		.uleb128 0x2
 4342 015f 18       		.uleb128 0x18
 4343 0160 00       		.byte	0
 4344 0161 00       		.byte	0
 4345 0162 1A       		.uleb128 0x1a
 4346 0163 2E       		.uleb128 0x2e
 4347 0164 01       		.byte	0x1
 4348 0165 3F       		.uleb128 0x3f
 4349 0166 19       		.uleb128 0x19
 4350 0167 03       		.uleb128 0x3
 4351 0168 0E       		.uleb128 0xe
 4352 0169 3A       		.uleb128 0x3a
 4353 016a 0B       		.uleb128 0xb
 4354 016b 3B       		.uleb128 0x3b
 4355 016c 05       		.uleb128 0x5
 4356 016d 27       		.uleb128 0x27
 4357 016e 19       		.uleb128 0x19
 4358 016f 49       		.uleb128 0x49
 4359 0170 13       		.uleb128 0x13
 4360 0171 11       		.uleb128 0x11
 4361 0172 01       		.uleb128 0x1
 4362 0173 12       		.uleb128 0x12
 4363 0174 06       		.uleb128 0x6
 4364 0175 40       		.uleb128 0x40
 4365 0176 18       		.uleb128 0x18
 4366 0177 9742     		.uleb128 0x2117
 4367 0179 19       		.uleb128 0x19
 4368 017a 01       		.uleb128 0x1
 4369 017b 13       		.uleb128 0x13
 4370 017c 00       		.byte	0
 4371 017d 00       		.byte	0
 4372 017e 1B       		.uleb128 0x1b
 4373 017f 05       		.uleb128 0x5
 4374 0180 00       		.byte	0
 4375 0181 03       		.uleb128 0x3
 4376 0182 0E       		.uleb128 0xe
 4377 0183 3A       		.uleb128 0x3a
 4378 0184 0B       		.uleb128 0xb
 4379 0185 3B       		.uleb128 0x3b
 4380 0186 05       		.uleb128 0x5
 4381 0187 49       		.uleb128 0x49
 4382 0188 13       		.uleb128 0x13
 4383 0189 02       		.uleb128 0x2
 4384 018a 18       		.uleb128 0x18
 4385 018b 00       		.byte	0
 4386 018c 00       		.byte	0
 4387 018d 1C       		.uleb128 0x1c
 4388 018e 2E       		.uleb128 0x2e
 4389 018f 01       		.byte	0x1
 4390 0190 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 88


 4391 0191 19       		.uleb128 0x19
 4392 0192 03       		.uleb128 0x3
 4393 0193 0E       		.uleb128 0xe
 4394 0194 3A       		.uleb128 0x3a
 4395 0195 0B       		.uleb128 0xb
 4396 0196 3B       		.uleb128 0x3b
 4397 0197 05       		.uleb128 0x5
 4398 0198 27       		.uleb128 0x27
 4399 0199 19       		.uleb128 0x19
 4400 019a 11       		.uleb128 0x11
 4401 019b 01       		.uleb128 0x1
 4402 019c 12       		.uleb128 0x12
 4403 019d 06       		.uleb128 0x6
 4404 019e 40       		.uleb128 0x40
 4405 019f 18       		.uleb128 0x18
 4406 01a0 9742     		.uleb128 0x2117
 4407 01a2 19       		.uleb128 0x19
 4408 01a3 01       		.uleb128 0x1
 4409 01a4 13       		.uleb128 0x13
 4410 01a5 00       		.byte	0
 4411 01a6 00       		.byte	0
 4412 01a7 1D       		.uleb128 0x1d
 4413 01a8 2E       		.uleb128 0x2e
 4414 01a9 00       		.byte	0
 4415 01aa 3F       		.uleb128 0x3f
 4416 01ab 19       		.uleb128 0x19
 4417 01ac 03       		.uleb128 0x3
 4418 01ad 0E       		.uleb128 0xe
 4419 01ae 3A       		.uleb128 0x3a
 4420 01af 0B       		.uleb128 0xb
 4421 01b0 3B       		.uleb128 0x3b
 4422 01b1 05       		.uleb128 0x5
 4423 01b2 49       		.uleb128 0x49
 4424 01b3 13       		.uleb128 0x13
 4425 01b4 11       		.uleb128 0x11
 4426 01b5 01       		.uleb128 0x1
 4427 01b6 12       		.uleb128 0x12
 4428 01b7 06       		.uleb128 0x6
 4429 01b8 40       		.uleb128 0x40
 4430 01b9 18       		.uleb128 0x18
 4431 01ba 9742     		.uleb128 0x2117
 4432 01bc 19       		.uleb128 0x19
 4433 01bd 00       		.byte	0
 4434 01be 00       		.byte	0
 4435 01bf 1E       		.uleb128 0x1e
 4436 01c0 2E       		.uleb128 0x2e
 4437 01c1 01       		.byte	0x1
 4438 01c2 3F       		.uleb128 0x3f
 4439 01c3 19       		.uleb128 0x19
 4440 01c4 03       		.uleb128 0x3
 4441 01c5 0E       		.uleb128 0xe
 4442 01c6 3A       		.uleb128 0x3a
 4443 01c7 0B       		.uleb128 0xb
 4444 01c8 3B       		.uleb128 0x3b
 4445 01c9 05       		.uleb128 0x5
 4446 01ca 27       		.uleb128 0x27
 4447 01cb 19       		.uleb128 0x19
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 89


 4448 01cc 49       		.uleb128 0x49
 4449 01cd 13       		.uleb128 0x13
 4450 01ce 11       		.uleb128 0x11
 4451 01cf 01       		.uleb128 0x1
 4452 01d0 12       		.uleb128 0x12
 4453 01d1 06       		.uleb128 0x6
 4454 01d2 40       		.uleb128 0x40
 4455 01d3 18       		.uleb128 0x18
 4456 01d4 9642     		.uleb128 0x2116
 4457 01d6 19       		.uleb128 0x19
 4458 01d7 01       		.uleb128 0x1
 4459 01d8 13       		.uleb128 0x13
 4460 01d9 00       		.byte	0
 4461 01da 00       		.byte	0
 4462 01db 1F       		.uleb128 0x1f
 4463 01dc 05       		.uleb128 0x5
 4464 01dd 00       		.byte	0
 4465 01de 03       		.uleb128 0x3
 4466 01df 08       		.uleb128 0x8
 4467 01e0 3A       		.uleb128 0x3a
 4468 01e1 0B       		.uleb128 0xb
 4469 01e2 3B       		.uleb128 0x3b
 4470 01e3 05       		.uleb128 0x5
 4471 01e4 49       		.uleb128 0x49
 4472 01e5 13       		.uleb128 0x13
 4473 01e6 02       		.uleb128 0x2
 4474 01e7 18       		.uleb128 0x18
 4475 01e8 00       		.byte	0
 4476 01e9 00       		.byte	0
 4477 01ea 20       		.uleb128 0x20
 4478 01eb 34       		.uleb128 0x34
 4479 01ec 00       		.byte	0
 4480 01ed 03       		.uleb128 0x3
 4481 01ee 0E       		.uleb128 0xe
 4482 01ef 3A       		.uleb128 0x3a
 4483 01f0 0B       		.uleb128 0xb
 4484 01f1 3B       		.uleb128 0x3b
 4485 01f2 05       		.uleb128 0x5
 4486 01f3 49       		.uleb128 0x49
 4487 01f4 13       		.uleb128 0x13
 4488 01f5 02       		.uleb128 0x2
 4489 01f6 18       		.uleb128 0x18
 4490 01f7 00       		.byte	0
 4491 01f8 00       		.byte	0
 4492 01f9 21       		.uleb128 0x21
 4493 01fa 34       		.uleb128 0x34
 4494 01fb 00       		.byte	0
 4495 01fc 03       		.uleb128 0x3
 4496 01fd 08       		.uleb128 0x8
 4497 01fe 3A       		.uleb128 0x3a
 4498 01ff 0B       		.uleb128 0xb
 4499 0200 3B       		.uleb128 0x3b
 4500 0201 0B       		.uleb128 0xb
 4501 0202 49       		.uleb128 0x49
 4502 0203 13       		.uleb128 0x13
 4503 0204 3F       		.uleb128 0x3f
 4504 0205 19       		.uleb128 0x19
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 90


 4505 0206 02       		.uleb128 0x2
 4506 0207 18       		.uleb128 0x18
 4507 0208 00       		.byte	0
 4508 0209 00       		.byte	0
 4509 020a 22       		.uleb128 0x22
 4510 020b 34       		.uleb128 0x34
 4511 020c 00       		.byte	0
 4512 020d 03       		.uleb128 0x3
 4513 020e 0E       		.uleb128 0xe
 4514 020f 3A       		.uleb128 0x3a
 4515 0210 0B       		.uleb128 0xb
 4516 0211 3B       		.uleb128 0x3b
 4517 0212 0B       		.uleb128 0xb
 4518 0213 49       		.uleb128 0x49
 4519 0214 13       		.uleb128 0x13
 4520 0215 3F       		.uleb128 0x3f
 4521 0216 19       		.uleb128 0x19
 4522 0217 02       		.uleb128 0x2
 4523 0218 18       		.uleb128 0x18
 4524 0219 00       		.byte	0
 4525 021a 00       		.byte	0
 4526 021b 00       		.byte	0
 4527              		.section	.debug_aranges,"",%progbits
 4528 0000 64000000 		.4byte	0x64
 4529 0004 0200     		.2byte	0x2
 4530 0006 00000000 		.4byte	.Ldebug_info0
 4531 000a 04       		.byte	0x4
 4532 000b 00       		.byte	0
 4533 000c 0000     		.2byte	0
 4534 000e 0000     		.2byte	0
 4535 0010 00000000 		.4byte	.LFB1
 4536 0014 58000000 		.4byte	.LFE1-.LFB1
 4537 0018 00000000 		.4byte	.LFB2
 4538 001c 60000000 		.4byte	.LFE2-.LFB2
 4539 0020 00000000 		.4byte	.LFB3
 4540 0024 56000000 		.4byte	.LFE3-.LFB3
 4541 0028 00000000 		.4byte	.LFB4
 4542 002c 4C090000 		.4byte	.LFE4-.LFB4
 4543 0030 00000000 		.4byte	.LFB5
 4544 0034 68040000 		.4byte	.LFE5-.LFB5
 4545 0038 00000000 		.4byte	.LFB6
 4546 003c 0C010000 		.4byte	.LFE6-.LFB6
 4547 0040 00000000 		.4byte	.LFB7
 4548 0044 24010000 		.4byte	.LFE7-.LFB7
 4549 0048 00000000 		.4byte	.LFB8
 4550 004c 9C000000 		.4byte	.LFE8-.LFB8
 4551 0050 00000000 		.4byte	.LFB9
 4552 0054 18000000 		.4byte	.LFE9-.LFB9
 4553 0058 00000000 		.4byte	.LFB10
 4554 005c 80000000 		.4byte	.LFE10-.LFB10
 4555 0060 00000000 		.4byte	0
 4556 0064 00000000 		.4byte	0
 4557              		.section	.debug_ranges,"",%progbits
 4558              	.Ldebug_ranges0:
 4559 0000 F6010000 		.4byte	.LBB10
 4560 0004 E2050000 		.4byte	.LBE10
 4561 0008 F4050000 		.4byte	.LBB15
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 91


 4562 000c F6050000 		.4byte	.LBE15
 4563 0010 00000000 		.4byte	0
 4564 0014 00000000 		.4byte	0
 4565 0018 00000000 		.4byte	.LFB1
 4566 001c 58000000 		.4byte	.LFE1
 4567 0020 00000000 		.4byte	.LFB2
 4568 0024 60000000 		.4byte	.LFE2
 4569 0028 00000000 		.4byte	.LFB3
 4570 002c 56000000 		.4byte	.LFE3
 4571 0030 00000000 		.4byte	.LFB4
 4572 0034 4C090000 		.4byte	.LFE4
 4573 0038 00000000 		.4byte	.LFB5
 4574 003c 68040000 		.4byte	.LFE5
 4575 0040 00000000 		.4byte	.LFB6
 4576 0044 0C010000 		.4byte	.LFE6
 4577 0048 00000000 		.4byte	.LFB7
 4578 004c 24010000 		.4byte	.LFE7
 4579 0050 00000000 		.4byte	.LFB8
 4580 0054 9C000000 		.4byte	.LFE8
 4581 0058 00000000 		.4byte	.LFB9
 4582 005c 18000000 		.4byte	.LFE9
 4583 0060 00000000 		.4byte	.LFB10
 4584 0064 80000000 		.4byte	.LFE10
 4585 0068 00000000 		.4byte	0
 4586 006c 00000000 		.4byte	0
 4587              		.section	.debug_line,"",%progbits
 4588              	.Ldebug_line0:
 4589 0000 44040000 		.section	.debug_str,"MS",%progbits,1
 4589      02003201 
 4589      00000201 
 4589      FB0E0D00 
 4589      01010101 
 4590              	.LASF26:
 4591 0000 4F726965 		.ascii	"OrientationState\000"
 4591      6E746174 
 4591      696F6E53 
 4591      74617465 
 4591      00
 4592              	.LASF36:
 4593 0011 64696A6B 		.ascii	"dijkstra\000"
 4593      73747261 
 4593      00
 4594              	.LASF20:
 4595 001a 536B6970 		.ascii	"Skip\000"
 4595      00
 4596              	.LASF80:
 4597 001f 483A5C33 		.ascii	"H:\\301-Robot\\psoc student pack\\psoc_code_base\\C"
 4597      30312D52 
 4597      6F626F74 
 4597      5C70736F 
 4597      63207374 
 4598 004e 53333031 		.ascii	"S301_Class.cydsn\000"
 4598      5F436C61 
 4598      73732E63 
 4598      7964736E 
 4598      00
 4599              	.LASF33:
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 92


 4600 005f 726F7773 		.ascii	"rows\000"
 4600      00
 4601              	.LASF63:
 4602 0064 69735661 		.ascii	"isValidMove\000"
 4602      6C69644D 
 4602      6F766500 
 4603              	.LASF12:
 4604 0070 5F5F7569 		.ascii	"__uint8_t\000"
 4604      6E74385F 
 4604      7400
 4605              	.LASF21:
 4606 007a 64697265 		.ascii	"direction\000"
 4606      6374696F 
 4606      6E00
 4607              	.LASF78:
 4608 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4608      43313120 
 4608      352E342E 
 4608      31203230 
 4608      31363036 
 4609 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4609      20726576 
 4609      6973696F 
 4609      6E203233 
 4609      37373135 
 4610 00ea 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4610      66756E63 
 4610      74696F6E 
 4610      2D736563 
 4610      74696F6E 
 4611              	.LASF7:
 4612 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 4612      206C6F6E 
 4612      6720756E 
 4612      7369676E 
 4612      65642069 
 4613              	.LASF45:
 4614 0129 73746570 		.ascii	"stepNum\000"
 4614      4E756D00 
 4615              	.LASF44:
 4616 0131 64697374 		.ascii	"distances\000"
 4616      616E6365 
 4616      7300
 4617              	.LASF17:
 4618 013b 75547572 		.ascii	"uTurn\000"
 4618      6E00
 4619              	.LASF37:
 4620 0141 73746172 		.ascii	"startlocation\000"
 4620      746C6F63 
 4620      6174696F 
 4620      6E00
 4621              	.LASF31:
 4622 014f 7072696E 		.ascii	"printMap\000"
 4622      744D6170 
 4622      00
 4623              	.LASF6:
 4624 0158 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 93


 4624      206C6F6E 
 4624      6720696E 
 4624      7400
 4625              	.LASF0:
 4626 0166 7369676E 		.ascii	"signed char\000"
 4626      65642063 
 4626      68617200 
 4627              	.LASF53:
 4628 0172 6E657743 		.ascii	"newCol\000"
 4628      6F6C00
 4629              	.LASF24:
 4630 0179 496E7374 		.ascii	"Instruction\000"
 4630      72756374 
 4630      696F6E00 
 4631              	.LASF49:
 4632 0185 63757272 		.ascii	"currentCol\000"
 4632      656E7443 
 4632      6F6C00
 4633              	.LASF4:
 4634 0190 6C6F6E67 		.ascii	"long int\000"
 4634      20696E74 
 4634      00
 4635              	.LASF38:
 4636 0199 74617267 		.ascii	"targetlocation\000"
 4636      65746C6F 
 4636      63617469 
 4636      6F6E00
 4637              	.LASF18:
 4638 01a8 466F7277 		.ascii	"ForwardUntilTarget\000"
 4638      61726455 
 4638      6E74696C 
 4638      54617267 
 4638      657400
 4639              	.LASF30:
 4640 01bb 4C6F6361 		.ascii	"Location\000"
 4640      74696F6E 
 4640      00
 4641              	.LASF68:
 4642 01c4 74617267 		.ascii	"targetRow\000"
 4642      6574526F 
 4642      7700
 4643              	.LASF72:
 4644 01ce 696E7374 		.ascii	"instructionsList\000"
 4644      72756374 
 4644      696F6E73 
 4644      4C697374 
 4644      00
 4645              	.LASF64:
 4646 01df 63686563 		.ascii	"checkPathDirection\000"
 4646      6B506174 
 4646      68446972 
 4646      65637469 
 4646      6F6E00
 4647              	.LASF76:
 4648 01f2 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 4648      5F6F665F 
 4648      6F707469 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 94


 4648      6D616C5F 
 4648      636F6F72 
 4649              	.LASF8:
 4650 020e 756E7369 		.ascii	"unsigned int\000"
 4650      676E6564 
 4650      20696E74 
 4650      00
 4651              	.LASF46:
 4652 021b 73686F72 		.ascii	"shortestDist\000"
 4652      74657374 
 4652      44697374 
 4652      00
 4653              	.LASF5:
 4654 0228 6C6F6E67 		.ascii	"long unsigned int\000"
 4654      20756E73 
 4654      69676E65 
 4654      6420696E 
 4654      7400
 4655              	.LASF60:
 4656 023a 74617267 		.ascii	"targetOrientation\000"
 4656      65744F72 
 4656      69656E74 
 4656      6174696F 
 4656      6E00
 4657              	.LASF3:
 4658 024c 73686F72 		.ascii	"short unsigned int\000"
 4658      7420756E 
 4658      7369676E 
 4658      65642069 
 4658      6E7400
 4659              	.LASF19:
 4660 025f 53746F70 		.ascii	"StopAtTarget\000"
 4660      41745461 
 4660      72676574 
 4660      00
 4661              	.LASF52:
 4662 026c 6E657752 		.ascii	"newRow\000"
 4662      6F7700
 4663              	.LASF43:
 4664 0273 70715369 		.ascii	"pqSize\000"
 4664      7A6500
 4665              	.LASF55:
 4666 027a 67657450 		.ascii	"getPathInstructions\000"
 4666      61746849 
 4666      6E737472 
 4666      75637469 
 4666      6F6E7300 
 4667              	.LASF28:
 4668 028e 4C656674 		.ascii	"Left\000"
 4668      00
 4669              	.LASF10:
 4670 0293 73697A65 		.ascii	"sizetype\000"
 4670      74797065 
 4670      00
 4671              	.LASF9:
 4672 029c 6C6F6E67 		.ascii	"long double\000"
 4672      20646F75 
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 95


 4672      626C6500 
 4673              	.LASF48:
 4674 02a8 63757272 		.ascii	"currentRow\000"
 4674      656E7452 
 4674      6F7700
 4675              	.LASF65:
 4676 02b3 63686563 		.ascii	"checkIgnoreTurn\000"
 4676      6B49676E 
 4676      6F726554 
 4676      75726E00 
 4677              	.LASF15:
 4678 02c3 77616974 		.ascii	"waitForLeftTurn\000"
 4678      466F724C 
 4678      65667454 
 4678      75726E00 
 4679              	.LASF51:
 4680 02d3 63757272 		.ascii	"current\000"
 4680      656E7400 
 4681              	.LASF50:
 4682 02db 70617468 		.ascii	"pathIndex\000"
 4682      496E6465 
 4682      7800
 4683              	.LASF32:
 4684 02e5 636C6561 		.ascii	"clearMap\000"
 4684      724D6170 
 4684      00
 4685              	.LASF61:
 4686 02ee 6E657744 		.ascii	"newDirection\000"
 4686      69726563 
 4686      74696F6E 
 4686      00
 4687              	.LASF35:
 4688 02fb 5F426F6F 		.ascii	"_Bool\000"
 4688      6C00
 4689              	.LASF1:
 4690 0301 756E7369 		.ascii	"unsigned char\000"
 4690      676E6564 
 4690      20636861 
 4690      7200
 4691              	.LASF25:
 4692 030f 496E7374 		.ascii	"InstructionDirection\000"
 4692      72756374 
 4692      696F6E44 
 4692      69726563 
 4692      74696F6E 
 4693              	.LASF67:
 4694 0324 67657454 		.ascii	"getTargetOrientation\000"
 4694      61726765 
 4694      744F7269 
 4694      656E7461 
 4694      74696F6E 
 4695              	.LASF70:
 4696 0339 66696E64 		.ascii	"findPath\000"
 4696      50617468 
 4696      00
 4697              	.LASF2:
 4698 0342 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 96


 4698      7420696E 
 4698      7400
 4699              	.LASF58:
 4700 034c 74617267 		.ascii	"targetLocation\000"
 4700      65744C6F 
 4700      63617469 
 4700      6F6E00
 4701              	.LASF14:
 4702 035b 476F466F 		.ascii	"GoForward\000"
 4702      72776172 
 4702      6400
 4703              	.LASF29:
 4704 0365 52696768 		.ascii	"Right\000"
 4704      7400
 4705              	.LASF56:
 4706 036b 6E756D53 		.ascii	"numSteps\000"
 4706      74657073 
 4706      00
 4707              	.LASF59:
 4708 0374 6C697374 		.ascii	"listIndex\000"
 4708      496E6465 
 4708      7800
 4709              	.LASF47:
 4710 037e 72657453 		.ascii	"retSteps\000"
 4710      74657073 
 4710      00
 4711              	.LASF41:
 4712 0387 6C6F6361 		.ascii	"location\000"
 4712      74696F6E 
 4712      00
 4713              	.LASF39:
 4714 0390 76697369 		.ascii	"visitedMap\000"
 4714      7465644D 
 4714      617000
 4715              	.LASF11:
 4716 039b 63686172 		.ascii	"char\000"
 4716      00
 4717              	.LASF75:
 4718 03a0 73746172 		.ascii	"start_pos\000"
 4718      745F706F 
 4718      7300
 4719              	.LASF73:
 4720 03aa 70726576 		.ascii	"previousRobotOrientation\000"
 4720      696F7573 
 4720      526F626F 
 4720      744F7269 
 4720      656E7461 
 4721              	.LASF42:
 4722 03c3 64697374 		.ascii	"distance\000"
 4722      616E6365 
 4722      00
 4723              	.LASF71:
 4724 03cc 666F6F64 		.ascii	"food_list\000"
 4724      5F6C6973 
 4724      7400
 4725              	.LASF27:
 4726 03d6 446F776E 		.ascii	"Down\000"
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 97


 4726      00
 4727              	.LASF74:
 4728 03db 63757272 		.ascii	"currentRobotOrientation\000"
 4728      656E7452 
 4728      6F626F74 
 4728      4F726965 
 4728      6E746174 
 4729              	.LASF54:
 4730 03f3 6E657744 		.ascii	"newDistance\000"
 4730      69737461 
 4730      6E636500 
 4731              	.LASF79:
 4732 03ff 70617468 		.ascii	"pathfinding.c\000"
 4732      66696E64 
 4732      696E672E 
 4732      6300
 4733              	.LASF66:
 4734 040d 726F626F 		.ascii	"robotOrientation\000"
 4734      744F7269 
 4734      656E7461 
 4734      74696F6E 
 4734      00
 4735              	.LASF16:
 4736 041e 77616974 		.ascii	"waitForRightTurn\000"
 4736      466F7252 
 4736      69676874 
 4736      5475726E 
 4736      00
 4737              	.LASF40:
 4738 042f 5072696F 		.ascii	"PriorityQueue\000"
 4738      72697479 
 4738      51756575 
 4738      6500
 4739              	.LASF57:
 4740 043d 73746172 		.ascii	"startLocation\000"
 4740      744C6F63 
 4740      6174696F 
 4740      6E00
 4741              	.LASF13:
 4742 044b 75696E74 		.ascii	"uint8_t\000"
 4742      385F7400 
 4743              	.LASF81:
 4744 0453 696E7374 		.ascii	"instructionsListLength\000"
 4744      72756374 
 4744      696F6E73 
 4744      4C697374 
 4744      4C656E67 
 4745              	.LASF77:
 4746 046a 6D6F7665 		.ascii	"moves\000"
 4746      7300
 4747              	.LASF69:
 4748 0470 74617267 		.ascii	"targetCol\000"
 4748      6574436F 
 4748      6C00
 4749              	.LASF34:
 4750 047a 636F6C73 		.ascii	"cols\000"
 4750      00
ARM GAS  C:\Users\jsan502\AppData\Local\Temp\ccEaoQbb.s 			page 98


 4751              	.LASF62:
 4752 047f 6E657874 		.ascii	"nextStep\000"
 4752      53746570 
 4752      00
 4753              	.LASF22:
 4754 0488 69676E6F 		.ascii	"ignoreL\000"
 4754      72654C00 
 4755              	.LASF23:
 4756 0490 69676E6F 		.ascii	"ignoreR\000"
 4756      72655200 
 4757              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
