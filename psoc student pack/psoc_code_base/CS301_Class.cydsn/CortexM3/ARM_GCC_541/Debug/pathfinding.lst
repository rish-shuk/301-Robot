ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.comm	currentRobotOrientation,1,1
  21              		.bss
  22              		.align	2
  23              	instructionsList:
  24 0000 00000000 		.space	4
  25              		.align	2
  26              	numSteps:
  27 0004 00000000 		.space	4
  28              		.global	map
  29              		.data
  30              		.align	2
  31              		.type	map, %object
  32              		.size	map, 1140
  33              	map:
  34 0000 01000000 		.word	1
  35 0004 01000000 		.word	1
  36 0008 01000000 		.word	1
  37 000c 01000000 		.word	1
  38 0010 01000000 		.word	1
  39 0014 01000000 		.word	1
  40 0018 01000000 		.word	1
  41 001c 01000000 		.word	1
  42 0020 01000000 		.word	1
  43 0024 01000000 		.word	1
  44 0028 01000000 		.word	1
  45 002c 01000000 		.word	1
  46 0030 01000000 		.word	1
  47 0034 01000000 		.word	1
  48 0038 01000000 		.word	1
  49 003c 01000000 		.word	1
  50 0040 01000000 		.word	1
  51 0044 01000000 		.word	1
  52 0048 01000000 		.word	1
  53 004c 01000000 		.word	1
  54 0050 00000000 		.word	0
  55 0054 01000000 		.word	1
  56 0058 00000000 		.word	0
  57 005c 00000000 		.word	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 2


  58 0060 00000000 		.word	0
  59 0064 00000000 		.word	0
  60 0068 00000000 		.word	0
  61 006c 00000000 		.word	0
  62 0070 00000000 		.word	0
  63 0074 00000000 		.word	0
  64 0078 00000000 		.word	0
  65 007c 00000000 		.word	0
  66 0080 00000000 		.word	0
  67 0084 00000000 		.word	0
  68 0088 00000000 		.word	0
  69 008c 00000000 		.word	0
  70 0090 00000000 		.word	0
  71 0094 01000000 		.word	1
  72 0098 01000000 		.word	1
  73 009c 00000000 		.word	0
  74 00a0 01000000 		.word	1
  75 00a4 00000000 		.word	0
  76 00a8 01000000 		.word	1
  77 00ac 01000000 		.word	1
  78 00b0 01000000 		.word	1
  79 00b4 01000000 		.word	1
  80 00b8 01000000 		.word	1
  81 00bc 00000000 		.word	0
  82 00c0 01000000 		.word	1
  83 00c4 01000000 		.word	1
  84 00c8 01000000 		.word	1
  85 00cc 00000000 		.word	0
  86 00d0 01000000 		.word	1
  87 00d4 01000000 		.word	1
  88 00d8 01000000 		.word	1
  89 00dc 00000000 		.word	0
  90 00e0 01000000 		.word	1
  91 00e4 01000000 		.word	1
  92 00e8 00000000 		.word	0
  93 00ec 00000000 		.word	0
  94 00f0 00000000 		.word	0
  95 00f4 01000000 		.word	1
  96 00f8 00000000 		.word	0
  97 00fc 00000000 		.word	0
  98 0100 00000000 		.word	0
  99 0104 01000000 		.word	1
 100 0108 00000000 		.word	0
 101 010c 00000000 		.word	0
 102 0110 00000000 		.word	0
 103 0114 00000000 		.word	0
 104 0118 00000000 		.word	0
 105 011c 00000000 		.word	0
 106 0120 00000000 		.word	0
 107 0124 01000000 		.word	1
 108 0128 00000000 		.word	0
 109 012c 01000000 		.word	1
 110 0130 01000000 		.word	1
 111 0134 01000000 		.word	1
 112 0138 01000000 		.word	1
 113 013c 00000000 		.word	0
 114 0140 01000000 		.word	1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 3


 115 0144 00000000 		.word	0
 116 0148 01000000 		.word	1
 117 014c 00000000 		.word	0
 118 0150 01000000 		.word	1
 119 0154 01000000 		.word	1
 120 0158 01000000 		.word	1
 121 015c 00000000 		.word	0
 122 0160 01000000 		.word	1
 123 0164 00000000 		.word	0
 124 0168 01000000 		.word	1
 125 016c 01000000 		.word	1
 126 0170 01000000 		.word	1
 127 0174 00000000 		.word	0
 128 0178 01000000 		.word	1
 129 017c 01000000 		.word	1
 130 0180 00000000 		.word	0
 131 0184 00000000 		.word	0
 132 0188 00000000 		.word	0
 133 018c 01000000 		.word	1
 134 0190 00000000 		.word	0
 135 0194 01000000 		.word	1
 136 0198 00000000 		.word	0
 137 019c 00000000 		.word	0
 138 01a0 00000000 		.word	0
 139 01a4 01000000 		.word	1
 140 01a8 00000000 		.word	0
 141 01ac 01000000 		.word	1
 142 01b0 00000000 		.word	0
 143 01b4 00000000 		.word	0
 144 01b8 00000000 		.word	0
 145 01bc 00000000 		.word	0
 146 01c0 00000000 		.word	0
 147 01c4 01000000 		.word	1
 148 01c8 01000000 		.word	1
 149 01cc 00000000 		.word	0
 150 01d0 01000000 		.word	1
 151 01d4 01000000 		.word	1
 152 01d8 01000000 		.word	1
 153 01dc 00000000 		.word	0
 154 01e0 01000000 		.word	1
 155 01e4 00000000 		.word	0
 156 01e8 01000000 		.word	1
 157 01ec 00000000 		.word	0
 158 01f0 01000000 		.word	1
 159 01f4 00000000 		.word	0
 160 01f8 01000000 		.word	1
 161 01fc 00000000 		.word	0
 162 0200 01000000 		.word	1
 163 0204 01000000 		.word	1
 164 0208 01000000 		.word	1
 165 020c 00000000 		.word	0
 166 0210 01000000 		.word	1
 167 0214 01000000 		.word	1
 168 0218 00000000 		.word	0
 169 021c 01000000 		.word	1
 170 0220 00000000 		.word	0
 171 0224 01000000 		.word	1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 4


 172 0228 00000000 		.word	0
 173 022c 00000000 		.word	0
 174 0230 00000000 		.word	0
 175 0234 01000000 		.word	1
 176 0238 00000000 		.word	0
 177 023c 01000000 		.word	1
 178 0240 00000000 		.word	0
 179 0244 01000000 		.word	1
 180 0248 00000000 		.word	0
 181 024c 01000000 		.word	1
 182 0250 00000000 		.word	0
 183 0254 00000000 		.word	0
 184 0258 00000000 		.word	0
 185 025c 01000000 		.word	1
 186 0260 01000000 		.word	1
 187 0264 00000000 		.word	0
 188 0268 01000000 		.word	1
 189 026c 00000000 		.word	0
 190 0270 01000000 		.word	1
 191 0274 00000000 		.word	0
 192 0278 01000000 		.word	1
 193 027c 01000000 		.word	1
 194 0280 01000000 		.word	1
 195 0284 00000000 		.word	0
 196 0288 01000000 		.word	1
 197 028c 00000000 		.word	0
 198 0290 01000000 		.word	1
 199 0294 00000000 		.word	0
 200 0298 01000000 		.word	1
 201 029c 00000000 		.word	0
 202 02a0 01000000 		.word	1
 203 02a4 01000000 		.word	1
 204 02a8 01000000 		.word	1
 205 02ac 01000000 		.word	1
 206 02b0 00000000 		.word	0
 207 02b4 00000000 		.word	0
 208 02b8 00000000 		.word	0
 209 02bc 01000000 		.word	1
 210 02c0 00000000 		.word	0
 211 02c4 01000000 		.word	1
 212 02c8 00000000 		.word	0
 213 02cc 00000000 		.word	0
 214 02d0 00000000 		.word	0
 215 02d4 01000000 		.word	1
 216 02d8 00000000 		.word	0
 217 02dc 00000000 		.word	0
 218 02e0 00000000 		.word	0
 219 02e4 01000000 		.word	1
 220 02e8 00000000 		.word	0
 221 02ec 00000000 		.word	0
 222 02f0 00000000 		.word	0
 223 02f4 01000000 		.word	1
 224 02f8 01000000 		.word	1
 225 02fc 01000000 		.word	1
 226 0300 01000000 		.word	1
 227 0304 00000000 		.word	0
 228 0308 01000000 		.word	1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 5


 229 030c 00000000 		.word	0
 230 0310 01000000 		.word	1
 231 0314 01000000 		.word	1
 232 0318 01000000 		.word	1
 233 031c 01000000 		.word	1
 234 0320 01000000 		.word	1
 235 0324 01000000 		.word	1
 236 0328 01000000 		.word	1
 237 032c 01000000 		.word	1
 238 0330 01000000 		.word	1
 239 0334 01000000 		.word	1
 240 0338 01000000 		.word	1
 241 033c 00000000 		.word	0
 242 0340 01000000 		.word	1
 243 0344 01000000 		.word	1
 244 0348 00000000 		.word	0
 245 034c 00000000 		.word	0
 246 0350 00000000 		.word	0
 247 0354 00000000 		.word	0
 248 0358 00000000 		.word	0
 249 035c 00000000 		.word	0
 250 0360 00000000 		.word	0
 251 0364 00000000 		.word	0
 252 0368 00000000 		.word	0
 253 036c 00000000 		.word	0
 254 0370 00000000 		.word	0
 255 0374 00000000 		.word	0
 256 0378 00000000 		.word	0
 257 037c 00000000 		.word	0
 258 0380 00000000 		.word	0
 259 0384 00000000 		.word	0
 260 0388 00000000 		.word	0
 261 038c 01000000 		.word	1
 262 0390 01000000 		.word	1
 263 0394 00000000 		.word	0
 264 0398 01000000 		.word	1
 265 039c 01000000 		.word	1
 266 03a0 01000000 		.word	1
 267 03a4 01000000 		.word	1
 268 03a8 01000000 		.word	1
 269 03ac 01000000 		.word	1
 270 03b0 01000000 		.word	1
 271 03b4 01000000 		.word	1
 272 03b8 01000000 		.word	1
 273 03bc 01000000 		.word	1
 274 03c0 01000000 		.word	1
 275 03c4 00000000 		.word	0
 276 03c8 01000000 		.word	1
 277 03cc 01000000 		.word	1
 278 03d0 01000000 		.word	1
 279 03d4 01000000 		.word	1
 280 03d8 01000000 		.word	1
 281 03dc 01000000 		.word	1
 282 03e0 00000000 		.word	0
 283 03e4 00000000 		.word	0
 284 03e8 00000000 		.word	0
 285 03ec 00000000 		.word	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 6


 286 03f0 00000000 		.word	0
 287 03f4 00000000 		.word	0
 288 03f8 00000000 		.word	0
 289 03fc 01000000 		.word	1
 290 0400 00000000 		.word	0
 291 0404 00000000 		.word	0
 292 0408 00000000 		.word	0
 293 040c 00000000 		.word	0
 294 0410 00000000 		.word	0
 295 0414 00000000 		.word	0
 296 0418 00000000 		.word	0
 297 041c 00000000 		.word	0
 298 0420 00000000 		.word	0
 299 0424 01000000 		.word	1
 300 0428 01000000 		.word	1
 301 042c 01000000 		.word	1
 302 0430 01000000 		.word	1
 303 0434 01000000 		.word	1
 304 0438 01000000 		.word	1
 305 043c 01000000 		.word	1
 306 0440 01000000 		.word	1
 307 0444 01000000 		.word	1
 308 0448 01000000 		.word	1
 309 044c 01000000 		.word	1
 310 0450 01000000 		.word	1
 311 0454 01000000 		.word	1
 312 0458 01000000 		.word	1
 313 045c 01000000 		.word	1
 314 0460 01000000 		.word	1
 315 0464 01000000 		.word	1
 316 0468 01000000 		.word	1
 317 046c 01000000 		.word	1
 318 0470 01000000 		.word	1
 319              		.global	start_pos
 320              		.align	2
 321              		.type	start_pos, %object
 322              		.size	start_pos, 8
 323              	start_pos:
 324 0474 01000000 		.word	1
 325 0478 01000000 		.word	1
 326              		.global	food_list
 327              		.align	2
 328              		.type	food_list, %object
 329              		.size	food_list, 40
 330              	food_list:
 331 047c 01000000 		.word	1
 332 0480 09000000 		.word	9
 333 0484 05000000 		.word	5
 334 0488 05000000 		.word	5
 335 048c 07000000 		.word	7
 336 0490 01000000 		.word	1
 337 0494 0D000000 		.word	13
 338 0498 05000000 		.word	5
 339 049c 09000000 		.word	9
 340 04a0 09000000 		.word	9
 341              		.section	.rodata
 342              		.align	2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 7


 343              	.LC0:
 344 0000 256400   		.ascii	"%d\000"
 345              		.section	.text.printMap,"ax",%progbits
 346              		.align	2
 347              		.global	printMap
 348              		.thumb
 349              		.thumb_func
 350              		.type	printMap, %function
 351              	printMap:
 352              	.LFB1:
 353              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction * instructionsList;
  25:pathfinding.c **** static int numSteps = 0;
  26:pathfinding.c **** 
  27:pathfinding.c **** uint8_t instructionsListLength();
  28:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  29:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  30:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  31:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 8


  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  50:pathfinding.c **** };
  51:pathfinding.c **** 
  52:pathfinding.c **** /*
  53:pathfinding.c **** int map[15][19] = {
  54:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  55:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  56:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  57:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  58:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  60:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  62:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  64:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  65:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  66:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  68:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:pathfinding.c **** };
  70:pathfinding.c **** */
  71:pathfinding.c **** 
  72:pathfinding.c **** 
  73:pathfinding.c **** int start_pos[2] = {1,1};
  74:pathfinding.c **** 
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {1,9},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {7,1},
  79:pathfinding.c **** {13,5},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** 
  83:pathfinding.c **** // MAP INITIALISATION CODE
  84:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 354              		.loc 1 84 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 16
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 84B0     		sub	sp, sp, #16
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 367              	.LBB2:
  85:pathfinding.c ****     // Print the map in a grid format
  86:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 368              		.loc 1 86 0
 369 0008 0023     		movs	r3, #0
 370 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 9


 371 000c 1BE0     		b	.L2
 372              	.L5:
 373              	.LBB3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 374              		.loc 1 87 0
 375 000e 0023     		movs	r3, #0
 376 0010 BB60     		str	r3, [r7, #8]
 377 0012 0FE0     		b	.L3
 378              	.L4:
  88:pathfinding.c ****             printf("%d", map[i][j]);
 379              		.loc 1 88 0 discriminator 3
 380 0014 FB68     		ldr	r3, [r7, #12]
 381 0016 4C22     		movs	r2, #76
 382 0018 02FB03F3 		mul	r3, r2, r3
 383 001c 7A68     		ldr	r2, [r7, #4]
 384 001e 1344     		add	r3, r3, r2
 385 0020 BA68     		ldr	r2, [r7, #8]
 386 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 387 0026 1946     		mov	r1, r3
 388 0028 0A48     		ldr	r0, .L6
 389 002a FFF7FEFF 		bl	printf
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 390              		.loc 1 87 0 discriminator 3
 391 002e BB68     		ldr	r3, [r7, #8]
 392 0030 0133     		adds	r3, r3, #1
 393 0032 BB60     		str	r3, [r7, #8]
 394              	.L3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 395              		.loc 1 87 0 is_stmt 0 discriminator 1
 396 0034 BB68     		ldr	r3, [r7, #8]
 397 0036 122B     		cmp	r3, #18
 398 0038 ECDD     		ble	.L4
 399              	.LBE3:
  89:pathfinding.c ****         }
  90:pathfinding.c ****         printf("\n");
 400              		.loc 1 90 0 is_stmt 1 discriminator 2
 401 003a 0A20     		movs	r0, #10
 402 003c FFF7FEFF 		bl	putchar
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 403              		.loc 1 86 0 discriminator 2
 404 0040 FB68     		ldr	r3, [r7, #12]
 405 0042 0133     		adds	r3, r3, #1
 406 0044 FB60     		str	r3, [r7, #12]
 407              	.L2:
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 408              		.loc 1 86 0 is_stmt 0 discriminator 1
 409 0046 FB68     		ldr	r3, [r7, #12]
 410 0048 0E2B     		cmp	r3, #14
 411 004a E0DD     		ble	.L5
 412              	.LBE2:
  91:pathfinding.c ****     }
  92:pathfinding.c **** }
 413              		.loc 1 92 0 is_stmt 1
 414 004c 00BF     		nop
 415 004e 1037     		adds	r7, r7, #16
 416              		.cfi_def_cfa_offset 8
 417 0050 BD46     		mov	sp, r7
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 10


 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0052 80BD     		pop	{r7, pc}
 421              	.L7:
 422              		.align	2
 423              	.L6:
 424 0054 00000000 		.word	.LC0
 425              		.cfi_endproc
 426              	.LFE1:
 427              		.size	printMap, .-printMap
 428              		.section	.text.clearMap,"ax",%progbits
 429              		.align	2
 430              		.global	clearMap
 431              		.thumb
 432              		.thumb_func
 433              		.type	clearMap, %function
 434              	clearMap:
 435              	.LFB2:
  93:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 436              		.loc 1 93 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 16
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 85B0     		sub	sp, sp, #20
 445              		.cfi_def_cfa_offset 24
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 449              	.LBB4:
  94:pathfinding.c ****     // Print the map in a grid format
  95:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 450              		.loc 1 95 0
 451 0008 0023     		movs	r3, #0
 452 000a FB60     		str	r3, [r7, #12]
 453 000c 20E0     		b	.L9
 454              	.L13:
 455              	.LBB5:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 456              		.loc 1 96 0
 457 000e 0023     		movs	r3, #0
 458 0010 BB60     		str	r3, [r7, #8]
 459 0012 17E0     		b	.L10
 460              	.L12:
  97:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
 461              		.loc 1 97 0
 462 0014 FB68     		ldr	r3, [r7, #12]
 463 0016 4C22     		movs	r2, #76
 464 0018 02FB03F3 		mul	r3, r2, r3
 465 001c 7A68     		ldr	r2, [r7, #4]
 466 001e 1344     		add	r3, r3, r2
 467 0020 BA68     		ldr	r2, [r7, #8]
 468 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 469 0026 012B     		cmp	r3, #1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 11


 470 0028 09D0     		beq	.L11
 471              		.loc 1 97 0 is_stmt 0 discriminator 1
 472 002a FB68     		ldr	r3, [r7, #12]
 473 002c 4C22     		movs	r2, #76
 474 002e 02FB03F3 		mul	r3, r2, r3
 475 0032 7A68     		ldr	r2, [r7, #4]
 476 0034 1344     		add	r3, r3, r2
 477 0036 BA68     		ldr	r2, [r7, #8]
 478 0038 0021     		movs	r1, #0
 479 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 480              	.L11:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 481              		.loc 1 96 0 is_stmt 1 discriminator 2
 482 003e BB68     		ldr	r3, [r7, #8]
 483 0040 0133     		adds	r3, r3, #1
 484 0042 BB60     		str	r3, [r7, #8]
 485              	.L10:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 486              		.loc 1 96 0 is_stmt 0 discriminator 1
 487 0044 BB68     		ldr	r3, [r7, #8]
 488 0046 122B     		cmp	r3, #18
 489 0048 E4DD     		ble	.L12
 490              	.LBE5:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 491              		.loc 1 95 0 is_stmt 1 discriminator 2
 492 004a FB68     		ldr	r3, [r7, #12]
 493 004c 0133     		adds	r3, r3, #1
 494 004e FB60     		str	r3, [r7, #12]
 495              	.L9:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 496              		.loc 1 95 0 is_stmt 0 discriminator 1
 497 0050 FB68     		ldr	r3, [r7, #12]
 498 0052 0E2B     		cmp	r3, #14
 499 0054 DBDD     		ble	.L13
 500              	.LBE4:
  98:pathfinding.c ****         }
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 501              		.loc 1 100 0 is_stmt 1
 502 0056 00BF     		nop
 503 0058 1437     		adds	r7, r7, #20
 504              		.cfi_def_cfa_offset 4
 505 005a BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 005c 80BC     		pop	{r7}
 509              		.cfi_restore 7
 510              		.cfi_def_cfa_offset 0
 511 005e 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE2:
 514              		.size	clearMap, .-clearMap
 515              		.comm	list_of_optimal_coordinates,2280,4
 516              		.global	moves
 517              		.data
 518              		.align	2
 519              		.type	moves, %object
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 12


 520              		.size	moves, 32
 521              	moves:
 522 04a4 00000000 		.word	0
 523 04a8 01000000 		.word	1
 524 04ac 00000000 		.word	0
 525 04b0 FFFFFFFF 		.word	-1
 526 04b4 01000000 		.word	1
 527 04b8 00000000 		.word	0
 528 04bc FFFFFFFF 		.word	-1
 529 04c0 00000000 		.word	0
 530              		.section	.text.isValidMove,"ax",%progbits
 531              		.align	2
 532              		.global	isValidMove
 533              		.thumb
 534              		.thumb_func
 535              		.type	isValidMove, %function
 536              	isValidMove:
 537              	.LFB3:
 101:pathfinding.c **** 
 102:pathfinding.c **** 
 103:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 104:pathfinding.c **** 
 105:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 106:pathfinding.c **** 
 107:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 538              		.loc 1 107 0
 539              		.cfi_startproc
 540              		@ args = 4, pretend = 0, frame = 16
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 0002 85B0     		sub	sp, sp, #20
 547              		.cfi_def_cfa_offset 24
 548 0004 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 550 0006 F860     		str	r0, [r7, #12]
 551 0008 B960     		str	r1, [r7, #8]
 552 000a 7A60     		str	r2, [r7, #4]
 553 000c 3B60     		str	r3, [r7]
 108:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 554              		.loc 1 108 0
 555 000e FB68     		ldr	r3, [r7, #12]
 556 0010 002B     		cmp	r3, #0
 557 0012 17DB     		blt	.L15
 558              		.loc 1 108 0 is_stmt 0 discriminator 1
 559 0014 FA68     		ldr	r2, [r7, #12]
 560 0016 7B68     		ldr	r3, [r7, #4]
 561 0018 9A42     		cmp	r2, r3
 562 001a 13DA     		bge	.L15
 563              		.loc 1 108 0 discriminator 3
 564 001c BB68     		ldr	r3, [r7, #8]
 565 001e 002B     		cmp	r3, #0
 566 0020 10DB     		blt	.L15
 567              		.loc 1 108 0 discriminator 5
 568 0022 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 13


 569 0024 3B68     		ldr	r3, [r7]
 570 0026 9A42     		cmp	r2, r3
 571 0028 0CDA     		bge	.L15
 572              		.loc 1 108 0 discriminator 7
 573 002a FB68     		ldr	r3, [r7, #12]
 574 002c 4C22     		movs	r2, #76
 575 002e 02FB03F3 		mul	r3, r2, r3
 576 0032 BA69     		ldr	r2, [r7, #24]
 577 0034 1344     		add	r3, r3, r2
 578 0036 BA68     		ldr	r2, [r7, #8]
 579 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 580 003c 002B     		cmp	r3, #0
 581 003e 01D1     		bne	.L15
 582              		.loc 1 108 0 discriminator 9
 583 0040 0123     		movs	r3, #1
 584 0042 00E0     		b	.L16
 585              	.L15:
 586              		.loc 1 108 0 discriminator 10
 587 0044 0023     		movs	r3, #0
 588              	.L16:
 589              		.loc 1 108 0 discriminator 12
 590 0046 03F00103 		and	r3, r3, #1
 591 004a DBB2     		uxtb	r3, r3
 109:pathfinding.c **** }
 592              		.loc 1 109 0 is_stmt 1 discriminator 12
 593 004c 1846     		mov	r0, r3
 594 004e 1437     		adds	r7, r7, #20
 595              		.cfi_def_cfa_offset 4
 596 0050 BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0052 80BC     		pop	{r7}
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0054 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE3:
 605              		.size	isValidMove, .-isValidMove
 606 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 607              		.align	2
 608              		.global	dijkstra
 609              		.thumb
 610              		.thumb_func
 611              		.type	dijkstra, %function
 612              	dijkstra:
 613              	.LFB4:
 110:pathfinding.c **** 
 111:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
 614              		.loc 1 111 0
 615              		.cfi_startproc
 616              		@ args = 12, pretend = 8, frame = 5816
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 82B0     		sub	sp, sp, #8
 619              		.cfi_def_cfa_offset 8
 620 0002 90B5     		push	{r4, r7, lr}
 621              		.cfi_def_cfa_offset 20
 622              		.cfi_offset 4, -20
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 14


 623              		.cfi_offset 7, -16
 624              		.cfi_offset 14, -12
 625 0004 ADF5B65D 		sub	sp, sp, #5824
 626              		.cfi_def_cfa_offset 5844
 627 0008 81B0     		sub	sp, sp, #4
 628              		.cfi_def_cfa_offset 5848
 629 000a 02AF     		add	r7, sp, #8
 630              		.cfi_def_cfa 7, 5840
 631 000c 07F11804 		add	r4, r7, #24
 632 0010 0C3C     		subs	r4, r4, #12
 633 0012 2060     		str	r0, [r4]
 634 0014 07F11800 		add	r0, r7, #24
 635 0018 1438     		subs	r0, r0, #20
 636 001a 80E80600 		stmia	r0, {r1, r2}
 637 001e 07F5B652 		add	r2, r7, #5824
 638 0022 02F10C02 		add	r2, r2, #12
 639 0026 1360     		str	r3, [r2]
 640              	.LBB6:
 112:pathfinding.c **** 
 113:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 114:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 641              		.loc 1 114 0
 642 0028 0023     		movs	r3, #0
 643 002a 07F5B552 		add	r2, r7, #5792
 644 002e 02F11402 		add	r2, r2, #20
 645 0032 1360     		str	r3, [r2]
 646 0034 3AE0     		b	.L19
 647              	.L22:
 648              	.LBB7:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 649              		.loc 1 115 0
 650 0036 0023     		movs	r3, #0
 651 0038 07F5B552 		add	r2, r7, #5792
 652 003c 02F11002 		add	r2, r2, #16
 653 0040 1360     		str	r3, [r2]
 654 0042 21E0     		b	.L20
 655              	.L21:
 116:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 656              		.loc 1 116 0 discriminator 3
 657 0044 07F58F51 		add	r1, r7, #4576
 658 0048 01F10C01 		add	r1, r1, #12
 659 004c 07F5B553 		add	r3, r7, #5792
 660 0050 03F11403 		add	r3, r3, #20
 661 0054 1A68     		ldr	r2, [r3]
 662 0056 1346     		mov	r3, r2
 663 0058 DB00     		lsls	r3, r3, #3
 664 005a 1344     		add	r3, r3, r2
 665 005c 5B00     		lsls	r3, r3, #1
 666 005e 1344     		add	r3, r3, r2
 667 0060 07F5B552 		add	r2, r7, #5792
 668 0064 02F11002 		add	r2, r2, #16
 669 0068 1268     		ldr	r2, [r2]
 670 006a 1344     		add	r3, r3, r2
 671 006c 0122     		movs	r2, #1
 672 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 673              		.loc 1 115 0 discriminator 3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 15


 674 0072 07F5B553 		add	r3, r7, #5792
 675 0076 03F11003 		add	r3, r3, #16
 676 007a 1B68     		ldr	r3, [r3]
 677 007c 0133     		adds	r3, r3, #1
 678 007e 07F5B552 		add	r2, r7, #5792
 679 0082 02F11002 		add	r2, r2, #16
 680 0086 1360     		str	r3, [r2]
 681              	.L20:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 682              		.loc 1 115 0 is_stmt 0 discriminator 1
 683 0088 07F5B553 		add	r3, r7, #5792
 684 008c 03F11003 		add	r3, r3, #16
 685 0090 1B68     		ldr	r3, [r3]
 686 0092 122B     		cmp	r3, #18
 687 0094 D6DD     		ble	.L21
 688              	.LBE7:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 689              		.loc 1 114 0 is_stmt 1 discriminator 2
 690 0096 07F5B553 		add	r3, r7, #5792
 691 009a 03F11403 		add	r3, r3, #20
 692 009e 1B68     		ldr	r3, [r3]
 693 00a0 0133     		adds	r3, r3, #1
 694 00a2 07F5B552 		add	r2, r7, #5792
 695 00a6 02F11402 		add	r2, r2, #20
 696 00aa 1360     		str	r3, [r2]
 697              	.L19:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 698              		.loc 1 114 0 is_stmt 0 discriminator 1
 699 00ac 07F5B553 		add	r3, r7, #5792
 700 00b0 03F11403 		add	r3, r3, #20
 701 00b4 1B68     		ldr	r3, [r3]
 702 00b6 0E2B     		cmp	r3, #14
 703 00b8 BDDD     		ble	.L22
 704              	.LBE6:
 117:pathfinding.c ****         }
 118:pathfinding.c ****     }
 119:pathfinding.c **** 
 120:pathfinding.c ****     struct PriorityQueue {
 121:pathfinding.c ****         struct Location location;
 122:pathfinding.c ****         int distance;
 123:pathfinding.c ****     };
 124:pathfinding.c **** 
 125:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 126:pathfinding.c ****     int pqSize = 0;
 705              		.loc 1 126 0 is_stmt 1
 706 00ba 0023     		movs	r3, #0
 707 00bc 07F5B552 		add	r2, r7, #5792
 708 00c0 02F10C02 		add	r2, r2, #12
 709 00c4 1360     		str	r3, [r2]
 710              	.LBB8:
 127:pathfinding.c **** 
 128:pathfinding.c ****     // Initialize distances and paths arrays
 129:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 130:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 131:pathfinding.c **** 
 132:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 711              		.loc 1 132 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 16


 712 00c6 0023     		movs	r3, #0
 713 00c8 07F5B552 		add	r2, r7, #5792
 714 00cc 02F10802 		add	r2, r2, #8
 715 00d0 1360     		str	r3, [r2]
 716 00d2 3AE0     		b	.L23
 717              	.L26:
 718              	.LBB9:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 719              		.loc 1 133 0
 720 00d4 0023     		movs	r3, #0
 721 00d6 07F5B552 		add	r2, r7, #5792
 722 00da 02F10402 		add	r2, r2, #4
 723 00de 1360     		str	r3, [r2]
 724 00e0 21E0     		b	.L24
 725              	.L25:
 134:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 726              		.loc 1 134 0 discriminator 3
 727 00e2 07F13802 		add	r2, r7, #56
 728 00e6 1C3A     		subs	r2, r2, #28
 729 00e8 07F5B553 		add	r3, r7, #5792
 730 00ec 03F10803 		add	r3, r3, #8
 731 00f0 1968     		ldr	r1, [r3]
 732 00f2 0B46     		mov	r3, r1
 733 00f4 DB00     		lsls	r3, r3, #3
 734 00f6 0B44     		add	r3, r3, r1
 735 00f8 5B00     		lsls	r3, r3, #1
 736 00fa 0B44     		add	r3, r3, r1
 737 00fc 07F5B551 		add	r1, r7, #5792
 738 0100 01F10401 		add	r1, r1, #4
 739 0104 0968     		ldr	r1, [r1]
 740 0106 0B44     		add	r3, r3, r1
 741 0108 4FF47A71 		mov	r1, #1000
 742 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 743              		.loc 1 133 0 discriminator 3
 744 0110 07F5B553 		add	r3, r7, #5792
 745 0114 03F10403 		add	r3, r3, #4
 746 0118 1B68     		ldr	r3, [r3]
 747 011a 0133     		adds	r3, r3, #1
 748 011c 07F5B552 		add	r2, r7, #5792
 749 0120 02F10402 		add	r2, r2, #4
 750 0124 1360     		str	r3, [r2]
 751              	.L24:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 752              		.loc 1 133 0 is_stmt 0 discriminator 1
 753 0126 07F5B553 		add	r3, r7, #5792
 754 012a 03F10403 		add	r3, r3, #4
 755 012e 1B68     		ldr	r3, [r3]
 756 0130 122B     		cmp	r3, #18
 757 0132 D6DD     		ble	.L25
 758              	.LBE9:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 759              		.loc 1 132 0 is_stmt 1 discriminator 2
 760 0134 07F5B553 		add	r3, r7, #5792
 761 0138 03F10803 		add	r3, r3, #8
 762 013c 1B68     		ldr	r3, [r3]
 763 013e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 17


 764 0140 07F5B552 		add	r2, r7, #5792
 765 0144 02F10802 		add	r2, r2, #8
 766 0148 1360     		str	r3, [r2]
 767              	.L23:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 768              		.loc 1 132 0 is_stmt 0 discriminator 1
 769 014a 07F5B553 		add	r3, r7, #5792
 770 014e 03F10803 		add	r3, r3, #8
 771 0152 1B68     		ldr	r3, [r3]
 772 0154 0E2B     		cmp	r3, #14
 773 0156 BDDD     		ble	.L26
 774              	.LBE8:
 135:pathfinding.c ****         }
 136:pathfinding.c ****     }
 137:pathfinding.c **** 
 138:pathfinding.c ****     int stepNum = 0;
 775              		.loc 1 138 0 is_stmt 1
 776 0158 0023     		movs	r3, #0
 777 015a 07F5B552 		add	r2, r7, #5792
 778 015e 1360     		str	r3, [r2]
 139:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 779              		.loc 1 139 0
 780 0160 07F11803 		add	r3, r7, #24
 781 0164 143B     		subs	r3, r3, #20
 782 0166 1968     		ldr	r1, [r3]
 783 0168 07F11803 		add	r3, r7, #24
 784 016c 143B     		subs	r3, r3, #20
 785 016e 5868     		ldr	r0, [r3, #4]
 786 0170 07F13802 		add	r2, r7, #56
 787 0174 1C3A     		subs	r2, r2, #28
 788 0176 0B46     		mov	r3, r1
 789 0178 DB00     		lsls	r3, r3, #3
 790 017a 0B44     		add	r3, r3, r1
 791 017c 5B00     		lsls	r3, r3, #1
 792 017e 0B44     		add	r3, r3, r1
 793 0180 0344     		add	r3, r3, r0
 794 0182 0021     		movs	r1, #0
 795 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 140:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 141:pathfinding.c ****     stepNum++; // increment stepNum
 796              		.loc 1 141 0
 797 0188 07F5B553 		add	r3, r7, #5792
 798 018c 1B68     		ldr	r3, [r3]
 799 018e 0133     		adds	r3, r3, #1
 800 0190 07F5B552 		add	r2, r7, #5792
 801 0194 1360     		str	r3, [r2]
 142:pathfinding.c **** 
 143:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
 802              		.loc 1 143 0
 803 0196 07F59362 		add	r2, r7, #1176
 804 019a 083A     		subs	r2, r2, #8
 805 019c 07F5B553 		add	r3, r7, #5792
 806 01a0 03F10C03 		add	r3, r3, #12
 807 01a4 1968     		ldr	r1, [r3]
 808 01a6 0B46     		mov	r3, r1
 809 01a8 5B00     		lsls	r3, r3, #1
 810 01aa 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 18


 811 01ac 9B00     		lsls	r3, r3, #2
 812 01ae 1A44     		add	r2, r2, r3
 813 01b0 07F11803 		add	r3, r7, #24
 814 01b4 143B     		subs	r3, r3, #20
 815 01b6 93E80300 		ldmia	r3, {r0, r1}
 816 01ba 82E80300 		stmia	r2, {r0, r1}
 144:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 817              		.loc 1 144 0
 818 01be 07F59362 		add	r2, r7, #1176
 819 01c2 083A     		subs	r2, r2, #8
 820 01c4 07F5B553 		add	r3, r7, #5792
 821 01c8 03F10C03 		add	r3, r3, #12
 822 01cc 1968     		ldr	r1, [r3]
 823 01ce 0B46     		mov	r3, r1
 824 01d0 5B00     		lsls	r3, r3, #1
 825 01d2 0B44     		add	r3, r3, r1
 826 01d4 9B00     		lsls	r3, r3, #2
 827 01d6 1344     		add	r3, r3, r2
 828 01d8 0833     		adds	r3, r3, #8
 829 01da 0022     		movs	r2, #0
 830 01dc 1A60     		str	r2, [r3]
 145:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 831              		.loc 1 145 0
 832 01de 07F5B553 		add	r3, r7, #5792
 833 01e2 03F10C03 		add	r3, r3, #12
 834 01e6 1B68     		ldr	r3, [r3]
 835 01e8 0133     		adds	r3, r3, #1
 836 01ea 07F5B552 		add	r2, r7, #5792
 837 01ee 02F10C02 		add	r2, r2, #12
 838 01f2 1360     		str	r3, [r2]
 146:pathfinding.c **** 
 147:pathfinding.c ****     while (pqSize > 0) {
 839              		.loc 1 147 0
 840 01f4 F5E1     		b	.L27
 841              	.L37:
 842              	.LBB10:
 148:pathfinding.c ****         int idx = 0;
 843              		.loc 1 148 0
 844 01f6 0023     		movs	r3, #0
 845 01f8 07F5B452 		add	r2, r7, #5760
 846 01fc 02F11C02 		add	r2, r2, #28
 847 0200 1360     		str	r3, [r2]
 848              	.LBB11:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 849              		.loc 1 149 0
 850 0202 0123     		movs	r3, #1
 851 0204 07F5B452 		add	r2, r7, #5760
 852 0208 02F11802 		add	r2, r2, #24
 853 020c 1360     		str	r3, [r2]
 854 020e 34E0     		b	.L28
 855              	.L30:
 150:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 856              		.loc 1 150 0
 857 0210 07F59362 		add	r2, r7, #1176
 858 0214 083A     		subs	r2, r2, #8
 859 0216 07F5B453 		add	r3, r7, #5760
 860 021a 03F11803 		add	r3, r3, #24
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 19


 861 021e 1968     		ldr	r1, [r3]
 862 0220 0B46     		mov	r3, r1
 863 0222 5B00     		lsls	r3, r3, #1
 864 0224 0B44     		add	r3, r3, r1
 865 0226 9B00     		lsls	r3, r3, #2
 866 0228 1344     		add	r3, r3, r2
 867 022a 0833     		adds	r3, r3, #8
 868 022c 1868     		ldr	r0, [r3]
 869 022e 07F59362 		add	r2, r7, #1176
 870 0232 083A     		subs	r2, r2, #8
 871 0234 07F5B453 		add	r3, r7, #5760
 872 0238 03F11C03 		add	r3, r3, #28
 873 023c 1968     		ldr	r1, [r3]
 874 023e 0B46     		mov	r3, r1
 875 0240 5B00     		lsls	r3, r3, #1
 876 0242 0B44     		add	r3, r3, r1
 877 0244 9B00     		lsls	r3, r3, #2
 878 0246 1344     		add	r3, r3, r2
 879 0248 0833     		adds	r3, r3, #8
 880 024a 1B68     		ldr	r3, [r3]
 881 024c 9842     		cmp	r0, r3
 882 024e 09DA     		bge	.L29
 151:pathfinding.c ****                 idx = i; // find the shortest distance location 
 883              		.loc 1 151 0
 884 0250 07F5B453 		add	r3, r7, #5760
 885 0254 03F11803 		add	r3, r3, #24
 886 0258 1B68     		ldr	r3, [r3]
 887 025a 07F5B452 		add	r2, r7, #5760
 888 025e 02F11C02 		add	r2, r2, #28
 889 0262 1360     		str	r3, [r2]
 890              	.L29:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 891              		.loc 1 149 0 discriminator 2
 892 0264 07F5B453 		add	r3, r7, #5760
 893 0268 03F11803 		add	r3, r3, #24
 894 026c 1B68     		ldr	r3, [r3]
 895 026e 0133     		adds	r3, r3, #1
 896 0270 07F5B452 		add	r2, r7, #5760
 897 0274 02F11802 		add	r2, r2, #24
 898 0278 1360     		str	r3, [r2]
 899              	.L28:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 900              		.loc 1 149 0 is_stmt 0 discriminator 1
 901 027a 07F5B453 		add	r3, r7, #5760
 902 027e 03F11803 		add	r3, r3, #24
 903 0282 1A68     		ldr	r2, [r3]
 904 0284 07F5B553 		add	r3, r7, #5792
 905 0288 03F10C03 		add	r3, r3, #12
 906 028c 1B68     		ldr	r3, [r3]
 907 028e 9A42     		cmp	r2, r3
 908 0290 BEDB     		blt	.L30
 909              	.LBE11:
 152:pathfinding.c ****             }
 153:pathfinding.c ****         }
 154:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 910              		.loc 1 154 0 is_stmt 1
 911 0292 07F11801 		add	r1, r7, #24
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 20


 912 0296 0839     		subs	r1, r1, #8
 913 0298 07F59362 		add	r2, r7, #1176
 914 029c 083A     		subs	r2, r2, #8
 915 029e 07F5B453 		add	r3, r7, #5760
 916 02a2 03F11C03 		add	r3, r3, #28
 917 02a6 1868     		ldr	r0, [r3]
 918 02a8 0346     		mov	r3, r0
 919 02aa 5B00     		lsls	r3, r3, #1
 920 02ac 0344     		add	r3, r3, r0
 921 02ae 9B00     		lsls	r3, r3, #2
 922 02b0 1A44     		add	r2, r2, r3
 923 02b2 0B46     		mov	r3, r1
 924 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 925 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 155:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 926              		.loc 1 155 0
 927 02ba 07F5B553 		add	r3, r7, #5792
 928 02be 03F10C03 		add	r3, r3, #12
 929 02c2 1B68     		ldr	r3, [r3]
 930 02c4 591E     		subs	r1, r3, #1
 931 02c6 07F59362 		add	r2, r7, #1176
 932 02ca 083A     		subs	r2, r2, #8
 933 02cc 07F5B453 		add	r3, r7, #5760
 934 02d0 03F11C03 		add	r3, r3, #28
 935 02d4 1868     		ldr	r0, [r3]
 936 02d6 0346     		mov	r3, r0
 937 02d8 5B00     		lsls	r3, r3, #1
 938 02da 0344     		add	r3, r3, r0
 939 02dc 9B00     		lsls	r3, r3, #2
 940 02de D018     		adds	r0, r2, r3
 941 02e0 07F59362 		add	r2, r7, #1176
 942 02e4 083A     		subs	r2, r2, #8
 943 02e6 0B46     		mov	r3, r1
 944 02e8 5B00     		lsls	r3, r3, #1
 945 02ea 0B44     		add	r3, r3, r1
 946 02ec 9B00     		lsls	r3, r3, #2
 947 02ee 1A44     		add	r2, r2, r3
 948 02f0 0346     		mov	r3, r0
 949 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 950 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 156:pathfinding.c ****         pqSize--; // decrement pqSize
 951              		.loc 1 156 0
 952 02f8 07F5B553 		add	r3, r7, #5792
 953 02fc 03F10C03 		add	r3, r3, #12
 954 0300 1B68     		ldr	r3, [r3]
 955 0302 013B     		subs	r3, r3, #1
 956 0304 07F5B552 		add	r2, r7, #5792
 957 0308 02F10C02 		add	r2, r2, #12
 958 030c 1360     		str	r3, [r2]
 157:pathfinding.c **** 
 158:pathfinding.c ****         int row = current.location.row;
 959              		.loc 1 158 0
 960 030e 07F11803 		add	r3, r7, #24
 961 0312 083B     		subs	r3, r3, #8
 962 0314 1B68     		ldr	r3, [r3]
 963 0316 07F5B352 		add	r2, r7, #5728
 964 031a 02F11C02 		add	r2, r2, #28
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 21


 965 031e 1360     		str	r3, [r2]
 159:pathfinding.c ****         int col = current.location.col; // get current location details
 966              		.loc 1 159 0
 967 0320 07F11803 		add	r3, r7, #24
 968 0324 083B     		subs	r3, r3, #8
 969 0326 5B68     		ldr	r3, [r3, #4]
 970 0328 07F5B352 		add	r2, r7, #5728
 971 032c 02F11802 		add	r2, r2, #24
 972 0330 1360     		str	r3, [r2]
 160:pathfinding.c **** 
 161:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 973              		.loc 1 161 0
 974 0332 07F58F51 		add	r1, r7, #4576
 975 0336 01F10C01 		add	r1, r1, #12
 976 033a 07F5B353 		add	r3, r7, #5728
 977 033e 03F11C03 		add	r3, r3, #28
 978 0342 1A68     		ldr	r2, [r3]
 979 0344 1346     		mov	r3, r2
 980 0346 DB00     		lsls	r3, r3, #3
 981 0348 1344     		add	r3, r3, r2
 982 034a 5B00     		lsls	r3, r3, #1
 983 034c 1344     		add	r3, r3, r2
 984 034e 07F5B352 		add	r2, r7, #5728
 985 0352 02F11802 		add	r2, r2, #24
 986 0356 1268     		ldr	r2, [r2]
 987 0358 1344     		add	r3, r3, r2
 988 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 989 035e 012B     		cmp	r3, #1
 990 0360 40F03F81 		bne	.L27
 162:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 991              		.loc 1 162 0
 992 0364 07F58F51 		add	r1, r7, #4576
 993 0368 01F10C01 		add	r1, r1, #12
 994 036c 07F5B353 		add	r3, r7, #5728
 995 0370 03F11C03 		add	r3, r3, #28
 996 0374 1A68     		ldr	r2, [r3]
 997 0376 1346     		mov	r3, r2
 998 0378 DB00     		lsls	r3, r3, #3
 999 037a 1344     		add	r3, r3, r2
 1000 037c 5B00     		lsls	r3, r3, #1
 1001 037e 1344     		add	r3, r3, r2
 1002 0380 07F5B352 		add	r2, r7, #5728
 1003 0384 02F11802 		add	r2, r2, #24
 1004 0388 1268     		ldr	r2, [r2]
 1005 038a 1344     		add	r3, r3, r2
 1006 038c 0022     		movs	r2, #0
 1007 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 163:pathfinding.c **** 
 164:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1008              		.loc 1 164 0
 1009 0392 07F5B653 		add	r3, r7, #5824
 1010 0396 03F10C03 		add	r3, r3, #12
 1011 039a 1A68     		ldr	r2, [r3]
 1012 039c 07F5B353 		add	r3, r7, #5728
 1013 03a0 03F11C03 		add	r3, r3, #28
 1014 03a4 1B68     		ldr	r3, [r3]
 1015 03a6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 22


 1016 03a8 0CD1     		bne	.L32
 1017              		.loc 1 164 0 is_stmt 0 discriminator 1
 1018 03aa 07F5B653 		add	r3, r7, #5824
 1019 03ae 03F11003 		add	r3, r3, #16
 1020 03b2 1A68     		ldr	r2, [r3]
 1021 03b4 07F5B353 		add	r3, r7, #5728
 1022 03b8 03F11803 		add	r3, r3, #24
 1023 03bc 1B68     		ldr	r3, [r3]
 1024 03be 9A42     		cmp	r2, r3
 1025 03c0 00F01881 		beq	.L43
 1026              	.L32:
 1027              	.LBB12:
 165:pathfinding.c ****                 break; // if reached target destination, end
 166:pathfinding.c ****             }
 167:pathfinding.c ****             // make a move, check if valid
 168:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1028              		.loc 1 168 0 is_stmt 1
 1029 03c4 0023     		movs	r3, #0
 1030 03c6 07F5B452 		add	r2, r7, #5760
 1031 03ca 02F11402 		add	r2, r2, #20
 1032 03ce 1360     		str	r3, [r2]
 1033 03d0 FFE0     		b	.L34
 1034              	.L36:
 1035              	.LBB13:
 169:pathfinding.c ****                 int newRow = row + moves[i].row;
 1036              		.loc 1 169 0
 1037 03d2 D04A     		ldr	r2, .L44
 1038 03d4 07F5B453 		add	r3, r7, #5760
 1039 03d8 03F11403 		add	r3, r3, #20
 1040 03dc 1B68     		ldr	r3, [r3]
 1041 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1042 03e2 07F5B353 		add	r3, r7, #5728
 1043 03e6 03F11C03 		add	r3, r3, #28
 1044 03ea 1B68     		ldr	r3, [r3]
 1045 03ec 1344     		add	r3, r3, r2
 1046 03ee 07F5B352 		add	r2, r7, #5728
 1047 03f2 02F11402 		add	r2, r2, #20
 1048 03f6 1360     		str	r3, [r2]
 170:pathfinding.c ****                 int newCol = col + moves[i].col;
 1049              		.loc 1 170 0
 1050 03f8 C64A     		ldr	r2, .L44
 1051 03fa 07F5B453 		add	r3, r7, #5760
 1052 03fe 03F11403 		add	r3, r3, #20
 1053 0402 1B68     		ldr	r3, [r3]
 1054 0404 DB00     		lsls	r3, r3, #3
 1055 0406 1344     		add	r3, r3, r2
 1056 0408 5A68     		ldr	r2, [r3, #4]
 1057 040a 07F5B353 		add	r3, r7, #5728
 1058 040e 03F11803 		add	r3, r3, #24
 1059 0412 1B68     		ldr	r3, [r3]
 1060 0414 1344     		add	r3, r3, r2
 1061 0416 07F5B352 		add	r2, r7, #5728
 1062 041a 02F11002 		add	r2, r2, #16
 1063 041e 1360     		str	r3, [r2]
 171:pathfinding.c **** 
 172:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1064              		.loc 1 172 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 23


 1065 0420 07F11803 		add	r3, r7, #24
 1066 0424 0C3B     		subs	r3, r3, #12
 1067 0426 1B68     		ldr	r3, [r3]
 1068 0428 0093     		str	r3, [sp]
 1069 042a 1323     		movs	r3, #19
 1070 042c 0F22     		movs	r2, #15
 1071 042e 07F5B351 		add	r1, r7, #5728
 1072 0432 01F11001 		add	r1, r1, #16
 1073 0436 0968     		ldr	r1, [r1]
 1074 0438 07F5B350 		add	r0, r7, #5728
 1075 043c 00F11400 		add	r0, r0, #20
 1076 0440 0068     		ldr	r0, [r0]
 1077 0442 FFF7FEFF 		bl	isValidMove
 1078 0446 0346     		mov	r3, r0
 1079 0448 002B     		cmp	r3, #0
 1080 044a 00F0B780 		beq	.L35
 1081              		.loc 1 172 0 is_stmt 0 discriminator 1
 1082 044e 07F58F51 		add	r1, r7, #4576
 1083 0452 01F10C01 		add	r1, r1, #12
 1084 0456 07F5B353 		add	r3, r7, #5728
 1085 045a 03F11403 		add	r3, r3, #20
 1086 045e 1A68     		ldr	r2, [r3]
 1087 0460 1346     		mov	r3, r2
 1088 0462 DB00     		lsls	r3, r3, #3
 1089 0464 1344     		add	r3, r3, r2
 1090 0466 5B00     		lsls	r3, r3, #1
 1091 0468 1344     		add	r3, r3, r2
 1092 046a 07F5B352 		add	r2, r7, #5728
 1093 046e 02F11002 		add	r2, r2, #16
 1094 0472 1268     		ldr	r2, [r2]
 1095 0474 1344     		add	r3, r3, r2
 1096 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1097 047a 012B     		cmp	r3, #1
 1098 047c 40F09E80 		bne	.L35
 1099              	.LBB14:
 173:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1100              		.loc 1 173 0 is_stmt 1
 1101 0480 07F13802 		add	r2, r7, #56
 1102 0484 1C3A     		subs	r2, r2, #28
 1103 0486 07F5B353 		add	r3, r7, #5728
 1104 048a 03F11C03 		add	r3, r3, #28
 1105 048e 1968     		ldr	r1, [r3]
 1106 0490 0B46     		mov	r3, r1
 1107 0492 DB00     		lsls	r3, r3, #3
 1108 0494 0B44     		add	r3, r3, r1
 1109 0496 5B00     		lsls	r3, r3, #1
 1110 0498 0B44     		add	r3, r3, r1
 1111 049a 07F5B351 		add	r1, r7, #5728
 1112 049e 01F11801 		add	r1, r1, #24
 1113 04a2 0968     		ldr	r1, [r1]
 1114 04a4 0B44     		add	r3, r3, r1
 1115 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1116 04aa 0133     		adds	r3, r3, #1
 1117 04ac 07F5B352 		add	r2, r7, #5728
 1118 04b0 02F10C02 		add	r2, r2, #12
 1119 04b4 1360     		str	r3, [r2]
 174:pathfinding.c ****                     // take the shortest distance between new and existing
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 24


 175:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1120              		.loc 1 175 0
 1121 04b6 07F13802 		add	r2, r7, #56
 1122 04ba 1C3A     		subs	r2, r2, #28
 1123 04bc 07F5B353 		add	r3, r7, #5728
 1124 04c0 03F11403 		add	r3, r3, #20
 1125 04c4 1968     		ldr	r1, [r3]
 1126 04c6 0B46     		mov	r3, r1
 1127 04c8 DB00     		lsls	r3, r3, #3
 1128 04ca 0B44     		add	r3, r3, r1
 1129 04cc 5B00     		lsls	r3, r3, #1
 1130 04ce 0B44     		add	r3, r3, r1
 1131 04d0 07F5B351 		add	r1, r7, #5728
 1132 04d4 01F11001 		add	r1, r1, #16
 1133 04d8 0968     		ldr	r1, [r1]
 1134 04da 0B44     		add	r3, r3, r1
 1135 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1136 04e0 07F5B353 		add	r3, r7, #5728
 1137 04e4 03F10C03 		add	r3, r3, #12
 1138 04e8 1B68     		ldr	r3, [r3]
 1139 04ea 9A42     		cmp	r2, r3
 1140 04ec 66DD     		ble	.L35
 176:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1141              		.loc 1 176 0
 1142 04ee 07F13802 		add	r2, r7, #56
 1143 04f2 1C3A     		subs	r2, r2, #28
 1144 04f4 07F5B353 		add	r3, r7, #5728
 1145 04f8 03F11403 		add	r3, r3, #20
 1146 04fc 1968     		ldr	r1, [r3]
 1147 04fe 0B46     		mov	r3, r1
 1148 0500 DB00     		lsls	r3, r3, #3
 1149 0502 0B44     		add	r3, r3, r1
 1150 0504 5B00     		lsls	r3, r3, #1
 1151 0506 0B44     		add	r3, r3, r1
 1152 0508 07F5B351 		add	r1, r7, #5728
 1153 050c 01F11001 		add	r1, r1, #16
 1154 0510 0968     		ldr	r1, [r1]
 1155 0512 0B44     		add	r3, r3, r1
 1156 0514 07F5B351 		add	r1, r7, #5728
 1157 0518 01F10C01 		add	r1, r1, #12
 1158 051c 0968     		ldr	r1, [r1]
 1159 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 177:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 178:pathfinding.c ****                         
 179:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1160              		.loc 1 179 0
 1161 0522 07F59362 		add	r2, r7, #1176
 1162 0526 083A     		subs	r2, r2, #8
 1163 0528 07F5B553 		add	r3, r7, #5792
 1164 052c 03F10C03 		add	r3, r3, #12
 1165 0530 1968     		ldr	r1, [r3]
 1166 0532 0B46     		mov	r3, r1
 1167 0534 5B00     		lsls	r3, r3, #1
 1168 0536 0B44     		add	r3, r3, r1
 1169 0538 9B00     		lsls	r3, r3, #2
 1170 053a 1344     		add	r3, r3, r2
 1171 053c 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 25


 1172 0540 02F11402 		add	r2, r2, #20
 1173 0544 1268     		ldr	r2, [r2]
 1174 0546 1A60     		str	r2, [r3]
 180:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1175              		.loc 1 180 0
 1176 0548 07F59362 		add	r2, r7, #1176
 1177 054c 083A     		subs	r2, r2, #8
 1178 054e 07F5B553 		add	r3, r7, #5792
 1179 0552 03F10C03 		add	r3, r3, #12
 1180 0556 1968     		ldr	r1, [r3]
 1181 0558 0B46     		mov	r3, r1
 1182 055a 5B00     		lsls	r3, r3, #1
 1183 055c 0B44     		add	r3, r3, r1
 1184 055e 9B00     		lsls	r3, r3, #2
 1185 0560 1344     		add	r3, r3, r2
 1186 0562 0433     		adds	r3, r3, #4
 1187 0564 07F5B352 		add	r2, r7, #5728
 1188 0568 02F11002 		add	r2, r2, #16
 1189 056c 1268     		ldr	r2, [r2]
 1190 056e 1A60     		str	r2, [r3]
 181:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1191              		.loc 1 181 0
 1192 0570 07F59362 		add	r2, r7, #1176
 1193 0574 083A     		subs	r2, r2, #8
 1194 0576 07F5B553 		add	r3, r7, #5792
 1195 057a 03F10C03 		add	r3, r3, #12
 1196 057e 1968     		ldr	r1, [r3]
 1197 0580 0B46     		mov	r3, r1
 1198 0582 5B00     		lsls	r3, r3, #1
 1199 0584 0B44     		add	r3, r3, r1
 1200 0586 9B00     		lsls	r3, r3, #2
 1201 0588 1344     		add	r3, r3, r2
 1202 058a 0833     		adds	r3, r3, #8
 1203 058c 07F5B352 		add	r2, r7, #5728
 1204 0590 02F10C02 		add	r2, r2, #12
 1205 0594 1268     		ldr	r2, [r2]
 1206 0596 1A60     		str	r2, [r3]
 182:pathfinding.c ****                         
 183:pathfinding.c ****                         stepNum++;
 1207              		.loc 1 183 0
 1208 0598 07F5B553 		add	r3, r7, #5792
 1209 059c 1B68     		ldr	r3, [r3]
 1210 059e 0133     		adds	r3, r3, #1
 1211 05a0 07F5B552 		add	r2, r7, #5792
 1212 05a4 1360     		str	r3, [r2]
 184:pathfinding.c ****                         pqSize++;
 1213              		.loc 1 184 0
 1214 05a6 07F5B553 		add	r3, r7, #5792
 1215 05aa 03F10C03 		add	r3, r3, #12
 1216 05ae 1B68     		ldr	r3, [r3]
 1217 05b0 0133     		adds	r3, r3, #1
 1218 05b2 07F5B552 		add	r2, r7, #5792
 1219 05b6 02F10C02 		add	r2, r2, #12
 1220 05ba 1360     		str	r3, [r2]
 1221              	.L35:
 1222              	.LBE14:
 1223              	.LBE13:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 26


 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1224              		.loc 1 168 0 discriminator 2
 1225 05bc 07F5B453 		add	r3, r7, #5760
 1226 05c0 03F11403 		add	r3, r3, #20
 1227 05c4 1B68     		ldr	r3, [r3]
 1228 05c6 0133     		adds	r3, r3, #1
 1229 05c8 07F5B452 		add	r2, r7, #5760
 1230 05cc 02F11402 		add	r2, r2, #20
 1231 05d0 1360     		str	r3, [r2]
 1232              	.L34:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1233              		.loc 1 168 0 is_stmt 0 discriminator 1
 1234 05d2 07F5B453 		add	r3, r7, #5760
 1235 05d6 03F11403 		add	r3, r3, #20
 1236 05da 1B68     		ldr	r3, [r3]
 1237 05dc 032B     		cmp	r3, #3
 1238 05de 7FF6F8AE 		bls	.L36
 1239              	.L27:
 1240              	.LBE12:
 1241              	.LBE10:
 147:pathfinding.c ****         int idx = 0;
 1242              		.loc 1 147 0 is_stmt 1
 1243 05e2 07F5B553 		add	r3, r7, #5792
 1244 05e6 03F10C03 		add	r3, r3, #12
 1245 05ea 1B68     		ldr	r3, [r3]
 1246 05ec 002B     		cmp	r3, #0
 1247 05ee 3FF702AE 		bgt	.L37
 1248 05f2 00E0     		b	.L33
 1249              	.L43:
 1250              	.LBB15:
 165:pathfinding.c ****             }
 1251              		.loc 1 165 0
 1252 05f4 00BF     		nop
 1253              	.L33:
 1254              	.LBE15:
 185:pathfinding.c ****                     }
 186:pathfinding.c ****                 }
 187:pathfinding.c ****             }
 188:pathfinding.c ****         }
 189:pathfinding.c ****     }
 190:pathfinding.c **** 
 191:pathfinding.c ****     // PATH RECONSTRUCTION
 192:pathfinding.c ****     // initialise maximum distance- will be decremented
 193:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1255              		.loc 1 193 0
 1256 05f6 07F5B653 		add	r3, r7, #5824
 1257 05fa 03F10C03 		add	r3, r3, #12
 1258 05fe 1968     		ldr	r1, [r3]
 1259 0600 07F5B653 		add	r3, r7, #5824
 1260 0604 03F11003 		add	r3, r3, #16
 1261 0608 1868     		ldr	r0, [r3]
 1262 060a 07F13802 		add	r2, r7, #56
 1263 060e 1C3A     		subs	r2, r2, #28
 1264 0610 0B46     		mov	r3, r1
 1265 0612 DB00     		lsls	r3, r3, #3
 1266 0614 0B44     		add	r3, r3, r1
 1267 0616 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 27


 1268 0618 0B44     		add	r3, r3, r1
 1269 061a 0344     		add	r3, r3, r0
 1270 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1271 0620 07F5B452 		add	r2, r7, #5760
 1272 0624 02F11002 		add	r2, r2, #16
 1273 0628 1360     		str	r3, [r2]
 194:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1274              		.loc 1 194 0
 1275 062a 3B4A     		ldr	r2, .L44+4
 1276 062c 07F5B453 		add	r3, r7, #5760
 1277 0630 03F11003 		add	r3, r3, #16
 1278 0634 1B68     		ldr	r3, [r3]
 1279 0636 1360     		str	r3, [r2]
 195:pathfinding.c ****     // retsteps can be generated from here
 196:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1280              		.loc 1 196 0
 1281 0638 07F5B453 		add	r3, r7, #5760
 1282 063c 03F11003 		add	r3, r3, #16
 1283 0640 1B68     		ldr	r3, [r3]
 1284 0642 DB00     		lsls	r3, r3, #3
 1285 0644 1846     		mov	r0, r3
 1286 0646 FFF7FEFF 		bl	malloc
 1287 064a 0346     		mov	r3, r0
 1288 064c 07F5B352 		add	r2, r7, #5728
 1289 0650 02F10802 		add	r2, r2, #8
 1290 0654 1360     		str	r3, [r2]
 197:pathfinding.c ****     int currentRow = targetlocation.row;
 1291              		.loc 1 197 0
 1292 0656 07F5B653 		add	r3, r7, #5824
 1293 065a 03F10C03 		add	r3, r3, #12
 1294 065e 1B68     		ldr	r3, [r3]
 1295 0660 07F5B452 		add	r2, r7, #5760
 1296 0664 02F10C02 		add	r2, r2, #12
 1297 0668 1360     		str	r3, [r2]
 198:pathfinding.c ****     int currentCol = targetlocation.col;
 1298              		.loc 1 198 0
 1299 066a 07F5B653 		add	r3, r7, #5824
 1300 066e 03F11003 		add	r3, r3, #16
 1301 0672 1B68     		ldr	r3, [r3]
 1302 0674 07F5B452 		add	r2, r7, #5760
 1303 0678 02F10802 		add	r2, r2, #8
 1304 067c 1360     		str	r3, [r2]
 199:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1305              		.loc 1 199 0
 1306 067e 07F5B453 		add	r3, r7, #5760
 1307 0682 03F11003 		add	r3, r3, #16
 1308 0686 1B68     		ldr	r3, [r3]
 1309 0688 03F10053 		add	r3, r3, #536870912
 1310 068c 013B     		subs	r3, r3, #1
 1311 068e DB00     		lsls	r3, r3, #3
 1312 0690 07F5B352 		add	r2, r7, #5728
 1313 0694 02F10802 		add	r2, r2, #8
 1314 0698 1268     		ldr	r2, [r2]
 1315 069a 1344     		add	r3, r3, r2
 1316 069c 07F5B452 		add	r2, r7, #5760
 1317 06a0 02F10C02 		add	r2, r2, #12
 1318 06a4 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 28


 1319 06a6 1A60     		str	r2, [r3]
 200:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1320              		.loc 1 200 0
 1321 06a8 07F5B453 		add	r3, r7, #5760
 1322 06ac 03F11003 		add	r3, r3, #16
 1323 06b0 1B68     		ldr	r3, [r3]
 1324 06b2 03F10053 		add	r3, r3, #536870912
 1325 06b6 013B     		subs	r3, r3, #1
 1326 06b8 DB00     		lsls	r3, r3, #3
 1327 06ba 07F5B352 		add	r2, r7, #5728
 1328 06be 02F10802 		add	r2, r2, #8
 1329 06c2 1268     		ldr	r2, [r2]
 1330 06c4 1344     		add	r3, r3, r2
 1331 06c6 07F5B452 		add	r2, r7, #5760
 1332 06ca 02F10802 		add	r2, r2, #8
 1333 06ce 1268     		ldr	r2, [r2]
 1334 06d0 5A60     		str	r2, [r3, #4]
 201:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 202:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1335              		.loc 1 202 0
 1336 06d2 07F5B453 		add	r3, r7, #5760
 1337 06d6 03F10C03 		add	r3, r3, #12
 1338 06da 1B68     		ldr	r3, [r3]
 1339 06dc 4C22     		movs	r2, #76
 1340 06de 02FB03F2 		mul	r2, r2, r3
 1341 06e2 07F11803 		add	r3, r7, #24
 1342 06e6 0C3B     		subs	r3, r3, #12
 1343 06e8 1B68     		ldr	r3, [r3]
 1344 06ea 1344     		add	r3, r3, r2
 1345 06ec 07F5B452 		add	r2, r7, #5760
 1346 06f0 02F10802 		add	r2, r2, #8
 1347 06f4 1268     		ldr	r2, [r2]
 1348 06f6 0921     		movs	r1, #9
 1349 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 203:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 204:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 205:pathfinding.c ****     int pathIndex = 0;
 1350              		.loc 1 205 0
 1351 06fc 0023     		movs	r3, #0
 1352 06fe 07F5B452 		add	r2, r7, #5760
 1353 0702 02F10402 		add	r2, r2, #4
 1354 0706 1360     		str	r3, [r2]
 206:pathfinding.c **** 
 207:pathfinding.c ****     while(shortestDist > 0) {    
 1355              		.loc 1 207 0
 1356 0708 0BE1     		b	.L38
 1357              	.L42:
 1358              	.LBB16:
 208:pathfinding.c ****         // make a move, check if valid and is the next step in path
 209:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1359              		.loc 1 209 0
 1360 070a 0023     		movs	r3, #0
 1361 070c 07F5B452 		add	r2, r7, #5760
 1362 0710 1360     		str	r3, [r2]
 1363 0712 00E1     		b	.L39
 1364              	.L45:
 1365              		.align	2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 29


 1366              	.L44:
 1367 0714 00000000 		.word	moves
 1368 0718 04000000 		.word	numSteps
 1369              	.L41:
 1370              	.LBB17:
 210:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1371              		.loc 1 210 0
 1372 071c 894A     		ldr	r2, .L46
 1373 071e 07F5B453 		add	r3, r7, #5760
 1374 0722 1B68     		ldr	r3, [r3]
 1375 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1376 0728 07F5B453 		add	r3, r7, #5760
 1377 072c 03F10C03 		add	r3, r3, #12
 1378 0730 1B68     		ldr	r3, [r3]
 1379 0732 1344     		add	r3, r3, r2
 1380 0734 07F5B352 		add	r2, r7, #5728
 1381 0738 02F10402 		add	r2, r2, #4
 1382 073c 1360     		str	r3, [r2]
 211:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1383              		.loc 1 211 0
 1384 073e 814A     		ldr	r2, .L46
 1385 0740 07F5B453 		add	r3, r7, #5760
 1386 0744 1B68     		ldr	r3, [r3]
 1387 0746 DB00     		lsls	r3, r3, #3
 1388 0748 1344     		add	r3, r3, r2
 1389 074a 5A68     		ldr	r2, [r3, #4]
 1390 074c 07F5B453 		add	r3, r7, #5760
 1391 0750 03F10803 		add	r3, r3, #8
 1392 0754 1B68     		ldr	r3, [r3]
 1393 0756 1344     		add	r3, r3, r2
 1394 0758 07F5B352 		add	r2, r7, #5728
 1395 075c 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1396              		.loc 1 213 0
 1397 075e 07F11803 		add	r3, r7, #24
 1398 0762 0C3B     		subs	r3, r3, #12
 1399 0764 1B68     		ldr	r3, [r3]
 1400 0766 0093     		str	r3, [sp]
 1401 0768 1323     		movs	r3, #19
 1402 076a 0F22     		movs	r2, #15
 1403 076c 07F5B351 		add	r1, r7, #5728
 1404 0770 0968     		ldr	r1, [r1]
 1405 0772 07F5B350 		add	r0, r7, #5728
 1406 0776 00F10400 		add	r0, r0, #4
 1407 077a 0068     		ldr	r0, [r0]
 1408 077c FFF7FEFF 		bl	isValidMove
 1409 0780 0346     		mov	r3, r0
 1410 0782 002B     		cmp	r3, #0
 1411 0784 00F0C080 		beq	.L40
 1412              		.loc 1 213 0 is_stmt 0 discriminator 1
 1413 0788 07F13802 		add	r2, r7, #56
 1414 078c 1C3A     		subs	r2, r2, #28
 1415 078e 07F5B353 		add	r3, r7, #5728
 1416 0792 03F10403 		add	r3, r3, #4
 1417 0796 1968     		ldr	r1, [r3]
 1418 0798 0B46     		mov	r3, r1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 30


 1419 079a DB00     		lsls	r3, r3, #3
 1420 079c 0B44     		add	r3, r3, r1
 1421 079e 5B00     		lsls	r3, r3, #1
 1422 07a0 0B44     		add	r3, r3, r1
 1423 07a2 07F5B351 		add	r1, r7, #5728
 1424 07a6 0968     		ldr	r1, [r1]
 1425 07a8 0B44     		add	r3, r3, r1
 1426 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1427 07ae 07F5B453 		add	r3, r7, #5760
 1428 07b2 03F11003 		add	r3, r3, #16
 1429 07b6 1B68     		ldr	r3, [r3]
 1430 07b8 013B     		subs	r3, r3, #1
 1431 07ba 9A42     		cmp	r2, r3
 1432 07bc 40F0A480 		bne	.L40
 214:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1433              		.loc 1 214 0 is_stmt 1
 1434 07c0 07F5B353 		add	r3, r7, #5728
 1435 07c4 03F10403 		add	r3, r3, #4
 1436 07c8 1B68     		ldr	r3, [r3]
 1437 07ca 4C22     		movs	r2, #76
 1438 07cc 02FB03F2 		mul	r2, r2, r3
 1439 07d0 07F11803 		add	r3, r7, #24
 1440 07d4 0C3B     		subs	r3, r3, #12
 1441 07d6 1B68     		ldr	r3, [r3]
 1442 07d8 1344     		add	r3, r3, r2
 1443 07da 07F5B352 		add	r2, r7, #5728
 1444 07de 1268     		ldr	r2, [r2]
 1445 07e0 0821     		movs	r1, #8
 1446 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 215:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1447              		.loc 1 215 0
 1448 07e6 5849     		ldr	r1, .L46+4
 1449 07e8 07F5B453 		add	r3, r7, #5760
 1450 07ec 03F10403 		add	r3, r3, #4
 1451 07f0 1B68     		ldr	r3, [r3]
 1452 07f2 07F5B352 		add	r2, r7, #5728
 1453 07f6 02F10402 		add	r2, r2, #4
 1454 07fa 1268     		ldr	r2, [r2]
 1455 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 216:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1456              		.loc 1 216 0
 1457 0800 514A     		ldr	r2, .L46+4
 1458 0802 07F5B453 		add	r3, r7, #5760
 1459 0806 03F10403 		add	r3, r3, #4
 1460 080a 1B68     		ldr	r3, [r3]
 1461 080c DB00     		lsls	r3, r3, #3
 1462 080e 1344     		add	r3, r3, r2
 1463 0810 07F5B352 		add	r2, r7, #5728
 1464 0814 1268     		ldr	r2, [r2]
 1465 0816 5A60     		str	r2, [r3, #4]
 217:pathfinding.c ****                 pathIndex++;
 1466              		.loc 1 217 0
 1467 0818 07F5B453 		add	r3, r7, #5760
 1468 081c 03F10403 		add	r3, r3, #4
 1469 0820 1B68     		ldr	r3, [r3]
 1470 0822 0133     		adds	r3, r3, #1
 1471 0824 07F5B452 		add	r2, r7, #5760
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 31


 1472 0828 02F10402 		add	r2, r2, #4
 1473 082c 1360     		str	r3, [r2]
 218:pathfinding.c ****                 // reverse array somewhere
 219:pathfinding.c **** 
 220:pathfinding.c ****                 shortestDist--; // decrement distance
 1474              		.loc 1 220 0
 1475 082e 07F5B453 		add	r3, r7, #5760
 1476 0832 03F11003 		add	r3, r3, #16
 1477 0836 1B68     		ldr	r3, [r3]
 1478 0838 013B     		subs	r3, r3, #1
 1479 083a 07F5B452 		add	r2, r7, #5760
 1480 083e 02F11002 		add	r2, r2, #16
 1481 0842 1360     		str	r3, [r2]
 221:pathfinding.c ****                 currentRow = newRow; 
 1482              		.loc 1 221 0
 1483 0844 07F5B353 		add	r3, r7, #5728
 1484 0848 03F10403 		add	r3, r3, #4
 1485 084c 1B68     		ldr	r3, [r3]
 1486 084e 07F5B452 		add	r2, r7, #5760
 1487 0852 02F10C02 		add	r2, r2, #12
 1488 0856 1360     		str	r3, [r2]
 222:pathfinding.c ****                 currentCol = newCol; // change current location
 1489              		.loc 1 222 0
 1490 0858 07F5B353 		add	r3, r7, #5728
 1491 085c 1B68     		ldr	r3, [r3]
 1492 085e 07F5B452 		add	r2, r7, #5760
 1493 0862 02F10802 		add	r2, r2, #8
 1494 0866 1360     		str	r3, [r2]
 223:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 224:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1495              		.loc 1 224 0
 1496 0868 07F5B453 		add	r3, r7, #5760
 1497 086c 03F11003 		add	r3, r3, #16
 1498 0870 1B68     		ldr	r3, [r3]
 1499 0872 DB00     		lsls	r3, r3, #3
 1500 0874 07F5B352 		add	r2, r7, #5728
 1501 0878 02F10802 		add	r2, r2, #8
 1502 087c 1268     		ldr	r2, [r2]
 1503 087e 1344     		add	r3, r3, r2
 1504 0880 07F5B452 		add	r2, r7, #5760
 1505 0884 02F10C02 		add	r2, r2, #12
 1506 0888 1268     		ldr	r2, [r2]
 1507 088a 1A60     		str	r2, [r3]
 225:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1508              		.loc 1 225 0
 1509 088c 07F5B453 		add	r3, r7, #5760
 1510 0890 03F11003 		add	r3, r3, #16
 1511 0894 1B68     		ldr	r3, [r3]
 1512 0896 DB00     		lsls	r3, r3, #3
 1513 0898 07F5B352 		add	r2, r7, #5728
 1514 089c 02F10802 		add	r2, r2, #8
 1515 08a0 1268     		ldr	r2, [r2]
 1516 08a2 1344     		add	r3, r3, r2
 1517 08a4 07F5B452 		add	r2, r7, #5760
 1518 08a8 02F10802 		add	r2, r2, #8
 1519 08ac 1268     		ldr	r2, [r2]
 1520 08ae 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 32


 226:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1521              		.loc 1 226 0
 1522 08b0 07F11803 		add	r3, r7, #24
 1523 08b4 143B     		subs	r3, r3, #20
 1524 08b6 1A68     		ldr	r2, [r3]
 1525 08b8 07F5B453 		add	r3, r7, #5760
 1526 08bc 03F10C03 		add	r3, r3, #12
 1527 08c0 1B68     		ldr	r3, [r3]
 1528 08c2 9A42     		cmp	r2, r3
 1529 08c4 20D1     		bne	.L40
 1530              		.loc 1 226 0 is_stmt 0 discriminator 1
 1531 08c6 07F11803 		add	r3, r7, #24
 1532 08ca 143B     		subs	r3, r3, #20
 1533 08cc 5A68     		ldr	r2, [r3, #4]
 1534 08ce 07F5B453 		add	r3, r7, #5760
 1535 08d2 03F10803 		add	r3, r3, #8
 1536 08d6 1B68     		ldr	r3, [r3]
 1537 08d8 9A42     		cmp	r2, r3
 1538 08da 15D1     		bne	.L40
 227:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1539              		.loc 1 227 0 is_stmt 1
 1540 08dc 07F5B453 		add	r3, r7, #5760
 1541 08e0 03F10C03 		add	r3, r3, #12
 1542 08e4 1B68     		ldr	r3, [r3]
 1543 08e6 4C22     		movs	r2, #76
 1544 08e8 02FB03F2 		mul	r2, r2, r3
 1545 08ec 07F11803 		add	r3, r7, #24
 1546 08f0 0C3B     		subs	r3, r3, #12
 1547 08f2 1B68     		ldr	r3, [r3]
 1548 08f4 1344     		add	r3, r3, r2
 1549 08f6 07F5B452 		add	r2, r7, #5760
 1550 08fa 02F10802 		add	r2, r2, #8
 1551 08fe 1268     		ldr	r2, [r2]
 1552 0900 0221     		movs	r1, #2
 1553 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 228:pathfinding.c ****                     break;
 1554              		.loc 1 228 0
 1555 0906 0CE0     		b	.L38
 1556              	.L40:
 1557              	.LBE17:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1558              		.loc 1 209 0 discriminator 2
 1559 0908 07F5B453 		add	r3, r7, #5760
 1560 090c 1B68     		ldr	r3, [r3]
 1561 090e 0133     		adds	r3, r3, #1
 1562 0910 07F5B452 		add	r2, r7, #5760
 1563 0914 1360     		str	r3, [r2]
 1564              	.L39:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1565              		.loc 1 209 0 is_stmt 0 discriminator 1
 1566 0916 07F5B453 		add	r3, r7, #5760
 1567 091a 1B68     		ldr	r3, [r3]
 1568 091c 032B     		cmp	r3, #3
 1569 091e 7FF6FDAE 		bls	.L41
 1570              	.L38:
 1571              	.LBE16:
 207:pathfinding.c ****         // make a move, check if valid and is the next step in path
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 33


 1572              		.loc 1 207 0 is_stmt 1
 1573 0922 07F5B453 		add	r3, r7, #5760
 1574 0926 03F11003 		add	r3, r3, #16
 1575 092a 1B68     		ldr	r3, [r3]
 1576 092c 002B     		cmp	r3, #0
 1577 092e 3FF7ECAE 		bgt	.L42
 229:pathfinding.c ****                 }   
 230:pathfinding.c ****             }
 231:pathfinding.c ****         }
 232:pathfinding.c ****     }
 233:pathfinding.c **** }
 1578              		.loc 1 233 0
 1579 0932 00BF     		nop
 1580 0934 07F5B557 		add	r7, r7, #5792
 1581 0938 1C37     		adds	r7, r7, #28
 1582              		.cfi_def_cfa_offset 20
 1583 093a BD46     		mov	sp, r7
 1584              		.cfi_def_cfa_register 13
 1585              		@ sp needed
 1586 093c BDE89040 		pop	{r4, r7, lr}
 1587              		.cfi_restore 14
 1588              		.cfi_restore 7
 1589              		.cfi_restore 4
 1590              		.cfi_def_cfa_offset 8
 1591 0940 02B0     		add	sp, sp, #8
 1592              		.cfi_def_cfa_offset 0
 1593 0942 7047     		bx	lr
 1594              	.L47:
 1595              		.align	2
 1596              	.L46:
 1597 0944 00000000 		.word	moves
 1598 0948 00000000 		.word	list_of_optimal_coordinates
 1599              		.cfi_endproc
 1600              	.LFE4:
 1601              		.size	dijkstra, .-dijkstra
 1602              		.global	ignoreR
 1603              		.bss
 1604              		.align	2
 1605              		.type	ignoreR, %object
 1606              		.size	ignoreR, 4
 1607              	ignoreR:
 1608 0008 00000000 		.space	4
 1609              		.global	ignoreL
 1610              		.align	2
 1611              		.type	ignoreL, %object
 1612              		.size	ignoreL, 4
 1613              	ignoreL:
 1614 000c 00000000 		.space	4
 1615              		.section	.rodata
 1616 0003 00       		.align	2
 1617              	.LC1:
 1618 0004 53746F70 		.ascii	"Stop at target\000"
 1618      20617420 
 1618      74617267 
 1618      657400
 1619 0013 00       		.align	2
 1620              	.LC2:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 34


 1621 0014 52696768 		.ascii	"Right Turn\000"
 1621      74205475 
 1621      726E00
 1622 001f 00       		.align	2
 1623              	.LC3:
 1624 0020 4C656674 		.ascii	"Left Turn\000"
 1624      20547572 
 1624      6E00
 1625 002a 0000     		.align	2
 1626              	.LC4:
 1627 002c 466F7277 		.ascii	"Forward until target\000"
 1627      61726420 
 1627      756E7469 
 1627      6C207461 
 1627      72676574 
 1628 0041 000000   		.align	2
 1629              	.LC5:
 1630 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1630      6172643B 
 1630      2069676E 
 1630      6F726520 
 1630      25644C2C 
 1631 0065 000000   		.align	2
 1632              	.LC6:
 1633 0068 552D7475 		.ascii	"U-turn\000"
 1633      726E00
 1634              		.section	.text.getPathInstructions,"ax",%progbits
 1635              		.align	2
 1636              		.global	getPathInstructions
 1637              		.thumb
 1638              		.thumb_func
 1639              		.type	getPathInstructions, %function
 1640              	getPathInstructions:
 1641              	.LFB5:
 234:pathfinding.c **** 
 235:pathfinding.c **** 
 236:pathfinding.c **** 
 237:pathfinding.c **** // PATHFINDING PROCESSING *====================
 238:pathfinding.c **** 
 239:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 240:pathfinding.c **** 
 241:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 242:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1642              		.loc 1 242 0
 1643              		.cfi_startproc
 1644              		@ args = 8, pretend = 0, frame = 48
 1645              		@ frame_needed = 1, uses_anonymous_args = 0
 1646 0000 80B5     		push	{r7, lr}
 1647              		.cfi_def_cfa_offset 8
 1648              		.cfi_offset 7, -8
 1649              		.cfi_offset 14, -4
 1650 0002 8CB0     		sub	sp, sp, #48
 1651              		.cfi_def_cfa_offset 56
 1652 0004 00AF     		add	r7, sp, #0
 1653              		.cfi_def_cfa_register 7
 1654 0006 F860     		str	r0, [r7, #12]
 1655 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 35


 1656 000a 3946     		mov	r1, r7
 1657 000c 81E80C00 		stmia	r1, {r2, r3}
 243:pathfinding.c ****     int currentRow = startLocation.row; 
 1658              		.loc 1 243 0
 1659 0010 3B68     		ldr	r3, [r7]
 1660 0012 FB62     		str	r3, [r7, #44]
 244:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1661              		.loc 1 244 0
 1662 0014 7B68     		ldr	r3, [r7, #4]
 1663 0016 BB62     		str	r3, [r7, #40]
 245:pathfinding.c ****     int listIndex = 0;
 1664              		.loc 1 245 0
 1665 0018 0023     		movs	r3, #0
 1666 001a 7B62     		str	r3, [r7, #36]
 246:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1667              		.loc 1 246 0
 1668 001c BB6B     		ldr	r3, [r7, #56]
 1669 001e FA6B     		ldr	r2, [r7, #60]
 1670 0020 1146     		mov	r1, r2
 1671 0022 1846     		mov	r0, r3
 1672 0024 FFF7FEFF 		bl	getTargetOrientation
 1673 0028 0346     		mov	r3, r0
 1674 002a 7B61     		str	r3, [r7, #20]
 247:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 248:pathfinding.c ****     while(numSteps >= 0) {
 1675              		.loc 1 248 0
 1676 002c C5E1     		b	.L49
 1677              	.L78:
 1678              	.LBB18:
 249:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1679              		.loc 1 249 0
 1680 002e 9A4B     		ldr	r3, .L83
 1681 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 0032 BA6A     		ldr	r2, [r7, #40]
 1683 0034 F96A     		ldr	r1, [r7, #44]
 1684 0036 1846     		mov	r0, r3
 1685 0038 FFF7FEFF 		bl	checkIgnoreTurn
 250:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1686              		.loc 1 250 0
 1687 003c FB6A     		ldr	r3, [r7, #44]
 1688 003e 4C22     		movs	r2, #76
 1689 0040 02FB03F3 		mul	r3, r2, r3
 1690 0044 FA68     		ldr	r2, [r7, #12]
 1691 0046 1344     		add	r3, r3, r2
 1692 0048 BA6A     		ldr	r2, [r7, #40]
 1693 004a 0021     		movs	r1, #0
 1694 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
 1695              		.loc 1 251 0
 1696 0050 914B     		ldr	r3, .L83
 1697 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1698 0054 914B     		ldr	r3, .L83+4
 1699 0056 1A70     		strb	r2, [r3]
 252:pathfinding.c ****         enum InstructionDirection newDirection;
 253:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1700              		.loc 1 253 0
 1701 0058 B96A     		ldr	r1, [r7, #40]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 36


 1702 005a F86A     		ldr	r0, [r7, #44]
 1703 005c FFF7FEFF 		bl	checkPathDirection
 1704 0060 0346     		mov	r3, r0
 1705 0062 FB61     		str	r3, [r7, #28]
 254:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1706              		.loc 1 254 0
 1707 0064 BA6B     		ldr	r2, [r7, #56]
 1708 0066 FB6A     		ldr	r3, [r7, #44]
 1709 0068 9A42     		cmp	r2, r3
 1710 006a 0BD1     		bne	.L50
 1711              		.loc 1 254 0 is_stmt 0 discriminator 1
 1712 006c FA6B     		ldr	r2, [r7, #60]
 1713 006e BB6A     		ldr	r3, [r7, #40]
 1714 0070 9A42     		cmp	r2, r3
 1715 0072 07D1     		bne	.L50
 255:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1716              		.loc 1 255 0 is_stmt 1
 1717 0074 0523     		movs	r3, #5
 1718 0076 87F82330 		strb	r3, [r7, #35]
 256:pathfinding.c ****             printf("Stop at target\n");
 1719              		.loc 1 256 0
 1720 007a 8948     		ldr	r0, .L83+8
 1721 007c FFF7FEFF 		bl	puts
 257:pathfinding.c ****             nextStep = 5;
 1722              		.loc 1 257 0
 1723 0080 0523     		movs	r3, #5
 1724 0082 FB61     		str	r3, [r7, #28]
 1725              	.L50:
 258:pathfinding.c ****         }
 259:pathfinding.c ****         switch (nextStep) {
 1726              		.loc 1 259 0
 1727 0084 FB69     		ldr	r3, [r7, #28]
 1728 0086 032B     		cmp	r3, #3
 1729 0088 00F26F81 		bhi	.L82
 1730 008c 01A2     		adr	r2, .L53
 1731 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1732 0092 00BF     		.p2align 2
 1733              	.L53:
 1734 0094 A5000000 		.word	.L52+1
 1735 0098 43010000 		.word	.L54+1
 1736 009c ED010000 		.word	.L55+1
 1737 00a0 C1020000 		.word	.L56+1
 1738              		.p2align 1
 1739              	.L52:
 260:pathfinding.c ****             case 0: // next step is up
 261:pathfinding.c ****                 currentRobotOrientation = Up;
 1740              		.loc 1 261 0
 1741 00a4 7C4B     		ldr	r3, .L83
 1742 00a6 0022     		movs	r2, #0
 1743 00a8 1A70     		strb	r2, [r3]
 262:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1744              		.loc 1 262 0
 1745 00aa 7C4B     		ldr	r3, .L83+4
 1746 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1747 00ae 022B     		cmp	r3, #2
 1748 00b0 0BD1     		bne	.L57
 263:pathfinding.c ****                     newDirection = waitForRightTurn;
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 37


 1749              		.loc 1 263 0
 1750 00b2 0223     		movs	r3, #2
 1751 00b4 87F82330 		strb	r3, [r7, #35]
 264:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1752              		.loc 1 264 0
 1753 00b8 7A48     		ldr	r0, .L83+12
 1754 00ba FFF7FEFF 		bl	puts
 265:pathfinding.c ****                     ignoreL = 0;
 1755              		.loc 1 265 0
 1756 00be 7A4B     		ldr	r3, .L83+16
 1757 00c0 0022     		movs	r2, #0
 1758 00c2 1A60     		str	r2, [r3]
 266:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1759              		.loc 1 266 0
 1760 00c4 794B     		ldr	r3, .L83+20
 1761 00c6 0022     		movs	r2, #0
 1762 00c8 1A60     		str	r2, [r3]
 1763              	.L57:
 267:pathfinding.c ****                 } 
 268:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1764              		.loc 1 268 0
 1765 00ca 744B     		ldr	r3, .L83+4
 1766 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1767 00ce 032B     		cmp	r3, #3
 1768 00d0 0BD1     		bne	.L58
 269:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1769              		.loc 1 269 0
 1770 00d2 0123     		movs	r3, #1
 1771 00d4 87F82330 		strb	r3, [r7, #35]
 270:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1772              		.loc 1 270 0
 1773 00d8 7548     		ldr	r0, .L83+24
 1774 00da FFF7FEFF 		bl	puts
 271:pathfinding.c ****                     ignoreL = 0;
 1775              		.loc 1 271 0
 1776 00de 724B     		ldr	r3, .L83+16
 1777 00e0 0022     		movs	r2, #0
 1778 00e2 1A60     		str	r2, [r3]
 272:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1779              		.loc 1 272 0
 1780 00e4 714B     		ldr	r3, .L83+20
 1781 00e6 0022     		movs	r2, #0
 1782 00e8 1A60     		str	r2, [r3]
 1783              	.L58:
 273:pathfinding.c ****                 }
 274:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1784              		.loc 1 274 0
 1785 00ea 6C4B     		ldr	r3, .L83+4
 1786 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 00ee 002B     		cmp	r3, #0
 1788 00f0 19D1     		bne	.L59
 275:pathfinding.c ****                     // check if we only need to go forward to reach target
 276:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1789              		.loc 1 276 0
 1790 00f2 7A69     		ldr	r2, [r7, #20]
 1791 00f4 FB69     		ldr	r3, [r7, #28]
 1792 00f6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 38


 1793 00f8 0AD1     		bne	.L60
 1794              		.loc 1 276 0 is_stmt 0 discriminator 1
 1795 00fa FA6B     		ldr	r2, [r7, #60]
 1796 00fc BB6A     		ldr	r3, [r7, #40]
 1797 00fe 9A42     		cmp	r2, r3
 1798 0100 06D1     		bne	.L60
 277:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1799              		.loc 1 277 0 is_stmt 1
 1800 0102 0423     		movs	r3, #4
 1801 0104 87F82330 		strb	r3, [r7, #35]
 278:pathfinding.c ****                         printf("Forward until target\n"); // THIS WILL HAVE AN EDGE CASE
 1802              		.loc 1 278 0
 1803 0108 6A48     		ldr	r0, .L83+28
 1804 010a FFF7FEFF 		bl	puts
 1805 010e 0AE0     		b	.L59
 1806              	.L60:
 279:pathfinding.c ****                     } else {
 280:pathfinding.c ****                         newDirection = GoForward;
 1807              		.loc 1 280 0
 1808 0110 0023     		movs	r3, #0
 1809 0112 87F82330 		strb	r3, [r7, #35]
 281:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1810              		.loc 1 281 0
 1811 0116 644B     		ldr	r3, .L83+16
 1812 0118 1968     		ldr	r1, [r3]
 1813 011a 644B     		ldr	r3, .L83+20
 1814 011c 1B68     		ldr	r3, [r3]
 1815 011e 1A46     		mov	r2, r3
 1816 0120 6548     		ldr	r0, .L83+32
 1817 0122 FFF7FEFF 		bl	printf
 1818              	.L59:
 282:pathfinding.c ****                     }
 283:pathfinding.c ****                 }
 284:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1819              		.loc 1 284 0
 1820 0126 5D4B     		ldr	r3, .L83+4
 1821 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1822 012a 012B     		cmp	r3, #1
 1823 012c 05D1     		bne	.L61
 285:pathfinding.c ****                     newDirection = uTurn;
 1824              		.loc 1 285 0
 1825 012e 0323     		movs	r3, #3
 1826 0130 87F82330 		strb	r3, [r7, #35]
 286:pathfinding.c ****                     printf("U-turn\n");
 1827              		.loc 1 286 0
 1828 0134 6148     		ldr	r0, .L83+36
 1829 0136 FFF7FEFF 		bl	puts
 1830              	.L61:
 287:pathfinding.c ****                 }
 288:pathfinding.c ****                 currentRow--; // jump to new location
 1831              		.loc 1 288 0
 1832 013a FB6A     		ldr	r3, [r7, #44]
 1833 013c 013B     		subs	r3, r3, #1
 1834 013e FB62     		str	r3, [r7, #44]
 289:pathfinding.c ****                 break;
 1835              		.loc 1 289 0
 1836 0140 14E1     		b	.L62
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 39


 1837              	.L54:
 290:pathfinding.c ****             case 1: // next step is down
 291:pathfinding.c ****                 currentRobotOrientation = Down;
 1838              		.loc 1 291 0
 1839 0142 554B     		ldr	r3, .L83
 1840 0144 0122     		movs	r2, #1
 1841 0146 1A70     		strb	r2, [r3]
 292:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1842              		.loc 1 292 0
 1843 0148 544B     		ldr	r3, .L83+4
 1844 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 014c 032B     		cmp	r3, #3
 1846 014e 0BD1     		bne	.L63
 293:pathfinding.c ****                     newDirection = waitForRightTurn;
 1847              		.loc 1 293 0
 1848 0150 0223     		movs	r3, #2
 1849 0152 87F82330 		strb	r3, [r7, #35]
 294:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1850              		.loc 1 294 0
 1851 0156 5348     		ldr	r0, .L83+12
 1852 0158 FFF7FEFF 		bl	puts
 295:pathfinding.c ****                     ignoreL = 0;
 1853              		.loc 1 295 0
 1854 015c 524B     		ldr	r3, .L83+16
 1855 015e 0022     		movs	r2, #0
 1856 0160 1A60     		str	r2, [r3]
 296:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1857              		.loc 1 296 0
 1858 0162 524B     		ldr	r3, .L83+20
 1859 0164 0022     		movs	r2, #0
 1860 0166 1A60     		str	r2, [r3]
 1861              	.L63:
 297:pathfinding.c ****                 } 
 298:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1862              		.loc 1 298 0
 1863 0168 4C4B     		ldr	r3, .L83+4
 1864 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1865 016c 022B     		cmp	r3, #2
 1866 016e 0BD1     		bne	.L64
 299:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1867              		.loc 1 299 0
 1868 0170 0123     		movs	r3, #1
 1869 0172 87F82330 		strb	r3, [r7, #35]
 300:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1870              		.loc 1 300 0
 1871 0176 4E48     		ldr	r0, .L83+24
 1872 0178 FFF7FEFF 		bl	puts
 301:pathfinding.c ****                     ignoreL = 0;
 1873              		.loc 1 301 0
 1874 017c 4A4B     		ldr	r3, .L83+16
 1875 017e 0022     		movs	r2, #0
 1876 0180 1A60     		str	r2, [r3]
 302:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1877              		.loc 1 302 0
 1878 0182 4A4B     		ldr	r3, .L83+20
 1879 0184 0022     		movs	r2, #0
 1880 0186 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 40


 1881              	.L64:
 303:pathfinding.c ****                 }
 304:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1882              		.loc 1 304 0
 1883 0188 444B     		ldr	r3, .L83+4
 1884 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1885 018c 012B     		cmp	r3, #1
 1886 018e 19D1     		bne	.L65
 305:pathfinding.c ****                     // check if we only need to go forward to reach target
 306:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1887              		.loc 1 306 0
 1888 0190 7A69     		ldr	r2, [r7, #20]
 1889 0192 FB69     		ldr	r3, [r7, #28]
 1890 0194 9A42     		cmp	r2, r3
 1891 0196 0AD1     		bne	.L66
 1892              		.loc 1 306 0 is_stmt 0 discriminator 1
 1893 0198 FA6B     		ldr	r2, [r7, #60]
 1894 019a BB6A     		ldr	r3, [r7, #40]
 1895 019c 9A42     		cmp	r2, r3
 1896 019e 06D1     		bne	.L66
 307:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1897              		.loc 1 307 0 is_stmt 1
 1898 01a0 0423     		movs	r3, #4
 1899 01a2 87F82330 		strb	r3, [r7, #35]
 308:pathfinding.c ****                         printf("Forward until target\n");
 1900              		.loc 1 308 0
 1901 01a6 4348     		ldr	r0, .L83+28
 1902 01a8 FFF7FEFF 		bl	puts
 1903 01ac 0AE0     		b	.L65
 1904              	.L66:
 309:pathfinding.c ****                     } else {
 310:pathfinding.c ****                         newDirection = GoForward;
 1905              		.loc 1 310 0
 1906 01ae 0023     		movs	r3, #0
 1907 01b0 87F82330 		strb	r3, [r7, #35]
 311:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1908              		.loc 1 311 0
 1909 01b4 3C4B     		ldr	r3, .L83+16
 1910 01b6 1968     		ldr	r1, [r3]
 1911 01b8 3C4B     		ldr	r3, .L83+20
 1912 01ba 1B68     		ldr	r3, [r3]
 1913 01bc 1A46     		mov	r2, r3
 1914 01be 3E48     		ldr	r0, .L83+32
 1915 01c0 FFF7FEFF 		bl	printf
 1916              	.L65:
 312:pathfinding.c ****                     }                    
 313:pathfinding.c ****                 }
 314:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1917              		.loc 1 314 0
 1918 01c4 354B     		ldr	r3, .L83+4
 1919 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1920 01c8 002B     		cmp	r3, #0
 1921 01ca 0BD1     		bne	.L67
 315:pathfinding.c ****                     newDirection = uTurn;
 1922              		.loc 1 315 0
 1923 01cc 0323     		movs	r3, #3
 1924 01ce 87F82330 		strb	r3, [r7, #35]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 41


 316:pathfinding.c ****                     ignoreL = 0;
 1925              		.loc 1 316 0
 1926 01d2 354B     		ldr	r3, .L83+16
 1927 01d4 0022     		movs	r2, #0
 1928 01d6 1A60     		str	r2, [r3]
 317:pathfinding.c ****                     ignoreR = 0;
 1929              		.loc 1 317 0
 1930 01d8 344B     		ldr	r3, .L83+20
 1931 01da 0022     		movs	r2, #0
 1932 01dc 1A60     		str	r2, [r3]
 318:pathfinding.c ****                     printf("U-turn\n");
 1933              		.loc 1 318 0
 1934 01de 3748     		ldr	r0, .L83+36
 1935 01e0 FFF7FEFF 		bl	puts
 1936              	.L67:
 319:pathfinding.c ****                 }
 320:pathfinding.c ****                 currentRow++;
 1937              		.loc 1 320 0
 1938 01e4 FB6A     		ldr	r3, [r7, #44]
 1939 01e6 0133     		adds	r3, r3, #1
 1940 01e8 FB62     		str	r3, [r7, #44]
 321:pathfinding.c ****                 break;
 1941              		.loc 1 321 0
 1942 01ea BFE0     		b	.L62
 1943              	.L55:
 322:pathfinding.c ****             case 2: // next step is left
 323:pathfinding.c ****                 currentRobotOrientation = Left;
 1944              		.loc 1 323 0
 1945 01ec 2A4B     		ldr	r3, .L83
 1946 01ee 0222     		movs	r2, #2
 1947 01f0 1A70     		strb	r2, [r3]
 324:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1948              		.loc 1 324 0
 1949 01f2 2A4B     		ldr	r3, .L83+4
 1950 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 01f6 002B     		cmp	r3, #0
 1952 01f8 0BD1     		bne	.L68
 325:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1953              		.loc 1 325 0
 1954 01fa 0123     		movs	r3, #1
 1955 01fc 87F82330 		strb	r3, [r7, #35]
 326:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 1956              		.loc 1 326 0
 1957 0200 2B48     		ldr	r0, .L83+24
 1958 0202 FFF7FEFF 		bl	puts
 327:pathfinding.c ****                     ignoreL = 0;
 1959              		.loc 1 327 0
 1960 0206 284B     		ldr	r3, .L83+16
 1961 0208 0022     		movs	r2, #0
 1962 020a 1A60     		str	r2, [r3]
 328:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1963              		.loc 1 328 0
 1964 020c 274B     		ldr	r3, .L83+20
 1965 020e 0022     		movs	r2, #0
 1966 0210 1A60     		str	r2, [r3]
 1967              	.L68:
 329:pathfinding.c ****                 } 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 42


 330:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1968              		.loc 1 330 0
 1969 0212 224B     		ldr	r3, .L83+4
 1970 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 0216 012B     		cmp	r3, #1
 1972 0218 0BD1     		bne	.L69
 331:pathfinding.c ****                     newDirection = waitForRightTurn;
 1973              		.loc 1 331 0
 1974 021a 0223     		movs	r3, #2
 1975 021c 87F82330 		strb	r3, [r7, #35]
 332:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 1976              		.loc 1 332 0
 1977 0220 2048     		ldr	r0, .L83+12
 1978 0222 FFF7FEFF 		bl	puts
 333:pathfinding.c ****                     ignoreL = 0;
 1979              		.loc 1 333 0
 1980 0226 204B     		ldr	r3, .L83+16
 1981 0228 0022     		movs	r2, #0
 1982 022a 1A60     		str	r2, [r3]
 334:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1983              		.loc 1 334 0
 1984 022c 1F4B     		ldr	r3, .L83+20
 1985 022e 0022     		movs	r2, #0
 1986 0230 1A60     		str	r2, [r3]
 1987              	.L69:
 335:pathfinding.c ****                 }
 336:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1988              		.loc 1 336 0
 1989 0232 1A4B     		ldr	r3, .L83+4
 1990 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1991 0236 022B     		cmp	r3, #2
 1992 0238 19D1     		bne	.L70
 337:pathfinding.c ****                     // check if we only need to go forward to reach target
 338:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1993              		.loc 1 338 0
 1994 023a 7A69     		ldr	r2, [r7, #20]
 1995 023c FB69     		ldr	r3, [r7, #28]
 1996 023e 9A42     		cmp	r2, r3
 1997 0240 0AD1     		bne	.L71
 1998              		.loc 1 338 0 is_stmt 0 discriminator 1
 1999 0242 BA6B     		ldr	r2, [r7, #56]
 2000 0244 FB6A     		ldr	r3, [r7, #44]
 2001 0246 9A42     		cmp	r2, r3
 2002 0248 06D1     		bne	.L71
 339:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2003              		.loc 1 339 0 is_stmt 1
 2004 024a 0423     		movs	r3, #4
 2005 024c 87F82330 		strb	r3, [r7, #35]
 340:pathfinding.c ****                         printf("Forward until target\n");
 2006              		.loc 1 340 0
 2007 0250 1848     		ldr	r0, .L83+28
 2008 0252 FFF7FEFF 		bl	puts
 2009 0256 0AE0     		b	.L70
 2010              	.L71:
 341:pathfinding.c ****                     } else {
 342:pathfinding.c ****                         newDirection = GoForward;
 2011              		.loc 1 342 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 43


 2012 0258 0023     		movs	r3, #0
 2013 025a 87F82330 		strb	r3, [r7, #35]
 343:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2014              		.loc 1 343 0
 2015 025e 124B     		ldr	r3, .L83+16
 2016 0260 1968     		ldr	r1, [r3]
 2017 0262 124B     		ldr	r3, .L83+20
 2018 0264 1B68     		ldr	r3, [r3]
 2019 0266 1A46     		mov	r2, r3
 2020 0268 1348     		ldr	r0, .L83+32
 2021 026a FFF7FEFF 		bl	printf
 2022              	.L70:
 344:pathfinding.c ****                     }
 345:pathfinding.c ****                 }
 346:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2023              		.loc 1 346 0
 2024 026e 0B4B     		ldr	r3, .L83+4
 2025 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2026 0272 032B     		cmp	r3, #3
 2027 0274 0BD1     		bne	.L72
 347:pathfinding.c ****                     newDirection = uTurn;
 2028              		.loc 1 347 0
 2029 0276 0323     		movs	r3, #3
 2030 0278 87F82330 		strb	r3, [r7, #35]
 348:pathfinding.c ****                     ignoreL = 0;
 2031              		.loc 1 348 0
 2032 027c 0A4B     		ldr	r3, .L83+16
 2033 027e 0022     		movs	r2, #0
 2034 0280 1A60     		str	r2, [r3]
 349:pathfinding.c ****                     ignoreR = 0;
 2035              		.loc 1 349 0
 2036 0282 0A4B     		ldr	r3, .L83+20
 2037 0284 0022     		movs	r2, #0
 2038 0286 1A60     		str	r2, [r3]
 350:pathfinding.c ****                     printf("U-turn\n");
 2039              		.loc 1 350 0
 2040 0288 0C48     		ldr	r0, .L83+36
 2041 028a FFF7FEFF 		bl	puts
 2042              	.L72:
 351:pathfinding.c ****                 }
 352:pathfinding.c ****                 currentCol--;
 2043              		.loc 1 352 0
 2044 028e BB6A     		ldr	r3, [r7, #40]
 2045 0290 013B     		subs	r3, r3, #1
 2046 0292 BB62     		str	r3, [r7, #40]
 353:pathfinding.c ****                 break;
 2047              		.loc 1 353 0
 2048 0294 6AE0     		b	.L62
 2049              	.L84:
 2050 0296 00BF     		.align	2
 2051              	.L83:
 2052 0298 00000000 		.word	currentRobotOrientation
 2053 029c 00000000 		.word	previousRobotOrientation
 2054 02a0 04000000 		.word	.LC1
 2055 02a4 14000000 		.word	.LC2
 2056 02a8 00000000 		.word	ignoreL
 2057 02ac 00000000 		.word	ignoreR
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 44


 2058 02b0 20000000 		.word	.LC3
 2059 02b4 2C000000 		.word	.LC4
 2060 02b8 44000000 		.word	.LC5
 2061 02bc 68000000 		.word	.LC6
 2062              	.L56:
 354:pathfinding.c ****             case 3: // next step is right
 355:pathfinding.c ****                 currentRobotOrientation = Right;
 2063              		.loc 1 355 0
 2064 02c0 614B     		ldr	r3, .L85
 2065 02c2 0322     		movs	r2, #3
 2066 02c4 1A70     		strb	r2, [r3]
 356:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2067              		.loc 1 356 0
 2068 02c6 614B     		ldr	r3, .L85+4
 2069 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 02ca 002B     		cmp	r3, #0
 2071 02cc 0BD1     		bne	.L73
 357:pathfinding.c ****                     newDirection = waitForRightTurn;
 2072              		.loc 1 357 0
 2073 02ce 0223     		movs	r3, #2
 2074 02d0 87F82330 		strb	r3, [r7, #35]
 358:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2075              		.loc 1 358 0
 2076 02d4 5E48     		ldr	r0, .L85+8
 2077 02d6 FFF7FEFF 		bl	puts
 359:pathfinding.c ****                     ignoreL = 0;
 2078              		.loc 1 359 0
 2079 02da 5E4B     		ldr	r3, .L85+12
 2080 02dc 0022     		movs	r2, #0
 2081 02de 1A60     		str	r2, [r3]
 360:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2082              		.loc 1 360 0
 2083 02e0 5D4B     		ldr	r3, .L85+16
 2084 02e2 0022     		movs	r2, #0
 2085 02e4 1A60     		str	r2, [r3]
 2086              	.L73:
 361:pathfinding.c ****                 }
 362:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2087              		.loc 1 362 0
 2088 02e6 594B     		ldr	r3, .L85+4
 2089 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2090 02ea 012B     		cmp	r3, #1
 2091 02ec 0BD1     		bne	.L74
 363:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2092              		.loc 1 363 0
 2093 02ee 0123     		movs	r3, #1
 2094 02f0 87F82330 		strb	r3, [r7, #35]
 364:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2095              		.loc 1 364 0
 2096 02f4 5948     		ldr	r0, .L85+20
 2097 02f6 FFF7FEFF 		bl	puts
 365:pathfinding.c ****                     ignoreL = 0;
 2098              		.loc 1 365 0
 2099 02fa 564B     		ldr	r3, .L85+12
 2100 02fc 0022     		movs	r2, #0
 2101 02fe 1A60     		str	r2, [r3]
 366:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 45


 2102              		.loc 1 366 0
 2103 0300 554B     		ldr	r3, .L85+16
 2104 0302 0022     		movs	r2, #0
 2105 0304 1A60     		str	r2, [r3]
 2106              	.L74:
 367:pathfinding.c ****                 }
 368:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2107              		.loc 1 368 0
 2108 0306 514B     		ldr	r3, .L85+4
 2109 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2110 030a 032B     		cmp	r3, #3
 2111 030c 19D1     		bne	.L75
 369:pathfinding.c ****                     // check if we only need to go forward to reach target
 370:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2112              		.loc 1 370 0
 2113 030e 7A69     		ldr	r2, [r7, #20]
 2114 0310 FB69     		ldr	r3, [r7, #28]
 2115 0312 9A42     		cmp	r2, r3
 2116 0314 0AD1     		bne	.L76
 2117              		.loc 1 370 0 is_stmt 0 discriminator 1
 2118 0316 BA6B     		ldr	r2, [r7, #56]
 2119 0318 FB6A     		ldr	r3, [r7, #44]
 2120 031a 9A42     		cmp	r2, r3
 2121 031c 06D1     		bne	.L76
 371:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2122              		.loc 1 371 0 is_stmt 1
 2123 031e 0423     		movs	r3, #4
 2124 0320 87F82330 		strb	r3, [r7, #35]
 372:pathfinding.c ****                         printf("Forward until target\n");
 2125              		.loc 1 372 0
 2126 0324 4E48     		ldr	r0, .L85+24
 2127 0326 FFF7FEFF 		bl	puts
 2128 032a 0AE0     		b	.L75
 2129              	.L76:
 373:pathfinding.c ****                     } else {
 374:pathfinding.c ****                         newDirection = GoForward;
 2130              		.loc 1 374 0
 2131 032c 0023     		movs	r3, #0
 2132 032e 87F82330 		strb	r3, [r7, #35]
 375:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2133              		.loc 1 375 0
 2134 0332 484B     		ldr	r3, .L85+12
 2135 0334 1968     		ldr	r1, [r3]
 2136 0336 484B     		ldr	r3, .L85+16
 2137 0338 1B68     		ldr	r3, [r3]
 2138 033a 1A46     		mov	r2, r3
 2139 033c 4948     		ldr	r0, .L85+28
 2140 033e FFF7FEFF 		bl	printf
 2141              	.L75:
 376:pathfinding.c ****                     }
 377:pathfinding.c ****                 }
 378:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2142              		.loc 1 378 0
 2143 0342 424B     		ldr	r3, .L85+4
 2144 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2145 0346 022B     		cmp	r3, #2
 2146 0348 0BD1     		bne	.L77
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 46


 379:pathfinding.c ****                     newDirection = uTurn;
 2147              		.loc 1 379 0
 2148 034a 0323     		movs	r3, #3
 2149 034c 87F82330 		strb	r3, [r7, #35]
 380:pathfinding.c ****                     ignoreL = 0;
 2150              		.loc 1 380 0
 2151 0350 404B     		ldr	r3, .L85+12
 2152 0352 0022     		movs	r2, #0
 2153 0354 1A60     		str	r2, [r3]
 381:pathfinding.c ****                     ignoreR = 0;
 2154              		.loc 1 381 0
 2155 0356 404B     		ldr	r3, .L85+16
 2156 0358 0022     		movs	r2, #0
 2157 035a 1A60     		str	r2, [r3]
 382:pathfinding.c ****                     printf("U-turn\n");
 2158              		.loc 1 382 0
 2159 035c 4248     		ldr	r0, .L85+32
 2160 035e FFF7FEFF 		bl	puts
 2161              	.L77:
 383:pathfinding.c ****                 }
 384:pathfinding.c ****                 currentCol++;
 2162              		.loc 1 384 0
 2163 0362 BB6A     		ldr	r3, [r7, #40]
 2164 0364 0133     		adds	r3, r3, #1
 2165 0366 BB62     		str	r3, [r7, #40]
 385:pathfinding.c ****                 break;
 2166              		.loc 1 385 0
 2167 0368 00E0     		b	.L62
 2168              	.L82:
 386:pathfinding.c ****             default:
 387:pathfinding.c ****                 break;
 2169              		.loc 1 387 0
 2170 036a 00BF     		nop
 2171              	.L62:
 388:pathfinding.c ****         }
 389:pathfinding.c ****         
 390:pathfinding.c ****         // add new direction to list
 391:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2172              		.loc 1 391 0
 2173 036c 3F4B     		ldr	r3, .L85+36
 2174 036e 1968     		ldr	r1, [r3]
 2175 0370 7A6A     		ldr	r2, [r7, #36]
 2176 0372 1346     		mov	r3, r2
 2177 0374 5B00     		lsls	r3, r3, #1
 2178 0376 1344     		add	r3, r3, r2
 2179 0378 9B00     		lsls	r3, r3, #2
 2180 037a 0B44     		add	r3, r3, r1
 2181 037c 97F82320 		ldrb	r2, [r7, #35]
 2182 0380 1A70     		strb	r2, [r3]
 392:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2183              		.loc 1 392 0
 2184 0382 3A4B     		ldr	r3, .L85+36
 2185 0384 1968     		ldr	r1, [r3]
 2186 0386 7A6A     		ldr	r2, [r7, #36]
 2187 0388 1346     		mov	r3, r2
 2188 038a 5B00     		lsls	r3, r3, #1
 2189 038c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 47


 2190 038e 9B00     		lsls	r3, r3, #2
 2191 0390 0B44     		add	r3, r3, r1
 2192 0392 304A     		ldr	r2, .L85+12
 2193 0394 1268     		ldr	r2, [r2]
 2194 0396 5A60     		str	r2, [r3, #4]
 393:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2195              		.loc 1 393 0
 2196 0398 344B     		ldr	r3, .L85+36
 2197 039a 1968     		ldr	r1, [r3]
 2198 039c 7A6A     		ldr	r2, [r7, #36]
 2199 039e 1346     		mov	r3, r2
 2200 03a0 5B00     		lsls	r3, r3, #1
 2201 03a2 1344     		add	r3, r3, r2
 2202 03a4 9B00     		lsls	r3, r3, #2
 2203 03a6 0B44     		add	r3, r3, r1
 2204 03a8 2B4A     		ldr	r2, .L85+16
 2205 03aa 1268     		ldr	r2, [r2]
 2206 03ac 9A60     		str	r2, [r3, #8]
 394:pathfinding.c ****         listIndex++; // increment instruction list index
 2207              		.loc 1 394 0
 2208 03ae 7B6A     		ldr	r3, [r7, #36]
 2209 03b0 0133     		adds	r3, r3, #1
 2210 03b2 7B62     		str	r3, [r7, #36]
 395:pathfinding.c ****         numSteps--; // decrement numSteps
 2211              		.loc 1 395 0
 2212 03b4 BB68     		ldr	r3, [r7, #8]
 2213 03b6 013B     		subs	r3, r3, #1
 2214 03b8 BB60     		str	r3, [r7, #8]
 2215              	.L49:
 2216              	.LBE18:
 248:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2217              		.loc 1 248 0
 2218 03ba BB68     		ldr	r3, [r7, #8]
 2219 03bc 002B     		cmp	r3, #0
 2220 03be BFF636AE 		bge	.L78
 2221              	.LBB19:
 396:pathfinding.c ****     }
 397:pathfinding.c ****     // process list, remove repeated forward outputs
 398:pathfinding.c ****     for(int i = 0; i < listIndex-1; i ++) {
 2222              		.loc 1 398 0
 2223 03c2 0023     		movs	r3, #0
 2224 03c4 BB61     		str	r3, [r7, #24]
 2225 03c6 35E0     		b	.L79
 2226              	.L81:
 399:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2227              		.loc 1 399 0
 2228 03c8 284B     		ldr	r3, .L85+36
 2229 03ca 1968     		ldr	r1, [r3]
 2230 03cc BA69     		ldr	r2, [r7, #24]
 2231 03ce 1346     		mov	r3, r2
 2232 03d0 5B00     		lsls	r3, r3, #1
 2233 03d2 1344     		add	r3, r3, r2
 2234 03d4 9B00     		lsls	r3, r3, #2
 2235 03d6 0B44     		add	r3, r3, r1
 2236 03d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2237 03da 244B     		ldr	r3, .L85+36
 2238 03dc 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 48


 2239 03de BB69     		ldr	r3, [r7, #24]
 2240 03e0 5A1C     		adds	r2, r3, #1
 2241 03e2 1346     		mov	r3, r2
 2242 03e4 5B00     		lsls	r3, r3, #1
 2243 03e6 1344     		add	r3, r3, r2
 2244 03e8 9B00     		lsls	r3, r3, #2
 2245 03ea 0344     		add	r3, r3, r0
 2246 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2247 03ee 9942     		cmp	r1, r3
 2248 03f0 1DD1     		bne	.L80
 400:pathfinding.c ****             instructionsList[i].direction = Skip;
 2249              		.loc 1 400 0
 2250 03f2 1E4B     		ldr	r3, .L85+36
 2251 03f4 1968     		ldr	r1, [r3]
 2252 03f6 BA69     		ldr	r2, [r7, #24]
 2253 03f8 1346     		mov	r3, r2
 2254 03fa 5B00     		lsls	r3, r3, #1
 2255 03fc 1344     		add	r3, r3, r2
 2256 03fe 9B00     		lsls	r3, r3, #2
 2257 0400 0B44     		add	r3, r3, r1
 2258 0402 0622     		movs	r2, #6
 2259 0404 1A70     		strb	r2, [r3]
 401:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2260              		.loc 1 401 0
 2261 0406 194B     		ldr	r3, .L85+36
 2262 0408 1968     		ldr	r1, [r3]
 2263 040a BA69     		ldr	r2, [r7, #24]
 2264 040c 1346     		mov	r3, r2
 2265 040e 5B00     		lsls	r3, r3, #1
 2266 0410 1344     		add	r3, r3, r2
 2267 0412 9B00     		lsls	r3, r3, #2
 2268 0414 0B44     		add	r3, r3, r1
 2269 0416 0022     		movs	r2, #0
 2270 0418 5A60     		str	r2, [r3, #4]
 402:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2271              		.loc 1 402 0
 2272 041a 144B     		ldr	r3, .L85+36
 2273 041c 1968     		ldr	r1, [r3]
 2274 041e BA69     		ldr	r2, [r7, #24]
 2275 0420 1346     		mov	r3, r2
 2276 0422 5B00     		lsls	r3, r3, #1
 2277 0424 1344     		add	r3, r3, r2
 2278 0426 9B00     		lsls	r3, r3, #2
 2279 0428 0B44     		add	r3, r3, r1
 2280 042a 0022     		movs	r2, #0
 2281 042c 9A60     		str	r2, [r3, #8]
 2282              	.L80:
 398:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2283              		.loc 1 398 0 discriminator 2
 2284 042e BB69     		ldr	r3, [r7, #24]
 2285 0430 0133     		adds	r3, r3, #1
 2286 0432 BB61     		str	r3, [r7, #24]
 2287              	.L79:
 398:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2288              		.loc 1 398 0 is_stmt 0 discriminator 1
 2289 0434 7B6A     		ldr	r3, [r7, #36]
 2290 0436 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 49


 2291 0438 BB69     		ldr	r3, [r7, #24]
 2292 043a 9A42     		cmp	r2, r3
 2293 043c C4DC     		bgt	.L81
 2294              	.LBE19:
 403:pathfinding.c ****         }
 404:pathfinding.c ****     }
 405:pathfinding.c **** }
 2295              		.loc 1 405 0 is_stmt 1
 2296 043e 00BF     		nop
 2297 0440 3037     		adds	r7, r7, #48
 2298              		.cfi_def_cfa_offset 8
 2299 0442 BD46     		mov	sp, r7
 2300              		.cfi_def_cfa_register 13
 2301              		@ sp needed
 2302 0444 80BD     		pop	{r7, pc}
 2303              	.L86:
 2304 0446 00BF     		.align	2
 2305              	.L85:
 2306 0448 00000000 		.word	currentRobotOrientation
 2307 044c 00000000 		.word	previousRobotOrientation
 2308 0450 14000000 		.word	.LC2
 2309 0454 00000000 		.word	ignoreL
 2310 0458 00000000 		.word	ignoreR
 2311 045c 20000000 		.word	.LC3
 2312 0460 2C000000 		.word	.LC4
 2313 0464 44000000 		.word	.LC5
 2314 0468 68000000 		.word	.LC6
 2315 046c 00000000 		.word	instructionsList
 2316              		.cfi_endproc
 2317              	.LFE5:
 2318              		.size	getPathInstructions, .-getPathInstructions
 2319              		.section	.text.checkPathDirection,"ax",%progbits
 2320              		.align	2
 2321              		.global	checkPathDirection
 2322              		.thumb
 2323              		.thumb_func
 2324              		.type	checkPathDirection, %function
 2325              	checkPathDirection:
 2326              	.LFB6:
 406:pathfinding.c **** 
 407:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2327              		.loc 1 407 0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 8
 2330              		@ frame_needed = 1, uses_anonymous_args = 0
 2331              		@ link register save eliminated.
 2332 0000 80B4     		push	{r7}
 2333              		.cfi_def_cfa_offset 4
 2334              		.cfi_offset 7, -4
 2335 0002 83B0     		sub	sp, sp, #12
 2336              		.cfi_def_cfa_offset 16
 2337 0004 00AF     		add	r7, sp, #0
 2338              		.cfi_def_cfa_register 7
 2339 0006 7860     		str	r0, [r7, #4]
 2340 0008 3960     		str	r1, [r7]
 408:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 409:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 50


 2341              		.loc 1 409 0
 2342 000a 7B68     		ldr	r3, [r7, #4]
 2343 000c 5A1E     		subs	r2, r3, #1
 2344 000e 3E49     		ldr	r1, .L97
 2345 0010 1346     		mov	r3, r2
 2346 0012 DB00     		lsls	r3, r3, #3
 2347 0014 1344     		add	r3, r3, r2
 2348 0016 5B00     		lsls	r3, r3, #1
 2349 0018 1344     		add	r3, r3, r2
 2350 001a 3A68     		ldr	r2, [r7]
 2351 001c 1344     		add	r3, r3, r2
 2352 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2353 0022 082B     		cmp	r3, #8
 2354 0024 0DD0     		beq	.L88
 2355              		.loc 1 409 0 is_stmt 0 discriminator 1
 2356 0026 7B68     		ldr	r3, [r7, #4]
 2357 0028 5A1E     		subs	r2, r3, #1
 2358 002a 3749     		ldr	r1, .L97
 2359 002c 1346     		mov	r3, r2
 2360 002e DB00     		lsls	r3, r3, #3
 2361 0030 1344     		add	r3, r3, r2
 2362 0032 5B00     		lsls	r3, r3, #1
 2363 0034 1344     		add	r3, r3, r2
 2364 0036 3A68     		ldr	r2, [r7]
 2365 0038 1344     		add	r3, r3, r2
 2366 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2367 003e 092B     		cmp	r3, #9
 2368 0040 01D1     		bne	.L89
 2369              	.L88:
 410:pathfinding.c ****         return 0; // up 
 2370              		.loc 1 410 0 is_stmt 1
 2371 0042 0023     		movs	r3, #0
 2372 0044 5AE0     		b	.L90
 2373              	.L89:
 411:pathfinding.c ****     }
 412:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2374              		.loc 1 412 0
 2375 0046 7B68     		ldr	r3, [r7, #4]
 2376 0048 5A1C     		adds	r2, r3, #1
 2377 004a 2F49     		ldr	r1, .L97
 2378 004c 1346     		mov	r3, r2
 2379 004e DB00     		lsls	r3, r3, #3
 2380 0050 1344     		add	r3, r3, r2
 2381 0052 5B00     		lsls	r3, r3, #1
 2382 0054 1344     		add	r3, r3, r2
 2383 0056 3A68     		ldr	r2, [r7]
 2384 0058 1344     		add	r3, r3, r2
 2385 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2386 005e 082B     		cmp	r3, #8
 2387 0060 0DD0     		beq	.L91
 2388              		.loc 1 412 0 is_stmt 0 discriminator 1
 2389 0062 7B68     		ldr	r3, [r7, #4]
 2390 0064 5A1C     		adds	r2, r3, #1
 2391 0066 2849     		ldr	r1, .L97
 2392 0068 1346     		mov	r3, r2
 2393 006a DB00     		lsls	r3, r3, #3
 2394 006c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 51


 2395 006e 5B00     		lsls	r3, r3, #1
 2396 0070 1344     		add	r3, r3, r2
 2397 0072 3A68     		ldr	r2, [r7]
 2398 0074 1344     		add	r3, r3, r2
 2399 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2400 007a 092B     		cmp	r3, #9
 2401 007c 01D1     		bne	.L92
 2402              	.L91:
 413:pathfinding.c ****         return 1; // down
 2403              		.loc 1 413 0 is_stmt 1
 2404 007e 0123     		movs	r3, #1
 2405 0080 3CE0     		b	.L90
 2406              	.L92:
 414:pathfinding.c ****     }
 415:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2407              		.loc 1 415 0
 2408 0082 3B68     		ldr	r3, [r7]
 2409 0084 591E     		subs	r1, r3, #1
 2410 0086 2048     		ldr	r0, .L97
 2411 0088 7A68     		ldr	r2, [r7, #4]
 2412 008a 1346     		mov	r3, r2
 2413 008c DB00     		lsls	r3, r3, #3
 2414 008e 1344     		add	r3, r3, r2
 2415 0090 5B00     		lsls	r3, r3, #1
 2416 0092 1344     		add	r3, r3, r2
 2417 0094 0B44     		add	r3, r3, r1
 2418 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2419 009a 082B     		cmp	r3, #8
 2420 009c 0DD0     		beq	.L93
 2421              		.loc 1 415 0 is_stmt 0 discriminator 1
 2422 009e 3B68     		ldr	r3, [r7]
 2423 00a0 591E     		subs	r1, r3, #1
 2424 00a2 1948     		ldr	r0, .L97
 2425 00a4 7A68     		ldr	r2, [r7, #4]
 2426 00a6 1346     		mov	r3, r2
 2427 00a8 DB00     		lsls	r3, r3, #3
 2428 00aa 1344     		add	r3, r3, r2
 2429 00ac 5B00     		lsls	r3, r3, #1
 2430 00ae 1344     		add	r3, r3, r2
 2431 00b0 0B44     		add	r3, r3, r1
 2432 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2433 00b6 092B     		cmp	r3, #9
 2434 00b8 01D1     		bne	.L94
 2435              	.L93:
 416:pathfinding.c ****         return 2; // left
 2436              		.loc 1 416 0 is_stmt 1
 2437 00ba 0223     		movs	r3, #2
 2438 00bc 1EE0     		b	.L90
 2439              	.L94:
 417:pathfinding.c ****     }
 418:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2440              		.loc 1 418 0
 2441 00be 3B68     		ldr	r3, [r7]
 2442 00c0 591C     		adds	r1, r3, #1
 2443 00c2 1148     		ldr	r0, .L97
 2444 00c4 7A68     		ldr	r2, [r7, #4]
 2445 00c6 1346     		mov	r3, r2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 52


 2446 00c8 DB00     		lsls	r3, r3, #3
 2447 00ca 1344     		add	r3, r3, r2
 2448 00cc 5B00     		lsls	r3, r3, #1
 2449 00ce 1344     		add	r3, r3, r2
 2450 00d0 0B44     		add	r3, r3, r1
 2451 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2452 00d6 082B     		cmp	r3, #8
 2453 00d8 0DD0     		beq	.L95
 2454              		.loc 1 418 0 is_stmt 0 discriminator 1
 2455 00da 3B68     		ldr	r3, [r7]
 2456 00dc 591C     		adds	r1, r3, #1
 2457 00de 0A48     		ldr	r0, .L97
 2458 00e0 7A68     		ldr	r2, [r7, #4]
 2459 00e2 1346     		mov	r3, r2
 2460 00e4 DB00     		lsls	r3, r3, #3
 2461 00e6 1344     		add	r3, r3, r2
 2462 00e8 5B00     		lsls	r3, r3, #1
 2463 00ea 1344     		add	r3, r3, r2
 2464 00ec 0B44     		add	r3, r3, r1
 2465 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2466 00f2 092B     		cmp	r3, #9
 2467 00f4 01D1     		bne	.L96
 2468              	.L95:
 419:pathfinding.c ****         return 3; // right
 2469              		.loc 1 419 0 is_stmt 1
 2470 00f6 0323     		movs	r3, #3
 2471 00f8 00E0     		b	.L90
 2472              	.L96:
 420:pathfinding.c ****     }
 421:pathfinding.c ****     return 5; // default- will never reach this
 2473              		.loc 1 421 0
 2474 00fa 0523     		movs	r3, #5
 2475              	.L90:
 422:pathfinding.c **** }
 2476              		.loc 1 422 0
 2477 00fc 1846     		mov	r0, r3
 2478 00fe 0C37     		adds	r7, r7, #12
 2479              		.cfi_def_cfa_offset 4
 2480 0100 BD46     		mov	sp, r7
 2481              		.cfi_def_cfa_register 13
 2482              		@ sp needed
 2483 0102 80BC     		pop	{r7}
 2484              		.cfi_restore 7
 2485              		.cfi_def_cfa_offset 0
 2486 0104 7047     		bx	lr
 2487              	.L98:
 2488 0106 00BF     		.align	2
 2489              	.L97:
 2490 0108 00000000 		.word	map
 2491              		.cfi_endproc
 2492              	.LFE6:
 2493              		.size	checkPathDirection, .-checkPathDirection
 2494              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2495              		.align	2
 2496              		.global	checkIgnoreTurn
 2497              		.thumb
 2498              		.thumb_func
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 53


 2499              		.type	checkIgnoreTurn, %function
 2500              	checkIgnoreTurn:
 2501              	.LFB7:
 423:pathfinding.c **** 
 424:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2502              		.loc 1 424 0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 16
 2505              		@ frame_needed = 1, uses_anonymous_args = 0
 2506              		@ link register save eliminated.
 2507 0000 80B4     		push	{r7}
 2508              		.cfi_def_cfa_offset 4
 2509              		.cfi_offset 7, -4
 2510 0002 85B0     		sub	sp, sp, #20
 2511              		.cfi_def_cfa_offset 24
 2512 0004 00AF     		add	r7, sp, #0
 2513              		.cfi_def_cfa_register 7
 2514 0006 0346     		mov	r3, r0
 2515 0008 B960     		str	r1, [r7, #8]
 2516 000a 7A60     		str	r2, [r7, #4]
 2517 000c FB73     		strb	r3, [r7, #15]
 425:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 426:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2518              		.loc 1 426 0
 2519 000e BB68     		ldr	r3, [r7, #8]
 2520 0010 5A1E     		subs	r2, r3, #1
 2521 0012 4149     		ldr	r1, .L117
 2522 0014 1346     		mov	r3, r2
 2523 0016 DB00     		lsls	r3, r3, #3
 2524 0018 1344     		add	r3, r3, r2
 2525 001a 5B00     		lsls	r3, r3, #1
 2526 001c 1344     		add	r3, r3, r2
 2527 001e 7A68     		ldr	r2, [r7, #4]
 2528 0020 1344     		add	r3, r3, r2
 2529 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2530 0026 002B     		cmp	r3, #0
 2531 0028 11D1     		bne	.L100
 427:pathfinding.c ****         switch (robotOrientation) {
 2532              		.loc 1 427 0
 2533 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2534 002c 022B     		cmp	r3, #2
 2535 002e 02D0     		beq	.L102
 2536 0030 032B     		cmp	r3, #3
 2537 0032 06D0     		beq	.L103
 428:pathfinding.c ****             case Left:
 429:pathfinding.c ****                 ignoreR++;
 430:pathfinding.c ****                 break;
 431:pathfinding.c ****             case Right:
 432:pathfinding.c ****                 ignoreL++;
 433:pathfinding.c ****                 break;
 434:pathfinding.c ****             default:
 435:pathfinding.c ****                 break; // ignore when going up and down
 2538              		.loc 1 435 0
 2539 0034 0BE0     		b	.L100
 2540              	.L102:
 429:pathfinding.c ****                 break;
 2541              		.loc 1 429 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 54


 2542 0036 394B     		ldr	r3, .L117+4
 2543 0038 1B68     		ldr	r3, [r3]
 2544 003a 0133     		adds	r3, r3, #1
 2545 003c 374A     		ldr	r2, .L117+4
 2546 003e 1360     		str	r3, [r2]
 430:pathfinding.c ****             case Right:
 2547              		.loc 1 430 0
 2548 0040 05E0     		b	.L100
 2549              	.L103:
 432:pathfinding.c ****                 break;
 2550              		.loc 1 432 0
 2551 0042 374B     		ldr	r3, .L117+8
 2552 0044 1B68     		ldr	r3, [r3]
 2553 0046 0133     		adds	r3, r3, #1
 2554 0048 354A     		ldr	r2, .L117+8
 2555 004a 1360     		str	r3, [r2]
 433:pathfinding.c ****             default:
 2556              		.loc 1 433 0
 2557 004c 00BF     		nop
 2558              	.L100:
 436:pathfinding.c ****         }
 437:pathfinding.c ****     }
 438:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2559              		.loc 1 438 0
 2560 004e BB68     		ldr	r3, [r7, #8]
 2561 0050 5A1C     		adds	r2, r3, #1
 2562 0052 3149     		ldr	r1, .L117
 2563 0054 1346     		mov	r3, r2
 2564 0056 DB00     		lsls	r3, r3, #3
 2565 0058 1344     		add	r3, r3, r2
 2566 005a 5B00     		lsls	r3, r3, #1
 2567 005c 1344     		add	r3, r3, r2
 2568 005e 7A68     		ldr	r2, [r7, #4]
 2569 0060 1344     		add	r3, r3, r2
 2570 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2571 0066 002B     		cmp	r3, #0
 2572 0068 11D1     		bne	.L104
 439:pathfinding.c ****         switch (robotOrientation) {
 2573              		.loc 1 439 0
 2574 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2575 006c 022B     		cmp	r3, #2
 2576 006e 02D0     		beq	.L106
 2577 0070 032B     		cmp	r3, #3
 2578 0072 06D0     		beq	.L107
 440:pathfinding.c ****             case Left:
 441:pathfinding.c ****                 ignoreL++;
 442:pathfinding.c ****                 break;
 443:pathfinding.c ****             case Right:
 444:pathfinding.c ****                 ignoreR++;
 445:pathfinding.c ****                 break;
 446:pathfinding.c ****             default:
 447:pathfinding.c ****                 break;
 2579              		.loc 1 447 0
 2580 0074 0BE0     		b	.L104
 2581              	.L106:
 441:pathfinding.c ****                 break;
 2582              		.loc 1 441 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 55


 2583 0076 2A4B     		ldr	r3, .L117+8
 2584 0078 1B68     		ldr	r3, [r3]
 2585 007a 0133     		adds	r3, r3, #1
 2586 007c 284A     		ldr	r2, .L117+8
 2587 007e 1360     		str	r3, [r2]
 442:pathfinding.c ****             case Right:
 2588              		.loc 1 442 0
 2589 0080 05E0     		b	.L104
 2590              	.L107:
 444:pathfinding.c ****                 break;
 2591              		.loc 1 444 0
 2592 0082 264B     		ldr	r3, .L117+4
 2593 0084 1B68     		ldr	r3, [r3]
 2594 0086 0133     		adds	r3, r3, #1
 2595 0088 244A     		ldr	r2, .L117+4
 2596 008a 1360     		str	r3, [r2]
 445:pathfinding.c ****             default:
 2597              		.loc 1 445 0
 2598 008c 00BF     		nop
 2599              	.L104:
 448:pathfinding.c ****         }
 449:pathfinding.c ****     }
 450:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2600              		.loc 1 450 0
 2601 008e 7B68     		ldr	r3, [r7, #4]
 2602 0090 591E     		subs	r1, r3, #1
 2603 0092 2148     		ldr	r0, .L117
 2604 0094 BA68     		ldr	r2, [r7, #8]
 2605 0096 1346     		mov	r3, r2
 2606 0098 DB00     		lsls	r3, r3, #3
 2607 009a 1344     		add	r3, r3, r2
 2608 009c 5B00     		lsls	r3, r3, #1
 2609 009e 1344     		add	r3, r3, r2
 2610 00a0 0B44     		add	r3, r3, r1
 2611 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2612 00a6 002B     		cmp	r3, #0
 2613 00a8 11D1     		bne	.L108
 451:pathfinding.c ****         switch (robotOrientation) {
 2614              		.loc 1 451 0
 2615 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2616 00ac 002B     		cmp	r3, #0
 2617 00ae 02D0     		beq	.L110
 2618 00b0 012B     		cmp	r3, #1
 2619 00b2 06D0     		beq	.L111
 452:pathfinding.c ****             case Up:
 453:pathfinding.c ****                 ignoreL++;
 454:pathfinding.c ****                 break;
 455:pathfinding.c ****             case Down:
 456:pathfinding.c ****                 ignoreR++;
 457:pathfinding.c ****                 break;
 458:pathfinding.c ****             default:
 459:pathfinding.c ****                 break;
 2620              		.loc 1 459 0
 2621 00b4 0BE0     		b	.L108
 2622              	.L110:
 453:pathfinding.c ****                 break;
 2623              		.loc 1 453 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 56


 2624 00b6 1A4B     		ldr	r3, .L117+8
 2625 00b8 1B68     		ldr	r3, [r3]
 2626 00ba 0133     		adds	r3, r3, #1
 2627 00bc 184A     		ldr	r2, .L117+8
 2628 00be 1360     		str	r3, [r2]
 454:pathfinding.c ****             case Down:
 2629              		.loc 1 454 0
 2630 00c0 05E0     		b	.L108
 2631              	.L111:
 456:pathfinding.c ****                 break;
 2632              		.loc 1 456 0
 2633 00c2 164B     		ldr	r3, .L117+4
 2634 00c4 1B68     		ldr	r3, [r3]
 2635 00c6 0133     		adds	r3, r3, #1
 2636 00c8 144A     		ldr	r2, .L117+4
 2637 00ca 1360     		str	r3, [r2]
 457:pathfinding.c ****             default:
 2638              		.loc 1 457 0
 2639 00cc 00BF     		nop
 2640              	.L108:
 460:pathfinding.c ****         }
 461:pathfinding.c ****     }
 462:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2641              		.loc 1 462 0
 2642 00ce 7B68     		ldr	r3, [r7, #4]
 2643 00d0 591C     		adds	r1, r3, #1
 2644 00d2 1148     		ldr	r0, .L117
 2645 00d4 BA68     		ldr	r2, [r7, #8]
 2646 00d6 1346     		mov	r3, r2
 2647 00d8 DB00     		lsls	r3, r3, #3
 2648 00da 1344     		add	r3, r3, r2
 2649 00dc 5B00     		lsls	r3, r3, #1
 2650 00de 1344     		add	r3, r3, r2
 2651 00e0 0B44     		add	r3, r3, r1
 2652 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2653 00e6 002B     		cmp	r3, #0
 2654 00e8 11D1     		bne	.L116
 463:pathfinding.c ****         switch (robotOrientation) {
 2655              		.loc 1 463 0
 2656 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2657 00ec 002B     		cmp	r3, #0
 2658 00ee 02D0     		beq	.L114
 2659 00f0 012B     		cmp	r3, #1
 2660 00f2 06D0     		beq	.L115
 464:pathfinding.c ****             case Up:
 465:pathfinding.c ****                 ignoreR++;
 466:pathfinding.c ****                 break;
 467:pathfinding.c ****             case Down:
 468:pathfinding.c ****                 ignoreL++;
 469:pathfinding.c ****                 break;
 470:pathfinding.c ****             default:
 471:pathfinding.c ****                 break;
 2661              		.loc 1 471 0
 2662 00f4 0BE0     		b	.L112
 2663              	.L114:
 465:pathfinding.c ****                 break;
 2664              		.loc 1 465 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 57


 2665 00f6 094B     		ldr	r3, .L117+4
 2666 00f8 1B68     		ldr	r3, [r3]
 2667 00fa 0133     		adds	r3, r3, #1
 2668 00fc 074A     		ldr	r2, .L117+4
 2669 00fe 1360     		str	r3, [r2]
 466:pathfinding.c ****             case Down:
 2670              		.loc 1 466 0
 2671 0100 05E0     		b	.L112
 2672              	.L115:
 468:pathfinding.c ****                 break;
 2673              		.loc 1 468 0
 2674 0102 074B     		ldr	r3, .L117+8
 2675 0104 1B68     		ldr	r3, [r3]
 2676 0106 0133     		adds	r3, r3, #1
 2677 0108 054A     		ldr	r2, .L117+8
 2678 010a 1360     		str	r3, [r2]
 469:pathfinding.c ****             default:
 2679              		.loc 1 469 0
 2680 010c 00BF     		nop
 2681              	.L112:
 2682              	.L116:
 472:pathfinding.c ****         }
 473:pathfinding.c ****     }
 474:pathfinding.c **** }
 2683              		.loc 1 474 0
 2684 010e 00BF     		nop
 2685 0110 1437     		adds	r7, r7, #20
 2686              		.cfi_def_cfa_offset 4
 2687 0112 BD46     		mov	sp, r7
 2688              		.cfi_def_cfa_register 13
 2689              		@ sp needed
 2690 0114 80BC     		pop	{r7}
 2691              		.cfi_restore 7
 2692              		.cfi_def_cfa_offset 0
 2693 0116 7047     		bx	lr
 2694              	.L118:
 2695              		.align	2
 2696              	.L117:
 2697 0118 00000000 		.word	map
 2698 011c 00000000 		.word	ignoreR
 2699 0120 00000000 		.word	ignoreL
 2700              		.cfi_endproc
 2701              	.LFE7:
 2702              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 2703              		.section	.text.getTargetOrientation,"ax",%progbits
 2704              		.align	2
 2705              		.global	getTargetOrientation
 2706              		.thumb
 2707              		.thumb_func
 2708              		.type	getTargetOrientation, %function
 2709              	getTargetOrientation:
 2710              	.LFB8:
 475:pathfinding.c **** 
 476:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 2711              		.loc 1 476 0
 2712              		.cfi_startproc
 2713              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 58


 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715              		@ link register save eliminated.
 2716 0000 80B4     		push	{r7}
 2717              		.cfi_def_cfa_offset 4
 2718              		.cfi_offset 7, -4
 2719 0002 83B0     		sub	sp, sp, #12
 2720              		.cfi_def_cfa_offset 16
 2721 0004 00AF     		add	r7, sp, #0
 2722              		.cfi_def_cfa_register 7
 2723 0006 7860     		str	r0, [r7, #4]
 2724 0008 3960     		str	r1, [r7]
 477:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 2725              		.loc 1 477 0
 2726 000a 7B68     		ldr	r3, [r7, #4]
 2727 000c 5A1C     		adds	r2, r3, #1
 2728 000e 2249     		ldr	r1, .L125
 2729 0010 1346     		mov	r3, r2
 2730 0012 DB00     		lsls	r3, r3, #3
 2731 0014 1344     		add	r3, r3, r2
 2732 0016 5B00     		lsls	r3, r3, #1
 2733 0018 1344     		add	r3, r3, r2
 2734 001a 3A68     		ldr	r2, [r7]
 2735 001c 1344     		add	r3, r3, r2
 2736 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2737 0022 082B     		cmp	r3, #8
 2738 0024 01D1     		bne	.L120
 478:pathfinding.c ****         return 0; // robot will be travelling up
 2739              		.loc 1 478 0
 2740 0026 0023     		movs	r3, #0
 2741 0028 30E0     		b	.L121
 2742              	.L120:
 479:pathfinding.c ****     }
 480:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 2743              		.loc 1 480 0
 2744 002a 7B68     		ldr	r3, [r7, #4]
 2745 002c 5A1E     		subs	r2, r3, #1
 2746 002e 1A49     		ldr	r1, .L125
 2747 0030 1346     		mov	r3, r2
 2748 0032 DB00     		lsls	r3, r3, #3
 2749 0034 1344     		add	r3, r3, r2
 2750 0036 5B00     		lsls	r3, r3, #1
 2751 0038 1344     		add	r3, r3, r2
 2752 003a 3A68     		ldr	r2, [r7]
 2753 003c 1344     		add	r3, r3, r2
 2754 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2755 0042 082B     		cmp	r3, #8
 2756 0044 01D1     		bne	.L122
 481:pathfinding.c ****         return 1; // robot will be travelling down
 2757              		.loc 1 481 0
 2758 0046 0123     		movs	r3, #1
 2759 0048 20E0     		b	.L121
 2760              	.L122:
 482:pathfinding.c ****     }
 483:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 2761              		.loc 1 483 0
 2762 004a 3B68     		ldr	r3, [r7]
 2763 004c 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 59


 2764 004e 1248     		ldr	r0, .L125
 2765 0050 7A68     		ldr	r2, [r7, #4]
 2766 0052 1346     		mov	r3, r2
 2767 0054 DB00     		lsls	r3, r3, #3
 2768 0056 1344     		add	r3, r3, r2
 2769 0058 5B00     		lsls	r3, r3, #1
 2770 005a 1344     		add	r3, r3, r2
 2771 005c 0B44     		add	r3, r3, r1
 2772 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2773 0062 082B     		cmp	r3, #8
 2774 0064 01D1     		bne	.L123
 484:pathfinding.c ****         return 2; // robot will be travelling left
 2775              		.loc 1 484 0
 2776 0066 0223     		movs	r3, #2
 2777 0068 10E0     		b	.L121
 2778              	.L123:
 485:pathfinding.c ****     }
 486:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 2779              		.loc 1 486 0
 2780 006a 3B68     		ldr	r3, [r7]
 2781 006c 591E     		subs	r1, r3, #1
 2782 006e 0A48     		ldr	r0, .L125
 2783 0070 7A68     		ldr	r2, [r7, #4]
 2784 0072 1346     		mov	r3, r2
 2785 0074 DB00     		lsls	r3, r3, #3
 2786 0076 1344     		add	r3, r3, r2
 2787 0078 5B00     		lsls	r3, r3, #1
 2788 007a 1344     		add	r3, r3, r2
 2789 007c 0B44     		add	r3, r3, r1
 2790 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2791 0082 082B     		cmp	r3, #8
 2792 0084 01D1     		bne	.L124
 487:pathfinding.c ****         return 3; // robot will be travelling right
 2793              		.loc 1 487 0
 2794 0086 0323     		movs	r3, #3
 2795 0088 00E0     		b	.L121
 2796              	.L124:
 488:pathfinding.c ****     }
 489:pathfinding.c ****     return 5; // placeholder
 2797              		.loc 1 489 0
 2798 008a 0523     		movs	r3, #5
 2799              	.L121:
 490:pathfinding.c **** }
 2800              		.loc 1 490 0
 2801 008c 1846     		mov	r0, r3
 2802 008e 0C37     		adds	r7, r7, #12
 2803              		.cfi_def_cfa_offset 4
 2804 0090 BD46     		mov	sp, r7
 2805              		.cfi_def_cfa_register 13
 2806              		@ sp needed
 2807 0092 80BC     		pop	{r7}
 2808              		.cfi_restore 7
 2809              		.cfi_def_cfa_offset 0
 2810 0094 7047     		bx	lr
 2811              	.L126:
 2812 0096 00BF     		.align	2
 2813              	.L125:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 60


 2814 0098 00000000 		.word	map
 2815              		.cfi_endproc
 2816              	.LFE8:
 2817              		.size	getTargetOrientation, .-getTargetOrientation
 2818              		.section	.text.instructionsListLength,"ax",%progbits
 2819              		.align	2
 2820              		.global	instructionsListLength
 2821              		.thumb
 2822              		.thumb_func
 2823              		.type	instructionsListLength, %function
 2824              	instructionsListLength:
 2825              	.LFB9:
 491:pathfinding.c **** uint8_t instructionsListLength() {
 2826              		.loc 1 491 0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 0
 2829              		@ frame_needed = 1, uses_anonymous_args = 0
 2830              		@ link register save eliminated.
 2831 0000 80B4     		push	{r7}
 2832              		.cfi_def_cfa_offset 4
 2833              		.cfi_offset 7, -4
 2834 0002 00AF     		add	r7, sp, #0
 2835              		.cfi_def_cfa_register 7
 492:pathfinding.c ****     return numSteps;
 2836              		.loc 1 492 0
 2837 0004 034B     		ldr	r3, .L129
 2838 0006 1B68     		ldr	r3, [r3]
 2839 0008 DBB2     		uxtb	r3, r3
 493:pathfinding.c **** }
 2840              		.loc 1 493 0
 2841 000a 1846     		mov	r0, r3
 2842 000c BD46     		mov	sp, r7
 2843              		.cfi_def_cfa_register 13
 2844              		@ sp needed
 2845 000e 80BC     		pop	{r7}
 2846              		.cfi_restore 7
 2847              		.cfi_def_cfa_offset 0
 2848 0010 7047     		bx	lr
 2849              	.L130:
 2850 0012 00BF     		.align	2
 2851              	.L129:
 2852 0014 04000000 		.word	numSteps
 2853              		.cfi_endproc
 2854              	.LFE9:
 2855              		.size	instructionsListLength, .-instructionsListLength
 2856              		.section	.text.findPath,"ax",%progbits
 2857              		.align	2
 2858              		.global	findPath
 2859              		.thumb
 2860              		.thumb_func
 2861              		.type	findPath, %function
 2862              	findPath:
 2863              	.LFB10:
 494:pathfinding.c **** 
 495:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 2864              		.loc 1 495 0
 2865              		.cfi_startproc
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 61


 2866              		@ args = 0, pretend = 0, frame = 32
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868 0000 90B5     		push	{r4, r7, lr}
 2869              		.cfi_def_cfa_offset 12
 2870              		.cfi_offset 4, -12
 2871              		.cfi_offset 7, -8
 2872              		.cfi_offset 14, -4
 2873 0002 8BB0     		sub	sp, sp, #44
 2874              		.cfi_def_cfa_offset 56
 2875 0004 02AF     		add	r7, sp, #8
 2876              		.cfi_def_cfa 7, 48
 2877 0006 F860     		str	r0, [r7, #12]
 2878 0008 B960     		str	r1, [r7, #8]
 2879 000a 7A60     		str	r2, [r7, #4]
 496:pathfinding.c ****     clearMap(map); // clear map between each pass
 2880              		.loc 1 496 0
 2881 000c F868     		ldr	r0, [r7, #12]
 2882 000e FFF7FEFF 		bl	clearMap
 497:pathfinding.c ****     struct Location startLocation, targetLocation;
 498:pathfinding.c ****     startLocation.row = start_pos[0];
 2883              		.loc 1 498 0
 2884 0012 184B     		ldr	r3, .L133
 2885 0014 1B68     		ldr	r3, [r3]
 2886 0016 BB61     		str	r3, [r7, #24]
 499:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 2887              		.loc 1 499 0
 2888 0018 164B     		ldr	r3, .L133
 2889 001a 5B68     		ldr	r3, [r3, #4]
 2890 001c FB61     		str	r3, [r7, #28]
 500:pathfinding.c ****     targetLocation.row = food_list[i][0];
 2891              		.loc 1 500 0
 2892 001e 7B68     		ldr	r3, [r7, #4]
 2893 0020 DB00     		lsls	r3, r3, #3
 2894 0022 BA68     		ldr	r2, [r7, #8]
 2895 0024 1344     		add	r3, r3, r2
 2896 0026 1B68     		ldr	r3, [r3]
 2897 0028 3B61     		str	r3, [r7, #16]
 501:pathfinding.c ****     targetLocation.col = food_list[i][1];
 2898              		.loc 1 501 0
 2899 002a 7B68     		ldr	r3, [r7, #4]
 2900 002c DB00     		lsls	r3, r3, #3
 2901 002e BA68     		ldr	r2, [r7, #8]
 2902 0030 1344     		add	r3, r3, r2
 2903 0032 5B68     		ldr	r3, [r3, #4]
 2904 0034 7B61     		str	r3, [r7, #20]
 502:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 2905              		.loc 1 502 0
 2906 0036 7B69     		ldr	r3, [r7, #20]
 2907 0038 0093     		str	r3, [sp]
 2908 003a 3B69     		ldr	r3, [r7, #16]
 2909 003c 07F11802 		add	r2, r7, #24
 2910 0040 06CA     		ldmia	r2, {r1, r2}
 2911 0042 F868     		ldr	r0, [r7, #12]
 2912 0044 FFF7FEFF 		bl	dijkstra
 503:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 2913              		.loc 1 503 0
 2914 0048 0B4B     		ldr	r3, .L133+4
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 62


 2915 004a 1C68     		ldr	r4, [r3]
 2916 004c 6A46     		mov	r2, sp
 2917 004e 07F11003 		add	r3, r7, #16
 2918 0052 93E80300 		ldmia	r3, {r0, r1}
 2919 0056 82E80300 		stmia	r2, {r0, r1}
 2920 005a 07F11803 		add	r3, r7, #24
 2921 005e 0CCB     		ldmia	r3, {r2, r3}
 2922 0060 2146     		mov	r1, r4
 2923 0062 F868     		ldr	r0, [r7, #12]
 2924 0064 FFF7FEFF 		bl	getPathInstructions
 504:pathfinding.c ****     return instructionsList;
 2925              		.loc 1 504 0
 2926 0068 044B     		ldr	r3, .L133+8
 2927 006a 1B68     		ldr	r3, [r3]
 505:pathfinding.c **** }
 2928              		.loc 1 505 0
 2929 006c 1846     		mov	r0, r3
 2930 006e 2437     		adds	r7, r7, #36
 2931              		.cfi_def_cfa_offset 12
 2932 0070 BD46     		mov	sp, r7
 2933              		.cfi_def_cfa_register 13
 2934              		@ sp needed
 2935 0072 90BD     		pop	{r4, r7, pc}
 2936              	.L134:
 2937              		.align	2
 2938              	.L133:
 2939 0074 00000000 		.word	start_pos
 2940 0078 04000000 		.word	numSteps
 2941 007c 00000000 		.word	instructionsList
 2942              		.cfi_endproc
 2943              	.LFE10:
 2944              		.size	findPath, .-findPath
 2945              		.text
 2946              	.Letext0:
 2947              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2948              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2949              		.file 4 "pathfinding.h"
 2950              		.section	.debug_info,"",%progbits
 2951              	.Ldebug_info0:
 2952 0000 F6070000 		.4byte	0x7f6
 2953 0004 0400     		.2byte	0x4
 2954 0006 00000000 		.4byte	.Ldebug_abbrev0
 2955 000a 04       		.byte	0x4
 2956 000b 01       		.uleb128 0x1
 2957 000c 44000000 		.4byte	.LASF78
 2958 0010 0C       		.byte	0xc
 2959 0011 1E040000 		.4byte	.LASF79
 2960 0015 83030000 		.4byte	.LASF80
 2961 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2962 001d 00000000 		.4byte	0
 2963 0021 00000000 		.4byte	.Ldebug_line0
 2964 0025 02       		.uleb128 0x2
 2965 0026 01       		.byte	0x1
 2966 0027 06       		.byte	0x6
 2967 0028 26010000 		.4byte	.LASF0
 2968 002c 03       		.uleb128 0x3
 2969 002d 30000000 		.4byte	.LASF12
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 63


 2970 0031 02       		.byte	0x2
 2971 0032 1D       		.byte	0x1d
 2972 0033 37000000 		.4byte	0x37
 2973 0037 02       		.uleb128 0x2
 2974 0038 01       		.byte	0x1
 2975 0039 08       		.byte	0x8
 2976 003a C1020000 		.4byte	.LASF1
 2977 003e 02       		.uleb128 0x2
 2978 003f 02       		.byte	0x2
 2979 0040 05       		.byte	0x5
 2980 0041 02030000 		.4byte	.LASF2
 2981 0045 02       		.uleb128 0x2
 2982 0046 02       		.byte	0x2
 2983 0047 07       		.byte	0x7
 2984 0048 0C020000 		.4byte	.LASF3
 2985 004c 02       		.uleb128 0x2
 2986 004d 04       		.byte	0x4
 2987 004e 05       		.byte	0x5
 2988 004f 50010000 		.4byte	.LASF4
 2989 0053 02       		.uleb128 0x2
 2990 0054 04       		.byte	0x4
 2991 0055 07       		.byte	0x7
 2992 0056 E8010000 		.4byte	.LASF5
 2993 005a 02       		.uleb128 0x2
 2994 005b 08       		.byte	0x8
 2995 005c 05       		.byte	0x5
 2996 005d 18010000 		.4byte	.LASF6
 2997 0061 02       		.uleb128 0x2
 2998 0062 08       		.byte	0x8
 2999 0063 07       		.byte	0x7
 3000 0064 D2000000 		.4byte	.LASF7
 3001 0068 04       		.uleb128 0x4
 3002 0069 04       		.byte	0x4
 3003 006a 05       		.byte	0x5
 3004 006b 696E7400 		.ascii	"int\000"
 3005 006f 02       		.uleb128 0x2
 3006 0070 04       		.byte	0x4
 3007 0071 07       		.byte	0x7
 3008 0072 CE010000 		.4byte	.LASF8
 3009 0076 02       		.uleb128 0x2
 3010 0077 08       		.byte	0x8
 3011 0078 04       		.byte	0x4
 3012 0079 5C020000 		.4byte	.LASF9
 3013 007d 02       		.uleb128 0x2
 3014 007e 04       		.byte	0x4
 3015 007f 07       		.byte	0x7
 3016 0080 53020000 		.4byte	.LASF10
 3017 0084 02       		.uleb128 0x2
 3018 0085 01       		.byte	0x1
 3019 0086 08       		.byte	0x8
 3020 0087 74030000 		.4byte	.LASF11
 3021 008b 03       		.uleb128 0x3
 3022 008c 6A040000 		.4byte	.LASF13
 3023 0090 03       		.byte	0x3
 3024 0091 18       		.byte	0x18
 3025 0092 2C000000 		.4byte	0x2c
 3026 0096 05       		.uleb128 0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 64


 3027 0097 CF020000 		.4byte	.LASF25
 3028 009b 01       		.byte	0x1
 3029 009c 37000000 		.4byte	0x37
 3030 00a0 04       		.byte	0x4
 3031 00a1 0D       		.byte	0xd
 3032 00a2 D1000000 		.4byte	0xd1
 3033 00a6 06       		.uleb128 0x6
 3034 00a7 34030000 		.4byte	.LASF14
 3035 00ab 00       		.byte	0
 3036 00ac 06       		.uleb128 0x6
 3037 00ad 83020000 		.4byte	.LASF15
 3038 00b1 01       		.byte	0x1
 3039 00b2 06       		.uleb128 0x6
 3040 00b3 3D040000 		.4byte	.LASF16
 3041 00b7 02       		.byte	0x2
 3042 00b8 06       		.uleb128 0x6
 3043 00b9 FB000000 		.4byte	.LASF17
 3044 00bd 03       		.byte	0x3
 3045 00be 06       		.uleb128 0x6
 3046 00bf 68010000 		.4byte	.LASF18
 3047 00c3 04       		.byte	0x4
 3048 00c4 06       		.uleb128 0x6
 3049 00c5 1F020000 		.4byte	.LASF19
 3050 00c9 05       		.byte	0x5
 3051 00ca 06       		.uleb128 0x6
 3052 00cb 1A000000 		.4byte	.LASF20
 3053 00cf 06       		.byte	0x6
 3054 00d0 00       		.byte	0
 3055 00d1 07       		.uleb128 0x7
 3056 00d2 39010000 		.4byte	.LASF24
 3057 00d6 0C       		.byte	0xc
 3058 00d7 04       		.byte	0x4
 3059 00d8 0E       		.byte	0xe
 3060 00d9 02010000 		.4byte	0x102
 3061 00dd 08       		.uleb128 0x8
 3062 00de 3A000000 		.4byte	.LASF21
 3063 00e2 04       		.byte	0x4
 3064 00e3 0F       		.byte	0xf
 3065 00e4 96000000 		.4byte	0x96
 3066 00e8 00       		.byte	0
 3067 00e9 08       		.uleb128 0x8
 3068 00ea A7040000 		.4byte	.LASF22
 3069 00ee 04       		.byte	0x4
 3070 00ef 10       		.byte	0x10
 3071 00f0 68000000 		.4byte	0x68
 3072 00f4 04       		.byte	0x4
 3073 00f5 08       		.uleb128 0x8
 3074 00f6 AF040000 		.4byte	.LASF23
 3075 00fa 04       		.byte	0x4
 3076 00fb 11       		.byte	0x11
 3077 00fc 68000000 		.4byte	0x68
 3078 0100 08       		.byte	0x8
 3079 0101 00       		.byte	0
 3080 0102 03       		.uleb128 0x3
 3081 0103 39010000 		.4byte	.LASF24
 3082 0107 04       		.byte	0x4
 3083 0108 12       		.byte	0x12
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 65


 3084 0109 D1000000 		.4byte	0xd1
 3085 010d 05       		.uleb128 0x5
 3086 010e 00000000 		.4byte	.LASF26
 3087 0112 01       		.byte	0x1
 3088 0113 37000000 		.4byte	0x37
 3089 0117 04       		.byte	0x4
 3090 0118 14       		.byte	0x14
 3091 0119 35010000 		.4byte	0x135
 3092 011d 09       		.uleb128 0x9
 3093 011e 557000   		.ascii	"Up\000"
 3094 0121 00       		.byte	0
 3095 0122 06       		.uleb128 0x6
 3096 0123 F5030000 		.4byte	.LASF27
 3097 0127 01       		.byte	0x1
 3098 0128 06       		.uleb128 0x6
 3099 0129 4E020000 		.4byte	.LASF28
 3100 012d 02       		.byte	0x2
 3101 012e 06       		.uleb128 0x6
 3102 012f 3E030000 		.4byte	.LASF29
 3103 0133 03       		.byte	0x3
 3104 0134 00       		.byte	0
 3105 0135 07       		.uleb128 0x7
 3106 0136 7B010000 		.4byte	.LASF30
 3107 013a 08       		.byte	0x8
 3108 013b 04       		.byte	0x4
 3109 013c 16       		.byte	0x16
 3110 013d 5A010000 		.4byte	0x15a
 3111 0141 0A       		.uleb128 0xa
 3112 0142 726F7700 		.ascii	"row\000"
 3113 0146 04       		.byte	0x4
 3114 0147 18       		.byte	0x18
 3115 0148 68000000 		.4byte	0x68
 3116 014c 00       		.byte	0
 3117 014d 0A       		.uleb128 0xa
 3118 014e 636F6C00 		.ascii	"col\000"
 3119 0152 04       		.byte	0x4
 3120 0153 19       		.byte	0x19
 3121 0154 68000000 		.4byte	0x68
 3122 0158 04       		.byte	0x4
 3123 0159 00       		.byte	0
 3124 015a 0B       		.uleb128 0xb
 3125 015b 0F010000 		.4byte	.LASF31
 3126 015f 01       		.byte	0x1
 3127 0160 54       		.byte	0x54
 3128 0161 00000000 		.4byte	.LFB1
 3129 0165 58000000 		.4byte	.LFE1-.LFB1
 3130 0169 01       		.uleb128 0x1
 3131 016a 9C       		.byte	0x9c
 3132 016b AA010000 		.4byte	0x1aa
 3133 016f 0C       		.uleb128 0xc
 3134 0170 6D617000 		.ascii	"map\000"
 3135 0174 01       		.byte	0x1
 3136 0175 54       		.byte	0x54
 3137 0176 BA010000 		.4byte	0x1ba
 3138 017a 02       		.uleb128 0x2
 3139 017b 91       		.byte	0x91
 3140 017c 6C       		.sleb128 -20
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 66


 3141 017d 0D       		.uleb128 0xd
 3142 017e 08000000 		.4byte	.LBB2
 3143 0182 44000000 		.4byte	.LBE2-.LBB2
 3144 0186 0E       		.uleb128 0xe
 3145 0187 6900     		.ascii	"i\000"
 3146 0189 01       		.byte	0x1
 3147 018a 56       		.byte	0x56
 3148 018b 68000000 		.4byte	0x68
 3149 018f 02       		.uleb128 0x2
 3150 0190 91       		.byte	0x91
 3151 0191 74       		.sleb128 -12
 3152 0192 0D       		.uleb128 0xd
 3153 0193 0E000000 		.4byte	.LBB3
 3154 0197 2C000000 		.4byte	.LBE3-.LBB3
 3155 019b 0E       		.uleb128 0xe
 3156 019c 6A00     		.ascii	"j\000"
 3157 019e 01       		.byte	0x1
 3158 019f 57       		.byte	0x57
 3159 01a0 68000000 		.4byte	0x68
 3160 01a4 02       		.uleb128 0x2
 3161 01a5 91       		.byte	0x91
 3162 01a6 70       		.sleb128 -16
 3163 01a7 00       		.byte	0
 3164 01a8 00       		.byte	0
 3165 01a9 00       		.byte	0
 3166 01aa 0F       		.uleb128 0xf
 3167 01ab 68000000 		.4byte	0x68
 3168 01af BA010000 		.4byte	0x1ba
 3169 01b3 10       		.uleb128 0x10
 3170 01b4 7D000000 		.4byte	0x7d
 3171 01b8 12       		.byte	0x12
 3172 01b9 00       		.byte	0
 3173 01ba 11       		.uleb128 0x11
 3174 01bb 04       		.byte	0x4
 3175 01bc AA010000 		.4byte	0x1aa
 3176 01c0 12       		.uleb128 0x12
 3177 01c1 A5020000 		.4byte	.LASF32
 3178 01c5 01       		.byte	0x1
 3179 01c6 5D       		.byte	0x5d
 3180 01c7 00000000 		.4byte	.LFB2
 3181 01cb 60000000 		.4byte	.LFE2-.LFB2
 3182 01cf 01       		.uleb128 0x1
 3183 01d0 9C       		.byte	0x9c
 3184 01d1 10020000 		.4byte	0x210
 3185 01d5 0C       		.uleb128 0xc
 3186 01d6 6D617000 		.ascii	"map\000"
 3187 01da 01       		.byte	0x1
 3188 01db 5D       		.byte	0x5d
 3189 01dc BA010000 		.4byte	0x1ba
 3190 01e0 02       		.uleb128 0x2
 3191 01e1 91       		.byte	0x91
 3192 01e2 6C       		.sleb128 -20
 3193 01e3 0D       		.uleb128 0xd
 3194 01e4 08000000 		.4byte	.LBB4
 3195 01e8 4E000000 		.4byte	.LBE4-.LBB4
 3196 01ec 0E       		.uleb128 0xe
 3197 01ed 6900     		.ascii	"i\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 67


 3198 01ef 01       		.byte	0x1
 3199 01f0 5F       		.byte	0x5f
 3200 01f1 68000000 		.4byte	0x68
 3201 01f5 02       		.uleb128 0x2
 3202 01f6 91       		.byte	0x91
 3203 01f7 74       		.sleb128 -12
 3204 01f8 0D       		.uleb128 0xd
 3205 01f9 0E000000 		.4byte	.LBB5
 3206 01fd 3C000000 		.4byte	.LBE5-.LBB5
 3207 0201 0E       		.uleb128 0xe
 3208 0202 6A00     		.ascii	"j\000"
 3209 0204 01       		.byte	0x1
 3210 0205 60       		.byte	0x60
 3211 0206 68000000 		.4byte	0x68
 3212 020a 02       		.uleb128 0x2
 3213 020b 91       		.byte	0x91
 3214 020c 70       		.sleb128 -16
 3215 020d 00       		.byte	0
 3216 020e 00       		.byte	0
 3217 020f 00       		.byte	0
 3218 0210 13       		.uleb128 0x13
 3219 0211 24000000 		.4byte	.LASF63
 3220 0215 01       		.byte	0x1
 3221 0216 6B       		.byte	0x6b
 3222 0217 6C020000 		.4byte	0x26c
 3223 021b 00000000 		.4byte	.LFB3
 3224 021f 56000000 		.4byte	.LFE3-.LFB3
 3225 0223 01       		.uleb128 0x1
 3226 0224 9C       		.byte	0x9c
 3227 0225 6C020000 		.4byte	0x26c
 3228 0229 0C       		.uleb128 0xc
 3229 022a 7200     		.ascii	"r\000"
 3230 022c 01       		.byte	0x1
 3231 022d 6B       		.byte	0x6b
 3232 022e 68000000 		.4byte	0x68
 3233 0232 02       		.uleb128 0x2
 3234 0233 91       		.byte	0x91
 3235 0234 74       		.sleb128 -12
 3236 0235 0C       		.uleb128 0xc
 3237 0236 6300     		.ascii	"c\000"
 3238 0238 01       		.byte	0x1
 3239 0239 6B       		.byte	0x6b
 3240 023a 68000000 		.4byte	0x68
 3241 023e 02       		.uleb128 0x2
 3242 023f 91       		.byte	0x91
 3243 0240 70       		.sleb128 -16
 3244 0241 14       		.uleb128 0x14
 3245 0242 1F000000 		.4byte	.LASF33
 3246 0246 01       		.byte	0x1
 3247 0247 6B       		.byte	0x6b
 3248 0248 68000000 		.4byte	0x68
 3249 024c 02       		.uleb128 0x2
 3250 024d 91       		.byte	0x91
 3251 024e 6C       		.sleb128 -20
 3252 024f 14       		.uleb128 0x14
 3253 0250 99040000 		.4byte	.LASF34
 3254 0254 01       		.byte	0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 68


 3255 0255 6B       		.byte	0x6b
 3256 0256 68000000 		.4byte	0x68
 3257 025a 02       		.uleb128 0x2
 3258 025b 91       		.byte	0x91
 3259 025c 68       		.sleb128 -24
 3260 025d 0C       		.uleb128 0xc
 3261 025e 6D617000 		.ascii	"map\000"
 3262 0262 01       		.byte	0x1
 3263 0263 6B       		.byte	0x6b
 3264 0264 BA010000 		.4byte	0x1ba
 3265 0268 02       		.uleb128 0x2
 3266 0269 91       		.byte	0x91
 3267 026a 00       		.sleb128 0
 3268 026b 00       		.byte	0
 3269 026c 02       		.uleb128 0x2
 3270 026d 01       		.byte	0x1
 3271 026e 02       		.byte	0x2
 3272 026f BB020000 		.4byte	.LASF35
 3273 0273 0B       		.uleb128 0xb
 3274 0274 11000000 		.4byte	.LASF36
 3275 0278 01       		.byte	0x1
 3276 0279 6F       		.byte	0x6f
 3277 027a 00000000 		.4byte	.LFB4
 3278 027e 4C090000 		.4byte	.LFE4-.LFB4
 3279 0282 01       		.uleb128 0x1
 3280 0283 9C       		.byte	0x9c
 3281 0284 C1040000 		.4byte	0x4c1
 3282 0288 0C       		.uleb128 0xc
 3283 0289 6D617000 		.ascii	"map\000"
 3284 028d 01       		.byte	0x1
 3285 028e 6F       		.byte	0x6f
 3286 028f BA010000 		.4byte	0x1ba
 3287 0293 03       		.uleb128 0x3
 3288 0294 91       		.byte	0x91
 3289 0295 BC52     		.sleb128 -5828
 3290 0297 14       		.uleb128 0x14
 3291 0298 01010000 		.4byte	.LASF37
 3292 029c 01       		.byte	0x1
 3293 029d 6F       		.byte	0x6f
 3294 029e 35010000 		.4byte	0x135
 3295 02a2 03       		.uleb128 0x3
 3296 02a3 91       		.byte	0x91
 3297 02a4 B452     		.sleb128 -5836
 3298 02a6 14       		.uleb128 0x14
 3299 02a7 59010000 		.4byte	.LASF38
 3300 02ab 01       		.byte	0x1
 3301 02ac 6F       		.byte	0x6f
 3302 02ad 35010000 		.4byte	0x135
 3303 02b1 02       		.uleb128 0x2
 3304 02b2 91       		.byte	0x91
 3305 02b3 7C       		.sleb128 -4
 3306 02b4 15       		.uleb128 0x15
 3307 02b5 69030000 		.4byte	.LASF39
 3308 02b9 01       		.byte	0x1
 3309 02ba 71       		.byte	0x71
 3310 02bb C1040000 		.4byte	0x4c1
 3311 02bf 03       		.uleb128 0x3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 69


 3312 02c0 91       		.byte	0x91
 3313 02c1 9C76     		.sleb128 -1252
 3314 02c3 07       		.uleb128 0x7
 3315 02c4 4E040000 		.4byte	.LASF40
 3316 02c8 0C       		.byte	0xc
 3317 02c9 01       		.byte	0x1
 3318 02ca 78       		.byte	0x78
 3319 02cb E8020000 		.4byte	0x2e8
 3320 02cf 08       		.uleb128 0x8
 3321 02d0 60030000 		.4byte	.LASF41
 3322 02d4 01       		.byte	0x1
 3323 02d5 79       		.byte	0x79
 3324 02d6 35010000 		.4byte	0x135
 3325 02da 00       		.byte	0
 3326 02db 08       		.uleb128 0x8
 3327 02dc E2030000 		.4byte	.LASF42
 3328 02e0 01       		.byte	0x1
 3329 02e1 7A       		.byte	0x7a
 3330 02e2 68000000 		.4byte	0x68
 3331 02e6 08       		.byte	0x8
 3332 02e7 00       		.byte	0
 3333 02e8 0E       		.uleb128 0xe
 3334 02e9 707100   		.ascii	"pq\000"
 3335 02ec 01       		.byte	0x1
 3336 02ed 7D       		.byte	0x7d
 3337 02ee D7040000 		.4byte	0x4d7
 3338 02f2 03       		.uleb128 0x3
 3339 02f3 91       		.byte	0x91
 3340 02f4 C05B     		.sleb128 -4672
 3341 02f6 15       		.uleb128 0x15
 3342 02f7 33020000 		.4byte	.LASF43
 3343 02fb 01       		.byte	0x1
 3344 02fc 7E       		.byte	0x7e
 3345 02fd 68000000 		.4byte	0x68
 3346 0301 02       		.uleb128 0x2
 3347 0302 91       		.byte	0x91
 3348 0303 5C       		.sleb128 -36
 3349 0304 15       		.uleb128 0x15
 3350 0305 F1000000 		.4byte	.LASF44
 3351 0309 01       		.byte	0x1
 3352 030a 81       		.byte	0x81
 3353 030b C1040000 		.4byte	0x4c1
 3354 030f 03       		.uleb128 0x3
 3355 0310 91       		.byte	0x91
 3356 0311 CC52     		.sleb128 -5812
 3357 0313 15       		.uleb128 0x15
 3358 0314 E9000000 		.4byte	.LASF45
 3359 0318 01       		.byte	0x1
 3360 0319 8A       		.byte	0x8a
 3361 031a 68000000 		.4byte	0x68
 3362 031e 02       		.uleb128 0x2
 3363 031f 91       		.byte	0x91
 3364 0320 50       		.sleb128 -48
 3365 0321 15       		.uleb128 0x15
 3366 0322 DB010000 		.4byte	.LASF46
 3367 0326 01       		.byte	0x1
 3368 0327 C1       		.byte	0xc1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 70


 3369 0328 68000000 		.4byte	0x68
 3370 032c 02       		.uleb128 0x2
 3371 032d 91       		.byte	0x91
 3372 032e 40       		.sleb128 -64
 3373 032f 15       		.uleb128 0x15
 3374 0330 57030000 		.4byte	.LASF47
 3375 0334 01       		.byte	0x1
 3376 0335 C4       		.byte	0xc4
 3377 0336 E8040000 		.4byte	0x4e8
 3378 033a 03       		.uleb128 0x3
 3379 033b 91       		.byte	0x91
 3380 033c 987F     		.sleb128 -104
 3381 033e 15       		.uleb128 0x15
 3382 033f 68020000 		.4byte	.LASF48
 3383 0343 01       		.byte	0x1
 3384 0344 C5       		.byte	0xc5
 3385 0345 68000000 		.4byte	0x68
 3386 0349 03       		.uleb128 0x3
 3387 034a 91       		.byte	0x91
 3388 034b BC7F     		.sleb128 -68
 3389 034d 15       		.uleb128 0x15
 3390 034e 45010000 		.4byte	.LASF49
 3391 0352 01       		.byte	0x1
 3392 0353 C6       		.byte	0xc6
 3393 0354 68000000 		.4byte	0x68
 3394 0358 03       		.uleb128 0x3
 3395 0359 91       		.byte	0x91
 3396 035a B87F     		.sleb128 -72
 3397 035c 15       		.uleb128 0x15
 3398 035d 9B020000 		.4byte	.LASF50
 3399 0361 01       		.byte	0x1
 3400 0362 CD       		.byte	0xcd
 3401 0363 68000000 		.4byte	0x68
 3402 0367 03       		.uleb128 0x3
 3403 0368 91       		.byte	0x91
 3404 0369 B47F     		.sleb128 -76
 3405 036b 16       		.uleb128 0x16
 3406 036c 28000000 		.4byte	.LBB6
 3407 0370 92000000 		.4byte	.LBE6-.LBB6
 3408 0374 9B030000 		.4byte	0x39b
 3409 0378 0E       		.uleb128 0xe
 3410 0379 6900     		.ascii	"i\000"
 3411 037b 01       		.byte	0x1
 3412 037c 72       		.byte	0x72
 3413 037d 68000000 		.4byte	0x68
 3414 0381 02       		.uleb128 0x2
 3415 0382 91       		.byte	0x91
 3416 0383 64       		.sleb128 -28
 3417 0384 0D       		.uleb128 0xd
 3418 0385 36000000 		.4byte	.LBB7
 3419 0389 60000000 		.4byte	.LBE7-.LBB7
 3420 038d 0E       		.uleb128 0xe
 3421 038e 6A00     		.ascii	"j\000"
 3422 0390 01       		.byte	0x1
 3423 0391 73       		.byte	0x73
 3424 0392 68000000 		.4byte	0x68
 3425 0396 02       		.uleb128 0x2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 71


 3426 0397 91       		.byte	0x91
 3427 0398 60       		.sleb128 -32
 3428 0399 00       		.byte	0
 3429 039a 00       		.byte	0
 3430 039b 16       		.uleb128 0x16
 3431 039c C6000000 		.4byte	.LBB8
 3432 03a0 92000000 		.4byte	.LBE8-.LBB8
 3433 03a4 CB030000 		.4byte	0x3cb
 3434 03a8 0E       		.uleb128 0xe
 3435 03a9 6900     		.ascii	"i\000"
 3436 03ab 01       		.byte	0x1
 3437 03ac 84       		.byte	0x84
 3438 03ad 68000000 		.4byte	0x68
 3439 03b1 02       		.uleb128 0x2
 3440 03b2 91       		.byte	0x91
 3441 03b3 58       		.sleb128 -40
 3442 03b4 0D       		.uleb128 0xd
 3443 03b5 D4000000 		.4byte	.LBB9
 3444 03b9 60000000 		.4byte	.LBE9-.LBB9
 3445 03bd 0E       		.uleb128 0xe
 3446 03be 6A00     		.ascii	"j\000"
 3447 03c0 01       		.byte	0x1
 3448 03c1 85       		.byte	0x85
 3449 03c2 68000000 		.4byte	0x68
 3450 03c6 02       		.uleb128 0x2
 3451 03c7 91       		.byte	0x91
 3452 03c8 54       		.sleb128 -44
 3453 03c9 00       		.byte	0
 3454 03ca 00       		.byte	0
 3455 03cb 17       		.uleb128 0x17
 3456 03cc 00000000 		.4byte	.Ldebug_ranges0+0
 3457 03d0 81040000 		.4byte	0x481
 3458 03d4 0E       		.uleb128 0xe
 3459 03d5 69647800 		.ascii	"idx\000"
 3460 03d9 01       		.byte	0x1
 3461 03da 94       		.byte	0x94
 3462 03db 68000000 		.4byte	0x68
 3463 03df 02       		.uleb128 0x2
 3464 03e0 91       		.byte	0x91
 3465 03e1 4C       		.sleb128 -52
 3466 03e2 15       		.uleb128 0x15
 3467 03e3 93020000 		.4byte	.LASF51
 3468 03e7 01       		.byte	0x1
 3469 03e8 9A       		.byte	0x9a
 3470 03e9 C3020000 		.4byte	0x2c3
 3471 03ed 03       		.uleb128 0x3
 3472 03ee 91       		.byte	0x91
 3473 03ef C052     		.sleb128 -5824
 3474 03f1 0E       		.uleb128 0xe
 3475 03f2 726F7700 		.ascii	"row\000"
 3476 03f6 01       		.byte	0x1
 3477 03f7 9E       		.byte	0x9e
 3478 03f8 68000000 		.4byte	0x68
 3479 03fc 03       		.uleb128 0x3
 3480 03fd 91       		.byte	0x91
 3481 03fe AC7F     		.sleb128 -84
 3482 0400 0E       		.uleb128 0xe
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 72


 3483 0401 636F6C00 		.ascii	"col\000"
 3484 0405 01       		.byte	0x1
 3485 0406 9F       		.byte	0x9f
 3486 0407 68000000 		.4byte	0x68
 3487 040b 03       		.uleb128 0x3
 3488 040c 91       		.byte	0x91
 3489 040d A87F     		.sleb128 -88
 3490 040f 16       		.uleb128 0x16
 3491 0410 02020000 		.4byte	.LBB11
 3492 0414 90000000 		.4byte	.LBE11-.LBB11
 3493 0418 29040000 		.4byte	0x429
 3494 041c 0E       		.uleb128 0xe
 3495 041d 6900     		.ascii	"i\000"
 3496 041f 01       		.byte	0x1
 3497 0420 95       		.byte	0x95
 3498 0421 68000000 		.4byte	0x68
 3499 0425 02       		.uleb128 0x2
 3500 0426 91       		.byte	0x91
 3501 0427 48       		.sleb128 -56
 3502 0428 00       		.byte	0
 3503 0429 0D       		.uleb128 0xd
 3504 042a C4030000 		.4byte	.LBB12
 3505 042e 1E020000 		.4byte	.LBE12-.LBB12
 3506 0432 0E       		.uleb128 0xe
 3507 0433 6900     		.ascii	"i\000"
 3508 0435 01       		.byte	0x1
 3509 0436 A8       		.byte	0xa8
 3510 0437 68000000 		.4byte	0x68
 3511 043b 02       		.uleb128 0x2
 3512 043c 91       		.byte	0x91
 3513 043d 44       		.sleb128 -60
 3514 043e 0D       		.uleb128 0xd
 3515 043f D2030000 		.4byte	.LBB13
 3516 0443 EA010000 		.4byte	.LBE13-.LBB13
 3517 0447 15       		.uleb128 0x15
 3518 0448 2C020000 		.4byte	.LASF52
 3519 044c 01       		.byte	0x1
 3520 044d A9       		.byte	0xa9
 3521 044e 68000000 		.4byte	0x68
 3522 0452 03       		.uleb128 0x3
 3523 0453 91       		.byte	0x91
 3524 0454 A47F     		.sleb128 -92
 3525 0456 15       		.uleb128 0x15
 3526 0457 32010000 		.4byte	.LASF53
 3527 045b 01       		.byte	0x1
 3528 045c AA       		.byte	0xaa
 3529 045d 68000000 		.4byte	0x68
 3530 0461 03       		.uleb128 0x3
 3531 0462 91       		.byte	0x91
 3532 0463 A07F     		.sleb128 -96
 3533 0465 0D       		.uleb128 0xd
 3534 0466 80040000 		.4byte	.LBB14
 3535 046a 3C010000 		.4byte	.LBE14-.LBB14
 3536 046e 15       		.uleb128 0x15
 3537 046f 12040000 		.4byte	.LASF54
 3538 0473 01       		.byte	0x1
 3539 0474 AD       		.byte	0xad
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 73


 3540 0475 68000000 		.4byte	0x68
 3541 0479 03       		.uleb128 0x3
 3542 047a 91       		.byte	0x91
 3543 047b 9C7F     		.sleb128 -100
 3544 047d 00       		.byte	0
 3545 047e 00       		.byte	0
 3546 047f 00       		.byte	0
 3547 0480 00       		.byte	0
 3548 0481 0D       		.uleb128 0xd
 3549 0482 0A070000 		.4byte	.LBB16
 3550 0486 18020000 		.4byte	.LBE16-.LBB16
 3551 048a 0E       		.uleb128 0xe
 3552 048b 6900     		.ascii	"i\000"
 3553 048d 01       		.byte	0x1
 3554 048e D1       		.byte	0xd1
 3555 048f 68000000 		.4byte	0x68
 3556 0493 03       		.uleb128 0x3
 3557 0494 91       		.byte	0x91
 3558 0495 B07F     		.sleb128 -80
 3559 0497 0D       		.uleb128 0xd
 3560 0498 1C070000 		.4byte	.LBB17
 3561 049c EC010000 		.4byte	.LBE17-.LBB17
 3562 04a0 15       		.uleb128 0x15
 3563 04a1 2C020000 		.4byte	.LASF52
 3564 04a5 01       		.byte	0x1
 3565 04a6 D2       		.byte	0xd2
 3566 04a7 68000000 		.4byte	0x68
 3567 04ab 03       		.uleb128 0x3
 3568 04ac 91       		.byte	0x91
 3569 04ad 947F     		.sleb128 -108
 3570 04af 15       		.uleb128 0x15
 3571 04b0 32010000 		.4byte	.LASF53
 3572 04b4 01       		.byte	0x1
 3573 04b5 D3       		.byte	0xd3
 3574 04b6 68000000 		.4byte	0x68
 3575 04ba 03       		.uleb128 0x3
 3576 04bb 91       		.byte	0x91
 3577 04bc 907F     		.sleb128 -112
 3578 04be 00       		.byte	0
 3579 04bf 00       		.byte	0
 3580 04c0 00       		.byte	0
 3581 04c1 0F       		.uleb128 0xf
 3582 04c2 68000000 		.4byte	0x68
 3583 04c6 D7040000 		.4byte	0x4d7
 3584 04ca 10       		.uleb128 0x10
 3585 04cb 7D000000 		.4byte	0x7d
 3586 04cf 0E       		.byte	0xe
 3587 04d0 10       		.uleb128 0x10
 3588 04d1 7D000000 		.4byte	0x7d
 3589 04d5 12       		.byte	0x12
 3590 04d6 00       		.byte	0
 3591 04d7 0F       		.uleb128 0xf
 3592 04d8 C3020000 		.4byte	0x2c3
 3593 04dc E8040000 		.4byte	0x4e8
 3594 04e0 18       		.uleb128 0x18
 3595 04e1 7D000000 		.4byte	0x7d
 3596 04e5 1C01     		.2byte	0x11c
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 74


 3597 04e7 00       		.byte	0
 3598 04e8 11       		.uleb128 0x11
 3599 04e9 04       		.byte	0x4
 3600 04ea 35010000 		.4byte	0x135
 3601 04ee 0B       		.uleb128 0xb
 3602 04ef 3A020000 		.4byte	.LASF55
 3603 04f3 01       		.byte	0x1
 3604 04f4 F2       		.byte	0xf2
 3605 04f5 00000000 		.4byte	.LFB5
 3606 04f9 70040000 		.4byte	.LFE5-.LFB5
 3607 04fd 01       		.uleb128 0x1
 3608 04fe 9C       		.byte	0x9c
 3609 04ff B5050000 		.4byte	0x5b5
 3610 0503 0C       		.uleb128 0xc
 3611 0504 6D617000 		.ascii	"map\000"
 3612 0508 01       		.byte	0x1
 3613 0509 F2       		.byte	0xf2
 3614 050a BA010000 		.4byte	0x1ba
 3615 050e 02       		.uleb128 0x2
 3616 050f 91       		.byte	0x91
 3617 0510 54       		.sleb128 -44
 3618 0511 14       		.uleb128 0x14
 3619 0512 44030000 		.4byte	.LASF56
 3620 0516 01       		.byte	0x1
 3621 0517 F2       		.byte	0xf2
 3622 0518 68000000 		.4byte	0x68
 3623 051c 02       		.uleb128 0x2
 3624 051d 91       		.byte	0x91
 3625 051e 50       		.sleb128 -48
 3626 051f 14       		.uleb128 0x14
 3627 0520 5C040000 		.4byte	.LASF57
 3628 0524 01       		.byte	0x1
 3629 0525 F2       		.byte	0xf2
 3630 0526 35010000 		.4byte	0x135
 3631 052a 02       		.uleb128 0x2
 3632 052b 91       		.byte	0x91
 3633 052c 48       		.sleb128 -56
 3634 052d 14       		.uleb128 0x14
 3635 052e 0C030000 		.4byte	.LASF58
 3636 0532 01       		.byte	0x1
 3637 0533 F2       		.byte	0xf2
 3638 0534 35010000 		.4byte	0x135
 3639 0538 02       		.uleb128 0x2
 3640 0539 91       		.byte	0x91
 3641 053a 00       		.sleb128 0
 3642 053b 15       		.uleb128 0x15
 3643 053c 68020000 		.4byte	.LASF48
 3644 0540 01       		.byte	0x1
 3645 0541 F3       		.byte	0xf3
 3646 0542 68000000 		.4byte	0x68
 3647 0546 02       		.uleb128 0x2
 3648 0547 91       		.byte	0x91
 3649 0548 74       		.sleb128 -12
 3650 0549 15       		.uleb128 0x15
 3651 054a 45010000 		.4byte	.LASF49
 3652 054e 01       		.byte	0x1
 3653 054f F4       		.byte	0xf4
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 75


 3654 0550 68000000 		.4byte	0x68
 3655 0554 02       		.uleb128 0x2
 3656 0555 91       		.byte	0x91
 3657 0556 70       		.sleb128 -16
 3658 0557 15       		.uleb128 0x15
 3659 0558 4D030000 		.4byte	.LASF59
 3660 055c 01       		.byte	0x1
 3661 055d F5       		.byte	0xf5
 3662 055e 68000000 		.4byte	0x68
 3663 0562 02       		.uleb128 0x2
 3664 0563 91       		.byte	0x91
 3665 0564 6C       		.sleb128 -20
 3666 0565 15       		.uleb128 0x15
 3667 0566 FA010000 		.4byte	.LASF60
 3668 056a 01       		.byte	0x1
 3669 056b F6       		.byte	0xf6
 3670 056c 68000000 		.4byte	0x68
 3671 0570 02       		.uleb128 0x2
 3672 0571 91       		.byte	0x91
 3673 0572 5C       		.sleb128 -36
 3674 0573 16       		.uleb128 0x16
 3675 0574 2E000000 		.4byte	.LBB18
 3676 0578 8C030000 		.4byte	.LBE18-.LBB18
 3677 057c 9D050000 		.4byte	0x59d
 3678 0580 15       		.uleb128 0x15
 3679 0581 AE020000 		.4byte	.LASF61
 3680 0585 01       		.byte	0x1
 3681 0586 FC       		.byte	0xfc
 3682 0587 96000000 		.4byte	0x96
 3683 058b 02       		.uleb128 0x2
 3684 058c 91       		.byte	0x91
 3685 058d 6B       		.sleb128 -21
 3686 058e 15       		.uleb128 0x15
 3687 058f 9E040000 		.4byte	.LASF62
 3688 0593 01       		.byte	0x1
 3689 0594 FD       		.byte	0xfd
 3690 0595 68000000 		.4byte	0x68
 3691 0599 02       		.uleb128 0x2
 3692 059a 91       		.byte	0x91
 3693 059b 64       		.sleb128 -28
 3694 059c 00       		.byte	0
 3695 059d 0D       		.uleb128 0xd
 3696 059e C2030000 		.4byte	.LBB19
 3697 05a2 7C000000 		.4byte	.LBE19-.LBB19
 3698 05a6 19       		.uleb128 0x19
 3699 05a7 6900     		.ascii	"i\000"
 3700 05a9 01       		.byte	0x1
 3701 05aa 8E01     		.2byte	0x18e
 3702 05ac 68000000 		.4byte	0x68
 3703 05b0 02       		.uleb128 0x2
 3704 05b1 91       		.byte	0x91
 3705 05b2 60       		.sleb128 -32
 3706 05b3 00       		.byte	0
 3707 05b4 00       		.byte	0
 3708 05b5 1A       		.uleb128 0x1a
 3709 05b6 9F010000 		.4byte	.LASF64
 3710 05ba 01       		.byte	0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 76


 3711 05bb 9701     		.2byte	0x197
 3712 05bd 8B000000 		.4byte	0x8b
 3713 05c1 00000000 		.4byte	.LFB6
 3714 05c5 0C010000 		.4byte	.LFE6-.LFB6
 3715 05c9 01       		.uleb128 0x1
 3716 05ca 9C       		.byte	0x9c
 3717 05cb EE050000 		.4byte	0x5ee
 3718 05cf 1B       		.uleb128 0x1b
 3719 05d0 68020000 		.4byte	.LASF48
 3720 05d4 01       		.byte	0x1
 3721 05d5 9701     		.2byte	0x197
 3722 05d7 68000000 		.4byte	0x68
 3723 05db 02       		.uleb128 0x2
 3724 05dc 91       		.byte	0x91
 3725 05dd 74       		.sleb128 -12
 3726 05de 1B       		.uleb128 0x1b
 3727 05df 45010000 		.4byte	.LASF49
 3728 05e3 01       		.byte	0x1
 3729 05e4 9701     		.2byte	0x197
 3730 05e6 68000000 		.4byte	0x68
 3731 05ea 02       		.uleb128 0x2
 3732 05eb 91       		.byte	0x91
 3733 05ec 70       		.sleb128 -16
 3734 05ed 00       		.byte	0
 3735 05ee 1C       		.uleb128 0x1c
 3736 05ef 73020000 		.4byte	.LASF65
 3737 05f3 01       		.byte	0x1
 3738 05f4 A801     		.2byte	0x1a8
 3739 05f6 00000000 		.4byte	.LFB7
 3740 05fa 24010000 		.4byte	.LFE7-.LFB7
 3741 05fe 01       		.uleb128 0x1
 3742 05ff 9C       		.byte	0x9c
 3743 0600 32060000 		.4byte	0x632
 3744 0604 1B       		.uleb128 0x1b
 3745 0605 2C040000 		.4byte	.LASF66
 3746 0609 01       		.byte	0x1
 3747 060a A801     		.2byte	0x1a8
 3748 060c 0D010000 		.4byte	0x10d
 3749 0610 02       		.uleb128 0x2
 3750 0611 91       		.byte	0x91
 3751 0612 77       		.sleb128 -9
 3752 0613 1B       		.uleb128 0x1b
 3753 0614 68020000 		.4byte	.LASF48
 3754 0618 01       		.byte	0x1
 3755 0619 A801     		.2byte	0x1a8
 3756 061b 68000000 		.4byte	0x68
 3757 061f 02       		.uleb128 0x2
 3758 0620 91       		.byte	0x91
 3759 0621 70       		.sleb128 -16
 3760 0622 1B       		.uleb128 0x1b
 3761 0623 45010000 		.4byte	.LASF49
 3762 0627 01       		.byte	0x1
 3763 0628 A801     		.2byte	0x1a8
 3764 062a 68000000 		.4byte	0x68
 3765 062e 02       		.uleb128 0x2
 3766 062f 91       		.byte	0x91
 3767 0630 6C       		.sleb128 -20
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 77


 3768 0631 00       		.byte	0
 3769 0632 1A       		.uleb128 0x1a
 3770 0633 E4020000 		.4byte	.LASF67
 3771 0637 01       		.byte	0x1
 3772 0638 DC01     		.2byte	0x1dc
 3773 063a 8B000000 		.4byte	0x8b
 3774 063e 00000000 		.4byte	.LFB8
 3775 0642 9C000000 		.4byte	.LFE8-.LFB8
 3776 0646 01       		.uleb128 0x1
 3777 0647 9C       		.byte	0x9c
 3778 0648 6B060000 		.4byte	0x66b
 3779 064c 1B       		.uleb128 0x1b
 3780 064d 84010000 		.4byte	.LASF68
 3781 0651 01       		.byte	0x1
 3782 0652 DC01     		.2byte	0x1dc
 3783 0654 68000000 		.4byte	0x68
 3784 0658 02       		.uleb128 0x2
 3785 0659 91       		.byte	0x91
 3786 065a 74       		.sleb128 -12
 3787 065b 1B       		.uleb128 0x1b
 3788 065c 8F040000 		.4byte	.LASF69
 3789 0660 01       		.byte	0x1
 3790 0661 DC01     		.2byte	0x1dc
 3791 0663 68000000 		.4byte	0x68
 3792 0667 02       		.uleb128 0x2
 3793 0668 91       		.byte	0x91
 3794 0669 70       		.sleb128 -16
 3795 066a 00       		.byte	0
 3796 066b 1D       		.uleb128 0x1d
 3797 066c 72040000 		.4byte	.LASF81
 3798 0670 01       		.byte	0x1
 3799 0671 EB01     		.2byte	0x1eb
 3800 0673 8B000000 		.4byte	0x8b
 3801 0677 00000000 		.4byte	.LFB9
 3802 067b 18000000 		.4byte	.LFE9-.LFB9
 3803 067f 01       		.uleb128 0x1
 3804 0680 9C       		.byte	0x9c
 3805 0681 1E       		.uleb128 0x1e
 3806 0682 F9020000 		.4byte	.LASF70
 3807 0686 01       		.byte	0x1
 3808 0687 EF01     		.2byte	0x1ef
 3809 0689 E5060000 		.4byte	0x6e5
 3810 068d 00000000 		.4byte	.LFB10
 3811 0691 80000000 		.4byte	.LFE10-.LFB10
 3812 0695 01       		.uleb128 0x1
 3813 0696 9C       		.byte	0x9c
 3814 0697 E5060000 		.4byte	0x6e5
 3815 069b 1F       		.uleb128 0x1f
 3816 069c 6D617000 		.ascii	"map\000"
 3817 06a0 01       		.byte	0x1
 3818 06a1 EF01     		.2byte	0x1ef
 3819 06a3 BA010000 		.4byte	0x1ba
 3820 06a7 02       		.uleb128 0x2
 3821 06a8 91       		.byte	0x91
 3822 06a9 5C       		.sleb128 -36
 3823 06aa 1B       		.uleb128 0x1b
 3824 06ab EB030000 		.4byte	.LASF71
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 78


 3825 06af 01       		.byte	0x1
 3826 06b0 EF01     		.2byte	0x1ef
 3827 06b2 FB060000 		.4byte	0x6fb
 3828 06b6 02       		.uleb128 0x2
 3829 06b7 91       		.byte	0x91
 3830 06b8 58       		.sleb128 -40
 3831 06b9 1F       		.uleb128 0x1f
 3832 06ba 6900     		.ascii	"i\000"
 3833 06bc 01       		.byte	0x1
 3834 06bd EF01     		.2byte	0x1ef
 3835 06bf 68000000 		.4byte	0x68
 3836 06c3 02       		.uleb128 0x2
 3837 06c4 91       		.byte	0x91
 3838 06c5 54       		.sleb128 -44
 3839 06c6 20       		.uleb128 0x20
 3840 06c7 5C040000 		.4byte	.LASF57
 3841 06cb 01       		.byte	0x1
 3842 06cc F101     		.2byte	0x1f1
 3843 06ce 35010000 		.4byte	0x135
 3844 06d2 02       		.uleb128 0x2
 3845 06d3 91       		.byte	0x91
 3846 06d4 68       		.sleb128 -24
 3847 06d5 20       		.uleb128 0x20
 3848 06d6 0C030000 		.4byte	.LASF58
 3849 06da 01       		.byte	0x1
 3850 06db F101     		.2byte	0x1f1
 3851 06dd 35010000 		.4byte	0x135
 3852 06e1 02       		.uleb128 0x2
 3853 06e2 91       		.byte	0x91
 3854 06e3 60       		.sleb128 -32
 3855 06e4 00       		.byte	0
 3856 06e5 11       		.uleb128 0x11
 3857 06e6 04       		.byte	0x4
 3858 06e7 02010000 		.4byte	0x102
 3859 06eb 0F       		.uleb128 0xf
 3860 06ec 68000000 		.4byte	0x68
 3861 06f0 FB060000 		.4byte	0x6fb
 3862 06f4 10       		.uleb128 0x10
 3863 06f5 7D000000 		.4byte	0x7d
 3864 06f9 01       		.byte	0x1
 3865 06fa 00       		.byte	0
 3866 06fb 11       		.uleb128 0x11
 3867 06fc 04       		.byte	0x4
 3868 06fd EB060000 		.4byte	0x6eb
 3869 0701 15       		.uleb128 0x15
 3870 0702 8E010000 		.4byte	.LASF72
 3871 0706 01       		.byte	0x1
 3872 0707 18       		.byte	0x18
 3873 0708 E5060000 		.4byte	0x6e5
 3874 070c 05       		.uleb128 0x5
 3875 070d 03       		.byte	0x3
 3876 070e 00000000 		.4byte	instructionsList
 3877 0712 15       		.uleb128 0x15
 3878 0713 44030000 		.4byte	.LASF56
 3879 0717 01       		.byte	0x1
 3880 0718 19       		.byte	0x19
 3881 0719 68000000 		.4byte	0x68
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 79


 3882 071d 05       		.uleb128 0x5
 3883 071e 03       		.byte	0x3
 3884 071f 04000000 		.4byte	numSteps
 3885 0723 21       		.uleb128 0x21
 3886 0724 6D617000 		.ascii	"map\000"
 3887 0728 01       		.byte	0x1
 3888 0729 22       		.byte	0x22
 3889 072a C1040000 		.4byte	0x4c1
 3890 072e 05       		.uleb128 0x5
 3891 072f 03       		.byte	0x3
 3892 0730 00000000 		.4byte	map
 3893 0734 0F       		.uleb128 0xf
 3894 0735 68000000 		.4byte	0x68
 3895 0739 4A070000 		.4byte	0x74a
 3896 073d 10       		.uleb128 0x10
 3897 073e 7D000000 		.4byte	0x7d
 3898 0742 04       		.byte	0x4
 3899 0743 10       		.uleb128 0x10
 3900 0744 7D000000 		.4byte	0x7d
 3901 0748 01       		.byte	0x1
 3902 0749 00       		.byte	0
 3903 074a 22       		.uleb128 0x22
 3904 074b EB030000 		.4byte	.LASF71
 3905 074f 01       		.byte	0x1
 3906 0750 4B       		.byte	0x4b
 3907 0751 34070000 		.4byte	0x734
 3908 0755 05       		.uleb128 0x5
 3909 0756 03       		.byte	0x3
 3910 0757 00000000 		.4byte	food_list
 3911 075b 22       		.uleb128 0x22
 3912 075c 1B030000 		.4byte	.LASF73
 3913 0760 01       		.byte	0x1
 3914 0761 16       		.byte	0x16
 3915 0762 0D010000 		.4byte	0x10d
 3916 0766 05       		.uleb128 0x5
 3917 0767 03       		.byte	0x3
 3918 0768 00000000 		.4byte	previousRobotOrientation
 3919 076c 22       		.uleb128 0x22
 3920 076d FA030000 		.4byte	.LASF74
 3921 0771 01       		.byte	0x1
 3922 0772 16       		.byte	0x16
 3923 0773 0D010000 		.4byte	0x10d
 3924 0777 05       		.uleb128 0x5
 3925 0778 03       		.byte	0x3
 3926 0779 00000000 		.4byte	currentRobotOrientation
 3927 077d 22       		.uleb128 0x22
 3928 077e 79030000 		.4byte	.LASF75
 3929 0782 01       		.byte	0x1
 3930 0783 49       		.byte	0x49
 3931 0784 EB060000 		.4byte	0x6eb
 3932 0788 05       		.uleb128 0x5
 3933 0789 03       		.byte	0x3
 3934 078a 00000000 		.4byte	start_pos
 3935 078e 0F       		.uleb128 0xf
 3936 078f 68000000 		.4byte	0x68
 3937 0793 A5070000 		.4byte	0x7a5
 3938 0797 18       		.uleb128 0x18
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 80


 3939 0798 7D000000 		.4byte	0x7d
 3940 079c 1C01     		.2byte	0x11c
 3941 079e 10       		.uleb128 0x10
 3942 079f 7D000000 		.4byte	0x7d
 3943 07a3 01       		.byte	0x1
 3944 07a4 00       		.byte	0
 3945 07a5 22       		.uleb128 0x22
 3946 07a6 B2010000 		.4byte	.LASF76
 3947 07aa 01       		.byte	0x1
 3948 07ab 67       		.byte	0x67
 3949 07ac 8E070000 		.4byte	0x78e
 3950 07b0 05       		.uleb128 0x5
 3951 07b1 03       		.byte	0x3
 3952 07b2 00000000 		.4byte	list_of_optimal_coordinates
 3953 07b6 0F       		.uleb128 0xf
 3954 07b7 35010000 		.4byte	0x135
 3955 07bb C6070000 		.4byte	0x7c6
 3956 07bf 10       		.uleb128 0x10
 3957 07c0 7D000000 		.4byte	0x7d
 3958 07c4 03       		.byte	0x3
 3959 07c5 00       		.byte	0
 3960 07c6 22       		.uleb128 0x22
 3961 07c7 89040000 		.4byte	.LASF77
 3962 07cb 01       		.byte	0x1
 3963 07cc 69       		.byte	0x69
 3964 07cd B6070000 		.4byte	0x7b6
 3965 07d1 05       		.uleb128 0x5
 3966 07d2 03       		.byte	0x3
 3967 07d3 00000000 		.4byte	moves
 3968 07d7 22       		.uleb128 0x22
 3969 07d8 AF040000 		.4byte	.LASF23
 3970 07dc 01       		.byte	0x1
 3971 07dd EF       		.byte	0xef
 3972 07de 68000000 		.4byte	0x68
 3973 07e2 05       		.uleb128 0x5
 3974 07e3 03       		.byte	0x3
 3975 07e4 00000000 		.4byte	ignoreR
 3976 07e8 22       		.uleb128 0x22
 3977 07e9 A7040000 		.4byte	.LASF22
 3978 07ed 01       		.byte	0x1
 3979 07ee EF       		.byte	0xef
 3980 07ef 68000000 		.4byte	0x68
 3981 07f3 05       		.uleb128 0x5
 3982 07f4 03       		.byte	0x3
 3983 07f5 00000000 		.4byte	ignoreL
 3984 07f9 00       		.byte	0
 3985              		.section	.debug_abbrev,"",%progbits
 3986              	.Ldebug_abbrev0:
 3987 0000 01       		.uleb128 0x1
 3988 0001 11       		.uleb128 0x11
 3989 0002 01       		.byte	0x1
 3990 0003 25       		.uleb128 0x25
 3991 0004 0E       		.uleb128 0xe
 3992 0005 13       		.uleb128 0x13
 3993 0006 0B       		.uleb128 0xb
 3994 0007 03       		.uleb128 0x3
 3995 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 81


 3996 0009 1B       		.uleb128 0x1b
 3997 000a 0E       		.uleb128 0xe
 3998 000b 55       		.uleb128 0x55
 3999 000c 17       		.uleb128 0x17
 4000 000d 11       		.uleb128 0x11
 4001 000e 01       		.uleb128 0x1
 4002 000f 10       		.uleb128 0x10
 4003 0010 17       		.uleb128 0x17
 4004 0011 00       		.byte	0
 4005 0012 00       		.byte	0
 4006 0013 02       		.uleb128 0x2
 4007 0014 24       		.uleb128 0x24
 4008 0015 00       		.byte	0
 4009 0016 0B       		.uleb128 0xb
 4010 0017 0B       		.uleb128 0xb
 4011 0018 3E       		.uleb128 0x3e
 4012 0019 0B       		.uleb128 0xb
 4013 001a 03       		.uleb128 0x3
 4014 001b 0E       		.uleb128 0xe
 4015 001c 00       		.byte	0
 4016 001d 00       		.byte	0
 4017 001e 03       		.uleb128 0x3
 4018 001f 16       		.uleb128 0x16
 4019 0020 00       		.byte	0
 4020 0021 03       		.uleb128 0x3
 4021 0022 0E       		.uleb128 0xe
 4022 0023 3A       		.uleb128 0x3a
 4023 0024 0B       		.uleb128 0xb
 4024 0025 3B       		.uleb128 0x3b
 4025 0026 0B       		.uleb128 0xb
 4026 0027 49       		.uleb128 0x49
 4027 0028 13       		.uleb128 0x13
 4028 0029 00       		.byte	0
 4029 002a 00       		.byte	0
 4030 002b 04       		.uleb128 0x4
 4031 002c 24       		.uleb128 0x24
 4032 002d 00       		.byte	0
 4033 002e 0B       		.uleb128 0xb
 4034 002f 0B       		.uleb128 0xb
 4035 0030 3E       		.uleb128 0x3e
 4036 0031 0B       		.uleb128 0xb
 4037 0032 03       		.uleb128 0x3
 4038 0033 08       		.uleb128 0x8
 4039 0034 00       		.byte	0
 4040 0035 00       		.byte	0
 4041 0036 05       		.uleb128 0x5
 4042 0037 04       		.uleb128 0x4
 4043 0038 01       		.byte	0x1
 4044 0039 03       		.uleb128 0x3
 4045 003a 0E       		.uleb128 0xe
 4046 003b 0B       		.uleb128 0xb
 4047 003c 0B       		.uleb128 0xb
 4048 003d 49       		.uleb128 0x49
 4049 003e 13       		.uleb128 0x13
 4050 003f 3A       		.uleb128 0x3a
 4051 0040 0B       		.uleb128 0xb
 4052 0041 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 82


 4053 0042 0B       		.uleb128 0xb
 4054 0043 01       		.uleb128 0x1
 4055 0044 13       		.uleb128 0x13
 4056 0045 00       		.byte	0
 4057 0046 00       		.byte	0
 4058 0047 06       		.uleb128 0x6
 4059 0048 28       		.uleb128 0x28
 4060 0049 00       		.byte	0
 4061 004a 03       		.uleb128 0x3
 4062 004b 0E       		.uleb128 0xe
 4063 004c 1C       		.uleb128 0x1c
 4064 004d 0B       		.uleb128 0xb
 4065 004e 00       		.byte	0
 4066 004f 00       		.byte	0
 4067 0050 07       		.uleb128 0x7
 4068 0051 13       		.uleb128 0x13
 4069 0052 01       		.byte	0x1
 4070 0053 03       		.uleb128 0x3
 4071 0054 0E       		.uleb128 0xe
 4072 0055 0B       		.uleb128 0xb
 4073 0056 0B       		.uleb128 0xb
 4074 0057 3A       		.uleb128 0x3a
 4075 0058 0B       		.uleb128 0xb
 4076 0059 3B       		.uleb128 0x3b
 4077 005a 0B       		.uleb128 0xb
 4078 005b 01       		.uleb128 0x1
 4079 005c 13       		.uleb128 0x13
 4080 005d 00       		.byte	0
 4081 005e 00       		.byte	0
 4082 005f 08       		.uleb128 0x8
 4083 0060 0D       		.uleb128 0xd
 4084 0061 00       		.byte	0
 4085 0062 03       		.uleb128 0x3
 4086 0063 0E       		.uleb128 0xe
 4087 0064 3A       		.uleb128 0x3a
 4088 0065 0B       		.uleb128 0xb
 4089 0066 3B       		.uleb128 0x3b
 4090 0067 0B       		.uleb128 0xb
 4091 0068 49       		.uleb128 0x49
 4092 0069 13       		.uleb128 0x13
 4093 006a 38       		.uleb128 0x38
 4094 006b 0B       		.uleb128 0xb
 4095 006c 00       		.byte	0
 4096 006d 00       		.byte	0
 4097 006e 09       		.uleb128 0x9
 4098 006f 28       		.uleb128 0x28
 4099 0070 00       		.byte	0
 4100 0071 03       		.uleb128 0x3
 4101 0072 08       		.uleb128 0x8
 4102 0073 1C       		.uleb128 0x1c
 4103 0074 0B       		.uleb128 0xb
 4104 0075 00       		.byte	0
 4105 0076 00       		.byte	0
 4106 0077 0A       		.uleb128 0xa
 4107 0078 0D       		.uleb128 0xd
 4108 0079 00       		.byte	0
 4109 007a 03       		.uleb128 0x3
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 83


 4110 007b 08       		.uleb128 0x8
 4111 007c 3A       		.uleb128 0x3a
 4112 007d 0B       		.uleb128 0xb
 4113 007e 3B       		.uleb128 0x3b
 4114 007f 0B       		.uleb128 0xb
 4115 0080 49       		.uleb128 0x49
 4116 0081 13       		.uleb128 0x13
 4117 0082 38       		.uleb128 0x38
 4118 0083 0B       		.uleb128 0xb
 4119 0084 00       		.byte	0
 4120 0085 00       		.byte	0
 4121 0086 0B       		.uleb128 0xb
 4122 0087 2E       		.uleb128 0x2e
 4123 0088 01       		.byte	0x1
 4124 0089 3F       		.uleb128 0x3f
 4125 008a 19       		.uleb128 0x19
 4126 008b 03       		.uleb128 0x3
 4127 008c 0E       		.uleb128 0xe
 4128 008d 3A       		.uleb128 0x3a
 4129 008e 0B       		.uleb128 0xb
 4130 008f 3B       		.uleb128 0x3b
 4131 0090 0B       		.uleb128 0xb
 4132 0091 27       		.uleb128 0x27
 4133 0092 19       		.uleb128 0x19
 4134 0093 11       		.uleb128 0x11
 4135 0094 01       		.uleb128 0x1
 4136 0095 12       		.uleb128 0x12
 4137 0096 06       		.uleb128 0x6
 4138 0097 40       		.uleb128 0x40
 4139 0098 18       		.uleb128 0x18
 4140 0099 9642     		.uleb128 0x2116
 4141 009b 19       		.uleb128 0x19
 4142 009c 01       		.uleb128 0x1
 4143 009d 13       		.uleb128 0x13
 4144 009e 00       		.byte	0
 4145 009f 00       		.byte	0
 4146 00a0 0C       		.uleb128 0xc
 4147 00a1 05       		.uleb128 0x5
 4148 00a2 00       		.byte	0
 4149 00a3 03       		.uleb128 0x3
 4150 00a4 08       		.uleb128 0x8
 4151 00a5 3A       		.uleb128 0x3a
 4152 00a6 0B       		.uleb128 0xb
 4153 00a7 3B       		.uleb128 0x3b
 4154 00a8 0B       		.uleb128 0xb
 4155 00a9 49       		.uleb128 0x49
 4156 00aa 13       		.uleb128 0x13
 4157 00ab 02       		.uleb128 0x2
 4158 00ac 18       		.uleb128 0x18
 4159 00ad 00       		.byte	0
 4160 00ae 00       		.byte	0
 4161 00af 0D       		.uleb128 0xd
 4162 00b0 0B       		.uleb128 0xb
 4163 00b1 01       		.byte	0x1
 4164 00b2 11       		.uleb128 0x11
 4165 00b3 01       		.uleb128 0x1
 4166 00b4 12       		.uleb128 0x12
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 84


 4167 00b5 06       		.uleb128 0x6
 4168 00b6 00       		.byte	0
 4169 00b7 00       		.byte	0
 4170 00b8 0E       		.uleb128 0xe
 4171 00b9 34       		.uleb128 0x34
 4172 00ba 00       		.byte	0
 4173 00bb 03       		.uleb128 0x3
 4174 00bc 08       		.uleb128 0x8
 4175 00bd 3A       		.uleb128 0x3a
 4176 00be 0B       		.uleb128 0xb
 4177 00bf 3B       		.uleb128 0x3b
 4178 00c0 0B       		.uleb128 0xb
 4179 00c1 49       		.uleb128 0x49
 4180 00c2 13       		.uleb128 0x13
 4181 00c3 02       		.uleb128 0x2
 4182 00c4 18       		.uleb128 0x18
 4183 00c5 00       		.byte	0
 4184 00c6 00       		.byte	0
 4185 00c7 0F       		.uleb128 0xf
 4186 00c8 01       		.uleb128 0x1
 4187 00c9 01       		.byte	0x1
 4188 00ca 49       		.uleb128 0x49
 4189 00cb 13       		.uleb128 0x13
 4190 00cc 01       		.uleb128 0x1
 4191 00cd 13       		.uleb128 0x13
 4192 00ce 00       		.byte	0
 4193 00cf 00       		.byte	0
 4194 00d0 10       		.uleb128 0x10
 4195 00d1 21       		.uleb128 0x21
 4196 00d2 00       		.byte	0
 4197 00d3 49       		.uleb128 0x49
 4198 00d4 13       		.uleb128 0x13
 4199 00d5 2F       		.uleb128 0x2f
 4200 00d6 0B       		.uleb128 0xb
 4201 00d7 00       		.byte	0
 4202 00d8 00       		.byte	0
 4203 00d9 11       		.uleb128 0x11
 4204 00da 0F       		.uleb128 0xf
 4205 00db 00       		.byte	0
 4206 00dc 0B       		.uleb128 0xb
 4207 00dd 0B       		.uleb128 0xb
 4208 00de 49       		.uleb128 0x49
 4209 00df 13       		.uleb128 0x13
 4210 00e0 00       		.byte	0
 4211 00e1 00       		.byte	0
 4212 00e2 12       		.uleb128 0x12
 4213 00e3 2E       		.uleb128 0x2e
 4214 00e4 01       		.byte	0x1
 4215 00e5 3F       		.uleb128 0x3f
 4216 00e6 19       		.uleb128 0x19
 4217 00e7 03       		.uleb128 0x3
 4218 00e8 0E       		.uleb128 0xe
 4219 00e9 3A       		.uleb128 0x3a
 4220 00ea 0B       		.uleb128 0xb
 4221 00eb 3B       		.uleb128 0x3b
 4222 00ec 0B       		.uleb128 0xb
 4223 00ed 27       		.uleb128 0x27
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 85


 4224 00ee 19       		.uleb128 0x19
 4225 00ef 11       		.uleb128 0x11
 4226 00f0 01       		.uleb128 0x1
 4227 00f1 12       		.uleb128 0x12
 4228 00f2 06       		.uleb128 0x6
 4229 00f3 40       		.uleb128 0x40
 4230 00f4 18       		.uleb128 0x18
 4231 00f5 9742     		.uleb128 0x2117
 4232 00f7 19       		.uleb128 0x19
 4233 00f8 01       		.uleb128 0x1
 4234 00f9 13       		.uleb128 0x13
 4235 00fa 00       		.byte	0
 4236 00fb 00       		.byte	0
 4237 00fc 13       		.uleb128 0x13
 4238 00fd 2E       		.uleb128 0x2e
 4239 00fe 01       		.byte	0x1
 4240 00ff 3F       		.uleb128 0x3f
 4241 0100 19       		.uleb128 0x19
 4242 0101 03       		.uleb128 0x3
 4243 0102 0E       		.uleb128 0xe
 4244 0103 3A       		.uleb128 0x3a
 4245 0104 0B       		.uleb128 0xb
 4246 0105 3B       		.uleb128 0x3b
 4247 0106 0B       		.uleb128 0xb
 4248 0107 27       		.uleb128 0x27
 4249 0108 19       		.uleb128 0x19
 4250 0109 49       		.uleb128 0x49
 4251 010a 13       		.uleb128 0x13
 4252 010b 11       		.uleb128 0x11
 4253 010c 01       		.uleb128 0x1
 4254 010d 12       		.uleb128 0x12
 4255 010e 06       		.uleb128 0x6
 4256 010f 40       		.uleb128 0x40
 4257 0110 18       		.uleb128 0x18
 4258 0111 9742     		.uleb128 0x2117
 4259 0113 19       		.uleb128 0x19
 4260 0114 01       		.uleb128 0x1
 4261 0115 13       		.uleb128 0x13
 4262 0116 00       		.byte	0
 4263 0117 00       		.byte	0
 4264 0118 14       		.uleb128 0x14
 4265 0119 05       		.uleb128 0x5
 4266 011a 00       		.byte	0
 4267 011b 03       		.uleb128 0x3
 4268 011c 0E       		.uleb128 0xe
 4269 011d 3A       		.uleb128 0x3a
 4270 011e 0B       		.uleb128 0xb
 4271 011f 3B       		.uleb128 0x3b
 4272 0120 0B       		.uleb128 0xb
 4273 0121 49       		.uleb128 0x49
 4274 0122 13       		.uleb128 0x13
 4275 0123 02       		.uleb128 0x2
 4276 0124 18       		.uleb128 0x18
 4277 0125 00       		.byte	0
 4278 0126 00       		.byte	0
 4279 0127 15       		.uleb128 0x15
 4280 0128 34       		.uleb128 0x34
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 86


 4281 0129 00       		.byte	0
 4282 012a 03       		.uleb128 0x3
 4283 012b 0E       		.uleb128 0xe
 4284 012c 3A       		.uleb128 0x3a
 4285 012d 0B       		.uleb128 0xb
 4286 012e 3B       		.uleb128 0x3b
 4287 012f 0B       		.uleb128 0xb
 4288 0130 49       		.uleb128 0x49
 4289 0131 13       		.uleb128 0x13
 4290 0132 02       		.uleb128 0x2
 4291 0133 18       		.uleb128 0x18
 4292 0134 00       		.byte	0
 4293 0135 00       		.byte	0
 4294 0136 16       		.uleb128 0x16
 4295 0137 0B       		.uleb128 0xb
 4296 0138 01       		.byte	0x1
 4297 0139 11       		.uleb128 0x11
 4298 013a 01       		.uleb128 0x1
 4299 013b 12       		.uleb128 0x12
 4300 013c 06       		.uleb128 0x6
 4301 013d 01       		.uleb128 0x1
 4302 013e 13       		.uleb128 0x13
 4303 013f 00       		.byte	0
 4304 0140 00       		.byte	0
 4305 0141 17       		.uleb128 0x17
 4306 0142 0B       		.uleb128 0xb
 4307 0143 01       		.byte	0x1
 4308 0144 55       		.uleb128 0x55
 4309 0145 17       		.uleb128 0x17
 4310 0146 01       		.uleb128 0x1
 4311 0147 13       		.uleb128 0x13
 4312 0148 00       		.byte	0
 4313 0149 00       		.byte	0
 4314 014a 18       		.uleb128 0x18
 4315 014b 21       		.uleb128 0x21
 4316 014c 00       		.byte	0
 4317 014d 49       		.uleb128 0x49
 4318 014e 13       		.uleb128 0x13
 4319 014f 2F       		.uleb128 0x2f
 4320 0150 05       		.uleb128 0x5
 4321 0151 00       		.byte	0
 4322 0152 00       		.byte	0
 4323 0153 19       		.uleb128 0x19
 4324 0154 34       		.uleb128 0x34
 4325 0155 00       		.byte	0
 4326 0156 03       		.uleb128 0x3
 4327 0157 08       		.uleb128 0x8
 4328 0158 3A       		.uleb128 0x3a
 4329 0159 0B       		.uleb128 0xb
 4330 015a 3B       		.uleb128 0x3b
 4331 015b 05       		.uleb128 0x5
 4332 015c 49       		.uleb128 0x49
 4333 015d 13       		.uleb128 0x13
 4334 015e 02       		.uleb128 0x2
 4335 015f 18       		.uleb128 0x18
 4336 0160 00       		.byte	0
 4337 0161 00       		.byte	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 87


 4338 0162 1A       		.uleb128 0x1a
 4339 0163 2E       		.uleb128 0x2e
 4340 0164 01       		.byte	0x1
 4341 0165 3F       		.uleb128 0x3f
 4342 0166 19       		.uleb128 0x19
 4343 0167 03       		.uleb128 0x3
 4344 0168 0E       		.uleb128 0xe
 4345 0169 3A       		.uleb128 0x3a
 4346 016a 0B       		.uleb128 0xb
 4347 016b 3B       		.uleb128 0x3b
 4348 016c 05       		.uleb128 0x5
 4349 016d 27       		.uleb128 0x27
 4350 016e 19       		.uleb128 0x19
 4351 016f 49       		.uleb128 0x49
 4352 0170 13       		.uleb128 0x13
 4353 0171 11       		.uleb128 0x11
 4354 0172 01       		.uleb128 0x1
 4355 0173 12       		.uleb128 0x12
 4356 0174 06       		.uleb128 0x6
 4357 0175 40       		.uleb128 0x40
 4358 0176 18       		.uleb128 0x18
 4359 0177 9742     		.uleb128 0x2117
 4360 0179 19       		.uleb128 0x19
 4361 017a 01       		.uleb128 0x1
 4362 017b 13       		.uleb128 0x13
 4363 017c 00       		.byte	0
 4364 017d 00       		.byte	0
 4365 017e 1B       		.uleb128 0x1b
 4366 017f 05       		.uleb128 0x5
 4367 0180 00       		.byte	0
 4368 0181 03       		.uleb128 0x3
 4369 0182 0E       		.uleb128 0xe
 4370 0183 3A       		.uleb128 0x3a
 4371 0184 0B       		.uleb128 0xb
 4372 0185 3B       		.uleb128 0x3b
 4373 0186 05       		.uleb128 0x5
 4374 0187 49       		.uleb128 0x49
 4375 0188 13       		.uleb128 0x13
 4376 0189 02       		.uleb128 0x2
 4377 018a 18       		.uleb128 0x18
 4378 018b 00       		.byte	0
 4379 018c 00       		.byte	0
 4380 018d 1C       		.uleb128 0x1c
 4381 018e 2E       		.uleb128 0x2e
 4382 018f 01       		.byte	0x1
 4383 0190 3F       		.uleb128 0x3f
 4384 0191 19       		.uleb128 0x19
 4385 0192 03       		.uleb128 0x3
 4386 0193 0E       		.uleb128 0xe
 4387 0194 3A       		.uleb128 0x3a
 4388 0195 0B       		.uleb128 0xb
 4389 0196 3B       		.uleb128 0x3b
 4390 0197 05       		.uleb128 0x5
 4391 0198 27       		.uleb128 0x27
 4392 0199 19       		.uleb128 0x19
 4393 019a 11       		.uleb128 0x11
 4394 019b 01       		.uleb128 0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 88


 4395 019c 12       		.uleb128 0x12
 4396 019d 06       		.uleb128 0x6
 4397 019e 40       		.uleb128 0x40
 4398 019f 18       		.uleb128 0x18
 4399 01a0 9742     		.uleb128 0x2117
 4400 01a2 19       		.uleb128 0x19
 4401 01a3 01       		.uleb128 0x1
 4402 01a4 13       		.uleb128 0x13
 4403 01a5 00       		.byte	0
 4404 01a6 00       		.byte	0
 4405 01a7 1D       		.uleb128 0x1d
 4406 01a8 2E       		.uleb128 0x2e
 4407 01a9 00       		.byte	0
 4408 01aa 3F       		.uleb128 0x3f
 4409 01ab 19       		.uleb128 0x19
 4410 01ac 03       		.uleb128 0x3
 4411 01ad 0E       		.uleb128 0xe
 4412 01ae 3A       		.uleb128 0x3a
 4413 01af 0B       		.uleb128 0xb
 4414 01b0 3B       		.uleb128 0x3b
 4415 01b1 05       		.uleb128 0x5
 4416 01b2 49       		.uleb128 0x49
 4417 01b3 13       		.uleb128 0x13
 4418 01b4 11       		.uleb128 0x11
 4419 01b5 01       		.uleb128 0x1
 4420 01b6 12       		.uleb128 0x12
 4421 01b7 06       		.uleb128 0x6
 4422 01b8 40       		.uleb128 0x40
 4423 01b9 18       		.uleb128 0x18
 4424 01ba 9742     		.uleb128 0x2117
 4425 01bc 19       		.uleb128 0x19
 4426 01bd 00       		.byte	0
 4427 01be 00       		.byte	0
 4428 01bf 1E       		.uleb128 0x1e
 4429 01c0 2E       		.uleb128 0x2e
 4430 01c1 01       		.byte	0x1
 4431 01c2 3F       		.uleb128 0x3f
 4432 01c3 19       		.uleb128 0x19
 4433 01c4 03       		.uleb128 0x3
 4434 01c5 0E       		.uleb128 0xe
 4435 01c6 3A       		.uleb128 0x3a
 4436 01c7 0B       		.uleb128 0xb
 4437 01c8 3B       		.uleb128 0x3b
 4438 01c9 05       		.uleb128 0x5
 4439 01ca 27       		.uleb128 0x27
 4440 01cb 19       		.uleb128 0x19
 4441 01cc 49       		.uleb128 0x49
 4442 01cd 13       		.uleb128 0x13
 4443 01ce 11       		.uleb128 0x11
 4444 01cf 01       		.uleb128 0x1
 4445 01d0 12       		.uleb128 0x12
 4446 01d1 06       		.uleb128 0x6
 4447 01d2 40       		.uleb128 0x40
 4448 01d3 18       		.uleb128 0x18
 4449 01d4 9642     		.uleb128 0x2116
 4450 01d6 19       		.uleb128 0x19
 4451 01d7 01       		.uleb128 0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 89


 4452 01d8 13       		.uleb128 0x13
 4453 01d9 00       		.byte	0
 4454 01da 00       		.byte	0
 4455 01db 1F       		.uleb128 0x1f
 4456 01dc 05       		.uleb128 0x5
 4457 01dd 00       		.byte	0
 4458 01de 03       		.uleb128 0x3
 4459 01df 08       		.uleb128 0x8
 4460 01e0 3A       		.uleb128 0x3a
 4461 01e1 0B       		.uleb128 0xb
 4462 01e2 3B       		.uleb128 0x3b
 4463 01e3 05       		.uleb128 0x5
 4464 01e4 49       		.uleb128 0x49
 4465 01e5 13       		.uleb128 0x13
 4466 01e6 02       		.uleb128 0x2
 4467 01e7 18       		.uleb128 0x18
 4468 01e8 00       		.byte	0
 4469 01e9 00       		.byte	0
 4470 01ea 20       		.uleb128 0x20
 4471 01eb 34       		.uleb128 0x34
 4472 01ec 00       		.byte	0
 4473 01ed 03       		.uleb128 0x3
 4474 01ee 0E       		.uleb128 0xe
 4475 01ef 3A       		.uleb128 0x3a
 4476 01f0 0B       		.uleb128 0xb
 4477 01f1 3B       		.uleb128 0x3b
 4478 01f2 05       		.uleb128 0x5
 4479 01f3 49       		.uleb128 0x49
 4480 01f4 13       		.uleb128 0x13
 4481 01f5 02       		.uleb128 0x2
 4482 01f6 18       		.uleb128 0x18
 4483 01f7 00       		.byte	0
 4484 01f8 00       		.byte	0
 4485 01f9 21       		.uleb128 0x21
 4486 01fa 34       		.uleb128 0x34
 4487 01fb 00       		.byte	0
 4488 01fc 03       		.uleb128 0x3
 4489 01fd 08       		.uleb128 0x8
 4490 01fe 3A       		.uleb128 0x3a
 4491 01ff 0B       		.uleb128 0xb
 4492 0200 3B       		.uleb128 0x3b
 4493 0201 0B       		.uleb128 0xb
 4494 0202 49       		.uleb128 0x49
 4495 0203 13       		.uleb128 0x13
 4496 0204 3F       		.uleb128 0x3f
 4497 0205 19       		.uleb128 0x19
 4498 0206 02       		.uleb128 0x2
 4499 0207 18       		.uleb128 0x18
 4500 0208 00       		.byte	0
 4501 0209 00       		.byte	0
 4502 020a 22       		.uleb128 0x22
 4503 020b 34       		.uleb128 0x34
 4504 020c 00       		.byte	0
 4505 020d 03       		.uleb128 0x3
 4506 020e 0E       		.uleb128 0xe
 4507 020f 3A       		.uleb128 0x3a
 4508 0210 0B       		.uleb128 0xb
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 90


 4509 0211 3B       		.uleb128 0x3b
 4510 0212 0B       		.uleb128 0xb
 4511 0213 49       		.uleb128 0x49
 4512 0214 13       		.uleb128 0x13
 4513 0215 3F       		.uleb128 0x3f
 4514 0216 19       		.uleb128 0x19
 4515 0217 02       		.uleb128 0x2
 4516 0218 18       		.uleb128 0x18
 4517 0219 00       		.byte	0
 4518 021a 00       		.byte	0
 4519 021b 00       		.byte	0
 4520              		.section	.debug_aranges,"",%progbits
 4521 0000 64000000 		.4byte	0x64
 4522 0004 0200     		.2byte	0x2
 4523 0006 00000000 		.4byte	.Ldebug_info0
 4524 000a 04       		.byte	0x4
 4525 000b 00       		.byte	0
 4526 000c 0000     		.2byte	0
 4527 000e 0000     		.2byte	0
 4528 0010 00000000 		.4byte	.LFB1
 4529 0014 58000000 		.4byte	.LFE1-.LFB1
 4530 0018 00000000 		.4byte	.LFB2
 4531 001c 60000000 		.4byte	.LFE2-.LFB2
 4532 0020 00000000 		.4byte	.LFB3
 4533 0024 56000000 		.4byte	.LFE3-.LFB3
 4534 0028 00000000 		.4byte	.LFB4
 4535 002c 4C090000 		.4byte	.LFE4-.LFB4
 4536 0030 00000000 		.4byte	.LFB5
 4537 0034 70040000 		.4byte	.LFE5-.LFB5
 4538 0038 00000000 		.4byte	.LFB6
 4539 003c 0C010000 		.4byte	.LFE6-.LFB6
 4540 0040 00000000 		.4byte	.LFB7
 4541 0044 24010000 		.4byte	.LFE7-.LFB7
 4542 0048 00000000 		.4byte	.LFB8
 4543 004c 9C000000 		.4byte	.LFE8-.LFB8
 4544 0050 00000000 		.4byte	.LFB9
 4545 0054 18000000 		.4byte	.LFE9-.LFB9
 4546 0058 00000000 		.4byte	.LFB10
 4547 005c 80000000 		.4byte	.LFE10-.LFB10
 4548 0060 00000000 		.4byte	0
 4549 0064 00000000 		.4byte	0
 4550              		.section	.debug_ranges,"",%progbits
 4551              	.Ldebug_ranges0:
 4552 0000 F6010000 		.4byte	.LBB10
 4553 0004 E2050000 		.4byte	.LBE10
 4554 0008 F4050000 		.4byte	.LBB15
 4555 000c F6050000 		.4byte	.LBE15
 4556 0010 00000000 		.4byte	0
 4557 0014 00000000 		.4byte	0
 4558 0018 00000000 		.4byte	.LFB1
 4559 001c 58000000 		.4byte	.LFE1
 4560 0020 00000000 		.4byte	.LFB2
 4561 0024 60000000 		.4byte	.LFE2
 4562 0028 00000000 		.4byte	.LFB3
 4563 002c 56000000 		.4byte	.LFE3
 4564 0030 00000000 		.4byte	.LFB4
 4565 0034 4C090000 		.4byte	.LFE4
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 91


 4566 0038 00000000 		.4byte	.LFB5
 4567 003c 70040000 		.4byte	.LFE5
 4568 0040 00000000 		.4byte	.LFB6
 4569 0044 0C010000 		.4byte	.LFE6
 4570 0048 00000000 		.4byte	.LFB7
 4571 004c 24010000 		.4byte	.LFE7
 4572 0050 00000000 		.4byte	.LFB8
 4573 0054 9C000000 		.4byte	.LFE8
 4574 0058 00000000 		.4byte	.LFB9
 4575 005c 18000000 		.4byte	.LFE9
 4576 0060 00000000 		.4byte	.LFB10
 4577 0064 80000000 		.4byte	.LFE10
 4578 0068 00000000 		.4byte	0
 4579 006c 00000000 		.4byte	0
 4580              		.section	.debug_line,"",%progbits
 4581              	.Ldebug_line0:
 4582 0000 44040000 		.section	.debug_str,"MS",%progbits,1
 4582      02003201 
 4582      00000201 
 4582      FB0E0D00 
 4582      01010101 
 4583              	.LASF26:
 4584 0000 4F726965 		.ascii	"OrientationState\000"
 4584      6E746174 
 4584      696F6E53 
 4584      74617465 
 4584      00
 4585              	.LASF36:
 4586 0011 64696A6B 		.ascii	"dijkstra\000"
 4586      73747261 
 4586      00
 4587              	.LASF20:
 4588 001a 536B6970 		.ascii	"Skip\000"
 4588      00
 4589              	.LASF33:
 4590 001f 726F7773 		.ascii	"rows\000"
 4590      00
 4591              	.LASF63:
 4592 0024 69735661 		.ascii	"isValidMove\000"
 4592      6C69644D 
 4592      6F766500 
 4593              	.LASF12:
 4594 0030 5F5F7569 		.ascii	"__uint8_t\000"
 4594      6E74385F 
 4594      7400
 4595              	.LASF21:
 4596 003a 64697265 		.ascii	"direction\000"
 4596      6374696F 
 4596      6E00
 4597              	.LASF78:
 4598 0044 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4598      43313120 
 4598      352E342E 
 4598      31203230 
 4598      31363036 
 4599 0077 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4599      20726576 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 92


 4599      6973696F 
 4599      6E203233 
 4599      37373135 
 4600 00aa 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4600      66756E63 
 4600      74696F6E 
 4600      2D736563 
 4600      74696F6E 
 4601              	.LASF7:
 4602 00d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 4602      206C6F6E 
 4602      6720756E 
 4602      7369676E 
 4602      65642069 
 4603              	.LASF45:
 4604 00e9 73746570 		.ascii	"stepNum\000"
 4604      4E756D00 
 4605              	.LASF44:
 4606 00f1 64697374 		.ascii	"distances\000"
 4606      616E6365 
 4606      7300
 4607              	.LASF17:
 4608 00fb 75547572 		.ascii	"uTurn\000"
 4608      6E00
 4609              	.LASF37:
 4610 0101 73746172 		.ascii	"startlocation\000"
 4610      746C6F63 
 4610      6174696F 
 4610      6E00
 4611              	.LASF31:
 4612 010f 7072696E 		.ascii	"printMap\000"
 4612      744D6170 
 4612      00
 4613              	.LASF6:
 4614 0118 6C6F6E67 		.ascii	"long long int\000"
 4614      206C6F6E 
 4614      6720696E 
 4614      7400
 4615              	.LASF0:
 4616 0126 7369676E 		.ascii	"signed char\000"
 4616      65642063 
 4616      68617200 
 4617              	.LASF53:
 4618 0132 6E657743 		.ascii	"newCol\000"
 4618      6F6C00
 4619              	.LASF24:
 4620 0139 496E7374 		.ascii	"Instruction\000"
 4620      72756374 
 4620      696F6E00 
 4621              	.LASF49:
 4622 0145 63757272 		.ascii	"currentCol\000"
 4622      656E7443 
 4622      6F6C00
 4623              	.LASF4:
 4624 0150 6C6F6E67 		.ascii	"long int\000"
 4624      20696E74 
 4624      00
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 93


 4625              	.LASF38:
 4626 0159 74617267 		.ascii	"targetlocation\000"
 4626      65746C6F 
 4626      63617469 
 4626      6F6E00
 4627              	.LASF18:
 4628 0168 466F7277 		.ascii	"ForwardUntilTarget\000"
 4628      61726455 
 4628      6E74696C 
 4628      54617267 
 4628      657400
 4629              	.LASF30:
 4630 017b 4C6F6361 		.ascii	"Location\000"
 4630      74696F6E 
 4630      00
 4631              	.LASF68:
 4632 0184 74617267 		.ascii	"targetRow\000"
 4632      6574526F 
 4632      7700
 4633              	.LASF72:
 4634 018e 696E7374 		.ascii	"instructionsList\000"
 4634      72756374 
 4634      696F6E73 
 4634      4C697374 
 4634      00
 4635              	.LASF64:
 4636 019f 63686563 		.ascii	"checkPathDirection\000"
 4636      6B506174 
 4636      68446972 
 4636      65637469 
 4636      6F6E00
 4637              	.LASF76:
 4638 01b2 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 4638      5F6F665F 
 4638      6F707469 
 4638      6D616C5F 
 4638      636F6F72 
 4639              	.LASF8:
 4640 01ce 756E7369 		.ascii	"unsigned int\000"
 4640      676E6564 
 4640      20696E74 
 4640      00
 4641              	.LASF46:
 4642 01db 73686F72 		.ascii	"shortestDist\000"
 4642      74657374 
 4642      44697374 
 4642      00
 4643              	.LASF5:
 4644 01e8 6C6F6E67 		.ascii	"long unsigned int\000"
 4644      20756E73 
 4644      69676E65 
 4644      6420696E 
 4644      7400
 4645              	.LASF60:
 4646 01fa 74617267 		.ascii	"targetOrientation\000"
 4646      65744F72 
 4646      69656E74 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 94


 4646      6174696F 
 4646      6E00
 4647              	.LASF3:
 4648 020c 73686F72 		.ascii	"short unsigned int\000"
 4648      7420756E 
 4648      7369676E 
 4648      65642069 
 4648      6E7400
 4649              	.LASF19:
 4650 021f 53746F70 		.ascii	"StopAtTarget\000"
 4650      41745461 
 4650      72676574 
 4650      00
 4651              	.LASF52:
 4652 022c 6E657752 		.ascii	"newRow\000"
 4652      6F7700
 4653              	.LASF43:
 4654 0233 70715369 		.ascii	"pqSize\000"
 4654      7A6500
 4655              	.LASF55:
 4656 023a 67657450 		.ascii	"getPathInstructions\000"
 4656      61746849 
 4656      6E737472 
 4656      75637469 
 4656      6F6E7300 
 4657              	.LASF28:
 4658 024e 4C656674 		.ascii	"Left\000"
 4658      00
 4659              	.LASF10:
 4660 0253 73697A65 		.ascii	"sizetype\000"
 4660      74797065 
 4660      00
 4661              	.LASF9:
 4662 025c 6C6F6E67 		.ascii	"long double\000"
 4662      20646F75 
 4662      626C6500 
 4663              	.LASF48:
 4664 0268 63757272 		.ascii	"currentRow\000"
 4664      656E7452 
 4664      6F7700
 4665              	.LASF65:
 4666 0273 63686563 		.ascii	"checkIgnoreTurn\000"
 4666      6B49676E 
 4666      6F726554 
 4666      75726E00 
 4667              	.LASF15:
 4668 0283 77616974 		.ascii	"waitForLeftTurn\000"
 4668      466F724C 
 4668      65667454 
 4668      75726E00 
 4669              	.LASF51:
 4670 0293 63757272 		.ascii	"current\000"
 4670      656E7400 
 4671              	.LASF50:
 4672 029b 70617468 		.ascii	"pathIndex\000"
 4672      496E6465 
 4672      7800
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 95


 4673              	.LASF32:
 4674 02a5 636C6561 		.ascii	"clearMap\000"
 4674      724D6170 
 4674      00
 4675              	.LASF61:
 4676 02ae 6E657744 		.ascii	"newDirection\000"
 4676      69726563 
 4676      74696F6E 
 4676      00
 4677              	.LASF35:
 4678 02bb 5F426F6F 		.ascii	"_Bool\000"
 4678      6C00
 4679              	.LASF1:
 4680 02c1 756E7369 		.ascii	"unsigned char\000"
 4680      676E6564 
 4680      20636861 
 4680      7200
 4681              	.LASF25:
 4682 02cf 496E7374 		.ascii	"InstructionDirection\000"
 4682      72756374 
 4682      696F6E44 
 4682      69726563 
 4682      74696F6E 
 4683              	.LASF67:
 4684 02e4 67657454 		.ascii	"getTargetOrientation\000"
 4684      61726765 
 4684      744F7269 
 4684      656E7461 
 4684      74696F6E 
 4685              	.LASF70:
 4686 02f9 66696E64 		.ascii	"findPath\000"
 4686      50617468 
 4686      00
 4687              	.LASF2:
 4688 0302 73686F72 		.ascii	"short int\000"
 4688      7420696E 
 4688      7400
 4689              	.LASF58:
 4690 030c 74617267 		.ascii	"targetLocation\000"
 4690      65744C6F 
 4690      63617469 
 4690      6F6E00
 4691              	.LASF73:
 4692 031b 70726576 		.ascii	"previousRobotOrientation\000"
 4692      696F7573 
 4692      526F626F 
 4692      744F7269 
 4692      656E7461 
 4693              	.LASF14:
 4694 0334 476F466F 		.ascii	"GoForward\000"
 4694      72776172 
 4694      6400
 4695              	.LASF29:
 4696 033e 52696768 		.ascii	"Right\000"
 4696      7400
 4697              	.LASF56:
 4698 0344 6E756D53 		.ascii	"numSteps\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 96


 4698      74657073 
 4698      00
 4699              	.LASF59:
 4700 034d 6C697374 		.ascii	"listIndex\000"
 4700      496E6465 
 4700      7800
 4701              	.LASF47:
 4702 0357 72657453 		.ascii	"retSteps\000"
 4702      74657073 
 4702      00
 4703              	.LASF41:
 4704 0360 6C6F6361 		.ascii	"location\000"
 4704      74696F6E 
 4704      00
 4705              	.LASF39:
 4706 0369 76697369 		.ascii	"visitedMap\000"
 4706      7465644D 
 4706      617000
 4707              	.LASF11:
 4708 0374 63686172 		.ascii	"char\000"
 4708      00
 4709              	.LASF75:
 4710 0379 73746172 		.ascii	"start_pos\000"
 4710      745F706F 
 4710      7300
 4711              	.LASF80:
 4712 0383 433A5C55 		.ascii	"C:\\Users\\ianku\\OneDrive\\Documents\\301-Robot\\p"
 4712      73657273 
 4712      5C69616E 
 4712      6B755C4F 
 4712      6E654472 
 4713 03b0 736F6320 		.ascii	"soc student pack\\psoc_code_base\\CS301_Class.cydsn"
 4713      73747564 
 4713      656E7420 
 4713      7061636B 
 4713      5C70736F 
 4714 03e1 00       		.ascii	"\000"
 4715              	.LASF42:
 4716 03e2 64697374 		.ascii	"distance\000"
 4716      616E6365 
 4716      00
 4717              	.LASF71:
 4718 03eb 666F6F64 		.ascii	"food_list\000"
 4718      5F6C6973 
 4718      7400
 4719              	.LASF27:
 4720 03f5 446F776E 		.ascii	"Down\000"
 4720      00
 4721              	.LASF74:
 4722 03fa 63757272 		.ascii	"currentRobotOrientation\000"
 4722      656E7452 
 4722      6F626F74 
 4722      4F726965 
 4722      6E746174 
 4723              	.LASF54:
 4724 0412 6E657744 		.ascii	"newDistance\000"
 4724      69737461 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 97


 4724      6E636500 
 4725              	.LASF79:
 4726 041e 70617468 		.ascii	"pathfinding.c\000"
 4726      66696E64 
 4726      696E672E 
 4726      6300
 4727              	.LASF66:
 4728 042c 726F626F 		.ascii	"robotOrientation\000"
 4728      744F7269 
 4728      656E7461 
 4728      74696F6E 
 4728      00
 4729              	.LASF16:
 4730 043d 77616974 		.ascii	"waitForRightTurn\000"
 4730      466F7252 
 4730      69676874 
 4730      5475726E 
 4730      00
 4731              	.LASF40:
 4732 044e 5072696F 		.ascii	"PriorityQueue\000"
 4732      72697479 
 4732      51756575 
 4732      6500
 4733              	.LASF57:
 4734 045c 73746172 		.ascii	"startLocation\000"
 4734      744C6F63 
 4734      6174696F 
 4734      6E00
 4735              	.LASF13:
 4736 046a 75696E74 		.ascii	"uint8_t\000"
 4736      385F7400 
 4737              	.LASF81:
 4738 0472 696E7374 		.ascii	"instructionsListLength\000"
 4738      72756374 
 4738      696F6E73 
 4738      4C697374 
 4738      4C656E67 
 4739              	.LASF77:
 4740 0489 6D6F7665 		.ascii	"moves\000"
 4740      7300
 4741              	.LASF69:
 4742 048f 74617267 		.ascii	"targetCol\000"
 4742      6574436F 
 4742      6C00
 4743              	.LASF34:
 4744 0499 636F6C73 		.ascii	"cols\000"
 4744      00
 4745              	.LASF62:
 4746 049e 6E657874 		.ascii	"nextStep\000"
 4746      53746570 
 4746      00
 4747              	.LASF22:
 4748 04a7 69676E6F 		.ascii	"ignoreL\000"
 4748      72654C00 
 4749              	.LASF23:
 4750 04af 69676E6F 		.ascii	"ignoreR\000"
 4750      72655200 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\ccujlWmU.s 			page 98


 4751              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
