ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 01       		.byte	1
  26              		.comm	instructionsList,3420,4
  27              		.global	numSteps
  28              		.bss
  29              		.align	2
  30              		.type	numSteps, %object
  31              		.size	numSteps, 4
  32              	numSteps:
  33 0000 00000000 		.space	4
  34              		.global	map
  35              		.data
  36 0001 000000   		.align	2
  37              		.type	map, %object
  38              		.size	map, 1140
  39              	map:
  40 0004 01000000 		.word	1
  41 0008 01000000 		.word	1
  42 000c 01000000 		.word	1
  43 0010 01000000 		.word	1
  44 0014 01000000 		.word	1
  45 0018 01000000 		.word	1
  46 001c 01000000 		.word	1
  47 0020 01000000 		.word	1
  48 0024 01000000 		.word	1
  49 0028 01000000 		.word	1
  50 002c 01000000 		.word	1
  51 0030 01000000 		.word	1
  52 0034 01000000 		.word	1
  53 0038 01000000 		.word	1
  54 003c 01000000 		.word	1
  55 0040 01000000 		.word	1
  56 0044 01000000 		.word	1
  57 0048 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 2


  58 004c 01000000 		.word	1
  59 0050 01000000 		.word	1
  60 0054 00000000 		.word	0
  61 0058 01000000 		.word	1
  62 005c 00000000 		.word	0
  63 0060 00000000 		.word	0
  64 0064 00000000 		.word	0
  65 0068 00000000 		.word	0
  66 006c 00000000 		.word	0
  67 0070 00000000 		.word	0
  68 0074 00000000 		.word	0
  69 0078 00000000 		.word	0
  70 007c 00000000 		.word	0
  71 0080 00000000 		.word	0
  72 0084 00000000 		.word	0
  73 0088 00000000 		.word	0
  74 008c 00000000 		.word	0
  75 0090 00000000 		.word	0
  76 0094 00000000 		.word	0
  77 0098 01000000 		.word	1
  78 009c 01000000 		.word	1
  79 00a0 00000000 		.word	0
  80 00a4 01000000 		.word	1
  81 00a8 00000000 		.word	0
  82 00ac 01000000 		.word	1
  83 00b0 01000000 		.word	1
  84 00b4 01000000 		.word	1
  85 00b8 01000000 		.word	1
  86 00bc 01000000 		.word	1
  87 00c0 00000000 		.word	0
  88 00c4 01000000 		.word	1
  89 00c8 01000000 		.word	1
  90 00cc 01000000 		.word	1
  91 00d0 00000000 		.word	0
  92 00d4 01000000 		.word	1
  93 00d8 01000000 		.word	1
  94 00dc 01000000 		.word	1
  95 00e0 00000000 		.word	0
  96 00e4 01000000 		.word	1
  97 00e8 01000000 		.word	1
  98 00ec 00000000 		.word	0
  99 00f0 00000000 		.word	0
 100 00f4 00000000 		.word	0
 101 00f8 01000000 		.word	1
 102 00fc 00000000 		.word	0
 103 0100 00000000 		.word	0
 104 0104 00000000 		.word	0
 105 0108 01000000 		.word	1
 106 010c 00000000 		.word	0
 107 0110 00000000 		.word	0
 108 0114 00000000 		.word	0
 109 0118 00000000 		.word	0
 110 011c 00000000 		.word	0
 111 0120 00000000 		.word	0
 112 0124 00000000 		.word	0
 113 0128 01000000 		.word	1
 114 012c 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 3


 115 0130 01000000 		.word	1
 116 0134 01000000 		.word	1
 117 0138 01000000 		.word	1
 118 013c 01000000 		.word	1
 119 0140 00000000 		.word	0
 120 0144 01000000 		.word	1
 121 0148 00000000 		.word	0
 122 014c 01000000 		.word	1
 123 0150 00000000 		.word	0
 124 0154 01000000 		.word	1
 125 0158 01000000 		.word	1
 126 015c 01000000 		.word	1
 127 0160 00000000 		.word	0
 128 0164 01000000 		.word	1
 129 0168 00000000 		.word	0
 130 016c 01000000 		.word	1
 131 0170 01000000 		.word	1
 132 0174 01000000 		.word	1
 133 0178 00000000 		.word	0
 134 017c 01000000 		.word	1
 135 0180 01000000 		.word	1
 136 0184 00000000 		.word	0
 137 0188 00000000 		.word	0
 138 018c 00000000 		.word	0
 139 0190 01000000 		.word	1
 140 0194 00000000 		.word	0
 141 0198 01000000 		.word	1
 142 019c 00000000 		.word	0
 143 01a0 00000000 		.word	0
 144 01a4 00000000 		.word	0
 145 01a8 01000000 		.word	1
 146 01ac 00000000 		.word	0
 147 01b0 01000000 		.word	1
 148 01b4 00000000 		.word	0
 149 01b8 00000000 		.word	0
 150 01bc 00000000 		.word	0
 151 01c0 00000000 		.word	0
 152 01c4 00000000 		.word	0
 153 01c8 01000000 		.word	1
 154 01cc 01000000 		.word	1
 155 01d0 00000000 		.word	0
 156 01d4 01000000 		.word	1
 157 01d8 01000000 		.word	1
 158 01dc 01000000 		.word	1
 159 01e0 00000000 		.word	0
 160 01e4 01000000 		.word	1
 161 01e8 00000000 		.word	0
 162 01ec 01000000 		.word	1
 163 01f0 00000000 		.word	0
 164 01f4 01000000 		.word	1
 165 01f8 00000000 		.word	0
 166 01fc 01000000 		.word	1
 167 0200 00000000 		.word	0
 168 0204 01000000 		.word	1
 169 0208 01000000 		.word	1
 170 020c 01000000 		.word	1
 171 0210 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 4


 172 0214 01000000 		.word	1
 173 0218 01000000 		.word	1
 174 021c 00000000 		.word	0
 175 0220 01000000 		.word	1
 176 0224 00000000 		.word	0
 177 0228 01000000 		.word	1
 178 022c 00000000 		.word	0
 179 0230 00000000 		.word	0
 180 0234 00000000 		.word	0
 181 0238 01000000 		.word	1
 182 023c 00000000 		.word	0
 183 0240 01000000 		.word	1
 184 0244 00000000 		.word	0
 185 0248 01000000 		.word	1
 186 024c 00000000 		.word	0
 187 0250 01000000 		.word	1
 188 0254 00000000 		.word	0
 189 0258 00000000 		.word	0
 190 025c 00000000 		.word	0
 191 0260 01000000 		.word	1
 192 0264 01000000 		.word	1
 193 0268 00000000 		.word	0
 194 026c 01000000 		.word	1
 195 0270 00000000 		.word	0
 196 0274 01000000 		.word	1
 197 0278 00000000 		.word	0
 198 027c 01000000 		.word	1
 199 0280 01000000 		.word	1
 200 0284 01000000 		.word	1
 201 0288 00000000 		.word	0
 202 028c 01000000 		.word	1
 203 0290 00000000 		.word	0
 204 0294 01000000 		.word	1
 205 0298 00000000 		.word	0
 206 029c 01000000 		.word	1
 207 02a0 00000000 		.word	0
 208 02a4 01000000 		.word	1
 209 02a8 01000000 		.word	1
 210 02ac 01000000 		.word	1
 211 02b0 01000000 		.word	1
 212 02b4 00000000 		.word	0
 213 02b8 00000000 		.word	0
 214 02bc 00000000 		.word	0
 215 02c0 01000000 		.word	1
 216 02c4 00000000 		.word	0
 217 02c8 01000000 		.word	1
 218 02cc 00000000 		.word	0
 219 02d0 00000000 		.word	0
 220 02d4 00000000 		.word	0
 221 02d8 01000000 		.word	1
 222 02dc 00000000 		.word	0
 223 02e0 00000000 		.word	0
 224 02e4 00000000 		.word	0
 225 02e8 01000000 		.word	1
 226 02ec 00000000 		.word	0
 227 02f0 00000000 		.word	0
 228 02f4 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 5


 229 02f8 01000000 		.word	1
 230 02fc 01000000 		.word	1
 231 0300 01000000 		.word	1
 232 0304 01000000 		.word	1
 233 0308 00000000 		.word	0
 234 030c 01000000 		.word	1
 235 0310 00000000 		.word	0
 236 0314 01000000 		.word	1
 237 0318 01000000 		.word	1
 238 031c 01000000 		.word	1
 239 0320 01000000 		.word	1
 240 0324 01000000 		.word	1
 241 0328 01000000 		.word	1
 242 032c 01000000 		.word	1
 243 0330 01000000 		.word	1
 244 0334 01000000 		.word	1
 245 0338 01000000 		.word	1
 246 033c 01000000 		.word	1
 247 0340 00000000 		.word	0
 248 0344 01000000 		.word	1
 249 0348 01000000 		.word	1
 250 034c 00000000 		.word	0
 251 0350 00000000 		.word	0
 252 0354 00000000 		.word	0
 253 0358 00000000 		.word	0
 254 035c 00000000 		.word	0
 255 0360 00000000 		.word	0
 256 0364 00000000 		.word	0
 257 0368 00000000 		.word	0
 258 036c 00000000 		.word	0
 259 0370 00000000 		.word	0
 260 0374 00000000 		.word	0
 261 0378 00000000 		.word	0
 262 037c 00000000 		.word	0
 263 0380 00000000 		.word	0
 264 0384 00000000 		.word	0
 265 0388 00000000 		.word	0
 266 038c 00000000 		.word	0
 267 0390 01000000 		.word	1
 268 0394 01000000 		.word	1
 269 0398 00000000 		.word	0
 270 039c 01000000 		.word	1
 271 03a0 01000000 		.word	1
 272 03a4 01000000 		.word	1
 273 03a8 01000000 		.word	1
 274 03ac 01000000 		.word	1
 275 03b0 01000000 		.word	1
 276 03b4 01000000 		.word	1
 277 03b8 01000000 		.word	1
 278 03bc 01000000 		.word	1
 279 03c0 01000000 		.word	1
 280 03c4 01000000 		.word	1
 281 03c8 00000000 		.word	0
 282 03cc 01000000 		.word	1
 283 03d0 01000000 		.word	1
 284 03d4 01000000 		.word	1
 285 03d8 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 6


 286 03dc 01000000 		.word	1
 287 03e0 01000000 		.word	1
 288 03e4 00000000 		.word	0
 289 03e8 00000000 		.word	0
 290 03ec 00000000 		.word	0
 291 03f0 00000000 		.word	0
 292 03f4 00000000 		.word	0
 293 03f8 00000000 		.word	0
 294 03fc 00000000 		.word	0
 295 0400 01000000 		.word	1
 296 0404 00000000 		.word	0
 297 0408 00000000 		.word	0
 298 040c 00000000 		.word	0
 299 0410 00000000 		.word	0
 300 0414 00000000 		.word	0
 301 0418 00000000 		.word	0
 302 041c 00000000 		.word	0
 303 0420 00000000 		.word	0
 304 0424 00000000 		.word	0
 305 0428 01000000 		.word	1
 306 042c 01000000 		.word	1
 307 0430 01000000 		.word	1
 308 0434 01000000 		.word	1
 309 0438 01000000 		.word	1
 310 043c 01000000 		.word	1
 311 0440 01000000 		.word	1
 312 0444 01000000 		.word	1
 313 0448 01000000 		.word	1
 314 044c 01000000 		.word	1
 315 0450 01000000 		.word	1
 316 0454 01000000 		.word	1
 317 0458 01000000 		.word	1
 318 045c 01000000 		.word	1
 319 0460 01000000 		.word	1
 320 0464 01000000 		.word	1
 321 0468 01000000 		.word	1
 322 046c 01000000 		.word	1
 323 0470 01000000 		.word	1
 324 0474 01000000 		.word	1
 325              		.global	start_pos
 326              		.align	2
 327              		.type	start_pos, %object
 328              		.size	start_pos, 8
 329              	start_pos:
 330 0478 01000000 		.word	1
 331 047c 01000000 		.word	1
 332              		.global	food_list
 333              		.align	2
 334              		.type	food_list, %object
 335              		.size	food_list, 40
 336              	food_list:
 337 0480 01000000 		.word	1
 338 0484 09000000 		.word	9
 339 0488 05000000 		.word	5
 340 048c 05000000 		.word	5
 341 0490 07000000 		.word	7
 342 0494 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 7


 343 0498 0D000000 		.word	13
 344 049c 05000000 		.word	5
 345 04a0 09000000 		.word	9
 346 04a4 09000000 		.word	9
 347              		.comm	path_of_coordinates,2280,4
 348              		.section	.rodata
 349              		.align	2
 350              	.LC0:
 351 0000 256400   		.ascii	"%d\000"
 352              		.section	.text.printMap,"ax",%progbits
 353              		.align	2
 354              		.global	printMap
 355              		.thumb
 356              		.thumb_func
 357              		.type	printMap, %function
 358              	printMap:
 359              	.LFB1:
 360              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** 
  18:pathfinding.c **** #define MAX_ROWS 15
  19:pathfinding.c **** #define MAX_COLS 19
  20:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  21:pathfinding.c **** 
  22:pathfinding.c **** enum InstructionDirection {GoForward, waitForLeftTurn, waitForRightTurn, uTurn, ForwardUntilTarget,
  23:pathfinding.c **** enum OrientationState {Up, Down, Left, Right};
  24:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Down; // initialize 
  25:pathfinding.c **** typedef struct Instructions {
  26:pathfinding.c ****     enum InstructionDirection direction;
  27:pathfinding.c ****     int ignoreL;
  28:pathfinding.c ****     int ignoreR;
  29:pathfinding.c **** } Instructions;
  30:pathfinding.c **** 
  31:pathfinding.c **** Instructions instructionsList[285];
  32:pathfinding.c **** int numSteps = 0;
  33:pathfinding.c **** 
  34:pathfinding.c **** int instructionsListLength();
  35:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  36:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  37:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  38:pathfinding.c **** Instructions * processInstructionList(int index);
  39:pathfinding.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 8


  40:pathfinding.c **** int map[15][19] = {
  41:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  42:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
  44:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  47:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  48:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  49:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  50:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  51:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  52:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  53:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  54:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  55:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  56:pathfinding.c **** };
  57:pathfinding.c **** 
  58:pathfinding.c **** /*
  59:pathfinding.c **** int map[15][19] = {
  60:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  62:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  64:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  65:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  66:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  68:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  69:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  70:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  71:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  72:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  73:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  74:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  75:pathfinding.c **** };
  76:pathfinding.c **** */
  77:pathfinding.c **** 
  78:pathfinding.c **** 
  79:pathfinding.c **** int start_pos[2] = {1,1};
  80:pathfinding.c **** 
  81:pathfinding.c **** int food_list[5][2]= {
  82:pathfinding.c **** {1,9},
  83:pathfinding.c **** {5,5},
  84:pathfinding.c **** {7,1},
  85:pathfinding.c **** {13,5},
  86:pathfinding.c **** {9,9}
  87:pathfinding.c **** };
  88:pathfinding.c **** 
  89:pathfinding.c **** int path_of_coordinates[285][2];
  90:pathfinding.c **** 
  91:pathfinding.c **** 
  92:pathfinding.c **** // MAP INITIALISATION CODE
  93:pathfinding.c **** 
  94:pathfinding.c **** /*void printMap(char map[MAX_ROWS][MAX_COLS]) {
  95:pathfinding.c ****     // Print the map in a grid format
  96:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 9


  97:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
  98:pathfinding.c ****             printf("%c", map[i][j]);
  99:pathfinding.c ****         }
 100:pathfinding.c ****         printf("\n");
 101:pathfinding.c ****     }
 102:pathfinding.c **** }*/
 103:pathfinding.c **** 
 104:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 361              		.loc 1 104 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 16
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 80B5     		push	{r7, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 84B0     		sub	sp, sp, #16
 370              		.cfi_def_cfa_offset 24
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 374              	.LBB2:
 105:pathfinding.c ****     // Print the map in a grid format
 106:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 375              		.loc 1 106 0
 376 0008 0023     		movs	r3, #0
 377 000a FB60     		str	r3, [r7, #12]
 378 000c 1BE0     		b	.L2
 379              	.L5:
 380              	.LBB3:
 107:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 381              		.loc 1 107 0
 382 000e 0023     		movs	r3, #0
 383 0010 BB60     		str	r3, [r7, #8]
 384 0012 0FE0     		b	.L3
 385              	.L4:
 108:pathfinding.c ****             printf("%d", map[i][j]);
 386              		.loc 1 108 0 discriminator 3
 387 0014 FB68     		ldr	r3, [r7, #12]
 388 0016 4C22     		movs	r2, #76
 389 0018 02FB03F3 		mul	r3, r2, r3
 390 001c 7A68     		ldr	r2, [r7, #4]
 391 001e 1344     		add	r3, r3, r2
 392 0020 BA68     		ldr	r2, [r7, #8]
 393 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 394 0026 1946     		mov	r1, r3
 395 0028 0A48     		ldr	r0, .L6
 396 002a FFF7FEFF 		bl	printf
 107:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 397              		.loc 1 107 0 discriminator 3
 398 002e BB68     		ldr	r3, [r7, #8]
 399 0030 0133     		adds	r3, r3, #1
 400 0032 BB60     		str	r3, [r7, #8]
 401              	.L3:
 107:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 402              		.loc 1 107 0 is_stmt 0 discriminator 1
 403 0034 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 10


 404 0036 122B     		cmp	r3, #18
 405 0038 ECDD     		ble	.L4
 406              	.LBE3:
 109:pathfinding.c ****         }
 110:pathfinding.c ****         printf("\n");
 407              		.loc 1 110 0 is_stmt 1 discriminator 2
 408 003a 0A20     		movs	r0, #10
 409 003c FFF7FEFF 		bl	putchar
 106:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 410              		.loc 1 106 0 discriminator 2
 411 0040 FB68     		ldr	r3, [r7, #12]
 412 0042 0133     		adds	r3, r3, #1
 413 0044 FB60     		str	r3, [r7, #12]
 414              	.L2:
 106:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 415              		.loc 1 106 0 is_stmt 0 discriminator 1
 416 0046 FB68     		ldr	r3, [r7, #12]
 417 0048 0E2B     		cmp	r3, #14
 418 004a E0DD     		ble	.L5
 419              	.LBE2:
 111:pathfinding.c ****     }
 112:pathfinding.c **** }
 420              		.loc 1 112 0 is_stmt 1
 421 004c 00BF     		nop
 422 004e 1037     		adds	r7, r7, #16
 423              		.cfi_def_cfa_offset 8
 424 0050 BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 0052 80BD     		pop	{r7, pc}
 428              	.L7:
 429              		.align	2
 430              	.L6:
 431 0054 00000000 		.word	.LC0
 432              		.cfi_endproc
 433              	.LFE1:
 434              		.size	printMap, .-printMap
 435              		.section	.text.clearMap,"ax",%progbits
 436              		.align	2
 437              		.global	clearMap
 438              		.thumb
 439              		.thumb_func
 440              		.type	clearMap, %function
 441              	clearMap:
 442              	.LFB2:
 113:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 443              		.loc 1 113 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 16
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448 0000 80B4     		push	{r7}
 449              		.cfi_def_cfa_offset 4
 450              		.cfi_offset 7, -4
 451 0002 85B0     		sub	sp, sp, #20
 452              		.cfi_def_cfa_offset 24
 453 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 11


 454              		.cfi_def_cfa_register 7
 455 0006 7860     		str	r0, [r7, #4]
 456              	.LBB4:
 114:pathfinding.c ****     // Print the map in a grid format
 115:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 457              		.loc 1 115 0
 458 0008 0023     		movs	r3, #0
 459 000a FB60     		str	r3, [r7, #12]
 460 000c 20E0     		b	.L9
 461              	.L13:
 462              	.LBB5:
 116:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 463              		.loc 1 116 0
 464 000e 0023     		movs	r3, #0
 465 0010 BB60     		str	r3, [r7, #8]
 466 0012 17E0     		b	.L10
 467              	.L12:
 117:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
 468              		.loc 1 117 0
 469 0014 FB68     		ldr	r3, [r7, #12]
 470 0016 4C22     		movs	r2, #76
 471 0018 02FB03F3 		mul	r3, r2, r3
 472 001c 7A68     		ldr	r2, [r7, #4]
 473 001e 1344     		add	r3, r3, r2
 474 0020 BA68     		ldr	r2, [r7, #8]
 475 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 476 0026 012B     		cmp	r3, #1
 477 0028 09D0     		beq	.L11
 478              		.loc 1 117 0 is_stmt 0 discriminator 1
 479 002a FB68     		ldr	r3, [r7, #12]
 480 002c 4C22     		movs	r2, #76
 481 002e 02FB03F3 		mul	r3, r2, r3
 482 0032 7A68     		ldr	r2, [r7, #4]
 483 0034 1344     		add	r3, r3, r2
 484 0036 BA68     		ldr	r2, [r7, #8]
 485 0038 0021     		movs	r1, #0
 486 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 487              	.L11:
 116:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 488              		.loc 1 116 0 is_stmt 1 discriminator 2
 489 003e BB68     		ldr	r3, [r7, #8]
 490 0040 0133     		adds	r3, r3, #1
 491 0042 BB60     		str	r3, [r7, #8]
 492              	.L10:
 116:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 493              		.loc 1 116 0 is_stmt 0 discriminator 1
 494 0044 BB68     		ldr	r3, [r7, #8]
 495 0046 122B     		cmp	r3, #18
 496 0048 E4DD     		ble	.L12
 497              	.LBE5:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 498              		.loc 1 115 0 is_stmt 1 discriminator 2
 499 004a FB68     		ldr	r3, [r7, #12]
 500 004c 0133     		adds	r3, r3, #1
 501 004e FB60     		str	r3, [r7, #12]
 502              	.L9:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 12


 503              		.loc 1 115 0 is_stmt 0 discriminator 1
 504 0050 FB68     		ldr	r3, [r7, #12]
 505 0052 0E2B     		cmp	r3, #14
 506 0054 DBDD     		ble	.L13
 507              	.LBE4:
 118:pathfinding.c ****         }
 119:pathfinding.c ****     }
 120:pathfinding.c **** }
 508              		.loc 1 120 0 is_stmt 1
 509 0056 00BF     		nop
 510 0058 1437     		adds	r7, r7, #20
 511              		.cfi_def_cfa_offset 4
 512 005a BD46     		mov	sp, r7
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 005c 80BC     		pop	{r7}
 516              		.cfi_restore 7
 517              		.cfi_def_cfa_offset 0
 518 005e 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE2:
 521              		.size	clearMap, .-clearMap
 522              		.comm	list_of_optimal_coordinates,2280,4
 523              		.global	moves
 524              		.data
 525              		.align	2
 526              		.type	moves, %object
 527              		.size	moves, 32
 528              	moves:
 529 04a8 00000000 		.word	0
 530 04ac 01000000 		.word	1
 531 04b0 00000000 		.word	0
 532 04b4 FFFFFFFF 		.word	-1
 533 04b8 01000000 		.word	1
 534 04bc 00000000 		.word	0
 535 04c0 FFFFFFFF 		.word	-1
 536 04c4 00000000 		.word	0
 537              		.section	.text.isValidMove,"ax",%progbits
 538              		.align	2
 539              		.global	isValidMove
 540              		.thumb
 541              		.thumb_func
 542              		.type	isValidMove, %function
 543              	isValidMove:
 544              	.LFB3:
 121:pathfinding.c **** struct Location {
 122:pathfinding.c ****     int row;
 123:pathfinding.c ****     int col;
 124:pathfinding.c **** };
 125:pathfinding.c **** 
 126:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 127:pathfinding.c **** 
 128:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 129:pathfinding.c **** 
 130:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 545              		.loc 1 130 0
 546              		.cfi_startproc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 13


 547              		@ args = 4, pretend = 0, frame = 16
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550 0000 80B4     		push	{r7}
 551              		.cfi_def_cfa_offset 4
 552              		.cfi_offset 7, -4
 553 0002 85B0     		sub	sp, sp, #20
 554              		.cfi_def_cfa_offset 24
 555 0004 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 557 0006 F860     		str	r0, [r7, #12]
 558 0008 B960     		str	r1, [r7, #8]
 559 000a 7A60     		str	r2, [r7, #4]
 560 000c 3B60     		str	r3, [r7]
 131:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 561              		.loc 1 131 0
 562 000e FB68     		ldr	r3, [r7, #12]
 563 0010 002B     		cmp	r3, #0
 564 0012 17DB     		blt	.L15
 565              		.loc 1 131 0 is_stmt 0 discriminator 1
 566 0014 FA68     		ldr	r2, [r7, #12]
 567 0016 7B68     		ldr	r3, [r7, #4]
 568 0018 9A42     		cmp	r2, r3
 569 001a 13DA     		bge	.L15
 570              		.loc 1 131 0 discriminator 3
 571 001c BB68     		ldr	r3, [r7, #8]
 572 001e 002B     		cmp	r3, #0
 573 0020 10DB     		blt	.L15
 574              		.loc 1 131 0 discriminator 5
 575 0022 BA68     		ldr	r2, [r7, #8]
 576 0024 3B68     		ldr	r3, [r7]
 577 0026 9A42     		cmp	r2, r3
 578 0028 0CDA     		bge	.L15
 579              		.loc 1 131 0 discriminator 7
 580 002a FB68     		ldr	r3, [r7, #12]
 581 002c 4C22     		movs	r2, #76
 582 002e 02FB03F3 		mul	r3, r2, r3
 583 0032 BA69     		ldr	r2, [r7, #24]
 584 0034 1344     		add	r3, r3, r2
 585 0036 BA68     		ldr	r2, [r7, #8]
 586 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 587 003c 002B     		cmp	r3, #0
 588 003e 01D1     		bne	.L15
 589              		.loc 1 131 0 discriminator 9
 590 0040 0123     		movs	r3, #1
 591 0042 00E0     		b	.L16
 592              	.L15:
 593              		.loc 1 131 0 discriminator 10
 594 0044 0023     		movs	r3, #0
 595              	.L16:
 596              		.loc 1 131 0 discriminator 12
 597 0046 03F00103 		and	r3, r3, #1
 598 004a DBB2     		uxtb	r3, r3
 132:pathfinding.c **** }
 599              		.loc 1 132 0 is_stmt 1 discriminator 12
 600 004c 1846     		mov	r0, r3
 601 004e 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 14


 602              		.cfi_def_cfa_offset 4
 603 0050 BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 0052 80BC     		pop	{r7}
 607              		.cfi_restore 7
 608              		.cfi_def_cfa_offset 0
 609 0054 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE3:
 612              		.size	isValidMove, .-isValidMove
 613 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 614              		.align	2
 615              		.global	dijkstra
 616              		.thumb
 617              		.thumb_func
 618              		.type	dijkstra, %function
 619              	dijkstra:
 620              	.LFB4:
 133:pathfinding.c **** 
 134:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
 621              		.loc 1 134 0
 622              		.cfi_startproc
 623              		@ args = 12, pretend = 8, frame = 5816
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 82B0     		sub	sp, sp, #8
 626              		.cfi_def_cfa_offset 8
 627 0002 90B5     		push	{r4, r7, lr}
 628              		.cfi_def_cfa_offset 20
 629              		.cfi_offset 4, -20
 630              		.cfi_offset 7, -16
 631              		.cfi_offset 14, -12
 632 0004 ADF5B65D 		sub	sp, sp, #5824
 633              		.cfi_def_cfa_offset 5844
 634 0008 81B0     		sub	sp, sp, #4
 635              		.cfi_def_cfa_offset 5848
 636 000a 02AF     		add	r7, sp, #8
 637              		.cfi_def_cfa 7, 5840
 638 000c 07F11804 		add	r4, r7, #24
 639 0010 0C3C     		subs	r4, r4, #12
 640 0012 2060     		str	r0, [r4]
 641 0014 07F11800 		add	r0, r7, #24
 642 0018 1438     		subs	r0, r0, #20
 643 001a 80E80600 		stmia	r0, {r1, r2}
 644 001e 07F5B652 		add	r2, r7, #5824
 645 0022 02F10C02 		add	r2, r2, #12
 646 0026 1360     		str	r3, [r2]
 647              	.LBB6:
 135:pathfinding.c **** 
 136:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 137:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 648              		.loc 1 137 0
 649 0028 0023     		movs	r3, #0
 650 002a 07F5B552 		add	r2, r7, #5792
 651 002e 02F11402 		add	r2, r2, #20
 652 0032 1360     		str	r3, [r2]
 653 0034 3AE0     		b	.L19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 15


 654              	.L22:
 655              	.LBB7:
 138:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 656              		.loc 1 138 0
 657 0036 0023     		movs	r3, #0
 658 0038 07F5B552 		add	r2, r7, #5792
 659 003c 02F11002 		add	r2, r2, #16
 660 0040 1360     		str	r3, [r2]
 661 0042 21E0     		b	.L20
 662              	.L21:
 139:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 663              		.loc 1 139 0 discriminator 3
 664 0044 07F58F51 		add	r1, r7, #4576
 665 0048 01F10C01 		add	r1, r1, #12
 666 004c 07F5B553 		add	r3, r7, #5792
 667 0050 03F11403 		add	r3, r3, #20
 668 0054 1A68     		ldr	r2, [r3]
 669 0056 1346     		mov	r3, r2
 670 0058 DB00     		lsls	r3, r3, #3
 671 005a 1344     		add	r3, r3, r2
 672 005c 5B00     		lsls	r3, r3, #1
 673 005e 1344     		add	r3, r3, r2
 674 0060 07F5B552 		add	r2, r7, #5792
 675 0064 02F11002 		add	r2, r2, #16
 676 0068 1268     		ldr	r2, [r2]
 677 006a 1344     		add	r3, r3, r2
 678 006c 0122     		movs	r2, #1
 679 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 138:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 680              		.loc 1 138 0 discriminator 3
 681 0072 07F5B553 		add	r3, r7, #5792
 682 0076 03F11003 		add	r3, r3, #16
 683 007a 1B68     		ldr	r3, [r3]
 684 007c 0133     		adds	r3, r3, #1
 685 007e 07F5B552 		add	r2, r7, #5792
 686 0082 02F11002 		add	r2, r2, #16
 687 0086 1360     		str	r3, [r2]
 688              	.L20:
 138:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 689              		.loc 1 138 0 is_stmt 0 discriminator 1
 690 0088 07F5B553 		add	r3, r7, #5792
 691 008c 03F11003 		add	r3, r3, #16
 692 0090 1B68     		ldr	r3, [r3]
 693 0092 122B     		cmp	r3, #18
 694 0094 D6DD     		ble	.L21
 695              	.LBE7:
 137:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 696              		.loc 1 137 0 is_stmt 1 discriminator 2
 697 0096 07F5B553 		add	r3, r7, #5792
 698 009a 03F11403 		add	r3, r3, #20
 699 009e 1B68     		ldr	r3, [r3]
 700 00a0 0133     		adds	r3, r3, #1
 701 00a2 07F5B552 		add	r2, r7, #5792
 702 00a6 02F11402 		add	r2, r2, #20
 703 00aa 1360     		str	r3, [r2]
 704              	.L19:
 137:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 16


 705              		.loc 1 137 0 is_stmt 0 discriminator 1
 706 00ac 07F5B553 		add	r3, r7, #5792
 707 00b0 03F11403 		add	r3, r3, #20
 708 00b4 1B68     		ldr	r3, [r3]
 709 00b6 0E2B     		cmp	r3, #14
 710 00b8 BDDD     		ble	.L22
 711              	.LBE6:
 140:pathfinding.c ****         }
 141:pathfinding.c ****     }
 142:pathfinding.c **** 
 143:pathfinding.c ****     struct PriorityQueue {
 144:pathfinding.c ****         struct Location location;
 145:pathfinding.c ****         int distance;
 146:pathfinding.c ****     };
 147:pathfinding.c **** 
 148:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 149:pathfinding.c ****     int pqSize = 0;
 712              		.loc 1 149 0 is_stmt 1
 713 00ba 0023     		movs	r3, #0
 714 00bc 07F5B552 		add	r2, r7, #5792
 715 00c0 02F10C02 		add	r2, r2, #12
 716 00c4 1360     		str	r3, [r2]
 717              	.LBB8:
 150:pathfinding.c **** 
 151:pathfinding.c ****     // Initialize distances and paths arrays
 152:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 153:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 154:pathfinding.c **** 
 155:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 718              		.loc 1 155 0
 719 00c6 0023     		movs	r3, #0
 720 00c8 07F5B552 		add	r2, r7, #5792
 721 00cc 02F10802 		add	r2, r2, #8
 722 00d0 1360     		str	r3, [r2]
 723 00d2 3AE0     		b	.L23
 724              	.L26:
 725              	.LBB9:
 156:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 726              		.loc 1 156 0
 727 00d4 0023     		movs	r3, #0
 728 00d6 07F5B552 		add	r2, r7, #5792
 729 00da 02F10402 		add	r2, r2, #4
 730 00de 1360     		str	r3, [r2]
 731 00e0 21E0     		b	.L24
 732              	.L25:
 157:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 733              		.loc 1 157 0 discriminator 3
 734 00e2 07F13802 		add	r2, r7, #56
 735 00e6 1C3A     		subs	r2, r2, #28
 736 00e8 07F5B553 		add	r3, r7, #5792
 737 00ec 03F10803 		add	r3, r3, #8
 738 00f0 1968     		ldr	r1, [r3]
 739 00f2 0B46     		mov	r3, r1
 740 00f4 DB00     		lsls	r3, r3, #3
 741 00f6 0B44     		add	r3, r3, r1
 742 00f8 5B00     		lsls	r3, r3, #1
 743 00fa 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 17


 744 00fc 07F5B551 		add	r1, r7, #5792
 745 0100 01F10401 		add	r1, r1, #4
 746 0104 0968     		ldr	r1, [r1]
 747 0106 0B44     		add	r3, r3, r1
 748 0108 4FF47A71 		mov	r1, #1000
 749 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 156:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 750              		.loc 1 156 0 discriminator 3
 751 0110 07F5B553 		add	r3, r7, #5792
 752 0114 03F10403 		add	r3, r3, #4
 753 0118 1B68     		ldr	r3, [r3]
 754 011a 0133     		adds	r3, r3, #1
 755 011c 07F5B552 		add	r2, r7, #5792
 756 0120 02F10402 		add	r2, r2, #4
 757 0124 1360     		str	r3, [r2]
 758              	.L24:
 156:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 759              		.loc 1 156 0 is_stmt 0 discriminator 1
 760 0126 07F5B553 		add	r3, r7, #5792
 761 012a 03F10403 		add	r3, r3, #4
 762 012e 1B68     		ldr	r3, [r3]
 763 0130 122B     		cmp	r3, #18
 764 0132 D6DD     		ble	.L25
 765              	.LBE9:
 155:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 766              		.loc 1 155 0 is_stmt 1 discriminator 2
 767 0134 07F5B553 		add	r3, r7, #5792
 768 0138 03F10803 		add	r3, r3, #8
 769 013c 1B68     		ldr	r3, [r3]
 770 013e 0133     		adds	r3, r3, #1
 771 0140 07F5B552 		add	r2, r7, #5792
 772 0144 02F10802 		add	r2, r2, #8
 773 0148 1360     		str	r3, [r2]
 774              	.L23:
 155:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 775              		.loc 1 155 0 is_stmt 0 discriminator 1
 776 014a 07F5B553 		add	r3, r7, #5792
 777 014e 03F10803 		add	r3, r3, #8
 778 0152 1B68     		ldr	r3, [r3]
 779 0154 0E2B     		cmp	r3, #14
 780 0156 BDDD     		ble	.L26
 781              	.LBE8:
 158:pathfinding.c ****         }
 159:pathfinding.c ****     }
 160:pathfinding.c **** 
 161:pathfinding.c ****     int stepNum = 0;
 782              		.loc 1 161 0 is_stmt 1
 783 0158 0023     		movs	r3, #0
 784 015a 07F5B552 		add	r2, r7, #5792
 785 015e 1360     		str	r3, [r2]
 162:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 786              		.loc 1 162 0
 787 0160 07F11803 		add	r3, r7, #24
 788 0164 143B     		subs	r3, r3, #20
 789 0166 1968     		ldr	r1, [r3]
 790 0168 07F11803 		add	r3, r7, #24
 791 016c 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 18


 792 016e 5868     		ldr	r0, [r3, #4]
 793 0170 07F13802 		add	r2, r7, #56
 794 0174 1C3A     		subs	r2, r2, #28
 795 0176 0B46     		mov	r3, r1
 796 0178 DB00     		lsls	r3, r3, #3
 797 017a 0B44     		add	r3, r3, r1
 798 017c 5B00     		lsls	r3, r3, #1
 799 017e 0B44     		add	r3, r3, r1
 800 0180 0344     		add	r3, r3, r0
 801 0182 0021     		movs	r1, #0
 802 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 163:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 164:pathfinding.c ****     stepNum++; // increment stepNum
 803              		.loc 1 164 0
 804 0188 07F5B553 		add	r3, r7, #5792
 805 018c 1B68     		ldr	r3, [r3]
 806 018e 0133     		adds	r3, r3, #1
 807 0190 07F5B552 		add	r2, r7, #5792
 808 0194 1360     		str	r3, [r2]
 165:pathfinding.c **** 
 166:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
 809              		.loc 1 166 0
 810 0196 07F59362 		add	r2, r7, #1176
 811 019a 083A     		subs	r2, r2, #8
 812 019c 07F5B553 		add	r3, r7, #5792
 813 01a0 03F10C03 		add	r3, r3, #12
 814 01a4 1968     		ldr	r1, [r3]
 815 01a6 0B46     		mov	r3, r1
 816 01a8 5B00     		lsls	r3, r3, #1
 817 01aa 0B44     		add	r3, r3, r1
 818 01ac 9B00     		lsls	r3, r3, #2
 819 01ae 1A44     		add	r2, r2, r3
 820 01b0 07F11803 		add	r3, r7, #24
 821 01b4 143B     		subs	r3, r3, #20
 822 01b6 93E80300 		ldmia	r3, {r0, r1}
 823 01ba 82E80300 		stmia	r2, {r0, r1}
 167:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 824              		.loc 1 167 0
 825 01be 07F59362 		add	r2, r7, #1176
 826 01c2 083A     		subs	r2, r2, #8
 827 01c4 07F5B553 		add	r3, r7, #5792
 828 01c8 03F10C03 		add	r3, r3, #12
 829 01cc 1968     		ldr	r1, [r3]
 830 01ce 0B46     		mov	r3, r1
 831 01d0 5B00     		lsls	r3, r3, #1
 832 01d2 0B44     		add	r3, r3, r1
 833 01d4 9B00     		lsls	r3, r3, #2
 834 01d6 1344     		add	r3, r3, r2
 835 01d8 0833     		adds	r3, r3, #8
 836 01da 0022     		movs	r2, #0
 837 01dc 1A60     		str	r2, [r3]
 168:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 838              		.loc 1 168 0
 839 01de 07F5B553 		add	r3, r7, #5792
 840 01e2 03F10C03 		add	r3, r3, #12
 841 01e6 1B68     		ldr	r3, [r3]
 842 01e8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 19


 843 01ea 07F5B552 		add	r2, r7, #5792
 844 01ee 02F10C02 		add	r2, r2, #12
 845 01f2 1360     		str	r3, [r2]
 169:pathfinding.c **** 
 170:pathfinding.c ****     while (pqSize > 0) {
 846              		.loc 1 170 0
 847 01f4 F5E1     		b	.L27
 848              	.L37:
 849              	.LBB10:
 171:pathfinding.c ****         int idx = 0;
 850              		.loc 1 171 0
 851 01f6 0023     		movs	r3, #0
 852 01f8 07F5B452 		add	r2, r7, #5760
 853 01fc 02F11C02 		add	r2, r2, #28
 854 0200 1360     		str	r3, [r2]
 855              	.LBB11:
 172:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 856              		.loc 1 172 0
 857 0202 0123     		movs	r3, #1
 858 0204 07F5B452 		add	r2, r7, #5760
 859 0208 02F11802 		add	r2, r2, #24
 860 020c 1360     		str	r3, [r2]
 861 020e 34E0     		b	.L28
 862              	.L30:
 173:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 863              		.loc 1 173 0
 864 0210 07F59362 		add	r2, r7, #1176
 865 0214 083A     		subs	r2, r2, #8
 866 0216 07F5B453 		add	r3, r7, #5760
 867 021a 03F11803 		add	r3, r3, #24
 868 021e 1968     		ldr	r1, [r3]
 869 0220 0B46     		mov	r3, r1
 870 0222 5B00     		lsls	r3, r3, #1
 871 0224 0B44     		add	r3, r3, r1
 872 0226 9B00     		lsls	r3, r3, #2
 873 0228 1344     		add	r3, r3, r2
 874 022a 0833     		adds	r3, r3, #8
 875 022c 1868     		ldr	r0, [r3]
 876 022e 07F59362 		add	r2, r7, #1176
 877 0232 083A     		subs	r2, r2, #8
 878 0234 07F5B453 		add	r3, r7, #5760
 879 0238 03F11C03 		add	r3, r3, #28
 880 023c 1968     		ldr	r1, [r3]
 881 023e 0B46     		mov	r3, r1
 882 0240 5B00     		lsls	r3, r3, #1
 883 0242 0B44     		add	r3, r3, r1
 884 0244 9B00     		lsls	r3, r3, #2
 885 0246 1344     		add	r3, r3, r2
 886 0248 0833     		adds	r3, r3, #8
 887 024a 1B68     		ldr	r3, [r3]
 888 024c 9842     		cmp	r0, r3
 889 024e 09DA     		bge	.L29
 174:pathfinding.c ****                 idx = i; // find the shortest distance location 
 890              		.loc 1 174 0
 891 0250 07F5B453 		add	r3, r7, #5760
 892 0254 03F11803 		add	r3, r3, #24
 893 0258 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 20


 894 025a 07F5B452 		add	r2, r7, #5760
 895 025e 02F11C02 		add	r2, r2, #28
 896 0262 1360     		str	r3, [r2]
 897              	.L29:
 172:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 898              		.loc 1 172 0 discriminator 2
 899 0264 07F5B453 		add	r3, r7, #5760
 900 0268 03F11803 		add	r3, r3, #24
 901 026c 1B68     		ldr	r3, [r3]
 902 026e 0133     		adds	r3, r3, #1
 903 0270 07F5B452 		add	r2, r7, #5760
 904 0274 02F11802 		add	r2, r2, #24
 905 0278 1360     		str	r3, [r2]
 906              	.L28:
 172:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 907              		.loc 1 172 0 is_stmt 0 discriminator 1
 908 027a 07F5B453 		add	r3, r7, #5760
 909 027e 03F11803 		add	r3, r3, #24
 910 0282 1A68     		ldr	r2, [r3]
 911 0284 07F5B553 		add	r3, r7, #5792
 912 0288 03F10C03 		add	r3, r3, #12
 913 028c 1B68     		ldr	r3, [r3]
 914 028e 9A42     		cmp	r2, r3
 915 0290 BEDB     		blt	.L30
 916              	.LBE11:
 175:pathfinding.c ****             }
 176:pathfinding.c ****         }
 177:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 917              		.loc 1 177 0 is_stmt 1
 918 0292 07F11801 		add	r1, r7, #24
 919 0296 0839     		subs	r1, r1, #8
 920 0298 07F59362 		add	r2, r7, #1176
 921 029c 083A     		subs	r2, r2, #8
 922 029e 07F5B453 		add	r3, r7, #5760
 923 02a2 03F11C03 		add	r3, r3, #28
 924 02a6 1868     		ldr	r0, [r3]
 925 02a8 0346     		mov	r3, r0
 926 02aa 5B00     		lsls	r3, r3, #1
 927 02ac 0344     		add	r3, r3, r0
 928 02ae 9B00     		lsls	r3, r3, #2
 929 02b0 1A44     		add	r2, r2, r3
 930 02b2 0B46     		mov	r3, r1
 931 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 932 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 178:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 933              		.loc 1 178 0
 934 02ba 07F5B553 		add	r3, r7, #5792
 935 02be 03F10C03 		add	r3, r3, #12
 936 02c2 1B68     		ldr	r3, [r3]
 937 02c4 591E     		subs	r1, r3, #1
 938 02c6 07F59362 		add	r2, r7, #1176
 939 02ca 083A     		subs	r2, r2, #8
 940 02cc 07F5B453 		add	r3, r7, #5760
 941 02d0 03F11C03 		add	r3, r3, #28
 942 02d4 1868     		ldr	r0, [r3]
 943 02d6 0346     		mov	r3, r0
 944 02d8 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 21


 945 02da 0344     		add	r3, r3, r0
 946 02dc 9B00     		lsls	r3, r3, #2
 947 02de D018     		adds	r0, r2, r3
 948 02e0 07F59362 		add	r2, r7, #1176
 949 02e4 083A     		subs	r2, r2, #8
 950 02e6 0B46     		mov	r3, r1
 951 02e8 5B00     		lsls	r3, r3, #1
 952 02ea 0B44     		add	r3, r3, r1
 953 02ec 9B00     		lsls	r3, r3, #2
 954 02ee 1A44     		add	r2, r2, r3
 955 02f0 0346     		mov	r3, r0
 956 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 957 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 179:pathfinding.c ****         pqSize--; // decrement pqSize
 958              		.loc 1 179 0
 959 02f8 07F5B553 		add	r3, r7, #5792
 960 02fc 03F10C03 		add	r3, r3, #12
 961 0300 1B68     		ldr	r3, [r3]
 962 0302 013B     		subs	r3, r3, #1
 963 0304 07F5B552 		add	r2, r7, #5792
 964 0308 02F10C02 		add	r2, r2, #12
 965 030c 1360     		str	r3, [r2]
 180:pathfinding.c **** 
 181:pathfinding.c ****         int row = current.location.row;
 966              		.loc 1 181 0
 967 030e 07F11803 		add	r3, r7, #24
 968 0312 083B     		subs	r3, r3, #8
 969 0314 1B68     		ldr	r3, [r3]
 970 0316 07F5B352 		add	r2, r7, #5728
 971 031a 02F11C02 		add	r2, r2, #28
 972 031e 1360     		str	r3, [r2]
 182:pathfinding.c ****         int col = current.location.col; // get current location details
 973              		.loc 1 182 0
 974 0320 07F11803 		add	r3, r7, #24
 975 0324 083B     		subs	r3, r3, #8
 976 0326 5B68     		ldr	r3, [r3, #4]
 977 0328 07F5B352 		add	r2, r7, #5728
 978 032c 02F11802 		add	r2, r2, #24
 979 0330 1360     		str	r3, [r2]
 183:pathfinding.c **** 
 184:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 980              		.loc 1 184 0
 981 0332 07F58F51 		add	r1, r7, #4576
 982 0336 01F10C01 		add	r1, r1, #12
 983 033a 07F5B353 		add	r3, r7, #5728
 984 033e 03F11C03 		add	r3, r3, #28
 985 0342 1A68     		ldr	r2, [r3]
 986 0344 1346     		mov	r3, r2
 987 0346 DB00     		lsls	r3, r3, #3
 988 0348 1344     		add	r3, r3, r2
 989 034a 5B00     		lsls	r3, r3, #1
 990 034c 1344     		add	r3, r3, r2
 991 034e 07F5B352 		add	r2, r7, #5728
 992 0352 02F11802 		add	r2, r2, #24
 993 0356 1268     		ldr	r2, [r2]
 994 0358 1344     		add	r3, r3, r2
 995 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 22


 996 035e 012B     		cmp	r3, #1
 997 0360 40F03F81 		bne	.L27
 185:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 998              		.loc 1 185 0
 999 0364 07F58F51 		add	r1, r7, #4576
 1000 0368 01F10C01 		add	r1, r1, #12
 1001 036c 07F5B353 		add	r3, r7, #5728
 1002 0370 03F11C03 		add	r3, r3, #28
 1003 0374 1A68     		ldr	r2, [r3]
 1004 0376 1346     		mov	r3, r2
 1005 0378 DB00     		lsls	r3, r3, #3
 1006 037a 1344     		add	r3, r3, r2
 1007 037c 5B00     		lsls	r3, r3, #1
 1008 037e 1344     		add	r3, r3, r2
 1009 0380 07F5B352 		add	r2, r7, #5728
 1010 0384 02F11802 		add	r2, r2, #24
 1011 0388 1268     		ldr	r2, [r2]
 1012 038a 1344     		add	r3, r3, r2
 1013 038c 0022     		movs	r2, #0
 1014 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 186:pathfinding.c **** 
 187:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1015              		.loc 1 187 0
 1016 0392 07F5B653 		add	r3, r7, #5824
 1017 0396 03F10C03 		add	r3, r3, #12
 1018 039a 1A68     		ldr	r2, [r3]
 1019 039c 07F5B353 		add	r3, r7, #5728
 1020 03a0 03F11C03 		add	r3, r3, #28
 1021 03a4 1B68     		ldr	r3, [r3]
 1022 03a6 9A42     		cmp	r2, r3
 1023 03a8 0CD1     		bne	.L32
 1024              		.loc 1 187 0 is_stmt 0 discriminator 1
 1025 03aa 07F5B653 		add	r3, r7, #5824
 1026 03ae 03F11003 		add	r3, r3, #16
 1027 03b2 1A68     		ldr	r2, [r3]
 1028 03b4 07F5B353 		add	r3, r7, #5728
 1029 03b8 03F11803 		add	r3, r3, #24
 1030 03bc 1B68     		ldr	r3, [r3]
 1031 03be 9A42     		cmp	r2, r3
 1032 03c0 00F01881 		beq	.L43
 1033              	.L32:
 1034              	.LBB12:
 188:pathfinding.c ****                 break; // if reached target destination, end
 189:pathfinding.c ****             }
 190:pathfinding.c ****             // make a move, check if valid
 191:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1035              		.loc 1 191 0 is_stmt 1
 1036 03c4 0023     		movs	r3, #0
 1037 03c6 07F5B452 		add	r2, r7, #5760
 1038 03ca 02F11402 		add	r2, r2, #20
 1039 03ce 1360     		str	r3, [r2]
 1040 03d0 FFE0     		b	.L34
 1041              	.L36:
 1042              	.LBB13:
 192:pathfinding.c ****                 int newRow = row + moves[i].row;
 1043              		.loc 1 192 0
 1044 03d2 D04A     		ldr	r2, .L44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 23


 1045 03d4 07F5B453 		add	r3, r7, #5760
 1046 03d8 03F11403 		add	r3, r3, #20
 1047 03dc 1B68     		ldr	r3, [r3]
 1048 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1049 03e2 07F5B353 		add	r3, r7, #5728
 1050 03e6 03F11C03 		add	r3, r3, #28
 1051 03ea 1B68     		ldr	r3, [r3]
 1052 03ec 1344     		add	r3, r3, r2
 1053 03ee 07F5B352 		add	r2, r7, #5728
 1054 03f2 02F11402 		add	r2, r2, #20
 1055 03f6 1360     		str	r3, [r2]
 193:pathfinding.c ****                 int newCol = col + moves[i].col;
 1056              		.loc 1 193 0
 1057 03f8 C64A     		ldr	r2, .L44
 1058 03fa 07F5B453 		add	r3, r7, #5760
 1059 03fe 03F11403 		add	r3, r3, #20
 1060 0402 1B68     		ldr	r3, [r3]
 1061 0404 DB00     		lsls	r3, r3, #3
 1062 0406 1344     		add	r3, r3, r2
 1063 0408 5A68     		ldr	r2, [r3, #4]
 1064 040a 07F5B353 		add	r3, r7, #5728
 1065 040e 03F11803 		add	r3, r3, #24
 1066 0412 1B68     		ldr	r3, [r3]
 1067 0414 1344     		add	r3, r3, r2
 1068 0416 07F5B352 		add	r2, r7, #5728
 1069 041a 02F11002 		add	r2, r2, #16
 1070 041e 1360     		str	r3, [r2]
 194:pathfinding.c **** 
 195:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1071              		.loc 1 195 0
 1072 0420 07F11803 		add	r3, r7, #24
 1073 0424 0C3B     		subs	r3, r3, #12
 1074 0426 1B68     		ldr	r3, [r3]
 1075 0428 0093     		str	r3, [sp]
 1076 042a 1323     		movs	r3, #19
 1077 042c 0F22     		movs	r2, #15
 1078 042e 07F5B351 		add	r1, r7, #5728
 1079 0432 01F11001 		add	r1, r1, #16
 1080 0436 0968     		ldr	r1, [r1]
 1081 0438 07F5B350 		add	r0, r7, #5728
 1082 043c 00F11400 		add	r0, r0, #20
 1083 0440 0068     		ldr	r0, [r0]
 1084 0442 FFF7FEFF 		bl	isValidMove
 1085 0446 0346     		mov	r3, r0
 1086 0448 002B     		cmp	r3, #0
 1087 044a 00F0B780 		beq	.L35
 1088              		.loc 1 195 0 is_stmt 0 discriminator 1
 1089 044e 07F58F51 		add	r1, r7, #4576
 1090 0452 01F10C01 		add	r1, r1, #12
 1091 0456 07F5B353 		add	r3, r7, #5728
 1092 045a 03F11403 		add	r3, r3, #20
 1093 045e 1A68     		ldr	r2, [r3]
 1094 0460 1346     		mov	r3, r2
 1095 0462 DB00     		lsls	r3, r3, #3
 1096 0464 1344     		add	r3, r3, r2
 1097 0466 5B00     		lsls	r3, r3, #1
 1098 0468 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 24


 1099 046a 07F5B352 		add	r2, r7, #5728
 1100 046e 02F11002 		add	r2, r2, #16
 1101 0472 1268     		ldr	r2, [r2]
 1102 0474 1344     		add	r3, r3, r2
 1103 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1104 047a 012B     		cmp	r3, #1
 1105 047c 40F09E80 		bne	.L35
 1106              	.LBB14:
 196:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1107              		.loc 1 196 0 is_stmt 1
 1108 0480 07F13802 		add	r2, r7, #56
 1109 0484 1C3A     		subs	r2, r2, #28
 1110 0486 07F5B353 		add	r3, r7, #5728
 1111 048a 03F11C03 		add	r3, r3, #28
 1112 048e 1968     		ldr	r1, [r3]
 1113 0490 0B46     		mov	r3, r1
 1114 0492 DB00     		lsls	r3, r3, #3
 1115 0494 0B44     		add	r3, r3, r1
 1116 0496 5B00     		lsls	r3, r3, #1
 1117 0498 0B44     		add	r3, r3, r1
 1118 049a 07F5B351 		add	r1, r7, #5728
 1119 049e 01F11801 		add	r1, r1, #24
 1120 04a2 0968     		ldr	r1, [r1]
 1121 04a4 0B44     		add	r3, r3, r1
 1122 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1123 04aa 0133     		adds	r3, r3, #1
 1124 04ac 07F5B352 		add	r2, r7, #5728
 1125 04b0 02F10C02 		add	r2, r2, #12
 1126 04b4 1360     		str	r3, [r2]
 197:pathfinding.c ****                     // take the shortest distance between new and existing
 198:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1127              		.loc 1 198 0
 1128 04b6 07F13802 		add	r2, r7, #56
 1129 04ba 1C3A     		subs	r2, r2, #28
 1130 04bc 07F5B353 		add	r3, r7, #5728
 1131 04c0 03F11403 		add	r3, r3, #20
 1132 04c4 1968     		ldr	r1, [r3]
 1133 04c6 0B46     		mov	r3, r1
 1134 04c8 DB00     		lsls	r3, r3, #3
 1135 04ca 0B44     		add	r3, r3, r1
 1136 04cc 5B00     		lsls	r3, r3, #1
 1137 04ce 0B44     		add	r3, r3, r1
 1138 04d0 07F5B351 		add	r1, r7, #5728
 1139 04d4 01F11001 		add	r1, r1, #16
 1140 04d8 0968     		ldr	r1, [r1]
 1141 04da 0B44     		add	r3, r3, r1
 1142 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1143 04e0 07F5B353 		add	r3, r7, #5728
 1144 04e4 03F10C03 		add	r3, r3, #12
 1145 04e8 1B68     		ldr	r3, [r3]
 1146 04ea 9A42     		cmp	r2, r3
 1147 04ec 66DD     		ble	.L35
 199:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1148              		.loc 1 199 0
 1149 04ee 07F13802 		add	r2, r7, #56
 1150 04f2 1C3A     		subs	r2, r2, #28
 1151 04f4 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 25


 1152 04f8 03F11403 		add	r3, r3, #20
 1153 04fc 1968     		ldr	r1, [r3]
 1154 04fe 0B46     		mov	r3, r1
 1155 0500 DB00     		lsls	r3, r3, #3
 1156 0502 0B44     		add	r3, r3, r1
 1157 0504 5B00     		lsls	r3, r3, #1
 1158 0506 0B44     		add	r3, r3, r1
 1159 0508 07F5B351 		add	r1, r7, #5728
 1160 050c 01F11001 		add	r1, r1, #16
 1161 0510 0968     		ldr	r1, [r1]
 1162 0512 0B44     		add	r3, r3, r1
 1163 0514 07F5B351 		add	r1, r7, #5728
 1164 0518 01F10C01 		add	r1, r1, #12
 1165 051c 0968     		ldr	r1, [r1]
 1166 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 200:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 201:pathfinding.c ****                         
 202:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1167              		.loc 1 202 0
 1168 0522 07F59362 		add	r2, r7, #1176
 1169 0526 083A     		subs	r2, r2, #8
 1170 0528 07F5B553 		add	r3, r7, #5792
 1171 052c 03F10C03 		add	r3, r3, #12
 1172 0530 1968     		ldr	r1, [r3]
 1173 0532 0B46     		mov	r3, r1
 1174 0534 5B00     		lsls	r3, r3, #1
 1175 0536 0B44     		add	r3, r3, r1
 1176 0538 9B00     		lsls	r3, r3, #2
 1177 053a 1344     		add	r3, r3, r2
 1178 053c 07F5B352 		add	r2, r7, #5728
 1179 0540 02F11402 		add	r2, r2, #20
 1180 0544 1268     		ldr	r2, [r2]
 1181 0546 1A60     		str	r2, [r3]
 203:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1182              		.loc 1 203 0
 1183 0548 07F59362 		add	r2, r7, #1176
 1184 054c 083A     		subs	r2, r2, #8
 1185 054e 07F5B553 		add	r3, r7, #5792
 1186 0552 03F10C03 		add	r3, r3, #12
 1187 0556 1968     		ldr	r1, [r3]
 1188 0558 0B46     		mov	r3, r1
 1189 055a 5B00     		lsls	r3, r3, #1
 1190 055c 0B44     		add	r3, r3, r1
 1191 055e 9B00     		lsls	r3, r3, #2
 1192 0560 1344     		add	r3, r3, r2
 1193 0562 0433     		adds	r3, r3, #4
 1194 0564 07F5B352 		add	r2, r7, #5728
 1195 0568 02F11002 		add	r2, r2, #16
 1196 056c 1268     		ldr	r2, [r2]
 1197 056e 1A60     		str	r2, [r3]
 204:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1198              		.loc 1 204 0
 1199 0570 07F59362 		add	r2, r7, #1176
 1200 0574 083A     		subs	r2, r2, #8
 1201 0576 07F5B553 		add	r3, r7, #5792
 1202 057a 03F10C03 		add	r3, r3, #12
 1203 057e 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 26


 1204 0580 0B46     		mov	r3, r1
 1205 0582 5B00     		lsls	r3, r3, #1
 1206 0584 0B44     		add	r3, r3, r1
 1207 0586 9B00     		lsls	r3, r3, #2
 1208 0588 1344     		add	r3, r3, r2
 1209 058a 0833     		adds	r3, r3, #8
 1210 058c 07F5B352 		add	r2, r7, #5728
 1211 0590 02F10C02 		add	r2, r2, #12
 1212 0594 1268     		ldr	r2, [r2]
 1213 0596 1A60     		str	r2, [r3]
 205:pathfinding.c ****                         
 206:pathfinding.c ****                         stepNum++;
 1214              		.loc 1 206 0
 1215 0598 07F5B553 		add	r3, r7, #5792
 1216 059c 1B68     		ldr	r3, [r3]
 1217 059e 0133     		adds	r3, r3, #1
 1218 05a0 07F5B552 		add	r2, r7, #5792
 1219 05a4 1360     		str	r3, [r2]
 207:pathfinding.c ****                         pqSize++;
 1220              		.loc 1 207 0
 1221 05a6 07F5B553 		add	r3, r7, #5792
 1222 05aa 03F10C03 		add	r3, r3, #12
 1223 05ae 1B68     		ldr	r3, [r3]
 1224 05b0 0133     		adds	r3, r3, #1
 1225 05b2 07F5B552 		add	r2, r7, #5792
 1226 05b6 02F10C02 		add	r2, r2, #12
 1227 05ba 1360     		str	r3, [r2]
 1228              	.L35:
 1229              	.LBE14:
 1230              	.LBE13:
 191:pathfinding.c ****                 int newRow = row + moves[i].row;
 1231              		.loc 1 191 0 discriminator 2
 1232 05bc 07F5B453 		add	r3, r7, #5760
 1233 05c0 03F11403 		add	r3, r3, #20
 1234 05c4 1B68     		ldr	r3, [r3]
 1235 05c6 0133     		adds	r3, r3, #1
 1236 05c8 07F5B452 		add	r2, r7, #5760
 1237 05cc 02F11402 		add	r2, r2, #20
 1238 05d0 1360     		str	r3, [r2]
 1239              	.L34:
 191:pathfinding.c ****                 int newRow = row + moves[i].row;
 1240              		.loc 1 191 0 is_stmt 0 discriminator 1
 1241 05d2 07F5B453 		add	r3, r7, #5760
 1242 05d6 03F11403 		add	r3, r3, #20
 1243 05da 1B68     		ldr	r3, [r3]
 1244 05dc 032B     		cmp	r3, #3
 1245 05de 7FF6F8AE 		bls	.L36
 1246              	.L27:
 1247              	.LBE12:
 1248              	.LBE10:
 170:pathfinding.c ****         int idx = 0;
 1249              		.loc 1 170 0 is_stmt 1
 1250 05e2 07F5B553 		add	r3, r7, #5792
 1251 05e6 03F10C03 		add	r3, r3, #12
 1252 05ea 1B68     		ldr	r3, [r3]
 1253 05ec 002B     		cmp	r3, #0
 1254 05ee 3FF702AE 		bgt	.L37
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 27


 1255 05f2 00E0     		b	.L33
 1256              	.L43:
 1257              	.LBB15:
 188:pathfinding.c ****             }
 1258              		.loc 1 188 0
 1259 05f4 00BF     		nop
 1260              	.L33:
 1261              	.LBE15:
 208:pathfinding.c ****                     }
 209:pathfinding.c ****                 }
 210:pathfinding.c ****             }
 211:pathfinding.c ****         }
 212:pathfinding.c ****     }
 213:pathfinding.c **** 
 214:pathfinding.c ****     // PATH RECONSTRUCTION
 215:pathfinding.c ****     // initialise maximum distance- will be decremented
 216:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1262              		.loc 1 216 0
 1263 05f6 07F5B653 		add	r3, r7, #5824
 1264 05fa 03F10C03 		add	r3, r3, #12
 1265 05fe 1968     		ldr	r1, [r3]
 1266 0600 07F5B653 		add	r3, r7, #5824
 1267 0604 03F11003 		add	r3, r3, #16
 1268 0608 1868     		ldr	r0, [r3]
 1269 060a 07F13802 		add	r2, r7, #56
 1270 060e 1C3A     		subs	r2, r2, #28
 1271 0610 0B46     		mov	r3, r1
 1272 0612 DB00     		lsls	r3, r3, #3
 1273 0614 0B44     		add	r3, r3, r1
 1274 0616 5B00     		lsls	r3, r3, #1
 1275 0618 0B44     		add	r3, r3, r1
 1276 061a 0344     		add	r3, r3, r0
 1277 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1278 0620 07F5B452 		add	r2, r7, #5760
 1279 0624 02F11002 		add	r2, r2, #16
 1280 0628 1360     		str	r3, [r2]
 217:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1281              		.loc 1 217 0
 1282 062a 3B4A     		ldr	r2, .L44+4
 1283 062c 07F5B453 		add	r3, r7, #5760
 1284 0630 03F11003 		add	r3, r3, #16
 1285 0634 1B68     		ldr	r3, [r3]
 1286 0636 1360     		str	r3, [r2]
 218:pathfinding.c ****     // retsteps can be generated from here
 219:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1287              		.loc 1 219 0
 1288 0638 07F5B453 		add	r3, r7, #5760
 1289 063c 03F11003 		add	r3, r3, #16
 1290 0640 1B68     		ldr	r3, [r3]
 1291 0642 DB00     		lsls	r3, r3, #3
 1292 0644 1846     		mov	r0, r3
 1293 0646 FFF7FEFF 		bl	malloc
 1294 064a 0346     		mov	r3, r0
 1295 064c 07F5B352 		add	r2, r7, #5728
 1296 0650 02F10802 		add	r2, r2, #8
 1297 0654 1360     		str	r3, [r2]
 220:pathfinding.c ****     int currentRow = targetlocation.row;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 28


 1298              		.loc 1 220 0
 1299 0656 07F5B653 		add	r3, r7, #5824
 1300 065a 03F10C03 		add	r3, r3, #12
 1301 065e 1B68     		ldr	r3, [r3]
 1302 0660 07F5B452 		add	r2, r7, #5760
 1303 0664 02F10C02 		add	r2, r2, #12
 1304 0668 1360     		str	r3, [r2]
 221:pathfinding.c ****     int currentCol = targetlocation.col;
 1305              		.loc 1 221 0
 1306 066a 07F5B653 		add	r3, r7, #5824
 1307 066e 03F11003 		add	r3, r3, #16
 1308 0672 1B68     		ldr	r3, [r3]
 1309 0674 07F5B452 		add	r2, r7, #5760
 1310 0678 02F10802 		add	r2, r2, #8
 1311 067c 1360     		str	r3, [r2]
 222:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1312              		.loc 1 222 0
 1313 067e 07F5B453 		add	r3, r7, #5760
 1314 0682 03F11003 		add	r3, r3, #16
 1315 0686 1B68     		ldr	r3, [r3]
 1316 0688 03F10053 		add	r3, r3, #536870912
 1317 068c 013B     		subs	r3, r3, #1
 1318 068e DB00     		lsls	r3, r3, #3
 1319 0690 07F5B352 		add	r2, r7, #5728
 1320 0694 02F10802 		add	r2, r2, #8
 1321 0698 1268     		ldr	r2, [r2]
 1322 069a 1344     		add	r3, r3, r2
 1323 069c 07F5B452 		add	r2, r7, #5760
 1324 06a0 02F10C02 		add	r2, r2, #12
 1325 06a4 1268     		ldr	r2, [r2]
 1326 06a6 1A60     		str	r2, [r3]
 223:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1327              		.loc 1 223 0
 1328 06a8 07F5B453 		add	r3, r7, #5760
 1329 06ac 03F11003 		add	r3, r3, #16
 1330 06b0 1B68     		ldr	r3, [r3]
 1331 06b2 03F10053 		add	r3, r3, #536870912
 1332 06b6 013B     		subs	r3, r3, #1
 1333 06b8 DB00     		lsls	r3, r3, #3
 1334 06ba 07F5B352 		add	r2, r7, #5728
 1335 06be 02F10802 		add	r2, r2, #8
 1336 06c2 1268     		ldr	r2, [r2]
 1337 06c4 1344     		add	r3, r3, r2
 1338 06c6 07F5B452 		add	r2, r7, #5760
 1339 06ca 02F10802 		add	r2, r2, #8
 1340 06ce 1268     		ldr	r2, [r2]
 1341 06d0 5A60     		str	r2, [r3, #4]
 224:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 225:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1342              		.loc 1 225 0
 1343 06d2 07F5B453 		add	r3, r7, #5760
 1344 06d6 03F10C03 		add	r3, r3, #12
 1345 06da 1B68     		ldr	r3, [r3]
 1346 06dc 4C22     		movs	r2, #76
 1347 06de 02FB03F2 		mul	r2, r2, r3
 1348 06e2 07F11803 		add	r3, r7, #24
 1349 06e6 0C3B     		subs	r3, r3, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 29


 1350 06e8 1B68     		ldr	r3, [r3]
 1351 06ea 1344     		add	r3, r3, r2
 1352 06ec 07F5B452 		add	r2, r7, #5760
 1353 06f0 02F10802 		add	r2, r2, #8
 1354 06f4 1268     		ldr	r2, [r2]
 1355 06f6 0921     		movs	r1, #9
 1356 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 226:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 227:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 228:pathfinding.c ****     int pathIndex = 0;
 1357              		.loc 1 228 0
 1358 06fc 0023     		movs	r3, #0
 1359 06fe 07F5B452 		add	r2, r7, #5760
 1360 0702 02F10402 		add	r2, r2, #4
 1361 0706 1360     		str	r3, [r2]
 229:pathfinding.c **** 
 230:pathfinding.c ****     while(shortestDist > 0) {    
 1362              		.loc 1 230 0
 1363 0708 0BE1     		b	.L38
 1364              	.L42:
 1365              	.LBB16:
 231:pathfinding.c ****         // make a move, check if valid and is the next step in path
 232:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1366              		.loc 1 232 0
 1367 070a 0023     		movs	r3, #0
 1368 070c 07F5B452 		add	r2, r7, #5760
 1369 0710 1360     		str	r3, [r2]
 1370 0712 00E1     		b	.L39
 1371              	.L45:
 1372              		.align	2
 1373              	.L44:
 1374 0714 00000000 		.word	moves
 1375 0718 00000000 		.word	numSteps
 1376              	.L41:
 1377              	.LBB17:
 233:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1378              		.loc 1 233 0
 1379 071c 894A     		ldr	r2, .L46
 1380 071e 07F5B453 		add	r3, r7, #5760
 1381 0722 1B68     		ldr	r3, [r3]
 1382 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1383 0728 07F5B453 		add	r3, r7, #5760
 1384 072c 03F10C03 		add	r3, r3, #12
 1385 0730 1B68     		ldr	r3, [r3]
 1386 0732 1344     		add	r3, r3, r2
 1387 0734 07F5B352 		add	r2, r7, #5728
 1388 0738 02F10402 		add	r2, r2, #4
 1389 073c 1360     		str	r3, [r2]
 234:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1390              		.loc 1 234 0
 1391 073e 814A     		ldr	r2, .L46
 1392 0740 07F5B453 		add	r3, r7, #5760
 1393 0744 1B68     		ldr	r3, [r3]
 1394 0746 DB00     		lsls	r3, r3, #3
 1395 0748 1344     		add	r3, r3, r2
 1396 074a 5A68     		ldr	r2, [r3, #4]
 1397 074c 07F5B453 		add	r3, r7, #5760
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 30


 1398 0750 03F10803 		add	r3, r3, #8
 1399 0754 1B68     		ldr	r3, [r3]
 1400 0756 1344     		add	r3, r3, r2
 1401 0758 07F5B352 		add	r2, r7, #5728
 1402 075c 1360     		str	r3, [r2]
 235:pathfinding.c **** 
 236:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1403              		.loc 1 236 0
 1404 075e 07F11803 		add	r3, r7, #24
 1405 0762 0C3B     		subs	r3, r3, #12
 1406 0764 1B68     		ldr	r3, [r3]
 1407 0766 0093     		str	r3, [sp]
 1408 0768 1323     		movs	r3, #19
 1409 076a 0F22     		movs	r2, #15
 1410 076c 07F5B351 		add	r1, r7, #5728
 1411 0770 0968     		ldr	r1, [r1]
 1412 0772 07F5B350 		add	r0, r7, #5728
 1413 0776 00F10400 		add	r0, r0, #4
 1414 077a 0068     		ldr	r0, [r0]
 1415 077c FFF7FEFF 		bl	isValidMove
 1416 0780 0346     		mov	r3, r0
 1417 0782 002B     		cmp	r3, #0
 1418 0784 00F0C080 		beq	.L40
 1419              		.loc 1 236 0 is_stmt 0 discriminator 1
 1420 0788 07F13802 		add	r2, r7, #56
 1421 078c 1C3A     		subs	r2, r2, #28
 1422 078e 07F5B353 		add	r3, r7, #5728
 1423 0792 03F10403 		add	r3, r3, #4
 1424 0796 1968     		ldr	r1, [r3]
 1425 0798 0B46     		mov	r3, r1
 1426 079a DB00     		lsls	r3, r3, #3
 1427 079c 0B44     		add	r3, r3, r1
 1428 079e 5B00     		lsls	r3, r3, #1
 1429 07a0 0B44     		add	r3, r3, r1
 1430 07a2 07F5B351 		add	r1, r7, #5728
 1431 07a6 0968     		ldr	r1, [r1]
 1432 07a8 0B44     		add	r3, r3, r1
 1433 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1434 07ae 07F5B453 		add	r3, r7, #5760
 1435 07b2 03F11003 		add	r3, r3, #16
 1436 07b6 1B68     		ldr	r3, [r3]
 1437 07b8 013B     		subs	r3, r3, #1
 1438 07ba 9A42     		cmp	r2, r3
 1439 07bc 40F0A480 		bne	.L40
 237:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1440              		.loc 1 237 0 is_stmt 1
 1441 07c0 07F5B353 		add	r3, r7, #5728
 1442 07c4 03F10403 		add	r3, r3, #4
 1443 07c8 1B68     		ldr	r3, [r3]
 1444 07ca 4C22     		movs	r2, #76
 1445 07cc 02FB03F2 		mul	r2, r2, r3
 1446 07d0 07F11803 		add	r3, r7, #24
 1447 07d4 0C3B     		subs	r3, r3, #12
 1448 07d6 1B68     		ldr	r3, [r3]
 1449 07d8 1344     		add	r3, r3, r2
 1450 07da 07F5B352 		add	r2, r7, #5728
 1451 07de 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 31


 1452 07e0 0821     		movs	r1, #8
 1453 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 238:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1454              		.loc 1 238 0
 1455 07e6 5849     		ldr	r1, .L46+4
 1456 07e8 07F5B453 		add	r3, r7, #5760
 1457 07ec 03F10403 		add	r3, r3, #4
 1458 07f0 1B68     		ldr	r3, [r3]
 1459 07f2 07F5B352 		add	r2, r7, #5728
 1460 07f6 02F10402 		add	r2, r2, #4
 1461 07fa 1268     		ldr	r2, [r2]
 1462 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 239:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1463              		.loc 1 239 0
 1464 0800 514A     		ldr	r2, .L46+4
 1465 0802 07F5B453 		add	r3, r7, #5760
 1466 0806 03F10403 		add	r3, r3, #4
 1467 080a 1B68     		ldr	r3, [r3]
 1468 080c DB00     		lsls	r3, r3, #3
 1469 080e 1344     		add	r3, r3, r2
 1470 0810 07F5B352 		add	r2, r7, #5728
 1471 0814 1268     		ldr	r2, [r2]
 1472 0816 5A60     		str	r2, [r3, #4]
 240:pathfinding.c ****                 pathIndex++;
 1473              		.loc 1 240 0
 1474 0818 07F5B453 		add	r3, r7, #5760
 1475 081c 03F10403 		add	r3, r3, #4
 1476 0820 1B68     		ldr	r3, [r3]
 1477 0822 0133     		adds	r3, r3, #1
 1478 0824 07F5B452 		add	r2, r7, #5760
 1479 0828 02F10402 		add	r2, r2, #4
 1480 082c 1360     		str	r3, [r2]
 241:pathfinding.c ****                 // reverse array somewhere
 242:pathfinding.c **** 
 243:pathfinding.c ****                 shortestDist--; // decrement distance
 1481              		.loc 1 243 0
 1482 082e 07F5B453 		add	r3, r7, #5760
 1483 0832 03F11003 		add	r3, r3, #16
 1484 0836 1B68     		ldr	r3, [r3]
 1485 0838 013B     		subs	r3, r3, #1
 1486 083a 07F5B452 		add	r2, r7, #5760
 1487 083e 02F11002 		add	r2, r2, #16
 1488 0842 1360     		str	r3, [r2]
 244:pathfinding.c ****                 currentRow = newRow; 
 1489              		.loc 1 244 0
 1490 0844 07F5B353 		add	r3, r7, #5728
 1491 0848 03F10403 		add	r3, r3, #4
 1492 084c 1B68     		ldr	r3, [r3]
 1493 084e 07F5B452 		add	r2, r7, #5760
 1494 0852 02F10C02 		add	r2, r2, #12
 1495 0856 1360     		str	r3, [r2]
 245:pathfinding.c ****                 currentCol = newCol; // change current location
 1496              		.loc 1 245 0
 1497 0858 07F5B353 		add	r3, r7, #5728
 1498 085c 1B68     		ldr	r3, [r3]
 1499 085e 07F5B452 		add	r2, r7, #5760
 1500 0862 02F10802 		add	r2, r2, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 32


 1501 0866 1360     		str	r3, [r2]
 246:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 247:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1502              		.loc 1 247 0
 1503 0868 07F5B453 		add	r3, r7, #5760
 1504 086c 03F11003 		add	r3, r3, #16
 1505 0870 1B68     		ldr	r3, [r3]
 1506 0872 DB00     		lsls	r3, r3, #3
 1507 0874 07F5B352 		add	r2, r7, #5728
 1508 0878 02F10802 		add	r2, r2, #8
 1509 087c 1268     		ldr	r2, [r2]
 1510 087e 1344     		add	r3, r3, r2
 1511 0880 07F5B452 		add	r2, r7, #5760
 1512 0884 02F10C02 		add	r2, r2, #12
 1513 0888 1268     		ldr	r2, [r2]
 1514 088a 1A60     		str	r2, [r3]
 248:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1515              		.loc 1 248 0
 1516 088c 07F5B453 		add	r3, r7, #5760
 1517 0890 03F11003 		add	r3, r3, #16
 1518 0894 1B68     		ldr	r3, [r3]
 1519 0896 DB00     		lsls	r3, r3, #3
 1520 0898 07F5B352 		add	r2, r7, #5728
 1521 089c 02F10802 		add	r2, r2, #8
 1522 08a0 1268     		ldr	r2, [r2]
 1523 08a2 1344     		add	r3, r3, r2
 1524 08a4 07F5B452 		add	r2, r7, #5760
 1525 08a8 02F10802 		add	r2, r2, #8
 1526 08ac 1268     		ldr	r2, [r2]
 1527 08ae 5A60     		str	r2, [r3, #4]
 249:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1528              		.loc 1 249 0
 1529 08b0 07F11803 		add	r3, r7, #24
 1530 08b4 143B     		subs	r3, r3, #20
 1531 08b6 1A68     		ldr	r2, [r3]
 1532 08b8 07F5B453 		add	r3, r7, #5760
 1533 08bc 03F10C03 		add	r3, r3, #12
 1534 08c0 1B68     		ldr	r3, [r3]
 1535 08c2 9A42     		cmp	r2, r3
 1536 08c4 20D1     		bne	.L40
 1537              		.loc 1 249 0 is_stmt 0 discriminator 1
 1538 08c6 07F11803 		add	r3, r7, #24
 1539 08ca 143B     		subs	r3, r3, #20
 1540 08cc 5A68     		ldr	r2, [r3, #4]
 1541 08ce 07F5B453 		add	r3, r7, #5760
 1542 08d2 03F10803 		add	r3, r3, #8
 1543 08d6 1B68     		ldr	r3, [r3]
 1544 08d8 9A42     		cmp	r2, r3
 1545 08da 15D1     		bne	.L40
 250:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1546              		.loc 1 250 0 is_stmt 1
 1547 08dc 07F5B453 		add	r3, r7, #5760
 1548 08e0 03F10C03 		add	r3, r3, #12
 1549 08e4 1B68     		ldr	r3, [r3]
 1550 08e6 4C22     		movs	r2, #76
 1551 08e8 02FB03F2 		mul	r2, r2, r3
 1552 08ec 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 33


 1553 08f0 0C3B     		subs	r3, r3, #12
 1554 08f2 1B68     		ldr	r3, [r3]
 1555 08f4 1344     		add	r3, r3, r2
 1556 08f6 07F5B452 		add	r2, r7, #5760
 1557 08fa 02F10802 		add	r2, r2, #8
 1558 08fe 1268     		ldr	r2, [r2]
 1559 0900 0221     		movs	r1, #2
 1560 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****                     break;
 1561              		.loc 1 251 0
 1562 0906 0CE0     		b	.L38
 1563              	.L40:
 1564              	.LBE17:
 232:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1565              		.loc 1 232 0 discriminator 2
 1566 0908 07F5B453 		add	r3, r7, #5760
 1567 090c 1B68     		ldr	r3, [r3]
 1568 090e 0133     		adds	r3, r3, #1
 1569 0910 07F5B452 		add	r2, r7, #5760
 1570 0914 1360     		str	r3, [r2]
 1571              	.L39:
 232:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1572              		.loc 1 232 0 is_stmt 0 discriminator 1
 1573 0916 07F5B453 		add	r3, r7, #5760
 1574 091a 1B68     		ldr	r3, [r3]
 1575 091c 032B     		cmp	r3, #3
 1576 091e 7FF6FDAE 		bls	.L41
 1577              	.L38:
 1578              	.LBE16:
 230:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1579              		.loc 1 230 0 is_stmt 1
 1580 0922 07F5B453 		add	r3, r7, #5760
 1581 0926 03F11003 		add	r3, r3, #16
 1582 092a 1B68     		ldr	r3, [r3]
 1583 092c 002B     		cmp	r3, #0
 1584 092e 3FF7ECAE 		bgt	.L42
 252:pathfinding.c ****                 }   
 253:pathfinding.c ****             }
 254:pathfinding.c ****         }
 255:pathfinding.c ****     }
 256:pathfinding.c ****     //printMap(map);
 257:pathfinding.c ****     //return retSteps;
 258:pathfinding.c **** }
 1585              		.loc 1 258 0
 1586 0932 00BF     		nop
 1587 0934 07F5B557 		add	r7, r7, #5792
 1588 0938 1C37     		adds	r7, r7, #28
 1589              		.cfi_def_cfa_offset 20
 1590 093a BD46     		mov	sp, r7
 1591              		.cfi_def_cfa_register 13
 1592              		@ sp needed
 1593 093c BDE89040 		pop	{r4, r7, lr}
 1594              		.cfi_restore 14
 1595              		.cfi_restore 7
 1596              		.cfi_restore 4
 1597              		.cfi_def_cfa_offset 8
 1598 0940 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 34


 1599              		.cfi_def_cfa_offset 0
 1600 0942 7047     		bx	lr
 1601              	.L47:
 1602              		.align	2
 1603              	.L46:
 1604 0944 00000000 		.word	moves
 1605 0948 00000000 		.word	list_of_optimal_coordinates
 1606              		.cfi_endproc
 1607              	.LFE4:
 1608              		.size	dijkstra, .-dijkstra
 1609              		.global	ignoreR
 1610              		.bss
 1611              		.align	2
 1612              		.type	ignoreR, %object
 1613              		.size	ignoreR, 4
 1614              	ignoreR:
 1615 0004 00000000 		.space	4
 1616              		.global	ignoreL
 1617              		.align	2
 1618              		.type	ignoreL, %object
 1619              		.size	ignoreL, 4
 1620              	ignoreL:
 1621 0008 00000000 		.space	4
 1622              		.section	.rodata
 1623 0003 00       		.align	2
 1624              	.LC1:
 1625 0004 53746F70 		.ascii	"Stop at target\000"
 1625      20617420 
 1625      74617267 
 1625      657400
 1626 0013 00       		.align	2
 1627              	.LC2:
 1628 0014 52696768 		.ascii	"Right Turn\000"
 1628      74205475 
 1628      726E00
 1629 001f 00       		.align	2
 1630              	.LC3:
 1631 0020 4C656674 		.ascii	"Left Turn\000"
 1631      20547572 
 1631      6E00
 1632 002a 0000     		.align	2
 1633              	.LC4:
 1634 002c 466F7277 		.ascii	"Forward until target\000"
 1634      61726420 
 1634      756E7469 
 1634      6C207461 
 1634      72676574 
 1635 0041 000000   		.align	2
 1636              	.LC5:
 1637 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1637      6172643B 
 1637      2069676E 
 1637      6F726520 
 1637      25644C2C 
 1638 0065 000000   		.align	2
 1639              	.LC6:
 1640 0068 552D7475 		.ascii	"U-turn\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 35


 1640      726E00
 1641              		.section	.text.getPathInstructions,"ax",%progbits
 1642              		.align	2
 1643              		.global	getPathInstructions
 1644              		.thumb
 1645              		.thumb_func
 1646              		.type	getPathInstructions, %function
 1647              	getPathInstructions:
 1648              	.LFB5:
 259:pathfinding.c **** 
 260:pathfinding.c **** 
 261:pathfinding.c **** 
 262:pathfinding.c **** // PATHFINDING PROCESSING *====================
 263:pathfinding.c **** 
 264:pathfinding.c **** 
 265:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 266:pathfinding.c **** 
 267:pathfinding.c **** // return a list of instructions for robot to execute
 268:pathfinding.c **** Instructions * getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location start
 1649              		.loc 1 268 0
 1650              		.cfi_startproc
 1651              		@ args = 8, pretend = 0, frame = 40
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653 0000 80B5     		push	{r7, lr}
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 8AB0     		sub	sp, sp, #40
 1658              		.cfi_def_cfa_offset 48
 1659 0004 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 1661 0006 F860     		str	r0, [r7, #12]
 1662 0008 B960     		str	r1, [r7, #8]
 1663 000a 3946     		mov	r1, r7
 1664 000c 81E80C00 		stmia	r1, {r2, r3}
 269:pathfinding.c ****     int currentRow = startLocation.row; 
 1665              		.loc 1 269 0
 1666 0010 3B68     		ldr	r3, [r7]
 1667 0012 7B62     		str	r3, [r7, #36]
 270:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1668              		.loc 1 270 0
 1669 0014 7B68     		ldr	r3, [r7, #4]
 1670 0016 3B62     		str	r3, [r7, #32]
 271:pathfinding.c ****     int listIndex = 0;
 1671              		.loc 1 271 0
 1672 0018 0023     		movs	r3, #0
 1673 001a FB61     		str	r3, [r7, #28]
 272:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1674              		.loc 1 272 0
 1675 001c 3B6B     		ldr	r3, [r7, #48]
 1676 001e 7A6B     		ldr	r2, [r7, #52]
 1677 0020 1146     		mov	r1, r2
 1678 0022 1846     		mov	r0, r3
 1679 0024 FFF7FEFF 		bl	getTargetOrientation
 1680 0028 0346     		mov	r3, r0
 1681 002a 3B61     		str	r3, [r7, #16]
 273:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 36


 274:pathfinding.c ****     while(numSteps >= 0) {
 1682              		.loc 1 274 0
 1683 002c ACE1     		b	.L49
 1684              	.L78:
 1685              	.LBB18:
 275:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1686              		.loc 1 275 0
 1687 002e 914B     		ldr	r3, .L81
 1688 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1689 0032 3A6A     		ldr	r2, [r7, #32]
 1690 0034 796A     		ldr	r1, [r7, #36]
 1691 0036 1846     		mov	r0, r3
 1692 0038 FFF7FEFF 		bl	checkIgnoreTurn
 276:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1693              		.loc 1 276 0
 1694 003c 7B6A     		ldr	r3, [r7, #36]
 1695 003e 4C22     		movs	r2, #76
 1696 0040 02FB03F3 		mul	r3, r2, r3
 1697 0044 FA68     		ldr	r2, [r7, #12]
 1698 0046 1344     		add	r3, r3, r2
 1699 0048 3A6A     		ldr	r2, [r7, #32]
 1700 004a 0021     		movs	r1, #0
 1701 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 277:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
 1702              		.loc 1 277 0
 1703 0050 884B     		ldr	r3, .L81
 1704 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1705 0054 884B     		ldr	r3, .L81+4
 1706 0056 1A70     		strb	r2, [r3]
 278:pathfinding.c ****         enum InstructionDirection newDirection;
 279:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1707              		.loc 1 279 0
 1708 0058 396A     		ldr	r1, [r7, #32]
 1709 005a 786A     		ldr	r0, [r7, #36]
 1710 005c FFF7FEFF 		bl	checkPathDirection
 1711 0060 0346     		mov	r3, r0
 1712 0062 7B61     		str	r3, [r7, #20]
 280:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1713              		.loc 1 280 0
 1714 0064 3A6B     		ldr	r2, [r7, #48]
 1715 0066 7B6A     		ldr	r3, [r7, #36]
 1716 0068 9A42     		cmp	r2, r3
 1717 006a 0AD1     		bne	.L50
 1718              		.loc 1 280 0 is_stmt 0 discriminator 1
 1719 006c 7A6B     		ldr	r2, [r7, #52]
 1720 006e 3B6A     		ldr	r3, [r7, #32]
 1721 0070 9A42     		cmp	r2, r3
 1722 0072 06D1     		bne	.L50
 281:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1723              		.loc 1 281 0 is_stmt 1
 1724 0074 0523     		movs	r3, #5
 1725 0076 FB76     		strb	r3, [r7, #27]
 282:pathfinding.c ****             printf("Stop at target\n");
 1726              		.loc 1 282 0
 1727 0078 8048     		ldr	r0, .L81+8
 1728 007a FFF7FEFF 		bl	puts
 283:pathfinding.c ****             nextStep = 5;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 37


 1729              		.loc 1 283 0
 1730 007e 0523     		movs	r3, #5
 1731 0080 7B61     		str	r3, [r7, #20]
 1732              	.L50:
 284:pathfinding.c ****         }
 285:pathfinding.c ****         switch (nextStep) {
 1733              		.loc 1 285 0
 1734 0082 7B69     		ldr	r3, [r7, #20]
 1735 0084 032B     		cmp	r3, #3
 1736 0086 00F25981 		bhi	.L80
 1737 008a 01A2     		adr	r2, .L53
 1738 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1739              		.p2align 2
 1740              	.L53:
 1741 0090 A1000000 		.word	.L52+1
 1742 0094 35010000 		.word	.L54+1
 1743 0098 D5010000 		.word	.L55+1
 1744 009c 9D020000 		.word	.L56+1
 1745              		.p2align 1
 1746              	.L52:
 286:pathfinding.c ****             case 0: // next step is up
 287:pathfinding.c ****                 currentRobotOrientation = Up;
 1747              		.loc 1 287 0
 1748 00a0 744B     		ldr	r3, .L81
 1749 00a2 0022     		movs	r2, #0
 1750 00a4 1A70     		strb	r2, [r3]
 288:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1751              		.loc 1 288 0
 1752 00a6 744B     		ldr	r3, .L81+4
 1753 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1754 00aa 022B     		cmp	r3, #2
 1755 00ac 0AD1     		bne	.L57
 289:pathfinding.c ****                     newDirection = waitForRightTurn;
 1756              		.loc 1 289 0
 1757 00ae 0223     		movs	r3, #2
 1758 00b0 FB76     		strb	r3, [r7, #27]
 290:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1759              		.loc 1 290 0
 1760 00b2 7348     		ldr	r0, .L81+12
 1761 00b4 FFF7FEFF 		bl	puts
 291:pathfinding.c ****                     ignoreL = 0;
 1762              		.loc 1 291 0
 1763 00b8 724B     		ldr	r3, .L81+16
 1764 00ba 0022     		movs	r2, #0
 1765 00bc 1A60     		str	r2, [r3]
 292:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1766              		.loc 1 292 0
 1767 00be 724B     		ldr	r3, .L81+20
 1768 00c0 0022     		movs	r2, #0
 1769 00c2 1A60     		str	r2, [r3]
 1770              	.L57:
 293:pathfinding.c ****                 } 
 294:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1771              		.loc 1 294 0
 1772 00c4 6C4B     		ldr	r3, .L81+4
 1773 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1774 00c8 032B     		cmp	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 38


 1775 00ca 0AD1     		bne	.L58
 295:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1776              		.loc 1 295 0
 1777 00cc 0123     		movs	r3, #1
 1778 00ce FB76     		strb	r3, [r7, #27]
 296:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1779              		.loc 1 296 0
 1780 00d0 6E48     		ldr	r0, .L81+24
 1781 00d2 FFF7FEFF 		bl	puts
 297:pathfinding.c ****                     ignoreL = 0;
 1782              		.loc 1 297 0
 1783 00d6 6B4B     		ldr	r3, .L81+16
 1784 00d8 0022     		movs	r2, #0
 1785 00da 1A60     		str	r2, [r3]
 298:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1786              		.loc 1 298 0
 1787 00dc 6A4B     		ldr	r3, .L81+20
 1788 00de 0022     		movs	r2, #0
 1789 00e0 1A60     		str	r2, [r3]
 1790              	.L58:
 299:pathfinding.c ****                 }
 300:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1791              		.loc 1 300 0
 1792 00e2 654B     		ldr	r3, .L81+4
 1793 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1794 00e6 002B     		cmp	r3, #0
 1795 00e8 17D1     		bne	.L59
 301:pathfinding.c ****                     // check if we only need to go forward to reach target
 302:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1796              		.loc 1 302 0
 1797 00ea 3A69     		ldr	r2, [r7, #16]
 1798 00ec 7B69     		ldr	r3, [r7, #20]
 1799 00ee 9A42     		cmp	r2, r3
 1800 00f0 09D1     		bne	.L60
 1801              		.loc 1 302 0 is_stmt 0 discriminator 1
 1802 00f2 7A6B     		ldr	r2, [r7, #52]
 1803 00f4 3B6A     		ldr	r3, [r7, #32]
 1804 00f6 9A42     		cmp	r2, r3
 1805 00f8 05D1     		bne	.L60
 303:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1806              		.loc 1 303 0 is_stmt 1
 1807 00fa 0423     		movs	r3, #4
 1808 00fc FB76     		strb	r3, [r7, #27]
 304:pathfinding.c ****                         printf("Forward until target\n"); // THIS WILL HAVE AN EDGE CASE
 1809              		.loc 1 304 0
 1810 00fe 6448     		ldr	r0, .L81+28
 1811 0100 FFF7FEFF 		bl	puts
 1812 0104 09E0     		b	.L59
 1813              	.L60:
 305:pathfinding.c ****                     } else {
 306:pathfinding.c ****                         newDirection = GoForward;
 1814              		.loc 1 306 0
 1815 0106 0023     		movs	r3, #0
 1816 0108 FB76     		strb	r3, [r7, #27]
 307:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1817              		.loc 1 307 0
 1818 010a 5E4B     		ldr	r3, .L81+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 39


 1819 010c 1968     		ldr	r1, [r3]
 1820 010e 5E4B     		ldr	r3, .L81+20
 1821 0110 1B68     		ldr	r3, [r3]
 1822 0112 1A46     		mov	r2, r3
 1823 0114 5F48     		ldr	r0, .L81+32
 1824 0116 FFF7FEFF 		bl	printf
 1825              	.L59:
 308:pathfinding.c ****                     }
 309:pathfinding.c ****                 }
 310:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1826              		.loc 1 310 0
 1827 011a 574B     		ldr	r3, .L81+4
 1828 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1829 011e 012B     		cmp	r3, #1
 1830 0120 04D1     		bne	.L61
 311:pathfinding.c ****                     newDirection = uTurn;
 1831              		.loc 1 311 0
 1832 0122 0323     		movs	r3, #3
 1833 0124 FB76     		strb	r3, [r7, #27]
 312:pathfinding.c ****                     printf("U-turn\n");
 1834              		.loc 1 312 0
 1835 0126 5C48     		ldr	r0, .L81+36
 1836 0128 FFF7FEFF 		bl	puts
 1837              	.L61:
 313:pathfinding.c ****                 }
 314:pathfinding.c ****                 currentRow--; // jump to new location
 1838              		.loc 1 314 0
 1839 012c 7B6A     		ldr	r3, [r7, #36]
 1840 012e 013B     		subs	r3, r3, #1
 1841 0130 7B62     		str	r3, [r7, #36]
 315:pathfinding.c ****                 break;
 1842              		.loc 1 315 0
 1843 0132 04E1     		b	.L62
 1844              	.L54:
 316:pathfinding.c ****             case 1: // next step is down
 317:pathfinding.c ****                 currentRobotOrientation = Down;
 1845              		.loc 1 317 0
 1846 0134 4F4B     		ldr	r3, .L81
 1847 0136 0122     		movs	r2, #1
 1848 0138 1A70     		strb	r2, [r3]
 318:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1849              		.loc 1 318 0
 1850 013a 4F4B     		ldr	r3, .L81+4
 1851 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 013e 032B     		cmp	r3, #3
 1853 0140 0AD1     		bne	.L63
 319:pathfinding.c ****                     newDirection = waitForRightTurn;
 1854              		.loc 1 319 0
 1855 0142 0223     		movs	r3, #2
 1856 0144 FB76     		strb	r3, [r7, #27]
 320:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1857              		.loc 1 320 0
 1858 0146 4E48     		ldr	r0, .L81+12
 1859 0148 FFF7FEFF 		bl	puts
 321:pathfinding.c ****                     ignoreL = 0;
 1860              		.loc 1 321 0
 1861 014c 4D4B     		ldr	r3, .L81+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 40


 1862 014e 0022     		movs	r2, #0
 1863 0150 1A60     		str	r2, [r3]
 322:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1864              		.loc 1 322 0
 1865 0152 4D4B     		ldr	r3, .L81+20
 1866 0154 0022     		movs	r2, #0
 1867 0156 1A60     		str	r2, [r3]
 1868              	.L63:
 323:pathfinding.c ****                 } 
 324:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1869              		.loc 1 324 0
 1870 0158 474B     		ldr	r3, .L81+4
 1871 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 015c 022B     		cmp	r3, #2
 1873 015e 0AD1     		bne	.L64
 325:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1874              		.loc 1 325 0
 1875 0160 0123     		movs	r3, #1
 1876 0162 FB76     		strb	r3, [r7, #27]
 326:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1877              		.loc 1 326 0
 1878 0164 4948     		ldr	r0, .L81+24
 1879 0166 FFF7FEFF 		bl	puts
 327:pathfinding.c ****                     ignoreL = 0;
 1880              		.loc 1 327 0
 1881 016a 464B     		ldr	r3, .L81+16
 1882 016c 0022     		movs	r2, #0
 1883 016e 1A60     		str	r2, [r3]
 328:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1884              		.loc 1 328 0
 1885 0170 454B     		ldr	r3, .L81+20
 1886 0172 0022     		movs	r2, #0
 1887 0174 1A60     		str	r2, [r3]
 1888              	.L64:
 329:pathfinding.c ****                 }
 330:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1889              		.loc 1 330 0
 1890 0176 404B     		ldr	r3, .L81+4
 1891 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1892 017a 012B     		cmp	r3, #1
 1893 017c 17D1     		bne	.L65
 331:pathfinding.c ****                     // check if we only need to go forward to reach target
 332:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1894              		.loc 1 332 0
 1895 017e 3A69     		ldr	r2, [r7, #16]
 1896 0180 7B69     		ldr	r3, [r7, #20]
 1897 0182 9A42     		cmp	r2, r3
 1898 0184 09D1     		bne	.L66
 1899              		.loc 1 332 0 is_stmt 0 discriminator 1
 1900 0186 7A6B     		ldr	r2, [r7, #52]
 1901 0188 3B6A     		ldr	r3, [r7, #32]
 1902 018a 9A42     		cmp	r2, r3
 1903 018c 05D1     		bne	.L66
 333:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1904              		.loc 1 333 0 is_stmt 1
 1905 018e 0423     		movs	r3, #4
 1906 0190 FB76     		strb	r3, [r7, #27]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 41


 334:pathfinding.c ****                         printf("Forward until target\n");
 1907              		.loc 1 334 0
 1908 0192 3F48     		ldr	r0, .L81+28
 1909 0194 FFF7FEFF 		bl	puts
 1910 0198 09E0     		b	.L65
 1911              	.L66:
 335:pathfinding.c ****                     } else {
 336:pathfinding.c ****                         newDirection = GoForward;
 1912              		.loc 1 336 0
 1913 019a 0023     		movs	r3, #0
 1914 019c FB76     		strb	r3, [r7, #27]
 337:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1915              		.loc 1 337 0
 1916 019e 394B     		ldr	r3, .L81+16
 1917 01a0 1968     		ldr	r1, [r3]
 1918 01a2 394B     		ldr	r3, .L81+20
 1919 01a4 1B68     		ldr	r3, [r3]
 1920 01a6 1A46     		mov	r2, r3
 1921 01a8 3A48     		ldr	r0, .L81+32
 1922 01aa FFF7FEFF 		bl	printf
 1923              	.L65:
 338:pathfinding.c ****                     }                    
 339:pathfinding.c ****                 }
 340:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1924              		.loc 1 340 0
 1925 01ae 324B     		ldr	r3, .L81+4
 1926 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1927 01b2 002B     		cmp	r3, #0
 1928 01b4 0AD1     		bne	.L67
 341:pathfinding.c ****                     newDirection = uTurn;
 1929              		.loc 1 341 0
 1930 01b6 0323     		movs	r3, #3
 1931 01b8 FB76     		strb	r3, [r7, #27]
 342:pathfinding.c ****                     ignoreL = 0;
 1932              		.loc 1 342 0
 1933 01ba 324B     		ldr	r3, .L81+16
 1934 01bc 0022     		movs	r2, #0
 1935 01be 1A60     		str	r2, [r3]
 343:pathfinding.c ****                     ignoreR = 0;
 1936              		.loc 1 343 0
 1937 01c0 314B     		ldr	r3, .L81+20
 1938 01c2 0022     		movs	r2, #0
 1939 01c4 1A60     		str	r2, [r3]
 344:pathfinding.c ****                     printf("U-turn\n");
 1940              		.loc 1 344 0
 1941 01c6 3448     		ldr	r0, .L81+36
 1942 01c8 FFF7FEFF 		bl	puts
 1943              	.L67:
 345:pathfinding.c ****                 }
 346:pathfinding.c ****                 currentRow++;
 1944              		.loc 1 346 0
 1945 01cc 7B6A     		ldr	r3, [r7, #36]
 1946 01ce 0133     		adds	r3, r3, #1
 1947 01d0 7B62     		str	r3, [r7, #36]
 347:pathfinding.c ****                 break;
 1948              		.loc 1 347 0
 1949 01d2 B4E0     		b	.L62
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 42


 1950              	.L55:
 348:pathfinding.c ****             case 2: // next step is left
 349:pathfinding.c ****                 currentRobotOrientation = Left;
 1951              		.loc 1 349 0
 1952 01d4 274B     		ldr	r3, .L81
 1953 01d6 0222     		movs	r2, #2
 1954 01d8 1A70     		strb	r2, [r3]
 350:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1955              		.loc 1 350 0
 1956 01da 274B     		ldr	r3, .L81+4
 1957 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1958 01de 002B     		cmp	r3, #0
 1959 01e0 0AD1     		bne	.L68
 351:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1960              		.loc 1 351 0
 1961 01e2 0123     		movs	r3, #1
 1962 01e4 FB76     		strb	r3, [r7, #27]
 352:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 1963              		.loc 1 352 0
 1964 01e6 2948     		ldr	r0, .L81+24
 1965 01e8 FFF7FEFF 		bl	puts
 353:pathfinding.c ****                     ignoreL = 0;
 1966              		.loc 1 353 0
 1967 01ec 254B     		ldr	r3, .L81+16
 1968 01ee 0022     		movs	r2, #0
 1969 01f0 1A60     		str	r2, [r3]
 354:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1970              		.loc 1 354 0
 1971 01f2 254B     		ldr	r3, .L81+20
 1972 01f4 0022     		movs	r2, #0
 1973 01f6 1A60     		str	r2, [r3]
 1974              	.L68:
 355:pathfinding.c ****                 } 
 356:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1975              		.loc 1 356 0
 1976 01f8 1F4B     		ldr	r3, .L81+4
 1977 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 01fc 012B     		cmp	r3, #1
 1979 01fe 0AD1     		bne	.L69
 357:pathfinding.c ****                     newDirection = waitForRightTurn;
 1980              		.loc 1 357 0
 1981 0200 0223     		movs	r3, #2
 1982 0202 FB76     		strb	r3, [r7, #27]
 358:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 1983              		.loc 1 358 0
 1984 0204 1E48     		ldr	r0, .L81+12
 1985 0206 FFF7FEFF 		bl	puts
 359:pathfinding.c ****                     ignoreL = 0;
 1986              		.loc 1 359 0
 1987 020a 1E4B     		ldr	r3, .L81+16
 1988 020c 0022     		movs	r2, #0
 1989 020e 1A60     		str	r2, [r3]
 360:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1990              		.loc 1 360 0
 1991 0210 1D4B     		ldr	r3, .L81+20
 1992 0212 0022     		movs	r2, #0
 1993 0214 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 43


 1994              	.L69:
 361:pathfinding.c ****                 }
 362:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1995              		.loc 1 362 0
 1996 0216 184B     		ldr	r3, .L81+4
 1997 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1998 021a 022B     		cmp	r3, #2
 1999 021c 17D1     		bne	.L70
 363:pathfinding.c ****                     // check if we only need to go forward to reach target
 364:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2000              		.loc 1 364 0
 2001 021e 3A69     		ldr	r2, [r7, #16]
 2002 0220 7B69     		ldr	r3, [r7, #20]
 2003 0222 9A42     		cmp	r2, r3
 2004 0224 09D1     		bne	.L71
 2005              		.loc 1 364 0 is_stmt 0 discriminator 1
 2006 0226 3A6B     		ldr	r2, [r7, #48]
 2007 0228 7B6A     		ldr	r3, [r7, #36]
 2008 022a 9A42     		cmp	r2, r3
 2009 022c 05D1     		bne	.L71
 365:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2010              		.loc 1 365 0 is_stmt 1
 2011 022e 0423     		movs	r3, #4
 2012 0230 FB76     		strb	r3, [r7, #27]
 366:pathfinding.c ****                         printf("Forward until target\n");
 2013              		.loc 1 366 0
 2014 0232 1748     		ldr	r0, .L81+28
 2015 0234 FFF7FEFF 		bl	puts
 2016 0238 09E0     		b	.L70
 2017              	.L71:
 367:pathfinding.c ****                     } else {
 368:pathfinding.c ****                         newDirection = GoForward;
 2018              		.loc 1 368 0
 2019 023a 0023     		movs	r3, #0
 2020 023c FB76     		strb	r3, [r7, #27]
 369:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2021              		.loc 1 369 0
 2022 023e 114B     		ldr	r3, .L81+16
 2023 0240 1968     		ldr	r1, [r3]
 2024 0242 114B     		ldr	r3, .L81+20
 2025 0244 1B68     		ldr	r3, [r3]
 2026 0246 1A46     		mov	r2, r3
 2027 0248 1248     		ldr	r0, .L81+32
 2028 024a FFF7FEFF 		bl	printf
 2029              	.L70:
 370:pathfinding.c ****                     }
 371:pathfinding.c ****                 }
 372:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2030              		.loc 1 372 0
 2031 024e 0A4B     		ldr	r3, .L81+4
 2032 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2033 0252 032B     		cmp	r3, #3
 2034 0254 0AD1     		bne	.L72
 373:pathfinding.c ****                     newDirection = uTurn;
 2035              		.loc 1 373 0
 2036 0256 0323     		movs	r3, #3
 2037 0258 FB76     		strb	r3, [r7, #27]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 44


 374:pathfinding.c ****                     ignoreL = 0;
 2038              		.loc 1 374 0
 2039 025a 0A4B     		ldr	r3, .L81+16
 2040 025c 0022     		movs	r2, #0
 2041 025e 1A60     		str	r2, [r3]
 375:pathfinding.c ****                     ignoreR = 0;
 2042              		.loc 1 375 0
 2043 0260 094B     		ldr	r3, .L81+20
 2044 0262 0022     		movs	r2, #0
 2045 0264 1A60     		str	r2, [r3]
 376:pathfinding.c ****                     printf("U-turn\n");
 2046              		.loc 1 376 0
 2047 0266 0C48     		ldr	r0, .L81+36
 2048 0268 FFF7FEFF 		bl	puts
 2049              	.L72:
 377:pathfinding.c ****                 }
 378:pathfinding.c ****                 currentCol--;
 2050              		.loc 1 378 0
 2051 026c 3B6A     		ldr	r3, [r7, #32]
 2052 026e 013B     		subs	r3, r3, #1
 2053 0270 3B62     		str	r3, [r7, #32]
 379:pathfinding.c ****                 break;
 2054              		.loc 1 379 0
 2055 0272 64E0     		b	.L62
 2056              	.L82:
 2057              		.align	2
 2058              	.L81:
 2059 0274 00000000 		.word	currentRobotOrientation
 2060 0278 00000000 		.word	previousRobotOrientation
 2061 027c 04000000 		.word	.LC1
 2062 0280 14000000 		.word	.LC2
 2063 0284 00000000 		.word	ignoreL
 2064 0288 00000000 		.word	ignoreR
 2065 028c 20000000 		.word	.LC3
 2066 0290 2C000000 		.word	.LC4
 2067 0294 44000000 		.word	.LC5
 2068 0298 68000000 		.word	.LC6
 2069              	.L56:
 380:pathfinding.c ****             case 3: // next step is right
 381:pathfinding.c ****                 currentRobotOrientation = Right;
 2070              		.loc 1 381 0
 2071 029c 404B     		ldr	r3, .L83
 2072 029e 0322     		movs	r2, #3
 2073 02a0 1A70     		strb	r2, [r3]
 382:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2074              		.loc 1 382 0
 2075 02a2 404B     		ldr	r3, .L83+4
 2076 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 02a6 002B     		cmp	r3, #0
 2078 02a8 0AD1     		bne	.L73
 383:pathfinding.c ****                     newDirection = waitForRightTurn;
 2079              		.loc 1 383 0
 2080 02aa 0223     		movs	r3, #2
 2081 02ac FB76     		strb	r3, [r7, #27]
 384:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2082              		.loc 1 384 0
 2083 02ae 3E48     		ldr	r0, .L83+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 45


 2084 02b0 FFF7FEFF 		bl	puts
 385:pathfinding.c ****                     ignoreL = 0;
 2085              		.loc 1 385 0
 2086 02b4 3D4B     		ldr	r3, .L83+12
 2087 02b6 0022     		movs	r2, #0
 2088 02b8 1A60     		str	r2, [r3]
 386:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2089              		.loc 1 386 0
 2090 02ba 3D4B     		ldr	r3, .L83+16
 2091 02bc 0022     		movs	r2, #0
 2092 02be 1A60     		str	r2, [r3]
 2093              	.L73:
 387:pathfinding.c ****                 }
 388:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2094              		.loc 1 388 0
 2095 02c0 384B     		ldr	r3, .L83+4
 2096 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2097 02c4 012B     		cmp	r3, #1
 2098 02c6 0AD1     		bne	.L74
 389:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2099              		.loc 1 389 0
 2100 02c8 0123     		movs	r3, #1
 2101 02ca FB76     		strb	r3, [r7, #27]
 390:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2102              		.loc 1 390 0
 2103 02cc 3948     		ldr	r0, .L83+20
 2104 02ce FFF7FEFF 		bl	puts
 391:pathfinding.c ****                     ignoreL = 0;
 2105              		.loc 1 391 0
 2106 02d2 364B     		ldr	r3, .L83+12
 2107 02d4 0022     		movs	r2, #0
 2108 02d6 1A60     		str	r2, [r3]
 392:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2109              		.loc 1 392 0
 2110 02d8 354B     		ldr	r3, .L83+16
 2111 02da 0022     		movs	r2, #0
 2112 02dc 1A60     		str	r2, [r3]
 2113              	.L74:
 393:pathfinding.c ****                 }
 394:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2114              		.loc 1 394 0
 2115 02de 314B     		ldr	r3, .L83+4
 2116 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2117 02e2 032B     		cmp	r3, #3
 2118 02e4 17D1     		bne	.L75
 395:pathfinding.c ****                     // check if we only need to go forward to reach target
 396:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2119              		.loc 1 396 0
 2120 02e6 3A69     		ldr	r2, [r7, #16]
 2121 02e8 7B69     		ldr	r3, [r7, #20]
 2122 02ea 9A42     		cmp	r2, r3
 2123 02ec 09D1     		bne	.L76
 2124              		.loc 1 396 0 is_stmt 0 discriminator 1
 2125 02ee 3A6B     		ldr	r2, [r7, #48]
 2126 02f0 7B6A     		ldr	r3, [r7, #36]
 2127 02f2 9A42     		cmp	r2, r3
 2128 02f4 05D1     		bne	.L76
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 46


 397:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2129              		.loc 1 397 0 is_stmt 1
 2130 02f6 0423     		movs	r3, #4
 2131 02f8 FB76     		strb	r3, [r7, #27]
 398:pathfinding.c ****                         printf("Forward until target\n");
 2132              		.loc 1 398 0
 2133 02fa 2F48     		ldr	r0, .L83+24
 2134 02fc FFF7FEFF 		bl	puts
 2135 0300 09E0     		b	.L75
 2136              	.L76:
 399:pathfinding.c ****                     } else {
 400:pathfinding.c ****                         newDirection = GoForward;
 2137              		.loc 1 400 0
 2138 0302 0023     		movs	r3, #0
 2139 0304 FB76     		strb	r3, [r7, #27]
 401:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2140              		.loc 1 401 0
 2141 0306 294B     		ldr	r3, .L83+12
 2142 0308 1968     		ldr	r1, [r3]
 2143 030a 294B     		ldr	r3, .L83+16
 2144 030c 1B68     		ldr	r3, [r3]
 2145 030e 1A46     		mov	r2, r3
 2146 0310 2A48     		ldr	r0, .L83+28
 2147 0312 FFF7FEFF 		bl	printf
 2148              	.L75:
 402:pathfinding.c ****                     }
 403:pathfinding.c ****                 }
 404:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2149              		.loc 1 404 0
 2150 0316 234B     		ldr	r3, .L83+4
 2151 0318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 031a 022B     		cmp	r3, #2
 2153 031c 0AD1     		bne	.L77
 405:pathfinding.c ****                     newDirection = uTurn;
 2154              		.loc 1 405 0
 2155 031e 0323     		movs	r3, #3
 2156 0320 FB76     		strb	r3, [r7, #27]
 406:pathfinding.c ****                     ignoreL = 0;
 2157              		.loc 1 406 0
 2158 0322 224B     		ldr	r3, .L83+12
 2159 0324 0022     		movs	r2, #0
 2160 0326 1A60     		str	r2, [r3]
 407:pathfinding.c ****                     ignoreR = 0;
 2161              		.loc 1 407 0
 2162 0328 214B     		ldr	r3, .L83+16
 2163 032a 0022     		movs	r2, #0
 2164 032c 1A60     		str	r2, [r3]
 408:pathfinding.c ****                     printf("U-turn\n");
 2165              		.loc 1 408 0
 2166 032e 2448     		ldr	r0, .L83+32
 2167 0330 FFF7FEFF 		bl	puts
 2168              	.L77:
 409:pathfinding.c ****                 }
 410:pathfinding.c ****                 currentCol++;
 2169              		.loc 1 410 0
 2170 0334 3B6A     		ldr	r3, [r7, #32]
 2171 0336 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 47


 2172 0338 3B62     		str	r3, [r7, #32]
 411:pathfinding.c ****                 break;
 2173              		.loc 1 411 0
 2174 033a 00E0     		b	.L62
 2175              	.L80:
 412:pathfinding.c ****             default:
 413:pathfinding.c ****                 break;
 2176              		.loc 1 413 0
 2177 033c 00BF     		nop
 2178              	.L62:
 414:pathfinding.c ****         }
 415:pathfinding.c ****         
 416:pathfinding.c ****         // add new direction to list
 417:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2179              		.loc 1 417 0
 2180 033e 2149     		ldr	r1, .L83+36
 2181 0340 FA69     		ldr	r2, [r7, #28]
 2182 0342 1346     		mov	r3, r2
 2183 0344 5B00     		lsls	r3, r3, #1
 2184 0346 1344     		add	r3, r3, r2
 2185 0348 9B00     		lsls	r3, r3, #2
 2186 034a 0B44     		add	r3, r3, r1
 2187 034c FA7E     		ldrb	r2, [r7, #27]
 2188 034e 1A70     		strb	r2, [r3]
 418:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2189              		.loc 1 418 0
 2190 0350 164B     		ldr	r3, .L83+12
 2191 0352 1968     		ldr	r1, [r3]
 2192 0354 1B48     		ldr	r0, .L83+36
 2193 0356 FA69     		ldr	r2, [r7, #28]
 2194 0358 1346     		mov	r3, r2
 2195 035a 5B00     		lsls	r3, r3, #1
 2196 035c 1344     		add	r3, r3, r2
 2197 035e 9B00     		lsls	r3, r3, #2
 2198 0360 0344     		add	r3, r3, r0
 2199 0362 0433     		adds	r3, r3, #4
 2200 0364 1960     		str	r1, [r3]
 419:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2201              		.loc 1 419 0
 2202 0366 124B     		ldr	r3, .L83+16
 2203 0368 1968     		ldr	r1, [r3]
 2204 036a 1648     		ldr	r0, .L83+36
 2205 036c FA69     		ldr	r2, [r7, #28]
 2206 036e 1346     		mov	r3, r2
 2207 0370 5B00     		lsls	r3, r3, #1
 2208 0372 1344     		add	r3, r3, r2
 2209 0374 9B00     		lsls	r3, r3, #2
 2210 0376 0344     		add	r3, r3, r0
 2211 0378 0833     		adds	r3, r3, #8
 2212 037a 1960     		str	r1, [r3]
 420:pathfinding.c ****         listIndex++; // increment instruction list index
 2213              		.loc 1 420 0
 2214 037c FB69     		ldr	r3, [r7, #28]
 2215 037e 0133     		adds	r3, r3, #1
 2216 0380 FB61     		str	r3, [r7, #28]
 421:pathfinding.c ****         numSteps--; // decrement numSteps
 2217              		.loc 1 421 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 48


 2218 0382 BB68     		ldr	r3, [r7, #8]
 2219 0384 013B     		subs	r3, r3, #1
 2220 0386 BB60     		str	r3, [r7, #8]
 2221              	.L49:
 2222              	.LBE18:
 274:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2223              		.loc 1 274 0
 2224 0388 BB68     		ldr	r3, [r7, #8]
 2225 038a 002B     		cmp	r3, #0
 2226 038c BFF64FAE 		bge	.L78
 422:pathfinding.c ****     }
 423:pathfinding.c ****     processInstructionList(listIndex);
 2227              		.loc 1 423 0
 2228 0390 F869     		ldr	r0, [r7, #28]
 2229 0392 FFF7FEFF 		bl	processInstructionList
 424:pathfinding.c ****     return instructionsList;
 2230              		.loc 1 424 0
 2231 0396 0B4B     		ldr	r3, .L83+36
 425:pathfinding.c **** }
 2232              		.loc 1 425 0
 2233 0398 1846     		mov	r0, r3
 2234 039a 2837     		adds	r7, r7, #40
 2235              		.cfi_def_cfa_offset 8
 2236 039c BD46     		mov	sp, r7
 2237              		.cfi_def_cfa_register 13
 2238              		@ sp needed
 2239 039e 80BD     		pop	{r7, pc}
 2240              	.L84:
 2241              		.align	2
 2242              	.L83:
 2243 03a0 00000000 		.word	currentRobotOrientation
 2244 03a4 00000000 		.word	previousRobotOrientation
 2245 03a8 14000000 		.word	.LC2
 2246 03ac 00000000 		.word	ignoreL
 2247 03b0 00000000 		.word	ignoreR
 2248 03b4 20000000 		.word	.LC3
 2249 03b8 2C000000 		.word	.LC4
 2250 03bc 44000000 		.word	.LC5
 2251 03c0 68000000 		.word	.LC6
 2252 03c4 00000000 		.word	instructionsList
 2253              		.cfi_endproc
 2254              	.LFE5:
 2255              		.size	getPathInstructions, .-getPathInstructions
 2256              		.section	.text.processInstructionList,"ax",%progbits
 2257              		.align	2
 2258              		.global	processInstructionList
 2259              		.thumb
 2260              		.thumb_func
 2261              		.type	processInstructionList, %function
 2262              	processInstructionList:
 2263              	.LFB6:
 426:pathfinding.c **** 
 427:pathfinding.c **** Instructions * processInstructionList(int index) {
 2264              		.loc 1 427 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 16
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 49


 2268              		@ link register save eliminated.
 2269 0000 80B4     		push	{r7}
 2270              		.cfi_def_cfa_offset 4
 2271              		.cfi_offset 7, -4
 2272 0002 85B0     		sub	sp, sp, #20
 2273              		.cfi_def_cfa_offset 24
 2274 0004 00AF     		add	r7, sp, #0
 2275              		.cfi_def_cfa_register 7
 2276 0006 7860     		str	r0, [r7, #4]
 2277              	.LBB19:
 428:pathfinding.c ****     // remove repeated forwards
 429:pathfinding.c ****     for(int i = 0; i < index-1; i ++) {
 2278              		.loc 1 429 0
 2279 0008 0023     		movs	r3, #0
 2280 000a FB60     		str	r3, [r7, #12]
 2281 000c 32E0     		b	.L86
 2282              	.L88:
 430:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2283              		.loc 1 430 0
 2284 000e 1F49     		ldr	r1, .L90
 2285 0010 FA68     		ldr	r2, [r7, #12]
 2286 0012 1346     		mov	r3, r2
 2287 0014 5B00     		lsls	r3, r3, #1
 2288 0016 1344     		add	r3, r3, r2
 2289 0018 9B00     		lsls	r3, r3, #2
 2290 001a 0B44     		add	r3, r3, r1
 2291 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2292 001e FB68     		ldr	r3, [r7, #12]
 2293 0020 5A1C     		adds	r2, r3, #1
 2294 0022 1A48     		ldr	r0, .L90
 2295 0024 1346     		mov	r3, r2
 2296 0026 5B00     		lsls	r3, r3, #1
 2297 0028 1344     		add	r3, r3, r2
 2298 002a 9B00     		lsls	r3, r3, #2
 2299 002c 0344     		add	r3, r3, r0
 2300 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2301 0030 9942     		cmp	r1, r3
 2302 0032 1CD1     		bne	.L87
 431:pathfinding.c ****             instructionsList[i].direction = Skip;
 2303              		.loc 1 431 0
 2304 0034 1549     		ldr	r1, .L90
 2305 0036 FA68     		ldr	r2, [r7, #12]
 2306 0038 1346     		mov	r3, r2
 2307 003a 5B00     		lsls	r3, r3, #1
 2308 003c 1344     		add	r3, r3, r2
 2309 003e 9B00     		lsls	r3, r3, #2
 2310 0040 0B44     		add	r3, r3, r1
 2311 0042 0622     		movs	r2, #6
 2312 0044 1A70     		strb	r2, [r3]
 432:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2313              		.loc 1 432 0
 2314 0046 1149     		ldr	r1, .L90
 2315 0048 FA68     		ldr	r2, [r7, #12]
 2316 004a 1346     		mov	r3, r2
 2317 004c 5B00     		lsls	r3, r3, #1
 2318 004e 1344     		add	r3, r3, r2
 2319 0050 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 50


 2320 0052 0B44     		add	r3, r3, r1
 2321 0054 0433     		adds	r3, r3, #4
 2322 0056 0022     		movs	r2, #0
 2323 0058 1A60     		str	r2, [r3]
 433:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2324              		.loc 1 433 0
 2325 005a 0C49     		ldr	r1, .L90
 2326 005c FA68     		ldr	r2, [r7, #12]
 2327 005e 1346     		mov	r3, r2
 2328 0060 5B00     		lsls	r3, r3, #1
 2329 0062 1344     		add	r3, r3, r2
 2330 0064 9B00     		lsls	r3, r3, #2
 2331 0066 0B44     		add	r3, r3, r1
 2332 0068 0833     		adds	r3, r3, #8
 2333 006a 0022     		movs	r2, #0
 2334 006c 1A60     		str	r2, [r3]
 2335              	.L87:
 429:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2336              		.loc 1 429 0 discriminator 2
 2337 006e FB68     		ldr	r3, [r7, #12]
 2338 0070 0133     		adds	r3, r3, #1
 2339 0072 FB60     		str	r3, [r7, #12]
 2340              	.L86:
 429:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2341              		.loc 1 429 0 is_stmt 0 discriminator 1
 2342 0074 7B68     		ldr	r3, [r7, #4]
 2343 0076 5A1E     		subs	r2, r3, #1
 2344 0078 FB68     		ldr	r3, [r7, #12]
 2345 007a 9A42     		cmp	r2, r3
 2346 007c C7DC     		bgt	.L88
 2347              	.LBE19:
 434:pathfinding.c ****         }
 435:pathfinding.c ****     }
 436:pathfinding.c ****     return instructionsList;
 2348              		.loc 1 436 0 is_stmt 1
 2349 007e 034B     		ldr	r3, .L90
 437:pathfinding.c **** }
 2350              		.loc 1 437 0
 2351 0080 1846     		mov	r0, r3
 2352 0082 1437     		adds	r7, r7, #20
 2353              		.cfi_def_cfa_offset 4
 2354 0084 BD46     		mov	sp, r7
 2355              		.cfi_def_cfa_register 13
 2356              		@ sp needed
 2357 0086 80BC     		pop	{r7}
 2358              		.cfi_restore 7
 2359              		.cfi_def_cfa_offset 0
 2360 0088 7047     		bx	lr
 2361              	.L91:
 2362 008a 00BF     		.align	2
 2363              	.L90:
 2364 008c 00000000 		.word	instructionsList
 2365              		.cfi_endproc
 2366              	.LFE6:
 2367              		.size	processInstructionList, .-processInstructionList
 2368              		.section	.text.checkPathDirection,"ax",%progbits
 2369              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 51


 2370              		.global	checkPathDirection
 2371              		.thumb
 2372              		.thumb_func
 2373              		.type	checkPathDirection, %function
 2374              	checkPathDirection:
 2375              	.LFB7:
 438:pathfinding.c **** 
 439:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2376              		.loc 1 439 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 8
 2379              		@ frame_needed = 1, uses_anonymous_args = 0
 2380              		@ link register save eliminated.
 2381 0000 80B4     		push	{r7}
 2382              		.cfi_def_cfa_offset 4
 2383              		.cfi_offset 7, -4
 2384 0002 83B0     		sub	sp, sp, #12
 2385              		.cfi_def_cfa_offset 16
 2386 0004 00AF     		add	r7, sp, #0
 2387              		.cfi_def_cfa_register 7
 2388 0006 7860     		str	r0, [r7, #4]
 2389 0008 3960     		str	r1, [r7]
 440:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 441:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2390              		.loc 1 441 0
 2391 000a 7B68     		ldr	r3, [r7, #4]
 2392 000c 5A1E     		subs	r2, r3, #1
 2393 000e 3E49     		ldr	r1, .L102
 2394 0010 1346     		mov	r3, r2
 2395 0012 DB00     		lsls	r3, r3, #3
 2396 0014 1344     		add	r3, r3, r2
 2397 0016 5B00     		lsls	r3, r3, #1
 2398 0018 1344     		add	r3, r3, r2
 2399 001a 3A68     		ldr	r2, [r7]
 2400 001c 1344     		add	r3, r3, r2
 2401 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2402 0022 082B     		cmp	r3, #8
 2403 0024 0DD0     		beq	.L93
 2404              		.loc 1 441 0 is_stmt 0 discriminator 1
 2405 0026 7B68     		ldr	r3, [r7, #4]
 2406 0028 5A1E     		subs	r2, r3, #1
 2407 002a 3749     		ldr	r1, .L102
 2408 002c 1346     		mov	r3, r2
 2409 002e DB00     		lsls	r3, r3, #3
 2410 0030 1344     		add	r3, r3, r2
 2411 0032 5B00     		lsls	r3, r3, #1
 2412 0034 1344     		add	r3, r3, r2
 2413 0036 3A68     		ldr	r2, [r7]
 2414 0038 1344     		add	r3, r3, r2
 2415 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2416 003e 092B     		cmp	r3, #9
 2417 0040 01D1     		bne	.L94
 2418              	.L93:
 442:pathfinding.c ****         return 0; // up 
 2419              		.loc 1 442 0 is_stmt 1
 2420 0042 0023     		movs	r3, #0
 2421 0044 5AE0     		b	.L95
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 52


 2422              	.L94:
 443:pathfinding.c ****     }
 444:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2423              		.loc 1 444 0
 2424 0046 7B68     		ldr	r3, [r7, #4]
 2425 0048 5A1C     		adds	r2, r3, #1
 2426 004a 2F49     		ldr	r1, .L102
 2427 004c 1346     		mov	r3, r2
 2428 004e DB00     		lsls	r3, r3, #3
 2429 0050 1344     		add	r3, r3, r2
 2430 0052 5B00     		lsls	r3, r3, #1
 2431 0054 1344     		add	r3, r3, r2
 2432 0056 3A68     		ldr	r2, [r7]
 2433 0058 1344     		add	r3, r3, r2
 2434 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2435 005e 082B     		cmp	r3, #8
 2436 0060 0DD0     		beq	.L96
 2437              		.loc 1 444 0 is_stmt 0 discriminator 1
 2438 0062 7B68     		ldr	r3, [r7, #4]
 2439 0064 5A1C     		adds	r2, r3, #1
 2440 0066 2849     		ldr	r1, .L102
 2441 0068 1346     		mov	r3, r2
 2442 006a DB00     		lsls	r3, r3, #3
 2443 006c 1344     		add	r3, r3, r2
 2444 006e 5B00     		lsls	r3, r3, #1
 2445 0070 1344     		add	r3, r3, r2
 2446 0072 3A68     		ldr	r2, [r7]
 2447 0074 1344     		add	r3, r3, r2
 2448 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2449 007a 092B     		cmp	r3, #9
 2450 007c 01D1     		bne	.L97
 2451              	.L96:
 445:pathfinding.c ****         return 1; // down
 2452              		.loc 1 445 0 is_stmt 1
 2453 007e 0123     		movs	r3, #1
 2454 0080 3CE0     		b	.L95
 2455              	.L97:
 446:pathfinding.c ****     }
 447:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2456              		.loc 1 447 0
 2457 0082 3B68     		ldr	r3, [r7]
 2458 0084 591E     		subs	r1, r3, #1
 2459 0086 2048     		ldr	r0, .L102
 2460 0088 7A68     		ldr	r2, [r7, #4]
 2461 008a 1346     		mov	r3, r2
 2462 008c DB00     		lsls	r3, r3, #3
 2463 008e 1344     		add	r3, r3, r2
 2464 0090 5B00     		lsls	r3, r3, #1
 2465 0092 1344     		add	r3, r3, r2
 2466 0094 0B44     		add	r3, r3, r1
 2467 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2468 009a 082B     		cmp	r3, #8
 2469 009c 0DD0     		beq	.L98
 2470              		.loc 1 447 0 is_stmt 0 discriminator 1
 2471 009e 3B68     		ldr	r3, [r7]
 2472 00a0 591E     		subs	r1, r3, #1
 2473 00a2 1948     		ldr	r0, .L102
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 53


 2474 00a4 7A68     		ldr	r2, [r7, #4]
 2475 00a6 1346     		mov	r3, r2
 2476 00a8 DB00     		lsls	r3, r3, #3
 2477 00aa 1344     		add	r3, r3, r2
 2478 00ac 5B00     		lsls	r3, r3, #1
 2479 00ae 1344     		add	r3, r3, r2
 2480 00b0 0B44     		add	r3, r3, r1
 2481 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2482 00b6 092B     		cmp	r3, #9
 2483 00b8 01D1     		bne	.L99
 2484              	.L98:
 448:pathfinding.c ****         return 2; // left
 2485              		.loc 1 448 0 is_stmt 1
 2486 00ba 0223     		movs	r3, #2
 2487 00bc 1EE0     		b	.L95
 2488              	.L99:
 449:pathfinding.c ****     }
 450:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2489              		.loc 1 450 0
 2490 00be 3B68     		ldr	r3, [r7]
 2491 00c0 591C     		adds	r1, r3, #1
 2492 00c2 1148     		ldr	r0, .L102
 2493 00c4 7A68     		ldr	r2, [r7, #4]
 2494 00c6 1346     		mov	r3, r2
 2495 00c8 DB00     		lsls	r3, r3, #3
 2496 00ca 1344     		add	r3, r3, r2
 2497 00cc 5B00     		lsls	r3, r3, #1
 2498 00ce 1344     		add	r3, r3, r2
 2499 00d0 0B44     		add	r3, r3, r1
 2500 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2501 00d6 082B     		cmp	r3, #8
 2502 00d8 0DD0     		beq	.L100
 2503              		.loc 1 450 0 is_stmt 0 discriminator 1
 2504 00da 3B68     		ldr	r3, [r7]
 2505 00dc 591C     		adds	r1, r3, #1
 2506 00de 0A48     		ldr	r0, .L102
 2507 00e0 7A68     		ldr	r2, [r7, #4]
 2508 00e2 1346     		mov	r3, r2
 2509 00e4 DB00     		lsls	r3, r3, #3
 2510 00e6 1344     		add	r3, r3, r2
 2511 00e8 5B00     		lsls	r3, r3, #1
 2512 00ea 1344     		add	r3, r3, r2
 2513 00ec 0B44     		add	r3, r3, r1
 2514 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2515 00f2 092B     		cmp	r3, #9
 2516 00f4 01D1     		bne	.L101
 2517              	.L100:
 451:pathfinding.c ****         return 3; // right
 2518              		.loc 1 451 0 is_stmt 1
 2519 00f6 0323     		movs	r3, #3
 2520 00f8 00E0     		b	.L95
 2521              	.L101:
 452:pathfinding.c ****     }
 453:pathfinding.c ****     return 5; // default- will never reach this
 2522              		.loc 1 453 0
 2523 00fa 0523     		movs	r3, #5
 2524              	.L95:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 54


 454:pathfinding.c **** }
 2525              		.loc 1 454 0
 2526 00fc 1846     		mov	r0, r3
 2527 00fe 0C37     		adds	r7, r7, #12
 2528              		.cfi_def_cfa_offset 4
 2529 0100 BD46     		mov	sp, r7
 2530              		.cfi_def_cfa_register 13
 2531              		@ sp needed
 2532 0102 80BC     		pop	{r7}
 2533              		.cfi_restore 7
 2534              		.cfi_def_cfa_offset 0
 2535 0104 7047     		bx	lr
 2536              	.L103:
 2537 0106 00BF     		.align	2
 2538              	.L102:
 2539 0108 00000000 		.word	map
 2540              		.cfi_endproc
 2541              	.LFE7:
 2542              		.size	checkPathDirection, .-checkPathDirection
 2543              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2544              		.align	2
 2545              		.global	checkIgnoreTurn
 2546              		.thumb
 2547              		.thumb_func
 2548              		.type	checkIgnoreTurn, %function
 2549              	checkIgnoreTurn:
 2550              	.LFB8:
 455:pathfinding.c **** 
 456:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2551              		.loc 1 456 0
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 16
 2554              		@ frame_needed = 1, uses_anonymous_args = 0
 2555              		@ link register save eliminated.
 2556 0000 80B4     		push	{r7}
 2557              		.cfi_def_cfa_offset 4
 2558              		.cfi_offset 7, -4
 2559 0002 85B0     		sub	sp, sp, #20
 2560              		.cfi_def_cfa_offset 24
 2561 0004 00AF     		add	r7, sp, #0
 2562              		.cfi_def_cfa_register 7
 2563 0006 0346     		mov	r3, r0
 2564 0008 B960     		str	r1, [r7, #8]
 2565 000a 7A60     		str	r2, [r7, #4]
 2566 000c FB73     		strb	r3, [r7, #15]
 457:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 458:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2567              		.loc 1 458 0
 2568 000e BB68     		ldr	r3, [r7, #8]
 2569 0010 5A1E     		subs	r2, r3, #1
 2570 0012 4149     		ldr	r1, .L122
 2571 0014 1346     		mov	r3, r2
 2572 0016 DB00     		lsls	r3, r3, #3
 2573 0018 1344     		add	r3, r3, r2
 2574 001a 5B00     		lsls	r3, r3, #1
 2575 001c 1344     		add	r3, r3, r2
 2576 001e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 55


 2577 0020 1344     		add	r3, r3, r2
 2578 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2579 0026 002B     		cmp	r3, #0
 2580 0028 11D1     		bne	.L105
 459:pathfinding.c ****         switch (robotOrientation) {
 2581              		.loc 1 459 0
 2582 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2583 002c 022B     		cmp	r3, #2
 2584 002e 02D0     		beq	.L107
 2585 0030 032B     		cmp	r3, #3
 2586 0032 06D0     		beq	.L108
 460:pathfinding.c ****             case Left:
 461:pathfinding.c ****                 ignoreR++;
 462:pathfinding.c ****                 break;
 463:pathfinding.c ****             case Right:
 464:pathfinding.c ****                 ignoreL++;
 465:pathfinding.c ****                 break;
 466:pathfinding.c ****             default:
 467:pathfinding.c ****                 break; // ignore when going up and down
 2587              		.loc 1 467 0
 2588 0034 0BE0     		b	.L105
 2589              	.L107:
 461:pathfinding.c ****                 break;
 2590              		.loc 1 461 0
 2591 0036 394B     		ldr	r3, .L122+4
 2592 0038 1B68     		ldr	r3, [r3]
 2593 003a 0133     		adds	r3, r3, #1
 2594 003c 374A     		ldr	r2, .L122+4
 2595 003e 1360     		str	r3, [r2]
 462:pathfinding.c ****             case Right:
 2596              		.loc 1 462 0
 2597 0040 05E0     		b	.L105
 2598              	.L108:
 464:pathfinding.c ****                 break;
 2599              		.loc 1 464 0
 2600 0042 374B     		ldr	r3, .L122+8
 2601 0044 1B68     		ldr	r3, [r3]
 2602 0046 0133     		adds	r3, r3, #1
 2603 0048 354A     		ldr	r2, .L122+8
 2604 004a 1360     		str	r3, [r2]
 465:pathfinding.c ****             default:
 2605              		.loc 1 465 0
 2606 004c 00BF     		nop
 2607              	.L105:
 468:pathfinding.c ****         }
 469:pathfinding.c ****     }
 470:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2608              		.loc 1 470 0
 2609 004e BB68     		ldr	r3, [r7, #8]
 2610 0050 5A1C     		adds	r2, r3, #1
 2611 0052 3149     		ldr	r1, .L122
 2612 0054 1346     		mov	r3, r2
 2613 0056 DB00     		lsls	r3, r3, #3
 2614 0058 1344     		add	r3, r3, r2
 2615 005a 5B00     		lsls	r3, r3, #1
 2616 005c 1344     		add	r3, r3, r2
 2617 005e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 56


 2618 0060 1344     		add	r3, r3, r2
 2619 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2620 0066 002B     		cmp	r3, #0
 2621 0068 11D1     		bne	.L109
 471:pathfinding.c ****         switch (robotOrientation) {
 2622              		.loc 1 471 0
 2623 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2624 006c 022B     		cmp	r3, #2
 2625 006e 02D0     		beq	.L111
 2626 0070 032B     		cmp	r3, #3
 2627 0072 06D0     		beq	.L112
 472:pathfinding.c ****             case Left:
 473:pathfinding.c ****                 ignoreL++;
 474:pathfinding.c ****                 break;
 475:pathfinding.c ****             case Right:
 476:pathfinding.c ****                 ignoreR++;
 477:pathfinding.c ****                 break;
 478:pathfinding.c ****             default:
 479:pathfinding.c ****                 break;
 2628              		.loc 1 479 0
 2629 0074 0BE0     		b	.L109
 2630              	.L111:
 473:pathfinding.c ****                 break;
 2631              		.loc 1 473 0
 2632 0076 2A4B     		ldr	r3, .L122+8
 2633 0078 1B68     		ldr	r3, [r3]
 2634 007a 0133     		adds	r3, r3, #1
 2635 007c 284A     		ldr	r2, .L122+8
 2636 007e 1360     		str	r3, [r2]
 474:pathfinding.c ****             case Right:
 2637              		.loc 1 474 0
 2638 0080 05E0     		b	.L109
 2639              	.L112:
 476:pathfinding.c ****                 break;
 2640              		.loc 1 476 0
 2641 0082 264B     		ldr	r3, .L122+4
 2642 0084 1B68     		ldr	r3, [r3]
 2643 0086 0133     		adds	r3, r3, #1
 2644 0088 244A     		ldr	r2, .L122+4
 2645 008a 1360     		str	r3, [r2]
 477:pathfinding.c ****             default:
 2646              		.loc 1 477 0
 2647 008c 00BF     		nop
 2648              	.L109:
 480:pathfinding.c ****         }
 481:pathfinding.c ****     }
 482:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2649              		.loc 1 482 0
 2650 008e 7B68     		ldr	r3, [r7, #4]
 2651 0090 591E     		subs	r1, r3, #1
 2652 0092 2148     		ldr	r0, .L122
 2653 0094 BA68     		ldr	r2, [r7, #8]
 2654 0096 1346     		mov	r3, r2
 2655 0098 DB00     		lsls	r3, r3, #3
 2656 009a 1344     		add	r3, r3, r2
 2657 009c 5B00     		lsls	r3, r3, #1
 2658 009e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 57


 2659 00a0 0B44     		add	r3, r3, r1
 2660 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2661 00a6 002B     		cmp	r3, #0
 2662 00a8 11D1     		bne	.L113
 483:pathfinding.c ****         switch (robotOrientation) {
 2663              		.loc 1 483 0
 2664 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2665 00ac 002B     		cmp	r3, #0
 2666 00ae 02D0     		beq	.L115
 2667 00b0 012B     		cmp	r3, #1
 2668 00b2 06D0     		beq	.L116
 484:pathfinding.c ****             case Up:
 485:pathfinding.c ****                 ignoreL++;
 486:pathfinding.c ****                 break;
 487:pathfinding.c ****             case Down:
 488:pathfinding.c ****                 ignoreR++;
 489:pathfinding.c ****                 break;
 490:pathfinding.c ****             default:
 491:pathfinding.c ****                 break;
 2669              		.loc 1 491 0
 2670 00b4 0BE0     		b	.L113
 2671              	.L115:
 485:pathfinding.c ****                 break;
 2672              		.loc 1 485 0
 2673 00b6 1A4B     		ldr	r3, .L122+8
 2674 00b8 1B68     		ldr	r3, [r3]
 2675 00ba 0133     		adds	r3, r3, #1
 2676 00bc 184A     		ldr	r2, .L122+8
 2677 00be 1360     		str	r3, [r2]
 486:pathfinding.c ****             case Down:
 2678              		.loc 1 486 0
 2679 00c0 05E0     		b	.L113
 2680              	.L116:
 488:pathfinding.c ****                 break;
 2681              		.loc 1 488 0
 2682 00c2 164B     		ldr	r3, .L122+4
 2683 00c4 1B68     		ldr	r3, [r3]
 2684 00c6 0133     		adds	r3, r3, #1
 2685 00c8 144A     		ldr	r2, .L122+4
 2686 00ca 1360     		str	r3, [r2]
 489:pathfinding.c ****             default:
 2687              		.loc 1 489 0
 2688 00cc 00BF     		nop
 2689              	.L113:
 492:pathfinding.c ****         }
 493:pathfinding.c ****     }
 494:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2690              		.loc 1 494 0
 2691 00ce 7B68     		ldr	r3, [r7, #4]
 2692 00d0 591C     		adds	r1, r3, #1
 2693 00d2 1148     		ldr	r0, .L122
 2694 00d4 BA68     		ldr	r2, [r7, #8]
 2695 00d6 1346     		mov	r3, r2
 2696 00d8 DB00     		lsls	r3, r3, #3
 2697 00da 1344     		add	r3, r3, r2
 2698 00dc 5B00     		lsls	r3, r3, #1
 2699 00de 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 58


 2700 00e0 0B44     		add	r3, r3, r1
 2701 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2702 00e6 002B     		cmp	r3, #0
 2703 00e8 11D1     		bne	.L121
 495:pathfinding.c ****         switch (robotOrientation) {
 2704              		.loc 1 495 0
 2705 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2706 00ec 002B     		cmp	r3, #0
 2707 00ee 02D0     		beq	.L119
 2708 00f0 012B     		cmp	r3, #1
 2709 00f2 06D0     		beq	.L120
 496:pathfinding.c ****             case Up:
 497:pathfinding.c ****                 ignoreR++;
 498:pathfinding.c ****                 break;
 499:pathfinding.c ****             case Down:
 500:pathfinding.c ****                 ignoreL++;
 501:pathfinding.c ****                 break;
 502:pathfinding.c ****             default:
 503:pathfinding.c ****                 break;
 2710              		.loc 1 503 0
 2711 00f4 0BE0     		b	.L117
 2712              	.L119:
 497:pathfinding.c ****                 break;
 2713              		.loc 1 497 0
 2714 00f6 094B     		ldr	r3, .L122+4
 2715 00f8 1B68     		ldr	r3, [r3]
 2716 00fa 0133     		adds	r3, r3, #1
 2717 00fc 074A     		ldr	r2, .L122+4
 2718 00fe 1360     		str	r3, [r2]
 498:pathfinding.c ****             case Down:
 2719              		.loc 1 498 0
 2720 0100 05E0     		b	.L117
 2721              	.L120:
 500:pathfinding.c ****                 break;
 2722              		.loc 1 500 0
 2723 0102 074B     		ldr	r3, .L122+8
 2724 0104 1B68     		ldr	r3, [r3]
 2725 0106 0133     		adds	r3, r3, #1
 2726 0108 054A     		ldr	r2, .L122+8
 2727 010a 1360     		str	r3, [r2]
 501:pathfinding.c ****             default:
 2728              		.loc 1 501 0
 2729 010c 00BF     		nop
 2730              	.L117:
 2731              	.L121:
 504:pathfinding.c ****         }
 505:pathfinding.c ****     }
 506:pathfinding.c **** }
 2732              		.loc 1 506 0
 2733 010e 00BF     		nop
 2734 0110 1437     		adds	r7, r7, #20
 2735              		.cfi_def_cfa_offset 4
 2736 0112 BD46     		mov	sp, r7
 2737              		.cfi_def_cfa_register 13
 2738              		@ sp needed
 2739 0114 80BC     		pop	{r7}
 2740              		.cfi_restore 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 59


 2741              		.cfi_def_cfa_offset 0
 2742 0116 7047     		bx	lr
 2743              	.L123:
 2744              		.align	2
 2745              	.L122:
 2746 0118 00000000 		.word	map
 2747 011c 00000000 		.word	ignoreR
 2748 0120 00000000 		.word	ignoreL
 2749              		.cfi_endproc
 2750              	.LFE8:
 2751              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 2752              		.section	.text.getTargetOrientation,"ax",%progbits
 2753              		.align	2
 2754              		.global	getTargetOrientation
 2755              		.thumb
 2756              		.thumb_func
 2757              		.type	getTargetOrientation, %function
 2758              	getTargetOrientation:
 2759              	.LFB9:
 507:pathfinding.c **** 
 508:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 2760              		.loc 1 508 0
 2761              		.cfi_startproc
 2762              		@ args = 0, pretend = 0, frame = 8
 2763              		@ frame_needed = 1, uses_anonymous_args = 0
 2764              		@ link register save eliminated.
 2765 0000 80B4     		push	{r7}
 2766              		.cfi_def_cfa_offset 4
 2767              		.cfi_offset 7, -4
 2768 0002 83B0     		sub	sp, sp, #12
 2769              		.cfi_def_cfa_offset 16
 2770 0004 00AF     		add	r7, sp, #0
 2771              		.cfi_def_cfa_register 7
 2772 0006 7860     		str	r0, [r7, #4]
 2773 0008 3960     		str	r1, [r7]
 509:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 2774              		.loc 1 509 0
 2775 000a 7B68     		ldr	r3, [r7, #4]
 2776 000c 5A1C     		adds	r2, r3, #1
 2777 000e 2249     		ldr	r1, .L130
 2778 0010 1346     		mov	r3, r2
 2779 0012 DB00     		lsls	r3, r3, #3
 2780 0014 1344     		add	r3, r3, r2
 2781 0016 5B00     		lsls	r3, r3, #1
 2782 0018 1344     		add	r3, r3, r2
 2783 001a 3A68     		ldr	r2, [r7]
 2784 001c 1344     		add	r3, r3, r2
 2785 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2786 0022 082B     		cmp	r3, #8
 2787 0024 01D1     		bne	.L125
 510:pathfinding.c ****         return 0; // robot will be travelling up
 2788              		.loc 1 510 0
 2789 0026 0023     		movs	r3, #0
 2790 0028 30E0     		b	.L126
 2791              	.L125:
 511:pathfinding.c ****     }
 512:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 60


 2792              		.loc 1 512 0
 2793 002a 7B68     		ldr	r3, [r7, #4]
 2794 002c 5A1E     		subs	r2, r3, #1
 2795 002e 1A49     		ldr	r1, .L130
 2796 0030 1346     		mov	r3, r2
 2797 0032 DB00     		lsls	r3, r3, #3
 2798 0034 1344     		add	r3, r3, r2
 2799 0036 5B00     		lsls	r3, r3, #1
 2800 0038 1344     		add	r3, r3, r2
 2801 003a 3A68     		ldr	r2, [r7]
 2802 003c 1344     		add	r3, r3, r2
 2803 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2804 0042 082B     		cmp	r3, #8
 2805 0044 01D1     		bne	.L127
 513:pathfinding.c ****         return 1; // robot will be travelling down
 2806              		.loc 1 513 0
 2807 0046 0123     		movs	r3, #1
 2808 0048 20E0     		b	.L126
 2809              	.L127:
 514:pathfinding.c ****     }
 515:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 2810              		.loc 1 515 0
 2811 004a 3B68     		ldr	r3, [r7]
 2812 004c 591C     		adds	r1, r3, #1
 2813 004e 1248     		ldr	r0, .L130
 2814 0050 7A68     		ldr	r2, [r7, #4]
 2815 0052 1346     		mov	r3, r2
 2816 0054 DB00     		lsls	r3, r3, #3
 2817 0056 1344     		add	r3, r3, r2
 2818 0058 5B00     		lsls	r3, r3, #1
 2819 005a 1344     		add	r3, r3, r2
 2820 005c 0B44     		add	r3, r3, r1
 2821 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2822 0062 082B     		cmp	r3, #8
 2823 0064 01D1     		bne	.L128
 516:pathfinding.c ****         return 2; // robot will be travelling left
 2824              		.loc 1 516 0
 2825 0066 0223     		movs	r3, #2
 2826 0068 10E0     		b	.L126
 2827              	.L128:
 517:pathfinding.c ****     }
 518:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 2828              		.loc 1 518 0
 2829 006a 3B68     		ldr	r3, [r7]
 2830 006c 591E     		subs	r1, r3, #1
 2831 006e 0A48     		ldr	r0, .L130
 2832 0070 7A68     		ldr	r2, [r7, #4]
 2833 0072 1346     		mov	r3, r2
 2834 0074 DB00     		lsls	r3, r3, #3
 2835 0076 1344     		add	r3, r3, r2
 2836 0078 5B00     		lsls	r3, r3, #1
 2837 007a 1344     		add	r3, r3, r2
 2838 007c 0B44     		add	r3, r3, r1
 2839 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2840 0082 082B     		cmp	r3, #8
 2841 0084 01D1     		bne	.L129
 519:pathfinding.c ****         return 3; // robot will be travelling right
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 61


 2842              		.loc 1 519 0
 2843 0086 0323     		movs	r3, #3
 2844 0088 00E0     		b	.L126
 2845              	.L129:
 520:pathfinding.c ****     }
 521:pathfinding.c ****     return 5; // placeholder
 2846              		.loc 1 521 0
 2847 008a 0523     		movs	r3, #5
 2848              	.L126:
 522:pathfinding.c **** }
 2849              		.loc 1 522 0
 2850 008c 1846     		mov	r0, r3
 2851 008e 0C37     		adds	r7, r7, #12
 2852              		.cfi_def_cfa_offset 4
 2853 0090 BD46     		mov	sp, r7
 2854              		.cfi_def_cfa_register 13
 2855              		@ sp needed
 2856 0092 80BC     		pop	{r7}
 2857              		.cfi_restore 7
 2858              		.cfi_def_cfa_offset 0
 2859 0094 7047     		bx	lr
 2860              	.L131:
 2861 0096 00BF     		.align	2
 2862              	.L130:
 2863 0098 00000000 		.word	map
 2864              		.cfi_endproc
 2865              	.LFE9:
 2866              		.size	getTargetOrientation, .-getTargetOrientation
 2867              		.section	.text.instructionsListLength,"ax",%progbits
 2868              		.align	2
 2869              		.global	instructionsListLength
 2870              		.thumb
 2871              		.thumb_func
 2872              		.type	instructionsListLength, %function
 2873              	instructionsListLength:
 2874              	.LFB10:
 523:pathfinding.c **** int instructionsListLength() {
 2875              		.loc 1 523 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 8
 2878              		@ frame_needed = 1, uses_anonymous_args = 0
 2879              		@ link register save eliminated.
 2880 0000 80B4     		push	{r7}
 2881              		.cfi_def_cfa_offset 4
 2882              		.cfi_offset 7, -4
 2883 0002 83B0     		sub	sp, sp, #12
 2884              		.cfi_def_cfa_offset 16
 2885 0004 00AF     		add	r7, sp, #0
 2886              		.cfi_def_cfa_register 7
 2887              	.LBB20:
 524:pathfinding.c ****     int length;
 525:pathfinding.c ****     for(int i = 0; i < 285; i++) {
 2888              		.loc 1 525 0
 2889 0006 0023     		movs	r3, #0
 2890 0008 3B60     		str	r3, [r7]
 2891 000a 0FE0     		b	.L133
 2892              	.L135:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 62


 526:pathfinding.c ****         if(instructionsList[i].direction != Skip) {
 2893              		.loc 1 526 0
 2894 000c 0C49     		ldr	r1, .L137
 2895 000e 3A68     		ldr	r2, [r7]
 2896 0010 1346     		mov	r3, r2
 2897 0012 5B00     		lsls	r3, r3, #1
 2898 0014 1344     		add	r3, r3, r2
 2899 0016 9B00     		lsls	r3, r3, #2
 2900 0018 0B44     		add	r3, r3, r1
 2901 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2902 001c 062B     		cmp	r3, #6
 2903 001e 02D0     		beq	.L134
 527:pathfinding.c ****             length++;
 2904              		.loc 1 527 0
 2905 0020 7B68     		ldr	r3, [r7, #4]
 2906 0022 0133     		adds	r3, r3, #1
 2907 0024 7B60     		str	r3, [r7, #4]
 2908              	.L134:
 525:pathfinding.c ****         if(instructionsList[i].direction != Skip) {
 2909              		.loc 1 525 0 discriminator 2
 2910 0026 3B68     		ldr	r3, [r7]
 2911 0028 0133     		adds	r3, r3, #1
 2912 002a 3B60     		str	r3, [r7]
 2913              	.L133:
 525:pathfinding.c ****         if(instructionsList[i].direction != Skip) {
 2914              		.loc 1 525 0 is_stmt 0 discriminator 1
 2915 002c 3B68     		ldr	r3, [r7]
 2916 002e B3F58E7F 		cmp	r3, #284
 2917 0032 EBDD     		ble	.L135
 2918              	.LBE20:
 528:pathfinding.c ****         }
 529:pathfinding.c ****     }
 530:pathfinding.c ****     return length;
 2919              		.loc 1 530 0 is_stmt 1
 2920 0034 7B68     		ldr	r3, [r7, #4]
 531:pathfinding.c **** }
 2921              		.loc 1 531 0
 2922 0036 1846     		mov	r0, r3
 2923 0038 0C37     		adds	r7, r7, #12
 2924              		.cfi_def_cfa_offset 4
 2925 003a BD46     		mov	sp, r7
 2926              		.cfi_def_cfa_register 13
 2927              		@ sp needed
 2928 003c 80BC     		pop	{r7}
 2929              		.cfi_restore 7
 2930              		.cfi_def_cfa_offset 0
 2931 003e 7047     		bx	lr
 2932              	.L138:
 2933              		.align	2
 2934              	.L137:
 2935 0040 00000000 		.word	instructionsList
 2936              		.cfi_endproc
 2937              	.LFE10:
 2938              		.size	instructionsListLength, .-instructionsListLength
 2939              		.section	.text.findPath,"ax",%progbits
 2940              		.align	2
 2941              		.global	findPath
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 63


 2942              		.thumb
 2943              		.thumb_func
 2944              		.type	findPath, %function
 2945              	findPath:
 2946              	.LFB11:
 532:pathfinding.c **** void findPath(int map[MAX_ROWS][MAX_COLS], struct Location startLocation, struct Location targetLoc
 2947              		.loc 1 532 0
 2948              		.cfi_startproc
 2949              		@ args = 12, pretend = 8, frame = 16
 2950              		@ frame_needed = 1, uses_anonymous_args = 0
 2951 0000 82B0     		sub	sp, sp, #8
 2952              		.cfi_def_cfa_offset 8
 2953 0002 90B5     		push	{r4, r7, lr}
 2954              		.cfi_def_cfa_offset 20
 2955              		.cfi_offset 4, -20
 2956              		.cfi_offset 7, -16
 2957              		.cfi_offset 14, -12
 2958 0004 87B0     		sub	sp, sp, #28
 2959              		.cfi_def_cfa_offset 48
 2960 0006 02AF     		add	r7, sp, #8
 2961              		.cfi_def_cfa 7, 40
 2962 0008 F860     		str	r0, [r7, #12]
 2963 000a 381D     		adds	r0, r7, #4
 2964 000c 80E80600 		stmia	r0, {r1, r2}
 2965 0010 7B62     		str	r3, [r7, #36]
 533:pathfinding.c ****     clearMap(map); // clear map between each pass
 2966              		.loc 1 533 0
 2967 0012 F868     		ldr	r0, [r7, #12]
 2968 0014 FFF7FEFF 		bl	clearMap
 534:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 2969              		.loc 1 534 0
 2970 0018 BB6A     		ldr	r3, [r7, #40]
 2971 001a 0093     		str	r3, [sp]
 2972 001c 7B6A     		ldr	r3, [r7, #36]
 2973 001e 3A1D     		adds	r2, r7, #4
 2974 0020 06CA     		ldmia	r2, {r1, r2}
 2975 0022 F868     		ldr	r0, [r7, #12]
 2976 0024 FFF7FEFF 		bl	dijkstra
 535:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // get list of instructions 
 2977              		.loc 1 535 0
 2978 0028 0A4B     		ldr	r3, .L140
 2979 002a 1C68     		ldr	r4, [r3]
 2980 002c 6A46     		mov	r2, sp
 2981 002e 07F12403 		add	r3, r7, #36
 2982 0032 93E80300 		ldmia	r3, {r0, r1}
 2983 0036 82E80300 		stmia	r2, {r0, r1}
 2984 003a 3B1D     		adds	r3, r7, #4
 2985 003c 0CCB     		ldmia	r3, {r2, r3}
 2986 003e 2146     		mov	r1, r4
 2987 0040 F868     		ldr	r0, [r7, #12]
 2988 0042 FFF7FEFF 		bl	getPathInstructions
 536:pathfinding.c **** }
 2989              		.loc 1 536 0
 2990 0046 00BF     		nop
 2991 0048 1437     		adds	r7, r7, #20
 2992              		.cfi_def_cfa_offset 20
 2993 004a BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 64


 2994              		.cfi_def_cfa_register 13
 2995              		@ sp needed
 2996 004c BDE89040 		pop	{r4, r7, lr}
 2997              		.cfi_restore 14
 2998              		.cfi_restore 7
 2999              		.cfi_restore 4
 3000              		.cfi_def_cfa_offset 8
 3001 0050 02B0     		add	sp, sp, #8
 3002              		.cfi_def_cfa_offset 0
 3003 0052 7047     		bx	lr
 3004              	.L141:
 3005              		.align	2
 3006              	.L140:
 3007 0054 00000000 		.word	numSteps
 3008              		.cfi_endproc
 3009              	.LFE11:
 3010              		.size	findPath, .-findPath
 3011              		.text
 3012              	.Letext0:
 3013              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3014              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3015              		.section	.debug_info,"",%progbits
 3016              	.Ldebug_info0:
 3017 0000 54080000 		.4byte	0x854
 3018 0004 0400     		.2byte	0x4
 3019 0006 00000000 		.4byte	.Ldebug_abbrev0
 3020 000a 04       		.byte	0x4
 3021 000b 01       		.uleb128 0x1
 3022 000c 50000000 		.4byte	.LASF83
 3023 0010 0C       		.byte	0xc
 3024 0011 39040000 		.4byte	.LASF84
 3025 0015 32010000 		.4byte	.LASF85
 3026 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 3027 001d 00000000 		.4byte	0
 3028 0021 00000000 		.4byte	.Ldebug_line0
 3029 0025 02       		.uleb128 0x2
 3030 0026 01       		.byte	0x1
 3031 0027 06       		.byte	0x6
 3032 0028 30000000 		.4byte	.LASF0
 3033 002c 03       		.uleb128 0x3
 3034 002d 3C000000 		.4byte	.LASF12
 3035 0031 02       		.byte	0x2
 3036 0032 1D       		.byte	0x1d
 3037 0033 37000000 		.4byte	0x37
 3038 0037 02       		.uleb128 0x2
 3039 0038 01       		.byte	0x1
 3040 0039 08       		.byte	0x8
 3041 003a 2E030000 		.4byte	.LASF1
 3042 003e 02       		.uleb128 0x2
 3043 003f 02       		.byte	0x2
 3044 0040 05       		.byte	0x5
 3045 0041 6F030000 		.4byte	.LASF2
 3046 0045 02       		.uleb128 0x2
 3047 0046 02       		.byte	0x2
 3048 0047 07       		.byte	0x7
 3049 0048 72020000 		.4byte	.LASF3
 3050 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 65


 3051 004d 04       		.byte	0x4
 3052 004e 05       		.byte	0x5
 3053 004f A2010000 		.4byte	.LASF4
 3054 0053 02       		.uleb128 0x2
 3055 0054 04       		.byte	0x4
 3056 0055 07       		.byte	0x7
 3057 0056 3A020000 		.4byte	.LASF5
 3058 005a 02       		.uleb128 0x2
 3059 005b 08       		.byte	0x8
 3060 005c 05       		.byte	0x5
 3061 005d 24010000 		.4byte	.LASF6
 3062 0061 02       		.uleb128 0x2
 3063 0062 08       		.byte	0x8
 3064 0063 07       		.byte	0x7
 3065 0064 DE000000 		.4byte	.LASF7
 3066 0068 04       		.uleb128 0x4
 3067 0069 04       		.byte	0x4
 3068 006a 05       		.byte	0x5
 3069 006b 696E7400 		.ascii	"int\000"
 3070 006f 02       		.uleb128 0x2
 3071 0070 04       		.byte	0x4
 3072 0071 07       		.byte	0x7
 3073 0072 20020000 		.4byte	.LASF8
 3074 0076 02       		.uleb128 0x2
 3075 0077 08       		.byte	0x8
 3076 0078 04       		.byte	0x4
 3077 0079 C2020000 		.4byte	.LASF9
 3078 007d 02       		.uleb128 0x2
 3079 007e 04       		.byte	0x4
 3080 007f 07       		.byte	0x7
 3081 0080 B9020000 		.4byte	.LASF10
 3082 0084 02       		.uleb128 0x2
 3083 0085 01       		.byte	0x1
 3084 0086 08       		.byte	0x8
 3085 0087 CF030000 		.4byte	.LASF11
 3086 008b 03       		.uleb128 0x3
 3087 008c 85040000 		.4byte	.LASF13
 3088 0090 03       		.byte	0x3
 3089 0091 18       		.byte	0x18
 3090 0092 2C000000 		.4byte	0x2c
 3091 0096 05       		.uleb128 0x5
 3092 0097 3C030000 		.4byte	.LASF21
 3093 009b 01       		.byte	0x1
 3094 009c 37000000 		.4byte	0x37
 3095 00a0 01       		.byte	0x1
 3096 00a1 16       		.byte	0x16
 3097 00a2 D1000000 		.4byte	0xd1
 3098 00a6 06       		.uleb128 0x6
 3099 00a7 88030000 		.4byte	.LASF14
 3100 00ab 00       		.byte	0
 3101 00ac 06       		.uleb128 0x6
 3102 00ad F0020000 		.4byte	.LASF15
 3103 00b1 01       		.byte	0x1
 3104 00b2 06       		.uleb128 0x6
 3105 00b3 58040000 		.4byte	.LASF16
 3106 00b7 02       		.byte	0x2
 3107 00b8 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 66


 3108 00b9 07010000 		.4byte	.LASF17
 3109 00bd 03       		.byte	0x3
 3110 00be 06       		.uleb128 0x6
 3111 00bf BA010000 		.4byte	.LASF18
 3112 00c3 04       		.byte	0x4
 3113 00c4 06       		.uleb128 0x6
 3114 00c5 85020000 		.4byte	.LASF19
 3115 00c9 05       		.byte	0x5
 3116 00ca 06       		.uleb128 0x6
 3117 00cb 1A000000 		.4byte	.LASF20
 3118 00cf 06       		.byte	0x6
 3119 00d0 00       		.byte	0
 3120 00d1 05       		.uleb128 0x5
 3121 00d2 00000000 		.4byte	.LASF22
 3122 00d6 01       		.byte	0x1
 3123 00d7 37000000 		.4byte	0x37
 3124 00db 01       		.byte	0x1
 3125 00dc 17       		.byte	0x17
 3126 00dd F9000000 		.4byte	0xf9
 3127 00e1 07       		.uleb128 0x7
 3128 00e2 557000   		.ascii	"Up\000"
 3129 00e5 00       		.byte	0
 3130 00e6 06       		.uleb128 0x6
 3131 00e7 10040000 		.4byte	.LASF23
 3132 00eb 01       		.byte	0x1
 3133 00ec 06       		.uleb128 0x6
 3134 00ed B4020000 		.4byte	.LASF24
 3135 00f1 02       		.byte	0x2
 3136 00f2 06       		.uleb128 0x6
 3137 00f3 92030000 		.4byte	.LASF25
 3138 00f7 03       		.byte	0x3
 3139 00f8 00       		.byte	0
 3140 00f9 08       		.uleb128 0x8
 3141 00fa 95010000 		.4byte	.LASF29
 3142 00fe 0C       		.byte	0xc
 3143 00ff 01       		.byte	0x1
 3144 0100 19       		.byte	0x19
 3145 0101 2A010000 		.4byte	0x12a
 3146 0105 09       		.uleb128 0x9
 3147 0106 46000000 		.4byte	.LASF26
 3148 010a 01       		.byte	0x1
 3149 010b 1A       		.byte	0x1a
 3150 010c 96000000 		.4byte	0x96
 3151 0110 00       		.byte	0
 3152 0111 09       		.uleb128 0x9
 3153 0112 D2040000 		.4byte	.LASF27
 3154 0116 01       		.byte	0x1
 3155 0117 1B       		.byte	0x1b
 3156 0118 68000000 		.4byte	0x68
 3157 011c 04       		.byte	0x4
 3158 011d 09       		.uleb128 0x9
 3159 011e DA040000 		.4byte	.LASF28
 3160 0122 01       		.byte	0x1
 3161 0123 1C       		.byte	0x1c
 3162 0124 68000000 		.4byte	0x68
 3163 0128 08       		.byte	0x8
 3164 0129 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 67


 3165 012a 03       		.uleb128 0x3
 3166 012b 95010000 		.4byte	.LASF29
 3167 012f 01       		.byte	0x1
 3168 0130 1D       		.byte	0x1d
 3169 0131 F9000000 		.4byte	0xf9
 3170 0135 08       		.uleb128 0x8
 3171 0136 CD010000 		.4byte	.LASF30
 3172 013a 08       		.byte	0x8
 3173 013b 01       		.byte	0x1
 3174 013c 79       		.byte	0x79
 3175 013d 5A010000 		.4byte	0x15a
 3176 0141 0A       		.uleb128 0xa
 3177 0142 726F7700 		.ascii	"row\000"
 3178 0146 01       		.byte	0x1
 3179 0147 7A       		.byte	0x7a
 3180 0148 68000000 		.4byte	0x68
 3181 014c 00       		.byte	0
 3182 014d 0A       		.uleb128 0xa
 3183 014e 636F6C00 		.ascii	"col\000"
 3184 0152 01       		.byte	0x1
 3185 0153 7B       		.byte	0x7b
 3186 0154 68000000 		.4byte	0x68
 3187 0158 04       		.byte	0x4
 3188 0159 00       		.byte	0
 3189 015a 0B       		.uleb128 0xb
 3190 015b 1B010000 		.4byte	.LASF31
 3191 015f 01       		.byte	0x1
 3192 0160 68       		.byte	0x68
 3193 0161 00000000 		.4byte	.LFB1
 3194 0165 58000000 		.4byte	.LFE1-.LFB1
 3195 0169 01       		.uleb128 0x1
 3196 016a 9C       		.byte	0x9c
 3197 016b AA010000 		.4byte	0x1aa
 3198 016f 0C       		.uleb128 0xc
 3199 0170 6D617000 		.ascii	"map\000"
 3200 0174 01       		.byte	0x1
 3201 0175 68       		.byte	0x68
 3202 0176 BA010000 		.4byte	0x1ba
 3203 017a 02       		.uleb128 0x2
 3204 017b 91       		.byte	0x91
 3205 017c 6C       		.sleb128 -20
 3206 017d 0D       		.uleb128 0xd
 3207 017e 08000000 		.4byte	.LBB2
 3208 0182 44000000 		.4byte	.LBE2-.LBB2
 3209 0186 0E       		.uleb128 0xe
 3210 0187 6900     		.ascii	"i\000"
 3211 0189 01       		.byte	0x1
 3212 018a 6A       		.byte	0x6a
 3213 018b 68000000 		.4byte	0x68
 3214 018f 02       		.uleb128 0x2
 3215 0190 91       		.byte	0x91
 3216 0191 74       		.sleb128 -12
 3217 0192 0D       		.uleb128 0xd
 3218 0193 0E000000 		.4byte	.LBB3
 3219 0197 2C000000 		.4byte	.LBE3-.LBB3
 3220 019b 0E       		.uleb128 0xe
 3221 019c 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 68


 3222 019e 01       		.byte	0x1
 3223 019f 6B       		.byte	0x6b
 3224 01a0 68000000 		.4byte	0x68
 3225 01a4 02       		.uleb128 0x2
 3226 01a5 91       		.byte	0x91
 3227 01a6 70       		.sleb128 -16
 3228 01a7 00       		.byte	0
 3229 01a8 00       		.byte	0
 3230 01a9 00       		.byte	0
 3231 01aa 0F       		.uleb128 0xf
 3232 01ab 68000000 		.4byte	0x68
 3233 01af BA010000 		.4byte	0x1ba
 3234 01b3 10       		.uleb128 0x10
 3235 01b4 7D000000 		.4byte	0x7d
 3236 01b8 12       		.byte	0x12
 3237 01b9 00       		.byte	0
 3238 01ba 11       		.uleb128 0x11
 3239 01bb 04       		.byte	0x4
 3240 01bc AA010000 		.4byte	0x1aa
 3241 01c0 12       		.uleb128 0x12
 3242 01c1 12030000 		.4byte	.LASF32
 3243 01c5 01       		.byte	0x1
 3244 01c6 71       		.byte	0x71
 3245 01c7 00000000 		.4byte	.LFB2
 3246 01cb 60000000 		.4byte	.LFE2-.LFB2
 3247 01cf 01       		.uleb128 0x1
 3248 01d0 9C       		.byte	0x9c
 3249 01d1 10020000 		.4byte	0x210
 3250 01d5 0C       		.uleb128 0xc
 3251 01d6 6D617000 		.ascii	"map\000"
 3252 01da 01       		.byte	0x1
 3253 01db 71       		.byte	0x71
 3254 01dc BA010000 		.4byte	0x1ba
 3255 01e0 02       		.uleb128 0x2
 3256 01e1 91       		.byte	0x91
 3257 01e2 6C       		.sleb128 -20
 3258 01e3 0D       		.uleb128 0xd
 3259 01e4 08000000 		.4byte	.LBB4
 3260 01e8 4E000000 		.4byte	.LBE4-.LBB4
 3261 01ec 0E       		.uleb128 0xe
 3262 01ed 6900     		.ascii	"i\000"
 3263 01ef 01       		.byte	0x1
 3264 01f0 73       		.byte	0x73
 3265 01f1 68000000 		.4byte	0x68
 3266 01f5 02       		.uleb128 0x2
 3267 01f6 91       		.byte	0x91
 3268 01f7 74       		.sleb128 -12
 3269 01f8 0D       		.uleb128 0xd
 3270 01f9 0E000000 		.4byte	.LBB5
 3271 01fd 3C000000 		.4byte	.LBE5-.LBB5
 3272 0201 0E       		.uleb128 0xe
 3273 0202 6A00     		.ascii	"j\000"
 3274 0204 01       		.byte	0x1
 3275 0205 74       		.byte	0x74
 3276 0206 68000000 		.4byte	0x68
 3277 020a 02       		.uleb128 0x2
 3278 020b 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 69


 3279 020c 70       		.sleb128 -16
 3280 020d 00       		.byte	0
 3281 020e 00       		.byte	0
 3282 020f 00       		.byte	0
 3283 0210 13       		.uleb128 0x13
 3284 0211 24000000 		.4byte	.LASF55
 3285 0215 01       		.byte	0x1
 3286 0216 82       		.byte	0x82
 3287 0217 6C020000 		.4byte	0x26c
 3288 021b 00000000 		.4byte	.LFB3
 3289 021f 56000000 		.4byte	.LFE3-.LFB3
 3290 0223 01       		.uleb128 0x1
 3291 0224 9C       		.byte	0x9c
 3292 0225 6C020000 		.4byte	0x26c
 3293 0229 0C       		.uleb128 0xc
 3294 022a 7200     		.ascii	"r\000"
 3295 022c 01       		.byte	0x1
 3296 022d 82       		.byte	0x82
 3297 022e 68000000 		.4byte	0x68
 3298 0232 02       		.uleb128 0x2
 3299 0233 91       		.byte	0x91
 3300 0234 74       		.sleb128 -12
 3301 0235 0C       		.uleb128 0xc
 3302 0236 6300     		.ascii	"c\000"
 3303 0238 01       		.byte	0x1
 3304 0239 82       		.byte	0x82
 3305 023a 68000000 		.4byte	0x68
 3306 023e 02       		.uleb128 0x2
 3307 023f 91       		.byte	0x91
 3308 0240 70       		.sleb128 -16
 3309 0241 14       		.uleb128 0x14
 3310 0242 1F000000 		.4byte	.LASF33
 3311 0246 01       		.byte	0x1
 3312 0247 82       		.byte	0x82
 3313 0248 68000000 		.4byte	0x68
 3314 024c 02       		.uleb128 0x2
 3315 024d 91       		.byte	0x91
 3316 024e 6C       		.sleb128 -20
 3317 024f 14       		.uleb128 0x14
 3318 0250 C4040000 		.4byte	.LASF34
 3319 0254 01       		.byte	0x1
 3320 0255 82       		.byte	0x82
 3321 0256 68000000 		.4byte	0x68
 3322 025a 02       		.uleb128 0x2
 3323 025b 91       		.byte	0x91
 3324 025c 68       		.sleb128 -24
 3325 025d 0C       		.uleb128 0xc
 3326 025e 6D617000 		.ascii	"map\000"
 3327 0262 01       		.byte	0x1
 3328 0263 82       		.byte	0x82
 3329 0264 BA010000 		.4byte	0x1ba
 3330 0268 02       		.uleb128 0x2
 3331 0269 91       		.byte	0x91
 3332 026a 00       		.sleb128 0
 3333 026b 00       		.byte	0
 3334 026c 02       		.uleb128 0x2
 3335 026d 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 70


 3336 026e 02       		.byte	0x2
 3337 026f 28030000 		.4byte	.LASF35
 3338 0273 0B       		.uleb128 0xb
 3339 0274 11000000 		.4byte	.LASF36
 3340 0278 01       		.byte	0x1
 3341 0279 86       		.byte	0x86
 3342 027a 00000000 		.4byte	.LFB4
 3343 027e 4C090000 		.4byte	.LFE4-.LFB4
 3344 0282 01       		.uleb128 0x1
 3345 0283 9C       		.byte	0x9c
 3346 0284 C1040000 		.4byte	0x4c1
 3347 0288 0C       		.uleb128 0xc
 3348 0289 6D617000 		.ascii	"map\000"
 3349 028d 01       		.byte	0x1
 3350 028e 86       		.byte	0x86
 3351 028f BA010000 		.4byte	0x1ba
 3352 0293 03       		.uleb128 0x3
 3353 0294 91       		.byte	0x91
 3354 0295 BC52     		.sleb128 -5828
 3355 0297 14       		.uleb128 0x14
 3356 0298 0D010000 		.4byte	.LASF37
 3357 029c 01       		.byte	0x1
 3358 029d 86       		.byte	0x86
 3359 029e 35010000 		.4byte	0x135
 3360 02a2 03       		.uleb128 0x3
 3361 02a3 91       		.byte	0x91
 3362 02a4 B452     		.sleb128 -5836
 3363 02a6 14       		.uleb128 0x14
 3364 02a7 AB010000 		.4byte	.LASF38
 3365 02ab 01       		.byte	0x1
 3366 02ac 86       		.byte	0x86
 3367 02ad 35010000 		.4byte	0x135
 3368 02b1 02       		.uleb128 0x2
 3369 02b2 91       		.byte	0x91
 3370 02b3 7C       		.sleb128 -4
 3371 02b4 15       		.uleb128 0x15
 3372 02b5 BD030000 		.4byte	.LASF39
 3373 02b9 01       		.byte	0x1
 3374 02ba 88       		.byte	0x88
 3375 02bb C1040000 		.4byte	0x4c1
 3376 02bf 03       		.uleb128 0x3
 3377 02c0 91       		.byte	0x91
 3378 02c1 9C76     		.sleb128 -1252
 3379 02c3 08       		.uleb128 0x8
 3380 02c4 69040000 		.4byte	.LASF40
 3381 02c8 0C       		.byte	0xc
 3382 02c9 01       		.byte	0x1
 3383 02ca 8F       		.byte	0x8f
 3384 02cb E8020000 		.4byte	0x2e8
 3385 02cf 09       		.uleb128 0x9
 3386 02d0 B4030000 		.4byte	.LASF41
 3387 02d4 01       		.byte	0x1
 3388 02d5 90       		.byte	0x90
 3389 02d6 35010000 		.4byte	0x135
 3390 02da 00       		.byte	0
 3391 02db 09       		.uleb128 0x9
 3392 02dc F7030000 		.4byte	.LASF42
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 71


 3393 02e0 01       		.byte	0x1
 3394 02e1 91       		.byte	0x91
 3395 02e2 68000000 		.4byte	0x68
 3396 02e6 08       		.byte	0x8
 3397 02e7 00       		.byte	0
 3398 02e8 0E       		.uleb128 0xe
 3399 02e9 707100   		.ascii	"pq\000"
 3400 02ec 01       		.byte	0x1
 3401 02ed 94       		.byte	0x94
 3402 02ee D7040000 		.4byte	0x4d7
 3403 02f2 03       		.uleb128 0x3
 3404 02f3 91       		.byte	0x91
 3405 02f4 C05B     		.sleb128 -4672
 3406 02f6 15       		.uleb128 0x15
 3407 02f7 99020000 		.4byte	.LASF43
 3408 02fb 01       		.byte	0x1
 3409 02fc 95       		.byte	0x95
 3410 02fd 68000000 		.4byte	0x68
 3411 0301 02       		.uleb128 0x2
 3412 0302 91       		.byte	0x91
 3413 0303 5C       		.sleb128 -36
 3414 0304 15       		.uleb128 0x15
 3415 0305 FD000000 		.4byte	.LASF44
 3416 0309 01       		.byte	0x1
 3417 030a 98       		.byte	0x98
 3418 030b C1040000 		.4byte	0x4c1
 3419 030f 03       		.uleb128 0x3
 3420 0310 91       		.byte	0x91
 3421 0311 CC52     		.sleb128 -5812
 3422 0313 15       		.uleb128 0x15
 3423 0314 F5000000 		.4byte	.LASF45
 3424 0318 01       		.byte	0x1
 3425 0319 A1       		.byte	0xa1
 3426 031a 68000000 		.4byte	0x68
 3427 031e 02       		.uleb128 0x2
 3428 031f 91       		.byte	0x91
 3429 0320 50       		.sleb128 -48
 3430 0321 15       		.uleb128 0x15
 3431 0322 2D020000 		.4byte	.LASF46
 3432 0326 01       		.byte	0x1
 3433 0327 D8       		.byte	0xd8
 3434 0328 68000000 		.4byte	0x68
 3435 032c 02       		.uleb128 0x2
 3436 032d 91       		.byte	0x91
 3437 032e 40       		.sleb128 -64
 3438 032f 15       		.uleb128 0x15
 3439 0330 AB030000 		.4byte	.LASF47
 3440 0334 01       		.byte	0x1
 3441 0335 DB       		.byte	0xdb
 3442 0336 E8040000 		.4byte	0x4e8
 3443 033a 03       		.uleb128 0x3
 3444 033b 91       		.byte	0x91
 3445 033c 987F     		.sleb128 -104
 3446 033e 15       		.uleb128 0x15
 3447 033f CE020000 		.4byte	.LASF48
 3448 0343 01       		.byte	0x1
 3449 0344 DC       		.byte	0xdc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 72


 3450 0345 68000000 		.4byte	0x68
 3451 0349 03       		.uleb128 0x3
 3452 034a 91       		.byte	0x91
 3453 034b BC7F     		.sleb128 -68
 3454 034d 15       		.uleb128 0x15
 3455 034e 8A010000 		.4byte	.LASF49
 3456 0352 01       		.byte	0x1
 3457 0353 DD       		.byte	0xdd
 3458 0354 68000000 		.4byte	0x68
 3459 0358 03       		.uleb128 0x3
 3460 0359 91       		.byte	0x91
 3461 035a B87F     		.sleb128 -72
 3462 035c 15       		.uleb128 0x15
 3463 035d 08030000 		.4byte	.LASF50
 3464 0361 01       		.byte	0x1
 3465 0362 E4       		.byte	0xe4
 3466 0363 68000000 		.4byte	0x68
 3467 0367 03       		.uleb128 0x3
 3468 0368 91       		.byte	0x91
 3469 0369 B47F     		.sleb128 -76
 3470 036b 16       		.uleb128 0x16
 3471 036c 28000000 		.4byte	.LBB6
 3472 0370 92000000 		.4byte	.LBE6-.LBB6
 3473 0374 9B030000 		.4byte	0x39b
 3474 0378 0E       		.uleb128 0xe
 3475 0379 6900     		.ascii	"i\000"
 3476 037b 01       		.byte	0x1
 3477 037c 89       		.byte	0x89
 3478 037d 68000000 		.4byte	0x68
 3479 0381 02       		.uleb128 0x2
 3480 0382 91       		.byte	0x91
 3481 0383 64       		.sleb128 -28
 3482 0384 0D       		.uleb128 0xd
 3483 0385 36000000 		.4byte	.LBB7
 3484 0389 60000000 		.4byte	.LBE7-.LBB7
 3485 038d 0E       		.uleb128 0xe
 3486 038e 6A00     		.ascii	"j\000"
 3487 0390 01       		.byte	0x1
 3488 0391 8A       		.byte	0x8a
 3489 0392 68000000 		.4byte	0x68
 3490 0396 02       		.uleb128 0x2
 3491 0397 91       		.byte	0x91
 3492 0398 60       		.sleb128 -32
 3493 0399 00       		.byte	0
 3494 039a 00       		.byte	0
 3495 039b 16       		.uleb128 0x16
 3496 039c C6000000 		.4byte	.LBB8
 3497 03a0 92000000 		.4byte	.LBE8-.LBB8
 3498 03a4 CB030000 		.4byte	0x3cb
 3499 03a8 0E       		.uleb128 0xe
 3500 03a9 6900     		.ascii	"i\000"
 3501 03ab 01       		.byte	0x1
 3502 03ac 9B       		.byte	0x9b
 3503 03ad 68000000 		.4byte	0x68
 3504 03b1 02       		.uleb128 0x2
 3505 03b2 91       		.byte	0x91
 3506 03b3 58       		.sleb128 -40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 73


 3507 03b4 0D       		.uleb128 0xd
 3508 03b5 D4000000 		.4byte	.LBB9
 3509 03b9 60000000 		.4byte	.LBE9-.LBB9
 3510 03bd 0E       		.uleb128 0xe
 3511 03be 6A00     		.ascii	"j\000"
 3512 03c0 01       		.byte	0x1
 3513 03c1 9C       		.byte	0x9c
 3514 03c2 68000000 		.4byte	0x68
 3515 03c6 02       		.uleb128 0x2
 3516 03c7 91       		.byte	0x91
 3517 03c8 54       		.sleb128 -44
 3518 03c9 00       		.byte	0
 3519 03ca 00       		.byte	0
 3520 03cb 17       		.uleb128 0x17
 3521 03cc 00000000 		.4byte	.Ldebug_ranges0+0
 3522 03d0 81040000 		.4byte	0x481
 3523 03d4 0E       		.uleb128 0xe
 3524 03d5 69647800 		.ascii	"idx\000"
 3525 03d9 01       		.byte	0x1
 3526 03da AB       		.byte	0xab
 3527 03db 68000000 		.4byte	0x68
 3528 03df 02       		.uleb128 0x2
 3529 03e0 91       		.byte	0x91
 3530 03e1 4C       		.sleb128 -52
 3531 03e2 15       		.uleb128 0x15
 3532 03e3 00030000 		.4byte	.LASF51
 3533 03e7 01       		.byte	0x1
 3534 03e8 B1       		.byte	0xb1
 3535 03e9 C3020000 		.4byte	0x2c3
 3536 03ed 03       		.uleb128 0x3
 3537 03ee 91       		.byte	0x91
 3538 03ef C052     		.sleb128 -5824
 3539 03f1 0E       		.uleb128 0xe
 3540 03f2 726F7700 		.ascii	"row\000"
 3541 03f6 01       		.byte	0x1
 3542 03f7 B5       		.byte	0xb5
 3543 03f8 68000000 		.4byte	0x68
 3544 03fc 03       		.uleb128 0x3
 3545 03fd 91       		.byte	0x91
 3546 03fe AC7F     		.sleb128 -84
 3547 0400 0E       		.uleb128 0xe
 3548 0401 636F6C00 		.ascii	"col\000"
 3549 0405 01       		.byte	0x1
 3550 0406 B6       		.byte	0xb6
 3551 0407 68000000 		.4byte	0x68
 3552 040b 03       		.uleb128 0x3
 3553 040c 91       		.byte	0x91
 3554 040d A87F     		.sleb128 -88
 3555 040f 16       		.uleb128 0x16
 3556 0410 02020000 		.4byte	.LBB11
 3557 0414 90000000 		.4byte	.LBE11-.LBB11
 3558 0418 29040000 		.4byte	0x429
 3559 041c 0E       		.uleb128 0xe
 3560 041d 6900     		.ascii	"i\000"
 3561 041f 01       		.byte	0x1
 3562 0420 AC       		.byte	0xac
 3563 0421 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 74


 3564 0425 02       		.uleb128 0x2
 3565 0426 91       		.byte	0x91
 3566 0427 48       		.sleb128 -56
 3567 0428 00       		.byte	0
 3568 0429 0D       		.uleb128 0xd
 3569 042a C4030000 		.4byte	.LBB12
 3570 042e 1E020000 		.4byte	.LBE12-.LBB12
 3571 0432 0E       		.uleb128 0xe
 3572 0433 6900     		.ascii	"i\000"
 3573 0435 01       		.byte	0x1
 3574 0436 BF       		.byte	0xbf
 3575 0437 68000000 		.4byte	0x68
 3576 043b 02       		.uleb128 0x2
 3577 043c 91       		.byte	0x91
 3578 043d 44       		.sleb128 -60
 3579 043e 0D       		.uleb128 0xd
 3580 043f D2030000 		.4byte	.LBB13
 3581 0443 EA010000 		.4byte	.LBE13-.LBB13
 3582 0447 15       		.uleb128 0x15
 3583 0448 92020000 		.4byte	.LASF52
 3584 044c 01       		.byte	0x1
 3585 044d C0       		.byte	0xc0
 3586 044e 68000000 		.4byte	0x68
 3587 0452 03       		.uleb128 0x3
 3588 0453 91       		.byte	0x91
 3589 0454 A47F     		.sleb128 -92
 3590 0456 15       		.uleb128 0x15
 3591 0457 83010000 		.4byte	.LASF53
 3592 045b 01       		.byte	0x1
 3593 045c C1       		.byte	0xc1
 3594 045d 68000000 		.4byte	0x68
 3595 0461 03       		.uleb128 0x3
 3596 0462 91       		.byte	0x91
 3597 0463 A07F     		.sleb128 -96
 3598 0465 0D       		.uleb128 0xd
 3599 0466 80040000 		.4byte	.LBB14
 3600 046a 3C010000 		.4byte	.LBE14-.LBB14
 3601 046e 15       		.uleb128 0x15
 3602 046f 2D040000 		.4byte	.LASF54
 3603 0473 01       		.byte	0x1
 3604 0474 C4       		.byte	0xc4
 3605 0475 68000000 		.4byte	0x68
 3606 0479 03       		.uleb128 0x3
 3607 047a 91       		.byte	0x91
 3608 047b 9C7F     		.sleb128 -100
 3609 047d 00       		.byte	0
 3610 047e 00       		.byte	0
 3611 047f 00       		.byte	0
 3612 0480 00       		.byte	0
 3613 0481 0D       		.uleb128 0xd
 3614 0482 0A070000 		.4byte	.LBB16
 3615 0486 18020000 		.4byte	.LBE16-.LBB16
 3616 048a 0E       		.uleb128 0xe
 3617 048b 6900     		.ascii	"i\000"
 3618 048d 01       		.byte	0x1
 3619 048e E8       		.byte	0xe8
 3620 048f 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 75


 3621 0493 03       		.uleb128 0x3
 3622 0494 91       		.byte	0x91
 3623 0495 B07F     		.sleb128 -80
 3624 0497 0D       		.uleb128 0xd
 3625 0498 1C070000 		.4byte	.LBB17
 3626 049c EC010000 		.4byte	.LBE17-.LBB17
 3627 04a0 15       		.uleb128 0x15
 3628 04a1 92020000 		.4byte	.LASF52
 3629 04a5 01       		.byte	0x1
 3630 04a6 E9       		.byte	0xe9
 3631 04a7 68000000 		.4byte	0x68
 3632 04ab 03       		.uleb128 0x3
 3633 04ac 91       		.byte	0x91
 3634 04ad 947F     		.sleb128 -108
 3635 04af 15       		.uleb128 0x15
 3636 04b0 83010000 		.4byte	.LASF53
 3637 04b4 01       		.byte	0x1
 3638 04b5 EA       		.byte	0xea
 3639 04b6 68000000 		.4byte	0x68
 3640 04ba 03       		.uleb128 0x3
 3641 04bb 91       		.byte	0x91
 3642 04bc 907F     		.sleb128 -112
 3643 04be 00       		.byte	0
 3644 04bf 00       		.byte	0
 3645 04c0 00       		.byte	0
 3646 04c1 0F       		.uleb128 0xf
 3647 04c2 68000000 		.4byte	0x68
 3648 04c6 D7040000 		.4byte	0x4d7
 3649 04ca 10       		.uleb128 0x10
 3650 04cb 7D000000 		.4byte	0x7d
 3651 04cf 0E       		.byte	0xe
 3652 04d0 10       		.uleb128 0x10
 3653 04d1 7D000000 		.4byte	0x7d
 3654 04d5 12       		.byte	0x12
 3655 04d6 00       		.byte	0
 3656 04d7 0F       		.uleb128 0xf
 3657 04d8 C3020000 		.4byte	0x2c3
 3658 04dc E8040000 		.4byte	0x4e8
 3659 04e0 18       		.uleb128 0x18
 3660 04e1 7D000000 		.4byte	0x7d
 3661 04e5 1C01     		.2byte	0x11c
 3662 04e7 00       		.byte	0
 3663 04e8 11       		.uleb128 0x11
 3664 04e9 04       		.byte	0x4
 3665 04ea 35010000 		.4byte	0x135
 3666 04ee 19       		.uleb128 0x19
 3667 04ef A0020000 		.4byte	.LASF56
 3668 04f3 01       		.byte	0x1
 3669 04f4 0C01     		.2byte	0x10c
 3670 04f6 A9050000 		.4byte	0x5a9
 3671 04fa 00000000 		.4byte	.LFB5
 3672 04fe C8030000 		.4byte	.LFE5-.LFB5
 3673 0502 01       		.uleb128 0x1
 3674 0503 9C       		.byte	0x9c
 3675 0504 A9050000 		.4byte	0x5a9
 3676 0508 1A       		.uleb128 0x1a
 3677 0509 6D617000 		.ascii	"map\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 76


 3678 050d 01       		.byte	0x1
 3679 050e 0C01     		.2byte	0x10c
 3680 0510 BA010000 		.4byte	0x1ba
 3681 0514 02       		.uleb128 0x2
 3682 0515 91       		.byte	0x91
 3683 0516 5C       		.sleb128 -36
 3684 0517 1B       		.uleb128 0x1b
 3685 0518 98030000 		.4byte	.LASF57
 3686 051c 01       		.byte	0x1
 3687 051d 0C01     		.2byte	0x10c
 3688 051f 68000000 		.4byte	0x68
 3689 0523 02       		.uleb128 0x2
 3690 0524 91       		.byte	0x91
 3691 0525 58       		.sleb128 -40
 3692 0526 1B       		.uleb128 0x1b
 3693 0527 77040000 		.4byte	.LASF58
 3694 052b 01       		.byte	0x1
 3695 052c 0C01     		.2byte	0x10c
 3696 052e 35010000 		.4byte	0x135
 3697 0532 02       		.uleb128 0x2
 3698 0533 91       		.byte	0x91
 3699 0534 50       		.sleb128 -48
 3700 0535 1B       		.uleb128 0x1b
 3701 0536 79030000 		.4byte	.LASF59
 3702 053a 01       		.byte	0x1
 3703 053b 0C01     		.2byte	0x10c
 3704 053d 35010000 		.4byte	0x135
 3705 0541 02       		.uleb128 0x2
 3706 0542 91       		.byte	0x91
 3707 0543 00       		.sleb128 0
 3708 0544 1C       		.uleb128 0x1c
 3709 0545 CE020000 		.4byte	.LASF48
 3710 0549 01       		.byte	0x1
 3711 054a 0D01     		.2byte	0x10d
 3712 054c 68000000 		.4byte	0x68
 3713 0550 02       		.uleb128 0x2
 3714 0551 91       		.byte	0x91
 3715 0552 74       		.sleb128 -12
 3716 0553 1C       		.uleb128 0x1c
 3717 0554 8A010000 		.4byte	.LASF49
 3718 0558 01       		.byte	0x1
 3719 0559 0E01     		.2byte	0x10e
 3720 055b 68000000 		.4byte	0x68
 3721 055f 02       		.uleb128 0x2
 3722 0560 91       		.byte	0x91
 3723 0561 70       		.sleb128 -16
 3724 0562 1C       		.uleb128 0x1c
 3725 0563 A1030000 		.4byte	.LASF60
 3726 0567 01       		.byte	0x1
 3727 0568 0F01     		.2byte	0x10f
 3728 056a 68000000 		.4byte	0x68
 3729 056e 02       		.uleb128 0x2
 3730 056f 91       		.byte	0x91
 3731 0570 6C       		.sleb128 -20
 3732 0571 1C       		.uleb128 0x1c
 3733 0572 60020000 		.4byte	.LASF61
 3734 0576 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 77


 3735 0577 1001     		.2byte	0x110
 3736 0579 68000000 		.4byte	0x68
 3737 057d 02       		.uleb128 0x2
 3738 057e 91       		.byte	0x91
 3739 057f 60       		.sleb128 -32
 3740 0580 0D       		.uleb128 0xd
 3741 0581 2E000000 		.4byte	.LBB18
 3742 0585 5A030000 		.4byte	.LBE18-.LBB18
 3743 0589 1C       		.uleb128 0x1c
 3744 058a 1B030000 		.4byte	.LASF62
 3745 058e 01       		.byte	0x1
 3746 058f 1601     		.2byte	0x116
 3747 0591 96000000 		.4byte	0x96
 3748 0595 02       		.uleb128 0x2
 3749 0596 91       		.byte	0x91
 3750 0597 6B       		.sleb128 -21
 3751 0598 1C       		.uleb128 0x1c
 3752 0599 C9040000 		.4byte	.LASF63
 3753 059d 01       		.byte	0x1
 3754 059e 1701     		.2byte	0x117
 3755 05a0 68000000 		.4byte	0x68
 3756 05a4 02       		.uleb128 0x2
 3757 05a5 91       		.byte	0x91
 3758 05a6 64       		.sleb128 -28
 3759 05a7 00       		.byte	0
 3760 05a8 00       		.byte	0
 3761 05a9 11       		.uleb128 0x11
 3762 05aa 04       		.byte	0x4
 3763 05ab 2A010000 		.4byte	0x12a
 3764 05af 1D       		.uleb128 0x1d
 3765 05b0 D9020000 		.4byte	.LASF64
 3766 05b4 01       		.byte	0x1
 3767 05b5 AB01     		.2byte	0x1ab
 3768 05b7 A9050000 		.4byte	0x5a9
 3769 05bb 00000000 		.4byte	.LFB6
 3770 05bf 90000000 		.4byte	.LFE6-.LFB6
 3771 05c3 01       		.uleb128 0x1
 3772 05c4 9C       		.byte	0x9c
 3773 05c5 F0050000 		.4byte	0x5f0
 3774 05c9 1B       		.uleb128 0x1b
 3775 05ca 00040000 		.4byte	.LASF65
 3776 05ce 01       		.byte	0x1
 3777 05cf AB01     		.2byte	0x1ab
 3778 05d1 68000000 		.4byte	0x68
 3779 05d5 02       		.uleb128 0x2
 3780 05d6 91       		.byte	0x91
 3781 05d7 6C       		.sleb128 -20
 3782 05d8 0D       		.uleb128 0xd
 3783 05d9 08000000 		.4byte	.LBB19
 3784 05dd 76000000 		.4byte	.LBE19-.LBB19
 3785 05e1 1E       		.uleb128 0x1e
 3786 05e2 6900     		.ascii	"i\000"
 3787 05e4 01       		.byte	0x1
 3788 05e5 AD01     		.2byte	0x1ad
 3789 05e7 68000000 		.4byte	0x68
 3790 05eb 02       		.uleb128 0x2
 3791 05ec 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 78


 3792 05ed 74       		.sleb128 -12
 3793 05ee 00       		.byte	0
 3794 05ef 00       		.byte	0
 3795 05f0 1D       		.uleb128 0x1d
 3796 05f1 F1010000 		.4byte	.LASF66
 3797 05f5 01       		.byte	0x1
 3798 05f6 B701     		.2byte	0x1b7
 3799 05f8 8B000000 		.4byte	0x8b
 3800 05fc 00000000 		.4byte	.LFB7
 3801 0600 0C010000 		.4byte	.LFE7-.LFB7
 3802 0604 01       		.uleb128 0x1
 3803 0605 9C       		.byte	0x9c
 3804 0606 29060000 		.4byte	0x629
 3805 060a 1B       		.uleb128 0x1b
 3806 060b CE020000 		.4byte	.LASF48
 3807 060f 01       		.byte	0x1
 3808 0610 B701     		.2byte	0x1b7
 3809 0612 68000000 		.4byte	0x68
 3810 0616 02       		.uleb128 0x2
 3811 0617 91       		.byte	0x91
 3812 0618 74       		.sleb128 -12
 3813 0619 1B       		.uleb128 0x1b
 3814 061a 8A010000 		.4byte	.LASF49
 3815 061e 01       		.byte	0x1
 3816 061f B701     		.2byte	0x1b7
 3817 0621 68000000 		.4byte	0x68
 3818 0625 02       		.uleb128 0x2
 3819 0626 91       		.byte	0x91
 3820 0627 70       		.sleb128 -16
 3821 0628 00       		.byte	0
 3822 0629 1F       		.uleb128 0x1f
 3823 062a B4040000 		.4byte	.LASF67
 3824 062e 01       		.byte	0x1
 3825 062f C801     		.2byte	0x1c8
 3826 0631 00000000 		.4byte	.LFB8
 3827 0635 24010000 		.4byte	.LFE8-.LFB8
 3828 0639 01       		.uleb128 0x1
 3829 063a 9C       		.byte	0x9c
 3830 063b 6D060000 		.4byte	0x66d
 3831 063f 1B       		.uleb128 0x1b
 3832 0640 47040000 		.4byte	.LASF68
 3833 0644 01       		.byte	0x1
 3834 0645 C801     		.2byte	0x1c8
 3835 0647 D1000000 		.4byte	0xd1
 3836 064b 02       		.uleb128 0x2
 3837 064c 91       		.byte	0x91
 3838 064d 77       		.sleb128 -9
 3839 064e 1B       		.uleb128 0x1b
 3840 064f CE020000 		.4byte	.LASF48
 3841 0653 01       		.byte	0x1
 3842 0654 C801     		.2byte	0x1c8
 3843 0656 68000000 		.4byte	0x68
 3844 065a 02       		.uleb128 0x2
 3845 065b 91       		.byte	0x91
 3846 065c 70       		.sleb128 -16
 3847 065d 1B       		.uleb128 0x1b
 3848 065e 8A010000 		.4byte	.LASF49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 79


 3849 0662 01       		.byte	0x1
 3850 0663 C801     		.2byte	0x1c8
 3851 0665 68000000 		.4byte	0x68
 3852 0669 02       		.uleb128 0x2
 3853 066a 91       		.byte	0x91
 3854 066b 6C       		.sleb128 -20
 3855 066c 00       		.byte	0
 3856 066d 1D       		.uleb128 0x1d
 3857 066e 51030000 		.4byte	.LASF69
 3858 0672 01       		.byte	0x1
 3859 0673 FC01     		.2byte	0x1fc
 3860 0675 8B000000 		.4byte	0x8b
 3861 0679 00000000 		.4byte	.LFB9
 3862 067d 9C000000 		.4byte	.LFE9-.LFB9
 3863 0681 01       		.uleb128 0x1
 3864 0682 9C       		.byte	0x9c
 3865 0683 A6060000 		.4byte	0x6a6
 3866 0687 1B       		.uleb128 0x1b
 3867 0688 D6010000 		.4byte	.LASF70
 3868 068c 01       		.byte	0x1
 3869 068d FC01     		.2byte	0x1fc
 3870 068f 68000000 		.4byte	0x68
 3871 0693 02       		.uleb128 0x2
 3872 0694 91       		.byte	0x91
 3873 0695 74       		.sleb128 -12
 3874 0696 1B       		.uleb128 0x1b
 3875 0697 AA040000 		.4byte	.LASF71
 3876 069b 01       		.byte	0x1
 3877 069c FC01     		.2byte	0x1fc
 3878 069e 68000000 		.4byte	0x68
 3879 06a2 02       		.uleb128 0x2
 3880 06a3 91       		.byte	0x91
 3881 06a4 70       		.sleb128 -16
 3882 06a5 00       		.byte	0
 3883 06a6 20       		.uleb128 0x20
 3884 06a7 8D040000 		.4byte	.LASF72
 3885 06ab 01       		.byte	0x1
 3886 06ac 0B02     		.2byte	0x20b
 3887 06ae 68000000 		.4byte	0x68
 3888 06b2 00000000 		.4byte	.LFB10
 3889 06b6 44000000 		.4byte	.LFE10-.LFB10
 3890 06ba 01       		.uleb128 0x1
 3891 06bb 9C       		.byte	0x9c
 3892 06bc E7060000 		.4byte	0x6e7
 3893 06c0 1C       		.uleb128 0x1c
 3894 06c1 C8030000 		.4byte	.LASF73
 3895 06c5 01       		.byte	0x1
 3896 06c6 0C02     		.2byte	0x20c
 3897 06c8 68000000 		.4byte	0x68
 3898 06cc 02       		.uleb128 0x2
 3899 06cd 91       		.byte	0x91
 3900 06ce 74       		.sleb128 -12
 3901 06cf 0D       		.uleb128 0xd
 3902 06d0 06000000 		.4byte	.LBB20
 3903 06d4 2E000000 		.4byte	.LBE20-.LBB20
 3904 06d8 1E       		.uleb128 0x1e
 3905 06d9 6900     		.ascii	"i\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 80


 3906 06db 01       		.byte	0x1
 3907 06dc 0D02     		.2byte	0x20d
 3908 06de 68000000 		.4byte	0x68
 3909 06e2 02       		.uleb128 0x2
 3910 06e3 91       		.byte	0x91
 3911 06e4 70       		.sleb128 -16
 3912 06e5 00       		.byte	0
 3913 06e6 00       		.byte	0
 3914 06e7 21       		.uleb128 0x21
 3915 06e8 66030000 		.4byte	.LASF74
 3916 06ec 01       		.byte	0x1
 3917 06ed 1402     		.2byte	0x214
 3918 06ef 00000000 		.4byte	.LFB11
 3919 06f3 58000000 		.4byte	.LFE11-.LFB11
 3920 06f7 01       		.uleb128 0x1
 3921 06f8 9C       		.byte	0x9c
 3922 06f9 2B070000 		.4byte	0x72b
 3923 06fd 1A       		.uleb128 0x1a
 3924 06fe 6D617000 		.ascii	"map\000"
 3925 0702 01       		.byte	0x1
 3926 0703 1402     		.2byte	0x214
 3927 0705 BA010000 		.4byte	0x1ba
 3928 0709 02       		.uleb128 0x2
 3929 070a 91       		.byte	0x91
 3930 070b 64       		.sleb128 -28
 3931 070c 1B       		.uleb128 0x1b
 3932 070d 77040000 		.4byte	.LASF58
 3933 0711 01       		.byte	0x1
 3934 0712 1402     		.2byte	0x214
 3935 0714 35010000 		.4byte	0x135
 3936 0718 02       		.uleb128 0x2
 3937 0719 91       		.byte	0x91
 3938 071a 5C       		.sleb128 -36
 3939 071b 1B       		.uleb128 0x1b
 3940 071c 79030000 		.4byte	.LASF59
 3941 0720 01       		.byte	0x1
 3942 0721 1402     		.2byte	0x214
 3943 0723 35010000 		.4byte	0x135
 3944 0727 02       		.uleb128 0x2
 3945 0728 91       		.byte	0x91
 3946 0729 7C       		.sleb128 -4
 3947 072a 00       		.byte	0
 3948 072b 22       		.uleb128 0x22
 3949 072c 6D617000 		.ascii	"map\000"
 3950 0730 01       		.byte	0x1
 3951 0731 28       		.byte	0x28
 3952 0732 C1040000 		.4byte	0x4c1
 3953 0736 05       		.uleb128 0x5
 3954 0737 03       		.byte	0x3
 3955 0738 00000000 		.4byte	map
 3956 073c 0F       		.uleb128 0xf
 3957 073d 68000000 		.4byte	0x68
 3958 0741 52070000 		.4byte	0x752
 3959 0745 10       		.uleb128 0x10
 3960 0746 7D000000 		.4byte	0x7d
 3961 074a 04       		.byte	0x4
 3962 074b 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 81


 3963 074c 7D000000 		.4byte	0x7d
 3964 0750 01       		.byte	0x1
 3965 0751 00       		.byte	0
 3966 0752 23       		.uleb128 0x23
 3967 0753 06040000 		.4byte	.LASF75
 3968 0757 01       		.byte	0x1
 3969 0758 51       		.byte	0x51
 3970 0759 3C070000 		.4byte	0x73c
 3971 075d 05       		.uleb128 0x5
 3972 075e 03       		.byte	0x3
 3973 075f 00000000 		.4byte	food_list
 3974 0763 23       		.uleb128 0x23
 3975 0764 DE030000 		.4byte	.LASF76
 3976 0768 01       		.byte	0x1
 3977 0769 18       		.byte	0x18
 3978 076a D1000000 		.4byte	0xd1
 3979 076e 05       		.uleb128 0x5
 3980 076f 03       		.byte	0x3
 3981 0770 00000000 		.4byte	previousRobotOrientation
 3982 0774 23       		.uleb128 0x23
 3983 0775 15040000 		.4byte	.LASF77
 3984 0779 01       		.byte	0x1
 3985 077a 18       		.byte	0x18
 3986 077b D1000000 		.4byte	0xd1
 3987 077f 05       		.uleb128 0x5
 3988 0780 03       		.byte	0x3
 3989 0781 00000000 		.4byte	currentRobotOrientation
 3990 0785 0F       		.uleb128 0xf
 3991 0786 2A010000 		.4byte	0x12a
 3992 078a 96070000 		.4byte	0x796
 3993 078e 18       		.uleb128 0x18
 3994 078f 7D000000 		.4byte	0x7d
 3995 0793 1C01     		.2byte	0x11c
 3996 0795 00       		.byte	0
 3997 0796 23       		.uleb128 0x23
 3998 0797 E0010000 		.4byte	.LASF78
 3999 079b 01       		.byte	0x1
 4000 079c 1F       		.byte	0x1f
 4001 079d 85070000 		.4byte	0x785
 4002 07a1 05       		.uleb128 0x5
 4003 07a2 03       		.byte	0x3
 4004 07a3 00000000 		.4byte	instructionsList
 4005 07a7 23       		.uleb128 0x23
 4006 07a8 98030000 		.4byte	.LASF57
 4007 07ac 01       		.byte	0x1
 4008 07ad 20       		.byte	0x20
 4009 07ae 68000000 		.4byte	0x68
 4010 07b2 05       		.uleb128 0x5
 4011 07b3 03       		.byte	0x3
 4012 07b4 00000000 		.4byte	numSteps
 4013 07b8 0F       		.uleb128 0xf
 4014 07b9 68000000 		.4byte	0x68
 4015 07bd C8070000 		.4byte	0x7c8
 4016 07c1 10       		.uleb128 0x10
 4017 07c2 7D000000 		.4byte	0x7d
 4018 07c6 01       		.byte	0x1
 4019 07c7 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 82


 4020 07c8 23       		.uleb128 0x23
 4021 07c9 D4030000 		.4byte	.LASF79
 4022 07cd 01       		.byte	0x1
 4023 07ce 4F       		.byte	0x4f
 4024 07cf B8070000 		.4byte	0x7b8
 4025 07d3 05       		.uleb128 0x5
 4026 07d4 03       		.byte	0x3
 4027 07d5 00000000 		.4byte	start_pos
 4028 07d9 0F       		.uleb128 0xf
 4029 07da 68000000 		.4byte	0x68
 4030 07de F0070000 		.4byte	0x7f0
 4031 07e2 18       		.uleb128 0x18
 4032 07e3 7D000000 		.4byte	0x7d
 4033 07e7 1C01     		.2byte	0x11c
 4034 07e9 10       		.uleb128 0x10
 4035 07ea 7D000000 		.4byte	0x7d
 4036 07ee 01       		.byte	0x1
 4037 07ef 00       		.byte	0
 4038 07f0 23       		.uleb128 0x23
 4039 07f1 4C020000 		.4byte	.LASF80
 4040 07f5 01       		.byte	0x1
 4041 07f6 59       		.byte	0x59
 4042 07f7 D9070000 		.4byte	0x7d9
 4043 07fb 05       		.uleb128 0x5
 4044 07fc 03       		.byte	0x3
 4045 07fd 00000000 		.4byte	path_of_coordinates
 4046 0801 23       		.uleb128 0x23
 4047 0802 04020000 		.4byte	.LASF81
 4048 0806 01       		.byte	0x1
 4049 0807 7E       		.byte	0x7e
 4050 0808 D9070000 		.4byte	0x7d9
 4051 080c 05       		.uleb128 0x5
 4052 080d 03       		.byte	0x3
 4053 080e 00000000 		.4byte	list_of_optimal_coordinates
 4054 0812 0F       		.uleb128 0xf
 4055 0813 35010000 		.4byte	0x135
 4056 0817 22080000 		.4byte	0x822
 4057 081b 10       		.uleb128 0x10
 4058 081c 7D000000 		.4byte	0x7d
 4059 0820 03       		.byte	0x3
 4060 0821 00       		.byte	0
 4061 0822 23       		.uleb128 0x23
 4062 0823 A4040000 		.4byte	.LASF82
 4063 0827 01       		.byte	0x1
 4064 0828 80       		.byte	0x80
 4065 0829 12080000 		.4byte	0x812
 4066 082d 05       		.uleb128 0x5
 4067 082e 03       		.byte	0x3
 4068 082f 00000000 		.4byte	moves
 4069 0833 24       		.uleb128 0x24
 4070 0834 DA040000 		.4byte	.LASF28
 4071 0838 01       		.byte	0x1
 4072 0839 0901     		.2byte	0x109
 4073 083b 68000000 		.4byte	0x68
 4074 083f 05       		.uleb128 0x5
 4075 0840 03       		.byte	0x3
 4076 0841 00000000 		.4byte	ignoreR
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 83


 4077 0845 24       		.uleb128 0x24
 4078 0846 D2040000 		.4byte	.LASF27
 4079 084a 01       		.byte	0x1
 4080 084b 0901     		.2byte	0x109
 4081 084d 68000000 		.4byte	0x68
 4082 0851 05       		.uleb128 0x5
 4083 0852 03       		.byte	0x3
 4084 0853 00000000 		.4byte	ignoreL
 4085 0857 00       		.byte	0
 4086              		.section	.debug_abbrev,"",%progbits
 4087              	.Ldebug_abbrev0:
 4088 0000 01       		.uleb128 0x1
 4089 0001 11       		.uleb128 0x11
 4090 0002 01       		.byte	0x1
 4091 0003 25       		.uleb128 0x25
 4092 0004 0E       		.uleb128 0xe
 4093 0005 13       		.uleb128 0x13
 4094 0006 0B       		.uleb128 0xb
 4095 0007 03       		.uleb128 0x3
 4096 0008 0E       		.uleb128 0xe
 4097 0009 1B       		.uleb128 0x1b
 4098 000a 0E       		.uleb128 0xe
 4099 000b 55       		.uleb128 0x55
 4100 000c 17       		.uleb128 0x17
 4101 000d 11       		.uleb128 0x11
 4102 000e 01       		.uleb128 0x1
 4103 000f 10       		.uleb128 0x10
 4104 0010 17       		.uleb128 0x17
 4105 0011 00       		.byte	0
 4106 0012 00       		.byte	0
 4107 0013 02       		.uleb128 0x2
 4108 0014 24       		.uleb128 0x24
 4109 0015 00       		.byte	0
 4110 0016 0B       		.uleb128 0xb
 4111 0017 0B       		.uleb128 0xb
 4112 0018 3E       		.uleb128 0x3e
 4113 0019 0B       		.uleb128 0xb
 4114 001a 03       		.uleb128 0x3
 4115 001b 0E       		.uleb128 0xe
 4116 001c 00       		.byte	0
 4117 001d 00       		.byte	0
 4118 001e 03       		.uleb128 0x3
 4119 001f 16       		.uleb128 0x16
 4120 0020 00       		.byte	0
 4121 0021 03       		.uleb128 0x3
 4122 0022 0E       		.uleb128 0xe
 4123 0023 3A       		.uleb128 0x3a
 4124 0024 0B       		.uleb128 0xb
 4125 0025 3B       		.uleb128 0x3b
 4126 0026 0B       		.uleb128 0xb
 4127 0027 49       		.uleb128 0x49
 4128 0028 13       		.uleb128 0x13
 4129 0029 00       		.byte	0
 4130 002a 00       		.byte	0
 4131 002b 04       		.uleb128 0x4
 4132 002c 24       		.uleb128 0x24
 4133 002d 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 84


 4134 002e 0B       		.uleb128 0xb
 4135 002f 0B       		.uleb128 0xb
 4136 0030 3E       		.uleb128 0x3e
 4137 0031 0B       		.uleb128 0xb
 4138 0032 03       		.uleb128 0x3
 4139 0033 08       		.uleb128 0x8
 4140 0034 00       		.byte	0
 4141 0035 00       		.byte	0
 4142 0036 05       		.uleb128 0x5
 4143 0037 04       		.uleb128 0x4
 4144 0038 01       		.byte	0x1
 4145 0039 03       		.uleb128 0x3
 4146 003a 0E       		.uleb128 0xe
 4147 003b 0B       		.uleb128 0xb
 4148 003c 0B       		.uleb128 0xb
 4149 003d 49       		.uleb128 0x49
 4150 003e 13       		.uleb128 0x13
 4151 003f 3A       		.uleb128 0x3a
 4152 0040 0B       		.uleb128 0xb
 4153 0041 3B       		.uleb128 0x3b
 4154 0042 0B       		.uleb128 0xb
 4155 0043 01       		.uleb128 0x1
 4156 0044 13       		.uleb128 0x13
 4157 0045 00       		.byte	0
 4158 0046 00       		.byte	0
 4159 0047 06       		.uleb128 0x6
 4160 0048 28       		.uleb128 0x28
 4161 0049 00       		.byte	0
 4162 004a 03       		.uleb128 0x3
 4163 004b 0E       		.uleb128 0xe
 4164 004c 1C       		.uleb128 0x1c
 4165 004d 0B       		.uleb128 0xb
 4166 004e 00       		.byte	0
 4167 004f 00       		.byte	0
 4168 0050 07       		.uleb128 0x7
 4169 0051 28       		.uleb128 0x28
 4170 0052 00       		.byte	0
 4171 0053 03       		.uleb128 0x3
 4172 0054 08       		.uleb128 0x8
 4173 0055 1C       		.uleb128 0x1c
 4174 0056 0B       		.uleb128 0xb
 4175 0057 00       		.byte	0
 4176 0058 00       		.byte	0
 4177 0059 08       		.uleb128 0x8
 4178 005a 13       		.uleb128 0x13
 4179 005b 01       		.byte	0x1
 4180 005c 03       		.uleb128 0x3
 4181 005d 0E       		.uleb128 0xe
 4182 005e 0B       		.uleb128 0xb
 4183 005f 0B       		.uleb128 0xb
 4184 0060 3A       		.uleb128 0x3a
 4185 0061 0B       		.uleb128 0xb
 4186 0062 3B       		.uleb128 0x3b
 4187 0063 0B       		.uleb128 0xb
 4188 0064 01       		.uleb128 0x1
 4189 0065 13       		.uleb128 0x13
 4190 0066 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 85


 4191 0067 00       		.byte	0
 4192 0068 09       		.uleb128 0x9
 4193 0069 0D       		.uleb128 0xd
 4194 006a 00       		.byte	0
 4195 006b 03       		.uleb128 0x3
 4196 006c 0E       		.uleb128 0xe
 4197 006d 3A       		.uleb128 0x3a
 4198 006e 0B       		.uleb128 0xb
 4199 006f 3B       		.uleb128 0x3b
 4200 0070 0B       		.uleb128 0xb
 4201 0071 49       		.uleb128 0x49
 4202 0072 13       		.uleb128 0x13
 4203 0073 38       		.uleb128 0x38
 4204 0074 0B       		.uleb128 0xb
 4205 0075 00       		.byte	0
 4206 0076 00       		.byte	0
 4207 0077 0A       		.uleb128 0xa
 4208 0078 0D       		.uleb128 0xd
 4209 0079 00       		.byte	0
 4210 007a 03       		.uleb128 0x3
 4211 007b 08       		.uleb128 0x8
 4212 007c 3A       		.uleb128 0x3a
 4213 007d 0B       		.uleb128 0xb
 4214 007e 3B       		.uleb128 0x3b
 4215 007f 0B       		.uleb128 0xb
 4216 0080 49       		.uleb128 0x49
 4217 0081 13       		.uleb128 0x13
 4218 0082 38       		.uleb128 0x38
 4219 0083 0B       		.uleb128 0xb
 4220 0084 00       		.byte	0
 4221 0085 00       		.byte	0
 4222 0086 0B       		.uleb128 0xb
 4223 0087 2E       		.uleb128 0x2e
 4224 0088 01       		.byte	0x1
 4225 0089 3F       		.uleb128 0x3f
 4226 008a 19       		.uleb128 0x19
 4227 008b 03       		.uleb128 0x3
 4228 008c 0E       		.uleb128 0xe
 4229 008d 3A       		.uleb128 0x3a
 4230 008e 0B       		.uleb128 0xb
 4231 008f 3B       		.uleb128 0x3b
 4232 0090 0B       		.uleb128 0xb
 4233 0091 27       		.uleb128 0x27
 4234 0092 19       		.uleb128 0x19
 4235 0093 11       		.uleb128 0x11
 4236 0094 01       		.uleb128 0x1
 4237 0095 12       		.uleb128 0x12
 4238 0096 06       		.uleb128 0x6
 4239 0097 40       		.uleb128 0x40
 4240 0098 18       		.uleb128 0x18
 4241 0099 9642     		.uleb128 0x2116
 4242 009b 19       		.uleb128 0x19
 4243 009c 01       		.uleb128 0x1
 4244 009d 13       		.uleb128 0x13
 4245 009e 00       		.byte	0
 4246 009f 00       		.byte	0
 4247 00a0 0C       		.uleb128 0xc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 86


 4248 00a1 05       		.uleb128 0x5
 4249 00a2 00       		.byte	0
 4250 00a3 03       		.uleb128 0x3
 4251 00a4 08       		.uleb128 0x8
 4252 00a5 3A       		.uleb128 0x3a
 4253 00a6 0B       		.uleb128 0xb
 4254 00a7 3B       		.uleb128 0x3b
 4255 00a8 0B       		.uleb128 0xb
 4256 00a9 49       		.uleb128 0x49
 4257 00aa 13       		.uleb128 0x13
 4258 00ab 02       		.uleb128 0x2
 4259 00ac 18       		.uleb128 0x18
 4260 00ad 00       		.byte	0
 4261 00ae 00       		.byte	0
 4262 00af 0D       		.uleb128 0xd
 4263 00b0 0B       		.uleb128 0xb
 4264 00b1 01       		.byte	0x1
 4265 00b2 11       		.uleb128 0x11
 4266 00b3 01       		.uleb128 0x1
 4267 00b4 12       		.uleb128 0x12
 4268 00b5 06       		.uleb128 0x6
 4269 00b6 00       		.byte	0
 4270 00b7 00       		.byte	0
 4271 00b8 0E       		.uleb128 0xe
 4272 00b9 34       		.uleb128 0x34
 4273 00ba 00       		.byte	0
 4274 00bb 03       		.uleb128 0x3
 4275 00bc 08       		.uleb128 0x8
 4276 00bd 3A       		.uleb128 0x3a
 4277 00be 0B       		.uleb128 0xb
 4278 00bf 3B       		.uleb128 0x3b
 4279 00c0 0B       		.uleb128 0xb
 4280 00c1 49       		.uleb128 0x49
 4281 00c2 13       		.uleb128 0x13
 4282 00c3 02       		.uleb128 0x2
 4283 00c4 18       		.uleb128 0x18
 4284 00c5 00       		.byte	0
 4285 00c6 00       		.byte	0
 4286 00c7 0F       		.uleb128 0xf
 4287 00c8 01       		.uleb128 0x1
 4288 00c9 01       		.byte	0x1
 4289 00ca 49       		.uleb128 0x49
 4290 00cb 13       		.uleb128 0x13
 4291 00cc 01       		.uleb128 0x1
 4292 00cd 13       		.uleb128 0x13
 4293 00ce 00       		.byte	0
 4294 00cf 00       		.byte	0
 4295 00d0 10       		.uleb128 0x10
 4296 00d1 21       		.uleb128 0x21
 4297 00d2 00       		.byte	0
 4298 00d3 49       		.uleb128 0x49
 4299 00d4 13       		.uleb128 0x13
 4300 00d5 2F       		.uleb128 0x2f
 4301 00d6 0B       		.uleb128 0xb
 4302 00d7 00       		.byte	0
 4303 00d8 00       		.byte	0
 4304 00d9 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 87


 4305 00da 0F       		.uleb128 0xf
 4306 00db 00       		.byte	0
 4307 00dc 0B       		.uleb128 0xb
 4308 00dd 0B       		.uleb128 0xb
 4309 00de 49       		.uleb128 0x49
 4310 00df 13       		.uleb128 0x13
 4311 00e0 00       		.byte	0
 4312 00e1 00       		.byte	0
 4313 00e2 12       		.uleb128 0x12
 4314 00e3 2E       		.uleb128 0x2e
 4315 00e4 01       		.byte	0x1
 4316 00e5 3F       		.uleb128 0x3f
 4317 00e6 19       		.uleb128 0x19
 4318 00e7 03       		.uleb128 0x3
 4319 00e8 0E       		.uleb128 0xe
 4320 00e9 3A       		.uleb128 0x3a
 4321 00ea 0B       		.uleb128 0xb
 4322 00eb 3B       		.uleb128 0x3b
 4323 00ec 0B       		.uleb128 0xb
 4324 00ed 27       		.uleb128 0x27
 4325 00ee 19       		.uleb128 0x19
 4326 00ef 11       		.uleb128 0x11
 4327 00f0 01       		.uleb128 0x1
 4328 00f1 12       		.uleb128 0x12
 4329 00f2 06       		.uleb128 0x6
 4330 00f3 40       		.uleb128 0x40
 4331 00f4 18       		.uleb128 0x18
 4332 00f5 9742     		.uleb128 0x2117
 4333 00f7 19       		.uleb128 0x19
 4334 00f8 01       		.uleb128 0x1
 4335 00f9 13       		.uleb128 0x13
 4336 00fa 00       		.byte	0
 4337 00fb 00       		.byte	0
 4338 00fc 13       		.uleb128 0x13
 4339 00fd 2E       		.uleb128 0x2e
 4340 00fe 01       		.byte	0x1
 4341 00ff 3F       		.uleb128 0x3f
 4342 0100 19       		.uleb128 0x19
 4343 0101 03       		.uleb128 0x3
 4344 0102 0E       		.uleb128 0xe
 4345 0103 3A       		.uleb128 0x3a
 4346 0104 0B       		.uleb128 0xb
 4347 0105 3B       		.uleb128 0x3b
 4348 0106 0B       		.uleb128 0xb
 4349 0107 27       		.uleb128 0x27
 4350 0108 19       		.uleb128 0x19
 4351 0109 49       		.uleb128 0x49
 4352 010a 13       		.uleb128 0x13
 4353 010b 11       		.uleb128 0x11
 4354 010c 01       		.uleb128 0x1
 4355 010d 12       		.uleb128 0x12
 4356 010e 06       		.uleb128 0x6
 4357 010f 40       		.uleb128 0x40
 4358 0110 18       		.uleb128 0x18
 4359 0111 9742     		.uleb128 0x2117
 4360 0113 19       		.uleb128 0x19
 4361 0114 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 88


 4362 0115 13       		.uleb128 0x13
 4363 0116 00       		.byte	0
 4364 0117 00       		.byte	0
 4365 0118 14       		.uleb128 0x14
 4366 0119 05       		.uleb128 0x5
 4367 011a 00       		.byte	0
 4368 011b 03       		.uleb128 0x3
 4369 011c 0E       		.uleb128 0xe
 4370 011d 3A       		.uleb128 0x3a
 4371 011e 0B       		.uleb128 0xb
 4372 011f 3B       		.uleb128 0x3b
 4373 0120 0B       		.uleb128 0xb
 4374 0121 49       		.uleb128 0x49
 4375 0122 13       		.uleb128 0x13
 4376 0123 02       		.uleb128 0x2
 4377 0124 18       		.uleb128 0x18
 4378 0125 00       		.byte	0
 4379 0126 00       		.byte	0
 4380 0127 15       		.uleb128 0x15
 4381 0128 34       		.uleb128 0x34
 4382 0129 00       		.byte	0
 4383 012a 03       		.uleb128 0x3
 4384 012b 0E       		.uleb128 0xe
 4385 012c 3A       		.uleb128 0x3a
 4386 012d 0B       		.uleb128 0xb
 4387 012e 3B       		.uleb128 0x3b
 4388 012f 0B       		.uleb128 0xb
 4389 0130 49       		.uleb128 0x49
 4390 0131 13       		.uleb128 0x13
 4391 0132 02       		.uleb128 0x2
 4392 0133 18       		.uleb128 0x18
 4393 0134 00       		.byte	0
 4394 0135 00       		.byte	0
 4395 0136 16       		.uleb128 0x16
 4396 0137 0B       		.uleb128 0xb
 4397 0138 01       		.byte	0x1
 4398 0139 11       		.uleb128 0x11
 4399 013a 01       		.uleb128 0x1
 4400 013b 12       		.uleb128 0x12
 4401 013c 06       		.uleb128 0x6
 4402 013d 01       		.uleb128 0x1
 4403 013e 13       		.uleb128 0x13
 4404 013f 00       		.byte	0
 4405 0140 00       		.byte	0
 4406 0141 17       		.uleb128 0x17
 4407 0142 0B       		.uleb128 0xb
 4408 0143 01       		.byte	0x1
 4409 0144 55       		.uleb128 0x55
 4410 0145 17       		.uleb128 0x17
 4411 0146 01       		.uleb128 0x1
 4412 0147 13       		.uleb128 0x13
 4413 0148 00       		.byte	0
 4414 0149 00       		.byte	0
 4415 014a 18       		.uleb128 0x18
 4416 014b 21       		.uleb128 0x21
 4417 014c 00       		.byte	0
 4418 014d 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 89


 4419 014e 13       		.uleb128 0x13
 4420 014f 2F       		.uleb128 0x2f
 4421 0150 05       		.uleb128 0x5
 4422 0151 00       		.byte	0
 4423 0152 00       		.byte	0
 4424 0153 19       		.uleb128 0x19
 4425 0154 2E       		.uleb128 0x2e
 4426 0155 01       		.byte	0x1
 4427 0156 3F       		.uleb128 0x3f
 4428 0157 19       		.uleb128 0x19
 4429 0158 03       		.uleb128 0x3
 4430 0159 0E       		.uleb128 0xe
 4431 015a 3A       		.uleb128 0x3a
 4432 015b 0B       		.uleb128 0xb
 4433 015c 3B       		.uleb128 0x3b
 4434 015d 05       		.uleb128 0x5
 4435 015e 27       		.uleb128 0x27
 4436 015f 19       		.uleb128 0x19
 4437 0160 49       		.uleb128 0x49
 4438 0161 13       		.uleb128 0x13
 4439 0162 11       		.uleb128 0x11
 4440 0163 01       		.uleb128 0x1
 4441 0164 12       		.uleb128 0x12
 4442 0165 06       		.uleb128 0x6
 4443 0166 40       		.uleb128 0x40
 4444 0167 18       		.uleb128 0x18
 4445 0168 9642     		.uleb128 0x2116
 4446 016a 19       		.uleb128 0x19
 4447 016b 01       		.uleb128 0x1
 4448 016c 13       		.uleb128 0x13
 4449 016d 00       		.byte	0
 4450 016e 00       		.byte	0
 4451 016f 1A       		.uleb128 0x1a
 4452 0170 05       		.uleb128 0x5
 4453 0171 00       		.byte	0
 4454 0172 03       		.uleb128 0x3
 4455 0173 08       		.uleb128 0x8
 4456 0174 3A       		.uleb128 0x3a
 4457 0175 0B       		.uleb128 0xb
 4458 0176 3B       		.uleb128 0x3b
 4459 0177 05       		.uleb128 0x5
 4460 0178 49       		.uleb128 0x49
 4461 0179 13       		.uleb128 0x13
 4462 017a 02       		.uleb128 0x2
 4463 017b 18       		.uleb128 0x18
 4464 017c 00       		.byte	0
 4465 017d 00       		.byte	0
 4466 017e 1B       		.uleb128 0x1b
 4467 017f 05       		.uleb128 0x5
 4468 0180 00       		.byte	0
 4469 0181 03       		.uleb128 0x3
 4470 0182 0E       		.uleb128 0xe
 4471 0183 3A       		.uleb128 0x3a
 4472 0184 0B       		.uleb128 0xb
 4473 0185 3B       		.uleb128 0x3b
 4474 0186 05       		.uleb128 0x5
 4475 0187 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 90


 4476 0188 13       		.uleb128 0x13
 4477 0189 02       		.uleb128 0x2
 4478 018a 18       		.uleb128 0x18
 4479 018b 00       		.byte	0
 4480 018c 00       		.byte	0
 4481 018d 1C       		.uleb128 0x1c
 4482 018e 34       		.uleb128 0x34
 4483 018f 00       		.byte	0
 4484 0190 03       		.uleb128 0x3
 4485 0191 0E       		.uleb128 0xe
 4486 0192 3A       		.uleb128 0x3a
 4487 0193 0B       		.uleb128 0xb
 4488 0194 3B       		.uleb128 0x3b
 4489 0195 05       		.uleb128 0x5
 4490 0196 49       		.uleb128 0x49
 4491 0197 13       		.uleb128 0x13
 4492 0198 02       		.uleb128 0x2
 4493 0199 18       		.uleb128 0x18
 4494 019a 00       		.byte	0
 4495 019b 00       		.byte	0
 4496 019c 1D       		.uleb128 0x1d
 4497 019d 2E       		.uleb128 0x2e
 4498 019e 01       		.byte	0x1
 4499 019f 3F       		.uleb128 0x3f
 4500 01a0 19       		.uleb128 0x19
 4501 01a1 03       		.uleb128 0x3
 4502 01a2 0E       		.uleb128 0xe
 4503 01a3 3A       		.uleb128 0x3a
 4504 01a4 0B       		.uleb128 0xb
 4505 01a5 3B       		.uleb128 0x3b
 4506 01a6 05       		.uleb128 0x5
 4507 01a7 27       		.uleb128 0x27
 4508 01a8 19       		.uleb128 0x19
 4509 01a9 49       		.uleb128 0x49
 4510 01aa 13       		.uleb128 0x13
 4511 01ab 11       		.uleb128 0x11
 4512 01ac 01       		.uleb128 0x1
 4513 01ad 12       		.uleb128 0x12
 4514 01ae 06       		.uleb128 0x6
 4515 01af 40       		.uleb128 0x40
 4516 01b0 18       		.uleb128 0x18
 4517 01b1 9742     		.uleb128 0x2117
 4518 01b3 19       		.uleb128 0x19
 4519 01b4 01       		.uleb128 0x1
 4520 01b5 13       		.uleb128 0x13
 4521 01b6 00       		.byte	0
 4522 01b7 00       		.byte	0
 4523 01b8 1E       		.uleb128 0x1e
 4524 01b9 34       		.uleb128 0x34
 4525 01ba 00       		.byte	0
 4526 01bb 03       		.uleb128 0x3
 4527 01bc 08       		.uleb128 0x8
 4528 01bd 3A       		.uleb128 0x3a
 4529 01be 0B       		.uleb128 0xb
 4530 01bf 3B       		.uleb128 0x3b
 4531 01c0 05       		.uleb128 0x5
 4532 01c1 49       		.uleb128 0x49
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 91


 4533 01c2 13       		.uleb128 0x13
 4534 01c3 02       		.uleb128 0x2
 4535 01c4 18       		.uleb128 0x18
 4536 01c5 00       		.byte	0
 4537 01c6 00       		.byte	0
 4538 01c7 1F       		.uleb128 0x1f
 4539 01c8 2E       		.uleb128 0x2e
 4540 01c9 01       		.byte	0x1
 4541 01ca 3F       		.uleb128 0x3f
 4542 01cb 19       		.uleb128 0x19
 4543 01cc 03       		.uleb128 0x3
 4544 01cd 0E       		.uleb128 0xe
 4545 01ce 3A       		.uleb128 0x3a
 4546 01cf 0B       		.uleb128 0xb
 4547 01d0 3B       		.uleb128 0x3b
 4548 01d1 05       		.uleb128 0x5
 4549 01d2 27       		.uleb128 0x27
 4550 01d3 19       		.uleb128 0x19
 4551 01d4 11       		.uleb128 0x11
 4552 01d5 01       		.uleb128 0x1
 4553 01d6 12       		.uleb128 0x12
 4554 01d7 06       		.uleb128 0x6
 4555 01d8 40       		.uleb128 0x40
 4556 01d9 18       		.uleb128 0x18
 4557 01da 9742     		.uleb128 0x2117
 4558 01dc 19       		.uleb128 0x19
 4559 01dd 01       		.uleb128 0x1
 4560 01de 13       		.uleb128 0x13
 4561 01df 00       		.byte	0
 4562 01e0 00       		.byte	0
 4563 01e1 20       		.uleb128 0x20
 4564 01e2 2E       		.uleb128 0x2e
 4565 01e3 01       		.byte	0x1
 4566 01e4 3F       		.uleb128 0x3f
 4567 01e5 19       		.uleb128 0x19
 4568 01e6 03       		.uleb128 0x3
 4569 01e7 0E       		.uleb128 0xe
 4570 01e8 3A       		.uleb128 0x3a
 4571 01e9 0B       		.uleb128 0xb
 4572 01ea 3B       		.uleb128 0x3b
 4573 01eb 05       		.uleb128 0x5
 4574 01ec 49       		.uleb128 0x49
 4575 01ed 13       		.uleb128 0x13
 4576 01ee 11       		.uleb128 0x11
 4577 01ef 01       		.uleb128 0x1
 4578 01f0 12       		.uleb128 0x12
 4579 01f1 06       		.uleb128 0x6
 4580 01f2 40       		.uleb128 0x40
 4581 01f3 18       		.uleb128 0x18
 4582 01f4 9742     		.uleb128 0x2117
 4583 01f6 19       		.uleb128 0x19
 4584 01f7 01       		.uleb128 0x1
 4585 01f8 13       		.uleb128 0x13
 4586 01f9 00       		.byte	0
 4587 01fa 00       		.byte	0
 4588 01fb 21       		.uleb128 0x21
 4589 01fc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 92


 4590 01fd 01       		.byte	0x1
 4591 01fe 3F       		.uleb128 0x3f
 4592 01ff 19       		.uleb128 0x19
 4593 0200 03       		.uleb128 0x3
 4594 0201 0E       		.uleb128 0xe
 4595 0202 3A       		.uleb128 0x3a
 4596 0203 0B       		.uleb128 0xb
 4597 0204 3B       		.uleb128 0x3b
 4598 0205 05       		.uleb128 0x5
 4599 0206 27       		.uleb128 0x27
 4600 0207 19       		.uleb128 0x19
 4601 0208 11       		.uleb128 0x11
 4602 0209 01       		.uleb128 0x1
 4603 020a 12       		.uleb128 0x12
 4604 020b 06       		.uleb128 0x6
 4605 020c 40       		.uleb128 0x40
 4606 020d 18       		.uleb128 0x18
 4607 020e 9642     		.uleb128 0x2116
 4608 0210 19       		.uleb128 0x19
 4609 0211 01       		.uleb128 0x1
 4610 0212 13       		.uleb128 0x13
 4611 0213 00       		.byte	0
 4612 0214 00       		.byte	0
 4613 0215 22       		.uleb128 0x22
 4614 0216 34       		.uleb128 0x34
 4615 0217 00       		.byte	0
 4616 0218 03       		.uleb128 0x3
 4617 0219 08       		.uleb128 0x8
 4618 021a 3A       		.uleb128 0x3a
 4619 021b 0B       		.uleb128 0xb
 4620 021c 3B       		.uleb128 0x3b
 4621 021d 0B       		.uleb128 0xb
 4622 021e 49       		.uleb128 0x49
 4623 021f 13       		.uleb128 0x13
 4624 0220 3F       		.uleb128 0x3f
 4625 0221 19       		.uleb128 0x19
 4626 0222 02       		.uleb128 0x2
 4627 0223 18       		.uleb128 0x18
 4628 0224 00       		.byte	0
 4629 0225 00       		.byte	0
 4630 0226 23       		.uleb128 0x23
 4631 0227 34       		.uleb128 0x34
 4632 0228 00       		.byte	0
 4633 0229 03       		.uleb128 0x3
 4634 022a 0E       		.uleb128 0xe
 4635 022b 3A       		.uleb128 0x3a
 4636 022c 0B       		.uleb128 0xb
 4637 022d 3B       		.uleb128 0x3b
 4638 022e 0B       		.uleb128 0xb
 4639 022f 49       		.uleb128 0x49
 4640 0230 13       		.uleb128 0x13
 4641 0231 3F       		.uleb128 0x3f
 4642 0232 19       		.uleb128 0x19
 4643 0233 02       		.uleb128 0x2
 4644 0234 18       		.uleb128 0x18
 4645 0235 00       		.byte	0
 4646 0236 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 93


 4647 0237 24       		.uleb128 0x24
 4648 0238 34       		.uleb128 0x34
 4649 0239 00       		.byte	0
 4650 023a 03       		.uleb128 0x3
 4651 023b 0E       		.uleb128 0xe
 4652 023c 3A       		.uleb128 0x3a
 4653 023d 0B       		.uleb128 0xb
 4654 023e 3B       		.uleb128 0x3b
 4655 023f 05       		.uleb128 0x5
 4656 0240 49       		.uleb128 0x49
 4657 0241 13       		.uleb128 0x13
 4658 0242 3F       		.uleb128 0x3f
 4659 0243 19       		.uleb128 0x19
 4660 0244 02       		.uleb128 0x2
 4661 0245 18       		.uleb128 0x18
 4662 0246 00       		.byte	0
 4663 0247 00       		.byte	0
 4664 0248 00       		.byte	0
 4665              		.section	.debug_aranges,"",%progbits
 4666 0000 6C000000 		.4byte	0x6c
 4667 0004 0200     		.2byte	0x2
 4668 0006 00000000 		.4byte	.Ldebug_info0
 4669 000a 04       		.byte	0x4
 4670 000b 00       		.byte	0
 4671 000c 0000     		.2byte	0
 4672 000e 0000     		.2byte	0
 4673 0010 00000000 		.4byte	.LFB1
 4674 0014 58000000 		.4byte	.LFE1-.LFB1
 4675 0018 00000000 		.4byte	.LFB2
 4676 001c 60000000 		.4byte	.LFE2-.LFB2
 4677 0020 00000000 		.4byte	.LFB3
 4678 0024 56000000 		.4byte	.LFE3-.LFB3
 4679 0028 00000000 		.4byte	.LFB4
 4680 002c 4C090000 		.4byte	.LFE4-.LFB4
 4681 0030 00000000 		.4byte	.LFB5
 4682 0034 C8030000 		.4byte	.LFE5-.LFB5
 4683 0038 00000000 		.4byte	.LFB6
 4684 003c 90000000 		.4byte	.LFE6-.LFB6
 4685 0040 00000000 		.4byte	.LFB7
 4686 0044 0C010000 		.4byte	.LFE7-.LFB7
 4687 0048 00000000 		.4byte	.LFB8
 4688 004c 24010000 		.4byte	.LFE8-.LFB8
 4689 0050 00000000 		.4byte	.LFB9
 4690 0054 9C000000 		.4byte	.LFE9-.LFB9
 4691 0058 00000000 		.4byte	.LFB10
 4692 005c 44000000 		.4byte	.LFE10-.LFB10
 4693 0060 00000000 		.4byte	.LFB11
 4694 0064 58000000 		.4byte	.LFE11-.LFB11
 4695 0068 00000000 		.4byte	0
 4696 006c 00000000 		.4byte	0
 4697              		.section	.debug_ranges,"",%progbits
 4698              	.Ldebug_ranges0:
 4699 0000 F6010000 		.4byte	.LBB10
 4700 0004 E2050000 		.4byte	.LBE10
 4701 0008 F4050000 		.4byte	.LBB15
 4702 000c F6050000 		.4byte	.LBE15
 4703 0010 00000000 		.4byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 94


 4704 0014 00000000 		.4byte	0
 4705 0018 00000000 		.4byte	.LFB1
 4706 001c 58000000 		.4byte	.LFE1
 4707 0020 00000000 		.4byte	.LFB2
 4708 0024 60000000 		.4byte	.LFE2
 4709 0028 00000000 		.4byte	.LFB3
 4710 002c 56000000 		.4byte	.LFE3
 4711 0030 00000000 		.4byte	.LFB4
 4712 0034 4C090000 		.4byte	.LFE4
 4713 0038 00000000 		.4byte	.LFB5
 4714 003c C8030000 		.4byte	.LFE5
 4715 0040 00000000 		.4byte	.LFB6
 4716 0044 90000000 		.4byte	.LFE6
 4717 0048 00000000 		.4byte	.LFB7
 4718 004c 0C010000 		.4byte	.LFE7
 4719 0050 00000000 		.4byte	.LFB8
 4720 0054 24010000 		.4byte	.LFE8
 4721 0058 00000000 		.4byte	.LFB9
 4722 005c 9C000000 		.4byte	.LFE9
 4723 0060 00000000 		.4byte	.LFB10
 4724 0064 44000000 		.4byte	.LFE10
 4725 0068 00000000 		.4byte	.LFB11
 4726 006c 58000000 		.4byte	.LFE11
 4727 0070 00000000 		.4byte	0
 4728 0074 00000000 		.4byte	0
 4729              		.section	.debug_line,"",%progbits
 4730              	.Ldebug_line0:
 4731 0000 51040000 		.section	.debug_str,"MS",%progbits,1
 4731      02002101 
 4731      00000201 
 4731      FB0E0D00 
 4731      01010101 
 4732              	.LASF22:
 4733 0000 4F726965 		.ascii	"OrientationState\000"
 4733      6E746174 
 4733      696F6E53 
 4733      74617465 
 4733      00
 4734              	.LASF36:
 4735 0011 64696A6B 		.ascii	"dijkstra\000"
 4735      73747261 
 4735      00
 4736              	.LASF20:
 4737 001a 536B6970 		.ascii	"Skip\000"
 4737      00
 4738              	.LASF33:
 4739 001f 726F7773 		.ascii	"rows\000"
 4739      00
 4740              	.LASF55:
 4741 0024 69735661 		.ascii	"isValidMove\000"
 4741      6C69644D 
 4741      6F766500 
 4742              	.LASF0:
 4743 0030 7369676E 		.ascii	"signed char\000"
 4743      65642063 
 4743      68617200 
 4744              	.LASF12:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 95


 4745 003c 5F5F7569 		.ascii	"__uint8_t\000"
 4745      6E74385F 
 4745      7400
 4746              	.LASF26:
 4747 0046 64697265 		.ascii	"direction\000"
 4747      6374696F 
 4747      6E00
 4748              	.LASF83:
 4749 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4749      43313120 
 4749      352E342E 
 4749      31203230 
 4749      31363036 
 4750 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4750      20726576 
 4750      6973696F 
 4750      6E203233 
 4750      37373135 
 4751 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4751      66756E63 
 4751      74696F6E 
 4751      2D736563 
 4751      74696F6E 
 4752              	.LASF7:
 4753 00de 6C6F6E67 		.ascii	"long long unsigned int\000"
 4753      206C6F6E 
 4753      6720756E 
 4753      7369676E 
 4753      65642069 
 4754              	.LASF45:
 4755 00f5 73746570 		.ascii	"stepNum\000"
 4755      4E756D00 
 4756              	.LASF44:
 4757 00fd 64697374 		.ascii	"distances\000"
 4757      616E6365 
 4757      7300
 4758              	.LASF17:
 4759 0107 75547572 		.ascii	"uTurn\000"
 4759      6E00
 4760              	.LASF37:
 4761 010d 73746172 		.ascii	"startlocation\000"
 4761      746C6F63 
 4761      6174696F 
 4761      6E00
 4762              	.LASF31:
 4763 011b 7072696E 		.ascii	"printMap\000"
 4763      744D6170 
 4763      00
 4764              	.LASF6:
 4765 0124 6C6F6E67 		.ascii	"long long int\000"
 4765      206C6F6E 
 4765      6720696E 
 4765      7400
 4766              	.LASF85:
 4767 0132 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4767      6F63756D 
 4767      656E7473 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 96


 4767      5C476974 
 4767      4875625C 
 4768 0161 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4768      635F636F 
 4768      64655F62 
 4768      6173655C 
 4768      43533330 
 4769              	.LASF53:
 4770 0183 6E657743 		.ascii	"newCol\000"
 4770      6F6C00
 4771              	.LASF49:
 4772 018a 63757272 		.ascii	"currentCol\000"
 4772      656E7443 
 4772      6F6C00
 4773              	.LASF29:
 4774 0195 496E7374 		.ascii	"Instructions\000"
 4774      72756374 
 4774      696F6E73 
 4774      00
 4775              	.LASF4:
 4776 01a2 6C6F6E67 		.ascii	"long int\000"
 4776      20696E74 
 4776      00
 4777              	.LASF38:
 4778 01ab 74617267 		.ascii	"targetlocation\000"
 4778      65746C6F 
 4778      63617469 
 4778      6F6E00
 4779              	.LASF18:
 4780 01ba 466F7277 		.ascii	"ForwardUntilTarget\000"
 4780      61726455 
 4780      6E74696C 
 4780      54617267 
 4780      657400
 4781              	.LASF30:
 4782 01cd 4C6F6361 		.ascii	"Location\000"
 4782      74696F6E 
 4782      00
 4783              	.LASF70:
 4784 01d6 74617267 		.ascii	"targetRow\000"
 4784      6574526F 
 4784      7700
 4785              	.LASF78:
 4786 01e0 696E7374 		.ascii	"instructionsList\000"
 4786      72756374 
 4786      696F6E73 
 4786      4C697374 
 4786      00
 4787              	.LASF66:
 4788 01f1 63686563 		.ascii	"checkPathDirection\000"
 4788      6B506174 
 4788      68446972 
 4788      65637469 
 4788      6F6E00
 4789              	.LASF81:
 4790 0204 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 4790      5F6F665F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 97


 4790      6F707469 
 4790      6D616C5F 
 4790      636F6F72 
 4791              	.LASF8:
 4792 0220 756E7369 		.ascii	"unsigned int\000"
 4792      676E6564 
 4792      20696E74 
 4792      00
 4793              	.LASF46:
 4794 022d 73686F72 		.ascii	"shortestDist\000"
 4794      74657374 
 4794      44697374 
 4794      00
 4795              	.LASF5:
 4796 023a 6C6F6E67 		.ascii	"long unsigned int\000"
 4796      20756E73 
 4796      69676E65 
 4796      6420696E 
 4796      7400
 4797              	.LASF80:
 4798 024c 70617468 		.ascii	"path_of_coordinates\000"
 4798      5F6F665F 
 4798      636F6F72 
 4798      64696E61 
 4798      74657300 
 4799              	.LASF61:
 4800 0260 74617267 		.ascii	"targetOrientation\000"
 4800      65744F72 
 4800      69656E74 
 4800      6174696F 
 4800      6E00
 4801              	.LASF3:
 4802 0272 73686F72 		.ascii	"short unsigned int\000"
 4802      7420756E 
 4802      7369676E 
 4802      65642069 
 4802      6E7400
 4803              	.LASF19:
 4804 0285 53746F70 		.ascii	"StopAtTarget\000"
 4804      41745461 
 4804      72676574 
 4804      00
 4805              	.LASF52:
 4806 0292 6E657752 		.ascii	"newRow\000"
 4806      6F7700
 4807              	.LASF43:
 4808 0299 70715369 		.ascii	"pqSize\000"
 4808      7A6500
 4809              	.LASF56:
 4810 02a0 67657450 		.ascii	"getPathInstructions\000"
 4810      61746849 
 4810      6E737472 
 4810      75637469 
 4810      6F6E7300 
 4811              	.LASF24:
 4812 02b4 4C656674 		.ascii	"Left\000"
 4812      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 98


 4813              	.LASF10:
 4814 02b9 73697A65 		.ascii	"sizetype\000"
 4814      74797065 
 4814      00
 4815              	.LASF9:
 4816 02c2 6C6F6E67 		.ascii	"long double\000"
 4816      20646F75 
 4816      626C6500 
 4817              	.LASF48:
 4818 02ce 63757272 		.ascii	"currentRow\000"
 4818      656E7452 
 4818      6F7700
 4819              	.LASF64:
 4820 02d9 70726F63 		.ascii	"processInstructionList\000"
 4820      65737349 
 4820      6E737472 
 4820      75637469 
 4820      6F6E4C69 
 4821              	.LASF15:
 4822 02f0 77616974 		.ascii	"waitForLeftTurn\000"
 4822      466F724C 
 4822      65667454 
 4822      75726E00 
 4823              	.LASF51:
 4824 0300 63757272 		.ascii	"current\000"
 4824      656E7400 
 4825              	.LASF50:
 4826 0308 70617468 		.ascii	"pathIndex\000"
 4826      496E6465 
 4826      7800
 4827              	.LASF32:
 4828 0312 636C6561 		.ascii	"clearMap\000"
 4828      724D6170 
 4828      00
 4829              	.LASF62:
 4830 031b 6E657744 		.ascii	"newDirection\000"
 4830      69726563 
 4830      74696F6E 
 4830      00
 4831              	.LASF35:
 4832 0328 5F426F6F 		.ascii	"_Bool\000"
 4832      6C00
 4833              	.LASF1:
 4834 032e 756E7369 		.ascii	"unsigned char\000"
 4834      676E6564 
 4834      20636861 
 4834      7200
 4835              	.LASF21:
 4836 033c 496E7374 		.ascii	"InstructionDirection\000"
 4836      72756374 
 4836      696F6E44 
 4836      69726563 
 4836      74696F6E 
 4837              	.LASF69:
 4838 0351 67657454 		.ascii	"getTargetOrientation\000"
 4838      61726765 
 4838      744F7269 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 99


 4838      656E7461 
 4838      74696F6E 
 4839              	.LASF74:
 4840 0366 66696E64 		.ascii	"findPath\000"
 4840      50617468 
 4840      00
 4841              	.LASF2:
 4842 036f 73686F72 		.ascii	"short int\000"
 4842      7420696E 
 4842      7400
 4843              	.LASF59:
 4844 0379 74617267 		.ascii	"targetLocation\000"
 4844      65744C6F 
 4844      63617469 
 4844      6F6E00
 4845              	.LASF14:
 4846 0388 476F466F 		.ascii	"GoForward\000"
 4846      72776172 
 4846      6400
 4847              	.LASF25:
 4848 0392 52696768 		.ascii	"Right\000"
 4848      7400
 4849              	.LASF57:
 4850 0398 6E756D53 		.ascii	"numSteps\000"
 4850      74657073 
 4850      00
 4851              	.LASF60:
 4852 03a1 6C697374 		.ascii	"listIndex\000"
 4852      496E6465 
 4852      7800
 4853              	.LASF47:
 4854 03ab 72657453 		.ascii	"retSteps\000"
 4854      74657073 
 4854      00
 4855              	.LASF41:
 4856 03b4 6C6F6361 		.ascii	"location\000"
 4856      74696F6E 
 4856      00
 4857              	.LASF39:
 4858 03bd 76697369 		.ascii	"visitedMap\000"
 4858      7465644D 
 4858      617000
 4859              	.LASF73:
 4860 03c8 6C656E67 		.ascii	"length\000"
 4860      746800
 4861              	.LASF11:
 4862 03cf 63686172 		.ascii	"char\000"
 4862      00
 4863              	.LASF79:
 4864 03d4 73746172 		.ascii	"start_pos\000"
 4864      745F706F 
 4864      7300
 4865              	.LASF76:
 4866 03de 70726576 		.ascii	"previousRobotOrientation\000"
 4866      696F7573 
 4866      526F626F 
 4866      744F7269 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 100


 4866      656E7461 
 4867              	.LASF42:
 4868 03f7 64697374 		.ascii	"distance\000"
 4868      616E6365 
 4868      00
 4869              	.LASF65:
 4870 0400 696E6465 		.ascii	"index\000"
 4870      7800
 4871              	.LASF75:
 4872 0406 666F6F64 		.ascii	"food_list\000"
 4872      5F6C6973 
 4872      7400
 4873              	.LASF23:
 4874 0410 446F776E 		.ascii	"Down\000"
 4874      00
 4875              	.LASF77:
 4876 0415 63757272 		.ascii	"currentRobotOrientation\000"
 4876      656E7452 
 4876      6F626F74 
 4876      4F726965 
 4876      6E746174 
 4877              	.LASF54:
 4878 042d 6E657744 		.ascii	"newDistance\000"
 4878      69737461 
 4878      6E636500 
 4879              	.LASF84:
 4880 0439 70617468 		.ascii	"pathfinding.c\000"
 4880      66696E64 
 4880      696E672E 
 4880      6300
 4881              	.LASF68:
 4882 0447 726F626F 		.ascii	"robotOrientation\000"
 4882      744F7269 
 4882      656E7461 
 4882      74696F6E 
 4882      00
 4883              	.LASF16:
 4884 0458 77616974 		.ascii	"waitForRightTurn\000"
 4884      466F7252 
 4884      69676874 
 4884      5475726E 
 4884      00
 4885              	.LASF40:
 4886 0469 5072696F 		.ascii	"PriorityQueue\000"
 4886      72697479 
 4886      51756575 
 4886      6500
 4887              	.LASF58:
 4888 0477 73746172 		.ascii	"startLocation\000"
 4888      744C6F63 
 4888      6174696F 
 4888      6E00
 4889              	.LASF13:
 4890 0485 75696E74 		.ascii	"uint8_t\000"
 4890      385F7400 
 4891              	.LASF72:
 4892 048d 696E7374 		.ascii	"instructionsListLength\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cc7XezmC.s 			page 101


 4892      72756374 
 4892      696F6E73 
 4892      4C697374 
 4892      4C656E67 
 4893              	.LASF82:
 4894 04a4 6D6F7665 		.ascii	"moves\000"
 4894      7300
 4895              	.LASF71:
 4896 04aa 74617267 		.ascii	"targetCol\000"
 4896      6574436F 
 4896      6C00
 4897              	.LASF67:
 4898 04b4 63686563 		.ascii	"checkIgnoreTurn\000"
 4898      6B49676E 
 4898      6F726554 
 4898      75726E00 
 4899              	.LASF34:
 4900 04c4 636F6C73 		.ascii	"cols\000"
 4900      00
 4901              	.LASF63:
 4902 04c9 6E657874 		.ascii	"nextStep\000"
 4902      53746570 
 4902      00
 4903              	.LASF27:
 4904 04d2 69676E6F 		.ascii	"ignoreL\000"
 4904      72654C00 
 4905              	.LASF28:
 4906 04da 69676E6F 		.ascii	"ignoreR\000"
 4906      72655200 
 4907              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
