ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 03       		.byte	3
  26              		.bss
  27              		.align	2
  28              	instructionsList:
  29 0000 00000000 		.space	4560
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.align	2
  31              	numSteps:
  32 11d0 00000000 		.space	4
  33              		.global	map
  34              		.data
  35 0001 000000   		.align	2
  36              		.type	map, %object
  37              		.size	map, 1140
  38              	map:
  39 0004 01000000 		.word	1
  40 0008 01000000 		.word	1
  41 000c 01000000 		.word	1
  42 0010 01000000 		.word	1
  43 0014 01000000 		.word	1
  44 0018 01000000 		.word	1
  45 001c 01000000 		.word	1
  46 0020 01000000 		.word	1
  47 0024 01000000 		.word	1
  48 0028 01000000 		.word	1
  49 002c 01000000 		.word	1
  50 0030 01000000 		.word	1
  51 0034 01000000 		.word	1
  52 0038 01000000 		.word	1
  53 003c 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 2


  54 0040 01000000 		.word	1
  55 0044 01000000 		.word	1
  56 0048 01000000 		.word	1
  57 004c 01000000 		.word	1
  58 0050 01000000 		.word	1
  59 0054 00000000 		.word	0
  60 0058 01000000 		.word	1
  61 005c 00000000 		.word	0
  62 0060 00000000 		.word	0
  63 0064 00000000 		.word	0
  64 0068 00000000 		.word	0
  65 006c 00000000 		.word	0
  66 0070 00000000 		.word	0
  67 0074 00000000 		.word	0
  68 0078 00000000 		.word	0
  69 007c 00000000 		.word	0
  70 0080 00000000 		.word	0
  71 0084 00000000 		.word	0
  72 0088 00000000 		.word	0
  73 008c 00000000 		.word	0
  74 0090 00000000 		.word	0
  75 0094 00000000 		.word	0
  76 0098 01000000 		.word	1
  77 009c 01000000 		.word	1
  78 00a0 00000000 		.word	0
  79 00a4 01000000 		.word	1
  80 00a8 00000000 		.word	0
  81 00ac 01000000 		.word	1
  82 00b0 01000000 		.word	1
  83 00b4 01000000 		.word	1
  84 00b8 01000000 		.word	1
  85 00bc 01000000 		.word	1
  86 00c0 00000000 		.word	0
  87 00c4 01000000 		.word	1
  88 00c8 01000000 		.word	1
  89 00cc 01000000 		.word	1
  90 00d0 00000000 		.word	0
  91 00d4 01000000 		.word	1
  92 00d8 01000000 		.word	1
  93 00dc 01000000 		.word	1
  94 00e0 00000000 		.word	0
  95 00e4 01000000 		.word	1
  96 00e8 01000000 		.word	1
  97 00ec 00000000 		.word	0
  98 00f0 00000000 		.word	0
  99 00f4 00000000 		.word	0
 100 00f8 01000000 		.word	1
 101 00fc 00000000 		.word	0
 102 0100 00000000 		.word	0
 103 0104 00000000 		.word	0
 104 0108 01000000 		.word	1
 105 010c 00000000 		.word	0
 106 0110 00000000 		.word	0
 107 0114 00000000 		.word	0
 108 0118 00000000 		.word	0
 109 011c 00000000 		.word	0
 110 0120 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 3


 111 0124 00000000 		.word	0
 112 0128 01000000 		.word	1
 113 012c 00000000 		.word	0
 114 0130 01000000 		.word	1
 115 0134 01000000 		.word	1
 116 0138 01000000 		.word	1
 117 013c 01000000 		.word	1
 118 0140 00000000 		.word	0
 119 0144 01000000 		.word	1
 120 0148 00000000 		.word	0
 121 014c 01000000 		.word	1
 122 0150 00000000 		.word	0
 123 0154 01000000 		.word	1
 124 0158 01000000 		.word	1
 125 015c 01000000 		.word	1
 126 0160 00000000 		.word	0
 127 0164 01000000 		.word	1
 128 0168 00000000 		.word	0
 129 016c 01000000 		.word	1
 130 0170 01000000 		.word	1
 131 0174 01000000 		.word	1
 132 0178 00000000 		.word	0
 133 017c 01000000 		.word	1
 134 0180 01000000 		.word	1
 135 0184 00000000 		.word	0
 136 0188 00000000 		.word	0
 137 018c 00000000 		.word	0
 138 0190 01000000 		.word	1
 139 0194 00000000 		.word	0
 140 0198 01000000 		.word	1
 141 019c 00000000 		.word	0
 142 01a0 00000000 		.word	0
 143 01a4 00000000 		.word	0
 144 01a8 01000000 		.word	1
 145 01ac 00000000 		.word	0
 146 01b0 01000000 		.word	1
 147 01b4 00000000 		.word	0
 148 01b8 00000000 		.word	0
 149 01bc 00000000 		.word	0
 150 01c0 00000000 		.word	0
 151 01c4 00000000 		.word	0
 152 01c8 01000000 		.word	1
 153 01cc 01000000 		.word	1
 154 01d0 00000000 		.word	0
 155 01d4 01000000 		.word	1
 156 01d8 01000000 		.word	1
 157 01dc 01000000 		.word	1
 158 01e0 00000000 		.word	0
 159 01e4 01000000 		.word	1
 160 01e8 00000000 		.word	0
 161 01ec 01000000 		.word	1
 162 01f0 00000000 		.word	0
 163 01f4 01000000 		.word	1
 164 01f8 00000000 		.word	0
 165 01fc 01000000 		.word	1
 166 0200 00000000 		.word	0
 167 0204 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 4


 168 0208 01000000 		.word	1
 169 020c 01000000 		.word	1
 170 0210 00000000 		.word	0
 171 0214 01000000 		.word	1
 172 0218 01000000 		.word	1
 173 021c 00000000 		.word	0
 174 0220 01000000 		.word	1
 175 0224 00000000 		.word	0
 176 0228 01000000 		.word	1
 177 022c 00000000 		.word	0
 178 0230 00000000 		.word	0
 179 0234 00000000 		.word	0
 180 0238 01000000 		.word	1
 181 023c 00000000 		.word	0
 182 0240 01000000 		.word	1
 183 0244 00000000 		.word	0
 184 0248 01000000 		.word	1
 185 024c 00000000 		.word	0
 186 0250 01000000 		.word	1
 187 0254 00000000 		.word	0
 188 0258 00000000 		.word	0
 189 025c 00000000 		.word	0
 190 0260 01000000 		.word	1
 191 0264 01000000 		.word	1
 192 0268 00000000 		.word	0
 193 026c 01000000 		.word	1
 194 0270 00000000 		.word	0
 195 0274 01000000 		.word	1
 196 0278 00000000 		.word	0
 197 027c 01000000 		.word	1
 198 0280 01000000 		.word	1
 199 0284 01000000 		.word	1
 200 0288 00000000 		.word	0
 201 028c 01000000 		.word	1
 202 0290 00000000 		.word	0
 203 0294 01000000 		.word	1
 204 0298 00000000 		.word	0
 205 029c 01000000 		.word	1
 206 02a0 00000000 		.word	0
 207 02a4 01000000 		.word	1
 208 02a8 01000000 		.word	1
 209 02ac 01000000 		.word	1
 210 02b0 01000000 		.word	1
 211 02b4 00000000 		.word	0
 212 02b8 00000000 		.word	0
 213 02bc 00000000 		.word	0
 214 02c0 01000000 		.word	1
 215 02c4 00000000 		.word	0
 216 02c8 01000000 		.word	1
 217 02cc 00000000 		.word	0
 218 02d0 00000000 		.word	0
 219 02d4 00000000 		.word	0
 220 02d8 01000000 		.word	1
 221 02dc 00000000 		.word	0
 222 02e0 00000000 		.word	0
 223 02e4 00000000 		.word	0
 224 02e8 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 5


 225 02ec 00000000 		.word	0
 226 02f0 00000000 		.word	0
 227 02f4 00000000 		.word	0
 228 02f8 01000000 		.word	1
 229 02fc 01000000 		.word	1
 230 0300 01000000 		.word	1
 231 0304 01000000 		.word	1
 232 0308 00000000 		.word	0
 233 030c 01000000 		.word	1
 234 0310 00000000 		.word	0
 235 0314 01000000 		.word	1
 236 0318 01000000 		.word	1
 237 031c 01000000 		.word	1
 238 0320 01000000 		.word	1
 239 0324 01000000 		.word	1
 240 0328 01000000 		.word	1
 241 032c 01000000 		.word	1
 242 0330 01000000 		.word	1
 243 0334 01000000 		.word	1
 244 0338 01000000 		.word	1
 245 033c 01000000 		.word	1
 246 0340 00000000 		.word	0
 247 0344 01000000 		.word	1
 248 0348 01000000 		.word	1
 249 034c 00000000 		.word	0
 250 0350 00000000 		.word	0
 251 0354 00000000 		.word	0
 252 0358 00000000 		.word	0
 253 035c 00000000 		.word	0
 254 0360 00000000 		.word	0
 255 0364 00000000 		.word	0
 256 0368 00000000 		.word	0
 257 036c 00000000 		.word	0
 258 0370 00000000 		.word	0
 259 0374 00000000 		.word	0
 260 0378 00000000 		.word	0
 261 037c 00000000 		.word	0
 262 0380 00000000 		.word	0
 263 0384 00000000 		.word	0
 264 0388 00000000 		.word	0
 265 038c 00000000 		.word	0
 266 0390 01000000 		.word	1
 267 0394 01000000 		.word	1
 268 0398 00000000 		.word	0
 269 039c 01000000 		.word	1
 270 03a0 01000000 		.word	1
 271 03a4 01000000 		.word	1
 272 03a8 01000000 		.word	1
 273 03ac 01000000 		.word	1
 274 03b0 01000000 		.word	1
 275 03b4 01000000 		.word	1
 276 03b8 01000000 		.word	1
 277 03bc 01000000 		.word	1
 278 03c0 01000000 		.word	1
 279 03c4 01000000 		.word	1
 280 03c8 00000000 		.word	0
 281 03cc 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 6


 282 03d0 01000000 		.word	1
 283 03d4 01000000 		.word	1
 284 03d8 01000000 		.word	1
 285 03dc 01000000 		.word	1
 286 03e0 01000000 		.word	1
 287 03e4 00000000 		.word	0
 288 03e8 00000000 		.word	0
 289 03ec 00000000 		.word	0
 290 03f0 00000000 		.word	0
 291 03f4 00000000 		.word	0
 292 03f8 00000000 		.word	0
 293 03fc 00000000 		.word	0
 294 0400 01000000 		.word	1
 295 0404 00000000 		.word	0
 296 0408 00000000 		.word	0
 297 040c 00000000 		.word	0
 298 0410 00000000 		.word	0
 299 0414 00000000 		.word	0
 300 0418 00000000 		.word	0
 301 041c 00000000 		.word	0
 302 0420 00000000 		.word	0
 303 0424 00000000 		.word	0
 304 0428 01000000 		.word	1
 305 042c 01000000 		.word	1
 306 0430 01000000 		.word	1
 307 0434 01000000 		.word	1
 308 0438 01000000 		.word	1
 309 043c 01000000 		.word	1
 310 0440 01000000 		.word	1
 311 0444 01000000 		.word	1
 312 0448 01000000 		.word	1
 313 044c 01000000 		.word	1
 314 0450 01000000 		.word	1
 315 0454 01000000 		.word	1
 316 0458 01000000 		.word	1
 317 045c 01000000 		.word	1
 318 0460 01000000 		.word	1
 319 0464 01000000 		.word	1
 320 0468 01000000 		.word	1
 321 046c 01000000 		.word	1
 322 0470 01000000 		.word	1
 323 0474 01000000 		.word	1
 324              		.global	start_pos
 325              		.align	2
 326              		.type	start_pos, %object
 327              		.size	start_pos, 8
 328              	start_pos:
 329 0478 01000000 		.word	1
 330 047c 03000000 		.word	3
 331              		.global	food_list
 332              		.align	2
 333              		.type	food_list, %object
 334              		.size	food_list, 40
 335              	food_list:
 336 0480 03000000 		.word	3
 337 0484 11000000 		.word	17
 338 0488 05000000 		.word	5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 7


 339 048c 05000000 		.word	5
 340 0490 07000000 		.word	7
 341 0494 01000000 		.word	1
 342 0498 0D000000 		.word	13
 343 049c 05000000 		.word	5
 344 04a0 09000000 		.word	9
 345 04a4 09000000 		.word	9
 346              		.section	.rodata
 347              		.align	2
 348              	.LC0:
 349 0000 256400   		.ascii	"%d\000"
 350              		.section	.text.printMap,"ax",%progbits
 351              		.align	2
 352              		.global	printMap
 353              		.thumb
 354              		.thumb_func
 355              		.type	printMap, %function
 356              	printMap:
 357              	.LFB1:
 358              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Right; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static int numSteps = 0;
  26:pathfinding.c **** 
  27:pathfinding.c **** uint8_t instructionsListLength();
  28:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  29:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  30:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  31:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 8


  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  50:pathfinding.c **** };
  51:pathfinding.c **** 
  52:pathfinding.c **** /*
  53:pathfinding.c **** int map[15][19] = {
  54:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  55:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  56:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  57:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  58:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  60:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  62:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  64:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  65:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  66:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  68:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:pathfinding.c **** };
  70:pathfinding.c **** */
  71:pathfinding.c **** 
  72:pathfinding.c **** 
  73:pathfinding.c **** int start_pos[2] = {1,3};
  74:pathfinding.c **** 
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {3,17},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {7,1},
  79:pathfinding.c **** {13,5},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** 
  83:pathfinding.c **** // MAP INITIALISATION CODE
  84:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 359              		.loc 1 84 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 84B0     		sub	sp, sp, #16
 368              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 9


 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
 372              	.LBB2:
  85:pathfinding.c ****     // Print the map in a grid format
  86:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 373              		.loc 1 86 0
 374 0008 0023     		movs	r3, #0
 375 000a FB60     		str	r3, [r7, #12]
 376 000c 1BE0     		b	.L2
 377              	.L5:
 378              	.LBB3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 379              		.loc 1 87 0
 380 000e 0023     		movs	r3, #0
 381 0010 BB60     		str	r3, [r7, #8]
 382 0012 0FE0     		b	.L3
 383              	.L4:
  88:pathfinding.c ****             printf("%d", map[i][j]);
 384              		.loc 1 88 0 discriminator 3
 385 0014 FB68     		ldr	r3, [r7, #12]
 386 0016 4C22     		movs	r2, #76
 387 0018 02FB03F3 		mul	r3, r2, r3
 388 001c 7A68     		ldr	r2, [r7, #4]
 389 001e 1344     		add	r3, r3, r2
 390 0020 BA68     		ldr	r2, [r7, #8]
 391 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 392 0026 1946     		mov	r1, r3
 393 0028 0A48     		ldr	r0, .L6
 394 002a FFF7FEFF 		bl	printf
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 395              		.loc 1 87 0 discriminator 3
 396 002e BB68     		ldr	r3, [r7, #8]
 397 0030 0133     		adds	r3, r3, #1
 398 0032 BB60     		str	r3, [r7, #8]
 399              	.L3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 400              		.loc 1 87 0 is_stmt 0 discriminator 1
 401 0034 BB68     		ldr	r3, [r7, #8]
 402 0036 122B     		cmp	r3, #18
 403 0038 ECDD     		ble	.L4
 404              	.LBE3:
  89:pathfinding.c ****         }
  90:pathfinding.c ****         printf("\n");
 405              		.loc 1 90 0 is_stmt 1 discriminator 2
 406 003a 0A20     		movs	r0, #10
 407 003c FFF7FEFF 		bl	putchar
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 408              		.loc 1 86 0 discriminator 2
 409 0040 FB68     		ldr	r3, [r7, #12]
 410 0042 0133     		adds	r3, r3, #1
 411 0044 FB60     		str	r3, [r7, #12]
 412              	.L2:
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 413              		.loc 1 86 0 is_stmt 0 discriminator 1
 414 0046 FB68     		ldr	r3, [r7, #12]
 415 0048 0E2B     		cmp	r3, #14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 10


 416 004a E0DD     		ble	.L5
 417              	.LBE2:
  91:pathfinding.c ****     }
  92:pathfinding.c **** }
 418              		.loc 1 92 0 is_stmt 1
 419 004c 00BF     		nop
 420 004e 1037     		adds	r7, r7, #16
 421              		.cfi_def_cfa_offset 8
 422 0050 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0052 80BD     		pop	{r7, pc}
 426              	.L7:
 427              		.align	2
 428              	.L6:
 429 0054 00000000 		.word	.LC0
 430              		.cfi_endproc
 431              	.LFE1:
 432              		.size	printMap, .-printMap
 433              		.section	.text.clearMap,"ax",%progbits
 434              		.align	2
 435              		.global	clearMap
 436              		.thumb
 437              		.thumb_func
 438              		.type	clearMap, %function
 439              	clearMap:
 440              	.LFB2:
  93:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 441              		.loc 1 93 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 16
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 85B0     		sub	sp, sp, #20
 450              		.cfi_def_cfa_offset 24
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 454              	.LBB4:
  94:pathfinding.c ****     // Print the map in a grid format
  95:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 455              		.loc 1 95 0
 456 0008 0023     		movs	r3, #0
 457 000a FB60     		str	r3, [r7, #12]
 458 000c 20E0     		b	.L9
 459              	.L13:
 460              	.LBB5:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 461              		.loc 1 96 0
 462 000e 0023     		movs	r3, #0
 463 0010 BB60     		str	r3, [r7, #8]
 464 0012 17E0     		b	.L10
 465              	.L12:
  97:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 11


 466              		.loc 1 97 0
 467 0014 FB68     		ldr	r3, [r7, #12]
 468 0016 4C22     		movs	r2, #76
 469 0018 02FB03F3 		mul	r3, r2, r3
 470 001c 7A68     		ldr	r2, [r7, #4]
 471 001e 1344     		add	r3, r3, r2
 472 0020 BA68     		ldr	r2, [r7, #8]
 473 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 474 0026 012B     		cmp	r3, #1
 475 0028 09D0     		beq	.L11
 476              		.loc 1 97 0 is_stmt 0 discriminator 1
 477 002a FB68     		ldr	r3, [r7, #12]
 478 002c 4C22     		movs	r2, #76
 479 002e 02FB03F3 		mul	r3, r2, r3
 480 0032 7A68     		ldr	r2, [r7, #4]
 481 0034 1344     		add	r3, r3, r2
 482 0036 BA68     		ldr	r2, [r7, #8]
 483 0038 0021     		movs	r1, #0
 484 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 485              	.L11:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 486              		.loc 1 96 0 is_stmt 1 discriminator 2
 487 003e BB68     		ldr	r3, [r7, #8]
 488 0040 0133     		adds	r3, r3, #1
 489 0042 BB60     		str	r3, [r7, #8]
 490              	.L10:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 491              		.loc 1 96 0 is_stmt 0 discriminator 1
 492 0044 BB68     		ldr	r3, [r7, #8]
 493 0046 122B     		cmp	r3, #18
 494 0048 E4DD     		ble	.L12
 495              	.LBE5:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 496              		.loc 1 95 0 is_stmt 1 discriminator 2
 497 004a FB68     		ldr	r3, [r7, #12]
 498 004c 0133     		adds	r3, r3, #1
 499 004e FB60     		str	r3, [r7, #12]
 500              	.L9:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 501              		.loc 1 95 0 is_stmt 0 discriminator 1
 502 0050 FB68     		ldr	r3, [r7, #12]
 503 0052 0E2B     		cmp	r3, #14
 504 0054 DBDD     		ble	.L13
 505              	.LBE4:
  98:pathfinding.c ****         }
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 506              		.loc 1 100 0 is_stmt 1
 507 0056 00BF     		nop
 508 0058 1437     		adds	r7, r7, #20
 509              		.cfi_def_cfa_offset 4
 510 005a BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 005c 80BC     		pop	{r7}
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 12


 516 005e 7047     		bx	lr
 517              		.cfi_endproc
 518              	.LFE2:
 519              		.size	clearMap, .-clearMap
 520              		.comm	list_of_optimal_coordinates,2280,4
 521              		.global	moves
 522              		.data
 523              		.align	2
 524              		.type	moves, %object
 525              		.size	moves, 32
 526              	moves:
 527 04a8 00000000 		.word	0
 528 04ac 01000000 		.word	1
 529 04b0 00000000 		.word	0
 530 04b4 FFFFFFFF 		.word	-1
 531 04b8 01000000 		.word	1
 532 04bc 00000000 		.word	0
 533 04c0 FFFFFFFF 		.word	-1
 534 04c4 00000000 		.word	0
 535              		.section	.text.isValidMove,"ax",%progbits
 536              		.align	2
 537              		.global	isValidMove
 538              		.thumb
 539              		.thumb_func
 540              		.type	isValidMove, %function
 541              	isValidMove:
 542              	.LFB3:
 101:pathfinding.c **** 
 102:pathfinding.c **** 
 103:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 104:pathfinding.c **** 
 105:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 106:pathfinding.c **** 
 107:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 543              		.loc 1 107 0
 544              		.cfi_startproc
 545              		@ args = 4, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 F860     		str	r0, [r7, #12]
 556 0008 B960     		str	r1, [r7, #8]
 557 000a 7A60     		str	r2, [r7, #4]
 558 000c 3B60     		str	r3, [r7]
 108:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 559              		.loc 1 108 0
 560 000e FB68     		ldr	r3, [r7, #12]
 561 0010 002B     		cmp	r3, #0
 562 0012 17DB     		blt	.L15
 563              		.loc 1 108 0 is_stmt 0 discriminator 1
 564 0014 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 13


 565 0016 7B68     		ldr	r3, [r7, #4]
 566 0018 9A42     		cmp	r2, r3
 567 001a 13DA     		bge	.L15
 568              		.loc 1 108 0 discriminator 3
 569 001c BB68     		ldr	r3, [r7, #8]
 570 001e 002B     		cmp	r3, #0
 571 0020 10DB     		blt	.L15
 572              		.loc 1 108 0 discriminator 5
 573 0022 BA68     		ldr	r2, [r7, #8]
 574 0024 3B68     		ldr	r3, [r7]
 575 0026 9A42     		cmp	r2, r3
 576 0028 0CDA     		bge	.L15
 577              		.loc 1 108 0 discriminator 7
 578 002a FB68     		ldr	r3, [r7, #12]
 579 002c 4C22     		movs	r2, #76
 580 002e 02FB03F3 		mul	r3, r2, r3
 581 0032 BA69     		ldr	r2, [r7, #24]
 582 0034 1344     		add	r3, r3, r2
 583 0036 BA68     		ldr	r2, [r7, #8]
 584 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 585 003c 002B     		cmp	r3, #0
 586 003e 01D1     		bne	.L15
 587              		.loc 1 108 0 discriminator 9
 588 0040 0123     		movs	r3, #1
 589 0042 00E0     		b	.L16
 590              	.L15:
 591              		.loc 1 108 0 discriminator 10
 592 0044 0023     		movs	r3, #0
 593              	.L16:
 594              		.loc 1 108 0 discriminator 12
 595 0046 03F00103 		and	r3, r3, #1
 596 004a DBB2     		uxtb	r3, r3
 109:pathfinding.c **** }
 597              		.loc 1 109 0 is_stmt 1 discriminator 12
 598 004c 1846     		mov	r0, r3
 599 004e 1437     		adds	r7, r7, #20
 600              		.cfi_def_cfa_offset 4
 601 0050 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 0052 80BC     		pop	{r7}
 605              		.cfi_restore 7
 606              		.cfi_def_cfa_offset 0
 607 0054 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE3:
 610              		.size	isValidMove, .-isValidMove
 611 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 612              		.align	2
 613              		.global	dijkstra
 614              		.thumb
 615              		.thumb_func
 616              		.type	dijkstra, %function
 617              	dijkstra:
 618              	.LFB4:
 110:pathfinding.c **** 
 111:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 14


 619              		.loc 1 111 0
 620              		.cfi_startproc
 621              		@ args = 12, pretend = 8, frame = 5816
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 82B0     		sub	sp, sp, #8
 624              		.cfi_def_cfa_offset 8
 625 0002 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 20
 627              		.cfi_offset 4, -20
 628              		.cfi_offset 7, -16
 629              		.cfi_offset 14, -12
 630 0004 ADF5B65D 		sub	sp, sp, #5824
 631              		.cfi_def_cfa_offset 5844
 632 0008 81B0     		sub	sp, sp, #4
 633              		.cfi_def_cfa_offset 5848
 634 000a 02AF     		add	r7, sp, #8
 635              		.cfi_def_cfa 7, 5840
 636 000c 07F11804 		add	r4, r7, #24
 637 0010 0C3C     		subs	r4, r4, #12
 638 0012 2060     		str	r0, [r4]
 639 0014 07F11800 		add	r0, r7, #24
 640 0018 1438     		subs	r0, r0, #20
 641 001a 80E80600 		stmia	r0, {r1, r2}
 642 001e 07F5B652 		add	r2, r7, #5824
 643 0022 02F10C02 		add	r2, r2, #12
 644 0026 1360     		str	r3, [r2]
 645              	.LBB6:
 112:pathfinding.c **** 
 113:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 114:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 646              		.loc 1 114 0
 647 0028 0023     		movs	r3, #0
 648 002a 07F5B552 		add	r2, r7, #5792
 649 002e 02F11402 		add	r2, r2, #20
 650 0032 1360     		str	r3, [r2]
 651 0034 3AE0     		b	.L19
 652              	.L22:
 653              	.LBB7:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 654              		.loc 1 115 0
 655 0036 0023     		movs	r3, #0
 656 0038 07F5B552 		add	r2, r7, #5792
 657 003c 02F11002 		add	r2, r2, #16
 658 0040 1360     		str	r3, [r2]
 659 0042 21E0     		b	.L20
 660              	.L21:
 116:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 661              		.loc 1 116 0 discriminator 3
 662 0044 07F58F51 		add	r1, r7, #4576
 663 0048 01F10C01 		add	r1, r1, #12
 664 004c 07F5B553 		add	r3, r7, #5792
 665 0050 03F11403 		add	r3, r3, #20
 666 0054 1A68     		ldr	r2, [r3]
 667 0056 1346     		mov	r3, r2
 668 0058 DB00     		lsls	r3, r3, #3
 669 005a 1344     		add	r3, r3, r2
 670 005c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 15


 671 005e 1344     		add	r3, r3, r2
 672 0060 07F5B552 		add	r2, r7, #5792
 673 0064 02F11002 		add	r2, r2, #16
 674 0068 1268     		ldr	r2, [r2]
 675 006a 1344     		add	r3, r3, r2
 676 006c 0122     		movs	r2, #1
 677 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 678              		.loc 1 115 0 discriminator 3
 679 0072 07F5B553 		add	r3, r7, #5792
 680 0076 03F11003 		add	r3, r3, #16
 681 007a 1B68     		ldr	r3, [r3]
 682 007c 0133     		adds	r3, r3, #1
 683 007e 07F5B552 		add	r2, r7, #5792
 684 0082 02F11002 		add	r2, r2, #16
 685 0086 1360     		str	r3, [r2]
 686              	.L20:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 687              		.loc 1 115 0 is_stmt 0 discriminator 1
 688 0088 07F5B553 		add	r3, r7, #5792
 689 008c 03F11003 		add	r3, r3, #16
 690 0090 1B68     		ldr	r3, [r3]
 691 0092 122B     		cmp	r3, #18
 692 0094 D6DD     		ble	.L21
 693              	.LBE7:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 694              		.loc 1 114 0 is_stmt 1 discriminator 2
 695 0096 07F5B553 		add	r3, r7, #5792
 696 009a 03F11403 		add	r3, r3, #20
 697 009e 1B68     		ldr	r3, [r3]
 698 00a0 0133     		adds	r3, r3, #1
 699 00a2 07F5B552 		add	r2, r7, #5792
 700 00a6 02F11402 		add	r2, r2, #20
 701 00aa 1360     		str	r3, [r2]
 702              	.L19:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 703              		.loc 1 114 0 is_stmt 0 discriminator 1
 704 00ac 07F5B553 		add	r3, r7, #5792
 705 00b0 03F11403 		add	r3, r3, #20
 706 00b4 1B68     		ldr	r3, [r3]
 707 00b6 0E2B     		cmp	r3, #14
 708 00b8 BDDD     		ble	.L22
 709              	.LBE6:
 117:pathfinding.c ****         }
 118:pathfinding.c ****     }
 119:pathfinding.c **** 
 120:pathfinding.c ****     struct PriorityQueue {
 121:pathfinding.c ****         struct Location location;
 122:pathfinding.c ****         int distance;
 123:pathfinding.c ****     };
 124:pathfinding.c **** 
 125:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 126:pathfinding.c ****     int pqSize = 0;
 710              		.loc 1 126 0 is_stmt 1
 711 00ba 0023     		movs	r3, #0
 712 00bc 07F5B552 		add	r2, r7, #5792
 713 00c0 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 16


 714 00c4 1360     		str	r3, [r2]
 715              	.LBB8:
 127:pathfinding.c **** 
 128:pathfinding.c ****     // Initialize distances and paths arrays
 129:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 130:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 131:pathfinding.c **** 
 132:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 716              		.loc 1 132 0
 717 00c6 0023     		movs	r3, #0
 718 00c8 07F5B552 		add	r2, r7, #5792
 719 00cc 02F10802 		add	r2, r2, #8
 720 00d0 1360     		str	r3, [r2]
 721 00d2 3AE0     		b	.L23
 722              	.L26:
 723              	.LBB9:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 724              		.loc 1 133 0
 725 00d4 0023     		movs	r3, #0
 726 00d6 07F5B552 		add	r2, r7, #5792
 727 00da 02F10402 		add	r2, r2, #4
 728 00de 1360     		str	r3, [r2]
 729 00e0 21E0     		b	.L24
 730              	.L25:
 134:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 731              		.loc 1 134 0 discriminator 3
 732 00e2 07F13802 		add	r2, r7, #56
 733 00e6 1C3A     		subs	r2, r2, #28
 734 00e8 07F5B553 		add	r3, r7, #5792
 735 00ec 03F10803 		add	r3, r3, #8
 736 00f0 1968     		ldr	r1, [r3]
 737 00f2 0B46     		mov	r3, r1
 738 00f4 DB00     		lsls	r3, r3, #3
 739 00f6 0B44     		add	r3, r3, r1
 740 00f8 5B00     		lsls	r3, r3, #1
 741 00fa 0B44     		add	r3, r3, r1
 742 00fc 07F5B551 		add	r1, r7, #5792
 743 0100 01F10401 		add	r1, r1, #4
 744 0104 0968     		ldr	r1, [r1]
 745 0106 0B44     		add	r3, r3, r1
 746 0108 4FF47A71 		mov	r1, #1000
 747 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 748              		.loc 1 133 0 discriminator 3
 749 0110 07F5B553 		add	r3, r7, #5792
 750 0114 03F10403 		add	r3, r3, #4
 751 0118 1B68     		ldr	r3, [r3]
 752 011a 0133     		adds	r3, r3, #1
 753 011c 07F5B552 		add	r2, r7, #5792
 754 0120 02F10402 		add	r2, r2, #4
 755 0124 1360     		str	r3, [r2]
 756              	.L24:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 757              		.loc 1 133 0 is_stmt 0 discriminator 1
 758 0126 07F5B553 		add	r3, r7, #5792
 759 012a 03F10403 		add	r3, r3, #4
 760 012e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 17


 761 0130 122B     		cmp	r3, #18
 762 0132 D6DD     		ble	.L25
 763              	.LBE9:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 764              		.loc 1 132 0 is_stmt 1 discriminator 2
 765 0134 07F5B553 		add	r3, r7, #5792
 766 0138 03F10803 		add	r3, r3, #8
 767 013c 1B68     		ldr	r3, [r3]
 768 013e 0133     		adds	r3, r3, #1
 769 0140 07F5B552 		add	r2, r7, #5792
 770 0144 02F10802 		add	r2, r2, #8
 771 0148 1360     		str	r3, [r2]
 772              	.L23:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 773              		.loc 1 132 0 is_stmt 0 discriminator 1
 774 014a 07F5B553 		add	r3, r7, #5792
 775 014e 03F10803 		add	r3, r3, #8
 776 0152 1B68     		ldr	r3, [r3]
 777 0154 0E2B     		cmp	r3, #14
 778 0156 BDDD     		ble	.L26
 779              	.LBE8:
 135:pathfinding.c ****         }
 136:pathfinding.c ****     }
 137:pathfinding.c **** 
 138:pathfinding.c ****     int stepNum = 0;
 780              		.loc 1 138 0 is_stmt 1
 781 0158 0023     		movs	r3, #0
 782 015a 07F5B552 		add	r2, r7, #5792
 783 015e 1360     		str	r3, [r2]
 139:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 784              		.loc 1 139 0
 785 0160 07F11803 		add	r3, r7, #24
 786 0164 143B     		subs	r3, r3, #20
 787 0166 1968     		ldr	r1, [r3]
 788 0168 07F11803 		add	r3, r7, #24
 789 016c 143B     		subs	r3, r3, #20
 790 016e 5868     		ldr	r0, [r3, #4]
 791 0170 07F13802 		add	r2, r7, #56
 792 0174 1C3A     		subs	r2, r2, #28
 793 0176 0B46     		mov	r3, r1
 794 0178 DB00     		lsls	r3, r3, #3
 795 017a 0B44     		add	r3, r3, r1
 796 017c 5B00     		lsls	r3, r3, #1
 797 017e 0B44     		add	r3, r3, r1
 798 0180 0344     		add	r3, r3, r0
 799 0182 0021     		movs	r1, #0
 800 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 140:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 141:pathfinding.c ****     stepNum++; // increment stepNum
 801              		.loc 1 141 0
 802 0188 07F5B553 		add	r3, r7, #5792
 803 018c 1B68     		ldr	r3, [r3]
 804 018e 0133     		adds	r3, r3, #1
 805 0190 07F5B552 		add	r2, r7, #5792
 806 0194 1360     		str	r3, [r2]
 142:pathfinding.c **** 
 143:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 18


 807              		.loc 1 143 0
 808 0196 07F59362 		add	r2, r7, #1176
 809 019a 083A     		subs	r2, r2, #8
 810 019c 07F5B553 		add	r3, r7, #5792
 811 01a0 03F10C03 		add	r3, r3, #12
 812 01a4 1968     		ldr	r1, [r3]
 813 01a6 0B46     		mov	r3, r1
 814 01a8 5B00     		lsls	r3, r3, #1
 815 01aa 0B44     		add	r3, r3, r1
 816 01ac 9B00     		lsls	r3, r3, #2
 817 01ae 1A44     		add	r2, r2, r3
 818 01b0 07F11803 		add	r3, r7, #24
 819 01b4 143B     		subs	r3, r3, #20
 820 01b6 93E80300 		ldmia	r3, {r0, r1}
 821 01ba 82E80300 		stmia	r2, {r0, r1}
 144:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 822              		.loc 1 144 0
 823 01be 07F59362 		add	r2, r7, #1176
 824 01c2 083A     		subs	r2, r2, #8
 825 01c4 07F5B553 		add	r3, r7, #5792
 826 01c8 03F10C03 		add	r3, r3, #12
 827 01cc 1968     		ldr	r1, [r3]
 828 01ce 0B46     		mov	r3, r1
 829 01d0 5B00     		lsls	r3, r3, #1
 830 01d2 0B44     		add	r3, r3, r1
 831 01d4 9B00     		lsls	r3, r3, #2
 832 01d6 1344     		add	r3, r3, r2
 833 01d8 0833     		adds	r3, r3, #8
 834 01da 0022     		movs	r2, #0
 835 01dc 1A60     		str	r2, [r3]
 145:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 836              		.loc 1 145 0
 837 01de 07F5B553 		add	r3, r7, #5792
 838 01e2 03F10C03 		add	r3, r3, #12
 839 01e6 1B68     		ldr	r3, [r3]
 840 01e8 0133     		adds	r3, r3, #1
 841 01ea 07F5B552 		add	r2, r7, #5792
 842 01ee 02F10C02 		add	r2, r2, #12
 843 01f2 1360     		str	r3, [r2]
 146:pathfinding.c **** 
 147:pathfinding.c ****     while (pqSize > 0) {
 844              		.loc 1 147 0
 845 01f4 F5E1     		b	.L27
 846              	.L37:
 847              	.LBB10:
 148:pathfinding.c ****         int idx = 0;
 848              		.loc 1 148 0
 849 01f6 0023     		movs	r3, #0
 850 01f8 07F5B452 		add	r2, r7, #5760
 851 01fc 02F11C02 		add	r2, r2, #28
 852 0200 1360     		str	r3, [r2]
 853              	.LBB11:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 854              		.loc 1 149 0
 855 0202 0123     		movs	r3, #1
 856 0204 07F5B452 		add	r2, r7, #5760
 857 0208 02F11802 		add	r2, r2, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 19


 858 020c 1360     		str	r3, [r2]
 859 020e 34E0     		b	.L28
 860              	.L30:
 150:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 861              		.loc 1 150 0
 862 0210 07F59362 		add	r2, r7, #1176
 863 0214 083A     		subs	r2, r2, #8
 864 0216 07F5B453 		add	r3, r7, #5760
 865 021a 03F11803 		add	r3, r3, #24
 866 021e 1968     		ldr	r1, [r3]
 867 0220 0B46     		mov	r3, r1
 868 0222 5B00     		lsls	r3, r3, #1
 869 0224 0B44     		add	r3, r3, r1
 870 0226 9B00     		lsls	r3, r3, #2
 871 0228 1344     		add	r3, r3, r2
 872 022a 0833     		adds	r3, r3, #8
 873 022c 1868     		ldr	r0, [r3]
 874 022e 07F59362 		add	r2, r7, #1176
 875 0232 083A     		subs	r2, r2, #8
 876 0234 07F5B453 		add	r3, r7, #5760
 877 0238 03F11C03 		add	r3, r3, #28
 878 023c 1968     		ldr	r1, [r3]
 879 023e 0B46     		mov	r3, r1
 880 0240 5B00     		lsls	r3, r3, #1
 881 0242 0B44     		add	r3, r3, r1
 882 0244 9B00     		lsls	r3, r3, #2
 883 0246 1344     		add	r3, r3, r2
 884 0248 0833     		adds	r3, r3, #8
 885 024a 1B68     		ldr	r3, [r3]
 886 024c 9842     		cmp	r0, r3
 887 024e 09DA     		bge	.L29
 151:pathfinding.c ****                 idx = i; // find the shortest distance location 
 888              		.loc 1 151 0
 889 0250 07F5B453 		add	r3, r7, #5760
 890 0254 03F11803 		add	r3, r3, #24
 891 0258 1B68     		ldr	r3, [r3]
 892 025a 07F5B452 		add	r2, r7, #5760
 893 025e 02F11C02 		add	r2, r2, #28
 894 0262 1360     		str	r3, [r2]
 895              	.L29:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 896              		.loc 1 149 0 discriminator 2
 897 0264 07F5B453 		add	r3, r7, #5760
 898 0268 03F11803 		add	r3, r3, #24
 899 026c 1B68     		ldr	r3, [r3]
 900 026e 0133     		adds	r3, r3, #1
 901 0270 07F5B452 		add	r2, r7, #5760
 902 0274 02F11802 		add	r2, r2, #24
 903 0278 1360     		str	r3, [r2]
 904              	.L28:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 905              		.loc 1 149 0 is_stmt 0 discriminator 1
 906 027a 07F5B453 		add	r3, r7, #5760
 907 027e 03F11803 		add	r3, r3, #24
 908 0282 1A68     		ldr	r2, [r3]
 909 0284 07F5B553 		add	r3, r7, #5792
 910 0288 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 20


 911 028c 1B68     		ldr	r3, [r3]
 912 028e 9A42     		cmp	r2, r3
 913 0290 BEDB     		blt	.L30
 914              	.LBE11:
 152:pathfinding.c ****             }
 153:pathfinding.c ****         }
 154:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 915              		.loc 1 154 0 is_stmt 1
 916 0292 07F11801 		add	r1, r7, #24
 917 0296 0839     		subs	r1, r1, #8
 918 0298 07F59362 		add	r2, r7, #1176
 919 029c 083A     		subs	r2, r2, #8
 920 029e 07F5B453 		add	r3, r7, #5760
 921 02a2 03F11C03 		add	r3, r3, #28
 922 02a6 1868     		ldr	r0, [r3]
 923 02a8 0346     		mov	r3, r0
 924 02aa 5B00     		lsls	r3, r3, #1
 925 02ac 0344     		add	r3, r3, r0
 926 02ae 9B00     		lsls	r3, r3, #2
 927 02b0 1A44     		add	r2, r2, r3
 928 02b2 0B46     		mov	r3, r1
 929 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 930 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 155:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 931              		.loc 1 155 0
 932 02ba 07F5B553 		add	r3, r7, #5792
 933 02be 03F10C03 		add	r3, r3, #12
 934 02c2 1B68     		ldr	r3, [r3]
 935 02c4 591E     		subs	r1, r3, #1
 936 02c6 07F59362 		add	r2, r7, #1176
 937 02ca 083A     		subs	r2, r2, #8
 938 02cc 07F5B453 		add	r3, r7, #5760
 939 02d0 03F11C03 		add	r3, r3, #28
 940 02d4 1868     		ldr	r0, [r3]
 941 02d6 0346     		mov	r3, r0
 942 02d8 5B00     		lsls	r3, r3, #1
 943 02da 0344     		add	r3, r3, r0
 944 02dc 9B00     		lsls	r3, r3, #2
 945 02de D018     		adds	r0, r2, r3
 946 02e0 07F59362 		add	r2, r7, #1176
 947 02e4 083A     		subs	r2, r2, #8
 948 02e6 0B46     		mov	r3, r1
 949 02e8 5B00     		lsls	r3, r3, #1
 950 02ea 0B44     		add	r3, r3, r1
 951 02ec 9B00     		lsls	r3, r3, #2
 952 02ee 1A44     		add	r2, r2, r3
 953 02f0 0346     		mov	r3, r0
 954 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 955 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 156:pathfinding.c ****         pqSize--; // decrement pqSize
 956              		.loc 1 156 0
 957 02f8 07F5B553 		add	r3, r7, #5792
 958 02fc 03F10C03 		add	r3, r3, #12
 959 0300 1B68     		ldr	r3, [r3]
 960 0302 013B     		subs	r3, r3, #1
 961 0304 07F5B552 		add	r2, r7, #5792
 962 0308 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 21


 963 030c 1360     		str	r3, [r2]
 157:pathfinding.c **** 
 158:pathfinding.c ****         int row = current.location.row;
 964              		.loc 1 158 0
 965 030e 07F11803 		add	r3, r7, #24
 966 0312 083B     		subs	r3, r3, #8
 967 0314 1B68     		ldr	r3, [r3]
 968 0316 07F5B352 		add	r2, r7, #5728
 969 031a 02F11C02 		add	r2, r2, #28
 970 031e 1360     		str	r3, [r2]
 159:pathfinding.c ****         int col = current.location.col; // get current location details
 971              		.loc 1 159 0
 972 0320 07F11803 		add	r3, r7, #24
 973 0324 083B     		subs	r3, r3, #8
 974 0326 5B68     		ldr	r3, [r3, #4]
 975 0328 07F5B352 		add	r2, r7, #5728
 976 032c 02F11802 		add	r2, r2, #24
 977 0330 1360     		str	r3, [r2]
 160:pathfinding.c **** 
 161:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 978              		.loc 1 161 0
 979 0332 07F58F51 		add	r1, r7, #4576
 980 0336 01F10C01 		add	r1, r1, #12
 981 033a 07F5B353 		add	r3, r7, #5728
 982 033e 03F11C03 		add	r3, r3, #28
 983 0342 1A68     		ldr	r2, [r3]
 984 0344 1346     		mov	r3, r2
 985 0346 DB00     		lsls	r3, r3, #3
 986 0348 1344     		add	r3, r3, r2
 987 034a 5B00     		lsls	r3, r3, #1
 988 034c 1344     		add	r3, r3, r2
 989 034e 07F5B352 		add	r2, r7, #5728
 990 0352 02F11802 		add	r2, r2, #24
 991 0356 1268     		ldr	r2, [r2]
 992 0358 1344     		add	r3, r3, r2
 993 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 994 035e 012B     		cmp	r3, #1
 995 0360 40F03F81 		bne	.L27
 162:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 996              		.loc 1 162 0
 997 0364 07F58F51 		add	r1, r7, #4576
 998 0368 01F10C01 		add	r1, r1, #12
 999 036c 07F5B353 		add	r3, r7, #5728
 1000 0370 03F11C03 		add	r3, r3, #28
 1001 0374 1A68     		ldr	r2, [r3]
 1002 0376 1346     		mov	r3, r2
 1003 0378 DB00     		lsls	r3, r3, #3
 1004 037a 1344     		add	r3, r3, r2
 1005 037c 5B00     		lsls	r3, r3, #1
 1006 037e 1344     		add	r3, r3, r2
 1007 0380 07F5B352 		add	r2, r7, #5728
 1008 0384 02F11802 		add	r2, r2, #24
 1009 0388 1268     		ldr	r2, [r2]
 1010 038a 1344     		add	r3, r3, r2
 1011 038c 0022     		movs	r2, #0
 1012 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 163:pathfinding.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 22


 164:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1013              		.loc 1 164 0
 1014 0392 07F5B653 		add	r3, r7, #5824
 1015 0396 03F10C03 		add	r3, r3, #12
 1016 039a 1A68     		ldr	r2, [r3]
 1017 039c 07F5B353 		add	r3, r7, #5728
 1018 03a0 03F11C03 		add	r3, r3, #28
 1019 03a4 1B68     		ldr	r3, [r3]
 1020 03a6 9A42     		cmp	r2, r3
 1021 03a8 0CD1     		bne	.L32
 1022              		.loc 1 164 0 is_stmt 0 discriminator 1
 1023 03aa 07F5B653 		add	r3, r7, #5824
 1024 03ae 03F11003 		add	r3, r3, #16
 1025 03b2 1A68     		ldr	r2, [r3]
 1026 03b4 07F5B353 		add	r3, r7, #5728
 1027 03b8 03F11803 		add	r3, r3, #24
 1028 03bc 1B68     		ldr	r3, [r3]
 1029 03be 9A42     		cmp	r2, r3
 1030 03c0 00F01881 		beq	.L43
 1031              	.L32:
 1032              	.LBB12:
 165:pathfinding.c ****                 break; // if reached target destination, end
 166:pathfinding.c ****             }
 167:pathfinding.c ****             // make a move, check if valid
 168:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1033              		.loc 1 168 0 is_stmt 1
 1034 03c4 0023     		movs	r3, #0
 1035 03c6 07F5B452 		add	r2, r7, #5760
 1036 03ca 02F11402 		add	r2, r2, #20
 1037 03ce 1360     		str	r3, [r2]
 1038 03d0 FFE0     		b	.L34
 1039              	.L36:
 1040              	.LBB13:
 169:pathfinding.c ****                 int newRow = row + moves[i].row;
 1041              		.loc 1 169 0
 1042 03d2 D04A     		ldr	r2, .L44
 1043 03d4 07F5B453 		add	r3, r7, #5760
 1044 03d8 03F11403 		add	r3, r3, #20
 1045 03dc 1B68     		ldr	r3, [r3]
 1046 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1047 03e2 07F5B353 		add	r3, r7, #5728
 1048 03e6 03F11C03 		add	r3, r3, #28
 1049 03ea 1B68     		ldr	r3, [r3]
 1050 03ec 1344     		add	r3, r3, r2
 1051 03ee 07F5B352 		add	r2, r7, #5728
 1052 03f2 02F11402 		add	r2, r2, #20
 1053 03f6 1360     		str	r3, [r2]
 170:pathfinding.c ****                 int newCol = col + moves[i].col;
 1054              		.loc 1 170 0
 1055 03f8 C64A     		ldr	r2, .L44
 1056 03fa 07F5B453 		add	r3, r7, #5760
 1057 03fe 03F11403 		add	r3, r3, #20
 1058 0402 1B68     		ldr	r3, [r3]
 1059 0404 DB00     		lsls	r3, r3, #3
 1060 0406 1344     		add	r3, r3, r2
 1061 0408 5A68     		ldr	r2, [r3, #4]
 1062 040a 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 23


 1063 040e 03F11803 		add	r3, r3, #24
 1064 0412 1B68     		ldr	r3, [r3]
 1065 0414 1344     		add	r3, r3, r2
 1066 0416 07F5B352 		add	r2, r7, #5728
 1067 041a 02F11002 		add	r2, r2, #16
 1068 041e 1360     		str	r3, [r2]
 171:pathfinding.c **** 
 172:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1069              		.loc 1 172 0
 1070 0420 07F11803 		add	r3, r7, #24
 1071 0424 0C3B     		subs	r3, r3, #12
 1072 0426 1B68     		ldr	r3, [r3]
 1073 0428 0093     		str	r3, [sp]
 1074 042a 1323     		movs	r3, #19
 1075 042c 0F22     		movs	r2, #15
 1076 042e 07F5B351 		add	r1, r7, #5728
 1077 0432 01F11001 		add	r1, r1, #16
 1078 0436 0968     		ldr	r1, [r1]
 1079 0438 07F5B350 		add	r0, r7, #5728
 1080 043c 00F11400 		add	r0, r0, #20
 1081 0440 0068     		ldr	r0, [r0]
 1082 0442 FFF7FEFF 		bl	isValidMove
 1083 0446 0346     		mov	r3, r0
 1084 0448 002B     		cmp	r3, #0
 1085 044a 00F0B780 		beq	.L35
 1086              		.loc 1 172 0 is_stmt 0 discriminator 1
 1087 044e 07F58F51 		add	r1, r7, #4576
 1088 0452 01F10C01 		add	r1, r1, #12
 1089 0456 07F5B353 		add	r3, r7, #5728
 1090 045a 03F11403 		add	r3, r3, #20
 1091 045e 1A68     		ldr	r2, [r3]
 1092 0460 1346     		mov	r3, r2
 1093 0462 DB00     		lsls	r3, r3, #3
 1094 0464 1344     		add	r3, r3, r2
 1095 0466 5B00     		lsls	r3, r3, #1
 1096 0468 1344     		add	r3, r3, r2
 1097 046a 07F5B352 		add	r2, r7, #5728
 1098 046e 02F11002 		add	r2, r2, #16
 1099 0472 1268     		ldr	r2, [r2]
 1100 0474 1344     		add	r3, r3, r2
 1101 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1102 047a 012B     		cmp	r3, #1
 1103 047c 40F09E80 		bne	.L35
 1104              	.LBB14:
 173:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1105              		.loc 1 173 0 is_stmt 1
 1106 0480 07F13802 		add	r2, r7, #56
 1107 0484 1C3A     		subs	r2, r2, #28
 1108 0486 07F5B353 		add	r3, r7, #5728
 1109 048a 03F11C03 		add	r3, r3, #28
 1110 048e 1968     		ldr	r1, [r3]
 1111 0490 0B46     		mov	r3, r1
 1112 0492 DB00     		lsls	r3, r3, #3
 1113 0494 0B44     		add	r3, r3, r1
 1114 0496 5B00     		lsls	r3, r3, #1
 1115 0498 0B44     		add	r3, r3, r1
 1116 049a 07F5B351 		add	r1, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 24


 1117 049e 01F11801 		add	r1, r1, #24
 1118 04a2 0968     		ldr	r1, [r1]
 1119 04a4 0B44     		add	r3, r3, r1
 1120 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1121 04aa 0133     		adds	r3, r3, #1
 1122 04ac 07F5B352 		add	r2, r7, #5728
 1123 04b0 02F10C02 		add	r2, r2, #12
 1124 04b4 1360     		str	r3, [r2]
 174:pathfinding.c ****                     // take the shortest distance between new and existing
 175:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1125              		.loc 1 175 0
 1126 04b6 07F13802 		add	r2, r7, #56
 1127 04ba 1C3A     		subs	r2, r2, #28
 1128 04bc 07F5B353 		add	r3, r7, #5728
 1129 04c0 03F11403 		add	r3, r3, #20
 1130 04c4 1968     		ldr	r1, [r3]
 1131 04c6 0B46     		mov	r3, r1
 1132 04c8 DB00     		lsls	r3, r3, #3
 1133 04ca 0B44     		add	r3, r3, r1
 1134 04cc 5B00     		lsls	r3, r3, #1
 1135 04ce 0B44     		add	r3, r3, r1
 1136 04d0 07F5B351 		add	r1, r7, #5728
 1137 04d4 01F11001 		add	r1, r1, #16
 1138 04d8 0968     		ldr	r1, [r1]
 1139 04da 0B44     		add	r3, r3, r1
 1140 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1141 04e0 07F5B353 		add	r3, r7, #5728
 1142 04e4 03F10C03 		add	r3, r3, #12
 1143 04e8 1B68     		ldr	r3, [r3]
 1144 04ea 9A42     		cmp	r2, r3
 1145 04ec 66DD     		ble	.L35
 176:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1146              		.loc 1 176 0
 1147 04ee 07F13802 		add	r2, r7, #56
 1148 04f2 1C3A     		subs	r2, r2, #28
 1149 04f4 07F5B353 		add	r3, r7, #5728
 1150 04f8 03F11403 		add	r3, r3, #20
 1151 04fc 1968     		ldr	r1, [r3]
 1152 04fe 0B46     		mov	r3, r1
 1153 0500 DB00     		lsls	r3, r3, #3
 1154 0502 0B44     		add	r3, r3, r1
 1155 0504 5B00     		lsls	r3, r3, #1
 1156 0506 0B44     		add	r3, r3, r1
 1157 0508 07F5B351 		add	r1, r7, #5728
 1158 050c 01F11001 		add	r1, r1, #16
 1159 0510 0968     		ldr	r1, [r1]
 1160 0512 0B44     		add	r3, r3, r1
 1161 0514 07F5B351 		add	r1, r7, #5728
 1162 0518 01F10C01 		add	r1, r1, #12
 1163 051c 0968     		ldr	r1, [r1]
 1164 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 177:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 178:pathfinding.c ****                         
 179:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1165              		.loc 1 179 0
 1166 0522 07F59362 		add	r2, r7, #1176
 1167 0526 083A     		subs	r2, r2, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 25


 1168 0528 07F5B553 		add	r3, r7, #5792
 1169 052c 03F10C03 		add	r3, r3, #12
 1170 0530 1968     		ldr	r1, [r3]
 1171 0532 0B46     		mov	r3, r1
 1172 0534 5B00     		lsls	r3, r3, #1
 1173 0536 0B44     		add	r3, r3, r1
 1174 0538 9B00     		lsls	r3, r3, #2
 1175 053a 1344     		add	r3, r3, r2
 1176 053c 07F5B352 		add	r2, r7, #5728
 1177 0540 02F11402 		add	r2, r2, #20
 1178 0544 1268     		ldr	r2, [r2]
 1179 0546 1A60     		str	r2, [r3]
 180:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1180              		.loc 1 180 0
 1181 0548 07F59362 		add	r2, r7, #1176
 1182 054c 083A     		subs	r2, r2, #8
 1183 054e 07F5B553 		add	r3, r7, #5792
 1184 0552 03F10C03 		add	r3, r3, #12
 1185 0556 1968     		ldr	r1, [r3]
 1186 0558 0B46     		mov	r3, r1
 1187 055a 5B00     		lsls	r3, r3, #1
 1188 055c 0B44     		add	r3, r3, r1
 1189 055e 9B00     		lsls	r3, r3, #2
 1190 0560 1344     		add	r3, r3, r2
 1191 0562 0433     		adds	r3, r3, #4
 1192 0564 07F5B352 		add	r2, r7, #5728
 1193 0568 02F11002 		add	r2, r2, #16
 1194 056c 1268     		ldr	r2, [r2]
 1195 056e 1A60     		str	r2, [r3]
 181:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1196              		.loc 1 181 0
 1197 0570 07F59362 		add	r2, r7, #1176
 1198 0574 083A     		subs	r2, r2, #8
 1199 0576 07F5B553 		add	r3, r7, #5792
 1200 057a 03F10C03 		add	r3, r3, #12
 1201 057e 1968     		ldr	r1, [r3]
 1202 0580 0B46     		mov	r3, r1
 1203 0582 5B00     		lsls	r3, r3, #1
 1204 0584 0B44     		add	r3, r3, r1
 1205 0586 9B00     		lsls	r3, r3, #2
 1206 0588 1344     		add	r3, r3, r2
 1207 058a 0833     		adds	r3, r3, #8
 1208 058c 07F5B352 		add	r2, r7, #5728
 1209 0590 02F10C02 		add	r2, r2, #12
 1210 0594 1268     		ldr	r2, [r2]
 1211 0596 1A60     		str	r2, [r3]
 182:pathfinding.c ****                         
 183:pathfinding.c ****                         stepNum++;
 1212              		.loc 1 183 0
 1213 0598 07F5B553 		add	r3, r7, #5792
 1214 059c 1B68     		ldr	r3, [r3]
 1215 059e 0133     		adds	r3, r3, #1
 1216 05a0 07F5B552 		add	r2, r7, #5792
 1217 05a4 1360     		str	r3, [r2]
 184:pathfinding.c ****                         pqSize++;
 1218              		.loc 1 184 0
 1219 05a6 07F5B553 		add	r3, r7, #5792
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 26


 1220 05aa 03F10C03 		add	r3, r3, #12
 1221 05ae 1B68     		ldr	r3, [r3]
 1222 05b0 0133     		adds	r3, r3, #1
 1223 05b2 07F5B552 		add	r2, r7, #5792
 1224 05b6 02F10C02 		add	r2, r2, #12
 1225 05ba 1360     		str	r3, [r2]
 1226              	.L35:
 1227              	.LBE14:
 1228              	.LBE13:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1229              		.loc 1 168 0 discriminator 2
 1230 05bc 07F5B453 		add	r3, r7, #5760
 1231 05c0 03F11403 		add	r3, r3, #20
 1232 05c4 1B68     		ldr	r3, [r3]
 1233 05c6 0133     		adds	r3, r3, #1
 1234 05c8 07F5B452 		add	r2, r7, #5760
 1235 05cc 02F11402 		add	r2, r2, #20
 1236 05d0 1360     		str	r3, [r2]
 1237              	.L34:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1238              		.loc 1 168 0 is_stmt 0 discriminator 1
 1239 05d2 07F5B453 		add	r3, r7, #5760
 1240 05d6 03F11403 		add	r3, r3, #20
 1241 05da 1B68     		ldr	r3, [r3]
 1242 05dc 032B     		cmp	r3, #3
 1243 05de 7FF6F8AE 		bls	.L36
 1244              	.L27:
 1245              	.LBE12:
 1246              	.LBE10:
 147:pathfinding.c ****         int idx = 0;
 1247              		.loc 1 147 0 is_stmt 1
 1248 05e2 07F5B553 		add	r3, r7, #5792
 1249 05e6 03F10C03 		add	r3, r3, #12
 1250 05ea 1B68     		ldr	r3, [r3]
 1251 05ec 002B     		cmp	r3, #0
 1252 05ee 3FF702AE 		bgt	.L37
 1253 05f2 00E0     		b	.L33
 1254              	.L43:
 1255              	.LBB15:
 165:pathfinding.c ****             }
 1256              		.loc 1 165 0
 1257 05f4 00BF     		nop
 1258              	.L33:
 1259              	.LBE15:
 185:pathfinding.c ****                     }
 186:pathfinding.c ****                 }
 187:pathfinding.c ****             }
 188:pathfinding.c ****         }
 189:pathfinding.c ****     }
 190:pathfinding.c **** 
 191:pathfinding.c ****     // PATH RECONSTRUCTION
 192:pathfinding.c ****     // initialise maximum distance- will be decremented
 193:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1260              		.loc 1 193 0
 1261 05f6 07F5B653 		add	r3, r7, #5824
 1262 05fa 03F10C03 		add	r3, r3, #12
 1263 05fe 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 27


 1264 0600 07F5B653 		add	r3, r7, #5824
 1265 0604 03F11003 		add	r3, r3, #16
 1266 0608 1868     		ldr	r0, [r3]
 1267 060a 07F13802 		add	r2, r7, #56
 1268 060e 1C3A     		subs	r2, r2, #28
 1269 0610 0B46     		mov	r3, r1
 1270 0612 DB00     		lsls	r3, r3, #3
 1271 0614 0B44     		add	r3, r3, r1
 1272 0616 5B00     		lsls	r3, r3, #1
 1273 0618 0B44     		add	r3, r3, r1
 1274 061a 0344     		add	r3, r3, r0
 1275 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1276 0620 07F5B452 		add	r2, r7, #5760
 1277 0624 02F11002 		add	r2, r2, #16
 1278 0628 1360     		str	r3, [r2]
 194:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1279              		.loc 1 194 0
 1280 062a 3B4A     		ldr	r2, .L44+4
 1281 062c 07F5B453 		add	r3, r7, #5760
 1282 0630 03F11003 		add	r3, r3, #16
 1283 0634 1B68     		ldr	r3, [r3]
 1284 0636 1360     		str	r3, [r2]
 195:pathfinding.c ****     // retsteps can be generated from here
 196:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1285              		.loc 1 196 0
 1286 0638 07F5B453 		add	r3, r7, #5760
 1287 063c 03F11003 		add	r3, r3, #16
 1288 0640 1B68     		ldr	r3, [r3]
 1289 0642 DB00     		lsls	r3, r3, #3
 1290 0644 1846     		mov	r0, r3
 1291 0646 FFF7FEFF 		bl	malloc
 1292 064a 0346     		mov	r3, r0
 1293 064c 07F5B352 		add	r2, r7, #5728
 1294 0650 02F10802 		add	r2, r2, #8
 1295 0654 1360     		str	r3, [r2]
 197:pathfinding.c ****     int currentRow = targetlocation.row;
 1296              		.loc 1 197 0
 1297 0656 07F5B653 		add	r3, r7, #5824
 1298 065a 03F10C03 		add	r3, r3, #12
 1299 065e 1B68     		ldr	r3, [r3]
 1300 0660 07F5B452 		add	r2, r7, #5760
 1301 0664 02F10C02 		add	r2, r2, #12
 1302 0668 1360     		str	r3, [r2]
 198:pathfinding.c ****     int currentCol = targetlocation.col;
 1303              		.loc 1 198 0
 1304 066a 07F5B653 		add	r3, r7, #5824
 1305 066e 03F11003 		add	r3, r3, #16
 1306 0672 1B68     		ldr	r3, [r3]
 1307 0674 07F5B452 		add	r2, r7, #5760
 1308 0678 02F10802 		add	r2, r2, #8
 1309 067c 1360     		str	r3, [r2]
 199:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1310              		.loc 1 199 0
 1311 067e 07F5B453 		add	r3, r7, #5760
 1312 0682 03F11003 		add	r3, r3, #16
 1313 0686 1B68     		ldr	r3, [r3]
 1314 0688 03F10053 		add	r3, r3, #536870912
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 28


 1315 068c 013B     		subs	r3, r3, #1
 1316 068e DB00     		lsls	r3, r3, #3
 1317 0690 07F5B352 		add	r2, r7, #5728
 1318 0694 02F10802 		add	r2, r2, #8
 1319 0698 1268     		ldr	r2, [r2]
 1320 069a 1344     		add	r3, r3, r2
 1321 069c 07F5B452 		add	r2, r7, #5760
 1322 06a0 02F10C02 		add	r2, r2, #12
 1323 06a4 1268     		ldr	r2, [r2]
 1324 06a6 1A60     		str	r2, [r3]
 200:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1325              		.loc 1 200 0
 1326 06a8 07F5B453 		add	r3, r7, #5760
 1327 06ac 03F11003 		add	r3, r3, #16
 1328 06b0 1B68     		ldr	r3, [r3]
 1329 06b2 03F10053 		add	r3, r3, #536870912
 1330 06b6 013B     		subs	r3, r3, #1
 1331 06b8 DB00     		lsls	r3, r3, #3
 1332 06ba 07F5B352 		add	r2, r7, #5728
 1333 06be 02F10802 		add	r2, r2, #8
 1334 06c2 1268     		ldr	r2, [r2]
 1335 06c4 1344     		add	r3, r3, r2
 1336 06c6 07F5B452 		add	r2, r7, #5760
 1337 06ca 02F10802 		add	r2, r2, #8
 1338 06ce 1268     		ldr	r2, [r2]
 1339 06d0 5A60     		str	r2, [r3, #4]
 201:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 202:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1340              		.loc 1 202 0
 1341 06d2 07F5B453 		add	r3, r7, #5760
 1342 06d6 03F10C03 		add	r3, r3, #12
 1343 06da 1B68     		ldr	r3, [r3]
 1344 06dc 4C22     		movs	r2, #76
 1345 06de 02FB03F2 		mul	r2, r2, r3
 1346 06e2 07F11803 		add	r3, r7, #24
 1347 06e6 0C3B     		subs	r3, r3, #12
 1348 06e8 1B68     		ldr	r3, [r3]
 1349 06ea 1344     		add	r3, r3, r2
 1350 06ec 07F5B452 		add	r2, r7, #5760
 1351 06f0 02F10802 		add	r2, r2, #8
 1352 06f4 1268     		ldr	r2, [r2]
 1353 06f6 0921     		movs	r1, #9
 1354 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 203:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 204:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 205:pathfinding.c ****     int pathIndex = 0;
 1355              		.loc 1 205 0
 1356 06fc 0023     		movs	r3, #0
 1357 06fe 07F5B452 		add	r2, r7, #5760
 1358 0702 02F10402 		add	r2, r2, #4
 1359 0706 1360     		str	r3, [r2]
 206:pathfinding.c **** 
 207:pathfinding.c ****     while(shortestDist > 0) {    
 1360              		.loc 1 207 0
 1361 0708 0BE1     		b	.L38
 1362              	.L42:
 1363              	.LBB16:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 29


 208:pathfinding.c ****         // make a move, check if valid and is the next step in path
 209:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1364              		.loc 1 209 0
 1365 070a 0023     		movs	r3, #0
 1366 070c 07F5B452 		add	r2, r7, #5760
 1367 0710 1360     		str	r3, [r2]
 1368 0712 00E1     		b	.L39
 1369              	.L45:
 1370              		.align	2
 1371              	.L44:
 1372 0714 00000000 		.word	moves
 1373 0718 D0110000 		.word	numSteps
 1374              	.L41:
 1375              	.LBB17:
 210:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1376              		.loc 1 210 0
 1377 071c 894A     		ldr	r2, .L46
 1378 071e 07F5B453 		add	r3, r7, #5760
 1379 0722 1B68     		ldr	r3, [r3]
 1380 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1381 0728 07F5B453 		add	r3, r7, #5760
 1382 072c 03F10C03 		add	r3, r3, #12
 1383 0730 1B68     		ldr	r3, [r3]
 1384 0732 1344     		add	r3, r3, r2
 1385 0734 07F5B352 		add	r2, r7, #5728
 1386 0738 02F10402 		add	r2, r2, #4
 1387 073c 1360     		str	r3, [r2]
 211:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1388              		.loc 1 211 0
 1389 073e 814A     		ldr	r2, .L46
 1390 0740 07F5B453 		add	r3, r7, #5760
 1391 0744 1B68     		ldr	r3, [r3]
 1392 0746 DB00     		lsls	r3, r3, #3
 1393 0748 1344     		add	r3, r3, r2
 1394 074a 5A68     		ldr	r2, [r3, #4]
 1395 074c 07F5B453 		add	r3, r7, #5760
 1396 0750 03F10803 		add	r3, r3, #8
 1397 0754 1B68     		ldr	r3, [r3]
 1398 0756 1344     		add	r3, r3, r2
 1399 0758 07F5B352 		add	r2, r7, #5728
 1400 075c 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1401              		.loc 1 213 0
 1402 075e 07F11803 		add	r3, r7, #24
 1403 0762 0C3B     		subs	r3, r3, #12
 1404 0764 1B68     		ldr	r3, [r3]
 1405 0766 0093     		str	r3, [sp]
 1406 0768 1323     		movs	r3, #19
 1407 076a 0F22     		movs	r2, #15
 1408 076c 07F5B351 		add	r1, r7, #5728
 1409 0770 0968     		ldr	r1, [r1]
 1410 0772 07F5B350 		add	r0, r7, #5728
 1411 0776 00F10400 		add	r0, r0, #4
 1412 077a 0068     		ldr	r0, [r0]
 1413 077c FFF7FEFF 		bl	isValidMove
 1414 0780 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 30


 1415 0782 002B     		cmp	r3, #0
 1416 0784 00F0C080 		beq	.L40
 1417              		.loc 1 213 0 is_stmt 0 discriminator 1
 1418 0788 07F13802 		add	r2, r7, #56
 1419 078c 1C3A     		subs	r2, r2, #28
 1420 078e 07F5B353 		add	r3, r7, #5728
 1421 0792 03F10403 		add	r3, r3, #4
 1422 0796 1968     		ldr	r1, [r3]
 1423 0798 0B46     		mov	r3, r1
 1424 079a DB00     		lsls	r3, r3, #3
 1425 079c 0B44     		add	r3, r3, r1
 1426 079e 5B00     		lsls	r3, r3, #1
 1427 07a0 0B44     		add	r3, r3, r1
 1428 07a2 07F5B351 		add	r1, r7, #5728
 1429 07a6 0968     		ldr	r1, [r1]
 1430 07a8 0B44     		add	r3, r3, r1
 1431 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1432 07ae 07F5B453 		add	r3, r7, #5760
 1433 07b2 03F11003 		add	r3, r3, #16
 1434 07b6 1B68     		ldr	r3, [r3]
 1435 07b8 013B     		subs	r3, r3, #1
 1436 07ba 9A42     		cmp	r2, r3
 1437 07bc 40F0A480 		bne	.L40
 214:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1438              		.loc 1 214 0 is_stmt 1
 1439 07c0 07F5B353 		add	r3, r7, #5728
 1440 07c4 03F10403 		add	r3, r3, #4
 1441 07c8 1B68     		ldr	r3, [r3]
 1442 07ca 4C22     		movs	r2, #76
 1443 07cc 02FB03F2 		mul	r2, r2, r3
 1444 07d0 07F11803 		add	r3, r7, #24
 1445 07d4 0C3B     		subs	r3, r3, #12
 1446 07d6 1B68     		ldr	r3, [r3]
 1447 07d8 1344     		add	r3, r3, r2
 1448 07da 07F5B352 		add	r2, r7, #5728
 1449 07de 1268     		ldr	r2, [r2]
 1450 07e0 0821     		movs	r1, #8
 1451 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 215:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1452              		.loc 1 215 0
 1453 07e6 5849     		ldr	r1, .L46+4
 1454 07e8 07F5B453 		add	r3, r7, #5760
 1455 07ec 03F10403 		add	r3, r3, #4
 1456 07f0 1B68     		ldr	r3, [r3]
 1457 07f2 07F5B352 		add	r2, r7, #5728
 1458 07f6 02F10402 		add	r2, r2, #4
 1459 07fa 1268     		ldr	r2, [r2]
 1460 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 216:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1461              		.loc 1 216 0
 1462 0800 514A     		ldr	r2, .L46+4
 1463 0802 07F5B453 		add	r3, r7, #5760
 1464 0806 03F10403 		add	r3, r3, #4
 1465 080a 1B68     		ldr	r3, [r3]
 1466 080c DB00     		lsls	r3, r3, #3
 1467 080e 1344     		add	r3, r3, r2
 1468 0810 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 31


 1469 0814 1268     		ldr	r2, [r2]
 1470 0816 5A60     		str	r2, [r3, #4]
 217:pathfinding.c ****                 pathIndex++;
 1471              		.loc 1 217 0
 1472 0818 07F5B453 		add	r3, r7, #5760
 1473 081c 03F10403 		add	r3, r3, #4
 1474 0820 1B68     		ldr	r3, [r3]
 1475 0822 0133     		adds	r3, r3, #1
 1476 0824 07F5B452 		add	r2, r7, #5760
 1477 0828 02F10402 		add	r2, r2, #4
 1478 082c 1360     		str	r3, [r2]
 218:pathfinding.c ****                 // reverse array somewhere
 219:pathfinding.c **** 
 220:pathfinding.c ****                 shortestDist--; // decrement distance
 1479              		.loc 1 220 0
 1480 082e 07F5B453 		add	r3, r7, #5760
 1481 0832 03F11003 		add	r3, r3, #16
 1482 0836 1B68     		ldr	r3, [r3]
 1483 0838 013B     		subs	r3, r3, #1
 1484 083a 07F5B452 		add	r2, r7, #5760
 1485 083e 02F11002 		add	r2, r2, #16
 1486 0842 1360     		str	r3, [r2]
 221:pathfinding.c ****                 currentRow = newRow; 
 1487              		.loc 1 221 0
 1488 0844 07F5B353 		add	r3, r7, #5728
 1489 0848 03F10403 		add	r3, r3, #4
 1490 084c 1B68     		ldr	r3, [r3]
 1491 084e 07F5B452 		add	r2, r7, #5760
 1492 0852 02F10C02 		add	r2, r2, #12
 1493 0856 1360     		str	r3, [r2]
 222:pathfinding.c ****                 currentCol = newCol; // change current location
 1494              		.loc 1 222 0
 1495 0858 07F5B353 		add	r3, r7, #5728
 1496 085c 1B68     		ldr	r3, [r3]
 1497 085e 07F5B452 		add	r2, r7, #5760
 1498 0862 02F10802 		add	r2, r2, #8
 1499 0866 1360     		str	r3, [r2]
 223:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 224:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1500              		.loc 1 224 0
 1501 0868 07F5B453 		add	r3, r7, #5760
 1502 086c 03F11003 		add	r3, r3, #16
 1503 0870 1B68     		ldr	r3, [r3]
 1504 0872 DB00     		lsls	r3, r3, #3
 1505 0874 07F5B352 		add	r2, r7, #5728
 1506 0878 02F10802 		add	r2, r2, #8
 1507 087c 1268     		ldr	r2, [r2]
 1508 087e 1344     		add	r3, r3, r2
 1509 0880 07F5B452 		add	r2, r7, #5760
 1510 0884 02F10C02 		add	r2, r2, #12
 1511 0888 1268     		ldr	r2, [r2]
 1512 088a 1A60     		str	r2, [r3]
 225:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1513              		.loc 1 225 0
 1514 088c 07F5B453 		add	r3, r7, #5760
 1515 0890 03F11003 		add	r3, r3, #16
 1516 0894 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 32


 1517 0896 DB00     		lsls	r3, r3, #3
 1518 0898 07F5B352 		add	r2, r7, #5728
 1519 089c 02F10802 		add	r2, r2, #8
 1520 08a0 1268     		ldr	r2, [r2]
 1521 08a2 1344     		add	r3, r3, r2
 1522 08a4 07F5B452 		add	r2, r7, #5760
 1523 08a8 02F10802 		add	r2, r2, #8
 1524 08ac 1268     		ldr	r2, [r2]
 1525 08ae 5A60     		str	r2, [r3, #4]
 226:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1526              		.loc 1 226 0
 1527 08b0 07F11803 		add	r3, r7, #24
 1528 08b4 143B     		subs	r3, r3, #20
 1529 08b6 1A68     		ldr	r2, [r3]
 1530 08b8 07F5B453 		add	r3, r7, #5760
 1531 08bc 03F10C03 		add	r3, r3, #12
 1532 08c0 1B68     		ldr	r3, [r3]
 1533 08c2 9A42     		cmp	r2, r3
 1534 08c4 20D1     		bne	.L40
 1535              		.loc 1 226 0 is_stmt 0 discriminator 1
 1536 08c6 07F11803 		add	r3, r7, #24
 1537 08ca 143B     		subs	r3, r3, #20
 1538 08cc 5A68     		ldr	r2, [r3, #4]
 1539 08ce 07F5B453 		add	r3, r7, #5760
 1540 08d2 03F10803 		add	r3, r3, #8
 1541 08d6 1B68     		ldr	r3, [r3]
 1542 08d8 9A42     		cmp	r2, r3
 1543 08da 15D1     		bne	.L40
 227:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1544              		.loc 1 227 0 is_stmt 1
 1545 08dc 07F5B453 		add	r3, r7, #5760
 1546 08e0 03F10C03 		add	r3, r3, #12
 1547 08e4 1B68     		ldr	r3, [r3]
 1548 08e6 4C22     		movs	r2, #76
 1549 08e8 02FB03F2 		mul	r2, r2, r3
 1550 08ec 07F11803 		add	r3, r7, #24
 1551 08f0 0C3B     		subs	r3, r3, #12
 1552 08f2 1B68     		ldr	r3, [r3]
 1553 08f4 1344     		add	r3, r3, r2
 1554 08f6 07F5B452 		add	r2, r7, #5760
 1555 08fa 02F10802 		add	r2, r2, #8
 1556 08fe 1268     		ldr	r2, [r2]
 1557 0900 0221     		movs	r1, #2
 1558 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 228:pathfinding.c ****                     break;
 1559              		.loc 1 228 0
 1560 0906 0CE0     		b	.L38
 1561              	.L40:
 1562              	.LBE17:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1563              		.loc 1 209 0 discriminator 2
 1564 0908 07F5B453 		add	r3, r7, #5760
 1565 090c 1B68     		ldr	r3, [r3]
 1566 090e 0133     		adds	r3, r3, #1
 1567 0910 07F5B452 		add	r2, r7, #5760
 1568 0914 1360     		str	r3, [r2]
 1569              	.L39:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 33


 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1570              		.loc 1 209 0 is_stmt 0 discriminator 1
 1571 0916 07F5B453 		add	r3, r7, #5760
 1572 091a 1B68     		ldr	r3, [r3]
 1573 091c 032B     		cmp	r3, #3
 1574 091e 7FF6FDAE 		bls	.L41
 1575              	.L38:
 1576              	.LBE16:
 207:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1577              		.loc 1 207 0 is_stmt 1
 1578 0922 07F5B453 		add	r3, r7, #5760
 1579 0926 03F11003 		add	r3, r3, #16
 1580 092a 1B68     		ldr	r3, [r3]
 1581 092c 002B     		cmp	r3, #0
 1582 092e 3FF7ECAE 		bgt	.L42
 229:pathfinding.c ****                 }   
 230:pathfinding.c ****             }
 231:pathfinding.c ****         }
 232:pathfinding.c ****     }
 233:pathfinding.c **** }
 1583              		.loc 1 233 0
 1584 0932 00BF     		nop
 1585 0934 07F5B557 		add	r7, r7, #5792
 1586 0938 1C37     		adds	r7, r7, #28
 1587              		.cfi_def_cfa_offset 20
 1588 093a BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 093c BDE89040 		pop	{r4, r7, lr}
 1592              		.cfi_restore 14
 1593              		.cfi_restore 7
 1594              		.cfi_restore 4
 1595              		.cfi_def_cfa_offset 8
 1596 0940 02B0     		add	sp, sp, #8
 1597              		.cfi_def_cfa_offset 0
 1598 0942 7047     		bx	lr
 1599              	.L47:
 1600              		.align	2
 1601              	.L46:
 1602 0944 00000000 		.word	moves
 1603 0948 00000000 		.word	list_of_optimal_coordinates
 1604              		.cfi_endproc
 1605              	.LFE4:
 1606              		.size	dijkstra, .-dijkstra
 1607              		.global	ignoreR
 1608              		.bss
 1609              		.align	2
 1610              		.type	ignoreR, %object
 1611              		.size	ignoreR, 4
 1612              	ignoreR:
 1613 11d4 00000000 		.space	4
 1614              		.global	ignoreL
 1615              		.align	2
 1616              		.type	ignoreL, %object
 1617              		.size	ignoreL, 4
 1618              	ignoreL:
 1619 11d8 00000000 		.space	4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 34


 1620              		.section	.rodata
 1621 0003 00       		.align	2
 1622              	.LC1:
 1623 0004 53746F70 		.ascii	"Stop at target\000"
 1623      20617420 
 1623      74617267 
 1623      657400
 1624 0013 00       		.align	2
 1625              	.LC2:
 1626 0014 52696768 		.ascii	"Right Turn\000"
 1626      74205475 
 1626      726E00
 1627 001f 00       		.align	2
 1628              	.LC3:
 1629 0020 4C656674 		.ascii	"Left Turn\000"
 1629      20547572 
 1629      6E00
 1630 002a 0000     		.align	2
 1631              	.LC4:
 1632 002c 466F7277 		.ascii	"Forward until target\000"
 1632      61726420 
 1632      756E7469 
 1632      6C207461 
 1632      72676574 
 1633 0041 000000   		.align	2
 1634              	.LC5:
 1635 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1635      6172643B 
 1635      2069676E 
 1635      6F726520 
 1635      25644C2C 
 1636 0065 000000   		.align	2
 1637              	.LC6:
 1638 0068 552D7475 		.ascii	"U-turn\000"
 1638      726E00
 1639              		.section	.text.getPathInstructions,"ax",%progbits
 1640              		.align	2
 1641              		.global	getPathInstructions
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	getPathInstructions, %function
 1645              	getPathInstructions:
 1646              	.LFB5:
 234:pathfinding.c **** 
 235:pathfinding.c **** 
 236:pathfinding.c **** 
 237:pathfinding.c **** // PATHFINDING PROCESSING *====================
 238:pathfinding.c **** 
 239:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 240:pathfinding.c **** 
 241:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 242:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1647              		.loc 1 242 0
 1648              		.cfi_startproc
 1649              		@ args = 8, pretend = 0, frame = 80
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 35


 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 94B0     		sub	sp, sp, #80
 1656              		.cfi_def_cfa_offset 88
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 F860     		str	r0, [r7, #12]
 1660 0008 B960     		str	r1, [r7, #8]
 1661 000a 3946     		mov	r1, r7
 1662 000c 81E80C00 		stmia	r1, {r2, r3}
 243:pathfinding.c ****     int currentRow = startLocation.row; 
 1663              		.loc 1 243 0
 1664 0010 3B68     		ldr	r3, [r7]
 1665 0012 FB64     		str	r3, [r7, #76]
 244:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1666              		.loc 1 244 0
 1667 0014 7B68     		ldr	r3, [r7, #4]
 1668 0016 BB64     		str	r3, [r7, #72]
 245:pathfinding.c ****     int listIndex = 0;
 1669              		.loc 1 245 0
 1670 0018 0023     		movs	r3, #0
 1671 001a 7B64     		str	r3, [r7, #68]
 246:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1672              		.loc 1 246 0
 1673 001c BB6D     		ldr	r3, [r7, #88]
 1674 001e FA6D     		ldr	r2, [r7, #92]
 1675 0020 1146     		mov	r1, r2
 1676 0022 1846     		mov	r0, r3
 1677 0024 FFF7FEFF 		bl	getTargetOrientation
 1678 0028 0346     		mov	r3, r0
 1679 002a 7B61     		str	r3, [r7, #20]
 247:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 248:pathfinding.c ****     while(numSteps >= 0) {
 1680              		.loc 1 248 0
 1681 002c 75E2     		b	.L49
 1682              	.L102:
 1683              	.LBB18:
 249:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1684              		.loc 1 249 0
 1685 002e 9C4B     		ldr	r3, .L107
 1686 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1687 0032 BA6C     		ldr	r2, [r7, #72]
 1688 0034 F96C     		ldr	r1, [r7, #76]
 1689 0036 1846     		mov	r0, r3
 1690 0038 FFF7FEFF 		bl	checkIgnoreTurn
 250:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1691              		.loc 1 250 0
 1692 003c FB6C     		ldr	r3, [r7, #76]
 1693 003e 4C22     		movs	r2, #76
 1694 0040 02FB03F3 		mul	r3, r2, r3
 1695 0044 FA68     		ldr	r2, [r7, #12]
 1696 0046 1344     		add	r3, r3, r2
 1697 0048 BA6C     		ldr	r2, [r7, #72]
 1698 004a 0021     		movs	r1, #0
 1699 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 36


 1700              		.loc 1 251 0
 1701 0050 934B     		ldr	r3, .L107
 1702 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1703 0054 934B     		ldr	r3, .L107+4
 1704 0056 1A70     		strb	r2, [r3]
 252:pathfinding.c ****         enum InstructionDirection newDirection;
 253:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1705              		.loc 1 253 0
 1706 0058 B96C     		ldr	r1, [r7, #72]
 1707 005a F86C     		ldr	r0, [r7, #76]
 1708 005c FFF7FEFF 		bl	checkPathDirection
 1709 0060 0346     		mov	r3, r0
 1710 0062 FB63     		str	r3, [r7, #60]
 254:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1711              		.loc 1 254 0
 1712 0064 BA6D     		ldr	r2, [r7, #88]
 1713 0066 FB6C     		ldr	r3, [r7, #76]
 1714 0068 9A42     		cmp	r2, r3
 1715 006a 0BD1     		bne	.L50
 1716              		.loc 1 254 0 is_stmt 0 discriminator 1
 1717 006c FA6D     		ldr	r2, [r7, #92]
 1718 006e BB6C     		ldr	r3, [r7, #72]
 1719 0070 9A42     		cmp	r2, r3
 1720 0072 07D1     		bne	.L50
 255:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1721              		.loc 1 255 0 is_stmt 1
 1722 0074 0523     		movs	r3, #5
 1723 0076 87F84330 		strb	r3, [r7, #67]
 256:pathfinding.c ****             printf("Stop at target\n");
 1724              		.loc 1 256 0
 1725 007a 8B48     		ldr	r0, .L107+8
 1726 007c FFF7FEFF 		bl	puts
 257:pathfinding.c ****             nextStep = 5;
 1727              		.loc 1 257 0
 1728 0080 0523     		movs	r3, #5
 1729 0082 FB63     		str	r3, [r7, #60]
 1730              	.L50:
 258:pathfinding.c ****         }
 259:pathfinding.c ****         switch (nextStep) {
 1731              		.loc 1 259 0
 1732 0084 FB6B     		ldr	r3, [r7, #60]
 1733 0086 032B     		cmp	r3, #3
 1734 0088 00F22082 		bhi	.L106
 1735 008c 01A2     		adr	r2, .L53
 1736 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1737 0092 00BF     		.p2align 2
 1738              	.L53:
 1739 0094 A5000000 		.word	.L52+1
 1740 0098 9D010000 		.word	.L54+1
 1741 009c C9020000 		.word	.L55+1
 1742 00a0 CD030000 		.word	.L56+1
 1743              		.p2align 1
 1744              	.L52:
 260:pathfinding.c ****             case 0: // next step is up
 261:pathfinding.c ****                 currentRobotOrientation = Up;
 1745              		.loc 1 261 0
 1746 00a4 7E4B     		ldr	r3, .L107
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 37


 1747 00a6 0022     		movs	r2, #0
 1748 00a8 1A70     		strb	r2, [r3]
 262:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1749              		.loc 1 262 0
 1750 00aa 7E4B     		ldr	r3, .L107+4
 1751 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 00ae 022B     		cmp	r3, #2
 1753 00b0 0BD1     		bne	.L57
 263:pathfinding.c ****                     newDirection = waitForRightTurn;
 1754              		.loc 1 263 0
 1755 00b2 0223     		movs	r3, #2
 1756 00b4 87F84330 		strb	r3, [r7, #67]
 264:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1757              		.loc 1 264 0
 1758 00b8 7C48     		ldr	r0, .L107+12
 1759 00ba FFF7FEFF 		bl	puts
 265:pathfinding.c ****                     ignoreL = 0;
 1760              		.loc 1 265 0
 1761 00be 7C4B     		ldr	r3, .L107+16
 1762 00c0 0022     		movs	r2, #0
 1763 00c2 1A60     		str	r2, [r3]
 266:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1764              		.loc 1 266 0
 1765 00c4 7B4B     		ldr	r3, .L107+20
 1766 00c6 0022     		movs	r2, #0
 1767 00c8 1A60     		str	r2, [r3]
 1768              	.L57:
 267:pathfinding.c ****                 } 
 268:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1769              		.loc 1 268 0
 1770 00ca 764B     		ldr	r3, .L107+4
 1771 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1772 00ce 032B     		cmp	r3, #3
 1773 00d0 0BD1     		bne	.L58
 269:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1774              		.loc 1 269 0
 1775 00d2 0123     		movs	r3, #1
 1776 00d4 87F84330 		strb	r3, [r7, #67]
 270:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1777              		.loc 1 270 0
 1778 00d8 7748     		ldr	r0, .L107+24
 1779 00da FFF7FEFF 		bl	puts
 271:pathfinding.c ****                     ignoreL = 0;
 1780              		.loc 1 271 0
 1781 00de 744B     		ldr	r3, .L107+16
 1782 00e0 0022     		movs	r2, #0
 1783 00e2 1A60     		str	r2, [r3]
 272:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1784              		.loc 1 272 0
 1785 00e4 734B     		ldr	r3, .L107+20
 1786 00e6 0022     		movs	r2, #0
 1787 00e8 1A60     		str	r2, [r3]
 1788              	.L58:
 273:pathfinding.c ****                 }
 274:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1789              		.loc 1 274 0
 1790 00ea 6E4B     		ldr	r3, .L107+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 38


 1791 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1792 00ee 002B     		cmp	r3, #0
 1793 00f0 46D1     		bne	.L59
 275:pathfinding.c ****                     // check if we only need to go forward to reach target
 276:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1794              		.loc 1 276 0
 1795 00f2 7A69     		ldr	r2, [r7, #20]
 1796 00f4 FB6B     		ldr	r3, [r7, #60]
 1797 00f6 9A42     		cmp	r2, r3
 1798 00f8 37D1     		bne	.L60
 1799              		.loc 1 276 0 is_stmt 0 discriminator 1
 1800 00fa BA6D     		ldr	r2, [r7, #88]
 1801 00fc FB6C     		ldr	r3, [r7, #76]
 1802 00fe 9A42     		cmp	r2, r3
 1803 0100 33D1     		bne	.L60
 1804              	.LBB19:
 277:pathfinding.c ****                         int atTarget = 1;
 1805              		.loc 1 277 0 is_stmt 1
 1806 0102 0123     		movs	r3, #1
 1807 0104 BB63     		str	r3, [r7, #56]
 1808              	.LBB20:
 278:pathfinding.c ****                         // check if we only need to go forward to reach target
 279:pathfinding.c ****                         for(int i = 0; i < currentRow-targetLocation.row; i++) {
 1809              		.loc 1 279 0
 1810 0106 0023     		movs	r3, #0
 1811 0108 7B63     		str	r3, [r7, #52]
 1812 010a 12E0     		b	.L61
 1813              	.L64:
 280:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 281:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 1814              		.loc 1 281 0
 1815 010c FB6C     		ldr	r3, [r7, #76]
 1816 010e 4C22     		movs	r2, #76
 1817 0110 02FB03F3 		mul	r3, r2, r3
 1818 0114 FA68     		ldr	r2, [r7, #12]
 1819 0116 1344     		add	r3, r3, r2
 1820 0118 B96C     		ldr	r1, [r7, #72]
 1821 011a 7A6B     		ldr	r2, [r7, #52]
 1822 011c 8A1A     		subs	r2, r1, r2
 1823 011e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1824 0122 012B     		cmp	r3, #1
 1825 0124 02D1     		bne	.L62
 282:pathfinding.c ****                                 atTarget = 0;
 1826              		.loc 1 282 0
 1827 0126 0023     		movs	r3, #0
 1828 0128 BB63     		str	r3, [r7, #56]
 283:pathfinding.c ****                                 break;
 1829              		.loc 1 283 0
 1830 012a 08E0     		b	.L63
 1831              	.L62:
 279:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1832              		.loc 1 279 0 discriminator 2
 1833 012c 7B6B     		ldr	r3, [r7, #52]
 1834 012e 0133     		adds	r3, r3, #1
 1835 0130 7B63     		str	r3, [r7, #52]
 1836              	.L61:
 279:pathfinding.c ****                             // check columns in front to see if there are any obstacles
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 39


 1837              		.loc 1 279 0 is_stmt 0 discriminator 1
 1838 0132 BB6D     		ldr	r3, [r7, #88]
 1839 0134 FA6C     		ldr	r2, [r7, #76]
 1840 0136 D21A     		subs	r2, r2, r3
 1841 0138 7B6B     		ldr	r3, [r7, #52]
 1842 013a 9A42     		cmp	r2, r3
 1843 013c E6DC     		bgt	.L64
 1844              	.L63:
 1845              	.LBE20:
 284:pathfinding.c ****                             }
 285:pathfinding.c ****                         }
 286:pathfinding.c ****                         if(atTarget) {
 1846              		.loc 1 286 0 is_stmt 1
 1847 013e BB6B     		ldr	r3, [r7, #56]
 1848 0140 002B     		cmp	r3, #0
 1849 0142 06D0     		beq	.L65
 287:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 1850              		.loc 1 287 0
 1851 0144 0423     		movs	r3, #4
 1852 0146 87F84330 		strb	r3, [r7, #67]
 288:pathfinding.c ****                             printf("Forward until target\n");
 1853              		.loc 1 288 0
 1854 014a 5C48     		ldr	r0, .L107+28
 1855 014c FFF7FEFF 		bl	puts
 1856              	.LBE19:
 276:pathfinding.c ****                         int atTarget = 1;
 1857              		.loc 1 276 0
 1858 0150 16E0     		b	.L59
 1859              	.L65:
 1860              	.LBB21:
 289:pathfinding.c ****                         } else {
 290:pathfinding.c ****                             newDirection = GoForward;
 1861              		.loc 1 290 0
 1862 0152 0023     		movs	r3, #0
 1863 0154 87F84330 		strb	r3, [r7, #67]
 291:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1864              		.loc 1 291 0
 1865 0158 554B     		ldr	r3, .L107+16
 1866 015a 1968     		ldr	r1, [r3]
 1867 015c 554B     		ldr	r3, .L107+20
 1868 015e 1B68     		ldr	r3, [r3]
 1869 0160 1A46     		mov	r2, r3
 1870 0162 5748     		ldr	r0, .L107+32
 1871 0164 FFF7FEFF 		bl	printf
 1872              	.LBE21:
 276:pathfinding.c ****                         int atTarget = 1;
 1873              		.loc 1 276 0
 1874 0168 0AE0     		b	.L59
 1875              	.L60:
 292:pathfinding.c ****                         }
 293:pathfinding.c ****                     } else {
 294:pathfinding.c ****                         newDirection = GoForward;
 1876              		.loc 1 294 0
 1877 016a 0023     		movs	r3, #0
 1878 016c 87F84330 		strb	r3, [r7, #67]
 295:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1879              		.loc 1 295 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 40


 1880 0170 4F4B     		ldr	r3, .L107+16
 1881 0172 1968     		ldr	r1, [r3]
 1882 0174 4F4B     		ldr	r3, .L107+20
 1883 0176 1B68     		ldr	r3, [r3]
 1884 0178 1A46     		mov	r2, r3
 1885 017a 5148     		ldr	r0, .L107+32
 1886 017c FFF7FEFF 		bl	printf
 1887              	.L59:
 296:pathfinding.c ****                     }
 297:pathfinding.c ****                 }
 298:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1888              		.loc 1 298 0
 1889 0180 484B     		ldr	r3, .L107+4
 1890 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1891 0184 012B     		cmp	r3, #1
 1892 0186 05D1     		bne	.L67
 299:pathfinding.c ****                     newDirection = uTurn;
 1893              		.loc 1 299 0
 1894 0188 0323     		movs	r3, #3
 1895 018a 87F84330 		strb	r3, [r7, #67]
 300:pathfinding.c ****                     printf("U-turn\n");
 1896              		.loc 1 300 0
 1897 018e 4D48     		ldr	r0, .L107+36
 1898 0190 FFF7FEFF 		bl	puts
 1899              	.L67:
 301:pathfinding.c ****                 }
 302:pathfinding.c ****                 currentRow--; // jump to new location
 1900              		.loc 1 302 0
 1901 0194 FB6C     		ldr	r3, [r7, #76]
 1902 0196 013B     		subs	r3, r3, #1
 1903 0198 FB64     		str	r3, [r7, #76]
 303:pathfinding.c ****                 break;
 1904              		.loc 1 303 0
 1905 019a 98E1     		b	.L68
 1906              	.L54:
 304:pathfinding.c ****             case 1: // next step is down
 305:pathfinding.c ****                 currentRobotOrientation = Down;
 1907              		.loc 1 305 0
 1908 019c 404B     		ldr	r3, .L107
 1909 019e 0122     		movs	r2, #1
 1910 01a0 1A70     		strb	r2, [r3]
 306:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1911              		.loc 1 306 0
 1912 01a2 404B     		ldr	r3, .L107+4
 1913 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1914 01a6 032B     		cmp	r3, #3
 1915 01a8 0BD1     		bne	.L69
 307:pathfinding.c ****                     newDirection = waitForRightTurn;
 1916              		.loc 1 307 0
 1917 01aa 0223     		movs	r3, #2
 1918 01ac 87F84330 		strb	r3, [r7, #67]
 308:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1919              		.loc 1 308 0
 1920 01b0 3E48     		ldr	r0, .L107+12
 1921 01b2 FFF7FEFF 		bl	puts
 309:pathfinding.c ****                     ignoreL = 0;
 1922              		.loc 1 309 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 41


 1923 01b6 3E4B     		ldr	r3, .L107+16
 1924 01b8 0022     		movs	r2, #0
 1925 01ba 1A60     		str	r2, [r3]
 310:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1926              		.loc 1 310 0
 1927 01bc 3D4B     		ldr	r3, .L107+20
 1928 01be 0022     		movs	r2, #0
 1929 01c0 1A60     		str	r2, [r3]
 1930              	.L69:
 311:pathfinding.c ****                 } 
 312:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1931              		.loc 1 312 0
 1932 01c2 384B     		ldr	r3, .L107+4
 1933 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1934 01c6 022B     		cmp	r3, #2
 1935 01c8 0BD1     		bne	.L70
 313:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1936              		.loc 1 313 0
 1937 01ca 0123     		movs	r3, #1
 1938 01cc 87F84330 		strb	r3, [r7, #67]
 314:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1939              		.loc 1 314 0
 1940 01d0 3948     		ldr	r0, .L107+24
 1941 01d2 FFF7FEFF 		bl	puts
 315:pathfinding.c ****                     ignoreL = 0;
 1942              		.loc 1 315 0
 1943 01d6 364B     		ldr	r3, .L107+16
 1944 01d8 0022     		movs	r2, #0
 1945 01da 1A60     		str	r2, [r3]
 316:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1946              		.loc 1 316 0
 1947 01dc 354B     		ldr	r3, .L107+20
 1948 01de 0022     		movs	r2, #0
 1949 01e0 1A60     		str	r2, [r3]
 1950              	.L70:
 317:pathfinding.c ****                 }
 318:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1951              		.loc 1 318 0
 1952 01e2 304B     		ldr	r3, .L107+4
 1953 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1954 01e6 012B     		cmp	r3, #1
 1955 01e8 45D1     		bne	.L71
 319:pathfinding.c ****                    if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1956              		.loc 1 319 0
 1957 01ea 7A69     		ldr	r2, [r7, #20]
 1958 01ec FB6B     		ldr	r3, [r7, #60]
 1959 01ee 9A42     		cmp	r2, r3
 1960 01f0 36D1     		bne	.L72
 1961              		.loc 1 319 0 is_stmt 0 discriminator 1
 1962 01f2 BA6D     		ldr	r2, [r7, #88]
 1963 01f4 FB6C     		ldr	r3, [r7, #76]
 1964 01f6 9A42     		cmp	r2, r3
 1965 01f8 32D1     		bne	.L72
 1966              	.LBB22:
 320:pathfinding.c ****                         int atTarget = 1;
 1967              		.loc 1 320 0 is_stmt 1
 1968 01fa 0123     		movs	r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 42


 1969 01fc 3B63     		str	r3, [r7, #48]
 1970              	.LBB23:
 321:pathfinding.c ****                         // check if we only need to go forward to reach target
 322:pathfinding.c ****                         for(int i = 0; i < targetLocation.row; i++) {
 1971              		.loc 1 322 0
 1972 01fe 0023     		movs	r3, #0
 1973 0200 FB62     		str	r3, [r7, #44]
 1974 0202 13E0     		b	.L73
 1975              	.L76:
 323:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 324:pathfinding.c ****                             if(map[currentRow + i][currentCol] == 1) {
 1976              		.loc 1 324 0
 1977 0204 FA6C     		ldr	r2, [r7, #76]
 1978 0206 FB6A     		ldr	r3, [r7, #44]
 1979 0208 1344     		add	r3, r3, r2
 1980 020a 1A46     		mov	r2, r3
 1981 020c 4C23     		movs	r3, #76
 1982 020e 03FB02F3 		mul	r3, r3, r2
 1983 0212 FA68     		ldr	r2, [r7, #12]
 1984 0214 1344     		add	r3, r3, r2
 1985 0216 BA6C     		ldr	r2, [r7, #72]
 1986 0218 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1987 021c 012B     		cmp	r3, #1
 1988 021e 02D1     		bne	.L74
 325:pathfinding.c ****                                 atTarget = 0;
 1989              		.loc 1 325 0
 1990 0220 0023     		movs	r3, #0
 1991 0222 3B63     		str	r3, [r7, #48]
 326:pathfinding.c ****                                 break;
 1992              		.loc 1 326 0
 1993 0224 06E0     		b	.L75
 1994              	.L74:
 322:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1995              		.loc 1 322 0 discriminator 2
 1996 0226 FB6A     		ldr	r3, [r7, #44]
 1997 0228 0133     		adds	r3, r3, #1
 1998 022a FB62     		str	r3, [r7, #44]
 1999              	.L73:
 322:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2000              		.loc 1 322 0 is_stmt 0 discriminator 1
 2001 022c BA6D     		ldr	r2, [r7, #88]
 2002 022e FB6A     		ldr	r3, [r7, #44]
 2003 0230 9A42     		cmp	r2, r3
 2004 0232 E7DC     		bgt	.L76
 2005              	.L75:
 2006              	.LBE23:
 327:pathfinding.c ****                             }
 328:pathfinding.c ****                         }
 329:pathfinding.c ****                         if(atTarget) {
 2007              		.loc 1 329 0 is_stmt 1
 2008 0234 3B6B     		ldr	r3, [r7, #48]
 2009 0236 002B     		cmp	r3, #0
 2010 0238 06D0     		beq	.L77
 330:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2011              		.loc 1 330 0
 2012 023a 0423     		movs	r3, #4
 2013 023c 87F84330 		strb	r3, [r7, #67]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 43


 331:pathfinding.c ****                             printf("Forward until target\n");
 2014              		.loc 1 331 0
 2015 0240 1E48     		ldr	r0, .L107+28
 2016 0242 FFF7FEFF 		bl	puts
 2017              	.LBE22:
 319:pathfinding.c ****                         int atTarget = 1;
 2018              		.loc 1 319 0
 2019 0246 16E0     		b	.L71
 2020              	.L77:
 2021              	.LBB24:
 332:pathfinding.c ****                         } else {
 333:pathfinding.c ****                             newDirection = GoForward;
 2022              		.loc 1 333 0
 2023 0248 0023     		movs	r3, #0
 2024 024a 87F84330 		strb	r3, [r7, #67]
 334:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2025              		.loc 1 334 0
 2026 024e 184B     		ldr	r3, .L107+16
 2027 0250 1968     		ldr	r1, [r3]
 2028 0252 184B     		ldr	r3, .L107+20
 2029 0254 1B68     		ldr	r3, [r3]
 2030 0256 1A46     		mov	r2, r3
 2031 0258 1948     		ldr	r0, .L107+32
 2032 025a FFF7FEFF 		bl	printf
 2033              	.LBE24:
 319:pathfinding.c ****                         int atTarget = 1;
 2034              		.loc 1 319 0
 2035 025e 0AE0     		b	.L71
 2036              	.L72:
 335:pathfinding.c ****                         }
 336:pathfinding.c ****                     }      
 337:pathfinding.c ****                     else {
 338:pathfinding.c ****                         newDirection = GoForward;
 2037              		.loc 1 338 0
 2038 0260 0023     		movs	r3, #0
 2039 0262 87F84330 		strb	r3, [r7, #67]
 339:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2040              		.loc 1 339 0
 2041 0266 124B     		ldr	r3, .L107+16
 2042 0268 1968     		ldr	r1, [r3]
 2043 026a 124B     		ldr	r3, .L107+20
 2044 026c 1B68     		ldr	r3, [r3]
 2045 026e 1A46     		mov	r2, r3
 2046 0270 1348     		ldr	r0, .L107+32
 2047 0272 FFF7FEFF 		bl	printf
 2048              	.L71:
 340:pathfinding.c ****                     }
 341:pathfinding.c ****                 }
 342:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2049              		.loc 1 342 0
 2050 0276 0B4B     		ldr	r3, .L107+4
 2051 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2052 027a 002B     		cmp	r3, #0
 2053 027c 0BD1     		bne	.L79
 343:pathfinding.c ****                     newDirection = uTurn;
 2054              		.loc 1 343 0
 2055 027e 0323     		movs	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 44


 2056 0280 87F84330 		strb	r3, [r7, #67]
 344:pathfinding.c ****                     ignoreL = 0;
 2057              		.loc 1 344 0
 2058 0284 0A4B     		ldr	r3, .L107+16
 2059 0286 0022     		movs	r2, #0
 2060 0288 1A60     		str	r2, [r3]
 345:pathfinding.c ****                     ignoreR = 0;
 2061              		.loc 1 345 0
 2062 028a 0A4B     		ldr	r3, .L107+20
 2063 028c 0022     		movs	r2, #0
 2064 028e 1A60     		str	r2, [r3]
 346:pathfinding.c ****                     printf("U-turn\n");
 2065              		.loc 1 346 0
 2066 0290 0C48     		ldr	r0, .L107+36
 2067 0292 FFF7FEFF 		bl	puts
 2068              	.L79:
 347:pathfinding.c ****                 }
 348:pathfinding.c ****                 currentRow++;
 2069              		.loc 1 348 0
 2070 0296 FB6C     		ldr	r3, [r7, #76]
 2071 0298 0133     		adds	r3, r3, #1
 2072 029a FB64     		str	r3, [r7, #76]
 349:pathfinding.c ****                 break;
 2073              		.loc 1 349 0
 2074 029c 17E1     		b	.L68
 2075              	.L108:
 2076 029e 00BF     		.align	2
 2077              	.L107:
 2078 02a0 00000000 		.word	currentRobotOrientation
 2079 02a4 00000000 		.word	previousRobotOrientation
 2080 02a8 04000000 		.word	.LC1
 2081 02ac 14000000 		.word	.LC2
 2082 02b0 00000000 		.word	ignoreL
 2083 02b4 00000000 		.word	ignoreR
 2084 02b8 20000000 		.word	.LC3
 2085 02bc 2C000000 		.word	.LC4
 2086 02c0 44000000 		.word	.LC5
 2087 02c4 68000000 		.word	.LC6
 2088              	.L55:
 350:pathfinding.c ****             case 2: // next step is left
 351:pathfinding.c ****                 currentRobotOrientation = Left;
 2089              		.loc 1 351 0
 2090 02c8 974B     		ldr	r3, .L109
 2091 02ca 0222     		movs	r2, #2
 2092 02cc 1A70     		strb	r2, [r3]
 352:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2093              		.loc 1 352 0
 2094 02ce 974B     		ldr	r3, .L109+4
 2095 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2096 02d2 002B     		cmp	r3, #0
 2097 02d4 0BD1     		bne	.L80
 353:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2098              		.loc 1 353 0
 2099 02d6 0123     		movs	r3, #1
 2100 02d8 87F84330 		strb	r3, [r7, #67]
 354:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2101              		.loc 1 354 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 45


 2102 02dc 9448     		ldr	r0, .L109+8
 2103 02de FFF7FEFF 		bl	puts
 355:pathfinding.c ****                     ignoreL = 0;
 2104              		.loc 1 355 0
 2105 02e2 944B     		ldr	r3, .L109+12
 2106 02e4 0022     		movs	r2, #0
 2107 02e6 1A60     		str	r2, [r3]
 356:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2108              		.loc 1 356 0
 2109 02e8 934B     		ldr	r3, .L109+16
 2110 02ea 0022     		movs	r2, #0
 2111 02ec 1A60     		str	r2, [r3]
 2112              	.L80:
 357:pathfinding.c ****                 } 
 358:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2113              		.loc 1 358 0
 2114 02ee 8F4B     		ldr	r3, .L109+4
 2115 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2116 02f2 012B     		cmp	r3, #1
 2117 02f4 0BD1     		bne	.L81
 359:pathfinding.c ****                     newDirection = waitForRightTurn;
 2118              		.loc 1 359 0
 2119 02f6 0223     		movs	r3, #2
 2120 02f8 87F84330 		strb	r3, [r7, #67]
 360:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2121              		.loc 1 360 0
 2122 02fc 8F48     		ldr	r0, .L109+20
 2123 02fe FFF7FEFF 		bl	puts
 361:pathfinding.c ****                     ignoreL = 0;
 2124              		.loc 1 361 0
 2125 0302 8C4B     		ldr	r3, .L109+12
 2126 0304 0022     		movs	r2, #0
 2127 0306 1A60     		str	r2, [r3]
 362:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2128              		.loc 1 362 0
 2129 0308 8B4B     		ldr	r3, .L109+16
 2130 030a 0022     		movs	r2, #0
 2131 030c 1A60     		str	r2, [r3]
 2132              	.L81:
 363:pathfinding.c ****                 }
 364:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2133              		.loc 1 364 0
 2134 030e 874B     		ldr	r3, .L109+4
 2135 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2136 0312 022B     		cmp	r3, #2
 2137 0314 46D1     		bne	.L82
 365:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 2138              		.loc 1 365 0
 2139 0316 7A69     		ldr	r2, [r7, #20]
 2140 0318 FB6B     		ldr	r3, [r7, #60]
 2141 031a 9A42     		cmp	r2, r3
 2142 031c 37D1     		bne	.L83
 2143              		.loc 1 365 0 is_stmt 0 discriminator 1
 2144 031e FA6D     		ldr	r2, [r7, #92]
 2145 0320 BB6C     		ldr	r3, [r7, #72]
 2146 0322 9A42     		cmp	r2, r3
 2147 0324 33D1     		bne	.L83
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 46


 2148              	.LBB25:
 366:pathfinding.c ****                         int atTarget = 1;
 2149              		.loc 1 366 0 is_stmt 1
 2150 0326 0123     		movs	r3, #1
 2151 0328 BB62     		str	r3, [r7, #40]
 2152              	.LBB26:
 367:pathfinding.c ****                         // check if we only need to go forward to reach target
 368:pathfinding.c ****                         for(int i = 0; i < currentCol-targetLocation.col; i++) {
 2153              		.loc 1 368 0
 2154 032a 0023     		movs	r3, #0
 2155 032c 7B62     		str	r3, [r7, #36]
 2156 032e 12E0     		b	.L84
 2157              	.L87:
 369:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 370:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2158              		.loc 1 370 0
 2159 0330 FB6C     		ldr	r3, [r7, #76]
 2160 0332 4C22     		movs	r2, #76
 2161 0334 02FB03F3 		mul	r3, r2, r3
 2162 0338 FA68     		ldr	r2, [r7, #12]
 2163 033a 1344     		add	r3, r3, r2
 2164 033c B96C     		ldr	r1, [r7, #72]
 2165 033e 7A6A     		ldr	r2, [r7, #36]
 2166 0340 8A1A     		subs	r2, r1, r2
 2167 0342 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2168 0346 012B     		cmp	r3, #1
 2169 0348 02D1     		bne	.L85
 371:pathfinding.c ****                                 atTarget = 0;
 2170              		.loc 1 371 0
 2171 034a 0023     		movs	r3, #0
 2172 034c BB62     		str	r3, [r7, #40]
 372:pathfinding.c ****                                 break;
 2173              		.loc 1 372 0
 2174 034e 08E0     		b	.L86
 2175              	.L85:
 368:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2176              		.loc 1 368 0 discriminator 2
 2177 0350 7B6A     		ldr	r3, [r7, #36]
 2178 0352 0133     		adds	r3, r3, #1
 2179 0354 7B62     		str	r3, [r7, #36]
 2180              	.L84:
 368:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2181              		.loc 1 368 0 is_stmt 0 discriminator 1
 2182 0356 FB6D     		ldr	r3, [r7, #92]
 2183 0358 BA6C     		ldr	r2, [r7, #72]
 2184 035a D21A     		subs	r2, r2, r3
 2185 035c 7B6A     		ldr	r3, [r7, #36]
 2186 035e 9A42     		cmp	r2, r3
 2187 0360 E6DC     		bgt	.L87
 2188              	.L86:
 2189              	.LBE26:
 373:pathfinding.c ****                             }
 374:pathfinding.c ****                         }
 375:pathfinding.c ****                         if(atTarget) {
 2190              		.loc 1 375 0 is_stmt 1
 2191 0362 BB6A     		ldr	r3, [r7, #40]
 2192 0364 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 47


 2193 0366 06D0     		beq	.L88
 376:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2194              		.loc 1 376 0
 2195 0368 0423     		movs	r3, #4
 2196 036a 87F84330 		strb	r3, [r7, #67]
 377:pathfinding.c ****                             printf("Forward until target\n");
 2197              		.loc 1 377 0
 2198 036e 7448     		ldr	r0, .L109+24
 2199 0370 FFF7FEFF 		bl	puts
 2200              	.LBE25:
 365:pathfinding.c ****                         int atTarget = 1;
 2201              		.loc 1 365 0
 2202 0374 16E0     		b	.L82
 2203              	.L88:
 2204              	.LBB27:
 378:pathfinding.c ****                         } else {
 379:pathfinding.c ****                             newDirection = GoForward;
 2205              		.loc 1 379 0
 2206 0376 0023     		movs	r3, #0
 2207 0378 87F84330 		strb	r3, [r7, #67]
 380:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2208              		.loc 1 380 0
 2209 037c 6D4B     		ldr	r3, .L109+12
 2210 037e 1968     		ldr	r1, [r3]
 2211 0380 6D4B     		ldr	r3, .L109+16
 2212 0382 1B68     		ldr	r3, [r3]
 2213 0384 1A46     		mov	r2, r3
 2214 0386 6F48     		ldr	r0, .L109+28
 2215 0388 FFF7FEFF 		bl	printf
 2216              	.LBE27:
 365:pathfinding.c ****                         int atTarget = 1;
 2217              		.loc 1 365 0
 2218 038c 0AE0     		b	.L82
 2219              	.L83:
 381:pathfinding.c ****                         }
 382:pathfinding.c ****                     } else {
 383:pathfinding.c ****                         newDirection = GoForward;
 2220              		.loc 1 383 0
 2221 038e 0023     		movs	r3, #0
 2222 0390 87F84330 		strb	r3, [r7, #67]
 384:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2223              		.loc 1 384 0
 2224 0394 674B     		ldr	r3, .L109+12
 2225 0396 1968     		ldr	r1, [r3]
 2226 0398 674B     		ldr	r3, .L109+16
 2227 039a 1B68     		ldr	r3, [r3]
 2228 039c 1A46     		mov	r2, r3
 2229 039e 6948     		ldr	r0, .L109+28
 2230 03a0 FFF7FEFF 		bl	printf
 2231              	.L82:
 385:pathfinding.c ****                     }
 386:pathfinding.c ****                 }
 387:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2232              		.loc 1 387 0
 2233 03a4 614B     		ldr	r3, .L109+4
 2234 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2235 03a8 032B     		cmp	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 48


 2236 03aa 0BD1     		bne	.L90
 388:pathfinding.c ****                     newDirection = uTurn;
 2237              		.loc 1 388 0
 2238 03ac 0323     		movs	r3, #3
 2239 03ae 87F84330 		strb	r3, [r7, #67]
 389:pathfinding.c ****                     ignoreL = 0;
 2240              		.loc 1 389 0
 2241 03b2 604B     		ldr	r3, .L109+12
 2242 03b4 0022     		movs	r2, #0
 2243 03b6 1A60     		str	r2, [r3]
 390:pathfinding.c ****                     ignoreR = 0;
 2244              		.loc 1 390 0
 2245 03b8 5F4B     		ldr	r3, .L109+16
 2246 03ba 0022     		movs	r2, #0
 2247 03bc 1A60     		str	r2, [r3]
 391:pathfinding.c ****                     printf("U-turn\n");
 2248              		.loc 1 391 0
 2249 03be 6248     		ldr	r0, .L109+32
 2250 03c0 FFF7FEFF 		bl	puts
 2251              	.L90:
 392:pathfinding.c ****                 }
 393:pathfinding.c ****                 currentCol--;
 2252              		.loc 1 393 0
 2253 03c4 BB6C     		ldr	r3, [r7, #72]
 2254 03c6 013B     		subs	r3, r3, #1
 2255 03c8 BB64     		str	r3, [r7, #72]
 394:pathfinding.c ****                 break;
 2256              		.loc 1 394 0
 2257 03ca 80E0     		b	.L68
 2258              	.L56:
 395:pathfinding.c ****             case 3: // next step is right
 396:pathfinding.c ****                 currentRobotOrientation = Right;
 2259              		.loc 1 396 0
 2260 03cc 564B     		ldr	r3, .L109
 2261 03ce 0322     		movs	r2, #3
 2262 03d0 1A70     		strb	r2, [r3]
 397:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2263              		.loc 1 397 0
 2264 03d2 564B     		ldr	r3, .L109+4
 2265 03d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2266 03d6 002B     		cmp	r3, #0
 2267 03d8 0BD1     		bne	.L91
 398:pathfinding.c ****                     newDirection = waitForRightTurn;
 2268              		.loc 1 398 0
 2269 03da 0223     		movs	r3, #2
 2270 03dc 87F84330 		strb	r3, [r7, #67]
 399:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2271              		.loc 1 399 0
 2272 03e0 5648     		ldr	r0, .L109+20
 2273 03e2 FFF7FEFF 		bl	puts
 400:pathfinding.c ****                     ignoreL = 0;
 2274              		.loc 1 400 0
 2275 03e6 534B     		ldr	r3, .L109+12
 2276 03e8 0022     		movs	r2, #0
 2277 03ea 1A60     		str	r2, [r3]
 401:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2278              		.loc 1 401 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 49


 2279 03ec 524B     		ldr	r3, .L109+16
 2280 03ee 0022     		movs	r2, #0
 2281 03f0 1A60     		str	r2, [r3]
 2282              	.L91:
 402:pathfinding.c ****                 }
 403:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2283              		.loc 1 403 0
 2284 03f2 4E4B     		ldr	r3, .L109+4
 2285 03f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 03f6 012B     		cmp	r3, #1
 2287 03f8 0BD1     		bne	.L92
 404:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2288              		.loc 1 404 0
 2289 03fa 0123     		movs	r3, #1
 2290 03fc 87F84330 		strb	r3, [r7, #67]
 405:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2291              		.loc 1 405 0
 2292 0400 4B48     		ldr	r0, .L109+8
 2293 0402 FFF7FEFF 		bl	puts
 406:pathfinding.c ****                     ignoreL = 0;
 2294              		.loc 1 406 0
 2295 0406 4B4B     		ldr	r3, .L109+12
 2296 0408 0022     		movs	r2, #0
 2297 040a 1A60     		str	r2, [r3]
 407:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2298              		.loc 1 407 0
 2299 040c 4A4B     		ldr	r3, .L109+16
 2300 040e 0022     		movs	r2, #0
 2301 0410 1A60     		str	r2, [r3]
 2302              	.L92:
 408:pathfinding.c ****                 }
 409:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2303              		.loc 1 409 0
 2304 0412 464B     		ldr	r3, .L109+4
 2305 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2306 0416 032B     		cmp	r3, #3
 2307 0418 44D1     		bne	.L93
 410:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 2308              		.loc 1 410 0
 2309 041a 7A69     		ldr	r2, [r7, #20]
 2310 041c FB6B     		ldr	r3, [r7, #60]
 2311 041e 9A42     		cmp	r2, r3
 2312 0420 35D1     		bne	.L94
 2313              		.loc 1 410 0 is_stmt 0 discriminator 1
 2314 0422 FA6D     		ldr	r2, [r7, #92]
 2315 0424 BB6C     		ldr	r3, [r7, #72]
 2316 0426 9A42     		cmp	r2, r3
 2317 0428 31D1     		bne	.L94
 2318              	.LBB28:
 411:pathfinding.c ****                         int atTarget = 1;
 2319              		.loc 1 411 0 is_stmt 1
 2320 042a 0123     		movs	r3, #1
 2321 042c 3B62     		str	r3, [r7, #32]
 2322              	.LBB29:
 412:pathfinding.c ****                         // check if we only need to go forward to reach target
 413:pathfinding.c ****                         for(int i = 0; i < targetLocation.col; i++) {
 2323              		.loc 1 413 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 50


 2324 042e 0023     		movs	r3, #0
 2325 0430 FB61     		str	r3, [r7, #28]
 2326 0432 12E0     		b	.L95
 2327              	.L98:
 414:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 415:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 1) {
 2328              		.loc 1 415 0
 2329 0434 FB6C     		ldr	r3, [r7, #76]
 2330 0436 4C22     		movs	r2, #76
 2331 0438 02FB03F3 		mul	r3, r2, r3
 2332 043c FA68     		ldr	r2, [r7, #12]
 2333 043e 1344     		add	r3, r3, r2
 2334 0440 B96C     		ldr	r1, [r7, #72]
 2335 0442 FA69     		ldr	r2, [r7, #28]
 2336 0444 0A44     		add	r2, r2, r1
 2337 0446 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2338 044a 012B     		cmp	r3, #1
 2339 044c 02D1     		bne	.L96
 416:pathfinding.c ****                                 atTarget = 0;
 2340              		.loc 1 416 0
 2341 044e 0023     		movs	r3, #0
 2342 0450 3B62     		str	r3, [r7, #32]
 417:pathfinding.c ****                                 break;
 2343              		.loc 1 417 0
 2344 0452 06E0     		b	.L97
 2345              	.L96:
 413:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2346              		.loc 1 413 0 discriminator 2
 2347 0454 FB69     		ldr	r3, [r7, #28]
 2348 0456 0133     		adds	r3, r3, #1
 2349 0458 FB61     		str	r3, [r7, #28]
 2350              	.L95:
 413:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2351              		.loc 1 413 0 is_stmt 0 discriminator 1
 2352 045a FA6D     		ldr	r2, [r7, #92]
 2353 045c FB69     		ldr	r3, [r7, #28]
 2354 045e 9A42     		cmp	r2, r3
 2355 0460 E8DC     		bgt	.L98
 2356              	.L97:
 2357              	.LBE29:
 418:pathfinding.c ****                             }
 419:pathfinding.c ****                         }
 420:pathfinding.c ****                         if(atTarget) {
 2358              		.loc 1 420 0 is_stmt 1
 2359 0462 3B6A     		ldr	r3, [r7, #32]
 2360 0464 002B     		cmp	r3, #0
 2361 0466 06D0     		beq	.L99
 421:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2362              		.loc 1 421 0
 2363 0468 0423     		movs	r3, #4
 2364 046a 87F84330 		strb	r3, [r7, #67]
 422:pathfinding.c ****                             printf("Forward until target\n");
 2365              		.loc 1 422 0
 2366 046e 3448     		ldr	r0, .L109+24
 2367 0470 FFF7FEFF 		bl	puts
 2368              	.LBE28:
 410:pathfinding.c ****                         int atTarget = 1;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 51


 2369              		.loc 1 410 0
 2370 0474 16E0     		b	.L93
 2371              	.L99:
 2372              	.LBB30:
 423:pathfinding.c ****                         } else {
 424:pathfinding.c ****                             newDirection = GoForward;
 2373              		.loc 1 424 0
 2374 0476 0023     		movs	r3, #0
 2375 0478 87F84330 		strb	r3, [r7, #67]
 425:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2376              		.loc 1 425 0
 2377 047c 2D4B     		ldr	r3, .L109+12
 2378 047e 1968     		ldr	r1, [r3]
 2379 0480 2D4B     		ldr	r3, .L109+16
 2380 0482 1B68     		ldr	r3, [r3]
 2381 0484 1A46     		mov	r2, r3
 2382 0486 2F48     		ldr	r0, .L109+28
 2383 0488 FFF7FEFF 		bl	printf
 2384              	.LBE30:
 410:pathfinding.c ****                         int atTarget = 1;
 2385              		.loc 1 410 0
 2386 048c 0AE0     		b	.L93
 2387              	.L94:
 426:pathfinding.c ****                         }
 427:pathfinding.c ****                     } else {
 428:pathfinding.c ****                         newDirection = GoForward;
 2388              		.loc 1 428 0
 2389 048e 0023     		movs	r3, #0
 2390 0490 87F84330 		strb	r3, [r7, #67]
 429:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2391              		.loc 1 429 0
 2392 0494 274B     		ldr	r3, .L109+12
 2393 0496 1968     		ldr	r1, [r3]
 2394 0498 274B     		ldr	r3, .L109+16
 2395 049a 1B68     		ldr	r3, [r3]
 2396 049c 1A46     		mov	r2, r3
 2397 049e 2948     		ldr	r0, .L109+28
 2398 04a0 FFF7FEFF 		bl	printf
 2399              	.L93:
 430:pathfinding.c ****                     }
 431:pathfinding.c ****                 }
 432:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2400              		.loc 1 432 0
 2401 04a4 214B     		ldr	r3, .L109+4
 2402 04a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2403 04a8 022B     		cmp	r3, #2
 2404 04aa 0BD1     		bne	.L101
 433:pathfinding.c ****                     newDirection = uTurn;
 2405              		.loc 1 433 0
 2406 04ac 0323     		movs	r3, #3
 2407 04ae 87F84330 		strb	r3, [r7, #67]
 434:pathfinding.c ****                     ignoreL = 0;
 2408              		.loc 1 434 0
 2409 04b2 204B     		ldr	r3, .L109+12
 2410 04b4 0022     		movs	r2, #0
 2411 04b6 1A60     		str	r2, [r3]
 435:pathfinding.c ****                     ignoreR = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 52


 2412              		.loc 1 435 0
 2413 04b8 1F4B     		ldr	r3, .L109+16
 2414 04ba 0022     		movs	r2, #0
 2415 04bc 1A60     		str	r2, [r3]
 436:pathfinding.c ****                     printf("U-turn\n");
 2416              		.loc 1 436 0
 2417 04be 2248     		ldr	r0, .L109+32
 2418 04c0 FFF7FEFF 		bl	puts
 2419              	.L101:
 437:pathfinding.c ****                 }
 438:pathfinding.c ****                 currentCol++;
 2420              		.loc 1 438 0
 2421 04c4 BB6C     		ldr	r3, [r7, #72]
 2422 04c6 0133     		adds	r3, r3, #1
 2423 04c8 BB64     		str	r3, [r7, #72]
 439:pathfinding.c ****                 break;
 2424              		.loc 1 439 0
 2425 04ca 00E0     		b	.L68
 2426              	.L106:
 440:pathfinding.c ****             default:
 441:pathfinding.c ****                 break;
 2427              		.loc 1 441 0
 2428 04cc 00BF     		nop
 2429              	.L68:
 442:pathfinding.c ****         }
 443:pathfinding.c ****         
 444:pathfinding.c ****         // add new direction to list
 445:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2430              		.loc 1 445 0
 2431 04ce 1F4A     		ldr	r2, .L109+36
 2432 04d0 7B6C     		ldr	r3, [r7, #68]
 2433 04d2 1B01     		lsls	r3, r3, #4
 2434 04d4 1344     		add	r3, r3, r2
 2435 04d6 97F84320 		ldrb	r2, [r7, #67]
 2436 04da 1A70     		strb	r2, [r3]
 446:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2437              		.loc 1 446 0
 2438 04dc 154B     		ldr	r3, .L109+12
 2439 04de 1A68     		ldr	r2, [r3]
 2440 04e0 1A49     		ldr	r1, .L109+36
 2441 04e2 7B6C     		ldr	r3, [r7, #68]
 2442 04e4 1B01     		lsls	r3, r3, #4
 2443 04e6 0B44     		add	r3, r3, r1
 2444 04e8 0433     		adds	r3, r3, #4
 2445 04ea 1A60     		str	r2, [r3]
 447:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2446              		.loc 1 447 0
 2447 04ec 124B     		ldr	r3, .L109+16
 2448 04ee 1A68     		ldr	r2, [r3]
 2449 04f0 1649     		ldr	r1, .L109+36
 2450 04f2 7B6C     		ldr	r3, [r7, #68]
 2451 04f4 1B01     		lsls	r3, r3, #4
 2452 04f6 0B44     		add	r3, r3, r1
 2453 04f8 0833     		adds	r3, r3, #8
 2454 04fa 1A60     		str	r2, [r3]
 448:pathfinding.c ****         instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 2455              		.loc 1 448 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 53


 2456 04fc 0B4B     		ldr	r3, .L109+4
 2457 04fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2458 0500 124A     		ldr	r2, .L109+36
 2459 0502 7B6C     		ldr	r3, [r7, #68]
 2460 0504 1B01     		lsls	r3, r3, #4
 2461 0506 1344     		add	r3, r3, r2
 2462 0508 0C33     		adds	r3, r3, #12
 2463 050a 0A46     		mov	r2, r1
 2464 050c 1A70     		strb	r2, [r3]
 449:pathfinding.c ****         listIndex++; // increment instruction list index
 2465              		.loc 1 449 0
 2466 050e 7B6C     		ldr	r3, [r7, #68]
 2467 0510 0133     		adds	r3, r3, #1
 2468 0512 7B64     		str	r3, [r7, #68]
 450:pathfinding.c ****         numSteps--; // decrement numSteps
 2469              		.loc 1 450 0
 2470 0514 BB68     		ldr	r3, [r7, #8]
 2471 0516 013B     		subs	r3, r3, #1
 2472 0518 BB60     		str	r3, [r7, #8]
 2473              	.L49:
 2474              	.LBE18:
 248:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2475              		.loc 1 248 0
 2476 051a BB68     		ldr	r3, [r7, #8]
 2477 051c 002B     		cmp	r3, #0
 2478 051e BFF686AD 		bge	.L102
 2479              	.LBB31:
 451:pathfinding.c ****     }
 452:pathfinding.c ****     // process list, remove repeated forward outputs
 453:pathfinding.c ****     for(int i = 0; i < listIndex-1; i ++) {
 2480              		.loc 1 453 0
 2481 0522 0023     		movs	r3, #0
 2482 0524 BB61     		str	r3, [r7, #24]
 2483 0526 37E0     		b	.L103
 2484              	.L110:
 2485              		.align	2
 2486              	.L109:
 2487 0528 00000000 		.word	currentRobotOrientation
 2488 052c 00000000 		.word	previousRobotOrientation
 2489 0530 20000000 		.word	.LC3
 2490 0534 00000000 		.word	ignoreL
 2491 0538 00000000 		.word	ignoreR
 2492 053c 14000000 		.word	.LC2
 2493 0540 2C000000 		.word	.LC4
 2494 0544 44000000 		.word	.LC5
 2495 0548 68000000 		.word	.LC6
 2496 054c 00000000 		.word	instructionsList
 2497              	.L105:
 454:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2498              		.loc 1 454 0
 2499 0550 164A     		ldr	r2, .L111
 2500 0552 BB69     		ldr	r3, [r7, #24]
 2501 0554 1B01     		lsls	r3, r3, #4
 2502 0556 1344     		add	r3, r3, r2
 2503 0558 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2504 055a BB69     		ldr	r3, [r7, #24]
 2505 055c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 54


 2506 055e 1349     		ldr	r1, .L111
 2507 0560 1B01     		lsls	r3, r3, #4
 2508 0562 0B44     		add	r3, r3, r1
 2509 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2510 0566 9A42     		cmp	r2, r3
 2511 0568 13D1     		bne	.L104
 455:pathfinding.c ****             instructionsList[i].direction = Skip;
 2512              		.loc 1 455 0
 2513 056a 104A     		ldr	r2, .L111
 2514 056c BB69     		ldr	r3, [r7, #24]
 2515 056e 1B01     		lsls	r3, r3, #4
 2516 0570 1344     		add	r3, r3, r2
 2517 0572 0622     		movs	r2, #6
 2518 0574 1A70     		strb	r2, [r3]
 456:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2519              		.loc 1 456 0
 2520 0576 0D4A     		ldr	r2, .L111
 2521 0578 BB69     		ldr	r3, [r7, #24]
 2522 057a 1B01     		lsls	r3, r3, #4
 2523 057c 1344     		add	r3, r3, r2
 2524 057e 0433     		adds	r3, r3, #4
 2525 0580 0022     		movs	r2, #0
 2526 0582 1A60     		str	r2, [r3]
 457:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2527              		.loc 1 457 0
 2528 0584 094A     		ldr	r2, .L111
 2529 0586 BB69     		ldr	r3, [r7, #24]
 2530 0588 1B01     		lsls	r3, r3, #4
 2531 058a 1344     		add	r3, r3, r2
 2532 058c 0833     		adds	r3, r3, #8
 2533 058e 0022     		movs	r2, #0
 2534 0590 1A60     		str	r2, [r3]
 2535              	.L104:
 453:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2536              		.loc 1 453 0 discriminator 2
 2537 0592 BB69     		ldr	r3, [r7, #24]
 2538 0594 0133     		adds	r3, r3, #1
 2539 0596 BB61     		str	r3, [r7, #24]
 2540              	.L103:
 453:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2541              		.loc 1 453 0 is_stmt 0 discriminator 1
 2542 0598 7B6C     		ldr	r3, [r7, #68]
 2543 059a 5A1E     		subs	r2, r3, #1
 2544 059c BB69     		ldr	r3, [r7, #24]
 2545 059e 9A42     		cmp	r2, r3
 2546 05a0 D6DC     		bgt	.L105
 2547              	.LBE31:
 458:pathfinding.c ****         }
 459:pathfinding.c ****     }
 460:pathfinding.c **** }
 2548              		.loc 1 460 0 is_stmt 1
 2549 05a2 00BF     		nop
 2550 05a4 5037     		adds	r7, r7, #80
 2551              		.cfi_def_cfa_offset 8
 2552 05a6 BD46     		mov	sp, r7
 2553              		.cfi_def_cfa_register 13
 2554              		@ sp needed
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 55


 2555 05a8 80BD     		pop	{r7, pc}
 2556              	.L112:
 2557 05aa 00BF     		.align	2
 2558              	.L111:
 2559 05ac 00000000 		.word	instructionsList
 2560              		.cfi_endproc
 2561              	.LFE5:
 2562              		.size	getPathInstructions, .-getPathInstructions
 2563              		.section	.text.checkPathDirection,"ax",%progbits
 2564              		.align	2
 2565              		.global	checkPathDirection
 2566              		.thumb
 2567              		.thumb_func
 2568              		.type	checkPathDirection, %function
 2569              	checkPathDirection:
 2570              	.LFB6:
 461:pathfinding.c **** 
 462:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2571              		.loc 1 462 0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 8
 2574              		@ frame_needed = 1, uses_anonymous_args = 0
 2575              		@ link register save eliminated.
 2576 0000 80B4     		push	{r7}
 2577              		.cfi_def_cfa_offset 4
 2578              		.cfi_offset 7, -4
 2579 0002 83B0     		sub	sp, sp, #12
 2580              		.cfi_def_cfa_offset 16
 2581 0004 00AF     		add	r7, sp, #0
 2582              		.cfi_def_cfa_register 7
 2583 0006 7860     		str	r0, [r7, #4]
 2584 0008 3960     		str	r1, [r7]
 463:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 464:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2585              		.loc 1 464 0
 2586 000a 7B68     		ldr	r3, [r7, #4]
 2587 000c 5A1E     		subs	r2, r3, #1
 2588 000e 3E49     		ldr	r1, .L123
 2589 0010 1346     		mov	r3, r2
 2590 0012 DB00     		lsls	r3, r3, #3
 2591 0014 1344     		add	r3, r3, r2
 2592 0016 5B00     		lsls	r3, r3, #1
 2593 0018 1344     		add	r3, r3, r2
 2594 001a 3A68     		ldr	r2, [r7]
 2595 001c 1344     		add	r3, r3, r2
 2596 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2597 0022 082B     		cmp	r3, #8
 2598 0024 0DD0     		beq	.L114
 2599              		.loc 1 464 0 is_stmt 0 discriminator 1
 2600 0026 7B68     		ldr	r3, [r7, #4]
 2601 0028 5A1E     		subs	r2, r3, #1
 2602 002a 3749     		ldr	r1, .L123
 2603 002c 1346     		mov	r3, r2
 2604 002e DB00     		lsls	r3, r3, #3
 2605 0030 1344     		add	r3, r3, r2
 2606 0032 5B00     		lsls	r3, r3, #1
 2607 0034 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 56


 2608 0036 3A68     		ldr	r2, [r7]
 2609 0038 1344     		add	r3, r3, r2
 2610 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2611 003e 092B     		cmp	r3, #9
 2612 0040 01D1     		bne	.L115
 2613              	.L114:
 465:pathfinding.c ****         return 0; // up 
 2614              		.loc 1 465 0 is_stmt 1
 2615 0042 0023     		movs	r3, #0
 2616 0044 5AE0     		b	.L116
 2617              	.L115:
 466:pathfinding.c ****     }
 467:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2618              		.loc 1 467 0
 2619 0046 7B68     		ldr	r3, [r7, #4]
 2620 0048 5A1C     		adds	r2, r3, #1
 2621 004a 2F49     		ldr	r1, .L123
 2622 004c 1346     		mov	r3, r2
 2623 004e DB00     		lsls	r3, r3, #3
 2624 0050 1344     		add	r3, r3, r2
 2625 0052 5B00     		lsls	r3, r3, #1
 2626 0054 1344     		add	r3, r3, r2
 2627 0056 3A68     		ldr	r2, [r7]
 2628 0058 1344     		add	r3, r3, r2
 2629 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2630 005e 082B     		cmp	r3, #8
 2631 0060 0DD0     		beq	.L117
 2632              		.loc 1 467 0 is_stmt 0 discriminator 1
 2633 0062 7B68     		ldr	r3, [r7, #4]
 2634 0064 5A1C     		adds	r2, r3, #1
 2635 0066 2849     		ldr	r1, .L123
 2636 0068 1346     		mov	r3, r2
 2637 006a DB00     		lsls	r3, r3, #3
 2638 006c 1344     		add	r3, r3, r2
 2639 006e 5B00     		lsls	r3, r3, #1
 2640 0070 1344     		add	r3, r3, r2
 2641 0072 3A68     		ldr	r2, [r7]
 2642 0074 1344     		add	r3, r3, r2
 2643 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2644 007a 092B     		cmp	r3, #9
 2645 007c 01D1     		bne	.L118
 2646              	.L117:
 468:pathfinding.c ****         return 1; // down
 2647              		.loc 1 468 0 is_stmt 1
 2648 007e 0123     		movs	r3, #1
 2649 0080 3CE0     		b	.L116
 2650              	.L118:
 469:pathfinding.c ****     }
 470:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2651              		.loc 1 470 0
 2652 0082 3B68     		ldr	r3, [r7]
 2653 0084 591E     		subs	r1, r3, #1
 2654 0086 2048     		ldr	r0, .L123
 2655 0088 7A68     		ldr	r2, [r7, #4]
 2656 008a 1346     		mov	r3, r2
 2657 008c DB00     		lsls	r3, r3, #3
 2658 008e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 57


 2659 0090 5B00     		lsls	r3, r3, #1
 2660 0092 1344     		add	r3, r3, r2
 2661 0094 0B44     		add	r3, r3, r1
 2662 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2663 009a 082B     		cmp	r3, #8
 2664 009c 0DD0     		beq	.L119
 2665              		.loc 1 470 0 is_stmt 0 discriminator 1
 2666 009e 3B68     		ldr	r3, [r7]
 2667 00a0 591E     		subs	r1, r3, #1
 2668 00a2 1948     		ldr	r0, .L123
 2669 00a4 7A68     		ldr	r2, [r7, #4]
 2670 00a6 1346     		mov	r3, r2
 2671 00a8 DB00     		lsls	r3, r3, #3
 2672 00aa 1344     		add	r3, r3, r2
 2673 00ac 5B00     		lsls	r3, r3, #1
 2674 00ae 1344     		add	r3, r3, r2
 2675 00b0 0B44     		add	r3, r3, r1
 2676 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2677 00b6 092B     		cmp	r3, #9
 2678 00b8 01D1     		bne	.L120
 2679              	.L119:
 471:pathfinding.c ****         return 2; // left
 2680              		.loc 1 471 0 is_stmt 1
 2681 00ba 0223     		movs	r3, #2
 2682 00bc 1EE0     		b	.L116
 2683              	.L120:
 472:pathfinding.c ****     }
 473:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2684              		.loc 1 473 0
 2685 00be 3B68     		ldr	r3, [r7]
 2686 00c0 591C     		adds	r1, r3, #1
 2687 00c2 1148     		ldr	r0, .L123
 2688 00c4 7A68     		ldr	r2, [r7, #4]
 2689 00c6 1346     		mov	r3, r2
 2690 00c8 DB00     		lsls	r3, r3, #3
 2691 00ca 1344     		add	r3, r3, r2
 2692 00cc 5B00     		lsls	r3, r3, #1
 2693 00ce 1344     		add	r3, r3, r2
 2694 00d0 0B44     		add	r3, r3, r1
 2695 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2696 00d6 082B     		cmp	r3, #8
 2697 00d8 0DD0     		beq	.L121
 2698              		.loc 1 473 0 is_stmt 0 discriminator 1
 2699 00da 3B68     		ldr	r3, [r7]
 2700 00dc 591C     		adds	r1, r3, #1
 2701 00de 0A48     		ldr	r0, .L123
 2702 00e0 7A68     		ldr	r2, [r7, #4]
 2703 00e2 1346     		mov	r3, r2
 2704 00e4 DB00     		lsls	r3, r3, #3
 2705 00e6 1344     		add	r3, r3, r2
 2706 00e8 5B00     		lsls	r3, r3, #1
 2707 00ea 1344     		add	r3, r3, r2
 2708 00ec 0B44     		add	r3, r3, r1
 2709 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2710 00f2 092B     		cmp	r3, #9
 2711 00f4 01D1     		bne	.L122
 2712              	.L121:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 58


 474:pathfinding.c ****         return 3; // right
 2713              		.loc 1 474 0 is_stmt 1
 2714 00f6 0323     		movs	r3, #3
 2715 00f8 00E0     		b	.L116
 2716              	.L122:
 475:pathfinding.c ****     }
 476:pathfinding.c ****     return 5; // default- will never reach this
 2717              		.loc 1 476 0
 2718 00fa 0523     		movs	r3, #5
 2719              	.L116:
 477:pathfinding.c **** }
 2720              		.loc 1 477 0
 2721 00fc 1846     		mov	r0, r3
 2722 00fe 0C37     		adds	r7, r7, #12
 2723              		.cfi_def_cfa_offset 4
 2724 0100 BD46     		mov	sp, r7
 2725              		.cfi_def_cfa_register 13
 2726              		@ sp needed
 2727 0102 80BC     		pop	{r7}
 2728              		.cfi_restore 7
 2729              		.cfi_def_cfa_offset 0
 2730 0104 7047     		bx	lr
 2731              	.L124:
 2732 0106 00BF     		.align	2
 2733              	.L123:
 2734 0108 00000000 		.word	map
 2735              		.cfi_endproc
 2736              	.LFE6:
 2737              		.size	checkPathDirection, .-checkPathDirection
 2738              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2739              		.align	2
 2740              		.global	checkIgnoreTurn
 2741              		.thumb
 2742              		.thumb_func
 2743              		.type	checkIgnoreTurn, %function
 2744              	checkIgnoreTurn:
 2745              	.LFB7:
 478:pathfinding.c **** 
 479:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2746              		.loc 1 479 0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 16
 2749              		@ frame_needed = 1, uses_anonymous_args = 0
 2750              		@ link register save eliminated.
 2751 0000 80B4     		push	{r7}
 2752              		.cfi_def_cfa_offset 4
 2753              		.cfi_offset 7, -4
 2754 0002 85B0     		sub	sp, sp, #20
 2755              		.cfi_def_cfa_offset 24
 2756 0004 00AF     		add	r7, sp, #0
 2757              		.cfi_def_cfa_register 7
 2758 0006 0346     		mov	r3, r0
 2759 0008 B960     		str	r1, [r7, #8]
 2760 000a 7A60     		str	r2, [r7, #4]
 2761 000c FB73     		strb	r3, [r7, #15]
 480:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 481:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 59


 2762              		.loc 1 481 0
 2763 000e BB68     		ldr	r3, [r7, #8]
 2764 0010 5A1E     		subs	r2, r3, #1
 2765 0012 4149     		ldr	r1, .L143
 2766 0014 1346     		mov	r3, r2
 2767 0016 DB00     		lsls	r3, r3, #3
 2768 0018 1344     		add	r3, r3, r2
 2769 001a 5B00     		lsls	r3, r3, #1
 2770 001c 1344     		add	r3, r3, r2
 2771 001e 7A68     		ldr	r2, [r7, #4]
 2772 0020 1344     		add	r3, r3, r2
 2773 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2774 0026 002B     		cmp	r3, #0
 2775 0028 11D1     		bne	.L126
 482:pathfinding.c ****         switch (robotOrientation) {
 2776              		.loc 1 482 0
 2777 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2778 002c 022B     		cmp	r3, #2
 2779 002e 02D0     		beq	.L128
 2780 0030 032B     		cmp	r3, #3
 2781 0032 06D0     		beq	.L129
 483:pathfinding.c ****             case Left:
 484:pathfinding.c ****                 ignoreR++;
 485:pathfinding.c ****                 break;
 486:pathfinding.c ****             case Right:
 487:pathfinding.c ****                 ignoreL++;
 488:pathfinding.c ****                 break;
 489:pathfinding.c ****             default:
 490:pathfinding.c ****                 break; // ignore when going up and down
 2782              		.loc 1 490 0
 2783 0034 0BE0     		b	.L126
 2784              	.L128:
 484:pathfinding.c ****                 break;
 2785              		.loc 1 484 0
 2786 0036 394B     		ldr	r3, .L143+4
 2787 0038 1B68     		ldr	r3, [r3]
 2788 003a 0133     		adds	r3, r3, #1
 2789 003c 374A     		ldr	r2, .L143+4
 2790 003e 1360     		str	r3, [r2]
 485:pathfinding.c ****             case Right:
 2791              		.loc 1 485 0
 2792 0040 05E0     		b	.L126
 2793              	.L129:
 487:pathfinding.c ****                 break;
 2794              		.loc 1 487 0
 2795 0042 374B     		ldr	r3, .L143+8
 2796 0044 1B68     		ldr	r3, [r3]
 2797 0046 0133     		adds	r3, r3, #1
 2798 0048 354A     		ldr	r2, .L143+8
 2799 004a 1360     		str	r3, [r2]
 488:pathfinding.c ****             default:
 2800              		.loc 1 488 0
 2801 004c 00BF     		nop
 2802              	.L126:
 491:pathfinding.c ****         }
 492:pathfinding.c ****     }
 493:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 60


 2803              		.loc 1 493 0
 2804 004e BB68     		ldr	r3, [r7, #8]
 2805 0050 5A1C     		adds	r2, r3, #1
 2806 0052 3149     		ldr	r1, .L143
 2807 0054 1346     		mov	r3, r2
 2808 0056 DB00     		lsls	r3, r3, #3
 2809 0058 1344     		add	r3, r3, r2
 2810 005a 5B00     		lsls	r3, r3, #1
 2811 005c 1344     		add	r3, r3, r2
 2812 005e 7A68     		ldr	r2, [r7, #4]
 2813 0060 1344     		add	r3, r3, r2
 2814 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2815 0066 002B     		cmp	r3, #0
 2816 0068 11D1     		bne	.L130
 494:pathfinding.c ****         switch (robotOrientation) {
 2817              		.loc 1 494 0
 2818 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2819 006c 022B     		cmp	r3, #2
 2820 006e 02D0     		beq	.L132
 2821 0070 032B     		cmp	r3, #3
 2822 0072 06D0     		beq	.L133
 495:pathfinding.c ****             case Left:
 496:pathfinding.c ****                 ignoreL++;
 497:pathfinding.c ****                 break;
 498:pathfinding.c ****             case Right:
 499:pathfinding.c ****                 ignoreR++;
 500:pathfinding.c ****                 break;
 501:pathfinding.c ****             default:
 502:pathfinding.c ****                 break;
 2823              		.loc 1 502 0
 2824 0074 0BE0     		b	.L130
 2825              	.L132:
 496:pathfinding.c ****                 break;
 2826              		.loc 1 496 0
 2827 0076 2A4B     		ldr	r3, .L143+8
 2828 0078 1B68     		ldr	r3, [r3]
 2829 007a 0133     		adds	r3, r3, #1
 2830 007c 284A     		ldr	r2, .L143+8
 2831 007e 1360     		str	r3, [r2]
 497:pathfinding.c ****             case Right:
 2832              		.loc 1 497 0
 2833 0080 05E0     		b	.L130
 2834              	.L133:
 499:pathfinding.c ****                 break;
 2835              		.loc 1 499 0
 2836 0082 264B     		ldr	r3, .L143+4
 2837 0084 1B68     		ldr	r3, [r3]
 2838 0086 0133     		adds	r3, r3, #1
 2839 0088 244A     		ldr	r2, .L143+4
 2840 008a 1360     		str	r3, [r2]
 500:pathfinding.c ****             default:
 2841              		.loc 1 500 0
 2842 008c 00BF     		nop
 2843              	.L130:
 503:pathfinding.c ****         }
 504:pathfinding.c ****     }
 505:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 61


 2844              		.loc 1 505 0
 2845 008e 7B68     		ldr	r3, [r7, #4]
 2846 0090 591E     		subs	r1, r3, #1
 2847 0092 2148     		ldr	r0, .L143
 2848 0094 BA68     		ldr	r2, [r7, #8]
 2849 0096 1346     		mov	r3, r2
 2850 0098 DB00     		lsls	r3, r3, #3
 2851 009a 1344     		add	r3, r3, r2
 2852 009c 5B00     		lsls	r3, r3, #1
 2853 009e 1344     		add	r3, r3, r2
 2854 00a0 0B44     		add	r3, r3, r1
 2855 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2856 00a6 002B     		cmp	r3, #0
 2857 00a8 11D1     		bne	.L134
 506:pathfinding.c ****         switch (robotOrientation) {
 2858              		.loc 1 506 0
 2859 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2860 00ac 002B     		cmp	r3, #0
 2861 00ae 02D0     		beq	.L136
 2862 00b0 012B     		cmp	r3, #1
 2863 00b2 06D0     		beq	.L137
 507:pathfinding.c ****             case Up:
 508:pathfinding.c ****                 ignoreL++;
 509:pathfinding.c ****                 break;
 510:pathfinding.c ****             case Down:
 511:pathfinding.c ****                 ignoreR++;
 512:pathfinding.c ****                 break;
 513:pathfinding.c ****             default:
 514:pathfinding.c ****                 break;
 2864              		.loc 1 514 0
 2865 00b4 0BE0     		b	.L134
 2866              	.L136:
 508:pathfinding.c ****                 break;
 2867              		.loc 1 508 0
 2868 00b6 1A4B     		ldr	r3, .L143+8
 2869 00b8 1B68     		ldr	r3, [r3]
 2870 00ba 0133     		adds	r3, r3, #1
 2871 00bc 184A     		ldr	r2, .L143+8
 2872 00be 1360     		str	r3, [r2]
 509:pathfinding.c ****             case Down:
 2873              		.loc 1 509 0
 2874 00c0 05E0     		b	.L134
 2875              	.L137:
 511:pathfinding.c ****                 break;
 2876              		.loc 1 511 0
 2877 00c2 164B     		ldr	r3, .L143+4
 2878 00c4 1B68     		ldr	r3, [r3]
 2879 00c6 0133     		adds	r3, r3, #1
 2880 00c8 144A     		ldr	r2, .L143+4
 2881 00ca 1360     		str	r3, [r2]
 512:pathfinding.c ****             default:
 2882              		.loc 1 512 0
 2883 00cc 00BF     		nop
 2884              	.L134:
 515:pathfinding.c ****         }
 516:pathfinding.c ****     }
 517:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 62


 2885              		.loc 1 517 0
 2886 00ce 7B68     		ldr	r3, [r7, #4]
 2887 00d0 591C     		adds	r1, r3, #1
 2888 00d2 1148     		ldr	r0, .L143
 2889 00d4 BA68     		ldr	r2, [r7, #8]
 2890 00d6 1346     		mov	r3, r2
 2891 00d8 DB00     		lsls	r3, r3, #3
 2892 00da 1344     		add	r3, r3, r2
 2893 00dc 5B00     		lsls	r3, r3, #1
 2894 00de 1344     		add	r3, r3, r2
 2895 00e0 0B44     		add	r3, r3, r1
 2896 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2897 00e6 002B     		cmp	r3, #0
 2898 00e8 11D1     		bne	.L142
 518:pathfinding.c ****         switch (robotOrientation) {
 2899              		.loc 1 518 0
 2900 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2901 00ec 002B     		cmp	r3, #0
 2902 00ee 02D0     		beq	.L140
 2903 00f0 012B     		cmp	r3, #1
 2904 00f2 06D0     		beq	.L141
 519:pathfinding.c ****             case Up:
 520:pathfinding.c ****                 ignoreR++;
 521:pathfinding.c ****                 break;
 522:pathfinding.c ****             case Down:
 523:pathfinding.c ****                 ignoreL++;
 524:pathfinding.c ****                 break;
 525:pathfinding.c ****             default:
 526:pathfinding.c ****                 break;
 2905              		.loc 1 526 0
 2906 00f4 0BE0     		b	.L138
 2907              	.L140:
 520:pathfinding.c ****                 break;
 2908              		.loc 1 520 0
 2909 00f6 094B     		ldr	r3, .L143+4
 2910 00f8 1B68     		ldr	r3, [r3]
 2911 00fa 0133     		adds	r3, r3, #1
 2912 00fc 074A     		ldr	r2, .L143+4
 2913 00fe 1360     		str	r3, [r2]
 521:pathfinding.c ****             case Down:
 2914              		.loc 1 521 0
 2915 0100 05E0     		b	.L138
 2916              	.L141:
 523:pathfinding.c ****                 break;
 2917              		.loc 1 523 0
 2918 0102 074B     		ldr	r3, .L143+8
 2919 0104 1B68     		ldr	r3, [r3]
 2920 0106 0133     		adds	r3, r3, #1
 2921 0108 054A     		ldr	r2, .L143+8
 2922 010a 1360     		str	r3, [r2]
 524:pathfinding.c ****             default:
 2923              		.loc 1 524 0
 2924 010c 00BF     		nop
 2925              	.L138:
 2926              	.L142:
 527:pathfinding.c ****         }
 528:pathfinding.c ****     }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 63


 529:pathfinding.c **** }
 2927              		.loc 1 529 0
 2928 010e 00BF     		nop
 2929 0110 1437     		adds	r7, r7, #20
 2930              		.cfi_def_cfa_offset 4
 2931 0112 BD46     		mov	sp, r7
 2932              		.cfi_def_cfa_register 13
 2933              		@ sp needed
 2934 0114 80BC     		pop	{r7}
 2935              		.cfi_restore 7
 2936              		.cfi_def_cfa_offset 0
 2937 0116 7047     		bx	lr
 2938              	.L144:
 2939              		.align	2
 2940              	.L143:
 2941 0118 00000000 		.word	map
 2942 011c 00000000 		.word	ignoreR
 2943 0120 00000000 		.word	ignoreL
 2944              		.cfi_endproc
 2945              	.LFE7:
 2946              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 2947              		.section	.text.getTargetOrientation,"ax",%progbits
 2948              		.align	2
 2949              		.global	getTargetOrientation
 2950              		.thumb
 2951              		.thumb_func
 2952              		.type	getTargetOrientation, %function
 2953              	getTargetOrientation:
 2954              	.LFB8:
 530:pathfinding.c **** 
 531:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 2955              		.loc 1 531 0
 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 8
 2958              		@ frame_needed = 1, uses_anonymous_args = 0
 2959              		@ link register save eliminated.
 2960 0000 80B4     		push	{r7}
 2961              		.cfi_def_cfa_offset 4
 2962              		.cfi_offset 7, -4
 2963 0002 83B0     		sub	sp, sp, #12
 2964              		.cfi_def_cfa_offset 16
 2965 0004 00AF     		add	r7, sp, #0
 2966              		.cfi_def_cfa_register 7
 2967 0006 7860     		str	r0, [r7, #4]
 2968 0008 3960     		str	r1, [r7]
 532:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 2969              		.loc 1 532 0
 2970 000a 7B68     		ldr	r3, [r7, #4]
 2971 000c 5A1C     		adds	r2, r3, #1
 2972 000e 2249     		ldr	r1, .L151
 2973 0010 1346     		mov	r3, r2
 2974 0012 DB00     		lsls	r3, r3, #3
 2975 0014 1344     		add	r3, r3, r2
 2976 0016 5B00     		lsls	r3, r3, #1
 2977 0018 1344     		add	r3, r3, r2
 2978 001a 3A68     		ldr	r2, [r7]
 2979 001c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 64


 2980 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2981 0022 082B     		cmp	r3, #8
 2982 0024 01D1     		bne	.L146
 533:pathfinding.c ****         return 0; // robot will be travelling up
 2983              		.loc 1 533 0
 2984 0026 0023     		movs	r3, #0
 2985 0028 30E0     		b	.L147
 2986              	.L146:
 534:pathfinding.c ****     }
 535:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 2987              		.loc 1 535 0
 2988 002a 7B68     		ldr	r3, [r7, #4]
 2989 002c 5A1E     		subs	r2, r3, #1
 2990 002e 1A49     		ldr	r1, .L151
 2991 0030 1346     		mov	r3, r2
 2992 0032 DB00     		lsls	r3, r3, #3
 2993 0034 1344     		add	r3, r3, r2
 2994 0036 5B00     		lsls	r3, r3, #1
 2995 0038 1344     		add	r3, r3, r2
 2996 003a 3A68     		ldr	r2, [r7]
 2997 003c 1344     		add	r3, r3, r2
 2998 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2999 0042 082B     		cmp	r3, #8
 3000 0044 01D1     		bne	.L148
 536:pathfinding.c ****         return 1; // robot will be travelling down
 3001              		.loc 1 536 0
 3002 0046 0123     		movs	r3, #1
 3003 0048 20E0     		b	.L147
 3004              	.L148:
 537:pathfinding.c ****     }
 538:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 3005              		.loc 1 538 0
 3006 004a 3B68     		ldr	r3, [r7]
 3007 004c 591C     		adds	r1, r3, #1
 3008 004e 1248     		ldr	r0, .L151
 3009 0050 7A68     		ldr	r2, [r7, #4]
 3010 0052 1346     		mov	r3, r2
 3011 0054 DB00     		lsls	r3, r3, #3
 3012 0056 1344     		add	r3, r3, r2
 3013 0058 5B00     		lsls	r3, r3, #1
 3014 005a 1344     		add	r3, r3, r2
 3015 005c 0B44     		add	r3, r3, r1
 3016 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3017 0062 082B     		cmp	r3, #8
 3018 0064 01D1     		bne	.L149
 539:pathfinding.c ****         return 2; // robot will be travelling left
 3019              		.loc 1 539 0
 3020 0066 0223     		movs	r3, #2
 3021 0068 10E0     		b	.L147
 3022              	.L149:
 540:pathfinding.c ****     }
 541:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 3023              		.loc 1 541 0
 3024 006a 3B68     		ldr	r3, [r7]
 3025 006c 591E     		subs	r1, r3, #1
 3026 006e 0A48     		ldr	r0, .L151
 3027 0070 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 65


 3028 0072 1346     		mov	r3, r2
 3029 0074 DB00     		lsls	r3, r3, #3
 3030 0076 1344     		add	r3, r3, r2
 3031 0078 5B00     		lsls	r3, r3, #1
 3032 007a 1344     		add	r3, r3, r2
 3033 007c 0B44     		add	r3, r3, r1
 3034 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3035 0082 082B     		cmp	r3, #8
 3036 0084 01D1     		bne	.L150
 542:pathfinding.c ****         return 3; // robot will be travelling right
 3037              		.loc 1 542 0
 3038 0086 0323     		movs	r3, #3
 3039 0088 00E0     		b	.L147
 3040              	.L150:
 543:pathfinding.c ****     }
 544:pathfinding.c ****     return 5; // placeholder
 3041              		.loc 1 544 0
 3042 008a 0523     		movs	r3, #5
 3043              	.L147:
 545:pathfinding.c **** }
 3044              		.loc 1 545 0
 3045 008c 1846     		mov	r0, r3
 3046 008e 0C37     		adds	r7, r7, #12
 3047              		.cfi_def_cfa_offset 4
 3048 0090 BD46     		mov	sp, r7
 3049              		.cfi_def_cfa_register 13
 3050              		@ sp needed
 3051 0092 80BC     		pop	{r7}
 3052              		.cfi_restore 7
 3053              		.cfi_def_cfa_offset 0
 3054 0094 7047     		bx	lr
 3055              	.L152:
 3056 0096 00BF     		.align	2
 3057              	.L151:
 3058 0098 00000000 		.word	map
 3059              		.cfi_endproc
 3060              	.LFE8:
 3061              		.size	getTargetOrientation, .-getTargetOrientation
 3062              		.section	.text.instructionsListLength,"ax",%progbits
 3063              		.align	2
 3064              		.global	instructionsListLength
 3065              		.thumb
 3066              		.thumb_func
 3067              		.type	instructionsListLength, %function
 3068              	instructionsListLength:
 3069              	.LFB9:
 546:pathfinding.c **** uint8_t instructionsListLength() {
 3070              		.loc 1 546 0
 3071              		.cfi_startproc
 3072              		@ args = 0, pretend = 0, frame = 0
 3073              		@ frame_needed = 1, uses_anonymous_args = 0
 3074              		@ link register save eliminated.
 3075 0000 80B4     		push	{r7}
 3076              		.cfi_def_cfa_offset 4
 3077              		.cfi_offset 7, -4
 3078 0002 00AF     		add	r7, sp, #0
 3079              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 66


 547:pathfinding.c ****     return numSteps;
 3080              		.loc 1 547 0
 3081 0004 034B     		ldr	r3, .L155
 3082 0006 1B68     		ldr	r3, [r3]
 3083 0008 DBB2     		uxtb	r3, r3
 548:pathfinding.c **** }
 3084              		.loc 1 548 0
 3085 000a 1846     		mov	r0, r3
 3086 000c BD46     		mov	sp, r7
 3087              		.cfi_def_cfa_register 13
 3088              		@ sp needed
 3089 000e 80BC     		pop	{r7}
 3090              		.cfi_restore 7
 3091              		.cfi_def_cfa_offset 0
 3092 0010 7047     		bx	lr
 3093              	.L156:
 3094 0012 00BF     		.align	2
 3095              	.L155:
 3096 0014 D0110000 		.word	numSteps
 3097              		.cfi_endproc
 3098              	.LFE9:
 3099              		.size	instructionsListLength, .-instructionsListLength
 3100              		.section	.text.findPath,"ax",%progbits
 3101              		.align	2
 3102              		.global	findPath
 3103              		.thumb
 3104              		.thumb_func
 3105              		.type	findPath, %function
 3106              	findPath:
 3107              	.LFB10:
 549:pathfinding.c **** 
 550:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 3108              		.loc 1 550 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 32
 3111              		@ frame_needed = 1, uses_anonymous_args = 0
 3112 0000 90B5     		push	{r4, r7, lr}
 3113              		.cfi_def_cfa_offset 12
 3114              		.cfi_offset 4, -12
 3115              		.cfi_offset 7, -8
 3116              		.cfi_offset 14, -4
 3117 0002 8BB0     		sub	sp, sp, #44
 3118              		.cfi_def_cfa_offset 56
 3119 0004 02AF     		add	r7, sp, #8
 3120              		.cfi_def_cfa 7, 48
 3121 0006 F860     		str	r0, [r7, #12]
 3122 0008 B960     		str	r1, [r7, #8]
 3123 000a 7A60     		str	r2, [r7, #4]
 551:pathfinding.c ****     //clearMap(map); // clear map between each pass
 552:pathfinding.c ****     struct Location startLocation, targetLocation;
 553:pathfinding.c ****     startLocation.row = start_pos[0];
 3124              		.loc 1 553 0
 3125 000c 174B     		ldr	r3, .L159
 3126 000e 1B68     		ldr	r3, [r3]
 3127 0010 BB61     		str	r3, [r7, #24]
 554:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 3128              		.loc 1 554 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 67


 3129 0012 164B     		ldr	r3, .L159
 3130 0014 5B68     		ldr	r3, [r3, #4]
 3131 0016 FB61     		str	r3, [r7, #28]
 555:pathfinding.c ****     targetLocation.row = food_list[i][0];
 3132              		.loc 1 555 0
 3133 0018 7B68     		ldr	r3, [r7, #4]
 3134 001a DB00     		lsls	r3, r3, #3
 3135 001c BA68     		ldr	r2, [r7, #8]
 3136 001e 1344     		add	r3, r3, r2
 3137 0020 1B68     		ldr	r3, [r3]
 3138 0022 3B61     		str	r3, [r7, #16]
 556:pathfinding.c ****     targetLocation.col = food_list[i][1];
 3139              		.loc 1 556 0
 3140 0024 7B68     		ldr	r3, [r7, #4]
 3141 0026 DB00     		lsls	r3, r3, #3
 3142 0028 BA68     		ldr	r2, [r7, #8]
 3143 002a 1344     		add	r3, r3, r2
 3144 002c 5B68     		ldr	r3, [r3, #4]
 3145 002e 7B61     		str	r3, [r7, #20]
 557:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 3146              		.loc 1 557 0
 3147 0030 7B69     		ldr	r3, [r7, #20]
 3148 0032 0093     		str	r3, [sp]
 3149 0034 3B69     		ldr	r3, [r7, #16]
 3150 0036 07F11802 		add	r2, r7, #24
 3151 003a 06CA     		ldmia	r2, {r1, r2}
 3152 003c F868     		ldr	r0, [r7, #12]
 3153 003e FFF7FEFF 		bl	dijkstra
 558:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 3154              		.loc 1 558 0
 3155 0042 0B4B     		ldr	r3, .L159+4
 3156 0044 1C68     		ldr	r4, [r3]
 3157 0046 6A46     		mov	r2, sp
 3158 0048 07F11003 		add	r3, r7, #16
 3159 004c 93E80300 		ldmia	r3, {r0, r1}
 3160 0050 82E80300 		stmia	r2, {r0, r1}
 3161 0054 07F11803 		add	r3, r7, #24
 3162 0058 0CCB     		ldmia	r3, {r2, r3}
 3163 005a 2146     		mov	r1, r4
 3164 005c F868     		ldr	r0, [r7, #12]
 3165 005e FFF7FEFF 		bl	getPathInstructions
 559:pathfinding.c ****     return instructionsList;
 3166              		.loc 1 559 0
 3167 0062 044B     		ldr	r3, .L159+8
 560:pathfinding.c **** }
 3168              		.loc 1 560 0
 3169 0064 1846     		mov	r0, r3
 3170 0066 2437     		adds	r7, r7, #36
 3171              		.cfi_def_cfa_offset 12
 3172 0068 BD46     		mov	sp, r7
 3173              		.cfi_def_cfa_register 13
 3174              		@ sp needed
 3175 006a 90BD     		pop	{r4, r7, pc}
 3176              	.L160:
 3177              		.align	2
 3178              	.L159:
 3179 006c 00000000 		.word	start_pos
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 68


 3180 0070 D0110000 		.word	numSteps
 3181 0074 00000000 		.word	instructionsList
 3182              		.cfi_endproc
 3183              	.LFE10:
 3184              		.size	findPath, .-findPath
 3185              		.text
 3186              	.Letext0:
 3187              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3188              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3189              		.file 4 "pathfinding.h"
 3190              		.section	.debug_info,"",%progbits
 3191              	.Ldebug_info0:
 3192 0000 D3080000 		.4byte	0x8d3
 3193 0004 0400     		.2byte	0x4
 3194 0006 00000000 		.4byte	.Ldebug_abbrev0
 3195 000a 04       		.byte	0x4
 3196 000b 01       		.uleb128 0x1
 3197 000c 50000000 		.4byte	.LASF80
 3198 0010 0C       		.byte	0xc
 3199 0011 2D040000 		.4byte	.LASF81
 3200 0015 46010000 		.4byte	.LASF82
 3201 0019 78000000 		.4byte	.Ldebug_ranges0+0x78
 3202 001d 00000000 		.4byte	0
 3203 0021 00000000 		.4byte	.Ldebug_line0
 3204 0025 02       		.uleb128 0x2
 3205 0026 01       		.byte	0x1
 3206 0027 06       		.byte	0x6
 3207 0028 30000000 		.4byte	.LASF0
 3208 002c 03       		.uleb128 0x3
 3209 002d 3C000000 		.4byte	.LASF12
 3210 0031 02       		.byte	0x2
 3211 0032 1D       		.byte	0x1d
 3212 0033 37000000 		.4byte	0x37
 3213 0037 02       		.uleb128 0x2
 3214 0038 01       		.byte	0x1
 3215 0039 08       		.byte	0x8
 3216 003a 2F030000 		.4byte	.LASF1
 3217 003e 02       		.uleb128 0x2
 3218 003f 02       		.byte	0x2
 3219 0040 05       		.byte	0x5
 3220 0041 70030000 		.4byte	.LASF2
 3221 0045 02       		.uleb128 0x2
 3222 0046 02       		.byte	0x2
 3223 0047 07       		.byte	0x7
 3224 0048 71020000 		.4byte	.LASF3
 3225 004c 02       		.uleb128 0x2
 3226 004d 04       		.byte	0x4
 3227 004e 05       		.byte	0x5
 3228 004f B5010000 		.4byte	.LASF4
 3229 0053 02       		.uleb128 0x2
 3230 0054 04       		.byte	0x4
 3231 0055 07       		.byte	0x7
 3232 0056 4D020000 		.4byte	.LASF5
 3233 005a 02       		.uleb128 0x2
 3234 005b 08       		.byte	0x8
 3235 005c 05       		.byte	0x5
 3236 005d 38010000 		.4byte	.LASF6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 69


 3237 0061 02       		.uleb128 0x2
 3238 0062 08       		.byte	0x8
 3239 0063 07       		.byte	0x7
 3240 0064 E6000000 		.4byte	.LASF7
 3241 0068 04       		.uleb128 0x4
 3242 0069 04       		.byte	0x4
 3243 006a 05       		.byte	0x5
 3244 006b 696E7400 		.ascii	"int\000"
 3245 006f 02       		.uleb128 0x2
 3246 0070 04       		.byte	0x4
 3247 0071 07       		.byte	0x7
 3248 0072 33020000 		.4byte	.LASF8
 3249 0076 02       		.uleb128 0x2
 3250 0077 08       		.byte	0x8
 3251 0078 04       		.byte	0x4
 3252 0079 C1020000 		.4byte	.LASF9
 3253 007d 02       		.uleb128 0x2
 3254 007e 04       		.byte	0x4
 3255 007f 07       		.byte	0x7
 3256 0080 B8020000 		.4byte	.LASF10
 3257 0084 02       		.uleb128 0x2
 3258 0085 01       		.byte	0x1
 3259 0086 08       		.byte	0x8
 3260 0087 C9030000 		.4byte	.LASF11
 3261 008b 03       		.uleb128 0x3
 3262 008c 79040000 		.4byte	.LASF13
 3263 0090 03       		.byte	0x3
 3264 0091 18       		.byte	0x18
 3265 0092 2C000000 		.4byte	0x2c
 3266 0096 05       		.uleb128 0x5
 3267 0097 00000000 		.4byte	.LASF17
 3268 009b 01       		.byte	0x1
 3269 009c 37000000 		.4byte	0x37
 3270 00a0 04       		.byte	0x4
 3271 00a1 0D       		.byte	0xd
 3272 00a2 BE000000 		.4byte	0xbe
 3273 00a6 06       		.uleb128 0x6
 3274 00a7 557000   		.ascii	"Up\000"
 3275 00aa 00       		.byte	0
 3276 00ab 07       		.uleb128 0x7
 3277 00ac 04040000 		.4byte	.LASF14
 3278 00b0 01       		.byte	0x1
 3279 00b1 07       		.uleb128 0x7
 3280 00b2 B3020000 		.4byte	.LASF15
 3281 00b6 02       		.byte	0x2
 3282 00b7 07       		.uleb128 0x7
 3283 00b8 93030000 		.4byte	.LASF16
 3284 00bc 03       		.byte	0x3
 3285 00bd 00       		.byte	0
 3286 00be 05       		.uleb128 0x5
 3287 00bf 3D030000 		.4byte	.LASF18
 3288 00c3 01       		.byte	0x1
 3289 00c4 37000000 		.4byte	0x37
 3290 00c8 04       		.byte	0x4
 3291 00c9 0E       		.byte	0xe
 3292 00ca F9000000 		.4byte	0xf9
 3293 00ce 07       		.uleb128 0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 70


 3294 00cf 89030000 		.4byte	.LASF19
 3295 00d3 00       		.byte	0
 3296 00d4 07       		.uleb128 0x7
 3297 00d5 E8020000 		.4byte	.LASF20
 3298 00d9 01       		.byte	0x1
 3299 00da 07       		.uleb128 0x7
 3300 00db 4C040000 		.4byte	.LASF21
 3301 00df 02       		.byte	0x2
 3302 00e0 07       		.uleb128 0x7
 3303 00e1 1B010000 		.4byte	.LASF22
 3304 00e5 03       		.byte	0x3
 3305 00e6 07       		.uleb128 0x7
 3306 00e7 CD010000 		.4byte	.LASF23
 3307 00eb 04       		.byte	0x4
 3308 00ec 07       		.uleb128 0x7
 3309 00ed 84020000 		.4byte	.LASF24
 3310 00f1 05       		.byte	0x5
 3311 00f2 07       		.uleb128 0x7
 3312 00f3 1A000000 		.4byte	.LASF25
 3313 00f7 06       		.byte	0x6
 3314 00f8 00       		.byte	0
 3315 00f9 08       		.uleb128 0x8
 3316 00fa 9E010000 		.4byte	.LASF30
 3317 00fe 10       		.byte	0x10
 3318 00ff 04       		.byte	0x4
 3319 0100 10       		.byte	0x10
 3320 0101 36010000 		.4byte	0x136
 3321 0105 09       		.uleb128 0x9
 3322 0106 46000000 		.4byte	.LASF26
 3323 010a 04       		.byte	0x4
 3324 010b 11       		.byte	0x11
 3325 010c BE000000 		.4byte	0xbe
 3326 0110 00       		.byte	0
 3327 0111 09       		.uleb128 0x9
 3328 0112 B6040000 		.4byte	.LASF27
 3329 0116 04       		.byte	0x4
 3330 0117 12       		.byte	0x12
 3331 0118 68000000 		.4byte	0x68
 3332 011c 04       		.byte	0x4
 3333 011d 09       		.uleb128 0x9
 3334 011e BE040000 		.4byte	.LASF28
 3335 0122 04       		.byte	0x4
 3336 0123 13       		.byte	0x13
 3337 0124 68000000 		.4byte	0x68
 3338 0128 08       		.byte	0x8
 3339 0129 09       		.uleb128 0x9
 3340 012a FD000000 		.4byte	.LASF29
 3341 012e 04       		.byte	0x4
 3342 012f 14       		.byte	0x14
 3343 0130 96000000 		.4byte	0x96
 3344 0134 0C       		.byte	0xc
 3345 0135 00       		.byte	0
 3346 0136 03       		.uleb128 0x3
 3347 0137 9E010000 		.4byte	.LASF30
 3348 013b 04       		.byte	0x4
 3349 013c 15       		.byte	0x15
 3350 013d F9000000 		.4byte	0xf9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 71


 3351 0141 08       		.uleb128 0x8
 3352 0142 E0010000 		.4byte	.LASF31
 3353 0146 08       		.byte	0x8
 3354 0147 04       		.byte	0x4
 3355 0148 19       		.byte	0x19
 3356 0149 66010000 		.4byte	0x166
 3357 014d 0A       		.uleb128 0xa
 3358 014e 726F7700 		.ascii	"row\000"
 3359 0152 04       		.byte	0x4
 3360 0153 1B       		.byte	0x1b
 3361 0154 68000000 		.4byte	0x68
 3362 0158 00       		.byte	0
 3363 0159 0A       		.uleb128 0xa
 3364 015a 636F6C00 		.ascii	"col\000"
 3365 015e 04       		.byte	0x4
 3366 015f 1C       		.byte	0x1c
 3367 0160 68000000 		.4byte	0x68
 3368 0164 04       		.byte	0x4
 3369 0165 00       		.byte	0
 3370 0166 0B       		.uleb128 0xb
 3371 0167 2F010000 		.4byte	.LASF32
 3372 016b 01       		.byte	0x1
 3373 016c 54       		.byte	0x54
 3374 016d 00000000 		.4byte	.LFB1
 3375 0171 58000000 		.4byte	.LFE1-.LFB1
 3376 0175 01       		.uleb128 0x1
 3377 0176 9C       		.byte	0x9c
 3378 0177 B6010000 		.4byte	0x1b6
 3379 017b 0C       		.uleb128 0xc
 3380 017c 6D617000 		.ascii	"map\000"
 3381 0180 01       		.byte	0x1
 3382 0181 54       		.byte	0x54
 3383 0182 C6010000 		.4byte	0x1c6
 3384 0186 02       		.uleb128 0x2
 3385 0187 91       		.byte	0x91
 3386 0188 6C       		.sleb128 -20
 3387 0189 0D       		.uleb128 0xd
 3388 018a 08000000 		.4byte	.LBB2
 3389 018e 44000000 		.4byte	.LBE2-.LBB2
 3390 0192 0E       		.uleb128 0xe
 3391 0193 6900     		.ascii	"i\000"
 3392 0195 01       		.byte	0x1
 3393 0196 56       		.byte	0x56
 3394 0197 68000000 		.4byte	0x68
 3395 019b 02       		.uleb128 0x2
 3396 019c 91       		.byte	0x91
 3397 019d 74       		.sleb128 -12
 3398 019e 0D       		.uleb128 0xd
 3399 019f 0E000000 		.4byte	.LBB3
 3400 01a3 2C000000 		.4byte	.LBE3-.LBB3
 3401 01a7 0E       		.uleb128 0xe
 3402 01a8 6A00     		.ascii	"j\000"
 3403 01aa 01       		.byte	0x1
 3404 01ab 57       		.byte	0x57
 3405 01ac 68000000 		.4byte	0x68
 3406 01b0 02       		.uleb128 0x2
 3407 01b1 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 72


 3408 01b2 70       		.sleb128 -16
 3409 01b3 00       		.byte	0
 3410 01b4 00       		.byte	0
 3411 01b5 00       		.byte	0
 3412 01b6 0F       		.uleb128 0xf
 3413 01b7 68000000 		.4byte	0x68
 3414 01bb C6010000 		.4byte	0x1c6
 3415 01bf 10       		.uleb128 0x10
 3416 01c0 7D000000 		.4byte	0x7d
 3417 01c4 12       		.byte	0x12
 3418 01c5 00       		.byte	0
 3419 01c6 11       		.uleb128 0x11
 3420 01c7 04       		.byte	0x4
 3421 01c8 B6010000 		.4byte	0x1b6
 3422 01cc 12       		.uleb128 0x12
 3423 01cd 13030000 		.4byte	.LASF33
 3424 01d1 01       		.byte	0x1
 3425 01d2 5D       		.byte	0x5d
 3426 01d3 00000000 		.4byte	.LFB2
 3427 01d7 60000000 		.4byte	.LFE2-.LFB2
 3428 01db 01       		.uleb128 0x1
 3429 01dc 9C       		.byte	0x9c
 3430 01dd 1C020000 		.4byte	0x21c
 3431 01e1 0C       		.uleb128 0xc
 3432 01e2 6D617000 		.ascii	"map\000"
 3433 01e6 01       		.byte	0x1
 3434 01e7 5D       		.byte	0x5d
 3435 01e8 C6010000 		.4byte	0x1c6
 3436 01ec 02       		.uleb128 0x2
 3437 01ed 91       		.byte	0x91
 3438 01ee 6C       		.sleb128 -20
 3439 01ef 0D       		.uleb128 0xd
 3440 01f0 08000000 		.4byte	.LBB4
 3441 01f4 4E000000 		.4byte	.LBE4-.LBB4
 3442 01f8 0E       		.uleb128 0xe
 3443 01f9 6900     		.ascii	"i\000"
 3444 01fb 01       		.byte	0x1
 3445 01fc 5F       		.byte	0x5f
 3446 01fd 68000000 		.4byte	0x68
 3447 0201 02       		.uleb128 0x2
 3448 0202 91       		.byte	0x91
 3449 0203 74       		.sleb128 -12
 3450 0204 0D       		.uleb128 0xd
 3451 0205 0E000000 		.4byte	.LBB5
 3452 0209 3C000000 		.4byte	.LBE5-.LBB5
 3453 020d 0E       		.uleb128 0xe
 3454 020e 6A00     		.ascii	"j\000"
 3455 0210 01       		.byte	0x1
 3456 0211 60       		.byte	0x60
 3457 0212 68000000 		.4byte	0x68
 3458 0216 02       		.uleb128 0x2
 3459 0217 91       		.byte	0x91
 3460 0218 70       		.sleb128 -16
 3461 0219 00       		.byte	0
 3462 021a 00       		.byte	0
 3463 021b 00       		.byte	0
 3464 021c 13       		.uleb128 0x13
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 73


 3465 021d 24000000 		.4byte	.LASF65
 3466 0221 01       		.byte	0x1
 3467 0222 6B       		.byte	0x6b
 3468 0223 78020000 		.4byte	0x278
 3469 0227 00000000 		.4byte	.LFB3
 3470 022b 56000000 		.4byte	.LFE3-.LFB3
 3471 022f 01       		.uleb128 0x1
 3472 0230 9C       		.byte	0x9c
 3473 0231 78020000 		.4byte	0x278
 3474 0235 0C       		.uleb128 0xc
 3475 0236 7200     		.ascii	"r\000"
 3476 0238 01       		.byte	0x1
 3477 0239 6B       		.byte	0x6b
 3478 023a 68000000 		.4byte	0x68
 3479 023e 02       		.uleb128 0x2
 3480 023f 91       		.byte	0x91
 3481 0240 74       		.sleb128 -12
 3482 0241 0C       		.uleb128 0xc
 3483 0242 6300     		.ascii	"c\000"
 3484 0244 01       		.byte	0x1
 3485 0245 6B       		.byte	0x6b
 3486 0246 68000000 		.4byte	0x68
 3487 024a 02       		.uleb128 0x2
 3488 024b 91       		.byte	0x91
 3489 024c 70       		.sleb128 -16
 3490 024d 14       		.uleb128 0x14
 3491 024e 1F000000 		.4byte	.LASF34
 3492 0252 01       		.byte	0x1
 3493 0253 6B       		.byte	0x6b
 3494 0254 68000000 		.4byte	0x68
 3495 0258 02       		.uleb128 0x2
 3496 0259 91       		.byte	0x91
 3497 025a 6C       		.sleb128 -20
 3498 025b 14       		.uleb128 0x14
 3499 025c A8040000 		.4byte	.LASF35
 3500 0260 01       		.byte	0x1
 3501 0261 6B       		.byte	0x6b
 3502 0262 68000000 		.4byte	0x68
 3503 0266 02       		.uleb128 0x2
 3504 0267 91       		.byte	0x91
 3505 0268 68       		.sleb128 -24
 3506 0269 0C       		.uleb128 0xc
 3507 026a 6D617000 		.ascii	"map\000"
 3508 026e 01       		.byte	0x1
 3509 026f 6B       		.byte	0x6b
 3510 0270 C6010000 		.4byte	0x1c6
 3511 0274 02       		.uleb128 0x2
 3512 0275 91       		.byte	0x91
 3513 0276 00       		.sleb128 0
 3514 0277 00       		.byte	0
 3515 0278 02       		.uleb128 0x2
 3516 0279 01       		.byte	0x1
 3517 027a 02       		.byte	0x2
 3518 027b 29030000 		.4byte	.LASF36
 3519 027f 0B       		.uleb128 0xb
 3520 0280 11000000 		.4byte	.LASF37
 3521 0284 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 74


 3522 0285 6F       		.byte	0x6f
 3523 0286 00000000 		.4byte	.LFB4
 3524 028a 4C090000 		.4byte	.LFE4-.LFB4
 3525 028e 01       		.uleb128 0x1
 3526 028f 9C       		.byte	0x9c
 3527 0290 CD040000 		.4byte	0x4cd
 3528 0294 0C       		.uleb128 0xc
 3529 0295 6D617000 		.ascii	"map\000"
 3530 0299 01       		.byte	0x1
 3531 029a 6F       		.byte	0x6f
 3532 029b C6010000 		.4byte	0x1c6
 3533 029f 03       		.uleb128 0x3
 3534 02a0 91       		.byte	0x91
 3535 02a1 BC52     		.sleb128 -5828
 3536 02a3 14       		.uleb128 0x14
 3537 02a4 21010000 		.4byte	.LASF38
 3538 02a8 01       		.byte	0x1
 3539 02a9 6F       		.byte	0x6f
 3540 02aa 41010000 		.4byte	0x141
 3541 02ae 03       		.uleb128 0x3
 3542 02af 91       		.byte	0x91
 3543 02b0 B452     		.sleb128 -5836
 3544 02b2 14       		.uleb128 0x14
 3545 02b3 BE010000 		.4byte	.LASF39
 3546 02b7 01       		.byte	0x1
 3547 02b8 6F       		.byte	0x6f
 3548 02b9 41010000 		.4byte	0x141
 3549 02bd 02       		.uleb128 0x2
 3550 02be 91       		.byte	0x91
 3551 02bf 7C       		.sleb128 -4
 3552 02c0 15       		.uleb128 0x15
 3553 02c1 BE030000 		.4byte	.LASF40
 3554 02c5 01       		.byte	0x1
 3555 02c6 71       		.byte	0x71
 3556 02c7 CD040000 		.4byte	0x4cd
 3557 02cb 03       		.uleb128 0x3
 3558 02cc 91       		.byte	0x91
 3559 02cd 9C76     		.sleb128 -1252
 3560 02cf 08       		.uleb128 0x8
 3561 02d0 5D040000 		.4byte	.LASF41
 3562 02d4 0C       		.byte	0xc
 3563 02d5 01       		.byte	0x1
 3564 02d6 78       		.byte	0x78
 3565 02d7 F4020000 		.4byte	0x2f4
 3566 02db 09       		.uleb128 0x9
 3567 02dc B5030000 		.4byte	.LASF42
 3568 02e0 01       		.byte	0x1
 3569 02e1 79       		.byte	0x79
 3570 02e2 41010000 		.4byte	0x141
 3571 02e6 00       		.byte	0
 3572 02e7 09       		.uleb128 0x9
 3573 02e8 F1030000 		.4byte	.LASF43
 3574 02ec 01       		.byte	0x1
 3575 02ed 7A       		.byte	0x7a
 3576 02ee 68000000 		.4byte	0x68
 3577 02f2 08       		.byte	0x8
 3578 02f3 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 75


 3579 02f4 0E       		.uleb128 0xe
 3580 02f5 707100   		.ascii	"pq\000"
 3581 02f8 01       		.byte	0x1
 3582 02f9 7D       		.byte	0x7d
 3583 02fa E3040000 		.4byte	0x4e3
 3584 02fe 03       		.uleb128 0x3
 3585 02ff 91       		.byte	0x91
 3586 0300 C05B     		.sleb128 -4672
 3587 0302 15       		.uleb128 0x15
 3588 0303 98020000 		.4byte	.LASF44
 3589 0307 01       		.byte	0x1
 3590 0308 7E       		.byte	0x7e
 3591 0309 68000000 		.4byte	0x68
 3592 030d 02       		.uleb128 0x2
 3593 030e 91       		.byte	0x91
 3594 030f 5C       		.sleb128 -36
 3595 0310 15       		.uleb128 0x15
 3596 0311 11010000 		.4byte	.LASF45
 3597 0315 01       		.byte	0x1
 3598 0316 81       		.byte	0x81
 3599 0317 CD040000 		.4byte	0x4cd
 3600 031b 03       		.uleb128 0x3
 3601 031c 91       		.byte	0x91
 3602 031d CC52     		.sleb128 -5812
 3603 031f 15       		.uleb128 0x15
 3604 0320 DE000000 		.4byte	.LASF46
 3605 0324 01       		.byte	0x1
 3606 0325 8A       		.byte	0x8a
 3607 0326 68000000 		.4byte	0x68
 3608 032a 02       		.uleb128 0x2
 3609 032b 91       		.byte	0x91
 3610 032c 50       		.sleb128 -48
 3611 032d 15       		.uleb128 0x15
 3612 032e 40020000 		.4byte	.LASF47
 3613 0332 01       		.byte	0x1
 3614 0333 C1       		.byte	0xc1
 3615 0334 68000000 		.4byte	0x68
 3616 0338 02       		.uleb128 0x2
 3617 0339 91       		.byte	0x91
 3618 033a 40       		.sleb128 -64
 3619 033b 15       		.uleb128 0x15
 3620 033c AC030000 		.4byte	.LASF48
 3621 0340 01       		.byte	0x1
 3622 0341 C4       		.byte	0xc4
 3623 0342 F4040000 		.4byte	0x4f4
 3624 0346 03       		.uleb128 0x3
 3625 0347 91       		.byte	0x91
 3626 0348 987F     		.sleb128 -104
 3627 034a 15       		.uleb128 0x15
 3628 034b CD020000 		.4byte	.LASF49
 3629 034f 01       		.byte	0x1
 3630 0350 C5       		.byte	0xc5
 3631 0351 68000000 		.4byte	0x68
 3632 0355 03       		.uleb128 0x3
 3633 0356 91       		.byte	0x91
 3634 0357 BC7F     		.sleb128 -68
 3635 0359 15       		.uleb128 0x15
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 76


 3636 035a AA010000 		.4byte	.LASF50
 3637 035e 01       		.byte	0x1
 3638 035f C6       		.byte	0xc6
 3639 0360 68000000 		.4byte	0x68
 3640 0364 03       		.uleb128 0x3
 3641 0365 91       		.byte	0x91
 3642 0366 B87F     		.sleb128 -72
 3643 0368 15       		.uleb128 0x15
 3644 0369 09030000 		.4byte	.LASF51
 3645 036d 01       		.byte	0x1
 3646 036e CD       		.byte	0xcd
 3647 036f 68000000 		.4byte	0x68
 3648 0373 03       		.uleb128 0x3
 3649 0374 91       		.byte	0x91
 3650 0375 B47F     		.sleb128 -76
 3651 0377 16       		.uleb128 0x16
 3652 0378 28000000 		.4byte	.LBB6
 3653 037c 92000000 		.4byte	.LBE6-.LBB6
 3654 0380 A7030000 		.4byte	0x3a7
 3655 0384 0E       		.uleb128 0xe
 3656 0385 6900     		.ascii	"i\000"
 3657 0387 01       		.byte	0x1
 3658 0388 72       		.byte	0x72
 3659 0389 68000000 		.4byte	0x68
 3660 038d 02       		.uleb128 0x2
 3661 038e 91       		.byte	0x91
 3662 038f 64       		.sleb128 -28
 3663 0390 0D       		.uleb128 0xd
 3664 0391 36000000 		.4byte	.LBB7
 3665 0395 60000000 		.4byte	.LBE7-.LBB7
 3666 0399 0E       		.uleb128 0xe
 3667 039a 6A00     		.ascii	"j\000"
 3668 039c 01       		.byte	0x1
 3669 039d 73       		.byte	0x73
 3670 039e 68000000 		.4byte	0x68
 3671 03a2 02       		.uleb128 0x2
 3672 03a3 91       		.byte	0x91
 3673 03a4 60       		.sleb128 -32
 3674 03a5 00       		.byte	0
 3675 03a6 00       		.byte	0
 3676 03a7 16       		.uleb128 0x16
 3677 03a8 C6000000 		.4byte	.LBB8
 3678 03ac 92000000 		.4byte	.LBE8-.LBB8
 3679 03b0 D7030000 		.4byte	0x3d7
 3680 03b4 0E       		.uleb128 0xe
 3681 03b5 6900     		.ascii	"i\000"
 3682 03b7 01       		.byte	0x1
 3683 03b8 84       		.byte	0x84
 3684 03b9 68000000 		.4byte	0x68
 3685 03bd 02       		.uleb128 0x2
 3686 03be 91       		.byte	0x91
 3687 03bf 58       		.sleb128 -40
 3688 03c0 0D       		.uleb128 0xd
 3689 03c1 D4000000 		.4byte	.LBB9
 3690 03c5 60000000 		.4byte	.LBE9-.LBB9
 3691 03c9 0E       		.uleb128 0xe
 3692 03ca 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 77


 3693 03cc 01       		.byte	0x1
 3694 03cd 85       		.byte	0x85
 3695 03ce 68000000 		.4byte	0x68
 3696 03d2 02       		.uleb128 0x2
 3697 03d3 91       		.byte	0x91
 3698 03d4 54       		.sleb128 -44
 3699 03d5 00       		.byte	0
 3700 03d6 00       		.byte	0
 3701 03d7 17       		.uleb128 0x17
 3702 03d8 00000000 		.4byte	.Ldebug_ranges0+0
 3703 03dc 8D040000 		.4byte	0x48d
 3704 03e0 0E       		.uleb128 0xe
 3705 03e1 69647800 		.ascii	"idx\000"
 3706 03e5 01       		.byte	0x1
 3707 03e6 94       		.byte	0x94
 3708 03e7 68000000 		.4byte	0x68
 3709 03eb 02       		.uleb128 0x2
 3710 03ec 91       		.byte	0x91
 3711 03ed 4C       		.sleb128 -52
 3712 03ee 15       		.uleb128 0x15
 3713 03ef F8020000 		.4byte	.LASF52
 3714 03f3 01       		.byte	0x1
 3715 03f4 9A       		.byte	0x9a
 3716 03f5 CF020000 		.4byte	0x2cf
 3717 03f9 03       		.uleb128 0x3
 3718 03fa 91       		.byte	0x91
 3719 03fb C052     		.sleb128 -5824
 3720 03fd 0E       		.uleb128 0xe
 3721 03fe 726F7700 		.ascii	"row\000"
 3722 0402 01       		.byte	0x1
 3723 0403 9E       		.byte	0x9e
 3724 0404 68000000 		.4byte	0x68
 3725 0408 03       		.uleb128 0x3
 3726 0409 91       		.byte	0x91
 3727 040a AC7F     		.sleb128 -84
 3728 040c 0E       		.uleb128 0xe
 3729 040d 636F6C00 		.ascii	"col\000"
 3730 0411 01       		.byte	0x1
 3731 0412 9F       		.byte	0x9f
 3732 0413 68000000 		.4byte	0x68
 3733 0417 03       		.uleb128 0x3
 3734 0418 91       		.byte	0x91
 3735 0419 A87F     		.sleb128 -88
 3736 041b 16       		.uleb128 0x16
 3737 041c 02020000 		.4byte	.LBB11
 3738 0420 90000000 		.4byte	.LBE11-.LBB11
 3739 0424 35040000 		.4byte	0x435
 3740 0428 0E       		.uleb128 0xe
 3741 0429 6900     		.ascii	"i\000"
 3742 042b 01       		.byte	0x1
 3743 042c 95       		.byte	0x95
 3744 042d 68000000 		.4byte	0x68
 3745 0431 02       		.uleb128 0x2
 3746 0432 91       		.byte	0x91
 3747 0433 48       		.sleb128 -56
 3748 0434 00       		.byte	0
 3749 0435 0D       		.uleb128 0xd
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 78


 3750 0436 C4030000 		.4byte	.LBB12
 3751 043a 1E020000 		.4byte	.LBE12-.LBB12
 3752 043e 0E       		.uleb128 0xe
 3753 043f 6900     		.ascii	"i\000"
 3754 0441 01       		.byte	0x1
 3755 0442 A8       		.byte	0xa8
 3756 0443 68000000 		.4byte	0x68
 3757 0447 02       		.uleb128 0x2
 3758 0448 91       		.byte	0x91
 3759 0449 44       		.sleb128 -60
 3760 044a 0D       		.uleb128 0xd
 3761 044b D2030000 		.4byte	.LBB13
 3762 044f EA010000 		.4byte	.LBE13-.LBB13
 3763 0453 15       		.uleb128 0x15
 3764 0454 91020000 		.4byte	.LASF53
 3765 0458 01       		.byte	0x1
 3766 0459 A9       		.byte	0xa9
 3767 045a 68000000 		.4byte	0x68
 3768 045e 03       		.uleb128 0x3
 3769 045f 91       		.byte	0x91
 3770 0460 A47F     		.sleb128 -92
 3771 0462 15       		.uleb128 0x15
 3772 0463 97010000 		.4byte	.LASF54
 3773 0467 01       		.byte	0x1
 3774 0468 AA       		.byte	0xaa
 3775 0469 68000000 		.4byte	0x68
 3776 046d 03       		.uleb128 0x3
 3777 046e 91       		.byte	0x91
 3778 046f A07F     		.sleb128 -96
 3779 0471 0D       		.uleb128 0xd
 3780 0472 80040000 		.4byte	.LBB14
 3781 0476 3C010000 		.4byte	.LBE14-.LBB14
 3782 047a 15       		.uleb128 0x15
 3783 047b 21040000 		.4byte	.LASF55
 3784 047f 01       		.byte	0x1
 3785 0480 AD       		.byte	0xad
 3786 0481 68000000 		.4byte	0x68
 3787 0485 03       		.uleb128 0x3
 3788 0486 91       		.byte	0x91
 3789 0487 9C7F     		.sleb128 -100
 3790 0489 00       		.byte	0
 3791 048a 00       		.byte	0
 3792 048b 00       		.byte	0
 3793 048c 00       		.byte	0
 3794 048d 0D       		.uleb128 0xd
 3795 048e 0A070000 		.4byte	.LBB16
 3796 0492 18020000 		.4byte	.LBE16-.LBB16
 3797 0496 0E       		.uleb128 0xe
 3798 0497 6900     		.ascii	"i\000"
 3799 0499 01       		.byte	0x1
 3800 049a D1       		.byte	0xd1
 3801 049b 68000000 		.4byte	0x68
 3802 049f 03       		.uleb128 0x3
 3803 04a0 91       		.byte	0x91
 3804 04a1 B07F     		.sleb128 -80
 3805 04a3 0D       		.uleb128 0xd
 3806 04a4 1C070000 		.4byte	.LBB17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 79


 3807 04a8 EC010000 		.4byte	.LBE17-.LBB17
 3808 04ac 15       		.uleb128 0x15
 3809 04ad 91020000 		.4byte	.LASF53
 3810 04b1 01       		.byte	0x1
 3811 04b2 D2       		.byte	0xd2
 3812 04b3 68000000 		.4byte	0x68
 3813 04b7 03       		.uleb128 0x3
 3814 04b8 91       		.byte	0x91
 3815 04b9 947F     		.sleb128 -108
 3816 04bb 15       		.uleb128 0x15
 3817 04bc 97010000 		.4byte	.LASF54
 3818 04c0 01       		.byte	0x1
 3819 04c1 D3       		.byte	0xd3
 3820 04c2 68000000 		.4byte	0x68
 3821 04c6 03       		.uleb128 0x3
 3822 04c7 91       		.byte	0x91
 3823 04c8 907F     		.sleb128 -112
 3824 04ca 00       		.byte	0
 3825 04cb 00       		.byte	0
 3826 04cc 00       		.byte	0
 3827 04cd 0F       		.uleb128 0xf
 3828 04ce 68000000 		.4byte	0x68
 3829 04d2 E3040000 		.4byte	0x4e3
 3830 04d6 10       		.uleb128 0x10
 3831 04d7 7D000000 		.4byte	0x7d
 3832 04db 0E       		.byte	0xe
 3833 04dc 10       		.uleb128 0x10
 3834 04dd 7D000000 		.4byte	0x7d
 3835 04e1 12       		.byte	0x12
 3836 04e2 00       		.byte	0
 3837 04e3 0F       		.uleb128 0xf
 3838 04e4 CF020000 		.4byte	0x2cf
 3839 04e8 F4040000 		.4byte	0x4f4
 3840 04ec 18       		.uleb128 0x18
 3841 04ed 7D000000 		.4byte	0x7d
 3842 04f1 1C01     		.2byte	0x11c
 3843 04f3 00       		.byte	0
 3844 04f4 11       		.uleb128 0x11
 3845 04f5 04       		.byte	0x4
 3846 04f6 41010000 		.4byte	0x141
 3847 04fa 0B       		.uleb128 0xb
 3848 04fb 9F020000 		.4byte	.LASF56
 3849 04ff 01       		.byte	0x1
 3850 0500 F2       		.byte	0xf2
 3851 0501 00000000 		.4byte	.LFB5
 3852 0505 B0050000 		.4byte	.LFE5-.LFB5
 3853 0509 01       		.uleb128 0x1
 3854 050a 9C       		.byte	0x9c
 3855 050b 81060000 		.4byte	0x681
 3856 050f 0C       		.uleb128 0xc
 3857 0510 6D617000 		.ascii	"map\000"
 3858 0514 01       		.byte	0x1
 3859 0515 F2       		.byte	0xf2
 3860 0516 C6010000 		.4byte	0x1c6
 3861 051a 03       		.uleb128 0x3
 3862 051b 91       		.byte	0x91
 3863 051c B47F     		.sleb128 -76
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 80


 3864 051e 14       		.uleb128 0x14
 3865 051f 99030000 		.4byte	.LASF57
 3866 0523 01       		.byte	0x1
 3867 0524 F2       		.byte	0xf2
 3868 0525 68000000 		.4byte	0x68
 3869 0529 03       		.uleb128 0x3
 3870 052a 91       		.byte	0x91
 3871 052b B07F     		.sleb128 -80
 3872 052d 14       		.uleb128 0x14
 3873 052e 6B040000 		.4byte	.LASF58
 3874 0532 01       		.byte	0x1
 3875 0533 F2       		.byte	0xf2
 3876 0534 41010000 		.4byte	0x141
 3877 0538 03       		.uleb128 0x3
 3878 0539 91       		.byte	0x91
 3879 053a A87F     		.sleb128 -88
 3880 053c 14       		.uleb128 0x14
 3881 053d 7A030000 		.4byte	.LASF59
 3882 0541 01       		.byte	0x1
 3883 0542 F2       		.byte	0xf2
 3884 0543 41010000 		.4byte	0x141
 3885 0547 02       		.uleb128 0x2
 3886 0548 91       		.byte	0x91
 3887 0549 00       		.sleb128 0
 3888 054a 15       		.uleb128 0x15
 3889 054b CD020000 		.4byte	.LASF49
 3890 054f 01       		.byte	0x1
 3891 0550 F3       		.byte	0xf3
 3892 0551 68000000 		.4byte	0x68
 3893 0555 02       		.uleb128 0x2
 3894 0556 91       		.byte	0x91
 3895 0557 74       		.sleb128 -12
 3896 0558 15       		.uleb128 0x15
 3897 0559 AA010000 		.4byte	.LASF50
 3898 055d 01       		.byte	0x1
 3899 055e F4       		.byte	0xf4
 3900 055f 68000000 		.4byte	0x68
 3901 0563 02       		.uleb128 0x2
 3902 0564 91       		.byte	0x91
 3903 0565 70       		.sleb128 -16
 3904 0566 15       		.uleb128 0x15
 3905 0567 A2030000 		.4byte	.LASF60
 3906 056b 01       		.byte	0x1
 3907 056c F5       		.byte	0xf5
 3908 056d 68000000 		.4byte	0x68
 3909 0571 02       		.uleb128 0x2
 3910 0572 91       		.byte	0x91
 3911 0573 6C       		.sleb128 -20
 3912 0574 15       		.uleb128 0x15
 3913 0575 5F020000 		.4byte	.LASF61
 3914 0579 01       		.byte	0x1
 3915 057a F6       		.byte	0xf6
 3916 057b 68000000 		.4byte	0x68
 3917 057f 03       		.uleb128 0x3
 3918 0580 91       		.byte	0x91
 3919 0581 BC7F     		.sleb128 -68
 3920 0583 16       		.uleb128 0x16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 81


 3921 0584 2E000000 		.4byte	.LBB18
 3922 0588 EC040000 		.4byte	.LBE18-.LBB18
 3923 058c 69060000 		.4byte	0x669
 3924 0590 15       		.uleb128 0x15
 3925 0591 1C030000 		.4byte	.LASF62
 3926 0595 01       		.byte	0x1
 3927 0596 FC       		.byte	0xfc
 3928 0597 BE000000 		.4byte	0xbe
 3929 059b 02       		.uleb128 0x2
 3930 059c 91       		.byte	0x91
 3931 059d 6B       		.sleb128 -21
 3932 059e 15       		.uleb128 0x15
 3933 059f AD040000 		.4byte	.LASF63
 3934 05a3 01       		.byte	0x1
 3935 05a4 FD       		.byte	0xfd
 3936 05a5 68000000 		.4byte	0x68
 3937 05a9 02       		.uleb128 0x2
 3938 05aa 91       		.byte	0x91
 3939 05ab 64       		.sleb128 -28
 3940 05ac 17       		.uleb128 0x17
 3941 05ad 18000000 		.4byte	.Ldebug_ranges0+0x18
 3942 05b1 DC050000 		.4byte	0x5dc
 3943 05b5 19       		.uleb128 0x19
 3944 05b6 00030000 		.4byte	.LASF64
 3945 05ba 01       		.byte	0x1
 3946 05bb 1501     		.2byte	0x115
 3947 05bd 68000000 		.4byte	0x68
 3948 05c1 02       		.uleb128 0x2
 3949 05c2 91       		.byte	0x91
 3950 05c3 60       		.sleb128 -32
 3951 05c4 0D       		.uleb128 0xd
 3952 05c5 06010000 		.4byte	.LBB20
 3953 05c9 38000000 		.4byte	.LBE20-.LBB20
 3954 05cd 1A       		.uleb128 0x1a
 3955 05ce 6900     		.ascii	"i\000"
 3956 05d0 01       		.byte	0x1
 3957 05d1 1701     		.2byte	0x117
 3958 05d3 68000000 		.4byte	0x68
 3959 05d7 02       		.uleb128 0x2
 3960 05d8 91       		.byte	0x91
 3961 05d9 5C       		.sleb128 -36
 3962 05da 00       		.byte	0
 3963 05db 00       		.byte	0
 3964 05dc 17       		.uleb128 0x17
 3965 05dd 30000000 		.4byte	.Ldebug_ranges0+0x30
 3966 05e1 0C060000 		.4byte	0x60c
 3967 05e5 19       		.uleb128 0x19
 3968 05e6 00030000 		.4byte	.LASF64
 3969 05ea 01       		.byte	0x1
 3970 05eb 4001     		.2byte	0x140
 3971 05ed 68000000 		.4byte	0x68
 3972 05f1 02       		.uleb128 0x2
 3973 05f2 91       		.byte	0x91
 3974 05f3 58       		.sleb128 -40
 3975 05f4 0D       		.uleb128 0xd
 3976 05f5 FE010000 		.4byte	.LBB23
 3977 05f9 36000000 		.4byte	.LBE23-.LBB23
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 82


 3978 05fd 1A       		.uleb128 0x1a
 3979 05fe 6900     		.ascii	"i\000"
 3980 0600 01       		.byte	0x1
 3981 0601 4201     		.2byte	0x142
 3982 0603 68000000 		.4byte	0x68
 3983 0607 02       		.uleb128 0x2
 3984 0608 91       		.byte	0x91
 3985 0609 54       		.sleb128 -44
 3986 060a 00       		.byte	0
 3987 060b 00       		.byte	0
 3988 060c 17       		.uleb128 0x17
 3989 060d 48000000 		.4byte	.Ldebug_ranges0+0x48
 3990 0611 3C060000 		.4byte	0x63c
 3991 0615 19       		.uleb128 0x19
 3992 0616 00030000 		.4byte	.LASF64
 3993 061a 01       		.byte	0x1
 3994 061b 6E01     		.2byte	0x16e
 3995 061d 68000000 		.4byte	0x68
 3996 0621 02       		.uleb128 0x2
 3997 0622 91       		.byte	0x91
 3998 0623 50       		.sleb128 -48
 3999 0624 0D       		.uleb128 0xd
 4000 0625 2A030000 		.4byte	.LBB26
 4001 0629 38000000 		.4byte	.LBE26-.LBB26
 4002 062d 1A       		.uleb128 0x1a
 4003 062e 6900     		.ascii	"i\000"
 4004 0630 01       		.byte	0x1
 4005 0631 7001     		.2byte	0x170
 4006 0633 68000000 		.4byte	0x68
 4007 0637 02       		.uleb128 0x2
 4008 0638 91       		.byte	0x91
 4009 0639 4C       		.sleb128 -52
 4010 063a 00       		.byte	0
 4011 063b 00       		.byte	0
 4012 063c 1B       		.uleb128 0x1b
 4013 063d 60000000 		.4byte	.Ldebug_ranges0+0x60
 4014 0641 19       		.uleb128 0x19
 4015 0642 00030000 		.4byte	.LASF64
 4016 0646 01       		.byte	0x1
 4017 0647 9B01     		.2byte	0x19b
 4018 0649 68000000 		.4byte	0x68
 4019 064d 02       		.uleb128 0x2
 4020 064e 91       		.byte	0x91
 4021 064f 48       		.sleb128 -56
 4022 0650 0D       		.uleb128 0xd
 4023 0651 2E040000 		.4byte	.LBB29
 4024 0655 34000000 		.4byte	.LBE29-.LBB29
 4025 0659 1A       		.uleb128 0x1a
 4026 065a 6900     		.ascii	"i\000"
 4027 065c 01       		.byte	0x1
 4028 065d 9D01     		.2byte	0x19d
 4029 065f 68000000 		.4byte	0x68
 4030 0663 02       		.uleb128 0x2
 4031 0664 91       		.byte	0x91
 4032 0665 44       		.sleb128 -60
 4033 0666 00       		.byte	0
 4034 0667 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 83


 4035 0668 00       		.byte	0
 4036 0669 0D       		.uleb128 0xd
 4037 066a 22050000 		.4byte	.LBB31
 4038 066e 80000000 		.4byte	.LBE31-.LBB31
 4039 0672 1A       		.uleb128 0x1a
 4040 0673 6900     		.ascii	"i\000"
 4041 0675 01       		.byte	0x1
 4042 0676 C501     		.2byte	0x1c5
 4043 0678 68000000 		.4byte	0x68
 4044 067c 02       		.uleb128 0x2
 4045 067d 91       		.byte	0x91
 4046 067e 40       		.sleb128 -64
 4047 067f 00       		.byte	0
 4048 0680 00       		.byte	0
 4049 0681 1C       		.uleb128 0x1c
 4050 0682 04020000 		.4byte	.LASF66
 4051 0686 01       		.byte	0x1
 4052 0687 CE01     		.2byte	0x1ce
 4053 0689 8B000000 		.4byte	0x8b
 4054 068d 00000000 		.4byte	.LFB6
 4055 0691 0C010000 		.4byte	.LFE6-.LFB6
 4056 0695 01       		.uleb128 0x1
 4057 0696 9C       		.byte	0x9c
 4058 0697 BA060000 		.4byte	0x6ba
 4059 069b 1D       		.uleb128 0x1d
 4060 069c CD020000 		.4byte	.LASF49
 4061 06a0 01       		.byte	0x1
 4062 06a1 CE01     		.2byte	0x1ce
 4063 06a3 68000000 		.4byte	0x68
 4064 06a7 02       		.uleb128 0x2
 4065 06a8 91       		.byte	0x91
 4066 06a9 74       		.sleb128 -12
 4067 06aa 1D       		.uleb128 0x1d
 4068 06ab AA010000 		.4byte	.LASF50
 4069 06af 01       		.byte	0x1
 4070 06b0 CE01     		.2byte	0x1ce
 4071 06b2 68000000 		.4byte	0x68
 4072 06b6 02       		.uleb128 0x2
 4073 06b7 91       		.byte	0x91
 4074 06b8 70       		.sleb128 -16
 4075 06b9 00       		.byte	0
 4076 06ba 1E       		.uleb128 0x1e
 4077 06bb D8020000 		.4byte	.LASF67
 4078 06bf 01       		.byte	0x1
 4079 06c0 DF01     		.2byte	0x1df
 4080 06c2 00000000 		.4byte	.LFB7
 4081 06c6 24010000 		.4byte	.LFE7-.LFB7
 4082 06ca 01       		.uleb128 0x1
 4083 06cb 9C       		.byte	0x9c
 4084 06cc FE060000 		.4byte	0x6fe
 4085 06d0 1D       		.uleb128 0x1d
 4086 06d1 3B040000 		.4byte	.LASF68
 4087 06d5 01       		.byte	0x1
 4088 06d6 DF01     		.2byte	0x1df
 4089 06d8 96000000 		.4byte	0x96
 4090 06dc 02       		.uleb128 0x2
 4091 06dd 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 84


 4092 06de 77       		.sleb128 -9
 4093 06df 1D       		.uleb128 0x1d
 4094 06e0 CD020000 		.4byte	.LASF49
 4095 06e4 01       		.byte	0x1
 4096 06e5 DF01     		.2byte	0x1df
 4097 06e7 68000000 		.4byte	0x68
 4098 06eb 02       		.uleb128 0x2
 4099 06ec 91       		.byte	0x91
 4100 06ed 70       		.sleb128 -16
 4101 06ee 1D       		.uleb128 0x1d
 4102 06ef AA010000 		.4byte	.LASF50
 4103 06f3 01       		.byte	0x1
 4104 06f4 DF01     		.2byte	0x1df
 4105 06f6 68000000 		.4byte	0x68
 4106 06fa 02       		.uleb128 0x2
 4107 06fb 91       		.byte	0x91
 4108 06fc 6C       		.sleb128 -20
 4109 06fd 00       		.byte	0
 4110 06fe 1C       		.uleb128 0x1c
 4111 06ff 52030000 		.4byte	.LASF69
 4112 0703 01       		.byte	0x1
 4113 0704 1302     		.2byte	0x213
 4114 0706 8B000000 		.4byte	0x8b
 4115 070a 00000000 		.4byte	.LFB8
 4116 070e 9C000000 		.4byte	.LFE8-.LFB8
 4117 0712 01       		.uleb128 0x1
 4118 0713 9C       		.byte	0x9c
 4119 0714 37070000 		.4byte	0x737
 4120 0718 1D       		.uleb128 0x1d
 4121 0719 E9010000 		.4byte	.LASF70
 4122 071d 01       		.byte	0x1
 4123 071e 1302     		.2byte	0x213
 4124 0720 68000000 		.4byte	0x68
 4125 0724 02       		.uleb128 0x2
 4126 0725 91       		.byte	0x91
 4127 0726 74       		.sleb128 -12
 4128 0727 1D       		.uleb128 0x1d
 4129 0728 9E040000 		.4byte	.LASF71
 4130 072c 01       		.byte	0x1
 4131 072d 1302     		.2byte	0x213
 4132 072f 68000000 		.4byte	0x68
 4133 0733 02       		.uleb128 0x2
 4134 0734 91       		.byte	0x91
 4135 0735 70       		.sleb128 -16
 4136 0736 00       		.byte	0
 4137 0737 1F       		.uleb128 0x1f
 4138 0738 81040000 		.4byte	.LASF83
 4139 073c 01       		.byte	0x1
 4140 073d 2202     		.2byte	0x222
 4141 073f 8B000000 		.4byte	0x8b
 4142 0743 00000000 		.4byte	.LFB9
 4143 0747 18000000 		.4byte	.LFE9-.LFB9
 4144 074b 01       		.uleb128 0x1
 4145 074c 9C       		.byte	0x9c
 4146 074d 20       		.uleb128 0x20
 4147 074e 67030000 		.4byte	.LASF72
 4148 0752 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 85


 4149 0753 2602     		.2byte	0x226
 4150 0755 B1070000 		.4byte	0x7b1
 4151 0759 00000000 		.4byte	.LFB10
 4152 075d 78000000 		.4byte	.LFE10-.LFB10
 4153 0761 01       		.uleb128 0x1
 4154 0762 9C       		.byte	0x9c
 4155 0763 B1070000 		.4byte	0x7b1
 4156 0767 21       		.uleb128 0x21
 4157 0768 6D617000 		.ascii	"map\000"
 4158 076c 01       		.byte	0x1
 4159 076d 2602     		.2byte	0x226
 4160 076f C6010000 		.4byte	0x1c6
 4161 0773 02       		.uleb128 0x2
 4162 0774 91       		.byte	0x91
 4163 0775 5C       		.sleb128 -36
 4164 0776 1D       		.uleb128 0x1d
 4165 0777 FA030000 		.4byte	.LASF73
 4166 077b 01       		.byte	0x1
 4167 077c 2602     		.2byte	0x226
 4168 077e C7070000 		.4byte	0x7c7
 4169 0782 02       		.uleb128 0x2
 4170 0783 91       		.byte	0x91
 4171 0784 58       		.sleb128 -40
 4172 0785 21       		.uleb128 0x21
 4173 0786 6900     		.ascii	"i\000"
 4174 0788 01       		.byte	0x1
 4175 0789 2602     		.2byte	0x226
 4176 078b 68000000 		.4byte	0x68
 4177 078f 02       		.uleb128 0x2
 4178 0790 91       		.byte	0x91
 4179 0791 54       		.sleb128 -44
 4180 0792 19       		.uleb128 0x19
 4181 0793 6B040000 		.4byte	.LASF58
 4182 0797 01       		.byte	0x1
 4183 0798 2802     		.2byte	0x228
 4184 079a 41010000 		.4byte	0x141
 4185 079e 02       		.uleb128 0x2
 4186 079f 91       		.byte	0x91
 4187 07a0 68       		.sleb128 -24
 4188 07a1 19       		.uleb128 0x19
 4189 07a2 7A030000 		.4byte	.LASF59
 4190 07a6 01       		.byte	0x1
 4191 07a7 2802     		.2byte	0x228
 4192 07a9 41010000 		.4byte	0x141
 4193 07ad 02       		.uleb128 0x2
 4194 07ae 91       		.byte	0x91
 4195 07af 60       		.sleb128 -32
 4196 07b0 00       		.byte	0
 4197 07b1 11       		.uleb128 0x11
 4198 07b2 04       		.byte	0x4
 4199 07b3 36010000 		.4byte	0x136
 4200 07b7 0F       		.uleb128 0xf
 4201 07b8 68000000 		.4byte	0x68
 4202 07bc C7070000 		.4byte	0x7c7
 4203 07c0 10       		.uleb128 0x10
 4204 07c1 7D000000 		.4byte	0x7d
 4205 07c5 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 86


 4206 07c6 00       		.byte	0
 4207 07c7 11       		.uleb128 0x11
 4208 07c8 04       		.byte	0x4
 4209 07c9 B7070000 		.4byte	0x7b7
 4210 07cd 0F       		.uleb128 0xf
 4211 07ce 36010000 		.4byte	0x136
 4212 07d2 DE070000 		.4byte	0x7de
 4213 07d6 18       		.uleb128 0x18
 4214 07d7 7D000000 		.4byte	0x7d
 4215 07db 1C01     		.2byte	0x11c
 4216 07dd 00       		.byte	0
 4217 07de 15       		.uleb128 0x15
 4218 07df F3010000 		.4byte	.LASF74
 4219 07e3 01       		.byte	0x1
 4220 07e4 18       		.byte	0x18
 4221 07e5 CD070000 		.4byte	0x7cd
 4222 07e9 05       		.uleb128 0x5
 4223 07ea 03       		.byte	0x3
 4224 07eb 00000000 		.4byte	instructionsList
 4225 07ef 15       		.uleb128 0x15
 4226 07f0 99030000 		.4byte	.LASF57
 4227 07f4 01       		.byte	0x1
 4228 07f5 19       		.byte	0x19
 4229 07f6 68000000 		.4byte	0x68
 4230 07fa 05       		.uleb128 0x5
 4231 07fb 03       		.byte	0x3
 4232 07fc D0110000 		.4byte	numSteps
 4233 0800 22       		.uleb128 0x22
 4234 0801 6D617000 		.ascii	"map\000"
 4235 0805 01       		.byte	0x1
 4236 0806 22       		.byte	0x22
 4237 0807 CD040000 		.4byte	0x4cd
 4238 080b 05       		.uleb128 0x5
 4239 080c 03       		.byte	0x3
 4240 080d 00000000 		.4byte	map
 4241 0811 0F       		.uleb128 0xf
 4242 0812 68000000 		.4byte	0x68
 4243 0816 27080000 		.4byte	0x827
 4244 081a 10       		.uleb128 0x10
 4245 081b 7D000000 		.4byte	0x7d
 4246 081f 04       		.byte	0x4
 4247 0820 10       		.uleb128 0x10
 4248 0821 7D000000 		.4byte	0x7d
 4249 0825 01       		.byte	0x1
 4250 0826 00       		.byte	0
 4251 0827 23       		.uleb128 0x23
 4252 0828 FA030000 		.4byte	.LASF73
 4253 082c 01       		.byte	0x1
 4254 082d 4B       		.byte	0x4b
 4255 082e 11080000 		.4byte	0x811
 4256 0832 05       		.uleb128 0x5
 4257 0833 03       		.byte	0x3
 4258 0834 00000000 		.4byte	food_list
 4259 0838 23       		.uleb128 0x23
 4260 0839 D8030000 		.4byte	.LASF75
 4261 083d 01       		.byte	0x1
 4262 083e 16       		.byte	0x16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 87


 4263 083f 96000000 		.4byte	0x96
 4264 0843 05       		.uleb128 0x5
 4265 0844 03       		.byte	0x3
 4266 0845 00000000 		.4byte	previousRobotOrientation
 4267 0849 23       		.uleb128 0x23
 4268 084a 09040000 		.4byte	.LASF76
 4269 084e 01       		.byte	0x1
 4270 084f 16       		.byte	0x16
 4271 0850 96000000 		.4byte	0x96
 4272 0854 05       		.uleb128 0x5
 4273 0855 03       		.byte	0x3
 4274 0856 00000000 		.4byte	currentRobotOrientation
 4275 085a 23       		.uleb128 0x23
 4276 085b CE030000 		.4byte	.LASF77
 4277 085f 01       		.byte	0x1
 4278 0860 49       		.byte	0x49
 4279 0861 B7070000 		.4byte	0x7b7
 4280 0865 05       		.uleb128 0x5
 4281 0866 03       		.byte	0x3
 4282 0867 00000000 		.4byte	start_pos
 4283 086b 0F       		.uleb128 0xf
 4284 086c 68000000 		.4byte	0x68
 4285 0870 82080000 		.4byte	0x882
 4286 0874 18       		.uleb128 0x18
 4287 0875 7D000000 		.4byte	0x7d
 4288 0879 1C01     		.2byte	0x11c
 4289 087b 10       		.uleb128 0x10
 4290 087c 7D000000 		.4byte	0x7d
 4291 0880 01       		.byte	0x1
 4292 0881 00       		.byte	0
 4293 0882 23       		.uleb128 0x23
 4294 0883 17020000 		.4byte	.LASF78
 4295 0887 01       		.byte	0x1
 4296 0888 67       		.byte	0x67
 4297 0889 6B080000 		.4byte	0x86b
 4298 088d 05       		.uleb128 0x5
 4299 088e 03       		.byte	0x3
 4300 088f 00000000 		.4byte	list_of_optimal_coordinates
 4301 0893 0F       		.uleb128 0xf
 4302 0894 41010000 		.4byte	0x141
 4303 0898 A3080000 		.4byte	0x8a3
 4304 089c 10       		.uleb128 0x10
 4305 089d 7D000000 		.4byte	0x7d
 4306 08a1 03       		.byte	0x3
 4307 08a2 00       		.byte	0
 4308 08a3 23       		.uleb128 0x23
 4309 08a4 98040000 		.4byte	.LASF79
 4310 08a8 01       		.byte	0x1
 4311 08a9 69       		.byte	0x69
 4312 08aa 93080000 		.4byte	0x893
 4313 08ae 05       		.uleb128 0x5
 4314 08af 03       		.byte	0x3
 4315 08b0 00000000 		.4byte	moves
 4316 08b4 23       		.uleb128 0x23
 4317 08b5 BE040000 		.4byte	.LASF28
 4318 08b9 01       		.byte	0x1
 4319 08ba EF       		.byte	0xef
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 88


 4320 08bb 68000000 		.4byte	0x68
 4321 08bf 05       		.uleb128 0x5
 4322 08c0 03       		.byte	0x3
 4323 08c1 00000000 		.4byte	ignoreR
 4324 08c5 23       		.uleb128 0x23
 4325 08c6 B6040000 		.4byte	.LASF27
 4326 08ca 01       		.byte	0x1
 4327 08cb EF       		.byte	0xef
 4328 08cc 68000000 		.4byte	0x68
 4329 08d0 05       		.uleb128 0x5
 4330 08d1 03       		.byte	0x3
 4331 08d2 00000000 		.4byte	ignoreL
 4332 08d6 00       		.byte	0
 4333              		.section	.debug_abbrev,"",%progbits
 4334              	.Ldebug_abbrev0:
 4335 0000 01       		.uleb128 0x1
 4336 0001 11       		.uleb128 0x11
 4337 0002 01       		.byte	0x1
 4338 0003 25       		.uleb128 0x25
 4339 0004 0E       		.uleb128 0xe
 4340 0005 13       		.uleb128 0x13
 4341 0006 0B       		.uleb128 0xb
 4342 0007 03       		.uleb128 0x3
 4343 0008 0E       		.uleb128 0xe
 4344 0009 1B       		.uleb128 0x1b
 4345 000a 0E       		.uleb128 0xe
 4346 000b 55       		.uleb128 0x55
 4347 000c 17       		.uleb128 0x17
 4348 000d 11       		.uleb128 0x11
 4349 000e 01       		.uleb128 0x1
 4350 000f 10       		.uleb128 0x10
 4351 0010 17       		.uleb128 0x17
 4352 0011 00       		.byte	0
 4353 0012 00       		.byte	0
 4354 0013 02       		.uleb128 0x2
 4355 0014 24       		.uleb128 0x24
 4356 0015 00       		.byte	0
 4357 0016 0B       		.uleb128 0xb
 4358 0017 0B       		.uleb128 0xb
 4359 0018 3E       		.uleb128 0x3e
 4360 0019 0B       		.uleb128 0xb
 4361 001a 03       		.uleb128 0x3
 4362 001b 0E       		.uleb128 0xe
 4363 001c 00       		.byte	0
 4364 001d 00       		.byte	0
 4365 001e 03       		.uleb128 0x3
 4366 001f 16       		.uleb128 0x16
 4367 0020 00       		.byte	0
 4368 0021 03       		.uleb128 0x3
 4369 0022 0E       		.uleb128 0xe
 4370 0023 3A       		.uleb128 0x3a
 4371 0024 0B       		.uleb128 0xb
 4372 0025 3B       		.uleb128 0x3b
 4373 0026 0B       		.uleb128 0xb
 4374 0027 49       		.uleb128 0x49
 4375 0028 13       		.uleb128 0x13
 4376 0029 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 89


 4377 002a 00       		.byte	0
 4378 002b 04       		.uleb128 0x4
 4379 002c 24       		.uleb128 0x24
 4380 002d 00       		.byte	0
 4381 002e 0B       		.uleb128 0xb
 4382 002f 0B       		.uleb128 0xb
 4383 0030 3E       		.uleb128 0x3e
 4384 0031 0B       		.uleb128 0xb
 4385 0032 03       		.uleb128 0x3
 4386 0033 08       		.uleb128 0x8
 4387 0034 00       		.byte	0
 4388 0035 00       		.byte	0
 4389 0036 05       		.uleb128 0x5
 4390 0037 04       		.uleb128 0x4
 4391 0038 01       		.byte	0x1
 4392 0039 03       		.uleb128 0x3
 4393 003a 0E       		.uleb128 0xe
 4394 003b 0B       		.uleb128 0xb
 4395 003c 0B       		.uleb128 0xb
 4396 003d 49       		.uleb128 0x49
 4397 003e 13       		.uleb128 0x13
 4398 003f 3A       		.uleb128 0x3a
 4399 0040 0B       		.uleb128 0xb
 4400 0041 3B       		.uleb128 0x3b
 4401 0042 0B       		.uleb128 0xb
 4402 0043 01       		.uleb128 0x1
 4403 0044 13       		.uleb128 0x13
 4404 0045 00       		.byte	0
 4405 0046 00       		.byte	0
 4406 0047 06       		.uleb128 0x6
 4407 0048 28       		.uleb128 0x28
 4408 0049 00       		.byte	0
 4409 004a 03       		.uleb128 0x3
 4410 004b 08       		.uleb128 0x8
 4411 004c 1C       		.uleb128 0x1c
 4412 004d 0B       		.uleb128 0xb
 4413 004e 00       		.byte	0
 4414 004f 00       		.byte	0
 4415 0050 07       		.uleb128 0x7
 4416 0051 28       		.uleb128 0x28
 4417 0052 00       		.byte	0
 4418 0053 03       		.uleb128 0x3
 4419 0054 0E       		.uleb128 0xe
 4420 0055 1C       		.uleb128 0x1c
 4421 0056 0B       		.uleb128 0xb
 4422 0057 00       		.byte	0
 4423 0058 00       		.byte	0
 4424 0059 08       		.uleb128 0x8
 4425 005a 13       		.uleb128 0x13
 4426 005b 01       		.byte	0x1
 4427 005c 03       		.uleb128 0x3
 4428 005d 0E       		.uleb128 0xe
 4429 005e 0B       		.uleb128 0xb
 4430 005f 0B       		.uleb128 0xb
 4431 0060 3A       		.uleb128 0x3a
 4432 0061 0B       		.uleb128 0xb
 4433 0062 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 90


 4434 0063 0B       		.uleb128 0xb
 4435 0064 01       		.uleb128 0x1
 4436 0065 13       		.uleb128 0x13
 4437 0066 00       		.byte	0
 4438 0067 00       		.byte	0
 4439 0068 09       		.uleb128 0x9
 4440 0069 0D       		.uleb128 0xd
 4441 006a 00       		.byte	0
 4442 006b 03       		.uleb128 0x3
 4443 006c 0E       		.uleb128 0xe
 4444 006d 3A       		.uleb128 0x3a
 4445 006e 0B       		.uleb128 0xb
 4446 006f 3B       		.uleb128 0x3b
 4447 0070 0B       		.uleb128 0xb
 4448 0071 49       		.uleb128 0x49
 4449 0072 13       		.uleb128 0x13
 4450 0073 38       		.uleb128 0x38
 4451 0074 0B       		.uleb128 0xb
 4452 0075 00       		.byte	0
 4453 0076 00       		.byte	0
 4454 0077 0A       		.uleb128 0xa
 4455 0078 0D       		.uleb128 0xd
 4456 0079 00       		.byte	0
 4457 007a 03       		.uleb128 0x3
 4458 007b 08       		.uleb128 0x8
 4459 007c 3A       		.uleb128 0x3a
 4460 007d 0B       		.uleb128 0xb
 4461 007e 3B       		.uleb128 0x3b
 4462 007f 0B       		.uleb128 0xb
 4463 0080 49       		.uleb128 0x49
 4464 0081 13       		.uleb128 0x13
 4465 0082 38       		.uleb128 0x38
 4466 0083 0B       		.uleb128 0xb
 4467 0084 00       		.byte	0
 4468 0085 00       		.byte	0
 4469 0086 0B       		.uleb128 0xb
 4470 0087 2E       		.uleb128 0x2e
 4471 0088 01       		.byte	0x1
 4472 0089 3F       		.uleb128 0x3f
 4473 008a 19       		.uleb128 0x19
 4474 008b 03       		.uleb128 0x3
 4475 008c 0E       		.uleb128 0xe
 4476 008d 3A       		.uleb128 0x3a
 4477 008e 0B       		.uleb128 0xb
 4478 008f 3B       		.uleb128 0x3b
 4479 0090 0B       		.uleb128 0xb
 4480 0091 27       		.uleb128 0x27
 4481 0092 19       		.uleb128 0x19
 4482 0093 11       		.uleb128 0x11
 4483 0094 01       		.uleb128 0x1
 4484 0095 12       		.uleb128 0x12
 4485 0096 06       		.uleb128 0x6
 4486 0097 40       		.uleb128 0x40
 4487 0098 18       		.uleb128 0x18
 4488 0099 9642     		.uleb128 0x2116
 4489 009b 19       		.uleb128 0x19
 4490 009c 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 91


 4491 009d 13       		.uleb128 0x13
 4492 009e 00       		.byte	0
 4493 009f 00       		.byte	0
 4494 00a0 0C       		.uleb128 0xc
 4495 00a1 05       		.uleb128 0x5
 4496 00a2 00       		.byte	0
 4497 00a3 03       		.uleb128 0x3
 4498 00a4 08       		.uleb128 0x8
 4499 00a5 3A       		.uleb128 0x3a
 4500 00a6 0B       		.uleb128 0xb
 4501 00a7 3B       		.uleb128 0x3b
 4502 00a8 0B       		.uleb128 0xb
 4503 00a9 49       		.uleb128 0x49
 4504 00aa 13       		.uleb128 0x13
 4505 00ab 02       		.uleb128 0x2
 4506 00ac 18       		.uleb128 0x18
 4507 00ad 00       		.byte	0
 4508 00ae 00       		.byte	0
 4509 00af 0D       		.uleb128 0xd
 4510 00b0 0B       		.uleb128 0xb
 4511 00b1 01       		.byte	0x1
 4512 00b2 11       		.uleb128 0x11
 4513 00b3 01       		.uleb128 0x1
 4514 00b4 12       		.uleb128 0x12
 4515 00b5 06       		.uleb128 0x6
 4516 00b6 00       		.byte	0
 4517 00b7 00       		.byte	0
 4518 00b8 0E       		.uleb128 0xe
 4519 00b9 34       		.uleb128 0x34
 4520 00ba 00       		.byte	0
 4521 00bb 03       		.uleb128 0x3
 4522 00bc 08       		.uleb128 0x8
 4523 00bd 3A       		.uleb128 0x3a
 4524 00be 0B       		.uleb128 0xb
 4525 00bf 3B       		.uleb128 0x3b
 4526 00c0 0B       		.uleb128 0xb
 4527 00c1 49       		.uleb128 0x49
 4528 00c2 13       		.uleb128 0x13
 4529 00c3 02       		.uleb128 0x2
 4530 00c4 18       		.uleb128 0x18
 4531 00c5 00       		.byte	0
 4532 00c6 00       		.byte	0
 4533 00c7 0F       		.uleb128 0xf
 4534 00c8 01       		.uleb128 0x1
 4535 00c9 01       		.byte	0x1
 4536 00ca 49       		.uleb128 0x49
 4537 00cb 13       		.uleb128 0x13
 4538 00cc 01       		.uleb128 0x1
 4539 00cd 13       		.uleb128 0x13
 4540 00ce 00       		.byte	0
 4541 00cf 00       		.byte	0
 4542 00d0 10       		.uleb128 0x10
 4543 00d1 21       		.uleb128 0x21
 4544 00d2 00       		.byte	0
 4545 00d3 49       		.uleb128 0x49
 4546 00d4 13       		.uleb128 0x13
 4547 00d5 2F       		.uleb128 0x2f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 92


 4548 00d6 0B       		.uleb128 0xb
 4549 00d7 00       		.byte	0
 4550 00d8 00       		.byte	0
 4551 00d9 11       		.uleb128 0x11
 4552 00da 0F       		.uleb128 0xf
 4553 00db 00       		.byte	0
 4554 00dc 0B       		.uleb128 0xb
 4555 00dd 0B       		.uleb128 0xb
 4556 00de 49       		.uleb128 0x49
 4557 00df 13       		.uleb128 0x13
 4558 00e0 00       		.byte	0
 4559 00e1 00       		.byte	0
 4560 00e2 12       		.uleb128 0x12
 4561 00e3 2E       		.uleb128 0x2e
 4562 00e4 01       		.byte	0x1
 4563 00e5 3F       		.uleb128 0x3f
 4564 00e6 19       		.uleb128 0x19
 4565 00e7 03       		.uleb128 0x3
 4566 00e8 0E       		.uleb128 0xe
 4567 00e9 3A       		.uleb128 0x3a
 4568 00ea 0B       		.uleb128 0xb
 4569 00eb 3B       		.uleb128 0x3b
 4570 00ec 0B       		.uleb128 0xb
 4571 00ed 27       		.uleb128 0x27
 4572 00ee 19       		.uleb128 0x19
 4573 00ef 11       		.uleb128 0x11
 4574 00f0 01       		.uleb128 0x1
 4575 00f1 12       		.uleb128 0x12
 4576 00f2 06       		.uleb128 0x6
 4577 00f3 40       		.uleb128 0x40
 4578 00f4 18       		.uleb128 0x18
 4579 00f5 9742     		.uleb128 0x2117
 4580 00f7 19       		.uleb128 0x19
 4581 00f8 01       		.uleb128 0x1
 4582 00f9 13       		.uleb128 0x13
 4583 00fa 00       		.byte	0
 4584 00fb 00       		.byte	0
 4585 00fc 13       		.uleb128 0x13
 4586 00fd 2E       		.uleb128 0x2e
 4587 00fe 01       		.byte	0x1
 4588 00ff 3F       		.uleb128 0x3f
 4589 0100 19       		.uleb128 0x19
 4590 0101 03       		.uleb128 0x3
 4591 0102 0E       		.uleb128 0xe
 4592 0103 3A       		.uleb128 0x3a
 4593 0104 0B       		.uleb128 0xb
 4594 0105 3B       		.uleb128 0x3b
 4595 0106 0B       		.uleb128 0xb
 4596 0107 27       		.uleb128 0x27
 4597 0108 19       		.uleb128 0x19
 4598 0109 49       		.uleb128 0x49
 4599 010a 13       		.uleb128 0x13
 4600 010b 11       		.uleb128 0x11
 4601 010c 01       		.uleb128 0x1
 4602 010d 12       		.uleb128 0x12
 4603 010e 06       		.uleb128 0x6
 4604 010f 40       		.uleb128 0x40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 93


 4605 0110 18       		.uleb128 0x18
 4606 0111 9742     		.uleb128 0x2117
 4607 0113 19       		.uleb128 0x19
 4608 0114 01       		.uleb128 0x1
 4609 0115 13       		.uleb128 0x13
 4610 0116 00       		.byte	0
 4611 0117 00       		.byte	0
 4612 0118 14       		.uleb128 0x14
 4613 0119 05       		.uleb128 0x5
 4614 011a 00       		.byte	0
 4615 011b 03       		.uleb128 0x3
 4616 011c 0E       		.uleb128 0xe
 4617 011d 3A       		.uleb128 0x3a
 4618 011e 0B       		.uleb128 0xb
 4619 011f 3B       		.uleb128 0x3b
 4620 0120 0B       		.uleb128 0xb
 4621 0121 49       		.uleb128 0x49
 4622 0122 13       		.uleb128 0x13
 4623 0123 02       		.uleb128 0x2
 4624 0124 18       		.uleb128 0x18
 4625 0125 00       		.byte	0
 4626 0126 00       		.byte	0
 4627 0127 15       		.uleb128 0x15
 4628 0128 34       		.uleb128 0x34
 4629 0129 00       		.byte	0
 4630 012a 03       		.uleb128 0x3
 4631 012b 0E       		.uleb128 0xe
 4632 012c 3A       		.uleb128 0x3a
 4633 012d 0B       		.uleb128 0xb
 4634 012e 3B       		.uleb128 0x3b
 4635 012f 0B       		.uleb128 0xb
 4636 0130 49       		.uleb128 0x49
 4637 0131 13       		.uleb128 0x13
 4638 0132 02       		.uleb128 0x2
 4639 0133 18       		.uleb128 0x18
 4640 0134 00       		.byte	0
 4641 0135 00       		.byte	0
 4642 0136 16       		.uleb128 0x16
 4643 0137 0B       		.uleb128 0xb
 4644 0138 01       		.byte	0x1
 4645 0139 11       		.uleb128 0x11
 4646 013a 01       		.uleb128 0x1
 4647 013b 12       		.uleb128 0x12
 4648 013c 06       		.uleb128 0x6
 4649 013d 01       		.uleb128 0x1
 4650 013e 13       		.uleb128 0x13
 4651 013f 00       		.byte	0
 4652 0140 00       		.byte	0
 4653 0141 17       		.uleb128 0x17
 4654 0142 0B       		.uleb128 0xb
 4655 0143 01       		.byte	0x1
 4656 0144 55       		.uleb128 0x55
 4657 0145 17       		.uleb128 0x17
 4658 0146 01       		.uleb128 0x1
 4659 0147 13       		.uleb128 0x13
 4660 0148 00       		.byte	0
 4661 0149 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 94


 4662 014a 18       		.uleb128 0x18
 4663 014b 21       		.uleb128 0x21
 4664 014c 00       		.byte	0
 4665 014d 49       		.uleb128 0x49
 4666 014e 13       		.uleb128 0x13
 4667 014f 2F       		.uleb128 0x2f
 4668 0150 05       		.uleb128 0x5
 4669 0151 00       		.byte	0
 4670 0152 00       		.byte	0
 4671 0153 19       		.uleb128 0x19
 4672 0154 34       		.uleb128 0x34
 4673 0155 00       		.byte	0
 4674 0156 03       		.uleb128 0x3
 4675 0157 0E       		.uleb128 0xe
 4676 0158 3A       		.uleb128 0x3a
 4677 0159 0B       		.uleb128 0xb
 4678 015a 3B       		.uleb128 0x3b
 4679 015b 05       		.uleb128 0x5
 4680 015c 49       		.uleb128 0x49
 4681 015d 13       		.uleb128 0x13
 4682 015e 02       		.uleb128 0x2
 4683 015f 18       		.uleb128 0x18
 4684 0160 00       		.byte	0
 4685 0161 00       		.byte	0
 4686 0162 1A       		.uleb128 0x1a
 4687 0163 34       		.uleb128 0x34
 4688 0164 00       		.byte	0
 4689 0165 03       		.uleb128 0x3
 4690 0166 08       		.uleb128 0x8
 4691 0167 3A       		.uleb128 0x3a
 4692 0168 0B       		.uleb128 0xb
 4693 0169 3B       		.uleb128 0x3b
 4694 016a 05       		.uleb128 0x5
 4695 016b 49       		.uleb128 0x49
 4696 016c 13       		.uleb128 0x13
 4697 016d 02       		.uleb128 0x2
 4698 016e 18       		.uleb128 0x18
 4699 016f 00       		.byte	0
 4700 0170 00       		.byte	0
 4701 0171 1B       		.uleb128 0x1b
 4702 0172 0B       		.uleb128 0xb
 4703 0173 01       		.byte	0x1
 4704 0174 55       		.uleb128 0x55
 4705 0175 17       		.uleb128 0x17
 4706 0176 00       		.byte	0
 4707 0177 00       		.byte	0
 4708 0178 1C       		.uleb128 0x1c
 4709 0179 2E       		.uleb128 0x2e
 4710 017a 01       		.byte	0x1
 4711 017b 3F       		.uleb128 0x3f
 4712 017c 19       		.uleb128 0x19
 4713 017d 03       		.uleb128 0x3
 4714 017e 0E       		.uleb128 0xe
 4715 017f 3A       		.uleb128 0x3a
 4716 0180 0B       		.uleb128 0xb
 4717 0181 3B       		.uleb128 0x3b
 4718 0182 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 95


 4719 0183 27       		.uleb128 0x27
 4720 0184 19       		.uleb128 0x19
 4721 0185 49       		.uleb128 0x49
 4722 0186 13       		.uleb128 0x13
 4723 0187 11       		.uleb128 0x11
 4724 0188 01       		.uleb128 0x1
 4725 0189 12       		.uleb128 0x12
 4726 018a 06       		.uleb128 0x6
 4727 018b 40       		.uleb128 0x40
 4728 018c 18       		.uleb128 0x18
 4729 018d 9742     		.uleb128 0x2117
 4730 018f 19       		.uleb128 0x19
 4731 0190 01       		.uleb128 0x1
 4732 0191 13       		.uleb128 0x13
 4733 0192 00       		.byte	0
 4734 0193 00       		.byte	0
 4735 0194 1D       		.uleb128 0x1d
 4736 0195 05       		.uleb128 0x5
 4737 0196 00       		.byte	0
 4738 0197 03       		.uleb128 0x3
 4739 0198 0E       		.uleb128 0xe
 4740 0199 3A       		.uleb128 0x3a
 4741 019a 0B       		.uleb128 0xb
 4742 019b 3B       		.uleb128 0x3b
 4743 019c 05       		.uleb128 0x5
 4744 019d 49       		.uleb128 0x49
 4745 019e 13       		.uleb128 0x13
 4746 019f 02       		.uleb128 0x2
 4747 01a0 18       		.uleb128 0x18
 4748 01a1 00       		.byte	0
 4749 01a2 00       		.byte	0
 4750 01a3 1E       		.uleb128 0x1e
 4751 01a4 2E       		.uleb128 0x2e
 4752 01a5 01       		.byte	0x1
 4753 01a6 3F       		.uleb128 0x3f
 4754 01a7 19       		.uleb128 0x19
 4755 01a8 03       		.uleb128 0x3
 4756 01a9 0E       		.uleb128 0xe
 4757 01aa 3A       		.uleb128 0x3a
 4758 01ab 0B       		.uleb128 0xb
 4759 01ac 3B       		.uleb128 0x3b
 4760 01ad 05       		.uleb128 0x5
 4761 01ae 27       		.uleb128 0x27
 4762 01af 19       		.uleb128 0x19
 4763 01b0 11       		.uleb128 0x11
 4764 01b1 01       		.uleb128 0x1
 4765 01b2 12       		.uleb128 0x12
 4766 01b3 06       		.uleb128 0x6
 4767 01b4 40       		.uleb128 0x40
 4768 01b5 18       		.uleb128 0x18
 4769 01b6 9742     		.uleb128 0x2117
 4770 01b8 19       		.uleb128 0x19
 4771 01b9 01       		.uleb128 0x1
 4772 01ba 13       		.uleb128 0x13
 4773 01bb 00       		.byte	0
 4774 01bc 00       		.byte	0
 4775 01bd 1F       		.uleb128 0x1f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 96


 4776 01be 2E       		.uleb128 0x2e
 4777 01bf 00       		.byte	0
 4778 01c0 3F       		.uleb128 0x3f
 4779 01c1 19       		.uleb128 0x19
 4780 01c2 03       		.uleb128 0x3
 4781 01c3 0E       		.uleb128 0xe
 4782 01c4 3A       		.uleb128 0x3a
 4783 01c5 0B       		.uleb128 0xb
 4784 01c6 3B       		.uleb128 0x3b
 4785 01c7 05       		.uleb128 0x5
 4786 01c8 49       		.uleb128 0x49
 4787 01c9 13       		.uleb128 0x13
 4788 01ca 11       		.uleb128 0x11
 4789 01cb 01       		.uleb128 0x1
 4790 01cc 12       		.uleb128 0x12
 4791 01cd 06       		.uleb128 0x6
 4792 01ce 40       		.uleb128 0x40
 4793 01cf 18       		.uleb128 0x18
 4794 01d0 9742     		.uleb128 0x2117
 4795 01d2 19       		.uleb128 0x19
 4796 01d3 00       		.byte	0
 4797 01d4 00       		.byte	0
 4798 01d5 20       		.uleb128 0x20
 4799 01d6 2E       		.uleb128 0x2e
 4800 01d7 01       		.byte	0x1
 4801 01d8 3F       		.uleb128 0x3f
 4802 01d9 19       		.uleb128 0x19
 4803 01da 03       		.uleb128 0x3
 4804 01db 0E       		.uleb128 0xe
 4805 01dc 3A       		.uleb128 0x3a
 4806 01dd 0B       		.uleb128 0xb
 4807 01de 3B       		.uleb128 0x3b
 4808 01df 05       		.uleb128 0x5
 4809 01e0 27       		.uleb128 0x27
 4810 01e1 19       		.uleb128 0x19
 4811 01e2 49       		.uleb128 0x49
 4812 01e3 13       		.uleb128 0x13
 4813 01e4 11       		.uleb128 0x11
 4814 01e5 01       		.uleb128 0x1
 4815 01e6 12       		.uleb128 0x12
 4816 01e7 06       		.uleb128 0x6
 4817 01e8 40       		.uleb128 0x40
 4818 01e9 18       		.uleb128 0x18
 4819 01ea 9642     		.uleb128 0x2116
 4820 01ec 19       		.uleb128 0x19
 4821 01ed 01       		.uleb128 0x1
 4822 01ee 13       		.uleb128 0x13
 4823 01ef 00       		.byte	0
 4824 01f0 00       		.byte	0
 4825 01f1 21       		.uleb128 0x21
 4826 01f2 05       		.uleb128 0x5
 4827 01f3 00       		.byte	0
 4828 01f4 03       		.uleb128 0x3
 4829 01f5 08       		.uleb128 0x8
 4830 01f6 3A       		.uleb128 0x3a
 4831 01f7 0B       		.uleb128 0xb
 4832 01f8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 97


 4833 01f9 05       		.uleb128 0x5
 4834 01fa 49       		.uleb128 0x49
 4835 01fb 13       		.uleb128 0x13
 4836 01fc 02       		.uleb128 0x2
 4837 01fd 18       		.uleb128 0x18
 4838 01fe 00       		.byte	0
 4839 01ff 00       		.byte	0
 4840 0200 22       		.uleb128 0x22
 4841 0201 34       		.uleb128 0x34
 4842 0202 00       		.byte	0
 4843 0203 03       		.uleb128 0x3
 4844 0204 08       		.uleb128 0x8
 4845 0205 3A       		.uleb128 0x3a
 4846 0206 0B       		.uleb128 0xb
 4847 0207 3B       		.uleb128 0x3b
 4848 0208 0B       		.uleb128 0xb
 4849 0209 49       		.uleb128 0x49
 4850 020a 13       		.uleb128 0x13
 4851 020b 3F       		.uleb128 0x3f
 4852 020c 19       		.uleb128 0x19
 4853 020d 02       		.uleb128 0x2
 4854 020e 18       		.uleb128 0x18
 4855 020f 00       		.byte	0
 4856 0210 00       		.byte	0
 4857 0211 23       		.uleb128 0x23
 4858 0212 34       		.uleb128 0x34
 4859 0213 00       		.byte	0
 4860 0214 03       		.uleb128 0x3
 4861 0215 0E       		.uleb128 0xe
 4862 0216 3A       		.uleb128 0x3a
 4863 0217 0B       		.uleb128 0xb
 4864 0218 3B       		.uleb128 0x3b
 4865 0219 0B       		.uleb128 0xb
 4866 021a 49       		.uleb128 0x49
 4867 021b 13       		.uleb128 0x13
 4868 021c 3F       		.uleb128 0x3f
 4869 021d 19       		.uleb128 0x19
 4870 021e 02       		.uleb128 0x2
 4871 021f 18       		.uleb128 0x18
 4872 0220 00       		.byte	0
 4873 0221 00       		.byte	0
 4874 0222 00       		.byte	0
 4875              		.section	.debug_aranges,"",%progbits
 4876 0000 64000000 		.4byte	0x64
 4877 0004 0200     		.2byte	0x2
 4878 0006 00000000 		.4byte	.Ldebug_info0
 4879 000a 04       		.byte	0x4
 4880 000b 00       		.byte	0
 4881 000c 0000     		.2byte	0
 4882 000e 0000     		.2byte	0
 4883 0010 00000000 		.4byte	.LFB1
 4884 0014 58000000 		.4byte	.LFE1-.LFB1
 4885 0018 00000000 		.4byte	.LFB2
 4886 001c 60000000 		.4byte	.LFE2-.LFB2
 4887 0020 00000000 		.4byte	.LFB3
 4888 0024 56000000 		.4byte	.LFE3-.LFB3
 4889 0028 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 98


 4890 002c 4C090000 		.4byte	.LFE4-.LFB4
 4891 0030 00000000 		.4byte	.LFB5
 4892 0034 B0050000 		.4byte	.LFE5-.LFB5
 4893 0038 00000000 		.4byte	.LFB6
 4894 003c 0C010000 		.4byte	.LFE6-.LFB6
 4895 0040 00000000 		.4byte	.LFB7
 4896 0044 24010000 		.4byte	.LFE7-.LFB7
 4897 0048 00000000 		.4byte	.LFB8
 4898 004c 9C000000 		.4byte	.LFE8-.LFB8
 4899 0050 00000000 		.4byte	.LFB9
 4900 0054 18000000 		.4byte	.LFE9-.LFB9
 4901 0058 00000000 		.4byte	.LFB10
 4902 005c 78000000 		.4byte	.LFE10-.LFB10
 4903 0060 00000000 		.4byte	0
 4904 0064 00000000 		.4byte	0
 4905              		.section	.debug_ranges,"",%progbits
 4906              	.Ldebug_ranges0:
 4907 0000 F6010000 		.4byte	.LBB10
 4908 0004 E2050000 		.4byte	.LBE10
 4909 0008 F4050000 		.4byte	.LBB15
 4910 000c F6050000 		.4byte	.LBE15
 4911 0010 00000000 		.4byte	0
 4912 0014 00000000 		.4byte	0
 4913 0018 02010000 		.4byte	.LBB19
 4914 001c 50010000 		.4byte	.LBE19
 4915 0020 52010000 		.4byte	.LBB21
 4916 0024 68010000 		.4byte	.LBE21
 4917 0028 00000000 		.4byte	0
 4918 002c 00000000 		.4byte	0
 4919 0030 FA010000 		.4byte	.LBB22
 4920 0034 46020000 		.4byte	.LBE22
 4921 0038 48020000 		.4byte	.LBB24
 4922 003c 5E020000 		.4byte	.LBE24
 4923 0040 00000000 		.4byte	0
 4924 0044 00000000 		.4byte	0
 4925 0048 26030000 		.4byte	.LBB25
 4926 004c 74030000 		.4byte	.LBE25
 4927 0050 76030000 		.4byte	.LBB27
 4928 0054 8C030000 		.4byte	.LBE27
 4929 0058 00000000 		.4byte	0
 4930 005c 00000000 		.4byte	0
 4931 0060 2A040000 		.4byte	.LBB28
 4932 0064 74040000 		.4byte	.LBE28
 4933 0068 76040000 		.4byte	.LBB30
 4934 006c 8C040000 		.4byte	.LBE30
 4935 0070 00000000 		.4byte	0
 4936 0074 00000000 		.4byte	0
 4937 0078 00000000 		.4byte	.LFB1
 4938 007c 58000000 		.4byte	.LFE1
 4939 0080 00000000 		.4byte	.LFB2
 4940 0084 60000000 		.4byte	.LFE2
 4941 0088 00000000 		.4byte	.LFB3
 4942 008c 56000000 		.4byte	.LFE3
 4943 0090 00000000 		.4byte	.LFB4
 4944 0094 4C090000 		.4byte	.LFE4
 4945 0098 00000000 		.4byte	.LFB5
 4946 009c B0050000 		.4byte	.LFE5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 99


 4947 00a0 00000000 		.4byte	.LFB6
 4948 00a4 0C010000 		.4byte	.LFE6
 4949 00a8 00000000 		.4byte	.LFB7
 4950 00ac 24010000 		.4byte	.LFE7
 4951 00b0 00000000 		.4byte	.LFB8
 4952 00b4 9C000000 		.4byte	.LFE8
 4953 00b8 00000000 		.4byte	.LFB9
 4954 00bc 18000000 		.4byte	.LFE9
 4955 00c0 00000000 		.4byte	.LFB10
 4956 00c4 78000000 		.4byte	.LFE10
 4957 00c8 00000000 		.4byte	0
 4958 00cc 00000000 		.4byte	0
 4959              		.section	.debug_line,"",%progbits
 4960              	.Ldebug_line0:
 4961 0000 BC040000 		.section	.debug_str,"MS",%progbits,1
 4961      02003201 
 4961      00000201 
 4961      FB0E0D00 
 4961      01010101 
 4962              	.LASF17:
 4963 0000 4F726965 		.ascii	"OrientationState\000"
 4963      6E746174 
 4963      696F6E53 
 4963      74617465 
 4963      00
 4964              	.LASF37:
 4965 0011 64696A6B 		.ascii	"dijkstra\000"
 4965      73747261 
 4965      00
 4966              	.LASF25:
 4967 001a 536B6970 		.ascii	"Skip\000"
 4967      00
 4968              	.LASF34:
 4969 001f 726F7773 		.ascii	"rows\000"
 4969      00
 4970              	.LASF65:
 4971 0024 69735661 		.ascii	"isValidMove\000"
 4971      6C69644D 
 4971      6F766500 
 4972              	.LASF0:
 4973 0030 7369676E 		.ascii	"signed char\000"
 4973      65642063 
 4973      68617200 
 4974              	.LASF12:
 4975 003c 5F5F7569 		.ascii	"__uint8_t\000"
 4975      6E74385F 
 4975      7400
 4976              	.LASF26:
 4977 0046 64697265 		.ascii	"direction\000"
 4977      6374696F 
 4977      6E00
 4978              	.LASF80:
 4979 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4979      43313120 
 4979      352E342E 
 4979      31203230 
 4979      31363036 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 100


 4980 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4980      20726576 
 4980      6973696F 
 4980      6E203233 
 4980      37373135 
 4981 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4981      66756E63 
 4981      74696F6E 
 4981      2D736563 
 4981      74696F6E 
 4982              	.LASF46:
 4983 00de 73746570 		.ascii	"stepNum\000"
 4983      4E756D00 
 4984              	.LASF7:
 4985 00e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 4985      206C6F6E 
 4985      6720756E 
 4985      7369676E 
 4985      65642069 
 4986              	.LASF29:
 4987 00fd 65787065 		.ascii	"expectedOrientation\000"
 4987      63746564 
 4987      4F726965 
 4987      6E746174 
 4987      696F6E00 
 4988              	.LASF45:
 4989 0111 64697374 		.ascii	"distances\000"
 4989      616E6365 
 4989      7300
 4990              	.LASF22:
 4991 011b 75547572 		.ascii	"uTurn\000"
 4991      6E00
 4992              	.LASF38:
 4993 0121 73746172 		.ascii	"startlocation\000"
 4993      746C6F63 
 4993      6174696F 
 4993      6E00
 4994              	.LASF32:
 4995 012f 7072696E 		.ascii	"printMap\000"
 4995      744D6170 
 4995      00
 4996              	.LASF6:
 4997 0138 6C6F6E67 		.ascii	"long long int\000"
 4997      206C6F6E 
 4997      6720696E 
 4997      7400
 4998              	.LASF82:
 4999 0146 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4999      6F63756D 
 4999      656E7473 
 4999      5C476974 
 4999      4875625C 
 5000 0175 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 5000      635F636F 
 5000      64655F62 
 5000      6173655C 
 5000      43533330 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 101


 5001              	.LASF54:
 5002 0197 6E657743 		.ascii	"newCol\000"
 5002      6F6C00
 5003              	.LASF30:
 5004 019e 496E7374 		.ascii	"Instruction\000"
 5004      72756374 
 5004      696F6E00 
 5005              	.LASF50:
 5006 01aa 63757272 		.ascii	"currentCol\000"
 5006      656E7443 
 5006      6F6C00
 5007              	.LASF4:
 5008 01b5 6C6F6E67 		.ascii	"long int\000"
 5008      20696E74 
 5008      00
 5009              	.LASF39:
 5010 01be 74617267 		.ascii	"targetlocation\000"
 5010      65746C6F 
 5010      63617469 
 5010      6F6E00
 5011              	.LASF23:
 5012 01cd 466F7277 		.ascii	"ForwardUntilTarget\000"
 5012      61726455 
 5012      6E74696C 
 5012      54617267 
 5012      657400
 5013              	.LASF31:
 5014 01e0 4C6F6361 		.ascii	"Location\000"
 5014      74696F6E 
 5014      00
 5015              	.LASF70:
 5016 01e9 74617267 		.ascii	"targetRow\000"
 5016      6574526F 
 5016      7700
 5017              	.LASF74:
 5018 01f3 696E7374 		.ascii	"instructionsList\000"
 5018      72756374 
 5018      696F6E73 
 5018      4C697374 
 5018      00
 5019              	.LASF66:
 5020 0204 63686563 		.ascii	"checkPathDirection\000"
 5020      6B506174 
 5020      68446972 
 5020      65637469 
 5020      6F6E00
 5021              	.LASF78:
 5022 0217 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 5022      5F6F665F 
 5022      6F707469 
 5022      6D616C5F 
 5022      636F6F72 
 5023              	.LASF8:
 5024 0233 756E7369 		.ascii	"unsigned int\000"
 5024      676E6564 
 5024      20696E74 
 5024      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 102


 5025              	.LASF47:
 5026 0240 73686F72 		.ascii	"shortestDist\000"
 5026      74657374 
 5026      44697374 
 5026      00
 5027              	.LASF5:
 5028 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 5028      20756E73 
 5028      69676E65 
 5028      6420696E 
 5028      7400
 5029              	.LASF61:
 5030 025f 74617267 		.ascii	"targetOrientation\000"
 5030      65744F72 
 5030      69656E74 
 5030      6174696F 
 5030      6E00
 5031              	.LASF3:
 5032 0271 73686F72 		.ascii	"short unsigned int\000"
 5032      7420756E 
 5032      7369676E 
 5032      65642069 
 5032      6E7400
 5033              	.LASF24:
 5034 0284 53746F70 		.ascii	"StopAtTarget\000"
 5034      41745461 
 5034      72676574 
 5034      00
 5035              	.LASF53:
 5036 0291 6E657752 		.ascii	"newRow\000"
 5036      6F7700
 5037              	.LASF44:
 5038 0298 70715369 		.ascii	"pqSize\000"
 5038      7A6500
 5039              	.LASF56:
 5040 029f 67657450 		.ascii	"getPathInstructions\000"
 5040      61746849 
 5040      6E737472 
 5040      75637469 
 5040      6F6E7300 
 5041              	.LASF15:
 5042 02b3 4C656674 		.ascii	"Left\000"
 5042      00
 5043              	.LASF10:
 5044 02b8 73697A65 		.ascii	"sizetype\000"
 5044      74797065 
 5044      00
 5045              	.LASF9:
 5046 02c1 6C6F6E67 		.ascii	"long double\000"
 5046      20646F75 
 5046      626C6500 
 5047              	.LASF49:
 5048 02cd 63757272 		.ascii	"currentRow\000"
 5048      656E7452 
 5048      6F7700
 5049              	.LASF67:
 5050 02d8 63686563 		.ascii	"checkIgnoreTurn\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 103


 5050      6B49676E 
 5050      6F726554 
 5050      75726E00 
 5051              	.LASF20:
 5052 02e8 77616974 		.ascii	"waitForLeftTurn\000"
 5052      466F724C 
 5052      65667454 
 5052      75726E00 
 5053              	.LASF52:
 5054 02f8 63757272 		.ascii	"current\000"
 5054      656E7400 
 5055              	.LASF64:
 5056 0300 61745461 		.ascii	"atTarget\000"
 5056      72676574 
 5056      00
 5057              	.LASF51:
 5058 0309 70617468 		.ascii	"pathIndex\000"
 5058      496E6465 
 5058      7800
 5059              	.LASF33:
 5060 0313 636C6561 		.ascii	"clearMap\000"
 5060      724D6170 
 5060      00
 5061              	.LASF62:
 5062 031c 6E657744 		.ascii	"newDirection\000"
 5062      69726563 
 5062      74696F6E 
 5062      00
 5063              	.LASF36:
 5064 0329 5F426F6F 		.ascii	"_Bool\000"
 5064      6C00
 5065              	.LASF1:
 5066 032f 756E7369 		.ascii	"unsigned char\000"
 5066      676E6564 
 5066      20636861 
 5066      7200
 5067              	.LASF18:
 5068 033d 496E7374 		.ascii	"InstructionDirection\000"
 5068      72756374 
 5068      696F6E44 
 5068      69726563 
 5068      74696F6E 
 5069              	.LASF69:
 5070 0352 67657454 		.ascii	"getTargetOrientation\000"
 5070      61726765 
 5070      744F7269 
 5070      656E7461 
 5070      74696F6E 
 5071              	.LASF72:
 5072 0367 66696E64 		.ascii	"findPath\000"
 5072      50617468 
 5072      00
 5073              	.LASF2:
 5074 0370 73686F72 		.ascii	"short int\000"
 5074      7420696E 
 5074      7400
 5075              	.LASF59:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 104


 5076 037a 74617267 		.ascii	"targetLocation\000"
 5076      65744C6F 
 5076      63617469 
 5076      6F6E00
 5077              	.LASF19:
 5078 0389 476F466F 		.ascii	"GoForward\000"
 5078      72776172 
 5078      6400
 5079              	.LASF16:
 5080 0393 52696768 		.ascii	"Right\000"
 5080      7400
 5081              	.LASF57:
 5082 0399 6E756D53 		.ascii	"numSteps\000"
 5082      74657073 
 5082      00
 5083              	.LASF60:
 5084 03a2 6C697374 		.ascii	"listIndex\000"
 5084      496E6465 
 5084      7800
 5085              	.LASF48:
 5086 03ac 72657453 		.ascii	"retSteps\000"
 5086      74657073 
 5086      00
 5087              	.LASF42:
 5088 03b5 6C6F6361 		.ascii	"location\000"
 5088      74696F6E 
 5088      00
 5089              	.LASF40:
 5090 03be 76697369 		.ascii	"visitedMap\000"
 5090      7465644D 
 5090      617000
 5091              	.LASF11:
 5092 03c9 63686172 		.ascii	"char\000"
 5092      00
 5093              	.LASF77:
 5094 03ce 73746172 		.ascii	"start_pos\000"
 5094      745F706F 
 5094      7300
 5095              	.LASF75:
 5096 03d8 70726576 		.ascii	"previousRobotOrientation\000"
 5096      696F7573 
 5096      526F626F 
 5096      744F7269 
 5096      656E7461 
 5097              	.LASF43:
 5098 03f1 64697374 		.ascii	"distance\000"
 5098      616E6365 
 5098      00
 5099              	.LASF73:
 5100 03fa 666F6F64 		.ascii	"food_list\000"
 5100      5F6C6973 
 5100      7400
 5101              	.LASF14:
 5102 0404 446F776E 		.ascii	"Down\000"
 5102      00
 5103              	.LASF76:
 5104 0409 63757272 		.ascii	"currentRobotOrientation\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 105


 5104      656E7452 
 5104      6F626F74 
 5104      4F726965 
 5104      6E746174 
 5105              	.LASF55:
 5106 0421 6E657744 		.ascii	"newDistance\000"
 5106      69737461 
 5106      6E636500 
 5107              	.LASF81:
 5108 042d 70617468 		.ascii	"pathfinding.c\000"
 5108      66696E64 
 5108      696E672E 
 5108      6300
 5109              	.LASF68:
 5110 043b 726F626F 		.ascii	"robotOrientation\000"
 5110      744F7269 
 5110      656E7461 
 5110      74696F6E 
 5110      00
 5111              	.LASF21:
 5112 044c 77616974 		.ascii	"waitForRightTurn\000"
 5112      466F7252 
 5112      69676874 
 5112      5475726E 
 5112      00
 5113              	.LASF41:
 5114 045d 5072696F 		.ascii	"PriorityQueue\000"
 5114      72697479 
 5114      51756575 
 5114      6500
 5115              	.LASF58:
 5116 046b 73746172 		.ascii	"startLocation\000"
 5116      744C6F63 
 5116      6174696F 
 5116      6E00
 5117              	.LASF13:
 5118 0479 75696E74 		.ascii	"uint8_t\000"
 5118      385F7400 
 5119              	.LASF83:
 5120 0481 696E7374 		.ascii	"instructionsListLength\000"
 5120      72756374 
 5120      696F6E73 
 5120      4C697374 
 5120      4C656E67 
 5121              	.LASF79:
 5122 0498 6D6F7665 		.ascii	"moves\000"
 5122      7300
 5123              	.LASF71:
 5124 049e 74617267 		.ascii	"targetCol\000"
 5124      6574436F 
 5124      6C00
 5125              	.LASF35:
 5126 04a8 636F6C73 		.ascii	"cols\000"
 5126      00
 5127              	.LASF63:
 5128 04ad 6E657874 		.ascii	"nextStep\000"
 5128      53746570 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\cct0sbrk.s 			page 106


 5128      00
 5129              	.LASF27:
 5130 04b6 69676E6F 		.ascii	"ignoreL\000"
 5130      72654C00 
 5131              	.LASF28:
 5132 04be 69676E6F 		.ascii	"ignoreR\000"
 5132      72655200 
 5133              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
