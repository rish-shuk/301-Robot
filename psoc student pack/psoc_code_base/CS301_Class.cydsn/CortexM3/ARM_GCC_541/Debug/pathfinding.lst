ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 01       		.byte	1
  26              		.bss
  27              		.align	2
  28              	instructionsList:
  29 0000 00000000 		.space	4560
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.align	2
  31              	numSteps:
  32 11d0 00000000 		.space	4
  33              		.global	map
  34              		.data
  35 0001 000000   		.align	2
  36              		.type	map, %object
  37              		.size	map, 1140
  38              	map:
  39 0004 01000000 		.word	1
  40 0008 01000000 		.word	1
  41 000c 01000000 		.word	1
  42 0010 01000000 		.word	1
  43 0014 01000000 		.word	1
  44 0018 01000000 		.word	1
  45 001c 01000000 		.word	1
  46 0020 01000000 		.word	1
  47 0024 01000000 		.word	1
  48 0028 01000000 		.word	1
  49 002c 01000000 		.word	1
  50 0030 01000000 		.word	1
  51 0034 01000000 		.word	1
  52 0038 01000000 		.word	1
  53 003c 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 2


  54 0040 01000000 		.word	1
  55 0044 01000000 		.word	1
  56 0048 01000000 		.word	1
  57 004c 01000000 		.word	1
  58 0050 01000000 		.word	1
  59 0054 00000000 		.word	0
  60 0058 01000000 		.word	1
  61 005c 00000000 		.word	0
  62 0060 00000000 		.word	0
  63 0064 00000000 		.word	0
  64 0068 00000000 		.word	0
  65 006c 00000000 		.word	0
  66 0070 00000000 		.word	0
  67 0074 00000000 		.word	0
  68 0078 00000000 		.word	0
  69 007c 00000000 		.word	0
  70 0080 00000000 		.word	0
  71 0084 00000000 		.word	0
  72 0088 00000000 		.word	0
  73 008c 00000000 		.word	0
  74 0090 00000000 		.word	0
  75 0094 00000000 		.word	0
  76 0098 01000000 		.word	1
  77 009c 01000000 		.word	1
  78 00a0 00000000 		.word	0
  79 00a4 01000000 		.word	1
  80 00a8 00000000 		.word	0
  81 00ac 01000000 		.word	1
  82 00b0 01000000 		.word	1
  83 00b4 01000000 		.word	1
  84 00b8 01000000 		.word	1
  85 00bc 01000000 		.word	1
  86 00c0 00000000 		.word	0
  87 00c4 01000000 		.word	1
  88 00c8 01000000 		.word	1
  89 00cc 01000000 		.word	1
  90 00d0 00000000 		.word	0
  91 00d4 01000000 		.word	1
  92 00d8 01000000 		.word	1
  93 00dc 01000000 		.word	1
  94 00e0 00000000 		.word	0
  95 00e4 01000000 		.word	1
  96 00e8 01000000 		.word	1
  97 00ec 00000000 		.word	0
  98 00f0 00000000 		.word	0
  99 00f4 00000000 		.word	0
 100 00f8 01000000 		.word	1
 101 00fc 00000000 		.word	0
 102 0100 00000000 		.word	0
 103 0104 00000000 		.word	0
 104 0108 01000000 		.word	1
 105 010c 00000000 		.word	0
 106 0110 00000000 		.word	0
 107 0114 00000000 		.word	0
 108 0118 00000000 		.word	0
 109 011c 00000000 		.word	0
 110 0120 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 3


 111 0124 00000000 		.word	0
 112 0128 01000000 		.word	1
 113 012c 00000000 		.word	0
 114 0130 01000000 		.word	1
 115 0134 01000000 		.word	1
 116 0138 01000000 		.word	1
 117 013c 01000000 		.word	1
 118 0140 00000000 		.word	0
 119 0144 01000000 		.word	1
 120 0148 00000000 		.word	0
 121 014c 01000000 		.word	1
 122 0150 00000000 		.word	0
 123 0154 01000000 		.word	1
 124 0158 01000000 		.word	1
 125 015c 01000000 		.word	1
 126 0160 00000000 		.word	0
 127 0164 01000000 		.word	1
 128 0168 00000000 		.word	0
 129 016c 01000000 		.word	1
 130 0170 01000000 		.word	1
 131 0174 01000000 		.word	1
 132 0178 00000000 		.word	0
 133 017c 01000000 		.word	1
 134 0180 01000000 		.word	1
 135 0184 00000000 		.word	0
 136 0188 00000000 		.word	0
 137 018c 00000000 		.word	0
 138 0190 01000000 		.word	1
 139 0194 00000000 		.word	0
 140 0198 01000000 		.word	1
 141 019c 00000000 		.word	0
 142 01a0 00000000 		.word	0
 143 01a4 00000000 		.word	0
 144 01a8 01000000 		.word	1
 145 01ac 00000000 		.word	0
 146 01b0 01000000 		.word	1
 147 01b4 00000000 		.word	0
 148 01b8 00000000 		.word	0
 149 01bc 00000000 		.word	0
 150 01c0 00000000 		.word	0
 151 01c4 00000000 		.word	0
 152 01c8 01000000 		.word	1
 153 01cc 01000000 		.word	1
 154 01d0 00000000 		.word	0
 155 01d4 01000000 		.word	1
 156 01d8 01000000 		.word	1
 157 01dc 01000000 		.word	1
 158 01e0 00000000 		.word	0
 159 01e4 01000000 		.word	1
 160 01e8 00000000 		.word	0
 161 01ec 01000000 		.word	1
 162 01f0 00000000 		.word	0
 163 01f4 01000000 		.word	1
 164 01f8 00000000 		.word	0
 165 01fc 01000000 		.word	1
 166 0200 00000000 		.word	0
 167 0204 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 4


 168 0208 01000000 		.word	1
 169 020c 01000000 		.word	1
 170 0210 00000000 		.word	0
 171 0214 01000000 		.word	1
 172 0218 01000000 		.word	1
 173 021c 00000000 		.word	0
 174 0220 01000000 		.word	1
 175 0224 00000000 		.word	0
 176 0228 01000000 		.word	1
 177 022c 00000000 		.word	0
 178 0230 00000000 		.word	0
 179 0234 00000000 		.word	0
 180 0238 01000000 		.word	1
 181 023c 00000000 		.word	0
 182 0240 01000000 		.word	1
 183 0244 00000000 		.word	0
 184 0248 01000000 		.word	1
 185 024c 00000000 		.word	0
 186 0250 01000000 		.word	1
 187 0254 00000000 		.word	0
 188 0258 00000000 		.word	0
 189 025c 00000000 		.word	0
 190 0260 01000000 		.word	1
 191 0264 01000000 		.word	1
 192 0268 00000000 		.word	0
 193 026c 01000000 		.word	1
 194 0270 00000000 		.word	0
 195 0274 01000000 		.word	1
 196 0278 00000000 		.word	0
 197 027c 01000000 		.word	1
 198 0280 01000000 		.word	1
 199 0284 01000000 		.word	1
 200 0288 00000000 		.word	0
 201 028c 01000000 		.word	1
 202 0290 00000000 		.word	0
 203 0294 01000000 		.word	1
 204 0298 00000000 		.word	0
 205 029c 01000000 		.word	1
 206 02a0 00000000 		.word	0
 207 02a4 01000000 		.word	1
 208 02a8 01000000 		.word	1
 209 02ac 01000000 		.word	1
 210 02b0 01000000 		.word	1
 211 02b4 00000000 		.word	0
 212 02b8 00000000 		.word	0
 213 02bc 00000000 		.word	0
 214 02c0 01000000 		.word	1
 215 02c4 00000000 		.word	0
 216 02c8 01000000 		.word	1
 217 02cc 00000000 		.word	0
 218 02d0 00000000 		.word	0
 219 02d4 00000000 		.word	0
 220 02d8 01000000 		.word	1
 221 02dc 00000000 		.word	0
 222 02e0 00000000 		.word	0
 223 02e4 00000000 		.word	0
 224 02e8 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 5


 225 02ec 00000000 		.word	0
 226 02f0 00000000 		.word	0
 227 02f4 00000000 		.word	0
 228 02f8 01000000 		.word	1
 229 02fc 01000000 		.word	1
 230 0300 01000000 		.word	1
 231 0304 01000000 		.word	1
 232 0308 00000000 		.word	0
 233 030c 01000000 		.word	1
 234 0310 00000000 		.word	0
 235 0314 01000000 		.word	1
 236 0318 01000000 		.word	1
 237 031c 01000000 		.word	1
 238 0320 01000000 		.word	1
 239 0324 01000000 		.word	1
 240 0328 01000000 		.word	1
 241 032c 01000000 		.word	1
 242 0330 01000000 		.word	1
 243 0334 01000000 		.word	1
 244 0338 01000000 		.word	1
 245 033c 01000000 		.word	1
 246 0340 00000000 		.word	0
 247 0344 01000000 		.word	1
 248 0348 01000000 		.word	1
 249 034c 00000000 		.word	0
 250 0350 00000000 		.word	0
 251 0354 00000000 		.word	0
 252 0358 00000000 		.word	0
 253 035c 00000000 		.word	0
 254 0360 00000000 		.word	0
 255 0364 00000000 		.word	0
 256 0368 00000000 		.word	0
 257 036c 00000000 		.word	0
 258 0370 00000000 		.word	0
 259 0374 00000000 		.word	0
 260 0378 00000000 		.word	0
 261 037c 00000000 		.word	0
 262 0380 00000000 		.word	0
 263 0384 00000000 		.word	0
 264 0388 00000000 		.word	0
 265 038c 00000000 		.word	0
 266 0390 01000000 		.word	1
 267 0394 01000000 		.word	1
 268 0398 00000000 		.word	0
 269 039c 01000000 		.word	1
 270 03a0 01000000 		.word	1
 271 03a4 01000000 		.word	1
 272 03a8 01000000 		.word	1
 273 03ac 01000000 		.word	1
 274 03b0 01000000 		.word	1
 275 03b4 01000000 		.word	1
 276 03b8 01000000 		.word	1
 277 03bc 01000000 		.word	1
 278 03c0 01000000 		.word	1
 279 03c4 01000000 		.word	1
 280 03c8 00000000 		.word	0
 281 03cc 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 6


 282 03d0 01000000 		.word	1
 283 03d4 01000000 		.word	1
 284 03d8 01000000 		.word	1
 285 03dc 01000000 		.word	1
 286 03e0 01000000 		.word	1
 287 03e4 00000000 		.word	0
 288 03e8 00000000 		.word	0
 289 03ec 00000000 		.word	0
 290 03f0 00000000 		.word	0
 291 03f4 00000000 		.word	0
 292 03f8 00000000 		.word	0
 293 03fc 00000000 		.word	0
 294 0400 01000000 		.word	1
 295 0404 00000000 		.word	0
 296 0408 00000000 		.word	0
 297 040c 00000000 		.word	0
 298 0410 00000000 		.word	0
 299 0414 00000000 		.word	0
 300 0418 00000000 		.word	0
 301 041c 00000000 		.word	0
 302 0420 00000000 		.word	0
 303 0424 00000000 		.word	0
 304 0428 01000000 		.word	1
 305 042c 01000000 		.word	1
 306 0430 01000000 		.word	1
 307 0434 01000000 		.word	1
 308 0438 01000000 		.word	1
 309 043c 01000000 		.word	1
 310 0440 01000000 		.word	1
 311 0444 01000000 		.word	1
 312 0448 01000000 		.word	1
 313 044c 01000000 		.word	1
 314 0450 01000000 		.word	1
 315 0454 01000000 		.word	1
 316 0458 01000000 		.word	1
 317 045c 01000000 		.word	1
 318 0460 01000000 		.word	1
 319 0464 01000000 		.word	1
 320 0468 01000000 		.word	1
 321 046c 01000000 		.word	1
 322 0470 01000000 		.word	1
 323 0474 01000000 		.word	1
 324              		.global	start_pos
 325              		.align	2
 326              		.type	start_pos, %object
 327              		.size	start_pos, 8
 328              	start_pos:
 329 0478 01000000 		.word	1
 330 047c 01000000 		.word	1
 331              		.global	food_list
 332              		.align	2
 333              		.type	food_list, %object
 334              		.size	food_list, 40
 335              	food_list:
 336 0480 0D000000 		.word	13
 337 0484 11000000 		.word	17
 338 0488 05000000 		.word	5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 7


 339 048c 05000000 		.word	5
 340 0490 07000000 		.word	7
 341 0494 01000000 		.word	1
 342 0498 0D000000 		.word	13
 343 049c 05000000 		.word	5
 344 04a0 09000000 		.word	9
 345 04a4 09000000 		.word	9
 346              		.section	.rodata
 347              		.align	2
 348              	.LC0:
 349 0000 256400   		.ascii	"%d\000"
 350              		.section	.text.printMap,"ax",%progbits
 351              		.align	2
 352              		.global	printMap
 353              		.thumb
 354              		.thumb_func
 355              		.type	printMap, %function
 356              	printMap:
 357              	.LFB1:
 358              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Down; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static int numSteps = 0;
  26:pathfinding.c **** 
  27:pathfinding.c **** uint8_t instructionsListLength();
  28:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  29:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  30:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  31:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 8


  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  50:pathfinding.c **** };
  51:pathfinding.c **** 
  52:pathfinding.c **** /*
  53:pathfinding.c **** int map[15][19] = {
  54:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  55:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  56:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  57:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  58:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  60:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  62:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  64:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  65:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  66:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  68:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:pathfinding.c **** };
  70:pathfinding.c **** */
  71:pathfinding.c **** 
  72:pathfinding.c **** 
  73:pathfinding.c **** int start_pos[2] = {1,1};
  74:pathfinding.c **** 
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {13,17},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {7,1},
  79:pathfinding.c **** {13,5},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** 
  83:pathfinding.c **** // MAP INITIALISATION CODE
  84:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 359              		.loc 1 84 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 84B0     		sub	sp, sp, #16
 368              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 9


 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
 372              	.LBB2:
  85:pathfinding.c ****     // Print the map in a grid format
  86:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 373              		.loc 1 86 0
 374 0008 0023     		movs	r3, #0
 375 000a FB60     		str	r3, [r7, #12]
 376 000c 1BE0     		b	.L2
 377              	.L5:
 378              	.LBB3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 379              		.loc 1 87 0
 380 000e 0023     		movs	r3, #0
 381 0010 BB60     		str	r3, [r7, #8]
 382 0012 0FE0     		b	.L3
 383              	.L4:
  88:pathfinding.c ****             printf("%d", map[i][j]);
 384              		.loc 1 88 0 discriminator 3
 385 0014 FB68     		ldr	r3, [r7, #12]
 386 0016 4C22     		movs	r2, #76
 387 0018 02FB03F3 		mul	r3, r2, r3
 388 001c 7A68     		ldr	r2, [r7, #4]
 389 001e 1344     		add	r3, r3, r2
 390 0020 BA68     		ldr	r2, [r7, #8]
 391 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 392 0026 1946     		mov	r1, r3
 393 0028 0A48     		ldr	r0, .L6
 394 002a FFF7FEFF 		bl	printf
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 395              		.loc 1 87 0 discriminator 3
 396 002e BB68     		ldr	r3, [r7, #8]
 397 0030 0133     		adds	r3, r3, #1
 398 0032 BB60     		str	r3, [r7, #8]
 399              	.L3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 400              		.loc 1 87 0 is_stmt 0 discriminator 1
 401 0034 BB68     		ldr	r3, [r7, #8]
 402 0036 122B     		cmp	r3, #18
 403 0038 ECDD     		ble	.L4
 404              	.LBE3:
  89:pathfinding.c ****         }
  90:pathfinding.c ****         printf("\n");
 405              		.loc 1 90 0 is_stmt 1 discriminator 2
 406 003a 0A20     		movs	r0, #10
 407 003c FFF7FEFF 		bl	putchar
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 408              		.loc 1 86 0 discriminator 2
 409 0040 FB68     		ldr	r3, [r7, #12]
 410 0042 0133     		adds	r3, r3, #1
 411 0044 FB60     		str	r3, [r7, #12]
 412              	.L2:
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 413              		.loc 1 86 0 is_stmt 0 discriminator 1
 414 0046 FB68     		ldr	r3, [r7, #12]
 415 0048 0E2B     		cmp	r3, #14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 10


 416 004a E0DD     		ble	.L5
 417              	.LBE2:
  91:pathfinding.c ****     }
  92:pathfinding.c **** }
 418              		.loc 1 92 0 is_stmt 1
 419 004c 00BF     		nop
 420 004e 1037     		adds	r7, r7, #16
 421              		.cfi_def_cfa_offset 8
 422 0050 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0052 80BD     		pop	{r7, pc}
 426              	.L7:
 427              		.align	2
 428              	.L6:
 429 0054 00000000 		.word	.LC0
 430              		.cfi_endproc
 431              	.LFE1:
 432              		.size	printMap, .-printMap
 433              		.section	.text.clearMap,"ax",%progbits
 434              		.align	2
 435              		.global	clearMap
 436              		.thumb
 437              		.thumb_func
 438              		.type	clearMap, %function
 439              	clearMap:
 440              	.LFB2:
  93:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 441              		.loc 1 93 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 16
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 85B0     		sub	sp, sp, #20
 450              		.cfi_def_cfa_offset 24
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 454              	.LBB4:
  94:pathfinding.c ****     // Print the map in a grid format
  95:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 455              		.loc 1 95 0
 456 0008 0023     		movs	r3, #0
 457 000a FB60     		str	r3, [r7, #12]
 458 000c 20E0     		b	.L9
 459              	.L13:
 460              	.LBB5:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 461              		.loc 1 96 0
 462 000e 0023     		movs	r3, #0
 463 0010 BB60     		str	r3, [r7, #8]
 464 0012 17E0     		b	.L10
 465              	.L12:
  97:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 11


 466              		.loc 1 97 0
 467 0014 FB68     		ldr	r3, [r7, #12]
 468 0016 4C22     		movs	r2, #76
 469 0018 02FB03F3 		mul	r3, r2, r3
 470 001c 7A68     		ldr	r2, [r7, #4]
 471 001e 1344     		add	r3, r3, r2
 472 0020 BA68     		ldr	r2, [r7, #8]
 473 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 474 0026 012B     		cmp	r3, #1
 475 0028 09D0     		beq	.L11
 476              		.loc 1 97 0 is_stmt 0 discriminator 1
 477 002a FB68     		ldr	r3, [r7, #12]
 478 002c 4C22     		movs	r2, #76
 479 002e 02FB03F3 		mul	r3, r2, r3
 480 0032 7A68     		ldr	r2, [r7, #4]
 481 0034 1344     		add	r3, r3, r2
 482 0036 BA68     		ldr	r2, [r7, #8]
 483 0038 0021     		movs	r1, #0
 484 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 485              	.L11:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 486              		.loc 1 96 0 is_stmt 1 discriminator 2
 487 003e BB68     		ldr	r3, [r7, #8]
 488 0040 0133     		adds	r3, r3, #1
 489 0042 BB60     		str	r3, [r7, #8]
 490              	.L10:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 491              		.loc 1 96 0 is_stmt 0 discriminator 1
 492 0044 BB68     		ldr	r3, [r7, #8]
 493 0046 122B     		cmp	r3, #18
 494 0048 E4DD     		ble	.L12
 495              	.LBE5:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 496              		.loc 1 95 0 is_stmt 1 discriminator 2
 497 004a FB68     		ldr	r3, [r7, #12]
 498 004c 0133     		adds	r3, r3, #1
 499 004e FB60     		str	r3, [r7, #12]
 500              	.L9:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 501              		.loc 1 95 0 is_stmt 0 discriminator 1
 502 0050 FB68     		ldr	r3, [r7, #12]
 503 0052 0E2B     		cmp	r3, #14
 504 0054 DBDD     		ble	.L13
 505              	.LBE4:
  98:pathfinding.c ****         }
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 506              		.loc 1 100 0 is_stmt 1
 507 0056 00BF     		nop
 508 0058 1437     		adds	r7, r7, #20
 509              		.cfi_def_cfa_offset 4
 510 005a BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 005c 80BC     		pop	{r7}
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 12


 516 005e 7047     		bx	lr
 517              		.cfi_endproc
 518              	.LFE2:
 519              		.size	clearMap, .-clearMap
 520              		.comm	list_of_optimal_coordinates,2280,4
 521              		.global	moves
 522              		.data
 523              		.align	2
 524              		.type	moves, %object
 525              		.size	moves, 32
 526              	moves:
 527 04a8 00000000 		.word	0
 528 04ac 01000000 		.word	1
 529 04b0 00000000 		.word	0
 530 04b4 FFFFFFFF 		.word	-1
 531 04b8 01000000 		.word	1
 532 04bc 00000000 		.word	0
 533 04c0 FFFFFFFF 		.word	-1
 534 04c4 00000000 		.word	0
 535              		.section	.text.isValidMove,"ax",%progbits
 536              		.align	2
 537              		.global	isValidMove
 538              		.thumb
 539              		.thumb_func
 540              		.type	isValidMove, %function
 541              	isValidMove:
 542              	.LFB3:
 101:pathfinding.c **** 
 102:pathfinding.c **** 
 103:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 104:pathfinding.c **** 
 105:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 106:pathfinding.c **** 
 107:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 543              		.loc 1 107 0
 544              		.cfi_startproc
 545              		@ args = 4, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 F860     		str	r0, [r7, #12]
 556 0008 B960     		str	r1, [r7, #8]
 557 000a 7A60     		str	r2, [r7, #4]
 558 000c 3B60     		str	r3, [r7]
 108:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 559              		.loc 1 108 0
 560 000e FB68     		ldr	r3, [r7, #12]
 561 0010 002B     		cmp	r3, #0
 562 0012 17DB     		blt	.L15
 563              		.loc 1 108 0 is_stmt 0 discriminator 1
 564 0014 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 13


 565 0016 7B68     		ldr	r3, [r7, #4]
 566 0018 9A42     		cmp	r2, r3
 567 001a 13DA     		bge	.L15
 568              		.loc 1 108 0 discriminator 3
 569 001c BB68     		ldr	r3, [r7, #8]
 570 001e 002B     		cmp	r3, #0
 571 0020 10DB     		blt	.L15
 572              		.loc 1 108 0 discriminator 5
 573 0022 BA68     		ldr	r2, [r7, #8]
 574 0024 3B68     		ldr	r3, [r7]
 575 0026 9A42     		cmp	r2, r3
 576 0028 0CDA     		bge	.L15
 577              		.loc 1 108 0 discriminator 7
 578 002a FB68     		ldr	r3, [r7, #12]
 579 002c 4C22     		movs	r2, #76
 580 002e 02FB03F3 		mul	r3, r2, r3
 581 0032 BA69     		ldr	r2, [r7, #24]
 582 0034 1344     		add	r3, r3, r2
 583 0036 BA68     		ldr	r2, [r7, #8]
 584 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 585 003c 002B     		cmp	r3, #0
 586 003e 01D1     		bne	.L15
 587              		.loc 1 108 0 discriminator 9
 588 0040 0123     		movs	r3, #1
 589 0042 00E0     		b	.L16
 590              	.L15:
 591              		.loc 1 108 0 discriminator 10
 592 0044 0023     		movs	r3, #0
 593              	.L16:
 594              		.loc 1 108 0 discriminator 12
 595 0046 03F00103 		and	r3, r3, #1
 596 004a DBB2     		uxtb	r3, r3
 109:pathfinding.c **** }
 597              		.loc 1 109 0 is_stmt 1 discriminator 12
 598 004c 1846     		mov	r0, r3
 599 004e 1437     		adds	r7, r7, #20
 600              		.cfi_def_cfa_offset 4
 601 0050 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 0052 80BC     		pop	{r7}
 605              		.cfi_restore 7
 606              		.cfi_def_cfa_offset 0
 607 0054 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE3:
 610              		.size	isValidMove, .-isValidMove
 611 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 612              		.align	2
 613              		.global	dijkstra
 614              		.thumb
 615              		.thumb_func
 616              		.type	dijkstra, %function
 617              	dijkstra:
 618              	.LFB4:
 110:pathfinding.c **** 
 111:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 14


 619              		.loc 1 111 0
 620              		.cfi_startproc
 621              		@ args = 12, pretend = 8, frame = 5816
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 82B0     		sub	sp, sp, #8
 624              		.cfi_def_cfa_offset 8
 625 0002 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 20
 627              		.cfi_offset 4, -20
 628              		.cfi_offset 7, -16
 629              		.cfi_offset 14, -12
 630 0004 ADF5B65D 		sub	sp, sp, #5824
 631              		.cfi_def_cfa_offset 5844
 632 0008 81B0     		sub	sp, sp, #4
 633              		.cfi_def_cfa_offset 5848
 634 000a 02AF     		add	r7, sp, #8
 635              		.cfi_def_cfa 7, 5840
 636 000c 07F11804 		add	r4, r7, #24
 637 0010 0C3C     		subs	r4, r4, #12
 638 0012 2060     		str	r0, [r4]
 639 0014 07F11800 		add	r0, r7, #24
 640 0018 1438     		subs	r0, r0, #20
 641 001a 80E80600 		stmia	r0, {r1, r2}
 642 001e 07F5B652 		add	r2, r7, #5824
 643 0022 02F10C02 		add	r2, r2, #12
 644 0026 1360     		str	r3, [r2]
 645              	.LBB6:
 112:pathfinding.c **** 
 113:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 114:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 646              		.loc 1 114 0
 647 0028 0023     		movs	r3, #0
 648 002a 07F5B552 		add	r2, r7, #5792
 649 002e 02F11402 		add	r2, r2, #20
 650 0032 1360     		str	r3, [r2]
 651 0034 3AE0     		b	.L19
 652              	.L22:
 653              	.LBB7:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 654              		.loc 1 115 0
 655 0036 0023     		movs	r3, #0
 656 0038 07F5B552 		add	r2, r7, #5792
 657 003c 02F11002 		add	r2, r2, #16
 658 0040 1360     		str	r3, [r2]
 659 0042 21E0     		b	.L20
 660              	.L21:
 116:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 661              		.loc 1 116 0 discriminator 3
 662 0044 07F58F51 		add	r1, r7, #4576
 663 0048 01F10C01 		add	r1, r1, #12
 664 004c 07F5B553 		add	r3, r7, #5792
 665 0050 03F11403 		add	r3, r3, #20
 666 0054 1A68     		ldr	r2, [r3]
 667 0056 1346     		mov	r3, r2
 668 0058 DB00     		lsls	r3, r3, #3
 669 005a 1344     		add	r3, r3, r2
 670 005c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 15


 671 005e 1344     		add	r3, r3, r2
 672 0060 07F5B552 		add	r2, r7, #5792
 673 0064 02F11002 		add	r2, r2, #16
 674 0068 1268     		ldr	r2, [r2]
 675 006a 1344     		add	r3, r3, r2
 676 006c 0122     		movs	r2, #1
 677 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 678              		.loc 1 115 0 discriminator 3
 679 0072 07F5B553 		add	r3, r7, #5792
 680 0076 03F11003 		add	r3, r3, #16
 681 007a 1B68     		ldr	r3, [r3]
 682 007c 0133     		adds	r3, r3, #1
 683 007e 07F5B552 		add	r2, r7, #5792
 684 0082 02F11002 		add	r2, r2, #16
 685 0086 1360     		str	r3, [r2]
 686              	.L20:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 687              		.loc 1 115 0 is_stmt 0 discriminator 1
 688 0088 07F5B553 		add	r3, r7, #5792
 689 008c 03F11003 		add	r3, r3, #16
 690 0090 1B68     		ldr	r3, [r3]
 691 0092 122B     		cmp	r3, #18
 692 0094 D6DD     		ble	.L21
 693              	.LBE7:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 694              		.loc 1 114 0 is_stmt 1 discriminator 2
 695 0096 07F5B553 		add	r3, r7, #5792
 696 009a 03F11403 		add	r3, r3, #20
 697 009e 1B68     		ldr	r3, [r3]
 698 00a0 0133     		adds	r3, r3, #1
 699 00a2 07F5B552 		add	r2, r7, #5792
 700 00a6 02F11402 		add	r2, r2, #20
 701 00aa 1360     		str	r3, [r2]
 702              	.L19:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 703              		.loc 1 114 0 is_stmt 0 discriminator 1
 704 00ac 07F5B553 		add	r3, r7, #5792
 705 00b0 03F11403 		add	r3, r3, #20
 706 00b4 1B68     		ldr	r3, [r3]
 707 00b6 0E2B     		cmp	r3, #14
 708 00b8 BDDD     		ble	.L22
 709              	.LBE6:
 117:pathfinding.c ****         }
 118:pathfinding.c ****     }
 119:pathfinding.c **** 
 120:pathfinding.c ****     struct PriorityQueue {
 121:pathfinding.c ****         struct Location location;
 122:pathfinding.c ****         int distance;
 123:pathfinding.c ****     };
 124:pathfinding.c **** 
 125:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 126:pathfinding.c ****     int pqSize = 0;
 710              		.loc 1 126 0 is_stmt 1
 711 00ba 0023     		movs	r3, #0
 712 00bc 07F5B552 		add	r2, r7, #5792
 713 00c0 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 16


 714 00c4 1360     		str	r3, [r2]
 715              	.LBB8:
 127:pathfinding.c **** 
 128:pathfinding.c ****     // Initialize distances and paths arrays
 129:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 130:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 131:pathfinding.c **** 
 132:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 716              		.loc 1 132 0
 717 00c6 0023     		movs	r3, #0
 718 00c8 07F5B552 		add	r2, r7, #5792
 719 00cc 02F10802 		add	r2, r2, #8
 720 00d0 1360     		str	r3, [r2]
 721 00d2 3AE0     		b	.L23
 722              	.L26:
 723              	.LBB9:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 724              		.loc 1 133 0
 725 00d4 0023     		movs	r3, #0
 726 00d6 07F5B552 		add	r2, r7, #5792
 727 00da 02F10402 		add	r2, r2, #4
 728 00de 1360     		str	r3, [r2]
 729 00e0 21E0     		b	.L24
 730              	.L25:
 134:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 731              		.loc 1 134 0 discriminator 3
 732 00e2 07F13802 		add	r2, r7, #56
 733 00e6 1C3A     		subs	r2, r2, #28
 734 00e8 07F5B553 		add	r3, r7, #5792
 735 00ec 03F10803 		add	r3, r3, #8
 736 00f0 1968     		ldr	r1, [r3]
 737 00f2 0B46     		mov	r3, r1
 738 00f4 DB00     		lsls	r3, r3, #3
 739 00f6 0B44     		add	r3, r3, r1
 740 00f8 5B00     		lsls	r3, r3, #1
 741 00fa 0B44     		add	r3, r3, r1
 742 00fc 07F5B551 		add	r1, r7, #5792
 743 0100 01F10401 		add	r1, r1, #4
 744 0104 0968     		ldr	r1, [r1]
 745 0106 0B44     		add	r3, r3, r1
 746 0108 4FF47A71 		mov	r1, #1000
 747 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 748              		.loc 1 133 0 discriminator 3
 749 0110 07F5B553 		add	r3, r7, #5792
 750 0114 03F10403 		add	r3, r3, #4
 751 0118 1B68     		ldr	r3, [r3]
 752 011a 0133     		adds	r3, r3, #1
 753 011c 07F5B552 		add	r2, r7, #5792
 754 0120 02F10402 		add	r2, r2, #4
 755 0124 1360     		str	r3, [r2]
 756              	.L24:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 757              		.loc 1 133 0 is_stmt 0 discriminator 1
 758 0126 07F5B553 		add	r3, r7, #5792
 759 012a 03F10403 		add	r3, r3, #4
 760 012e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 17


 761 0130 122B     		cmp	r3, #18
 762 0132 D6DD     		ble	.L25
 763              	.LBE9:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 764              		.loc 1 132 0 is_stmt 1 discriminator 2
 765 0134 07F5B553 		add	r3, r7, #5792
 766 0138 03F10803 		add	r3, r3, #8
 767 013c 1B68     		ldr	r3, [r3]
 768 013e 0133     		adds	r3, r3, #1
 769 0140 07F5B552 		add	r2, r7, #5792
 770 0144 02F10802 		add	r2, r2, #8
 771 0148 1360     		str	r3, [r2]
 772              	.L23:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 773              		.loc 1 132 0 is_stmt 0 discriminator 1
 774 014a 07F5B553 		add	r3, r7, #5792
 775 014e 03F10803 		add	r3, r3, #8
 776 0152 1B68     		ldr	r3, [r3]
 777 0154 0E2B     		cmp	r3, #14
 778 0156 BDDD     		ble	.L26
 779              	.LBE8:
 135:pathfinding.c ****         }
 136:pathfinding.c ****     }
 137:pathfinding.c **** 
 138:pathfinding.c ****     int stepNum = 0;
 780              		.loc 1 138 0 is_stmt 1
 781 0158 0023     		movs	r3, #0
 782 015a 07F5B552 		add	r2, r7, #5792
 783 015e 1360     		str	r3, [r2]
 139:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 784              		.loc 1 139 0
 785 0160 07F11803 		add	r3, r7, #24
 786 0164 143B     		subs	r3, r3, #20
 787 0166 1968     		ldr	r1, [r3]
 788 0168 07F11803 		add	r3, r7, #24
 789 016c 143B     		subs	r3, r3, #20
 790 016e 5868     		ldr	r0, [r3, #4]
 791 0170 07F13802 		add	r2, r7, #56
 792 0174 1C3A     		subs	r2, r2, #28
 793 0176 0B46     		mov	r3, r1
 794 0178 DB00     		lsls	r3, r3, #3
 795 017a 0B44     		add	r3, r3, r1
 796 017c 5B00     		lsls	r3, r3, #1
 797 017e 0B44     		add	r3, r3, r1
 798 0180 0344     		add	r3, r3, r0
 799 0182 0021     		movs	r1, #0
 800 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 140:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 141:pathfinding.c ****     stepNum++; // increment stepNum
 801              		.loc 1 141 0
 802 0188 07F5B553 		add	r3, r7, #5792
 803 018c 1B68     		ldr	r3, [r3]
 804 018e 0133     		adds	r3, r3, #1
 805 0190 07F5B552 		add	r2, r7, #5792
 806 0194 1360     		str	r3, [r2]
 142:pathfinding.c **** 
 143:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 18


 807              		.loc 1 143 0
 808 0196 07F59362 		add	r2, r7, #1176
 809 019a 083A     		subs	r2, r2, #8
 810 019c 07F5B553 		add	r3, r7, #5792
 811 01a0 03F10C03 		add	r3, r3, #12
 812 01a4 1968     		ldr	r1, [r3]
 813 01a6 0B46     		mov	r3, r1
 814 01a8 5B00     		lsls	r3, r3, #1
 815 01aa 0B44     		add	r3, r3, r1
 816 01ac 9B00     		lsls	r3, r3, #2
 817 01ae 1A44     		add	r2, r2, r3
 818 01b0 07F11803 		add	r3, r7, #24
 819 01b4 143B     		subs	r3, r3, #20
 820 01b6 93E80300 		ldmia	r3, {r0, r1}
 821 01ba 82E80300 		stmia	r2, {r0, r1}
 144:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 822              		.loc 1 144 0
 823 01be 07F59362 		add	r2, r7, #1176
 824 01c2 083A     		subs	r2, r2, #8
 825 01c4 07F5B553 		add	r3, r7, #5792
 826 01c8 03F10C03 		add	r3, r3, #12
 827 01cc 1968     		ldr	r1, [r3]
 828 01ce 0B46     		mov	r3, r1
 829 01d0 5B00     		lsls	r3, r3, #1
 830 01d2 0B44     		add	r3, r3, r1
 831 01d4 9B00     		lsls	r3, r3, #2
 832 01d6 1344     		add	r3, r3, r2
 833 01d8 0833     		adds	r3, r3, #8
 834 01da 0022     		movs	r2, #0
 835 01dc 1A60     		str	r2, [r3]
 145:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 836              		.loc 1 145 0
 837 01de 07F5B553 		add	r3, r7, #5792
 838 01e2 03F10C03 		add	r3, r3, #12
 839 01e6 1B68     		ldr	r3, [r3]
 840 01e8 0133     		adds	r3, r3, #1
 841 01ea 07F5B552 		add	r2, r7, #5792
 842 01ee 02F10C02 		add	r2, r2, #12
 843 01f2 1360     		str	r3, [r2]
 146:pathfinding.c **** 
 147:pathfinding.c ****     while (pqSize > 0) {
 844              		.loc 1 147 0
 845 01f4 F5E1     		b	.L27
 846              	.L37:
 847              	.LBB10:
 148:pathfinding.c ****         int idx = 0;
 848              		.loc 1 148 0
 849 01f6 0023     		movs	r3, #0
 850 01f8 07F5B452 		add	r2, r7, #5760
 851 01fc 02F11C02 		add	r2, r2, #28
 852 0200 1360     		str	r3, [r2]
 853              	.LBB11:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 854              		.loc 1 149 0
 855 0202 0123     		movs	r3, #1
 856 0204 07F5B452 		add	r2, r7, #5760
 857 0208 02F11802 		add	r2, r2, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 19


 858 020c 1360     		str	r3, [r2]
 859 020e 34E0     		b	.L28
 860              	.L30:
 150:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 861              		.loc 1 150 0
 862 0210 07F59362 		add	r2, r7, #1176
 863 0214 083A     		subs	r2, r2, #8
 864 0216 07F5B453 		add	r3, r7, #5760
 865 021a 03F11803 		add	r3, r3, #24
 866 021e 1968     		ldr	r1, [r3]
 867 0220 0B46     		mov	r3, r1
 868 0222 5B00     		lsls	r3, r3, #1
 869 0224 0B44     		add	r3, r3, r1
 870 0226 9B00     		lsls	r3, r3, #2
 871 0228 1344     		add	r3, r3, r2
 872 022a 0833     		adds	r3, r3, #8
 873 022c 1868     		ldr	r0, [r3]
 874 022e 07F59362 		add	r2, r7, #1176
 875 0232 083A     		subs	r2, r2, #8
 876 0234 07F5B453 		add	r3, r7, #5760
 877 0238 03F11C03 		add	r3, r3, #28
 878 023c 1968     		ldr	r1, [r3]
 879 023e 0B46     		mov	r3, r1
 880 0240 5B00     		lsls	r3, r3, #1
 881 0242 0B44     		add	r3, r3, r1
 882 0244 9B00     		lsls	r3, r3, #2
 883 0246 1344     		add	r3, r3, r2
 884 0248 0833     		adds	r3, r3, #8
 885 024a 1B68     		ldr	r3, [r3]
 886 024c 9842     		cmp	r0, r3
 887 024e 09DA     		bge	.L29
 151:pathfinding.c ****                 idx = i; // find the shortest distance location 
 888              		.loc 1 151 0
 889 0250 07F5B453 		add	r3, r7, #5760
 890 0254 03F11803 		add	r3, r3, #24
 891 0258 1B68     		ldr	r3, [r3]
 892 025a 07F5B452 		add	r2, r7, #5760
 893 025e 02F11C02 		add	r2, r2, #28
 894 0262 1360     		str	r3, [r2]
 895              	.L29:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 896              		.loc 1 149 0 discriminator 2
 897 0264 07F5B453 		add	r3, r7, #5760
 898 0268 03F11803 		add	r3, r3, #24
 899 026c 1B68     		ldr	r3, [r3]
 900 026e 0133     		adds	r3, r3, #1
 901 0270 07F5B452 		add	r2, r7, #5760
 902 0274 02F11802 		add	r2, r2, #24
 903 0278 1360     		str	r3, [r2]
 904              	.L28:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 905              		.loc 1 149 0 is_stmt 0 discriminator 1
 906 027a 07F5B453 		add	r3, r7, #5760
 907 027e 03F11803 		add	r3, r3, #24
 908 0282 1A68     		ldr	r2, [r3]
 909 0284 07F5B553 		add	r3, r7, #5792
 910 0288 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 20


 911 028c 1B68     		ldr	r3, [r3]
 912 028e 9A42     		cmp	r2, r3
 913 0290 BEDB     		blt	.L30
 914              	.LBE11:
 152:pathfinding.c ****             }
 153:pathfinding.c ****         }
 154:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 915              		.loc 1 154 0 is_stmt 1
 916 0292 07F11801 		add	r1, r7, #24
 917 0296 0839     		subs	r1, r1, #8
 918 0298 07F59362 		add	r2, r7, #1176
 919 029c 083A     		subs	r2, r2, #8
 920 029e 07F5B453 		add	r3, r7, #5760
 921 02a2 03F11C03 		add	r3, r3, #28
 922 02a6 1868     		ldr	r0, [r3]
 923 02a8 0346     		mov	r3, r0
 924 02aa 5B00     		lsls	r3, r3, #1
 925 02ac 0344     		add	r3, r3, r0
 926 02ae 9B00     		lsls	r3, r3, #2
 927 02b0 1A44     		add	r2, r2, r3
 928 02b2 0B46     		mov	r3, r1
 929 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 930 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 155:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 931              		.loc 1 155 0
 932 02ba 07F5B553 		add	r3, r7, #5792
 933 02be 03F10C03 		add	r3, r3, #12
 934 02c2 1B68     		ldr	r3, [r3]
 935 02c4 591E     		subs	r1, r3, #1
 936 02c6 07F59362 		add	r2, r7, #1176
 937 02ca 083A     		subs	r2, r2, #8
 938 02cc 07F5B453 		add	r3, r7, #5760
 939 02d0 03F11C03 		add	r3, r3, #28
 940 02d4 1868     		ldr	r0, [r3]
 941 02d6 0346     		mov	r3, r0
 942 02d8 5B00     		lsls	r3, r3, #1
 943 02da 0344     		add	r3, r3, r0
 944 02dc 9B00     		lsls	r3, r3, #2
 945 02de D018     		adds	r0, r2, r3
 946 02e0 07F59362 		add	r2, r7, #1176
 947 02e4 083A     		subs	r2, r2, #8
 948 02e6 0B46     		mov	r3, r1
 949 02e8 5B00     		lsls	r3, r3, #1
 950 02ea 0B44     		add	r3, r3, r1
 951 02ec 9B00     		lsls	r3, r3, #2
 952 02ee 1A44     		add	r2, r2, r3
 953 02f0 0346     		mov	r3, r0
 954 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 955 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 156:pathfinding.c ****         pqSize--; // decrement pqSize
 956              		.loc 1 156 0
 957 02f8 07F5B553 		add	r3, r7, #5792
 958 02fc 03F10C03 		add	r3, r3, #12
 959 0300 1B68     		ldr	r3, [r3]
 960 0302 013B     		subs	r3, r3, #1
 961 0304 07F5B552 		add	r2, r7, #5792
 962 0308 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 21


 963 030c 1360     		str	r3, [r2]
 157:pathfinding.c **** 
 158:pathfinding.c ****         int row = current.location.row;
 964              		.loc 1 158 0
 965 030e 07F11803 		add	r3, r7, #24
 966 0312 083B     		subs	r3, r3, #8
 967 0314 1B68     		ldr	r3, [r3]
 968 0316 07F5B352 		add	r2, r7, #5728
 969 031a 02F11C02 		add	r2, r2, #28
 970 031e 1360     		str	r3, [r2]
 159:pathfinding.c ****         int col = current.location.col; // get current location details
 971              		.loc 1 159 0
 972 0320 07F11803 		add	r3, r7, #24
 973 0324 083B     		subs	r3, r3, #8
 974 0326 5B68     		ldr	r3, [r3, #4]
 975 0328 07F5B352 		add	r2, r7, #5728
 976 032c 02F11802 		add	r2, r2, #24
 977 0330 1360     		str	r3, [r2]
 160:pathfinding.c **** 
 161:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 978              		.loc 1 161 0
 979 0332 07F58F51 		add	r1, r7, #4576
 980 0336 01F10C01 		add	r1, r1, #12
 981 033a 07F5B353 		add	r3, r7, #5728
 982 033e 03F11C03 		add	r3, r3, #28
 983 0342 1A68     		ldr	r2, [r3]
 984 0344 1346     		mov	r3, r2
 985 0346 DB00     		lsls	r3, r3, #3
 986 0348 1344     		add	r3, r3, r2
 987 034a 5B00     		lsls	r3, r3, #1
 988 034c 1344     		add	r3, r3, r2
 989 034e 07F5B352 		add	r2, r7, #5728
 990 0352 02F11802 		add	r2, r2, #24
 991 0356 1268     		ldr	r2, [r2]
 992 0358 1344     		add	r3, r3, r2
 993 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 994 035e 012B     		cmp	r3, #1
 995 0360 40F03F81 		bne	.L27
 162:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 996              		.loc 1 162 0
 997 0364 07F58F51 		add	r1, r7, #4576
 998 0368 01F10C01 		add	r1, r1, #12
 999 036c 07F5B353 		add	r3, r7, #5728
 1000 0370 03F11C03 		add	r3, r3, #28
 1001 0374 1A68     		ldr	r2, [r3]
 1002 0376 1346     		mov	r3, r2
 1003 0378 DB00     		lsls	r3, r3, #3
 1004 037a 1344     		add	r3, r3, r2
 1005 037c 5B00     		lsls	r3, r3, #1
 1006 037e 1344     		add	r3, r3, r2
 1007 0380 07F5B352 		add	r2, r7, #5728
 1008 0384 02F11802 		add	r2, r2, #24
 1009 0388 1268     		ldr	r2, [r2]
 1010 038a 1344     		add	r3, r3, r2
 1011 038c 0022     		movs	r2, #0
 1012 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 163:pathfinding.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 22


 164:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1013              		.loc 1 164 0
 1014 0392 07F5B653 		add	r3, r7, #5824
 1015 0396 03F10C03 		add	r3, r3, #12
 1016 039a 1A68     		ldr	r2, [r3]
 1017 039c 07F5B353 		add	r3, r7, #5728
 1018 03a0 03F11C03 		add	r3, r3, #28
 1019 03a4 1B68     		ldr	r3, [r3]
 1020 03a6 9A42     		cmp	r2, r3
 1021 03a8 0CD1     		bne	.L32
 1022              		.loc 1 164 0 is_stmt 0 discriminator 1
 1023 03aa 07F5B653 		add	r3, r7, #5824
 1024 03ae 03F11003 		add	r3, r3, #16
 1025 03b2 1A68     		ldr	r2, [r3]
 1026 03b4 07F5B353 		add	r3, r7, #5728
 1027 03b8 03F11803 		add	r3, r3, #24
 1028 03bc 1B68     		ldr	r3, [r3]
 1029 03be 9A42     		cmp	r2, r3
 1030 03c0 00F01881 		beq	.L43
 1031              	.L32:
 1032              	.LBB12:
 165:pathfinding.c ****                 break; // if reached target destination, end
 166:pathfinding.c ****             }
 167:pathfinding.c ****             // make a move, check if valid
 168:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1033              		.loc 1 168 0 is_stmt 1
 1034 03c4 0023     		movs	r3, #0
 1035 03c6 07F5B452 		add	r2, r7, #5760
 1036 03ca 02F11402 		add	r2, r2, #20
 1037 03ce 1360     		str	r3, [r2]
 1038 03d0 FFE0     		b	.L34
 1039              	.L36:
 1040              	.LBB13:
 169:pathfinding.c ****                 int newRow = row + moves[i].row;
 1041              		.loc 1 169 0
 1042 03d2 D04A     		ldr	r2, .L44
 1043 03d4 07F5B453 		add	r3, r7, #5760
 1044 03d8 03F11403 		add	r3, r3, #20
 1045 03dc 1B68     		ldr	r3, [r3]
 1046 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1047 03e2 07F5B353 		add	r3, r7, #5728
 1048 03e6 03F11C03 		add	r3, r3, #28
 1049 03ea 1B68     		ldr	r3, [r3]
 1050 03ec 1344     		add	r3, r3, r2
 1051 03ee 07F5B352 		add	r2, r7, #5728
 1052 03f2 02F11402 		add	r2, r2, #20
 1053 03f6 1360     		str	r3, [r2]
 170:pathfinding.c ****                 int newCol = col + moves[i].col;
 1054              		.loc 1 170 0
 1055 03f8 C64A     		ldr	r2, .L44
 1056 03fa 07F5B453 		add	r3, r7, #5760
 1057 03fe 03F11403 		add	r3, r3, #20
 1058 0402 1B68     		ldr	r3, [r3]
 1059 0404 DB00     		lsls	r3, r3, #3
 1060 0406 1344     		add	r3, r3, r2
 1061 0408 5A68     		ldr	r2, [r3, #4]
 1062 040a 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 23


 1063 040e 03F11803 		add	r3, r3, #24
 1064 0412 1B68     		ldr	r3, [r3]
 1065 0414 1344     		add	r3, r3, r2
 1066 0416 07F5B352 		add	r2, r7, #5728
 1067 041a 02F11002 		add	r2, r2, #16
 1068 041e 1360     		str	r3, [r2]
 171:pathfinding.c **** 
 172:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1069              		.loc 1 172 0
 1070 0420 07F11803 		add	r3, r7, #24
 1071 0424 0C3B     		subs	r3, r3, #12
 1072 0426 1B68     		ldr	r3, [r3]
 1073 0428 0093     		str	r3, [sp]
 1074 042a 1323     		movs	r3, #19
 1075 042c 0F22     		movs	r2, #15
 1076 042e 07F5B351 		add	r1, r7, #5728
 1077 0432 01F11001 		add	r1, r1, #16
 1078 0436 0968     		ldr	r1, [r1]
 1079 0438 07F5B350 		add	r0, r7, #5728
 1080 043c 00F11400 		add	r0, r0, #20
 1081 0440 0068     		ldr	r0, [r0]
 1082 0442 FFF7FEFF 		bl	isValidMove
 1083 0446 0346     		mov	r3, r0
 1084 0448 002B     		cmp	r3, #0
 1085 044a 00F0B780 		beq	.L35
 1086              		.loc 1 172 0 is_stmt 0 discriminator 1
 1087 044e 07F58F51 		add	r1, r7, #4576
 1088 0452 01F10C01 		add	r1, r1, #12
 1089 0456 07F5B353 		add	r3, r7, #5728
 1090 045a 03F11403 		add	r3, r3, #20
 1091 045e 1A68     		ldr	r2, [r3]
 1092 0460 1346     		mov	r3, r2
 1093 0462 DB00     		lsls	r3, r3, #3
 1094 0464 1344     		add	r3, r3, r2
 1095 0466 5B00     		lsls	r3, r3, #1
 1096 0468 1344     		add	r3, r3, r2
 1097 046a 07F5B352 		add	r2, r7, #5728
 1098 046e 02F11002 		add	r2, r2, #16
 1099 0472 1268     		ldr	r2, [r2]
 1100 0474 1344     		add	r3, r3, r2
 1101 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1102 047a 012B     		cmp	r3, #1
 1103 047c 40F09E80 		bne	.L35
 1104              	.LBB14:
 173:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1105              		.loc 1 173 0 is_stmt 1
 1106 0480 07F13802 		add	r2, r7, #56
 1107 0484 1C3A     		subs	r2, r2, #28
 1108 0486 07F5B353 		add	r3, r7, #5728
 1109 048a 03F11C03 		add	r3, r3, #28
 1110 048e 1968     		ldr	r1, [r3]
 1111 0490 0B46     		mov	r3, r1
 1112 0492 DB00     		lsls	r3, r3, #3
 1113 0494 0B44     		add	r3, r3, r1
 1114 0496 5B00     		lsls	r3, r3, #1
 1115 0498 0B44     		add	r3, r3, r1
 1116 049a 07F5B351 		add	r1, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 24


 1117 049e 01F11801 		add	r1, r1, #24
 1118 04a2 0968     		ldr	r1, [r1]
 1119 04a4 0B44     		add	r3, r3, r1
 1120 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1121 04aa 0133     		adds	r3, r3, #1
 1122 04ac 07F5B352 		add	r2, r7, #5728
 1123 04b0 02F10C02 		add	r2, r2, #12
 1124 04b4 1360     		str	r3, [r2]
 174:pathfinding.c ****                     // take the shortest distance between new and existing
 175:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1125              		.loc 1 175 0
 1126 04b6 07F13802 		add	r2, r7, #56
 1127 04ba 1C3A     		subs	r2, r2, #28
 1128 04bc 07F5B353 		add	r3, r7, #5728
 1129 04c0 03F11403 		add	r3, r3, #20
 1130 04c4 1968     		ldr	r1, [r3]
 1131 04c6 0B46     		mov	r3, r1
 1132 04c8 DB00     		lsls	r3, r3, #3
 1133 04ca 0B44     		add	r3, r3, r1
 1134 04cc 5B00     		lsls	r3, r3, #1
 1135 04ce 0B44     		add	r3, r3, r1
 1136 04d0 07F5B351 		add	r1, r7, #5728
 1137 04d4 01F11001 		add	r1, r1, #16
 1138 04d8 0968     		ldr	r1, [r1]
 1139 04da 0B44     		add	r3, r3, r1
 1140 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1141 04e0 07F5B353 		add	r3, r7, #5728
 1142 04e4 03F10C03 		add	r3, r3, #12
 1143 04e8 1B68     		ldr	r3, [r3]
 1144 04ea 9A42     		cmp	r2, r3
 1145 04ec 66DD     		ble	.L35
 176:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1146              		.loc 1 176 0
 1147 04ee 07F13802 		add	r2, r7, #56
 1148 04f2 1C3A     		subs	r2, r2, #28
 1149 04f4 07F5B353 		add	r3, r7, #5728
 1150 04f8 03F11403 		add	r3, r3, #20
 1151 04fc 1968     		ldr	r1, [r3]
 1152 04fe 0B46     		mov	r3, r1
 1153 0500 DB00     		lsls	r3, r3, #3
 1154 0502 0B44     		add	r3, r3, r1
 1155 0504 5B00     		lsls	r3, r3, #1
 1156 0506 0B44     		add	r3, r3, r1
 1157 0508 07F5B351 		add	r1, r7, #5728
 1158 050c 01F11001 		add	r1, r1, #16
 1159 0510 0968     		ldr	r1, [r1]
 1160 0512 0B44     		add	r3, r3, r1
 1161 0514 07F5B351 		add	r1, r7, #5728
 1162 0518 01F10C01 		add	r1, r1, #12
 1163 051c 0968     		ldr	r1, [r1]
 1164 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 177:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 178:pathfinding.c ****                         
 179:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1165              		.loc 1 179 0
 1166 0522 07F59362 		add	r2, r7, #1176
 1167 0526 083A     		subs	r2, r2, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 25


 1168 0528 07F5B553 		add	r3, r7, #5792
 1169 052c 03F10C03 		add	r3, r3, #12
 1170 0530 1968     		ldr	r1, [r3]
 1171 0532 0B46     		mov	r3, r1
 1172 0534 5B00     		lsls	r3, r3, #1
 1173 0536 0B44     		add	r3, r3, r1
 1174 0538 9B00     		lsls	r3, r3, #2
 1175 053a 1344     		add	r3, r3, r2
 1176 053c 07F5B352 		add	r2, r7, #5728
 1177 0540 02F11402 		add	r2, r2, #20
 1178 0544 1268     		ldr	r2, [r2]
 1179 0546 1A60     		str	r2, [r3]
 180:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1180              		.loc 1 180 0
 1181 0548 07F59362 		add	r2, r7, #1176
 1182 054c 083A     		subs	r2, r2, #8
 1183 054e 07F5B553 		add	r3, r7, #5792
 1184 0552 03F10C03 		add	r3, r3, #12
 1185 0556 1968     		ldr	r1, [r3]
 1186 0558 0B46     		mov	r3, r1
 1187 055a 5B00     		lsls	r3, r3, #1
 1188 055c 0B44     		add	r3, r3, r1
 1189 055e 9B00     		lsls	r3, r3, #2
 1190 0560 1344     		add	r3, r3, r2
 1191 0562 0433     		adds	r3, r3, #4
 1192 0564 07F5B352 		add	r2, r7, #5728
 1193 0568 02F11002 		add	r2, r2, #16
 1194 056c 1268     		ldr	r2, [r2]
 1195 056e 1A60     		str	r2, [r3]
 181:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1196              		.loc 1 181 0
 1197 0570 07F59362 		add	r2, r7, #1176
 1198 0574 083A     		subs	r2, r2, #8
 1199 0576 07F5B553 		add	r3, r7, #5792
 1200 057a 03F10C03 		add	r3, r3, #12
 1201 057e 1968     		ldr	r1, [r3]
 1202 0580 0B46     		mov	r3, r1
 1203 0582 5B00     		lsls	r3, r3, #1
 1204 0584 0B44     		add	r3, r3, r1
 1205 0586 9B00     		lsls	r3, r3, #2
 1206 0588 1344     		add	r3, r3, r2
 1207 058a 0833     		adds	r3, r3, #8
 1208 058c 07F5B352 		add	r2, r7, #5728
 1209 0590 02F10C02 		add	r2, r2, #12
 1210 0594 1268     		ldr	r2, [r2]
 1211 0596 1A60     		str	r2, [r3]
 182:pathfinding.c ****                         
 183:pathfinding.c ****                         stepNum++;
 1212              		.loc 1 183 0
 1213 0598 07F5B553 		add	r3, r7, #5792
 1214 059c 1B68     		ldr	r3, [r3]
 1215 059e 0133     		adds	r3, r3, #1
 1216 05a0 07F5B552 		add	r2, r7, #5792
 1217 05a4 1360     		str	r3, [r2]
 184:pathfinding.c ****                         pqSize++;
 1218              		.loc 1 184 0
 1219 05a6 07F5B553 		add	r3, r7, #5792
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 26


 1220 05aa 03F10C03 		add	r3, r3, #12
 1221 05ae 1B68     		ldr	r3, [r3]
 1222 05b0 0133     		adds	r3, r3, #1
 1223 05b2 07F5B552 		add	r2, r7, #5792
 1224 05b6 02F10C02 		add	r2, r2, #12
 1225 05ba 1360     		str	r3, [r2]
 1226              	.L35:
 1227              	.LBE14:
 1228              	.LBE13:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1229              		.loc 1 168 0 discriminator 2
 1230 05bc 07F5B453 		add	r3, r7, #5760
 1231 05c0 03F11403 		add	r3, r3, #20
 1232 05c4 1B68     		ldr	r3, [r3]
 1233 05c6 0133     		adds	r3, r3, #1
 1234 05c8 07F5B452 		add	r2, r7, #5760
 1235 05cc 02F11402 		add	r2, r2, #20
 1236 05d0 1360     		str	r3, [r2]
 1237              	.L34:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1238              		.loc 1 168 0 is_stmt 0 discriminator 1
 1239 05d2 07F5B453 		add	r3, r7, #5760
 1240 05d6 03F11403 		add	r3, r3, #20
 1241 05da 1B68     		ldr	r3, [r3]
 1242 05dc 032B     		cmp	r3, #3
 1243 05de 7FF6F8AE 		bls	.L36
 1244              	.L27:
 1245              	.LBE12:
 1246              	.LBE10:
 147:pathfinding.c ****         int idx = 0;
 1247              		.loc 1 147 0 is_stmt 1
 1248 05e2 07F5B553 		add	r3, r7, #5792
 1249 05e6 03F10C03 		add	r3, r3, #12
 1250 05ea 1B68     		ldr	r3, [r3]
 1251 05ec 002B     		cmp	r3, #0
 1252 05ee 3FF702AE 		bgt	.L37
 1253 05f2 00E0     		b	.L33
 1254              	.L43:
 1255              	.LBB15:
 165:pathfinding.c ****             }
 1256              		.loc 1 165 0
 1257 05f4 00BF     		nop
 1258              	.L33:
 1259              	.LBE15:
 185:pathfinding.c ****                     }
 186:pathfinding.c ****                 }
 187:pathfinding.c ****             }
 188:pathfinding.c ****         }
 189:pathfinding.c ****     }
 190:pathfinding.c **** 
 191:pathfinding.c ****     // PATH RECONSTRUCTION
 192:pathfinding.c ****     // initialise maximum distance- will be decremented
 193:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1260              		.loc 1 193 0
 1261 05f6 07F5B653 		add	r3, r7, #5824
 1262 05fa 03F10C03 		add	r3, r3, #12
 1263 05fe 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 27


 1264 0600 07F5B653 		add	r3, r7, #5824
 1265 0604 03F11003 		add	r3, r3, #16
 1266 0608 1868     		ldr	r0, [r3]
 1267 060a 07F13802 		add	r2, r7, #56
 1268 060e 1C3A     		subs	r2, r2, #28
 1269 0610 0B46     		mov	r3, r1
 1270 0612 DB00     		lsls	r3, r3, #3
 1271 0614 0B44     		add	r3, r3, r1
 1272 0616 5B00     		lsls	r3, r3, #1
 1273 0618 0B44     		add	r3, r3, r1
 1274 061a 0344     		add	r3, r3, r0
 1275 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1276 0620 07F5B452 		add	r2, r7, #5760
 1277 0624 02F11002 		add	r2, r2, #16
 1278 0628 1360     		str	r3, [r2]
 194:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1279              		.loc 1 194 0
 1280 062a 3B4A     		ldr	r2, .L44+4
 1281 062c 07F5B453 		add	r3, r7, #5760
 1282 0630 03F11003 		add	r3, r3, #16
 1283 0634 1B68     		ldr	r3, [r3]
 1284 0636 1360     		str	r3, [r2]
 195:pathfinding.c ****     // retsteps can be generated from here
 196:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1285              		.loc 1 196 0
 1286 0638 07F5B453 		add	r3, r7, #5760
 1287 063c 03F11003 		add	r3, r3, #16
 1288 0640 1B68     		ldr	r3, [r3]
 1289 0642 DB00     		lsls	r3, r3, #3
 1290 0644 1846     		mov	r0, r3
 1291 0646 FFF7FEFF 		bl	malloc
 1292 064a 0346     		mov	r3, r0
 1293 064c 07F5B352 		add	r2, r7, #5728
 1294 0650 02F10802 		add	r2, r2, #8
 1295 0654 1360     		str	r3, [r2]
 197:pathfinding.c ****     int currentRow = targetlocation.row;
 1296              		.loc 1 197 0
 1297 0656 07F5B653 		add	r3, r7, #5824
 1298 065a 03F10C03 		add	r3, r3, #12
 1299 065e 1B68     		ldr	r3, [r3]
 1300 0660 07F5B452 		add	r2, r7, #5760
 1301 0664 02F10C02 		add	r2, r2, #12
 1302 0668 1360     		str	r3, [r2]
 198:pathfinding.c ****     int currentCol = targetlocation.col;
 1303              		.loc 1 198 0
 1304 066a 07F5B653 		add	r3, r7, #5824
 1305 066e 03F11003 		add	r3, r3, #16
 1306 0672 1B68     		ldr	r3, [r3]
 1307 0674 07F5B452 		add	r2, r7, #5760
 1308 0678 02F10802 		add	r2, r2, #8
 1309 067c 1360     		str	r3, [r2]
 199:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1310              		.loc 1 199 0
 1311 067e 07F5B453 		add	r3, r7, #5760
 1312 0682 03F11003 		add	r3, r3, #16
 1313 0686 1B68     		ldr	r3, [r3]
 1314 0688 03F10053 		add	r3, r3, #536870912
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 28


 1315 068c 013B     		subs	r3, r3, #1
 1316 068e DB00     		lsls	r3, r3, #3
 1317 0690 07F5B352 		add	r2, r7, #5728
 1318 0694 02F10802 		add	r2, r2, #8
 1319 0698 1268     		ldr	r2, [r2]
 1320 069a 1344     		add	r3, r3, r2
 1321 069c 07F5B452 		add	r2, r7, #5760
 1322 06a0 02F10C02 		add	r2, r2, #12
 1323 06a4 1268     		ldr	r2, [r2]
 1324 06a6 1A60     		str	r2, [r3]
 200:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1325              		.loc 1 200 0
 1326 06a8 07F5B453 		add	r3, r7, #5760
 1327 06ac 03F11003 		add	r3, r3, #16
 1328 06b0 1B68     		ldr	r3, [r3]
 1329 06b2 03F10053 		add	r3, r3, #536870912
 1330 06b6 013B     		subs	r3, r3, #1
 1331 06b8 DB00     		lsls	r3, r3, #3
 1332 06ba 07F5B352 		add	r2, r7, #5728
 1333 06be 02F10802 		add	r2, r2, #8
 1334 06c2 1268     		ldr	r2, [r2]
 1335 06c4 1344     		add	r3, r3, r2
 1336 06c6 07F5B452 		add	r2, r7, #5760
 1337 06ca 02F10802 		add	r2, r2, #8
 1338 06ce 1268     		ldr	r2, [r2]
 1339 06d0 5A60     		str	r2, [r3, #4]
 201:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 202:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1340              		.loc 1 202 0
 1341 06d2 07F5B453 		add	r3, r7, #5760
 1342 06d6 03F10C03 		add	r3, r3, #12
 1343 06da 1B68     		ldr	r3, [r3]
 1344 06dc 4C22     		movs	r2, #76
 1345 06de 02FB03F2 		mul	r2, r2, r3
 1346 06e2 07F11803 		add	r3, r7, #24
 1347 06e6 0C3B     		subs	r3, r3, #12
 1348 06e8 1B68     		ldr	r3, [r3]
 1349 06ea 1344     		add	r3, r3, r2
 1350 06ec 07F5B452 		add	r2, r7, #5760
 1351 06f0 02F10802 		add	r2, r2, #8
 1352 06f4 1268     		ldr	r2, [r2]
 1353 06f6 0921     		movs	r1, #9
 1354 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 203:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 204:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 205:pathfinding.c ****     int pathIndex = 0;
 1355              		.loc 1 205 0
 1356 06fc 0023     		movs	r3, #0
 1357 06fe 07F5B452 		add	r2, r7, #5760
 1358 0702 02F10402 		add	r2, r2, #4
 1359 0706 1360     		str	r3, [r2]
 206:pathfinding.c **** 
 207:pathfinding.c ****     while(shortestDist > 0) {    
 1360              		.loc 1 207 0
 1361 0708 0BE1     		b	.L38
 1362              	.L42:
 1363              	.LBB16:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 29


 208:pathfinding.c ****         // make a move, check if valid and is the next step in path
 209:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1364              		.loc 1 209 0
 1365 070a 0023     		movs	r3, #0
 1366 070c 07F5B452 		add	r2, r7, #5760
 1367 0710 1360     		str	r3, [r2]
 1368 0712 00E1     		b	.L39
 1369              	.L45:
 1370              		.align	2
 1371              	.L44:
 1372 0714 00000000 		.word	moves
 1373 0718 D0110000 		.word	numSteps
 1374              	.L41:
 1375              	.LBB17:
 210:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1376              		.loc 1 210 0
 1377 071c 894A     		ldr	r2, .L46
 1378 071e 07F5B453 		add	r3, r7, #5760
 1379 0722 1B68     		ldr	r3, [r3]
 1380 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1381 0728 07F5B453 		add	r3, r7, #5760
 1382 072c 03F10C03 		add	r3, r3, #12
 1383 0730 1B68     		ldr	r3, [r3]
 1384 0732 1344     		add	r3, r3, r2
 1385 0734 07F5B352 		add	r2, r7, #5728
 1386 0738 02F10402 		add	r2, r2, #4
 1387 073c 1360     		str	r3, [r2]
 211:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1388              		.loc 1 211 0
 1389 073e 814A     		ldr	r2, .L46
 1390 0740 07F5B453 		add	r3, r7, #5760
 1391 0744 1B68     		ldr	r3, [r3]
 1392 0746 DB00     		lsls	r3, r3, #3
 1393 0748 1344     		add	r3, r3, r2
 1394 074a 5A68     		ldr	r2, [r3, #4]
 1395 074c 07F5B453 		add	r3, r7, #5760
 1396 0750 03F10803 		add	r3, r3, #8
 1397 0754 1B68     		ldr	r3, [r3]
 1398 0756 1344     		add	r3, r3, r2
 1399 0758 07F5B352 		add	r2, r7, #5728
 1400 075c 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1401              		.loc 1 213 0
 1402 075e 07F11803 		add	r3, r7, #24
 1403 0762 0C3B     		subs	r3, r3, #12
 1404 0764 1B68     		ldr	r3, [r3]
 1405 0766 0093     		str	r3, [sp]
 1406 0768 1323     		movs	r3, #19
 1407 076a 0F22     		movs	r2, #15
 1408 076c 07F5B351 		add	r1, r7, #5728
 1409 0770 0968     		ldr	r1, [r1]
 1410 0772 07F5B350 		add	r0, r7, #5728
 1411 0776 00F10400 		add	r0, r0, #4
 1412 077a 0068     		ldr	r0, [r0]
 1413 077c FFF7FEFF 		bl	isValidMove
 1414 0780 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 30


 1415 0782 002B     		cmp	r3, #0
 1416 0784 00F0C080 		beq	.L40
 1417              		.loc 1 213 0 is_stmt 0 discriminator 1
 1418 0788 07F13802 		add	r2, r7, #56
 1419 078c 1C3A     		subs	r2, r2, #28
 1420 078e 07F5B353 		add	r3, r7, #5728
 1421 0792 03F10403 		add	r3, r3, #4
 1422 0796 1968     		ldr	r1, [r3]
 1423 0798 0B46     		mov	r3, r1
 1424 079a DB00     		lsls	r3, r3, #3
 1425 079c 0B44     		add	r3, r3, r1
 1426 079e 5B00     		lsls	r3, r3, #1
 1427 07a0 0B44     		add	r3, r3, r1
 1428 07a2 07F5B351 		add	r1, r7, #5728
 1429 07a6 0968     		ldr	r1, [r1]
 1430 07a8 0B44     		add	r3, r3, r1
 1431 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1432 07ae 07F5B453 		add	r3, r7, #5760
 1433 07b2 03F11003 		add	r3, r3, #16
 1434 07b6 1B68     		ldr	r3, [r3]
 1435 07b8 013B     		subs	r3, r3, #1
 1436 07ba 9A42     		cmp	r2, r3
 1437 07bc 40F0A480 		bne	.L40
 214:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1438              		.loc 1 214 0 is_stmt 1
 1439 07c0 07F5B353 		add	r3, r7, #5728
 1440 07c4 03F10403 		add	r3, r3, #4
 1441 07c8 1B68     		ldr	r3, [r3]
 1442 07ca 4C22     		movs	r2, #76
 1443 07cc 02FB03F2 		mul	r2, r2, r3
 1444 07d0 07F11803 		add	r3, r7, #24
 1445 07d4 0C3B     		subs	r3, r3, #12
 1446 07d6 1B68     		ldr	r3, [r3]
 1447 07d8 1344     		add	r3, r3, r2
 1448 07da 07F5B352 		add	r2, r7, #5728
 1449 07de 1268     		ldr	r2, [r2]
 1450 07e0 0821     		movs	r1, #8
 1451 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 215:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1452              		.loc 1 215 0
 1453 07e6 5849     		ldr	r1, .L46+4
 1454 07e8 07F5B453 		add	r3, r7, #5760
 1455 07ec 03F10403 		add	r3, r3, #4
 1456 07f0 1B68     		ldr	r3, [r3]
 1457 07f2 07F5B352 		add	r2, r7, #5728
 1458 07f6 02F10402 		add	r2, r2, #4
 1459 07fa 1268     		ldr	r2, [r2]
 1460 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 216:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1461              		.loc 1 216 0
 1462 0800 514A     		ldr	r2, .L46+4
 1463 0802 07F5B453 		add	r3, r7, #5760
 1464 0806 03F10403 		add	r3, r3, #4
 1465 080a 1B68     		ldr	r3, [r3]
 1466 080c DB00     		lsls	r3, r3, #3
 1467 080e 1344     		add	r3, r3, r2
 1468 0810 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 31


 1469 0814 1268     		ldr	r2, [r2]
 1470 0816 5A60     		str	r2, [r3, #4]
 217:pathfinding.c ****                 pathIndex++;
 1471              		.loc 1 217 0
 1472 0818 07F5B453 		add	r3, r7, #5760
 1473 081c 03F10403 		add	r3, r3, #4
 1474 0820 1B68     		ldr	r3, [r3]
 1475 0822 0133     		adds	r3, r3, #1
 1476 0824 07F5B452 		add	r2, r7, #5760
 1477 0828 02F10402 		add	r2, r2, #4
 1478 082c 1360     		str	r3, [r2]
 218:pathfinding.c ****                 // reverse array somewhere
 219:pathfinding.c **** 
 220:pathfinding.c ****                 shortestDist--; // decrement distance
 1479              		.loc 1 220 0
 1480 082e 07F5B453 		add	r3, r7, #5760
 1481 0832 03F11003 		add	r3, r3, #16
 1482 0836 1B68     		ldr	r3, [r3]
 1483 0838 013B     		subs	r3, r3, #1
 1484 083a 07F5B452 		add	r2, r7, #5760
 1485 083e 02F11002 		add	r2, r2, #16
 1486 0842 1360     		str	r3, [r2]
 221:pathfinding.c ****                 currentRow = newRow; 
 1487              		.loc 1 221 0
 1488 0844 07F5B353 		add	r3, r7, #5728
 1489 0848 03F10403 		add	r3, r3, #4
 1490 084c 1B68     		ldr	r3, [r3]
 1491 084e 07F5B452 		add	r2, r7, #5760
 1492 0852 02F10C02 		add	r2, r2, #12
 1493 0856 1360     		str	r3, [r2]
 222:pathfinding.c ****                 currentCol = newCol; // change current location
 1494              		.loc 1 222 0
 1495 0858 07F5B353 		add	r3, r7, #5728
 1496 085c 1B68     		ldr	r3, [r3]
 1497 085e 07F5B452 		add	r2, r7, #5760
 1498 0862 02F10802 		add	r2, r2, #8
 1499 0866 1360     		str	r3, [r2]
 223:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 224:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1500              		.loc 1 224 0
 1501 0868 07F5B453 		add	r3, r7, #5760
 1502 086c 03F11003 		add	r3, r3, #16
 1503 0870 1B68     		ldr	r3, [r3]
 1504 0872 DB00     		lsls	r3, r3, #3
 1505 0874 07F5B352 		add	r2, r7, #5728
 1506 0878 02F10802 		add	r2, r2, #8
 1507 087c 1268     		ldr	r2, [r2]
 1508 087e 1344     		add	r3, r3, r2
 1509 0880 07F5B452 		add	r2, r7, #5760
 1510 0884 02F10C02 		add	r2, r2, #12
 1511 0888 1268     		ldr	r2, [r2]
 1512 088a 1A60     		str	r2, [r3]
 225:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1513              		.loc 1 225 0
 1514 088c 07F5B453 		add	r3, r7, #5760
 1515 0890 03F11003 		add	r3, r3, #16
 1516 0894 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 32


 1517 0896 DB00     		lsls	r3, r3, #3
 1518 0898 07F5B352 		add	r2, r7, #5728
 1519 089c 02F10802 		add	r2, r2, #8
 1520 08a0 1268     		ldr	r2, [r2]
 1521 08a2 1344     		add	r3, r3, r2
 1522 08a4 07F5B452 		add	r2, r7, #5760
 1523 08a8 02F10802 		add	r2, r2, #8
 1524 08ac 1268     		ldr	r2, [r2]
 1525 08ae 5A60     		str	r2, [r3, #4]
 226:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1526              		.loc 1 226 0
 1527 08b0 07F11803 		add	r3, r7, #24
 1528 08b4 143B     		subs	r3, r3, #20
 1529 08b6 1A68     		ldr	r2, [r3]
 1530 08b8 07F5B453 		add	r3, r7, #5760
 1531 08bc 03F10C03 		add	r3, r3, #12
 1532 08c0 1B68     		ldr	r3, [r3]
 1533 08c2 9A42     		cmp	r2, r3
 1534 08c4 20D1     		bne	.L40
 1535              		.loc 1 226 0 is_stmt 0 discriminator 1
 1536 08c6 07F11803 		add	r3, r7, #24
 1537 08ca 143B     		subs	r3, r3, #20
 1538 08cc 5A68     		ldr	r2, [r3, #4]
 1539 08ce 07F5B453 		add	r3, r7, #5760
 1540 08d2 03F10803 		add	r3, r3, #8
 1541 08d6 1B68     		ldr	r3, [r3]
 1542 08d8 9A42     		cmp	r2, r3
 1543 08da 15D1     		bne	.L40
 227:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1544              		.loc 1 227 0 is_stmt 1
 1545 08dc 07F5B453 		add	r3, r7, #5760
 1546 08e0 03F10C03 		add	r3, r3, #12
 1547 08e4 1B68     		ldr	r3, [r3]
 1548 08e6 4C22     		movs	r2, #76
 1549 08e8 02FB03F2 		mul	r2, r2, r3
 1550 08ec 07F11803 		add	r3, r7, #24
 1551 08f0 0C3B     		subs	r3, r3, #12
 1552 08f2 1B68     		ldr	r3, [r3]
 1553 08f4 1344     		add	r3, r3, r2
 1554 08f6 07F5B452 		add	r2, r7, #5760
 1555 08fa 02F10802 		add	r2, r2, #8
 1556 08fe 1268     		ldr	r2, [r2]
 1557 0900 0221     		movs	r1, #2
 1558 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 228:pathfinding.c ****                     break;
 1559              		.loc 1 228 0
 1560 0906 0CE0     		b	.L38
 1561              	.L40:
 1562              	.LBE17:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1563              		.loc 1 209 0 discriminator 2
 1564 0908 07F5B453 		add	r3, r7, #5760
 1565 090c 1B68     		ldr	r3, [r3]
 1566 090e 0133     		adds	r3, r3, #1
 1567 0910 07F5B452 		add	r2, r7, #5760
 1568 0914 1360     		str	r3, [r2]
 1569              	.L39:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 33


 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1570              		.loc 1 209 0 is_stmt 0 discriminator 1
 1571 0916 07F5B453 		add	r3, r7, #5760
 1572 091a 1B68     		ldr	r3, [r3]
 1573 091c 032B     		cmp	r3, #3
 1574 091e 7FF6FDAE 		bls	.L41
 1575              	.L38:
 1576              	.LBE16:
 207:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1577              		.loc 1 207 0 is_stmt 1
 1578 0922 07F5B453 		add	r3, r7, #5760
 1579 0926 03F11003 		add	r3, r3, #16
 1580 092a 1B68     		ldr	r3, [r3]
 1581 092c 002B     		cmp	r3, #0
 1582 092e 3FF7ECAE 		bgt	.L42
 229:pathfinding.c ****                 }   
 230:pathfinding.c ****             }
 231:pathfinding.c ****         }
 232:pathfinding.c ****     }
 233:pathfinding.c **** }
 1583              		.loc 1 233 0
 1584 0932 00BF     		nop
 1585 0934 07F5B557 		add	r7, r7, #5792
 1586 0938 1C37     		adds	r7, r7, #28
 1587              		.cfi_def_cfa_offset 20
 1588 093a BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 093c BDE89040 		pop	{r4, r7, lr}
 1592              		.cfi_restore 14
 1593              		.cfi_restore 7
 1594              		.cfi_restore 4
 1595              		.cfi_def_cfa_offset 8
 1596 0940 02B0     		add	sp, sp, #8
 1597              		.cfi_def_cfa_offset 0
 1598 0942 7047     		bx	lr
 1599              	.L47:
 1600              		.align	2
 1601              	.L46:
 1602 0944 00000000 		.word	moves
 1603 0948 00000000 		.word	list_of_optimal_coordinates
 1604              		.cfi_endproc
 1605              	.LFE4:
 1606              		.size	dijkstra, .-dijkstra
 1607              		.global	ignoreR
 1608              		.bss
 1609              		.align	2
 1610              		.type	ignoreR, %object
 1611              		.size	ignoreR, 4
 1612              	ignoreR:
 1613 11d4 00000000 		.space	4
 1614              		.global	ignoreL
 1615              		.align	2
 1616              		.type	ignoreL, %object
 1617              		.size	ignoreL, 4
 1618              	ignoreL:
 1619 11d8 00000000 		.space	4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 34


 1620              		.section	.rodata
 1621 0003 00       		.align	2
 1622              	.LC1:
 1623 0004 53746F70 		.ascii	"Stop at target\000"
 1623      20617420 
 1623      74617267 
 1623      657400
 1624 0013 00       		.align	2
 1625              	.LC2:
 1626 0014 52696768 		.ascii	"Right Turn\000"
 1626      74205475 
 1626      726E00
 1627 001f 00       		.align	2
 1628              	.LC3:
 1629 0020 4C656674 		.ascii	"Left Turn\000"
 1629      20547572 
 1629      6E00
 1630 002a 0000     		.align	2
 1631              	.LC4:
 1632 002c 466F7277 		.ascii	"Forward until target\000"
 1632      61726420 
 1632      756E7469 
 1632      6C207461 
 1632      72676574 
 1633 0041 000000   		.align	2
 1634              	.LC5:
 1635 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1635      6172643B 
 1635      2069676E 
 1635      6F726520 
 1635      25644C2C 
 1636 0065 000000   		.align	2
 1637              	.LC6:
 1638 0068 552D7475 		.ascii	"U-turn\000"
 1638      726E00
 1639              		.section	.text.getPathInstructions,"ax",%progbits
 1640              		.align	2
 1641              		.global	getPathInstructions
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	getPathInstructions, %function
 1645              	getPathInstructions:
 1646              	.LFB5:
 234:pathfinding.c **** 
 235:pathfinding.c **** 
 236:pathfinding.c **** 
 237:pathfinding.c **** // PATHFINDING PROCESSING *====================
 238:pathfinding.c **** 
 239:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 240:pathfinding.c **** 
 241:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 242:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1647              		.loc 1 242 0
 1648              		.cfi_startproc
 1649              		@ args = 8, pretend = 0, frame = 48
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 35


 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 8CB0     		sub	sp, sp, #48
 1656              		.cfi_def_cfa_offset 56
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 F860     		str	r0, [r7, #12]
 1660 0008 B960     		str	r1, [r7, #8]
 1661 000a 3946     		mov	r1, r7
 1662 000c 81E80C00 		stmia	r1, {r2, r3}
 243:pathfinding.c ****     int currentRow = startLocation.row; 
 1663              		.loc 1 243 0
 1664 0010 3B68     		ldr	r3, [r7]
 1665 0012 FB62     		str	r3, [r7, #44]
 244:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1666              		.loc 1 244 0
 1667 0014 7B68     		ldr	r3, [r7, #4]
 1668 0016 BB62     		str	r3, [r7, #40]
 245:pathfinding.c ****     int listIndex = 0;
 1669              		.loc 1 245 0
 1670 0018 0023     		movs	r3, #0
 1671 001a 7B62     		str	r3, [r7, #36]
 246:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1672              		.loc 1 246 0
 1673 001c BB6B     		ldr	r3, [r7, #56]
 1674 001e FA6B     		ldr	r2, [r7, #60]
 1675 0020 1146     		mov	r1, r2
 1676 0022 1846     		mov	r0, r3
 1677 0024 FFF7FEFF 		bl	getTargetOrientation
 1678 0028 0346     		mov	r3, r0
 1679 002a 7B61     		str	r3, [r7, #20]
 247:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 248:pathfinding.c ****     while(numSteps >= 0) {
 1680              		.loc 1 248 0
 1681 002c C4E1     		b	.L49
 1682              	.L78:
 1683              	.LBB18:
 249:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1684              		.loc 1 249 0
 1685 002e 9A4B     		ldr	r3, .L83
 1686 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1687 0032 BA6A     		ldr	r2, [r7, #40]
 1688 0034 F96A     		ldr	r1, [r7, #44]
 1689 0036 1846     		mov	r0, r3
 1690 0038 FFF7FEFF 		bl	checkIgnoreTurn
 250:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1691              		.loc 1 250 0
 1692 003c FB6A     		ldr	r3, [r7, #44]
 1693 003e 4C22     		movs	r2, #76
 1694 0040 02FB03F3 		mul	r3, r2, r3
 1695 0044 FA68     		ldr	r2, [r7, #12]
 1696 0046 1344     		add	r3, r3, r2
 1697 0048 BA6A     		ldr	r2, [r7, #40]
 1698 004a 0021     		movs	r1, #0
 1699 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 36


 1700              		.loc 1 251 0
 1701 0050 914B     		ldr	r3, .L83
 1702 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1703 0054 914B     		ldr	r3, .L83+4
 1704 0056 1A70     		strb	r2, [r3]
 252:pathfinding.c ****         enum InstructionDirection newDirection;
 253:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1705              		.loc 1 253 0
 1706 0058 B96A     		ldr	r1, [r7, #40]
 1707 005a F86A     		ldr	r0, [r7, #44]
 1708 005c FFF7FEFF 		bl	checkPathDirection
 1709 0060 0346     		mov	r3, r0
 1710 0062 FB61     		str	r3, [r7, #28]
 254:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1711              		.loc 1 254 0
 1712 0064 BA6B     		ldr	r2, [r7, #56]
 1713 0066 FB6A     		ldr	r3, [r7, #44]
 1714 0068 9A42     		cmp	r2, r3
 1715 006a 0BD1     		bne	.L50
 1716              		.loc 1 254 0 is_stmt 0 discriminator 1
 1717 006c FA6B     		ldr	r2, [r7, #60]
 1718 006e BB6A     		ldr	r3, [r7, #40]
 1719 0070 9A42     		cmp	r2, r3
 1720 0072 07D1     		bne	.L50
 255:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1721              		.loc 1 255 0 is_stmt 1
 1722 0074 0523     		movs	r3, #5
 1723 0076 87F82330 		strb	r3, [r7, #35]
 256:pathfinding.c ****             printf("Stop at target\n");
 1724              		.loc 1 256 0
 1725 007a 8948     		ldr	r0, .L83+8
 1726 007c FFF7FEFF 		bl	puts
 257:pathfinding.c ****             nextStep = 5;
 1727              		.loc 1 257 0
 1728 0080 0523     		movs	r3, #5
 1729 0082 FB61     		str	r3, [r7, #28]
 1730              	.L50:
 258:pathfinding.c ****         }
 259:pathfinding.c ****         switch (nextStep) {
 1731              		.loc 1 259 0
 1732 0084 FB69     		ldr	r3, [r7, #28]
 1733 0086 032B     		cmp	r3, #3
 1734 0088 00F26F81 		bhi	.L82
 1735 008c 01A2     		adr	r2, .L53
 1736 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1737 0092 00BF     		.p2align 2
 1738              	.L53:
 1739 0094 A5000000 		.word	.L52+1
 1740 0098 43010000 		.word	.L54+1
 1741 009c ED010000 		.word	.L55+1
 1742 00a0 C1020000 		.word	.L56+1
 1743              		.p2align 1
 1744              	.L52:
 260:pathfinding.c ****             case 0: // next step is up
 261:pathfinding.c ****                 currentRobotOrientation = Up;
 1745              		.loc 1 261 0
 1746 00a4 7C4B     		ldr	r3, .L83
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 37


 1747 00a6 0022     		movs	r2, #0
 1748 00a8 1A70     		strb	r2, [r3]
 262:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1749              		.loc 1 262 0
 1750 00aa 7C4B     		ldr	r3, .L83+4
 1751 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 00ae 022B     		cmp	r3, #2
 1753 00b0 0BD1     		bne	.L57
 263:pathfinding.c ****                     newDirection = waitForRightTurn;
 1754              		.loc 1 263 0
 1755 00b2 0223     		movs	r3, #2
 1756 00b4 87F82330 		strb	r3, [r7, #35]
 264:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1757              		.loc 1 264 0
 1758 00b8 7A48     		ldr	r0, .L83+12
 1759 00ba FFF7FEFF 		bl	puts
 265:pathfinding.c ****                     ignoreL = 0;
 1760              		.loc 1 265 0
 1761 00be 7A4B     		ldr	r3, .L83+16
 1762 00c0 0022     		movs	r2, #0
 1763 00c2 1A60     		str	r2, [r3]
 266:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1764              		.loc 1 266 0
 1765 00c4 794B     		ldr	r3, .L83+20
 1766 00c6 0022     		movs	r2, #0
 1767 00c8 1A60     		str	r2, [r3]
 1768              	.L57:
 267:pathfinding.c ****                 } 
 268:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1769              		.loc 1 268 0
 1770 00ca 744B     		ldr	r3, .L83+4
 1771 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1772 00ce 032B     		cmp	r3, #3
 1773 00d0 0BD1     		bne	.L58
 269:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1774              		.loc 1 269 0
 1775 00d2 0123     		movs	r3, #1
 1776 00d4 87F82330 		strb	r3, [r7, #35]
 270:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1777              		.loc 1 270 0
 1778 00d8 7548     		ldr	r0, .L83+24
 1779 00da FFF7FEFF 		bl	puts
 271:pathfinding.c ****                     ignoreL = 0;
 1780              		.loc 1 271 0
 1781 00de 724B     		ldr	r3, .L83+16
 1782 00e0 0022     		movs	r2, #0
 1783 00e2 1A60     		str	r2, [r3]
 272:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1784              		.loc 1 272 0
 1785 00e4 714B     		ldr	r3, .L83+20
 1786 00e6 0022     		movs	r2, #0
 1787 00e8 1A60     		str	r2, [r3]
 1788              	.L58:
 273:pathfinding.c ****                 }
 274:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1789              		.loc 1 274 0
 1790 00ea 6C4B     		ldr	r3, .L83+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 38


 1791 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1792 00ee 002B     		cmp	r3, #0
 1793 00f0 19D1     		bne	.L59
 275:pathfinding.c ****                     // check if we only need to go forward to reach target
 276:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1794              		.loc 1 276 0
 1795 00f2 7A69     		ldr	r2, [r7, #20]
 1796 00f4 FB69     		ldr	r3, [r7, #28]
 1797 00f6 9A42     		cmp	r2, r3
 1798 00f8 0AD1     		bne	.L60
 1799              		.loc 1 276 0 is_stmt 0 discriminator 1
 1800 00fa FA6B     		ldr	r2, [r7, #60]
 1801 00fc BB6A     		ldr	r3, [r7, #40]
 1802 00fe 9A42     		cmp	r2, r3
 1803 0100 06D1     		bne	.L60
 277:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1804              		.loc 1 277 0 is_stmt 1
 1805 0102 0423     		movs	r3, #4
 1806 0104 87F82330 		strb	r3, [r7, #35]
 278:pathfinding.c ****                         printf("Forward until target\n"); // THIS WILL HAVE AN EDGE CASE
 1807              		.loc 1 278 0
 1808 0108 6A48     		ldr	r0, .L83+28
 1809 010a FFF7FEFF 		bl	puts
 1810 010e 0AE0     		b	.L59
 1811              	.L60:
 279:pathfinding.c ****                     } else {
 280:pathfinding.c ****                         newDirection = GoForward;
 1812              		.loc 1 280 0
 1813 0110 0023     		movs	r3, #0
 1814 0112 87F82330 		strb	r3, [r7, #35]
 281:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1815              		.loc 1 281 0
 1816 0116 644B     		ldr	r3, .L83+16
 1817 0118 1968     		ldr	r1, [r3]
 1818 011a 644B     		ldr	r3, .L83+20
 1819 011c 1B68     		ldr	r3, [r3]
 1820 011e 1A46     		mov	r2, r3
 1821 0120 6548     		ldr	r0, .L83+32
 1822 0122 FFF7FEFF 		bl	printf
 1823              	.L59:
 282:pathfinding.c ****                     }
 283:pathfinding.c ****                 }
 284:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1824              		.loc 1 284 0
 1825 0126 5D4B     		ldr	r3, .L83+4
 1826 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 012a 012B     		cmp	r3, #1
 1828 012c 05D1     		bne	.L61
 285:pathfinding.c ****                     newDirection = uTurn;
 1829              		.loc 1 285 0
 1830 012e 0323     		movs	r3, #3
 1831 0130 87F82330 		strb	r3, [r7, #35]
 286:pathfinding.c ****                     printf("U-turn\n");
 1832              		.loc 1 286 0
 1833 0134 6148     		ldr	r0, .L83+36
 1834 0136 FFF7FEFF 		bl	puts
 1835              	.L61:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 39


 287:pathfinding.c ****                 }
 288:pathfinding.c ****                 currentRow--; // jump to new location
 1836              		.loc 1 288 0
 1837 013a FB6A     		ldr	r3, [r7, #44]
 1838 013c 013B     		subs	r3, r3, #1
 1839 013e FB62     		str	r3, [r7, #44]
 289:pathfinding.c ****                 break;
 1840              		.loc 1 289 0
 1841 0140 14E1     		b	.L62
 1842              	.L54:
 290:pathfinding.c ****             case 1: // next step is down
 291:pathfinding.c ****                 currentRobotOrientation = Down;
 1843              		.loc 1 291 0
 1844 0142 554B     		ldr	r3, .L83
 1845 0144 0122     		movs	r2, #1
 1846 0146 1A70     		strb	r2, [r3]
 292:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1847              		.loc 1 292 0
 1848 0148 544B     		ldr	r3, .L83+4
 1849 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 014c 032B     		cmp	r3, #3
 1851 014e 0BD1     		bne	.L63
 293:pathfinding.c ****                     newDirection = waitForRightTurn;
 1852              		.loc 1 293 0
 1853 0150 0223     		movs	r3, #2
 1854 0152 87F82330 		strb	r3, [r7, #35]
 294:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1855              		.loc 1 294 0
 1856 0156 5348     		ldr	r0, .L83+12
 1857 0158 FFF7FEFF 		bl	puts
 295:pathfinding.c ****                     ignoreL = 0;
 1858              		.loc 1 295 0
 1859 015c 524B     		ldr	r3, .L83+16
 1860 015e 0022     		movs	r2, #0
 1861 0160 1A60     		str	r2, [r3]
 296:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1862              		.loc 1 296 0
 1863 0162 524B     		ldr	r3, .L83+20
 1864 0164 0022     		movs	r2, #0
 1865 0166 1A60     		str	r2, [r3]
 1866              	.L63:
 297:pathfinding.c ****                 } 
 298:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1867              		.loc 1 298 0
 1868 0168 4C4B     		ldr	r3, .L83+4
 1869 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1870 016c 022B     		cmp	r3, #2
 1871 016e 0BD1     		bne	.L64
 299:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1872              		.loc 1 299 0
 1873 0170 0123     		movs	r3, #1
 1874 0172 87F82330 		strb	r3, [r7, #35]
 300:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1875              		.loc 1 300 0
 1876 0176 4E48     		ldr	r0, .L83+24
 1877 0178 FFF7FEFF 		bl	puts
 301:pathfinding.c ****                     ignoreL = 0;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 40


 1878              		.loc 1 301 0
 1879 017c 4A4B     		ldr	r3, .L83+16
 1880 017e 0022     		movs	r2, #0
 1881 0180 1A60     		str	r2, [r3]
 302:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1882              		.loc 1 302 0
 1883 0182 4A4B     		ldr	r3, .L83+20
 1884 0184 0022     		movs	r2, #0
 1885 0186 1A60     		str	r2, [r3]
 1886              	.L64:
 303:pathfinding.c ****                 }
 304:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1887              		.loc 1 304 0
 1888 0188 444B     		ldr	r3, .L83+4
 1889 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1890 018c 012B     		cmp	r3, #1
 1891 018e 19D1     		bne	.L65
 305:pathfinding.c ****                     // check if we only need to go forward to reach target
 306:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 1892              		.loc 1 306 0
 1893 0190 7A69     		ldr	r2, [r7, #20]
 1894 0192 FB69     		ldr	r3, [r7, #28]
 1895 0194 9A42     		cmp	r2, r3
 1896 0196 0AD1     		bne	.L66
 1897              		.loc 1 306 0 is_stmt 0 discriminator 1
 1898 0198 FA6B     		ldr	r2, [r7, #60]
 1899 019a BB6A     		ldr	r3, [r7, #40]
 1900 019c 9A42     		cmp	r2, r3
 1901 019e 06D1     		bne	.L66
 307:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 1902              		.loc 1 307 0 is_stmt 1
 1903 01a0 0423     		movs	r3, #4
 1904 01a2 87F82330 		strb	r3, [r7, #35]
 308:pathfinding.c ****                         printf("Forward until target\n");
 1905              		.loc 1 308 0
 1906 01a6 4348     		ldr	r0, .L83+28
 1907 01a8 FFF7FEFF 		bl	puts
 1908 01ac 0AE0     		b	.L65
 1909              	.L66:
 309:pathfinding.c ****                     } else {
 310:pathfinding.c ****                         newDirection = GoForward;
 1910              		.loc 1 310 0
 1911 01ae 0023     		movs	r3, #0
 1912 01b0 87F82330 		strb	r3, [r7, #35]
 311:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1913              		.loc 1 311 0
 1914 01b4 3C4B     		ldr	r3, .L83+16
 1915 01b6 1968     		ldr	r1, [r3]
 1916 01b8 3C4B     		ldr	r3, .L83+20
 1917 01ba 1B68     		ldr	r3, [r3]
 1918 01bc 1A46     		mov	r2, r3
 1919 01be 3E48     		ldr	r0, .L83+32
 1920 01c0 FFF7FEFF 		bl	printf
 1921              	.L65:
 312:pathfinding.c ****                     }                    
 313:pathfinding.c ****                 }
 314:pathfinding.c ****                 if(previousRobotOrientation == Up) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 41


 1922              		.loc 1 314 0
 1923 01c4 354B     		ldr	r3, .L83+4
 1924 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1925 01c8 002B     		cmp	r3, #0
 1926 01ca 0BD1     		bne	.L67
 315:pathfinding.c ****                     newDirection = uTurn;
 1927              		.loc 1 315 0
 1928 01cc 0323     		movs	r3, #3
 1929 01ce 87F82330 		strb	r3, [r7, #35]
 316:pathfinding.c ****                     ignoreL = 0;
 1930              		.loc 1 316 0
 1931 01d2 354B     		ldr	r3, .L83+16
 1932 01d4 0022     		movs	r2, #0
 1933 01d6 1A60     		str	r2, [r3]
 317:pathfinding.c ****                     ignoreR = 0;
 1934              		.loc 1 317 0
 1935 01d8 344B     		ldr	r3, .L83+20
 1936 01da 0022     		movs	r2, #0
 1937 01dc 1A60     		str	r2, [r3]
 318:pathfinding.c ****                     printf("U-turn\n");
 1938              		.loc 1 318 0
 1939 01de 3748     		ldr	r0, .L83+36
 1940 01e0 FFF7FEFF 		bl	puts
 1941              	.L67:
 319:pathfinding.c ****                 }
 320:pathfinding.c ****                 currentRow++;
 1942              		.loc 1 320 0
 1943 01e4 FB6A     		ldr	r3, [r7, #44]
 1944 01e6 0133     		adds	r3, r3, #1
 1945 01e8 FB62     		str	r3, [r7, #44]
 321:pathfinding.c ****                 break;
 1946              		.loc 1 321 0
 1947 01ea BFE0     		b	.L62
 1948              	.L55:
 322:pathfinding.c ****             case 2: // next step is left
 323:pathfinding.c ****                 currentRobotOrientation = Left;
 1949              		.loc 1 323 0
 1950 01ec 2A4B     		ldr	r3, .L83
 1951 01ee 0222     		movs	r2, #2
 1952 01f0 1A70     		strb	r2, [r3]
 324:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1953              		.loc 1 324 0
 1954 01f2 2A4B     		ldr	r3, .L83+4
 1955 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 01f6 002B     		cmp	r3, #0
 1957 01f8 0BD1     		bne	.L68
 325:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1958              		.loc 1 325 0
 1959 01fa 0123     		movs	r3, #1
 1960 01fc 87F82330 		strb	r3, [r7, #35]
 326:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 1961              		.loc 1 326 0
 1962 0200 2B48     		ldr	r0, .L83+24
 1963 0202 FFF7FEFF 		bl	puts
 327:pathfinding.c ****                     ignoreL = 0;
 1964              		.loc 1 327 0
 1965 0206 284B     		ldr	r3, .L83+16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 42


 1966 0208 0022     		movs	r2, #0
 1967 020a 1A60     		str	r2, [r3]
 328:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1968              		.loc 1 328 0
 1969 020c 274B     		ldr	r3, .L83+20
 1970 020e 0022     		movs	r2, #0
 1971 0210 1A60     		str	r2, [r3]
 1972              	.L68:
 329:pathfinding.c ****                 } 
 330:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1973              		.loc 1 330 0
 1974 0212 224B     		ldr	r3, .L83+4
 1975 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1976 0216 012B     		cmp	r3, #1
 1977 0218 0BD1     		bne	.L69
 331:pathfinding.c ****                     newDirection = waitForRightTurn;
 1978              		.loc 1 331 0
 1979 021a 0223     		movs	r3, #2
 1980 021c 87F82330 		strb	r3, [r7, #35]
 332:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 1981              		.loc 1 332 0
 1982 0220 2048     		ldr	r0, .L83+12
 1983 0222 FFF7FEFF 		bl	puts
 333:pathfinding.c ****                     ignoreL = 0;
 1984              		.loc 1 333 0
 1985 0226 204B     		ldr	r3, .L83+16
 1986 0228 0022     		movs	r2, #0
 1987 022a 1A60     		str	r2, [r3]
 334:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1988              		.loc 1 334 0
 1989 022c 1F4B     		ldr	r3, .L83+20
 1990 022e 0022     		movs	r2, #0
 1991 0230 1A60     		str	r2, [r3]
 1992              	.L69:
 335:pathfinding.c ****                 }
 336:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1993              		.loc 1 336 0
 1994 0232 1A4B     		ldr	r3, .L83+4
 1995 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 0236 022B     		cmp	r3, #2
 1997 0238 19D1     		bne	.L70
 337:pathfinding.c ****                     // check if we only need to go forward to reach target
 338:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1998              		.loc 1 338 0
 1999 023a 7A69     		ldr	r2, [r7, #20]
 2000 023c FB69     		ldr	r3, [r7, #28]
 2001 023e 9A42     		cmp	r2, r3
 2002 0240 0AD1     		bne	.L71
 2003              		.loc 1 338 0 is_stmt 0 discriminator 1
 2004 0242 BA6B     		ldr	r2, [r7, #56]
 2005 0244 FB6A     		ldr	r3, [r7, #44]
 2006 0246 9A42     		cmp	r2, r3
 2007 0248 06D1     		bne	.L71
 339:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2008              		.loc 1 339 0 is_stmt 1
 2009 024a 0423     		movs	r3, #4
 2010 024c 87F82330 		strb	r3, [r7, #35]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 43


 340:pathfinding.c ****                         printf("Forward until target\n");
 2011              		.loc 1 340 0
 2012 0250 1848     		ldr	r0, .L83+28
 2013 0252 FFF7FEFF 		bl	puts
 2014 0256 0AE0     		b	.L70
 2015              	.L71:
 341:pathfinding.c ****                     } else {
 342:pathfinding.c ****                         newDirection = GoForward;
 2016              		.loc 1 342 0
 2017 0258 0023     		movs	r3, #0
 2018 025a 87F82330 		strb	r3, [r7, #35]
 343:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2019              		.loc 1 343 0
 2020 025e 124B     		ldr	r3, .L83+16
 2021 0260 1968     		ldr	r1, [r3]
 2022 0262 124B     		ldr	r3, .L83+20
 2023 0264 1B68     		ldr	r3, [r3]
 2024 0266 1A46     		mov	r2, r3
 2025 0268 1348     		ldr	r0, .L83+32
 2026 026a FFF7FEFF 		bl	printf
 2027              	.L70:
 344:pathfinding.c ****                     }
 345:pathfinding.c ****                 }
 346:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2028              		.loc 1 346 0
 2029 026e 0B4B     		ldr	r3, .L83+4
 2030 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2031 0272 032B     		cmp	r3, #3
 2032 0274 0BD1     		bne	.L72
 347:pathfinding.c ****                     newDirection = uTurn;
 2033              		.loc 1 347 0
 2034 0276 0323     		movs	r3, #3
 2035 0278 87F82330 		strb	r3, [r7, #35]
 348:pathfinding.c ****                     ignoreL = 0;
 2036              		.loc 1 348 0
 2037 027c 0A4B     		ldr	r3, .L83+16
 2038 027e 0022     		movs	r2, #0
 2039 0280 1A60     		str	r2, [r3]
 349:pathfinding.c ****                     ignoreR = 0;
 2040              		.loc 1 349 0
 2041 0282 0A4B     		ldr	r3, .L83+20
 2042 0284 0022     		movs	r2, #0
 2043 0286 1A60     		str	r2, [r3]
 350:pathfinding.c ****                     printf("U-turn\n");
 2044              		.loc 1 350 0
 2045 0288 0C48     		ldr	r0, .L83+36
 2046 028a FFF7FEFF 		bl	puts
 2047              	.L72:
 351:pathfinding.c ****                 }
 352:pathfinding.c ****                 currentCol--;
 2048              		.loc 1 352 0
 2049 028e BB6A     		ldr	r3, [r7, #40]
 2050 0290 013B     		subs	r3, r3, #1
 2051 0292 BB62     		str	r3, [r7, #40]
 353:pathfinding.c ****                 break;
 2052              		.loc 1 353 0
 2053 0294 6AE0     		b	.L62
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 44


 2054              	.L84:
 2055 0296 00BF     		.align	2
 2056              	.L83:
 2057 0298 00000000 		.word	currentRobotOrientation
 2058 029c 00000000 		.word	previousRobotOrientation
 2059 02a0 04000000 		.word	.LC1
 2060 02a4 14000000 		.word	.LC2
 2061 02a8 00000000 		.word	ignoreL
 2062 02ac 00000000 		.word	ignoreR
 2063 02b0 20000000 		.word	.LC3
 2064 02b4 2C000000 		.word	.LC4
 2065 02b8 44000000 		.word	.LC5
 2066 02bc 68000000 		.word	.LC6
 2067              	.L56:
 354:pathfinding.c ****             case 3: // next step is right
 355:pathfinding.c ****                 currentRobotOrientation = Right;
 2068              		.loc 1 355 0
 2069 02c0 574B     		ldr	r3, .L85
 2070 02c2 0322     		movs	r2, #3
 2071 02c4 1A70     		strb	r2, [r3]
 356:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2072              		.loc 1 356 0
 2073 02c6 574B     		ldr	r3, .L85+4
 2074 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2075 02ca 002B     		cmp	r3, #0
 2076 02cc 0BD1     		bne	.L73
 357:pathfinding.c ****                     newDirection = waitForRightTurn;
 2077              		.loc 1 357 0
 2078 02ce 0223     		movs	r3, #2
 2079 02d0 87F82330 		strb	r3, [r7, #35]
 358:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2080              		.loc 1 358 0
 2081 02d4 5448     		ldr	r0, .L85+8
 2082 02d6 FFF7FEFF 		bl	puts
 359:pathfinding.c ****                     ignoreL = 0;
 2083              		.loc 1 359 0
 2084 02da 544B     		ldr	r3, .L85+12
 2085 02dc 0022     		movs	r2, #0
 2086 02de 1A60     		str	r2, [r3]
 360:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2087              		.loc 1 360 0
 2088 02e0 534B     		ldr	r3, .L85+16
 2089 02e2 0022     		movs	r2, #0
 2090 02e4 1A60     		str	r2, [r3]
 2091              	.L73:
 361:pathfinding.c ****                 }
 362:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2092              		.loc 1 362 0
 2093 02e6 4F4B     		ldr	r3, .L85+4
 2094 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2095 02ea 012B     		cmp	r3, #1
 2096 02ec 0BD1     		bne	.L74
 363:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2097              		.loc 1 363 0
 2098 02ee 0123     		movs	r3, #1
 2099 02f0 87F82330 		strb	r3, [r7, #35]
 364:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 45


 2100              		.loc 1 364 0
 2101 02f4 4F48     		ldr	r0, .L85+20
 2102 02f6 FFF7FEFF 		bl	puts
 365:pathfinding.c ****                     ignoreL = 0;
 2103              		.loc 1 365 0
 2104 02fa 4C4B     		ldr	r3, .L85+12
 2105 02fc 0022     		movs	r2, #0
 2106 02fe 1A60     		str	r2, [r3]
 366:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2107              		.loc 1 366 0
 2108 0300 4B4B     		ldr	r3, .L85+16
 2109 0302 0022     		movs	r2, #0
 2110 0304 1A60     		str	r2, [r3]
 2111              	.L74:
 367:pathfinding.c ****                 }
 368:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2112              		.loc 1 368 0
 2113 0306 474B     		ldr	r3, .L85+4
 2114 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2115 030a 032B     		cmp	r3, #3
 2116 030c 19D1     		bne	.L75
 369:pathfinding.c ****                     // check if we only need to go forward to reach target
 370:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 2117              		.loc 1 370 0
 2118 030e 7A69     		ldr	r2, [r7, #20]
 2119 0310 FB69     		ldr	r3, [r7, #28]
 2120 0312 9A42     		cmp	r2, r3
 2121 0314 0AD1     		bne	.L76
 2122              		.loc 1 370 0 is_stmt 0 discriminator 1
 2123 0316 BA6B     		ldr	r2, [r7, #56]
 2124 0318 FB6A     		ldr	r3, [r7, #44]
 2125 031a 9A42     		cmp	r2, r3
 2126 031c 06D1     		bne	.L76
 371:pathfinding.c ****                         newDirection = ForwardUntilTarget;
 2127              		.loc 1 371 0 is_stmt 1
 2128 031e 0423     		movs	r3, #4
 2129 0320 87F82330 		strb	r3, [r7, #35]
 372:pathfinding.c ****                         printf("Forward until target\n");
 2130              		.loc 1 372 0
 2131 0324 4448     		ldr	r0, .L85+24
 2132 0326 FFF7FEFF 		bl	puts
 2133 032a 0AE0     		b	.L75
 2134              	.L76:
 373:pathfinding.c ****                     } else {
 374:pathfinding.c ****                         newDirection = GoForward;
 2135              		.loc 1 374 0
 2136 032c 0023     		movs	r3, #0
 2137 032e 87F82330 		strb	r3, [r7, #35]
 375:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2138              		.loc 1 375 0
 2139 0332 3E4B     		ldr	r3, .L85+12
 2140 0334 1968     		ldr	r1, [r3]
 2141 0336 3E4B     		ldr	r3, .L85+16
 2142 0338 1B68     		ldr	r3, [r3]
 2143 033a 1A46     		mov	r2, r3
 2144 033c 3F48     		ldr	r0, .L85+28
 2145 033e FFF7FEFF 		bl	printf
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 46


 2146              	.L75:
 376:pathfinding.c ****                     }
 377:pathfinding.c ****                 }
 378:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2147              		.loc 1 378 0
 2148 0342 384B     		ldr	r3, .L85+4
 2149 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2150 0346 022B     		cmp	r3, #2
 2151 0348 0BD1     		bne	.L77
 379:pathfinding.c ****                     newDirection = uTurn;
 2152              		.loc 1 379 0
 2153 034a 0323     		movs	r3, #3
 2154 034c 87F82330 		strb	r3, [r7, #35]
 380:pathfinding.c ****                     ignoreL = 0;
 2155              		.loc 1 380 0
 2156 0350 364B     		ldr	r3, .L85+12
 2157 0352 0022     		movs	r2, #0
 2158 0354 1A60     		str	r2, [r3]
 381:pathfinding.c ****                     ignoreR = 0;
 2159              		.loc 1 381 0
 2160 0356 364B     		ldr	r3, .L85+16
 2161 0358 0022     		movs	r2, #0
 2162 035a 1A60     		str	r2, [r3]
 382:pathfinding.c ****                     printf("U-turn\n");
 2163              		.loc 1 382 0
 2164 035c 3848     		ldr	r0, .L85+32
 2165 035e FFF7FEFF 		bl	puts
 2166              	.L77:
 383:pathfinding.c ****                 }
 384:pathfinding.c ****                 currentCol++;
 2167              		.loc 1 384 0
 2168 0362 BB6A     		ldr	r3, [r7, #40]
 2169 0364 0133     		adds	r3, r3, #1
 2170 0366 BB62     		str	r3, [r7, #40]
 385:pathfinding.c ****                 break;
 2171              		.loc 1 385 0
 2172 0368 00E0     		b	.L62
 2173              	.L82:
 386:pathfinding.c ****             default:
 387:pathfinding.c ****                 break;
 2174              		.loc 1 387 0
 2175 036a 00BF     		nop
 2176              	.L62:
 388:pathfinding.c ****         }
 389:pathfinding.c ****         
 390:pathfinding.c ****         // add new direction to list
 391:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2177              		.loc 1 391 0
 2178 036c 354A     		ldr	r2, .L85+36
 2179 036e 7B6A     		ldr	r3, [r7, #36]
 2180 0370 1B01     		lsls	r3, r3, #4
 2181 0372 1344     		add	r3, r3, r2
 2182 0374 97F82320 		ldrb	r2, [r7, #35]
 2183 0378 1A70     		strb	r2, [r3]
 392:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2184              		.loc 1 392 0
 2185 037a 2C4B     		ldr	r3, .L85+12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 47


 2186 037c 1A68     		ldr	r2, [r3]
 2187 037e 3149     		ldr	r1, .L85+36
 2188 0380 7B6A     		ldr	r3, [r7, #36]
 2189 0382 1B01     		lsls	r3, r3, #4
 2190 0384 0B44     		add	r3, r3, r1
 2191 0386 0433     		adds	r3, r3, #4
 2192 0388 1A60     		str	r2, [r3]
 393:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2193              		.loc 1 393 0
 2194 038a 294B     		ldr	r3, .L85+16
 2195 038c 1A68     		ldr	r2, [r3]
 2196 038e 2D49     		ldr	r1, .L85+36
 2197 0390 7B6A     		ldr	r3, [r7, #36]
 2198 0392 1B01     		lsls	r3, r3, #4
 2199 0394 0B44     		add	r3, r3, r1
 2200 0396 0833     		adds	r3, r3, #8
 2201 0398 1A60     		str	r2, [r3]
 394:pathfinding.c ****         instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 2202              		.loc 1 394 0
 2203 039a 224B     		ldr	r3, .L85+4
 2204 039c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2205 039e 294A     		ldr	r2, .L85+36
 2206 03a0 7B6A     		ldr	r3, [r7, #36]
 2207 03a2 1B01     		lsls	r3, r3, #4
 2208 03a4 1344     		add	r3, r3, r2
 2209 03a6 0C33     		adds	r3, r3, #12
 2210 03a8 0A46     		mov	r2, r1
 2211 03aa 1A70     		strb	r2, [r3]
 395:pathfinding.c ****         listIndex++; // increment instruction list index
 2212              		.loc 1 395 0
 2213 03ac 7B6A     		ldr	r3, [r7, #36]
 2214 03ae 0133     		adds	r3, r3, #1
 2215 03b0 7B62     		str	r3, [r7, #36]
 396:pathfinding.c ****         numSteps--; // decrement numSteps
 2216              		.loc 1 396 0
 2217 03b2 BB68     		ldr	r3, [r7, #8]
 2218 03b4 013B     		subs	r3, r3, #1
 2219 03b6 BB60     		str	r3, [r7, #8]
 2220              	.L49:
 2221              	.LBE18:
 248:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2222              		.loc 1 248 0
 2223 03b8 BB68     		ldr	r3, [r7, #8]
 2224 03ba 002B     		cmp	r3, #0
 2225 03bc BFF637AE 		bge	.L78
 2226              	.LBB19:
 397:pathfinding.c ****     }
 398:pathfinding.c ****     // process list, remove repeated forward outputs
 399:pathfinding.c ****     for(int i = 0; i < listIndex-1; i ++) {
 2227              		.loc 1 399 0
 2228 03c0 0023     		movs	r3, #0
 2229 03c2 BB61     		str	r3, [r7, #24]
 2230 03c4 23E0     		b	.L79
 2231              	.L81:
 400:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2232              		.loc 1 400 0
 2233 03c6 1F4A     		ldr	r2, .L85+36
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 48


 2234 03c8 BB69     		ldr	r3, [r7, #24]
 2235 03ca 1B01     		lsls	r3, r3, #4
 2236 03cc 1344     		add	r3, r3, r2
 2237 03ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2238 03d0 BB69     		ldr	r3, [r7, #24]
 2239 03d2 0133     		adds	r3, r3, #1
 2240 03d4 1B49     		ldr	r1, .L85+36
 2241 03d6 1B01     		lsls	r3, r3, #4
 2242 03d8 0B44     		add	r3, r3, r1
 2243 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2244 03dc 9A42     		cmp	r2, r3
 2245 03de 13D1     		bne	.L80
 401:pathfinding.c ****             instructionsList[i].direction = Skip;
 2246              		.loc 1 401 0
 2247 03e0 184A     		ldr	r2, .L85+36
 2248 03e2 BB69     		ldr	r3, [r7, #24]
 2249 03e4 1B01     		lsls	r3, r3, #4
 2250 03e6 1344     		add	r3, r3, r2
 2251 03e8 0622     		movs	r2, #6
 2252 03ea 1A70     		strb	r2, [r3]
 402:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2253              		.loc 1 402 0
 2254 03ec 154A     		ldr	r2, .L85+36
 2255 03ee BB69     		ldr	r3, [r7, #24]
 2256 03f0 1B01     		lsls	r3, r3, #4
 2257 03f2 1344     		add	r3, r3, r2
 2258 03f4 0433     		adds	r3, r3, #4
 2259 03f6 0022     		movs	r2, #0
 2260 03f8 1A60     		str	r2, [r3]
 403:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2261              		.loc 1 403 0
 2262 03fa 124A     		ldr	r2, .L85+36
 2263 03fc BB69     		ldr	r3, [r7, #24]
 2264 03fe 1B01     		lsls	r3, r3, #4
 2265 0400 1344     		add	r3, r3, r2
 2266 0402 0833     		adds	r3, r3, #8
 2267 0404 0022     		movs	r2, #0
 2268 0406 1A60     		str	r2, [r3]
 2269              	.L80:
 399:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2270              		.loc 1 399 0 discriminator 2
 2271 0408 BB69     		ldr	r3, [r7, #24]
 2272 040a 0133     		adds	r3, r3, #1
 2273 040c BB61     		str	r3, [r7, #24]
 2274              	.L79:
 399:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2275              		.loc 1 399 0 is_stmt 0 discriminator 1
 2276 040e 7B6A     		ldr	r3, [r7, #36]
 2277 0410 5A1E     		subs	r2, r3, #1
 2278 0412 BB69     		ldr	r3, [r7, #24]
 2279 0414 9A42     		cmp	r2, r3
 2280 0416 D6DC     		bgt	.L81
 2281              	.LBE19:
 404:pathfinding.c ****         }
 405:pathfinding.c ****     }
 406:pathfinding.c **** }
 2282              		.loc 1 406 0 is_stmt 1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 49


 2283 0418 00BF     		nop
 2284 041a 3037     		adds	r7, r7, #48
 2285              		.cfi_def_cfa_offset 8
 2286 041c BD46     		mov	sp, r7
 2287              		.cfi_def_cfa_register 13
 2288              		@ sp needed
 2289 041e 80BD     		pop	{r7, pc}
 2290              	.L86:
 2291              		.align	2
 2292              	.L85:
 2293 0420 00000000 		.word	currentRobotOrientation
 2294 0424 00000000 		.word	previousRobotOrientation
 2295 0428 14000000 		.word	.LC2
 2296 042c 00000000 		.word	ignoreL
 2297 0430 00000000 		.word	ignoreR
 2298 0434 20000000 		.word	.LC3
 2299 0438 2C000000 		.word	.LC4
 2300 043c 44000000 		.word	.LC5
 2301 0440 68000000 		.word	.LC6
 2302 0444 00000000 		.word	instructionsList
 2303              		.cfi_endproc
 2304              	.LFE5:
 2305              		.size	getPathInstructions, .-getPathInstructions
 2306              		.section	.text.checkPathDirection,"ax",%progbits
 2307              		.align	2
 2308              		.global	checkPathDirection
 2309              		.thumb
 2310              		.thumb_func
 2311              		.type	checkPathDirection, %function
 2312              	checkPathDirection:
 2313              	.LFB6:
 407:pathfinding.c **** 
 408:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2314              		.loc 1 408 0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 8
 2317              		@ frame_needed = 1, uses_anonymous_args = 0
 2318              		@ link register save eliminated.
 2319 0000 80B4     		push	{r7}
 2320              		.cfi_def_cfa_offset 4
 2321              		.cfi_offset 7, -4
 2322 0002 83B0     		sub	sp, sp, #12
 2323              		.cfi_def_cfa_offset 16
 2324 0004 00AF     		add	r7, sp, #0
 2325              		.cfi_def_cfa_register 7
 2326 0006 7860     		str	r0, [r7, #4]
 2327 0008 3960     		str	r1, [r7]
 409:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 410:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2328              		.loc 1 410 0
 2329 000a 7B68     		ldr	r3, [r7, #4]
 2330 000c 5A1E     		subs	r2, r3, #1
 2331 000e 3E49     		ldr	r1, .L97
 2332 0010 1346     		mov	r3, r2
 2333 0012 DB00     		lsls	r3, r3, #3
 2334 0014 1344     		add	r3, r3, r2
 2335 0016 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 50


 2336 0018 1344     		add	r3, r3, r2
 2337 001a 3A68     		ldr	r2, [r7]
 2338 001c 1344     		add	r3, r3, r2
 2339 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2340 0022 082B     		cmp	r3, #8
 2341 0024 0DD0     		beq	.L88
 2342              		.loc 1 410 0 is_stmt 0 discriminator 1
 2343 0026 7B68     		ldr	r3, [r7, #4]
 2344 0028 5A1E     		subs	r2, r3, #1
 2345 002a 3749     		ldr	r1, .L97
 2346 002c 1346     		mov	r3, r2
 2347 002e DB00     		lsls	r3, r3, #3
 2348 0030 1344     		add	r3, r3, r2
 2349 0032 5B00     		lsls	r3, r3, #1
 2350 0034 1344     		add	r3, r3, r2
 2351 0036 3A68     		ldr	r2, [r7]
 2352 0038 1344     		add	r3, r3, r2
 2353 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2354 003e 092B     		cmp	r3, #9
 2355 0040 01D1     		bne	.L89
 2356              	.L88:
 411:pathfinding.c ****         return 0; // up 
 2357              		.loc 1 411 0 is_stmt 1
 2358 0042 0023     		movs	r3, #0
 2359 0044 5AE0     		b	.L90
 2360              	.L89:
 412:pathfinding.c ****     }
 413:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2361              		.loc 1 413 0
 2362 0046 7B68     		ldr	r3, [r7, #4]
 2363 0048 5A1C     		adds	r2, r3, #1
 2364 004a 2F49     		ldr	r1, .L97
 2365 004c 1346     		mov	r3, r2
 2366 004e DB00     		lsls	r3, r3, #3
 2367 0050 1344     		add	r3, r3, r2
 2368 0052 5B00     		lsls	r3, r3, #1
 2369 0054 1344     		add	r3, r3, r2
 2370 0056 3A68     		ldr	r2, [r7]
 2371 0058 1344     		add	r3, r3, r2
 2372 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2373 005e 082B     		cmp	r3, #8
 2374 0060 0DD0     		beq	.L91
 2375              		.loc 1 413 0 is_stmt 0 discriminator 1
 2376 0062 7B68     		ldr	r3, [r7, #4]
 2377 0064 5A1C     		adds	r2, r3, #1
 2378 0066 2849     		ldr	r1, .L97
 2379 0068 1346     		mov	r3, r2
 2380 006a DB00     		lsls	r3, r3, #3
 2381 006c 1344     		add	r3, r3, r2
 2382 006e 5B00     		lsls	r3, r3, #1
 2383 0070 1344     		add	r3, r3, r2
 2384 0072 3A68     		ldr	r2, [r7]
 2385 0074 1344     		add	r3, r3, r2
 2386 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2387 007a 092B     		cmp	r3, #9
 2388 007c 01D1     		bne	.L92
 2389              	.L91:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 51


 414:pathfinding.c ****         return 1; // down
 2390              		.loc 1 414 0 is_stmt 1
 2391 007e 0123     		movs	r3, #1
 2392 0080 3CE0     		b	.L90
 2393              	.L92:
 415:pathfinding.c ****     }
 416:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2394              		.loc 1 416 0
 2395 0082 3B68     		ldr	r3, [r7]
 2396 0084 591E     		subs	r1, r3, #1
 2397 0086 2048     		ldr	r0, .L97
 2398 0088 7A68     		ldr	r2, [r7, #4]
 2399 008a 1346     		mov	r3, r2
 2400 008c DB00     		lsls	r3, r3, #3
 2401 008e 1344     		add	r3, r3, r2
 2402 0090 5B00     		lsls	r3, r3, #1
 2403 0092 1344     		add	r3, r3, r2
 2404 0094 0B44     		add	r3, r3, r1
 2405 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2406 009a 082B     		cmp	r3, #8
 2407 009c 0DD0     		beq	.L93
 2408              		.loc 1 416 0 is_stmt 0 discriminator 1
 2409 009e 3B68     		ldr	r3, [r7]
 2410 00a0 591E     		subs	r1, r3, #1
 2411 00a2 1948     		ldr	r0, .L97
 2412 00a4 7A68     		ldr	r2, [r7, #4]
 2413 00a6 1346     		mov	r3, r2
 2414 00a8 DB00     		lsls	r3, r3, #3
 2415 00aa 1344     		add	r3, r3, r2
 2416 00ac 5B00     		lsls	r3, r3, #1
 2417 00ae 1344     		add	r3, r3, r2
 2418 00b0 0B44     		add	r3, r3, r1
 2419 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2420 00b6 092B     		cmp	r3, #9
 2421 00b8 01D1     		bne	.L94
 2422              	.L93:
 417:pathfinding.c ****         return 2; // left
 2423              		.loc 1 417 0 is_stmt 1
 2424 00ba 0223     		movs	r3, #2
 2425 00bc 1EE0     		b	.L90
 2426              	.L94:
 418:pathfinding.c ****     }
 419:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2427              		.loc 1 419 0
 2428 00be 3B68     		ldr	r3, [r7]
 2429 00c0 591C     		adds	r1, r3, #1
 2430 00c2 1148     		ldr	r0, .L97
 2431 00c4 7A68     		ldr	r2, [r7, #4]
 2432 00c6 1346     		mov	r3, r2
 2433 00c8 DB00     		lsls	r3, r3, #3
 2434 00ca 1344     		add	r3, r3, r2
 2435 00cc 5B00     		lsls	r3, r3, #1
 2436 00ce 1344     		add	r3, r3, r2
 2437 00d0 0B44     		add	r3, r3, r1
 2438 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2439 00d6 082B     		cmp	r3, #8
 2440 00d8 0DD0     		beq	.L95
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 52


 2441              		.loc 1 419 0 is_stmt 0 discriminator 1
 2442 00da 3B68     		ldr	r3, [r7]
 2443 00dc 591C     		adds	r1, r3, #1
 2444 00de 0A48     		ldr	r0, .L97
 2445 00e0 7A68     		ldr	r2, [r7, #4]
 2446 00e2 1346     		mov	r3, r2
 2447 00e4 DB00     		lsls	r3, r3, #3
 2448 00e6 1344     		add	r3, r3, r2
 2449 00e8 5B00     		lsls	r3, r3, #1
 2450 00ea 1344     		add	r3, r3, r2
 2451 00ec 0B44     		add	r3, r3, r1
 2452 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2453 00f2 092B     		cmp	r3, #9
 2454 00f4 01D1     		bne	.L96
 2455              	.L95:
 420:pathfinding.c ****         return 3; // right
 2456              		.loc 1 420 0 is_stmt 1
 2457 00f6 0323     		movs	r3, #3
 2458 00f8 00E0     		b	.L90
 2459              	.L96:
 421:pathfinding.c ****     }
 422:pathfinding.c ****     return 5; // default- will never reach this
 2460              		.loc 1 422 0
 2461 00fa 0523     		movs	r3, #5
 2462              	.L90:
 423:pathfinding.c **** }
 2463              		.loc 1 423 0
 2464 00fc 1846     		mov	r0, r3
 2465 00fe 0C37     		adds	r7, r7, #12
 2466              		.cfi_def_cfa_offset 4
 2467 0100 BD46     		mov	sp, r7
 2468              		.cfi_def_cfa_register 13
 2469              		@ sp needed
 2470 0102 80BC     		pop	{r7}
 2471              		.cfi_restore 7
 2472              		.cfi_def_cfa_offset 0
 2473 0104 7047     		bx	lr
 2474              	.L98:
 2475 0106 00BF     		.align	2
 2476              	.L97:
 2477 0108 00000000 		.word	map
 2478              		.cfi_endproc
 2479              	.LFE6:
 2480              		.size	checkPathDirection, .-checkPathDirection
 2481              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2482              		.align	2
 2483              		.global	checkIgnoreTurn
 2484              		.thumb
 2485              		.thumb_func
 2486              		.type	checkIgnoreTurn, %function
 2487              	checkIgnoreTurn:
 2488              	.LFB7:
 424:pathfinding.c **** 
 425:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2489              		.loc 1 425 0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 53


 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493              		@ link register save eliminated.
 2494 0000 80B4     		push	{r7}
 2495              		.cfi_def_cfa_offset 4
 2496              		.cfi_offset 7, -4
 2497 0002 85B0     		sub	sp, sp, #20
 2498              		.cfi_def_cfa_offset 24
 2499 0004 00AF     		add	r7, sp, #0
 2500              		.cfi_def_cfa_register 7
 2501 0006 0346     		mov	r3, r0
 2502 0008 B960     		str	r1, [r7, #8]
 2503 000a 7A60     		str	r2, [r7, #4]
 2504 000c FB73     		strb	r3, [r7, #15]
 426:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 427:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2505              		.loc 1 427 0
 2506 000e BB68     		ldr	r3, [r7, #8]
 2507 0010 5A1E     		subs	r2, r3, #1
 2508 0012 4149     		ldr	r1, .L117
 2509 0014 1346     		mov	r3, r2
 2510 0016 DB00     		lsls	r3, r3, #3
 2511 0018 1344     		add	r3, r3, r2
 2512 001a 5B00     		lsls	r3, r3, #1
 2513 001c 1344     		add	r3, r3, r2
 2514 001e 7A68     		ldr	r2, [r7, #4]
 2515 0020 1344     		add	r3, r3, r2
 2516 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2517 0026 002B     		cmp	r3, #0
 2518 0028 11D1     		bne	.L100
 428:pathfinding.c ****         switch (robotOrientation) {
 2519              		.loc 1 428 0
 2520 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2521 002c 022B     		cmp	r3, #2
 2522 002e 02D0     		beq	.L102
 2523 0030 032B     		cmp	r3, #3
 2524 0032 06D0     		beq	.L103
 429:pathfinding.c ****             case Left:
 430:pathfinding.c ****                 ignoreR++;
 431:pathfinding.c ****                 break;
 432:pathfinding.c ****             case Right:
 433:pathfinding.c ****                 ignoreL++;
 434:pathfinding.c ****                 break;
 435:pathfinding.c ****             default:
 436:pathfinding.c ****                 break; // ignore when going up and down
 2525              		.loc 1 436 0
 2526 0034 0BE0     		b	.L100
 2527              	.L102:
 430:pathfinding.c ****                 break;
 2528              		.loc 1 430 0
 2529 0036 394B     		ldr	r3, .L117+4
 2530 0038 1B68     		ldr	r3, [r3]
 2531 003a 0133     		adds	r3, r3, #1
 2532 003c 374A     		ldr	r2, .L117+4
 2533 003e 1360     		str	r3, [r2]
 431:pathfinding.c ****             case Right:
 2534              		.loc 1 431 0
 2535 0040 05E0     		b	.L100
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 54


 2536              	.L103:
 433:pathfinding.c ****                 break;
 2537              		.loc 1 433 0
 2538 0042 374B     		ldr	r3, .L117+8
 2539 0044 1B68     		ldr	r3, [r3]
 2540 0046 0133     		adds	r3, r3, #1
 2541 0048 354A     		ldr	r2, .L117+8
 2542 004a 1360     		str	r3, [r2]
 434:pathfinding.c ****             default:
 2543              		.loc 1 434 0
 2544 004c 00BF     		nop
 2545              	.L100:
 437:pathfinding.c ****         }
 438:pathfinding.c ****     }
 439:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2546              		.loc 1 439 0
 2547 004e BB68     		ldr	r3, [r7, #8]
 2548 0050 5A1C     		adds	r2, r3, #1
 2549 0052 3149     		ldr	r1, .L117
 2550 0054 1346     		mov	r3, r2
 2551 0056 DB00     		lsls	r3, r3, #3
 2552 0058 1344     		add	r3, r3, r2
 2553 005a 5B00     		lsls	r3, r3, #1
 2554 005c 1344     		add	r3, r3, r2
 2555 005e 7A68     		ldr	r2, [r7, #4]
 2556 0060 1344     		add	r3, r3, r2
 2557 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2558 0066 002B     		cmp	r3, #0
 2559 0068 11D1     		bne	.L104
 440:pathfinding.c ****         switch (robotOrientation) {
 2560              		.loc 1 440 0
 2561 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2562 006c 022B     		cmp	r3, #2
 2563 006e 02D0     		beq	.L106
 2564 0070 032B     		cmp	r3, #3
 2565 0072 06D0     		beq	.L107
 441:pathfinding.c ****             case Left:
 442:pathfinding.c ****                 ignoreL++;
 443:pathfinding.c ****                 break;
 444:pathfinding.c ****             case Right:
 445:pathfinding.c ****                 ignoreR++;
 446:pathfinding.c ****                 break;
 447:pathfinding.c ****             default:
 448:pathfinding.c ****                 break;
 2566              		.loc 1 448 0
 2567 0074 0BE0     		b	.L104
 2568              	.L106:
 442:pathfinding.c ****                 break;
 2569              		.loc 1 442 0
 2570 0076 2A4B     		ldr	r3, .L117+8
 2571 0078 1B68     		ldr	r3, [r3]
 2572 007a 0133     		adds	r3, r3, #1
 2573 007c 284A     		ldr	r2, .L117+8
 2574 007e 1360     		str	r3, [r2]
 443:pathfinding.c ****             case Right:
 2575              		.loc 1 443 0
 2576 0080 05E0     		b	.L104
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 55


 2577              	.L107:
 445:pathfinding.c ****                 break;
 2578              		.loc 1 445 0
 2579 0082 264B     		ldr	r3, .L117+4
 2580 0084 1B68     		ldr	r3, [r3]
 2581 0086 0133     		adds	r3, r3, #1
 2582 0088 244A     		ldr	r2, .L117+4
 2583 008a 1360     		str	r3, [r2]
 446:pathfinding.c ****             default:
 2584              		.loc 1 446 0
 2585 008c 00BF     		nop
 2586              	.L104:
 449:pathfinding.c ****         }
 450:pathfinding.c ****     }
 451:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2587              		.loc 1 451 0
 2588 008e 7B68     		ldr	r3, [r7, #4]
 2589 0090 591E     		subs	r1, r3, #1
 2590 0092 2148     		ldr	r0, .L117
 2591 0094 BA68     		ldr	r2, [r7, #8]
 2592 0096 1346     		mov	r3, r2
 2593 0098 DB00     		lsls	r3, r3, #3
 2594 009a 1344     		add	r3, r3, r2
 2595 009c 5B00     		lsls	r3, r3, #1
 2596 009e 1344     		add	r3, r3, r2
 2597 00a0 0B44     		add	r3, r3, r1
 2598 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2599 00a6 002B     		cmp	r3, #0
 2600 00a8 11D1     		bne	.L108
 452:pathfinding.c ****         switch (robotOrientation) {
 2601              		.loc 1 452 0
 2602 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2603 00ac 002B     		cmp	r3, #0
 2604 00ae 02D0     		beq	.L110
 2605 00b0 012B     		cmp	r3, #1
 2606 00b2 06D0     		beq	.L111
 453:pathfinding.c ****             case Up:
 454:pathfinding.c ****                 ignoreL++;
 455:pathfinding.c ****                 break;
 456:pathfinding.c ****             case Down:
 457:pathfinding.c ****                 ignoreR++;
 458:pathfinding.c ****                 break;
 459:pathfinding.c ****             default:
 460:pathfinding.c ****                 break;
 2607              		.loc 1 460 0
 2608 00b4 0BE0     		b	.L108
 2609              	.L110:
 454:pathfinding.c ****                 break;
 2610              		.loc 1 454 0
 2611 00b6 1A4B     		ldr	r3, .L117+8
 2612 00b8 1B68     		ldr	r3, [r3]
 2613 00ba 0133     		adds	r3, r3, #1
 2614 00bc 184A     		ldr	r2, .L117+8
 2615 00be 1360     		str	r3, [r2]
 455:pathfinding.c ****             case Down:
 2616              		.loc 1 455 0
 2617 00c0 05E0     		b	.L108
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 56


 2618              	.L111:
 457:pathfinding.c ****                 break;
 2619              		.loc 1 457 0
 2620 00c2 164B     		ldr	r3, .L117+4
 2621 00c4 1B68     		ldr	r3, [r3]
 2622 00c6 0133     		adds	r3, r3, #1
 2623 00c8 144A     		ldr	r2, .L117+4
 2624 00ca 1360     		str	r3, [r2]
 458:pathfinding.c ****             default:
 2625              		.loc 1 458 0
 2626 00cc 00BF     		nop
 2627              	.L108:
 461:pathfinding.c ****         }
 462:pathfinding.c ****     }
 463:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2628              		.loc 1 463 0
 2629 00ce 7B68     		ldr	r3, [r7, #4]
 2630 00d0 591C     		adds	r1, r3, #1
 2631 00d2 1148     		ldr	r0, .L117
 2632 00d4 BA68     		ldr	r2, [r7, #8]
 2633 00d6 1346     		mov	r3, r2
 2634 00d8 DB00     		lsls	r3, r3, #3
 2635 00da 1344     		add	r3, r3, r2
 2636 00dc 5B00     		lsls	r3, r3, #1
 2637 00de 1344     		add	r3, r3, r2
 2638 00e0 0B44     		add	r3, r3, r1
 2639 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2640 00e6 002B     		cmp	r3, #0
 2641 00e8 11D1     		bne	.L116
 464:pathfinding.c ****         switch (robotOrientation) {
 2642              		.loc 1 464 0
 2643 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2644 00ec 002B     		cmp	r3, #0
 2645 00ee 02D0     		beq	.L114
 2646 00f0 012B     		cmp	r3, #1
 2647 00f2 06D0     		beq	.L115
 465:pathfinding.c ****             case Up:
 466:pathfinding.c ****                 ignoreR++;
 467:pathfinding.c ****                 break;
 468:pathfinding.c ****             case Down:
 469:pathfinding.c ****                 ignoreL++;
 470:pathfinding.c ****                 break;
 471:pathfinding.c ****             default:
 472:pathfinding.c ****                 break;
 2648              		.loc 1 472 0
 2649 00f4 0BE0     		b	.L112
 2650              	.L114:
 466:pathfinding.c ****                 break;
 2651              		.loc 1 466 0
 2652 00f6 094B     		ldr	r3, .L117+4
 2653 00f8 1B68     		ldr	r3, [r3]
 2654 00fa 0133     		adds	r3, r3, #1
 2655 00fc 074A     		ldr	r2, .L117+4
 2656 00fe 1360     		str	r3, [r2]
 467:pathfinding.c ****             case Down:
 2657              		.loc 1 467 0
 2658 0100 05E0     		b	.L112
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 57


 2659              	.L115:
 469:pathfinding.c ****                 break;
 2660              		.loc 1 469 0
 2661 0102 074B     		ldr	r3, .L117+8
 2662 0104 1B68     		ldr	r3, [r3]
 2663 0106 0133     		adds	r3, r3, #1
 2664 0108 054A     		ldr	r2, .L117+8
 2665 010a 1360     		str	r3, [r2]
 470:pathfinding.c ****             default:
 2666              		.loc 1 470 0
 2667 010c 00BF     		nop
 2668              	.L112:
 2669              	.L116:
 473:pathfinding.c ****         }
 474:pathfinding.c ****     }
 475:pathfinding.c **** }
 2670              		.loc 1 475 0
 2671 010e 00BF     		nop
 2672 0110 1437     		adds	r7, r7, #20
 2673              		.cfi_def_cfa_offset 4
 2674 0112 BD46     		mov	sp, r7
 2675              		.cfi_def_cfa_register 13
 2676              		@ sp needed
 2677 0114 80BC     		pop	{r7}
 2678              		.cfi_restore 7
 2679              		.cfi_def_cfa_offset 0
 2680 0116 7047     		bx	lr
 2681              	.L118:
 2682              		.align	2
 2683              	.L117:
 2684 0118 00000000 		.word	map
 2685 011c 00000000 		.word	ignoreR
 2686 0120 00000000 		.word	ignoreL
 2687              		.cfi_endproc
 2688              	.LFE7:
 2689              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 2690              		.section	.text.getTargetOrientation,"ax",%progbits
 2691              		.align	2
 2692              		.global	getTargetOrientation
 2693              		.thumb
 2694              		.thumb_func
 2695              		.type	getTargetOrientation, %function
 2696              	getTargetOrientation:
 2697              	.LFB8:
 476:pathfinding.c **** 
 477:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 2698              		.loc 1 477 0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 8
 2701              		@ frame_needed = 1, uses_anonymous_args = 0
 2702              		@ link register save eliminated.
 2703 0000 80B4     		push	{r7}
 2704              		.cfi_def_cfa_offset 4
 2705              		.cfi_offset 7, -4
 2706 0002 83B0     		sub	sp, sp, #12
 2707              		.cfi_def_cfa_offset 16
 2708 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 58


 2709              		.cfi_def_cfa_register 7
 2710 0006 7860     		str	r0, [r7, #4]
 2711 0008 3960     		str	r1, [r7]
 478:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 2712              		.loc 1 478 0
 2713 000a 7B68     		ldr	r3, [r7, #4]
 2714 000c 5A1C     		adds	r2, r3, #1
 2715 000e 2249     		ldr	r1, .L125
 2716 0010 1346     		mov	r3, r2
 2717 0012 DB00     		lsls	r3, r3, #3
 2718 0014 1344     		add	r3, r3, r2
 2719 0016 5B00     		lsls	r3, r3, #1
 2720 0018 1344     		add	r3, r3, r2
 2721 001a 3A68     		ldr	r2, [r7]
 2722 001c 1344     		add	r3, r3, r2
 2723 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2724 0022 082B     		cmp	r3, #8
 2725 0024 01D1     		bne	.L120
 479:pathfinding.c ****         return 0; // robot will be travelling up
 2726              		.loc 1 479 0
 2727 0026 0023     		movs	r3, #0
 2728 0028 30E0     		b	.L121
 2729              	.L120:
 480:pathfinding.c ****     }
 481:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 2730              		.loc 1 481 0
 2731 002a 7B68     		ldr	r3, [r7, #4]
 2732 002c 5A1E     		subs	r2, r3, #1
 2733 002e 1A49     		ldr	r1, .L125
 2734 0030 1346     		mov	r3, r2
 2735 0032 DB00     		lsls	r3, r3, #3
 2736 0034 1344     		add	r3, r3, r2
 2737 0036 5B00     		lsls	r3, r3, #1
 2738 0038 1344     		add	r3, r3, r2
 2739 003a 3A68     		ldr	r2, [r7]
 2740 003c 1344     		add	r3, r3, r2
 2741 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2742 0042 082B     		cmp	r3, #8
 2743 0044 01D1     		bne	.L122
 482:pathfinding.c ****         return 1; // robot will be travelling down
 2744              		.loc 1 482 0
 2745 0046 0123     		movs	r3, #1
 2746 0048 20E0     		b	.L121
 2747              	.L122:
 483:pathfinding.c ****     }
 484:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 2748              		.loc 1 484 0
 2749 004a 3B68     		ldr	r3, [r7]
 2750 004c 591C     		adds	r1, r3, #1
 2751 004e 1248     		ldr	r0, .L125
 2752 0050 7A68     		ldr	r2, [r7, #4]
 2753 0052 1346     		mov	r3, r2
 2754 0054 DB00     		lsls	r3, r3, #3
 2755 0056 1344     		add	r3, r3, r2
 2756 0058 5B00     		lsls	r3, r3, #1
 2757 005a 1344     		add	r3, r3, r2
 2758 005c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 59


 2759 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2760 0062 082B     		cmp	r3, #8
 2761 0064 01D1     		bne	.L123
 485:pathfinding.c ****         return 2; // robot will be travelling left
 2762              		.loc 1 485 0
 2763 0066 0223     		movs	r3, #2
 2764 0068 10E0     		b	.L121
 2765              	.L123:
 486:pathfinding.c ****     }
 487:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 2766              		.loc 1 487 0
 2767 006a 3B68     		ldr	r3, [r7]
 2768 006c 591E     		subs	r1, r3, #1
 2769 006e 0A48     		ldr	r0, .L125
 2770 0070 7A68     		ldr	r2, [r7, #4]
 2771 0072 1346     		mov	r3, r2
 2772 0074 DB00     		lsls	r3, r3, #3
 2773 0076 1344     		add	r3, r3, r2
 2774 0078 5B00     		lsls	r3, r3, #1
 2775 007a 1344     		add	r3, r3, r2
 2776 007c 0B44     		add	r3, r3, r1
 2777 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2778 0082 082B     		cmp	r3, #8
 2779 0084 01D1     		bne	.L124
 488:pathfinding.c ****         return 3; // robot will be travelling right
 2780              		.loc 1 488 0
 2781 0086 0323     		movs	r3, #3
 2782 0088 00E0     		b	.L121
 2783              	.L124:
 489:pathfinding.c ****     }
 490:pathfinding.c ****     return 5; // placeholder
 2784              		.loc 1 490 0
 2785 008a 0523     		movs	r3, #5
 2786              	.L121:
 491:pathfinding.c **** }
 2787              		.loc 1 491 0
 2788 008c 1846     		mov	r0, r3
 2789 008e 0C37     		adds	r7, r7, #12
 2790              		.cfi_def_cfa_offset 4
 2791 0090 BD46     		mov	sp, r7
 2792              		.cfi_def_cfa_register 13
 2793              		@ sp needed
 2794 0092 80BC     		pop	{r7}
 2795              		.cfi_restore 7
 2796              		.cfi_def_cfa_offset 0
 2797 0094 7047     		bx	lr
 2798              	.L126:
 2799 0096 00BF     		.align	2
 2800              	.L125:
 2801 0098 00000000 		.word	map
 2802              		.cfi_endproc
 2803              	.LFE8:
 2804              		.size	getTargetOrientation, .-getTargetOrientation
 2805              		.section	.text.instructionsListLength,"ax",%progbits
 2806              		.align	2
 2807              		.global	instructionsListLength
 2808              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 60


 2809              		.thumb_func
 2810              		.type	instructionsListLength, %function
 2811              	instructionsListLength:
 2812              	.LFB9:
 492:pathfinding.c **** uint8_t instructionsListLength() {
 2813              		.loc 1 492 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 1, uses_anonymous_args = 0
 2817              		@ link register save eliminated.
 2818 0000 80B4     		push	{r7}
 2819              		.cfi_def_cfa_offset 4
 2820              		.cfi_offset 7, -4
 2821 0002 00AF     		add	r7, sp, #0
 2822              		.cfi_def_cfa_register 7
 493:pathfinding.c ****     return numSteps;
 2823              		.loc 1 493 0
 2824 0004 034B     		ldr	r3, .L129
 2825 0006 1B68     		ldr	r3, [r3]
 2826 0008 DBB2     		uxtb	r3, r3
 494:pathfinding.c **** }
 2827              		.loc 1 494 0
 2828 000a 1846     		mov	r0, r3
 2829 000c BD46     		mov	sp, r7
 2830              		.cfi_def_cfa_register 13
 2831              		@ sp needed
 2832 000e 80BC     		pop	{r7}
 2833              		.cfi_restore 7
 2834              		.cfi_def_cfa_offset 0
 2835 0010 7047     		bx	lr
 2836              	.L130:
 2837 0012 00BF     		.align	2
 2838              	.L129:
 2839 0014 D0110000 		.word	numSteps
 2840              		.cfi_endproc
 2841              	.LFE9:
 2842              		.size	instructionsListLength, .-instructionsListLength
 2843              		.section	.text.findPath,"ax",%progbits
 2844              		.align	2
 2845              		.global	findPath
 2846              		.thumb
 2847              		.thumb_func
 2848              		.type	findPath, %function
 2849              	findPath:
 2850              	.LFB10:
 495:pathfinding.c **** 
 496:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 2851              		.loc 1 496 0
 2852              		.cfi_startproc
 2853              		@ args = 0, pretend = 0, frame = 32
 2854              		@ frame_needed = 1, uses_anonymous_args = 0
 2855 0000 90B5     		push	{r4, r7, lr}
 2856              		.cfi_def_cfa_offset 12
 2857              		.cfi_offset 4, -12
 2858              		.cfi_offset 7, -8
 2859              		.cfi_offset 14, -4
 2860 0002 8BB0     		sub	sp, sp, #44
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 61


 2861              		.cfi_def_cfa_offset 56
 2862 0004 02AF     		add	r7, sp, #8
 2863              		.cfi_def_cfa 7, 48
 2864 0006 F860     		str	r0, [r7, #12]
 2865 0008 B960     		str	r1, [r7, #8]
 2866 000a 7A60     		str	r2, [r7, #4]
 497:pathfinding.c ****     //clearMap(map); // clear map between each pass
 498:pathfinding.c ****     struct Location startLocation, targetLocation;
 499:pathfinding.c ****     startLocation.row = start_pos[0];
 2867              		.loc 1 499 0
 2868 000c 174B     		ldr	r3, .L133
 2869 000e 1B68     		ldr	r3, [r3]
 2870 0010 BB61     		str	r3, [r7, #24]
 500:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 2871              		.loc 1 500 0
 2872 0012 164B     		ldr	r3, .L133
 2873 0014 5B68     		ldr	r3, [r3, #4]
 2874 0016 FB61     		str	r3, [r7, #28]
 501:pathfinding.c ****     targetLocation.row = food_list[i][0];
 2875              		.loc 1 501 0
 2876 0018 7B68     		ldr	r3, [r7, #4]
 2877 001a DB00     		lsls	r3, r3, #3
 2878 001c BA68     		ldr	r2, [r7, #8]
 2879 001e 1344     		add	r3, r3, r2
 2880 0020 1B68     		ldr	r3, [r3]
 2881 0022 3B61     		str	r3, [r7, #16]
 502:pathfinding.c ****     targetLocation.col = food_list[i][1];
 2882              		.loc 1 502 0
 2883 0024 7B68     		ldr	r3, [r7, #4]
 2884 0026 DB00     		lsls	r3, r3, #3
 2885 0028 BA68     		ldr	r2, [r7, #8]
 2886 002a 1344     		add	r3, r3, r2
 2887 002c 5B68     		ldr	r3, [r3, #4]
 2888 002e 7B61     		str	r3, [r7, #20]
 503:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 2889              		.loc 1 503 0
 2890 0030 7B69     		ldr	r3, [r7, #20]
 2891 0032 0093     		str	r3, [sp]
 2892 0034 3B69     		ldr	r3, [r7, #16]
 2893 0036 07F11802 		add	r2, r7, #24
 2894 003a 06CA     		ldmia	r2, {r1, r2}
 2895 003c F868     		ldr	r0, [r7, #12]
 2896 003e FFF7FEFF 		bl	dijkstra
 504:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 2897              		.loc 1 504 0
 2898 0042 0B4B     		ldr	r3, .L133+4
 2899 0044 1C68     		ldr	r4, [r3]
 2900 0046 6A46     		mov	r2, sp
 2901 0048 07F11003 		add	r3, r7, #16
 2902 004c 93E80300 		ldmia	r3, {r0, r1}
 2903 0050 82E80300 		stmia	r2, {r0, r1}
 2904 0054 07F11803 		add	r3, r7, #24
 2905 0058 0CCB     		ldmia	r3, {r2, r3}
 2906 005a 2146     		mov	r1, r4
 2907 005c F868     		ldr	r0, [r7, #12]
 2908 005e FFF7FEFF 		bl	getPathInstructions
 505:pathfinding.c ****     return instructionsList;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 62


 2909              		.loc 1 505 0
 2910 0062 044B     		ldr	r3, .L133+8
 506:pathfinding.c **** }
 2911              		.loc 1 506 0
 2912 0064 1846     		mov	r0, r3
 2913 0066 2437     		adds	r7, r7, #36
 2914              		.cfi_def_cfa_offset 12
 2915 0068 BD46     		mov	sp, r7
 2916              		.cfi_def_cfa_register 13
 2917              		@ sp needed
 2918 006a 90BD     		pop	{r4, r7, pc}
 2919              	.L134:
 2920              		.align	2
 2921              	.L133:
 2922 006c 00000000 		.word	start_pos
 2923 0070 D0110000 		.word	numSteps
 2924 0074 00000000 		.word	instructionsList
 2925              		.cfi_endproc
 2926              	.LFE10:
 2927              		.size	findPath, .-findPath
 2928              		.text
 2929              	.Letext0:
 2930              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2931              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2932              		.file 4 "pathfinding.h"
 2933              		.section	.debug_info,"",%progbits
 2934              	.Ldebug_info0:
 2935 0000 13080000 		.4byte	0x813
 2936 0004 0400     		.2byte	0x4
 2937 0006 00000000 		.4byte	.Ldebug_abbrev0
 2938 000a 04       		.byte	0x4
 2939 000b 01       		.uleb128 0x1
 2940 000c 50000000 		.4byte	.LASF79
 2941 0010 0C       		.byte	0xc
 2942 0011 24040000 		.4byte	.LASF80
 2943 0015 46010000 		.4byte	.LASF81
 2944 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2945 001d 00000000 		.4byte	0
 2946 0021 00000000 		.4byte	.Ldebug_line0
 2947 0025 02       		.uleb128 0x2
 2948 0026 01       		.byte	0x1
 2949 0027 06       		.byte	0x6
 2950 0028 30000000 		.4byte	.LASF0
 2951 002c 03       		.uleb128 0x3
 2952 002d 3C000000 		.4byte	.LASF12
 2953 0031 02       		.byte	0x2
 2954 0032 1D       		.byte	0x1d
 2955 0033 37000000 		.4byte	0x37
 2956 0037 02       		.uleb128 0x2
 2957 0038 01       		.byte	0x1
 2958 0039 08       		.byte	0x8
 2959 003a 26030000 		.4byte	.LASF1
 2960 003e 02       		.uleb128 0x2
 2961 003f 02       		.byte	0x2
 2962 0040 05       		.byte	0x5
 2963 0041 67030000 		.4byte	.LASF2
 2964 0045 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 63


 2965 0046 02       		.byte	0x2
 2966 0047 07       		.byte	0x7
 2967 0048 71020000 		.4byte	.LASF3
 2968 004c 02       		.uleb128 0x2
 2969 004d 04       		.byte	0x4
 2970 004e 05       		.byte	0x5
 2971 004f B5010000 		.4byte	.LASF4
 2972 0053 02       		.uleb128 0x2
 2973 0054 04       		.byte	0x4
 2974 0055 07       		.byte	0x7
 2975 0056 4D020000 		.4byte	.LASF5
 2976 005a 02       		.uleb128 0x2
 2977 005b 08       		.byte	0x8
 2978 005c 05       		.byte	0x5
 2979 005d 38010000 		.4byte	.LASF6
 2980 0061 02       		.uleb128 0x2
 2981 0062 08       		.byte	0x8
 2982 0063 07       		.byte	0x7
 2983 0064 E6000000 		.4byte	.LASF7
 2984 0068 04       		.uleb128 0x4
 2985 0069 04       		.byte	0x4
 2986 006a 05       		.byte	0x5
 2987 006b 696E7400 		.ascii	"int\000"
 2988 006f 02       		.uleb128 0x2
 2989 0070 04       		.byte	0x4
 2990 0071 07       		.byte	0x7
 2991 0072 33020000 		.4byte	.LASF8
 2992 0076 02       		.uleb128 0x2
 2993 0077 08       		.byte	0x8
 2994 0078 04       		.byte	0x4
 2995 0079 C1020000 		.4byte	.LASF9
 2996 007d 02       		.uleb128 0x2
 2997 007e 04       		.byte	0x4
 2998 007f 07       		.byte	0x7
 2999 0080 B8020000 		.4byte	.LASF10
 3000 0084 02       		.uleb128 0x2
 3001 0085 01       		.byte	0x1
 3002 0086 08       		.byte	0x8
 3003 0087 C0030000 		.4byte	.LASF11
 3004 008b 03       		.uleb128 0x3
 3005 008c 70040000 		.4byte	.LASF13
 3006 0090 03       		.byte	0x3
 3007 0091 18       		.byte	0x18
 3008 0092 2C000000 		.4byte	0x2c
 3009 0096 05       		.uleb128 0x5
 3010 0097 00000000 		.4byte	.LASF17
 3011 009b 01       		.byte	0x1
 3012 009c 37000000 		.4byte	0x37
 3013 00a0 04       		.byte	0x4
 3014 00a1 0D       		.byte	0xd
 3015 00a2 BE000000 		.4byte	0xbe
 3016 00a6 06       		.uleb128 0x6
 3017 00a7 557000   		.ascii	"Up\000"
 3018 00aa 00       		.byte	0
 3019 00ab 07       		.uleb128 0x7
 3020 00ac FB030000 		.4byte	.LASF14
 3021 00b0 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 64


 3022 00b1 07       		.uleb128 0x7
 3023 00b2 B3020000 		.4byte	.LASF15
 3024 00b6 02       		.byte	0x2
 3025 00b7 07       		.uleb128 0x7
 3026 00b8 8A030000 		.4byte	.LASF16
 3027 00bc 03       		.byte	0x3
 3028 00bd 00       		.byte	0
 3029 00be 05       		.uleb128 0x5
 3030 00bf 34030000 		.4byte	.LASF18
 3031 00c3 01       		.byte	0x1
 3032 00c4 37000000 		.4byte	0x37
 3033 00c8 04       		.byte	0x4
 3034 00c9 0E       		.byte	0xe
 3035 00ca F9000000 		.4byte	0xf9
 3036 00ce 07       		.uleb128 0x7
 3037 00cf 80030000 		.4byte	.LASF19
 3038 00d3 00       		.byte	0
 3039 00d4 07       		.uleb128 0x7
 3040 00d5 E8020000 		.4byte	.LASF20
 3041 00d9 01       		.byte	0x1
 3042 00da 07       		.uleb128 0x7
 3043 00db 43040000 		.4byte	.LASF21
 3044 00df 02       		.byte	0x2
 3045 00e0 07       		.uleb128 0x7
 3046 00e1 1B010000 		.4byte	.LASF22
 3047 00e5 03       		.byte	0x3
 3048 00e6 07       		.uleb128 0x7
 3049 00e7 CD010000 		.4byte	.LASF23
 3050 00eb 04       		.byte	0x4
 3051 00ec 07       		.uleb128 0x7
 3052 00ed 84020000 		.4byte	.LASF24
 3053 00f1 05       		.byte	0x5
 3054 00f2 07       		.uleb128 0x7
 3055 00f3 1A000000 		.4byte	.LASF25
 3056 00f7 06       		.byte	0x6
 3057 00f8 00       		.byte	0
 3058 00f9 08       		.uleb128 0x8
 3059 00fa 9E010000 		.4byte	.LASF30
 3060 00fe 10       		.byte	0x10
 3061 00ff 04       		.byte	0x4
 3062 0100 10       		.byte	0x10
 3063 0101 36010000 		.4byte	0x136
 3064 0105 09       		.uleb128 0x9
 3065 0106 46000000 		.4byte	.LASF26
 3066 010a 04       		.byte	0x4
 3067 010b 11       		.byte	0x11
 3068 010c BE000000 		.4byte	0xbe
 3069 0110 00       		.byte	0
 3070 0111 09       		.uleb128 0x9
 3071 0112 AD040000 		.4byte	.LASF27
 3072 0116 04       		.byte	0x4
 3073 0117 12       		.byte	0x12
 3074 0118 68000000 		.4byte	0x68
 3075 011c 04       		.byte	0x4
 3076 011d 09       		.uleb128 0x9
 3077 011e B5040000 		.4byte	.LASF28
 3078 0122 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 65


 3079 0123 13       		.byte	0x13
 3080 0124 68000000 		.4byte	0x68
 3081 0128 08       		.byte	0x8
 3082 0129 09       		.uleb128 0x9
 3083 012a FD000000 		.4byte	.LASF29
 3084 012e 04       		.byte	0x4
 3085 012f 14       		.byte	0x14
 3086 0130 96000000 		.4byte	0x96
 3087 0134 0C       		.byte	0xc
 3088 0135 00       		.byte	0
 3089 0136 03       		.uleb128 0x3
 3090 0137 9E010000 		.4byte	.LASF30
 3091 013b 04       		.byte	0x4
 3092 013c 15       		.byte	0x15
 3093 013d F9000000 		.4byte	0xf9
 3094 0141 08       		.uleb128 0x8
 3095 0142 E0010000 		.4byte	.LASF31
 3096 0146 08       		.byte	0x8
 3097 0147 04       		.byte	0x4
 3098 0148 19       		.byte	0x19
 3099 0149 66010000 		.4byte	0x166
 3100 014d 0A       		.uleb128 0xa
 3101 014e 726F7700 		.ascii	"row\000"
 3102 0152 04       		.byte	0x4
 3103 0153 1B       		.byte	0x1b
 3104 0154 68000000 		.4byte	0x68
 3105 0158 00       		.byte	0
 3106 0159 0A       		.uleb128 0xa
 3107 015a 636F6C00 		.ascii	"col\000"
 3108 015e 04       		.byte	0x4
 3109 015f 1C       		.byte	0x1c
 3110 0160 68000000 		.4byte	0x68
 3111 0164 04       		.byte	0x4
 3112 0165 00       		.byte	0
 3113 0166 0B       		.uleb128 0xb
 3114 0167 2F010000 		.4byte	.LASF32
 3115 016b 01       		.byte	0x1
 3116 016c 54       		.byte	0x54
 3117 016d 00000000 		.4byte	.LFB1
 3118 0171 58000000 		.4byte	.LFE1-.LFB1
 3119 0175 01       		.uleb128 0x1
 3120 0176 9C       		.byte	0x9c
 3121 0177 B6010000 		.4byte	0x1b6
 3122 017b 0C       		.uleb128 0xc
 3123 017c 6D617000 		.ascii	"map\000"
 3124 0180 01       		.byte	0x1
 3125 0181 54       		.byte	0x54
 3126 0182 C6010000 		.4byte	0x1c6
 3127 0186 02       		.uleb128 0x2
 3128 0187 91       		.byte	0x91
 3129 0188 6C       		.sleb128 -20
 3130 0189 0D       		.uleb128 0xd
 3131 018a 08000000 		.4byte	.LBB2
 3132 018e 44000000 		.4byte	.LBE2-.LBB2
 3133 0192 0E       		.uleb128 0xe
 3134 0193 6900     		.ascii	"i\000"
 3135 0195 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 66


 3136 0196 56       		.byte	0x56
 3137 0197 68000000 		.4byte	0x68
 3138 019b 02       		.uleb128 0x2
 3139 019c 91       		.byte	0x91
 3140 019d 74       		.sleb128 -12
 3141 019e 0D       		.uleb128 0xd
 3142 019f 0E000000 		.4byte	.LBB3
 3143 01a3 2C000000 		.4byte	.LBE3-.LBB3
 3144 01a7 0E       		.uleb128 0xe
 3145 01a8 6A00     		.ascii	"j\000"
 3146 01aa 01       		.byte	0x1
 3147 01ab 57       		.byte	0x57
 3148 01ac 68000000 		.4byte	0x68
 3149 01b0 02       		.uleb128 0x2
 3150 01b1 91       		.byte	0x91
 3151 01b2 70       		.sleb128 -16
 3152 01b3 00       		.byte	0
 3153 01b4 00       		.byte	0
 3154 01b5 00       		.byte	0
 3155 01b6 0F       		.uleb128 0xf
 3156 01b7 68000000 		.4byte	0x68
 3157 01bb C6010000 		.4byte	0x1c6
 3158 01bf 10       		.uleb128 0x10
 3159 01c0 7D000000 		.4byte	0x7d
 3160 01c4 12       		.byte	0x12
 3161 01c5 00       		.byte	0
 3162 01c6 11       		.uleb128 0x11
 3163 01c7 04       		.byte	0x4
 3164 01c8 B6010000 		.4byte	0x1b6
 3165 01cc 12       		.uleb128 0x12
 3166 01cd 0A030000 		.4byte	.LASF33
 3167 01d1 01       		.byte	0x1
 3168 01d2 5D       		.byte	0x5d
 3169 01d3 00000000 		.4byte	.LFB2
 3170 01d7 60000000 		.4byte	.LFE2-.LFB2
 3171 01db 01       		.uleb128 0x1
 3172 01dc 9C       		.byte	0x9c
 3173 01dd 1C020000 		.4byte	0x21c
 3174 01e1 0C       		.uleb128 0xc
 3175 01e2 6D617000 		.ascii	"map\000"
 3176 01e6 01       		.byte	0x1
 3177 01e7 5D       		.byte	0x5d
 3178 01e8 C6010000 		.4byte	0x1c6
 3179 01ec 02       		.uleb128 0x2
 3180 01ed 91       		.byte	0x91
 3181 01ee 6C       		.sleb128 -20
 3182 01ef 0D       		.uleb128 0xd
 3183 01f0 08000000 		.4byte	.LBB4
 3184 01f4 4E000000 		.4byte	.LBE4-.LBB4
 3185 01f8 0E       		.uleb128 0xe
 3186 01f9 6900     		.ascii	"i\000"
 3187 01fb 01       		.byte	0x1
 3188 01fc 5F       		.byte	0x5f
 3189 01fd 68000000 		.4byte	0x68
 3190 0201 02       		.uleb128 0x2
 3191 0202 91       		.byte	0x91
 3192 0203 74       		.sleb128 -12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 67


 3193 0204 0D       		.uleb128 0xd
 3194 0205 0E000000 		.4byte	.LBB5
 3195 0209 3C000000 		.4byte	.LBE5-.LBB5
 3196 020d 0E       		.uleb128 0xe
 3197 020e 6A00     		.ascii	"j\000"
 3198 0210 01       		.byte	0x1
 3199 0211 60       		.byte	0x60
 3200 0212 68000000 		.4byte	0x68
 3201 0216 02       		.uleb128 0x2
 3202 0217 91       		.byte	0x91
 3203 0218 70       		.sleb128 -16
 3204 0219 00       		.byte	0
 3205 021a 00       		.byte	0
 3206 021b 00       		.byte	0
 3207 021c 13       		.uleb128 0x13
 3208 021d 24000000 		.4byte	.LASF64
 3209 0221 01       		.byte	0x1
 3210 0222 6B       		.byte	0x6b
 3211 0223 78020000 		.4byte	0x278
 3212 0227 00000000 		.4byte	.LFB3
 3213 022b 56000000 		.4byte	.LFE3-.LFB3
 3214 022f 01       		.uleb128 0x1
 3215 0230 9C       		.byte	0x9c
 3216 0231 78020000 		.4byte	0x278
 3217 0235 0C       		.uleb128 0xc
 3218 0236 7200     		.ascii	"r\000"
 3219 0238 01       		.byte	0x1
 3220 0239 6B       		.byte	0x6b
 3221 023a 68000000 		.4byte	0x68
 3222 023e 02       		.uleb128 0x2
 3223 023f 91       		.byte	0x91
 3224 0240 74       		.sleb128 -12
 3225 0241 0C       		.uleb128 0xc
 3226 0242 6300     		.ascii	"c\000"
 3227 0244 01       		.byte	0x1
 3228 0245 6B       		.byte	0x6b
 3229 0246 68000000 		.4byte	0x68
 3230 024a 02       		.uleb128 0x2
 3231 024b 91       		.byte	0x91
 3232 024c 70       		.sleb128 -16
 3233 024d 14       		.uleb128 0x14
 3234 024e 1F000000 		.4byte	.LASF34
 3235 0252 01       		.byte	0x1
 3236 0253 6B       		.byte	0x6b
 3237 0254 68000000 		.4byte	0x68
 3238 0258 02       		.uleb128 0x2
 3239 0259 91       		.byte	0x91
 3240 025a 6C       		.sleb128 -20
 3241 025b 14       		.uleb128 0x14
 3242 025c 9F040000 		.4byte	.LASF35
 3243 0260 01       		.byte	0x1
 3244 0261 6B       		.byte	0x6b
 3245 0262 68000000 		.4byte	0x68
 3246 0266 02       		.uleb128 0x2
 3247 0267 91       		.byte	0x91
 3248 0268 68       		.sleb128 -24
 3249 0269 0C       		.uleb128 0xc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 68


 3250 026a 6D617000 		.ascii	"map\000"
 3251 026e 01       		.byte	0x1
 3252 026f 6B       		.byte	0x6b
 3253 0270 C6010000 		.4byte	0x1c6
 3254 0274 02       		.uleb128 0x2
 3255 0275 91       		.byte	0x91
 3256 0276 00       		.sleb128 0
 3257 0277 00       		.byte	0
 3258 0278 02       		.uleb128 0x2
 3259 0279 01       		.byte	0x1
 3260 027a 02       		.byte	0x2
 3261 027b 20030000 		.4byte	.LASF36
 3262 027f 0B       		.uleb128 0xb
 3263 0280 11000000 		.4byte	.LASF37
 3264 0284 01       		.byte	0x1
 3265 0285 6F       		.byte	0x6f
 3266 0286 00000000 		.4byte	.LFB4
 3267 028a 4C090000 		.4byte	.LFE4-.LFB4
 3268 028e 01       		.uleb128 0x1
 3269 028f 9C       		.byte	0x9c
 3270 0290 CD040000 		.4byte	0x4cd
 3271 0294 0C       		.uleb128 0xc
 3272 0295 6D617000 		.ascii	"map\000"
 3273 0299 01       		.byte	0x1
 3274 029a 6F       		.byte	0x6f
 3275 029b C6010000 		.4byte	0x1c6
 3276 029f 03       		.uleb128 0x3
 3277 02a0 91       		.byte	0x91
 3278 02a1 BC52     		.sleb128 -5828
 3279 02a3 14       		.uleb128 0x14
 3280 02a4 21010000 		.4byte	.LASF38
 3281 02a8 01       		.byte	0x1
 3282 02a9 6F       		.byte	0x6f
 3283 02aa 41010000 		.4byte	0x141
 3284 02ae 03       		.uleb128 0x3
 3285 02af 91       		.byte	0x91
 3286 02b0 B452     		.sleb128 -5836
 3287 02b2 14       		.uleb128 0x14
 3288 02b3 BE010000 		.4byte	.LASF39
 3289 02b7 01       		.byte	0x1
 3290 02b8 6F       		.byte	0x6f
 3291 02b9 41010000 		.4byte	0x141
 3292 02bd 02       		.uleb128 0x2
 3293 02be 91       		.byte	0x91
 3294 02bf 7C       		.sleb128 -4
 3295 02c0 15       		.uleb128 0x15
 3296 02c1 B5030000 		.4byte	.LASF40
 3297 02c5 01       		.byte	0x1
 3298 02c6 71       		.byte	0x71
 3299 02c7 CD040000 		.4byte	0x4cd
 3300 02cb 03       		.uleb128 0x3
 3301 02cc 91       		.byte	0x91
 3302 02cd 9C76     		.sleb128 -1252
 3303 02cf 08       		.uleb128 0x8
 3304 02d0 54040000 		.4byte	.LASF41
 3305 02d4 0C       		.byte	0xc
 3306 02d5 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 69


 3307 02d6 78       		.byte	0x78
 3308 02d7 F4020000 		.4byte	0x2f4
 3309 02db 09       		.uleb128 0x9
 3310 02dc AC030000 		.4byte	.LASF42
 3311 02e0 01       		.byte	0x1
 3312 02e1 79       		.byte	0x79
 3313 02e2 41010000 		.4byte	0x141
 3314 02e6 00       		.byte	0
 3315 02e7 09       		.uleb128 0x9
 3316 02e8 E8030000 		.4byte	.LASF43
 3317 02ec 01       		.byte	0x1
 3318 02ed 7A       		.byte	0x7a
 3319 02ee 68000000 		.4byte	0x68
 3320 02f2 08       		.byte	0x8
 3321 02f3 00       		.byte	0
 3322 02f4 0E       		.uleb128 0xe
 3323 02f5 707100   		.ascii	"pq\000"
 3324 02f8 01       		.byte	0x1
 3325 02f9 7D       		.byte	0x7d
 3326 02fa E3040000 		.4byte	0x4e3
 3327 02fe 03       		.uleb128 0x3
 3328 02ff 91       		.byte	0x91
 3329 0300 C05B     		.sleb128 -4672
 3330 0302 15       		.uleb128 0x15
 3331 0303 98020000 		.4byte	.LASF44
 3332 0307 01       		.byte	0x1
 3333 0308 7E       		.byte	0x7e
 3334 0309 68000000 		.4byte	0x68
 3335 030d 02       		.uleb128 0x2
 3336 030e 91       		.byte	0x91
 3337 030f 5C       		.sleb128 -36
 3338 0310 15       		.uleb128 0x15
 3339 0311 11010000 		.4byte	.LASF45
 3340 0315 01       		.byte	0x1
 3341 0316 81       		.byte	0x81
 3342 0317 CD040000 		.4byte	0x4cd
 3343 031b 03       		.uleb128 0x3
 3344 031c 91       		.byte	0x91
 3345 031d CC52     		.sleb128 -5812
 3346 031f 15       		.uleb128 0x15
 3347 0320 DE000000 		.4byte	.LASF46
 3348 0324 01       		.byte	0x1
 3349 0325 8A       		.byte	0x8a
 3350 0326 68000000 		.4byte	0x68
 3351 032a 02       		.uleb128 0x2
 3352 032b 91       		.byte	0x91
 3353 032c 50       		.sleb128 -48
 3354 032d 15       		.uleb128 0x15
 3355 032e 40020000 		.4byte	.LASF47
 3356 0332 01       		.byte	0x1
 3357 0333 C1       		.byte	0xc1
 3358 0334 68000000 		.4byte	0x68
 3359 0338 02       		.uleb128 0x2
 3360 0339 91       		.byte	0x91
 3361 033a 40       		.sleb128 -64
 3362 033b 15       		.uleb128 0x15
 3363 033c A3030000 		.4byte	.LASF48
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 70


 3364 0340 01       		.byte	0x1
 3365 0341 C4       		.byte	0xc4
 3366 0342 F4040000 		.4byte	0x4f4
 3367 0346 03       		.uleb128 0x3
 3368 0347 91       		.byte	0x91
 3369 0348 987F     		.sleb128 -104
 3370 034a 15       		.uleb128 0x15
 3371 034b CD020000 		.4byte	.LASF49
 3372 034f 01       		.byte	0x1
 3373 0350 C5       		.byte	0xc5
 3374 0351 68000000 		.4byte	0x68
 3375 0355 03       		.uleb128 0x3
 3376 0356 91       		.byte	0x91
 3377 0357 BC7F     		.sleb128 -68
 3378 0359 15       		.uleb128 0x15
 3379 035a AA010000 		.4byte	.LASF50
 3380 035e 01       		.byte	0x1
 3381 035f C6       		.byte	0xc6
 3382 0360 68000000 		.4byte	0x68
 3383 0364 03       		.uleb128 0x3
 3384 0365 91       		.byte	0x91
 3385 0366 B87F     		.sleb128 -72
 3386 0368 15       		.uleb128 0x15
 3387 0369 00030000 		.4byte	.LASF51
 3388 036d 01       		.byte	0x1
 3389 036e CD       		.byte	0xcd
 3390 036f 68000000 		.4byte	0x68
 3391 0373 03       		.uleb128 0x3
 3392 0374 91       		.byte	0x91
 3393 0375 B47F     		.sleb128 -76
 3394 0377 16       		.uleb128 0x16
 3395 0378 28000000 		.4byte	.LBB6
 3396 037c 92000000 		.4byte	.LBE6-.LBB6
 3397 0380 A7030000 		.4byte	0x3a7
 3398 0384 0E       		.uleb128 0xe
 3399 0385 6900     		.ascii	"i\000"
 3400 0387 01       		.byte	0x1
 3401 0388 72       		.byte	0x72
 3402 0389 68000000 		.4byte	0x68
 3403 038d 02       		.uleb128 0x2
 3404 038e 91       		.byte	0x91
 3405 038f 64       		.sleb128 -28
 3406 0390 0D       		.uleb128 0xd
 3407 0391 36000000 		.4byte	.LBB7
 3408 0395 60000000 		.4byte	.LBE7-.LBB7
 3409 0399 0E       		.uleb128 0xe
 3410 039a 6A00     		.ascii	"j\000"
 3411 039c 01       		.byte	0x1
 3412 039d 73       		.byte	0x73
 3413 039e 68000000 		.4byte	0x68
 3414 03a2 02       		.uleb128 0x2
 3415 03a3 91       		.byte	0x91
 3416 03a4 60       		.sleb128 -32
 3417 03a5 00       		.byte	0
 3418 03a6 00       		.byte	0
 3419 03a7 16       		.uleb128 0x16
 3420 03a8 C6000000 		.4byte	.LBB8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 71


 3421 03ac 92000000 		.4byte	.LBE8-.LBB8
 3422 03b0 D7030000 		.4byte	0x3d7
 3423 03b4 0E       		.uleb128 0xe
 3424 03b5 6900     		.ascii	"i\000"
 3425 03b7 01       		.byte	0x1
 3426 03b8 84       		.byte	0x84
 3427 03b9 68000000 		.4byte	0x68
 3428 03bd 02       		.uleb128 0x2
 3429 03be 91       		.byte	0x91
 3430 03bf 58       		.sleb128 -40
 3431 03c0 0D       		.uleb128 0xd
 3432 03c1 D4000000 		.4byte	.LBB9
 3433 03c5 60000000 		.4byte	.LBE9-.LBB9
 3434 03c9 0E       		.uleb128 0xe
 3435 03ca 6A00     		.ascii	"j\000"
 3436 03cc 01       		.byte	0x1
 3437 03cd 85       		.byte	0x85
 3438 03ce 68000000 		.4byte	0x68
 3439 03d2 02       		.uleb128 0x2
 3440 03d3 91       		.byte	0x91
 3441 03d4 54       		.sleb128 -44
 3442 03d5 00       		.byte	0
 3443 03d6 00       		.byte	0
 3444 03d7 17       		.uleb128 0x17
 3445 03d8 00000000 		.4byte	.Ldebug_ranges0+0
 3446 03dc 8D040000 		.4byte	0x48d
 3447 03e0 0E       		.uleb128 0xe
 3448 03e1 69647800 		.ascii	"idx\000"
 3449 03e5 01       		.byte	0x1
 3450 03e6 94       		.byte	0x94
 3451 03e7 68000000 		.4byte	0x68
 3452 03eb 02       		.uleb128 0x2
 3453 03ec 91       		.byte	0x91
 3454 03ed 4C       		.sleb128 -52
 3455 03ee 15       		.uleb128 0x15
 3456 03ef F8020000 		.4byte	.LASF52
 3457 03f3 01       		.byte	0x1
 3458 03f4 9A       		.byte	0x9a
 3459 03f5 CF020000 		.4byte	0x2cf
 3460 03f9 03       		.uleb128 0x3
 3461 03fa 91       		.byte	0x91
 3462 03fb C052     		.sleb128 -5824
 3463 03fd 0E       		.uleb128 0xe
 3464 03fe 726F7700 		.ascii	"row\000"
 3465 0402 01       		.byte	0x1
 3466 0403 9E       		.byte	0x9e
 3467 0404 68000000 		.4byte	0x68
 3468 0408 03       		.uleb128 0x3
 3469 0409 91       		.byte	0x91
 3470 040a AC7F     		.sleb128 -84
 3471 040c 0E       		.uleb128 0xe
 3472 040d 636F6C00 		.ascii	"col\000"
 3473 0411 01       		.byte	0x1
 3474 0412 9F       		.byte	0x9f
 3475 0413 68000000 		.4byte	0x68
 3476 0417 03       		.uleb128 0x3
 3477 0418 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 72


 3478 0419 A87F     		.sleb128 -88
 3479 041b 16       		.uleb128 0x16
 3480 041c 02020000 		.4byte	.LBB11
 3481 0420 90000000 		.4byte	.LBE11-.LBB11
 3482 0424 35040000 		.4byte	0x435
 3483 0428 0E       		.uleb128 0xe
 3484 0429 6900     		.ascii	"i\000"
 3485 042b 01       		.byte	0x1
 3486 042c 95       		.byte	0x95
 3487 042d 68000000 		.4byte	0x68
 3488 0431 02       		.uleb128 0x2
 3489 0432 91       		.byte	0x91
 3490 0433 48       		.sleb128 -56
 3491 0434 00       		.byte	0
 3492 0435 0D       		.uleb128 0xd
 3493 0436 C4030000 		.4byte	.LBB12
 3494 043a 1E020000 		.4byte	.LBE12-.LBB12
 3495 043e 0E       		.uleb128 0xe
 3496 043f 6900     		.ascii	"i\000"
 3497 0441 01       		.byte	0x1
 3498 0442 A8       		.byte	0xa8
 3499 0443 68000000 		.4byte	0x68
 3500 0447 02       		.uleb128 0x2
 3501 0448 91       		.byte	0x91
 3502 0449 44       		.sleb128 -60
 3503 044a 0D       		.uleb128 0xd
 3504 044b D2030000 		.4byte	.LBB13
 3505 044f EA010000 		.4byte	.LBE13-.LBB13
 3506 0453 15       		.uleb128 0x15
 3507 0454 91020000 		.4byte	.LASF53
 3508 0458 01       		.byte	0x1
 3509 0459 A9       		.byte	0xa9
 3510 045a 68000000 		.4byte	0x68
 3511 045e 03       		.uleb128 0x3
 3512 045f 91       		.byte	0x91
 3513 0460 A47F     		.sleb128 -92
 3514 0462 15       		.uleb128 0x15
 3515 0463 97010000 		.4byte	.LASF54
 3516 0467 01       		.byte	0x1
 3517 0468 AA       		.byte	0xaa
 3518 0469 68000000 		.4byte	0x68
 3519 046d 03       		.uleb128 0x3
 3520 046e 91       		.byte	0x91
 3521 046f A07F     		.sleb128 -96
 3522 0471 0D       		.uleb128 0xd
 3523 0472 80040000 		.4byte	.LBB14
 3524 0476 3C010000 		.4byte	.LBE14-.LBB14
 3525 047a 15       		.uleb128 0x15
 3526 047b 18040000 		.4byte	.LASF55
 3527 047f 01       		.byte	0x1
 3528 0480 AD       		.byte	0xad
 3529 0481 68000000 		.4byte	0x68
 3530 0485 03       		.uleb128 0x3
 3531 0486 91       		.byte	0x91
 3532 0487 9C7F     		.sleb128 -100
 3533 0489 00       		.byte	0
 3534 048a 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 73


 3535 048b 00       		.byte	0
 3536 048c 00       		.byte	0
 3537 048d 0D       		.uleb128 0xd
 3538 048e 0A070000 		.4byte	.LBB16
 3539 0492 18020000 		.4byte	.LBE16-.LBB16
 3540 0496 0E       		.uleb128 0xe
 3541 0497 6900     		.ascii	"i\000"
 3542 0499 01       		.byte	0x1
 3543 049a D1       		.byte	0xd1
 3544 049b 68000000 		.4byte	0x68
 3545 049f 03       		.uleb128 0x3
 3546 04a0 91       		.byte	0x91
 3547 04a1 B07F     		.sleb128 -80
 3548 04a3 0D       		.uleb128 0xd
 3549 04a4 1C070000 		.4byte	.LBB17
 3550 04a8 EC010000 		.4byte	.LBE17-.LBB17
 3551 04ac 15       		.uleb128 0x15
 3552 04ad 91020000 		.4byte	.LASF53
 3553 04b1 01       		.byte	0x1
 3554 04b2 D2       		.byte	0xd2
 3555 04b3 68000000 		.4byte	0x68
 3556 04b7 03       		.uleb128 0x3
 3557 04b8 91       		.byte	0x91
 3558 04b9 947F     		.sleb128 -108
 3559 04bb 15       		.uleb128 0x15
 3560 04bc 97010000 		.4byte	.LASF54
 3561 04c0 01       		.byte	0x1
 3562 04c1 D3       		.byte	0xd3
 3563 04c2 68000000 		.4byte	0x68
 3564 04c6 03       		.uleb128 0x3
 3565 04c7 91       		.byte	0x91
 3566 04c8 907F     		.sleb128 -112
 3567 04ca 00       		.byte	0
 3568 04cb 00       		.byte	0
 3569 04cc 00       		.byte	0
 3570 04cd 0F       		.uleb128 0xf
 3571 04ce 68000000 		.4byte	0x68
 3572 04d2 E3040000 		.4byte	0x4e3
 3573 04d6 10       		.uleb128 0x10
 3574 04d7 7D000000 		.4byte	0x7d
 3575 04db 0E       		.byte	0xe
 3576 04dc 10       		.uleb128 0x10
 3577 04dd 7D000000 		.4byte	0x7d
 3578 04e1 12       		.byte	0x12
 3579 04e2 00       		.byte	0
 3580 04e3 0F       		.uleb128 0xf
 3581 04e4 CF020000 		.4byte	0x2cf
 3582 04e8 F4040000 		.4byte	0x4f4
 3583 04ec 18       		.uleb128 0x18
 3584 04ed 7D000000 		.4byte	0x7d
 3585 04f1 1C01     		.2byte	0x11c
 3586 04f3 00       		.byte	0
 3587 04f4 11       		.uleb128 0x11
 3588 04f5 04       		.byte	0x4
 3589 04f6 41010000 		.4byte	0x141
 3590 04fa 0B       		.uleb128 0xb
 3591 04fb 9F020000 		.4byte	.LASF56
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 74


 3592 04ff 01       		.byte	0x1
 3593 0500 F2       		.byte	0xf2
 3594 0501 00000000 		.4byte	.LFB5
 3595 0505 48040000 		.4byte	.LFE5-.LFB5
 3596 0509 01       		.uleb128 0x1
 3597 050a 9C       		.byte	0x9c
 3598 050b C1050000 		.4byte	0x5c1
 3599 050f 0C       		.uleb128 0xc
 3600 0510 6D617000 		.ascii	"map\000"
 3601 0514 01       		.byte	0x1
 3602 0515 F2       		.byte	0xf2
 3603 0516 C6010000 		.4byte	0x1c6
 3604 051a 02       		.uleb128 0x2
 3605 051b 91       		.byte	0x91
 3606 051c 54       		.sleb128 -44
 3607 051d 14       		.uleb128 0x14
 3608 051e 90030000 		.4byte	.LASF57
 3609 0522 01       		.byte	0x1
 3610 0523 F2       		.byte	0xf2
 3611 0524 68000000 		.4byte	0x68
 3612 0528 02       		.uleb128 0x2
 3613 0529 91       		.byte	0x91
 3614 052a 50       		.sleb128 -48
 3615 052b 14       		.uleb128 0x14
 3616 052c 62040000 		.4byte	.LASF58
 3617 0530 01       		.byte	0x1
 3618 0531 F2       		.byte	0xf2
 3619 0532 41010000 		.4byte	0x141
 3620 0536 02       		.uleb128 0x2
 3621 0537 91       		.byte	0x91
 3622 0538 48       		.sleb128 -56
 3623 0539 14       		.uleb128 0x14
 3624 053a 71030000 		.4byte	.LASF59
 3625 053e 01       		.byte	0x1
 3626 053f F2       		.byte	0xf2
 3627 0540 41010000 		.4byte	0x141
 3628 0544 02       		.uleb128 0x2
 3629 0545 91       		.byte	0x91
 3630 0546 00       		.sleb128 0
 3631 0547 15       		.uleb128 0x15
 3632 0548 CD020000 		.4byte	.LASF49
 3633 054c 01       		.byte	0x1
 3634 054d F3       		.byte	0xf3
 3635 054e 68000000 		.4byte	0x68
 3636 0552 02       		.uleb128 0x2
 3637 0553 91       		.byte	0x91
 3638 0554 74       		.sleb128 -12
 3639 0555 15       		.uleb128 0x15
 3640 0556 AA010000 		.4byte	.LASF50
 3641 055a 01       		.byte	0x1
 3642 055b F4       		.byte	0xf4
 3643 055c 68000000 		.4byte	0x68
 3644 0560 02       		.uleb128 0x2
 3645 0561 91       		.byte	0x91
 3646 0562 70       		.sleb128 -16
 3647 0563 15       		.uleb128 0x15
 3648 0564 99030000 		.4byte	.LASF60
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 75


 3649 0568 01       		.byte	0x1
 3650 0569 F5       		.byte	0xf5
 3651 056a 68000000 		.4byte	0x68
 3652 056e 02       		.uleb128 0x2
 3653 056f 91       		.byte	0x91
 3654 0570 6C       		.sleb128 -20
 3655 0571 15       		.uleb128 0x15
 3656 0572 5F020000 		.4byte	.LASF61
 3657 0576 01       		.byte	0x1
 3658 0577 F6       		.byte	0xf6
 3659 0578 68000000 		.4byte	0x68
 3660 057c 02       		.uleb128 0x2
 3661 057d 91       		.byte	0x91
 3662 057e 5C       		.sleb128 -36
 3663 057f 16       		.uleb128 0x16
 3664 0580 2E000000 		.4byte	.LBB18
 3665 0584 8A030000 		.4byte	.LBE18-.LBB18
 3666 0588 A9050000 		.4byte	0x5a9
 3667 058c 15       		.uleb128 0x15
 3668 058d 13030000 		.4byte	.LASF62
 3669 0591 01       		.byte	0x1
 3670 0592 FC       		.byte	0xfc
 3671 0593 BE000000 		.4byte	0xbe
 3672 0597 02       		.uleb128 0x2
 3673 0598 91       		.byte	0x91
 3674 0599 6B       		.sleb128 -21
 3675 059a 15       		.uleb128 0x15
 3676 059b A4040000 		.4byte	.LASF63
 3677 059f 01       		.byte	0x1
 3678 05a0 FD       		.byte	0xfd
 3679 05a1 68000000 		.4byte	0x68
 3680 05a5 02       		.uleb128 0x2
 3681 05a6 91       		.byte	0x91
 3682 05a7 64       		.sleb128 -28
 3683 05a8 00       		.byte	0
 3684 05a9 0D       		.uleb128 0xd
 3685 05aa C0030000 		.4byte	.LBB19
 3686 05ae 58000000 		.4byte	.LBE19-.LBB19
 3687 05b2 19       		.uleb128 0x19
 3688 05b3 6900     		.ascii	"i\000"
 3689 05b5 01       		.byte	0x1
 3690 05b6 8F01     		.2byte	0x18f
 3691 05b8 68000000 		.4byte	0x68
 3692 05bc 02       		.uleb128 0x2
 3693 05bd 91       		.byte	0x91
 3694 05be 60       		.sleb128 -32
 3695 05bf 00       		.byte	0
 3696 05c0 00       		.byte	0
 3697 05c1 1A       		.uleb128 0x1a
 3698 05c2 04020000 		.4byte	.LASF65
 3699 05c6 01       		.byte	0x1
 3700 05c7 9801     		.2byte	0x198
 3701 05c9 8B000000 		.4byte	0x8b
 3702 05cd 00000000 		.4byte	.LFB6
 3703 05d1 0C010000 		.4byte	.LFE6-.LFB6
 3704 05d5 01       		.uleb128 0x1
 3705 05d6 9C       		.byte	0x9c
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 76


 3706 05d7 FA050000 		.4byte	0x5fa
 3707 05db 1B       		.uleb128 0x1b
 3708 05dc CD020000 		.4byte	.LASF49
 3709 05e0 01       		.byte	0x1
 3710 05e1 9801     		.2byte	0x198
 3711 05e3 68000000 		.4byte	0x68
 3712 05e7 02       		.uleb128 0x2
 3713 05e8 91       		.byte	0x91
 3714 05e9 74       		.sleb128 -12
 3715 05ea 1B       		.uleb128 0x1b
 3716 05eb AA010000 		.4byte	.LASF50
 3717 05ef 01       		.byte	0x1
 3718 05f0 9801     		.2byte	0x198
 3719 05f2 68000000 		.4byte	0x68
 3720 05f6 02       		.uleb128 0x2
 3721 05f7 91       		.byte	0x91
 3722 05f8 70       		.sleb128 -16
 3723 05f9 00       		.byte	0
 3724 05fa 1C       		.uleb128 0x1c
 3725 05fb D8020000 		.4byte	.LASF66
 3726 05ff 01       		.byte	0x1
 3727 0600 A901     		.2byte	0x1a9
 3728 0602 00000000 		.4byte	.LFB7
 3729 0606 24010000 		.4byte	.LFE7-.LFB7
 3730 060a 01       		.uleb128 0x1
 3731 060b 9C       		.byte	0x9c
 3732 060c 3E060000 		.4byte	0x63e
 3733 0610 1B       		.uleb128 0x1b
 3734 0611 32040000 		.4byte	.LASF67
 3735 0615 01       		.byte	0x1
 3736 0616 A901     		.2byte	0x1a9
 3737 0618 96000000 		.4byte	0x96
 3738 061c 02       		.uleb128 0x2
 3739 061d 91       		.byte	0x91
 3740 061e 77       		.sleb128 -9
 3741 061f 1B       		.uleb128 0x1b
 3742 0620 CD020000 		.4byte	.LASF49
 3743 0624 01       		.byte	0x1
 3744 0625 A901     		.2byte	0x1a9
 3745 0627 68000000 		.4byte	0x68
 3746 062b 02       		.uleb128 0x2
 3747 062c 91       		.byte	0x91
 3748 062d 70       		.sleb128 -16
 3749 062e 1B       		.uleb128 0x1b
 3750 062f AA010000 		.4byte	.LASF50
 3751 0633 01       		.byte	0x1
 3752 0634 A901     		.2byte	0x1a9
 3753 0636 68000000 		.4byte	0x68
 3754 063a 02       		.uleb128 0x2
 3755 063b 91       		.byte	0x91
 3756 063c 6C       		.sleb128 -20
 3757 063d 00       		.byte	0
 3758 063e 1A       		.uleb128 0x1a
 3759 063f 49030000 		.4byte	.LASF68
 3760 0643 01       		.byte	0x1
 3761 0644 DD01     		.2byte	0x1dd
 3762 0646 8B000000 		.4byte	0x8b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 77


 3763 064a 00000000 		.4byte	.LFB8
 3764 064e 9C000000 		.4byte	.LFE8-.LFB8
 3765 0652 01       		.uleb128 0x1
 3766 0653 9C       		.byte	0x9c
 3767 0654 77060000 		.4byte	0x677
 3768 0658 1B       		.uleb128 0x1b
 3769 0659 E9010000 		.4byte	.LASF69
 3770 065d 01       		.byte	0x1
 3771 065e DD01     		.2byte	0x1dd
 3772 0660 68000000 		.4byte	0x68
 3773 0664 02       		.uleb128 0x2
 3774 0665 91       		.byte	0x91
 3775 0666 74       		.sleb128 -12
 3776 0667 1B       		.uleb128 0x1b
 3777 0668 95040000 		.4byte	.LASF70
 3778 066c 01       		.byte	0x1
 3779 066d DD01     		.2byte	0x1dd
 3780 066f 68000000 		.4byte	0x68
 3781 0673 02       		.uleb128 0x2
 3782 0674 91       		.byte	0x91
 3783 0675 70       		.sleb128 -16
 3784 0676 00       		.byte	0
 3785 0677 1D       		.uleb128 0x1d
 3786 0678 78040000 		.4byte	.LASF82
 3787 067c 01       		.byte	0x1
 3788 067d EC01     		.2byte	0x1ec
 3789 067f 8B000000 		.4byte	0x8b
 3790 0683 00000000 		.4byte	.LFB9
 3791 0687 18000000 		.4byte	.LFE9-.LFB9
 3792 068b 01       		.uleb128 0x1
 3793 068c 9C       		.byte	0x9c
 3794 068d 1E       		.uleb128 0x1e
 3795 068e 5E030000 		.4byte	.LASF71
 3796 0692 01       		.byte	0x1
 3797 0693 F001     		.2byte	0x1f0
 3798 0695 F1060000 		.4byte	0x6f1
 3799 0699 00000000 		.4byte	.LFB10
 3800 069d 78000000 		.4byte	.LFE10-.LFB10
 3801 06a1 01       		.uleb128 0x1
 3802 06a2 9C       		.byte	0x9c
 3803 06a3 F1060000 		.4byte	0x6f1
 3804 06a7 1F       		.uleb128 0x1f
 3805 06a8 6D617000 		.ascii	"map\000"
 3806 06ac 01       		.byte	0x1
 3807 06ad F001     		.2byte	0x1f0
 3808 06af C6010000 		.4byte	0x1c6
 3809 06b3 02       		.uleb128 0x2
 3810 06b4 91       		.byte	0x91
 3811 06b5 5C       		.sleb128 -36
 3812 06b6 1B       		.uleb128 0x1b
 3813 06b7 F1030000 		.4byte	.LASF72
 3814 06bb 01       		.byte	0x1
 3815 06bc F001     		.2byte	0x1f0
 3816 06be 07070000 		.4byte	0x707
 3817 06c2 02       		.uleb128 0x2
 3818 06c3 91       		.byte	0x91
 3819 06c4 58       		.sleb128 -40
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 78


 3820 06c5 1F       		.uleb128 0x1f
 3821 06c6 6900     		.ascii	"i\000"
 3822 06c8 01       		.byte	0x1
 3823 06c9 F001     		.2byte	0x1f0
 3824 06cb 68000000 		.4byte	0x68
 3825 06cf 02       		.uleb128 0x2
 3826 06d0 91       		.byte	0x91
 3827 06d1 54       		.sleb128 -44
 3828 06d2 20       		.uleb128 0x20
 3829 06d3 62040000 		.4byte	.LASF58
 3830 06d7 01       		.byte	0x1
 3831 06d8 F201     		.2byte	0x1f2
 3832 06da 41010000 		.4byte	0x141
 3833 06de 02       		.uleb128 0x2
 3834 06df 91       		.byte	0x91
 3835 06e0 68       		.sleb128 -24
 3836 06e1 20       		.uleb128 0x20
 3837 06e2 71030000 		.4byte	.LASF59
 3838 06e6 01       		.byte	0x1
 3839 06e7 F201     		.2byte	0x1f2
 3840 06e9 41010000 		.4byte	0x141
 3841 06ed 02       		.uleb128 0x2
 3842 06ee 91       		.byte	0x91
 3843 06ef 60       		.sleb128 -32
 3844 06f0 00       		.byte	0
 3845 06f1 11       		.uleb128 0x11
 3846 06f2 04       		.byte	0x4
 3847 06f3 36010000 		.4byte	0x136
 3848 06f7 0F       		.uleb128 0xf
 3849 06f8 68000000 		.4byte	0x68
 3850 06fc 07070000 		.4byte	0x707
 3851 0700 10       		.uleb128 0x10
 3852 0701 7D000000 		.4byte	0x7d
 3853 0705 01       		.byte	0x1
 3854 0706 00       		.byte	0
 3855 0707 11       		.uleb128 0x11
 3856 0708 04       		.byte	0x4
 3857 0709 F7060000 		.4byte	0x6f7
 3858 070d 0F       		.uleb128 0xf
 3859 070e 36010000 		.4byte	0x136
 3860 0712 1E070000 		.4byte	0x71e
 3861 0716 18       		.uleb128 0x18
 3862 0717 7D000000 		.4byte	0x7d
 3863 071b 1C01     		.2byte	0x11c
 3864 071d 00       		.byte	0
 3865 071e 15       		.uleb128 0x15
 3866 071f F3010000 		.4byte	.LASF73
 3867 0723 01       		.byte	0x1
 3868 0724 18       		.byte	0x18
 3869 0725 0D070000 		.4byte	0x70d
 3870 0729 05       		.uleb128 0x5
 3871 072a 03       		.byte	0x3
 3872 072b 00000000 		.4byte	instructionsList
 3873 072f 15       		.uleb128 0x15
 3874 0730 90030000 		.4byte	.LASF57
 3875 0734 01       		.byte	0x1
 3876 0735 19       		.byte	0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 79


 3877 0736 68000000 		.4byte	0x68
 3878 073a 05       		.uleb128 0x5
 3879 073b 03       		.byte	0x3
 3880 073c D0110000 		.4byte	numSteps
 3881 0740 21       		.uleb128 0x21
 3882 0741 6D617000 		.ascii	"map\000"
 3883 0745 01       		.byte	0x1
 3884 0746 22       		.byte	0x22
 3885 0747 CD040000 		.4byte	0x4cd
 3886 074b 05       		.uleb128 0x5
 3887 074c 03       		.byte	0x3
 3888 074d 00000000 		.4byte	map
 3889 0751 0F       		.uleb128 0xf
 3890 0752 68000000 		.4byte	0x68
 3891 0756 67070000 		.4byte	0x767
 3892 075a 10       		.uleb128 0x10
 3893 075b 7D000000 		.4byte	0x7d
 3894 075f 04       		.byte	0x4
 3895 0760 10       		.uleb128 0x10
 3896 0761 7D000000 		.4byte	0x7d
 3897 0765 01       		.byte	0x1
 3898 0766 00       		.byte	0
 3899 0767 22       		.uleb128 0x22
 3900 0768 F1030000 		.4byte	.LASF72
 3901 076c 01       		.byte	0x1
 3902 076d 4B       		.byte	0x4b
 3903 076e 51070000 		.4byte	0x751
 3904 0772 05       		.uleb128 0x5
 3905 0773 03       		.byte	0x3
 3906 0774 00000000 		.4byte	food_list
 3907 0778 22       		.uleb128 0x22
 3908 0779 CF030000 		.4byte	.LASF74
 3909 077d 01       		.byte	0x1
 3910 077e 16       		.byte	0x16
 3911 077f 96000000 		.4byte	0x96
 3912 0783 05       		.uleb128 0x5
 3913 0784 03       		.byte	0x3
 3914 0785 00000000 		.4byte	previousRobotOrientation
 3915 0789 22       		.uleb128 0x22
 3916 078a 00040000 		.4byte	.LASF75
 3917 078e 01       		.byte	0x1
 3918 078f 16       		.byte	0x16
 3919 0790 96000000 		.4byte	0x96
 3920 0794 05       		.uleb128 0x5
 3921 0795 03       		.byte	0x3
 3922 0796 00000000 		.4byte	currentRobotOrientation
 3923 079a 22       		.uleb128 0x22
 3924 079b C5030000 		.4byte	.LASF76
 3925 079f 01       		.byte	0x1
 3926 07a0 49       		.byte	0x49
 3927 07a1 F7060000 		.4byte	0x6f7
 3928 07a5 05       		.uleb128 0x5
 3929 07a6 03       		.byte	0x3
 3930 07a7 00000000 		.4byte	start_pos
 3931 07ab 0F       		.uleb128 0xf
 3932 07ac 68000000 		.4byte	0x68
 3933 07b0 C2070000 		.4byte	0x7c2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 80


 3934 07b4 18       		.uleb128 0x18
 3935 07b5 7D000000 		.4byte	0x7d
 3936 07b9 1C01     		.2byte	0x11c
 3937 07bb 10       		.uleb128 0x10
 3938 07bc 7D000000 		.4byte	0x7d
 3939 07c0 01       		.byte	0x1
 3940 07c1 00       		.byte	0
 3941 07c2 22       		.uleb128 0x22
 3942 07c3 17020000 		.4byte	.LASF77
 3943 07c7 01       		.byte	0x1
 3944 07c8 67       		.byte	0x67
 3945 07c9 AB070000 		.4byte	0x7ab
 3946 07cd 05       		.uleb128 0x5
 3947 07ce 03       		.byte	0x3
 3948 07cf 00000000 		.4byte	list_of_optimal_coordinates
 3949 07d3 0F       		.uleb128 0xf
 3950 07d4 41010000 		.4byte	0x141
 3951 07d8 E3070000 		.4byte	0x7e3
 3952 07dc 10       		.uleb128 0x10
 3953 07dd 7D000000 		.4byte	0x7d
 3954 07e1 03       		.byte	0x3
 3955 07e2 00       		.byte	0
 3956 07e3 22       		.uleb128 0x22
 3957 07e4 8F040000 		.4byte	.LASF78
 3958 07e8 01       		.byte	0x1
 3959 07e9 69       		.byte	0x69
 3960 07ea D3070000 		.4byte	0x7d3
 3961 07ee 05       		.uleb128 0x5
 3962 07ef 03       		.byte	0x3
 3963 07f0 00000000 		.4byte	moves
 3964 07f4 22       		.uleb128 0x22
 3965 07f5 B5040000 		.4byte	.LASF28
 3966 07f9 01       		.byte	0x1
 3967 07fa EF       		.byte	0xef
 3968 07fb 68000000 		.4byte	0x68
 3969 07ff 05       		.uleb128 0x5
 3970 0800 03       		.byte	0x3
 3971 0801 00000000 		.4byte	ignoreR
 3972 0805 22       		.uleb128 0x22
 3973 0806 AD040000 		.4byte	.LASF27
 3974 080a 01       		.byte	0x1
 3975 080b EF       		.byte	0xef
 3976 080c 68000000 		.4byte	0x68
 3977 0810 05       		.uleb128 0x5
 3978 0811 03       		.byte	0x3
 3979 0812 00000000 		.4byte	ignoreL
 3980 0816 00       		.byte	0
 3981              		.section	.debug_abbrev,"",%progbits
 3982              	.Ldebug_abbrev0:
 3983 0000 01       		.uleb128 0x1
 3984 0001 11       		.uleb128 0x11
 3985 0002 01       		.byte	0x1
 3986 0003 25       		.uleb128 0x25
 3987 0004 0E       		.uleb128 0xe
 3988 0005 13       		.uleb128 0x13
 3989 0006 0B       		.uleb128 0xb
 3990 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 81


 3991 0008 0E       		.uleb128 0xe
 3992 0009 1B       		.uleb128 0x1b
 3993 000a 0E       		.uleb128 0xe
 3994 000b 55       		.uleb128 0x55
 3995 000c 17       		.uleb128 0x17
 3996 000d 11       		.uleb128 0x11
 3997 000e 01       		.uleb128 0x1
 3998 000f 10       		.uleb128 0x10
 3999 0010 17       		.uleb128 0x17
 4000 0011 00       		.byte	0
 4001 0012 00       		.byte	0
 4002 0013 02       		.uleb128 0x2
 4003 0014 24       		.uleb128 0x24
 4004 0015 00       		.byte	0
 4005 0016 0B       		.uleb128 0xb
 4006 0017 0B       		.uleb128 0xb
 4007 0018 3E       		.uleb128 0x3e
 4008 0019 0B       		.uleb128 0xb
 4009 001a 03       		.uleb128 0x3
 4010 001b 0E       		.uleb128 0xe
 4011 001c 00       		.byte	0
 4012 001d 00       		.byte	0
 4013 001e 03       		.uleb128 0x3
 4014 001f 16       		.uleb128 0x16
 4015 0020 00       		.byte	0
 4016 0021 03       		.uleb128 0x3
 4017 0022 0E       		.uleb128 0xe
 4018 0023 3A       		.uleb128 0x3a
 4019 0024 0B       		.uleb128 0xb
 4020 0025 3B       		.uleb128 0x3b
 4021 0026 0B       		.uleb128 0xb
 4022 0027 49       		.uleb128 0x49
 4023 0028 13       		.uleb128 0x13
 4024 0029 00       		.byte	0
 4025 002a 00       		.byte	0
 4026 002b 04       		.uleb128 0x4
 4027 002c 24       		.uleb128 0x24
 4028 002d 00       		.byte	0
 4029 002e 0B       		.uleb128 0xb
 4030 002f 0B       		.uleb128 0xb
 4031 0030 3E       		.uleb128 0x3e
 4032 0031 0B       		.uleb128 0xb
 4033 0032 03       		.uleb128 0x3
 4034 0033 08       		.uleb128 0x8
 4035 0034 00       		.byte	0
 4036 0035 00       		.byte	0
 4037 0036 05       		.uleb128 0x5
 4038 0037 04       		.uleb128 0x4
 4039 0038 01       		.byte	0x1
 4040 0039 03       		.uleb128 0x3
 4041 003a 0E       		.uleb128 0xe
 4042 003b 0B       		.uleb128 0xb
 4043 003c 0B       		.uleb128 0xb
 4044 003d 49       		.uleb128 0x49
 4045 003e 13       		.uleb128 0x13
 4046 003f 3A       		.uleb128 0x3a
 4047 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 82


 4048 0041 3B       		.uleb128 0x3b
 4049 0042 0B       		.uleb128 0xb
 4050 0043 01       		.uleb128 0x1
 4051 0044 13       		.uleb128 0x13
 4052 0045 00       		.byte	0
 4053 0046 00       		.byte	0
 4054 0047 06       		.uleb128 0x6
 4055 0048 28       		.uleb128 0x28
 4056 0049 00       		.byte	0
 4057 004a 03       		.uleb128 0x3
 4058 004b 08       		.uleb128 0x8
 4059 004c 1C       		.uleb128 0x1c
 4060 004d 0B       		.uleb128 0xb
 4061 004e 00       		.byte	0
 4062 004f 00       		.byte	0
 4063 0050 07       		.uleb128 0x7
 4064 0051 28       		.uleb128 0x28
 4065 0052 00       		.byte	0
 4066 0053 03       		.uleb128 0x3
 4067 0054 0E       		.uleb128 0xe
 4068 0055 1C       		.uleb128 0x1c
 4069 0056 0B       		.uleb128 0xb
 4070 0057 00       		.byte	0
 4071 0058 00       		.byte	0
 4072 0059 08       		.uleb128 0x8
 4073 005a 13       		.uleb128 0x13
 4074 005b 01       		.byte	0x1
 4075 005c 03       		.uleb128 0x3
 4076 005d 0E       		.uleb128 0xe
 4077 005e 0B       		.uleb128 0xb
 4078 005f 0B       		.uleb128 0xb
 4079 0060 3A       		.uleb128 0x3a
 4080 0061 0B       		.uleb128 0xb
 4081 0062 3B       		.uleb128 0x3b
 4082 0063 0B       		.uleb128 0xb
 4083 0064 01       		.uleb128 0x1
 4084 0065 13       		.uleb128 0x13
 4085 0066 00       		.byte	0
 4086 0067 00       		.byte	0
 4087 0068 09       		.uleb128 0x9
 4088 0069 0D       		.uleb128 0xd
 4089 006a 00       		.byte	0
 4090 006b 03       		.uleb128 0x3
 4091 006c 0E       		.uleb128 0xe
 4092 006d 3A       		.uleb128 0x3a
 4093 006e 0B       		.uleb128 0xb
 4094 006f 3B       		.uleb128 0x3b
 4095 0070 0B       		.uleb128 0xb
 4096 0071 49       		.uleb128 0x49
 4097 0072 13       		.uleb128 0x13
 4098 0073 38       		.uleb128 0x38
 4099 0074 0B       		.uleb128 0xb
 4100 0075 00       		.byte	0
 4101 0076 00       		.byte	0
 4102 0077 0A       		.uleb128 0xa
 4103 0078 0D       		.uleb128 0xd
 4104 0079 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 83


 4105 007a 03       		.uleb128 0x3
 4106 007b 08       		.uleb128 0x8
 4107 007c 3A       		.uleb128 0x3a
 4108 007d 0B       		.uleb128 0xb
 4109 007e 3B       		.uleb128 0x3b
 4110 007f 0B       		.uleb128 0xb
 4111 0080 49       		.uleb128 0x49
 4112 0081 13       		.uleb128 0x13
 4113 0082 38       		.uleb128 0x38
 4114 0083 0B       		.uleb128 0xb
 4115 0084 00       		.byte	0
 4116 0085 00       		.byte	0
 4117 0086 0B       		.uleb128 0xb
 4118 0087 2E       		.uleb128 0x2e
 4119 0088 01       		.byte	0x1
 4120 0089 3F       		.uleb128 0x3f
 4121 008a 19       		.uleb128 0x19
 4122 008b 03       		.uleb128 0x3
 4123 008c 0E       		.uleb128 0xe
 4124 008d 3A       		.uleb128 0x3a
 4125 008e 0B       		.uleb128 0xb
 4126 008f 3B       		.uleb128 0x3b
 4127 0090 0B       		.uleb128 0xb
 4128 0091 27       		.uleb128 0x27
 4129 0092 19       		.uleb128 0x19
 4130 0093 11       		.uleb128 0x11
 4131 0094 01       		.uleb128 0x1
 4132 0095 12       		.uleb128 0x12
 4133 0096 06       		.uleb128 0x6
 4134 0097 40       		.uleb128 0x40
 4135 0098 18       		.uleb128 0x18
 4136 0099 9642     		.uleb128 0x2116
 4137 009b 19       		.uleb128 0x19
 4138 009c 01       		.uleb128 0x1
 4139 009d 13       		.uleb128 0x13
 4140 009e 00       		.byte	0
 4141 009f 00       		.byte	0
 4142 00a0 0C       		.uleb128 0xc
 4143 00a1 05       		.uleb128 0x5
 4144 00a2 00       		.byte	0
 4145 00a3 03       		.uleb128 0x3
 4146 00a4 08       		.uleb128 0x8
 4147 00a5 3A       		.uleb128 0x3a
 4148 00a6 0B       		.uleb128 0xb
 4149 00a7 3B       		.uleb128 0x3b
 4150 00a8 0B       		.uleb128 0xb
 4151 00a9 49       		.uleb128 0x49
 4152 00aa 13       		.uleb128 0x13
 4153 00ab 02       		.uleb128 0x2
 4154 00ac 18       		.uleb128 0x18
 4155 00ad 00       		.byte	0
 4156 00ae 00       		.byte	0
 4157 00af 0D       		.uleb128 0xd
 4158 00b0 0B       		.uleb128 0xb
 4159 00b1 01       		.byte	0x1
 4160 00b2 11       		.uleb128 0x11
 4161 00b3 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 84


 4162 00b4 12       		.uleb128 0x12
 4163 00b5 06       		.uleb128 0x6
 4164 00b6 00       		.byte	0
 4165 00b7 00       		.byte	0
 4166 00b8 0E       		.uleb128 0xe
 4167 00b9 34       		.uleb128 0x34
 4168 00ba 00       		.byte	0
 4169 00bb 03       		.uleb128 0x3
 4170 00bc 08       		.uleb128 0x8
 4171 00bd 3A       		.uleb128 0x3a
 4172 00be 0B       		.uleb128 0xb
 4173 00bf 3B       		.uleb128 0x3b
 4174 00c0 0B       		.uleb128 0xb
 4175 00c1 49       		.uleb128 0x49
 4176 00c2 13       		.uleb128 0x13
 4177 00c3 02       		.uleb128 0x2
 4178 00c4 18       		.uleb128 0x18
 4179 00c5 00       		.byte	0
 4180 00c6 00       		.byte	0
 4181 00c7 0F       		.uleb128 0xf
 4182 00c8 01       		.uleb128 0x1
 4183 00c9 01       		.byte	0x1
 4184 00ca 49       		.uleb128 0x49
 4185 00cb 13       		.uleb128 0x13
 4186 00cc 01       		.uleb128 0x1
 4187 00cd 13       		.uleb128 0x13
 4188 00ce 00       		.byte	0
 4189 00cf 00       		.byte	0
 4190 00d0 10       		.uleb128 0x10
 4191 00d1 21       		.uleb128 0x21
 4192 00d2 00       		.byte	0
 4193 00d3 49       		.uleb128 0x49
 4194 00d4 13       		.uleb128 0x13
 4195 00d5 2F       		.uleb128 0x2f
 4196 00d6 0B       		.uleb128 0xb
 4197 00d7 00       		.byte	0
 4198 00d8 00       		.byte	0
 4199 00d9 11       		.uleb128 0x11
 4200 00da 0F       		.uleb128 0xf
 4201 00db 00       		.byte	0
 4202 00dc 0B       		.uleb128 0xb
 4203 00dd 0B       		.uleb128 0xb
 4204 00de 49       		.uleb128 0x49
 4205 00df 13       		.uleb128 0x13
 4206 00e0 00       		.byte	0
 4207 00e1 00       		.byte	0
 4208 00e2 12       		.uleb128 0x12
 4209 00e3 2E       		.uleb128 0x2e
 4210 00e4 01       		.byte	0x1
 4211 00e5 3F       		.uleb128 0x3f
 4212 00e6 19       		.uleb128 0x19
 4213 00e7 03       		.uleb128 0x3
 4214 00e8 0E       		.uleb128 0xe
 4215 00e9 3A       		.uleb128 0x3a
 4216 00ea 0B       		.uleb128 0xb
 4217 00eb 3B       		.uleb128 0x3b
 4218 00ec 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 85


 4219 00ed 27       		.uleb128 0x27
 4220 00ee 19       		.uleb128 0x19
 4221 00ef 11       		.uleb128 0x11
 4222 00f0 01       		.uleb128 0x1
 4223 00f1 12       		.uleb128 0x12
 4224 00f2 06       		.uleb128 0x6
 4225 00f3 40       		.uleb128 0x40
 4226 00f4 18       		.uleb128 0x18
 4227 00f5 9742     		.uleb128 0x2117
 4228 00f7 19       		.uleb128 0x19
 4229 00f8 01       		.uleb128 0x1
 4230 00f9 13       		.uleb128 0x13
 4231 00fa 00       		.byte	0
 4232 00fb 00       		.byte	0
 4233 00fc 13       		.uleb128 0x13
 4234 00fd 2E       		.uleb128 0x2e
 4235 00fe 01       		.byte	0x1
 4236 00ff 3F       		.uleb128 0x3f
 4237 0100 19       		.uleb128 0x19
 4238 0101 03       		.uleb128 0x3
 4239 0102 0E       		.uleb128 0xe
 4240 0103 3A       		.uleb128 0x3a
 4241 0104 0B       		.uleb128 0xb
 4242 0105 3B       		.uleb128 0x3b
 4243 0106 0B       		.uleb128 0xb
 4244 0107 27       		.uleb128 0x27
 4245 0108 19       		.uleb128 0x19
 4246 0109 49       		.uleb128 0x49
 4247 010a 13       		.uleb128 0x13
 4248 010b 11       		.uleb128 0x11
 4249 010c 01       		.uleb128 0x1
 4250 010d 12       		.uleb128 0x12
 4251 010e 06       		.uleb128 0x6
 4252 010f 40       		.uleb128 0x40
 4253 0110 18       		.uleb128 0x18
 4254 0111 9742     		.uleb128 0x2117
 4255 0113 19       		.uleb128 0x19
 4256 0114 01       		.uleb128 0x1
 4257 0115 13       		.uleb128 0x13
 4258 0116 00       		.byte	0
 4259 0117 00       		.byte	0
 4260 0118 14       		.uleb128 0x14
 4261 0119 05       		.uleb128 0x5
 4262 011a 00       		.byte	0
 4263 011b 03       		.uleb128 0x3
 4264 011c 0E       		.uleb128 0xe
 4265 011d 3A       		.uleb128 0x3a
 4266 011e 0B       		.uleb128 0xb
 4267 011f 3B       		.uleb128 0x3b
 4268 0120 0B       		.uleb128 0xb
 4269 0121 49       		.uleb128 0x49
 4270 0122 13       		.uleb128 0x13
 4271 0123 02       		.uleb128 0x2
 4272 0124 18       		.uleb128 0x18
 4273 0125 00       		.byte	0
 4274 0126 00       		.byte	0
 4275 0127 15       		.uleb128 0x15
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 86


 4276 0128 34       		.uleb128 0x34
 4277 0129 00       		.byte	0
 4278 012a 03       		.uleb128 0x3
 4279 012b 0E       		.uleb128 0xe
 4280 012c 3A       		.uleb128 0x3a
 4281 012d 0B       		.uleb128 0xb
 4282 012e 3B       		.uleb128 0x3b
 4283 012f 0B       		.uleb128 0xb
 4284 0130 49       		.uleb128 0x49
 4285 0131 13       		.uleb128 0x13
 4286 0132 02       		.uleb128 0x2
 4287 0133 18       		.uleb128 0x18
 4288 0134 00       		.byte	0
 4289 0135 00       		.byte	0
 4290 0136 16       		.uleb128 0x16
 4291 0137 0B       		.uleb128 0xb
 4292 0138 01       		.byte	0x1
 4293 0139 11       		.uleb128 0x11
 4294 013a 01       		.uleb128 0x1
 4295 013b 12       		.uleb128 0x12
 4296 013c 06       		.uleb128 0x6
 4297 013d 01       		.uleb128 0x1
 4298 013e 13       		.uleb128 0x13
 4299 013f 00       		.byte	0
 4300 0140 00       		.byte	0
 4301 0141 17       		.uleb128 0x17
 4302 0142 0B       		.uleb128 0xb
 4303 0143 01       		.byte	0x1
 4304 0144 55       		.uleb128 0x55
 4305 0145 17       		.uleb128 0x17
 4306 0146 01       		.uleb128 0x1
 4307 0147 13       		.uleb128 0x13
 4308 0148 00       		.byte	0
 4309 0149 00       		.byte	0
 4310 014a 18       		.uleb128 0x18
 4311 014b 21       		.uleb128 0x21
 4312 014c 00       		.byte	0
 4313 014d 49       		.uleb128 0x49
 4314 014e 13       		.uleb128 0x13
 4315 014f 2F       		.uleb128 0x2f
 4316 0150 05       		.uleb128 0x5
 4317 0151 00       		.byte	0
 4318 0152 00       		.byte	0
 4319 0153 19       		.uleb128 0x19
 4320 0154 34       		.uleb128 0x34
 4321 0155 00       		.byte	0
 4322 0156 03       		.uleb128 0x3
 4323 0157 08       		.uleb128 0x8
 4324 0158 3A       		.uleb128 0x3a
 4325 0159 0B       		.uleb128 0xb
 4326 015a 3B       		.uleb128 0x3b
 4327 015b 05       		.uleb128 0x5
 4328 015c 49       		.uleb128 0x49
 4329 015d 13       		.uleb128 0x13
 4330 015e 02       		.uleb128 0x2
 4331 015f 18       		.uleb128 0x18
 4332 0160 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 87


 4333 0161 00       		.byte	0
 4334 0162 1A       		.uleb128 0x1a
 4335 0163 2E       		.uleb128 0x2e
 4336 0164 01       		.byte	0x1
 4337 0165 3F       		.uleb128 0x3f
 4338 0166 19       		.uleb128 0x19
 4339 0167 03       		.uleb128 0x3
 4340 0168 0E       		.uleb128 0xe
 4341 0169 3A       		.uleb128 0x3a
 4342 016a 0B       		.uleb128 0xb
 4343 016b 3B       		.uleb128 0x3b
 4344 016c 05       		.uleb128 0x5
 4345 016d 27       		.uleb128 0x27
 4346 016e 19       		.uleb128 0x19
 4347 016f 49       		.uleb128 0x49
 4348 0170 13       		.uleb128 0x13
 4349 0171 11       		.uleb128 0x11
 4350 0172 01       		.uleb128 0x1
 4351 0173 12       		.uleb128 0x12
 4352 0174 06       		.uleb128 0x6
 4353 0175 40       		.uleb128 0x40
 4354 0176 18       		.uleb128 0x18
 4355 0177 9742     		.uleb128 0x2117
 4356 0179 19       		.uleb128 0x19
 4357 017a 01       		.uleb128 0x1
 4358 017b 13       		.uleb128 0x13
 4359 017c 00       		.byte	0
 4360 017d 00       		.byte	0
 4361 017e 1B       		.uleb128 0x1b
 4362 017f 05       		.uleb128 0x5
 4363 0180 00       		.byte	0
 4364 0181 03       		.uleb128 0x3
 4365 0182 0E       		.uleb128 0xe
 4366 0183 3A       		.uleb128 0x3a
 4367 0184 0B       		.uleb128 0xb
 4368 0185 3B       		.uleb128 0x3b
 4369 0186 05       		.uleb128 0x5
 4370 0187 49       		.uleb128 0x49
 4371 0188 13       		.uleb128 0x13
 4372 0189 02       		.uleb128 0x2
 4373 018a 18       		.uleb128 0x18
 4374 018b 00       		.byte	0
 4375 018c 00       		.byte	0
 4376 018d 1C       		.uleb128 0x1c
 4377 018e 2E       		.uleb128 0x2e
 4378 018f 01       		.byte	0x1
 4379 0190 3F       		.uleb128 0x3f
 4380 0191 19       		.uleb128 0x19
 4381 0192 03       		.uleb128 0x3
 4382 0193 0E       		.uleb128 0xe
 4383 0194 3A       		.uleb128 0x3a
 4384 0195 0B       		.uleb128 0xb
 4385 0196 3B       		.uleb128 0x3b
 4386 0197 05       		.uleb128 0x5
 4387 0198 27       		.uleb128 0x27
 4388 0199 19       		.uleb128 0x19
 4389 019a 11       		.uleb128 0x11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 88


 4390 019b 01       		.uleb128 0x1
 4391 019c 12       		.uleb128 0x12
 4392 019d 06       		.uleb128 0x6
 4393 019e 40       		.uleb128 0x40
 4394 019f 18       		.uleb128 0x18
 4395 01a0 9742     		.uleb128 0x2117
 4396 01a2 19       		.uleb128 0x19
 4397 01a3 01       		.uleb128 0x1
 4398 01a4 13       		.uleb128 0x13
 4399 01a5 00       		.byte	0
 4400 01a6 00       		.byte	0
 4401 01a7 1D       		.uleb128 0x1d
 4402 01a8 2E       		.uleb128 0x2e
 4403 01a9 00       		.byte	0
 4404 01aa 3F       		.uleb128 0x3f
 4405 01ab 19       		.uleb128 0x19
 4406 01ac 03       		.uleb128 0x3
 4407 01ad 0E       		.uleb128 0xe
 4408 01ae 3A       		.uleb128 0x3a
 4409 01af 0B       		.uleb128 0xb
 4410 01b0 3B       		.uleb128 0x3b
 4411 01b1 05       		.uleb128 0x5
 4412 01b2 49       		.uleb128 0x49
 4413 01b3 13       		.uleb128 0x13
 4414 01b4 11       		.uleb128 0x11
 4415 01b5 01       		.uleb128 0x1
 4416 01b6 12       		.uleb128 0x12
 4417 01b7 06       		.uleb128 0x6
 4418 01b8 40       		.uleb128 0x40
 4419 01b9 18       		.uleb128 0x18
 4420 01ba 9742     		.uleb128 0x2117
 4421 01bc 19       		.uleb128 0x19
 4422 01bd 00       		.byte	0
 4423 01be 00       		.byte	0
 4424 01bf 1E       		.uleb128 0x1e
 4425 01c0 2E       		.uleb128 0x2e
 4426 01c1 01       		.byte	0x1
 4427 01c2 3F       		.uleb128 0x3f
 4428 01c3 19       		.uleb128 0x19
 4429 01c4 03       		.uleb128 0x3
 4430 01c5 0E       		.uleb128 0xe
 4431 01c6 3A       		.uleb128 0x3a
 4432 01c7 0B       		.uleb128 0xb
 4433 01c8 3B       		.uleb128 0x3b
 4434 01c9 05       		.uleb128 0x5
 4435 01ca 27       		.uleb128 0x27
 4436 01cb 19       		.uleb128 0x19
 4437 01cc 49       		.uleb128 0x49
 4438 01cd 13       		.uleb128 0x13
 4439 01ce 11       		.uleb128 0x11
 4440 01cf 01       		.uleb128 0x1
 4441 01d0 12       		.uleb128 0x12
 4442 01d1 06       		.uleb128 0x6
 4443 01d2 40       		.uleb128 0x40
 4444 01d3 18       		.uleb128 0x18
 4445 01d4 9642     		.uleb128 0x2116
 4446 01d6 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 89


 4447 01d7 01       		.uleb128 0x1
 4448 01d8 13       		.uleb128 0x13
 4449 01d9 00       		.byte	0
 4450 01da 00       		.byte	0
 4451 01db 1F       		.uleb128 0x1f
 4452 01dc 05       		.uleb128 0x5
 4453 01dd 00       		.byte	0
 4454 01de 03       		.uleb128 0x3
 4455 01df 08       		.uleb128 0x8
 4456 01e0 3A       		.uleb128 0x3a
 4457 01e1 0B       		.uleb128 0xb
 4458 01e2 3B       		.uleb128 0x3b
 4459 01e3 05       		.uleb128 0x5
 4460 01e4 49       		.uleb128 0x49
 4461 01e5 13       		.uleb128 0x13
 4462 01e6 02       		.uleb128 0x2
 4463 01e7 18       		.uleb128 0x18
 4464 01e8 00       		.byte	0
 4465 01e9 00       		.byte	0
 4466 01ea 20       		.uleb128 0x20
 4467 01eb 34       		.uleb128 0x34
 4468 01ec 00       		.byte	0
 4469 01ed 03       		.uleb128 0x3
 4470 01ee 0E       		.uleb128 0xe
 4471 01ef 3A       		.uleb128 0x3a
 4472 01f0 0B       		.uleb128 0xb
 4473 01f1 3B       		.uleb128 0x3b
 4474 01f2 05       		.uleb128 0x5
 4475 01f3 49       		.uleb128 0x49
 4476 01f4 13       		.uleb128 0x13
 4477 01f5 02       		.uleb128 0x2
 4478 01f6 18       		.uleb128 0x18
 4479 01f7 00       		.byte	0
 4480 01f8 00       		.byte	0
 4481 01f9 21       		.uleb128 0x21
 4482 01fa 34       		.uleb128 0x34
 4483 01fb 00       		.byte	0
 4484 01fc 03       		.uleb128 0x3
 4485 01fd 08       		.uleb128 0x8
 4486 01fe 3A       		.uleb128 0x3a
 4487 01ff 0B       		.uleb128 0xb
 4488 0200 3B       		.uleb128 0x3b
 4489 0201 0B       		.uleb128 0xb
 4490 0202 49       		.uleb128 0x49
 4491 0203 13       		.uleb128 0x13
 4492 0204 3F       		.uleb128 0x3f
 4493 0205 19       		.uleb128 0x19
 4494 0206 02       		.uleb128 0x2
 4495 0207 18       		.uleb128 0x18
 4496 0208 00       		.byte	0
 4497 0209 00       		.byte	0
 4498 020a 22       		.uleb128 0x22
 4499 020b 34       		.uleb128 0x34
 4500 020c 00       		.byte	0
 4501 020d 03       		.uleb128 0x3
 4502 020e 0E       		.uleb128 0xe
 4503 020f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 90


 4504 0210 0B       		.uleb128 0xb
 4505 0211 3B       		.uleb128 0x3b
 4506 0212 0B       		.uleb128 0xb
 4507 0213 49       		.uleb128 0x49
 4508 0214 13       		.uleb128 0x13
 4509 0215 3F       		.uleb128 0x3f
 4510 0216 19       		.uleb128 0x19
 4511 0217 02       		.uleb128 0x2
 4512 0218 18       		.uleb128 0x18
 4513 0219 00       		.byte	0
 4514 021a 00       		.byte	0
 4515 021b 00       		.byte	0
 4516              		.section	.debug_aranges,"",%progbits
 4517 0000 64000000 		.4byte	0x64
 4518 0004 0200     		.2byte	0x2
 4519 0006 00000000 		.4byte	.Ldebug_info0
 4520 000a 04       		.byte	0x4
 4521 000b 00       		.byte	0
 4522 000c 0000     		.2byte	0
 4523 000e 0000     		.2byte	0
 4524 0010 00000000 		.4byte	.LFB1
 4525 0014 58000000 		.4byte	.LFE1-.LFB1
 4526 0018 00000000 		.4byte	.LFB2
 4527 001c 60000000 		.4byte	.LFE2-.LFB2
 4528 0020 00000000 		.4byte	.LFB3
 4529 0024 56000000 		.4byte	.LFE3-.LFB3
 4530 0028 00000000 		.4byte	.LFB4
 4531 002c 4C090000 		.4byte	.LFE4-.LFB4
 4532 0030 00000000 		.4byte	.LFB5
 4533 0034 48040000 		.4byte	.LFE5-.LFB5
 4534 0038 00000000 		.4byte	.LFB6
 4535 003c 0C010000 		.4byte	.LFE6-.LFB6
 4536 0040 00000000 		.4byte	.LFB7
 4537 0044 24010000 		.4byte	.LFE7-.LFB7
 4538 0048 00000000 		.4byte	.LFB8
 4539 004c 9C000000 		.4byte	.LFE8-.LFB8
 4540 0050 00000000 		.4byte	.LFB9
 4541 0054 18000000 		.4byte	.LFE9-.LFB9
 4542 0058 00000000 		.4byte	.LFB10
 4543 005c 78000000 		.4byte	.LFE10-.LFB10
 4544 0060 00000000 		.4byte	0
 4545 0064 00000000 		.4byte	0
 4546              		.section	.debug_ranges,"",%progbits
 4547              	.Ldebug_ranges0:
 4548 0000 F6010000 		.4byte	.LBB10
 4549 0004 E2050000 		.4byte	.LBE10
 4550 0008 F4050000 		.4byte	.LBB15
 4551 000c F6050000 		.4byte	.LBE15
 4552 0010 00000000 		.4byte	0
 4553 0014 00000000 		.4byte	0
 4554 0018 00000000 		.4byte	.LFB1
 4555 001c 58000000 		.4byte	.LFE1
 4556 0020 00000000 		.4byte	.LFB2
 4557 0024 60000000 		.4byte	.LFE2
 4558 0028 00000000 		.4byte	.LFB3
 4559 002c 56000000 		.4byte	.LFE3
 4560 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 91


 4561 0034 4C090000 		.4byte	.LFE4
 4562 0038 00000000 		.4byte	.LFB5
 4563 003c 48040000 		.4byte	.LFE5
 4564 0040 00000000 		.4byte	.LFB6
 4565 0044 0C010000 		.4byte	.LFE6
 4566 0048 00000000 		.4byte	.LFB7
 4567 004c 24010000 		.4byte	.LFE7
 4568 0050 00000000 		.4byte	.LFB8
 4569 0054 9C000000 		.4byte	.LFE8
 4570 0058 00000000 		.4byte	.LFB9
 4571 005c 18000000 		.4byte	.LFE9
 4572 0060 00000000 		.4byte	.LFB10
 4573 0064 78000000 		.4byte	.LFE10
 4574 0068 00000000 		.4byte	0
 4575 006c 00000000 		.4byte	0
 4576              		.section	.debug_line,"",%progbits
 4577              	.Ldebug_line0:
 4578 0000 43040000 		.section	.debug_str,"MS",%progbits,1
 4578      02003201 
 4578      00000201 
 4578      FB0E0D00 
 4578      01010101 
 4579              	.LASF17:
 4580 0000 4F726965 		.ascii	"OrientationState\000"
 4580      6E746174 
 4580      696F6E53 
 4580      74617465 
 4580      00
 4581              	.LASF37:
 4582 0011 64696A6B 		.ascii	"dijkstra\000"
 4582      73747261 
 4582      00
 4583              	.LASF25:
 4584 001a 536B6970 		.ascii	"Skip\000"
 4584      00
 4585              	.LASF34:
 4586 001f 726F7773 		.ascii	"rows\000"
 4586      00
 4587              	.LASF64:
 4588 0024 69735661 		.ascii	"isValidMove\000"
 4588      6C69644D 
 4588      6F766500 
 4589              	.LASF0:
 4590 0030 7369676E 		.ascii	"signed char\000"
 4590      65642063 
 4590      68617200 
 4591              	.LASF12:
 4592 003c 5F5F7569 		.ascii	"__uint8_t\000"
 4592      6E74385F 
 4592      7400
 4593              	.LASF26:
 4594 0046 64697265 		.ascii	"direction\000"
 4594      6374696F 
 4594      6E00
 4595              	.LASF79:
 4596 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4596      43313120 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 92


 4596      352E342E 
 4596      31203230 
 4596      31363036 
 4597 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4597      20726576 
 4597      6973696F 
 4597      6E203233 
 4597      37373135 
 4598 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4598      66756E63 
 4598      74696F6E 
 4598      2D736563 
 4598      74696F6E 
 4599              	.LASF46:
 4600 00de 73746570 		.ascii	"stepNum\000"
 4600      4E756D00 
 4601              	.LASF7:
 4602 00e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 4602      206C6F6E 
 4602      6720756E 
 4602      7369676E 
 4602      65642069 
 4603              	.LASF29:
 4604 00fd 65787065 		.ascii	"expectedOrientation\000"
 4604      63746564 
 4604      4F726965 
 4604      6E746174 
 4604      696F6E00 
 4605              	.LASF45:
 4606 0111 64697374 		.ascii	"distances\000"
 4606      616E6365 
 4606      7300
 4607              	.LASF22:
 4608 011b 75547572 		.ascii	"uTurn\000"
 4608      6E00
 4609              	.LASF38:
 4610 0121 73746172 		.ascii	"startlocation\000"
 4610      746C6F63 
 4610      6174696F 
 4610      6E00
 4611              	.LASF32:
 4612 012f 7072696E 		.ascii	"printMap\000"
 4612      744D6170 
 4612      00
 4613              	.LASF6:
 4614 0138 6C6F6E67 		.ascii	"long long int\000"
 4614      206C6F6E 
 4614      6720696E 
 4614      7400
 4615              	.LASF81:
 4616 0146 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 4616      6F63756D 
 4616      656E7473 
 4616      5C476974 
 4616      4875625C 
 4617 0175 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 4617      635F636F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 93


 4617      64655F62 
 4617      6173655C 
 4617      43533330 
 4618              	.LASF54:
 4619 0197 6E657743 		.ascii	"newCol\000"
 4619      6F6C00
 4620              	.LASF30:
 4621 019e 496E7374 		.ascii	"Instruction\000"
 4621      72756374 
 4621      696F6E00 
 4622              	.LASF50:
 4623 01aa 63757272 		.ascii	"currentCol\000"
 4623      656E7443 
 4623      6F6C00
 4624              	.LASF4:
 4625 01b5 6C6F6E67 		.ascii	"long int\000"
 4625      20696E74 
 4625      00
 4626              	.LASF39:
 4627 01be 74617267 		.ascii	"targetlocation\000"
 4627      65746C6F 
 4627      63617469 
 4627      6F6E00
 4628              	.LASF23:
 4629 01cd 466F7277 		.ascii	"ForwardUntilTarget\000"
 4629      61726455 
 4629      6E74696C 
 4629      54617267 
 4629      657400
 4630              	.LASF31:
 4631 01e0 4C6F6361 		.ascii	"Location\000"
 4631      74696F6E 
 4631      00
 4632              	.LASF69:
 4633 01e9 74617267 		.ascii	"targetRow\000"
 4633      6574526F 
 4633      7700
 4634              	.LASF73:
 4635 01f3 696E7374 		.ascii	"instructionsList\000"
 4635      72756374 
 4635      696F6E73 
 4635      4C697374 
 4635      00
 4636              	.LASF65:
 4637 0204 63686563 		.ascii	"checkPathDirection\000"
 4637      6B506174 
 4637      68446972 
 4637      65637469 
 4637      6F6E00
 4638              	.LASF77:
 4639 0217 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 4639      5F6F665F 
 4639      6F707469 
 4639      6D616C5F 
 4639      636F6F72 
 4640              	.LASF8:
 4641 0233 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 94


 4641      676E6564 
 4641      20696E74 
 4641      00
 4642              	.LASF47:
 4643 0240 73686F72 		.ascii	"shortestDist\000"
 4643      74657374 
 4643      44697374 
 4643      00
 4644              	.LASF5:
 4645 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 4645      20756E73 
 4645      69676E65 
 4645      6420696E 
 4645      7400
 4646              	.LASF61:
 4647 025f 74617267 		.ascii	"targetOrientation\000"
 4647      65744F72 
 4647      69656E74 
 4647      6174696F 
 4647      6E00
 4648              	.LASF3:
 4649 0271 73686F72 		.ascii	"short unsigned int\000"
 4649      7420756E 
 4649      7369676E 
 4649      65642069 
 4649      6E7400
 4650              	.LASF24:
 4651 0284 53746F70 		.ascii	"StopAtTarget\000"
 4651      41745461 
 4651      72676574 
 4651      00
 4652              	.LASF53:
 4653 0291 6E657752 		.ascii	"newRow\000"
 4653      6F7700
 4654              	.LASF44:
 4655 0298 70715369 		.ascii	"pqSize\000"
 4655      7A6500
 4656              	.LASF56:
 4657 029f 67657450 		.ascii	"getPathInstructions\000"
 4657      61746849 
 4657      6E737472 
 4657      75637469 
 4657      6F6E7300 
 4658              	.LASF15:
 4659 02b3 4C656674 		.ascii	"Left\000"
 4659      00
 4660              	.LASF10:
 4661 02b8 73697A65 		.ascii	"sizetype\000"
 4661      74797065 
 4661      00
 4662              	.LASF9:
 4663 02c1 6C6F6E67 		.ascii	"long double\000"
 4663      20646F75 
 4663      626C6500 
 4664              	.LASF49:
 4665 02cd 63757272 		.ascii	"currentRow\000"
 4665      656E7452 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 95


 4665      6F7700
 4666              	.LASF66:
 4667 02d8 63686563 		.ascii	"checkIgnoreTurn\000"
 4667      6B49676E 
 4667      6F726554 
 4667      75726E00 
 4668              	.LASF20:
 4669 02e8 77616974 		.ascii	"waitForLeftTurn\000"
 4669      466F724C 
 4669      65667454 
 4669      75726E00 
 4670              	.LASF52:
 4671 02f8 63757272 		.ascii	"current\000"
 4671      656E7400 
 4672              	.LASF51:
 4673 0300 70617468 		.ascii	"pathIndex\000"
 4673      496E6465 
 4673      7800
 4674              	.LASF33:
 4675 030a 636C6561 		.ascii	"clearMap\000"
 4675      724D6170 
 4675      00
 4676              	.LASF62:
 4677 0313 6E657744 		.ascii	"newDirection\000"
 4677      69726563 
 4677      74696F6E 
 4677      00
 4678              	.LASF36:
 4679 0320 5F426F6F 		.ascii	"_Bool\000"
 4679      6C00
 4680              	.LASF1:
 4681 0326 756E7369 		.ascii	"unsigned char\000"
 4681      676E6564 
 4681      20636861 
 4681      7200
 4682              	.LASF18:
 4683 0334 496E7374 		.ascii	"InstructionDirection\000"
 4683      72756374 
 4683      696F6E44 
 4683      69726563 
 4683      74696F6E 
 4684              	.LASF68:
 4685 0349 67657454 		.ascii	"getTargetOrientation\000"
 4685      61726765 
 4685      744F7269 
 4685      656E7461 
 4685      74696F6E 
 4686              	.LASF71:
 4687 035e 66696E64 		.ascii	"findPath\000"
 4687      50617468 
 4687      00
 4688              	.LASF2:
 4689 0367 73686F72 		.ascii	"short int\000"
 4689      7420696E 
 4689      7400
 4690              	.LASF59:
 4691 0371 74617267 		.ascii	"targetLocation\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 96


 4691      65744C6F 
 4691      63617469 
 4691      6F6E00
 4692              	.LASF19:
 4693 0380 476F466F 		.ascii	"GoForward\000"
 4693      72776172 
 4693      6400
 4694              	.LASF16:
 4695 038a 52696768 		.ascii	"Right\000"
 4695      7400
 4696              	.LASF57:
 4697 0390 6E756D53 		.ascii	"numSteps\000"
 4697      74657073 
 4697      00
 4698              	.LASF60:
 4699 0399 6C697374 		.ascii	"listIndex\000"
 4699      496E6465 
 4699      7800
 4700              	.LASF48:
 4701 03a3 72657453 		.ascii	"retSteps\000"
 4701      74657073 
 4701      00
 4702              	.LASF42:
 4703 03ac 6C6F6361 		.ascii	"location\000"
 4703      74696F6E 
 4703      00
 4704              	.LASF40:
 4705 03b5 76697369 		.ascii	"visitedMap\000"
 4705      7465644D 
 4705      617000
 4706              	.LASF11:
 4707 03c0 63686172 		.ascii	"char\000"
 4707      00
 4708              	.LASF76:
 4709 03c5 73746172 		.ascii	"start_pos\000"
 4709      745F706F 
 4709      7300
 4710              	.LASF74:
 4711 03cf 70726576 		.ascii	"previousRobotOrientation\000"
 4711      696F7573 
 4711      526F626F 
 4711      744F7269 
 4711      656E7461 
 4712              	.LASF43:
 4713 03e8 64697374 		.ascii	"distance\000"
 4713      616E6365 
 4713      00
 4714              	.LASF72:
 4715 03f1 666F6F64 		.ascii	"food_list\000"
 4715      5F6C6973 
 4715      7400
 4716              	.LASF14:
 4717 03fb 446F776E 		.ascii	"Down\000"
 4717      00
 4718              	.LASF75:
 4719 0400 63757272 		.ascii	"currentRobotOrientation\000"
 4719      656E7452 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 97


 4719      6F626F74 
 4719      4F726965 
 4719      6E746174 
 4720              	.LASF55:
 4721 0418 6E657744 		.ascii	"newDistance\000"
 4721      69737461 
 4721      6E636500 
 4722              	.LASF80:
 4723 0424 70617468 		.ascii	"pathfinding.c\000"
 4723      66696E64 
 4723      696E672E 
 4723      6300
 4724              	.LASF67:
 4725 0432 726F626F 		.ascii	"robotOrientation\000"
 4725      744F7269 
 4725      656E7461 
 4725      74696F6E 
 4725      00
 4726              	.LASF21:
 4727 0443 77616974 		.ascii	"waitForRightTurn\000"
 4727      466F7252 
 4727      69676874 
 4727      5475726E 
 4727      00
 4728              	.LASF41:
 4729 0454 5072696F 		.ascii	"PriorityQueue\000"
 4729      72697479 
 4729      51756575 
 4729      6500
 4730              	.LASF58:
 4731 0462 73746172 		.ascii	"startLocation\000"
 4731      744C6F63 
 4731      6174696F 
 4731      6E00
 4732              	.LASF13:
 4733 0470 75696E74 		.ascii	"uint8_t\000"
 4733      385F7400 
 4734              	.LASF82:
 4735 0478 696E7374 		.ascii	"instructionsListLength\000"
 4735      72756374 
 4735      696F6E73 
 4735      4C697374 
 4735      4C656E67 
 4736              	.LASF78:
 4737 048f 6D6F7665 		.ascii	"moves\000"
 4737      7300
 4738              	.LASF70:
 4739 0495 74617267 		.ascii	"targetCol\000"
 4739      6574436F 
 4739      6C00
 4740              	.LASF35:
 4741 049f 636F6C73 		.ascii	"cols\000"
 4741      00
 4742              	.LASF63:
 4743 04a4 6E657874 		.ascii	"nextStep\000"
 4743      53746570 
 4743      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwmynxR.s 			page 98


 4744              	.LASF27:
 4745 04ad 69676E6F 		.ascii	"ignoreL\000"
 4745      72654C00 
 4746              	.LASF28:
 4747 04b5 69676E6F 		.ascii	"ignoreR\000"
 4747      72655200 
 4748              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
