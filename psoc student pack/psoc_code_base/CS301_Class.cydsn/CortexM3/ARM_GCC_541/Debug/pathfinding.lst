ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.bss
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 00       		.space	1
  26 0001 000000   		.align	2
  27              	instructionsList:
  28 0004 00000000 		.space	4560
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.align	2
  30              	numSteps:
  31 11d4 00000000 		.space	4
  32              		.global	map
  33              		.data
  34              		.align	2
  35              		.type	map, %object
  36              		.size	map, 1140
  37              	map:
  38 0000 01000000 		.word	1
  39 0004 01000000 		.word	1
  40 0008 01000000 		.word	1
  41 000c 01000000 		.word	1
  42 0010 01000000 		.word	1
  43 0014 01000000 		.word	1
  44 0018 01000000 		.word	1
  45 001c 01000000 		.word	1
  46 0020 01000000 		.word	1
  47 0024 01000000 		.word	1
  48 0028 01000000 		.word	1
  49 002c 01000000 		.word	1
  50 0030 01000000 		.word	1
  51 0034 01000000 		.word	1
  52 0038 01000000 		.word	1
  53 003c 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 2


  54 0040 01000000 		.word	1
  55 0044 01000000 		.word	1
  56 0048 01000000 		.word	1
  57 004c 01000000 		.word	1
  58 0050 00000000 		.word	0
  59 0054 01000000 		.word	1
  60 0058 00000000 		.word	0
  61 005c 00000000 		.word	0
  62 0060 00000000 		.word	0
  63 0064 00000000 		.word	0
  64 0068 00000000 		.word	0
  65 006c 00000000 		.word	0
  66 0070 00000000 		.word	0
  67 0074 00000000 		.word	0
  68 0078 00000000 		.word	0
  69 007c 00000000 		.word	0
  70 0080 00000000 		.word	0
  71 0084 00000000 		.word	0
  72 0088 00000000 		.word	0
  73 008c 00000000 		.word	0
  74 0090 00000000 		.word	0
  75 0094 01000000 		.word	1
  76 0098 01000000 		.word	1
  77 009c 00000000 		.word	0
  78 00a0 01000000 		.word	1
  79 00a4 00000000 		.word	0
  80 00a8 01000000 		.word	1
  81 00ac 01000000 		.word	1
  82 00b0 01000000 		.word	1
  83 00b4 01000000 		.word	1
  84 00b8 01000000 		.word	1
  85 00bc 00000000 		.word	0
  86 00c0 01000000 		.word	1
  87 00c4 01000000 		.word	1
  88 00c8 01000000 		.word	1
  89 00cc 00000000 		.word	0
  90 00d0 01000000 		.word	1
  91 00d4 01000000 		.word	1
  92 00d8 01000000 		.word	1
  93 00dc 00000000 		.word	0
  94 00e0 01000000 		.word	1
  95 00e4 01000000 		.word	1
  96 00e8 00000000 		.word	0
  97 00ec 00000000 		.word	0
  98 00f0 00000000 		.word	0
  99 00f4 01000000 		.word	1
 100 00f8 00000000 		.word	0
 101 00fc 00000000 		.word	0
 102 0100 00000000 		.word	0
 103 0104 01000000 		.word	1
 104 0108 00000000 		.word	0
 105 010c 00000000 		.word	0
 106 0110 00000000 		.word	0
 107 0114 00000000 		.word	0
 108 0118 00000000 		.word	0
 109 011c 00000000 		.word	0
 110 0120 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 3


 111 0124 01000000 		.word	1
 112 0128 00000000 		.word	0
 113 012c 01000000 		.word	1
 114 0130 01000000 		.word	1
 115 0134 01000000 		.word	1
 116 0138 01000000 		.word	1
 117 013c 00000000 		.word	0
 118 0140 01000000 		.word	1
 119 0144 00000000 		.word	0
 120 0148 01000000 		.word	1
 121 014c 00000000 		.word	0
 122 0150 01000000 		.word	1
 123 0154 01000000 		.word	1
 124 0158 01000000 		.word	1
 125 015c 00000000 		.word	0
 126 0160 01000000 		.word	1
 127 0164 00000000 		.word	0
 128 0168 01000000 		.word	1
 129 016c 01000000 		.word	1
 130 0170 01000000 		.word	1
 131 0174 00000000 		.word	0
 132 0178 01000000 		.word	1
 133 017c 01000000 		.word	1
 134 0180 00000000 		.word	0
 135 0184 00000000 		.word	0
 136 0188 00000000 		.word	0
 137 018c 01000000 		.word	1
 138 0190 00000000 		.word	0
 139 0194 01000000 		.word	1
 140 0198 00000000 		.word	0
 141 019c 00000000 		.word	0
 142 01a0 00000000 		.word	0
 143 01a4 01000000 		.word	1
 144 01a8 00000000 		.word	0
 145 01ac 01000000 		.word	1
 146 01b0 00000000 		.word	0
 147 01b4 00000000 		.word	0
 148 01b8 00000000 		.word	0
 149 01bc 00000000 		.word	0
 150 01c0 00000000 		.word	0
 151 01c4 01000000 		.word	1
 152 01c8 01000000 		.word	1
 153 01cc 00000000 		.word	0
 154 01d0 01000000 		.word	1
 155 01d4 01000000 		.word	1
 156 01d8 01000000 		.word	1
 157 01dc 00000000 		.word	0
 158 01e0 01000000 		.word	1
 159 01e4 00000000 		.word	0
 160 01e8 01000000 		.word	1
 161 01ec 00000000 		.word	0
 162 01f0 01000000 		.word	1
 163 01f4 00000000 		.word	0
 164 01f8 01000000 		.word	1
 165 01fc 00000000 		.word	0
 166 0200 01000000 		.word	1
 167 0204 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 4


 168 0208 01000000 		.word	1
 169 020c 00000000 		.word	0
 170 0210 01000000 		.word	1
 171 0214 01000000 		.word	1
 172 0218 00000000 		.word	0
 173 021c 01000000 		.word	1
 174 0220 00000000 		.word	0
 175 0224 01000000 		.word	1
 176 0228 00000000 		.word	0
 177 022c 00000000 		.word	0
 178 0230 00000000 		.word	0
 179 0234 01000000 		.word	1
 180 0238 00000000 		.word	0
 181 023c 01000000 		.word	1
 182 0240 00000000 		.word	0
 183 0244 01000000 		.word	1
 184 0248 00000000 		.word	0
 185 024c 01000000 		.word	1
 186 0250 00000000 		.word	0
 187 0254 00000000 		.word	0
 188 0258 00000000 		.word	0
 189 025c 01000000 		.word	1
 190 0260 01000000 		.word	1
 191 0264 00000000 		.word	0
 192 0268 01000000 		.word	1
 193 026c 00000000 		.word	0
 194 0270 01000000 		.word	1
 195 0274 00000000 		.word	0
 196 0278 01000000 		.word	1
 197 027c 01000000 		.word	1
 198 0280 01000000 		.word	1
 199 0284 00000000 		.word	0
 200 0288 01000000 		.word	1
 201 028c 00000000 		.word	0
 202 0290 01000000 		.word	1
 203 0294 00000000 		.word	0
 204 0298 01000000 		.word	1
 205 029c 00000000 		.word	0
 206 02a0 01000000 		.word	1
 207 02a4 01000000 		.word	1
 208 02a8 01000000 		.word	1
 209 02ac 01000000 		.word	1
 210 02b0 00000000 		.word	0
 211 02b4 00000000 		.word	0
 212 02b8 00000000 		.word	0
 213 02bc 01000000 		.word	1
 214 02c0 00000000 		.word	0
 215 02c4 01000000 		.word	1
 216 02c8 00000000 		.word	0
 217 02cc 00000000 		.word	0
 218 02d0 00000000 		.word	0
 219 02d4 01000000 		.word	1
 220 02d8 00000000 		.word	0
 221 02dc 00000000 		.word	0
 222 02e0 00000000 		.word	0
 223 02e4 01000000 		.word	1
 224 02e8 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 5


 225 02ec 00000000 		.word	0
 226 02f0 00000000 		.word	0
 227 02f4 01000000 		.word	1
 228 02f8 01000000 		.word	1
 229 02fc 01000000 		.word	1
 230 0300 01000000 		.word	1
 231 0304 00000000 		.word	0
 232 0308 01000000 		.word	1
 233 030c 00000000 		.word	0
 234 0310 01000000 		.word	1
 235 0314 01000000 		.word	1
 236 0318 01000000 		.word	1
 237 031c 01000000 		.word	1
 238 0320 01000000 		.word	1
 239 0324 01000000 		.word	1
 240 0328 01000000 		.word	1
 241 032c 01000000 		.word	1
 242 0330 01000000 		.word	1
 243 0334 01000000 		.word	1
 244 0338 01000000 		.word	1
 245 033c 00000000 		.word	0
 246 0340 01000000 		.word	1
 247 0344 01000000 		.word	1
 248 0348 00000000 		.word	0
 249 034c 00000000 		.word	0
 250 0350 00000000 		.word	0
 251 0354 00000000 		.word	0
 252 0358 00000000 		.word	0
 253 035c 00000000 		.word	0
 254 0360 00000000 		.word	0
 255 0364 00000000 		.word	0
 256 0368 00000000 		.word	0
 257 036c 00000000 		.word	0
 258 0370 00000000 		.word	0
 259 0374 00000000 		.word	0
 260 0378 00000000 		.word	0
 261 037c 00000000 		.word	0
 262 0380 00000000 		.word	0
 263 0384 00000000 		.word	0
 264 0388 00000000 		.word	0
 265 038c 01000000 		.word	1
 266 0390 01000000 		.word	1
 267 0394 00000000 		.word	0
 268 0398 01000000 		.word	1
 269 039c 01000000 		.word	1
 270 03a0 01000000 		.word	1
 271 03a4 01000000 		.word	1
 272 03a8 01000000 		.word	1
 273 03ac 01000000 		.word	1
 274 03b0 01000000 		.word	1
 275 03b4 01000000 		.word	1
 276 03b8 01000000 		.word	1
 277 03bc 01000000 		.word	1
 278 03c0 01000000 		.word	1
 279 03c4 00000000 		.word	0
 280 03c8 01000000 		.word	1
 281 03cc 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 6


 282 03d0 01000000 		.word	1
 283 03d4 01000000 		.word	1
 284 03d8 01000000 		.word	1
 285 03dc 01000000 		.word	1
 286 03e0 00000000 		.word	0
 287 03e4 00000000 		.word	0
 288 03e8 00000000 		.word	0
 289 03ec 00000000 		.word	0
 290 03f0 00000000 		.word	0
 291 03f4 00000000 		.word	0
 292 03f8 00000000 		.word	0
 293 03fc 01000000 		.word	1
 294 0400 00000000 		.word	0
 295 0404 00000000 		.word	0
 296 0408 00000000 		.word	0
 297 040c 00000000 		.word	0
 298 0410 00000000 		.word	0
 299 0414 00000000 		.word	0
 300 0418 00000000 		.word	0
 301 041c 00000000 		.word	0
 302 0420 00000000 		.word	0
 303 0424 01000000 		.word	1
 304 0428 01000000 		.word	1
 305 042c 01000000 		.word	1
 306 0430 01000000 		.word	1
 307 0434 01000000 		.word	1
 308 0438 01000000 		.word	1
 309 043c 01000000 		.word	1
 310 0440 01000000 		.word	1
 311 0444 01000000 		.word	1
 312 0448 01000000 		.word	1
 313 044c 01000000 		.word	1
 314 0450 01000000 		.word	1
 315 0454 01000000 		.word	1
 316 0458 01000000 		.word	1
 317 045c 01000000 		.word	1
 318 0460 01000000 		.word	1
 319 0464 01000000 		.word	1
 320 0468 01000000 		.word	1
 321 046c 01000000 		.word	1
 322 0470 01000000 		.word	1
 323              		.global	start_pos
 324              		.align	2
 325              		.type	start_pos, %object
 326              		.size	start_pos, 8
 327              	start_pos:
 328 0474 01000000 		.word	1
 329 0478 01000000 		.word	1
 330              		.global	food_list
 331              		.align	2
 332              		.type	food_list, %object
 333              		.size	food_list, 40
 334              	food_list:
 335 047c 03000000 		.word	3
 336 0480 11000000 		.word	17
 337 0484 05000000 		.word	5
 338 0488 05000000 		.word	5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 7


 339 048c 07000000 		.word	7
 340 0490 01000000 		.word	1
 341 0494 0D000000 		.word	13
 342 0498 05000000 		.word	5
 343 049c 09000000 		.word	9
 344 04a0 09000000 		.word	9
 345              		.section	.rodata
 346              		.align	2
 347              	.LC0:
 348 0000 256400   		.ascii	"%d\000"
 349              		.section	.text.printMap,"ax",%progbits
 350              		.align	2
 351              		.global	printMap
 352              		.thumb
 353              		.thumb_func
 354              		.type	printMap, %function
 355              	printMap:
 356              	.LFB1:
 357              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Up; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static int numSteps = 0;
  26:pathfinding.c **** 
  27:pathfinding.c **** uint8_t instructionsListLength();
  28:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  29:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  30:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  31:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 8


  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  50:pathfinding.c **** };
  51:pathfinding.c **** 
  52:pathfinding.c **** /*
  53:pathfinding.c **** int map[15][19] = {
  54:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  55:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  56:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  57:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  58:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  60:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  62:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  64:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  65:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  66:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  68:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:pathfinding.c **** };
  70:pathfinding.c **** */
  71:pathfinding.c **** 
  72:pathfinding.c **** 
  73:pathfinding.c **** int start_pos[2] = {1,1};
  74:pathfinding.c **** 
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {3,17},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {7,1},
  79:pathfinding.c **** {13,5},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** 
  83:pathfinding.c **** // MAP INITIALISATION CODE
  84:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 358              		.loc 1 84 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 16
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 84B0     		sub	sp, sp, #16
 367              		.cfi_def_cfa_offset 24
 368 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 9


 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 371              	.LBB2:
  85:pathfinding.c ****     // Print the map in a grid format
  86:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 372              		.loc 1 86 0
 373 0008 0023     		movs	r3, #0
 374 000a FB60     		str	r3, [r7, #12]
 375 000c 1BE0     		b	.L2
 376              	.L5:
 377              	.LBB3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 378              		.loc 1 87 0
 379 000e 0023     		movs	r3, #0
 380 0010 BB60     		str	r3, [r7, #8]
 381 0012 0FE0     		b	.L3
 382              	.L4:
  88:pathfinding.c ****             printf("%d", map[i][j]);
 383              		.loc 1 88 0 discriminator 3
 384 0014 FB68     		ldr	r3, [r7, #12]
 385 0016 4C22     		movs	r2, #76
 386 0018 02FB03F3 		mul	r3, r2, r3
 387 001c 7A68     		ldr	r2, [r7, #4]
 388 001e 1344     		add	r3, r3, r2
 389 0020 BA68     		ldr	r2, [r7, #8]
 390 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 391 0026 1946     		mov	r1, r3
 392 0028 0A48     		ldr	r0, .L6
 393 002a FFF7FEFF 		bl	printf
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 394              		.loc 1 87 0 discriminator 3
 395 002e BB68     		ldr	r3, [r7, #8]
 396 0030 0133     		adds	r3, r3, #1
 397 0032 BB60     		str	r3, [r7, #8]
 398              	.L3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 399              		.loc 1 87 0 is_stmt 0 discriminator 1
 400 0034 BB68     		ldr	r3, [r7, #8]
 401 0036 122B     		cmp	r3, #18
 402 0038 ECDD     		ble	.L4
 403              	.LBE3:
  89:pathfinding.c ****         }
  90:pathfinding.c ****         printf("\n");
 404              		.loc 1 90 0 is_stmt 1 discriminator 2
 405 003a 0A20     		movs	r0, #10
 406 003c FFF7FEFF 		bl	putchar
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 407              		.loc 1 86 0 discriminator 2
 408 0040 FB68     		ldr	r3, [r7, #12]
 409 0042 0133     		adds	r3, r3, #1
 410 0044 FB60     		str	r3, [r7, #12]
 411              	.L2:
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 412              		.loc 1 86 0 is_stmt 0 discriminator 1
 413 0046 FB68     		ldr	r3, [r7, #12]
 414 0048 0E2B     		cmp	r3, #14
 415 004a E0DD     		ble	.L5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 10


 416              	.LBE2:
  91:pathfinding.c ****     }
  92:pathfinding.c **** }
 417              		.loc 1 92 0 is_stmt 1
 418 004c 00BF     		nop
 419 004e 1037     		adds	r7, r7, #16
 420              		.cfi_def_cfa_offset 8
 421 0050 BD46     		mov	sp, r7
 422              		.cfi_def_cfa_register 13
 423              		@ sp needed
 424 0052 80BD     		pop	{r7, pc}
 425              	.L7:
 426              		.align	2
 427              	.L6:
 428 0054 00000000 		.word	.LC0
 429              		.cfi_endproc
 430              	.LFE1:
 431              		.size	printMap, .-printMap
 432              		.section	.text.clearMap,"ax",%progbits
 433              		.align	2
 434              		.global	clearMap
 435              		.thumb
 436              		.thumb_func
 437              		.type	clearMap, %function
 438              	clearMap:
 439              	.LFB2:
  93:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 440              		.loc 1 93 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 7, -4
 448 0002 85B0     		sub	sp, sp, #20
 449              		.cfi_def_cfa_offset 24
 450 0004 00AF     		add	r7, sp, #0
 451              		.cfi_def_cfa_register 7
 452 0006 7860     		str	r0, [r7, #4]
 453              	.LBB4:
  94:pathfinding.c ****     // Print the map in a grid format
  95:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 454              		.loc 1 95 0
 455 0008 0023     		movs	r3, #0
 456 000a FB60     		str	r3, [r7, #12]
 457 000c 20E0     		b	.L9
 458              	.L13:
 459              	.LBB5:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 460              		.loc 1 96 0
 461 000e 0023     		movs	r3, #0
 462 0010 BB60     		str	r3, [r7, #8]
 463 0012 17E0     		b	.L10
 464              	.L12:
  97:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
 465              		.loc 1 97 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 11


 466 0014 FB68     		ldr	r3, [r7, #12]
 467 0016 4C22     		movs	r2, #76
 468 0018 02FB03F3 		mul	r3, r2, r3
 469 001c 7A68     		ldr	r2, [r7, #4]
 470 001e 1344     		add	r3, r3, r2
 471 0020 BA68     		ldr	r2, [r7, #8]
 472 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 473 0026 012B     		cmp	r3, #1
 474 0028 09D0     		beq	.L11
 475              		.loc 1 97 0 is_stmt 0 discriminator 1
 476 002a FB68     		ldr	r3, [r7, #12]
 477 002c 4C22     		movs	r2, #76
 478 002e 02FB03F3 		mul	r3, r2, r3
 479 0032 7A68     		ldr	r2, [r7, #4]
 480 0034 1344     		add	r3, r3, r2
 481 0036 BA68     		ldr	r2, [r7, #8]
 482 0038 0021     		movs	r1, #0
 483 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 484              	.L11:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 485              		.loc 1 96 0 is_stmt 1 discriminator 2
 486 003e BB68     		ldr	r3, [r7, #8]
 487 0040 0133     		adds	r3, r3, #1
 488 0042 BB60     		str	r3, [r7, #8]
 489              	.L10:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 490              		.loc 1 96 0 is_stmt 0 discriminator 1
 491 0044 BB68     		ldr	r3, [r7, #8]
 492 0046 122B     		cmp	r3, #18
 493 0048 E4DD     		ble	.L12
 494              	.LBE5:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 495              		.loc 1 95 0 is_stmt 1 discriminator 2
 496 004a FB68     		ldr	r3, [r7, #12]
 497 004c 0133     		adds	r3, r3, #1
 498 004e FB60     		str	r3, [r7, #12]
 499              	.L9:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 500              		.loc 1 95 0 is_stmt 0 discriminator 1
 501 0050 FB68     		ldr	r3, [r7, #12]
 502 0052 0E2B     		cmp	r3, #14
 503 0054 DBDD     		ble	.L13
 504              	.LBE4:
  98:pathfinding.c ****         }
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 505              		.loc 1 100 0 is_stmt 1
 506 0056 00BF     		nop
 507 0058 1437     		adds	r7, r7, #20
 508              		.cfi_def_cfa_offset 4
 509 005a BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 005c 80BC     		pop	{r7}
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 005e 7047     		bx	lr
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 12


 516              		.cfi_endproc
 517              	.LFE2:
 518              		.size	clearMap, .-clearMap
 519              		.comm	list_of_optimal_coordinates,2280,4
 520              		.global	moves
 521              		.data
 522              		.align	2
 523              		.type	moves, %object
 524              		.size	moves, 32
 525              	moves:
 526 04a4 00000000 		.word	0
 527 04a8 01000000 		.word	1
 528 04ac 00000000 		.word	0
 529 04b0 FFFFFFFF 		.word	-1
 530 04b4 01000000 		.word	1
 531 04b8 00000000 		.word	0
 532 04bc FFFFFFFF 		.word	-1
 533 04c0 00000000 		.word	0
 534              		.section	.text.isValidMove,"ax",%progbits
 535              		.align	2
 536              		.global	isValidMove
 537              		.thumb
 538              		.thumb_func
 539              		.type	isValidMove, %function
 540              	isValidMove:
 541              	.LFB3:
 101:pathfinding.c **** 
 102:pathfinding.c **** 
 103:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 104:pathfinding.c **** 
 105:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 106:pathfinding.c **** 
 107:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 542              		.loc 1 107 0
 543              		.cfi_startproc
 544              		@ args = 4, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              		.cfi_def_cfa_offset 4
 549              		.cfi_offset 7, -4
 550 0002 85B0     		sub	sp, sp, #20
 551              		.cfi_def_cfa_offset 24
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 554 0006 F860     		str	r0, [r7, #12]
 555 0008 B960     		str	r1, [r7, #8]
 556 000a 7A60     		str	r2, [r7, #4]
 557 000c 3B60     		str	r3, [r7]
 108:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 558              		.loc 1 108 0
 559 000e FB68     		ldr	r3, [r7, #12]
 560 0010 002B     		cmp	r3, #0
 561 0012 17DB     		blt	.L15
 562              		.loc 1 108 0 is_stmt 0 discriminator 1
 563 0014 FA68     		ldr	r2, [r7, #12]
 564 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 13


 565 0018 9A42     		cmp	r2, r3
 566 001a 13DA     		bge	.L15
 567              		.loc 1 108 0 discriminator 3
 568 001c BB68     		ldr	r3, [r7, #8]
 569 001e 002B     		cmp	r3, #0
 570 0020 10DB     		blt	.L15
 571              		.loc 1 108 0 discriminator 5
 572 0022 BA68     		ldr	r2, [r7, #8]
 573 0024 3B68     		ldr	r3, [r7]
 574 0026 9A42     		cmp	r2, r3
 575 0028 0CDA     		bge	.L15
 576              		.loc 1 108 0 discriminator 7
 577 002a FB68     		ldr	r3, [r7, #12]
 578 002c 4C22     		movs	r2, #76
 579 002e 02FB03F3 		mul	r3, r2, r3
 580 0032 BA69     		ldr	r2, [r7, #24]
 581 0034 1344     		add	r3, r3, r2
 582 0036 BA68     		ldr	r2, [r7, #8]
 583 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 584 003c 002B     		cmp	r3, #0
 585 003e 01D1     		bne	.L15
 586              		.loc 1 108 0 discriminator 9
 587 0040 0123     		movs	r3, #1
 588 0042 00E0     		b	.L16
 589              	.L15:
 590              		.loc 1 108 0 discriminator 10
 591 0044 0023     		movs	r3, #0
 592              	.L16:
 593              		.loc 1 108 0 discriminator 12
 594 0046 03F00103 		and	r3, r3, #1
 595 004a DBB2     		uxtb	r3, r3
 109:pathfinding.c **** }
 596              		.loc 1 109 0 is_stmt 1 discriminator 12
 597 004c 1846     		mov	r0, r3
 598 004e 1437     		adds	r7, r7, #20
 599              		.cfi_def_cfa_offset 4
 600 0050 BD46     		mov	sp, r7
 601              		.cfi_def_cfa_register 13
 602              		@ sp needed
 603 0052 80BC     		pop	{r7}
 604              		.cfi_restore 7
 605              		.cfi_def_cfa_offset 0
 606 0054 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE3:
 609              		.size	isValidMove, .-isValidMove
 610 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 611              		.align	2
 612              		.global	dijkstra
 613              		.thumb
 614              		.thumb_func
 615              		.type	dijkstra, %function
 616              	dijkstra:
 617              	.LFB4:
 110:pathfinding.c **** 
 111:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
 618              		.loc 1 111 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 14


 619              		.cfi_startproc
 620              		@ args = 12, pretend = 8, frame = 5816
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 82B0     		sub	sp, sp, #8
 623              		.cfi_def_cfa_offset 8
 624 0002 90B5     		push	{r4, r7, lr}
 625              		.cfi_def_cfa_offset 20
 626              		.cfi_offset 4, -20
 627              		.cfi_offset 7, -16
 628              		.cfi_offset 14, -12
 629 0004 ADF5B65D 		sub	sp, sp, #5824
 630              		.cfi_def_cfa_offset 5844
 631 0008 81B0     		sub	sp, sp, #4
 632              		.cfi_def_cfa_offset 5848
 633 000a 02AF     		add	r7, sp, #8
 634              		.cfi_def_cfa 7, 5840
 635 000c 07F11804 		add	r4, r7, #24
 636 0010 0C3C     		subs	r4, r4, #12
 637 0012 2060     		str	r0, [r4]
 638 0014 07F11800 		add	r0, r7, #24
 639 0018 1438     		subs	r0, r0, #20
 640 001a 80E80600 		stmia	r0, {r1, r2}
 641 001e 07F5B652 		add	r2, r7, #5824
 642 0022 02F10C02 		add	r2, r2, #12
 643 0026 1360     		str	r3, [r2]
 644              	.LBB6:
 112:pathfinding.c **** 
 113:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 114:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 645              		.loc 1 114 0
 646 0028 0023     		movs	r3, #0
 647 002a 07F5B552 		add	r2, r7, #5792
 648 002e 02F11402 		add	r2, r2, #20
 649 0032 1360     		str	r3, [r2]
 650 0034 3AE0     		b	.L19
 651              	.L22:
 652              	.LBB7:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 653              		.loc 1 115 0
 654 0036 0023     		movs	r3, #0
 655 0038 07F5B552 		add	r2, r7, #5792
 656 003c 02F11002 		add	r2, r2, #16
 657 0040 1360     		str	r3, [r2]
 658 0042 21E0     		b	.L20
 659              	.L21:
 116:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 660              		.loc 1 116 0 discriminator 3
 661 0044 07F58F51 		add	r1, r7, #4576
 662 0048 01F10C01 		add	r1, r1, #12
 663 004c 07F5B553 		add	r3, r7, #5792
 664 0050 03F11403 		add	r3, r3, #20
 665 0054 1A68     		ldr	r2, [r3]
 666 0056 1346     		mov	r3, r2
 667 0058 DB00     		lsls	r3, r3, #3
 668 005a 1344     		add	r3, r3, r2
 669 005c 5B00     		lsls	r3, r3, #1
 670 005e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 15


 671 0060 07F5B552 		add	r2, r7, #5792
 672 0064 02F11002 		add	r2, r2, #16
 673 0068 1268     		ldr	r2, [r2]
 674 006a 1344     		add	r3, r3, r2
 675 006c 0122     		movs	r2, #1
 676 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 677              		.loc 1 115 0 discriminator 3
 678 0072 07F5B553 		add	r3, r7, #5792
 679 0076 03F11003 		add	r3, r3, #16
 680 007a 1B68     		ldr	r3, [r3]
 681 007c 0133     		adds	r3, r3, #1
 682 007e 07F5B552 		add	r2, r7, #5792
 683 0082 02F11002 		add	r2, r2, #16
 684 0086 1360     		str	r3, [r2]
 685              	.L20:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 686              		.loc 1 115 0 is_stmt 0 discriminator 1
 687 0088 07F5B553 		add	r3, r7, #5792
 688 008c 03F11003 		add	r3, r3, #16
 689 0090 1B68     		ldr	r3, [r3]
 690 0092 122B     		cmp	r3, #18
 691 0094 D6DD     		ble	.L21
 692              	.LBE7:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 693              		.loc 1 114 0 is_stmt 1 discriminator 2
 694 0096 07F5B553 		add	r3, r7, #5792
 695 009a 03F11403 		add	r3, r3, #20
 696 009e 1B68     		ldr	r3, [r3]
 697 00a0 0133     		adds	r3, r3, #1
 698 00a2 07F5B552 		add	r2, r7, #5792
 699 00a6 02F11402 		add	r2, r2, #20
 700 00aa 1360     		str	r3, [r2]
 701              	.L19:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 702              		.loc 1 114 0 is_stmt 0 discriminator 1
 703 00ac 07F5B553 		add	r3, r7, #5792
 704 00b0 03F11403 		add	r3, r3, #20
 705 00b4 1B68     		ldr	r3, [r3]
 706 00b6 0E2B     		cmp	r3, #14
 707 00b8 BDDD     		ble	.L22
 708              	.LBE6:
 117:pathfinding.c ****         }
 118:pathfinding.c ****     }
 119:pathfinding.c **** 
 120:pathfinding.c ****     struct PriorityQueue {
 121:pathfinding.c ****         struct Location location;
 122:pathfinding.c ****         int distance;
 123:pathfinding.c ****     };
 124:pathfinding.c **** 
 125:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 126:pathfinding.c ****     int pqSize = 0;
 709              		.loc 1 126 0 is_stmt 1
 710 00ba 0023     		movs	r3, #0
 711 00bc 07F5B552 		add	r2, r7, #5792
 712 00c0 02F10C02 		add	r2, r2, #12
 713 00c4 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 16


 714              	.LBB8:
 127:pathfinding.c **** 
 128:pathfinding.c ****     // Initialize distances and paths arrays
 129:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 130:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 131:pathfinding.c **** 
 132:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 715              		.loc 1 132 0
 716 00c6 0023     		movs	r3, #0
 717 00c8 07F5B552 		add	r2, r7, #5792
 718 00cc 02F10802 		add	r2, r2, #8
 719 00d0 1360     		str	r3, [r2]
 720 00d2 3AE0     		b	.L23
 721              	.L26:
 722              	.LBB9:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 723              		.loc 1 133 0
 724 00d4 0023     		movs	r3, #0
 725 00d6 07F5B552 		add	r2, r7, #5792
 726 00da 02F10402 		add	r2, r2, #4
 727 00de 1360     		str	r3, [r2]
 728 00e0 21E0     		b	.L24
 729              	.L25:
 134:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 730              		.loc 1 134 0 discriminator 3
 731 00e2 07F13802 		add	r2, r7, #56
 732 00e6 1C3A     		subs	r2, r2, #28
 733 00e8 07F5B553 		add	r3, r7, #5792
 734 00ec 03F10803 		add	r3, r3, #8
 735 00f0 1968     		ldr	r1, [r3]
 736 00f2 0B46     		mov	r3, r1
 737 00f4 DB00     		lsls	r3, r3, #3
 738 00f6 0B44     		add	r3, r3, r1
 739 00f8 5B00     		lsls	r3, r3, #1
 740 00fa 0B44     		add	r3, r3, r1
 741 00fc 07F5B551 		add	r1, r7, #5792
 742 0100 01F10401 		add	r1, r1, #4
 743 0104 0968     		ldr	r1, [r1]
 744 0106 0B44     		add	r3, r3, r1
 745 0108 4FF47A71 		mov	r1, #1000
 746 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 747              		.loc 1 133 0 discriminator 3
 748 0110 07F5B553 		add	r3, r7, #5792
 749 0114 03F10403 		add	r3, r3, #4
 750 0118 1B68     		ldr	r3, [r3]
 751 011a 0133     		adds	r3, r3, #1
 752 011c 07F5B552 		add	r2, r7, #5792
 753 0120 02F10402 		add	r2, r2, #4
 754 0124 1360     		str	r3, [r2]
 755              	.L24:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 756              		.loc 1 133 0 is_stmt 0 discriminator 1
 757 0126 07F5B553 		add	r3, r7, #5792
 758 012a 03F10403 		add	r3, r3, #4
 759 012e 1B68     		ldr	r3, [r3]
 760 0130 122B     		cmp	r3, #18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 17


 761 0132 D6DD     		ble	.L25
 762              	.LBE9:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 763              		.loc 1 132 0 is_stmt 1 discriminator 2
 764 0134 07F5B553 		add	r3, r7, #5792
 765 0138 03F10803 		add	r3, r3, #8
 766 013c 1B68     		ldr	r3, [r3]
 767 013e 0133     		adds	r3, r3, #1
 768 0140 07F5B552 		add	r2, r7, #5792
 769 0144 02F10802 		add	r2, r2, #8
 770 0148 1360     		str	r3, [r2]
 771              	.L23:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 772              		.loc 1 132 0 is_stmt 0 discriminator 1
 773 014a 07F5B553 		add	r3, r7, #5792
 774 014e 03F10803 		add	r3, r3, #8
 775 0152 1B68     		ldr	r3, [r3]
 776 0154 0E2B     		cmp	r3, #14
 777 0156 BDDD     		ble	.L26
 778              	.LBE8:
 135:pathfinding.c ****         }
 136:pathfinding.c ****     }
 137:pathfinding.c **** 
 138:pathfinding.c ****     int stepNum = 0;
 779              		.loc 1 138 0 is_stmt 1
 780 0158 0023     		movs	r3, #0
 781 015a 07F5B552 		add	r2, r7, #5792
 782 015e 1360     		str	r3, [r2]
 139:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 783              		.loc 1 139 0
 784 0160 07F11803 		add	r3, r7, #24
 785 0164 143B     		subs	r3, r3, #20
 786 0166 1968     		ldr	r1, [r3]
 787 0168 07F11803 		add	r3, r7, #24
 788 016c 143B     		subs	r3, r3, #20
 789 016e 5868     		ldr	r0, [r3, #4]
 790 0170 07F13802 		add	r2, r7, #56
 791 0174 1C3A     		subs	r2, r2, #28
 792 0176 0B46     		mov	r3, r1
 793 0178 DB00     		lsls	r3, r3, #3
 794 017a 0B44     		add	r3, r3, r1
 795 017c 5B00     		lsls	r3, r3, #1
 796 017e 0B44     		add	r3, r3, r1
 797 0180 0344     		add	r3, r3, r0
 798 0182 0021     		movs	r1, #0
 799 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 140:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 141:pathfinding.c ****     stepNum++; // increment stepNum
 800              		.loc 1 141 0
 801 0188 07F5B553 		add	r3, r7, #5792
 802 018c 1B68     		ldr	r3, [r3]
 803 018e 0133     		adds	r3, r3, #1
 804 0190 07F5B552 		add	r2, r7, #5792
 805 0194 1360     		str	r3, [r2]
 142:pathfinding.c **** 
 143:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
 806              		.loc 1 143 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 18


 807 0196 07F59362 		add	r2, r7, #1176
 808 019a 083A     		subs	r2, r2, #8
 809 019c 07F5B553 		add	r3, r7, #5792
 810 01a0 03F10C03 		add	r3, r3, #12
 811 01a4 1968     		ldr	r1, [r3]
 812 01a6 0B46     		mov	r3, r1
 813 01a8 5B00     		lsls	r3, r3, #1
 814 01aa 0B44     		add	r3, r3, r1
 815 01ac 9B00     		lsls	r3, r3, #2
 816 01ae 1A44     		add	r2, r2, r3
 817 01b0 07F11803 		add	r3, r7, #24
 818 01b4 143B     		subs	r3, r3, #20
 819 01b6 93E80300 		ldmia	r3, {r0, r1}
 820 01ba 82E80300 		stmia	r2, {r0, r1}
 144:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 821              		.loc 1 144 0
 822 01be 07F59362 		add	r2, r7, #1176
 823 01c2 083A     		subs	r2, r2, #8
 824 01c4 07F5B553 		add	r3, r7, #5792
 825 01c8 03F10C03 		add	r3, r3, #12
 826 01cc 1968     		ldr	r1, [r3]
 827 01ce 0B46     		mov	r3, r1
 828 01d0 5B00     		lsls	r3, r3, #1
 829 01d2 0B44     		add	r3, r3, r1
 830 01d4 9B00     		lsls	r3, r3, #2
 831 01d6 1344     		add	r3, r3, r2
 832 01d8 0833     		adds	r3, r3, #8
 833 01da 0022     		movs	r2, #0
 834 01dc 1A60     		str	r2, [r3]
 145:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 835              		.loc 1 145 0
 836 01de 07F5B553 		add	r3, r7, #5792
 837 01e2 03F10C03 		add	r3, r3, #12
 838 01e6 1B68     		ldr	r3, [r3]
 839 01e8 0133     		adds	r3, r3, #1
 840 01ea 07F5B552 		add	r2, r7, #5792
 841 01ee 02F10C02 		add	r2, r2, #12
 842 01f2 1360     		str	r3, [r2]
 146:pathfinding.c **** 
 147:pathfinding.c ****     while (pqSize > 0) {
 843              		.loc 1 147 0
 844 01f4 F5E1     		b	.L27
 845              	.L37:
 846              	.LBB10:
 148:pathfinding.c ****         int idx = 0;
 847              		.loc 1 148 0
 848 01f6 0023     		movs	r3, #0
 849 01f8 07F5B452 		add	r2, r7, #5760
 850 01fc 02F11C02 		add	r2, r2, #28
 851 0200 1360     		str	r3, [r2]
 852              	.LBB11:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 853              		.loc 1 149 0
 854 0202 0123     		movs	r3, #1
 855 0204 07F5B452 		add	r2, r7, #5760
 856 0208 02F11802 		add	r2, r2, #24
 857 020c 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 19


 858 020e 34E0     		b	.L28
 859              	.L30:
 150:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 860              		.loc 1 150 0
 861 0210 07F59362 		add	r2, r7, #1176
 862 0214 083A     		subs	r2, r2, #8
 863 0216 07F5B453 		add	r3, r7, #5760
 864 021a 03F11803 		add	r3, r3, #24
 865 021e 1968     		ldr	r1, [r3]
 866 0220 0B46     		mov	r3, r1
 867 0222 5B00     		lsls	r3, r3, #1
 868 0224 0B44     		add	r3, r3, r1
 869 0226 9B00     		lsls	r3, r3, #2
 870 0228 1344     		add	r3, r3, r2
 871 022a 0833     		adds	r3, r3, #8
 872 022c 1868     		ldr	r0, [r3]
 873 022e 07F59362 		add	r2, r7, #1176
 874 0232 083A     		subs	r2, r2, #8
 875 0234 07F5B453 		add	r3, r7, #5760
 876 0238 03F11C03 		add	r3, r3, #28
 877 023c 1968     		ldr	r1, [r3]
 878 023e 0B46     		mov	r3, r1
 879 0240 5B00     		lsls	r3, r3, #1
 880 0242 0B44     		add	r3, r3, r1
 881 0244 9B00     		lsls	r3, r3, #2
 882 0246 1344     		add	r3, r3, r2
 883 0248 0833     		adds	r3, r3, #8
 884 024a 1B68     		ldr	r3, [r3]
 885 024c 9842     		cmp	r0, r3
 886 024e 09DA     		bge	.L29
 151:pathfinding.c ****                 idx = i; // find the shortest distance location 
 887              		.loc 1 151 0
 888 0250 07F5B453 		add	r3, r7, #5760
 889 0254 03F11803 		add	r3, r3, #24
 890 0258 1B68     		ldr	r3, [r3]
 891 025a 07F5B452 		add	r2, r7, #5760
 892 025e 02F11C02 		add	r2, r2, #28
 893 0262 1360     		str	r3, [r2]
 894              	.L29:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 895              		.loc 1 149 0 discriminator 2
 896 0264 07F5B453 		add	r3, r7, #5760
 897 0268 03F11803 		add	r3, r3, #24
 898 026c 1B68     		ldr	r3, [r3]
 899 026e 0133     		adds	r3, r3, #1
 900 0270 07F5B452 		add	r2, r7, #5760
 901 0274 02F11802 		add	r2, r2, #24
 902 0278 1360     		str	r3, [r2]
 903              	.L28:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 904              		.loc 1 149 0 is_stmt 0 discriminator 1
 905 027a 07F5B453 		add	r3, r7, #5760
 906 027e 03F11803 		add	r3, r3, #24
 907 0282 1A68     		ldr	r2, [r3]
 908 0284 07F5B553 		add	r3, r7, #5792
 909 0288 03F10C03 		add	r3, r3, #12
 910 028c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 20


 911 028e 9A42     		cmp	r2, r3
 912 0290 BEDB     		blt	.L30
 913              	.LBE11:
 152:pathfinding.c ****             }
 153:pathfinding.c ****         }
 154:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 914              		.loc 1 154 0 is_stmt 1
 915 0292 07F11801 		add	r1, r7, #24
 916 0296 0839     		subs	r1, r1, #8
 917 0298 07F59362 		add	r2, r7, #1176
 918 029c 083A     		subs	r2, r2, #8
 919 029e 07F5B453 		add	r3, r7, #5760
 920 02a2 03F11C03 		add	r3, r3, #28
 921 02a6 1868     		ldr	r0, [r3]
 922 02a8 0346     		mov	r3, r0
 923 02aa 5B00     		lsls	r3, r3, #1
 924 02ac 0344     		add	r3, r3, r0
 925 02ae 9B00     		lsls	r3, r3, #2
 926 02b0 1A44     		add	r2, r2, r3
 927 02b2 0B46     		mov	r3, r1
 928 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 929 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 155:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 930              		.loc 1 155 0
 931 02ba 07F5B553 		add	r3, r7, #5792
 932 02be 03F10C03 		add	r3, r3, #12
 933 02c2 1B68     		ldr	r3, [r3]
 934 02c4 591E     		subs	r1, r3, #1
 935 02c6 07F59362 		add	r2, r7, #1176
 936 02ca 083A     		subs	r2, r2, #8
 937 02cc 07F5B453 		add	r3, r7, #5760
 938 02d0 03F11C03 		add	r3, r3, #28
 939 02d4 1868     		ldr	r0, [r3]
 940 02d6 0346     		mov	r3, r0
 941 02d8 5B00     		lsls	r3, r3, #1
 942 02da 0344     		add	r3, r3, r0
 943 02dc 9B00     		lsls	r3, r3, #2
 944 02de D018     		adds	r0, r2, r3
 945 02e0 07F59362 		add	r2, r7, #1176
 946 02e4 083A     		subs	r2, r2, #8
 947 02e6 0B46     		mov	r3, r1
 948 02e8 5B00     		lsls	r3, r3, #1
 949 02ea 0B44     		add	r3, r3, r1
 950 02ec 9B00     		lsls	r3, r3, #2
 951 02ee 1A44     		add	r2, r2, r3
 952 02f0 0346     		mov	r3, r0
 953 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 954 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 156:pathfinding.c ****         pqSize--; // decrement pqSize
 955              		.loc 1 156 0
 956 02f8 07F5B553 		add	r3, r7, #5792
 957 02fc 03F10C03 		add	r3, r3, #12
 958 0300 1B68     		ldr	r3, [r3]
 959 0302 013B     		subs	r3, r3, #1
 960 0304 07F5B552 		add	r2, r7, #5792
 961 0308 02F10C02 		add	r2, r2, #12
 962 030c 1360     		str	r3, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 21


 157:pathfinding.c **** 
 158:pathfinding.c ****         int row = current.location.row;
 963              		.loc 1 158 0
 964 030e 07F11803 		add	r3, r7, #24
 965 0312 083B     		subs	r3, r3, #8
 966 0314 1B68     		ldr	r3, [r3]
 967 0316 07F5B352 		add	r2, r7, #5728
 968 031a 02F11C02 		add	r2, r2, #28
 969 031e 1360     		str	r3, [r2]
 159:pathfinding.c ****         int col = current.location.col; // get current location details
 970              		.loc 1 159 0
 971 0320 07F11803 		add	r3, r7, #24
 972 0324 083B     		subs	r3, r3, #8
 973 0326 5B68     		ldr	r3, [r3, #4]
 974 0328 07F5B352 		add	r2, r7, #5728
 975 032c 02F11802 		add	r2, r2, #24
 976 0330 1360     		str	r3, [r2]
 160:pathfinding.c **** 
 161:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 977              		.loc 1 161 0
 978 0332 07F58F51 		add	r1, r7, #4576
 979 0336 01F10C01 		add	r1, r1, #12
 980 033a 07F5B353 		add	r3, r7, #5728
 981 033e 03F11C03 		add	r3, r3, #28
 982 0342 1A68     		ldr	r2, [r3]
 983 0344 1346     		mov	r3, r2
 984 0346 DB00     		lsls	r3, r3, #3
 985 0348 1344     		add	r3, r3, r2
 986 034a 5B00     		lsls	r3, r3, #1
 987 034c 1344     		add	r3, r3, r2
 988 034e 07F5B352 		add	r2, r7, #5728
 989 0352 02F11802 		add	r2, r2, #24
 990 0356 1268     		ldr	r2, [r2]
 991 0358 1344     		add	r3, r3, r2
 992 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 993 035e 012B     		cmp	r3, #1
 994 0360 40F03F81 		bne	.L27
 162:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 995              		.loc 1 162 0
 996 0364 07F58F51 		add	r1, r7, #4576
 997 0368 01F10C01 		add	r1, r1, #12
 998 036c 07F5B353 		add	r3, r7, #5728
 999 0370 03F11C03 		add	r3, r3, #28
 1000 0374 1A68     		ldr	r2, [r3]
 1001 0376 1346     		mov	r3, r2
 1002 0378 DB00     		lsls	r3, r3, #3
 1003 037a 1344     		add	r3, r3, r2
 1004 037c 5B00     		lsls	r3, r3, #1
 1005 037e 1344     		add	r3, r3, r2
 1006 0380 07F5B352 		add	r2, r7, #5728
 1007 0384 02F11802 		add	r2, r2, #24
 1008 0388 1268     		ldr	r2, [r2]
 1009 038a 1344     		add	r3, r3, r2
 1010 038c 0022     		movs	r2, #0
 1011 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 163:pathfinding.c **** 
 164:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 22


 1012              		.loc 1 164 0
 1013 0392 07F5B653 		add	r3, r7, #5824
 1014 0396 03F10C03 		add	r3, r3, #12
 1015 039a 1A68     		ldr	r2, [r3]
 1016 039c 07F5B353 		add	r3, r7, #5728
 1017 03a0 03F11C03 		add	r3, r3, #28
 1018 03a4 1B68     		ldr	r3, [r3]
 1019 03a6 9A42     		cmp	r2, r3
 1020 03a8 0CD1     		bne	.L32
 1021              		.loc 1 164 0 is_stmt 0 discriminator 1
 1022 03aa 07F5B653 		add	r3, r7, #5824
 1023 03ae 03F11003 		add	r3, r3, #16
 1024 03b2 1A68     		ldr	r2, [r3]
 1025 03b4 07F5B353 		add	r3, r7, #5728
 1026 03b8 03F11803 		add	r3, r3, #24
 1027 03bc 1B68     		ldr	r3, [r3]
 1028 03be 9A42     		cmp	r2, r3
 1029 03c0 00F01881 		beq	.L43
 1030              	.L32:
 1031              	.LBB12:
 165:pathfinding.c ****                 break; // if reached target destination, end
 166:pathfinding.c ****             }
 167:pathfinding.c ****             // make a move, check if valid
 168:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1032              		.loc 1 168 0 is_stmt 1
 1033 03c4 0023     		movs	r3, #0
 1034 03c6 07F5B452 		add	r2, r7, #5760
 1035 03ca 02F11402 		add	r2, r2, #20
 1036 03ce 1360     		str	r3, [r2]
 1037 03d0 FFE0     		b	.L34
 1038              	.L36:
 1039              	.LBB13:
 169:pathfinding.c ****                 int newRow = row + moves[i].row;
 1040              		.loc 1 169 0
 1041 03d2 D04A     		ldr	r2, .L44
 1042 03d4 07F5B453 		add	r3, r7, #5760
 1043 03d8 03F11403 		add	r3, r3, #20
 1044 03dc 1B68     		ldr	r3, [r3]
 1045 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1046 03e2 07F5B353 		add	r3, r7, #5728
 1047 03e6 03F11C03 		add	r3, r3, #28
 1048 03ea 1B68     		ldr	r3, [r3]
 1049 03ec 1344     		add	r3, r3, r2
 1050 03ee 07F5B352 		add	r2, r7, #5728
 1051 03f2 02F11402 		add	r2, r2, #20
 1052 03f6 1360     		str	r3, [r2]
 170:pathfinding.c ****                 int newCol = col + moves[i].col;
 1053              		.loc 1 170 0
 1054 03f8 C64A     		ldr	r2, .L44
 1055 03fa 07F5B453 		add	r3, r7, #5760
 1056 03fe 03F11403 		add	r3, r3, #20
 1057 0402 1B68     		ldr	r3, [r3]
 1058 0404 DB00     		lsls	r3, r3, #3
 1059 0406 1344     		add	r3, r3, r2
 1060 0408 5A68     		ldr	r2, [r3, #4]
 1061 040a 07F5B353 		add	r3, r7, #5728
 1062 040e 03F11803 		add	r3, r3, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 23


 1063 0412 1B68     		ldr	r3, [r3]
 1064 0414 1344     		add	r3, r3, r2
 1065 0416 07F5B352 		add	r2, r7, #5728
 1066 041a 02F11002 		add	r2, r2, #16
 1067 041e 1360     		str	r3, [r2]
 171:pathfinding.c **** 
 172:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1068              		.loc 1 172 0
 1069 0420 07F11803 		add	r3, r7, #24
 1070 0424 0C3B     		subs	r3, r3, #12
 1071 0426 1B68     		ldr	r3, [r3]
 1072 0428 0093     		str	r3, [sp]
 1073 042a 1323     		movs	r3, #19
 1074 042c 0F22     		movs	r2, #15
 1075 042e 07F5B351 		add	r1, r7, #5728
 1076 0432 01F11001 		add	r1, r1, #16
 1077 0436 0968     		ldr	r1, [r1]
 1078 0438 07F5B350 		add	r0, r7, #5728
 1079 043c 00F11400 		add	r0, r0, #20
 1080 0440 0068     		ldr	r0, [r0]
 1081 0442 FFF7FEFF 		bl	isValidMove
 1082 0446 0346     		mov	r3, r0
 1083 0448 002B     		cmp	r3, #0
 1084 044a 00F0B780 		beq	.L35
 1085              		.loc 1 172 0 is_stmt 0 discriminator 1
 1086 044e 07F58F51 		add	r1, r7, #4576
 1087 0452 01F10C01 		add	r1, r1, #12
 1088 0456 07F5B353 		add	r3, r7, #5728
 1089 045a 03F11403 		add	r3, r3, #20
 1090 045e 1A68     		ldr	r2, [r3]
 1091 0460 1346     		mov	r3, r2
 1092 0462 DB00     		lsls	r3, r3, #3
 1093 0464 1344     		add	r3, r3, r2
 1094 0466 5B00     		lsls	r3, r3, #1
 1095 0468 1344     		add	r3, r3, r2
 1096 046a 07F5B352 		add	r2, r7, #5728
 1097 046e 02F11002 		add	r2, r2, #16
 1098 0472 1268     		ldr	r2, [r2]
 1099 0474 1344     		add	r3, r3, r2
 1100 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1101 047a 012B     		cmp	r3, #1
 1102 047c 40F09E80 		bne	.L35
 1103              	.LBB14:
 173:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1104              		.loc 1 173 0 is_stmt 1
 1105 0480 07F13802 		add	r2, r7, #56
 1106 0484 1C3A     		subs	r2, r2, #28
 1107 0486 07F5B353 		add	r3, r7, #5728
 1108 048a 03F11C03 		add	r3, r3, #28
 1109 048e 1968     		ldr	r1, [r3]
 1110 0490 0B46     		mov	r3, r1
 1111 0492 DB00     		lsls	r3, r3, #3
 1112 0494 0B44     		add	r3, r3, r1
 1113 0496 5B00     		lsls	r3, r3, #1
 1114 0498 0B44     		add	r3, r3, r1
 1115 049a 07F5B351 		add	r1, r7, #5728
 1116 049e 01F11801 		add	r1, r1, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 24


 1117 04a2 0968     		ldr	r1, [r1]
 1118 04a4 0B44     		add	r3, r3, r1
 1119 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1120 04aa 0133     		adds	r3, r3, #1
 1121 04ac 07F5B352 		add	r2, r7, #5728
 1122 04b0 02F10C02 		add	r2, r2, #12
 1123 04b4 1360     		str	r3, [r2]
 174:pathfinding.c ****                     // take the shortest distance between new and existing
 175:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1124              		.loc 1 175 0
 1125 04b6 07F13802 		add	r2, r7, #56
 1126 04ba 1C3A     		subs	r2, r2, #28
 1127 04bc 07F5B353 		add	r3, r7, #5728
 1128 04c0 03F11403 		add	r3, r3, #20
 1129 04c4 1968     		ldr	r1, [r3]
 1130 04c6 0B46     		mov	r3, r1
 1131 04c8 DB00     		lsls	r3, r3, #3
 1132 04ca 0B44     		add	r3, r3, r1
 1133 04cc 5B00     		lsls	r3, r3, #1
 1134 04ce 0B44     		add	r3, r3, r1
 1135 04d0 07F5B351 		add	r1, r7, #5728
 1136 04d4 01F11001 		add	r1, r1, #16
 1137 04d8 0968     		ldr	r1, [r1]
 1138 04da 0B44     		add	r3, r3, r1
 1139 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1140 04e0 07F5B353 		add	r3, r7, #5728
 1141 04e4 03F10C03 		add	r3, r3, #12
 1142 04e8 1B68     		ldr	r3, [r3]
 1143 04ea 9A42     		cmp	r2, r3
 1144 04ec 66DD     		ble	.L35
 176:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1145              		.loc 1 176 0
 1146 04ee 07F13802 		add	r2, r7, #56
 1147 04f2 1C3A     		subs	r2, r2, #28
 1148 04f4 07F5B353 		add	r3, r7, #5728
 1149 04f8 03F11403 		add	r3, r3, #20
 1150 04fc 1968     		ldr	r1, [r3]
 1151 04fe 0B46     		mov	r3, r1
 1152 0500 DB00     		lsls	r3, r3, #3
 1153 0502 0B44     		add	r3, r3, r1
 1154 0504 5B00     		lsls	r3, r3, #1
 1155 0506 0B44     		add	r3, r3, r1
 1156 0508 07F5B351 		add	r1, r7, #5728
 1157 050c 01F11001 		add	r1, r1, #16
 1158 0510 0968     		ldr	r1, [r1]
 1159 0512 0B44     		add	r3, r3, r1
 1160 0514 07F5B351 		add	r1, r7, #5728
 1161 0518 01F10C01 		add	r1, r1, #12
 1162 051c 0968     		ldr	r1, [r1]
 1163 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 177:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 178:pathfinding.c ****                         
 179:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1164              		.loc 1 179 0
 1165 0522 07F59362 		add	r2, r7, #1176
 1166 0526 083A     		subs	r2, r2, #8
 1167 0528 07F5B553 		add	r3, r7, #5792
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 25


 1168 052c 03F10C03 		add	r3, r3, #12
 1169 0530 1968     		ldr	r1, [r3]
 1170 0532 0B46     		mov	r3, r1
 1171 0534 5B00     		lsls	r3, r3, #1
 1172 0536 0B44     		add	r3, r3, r1
 1173 0538 9B00     		lsls	r3, r3, #2
 1174 053a 1344     		add	r3, r3, r2
 1175 053c 07F5B352 		add	r2, r7, #5728
 1176 0540 02F11402 		add	r2, r2, #20
 1177 0544 1268     		ldr	r2, [r2]
 1178 0546 1A60     		str	r2, [r3]
 180:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1179              		.loc 1 180 0
 1180 0548 07F59362 		add	r2, r7, #1176
 1181 054c 083A     		subs	r2, r2, #8
 1182 054e 07F5B553 		add	r3, r7, #5792
 1183 0552 03F10C03 		add	r3, r3, #12
 1184 0556 1968     		ldr	r1, [r3]
 1185 0558 0B46     		mov	r3, r1
 1186 055a 5B00     		lsls	r3, r3, #1
 1187 055c 0B44     		add	r3, r3, r1
 1188 055e 9B00     		lsls	r3, r3, #2
 1189 0560 1344     		add	r3, r3, r2
 1190 0562 0433     		adds	r3, r3, #4
 1191 0564 07F5B352 		add	r2, r7, #5728
 1192 0568 02F11002 		add	r2, r2, #16
 1193 056c 1268     		ldr	r2, [r2]
 1194 056e 1A60     		str	r2, [r3]
 181:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1195              		.loc 1 181 0
 1196 0570 07F59362 		add	r2, r7, #1176
 1197 0574 083A     		subs	r2, r2, #8
 1198 0576 07F5B553 		add	r3, r7, #5792
 1199 057a 03F10C03 		add	r3, r3, #12
 1200 057e 1968     		ldr	r1, [r3]
 1201 0580 0B46     		mov	r3, r1
 1202 0582 5B00     		lsls	r3, r3, #1
 1203 0584 0B44     		add	r3, r3, r1
 1204 0586 9B00     		lsls	r3, r3, #2
 1205 0588 1344     		add	r3, r3, r2
 1206 058a 0833     		adds	r3, r3, #8
 1207 058c 07F5B352 		add	r2, r7, #5728
 1208 0590 02F10C02 		add	r2, r2, #12
 1209 0594 1268     		ldr	r2, [r2]
 1210 0596 1A60     		str	r2, [r3]
 182:pathfinding.c ****                         
 183:pathfinding.c ****                         stepNum++;
 1211              		.loc 1 183 0
 1212 0598 07F5B553 		add	r3, r7, #5792
 1213 059c 1B68     		ldr	r3, [r3]
 1214 059e 0133     		adds	r3, r3, #1
 1215 05a0 07F5B552 		add	r2, r7, #5792
 1216 05a4 1360     		str	r3, [r2]
 184:pathfinding.c ****                         pqSize++;
 1217              		.loc 1 184 0
 1218 05a6 07F5B553 		add	r3, r7, #5792
 1219 05aa 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 26


 1220 05ae 1B68     		ldr	r3, [r3]
 1221 05b0 0133     		adds	r3, r3, #1
 1222 05b2 07F5B552 		add	r2, r7, #5792
 1223 05b6 02F10C02 		add	r2, r2, #12
 1224 05ba 1360     		str	r3, [r2]
 1225              	.L35:
 1226              	.LBE14:
 1227              	.LBE13:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1228              		.loc 1 168 0 discriminator 2
 1229 05bc 07F5B453 		add	r3, r7, #5760
 1230 05c0 03F11403 		add	r3, r3, #20
 1231 05c4 1B68     		ldr	r3, [r3]
 1232 05c6 0133     		adds	r3, r3, #1
 1233 05c8 07F5B452 		add	r2, r7, #5760
 1234 05cc 02F11402 		add	r2, r2, #20
 1235 05d0 1360     		str	r3, [r2]
 1236              	.L34:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1237              		.loc 1 168 0 is_stmt 0 discriminator 1
 1238 05d2 07F5B453 		add	r3, r7, #5760
 1239 05d6 03F11403 		add	r3, r3, #20
 1240 05da 1B68     		ldr	r3, [r3]
 1241 05dc 032B     		cmp	r3, #3
 1242 05de 7FF6F8AE 		bls	.L36
 1243              	.L27:
 1244              	.LBE12:
 1245              	.LBE10:
 147:pathfinding.c ****         int idx = 0;
 1246              		.loc 1 147 0 is_stmt 1
 1247 05e2 07F5B553 		add	r3, r7, #5792
 1248 05e6 03F10C03 		add	r3, r3, #12
 1249 05ea 1B68     		ldr	r3, [r3]
 1250 05ec 002B     		cmp	r3, #0
 1251 05ee 3FF702AE 		bgt	.L37
 1252 05f2 00E0     		b	.L33
 1253              	.L43:
 1254              	.LBB15:
 165:pathfinding.c ****             }
 1255              		.loc 1 165 0
 1256 05f4 00BF     		nop
 1257              	.L33:
 1258              	.LBE15:
 185:pathfinding.c ****                     }
 186:pathfinding.c ****                 }
 187:pathfinding.c ****             }
 188:pathfinding.c ****         }
 189:pathfinding.c ****     }
 190:pathfinding.c **** 
 191:pathfinding.c ****     // PATH RECONSTRUCTION
 192:pathfinding.c ****     // initialise maximum distance- will be decremented
 193:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1259              		.loc 1 193 0
 1260 05f6 07F5B653 		add	r3, r7, #5824
 1261 05fa 03F10C03 		add	r3, r3, #12
 1262 05fe 1968     		ldr	r1, [r3]
 1263 0600 07F5B653 		add	r3, r7, #5824
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 27


 1264 0604 03F11003 		add	r3, r3, #16
 1265 0608 1868     		ldr	r0, [r3]
 1266 060a 07F13802 		add	r2, r7, #56
 1267 060e 1C3A     		subs	r2, r2, #28
 1268 0610 0B46     		mov	r3, r1
 1269 0612 DB00     		lsls	r3, r3, #3
 1270 0614 0B44     		add	r3, r3, r1
 1271 0616 5B00     		lsls	r3, r3, #1
 1272 0618 0B44     		add	r3, r3, r1
 1273 061a 0344     		add	r3, r3, r0
 1274 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1275 0620 07F5B452 		add	r2, r7, #5760
 1276 0624 02F11002 		add	r2, r2, #16
 1277 0628 1360     		str	r3, [r2]
 194:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1278              		.loc 1 194 0
 1279 062a 3B4A     		ldr	r2, .L44+4
 1280 062c 07F5B453 		add	r3, r7, #5760
 1281 0630 03F11003 		add	r3, r3, #16
 1282 0634 1B68     		ldr	r3, [r3]
 1283 0636 1360     		str	r3, [r2]
 195:pathfinding.c ****     // retsteps can be generated from here
 196:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1284              		.loc 1 196 0
 1285 0638 07F5B453 		add	r3, r7, #5760
 1286 063c 03F11003 		add	r3, r3, #16
 1287 0640 1B68     		ldr	r3, [r3]
 1288 0642 DB00     		lsls	r3, r3, #3
 1289 0644 1846     		mov	r0, r3
 1290 0646 FFF7FEFF 		bl	malloc
 1291 064a 0346     		mov	r3, r0
 1292 064c 07F5B352 		add	r2, r7, #5728
 1293 0650 02F10802 		add	r2, r2, #8
 1294 0654 1360     		str	r3, [r2]
 197:pathfinding.c ****     int currentRow = targetlocation.row;
 1295              		.loc 1 197 0
 1296 0656 07F5B653 		add	r3, r7, #5824
 1297 065a 03F10C03 		add	r3, r3, #12
 1298 065e 1B68     		ldr	r3, [r3]
 1299 0660 07F5B452 		add	r2, r7, #5760
 1300 0664 02F10C02 		add	r2, r2, #12
 1301 0668 1360     		str	r3, [r2]
 198:pathfinding.c ****     int currentCol = targetlocation.col;
 1302              		.loc 1 198 0
 1303 066a 07F5B653 		add	r3, r7, #5824
 1304 066e 03F11003 		add	r3, r3, #16
 1305 0672 1B68     		ldr	r3, [r3]
 1306 0674 07F5B452 		add	r2, r7, #5760
 1307 0678 02F10802 		add	r2, r2, #8
 1308 067c 1360     		str	r3, [r2]
 199:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1309              		.loc 1 199 0
 1310 067e 07F5B453 		add	r3, r7, #5760
 1311 0682 03F11003 		add	r3, r3, #16
 1312 0686 1B68     		ldr	r3, [r3]
 1313 0688 03F10053 		add	r3, r3, #536870912
 1314 068c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 28


 1315 068e DB00     		lsls	r3, r3, #3
 1316 0690 07F5B352 		add	r2, r7, #5728
 1317 0694 02F10802 		add	r2, r2, #8
 1318 0698 1268     		ldr	r2, [r2]
 1319 069a 1344     		add	r3, r3, r2
 1320 069c 07F5B452 		add	r2, r7, #5760
 1321 06a0 02F10C02 		add	r2, r2, #12
 1322 06a4 1268     		ldr	r2, [r2]
 1323 06a6 1A60     		str	r2, [r3]
 200:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1324              		.loc 1 200 0
 1325 06a8 07F5B453 		add	r3, r7, #5760
 1326 06ac 03F11003 		add	r3, r3, #16
 1327 06b0 1B68     		ldr	r3, [r3]
 1328 06b2 03F10053 		add	r3, r3, #536870912
 1329 06b6 013B     		subs	r3, r3, #1
 1330 06b8 DB00     		lsls	r3, r3, #3
 1331 06ba 07F5B352 		add	r2, r7, #5728
 1332 06be 02F10802 		add	r2, r2, #8
 1333 06c2 1268     		ldr	r2, [r2]
 1334 06c4 1344     		add	r3, r3, r2
 1335 06c6 07F5B452 		add	r2, r7, #5760
 1336 06ca 02F10802 		add	r2, r2, #8
 1337 06ce 1268     		ldr	r2, [r2]
 1338 06d0 5A60     		str	r2, [r3, #4]
 201:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 202:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1339              		.loc 1 202 0
 1340 06d2 07F5B453 		add	r3, r7, #5760
 1341 06d6 03F10C03 		add	r3, r3, #12
 1342 06da 1B68     		ldr	r3, [r3]
 1343 06dc 4C22     		movs	r2, #76
 1344 06de 02FB03F2 		mul	r2, r2, r3
 1345 06e2 07F11803 		add	r3, r7, #24
 1346 06e6 0C3B     		subs	r3, r3, #12
 1347 06e8 1B68     		ldr	r3, [r3]
 1348 06ea 1344     		add	r3, r3, r2
 1349 06ec 07F5B452 		add	r2, r7, #5760
 1350 06f0 02F10802 		add	r2, r2, #8
 1351 06f4 1268     		ldr	r2, [r2]
 1352 06f6 0921     		movs	r1, #9
 1353 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 203:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 204:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 205:pathfinding.c ****     int pathIndex = 0;
 1354              		.loc 1 205 0
 1355 06fc 0023     		movs	r3, #0
 1356 06fe 07F5B452 		add	r2, r7, #5760
 1357 0702 02F10402 		add	r2, r2, #4
 1358 0706 1360     		str	r3, [r2]
 206:pathfinding.c **** 
 207:pathfinding.c ****     while(shortestDist > 0) {    
 1359              		.loc 1 207 0
 1360 0708 0BE1     		b	.L38
 1361              	.L42:
 1362              	.LBB16:
 208:pathfinding.c ****         // make a move, check if valid and is the next step in path
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 29


 209:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1363              		.loc 1 209 0
 1364 070a 0023     		movs	r3, #0
 1365 070c 07F5B452 		add	r2, r7, #5760
 1366 0710 1360     		str	r3, [r2]
 1367 0712 00E1     		b	.L39
 1368              	.L45:
 1369              		.align	2
 1370              	.L44:
 1371 0714 00000000 		.word	moves
 1372 0718 D4110000 		.word	numSteps
 1373              	.L41:
 1374              	.LBB17:
 210:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1375              		.loc 1 210 0
 1376 071c 894A     		ldr	r2, .L46
 1377 071e 07F5B453 		add	r3, r7, #5760
 1378 0722 1B68     		ldr	r3, [r3]
 1379 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1380 0728 07F5B453 		add	r3, r7, #5760
 1381 072c 03F10C03 		add	r3, r3, #12
 1382 0730 1B68     		ldr	r3, [r3]
 1383 0732 1344     		add	r3, r3, r2
 1384 0734 07F5B352 		add	r2, r7, #5728
 1385 0738 02F10402 		add	r2, r2, #4
 1386 073c 1360     		str	r3, [r2]
 211:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1387              		.loc 1 211 0
 1388 073e 814A     		ldr	r2, .L46
 1389 0740 07F5B453 		add	r3, r7, #5760
 1390 0744 1B68     		ldr	r3, [r3]
 1391 0746 DB00     		lsls	r3, r3, #3
 1392 0748 1344     		add	r3, r3, r2
 1393 074a 5A68     		ldr	r2, [r3, #4]
 1394 074c 07F5B453 		add	r3, r7, #5760
 1395 0750 03F10803 		add	r3, r3, #8
 1396 0754 1B68     		ldr	r3, [r3]
 1397 0756 1344     		add	r3, r3, r2
 1398 0758 07F5B352 		add	r2, r7, #5728
 1399 075c 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1400              		.loc 1 213 0
 1401 075e 07F11803 		add	r3, r7, #24
 1402 0762 0C3B     		subs	r3, r3, #12
 1403 0764 1B68     		ldr	r3, [r3]
 1404 0766 0093     		str	r3, [sp]
 1405 0768 1323     		movs	r3, #19
 1406 076a 0F22     		movs	r2, #15
 1407 076c 07F5B351 		add	r1, r7, #5728
 1408 0770 0968     		ldr	r1, [r1]
 1409 0772 07F5B350 		add	r0, r7, #5728
 1410 0776 00F10400 		add	r0, r0, #4
 1411 077a 0068     		ldr	r0, [r0]
 1412 077c FFF7FEFF 		bl	isValidMove
 1413 0780 0346     		mov	r3, r0
 1414 0782 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 30


 1415 0784 00F0C080 		beq	.L40
 1416              		.loc 1 213 0 is_stmt 0 discriminator 1
 1417 0788 07F13802 		add	r2, r7, #56
 1418 078c 1C3A     		subs	r2, r2, #28
 1419 078e 07F5B353 		add	r3, r7, #5728
 1420 0792 03F10403 		add	r3, r3, #4
 1421 0796 1968     		ldr	r1, [r3]
 1422 0798 0B46     		mov	r3, r1
 1423 079a DB00     		lsls	r3, r3, #3
 1424 079c 0B44     		add	r3, r3, r1
 1425 079e 5B00     		lsls	r3, r3, #1
 1426 07a0 0B44     		add	r3, r3, r1
 1427 07a2 07F5B351 		add	r1, r7, #5728
 1428 07a6 0968     		ldr	r1, [r1]
 1429 07a8 0B44     		add	r3, r3, r1
 1430 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1431 07ae 07F5B453 		add	r3, r7, #5760
 1432 07b2 03F11003 		add	r3, r3, #16
 1433 07b6 1B68     		ldr	r3, [r3]
 1434 07b8 013B     		subs	r3, r3, #1
 1435 07ba 9A42     		cmp	r2, r3
 1436 07bc 40F0A480 		bne	.L40
 214:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1437              		.loc 1 214 0 is_stmt 1
 1438 07c0 07F5B353 		add	r3, r7, #5728
 1439 07c4 03F10403 		add	r3, r3, #4
 1440 07c8 1B68     		ldr	r3, [r3]
 1441 07ca 4C22     		movs	r2, #76
 1442 07cc 02FB03F2 		mul	r2, r2, r3
 1443 07d0 07F11803 		add	r3, r7, #24
 1444 07d4 0C3B     		subs	r3, r3, #12
 1445 07d6 1B68     		ldr	r3, [r3]
 1446 07d8 1344     		add	r3, r3, r2
 1447 07da 07F5B352 		add	r2, r7, #5728
 1448 07de 1268     		ldr	r2, [r2]
 1449 07e0 0821     		movs	r1, #8
 1450 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 215:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1451              		.loc 1 215 0
 1452 07e6 5849     		ldr	r1, .L46+4
 1453 07e8 07F5B453 		add	r3, r7, #5760
 1454 07ec 03F10403 		add	r3, r3, #4
 1455 07f0 1B68     		ldr	r3, [r3]
 1456 07f2 07F5B352 		add	r2, r7, #5728
 1457 07f6 02F10402 		add	r2, r2, #4
 1458 07fa 1268     		ldr	r2, [r2]
 1459 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 216:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1460              		.loc 1 216 0
 1461 0800 514A     		ldr	r2, .L46+4
 1462 0802 07F5B453 		add	r3, r7, #5760
 1463 0806 03F10403 		add	r3, r3, #4
 1464 080a 1B68     		ldr	r3, [r3]
 1465 080c DB00     		lsls	r3, r3, #3
 1466 080e 1344     		add	r3, r3, r2
 1467 0810 07F5B352 		add	r2, r7, #5728
 1468 0814 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 31


 1469 0816 5A60     		str	r2, [r3, #4]
 217:pathfinding.c ****                 pathIndex++;
 1470              		.loc 1 217 0
 1471 0818 07F5B453 		add	r3, r7, #5760
 1472 081c 03F10403 		add	r3, r3, #4
 1473 0820 1B68     		ldr	r3, [r3]
 1474 0822 0133     		adds	r3, r3, #1
 1475 0824 07F5B452 		add	r2, r7, #5760
 1476 0828 02F10402 		add	r2, r2, #4
 1477 082c 1360     		str	r3, [r2]
 218:pathfinding.c ****                 // reverse array somewhere
 219:pathfinding.c **** 
 220:pathfinding.c ****                 shortestDist--; // decrement distance
 1478              		.loc 1 220 0
 1479 082e 07F5B453 		add	r3, r7, #5760
 1480 0832 03F11003 		add	r3, r3, #16
 1481 0836 1B68     		ldr	r3, [r3]
 1482 0838 013B     		subs	r3, r3, #1
 1483 083a 07F5B452 		add	r2, r7, #5760
 1484 083e 02F11002 		add	r2, r2, #16
 1485 0842 1360     		str	r3, [r2]
 221:pathfinding.c ****                 currentRow = newRow; 
 1486              		.loc 1 221 0
 1487 0844 07F5B353 		add	r3, r7, #5728
 1488 0848 03F10403 		add	r3, r3, #4
 1489 084c 1B68     		ldr	r3, [r3]
 1490 084e 07F5B452 		add	r2, r7, #5760
 1491 0852 02F10C02 		add	r2, r2, #12
 1492 0856 1360     		str	r3, [r2]
 222:pathfinding.c ****                 currentCol = newCol; // change current location
 1493              		.loc 1 222 0
 1494 0858 07F5B353 		add	r3, r7, #5728
 1495 085c 1B68     		ldr	r3, [r3]
 1496 085e 07F5B452 		add	r2, r7, #5760
 1497 0862 02F10802 		add	r2, r2, #8
 1498 0866 1360     		str	r3, [r2]
 223:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 224:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1499              		.loc 1 224 0
 1500 0868 07F5B453 		add	r3, r7, #5760
 1501 086c 03F11003 		add	r3, r3, #16
 1502 0870 1B68     		ldr	r3, [r3]
 1503 0872 DB00     		lsls	r3, r3, #3
 1504 0874 07F5B352 		add	r2, r7, #5728
 1505 0878 02F10802 		add	r2, r2, #8
 1506 087c 1268     		ldr	r2, [r2]
 1507 087e 1344     		add	r3, r3, r2
 1508 0880 07F5B452 		add	r2, r7, #5760
 1509 0884 02F10C02 		add	r2, r2, #12
 1510 0888 1268     		ldr	r2, [r2]
 1511 088a 1A60     		str	r2, [r3]
 225:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1512              		.loc 1 225 0
 1513 088c 07F5B453 		add	r3, r7, #5760
 1514 0890 03F11003 		add	r3, r3, #16
 1515 0894 1B68     		ldr	r3, [r3]
 1516 0896 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 32


 1517 0898 07F5B352 		add	r2, r7, #5728
 1518 089c 02F10802 		add	r2, r2, #8
 1519 08a0 1268     		ldr	r2, [r2]
 1520 08a2 1344     		add	r3, r3, r2
 1521 08a4 07F5B452 		add	r2, r7, #5760
 1522 08a8 02F10802 		add	r2, r2, #8
 1523 08ac 1268     		ldr	r2, [r2]
 1524 08ae 5A60     		str	r2, [r3, #4]
 226:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1525              		.loc 1 226 0
 1526 08b0 07F11803 		add	r3, r7, #24
 1527 08b4 143B     		subs	r3, r3, #20
 1528 08b6 1A68     		ldr	r2, [r3]
 1529 08b8 07F5B453 		add	r3, r7, #5760
 1530 08bc 03F10C03 		add	r3, r3, #12
 1531 08c0 1B68     		ldr	r3, [r3]
 1532 08c2 9A42     		cmp	r2, r3
 1533 08c4 20D1     		bne	.L40
 1534              		.loc 1 226 0 is_stmt 0 discriminator 1
 1535 08c6 07F11803 		add	r3, r7, #24
 1536 08ca 143B     		subs	r3, r3, #20
 1537 08cc 5A68     		ldr	r2, [r3, #4]
 1538 08ce 07F5B453 		add	r3, r7, #5760
 1539 08d2 03F10803 		add	r3, r3, #8
 1540 08d6 1B68     		ldr	r3, [r3]
 1541 08d8 9A42     		cmp	r2, r3
 1542 08da 15D1     		bne	.L40
 227:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1543              		.loc 1 227 0 is_stmt 1
 1544 08dc 07F5B453 		add	r3, r7, #5760
 1545 08e0 03F10C03 		add	r3, r3, #12
 1546 08e4 1B68     		ldr	r3, [r3]
 1547 08e6 4C22     		movs	r2, #76
 1548 08e8 02FB03F2 		mul	r2, r2, r3
 1549 08ec 07F11803 		add	r3, r7, #24
 1550 08f0 0C3B     		subs	r3, r3, #12
 1551 08f2 1B68     		ldr	r3, [r3]
 1552 08f4 1344     		add	r3, r3, r2
 1553 08f6 07F5B452 		add	r2, r7, #5760
 1554 08fa 02F10802 		add	r2, r2, #8
 1555 08fe 1268     		ldr	r2, [r2]
 1556 0900 0221     		movs	r1, #2
 1557 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 228:pathfinding.c ****                     break;
 1558              		.loc 1 228 0
 1559 0906 0CE0     		b	.L38
 1560              	.L40:
 1561              	.LBE17:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1562              		.loc 1 209 0 discriminator 2
 1563 0908 07F5B453 		add	r3, r7, #5760
 1564 090c 1B68     		ldr	r3, [r3]
 1565 090e 0133     		adds	r3, r3, #1
 1566 0910 07F5B452 		add	r2, r7, #5760
 1567 0914 1360     		str	r3, [r2]
 1568              	.L39:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 33


 1569              		.loc 1 209 0 is_stmt 0 discriminator 1
 1570 0916 07F5B453 		add	r3, r7, #5760
 1571 091a 1B68     		ldr	r3, [r3]
 1572 091c 032B     		cmp	r3, #3
 1573 091e 7FF6FDAE 		bls	.L41
 1574              	.L38:
 1575              	.LBE16:
 207:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1576              		.loc 1 207 0 is_stmt 1
 1577 0922 07F5B453 		add	r3, r7, #5760
 1578 0926 03F11003 		add	r3, r3, #16
 1579 092a 1B68     		ldr	r3, [r3]
 1580 092c 002B     		cmp	r3, #0
 1581 092e 3FF7ECAE 		bgt	.L42
 229:pathfinding.c ****                 }   
 230:pathfinding.c ****             }
 231:pathfinding.c ****         }
 232:pathfinding.c ****     }
 233:pathfinding.c **** }
 1582              		.loc 1 233 0
 1583 0932 00BF     		nop
 1584 0934 07F5B557 		add	r7, r7, #5792
 1585 0938 1C37     		adds	r7, r7, #28
 1586              		.cfi_def_cfa_offset 20
 1587 093a BD46     		mov	sp, r7
 1588              		.cfi_def_cfa_register 13
 1589              		@ sp needed
 1590 093c BDE89040 		pop	{r4, r7, lr}
 1591              		.cfi_restore 14
 1592              		.cfi_restore 7
 1593              		.cfi_restore 4
 1594              		.cfi_def_cfa_offset 8
 1595 0940 02B0     		add	sp, sp, #8
 1596              		.cfi_def_cfa_offset 0
 1597 0942 7047     		bx	lr
 1598              	.L47:
 1599              		.align	2
 1600              	.L46:
 1601 0944 00000000 		.word	moves
 1602 0948 00000000 		.word	list_of_optimal_coordinates
 1603              		.cfi_endproc
 1604              	.LFE4:
 1605              		.size	dijkstra, .-dijkstra
 1606              		.global	ignoreR
 1607              		.bss
 1608              		.align	2
 1609              		.type	ignoreR, %object
 1610              		.size	ignoreR, 4
 1611              	ignoreR:
 1612 11d8 00000000 		.space	4
 1613              		.global	ignoreL
 1614              		.align	2
 1615              		.type	ignoreL, %object
 1616              		.size	ignoreL, 4
 1617              	ignoreL:
 1618 11dc 00000000 		.space	4
 1619              		.section	.rodata
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 34


 1620 0003 00       		.align	2
 1621              	.LC1:
 1622 0004 53746F70 		.ascii	"Stop at target\000"
 1622      20617420 
 1622      74617267 
 1622      657400
 1623 0013 00       		.align	2
 1624              	.LC2:
 1625 0014 52696768 		.ascii	"Right Turn\000"
 1625      74205475 
 1625      726E00
 1626 001f 00       		.align	2
 1627              	.LC3:
 1628 0020 4C656674 		.ascii	"Left Turn\000"
 1628      20547572 
 1628      6E00
 1629 002a 0000     		.align	2
 1630              	.LC4:
 1631 002c 466F7277 		.ascii	"Forward until target\000"
 1631      61726420 
 1631      756E7469 
 1631      6C207461 
 1631      72676574 
 1632 0041 000000   		.align	2
 1633              	.LC5:
 1634 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1634      6172643B 
 1634      2069676E 
 1634      6F726520 
 1634      25644C2C 
 1635 0065 000000   		.align	2
 1636              	.LC6:
 1637 0068 552D7475 		.ascii	"U-turn\000"
 1637      726E00
 1638              		.section	.text.getPathInstructions,"ax",%progbits
 1639              		.align	2
 1640              		.global	getPathInstructions
 1641              		.thumb
 1642              		.thumb_func
 1643              		.type	getPathInstructions, %function
 1644              	getPathInstructions:
 1645              	.LFB5:
 234:pathfinding.c **** 
 235:pathfinding.c **** 
 236:pathfinding.c **** 
 237:pathfinding.c **** // PATHFINDING PROCESSING *====================
 238:pathfinding.c **** 
 239:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 240:pathfinding.c **** 
 241:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 242:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1646              		.loc 1 242 0
 1647              		.cfi_startproc
 1648              		@ args = 8, pretend = 0, frame = 80
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650 0000 80B5     		push	{r7, lr}
 1651              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 35


 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 94B0     		sub	sp, sp, #80
 1655              		.cfi_def_cfa_offset 88
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
 1658 0006 F860     		str	r0, [r7, #12]
 1659 0008 B960     		str	r1, [r7, #8]
 1660 000a 3946     		mov	r1, r7
 1661 000c 81E80C00 		stmia	r1, {r2, r3}
 243:pathfinding.c ****     int currentRow = startLocation.row; 
 1662              		.loc 1 243 0
 1663 0010 3B68     		ldr	r3, [r7]
 1664 0012 FB64     		str	r3, [r7, #76]
 244:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1665              		.loc 1 244 0
 1666 0014 7B68     		ldr	r3, [r7, #4]
 1667 0016 BB64     		str	r3, [r7, #72]
 245:pathfinding.c ****     int listIndex = 0;
 1668              		.loc 1 245 0
 1669 0018 0023     		movs	r3, #0
 1670 001a 7B64     		str	r3, [r7, #68]
 246:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1671              		.loc 1 246 0
 1672 001c BB6D     		ldr	r3, [r7, #88]
 1673 001e FA6D     		ldr	r2, [r7, #92]
 1674 0020 1146     		mov	r1, r2
 1675 0022 1846     		mov	r0, r3
 1676 0024 FFF7FEFF 		bl	getTargetOrientation
 1677 0028 0346     		mov	r3, r0
 1678 002a 7B61     		str	r3, [r7, #20]
 247:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 248:pathfinding.c ****     while(numSteps >= 0) {
 1679              		.loc 1 248 0
 1680 002c C7E2     		b	.L49
 1681              	.L106:
 1682              	.LBB18:
 249:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1683              		.loc 1 249 0
 1684 002e 9C4B     		ldr	r3, .L111
 1685 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1686 0032 BA6C     		ldr	r2, [r7, #72]
 1687 0034 F96C     		ldr	r1, [r7, #76]
 1688 0036 1846     		mov	r0, r3
 1689 0038 FFF7FEFF 		bl	checkIgnoreTurn
 250:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1690              		.loc 1 250 0
 1691 003c FB6C     		ldr	r3, [r7, #76]
 1692 003e 4C22     		movs	r2, #76
 1693 0040 02FB03F3 		mul	r3, r2, r3
 1694 0044 FA68     		ldr	r2, [r7, #12]
 1695 0046 1344     		add	r3, r3, r2
 1696 0048 BA6C     		ldr	r2, [r7, #72]
 1697 004a 0021     		movs	r1, #0
 1698 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
 1699              		.loc 1 251 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 36


 1700 0050 934B     		ldr	r3, .L111
 1701 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1702 0054 934B     		ldr	r3, .L111+4
 1703 0056 1A70     		strb	r2, [r3]
 252:pathfinding.c ****         enum InstructionDirection newDirection;
 253:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1704              		.loc 1 253 0
 1705 0058 B96C     		ldr	r1, [r7, #72]
 1706 005a F86C     		ldr	r0, [r7, #76]
 1707 005c FFF7FEFF 		bl	checkPathDirection
 1708 0060 0346     		mov	r3, r0
 1709 0062 FB63     		str	r3, [r7, #60]
 254:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1710              		.loc 1 254 0
 1711 0064 BA6D     		ldr	r2, [r7, #88]
 1712 0066 FB6C     		ldr	r3, [r7, #76]
 1713 0068 9A42     		cmp	r2, r3
 1714 006a 0BD1     		bne	.L50
 1715              		.loc 1 254 0 is_stmt 0 discriminator 1
 1716 006c FA6D     		ldr	r2, [r7, #92]
 1717 006e BB6C     		ldr	r3, [r7, #72]
 1718 0070 9A42     		cmp	r2, r3
 1719 0072 07D1     		bne	.L50
 255:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1720              		.loc 1 255 0 is_stmt 1
 1721 0074 0523     		movs	r3, #5
 1722 0076 87F84330 		strb	r3, [r7, #67]
 256:pathfinding.c ****             printf("Stop at target\n");
 1723              		.loc 1 256 0
 1724 007a 8B48     		ldr	r0, .L111+8
 1725 007c FFF7FEFF 		bl	puts
 257:pathfinding.c ****             nextStep = 5;
 1726              		.loc 1 257 0
 1727 0080 0523     		movs	r3, #5
 1728 0082 FB63     		str	r3, [r7, #60]
 1729              	.L50:
 258:pathfinding.c ****         }
 259:pathfinding.c ****         switch (nextStep) {
 1730              		.loc 1 259 0
 1731 0084 FB6B     		ldr	r3, [r7, #60]
 1732 0086 032B     		cmp	r3, #3
 1733 0088 00F27282 		bhi	.L110
 1734 008c 01A2     		adr	r2, .L53
 1735 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1736 0092 00BF     		.p2align 2
 1737              	.L53:
 1738 0094 A5000000 		.word	.L52+1
 1739 0098 BD010000 		.word	.L54+1
 1740 009c 07030000 		.word	.L55+1
 1741 00a0 2B040000 		.word	.L56+1
 1742              		.p2align 1
 1743              	.L52:
 260:pathfinding.c ****             case 0: // next step is up
 261:pathfinding.c ****                 currentRobotOrientation = Up;
 1744              		.loc 1 261 0
 1745 00a4 7E4B     		ldr	r3, .L111
 1746 00a6 0022     		movs	r2, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 37


 1747 00a8 1A70     		strb	r2, [r3]
 262:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1748              		.loc 1 262 0
 1749 00aa 7E4B     		ldr	r3, .L111+4
 1750 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1751 00ae 022B     		cmp	r3, #2
 1752 00b0 0BD1     		bne	.L57
 263:pathfinding.c ****                     newDirection = waitForRightTurn;
 1753              		.loc 1 263 0
 1754 00b2 0223     		movs	r3, #2
 1755 00b4 87F84330 		strb	r3, [r7, #67]
 264:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1756              		.loc 1 264 0
 1757 00b8 7C48     		ldr	r0, .L111+12
 1758 00ba FFF7FEFF 		bl	puts
 265:pathfinding.c ****                     ignoreL = 0;
 1759              		.loc 1 265 0
 1760 00be 7C4B     		ldr	r3, .L111+16
 1761 00c0 0022     		movs	r2, #0
 1762 00c2 1A60     		str	r2, [r3]
 266:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1763              		.loc 1 266 0
 1764 00c4 7B4B     		ldr	r3, .L111+20
 1765 00c6 0022     		movs	r2, #0
 1766 00c8 1A60     		str	r2, [r3]
 1767              	.L57:
 267:pathfinding.c ****                 } 
 268:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1768              		.loc 1 268 0
 1769 00ca 764B     		ldr	r3, .L111+4
 1770 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1771 00ce 032B     		cmp	r3, #3
 1772 00d0 0BD1     		bne	.L58
 269:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1773              		.loc 1 269 0
 1774 00d2 0123     		movs	r3, #1
 1775 00d4 87F84330 		strb	r3, [r7, #67]
 270:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1776              		.loc 1 270 0
 1777 00d8 7748     		ldr	r0, .L111+24
 1778 00da FFF7FEFF 		bl	puts
 271:pathfinding.c ****                     ignoreL = 0;
 1779              		.loc 1 271 0
 1780 00de 744B     		ldr	r3, .L111+16
 1781 00e0 0022     		movs	r2, #0
 1782 00e2 1A60     		str	r2, [r3]
 272:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1783              		.loc 1 272 0
 1784 00e4 734B     		ldr	r3, .L111+20
 1785 00e6 0022     		movs	r2, #0
 1786 00e8 1A60     		str	r2, [r3]
 1787              	.L58:
 273:pathfinding.c ****                 }
 274:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1788              		.loc 1 274 0
 1789 00ea 6E4B     		ldr	r3, .L111+4
 1790 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 38


 1791 00ee 002B     		cmp	r3, #0
 1792 00f0 56D1     		bne	.L59
 275:pathfinding.c ****                     // check if we only need to go forward to reach target
 276:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1793              		.loc 1 276 0
 1794 00f2 7A69     		ldr	r2, [r7, #20]
 1795 00f4 FB6B     		ldr	r3, [r7, #60]
 1796 00f6 9A42     		cmp	r2, r3
 1797 00f8 47D1     		bne	.L60
 1798              		.loc 1 276 0 is_stmt 0 discriminator 1
 1799 00fa BA6D     		ldr	r2, [r7, #88]
 1800 00fc FB6C     		ldr	r3, [r7, #76]
 1801 00fe 9A42     		cmp	r2, r3
 1802 0100 43D1     		bne	.L60
 1803              	.LBB19:
 277:pathfinding.c ****                         int atTarget = 1;
 1804              		.loc 1 277 0 is_stmt 1
 1805 0102 0123     		movs	r3, #1
 1806 0104 BB63     		str	r3, [r7, #56]
 1807              	.LBB20:
 278:pathfinding.c ****                         // check if we only need to go forward to reach target
 279:pathfinding.c ****                         for(int i = 0; i < currentRow-targetLocation.row; i++) {
 1808              		.loc 1 279 0
 1809 0106 0023     		movs	r3, #0
 1810 0108 7B63     		str	r3, [r7, #52]
 1811 010a 22E0     		b	.L61
 1812              	.L65:
 280:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 281:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 1813              		.loc 1 281 0
 1814 010c FB6C     		ldr	r3, [r7, #76]
 1815 010e 4C22     		movs	r2, #76
 1816 0110 02FB03F3 		mul	r3, r2, r3
 1817 0114 FA68     		ldr	r2, [r7, #12]
 1818 0116 1344     		add	r3, r3, r2
 1819 0118 B96C     		ldr	r1, [r7, #72]
 1820 011a 7A6B     		ldr	r2, [r7, #52]
 1821 011c 8A1A     		subs	r2, r1, r2
 1822 011e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1823 0122 012B     		cmp	r3, #1
 1824 0124 02D1     		bne	.L62
 282:pathfinding.c ****                                 atTarget = 0;
 1825              		.loc 1 282 0
 1826 0126 0023     		movs	r3, #0
 1827 0128 BB63     		str	r3, [r7, #56]
 283:pathfinding.c ****                                 break;
 1828              		.loc 1 283 0
 1829 012a 18E0     		b	.L63
 1830              	.L62:
 284:pathfinding.c ****                             }
 285:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 9) {
 1831              		.loc 1 285 0
 1832 012c FB6C     		ldr	r3, [r7, #76]
 1833 012e 4C22     		movs	r2, #76
 1834 0130 02FB03F3 		mul	r3, r2, r3
 1835 0134 FA68     		ldr	r2, [r7, #12]
 1836 0136 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 39


 1837 0138 B96C     		ldr	r1, [r7, #72]
 1838 013a 7A6B     		ldr	r2, [r7, #52]
 1839 013c 8A1A     		subs	r2, r1, r2
 1840 013e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1841 0142 092B     		cmp	r3, #9
 1842 0144 02D1     		bne	.L64
 286:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 1843              		.loc 1 286 0
 1844 0146 0123     		movs	r3, #1
 1845 0148 BB63     		str	r3, [r7, #56]
 287:pathfinding.c ****                                 break;
 1846              		.loc 1 287 0
 1847 014a 08E0     		b	.L63
 1848              	.L64:
 279:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1849              		.loc 1 279 0 discriminator 2
 1850 014c 7B6B     		ldr	r3, [r7, #52]
 1851 014e 0133     		adds	r3, r3, #1
 1852 0150 7B63     		str	r3, [r7, #52]
 1853              	.L61:
 279:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1854              		.loc 1 279 0 is_stmt 0 discriminator 1
 1855 0152 BB6D     		ldr	r3, [r7, #88]
 1856 0154 FA6C     		ldr	r2, [r7, #76]
 1857 0156 D21A     		subs	r2, r2, r3
 1858 0158 7B6B     		ldr	r3, [r7, #52]
 1859 015a 9A42     		cmp	r2, r3
 1860 015c D6DC     		bgt	.L65
 1861              	.L63:
 1862              	.LBE20:
 288:pathfinding.c ****                             }
 289:pathfinding.c ****                         }
 290:pathfinding.c ****                         if(atTarget) {
 1863              		.loc 1 290 0 is_stmt 1
 1864 015e BB6B     		ldr	r3, [r7, #56]
 1865 0160 002B     		cmp	r3, #0
 1866 0162 06D0     		beq	.L66
 291:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 1867              		.loc 1 291 0
 1868 0164 0423     		movs	r3, #4
 1869 0166 87F84330 		strb	r3, [r7, #67]
 292:pathfinding.c ****                             printf("Forward until target\n");
 1870              		.loc 1 292 0
 1871 016a 5448     		ldr	r0, .L111+28
 1872 016c FFF7FEFF 		bl	puts
 1873              	.LBE19:
 276:pathfinding.c ****                         int atTarget = 1;
 1874              		.loc 1 276 0
 1875 0170 16E0     		b	.L59
 1876              	.L66:
 1877              	.LBB21:
 293:pathfinding.c ****                         } else {
 294:pathfinding.c ****                             newDirection = GoForward;
 1878              		.loc 1 294 0
 1879 0172 0023     		movs	r3, #0
 1880 0174 87F84330 		strb	r3, [r7, #67]
 295:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 40


 1881              		.loc 1 295 0
 1882 0178 4D4B     		ldr	r3, .L111+16
 1883 017a 1968     		ldr	r1, [r3]
 1884 017c 4D4B     		ldr	r3, .L111+20
 1885 017e 1B68     		ldr	r3, [r3]
 1886 0180 1A46     		mov	r2, r3
 1887 0182 4F48     		ldr	r0, .L111+32
 1888 0184 FFF7FEFF 		bl	printf
 1889              	.LBE21:
 276:pathfinding.c ****                         int atTarget = 1;
 1890              		.loc 1 276 0
 1891 0188 0AE0     		b	.L59
 1892              	.L60:
 296:pathfinding.c ****                         }
 297:pathfinding.c ****                     } else {
 298:pathfinding.c ****                         newDirection = GoForward;
 1893              		.loc 1 298 0
 1894 018a 0023     		movs	r3, #0
 1895 018c 87F84330 		strb	r3, [r7, #67]
 299:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1896              		.loc 1 299 0
 1897 0190 474B     		ldr	r3, .L111+16
 1898 0192 1968     		ldr	r1, [r3]
 1899 0194 474B     		ldr	r3, .L111+20
 1900 0196 1B68     		ldr	r3, [r3]
 1901 0198 1A46     		mov	r2, r3
 1902 019a 4948     		ldr	r0, .L111+32
 1903 019c FFF7FEFF 		bl	printf
 1904              	.L59:
 300:pathfinding.c ****                     }
 301:pathfinding.c ****                 }
 302:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1905              		.loc 1 302 0
 1906 01a0 404B     		ldr	r3, .L111+4
 1907 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1908 01a4 012B     		cmp	r3, #1
 1909 01a6 05D1     		bne	.L68
 303:pathfinding.c ****                     newDirection = uTurn;
 1910              		.loc 1 303 0
 1911 01a8 0323     		movs	r3, #3
 1912 01aa 87F84330 		strb	r3, [r7, #67]
 304:pathfinding.c ****                     printf("U-turn\n");
 1913              		.loc 1 304 0
 1914 01ae 4548     		ldr	r0, .L111+36
 1915 01b0 FFF7FEFF 		bl	puts
 1916              	.L68:
 305:pathfinding.c ****                 }
 306:pathfinding.c ****                 currentRow--; // jump to new location
 1917              		.loc 1 306 0
 1918 01b4 FB6C     		ldr	r3, [r7, #76]
 1919 01b6 013B     		subs	r3, r3, #1
 1920 01b8 FB64     		str	r3, [r7, #76]
 307:pathfinding.c ****                 break;
 1921              		.loc 1 307 0
 1922 01ba DAE1     		b	.L69
 1923              	.L54:
 308:pathfinding.c ****             case 1: // next step is down
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 41


 309:pathfinding.c ****                 currentRobotOrientation = Down;
 1924              		.loc 1 309 0
 1925 01bc 384B     		ldr	r3, .L111
 1926 01be 0122     		movs	r2, #1
 1927 01c0 1A70     		strb	r2, [r3]
 310:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1928              		.loc 1 310 0
 1929 01c2 384B     		ldr	r3, .L111+4
 1930 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1931 01c6 032B     		cmp	r3, #3
 1932 01c8 0BD1     		bne	.L70
 311:pathfinding.c ****                     newDirection = waitForRightTurn;
 1933              		.loc 1 311 0
 1934 01ca 0223     		movs	r3, #2
 1935 01cc 87F84330 		strb	r3, [r7, #67]
 312:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1936              		.loc 1 312 0
 1937 01d0 3648     		ldr	r0, .L111+12
 1938 01d2 FFF7FEFF 		bl	puts
 313:pathfinding.c ****                     ignoreL = 0;
 1939              		.loc 1 313 0
 1940 01d6 364B     		ldr	r3, .L111+16
 1941 01d8 0022     		movs	r2, #0
 1942 01da 1A60     		str	r2, [r3]
 314:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1943              		.loc 1 314 0
 1944 01dc 354B     		ldr	r3, .L111+20
 1945 01de 0022     		movs	r2, #0
 1946 01e0 1A60     		str	r2, [r3]
 1947              	.L70:
 315:pathfinding.c ****                 } 
 316:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1948              		.loc 1 316 0
 1949 01e2 304B     		ldr	r3, .L111+4
 1950 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 01e6 022B     		cmp	r3, #2
 1952 01e8 0BD1     		bne	.L71
 317:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1953              		.loc 1 317 0
 1954 01ea 0123     		movs	r3, #1
 1955 01ec 87F84330 		strb	r3, [r7, #67]
 318:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1956              		.loc 1 318 0
 1957 01f0 3148     		ldr	r0, .L111+24
 1958 01f2 FFF7FEFF 		bl	puts
 319:pathfinding.c ****                     ignoreL = 0;
 1959              		.loc 1 319 0
 1960 01f6 2E4B     		ldr	r3, .L111+16
 1961 01f8 0022     		movs	r2, #0
 1962 01fa 1A60     		str	r2, [r3]
 320:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1963              		.loc 1 320 0
 1964 01fc 2D4B     		ldr	r3, .L111+20
 1965 01fe 0022     		movs	r2, #0
 1966 0200 1A60     		str	r2, [r3]
 1967              	.L71:
 321:pathfinding.c ****                 }
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 42


 322:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1968              		.loc 1 322 0
 1969 0202 284B     		ldr	r3, .L111+4
 1970 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 0206 012B     		cmp	r3, #1
 1972 0208 69D1     		bne	.L72
 323:pathfinding.c ****                    if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1973              		.loc 1 323 0
 1974 020a 7A69     		ldr	r2, [r7, #20]
 1975 020c FB6B     		ldr	r3, [r7, #60]
 1976 020e 9A42     		cmp	r2, r3
 1977 0210 5AD1     		bne	.L73
 1978              		.loc 1 323 0 is_stmt 0 discriminator 1
 1979 0212 BA6D     		ldr	r2, [r7, #88]
 1980 0214 FB6C     		ldr	r3, [r7, #76]
 1981 0216 9A42     		cmp	r2, r3
 1982 0218 56D1     		bne	.L73
 1983              	.LBB22:
 324:pathfinding.c ****                         int atTarget = 1;
 1984              		.loc 1 324 0 is_stmt 1
 1985 021a 0123     		movs	r3, #1
 1986 021c 3B63     		str	r3, [r7, #48]
 1987              	.LBB23:
 325:pathfinding.c ****                         // check if we only need to go forward to reach target
 326:pathfinding.c ****                         for(int i = 0; i < targetLocation.row; i++) {
 1988              		.loc 1 326 0
 1989 021e 0023     		movs	r3, #0
 1990 0220 FB62     		str	r3, [r7, #44]
 1991 0222 23E0     		b	.L74
 1992              	.L78:
 327:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 328:pathfinding.c ****                             if(map[currentRow + i][currentCol] == 1) {
 1993              		.loc 1 328 0
 1994 0224 FA6C     		ldr	r2, [r7, #76]
 1995 0226 FB6A     		ldr	r3, [r7, #44]
 1996 0228 1344     		add	r3, r3, r2
 1997 022a 1A46     		mov	r2, r3
 1998 022c 4C23     		movs	r3, #76
 1999 022e 03FB02F3 		mul	r3, r3, r2
 2000 0232 FA68     		ldr	r2, [r7, #12]
 2001 0234 1344     		add	r3, r3, r2
 2002 0236 BA6C     		ldr	r2, [r7, #72]
 2003 0238 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2004 023c 012B     		cmp	r3, #1
 2005 023e 02D1     		bne	.L75
 329:pathfinding.c ****                                 atTarget = 0;
 2006              		.loc 1 329 0
 2007 0240 0023     		movs	r3, #0
 2008 0242 3B63     		str	r3, [r7, #48]
 330:pathfinding.c ****                                 break;
 2009              		.loc 1 330 0
 2010 0244 16E0     		b	.L76
 2011              	.L75:
 331:pathfinding.c ****                             }
 332:pathfinding.c ****                             if(map[currentRow][currentCol+i] == 9) {
 2012              		.loc 1 332 0
 2013 0246 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 43


 2014 0248 4C22     		movs	r2, #76
 2015 024a 02FB03F3 		mul	r3, r2, r3
 2016 024e FA68     		ldr	r2, [r7, #12]
 2017 0250 1344     		add	r3, r3, r2
 2018 0252 B96C     		ldr	r1, [r7, #72]
 2019 0254 FA6A     		ldr	r2, [r7, #44]
 2020 0256 0A44     		add	r2, r2, r1
 2021 0258 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2022 025c 092B     		cmp	r3, #9
 2023 025e 02D1     		bne	.L77
 333:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 2024              		.loc 1 333 0
 2025 0260 0123     		movs	r3, #1
 2026 0262 3B63     		str	r3, [r7, #48]
 334:pathfinding.c ****                                 break;
 2027              		.loc 1 334 0
 2028 0264 06E0     		b	.L76
 2029              	.L77:
 326:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2030              		.loc 1 326 0 discriminator 2
 2031 0266 FB6A     		ldr	r3, [r7, #44]
 2032 0268 0133     		adds	r3, r3, #1
 2033 026a FB62     		str	r3, [r7, #44]
 2034              	.L74:
 326:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2035              		.loc 1 326 0 is_stmt 0 discriminator 1
 2036 026c BA6D     		ldr	r2, [r7, #88]
 2037 026e FB6A     		ldr	r3, [r7, #44]
 2038 0270 9A42     		cmp	r2, r3
 2039 0272 D7DC     		bgt	.L78
 2040              	.L76:
 2041              	.LBE23:
 335:pathfinding.c ****                             }
 336:pathfinding.c ****                         }
 337:pathfinding.c ****                         if(atTarget) {
 2042              		.loc 1 337 0 is_stmt 1
 2043 0274 3B6B     		ldr	r3, [r7, #48]
 2044 0276 002B     		cmp	r3, #0
 2045 0278 06D0     		beq	.L79
 338:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2046              		.loc 1 338 0
 2047 027a 0423     		movs	r3, #4
 2048 027c 87F84330 		strb	r3, [r7, #67]
 339:pathfinding.c ****                             printf("Forward until target\n");
 2049              		.loc 1 339 0
 2050 0280 0E48     		ldr	r0, .L111+28
 2051 0282 FFF7FEFF 		bl	puts
 2052              	.LBE22:
 323:pathfinding.c ****                         int atTarget = 1;
 2053              		.loc 1 323 0
 2054 0286 2AE0     		b	.L72
 2055              	.L79:
 2056              	.LBB24:
 340:pathfinding.c ****                         } else {
 341:pathfinding.c ****                             newDirection = GoForward;
 2057              		.loc 1 341 0
 2058 0288 0023     		movs	r3, #0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 44


 2059 028a 87F84330 		strb	r3, [r7, #67]
 342:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2060              		.loc 1 342 0
 2061 028e 084B     		ldr	r3, .L111+16
 2062 0290 1968     		ldr	r1, [r3]
 2063 0292 084B     		ldr	r3, .L111+20
 2064 0294 1B68     		ldr	r3, [r3]
 2065 0296 1A46     		mov	r2, r3
 2066 0298 0948     		ldr	r0, .L111+32
 2067 029a FFF7FEFF 		bl	printf
 2068              	.LBE24:
 323:pathfinding.c ****                         int atTarget = 1;
 2069              		.loc 1 323 0
 2070 029e 1EE0     		b	.L72
 2071              	.L112:
 2072              		.align	2
 2073              	.L111:
 2074 02a0 00000000 		.word	currentRobotOrientation
 2075 02a4 00000000 		.word	previousRobotOrientation
 2076 02a8 04000000 		.word	.LC1
 2077 02ac 14000000 		.word	.LC2
 2078 02b0 00000000 		.word	ignoreL
 2079 02b4 00000000 		.word	ignoreR
 2080 02b8 20000000 		.word	.LC3
 2081 02bc 2C000000 		.word	.LC4
 2082 02c0 44000000 		.word	.LC5
 2083 02c4 68000000 		.word	.LC6
 2084              	.L73:
 343:pathfinding.c ****                         }
 344:pathfinding.c ****                     }      
 345:pathfinding.c ****                     else {
 346:pathfinding.c ****                         newDirection = GoForward;
 2085              		.loc 1 346 0
 2086 02c8 0023     		movs	r3, #0
 2087 02ca 87F84330 		strb	r3, [r7, #67]
 347:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2088              		.loc 1 347 0
 2089 02ce 9F4B     		ldr	r3, .L113
 2090 02d0 1968     		ldr	r1, [r3]
 2091 02d2 9F4B     		ldr	r3, .L113+4
 2092 02d4 1B68     		ldr	r3, [r3]
 2093 02d6 1A46     		mov	r2, r3
 2094 02d8 9E48     		ldr	r0, .L113+8
 2095 02da FFF7FEFF 		bl	printf
 2096              	.L72:
 348:pathfinding.c ****                     }
 349:pathfinding.c ****                 }
 350:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2097              		.loc 1 350 0
 2098 02de 9E4B     		ldr	r3, .L113+12
 2099 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2100 02e2 002B     		cmp	r3, #0
 2101 02e4 0BD1     		bne	.L81
 351:pathfinding.c ****                     newDirection = uTurn;
 2102              		.loc 1 351 0
 2103 02e6 0323     		movs	r3, #3
 2104 02e8 87F84330 		strb	r3, [r7, #67]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 45


 352:pathfinding.c ****                     ignoreL = 0;
 2105              		.loc 1 352 0
 2106 02ec 974B     		ldr	r3, .L113
 2107 02ee 0022     		movs	r2, #0
 2108 02f0 1A60     		str	r2, [r3]
 353:pathfinding.c ****                     ignoreR = 0;
 2109              		.loc 1 353 0
 2110 02f2 974B     		ldr	r3, .L113+4
 2111 02f4 0022     		movs	r2, #0
 2112 02f6 1A60     		str	r2, [r3]
 354:pathfinding.c ****                     printf("U-turn\n");
 2113              		.loc 1 354 0
 2114 02f8 9848     		ldr	r0, .L113+16
 2115 02fa FFF7FEFF 		bl	puts
 2116              	.L81:
 355:pathfinding.c ****                 }
 356:pathfinding.c ****                 currentRow++;
 2117              		.loc 1 356 0
 2118 02fe FB6C     		ldr	r3, [r7, #76]
 2119 0300 0133     		adds	r3, r3, #1
 2120 0302 FB64     		str	r3, [r7, #76]
 357:pathfinding.c ****                 break;
 2121              		.loc 1 357 0
 2122 0304 35E1     		b	.L69
 2123              	.L55:
 358:pathfinding.c ****             case 2: // next step is left
 359:pathfinding.c ****                 currentRobotOrientation = Left;
 2124              		.loc 1 359 0
 2125 0306 964B     		ldr	r3, .L113+20
 2126 0308 0222     		movs	r2, #2
 2127 030a 1A70     		strb	r2, [r3]
 360:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2128              		.loc 1 360 0
 2129 030c 924B     		ldr	r3, .L113+12
 2130 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2131 0310 002B     		cmp	r3, #0
 2132 0312 0BD1     		bne	.L82
 361:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2133              		.loc 1 361 0
 2134 0314 0123     		movs	r3, #1
 2135 0316 87F84330 		strb	r3, [r7, #67]
 362:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2136              		.loc 1 362 0
 2137 031a 9248     		ldr	r0, .L113+24
 2138 031c FFF7FEFF 		bl	puts
 363:pathfinding.c ****                     ignoreL = 0;
 2139              		.loc 1 363 0
 2140 0320 8A4B     		ldr	r3, .L113
 2141 0322 0022     		movs	r2, #0
 2142 0324 1A60     		str	r2, [r3]
 364:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2143              		.loc 1 364 0
 2144 0326 8A4B     		ldr	r3, .L113+4
 2145 0328 0022     		movs	r2, #0
 2146 032a 1A60     		str	r2, [r3]
 2147              	.L82:
 365:pathfinding.c ****                 } 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 46


 366:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2148              		.loc 1 366 0
 2149 032c 8A4B     		ldr	r3, .L113+12
 2150 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0330 012B     		cmp	r3, #1
 2152 0332 0BD1     		bne	.L83
 367:pathfinding.c ****                     newDirection = waitForRightTurn;
 2153              		.loc 1 367 0
 2154 0334 0223     		movs	r3, #2
 2155 0336 87F84330 		strb	r3, [r7, #67]
 368:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2156              		.loc 1 368 0
 2157 033a 8B48     		ldr	r0, .L113+28
 2158 033c FFF7FEFF 		bl	puts
 369:pathfinding.c ****                     ignoreL = 0;
 2159              		.loc 1 369 0
 2160 0340 824B     		ldr	r3, .L113
 2161 0342 0022     		movs	r2, #0
 2162 0344 1A60     		str	r2, [r3]
 370:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2163              		.loc 1 370 0
 2164 0346 824B     		ldr	r3, .L113+4
 2165 0348 0022     		movs	r2, #0
 2166 034a 1A60     		str	r2, [r3]
 2167              	.L83:
 371:pathfinding.c ****                 }
 372:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2168              		.loc 1 372 0
 2169 034c 824B     		ldr	r3, .L113+12
 2170 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2171 0350 022B     		cmp	r3, #2
 2172 0352 56D1     		bne	.L84
 373:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 2173              		.loc 1 373 0
 2174 0354 7A69     		ldr	r2, [r7, #20]
 2175 0356 FB6B     		ldr	r3, [r7, #60]
 2176 0358 9A42     		cmp	r2, r3
 2177 035a 47D1     		bne	.L85
 2178              		.loc 1 373 0 is_stmt 0 discriminator 1
 2179 035c FA6D     		ldr	r2, [r7, #92]
 2180 035e BB6C     		ldr	r3, [r7, #72]
 2181 0360 9A42     		cmp	r2, r3
 2182 0362 43D1     		bne	.L85
 2183              	.LBB25:
 374:pathfinding.c ****                         int atTarget = 1;
 2184              		.loc 1 374 0 is_stmt 1
 2185 0364 0123     		movs	r3, #1
 2186 0366 BB62     		str	r3, [r7, #40]
 2187              	.LBB26:
 375:pathfinding.c ****                         // check if we only need to go forward to reach target
 376:pathfinding.c ****                         for(int i = 0; i < currentCol-targetLocation.col; i++) {
 2188              		.loc 1 376 0
 2189 0368 0023     		movs	r3, #0
 2190 036a 7B62     		str	r3, [r7, #36]
 2191 036c 22E0     		b	.L86
 2192              	.L90:
 377:pathfinding.c ****                             // check columns in front to see if there are any obstacles
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 47


 378:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2193              		.loc 1 378 0
 2194 036e FB6C     		ldr	r3, [r7, #76]
 2195 0370 4C22     		movs	r2, #76
 2196 0372 02FB03F3 		mul	r3, r2, r3
 2197 0376 FA68     		ldr	r2, [r7, #12]
 2198 0378 1344     		add	r3, r3, r2
 2199 037a B96C     		ldr	r1, [r7, #72]
 2200 037c 7A6A     		ldr	r2, [r7, #36]
 2201 037e 8A1A     		subs	r2, r1, r2
 2202 0380 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2203 0384 012B     		cmp	r3, #1
 2204 0386 02D1     		bne	.L87
 379:pathfinding.c ****                                 atTarget = 0;
 2205              		.loc 1 379 0
 2206 0388 0023     		movs	r3, #0
 2207 038a BB62     		str	r3, [r7, #40]
 380:pathfinding.c ****                                 break;
 2208              		.loc 1 380 0
 2209 038c 18E0     		b	.L88
 2210              	.L87:
 381:pathfinding.c ****                             }
 382:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2211              		.loc 1 382 0
 2212 038e FB6C     		ldr	r3, [r7, #76]
 2213 0390 4C22     		movs	r2, #76
 2214 0392 02FB03F3 		mul	r3, r2, r3
 2215 0396 FA68     		ldr	r2, [r7, #12]
 2216 0398 1344     		add	r3, r3, r2
 2217 039a B96C     		ldr	r1, [r7, #72]
 2218 039c 7A6A     		ldr	r2, [r7, #36]
 2219 039e 8A1A     		subs	r2, r1, r2
 2220 03a0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2221 03a4 012B     		cmp	r3, #1
 2222 03a6 02D1     		bne	.L89
 383:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2223              		.loc 1 383 0
 2224 03a8 0123     		movs	r3, #1
 2225 03aa BB62     		str	r3, [r7, #40]
 384:pathfinding.c ****                                 break;
 2226              		.loc 1 384 0
 2227 03ac 08E0     		b	.L88
 2228              	.L89:
 376:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2229              		.loc 1 376 0 discriminator 2
 2230 03ae 7B6A     		ldr	r3, [r7, #36]
 2231 03b0 0133     		adds	r3, r3, #1
 2232 03b2 7B62     		str	r3, [r7, #36]
 2233              	.L86:
 376:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2234              		.loc 1 376 0 is_stmt 0 discriminator 1
 2235 03b4 FB6D     		ldr	r3, [r7, #92]
 2236 03b6 BA6C     		ldr	r2, [r7, #72]
 2237 03b8 D21A     		subs	r2, r2, r3
 2238 03ba 7B6A     		ldr	r3, [r7, #36]
 2239 03bc 9A42     		cmp	r2, r3
 2240 03be D6DC     		bgt	.L90
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 48


 2241              	.L88:
 2242              	.LBE26:
 385:pathfinding.c ****                             }
 386:pathfinding.c ****                         }
 387:pathfinding.c ****                         if(atTarget) {
 2243              		.loc 1 387 0 is_stmt 1
 2244 03c0 BB6A     		ldr	r3, [r7, #40]
 2245 03c2 002B     		cmp	r3, #0
 2246 03c4 06D0     		beq	.L91
 388:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2247              		.loc 1 388 0
 2248 03c6 0423     		movs	r3, #4
 2249 03c8 87F84330 		strb	r3, [r7, #67]
 389:pathfinding.c ****                             printf("Forward until target\n");
 2250              		.loc 1 389 0
 2251 03cc 6748     		ldr	r0, .L113+32
 2252 03ce FFF7FEFF 		bl	puts
 2253              	.LBE25:
 373:pathfinding.c ****                         int atTarget = 1;
 2254              		.loc 1 373 0
 2255 03d2 16E0     		b	.L84
 2256              	.L91:
 2257              	.LBB27:
 390:pathfinding.c ****                         } else {
 391:pathfinding.c ****                             newDirection = GoForward;
 2258              		.loc 1 391 0
 2259 03d4 0023     		movs	r3, #0
 2260 03d6 87F84330 		strb	r3, [r7, #67]
 392:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2261              		.loc 1 392 0
 2262 03da 5C4B     		ldr	r3, .L113
 2263 03dc 1968     		ldr	r1, [r3]
 2264 03de 5C4B     		ldr	r3, .L113+4
 2265 03e0 1B68     		ldr	r3, [r3]
 2266 03e2 1A46     		mov	r2, r3
 2267 03e4 5B48     		ldr	r0, .L113+8
 2268 03e6 FFF7FEFF 		bl	printf
 2269              	.LBE27:
 373:pathfinding.c ****                         int atTarget = 1;
 2270              		.loc 1 373 0
 2271 03ea 0AE0     		b	.L84
 2272              	.L85:
 393:pathfinding.c ****                         }
 394:pathfinding.c ****                     } else {
 395:pathfinding.c ****                         newDirection = GoForward;
 2273              		.loc 1 395 0
 2274 03ec 0023     		movs	r3, #0
 2275 03ee 87F84330 		strb	r3, [r7, #67]
 396:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2276              		.loc 1 396 0
 2277 03f2 564B     		ldr	r3, .L113
 2278 03f4 1968     		ldr	r1, [r3]
 2279 03f6 564B     		ldr	r3, .L113+4
 2280 03f8 1B68     		ldr	r3, [r3]
 2281 03fa 1A46     		mov	r2, r3
 2282 03fc 5548     		ldr	r0, .L113+8
 2283 03fe FFF7FEFF 		bl	printf
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 49


 2284              	.L84:
 397:pathfinding.c ****                     }
 398:pathfinding.c ****                 }
 399:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2285              		.loc 1 399 0
 2286 0402 554B     		ldr	r3, .L113+12
 2287 0404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 0406 032B     		cmp	r3, #3
 2289 0408 0BD1     		bne	.L93
 400:pathfinding.c ****                     newDirection = uTurn;
 2290              		.loc 1 400 0
 2291 040a 0323     		movs	r3, #3
 2292 040c 87F84330 		strb	r3, [r7, #67]
 401:pathfinding.c ****                     ignoreL = 0;
 2293              		.loc 1 401 0
 2294 0410 4E4B     		ldr	r3, .L113
 2295 0412 0022     		movs	r2, #0
 2296 0414 1A60     		str	r2, [r3]
 402:pathfinding.c ****                     ignoreR = 0;
 2297              		.loc 1 402 0
 2298 0416 4E4B     		ldr	r3, .L113+4
 2299 0418 0022     		movs	r2, #0
 2300 041a 1A60     		str	r2, [r3]
 403:pathfinding.c ****                     printf("U-turn\n");
 2301              		.loc 1 403 0
 2302 041c 4F48     		ldr	r0, .L113+16
 2303 041e FFF7FEFF 		bl	puts
 2304              	.L93:
 404:pathfinding.c ****                 }
 405:pathfinding.c ****                 currentCol--;
 2305              		.loc 1 405 0
 2306 0422 BB6C     		ldr	r3, [r7, #72]
 2307 0424 013B     		subs	r3, r3, #1
 2308 0426 BB64     		str	r3, [r7, #72]
 406:pathfinding.c ****                 break;
 2309              		.loc 1 406 0
 2310 0428 A3E0     		b	.L69
 2311              	.L56:
 407:pathfinding.c ****             case 3: // next step is right
 408:pathfinding.c ****                 currentRobotOrientation = Right;
 2312              		.loc 1 408 0
 2313 042a 4D4B     		ldr	r3, .L113+20
 2314 042c 0322     		movs	r2, #3
 2315 042e 1A70     		strb	r2, [r3]
 409:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2316              		.loc 1 409 0
 2317 0430 494B     		ldr	r3, .L113+12
 2318 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2319 0434 002B     		cmp	r3, #0
 2320 0436 0BD1     		bne	.L94
 410:pathfinding.c ****                     newDirection = waitForRightTurn;
 2321              		.loc 1 410 0
 2322 0438 0223     		movs	r3, #2
 2323 043a 87F84330 		strb	r3, [r7, #67]
 411:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2324              		.loc 1 411 0
 2325 043e 4A48     		ldr	r0, .L113+28
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 50


 2326 0440 FFF7FEFF 		bl	puts
 412:pathfinding.c ****                     ignoreL = 0;
 2327              		.loc 1 412 0
 2328 0444 414B     		ldr	r3, .L113
 2329 0446 0022     		movs	r2, #0
 2330 0448 1A60     		str	r2, [r3]
 413:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2331              		.loc 1 413 0
 2332 044a 414B     		ldr	r3, .L113+4
 2333 044c 0022     		movs	r2, #0
 2334 044e 1A60     		str	r2, [r3]
 2335              	.L94:
 414:pathfinding.c ****                 }
 415:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2336              		.loc 1 415 0
 2337 0450 414B     		ldr	r3, .L113+12
 2338 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2339 0454 012B     		cmp	r3, #1
 2340 0456 0BD1     		bne	.L95
 416:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2341              		.loc 1 416 0
 2342 0458 0123     		movs	r3, #1
 2343 045a 87F84330 		strb	r3, [r7, #67]
 417:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2344              		.loc 1 417 0
 2345 045e 4148     		ldr	r0, .L113+24
 2346 0460 FFF7FEFF 		bl	puts
 418:pathfinding.c ****                     ignoreL = 0;
 2347              		.loc 1 418 0
 2348 0464 394B     		ldr	r3, .L113
 2349 0466 0022     		movs	r2, #0
 2350 0468 1A60     		str	r2, [r3]
 419:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2351              		.loc 1 419 0
 2352 046a 394B     		ldr	r3, .L113+4
 2353 046c 0022     		movs	r2, #0
 2354 046e 1A60     		str	r2, [r3]
 2355              	.L95:
 420:pathfinding.c ****                 }
 421:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2356              		.loc 1 421 0
 2357 0470 394B     		ldr	r3, .L113+12
 2358 0472 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 0474 032B     		cmp	r3, #3
 2360 0476 54D1     		bne	.L96
 422:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 2361              		.loc 1 422 0
 2362 0478 7A69     		ldr	r2, [r7, #20]
 2363 047a FB6B     		ldr	r3, [r7, #60]
 2364 047c 9A42     		cmp	r2, r3
 2365 047e 45D1     		bne	.L97
 2366              		.loc 1 422 0 is_stmt 0 discriminator 1
 2367 0480 FA6D     		ldr	r2, [r7, #92]
 2368 0482 BB6C     		ldr	r3, [r7, #72]
 2369 0484 9A42     		cmp	r2, r3
 2370 0486 41D1     		bne	.L97
 2371              	.LBB28:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 51


 423:pathfinding.c ****                         int atTarget = 1;
 2372              		.loc 1 423 0 is_stmt 1
 2373 0488 0123     		movs	r3, #1
 2374 048a 3B62     		str	r3, [r7, #32]
 2375              	.LBB29:
 424:pathfinding.c ****                         // check if we only need to go forward to reach target
 425:pathfinding.c ****                         for(int i = 0; i < targetLocation.col; i++) {
 2376              		.loc 1 425 0
 2377 048c 0023     		movs	r3, #0
 2378 048e FB61     		str	r3, [r7, #28]
 2379 0490 22E0     		b	.L98
 2380              	.L102:
 426:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 427:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 1) {
 2381              		.loc 1 427 0
 2382 0492 FB6C     		ldr	r3, [r7, #76]
 2383 0494 4C22     		movs	r2, #76
 2384 0496 02FB03F3 		mul	r3, r2, r3
 2385 049a FA68     		ldr	r2, [r7, #12]
 2386 049c 1344     		add	r3, r3, r2
 2387 049e B96C     		ldr	r1, [r7, #72]
 2388 04a0 FA69     		ldr	r2, [r7, #28]
 2389 04a2 0A44     		add	r2, r2, r1
 2390 04a4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2391 04a8 012B     		cmp	r3, #1
 2392 04aa 02D1     		bne	.L99
 428:pathfinding.c ****                                 atTarget = 0;
 2393              		.loc 1 428 0
 2394 04ac 0023     		movs	r3, #0
 2395 04ae 3B62     		str	r3, [r7, #32]
 429:pathfinding.c ****                                 break;
 2396              		.loc 1 429 0
 2397 04b0 16E0     		b	.L100
 2398              	.L99:
 430:pathfinding.c ****                             }
 431:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 9) {
 2399              		.loc 1 431 0
 2400 04b2 FB6C     		ldr	r3, [r7, #76]
 2401 04b4 4C22     		movs	r2, #76
 2402 04b6 02FB03F3 		mul	r3, r2, r3
 2403 04ba FA68     		ldr	r2, [r7, #12]
 2404 04bc 1344     		add	r3, r3, r2
 2405 04be B96C     		ldr	r1, [r7, #72]
 2406 04c0 FA69     		ldr	r2, [r7, #28]
 2407 04c2 0A44     		add	r2, r2, r1
 2408 04c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2409 04c8 092B     		cmp	r3, #9
 2410 04ca 02D1     		bne	.L101
 432:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2411              		.loc 1 432 0
 2412 04cc 0123     		movs	r3, #1
 2413 04ce 3B62     		str	r3, [r7, #32]
 433:pathfinding.c ****                                 break;
 2414              		.loc 1 433 0
 2415 04d0 06E0     		b	.L100
 2416              	.L101:
 425:pathfinding.c ****                             // check columns in front to see if there are any obstacles
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 52


 2417              		.loc 1 425 0 discriminator 2
 2418 04d2 FB69     		ldr	r3, [r7, #28]
 2419 04d4 0133     		adds	r3, r3, #1
 2420 04d6 FB61     		str	r3, [r7, #28]
 2421              	.L98:
 425:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2422              		.loc 1 425 0 is_stmt 0 discriminator 1
 2423 04d8 FA6D     		ldr	r2, [r7, #92]
 2424 04da FB69     		ldr	r3, [r7, #28]
 2425 04dc 9A42     		cmp	r2, r3
 2426 04de D8DC     		bgt	.L102
 2427              	.L100:
 2428              	.LBE29:
 434:pathfinding.c ****                             }
 435:pathfinding.c ****                         }
 436:pathfinding.c ****                         if(atTarget) {
 2429              		.loc 1 436 0 is_stmt 1
 2430 04e0 3B6A     		ldr	r3, [r7, #32]
 2431 04e2 002B     		cmp	r3, #0
 2432 04e4 06D0     		beq	.L103
 437:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2433              		.loc 1 437 0
 2434 04e6 0423     		movs	r3, #4
 2435 04e8 87F84330 		strb	r3, [r7, #67]
 438:pathfinding.c ****                             printf("Forward until target\n");
 2436              		.loc 1 438 0
 2437 04ec 1F48     		ldr	r0, .L113+32
 2438 04ee FFF7FEFF 		bl	puts
 2439              	.LBE28:
 422:pathfinding.c ****                         int atTarget = 1;
 2440              		.loc 1 422 0
 2441 04f2 16E0     		b	.L96
 2442              	.L103:
 2443              	.LBB30:
 439:pathfinding.c ****                         } else {
 440:pathfinding.c ****                             newDirection = GoForward;
 2444              		.loc 1 440 0
 2445 04f4 0023     		movs	r3, #0
 2446 04f6 87F84330 		strb	r3, [r7, #67]
 441:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2447              		.loc 1 441 0
 2448 04fa 144B     		ldr	r3, .L113
 2449 04fc 1968     		ldr	r1, [r3]
 2450 04fe 144B     		ldr	r3, .L113+4
 2451 0500 1B68     		ldr	r3, [r3]
 2452 0502 1A46     		mov	r2, r3
 2453 0504 1348     		ldr	r0, .L113+8
 2454 0506 FFF7FEFF 		bl	printf
 2455              	.LBE30:
 422:pathfinding.c ****                         int atTarget = 1;
 2456              		.loc 1 422 0
 2457 050a 0AE0     		b	.L96
 2458              	.L97:
 442:pathfinding.c ****                         }
 443:pathfinding.c ****                     } else {
 444:pathfinding.c ****                         newDirection = GoForward;
 2459              		.loc 1 444 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 53


 2460 050c 0023     		movs	r3, #0
 2461 050e 87F84330 		strb	r3, [r7, #67]
 445:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2462              		.loc 1 445 0
 2463 0512 0E4B     		ldr	r3, .L113
 2464 0514 1968     		ldr	r1, [r3]
 2465 0516 0E4B     		ldr	r3, .L113+4
 2466 0518 1B68     		ldr	r3, [r3]
 2467 051a 1A46     		mov	r2, r3
 2468 051c 0D48     		ldr	r0, .L113+8
 2469 051e FFF7FEFF 		bl	printf
 2470              	.L96:
 446:pathfinding.c ****                     }
 447:pathfinding.c ****                 }
 448:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2471              		.loc 1 448 0
 2472 0522 0D4B     		ldr	r3, .L113+12
 2473 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2474 0526 022B     		cmp	r3, #2
 2475 0528 0BD1     		bne	.L105
 449:pathfinding.c ****                     newDirection = uTurn;
 2476              		.loc 1 449 0
 2477 052a 0323     		movs	r3, #3
 2478 052c 87F84330 		strb	r3, [r7, #67]
 450:pathfinding.c ****                     ignoreL = 0;
 2479              		.loc 1 450 0
 2480 0530 064B     		ldr	r3, .L113
 2481 0532 0022     		movs	r2, #0
 2482 0534 1A60     		str	r2, [r3]
 451:pathfinding.c ****                     ignoreR = 0;
 2483              		.loc 1 451 0
 2484 0536 064B     		ldr	r3, .L113+4
 2485 0538 0022     		movs	r2, #0
 2486 053a 1A60     		str	r2, [r3]
 452:pathfinding.c ****                     printf("U-turn\n");
 2487              		.loc 1 452 0
 2488 053c 0748     		ldr	r0, .L113+16
 2489 053e FFF7FEFF 		bl	puts
 2490              	.L105:
 453:pathfinding.c ****                 }
 454:pathfinding.c ****                 currentCol++;
 2491              		.loc 1 454 0
 2492 0542 BB6C     		ldr	r3, [r7, #72]
 2493 0544 0133     		adds	r3, r3, #1
 2494 0546 BB64     		str	r3, [r7, #72]
 455:pathfinding.c ****                 break;
 2495              		.loc 1 455 0
 2496 0548 13E0     		b	.L69
 2497              	.L114:
 2498 054a 00BF     		.align	2
 2499              	.L113:
 2500 054c 00000000 		.word	ignoreL
 2501 0550 00000000 		.word	ignoreR
 2502 0554 44000000 		.word	.LC5
 2503 0558 00000000 		.word	previousRobotOrientation
 2504 055c 68000000 		.word	.LC6
 2505 0560 00000000 		.word	currentRobotOrientation
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 54


 2506 0564 20000000 		.word	.LC3
 2507 0568 14000000 		.word	.LC2
 2508 056c 2C000000 		.word	.LC4
 2509              	.L110:
 456:pathfinding.c ****             default:
 457:pathfinding.c ****                 break;
 2510              		.loc 1 457 0
 2511 0570 00BF     		nop
 2512              	.L69:
 458:pathfinding.c ****         }
 459:pathfinding.c ****         
 460:pathfinding.c ****         // add new direction to list
 461:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2513              		.loc 1 461 0
 2514 0572 2D4A     		ldr	r2, .L115
 2515 0574 7B6C     		ldr	r3, [r7, #68]
 2516 0576 1B01     		lsls	r3, r3, #4
 2517 0578 1344     		add	r3, r3, r2
 2518 057a 97F84320 		ldrb	r2, [r7, #67]
 2519 057e 1A70     		strb	r2, [r3]
 462:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2520              		.loc 1 462 0
 2521 0580 2A4B     		ldr	r3, .L115+4
 2522 0582 1A68     		ldr	r2, [r3]
 2523 0584 2849     		ldr	r1, .L115
 2524 0586 7B6C     		ldr	r3, [r7, #68]
 2525 0588 1B01     		lsls	r3, r3, #4
 2526 058a 0B44     		add	r3, r3, r1
 2527 058c 0433     		adds	r3, r3, #4
 2528 058e 1A60     		str	r2, [r3]
 463:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2529              		.loc 1 463 0
 2530 0590 274B     		ldr	r3, .L115+8
 2531 0592 1A68     		ldr	r2, [r3]
 2532 0594 2449     		ldr	r1, .L115
 2533 0596 7B6C     		ldr	r3, [r7, #68]
 2534 0598 1B01     		lsls	r3, r3, #4
 2535 059a 0B44     		add	r3, r3, r1
 2536 059c 0833     		adds	r3, r3, #8
 2537 059e 1A60     		str	r2, [r3]
 464:pathfinding.c ****         instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 2538              		.loc 1 464 0
 2539 05a0 244B     		ldr	r3, .L115+12
 2540 05a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2541 05a4 204A     		ldr	r2, .L115
 2542 05a6 7B6C     		ldr	r3, [r7, #68]
 2543 05a8 1B01     		lsls	r3, r3, #4
 2544 05aa 1344     		add	r3, r3, r2
 2545 05ac 0C33     		adds	r3, r3, #12
 2546 05ae 0A46     		mov	r2, r1
 2547 05b0 1A70     		strb	r2, [r3]
 465:pathfinding.c ****         listIndex++; // increment instruction list index
 2548              		.loc 1 465 0
 2549 05b2 7B6C     		ldr	r3, [r7, #68]
 2550 05b4 0133     		adds	r3, r3, #1
 2551 05b6 7B64     		str	r3, [r7, #68]
 466:pathfinding.c ****         numSteps--; // decrement numSteps
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 55


 2552              		.loc 1 466 0
 2553 05b8 BB68     		ldr	r3, [r7, #8]
 2554 05ba 013B     		subs	r3, r3, #1
 2555 05bc BB60     		str	r3, [r7, #8]
 2556              	.L49:
 2557              	.LBE18:
 248:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2558              		.loc 1 248 0
 2559 05be BB68     		ldr	r3, [r7, #8]
 2560 05c0 002B     		cmp	r3, #0
 2561 05c2 BFF634AD 		bge	.L106
 2562              	.LBB31:
 467:pathfinding.c ****     }
 468:pathfinding.c ****     // process list, remove repeated forward outputs
 469:pathfinding.c ****     for(int i = 0; i < listIndex-1; i ++) {
 2563              		.loc 1 469 0
 2564 05c6 0023     		movs	r3, #0
 2565 05c8 BB61     		str	r3, [r7, #24]
 2566 05ca 23E0     		b	.L107
 2567              	.L109:
 470:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2568              		.loc 1 470 0
 2569 05cc 164A     		ldr	r2, .L115
 2570 05ce BB69     		ldr	r3, [r7, #24]
 2571 05d0 1B01     		lsls	r3, r3, #4
 2572 05d2 1344     		add	r3, r3, r2
 2573 05d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2574 05d6 BB69     		ldr	r3, [r7, #24]
 2575 05d8 0133     		adds	r3, r3, #1
 2576 05da 1349     		ldr	r1, .L115
 2577 05dc 1B01     		lsls	r3, r3, #4
 2578 05de 0B44     		add	r3, r3, r1
 2579 05e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2580 05e2 9A42     		cmp	r2, r3
 2581 05e4 13D1     		bne	.L108
 471:pathfinding.c ****             instructionsList[i].direction = Skip;
 2582              		.loc 1 471 0
 2583 05e6 104A     		ldr	r2, .L115
 2584 05e8 BB69     		ldr	r3, [r7, #24]
 2585 05ea 1B01     		lsls	r3, r3, #4
 2586 05ec 1344     		add	r3, r3, r2
 2587 05ee 0622     		movs	r2, #6
 2588 05f0 1A70     		strb	r2, [r3]
 472:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2589              		.loc 1 472 0
 2590 05f2 0D4A     		ldr	r2, .L115
 2591 05f4 BB69     		ldr	r3, [r7, #24]
 2592 05f6 1B01     		lsls	r3, r3, #4
 2593 05f8 1344     		add	r3, r3, r2
 2594 05fa 0433     		adds	r3, r3, #4
 2595 05fc 0022     		movs	r2, #0
 2596 05fe 1A60     		str	r2, [r3]
 473:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2597              		.loc 1 473 0
 2598 0600 094A     		ldr	r2, .L115
 2599 0602 BB69     		ldr	r3, [r7, #24]
 2600 0604 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 56


 2601 0606 1344     		add	r3, r3, r2
 2602 0608 0833     		adds	r3, r3, #8
 2603 060a 0022     		movs	r2, #0
 2604 060c 1A60     		str	r2, [r3]
 2605              	.L108:
 469:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2606              		.loc 1 469 0 discriminator 2
 2607 060e BB69     		ldr	r3, [r7, #24]
 2608 0610 0133     		adds	r3, r3, #1
 2609 0612 BB61     		str	r3, [r7, #24]
 2610              	.L107:
 469:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2611              		.loc 1 469 0 is_stmt 0 discriminator 1
 2612 0614 7B6C     		ldr	r3, [r7, #68]
 2613 0616 5A1E     		subs	r2, r3, #1
 2614 0618 BB69     		ldr	r3, [r7, #24]
 2615 061a 9A42     		cmp	r2, r3
 2616 061c D6DC     		bgt	.L109
 2617              	.LBE31:
 474:pathfinding.c ****         }
 475:pathfinding.c ****     }
 476:pathfinding.c **** }
 2618              		.loc 1 476 0 is_stmt 1
 2619 061e 00BF     		nop
 2620 0620 5037     		adds	r7, r7, #80
 2621              		.cfi_def_cfa_offset 8
 2622 0622 BD46     		mov	sp, r7
 2623              		.cfi_def_cfa_register 13
 2624              		@ sp needed
 2625 0624 80BD     		pop	{r7, pc}
 2626              	.L116:
 2627 0626 00BF     		.align	2
 2628              	.L115:
 2629 0628 04000000 		.word	instructionsList
 2630 062c 00000000 		.word	ignoreL
 2631 0630 00000000 		.word	ignoreR
 2632 0634 00000000 		.word	previousRobotOrientation
 2633              		.cfi_endproc
 2634              	.LFE5:
 2635              		.size	getPathInstructions, .-getPathInstructions
 2636              		.section	.text.checkPathDirection,"ax",%progbits
 2637              		.align	2
 2638              		.global	checkPathDirection
 2639              		.thumb
 2640              		.thumb_func
 2641              		.type	checkPathDirection, %function
 2642              	checkPathDirection:
 2643              	.LFB6:
 477:pathfinding.c **** 
 478:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2644              		.loc 1 478 0
 2645              		.cfi_startproc
 2646              		@ args = 0, pretend = 0, frame = 8
 2647              		@ frame_needed = 1, uses_anonymous_args = 0
 2648              		@ link register save eliminated.
 2649 0000 80B4     		push	{r7}
 2650              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 57


 2651              		.cfi_offset 7, -4
 2652 0002 83B0     		sub	sp, sp, #12
 2653              		.cfi_def_cfa_offset 16
 2654 0004 00AF     		add	r7, sp, #0
 2655              		.cfi_def_cfa_register 7
 2656 0006 7860     		str	r0, [r7, #4]
 2657 0008 3960     		str	r1, [r7]
 479:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 480:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2658              		.loc 1 480 0
 2659 000a 7B68     		ldr	r3, [r7, #4]
 2660 000c 5A1E     		subs	r2, r3, #1
 2661 000e 3E49     		ldr	r1, .L127
 2662 0010 1346     		mov	r3, r2
 2663 0012 DB00     		lsls	r3, r3, #3
 2664 0014 1344     		add	r3, r3, r2
 2665 0016 5B00     		lsls	r3, r3, #1
 2666 0018 1344     		add	r3, r3, r2
 2667 001a 3A68     		ldr	r2, [r7]
 2668 001c 1344     		add	r3, r3, r2
 2669 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2670 0022 082B     		cmp	r3, #8
 2671 0024 0DD0     		beq	.L118
 2672              		.loc 1 480 0 is_stmt 0 discriminator 1
 2673 0026 7B68     		ldr	r3, [r7, #4]
 2674 0028 5A1E     		subs	r2, r3, #1
 2675 002a 3749     		ldr	r1, .L127
 2676 002c 1346     		mov	r3, r2
 2677 002e DB00     		lsls	r3, r3, #3
 2678 0030 1344     		add	r3, r3, r2
 2679 0032 5B00     		lsls	r3, r3, #1
 2680 0034 1344     		add	r3, r3, r2
 2681 0036 3A68     		ldr	r2, [r7]
 2682 0038 1344     		add	r3, r3, r2
 2683 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2684 003e 092B     		cmp	r3, #9
 2685 0040 01D1     		bne	.L119
 2686              	.L118:
 481:pathfinding.c ****         return 0; // up 
 2687              		.loc 1 481 0 is_stmt 1
 2688 0042 0023     		movs	r3, #0
 2689 0044 5AE0     		b	.L120
 2690              	.L119:
 482:pathfinding.c ****     }
 483:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2691              		.loc 1 483 0
 2692 0046 7B68     		ldr	r3, [r7, #4]
 2693 0048 5A1C     		adds	r2, r3, #1
 2694 004a 2F49     		ldr	r1, .L127
 2695 004c 1346     		mov	r3, r2
 2696 004e DB00     		lsls	r3, r3, #3
 2697 0050 1344     		add	r3, r3, r2
 2698 0052 5B00     		lsls	r3, r3, #1
 2699 0054 1344     		add	r3, r3, r2
 2700 0056 3A68     		ldr	r2, [r7]
 2701 0058 1344     		add	r3, r3, r2
 2702 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 58


 2703 005e 082B     		cmp	r3, #8
 2704 0060 0DD0     		beq	.L121
 2705              		.loc 1 483 0 is_stmt 0 discriminator 1
 2706 0062 7B68     		ldr	r3, [r7, #4]
 2707 0064 5A1C     		adds	r2, r3, #1
 2708 0066 2849     		ldr	r1, .L127
 2709 0068 1346     		mov	r3, r2
 2710 006a DB00     		lsls	r3, r3, #3
 2711 006c 1344     		add	r3, r3, r2
 2712 006e 5B00     		lsls	r3, r3, #1
 2713 0070 1344     		add	r3, r3, r2
 2714 0072 3A68     		ldr	r2, [r7]
 2715 0074 1344     		add	r3, r3, r2
 2716 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2717 007a 092B     		cmp	r3, #9
 2718 007c 01D1     		bne	.L122
 2719              	.L121:
 484:pathfinding.c ****         return 1; // down
 2720              		.loc 1 484 0 is_stmt 1
 2721 007e 0123     		movs	r3, #1
 2722 0080 3CE0     		b	.L120
 2723              	.L122:
 485:pathfinding.c ****     }
 486:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2724              		.loc 1 486 0
 2725 0082 3B68     		ldr	r3, [r7]
 2726 0084 591E     		subs	r1, r3, #1
 2727 0086 2048     		ldr	r0, .L127
 2728 0088 7A68     		ldr	r2, [r7, #4]
 2729 008a 1346     		mov	r3, r2
 2730 008c DB00     		lsls	r3, r3, #3
 2731 008e 1344     		add	r3, r3, r2
 2732 0090 5B00     		lsls	r3, r3, #1
 2733 0092 1344     		add	r3, r3, r2
 2734 0094 0B44     		add	r3, r3, r1
 2735 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2736 009a 082B     		cmp	r3, #8
 2737 009c 0DD0     		beq	.L123
 2738              		.loc 1 486 0 is_stmt 0 discriminator 1
 2739 009e 3B68     		ldr	r3, [r7]
 2740 00a0 591E     		subs	r1, r3, #1
 2741 00a2 1948     		ldr	r0, .L127
 2742 00a4 7A68     		ldr	r2, [r7, #4]
 2743 00a6 1346     		mov	r3, r2
 2744 00a8 DB00     		lsls	r3, r3, #3
 2745 00aa 1344     		add	r3, r3, r2
 2746 00ac 5B00     		lsls	r3, r3, #1
 2747 00ae 1344     		add	r3, r3, r2
 2748 00b0 0B44     		add	r3, r3, r1
 2749 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2750 00b6 092B     		cmp	r3, #9
 2751 00b8 01D1     		bne	.L124
 2752              	.L123:
 487:pathfinding.c ****         return 2; // left
 2753              		.loc 1 487 0 is_stmt 1
 2754 00ba 0223     		movs	r3, #2
 2755 00bc 1EE0     		b	.L120
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 59


 2756              	.L124:
 488:pathfinding.c ****     }
 489:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2757              		.loc 1 489 0
 2758 00be 3B68     		ldr	r3, [r7]
 2759 00c0 591C     		adds	r1, r3, #1
 2760 00c2 1148     		ldr	r0, .L127
 2761 00c4 7A68     		ldr	r2, [r7, #4]
 2762 00c6 1346     		mov	r3, r2
 2763 00c8 DB00     		lsls	r3, r3, #3
 2764 00ca 1344     		add	r3, r3, r2
 2765 00cc 5B00     		lsls	r3, r3, #1
 2766 00ce 1344     		add	r3, r3, r2
 2767 00d0 0B44     		add	r3, r3, r1
 2768 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2769 00d6 082B     		cmp	r3, #8
 2770 00d8 0DD0     		beq	.L125
 2771              		.loc 1 489 0 is_stmt 0 discriminator 1
 2772 00da 3B68     		ldr	r3, [r7]
 2773 00dc 591C     		adds	r1, r3, #1
 2774 00de 0A48     		ldr	r0, .L127
 2775 00e0 7A68     		ldr	r2, [r7, #4]
 2776 00e2 1346     		mov	r3, r2
 2777 00e4 DB00     		lsls	r3, r3, #3
 2778 00e6 1344     		add	r3, r3, r2
 2779 00e8 5B00     		lsls	r3, r3, #1
 2780 00ea 1344     		add	r3, r3, r2
 2781 00ec 0B44     		add	r3, r3, r1
 2782 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2783 00f2 092B     		cmp	r3, #9
 2784 00f4 01D1     		bne	.L126
 2785              	.L125:
 490:pathfinding.c ****         return 3; // right
 2786              		.loc 1 490 0 is_stmt 1
 2787 00f6 0323     		movs	r3, #3
 2788 00f8 00E0     		b	.L120
 2789              	.L126:
 491:pathfinding.c ****     }
 492:pathfinding.c ****     return 5; // default- will never reach this
 2790              		.loc 1 492 0
 2791 00fa 0523     		movs	r3, #5
 2792              	.L120:
 493:pathfinding.c **** }
 2793              		.loc 1 493 0
 2794 00fc 1846     		mov	r0, r3
 2795 00fe 0C37     		adds	r7, r7, #12
 2796              		.cfi_def_cfa_offset 4
 2797 0100 BD46     		mov	sp, r7
 2798              		.cfi_def_cfa_register 13
 2799              		@ sp needed
 2800 0102 80BC     		pop	{r7}
 2801              		.cfi_restore 7
 2802              		.cfi_def_cfa_offset 0
 2803 0104 7047     		bx	lr
 2804              	.L128:
 2805 0106 00BF     		.align	2
 2806              	.L127:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 60


 2807 0108 00000000 		.word	map
 2808              		.cfi_endproc
 2809              	.LFE6:
 2810              		.size	checkPathDirection, .-checkPathDirection
 2811              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2812              		.align	2
 2813              		.global	checkIgnoreTurn
 2814              		.thumb
 2815              		.thumb_func
 2816              		.type	checkIgnoreTurn, %function
 2817              	checkIgnoreTurn:
 2818              	.LFB7:
 494:pathfinding.c **** 
 495:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2819              		.loc 1 495 0
 2820              		.cfi_startproc
 2821              		@ args = 0, pretend = 0, frame = 16
 2822              		@ frame_needed = 1, uses_anonymous_args = 0
 2823              		@ link register save eliminated.
 2824 0000 80B4     		push	{r7}
 2825              		.cfi_def_cfa_offset 4
 2826              		.cfi_offset 7, -4
 2827 0002 85B0     		sub	sp, sp, #20
 2828              		.cfi_def_cfa_offset 24
 2829 0004 00AF     		add	r7, sp, #0
 2830              		.cfi_def_cfa_register 7
 2831 0006 0346     		mov	r3, r0
 2832 0008 B960     		str	r1, [r7, #8]
 2833 000a 7A60     		str	r2, [r7, #4]
 2834 000c FB73     		strb	r3, [r7, #15]
 496:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 497:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2835              		.loc 1 497 0
 2836 000e BB68     		ldr	r3, [r7, #8]
 2837 0010 5A1E     		subs	r2, r3, #1
 2838 0012 4149     		ldr	r1, .L147
 2839 0014 1346     		mov	r3, r2
 2840 0016 DB00     		lsls	r3, r3, #3
 2841 0018 1344     		add	r3, r3, r2
 2842 001a 5B00     		lsls	r3, r3, #1
 2843 001c 1344     		add	r3, r3, r2
 2844 001e 7A68     		ldr	r2, [r7, #4]
 2845 0020 1344     		add	r3, r3, r2
 2846 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2847 0026 002B     		cmp	r3, #0
 2848 0028 11D1     		bne	.L130
 498:pathfinding.c ****         switch (robotOrientation) {
 2849              		.loc 1 498 0
 2850 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2851 002c 022B     		cmp	r3, #2
 2852 002e 02D0     		beq	.L132
 2853 0030 032B     		cmp	r3, #3
 2854 0032 06D0     		beq	.L133
 499:pathfinding.c ****             case Left:
 500:pathfinding.c ****                 ignoreR++;
 501:pathfinding.c ****                 break;
 502:pathfinding.c ****             case Right:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 61


 503:pathfinding.c ****                 ignoreL++;
 504:pathfinding.c ****                 break;
 505:pathfinding.c ****             default:
 506:pathfinding.c ****                 break; // ignore when going up and down
 2855              		.loc 1 506 0
 2856 0034 0BE0     		b	.L130
 2857              	.L132:
 500:pathfinding.c ****                 break;
 2858              		.loc 1 500 0
 2859 0036 394B     		ldr	r3, .L147+4
 2860 0038 1B68     		ldr	r3, [r3]
 2861 003a 0133     		adds	r3, r3, #1
 2862 003c 374A     		ldr	r2, .L147+4
 2863 003e 1360     		str	r3, [r2]
 501:pathfinding.c ****             case Right:
 2864              		.loc 1 501 0
 2865 0040 05E0     		b	.L130
 2866              	.L133:
 503:pathfinding.c ****                 break;
 2867              		.loc 1 503 0
 2868 0042 374B     		ldr	r3, .L147+8
 2869 0044 1B68     		ldr	r3, [r3]
 2870 0046 0133     		adds	r3, r3, #1
 2871 0048 354A     		ldr	r2, .L147+8
 2872 004a 1360     		str	r3, [r2]
 504:pathfinding.c ****             default:
 2873              		.loc 1 504 0
 2874 004c 00BF     		nop
 2875              	.L130:
 507:pathfinding.c ****         }
 508:pathfinding.c ****     }
 509:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2876              		.loc 1 509 0
 2877 004e BB68     		ldr	r3, [r7, #8]
 2878 0050 5A1C     		adds	r2, r3, #1
 2879 0052 3149     		ldr	r1, .L147
 2880 0054 1346     		mov	r3, r2
 2881 0056 DB00     		lsls	r3, r3, #3
 2882 0058 1344     		add	r3, r3, r2
 2883 005a 5B00     		lsls	r3, r3, #1
 2884 005c 1344     		add	r3, r3, r2
 2885 005e 7A68     		ldr	r2, [r7, #4]
 2886 0060 1344     		add	r3, r3, r2
 2887 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2888 0066 002B     		cmp	r3, #0
 2889 0068 11D1     		bne	.L134
 510:pathfinding.c ****         switch (robotOrientation) {
 2890              		.loc 1 510 0
 2891 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2892 006c 022B     		cmp	r3, #2
 2893 006e 02D0     		beq	.L136
 2894 0070 032B     		cmp	r3, #3
 2895 0072 06D0     		beq	.L137
 511:pathfinding.c ****             case Left:
 512:pathfinding.c ****                 ignoreL++;
 513:pathfinding.c ****                 break;
 514:pathfinding.c ****             case Right:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 62


 515:pathfinding.c ****                 ignoreR++;
 516:pathfinding.c ****                 break;
 517:pathfinding.c ****             default:
 518:pathfinding.c ****                 break;
 2896              		.loc 1 518 0
 2897 0074 0BE0     		b	.L134
 2898              	.L136:
 512:pathfinding.c ****                 break;
 2899              		.loc 1 512 0
 2900 0076 2A4B     		ldr	r3, .L147+8
 2901 0078 1B68     		ldr	r3, [r3]
 2902 007a 0133     		adds	r3, r3, #1
 2903 007c 284A     		ldr	r2, .L147+8
 2904 007e 1360     		str	r3, [r2]
 513:pathfinding.c ****             case Right:
 2905              		.loc 1 513 0
 2906 0080 05E0     		b	.L134
 2907              	.L137:
 515:pathfinding.c ****                 break;
 2908              		.loc 1 515 0
 2909 0082 264B     		ldr	r3, .L147+4
 2910 0084 1B68     		ldr	r3, [r3]
 2911 0086 0133     		adds	r3, r3, #1
 2912 0088 244A     		ldr	r2, .L147+4
 2913 008a 1360     		str	r3, [r2]
 516:pathfinding.c ****             default:
 2914              		.loc 1 516 0
 2915 008c 00BF     		nop
 2916              	.L134:
 519:pathfinding.c ****         }
 520:pathfinding.c ****     }
 521:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2917              		.loc 1 521 0
 2918 008e 7B68     		ldr	r3, [r7, #4]
 2919 0090 591E     		subs	r1, r3, #1
 2920 0092 2148     		ldr	r0, .L147
 2921 0094 BA68     		ldr	r2, [r7, #8]
 2922 0096 1346     		mov	r3, r2
 2923 0098 DB00     		lsls	r3, r3, #3
 2924 009a 1344     		add	r3, r3, r2
 2925 009c 5B00     		lsls	r3, r3, #1
 2926 009e 1344     		add	r3, r3, r2
 2927 00a0 0B44     		add	r3, r3, r1
 2928 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2929 00a6 002B     		cmp	r3, #0
 2930 00a8 11D1     		bne	.L138
 522:pathfinding.c ****         switch (robotOrientation) {
 2931              		.loc 1 522 0
 2932 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2933 00ac 002B     		cmp	r3, #0
 2934 00ae 02D0     		beq	.L140
 2935 00b0 012B     		cmp	r3, #1
 2936 00b2 06D0     		beq	.L141
 523:pathfinding.c ****             case Up:
 524:pathfinding.c ****                 ignoreL++;
 525:pathfinding.c ****                 break;
 526:pathfinding.c ****             case Down:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 63


 527:pathfinding.c ****                 ignoreR++;
 528:pathfinding.c ****                 break;
 529:pathfinding.c ****             default:
 530:pathfinding.c ****                 break;
 2937              		.loc 1 530 0
 2938 00b4 0BE0     		b	.L138
 2939              	.L140:
 524:pathfinding.c ****                 break;
 2940              		.loc 1 524 0
 2941 00b6 1A4B     		ldr	r3, .L147+8
 2942 00b8 1B68     		ldr	r3, [r3]
 2943 00ba 0133     		adds	r3, r3, #1
 2944 00bc 184A     		ldr	r2, .L147+8
 2945 00be 1360     		str	r3, [r2]
 525:pathfinding.c ****             case Down:
 2946              		.loc 1 525 0
 2947 00c0 05E0     		b	.L138
 2948              	.L141:
 527:pathfinding.c ****                 break;
 2949              		.loc 1 527 0
 2950 00c2 164B     		ldr	r3, .L147+4
 2951 00c4 1B68     		ldr	r3, [r3]
 2952 00c6 0133     		adds	r3, r3, #1
 2953 00c8 144A     		ldr	r2, .L147+4
 2954 00ca 1360     		str	r3, [r2]
 528:pathfinding.c ****             default:
 2955              		.loc 1 528 0
 2956 00cc 00BF     		nop
 2957              	.L138:
 531:pathfinding.c ****         }
 532:pathfinding.c ****     }
 533:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2958              		.loc 1 533 0
 2959 00ce 7B68     		ldr	r3, [r7, #4]
 2960 00d0 591C     		adds	r1, r3, #1
 2961 00d2 1148     		ldr	r0, .L147
 2962 00d4 BA68     		ldr	r2, [r7, #8]
 2963 00d6 1346     		mov	r3, r2
 2964 00d8 DB00     		lsls	r3, r3, #3
 2965 00da 1344     		add	r3, r3, r2
 2966 00dc 5B00     		lsls	r3, r3, #1
 2967 00de 1344     		add	r3, r3, r2
 2968 00e0 0B44     		add	r3, r3, r1
 2969 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2970 00e6 002B     		cmp	r3, #0
 2971 00e8 11D1     		bne	.L146
 534:pathfinding.c ****         switch (robotOrientation) {
 2972              		.loc 1 534 0
 2973 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2974 00ec 002B     		cmp	r3, #0
 2975 00ee 02D0     		beq	.L144
 2976 00f0 012B     		cmp	r3, #1
 2977 00f2 06D0     		beq	.L145
 535:pathfinding.c ****             case Up:
 536:pathfinding.c ****                 ignoreR++;
 537:pathfinding.c ****                 break;
 538:pathfinding.c ****             case Down:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 64


 539:pathfinding.c ****                 ignoreL++;
 540:pathfinding.c ****                 break;
 541:pathfinding.c ****             default:
 542:pathfinding.c ****                 break;
 2978              		.loc 1 542 0
 2979 00f4 0BE0     		b	.L142
 2980              	.L144:
 536:pathfinding.c ****                 break;
 2981              		.loc 1 536 0
 2982 00f6 094B     		ldr	r3, .L147+4
 2983 00f8 1B68     		ldr	r3, [r3]
 2984 00fa 0133     		adds	r3, r3, #1
 2985 00fc 074A     		ldr	r2, .L147+4
 2986 00fe 1360     		str	r3, [r2]
 537:pathfinding.c ****             case Down:
 2987              		.loc 1 537 0
 2988 0100 05E0     		b	.L142
 2989              	.L145:
 539:pathfinding.c ****                 break;
 2990              		.loc 1 539 0
 2991 0102 074B     		ldr	r3, .L147+8
 2992 0104 1B68     		ldr	r3, [r3]
 2993 0106 0133     		adds	r3, r3, #1
 2994 0108 054A     		ldr	r2, .L147+8
 2995 010a 1360     		str	r3, [r2]
 540:pathfinding.c ****             default:
 2996              		.loc 1 540 0
 2997 010c 00BF     		nop
 2998              	.L142:
 2999              	.L146:
 543:pathfinding.c ****         }
 544:pathfinding.c ****     }
 545:pathfinding.c **** }
 3000              		.loc 1 545 0
 3001 010e 00BF     		nop
 3002 0110 1437     		adds	r7, r7, #20
 3003              		.cfi_def_cfa_offset 4
 3004 0112 BD46     		mov	sp, r7
 3005              		.cfi_def_cfa_register 13
 3006              		@ sp needed
 3007 0114 80BC     		pop	{r7}
 3008              		.cfi_restore 7
 3009              		.cfi_def_cfa_offset 0
 3010 0116 7047     		bx	lr
 3011              	.L148:
 3012              		.align	2
 3013              	.L147:
 3014 0118 00000000 		.word	map
 3015 011c 00000000 		.word	ignoreR
 3016 0120 00000000 		.word	ignoreL
 3017              		.cfi_endproc
 3018              	.LFE7:
 3019              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 3020              		.section	.text.getTargetOrientation,"ax",%progbits
 3021              		.align	2
 3022              		.global	getTargetOrientation
 3023              		.thumb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 65


 3024              		.thumb_func
 3025              		.type	getTargetOrientation, %function
 3026              	getTargetOrientation:
 3027              	.LFB8:
 546:pathfinding.c **** 
 547:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 3028              		.loc 1 547 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 8
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032              		@ link register save eliminated.
 3033 0000 80B4     		push	{r7}
 3034              		.cfi_def_cfa_offset 4
 3035              		.cfi_offset 7, -4
 3036 0002 83B0     		sub	sp, sp, #12
 3037              		.cfi_def_cfa_offset 16
 3038 0004 00AF     		add	r7, sp, #0
 3039              		.cfi_def_cfa_register 7
 3040 0006 7860     		str	r0, [r7, #4]
 3041 0008 3960     		str	r1, [r7]
 548:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 3042              		.loc 1 548 0
 3043 000a 7B68     		ldr	r3, [r7, #4]
 3044 000c 5A1C     		adds	r2, r3, #1
 3045 000e 2249     		ldr	r1, .L155
 3046 0010 1346     		mov	r3, r2
 3047 0012 DB00     		lsls	r3, r3, #3
 3048 0014 1344     		add	r3, r3, r2
 3049 0016 5B00     		lsls	r3, r3, #1
 3050 0018 1344     		add	r3, r3, r2
 3051 001a 3A68     		ldr	r2, [r7]
 3052 001c 1344     		add	r3, r3, r2
 3053 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3054 0022 082B     		cmp	r3, #8
 3055 0024 01D1     		bne	.L150
 549:pathfinding.c ****         return 0; // robot will be travelling up
 3056              		.loc 1 549 0
 3057 0026 0023     		movs	r3, #0
 3058 0028 30E0     		b	.L151
 3059              	.L150:
 550:pathfinding.c ****     }
 551:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 3060              		.loc 1 551 0
 3061 002a 7B68     		ldr	r3, [r7, #4]
 3062 002c 5A1E     		subs	r2, r3, #1
 3063 002e 1A49     		ldr	r1, .L155
 3064 0030 1346     		mov	r3, r2
 3065 0032 DB00     		lsls	r3, r3, #3
 3066 0034 1344     		add	r3, r3, r2
 3067 0036 5B00     		lsls	r3, r3, #1
 3068 0038 1344     		add	r3, r3, r2
 3069 003a 3A68     		ldr	r2, [r7]
 3070 003c 1344     		add	r3, r3, r2
 3071 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3072 0042 082B     		cmp	r3, #8
 3073 0044 01D1     		bne	.L152
 552:pathfinding.c ****         return 1; // robot will be travelling down
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 66


 3074              		.loc 1 552 0
 3075 0046 0123     		movs	r3, #1
 3076 0048 20E0     		b	.L151
 3077              	.L152:
 553:pathfinding.c ****     }
 554:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 3078              		.loc 1 554 0
 3079 004a 3B68     		ldr	r3, [r7]
 3080 004c 591C     		adds	r1, r3, #1
 3081 004e 1248     		ldr	r0, .L155
 3082 0050 7A68     		ldr	r2, [r7, #4]
 3083 0052 1346     		mov	r3, r2
 3084 0054 DB00     		lsls	r3, r3, #3
 3085 0056 1344     		add	r3, r3, r2
 3086 0058 5B00     		lsls	r3, r3, #1
 3087 005a 1344     		add	r3, r3, r2
 3088 005c 0B44     		add	r3, r3, r1
 3089 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3090 0062 082B     		cmp	r3, #8
 3091 0064 01D1     		bne	.L153
 555:pathfinding.c ****         return 2; // robot will be travelling left
 3092              		.loc 1 555 0
 3093 0066 0223     		movs	r3, #2
 3094 0068 10E0     		b	.L151
 3095              	.L153:
 556:pathfinding.c ****     }
 557:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 3096              		.loc 1 557 0
 3097 006a 3B68     		ldr	r3, [r7]
 3098 006c 591E     		subs	r1, r3, #1
 3099 006e 0A48     		ldr	r0, .L155
 3100 0070 7A68     		ldr	r2, [r7, #4]
 3101 0072 1346     		mov	r3, r2
 3102 0074 DB00     		lsls	r3, r3, #3
 3103 0076 1344     		add	r3, r3, r2
 3104 0078 5B00     		lsls	r3, r3, #1
 3105 007a 1344     		add	r3, r3, r2
 3106 007c 0B44     		add	r3, r3, r1
 3107 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3108 0082 082B     		cmp	r3, #8
 3109 0084 01D1     		bne	.L154
 558:pathfinding.c ****         return 3; // robot will be travelling right
 3110              		.loc 1 558 0
 3111 0086 0323     		movs	r3, #3
 3112 0088 00E0     		b	.L151
 3113              	.L154:
 559:pathfinding.c ****     }
 560:pathfinding.c ****     return 5; // placeholder
 3114              		.loc 1 560 0
 3115 008a 0523     		movs	r3, #5
 3116              	.L151:
 561:pathfinding.c **** }
 3117              		.loc 1 561 0
 3118 008c 1846     		mov	r0, r3
 3119 008e 0C37     		adds	r7, r7, #12
 3120              		.cfi_def_cfa_offset 4
 3121 0090 BD46     		mov	sp, r7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 67


 3122              		.cfi_def_cfa_register 13
 3123              		@ sp needed
 3124 0092 80BC     		pop	{r7}
 3125              		.cfi_restore 7
 3126              		.cfi_def_cfa_offset 0
 3127 0094 7047     		bx	lr
 3128              	.L156:
 3129 0096 00BF     		.align	2
 3130              	.L155:
 3131 0098 00000000 		.word	map
 3132              		.cfi_endproc
 3133              	.LFE8:
 3134              		.size	getTargetOrientation, .-getTargetOrientation
 3135              		.section	.text.instructionsListLength,"ax",%progbits
 3136              		.align	2
 3137              		.global	instructionsListLength
 3138              		.thumb
 3139              		.thumb_func
 3140              		.type	instructionsListLength, %function
 3141              	instructionsListLength:
 3142              	.LFB9:
 562:pathfinding.c **** uint8_t instructionsListLength() {
 3143              		.loc 1 562 0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 0
 3146              		@ frame_needed = 1, uses_anonymous_args = 0
 3147              		@ link register save eliminated.
 3148 0000 80B4     		push	{r7}
 3149              		.cfi_def_cfa_offset 4
 3150              		.cfi_offset 7, -4
 3151 0002 00AF     		add	r7, sp, #0
 3152              		.cfi_def_cfa_register 7
 563:pathfinding.c ****     return numSteps;
 3153              		.loc 1 563 0
 3154 0004 034B     		ldr	r3, .L159
 3155 0006 1B68     		ldr	r3, [r3]
 3156 0008 DBB2     		uxtb	r3, r3
 564:pathfinding.c **** }
 3157              		.loc 1 564 0
 3158 000a 1846     		mov	r0, r3
 3159 000c BD46     		mov	sp, r7
 3160              		.cfi_def_cfa_register 13
 3161              		@ sp needed
 3162 000e 80BC     		pop	{r7}
 3163              		.cfi_restore 7
 3164              		.cfi_def_cfa_offset 0
 3165 0010 7047     		bx	lr
 3166              	.L160:
 3167 0012 00BF     		.align	2
 3168              	.L159:
 3169 0014 D4110000 		.word	numSteps
 3170              		.cfi_endproc
 3171              	.LFE9:
 3172              		.size	instructionsListLength, .-instructionsListLength
 3173              		.section	.text.findPath,"ax",%progbits
 3174              		.align	2
 3175              		.global	findPath
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 68


 3176              		.thumb
 3177              		.thumb_func
 3178              		.type	findPath, %function
 3179              	findPath:
 3180              	.LFB10:
 565:pathfinding.c **** 
 566:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 3181              		.loc 1 566 0
 3182              		.cfi_startproc
 3183              		@ args = 0, pretend = 0, frame = 32
 3184              		@ frame_needed = 1, uses_anonymous_args = 0
 3185 0000 90B5     		push	{r4, r7, lr}
 3186              		.cfi_def_cfa_offset 12
 3187              		.cfi_offset 4, -12
 3188              		.cfi_offset 7, -8
 3189              		.cfi_offset 14, -4
 3190 0002 8BB0     		sub	sp, sp, #44
 3191              		.cfi_def_cfa_offset 56
 3192 0004 02AF     		add	r7, sp, #8
 3193              		.cfi_def_cfa 7, 48
 3194 0006 F860     		str	r0, [r7, #12]
 3195 0008 B960     		str	r1, [r7, #8]
 3196 000a 7A60     		str	r2, [r7, #4]
 567:pathfinding.c ****     //clearMap(map); // clear map between each pass
 568:pathfinding.c ****     struct Location startLocation, targetLocation;
 569:pathfinding.c ****     startLocation.row = start_pos[0];
 3197              		.loc 1 569 0
 3198 000c 174B     		ldr	r3, .L163
 3199 000e 1B68     		ldr	r3, [r3]
 3200 0010 BB61     		str	r3, [r7, #24]
 570:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 3201              		.loc 1 570 0
 3202 0012 164B     		ldr	r3, .L163
 3203 0014 5B68     		ldr	r3, [r3, #4]
 3204 0016 FB61     		str	r3, [r7, #28]
 571:pathfinding.c ****     targetLocation.row = food_list[i][0];
 3205              		.loc 1 571 0
 3206 0018 7B68     		ldr	r3, [r7, #4]
 3207 001a DB00     		lsls	r3, r3, #3
 3208 001c BA68     		ldr	r2, [r7, #8]
 3209 001e 1344     		add	r3, r3, r2
 3210 0020 1B68     		ldr	r3, [r3]
 3211 0022 3B61     		str	r3, [r7, #16]
 572:pathfinding.c ****     targetLocation.col = food_list[i][1];
 3212              		.loc 1 572 0
 3213 0024 7B68     		ldr	r3, [r7, #4]
 3214 0026 DB00     		lsls	r3, r3, #3
 3215 0028 BA68     		ldr	r2, [r7, #8]
 3216 002a 1344     		add	r3, r3, r2
 3217 002c 5B68     		ldr	r3, [r3, #4]
 3218 002e 7B61     		str	r3, [r7, #20]
 573:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 3219              		.loc 1 573 0
 3220 0030 7B69     		ldr	r3, [r7, #20]
 3221 0032 0093     		str	r3, [sp]
 3222 0034 3B69     		ldr	r3, [r7, #16]
 3223 0036 07F11802 		add	r2, r7, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 69


 3224 003a 06CA     		ldmia	r2, {r1, r2}
 3225 003c F868     		ldr	r0, [r7, #12]
 3226 003e FFF7FEFF 		bl	dijkstra
 574:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 3227              		.loc 1 574 0
 3228 0042 0B4B     		ldr	r3, .L163+4
 3229 0044 1C68     		ldr	r4, [r3]
 3230 0046 6A46     		mov	r2, sp
 3231 0048 07F11003 		add	r3, r7, #16
 3232 004c 93E80300 		ldmia	r3, {r0, r1}
 3233 0050 82E80300 		stmia	r2, {r0, r1}
 3234 0054 07F11803 		add	r3, r7, #24
 3235 0058 0CCB     		ldmia	r3, {r2, r3}
 3236 005a 2146     		mov	r1, r4
 3237 005c F868     		ldr	r0, [r7, #12]
 3238 005e FFF7FEFF 		bl	getPathInstructions
 575:pathfinding.c ****     return instructionsList;
 3239              		.loc 1 575 0
 3240 0062 044B     		ldr	r3, .L163+8
 576:pathfinding.c **** }
 3241              		.loc 1 576 0
 3242 0064 1846     		mov	r0, r3
 3243 0066 2437     		adds	r7, r7, #36
 3244              		.cfi_def_cfa_offset 12
 3245 0068 BD46     		mov	sp, r7
 3246              		.cfi_def_cfa_register 13
 3247              		@ sp needed
 3248 006a 90BD     		pop	{r4, r7, pc}
 3249              	.L164:
 3250              		.align	2
 3251              	.L163:
 3252 006c 00000000 		.word	start_pos
 3253 0070 D4110000 		.word	numSteps
 3254 0074 04000000 		.word	instructionsList
 3255              		.cfi_endproc
 3256              	.LFE10:
 3257              		.size	findPath, .-findPath
 3258              		.text
 3259              	.Letext0:
 3260              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3261              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3262              		.file 4 "pathfinding.h"
 3263              		.section	.debug_info,"",%progbits
 3264              	.Ldebug_info0:
 3265 0000 D3080000 		.4byte	0x8d3
 3266 0004 0400     		.2byte	0x4
 3267 0006 00000000 		.4byte	.Ldebug_abbrev0
 3268 000a 04       		.byte	0x4
 3269 000b 01       		.uleb128 0x1
 3270 000c 50000000 		.4byte	.LASF80
 3271 0010 0C       		.byte	0xc
 3272 0011 2D040000 		.4byte	.LASF81
 3273 0015 46010000 		.4byte	.LASF82
 3274 0019 78000000 		.4byte	.Ldebug_ranges0+0x78
 3275 001d 00000000 		.4byte	0
 3276 0021 00000000 		.4byte	.Ldebug_line0
 3277 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 70


 3278 0026 01       		.byte	0x1
 3279 0027 06       		.byte	0x6
 3280 0028 30000000 		.4byte	.LASF0
 3281 002c 03       		.uleb128 0x3
 3282 002d 3C000000 		.4byte	.LASF12
 3283 0031 02       		.byte	0x2
 3284 0032 1D       		.byte	0x1d
 3285 0033 37000000 		.4byte	0x37
 3286 0037 02       		.uleb128 0x2
 3287 0038 01       		.byte	0x1
 3288 0039 08       		.byte	0x8
 3289 003a 2F030000 		.4byte	.LASF1
 3290 003e 02       		.uleb128 0x2
 3291 003f 02       		.byte	0x2
 3292 0040 05       		.byte	0x5
 3293 0041 70030000 		.4byte	.LASF2
 3294 0045 02       		.uleb128 0x2
 3295 0046 02       		.byte	0x2
 3296 0047 07       		.byte	0x7
 3297 0048 71020000 		.4byte	.LASF3
 3298 004c 02       		.uleb128 0x2
 3299 004d 04       		.byte	0x4
 3300 004e 05       		.byte	0x5
 3301 004f B5010000 		.4byte	.LASF4
 3302 0053 02       		.uleb128 0x2
 3303 0054 04       		.byte	0x4
 3304 0055 07       		.byte	0x7
 3305 0056 4D020000 		.4byte	.LASF5
 3306 005a 02       		.uleb128 0x2
 3307 005b 08       		.byte	0x8
 3308 005c 05       		.byte	0x5
 3309 005d 38010000 		.4byte	.LASF6
 3310 0061 02       		.uleb128 0x2
 3311 0062 08       		.byte	0x8
 3312 0063 07       		.byte	0x7
 3313 0064 E6000000 		.4byte	.LASF7
 3314 0068 04       		.uleb128 0x4
 3315 0069 04       		.byte	0x4
 3316 006a 05       		.byte	0x5
 3317 006b 696E7400 		.ascii	"int\000"
 3318 006f 02       		.uleb128 0x2
 3319 0070 04       		.byte	0x4
 3320 0071 07       		.byte	0x7
 3321 0072 33020000 		.4byte	.LASF8
 3322 0076 02       		.uleb128 0x2
 3323 0077 08       		.byte	0x8
 3324 0078 04       		.byte	0x4
 3325 0079 C1020000 		.4byte	.LASF9
 3326 007d 02       		.uleb128 0x2
 3327 007e 04       		.byte	0x4
 3328 007f 07       		.byte	0x7
 3329 0080 B8020000 		.4byte	.LASF10
 3330 0084 02       		.uleb128 0x2
 3331 0085 01       		.byte	0x1
 3332 0086 08       		.byte	0x8
 3333 0087 C9030000 		.4byte	.LASF11
 3334 008b 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 71


 3335 008c 79040000 		.4byte	.LASF13
 3336 0090 03       		.byte	0x3
 3337 0091 18       		.byte	0x18
 3338 0092 2C000000 		.4byte	0x2c
 3339 0096 05       		.uleb128 0x5
 3340 0097 00000000 		.4byte	.LASF17
 3341 009b 01       		.byte	0x1
 3342 009c 37000000 		.4byte	0x37
 3343 00a0 04       		.byte	0x4
 3344 00a1 0D       		.byte	0xd
 3345 00a2 BE000000 		.4byte	0xbe
 3346 00a6 06       		.uleb128 0x6
 3347 00a7 557000   		.ascii	"Up\000"
 3348 00aa 00       		.byte	0
 3349 00ab 07       		.uleb128 0x7
 3350 00ac 04040000 		.4byte	.LASF14
 3351 00b0 01       		.byte	0x1
 3352 00b1 07       		.uleb128 0x7
 3353 00b2 B3020000 		.4byte	.LASF15
 3354 00b6 02       		.byte	0x2
 3355 00b7 07       		.uleb128 0x7
 3356 00b8 93030000 		.4byte	.LASF16
 3357 00bc 03       		.byte	0x3
 3358 00bd 00       		.byte	0
 3359 00be 05       		.uleb128 0x5
 3360 00bf 3D030000 		.4byte	.LASF18
 3361 00c3 01       		.byte	0x1
 3362 00c4 37000000 		.4byte	0x37
 3363 00c8 04       		.byte	0x4
 3364 00c9 0E       		.byte	0xe
 3365 00ca F9000000 		.4byte	0xf9
 3366 00ce 07       		.uleb128 0x7
 3367 00cf 89030000 		.4byte	.LASF19
 3368 00d3 00       		.byte	0
 3369 00d4 07       		.uleb128 0x7
 3370 00d5 E8020000 		.4byte	.LASF20
 3371 00d9 01       		.byte	0x1
 3372 00da 07       		.uleb128 0x7
 3373 00db 4C040000 		.4byte	.LASF21
 3374 00df 02       		.byte	0x2
 3375 00e0 07       		.uleb128 0x7
 3376 00e1 1B010000 		.4byte	.LASF22
 3377 00e5 03       		.byte	0x3
 3378 00e6 07       		.uleb128 0x7
 3379 00e7 CD010000 		.4byte	.LASF23
 3380 00eb 04       		.byte	0x4
 3381 00ec 07       		.uleb128 0x7
 3382 00ed 84020000 		.4byte	.LASF24
 3383 00f1 05       		.byte	0x5
 3384 00f2 07       		.uleb128 0x7
 3385 00f3 1A000000 		.4byte	.LASF25
 3386 00f7 06       		.byte	0x6
 3387 00f8 00       		.byte	0
 3388 00f9 08       		.uleb128 0x8
 3389 00fa 9E010000 		.4byte	.LASF30
 3390 00fe 10       		.byte	0x10
 3391 00ff 04       		.byte	0x4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 72


 3392 0100 10       		.byte	0x10
 3393 0101 36010000 		.4byte	0x136
 3394 0105 09       		.uleb128 0x9
 3395 0106 46000000 		.4byte	.LASF26
 3396 010a 04       		.byte	0x4
 3397 010b 11       		.byte	0x11
 3398 010c BE000000 		.4byte	0xbe
 3399 0110 00       		.byte	0
 3400 0111 09       		.uleb128 0x9
 3401 0112 B6040000 		.4byte	.LASF27
 3402 0116 04       		.byte	0x4
 3403 0117 12       		.byte	0x12
 3404 0118 68000000 		.4byte	0x68
 3405 011c 04       		.byte	0x4
 3406 011d 09       		.uleb128 0x9
 3407 011e BE040000 		.4byte	.LASF28
 3408 0122 04       		.byte	0x4
 3409 0123 13       		.byte	0x13
 3410 0124 68000000 		.4byte	0x68
 3411 0128 08       		.byte	0x8
 3412 0129 09       		.uleb128 0x9
 3413 012a FD000000 		.4byte	.LASF29
 3414 012e 04       		.byte	0x4
 3415 012f 14       		.byte	0x14
 3416 0130 96000000 		.4byte	0x96
 3417 0134 0C       		.byte	0xc
 3418 0135 00       		.byte	0
 3419 0136 03       		.uleb128 0x3
 3420 0137 9E010000 		.4byte	.LASF30
 3421 013b 04       		.byte	0x4
 3422 013c 15       		.byte	0x15
 3423 013d F9000000 		.4byte	0xf9
 3424 0141 08       		.uleb128 0x8
 3425 0142 E0010000 		.4byte	.LASF31
 3426 0146 08       		.byte	0x8
 3427 0147 04       		.byte	0x4
 3428 0148 19       		.byte	0x19
 3429 0149 66010000 		.4byte	0x166
 3430 014d 0A       		.uleb128 0xa
 3431 014e 726F7700 		.ascii	"row\000"
 3432 0152 04       		.byte	0x4
 3433 0153 1B       		.byte	0x1b
 3434 0154 68000000 		.4byte	0x68
 3435 0158 00       		.byte	0
 3436 0159 0A       		.uleb128 0xa
 3437 015a 636F6C00 		.ascii	"col\000"
 3438 015e 04       		.byte	0x4
 3439 015f 1C       		.byte	0x1c
 3440 0160 68000000 		.4byte	0x68
 3441 0164 04       		.byte	0x4
 3442 0165 00       		.byte	0
 3443 0166 0B       		.uleb128 0xb
 3444 0167 2F010000 		.4byte	.LASF32
 3445 016b 01       		.byte	0x1
 3446 016c 54       		.byte	0x54
 3447 016d 00000000 		.4byte	.LFB1
 3448 0171 58000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 73


 3449 0175 01       		.uleb128 0x1
 3450 0176 9C       		.byte	0x9c
 3451 0177 B6010000 		.4byte	0x1b6
 3452 017b 0C       		.uleb128 0xc
 3453 017c 6D617000 		.ascii	"map\000"
 3454 0180 01       		.byte	0x1
 3455 0181 54       		.byte	0x54
 3456 0182 C6010000 		.4byte	0x1c6
 3457 0186 02       		.uleb128 0x2
 3458 0187 91       		.byte	0x91
 3459 0188 6C       		.sleb128 -20
 3460 0189 0D       		.uleb128 0xd
 3461 018a 08000000 		.4byte	.LBB2
 3462 018e 44000000 		.4byte	.LBE2-.LBB2
 3463 0192 0E       		.uleb128 0xe
 3464 0193 6900     		.ascii	"i\000"
 3465 0195 01       		.byte	0x1
 3466 0196 56       		.byte	0x56
 3467 0197 68000000 		.4byte	0x68
 3468 019b 02       		.uleb128 0x2
 3469 019c 91       		.byte	0x91
 3470 019d 74       		.sleb128 -12
 3471 019e 0D       		.uleb128 0xd
 3472 019f 0E000000 		.4byte	.LBB3
 3473 01a3 2C000000 		.4byte	.LBE3-.LBB3
 3474 01a7 0E       		.uleb128 0xe
 3475 01a8 6A00     		.ascii	"j\000"
 3476 01aa 01       		.byte	0x1
 3477 01ab 57       		.byte	0x57
 3478 01ac 68000000 		.4byte	0x68
 3479 01b0 02       		.uleb128 0x2
 3480 01b1 91       		.byte	0x91
 3481 01b2 70       		.sleb128 -16
 3482 01b3 00       		.byte	0
 3483 01b4 00       		.byte	0
 3484 01b5 00       		.byte	0
 3485 01b6 0F       		.uleb128 0xf
 3486 01b7 68000000 		.4byte	0x68
 3487 01bb C6010000 		.4byte	0x1c6
 3488 01bf 10       		.uleb128 0x10
 3489 01c0 7D000000 		.4byte	0x7d
 3490 01c4 12       		.byte	0x12
 3491 01c5 00       		.byte	0
 3492 01c6 11       		.uleb128 0x11
 3493 01c7 04       		.byte	0x4
 3494 01c8 B6010000 		.4byte	0x1b6
 3495 01cc 12       		.uleb128 0x12
 3496 01cd 13030000 		.4byte	.LASF33
 3497 01d1 01       		.byte	0x1
 3498 01d2 5D       		.byte	0x5d
 3499 01d3 00000000 		.4byte	.LFB2
 3500 01d7 60000000 		.4byte	.LFE2-.LFB2
 3501 01db 01       		.uleb128 0x1
 3502 01dc 9C       		.byte	0x9c
 3503 01dd 1C020000 		.4byte	0x21c
 3504 01e1 0C       		.uleb128 0xc
 3505 01e2 6D617000 		.ascii	"map\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 74


 3506 01e6 01       		.byte	0x1
 3507 01e7 5D       		.byte	0x5d
 3508 01e8 C6010000 		.4byte	0x1c6
 3509 01ec 02       		.uleb128 0x2
 3510 01ed 91       		.byte	0x91
 3511 01ee 6C       		.sleb128 -20
 3512 01ef 0D       		.uleb128 0xd
 3513 01f0 08000000 		.4byte	.LBB4
 3514 01f4 4E000000 		.4byte	.LBE4-.LBB4
 3515 01f8 0E       		.uleb128 0xe
 3516 01f9 6900     		.ascii	"i\000"
 3517 01fb 01       		.byte	0x1
 3518 01fc 5F       		.byte	0x5f
 3519 01fd 68000000 		.4byte	0x68
 3520 0201 02       		.uleb128 0x2
 3521 0202 91       		.byte	0x91
 3522 0203 74       		.sleb128 -12
 3523 0204 0D       		.uleb128 0xd
 3524 0205 0E000000 		.4byte	.LBB5
 3525 0209 3C000000 		.4byte	.LBE5-.LBB5
 3526 020d 0E       		.uleb128 0xe
 3527 020e 6A00     		.ascii	"j\000"
 3528 0210 01       		.byte	0x1
 3529 0211 60       		.byte	0x60
 3530 0212 68000000 		.4byte	0x68
 3531 0216 02       		.uleb128 0x2
 3532 0217 91       		.byte	0x91
 3533 0218 70       		.sleb128 -16
 3534 0219 00       		.byte	0
 3535 021a 00       		.byte	0
 3536 021b 00       		.byte	0
 3537 021c 13       		.uleb128 0x13
 3538 021d 24000000 		.4byte	.LASF65
 3539 0221 01       		.byte	0x1
 3540 0222 6B       		.byte	0x6b
 3541 0223 78020000 		.4byte	0x278
 3542 0227 00000000 		.4byte	.LFB3
 3543 022b 56000000 		.4byte	.LFE3-.LFB3
 3544 022f 01       		.uleb128 0x1
 3545 0230 9C       		.byte	0x9c
 3546 0231 78020000 		.4byte	0x278
 3547 0235 0C       		.uleb128 0xc
 3548 0236 7200     		.ascii	"r\000"
 3549 0238 01       		.byte	0x1
 3550 0239 6B       		.byte	0x6b
 3551 023a 68000000 		.4byte	0x68
 3552 023e 02       		.uleb128 0x2
 3553 023f 91       		.byte	0x91
 3554 0240 74       		.sleb128 -12
 3555 0241 0C       		.uleb128 0xc
 3556 0242 6300     		.ascii	"c\000"
 3557 0244 01       		.byte	0x1
 3558 0245 6B       		.byte	0x6b
 3559 0246 68000000 		.4byte	0x68
 3560 024a 02       		.uleb128 0x2
 3561 024b 91       		.byte	0x91
 3562 024c 70       		.sleb128 -16
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 75


 3563 024d 14       		.uleb128 0x14
 3564 024e 1F000000 		.4byte	.LASF34
 3565 0252 01       		.byte	0x1
 3566 0253 6B       		.byte	0x6b
 3567 0254 68000000 		.4byte	0x68
 3568 0258 02       		.uleb128 0x2
 3569 0259 91       		.byte	0x91
 3570 025a 6C       		.sleb128 -20
 3571 025b 14       		.uleb128 0x14
 3572 025c A8040000 		.4byte	.LASF35
 3573 0260 01       		.byte	0x1
 3574 0261 6B       		.byte	0x6b
 3575 0262 68000000 		.4byte	0x68
 3576 0266 02       		.uleb128 0x2
 3577 0267 91       		.byte	0x91
 3578 0268 68       		.sleb128 -24
 3579 0269 0C       		.uleb128 0xc
 3580 026a 6D617000 		.ascii	"map\000"
 3581 026e 01       		.byte	0x1
 3582 026f 6B       		.byte	0x6b
 3583 0270 C6010000 		.4byte	0x1c6
 3584 0274 02       		.uleb128 0x2
 3585 0275 91       		.byte	0x91
 3586 0276 00       		.sleb128 0
 3587 0277 00       		.byte	0
 3588 0278 02       		.uleb128 0x2
 3589 0279 01       		.byte	0x1
 3590 027a 02       		.byte	0x2
 3591 027b 29030000 		.4byte	.LASF36
 3592 027f 0B       		.uleb128 0xb
 3593 0280 11000000 		.4byte	.LASF37
 3594 0284 01       		.byte	0x1
 3595 0285 6F       		.byte	0x6f
 3596 0286 00000000 		.4byte	.LFB4
 3597 028a 4C090000 		.4byte	.LFE4-.LFB4
 3598 028e 01       		.uleb128 0x1
 3599 028f 9C       		.byte	0x9c
 3600 0290 CD040000 		.4byte	0x4cd
 3601 0294 0C       		.uleb128 0xc
 3602 0295 6D617000 		.ascii	"map\000"
 3603 0299 01       		.byte	0x1
 3604 029a 6F       		.byte	0x6f
 3605 029b C6010000 		.4byte	0x1c6
 3606 029f 03       		.uleb128 0x3
 3607 02a0 91       		.byte	0x91
 3608 02a1 BC52     		.sleb128 -5828
 3609 02a3 14       		.uleb128 0x14
 3610 02a4 21010000 		.4byte	.LASF38
 3611 02a8 01       		.byte	0x1
 3612 02a9 6F       		.byte	0x6f
 3613 02aa 41010000 		.4byte	0x141
 3614 02ae 03       		.uleb128 0x3
 3615 02af 91       		.byte	0x91
 3616 02b0 B452     		.sleb128 -5836
 3617 02b2 14       		.uleb128 0x14
 3618 02b3 BE010000 		.4byte	.LASF39
 3619 02b7 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 76


 3620 02b8 6F       		.byte	0x6f
 3621 02b9 41010000 		.4byte	0x141
 3622 02bd 02       		.uleb128 0x2
 3623 02be 91       		.byte	0x91
 3624 02bf 7C       		.sleb128 -4
 3625 02c0 15       		.uleb128 0x15
 3626 02c1 BE030000 		.4byte	.LASF40
 3627 02c5 01       		.byte	0x1
 3628 02c6 71       		.byte	0x71
 3629 02c7 CD040000 		.4byte	0x4cd
 3630 02cb 03       		.uleb128 0x3
 3631 02cc 91       		.byte	0x91
 3632 02cd 9C76     		.sleb128 -1252
 3633 02cf 08       		.uleb128 0x8
 3634 02d0 5D040000 		.4byte	.LASF41
 3635 02d4 0C       		.byte	0xc
 3636 02d5 01       		.byte	0x1
 3637 02d6 78       		.byte	0x78
 3638 02d7 F4020000 		.4byte	0x2f4
 3639 02db 09       		.uleb128 0x9
 3640 02dc B5030000 		.4byte	.LASF42
 3641 02e0 01       		.byte	0x1
 3642 02e1 79       		.byte	0x79
 3643 02e2 41010000 		.4byte	0x141
 3644 02e6 00       		.byte	0
 3645 02e7 09       		.uleb128 0x9
 3646 02e8 F1030000 		.4byte	.LASF43
 3647 02ec 01       		.byte	0x1
 3648 02ed 7A       		.byte	0x7a
 3649 02ee 68000000 		.4byte	0x68
 3650 02f2 08       		.byte	0x8
 3651 02f3 00       		.byte	0
 3652 02f4 0E       		.uleb128 0xe
 3653 02f5 707100   		.ascii	"pq\000"
 3654 02f8 01       		.byte	0x1
 3655 02f9 7D       		.byte	0x7d
 3656 02fa E3040000 		.4byte	0x4e3
 3657 02fe 03       		.uleb128 0x3
 3658 02ff 91       		.byte	0x91
 3659 0300 C05B     		.sleb128 -4672
 3660 0302 15       		.uleb128 0x15
 3661 0303 98020000 		.4byte	.LASF44
 3662 0307 01       		.byte	0x1
 3663 0308 7E       		.byte	0x7e
 3664 0309 68000000 		.4byte	0x68
 3665 030d 02       		.uleb128 0x2
 3666 030e 91       		.byte	0x91
 3667 030f 5C       		.sleb128 -36
 3668 0310 15       		.uleb128 0x15
 3669 0311 11010000 		.4byte	.LASF45
 3670 0315 01       		.byte	0x1
 3671 0316 81       		.byte	0x81
 3672 0317 CD040000 		.4byte	0x4cd
 3673 031b 03       		.uleb128 0x3
 3674 031c 91       		.byte	0x91
 3675 031d CC52     		.sleb128 -5812
 3676 031f 15       		.uleb128 0x15
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 77


 3677 0320 DE000000 		.4byte	.LASF46
 3678 0324 01       		.byte	0x1
 3679 0325 8A       		.byte	0x8a
 3680 0326 68000000 		.4byte	0x68
 3681 032a 02       		.uleb128 0x2
 3682 032b 91       		.byte	0x91
 3683 032c 50       		.sleb128 -48
 3684 032d 15       		.uleb128 0x15
 3685 032e 40020000 		.4byte	.LASF47
 3686 0332 01       		.byte	0x1
 3687 0333 C1       		.byte	0xc1
 3688 0334 68000000 		.4byte	0x68
 3689 0338 02       		.uleb128 0x2
 3690 0339 91       		.byte	0x91
 3691 033a 40       		.sleb128 -64
 3692 033b 15       		.uleb128 0x15
 3693 033c AC030000 		.4byte	.LASF48
 3694 0340 01       		.byte	0x1
 3695 0341 C4       		.byte	0xc4
 3696 0342 F4040000 		.4byte	0x4f4
 3697 0346 03       		.uleb128 0x3
 3698 0347 91       		.byte	0x91
 3699 0348 987F     		.sleb128 -104
 3700 034a 15       		.uleb128 0x15
 3701 034b CD020000 		.4byte	.LASF49
 3702 034f 01       		.byte	0x1
 3703 0350 C5       		.byte	0xc5
 3704 0351 68000000 		.4byte	0x68
 3705 0355 03       		.uleb128 0x3
 3706 0356 91       		.byte	0x91
 3707 0357 BC7F     		.sleb128 -68
 3708 0359 15       		.uleb128 0x15
 3709 035a AA010000 		.4byte	.LASF50
 3710 035e 01       		.byte	0x1
 3711 035f C6       		.byte	0xc6
 3712 0360 68000000 		.4byte	0x68
 3713 0364 03       		.uleb128 0x3
 3714 0365 91       		.byte	0x91
 3715 0366 B87F     		.sleb128 -72
 3716 0368 15       		.uleb128 0x15
 3717 0369 09030000 		.4byte	.LASF51
 3718 036d 01       		.byte	0x1
 3719 036e CD       		.byte	0xcd
 3720 036f 68000000 		.4byte	0x68
 3721 0373 03       		.uleb128 0x3
 3722 0374 91       		.byte	0x91
 3723 0375 B47F     		.sleb128 -76
 3724 0377 16       		.uleb128 0x16
 3725 0378 28000000 		.4byte	.LBB6
 3726 037c 92000000 		.4byte	.LBE6-.LBB6
 3727 0380 A7030000 		.4byte	0x3a7
 3728 0384 0E       		.uleb128 0xe
 3729 0385 6900     		.ascii	"i\000"
 3730 0387 01       		.byte	0x1
 3731 0388 72       		.byte	0x72
 3732 0389 68000000 		.4byte	0x68
 3733 038d 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 78


 3734 038e 91       		.byte	0x91
 3735 038f 64       		.sleb128 -28
 3736 0390 0D       		.uleb128 0xd
 3737 0391 36000000 		.4byte	.LBB7
 3738 0395 60000000 		.4byte	.LBE7-.LBB7
 3739 0399 0E       		.uleb128 0xe
 3740 039a 6A00     		.ascii	"j\000"
 3741 039c 01       		.byte	0x1
 3742 039d 73       		.byte	0x73
 3743 039e 68000000 		.4byte	0x68
 3744 03a2 02       		.uleb128 0x2
 3745 03a3 91       		.byte	0x91
 3746 03a4 60       		.sleb128 -32
 3747 03a5 00       		.byte	0
 3748 03a6 00       		.byte	0
 3749 03a7 16       		.uleb128 0x16
 3750 03a8 C6000000 		.4byte	.LBB8
 3751 03ac 92000000 		.4byte	.LBE8-.LBB8
 3752 03b0 D7030000 		.4byte	0x3d7
 3753 03b4 0E       		.uleb128 0xe
 3754 03b5 6900     		.ascii	"i\000"
 3755 03b7 01       		.byte	0x1
 3756 03b8 84       		.byte	0x84
 3757 03b9 68000000 		.4byte	0x68
 3758 03bd 02       		.uleb128 0x2
 3759 03be 91       		.byte	0x91
 3760 03bf 58       		.sleb128 -40
 3761 03c0 0D       		.uleb128 0xd
 3762 03c1 D4000000 		.4byte	.LBB9
 3763 03c5 60000000 		.4byte	.LBE9-.LBB9
 3764 03c9 0E       		.uleb128 0xe
 3765 03ca 6A00     		.ascii	"j\000"
 3766 03cc 01       		.byte	0x1
 3767 03cd 85       		.byte	0x85
 3768 03ce 68000000 		.4byte	0x68
 3769 03d2 02       		.uleb128 0x2
 3770 03d3 91       		.byte	0x91
 3771 03d4 54       		.sleb128 -44
 3772 03d5 00       		.byte	0
 3773 03d6 00       		.byte	0
 3774 03d7 17       		.uleb128 0x17
 3775 03d8 00000000 		.4byte	.Ldebug_ranges0+0
 3776 03dc 8D040000 		.4byte	0x48d
 3777 03e0 0E       		.uleb128 0xe
 3778 03e1 69647800 		.ascii	"idx\000"
 3779 03e5 01       		.byte	0x1
 3780 03e6 94       		.byte	0x94
 3781 03e7 68000000 		.4byte	0x68
 3782 03eb 02       		.uleb128 0x2
 3783 03ec 91       		.byte	0x91
 3784 03ed 4C       		.sleb128 -52
 3785 03ee 15       		.uleb128 0x15
 3786 03ef F8020000 		.4byte	.LASF52
 3787 03f3 01       		.byte	0x1
 3788 03f4 9A       		.byte	0x9a
 3789 03f5 CF020000 		.4byte	0x2cf
 3790 03f9 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 79


 3791 03fa 91       		.byte	0x91
 3792 03fb C052     		.sleb128 -5824
 3793 03fd 0E       		.uleb128 0xe
 3794 03fe 726F7700 		.ascii	"row\000"
 3795 0402 01       		.byte	0x1
 3796 0403 9E       		.byte	0x9e
 3797 0404 68000000 		.4byte	0x68
 3798 0408 03       		.uleb128 0x3
 3799 0409 91       		.byte	0x91
 3800 040a AC7F     		.sleb128 -84
 3801 040c 0E       		.uleb128 0xe
 3802 040d 636F6C00 		.ascii	"col\000"
 3803 0411 01       		.byte	0x1
 3804 0412 9F       		.byte	0x9f
 3805 0413 68000000 		.4byte	0x68
 3806 0417 03       		.uleb128 0x3
 3807 0418 91       		.byte	0x91
 3808 0419 A87F     		.sleb128 -88
 3809 041b 16       		.uleb128 0x16
 3810 041c 02020000 		.4byte	.LBB11
 3811 0420 90000000 		.4byte	.LBE11-.LBB11
 3812 0424 35040000 		.4byte	0x435
 3813 0428 0E       		.uleb128 0xe
 3814 0429 6900     		.ascii	"i\000"
 3815 042b 01       		.byte	0x1
 3816 042c 95       		.byte	0x95
 3817 042d 68000000 		.4byte	0x68
 3818 0431 02       		.uleb128 0x2
 3819 0432 91       		.byte	0x91
 3820 0433 48       		.sleb128 -56
 3821 0434 00       		.byte	0
 3822 0435 0D       		.uleb128 0xd
 3823 0436 C4030000 		.4byte	.LBB12
 3824 043a 1E020000 		.4byte	.LBE12-.LBB12
 3825 043e 0E       		.uleb128 0xe
 3826 043f 6900     		.ascii	"i\000"
 3827 0441 01       		.byte	0x1
 3828 0442 A8       		.byte	0xa8
 3829 0443 68000000 		.4byte	0x68
 3830 0447 02       		.uleb128 0x2
 3831 0448 91       		.byte	0x91
 3832 0449 44       		.sleb128 -60
 3833 044a 0D       		.uleb128 0xd
 3834 044b D2030000 		.4byte	.LBB13
 3835 044f EA010000 		.4byte	.LBE13-.LBB13
 3836 0453 15       		.uleb128 0x15
 3837 0454 91020000 		.4byte	.LASF53
 3838 0458 01       		.byte	0x1
 3839 0459 A9       		.byte	0xa9
 3840 045a 68000000 		.4byte	0x68
 3841 045e 03       		.uleb128 0x3
 3842 045f 91       		.byte	0x91
 3843 0460 A47F     		.sleb128 -92
 3844 0462 15       		.uleb128 0x15
 3845 0463 97010000 		.4byte	.LASF54
 3846 0467 01       		.byte	0x1
 3847 0468 AA       		.byte	0xaa
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 80


 3848 0469 68000000 		.4byte	0x68
 3849 046d 03       		.uleb128 0x3
 3850 046e 91       		.byte	0x91
 3851 046f A07F     		.sleb128 -96
 3852 0471 0D       		.uleb128 0xd
 3853 0472 80040000 		.4byte	.LBB14
 3854 0476 3C010000 		.4byte	.LBE14-.LBB14
 3855 047a 15       		.uleb128 0x15
 3856 047b 21040000 		.4byte	.LASF55
 3857 047f 01       		.byte	0x1
 3858 0480 AD       		.byte	0xad
 3859 0481 68000000 		.4byte	0x68
 3860 0485 03       		.uleb128 0x3
 3861 0486 91       		.byte	0x91
 3862 0487 9C7F     		.sleb128 -100
 3863 0489 00       		.byte	0
 3864 048a 00       		.byte	0
 3865 048b 00       		.byte	0
 3866 048c 00       		.byte	0
 3867 048d 0D       		.uleb128 0xd
 3868 048e 0A070000 		.4byte	.LBB16
 3869 0492 18020000 		.4byte	.LBE16-.LBB16
 3870 0496 0E       		.uleb128 0xe
 3871 0497 6900     		.ascii	"i\000"
 3872 0499 01       		.byte	0x1
 3873 049a D1       		.byte	0xd1
 3874 049b 68000000 		.4byte	0x68
 3875 049f 03       		.uleb128 0x3
 3876 04a0 91       		.byte	0x91
 3877 04a1 B07F     		.sleb128 -80
 3878 04a3 0D       		.uleb128 0xd
 3879 04a4 1C070000 		.4byte	.LBB17
 3880 04a8 EC010000 		.4byte	.LBE17-.LBB17
 3881 04ac 15       		.uleb128 0x15
 3882 04ad 91020000 		.4byte	.LASF53
 3883 04b1 01       		.byte	0x1
 3884 04b2 D2       		.byte	0xd2
 3885 04b3 68000000 		.4byte	0x68
 3886 04b7 03       		.uleb128 0x3
 3887 04b8 91       		.byte	0x91
 3888 04b9 947F     		.sleb128 -108
 3889 04bb 15       		.uleb128 0x15
 3890 04bc 97010000 		.4byte	.LASF54
 3891 04c0 01       		.byte	0x1
 3892 04c1 D3       		.byte	0xd3
 3893 04c2 68000000 		.4byte	0x68
 3894 04c6 03       		.uleb128 0x3
 3895 04c7 91       		.byte	0x91
 3896 04c8 907F     		.sleb128 -112
 3897 04ca 00       		.byte	0
 3898 04cb 00       		.byte	0
 3899 04cc 00       		.byte	0
 3900 04cd 0F       		.uleb128 0xf
 3901 04ce 68000000 		.4byte	0x68
 3902 04d2 E3040000 		.4byte	0x4e3
 3903 04d6 10       		.uleb128 0x10
 3904 04d7 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 81


 3905 04db 0E       		.byte	0xe
 3906 04dc 10       		.uleb128 0x10
 3907 04dd 7D000000 		.4byte	0x7d
 3908 04e1 12       		.byte	0x12
 3909 04e2 00       		.byte	0
 3910 04e3 0F       		.uleb128 0xf
 3911 04e4 CF020000 		.4byte	0x2cf
 3912 04e8 F4040000 		.4byte	0x4f4
 3913 04ec 18       		.uleb128 0x18
 3914 04ed 7D000000 		.4byte	0x7d
 3915 04f1 1C01     		.2byte	0x11c
 3916 04f3 00       		.byte	0
 3917 04f4 11       		.uleb128 0x11
 3918 04f5 04       		.byte	0x4
 3919 04f6 41010000 		.4byte	0x141
 3920 04fa 0B       		.uleb128 0xb
 3921 04fb 9F020000 		.4byte	.LASF56
 3922 04ff 01       		.byte	0x1
 3923 0500 F2       		.byte	0xf2
 3924 0501 00000000 		.4byte	.LFB5
 3925 0505 38060000 		.4byte	.LFE5-.LFB5
 3926 0509 01       		.uleb128 0x1
 3927 050a 9C       		.byte	0x9c
 3928 050b 81060000 		.4byte	0x681
 3929 050f 0C       		.uleb128 0xc
 3930 0510 6D617000 		.ascii	"map\000"
 3931 0514 01       		.byte	0x1
 3932 0515 F2       		.byte	0xf2
 3933 0516 C6010000 		.4byte	0x1c6
 3934 051a 03       		.uleb128 0x3
 3935 051b 91       		.byte	0x91
 3936 051c B47F     		.sleb128 -76
 3937 051e 14       		.uleb128 0x14
 3938 051f 99030000 		.4byte	.LASF57
 3939 0523 01       		.byte	0x1
 3940 0524 F2       		.byte	0xf2
 3941 0525 68000000 		.4byte	0x68
 3942 0529 03       		.uleb128 0x3
 3943 052a 91       		.byte	0x91
 3944 052b B07F     		.sleb128 -80
 3945 052d 14       		.uleb128 0x14
 3946 052e 6B040000 		.4byte	.LASF58
 3947 0532 01       		.byte	0x1
 3948 0533 F2       		.byte	0xf2
 3949 0534 41010000 		.4byte	0x141
 3950 0538 03       		.uleb128 0x3
 3951 0539 91       		.byte	0x91
 3952 053a A87F     		.sleb128 -88
 3953 053c 14       		.uleb128 0x14
 3954 053d 7A030000 		.4byte	.LASF59
 3955 0541 01       		.byte	0x1
 3956 0542 F2       		.byte	0xf2
 3957 0543 41010000 		.4byte	0x141
 3958 0547 02       		.uleb128 0x2
 3959 0548 91       		.byte	0x91
 3960 0549 00       		.sleb128 0
 3961 054a 15       		.uleb128 0x15
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 82


 3962 054b CD020000 		.4byte	.LASF49
 3963 054f 01       		.byte	0x1
 3964 0550 F3       		.byte	0xf3
 3965 0551 68000000 		.4byte	0x68
 3966 0555 02       		.uleb128 0x2
 3967 0556 91       		.byte	0x91
 3968 0557 74       		.sleb128 -12
 3969 0558 15       		.uleb128 0x15
 3970 0559 AA010000 		.4byte	.LASF50
 3971 055d 01       		.byte	0x1
 3972 055e F4       		.byte	0xf4
 3973 055f 68000000 		.4byte	0x68
 3974 0563 02       		.uleb128 0x2
 3975 0564 91       		.byte	0x91
 3976 0565 70       		.sleb128 -16
 3977 0566 15       		.uleb128 0x15
 3978 0567 A2030000 		.4byte	.LASF60
 3979 056b 01       		.byte	0x1
 3980 056c F5       		.byte	0xf5
 3981 056d 68000000 		.4byte	0x68
 3982 0571 02       		.uleb128 0x2
 3983 0572 91       		.byte	0x91
 3984 0573 6C       		.sleb128 -20
 3985 0574 15       		.uleb128 0x15
 3986 0575 5F020000 		.4byte	.LASF61
 3987 0579 01       		.byte	0x1
 3988 057a F6       		.byte	0xf6
 3989 057b 68000000 		.4byte	0x68
 3990 057f 03       		.uleb128 0x3
 3991 0580 91       		.byte	0x91
 3992 0581 BC7F     		.sleb128 -68
 3993 0583 16       		.uleb128 0x16
 3994 0584 2E000000 		.4byte	.LBB18
 3995 0588 90050000 		.4byte	.LBE18-.LBB18
 3996 058c 69060000 		.4byte	0x669
 3997 0590 15       		.uleb128 0x15
 3998 0591 1C030000 		.4byte	.LASF62
 3999 0595 01       		.byte	0x1
 4000 0596 FC       		.byte	0xfc
 4001 0597 BE000000 		.4byte	0xbe
 4002 059b 02       		.uleb128 0x2
 4003 059c 91       		.byte	0x91
 4004 059d 6B       		.sleb128 -21
 4005 059e 15       		.uleb128 0x15
 4006 059f AD040000 		.4byte	.LASF63
 4007 05a3 01       		.byte	0x1
 4008 05a4 FD       		.byte	0xfd
 4009 05a5 68000000 		.4byte	0x68
 4010 05a9 02       		.uleb128 0x2
 4011 05aa 91       		.byte	0x91
 4012 05ab 64       		.sleb128 -28
 4013 05ac 17       		.uleb128 0x17
 4014 05ad 18000000 		.4byte	.Ldebug_ranges0+0x18
 4015 05b1 DC050000 		.4byte	0x5dc
 4016 05b5 19       		.uleb128 0x19
 4017 05b6 00030000 		.4byte	.LASF64
 4018 05ba 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 83


 4019 05bb 1501     		.2byte	0x115
 4020 05bd 68000000 		.4byte	0x68
 4021 05c1 02       		.uleb128 0x2
 4022 05c2 91       		.byte	0x91
 4023 05c3 60       		.sleb128 -32
 4024 05c4 0D       		.uleb128 0xd
 4025 05c5 06010000 		.4byte	.LBB20
 4026 05c9 58000000 		.4byte	.LBE20-.LBB20
 4027 05cd 1A       		.uleb128 0x1a
 4028 05ce 6900     		.ascii	"i\000"
 4029 05d0 01       		.byte	0x1
 4030 05d1 1701     		.2byte	0x117
 4031 05d3 68000000 		.4byte	0x68
 4032 05d7 02       		.uleb128 0x2
 4033 05d8 91       		.byte	0x91
 4034 05d9 5C       		.sleb128 -36
 4035 05da 00       		.byte	0
 4036 05db 00       		.byte	0
 4037 05dc 17       		.uleb128 0x17
 4038 05dd 30000000 		.4byte	.Ldebug_ranges0+0x30
 4039 05e1 0C060000 		.4byte	0x60c
 4040 05e5 19       		.uleb128 0x19
 4041 05e6 00030000 		.4byte	.LASF64
 4042 05ea 01       		.byte	0x1
 4043 05eb 4401     		.2byte	0x144
 4044 05ed 68000000 		.4byte	0x68
 4045 05f1 02       		.uleb128 0x2
 4046 05f2 91       		.byte	0x91
 4047 05f3 58       		.sleb128 -40
 4048 05f4 0D       		.uleb128 0xd
 4049 05f5 1E020000 		.4byte	.LBB23
 4050 05f9 56000000 		.4byte	.LBE23-.LBB23
 4051 05fd 1A       		.uleb128 0x1a
 4052 05fe 6900     		.ascii	"i\000"
 4053 0600 01       		.byte	0x1
 4054 0601 4601     		.2byte	0x146
 4055 0603 68000000 		.4byte	0x68
 4056 0607 02       		.uleb128 0x2
 4057 0608 91       		.byte	0x91
 4058 0609 54       		.sleb128 -44
 4059 060a 00       		.byte	0
 4060 060b 00       		.byte	0
 4061 060c 17       		.uleb128 0x17
 4062 060d 48000000 		.4byte	.Ldebug_ranges0+0x48
 4063 0611 3C060000 		.4byte	0x63c
 4064 0615 19       		.uleb128 0x19
 4065 0616 00030000 		.4byte	.LASF64
 4066 061a 01       		.byte	0x1
 4067 061b 7601     		.2byte	0x176
 4068 061d 68000000 		.4byte	0x68
 4069 0621 02       		.uleb128 0x2
 4070 0622 91       		.byte	0x91
 4071 0623 50       		.sleb128 -48
 4072 0624 0D       		.uleb128 0xd
 4073 0625 68030000 		.4byte	.LBB26
 4074 0629 58000000 		.4byte	.LBE26-.LBB26
 4075 062d 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 84


 4076 062e 6900     		.ascii	"i\000"
 4077 0630 01       		.byte	0x1
 4078 0631 7801     		.2byte	0x178
 4079 0633 68000000 		.4byte	0x68
 4080 0637 02       		.uleb128 0x2
 4081 0638 91       		.byte	0x91
 4082 0639 4C       		.sleb128 -52
 4083 063a 00       		.byte	0
 4084 063b 00       		.byte	0
 4085 063c 1B       		.uleb128 0x1b
 4086 063d 60000000 		.4byte	.Ldebug_ranges0+0x60
 4087 0641 19       		.uleb128 0x19
 4088 0642 00030000 		.4byte	.LASF64
 4089 0646 01       		.byte	0x1
 4090 0647 A701     		.2byte	0x1a7
 4091 0649 68000000 		.4byte	0x68
 4092 064d 02       		.uleb128 0x2
 4093 064e 91       		.byte	0x91
 4094 064f 48       		.sleb128 -56
 4095 0650 0D       		.uleb128 0xd
 4096 0651 8C040000 		.4byte	.LBB29
 4097 0655 54000000 		.4byte	.LBE29-.LBB29
 4098 0659 1A       		.uleb128 0x1a
 4099 065a 6900     		.ascii	"i\000"
 4100 065c 01       		.byte	0x1
 4101 065d A901     		.2byte	0x1a9
 4102 065f 68000000 		.4byte	0x68
 4103 0663 02       		.uleb128 0x2
 4104 0664 91       		.byte	0x91
 4105 0665 44       		.sleb128 -60
 4106 0666 00       		.byte	0
 4107 0667 00       		.byte	0
 4108 0668 00       		.byte	0
 4109 0669 0D       		.uleb128 0xd
 4110 066a C6050000 		.4byte	.LBB31
 4111 066e 58000000 		.4byte	.LBE31-.LBB31
 4112 0672 1A       		.uleb128 0x1a
 4113 0673 6900     		.ascii	"i\000"
 4114 0675 01       		.byte	0x1
 4115 0676 D501     		.2byte	0x1d5
 4116 0678 68000000 		.4byte	0x68
 4117 067c 02       		.uleb128 0x2
 4118 067d 91       		.byte	0x91
 4119 067e 40       		.sleb128 -64
 4120 067f 00       		.byte	0
 4121 0680 00       		.byte	0
 4122 0681 1C       		.uleb128 0x1c
 4123 0682 04020000 		.4byte	.LASF66
 4124 0686 01       		.byte	0x1
 4125 0687 DE01     		.2byte	0x1de
 4126 0689 8B000000 		.4byte	0x8b
 4127 068d 00000000 		.4byte	.LFB6
 4128 0691 0C010000 		.4byte	.LFE6-.LFB6
 4129 0695 01       		.uleb128 0x1
 4130 0696 9C       		.byte	0x9c
 4131 0697 BA060000 		.4byte	0x6ba
 4132 069b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 85


 4133 069c CD020000 		.4byte	.LASF49
 4134 06a0 01       		.byte	0x1
 4135 06a1 DE01     		.2byte	0x1de
 4136 06a3 68000000 		.4byte	0x68
 4137 06a7 02       		.uleb128 0x2
 4138 06a8 91       		.byte	0x91
 4139 06a9 74       		.sleb128 -12
 4140 06aa 1D       		.uleb128 0x1d
 4141 06ab AA010000 		.4byte	.LASF50
 4142 06af 01       		.byte	0x1
 4143 06b0 DE01     		.2byte	0x1de
 4144 06b2 68000000 		.4byte	0x68
 4145 06b6 02       		.uleb128 0x2
 4146 06b7 91       		.byte	0x91
 4147 06b8 70       		.sleb128 -16
 4148 06b9 00       		.byte	0
 4149 06ba 1E       		.uleb128 0x1e
 4150 06bb D8020000 		.4byte	.LASF67
 4151 06bf 01       		.byte	0x1
 4152 06c0 EF01     		.2byte	0x1ef
 4153 06c2 00000000 		.4byte	.LFB7
 4154 06c6 24010000 		.4byte	.LFE7-.LFB7
 4155 06ca 01       		.uleb128 0x1
 4156 06cb 9C       		.byte	0x9c
 4157 06cc FE060000 		.4byte	0x6fe
 4158 06d0 1D       		.uleb128 0x1d
 4159 06d1 3B040000 		.4byte	.LASF68
 4160 06d5 01       		.byte	0x1
 4161 06d6 EF01     		.2byte	0x1ef
 4162 06d8 96000000 		.4byte	0x96
 4163 06dc 02       		.uleb128 0x2
 4164 06dd 91       		.byte	0x91
 4165 06de 77       		.sleb128 -9
 4166 06df 1D       		.uleb128 0x1d
 4167 06e0 CD020000 		.4byte	.LASF49
 4168 06e4 01       		.byte	0x1
 4169 06e5 EF01     		.2byte	0x1ef
 4170 06e7 68000000 		.4byte	0x68
 4171 06eb 02       		.uleb128 0x2
 4172 06ec 91       		.byte	0x91
 4173 06ed 70       		.sleb128 -16
 4174 06ee 1D       		.uleb128 0x1d
 4175 06ef AA010000 		.4byte	.LASF50
 4176 06f3 01       		.byte	0x1
 4177 06f4 EF01     		.2byte	0x1ef
 4178 06f6 68000000 		.4byte	0x68
 4179 06fa 02       		.uleb128 0x2
 4180 06fb 91       		.byte	0x91
 4181 06fc 6C       		.sleb128 -20
 4182 06fd 00       		.byte	0
 4183 06fe 1C       		.uleb128 0x1c
 4184 06ff 52030000 		.4byte	.LASF69
 4185 0703 01       		.byte	0x1
 4186 0704 2302     		.2byte	0x223
 4187 0706 8B000000 		.4byte	0x8b
 4188 070a 00000000 		.4byte	.LFB8
 4189 070e 9C000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 86


 4190 0712 01       		.uleb128 0x1
 4191 0713 9C       		.byte	0x9c
 4192 0714 37070000 		.4byte	0x737
 4193 0718 1D       		.uleb128 0x1d
 4194 0719 E9010000 		.4byte	.LASF70
 4195 071d 01       		.byte	0x1
 4196 071e 2302     		.2byte	0x223
 4197 0720 68000000 		.4byte	0x68
 4198 0724 02       		.uleb128 0x2
 4199 0725 91       		.byte	0x91
 4200 0726 74       		.sleb128 -12
 4201 0727 1D       		.uleb128 0x1d
 4202 0728 9E040000 		.4byte	.LASF71
 4203 072c 01       		.byte	0x1
 4204 072d 2302     		.2byte	0x223
 4205 072f 68000000 		.4byte	0x68
 4206 0733 02       		.uleb128 0x2
 4207 0734 91       		.byte	0x91
 4208 0735 70       		.sleb128 -16
 4209 0736 00       		.byte	0
 4210 0737 1F       		.uleb128 0x1f
 4211 0738 81040000 		.4byte	.LASF83
 4212 073c 01       		.byte	0x1
 4213 073d 3202     		.2byte	0x232
 4214 073f 8B000000 		.4byte	0x8b
 4215 0743 00000000 		.4byte	.LFB9
 4216 0747 18000000 		.4byte	.LFE9-.LFB9
 4217 074b 01       		.uleb128 0x1
 4218 074c 9C       		.byte	0x9c
 4219 074d 20       		.uleb128 0x20
 4220 074e 67030000 		.4byte	.LASF72
 4221 0752 01       		.byte	0x1
 4222 0753 3602     		.2byte	0x236
 4223 0755 B1070000 		.4byte	0x7b1
 4224 0759 00000000 		.4byte	.LFB10
 4225 075d 78000000 		.4byte	.LFE10-.LFB10
 4226 0761 01       		.uleb128 0x1
 4227 0762 9C       		.byte	0x9c
 4228 0763 B1070000 		.4byte	0x7b1
 4229 0767 21       		.uleb128 0x21
 4230 0768 6D617000 		.ascii	"map\000"
 4231 076c 01       		.byte	0x1
 4232 076d 3602     		.2byte	0x236
 4233 076f C6010000 		.4byte	0x1c6
 4234 0773 02       		.uleb128 0x2
 4235 0774 91       		.byte	0x91
 4236 0775 5C       		.sleb128 -36
 4237 0776 1D       		.uleb128 0x1d
 4238 0777 FA030000 		.4byte	.LASF73
 4239 077b 01       		.byte	0x1
 4240 077c 3602     		.2byte	0x236
 4241 077e C7070000 		.4byte	0x7c7
 4242 0782 02       		.uleb128 0x2
 4243 0783 91       		.byte	0x91
 4244 0784 58       		.sleb128 -40
 4245 0785 21       		.uleb128 0x21
 4246 0786 6900     		.ascii	"i\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 87


 4247 0788 01       		.byte	0x1
 4248 0789 3602     		.2byte	0x236
 4249 078b 68000000 		.4byte	0x68
 4250 078f 02       		.uleb128 0x2
 4251 0790 91       		.byte	0x91
 4252 0791 54       		.sleb128 -44
 4253 0792 19       		.uleb128 0x19
 4254 0793 6B040000 		.4byte	.LASF58
 4255 0797 01       		.byte	0x1
 4256 0798 3802     		.2byte	0x238
 4257 079a 41010000 		.4byte	0x141
 4258 079e 02       		.uleb128 0x2
 4259 079f 91       		.byte	0x91
 4260 07a0 68       		.sleb128 -24
 4261 07a1 19       		.uleb128 0x19
 4262 07a2 7A030000 		.4byte	.LASF59
 4263 07a6 01       		.byte	0x1
 4264 07a7 3802     		.2byte	0x238
 4265 07a9 41010000 		.4byte	0x141
 4266 07ad 02       		.uleb128 0x2
 4267 07ae 91       		.byte	0x91
 4268 07af 60       		.sleb128 -32
 4269 07b0 00       		.byte	0
 4270 07b1 11       		.uleb128 0x11
 4271 07b2 04       		.byte	0x4
 4272 07b3 36010000 		.4byte	0x136
 4273 07b7 0F       		.uleb128 0xf
 4274 07b8 68000000 		.4byte	0x68
 4275 07bc C7070000 		.4byte	0x7c7
 4276 07c0 10       		.uleb128 0x10
 4277 07c1 7D000000 		.4byte	0x7d
 4278 07c5 01       		.byte	0x1
 4279 07c6 00       		.byte	0
 4280 07c7 11       		.uleb128 0x11
 4281 07c8 04       		.byte	0x4
 4282 07c9 B7070000 		.4byte	0x7b7
 4283 07cd 0F       		.uleb128 0xf
 4284 07ce 36010000 		.4byte	0x136
 4285 07d2 DE070000 		.4byte	0x7de
 4286 07d6 18       		.uleb128 0x18
 4287 07d7 7D000000 		.4byte	0x7d
 4288 07db 1C01     		.2byte	0x11c
 4289 07dd 00       		.byte	0
 4290 07de 15       		.uleb128 0x15
 4291 07df F3010000 		.4byte	.LASF74
 4292 07e3 01       		.byte	0x1
 4293 07e4 18       		.byte	0x18
 4294 07e5 CD070000 		.4byte	0x7cd
 4295 07e9 05       		.uleb128 0x5
 4296 07ea 03       		.byte	0x3
 4297 07eb 04000000 		.4byte	instructionsList
 4298 07ef 15       		.uleb128 0x15
 4299 07f0 99030000 		.4byte	.LASF57
 4300 07f4 01       		.byte	0x1
 4301 07f5 19       		.byte	0x19
 4302 07f6 68000000 		.4byte	0x68
 4303 07fa 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 88


 4304 07fb 03       		.byte	0x3
 4305 07fc D4110000 		.4byte	numSteps
 4306 0800 22       		.uleb128 0x22
 4307 0801 6D617000 		.ascii	"map\000"
 4308 0805 01       		.byte	0x1
 4309 0806 22       		.byte	0x22
 4310 0807 CD040000 		.4byte	0x4cd
 4311 080b 05       		.uleb128 0x5
 4312 080c 03       		.byte	0x3
 4313 080d 00000000 		.4byte	map
 4314 0811 0F       		.uleb128 0xf
 4315 0812 68000000 		.4byte	0x68
 4316 0816 27080000 		.4byte	0x827
 4317 081a 10       		.uleb128 0x10
 4318 081b 7D000000 		.4byte	0x7d
 4319 081f 04       		.byte	0x4
 4320 0820 10       		.uleb128 0x10
 4321 0821 7D000000 		.4byte	0x7d
 4322 0825 01       		.byte	0x1
 4323 0826 00       		.byte	0
 4324 0827 23       		.uleb128 0x23
 4325 0828 FA030000 		.4byte	.LASF73
 4326 082c 01       		.byte	0x1
 4327 082d 4B       		.byte	0x4b
 4328 082e 11080000 		.4byte	0x811
 4329 0832 05       		.uleb128 0x5
 4330 0833 03       		.byte	0x3
 4331 0834 00000000 		.4byte	food_list
 4332 0838 23       		.uleb128 0x23
 4333 0839 D8030000 		.4byte	.LASF75
 4334 083d 01       		.byte	0x1
 4335 083e 16       		.byte	0x16
 4336 083f 96000000 		.4byte	0x96
 4337 0843 05       		.uleb128 0x5
 4338 0844 03       		.byte	0x3
 4339 0845 00000000 		.4byte	previousRobotOrientation
 4340 0849 23       		.uleb128 0x23
 4341 084a 09040000 		.4byte	.LASF76
 4342 084e 01       		.byte	0x1
 4343 084f 16       		.byte	0x16
 4344 0850 96000000 		.4byte	0x96
 4345 0854 05       		.uleb128 0x5
 4346 0855 03       		.byte	0x3
 4347 0856 00000000 		.4byte	currentRobotOrientation
 4348 085a 23       		.uleb128 0x23
 4349 085b CE030000 		.4byte	.LASF77
 4350 085f 01       		.byte	0x1
 4351 0860 49       		.byte	0x49
 4352 0861 B7070000 		.4byte	0x7b7
 4353 0865 05       		.uleb128 0x5
 4354 0866 03       		.byte	0x3
 4355 0867 00000000 		.4byte	start_pos
 4356 086b 0F       		.uleb128 0xf
 4357 086c 68000000 		.4byte	0x68
 4358 0870 82080000 		.4byte	0x882
 4359 0874 18       		.uleb128 0x18
 4360 0875 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 89


 4361 0879 1C01     		.2byte	0x11c
 4362 087b 10       		.uleb128 0x10
 4363 087c 7D000000 		.4byte	0x7d
 4364 0880 01       		.byte	0x1
 4365 0881 00       		.byte	0
 4366 0882 23       		.uleb128 0x23
 4367 0883 17020000 		.4byte	.LASF78
 4368 0887 01       		.byte	0x1
 4369 0888 67       		.byte	0x67
 4370 0889 6B080000 		.4byte	0x86b
 4371 088d 05       		.uleb128 0x5
 4372 088e 03       		.byte	0x3
 4373 088f 00000000 		.4byte	list_of_optimal_coordinates
 4374 0893 0F       		.uleb128 0xf
 4375 0894 41010000 		.4byte	0x141
 4376 0898 A3080000 		.4byte	0x8a3
 4377 089c 10       		.uleb128 0x10
 4378 089d 7D000000 		.4byte	0x7d
 4379 08a1 03       		.byte	0x3
 4380 08a2 00       		.byte	0
 4381 08a3 23       		.uleb128 0x23
 4382 08a4 98040000 		.4byte	.LASF79
 4383 08a8 01       		.byte	0x1
 4384 08a9 69       		.byte	0x69
 4385 08aa 93080000 		.4byte	0x893
 4386 08ae 05       		.uleb128 0x5
 4387 08af 03       		.byte	0x3
 4388 08b0 00000000 		.4byte	moves
 4389 08b4 23       		.uleb128 0x23
 4390 08b5 BE040000 		.4byte	.LASF28
 4391 08b9 01       		.byte	0x1
 4392 08ba EF       		.byte	0xef
 4393 08bb 68000000 		.4byte	0x68
 4394 08bf 05       		.uleb128 0x5
 4395 08c0 03       		.byte	0x3
 4396 08c1 00000000 		.4byte	ignoreR
 4397 08c5 23       		.uleb128 0x23
 4398 08c6 B6040000 		.4byte	.LASF27
 4399 08ca 01       		.byte	0x1
 4400 08cb EF       		.byte	0xef
 4401 08cc 68000000 		.4byte	0x68
 4402 08d0 05       		.uleb128 0x5
 4403 08d1 03       		.byte	0x3
 4404 08d2 00000000 		.4byte	ignoreL
 4405 08d6 00       		.byte	0
 4406              		.section	.debug_abbrev,"",%progbits
 4407              	.Ldebug_abbrev0:
 4408 0000 01       		.uleb128 0x1
 4409 0001 11       		.uleb128 0x11
 4410 0002 01       		.byte	0x1
 4411 0003 25       		.uleb128 0x25
 4412 0004 0E       		.uleb128 0xe
 4413 0005 13       		.uleb128 0x13
 4414 0006 0B       		.uleb128 0xb
 4415 0007 03       		.uleb128 0x3
 4416 0008 0E       		.uleb128 0xe
 4417 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 90


 4418 000a 0E       		.uleb128 0xe
 4419 000b 55       		.uleb128 0x55
 4420 000c 17       		.uleb128 0x17
 4421 000d 11       		.uleb128 0x11
 4422 000e 01       		.uleb128 0x1
 4423 000f 10       		.uleb128 0x10
 4424 0010 17       		.uleb128 0x17
 4425 0011 00       		.byte	0
 4426 0012 00       		.byte	0
 4427 0013 02       		.uleb128 0x2
 4428 0014 24       		.uleb128 0x24
 4429 0015 00       		.byte	0
 4430 0016 0B       		.uleb128 0xb
 4431 0017 0B       		.uleb128 0xb
 4432 0018 3E       		.uleb128 0x3e
 4433 0019 0B       		.uleb128 0xb
 4434 001a 03       		.uleb128 0x3
 4435 001b 0E       		.uleb128 0xe
 4436 001c 00       		.byte	0
 4437 001d 00       		.byte	0
 4438 001e 03       		.uleb128 0x3
 4439 001f 16       		.uleb128 0x16
 4440 0020 00       		.byte	0
 4441 0021 03       		.uleb128 0x3
 4442 0022 0E       		.uleb128 0xe
 4443 0023 3A       		.uleb128 0x3a
 4444 0024 0B       		.uleb128 0xb
 4445 0025 3B       		.uleb128 0x3b
 4446 0026 0B       		.uleb128 0xb
 4447 0027 49       		.uleb128 0x49
 4448 0028 13       		.uleb128 0x13
 4449 0029 00       		.byte	0
 4450 002a 00       		.byte	0
 4451 002b 04       		.uleb128 0x4
 4452 002c 24       		.uleb128 0x24
 4453 002d 00       		.byte	0
 4454 002e 0B       		.uleb128 0xb
 4455 002f 0B       		.uleb128 0xb
 4456 0030 3E       		.uleb128 0x3e
 4457 0031 0B       		.uleb128 0xb
 4458 0032 03       		.uleb128 0x3
 4459 0033 08       		.uleb128 0x8
 4460 0034 00       		.byte	0
 4461 0035 00       		.byte	0
 4462 0036 05       		.uleb128 0x5
 4463 0037 04       		.uleb128 0x4
 4464 0038 01       		.byte	0x1
 4465 0039 03       		.uleb128 0x3
 4466 003a 0E       		.uleb128 0xe
 4467 003b 0B       		.uleb128 0xb
 4468 003c 0B       		.uleb128 0xb
 4469 003d 49       		.uleb128 0x49
 4470 003e 13       		.uleb128 0x13
 4471 003f 3A       		.uleb128 0x3a
 4472 0040 0B       		.uleb128 0xb
 4473 0041 3B       		.uleb128 0x3b
 4474 0042 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 91


 4475 0043 01       		.uleb128 0x1
 4476 0044 13       		.uleb128 0x13
 4477 0045 00       		.byte	0
 4478 0046 00       		.byte	0
 4479 0047 06       		.uleb128 0x6
 4480 0048 28       		.uleb128 0x28
 4481 0049 00       		.byte	0
 4482 004a 03       		.uleb128 0x3
 4483 004b 08       		.uleb128 0x8
 4484 004c 1C       		.uleb128 0x1c
 4485 004d 0B       		.uleb128 0xb
 4486 004e 00       		.byte	0
 4487 004f 00       		.byte	0
 4488 0050 07       		.uleb128 0x7
 4489 0051 28       		.uleb128 0x28
 4490 0052 00       		.byte	0
 4491 0053 03       		.uleb128 0x3
 4492 0054 0E       		.uleb128 0xe
 4493 0055 1C       		.uleb128 0x1c
 4494 0056 0B       		.uleb128 0xb
 4495 0057 00       		.byte	0
 4496 0058 00       		.byte	0
 4497 0059 08       		.uleb128 0x8
 4498 005a 13       		.uleb128 0x13
 4499 005b 01       		.byte	0x1
 4500 005c 03       		.uleb128 0x3
 4501 005d 0E       		.uleb128 0xe
 4502 005e 0B       		.uleb128 0xb
 4503 005f 0B       		.uleb128 0xb
 4504 0060 3A       		.uleb128 0x3a
 4505 0061 0B       		.uleb128 0xb
 4506 0062 3B       		.uleb128 0x3b
 4507 0063 0B       		.uleb128 0xb
 4508 0064 01       		.uleb128 0x1
 4509 0065 13       		.uleb128 0x13
 4510 0066 00       		.byte	0
 4511 0067 00       		.byte	0
 4512 0068 09       		.uleb128 0x9
 4513 0069 0D       		.uleb128 0xd
 4514 006a 00       		.byte	0
 4515 006b 03       		.uleb128 0x3
 4516 006c 0E       		.uleb128 0xe
 4517 006d 3A       		.uleb128 0x3a
 4518 006e 0B       		.uleb128 0xb
 4519 006f 3B       		.uleb128 0x3b
 4520 0070 0B       		.uleb128 0xb
 4521 0071 49       		.uleb128 0x49
 4522 0072 13       		.uleb128 0x13
 4523 0073 38       		.uleb128 0x38
 4524 0074 0B       		.uleb128 0xb
 4525 0075 00       		.byte	0
 4526 0076 00       		.byte	0
 4527 0077 0A       		.uleb128 0xa
 4528 0078 0D       		.uleb128 0xd
 4529 0079 00       		.byte	0
 4530 007a 03       		.uleb128 0x3
 4531 007b 08       		.uleb128 0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 92


 4532 007c 3A       		.uleb128 0x3a
 4533 007d 0B       		.uleb128 0xb
 4534 007e 3B       		.uleb128 0x3b
 4535 007f 0B       		.uleb128 0xb
 4536 0080 49       		.uleb128 0x49
 4537 0081 13       		.uleb128 0x13
 4538 0082 38       		.uleb128 0x38
 4539 0083 0B       		.uleb128 0xb
 4540 0084 00       		.byte	0
 4541 0085 00       		.byte	0
 4542 0086 0B       		.uleb128 0xb
 4543 0087 2E       		.uleb128 0x2e
 4544 0088 01       		.byte	0x1
 4545 0089 3F       		.uleb128 0x3f
 4546 008a 19       		.uleb128 0x19
 4547 008b 03       		.uleb128 0x3
 4548 008c 0E       		.uleb128 0xe
 4549 008d 3A       		.uleb128 0x3a
 4550 008e 0B       		.uleb128 0xb
 4551 008f 3B       		.uleb128 0x3b
 4552 0090 0B       		.uleb128 0xb
 4553 0091 27       		.uleb128 0x27
 4554 0092 19       		.uleb128 0x19
 4555 0093 11       		.uleb128 0x11
 4556 0094 01       		.uleb128 0x1
 4557 0095 12       		.uleb128 0x12
 4558 0096 06       		.uleb128 0x6
 4559 0097 40       		.uleb128 0x40
 4560 0098 18       		.uleb128 0x18
 4561 0099 9642     		.uleb128 0x2116
 4562 009b 19       		.uleb128 0x19
 4563 009c 01       		.uleb128 0x1
 4564 009d 13       		.uleb128 0x13
 4565 009e 00       		.byte	0
 4566 009f 00       		.byte	0
 4567 00a0 0C       		.uleb128 0xc
 4568 00a1 05       		.uleb128 0x5
 4569 00a2 00       		.byte	0
 4570 00a3 03       		.uleb128 0x3
 4571 00a4 08       		.uleb128 0x8
 4572 00a5 3A       		.uleb128 0x3a
 4573 00a6 0B       		.uleb128 0xb
 4574 00a7 3B       		.uleb128 0x3b
 4575 00a8 0B       		.uleb128 0xb
 4576 00a9 49       		.uleb128 0x49
 4577 00aa 13       		.uleb128 0x13
 4578 00ab 02       		.uleb128 0x2
 4579 00ac 18       		.uleb128 0x18
 4580 00ad 00       		.byte	0
 4581 00ae 00       		.byte	0
 4582 00af 0D       		.uleb128 0xd
 4583 00b0 0B       		.uleb128 0xb
 4584 00b1 01       		.byte	0x1
 4585 00b2 11       		.uleb128 0x11
 4586 00b3 01       		.uleb128 0x1
 4587 00b4 12       		.uleb128 0x12
 4588 00b5 06       		.uleb128 0x6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 93


 4589 00b6 00       		.byte	0
 4590 00b7 00       		.byte	0
 4591 00b8 0E       		.uleb128 0xe
 4592 00b9 34       		.uleb128 0x34
 4593 00ba 00       		.byte	0
 4594 00bb 03       		.uleb128 0x3
 4595 00bc 08       		.uleb128 0x8
 4596 00bd 3A       		.uleb128 0x3a
 4597 00be 0B       		.uleb128 0xb
 4598 00bf 3B       		.uleb128 0x3b
 4599 00c0 0B       		.uleb128 0xb
 4600 00c1 49       		.uleb128 0x49
 4601 00c2 13       		.uleb128 0x13
 4602 00c3 02       		.uleb128 0x2
 4603 00c4 18       		.uleb128 0x18
 4604 00c5 00       		.byte	0
 4605 00c6 00       		.byte	0
 4606 00c7 0F       		.uleb128 0xf
 4607 00c8 01       		.uleb128 0x1
 4608 00c9 01       		.byte	0x1
 4609 00ca 49       		.uleb128 0x49
 4610 00cb 13       		.uleb128 0x13
 4611 00cc 01       		.uleb128 0x1
 4612 00cd 13       		.uleb128 0x13
 4613 00ce 00       		.byte	0
 4614 00cf 00       		.byte	0
 4615 00d0 10       		.uleb128 0x10
 4616 00d1 21       		.uleb128 0x21
 4617 00d2 00       		.byte	0
 4618 00d3 49       		.uleb128 0x49
 4619 00d4 13       		.uleb128 0x13
 4620 00d5 2F       		.uleb128 0x2f
 4621 00d6 0B       		.uleb128 0xb
 4622 00d7 00       		.byte	0
 4623 00d8 00       		.byte	0
 4624 00d9 11       		.uleb128 0x11
 4625 00da 0F       		.uleb128 0xf
 4626 00db 00       		.byte	0
 4627 00dc 0B       		.uleb128 0xb
 4628 00dd 0B       		.uleb128 0xb
 4629 00de 49       		.uleb128 0x49
 4630 00df 13       		.uleb128 0x13
 4631 00e0 00       		.byte	0
 4632 00e1 00       		.byte	0
 4633 00e2 12       		.uleb128 0x12
 4634 00e3 2E       		.uleb128 0x2e
 4635 00e4 01       		.byte	0x1
 4636 00e5 3F       		.uleb128 0x3f
 4637 00e6 19       		.uleb128 0x19
 4638 00e7 03       		.uleb128 0x3
 4639 00e8 0E       		.uleb128 0xe
 4640 00e9 3A       		.uleb128 0x3a
 4641 00ea 0B       		.uleb128 0xb
 4642 00eb 3B       		.uleb128 0x3b
 4643 00ec 0B       		.uleb128 0xb
 4644 00ed 27       		.uleb128 0x27
 4645 00ee 19       		.uleb128 0x19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 94


 4646 00ef 11       		.uleb128 0x11
 4647 00f0 01       		.uleb128 0x1
 4648 00f1 12       		.uleb128 0x12
 4649 00f2 06       		.uleb128 0x6
 4650 00f3 40       		.uleb128 0x40
 4651 00f4 18       		.uleb128 0x18
 4652 00f5 9742     		.uleb128 0x2117
 4653 00f7 19       		.uleb128 0x19
 4654 00f8 01       		.uleb128 0x1
 4655 00f9 13       		.uleb128 0x13
 4656 00fa 00       		.byte	0
 4657 00fb 00       		.byte	0
 4658 00fc 13       		.uleb128 0x13
 4659 00fd 2E       		.uleb128 0x2e
 4660 00fe 01       		.byte	0x1
 4661 00ff 3F       		.uleb128 0x3f
 4662 0100 19       		.uleb128 0x19
 4663 0101 03       		.uleb128 0x3
 4664 0102 0E       		.uleb128 0xe
 4665 0103 3A       		.uleb128 0x3a
 4666 0104 0B       		.uleb128 0xb
 4667 0105 3B       		.uleb128 0x3b
 4668 0106 0B       		.uleb128 0xb
 4669 0107 27       		.uleb128 0x27
 4670 0108 19       		.uleb128 0x19
 4671 0109 49       		.uleb128 0x49
 4672 010a 13       		.uleb128 0x13
 4673 010b 11       		.uleb128 0x11
 4674 010c 01       		.uleb128 0x1
 4675 010d 12       		.uleb128 0x12
 4676 010e 06       		.uleb128 0x6
 4677 010f 40       		.uleb128 0x40
 4678 0110 18       		.uleb128 0x18
 4679 0111 9742     		.uleb128 0x2117
 4680 0113 19       		.uleb128 0x19
 4681 0114 01       		.uleb128 0x1
 4682 0115 13       		.uleb128 0x13
 4683 0116 00       		.byte	0
 4684 0117 00       		.byte	0
 4685 0118 14       		.uleb128 0x14
 4686 0119 05       		.uleb128 0x5
 4687 011a 00       		.byte	0
 4688 011b 03       		.uleb128 0x3
 4689 011c 0E       		.uleb128 0xe
 4690 011d 3A       		.uleb128 0x3a
 4691 011e 0B       		.uleb128 0xb
 4692 011f 3B       		.uleb128 0x3b
 4693 0120 0B       		.uleb128 0xb
 4694 0121 49       		.uleb128 0x49
 4695 0122 13       		.uleb128 0x13
 4696 0123 02       		.uleb128 0x2
 4697 0124 18       		.uleb128 0x18
 4698 0125 00       		.byte	0
 4699 0126 00       		.byte	0
 4700 0127 15       		.uleb128 0x15
 4701 0128 34       		.uleb128 0x34
 4702 0129 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 95


 4703 012a 03       		.uleb128 0x3
 4704 012b 0E       		.uleb128 0xe
 4705 012c 3A       		.uleb128 0x3a
 4706 012d 0B       		.uleb128 0xb
 4707 012e 3B       		.uleb128 0x3b
 4708 012f 0B       		.uleb128 0xb
 4709 0130 49       		.uleb128 0x49
 4710 0131 13       		.uleb128 0x13
 4711 0132 02       		.uleb128 0x2
 4712 0133 18       		.uleb128 0x18
 4713 0134 00       		.byte	0
 4714 0135 00       		.byte	0
 4715 0136 16       		.uleb128 0x16
 4716 0137 0B       		.uleb128 0xb
 4717 0138 01       		.byte	0x1
 4718 0139 11       		.uleb128 0x11
 4719 013a 01       		.uleb128 0x1
 4720 013b 12       		.uleb128 0x12
 4721 013c 06       		.uleb128 0x6
 4722 013d 01       		.uleb128 0x1
 4723 013e 13       		.uleb128 0x13
 4724 013f 00       		.byte	0
 4725 0140 00       		.byte	0
 4726 0141 17       		.uleb128 0x17
 4727 0142 0B       		.uleb128 0xb
 4728 0143 01       		.byte	0x1
 4729 0144 55       		.uleb128 0x55
 4730 0145 17       		.uleb128 0x17
 4731 0146 01       		.uleb128 0x1
 4732 0147 13       		.uleb128 0x13
 4733 0148 00       		.byte	0
 4734 0149 00       		.byte	0
 4735 014a 18       		.uleb128 0x18
 4736 014b 21       		.uleb128 0x21
 4737 014c 00       		.byte	0
 4738 014d 49       		.uleb128 0x49
 4739 014e 13       		.uleb128 0x13
 4740 014f 2F       		.uleb128 0x2f
 4741 0150 05       		.uleb128 0x5
 4742 0151 00       		.byte	0
 4743 0152 00       		.byte	0
 4744 0153 19       		.uleb128 0x19
 4745 0154 34       		.uleb128 0x34
 4746 0155 00       		.byte	0
 4747 0156 03       		.uleb128 0x3
 4748 0157 0E       		.uleb128 0xe
 4749 0158 3A       		.uleb128 0x3a
 4750 0159 0B       		.uleb128 0xb
 4751 015a 3B       		.uleb128 0x3b
 4752 015b 05       		.uleb128 0x5
 4753 015c 49       		.uleb128 0x49
 4754 015d 13       		.uleb128 0x13
 4755 015e 02       		.uleb128 0x2
 4756 015f 18       		.uleb128 0x18
 4757 0160 00       		.byte	0
 4758 0161 00       		.byte	0
 4759 0162 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 96


 4760 0163 34       		.uleb128 0x34
 4761 0164 00       		.byte	0
 4762 0165 03       		.uleb128 0x3
 4763 0166 08       		.uleb128 0x8
 4764 0167 3A       		.uleb128 0x3a
 4765 0168 0B       		.uleb128 0xb
 4766 0169 3B       		.uleb128 0x3b
 4767 016a 05       		.uleb128 0x5
 4768 016b 49       		.uleb128 0x49
 4769 016c 13       		.uleb128 0x13
 4770 016d 02       		.uleb128 0x2
 4771 016e 18       		.uleb128 0x18
 4772 016f 00       		.byte	0
 4773 0170 00       		.byte	0
 4774 0171 1B       		.uleb128 0x1b
 4775 0172 0B       		.uleb128 0xb
 4776 0173 01       		.byte	0x1
 4777 0174 55       		.uleb128 0x55
 4778 0175 17       		.uleb128 0x17
 4779 0176 00       		.byte	0
 4780 0177 00       		.byte	0
 4781 0178 1C       		.uleb128 0x1c
 4782 0179 2E       		.uleb128 0x2e
 4783 017a 01       		.byte	0x1
 4784 017b 3F       		.uleb128 0x3f
 4785 017c 19       		.uleb128 0x19
 4786 017d 03       		.uleb128 0x3
 4787 017e 0E       		.uleb128 0xe
 4788 017f 3A       		.uleb128 0x3a
 4789 0180 0B       		.uleb128 0xb
 4790 0181 3B       		.uleb128 0x3b
 4791 0182 05       		.uleb128 0x5
 4792 0183 27       		.uleb128 0x27
 4793 0184 19       		.uleb128 0x19
 4794 0185 49       		.uleb128 0x49
 4795 0186 13       		.uleb128 0x13
 4796 0187 11       		.uleb128 0x11
 4797 0188 01       		.uleb128 0x1
 4798 0189 12       		.uleb128 0x12
 4799 018a 06       		.uleb128 0x6
 4800 018b 40       		.uleb128 0x40
 4801 018c 18       		.uleb128 0x18
 4802 018d 9742     		.uleb128 0x2117
 4803 018f 19       		.uleb128 0x19
 4804 0190 01       		.uleb128 0x1
 4805 0191 13       		.uleb128 0x13
 4806 0192 00       		.byte	0
 4807 0193 00       		.byte	0
 4808 0194 1D       		.uleb128 0x1d
 4809 0195 05       		.uleb128 0x5
 4810 0196 00       		.byte	0
 4811 0197 03       		.uleb128 0x3
 4812 0198 0E       		.uleb128 0xe
 4813 0199 3A       		.uleb128 0x3a
 4814 019a 0B       		.uleb128 0xb
 4815 019b 3B       		.uleb128 0x3b
 4816 019c 05       		.uleb128 0x5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 97


 4817 019d 49       		.uleb128 0x49
 4818 019e 13       		.uleb128 0x13
 4819 019f 02       		.uleb128 0x2
 4820 01a0 18       		.uleb128 0x18
 4821 01a1 00       		.byte	0
 4822 01a2 00       		.byte	0
 4823 01a3 1E       		.uleb128 0x1e
 4824 01a4 2E       		.uleb128 0x2e
 4825 01a5 01       		.byte	0x1
 4826 01a6 3F       		.uleb128 0x3f
 4827 01a7 19       		.uleb128 0x19
 4828 01a8 03       		.uleb128 0x3
 4829 01a9 0E       		.uleb128 0xe
 4830 01aa 3A       		.uleb128 0x3a
 4831 01ab 0B       		.uleb128 0xb
 4832 01ac 3B       		.uleb128 0x3b
 4833 01ad 05       		.uleb128 0x5
 4834 01ae 27       		.uleb128 0x27
 4835 01af 19       		.uleb128 0x19
 4836 01b0 11       		.uleb128 0x11
 4837 01b1 01       		.uleb128 0x1
 4838 01b2 12       		.uleb128 0x12
 4839 01b3 06       		.uleb128 0x6
 4840 01b4 40       		.uleb128 0x40
 4841 01b5 18       		.uleb128 0x18
 4842 01b6 9742     		.uleb128 0x2117
 4843 01b8 19       		.uleb128 0x19
 4844 01b9 01       		.uleb128 0x1
 4845 01ba 13       		.uleb128 0x13
 4846 01bb 00       		.byte	0
 4847 01bc 00       		.byte	0
 4848 01bd 1F       		.uleb128 0x1f
 4849 01be 2E       		.uleb128 0x2e
 4850 01bf 00       		.byte	0
 4851 01c0 3F       		.uleb128 0x3f
 4852 01c1 19       		.uleb128 0x19
 4853 01c2 03       		.uleb128 0x3
 4854 01c3 0E       		.uleb128 0xe
 4855 01c4 3A       		.uleb128 0x3a
 4856 01c5 0B       		.uleb128 0xb
 4857 01c6 3B       		.uleb128 0x3b
 4858 01c7 05       		.uleb128 0x5
 4859 01c8 49       		.uleb128 0x49
 4860 01c9 13       		.uleb128 0x13
 4861 01ca 11       		.uleb128 0x11
 4862 01cb 01       		.uleb128 0x1
 4863 01cc 12       		.uleb128 0x12
 4864 01cd 06       		.uleb128 0x6
 4865 01ce 40       		.uleb128 0x40
 4866 01cf 18       		.uleb128 0x18
 4867 01d0 9742     		.uleb128 0x2117
 4868 01d2 19       		.uleb128 0x19
 4869 01d3 00       		.byte	0
 4870 01d4 00       		.byte	0
 4871 01d5 20       		.uleb128 0x20
 4872 01d6 2E       		.uleb128 0x2e
 4873 01d7 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 98


 4874 01d8 3F       		.uleb128 0x3f
 4875 01d9 19       		.uleb128 0x19
 4876 01da 03       		.uleb128 0x3
 4877 01db 0E       		.uleb128 0xe
 4878 01dc 3A       		.uleb128 0x3a
 4879 01dd 0B       		.uleb128 0xb
 4880 01de 3B       		.uleb128 0x3b
 4881 01df 05       		.uleb128 0x5
 4882 01e0 27       		.uleb128 0x27
 4883 01e1 19       		.uleb128 0x19
 4884 01e2 49       		.uleb128 0x49
 4885 01e3 13       		.uleb128 0x13
 4886 01e4 11       		.uleb128 0x11
 4887 01e5 01       		.uleb128 0x1
 4888 01e6 12       		.uleb128 0x12
 4889 01e7 06       		.uleb128 0x6
 4890 01e8 40       		.uleb128 0x40
 4891 01e9 18       		.uleb128 0x18
 4892 01ea 9642     		.uleb128 0x2116
 4893 01ec 19       		.uleb128 0x19
 4894 01ed 01       		.uleb128 0x1
 4895 01ee 13       		.uleb128 0x13
 4896 01ef 00       		.byte	0
 4897 01f0 00       		.byte	0
 4898 01f1 21       		.uleb128 0x21
 4899 01f2 05       		.uleb128 0x5
 4900 01f3 00       		.byte	0
 4901 01f4 03       		.uleb128 0x3
 4902 01f5 08       		.uleb128 0x8
 4903 01f6 3A       		.uleb128 0x3a
 4904 01f7 0B       		.uleb128 0xb
 4905 01f8 3B       		.uleb128 0x3b
 4906 01f9 05       		.uleb128 0x5
 4907 01fa 49       		.uleb128 0x49
 4908 01fb 13       		.uleb128 0x13
 4909 01fc 02       		.uleb128 0x2
 4910 01fd 18       		.uleb128 0x18
 4911 01fe 00       		.byte	0
 4912 01ff 00       		.byte	0
 4913 0200 22       		.uleb128 0x22
 4914 0201 34       		.uleb128 0x34
 4915 0202 00       		.byte	0
 4916 0203 03       		.uleb128 0x3
 4917 0204 08       		.uleb128 0x8
 4918 0205 3A       		.uleb128 0x3a
 4919 0206 0B       		.uleb128 0xb
 4920 0207 3B       		.uleb128 0x3b
 4921 0208 0B       		.uleb128 0xb
 4922 0209 49       		.uleb128 0x49
 4923 020a 13       		.uleb128 0x13
 4924 020b 3F       		.uleb128 0x3f
 4925 020c 19       		.uleb128 0x19
 4926 020d 02       		.uleb128 0x2
 4927 020e 18       		.uleb128 0x18
 4928 020f 00       		.byte	0
 4929 0210 00       		.byte	0
 4930 0211 23       		.uleb128 0x23
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 99


 4931 0212 34       		.uleb128 0x34
 4932 0213 00       		.byte	0
 4933 0214 03       		.uleb128 0x3
 4934 0215 0E       		.uleb128 0xe
 4935 0216 3A       		.uleb128 0x3a
 4936 0217 0B       		.uleb128 0xb
 4937 0218 3B       		.uleb128 0x3b
 4938 0219 0B       		.uleb128 0xb
 4939 021a 49       		.uleb128 0x49
 4940 021b 13       		.uleb128 0x13
 4941 021c 3F       		.uleb128 0x3f
 4942 021d 19       		.uleb128 0x19
 4943 021e 02       		.uleb128 0x2
 4944 021f 18       		.uleb128 0x18
 4945 0220 00       		.byte	0
 4946 0221 00       		.byte	0
 4947 0222 00       		.byte	0
 4948              		.section	.debug_aranges,"",%progbits
 4949 0000 64000000 		.4byte	0x64
 4950 0004 0200     		.2byte	0x2
 4951 0006 00000000 		.4byte	.Ldebug_info0
 4952 000a 04       		.byte	0x4
 4953 000b 00       		.byte	0
 4954 000c 0000     		.2byte	0
 4955 000e 0000     		.2byte	0
 4956 0010 00000000 		.4byte	.LFB1
 4957 0014 58000000 		.4byte	.LFE1-.LFB1
 4958 0018 00000000 		.4byte	.LFB2
 4959 001c 60000000 		.4byte	.LFE2-.LFB2
 4960 0020 00000000 		.4byte	.LFB3
 4961 0024 56000000 		.4byte	.LFE3-.LFB3
 4962 0028 00000000 		.4byte	.LFB4
 4963 002c 4C090000 		.4byte	.LFE4-.LFB4
 4964 0030 00000000 		.4byte	.LFB5
 4965 0034 38060000 		.4byte	.LFE5-.LFB5
 4966 0038 00000000 		.4byte	.LFB6
 4967 003c 0C010000 		.4byte	.LFE6-.LFB6
 4968 0040 00000000 		.4byte	.LFB7
 4969 0044 24010000 		.4byte	.LFE7-.LFB7
 4970 0048 00000000 		.4byte	.LFB8
 4971 004c 9C000000 		.4byte	.LFE8-.LFB8
 4972 0050 00000000 		.4byte	.LFB9
 4973 0054 18000000 		.4byte	.LFE9-.LFB9
 4974 0058 00000000 		.4byte	.LFB10
 4975 005c 78000000 		.4byte	.LFE10-.LFB10
 4976 0060 00000000 		.4byte	0
 4977 0064 00000000 		.4byte	0
 4978              		.section	.debug_ranges,"",%progbits
 4979              	.Ldebug_ranges0:
 4980 0000 F6010000 		.4byte	.LBB10
 4981 0004 E2050000 		.4byte	.LBE10
 4982 0008 F4050000 		.4byte	.LBB15
 4983 000c F6050000 		.4byte	.LBE15
 4984 0010 00000000 		.4byte	0
 4985 0014 00000000 		.4byte	0
 4986 0018 02010000 		.4byte	.LBB19
 4987 001c 70010000 		.4byte	.LBE19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 100


 4988 0020 72010000 		.4byte	.LBB21
 4989 0024 88010000 		.4byte	.LBE21
 4990 0028 00000000 		.4byte	0
 4991 002c 00000000 		.4byte	0
 4992 0030 1A020000 		.4byte	.LBB22
 4993 0034 86020000 		.4byte	.LBE22
 4994 0038 88020000 		.4byte	.LBB24
 4995 003c 9E020000 		.4byte	.LBE24
 4996 0040 00000000 		.4byte	0
 4997 0044 00000000 		.4byte	0
 4998 0048 64030000 		.4byte	.LBB25
 4999 004c D2030000 		.4byte	.LBE25
 5000 0050 D4030000 		.4byte	.LBB27
 5001 0054 EA030000 		.4byte	.LBE27
 5002 0058 00000000 		.4byte	0
 5003 005c 00000000 		.4byte	0
 5004 0060 88040000 		.4byte	.LBB28
 5005 0064 F2040000 		.4byte	.LBE28
 5006 0068 F4040000 		.4byte	.LBB30
 5007 006c 0A050000 		.4byte	.LBE30
 5008 0070 00000000 		.4byte	0
 5009 0074 00000000 		.4byte	0
 5010 0078 00000000 		.4byte	.LFB1
 5011 007c 58000000 		.4byte	.LFE1
 5012 0080 00000000 		.4byte	.LFB2
 5013 0084 60000000 		.4byte	.LFE2
 5014 0088 00000000 		.4byte	.LFB3
 5015 008c 56000000 		.4byte	.LFE3
 5016 0090 00000000 		.4byte	.LFB4
 5017 0094 4C090000 		.4byte	.LFE4
 5018 0098 00000000 		.4byte	.LFB5
 5019 009c 38060000 		.4byte	.LFE5
 5020 00a0 00000000 		.4byte	.LFB6
 5021 00a4 0C010000 		.4byte	.LFE6
 5022 00a8 00000000 		.4byte	.LFB7
 5023 00ac 24010000 		.4byte	.LFE7
 5024 00b0 00000000 		.4byte	.LFB8
 5025 00b4 9C000000 		.4byte	.LFE8
 5026 00b8 00000000 		.4byte	.LFB9
 5027 00bc 18000000 		.4byte	.LFE9
 5028 00c0 00000000 		.4byte	.LFB10
 5029 00c4 78000000 		.4byte	.LFE10
 5030 00c8 00000000 		.4byte	0
 5031 00cc 00000000 		.4byte	0
 5032              		.section	.debug_line,"",%progbits
 5033              	.Ldebug_line0:
 5034 0000 D8040000 		.section	.debug_str,"MS",%progbits,1
 5034      02003201 
 5034      00000201 
 5034      FB0E0D00 
 5034      01010101 
 5035              	.LASF17:
 5036 0000 4F726965 		.ascii	"OrientationState\000"
 5036      6E746174 
 5036      696F6E53 
 5036      74617465 
 5036      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 101


 5037              	.LASF37:
 5038 0011 64696A6B 		.ascii	"dijkstra\000"
 5038      73747261 
 5038      00
 5039              	.LASF25:
 5040 001a 536B6970 		.ascii	"Skip\000"
 5040      00
 5041              	.LASF34:
 5042 001f 726F7773 		.ascii	"rows\000"
 5042      00
 5043              	.LASF65:
 5044 0024 69735661 		.ascii	"isValidMove\000"
 5044      6C69644D 
 5044      6F766500 
 5045              	.LASF0:
 5046 0030 7369676E 		.ascii	"signed char\000"
 5046      65642063 
 5046      68617200 
 5047              	.LASF12:
 5048 003c 5F5F7569 		.ascii	"__uint8_t\000"
 5048      6E74385F 
 5048      7400
 5049              	.LASF26:
 5050 0046 64697265 		.ascii	"direction\000"
 5050      6374696F 
 5050      6E00
 5051              	.LASF80:
 5052 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5052      43313120 
 5052      352E342E 
 5052      31203230 
 5052      31363036 
 5053 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5053      20726576 
 5053      6973696F 
 5053      6E203233 
 5053      37373135 
 5054 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5054      66756E63 
 5054      74696F6E 
 5054      2D736563 
 5054      74696F6E 
 5055              	.LASF46:
 5056 00de 73746570 		.ascii	"stepNum\000"
 5056      4E756D00 
 5057              	.LASF7:
 5058 00e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 5058      206C6F6E 
 5058      6720756E 
 5058      7369676E 
 5058      65642069 
 5059              	.LASF29:
 5060 00fd 65787065 		.ascii	"expectedOrientation\000"
 5060      63746564 
 5060      4F726965 
 5060      6E746174 
 5060      696F6E00 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 102


 5061              	.LASF45:
 5062 0111 64697374 		.ascii	"distances\000"
 5062      616E6365 
 5062      7300
 5063              	.LASF22:
 5064 011b 75547572 		.ascii	"uTurn\000"
 5064      6E00
 5065              	.LASF38:
 5066 0121 73746172 		.ascii	"startlocation\000"
 5066      746C6F63 
 5066      6174696F 
 5066      6E00
 5067              	.LASF32:
 5068 012f 7072696E 		.ascii	"printMap\000"
 5068      744D6170 
 5068      00
 5069              	.LASF6:
 5070 0138 6C6F6E67 		.ascii	"long long int\000"
 5070      206C6F6E 
 5070      6720696E 
 5070      7400
 5071              	.LASF82:
 5072 0146 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 5072      6F63756D 
 5072      656E7473 
 5072      5C476974 
 5072      4875625C 
 5073 0175 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 5073      635F636F 
 5073      64655F62 
 5073      6173655C 
 5073      43533330 
 5074              	.LASF54:
 5075 0197 6E657743 		.ascii	"newCol\000"
 5075      6F6C00
 5076              	.LASF30:
 5077 019e 496E7374 		.ascii	"Instruction\000"
 5077      72756374 
 5077      696F6E00 
 5078              	.LASF50:
 5079 01aa 63757272 		.ascii	"currentCol\000"
 5079      656E7443 
 5079      6F6C00
 5080              	.LASF4:
 5081 01b5 6C6F6E67 		.ascii	"long int\000"
 5081      20696E74 
 5081      00
 5082              	.LASF39:
 5083 01be 74617267 		.ascii	"targetlocation\000"
 5083      65746C6F 
 5083      63617469 
 5083      6F6E00
 5084              	.LASF23:
 5085 01cd 466F7277 		.ascii	"ForwardUntilTarget\000"
 5085      61726455 
 5085      6E74696C 
 5085      54617267 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 103


 5085      657400
 5086              	.LASF31:
 5087 01e0 4C6F6361 		.ascii	"Location\000"
 5087      74696F6E 
 5087      00
 5088              	.LASF70:
 5089 01e9 74617267 		.ascii	"targetRow\000"
 5089      6574526F 
 5089      7700
 5090              	.LASF74:
 5091 01f3 696E7374 		.ascii	"instructionsList\000"
 5091      72756374 
 5091      696F6E73 
 5091      4C697374 
 5091      00
 5092              	.LASF66:
 5093 0204 63686563 		.ascii	"checkPathDirection\000"
 5093      6B506174 
 5093      68446972 
 5093      65637469 
 5093      6F6E00
 5094              	.LASF78:
 5095 0217 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 5095      5F6F665F 
 5095      6F707469 
 5095      6D616C5F 
 5095      636F6F72 
 5096              	.LASF8:
 5097 0233 756E7369 		.ascii	"unsigned int\000"
 5097      676E6564 
 5097      20696E74 
 5097      00
 5098              	.LASF47:
 5099 0240 73686F72 		.ascii	"shortestDist\000"
 5099      74657374 
 5099      44697374 
 5099      00
 5100              	.LASF5:
 5101 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 5101      20756E73 
 5101      69676E65 
 5101      6420696E 
 5101      7400
 5102              	.LASF61:
 5103 025f 74617267 		.ascii	"targetOrientation\000"
 5103      65744F72 
 5103      69656E74 
 5103      6174696F 
 5103      6E00
 5104              	.LASF3:
 5105 0271 73686F72 		.ascii	"short unsigned int\000"
 5105      7420756E 
 5105      7369676E 
 5105      65642069 
 5105      6E7400
 5106              	.LASF24:
 5107 0284 53746F70 		.ascii	"StopAtTarget\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 104


 5107      41745461 
 5107      72676574 
 5107      00
 5108              	.LASF53:
 5109 0291 6E657752 		.ascii	"newRow\000"
 5109      6F7700
 5110              	.LASF44:
 5111 0298 70715369 		.ascii	"pqSize\000"
 5111      7A6500
 5112              	.LASF56:
 5113 029f 67657450 		.ascii	"getPathInstructions\000"
 5113      61746849 
 5113      6E737472 
 5113      75637469 
 5113      6F6E7300 
 5114              	.LASF15:
 5115 02b3 4C656674 		.ascii	"Left\000"
 5115      00
 5116              	.LASF10:
 5117 02b8 73697A65 		.ascii	"sizetype\000"
 5117      74797065 
 5117      00
 5118              	.LASF9:
 5119 02c1 6C6F6E67 		.ascii	"long double\000"
 5119      20646F75 
 5119      626C6500 
 5120              	.LASF49:
 5121 02cd 63757272 		.ascii	"currentRow\000"
 5121      656E7452 
 5121      6F7700
 5122              	.LASF67:
 5123 02d8 63686563 		.ascii	"checkIgnoreTurn\000"
 5123      6B49676E 
 5123      6F726554 
 5123      75726E00 
 5124              	.LASF20:
 5125 02e8 77616974 		.ascii	"waitForLeftTurn\000"
 5125      466F724C 
 5125      65667454 
 5125      75726E00 
 5126              	.LASF52:
 5127 02f8 63757272 		.ascii	"current\000"
 5127      656E7400 
 5128              	.LASF64:
 5129 0300 61745461 		.ascii	"atTarget\000"
 5129      72676574 
 5129      00
 5130              	.LASF51:
 5131 0309 70617468 		.ascii	"pathIndex\000"
 5131      496E6465 
 5131      7800
 5132              	.LASF33:
 5133 0313 636C6561 		.ascii	"clearMap\000"
 5133      724D6170 
 5133      00
 5134              	.LASF62:
 5135 031c 6E657744 		.ascii	"newDirection\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 105


 5135      69726563 
 5135      74696F6E 
 5135      00
 5136              	.LASF36:
 5137 0329 5F426F6F 		.ascii	"_Bool\000"
 5137      6C00
 5138              	.LASF1:
 5139 032f 756E7369 		.ascii	"unsigned char\000"
 5139      676E6564 
 5139      20636861 
 5139      7200
 5140              	.LASF18:
 5141 033d 496E7374 		.ascii	"InstructionDirection\000"
 5141      72756374 
 5141      696F6E44 
 5141      69726563 
 5141      74696F6E 
 5142              	.LASF69:
 5143 0352 67657454 		.ascii	"getTargetOrientation\000"
 5143      61726765 
 5143      744F7269 
 5143      656E7461 
 5143      74696F6E 
 5144              	.LASF72:
 5145 0367 66696E64 		.ascii	"findPath\000"
 5145      50617468 
 5145      00
 5146              	.LASF2:
 5147 0370 73686F72 		.ascii	"short int\000"
 5147      7420696E 
 5147      7400
 5148              	.LASF59:
 5149 037a 74617267 		.ascii	"targetLocation\000"
 5149      65744C6F 
 5149      63617469 
 5149      6F6E00
 5150              	.LASF19:
 5151 0389 476F466F 		.ascii	"GoForward\000"
 5151      72776172 
 5151      6400
 5152              	.LASF16:
 5153 0393 52696768 		.ascii	"Right\000"
 5153      7400
 5154              	.LASF57:
 5155 0399 6E756D53 		.ascii	"numSteps\000"
 5155      74657073 
 5155      00
 5156              	.LASF60:
 5157 03a2 6C697374 		.ascii	"listIndex\000"
 5157      496E6465 
 5157      7800
 5158              	.LASF48:
 5159 03ac 72657453 		.ascii	"retSteps\000"
 5159      74657073 
 5159      00
 5160              	.LASF42:
 5161 03b5 6C6F6361 		.ascii	"location\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 106


 5161      74696F6E 
 5161      00
 5162              	.LASF40:
 5163 03be 76697369 		.ascii	"visitedMap\000"
 5163      7465644D 
 5163      617000
 5164              	.LASF11:
 5165 03c9 63686172 		.ascii	"char\000"
 5165      00
 5166              	.LASF77:
 5167 03ce 73746172 		.ascii	"start_pos\000"
 5167      745F706F 
 5167      7300
 5168              	.LASF75:
 5169 03d8 70726576 		.ascii	"previousRobotOrientation\000"
 5169      696F7573 
 5169      526F626F 
 5169      744F7269 
 5169      656E7461 
 5170              	.LASF43:
 5171 03f1 64697374 		.ascii	"distance\000"
 5171      616E6365 
 5171      00
 5172              	.LASF73:
 5173 03fa 666F6F64 		.ascii	"food_list\000"
 5173      5F6C6973 
 5173      7400
 5174              	.LASF14:
 5175 0404 446F776E 		.ascii	"Down\000"
 5175      00
 5176              	.LASF76:
 5177 0409 63757272 		.ascii	"currentRobotOrientation\000"
 5177      656E7452 
 5177      6F626F74 
 5177      4F726965 
 5177      6E746174 
 5178              	.LASF55:
 5179 0421 6E657744 		.ascii	"newDistance\000"
 5179      69737461 
 5179      6E636500 
 5180              	.LASF81:
 5181 042d 70617468 		.ascii	"pathfinding.c\000"
 5181      66696E64 
 5181      696E672E 
 5181      6300
 5182              	.LASF68:
 5183 043b 726F626F 		.ascii	"robotOrientation\000"
 5183      744F7269 
 5183      656E7461 
 5183      74696F6E 
 5183      00
 5184              	.LASF21:
 5185 044c 77616974 		.ascii	"waitForRightTurn\000"
 5185      466F7252 
 5185      69676874 
 5185      5475726E 
 5185      00
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccuntbTa.s 			page 107


 5186              	.LASF41:
 5187 045d 5072696F 		.ascii	"PriorityQueue\000"
 5187      72697479 
 5187      51756575 
 5187      6500
 5188              	.LASF58:
 5189 046b 73746172 		.ascii	"startLocation\000"
 5189      744C6F63 
 5189      6174696F 
 5189      6E00
 5190              	.LASF13:
 5191 0479 75696E74 		.ascii	"uint8_t\000"
 5191      385F7400 
 5192              	.LASF83:
 5193 0481 696E7374 		.ascii	"instructionsListLength\000"
 5193      72756374 
 5193      696F6E73 
 5193      4C697374 
 5193      4C656E67 
 5194              	.LASF79:
 5195 0498 6D6F7665 		.ascii	"moves\000"
 5195      7300
 5196              	.LASF71:
 5197 049e 74617267 		.ascii	"targetCol\000"
 5197      6574436F 
 5197      6C00
 5198              	.LASF35:
 5199 04a8 636F6C73 		.ascii	"cols\000"
 5199      00
 5200              	.LASF63:
 5201 04ad 6E657874 		.ascii	"nextStep\000"
 5201      53746570 
 5201      00
 5202              	.LASF27:
 5203 04b6 69676E6F 		.ascii	"ignoreL\000"
 5203      72654C00 
 5204              	.LASF28:
 5205 04be 69676E6F 		.ascii	"ignoreR\000"
 5205      72655200 
 5206              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
