ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pathfinding.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	previousRobotOrientation,1,1
  20              		.global	currentRobotOrientation
  21              		.data
  22              		.type	currentRobotOrientation, %object
  23              		.size	currentRobotOrientation, 1
  24              	currentRobotOrientation:
  25 0000 03       		.byte	3
  26              		.bss
  27              		.align	2
  28              	instructionsList:
  29 0000 00000000 		.space	4560
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.align	2
  31              	numSteps:
  32 11d0 00000000 		.space	4
  33              		.global	map
  34              		.data
  35 0001 000000   		.align	2
  36              		.type	map, %object
  37              		.size	map, 1140
  38              	map:
  39 0004 01000000 		.word	1
  40 0008 01000000 		.word	1
  41 000c 01000000 		.word	1
  42 0010 01000000 		.word	1
  43 0014 01000000 		.word	1
  44 0018 01000000 		.word	1
  45 001c 01000000 		.word	1
  46 0020 01000000 		.word	1
  47 0024 01000000 		.word	1
  48 0028 01000000 		.word	1
  49 002c 01000000 		.word	1
  50 0030 01000000 		.word	1
  51 0034 01000000 		.word	1
  52 0038 01000000 		.word	1
  53 003c 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 2


  54 0040 01000000 		.word	1
  55 0044 01000000 		.word	1
  56 0048 01000000 		.word	1
  57 004c 01000000 		.word	1
  58 0050 01000000 		.word	1
  59 0054 00000000 		.word	0
  60 0058 01000000 		.word	1
  61 005c 00000000 		.word	0
  62 0060 00000000 		.word	0
  63 0064 00000000 		.word	0
  64 0068 00000000 		.word	0
  65 006c 00000000 		.word	0
  66 0070 00000000 		.word	0
  67 0074 00000000 		.word	0
  68 0078 00000000 		.word	0
  69 007c 00000000 		.word	0
  70 0080 00000000 		.word	0
  71 0084 00000000 		.word	0
  72 0088 00000000 		.word	0
  73 008c 00000000 		.word	0
  74 0090 00000000 		.word	0
  75 0094 00000000 		.word	0
  76 0098 01000000 		.word	1
  77 009c 01000000 		.word	1
  78 00a0 00000000 		.word	0
  79 00a4 01000000 		.word	1
  80 00a8 00000000 		.word	0
  81 00ac 01000000 		.word	1
  82 00b0 01000000 		.word	1
  83 00b4 01000000 		.word	1
  84 00b8 01000000 		.word	1
  85 00bc 01000000 		.word	1
  86 00c0 00000000 		.word	0
  87 00c4 01000000 		.word	1
  88 00c8 01000000 		.word	1
  89 00cc 01000000 		.word	1
  90 00d0 00000000 		.word	0
  91 00d4 01000000 		.word	1
  92 00d8 01000000 		.word	1
  93 00dc 01000000 		.word	1
  94 00e0 00000000 		.word	0
  95 00e4 01000000 		.word	1
  96 00e8 01000000 		.word	1
  97 00ec 00000000 		.word	0
  98 00f0 00000000 		.word	0
  99 00f4 00000000 		.word	0
 100 00f8 01000000 		.word	1
 101 00fc 00000000 		.word	0
 102 0100 00000000 		.word	0
 103 0104 00000000 		.word	0
 104 0108 01000000 		.word	1
 105 010c 00000000 		.word	0
 106 0110 00000000 		.word	0
 107 0114 00000000 		.word	0
 108 0118 00000000 		.word	0
 109 011c 00000000 		.word	0
 110 0120 00000000 		.word	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 3


 111 0124 00000000 		.word	0
 112 0128 01000000 		.word	1
 113 012c 00000000 		.word	0
 114 0130 01000000 		.word	1
 115 0134 01000000 		.word	1
 116 0138 01000000 		.word	1
 117 013c 01000000 		.word	1
 118 0140 00000000 		.word	0
 119 0144 01000000 		.word	1
 120 0148 00000000 		.word	0
 121 014c 01000000 		.word	1
 122 0150 00000000 		.word	0
 123 0154 01000000 		.word	1
 124 0158 01000000 		.word	1
 125 015c 01000000 		.word	1
 126 0160 00000000 		.word	0
 127 0164 01000000 		.word	1
 128 0168 00000000 		.word	0
 129 016c 01000000 		.word	1
 130 0170 01000000 		.word	1
 131 0174 01000000 		.word	1
 132 0178 00000000 		.word	0
 133 017c 01000000 		.word	1
 134 0180 01000000 		.word	1
 135 0184 00000000 		.word	0
 136 0188 00000000 		.word	0
 137 018c 00000000 		.word	0
 138 0190 01000000 		.word	1
 139 0194 00000000 		.word	0
 140 0198 01000000 		.word	1
 141 019c 00000000 		.word	0
 142 01a0 00000000 		.word	0
 143 01a4 00000000 		.word	0
 144 01a8 01000000 		.word	1
 145 01ac 00000000 		.word	0
 146 01b0 01000000 		.word	1
 147 01b4 00000000 		.word	0
 148 01b8 00000000 		.word	0
 149 01bc 00000000 		.word	0
 150 01c0 00000000 		.word	0
 151 01c4 00000000 		.word	0
 152 01c8 01000000 		.word	1
 153 01cc 01000000 		.word	1
 154 01d0 00000000 		.word	0
 155 01d4 01000000 		.word	1
 156 01d8 01000000 		.word	1
 157 01dc 01000000 		.word	1
 158 01e0 00000000 		.word	0
 159 01e4 01000000 		.word	1
 160 01e8 00000000 		.word	0
 161 01ec 01000000 		.word	1
 162 01f0 00000000 		.word	0
 163 01f4 01000000 		.word	1
 164 01f8 00000000 		.word	0
 165 01fc 01000000 		.word	1
 166 0200 00000000 		.word	0
 167 0204 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 4


 168 0208 01000000 		.word	1
 169 020c 01000000 		.word	1
 170 0210 00000000 		.word	0
 171 0214 01000000 		.word	1
 172 0218 01000000 		.word	1
 173 021c 00000000 		.word	0
 174 0220 01000000 		.word	1
 175 0224 00000000 		.word	0
 176 0228 01000000 		.word	1
 177 022c 00000000 		.word	0
 178 0230 00000000 		.word	0
 179 0234 00000000 		.word	0
 180 0238 01000000 		.word	1
 181 023c 00000000 		.word	0
 182 0240 01000000 		.word	1
 183 0244 00000000 		.word	0
 184 0248 01000000 		.word	1
 185 024c 00000000 		.word	0
 186 0250 01000000 		.word	1
 187 0254 00000000 		.word	0
 188 0258 00000000 		.word	0
 189 025c 00000000 		.word	0
 190 0260 01000000 		.word	1
 191 0264 01000000 		.word	1
 192 0268 00000000 		.word	0
 193 026c 01000000 		.word	1
 194 0270 00000000 		.word	0
 195 0274 01000000 		.word	1
 196 0278 00000000 		.word	0
 197 027c 01000000 		.word	1
 198 0280 01000000 		.word	1
 199 0284 01000000 		.word	1
 200 0288 00000000 		.word	0
 201 028c 01000000 		.word	1
 202 0290 00000000 		.word	0
 203 0294 01000000 		.word	1
 204 0298 00000000 		.word	0
 205 029c 01000000 		.word	1
 206 02a0 00000000 		.word	0
 207 02a4 01000000 		.word	1
 208 02a8 01000000 		.word	1
 209 02ac 01000000 		.word	1
 210 02b0 01000000 		.word	1
 211 02b4 00000000 		.word	0
 212 02b8 00000000 		.word	0
 213 02bc 00000000 		.word	0
 214 02c0 01000000 		.word	1
 215 02c4 00000000 		.word	0
 216 02c8 01000000 		.word	1
 217 02cc 00000000 		.word	0
 218 02d0 00000000 		.word	0
 219 02d4 00000000 		.word	0
 220 02d8 01000000 		.word	1
 221 02dc 00000000 		.word	0
 222 02e0 00000000 		.word	0
 223 02e4 00000000 		.word	0
 224 02e8 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 5


 225 02ec 00000000 		.word	0
 226 02f0 00000000 		.word	0
 227 02f4 00000000 		.word	0
 228 02f8 01000000 		.word	1
 229 02fc 01000000 		.word	1
 230 0300 01000000 		.word	1
 231 0304 01000000 		.word	1
 232 0308 00000000 		.word	0
 233 030c 01000000 		.word	1
 234 0310 00000000 		.word	0
 235 0314 01000000 		.word	1
 236 0318 01000000 		.word	1
 237 031c 01000000 		.word	1
 238 0320 01000000 		.word	1
 239 0324 01000000 		.word	1
 240 0328 01000000 		.word	1
 241 032c 01000000 		.word	1
 242 0330 01000000 		.word	1
 243 0334 01000000 		.word	1
 244 0338 01000000 		.word	1
 245 033c 01000000 		.word	1
 246 0340 00000000 		.word	0
 247 0344 01000000 		.word	1
 248 0348 01000000 		.word	1
 249 034c 00000000 		.word	0
 250 0350 00000000 		.word	0
 251 0354 00000000 		.word	0
 252 0358 00000000 		.word	0
 253 035c 00000000 		.word	0
 254 0360 00000000 		.word	0
 255 0364 00000000 		.word	0
 256 0368 00000000 		.word	0
 257 036c 00000000 		.word	0
 258 0370 00000000 		.word	0
 259 0374 00000000 		.word	0
 260 0378 00000000 		.word	0
 261 037c 00000000 		.word	0
 262 0380 00000000 		.word	0
 263 0384 00000000 		.word	0
 264 0388 00000000 		.word	0
 265 038c 00000000 		.word	0
 266 0390 01000000 		.word	1
 267 0394 01000000 		.word	1
 268 0398 00000000 		.word	0
 269 039c 01000000 		.word	1
 270 03a0 01000000 		.word	1
 271 03a4 01000000 		.word	1
 272 03a8 01000000 		.word	1
 273 03ac 01000000 		.word	1
 274 03b0 01000000 		.word	1
 275 03b4 01000000 		.word	1
 276 03b8 01000000 		.word	1
 277 03bc 01000000 		.word	1
 278 03c0 01000000 		.word	1
 279 03c4 01000000 		.word	1
 280 03c8 00000000 		.word	0
 281 03cc 01000000 		.word	1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 6


 282 03d0 01000000 		.word	1
 283 03d4 01000000 		.word	1
 284 03d8 01000000 		.word	1
 285 03dc 01000000 		.word	1
 286 03e0 01000000 		.word	1
 287 03e4 00000000 		.word	0
 288 03e8 00000000 		.word	0
 289 03ec 00000000 		.word	0
 290 03f0 00000000 		.word	0
 291 03f4 00000000 		.word	0
 292 03f8 00000000 		.word	0
 293 03fc 00000000 		.word	0
 294 0400 01000000 		.word	1
 295 0404 00000000 		.word	0
 296 0408 00000000 		.word	0
 297 040c 00000000 		.word	0
 298 0410 00000000 		.word	0
 299 0414 00000000 		.word	0
 300 0418 00000000 		.word	0
 301 041c 00000000 		.word	0
 302 0420 00000000 		.word	0
 303 0424 00000000 		.word	0
 304 0428 01000000 		.word	1
 305 042c 01000000 		.word	1
 306 0430 01000000 		.word	1
 307 0434 01000000 		.word	1
 308 0438 01000000 		.word	1
 309 043c 01000000 		.word	1
 310 0440 01000000 		.word	1
 311 0444 01000000 		.word	1
 312 0448 01000000 		.word	1
 313 044c 01000000 		.word	1
 314 0450 01000000 		.word	1
 315 0454 01000000 		.word	1
 316 0458 01000000 		.word	1
 317 045c 01000000 		.word	1
 318 0460 01000000 		.word	1
 319 0464 01000000 		.word	1
 320 0468 01000000 		.word	1
 321 046c 01000000 		.word	1
 322 0470 01000000 		.word	1
 323 0474 01000000 		.word	1
 324              		.global	start_pos
 325              		.align	2
 326              		.type	start_pos, %object
 327              		.size	start_pos, 8
 328              	start_pos:
 329 0478 01000000 		.word	1
 330 047c 03000000 		.word	3
 331              		.global	food_list
 332              		.align	2
 333              		.type	food_list, %object
 334              		.size	food_list, 40
 335              	food_list:
 336 0480 03000000 		.word	3
 337 0484 11000000 		.word	17
 338 0488 05000000 		.word	5
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 7


 339 048c 05000000 		.word	5
 340 0490 07000000 		.word	7
 341 0494 01000000 		.word	1
 342 0498 0D000000 		.word	13
 343 049c 05000000 		.word	5
 344 04a0 09000000 		.word	9
 345 04a4 09000000 		.word	9
 346              		.section	.rodata
 347              		.align	2
 348              	.LC0:
 349 0000 256400   		.ascii	"%d\000"
 350              		.section	.text.printMap,"ax",%progbits
 351              		.align	2
 352              		.global	printMap
 353              		.thumb
 354              		.thumb_func
 355              		.type	printMap, %function
 356              	printMap:
 357              	.LFB1:
 358              		.file 1 "pathfinding.c"
   1:pathfinding.c **** /* ========================================
   2:pathfinding.c ****  *
   3:pathfinding.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:pathfinding.c ****  * All Rights Reserved
   5:pathfinding.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:pathfinding.c ****  *
   7:pathfinding.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:pathfinding.c ****  * WHICH IS THE PROPERTY OF your company.
   9:pathfinding.c ****  *
  10:pathfinding.c ****  * ========================================
  11:pathfinding.c **** */
  12:pathfinding.c **** #include <stdio.h>
  13:pathfinding.c **** #include <stdlib.h>
  14:pathfinding.c **** #include <time.h>
  15:pathfinding.c **** #include <stdbool.h>
  16:pathfinding.c **** #include "map.h"
  17:pathfinding.c **** #include "pathfinding.h"
  18:pathfinding.c **** 
  19:pathfinding.c **** #define MAX_ROWS 15
  20:pathfinding.c **** #define MAX_COLS 19
  21:pathfinding.c **** #define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))
  22:pathfinding.c **** enum OrientationState previousRobotOrientation, currentRobotOrientation = Right; // initialize 
  23:pathfinding.c **** 
  24:pathfinding.c **** static Instruction instructionsList[285];
  25:pathfinding.c **** static int numSteps = 0;
  26:pathfinding.c **** 
  27:pathfinding.c **** uint8_t instructionsListLength();
  28:pathfinding.c **** void checkIgnoreTurn(enum OrientationState currentRobotOrientation, int currentRow, int currentCol)
  29:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol);
  30:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol); 
  31:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i);
  32:pathfinding.c **** 
  33:pathfinding.c **** 
  34:pathfinding.c **** int map[15][19] = {
  35:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  36:pathfinding.c **** {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  37:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1},
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 8


  38:pathfinding.c **** {1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1},
  39:pathfinding.c **** {1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1},
  40:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
  41:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  42:pathfinding.c **** {1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1},
  43:pathfinding.c **** {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1},
  44:pathfinding.c **** {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  45:pathfinding.c **** {1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
  46:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  47:pathfinding.c **** {1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
  48:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  49:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  50:pathfinding.c **** };
  51:pathfinding.c **** 
  52:pathfinding.c **** /*
  53:pathfinding.c **** int map[15][19] = {
  54:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  55:pathfinding.c **** {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1},
  56:pathfinding.c **** {1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  57:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  58:pathfinding.c **** {1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1},
  59:pathfinding.c **** {1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
  60:pathfinding.c **** {1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1},
  61:pathfinding.c **** {1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1},
  62:pathfinding.c **** {1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1},
  63:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
  64:pathfinding.c **** {1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1},
  65:pathfinding.c **** {1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1},
  66:pathfinding.c **** {1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1},
  67:pathfinding.c **** {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  68:pathfinding.c **** {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  69:pathfinding.c **** };
  70:pathfinding.c **** */
  71:pathfinding.c **** 
  72:pathfinding.c **** 
  73:pathfinding.c **** int start_pos[2] = {1,3};
  74:pathfinding.c **** 
  75:pathfinding.c **** int food_list[5][2]= {
  76:pathfinding.c **** {3,17},
  77:pathfinding.c **** {5,5},
  78:pathfinding.c **** {7,1},
  79:pathfinding.c **** {13,5},
  80:pathfinding.c **** {9,9}
  81:pathfinding.c **** };
  82:pathfinding.c **** 
  83:pathfinding.c **** // MAP INITIALISATION CODE
  84:pathfinding.c **** void printMap(int map[MAX_ROWS][MAX_COLS]) {
 359              		.loc 1 84 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 84B0     		sub	sp, sp, #16
 368              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 9


 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
 372              	.LBB2:
  85:pathfinding.c ****     // Print the map in a grid format
  86:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 373              		.loc 1 86 0
 374 0008 0023     		movs	r3, #0
 375 000a FB60     		str	r3, [r7, #12]
 376 000c 1BE0     		b	.L2
 377              	.L5:
 378              	.LBB3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 379              		.loc 1 87 0
 380 000e 0023     		movs	r3, #0
 381 0010 BB60     		str	r3, [r7, #8]
 382 0012 0FE0     		b	.L3
 383              	.L4:
  88:pathfinding.c ****             printf("%d", map[i][j]);
 384              		.loc 1 88 0 discriminator 3
 385 0014 FB68     		ldr	r3, [r7, #12]
 386 0016 4C22     		movs	r2, #76
 387 0018 02FB03F3 		mul	r3, r2, r3
 388 001c 7A68     		ldr	r2, [r7, #4]
 389 001e 1344     		add	r3, r3, r2
 390 0020 BA68     		ldr	r2, [r7, #8]
 391 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 392 0026 1946     		mov	r1, r3
 393 0028 0A48     		ldr	r0, .L6
 394 002a FFF7FEFF 		bl	printf
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 395              		.loc 1 87 0 discriminator 3
 396 002e BB68     		ldr	r3, [r7, #8]
 397 0030 0133     		adds	r3, r3, #1
 398 0032 BB60     		str	r3, [r7, #8]
 399              	.L3:
  87:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 400              		.loc 1 87 0 is_stmt 0 discriminator 1
 401 0034 BB68     		ldr	r3, [r7, #8]
 402 0036 122B     		cmp	r3, #18
 403 0038 ECDD     		ble	.L4
 404              	.LBE3:
  89:pathfinding.c ****         }
  90:pathfinding.c ****         printf("\n");
 405              		.loc 1 90 0 is_stmt 1 discriminator 2
 406 003a 0A20     		movs	r0, #10
 407 003c FFF7FEFF 		bl	putchar
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 408              		.loc 1 86 0 discriminator 2
 409 0040 FB68     		ldr	r3, [r7, #12]
 410 0042 0133     		adds	r3, r3, #1
 411 0044 FB60     		str	r3, [r7, #12]
 412              	.L2:
  86:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 413              		.loc 1 86 0 is_stmt 0 discriminator 1
 414 0046 FB68     		ldr	r3, [r7, #12]
 415 0048 0E2B     		cmp	r3, #14
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 10


 416 004a E0DD     		ble	.L5
 417              	.LBE2:
  91:pathfinding.c ****     }
  92:pathfinding.c **** }
 418              		.loc 1 92 0 is_stmt 1
 419 004c 00BF     		nop
 420 004e 1037     		adds	r7, r7, #16
 421              		.cfi_def_cfa_offset 8
 422 0050 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0052 80BD     		pop	{r7, pc}
 426              	.L7:
 427              		.align	2
 428              	.L6:
 429 0054 00000000 		.word	.LC0
 430              		.cfi_endproc
 431              	.LFE1:
 432              		.size	printMap, .-printMap
 433              		.section	.text.clearMap,"ax",%progbits
 434              		.align	2
 435              		.global	clearMap
 436              		.thumb
 437              		.thumb_func
 438              		.type	clearMap, %function
 439              	clearMap:
 440              	.LFB2:
  93:pathfinding.c **** void clearMap(int map[MAX_ROWS][MAX_COLS]) {
 441              		.loc 1 93 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 16
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 85B0     		sub	sp, sp, #20
 450              		.cfi_def_cfa_offset 24
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 454              	.LBB4:
  94:pathfinding.c ****     // Print the map in a grid format
  95:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 455              		.loc 1 95 0
 456 0008 0023     		movs	r3, #0
 457 000a FB60     		str	r3, [r7, #12]
 458 000c 20E0     		b	.L9
 459              	.L13:
 460              	.LBB5:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 461              		.loc 1 96 0
 462 000e 0023     		movs	r3, #0
 463 0010 BB60     		str	r3, [r7, #8]
 464 0012 17E0     		b	.L10
 465              	.L12:
  97:pathfinding.c ****             if(map[i][j] != 1) { map[i][j] = 0;} // clear map
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 11


 466              		.loc 1 97 0
 467 0014 FB68     		ldr	r3, [r7, #12]
 468 0016 4C22     		movs	r2, #76
 469 0018 02FB03F3 		mul	r3, r2, r3
 470 001c 7A68     		ldr	r2, [r7, #4]
 471 001e 1344     		add	r3, r3, r2
 472 0020 BA68     		ldr	r2, [r7, #8]
 473 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 474 0026 012B     		cmp	r3, #1
 475 0028 09D0     		beq	.L11
 476              		.loc 1 97 0 is_stmt 0 discriminator 1
 477 002a FB68     		ldr	r3, [r7, #12]
 478 002c 4C22     		movs	r2, #76
 479 002e 02FB03F3 		mul	r3, r2, r3
 480 0032 7A68     		ldr	r2, [r7, #4]
 481 0034 1344     		add	r3, r3, r2
 482 0036 BA68     		ldr	r2, [r7, #8]
 483 0038 0021     		movs	r1, #0
 484 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 485              	.L11:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 486              		.loc 1 96 0 is_stmt 1 discriminator 2
 487 003e BB68     		ldr	r3, [r7, #8]
 488 0040 0133     		adds	r3, r3, #1
 489 0042 BB60     		str	r3, [r7, #8]
 490              	.L10:
  96:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 491              		.loc 1 96 0 is_stmt 0 discriminator 1
 492 0044 BB68     		ldr	r3, [r7, #8]
 493 0046 122B     		cmp	r3, #18
 494 0048 E4DD     		ble	.L12
 495              	.LBE5:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 496              		.loc 1 95 0 is_stmt 1 discriminator 2
 497 004a FB68     		ldr	r3, [r7, #12]
 498 004c 0133     		adds	r3, r3, #1
 499 004e FB60     		str	r3, [r7, #12]
 500              	.L9:
  95:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 501              		.loc 1 95 0 is_stmt 0 discriminator 1
 502 0050 FB68     		ldr	r3, [r7, #12]
 503 0052 0E2B     		cmp	r3, #14
 504 0054 DBDD     		ble	.L13
 505              	.LBE4:
  98:pathfinding.c ****         }
  99:pathfinding.c ****     }
 100:pathfinding.c **** }
 506              		.loc 1 100 0 is_stmt 1
 507 0056 00BF     		nop
 508 0058 1437     		adds	r7, r7, #20
 509              		.cfi_def_cfa_offset 4
 510 005a BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 005c 80BC     		pop	{r7}
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 12


 516 005e 7047     		bx	lr
 517              		.cfi_endproc
 518              	.LFE2:
 519              		.size	clearMap, .-clearMap
 520              		.comm	list_of_optimal_coordinates,2280,4
 521              		.global	moves
 522              		.data
 523              		.align	2
 524              		.type	moves, %object
 525              		.size	moves, 32
 526              	moves:
 527 04a8 00000000 		.word	0
 528 04ac 01000000 		.word	1
 529 04b0 00000000 		.word	0
 530 04b4 FFFFFFFF 		.word	-1
 531 04b8 01000000 		.word	1
 532 04bc 00000000 		.word	0
 533 04c0 FFFFFFFF 		.word	-1
 534 04c4 00000000 		.word	0
 535              		.section	.text.isValidMove,"ax",%progbits
 536              		.align	2
 537              		.global	isValidMove
 538              		.thumb
 539              		.thumb_func
 540              		.type	isValidMove, %function
 541              	isValidMove:
 542              	.LFB3:
 101:pathfinding.c **** 
 102:pathfinding.c **** 
 103:pathfinding.c **** int list_of_optimal_coordinates[285][2]; // ROW, COL
 104:pathfinding.c **** 
 105:pathfinding.c **** struct Location moves[] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
 106:pathfinding.c **** 
 107:pathfinding.c **** bool isValidMove(int r, int c, int rows, int cols, int map[MAX_ROWS][MAX_COLS]) {
 543              		.loc 1 107 0
 544              		.cfi_startproc
 545              		@ args = 4, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 F860     		str	r0, [r7, #12]
 556 0008 B960     		str	r1, [r7, #8]
 557 000a 7A60     		str	r2, [r7, #4]
 558 000c 3B60     		str	r3, [r7]
 108:pathfinding.c ****     return (r >= 0 && r < rows && c >= 0 && c < cols && map[r][c] == 0);
 559              		.loc 1 108 0
 560 000e FB68     		ldr	r3, [r7, #12]
 561 0010 002B     		cmp	r3, #0
 562 0012 17DB     		blt	.L15
 563              		.loc 1 108 0 is_stmt 0 discriminator 1
 564 0014 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 13


 565 0016 7B68     		ldr	r3, [r7, #4]
 566 0018 9A42     		cmp	r2, r3
 567 001a 13DA     		bge	.L15
 568              		.loc 1 108 0 discriminator 3
 569 001c BB68     		ldr	r3, [r7, #8]
 570 001e 002B     		cmp	r3, #0
 571 0020 10DB     		blt	.L15
 572              		.loc 1 108 0 discriminator 5
 573 0022 BA68     		ldr	r2, [r7, #8]
 574 0024 3B68     		ldr	r3, [r7]
 575 0026 9A42     		cmp	r2, r3
 576 0028 0CDA     		bge	.L15
 577              		.loc 1 108 0 discriminator 7
 578 002a FB68     		ldr	r3, [r7, #12]
 579 002c 4C22     		movs	r2, #76
 580 002e 02FB03F3 		mul	r3, r2, r3
 581 0032 BA69     		ldr	r2, [r7, #24]
 582 0034 1344     		add	r3, r3, r2
 583 0036 BA68     		ldr	r2, [r7, #8]
 584 0038 53F82230 		ldr	r3, [r3, r2, lsl #2]
 585 003c 002B     		cmp	r3, #0
 586 003e 01D1     		bne	.L15
 587              		.loc 1 108 0 discriminator 9
 588 0040 0123     		movs	r3, #1
 589 0042 00E0     		b	.L16
 590              	.L15:
 591              		.loc 1 108 0 discriminator 10
 592 0044 0023     		movs	r3, #0
 593              	.L16:
 594              		.loc 1 108 0 discriminator 12
 595 0046 03F00103 		and	r3, r3, #1
 596 004a DBB2     		uxtb	r3, r3
 109:pathfinding.c **** }
 597              		.loc 1 109 0 is_stmt 1 discriminator 12
 598 004c 1846     		mov	r0, r3
 599 004e 1437     		adds	r7, r7, #20
 600              		.cfi_def_cfa_offset 4
 601 0050 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 0052 80BC     		pop	{r7}
 605              		.cfi_restore 7
 606              		.cfi_def_cfa_offset 0
 607 0054 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE3:
 610              		.size	isValidMove, .-isValidMove
 611 0056 00BF     		.section	.text.dijkstra,"ax",%progbits
 612              		.align	2
 613              		.global	dijkstra
 614              		.thumb
 615              		.thumb_func
 616              		.type	dijkstra, %function
 617              	dijkstra:
 618              	.LFB4:
 110:pathfinding.c **** 
 111:pathfinding.c **** void dijkstra(int map[MAX_ROWS][MAX_COLS], struct Location startlocation, struct Location targetloc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 14


 619              		.loc 1 111 0
 620              		.cfi_startproc
 621              		@ args = 12, pretend = 8, frame = 5816
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 82B0     		sub	sp, sp, #8
 624              		.cfi_def_cfa_offset 8
 625 0002 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 20
 627              		.cfi_offset 4, -20
 628              		.cfi_offset 7, -16
 629              		.cfi_offset 14, -12
 630 0004 ADF5B65D 		sub	sp, sp, #5824
 631              		.cfi_def_cfa_offset 5844
 632 0008 81B0     		sub	sp, sp, #4
 633              		.cfi_def_cfa_offset 5848
 634 000a 02AF     		add	r7, sp, #8
 635              		.cfi_def_cfa 7, 5840
 636 000c 07F11804 		add	r4, r7, #24
 637 0010 0C3C     		subs	r4, r4, #12
 638 0012 2060     		str	r0, [r4]
 639 0014 07F11800 		add	r0, r7, #24
 640 0018 1438     		subs	r0, r0, #20
 641 001a 80E80600 		stmia	r0, {r1, r2}
 642 001e 07F5B652 		add	r2, r7, #5824
 643 0022 02F10C02 		add	r2, r2, #12
 644 0026 1360     		str	r3, [r2]
 645              	.LBB6:
 112:pathfinding.c **** 
 113:pathfinding.c ****     int visitedMap[MAX_ROWS][MAX_COLS];
 114:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 646              		.loc 1 114 0
 647 0028 0023     		movs	r3, #0
 648 002a 07F5B552 		add	r2, r7, #5792
 649 002e 02F11402 		add	r2, r2, #20
 650 0032 1360     		str	r3, [r2]
 651 0034 3AE0     		b	.L19
 652              	.L22:
 653              	.LBB7:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 654              		.loc 1 115 0
 655 0036 0023     		movs	r3, #0
 656 0038 07F5B552 		add	r2, r7, #5792
 657 003c 02F11002 		add	r2, r2, #16
 658 0040 1360     		str	r3, [r2]
 659 0042 21E0     		b	.L20
 660              	.L21:
 116:pathfinding.c ****             visitedMap[i][j] = 1; // fill visited array with 1s- mark as unvisited
 661              		.loc 1 116 0 discriminator 3
 662 0044 07F58F51 		add	r1, r7, #4576
 663 0048 01F10C01 		add	r1, r1, #12
 664 004c 07F5B553 		add	r3, r7, #5792
 665 0050 03F11403 		add	r3, r3, #20
 666 0054 1A68     		ldr	r2, [r3]
 667 0056 1346     		mov	r3, r2
 668 0058 DB00     		lsls	r3, r3, #3
 669 005a 1344     		add	r3, r3, r2
 670 005c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 15


 671 005e 1344     		add	r3, r3, r2
 672 0060 07F5B552 		add	r2, r7, #5792
 673 0064 02F11002 		add	r2, r2, #16
 674 0068 1268     		ldr	r2, [r2]
 675 006a 1344     		add	r3, r3, r2
 676 006c 0122     		movs	r2, #1
 677 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 678              		.loc 1 115 0 discriminator 3
 679 0072 07F5B553 		add	r3, r7, #5792
 680 0076 03F11003 		add	r3, r3, #16
 681 007a 1B68     		ldr	r3, [r3]
 682 007c 0133     		adds	r3, r3, #1
 683 007e 07F5B552 		add	r2, r7, #5792
 684 0082 02F11002 		add	r2, r2, #16
 685 0086 1360     		str	r3, [r2]
 686              	.L20:
 115:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 687              		.loc 1 115 0 is_stmt 0 discriminator 1
 688 0088 07F5B553 		add	r3, r7, #5792
 689 008c 03F11003 		add	r3, r3, #16
 690 0090 1B68     		ldr	r3, [r3]
 691 0092 122B     		cmp	r3, #18
 692 0094 D6DD     		ble	.L21
 693              	.LBE7:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 694              		.loc 1 114 0 is_stmt 1 discriminator 2
 695 0096 07F5B553 		add	r3, r7, #5792
 696 009a 03F11403 		add	r3, r3, #20
 697 009e 1B68     		ldr	r3, [r3]
 698 00a0 0133     		adds	r3, r3, #1
 699 00a2 07F5B552 		add	r2, r7, #5792
 700 00a6 02F11402 		add	r2, r2, #20
 701 00aa 1360     		str	r3, [r2]
 702              	.L19:
 114:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 703              		.loc 1 114 0 is_stmt 0 discriminator 1
 704 00ac 07F5B553 		add	r3, r7, #5792
 705 00b0 03F11403 		add	r3, r3, #20
 706 00b4 1B68     		ldr	r3, [r3]
 707 00b6 0E2B     		cmp	r3, #14
 708 00b8 BDDD     		ble	.L22
 709              	.LBE6:
 117:pathfinding.c ****         }
 118:pathfinding.c ****     }
 119:pathfinding.c **** 
 120:pathfinding.c ****     struct PriorityQueue {
 121:pathfinding.c ****         struct Location location;
 122:pathfinding.c ****         int distance;
 123:pathfinding.c ****     };
 124:pathfinding.c **** 
 125:pathfinding.c ****     struct PriorityQueue pq[MAX_ROWS * MAX_COLS]; // initialise priority queue
 126:pathfinding.c ****     int pqSize = 0;
 710              		.loc 1 126 0 is_stmt 1
 711 00ba 0023     		movs	r3, #0
 712 00bc 07F5B552 		add	r2, r7, #5792
 713 00c0 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 16


 714 00c4 1360     		str	r3, [r2]
 715              	.LBB8:
 127:pathfinding.c **** 
 128:pathfinding.c ****     // Initialize distances and paths arrays
 129:pathfinding.c ****     int distances[MAX_ROWS][MAX_COLS]; // array to record distance of each location
 130:pathfinding.c ****     //struct Location paths[MAX_ROWS * MAX_COLS]; // 1d array to record path- each element is a loc
 131:pathfinding.c **** 
 132:pathfinding.c ****     for (int i = 0; i < MAX_ROWS; i++) {
 716              		.loc 1 132 0
 717 00c6 0023     		movs	r3, #0
 718 00c8 07F5B552 		add	r2, r7, #5792
 719 00cc 02F10802 		add	r2, r2, #8
 720 00d0 1360     		str	r3, [r2]
 721 00d2 3AE0     		b	.L23
 722              	.L26:
 723              	.LBB9:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 724              		.loc 1 133 0
 725 00d4 0023     		movs	r3, #0
 726 00d6 07F5B552 		add	r2, r7, #5792
 727 00da 02F10402 		add	r2, r2, #4
 728 00de 1360     		str	r3, [r2]
 729 00e0 21E0     		b	.L24
 730              	.L25:
 134:pathfinding.c ****             distances[i][j] = 1000; // initialise distances as infinity
 731              		.loc 1 134 0 discriminator 3
 732 00e2 07F13802 		add	r2, r7, #56
 733 00e6 1C3A     		subs	r2, r2, #28
 734 00e8 07F5B553 		add	r3, r7, #5792
 735 00ec 03F10803 		add	r3, r3, #8
 736 00f0 1968     		ldr	r1, [r3]
 737 00f2 0B46     		mov	r3, r1
 738 00f4 DB00     		lsls	r3, r3, #3
 739 00f6 0B44     		add	r3, r3, r1
 740 00f8 5B00     		lsls	r3, r3, #1
 741 00fa 0B44     		add	r3, r3, r1
 742 00fc 07F5B551 		add	r1, r7, #5792
 743 0100 01F10401 		add	r1, r1, #4
 744 0104 0968     		ldr	r1, [r1]
 745 0106 0B44     		add	r3, r3, r1
 746 0108 4FF47A71 		mov	r1, #1000
 747 010c 42F82310 		str	r1, [r2, r3, lsl #2]
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 748              		.loc 1 133 0 discriminator 3
 749 0110 07F5B553 		add	r3, r7, #5792
 750 0114 03F10403 		add	r3, r3, #4
 751 0118 1B68     		ldr	r3, [r3]
 752 011a 0133     		adds	r3, r3, #1
 753 011c 07F5B552 		add	r2, r7, #5792
 754 0120 02F10402 		add	r2, r2, #4
 755 0124 1360     		str	r3, [r2]
 756              	.L24:
 133:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 757              		.loc 1 133 0 is_stmt 0 discriminator 1
 758 0126 07F5B553 		add	r3, r7, #5792
 759 012a 03F10403 		add	r3, r3, #4
 760 012e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 17


 761 0130 122B     		cmp	r3, #18
 762 0132 D6DD     		ble	.L25
 763              	.LBE9:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 764              		.loc 1 132 0 is_stmt 1 discriminator 2
 765 0134 07F5B553 		add	r3, r7, #5792
 766 0138 03F10803 		add	r3, r3, #8
 767 013c 1B68     		ldr	r3, [r3]
 768 013e 0133     		adds	r3, r3, #1
 769 0140 07F5B552 		add	r2, r7, #5792
 770 0144 02F10802 		add	r2, r2, #8
 771 0148 1360     		str	r3, [r2]
 772              	.L23:
 132:pathfinding.c ****         for (int j = 0; j < MAX_COLS; j++) {
 773              		.loc 1 132 0 is_stmt 0 discriminator 1
 774 014a 07F5B553 		add	r3, r7, #5792
 775 014e 03F10803 		add	r3, r3, #8
 776 0152 1B68     		ldr	r3, [r3]
 777 0154 0E2B     		cmp	r3, #14
 778 0156 BDDD     		ble	.L26
 779              	.LBE8:
 135:pathfinding.c ****         }
 136:pathfinding.c ****     }
 137:pathfinding.c **** 
 138:pathfinding.c ****     int stepNum = 0;
 780              		.loc 1 138 0 is_stmt 1
 781 0158 0023     		movs	r3, #0
 782 015a 07F5B552 		add	r2, r7, #5792
 783 015e 1360     		str	r3, [r2]
 139:pathfinding.c ****     distances[startlocation.row][startlocation.col] = 0; // initialise distance of startLoc to 0
 784              		.loc 1 139 0
 785 0160 07F11803 		add	r3, r7, #24
 786 0164 143B     		subs	r3, r3, #20
 787 0166 1968     		ldr	r1, [r3]
 788 0168 07F11803 		add	r3, r7, #24
 789 016c 143B     		subs	r3, r3, #20
 790 016e 5868     		ldr	r0, [r3, #4]
 791 0170 07F13802 		add	r2, r7, #56
 792 0174 1C3A     		subs	r2, r2, #28
 793 0176 0B46     		mov	r3, r1
 794 0178 DB00     		lsls	r3, r3, #3
 795 017a 0B44     		add	r3, r3, r1
 796 017c 5B00     		lsls	r3, r3, #1
 797 017e 0B44     		add	r3, r3, r1
 798 0180 0344     		add	r3, r3, r0
 799 0182 0021     		movs	r1, #0
 800 0184 42F82310 		str	r1, [r2, r3, lsl #2]
 140:pathfinding.c ****     //paths[stepNum] = startlocation; // add start to path array
 141:pathfinding.c ****     stepNum++; // increment stepNum
 801              		.loc 1 141 0
 802 0188 07F5B553 		add	r3, r7, #5792
 803 018c 1B68     		ldr	r3, [r3]
 804 018e 0133     		adds	r3, r3, #1
 805 0190 07F5B552 		add	r2, r7, #5792
 806 0194 1360     		str	r3, [r2]
 142:pathfinding.c **** 
 143:pathfinding.c ****     pq[pqSize].location = startlocation; // add startLocation to Priority queue
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 18


 807              		.loc 1 143 0
 808 0196 07F59362 		add	r2, r7, #1176
 809 019a 083A     		subs	r2, r2, #8
 810 019c 07F5B553 		add	r3, r7, #5792
 811 01a0 03F10C03 		add	r3, r3, #12
 812 01a4 1968     		ldr	r1, [r3]
 813 01a6 0B46     		mov	r3, r1
 814 01a8 5B00     		lsls	r3, r3, #1
 815 01aa 0B44     		add	r3, r3, r1
 816 01ac 9B00     		lsls	r3, r3, #2
 817 01ae 1A44     		add	r2, r2, r3
 818 01b0 07F11803 		add	r3, r7, #24
 819 01b4 143B     		subs	r3, r3, #20
 820 01b6 93E80300 		ldmia	r3, {r0, r1}
 821 01ba 82E80300 		stmia	r2, {r0, r1}
 144:pathfinding.c ****     pq[pqSize].distance = 0; // add startlocation distance to priority queue
 822              		.loc 1 144 0
 823 01be 07F59362 		add	r2, r7, #1176
 824 01c2 083A     		subs	r2, r2, #8
 825 01c4 07F5B553 		add	r3, r7, #5792
 826 01c8 03F10C03 		add	r3, r3, #12
 827 01cc 1968     		ldr	r1, [r3]
 828 01ce 0B46     		mov	r3, r1
 829 01d0 5B00     		lsls	r3, r3, #1
 830 01d2 0B44     		add	r3, r3, r1
 831 01d4 9B00     		lsls	r3, r3, #2
 832 01d6 1344     		add	r3, r3, r2
 833 01d8 0833     		adds	r3, r3, #8
 834 01da 0022     		movs	r2, #0
 835 01dc 1A60     		str	r2, [r3]
 145:pathfinding.c ****     pqSize++; // increment pqSize- pq is not empty
 836              		.loc 1 145 0
 837 01de 07F5B553 		add	r3, r7, #5792
 838 01e2 03F10C03 		add	r3, r3, #12
 839 01e6 1B68     		ldr	r3, [r3]
 840 01e8 0133     		adds	r3, r3, #1
 841 01ea 07F5B552 		add	r2, r7, #5792
 842 01ee 02F10C02 		add	r2, r2, #12
 843 01f2 1360     		str	r3, [r2]
 146:pathfinding.c **** 
 147:pathfinding.c ****     while (pqSize > 0) {
 844              		.loc 1 147 0
 845 01f4 F5E1     		b	.L27
 846              	.L37:
 847              	.LBB10:
 148:pathfinding.c ****         int idx = 0;
 848              		.loc 1 148 0
 849 01f6 0023     		movs	r3, #0
 850 01f8 07F5B452 		add	r2, r7, #5760
 851 01fc 02F11C02 		add	r2, r2, #28
 852 0200 1360     		str	r3, [r2]
 853              	.LBB11:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 854              		.loc 1 149 0
 855 0202 0123     		movs	r3, #1
 856 0204 07F5B452 		add	r2, r7, #5760
 857 0208 02F11802 		add	r2, r2, #24
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 19


 858 020c 1360     		str	r3, [r2]
 859 020e 34E0     		b	.L28
 860              	.L30:
 150:pathfinding.c ****             if (pq[i].distance < pq[idx].distance) {
 861              		.loc 1 150 0
 862 0210 07F59362 		add	r2, r7, #1176
 863 0214 083A     		subs	r2, r2, #8
 864 0216 07F5B453 		add	r3, r7, #5760
 865 021a 03F11803 		add	r3, r3, #24
 866 021e 1968     		ldr	r1, [r3]
 867 0220 0B46     		mov	r3, r1
 868 0222 5B00     		lsls	r3, r3, #1
 869 0224 0B44     		add	r3, r3, r1
 870 0226 9B00     		lsls	r3, r3, #2
 871 0228 1344     		add	r3, r3, r2
 872 022a 0833     		adds	r3, r3, #8
 873 022c 1868     		ldr	r0, [r3]
 874 022e 07F59362 		add	r2, r7, #1176
 875 0232 083A     		subs	r2, r2, #8
 876 0234 07F5B453 		add	r3, r7, #5760
 877 0238 03F11C03 		add	r3, r3, #28
 878 023c 1968     		ldr	r1, [r3]
 879 023e 0B46     		mov	r3, r1
 880 0240 5B00     		lsls	r3, r3, #1
 881 0242 0B44     		add	r3, r3, r1
 882 0244 9B00     		lsls	r3, r3, #2
 883 0246 1344     		add	r3, r3, r2
 884 0248 0833     		adds	r3, r3, #8
 885 024a 1B68     		ldr	r3, [r3]
 886 024c 9842     		cmp	r0, r3
 887 024e 09DA     		bge	.L29
 151:pathfinding.c ****                 idx = i; // find the shortest distance location 
 888              		.loc 1 151 0
 889 0250 07F5B453 		add	r3, r7, #5760
 890 0254 03F11803 		add	r3, r3, #24
 891 0258 1B68     		ldr	r3, [r3]
 892 025a 07F5B452 		add	r2, r7, #5760
 893 025e 02F11C02 		add	r2, r2, #28
 894 0262 1360     		str	r3, [r2]
 895              	.L29:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 896              		.loc 1 149 0 discriminator 2
 897 0264 07F5B453 		add	r3, r7, #5760
 898 0268 03F11803 		add	r3, r3, #24
 899 026c 1B68     		ldr	r3, [r3]
 900 026e 0133     		adds	r3, r3, #1
 901 0270 07F5B452 		add	r2, r7, #5760
 902 0274 02F11802 		add	r2, r2, #24
 903 0278 1360     		str	r3, [r2]
 904              	.L28:
 149:pathfinding.c ****         for (int i = 1; i < pqSize; i++) {
 905              		.loc 1 149 0 is_stmt 0 discriminator 1
 906 027a 07F5B453 		add	r3, r7, #5760
 907 027e 03F11803 		add	r3, r3, #24
 908 0282 1A68     		ldr	r2, [r3]
 909 0284 07F5B553 		add	r3, r7, #5792
 910 0288 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 20


 911 028c 1B68     		ldr	r3, [r3]
 912 028e 9A42     		cmp	r2, r3
 913 0290 BEDB     		blt	.L30
 914              	.LBE11:
 152:pathfinding.c ****             }
 153:pathfinding.c ****         }
 154:pathfinding.c ****         struct PriorityQueue current = pq[idx]; // record current location
 915              		.loc 1 154 0 is_stmt 1
 916 0292 07F11801 		add	r1, r7, #24
 917 0296 0839     		subs	r1, r1, #8
 918 0298 07F59362 		add	r2, r7, #1176
 919 029c 083A     		subs	r2, r2, #8
 920 029e 07F5B453 		add	r3, r7, #5760
 921 02a2 03F11C03 		add	r3, r3, #28
 922 02a6 1868     		ldr	r0, [r3]
 923 02a8 0346     		mov	r3, r0
 924 02aa 5B00     		lsls	r3, r3, #1
 925 02ac 0344     		add	r3, r3, r0
 926 02ae 9B00     		lsls	r3, r3, #2
 927 02b0 1A44     		add	r2, r2, r3
 928 02b2 0B46     		mov	r3, r1
 929 02b4 07CA     		ldmia	r2, {r0, r1, r2}
 930 02b6 83E80700 		stmia	r3, {r0, r1, r2}
 155:pathfinding.c ****         pq[idx] = pq[pqSize - 1];
 931              		.loc 1 155 0
 932 02ba 07F5B553 		add	r3, r7, #5792
 933 02be 03F10C03 		add	r3, r3, #12
 934 02c2 1B68     		ldr	r3, [r3]
 935 02c4 591E     		subs	r1, r3, #1
 936 02c6 07F59362 		add	r2, r7, #1176
 937 02ca 083A     		subs	r2, r2, #8
 938 02cc 07F5B453 		add	r3, r7, #5760
 939 02d0 03F11C03 		add	r3, r3, #28
 940 02d4 1868     		ldr	r0, [r3]
 941 02d6 0346     		mov	r3, r0
 942 02d8 5B00     		lsls	r3, r3, #1
 943 02da 0344     		add	r3, r3, r0
 944 02dc 9B00     		lsls	r3, r3, #2
 945 02de D018     		adds	r0, r2, r3
 946 02e0 07F59362 		add	r2, r7, #1176
 947 02e4 083A     		subs	r2, r2, #8
 948 02e6 0B46     		mov	r3, r1
 949 02e8 5B00     		lsls	r3, r3, #1
 950 02ea 0B44     		add	r3, r3, r1
 951 02ec 9B00     		lsls	r3, r3, #2
 952 02ee 1A44     		add	r2, r2, r3
 953 02f0 0346     		mov	r3, r0
 954 02f2 07CA     		ldmia	r2, {r0, r1, r2}
 955 02f4 83E80700 		stmia	r3, {r0, r1, r2}
 156:pathfinding.c ****         pqSize--; // decrement pqSize
 956              		.loc 1 156 0
 957 02f8 07F5B553 		add	r3, r7, #5792
 958 02fc 03F10C03 		add	r3, r3, #12
 959 0300 1B68     		ldr	r3, [r3]
 960 0302 013B     		subs	r3, r3, #1
 961 0304 07F5B552 		add	r2, r7, #5792
 962 0308 02F10C02 		add	r2, r2, #12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 21


 963 030c 1360     		str	r3, [r2]
 157:pathfinding.c **** 
 158:pathfinding.c ****         int row = current.location.row;
 964              		.loc 1 158 0
 965 030e 07F11803 		add	r3, r7, #24
 966 0312 083B     		subs	r3, r3, #8
 967 0314 1B68     		ldr	r3, [r3]
 968 0316 07F5B352 		add	r2, r7, #5728
 969 031a 02F11C02 		add	r2, r2, #28
 970 031e 1360     		str	r3, [r2]
 159:pathfinding.c ****         int col = current.location.col; // get current location details
 971              		.loc 1 159 0
 972 0320 07F11803 		add	r3, r7, #24
 973 0324 083B     		subs	r3, r3, #8
 974 0326 5B68     		ldr	r3, [r3, #4]
 975 0328 07F5B352 		add	r2, r7, #5728
 976 032c 02F11802 		add	r2, r2, #24
 977 0330 1360     		str	r3, [r2]
 160:pathfinding.c **** 
 161:pathfinding.c ****         if (visitedMap[row][col] == 1) {
 978              		.loc 1 161 0
 979 0332 07F58F51 		add	r1, r7, #4576
 980 0336 01F10C01 		add	r1, r1, #12
 981 033a 07F5B353 		add	r3, r7, #5728
 982 033e 03F11C03 		add	r3, r3, #28
 983 0342 1A68     		ldr	r2, [r3]
 984 0344 1346     		mov	r3, r2
 985 0346 DB00     		lsls	r3, r3, #3
 986 0348 1344     		add	r3, r3, r2
 987 034a 5B00     		lsls	r3, r3, #1
 988 034c 1344     		add	r3, r3, r2
 989 034e 07F5B352 		add	r2, r7, #5728
 990 0352 02F11802 		add	r2, r2, #24
 991 0356 1268     		ldr	r2, [r2]
 992 0358 1344     		add	r3, r3, r2
 993 035a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 994 035e 012B     		cmp	r3, #1
 995 0360 40F03F81 		bne	.L27
 162:pathfinding.c ****             visitedMap[row][col] = 0; // mark as visited if unvisited
 996              		.loc 1 162 0
 997 0364 07F58F51 		add	r1, r7, #4576
 998 0368 01F10C01 		add	r1, r1, #12
 999 036c 07F5B353 		add	r3, r7, #5728
 1000 0370 03F11C03 		add	r3, r3, #28
 1001 0374 1A68     		ldr	r2, [r3]
 1002 0376 1346     		mov	r3, r2
 1003 0378 DB00     		lsls	r3, r3, #3
 1004 037a 1344     		add	r3, r3, r2
 1005 037c 5B00     		lsls	r3, r3, #1
 1006 037e 1344     		add	r3, r3, r2
 1007 0380 07F5B352 		add	r2, r7, #5728
 1008 0384 02F11802 		add	r2, r2, #24
 1009 0388 1268     		ldr	r2, [r2]
 1010 038a 1344     		add	r3, r3, r2
 1011 038c 0022     		movs	r2, #0
 1012 038e 41F82320 		str	r2, [r1, r3, lsl #2]
 163:pathfinding.c **** 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 22


 164:pathfinding.c ****             if (row == targetlocation.row && col == targetlocation.col) {
 1013              		.loc 1 164 0
 1014 0392 07F5B653 		add	r3, r7, #5824
 1015 0396 03F10C03 		add	r3, r3, #12
 1016 039a 1A68     		ldr	r2, [r3]
 1017 039c 07F5B353 		add	r3, r7, #5728
 1018 03a0 03F11C03 		add	r3, r3, #28
 1019 03a4 1B68     		ldr	r3, [r3]
 1020 03a6 9A42     		cmp	r2, r3
 1021 03a8 0CD1     		bne	.L32
 1022              		.loc 1 164 0 is_stmt 0 discriminator 1
 1023 03aa 07F5B653 		add	r3, r7, #5824
 1024 03ae 03F11003 		add	r3, r3, #16
 1025 03b2 1A68     		ldr	r2, [r3]
 1026 03b4 07F5B353 		add	r3, r7, #5728
 1027 03b8 03F11803 		add	r3, r3, #24
 1028 03bc 1B68     		ldr	r3, [r3]
 1029 03be 9A42     		cmp	r2, r3
 1030 03c0 00F01881 		beq	.L43
 1031              	.L32:
 1032              	.LBB12:
 165:pathfinding.c ****                 break; // if reached target destination, end
 166:pathfinding.c ****             }
 167:pathfinding.c ****             // make a move, check if valid
 168:pathfinding.c ****             for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1033              		.loc 1 168 0 is_stmt 1
 1034 03c4 0023     		movs	r3, #0
 1035 03c6 07F5B452 		add	r2, r7, #5760
 1036 03ca 02F11402 		add	r2, r2, #20
 1037 03ce 1360     		str	r3, [r2]
 1038 03d0 FFE0     		b	.L34
 1039              	.L36:
 1040              	.LBB13:
 169:pathfinding.c ****                 int newRow = row + moves[i].row;
 1041              		.loc 1 169 0
 1042 03d2 D04A     		ldr	r2, .L44
 1043 03d4 07F5B453 		add	r3, r7, #5760
 1044 03d8 03F11403 		add	r3, r3, #20
 1045 03dc 1B68     		ldr	r3, [r3]
 1046 03de 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1047 03e2 07F5B353 		add	r3, r7, #5728
 1048 03e6 03F11C03 		add	r3, r3, #28
 1049 03ea 1B68     		ldr	r3, [r3]
 1050 03ec 1344     		add	r3, r3, r2
 1051 03ee 07F5B352 		add	r2, r7, #5728
 1052 03f2 02F11402 		add	r2, r2, #20
 1053 03f6 1360     		str	r3, [r2]
 170:pathfinding.c ****                 int newCol = col + moves[i].col;
 1054              		.loc 1 170 0
 1055 03f8 C64A     		ldr	r2, .L44
 1056 03fa 07F5B453 		add	r3, r7, #5760
 1057 03fe 03F11403 		add	r3, r3, #20
 1058 0402 1B68     		ldr	r3, [r3]
 1059 0404 DB00     		lsls	r3, r3, #3
 1060 0406 1344     		add	r3, r3, r2
 1061 0408 5A68     		ldr	r2, [r3, #4]
 1062 040a 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 23


 1063 040e 03F11803 		add	r3, r3, #24
 1064 0412 1B68     		ldr	r3, [r3]
 1065 0414 1344     		add	r3, r3, r2
 1066 0416 07F5B352 		add	r2, r7, #5728
 1067 041a 02F11002 		add	r2, r2, #16
 1068 041e 1360     		str	r3, [r2]
 171:pathfinding.c **** 
 172:pathfinding.c ****                 if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && visitedMap[newRow][newC
 1069              		.loc 1 172 0
 1070 0420 07F11803 		add	r3, r7, #24
 1071 0424 0C3B     		subs	r3, r3, #12
 1072 0426 1B68     		ldr	r3, [r3]
 1073 0428 0093     		str	r3, [sp]
 1074 042a 1323     		movs	r3, #19
 1075 042c 0F22     		movs	r2, #15
 1076 042e 07F5B351 		add	r1, r7, #5728
 1077 0432 01F11001 		add	r1, r1, #16
 1078 0436 0968     		ldr	r1, [r1]
 1079 0438 07F5B350 		add	r0, r7, #5728
 1080 043c 00F11400 		add	r0, r0, #20
 1081 0440 0068     		ldr	r0, [r0]
 1082 0442 FFF7FEFF 		bl	isValidMove
 1083 0446 0346     		mov	r3, r0
 1084 0448 002B     		cmp	r3, #0
 1085 044a 00F0B780 		beq	.L35
 1086              		.loc 1 172 0 is_stmt 0 discriminator 1
 1087 044e 07F58F51 		add	r1, r7, #4576
 1088 0452 01F10C01 		add	r1, r1, #12
 1089 0456 07F5B353 		add	r3, r7, #5728
 1090 045a 03F11403 		add	r3, r3, #20
 1091 045e 1A68     		ldr	r2, [r3]
 1092 0460 1346     		mov	r3, r2
 1093 0462 DB00     		lsls	r3, r3, #3
 1094 0464 1344     		add	r3, r3, r2
 1095 0466 5B00     		lsls	r3, r3, #1
 1096 0468 1344     		add	r3, r3, r2
 1097 046a 07F5B352 		add	r2, r7, #5728
 1098 046e 02F11002 		add	r2, r2, #16
 1099 0472 1268     		ldr	r2, [r2]
 1100 0474 1344     		add	r3, r3, r2
 1101 0476 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1102 047a 012B     		cmp	r3, #1
 1103 047c 40F09E80 		bne	.L35
 1104              	.LBB14:
 173:pathfinding.c ****                     int newDistance = distances[row][col] + 1;
 1105              		.loc 1 173 0 is_stmt 1
 1106 0480 07F13802 		add	r2, r7, #56
 1107 0484 1C3A     		subs	r2, r2, #28
 1108 0486 07F5B353 		add	r3, r7, #5728
 1109 048a 03F11C03 		add	r3, r3, #28
 1110 048e 1968     		ldr	r1, [r3]
 1111 0490 0B46     		mov	r3, r1
 1112 0492 DB00     		lsls	r3, r3, #3
 1113 0494 0B44     		add	r3, r3, r1
 1114 0496 5B00     		lsls	r3, r3, #1
 1115 0498 0B44     		add	r3, r3, r1
 1116 049a 07F5B351 		add	r1, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 24


 1117 049e 01F11801 		add	r1, r1, #24
 1118 04a2 0968     		ldr	r1, [r1]
 1119 04a4 0B44     		add	r3, r3, r1
 1120 04a6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1121 04aa 0133     		adds	r3, r3, #1
 1122 04ac 07F5B352 		add	r2, r7, #5728
 1123 04b0 02F10C02 		add	r2, r2, #12
 1124 04b4 1360     		str	r3, [r2]
 174:pathfinding.c ****                     // take the shortest distance between new and existing
 175:pathfinding.c ****                     if (newDistance < distances[newRow][newCol]) {
 1125              		.loc 1 175 0
 1126 04b6 07F13802 		add	r2, r7, #56
 1127 04ba 1C3A     		subs	r2, r2, #28
 1128 04bc 07F5B353 		add	r3, r7, #5728
 1129 04c0 03F11403 		add	r3, r3, #20
 1130 04c4 1968     		ldr	r1, [r3]
 1131 04c6 0B46     		mov	r3, r1
 1132 04c8 DB00     		lsls	r3, r3, #3
 1133 04ca 0B44     		add	r3, r3, r1
 1134 04cc 5B00     		lsls	r3, r3, #1
 1135 04ce 0B44     		add	r3, r3, r1
 1136 04d0 07F5B351 		add	r1, r7, #5728
 1137 04d4 01F11001 		add	r1, r1, #16
 1138 04d8 0968     		ldr	r1, [r1]
 1139 04da 0B44     		add	r3, r3, r1
 1140 04dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1141 04e0 07F5B353 		add	r3, r7, #5728
 1142 04e4 03F10C03 		add	r3, r3, #12
 1143 04e8 1B68     		ldr	r3, [r3]
 1144 04ea 9A42     		cmp	r2, r3
 1145 04ec 66DD     		ble	.L35
 176:pathfinding.c ****                         distances[newRow][newCol] = newDistance; // take new distance if less than 
 1146              		.loc 1 176 0
 1147 04ee 07F13802 		add	r2, r7, #56
 1148 04f2 1C3A     		subs	r2, r2, #28
 1149 04f4 07F5B353 		add	r3, r7, #5728
 1150 04f8 03F11403 		add	r3, r3, #20
 1151 04fc 1968     		ldr	r1, [r3]
 1152 04fe 0B46     		mov	r3, r1
 1153 0500 DB00     		lsls	r3, r3, #3
 1154 0502 0B44     		add	r3, r3, r1
 1155 0504 5B00     		lsls	r3, r3, #1
 1156 0506 0B44     		add	r3, r3, r1
 1157 0508 07F5B351 		add	r1, r7, #5728
 1158 050c 01F11001 		add	r1, r1, #16
 1159 0510 0968     		ldr	r1, [r1]
 1160 0512 0B44     		add	r3, r3, r1
 1161 0514 07F5B351 		add	r1, r7, #5728
 1162 0518 01F10C01 		add	r1, r1, #12
 1163 051c 0968     		ldr	r1, [r1]
 1164 051e 42F82310 		str	r1, [r2, r3, lsl #2]
 177:pathfinding.c ****                         //paths[stepNum] = (struct Location){newRow, newCol}; // add location to pa
 178:pathfinding.c ****                         
 179:pathfinding.c ****                         pq[pqSize].location.row = newRow; // update location
 1165              		.loc 1 179 0
 1166 0522 07F59362 		add	r2, r7, #1176
 1167 0526 083A     		subs	r2, r2, #8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 25


 1168 0528 07F5B553 		add	r3, r7, #5792
 1169 052c 03F10C03 		add	r3, r3, #12
 1170 0530 1968     		ldr	r1, [r3]
 1171 0532 0B46     		mov	r3, r1
 1172 0534 5B00     		lsls	r3, r3, #1
 1173 0536 0B44     		add	r3, r3, r1
 1174 0538 9B00     		lsls	r3, r3, #2
 1175 053a 1344     		add	r3, r3, r2
 1176 053c 07F5B352 		add	r2, r7, #5728
 1177 0540 02F11402 		add	r2, r2, #20
 1178 0544 1268     		ldr	r2, [r2]
 1179 0546 1A60     		str	r2, [r3]
 180:pathfinding.c ****                         pq[pqSize].location.col = newCol; // update location
 1180              		.loc 1 180 0
 1181 0548 07F59362 		add	r2, r7, #1176
 1182 054c 083A     		subs	r2, r2, #8
 1183 054e 07F5B553 		add	r3, r7, #5792
 1184 0552 03F10C03 		add	r3, r3, #12
 1185 0556 1968     		ldr	r1, [r3]
 1186 0558 0B46     		mov	r3, r1
 1187 055a 5B00     		lsls	r3, r3, #1
 1188 055c 0B44     		add	r3, r3, r1
 1189 055e 9B00     		lsls	r3, r3, #2
 1190 0560 1344     		add	r3, r3, r2
 1191 0562 0433     		adds	r3, r3, #4
 1192 0564 07F5B352 		add	r2, r7, #5728
 1193 0568 02F11002 		add	r2, r2, #16
 1194 056c 1268     		ldr	r2, [r2]
 1195 056e 1A60     		str	r2, [r3]
 181:pathfinding.c ****                         pq[pqSize].distance = newDistance; // update distance
 1196              		.loc 1 181 0
 1197 0570 07F59362 		add	r2, r7, #1176
 1198 0574 083A     		subs	r2, r2, #8
 1199 0576 07F5B553 		add	r3, r7, #5792
 1200 057a 03F10C03 		add	r3, r3, #12
 1201 057e 1968     		ldr	r1, [r3]
 1202 0580 0B46     		mov	r3, r1
 1203 0582 5B00     		lsls	r3, r3, #1
 1204 0584 0B44     		add	r3, r3, r1
 1205 0586 9B00     		lsls	r3, r3, #2
 1206 0588 1344     		add	r3, r3, r2
 1207 058a 0833     		adds	r3, r3, #8
 1208 058c 07F5B352 		add	r2, r7, #5728
 1209 0590 02F10C02 		add	r2, r2, #12
 1210 0594 1268     		ldr	r2, [r2]
 1211 0596 1A60     		str	r2, [r3]
 182:pathfinding.c ****                         
 183:pathfinding.c ****                         stepNum++;
 1212              		.loc 1 183 0
 1213 0598 07F5B553 		add	r3, r7, #5792
 1214 059c 1B68     		ldr	r3, [r3]
 1215 059e 0133     		adds	r3, r3, #1
 1216 05a0 07F5B552 		add	r2, r7, #5792
 1217 05a4 1360     		str	r3, [r2]
 184:pathfinding.c ****                         pqSize++;
 1218              		.loc 1 184 0
 1219 05a6 07F5B553 		add	r3, r7, #5792
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 26


 1220 05aa 03F10C03 		add	r3, r3, #12
 1221 05ae 1B68     		ldr	r3, [r3]
 1222 05b0 0133     		adds	r3, r3, #1
 1223 05b2 07F5B552 		add	r2, r7, #5792
 1224 05b6 02F10C02 		add	r2, r2, #12
 1225 05ba 1360     		str	r3, [r2]
 1226              	.L35:
 1227              	.LBE14:
 1228              	.LBE13:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1229              		.loc 1 168 0 discriminator 2
 1230 05bc 07F5B453 		add	r3, r7, #5760
 1231 05c0 03F11403 		add	r3, r3, #20
 1232 05c4 1B68     		ldr	r3, [r3]
 1233 05c6 0133     		adds	r3, r3, #1
 1234 05c8 07F5B452 		add	r2, r7, #5760
 1235 05cc 02F11402 		add	r2, r2, #20
 1236 05d0 1360     		str	r3, [r2]
 1237              	.L34:
 168:pathfinding.c ****                 int newRow = row + moves[i].row;
 1238              		.loc 1 168 0 is_stmt 0 discriminator 1
 1239 05d2 07F5B453 		add	r3, r7, #5760
 1240 05d6 03F11403 		add	r3, r3, #20
 1241 05da 1B68     		ldr	r3, [r3]
 1242 05dc 032B     		cmp	r3, #3
 1243 05de 7FF6F8AE 		bls	.L36
 1244              	.L27:
 1245              	.LBE12:
 1246              	.LBE10:
 147:pathfinding.c ****         int idx = 0;
 1247              		.loc 1 147 0 is_stmt 1
 1248 05e2 07F5B553 		add	r3, r7, #5792
 1249 05e6 03F10C03 		add	r3, r3, #12
 1250 05ea 1B68     		ldr	r3, [r3]
 1251 05ec 002B     		cmp	r3, #0
 1252 05ee 3FF702AE 		bgt	.L37
 1253 05f2 00E0     		b	.L33
 1254              	.L43:
 1255              	.LBB15:
 165:pathfinding.c ****             }
 1256              		.loc 1 165 0
 1257 05f4 00BF     		nop
 1258              	.L33:
 1259              	.LBE15:
 185:pathfinding.c ****                     }
 186:pathfinding.c ****                 }
 187:pathfinding.c ****             }
 188:pathfinding.c ****         }
 189:pathfinding.c ****     }
 190:pathfinding.c **** 
 191:pathfinding.c ****     // PATH RECONSTRUCTION
 192:pathfinding.c ****     // initialise maximum distance- will be decremented
 193:pathfinding.c ****     int shortestDist = distances[targetlocation.row][targetlocation.col];
 1260              		.loc 1 193 0
 1261 05f6 07F5B653 		add	r3, r7, #5824
 1262 05fa 03F10C03 		add	r3, r3, #12
 1263 05fe 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 27


 1264 0600 07F5B653 		add	r3, r7, #5824
 1265 0604 03F11003 		add	r3, r3, #16
 1266 0608 1868     		ldr	r0, [r3]
 1267 060a 07F13802 		add	r2, r7, #56
 1268 060e 1C3A     		subs	r2, r2, #28
 1269 0610 0B46     		mov	r3, r1
 1270 0612 DB00     		lsls	r3, r3, #3
 1271 0614 0B44     		add	r3, r3, r1
 1272 0616 5B00     		lsls	r3, r3, #1
 1273 0618 0B44     		add	r3, r3, r1
 1274 061a 0344     		add	r3, r3, r0
 1275 061c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1276 0620 07F5B452 		add	r2, r7, #5760
 1277 0624 02F11002 		add	r2, r2, #16
 1278 0628 1360     		str	r3, [r2]
 194:pathfinding.c ****     numSteps = shortestDist; // save number of steps
 1279              		.loc 1 194 0
 1280 062a 3B4A     		ldr	r2, .L44+4
 1281 062c 07F5B453 		add	r3, r7, #5760
 1282 0630 03F11003 		add	r3, r3, #16
 1283 0634 1B68     		ldr	r3, [r3]
 1284 0636 1360     		str	r3, [r2]
 195:pathfinding.c ****     // retsteps can be generated from here
 196:pathfinding.c ****     struct Location *retSteps = malloc(sizeof(struct Location) * shortestDist); // store every step
 1285              		.loc 1 196 0
 1286 0638 07F5B453 		add	r3, r7, #5760
 1287 063c 03F11003 		add	r3, r3, #16
 1288 0640 1B68     		ldr	r3, [r3]
 1289 0642 DB00     		lsls	r3, r3, #3
 1290 0644 1846     		mov	r0, r3
 1291 0646 FFF7FEFF 		bl	malloc
 1292 064a 0346     		mov	r3, r0
 1293 064c 07F5B352 		add	r2, r7, #5728
 1294 0650 02F10802 		add	r2, r2, #8
 1295 0654 1360     		str	r3, [r2]
 197:pathfinding.c ****     int currentRow = targetlocation.row;
 1296              		.loc 1 197 0
 1297 0656 07F5B653 		add	r3, r7, #5824
 1298 065a 03F10C03 		add	r3, r3, #12
 1299 065e 1B68     		ldr	r3, [r3]
 1300 0660 07F5B452 		add	r2, r7, #5760
 1301 0664 02F10C02 		add	r2, r2, #12
 1302 0668 1360     		str	r3, [r2]
 198:pathfinding.c ****     int currentCol = targetlocation.col;
 1303              		.loc 1 198 0
 1304 066a 07F5B653 		add	r3, r7, #5824
 1305 066e 03F11003 		add	r3, r3, #16
 1306 0672 1B68     		ldr	r3, [r3]
 1307 0674 07F5B452 		add	r2, r7, #5760
 1308 0678 02F10802 		add	r2, r2, #8
 1309 067c 1360     		str	r3, [r2]
 199:pathfinding.c ****     retSteps[shortestDist-1].row = currentRow; 
 1310              		.loc 1 199 0
 1311 067e 07F5B453 		add	r3, r7, #5760
 1312 0682 03F11003 		add	r3, r3, #16
 1313 0686 1B68     		ldr	r3, [r3]
 1314 0688 03F10053 		add	r3, r3, #536870912
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 28


 1315 068c 013B     		subs	r3, r3, #1
 1316 068e DB00     		lsls	r3, r3, #3
 1317 0690 07F5B352 		add	r2, r7, #5728
 1318 0694 02F10802 		add	r2, r2, #8
 1319 0698 1268     		ldr	r2, [r2]
 1320 069a 1344     		add	r3, r3, r2
 1321 069c 07F5B452 		add	r2, r7, #5760
 1322 06a0 02F10C02 		add	r2, r2, #12
 1323 06a4 1268     		ldr	r2, [r2]
 1324 06a6 1A60     		str	r2, [r3]
 200:pathfinding.c ****     retSteps[shortestDist-1].col = currentCol; // add targetLocation to retSteps
 1325              		.loc 1 200 0
 1326 06a8 07F5B453 		add	r3, r7, #5760
 1327 06ac 03F11003 		add	r3, r3, #16
 1328 06b0 1B68     		ldr	r3, [r3]
 1329 06b2 03F10053 		add	r3, r3, #536870912
 1330 06b6 013B     		subs	r3, r3, #1
 1331 06b8 DB00     		lsls	r3, r3, #3
 1332 06ba 07F5B352 		add	r2, r7, #5728
 1333 06be 02F10802 		add	r2, r2, #8
 1334 06c2 1268     		ldr	r2, [r2]
 1335 06c4 1344     		add	r3, r3, r2
 1336 06c6 07F5B452 		add	r2, r7, #5760
 1337 06ca 02F10802 		add	r2, r2, #8
 1338 06ce 1268     		ldr	r2, [r2]
 1339 06d0 5A60     		str	r2, [r3, #4]
 201:pathfinding.c ****     //printf("retSteps[%d]: %d,%d\n", shortestDist-1, currentRow, currentCol);
 202:pathfinding.c ****     map[currentRow][currentCol] = 9; // mark finish location
 1340              		.loc 1 202 0
 1341 06d2 07F5B453 		add	r3, r7, #5760
 1342 06d6 03F10C03 		add	r3, r3, #12
 1343 06da 1B68     		ldr	r3, [r3]
 1344 06dc 4C22     		movs	r2, #76
 1345 06de 02FB03F2 		mul	r2, r2, r3
 1346 06e2 07F11803 		add	r3, r7, #24
 1347 06e6 0C3B     		subs	r3, r3, #12
 1348 06e8 1B68     		ldr	r3, [r3]
 1349 06ea 1344     		add	r3, r3, r2
 1350 06ec 07F5B452 		add	r2, r7, #5760
 1351 06f0 02F10802 		add	r2, r2, #8
 1352 06f4 1268     		ldr	r2, [r2]
 1353 06f6 0921     		movs	r1, #9
 1354 06f8 43F82210 		str	r1, [r3, r2, lsl #2]
 203:pathfinding.c ****     //printf("%d,%d\n", currentRow, currentCol); // print optimal step
 204:pathfinding.c ****     // reconstruct path by reversing paths array and taking shortest distance
 205:pathfinding.c ****     int pathIndex = 0;
 1355              		.loc 1 205 0
 1356 06fc 0023     		movs	r3, #0
 1357 06fe 07F5B452 		add	r2, r7, #5760
 1358 0702 02F10402 		add	r2, r2, #4
 1359 0706 1360     		str	r3, [r2]
 206:pathfinding.c **** 
 207:pathfinding.c ****     while(shortestDist > 0) {    
 1360              		.loc 1 207 0
 1361 0708 0BE1     		b	.L38
 1362              	.L42:
 1363              	.LBB16:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 29


 208:pathfinding.c ****         // make a move, check if valid and is the next step in path
 209:pathfinding.c ****         for (int i = 0; i < sizeof(moves) / sizeof(moves[0]); i++) {
 1364              		.loc 1 209 0
 1365 070a 0023     		movs	r3, #0
 1366 070c 07F5B452 		add	r2, r7, #5760
 1367 0710 1360     		str	r3, [r2]
 1368 0712 00E1     		b	.L39
 1369              	.L45:
 1370              		.align	2
 1371              	.L44:
 1372 0714 00000000 		.word	moves
 1373 0718 D0110000 		.word	numSteps
 1374              	.L41:
 1375              	.LBB17:
 210:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1376              		.loc 1 210 0
 1377 071c 894A     		ldr	r2, .L46
 1378 071e 07F5B453 		add	r3, r7, #5760
 1379 0722 1B68     		ldr	r3, [r3]
 1380 0724 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1381 0728 07F5B453 		add	r3, r7, #5760
 1382 072c 03F10C03 		add	r3, r3, #12
 1383 0730 1B68     		ldr	r3, [r3]
 1384 0732 1344     		add	r3, r3, r2
 1385 0734 07F5B352 		add	r2, r7, #5728
 1386 0738 02F10402 		add	r2, r2, #4
 1387 073c 1360     		str	r3, [r2]
 211:pathfinding.c ****             int newCol = currentCol + moves[i].col;
 1388              		.loc 1 211 0
 1389 073e 814A     		ldr	r2, .L46
 1390 0740 07F5B453 		add	r3, r7, #5760
 1391 0744 1B68     		ldr	r3, [r3]
 1392 0746 DB00     		lsls	r3, r3, #3
 1393 0748 1344     		add	r3, r3, r2
 1394 074a 5A68     		ldr	r2, [r3, #4]
 1395 074c 07F5B453 		add	r3, r7, #5760
 1396 0750 03F10803 		add	r3, r3, #8
 1397 0754 1B68     		ldr	r3, [r3]
 1398 0756 1344     		add	r3, r3, r2
 1399 0758 07F5B352 		add	r2, r7, #5728
 1400 075c 1360     		str	r3, [r2]
 212:pathfinding.c **** 
 213:pathfinding.c ****             if (isValidMove(newRow, newCol, MAX_ROWS, MAX_COLS, map) && distances[newRow][newCol] =
 1401              		.loc 1 213 0
 1402 075e 07F11803 		add	r3, r7, #24
 1403 0762 0C3B     		subs	r3, r3, #12
 1404 0764 1B68     		ldr	r3, [r3]
 1405 0766 0093     		str	r3, [sp]
 1406 0768 1323     		movs	r3, #19
 1407 076a 0F22     		movs	r2, #15
 1408 076c 07F5B351 		add	r1, r7, #5728
 1409 0770 0968     		ldr	r1, [r1]
 1410 0772 07F5B350 		add	r0, r7, #5728
 1411 0776 00F10400 		add	r0, r0, #4
 1412 077a 0068     		ldr	r0, [r0]
 1413 077c FFF7FEFF 		bl	isValidMove
 1414 0780 0346     		mov	r3, r0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 30


 1415 0782 002B     		cmp	r3, #0
 1416 0784 00F0C080 		beq	.L40
 1417              		.loc 1 213 0 is_stmt 0 discriminator 1
 1418 0788 07F13802 		add	r2, r7, #56
 1419 078c 1C3A     		subs	r2, r2, #28
 1420 078e 07F5B353 		add	r3, r7, #5728
 1421 0792 03F10403 		add	r3, r3, #4
 1422 0796 1968     		ldr	r1, [r3]
 1423 0798 0B46     		mov	r3, r1
 1424 079a DB00     		lsls	r3, r3, #3
 1425 079c 0B44     		add	r3, r3, r1
 1426 079e 5B00     		lsls	r3, r3, #1
 1427 07a0 0B44     		add	r3, r3, r1
 1428 07a2 07F5B351 		add	r1, r7, #5728
 1429 07a6 0968     		ldr	r1, [r1]
 1430 07a8 0B44     		add	r3, r3, r1
 1431 07aa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1432 07ae 07F5B453 		add	r3, r7, #5760
 1433 07b2 03F11003 		add	r3, r3, #16
 1434 07b6 1B68     		ldr	r3, [r3]
 1435 07b8 013B     		subs	r3, r3, #1
 1436 07ba 9A42     		cmp	r2, r3
 1437 07bc 40F0A480 		bne	.L40
 214:pathfinding.c ****                 map[newRow][newCol] = 8; // mark optimal step
 1438              		.loc 1 214 0 is_stmt 1
 1439 07c0 07F5B353 		add	r3, r7, #5728
 1440 07c4 03F10403 		add	r3, r3, #4
 1441 07c8 1B68     		ldr	r3, [r3]
 1442 07ca 4C22     		movs	r2, #76
 1443 07cc 02FB03F2 		mul	r2, r2, r3
 1444 07d0 07F11803 		add	r3, r7, #24
 1445 07d4 0C3B     		subs	r3, r3, #12
 1446 07d6 1B68     		ldr	r3, [r3]
 1447 07d8 1344     		add	r3, r3, r2
 1448 07da 07F5B352 		add	r2, r7, #5728
 1449 07de 1268     		ldr	r2, [r2]
 1450 07e0 0821     		movs	r1, #8
 1451 07e2 43F82210 		str	r1, [r3, r2, lsl #2]
 215:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][0] = newRow;
 1452              		.loc 1 215 0
 1453 07e6 5849     		ldr	r1, .L46+4
 1454 07e8 07F5B453 		add	r3, r7, #5760
 1455 07ec 03F10403 		add	r3, r3, #4
 1456 07f0 1B68     		ldr	r3, [r3]
 1457 07f2 07F5B352 		add	r2, r7, #5728
 1458 07f6 02F10402 		add	r2, r2, #4
 1459 07fa 1268     		ldr	r2, [r2]
 1460 07fc 41F83320 		str	r2, [r1, r3, lsl #3]
 216:pathfinding.c ****                 list_of_optimal_coordinates[pathIndex][1] = newCol;
 1461              		.loc 1 216 0
 1462 0800 514A     		ldr	r2, .L46+4
 1463 0802 07F5B453 		add	r3, r7, #5760
 1464 0806 03F10403 		add	r3, r3, #4
 1465 080a 1B68     		ldr	r3, [r3]
 1466 080c DB00     		lsls	r3, r3, #3
 1467 080e 1344     		add	r3, r3, r2
 1468 0810 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 31


 1469 0814 1268     		ldr	r2, [r2]
 1470 0816 5A60     		str	r2, [r3, #4]
 217:pathfinding.c ****                 pathIndex++;
 1471              		.loc 1 217 0
 1472 0818 07F5B453 		add	r3, r7, #5760
 1473 081c 03F10403 		add	r3, r3, #4
 1474 0820 1B68     		ldr	r3, [r3]
 1475 0822 0133     		adds	r3, r3, #1
 1476 0824 07F5B452 		add	r2, r7, #5760
 1477 0828 02F10402 		add	r2, r2, #4
 1478 082c 1360     		str	r3, [r2]
 218:pathfinding.c ****                 // reverse array somewhere
 219:pathfinding.c **** 
 220:pathfinding.c ****                 shortestDist--; // decrement distance
 1479              		.loc 1 220 0
 1480 082e 07F5B453 		add	r3, r7, #5760
 1481 0832 03F11003 		add	r3, r3, #16
 1482 0836 1B68     		ldr	r3, [r3]
 1483 0838 013B     		subs	r3, r3, #1
 1484 083a 07F5B452 		add	r2, r7, #5760
 1485 083e 02F11002 		add	r2, r2, #16
 1486 0842 1360     		str	r3, [r2]
 221:pathfinding.c ****                 currentRow = newRow; 
 1487              		.loc 1 221 0
 1488 0844 07F5B353 		add	r3, r7, #5728
 1489 0848 03F10403 		add	r3, r3, #4
 1490 084c 1B68     		ldr	r3, [r3]
 1491 084e 07F5B452 		add	r2, r7, #5760
 1492 0852 02F10C02 		add	r2, r2, #12
 1493 0856 1360     		str	r3, [r2]
 222:pathfinding.c ****                 currentCol = newCol; // change current location
 1494              		.loc 1 222 0
 1495 0858 07F5B353 		add	r3, r7, #5728
 1496 085c 1B68     		ldr	r3, [r3]
 1497 085e 07F5B452 		add	r2, r7, #5760
 1498 0862 02F10802 		add	r2, r2, #8
 1499 0866 1360     		str	r3, [r2]
 223:pathfinding.c ****                 //printf("retSteps[%d]: %d,%d\n", shortestDist,currentRow,currentCol); // print vis
 224:pathfinding.c ****                 retSteps[shortestDist].row = currentRow; 
 1500              		.loc 1 224 0
 1501 0868 07F5B453 		add	r3, r7, #5760
 1502 086c 03F11003 		add	r3, r3, #16
 1503 0870 1B68     		ldr	r3, [r3]
 1504 0872 DB00     		lsls	r3, r3, #3
 1505 0874 07F5B352 		add	r2, r7, #5728
 1506 0878 02F10802 		add	r2, r2, #8
 1507 087c 1268     		ldr	r2, [r2]
 1508 087e 1344     		add	r3, r3, r2
 1509 0880 07F5B452 		add	r2, r7, #5760
 1510 0884 02F10C02 		add	r2, r2, #12
 1511 0888 1268     		ldr	r2, [r2]
 1512 088a 1A60     		str	r2, [r3]
 225:pathfinding.c ****                 retSteps[shortestDist].col = currentCol; // add currentRow and currentCol to retste
 1513              		.loc 1 225 0
 1514 088c 07F5B453 		add	r3, r7, #5760
 1515 0890 03F11003 		add	r3, r3, #16
 1516 0894 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 32


 1517 0896 DB00     		lsls	r3, r3, #3
 1518 0898 07F5B352 		add	r2, r7, #5728
 1519 089c 02F10802 		add	r2, r2, #8
 1520 08a0 1268     		ldr	r2, [r2]
 1521 08a2 1344     		add	r3, r3, r2
 1522 08a4 07F5B452 		add	r2, r7, #5760
 1523 08a8 02F10802 		add	r2, r2, #8
 1524 08ac 1268     		ldr	r2, [r2]
 1525 08ae 5A60     		str	r2, [r3, #4]
 226:pathfinding.c ****                 if(currentRow == startlocation.row && currentCol == startlocation.col) {
 1526              		.loc 1 226 0
 1527 08b0 07F11803 		add	r3, r7, #24
 1528 08b4 143B     		subs	r3, r3, #20
 1529 08b6 1A68     		ldr	r2, [r3]
 1530 08b8 07F5B453 		add	r3, r7, #5760
 1531 08bc 03F10C03 		add	r3, r3, #12
 1532 08c0 1B68     		ldr	r3, [r3]
 1533 08c2 9A42     		cmp	r2, r3
 1534 08c4 20D1     		bne	.L40
 1535              		.loc 1 226 0 is_stmt 0 discriminator 1
 1536 08c6 07F11803 		add	r3, r7, #24
 1537 08ca 143B     		subs	r3, r3, #20
 1538 08cc 5A68     		ldr	r2, [r3, #4]
 1539 08ce 07F5B453 		add	r3, r7, #5760
 1540 08d2 03F10803 		add	r3, r3, #8
 1541 08d6 1B68     		ldr	r3, [r3]
 1542 08d8 9A42     		cmp	r2, r3
 1543 08da 15D1     		bne	.L40
 227:pathfinding.c ****                     map[currentRow][currentCol] = 2; // mark start location
 1544              		.loc 1 227 0 is_stmt 1
 1545 08dc 07F5B453 		add	r3, r7, #5760
 1546 08e0 03F10C03 		add	r3, r3, #12
 1547 08e4 1B68     		ldr	r3, [r3]
 1548 08e6 4C22     		movs	r2, #76
 1549 08e8 02FB03F2 		mul	r2, r2, r3
 1550 08ec 07F11803 		add	r3, r7, #24
 1551 08f0 0C3B     		subs	r3, r3, #12
 1552 08f2 1B68     		ldr	r3, [r3]
 1553 08f4 1344     		add	r3, r3, r2
 1554 08f6 07F5B452 		add	r2, r7, #5760
 1555 08fa 02F10802 		add	r2, r2, #8
 1556 08fe 1268     		ldr	r2, [r2]
 1557 0900 0221     		movs	r1, #2
 1558 0902 43F82210 		str	r1, [r3, r2, lsl #2]
 228:pathfinding.c ****                     break;
 1559              		.loc 1 228 0
 1560 0906 0CE0     		b	.L38
 1561              	.L40:
 1562              	.LBE17:
 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1563              		.loc 1 209 0 discriminator 2
 1564 0908 07F5B453 		add	r3, r7, #5760
 1565 090c 1B68     		ldr	r3, [r3]
 1566 090e 0133     		adds	r3, r3, #1
 1567 0910 07F5B452 		add	r2, r7, #5760
 1568 0914 1360     		str	r3, [r2]
 1569              	.L39:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 33


 209:pathfinding.c ****             int newRow = currentRow + moves[i].row;
 1570              		.loc 1 209 0 is_stmt 0 discriminator 1
 1571 0916 07F5B453 		add	r3, r7, #5760
 1572 091a 1B68     		ldr	r3, [r3]
 1573 091c 032B     		cmp	r3, #3
 1574 091e 7FF6FDAE 		bls	.L41
 1575              	.L38:
 1576              	.LBE16:
 207:pathfinding.c ****         // make a move, check if valid and is the next step in path
 1577              		.loc 1 207 0 is_stmt 1
 1578 0922 07F5B453 		add	r3, r7, #5760
 1579 0926 03F11003 		add	r3, r3, #16
 1580 092a 1B68     		ldr	r3, [r3]
 1581 092c 002B     		cmp	r3, #0
 1582 092e 3FF7ECAE 		bgt	.L42
 229:pathfinding.c ****                 }   
 230:pathfinding.c ****             }
 231:pathfinding.c ****         }
 232:pathfinding.c ****     }
 233:pathfinding.c **** }
 1583              		.loc 1 233 0
 1584 0932 00BF     		nop
 1585 0934 07F5B557 		add	r7, r7, #5792
 1586 0938 1C37     		adds	r7, r7, #28
 1587              		.cfi_def_cfa_offset 20
 1588 093a BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 093c BDE89040 		pop	{r4, r7, lr}
 1592              		.cfi_restore 14
 1593              		.cfi_restore 7
 1594              		.cfi_restore 4
 1595              		.cfi_def_cfa_offset 8
 1596 0940 02B0     		add	sp, sp, #8
 1597              		.cfi_def_cfa_offset 0
 1598 0942 7047     		bx	lr
 1599              	.L47:
 1600              		.align	2
 1601              	.L46:
 1602 0944 00000000 		.word	moves
 1603 0948 00000000 		.word	list_of_optimal_coordinates
 1604              		.cfi_endproc
 1605              	.LFE4:
 1606              		.size	dijkstra, .-dijkstra
 1607              		.global	ignoreR
 1608              		.bss
 1609              		.align	2
 1610              		.type	ignoreR, %object
 1611              		.size	ignoreR, 4
 1612              	ignoreR:
 1613 11d4 00000000 		.space	4
 1614              		.global	ignoreL
 1615              		.align	2
 1616              		.type	ignoreL, %object
 1617              		.size	ignoreL, 4
 1618              	ignoreL:
 1619 11d8 00000000 		.space	4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 34


 1620              		.section	.rodata
 1621 0003 00       		.align	2
 1622              	.LC1:
 1623 0004 53746F70 		.ascii	"Stop at target\000"
 1623      20617420 
 1623      74617267 
 1623      657400
 1624 0013 00       		.align	2
 1625              	.LC2:
 1626 0014 52696768 		.ascii	"Right Turn\000"
 1626      74205475 
 1626      726E00
 1627 001f 00       		.align	2
 1628              	.LC3:
 1629 0020 4C656674 		.ascii	"Left Turn\000"
 1629      20547572 
 1629      6E00
 1630 002a 0000     		.align	2
 1631              	.LC4:
 1632 002c 466F7277 		.ascii	"Forward until target\000"
 1632      61726420 
 1632      756E7469 
 1632      6C207461 
 1632      72676574 
 1633 0041 000000   		.align	2
 1634              	.LC5:
 1635 0044 466F7277 		.ascii	"Forward; ignore %dL, ignore %dR\012\000"
 1635      6172643B 
 1635      2069676E 
 1635      6F726520 
 1635      25644C2C 
 1636 0065 000000   		.align	2
 1637              	.LC6:
 1638 0068 552D7475 		.ascii	"U-turn\000"
 1638      726E00
 1639              		.section	.text.getPathInstructions,"ax",%progbits
 1640              		.align	2
 1641              		.global	getPathInstructions
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	getPathInstructions, %function
 1645              	getPathInstructions:
 1646              	.LFB5:
 234:pathfinding.c **** 
 235:pathfinding.c **** 
 236:pathfinding.c **** 
 237:pathfinding.c **** // PATHFINDING PROCESSING *====================
 238:pathfinding.c **** 
 239:pathfinding.c **** int ignoreR = 0, ignoreL = 0;
 240:pathfinding.c **** 
 241:pathfinding.c **** // edit global instructionsList variable, fill with instructions
 242:pathfinding.c **** void getPathInstructions(int map[MAX_ROWS][MAX_COLS], int numSteps, struct Location startLocation, 
 1647              		.loc 1 242 0
 1648              		.cfi_startproc
 1649              		@ args = 8, pretend = 0, frame = 80
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 35


 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 94B0     		sub	sp, sp, #80
 1656              		.cfi_def_cfa_offset 88
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 F860     		str	r0, [r7, #12]
 1660 0008 B960     		str	r1, [r7, #8]
 1661 000a 3946     		mov	r1, r7
 1662 000c 81E80C00 		stmia	r1, {r2, r3}
 243:pathfinding.c ****     int currentRow = startLocation.row; 
 1663              		.loc 1 243 0
 1664 0010 3B68     		ldr	r3, [r7]
 1665 0012 FB64     		str	r3, [r7, #76]
 244:pathfinding.c ****     int currentCol = startLocation.col; // initialise with start
 1666              		.loc 1 244 0
 1667 0014 7B68     		ldr	r3, [r7, #4]
 1668 0016 BB64     		str	r3, [r7, #72]
 245:pathfinding.c ****     int listIndex = 0;
 1669              		.loc 1 245 0
 1670 0018 0023     		movs	r3, #0
 1671 001a 7B64     		str	r3, [r7, #68]
 246:pathfinding.c ****     int targetOrientation = getTargetOrientation(targetLocation.row, targetLocation.col);
 1672              		.loc 1 246 0
 1673 001c BB6D     		ldr	r3, [r7, #88]
 1674 001e FA6D     		ldr	r2, [r7, #92]
 1675 0020 1146     		mov	r1, r2
 1676 0022 1846     		mov	r0, r3
 1677 0024 FFF7FEFF 		bl	getTargetOrientation
 1678 0028 0346     		mov	r3, r0
 1679 002a 7B61     		str	r3, [r7, #20]
 247:pathfinding.c ****     // given path, traverse it by calculating number of turns/ turns to skip between each junction
 248:pathfinding.c ****     while(numSteps >= 0) {
 1680              		.loc 1 248 0
 1681 002c C7E2     		b	.L49
 1682              	.L106:
 1683              	.LBB18:
 249:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 1684              		.loc 1 249 0
 1685 002e 9C4B     		ldr	r3, .L111
 1686 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1687 0032 BA6C     		ldr	r2, [r7, #72]
 1688 0034 F96C     		ldr	r1, [r7, #76]
 1689 0036 1846     		mov	r0, r3
 1690 0038 FFF7FEFF 		bl	checkIgnoreTurn
 250:pathfinding.c ****         map[currentRow][currentCol] = 0; // clear visited map location (for when we need to u-turn)
 1691              		.loc 1 250 0
 1692 003c FB6C     		ldr	r3, [r7, #76]
 1693 003e 4C22     		movs	r2, #76
 1694 0040 02FB03F3 		mul	r3, r2, r3
 1695 0044 FA68     		ldr	r2, [r7, #12]
 1696 0046 1344     		add	r3, r3, r2
 1697 0048 BA6C     		ldr	r2, [r7, #72]
 1698 004a 0021     		movs	r1, #0
 1699 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 251:pathfinding.c ****         previousRobotOrientation = currentRobotOrientation;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 36


 1700              		.loc 1 251 0
 1701 0050 934B     		ldr	r3, .L111
 1702 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1703 0054 934B     		ldr	r3, .L111+4
 1704 0056 1A70     		strb	r2, [r3]
 252:pathfinding.c ****         enum InstructionDirection newDirection;
 253:pathfinding.c ****         int nextStep = checkPathDirection(currentRow,currentCol);  // check all four sides for next
 1705              		.loc 1 253 0
 1706 0058 B96C     		ldr	r1, [r7, #72]
 1707 005a F86C     		ldr	r0, [r7, #76]
 1708 005c FFF7FEFF 		bl	checkPathDirection
 1709 0060 0346     		mov	r3, r0
 1710 0062 FB63     		str	r3, [r7, #60]
 254:pathfinding.c ****         if(currentRow == targetLocation.row && currentCol == targetLocation.col) {
 1711              		.loc 1 254 0
 1712 0064 BA6D     		ldr	r2, [r7, #88]
 1713 0066 FB6C     		ldr	r3, [r7, #76]
 1714 0068 9A42     		cmp	r2, r3
 1715 006a 0BD1     		bne	.L50
 1716              		.loc 1 254 0 is_stmt 0 discriminator 1
 1717 006c FA6D     		ldr	r2, [r7, #92]
 1718 006e BB6C     		ldr	r3, [r7, #72]
 1719 0070 9A42     		cmp	r2, r3
 1720 0072 07D1     		bne	.L50
 255:pathfinding.c ****             newDirection = StopAtTarget; // if next step is the target, call forward until target
 1721              		.loc 1 255 0 is_stmt 1
 1722 0074 0523     		movs	r3, #5
 1723 0076 87F84330 		strb	r3, [r7, #67]
 256:pathfinding.c ****             printf("Stop at target\n");
 1724              		.loc 1 256 0
 1725 007a 8B48     		ldr	r0, .L111+8
 1726 007c FFF7FEFF 		bl	puts
 257:pathfinding.c ****             nextStep = 5;
 1727              		.loc 1 257 0
 1728 0080 0523     		movs	r3, #5
 1729 0082 FB63     		str	r3, [r7, #60]
 1730              	.L50:
 258:pathfinding.c ****         }
 259:pathfinding.c ****         switch (nextStep) {
 1731              		.loc 1 259 0
 1732 0084 FB6B     		ldr	r3, [r7, #60]
 1733 0086 032B     		cmp	r3, #3
 1734 0088 00F27282 		bhi	.L110
 1735 008c 01A2     		adr	r2, .L53
 1736 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1737 0092 00BF     		.p2align 2
 1738              	.L53:
 1739 0094 A5000000 		.word	.L52+1
 1740 0098 BD010000 		.word	.L54+1
 1741 009c 07030000 		.word	.L55+1
 1742 00a0 2B040000 		.word	.L56+1
 1743              		.p2align 1
 1744              	.L52:
 260:pathfinding.c ****             case 0: // next step is up
 261:pathfinding.c ****                 currentRobotOrientation = Up;
 1745              		.loc 1 261 0
 1746 00a4 7E4B     		ldr	r3, .L111
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 37


 1747 00a6 0022     		movs	r2, #0
 1748 00a8 1A70     		strb	r2, [r3]
 262:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1749              		.loc 1 262 0
 1750 00aa 7E4B     		ldr	r3, .L111+4
 1751 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 00ae 022B     		cmp	r3, #2
 1753 00b0 0BD1     		bne	.L57
 263:pathfinding.c ****                     newDirection = waitForRightTurn;
 1754              		.loc 1 263 0
 1755 00b2 0223     		movs	r3, #2
 1756 00b4 87F84330 		strb	r3, [r7, #67]
 264:pathfinding.c ****                     printf("Right Turn\n") ; // need right turn
 1757              		.loc 1 264 0
 1758 00b8 7C48     		ldr	r0, .L111+12
 1759 00ba FFF7FEFF 		bl	puts
 265:pathfinding.c ****                     ignoreL = 0;
 1760              		.loc 1 265 0
 1761 00be 7C4B     		ldr	r3, .L111+16
 1762 00c0 0022     		movs	r2, #0
 1763 00c2 1A60     		str	r2, [r3]
 266:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1764              		.loc 1 266 0
 1765 00c4 7B4B     		ldr	r3, .L111+20
 1766 00c6 0022     		movs	r2, #0
 1767 00c8 1A60     		str	r2, [r3]
 1768              	.L57:
 267:pathfinding.c ****                 } 
 268:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1769              		.loc 1 268 0
 1770 00ca 764B     		ldr	r3, .L111+4
 1771 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1772 00ce 032B     		cmp	r3, #3
 1773 00d0 0BD1     		bne	.L58
 269:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1774              		.loc 1 269 0
 1775 00d2 0123     		movs	r3, #1
 1776 00d4 87F84330 		strb	r3, [r7, #67]
 270:pathfinding.c ****                     printf("Left Turn\n") ; // need a right turn
 1777              		.loc 1 270 0
 1778 00d8 7748     		ldr	r0, .L111+24
 1779 00da FFF7FEFF 		bl	puts
 271:pathfinding.c ****                     ignoreL = 0;
 1780              		.loc 1 271 0
 1781 00de 744B     		ldr	r3, .L111+16
 1782 00e0 0022     		movs	r2, #0
 1783 00e2 1A60     		str	r2, [r3]
 272:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1784              		.loc 1 272 0
 1785 00e4 734B     		ldr	r3, .L111+20
 1786 00e6 0022     		movs	r2, #0
 1787 00e8 1A60     		str	r2, [r3]
 1788              	.L58:
 273:pathfinding.c ****                 }
 274:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 1789              		.loc 1 274 0
 1790 00ea 6E4B     		ldr	r3, .L111+4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 38


 1791 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1792 00ee 002B     		cmp	r3, #0
 1793 00f0 56D1     		bne	.L59
 275:pathfinding.c ****                     // check if we only need to go forward to reach target
 276:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1794              		.loc 1 276 0
 1795 00f2 7A69     		ldr	r2, [r7, #20]
 1796 00f4 FB6B     		ldr	r3, [r7, #60]
 1797 00f6 9A42     		cmp	r2, r3
 1798 00f8 47D1     		bne	.L60
 1799              		.loc 1 276 0 is_stmt 0 discriminator 1
 1800 00fa BA6D     		ldr	r2, [r7, #88]
 1801 00fc FB6C     		ldr	r3, [r7, #76]
 1802 00fe 9A42     		cmp	r2, r3
 1803 0100 43D1     		bne	.L60
 1804              	.LBB19:
 277:pathfinding.c ****                         int atTarget = 1;
 1805              		.loc 1 277 0 is_stmt 1
 1806 0102 0123     		movs	r3, #1
 1807 0104 BB63     		str	r3, [r7, #56]
 1808              	.LBB20:
 278:pathfinding.c ****                         // check if we only need to go forward to reach target
 279:pathfinding.c ****                         for(int i = 0; i < currentRow-targetLocation.row; i++) {
 1809              		.loc 1 279 0
 1810 0106 0023     		movs	r3, #0
 1811 0108 7B63     		str	r3, [r7, #52]
 1812 010a 22E0     		b	.L61
 1813              	.L65:
 280:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 281:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 1814              		.loc 1 281 0
 1815 010c FB6C     		ldr	r3, [r7, #76]
 1816 010e 4C22     		movs	r2, #76
 1817 0110 02FB03F3 		mul	r3, r2, r3
 1818 0114 FA68     		ldr	r2, [r7, #12]
 1819 0116 1344     		add	r3, r3, r2
 1820 0118 B96C     		ldr	r1, [r7, #72]
 1821 011a 7A6B     		ldr	r2, [r7, #52]
 1822 011c 8A1A     		subs	r2, r1, r2
 1823 011e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1824 0122 012B     		cmp	r3, #1
 1825 0124 02D1     		bne	.L62
 282:pathfinding.c ****                                 atTarget = 0;
 1826              		.loc 1 282 0
 1827 0126 0023     		movs	r3, #0
 1828 0128 BB63     		str	r3, [r7, #56]
 283:pathfinding.c ****                                 break;
 1829              		.loc 1 283 0
 1830 012a 18E0     		b	.L63
 1831              	.L62:
 284:pathfinding.c ****                             }
 285:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 9) {
 1832              		.loc 1 285 0
 1833 012c FB6C     		ldr	r3, [r7, #76]
 1834 012e 4C22     		movs	r2, #76
 1835 0130 02FB03F3 		mul	r3, r2, r3
 1836 0134 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 39


 1837 0136 1344     		add	r3, r3, r2
 1838 0138 B96C     		ldr	r1, [r7, #72]
 1839 013a 7A6B     		ldr	r2, [r7, #52]
 1840 013c 8A1A     		subs	r2, r1, r2
 1841 013e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1842 0142 092B     		cmp	r3, #9
 1843 0144 02D1     		bne	.L64
 286:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 1844              		.loc 1 286 0
 1845 0146 0123     		movs	r3, #1
 1846 0148 BB63     		str	r3, [r7, #56]
 287:pathfinding.c ****                                 break;
 1847              		.loc 1 287 0
 1848 014a 08E0     		b	.L63
 1849              	.L64:
 279:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1850              		.loc 1 279 0 discriminator 2
 1851 014c 7B6B     		ldr	r3, [r7, #52]
 1852 014e 0133     		adds	r3, r3, #1
 1853 0150 7B63     		str	r3, [r7, #52]
 1854              	.L61:
 279:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 1855              		.loc 1 279 0 is_stmt 0 discriminator 1
 1856 0152 BB6D     		ldr	r3, [r7, #88]
 1857 0154 FA6C     		ldr	r2, [r7, #76]
 1858 0156 D21A     		subs	r2, r2, r3
 1859 0158 7B6B     		ldr	r3, [r7, #52]
 1860 015a 9A42     		cmp	r2, r3
 1861 015c D6DC     		bgt	.L65
 1862              	.L63:
 1863              	.LBE20:
 288:pathfinding.c ****                             }
 289:pathfinding.c ****                         }
 290:pathfinding.c ****                         if(atTarget) {
 1864              		.loc 1 290 0 is_stmt 1
 1865 015e BB6B     		ldr	r3, [r7, #56]
 1866 0160 002B     		cmp	r3, #0
 1867 0162 06D0     		beq	.L66
 291:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 1868              		.loc 1 291 0
 1869 0164 0423     		movs	r3, #4
 1870 0166 87F84330 		strb	r3, [r7, #67]
 292:pathfinding.c ****                             printf("Forward until target\n");
 1871              		.loc 1 292 0
 1872 016a 5448     		ldr	r0, .L111+28
 1873 016c FFF7FEFF 		bl	puts
 1874              	.LBE19:
 276:pathfinding.c ****                         int atTarget = 1;
 1875              		.loc 1 276 0
 1876 0170 16E0     		b	.L59
 1877              	.L66:
 1878              	.LBB21:
 293:pathfinding.c ****                         } else {
 294:pathfinding.c ****                             newDirection = GoForward;
 1879              		.loc 1 294 0
 1880 0172 0023     		movs	r3, #0
 1881 0174 87F84330 		strb	r3, [r7, #67]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 40


 295:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1882              		.loc 1 295 0
 1883 0178 4D4B     		ldr	r3, .L111+16
 1884 017a 1968     		ldr	r1, [r3]
 1885 017c 4D4B     		ldr	r3, .L111+20
 1886 017e 1B68     		ldr	r3, [r3]
 1887 0180 1A46     		mov	r2, r3
 1888 0182 4F48     		ldr	r0, .L111+32
 1889 0184 FFF7FEFF 		bl	printf
 1890              	.LBE21:
 276:pathfinding.c ****                         int atTarget = 1;
 1891              		.loc 1 276 0
 1892 0188 0AE0     		b	.L59
 1893              	.L60:
 296:pathfinding.c ****                         }
 297:pathfinding.c ****                     } else {
 298:pathfinding.c ****                         newDirection = GoForward;
 1894              		.loc 1 298 0
 1895 018a 0023     		movs	r3, #0
 1896 018c 87F84330 		strb	r3, [r7, #67]
 299:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 1897              		.loc 1 299 0
 1898 0190 474B     		ldr	r3, .L111+16
 1899 0192 1968     		ldr	r1, [r3]
 1900 0194 474B     		ldr	r3, .L111+20
 1901 0196 1B68     		ldr	r3, [r3]
 1902 0198 1A46     		mov	r2, r3
 1903 019a 4948     		ldr	r0, .L111+32
 1904 019c FFF7FEFF 		bl	printf
 1905              	.L59:
 300:pathfinding.c ****                     }
 301:pathfinding.c ****                 }
 302:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1906              		.loc 1 302 0
 1907 01a0 404B     		ldr	r3, .L111+4
 1908 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1909 01a4 012B     		cmp	r3, #1
 1910 01a6 05D1     		bne	.L68
 303:pathfinding.c ****                     newDirection = uTurn;
 1911              		.loc 1 303 0
 1912 01a8 0323     		movs	r3, #3
 1913 01aa 87F84330 		strb	r3, [r7, #67]
 304:pathfinding.c ****                     printf("U-turn\n");
 1914              		.loc 1 304 0
 1915 01ae 4548     		ldr	r0, .L111+36
 1916 01b0 FFF7FEFF 		bl	puts
 1917              	.L68:
 305:pathfinding.c ****                 }
 306:pathfinding.c ****                 currentRow--; // jump to new location
 1918              		.loc 1 306 0
 1919 01b4 FB6C     		ldr	r3, [r7, #76]
 1920 01b6 013B     		subs	r3, r3, #1
 1921 01b8 FB64     		str	r3, [r7, #76]
 307:pathfinding.c ****                 break;
 1922              		.loc 1 307 0
 1923 01ba DAE1     		b	.L69
 1924              	.L54:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 41


 308:pathfinding.c ****             case 1: // next step is down
 309:pathfinding.c ****                 currentRobotOrientation = Down;
 1925              		.loc 1 309 0
 1926 01bc 384B     		ldr	r3, .L111
 1927 01be 0122     		movs	r2, #1
 1928 01c0 1A70     		strb	r2, [r3]
 310:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 1929              		.loc 1 310 0
 1930 01c2 384B     		ldr	r3, .L111+4
 1931 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1932 01c6 032B     		cmp	r3, #3
 1933 01c8 0BD1     		bne	.L70
 311:pathfinding.c ****                     newDirection = waitForRightTurn;
 1934              		.loc 1 311 0
 1935 01ca 0223     		movs	r3, #2
 1936 01cc 87F84330 		strb	r3, [r7, #67]
 312:pathfinding.c ****                     printf("Right Turn\n") ; // need Right turn
 1937              		.loc 1 312 0
 1938 01d0 3648     		ldr	r0, .L111+12
 1939 01d2 FFF7FEFF 		bl	puts
 313:pathfinding.c ****                     ignoreL = 0;
 1940              		.loc 1 313 0
 1941 01d6 364B     		ldr	r3, .L111+16
 1942 01d8 0022     		movs	r2, #0
 1943 01da 1A60     		str	r2, [r3]
 314:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1944              		.loc 1 314 0
 1945 01dc 354B     		ldr	r3, .L111+20
 1946 01de 0022     		movs	r2, #0
 1947 01e0 1A60     		str	r2, [r3]
 1948              	.L70:
 315:pathfinding.c ****                 } 
 316:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 1949              		.loc 1 316 0
 1950 01e2 304B     		ldr	r3, .L111+4
 1951 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1952 01e6 022B     		cmp	r3, #2
 1953 01e8 0BD1     		bne	.L71
 317:pathfinding.c ****                     newDirection = waitForLeftTurn;
 1954              		.loc 1 317 0
 1955 01ea 0123     		movs	r3, #1
 1956 01ec 87F84330 		strb	r3, [r7, #67]
 318:pathfinding.c ****                     printf("Left Turn\n") ; // need Left turn
 1957              		.loc 1 318 0
 1958 01f0 3148     		ldr	r0, .L111+24
 1959 01f2 FFF7FEFF 		bl	puts
 319:pathfinding.c ****                     ignoreL = 0;
 1960              		.loc 1 319 0
 1961 01f6 2E4B     		ldr	r3, .L111+16
 1962 01f8 0022     		movs	r2, #0
 1963 01fa 1A60     		str	r2, [r3]
 320:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 1964              		.loc 1 320 0
 1965 01fc 2D4B     		ldr	r3, .L111+20
 1966 01fe 0022     		movs	r2, #0
 1967 0200 1A60     		str	r2, [r3]
 1968              	.L71:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 42


 321:pathfinding.c ****                 }
 322:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 1969              		.loc 1 322 0
 1970 0202 284B     		ldr	r3, .L111+4
 1971 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1972 0206 012B     		cmp	r3, #1
 1973 0208 69D1     		bne	.L72
 323:pathfinding.c ****                    if(targetOrientation == nextStep && targetLocation.row == currentRow) {
 1974              		.loc 1 323 0
 1975 020a 7A69     		ldr	r2, [r7, #20]
 1976 020c FB6B     		ldr	r3, [r7, #60]
 1977 020e 9A42     		cmp	r2, r3
 1978 0210 5AD1     		bne	.L73
 1979              		.loc 1 323 0 is_stmt 0 discriminator 1
 1980 0212 BA6D     		ldr	r2, [r7, #88]
 1981 0214 FB6C     		ldr	r3, [r7, #76]
 1982 0216 9A42     		cmp	r2, r3
 1983 0218 56D1     		bne	.L73
 1984              	.LBB22:
 324:pathfinding.c ****                         int atTarget = 1;
 1985              		.loc 1 324 0 is_stmt 1
 1986 021a 0123     		movs	r3, #1
 1987 021c 3B63     		str	r3, [r7, #48]
 1988              	.LBB23:
 325:pathfinding.c ****                         // check if we only need to go forward to reach target
 326:pathfinding.c ****                         for(int i = 0; i < targetLocation.row; i++) {
 1989              		.loc 1 326 0
 1990 021e 0023     		movs	r3, #0
 1991 0220 FB62     		str	r3, [r7, #44]
 1992 0222 23E0     		b	.L74
 1993              	.L78:
 327:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 328:pathfinding.c ****                             if(map[currentRow + i][currentCol] == 1) {
 1994              		.loc 1 328 0
 1995 0224 FA6C     		ldr	r2, [r7, #76]
 1996 0226 FB6A     		ldr	r3, [r7, #44]
 1997 0228 1344     		add	r3, r3, r2
 1998 022a 1A46     		mov	r2, r3
 1999 022c 4C23     		movs	r3, #76
 2000 022e 03FB02F3 		mul	r3, r3, r2
 2001 0232 FA68     		ldr	r2, [r7, #12]
 2002 0234 1344     		add	r3, r3, r2
 2003 0236 BA6C     		ldr	r2, [r7, #72]
 2004 0238 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2005 023c 012B     		cmp	r3, #1
 2006 023e 02D1     		bne	.L75
 329:pathfinding.c ****                                 atTarget = 0;
 2007              		.loc 1 329 0
 2008 0240 0023     		movs	r3, #0
 2009 0242 3B63     		str	r3, [r7, #48]
 330:pathfinding.c ****                                 break;
 2010              		.loc 1 330 0
 2011 0244 16E0     		b	.L76
 2012              	.L75:
 331:pathfinding.c ****                             }
 332:pathfinding.c ****                             if(map[currentRow][currentCol+i] == 9) {
 2013              		.loc 1 332 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 43


 2014 0246 FB6C     		ldr	r3, [r7, #76]
 2015 0248 4C22     		movs	r2, #76
 2016 024a 02FB03F3 		mul	r3, r2, r3
 2017 024e FA68     		ldr	r2, [r7, #12]
 2018 0250 1344     		add	r3, r3, r2
 2019 0252 B96C     		ldr	r1, [r7, #72]
 2020 0254 FA6A     		ldr	r2, [r7, #44]
 2021 0256 0A44     		add	r2, r2, r1
 2022 0258 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2023 025c 092B     		cmp	r3, #9
 2024 025e 02D1     		bne	.L77
 333:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it 
 2025              		.loc 1 333 0
 2026 0260 0123     		movs	r3, #1
 2027 0262 3B63     		str	r3, [r7, #48]
 334:pathfinding.c ****                                 break;
 2028              		.loc 1 334 0
 2029 0264 06E0     		b	.L76
 2030              	.L77:
 326:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2031              		.loc 1 326 0 discriminator 2
 2032 0266 FB6A     		ldr	r3, [r7, #44]
 2033 0268 0133     		adds	r3, r3, #1
 2034 026a FB62     		str	r3, [r7, #44]
 2035              	.L74:
 326:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2036              		.loc 1 326 0 is_stmt 0 discriminator 1
 2037 026c BA6D     		ldr	r2, [r7, #88]
 2038 026e FB6A     		ldr	r3, [r7, #44]
 2039 0270 9A42     		cmp	r2, r3
 2040 0272 D7DC     		bgt	.L78
 2041              	.L76:
 2042              	.LBE23:
 335:pathfinding.c ****                             }
 336:pathfinding.c ****                         }
 337:pathfinding.c ****                         if(atTarget) {
 2043              		.loc 1 337 0 is_stmt 1
 2044 0274 3B6B     		ldr	r3, [r7, #48]
 2045 0276 002B     		cmp	r3, #0
 2046 0278 06D0     		beq	.L79
 338:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2047              		.loc 1 338 0
 2048 027a 0423     		movs	r3, #4
 2049 027c 87F84330 		strb	r3, [r7, #67]
 339:pathfinding.c ****                             printf("Forward until target\n");
 2050              		.loc 1 339 0
 2051 0280 0E48     		ldr	r0, .L111+28
 2052 0282 FFF7FEFF 		bl	puts
 2053              	.LBE22:
 323:pathfinding.c ****                         int atTarget = 1;
 2054              		.loc 1 323 0
 2055 0286 2AE0     		b	.L72
 2056              	.L79:
 2057              	.LBB24:
 340:pathfinding.c ****                         } else {
 341:pathfinding.c ****                             newDirection = GoForward;
 2058              		.loc 1 341 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 44


 2059 0288 0023     		movs	r3, #0
 2060 028a 87F84330 		strb	r3, [r7, #67]
 342:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2061              		.loc 1 342 0
 2062 028e 084B     		ldr	r3, .L111+16
 2063 0290 1968     		ldr	r1, [r3]
 2064 0292 084B     		ldr	r3, .L111+20
 2065 0294 1B68     		ldr	r3, [r3]
 2066 0296 1A46     		mov	r2, r3
 2067 0298 0948     		ldr	r0, .L111+32
 2068 029a FFF7FEFF 		bl	printf
 2069              	.LBE24:
 323:pathfinding.c ****                         int atTarget = 1;
 2070              		.loc 1 323 0
 2071 029e 1EE0     		b	.L72
 2072              	.L112:
 2073              		.align	2
 2074              	.L111:
 2075 02a0 00000000 		.word	currentRobotOrientation
 2076 02a4 00000000 		.word	previousRobotOrientation
 2077 02a8 04000000 		.word	.LC1
 2078 02ac 14000000 		.word	.LC2
 2079 02b0 00000000 		.word	ignoreL
 2080 02b4 00000000 		.word	ignoreR
 2081 02b8 20000000 		.word	.LC3
 2082 02bc 2C000000 		.word	.LC4
 2083 02c0 44000000 		.word	.LC5
 2084 02c4 68000000 		.word	.LC6
 2085              	.L73:
 343:pathfinding.c ****                         }
 344:pathfinding.c ****                     }      
 345:pathfinding.c ****                     else {
 346:pathfinding.c ****                         newDirection = GoForward;
 2086              		.loc 1 346 0
 2087 02c8 0023     		movs	r3, #0
 2088 02ca 87F84330 		strb	r3, [r7, #67]
 347:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2089              		.loc 1 347 0
 2090 02ce 9F4B     		ldr	r3, .L113
 2091 02d0 1968     		ldr	r1, [r3]
 2092 02d2 9F4B     		ldr	r3, .L113+4
 2093 02d4 1B68     		ldr	r3, [r3]
 2094 02d6 1A46     		mov	r2, r3
 2095 02d8 9E48     		ldr	r0, .L113+8
 2096 02da FFF7FEFF 		bl	printf
 2097              	.L72:
 348:pathfinding.c ****                     }
 349:pathfinding.c ****                 }
 350:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2098              		.loc 1 350 0
 2099 02de 9E4B     		ldr	r3, .L113+12
 2100 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2101 02e2 002B     		cmp	r3, #0
 2102 02e4 0BD1     		bne	.L81
 351:pathfinding.c ****                     newDirection = uTurn;
 2103              		.loc 1 351 0
 2104 02e6 0323     		movs	r3, #3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 45


 2105 02e8 87F84330 		strb	r3, [r7, #67]
 352:pathfinding.c ****                     ignoreL = 0;
 2106              		.loc 1 352 0
 2107 02ec 974B     		ldr	r3, .L113
 2108 02ee 0022     		movs	r2, #0
 2109 02f0 1A60     		str	r2, [r3]
 353:pathfinding.c ****                     ignoreR = 0;
 2110              		.loc 1 353 0
 2111 02f2 974B     		ldr	r3, .L113+4
 2112 02f4 0022     		movs	r2, #0
 2113 02f6 1A60     		str	r2, [r3]
 354:pathfinding.c ****                     printf("U-turn\n");
 2114              		.loc 1 354 0
 2115 02f8 9848     		ldr	r0, .L113+16
 2116 02fa FFF7FEFF 		bl	puts
 2117              	.L81:
 355:pathfinding.c ****                 }
 356:pathfinding.c ****                 currentRow++;
 2118              		.loc 1 356 0
 2119 02fe FB6C     		ldr	r3, [r7, #76]
 2120 0300 0133     		adds	r3, r3, #1
 2121 0302 FB64     		str	r3, [r7, #76]
 357:pathfinding.c ****                 break;
 2122              		.loc 1 357 0
 2123 0304 35E1     		b	.L69
 2124              	.L55:
 358:pathfinding.c ****             case 2: // next step is left
 359:pathfinding.c ****                 currentRobotOrientation = Left;
 2125              		.loc 1 359 0
 2126 0306 964B     		ldr	r3, .L113+20
 2127 0308 0222     		movs	r2, #2
 2128 030a 1A70     		strb	r2, [r3]
 360:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2129              		.loc 1 360 0
 2130 030c 924B     		ldr	r3, .L113+12
 2131 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2132 0310 002B     		cmp	r3, #0
 2133 0312 0BD1     		bne	.L82
 361:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2134              		.loc 1 361 0
 2135 0314 0123     		movs	r3, #1
 2136 0316 87F84330 		strb	r3, [r7, #67]
 362:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2137              		.loc 1 362 0
 2138 031a 9248     		ldr	r0, .L113+24
 2139 031c FFF7FEFF 		bl	puts
 363:pathfinding.c ****                     ignoreL = 0;
 2140              		.loc 1 363 0
 2141 0320 8A4B     		ldr	r3, .L113
 2142 0322 0022     		movs	r2, #0
 2143 0324 1A60     		str	r2, [r3]
 364:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2144              		.loc 1 364 0
 2145 0326 8A4B     		ldr	r3, .L113+4
 2146 0328 0022     		movs	r2, #0
 2147 032a 1A60     		str	r2, [r3]
 2148              	.L82:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 46


 365:pathfinding.c ****                 } 
 366:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2149              		.loc 1 366 0
 2150 032c 8A4B     		ldr	r3, .L113+12
 2151 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 0330 012B     		cmp	r3, #1
 2153 0332 0BD1     		bne	.L83
 367:pathfinding.c ****                     newDirection = waitForRightTurn;
 2154              		.loc 1 367 0
 2155 0334 0223     		movs	r3, #2
 2156 0336 87F84330 		strb	r3, [r7, #67]
 368:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2157              		.loc 1 368 0
 2158 033a 8B48     		ldr	r0, .L113+28
 2159 033c FFF7FEFF 		bl	puts
 369:pathfinding.c ****                     ignoreL = 0;
 2160              		.loc 1 369 0
 2161 0340 824B     		ldr	r3, .L113
 2162 0342 0022     		movs	r2, #0
 2163 0344 1A60     		str	r2, [r3]
 370:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2164              		.loc 1 370 0
 2165 0346 824B     		ldr	r3, .L113+4
 2166 0348 0022     		movs	r2, #0
 2167 034a 1A60     		str	r2, [r3]
 2168              	.L83:
 371:pathfinding.c ****                 }
 372:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2169              		.loc 1 372 0
 2170 034c 824B     		ldr	r3, .L113+12
 2171 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2172 0350 022B     		cmp	r3, #2
 2173 0352 56D1     		bne	.L84
 373:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 2174              		.loc 1 373 0
 2175 0354 7A69     		ldr	r2, [r7, #20]
 2176 0356 FB6B     		ldr	r3, [r7, #60]
 2177 0358 9A42     		cmp	r2, r3
 2178 035a 47D1     		bne	.L85
 2179              		.loc 1 373 0 is_stmt 0 discriminator 1
 2180 035c FA6D     		ldr	r2, [r7, #92]
 2181 035e BB6C     		ldr	r3, [r7, #72]
 2182 0360 9A42     		cmp	r2, r3
 2183 0362 43D1     		bne	.L85
 2184              	.LBB25:
 374:pathfinding.c ****                         int atTarget = 1;
 2185              		.loc 1 374 0 is_stmt 1
 2186 0364 0123     		movs	r3, #1
 2187 0366 BB62     		str	r3, [r7, #40]
 2188              	.LBB26:
 375:pathfinding.c ****                         // check if we only need to go forward to reach target
 376:pathfinding.c ****                         for(int i = 0; i < currentCol-targetLocation.col; i++) {
 2189              		.loc 1 376 0
 2190 0368 0023     		movs	r3, #0
 2191 036a 7B62     		str	r3, [r7, #36]
 2192 036c 22E0     		b	.L86
 2193              	.L90:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 47


 377:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 378:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2194              		.loc 1 378 0
 2195 036e FB6C     		ldr	r3, [r7, #76]
 2196 0370 4C22     		movs	r2, #76
 2197 0372 02FB03F3 		mul	r3, r2, r3
 2198 0376 FA68     		ldr	r2, [r7, #12]
 2199 0378 1344     		add	r3, r3, r2
 2200 037a B96C     		ldr	r1, [r7, #72]
 2201 037c 7A6A     		ldr	r2, [r7, #36]
 2202 037e 8A1A     		subs	r2, r1, r2
 2203 0380 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2204 0384 012B     		cmp	r3, #1
 2205 0386 02D1     		bne	.L87
 379:pathfinding.c ****                                 atTarget = 0;
 2206              		.loc 1 379 0
 2207 0388 0023     		movs	r3, #0
 2208 038a BB62     		str	r3, [r7, #40]
 380:pathfinding.c ****                                 break;
 2209              		.loc 1 380 0
 2210 038c 18E0     		b	.L88
 2211              	.L87:
 381:pathfinding.c ****                             }
 382:pathfinding.c ****                             if(map[currentRow][currentCol - i] == 1) {
 2212              		.loc 1 382 0
 2213 038e FB6C     		ldr	r3, [r7, #76]
 2214 0390 4C22     		movs	r2, #76
 2215 0392 02FB03F3 		mul	r3, r2, r3
 2216 0396 FA68     		ldr	r2, [r7, #12]
 2217 0398 1344     		add	r3, r3, r2
 2218 039a B96C     		ldr	r1, [r7, #72]
 2219 039c 7A6A     		ldr	r2, [r7, #36]
 2220 039e 8A1A     		subs	r2, r1, r2
 2221 03a0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2222 03a4 012B     		cmp	r3, #1
 2223 03a6 02D1     		bne	.L89
 383:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2224              		.loc 1 383 0
 2225 03a8 0123     		movs	r3, #1
 2226 03aa BB62     		str	r3, [r7, #40]
 384:pathfinding.c ****                                 break;
 2227              		.loc 1 384 0
 2228 03ac 08E0     		b	.L88
 2229              	.L89:
 376:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2230              		.loc 1 376 0 discriminator 2
 2231 03ae 7B6A     		ldr	r3, [r7, #36]
 2232 03b0 0133     		adds	r3, r3, #1
 2233 03b2 7B62     		str	r3, [r7, #36]
 2234              	.L86:
 376:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2235              		.loc 1 376 0 is_stmt 0 discriminator 1
 2236 03b4 FB6D     		ldr	r3, [r7, #92]
 2237 03b6 BA6C     		ldr	r2, [r7, #72]
 2238 03b8 D21A     		subs	r2, r2, r3
 2239 03ba 7B6A     		ldr	r3, [r7, #36]
 2240 03bc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 48


 2241 03be D6DC     		bgt	.L90
 2242              	.L88:
 2243              	.LBE26:
 385:pathfinding.c ****                             }
 386:pathfinding.c ****                         }
 387:pathfinding.c ****                         if(atTarget) {
 2244              		.loc 1 387 0 is_stmt 1
 2245 03c0 BB6A     		ldr	r3, [r7, #40]
 2246 03c2 002B     		cmp	r3, #0
 2247 03c4 06D0     		beq	.L91
 388:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2248              		.loc 1 388 0
 2249 03c6 0423     		movs	r3, #4
 2250 03c8 87F84330 		strb	r3, [r7, #67]
 389:pathfinding.c ****                             printf("Forward until target\n");
 2251              		.loc 1 389 0
 2252 03cc 6748     		ldr	r0, .L113+32
 2253 03ce FFF7FEFF 		bl	puts
 2254              	.LBE25:
 373:pathfinding.c ****                         int atTarget = 1;
 2255              		.loc 1 373 0
 2256 03d2 16E0     		b	.L84
 2257              	.L91:
 2258              	.LBB27:
 390:pathfinding.c ****                         } else {
 391:pathfinding.c ****                             newDirection = GoForward;
 2259              		.loc 1 391 0
 2260 03d4 0023     		movs	r3, #0
 2261 03d6 87F84330 		strb	r3, [r7, #67]
 392:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2262              		.loc 1 392 0
 2263 03da 5C4B     		ldr	r3, .L113
 2264 03dc 1968     		ldr	r1, [r3]
 2265 03de 5C4B     		ldr	r3, .L113+4
 2266 03e0 1B68     		ldr	r3, [r3]
 2267 03e2 1A46     		mov	r2, r3
 2268 03e4 5B48     		ldr	r0, .L113+8
 2269 03e6 FFF7FEFF 		bl	printf
 2270              	.LBE27:
 373:pathfinding.c ****                         int atTarget = 1;
 2271              		.loc 1 373 0
 2272 03ea 0AE0     		b	.L84
 2273              	.L85:
 393:pathfinding.c ****                         }
 394:pathfinding.c ****                     } else {
 395:pathfinding.c ****                         newDirection = GoForward;
 2274              		.loc 1 395 0
 2275 03ec 0023     		movs	r3, #0
 2276 03ee 87F84330 		strb	r3, [r7, #67]
 396:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2277              		.loc 1 396 0
 2278 03f2 564B     		ldr	r3, .L113
 2279 03f4 1968     		ldr	r1, [r3]
 2280 03f6 564B     		ldr	r3, .L113+4
 2281 03f8 1B68     		ldr	r3, [r3]
 2282 03fa 1A46     		mov	r2, r3
 2283 03fc 5548     		ldr	r0, .L113+8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 49


 2284 03fe FFF7FEFF 		bl	printf
 2285              	.L84:
 397:pathfinding.c ****                     }
 398:pathfinding.c ****                 }
 399:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2286              		.loc 1 399 0
 2287 0402 554B     		ldr	r3, .L113+12
 2288 0404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2289 0406 032B     		cmp	r3, #3
 2290 0408 0BD1     		bne	.L93
 400:pathfinding.c ****                     newDirection = uTurn;
 2291              		.loc 1 400 0
 2292 040a 0323     		movs	r3, #3
 2293 040c 87F84330 		strb	r3, [r7, #67]
 401:pathfinding.c ****                     ignoreL = 0;
 2294              		.loc 1 401 0
 2295 0410 4E4B     		ldr	r3, .L113
 2296 0412 0022     		movs	r2, #0
 2297 0414 1A60     		str	r2, [r3]
 402:pathfinding.c ****                     ignoreR = 0;
 2298              		.loc 1 402 0
 2299 0416 4E4B     		ldr	r3, .L113+4
 2300 0418 0022     		movs	r2, #0
 2301 041a 1A60     		str	r2, [r3]
 403:pathfinding.c ****                     printf("U-turn\n");
 2302              		.loc 1 403 0
 2303 041c 4F48     		ldr	r0, .L113+16
 2304 041e FFF7FEFF 		bl	puts
 2305              	.L93:
 404:pathfinding.c ****                 }
 405:pathfinding.c ****                 currentCol--;
 2306              		.loc 1 405 0
 2307 0422 BB6C     		ldr	r3, [r7, #72]
 2308 0424 013B     		subs	r3, r3, #1
 2309 0426 BB64     		str	r3, [r7, #72]
 406:pathfinding.c ****                 break;
 2310              		.loc 1 406 0
 2311 0428 A3E0     		b	.L69
 2312              	.L56:
 407:pathfinding.c ****             case 3: // next step is right
 408:pathfinding.c ****                 currentRobotOrientation = Right;
 2313              		.loc 1 408 0
 2314 042a 4D4B     		ldr	r3, .L113+20
 2315 042c 0322     		movs	r2, #3
 2316 042e 1A70     		strb	r2, [r3]
 409:pathfinding.c ****                 if(previousRobotOrientation == Up) {
 2317              		.loc 1 409 0
 2318 0430 494B     		ldr	r3, .L113+12
 2319 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0434 002B     		cmp	r3, #0
 2321 0436 0BD1     		bne	.L94
 410:pathfinding.c ****                     newDirection = waitForRightTurn;
 2322              		.loc 1 410 0
 2323 0438 0223     		movs	r3, #2
 2324 043a 87F84330 		strb	r3, [r7, #67]
 411:pathfinding.c ****                     printf("Right Turn\n") ; // need a right turn
 2325              		.loc 1 411 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 50


 2326 043e 4A48     		ldr	r0, .L113+28
 2327 0440 FFF7FEFF 		bl	puts
 412:pathfinding.c ****                     ignoreL = 0;
 2328              		.loc 1 412 0
 2329 0444 414B     		ldr	r3, .L113
 2330 0446 0022     		movs	r2, #0
 2331 0448 1A60     		str	r2, [r3]
 413:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2332              		.loc 1 413 0
 2333 044a 414B     		ldr	r3, .L113+4
 2334 044c 0022     		movs	r2, #0
 2335 044e 1A60     		str	r2, [r3]
 2336              	.L94:
 414:pathfinding.c ****                 }
 415:pathfinding.c ****                 if(previousRobotOrientation == Down) {
 2337              		.loc 1 415 0
 2338 0450 414B     		ldr	r3, .L113+12
 2339 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2340 0454 012B     		cmp	r3, #1
 2341 0456 0BD1     		bne	.L95
 416:pathfinding.c ****                     newDirection = waitForLeftTurn;
 2342              		.loc 1 416 0
 2343 0458 0123     		movs	r3, #1
 2344 045a 87F84330 		strb	r3, [r7, #67]
 417:pathfinding.c ****                     printf("Left Turn\n") ; // need left turn
 2345              		.loc 1 417 0
 2346 045e 4148     		ldr	r0, .L113+24
 2347 0460 FFF7FEFF 		bl	puts
 418:pathfinding.c ****                     ignoreL = 0;
 2348              		.loc 1 418 0
 2349 0464 394B     		ldr	r3, .L113
 2350 0466 0022     		movs	r2, #0
 2351 0468 1A60     		str	r2, [r3]
 419:pathfinding.c ****                     ignoreR = 0; // reset ignoreL/ ignoreR
 2352              		.loc 1 419 0
 2353 046a 394B     		ldr	r3, .L113+4
 2354 046c 0022     		movs	r2, #0
 2355 046e 1A60     		str	r2, [r3]
 2356              	.L95:
 420:pathfinding.c ****                 }
 421:pathfinding.c ****                 if(previousRobotOrientation == Right) {
 2357              		.loc 1 421 0
 2358 0470 394B     		ldr	r3, .L113+12
 2359 0472 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2360 0474 032B     		cmp	r3, #3
 2361 0476 54D1     		bne	.L96
 422:pathfinding.c ****                     if(targetOrientation == nextStep && targetLocation.col == currentCol) {
 2362              		.loc 1 422 0
 2363 0478 7A69     		ldr	r2, [r7, #20]
 2364 047a FB6B     		ldr	r3, [r7, #60]
 2365 047c 9A42     		cmp	r2, r3
 2366 047e 45D1     		bne	.L97
 2367              		.loc 1 422 0 is_stmt 0 discriminator 1
 2368 0480 FA6D     		ldr	r2, [r7, #92]
 2369 0482 BB6C     		ldr	r3, [r7, #72]
 2370 0484 9A42     		cmp	r2, r3
 2371 0486 41D1     		bne	.L97
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 51


 2372              	.LBB28:
 423:pathfinding.c ****                         int atTarget = 1;
 2373              		.loc 1 423 0 is_stmt 1
 2374 0488 0123     		movs	r3, #1
 2375 048a 3B62     		str	r3, [r7, #32]
 2376              	.LBB29:
 424:pathfinding.c ****                         // check if we only need to go forward to reach target
 425:pathfinding.c ****                         for(int i = 0; i < targetLocation.col; i++) {
 2377              		.loc 1 425 0
 2378 048c 0023     		movs	r3, #0
 2379 048e FB61     		str	r3, [r7, #28]
 2380 0490 22E0     		b	.L98
 2381              	.L102:
 426:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 427:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 1) {
 2382              		.loc 1 427 0
 2383 0492 FB6C     		ldr	r3, [r7, #76]
 2384 0494 4C22     		movs	r2, #76
 2385 0496 02FB03F3 		mul	r3, r2, r3
 2386 049a FA68     		ldr	r2, [r7, #12]
 2387 049c 1344     		add	r3, r3, r2
 2388 049e B96C     		ldr	r1, [r7, #72]
 2389 04a0 FA69     		ldr	r2, [r7, #28]
 2390 04a2 0A44     		add	r2, r2, r1
 2391 04a4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2392 04a8 012B     		cmp	r3, #1
 2393 04aa 02D1     		bne	.L99
 428:pathfinding.c ****                                 atTarget = 0;
 2394              		.loc 1 428 0
 2395 04ac 0023     		movs	r3, #0
 2396 04ae 3B62     		str	r3, [r7, #32]
 429:pathfinding.c ****                                 break;
 2397              		.loc 1 429 0
 2398 04b0 16E0     		b	.L100
 2399              	.L99:
 430:pathfinding.c ****                             }
 431:pathfinding.c ****                             if(map[currentRow][currentCol + i] == 9) {
 2400              		.loc 1 431 0
 2401 04b2 FB6C     		ldr	r3, [r7, #76]
 2402 04b4 4C22     		movs	r2, #76
 2403 04b6 02FB03F3 		mul	r3, r2, r3
 2404 04ba FA68     		ldr	r2, [r7, #12]
 2405 04bc 1344     		add	r3, r3, r2
 2406 04be B96C     		ldr	r1, [r7, #72]
 2407 04c0 FA69     		ldr	r2, [r7, #28]
 2408 04c2 0A44     		add	r2, r2, r1
 2409 04c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2410 04c8 092B     		cmp	r3, #9
 2411 04ca 02D1     		bne	.L101
 432:pathfinding.c ****                                 atTarget = 1; // found target with no obstacles before it
 2412              		.loc 1 432 0
 2413 04cc 0123     		movs	r3, #1
 2414 04ce 3B62     		str	r3, [r7, #32]
 433:pathfinding.c ****                                 break;
 2415              		.loc 1 433 0
 2416 04d0 06E0     		b	.L100
 2417              	.L101:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 52


 425:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2418              		.loc 1 425 0 discriminator 2
 2419 04d2 FB69     		ldr	r3, [r7, #28]
 2420 04d4 0133     		adds	r3, r3, #1
 2421 04d6 FB61     		str	r3, [r7, #28]
 2422              	.L98:
 425:pathfinding.c ****                             // check columns in front to see if there are any obstacles
 2423              		.loc 1 425 0 is_stmt 0 discriminator 1
 2424 04d8 FA6D     		ldr	r2, [r7, #92]
 2425 04da FB69     		ldr	r3, [r7, #28]
 2426 04dc 9A42     		cmp	r2, r3
 2427 04de D8DC     		bgt	.L102
 2428              	.L100:
 2429              	.LBE29:
 434:pathfinding.c ****                             }
 435:pathfinding.c ****                         }
 436:pathfinding.c ****                         if(atTarget) {
 2430              		.loc 1 436 0 is_stmt 1
 2431 04e0 3B6A     		ldr	r3, [r7, #32]
 2432 04e2 002B     		cmp	r3, #0
 2433 04e4 06D0     		beq	.L103
 437:pathfinding.c ****                             newDirection = ForwardUntilTarget;
 2434              		.loc 1 437 0
 2435 04e6 0423     		movs	r3, #4
 2436 04e8 87F84330 		strb	r3, [r7, #67]
 438:pathfinding.c ****                             printf("Forward until target\n");
 2437              		.loc 1 438 0
 2438 04ec 1F48     		ldr	r0, .L113+32
 2439 04ee FFF7FEFF 		bl	puts
 2440              	.LBE28:
 422:pathfinding.c ****                         int atTarget = 1;
 2441              		.loc 1 422 0
 2442 04f2 16E0     		b	.L96
 2443              	.L103:
 2444              	.LBB30:
 439:pathfinding.c ****                         } else {
 440:pathfinding.c ****                             newDirection = GoForward;
 2445              		.loc 1 440 0
 2446 04f4 0023     		movs	r3, #0
 2447 04f6 87F84330 		strb	r3, [r7, #67]
 441:pathfinding.c ****                             printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2448              		.loc 1 441 0
 2449 04fa 144B     		ldr	r3, .L113
 2450 04fc 1968     		ldr	r1, [r3]
 2451 04fe 144B     		ldr	r3, .L113+4
 2452 0500 1B68     		ldr	r3, [r3]
 2453 0502 1A46     		mov	r2, r3
 2454 0504 1348     		ldr	r0, .L113+8
 2455 0506 FFF7FEFF 		bl	printf
 2456              	.LBE30:
 422:pathfinding.c ****                         int atTarget = 1;
 2457              		.loc 1 422 0
 2458 050a 0AE0     		b	.L96
 2459              	.L97:
 442:pathfinding.c ****                         }
 443:pathfinding.c ****                     } else {
 444:pathfinding.c ****                         newDirection = GoForward;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 53


 2460              		.loc 1 444 0
 2461 050c 0023     		movs	r3, #0
 2462 050e 87F84330 		strb	r3, [r7, #67]
 445:pathfinding.c ****                         printf("Forward; ignore %dL, ignore %dR\n",  ignoreL, ignoreR);
 2463              		.loc 1 445 0
 2464 0512 0E4B     		ldr	r3, .L113
 2465 0514 1968     		ldr	r1, [r3]
 2466 0516 0E4B     		ldr	r3, .L113+4
 2467 0518 1B68     		ldr	r3, [r3]
 2468 051a 1A46     		mov	r2, r3
 2469 051c 0D48     		ldr	r0, .L113+8
 2470 051e FFF7FEFF 		bl	printf
 2471              	.L96:
 446:pathfinding.c ****                     }
 447:pathfinding.c ****                 }
 448:pathfinding.c ****                 if(previousRobotOrientation == Left) {
 2472              		.loc 1 448 0
 2473 0522 0D4B     		ldr	r3, .L113+12
 2474 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2475 0526 022B     		cmp	r3, #2
 2476 0528 0BD1     		bne	.L105
 449:pathfinding.c ****                     newDirection = uTurn;
 2477              		.loc 1 449 0
 2478 052a 0323     		movs	r3, #3
 2479 052c 87F84330 		strb	r3, [r7, #67]
 450:pathfinding.c ****                     ignoreL = 0;
 2480              		.loc 1 450 0
 2481 0530 064B     		ldr	r3, .L113
 2482 0532 0022     		movs	r2, #0
 2483 0534 1A60     		str	r2, [r3]
 451:pathfinding.c ****                     ignoreR = 0;
 2484              		.loc 1 451 0
 2485 0536 064B     		ldr	r3, .L113+4
 2486 0538 0022     		movs	r2, #0
 2487 053a 1A60     		str	r2, [r3]
 452:pathfinding.c ****                     printf("U-turn\n");
 2488              		.loc 1 452 0
 2489 053c 0748     		ldr	r0, .L113+16
 2490 053e FFF7FEFF 		bl	puts
 2491              	.L105:
 453:pathfinding.c ****                 }
 454:pathfinding.c ****                 currentCol++;
 2492              		.loc 1 454 0
 2493 0542 BB6C     		ldr	r3, [r7, #72]
 2494 0544 0133     		adds	r3, r3, #1
 2495 0546 BB64     		str	r3, [r7, #72]
 455:pathfinding.c ****                 break;
 2496              		.loc 1 455 0
 2497 0548 13E0     		b	.L69
 2498              	.L114:
 2499 054a 00BF     		.align	2
 2500              	.L113:
 2501 054c 00000000 		.word	ignoreL
 2502 0550 00000000 		.word	ignoreR
 2503 0554 44000000 		.word	.LC5
 2504 0558 00000000 		.word	previousRobotOrientation
 2505 055c 68000000 		.word	.LC6
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 54


 2506 0560 00000000 		.word	currentRobotOrientation
 2507 0564 20000000 		.word	.LC3
 2508 0568 14000000 		.word	.LC2
 2509 056c 2C000000 		.word	.LC4
 2510              	.L110:
 456:pathfinding.c ****             default:
 457:pathfinding.c ****                 break;
 2511              		.loc 1 457 0
 2512 0570 00BF     		nop
 2513              	.L69:
 458:pathfinding.c ****         }
 459:pathfinding.c ****         
 460:pathfinding.c ****         // add new direction to list
 461:pathfinding.c ****         instructionsList[listIndex].direction = newDirection;
 2514              		.loc 1 461 0
 2515 0572 2D4A     		ldr	r2, .L115
 2516 0574 7B6C     		ldr	r3, [r7, #68]
 2517 0576 1B01     		lsls	r3, r3, #4
 2518 0578 1344     		add	r3, r3, r2
 2519 057a 97F84320 		ldrb	r2, [r7, #67]
 2520 057e 1A70     		strb	r2, [r3]
 462:pathfinding.c ****         instructionsList[listIndex].ignoreL = ignoreL;
 2521              		.loc 1 462 0
 2522 0580 2A4B     		ldr	r3, .L115+4
 2523 0582 1A68     		ldr	r2, [r3]
 2524 0584 2849     		ldr	r1, .L115
 2525 0586 7B6C     		ldr	r3, [r7, #68]
 2526 0588 1B01     		lsls	r3, r3, #4
 2527 058a 0B44     		add	r3, r3, r1
 2528 058c 0433     		adds	r3, r3, #4
 2529 058e 1A60     		str	r2, [r3]
 463:pathfinding.c ****         instructionsList[listIndex].ignoreR = ignoreR;
 2530              		.loc 1 463 0
 2531 0590 274B     		ldr	r3, .L115+8
 2532 0592 1A68     		ldr	r2, [r3]
 2533 0594 2449     		ldr	r1, .L115
 2534 0596 7B6C     		ldr	r3, [r7, #68]
 2535 0598 1B01     		lsls	r3, r3, #4
 2536 059a 0B44     		add	r3, r3, r1
 2537 059c 0833     		adds	r3, r3, #8
 2538 059e 1A60     		str	r2, [r3]
 464:pathfinding.c ****         instructionsList[listIndex].expectedOrientation = previousRobotOrientation;
 2539              		.loc 1 464 0
 2540 05a0 244B     		ldr	r3, .L115+12
 2541 05a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2542 05a4 204A     		ldr	r2, .L115
 2543 05a6 7B6C     		ldr	r3, [r7, #68]
 2544 05a8 1B01     		lsls	r3, r3, #4
 2545 05aa 1344     		add	r3, r3, r2
 2546 05ac 0C33     		adds	r3, r3, #12
 2547 05ae 0A46     		mov	r2, r1
 2548 05b0 1A70     		strb	r2, [r3]
 465:pathfinding.c ****         listIndex++; // increment instruction list index
 2549              		.loc 1 465 0
 2550 05b2 7B6C     		ldr	r3, [r7, #68]
 2551 05b4 0133     		adds	r3, r3, #1
 2552 05b6 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 55


 466:pathfinding.c ****         numSteps--; // decrement numSteps
 2553              		.loc 1 466 0
 2554 05b8 BB68     		ldr	r3, [r7, #8]
 2555 05ba 013B     		subs	r3, r3, #1
 2556 05bc BB60     		str	r3, [r7, #8]
 2557              	.L49:
 2558              	.LBE18:
 248:pathfinding.c ****         checkIgnoreTurn(currentRobotOrientation, currentRow, currentCol); // if a 0 is adjacent to 
 2559              		.loc 1 248 0
 2560 05be BB68     		ldr	r3, [r7, #8]
 2561 05c0 002B     		cmp	r3, #0
 2562 05c2 BFF634AD 		bge	.L106
 2563              	.LBB31:
 467:pathfinding.c ****     }
 468:pathfinding.c ****     // process list, remove repeated forward outputs
 469:pathfinding.c ****     for(int i = 0; i < listIndex-1; i ++) {
 2564              		.loc 1 469 0
 2565 05c6 0023     		movs	r3, #0
 2566 05c8 BB61     		str	r3, [r7, #24]
 2567 05ca 23E0     		b	.L107
 2568              	.L109:
 470:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2569              		.loc 1 470 0
 2570 05cc 164A     		ldr	r2, .L115
 2571 05ce BB69     		ldr	r3, [r7, #24]
 2572 05d0 1B01     		lsls	r3, r3, #4
 2573 05d2 1344     		add	r3, r3, r2
 2574 05d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2575 05d6 BB69     		ldr	r3, [r7, #24]
 2576 05d8 0133     		adds	r3, r3, #1
 2577 05da 1349     		ldr	r1, .L115
 2578 05dc 1B01     		lsls	r3, r3, #4
 2579 05de 0B44     		add	r3, r3, r1
 2580 05e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2581 05e2 9A42     		cmp	r2, r3
 2582 05e4 13D1     		bne	.L108
 471:pathfinding.c ****             instructionsList[i].direction = Skip;
 2583              		.loc 1 471 0
 2584 05e6 104A     		ldr	r2, .L115
 2585 05e8 BB69     		ldr	r3, [r7, #24]
 2586 05ea 1B01     		lsls	r3, r3, #4
 2587 05ec 1344     		add	r3, r3, r2
 2588 05ee 0622     		movs	r2, #6
 2589 05f0 1A70     		strb	r2, [r3]
 472:pathfinding.c ****             instructionsList[i].ignoreL = 0;
 2590              		.loc 1 472 0
 2591 05f2 0D4A     		ldr	r2, .L115
 2592 05f4 BB69     		ldr	r3, [r7, #24]
 2593 05f6 1B01     		lsls	r3, r3, #4
 2594 05f8 1344     		add	r3, r3, r2
 2595 05fa 0433     		adds	r3, r3, #4
 2596 05fc 0022     		movs	r2, #0
 2597 05fe 1A60     		str	r2, [r3]
 473:pathfinding.c ****             instructionsList[i].ignoreR = 0;
 2598              		.loc 1 473 0
 2599 0600 094A     		ldr	r2, .L115
 2600 0602 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 56


 2601 0604 1B01     		lsls	r3, r3, #4
 2602 0606 1344     		add	r3, r3, r2
 2603 0608 0833     		adds	r3, r3, #8
 2604 060a 0022     		movs	r2, #0
 2605 060c 1A60     		str	r2, [r3]
 2606              	.L108:
 469:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2607              		.loc 1 469 0 discriminator 2
 2608 060e BB69     		ldr	r3, [r7, #24]
 2609 0610 0133     		adds	r3, r3, #1
 2610 0612 BB61     		str	r3, [r7, #24]
 2611              	.L107:
 469:pathfinding.c ****         if(instructionsList[i].direction == instructionsList[i+1].direction) {
 2612              		.loc 1 469 0 is_stmt 0 discriminator 1
 2613 0614 7B6C     		ldr	r3, [r7, #68]
 2614 0616 5A1E     		subs	r2, r3, #1
 2615 0618 BB69     		ldr	r3, [r7, #24]
 2616 061a 9A42     		cmp	r2, r3
 2617 061c D6DC     		bgt	.L109
 2618              	.LBE31:
 474:pathfinding.c ****         }
 475:pathfinding.c ****     }
 476:pathfinding.c **** }
 2619              		.loc 1 476 0 is_stmt 1
 2620 061e 00BF     		nop
 2621 0620 5037     		adds	r7, r7, #80
 2622              		.cfi_def_cfa_offset 8
 2623 0622 BD46     		mov	sp, r7
 2624              		.cfi_def_cfa_register 13
 2625              		@ sp needed
 2626 0624 80BD     		pop	{r7, pc}
 2627              	.L116:
 2628 0626 00BF     		.align	2
 2629              	.L115:
 2630 0628 00000000 		.word	instructionsList
 2631 062c 00000000 		.word	ignoreL
 2632 0630 00000000 		.word	ignoreR
 2633 0634 00000000 		.word	previousRobotOrientation
 2634              		.cfi_endproc
 2635              	.LFE5:
 2636              		.size	getPathInstructions, .-getPathInstructions
 2637              		.section	.text.checkPathDirection,"ax",%progbits
 2638              		.align	2
 2639              		.global	checkPathDirection
 2640              		.thumb
 2641              		.thumb_func
 2642              		.type	checkPathDirection, %function
 2643              	checkPathDirection:
 2644              	.LFB6:
 477:pathfinding.c **** 
 478:pathfinding.c **** uint8_t checkPathDirection(int currentRow, int currentCol) {
 2645              		.loc 1 478 0
 2646              		.cfi_startproc
 2647              		@ args = 0, pretend = 0, frame = 8
 2648              		@ frame_needed = 1, uses_anonymous_args = 0
 2649              		@ link register save eliminated.
 2650 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 57


 2651              		.cfi_def_cfa_offset 4
 2652              		.cfi_offset 7, -4
 2653 0002 83B0     		sub	sp, sp, #12
 2654              		.cfi_def_cfa_offset 16
 2655 0004 00AF     		add	r7, sp, #0
 2656              		.cfi_def_cfa_register 7
 2657 0006 7860     		str	r0, [r7, #4]
 2658 0008 3960     		str	r1, [r7]
 479:pathfinding.c ****     // map is cleared beforehand, so no need to check- this code will allow for 180deg turns
 480:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 8 || map[currentRow - 1][currentCol] == 9) {
 2659              		.loc 1 480 0
 2660 000a 7B68     		ldr	r3, [r7, #4]
 2661 000c 5A1E     		subs	r2, r3, #1
 2662 000e 3E49     		ldr	r1, .L127
 2663 0010 1346     		mov	r3, r2
 2664 0012 DB00     		lsls	r3, r3, #3
 2665 0014 1344     		add	r3, r3, r2
 2666 0016 5B00     		lsls	r3, r3, #1
 2667 0018 1344     		add	r3, r3, r2
 2668 001a 3A68     		ldr	r2, [r7]
 2669 001c 1344     		add	r3, r3, r2
 2670 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2671 0022 082B     		cmp	r3, #8
 2672 0024 0DD0     		beq	.L118
 2673              		.loc 1 480 0 is_stmt 0 discriminator 1
 2674 0026 7B68     		ldr	r3, [r7, #4]
 2675 0028 5A1E     		subs	r2, r3, #1
 2676 002a 3749     		ldr	r1, .L127
 2677 002c 1346     		mov	r3, r2
 2678 002e DB00     		lsls	r3, r3, #3
 2679 0030 1344     		add	r3, r3, r2
 2680 0032 5B00     		lsls	r3, r3, #1
 2681 0034 1344     		add	r3, r3, r2
 2682 0036 3A68     		ldr	r2, [r7]
 2683 0038 1344     		add	r3, r3, r2
 2684 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2685 003e 092B     		cmp	r3, #9
 2686 0040 01D1     		bne	.L119
 2687              	.L118:
 481:pathfinding.c ****         return 0; // up 
 2688              		.loc 1 481 0 is_stmt 1
 2689 0042 0023     		movs	r3, #0
 2690 0044 5AE0     		b	.L120
 2691              	.L119:
 482:pathfinding.c ****     }
 483:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 8 || map[currentRow + 1][currentCol] == 9) {
 2692              		.loc 1 483 0
 2693 0046 7B68     		ldr	r3, [r7, #4]
 2694 0048 5A1C     		adds	r2, r3, #1
 2695 004a 2F49     		ldr	r1, .L127
 2696 004c 1346     		mov	r3, r2
 2697 004e DB00     		lsls	r3, r3, #3
 2698 0050 1344     		add	r3, r3, r2
 2699 0052 5B00     		lsls	r3, r3, #1
 2700 0054 1344     		add	r3, r3, r2
 2701 0056 3A68     		ldr	r2, [r7]
 2702 0058 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 58


 2703 005a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2704 005e 082B     		cmp	r3, #8
 2705 0060 0DD0     		beq	.L121
 2706              		.loc 1 483 0 is_stmt 0 discriminator 1
 2707 0062 7B68     		ldr	r3, [r7, #4]
 2708 0064 5A1C     		adds	r2, r3, #1
 2709 0066 2849     		ldr	r1, .L127
 2710 0068 1346     		mov	r3, r2
 2711 006a DB00     		lsls	r3, r3, #3
 2712 006c 1344     		add	r3, r3, r2
 2713 006e 5B00     		lsls	r3, r3, #1
 2714 0070 1344     		add	r3, r3, r2
 2715 0072 3A68     		ldr	r2, [r7]
 2716 0074 1344     		add	r3, r3, r2
 2717 0076 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2718 007a 092B     		cmp	r3, #9
 2719 007c 01D1     		bne	.L122
 2720              	.L121:
 484:pathfinding.c ****         return 1; // down
 2721              		.loc 1 484 0 is_stmt 1
 2722 007e 0123     		movs	r3, #1
 2723 0080 3CE0     		b	.L120
 2724              	.L122:
 485:pathfinding.c ****     }
 486:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 8 || map[currentRow][currentCol - 1] == 9) {
 2725              		.loc 1 486 0
 2726 0082 3B68     		ldr	r3, [r7]
 2727 0084 591E     		subs	r1, r3, #1
 2728 0086 2048     		ldr	r0, .L127
 2729 0088 7A68     		ldr	r2, [r7, #4]
 2730 008a 1346     		mov	r3, r2
 2731 008c DB00     		lsls	r3, r3, #3
 2732 008e 1344     		add	r3, r3, r2
 2733 0090 5B00     		lsls	r3, r3, #1
 2734 0092 1344     		add	r3, r3, r2
 2735 0094 0B44     		add	r3, r3, r1
 2736 0096 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2737 009a 082B     		cmp	r3, #8
 2738 009c 0DD0     		beq	.L123
 2739              		.loc 1 486 0 is_stmt 0 discriminator 1
 2740 009e 3B68     		ldr	r3, [r7]
 2741 00a0 591E     		subs	r1, r3, #1
 2742 00a2 1948     		ldr	r0, .L127
 2743 00a4 7A68     		ldr	r2, [r7, #4]
 2744 00a6 1346     		mov	r3, r2
 2745 00a8 DB00     		lsls	r3, r3, #3
 2746 00aa 1344     		add	r3, r3, r2
 2747 00ac 5B00     		lsls	r3, r3, #1
 2748 00ae 1344     		add	r3, r3, r2
 2749 00b0 0B44     		add	r3, r3, r1
 2750 00b2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2751 00b6 092B     		cmp	r3, #9
 2752 00b8 01D1     		bne	.L124
 2753              	.L123:
 487:pathfinding.c ****         return 2; // left
 2754              		.loc 1 487 0 is_stmt 1
 2755 00ba 0223     		movs	r3, #2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 59


 2756 00bc 1EE0     		b	.L120
 2757              	.L124:
 488:pathfinding.c ****     }
 489:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 8 || map[currentRow][currentCol + 1] == 9) {
 2758              		.loc 1 489 0
 2759 00be 3B68     		ldr	r3, [r7]
 2760 00c0 591C     		adds	r1, r3, #1
 2761 00c2 1148     		ldr	r0, .L127
 2762 00c4 7A68     		ldr	r2, [r7, #4]
 2763 00c6 1346     		mov	r3, r2
 2764 00c8 DB00     		lsls	r3, r3, #3
 2765 00ca 1344     		add	r3, r3, r2
 2766 00cc 5B00     		lsls	r3, r3, #1
 2767 00ce 1344     		add	r3, r3, r2
 2768 00d0 0B44     		add	r3, r3, r1
 2769 00d2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2770 00d6 082B     		cmp	r3, #8
 2771 00d8 0DD0     		beq	.L125
 2772              		.loc 1 489 0 is_stmt 0 discriminator 1
 2773 00da 3B68     		ldr	r3, [r7]
 2774 00dc 591C     		adds	r1, r3, #1
 2775 00de 0A48     		ldr	r0, .L127
 2776 00e0 7A68     		ldr	r2, [r7, #4]
 2777 00e2 1346     		mov	r3, r2
 2778 00e4 DB00     		lsls	r3, r3, #3
 2779 00e6 1344     		add	r3, r3, r2
 2780 00e8 5B00     		lsls	r3, r3, #1
 2781 00ea 1344     		add	r3, r3, r2
 2782 00ec 0B44     		add	r3, r3, r1
 2783 00ee 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2784 00f2 092B     		cmp	r3, #9
 2785 00f4 01D1     		bne	.L126
 2786              	.L125:
 490:pathfinding.c ****         return 3; // right
 2787              		.loc 1 490 0 is_stmt 1
 2788 00f6 0323     		movs	r3, #3
 2789 00f8 00E0     		b	.L120
 2790              	.L126:
 491:pathfinding.c ****     }
 492:pathfinding.c ****     return 5; // default- will never reach this
 2791              		.loc 1 492 0
 2792 00fa 0523     		movs	r3, #5
 2793              	.L120:
 493:pathfinding.c **** }
 2794              		.loc 1 493 0
 2795 00fc 1846     		mov	r0, r3
 2796 00fe 0C37     		adds	r7, r7, #12
 2797              		.cfi_def_cfa_offset 4
 2798 0100 BD46     		mov	sp, r7
 2799              		.cfi_def_cfa_register 13
 2800              		@ sp needed
 2801 0102 80BC     		pop	{r7}
 2802              		.cfi_restore 7
 2803              		.cfi_def_cfa_offset 0
 2804 0104 7047     		bx	lr
 2805              	.L128:
 2806 0106 00BF     		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 60


 2807              	.L127:
 2808 0108 00000000 		.word	map
 2809              		.cfi_endproc
 2810              	.LFE6:
 2811              		.size	checkPathDirection, .-checkPathDirection
 2812              		.section	.text.checkIgnoreTurn,"ax",%progbits
 2813              		.align	2
 2814              		.global	checkIgnoreTurn
 2815              		.thumb
 2816              		.thumb_func
 2817              		.type	checkIgnoreTurn, %function
 2818              	checkIgnoreTurn:
 2819              	.LFB7:
 494:pathfinding.c **** 
 495:pathfinding.c **** void checkIgnoreTurn(enum OrientationState robotOrientation, int currentRow, int currentCol) {
 2820              		.loc 1 495 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 16
 2823              		@ frame_needed = 1, uses_anonymous_args = 0
 2824              		@ link register save eliminated.
 2825 0000 80B4     		push	{r7}
 2826              		.cfi_def_cfa_offset 4
 2827              		.cfi_offset 7, -4
 2828 0002 85B0     		sub	sp, sp, #20
 2829              		.cfi_def_cfa_offset 24
 2830 0004 00AF     		add	r7, sp, #0
 2831              		.cfi_def_cfa_register 7
 2832 0006 0346     		mov	r3, r0
 2833 0008 B960     		str	r1, [r7, #8]
 2834 000a 7A60     		str	r2, [r7, #4]
 2835 000c FB73     		strb	r3, [r7, #15]
 496:pathfinding.c ****     // UP - 0 DOWN - 1 LEFT - 2 RIGHT - 3
 497:pathfinding.c ****     if (map[currentRow - 1][currentCol] == 0) { // if the row above is a 0
 2836              		.loc 1 497 0
 2837 000e BB68     		ldr	r3, [r7, #8]
 2838 0010 5A1E     		subs	r2, r3, #1
 2839 0012 4149     		ldr	r1, .L147
 2840 0014 1346     		mov	r3, r2
 2841 0016 DB00     		lsls	r3, r3, #3
 2842 0018 1344     		add	r3, r3, r2
 2843 001a 5B00     		lsls	r3, r3, #1
 2844 001c 1344     		add	r3, r3, r2
 2845 001e 7A68     		ldr	r2, [r7, #4]
 2846 0020 1344     		add	r3, r3, r2
 2847 0022 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2848 0026 002B     		cmp	r3, #0
 2849 0028 11D1     		bne	.L130
 498:pathfinding.c ****         switch (robotOrientation) {
 2850              		.loc 1 498 0
 2851 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2852 002c 022B     		cmp	r3, #2
 2853 002e 02D0     		beq	.L132
 2854 0030 032B     		cmp	r3, #3
 2855 0032 06D0     		beq	.L133
 499:pathfinding.c ****             case Left:
 500:pathfinding.c ****                 ignoreR++;
 501:pathfinding.c ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 61


 502:pathfinding.c ****             case Right:
 503:pathfinding.c ****                 ignoreL++;
 504:pathfinding.c ****                 break;
 505:pathfinding.c ****             default:
 506:pathfinding.c ****                 break; // ignore when going up and down
 2856              		.loc 1 506 0
 2857 0034 0BE0     		b	.L130
 2858              	.L132:
 500:pathfinding.c ****                 break;
 2859              		.loc 1 500 0
 2860 0036 394B     		ldr	r3, .L147+4
 2861 0038 1B68     		ldr	r3, [r3]
 2862 003a 0133     		adds	r3, r3, #1
 2863 003c 374A     		ldr	r2, .L147+4
 2864 003e 1360     		str	r3, [r2]
 501:pathfinding.c ****             case Right:
 2865              		.loc 1 501 0
 2866 0040 05E0     		b	.L130
 2867              	.L133:
 503:pathfinding.c ****                 break;
 2868              		.loc 1 503 0
 2869 0042 374B     		ldr	r3, .L147+8
 2870 0044 1B68     		ldr	r3, [r3]
 2871 0046 0133     		adds	r3, r3, #1
 2872 0048 354A     		ldr	r2, .L147+8
 2873 004a 1360     		str	r3, [r2]
 504:pathfinding.c ****             default:
 2874              		.loc 1 504 0
 2875 004c 00BF     		nop
 2876              	.L130:
 507:pathfinding.c ****         }
 508:pathfinding.c ****     }
 509:pathfinding.c ****     if (map[currentRow + 1][currentCol] == 0) { // if row below is a 0
 2877              		.loc 1 509 0
 2878 004e BB68     		ldr	r3, [r7, #8]
 2879 0050 5A1C     		adds	r2, r3, #1
 2880 0052 3149     		ldr	r1, .L147
 2881 0054 1346     		mov	r3, r2
 2882 0056 DB00     		lsls	r3, r3, #3
 2883 0058 1344     		add	r3, r3, r2
 2884 005a 5B00     		lsls	r3, r3, #1
 2885 005c 1344     		add	r3, r3, r2
 2886 005e 7A68     		ldr	r2, [r7, #4]
 2887 0060 1344     		add	r3, r3, r2
 2888 0062 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2889 0066 002B     		cmp	r3, #0
 2890 0068 11D1     		bne	.L134
 510:pathfinding.c ****         switch (robotOrientation) {
 2891              		.loc 1 510 0
 2892 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2893 006c 022B     		cmp	r3, #2
 2894 006e 02D0     		beq	.L136
 2895 0070 032B     		cmp	r3, #3
 2896 0072 06D0     		beq	.L137
 511:pathfinding.c ****             case Left:
 512:pathfinding.c ****                 ignoreL++;
 513:pathfinding.c ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 62


 514:pathfinding.c ****             case Right:
 515:pathfinding.c ****                 ignoreR++;
 516:pathfinding.c ****                 break;
 517:pathfinding.c ****             default:
 518:pathfinding.c ****                 break;
 2897              		.loc 1 518 0
 2898 0074 0BE0     		b	.L134
 2899              	.L136:
 512:pathfinding.c ****                 break;
 2900              		.loc 1 512 0
 2901 0076 2A4B     		ldr	r3, .L147+8
 2902 0078 1B68     		ldr	r3, [r3]
 2903 007a 0133     		adds	r3, r3, #1
 2904 007c 284A     		ldr	r2, .L147+8
 2905 007e 1360     		str	r3, [r2]
 513:pathfinding.c ****             case Right:
 2906              		.loc 1 513 0
 2907 0080 05E0     		b	.L134
 2908              	.L137:
 515:pathfinding.c ****                 break;
 2909              		.loc 1 515 0
 2910 0082 264B     		ldr	r3, .L147+4
 2911 0084 1B68     		ldr	r3, [r3]
 2912 0086 0133     		adds	r3, r3, #1
 2913 0088 244A     		ldr	r2, .L147+4
 2914 008a 1360     		str	r3, [r2]
 516:pathfinding.c ****             default:
 2915              		.loc 1 516 0
 2916 008c 00BF     		nop
 2917              	.L134:
 519:pathfinding.c ****         }
 520:pathfinding.c ****     }
 521:pathfinding.c ****     if (map[currentRow][currentCol - 1] == 0) { 
 2918              		.loc 1 521 0
 2919 008e 7B68     		ldr	r3, [r7, #4]
 2920 0090 591E     		subs	r1, r3, #1
 2921 0092 2148     		ldr	r0, .L147
 2922 0094 BA68     		ldr	r2, [r7, #8]
 2923 0096 1346     		mov	r3, r2
 2924 0098 DB00     		lsls	r3, r3, #3
 2925 009a 1344     		add	r3, r3, r2
 2926 009c 5B00     		lsls	r3, r3, #1
 2927 009e 1344     		add	r3, r3, r2
 2928 00a0 0B44     		add	r3, r3, r1
 2929 00a2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2930 00a6 002B     		cmp	r3, #0
 2931 00a8 11D1     		bne	.L138
 522:pathfinding.c ****         switch (robotOrientation) {
 2932              		.loc 1 522 0
 2933 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2934 00ac 002B     		cmp	r3, #0
 2935 00ae 02D0     		beq	.L140
 2936 00b0 012B     		cmp	r3, #1
 2937 00b2 06D0     		beq	.L141
 523:pathfinding.c ****             case Up:
 524:pathfinding.c ****                 ignoreL++;
 525:pathfinding.c ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 63


 526:pathfinding.c ****             case Down:
 527:pathfinding.c ****                 ignoreR++;
 528:pathfinding.c ****                 break;
 529:pathfinding.c ****             default:
 530:pathfinding.c ****                 break;
 2938              		.loc 1 530 0
 2939 00b4 0BE0     		b	.L138
 2940              	.L140:
 524:pathfinding.c ****                 break;
 2941              		.loc 1 524 0
 2942 00b6 1A4B     		ldr	r3, .L147+8
 2943 00b8 1B68     		ldr	r3, [r3]
 2944 00ba 0133     		adds	r3, r3, #1
 2945 00bc 184A     		ldr	r2, .L147+8
 2946 00be 1360     		str	r3, [r2]
 525:pathfinding.c ****             case Down:
 2947              		.loc 1 525 0
 2948 00c0 05E0     		b	.L138
 2949              	.L141:
 527:pathfinding.c ****                 break;
 2950              		.loc 1 527 0
 2951 00c2 164B     		ldr	r3, .L147+4
 2952 00c4 1B68     		ldr	r3, [r3]
 2953 00c6 0133     		adds	r3, r3, #1
 2954 00c8 144A     		ldr	r2, .L147+4
 2955 00ca 1360     		str	r3, [r2]
 528:pathfinding.c ****             default:
 2956              		.loc 1 528 0
 2957 00cc 00BF     		nop
 2958              	.L138:
 531:pathfinding.c ****         }
 532:pathfinding.c ****     }
 533:pathfinding.c ****     if (map[currentRow][currentCol + 1] == 0) {
 2959              		.loc 1 533 0
 2960 00ce 7B68     		ldr	r3, [r7, #4]
 2961 00d0 591C     		adds	r1, r3, #1
 2962 00d2 1148     		ldr	r0, .L147
 2963 00d4 BA68     		ldr	r2, [r7, #8]
 2964 00d6 1346     		mov	r3, r2
 2965 00d8 DB00     		lsls	r3, r3, #3
 2966 00da 1344     		add	r3, r3, r2
 2967 00dc 5B00     		lsls	r3, r3, #1
 2968 00de 1344     		add	r3, r3, r2
 2969 00e0 0B44     		add	r3, r3, r1
 2970 00e2 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2971 00e6 002B     		cmp	r3, #0
 2972 00e8 11D1     		bne	.L146
 534:pathfinding.c ****         switch (robotOrientation) {
 2973              		.loc 1 534 0
 2974 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2975 00ec 002B     		cmp	r3, #0
 2976 00ee 02D0     		beq	.L144
 2977 00f0 012B     		cmp	r3, #1
 2978 00f2 06D0     		beq	.L145
 535:pathfinding.c ****             case Up:
 536:pathfinding.c ****                 ignoreR++;
 537:pathfinding.c ****                 break;
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 64


 538:pathfinding.c ****             case Down:
 539:pathfinding.c ****                 ignoreL++;
 540:pathfinding.c ****                 break;
 541:pathfinding.c ****             default:
 542:pathfinding.c ****                 break;
 2979              		.loc 1 542 0
 2980 00f4 0BE0     		b	.L142
 2981              	.L144:
 536:pathfinding.c ****                 break;
 2982              		.loc 1 536 0
 2983 00f6 094B     		ldr	r3, .L147+4
 2984 00f8 1B68     		ldr	r3, [r3]
 2985 00fa 0133     		adds	r3, r3, #1
 2986 00fc 074A     		ldr	r2, .L147+4
 2987 00fe 1360     		str	r3, [r2]
 537:pathfinding.c ****             case Down:
 2988              		.loc 1 537 0
 2989 0100 05E0     		b	.L142
 2990              	.L145:
 539:pathfinding.c ****                 break;
 2991              		.loc 1 539 0
 2992 0102 074B     		ldr	r3, .L147+8
 2993 0104 1B68     		ldr	r3, [r3]
 2994 0106 0133     		adds	r3, r3, #1
 2995 0108 054A     		ldr	r2, .L147+8
 2996 010a 1360     		str	r3, [r2]
 540:pathfinding.c ****             default:
 2997              		.loc 1 540 0
 2998 010c 00BF     		nop
 2999              	.L142:
 3000              	.L146:
 543:pathfinding.c ****         }
 544:pathfinding.c ****     }
 545:pathfinding.c **** }
 3001              		.loc 1 545 0
 3002 010e 00BF     		nop
 3003 0110 1437     		adds	r7, r7, #20
 3004              		.cfi_def_cfa_offset 4
 3005 0112 BD46     		mov	sp, r7
 3006              		.cfi_def_cfa_register 13
 3007              		@ sp needed
 3008 0114 80BC     		pop	{r7}
 3009              		.cfi_restore 7
 3010              		.cfi_def_cfa_offset 0
 3011 0116 7047     		bx	lr
 3012              	.L148:
 3013              		.align	2
 3014              	.L147:
 3015 0118 00000000 		.word	map
 3016 011c 00000000 		.word	ignoreR
 3017 0120 00000000 		.word	ignoreL
 3018              		.cfi_endproc
 3019              	.LFE7:
 3020              		.size	checkIgnoreTurn, .-checkIgnoreTurn
 3021              		.section	.text.getTargetOrientation,"ax",%progbits
 3022              		.align	2
 3023              		.global	getTargetOrientation
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 65


 3024              		.thumb
 3025              		.thumb_func
 3026              		.type	getTargetOrientation, %function
 3027              	getTargetOrientation:
 3028              	.LFB8:
 546:pathfinding.c **** 
 547:pathfinding.c **** uint8_t getTargetOrientation(int targetRow, int targetCol) {
 3029              		.loc 1 547 0
 3030              		.cfi_startproc
 3031              		@ args = 0, pretend = 0, frame = 8
 3032              		@ frame_needed = 1, uses_anonymous_args = 0
 3033              		@ link register save eliminated.
 3034 0000 80B4     		push	{r7}
 3035              		.cfi_def_cfa_offset 4
 3036              		.cfi_offset 7, -4
 3037 0002 83B0     		sub	sp, sp, #12
 3038              		.cfi_def_cfa_offset 16
 3039 0004 00AF     		add	r7, sp, #0
 3040              		.cfi_def_cfa_register 7
 3041 0006 7860     		str	r0, [r7, #4]
 3042 0008 3960     		str	r1, [r7]
 548:pathfinding.c ****     if(map[targetRow + 1][targetCol] == 8) {
 3043              		.loc 1 548 0
 3044 000a 7B68     		ldr	r3, [r7, #4]
 3045 000c 5A1C     		adds	r2, r3, #1
 3046 000e 2249     		ldr	r1, .L155
 3047 0010 1346     		mov	r3, r2
 3048 0012 DB00     		lsls	r3, r3, #3
 3049 0014 1344     		add	r3, r3, r2
 3050 0016 5B00     		lsls	r3, r3, #1
 3051 0018 1344     		add	r3, r3, r2
 3052 001a 3A68     		ldr	r2, [r7]
 3053 001c 1344     		add	r3, r3, r2
 3054 001e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3055 0022 082B     		cmp	r3, #8
 3056 0024 01D1     		bne	.L150
 549:pathfinding.c ****         return 0; // robot will be travelling up
 3057              		.loc 1 549 0
 3058 0026 0023     		movs	r3, #0
 3059 0028 30E0     		b	.L151
 3060              	.L150:
 550:pathfinding.c ****     }
 551:pathfinding.c ****     if(map[targetRow - 1][targetCol] == 8) {
 3061              		.loc 1 551 0
 3062 002a 7B68     		ldr	r3, [r7, #4]
 3063 002c 5A1E     		subs	r2, r3, #1
 3064 002e 1A49     		ldr	r1, .L155
 3065 0030 1346     		mov	r3, r2
 3066 0032 DB00     		lsls	r3, r3, #3
 3067 0034 1344     		add	r3, r3, r2
 3068 0036 5B00     		lsls	r3, r3, #1
 3069 0038 1344     		add	r3, r3, r2
 3070 003a 3A68     		ldr	r2, [r7]
 3071 003c 1344     		add	r3, r3, r2
 3072 003e 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3073 0042 082B     		cmp	r3, #8
 3074 0044 01D1     		bne	.L152
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 66


 552:pathfinding.c ****         return 1; // robot will be travelling down
 3075              		.loc 1 552 0
 3076 0046 0123     		movs	r3, #1
 3077 0048 20E0     		b	.L151
 3078              	.L152:
 553:pathfinding.c ****     }
 554:pathfinding.c ****     if(map[targetRow][targetCol + 1] == 8) {
 3079              		.loc 1 554 0
 3080 004a 3B68     		ldr	r3, [r7]
 3081 004c 591C     		adds	r1, r3, #1
 3082 004e 1248     		ldr	r0, .L155
 3083 0050 7A68     		ldr	r2, [r7, #4]
 3084 0052 1346     		mov	r3, r2
 3085 0054 DB00     		lsls	r3, r3, #3
 3086 0056 1344     		add	r3, r3, r2
 3087 0058 5B00     		lsls	r3, r3, #1
 3088 005a 1344     		add	r3, r3, r2
 3089 005c 0B44     		add	r3, r3, r1
 3090 005e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3091 0062 082B     		cmp	r3, #8
 3092 0064 01D1     		bne	.L153
 555:pathfinding.c ****         return 2; // robot will be travelling left
 3093              		.loc 1 555 0
 3094 0066 0223     		movs	r3, #2
 3095 0068 10E0     		b	.L151
 3096              	.L153:
 556:pathfinding.c ****     }
 557:pathfinding.c ****     if(map[targetRow][targetCol - 1] == 8) {
 3097              		.loc 1 557 0
 3098 006a 3B68     		ldr	r3, [r7]
 3099 006c 591E     		subs	r1, r3, #1
 3100 006e 0A48     		ldr	r0, .L155
 3101 0070 7A68     		ldr	r2, [r7, #4]
 3102 0072 1346     		mov	r3, r2
 3103 0074 DB00     		lsls	r3, r3, #3
 3104 0076 1344     		add	r3, r3, r2
 3105 0078 5B00     		lsls	r3, r3, #1
 3106 007a 1344     		add	r3, r3, r2
 3107 007c 0B44     		add	r3, r3, r1
 3108 007e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3109 0082 082B     		cmp	r3, #8
 3110 0084 01D1     		bne	.L154
 558:pathfinding.c ****         return 3; // robot will be travelling right
 3111              		.loc 1 558 0
 3112 0086 0323     		movs	r3, #3
 3113 0088 00E0     		b	.L151
 3114              	.L154:
 559:pathfinding.c ****     }
 560:pathfinding.c ****     return 5; // placeholder
 3115              		.loc 1 560 0
 3116 008a 0523     		movs	r3, #5
 3117              	.L151:
 561:pathfinding.c **** }
 3118              		.loc 1 561 0
 3119 008c 1846     		mov	r0, r3
 3120 008e 0C37     		adds	r7, r7, #12
 3121              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 67


 3122 0090 BD46     		mov	sp, r7
 3123              		.cfi_def_cfa_register 13
 3124              		@ sp needed
 3125 0092 80BC     		pop	{r7}
 3126              		.cfi_restore 7
 3127              		.cfi_def_cfa_offset 0
 3128 0094 7047     		bx	lr
 3129              	.L156:
 3130 0096 00BF     		.align	2
 3131              	.L155:
 3132 0098 00000000 		.word	map
 3133              		.cfi_endproc
 3134              	.LFE8:
 3135              		.size	getTargetOrientation, .-getTargetOrientation
 3136              		.section	.text.instructionsListLength,"ax",%progbits
 3137              		.align	2
 3138              		.global	instructionsListLength
 3139              		.thumb
 3140              		.thumb_func
 3141              		.type	instructionsListLength, %function
 3142              	instructionsListLength:
 3143              	.LFB9:
 562:pathfinding.c **** uint8_t instructionsListLength() {
 3144              		.loc 1 562 0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 0
 3147              		@ frame_needed = 1, uses_anonymous_args = 0
 3148              		@ link register save eliminated.
 3149 0000 80B4     		push	{r7}
 3150              		.cfi_def_cfa_offset 4
 3151              		.cfi_offset 7, -4
 3152 0002 00AF     		add	r7, sp, #0
 3153              		.cfi_def_cfa_register 7
 563:pathfinding.c ****     return numSteps;
 3154              		.loc 1 563 0
 3155 0004 034B     		ldr	r3, .L159
 3156 0006 1B68     		ldr	r3, [r3]
 3157 0008 DBB2     		uxtb	r3, r3
 564:pathfinding.c **** }
 3158              		.loc 1 564 0
 3159 000a 1846     		mov	r0, r3
 3160 000c BD46     		mov	sp, r7
 3161              		.cfi_def_cfa_register 13
 3162              		@ sp needed
 3163 000e 80BC     		pop	{r7}
 3164              		.cfi_restore 7
 3165              		.cfi_def_cfa_offset 0
 3166 0010 7047     		bx	lr
 3167              	.L160:
 3168 0012 00BF     		.align	2
 3169              	.L159:
 3170 0014 D0110000 		.word	numSteps
 3171              		.cfi_endproc
 3172              	.LFE9:
 3173              		.size	instructionsListLength, .-instructionsListLength
 3174              		.section	.text.findPath,"ax",%progbits
 3175              		.align	2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 68


 3176              		.global	findPath
 3177              		.thumb
 3178              		.thumb_func
 3179              		.type	findPath, %function
 3180              	findPath:
 3181              	.LFB10:
 565:pathfinding.c **** 
 566:pathfinding.c **** Instruction * findPath(int map[MAX_ROWS][MAX_COLS], int food_list[5][2], int i) {
 3182              		.loc 1 566 0
 3183              		.cfi_startproc
 3184              		@ args = 0, pretend = 0, frame = 32
 3185              		@ frame_needed = 1, uses_anonymous_args = 0
 3186 0000 90B5     		push	{r4, r7, lr}
 3187              		.cfi_def_cfa_offset 12
 3188              		.cfi_offset 4, -12
 3189              		.cfi_offset 7, -8
 3190              		.cfi_offset 14, -4
 3191 0002 8BB0     		sub	sp, sp, #44
 3192              		.cfi_def_cfa_offset 56
 3193 0004 02AF     		add	r7, sp, #8
 3194              		.cfi_def_cfa 7, 48
 3195 0006 F860     		str	r0, [r7, #12]
 3196 0008 B960     		str	r1, [r7, #8]
 3197 000a 7A60     		str	r2, [r7, #4]
 567:pathfinding.c ****     //clearMap(map); // clear map between each pass
 568:pathfinding.c ****     struct Location startLocation, targetLocation;
 569:pathfinding.c ****     startLocation.row = start_pos[0];
 3198              		.loc 1 569 0
 3199 000c 174B     		ldr	r3, .L163
 3200 000e 1B68     		ldr	r3, [r3]
 3201 0010 BB61     		str	r3, [r7, #24]
 570:pathfinding.c ****     startLocation.col = start_pos[1]; // need to change every pass
 3202              		.loc 1 570 0
 3203 0012 164B     		ldr	r3, .L163
 3204 0014 5B68     		ldr	r3, [r3, #4]
 3205 0016 FB61     		str	r3, [r7, #28]
 571:pathfinding.c ****     targetLocation.row = food_list[i][0];
 3206              		.loc 1 571 0
 3207 0018 7B68     		ldr	r3, [r7, #4]
 3208 001a DB00     		lsls	r3, r3, #3
 3209 001c BA68     		ldr	r2, [r7, #8]
 3210 001e 1344     		add	r3, r3, r2
 3211 0020 1B68     		ldr	r3, [r3]
 3212 0022 3B61     		str	r3, [r7, #16]
 572:pathfinding.c ****     targetLocation.col = food_list[i][1];
 3213              		.loc 1 572 0
 3214 0024 7B68     		ldr	r3, [r7, #4]
 3215 0026 DB00     		lsls	r3, r3, #3
 3216 0028 BA68     		ldr	r2, [r7, #8]
 3217 002a 1344     		add	r3, r3, r2
 3218 002c 5B68     		ldr	r3, [r3, #4]
 3219 002e 7B61     		str	r3, [r7, #20]
 573:pathfinding.c ****     dijkstra(map, startLocation, targetLocation); // find shortest path
 3220              		.loc 1 573 0
 3221 0030 7B69     		ldr	r3, [r7, #20]
 3222 0032 0093     		str	r3, [sp]
 3223 0034 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 69


 3224 0036 07F11802 		add	r2, r7, #24
 3225 003a 06CA     		ldmia	r2, {r1, r2}
 3226 003c F868     		ldr	r0, [r7, #12]
 3227 003e FFF7FEFF 		bl	dijkstra
 574:pathfinding.c ****     getPathInstructions(map,numSteps,startLocation,targetLocation); // populate global instructions
 3228              		.loc 1 574 0
 3229 0042 0B4B     		ldr	r3, .L163+4
 3230 0044 1C68     		ldr	r4, [r3]
 3231 0046 6A46     		mov	r2, sp
 3232 0048 07F11003 		add	r3, r7, #16
 3233 004c 93E80300 		ldmia	r3, {r0, r1}
 3234 0050 82E80300 		stmia	r2, {r0, r1}
 3235 0054 07F11803 		add	r3, r7, #24
 3236 0058 0CCB     		ldmia	r3, {r2, r3}
 3237 005a 2146     		mov	r1, r4
 3238 005c F868     		ldr	r0, [r7, #12]
 3239 005e FFF7FEFF 		bl	getPathInstructions
 575:pathfinding.c ****     return instructionsList;
 3240              		.loc 1 575 0
 3241 0062 044B     		ldr	r3, .L163+8
 576:pathfinding.c **** }
 3242              		.loc 1 576 0
 3243 0064 1846     		mov	r0, r3
 3244 0066 2437     		adds	r7, r7, #36
 3245              		.cfi_def_cfa_offset 12
 3246 0068 BD46     		mov	sp, r7
 3247              		.cfi_def_cfa_register 13
 3248              		@ sp needed
 3249 006a 90BD     		pop	{r4, r7, pc}
 3250              	.L164:
 3251              		.align	2
 3252              	.L163:
 3253 006c 00000000 		.word	start_pos
 3254 0070 D0110000 		.word	numSteps
 3255 0074 00000000 		.word	instructionsList
 3256              		.cfi_endproc
 3257              	.LFE10:
 3258              		.size	findPath, .-findPath
 3259              		.text
 3260              	.Letext0:
 3261              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3262              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 3263              		.file 4 "pathfinding.h"
 3264              		.section	.debug_info,"",%progbits
 3265              	.Ldebug_info0:
 3266 0000 D3080000 		.4byte	0x8d3
 3267 0004 0400     		.2byte	0x4
 3268 0006 00000000 		.4byte	.Ldebug_abbrev0
 3269 000a 04       		.byte	0x4
 3270 000b 01       		.uleb128 0x1
 3271 000c 50000000 		.4byte	.LASF80
 3272 0010 0C       		.byte	0xc
 3273 0011 2D040000 		.4byte	.LASF81
 3274 0015 46010000 		.4byte	.LASF82
 3275 0019 78000000 		.4byte	.Ldebug_ranges0+0x78
 3276 001d 00000000 		.4byte	0
 3277 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 70


 3278 0025 02       		.uleb128 0x2
 3279 0026 01       		.byte	0x1
 3280 0027 06       		.byte	0x6
 3281 0028 30000000 		.4byte	.LASF0
 3282 002c 03       		.uleb128 0x3
 3283 002d 3C000000 		.4byte	.LASF12
 3284 0031 02       		.byte	0x2
 3285 0032 1D       		.byte	0x1d
 3286 0033 37000000 		.4byte	0x37
 3287 0037 02       		.uleb128 0x2
 3288 0038 01       		.byte	0x1
 3289 0039 08       		.byte	0x8
 3290 003a 2F030000 		.4byte	.LASF1
 3291 003e 02       		.uleb128 0x2
 3292 003f 02       		.byte	0x2
 3293 0040 05       		.byte	0x5
 3294 0041 70030000 		.4byte	.LASF2
 3295 0045 02       		.uleb128 0x2
 3296 0046 02       		.byte	0x2
 3297 0047 07       		.byte	0x7
 3298 0048 71020000 		.4byte	.LASF3
 3299 004c 02       		.uleb128 0x2
 3300 004d 04       		.byte	0x4
 3301 004e 05       		.byte	0x5
 3302 004f B5010000 		.4byte	.LASF4
 3303 0053 02       		.uleb128 0x2
 3304 0054 04       		.byte	0x4
 3305 0055 07       		.byte	0x7
 3306 0056 4D020000 		.4byte	.LASF5
 3307 005a 02       		.uleb128 0x2
 3308 005b 08       		.byte	0x8
 3309 005c 05       		.byte	0x5
 3310 005d 38010000 		.4byte	.LASF6
 3311 0061 02       		.uleb128 0x2
 3312 0062 08       		.byte	0x8
 3313 0063 07       		.byte	0x7
 3314 0064 E6000000 		.4byte	.LASF7
 3315 0068 04       		.uleb128 0x4
 3316 0069 04       		.byte	0x4
 3317 006a 05       		.byte	0x5
 3318 006b 696E7400 		.ascii	"int\000"
 3319 006f 02       		.uleb128 0x2
 3320 0070 04       		.byte	0x4
 3321 0071 07       		.byte	0x7
 3322 0072 33020000 		.4byte	.LASF8
 3323 0076 02       		.uleb128 0x2
 3324 0077 08       		.byte	0x8
 3325 0078 04       		.byte	0x4
 3326 0079 C1020000 		.4byte	.LASF9
 3327 007d 02       		.uleb128 0x2
 3328 007e 04       		.byte	0x4
 3329 007f 07       		.byte	0x7
 3330 0080 B8020000 		.4byte	.LASF10
 3331 0084 02       		.uleb128 0x2
 3332 0085 01       		.byte	0x1
 3333 0086 08       		.byte	0x8
 3334 0087 C9030000 		.4byte	.LASF11
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 71


 3335 008b 03       		.uleb128 0x3
 3336 008c 79040000 		.4byte	.LASF13
 3337 0090 03       		.byte	0x3
 3338 0091 18       		.byte	0x18
 3339 0092 2C000000 		.4byte	0x2c
 3340 0096 05       		.uleb128 0x5
 3341 0097 00000000 		.4byte	.LASF17
 3342 009b 01       		.byte	0x1
 3343 009c 37000000 		.4byte	0x37
 3344 00a0 04       		.byte	0x4
 3345 00a1 0D       		.byte	0xd
 3346 00a2 BE000000 		.4byte	0xbe
 3347 00a6 06       		.uleb128 0x6
 3348 00a7 557000   		.ascii	"Up\000"
 3349 00aa 00       		.byte	0
 3350 00ab 07       		.uleb128 0x7
 3351 00ac 04040000 		.4byte	.LASF14
 3352 00b0 01       		.byte	0x1
 3353 00b1 07       		.uleb128 0x7
 3354 00b2 B3020000 		.4byte	.LASF15
 3355 00b6 02       		.byte	0x2
 3356 00b7 07       		.uleb128 0x7
 3357 00b8 93030000 		.4byte	.LASF16
 3358 00bc 03       		.byte	0x3
 3359 00bd 00       		.byte	0
 3360 00be 05       		.uleb128 0x5
 3361 00bf 3D030000 		.4byte	.LASF18
 3362 00c3 01       		.byte	0x1
 3363 00c4 37000000 		.4byte	0x37
 3364 00c8 04       		.byte	0x4
 3365 00c9 0E       		.byte	0xe
 3366 00ca F9000000 		.4byte	0xf9
 3367 00ce 07       		.uleb128 0x7
 3368 00cf 89030000 		.4byte	.LASF19
 3369 00d3 00       		.byte	0
 3370 00d4 07       		.uleb128 0x7
 3371 00d5 E8020000 		.4byte	.LASF20
 3372 00d9 01       		.byte	0x1
 3373 00da 07       		.uleb128 0x7
 3374 00db 4C040000 		.4byte	.LASF21
 3375 00df 02       		.byte	0x2
 3376 00e0 07       		.uleb128 0x7
 3377 00e1 1B010000 		.4byte	.LASF22
 3378 00e5 03       		.byte	0x3
 3379 00e6 07       		.uleb128 0x7
 3380 00e7 CD010000 		.4byte	.LASF23
 3381 00eb 04       		.byte	0x4
 3382 00ec 07       		.uleb128 0x7
 3383 00ed 84020000 		.4byte	.LASF24
 3384 00f1 05       		.byte	0x5
 3385 00f2 07       		.uleb128 0x7
 3386 00f3 1A000000 		.4byte	.LASF25
 3387 00f7 06       		.byte	0x6
 3388 00f8 00       		.byte	0
 3389 00f9 08       		.uleb128 0x8
 3390 00fa 9E010000 		.4byte	.LASF30
 3391 00fe 10       		.byte	0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 72


 3392 00ff 04       		.byte	0x4
 3393 0100 10       		.byte	0x10
 3394 0101 36010000 		.4byte	0x136
 3395 0105 09       		.uleb128 0x9
 3396 0106 46000000 		.4byte	.LASF26
 3397 010a 04       		.byte	0x4
 3398 010b 11       		.byte	0x11
 3399 010c BE000000 		.4byte	0xbe
 3400 0110 00       		.byte	0
 3401 0111 09       		.uleb128 0x9
 3402 0112 B6040000 		.4byte	.LASF27
 3403 0116 04       		.byte	0x4
 3404 0117 12       		.byte	0x12
 3405 0118 68000000 		.4byte	0x68
 3406 011c 04       		.byte	0x4
 3407 011d 09       		.uleb128 0x9
 3408 011e BE040000 		.4byte	.LASF28
 3409 0122 04       		.byte	0x4
 3410 0123 13       		.byte	0x13
 3411 0124 68000000 		.4byte	0x68
 3412 0128 08       		.byte	0x8
 3413 0129 09       		.uleb128 0x9
 3414 012a FD000000 		.4byte	.LASF29
 3415 012e 04       		.byte	0x4
 3416 012f 14       		.byte	0x14
 3417 0130 96000000 		.4byte	0x96
 3418 0134 0C       		.byte	0xc
 3419 0135 00       		.byte	0
 3420 0136 03       		.uleb128 0x3
 3421 0137 9E010000 		.4byte	.LASF30
 3422 013b 04       		.byte	0x4
 3423 013c 15       		.byte	0x15
 3424 013d F9000000 		.4byte	0xf9
 3425 0141 08       		.uleb128 0x8
 3426 0142 E0010000 		.4byte	.LASF31
 3427 0146 08       		.byte	0x8
 3428 0147 04       		.byte	0x4
 3429 0148 19       		.byte	0x19
 3430 0149 66010000 		.4byte	0x166
 3431 014d 0A       		.uleb128 0xa
 3432 014e 726F7700 		.ascii	"row\000"
 3433 0152 04       		.byte	0x4
 3434 0153 1B       		.byte	0x1b
 3435 0154 68000000 		.4byte	0x68
 3436 0158 00       		.byte	0
 3437 0159 0A       		.uleb128 0xa
 3438 015a 636F6C00 		.ascii	"col\000"
 3439 015e 04       		.byte	0x4
 3440 015f 1C       		.byte	0x1c
 3441 0160 68000000 		.4byte	0x68
 3442 0164 04       		.byte	0x4
 3443 0165 00       		.byte	0
 3444 0166 0B       		.uleb128 0xb
 3445 0167 2F010000 		.4byte	.LASF32
 3446 016b 01       		.byte	0x1
 3447 016c 54       		.byte	0x54
 3448 016d 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 73


 3449 0171 58000000 		.4byte	.LFE1-.LFB1
 3450 0175 01       		.uleb128 0x1
 3451 0176 9C       		.byte	0x9c
 3452 0177 B6010000 		.4byte	0x1b6
 3453 017b 0C       		.uleb128 0xc
 3454 017c 6D617000 		.ascii	"map\000"
 3455 0180 01       		.byte	0x1
 3456 0181 54       		.byte	0x54
 3457 0182 C6010000 		.4byte	0x1c6
 3458 0186 02       		.uleb128 0x2
 3459 0187 91       		.byte	0x91
 3460 0188 6C       		.sleb128 -20
 3461 0189 0D       		.uleb128 0xd
 3462 018a 08000000 		.4byte	.LBB2
 3463 018e 44000000 		.4byte	.LBE2-.LBB2
 3464 0192 0E       		.uleb128 0xe
 3465 0193 6900     		.ascii	"i\000"
 3466 0195 01       		.byte	0x1
 3467 0196 56       		.byte	0x56
 3468 0197 68000000 		.4byte	0x68
 3469 019b 02       		.uleb128 0x2
 3470 019c 91       		.byte	0x91
 3471 019d 74       		.sleb128 -12
 3472 019e 0D       		.uleb128 0xd
 3473 019f 0E000000 		.4byte	.LBB3
 3474 01a3 2C000000 		.4byte	.LBE3-.LBB3
 3475 01a7 0E       		.uleb128 0xe
 3476 01a8 6A00     		.ascii	"j\000"
 3477 01aa 01       		.byte	0x1
 3478 01ab 57       		.byte	0x57
 3479 01ac 68000000 		.4byte	0x68
 3480 01b0 02       		.uleb128 0x2
 3481 01b1 91       		.byte	0x91
 3482 01b2 70       		.sleb128 -16
 3483 01b3 00       		.byte	0
 3484 01b4 00       		.byte	0
 3485 01b5 00       		.byte	0
 3486 01b6 0F       		.uleb128 0xf
 3487 01b7 68000000 		.4byte	0x68
 3488 01bb C6010000 		.4byte	0x1c6
 3489 01bf 10       		.uleb128 0x10
 3490 01c0 7D000000 		.4byte	0x7d
 3491 01c4 12       		.byte	0x12
 3492 01c5 00       		.byte	0
 3493 01c6 11       		.uleb128 0x11
 3494 01c7 04       		.byte	0x4
 3495 01c8 B6010000 		.4byte	0x1b6
 3496 01cc 12       		.uleb128 0x12
 3497 01cd 13030000 		.4byte	.LASF33
 3498 01d1 01       		.byte	0x1
 3499 01d2 5D       		.byte	0x5d
 3500 01d3 00000000 		.4byte	.LFB2
 3501 01d7 60000000 		.4byte	.LFE2-.LFB2
 3502 01db 01       		.uleb128 0x1
 3503 01dc 9C       		.byte	0x9c
 3504 01dd 1C020000 		.4byte	0x21c
 3505 01e1 0C       		.uleb128 0xc
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 74


 3506 01e2 6D617000 		.ascii	"map\000"
 3507 01e6 01       		.byte	0x1
 3508 01e7 5D       		.byte	0x5d
 3509 01e8 C6010000 		.4byte	0x1c6
 3510 01ec 02       		.uleb128 0x2
 3511 01ed 91       		.byte	0x91
 3512 01ee 6C       		.sleb128 -20
 3513 01ef 0D       		.uleb128 0xd
 3514 01f0 08000000 		.4byte	.LBB4
 3515 01f4 4E000000 		.4byte	.LBE4-.LBB4
 3516 01f8 0E       		.uleb128 0xe
 3517 01f9 6900     		.ascii	"i\000"
 3518 01fb 01       		.byte	0x1
 3519 01fc 5F       		.byte	0x5f
 3520 01fd 68000000 		.4byte	0x68
 3521 0201 02       		.uleb128 0x2
 3522 0202 91       		.byte	0x91
 3523 0203 74       		.sleb128 -12
 3524 0204 0D       		.uleb128 0xd
 3525 0205 0E000000 		.4byte	.LBB5
 3526 0209 3C000000 		.4byte	.LBE5-.LBB5
 3527 020d 0E       		.uleb128 0xe
 3528 020e 6A00     		.ascii	"j\000"
 3529 0210 01       		.byte	0x1
 3530 0211 60       		.byte	0x60
 3531 0212 68000000 		.4byte	0x68
 3532 0216 02       		.uleb128 0x2
 3533 0217 91       		.byte	0x91
 3534 0218 70       		.sleb128 -16
 3535 0219 00       		.byte	0
 3536 021a 00       		.byte	0
 3537 021b 00       		.byte	0
 3538 021c 13       		.uleb128 0x13
 3539 021d 24000000 		.4byte	.LASF65
 3540 0221 01       		.byte	0x1
 3541 0222 6B       		.byte	0x6b
 3542 0223 78020000 		.4byte	0x278
 3543 0227 00000000 		.4byte	.LFB3
 3544 022b 56000000 		.4byte	.LFE3-.LFB3
 3545 022f 01       		.uleb128 0x1
 3546 0230 9C       		.byte	0x9c
 3547 0231 78020000 		.4byte	0x278
 3548 0235 0C       		.uleb128 0xc
 3549 0236 7200     		.ascii	"r\000"
 3550 0238 01       		.byte	0x1
 3551 0239 6B       		.byte	0x6b
 3552 023a 68000000 		.4byte	0x68
 3553 023e 02       		.uleb128 0x2
 3554 023f 91       		.byte	0x91
 3555 0240 74       		.sleb128 -12
 3556 0241 0C       		.uleb128 0xc
 3557 0242 6300     		.ascii	"c\000"
 3558 0244 01       		.byte	0x1
 3559 0245 6B       		.byte	0x6b
 3560 0246 68000000 		.4byte	0x68
 3561 024a 02       		.uleb128 0x2
 3562 024b 91       		.byte	0x91
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 75


 3563 024c 70       		.sleb128 -16
 3564 024d 14       		.uleb128 0x14
 3565 024e 1F000000 		.4byte	.LASF34
 3566 0252 01       		.byte	0x1
 3567 0253 6B       		.byte	0x6b
 3568 0254 68000000 		.4byte	0x68
 3569 0258 02       		.uleb128 0x2
 3570 0259 91       		.byte	0x91
 3571 025a 6C       		.sleb128 -20
 3572 025b 14       		.uleb128 0x14
 3573 025c A8040000 		.4byte	.LASF35
 3574 0260 01       		.byte	0x1
 3575 0261 6B       		.byte	0x6b
 3576 0262 68000000 		.4byte	0x68
 3577 0266 02       		.uleb128 0x2
 3578 0267 91       		.byte	0x91
 3579 0268 68       		.sleb128 -24
 3580 0269 0C       		.uleb128 0xc
 3581 026a 6D617000 		.ascii	"map\000"
 3582 026e 01       		.byte	0x1
 3583 026f 6B       		.byte	0x6b
 3584 0270 C6010000 		.4byte	0x1c6
 3585 0274 02       		.uleb128 0x2
 3586 0275 91       		.byte	0x91
 3587 0276 00       		.sleb128 0
 3588 0277 00       		.byte	0
 3589 0278 02       		.uleb128 0x2
 3590 0279 01       		.byte	0x1
 3591 027a 02       		.byte	0x2
 3592 027b 29030000 		.4byte	.LASF36
 3593 027f 0B       		.uleb128 0xb
 3594 0280 11000000 		.4byte	.LASF37
 3595 0284 01       		.byte	0x1
 3596 0285 6F       		.byte	0x6f
 3597 0286 00000000 		.4byte	.LFB4
 3598 028a 4C090000 		.4byte	.LFE4-.LFB4
 3599 028e 01       		.uleb128 0x1
 3600 028f 9C       		.byte	0x9c
 3601 0290 CD040000 		.4byte	0x4cd
 3602 0294 0C       		.uleb128 0xc
 3603 0295 6D617000 		.ascii	"map\000"
 3604 0299 01       		.byte	0x1
 3605 029a 6F       		.byte	0x6f
 3606 029b C6010000 		.4byte	0x1c6
 3607 029f 03       		.uleb128 0x3
 3608 02a0 91       		.byte	0x91
 3609 02a1 BC52     		.sleb128 -5828
 3610 02a3 14       		.uleb128 0x14
 3611 02a4 21010000 		.4byte	.LASF38
 3612 02a8 01       		.byte	0x1
 3613 02a9 6F       		.byte	0x6f
 3614 02aa 41010000 		.4byte	0x141
 3615 02ae 03       		.uleb128 0x3
 3616 02af 91       		.byte	0x91
 3617 02b0 B452     		.sleb128 -5836
 3618 02b2 14       		.uleb128 0x14
 3619 02b3 BE010000 		.4byte	.LASF39
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 76


 3620 02b7 01       		.byte	0x1
 3621 02b8 6F       		.byte	0x6f
 3622 02b9 41010000 		.4byte	0x141
 3623 02bd 02       		.uleb128 0x2
 3624 02be 91       		.byte	0x91
 3625 02bf 7C       		.sleb128 -4
 3626 02c0 15       		.uleb128 0x15
 3627 02c1 BE030000 		.4byte	.LASF40
 3628 02c5 01       		.byte	0x1
 3629 02c6 71       		.byte	0x71
 3630 02c7 CD040000 		.4byte	0x4cd
 3631 02cb 03       		.uleb128 0x3
 3632 02cc 91       		.byte	0x91
 3633 02cd 9C76     		.sleb128 -1252
 3634 02cf 08       		.uleb128 0x8
 3635 02d0 5D040000 		.4byte	.LASF41
 3636 02d4 0C       		.byte	0xc
 3637 02d5 01       		.byte	0x1
 3638 02d6 78       		.byte	0x78
 3639 02d7 F4020000 		.4byte	0x2f4
 3640 02db 09       		.uleb128 0x9
 3641 02dc B5030000 		.4byte	.LASF42
 3642 02e0 01       		.byte	0x1
 3643 02e1 79       		.byte	0x79
 3644 02e2 41010000 		.4byte	0x141
 3645 02e6 00       		.byte	0
 3646 02e7 09       		.uleb128 0x9
 3647 02e8 F1030000 		.4byte	.LASF43
 3648 02ec 01       		.byte	0x1
 3649 02ed 7A       		.byte	0x7a
 3650 02ee 68000000 		.4byte	0x68
 3651 02f2 08       		.byte	0x8
 3652 02f3 00       		.byte	0
 3653 02f4 0E       		.uleb128 0xe
 3654 02f5 707100   		.ascii	"pq\000"
 3655 02f8 01       		.byte	0x1
 3656 02f9 7D       		.byte	0x7d
 3657 02fa E3040000 		.4byte	0x4e3
 3658 02fe 03       		.uleb128 0x3
 3659 02ff 91       		.byte	0x91
 3660 0300 C05B     		.sleb128 -4672
 3661 0302 15       		.uleb128 0x15
 3662 0303 98020000 		.4byte	.LASF44
 3663 0307 01       		.byte	0x1
 3664 0308 7E       		.byte	0x7e
 3665 0309 68000000 		.4byte	0x68
 3666 030d 02       		.uleb128 0x2
 3667 030e 91       		.byte	0x91
 3668 030f 5C       		.sleb128 -36
 3669 0310 15       		.uleb128 0x15
 3670 0311 11010000 		.4byte	.LASF45
 3671 0315 01       		.byte	0x1
 3672 0316 81       		.byte	0x81
 3673 0317 CD040000 		.4byte	0x4cd
 3674 031b 03       		.uleb128 0x3
 3675 031c 91       		.byte	0x91
 3676 031d CC52     		.sleb128 -5812
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 77


 3677 031f 15       		.uleb128 0x15
 3678 0320 DE000000 		.4byte	.LASF46
 3679 0324 01       		.byte	0x1
 3680 0325 8A       		.byte	0x8a
 3681 0326 68000000 		.4byte	0x68
 3682 032a 02       		.uleb128 0x2
 3683 032b 91       		.byte	0x91
 3684 032c 50       		.sleb128 -48
 3685 032d 15       		.uleb128 0x15
 3686 032e 40020000 		.4byte	.LASF47
 3687 0332 01       		.byte	0x1
 3688 0333 C1       		.byte	0xc1
 3689 0334 68000000 		.4byte	0x68
 3690 0338 02       		.uleb128 0x2
 3691 0339 91       		.byte	0x91
 3692 033a 40       		.sleb128 -64
 3693 033b 15       		.uleb128 0x15
 3694 033c AC030000 		.4byte	.LASF48
 3695 0340 01       		.byte	0x1
 3696 0341 C4       		.byte	0xc4
 3697 0342 F4040000 		.4byte	0x4f4
 3698 0346 03       		.uleb128 0x3
 3699 0347 91       		.byte	0x91
 3700 0348 987F     		.sleb128 -104
 3701 034a 15       		.uleb128 0x15
 3702 034b CD020000 		.4byte	.LASF49
 3703 034f 01       		.byte	0x1
 3704 0350 C5       		.byte	0xc5
 3705 0351 68000000 		.4byte	0x68
 3706 0355 03       		.uleb128 0x3
 3707 0356 91       		.byte	0x91
 3708 0357 BC7F     		.sleb128 -68
 3709 0359 15       		.uleb128 0x15
 3710 035a AA010000 		.4byte	.LASF50
 3711 035e 01       		.byte	0x1
 3712 035f C6       		.byte	0xc6
 3713 0360 68000000 		.4byte	0x68
 3714 0364 03       		.uleb128 0x3
 3715 0365 91       		.byte	0x91
 3716 0366 B87F     		.sleb128 -72
 3717 0368 15       		.uleb128 0x15
 3718 0369 09030000 		.4byte	.LASF51
 3719 036d 01       		.byte	0x1
 3720 036e CD       		.byte	0xcd
 3721 036f 68000000 		.4byte	0x68
 3722 0373 03       		.uleb128 0x3
 3723 0374 91       		.byte	0x91
 3724 0375 B47F     		.sleb128 -76
 3725 0377 16       		.uleb128 0x16
 3726 0378 28000000 		.4byte	.LBB6
 3727 037c 92000000 		.4byte	.LBE6-.LBB6
 3728 0380 A7030000 		.4byte	0x3a7
 3729 0384 0E       		.uleb128 0xe
 3730 0385 6900     		.ascii	"i\000"
 3731 0387 01       		.byte	0x1
 3732 0388 72       		.byte	0x72
 3733 0389 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 78


 3734 038d 02       		.uleb128 0x2
 3735 038e 91       		.byte	0x91
 3736 038f 64       		.sleb128 -28
 3737 0390 0D       		.uleb128 0xd
 3738 0391 36000000 		.4byte	.LBB7
 3739 0395 60000000 		.4byte	.LBE7-.LBB7
 3740 0399 0E       		.uleb128 0xe
 3741 039a 6A00     		.ascii	"j\000"
 3742 039c 01       		.byte	0x1
 3743 039d 73       		.byte	0x73
 3744 039e 68000000 		.4byte	0x68
 3745 03a2 02       		.uleb128 0x2
 3746 03a3 91       		.byte	0x91
 3747 03a4 60       		.sleb128 -32
 3748 03a5 00       		.byte	0
 3749 03a6 00       		.byte	0
 3750 03a7 16       		.uleb128 0x16
 3751 03a8 C6000000 		.4byte	.LBB8
 3752 03ac 92000000 		.4byte	.LBE8-.LBB8
 3753 03b0 D7030000 		.4byte	0x3d7
 3754 03b4 0E       		.uleb128 0xe
 3755 03b5 6900     		.ascii	"i\000"
 3756 03b7 01       		.byte	0x1
 3757 03b8 84       		.byte	0x84
 3758 03b9 68000000 		.4byte	0x68
 3759 03bd 02       		.uleb128 0x2
 3760 03be 91       		.byte	0x91
 3761 03bf 58       		.sleb128 -40
 3762 03c0 0D       		.uleb128 0xd
 3763 03c1 D4000000 		.4byte	.LBB9
 3764 03c5 60000000 		.4byte	.LBE9-.LBB9
 3765 03c9 0E       		.uleb128 0xe
 3766 03ca 6A00     		.ascii	"j\000"
 3767 03cc 01       		.byte	0x1
 3768 03cd 85       		.byte	0x85
 3769 03ce 68000000 		.4byte	0x68
 3770 03d2 02       		.uleb128 0x2
 3771 03d3 91       		.byte	0x91
 3772 03d4 54       		.sleb128 -44
 3773 03d5 00       		.byte	0
 3774 03d6 00       		.byte	0
 3775 03d7 17       		.uleb128 0x17
 3776 03d8 00000000 		.4byte	.Ldebug_ranges0+0
 3777 03dc 8D040000 		.4byte	0x48d
 3778 03e0 0E       		.uleb128 0xe
 3779 03e1 69647800 		.ascii	"idx\000"
 3780 03e5 01       		.byte	0x1
 3781 03e6 94       		.byte	0x94
 3782 03e7 68000000 		.4byte	0x68
 3783 03eb 02       		.uleb128 0x2
 3784 03ec 91       		.byte	0x91
 3785 03ed 4C       		.sleb128 -52
 3786 03ee 15       		.uleb128 0x15
 3787 03ef F8020000 		.4byte	.LASF52
 3788 03f3 01       		.byte	0x1
 3789 03f4 9A       		.byte	0x9a
 3790 03f5 CF020000 		.4byte	0x2cf
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 79


 3791 03f9 03       		.uleb128 0x3
 3792 03fa 91       		.byte	0x91
 3793 03fb C052     		.sleb128 -5824
 3794 03fd 0E       		.uleb128 0xe
 3795 03fe 726F7700 		.ascii	"row\000"
 3796 0402 01       		.byte	0x1
 3797 0403 9E       		.byte	0x9e
 3798 0404 68000000 		.4byte	0x68
 3799 0408 03       		.uleb128 0x3
 3800 0409 91       		.byte	0x91
 3801 040a AC7F     		.sleb128 -84
 3802 040c 0E       		.uleb128 0xe
 3803 040d 636F6C00 		.ascii	"col\000"
 3804 0411 01       		.byte	0x1
 3805 0412 9F       		.byte	0x9f
 3806 0413 68000000 		.4byte	0x68
 3807 0417 03       		.uleb128 0x3
 3808 0418 91       		.byte	0x91
 3809 0419 A87F     		.sleb128 -88
 3810 041b 16       		.uleb128 0x16
 3811 041c 02020000 		.4byte	.LBB11
 3812 0420 90000000 		.4byte	.LBE11-.LBB11
 3813 0424 35040000 		.4byte	0x435
 3814 0428 0E       		.uleb128 0xe
 3815 0429 6900     		.ascii	"i\000"
 3816 042b 01       		.byte	0x1
 3817 042c 95       		.byte	0x95
 3818 042d 68000000 		.4byte	0x68
 3819 0431 02       		.uleb128 0x2
 3820 0432 91       		.byte	0x91
 3821 0433 48       		.sleb128 -56
 3822 0434 00       		.byte	0
 3823 0435 0D       		.uleb128 0xd
 3824 0436 C4030000 		.4byte	.LBB12
 3825 043a 1E020000 		.4byte	.LBE12-.LBB12
 3826 043e 0E       		.uleb128 0xe
 3827 043f 6900     		.ascii	"i\000"
 3828 0441 01       		.byte	0x1
 3829 0442 A8       		.byte	0xa8
 3830 0443 68000000 		.4byte	0x68
 3831 0447 02       		.uleb128 0x2
 3832 0448 91       		.byte	0x91
 3833 0449 44       		.sleb128 -60
 3834 044a 0D       		.uleb128 0xd
 3835 044b D2030000 		.4byte	.LBB13
 3836 044f EA010000 		.4byte	.LBE13-.LBB13
 3837 0453 15       		.uleb128 0x15
 3838 0454 91020000 		.4byte	.LASF53
 3839 0458 01       		.byte	0x1
 3840 0459 A9       		.byte	0xa9
 3841 045a 68000000 		.4byte	0x68
 3842 045e 03       		.uleb128 0x3
 3843 045f 91       		.byte	0x91
 3844 0460 A47F     		.sleb128 -92
 3845 0462 15       		.uleb128 0x15
 3846 0463 97010000 		.4byte	.LASF54
 3847 0467 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 80


 3848 0468 AA       		.byte	0xaa
 3849 0469 68000000 		.4byte	0x68
 3850 046d 03       		.uleb128 0x3
 3851 046e 91       		.byte	0x91
 3852 046f A07F     		.sleb128 -96
 3853 0471 0D       		.uleb128 0xd
 3854 0472 80040000 		.4byte	.LBB14
 3855 0476 3C010000 		.4byte	.LBE14-.LBB14
 3856 047a 15       		.uleb128 0x15
 3857 047b 21040000 		.4byte	.LASF55
 3858 047f 01       		.byte	0x1
 3859 0480 AD       		.byte	0xad
 3860 0481 68000000 		.4byte	0x68
 3861 0485 03       		.uleb128 0x3
 3862 0486 91       		.byte	0x91
 3863 0487 9C7F     		.sleb128 -100
 3864 0489 00       		.byte	0
 3865 048a 00       		.byte	0
 3866 048b 00       		.byte	0
 3867 048c 00       		.byte	0
 3868 048d 0D       		.uleb128 0xd
 3869 048e 0A070000 		.4byte	.LBB16
 3870 0492 18020000 		.4byte	.LBE16-.LBB16
 3871 0496 0E       		.uleb128 0xe
 3872 0497 6900     		.ascii	"i\000"
 3873 0499 01       		.byte	0x1
 3874 049a D1       		.byte	0xd1
 3875 049b 68000000 		.4byte	0x68
 3876 049f 03       		.uleb128 0x3
 3877 04a0 91       		.byte	0x91
 3878 04a1 B07F     		.sleb128 -80
 3879 04a3 0D       		.uleb128 0xd
 3880 04a4 1C070000 		.4byte	.LBB17
 3881 04a8 EC010000 		.4byte	.LBE17-.LBB17
 3882 04ac 15       		.uleb128 0x15
 3883 04ad 91020000 		.4byte	.LASF53
 3884 04b1 01       		.byte	0x1
 3885 04b2 D2       		.byte	0xd2
 3886 04b3 68000000 		.4byte	0x68
 3887 04b7 03       		.uleb128 0x3
 3888 04b8 91       		.byte	0x91
 3889 04b9 947F     		.sleb128 -108
 3890 04bb 15       		.uleb128 0x15
 3891 04bc 97010000 		.4byte	.LASF54
 3892 04c0 01       		.byte	0x1
 3893 04c1 D3       		.byte	0xd3
 3894 04c2 68000000 		.4byte	0x68
 3895 04c6 03       		.uleb128 0x3
 3896 04c7 91       		.byte	0x91
 3897 04c8 907F     		.sleb128 -112
 3898 04ca 00       		.byte	0
 3899 04cb 00       		.byte	0
 3900 04cc 00       		.byte	0
 3901 04cd 0F       		.uleb128 0xf
 3902 04ce 68000000 		.4byte	0x68
 3903 04d2 E3040000 		.4byte	0x4e3
 3904 04d6 10       		.uleb128 0x10
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 81


 3905 04d7 7D000000 		.4byte	0x7d
 3906 04db 0E       		.byte	0xe
 3907 04dc 10       		.uleb128 0x10
 3908 04dd 7D000000 		.4byte	0x7d
 3909 04e1 12       		.byte	0x12
 3910 04e2 00       		.byte	0
 3911 04e3 0F       		.uleb128 0xf
 3912 04e4 CF020000 		.4byte	0x2cf
 3913 04e8 F4040000 		.4byte	0x4f4
 3914 04ec 18       		.uleb128 0x18
 3915 04ed 7D000000 		.4byte	0x7d
 3916 04f1 1C01     		.2byte	0x11c
 3917 04f3 00       		.byte	0
 3918 04f4 11       		.uleb128 0x11
 3919 04f5 04       		.byte	0x4
 3920 04f6 41010000 		.4byte	0x141
 3921 04fa 0B       		.uleb128 0xb
 3922 04fb 9F020000 		.4byte	.LASF56
 3923 04ff 01       		.byte	0x1
 3924 0500 F2       		.byte	0xf2
 3925 0501 00000000 		.4byte	.LFB5
 3926 0505 38060000 		.4byte	.LFE5-.LFB5
 3927 0509 01       		.uleb128 0x1
 3928 050a 9C       		.byte	0x9c
 3929 050b 81060000 		.4byte	0x681
 3930 050f 0C       		.uleb128 0xc
 3931 0510 6D617000 		.ascii	"map\000"
 3932 0514 01       		.byte	0x1
 3933 0515 F2       		.byte	0xf2
 3934 0516 C6010000 		.4byte	0x1c6
 3935 051a 03       		.uleb128 0x3
 3936 051b 91       		.byte	0x91
 3937 051c B47F     		.sleb128 -76
 3938 051e 14       		.uleb128 0x14
 3939 051f 99030000 		.4byte	.LASF57
 3940 0523 01       		.byte	0x1
 3941 0524 F2       		.byte	0xf2
 3942 0525 68000000 		.4byte	0x68
 3943 0529 03       		.uleb128 0x3
 3944 052a 91       		.byte	0x91
 3945 052b B07F     		.sleb128 -80
 3946 052d 14       		.uleb128 0x14
 3947 052e 6B040000 		.4byte	.LASF58
 3948 0532 01       		.byte	0x1
 3949 0533 F2       		.byte	0xf2
 3950 0534 41010000 		.4byte	0x141
 3951 0538 03       		.uleb128 0x3
 3952 0539 91       		.byte	0x91
 3953 053a A87F     		.sleb128 -88
 3954 053c 14       		.uleb128 0x14
 3955 053d 7A030000 		.4byte	.LASF59
 3956 0541 01       		.byte	0x1
 3957 0542 F2       		.byte	0xf2
 3958 0543 41010000 		.4byte	0x141
 3959 0547 02       		.uleb128 0x2
 3960 0548 91       		.byte	0x91
 3961 0549 00       		.sleb128 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 82


 3962 054a 15       		.uleb128 0x15
 3963 054b CD020000 		.4byte	.LASF49
 3964 054f 01       		.byte	0x1
 3965 0550 F3       		.byte	0xf3
 3966 0551 68000000 		.4byte	0x68
 3967 0555 02       		.uleb128 0x2
 3968 0556 91       		.byte	0x91
 3969 0557 74       		.sleb128 -12
 3970 0558 15       		.uleb128 0x15
 3971 0559 AA010000 		.4byte	.LASF50
 3972 055d 01       		.byte	0x1
 3973 055e F4       		.byte	0xf4
 3974 055f 68000000 		.4byte	0x68
 3975 0563 02       		.uleb128 0x2
 3976 0564 91       		.byte	0x91
 3977 0565 70       		.sleb128 -16
 3978 0566 15       		.uleb128 0x15
 3979 0567 A2030000 		.4byte	.LASF60
 3980 056b 01       		.byte	0x1
 3981 056c F5       		.byte	0xf5
 3982 056d 68000000 		.4byte	0x68
 3983 0571 02       		.uleb128 0x2
 3984 0572 91       		.byte	0x91
 3985 0573 6C       		.sleb128 -20
 3986 0574 15       		.uleb128 0x15
 3987 0575 5F020000 		.4byte	.LASF61
 3988 0579 01       		.byte	0x1
 3989 057a F6       		.byte	0xf6
 3990 057b 68000000 		.4byte	0x68
 3991 057f 03       		.uleb128 0x3
 3992 0580 91       		.byte	0x91
 3993 0581 BC7F     		.sleb128 -68
 3994 0583 16       		.uleb128 0x16
 3995 0584 2E000000 		.4byte	.LBB18
 3996 0588 90050000 		.4byte	.LBE18-.LBB18
 3997 058c 69060000 		.4byte	0x669
 3998 0590 15       		.uleb128 0x15
 3999 0591 1C030000 		.4byte	.LASF62
 4000 0595 01       		.byte	0x1
 4001 0596 FC       		.byte	0xfc
 4002 0597 BE000000 		.4byte	0xbe
 4003 059b 02       		.uleb128 0x2
 4004 059c 91       		.byte	0x91
 4005 059d 6B       		.sleb128 -21
 4006 059e 15       		.uleb128 0x15
 4007 059f AD040000 		.4byte	.LASF63
 4008 05a3 01       		.byte	0x1
 4009 05a4 FD       		.byte	0xfd
 4010 05a5 68000000 		.4byte	0x68
 4011 05a9 02       		.uleb128 0x2
 4012 05aa 91       		.byte	0x91
 4013 05ab 64       		.sleb128 -28
 4014 05ac 17       		.uleb128 0x17
 4015 05ad 18000000 		.4byte	.Ldebug_ranges0+0x18
 4016 05b1 DC050000 		.4byte	0x5dc
 4017 05b5 19       		.uleb128 0x19
 4018 05b6 00030000 		.4byte	.LASF64
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 83


 4019 05ba 01       		.byte	0x1
 4020 05bb 1501     		.2byte	0x115
 4021 05bd 68000000 		.4byte	0x68
 4022 05c1 02       		.uleb128 0x2
 4023 05c2 91       		.byte	0x91
 4024 05c3 60       		.sleb128 -32
 4025 05c4 0D       		.uleb128 0xd
 4026 05c5 06010000 		.4byte	.LBB20
 4027 05c9 58000000 		.4byte	.LBE20-.LBB20
 4028 05cd 1A       		.uleb128 0x1a
 4029 05ce 6900     		.ascii	"i\000"
 4030 05d0 01       		.byte	0x1
 4031 05d1 1701     		.2byte	0x117
 4032 05d3 68000000 		.4byte	0x68
 4033 05d7 02       		.uleb128 0x2
 4034 05d8 91       		.byte	0x91
 4035 05d9 5C       		.sleb128 -36
 4036 05da 00       		.byte	0
 4037 05db 00       		.byte	0
 4038 05dc 17       		.uleb128 0x17
 4039 05dd 30000000 		.4byte	.Ldebug_ranges0+0x30
 4040 05e1 0C060000 		.4byte	0x60c
 4041 05e5 19       		.uleb128 0x19
 4042 05e6 00030000 		.4byte	.LASF64
 4043 05ea 01       		.byte	0x1
 4044 05eb 4401     		.2byte	0x144
 4045 05ed 68000000 		.4byte	0x68
 4046 05f1 02       		.uleb128 0x2
 4047 05f2 91       		.byte	0x91
 4048 05f3 58       		.sleb128 -40
 4049 05f4 0D       		.uleb128 0xd
 4050 05f5 1E020000 		.4byte	.LBB23
 4051 05f9 56000000 		.4byte	.LBE23-.LBB23
 4052 05fd 1A       		.uleb128 0x1a
 4053 05fe 6900     		.ascii	"i\000"
 4054 0600 01       		.byte	0x1
 4055 0601 4601     		.2byte	0x146
 4056 0603 68000000 		.4byte	0x68
 4057 0607 02       		.uleb128 0x2
 4058 0608 91       		.byte	0x91
 4059 0609 54       		.sleb128 -44
 4060 060a 00       		.byte	0
 4061 060b 00       		.byte	0
 4062 060c 17       		.uleb128 0x17
 4063 060d 48000000 		.4byte	.Ldebug_ranges0+0x48
 4064 0611 3C060000 		.4byte	0x63c
 4065 0615 19       		.uleb128 0x19
 4066 0616 00030000 		.4byte	.LASF64
 4067 061a 01       		.byte	0x1
 4068 061b 7601     		.2byte	0x176
 4069 061d 68000000 		.4byte	0x68
 4070 0621 02       		.uleb128 0x2
 4071 0622 91       		.byte	0x91
 4072 0623 50       		.sleb128 -48
 4073 0624 0D       		.uleb128 0xd
 4074 0625 68030000 		.4byte	.LBB26
 4075 0629 58000000 		.4byte	.LBE26-.LBB26
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 84


 4076 062d 1A       		.uleb128 0x1a
 4077 062e 6900     		.ascii	"i\000"
 4078 0630 01       		.byte	0x1
 4079 0631 7801     		.2byte	0x178
 4080 0633 68000000 		.4byte	0x68
 4081 0637 02       		.uleb128 0x2
 4082 0638 91       		.byte	0x91
 4083 0639 4C       		.sleb128 -52
 4084 063a 00       		.byte	0
 4085 063b 00       		.byte	0
 4086 063c 1B       		.uleb128 0x1b
 4087 063d 60000000 		.4byte	.Ldebug_ranges0+0x60
 4088 0641 19       		.uleb128 0x19
 4089 0642 00030000 		.4byte	.LASF64
 4090 0646 01       		.byte	0x1
 4091 0647 A701     		.2byte	0x1a7
 4092 0649 68000000 		.4byte	0x68
 4093 064d 02       		.uleb128 0x2
 4094 064e 91       		.byte	0x91
 4095 064f 48       		.sleb128 -56
 4096 0650 0D       		.uleb128 0xd
 4097 0651 8C040000 		.4byte	.LBB29
 4098 0655 54000000 		.4byte	.LBE29-.LBB29
 4099 0659 1A       		.uleb128 0x1a
 4100 065a 6900     		.ascii	"i\000"
 4101 065c 01       		.byte	0x1
 4102 065d A901     		.2byte	0x1a9
 4103 065f 68000000 		.4byte	0x68
 4104 0663 02       		.uleb128 0x2
 4105 0664 91       		.byte	0x91
 4106 0665 44       		.sleb128 -60
 4107 0666 00       		.byte	0
 4108 0667 00       		.byte	0
 4109 0668 00       		.byte	0
 4110 0669 0D       		.uleb128 0xd
 4111 066a C6050000 		.4byte	.LBB31
 4112 066e 58000000 		.4byte	.LBE31-.LBB31
 4113 0672 1A       		.uleb128 0x1a
 4114 0673 6900     		.ascii	"i\000"
 4115 0675 01       		.byte	0x1
 4116 0676 D501     		.2byte	0x1d5
 4117 0678 68000000 		.4byte	0x68
 4118 067c 02       		.uleb128 0x2
 4119 067d 91       		.byte	0x91
 4120 067e 40       		.sleb128 -64
 4121 067f 00       		.byte	0
 4122 0680 00       		.byte	0
 4123 0681 1C       		.uleb128 0x1c
 4124 0682 04020000 		.4byte	.LASF66
 4125 0686 01       		.byte	0x1
 4126 0687 DE01     		.2byte	0x1de
 4127 0689 8B000000 		.4byte	0x8b
 4128 068d 00000000 		.4byte	.LFB6
 4129 0691 0C010000 		.4byte	.LFE6-.LFB6
 4130 0695 01       		.uleb128 0x1
 4131 0696 9C       		.byte	0x9c
 4132 0697 BA060000 		.4byte	0x6ba
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 85


 4133 069b 1D       		.uleb128 0x1d
 4134 069c CD020000 		.4byte	.LASF49
 4135 06a0 01       		.byte	0x1
 4136 06a1 DE01     		.2byte	0x1de
 4137 06a3 68000000 		.4byte	0x68
 4138 06a7 02       		.uleb128 0x2
 4139 06a8 91       		.byte	0x91
 4140 06a9 74       		.sleb128 -12
 4141 06aa 1D       		.uleb128 0x1d
 4142 06ab AA010000 		.4byte	.LASF50
 4143 06af 01       		.byte	0x1
 4144 06b0 DE01     		.2byte	0x1de
 4145 06b2 68000000 		.4byte	0x68
 4146 06b6 02       		.uleb128 0x2
 4147 06b7 91       		.byte	0x91
 4148 06b8 70       		.sleb128 -16
 4149 06b9 00       		.byte	0
 4150 06ba 1E       		.uleb128 0x1e
 4151 06bb D8020000 		.4byte	.LASF67
 4152 06bf 01       		.byte	0x1
 4153 06c0 EF01     		.2byte	0x1ef
 4154 06c2 00000000 		.4byte	.LFB7
 4155 06c6 24010000 		.4byte	.LFE7-.LFB7
 4156 06ca 01       		.uleb128 0x1
 4157 06cb 9C       		.byte	0x9c
 4158 06cc FE060000 		.4byte	0x6fe
 4159 06d0 1D       		.uleb128 0x1d
 4160 06d1 3B040000 		.4byte	.LASF68
 4161 06d5 01       		.byte	0x1
 4162 06d6 EF01     		.2byte	0x1ef
 4163 06d8 96000000 		.4byte	0x96
 4164 06dc 02       		.uleb128 0x2
 4165 06dd 91       		.byte	0x91
 4166 06de 77       		.sleb128 -9
 4167 06df 1D       		.uleb128 0x1d
 4168 06e0 CD020000 		.4byte	.LASF49
 4169 06e4 01       		.byte	0x1
 4170 06e5 EF01     		.2byte	0x1ef
 4171 06e7 68000000 		.4byte	0x68
 4172 06eb 02       		.uleb128 0x2
 4173 06ec 91       		.byte	0x91
 4174 06ed 70       		.sleb128 -16
 4175 06ee 1D       		.uleb128 0x1d
 4176 06ef AA010000 		.4byte	.LASF50
 4177 06f3 01       		.byte	0x1
 4178 06f4 EF01     		.2byte	0x1ef
 4179 06f6 68000000 		.4byte	0x68
 4180 06fa 02       		.uleb128 0x2
 4181 06fb 91       		.byte	0x91
 4182 06fc 6C       		.sleb128 -20
 4183 06fd 00       		.byte	0
 4184 06fe 1C       		.uleb128 0x1c
 4185 06ff 52030000 		.4byte	.LASF69
 4186 0703 01       		.byte	0x1
 4187 0704 2302     		.2byte	0x223
 4188 0706 8B000000 		.4byte	0x8b
 4189 070a 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 86


 4190 070e 9C000000 		.4byte	.LFE8-.LFB8
 4191 0712 01       		.uleb128 0x1
 4192 0713 9C       		.byte	0x9c
 4193 0714 37070000 		.4byte	0x737
 4194 0718 1D       		.uleb128 0x1d
 4195 0719 E9010000 		.4byte	.LASF70
 4196 071d 01       		.byte	0x1
 4197 071e 2302     		.2byte	0x223
 4198 0720 68000000 		.4byte	0x68
 4199 0724 02       		.uleb128 0x2
 4200 0725 91       		.byte	0x91
 4201 0726 74       		.sleb128 -12
 4202 0727 1D       		.uleb128 0x1d
 4203 0728 9E040000 		.4byte	.LASF71
 4204 072c 01       		.byte	0x1
 4205 072d 2302     		.2byte	0x223
 4206 072f 68000000 		.4byte	0x68
 4207 0733 02       		.uleb128 0x2
 4208 0734 91       		.byte	0x91
 4209 0735 70       		.sleb128 -16
 4210 0736 00       		.byte	0
 4211 0737 1F       		.uleb128 0x1f
 4212 0738 81040000 		.4byte	.LASF83
 4213 073c 01       		.byte	0x1
 4214 073d 3202     		.2byte	0x232
 4215 073f 8B000000 		.4byte	0x8b
 4216 0743 00000000 		.4byte	.LFB9
 4217 0747 18000000 		.4byte	.LFE9-.LFB9
 4218 074b 01       		.uleb128 0x1
 4219 074c 9C       		.byte	0x9c
 4220 074d 20       		.uleb128 0x20
 4221 074e 67030000 		.4byte	.LASF72
 4222 0752 01       		.byte	0x1
 4223 0753 3602     		.2byte	0x236
 4224 0755 B1070000 		.4byte	0x7b1
 4225 0759 00000000 		.4byte	.LFB10
 4226 075d 78000000 		.4byte	.LFE10-.LFB10
 4227 0761 01       		.uleb128 0x1
 4228 0762 9C       		.byte	0x9c
 4229 0763 B1070000 		.4byte	0x7b1
 4230 0767 21       		.uleb128 0x21
 4231 0768 6D617000 		.ascii	"map\000"
 4232 076c 01       		.byte	0x1
 4233 076d 3602     		.2byte	0x236
 4234 076f C6010000 		.4byte	0x1c6
 4235 0773 02       		.uleb128 0x2
 4236 0774 91       		.byte	0x91
 4237 0775 5C       		.sleb128 -36
 4238 0776 1D       		.uleb128 0x1d
 4239 0777 FA030000 		.4byte	.LASF73
 4240 077b 01       		.byte	0x1
 4241 077c 3602     		.2byte	0x236
 4242 077e C7070000 		.4byte	0x7c7
 4243 0782 02       		.uleb128 0x2
 4244 0783 91       		.byte	0x91
 4245 0784 58       		.sleb128 -40
 4246 0785 21       		.uleb128 0x21
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 87


 4247 0786 6900     		.ascii	"i\000"
 4248 0788 01       		.byte	0x1
 4249 0789 3602     		.2byte	0x236
 4250 078b 68000000 		.4byte	0x68
 4251 078f 02       		.uleb128 0x2
 4252 0790 91       		.byte	0x91
 4253 0791 54       		.sleb128 -44
 4254 0792 19       		.uleb128 0x19
 4255 0793 6B040000 		.4byte	.LASF58
 4256 0797 01       		.byte	0x1
 4257 0798 3802     		.2byte	0x238
 4258 079a 41010000 		.4byte	0x141
 4259 079e 02       		.uleb128 0x2
 4260 079f 91       		.byte	0x91
 4261 07a0 68       		.sleb128 -24
 4262 07a1 19       		.uleb128 0x19
 4263 07a2 7A030000 		.4byte	.LASF59
 4264 07a6 01       		.byte	0x1
 4265 07a7 3802     		.2byte	0x238
 4266 07a9 41010000 		.4byte	0x141
 4267 07ad 02       		.uleb128 0x2
 4268 07ae 91       		.byte	0x91
 4269 07af 60       		.sleb128 -32
 4270 07b0 00       		.byte	0
 4271 07b1 11       		.uleb128 0x11
 4272 07b2 04       		.byte	0x4
 4273 07b3 36010000 		.4byte	0x136
 4274 07b7 0F       		.uleb128 0xf
 4275 07b8 68000000 		.4byte	0x68
 4276 07bc C7070000 		.4byte	0x7c7
 4277 07c0 10       		.uleb128 0x10
 4278 07c1 7D000000 		.4byte	0x7d
 4279 07c5 01       		.byte	0x1
 4280 07c6 00       		.byte	0
 4281 07c7 11       		.uleb128 0x11
 4282 07c8 04       		.byte	0x4
 4283 07c9 B7070000 		.4byte	0x7b7
 4284 07cd 0F       		.uleb128 0xf
 4285 07ce 36010000 		.4byte	0x136
 4286 07d2 DE070000 		.4byte	0x7de
 4287 07d6 18       		.uleb128 0x18
 4288 07d7 7D000000 		.4byte	0x7d
 4289 07db 1C01     		.2byte	0x11c
 4290 07dd 00       		.byte	0
 4291 07de 15       		.uleb128 0x15
 4292 07df F3010000 		.4byte	.LASF74
 4293 07e3 01       		.byte	0x1
 4294 07e4 18       		.byte	0x18
 4295 07e5 CD070000 		.4byte	0x7cd
 4296 07e9 05       		.uleb128 0x5
 4297 07ea 03       		.byte	0x3
 4298 07eb 00000000 		.4byte	instructionsList
 4299 07ef 15       		.uleb128 0x15
 4300 07f0 99030000 		.4byte	.LASF57
 4301 07f4 01       		.byte	0x1
 4302 07f5 19       		.byte	0x19
 4303 07f6 68000000 		.4byte	0x68
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 88


 4304 07fa 05       		.uleb128 0x5
 4305 07fb 03       		.byte	0x3
 4306 07fc D0110000 		.4byte	numSteps
 4307 0800 22       		.uleb128 0x22
 4308 0801 6D617000 		.ascii	"map\000"
 4309 0805 01       		.byte	0x1
 4310 0806 22       		.byte	0x22
 4311 0807 CD040000 		.4byte	0x4cd
 4312 080b 05       		.uleb128 0x5
 4313 080c 03       		.byte	0x3
 4314 080d 00000000 		.4byte	map
 4315 0811 0F       		.uleb128 0xf
 4316 0812 68000000 		.4byte	0x68
 4317 0816 27080000 		.4byte	0x827
 4318 081a 10       		.uleb128 0x10
 4319 081b 7D000000 		.4byte	0x7d
 4320 081f 04       		.byte	0x4
 4321 0820 10       		.uleb128 0x10
 4322 0821 7D000000 		.4byte	0x7d
 4323 0825 01       		.byte	0x1
 4324 0826 00       		.byte	0
 4325 0827 23       		.uleb128 0x23
 4326 0828 FA030000 		.4byte	.LASF73
 4327 082c 01       		.byte	0x1
 4328 082d 4B       		.byte	0x4b
 4329 082e 11080000 		.4byte	0x811
 4330 0832 05       		.uleb128 0x5
 4331 0833 03       		.byte	0x3
 4332 0834 00000000 		.4byte	food_list
 4333 0838 23       		.uleb128 0x23
 4334 0839 D8030000 		.4byte	.LASF75
 4335 083d 01       		.byte	0x1
 4336 083e 16       		.byte	0x16
 4337 083f 96000000 		.4byte	0x96
 4338 0843 05       		.uleb128 0x5
 4339 0844 03       		.byte	0x3
 4340 0845 00000000 		.4byte	previousRobotOrientation
 4341 0849 23       		.uleb128 0x23
 4342 084a 09040000 		.4byte	.LASF76
 4343 084e 01       		.byte	0x1
 4344 084f 16       		.byte	0x16
 4345 0850 96000000 		.4byte	0x96
 4346 0854 05       		.uleb128 0x5
 4347 0855 03       		.byte	0x3
 4348 0856 00000000 		.4byte	currentRobotOrientation
 4349 085a 23       		.uleb128 0x23
 4350 085b CE030000 		.4byte	.LASF77
 4351 085f 01       		.byte	0x1
 4352 0860 49       		.byte	0x49
 4353 0861 B7070000 		.4byte	0x7b7
 4354 0865 05       		.uleb128 0x5
 4355 0866 03       		.byte	0x3
 4356 0867 00000000 		.4byte	start_pos
 4357 086b 0F       		.uleb128 0xf
 4358 086c 68000000 		.4byte	0x68
 4359 0870 82080000 		.4byte	0x882
 4360 0874 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 89


 4361 0875 7D000000 		.4byte	0x7d
 4362 0879 1C01     		.2byte	0x11c
 4363 087b 10       		.uleb128 0x10
 4364 087c 7D000000 		.4byte	0x7d
 4365 0880 01       		.byte	0x1
 4366 0881 00       		.byte	0
 4367 0882 23       		.uleb128 0x23
 4368 0883 17020000 		.4byte	.LASF78
 4369 0887 01       		.byte	0x1
 4370 0888 67       		.byte	0x67
 4371 0889 6B080000 		.4byte	0x86b
 4372 088d 05       		.uleb128 0x5
 4373 088e 03       		.byte	0x3
 4374 088f 00000000 		.4byte	list_of_optimal_coordinates
 4375 0893 0F       		.uleb128 0xf
 4376 0894 41010000 		.4byte	0x141
 4377 0898 A3080000 		.4byte	0x8a3
 4378 089c 10       		.uleb128 0x10
 4379 089d 7D000000 		.4byte	0x7d
 4380 08a1 03       		.byte	0x3
 4381 08a2 00       		.byte	0
 4382 08a3 23       		.uleb128 0x23
 4383 08a4 98040000 		.4byte	.LASF79
 4384 08a8 01       		.byte	0x1
 4385 08a9 69       		.byte	0x69
 4386 08aa 93080000 		.4byte	0x893
 4387 08ae 05       		.uleb128 0x5
 4388 08af 03       		.byte	0x3
 4389 08b0 00000000 		.4byte	moves
 4390 08b4 23       		.uleb128 0x23
 4391 08b5 BE040000 		.4byte	.LASF28
 4392 08b9 01       		.byte	0x1
 4393 08ba EF       		.byte	0xef
 4394 08bb 68000000 		.4byte	0x68
 4395 08bf 05       		.uleb128 0x5
 4396 08c0 03       		.byte	0x3
 4397 08c1 00000000 		.4byte	ignoreR
 4398 08c5 23       		.uleb128 0x23
 4399 08c6 B6040000 		.4byte	.LASF27
 4400 08ca 01       		.byte	0x1
 4401 08cb EF       		.byte	0xef
 4402 08cc 68000000 		.4byte	0x68
 4403 08d0 05       		.uleb128 0x5
 4404 08d1 03       		.byte	0x3
 4405 08d2 00000000 		.4byte	ignoreL
 4406 08d6 00       		.byte	0
 4407              		.section	.debug_abbrev,"",%progbits
 4408              	.Ldebug_abbrev0:
 4409 0000 01       		.uleb128 0x1
 4410 0001 11       		.uleb128 0x11
 4411 0002 01       		.byte	0x1
 4412 0003 25       		.uleb128 0x25
 4413 0004 0E       		.uleb128 0xe
 4414 0005 13       		.uleb128 0x13
 4415 0006 0B       		.uleb128 0xb
 4416 0007 03       		.uleb128 0x3
 4417 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 90


 4418 0009 1B       		.uleb128 0x1b
 4419 000a 0E       		.uleb128 0xe
 4420 000b 55       		.uleb128 0x55
 4421 000c 17       		.uleb128 0x17
 4422 000d 11       		.uleb128 0x11
 4423 000e 01       		.uleb128 0x1
 4424 000f 10       		.uleb128 0x10
 4425 0010 17       		.uleb128 0x17
 4426 0011 00       		.byte	0
 4427 0012 00       		.byte	0
 4428 0013 02       		.uleb128 0x2
 4429 0014 24       		.uleb128 0x24
 4430 0015 00       		.byte	0
 4431 0016 0B       		.uleb128 0xb
 4432 0017 0B       		.uleb128 0xb
 4433 0018 3E       		.uleb128 0x3e
 4434 0019 0B       		.uleb128 0xb
 4435 001a 03       		.uleb128 0x3
 4436 001b 0E       		.uleb128 0xe
 4437 001c 00       		.byte	0
 4438 001d 00       		.byte	0
 4439 001e 03       		.uleb128 0x3
 4440 001f 16       		.uleb128 0x16
 4441 0020 00       		.byte	0
 4442 0021 03       		.uleb128 0x3
 4443 0022 0E       		.uleb128 0xe
 4444 0023 3A       		.uleb128 0x3a
 4445 0024 0B       		.uleb128 0xb
 4446 0025 3B       		.uleb128 0x3b
 4447 0026 0B       		.uleb128 0xb
 4448 0027 49       		.uleb128 0x49
 4449 0028 13       		.uleb128 0x13
 4450 0029 00       		.byte	0
 4451 002a 00       		.byte	0
 4452 002b 04       		.uleb128 0x4
 4453 002c 24       		.uleb128 0x24
 4454 002d 00       		.byte	0
 4455 002e 0B       		.uleb128 0xb
 4456 002f 0B       		.uleb128 0xb
 4457 0030 3E       		.uleb128 0x3e
 4458 0031 0B       		.uleb128 0xb
 4459 0032 03       		.uleb128 0x3
 4460 0033 08       		.uleb128 0x8
 4461 0034 00       		.byte	0
 4462 0035 00       		.byte	0
 4463 0036 05       		.uleb128 0x5
 4464 0037 04       		.uleb128 0x4
 4465 0038 01       		.byte	0x1
 4466 0039 03       		.uleb128 0x3
 4467 003a 0E       		.uleb128 0xe
 4468 003b 0B       		.uleb128 0xb
 4469 003c 0B       		.uleb128 0xb
 4470 003d 49       		.uleb128 0x49
 4471 003e 13       		.uleb128 0x13
 4472 003f 3A       		.uleb128 0x3a
 4473 0040 0B       		.uleb128 0xb
 4474 0041 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 91


 4475 0042 0B       		.uleb128 0xb
 4476 0043 01       		.uleb128 0x1
 4477 0044 13       		.uleb128 0x13
 4478 0045 00       		.byte	0
 4479 0046 00       		.byte	0
 4480 0047 06       		.uleb128 0x6
 4481 0048 28       		.uleb128 0x28
 4482 0049 00       		.byte	0
 4483 004a 03       		.uleb128 0x3
 4484 004b 08       		.uleb128 0x8
 4485 004c 1C       		.uleb128 0x1c
 4486 004d 0B       		.uleb128 0xb
 4487 004e 00       		.byte	0
 4488 004f 00       		.byte	0
 4489 0050 07       		.uleb128 0x7
 4490 0051 28       		.uleb128 0x28
 4491 0052 00       		.byte	0
 4492 0053 03       		.uleb128 0x3
 4493 0054 0E       		.uleb128 0xe
 4494 0055 1C       		.uleb128 0x1c
 4495 0056 0B       		.uleb128 0xb
 4496 0057 00       		.byte	0
 4497 0058 00       		.byte	0
 4498 0059 08       		.uleb128 0x8
 4499 005a 13       		.uleb128 0x13
 4500 005b 01       		.byte	0x1
 4501 005c 03       		.uleb128 0x3
 4502 005d 0E       		.uleb128 0xe
 4503 005e 0B       		.uleb128 0xb
 4504 005f 0B       		.uleb128 0xb
 4505 0060 3A       		.uleb128 0x3a
 4506 0061 0B       		.uleb128 0xb
 4507 0062 3B       		.uleb128 0x3b
 4508 0063 0B       		.uleb128 0xb
 4509 0064 01       		.uleb128 0x1
 4510 0065 13       		.uleb128 0x13
 4511 0066 00       		.byte	0
 4512 0067 00       		.byte	0
 4513 0068 09       		.uleb128 0x9
 4514 0069 0D       		.uleb128 0xd
 4515 006a 00       		.byte	0
 4516 006b 03       		.uleb128 0x3
 4517 006c 0E       		.uleb128 0xe
 4518 006d 3A       		.uleb128 0x3a
 4519 006e 0B       		.uleb128 0xb
 4520 006f 3B       		.uleb128 0x3b
 4521 0070 0B       		.uleb128 0xb
 4522 0071 49       		.uleb128 0x49
 4523 0072 13       		.uleb128 0x13
 4524 0073 38       		.uleb128 0x38
 4525 0074 0B       		.uleb128 0xb
 4526 0075 00       		.byte	0
 4527 0076 00       		.byte	0
 4528 0077 0A       		.uleb128 0xa
 4529 0078 0D       		.uleb128 0xd
 4530 0079 00       		.byte	0
 4531 007a 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 92


 4532 007b 08       		.uleb128 0x8
 4533 007c 3A       		.uleb128 0x3a
 4534 007d 0B       		.uleb128 0xb
 4535 007e 3B       		.uleb128 0x3b
 4536 007f 0B       		.uleb128 0xb
 4537 0080 49       		.uleb128 0x49
 4538 0081 13       		.uleb128 0x13
 4539 0082 38       		.uleb128 0x38
 4540 0083 0B       		.uleb128 0xb
 4541 0084 00       		.byte	0
 4542 0085 00       		.byte	0
 4543 0086 0B       		.uleb128 0xb
 4544 0087 2E       		.uleb128 0x2e
 4545 0088 01       		.byte	0x1
 4546 0089 3F       		.uleb128 0x3f
 4547 008a 19       		.uleb128 0x19
 4548 008b 03       		.uleb128 0x3
 4549 008c 0E       		.uleb128 0xe
 4550 008d 3A       		.uleb128 0x3a
 4551 008e 0B       		.uleb128 0xb
 4552 008f 3B       		.uleb128 0x3b
 4553 0090 0B       		.uleb128 0xb
 4554 0091 27       		.uleb128 0x27
 4555 0092 19       		.uleb128 0x19
 4556 0093 11       		.uleb128 0x11
 4557 0094 01       		.uleb128 0x1
 4558 0095 12       		.uleb128 0x12
 4559 0096 06       		.uleb128 0x6
 4560 0097 40       		.uleb128 0x40
 4561 0098 18       		.uleb128 0x18
 4562 0099 9642     		.uleb128 0x2116
 4563 009b 19       		.uleb128 0x19
 4564 009c 01       		.uleb128 0x1
 4565 009d 13       		.uleb128 0x13
 4566 009e 00       		.byte	0
 4567 009f 00       		.byte	0
 4568 00a0 0C       		.uleb128 0xc
 4569 00a1 05       		.uleb128 0x5
 4570 00a2 00       		.byte	0
 4571 00a3 03       		.uleb128 0x3
 4572 00a4 08       		.uleb128 0x8
 4573 00a5 3A       		.uleb128 0x3a
 4574 00a6 0B       		.uleb128 0xb
 4575 00a7 3B       		.uleb128 0x3b
 4576 00a8 0B       		.uleb128 0xb
 4577 00a9 49       		.uleb128 0x49
 4578 00aa 13       		.uleb128 0x13
 4579 00ab 02       		.uleb128 0x2
 4580 00ac 18       		.uleb128 0x18
 4581 00ad 00       		.byte	0
 4582 00ae 00       		.byte	0
 4583 00af 0D       		.uleb128 0xd
 4584 00b0 0B       		.uleb128 0xb
 4585 00b1 01       		.byte	0x1
 4586 00b2 11       		.uleb128 0x11
 4587 00b3 01       		.uleb128 0x1
 4588 00b4 12       		.uleb128 0x12
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 93


 4589 00b5 06       		.uleb128 0x6
 4590 00b6 00       		.byte	0
 4591 00b7 00       		.byte	0
 4592 00b8 0E       		.uleb128 0xe
 4593 00b9 34       		.uleb128 0x34
 4594 00ba 00       		.byte	0
 4595 00bb 03       		.uleb128 0x3
 4596 00bc 08       		.uleb128 0x8
 4597 00bd 3A       		.uleb128 0x3a
 4598 00be 0B       		.uleb128 0xb
 4599 00bf 3B       		.uleb128 0x3b
 4600 00c0 0B       		.uleb128 0xb
 4601 00c1 49       		.uleb128 0x49
 4602 00c2 13       		.uleb128 0x13
 4603 00c3 02       		.uleb128 0x2
 4604 00c4 18       		.uleb128 0x18
 4605 00c5 00       		.byte	0
 4606 00c6 00       		.byte	0
 4607 00c7 0F       		.uleb128 0xf
 4608 00c8 01       		.uleb128 0x1
 4609 00c9 01       		.byte	0x1
 4610 00ca 49       		.uleb128 0x49
 4611 00cb 13       		.uleb128 0x13
 4612 00cc 01       		.uleb128 0x1
 4613 00cd 13       		.uleb128 0x13
 4614 00ce 00       		.byte	0
 4615 00cf 00       		.byte	0
 4616 00d0 10       		.uleb128 0x10
 4617 00d1 21       		.uleb128 0x21
 4618 00d2 00       		.byte	0
 4619 00d3 49       		.uleb128 0x49
 4620 00d4 13       		.uleb128 0x13
 4621 00d5 2F       		.uleb128 0x2f
 4622 00d6 0B       		.uleb128 0xb
 4623 00d7 00       		.byte	0
 4624 00d8 00       		.byte	0
 4625 00d9 11       		.uleb128 0x11
 4626 00da 0F       		.uleb128 0xf
 4627 00db 00       		.byte	0
 4628 00dc 0B       		.uleb128 0xb
 4629 00dd 0B       		.uleb128 0xb
 4630 00de 49       		.uleb128 0x49
 4631 00df 13       		.uleb128 0x13
 4632 00e0 00       		.byte	0
 4633 00e1 00       		.byte	0
 4634 00e2 12       		.uleb128 0x12
 4635 00e3 2E       		.uleb128 0x2e
 4636 00e4 01       		.byte	0x1
 4637 00e5 3F       		.uleb128 0x3f
 4638 00e6 19       		.uleb128 0x19
 4639 00e7 03       		.uleb128 0x3
 4640 00e8 0E       		.uleb128 0xe
 4641 00e9 3A       		.uleb128 0x3a
 4642 00ea 0B       		.uleb128 0xb
 4643 00eb 3B       		.uleb128 0x3b
 4644 00ec 0B       		.uleb128 0xb
 4645 00ed 27       		.uleb128 0x27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 94


 4646 00ee 19       		.uleb128 0x19
 4647 00ef 11       		.uleb128 0x11
 4648 00f0 01       		.uleb128 0x1
 4649 00f1 12       		.uleb128 0x12
 4650 00f2 06       		.uleb128 0x6
 4651 00f3 40       		.uleb128 0x40
 4652 00f4 18       		.uleb128 0x18
 4653 00f5 9742     		.uleb128 0x2117
 4654 00f7 19       		.uleb128 0x19
 4655 00f8 01       		.uleb128 0x1
 4656 00f9 13       		.uleb128 0x13
 4657 00fa 00       		.byte	0
 4658 00fb 00       		.byte	0
 4659 00fc 13       		.uleb128 0x13
 4660 00fd 2E       		.uleb128 0x2e
 4661 00fe 01       		.byte	0x1
 4662 00ff 3F       		.uleb128 0x3f
 4663 0100 19       		.uleb128 0x19
 4664 0101 03       		.uleb128 0x3
 4665 0102 0E       		.uleb128 0xe
 4666 0103 3A       		.uleb128 0x3a
 4667 0104 0B       		.uleb128 0xb
 4668 0105 3B       		.uleb128 0x3b
 4669 0106 0B       		.uleb128 0xb
 4670 0107 27       		.uleb128 0x27
 4671 0108 19       		.uleb128 0x19
 4672 0109 49       		.uleb128 0x49
 4673 010a 13       		.uleb128 0x13
 4674 010b 11       		.uleb128 0x11
 4675 010c 01       		.uleb128 0x1
 4676 010d 12       		.uleb128 0x12
 4677 010e 06       		.uleb128 0x6
 4678 010f 40       		.uleb128 0x40
 4679 0110 18       		.uleb128 0x18
 4680 0111 9742     		.uleb128 0x2117
 4681 0113 19       		.uleb128 0x19
 4682 0114 01       		.uleb128 0x1
 4683 0115 13       		.uleb128 0x13
 4684 0116 00       		.byte	0
 4685 0117 00       		.byte	0
 4686 0118 14       		.uleb128 0x14
 4687 0119 05       		.uleb128 0x5
 4688 011a 00       		.byte	0
 4689 011b 03       		.uleb128 0x3
 4690 011c 0E       		.uleb128 0xe
 4691 011d 3A       		.uleb128 0x3a
 4692 011e 0B       		.uleb128 0xb
 4693 011f 3B       		.uleb128 0x3b
 4694 0120 0B       		.uleb128 0xb
 4695 0121 49       		.uleb128 0x49
 4696 0122 13       		.uleb128 0x13
 4697 0123 02       		.uleb128 0x2
 4698 0124 18       		.uleb128 0x18
 4699 0125 00       		.byte	0
 4700 0126 00       		.byte	0
 4701 0127 15       		.uleb128 0x15
 4702 0128 34       		.uleb128 0x34
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 95


 4703 0129 00       		.byte	0
 4704 012a 03       		.uleb128 0x3
 4705 012b 0E       		.uleb128 0xe
 4706 012c 3A       		.uleb128 0x3a
 4707 012d 0B       		.uleb128 0xb
 4708 012e 3B       		.uleb128 0x3b
 4709 012f 0B       		.uleb128 0xb
 4710 0130 49       		.uleb128 0x49
 4711 0131 13       		.uleb128 0x13
 4712 0132 02       		.uleb128 0x2
 4713 0133 18       		.uleb128 0x18
 4714 0134 00       		.byte	0
 4715 0135 00       		.byte	0
 4716 0136 16       		.uleb128 0x16
 4717 0137 0B       		.uleb128 0xb
 4718 0138 01       		.byte	0x1
 4719 0139 11       		.uleb128 0x11
 4720 013a 01       		.uleb128 0x1
 4721 013b 12       		.uleb128 0x12
 4722 013c 06       		.uleb128 0x6
 4723 013d 01       		.uleb128 0x1
 4724 013e 13       		.uleb128 0x13
 4725 013f 00       		.byte	0
 4726 0140 00       		.byte	0
 4727 0141 17       		.uleb128 0x17
 4728 0142 0B       		.uleb128 0xb
 4729 0143 01       		.byte	0x1
 4730 0144 55       		.uleb128 0x55
 4731 0145 17       		.uleb128 0x17
 4732 0146 01       		.uleb128 0x1
 4733 0147 13       		.uleb128 0x13
 4734 0148 00       		.byte	0
 4735 0149 00       		.byte	0
 4736 014a 18       		.uleb128 0x18
 4737 014b 21       		.uleb128 0x21
 4738 014c 00       		.byte	0
 4739 014d 49       		.uleb128 0x49
 4740 014e 13       		.uleb128 0x13
 4741 014f 2F       		.uleb128 0x2f
 4742 0150 05       		.uleb128 0x5
 4743 0151 00       		.byte	0
 4744 0152 00       		.byte	0
 4745 0153 19       		.uleb128 0x19
 4746 0154 34       		.uleb128 0x34
 4747 0155 00       		.byte	0
 4748 0156 03       		.uleb128 0x3
 4749 0157 0E       		.uleb128 0xe
 4750 0158 3A       		.uleb128 0x3a
 4751 0159 0B       		.uleb128 0xb
 4752 015a 3B       		.uleb128 0x3b
 4753 015b 05       		.uleb128 0x5
 4754 015c 49       		.uleb128 0x49
 4755 015d 13       		.uleb128 0x13
 4756 015e 02       		.uleb128 0x2
 4757 015f 18       		.uleb128 0x18
 4758 0160 00       		.byte	0
 4759 0161 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 96


 4760 0162 1A       		.uleb128 0x1a
 4761 0163 34       		.uleb128 0x34
 4762 0164 00       		.byte	0
 4763 0165 03       		.uleb128 0x3
 4764 0166 08       		.uleb128 0x8
 4765 0167 3A       		.uleb128 0x3a
 4766 0168 0B       		.uleb128 0xb
 4767 0169 3B       		.uleb128 0x3b
 4768 016a 05       		.uleb128 0x5
 4769 016b 49       		.uleb128 0x49
 4770 016c 13       		.uleb128 0x13
 4771 016d 02       		.uleb128 0x2
 4772 016e 18       		.uleb128 0x18
 4773 016f 00       		.byte	0
 4774 0170 00       		.byte	0
 4775 0171 1B       		.uleb128 0x1b
 4776 0172 0B       		.uleb128 0xb
 4777 0173 01       		.byte	0x1
 4778 0174 55       		.uleb128 0x55
 4779 0175 17       		.uleb128 0x17
 4780 0176 00       		.byte	0
 4781 0177 00       		.byte	0
 4782 0178 1C       		.uleb128 0x1c
 4783 0179 2E       		.uleb128 0x2e
 4784 017a 01       		.byte	0x1
 4785 017b 3F       		.uleb128 0x3f
 4786 017c 19       		.uleb128 0x19
 4787 017d 03       		.uleb128 0x3
 4788 017e 0E       		.uleb128 0xe
 4789 017f 3A       		.uleb128 0x3a
 4790 0180 0B       		.uleb128 0xb
 4791 0181 3B       		.uleb128 0x3b
 4792 0182 05       		.uleb128 0x5
 4793 0183 27       		.uleb128 0x27
 4794 0184 19       		.uleb128 0x19
 4795 0185 49       		.uleb128 0x49
 4796 0186 13       		.uleb128 0x13
 4797 0187 11       		.uleb128 0x11
 4798 0188 01       		.uleb128 0x1
 4799 0189 12       		.uleb128 0x12
 4800 018a 06       		.uleb128 0x6
 4801 018b 40       		.uleb128 0x40
 4802 018c 18       		.uleb128 0x18
 4803 018d 9742     		.uleb128 0x2117
 4804 018f 19       		.uleb128 0x19
 4805 0190 01       		.uleb128 0x1
 4806 0191 13       		.uleb128 0x13
 4807 0192 00       		.byte	0
 4808 0193 00       		.byte	0
 4809 0194 1D       		.uleb128 0x1d
 4810 0195 05       		.uleb128 0x5
 4811 0196 00       		.byte	0
 4812 0197 03       		.uleb128 0x3
 4813 0198 0E       		.uleb128 0xe
 4814 0199 3A       		.uleb128 0x3a
 4815 019a 0B       		.uleb128 0xb
 4816 019b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 97


 4817 019c 05       		.uleb128 0x5
 4818 019d 49       		.uleb128 0x49
 4819 019e 13       		.uleb128 0x13
 4820 019f 02       		.uleb128 0x2
 4821 01a0 18       		.uleb128 0x18
 4822 01a1 00       		.byte	0
 4823 01a2 00       		.byte	0
 4824 01a3 1E       		.uleb128 0x1e
 4825 01a4 2E       		.uleb128 0x2e
 4826 01a5 01       		.byte	0x1
 4827 01a6 3F       		.uleb128 0x3f
 4828 01a7 19       		.uleb128 0x19
 4829 01a8 03       		.uleb128 0x3
 4830 01a9 0E       		.uleb128 0xe
 4831 01aa 3A       		.uleb128 0x3a
 4832 01ab 0B       		.uleb128 0xb
 4833 01ac 3B       		.uleb128 0x3b
 4834 01ad 05       		.uleb128 0x5
 4835 01ae 27       		.uleb128 0x27
 4836 01af 19       		.uleb128 0x19
 4837 01b0 11       		.uleb128 0x11
 4838 01b1 01       		.uleb128 0x1
 4839 01b2 12       		.uleb128 0x12
 4840 01b3 06       		.uleb128 0x6
 4841 01b4 40       		.uleb128 0x40
 4842 01b5 18       		.uleb128 0x18
 4843 01b6 9742     		.uleb128 0x2117
 4844 01b8 19       		.uleb128 0x19
 4845 01b9 01       		.uleb128 0x1
 4846 01ba 13       		.uleb128 0x13
 4847 01bb 00       		.byte	0
 4848 01bc 00       		.byte	0
 4849 01bd 1F       		.uleb128 0x1f
 4850 01be 2E       		.uleb128 0x2e
 4851 01bf 00       		.byte	0
 4852 01c0 3F       		.uleb128 0x3f
 4853 01c1 19       		.uleb128 0x19
 4854 01c2 03       		.uleb128 0x3
 4855 01c3 0E       		.uleb128 0xe
 4856 01c4 3A       		.uleb128 0x3a
 4857 01c5 0B       		.uleb128 0xb
 4858 01c6 3B       		.uleb128 0x3b
 4859 01c7 05       		.uleb128 0x5
 4860 01c8 49       		.uleb128 0x49
 4861 01c9 13       		.uleb128 0x13
 4862 01ca 11       		.uleb128 0x11
 4863 01cb 01       		.uleb128 0x1
 4864 01cc 12       		.uleb128 0x12
 4865 01cd 06       		.uleb128 0x6
 4866 01ce 40       		.uleb128 0x40
 4867 01cf 18       		.uleb128 0x18
 4868 01d0 9742     		.uleb128 0x2117
 4869 01d2 19       		.uleb128 0x19
 4870 01d3 00       		.byte	0
 4871 01d4 00       		.byte	0
 4872 01d5 20       		.uleb128 0x20
 4873 01d6 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 98


 4874 01d7 01       		.byte	0x1
 4875 01d8 3F       		.uleb128 0x3f
 4876 01d9 19       		.uleb128 0x19
 4877 01da 03       		.uleb128 0x3
 4878 01db 0E       		.uleb128 0xe
 4879 01dc 3A       		.uleb128 0x3a
 4880 01dd 0B       		.uleb128 0xb
 4881 01de 3B       		.uleb128 0x3b
 4882 01df 05       		.uleb128 0x5
 4883 01e0 27       		.uleb128 0x27
 4884 01e1 19       		.uleb128 0x19
 4885 01e2 49       		.uleb128 0x49
 4886 01e3 13       		.uleb128 0x13
 4887 01e4 11       		.uleb128 0x11
 4888 01e5 01       		.uleb128 0x1
 4889 01e6 12       		.uleb128 0x12
 4890 01e7 06       		.uleb128 0x6
 4891 01e8 40       		.uleb128 0x40
 4892 01e9 18       		.uleb128 0x18
 4893 01ea 9642     		.uleb128 0x2116
 4894 01ec 19       		.uleb128 0x19
 4895 01ed 01       		.uleb128 0x1
 4896 01ee 13       		.uleb128 0x13
 4897 01ef 00       		.byte	0
 4898 01f0 00       		.byte	0
 4899 01f1 21       		.uleb128 0x21
 4900 01f2 05       		.uleb128 0x5
 4901 01f3 00       		.byte	0
 4902 01f4 03       		.uleb128 0x3
 4903 01f5 08       		.uleb128 0x8
 4904 01f6 3A       		.uleb128 0x3a
 4905 01f7 0B       		.uleb128 0xb
 4906 01f8 3B       		.uleb128 0x3b
 4907 01f9 05       		.uleb128 0x5
 4908 01fa 49       		.uleb128 0x49
 4909 01fb 13       		.uleb128 0x13
 4910 01fc 02       		.uleb128 0x2
 4911 01fd 18       		.uleb128 0x18
 4912 01fe 00       		.byte	0
 4913 01ff 00       		.byte	0
 4914 0200 22       		.uleb128 0x22
 4915 0201 34       		.uleb128 0x34
 4916 0202 00       		.byte	0
 4917 0203 03       		.uleb128 0x3
 4918 0204 08       		.uleb128 0x8
 4919 0205 3A       		.uleb128 0x3a
 4920 0206 0B       		.uleb128 0xb
 4921 0207 3B       		.uleb128 0x3b
 4922 0208 0B       		.uleb128 0xb
 4923 0209 49       		.uleb128 0x49
 4924 020a 13       		.uleb128 0x13
 4925 020b 3F       		.uleb128 0x3f
 4926 020c 19       		.uleb128 0x19
 4927 020d 02       		.uleb128 0x2
 4928 020e 18       		.uleb128 0x18
 4929 020f 00       		.byte	0
 4930 0210 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 99


 4931 0211 23       		.uleb128 0x23
 4932 0212 34       		.uleb128 0x34
 4933 0213 00       		.byte	0
 4934 0214 03       		.uleb128 0x3
 4935 0215 0E       		.uleb128 0xe
 4936 0216 3A       		.uleb128 0x3a
 4937 0217 0B       		.uleb128 0xb
 4938 0218 3B       		.uleb128 0x3b
 4939 0219 0B       		.uleb128 0xb
 4940 021a 49       		.uleb128 0x49
 4941 021b 13       		.uleb128 0x13
 4942 021c 3F       		.uleb128 0x3f
 4943 021d 19       		.uleb128 0x19
 4944 021e 02       		.uleb128 0x2
 4945 021f 18       		.uleb128 0x18
 4946 0220 00       		.byte	0
 4947 0221 00       		.byte	0
 4948 0222 00       		.byte	0
 4949              		.section	.debug_aranges,"",%progbits
 4950 0000 64000000 		.4byte	0x64
 4951 0004 0200     		.2byte	0x2
 4952 0006 00000000 		.4byte	.Ldebug_info0
 4953 000a 04       		.byte	0x4
 4954 000b 00       		.byte	0
 4955 000c 0000     		.2byte	0
 4956 000e 0000     		.2byte	0
 4957 0010 00000000 		.4byte	.LFB1
 4958 0014 58000000 		.4byte	.LFE1-.LFB1
 4959 0018 00000000 		.4byte	.LFB2
 4960 001c 60000000 		.4byte	.LFE2-.LFB2
 4961 0020 00000000 		.4byte	.LFB3
 4962 0024 56000000 		.4byte	.LFE3-.LFB3
 4963 0028 00000000 		.4byte	.LFB4
 4964 002c 4C090000 		.4byte	.LFE4-.LFB4
 4965 0030 00000000 		.4byte	.LFB5
 4966 0034 38060000 		.4byte	.LFE5-.LFB5
 4967 0038 00000000 		.4byte	.LFB6
 4968 003c 0C010000 		.4byte	.LFE6-.LFB6
 4969 0040 00000000 		.4byte	.LFB7
 4970 0044 24010000 		.4byte	.LFE7-.LFB7
 4971 0048 00000000 		.4byte	.LFB8
 4972 004c 9C000000 		.4byte	.LFE8-.LFB8
 4973 0050 00000000 		.4byte	.LFB9
 4974 0054 18000000 		.4byte	.LFE9-.LFB9
 4975 0058 00000000 		.4byte	.LFB10
 4976 005c 78000000 		.4byte	.LFE10-.LFB10
 4977 0060 00000000 		.4byte	0
 4978 0064 00000000 		.4byte	0
 4979              		.section	.debug_ranges,"",%progbits
 4980              	.Ldebug_ranges0:
 4981 0000 F6010000 		.4byte	.LBB10
 4982 0004 E2050000 		.4byte	.LBE10
 4983 0008 F4050000 		.4byte	.LBB15
 4984 000c F6050000 		.4byte	.LBE15
 4985 0010 00000000 		.4byte	0
 4986 0014 00000000 		.4byte	0
 4987 0018 02010000 		.4byte	.LBB19
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 100


 4988 001c 70010000 		.4byte	.LBE19
 4989 0020 72010000 		.4byte	.LBB21
 4990 0024 88010000 		.4byte	.LBE21
 4991 0028 00000000 		.4byte	0
 4992 002c 00000000 		.4byte	0
 4993 0030 1A020000 		.4byte	.LBB22
 4994 0034 86020000 		.4byte	.LBE22
 4995 0038 88020000 		.4byte	.LBB24
 4996 003c 9E020000 		.4byte	.LBE24
 4997 0040 00000000 		.4byte	0
 4998 0044 00000000 		.4byte	0
 4999 0048 64030000 		.4byte	.LBB25
 5000 004c D2030000 		.4byte	.LBE25
 5001 0050 D4030000 		.4byte	.LBB27
 5002 0054 EA030000 		.4byte	.LBE27
 5003 0058 00000000 		.4byte	0
 5004 005c 00000000 		.4byte	0
 5005 0060 88040000 		.4byte	.LBB28
 5006 0064 F2040000 		.4byte	.LBE28
 5007 0068 F4040000 		.4byte	.LBB30
 5008 006c 0A050000 		.4byte	.LBE30
 5009 0070 00000000 		.4byte	0
 5010 0074 00000000 		.4byte	0
 5011 0078 00000000 		.4byte	.LFB1
 5012 007c 58000000 		.4byte	.LFE1
 5013 0080 00000000 		.4byte	.LFB2
 5014 0084 60000000 		.4byte	.LFE2
 5015 0088 00000000 		.4byte	.LFB3
 5016 008c 56000000 		.4byte	.LFE3
 5017 0090 00000000 		.4byte	.LFB4
 5018 0094 4C090000 		.4byte	.LFE4
 5019 0098 00000000 		.4byte	.LFB5
 5020 009c 38060000 		.4byte	.LFE5
 5021 00a0 00000000 		.4byte	.LFB6
 5022 00a4 0C010000 		.4byte	.LFE6
 5023 00a8 00000000 		.4byte	.LFB7
 5024 00ac 24010000 		.4byte	.LFE7
 5025 00b0 00000000 		.4byte	.LFB8
 5026 00b4 9C000000 		.4byte	.LFE8
 5027 00b8 00000000 		.4byte	.LFB9
 5028 00bc 18000000 		.4byte	.LFE9
 5029 00c0 00000000 		.4byte	.LFB10
 5030 00c4 78000000 		.4byte	.LFE10
 5031 00c8 00000000 		.4byte	0
 5032 00cc 00000000 		.4byte	0
 5033              		.section	.debug_line,"",%progbits
 5034              	.Ldebug_line0:
 5035 0000 D8040000 		.section	.debug_str,"MS",%progbits,1
 5035      02003201 
 5035      00000201 
 5035      FB0E0D00 
 5035      01010101 
 5036              	.LASF17:
 5037 0000 4F726965 		.ascii	"OrientationState\000"
 5037      6E746174 
 5037      696F6E53 
 5037      74617465 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 101


 5037      00
 5038              	.LASF37:
 5039 0011 64696A6B 		.ascii	"dijkstra\000"
 5039      73747261 
 5039      00
 5040              	.LASF25:
 5041 001a 536B6970 		.ascii	"Skip\000"
 5041      00
 5042              	.LASF34:
 5043 001f 726F7773 		.ascii	"rows\000"
 5043      00
 5044              	.LASF65:
 5045 0024 69735661 		.ascii	"isValidMove\000"
 5045      6C69644D 
 5045      6F766500 
 5046              	.LASF0:
 5047 0030 7369676E 		.ascii	"signed char\000"
 5047      65642063 
 5047      68617200 
 5048              	.LASF12:
 5049 003c 5F5F7569 		.ascii	"__uint8_t\000"
 5049      6E74385F 
 5049      7400
 5050              	.LASF26:
 5051 0046 64697265 		.ascii	"direction\000"
 5051      6374696F 
 5051      6E00
 5052              	.LASF80:
 5053 0050 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5053      43313120 
 5053      352E342E 
 5053      31203230 
 5053      31363036 
 5054 0083 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5054      20726576 
 5054      6973696F 
 5054      6E203233 
 5054      37373135 
 5055 00b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5055      66756E63 
 5055      74696F6E 
 5055      2D736563 
 5055      74696F6E 
 5056              	.LASF46:
 5057 00de 73746570 		.ascii	"stepNum\000"
 5057      4E756D00 
 5058              	.LASF7:
 5059 00e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 5059      206C6F6E 
 5059      6720756E 
 5059      7369676E 
 5059      65642069 
 5060              	.LASF29:
 5061 00fd 65787065 		.ascii	"expectedOrientation\000"
 5061      63746564 
 5061      4F726965 
 5061      6E746174 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 102


 5061      696F6E00 
 5062              	.LASF45:
 5063 0111 64697374 		.ascii	"distances\000"
 5063      616E6365 
 5063      7300
 5064              	.LASF22:
 5065 011b 75547572 		.ascii	"uTurn\000"
 5065      6E00
 5066              	.LASF38:
 5067 0121 73746172 		.ascii	"startlocation\000"
 5067      746C6F63 
 5067      6174696F 
 5067      6E00
 5068              	.LASF32:
 5069 012f 7072696E 		.ascii	"printMap\000"
 5069      744D6170 
 5069      00
 5070              	.LASF6:
 5071 0138 6C6F6E67 		.ascii	"long long int\000"
 5071      206C6F6E 
 5071      6720696E 
 5071      7400
 5072              	.LASF82:
 5073 0146 483A5C44 		.ascii	"H:\\Documents\\GitHub\\301-Robot\\psoc student pack"
 5073      6F63756D 
 5073      656E7473 
 5073      5C476974 
 5073      4875625C 
 5074 0175 5C70736F 		.ascii	"\\psoc_code_base\\CS301_Class.cydsn\000"
 5074      635F636F 
 5074      64655F62 
 5074      6173655C 
 5074      43533330 
 5075              	.LASF54:
 5076 0197 6E657743 		.ascii	"newCol\000"
 5076      6F6C00
 5077              	.LASF30:
 5078 019e 496E7374 		.ascii	"Instruction\000"
 5078      72756374 
 5078      696F6E00 
 5079              	.LASF50:
 5080 01aa 63757272 		.ascii	"currentCol\000"
 5080      656E7443 
 5080      6F6C00
 5081              	.LASF4:
 5082 01b5 6C6F6E67 		.ascii	"long int\000"
 5082      20696E74 
 5082      00
 5083              	.LASF39:
 5084 01be 74617267 		.ascii	"targetlocation\000"
 5084      65746C6F 
 5084      63617469 
 5084      6F6E00
 5085              	.LASF23:
 5086 01cd 466F7277 		.ascii	"ForwardUntilTarget\000"
 5086      61726455 
 5086      6E74696C 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 103


 5086      54617267 
 5086      657400
 5087              	.LASF31:
 5088 01e0 4C6F6361 		.ascii	"Location\000"
 5088      74696F6E 
 5088      00
 5089              	.LASF70:
 5090 01e9 74617267 		.ascii	"targetRow\000"
 5090      6574526F 
 5090      7700
 5091              	.LASF74:
 5092 01f3 696E7374 		.ascii	"instructionsList\000"
 5092      72756374 
 5092      696F6E73 
 5092      4C697374 
 5092      00
 5093              	.LASF66:
 5094 0204 63686563 		.ascii	"checkPathDirection\000"
 5094      6B506174 
 5094      68446972 
 5094      65637469 
 5094      6F6E00
 5095              	.LASF78:
 5096 0217 6C697374 		.ascii	"list_of_optimal_coordinates\000"
 5096      5F6F665F 
 5096      6F707469 
 5096      6D616C5F 
 5096      636F6F72 
 5097              	.LASF8:
 5098 0233 756E7369 		.ascii	"unsigned int\000"
 5098      676E6564 
 5098      20696E74 
 5098      00
 5099              	.LASF47:
 5100 0240 73686F72 		.ascii	"shortestDist\000"
 5100      74657374 
 5100      44697374 
 5100      00
 5101              	.LASF5:
 5102 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 5102      20756E73 
 5102      69676E65 
 5102      6420696E 
 5102      7400
 5103              	.LASF61:
 5104 025f 74617267 		.ascii	"targetOrientation\000"
 5104      65744F72 
 5104      69656E74 
 5104      6174696F 
 5104      6E00
 5105              	.LASF3:
 5106 0271 73686F72 		.ascii	"short unsigned int\000"
 5106      7420756E 
 5106      7369676E 
 5106      65642069 
 5106      6E7400
 5107              	.LASF24:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 104


 5108 0284 53746F70 		.ascii	"StopAtTarget\000"
 5108      41745461 
 5108      72676574 
 5108      00
 5109              	.LASF53:
 5110 0291 6E657752 		.ascii	"newRow\000"
 5110      6F7700
 5111              	.LASF44:
 5112 0298 70715369 		.ascii	"pqSize\000"
 5112      7A6500
 5113              	.LASF56:
 5114 029f 67657450 		.ascii	"getPathInstructions\000"
 5114      61746849 
 5114      6E737472 
 5114      75637469 
 5114      6F6E7300 
 5115              	.LASF15:
 5116 02b3 4C656674 		.ascii	"Left\000"
 5116      00
 5117              	.LASF10:
 5118 02b8 73697A65 		.ascii	"sizetype\000"
 5118      74797065 
 5118      00
 5119              	.LASF9:
 5120 02c1 6C6F6E67 		.ascii	"long double\000"
 5120      20646F75 
 5120      626C6500 
 5121              	.LASF49:
 5122 02cd 63757272 		.ascii	"currentRow\000"
 5122      656E7452 
 5122      6F7700
 5123              	.LASF67:
 5124 02d8 63686563 		.ascii	"checkIgnoreTurn\000"
 5124      6B49676E 
 5124      6F726554 
 5124      75726E00 
 5125              	.LASF20:
 5126 02e8 77616974 		.ascii	"waitForLeftTurn\000"
 5126      466F724C 
 5126      65667454 
 5126      75726E00 
 5127              	.LASF52:
 5128 02f8 63757272 		.ascii	"current\000"
 5128      656E7400 
 5129              	.LASF64:
 5130 0300 61745461 		.ascii	"atTarget\000"
 5130      72676574 
 5130      00
 5131              	.LASF51:
 5132 0309 70617468 		.ascii	"pathIndex\000"
 5132      496E6465 
 5132      7800
 5133              	.LASF33:
 5134 0313 636C6561 		.ascii	"clearMap\000"
 5134      724D6170 
 5134      00
 5135              	.LASF62:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 105


 5136 031c 6E657744 		.ascii	"newDirection\000"
 5136      69726563 
 5136      74696F6E 
 5136      00
 5137              	.LASF36:
 5138 0329 5F426F6F 		.ascii	"_Bool\000"
 5138      6C00
 5139              	.LASF1:
 5140 032f 756E7369 		.ascii	"unsigned char\000"
 5140      676E6564 
 5140      20636861 
 5140      7200
 5141              	.LASF18:
 5142 033d 496E7374 		.ascii	"InstructionDirection\000"
 5142      72756374 
 5142      696F6E44 
 5142      69726563 
 5142      74696F6E 
 5143              	.LASF69:
 5144 0352 67657454 		.ascii	"getTargetOrientation\000"
 5144      61726765 
 5144      744F7269 
 5144      656E7461 
 5144      74696F6E 
 5145              	.LASF72:
 5146 0367 66696E64 		.ascii	"findPath\000"
 5146      50617468 
 5146      00
 5147              	.LASF2:
 5148 0370 73686F72 		.ascii	"short int\000"
 5148      7420696E 
 5148      7400
 5149              	.LASF59:
 5150 037a 74617267 		.ascii	"targetLocation\000"
 5150      65744C6F 
 5150      63617469 
 5150      6F6E00
 5151              	.LASF19:
 5152 0389 476F466F 		.ascii	"GoForward\000"
 5152      72776172 
 5152      6400
 5153              	.LASF16:
 5154 0393 52696768 		.ascii	"Right\000"
 5154      7400
 5155              	.LASF57:
 5156 0399 6E756D53 		.ascii	"numSteps\000"
 5156      74657073 
 5156      00
 5157              	.LASF60:
 5158 03a2 6C697374 		.ascii	"listIndex\000"
 5158      496E6465 
 5158      7800
 5159              	.LASF48:
 5160 03ac 72657453 		.ascii	"retSteps\000"
 5160      74657073 
 5160      00
 5161              	.LASF42:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 106


 5162 03b5 6C6F6361 		.ascii	"location\000"
 5162      74696F6E 
 5162      00
 5163              	.LASF40:
 5164 03be 76697369 		.ascii	"visitedMap\000"
 5164      7465644D 
 5164      617000
 5165              	.LASF11:
 5166 03c9 63686172 		.ascii	"char\000"
 5166      00
 5167              	.LASF77:
 5168 03ce 73746172 		.ascii	"start_pos\000"
 5168      745F706F 
 5168      7300
 5169              	.LASF75:
 5170 03d8 70726576 		.ascii	"previousRobotOrientation\000"
 5170      696F7573 
 5170      526F626F 
 5170      744F7269 
 5170      656E7461 
 5171              	.LASF43:
 5172 03f1 64697374 		.ascii	"distance\000"
 5172      616E6365 
 5172      00
 5173              	.LASF73:
 5174 03fa 666F6F64 		.ascii	"food_list\000"
 5174      5F6C6973 
 5174      7400
 5175              	.LASF14:
 5176 0404 446F776E 		.ascii	"Down\000"
 5176      00
 5177              	.LASF76:
 5178 0409 63757272 		.ascii	"currentRobotOrientation\000"
 5178      656E7452 
 5178      6F626F74 
 5178      4F726965 
 5178      6E746174 
 5179              	.LASF55:
 5180 0421 6E657744 		.ascii	"newDistance\000"
 5180      69737461 
 5180      6E636500 
 5181              	.LASF81:
 5182 042d 70617468 		.ascii	"pathfinding.c\000"
 5182      66696E64 
 5182      696E672E 
 5182      6300
 5183              	.LASF68:
 5184 043b 726F626F 		.ascii	"robotOrientation\000"
 5184      744F7269 
 5184      656E7461 
 5184      74696F6E 
 5184      00
 5185              	.LASF21:
 5186 044c 77616974 		.ascii	"waitForRightTurn\000"
 5186      466F7252 
 5186      69676874 
 5186      5475726E 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccu1C4Ad.s 			page 107


 5186      00
 5187              	.LASF41:
 5188 045d 5072696F 		.ascii	"PriorityQueue\000"
 5188      72697479 
 5188      51756575 
 5188      6500
 5189              	.LASF58:
 5190 046b 73746172 		.ascii	"startLocation\000"
 5190      744C6F63 
 5190      6174696F 
 5190      6E00
 5191              	.LASF13:
 5192 0479 75696E74 		.ascii	"uint8_t\000"
 5192      385F7400 
 5193              	.LASF83:
 5194 0481 696E7374 		.ascii	"instructionsListLength\000"
 5194      72756374 
 5194      696F6E73 
 5194      4C697374 
 5194      4C656E67 
 5195              	.LASF79:
 5196 0498 6D6F7665 		.ascii	"moves\000"
 5196      7300
 5197              	.LASF71:
 5198 049e 74617267 		.ascii	"targetCol\000"
 5198      6574436F 
 5198      6C00
 5199              	.LASF35:
 5200 04a8 636F6C73 		.ascii	"cols\000"
 5200      00
 5201              	.LASF63:
 5202 04ad 6E657874 		.ascii	"nextStep\000"
 5202      53746570 
 5202      00
 5203              	.LASF27:
 5204 04b6 69676E6F 		.ascii	"ignoreL\000"
 5204      72654C00 
 5205              	.LASF28:
 5206 04be 69676E6F 		.ascii	"ignoreR\000"
 5206      72655200 
 5207              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
